command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	358648	File	data/converged/CVE-2018-16863_ghostpdl/base_gdevvec.c								
ANR	358649	Function	gdev_vector_setflat	44:0:1273:1355							
ANR	358650	FunctionDef	"gdev_vector_setflat (gx_device_vector * vdev , double flatness)"		358649	0					
ANR	358651	CompoundStatement		46:0:1339:1355	358649	0					
ANR	358652	ReturnStatement	return 0 ;	47:4:1345:1353	358649	0	True				
ANR	358653	PrimaryExpression	0		358649	0					
ANR	358654	ReturnType	int		358649	1					
ANR	358655	Identifier	gdev_vector_setflat		358649	2					
ANR	358656	ParameterList	"gx_device_vector * vdev , double flatness"		358649	3					
ANR	358657	Parameter	gx_device_vector * vdev	45:20:1297:1319	358649	0	True				
ANR	358658	ParameterType	gx_device_vector *		358649	0					
ANR	358659	Identifier	vdev		358649	1					
ANR	358660	Parameter	double flatness	45:45:1322:1336	358649	1	True				
ANR	358661	ParameterType	double		358649	0					
ANR	358662	Identifier	flatness		358649	1					
ANR	358663	CFGEntryNode	ENTRY		358649		True				
ANR	358664	CFGExitNode	EXIT		358649		True				
ANR	358665	Symbol	flatness		358649						
ANR	358666	Symbol	vdev		358649						
ANR	358667	Function	coord_between	51:0:1395:1555							
ANR	358668	FunctionDef	"coord_between (fixed start , fixed mid , fixed end)"		358667	0					
ANR	358669	CompoundStatement		53:0:1456:1555	358667	0					
ANR	358670	ReturnStatement	return ( start <= end ? start <= mid && mid <= end : start >= mid && mid >= end ) ;	54:4:1462:1553	358667	0	True				
ANR	358671	ConditionalExpression	start <= end ? start <= mid && mid <= end : start >= mid && mid >= end		358667	0					
ANR	358672	Condition	start <= end		358667	0					
ANR	358673	RelationalExpression	start <= end		358667	0		<=			
ANR	358674	Identifier	start		358667	0					
ANR	358675	Identifier	end		358667	1					
ANR	358676	AndExpression	start <= mid && mid <= end		358667	1		&&			
ANR	358677	RelationalExpression	start <= mid		358667	0		<=			
ANR	358678	Identifier	start		358667	0					
ANR	358679	Identifier	mid		358667	1					
ANR	358680	RelationalExpression	mid <= end		358667	1		<=			
ANR	358681	Identifier	mid		358667	0					
ANR	358682	Identifier	end		358667	1					
ANR	358683	AndExpression	start >= mid && mid >= end		358667	2		&&			
ANR	358684	RelationalExpression	start >= mid		358667	0		>=			
ANR	358685	Identifier	start		358667	0					
ANR	358686	Identifier	mid		358667	1					
ANR	358687	RelationalExpression	mid >= end		358667	1		>=			
ANR	358688	Identifier	mid		358667	0					
ANR	358689	Identifier	end		358667	1					
ANR	358690	ReturnType	static bool		358667	1					
ANR	358691	Identifier	coord_between		358667	2					
ANR	358692	ParameterList	"fixed start , fixed mid , fixed end"		358667	3					
ANR	358693	Parameter	fixed start	52:14:1421:1431	358667	0	True				
ANR	358694	ParameterType	fixed		358667	0					
ANR	358695	Identifier	start		358667	1					
ANR	358696	Parameter	fixed mid	52:27:1434:1442	358667	1	True				
ANR	358697	ParameterType	fixed		358667	0					
ANR	358698	Identifier	mid		358667	1					
ANR	358699	Parameter	fixed end	52:38:1445:1453	358667	2	True				
ANR	358700	ParameterType	fixed		358667	0					
ANR	358701	Identifier	end		358667	1					
ANR	358702	CFGEntryNode	ENTRY		358667		True				
ANR	358703	CFGExitNode	EXIT		358667		True				
ANR	358704	Symbol	start		358667						
ANR	358705	Symbol	mid		358667						
ANR	358706	Symbol	end		358667						
ANR	358707	Function	gdev_vector_dopath	57:0:1557:7554							
ANR	358708	FunctionDef	"gdev_vector_dopath (gx_device_vector * vdev , const gx_path * ppath , gx_path_type_t type , const gs_matrix * pmat)"		358707	0					
ANR	358709	CompoundStatement		60:0:1690:7554	358707	0					
ANR	358710	IdentifierDeclStatement	bool do_close = ( type & ( gx_path_type_stroke | gx_path_type_always_close ) ) != 0 ;	61:4:1696:1783	358707	0	True				
ANR	358711	IdentifierDecl	do_close = ( type & ( gx_path_type_stroke | gx_path_type_always_close ) ) != 0		358707	0					
ANR	358712	IdentifierDeclType	bool		358707	0					
ANR	358713	Identifier	do_close		358707	1					
ANR	358714	AssignmentExpression	do_close = ( type & ( gx_path_type_stroke | gx_path_type_always_close ) ) != 0		358707	2		=			
ANR	358715	Identifier	do_close		358707	0					
ANR	358716	EqualityExpression	( type & ( gx_path_type_stroke | gx_path_type_always_close ) ) != 0		358707	1		!=			
ANR	358717	BitAndExpression	type & ( gx_path_type_stroke | gx_path_type_always_close )		358707	0		&			
ANR	358718	Identifier	type		358707	0					
ANR	358719	InclusiveOrExpression	gx_path_type_stroke | gx_path_type_always_close		358707	1		|			
ANR	358720	Identifier	gx_path_type_stroke		358707	0					
ANR	358721	Identifier	gx_path_type_always_close		358707	1					
ANR	358722	PrimaryExpression	0		358707	1					
ANR	358723	IdentifierDeclStatement	gs_fixed_rect rbox ;	63:4:1789:1807	358707	1	True				
ANR	358724	IdentifierDecl	rbox		358707	0					
ANR	358725	IdentifierDeclType	gs_fixed_rect		358707	0					
ANR	358726	Identifier	rbox		358707	1					
ANR	358727	IdentifierDeclStatement	"gx_path_rectangular_type rtype = gx_path_is_rectangular ( ppath , & rbox ) ;"	64:4:1813:1882	358707	2	True				
ANR	358728	IdentifierDecl	"rtype = gx_path_is_rectangular ( ppath , & rbox )"		358707	0					
ANR	358729	IdentifierDeclType	gx_path_rectangular_type		358707	0					
ANR	358730	Identifier	rtype		358707	1					
ANR	358731	AssignmentExpression	"rtype = gx_path_is_rectangular ( ppath , & rbox )"		358707	2		=			
ANR	358732	Identifier	rtype		358707	0					
ANR	358733	CallExpression	"gx_path_is_rectangular ( ppath , & rbox )"		358707	1					
ANR	358734	Callee	gx_path_is_rectangular		358707	0					
ANR	358735	Identifier	gx_path_is_rectangular		358707	0					
ANR	358736	ArgumentList	ppath		358707	1					
ANR	358737	Argument	ppath		358707	0					
ANR	358738	Identifier	ppath		358707	0					
ANR	358739	Argument	& rbox		358707	1					
ANR	358740	UnaryOperationExpression	& rbox		358707	0					
ANR	358741	UnaryOperator	&		358707	0					
ANR	358742	Identifier	rbox		358707	1					
ANR	358743	IdentifierDeclStatement	gs_path_enum cenum ;	65:4:1888:1906	358707	3	True				
ANR	358744	IdentifierDecl	cenum		358707	0					
ANR	358745	IdentifierDeclType	gs_path_enum		358707	0					
ANR	358746	Identifier	cenum		358707	1					
ANR	358747	IdentifierDeclStatement	gdev_vector_dopath_state_t state ;	66:4:1912:1944	358707	4	True				
ANR	358748	IdentifierDecl	state		358707	0					
ANR	358749	IdentifierDeclType	gdev_vector_dopath_state_t		358707	0					
ANR	358750	Identifier	state		358707	1					
ANR	358751	IdentifierDeclStatement	"gs_fixed_point line_start , line_end ;"	67:4:1950:1985	358707	5	True				
ANR	358752	IdentifierDecl	line_start		358707	0					
ANR	358753	IdentifierDeclType	gs_fixed_point		358707	0					
ANR	358754	Identifier	line_start		358707	1					
ANR	358755	IdentifierDecl	line_end		358707	1					
ANR	358756	IdentifierDeclType	gs_fixed_point		358707	0					
ANR	358757	Identifier	line_end		358707	1					
ANR	358758	IdentifierDeclStatement	bool incomplete_line = false ;	68:4:1991:2019	358707	6	True				
ANR	358759	IdentifierDecl	incomplete_line = false		358707	0					
ANR	358760	IdentifierDeclType	bool		358707	0					
ANR	358761	Identifier	incomplete_line		358707	1					
ANR	358762	AssignmentExpression	incomplete_line = false		358707	2		=			
ANR	358763	Identifier	false		358707	0					
ANR	358764	Identifier	false		358707	1					
ANR	358765	IdentifierDeclStatement	bool need_moveto = false ;	69:4:2025:2049	358707	7	True				
ANR	358766	IdentifierDecl	need_moveto = false		358707	0					
ANR	358767	IdentifierDeclType	bool		358707	0					
ANR	358768	Identifier	need_moveto		358707	1					
ANR	358769	AssignmentExpression	need_moveto = false		358707	2		=			
ANR	358770	Identifier	false		358707	0					
ANR	358771	Identifier	false		358707	1					
ANR	358772	IdentifierDeclStatement	int code ;	70:4:2055:2063	358707	8	True				
ANR	358773	IdentifierDecl	code		358707	0					
ANR	358774	IdentifierDeclType	int		358707	0					
ANR	358775	Identifier	code		358707	1					
ANR	358776	ExpressionStatement	"gdev_vector_dopath_init ( & state , vdev , type , pmat )"	72:4:2070:2119	358707	9	True				
ANR	358777	CallExpression	"gdev_vector_dopath_init ( & state , vdev , type , pmat )"		358707	0					
ANR	358778	Callee	gdev_vector_dopath_init		358707	0					
ANR	358779	Identifier	gdev_vector_dopath_init		358707	0					
ANR	358780	ArgumentList	& state		358707	1					
ANR	358781	Argument	& state		358707	0					
ANR	358782	UnaryOperationExpression	& state		358707	0					
ANR	358783	UnaryOperator	&		358707	0					
ANR	358784	Identifier	state		358707	1					
ANR	358785	Argument	vdev		358707	1					
ANR	358786	Identifier	vdev		358707	0					
ANR	358787	Argument	type		358707	2					
ANR	358788	Identifier	type		358707	0					
ANR	358789	Argument	pmat		358707	3					
ANR	358790	Identifier	pmat		358707	0					
ANR	358791	IfStatement	"if ( rtype != prt_none && ( ! ( type & gx_path_type_stroke ) || rtype == prt_closed ) && ( pmat == 0 || is_xxyy ( pmat ) || is_xyyx ( pmat ) ) && ( state . scale_mat . xx == 1.0 && state . scale_mat . yy == 1.0 && is_xxyy ( & state . scale_mat ) && is_fzero2 ( state . scale_mat . tx , state . scale_mat . ty ) ) )"		358707	10					
ANR	358792	Condition	"rtype != prt_none && ( ! ( type & gx_path_type_stroke ) || rtype == prt_closed ) && ( pmat == 0 || is_xxyy ( pmat ) || is_xyyx ( pmat ) ) && ( state . scale_mat . xx == 1.0 && state . scale_mat . yy == 1.0 && is_xxyy ( & state . scale_mat ) && is_fzero2 ( state . scale_mat . tx , state . scale_mat . ty ) )"	79:8:2395:2702	358707	0	True				
ANR	358793	AndExpression	"rtype != prt_none && ( ! ( type & gx_path_type_stroke ) || rtype == prt_closed ) && ( pmat == 0 || is_xxyy ( pmat ) || is_xyyx ( pmat ) ) && ( state . scale_mat . xx == 1.0 && state . scale_mat . yy == 1.0 && is_xxyy ( & state . scale_mat ) && is_fzero2 ( state . scale_mat . tx , state . scale_mat . ty ) )"		358707	0		&&			
ANR	358794	EqualityExpression	rtype != prt_none		358707	0		!=			
ANR	358795	Identifier	rtype		358707	0					
ANR	358796	Identifier	prt_none		358707	1					
ANR	358797	AndExpression	"( ! ( type & gx_path_type_stroke ) || rtype == prt_closed ) && ( pmat == 0 || is_xxyy ( pmat ) || is_xyyx ( pmat ) ) && ( state . scale_mat . xx == 1.0 && state . scale_mat . yy == 1.0 && is_xxyy ( & state . scale_mat ) && is_fzero2 ( state . scale_mat . tx , state . scale_mat . ty ) )"		358707	1		&&			
ANR	358798	OrExpression	! ( type & gx_path_type_stroke ) || rtype == prt_closed		358707	0		||			
ANR	358799	UnaryOperationExpression	! ( type & gx_path_type_stroke )		358707	0					
ANR	358800	UnaryOperator	!		358707	0					
ANR	358801	BitAndExpression	type & gx_path_type_stroke		358707	1		&			
ANR	358802	Identifier	type		358707	0					
ANR	358803	Identifier	gx_path_type_stroke		358707	1					
ANR	358804	EqualityExpression	rtype == prt_closed		358707	1		==			
ANR	358805	Identifier	rtype		358707	0					
ANR	358806	Identifier	prt_closed		358707	1					
ANR	358807	AndExpression	"( pmat == 0 || is_xxyy ( pmat ) || is_xyyx ( pmat ) ) && ( state . scale_mat . xx == 1.0 && state . scale_mat . yy == 1.0 && is_xxyy ( & state . scale_mat ) && is_fzero2 ( state . scale_mat . tx , state . scale_mat . ty ) )"		358707	1		&&			
ANR	358808	OrExpression	pmat == 0 || is_xxyy ( pmat ) || is_xyyx ( pmat )		358707	0		||			
ANR	358809	EqualityExpression	pmat == 0		358707	0		==			
ANR	358810	Identifier	pmat		358707	0					
ANR	358811	PrimaryExpression	0		358707	1					
ANR	358812	OrExpression	is_xxyy ( pmat ) || is_xyyx ( pmat )		358707	1		||			
ANR	358813	CallExpression	is_xxyy ( pmat )		358707	0					
ANR	358814	Callee	is_xxyy		358707	0					
ANR	358815	Identifier	is_xxyy		358707	0					
ANR	358816	ArgumentList	pmat		358707	1					
ANR	358817	Argument	pmat		358707	0					
ANR	358818	Identifier	pmat		358707	0					
ANR	358819	CallExpression	is_xyyx ( pmat )		358707	1					
ANR	358820	Callee	is_xyyx		358707	0					
ANR	358821	Identifier	is_xyyx		358707	0					
ANR	358822	ArgumentList	pmat		358707	1					
ANR	358823	Argument	pmat		358707	0					
ANR	358824	Identifier	pmat		358707	0					
ANR	358825	AndExpression	"state . scale_mat . xx == 1.0 && state . scale_mat . yy == 1.0 && is_xxyy ( & state . scale_mat ) && is_fzero2 ( state . scale_mat . tx , state . scale_mat . ty )"		358707	1		&&			
ANR	358826	EqualityExpression	state . scale_mat . xx == 1.0		358707	0		==			
ANR	358827	MemberAccess	state . scale_mat . xx		358707	0					
ANR	358828	MemberAccess	state . scale_mat		358707	0					
ANR	358829	Identifier	state		358707	0					
ANR	358830	Identifier	scale_mat		358707	1					
ANR	358831	Identifier	xx		358707	1					
ANR	358832	PrimaryExpression	1.0		358707	1					
ANR	358833	AndExpression	"state . scale_mat . yy == 1.0 && is_xxyy ( & state . scale_mat ) && is_fzero2 ( state . scale_mat . tx , state . scale_mat . ty )"		358707	1		&&			
ANR	358834	EqualityExpression	state . scale_mat . yy == 1.0		358707	0		==			
ANR	358835	MemberAccess	state . scale_mat . yy		358707	0					
ANR	358836	MemberAccess	state . scale_mat		358707	0					
ANR	358837	Identifier	state		358707	0					
ANR	358838	Identifier	scale_mat		358707	1					
ANR	358839	Identifier	yy		358707	1					
ANR	358840	PrimaryExpression	1.0		358707	1					
ANR	358841	AndExpression	"is_xxyy ( & state . scale_mat ) && is_fzero2 ( state . scale_mat . tx , state . scale_mat . ty )"		358707	1		&&			
ANR	358842	CallExpression	is_xxyy ( & state . scale_mat )		358707	0					
ANR	358843	Callee	is_xxyy		358707	0					
ANR	358844	Identifier	is_xxyy		358707	0					
ANR	358845	ArgumentList	& state . scale_mat		358707	1					
ANR	358846	Argument	& state . scale_mat		358707	0					
ANR	358847	UnaryOperationExpression	& state . scale_mat		358707	0					
ANR	358848	UnaryOperator	&		358707	0					
ANR	358849	MemberAccess	state . scale_mat		358707	1					
ANR	358850	Identifier	state		358707	0					
ANR	358851	Identifier	scale_mat		358707	1					
ANR	358852	CallExpression	"is_fzero2 ( state . scale_mat . tx , state . scale_mat . ty )"		358707	1					
ANR	358853	Callee	is_fzero2		358707	0					
ANR	358854	Identifier	is_fzero2		358707	0					
ANR	358855	ArgumentList	state . scale_mat . tx		358707	1					
ANR	358856	Argument	state . scale_mat . tx		358707	0					
ANR	358857	MemberAccess	state . scale_mat . tx		358707	0					
ANR	358858	MemberAccess	state . scale_mat		358707	0					
ANR	358859	Identifier	state		358707	0					
ANR	358860	Identifier	scale_mat		358707	1					
ANR	358861	Identifier	tx		358707	1					
ANR	358862	Argument	state . scale_mat . ty		358707	1					
ANR	358863	MemberAccess	state . scale_mat . ty		358707	0					
ANR	358864	MemberAccess	state . scale_mat		358707	0					
ANR	358865	Identifier	state		358707	0					
ANR	358866	Identifier	scale_mat		358707	1					
ANR	358867	Identifier	ty		358707	1					
ANR	358868	CompoundStatement		27:8:1033:1046	358707	1					
ANR	358869	IdentifierDeclStatement	"gs_point p , q ;"	86:8:2724:2737	358707	0	True				
ANR	358870	IdentifierDecl	p		358707	0					
ANR	358871	IdentifierDeclType	gs_point		358707	0					
ANR	358872	Identifier	p		358707	1					
ANR	358873	IdentifierDecl	q		358707	1					
ANR	358874	IdentifierDeclType	gs_point		358707	0					
ANR	358875	Identifier	q		358707	1					
ANR	358876	ExpressionStatement	"gs_point_transform_inverse ( ( double ) rbox . p . x , ( double ) rbox . p . y , & state . scale_mat , & p )"	88:8:2748:2867	358707	1	True				
ANR	358877	CallExpression	"gs_point_transform_inverse ( ( double ) rbox . p . x , ( double ) rbox . p . y , & state . scale_mat , & p )"		358707	0					
ANR	358878	Callee	gs_point_transform_inverse		358707	0					
ANR	358879	Identifier	gs_point_transform_inverse		358707	0					
ANR	358880	ArgumentList	( double ) rbox . p . x		358707	1					
ANR	358881	Argument	( double ) rbox . p . x		358707	0					
ANR	358882	CastExpression	( double ) rbox . p . x		358707	0					
ANR	358883	CastTarget	double		358707	0					
ANR	358884	MemberAccess	rbox . p . x		358707	1					
ANR	358885	MemberAccess	rbox . p		358707	0					
ANR	358886	Identifier	rbox		358707	0					
ANR	358887	Identifier	p		358707	1					
ANR	358888	Identifier	x		358707	1					
ANR	358889	Argument	( double ) rbox . p . y		358707	1					
ANR	358890	CastExpression	( double ) rbox . p . y		358707	0					
ANR	358891	CastTarget	double		358707	0					
ANR	358892	MemberAccess	rbox . p . y		358707	1					
ANR	358893	MemberAccess	rbox . p		358707	0					
ANR	358894	Identifier	rbox		358707	0					
ANR	358895	Identifier	p		358707	1					
ANR	358896	Identifier	y		358707	1					
ANR	358897	Argument	& state . scale_mat		358707	2					
ANR	358898	UnaryOperationExpression	& state . scale_mat		358707	0					
ANR	358899	UnaryOperator	&		358707	0					
ANR	358900	MemberAccess	state . scale_mat		358707	1					
ANR	358901	Identifier	state		358707	0					
ANR	358902	Identifier	scale_mat		358707	1					
ANR	358903	Argument	& p		358707	3					
ANR	358904	UnaryOperationExpression	& p		358707	0					
ANR	358905	UnaryOperator	&		358707	0					
ANR	358906	Identifier	p		358707	1					
ANR	358907	ExpressionStatement	"gs_point_transform_inverse ( ( double ) rbox . q . x , ( double ) rbox . q . y , & state . scale_mat , & q )"	90:8:2877:2996	358707	2	True				
ANR	358908	CallExpression	"gs_point_transform_inverse ( ( double ) rbox . q . x , ( double ) rbox . q . y , & state . scale_mat , & q )"		358707	0					
ANR	358909	Callee	gs_point_transform_inverse		358707	0					
ANR	358910	Identifier	gs_point_transform_inverse		358707	0					
ANR	358911	ArgumentList	( double ) rbox . q . x		358707	1					
ANR	358912	Argument	( double ) rbox . q . x		358707	0					
ANR	358913	CastExpression	( double ) rbox . q . x		358707	0					
ANR	358914	CastTarget	double		358707	0					
ANR	358915	MemberAccess	rbox . q . x		358707	1					
ANR	358916	MemberAccess	rbox . q		358707	0					
ANR	358917	Identifier	rbox		358707	0					
ANR	358918	Identifier	q		358707	1					
ANR	358919	Identifier	x		358707	1					
ANR	358920	Argument	( double ) rbox . q . y		358707	1					
ANR	358921	CastExpression	( double ) rbox . q . y		358707	0					
ANR	358922	CastTarget	double		358707	0					
ANR	358923	MemberAccess	rbox . q . y		358707	1					
ANR	358924	MemberAccess	rbox . q		358707	0					
ANR	358925	Identifier	rbox		358707	0					
ANR	358926	Identifier	q		358707	1					
ANR	358927	Identifier	y		358707	1					
ANR	358928	Argument	& state . scale_mat		358707	2					
ANR	358929	UnaryOperationExpression	& state . scale_mat		358707	0					
ANR	358930	UnaryOperator	&		358707	0					
ANR	358931	MemberAccess	state . scale_mat		358707	1					
ANR	358932	Identifier	state		358707	0					
ANR	358933	Identifier	scale_mat		358707	1					
ANR	358934	Argument	& q		358707	3					
ANR	358935	UnaryOperationExpression	& q		358707	0					
ANR	358936	UnaryOperator	&		358707	0					
ANR	358937	Identifier	q		358707	1					
ANR	358938	ExpressionStatement	"code = vdev_proc ( vdev , dorect ) ( vdev , ( fixed ) p . x , ( fixed ) p . y , ( fixed ) q . x , ( fixed ) q . y , type )"	92:8:3006:3135	358707	3	True				
ANR	358939	AssignmentExpression	"code = vdev_proc ( vdev , dorect ) ( vdev , ( fixed ) p . x , ( fixed ) p . y , ( fixed ) q . x , ( fixed ) q . y , type )"		358707	0		=			
ANR	358940	Identifier	code		358707	0					
ANR	358941	CallExpression	"vdev_proc ( vdev , dorect ) ( vdev , ( fixed ) p . x , ( fixed ) p . y , ( fixed ) q . x , ( fixed ) q . y , type )"		358707	1					
ANR	358942	Callee	"vdev_proc ( vdev , dorect )"		358707	0					
ANR	358943	CallExpression	"vdev_proc ( vdev , dorect )"		358707	0					
ANR	358944	Callee	vdev_proc		358707	0					
ANR	358945	Identifier	vdev_proc		358707	0					
ANR	358946	ArgumentList	vdev		358707	1					
ANR	358947	Argument	vdev		358707	0					
ANR	358948	Identifier	vdev		358707	0					
ANR	358949	Argument	dorect		358707	1					
ANR	358950	Identifier	dorect		358707	0					
ANR	358951	ArgumentList	vdev		358707	1					
ANR	358952	Argument	vdev		358707	0					
ANR	358953	Identifier	vdev		358707	0					
ANR	358954	Argument	( fixed ) p . x		358707	1					
ANR	358955	CastExpression	( fixed ) p . x		358707	0					
ANR	358956	CastTarget	fixed		358707	0					
ANR	358957	MemberAccess	p . x		358707	1					
ANR	358958	Identifier	p		358707	0					
ANR	358959	Identifier	x		358707	1					
ANR	358960	Argument	( fixed ) p . y		358707	2					
ANR	358961	CastExpression	( fixed ) p . y		358707	0					
ANR	358962	CastTarget	fixed		358707	0					
ANR	358963	MemberAccess	p . y		358707	1					
ANR	358964	Identifier	p		358707	0					
ANR	358965	Identifier	y		358707	1					
ANR	358966	Argument	( fixed ) q . x		358707	3					
ANR	358967	CastExpression	( fixed ) q . x		358707	0					
ANR	358968	CastTarget	fixed		358707	0					
ANR	358969	MemberAccess	q . x		358707	1					
ANR	358970	Identifier	q		358707	0					
ANR	358971	Identifier	x		358707	1					
ANR	358972	Argument	( fixed ) q . y		358707	4					
ANR	358973	CastExpression	( fixed ) q . y		358707	0					
ANR	358974	CastTarget	fixed		358707	0					
ANR	358975	MemberAccess	q . y		358707	1					
ANR	358976	Identifier	q		358707	0					
ANR	358977	Identifier	y		358707	1					
ANR	358978	Argument	type		358707	5					
ANR	358979	Identifier	type		358707	0					
ANR	358980	IfStatement	if ( code >= 0 )		358707	4					
ANR	358981	Condition	code >= 0	94:12:3149:3157	358707	0	True				
ANR	358982	RelationalExpression	code >= 0		358707	0		>=			
ANR	358983	Identifier	code		358707	0					
ANR	358984	PrimaryExpression	0		358707	1					
ANR	358985	ReturnStatement	return code ;	95:12:3172:3183	358707	1	True				
ANR	358986	Identifier	code		358707	0					
ANR	358987	ExpressionStatement	"code = vdev_proc ( vdev , beginpath ) ( vdev , type )"	98:4:3256:3301	358707	11	True				
ANR	358988	AssignmentExpression	"code = vdev_proc ( vdev , beginpath ) ( vdev , type )"		358707	0		=			
ANR	358989	Identifier	code		358707	0					
ANR	358990	CallExpression	"vdev_proc ( vdev , beginpath ) ( vdev , type )"		358707	1					
ANR	358991	Callee	"vdev_proc ( vdev , beginpath )"		358707	0					
ANR	358992	CallExpression	"vdev_proc ( vdev , beginpath )"		358707	0					
ANR	358993	Callee	vdev_proc		358707	0					
ANR	358994	Identifier	vdev_proc		358707	0					
ANR	358995	ArgumentList	vdev		358707	1					
ANR	358996	Argument	vdev		358707	0					
ANR	358997	Identifier	vdev		358707	0					
ANR	358998	Argument	beginpath		358707	1					
ANR	358999	Identifier	beginpath		358707	0					
ANR	359000	ArgumentList	vdev		358707	1					
ANR	359001	Argument	vdev		358707	0					
ANR	359002	Identifier	vdev		358707	0					
ANR	359003	Argument	type		358707	1					
ANR	359004	Identifier	type		358707	0					
ANR	359005	IfStatement	if ( code < 0 )		358707	12					
ANR	359006	Condition	code < 0	99:8:3311:3318	358707	0	True				
ANR	359007	RelationalExpression	code < 0		358707	0		<			
ANR	359008	Identifier	code		358707	0					
ANR	359009	PrimaryExpression	0		358707	1					
ANR	359010	ReturnStatement	return code ;	100:8:3329:3340	358707	1	True				
ANR	359011	Identifier	code		358707	0					
ANR	359012	ExpressionStatement	"gx_path_enum_init ( & cenum , ppath )"	101:4:3346:3378	358707	13	True				
ANR	359013	CallExpression	"gx_path_enum_init ( & cenum , ppath )"		358707	0					
ANR	359014	Callee	gx_path_enum_init		358707	0					
ANR	359015	Identifier	gx_path_enum_init		358707	0					
ANR	359016	ArgumentList	& cenum		358707	1					
ANR	359017	Argument	& cenum		358707	0					
ANR	359018	UnaryOperationExpression	& cenum		358707	0					
ANR	359019	UnaryOperator	&		358707	0					
ANR	359020	Identifier	cenum		358707	1					
ANR	359021	Argument	ppath		358707	1					
ANR	359022	Identifier	ppath		358707	0					
ANR	359023	ForStatement	for ( ; ; )		358707	14					
ANR	359024	CompoundStatement		45:8:1742:1783	358707	0					
ANR	359025	IdentifierDeclStatement	gs_fixed_point vs [ 3 ] ;	103:8:3403:3423	358707	0	True				
ANR	359026	IdentifierDecl	vs [ 3 ]		358707	0					
ANR	359027	IdentifierDeclType	gs_fixed_point [ 3 ]		358707	0					
ANR	359028	Identifier	vs		358707	1					
ANR	359029	PrimaryExpression	3		358707	2					
ANR	359030	IdentifierDeclStatement	"int pe_op = gx_path_enum_next ( & cenum , vs ) ;"	104:8:3433:3474	358707	1	True				
ANR	359031	IdentifierDecl	"pe_op = gx_path_enum_next ( & cenum , vs )"		358707	0					
ANR	359032	IdentifierDeclType	int		358707	0					
ANR	359033	Identifier	pe_op		358707	1					
ANR	359034	AssignmentExpression	"pe_op = gx_path_enum_next ( & cenum , vs )"		358707	2		=			
ANR	359035	Identifier	pe_op		358707	0					
ANR	359036	CallExpression	"gx_path_enum_next ( & cenum , vs )"		358707	1					
ANR	359037	Callee	gx_path_enum_next		358707	0					
ANR	359038	Identifier	gx_path_enum_next		358707	0					
ANR	359039	ArgumentList	& cenum		358707	1					
ANR	359040	Argument	& cenum		358707	0					
ANR	359041	UnaryOperationExpression	& cenum		358707	0					
ANR	359042	UnaryOperator	&		358707	0					
ANR	359043	Identifier	cenum		358707	1					
ANR	359044	Argument	vs		358707	1					
ANR	359045	Identifier	vs		358707	0					
ANR	359046	Label	sw :	106:4:3481:3483	358707	2	True				
ANR	359047	Identifier	sw		358707	0					
ANR	359048	IfStatement	if ( type & gx_path_type_optimize )		358707	3					
ANR	359049	Condition	type & gx_path_type_optimize	107:12:3497:3524	358707	0	True				
ANR	359050	BitAndExpression	type & gx_path_type_optimize		358707	0		&			
ANR	359051	Identifier	type		358707	0					
ANR	359052	Identifier	gx_path_type_optimize		358707	1					
ANR	359053	CompoundStatement		48:42:1836:1836	358707	1					
ANR	359054	Label	opt :	108:8:3537:3540	358707	0	True				
ANR	359055	Identifier	opt		358707	0					
ANR	359056	IfStatement	if ( pe_op == gs_pe_lineto )		358707	1					
ANR	359057	Condition	pe_op == gs_pe_lineto	110:16:3608:3628	358707	0	True				
ANR	359058	EqualityExpression	pe_op == gs_pe_lineto		358707	0		==			
ANR	359059	Identifier	pe_op		358707	0					
ANR	359060	Identifier	gs_pe_lineto		358707	1					
ANR	359061	CompoundStatement		51:39:1940:1940	358707	1					
ANR	359062	IfStatement	if ( ! incomplete_line )		358707	0					
ANR	359063	Condition	! incomplete_line	111:20:3653:3668	358707	0	True				
ANR	359064	UnaryOperationExpression	! incomplete_line		358707	0					
ANR	359065	UnaryOperator	!		358707	0					
ANR	359066	Identifier	incomplete_line		358707	1					
ANR	359067	CompoundStatement		52:38:1980:1980	358707	1					
ANR	359068	ExpressionStatement	line_end = vs [ 0 ]	112:20:3693:3709	358707	0	True				
ANR	359069	AssignmentExpression	line_end = vs [ 0 ]		358707	0		=			
ANR	359070	Identifier	line_end		358707	0					
ANR	359071	ArrayIndexing	vs [ 0 ]		358707	1					
ANR	359072	Identifier	vs		358707	0					
ANR	359073	PrimaryExpression	0		358707	1					
ANR	359074	ExpressionStatement	incomplete_line = true	113:20:3731:3753	358707	1	True				
ANR	359075	AssignmentExpression	incomplete_line = true		358707	0		=			
ANR	359076	Identifier	incomplete_line		358707	0					
ANR	359077	Identifier	true		358707	1					
ANR	359078	ContinueStatement	continue ;	114:20:3775:3783	358707	2	True				
ANR	359079	IfStatement	if ( vs [ 0 ] . x == line_end . x )		358707	1					
ANR	359080	Condition	vs [ 0 ] . x == line_end . x	120:20:3982:4002	358707	0	True				
ANR	359081	EqualityExpression	vs [ 0 ] . x == line_end . x		358707	0		==			
ANR	359082	MemberAccess	vs [ 0 ] . x		358707	0					
ANR	359083	ArrayIndexing	vs [ 0 ]		358707	0					
ANR	359084	Identifier	vs		358707	0					
ANR	359085	PrimaryExpression	0		358707	1					
ANR	359086	Identifier	x		358707	1					
ANR	359087	MemberAccess	line_end . x		358707	1					
ANR	359088	Identifier	line_end		358707	0					
ANR	359089	Identifier	x		358707	1					
ANR	359090	CompoundStatement		61:43:2314:2314	358707	1					
ANR	359091	IfStatement	"if ( vs [ 0 ] . x == line_start . x && coord_between ( line_start . y , line_end . y , vs [ 0 ] . y ) )"		358707	0					
ANR	359092	Condition	"vs [ 0 ] . x == line_start . x && coord_between ( line_start . y , line_end . y , vs [ 0 ] . y )"	121:24:4031:4129	358707	0	True				
ANR	359093	AndExpression	"vs [ 0 ] . x == line_start . x && coord_between ( line_start . y , line_end . y , vs [ 0 ] . y )"		358707	0		&&			
ANR	359094	EqualityExpression	vs [ 0 ] . x == line_start . x		358707	0		==			
ANR	359095	MemberAccess	vs [ 0 ] . x		358707	0					
ANR	359096	ArrayIndexing	vs [ 0 ]		358707	0					
ANR	359097	Identifier	vs		358707	0					
ANR	359098	PrimaryExpression	0		358707	1					
ANR	359099	Identifier	x		358707	1					
ANR	359100	MemberAccess	line_start . x		358707	1					
ANR	359101	Identifier	line_start		358707	0					
ANR	359102	Identifier	x		358707	1					
ANR	359103	CallExpression	"coord_between ( line_start . y , line_end . y , vs [ 0 ] . y )"		358707	1					
ANR	359104	Callee	coord_between		358707	0					
ANR	359105	Identifier	coord_between		358707	0					
ANR	359106	ArgumentList	line_start . y		358707	1					
ANR	359107	Argument	line_start . y		358707	0					
ANR	359108	MemberAccess	line_start . y		358707	0					
ANR	359109	Identifier	line_start		358707	0					
ANR	359110	Identifier	y		358707	1					
ANR	359111	Argument	line_end . y		358707	1					
ANR	359112	MemberAccess	line_end . y		358707	0					
ANR	359113	Identifier	line_end		358707	0					
ANR	359114	Identifier	y		358707	1					
ANR	359115	Argument	vs [ 0 ] . y		358707	2					
ANR	359116	MemberAccess	vs [ 0 ] . y		358707	0					
ANR	359117	ArrayIndexing	vs [ 0 ]		358707	0					
ANR	359118	Identifier	vs		358707	0					
ANR	359119	PrimaryExpression	0		358707	1					
ANR	359120	Identifier	y		358707	1					
ANR	359121	CompoundStatement		64:26:2466:2466	358707	1					
ANR	359122	ExpressionStatement	line_end . y = vs [ 0 ] . y	124:24:4183:4203	358707	0	True				
ANR	359123	AssignmentExpression	line_end . y = vs [ 0 ] . y		358707	0		=			
ANR	359124	MemberAccess	line_end . y		358707	0					
ANR	359125	Identifier	line_end		358707	0					
ANR	359126	Identifier	y		358707	1					
ANR	359127	MemberAccess	vs [ 0 ] . y		358707	1					
ANR	359128	ArrayIndexing	vs [ 0 ]		358707	0					
ANR	359129	Identifier	vs		358707	0					
ANR	359130	PrimaryExpression	0		358707	1					
ANR	359131	Identifier	y		358707	1					
ANR	359132	ContinueStatement	continue ;	125:24:4229:4237	358707	1	True				
ANR	359133	ElseStatement	else		358707	0					
ANR	359134	IfStatement	if ( vs [ 0 ] . y == line_end . y )		358707	0					
ANR	359135	Condition	vs [ 0 ] . y == line_end . y	127:27:4288:4308	358707	0	True				
ANR	359136	EqualityExpression	vs [ 0 ] . y == line_end . y		358707	0		==			
ANR	359137	MemberAccess	vs [ 0 ] . y		358707	0					
ANR	359138	ArrayIndexing	vs [ 0 ]		358707	0					
ANR	359139	Identifier	vs		358707	0					
ANR	359140	PrimaryExpression	0		358707	1					
ANR	359141	Identifier	y		358707	1					
ANR	359142	MemberAccess	line_end . y		358707	1					
ANR	359143	Identifier	line_end		358707	0					
ANR	359144	Identifier	y		358707	1					
ANR	359145	CompoundStatement		68:50:2620:2620	358707	1					
ANR	359146	IfStatement	"if ( vs [ 0 ] . y == line_start . y && coord_between ( line_start . x , line_end . x , vs [ 0 ] . x ) )"		358707	0					
ANR	359147	Condition	"vs [ 0 ] . y == line_start . y && coord_between ( line_start . x , line_end . x , vs [ 0 ] . x )"	128:24:4337:4435	358707	0	True				
ANR	359148	AndExpression	"vs [ 0 ] . y == line_start . y && coord_between ( line_start . x , line_end . x , vs [ 0 ] . x )"		358707	0		&&			
ANR	359149	EqualityExpression	vs [ 0 ] . y == line_start . y		358707	0		==			
ANR	359150	MemberAccess	vs [ 0 ] . y		358707	0					
ANR	359151	ArrayIndexing	vs [ 0 ]		358707	0					
ANR	359152	Identifier	vs		358707	0					
ANR	359153	PrimaryExpression	0		358707	1					
ANR	359154	Identifier	y		358707	1					
ANR	359155	MemberAccess	line_start . y		358707	1					
ANR	359156	Identifier	line_start		358707	0					
ANR	359157	Identifier	y		358707	1					
ANR	359158	CallExpression	"coord_between ( line_start . x , line_end . x , vs [ 0 ] . x )"		358707	1					
ANR	359159	Callee	coord_between		358707	0					
ANR	359160	Identifier	coord_between		358707	0					
ANR	359161	ArgumentList	line_start . x		358707	1					
ANR	359162	Argument	line_start . x		358707	0					
ANR	359163	MemberAccess	line_start . x		358707	0					
ANR	359164	Identifier	line_start		358707	0					
ANR	359165	Identifier	x		358707	1					
ANR	359166	Argument	line_end . x		358707	1					
ANR	359167	MemberAccess	line_end . x		358707	0					
ANR	359168	Identifier	line_end		358707	0					
ANR	359169	Identifier	x		358707	1					
ANR	359170	Argument	vs [ 0 ] . x		358707	2					
ANR	359171	MemberAccess	vs [ 0 ] . x		358707	0					
ANR	359172	ArrayIndexing	vs [ 0 ]		358707	0					
ANR	359173	Identifier	vs		358707	0					
ANR	359174	PrimaryExpression	0		358707	1					
ANR	359175	Identifier	x		358707	1					
ANR	359176	CompoundStatement		71:26:2772:2772	358707	1					
ANR	359177	ExpressionStatement	line_end . x = vs [ 0 ] . x	131:24:4489:4509	358707	0	True				
ANR	359178	AssignmentExpression	line_end . x = vs [ 0 ] . x		358707	0		=			
ANR	359179	MemberAccess	line_end . x		358707	0					
ANR	359180	Identifier	line_end		358707	0					
ANR	359181	Identifier	x		358707	1					
ANR	359182	MemberAccess	vs [ 0 ] . x		358707	1					
ANR	359183	ArrayIndexing	vs [ 0 ]		358707	0					
ANR	359184	Identifier	vs		358707	0					
ANR	359185	PrimaryExpression	0		358707	1					
ANR	359186	Identifier	x		358707	1					
ANR	359187	ContinueStatement	continue ;	132:24:4535:4543	358707	1	True				
ANR	359188	IfStatement	if ( incomplete_line )		358707	2					
ANR	359189	Condition	incomplete_line	136:16:4615:4629	358707	0	True				
ANR	359190	Identifier	incomplete_line		358707	0					
ANR	359191	CompoundStatement		77:33:2941:2941	358707	1					
ANR	359192	IfStatement	if ( need_moveto )		358707	0					
ANR	359193	Condition	need_moveto	137:20:4654:4664	358707	0	True				
ANR	359194	Identifier	need_moveto		358707	0					
ANR	359195	CompoundStatement		78:33:2976:2976	358707	1					
ANR	359196	ExpressionStatement	"code = gdev_vector_dopath_segment ( & state , gs_pe_moveto , & line_start )"	138:20:4717:4839	358707	0	True				
ANR	359197	AssignmentExpression	"code = gdev_vector_dopath_segment ( & state , gs_pe_moveto , & line_start )"		358707	0		=			
ANR	359198	Identifier	code		358707	0					
ANR	359199	CallExpression	"gdev_vector_dopath_segment ( & state , gs_pe_moveto , & line_start )"		358707	1					
ANR	359200	Callee	gdev_vector_dopath_segment		358707	0					
ANR	359201	Identifier	gdev_vector_dopath_segment		358707	0					
ANR	359202	ArgumentList	& state		358707	1					
ANR	359203	Argument	& state		358707	0					
ANR	359204	UnaryOperationExpression	& state		358707	0					
ANR	359205	UnaryOperator	&		358707	0					
ANR	359206	Identifier	state		358707	1					
ANR	359207	Argument	gs_pe_moveto		358707	1					
ANR	359208	Identifier	gs_pe_moveto		358707	0					
ANR	359209	Argument	& line_start		358707	2					
ANR	359210	UnaryOperationExpression	& line_start		358707	0					
ANR	359211	UnaryOperator	&		358707	0					
ANR	359212	Identifier	line_start		358707	1					
ANR	359213	IfStatement	if ( code < 0 )		358707	1					
ANR	359214	Condition	code < 0	140:24:4865:4872	358707	0	True				
ANR	359215	RelationalExpression	code < 0		358707	0		<			
ANR	359216	Identifier	code		358707	0					
ANR	359217	PrimaryExpression	0		358707	1					
ANR	359218	ReturnStatement	return code ;	141:24:4899:4910	358707	1	True				
ANR	359219	Identifier	code		358707	0					
ANR	359220	ExpressionStatement	need_moveto = false	142:20:4932:4951	358707	2	True				
ANR	359221	AssignmentExpression	need_moveto = false		358707	0		=			
ANR	359222	Identifier	need_moveto		358707	0					
ANR	359223	Identifier	false		358707	1					
ANR	359224	ExpressionStatement	"code = gdev_vector_dopath_segment ( & state , gs_pe_lineto , & line_end )"	144:16:4987:5103	358707	1	True				
ANR	359225	AssignmentExpression	"code = gdev_vector_dopath_segment ( & state , gs_pe_lineto , & line_end )"		358707	0		=			
ANR	359226	Identifier	code		358707	0					
ANR	359227	CallExpression	"gdev_vector_dopath_segment ( & state , gs_pe_lineto , & line_end )"		358707	1					
ANR	359228	Callee	gdev_vector_dopath_segment		358707	0					
ANR	359229	Identifier	gdev_vector_dopath_segment		358707	0					
ANR	359230	ArgumentList	& state		358707	1					
ANR	359231	Argument	& state		358707	0					
ANR	359232	UnaryOperationExpression	& state		358707	0					
ANR	359233	UnaryOperator	&		358707	0					
ANR	359234	Identifier	state		358707	1					
ANR	359235	Argument	gs_pe_lineto		358707	1					
ANR	359236	Identifier	gs_pe_lineto		358707	0					
ANR	359237	Argument	& line_end		358707	2					
ANR	359238	UnaryOperationExpression	& line_end		358707	0					
ANR	359239	UnaryOperator	&		358707	0					
ANR	359240	Identifier	line_end		358707	1					
ANR	359241	IfStatement	if ( code < 0 )		358707	2					
ANR	359242	Condition	code < 0	146:20:5125:5132	358707	0	True				
ANR	359243	RelationalExpression	code < 0		358707	0		<			
ANR	359244	Identifier	code		358707	0					
ANR	359245	PrimaryExpression	0		358707	1					
ANR	359246	ReturnStatement	return code ;	147:20:5155:5166	358707	1	True				
ANR	359247	Identifier	code		358707	0					
ANR	359248	ExpressionStatement	line_start = line_end	148:16:5184:5205	358707	3	True				
ANR	359249	AssignmentExpression	line_start = line_end		358707	0		=			
ANR	359250	Identifier	line_start		358707	0					
ANR	359251	Identifier	line_end		358707	1					
ANR	359252	ExpressionStatement	incomplete_line = false	149:16:5223:5246	358707	4	True				
ANR	359253	AssignmentExpression	incomplete_line = false		358707	0		=			
ANR	359254	Identifier	incomplete_line		358707	0					
ANR	359255	Identifier	false		358707	1					
ANR	359256	GotoStatement	goto opt ;	150:16:5264:5272	358707	5	True				
ANR	359257	Identifier	opt		358707	0					
ANR	359258	SwitchStatement	switch ( pe_op )		358707	4					
ANR	359259	Condition	pe_op	153:16:5314:5318	358707	0	True				
ANR	359260	Identifier	pe_op		358707	0					
ANR	359261	CompoundStatement		94:23:3630:3630	358707	1					
ANR	359262	Label	case 0 :	154:8:5331:5337	358707	0	True				
ANR	359263	Label	done :	155:8:5359:5363	358707	1	True				
ANR	359264	Identifier	done		358707	0					
ANR	359265	ExpressionStatement	"code = vdev_proc ( vdev , endpath ) ( vdev , type )"	156:12:5377:5420	358707	2	True				
ANR	359266	AssignmentExpression	"code = vdev_proc ( vdev , endpath ) ( vdev , type )"		358707	0		=			
ANR	359267	Identifier	code		358707	0					
ANR	359268	CallExpression	"vdev_proc ( vdev , endpath ) ( vdev , type )"		358707	1					
ANR	359269	Callee	"vdev_proc ( vdev , endpath )"		358707	0					
ANR	359270	CallExpression	"vdev_proc ( vdev , endpath )"		358707	0					
ANR	359271	Callee	vdev_proc		358707	0					
ANR	359272	Identifier	vdev_proc		358707	0					
ANR	359273	ArgumentList	vdev		358707	1					
ANR	359274	Argument	vdev		358707	0					
ANR	359275	Identifier	vdev		358707	0					
ANR	359276	Argument	endpath		358707	1					
ANR	359277	Identifier	endpath		358707	0					
ANR	359278	ArgumentList	vdev		358707	1					
ANR	359279	Argument	vdev		358707	0					
ANR	359280	Identifier	vdev		358707	0					
ANR	359281	Argument	type		358707	1					
ANR	359282	Identifier	type		358707	0					
ANR	359283	ReturnStatement	return ( code < 0 ? code : 0 ) ;	157:12:5434:5462	358707	3	True				
ANR	359284	ConditionalExpression	code < 0 ? code : 0		358707	0					
ANR	359285	Condition	code < 0		358707	0					
ANR	359286	RelationalExpression	code < 0		358707	0		<			
ANR	359287	Identifier	code		358707	0					
ANR	359288	PrimaryExpression	0		358707	1					
ANR	359289	Identifier	code		358707	1					
ANR	359290	PrimaryExpression	0		358707	2					
ANR	359291	Label	case gs_pe_curveto :	158:8:5472:5490	358707	4	True				
ANR	359292	Identifier	gs_pe_curveto		358707	0					
ANR	359293	IfStatement	if ( need_moveto )		358707	5					
ANR	359294	Condition	need_moveto	159:16:5508:5518	358707	0	True				
ANR	359295	Identifier	need_moveto		358707	0					
ANR	359296	CompoundStatement		100:29:3830:3830	358707	1					
ANR	359297	ExpressionStatement	"code = gdev_vector_dopath_segment ( & state , gs_pe_moveto , & line_start )"	160:16:5567:5685	358707	0	True				
ANR	359298	AssignmentExpression	"code = gdev_vector_dopath_segment ( & state , gs_pe_moveto , & line_start )"		358707	0		=			
ANR	359299	Identifier	code		358707	0					
ANR	359300	CallExpression	"gdev_vector_dopath_segment ( & state , gs_pe_moveto , & line_start )"		358707	1					
ANR	359301	Callee	gdev_vector_dopath_segment		358707	0					
ANR	359302	Identifier	gdev_vector_dopath_segment		358707	0					
ANR	359303	ArgumentList	& state		358707	1					
ANR	359304	Argument	& state		358707	0					
ANR	359305	UnaryOperationExpression	& state		358707	0					
ANR	359306	UnaryOperator	&		358707	0					
ANR	359307	Identifier	state		358707	1					
ANR	359308	Argument	gs_pe_moveto		358707	1					
ANR	359309	Identifier	gs_pe_moveto		358707	0					
ANR	359310	Argument	& line_start		358707	2					
ANR	359311	UnaryOperationExpression	& line_start		358707	0					
ANR	359312	UnaryOperator	&		358707	0					
ANR	359313	Identifier	line_start		358707	1					
ANR	359314	IfStatement	if ( code < 0 )		358707	1					
ANR	359315	Condition	code < 0	162:20:5707:5714	358707	0	True				
ANR	359316	RelationalExpression	code < 0		358707	0		<			
ANR	359317	Identifier	code		358707	0					
ANR	359318	PrimaryExpression	0		358707	1					
ANR	359319	ReturnStatement	return code ;	163:20:5737:5748	358707	1	True				
ANR	359320	Identifier	code		358707	0					
ANR	359321	ExpressionStatement	need_moveto = false	164:16:5766:5785	358707	2	True				
ANR	359322	AssignmentExpression	need_moveto = false		358707	0		=			
ANR	359323	Identifier	need_moveto		358707	0					
ANR	359324	Identifier	false		358707	1					
ANR	359325	ExpressionStatement	line_start = vs [ 2 ]	166:12:5813:5831	358707	6	True				
ANR	359326	AssignmentExpression	line_start = vs [ 2 ]		358707	0		=			
ANR	359327	Identifier	line_start		358707	0					
ANR	359328	ArrayIndexing	vs [ 2 ]		358707	1					
ANR	359329	Identifier	vs		358707	0					
ANR	359330	PrimaryExpression	2		358707	1					
ANR	359331	GotoStatement	goto draw ;	167:12:5845:5854	358707	7	True				
ANR	359332	Identifier	draw		358707	0					
ANR	359333	Label	case gs_pe_moveto :	168:8:5864:5881	358707	8	True				
ANR	359334	Identifier	gs_pe_moveto		358707	0					
ANR	359335	ExpressionStatement	line_start = vs [ 0 ]	175:12:6196:6214	358707	9	True				
ANR	359336	AssignmentExpression	line_start = vs [ 0 ]		358707	0		=			
ANR	359337	Identifier	line_start		358707	0					
ANR	359338	ArrayIndexing	vs [ 0 ]		358707	1					
ANR	359339	Identifier	vs		358707	0					
ANR	359340	PrimaryExpression	0		358707	1					
ANR	359341	IfStatement	if ( ! ( type & gx_path_type_stroke ) && ( type & gx_path_type_fill ) )		358707	10					
ANR	359342	Condition	! ( type & gx_path_type_stroke ) && ( type & gx_path_type_fill )	176:16:6232:6290	358707	0	True				
ANR	359343	AndExpression	! ( type & gx_path_type_stroke ) && ( type & gx_path_type_fill )		358707	0		&&			
ANR	359344	UnaryOperationExpression	! ( type & gx_path_type_stroke )		358707	0					
ANR	359345	UnaryOperator	!		358707	0					
ANR	359346	BitAndExpression	type & gx_path_type_stroke		358707	1		&			
ANR	359347	Identifier	type		358707	0					
ANR	359348	Identifier	gx_path_type_stroke		358707	1					
ANR	359349	BitAndExpression	type & gx_path_type_fill		358707	1		&			
ANR	359350	Identifier	type		358707	0					
ANR	359351	Identifier	gx_path_type_fill		358707	1					
ANR	359352	CompoundStatement		117:77:4602:4602	358707	1					
ANR	359353	ExpressionStatement	need_moveto = true	177:16:6311:6329	358707	0	True				
ANR	359354	AssignmentExpression	need_moveto = true		358707	0		=			
ANR	359355	Identifier	need_moveto		358707	0					
ANR	359356	Identifier	true		358707	1					
ANR	359357	ContinueStatement	continue ;	178:16:6347:6355	358707	1	True				
ANR	359358	GotoStatement	goto draw ;	180:12:6383:6392	358707	11	True				
ANR	359359	Identifier	draw		358707	0					
ANR	359360	Label	case gs_pe_lineto :	181:8:6402:6419	358707	12	True				
ANR	359361	Identifier	gs_pe_lineto		358707	0					
ANR	359362	Label	case gs_pe_gapto :	182:8:6429:6445	358707	13	True				
ANR	359363	Identifier	gs_pe_gapto		358707	0					
ANR	359364	IfStatement	if ( need_moveto )		358707	14					
ANR	359365	Condition	need_moveto	183:16:6463:6473	358707	0	True				
ANR	359366	Identifier	need_moveto		358707	0					
ANR	359367	CompoundStatement		124:29:4785:4785	358707	1					
ANR	359368	ExpressionStatement	"code = gdev_vector_dopath_segment ( & state , gs_pe_moveto , & line_start )"	184:16:6522:6640	358707	0	True				
ANR	359369	AssignmentExpression	"code = gdev_vector_dopath_segment ( & state , gs_pe_moveto , & line_start )"		358707	0		=			
ANR	359370	Identifier	code		358707	0					
ANR	359371	CallExpression	"gdev_vector_dopath_segment ( & state , gs_pe_moveto , & line_start )"		358707	1					
ANR	359372	Callee	gdev_vector_dopath_segment		358707	0					
ANR	359373	Identifier	gdev_vector_dopath_segment		358707	0					
ANR	359374	ArgumentList	& state		358707	1					
ANR	359375	Argument	& state		358707	0					
ANR	359376	UnaryOperationExpression	& state		358707	0					
ANR	359377	UnaryOperator	&		358707	0					
ANR	359378	Identifier	state		358707	1					
ANR	359379	Argument	gs_pe_moveto		358707	1					
ANR	359380	Identifier	gs_pe_moveto		358707	0					
ANR	359381	Argument	& line_start		358707	2					
ANR	359382	UnaryOperationExpression	& line_start		358707	0					
ANR	359383	UnaryOperator	&		358707	0					
ANR	359384	Identifier	line_start		358707	1					
ANR	359385	IfStatement	if ( code < 0 )		358707	1					
ANR	359386	Condition	code < 0	186:20:6662:6669	358707	0	True				
ANR	359387	RelationalExpression	code < 0		358707	0		<			
ANR	359388	Identifier	code		358707	0					
ANR	359389	PrimaryExpression	0		358707	1					
ANR	359390	ReturnStatement	return code ;	187:20:6692:6703	358707	1	True				
ANR	359391	Identifier	code		358707	0					
ANR	359392	ExpressionStatement	need_moveto = false	188:16:6721:6740	358707	2	True				
ANR	359393	AssignmentExpression	need_moveto = false		358707	0		=			
ANR	359394	Identifier	need_moveto		358707	0					
ANR	359395	Identifier	false		358707	1					
ANR	359396	ExpressionStatement	line_start = vs [ 0 ]	190:12:6768:6786	358707	15	True				
ANR	359397	AssignmentExpression	line_start = vs [ 0 ]		358707	0		=			
ANR	359398	Identifier	line_start		358707	0					
ANR	359399	ArrayIndexing	vs [ 0 ]		358707	1					
ANR	359400	Identifier	vs		358707	0					
ANR	359401	PrimaryExpression	0		358707	1					
ANR	359402	GotoStatement	goto draw ;	191:12:6800:6809	358707	16	True				
ANR	359403	Identifier	draw		358707	0					
ANR	359404	Label	case gs_pe_closepath :	192:8:6819:6839	358707	17	True				
ANR	359405	Identifier	gs_pe_closepath		358707	0					
ANR	359406	IfStatement	if ( need_moveto )		358707	18					
ANR	359407	Condition	need_moveto	193:16:6857:6867	358707	0	True				
ANR	359408	Identifier	need_moveto		358707	0					
ANR	359409	CompoundStatement		134:29:5179:5179	358707	1					
ANR	359410	ExpressionStatement	need_moveto = false	194:16:6916:6935	358707	0	True				
ANR	359411	AssignmentExpression	need_moveto = false		358707	0		=			
ANR	359412	Identifier	need_moveto		358707	0					
ANR	359413	Identifier	false		358707	1					
ANR	359414	ContinueStatement	continue ;	195:16:6953:6961	358707	1	True				
ANR	359415	IfStatement	if ( ! do_close )		358707	19					
ANR	359416	Condition	! do_close	197:16:6993:7001	358707	0	True				
ANR	359417	UnaryOperationExpression	! do_close		358707	0					
ANR	359418	UnaryOperator	!		358707	0					
ANR	359419	Identifier	do_close		358707	1					
ANR	359420	CompoundStatement		138:27:5313:5313	358707	1					
ANR	359421	ExpressionStatement	"pe_op = gx_path_enum_next ( & cenum , vs )"	198:16:7022:7059	358707	0	True				
ANR	359422	AssignmentExpression	"pe_op = gx_path_enum_next ( & cenum , vs )"		358707	0		=			
ANR	359423	Identifier	pe_op		358707	0					
ANR	359424	CallExpression	"gx_path_enum_next ( & cenum , vs )"		358707	1					
ANR	359425	Callee	gx_path_enum_next		358707	0					
ANR	359426	Identifier	gx_path_enum_next		358707	0					
ANR	359427	ArgumentList	& cenum		358707	1					
ANR	359428	Argument	& cenum		358707	0					
ANR	359429	UnaryOperationExpression	& cenum		358707	0					
ANR	359430	UnaryOperator	&		358707	0					
ANR	359431	Identifier	cenum		358707	1					
ANR	359432	Argument	vs		358707	1					
ANR	359433	Identifier	vs		358707	0					
ANR	359434	IfStatement	if ( pe_op == 0 )		358707	1					
ANR	359435	Condition	pe_op == 0	199:20:7081:7090	358707	0	True				
ANR	359436	EqualityExpression	pe_op == 0		358707	0		==			
ANR	359437	Identifier	pe_op		358707	0					
ANR	359438	PrimaryExpression	0		358707	1					
ANR	359439	GotoStatement	goto done ;	200:20:7113:7122	358707	1	True				
ANR	359440	Identifier	done		358707	0					
ANR	359441	ExpressionStatement	"code = gdev_vector_dopath_segment ( & state , gs_pe_closepath , vs )"	201:16:7140:7202	358707	2	True				
ANR	359442	AssignmentExpression	"code = gdev_vector_dopath_segment ( & state , gs_pe_closepath , vs )"		358707	0		=			
ANR	359443	Identifier	code		358707	0					
ANR	359444	CallExpression	"gdev_vector_dopath_segment ( & state , gs_pe_closepath , vs )"		358707	1					
ANR	359445	Callee	gdev_vector_dopath_segment		358707	0					
ANR	359446	Identifier	gdev_vector_dopath_segment		358707	0					
ANR	359447	ArgumentList	& state		358707	1					
ANR	359448	Argument	& state		358707	0					
ANR	359449	UnaryOperationExpression	& state		358707	0					
ANR	359450	UnaryOperator	&		358707	0					
ANR	359451	Identifier	state		358707	1					
ANR	359452	Argument	gs_pe_closepath		358707	1					
ANR	359453	Identifier	gs_pe_closepath		358707	0					
ANR	359454	Argument	vs		358707	2					
ANR	359455	Identifier	vs		358707	0					
ANR	359456	IfStatement	if ( code < 0 )		358707	3					
ANR	359457	Condition	code < 0	202:20:7224:7231	358707	0	True				
ANR	359458	RelationalExpression	code < 0		358707	0		<			
ANR	359459	Identifier	code		358707	0					
ANR	359460	PrimaryExpression	0		358707	1					
ANR	359461	ReturnStatement	return code ;	203:20:7254:7265	358707	1	True				
ANR	359462	Identifier	code		358707	0					
ANR	359463	GotoStatement	goto sw ;	204:16:7283:7290	358707	4	True				
ANR	359464	Identifier	sw		358707	0					
ANR	359465	Label	draw :	207:8:7346:7350	358707	20	True				
ANR	359466	Identifier	draw		358707	0					
ANR	359467	ExpressionStatement	"code = gdev_vector_dopath_segment ( & state , pe_op , vs )"	208:12:7364:7416	358707	21	True				
ANR	359468	AssignmentExpression	"code = gdev_vector_dopath_segment ( & state , pe_op , vs )"		358707	0		=			
ANR	359469	Identifier	code		358707	0					
ANR	359470	CallExpression	"gdev_vector_dopath_segment ( & state , pe_op , vs )"		358707	1					
ANR	359471	Callee	gdev_vector_dopath_segment		358707	0					
ANR	359472	Identifier	gdev_vector_dopath_segment		358707	0					
ANR	359473	ArgumentList	& state		358707	1					
ANR	359474	Argument	& state		358707	0					
ANR	359475	UnaryOperationExpression	& state		358707	0					
ANR	359476	UnaryOperator	&		358707	0					
ANR	359477	Identifier	state		358707	1					
ANR	359478	Argument	pe_op		358707	1					
ANR	359479	Identifier	pe_op		358707	0					
ANR	359480	Argument	vs		358707	2					
ANR	359481	Identifier	vs		358707	0					
ANR	359482	IfStatement	if ( code < 0 )		358707	22					
ANR	359483	Condition	code < 0	209:16:7434:7441	358707	0	True				
ANR	359484	RelationalExpression	code < 0		358707	0		<			
ANR	359485	Identifier	code		358707	0					
ANR	359486	PrimaryExpression	0		358707	1					
ANR	359487	ReturnStatement	return code ;	210:16:7460:7471	358707	1	True				
ANR	359488	Identifier	code		358707	0					
ANR	359489	ExpressionStatement	incomplete_line = false	212:8:7491:7514	358707	5	True				
ANR	359490	AssignmentExpression	incomplete_line = false		358707	0		=			
ANR	359491	Identifier	incomplete_line		358707	0					
ANR	359492	Identifier	false		358707	1					
ANR	359493	ReturnType	int		358707	1					
ANR	359494	Identifier	gdev_vector_dopath		358707	2					
ANR	359495	ParameterList	"gx_device_vector * vdev , const gx_path * ppath , gx_path_type_t type , const gs_matrix * pmat"		358707	3					
ANR	359496	Parameter	gx_device_vector * vdev	58:19:1580:1601	358707	0	True				
ANR	359497	ParameterType	gx_device_vector *		358707	0					
ANR	359498	Identifier	vdev		358707	1					
ANR	359499	Parameter	const gx_path * ppath	58:43:1604:1624	358707	1	True				
ANR	359500	ParameterType	const gx_path *		358707	0					
ANR	359501	Identifier	ppath		358707	1					
ANR	359502	Parameter	gx_path_type_t type	59:19:1646:1664	358707	2	True				
ANR	359503	ParameterType	gx_path_type_t		358707	0					
ANR	359504	Identifier	type		358707	1					
ANR	359505	Parameter	const gs_matrix * pmat	59:40:1667:1687	358707	3	True				
ANR	359506	ParameterType	const gs_matrix *		358707	0					
ANR	359507	Identifier	pmat		358707	1					
ANR	359508	CFGEntryNode	ENTRY		358707		True				
ANR	359509	CFGExitNode	EXIT		358707		True				
ANR	359510	InfiniteForNode	true		358707		True				
ANR	359511	Symbol	& cenum		358707						
ANR	359512	Symbol	gs_pe_moveto		358707						
ANR	359513	Symbol	& rbox		358707						
ANR	359514	Symbol	is_fzero2		358707						
ANR	359515	Symbol	rbox . q		358707						
ANR	359516	Symbol	gx_path_enum_next		358707						
ANR	359517	Symbol	gdev_vector_dopath_segment		358707						
ANR	359518	Symbol	is_xxyy		358707						
ANR	359519	Symbol	rbox . p		358707						
ANR	359520	Symbol	type		358707						
ANR	359521	Symbol	line_end . x		358707						
ANR	359522	Symbol	line_end . y		358707						
ANR	359523	Symbol	q . x		358707						
ANR	359524	Symbol	gs_pe_lineto		358707						
ANR	359525	Symbol	vdev_proc		358707						
ANR	359526	Symbol	& line_end		358707						
ANR	359527	Symbol	gx_path_is_rectangular		358707						
ANR	359528	Symbol	dorect		358707						
ANR	359529	Symbol	gx_path_type_always_close		358707						
ANR	359530	Symbol	state		358707						
ANR	359531	Symbol	state . scale_mat . xx		358707						
ANR	359532	Symbol	line_start		358707						
ANR	359533	Symbol	state . scale_mat . ty		358707						
ANR	359534	Symbol	state . scale_mat . tx		358707						
ANR	359535	Symbol	q . y		358707						
ANR	359536	Symbol	line_start . x		358707						
ANR	359537	Symbol	need_moveto		358707						
ANR	359538	Symbol	line_start . y		358707						
ANR	359539	Symbol	& state . scale_mat		358707						
ANR	359540	Symbol	rbox . q . y		358707						
ANR	359541	Symbol	rbox . q . x		358707						
ANR	359542	Symbol	gx_path_type_stroke		358707						
ANR	359543	Symbol	state . scale_mat		358707						
ANR	359544	Symbol	rbox		358707						
ANR	359545	Symbol	& line_start		358707						
ANR	359546	Symbol	prt_closed		358707						
ANR	359547	Symbol	rbox . p . x		358707						
ANR	359548	Symbol	pe_op		358707						
ANR	359549	Symbol	rbox . p . y		358707						
ANR	359550	Symbol	gx_path_type_fill		358707						
ANR	359551	Symbol	true		358707						
ANR	359552	Symbol	vs		358707						
ANR	359553	Symbol	endpath		358707						
ANR	359554	Symbol	gs_pe_closepath		358707						
ANR	359555	Symbol	code		358707						
ANR	359556	Symbol	pmat		358707						
ANR	359557	Symbol	& state		358707						
ANR	359558	Symbol	cenum		358707						
ANR	359559	Symbol	ppath		358707						
ANR	359560	Symbol	is_xyyx		358707						
ANR	359561	Symbol	line_end		358707						
ANR	359562	Symbol	do_close		358707						
ANR	359563	Symbol	prt_none		358707						
ANR	359564	Symbol	coord_between		358707						
ANR	359565	Symbol	rtype		358707						
ANR	359566	Symbol	gx_path_type_optimize		358707						
ANR	359567	Symbol	vs [ 0 ] . x		358707						
ANR	359568	Symbol	beginpath		358707						
ANR	359569	Symbol	vs [ 0 ] . y		358707						
ANR	359570	Symbol	* vs		358707						
ANR	359571	Symbol	vdev		358707						
ANR	359572	Symbol	false		358707						
ANR	359573	Symbol	p . y		358707						
ANR	359574	Symbol	p . x		358707						
ANR	359575	Symbol	p		358707						
ANR	359576	Symbol	q		358707						
ANR	359577	Symbol	& p		358707						
ANR	359578	Symbol	& q		358707						
ANR	359579	Symbol	incomplete_line		358707						
ANR	359580	Symbol	state . scale_mat . yy		358707						
ANR	359581	Function	gdev_vector_dorect	216:0:7557:8070							
ANR	359582	FunctionDef	"gdev_vector_dorect (gx_device_vector * vdev , fixed x0 , fixed y0 , fixed x1 , fixed y1 , gx_path_type_t type)"		359581	0					
ANR	359583	CompoundStatement		219:0:7685:8070	359581	0					
ANR	359584	IdentifierDeclStatement	"int code = ( * vdev_proc ( vdev , beginpath ) ) ( vdev , type ) ;"	220:4:7691:7744	359581	0	True				
ANR	359585	IdentifierDecl	"code = ( * vdev_proc ( vdev , beginpath ) ) ( vdev , type )"		359581	0					
ANR	359586	IdentifierDeclType	int		359581	0					
ANR	359587	Identifier	code		359581	1					
ANR	359588	AssignmentExpression	"code = ( * vdev_proc ( vdev , beginpath ) ) ( vdev , type )"		359581	2		=			
ANR	359589	Identifier	code		359581	0					
ANR	359590	CallExpression	"( * vdev_proc ( vdev , beginpath ) ) ( vdev , type )"		359581	1					
ANR	359591	Callee	"* vdev_proc ( vdev , beginpath )"		359581	0					
ANR	359592	UnaryOperationExpression	"* vdev_proc ( vdev , beginpath )"		359581	0					
ANR	359593	UnaryOperator	*		359581	0					
ANR	359594	CallExpression	"vdev_proc ( vdev , beginpath )"		359581	1					
ANR	359595	Callee	vdev_proc		359581	0					
ANR	359596	Identifier	vdev_proc		359581	0					
ANR	359597	ArgumentList	vdev		359581	1					
ANR	359598	Argument	vdev		359581	0					
ANR	359599	Identifier	vdev		359581	0					
ANR	359600	Argument	beginpath		359581	1					
ANR	359601	Identifier	beginpath		359581	0					
ANR	359602	ArgumentList	vdev		359581	1					
ANR	359603	Argument	vdev		359581	0					
ANR	359604	Identifier	vdev		359581	0					
ANR	359605	Argument	type		359581	1					
ANR	359606	Identifier	type		359581	0					
ANR	359607	IfStatement	if ( code < 0 )		359581	1					
ANR	359608	Condition	code < 0	222:8:7755:7762	359581	0	True				
ANR	359609	RelationalExpression	code < 0		359581	0		<			
ANR	359610	Identifier	code		359581	0					
ANR	359611	PrimaryExpression	0		359581	1					
ANR	359612	ReturnStatement	return code ;	223:8:7773:7784	359581	1	True				
ANR	359613	Identifier	code		359581	0					
ANR	359614	ExpressionStatement	"code = gdev_vector_write_rectangle ( vdev , x0 , y0 , x1 , y1 , ( type & gx_path_type_stroke ) != 0 , gx_rect_x_first )"	224:4:7790:7976	359581	2	True				
ANR	359615	AssignmentExpression	"code = gdev_vector_write_rectangle ( vdev , x0 , y0 , x1 , y1 , ( type & gx_path_type_stroke ) != 0 , gx_rect_x_first )"		359581	0		=			
ANR	359616	Identifier	code		359581	0					
ANR	359617	CallExpression	"gdev_vector_write_rectangle ( vdev , x0 , y0 , x1 , y1 , ( type & gx_path_type_stroke ) != 0 , gx_rect_x_first )"		359581	1					
ANR	359618	Callee	gdev_vector_write_rectangle		359581	0					
ANR	359619	Identifier	gdev_vector_write_rectangle		359581	0					
ANR	359620	ArgumentList	vdev		359581	1					
ANR	359621	Argument	vdev		359581	0					
ANR	359622	Identifier	vdev		359581	0					
ANR	359623	Argument	x0		359581	1					
ANR	359624	Identifier	x0		359581	0					
ANR	359625	Argument	y0		359581	2					
ANR	359626	Identifier	y0		359581	0					
ANR	359627	Argument	x1		359581	3					
ANR	359628	Identifier	x1		359581	0					
ANR	359629	Argument	y1		359581	4					
ANR	359630	Identifier	y1		359581	0					
ANR	359631	Argument	( type & gx_path_type_stroke ) != 0		359581	5					
ANR	359632	EqualityExpression	( type & gx_path_type_stroke ) != 0		359581	0		!=			
ANR	359633	BitAndExpression	type & gx_path_type_stroke		359581	0		&			
ANR	359634	Identifier	type		359581	0					
ANR	359635	Identifier	gx_path_type_stroke		359581	1					
ANR	359636	PrimaryExpression	0		359581	1					
ANR	359637	Argument	gx_rect_x_first		359581	6					
ANR	359638	Identifier	gx_rect_x_first		359581	0					
ANR	359639	IfStatement	if ( code < 0 )		359581	3					
ANR	359640	Condition	code < 0	227:8:7986:7993	359581	0	True				
ANR	359641	RelationalExpression	code < 0		359581	0		<			
ANR	359642	Identifier	code		359581	0					
ANR	359643	PrimaryExpression	0		359581	1					
ANR	359644	ReturnStatement	return code ;	228:8:8004:8015	359581	1	True				
ANR	359645	Identifier	code		359581	0					
ANR	359646	ReturnStatement	"return ( * vdev_proc ( vdev , endpath ) ) ( vdev , type ) ;"	229:4:8021:8068	359581	4	True				
ANR	359647	CallExpression	"( * vdev_proc ( vdev , endpath ) ) ( vdev , type )"		359581	0					
ANR	359648	Callee	"* vdev_proc ( vdev , endpath )"		359581	0					
ANR	359649	UnaryOperationExpression	"* vdev_proc ( vdev , endpath )"		359581	0					
ANR	359650	UnaryOperator	*		359581	0					
ANR	359651	CallExpression	"vdev_proc ( vdev , endpath )"		359581	1					
ANR	359652	Callee	vdev_proc		359581	0					
ANR	359653	Identifier	vdev_proc		359581	0					
ANR	359654	ArgumentList	vdev		359581	1					
ANR	359655	Argument	vdev		359581	0					
ANR	359656	Identifier	vdev		359581	0					
ANR	359657	Argument	endpath		359581	1					
ANR	359658	Identifier	endpath		359581	0					
ANR	359659	ArgumentList	vdev		359581	1					
ANR	359660	Argument	vdev		359581	0					
ANR	359661	Identifier	vdev		359581	0					
ANR	359662	Argument	type		359581	1					
ANR	359663	Identifier	type		359581	0					
ANR	359664	ReturnType	int		359581	1					
ANR	359665	Identifier	gdev_vector_dorect		359581	2					
ANR	359666	ParameterList	"gx_device_vector * vdev , fixed x0 , fixed y0 , fixed x1 , fixed y1 , gx_path_type_t type"		359581	3					
ANR	359667	Parameter	gx_device_vector * vdev	217:19:7580:7602	359581	0	True				
ANR	359668	ParameterType	gx_device_vector *		359581	0					
ANR	359669	Identifier	vdev		359581	1					
ANR	359670	Parameter	fixed x0	217:44:7605:7612	359581	1	True				
ANR	359671	ParameterType	fixed		359581	0					
ANR	359672	Identifier	x0		359581	1					
ANR	359673	Parameter	fixed y0	217:54:7615:7622	359581	2	True				
ANR	359674	ParameterType	fixed		359581	0					
ANR	359675	Identifier	y0		359581	1					
ANR	359676	Parameter	fixed x1	217:64:7625:7632	359581	3	True				
ANR	359677	ParameterType	fixed		359581	0					
ANR	359678	Identifier	x1		359581	1					
ANR	359679	Parameter	fixed y1	218:19:7654:7661	359581	4	True				
ANR	359680	ParameterType	fixed		359581	0					
ANR	359681	Identifier	y1		359581	1					
ANR	359682	Parameter	gx_path_type_t type	218:29:7664:7682	359581	5	True				
ANR	359683	ParameterType	gx_path_type_t		359581	0					
ANR	359684	Identifier	type		359581	1					
ANR	359685	CFGEntryNode	ENTRY		359581		True				
ANR	359686	CFGExitNode	EXIT		359581		True				
ANR	359687	Symbol	endpath		359581						
ANR	359688	Symbol	code		359581						
ANR	359689	Symbol	gx_path_type_stroke		359581						
ANR	359690	Symbol	"* vdev_proc ( vdev , endpath )"		359581						
ANR	359691	Symbol	vdev		359581						
ANR	359692	Symbol	gdev_vector_write_rectangle		359581						
ANR	359693	Symbol	type		359581						
ANR	359694	Symbol	"* vdev_proc ( vdev , beginpath )"		359581						
ANR	359695	Symbol	beginpath		359581						
ANR	359696	Symbol	* vdev_proc		359581						
ANR	359697	Symbol	y0		359581						
ANR	359698	Symbol	vdev_proc		359581						
ANR	359699	Symbol	x0		359581						
ANR	359700	Symbol	y1		359581						
ANR	359701	Symbol	x1		359581						
ANR	359702	Symbol	gx_rect_x_first		359581						
ANR	359703	Function	gdev_vector_load_cache	235:0:8174:8344							
ANR	359704	FunctionDef	gdev_vector_load_cache (gx_device_vector * vdev)		359703	0					
ANR	359705	CompoundStatement		237:0:8234:8344	359703	0					
ANR	359706	ExpressionStatement	vdev -> black = gx_device_black ( ( gx_device * ) vdev )	238:4:8240:8288	359703	0	True				
ANR	359707	AssignmentExpression	vdev -> black = gx_device_black ( ( gx_device * ) vdev )		359703	0		=			
ANR	359708	PtrMemberAccess	vdev -> black		359703	0					
ANR	359709	Identifier	vdev		359703	0					
ANR	359710	Identifier	black		359703	1					
ANR	359711	CallExpression	gx_device_black ( ( gx_device * ) vdev )		359703	1					
ANR	359712	Callee	gx_device_black		359703	0					
ANR	359713	Identifier	gx_device_black		359703	0					
ANR	359714	ArgumentList	( gx_device * ) vdev		359703	1					
ANR	359715	Argument	( gx_device * ) vdev		359703	0					
ANR	359716	CastExpression	( gx_device * ) vdev		359703	0					
ANR	359717	CastTarget	gx_device *		359703	0					
ANR	359718	Identifier	vdev		359703	1					
ANR	359719	ExpressionStatement	vdev -> white = gx_device_white ( ( gx_device * ) vdev )	239:4:8294:8342	359703	1	True				
ANR	359720	AssignmentExpression	vdev -> white = gx_device_white ( ( gx_device * ) vdev )		359703	0		=			
ANR	359721	PtrMemberAccess	vdev -> white		359703	0					
ANR	359722	Identifier	vdev		359703	0					
ANR	359723	Identifier	white		359703	1					
ANR	359724	CallExpression	gx_device_white ( ( gx_device * ) vdev )		359703	1					
ANR	359725	Callee	gx_device_white		359703	0					
ANR	359726	Identifier	gx_device_white		359703	0					
ANR	359727	ArgumentList	( gx_device * ) vdev		359703	1					
ANR	359728	Argument	( gx_device * ) vdev		359703	0					
ANR	359729	CastExpression	( gx_device * ) vdev		359703	0					
ANR	359730	CastTarget	gx_device *		359703	0					
ANR	359731	Identifier	vdev		359703	1					
ANR	359732	ReturnType	static void		359703	1					
ANR	359733	Identifier	gdev_vector_load_cache		359703	2					
ANR	359734	ParameterList	gx_device_vector * vdev		359703	3					
ANR	359735	Parameter	gx_device_vector * vdev	236:23:8209:8231	359703	0	True				
ANR	359736	ParameterType	gx_device_vector *		359703	0					
ANR	359737	Identifier	vdev		359703	1					
ANR	359738	CFGEntryNode	ENTRY		359703		True				
ANR	359739	CFGExitNode	EXIT		359703		True				
ANR	359740	Symbol	* vdev		359703						
ANR	359741	Symbol	gx_device_black		359703						
ANR	359742	Symbol	gx_device_white		359703						
ANR	359743	Symbol	vdev -> black		359703						
ANR	359744	Symbol	vdev -> white		359703						
ANR	359745	Symbol	vdev		359703						
ANR	359746	Function	gdev_vector_init	243:0:8375:8685							
ANR	359747	FunctionDef	gdev_vector_init (gx_device_vector * vdev)		359746	0					
ANR	359748	CompoundStatement		245:0:8422:8685	359746	0					
ANR	359749	ExpressionStatement	gdev_vector_reset ( vdev )	246:4:8428:8451	359746	0	True				
ANR	359750	CallExpression	gdev_vector_reset ( vdev )		359746	0					
ANR	359751	Callee	gdev_vector_reset		359746	0					
ANR	359752	Identifier	gdev_vector_reset		359746	0					
ANR	359753	ArgumentList	vdev		359746	1					
ANR	359754	Argument	vdev		359746	0					
ANR	359755	Identifier	vdev		359746	0					
ANR	359756	IfStatement	"if ( dev_proc ( vdev , dev_spec_op ) == gx_default_dev_spec_op )"		359746	1					
ANR	359757	Condition	"dev_proc ( vdev , dev_spec_op ) == gx_default_dev_spec_op"	247:8:8461:8513	359746	0	True				
ANR	359758	EqualityExpression	"dev_proc ( vdev , dev_spec_op ) == gx_default_dev_spec_op"		359746	0		==			
ANR	359759	CallExpression	"dev_proc ( vdev , dev_spec_op )"		359746	0					
ANR	359760	Callee	dev_proc		359746	0					
ANR	359761	Identifier	dev_proc		359746	0					
ANR	359762	ArgumentList	vdev		359746	1					
ANR	359763	Argument	vdev		359746	0					
ANR	359764	Identifier	vdev		359746	0					
ANR	359765	Argument	dev_spec_op		359746	1					
ANR	359766	Identifier	dev_spec_op		359746	0					
ANR	359767	Identifier	gx_default_dev_spec_op		359746	1					
ANR	359768	ExpressionStatement	"set_dev_proc ( vdev , dev_spec_op , gdev_vector_dev_spec_op )"	248:8:8524:8580	359746	1	True				
ANR	359769	CallExpression	"set_dev_proc ( vdev , dev_spec_op , gdev_vector_dev_spec_op )"		359746	0					
ANR	359770	Callee	set_dev_proc		359746	0					
ANR	359771	Identifier	set_dev_proc		359746	0					
ANR	359772	ArgumentList	vdev		359746	1					
ANR	359773	Argument	vdev		359746	0					
ANR	359774	Identifier	vdev		359746	0					
ANR	359775	Argument	dev_spec_op		359746	1					
ANR	359776	Identifier	dev_spec_op		359746	0					
ANR	359777	Argument	gdev_vector_dev_spec_op		359746	2					
ANR	359778	Identifier	gdev_vector_dev_spec_op		359746	0					
ANR	359779	ExpressionStatement	vdev -> scale . x = vdev -> scale . y = 1.0	250:4:8587:8622	359746	2	True				
ANR	359780	AssignmentExpression	vdev -> scale . x = vdev -> scale . y = 1.0		359746	0		=			
ANR	359781	MemberAccess	vdev -> scale . x		359746	0					
ANR	359782	PtrMemberAccess	vdev -> scale		359746	0					
ANR	359783	Identifier	vdev		359746	0					
ANR	359784	Identifier	scale		359746	1					
ANR	359785	Identifier	x		359746	1					
ANR	359786	AssignmentExpression	vdev -> scale . y = 1.0		359746	1		=			
ANR	359787	MemberAccess	vdev -> scale . y		359746	0					
ANR	359788	PtrMemberAccess	vdev -> scale		359746	0					
ANR	359789	Identifier	vdev		359746	0					
ANR	359790	Identifier	scale		359746	1					
ANR	359791	Identifier	y		359746	1					
ANR	359792	PrimaryExpression	1.0		359746	1					
ANR	359793	ExpressionStatement	vdev -> in_page = false	251:4:8628:8649	359746	3	True				
ANR	359794	AssignmentExpression	vdev -> in_page = false		359746	0		=			
ANR	359795	PtrMemberAccess	vdev -> in_page		359746	0					
ANR	359796	Identifier	vdev		359746	0					
ANR	359797	Identifier	in_page		359746	1					
ANR	359798	Identifier	false		359746	1					
ANR	359799	ExpressionStatement	gdev_vector_load_cache ( vdev )	252:4:8655:8683	359746	4	True				
ANR	359800	CallExpression	gdev_vector_load_cache ( vdev )		359746	0					
ANR	359801	Callee	gdev_vector_load_cache		359746	0					
ANR	359802	Identifier	gdev_vector_load_cache		359746	0					
ANR	359803	ArgumentList	vdev		359746	1					
ANR	359804	Argument	vdev		359746	0					
ANR	359805	Identifier	vdev		359746	0					
ANR	359806	ReturnType	void		359746	1					
ANR	359807	Identifier	gdev_vector_init		359746	2					
ANR	359808	ParameterList	gx_device_vector * vdev		359746	3					
ANR	359809	Parameter	gx_device_vector * vdev	244:17:8397:8419	359746	0	True				
ANR	359810	ParameterType	gx_device_vector *		359746	0					
ANR	359811	Identifier	vdev		359746	1					
ANR	359812	CFGEntryNode	ENTRY		359746		True				
ANR	359813	CFGExitNode	EXIT		359746		True				
ANR	359814	Symbol	* vdev		359746						
ANR	359815	Symbol	vdev -> scale . y		359746						
ANR	359816	Symbol	vdev -> scale . x		359746						
ANR	359817	Symbol	dev_proc		359746						
ANR	359818	Symbol	vdev		359746						
ANR	359819	Symbol	dev_spec_op		359746						
ANR	359820	Symbol	gdev_vector_dev_spec_op		359746						
ANR	359821	Symbol	false		359746						
ANR	359822	Symbol	vdev -> in_page		359746						
ANR	359823	Symbol	gx_default_dev_spec_op		359746						
ANR	359824	Symbol	vdev -> scale		359746						
ANR	359825	Function	gdev_vector_reset	256:0:8731:9085							
ANR	359826	FunctionDef	gdev_vector_reset (gx_device_vector * vdev)		359825	0					
ANR	359827	CompoundStatement		258:0:8779:9085	359825	0					
ANR	359828	Statement	static	259:4:8785:8790	359825	0	True				
ANR	359829	IdentifierDeclStatement	const gs_gstate state_initial = { gs_gstate_initial ( 1.0 ) } ;	259:11:8792:8852	359825	1	True				
ANR	359830	IdentifierDecl	state_initial = { gs_gstate_initial ( 1.0 ) }		359825	0					
ANR	359831	IdentifierDeclType	const gs_gstate		359825	0					
ANR	359832	Identifier	state_initial		359825	1					
ANR	359833	AssignmentExpression	state_initial = { gs_gstate_initial ( 1.0 ) }		359825	2		=			
ANR	359834	Identifier	state_initial		359825	0					
ANR	359835	InitializerList	gs_gstate_initial ( 1.0 )		359825	1					
ANR	359836	CallExpression	gs_gstate_initial ( 1.0 )		359825	0					
ANR	359837	Callee	gs_gstate_initial		359825	0					
ANR	359838	Identifier	gs_gstate_initial		359825	0					
ANR	359839	ArgumentList	1.0		359825	1					
ANR	359840	Argument	1.0		359825	0					
ANR	359841	PrimaryExpression	1.0		359825	0					
ANR	359842	ExpressionStatement	vdev -> state = state_initial	262:4:8859:8886	359825	2	True				
ANR	359843	AssignmentExpression	vdev -> state = state_initial		359825	0		=			
ANR	359844	PtrMemberAccess	vdev -> state		359825	0					
ANR	359845	Identifier	vdev		359825	0					
ANR	359846	Identifier	state		359825	1					
ANR	359847	Identifier	state_initial		359825	1					
ANR	359848	ExpressionStatement	gx_hld_saved_color_init ( & vdev -> saved_fill_color )	263:4:8892:8940	359825	3	True				
ANR	359849	CallExpression	gx_hld_saved_color_init ( & vdev -> saved_fill_color )		359825	0					
ANR	359850	Callee	gx_hld_saved_color_init		359825	0					
ANR	359851	Identifier	gx_hld_saved_color_init		359825	0					
ANR	359852	ArgumentList	& vdev -> saved_fill_color		359825	1					
ANR	359853	Argument	& vdev -> saved_fill_color		359825	0					
ANR	359854	UnaryOperationExpression	& vdev -> saved_fill_color		359825	0					
ANR	359855	UnaryOperator	&		359825	0					
ANR	359856	PtrMemberAccess	vdev -> saved_fill_color		359825	1					
ANR	359857	Identifier	vdev		359825	0					
ANR	359858	Identifier	saved_fill_color		359825	1					
ANR	359859	ExpressionStatement	gx_hld_saved_color_init ( & vdev -> saved_stroke_color )	264:4:8946:8996	359825	4	True				
ANR	359860	CallExpression	gx_hld_saved_color_init ( & vdev -> saved_stroke_color )		359825	0					
ANR	359861	Callee	gx_hld_saved_color_init		359825	0					
ANR	359862	Identifier	gx_hld_saved_color_init		359825	0					
ANR	359863	ArgumentList	& vdev -> saved_stroke_color		359825	1					
ANR	359864	Argument	& vdev -> saved_stroke_color		359825	0					
ANR	359865	UnaryOperationExpression	& vdev -> saved_stroke_color		359825	0					
ANR	359866	UnaryOperator	&		359825	0					
ANR	359867	PtrMemberAccess	vdev -> saved_stroke_color		359825	1					
ANR	359868	Identifier	vdev		359825	0					
ANR	359869	Identifier	saved_stroke_color		359825	1					
ANR	359870	ExpressionStatement	"vdev -> clip_path_id = vdev -> no_clip_path_id = gs_next_ids ( vdev -> memory , 1 )"	265:4:9002:9083	359825	5	True				
ANR	359871	AssignmentExpression	"vdev -> clip_path_id = vdev -> no_clip_path_id = gs_next_ids ( vdev -> memory , 1 )"		359825	0		=			
ANR	359872	PtrMemberAccess	vdev -> clip_path_id		359825	0					
ANR	359873	Identifier	vdev		359825	0					
ANR	359874	Identifier	clip_path_id		359825	1					
ANR	359875	AssignmentExpression	"vdev -> no_clip_path_id = gs_next_ids ( vdev -> memory , 1 )"		359825	1		=			
ANR	359876	PtrMemberAccess	vdev -> no_clip_path_id		359825	0					
ANR	359877	Identifier	vdev		359825	0					
ANR	359878	Identifier	no_clip_path_id		359825	1					
ANR	359879	CallExpression	"gs_next_ids ( vdev -> memory , 1 )"		359825	1					
ANR	359880	Callee	gs_next_ids		359825	0					
ANR	359881	Identifier	gs_next_ids		359825	0					
ANR	359882	ArgumentList	vdev -> memory		359825	1					
ANR	359883	Argument	vdev -> memory		359825	0					
ANR	359884	PtrMemberAccess	vdev -> memory		359825	0					
ANR	359885	Identifier	vdev		359825	0					
ANR	359886	Identifier	memory		359825	1					
ANR	359887	Argument	1		359825	1					
ANR	359888	PrimaryExpression	1		359825	0					
ANR	359889	ReturnType	void		359825	1					
ANR	359890	Identifier	gdev_vector_reset		359825	2					
ANR	359891	ParameterList	gx_device_vector * vdev		359825	3					
ANR	359892	Parameter	gx_device_vector * vdev	257:18:8754:8776	359825	0	True				
ANR	359893	ParameterType	gx_device_vector *		359825	0					
ANR	359894	Identifier	vdev		359825	1					
ANR	359895	CFGEntryNode	ENTRY		359825		True				
ANR	359896	CFGExitNode	EXIT		359825		True				
ANR	359897	Symbol	gs_gstate_initial		359825						
ANR	359898	Symbol	* vdev		359825						
ANR	359899	Symbol	& vdev -> saved_fill_color		359825						
ANR	359900	Symbol	vdev -> clip_path_id		359825						
ANR	359901	Symbol	vdev		359825						
ANR	359902	Symbol	vdev -> no_clip_path_id		359825						
ANR	359903	Symbol	vdev -> state		359825						
ANR	359904	Symbol	state_initial		359825						
ANR	359905	Symbol	& vdev -> saved_stroke_color		359825						
ANR	359906	Symbol	vdev -> memory		359825						
ANR	359907	Symbol	gs_next_ids		359825						
ANR	359908	Function	gdev_vector_open_file_options	270:0:9127:12716							
ANR	359909	FunctionDef	"gdev_vector_open_file_options (gx_device_vector * vdev , uint strmbuf_size , int open_options)"		359908	0					
ANR	359910	CompoundStatement		273:0:9253:12716	359908	0					
ANR	359911	IdentifierDeclStatement	bool binary = ! ( open_options & VECTOR_OPEN_FILE_ASCII ) ;	274:4:9259:9313	359908	0	True				
ANR	359912	IdentifierDecl	binary = ! ( open_options & VECTOR_OPEN_FILE_ASCII )		359908	0					
ANR	359913	IdentifierDeclType	bool		359908	0					
ANR	359914	Identifier	binary		359908	1					
ANR	359915	AssignmentExpression	binary = ! ( open_options & VECTOR_OPEN_FILE_ASCII )		359908	2		=			
ANR	359916	Identifier	binary		359908	0					
ANR	359917	UnaryOperationExpression	! ( open_options & VECTOR_OPEN_FILE_ASCII )		359908	1					
ANR	359918	UnaryOperator	!		359908	0					
ANR	359919	BitAndExpression	open_options & VECTOR_OPEN_FILE_ASCII		359908	1		&			
ANR	359920	Identifier	open_options		359908	0					
ANR	359921	Identifier	VECTOR_OPEN_FILE_ASCII		359908	1					
ANR	359922	IdentifierDeclStatement	int code = - 1 ;	275:4:9319:9332	359908	1	True				
ANR	359923	IdentifierDecl	code = - 1		359908	0					
ANR	359924	IdentifierDeclType	int		359908	0					
ANR	359925	Identifier	code		359908	1					
ANR	359926	AssignmentExpression	code = - 1		359908	2		=			
ANR	359927	Identifier	code		359908	0					
ANR	359928	UnaryOperationExpression	- 1		359908	1					
ANR	359929	UnaryOperator	-		359908	0					
ANR	359930	PrimaryExpression	1		359908	1					
ANR	359931	IdentifierDeclStatement	cmm_dev_profile_t * icc_struct = 0 ;	276:4:9380:9413	359908	2	True				
ANR	359932	IdentifierDecl	* icc_struct = 0		359908	0					
ANR	359933	IdentifierDeclType	cmm_dev_profile_t *		359908	0					
ANR	359934	Identifier	icc_struct		359908	1					
ANR	359935	AssignmentExpression	* icc_struct = 0		359908	2		=			
ANR	359936	Identifier	icc_struct		359908	0					
ANR	359937	PrimaryExpression	0		359908	1					
ANR	359938	IfStatement	if ( ! ( open_options & VECTOR_OPEN_FILE_SEQUENTIAL ) )		359908	3					
ANR	359939	Condition	! ( open_options & VECTOR_OPEN_FILE_SEQUENTIAL )	279:8:9489:9533	359908	0	True				
ANR	359940	UnaryOperationExpression	! ( open_options & VECTOR_OPEN_FILE_SEQUENTIAL )		359908	0					
ANR	359941	UnaryOperator	!		359908	0					
ANR	359942	BitAndExpression	open_options & VECTOR_OPEN_FILE_SEQUENTIAL		359908	1		&			
ANR	359943	Identifier	open_options		359908	0					
ANR	359944	Identifier	VECTOR_OPEN_FILE_SEQUENTIAL		359908	1					
ANR	359945	CompoundStatement		7:55:282:282	359908	1					
ANR	359946	ExpressionStatement	"code = gx_device_open_output_file ( ( gx_device * ) vdev , vdev -> fname , binary , true , & vdev -> file )"	281:8:9585:9728	359908	0	True				
ANR	359947	AssignmentExpression	"code = gx_device_open_output_file ( ( gx_device * ) vdev , vdev -> fname , binary , true , & vdev -> file )"		359908	0		=			
ANR	359948	Identifier	code		359908	0					
ANR	359949	CallExpression	"gx_device_open_output_file ( ( gx_device * ) vdev , vdev -> fname , binary , true , & vdev -> file )"		359908	1					
ANR	359950	Callee	gx_device_open_output_file		359908	0					
ANR	359951	Identifier	gx_device_open_output_file		359908	0					
ANR	359952	ArgumentList	( gx_device * ) vdev		359908	1					
ANR	359953	Argument	( gx_device * ) vdev		359908	0					
ANR	359954	CastExpression	( gx_device * ) vdev		359908	0					
ANR	359955	CastTarget	gx_device *		359908	0					
ANR	359956	Identifier	vdev		359908	1					
ANR	359957	Argument	vdev -> fname		359908	1					
ANR	359958	PtrMemberAccess	vdev -> fname		359908	0					
ANR	359959	Identifier	vdev		359908	0					
ANR	359960	Identifier	fname		359908	1					
ANR	359961	Argument	binary		359908	2					
ANR	359962	Identifier	binary		359908	0					
ANR	359963	Argument	true		359908	3					
ANR	359964	Identifier	true		359908	0					
ANR	359965	Argument	& vdev -> file		359908	4					
ANR	359966	UnaryOperationExpression	& vdev -> file		359908	0					
ANR	359967	UnaryOperator	&		359908	0					
ANR	359968	PtrMemberAccess	vdev -> file		359908	1					
ANR	359969	Identifier	vdev		359908	0					
ANR	359970	Identifier	file		359908	1					
ANR	359971	IfStatement	if ( code < 0 && ( open_options & ( VECTOR_OPEN_FILE_SEQUENTIAL | VECTOR_OPEN_FILE_SEQUENTIAL_OK ) ) )		359908	4					
ANR	359972	Condition	code < 0 && ( open_options & ( VECTOR_OPEN_FILE_SEQUENTIAL | VECTOR_OPEN_FILE_SEQUENTIAL_OK ) )	285:8:9744:9871	359908	0	True				
ANR	359973	AndExpression	code < 0 && ( open_options & ( VECTOR_OPEN_FILE_SEQUENTIAL | VECTOR_OPEN_FILE_SEQUENTIAL_OK ) )		359908	0		&&			
ANR	359974	RelationalExpression	code < 0		359908	0		<			
ANR	359975	Identifier	code		359908	0					
ANR	359976	PrimaryExpression	0		359908	1					
ANR	359977	BitAndExpression	open_options & ( VECTOR_OPEN_FILE_SEQUENTIAL | VECTOR_OPEN_FILE_SEQUENTIAL_OK )		359908	1		&			
ANR	359978	Identifier	open_options		359908	0					
ANR	359979	InclusiveOrExpression	VECTOR_OPEN_FILE_SEQUENTIAL | VECTOR_OPEN_FILE_SEQUENTIAL_OK		359908	1		|			
ANR	359980	Identifier	VECTOR_OPEN_FILE_SEQUENTIAL		359908	0					
ANR	359981	Identifier	VECTOR_OPEN_FILE_SEQUENTIAL_OK		359908	1					
ANR	359982	CompoundStatement		14:71:620:620	359908	1					
ANR	359983	ExpressionStatement	"code = gx_device_open_output_file ( ( gx_device * ) vdev , vdev -> fname , binary , false , & vdev -> file )"	288:8:9925:10060	359908	0	True				
ANR	359984	AssignmentExpression	"code = gx_device_open_output_file ( ( gx_device * ) vdev , vdev -> fname , binary , false , & vdev -> file )"		359908	0		=			
ANR	359985	Identifier	code		359908	0					
ANR	359986	CallExpression	"gx_device_open_output_file ( ( gx_device * ) vdev , vdev -> fname , binary , false , & vdev -> file )"		359908	1					
ANR	359987	Callee	gx_device_open_output_file		359908	0					
ANR	359988	Identifier	gx_device_open_output_file		359908	0					
ANR	359989	ArgumentList	( gx_device * ) vdev		359908	1					
ANR	359990	Argument	( gx_device * ) vdev		359908	0					
ANR	359991	CastExpression	( gx_device * ) vdev		359908	0					
ANR	359992	CastTarget	gx_device *		359908	0					
ANR	359993	Identifier	vdev		359908	1					
ANR	359994	Argument	vdev -> fname		359908	1					
ANR	359995	PtrMemberAccess	vdev -> fname		359908	0					
ANR	359996	Identifier	vdev		359908	0					
ANR	359997	Identifier	fname		359908	1					
ANR	359998	Argument	binary		359908	2					
ANR	359999	Identifier	binary		359908	0					
ANR	360000	Argument	false		359908	3					
ANR	360001	Identifier	false		359908	0					
ANR	360002	Argument	& vdev -> file		359908	4					
ANR	360003	UnaryOperationExpression	& vdev -> file		359908	0					
ANR	360004	UnaryOperator	&		359908	0					
ANR	360005	PtrMemberAccess	vdev -> file		359908	1					
ANR	360006	Identifier	vdev		359908	0					
ANR	360007	Identifier	file		359908	1					
ANR	360008	IfStatement	"if ( ( code >= 0 ) && ( dev_proc ( vdev , get_profile ) != NULL ) )"		359908	5					
ANR	360009	Condition	"( code >= 0 ) && ( dev_proc ( vdev , get_profile ) != NULL )"	291:8:10076:10127	359908	0	True				
ANR	360010	AndExpression	"( code >= 0 ) && ( dev_proc ( vdev , get_profile ) != NULL )"		359908	0		&&			
ANR	360011	RelationalExpression	code >= 0		359908	0		>=			
ANR	360012	Identifier	code		359908	0					
ANR	360013	PrimaryExpression	0		359908	1					
ANR	360014	EqualityExpression	"dev_proc ( vdev , get_profile ) != NULL"		359908	1		!=			
ANR	360015	CallExpression	"dev_proc ( vdev , get_profile )"		359908	0					
ANR	360016	Callee	dev_proc		359908	0					
ANR	360017	Identifier	dev_proc		359908	0					
ANR	360018	ArgumentList	vdev		359908	1					
ANR	360019	Argument	vdev		359908	0					
ANR	360020	Identifier	vdev		359908	0					
ANR	360021	Argument	get_profile		359908	1					
ANR	360022	Identifier	get_profile		359908	0					
ANR	360023	Identifier	NULL		359908	1					
ANR	360024	CompoundStatement		19:62:876:876	359908	1					
ANR	360025	ExpressionStatement	"code = dev_proc ( vdev , get_profile ) ( ( gx_device * ) vdev , & icc_struct )"	292:8:10140:10206	359908	0	True				
ANR	360026	AssignmentExpression	"code = dev_proc ( vdev , get_profile ) ( ( gx_device * ) vdev , & icc_struct )"		359908	0		=			
ANR	360027	Identifier	code		359908	0					
ANR	360028	CallExpression	"dev_proc ( vdev , get_profile ) ( ( gx_device * ) vdev , & icc_struct )"		359908	1					
ANR	360029	Callee	"dev_proc ( vdev , get_profile )"		359908	0					
ANR	360030	CallExpression	"dev_proc ( vdev , get_profile )"		359908	0					
ANR	360031	Callee	dev_proc		359908	0					
ANR	360032	Identifier	dev_proc		359908	0					
ANR	360033	ArgumentList	vdev		359908	1					
ANR	360034	Argument	vdev		359908	0					
ANR	360035	Identifier	vdev		359908	0					
ANR	360036	Argument	get_profile		359908	1					
ANR	360037	Identifier	get_profile		359908	0					
ANR	360038	ArgumentList	( gx_device * ) vdev		359908	1					
ANR	360039	Argument	( gx_device * ) vdev		359908	0					
ANR	360040	CastExpression	( gx_device * ) vdev		359908	0					
ANR	360041	CastTarget	gx_device *		359908	0					
ANR	360042	Identifier	vdev		359908	1					
ANR	360043	Argument	& icc_struct		359908	1					
ANR	360044	UnaryOperationExpression	& icc_struct		359908	0					
ANR	360045	UnaryOperator	&		359908	0					
ANR	360046	Identifier	icc_struct		359908	1					
ANR	360047	IfStatement	if ( code < 0 )		359908	6					
ANR	360048	Condition	code < 0	295:8:10223:10230	359908	0	True				
ANR	360049	RelationalExpression	code < 0		359908	0		<			
ANR	360050	Identifier	code		359908	0					
ANR	360051	PrimaryExpression	0		359908	1					
ANR	360052	ReturnStatement	return code ;	296:8:10241:10252	359908	1	True				
ANR	360053	Identifier	code		359908	0					
ANR	360054	IfStatement	"if ( ( vdev -> strmbuf = gs_alloc_bytes ( vdev -> v_memory , strmbuf_size , ""vector_open(strmbuf)"" ) ) == 0 || ( vdev -> strm = s_alloc ( vdev -> v_memory , ""vector_open(strm)"" ) ) == 0 || ( ( open_options & VECTOR_OPEN_FILE_BBOX ) && ( vdev -> bbox_device = gs_alloc_struct_immovable ( vdev -> v_memory , gx_device_bbox , & st_device_bbox , ""vector_open(bbox_device)"" ) ) == 0 ) )"		359908	7					
ANR	360055	Condition	"( vdev -> strmbuf = gs_alloc_bytes ( vdev -> v_memory , strmbuf_size , ""vector_open(strmbuf)"" ) ) == 0 || ( vdev -> strm = s_alloc ( vdev -> v_memory , ""vector_open(strm)"" ) ) == 0 || ( ( open_options & VECTOR_OPEN_FILE_BBOX ) && ( vdev -> bbox_device = gs_alloc_struct_immovable ( vdev -> v_memory , gx_device_bbox , & st_device_bbox , ""vector_open(bbox_device)"" ) ) == 0 )"	297:8:10262:10774	359908	0	True				
ANR	360056	OrExpression	"( vdev -> strmbuf = gs_alloc_bytes ( vdev -> v_memory , strmbuf_size , ""vector_open(strmbuf)"" ) ) == 0 || ( vdev -> strm = s_alloc ( vdev -> v_memory , ""vector_open(strm)"" ) ) == 0 || ( ( open_options & VECTOR_OPEN_FILE_BBOX ) && ( vdev -> bbox_device = gs_alloc_struct_immovable ( vdev -> v_memory , gx_device_bbox , & st_device_bbox , ""vector_open(bbox_device)"" ) ) == 0 )"		359908	0		||			
ANR	360057	EqualityExpression	"( vdev -> strmbuf = gs_alloc_bytes ( vdev -> v_memory , strmbuf_size , ""vector_open(strmbuf)"" ) ) == 0"		359908	0		==			
ANR	360058	AssignmentExpression	"vdev -> strmbuf = gs_alloc_bytes ( vdev -> v_memory , strmbuf_size , ""vector_open(strmbuf)"" )"		359908	0		=			
ANR	360059	PtrMemberAccess	vdev -> strmbuf		359908	0					
ANR	360060	Identifier	vdev		359908	0					
ANR	360061	Identifier	strmbuf		359908	1					
ANR	360062	CallExpression	"gs_alloc_bytes ( vdev -> v_memory , strmbuf_size , ""vector_open(strmbuf)"" )"		359908	1					
ANR	360063	Callee	gs_alloc_bytes		359908	0					
ANR	360064	Identifier	gs_alloc_bytes		359908	0					
ANR	360065	ArgumentList	vdev -> v_memory		359908	1					
ANR	360066	Argument	vdev -> v_memory		359908	0					
ANR	360067	PtrMemberAccess	vdev -> v_memory		359908	0					
ANR	360068	Identifier	vdev		359908	0					
ANR	360069	Identifier	v_memory		359908	1					
ANR	360070	Argument	strmbuf_size		359908	1					
ANR	360071	Identifier	strmbuf_size		359908	0					
ANR	360072	Argument	"""vector_open(strmbuf)"""		359908	2					
ANR	360073	PrimaryExpression	"""vector_open(strmbuf)"""		359908	0					
ANR	360074	PrimaryExpression	0		359908	1					
ANR	360075	OrExpression	"( vdev -> strm = s_alloc ( vdev -> v_memory , ""vector_open(strm)"" ) ) == 0 || ( ( open_options & VECTOR_OPEN_FILE_BBOX ) && ( vdev -> bbox_device = gs_alloc_struct_immovable ( vdev -> v_memory , gx_device_bbox , & st_device_bbox , ""vector_open(bbox_device)"" ) ) == 0 )"		359908	1		||			
ANR	360076	EqualityExpression	"( vdev -> strm = s_alloc ( vdev -> v_memory , ""vector_open(strm)"" ) ) == 0"		359908	0		==			
ANR	360077	AssignmentExpression	"vdev -> strm = s_alloc ( vdev -> v_memory , ""vector_open(strm)"" )"		359908	0		=			
ANR	360078	PtrMemberAccess	vdev -> strm		359908	0					
ANR	360079	Identifier	vdev		359908	0					
ANR	360080	Identifier	strm		359908	1					
ANR	360081	CallExpression	"s_alloc ( vdev -> v_memory , ""vector_open(strm)"" )"		359908	1					
ANR	360082	Callee	s_alloc		359908	0					
ANR	360083	Identifier	s_alloc		359908	0					
ANR	360084	ArgumentList	vdev -> v_memory		359908	1					
ANR	360085	Argument	vdev -> v_memory		359908	0					
ANR	360086	PtrMemberAccess	vdev -> v_memory		359908	0					
ANR	360087	Identifier	vdev		359908	0					
ANR	360088	Identifier	v_memory		359908	1					
ANR	360089	Argument	"""vector_open(strm)"""		359908	1					
ANR	360090	PrimaryExpression	"""vector_open(strm)"""		359908	0					
ANR	360091	PrimaryExpression	0		359908	1					
ANR	360092	AndExpression	"( open_options & VECTOR_OPEN_FILE_BBOX ) && ( vdev -> bbox_device = gs_alloc_struct_immovable ( vdev -> v_memory , gx_device_bbox , & st_device_bbox , ""vector_open(bbox_device)"" ) ) == 0"		359908	1		&&			
ANR	360093	BitAndExpression	open_options & VECTOR_OPEN_FILE_BBOX		359908	0		&			
ANR	360094	Identifier	open_options		359908	0					
ANR	360095	Identifier	VECTOR_OPEN_FILE_BBOX		359908	1					
ANR	360096	EqualityExpression	"( vdev -> bbox_device = gs_alloc_struct_immovable ( vdev -> v_memory , gx_device_bbox , & st_device_bbox , ""vector_open(bbox_device)"" ) ) == 0"		359908	1		==			
ANR	360097	AssignmentExpression	"vdev -> bbox_device = gs_alloc_struct_immovable ( vdev -> v_memory , gx_device_bbox , & st_device_bbox , ""vector_open(bbox_device)"" )"		359908	0		=			
ANR	360098	PtrMemberAccess	vdev -> bbox_device		359908	0					
ANR	360099	Identifier	vdev		359908	0					
ANR	360100	Identifier	bbox_device		359908	1					
ANR	360101	CallExpression	"gs_alloc_struct_immovable ( vdev -> v_memory , gx_device_bbox , & st_device_bbox , ""vector_open(bbox_device)"" )"		359908	1					
ANR	360102	Callee	gs_alloc_struct_immovable		359908	0					
ANR	360103	Identifier	gs_alloc_struct_immovable		359908	0					
ANR	360104	ArgumentList	vdev -> v_memory		359908	1					
ANR	360105	Argument	vdev -> v_memory		359908	0					
ANR	360106	PtrMemberAccess	vdev -> v_memory		359908	0					
ANR	360107	Identifier	vdev		359908	0					
ANR	360108	Identifier	v_memory		359908	1					
ANR	360109	Argument	gx_device_bbox		359908	1					
ANR	360110	Identifier	gx_device_bbox		359908	0					
ANR	360111	Argument	& st_device_bbox		359908	2					
ANR	360112	UnaryOperationExpression	& st_device_bbox		359908	0					
ANR	360113	UnaryOperator	&		359908	0					
ANR	360114	Identifier	st_device_bbox		359908	1					
ANR	360115	Argument	"""vector_open(bbox_device)"""		359908	3					
ANR	360116	PrimaryExpression	"""vector_open(bbox_device)"""		359908	0					
ANR	360117	PrimaryExpression	0		359908	1					
ANR	360118	CompoundStatement		34:10:1532:1532	359908	1					
ANR	360119	IfStatement	if ( vdev -> bbox_device )		359908	0					
ANR	360120	Condition	vdev -> bbox_device	307:12:10800:10816	359908	0	True				
ANR	360121	PtrMemberAccess	vdev -> bbox_device		359908	0					
ANR	360122	Identifier	vdev		359908	0					
ANR	360123	Identifier	bbox_device		359908	1					
ANR	360124	ExpressionStatement	"gs_free_object ( vdev -> v_memory , vdev -> bbox_device , ""vector_open(bbox_device)"" )"	308:12:10831:10935	359908	1	True				
ANR	360125	CallExpression	"gs_free_object ( vdev -> v_memory , vdev -> bbox_device , ""vector_open(bbox_device)"" )"		359908	0					
ANR	360126	Callee	gs_free_object		359908	0					
ANR	360127	Identifier	gs_free_object		359908	0					
ANR	360128	ArgumentList	vdev -> v_memory		359908	1					
ANR	360129	Argument	vdev -> v_memory		359908	0					
ANR	360130	PtrMemberAccess	vdev -> v_memory		359908	0					
ANR	360131	Identifier	vdev		359908	0					
ANR	360132	Identifier	v_memory		359908	1					
ANR	360133	Argument	vdev -> bbox_device		359908	1					
ANR	360134	PtrMemberAccess	vdev -> bbox_device		359908	0					
ANR	360135	Identifier	vdev		359908	0					
ANR	360136	Identifier	bbox_device		359908	1					
ANR	360137	Argument	"""vector_open(bbox_device)"""		359908	2					
ANR	360138	PrimaryExpression	"""vector_open(bbox_device)"""		359908	0					
ANR	360139	ExpressionStatement	vdev -> bbox_device = 0	310:8:10945:10966	359908	1	True				
ANR	360140	AssignmentExpression	vdev -> bbox_device = 0		359908	0		=			
ANR	360141	PtrMemberAccess	vdev -> bbox_device		359908	0					
ANR	360142	Identifier	vdev		359908	0					
ANR	360143	Identifier	bbox_device		359908	1					
ANR	360144	PrimaryExpression	0		359908	1					
ANR	360145	IfStatement	if ( vdev -> strm )		359908	2					
ANR	360146	Condition	vdev -> strm	311:12:10980:10989	359908	0	True				
ANR	360147	PtrMemberAccess	vdev -> strm		359908	0					
ANR	360148	Identifier	vdev		359908	0					
ANR	360149	Identifier	strm		359908	1					
ANR	360150	ExpressionStatement	"gs_free_object ( vdev -> v_memory , vdev -> strm , ""vector_open(strm)"" )"	312:12:11004:11094	359908	1	True				
ANR	360151	CallExpression	"gs_free_object ( vdev -> v_memory , vdev -> strm , ""vector_open(strm)"" )"		359908	0					
ANR	360152	Callee	gs_free_object		359908	0					
ANR	360153	Identifier	gs_free_object		359908	0					
ANR	360154	ArgumentList	vdev -> v_memory		359908	1					
ANR	360155	Argument	vdev -> v_memory		359908	0					
ANR	360156	PtrMemberAccess	vdev -> v_memory		359908	0					
ANR	360157	Identifier	vdev		359908	0					
ANR	360158	Identifier	v_memory		359908	1					
ANR	360159	Argument	vdev -> strm		359908	1					
ANR	360160	PtrMemberAccess	vdev -> strm		359908	0					
ANR	360161	Identifier	vdev		359908	0					
ANR	360162	Identifier	strm		359908	1					
ANR	360163	Argument	"""vector_open(strm)"""		359908	2					
ANR	360164	PrimaryExpression	"""vector_open(strm)"""		359908	0					
ANR	360165	ExpressionStatement	vdev -> strm = 0	314:8:11104:11118	359908	3	True				
ANR	360166	AssignmentExpression	vdev -> strm = 0		359908	0		=			
ANR	360167	PtrMemberAccess	vdev -> strm		359908	0					
ANR	360168	Identifier	vdev		359908	0					
ANR	360169	Identifier	strm		359908	1					
ANR	360170	PrimaryExpression	0		359908	1					
ANR	360171	IfStatement	if ( vdev -> strmbuf )		359908	4					
ANR	360172	Condition	vdev -> strmbuf	315:12:11132:11144	359908	0	True				
ANR	360173	PtrMemberAccess	vdev -> strmbuf		359908	0					
ANR	360174	Identifier	vdev		359908	0					
ANR	360175	Identifier	strmbuf		359908	1					
ANR	360176	ExpressionStatement	"gs_free_object ( vdev -> v_memory , vdev -> strmbuf , ""vector_open(strmbuf)"" )"	316:12:11159:11255	359908	1	True				
ANR	360177	CallExpression	"gs_free_object ( vdev -> v_memory , vdev -> strmbuf , ""vector_open(strmbuf)"" )"		359908	0					
ANR	360178	Callee	gs_free_object		359908	0					
ANR	360179	Identifier	gs_free_object		359908	0					
ANR	360180	ArgumentList	vdev -> v_memory		359908	1					
ANR	360181	Argument	vdev -> v_memory		359908	0					
ANR	360182	PtrMemberAccess	vdev -> v_memory		359908	0					
ANR	360183	Identifier	vdev		359908	0					
ANR	360184	Identifier	v_memory		359908	1					
ANR	360185	Argument	vdev -> strmbuf		359908	1					
ANR	360186	PtrMemberAccess	vdev -> strmbuf		359908	0					
ANR	360187	Identifier	vdev		359908	0					
ANR	360188	Identifier	strmbuf		359908	1					
ANR	360189	Argument	"""vector_open(strmbuf)"""		359908	2					
ANR	360190	PrimaryExpression	"""vector_open(strmbuf)"""		359908	0					
ANR	360191	ExpressionStatement	vdev -> strmbuf = 0	318:8:11265:11282	359908	5	True				
ANR	360192	AssignmentExpression	vdev -> strmbuf = 0		359908	0		=			
ANR	360193	PtrMemberAccess	vdev -> strmbuf		359908	0					
ANR	360194	Identifier	vdev		359908	0					
ANR	360195	Identifier	strmbuf		359908	1					
ANR	360196	PrimaryExpression	0		359908	1					
ANR	360197	ExpressionStatement	"gx_device_close_output_file ( ( gx_device * ) vdev , vdev -> fname , vdev -> file )"	319:8:11292:11363	359908	6	True				
ANR	360198	CallExpression	"gx_device_close_output_file ( ( gx_device * ) vdev , vdev -> fname , vdev -> file )"		359908	0					
ANR	360199	Callee	gx_device_close_output_file		359908	0					
ANR	360200	Identifier	gx_device_close_output_file		359908	0					
ANR	360201	ArgumentList	( gx_device * ) vdev		359908	1					
ANR	360202	Argument	( gx_device * ) vdev		359908	0					
ANR	360203	CastExpression	( gx_device * ) vdev		359908	0					
ANR	360204	CastTarget	gx_device *		359908	0					
ANR	360205	Identifier	vdev		359908	1					
ANR	360206	Argument	vdev -> fname		359908	1					
ANR	360207	PtrMemberAccess	vdev -> fname		359908	0					
ANR	360208	Identifier	vdev		359908	0					
ANR	360209	Identifier	fname		359908	1					
ANR	360210	Argument	vdev -> file		359908	2					
ANR	360211	PtrMemberAccess	vdev -> file		359908	0					
ANR	360212	Identifier	vdev		359908	0					
ANR	360213	Identifier	file		359908	1					
ANR	360214	ExpressionStatement	vdev -> file = 0	320:8:11373:11387	359908	7	True				
ANR	360215	AssignmentExpression	vdev -> file = 0		359908	0		=			
ANR	360216	PtrMemberAccess	vdev -> file		359908	0					
ANR	360217	Identifier	vdev		359908	0					
ANR	360218	Identifier	file		359908	1					
ANR	360219	PrimaryExpression	0		359908	1					
ANR	360220	ExpressionStatement	return_error ( gs_error_VMerror )	321:8:11397:11427	359908	8	True				
ANR	360221	CallExpression	return_error ( gs_error_VMerror )		359908	0					
ANR	360222	Callee	return_error		359908	0					
ANR	360223	Identifier	return_error		359908	0					
ANR	360224	ArgumentList	gs_error_VMerror		359908	1					
ANR	360225	Argument	gs_error_VMerror		359908	0					
ANR	360226	Identifier	gs_error_VMerror		359908	0					
ANR	360227	ExpressionStatement	vdev -> strmbuf_size = strmbuf_size	323:4:11439:11472	359908	8	True				
ANR	360228	AssignmentExpression	vdev -> strmbuf_size = strmbuf_size		359908	0		=			
ANR	360229	PtrMemberAccess	vdev -> strmbuf_size		359908	0					
ANR	360230	Identifier	vdev		359908	0					
ANR	360231	Identifier	strmbuf_size		359908	1					
ANR	360232	Identifier	strmbuf_size		359908	1					
ANR	360233	ExpressionStatement	"swrite_file ( vdev -> strm , vdev -> file , vdev -> strmbuf , strmbuf_size )"	324:4:11478:11542	359908	9	True				
ANR	360234	CallExpression	"swrite_file ( vdev -> strm , vdev -> file , vdev -> strmbuf , strmbuf_size )"		359908	0					
ANR	360235	Callee	swrite_file		359908	0					
ANR	360236	Identifier	swrite_file		359908	0					
ANR	360237	ArgumentList	vdev -> strm		359908	1					
ANR	360238	Argument	vdev -> strm		359908	0					
ANR	360239	PtrMemberAccess	vdev -> strm		359908	0					
ANR	360240	Identifier	vdev		359908	0					
ANR	360241	Identifier	strm		359908	1					
ANR	360242	Argument	vdev -> file		359908	1					
ANR	360243	PtrMemberAccess	vdev -> file		359908	0					
ANR	360244	Identifier	vdev		359908	0					
ANR	360245	Identifier	file		359908	1					
ANR	360246	Argument	vdev -> strmbuf		359908	2					
ANR	360247	PtrMemberAccess	vdev -> strmbuf		359908	0					
ANR	360248	Identifier	vdev		359908	0					
ANR	360249	Identifier	strmbuf		359908	1					
ANR	360250	Argument	strmbuf_size		359908	3					
ANR	360251	Identifier	strmbuf_size		359908	0					
ANR	360252	ExpressionStatement	vdev -> open_options = open_options	325:4:11548:11581	359908	10	True				
ANR	360253	AssignmentExpression	vdev -> open_options = open_options		359908	0		=			
ANR	360254	PtrMemberAccess	vdev -> open_options		359908	0					
ANR	360255	Identifier	vdev		359908	0					
ANR	360256	Identifier	open_options		359908	1					
ANR	360257	Identifier	open_options		359908	1					
ANR	360258	ExpressionStatement	vdev -> strm -> procs . close = vdev -> strm -> procs . flush	330:4:11708:11757	359908	11	True				
ANR	360259	AssignmentExpression	vdev -> strm -> procs . close = vdev -> strm -> procs . flush		359908	0		=			
ANR	360260	MemberAccess	vdev -> strm -> procs . close		359908	0					
ANR	360261	PtrMemberAccess	vdev -> strm -> procs		359908	0					
ANR	360262	PtrMemberAccess	vdev -> strm		359908	0					
ANR	360263	Identifier	vdev		359908	0					
ANR	360264	Identifier	strm		359908	1					
ANR	360265	Identifier	procs		359908	1					
ANR	360266	Identifier	close		359908	1					
ANR	360267	MemberAccess	vdev -> strm -> procs . flush		359908	1					
ANR	360268	PtrMemberAccess	vdev -> strm -> procs		359908	0					
ANR	360269	PtrMemberAccess	vdev -> strm		359908	0					
ANR	360270	Identifier	vdev		359908	0					
ANR	360271	Identifier	strm		359908	1					
ANR	360272	Identifier	procs		359908	1					
ANR	360273	Identifier	flush		359908	1					
ANR	360274	IfStatement	if ( vdev -> bbox_device )		359908	12					
ANR	360275	Condition	vdev -> bbox_device	331:8:11767:11783	359908	0	True				
ANR	360276	PtrMemberAccess	vdev -> bbox_device		359908	0					
ANR	360277	Identifier	vdev		359908	0					
ANR	360278	Identifier	bbox_device		359908	1					
ANR	360279	CompoundStatement		59:27:2532:2532	359908	1					
ANR	360280	ExpressionStatement	"gx_device_bbox_init ( vdev -> bbox_device , NULL , vdev -> v_memory )"	332:8:11796:11856	359908	0	True				
ANR	360281	CallExpression	"gx_device_bbox_init ( vdev -> bbox_device , NULL , vdev -> v_memory )"		359908	0					
ANR	360282	Callee	gx_device_bbox_init		359908	0					
ANR	360283	Identifier	gx_device_bbox_init		359908	0					
ANR	360284	ArgumentList	vdev -> bbox_device		359908	1					
ANR	360285	Argument	vdev -> bbox_device		359908	0					
ANR	360286	PtrMemberAccess	vdev -> bbox_device		359908	0					
ANR	360287	Identifier	vdev		359908	0					
ANR	360288	Identifier	bbox_device		359908	1					
ANR	360289	Argument	NULL		359908	1					
ANR	360290	Identifier	NULL		359908	0					
ANR	360291	Argument	vdev -> v_memory		359908	2					
ANR	360292	PtrMemberAccess	vdev -> v_memory		359908	0					
ANR	360293	Identifier	vdev		359908	0					
ANR	360294	Identifier	v_memory		359908	1					
ANR	360295	ExpressionStatement	rc_increment ( vdev -> bbox_device )	333:8:11866:11897	359908	1	True				
ANR	360296	CallExpression	rc_increment ( vdev -> bbox_device )		359908	0					
ANR	360297	Callee	rc_increment		359908	0					
ANR	360298	Identifier	rc_increment		359908	0					
ANR	360299	ArgumentList	vdev -> bbox_device		359908	1					
ANR	360300	Argument	vdev -> bbox_device		359908	0					
ANR	360301	PtrMemberAccess	vdev -> bbox_device		359908	0					
ANR	360302	Identifier	vdev		359908	0					
ANR	360303	Identifier	bbox_device		359908	1					
ANR	360304	ExpressionStatement	vdev -> bbox_device -> icc_struct = icc_struct	335:8:11908:11950	359908	2	True				
ANR	360305	AssignmentExpression	vdev -> bbox_device -> icc_struct = icc_struct		359908	0		=			
ANR	360306	PtrMemberAccess	vdev -> bbox_device -> icc_struct		359908	0					
ANR	360307	PtrMemberAccess	vdev -> bbox_device		359908	0					
ANR	360308	Identifier	vdev		359908	0					
ANR	360309	Identifier	bbox_device		359908	1					
ANR	360310	Identifier	icc_struct		359908	1					
ANR	360311	Identifier	icc_struct		359908	1					
ANR	360312	ExpressionStatement	rc_increment ( vdev -> bbox_device -> icc_struct )	336:8:11960:12003	359908	3	True				
ANR	360313	CallExpression	rc_increment ( vdev -> bbox_device -> icc_struct )		359908	0					
ANR	360314	Callee	rc_increment		359908	0					
ANR	360315	Identifier	rc_increment		359908	0					
ANR	360316	ArgumentList	vdev -> bbox_device -> icc_struct		359908	1					
ANR	360317	Argument	vdev -> bbox_device -> icc_struct		359908	0					
ANR	360318	PtrMemberAccess	vdev -> bbox_device -> icc_struct		359908	0					
ANR	360319	PtrMemberAccess	vdev -> bbox_device		359908	0					
ANR	360320	Identifier	vdev		359908	0					
ANR	360321	Identifier	bbox_device		359908	1					
ANR	360322	Identifier	icc_struct		359908	1					
ANR	360323	ExpressionStatement	"gx_device_set_resolution ( ( gx_device * ) vdev -> bbox_device , vdev -> HWResolution [ 0 ] , vdev -> HWResolution [ 1 ] )"	338:8:12014:12183	359908	4	True				
ANR	360324	CallExpression	"gx_device_set_resolution ( ( gx_device * ) vdev -> bbox_device , vdev -> HWResolution [ 0 ] , vdev -> HWResolution [ 1 ] )"		359908	0					
ANR	360325	Callee	gx_device_set_resolution		359908	0					
ANR	360326	Identifier	gx_device_set_resolution		359908	0					
ANR	360327	ArgumentList	( gx_device * ) vdev -> bbox_device		359908	1					
ANR	360328	Argument	( gx_device * ) vdev -> bbox_device		359908	0					
ANR	360329	CastExpression	( gx_device * ) vdev -> bbox_device		359908	0					
ANR	360330	CastTarget	gx_device *		359908	0					
ANR	360331	PtrMemberAccess	vdev -> bbox_device		359908	1					
ANR	360332	Identifier	vdev		359908	0					
ANR	360333	Identifier	bbox_device		359908	1					
ANR	360334	Argument	vdev -> HWResolution [ 0 ]		359908	1					
ANR	360335	ArrayIndexing	vdev -> HWResolution [ 0 ]		359908	0					
ANR	360336	PtrMemberAccess	vdev -> HWResolution		359908	0					
ANR	360337	Identifier	vdev		359908	0					
ANR	360338	Identifier	HWResolution		359908	1					
ANR	360339	PrimaryExpression	0		359908	1					
ANR	360340	Argument	vdev -> HWResolution [ 1 ]		359908	2					
ANR	360341	ArrayIndexing	vdev -> HWResolution [ 1 ]		359908	0					
ANR	360342	PtrMemberAccess	vdev -> HWResolution		359908	0					
ANR	360343	Identifier	vdev		359908	0					
ANR	360344	Identifier	HWResolution		359908	1					
ANR	360345	PrimaryExpression	1		359908	1					
ANR	360346	ExpressionStatement	"set_dev_proc ( vdev -> bbox_device , get_initial_matrix , dev_proc ( vdev , get_initial_matrix ) )"	344:8:12373:12481	359908	5	True				
ANR	360347	CallExpression	"set_dev_proc ( vdev -> bbox_device , get_initial_matrix , dev_proc ( vdev , get_initial_matrix ) )"		359908	0					
ANR	360348	Callee	set_dev_proc		359908	0					
ANR	360349	Identifier	set_dev_proc		359908	0					
ANR	360350	ArgumentList	vdev -> bbox_device		359908	1					
ANR	360351	Argument	vdev -> bbox_device		359908	0					
ANR	360352	PtrMemberAccess	vdev -> bbox_device		359908	0					
ANR	360353	Identifier	vdev		359908	0					
ANR	360354	Identifier	bbox_device		359908	1					
ANR	360355	Argument	get_initial_matrix		359908	1					
ANR	360356	Identifier	get_initial_matrix		359908	0					
ANR	360357	Argument	"dev_proc ( vdev , get_initial_matrix )"		359908	2					
ANR	360358	CallExpression	"dev_proc ( vdev , get_initial_matrix )"		359908	0					
ANR	360359	Callee	dev_proc		359908	0					
ANR	360360	Identifier	dev_proc		359908	0					
ANR	360361	ArgumentList	vdev		359908	1					
ANR	360362	Argument	vdev		359908	0					
ANR	360363	Identifier	vdev		359908	0					
ANR	360364	Argument	get_initial_matrix		359908	1					
ANR	360365	Identifier	get_initial_matrix		359908	0					
ANR	360366	ExpressionStatement	"( * dev_proc ( vdev -> bbox_device , open_device ) ) ( ( gx_device * ) vdev -> bbox_device )"	346:8:12491:12580	359908	6	True				
ANR	360367	CallExpression	"( * dev_proc ( vdev -> bbox_device , open_device ) ) ( ( gx_device * ) vdev -> bbox_device )"		359908	0					
ANR	360368	Callee	"* dev_proc ( vdev -> bbox_device , open_device )"		359908	0					
ANR	360369	UnaryOperationExpression	"* dev_proc ( vdev -> bbox_device , open_device )"		359908	0					
ANR	360370	UnaryOperator	*		359908	0					
ANR	360371	CallExpression	"dev_proc ( vdev -> bbox_device , open_device )"		359908	1					
ANR	360372	Callee	dev_proc		359908	0					
ANR	360373	Identifier	dev_proc		359908	0					
ANR	360374	ArgumentList	vdev -> bbox_device		359908	1					
ANR	360375	Argument	vdev -> bbox_device		359908	0					
ANR	360376	PtrMemberAccess	vdev -> bbox_device		359908	0					
ANR	360377	Identifier	vdev		359908	0					
ANR	360378	Identifier	bbox_device		359908	1					
ANR	360379	Argument	open_device		359908	1					
ANR	360380	Identifier	open_device		359908	0					
ANR	360381	ArgumentList	( gx_device * ) vdev -> bbox_device		359908	1					
ANR	360382	Argument	( gx_device * ) vdev -> bbox_device		359908	0					
ANR	360383	CastExpression	( gx_device * ) vdev -> bbox_device		359908	0					
ANR	360384	CastTarget	gx_device *		359908	0					
ANR	360385	PtrMemberAccess	vdev -> bbox_device		359908	1					
ANR	360386	Identifier	vdev		359908	0					
ANR	360387	Identifier	bbox_device		359908	1					
ANR	360388	ExpressionStatement	"code = install_internal_subclass_devices ( ( gx_device * * ) & vdev , NULL )"	350:4:12593:12660	359908	13	True				
ANR	360389	AssignmentExpression	"code = install_internal_subclass_devices ( ( gx_device * * ) & vdev , NULL )"		359908	0		=			
ANR	360390	Identifier	code		359908	0					
ANR	360391	CallExpression	"install_internal_subclass_devices ( ( gx_device * * ) & vdev , NULL )"		359908	1					
ANR	360392	Callee	install_internal_subclass_devices		359908	0					
ANR	360393	Identifier	install_internal_subclass_devices		359908	0					
ANR	360394	ArgumentList	( gx_device * * ) & vdev		359908	1					
ANR	360395	Argument	( gx_device * * ) & vdev		359908	0					
ANR	360396	CastExpression	( gx_device * * ) & vdev		359908	0					
ANR	360397	CastTarget	gx_device * *		359908	0					
ANR	360398	UnaryOperationExpression	& vdev		359908	1					
ANR	360399	UnaryOperator	&		359908	0					
ANR	360400	Identifier	vdev		359908	1					
ANR	360401	Argument	NULL		359908	1					
ANR	360402	Identifier	NULL		359908	0					
ANR	360403	IfStatement	if ( code < 0 )		359908	14					
ANR	360404	Condition	code < 0	351:8:12670:12677	359908	0	True				
ANR	360405	RelationalExpression	code < 0		359908	0		<			
ANR	360406	Identifier	code		359908	0					
ANR	360407	PrimaryExpression	0		359908	1					
ANR	360408	ReturnStatement	return code ;	352:8:12688:12699	359908	1	True				
ANR	360409	Identifier	code		359908	0					
ANR	360410	ReturnStatement	return 0 ;	354:4:12706:12714	359908	15	True				
ANR	360411	PrimaryExpression	0		359908	0					
ANR	360412	ReturnType	int		359908	1					
ANR	360413	Identifier	gdev_vector_open_file_options		359908	2					
ANR	360414	ParameterList	"gx_device_vector * vdev , uint strmbuf_size , int open_options"		359908	3					
ANR	360415	Parameter	gx_device_vector * vdev	271:30:9161:9183	359908	0	True				
ANR	360416	ParameterType	gx_device_vector *		359908	0					
ANR	360417	Identifier	vdev		359908	1					
ANR	360418	Parameter	uint strmbuf_size	271:55:9186:9202	359908	1	True				
ANR	360419	ParameterType	uint		359908	0					
ANR	360420	Identifier	strmbuf_size		359908	1					
ANR	360421	Parameter	int open_options	272:30:9235:9250	359908	2	True				
ANR	360422	ParameterType	int		359908	0					
ANR	360423	Identifier	open_options		359908	1					
ANR	360424	CFGEntryNode	ENTRY		359908		True				
ANR	360425	CFGExitNode	EXIT		359908		True				
ANR	360426	Symbol	vdev -> bbox_device		359908						
ANR	360427	Symbol	code		359908						
ANR	360428	Symbol	vdev -> open_options		359908						
ANR	360429	Symbol	* vdev -> strm		359908						
ANR	360430	Symbol	* vdev -> HWResolution		359908						
ANR	360431	Symbol	VECTOR_OPEN_FILE_BBOX		359908						
ANR	360432	Symbol	gs_alloc_struct_immovable		359908						
ANR	360433	Symbol	vdev -> strm		359908						
ANR	360434	Symbol	vdev -> strm -> procs . flush		359908						
ANR	360435	Symbol	& vdev		359908						
ANR	360436	Symbol	vdev -> fname		359908						
ANR	360437	Symbol	& st_device_bbox		359908						
ANR	360438	Symbol	open_device		359908						
ANR	360439	Symbol	vdev -> file		359908						
ANR	360440	Symbol	* * vdev		359908						
ANR	360441	Symbol	VECTOR_OPEN_FILE_SEQUENTIAL_OK		359908						
ANR	360442	Symbol	dev_proc		359908						
ANR	360443	Symbol	strmbuf_size		359908						
ANR	360444	Symbol	* vdev -> bbox_device		359908						
ANR	360445	Symbol	get_profile		359908						
ANR	360446	Symbol	& icc_struct		359908						
ANR	360447	Symbol	vdev -> strmbuf		359908						
ANR	360448	Symbol	vdev -> strmbuf_size		359908						
ANR	360449	Symbol	vdev -> HWResolution		359908						
ANR	360450	Symbol	VECTOR_OPEN_FILE_SEQUENTIAL		359908						
ANR	360451	Symbol	install_internal_subclass_devices		359908						
ANR	360452	Symbol	& vdev -> file		359908						
ANR	360453	Symbol	gs_alloc_bytes		359908						
ANR	360454	Symbol	get_initial_matrix		359908						
ANR	360455	Symbol	VECTOR_OPEN_FILE_ASCII		359908						
ANR	360456	Symbol	NULL		359908						
ANR	360457	Symbol	open_options		359908						
ANR	360458	Symbol	vdev -> strm -> procs		359908						
ANR	360459	Symbol	vdev		359908						
ANR	360460	Symbol	false		359908						
ANR	360461	Symbol	vdev -> v_memory		359908						
ANR	360462	Symbol	* vdev		359908						
ANR	360463	Symbol	gx_device_bbox		359908						
ANR	360464	Symbol	gs_error_VMerror		359908						
ANR	360465	Symbol	vdev -> bbox_device -> icc_struct		359908						
ANR	360466	Symbol	gx_device_open_output_file		359908						
ANR	360467	Symbol	binary		359908						
ANR	360468	Symbol	true		359908						
ANR	360469	Symbol	vdev -> strm -> procs . close		359908						
ANR	360470	Symbol	icc_struct		359908						
ANR	360471	Symbol	s_alloc		359908						
ANR	360472	Function	gdev_vector_stream	358:0:12788:12974							
ANR	360473	FunctionDef	gdev_vector_stream (gx_device_vector * vdev)		360472	0					
ANR	360474	CompoundStatement		360:0:12841:12974	360472	0					
ANR	360475	IfStatement	if ( ! vdev -> in_page )		360472	0					
ANR	360476	Condition	! vdev -> in_page	361:8:12851:12864	360472	0	True				
ANR	360477	UnaryOperationExpression	! vdev -> in_page		360472	0					
ANR	360478	UnaryOperator	!		360472	0					
ANR	360479	PtrMemberAccess	vdev -> in_page		360472	1					
ANR	360480	Identifier	vdev		360472	0					
ANR	360481	Identifier	in_page		360472	1					
ANR	360482	CompoundStatement		2:24:25:25	360472	1					
ANR	360483	ExpressionStatement	"( * vdev_proc ( vdev , beginpage ) ) ( vdev )"	362:8:12877:12913	360472	0	True				
ANR	360484	CallExpression	"( * vdev_proc ( vdev , beginpage ) ) ( vdev )"		360472	0					
ANR	360485	Callee	"* vdev_proc ( vdev , beginpage )"		360472	0					
ANR	360486	UnaryOperationExpression	"* vdev_proc ( vdev , beginpage )"		360472	0					
ANR	360487	UnaryOperator	*		360472	0					
ANR	360488	CallExpression	"vdev_proc ( vdev , beginpage )"		360472	1					
ANR	360489	Callee	vdev_proc		360472	0					
ANR	360490	Identifier	vdev_proc		360472	0					
ANR	360491	ArgumentList	vdev		360472	1					
ANR	360492	Argument	vdev		360472	0					
ANR	360493	Identifier	vdev		360472	0					
ANR	360494	Argument	beginpage		360472	1					
ANR	360495	Identifier	beginpage		360472	0					
ANR	360496	ArgumentList	vdev		360472	1					
ANR	360497	Argument	vdev		360472	0					
ANR	360498	Identifier	vdev		360472	0					
ANR	360499	ExpressionStatement	vdev -> in_page = true	363:8:12923:12943	360472	1	True				
ANR	360500	AssignmentExpression	vdev -> in_page = true		360472	0		=			
ANR	360501	PtrMemberAccess	vdev -> in_page		360472	0					
ANR	360502	Identifier	vdev		360472	0					
ANR	360503	Identifier	in_page		360472	1					
ANR	360504	Identifier	true		360472	1					
ANR	360505	ReturnStatement	return vdev -> strm ;	365:4:12955:12972	360472	1	True				
ANR	360506	PtrMemberAccess	vdev -> strm		360472	0					
ANR	360507	Identifier	vdev		360472	0					
ANR	360508	Identifier	strm		360472	1					
ANR	360509	ReturnType	stream *		360472	1					
ANR	360510	Identifier	gdev_vector_stream		360472	2					
ANR	360511	ParameterList	gx_device_vector * vdev		360472	3					
ANR	360512	Parameter	gx_device_vector * vdev	359:19:12816:12838	360472	0	True				
ANR	360513	ParameterType	gx_device_vector *		360472	0					
ANR	360514	Identifier	vdev		360472	1					
ANR	360515	CFGEntryNode	ENTRY		360472		True				
ANR	360516	CFGExitNode	EXIT		360472		True				
ANR	360517	Symbol	* vdev		360472						
ANR	360518	Symbol	beginpage		360472						
ANR	360519	Symbol	vdev_proc		360472						
ANR	360520	Symbol	vdev		360472						
ANR	360521	Symbol	vdev -> in_page		360472						
ANR	360522	Symbol	true		360472						
ANR	360523	Symbol	vdev -> strm		360472						
ANR	360524	Function	gdev_vector_update_log_op	369:0:13013:13349							
ANR	360525	FunctionDef	"gdev_vector_update_log_op (gx_device_vector * vdev , gs_logical_operation_t lop)"		360524	0					
ANR	360526	CompoundStatement		371:0:13096:13349	360524	0					
ANR	360527	IdentifierDeclStatement	gs_logical_operation_t diff = lop ^ vdev -> state . log_op ;	372:4:13102:13156	360524	0	True				
ANR	360528	IdentifierDecl	diff = lop ^ vdev -> state . log_op		360524	0					
ANR	360529	IdentifierDeclType	gs_logical_operation_t		360524	0					
ANR	360530	Identifier	diff		360524	1					
ANR	360531	AssignmentExpression	diff = lop ^ vdev -> state . log_op		360524	2		=			
ANR	360532	Identifier	diff		360524	0					
ANR	360533	ExclusiveOrExpression	lop ^ vdev -> state . log_op		360524	1		^			
ANR	360534	Identifier	lop		360524	0					
ANR	360535	MemberAccess	vdev -> state . log_op		360524	1					
ANR	360536	PtrMemberAccess	vdev -> state		360524	0					
ANR	360537	Identifier	vdev		360524	0					
ANR	360538	Identifier	state		360524	1					
ANR	360539	Identifier	log_op		360524	1					
ANR	360540	IfStatement	if ( diff != 0 )		360524	1					
ANR	360541	Condition	diff != 0	374:8:13167:13175	360524	0	True				
ANR	360542	EqualityExpression	diff != 0		360524	0		!=			
ANR	360543	Identifier	diff		360524	0					
ANR	360544	PrimaryExpression	0		360524	1					
ANR	360545	CompoundStatement		5:8:91:148	360524	1					
ANR	360546	IdentifierDeclStatement	"int code = ( * vdev_proc ( vdev , setlogop ) ) ( vdev , lop , diff ) ;"	375:8:13188:13245	360524	0	True				
ANR	360547	IdentifierDecl	"code = ( * vdev_proc ( vdev , setlogop ) ) ( vdev , lop , diff )"		360524	0					
ANR	360548	IdentifierDeclType	int		360524	0					
ANR	360549	Identifier	code		360524	1					
ANR	360550	AssignmentExpression	"code = ( * vdev_proc ( vdev , setlogop ) ) ( vdev , lop , diff )"		360524	2		=			
ANR	360551	Identifier	code		360524	0					
ANR	360552	CallExpression	"( * vdev_proc ( vdev , setlogop ) ) ( vdev , lop , diff )"		360524	1					
ANR	360553	Callee	"* vdev_proc ( vdev , setlogop )"		360524	0					
ANR	360554	UnaryOperationExpression	"* vdev_proc ( vdev , setlogop )"		360524	0					
ANR	360555	UnaryOperator	*		360524	0					
ANR	360556	CallExpression	"vdev_proc ( vdev , setlogop )"		360524	1					
ANR	360557	Callee	vdev_proc		360524	0					
ANR	360558	Identifier	vdev_proc		360524	0					
ANR	360559	ArgumentList	vdev		360524	1					
ANR	360560	Argument	vdev		360524	0					
ANR	360561	Identifier	vdev		360524	0					
ANR	360562	Argument	setlogop		360524	1					
ANR	360563	Identifier	setlogop		360524	0					
ANR	360564	ArgumentList	vdev		360524	1					
ANR	360565	Argument	vdev		360524	0					
ANR	360566	Identifier	vdev		360524	0					
ANR	360567	Argument	lop		360524	1					
ANR	360568	Identifier	lop		360524	0					
ANR	360569	Argument	diff		360524	2					
ANR	360570	Identifier	diff		360524	0					
ANR	360571	IfStatement	if ( code < 0 )		360524	1					
ANR	360572	Condition	code < 0	377:12:13260:13267	360524	0	True				
ANR	360573	RelationalExpression	code < 0		360524	0		<			
ANR	360574	Identifier	code		360524	0					
ANR	360575	PrimaryExpression	0		360524	1					
ANR	360576	ReturnStatement	return code ;	378:12:13282:13293	360524	1	True				
ANR	360577	Identifier	code		360524	0					
ANR	360578	ExpressionStatement	vdev -> state . log_op = lop	379:8:13303:13327	360524	2	True				
ANR	360579	AssignmentExpression	vdev -> state . log_op = lop		360524	0		=			
ANR	360580	MemberAccess	vdev -> state . log_op		360524	0					
ANR	360581	PtrMemberAccess	vdev -> state		360524	0					
ANR	360582	Identifier	vdev		360524	0					
ANR	360583	Identifier	state		360524	1					
ANR	360584	Identifier	log_op		360524	1					
ANR	360585	Identifier	lop		360524	1					
ANR	360586	ReturnStatement	return 0 ;	381:4:13339:13347	360524	2	True				
ANR	360587	PrimaryExpression	0		360524	0					
ANR	360588	ReturnType	int		360524	1					
ANR	360589	Identifier	gdev_vector_update_log_op		360524	2					
ANR	360590	ParameterList	"gx_device_vector * vdev , gs_logical_operation_t lop"		360524	3					
ANR	360591	Parameter	gx_device_vector * vdev	370:26:13043:13065	360524	0	True				
ANR	360592	ParameterType	gx_device_vector *		360524	0					
ANR	360593	Identifier	vdev		360524	1					
ANR	360594	Parameter	gs_logical_operation_t lop	370:51:13068:13093	360524	1	True				
ANR	360595	ParameterType	gs_logical_operation_t		360524	0					
ANR	360596	Identifier	lop		360524	1					
ANR	360597	CFGEntryNode	ENTRY		360524		True				
ANR	360598	CFGExitNode	EXIT		360524		True				
ANR	360599	Symbol	* vdev		360524						
ANR	360600	Symbol	code		360524						
ANR	360601	Symbol	* vdev_proc		360524						
ANR	360602	Symbol	vdev -> state . log_op		360524						
ANR	360603	Symbol	vdev_proc		360524						
ANR	360604	Symbol	setlogop		360524						
ANR	360605	Symbol	vdev		360524						
ANR	360606	Symbol	vdev -> state		360524						
ANR	360607	Symbol	diff		360524						
ANR	360608	Symbol	lop		360524						
ANR	360609	Symbol	"* vdev_proc ( vdev , setlogop )"		360524						
ANR	360610	Function	gdev_vector_update_color	385:0:13389:14279							
ANR	360611	FunctionDef	"gdev_vector_update_color (gx_device_vector * vdev , const gs_gstate * pgs , const gx_drawing_color * pdcolor , gx_hl_saved_color * sc , int ( * setcolor ) ( gx_device_vector * vdev , const gs_gstate * pgs , const gx_drawing_color * pdc ))"		360610	0					
ANR	360612	CompoundStatement		393:0:13840:14279	360610	0					
ANR	360613	IdentifierDeclStatement	gx_hl_saved_color temp ;	394:4:13846:13868	360610	0	True				
ANR	360614	IdentifierDecl	temp		360610	0					
ANR	360615	IdentifierDeclType	gx_hl_saved_color		360610	0					
ANR	360616	Identifier	temp		360610	1					
ANR	360617	IdentifierDeclStatement	int code ;	395:4:13874:13882	360610	1	True				
ANR	360618	IdentifierDecl	code		360610	0					
ANR	360619	IdentifierDeclType	int		360610	0					
ANR	360620	Identifier	code		360610	1					
ANR	360621	IdentifierDeclStatement	"bool hl_color = ( * vdev_proc ( vdev , can_handle_hl_color ) ) ( vdev , pgs , pdcolor ) ;"	396:4:13888:13964	360610	2	True				
ANR	360622	IdentifierDecl	"hl_color = ( * vdev_proc ( vdev , can_handle_hl_color ) ) ( vdev , pgs , pdcolor )"		360610	0					
ANR	360623	IdentifierDeclType	bool		360610	0					
ANR	360624	Identifier	hl_color		360610	1					
ANR	360625	AssignmentExpression	"hl_color = ( * vdev_proc ( vdev , can_handle_hl_color ) ) ( vdev , pgs , pdcolor )"		360610	2		=			
ANR	360626	Identifier	hl_color		360610	0					
ANR	360627	CallExpression	"( * vdev_proc ( vdev , can_handle_hl_color ) ) ( vdev , pgs , pdcolor )"		360610	1					
ANR	360628	Callee	"* vdev_proc ( vdev , can_handle_hl_color )"		360610	0					
ANR	360629	UnaryOperationExpression	"* vdev_proc ( vdev , can_handle_hl_color )"		360610	0					
ANR	360630	UnaryOperator	*		360610	0					
ANR	360631	CallExpression	"vdev_proc ( vdev , can_handle_hl_color )"		360610	1					
ANR	360632	Callee	vdev_proc		360610	0					
ANR	360633	Identifier	vdev_proc		360610	0					
ANR	360634	ArgumentList	vdev		360610	1					
ANR	360635	Argument	vdev		360610	0					
ANR	360636	Identifier	vdev		360610	0					
ANR	360637	Argument	can_handle_hl_color		360610	1					
ANR	360638	Identifier	can_handle_hl_color		360610	0					
ANR	360639	ArgumentList	vdev		360610	1					
ANR	360640	Argument	vdev		360610	0					
ANR	360641	Identifier	vdev		360610	0					
ANR	360642	Argument	pgs		360610	1					
ANR	360643	Identifier	pgs		360610	0					
ANR	360644	Argument	pdcolor		360610	2					
ANR	360645	Identifier	pdcolor		360610	0					
ANR	360646	IdentifierDeclStatement	const gs_gstate * pgs_for_hl_color = ( hl_color ? pgs : NULL ) ;	397:4:13970:14029	360610	3	True				
ANR	360647	IdentifierDecl	* pgs_for_hl_color = ( hl_color ? pgs : NULL )		360610	0					
ANR	360648	IdentifierDeclType	const gs_gstate *		360610	0					
ANR	360649	Identifier	pgs_for_hl_color		360610	1					
ANR	360650	AssignmentExpression	* pgs_for_hl_color = ( hl_color ? pgs : NULL )		360610	2		=			
ANR	360651	Identifier	pgs_for_hl_color		360610	0					
ANR	360652	ConditionalExpression	hl_color ? pgs : NULL		360610	1					
ANR	360653	Condition	hl_color		360610	0					
ANR	360654	Identifier	hl_color		360610	0					
ANR	360655	Identifier	pgs		360610	1					
ANR	360656	Identifier	NULL		360610	2					
ANR	360657	ExpressionStatement	"gx_hld_save_color ( pgs_for_hl_color , pdcolor , & temp )"	399:4:14036:14087	360610	4	True				
ANR	360658	CallExpression	"gx_hld_save_color ( pgs_for_hl_color , pdcolor , & temp )"		360610	0					
ANR	360659	Callee	gx_hld_save_color		360610	0					
ANR	360660	Identifier	gx_hld_save_color		360610	0					
ANR	360661	ArgumentList	pgs_for_hl_color		360610	1					
ANR	360662	Argument	pgs_for_hl_color		360610	0					
ANR	360663	Identifier	pgs_for_hl_color		360610	0					
ANR	360664	Argument	pdcolor		360610	1					
ANR	360665	Identifier	pdcolor		360610	0					
ANR	360666	Argument	& temp		360610	2					
ANR	360667	UnaryOperationExpression	& temp		360610	0					
ANR	360668	UnaryOperator	&		360610	0					
ANR	360669	Identifier	temp		360610	1					
ANR	360670	IfStatement	"if ( gx_hld_saved_color_equal ( & temp , sc ) )"		360610	5					
ANR	360671	Condition	"gx_hld_saved_color_equal ( & temp , sc )"	400:8:14097:14131	360610	0	True				
ANR	360672	CallExpression	"gx_hld_saved_color_equal ( & temp , sc )"		360610	0					
ANR	360673	Callee	gx_hld_saved_color_equal		360610	0					
ANR	360674	Identifier	gx_hld_saved_color_equal		360610	0					
ANR	360675	ArgumentList	& temp		360610	1					
ANR	360676	Argument	& temp		360610	0					
ANR	360677	UnaryOperationExpression	& temp		360610	0					
ANR	360678	UnaryOperator	&		360610	0					
ANR	360679	Identifier	temp		360610	1					
ANR	360680	Argument	sc		360610	1					
ANR	360681	Identifier	sc		360610	0					
ANR	360682	ReturnStatement	return 0 ;	401:8:14142:14150	360610	1	True				
ANR	360683	PrimaryExpression	0		360610	0					
ANR	360684	ExpressionStatement	"code = ( * setcolor ) ( vdev , pgs_for_hl_color , pdcolor )"	402:4:14156:14208	360610	6	True				
ANR	360685	AssignmentExpression	"code = ( * setcolor ) ( vdev , pgs_for_hl_color , pdcolor )"		360610	0		=			
ANR	360686	Identifier	code		360610	0					
ANR	360687	CallExpression	"( * setcolor ) ( vdev , pgs_for_hl_color , pdcolor )"		360610	1					
ANR	360688	Callee	* setcolor		360610	0					
ANR	360689	UnaryOperationExpression	* setcolor		360610	0					
ANR	360690	UnaryOperator	*		360610	0					
ANR	360691	Identifier	setcolor		360610	1					
ANR	360692	ArgumentList	vdev		360610	1					
ANR	360693	Argument	vdev		360610	0					
ANR	360694	Identifier	vdev		360610	0					
ANR	360695	Argument	pgs_for_hl_color		360610	1					
ANR	360696	Identifier	pgs_for_hl_color		360610	0					
ANR	360697	Argument	pdcolor		360610	2					
ANR	360698	Identifier	pdcolor		360610	0					
ANR	360699	IfStatement	if ( code < 0 )		360610	7					
ANR	360700	Condition	code < 0	403:8:14218:14225	360610	0	True				
ANR	360701	RelationalExpression	code < 0		360610	0		<			
ANR	360702	Identifier	code		360610	0					
ANR	360703	PrimaryExpression	0		360610	1					
ANR	360704	ReturnStatement	return code ;	404:8:14236:14247	360610	1	True				
ANR	360705	Identifier	code		360610	0					
ANR	360706	ExpressionStatement	* sc = temp	405:4:14253:14263	360610	8	True				
ANR	360707	AssignmentExpression	* sc = temp		360610	0		=			
ANR	360708	UnaryOperationExpression	* sc		360610	0					
ANR	360709	UnaryOperator	*		360610	0					
ANR	360710	Identifier	sc		360610	1					
ANR	360711	Identifier	temp		360610	1					
ANR	360712	ReturnStatement	return 0 ;	406:4:14269:14277	360610	9	True				
ANR	360713	PrimaryExpression	0		360610	0					
ANR	360714	ReturnType	static int		360610	1					
ANR	360715	Identifier	gdev_vector_update_color		360610	2					
ANR	360716	ParameterList	"gx_device_vector * vdev , const gs_gstate * pgs , const gx_drawing_color * pdcolor , gx_hl_saved_color * sc , int ( * setcolor ) ( gx_device_vector * vdev , const gs_gstate * pgs , const gx_drawing_color * pdc )"		360610	3					
ANR	360717	Parameter	gx_device_vector * vdev	386:25:13425:13447	360610	0	True				
ANR	360718	ParameterType	gx_device_vector *		360610	0					
ANR	360719	Identifier	vdev		360610	1					
ANR	360720	Parameter	const gs_gstate * pgs	387:30:13480:13500	360610	1	True				
ANR	360721	ParameterType	const gs_gstate *		360610	0					
ANR	360722	Identifier	pgs		360610	1					
ANR	360723	Parameter	const gx_drawing_color * pdcolor	388:30:13533:13564	360610	2	True				
ANR	360724	ParameterType	const gx_drawing_color *		360610	0					
ANR	360725	Identifier	pdcolor		360610	1					
ANR	360726	Parameter	gx_hl_saved_color * sc	389:30:13597:13617	360610	3	True				
ANR	360727	ParameterType	gx_hl_saved_color *		360610	0					
ANR	360728	Identifier	sc		360610	1					
ANR	360729	Parameter	"int ( * setcolor ) ( gx_device_vector * vdev , const gs_gstate * pgs , const gx_drawing_color * pdc )"	390:30:13650:13837	360610	4	True				
ANR	360730	ParameterType	"(( gx_device_vector * vdev , const gs_gstate * pgs , const gx_drawing_color * pdc ) int) *"		360610	0					
ANR	360731	Identifier	setcolor		360610	1					
ANR	360732	CFGEntryNode	ENTRY		360610		True				
ANR	360733	CFGExitNode	EXIT		360610		True				
ANR	360734	Symbol	temp		360610						
ANR	360735	Symbol	pgs_for_hl_color		360610						
ANR	360736	Symbol	code		360610						
ANR	360737	Symbol	NULL		360610						
ANR	360738	Symbol	* setcolor		360610						
ANR	360739	Symbol	vdev		360610						
ANR	360740	Symbol	pdcolor		360610						
ANR	360741	Symbol	gx_hld_saved_color_equal		360610						
ANR	360742	Symbol	sc		360610						
ANR	360743	Symbol	can_handle_hl_color		360610						
ANR	360744	Symbol	setcolor		360610						
ANR	360745	Symbol	* vdev_proc		360610						
ANR	360746	Symbol	* sc		360610						
ANR	360747	Symbol	hl_color		360610						
ANR	360748	Symbol	vdev_proc		360610						
ANR	360749	Symbol	"* vdev_proc ( vdev , can_handle_hl_color )"		360610						
ANR	360750	Symbol	pgs		360610						
ANR	360751	Symbol	& temp		360610						
ANR	360752	Function	gdev_vector_update_fill_color	410:0:14311:14638							
ANR	360753	FunctionDef	"gdev_vector_update_fill_color (gx_device_vector * vdev , const gs_gstate * pgs , const gx_drawing_color * pdcolor)"		360752	0					
ANR	360754	CompoundStatement		414:0:14487:14638	360752	0					
ANR	360755	ReturnStatement	"return gdev_vector_update_color ( vdev , pgs , pdcolor , & vdev -> saved_fill_color , vdev_proc ( vdev , setfillcolor ) ) ;"	415:4:14493:14636	360752	0	True				
ANR	360756	CallExpression	"gdev_vector_update_color ( vdev , pgs , pdcolor , & vdev -> saved_fill_color , vdev_proc ( vdev , setfillcolor ) )"		360752	0					
ANR	360757	Callee	gdev_vector_update_color		360752	0					
ANR	360758	Identifier	gdev_vector_update_color		360752	0					
ANR	360759	ArgumentList	vdev		360752	1					
ANR	360760	Argument	vdev		360752	0					
ANR	360761	Identifier	vdev		360752	0					
ANR	360762	Argument	pgs		360752	1					
ANR	360763	Identifier	pgs		360752	0					
ANR	360764	Argument	pdcolor		360752	2					
ANR	360765	Identifier	pdcolor		360752	0					
ANR	360766	Argument	& vdev -> saved_fill_color		360752	3					
ANR	360767	UnaryOperationExpression	& vdev -> saved_fill_color		360752	0					
ANR	360768	UnaryOperator	&		360752	0					
ANR	360769	PtrMemberAccess	vdev -> saved_fill_color		360752	1					
ANR	360770	Identifier	vdev		360752	0					
ANR	360771	Identifier	saved_fill_color		360752	1					
ANR	360772	Argument	"vdev_proc ( vdev , setfillcolor )"		360752	4					
ANR	360773	CallExpression	"vdev_proc ( vdev , setfillcolor )"		360752	0					
ANR	360774	Callee	vdev_proc		360752	0					
ANR	360775	Identifier	vdev_proc		360752	0					
ANR	360776	ArgumentList	vdev		360752	1					
ANR	360777	Argument	vdev		360752	0					
ANR	360778	Identifier	vdev		360752	0					
ANR	360779	Argument	setfillcolor		360752	1					
ANR	360780	Identifier	setfillcolor		360752	0					
ANR	360781	ReturnType	int		360752	1					
ANR	360782	Identifier	gdev_vector_update_fill_color		360752	2					
ANR	360783	ParameterList	"gx_device_vector * vdev , const gs_gstate * pgs , const gx_drawing_color * pdcolor"		360752	3					
ANR	360784	Parameter	gx_device_vector * vdev	411:30:14345:14367	360752	0	True				
ANR	360785	ParameterType	gx_device_vector *		360752	0					
ANR	360786	Identifier	vdev		360752	1					
ANR	360787	Parameter	const gs_gstate * pgs	412:30:14400:14420	360752	1	True				
ANR	360788	ParameterType	const gs_gstate *		360752	0					
ANR	360789	Identifier	pgs		360752	1					
ANR	360790	Parameter	const gx_drawing_color * pdcolor	413:30:14453:14484	360752	2	True				
ANR	360791	ParameterType	const gx_drawing_color *		360752	0					
ANR	360792	Identifier	pdcolor		360752	1					
ANR	360793	CFGEntryNode	ENTRY		360752		True				
ANR	360794	CFGExitNode	EXIT		360752		True				
ANR	360795	Symbol	& vdev -> saved_fill_color		360752						
ANR	360796	Symbol	vdev_proc		360752						
ANR	360797	Symbol	vdev		360752						
ANR	360798	Symbol	pdcolor		360752						
ANR	360799	Symbol	setfillcolor		360752						
ANR	360800	Symbol	pgs		360752						
ANR	360801	Symbol	gdev_vector_update_color		360752						
ANR	360802	Function	update_fill	420:0:14686:14988							
ANR	360803	FunctionDef	"update_fill (gx_device_vector * vdev , const gs_gstate * pgs , const gx_drawing_color * pdcolor , gs_logical_operation_t lop)"		360802	0					
ANR	360804	CompoundStatement		423:0:14831:14988	360802	0					
ANR	360805	IdentifierDeclStatement	"int code = gdev_vector_update_fill_color ( vdev , pgs , pdcolor ) ;"	424:4:14837:14897	360802	0	True				
ANR	360806	IdentifierDecl	"code = gdev_vector_update_fill_color ( vdev , pgs , pdcolor )"		360802	0					
ANR	360807	IdentifierDeclType	int		360802	0					
ANR	360808	Identifier	code		360802	1					
ANR	360809	AssignmentExpression	"code = gdev_vector_update_fill_color ( vdev , pgs , pdcolor )"		360802	2		=			
ANR	360810	Identifier	code		360802	0					
ANR	360811	CallExpression	"gdev_vector_update_fill_color ( vdev , pgs , pdcolor )"		360802	1					
ANR	360812	Callee	gdev_vector_update_fill_color		360802	0					
ANR	360813	Identifier	gdev_vector_update_fill_color		360802	0					
ANR	360814	ArgumentList	vdev		360802	1					
ANR	360815	Argument	vdev		360802	0					
ANR	360816	Identifier	vdev		360802	0					
ANR	360817	Argument	pgs		360802	1					
ANR	360818	Identifier	pgs		360802	0					
ANR	360819	Argument	pdcolor		360802	2					
ANR	360820	Identifier	pdcolor		360802	0					
ANR	360821	IfStatement	if ( code < 0 )		360802	1					
ANR	360822	Condition	code < 0	426:8:14908:14915	360802	0	True				
ANR	360823	RelationalExpression	code < 0		360802	0		<			
ANR	360824	Identifier	code		360802	0					
ANR	360825	PrimaryExpression	0		360802	1					
ANR	360826	ReturnStatement	return code ;	427:8:14926:14937	360802	1	True				
ANR	360827	Identifier	code		360802	0					
ANR	360828	ReturnStatement	"return gdev_vector_update_log_op ( vdev , lop ) ;"	428:4:14943:14986	360802	2	True				
ANR	360829	CallExpression	"gdev_vector_update_log_op ( vdev , lop )"		360802	0					
ANR	360830	Callee	gdev_vector_update_log_op		360802	0					
ANR	360831	Identifier	gdev_vector_update_log_op		360802	0					
ANR	360832	ArgumentList	vdev		360802	1					
ANR	360833	Argument	vdev		360802	0					
ANR	360834	Identifier	vdev		360802	0					
ANR	360835	Argument	lop		360802	1					
ANR	360836	Identifier	lop		360802	0					
ANR	360837	ReturnType	static int		360802	1					
ANR	360838	Identifier	update_fill		360802	2					
ANR	360839	ParameterList	"gx_device_vector * vdev , const gs_gstate * pgs , const gx_drawing_color * pdcolor , gs_logical_operation_t lop"		360802	3					
ANR	360840	Parameter	gx_device_vector * vdev	421:12:14709:14731	360802	0	True				
ANR	360841	ParameterType	gx_device_vector *		360802	0					
ANR	360842	Identifier	vdev		360802	1					
ANR	360843	Parameter	const gs_gstate * pgs	421:37:14734:14754	360802	1	True				
ANR	360844	ParameterType	const gs_gstate *		360802	0					
ANR	360845	Identifier	pgs		360802	1					
ANR	360846	Parameter	const gx_drawing_color * pdcolor	422:12:14769:14800	360802	2	True				
ANR	360847	ParameterType	const gx_drawing_color *		360802	0					
ANR	360848	Identifier	pdcolor		360802	1					
ANR	360849	Parameter	gs_logical_operation_t lop	422:46:14803:14828	360802	3	True				
ANR	360850	ParameterType	gs_logical_operation_t		360802	0					
ANR	360851	Identifier	lop		360802	1					
ANR	360852	CFGEntryNode	ENTRY		360802		True				
ANR	360853	CFGExitNode	EXIT		360802		True				
ANR	360854	Symbol	code		360802						
ANR	360855	Symbol	vdev		360802						
ANR	360856	Symbol	gdev_vector_update_log_op		360802						
ANR	360857	Symbol	pdcolor		360802						
ANR	360858	Symbol	lop		360802						
ANR	360859	Symbol	pgs		360802						
ANR	360860	Symbol	gdev_vector_update_fill_color		360802						
ANR	360861	Function	gdev_vector_prepare_fill	432:0:15033:15474							
ANR	360862	FunctionDef	"gdev_vector_prepare_fill (gx_device_vector * vdev , const gs_gstate * pgs , const gx_fill_params * params , const gx_drawing_color * pdcolor)"		360861	0					
ANR	360863	CompoundStatement		435:0:15187:15474	360861	0					
ANR	360864	IfStatement	if ( params -> flatness != vdev -> state . flatness )		360861	0					
ANR	360865	Condition	params -> flatness != vdev -> state . flatness	436:8:15197:15236	360861	0	True				
ANR	360866	EqualityExpression	params -> flatness != vdev -> state . flatness		360861	0		!=			
ANR	360867	PtrMemberAccess	params -> flatness		360861	0					
ANR	360868	Identifier	params		360861	0					
ANR	360869	Identifier	flatness		360861	1					
ANR	360870	MemberAccess	vdev -> state . flatness		360861	1					
ANR	360871	PtrMemberAccess	vdev -> state		360861	0					
ANR	360872	Identifier	vdev		360861	0					
ANR	360873	Identifier	state		360861	1					
ANR	360874	Identifier	flatness		360861	1					
ANR	360875	CompoundStatement		3:8:61:124	360861	1					
ANR	360876	IdentifierDeclStatement	"int code = ( * vdev_proc ( vdev , setflat ) ) ( vdev , params -> flatness ) ;"	437:8:15249:15312	360861	0	True				
ANR	360877	IdentifierDecl	"code = ( * vdev_proc ( vdev , setflat ) ) ( vdev , params -> flatness )"		360861	0					
ANR	360878	IdentifierDeclType	int		360861	0					
ANR	360879	Identifier	code		360861	1					
ANR	360880	AssignmentExpression	"code = ( * vdev_proc ( vdev , setflat ) ) ( vdev , params -> flatness )"		360861	2		=			
ANR	360881	Identifier	code		360861	0					
ANR	360882	CallExpression	"( * vdev_proc ( vdev , setflat ) ) ( vdev , params -> flatness )"		360861	1					
ANR	360883	Callee	"* vdev_proc ( vdev , setflat )"		360861	0					
ANR	360884	UnaryOperationExpression	"* vdev_proc ( vdev , setflat )"		360861	0					
ANR	360885	UnaryOperator	*		360861	0					
ANR	360886	CallExpression	"vdev_proc ( vdev , setflat )"		360861	1					
ANR	360887	Callee	vdev_proc		360861	0					
ANR	360888	Identifier	vdev_proc		360861	0					
ANR	360889	ArgumentList	vdev		360861	1					
ANR	360890	Argument	vdev		360861	0					
ANR	360891	Identifier	vdev		360861	0					
ANR	360892	Argument	setflat		360861	1					
ANR	360893	Identifier	setflat		360861	0					
ANR	360894	ArgumentList	vdev		360861	1					
ANR	360895	Argument	vdev		360861	0					
ANR	360896	Identifier	vdev		360861	0					
ANR	360897	Argument	params -> flatness		360861	1					
ANR	360898	PtrMemberAccess	params -> flatness		360861	0					
ANR	360899	Identifier	params		360861	0					
ANR	360900	Identifier	flatness		360861	1					
ANR	360901	IfStatement	if ( code < 0 )		360861	1					
ANR	360902	Condition	code < 0	439:12:15327:15334	360861	0	True				
ANR	360903	RelationalExpression	code < 0		360861	0		<			
ANR	360904	Identifier	code		360861	0					
ANR	360905	PrimaryExpression	0		360861	1					
ANR	360906	ReturnStatement	return code ;	440:12:15349:15360	360861	1	True				
ANR	360907	Identifier	code		360861	0					
ANR	360908	ExpressionStatement	vdev -> state . flatness = params -> flatness	441:8:15370:15409	360861	2	True				
ANR	360909	AssignmentExpression	vdev -> state . flatness = params -> flatness		360861	0		=			
ANR	360910	MemberAccess	vdev -> state . flatness		360861	0					
ANR	360911	PtrMemberAccess	vdev -> state		360861	0					
ANR	360912	Identifier	vdev		360861	0					
ANR	360913	Identifier	state		360861	1					
ANR	360914	Identifier	flatness		360861	1					
ANR	360915	PtrMemberAccess	params -> flatness		360861	1					
ANR	360916	Identifier	params		360861	0					
ANR	360917	Identifier	flatness		360861	1					
ANR	360918	ReturnStatement	"return update_fill ( vdev , pgs , pdcolor , pgs -> log_op ) ;"	443:4:15421:15472	360861	1	True				
ANR	360919	CallExpression	"update_fill ( vdev , pgs , pdcolor , pgs -> log_op )"		360861	0					
ANR	360920	Callee	update_fill		360861	0					
ANR	360921	Identifier	update_fill		360861	0					
ANR	360922	ArgumentList	vdev		360861	1					
ANR	360923	Argument	vdev		360861	0					
ANR	360924	Identifier	vdev		360861	0					
ANR	360925	Argument	pgs		360861	1					
ANR	360926	Identifier	pgs		360861	0					
ANR	360927	Argument	pdcolor		360861	2					
ANR	360928	Identifier	pdcolor		360861	0					
ANR	360929	Argument	pgs -> log_op		360861	3					
ANR	360930	PtrMemberAccess	pgs -> log_op		360861	0					
ANR	360931	Identifier	pgs		360861	0					
ANR	360932	Identifier	log_op		360861	1					
ANR	360933	ReturnType	int		360861	1					
ANR	360934	Identifier	gdev_vector_prepare_fill		360861	2					
ANR	360935	ParameterList	"gx_device_vector * vdev , const gs_gstate * pgs , const gx_fill_params * params , const gx_drawing_color * pdcolor"		360861	3					
ANR	360936	Parameter	gx_device_vector * vdev	433:25:15062:15084	360861	0	True				
ANR	360937	ParameterType	gx_device_vector *		360861	0					
ANR	360938	Identifier	vdev		360861	1					
ANR	360939	Parameter	const gs_gstate * pgs	433:50:15087:15107	360861	1	True				
ANR	360940	ParameterType	const gs_gstate *		360861	0					
ANR	360941	Identifier	pgs		360861	1					
ANR	360942	Parameter	const gx_fill_params * params	434:12:15122:15150	360861	2	True				
ANR	360943	ParameterType	const gx_fill_params *		360861	0					
ANR	360944	Identifier	params		360861	1					
ANR	360945	Parameter	const gx_drawing_color * pdcolor	434:43:15153:15184	360861	3	True				
ANR	360946	ParameterType	const gx_drawing_color *		360861	0					
ANR	360947	Identifier	pdcolor		360861	1					
ANR	360948	CFGEntryNode	ENTRY		360861		True				
ANR	360949	CFGExitNode	EXIT		360861		True				
ANR	360950	Symbol	pgs -> log_op		360861						
ANR	360951	Symbol	params -> flatness		360861						
ANR	360952	Symbol	code		360861						
ANR	360953	Symbol	"* vdev_proc ( vdev , setflat )"		360861						
ANR	360954	Symbol	setflat		360861						
ANR	360955	Symbol	* pgs		360861						
ANR	360956	Symbol	vdev		360861						
ANR	360957	Symbol	vdev -> state . flatness		360861						
ANR	360958	Symbol	pdcolor		360861						
ANR	360959	Symbol	vdev -> state		360861						
ANR	360960	Symbol	params		360861						
ANR	360961	Symbol	* vdev		360861						
ANR	360962	Symbol	update_fill		360861						
ANR	360963	Symbol	* vdev_proc		360861						
ANR	360964	Symbol	vdev_proc		360861						
ANR	360965	Symbol	pgs		360861						
ANR	360966	Symbol	* params		360861						
ANR	360967	Function	dash_pattern_eq	447:0:15510:15761							
ANR	360968	FunctionDef	"dash_pattern_eq (const float * stored , const gx_dash_params * set , double scale)"		360967	0					
ANR	360969	CompoundStatement		449:0:15601:15761	360967	0					
ANR	360970	IdentifierDeclStatement	int i ;	450:4:15607:15612	360967	0	True				
ANR	360971	IdentifierDecl	i		360967	0					
ANR	360972	IdentifierDeclType	int		360967	0					
ANR	360973	Identifier	i		360967	1					
ANR	360974	ForStatement	for ( i = 0 ; i < set -> pattern_size ; ++ i )		360967	1					
ANR	360975	ForInit	i = 0 ;	452:9:15624:15629	360967	0	True				
ANR	360976	AssignmentExpression	i = 0		360967	0		=			
ANR	360977	Identifier	i		360967	0					
ANR	360978	PrimaryExpression	0		360967	1					
ANR	360979	Condition	i < set -> pattern_size	452:16:15631:15651	360967	1	True				
ANR	360980	RelationalExpression	i < set -> pattern_size		360967	0		<			
ANR	360981	Identifier	i		360967	0					
ANR	360982	PtrMemberAccess	set -> pattern_size		360967	1					
ANR	360983	Identifier	set		360967	0					
ANR	360984	Identifier	pattern_size		360967	1					
ANR	360985	UnaryExpression	++ i	452:39:15654:15656	360967	2	True				
ANR	360986	IncDec	++		360967	0					
ANR	360987	Identifier	i		360967	1					
ANR	360988	IfStatement	if ( stored [ i ] != ( float ) ( set -> pattern [ i ] * scale ) )		360967	3					
ANR	360989	Condition	stored [ i ] != ( float ) ( set -> pattern [ i ] * scale )	453:12:15671:15715	360967	0	True				
ANR	360990	EqualityExpression	stored [ i ] != ( float ) ( set -> pattern [ i ] * scale )		360967	0		!=			
ANR	360991	ArrayIndexing	stored [ i ]		360967	0					
ANR	360992	Identifier	stored		360967	0					
ANR	360993	Identifier	i		360967	1					
ANR	360994	CastExpression	( float ) ( set -> pattern [ i ] * scale )		360967	1					
ANR	360995	CastTarget	float		360967	0					
ANR	360996	MultiplicativeExpression	set -> pattern [ i ] * scale		360967	1		*			
ANR	360997	ArrayIndexing	set -> pattern [ i ]		360967	0					
ANR	360998	PtrMemberAccess	set -> pattern		360967	0					
ANR	360999	Identifier	set		360967	0					
ANR	361000	Identifier	pattern		360967	1					
ANR	361001	Identifier	i		360967	1					
ANR	361002	Identifier	scale		360967	1					
ANR	361003	ReturnStatement	return false ;	454:12:15730:15742	360967	1	True				
ANR	361004	Identifier	false		360967	0					
ANR	361005	ReturnStatement	return true ;	455:4:15748:15759	360967	2	True				
ANR	361006	Identifier	true		360967	0					
ANR	361007	ReturnType	static bool		360967	1					
ANR	361008	Identifier	dash_pattern_eq		360967	2					
ANR	361009	ParameterList	"const float * stored , const gx_dash_params * set , double scale"		360967	3					
ANR	361010	Parameter	const float * stored	448:16:15538:15556	360967	0	True				
ANR	361011	ParameterType	const float *		360967	0					
ANR	361012	Identifier	stored		360967	1					
ANR	361013	Parameter	const gx_dash_params * set	448:37:15559:15584	360967	1	True				
ANR	361014	ParameterType	const gx_dash_params *		360967	0					
ANR	361015	Identifier	set		360967	1					
ANR	361016	Parameter	double scale	448:65:15587:15598	360967	2	True				
ANR	361017	ParameterType	double		360967	0					
ANR	361018	Identifier	scale		360967	1					
ANR	361019	CFGEntryNode	ENTRY		360967		True				
ANR	361020	CFGExitNode	EXIT		360967		True				
ANR	361021	Symbol	set		360967						
ANR	361022	Symbol	set -> pattern_size		360967						
ANR	361023	Symbol	false		360967						
ANR	361024	Symbol	scale		360967						
ANR	361025	Symbol	i		360967						
ANR	361026	Symbol	* set -> pattern		360967						
ANR	361027	Symbol	* set		360967						
ANR	361028	Symbol	* i		360967						
ANR	361029	Symbol	* stored		360967						
ANR	361030	Symbol	* * set		360967						
ANR	361031	Symbol	stored		360967						
ANR	361032	Symbol	true		360967						
ANR	361033	Symbol	set -> pattern		360967						
ANR	361034	Function	gdev_vector_prepare_stroke	459:0:15807:19510							
ANR	361035	FunctionDef	"gdev_vector_prepare_stroke (gx_device_vector * vdev , const gs_gstate * pgs , const gx_stroke_params * params , const gx_drawing_color * pdcolor , double scale)"		361034	0					
ANR	361036	CompoundStatement		465:0:16129:19510	361034	0					
ANR	361037	IfStatement	if ( pgs )		361034	0					
ANR	361038	Condition	pgs	466:8:16139:16141	361034	0	True				
ANR	361039	Identifier	pgs		361034	0					
ANR	361040	CompoundStatement		5:8:153:207	361034	1					
ANR	361041	IdentifierDeclStatement	int pattern_size = pgs -> line_params . dash . pattern_size ;	467:8:16154:16207	361034	0	True				
ANR	361042	IdentifierDecl	pattern_size = pgs -> line_params . dash . pattern_size		361034	0					
ANR	361043	IdentifierDeclType	int		361034	0					
ANR	361044	Identifier	pattern_size		361034	1					
ANR	361045	AssignmentExpression	pattern_size = pgs -> line_params . dash . pattern_size		361034	2		=			
ANR	361046	Identifier	pattern_size		361034	0					
ANR	361047	MemberAccess	pgs -> line_params . dash . pattern_size		361034	1					
ANR	361048	MemberAccess	pgs -> line_params . dash		361034	0					
ANR	361049	PtrMemberAccess	pgs -> line_params		361034	0					
ANR	361050	Identifier	pgs		361034	0					
ANR	361051	Identifier	line_params		361034	1					
ANR	361052	Identifier	dash		361034	1					
ANR	361053	Identifier	pattern_size		361034	1					
ANR	361054	IdentifierDeclStatement	float dash_offset = pgs -> line_params . dash . offset * scale ;	468:8:16217:16273	361034	1	True				
ANR	361055	IdentifierDecl	dash_offset = pgs -> line_params . dash . offset * scale		361034	0					
ANR	361056	IdentifierDeclType	float		361034	0					
ANR	361057	Identifier	dash_offset		361034	1					
ANR	361058	AssignmentExpression	dash_offset = pgs -> line_params . dash . offset * scale		361034	2		=			
ANR	361059	Identifier	dash_offset		361034	0					
ANR	361060	MultiplicativeExpression	pgs -> line_params . dash . offset * scale		361034	1		*			
ANR	361061	MemberAccess	pgs -> line_params . dash . offset		361034	0					
ANR	361062	MemberAccess	pgs -> line_params . dash		361034	0					
ANR	361063	PtrMemberAccess	pgs -> line_params		361034	0					
ANR	361064	Identifier	pgs		361034	0					
ANR	361065	Identifier	line_params		361034	1					
ANR	361066	Identifier	dash		361034	1					
ANR	361067	Identifier	offset		361034	1					
ANR	361068	Identifier	scale		361034	1					
ANR	361069	IdentifierDeclStatement	float half_width = pgs -> line_params . half_width * scale ;	469:8:16283:16337	361034	2	True				
ANR	361070	IdentifierDecl	half_width = pgs -> line_params . half_width * scale		361034	0					
ANR	361071	IdentifierDeclType	float		361034	0					
ANR	361072	Identifier	half_width		361034	1					
ANR	361073	AssignmentExpression	half_width = pgs -> line_params . half_width * scale		361034	2		=			
ANR	361074	Identifier	half_width		361034	0					
ANR	361075	MultiplicativeExpression	pgs -> line_params . half_width * scale		361034	1		*			
ANR	361076	MemberAccess	pgs -> line_params . half_width		361034	0					
ANR	361077	PtrMemberAccess	pgs -> line_params		361034	0					
ANR	361078	Identifier	pgs		361034	0					
ANR	361079	Identifier	line_params		361034	1					
ANR	361080	Identifier	half_width		361034	1					
ANR	361081	Identifier	scale		361034	1					
ANR	361082	IfStatement	"if ( dash_offset != vdev -> state . line_params . dash . offset || pattern_size != vdev -> state . line_params . dash . pattern_size || ( pattern_size != 0 && ! dash_pattern_eq ( vdev -> dash_pattern , & pgs -> line_params . dash , scale ) ) )"		361034	3					
ANR	361083	Condition	"dash_offset != vdev -> state . line_params . dash . offset || pattern_size != vdev -> state . line_params . dash . pattern_size || ( pattern_size != 0 && ! dash_pattern_eq ( vdev -> dash_pattern , & pgs -> line_params . dash , scale ) )"	471:12:16352:16623	361034	0	True				
ANR	361084	OrExpression	"dash_offset != vdev -> state . line_params . dash . offset || pattern_size != vdev -> state . line_params . dash . pattern_size || ( pattern_size != 0 && ! dash_pattern_eq ( vdev -> dash_pattern , & pgs -> line_params . dash , scale ) )"		361034	0		||			
ANR	361085	EqualityExpression	dash_offset != vdev -> state . line_params . dash . offset		361034	0		!=			
ANR	361086	Identifier	dash_offset		361034	0					
ANR	361087	MemberAccess	vdev -> state . line_params . dash . offset		361034	1					
ANR	361088	MemberAccess	vdev -> state . line_params . dash		361034	0					
ANR	361089	MemberAccess	vdev -> state . line_params		361034	0					
ANR	361090	PtrMemberAccess	vdev -> state		361034	0					
ANR	361091	Identifier	vdev		361034	0					
ANR	361092	Identifier	state		361034	1					
ANR	361093	Identifier	line_params		361034	1					
ANR	361094	Identifier	dash		361034	1					
ANR	361095	Identifier	offset		361034	1					
ANR	361096	OrExpression	"pattern_size != vdev -> state . line_params . dash . pattern_size || ( pattern_size != 0 && ! dash_pattern_eq ( vdev -> dash_pattern , & pgs -> line_params . dash , scale ) )"		361034	1		||			
ANR	361097	EqualityExpression	pattern_size != vdev -> state . line_params . dash . pattern_size		361034	0		!=			
ANR	361098	Identifier	pattern_size		361034	0					
ANR	361099	MemberAccess	vdev -> state . line_params . dash . pattern_size		361034	1					
ANR	361100	MemberAccess	vdev -> state . line_params . dash		361034	0					
ANR	361101	MemberAccess	vdev -> state . line_params		361034	0					
ANR	361102	PtrMemberAccess	vdev -> state		361034	0					
ANR	361103	Identifier	vdev		361034	0					
ANR	361104	Identifier	state		361034	1					
ANR	361105	Identifier	line_params		361034	1					
ANR	361106	Identifier	dash		361034	1					
ANR	361107	Identifier	pattern_size		361034	1					
ANR	361108	AndExpression	"pattern_size != 0 && ! dash_pattern_eq ( vdev -> dash_pattern , & pgs -> line_params . dash , scale )"		361034	1		&&			
ANR	361109	EqualityExpression	pattern_size != 0		361034	0		!=			
ANR	361110	Identifier	pattern_size		361034	0					
ANR	361111	PrimaryExpression	0		361034	1					
ANR	361112	UnaryOperationExpression	"! dash_pattern_eq ( vdev -> dash_pattern , & pgs -> line_params . dash , scale )"		361034	1					
ANR	361113	UnaryOperator	!		361034	0					
ANR	361114	CallExpression	"dash_pattern_eq ( vdev -> dash_pattern , & pgs -> line_params . dash , scale )"		361034	1					
ANR	361115	Callee	dash_pattern_eq		361034	0					
ANR	361116	Identifier	dash_pattern_eq		361034	0					
ANR	361117	ArgumentList	vdev -> dash_pattern		361034	1					
ANR	361118	Argument	vdev -> dash_pattern		361034	0					
ANR	361119	PtrMemberAccess	vdev -> dash_pattern		361034	0					
ANR	361120	Identifier	vdev		361034	0					
ANR	361121	Identifier	dash_pattern		361034	1					
ANR	361122	Argument	& pgs -> line_params . dash		361034	1					
ANR	361123	UnaryOperationExpression	& pgs -> line_params . dash		361034	0					
ANR	361124	UnaryOperator	&		361034	0					
ANR	361125	MemberAccess	pgs -> line_params . dash		361034	1					
ANR	361126	PtrMemberAccess	pgs -> line_params		361034	0					
ANR	361127	Identifier	pgs		361034	0					
ANR	361128	Identifier	line_params		361034	1					
ANR	361129	Identifier	dash		361034	1					
ANR	361130	Argument	scale		361034	2					
ANR	361131	Identifier	scale		361034	0					
ANR	361132	CompoundStatement		14:12:551:562	361034	1					
ANR	361133	IdentifierDeclStatement	float * pattern ;	477:12:16653:16667	361034	0	True				
ANR	361134	IdentifierDecl	* pattern		361034	0					
ANR	361135	IdentifierDeclType	float *		361034	0					
ANR	361136	Identifier	pattern		361034	1					
ANR	361137	IdentifierDeclStatement	"int i , code ;"	478:12:16681:16692	361034	1	True				
ANR	361138	IdentifierDecl	i		361034	0					
ANR	361139	IdentifierDeclType	int		361034	0					
ANR	361140	Identifier	i		361034	1					
ANR	361141	IdentifierDecl	code		361034	1					
ANR	361142	IdentifierDeclType	int		361034	0					
ANR	361143	Identifier	code		361034	1					
ANR	361144	ExpressionStatement	"pattern = ( float * ) gs_alloc_bytes ( vdev -> memory -> stable_memory , pattern_size * sizeof ( float ) , ""vector allocate dash pattern"" )"	480:12:16707:16831	361034	2	True				
ANR	361145	AssignmentExpression	"pattern = ( float * ) gs_alloc_bytes ( vdev -> memory -> stable_memory , pattern_size * sizeof ( float ) , ""vector allocate dash pattern"" )"		361034	0		=			
ANR	361146	Identifier	pattern		361034	0					
ANR	361147	CastExpression	"( float * ) gs_alloc_bytes ( vdev -> memory -> stable_memory , pattern_size * sizeof ( float ) , ""vector allocate dash pattern"" )"		361034	1					
ANR	361148	CastTarget	float *		361034	0					
ANR	361149	CallExpression	"gs_alloc_bytes ( vdev -> memory -> stable_memory , pattern_size * sizeof ( float ) , ""vector allocate dash pattern"" )"		361034	1					
ANR	361150	Callee	gs_alloc_bytes		361034	0					
ANR	361151	Identifier	gs_alloc_bytes		361034	0					
ANR	361152	ArgumentList	vdev -> memory -> stable_memory		361034	1					
ANR	361153	Argument	vdev -> memory -> stable_memory		361034	0					
ANR	361154	PtrMemberAccess	vdev -> memory -> stable_memory		361034	0					
ANR	361155	PtrMemberAccess	vdev -> memory		361034	0					
ANR	361156	Identifier	vdev		361034	0					
ANR	361157	Identifier	memory		361034	1					
ANR	361158	Identifier	stable_memory		361034	1					
ANR	361159	Argument	pattern_size * sizeof ( float )		361034	1					
ANR	361160	MultiplicativeExpression	pattern_size * sizeof ( float )		361034	0		*			
ANR	361161	Identifier	pattern_size		361034	0					
ANR	361162	SizeofExpression	sizeof ( float )		361034	1					
ANR	361163	Sizeof	sizeof		361034	0					
ANR	361164	SizeofOperand	float		361034	1					
ANR	361165	Argument	"""vector allocate dash pattern"""		361034	2					
ANR	361166	PrimaryExpression	"""vector allocate dash pattern"""		361034	0					
ANR	361167	ForStatement	for ( i = 0 ; i < pattern_size ; ++ i )		361034	3					
ANR	361168	ForInit	i = 0 ;	481:17:16850:16855	361034	0	True				
ANR	361169	AssignmentExpression	i = 0		361034	0		=			
ANR	361170	Identifier	i		361034	0					
ANR	361171	PrimaryExpression	0		361034	1					
ANR	361172	Condition	i < pattern_size	481:24:16857:16872	361034	1	True				
ANR	361173	RelationalExpression	i < pattern_size		361034	0		<			
ANR	361174	Identifier	i		361034	0					
ANR	361175	Identifier	pattern_size		361034	1					
ANR	361176	UnaryExpression	++ i	481:42:16875:16877	361034	2	True				
ANR	361177	IncDec	++		361034	0					
ANR	361178	Identifier	i		361034	1					
ANR	361179	ExpressionStatement	pattern [ i ] = pgs -> line_params . dash . pattern [ i ] * scale	482:16:16896:16949	361034	3	True				
ANR	361180	AssignmentExpression	pattern [ i ] = pgs -> line_params . dash . pattern [ i ] * scale		361034	0		=			
ANR	361181	ArrayIndexing	pattern [ i ]		361034	0					
ANR	361182	Identifier	pattern		361034	0					
ANR	361183	Identifier	i		361034	1					
ANR	361184	MultiplicativeExpression	pgs -> line_params . dash . pattern [ i ] * scale		361034	1		*			
ANR	361185	ArrayIndexing	pgs -> line_params . dash . pattern [ i ]		361034	0					
ANR	361186	MemberAccess	pgs -> line_params . dash . pattern		361034	0					
ANR	361187	MemberAccess	pgs -> line_params . dash		361034	0					
ANR	361188	PtrMemberAccess	pgs -> line_params		361034	0					
ANR	361189	Identifier	pgs		361034	0					
ANR	361190	Identifier	line_params		361034	1					
ANR	361191	Identifier	dash		361034	1					
ANR	361192	Identifier	pattern		361034	1					
ANR	361193	Identifier	i		361034	1					
ANR	361194	Identifier	scale		361034	1					
ANR	361195	ExpressionStatement	"code = ( * vdev_proc ( vdev , setdash ) ) ( vdev , pattern , pattern_size , dash_offset )"	483:12:16963:17056	361034	4	True				
ANR	361196	AssignmentExpression	"code = ( * vdev_proc ( vdev , setdash ) ) ( vdev , pattern , pattern_size , dash_offset )"		361034	0		=			
ANR	361197	Identifier	code		361034	0					
ANR	361198	CallExpression	"( * vdev_proc ( vdev , setdash ) ) ( vdev , pattern , pattern_size , dash_offset )"		361034	1					
ANR	361199	Callee	"* vdev_proc ( vdev , setdash )"		361034	0					
ANR	361200	UnaryOperationExpression	"* vdev_proc ( vdev , setdash )"		361034	0					
ANR	361201	UnaryOperator	*		361034	0					
ANR	361202	CallExpression	"vdev_proc ( vdev , setdash )"		361034	1					
ANR	361203	Callee	vdev_proc		361034	0					
ANR	361204	Identifier	vdev_proc		361034	0					
ANR	361205	ArgumentList	vdev		361034	1					
ANR	361206	Argument	vdev		361034	0					
ANR	361207	Identifier	vdev		361034	0					
ANR	361208	Argument	setdash		361034	1					
ANR	361209	Identifier	setdash		361034	0					
ANR	361210	ArgumentList	vdev		361034	1					
ANR	361211	Argument	vdev		361034	0					
ANR	361212	Identifier	vdev		361034	0					
ANR	361213	Argument	pattern		361034	1					
ANR	361214	Identifier	pattern		361034	0					
ANR	361215	Argument	pattern_size		361034	2					
ANR	361216	Identifier	pattern_size		361034	0					
ANR	361217	Argument	dash_offset		361034	3					
ANR	361218	Identifier	dash_offset		361034	0					
ANR	361219	IfStatement	if ( code < 0 )		361034	5					
ANR	361220	Condition	code < 0	485:16:17074:17081	361034	0	True				
ANR	361221	RelationalExpression	code < 0		361034	0		<			
ANR	361222	Identifier	code		361034	0					
ANR	361223	PrimaryExpression	0		361034	1					
ANR	361224	ReturnStatement	return code ;	486:16:17100:17111	361034	1	True				
ANR	361225	Identifier	code		361034	0					
ANR	361226	IfStatement	if ( vdev -> dash_pattern )		361034	6					
ANR	361227	Condition	vdev -> dash_pattern	487:16:17129:17146	361034	0	True				
ANR	361228	PtrMemberAccess	vdev -> dash_pattern		361034	0					
ANR	361229	Identifier	vdev		361034	0					
ANR	361230	Identifier	dash_pattern		361034	1					
ANR	361231	ExpressionStatement	"gs_free_object ( vdev -> memory -> stable_memory , vdev -> dash_pattern , ""vector free old dash pattern"" )"	488:16:17165:17260	361034	1	True				
ANR	361232	CallExpression	"gs_free_object ( vdev -> memory -> stable_memory , vdev -> dash_pattern , ""vector free old dash pattern"" )"		361034	0					
ANR	361233	Callee	gs_free_object		361034	0					
ANR	361234	Identifier	gs_free_object		361034	0					
ANR	361235	ArgumentList	vdev -> memory -> stable_memory		361034	1					
ANR	361236	Argument	vdev -> memory -> stable_memory		361034	0					
ANR	361237	PtrMemberAccess	vdev -> memory -> stable_memory		361034	0					
ANR	361238	PtrMemberAccess	vdev -> memory		361034	0					
ANR	361239	Identifier	vdev		361034	0					
ANR	361240	Identifier	memory		361034	1					
ANR	361241	Identifier	stable_memory		361034	1					
ANR	361242	Argument	vdev -> dash_pattern		361034	1					
ANR	361243	PtrMemberAccess	vdev -> dash_pattern		361034	0					
ANR	361244	Identifier	vdev		361034	0					
ANR	361245	Identifier	dash_pattern		361034	1					
ANR	361246	Argument	"""vector free old dash pattern"""		361034	2					
ANR	361247	PrimaryExpression	"""vector free old dash pattern"""		361034	0					
ANR	361248	ExpressionStatement	vdev -> dash_pattern = pattern	489:12:17274:17302	361034	7	True				
ANR	361249	AssignmentExpression	vdev -> dash_pattern = pattern		361034	0		=			
ANR	361250	PtrMemberAccess	vdev -> dash_pattern		361034	0					
ANR	361251	Identifier	vdev		361034	0					
ANR	361252	Identifier	dash_pattern		361034	1					
ANR	361253	Identifier	pattern		361034	1					
ANR	361254	ExpressionStatement	vdev -> dash_pattern_size = pattern_size	490:12:17316:17354	361034	8	True				
ANR	361255	AssignmentExpression	vdev -> dash_pattern_size = pattern_size		361034	0		=			
ANR	361256	PtrMemberAccess	vdev -> dash_pattern_size		361034	0					
ANR	361257	Identifier	vdev		361034	0					
ANR	361258	Identifier	dash_pattern_size		361034	1					
ANR	361259	Identifier	pattern_size		361034	1					
ANR	361260	ExpressionStatement	vdev -> state . line_params . dash . pattern_size = pattern_size	492:12:17369:17425	361034	9	True				
ANR	361261	AssignmentExpression	vdev -> state . line_params . dash . pattern_size = pattern_size		361034	0		=			
ANR	361262	MemberAccess	vdev -> state . line_params . dash . pattern_size		361034	0					
ANR	361263	MemberAccess	vdev -> state . line_params . dash		361034	0					
ANR	361264	MemberAccess	vdev -> state . line_params		361034	0					
ANR	361265	PtrMemberAccess	vdev -> state		361034	0					
ANR	361266	Identifier	vdev		361034	0					
ANR	361267	Identifier	state		361034	1					
ANR	361268	Identifier	line_params		361034	1					
ANR	361269	Identifier	dash		361034	1					
ANR	361270	Identifier	pattern_size		361034	1					
ANR	361271	Identifier	pattern_size		361034	1					
ANR	361272	ExpressionStatement	vdev -> state . line_params . dash . offset = dash_offset	493:12:17439:17488	361034	10	True				
ANR	361273	AssignmentExpression	vdev -> state . line_params . dash . offset = dash_offset		361034	0		=			
ANR	361274	MemberAccess	vdev -> state . line_params . dash . offset		361034	0					
ANR	361275	MemberAccess	vdev -> state . line_params . dash		361034	0					
ANR	361276	MemberAccess	vdev -> state . line_params		361034	0					
ANR	361277	PtrMemberAccess	vdev -> state		361034	0					
ANR	361278	Identifier	vdev		361034	0					
ANR	361279	Identifier	state		361034	1					
ANR	361280	Identifier	line_params		361034	1					
ANR	361281	Identifier	dash		361034	1					
ANR	361282	Identifier	offset		361034	1					
ANR	361283	Identifier	dash_offset		361034	1					
ANR	361284	IfStatement	if ( half_width != vdev -> state . line_params . half_width )		361034	4					
ANR	361285	Condition	half_width != vdev -> state . line_params . half_width	495:12:17512:17559	361034	0	True				
ANR	361286	EqualityExpression	half_width != vdev -> state . line_params . half_width		361034	0		!=			
ANR	361287	Identifier	half_width		361034	0					
ANR	361288	MemberAccess	vdev -> state . line_params . half_width		361034	1					
ANR	361289	MemberAccess	vdev -> state . line_params		361034	0					
ANR	361290	PtrMemberAccess	vdev -> state		361034	0					
ANR	361291	Identifier	vdev		361034	0					
ANR	361292	Identifier	state		361034	1					
ANR	361293	Identifier	line_params		361034	1					
ANR	361294	Identifier	half_width		361034	1					
ANR	361295	CompoundStatement		32:12:1446:1528	361034	1					
ANR	361296	IdentifierDeclStatement	"int code = ( * vdev_proc ( vdev , setlinewidth ) ) ( vdev , half_width * 2 ) ;"	496:12:17576:17658	361034	0	True				
ANR	361297	IdentifierDecl	"code = ( * vdev_proc ( vdev , setlinewidth ) ) ( vdev , half_width * 2 )"		361034	0					
ANR	361298	IdentifierDeclType	int		361034	0					
ANR	361299	Identifier	code		361034	1					
ANR	361300	AssignmentExpression	"code = ( * vdev_proc ( vdev , setlinewidth ) ) ( vdev , half_width * 2 )"		361034	2		=			
ANR	361301	Identifier	code		361034	0					
ANR	361302	CallExpression	"( * vdev_proc ( vdev , setlinewidth ) ) ( vdev , half_width * 2 )"		361034	1					
ANR	361303	Callee	"* vdev_proc ( vdev , setlinewidth )"		361034	0					
ANR	361304	UnaryOperationExpression	"* vdev_proc ( vdev , setlinewidth )"		361034	0					
ANR	361305	UnaryOperator	*		361034	0					
ANR	361306	CallExpression	"vdev_proc ( vdev , setlinewidth )"		361034	1					
ANR	361307	Callee	vdev_proc		361034	0					
ANR	361308	Identifier	vdev_proc		361034	0					
ANR	361309	ArgumentList	vdev		361034	1					
ANR	361310	Argument	vdev		361034	0					
ANR	361311	Identifier	vdev		361034	0					
ANR	361312	Argument	setlinewidth		361034	1					
ANR	361313	Identifier	setlinewidth		361034	0					
ANR	361314	ArgumentList	vdev		361034	1					
ANR	361315	Argument	vdev		361034	0					
ANR	361316	Identifier	vdev		361034	0					
ANR	361317	Argument	half_width * 2		361034	1					
ANR	361318	MultiplicativeExpression	half_width * 2		361034	0		*			
ANR	361319	Identifier	half_width		361034	0					
ANR	361320	PrimaryExpression	2		361034	1					
ANR	361321	IfStatement	if ( code < 0 )		361034	1					
ANR	361322	Condition	code < 0	499:16:17677:17684	361034	0	True				
ANR	361323	RelationalExpression	code < 0		361034	0		<			
ANR	361324	Identifier	code		361034	0					
ANR	361325	PrimaryExpression	0		361034	1					
ANR	361326	ReturnStatement	return code ;	500:16:17703:17714	361034	1	True				
ANR	361327	Identifier	code		361034	0					
ANR	361328	ExpressionStatement	vdev -> state . line_params . half_width = half_width	501:12:17728:17775	361034	2	True				
ANR	361329	AssignmentExpression	vdev -> state . line_params . half_width = half_width		361034	0		=			
ANR	361330	MemberAccess	vdev -> state . line_params . half_width		361034	0					
ANR	361331	MemberAccess	vdev -> state . line_params		361034	0					
ANR	361332	PtrMemberAccess	vdev -> state		361034	0					
ANR	361333	Identifier	vdev		361034	0					
ANR	361334	Identifier	state		361034	1					
ANR	361335	Identifier	line_params		361034	1					
ANR	361336	Identifier	half_width		361034	1					
ANR	361337	Identifier	half_width		361034	1					
ANR	361338	IfStatement	if ( pgs -> line_params . miter_limit != vdev -> state . line_params . miter_limit )		361034	5					
ANR	361339	Condition	pgs -> line_params . miter_limit != vdev -> state . line_params . miter_limit	503:12:17799:17865	361034	0	True				
ANR	361340	EqualityExpression	pgs -> line_params . miter_limit != vdev -> state . line_params . miter_limit		361034	0		!=			
ANR	361341	MemberAccess	pgs -> line_params . miter_limit		361034	0					
ANR	361342	PtrMemberAccess	pgs -> line_params		361034	0					
ANR	361343	Identifier	pgs		361034	0					
ANR	361344	Identifier	line_params		361034	1					
ANR	361345	Identifier	miter_limit		361034	1					
ANR	361346	MemberAccess	vdev -> state . line_params . miter_limit		361034	1					
ANR	361347	MemberAccess	vdev -> state . line_params		361034	0					
ANR	361348	PtrMemberAccess	vdev -> state		361034	0					
ANR	361349	Identifier	vdev		361034	0					
ANR	361350	Identifier	state		361034	1					
ANR	361351	Identifier	line_params		361034	1					
ANR	361352	Identifier	miter_limit		361034	1					
ANR	361353	CompoundStatement		40:12:1752:1849	361034	1					
ANR	361354	IdentifierDeclStatement	"int code = ( * vdev_proc ( vdev , setmiterlimit ) ) ( vdev , pgs -> line_params . miter_limit ) ;"	504:12:17882:17979	361034	0	True				
ANR	361355	IdentifierDecl	"code = ( * vdev_proc ( vdev , setmiterlimit ) ) ( vdev , pgs -> line_params . miter_limit )"		361034	0					
ANR	361356	IdentifierDeclType	int		361034	0					
ANR	361357	Identifier	code		361034	1					
ANR	361358	AssignmentExpression	"code = ( * vdev_proc ( vdev , setmiterlimit ) ) ( vdev , pgs -> line_params . miter_limit )"		361034	2		=			
ANR	361359	Identifier	code		361034	0					
ANR	361360	CallExpression	"( * vdev_proc ( vdev , setmiterlimit ) ) ( vdev , pgs -> line_params . miter_limit )"		361034	1					
ANR	361361	Callee	"* vdev_proc ( vdev , setmiterlimit )"		361034	0					
ANR	361362	UnaryOperationExpression	"* vdev_proc ( vdev , setmiterlimit )"		361034	0					
ANR	361363	UnaryOperator	*		361034	0					
ANR	361364	CallExpression	"vdev_proc ( vdev , setmiterlimit )"		361034	1					
ANR	361365	Callee	vdev_proc		361034	0					
ANR	361366	Identifier	vdev_proc		361034	0					
ANR	361367	ArgumentList	vdev		361034	1					
ANR	361368	Argument	vdev		361034	0					
ANR	361369	Identifier	vdev		361034	0					
ANR	361370	Argument	setmiterlimit		361034	1					
ANR	361371	Identifier	setmiterlimit		361034	0					
ANR	361372	ArgumentList	vdev		361034	1					
ANR	361373	Argument	vdev		361034	0					
ANR	361374	Identifier	vdev		361034	0					
ANR	361375	Argument	pgs -> line_params . miter_limit		361034	1					
ANR	361376	MemberAccess	pgs -> line_params . miter_limit		361034	0					
ANR	361377	PtrMemberAccess	pgs -> line_params		361034	0					
ANR	361378	Identifier	pgs		361034	0					
ANR	361379	Identifier	line_params		361034	1					
ANR	361380	Identifier	miter_limit		361034	1					
ANR	361381	IfStatement	if ( code < 0 )		361034	1					
ANR	361382	Condition	code < 0	507:16:17998:18005	361034	0	True				
ANR	361383	RelationalExpression	code < 0		361034	0		<			
ANR	361384	Identifier	code		361034	0					
ANR	361385	PrimaryExpression	0		361034	1					
ANR	361386	ReturnStatement	return code ;	508:16:18024:18035	361034	1	True				
ANR	361387	Identifier	code		361034	0					
ANR	361388	ExpressionStatement	"gx_set_miter_limit ( & vdev -> state . line_params , pgs -> line_params . miter_limit )"	509:12:18049:18154	361034	2	True				
ANR	361389	CallExpression	"gx_set_miter_limit ( & vdev -> state . line_params , pgs -> line_params . miter_limit )"		361034	0					
ANR	361390	Callee	gx_set_miter_limit		361034	0					
ANR	361391	Identifier	gx_set_miter_limit		361034	0					
ANR	361392	ArgumentList	& vdev -> state . line_params		361034	1					
ANR	361393	Argument	& vdev -> state . line_params		361034	0					
ANR	361394	UnaryOperationExpression	& vdev -> state . line_params		361034	0					
ANR	361395	UnaryOperator	&		361034	0					
ANR	361396	MemberAccess	vdev -> state . line_params		361034	1					
ANR	361397	PtrMemberAccess	vdev -> state		361034	0					
ANR	361398	Identifier	vdev		361034	0					
ANR	361399	Identifier	state		361034	1					
ANR	361400	Identifier	line_params		361034	1					
ANR	361401	Argument	pgs -> line_params . miter_limit		361034	1					
ANR	361402	MemberAccess	pgs -> line_params . miter_limit		361034	0					
ANR	361403	PtrMemberAccess	pgs -> line_params		361034	0					
ANR	361404	Identifier	pgs		361034	0					
ANR	361405	Identifier	line_params		361034	1					
ANR	361406	Identifier	miter_limit		361034	1					
ANR	361407	IfStatement	if ( pgs -> line_params . start_cap != vdev -> state . line_params . start_cap )		361034	6					
ANR	361408	Condition	pgs -> line_params . start_cap != vdev -> state . line_params . start_cap	513:12:18241:18303	361034	0	True				
ANR	361409	EqualityExpression	pgs -> line_params . start_cap != vdev -> state . line_params . start_cap		361034	0		!=			
ANR	361410	MemberAccess	pgs -> line_params . start_cap		361034	0					
ANR	361411	PtrMemberAccess	pgs -> line_params		361034	0					
ANR	361412	Identifier	pgs		361034	0					
ANR	361413	Identifier	line_params		361034	1					
ANR	361414	Identifier	start_cap		361034	1					
ANR	361415	MemberAccess	vdev -> state . line_params . start_cap		361034	1					
ANR	361416	MemberAccess	vdev -> state . line_params		361034	0					
ANR	361417	PtrMemberAccess	vdev -> state		361034	0					
ANR	361418	Identifier	vdev		361034	0					
ANR	361419	Identifier	state		361034	1					
ANR	361420	Identifier	line_params		361034	1					
ANR	361421	Identifier	start_cap		361034	1					
ANR	361422	CompoundStatement		50:12:2190:2282	361034	1					
ANR	361423	IdentifierDeclStatement	"int code = ( * vdev_proc ( vdev , setlinecap ) ) ( vdev , pgs -> line_params . start_cap ) ;"	514:12:18320:18412	361034	0	True				
ANR	361424	IdentifierDecl	"code = ( * vdev_proc ( vdev , setlinecap ) ) ( vdev , pgs -> line_params . start_cap )"		361034	0					
ANR	361425	IdentifierDeclType	int		361034	0					
ANR	361426	Identifier	code		361034	1					
ANR	361427	AssignmentExpression	"code = ( * vdev_proc ( vdev , setlinecap ) ) ( vdev , pgs -> line_params . start_cap )"		361034	2		=			
ANR	361428	Identifier	code		361034	0					
ANR	361429	CallExpression	"( * vdev_proc ( vdev , setlinecap ) ) ( vdev , pgs -> line_params . start_cap )"		361034	1					
ANR	361430	Callee	"* vdev_proc ( vdev , setlinecap )"		361034	0					
ANR	361431	UnaryOperationExpression	"* vdev_proc ( vdev , setlinecap )"		361034	0					
ANR	361432	UnaryOperator	*		361034	0					
ANR	361433	CallExpression	"vdev_proc ( vdev , setlinecap )"		361034	1					
ANR	361434	Callee	vdev_proc		361034	0					
ANR	361435	Identifier	vdev_proc		361034	0					
ANR	361436	ArgumentList	vdev		361034	1					
ANR	361437	Argument	vdev		361034	0					
ANR	361438	Identifier	vdev		361034	0					
ANR	361439	Argument	setlinecap		361034	1					
ANR	361440	Identifier	setlinecap		361034	0					
ANR	361441	ArgumentList	vdev		361034	1					
ANR	361442	Argument	vdev		361034	0					
ANR	361443	Identifier	vdev		361034	0					
ANR	361444	Argument	pgs -> line_params . start_cap		361034	1					
ANR	361445	MemberAccess	pgs -> line_params . start_cap		361034	0					
ANR	361446	PtrMemberAccess	pgs -> line_params		361034	0					
ANR	361447	Identifier	pgs		361034	0					
ANR	361448	Identifier	line_params		361034	1					
ANR	361449	Identifier	start_cap		361034	1					
ANR	361450	IfStatement	if ( code < 0 )		361034	1					
ANR	361451	Condition	code < 0	517:16:18431:18438	361034	0	True				
ANR	361452	RelationalExpression	code < 0		361034	0		<			
ANR	361453	Identifier	code		361034	0					
ANR	361454	PrimaryExpression	0		361034	1					
ANR	361455	ReturnStatement	return code ;	518:16:18457:18468	361034	1	True				
ANR	361456	Identifier	code		361034	0					
ANR	361457	ExpressionStatement	vdev -> state . line_params . start_cap = pgs -> line_params . start_cap	519:12:18482:18544	361034	2	True				
ANR	361458	AssignmentExpression	vdev -> state . line_params . start_cap = pgs -> line_params . start_cap		361034	0		=			
ANR	361459	MemberAccess	vdev -> state . line_params . start_cap		361034	0					
ANR	361460	MemberAccess	vdev -> state . line_params		361034	0					
ANR	361461	PtrMemberAccess	vdev -> state		361034	0					
ANR	361462	Identifier	vdev		361034	0					
ANR	361463	Identifier	state		361034	1					
ANR	361464	Identifier	line_params		361034	1					
ANR	361465	Identifier	start_cap		361034	1					
ANR	361466	MemberAccess	pgs -> line_params . start_cap		361034	1					
ANR	361467	PtrMemberAccess	pgs -> line_params		361034	0					
ANR	361468	Identifier	pgs		361034	0					
ANR	361469	Identifier	line_params		361034	1					
ANR	361470	Identifier	start_cap		361034	1					
ANR	361471	IfStatement	if ( pgs -> line_params . join != vdev -> state . line_params . join )		361034	7					
ANR	361472	Condition	pgs -> line_params . join != vdev -> state . line_params . join	521:12:18568:18620	361034	0	True				
ANR	361473	EqualityExpression	pgs -> line_params . join != vdev -> state . line_params . join		361034	0		!=			
ANR	361474	MemberAccess	pgs -> line_params . join		361034	0					
ANR	361475	PtrMemberAccess	pgs -> line_params		361034	0					
ANR	361476	Identifier	pgs		361034	0					
ANR	361477	Identifier	line_params		361034	1					
ANR	361478	Identifier	join		361034	1					
ANR	361479	MemberAccess	vdev -> state . line_params . join		361034	1					
ANR	361480	MemberAccess	vdev -> state . line_params		361034	0					
ANR	361481	PtrMemberAccess	vdev -> state		361034	0					
ANR	361482	Identifier	vdev		361034	0					
ANR	361483	Identifier	state		361034	1					
ANR	361484	Identifier	line_params		361034	1					
ANR	361485	Identifier	join		361034	1					
ANR	361486	CompoundStatement		58:12:2507:2595	361034	1					
ANR	361487	IdentifierDeclStatement	"int code = ( * vdev_proc ( vdev , setlinejoin ) ) ( vdev , pgs -> line_params . join ) ;"	522:12:18637:18725	361034	0	True				
ANR	361488	IdentifierDecl	"code = ( * vdev_proc ( vdev , setlinejoin ) ) ( vdev , pgs -> line_params . join )"		361034	0					
ANR	361489	IdentifierDeclType	int		361034	0					
ANR	361490	Identifier	code		361034	1					
ANR	361491	AssignmentExpression	"code = ( * vdev_proc ( vdev , setlinejoin ) ) ( vdev , pgs -> line_params . join )"		361034	2		=			
ANR	361492	Identifier	code		361034	0					
ANR	361493	CallExpression	"( * vdev_proc ( vdev , setlinejoin ) ) ( vdev , pgs -> line_params . join )"		361034	1					
ANR	361494	Callee	"* vdev_proc ( vdev , setlinejoin )"		361034	0					
ANR	361495	UnaryOperationExpression	"* vdev_proc ( vdev , setlinejoin )"		361034	0					
ANR	361496	UnaryOperator	*		361034	0					
ANR	361497	CallExpression	"vdev_proc ( vdev , setlinejoin )"		361034	1					
ANR	361498	Callee	vdev_proc		361034	0					
ANR	361499	Identifier	vdev_proc		361034	0					
ANR	361500	ArgumentList	vdev		361034	1					
ANR	361501	Argument	vdev		361034	0					
ANR	361502	Identifier	vdev		361034	0					
ANR	361503	Argument	setlinejoin		361034	1					
ANR	361504	Identifier	setlinejoin		361034	0					
ANR	361505	ArgumentList	vdev		361034	1					
ANR	361506	Argument	vdev		361034	0					
ANR	361507	Identifier	vdev		361034	0					
ANR	361508	Argument	pgs -> line_params . join		361034	1					
ANR	361509	MemberAccess	pgs -> line_params . join		361034	0					
ANR	361510	PtrMemberAccess	pgs -> line_params		361034	0					
ANR	361511	Identifier	pgs		361034	0					
ANR	361512	Identifier	line_params		361034	1					
ANR	361513	Identifier	join		361034	1					
ANR	361514	IfStatement	if ( code < 0 )		361034	1					
ANR	361515	Condition	code < 0	525:16:18744:18751	361034	0	True				
ANR	361516	RelationalExpression	code < 0		361034	0		<			
ANR	361517	Identifier	code		361034	0					
ANR	361518	PrimaryExpression	0		361034	1					
ANR	361519	ReturnStatement	return code ;	526:16:18770:18781	361034	1	True				
ANR	361520	Identifier	code		361034	0					
ANR	361521	ExpressionStatement	vdev -> state . line_params . join = pgs -> line_params . join	527:12:18795:18847	361034	2	True				
ANR	361522	AssignmentExpression	vdev -> state . line_params . join = pgs -> line_params . join		361034	0		=			
ANR	361523	MemberAccess	vdev -> state . line_params . join		361034	0					
ANR	361524	MemberAccess	vdev -> state . line_params		361034	0					
ANR	361525	PtrMemberAccess	vdev -> state		361034	0					
ANR	361526	Identifier	vdev		361034	0					
ANR	361527	Identifier	state		361034	1					
ANR	361528	Identifier	line_params		361034	1					
ANR	361529	Identifier	join		361034	1					
ANR	361530	MemberAccess	pgs -> line_params . join		361034	1					
ANR	361531	PtrMemberAccess	pgs -> line_params		361034	0					
ANR	361532	Identifier	pgs		361034	0					
ANR	361533	Identifier	line_params		361034	1					
ANR	361534	Identifier	join		361034	1					
ANR	361535	CompoundStatement		65:12:2743:2798	361034	8					
ANR	361536	IdentifierDeclStatement	"int code = gdev_vector_update_log_op ( vdev , pgs -> log_op ) ;"	529:12:18873:18928	361034	0	True				
ANR	361537	IdentifierDecl	"code = gdev_vector_update_log_op ( vdev , pgs -> log_op )"		361034	0					
ANR	361538	IdentifierDeclType	int		361034	0					
ANR	361539	Identifier	code		361034	1					
ANR	361540	AssignmentExpression	"code = gdev_vector_update_log_op ( vdev , pgs -> log_op )"		361034	2		=			
ANR	361541	Identifier	code		361034	0					
ANR	361542	CallExpression	"gdev_vector_update_log_op ( vdev , pgs -> log_op )"		361034	1					
ANR	361543	Callee	gdev_vector_update_log_op		361034	0					
ANR	361544	Identifier	gdev_vector_update_log_op		361034	0					
ANR	361545	ArgumentList	vdev		361034	1					
ANR	361546	Argument	vdev		361034	0					
ANR	361547	Identifier	vdev		361034	0					
ANR	361548	Argument	pgs -> log_op		361034	1					
ANR	361549	PtrMemberAccess	pgs -> log_op		361034	0					
ANR	361550	Identifier	pgs		361034	0					
ANR	361551	Identifier	log_op		361034	1					
ANR	361552	IfStatement	if ( code < 0 )		361034	1					
ANR	361553	Condition	code < 0	531:16:18947:18954	361034	0	True				
ANR	361554	RelationalExpression	code < 0		361034	0		<			
ANR	361555	Identifier	code		361034	0					
ANR	361556	PrimaryExpression	0		361034	1					
ANR	361557	ReturnStatement	return code ;	532:16:18973:18984	361034	1	True				
ANR	361558	Identifier	code		361034	0					
ANR	361559	IfStatement	if ( params )		361034	1					
ANR	361560	Condition	params	535:8:19010:19015	361034	0	True				
ANR	361561	Identifier	params		361034	0					
ANR	361562	CompoundStatement		71:16:2888:2888	361034	1					
ANR	361563	IfStatement	if ( params -> flatness != vdev -> state . flatness )		361034	0					
ANR	361564	Condition	params -> flatness != vdev -> state . flatness	536:12:19032:19071	361034	0	True				
ANR	361565	EqualityExpression	params -> flatness != vdev -> state . flatness		361034	0		!=			
ANR	361566	PtrMemberAccess	params -> flatness		361034	0					
ANR	361567	Identifier	params		361034	0					
ANR	361568	Identifier	flatness		361034	1					
ANR	361569	MemberAccess	vdev -> state . flatness		361034	1					
ANR	361570	PtrMemberAccess	vdev -> state		361034	0					
ANR	361571	Identifier	vdev		361034	0					
ANR	361572	Identifier	state		361034	1					
ANR	361573	Identifier	flatness		361034	1					
ANR	361574	CompoundStatement		73:12:2958:3021	361034	1					
ANR	361575	IdentifierDeclStatement	"int code = ( * vdev_proc ( vdev , setflat ) ) ( vdev , params -> flatness ) ;"	537:12:19088:19151	361034	0	True				
ANR	361576	IdentifierDecl	"code = ( * vdev_proc ( vdev , setflat ) ) ( vdev , params -> flatness )"		361034	0					
ANR	361577	IdentifierDeclType	int		361034	0					
ANR	361578	Identifier	code		361034	1					
ANR	361579	AssignmentExpression	"code = ( * vdev_proc ( vdev , setflat ) ) ( vdev , params -> flatness )"		361034	2		=			
ANR	361580	Identifier	code		361034	0					
ANR	361581	CallExpression	"( * vdev_proc ( vdev , setflat ) ) ( vdev , params -> flatness )"		361034	1					
ANR	361582	Callee	"* vdev_proc ( vdev , setflat )"		361034	0					
ANR	361583	UnaryOperationExpression	"* vdev_proc ( vdev , setflat )"		361034	0					
ANR	361584	UnaryOperator	*		361034	0					
ANR	361585	CallExpression	"vdev_proc ( vdev , setflat )"		361034	1					
ANR	361586	Callee	vdev_proc		361034	0					
ANR	361587	Identifier	vdev_proc		361034	0					
ANR	361588	ArgumentList	vdev		361034	1					
ANR	361589	Argument	vdev		361034	0					
ANR	361590	Identifier	vdev		361034	0					
ANR	361591	Argument	setflat		361034	1					
ANR	361592	Identifier	setflat		361034	0					
ANR	361593	ArgumentList	vdev		361034	1					
ANR	361594	Argument	vdev		361034	0					
ANR	361595	Identifier	vdev		361034	0					
ANR	361596	Argument	params -> flatness		361034	1					
ANR	361597	PtrMemberAccess	params -> flatness		361034	0					
ANR	361598	Identifier	params		361034	0					
ANR	361599	Identifier	flatness		361034	1					
ANR	361600	IfStatement	if ( code < 0 )		361034	1					
ANR	361601	Condition	code < 0	539:16:19170:19177	361034	0	True				
ANR	361602	RelationalExpression	code < 0		361034	0		<			
ANR	361603	Identifier	code		361034	0					
ANR	361604	PrimaryExpression	0		361034	1					
ANR	361605	ReturnStatement	return code ;	540:16:19196:19207	361034	1	True				
ANR	361606	Identifier	code		361034	0					
ANR	361607	ExpressionStatement	vdev -> state . flatness = params -> flatness	541:12:19221:19260	361034	2	True				
ANR	361608	AssignmentExpression	vdev -> state . flatness = params -> flatness		361034	0		=			
ANR	361609	MemberAccess	vdev -> state . flatness		361034	0					
ANR	361610	PtrMemberAccess	vdev -> state		361034	0					
ANR	361611	Identifier	vdev		361034	0					
ANR	361612	Identifier	state		361034	1					
ANR	361613	Identifier	flatness		361034	1					
ANR	361614	PtrMemberAccess	params -> flatness		361034	1					
ANR	361615	Identifier	params		361034	0					
ANR	361616	Identifier	flatness		361034	1					
ANR	361617	IfStatement	if ( pdcolor )		361034	2					
ANR	361618	Condition	pdcolor	544:8:19286:19292	361034	0	True				
ANR	361619	Identifier	pdcolor		361034	0					
ANR	361620	CompoundStatement		81:8:3175:3310	361034	1					
ANR	361621	IdentifierDeclStatement	"int code = gdev_vector_update_color ( vdev , pgs , pdcolor , & vdev -> saved_stroke_color , vdev_proc ( vdev , setstrokecolor ) ) ;"	545:8:19305:19440	361034	0	True				
ANR	361622	IdentifierDecl	"code = gdev_vector_update_color ( vdev , pgs , pdcolor , & vdev -> saved_stroke_color , vdev_proc ( vdev , setstrokecolor ) )"		361034	0					
ANR	361623	IdentifierDeclType	int		361034	0					
ANR	361624	Identifier	code		361034	1					
ANR	361625	AssignmentExpression	"code = gdev_vector_update_color ( vdev , pgs , pdcolor , & vdev -> saved_stroke_color , vdev_proc ( vdev , setstrokecolor ) )"		361034	2		=			
ANR	361626	Identifier	code		361034	0					
ANR	361627	CallExpression	"gdev_vector_update_color ( vdev , pgs , pdcolor , & vdev -> saved_stroke_color , vdev_proc ( vdev , setstrokecolor ) )"		361034	1					
ANR	361628	Callee	gdev_vector_update_color		361034	0					
ANR	361629	Identifier	gdev_vector_update_color		361034	0					
ANR	361630	ArgumentList	vdev		361034	1					
ANR	361631	Argument	vdev		361034	0					
ANR	361632	Identifier	vdev		361034	0					
ANR	361633	Argument	pgs		361034	1					
ANR	361634	Identifier	pgs		361034	0					
ANR	361635	Argument	pdcolor		361034	2					
ANR	361636	Identifier	pdcolor		361034	0					
ANR	361637	Argument	& vdev -> saved_stroke_color		361034	3					
ANR	361638	UnaryOperationExpression	& vdev -> saved_stroke_color		361034	0					
ANR	361639	UnaryOperator	&		361034	0					
ANR	361640	PtrMemberAccess	vdev -> saved_stroke_color		361034	1					
ANR	361641	Identifier	vdev		361034	0					
ANR	361642	Identifier	saved_stroke_color		361034	1					
ANR	361643	Argument	"vdev_proc ( vdev , setstrokecolor )"		361034	4					
ANR	361644	CallExpression	"vdev_proc ( vdev , setstrokecolor )"		361034	0					
ANR	361645	Callee	vdev_proc		361034	0					
ANR	361646	Identifier	vdev_proc		361034	0					
ANR	361647	ArgumentList	vdev		361034	1					
ANR	361648	Argument	vdev		361034	0					
ANR	361649	Identifier	vdev		361034	0					
ANR	361650	Argument	setstrokecolor		361034	1					
ANR	361651	Identifier	setstrokecolor		361034	0					
ANR	361652	IfStatement	if ( code < 0 )		361034	1					
ANR	361653	Condition	code < 0	548:12:19455:19462	361034	0	True				
ANR	361654	RelationalExpression	code < 0		361034	0		<			
ANR	361655	Identifier	code		361034	0					
ANR	361656	PrimaryExpression	0		361034	1					
ANR	361657	ReturnStatement	return code ;	549:12:19477:19488	361034	1	True				
ANR	361658	Identifier	code		361034	0					
ANR	361659	ReturnStatement	return 0 ;	551:4:19500:19508	361034	3	True				
ANR	361660	PrimaryExpression	0		361034	0					
ANR	361661	ReturnType	int		361034	1					
ANR	361662	Identifier	gdev_vector_prepare_stroke		361034	2					
ANR	361663	ParameterList	"gx_device_vector * vdev , const gs_gstate * pgs , const gx_stroke_params * params , const gx_drawing_color * pdcolor , double scale"		361034	3					
ANR	361664	Parameter	gx_device_vector * vdev	460:27:15838:15860	361034	0	True				
ANR	361665	ParameterType	gx_device_vector *		361034	0					
ANR	361666	Identifier	vdev		361034	1					
ANR	361667	Parameter	const gs_gstate * pgs	461:27:15890:15910	361034	1	True				
ANR	361668	ParameterType	const gs_gstate *		361034	0					
ANR	361669	Identifier	pgs		361034	1					
ANR	361670	Parameter	const gx_stroke_params * params	462:27:15958:15988	361034	2	True				
ANR	361671	ParameterType	const gx_stroke_params *		361034	0					
ANR	361672	Identifier	params		361034	1					
ANR	361673	Parameter	const gx_drawing_color * pdcolor	463:27:16036:16067	361034	3	True				
ANR	361674	ParameterType	const gx_drawing_color *		361034	0					
ANR	361675	Identifier	pdcolor		361034	1					
ANR	361676	Parameter	double scale	464:27:16115:16126	361034	4	True				
ANR	361677	ParameterType	double		361034	0					
ANR	361678	Identifier	scale		361034	1					
ANR	361679	CFGEntryNode	ENTRY		361034		True				
ANR	361680	CFGExitNode	EXIT		361034		True				
ANR	361681	Symbol	params -> flatness		361034						
ANR	361682	Symbol	setflat		361034						
ANR	361683	Symbol	* pgs -> line_params . dash		361034						
ANR	361684	Symbol	* pgs		361034						
ANR	361685	Symbol	pgs -> line_params		361034						
ANR	361686	Symbol	* vdev -> memory		361034						
ANR	361687	Symbol	pgs -> line_params . join		361034						
ANR	361688	Symbol	& pgs -> line_params		361034						
ANR	361689	Symbol	* vdev_proc		361034						
ANR	361690	Symbol	* * vdev		361034						
ANR	361691	Symbol	vdev -> dash_pattern		361034						
ANR	361692	Symbol	vdev_proc		361034						
ANR	361693	Symbol	vdev -> memory -> stable_memory		361034						
ANR	361694	Symbol	setlinejoin		361034						
ANR	361695	Symbol	& vdev -> saved_stroke_color		361034						
ANR	361696	Symbol	vdev -> state . line_params . miter_limit		361034						
ANR	361697	Symbol	* pattern		361034						
ANR	361698	Symbol	setdash		361034						
ANR	361699	Symbol	setstrokecolor		361034						
ANR	361700	Symbol	"* vdev_proc ( vdev , setdash )"		361034						
ANR	361701	Symbol	pgs -> line_params . dash		361034						
ANR	361702	Symbol	params		361034						
ANR	361703	Symbol	setlinecap		361034						
ANR	361704	Symbol	* vdev		361034						
ANR	361705	Symbol	* * pgs		361034						
ANR	361706	Symbol	& vdev -> state		361034						
ANR	361707	Symbol	setlinewidth		361034						
ANR	361708	Symbol	code		361034						
ANR	361709	Symbol	"* vdev_proc ( vdev , setflat )"		361034						
ANR	361710	Symbol	* pgs -> line_params . dash . pattern		361034						
ANR	361711	Symbol	pattern		361034						
ANR	361712	Symbol	scale		361034						
ANR	361713	Symbol	vdev -> state . line_params . dash		361034						
ANR	361714	Symbol	setmiterlimit		361034						
ANR	361715	Symbol	vdev -> state . line_params . half_width		361034						
ANR	361716	Symbol	"* vdev_proc ( vdev , setlinecap )"		361034						
ANR	361717	Symbol	& pgs -> line_params . dash		361034						
ANR	361718	Symbol	gdev_vector_update_color		361034						
ANR	361719	Symbol	vdev -> state . line_params . start_cap		361034						
ANR	361720	Symbol	vdev -> state . line_params . join		361034						
ANR	361721	Symbol	gdev_vector_update_log_op		361034						
ANR	361722	Symbol	pgs		361034						
ANR	361723	Symbol	pgs -> line_params . dash . pattern_size		361034						
ANR	361724	Symbol	pgs -> line_params . miter_limit		361034						
ANR	361725	Symbol	"* vdev_proc ( vdev , setlinejoin )"		361034						
ANR	361726	Symbol	vdev -> state . line_params . dash . offset		361034						
ANR	361727	Symbol	* params		361034						
ANR	361728	Symbol	pgs -> log_op		361034						
ANR	361729	Symbol	gs_alloc_bytes		361034						
ANR	361730	Symbol	half_width		361034						
ANR	361731	Symbol	pgs -> line_params . half_width		361034						
ANR	361732	Symbol	* pgs -> line_params		361034						
ANR	361733	Symbol	pgs -> line_params . start_cap		361034						
ANR	361734	Symbol	pgs -> line_params . dash . offset		361034						
ANR	361735	Symbol	vdev		361034						
ANR	361736	Symbol	vdev -> state . flatness		361034						
ANR	361737	Symbol	dash_offset		361034						
ANR	361738	Symbol	i		361034						
ANR	361739	Symbol	pdcolor		361034						
ANR	361740	Symbol	vdev -> state		361034						
ANR	361741	Symbol	dash_pattern_eq		361034						
ANR	361742	Symbol	pgs -> line_params . dash . pattern		361034						
ANR	361743	Symbol	& vdev -> state . line_params		361034						
ANR	361744	Symbol	vdev -> state . line_params . dash . pattern_size		361034						
ANR	361745	Symbol	"* vdev_proc ( vdev , setlinewidth )"		361034						
ANR	361746	Symbol	* i		361034						
ANR	361747	Symbol	vdev -> dash_pattern_size		361034						
ANR	361748	Symbol	vdev -> state . line_params		361034						
ANR	361749	Symbol	"* vdev_proc ( vdev , setmiterlimit )"		361034						
ANR	361750	Symbol	pattern_size		361034						
ANR	361751	Symbol	vdev -> memory		361034						
ANR	361752	Function	gdev_vector_stroke_scaling	560:0:19809:21841							
ANR	361753	FunctionDef	"gdev_vector_stroke_scaling (const gx_device_vector * vdev , const gs_gstate * pgs , double * pscale , gs_matrix * pmat)"		361752	0					
ANR	361754	CompoundStatement		564:0:19979:21841	361752	0					
ANR	361755	IdentifierDeclStatement	bool set_ctm = true ;	565:4:19985:20004	361752	0	True				
ANR	361756	IdentifierDecl	set_ctm = true		361752	0					
ANR	361757	IdentifierDeclType	bool		361752	0					
ANR	361758	Identifier	set_ctm		361752	1					
ANR	361759	AssignmentExpression	set_ctm = true		361752	2		=			
ANR	361760	Identifier	true		361752	0					
ANR	361761	Identifier	true		361752	1					
ANR	361762	IdentifierDeclStatement	double scale = 1 ;	566:4:20010:20026	361752	1	True				
ANR	361763	IdentifierDecl	scale = 1		361752	0					
ANR	361764	IdentifierDeclType	double		361752	0					
ANR	361765	Identifier	scale		361752	1					
ANR	361766	AssignmentExpression	scale = 1		361752	2		=			
ANR	361767	Identifier	scale		361752	0					
ANR	361768	PrimaryExpression	1		361752	1					
ANR	361769	IfStatement	if ( is_xxyy ( & pgs -> ctm ) )		361752	2					
ANR	361770	Condition	is_xxyy ( & pgs -> ctm )	578:8:20557:20574	361752	0	True				
ANR	361771	CallExpression	is_xxyy ( & pgs -> ctm )		361752	0					
ANR	361772	Callee	is_xxyy		361752	0					
ANR	361773	Identifier	is_xxyy		361752	0					
ANR	361774	ArgumentList	& pgs -> ctm		361752	1					
ANR	361775	Argument	& pgs -> ctm		361752	0					
ANR	361776	UnaryOperationExpression	& pgs -> ctm		361752	0					
ANR	361777	UnaryOperator	&		361752	0					
ANR	361778	PtrMemberAccess	pgs -> ctm		361752	1					
ANR	361779	Identifier	pgs		361752	0					
ANR	361780	Identifier	ctm		361752	1					
ANR	361781	CompoundStatement		15:28:597:597	361752	1					
ANR	361782	ExpressionStatement	scale = fabs ( pgs -> ctm . xx )	579:8:20587:20612	361752	0	True				
ANR	361783	AssignmentExpression	scale = fabs ( pgs -> ctm . xx )		361752	0		=			
ANR	361784	Identifier	scale		361752	0					
ANR	361785	CallExpression	fabs ( pgs -> ctm . xx )		361752	1					
ANR	361786	Callee	fabs		361752	0					
ANR	361787	Identifier	fabs		361752	0					
ANR	361788	ArgumentList	pgs -> ctm . xx		361752	1					
ANR	361789	Argument	pgs -> ctm . xx		361752	0					
ANR	361790	MemberAccess	pgs -> ctm . xx		361752	0					
ANR	361791	PtrMemberAccess	pgs -> ctm		361752	0					
ANR	361792	Identifier	pgs		361752	0					
ANR	361793	Identifier	ctm		361752	1					
ANR	361794	Identifier	xx		361752	1					
ANR	361795	ExpressionStatement	set_ctm = fabs ( pgs -> ctm . yy ) != scale	580:8:20622:20658	361752	1	True				
ANR	361796	AssignmentExpression	set_ctm = fabs ( pgs -> ctm . yy ) != scale		361752	0		=			
ANR	361797	Identifier	set_ctm		361752	0					
ANR	361798	EqualityExpression	fabs ( pgs -> ctm . yy ) != scale		361752	1		!=			
ANR	361799	CallExpression	fabs ( pgs -> ctm . yy )		361752	0					
ANR	361800	Callee	fabs		361752	0					
ANR	361801	Identifier	fabs		361752	0					
ANR	361802	ArgumentList	pgs -> ctm . yy		361752	1					
ANR	361803	Argument	pgs -> ctm . yy		361752	0					
ANR	361804	MemberAccess	pgs -> ctm . yy		361752	0					
ANR	361805	PtrMemberAccess	pgs -> ctm		361752	0					
ANR	361806	Identifier	pgs		361752	0					
ANR	361807	Identifier	ctm		361752	1					
ANR	361808	Identifier	yy		361752	1					
ANR	361809	Identifier	scale		361752	1					
ANR	361810	ElseStatement	else		361752	0					
ANR	361811	IfStatement	if ( is_xyyx ( & pgs -> ctm ) )		361752	0					
ANR	361812	Condition	is_xyyx ( & pgs -> ctm )	581:15:20675:20692	361752	0	True				
ANR	361813	CallExpression	is_xyyx ( & pgs -> ctm )		361752	0					
ANR	361814	Callee	is_xyyx		361752	0					
ANR	361815	Identifier	is_xyyx		361752	0					
ANR	361816	ArgumentList	& pgs -> ctm		361752	1					
ANR	361817	Argument	& pgs -> ctm		361752	0					
ANR	361818	UnaryOperationExpression	& pgs -> ctm		361752	0					
ANR	361819	UnaryOperator	&		361752	0					
ANR	361820	PtrMemberAccess	pgs -> ctm		361752	1					
ANR	361821	Identifier	pgs		361752	0					
ANR	361822	Identifier	ctm		361752	1					
ANR	361823	CompoundStatement		18:35:715:715	361752	1					
ANR	361824	ExpressionStatement	scale = fabs ( pgs -> ctm . xy )	582:8:20705:20730	361752	0	True				
ANR	361825	AssignmentExpression	scale = fabs ( pgs -> ctm . xy )		361752	0		=			
ANR	361826	Identifier	scale		361752	0					
ANR	361827	CallExpression	fabs ( pgs -> ctm . xy )		361752	1					
ANR	361828	Callee	fabs		361752	0					
ANR	361829	Identifier	fabs		361752	0					
ANR	361830	ArgumentList	pgs -> ctm . xy		361752	1					
ANR	361831	Argument	pgs -> ctm . xy		361752	0					
ANR	361832	MemberAccess	pgs -> ctm . xy		361752	0					
ANR	361833	PtrMemberAccess	pgs -> ctm		361752	0					
ANR	361834	Identifier	pgs		361752	0					
ANR	361835	Identifier	ctm		361752	1					
ANR	361836	Identifier	xy		361752	1					
ANR	361837	ExpressionStatement	set_ctm = fabs ( pgs -> ctm . yx ) != scale	583:8:20740:20776	361752	1	True				
ANR	361838	AssignmentExpression	set_ctm = fabs ( pgs -> ctm . yx ) != scale		361752	0		=			
ANR	361839	Identifier	set_ctm		361752	0					
ANR	361840	EqualityExpression	fabs ( pgs -> ctm . yx ) != scale		361752	1		!=			
ANR	361841	CallExpression	fabs ( pgs -> ctm . yx )		361752	0					
ANR	361842	Callee	fabs		361752	0					
ANR	361843	Identifier	fabs		361752	0					
ANR	361844	ArgumentList	pgs -> ctm . yx		361752	1					
ANR	361845	Argument	pgs -> ctm . yx		361752	0					
ANR	361846	MemberAccess	pgs -> ctm . yx		361752	0					
ANR	361847	PtrMemberAccess	pgs -> ctm		361752	0					
ANR	361848	Identifier	pgs		361752	0					
ANR	361849	Identifier	ctm		361752	1					
ANR	361850	Identifier	yx		361752	1					
ANR	361851	Identifier	scale		361752	1					
ANR	361852	ElseStatement	else		361752	0					
ANR	361853	IfStatement	if ( ( pgs -> ctm . xx == pgs -> ctm . yy && pgs -> ctm . xy == - pgs -> ctm . yx ) || ( pgs -> ctm . xx == - pgs -> ctm . yy && pgs -> ctm . xy == pgs -> ctm . yx ) )		361752	0					
ANR	361854	Condition	( pgs -> ctm . xx == pgs -> ctm . yy && pgs -> ctm . xy == - pgs -> ctm . yx ) || ( pgs -> ctm . xx == - pgs -> ctm . yy && pgs -> ctm . xy == pgs -> ctm . yx )	584:15:20793:20929	361752	0	True				
ANR	361855	OrExpression	( pgs -> ctm . xx == pgs -> ctm . yy && pgs -> ctm . xy == - pgs -> ctm . yx ) || ( pgs -> ctm . xx == - pgs -> ctm . yy && pgs -> ctm . xy == pgs -> ctm . yx )		361752	0		||			
ANR	361856	AndExpression	pgs -> ctm . xx == pgs -> ctm . yy && pgs -> ctm . xy == - pgs -> ctm . yx		361752	0		&&			
ANR	361857	EqualityExpression	pgs -> ctm . xx == pgs -> ctm . yy		361752	0		==			
ANR	361858	MemberAccess	pgs -> ctm . xx		361752	0					
ANR	361859	PtrMemberAccess	pgs -> ctm		361752	0					
ANR	361860	Identifier	pgs		361752	0					
ANR	361861	Identifier	ctm		361752	1					
ANR	361862	Identifier	xx		361752	1					
ANR	361863	MemberAccess	pgs -> ctm . yy		361752	1					
ANR	361864	PtrMemberAccess	pgs -> ctm		361752	0					
ANR	361865	Identifier	pgs		361752	0					
ANR	361866	Identifier	ctm		361752	1					
ANR	361867	Identifier	yy		361752	1					
ANR	361868	EqualityExpression	pgs -> ctm . xy == - pgs -> ctm . yx		361752	1		==			
ANR	361869	MemberAccess	pgs -> ctm . xy		361752	0					
ANR	361870	PtrMemberAccess	pgs -> ctm		361752	0					
ANR	361871	Identifier	pgs		361752	0					
ANR	361872	Identifier	ctm		361752	1					
ANR	361873	Identifier	xy		361752	1					
ANR	361874	UnaryOperationExpression	- pgs -> ctm . yx		361752	1					
ANR	361875	UnaryOperator	-		361752	0					
ANR	361876	MemberAccess	pgs -> ctm . yx		361752	1					
ANR	361877	PtrMemberAccess	pgs -> ctm		361752	0					
ANR	361878	Identifier	pgs		361752	0					
ANR	361879	Identifier	ctm		361752	1					
ANR	361880	Identifier	yx		361752	1					
ANR	361881	AndExpression	pgs -> ctm . xx == - pgs -> ctm . yy && pgs -> ctm . xy == pgs -> ctm . yx		361752	1		&&			
ANR	361882	EqualityExpression	pgs -> ctm . xx == - pgs -> ctm . yy		361752	0		==			
ANR	361883	MemberAccess	pgs -> ctm . xx		361752	0					
ANR	361884	PtrMemberAccess	pgs -> ctm		361752	0					
ANR	361885	Identifier	pgs		361752	0					
ANR	361886	Identifier	ctm		361752	1					
ANR	361887	Identifier	xx		361752	1					
ANR	361888	UnaryOperationExpression	- pgs -> ctm . yy		361752	1					
ANR	361889	UnaryOperator	-		361752	0					
ANR	361890	MemberAccess	pgs -> ctm . yy		361752	1					
ANR	361891	PtrMemberAccess	pgs -> ctm		361752	0					
ANR	361892	Identifier	pgs		361752	0					
ANR	361893	Identifier	ctm		361752	1					
ANR	361894	Identifier	yy		361752	1					
ANR	361895	EqualityExpression	pgs -> ctm . xy == pgs -> ctm . yx		361752	1		==			
ANR	361896	MemberAccess	pgs -> ctm . xy		361752	0					
ANR	361897	PtrMemberAccess	pgs -> ctm		361752	0					
ANR	361898	Identifier	pgs		361752	0					
ANR	361899	Identifier	ctm		361752	1					
ANR	361900	Identifier	xy		361752	1					
ANR	361901	MemberAccess	pgs -> ctm . yx		361752	1					
ANR	361902	PtrMemberAccess	pgs -> ctm		361752	0					
ANR	361903	Identifier	pgs		361752	0					
ANR	361904	Identifier	ctm		361752	1					
ANR	361905	Identifier	yx		361752	1					
ANR	361906	CompoundStatement		23:10:961:961	361752	1					
ANR	361907	ExpressionStatement	"scale = hypot ( pgs -> ctm . xx , pgs -> ctm . xy )"	587:8:20951:20990	361752	0	True				
ANR	361908	AssignmentExpression	"scale = hypot ( pgs -> ctm . xx , pgs -> ctm . xy )"		361752	0		=			
ANR	361909	Identifier	scale		361752	0					
ANR	361910	CallExpression	"hypot ( pgs -> ctm . xx , pgs -> ctm . xy )"		361752	1					
ANR	361911	Callee	hypot		361752	0					
ANR	361912	Identifier	hypot		361752	0					
ANR	361913	ArgumentList	pgs -> ctm . xx		361752	1					
ANR	361914	Argument	pgs -> ctm . xx		361752	0					
ANR	361915	MemberAccess	pgs -> ctm . xx		361752	0					
ANR	361916	PtrMemberAccess	pgs -> ctm		361752	0					
ANR	361917	Identifier	pgs		361752	0					
ANR	361918	Identifier	ctm		361752	1					
ANR	361919	Identifier	xx		361752	1					
ANR	361920	Argument	pgs -> ctm . xy		361752	1					
ANR	361921	MemberAccess	pgs -> ctm . xy		361752	0					
ANR	361922	PtrMemberAccess	pgs -> ctm		361752	0					
ANR	361923	Identifier	pgs		361752	0					
ANR	361924	Identifier	ctm		361752	1					
ANR	361925	Identifier	xy		361752	1					
ANR	361926	ExpressionStatement	set_ctm = false	588:8:21000:21015	361752	1	True				
ANR	361927	AssignmentExpression	set_ctm = false		361752	0		=			
ANR	361928	Identifier	set_ctm		361752	0					
ANR	361929	Identifier	false		361752	1					
ANR	361930	IfStatement	if ( set_ctm )		361752	3					
ANR	361931	Condition	set_ctm	590:8:21031:21037	361752	0	True				
ANR	361932	Identifier	set_ctm		361752	0					
ANR	361933	CompoundStatement		35:8:1397:1590	361752	1					
ANR	361934	IdentifierDeclStatement	"double mxx = pgs -> ctm . xx / vdev -> scale . x , mxy = pgs -> ctm . xy / vdev -> scale . y , myx = pgs -> ctm . yx / vdev -> scale . x , myy = pgs -> ctm . yy / vdev -> scale . y ;"	598:8:21377:21570	361752	0	True				
ANR	361935	IdentifierDecl	mxx = pgs -> ctm . xx / vdev -> scale . x		361752	0					
ANR	361936	IdentifierDeclType	double		361752	0					
ANR	361937	Identifier	mxx		361752	1					
ANR	361938	AssignmentExpression	mxx = pgs -> ctm . xx / vdev -> scale . x		361752	2		=			
ANR	361939	Identifier	mxx		361752	0					
ANR	361940	MultiplicativeExpression	pgs -> ctm . xx / vdev -> scale . x		361752	1		/			
ANR	361941	MemberAccess	pgs -> ctm . xx		361752	0					
ANR	361942	PtrMemberAccess	pgs -> ctm		361752	0					
ANR	361943	Identifier	pgs		361752	0					
ANR	361944	Identifier	ctm		361752	1					
ANR	361945	Identifier	xx		361752	1					
ANR	361946	MemberAccess	vdev -> scale . x		361752	1					
ANR	361947	PtrMemberAccess	vdev -> scale		361752	0					
ANR	361948	Identifier	vdev		361752	0					
ANR	361949	Identifier	scale		361752	1					
ANR	361950	Identifier	x		361752	1					
ANR	361951	IdentifierDecl	mxy = pgs -> ctm . xy / vdev -> scale . y		361752	1					
ANR	361952	IdentifierDeclType	double		361752	0					
ANR	361953	Identifier	mxy		361752	1					
ANR	361954	AssignmentExpression	mxy = pgs -> ctm . xy / vdev -> scale . y		361752	2		=			
ANR	361955	Identifier	mxy		361752	0					
ANR	361956	MultiplicativeExpression	pgs -> ctm . xy / vdev -> scale . y		361752	1		/			
ANR	361957	MemberAccess	pgs -> ctm . xy		361752	0					
ANR	361958	PtrMemberAccess	pgs -> ctm		361752	0					
ANR	361959	Identifier	pgs		361752	0					
ANR	361960	Identifier	ctm		361752	1					
ANR	361961	Identifier	xy		361752	1					
ANR	361962	MemberAccess	vdev -> scale . y		361752	1					
ANR	361963	PtrMemberAccess	vdev -> scale		361752	0					
ANR	361964	Identifier	vdev		361752	0					
ANR	361965	Identifier	scale		361752	1					
ANR	361966	Identifier	y		361752	1					
ANR	361967	IdentifierDecl	myx = pgs -> ctm . yx / vdev -> scale . x		361752	2					
ANR	361968	IdentifierDeclType	double		361752	0					
ANR	361969	Identifier	myx		361752	1					
ANR	361970	AssignmentExpression	myx = pgs -> ctm . yx / vdev -> scale . x		361752	2		=			
ANR	361971	Identifier	myx		361752	0					
ANR	361972	MultiplicativeExpression	pgs -> ctm . yx / vdev -> scale . x		361752	1		/			
ANR	361973	MemberAccess	pgs -> ctm . yx		361752	0					
ANR	361974	PtrMemberAccess	pgs -> ctm		361752	0					
ANR	361975	Identifier	pgs		361752	0					
ANR	361976	Identifier	ctm		361752	1					
ANR	361977	Identifier	yx		361752	1					
ANR	361978	MemberAccess	vdev -> scale . x		361752	1					
ANR	361979	PtrMemberAccess	vdev -> scale		361752	0					
ANR	361980	Identifier	vdev		361752	0					
ANR	361981	Identifier	scale		361752	1					
ANR	361982	Identifier	x		361752	1					
ANR	361983	IdentifierDecl	myy = pgs -> ctm . yy / vdev -> scale . y		361752	3					
ANR	361984	IdentifierDeclType	double		361752	0					
ANR	361985	Identifier	myy		361752	1					
ANR	361986	AssignmentExpression	myy = pgs -> ctm . yy / vdev -> scale . y		361752	2		=			
ANR	361987	Identifier	myy		361752	0					
ANR	361988	MultiplicativeExpression	pgs -> ctm . yy / vdev -> scale . y		361752	1		/			
ANR	361989	MemberAccess	pgs -> ctm . yy		361752	0					
ANR	361990	PtrMemberAccess	pgs -> ctm		361752	0					
ANR	361991	Identifier	pgs		361752	0					
ANR	361992	Identifier	ctm		361752	1					
ANR	361993	Identifier	yy		361752	1					
ANR	361994	MemberAccess	vdev -> scale . y		361752	1					
ANR	361995	PtrMemberAccess	vdev -> scale		361752	0					
ANR	361996	Identifier	vdev		361752	0					
ANR	361997	Identifier	scale		361752	1					
ANR	361998	Identifier	y		361752	1					
ANR	361999	ExpressionStatement	scale = 0.5 * ( fabs ( mxx ) + fabs ( mxy ) + fabs ( myx ) + fabs ( myy ) )	604:8:21581:21642	361752	1	True				
ANR	362000	AssignmentExpression	scale = 0.5 * ( fabs ( mxx ) + fabs ( mxy ) + fabs ( myx ) + fabs ( myy ) )		361752	0		=			
ANR	362001	Identifier	scale		361752	0					
ANR	362002	MultiplicativeExpression	0.5 * ( fabs ( mxx ) + fabs ( mxy ) + fabs ( myx ) + fabs ( myy ) )		361752	1		*			
ANR	362003	PrimaryExpression	0.5		361752	0					
ANR	362004	AdditiveExpression	fabs ( mxx ) + fabs ( mxy ) + fabs ( myx ) + fabs ( myy )		361752	1		+			
ANR	362005	CallExpression	fabs ( mxx )		361752	0					
ANR	362006	Callee	fabs		361752	0					
ANR	362007	Identifier	fabs		361752	0					
ANR	362008	ArgumentList	mxx		361752	1					
ANR	362009	Argument	mxx		361752	0					
ANR	362010	Identifier	mxx		361752	0					
ANR	362011	AdditiveExpression	fabs ( mxy ) + fabs ( myx ) + fabs ( myy )		361752	1		+			
ANR	362012	CallExpression	fabs ( mxy )		361752	0					
ANR	362013	Callee	fabs		361752	0					
ANR	362014	Identifier	fabs		361752	0					
ANR	362015	ArgumentList	mxy		361752	1					
ANR	362016	Argument	mxy		361752	0					
ANR	362017	Identifier	mxy		361752	0					
ANR	362018	AdditiveExpression	fabs ( myx ) + fabs ( myy )		361752	1		+			
ANR	362019	CallExpression	fabs ( myx )		361752	0					
ANR	362020	Callee	fabs		361752	0					
ANR	362021	Identifier	fabs		361752	0					
ANR	362022	ArgumentList	myx		361752	1					
ANR	362023	Argument	myx		361752	0					
ANR	362024	Identifier	myx		361752	0					
ANR	362025	CallExpression	fabs ( myy )		361752	1					
ANR	362026	Callee	fabs		361752	0					
ANR	362027	Identifier	fabs		361752	0					
ANR	362028	ArgumentList	myy		361752	1					
ANR	362029	Argument	myy		361752	0					
ANR	362030	Identifier	myy		361752	0					
ANR	362031	ExpressionStatement	"pmat -> xx = mxx / scale , pmat -> xy = mxy / scale"	605:8:21652:21698	361752	2	True				
ANR	362032	Expression	"pmat -> xx = mxx / scale , pmat -> xy = mxy / scale"		361752	0					
ANR	362033	AssignmentExpression	pmat -> xx = mxx / scale		361752	0		=			
ANR	362034	PtrMemberAccess	pmat -> xx		361752	0					
ANR	362035	Identifier	pmat		361752	0					
ANR	362036	Identifier	xx		361752	1					
ANR	362037	MultiplicativeExpression	mxx / scale		361752	1		/			
ANR	362038	Identifier	mxx		361752	0					
ANR	362039	Identifier	scale		361752	1					
ANR	362040	AssignmentExpression	pmat -> xy = mxy / scale		361752	1		=			
ANR	362041	PtrMemberAccess	pmat -> xy		361752	0					
ANR	362042	Identifier	pmat		361752	0					
ANR	362043	Identifier	xy		361752	1					
ANR	362044	MultiplicativeExpression	mxy / scale		361752	1		/			
ANR	362045	Identifier	mxy		361752	0					
ANR	362046	Identifier	scale		361752	1					
ANR	362047	ExpressionStatement	"pmat -> yx = myx / scale , pmat -> yy = myy / scale"	606:8:21708:21754	361752	3	True				
ANR	362048	Expression	"pmat -> yx = myx / scale , pmat -> yy = myy / scale"		361752	0					
ANR	362049	AssignmentExpression	pmat -> yx = myx / scale		361752	0		=			
ANR	362050	PtrMemberAccess	pmat -> yx		361752	0					
ANR	362051	Identifier	pmat		361752	0					
ANR	362052	Identifier	yx		361752	1					
ANR	362053	MultiplicativeExpression	myx / scale		361752	1		/			
ANR	362054	Identifier	myx		361752	0					
ANR	362055	Identifier	scale		361752	1					
ANR	362056	AssignmentExpression	pmat -> yy = myy / scale		361752	1		=			
ANR	362057	PtrMemberAccess	pmat -> yy		361752	0					
ANR	362058	Identifier	pmat		361752	0					
ANR	362059	Identifier	yy		361752	1					
ANR	362060	MultiplicativeExpression	myy / scale		361752	1		/			
ANR	362061	Identifier	myy		361752	0					
ANR	362062	Identifier	scale		361752	1					
ANR	362063	ExpressionStatement	pmat -> tx = pmat -> ty = 0	607:8:21764:21787	361752	4	True				
ANR	362064	AssignmentExpression	pmat -> tx = pmat -> ty = 0		361752	0		=			
ANR	362065	PtrMemberAccess	pmat -> tx		361752	0					
ANR	362066	Identifier	pmat		361752	0					
ANR	362067	Identifier	tx		361752	1					
ANR	362068	AssignmentExpression	pmat -> ty = 0		361752	1		=			
ANR	362069	PtrMemberAccess	pmat -> ty		361752	0					
ANR	362070	Identifier	pmat		361752	0					
ANR	362071	Identifier	ty		361752	1					
ANR	362072	PrimaryExpression	0		361752	1					
ANR	362073	ExpressionStatement	* pscale = scale	609:4:21799:21814	361752	4	True				
ANR	362074	AssignmentExpression	* pscale = scale		361752	0		=			
ANR	362075	UnaryOperationExpression	* pscale		361752	0					
ANR	362076	UnaryOperator	*		361752	0					
ANR	362077	Identifier	pscale		361752	1					
ANR	362078	Identifier	scale		361752	1					
ANR	362079	ReturnStatement	return ( int ) set_ctm ;	610:4:21820:21839	361752	5	True				
ANR	362080	CastExpression	( int ) set_ctm		361752	0					
ANR	362081	CastTarget	int		361752	0					
ANR	362082	Identifier	set_ctm		361752	1					
ANR	362083	ReturnType	int		361752	1					
ANR	362084	Identifier	gdev_vector_stroke_scaling		361752	2					
ANR	362085	ParameterList	"const gx_device_vector * vdev , const gs_gstate * pgs , double * pscale , gs_matrix * pmat"		361752	3					
ANR	362086	Parameter	const gx_device_vector * vdev	561:27:19840:19867	361752	0	True				
ANR	362087	ParameterType	const gx_device_vector *		361752	0					
ANR	362088	Identifier	vdev		361752	1					
ANR	362089	Parameter	const gs_gstate * pgs	562:27:19897:19916	361752	1	True				
ANR	362090	ParameterType	const gs_gstate *		361752	0					
ANR	362091	Identifier	pgs		361752	1					
ANR	362092	Parameter	double * pscale	563:27:19946:19959	361752	2	True				
ANR	362093	ParameterType	double *		361752	0					
ANR	362094	Identifier	pscale		361752	1					
ANR	362095	Parameter	gs_matrix * pmat	563:43:19962:19976	361752	3	True				
ANR	362096	ParameterType	gs_matrix *		361752	0					
ANR	362097	Identifier	pmat		361752	1					
ANR	362098	CFGEntryNode	ENTRY		361752		True				
ANR	362099	CFGExitNode	EXIT		361752		True				
ANR	362100	Symbol	pmat		361752						
ANR	362101	Symbol	pmat -> xx		361752						
ANR	362102	Symbol	* pmat		361752						
ANR	362103	Symbol	* pgs		361752						
ANR	362104	Symbol	scale		361752						
ANR	362105	Symbol	* pscale		361752						
ANR	362106	Symbol	is_xxyy		361752						
ANR	362107	Symbol	is_xyyx		361752						
ANR	362108	Symbol	myy		361752						
ANR	362109	Symbol	myx		361752						
ANR	362110	Symbol	pgs -> ctm . xx		361752						
ANR	362111	Symbol	vdev -> scale . y		361752						
ANR	362112	Symbol	vdev -> scale . x		361752						
ANR	362113	Symbol	hypot		361752						
ANR	362114	Symbol	pgs -> ctm . xy		361752						
ANR	362115	Symbol	pgs		361752						
ANR	362116	Symbol	vdev -> scale		361752						
ANR	362117	Symbol	fabs		361752						
ANR	362118	Symbol	pmat -> yy		361752						
ANR	362119	Symbol	pmat -> yx		361752						
ANR	362120	Symbol	vdev		361752						
ANR	362121	Symbol	false		361752						
ANR	362122	Symbol	set_ctm		361752						
ANR	362123	Symbol	mxx		361752						
ANR	362124	Symbol	pgs -> ctm		361752						
ANR	362125	Symbol	mxy		361752						
ANR	362126	Symbol	* vdev		361752						
ANR	362127	Symbol	pgs -> ctm . yy		361752						
ANR	362128	Symbol	pgs -> ctm . yx		361752						
ANR	362129	Symbol	true		361752						
ANR	362130	Symbol	pmat -> tx		361752						
ANR	362131	Symbol	& pgs -> ctm		361752						
ANR	362132	Symbol	pscale		361752						
ANR	362133	Symbol	pmat -> xy		361752						
ANR	362134	Symbol	pmat -> ty		361752						
ANR	362135	Function	gdev_vector_dopath_init	614:0:21914:22600							
ANR	362136	FunctionDef	"gdev_vector_dopath_init (gdev_vector_dopath_state_t * state , gx_device_vector * vdev , gx_path_type_t type , const gs_matrix * pmat)"		362135	0					
ANR	362137	CompoundStatement		618:0:22094:22600	362135	0					
ANR	362138	ExpressionStatement	state -> vdev = vdev	619:4:22100:22118	362135	0	True				
ANR	362139	AssignmentExpression	state -> vdev = vdev		362135	0		=			
ANR	362140	PtrMemberAccess	state -> vdev		362135	0					
ANR	362141	Identifier	state		362135	0					
ANR	362142	Identifier	vdev		362135	1					
ANR	362143	Identifier	vdev		362135	1					
ANR	362144	ExpressionStatement	state -> type = type	620:4:22124:22142	362135	1	True				
ANR	362145	AssignmentExpression	state -> type = type		362135	0		=			
ANR	362146	PtrMemberAccess	state -> type		362135	0					
ANR	362147	Identifier	state		362135	0					
ANR	362148	Identifier	type		362135	1					
ANR	362149	Identifier	type		362135	1					
ANR	362150	IfStatement	if ( pmat )		362135	2					
ANR	362151	Condition	pmat	621:8:22152:22155	362135	0	True				
ANR	362152	Identifier	pmat		362135	0					
ANR	362153	CompoundStatement		4:14:63:63	362135	1					
ANR	362154	ExpressionStatement	state -> scale_mat = * pmat	622:8:22168:22192	362135	0	True				
ANR	362155	AssignmentExpression	state -> scale_mat = * pmat		362135	0		=			
ANR	362156	PtrMemberAccess	state -> scale_mat		362135	0					
ANR	362157	Identifier	state		362135	0					
ANR	362158	Identifier	scale_mat		362135	1					
ANR	362159	UnaryOperationExpression	* pmat		362135	1					
ANR	362160	UnaryOperator	*		362135	0					
ANR	362161	Identifier	pmat		362135	1					
ANR	362162	ExpressionStatement	"gs_matrix_scale ( & state -> scale_mat , 1.0 / vdev -> scale . x , 1.0 / vdev -> scale . y , & state -> scale_mat )"	627:8:22361:22480	362135	1	True				
ANR	362163	CallExpression	"gs_matrix_scale ( & state -> scale_mat , 1.0 / vdev -> scale . x , 1.0 / vdev -> scale . y , & state -> scale_mat )"		362135	0					
ANR	362164	Callee	gs_matrix_scale		362135	0					
ANR	362165	Identifier	gs_matrix_scale		362135	0					
ANR	362166	ArgumentList	& state -> scale_mat		362135	1					
ANR	362167	Argument	& state -> scale_mat		362135	0					
ANR	362168	UnaryOperationExpression	& state -> scale_mat		362135	0					
ANR	362169	UnaryOperator	&		362135	0					
ANR	362170	PtrMemberAccess	state -> scale_mat		362135	1					
ANR	362171	Identifier	state		362135	0					
ANR	362172	Identifier	scale_mat		362135	1					
ANR	362173	Argument	1.0 / vdev -> scale . x		362135	1					
ANR	362174	MultiplicativeExpression	1.0 / vdev -> scale . x		362135	0		/			
ANR	362175	PrimaryExpression	1.0		362135	0					
ANR	362176	MemberAccess	vdev -> scale . x		362135	1					
ANR	362177	PtrMemberAccess	vdev -> scale		362135	0					
ANR	362178	Identifier	vdev		362135	0					
ANR	362179	Identifier	scale		362135	1					
ANR	362180	Identifier	x		362135	1					
ANR	362181	Argument	1.0 / vdev -> scale . y		362135	2					
ANR	362182	MultiplicativeExpression	1.0 / vdev -> scale . y		362135	0		/			
ANR	362183	PrimaryExpression	1.0		362135	0					
ANR	362184	MemberAccess	vdev -> scale . y		362135	1					
ANR	362185	PtrMemberAccess	vdev -> scale		362135	0					
ANR	362186	Identifier	vdev		362135	0					
ANR	362187	Identifier	scale		362135	1					
ANR	362188	Identifier	y		362135	1					
ANR	362189	Argument	& state -> scale_mat		362135	3					
ANR	362190	UnaryOperationExpression	& state -> scale_mat		362135	0					
ANR	362191	UnaryOperator	&		362135	0					
ANR	362192	PtrMemberAccess	state -> scale_mat		362135	1					
ANR	362193	Identifier	state		362135	0					
ANR	362194	Identifier	scale_mat		362135	1					
ANR	362195	ElseStatement	else		362135	0					
ANR	362196	CompoundStatement		12:11:398:398	362135	0					
ANR	362197	ExpressionStatement	"gs_make_scaling ( vdev -> scale . x , vdev -> scale . y , & state -> scale_mat )"	630:8:22503:22567	362135	0	True				
ANR	362198	CallExpression	"gs_make_scaling ( vdev -> scale . x , vdev -> scale . y , & state -> scale_mat )"		362135	0					
ANR	362199	Callee	gs_make_scaling		362135	0					
ANR	362200	Identifier	gs_make_scaling		362135	0					
ANR	362201	ArgumentList	vdev -> scale . x		362135	1					
ANR	362202	Argument	vdev -> scale . x		362135	0					
ANR	362203	MemberAccess	vdev -> scale . x		362135	0					
ANR	362204	PtrMemberAccess	vdev -> scale		362135	0					
ANR	362205	Identifier	vdev		362135	0					
ANR	362206	Identifier	scale		362135	1					
ANR	362207	Identifier	x		362135	1					
ANR	362208	Argument	vdev -> scale . y		362135	1					
ANR	362209	MemberAccess	vdev -> scale . y		362135	0					
ANR	362210	PtrMemberAccess	vdev -> scale		362135	0					
ANR	362211	Identifier	vdev		362135	0					
ANR	362212	Identifier	scale		362135	1					
ANR	362213	Identifier	y		362135	1					
ANR	362214	Argument	& state -> scale_mat		362135	2					
ANR	362215	UnaryOperationExpression	& state -> scale_mat		362135	0					
ANR	362216	UnaryOperator	&		362135	0					
ANR	362217	PtrMemberAccess	state -> scale_mat		362135	1					
ANR	362218	Identifier	state		362135	0					
ANR	362219	Identifier	scale_mat		362135	1					
ANR	362220	ExpressionStatement	state -> first = true	632:4:22579:22598	362135	3	True				
ANR	362221	AssignmentExpression	state -> first = true		362135	0		=			
ANR	362222	PtrMemberAccess	state -> first		362135	0					
ANR	362223	Identifier	state		362135	0					
ANR	362224	Identifier	first		362135	1					
ANR	362225	Identifier	true		362135	1					
ANR	362226	ReturnType	void		362135	1					
ANR	362227	Identifier	gdev_vector_dopath_init		362135	2					
ANR	362228	ParameterList	"gdev_vector_dopath_state_t * state , gx_device_vector * vdev , gx_path_type_t type , const gs_matrix * pmat"		362135	3					
ANR	362229	Parameter	gdev_vector_dopath_state_t * state	615:24:21943:21975	362135	0	True				
ANR	362230	ParameterType	gdev_vector_dopath_state_t *		362135	0					
ANR	362231	Identifier	state		362135	1					
ANR	362232	Parameter	gx_device_vector * vdev	616:24:22002:22023	362135	1	True				
ANR	362233	ParameterType	gx_device_vector *		362135	0					
ANR	362234	Identifier	vdev		362135	1					
ANR	362235	Parameter	gx_path_type_t type	616:48:22026:22044	362135	2	True				
ANR	362236	ParameterType	gx_path_type_t		362135	0					
ANR	362237	Identifier	type		362135	1					
ANR	362238	Parameter	const gs_matrix * pmat	617:24:22071:22091	362135	3	True				
ANR	362239	ParameterType	const gs_matrix *		362135	0					
ANR	362240	Identifier	pmat		362135	1					
ANR	362241	CFGEntryNode	ENTRY		362135		True				
ANR	362242	CFGExitNode	EXIT		362135		True				
ANR	362243	Symbol	& state -> scale_mat		362135						
ANR	362244	Symbol	pmat		362135						
ANR	362245	Symbol	* pmat		362135						
ANR	362246	Symbol	vdev		362135						
ANR	362247	Symbol	state -> first		362135						
ANR	362248	Symbol	type		362135						
ANR	362249	Symbol	* state		362135						
ANR	362250	Symbol	* vdev		362135						
ANR	362251	Symbol	state -> vdev		362135						
ANR	362252	Symbol	vdev -> scale . y		362135						
ANR	362253	Symbol	vdev -> scale . x		362135						
ANR	362254	Symbol	state -> type		362135						
ANR	362255	Symbol	true		362135						
ANR	362256	Symbol	state		362135						
ANR	362257	Symbol	vdev -> scale		362135						
ANR	362258	Symbol	state -> scale_mat		362135						
ANR	362259	Function	gdev_vector_dopath_segment	639:0:22715:25095							
ANR	362260	FunctionDef	"gdev_vector_dopath_segment (gdev_vector_dopath_state_t * state , int pe_op , gs_fixed_point vs [ 3 ])"		362259	0					
ANR	362261	CompoundStatement		642:0:22841:25095	362259	0					
ANR	362262	IdentifierDeclStatement	gx_device_vector * vdev = state -> vdev ;	643:4:22847:22883	362259	0	True				
ANR	362263	IdentifierDecl	* vdev = state -> vdev		362259	0					
ANR	362264	IdentifierDeclType	gx_device_vector *		362259	0					
ANR	362265	Identifier	vdev		362259	1					
ANR	362266	AssignmentExpression	* vdev = state -> vdev		362259	2		=			
ANR	362267	Identifier	vdev		362259	0					
ANR	362268	PtrMemberAccess	state -> vdev		362259	1					
ANR	362269	Identifier	state		362259	0					
ANR	362270	Identifier	vdev		362259	1					
ANR	362271	Statement	const	644:4:22889:22893	362259	1	True				
ANR	362272	Statement	gs_matrix	644:10:22895:22903	362259	2	True				
ANR	362273	Statement	*	644:20:22905:22905	362259	3	True				
ANR	362274	Statement	const	644:21:22906:22910	362259	4	True				
ANR	362275	ExpressionStatement	pmat = & state -> scale_mat	644:27:22912:22936	362259	5	True				
ANR	362276	AssignmentExpression	pmat = & state -> scale_mat		362259	0		=			
ANR	362277	Identifier	pmat		362259	0					
ANR	362278	UnaryOperationExpression	& state -> scale_mat		362259	1					
ANR	362279	UnaryOperator	&		362259	0					
ANR	362280	PtrMemberAccess	state -> scale_mat		362259	1					
ANR	362281	Identifier	state		362259	0					
ANR	362282	Identifier	scale_mat		362259	1					
ANR	362283	IdentifierDeclStatement	gs_point vp [ 3 ] ;	645:4:22942:22956	362259	6	True				
ANR	362284	IdentifierDecl	vp [ 3 ]		362259	0					
ANR	362285	IdentifierDeclType	gs_point [ 3 ]		362259	0					
ANR	362286	Identifier	vp		362259	1					
ANR	362287	PrimaryExpression	3		362259	2					
ANR	362288	IdentifierDeclStatement	int code ;	646:4:22962:22970	362259	7	True				
ANR	362289	IdentifierDecl	code		362259	0					
ANR	362290	IdentifierDeclType	int		362259	0					
ANR	362291	Identifier	code		362259	1					
ANR	362292	SwitchStatement	switch ( pe_op )		362259	8					
ANR	362293	Condition	pe_op	648:12:22985:22989	362259	0	True				
ANR	362294	Identifier	pe_op		362259	0					
ANR	362295	CompoundStatement		7:19:150:150	362259	1					
ANR	362296	Label	case gs_pe_moveto :	649:8:23002:23019	362259	0	True				
ANR	362297	Identifier	gs_pe_moveto		362259	0					
ANR	362298	ExpressionStatement	"code = gs_point_transform_inverse ( fixed2float ( vs [ 0 ] . x ) , fixed2float ( vs [ 0 ] . y ) , pmat , & vp [ 0 ] )"	650:12:23033:23163	362259	1	True				
ANR	362299	AssignmentExpression	"code = gs_point_transform_inverse ( fixed2float ( vs [ 0 ] . x ) , fixed2float ( vs [ 0 ] . y ) , pmat , & vp [ 0 ] )"		362259	0		=			
ANR	362300	Identifier	code		362259	0					
ANR	362301	CallExpression	"gs_point_transform_inverse ( fixed2float ( vs [ 0 ] . x ) , fixed2float ( vs [ 0 ] . y ) , pmat , & vp [ 0 ] )"		362259	1					
ANR	362302	Callee	gs_point_transform_inverse		362259	0					
ANR	362303	Identifier	gs_point_transform_inverse		362259	0					
ANR	362304	ArgumentList	fixed2float ( vs [ 0 ] . x )		362259	1					
ANR	362305	Argument	fixed2float ( vs [ 0 ] . x )		362259	0					
ANR	362306	CallExpression	fixed2float ( vs [ 0 ] . x )		362259	0					
ANR	362307	Callee	fixed2float		362259	0					
ANR	362308	Identifier	fixed2float		362259	0					
ANR	362309	ArgumentList	vs [ 0 ] . x		362259	1					
ANR	362310	Argument	vs [ 0 ] . x		362259	0					
ANR	362311	MemberAccess	vs [ 0 ] . x		362259	0					
ANR	362312	ArrayIndexing	vs [ 0 ]		362259	0					
ANR	362313	Identifier	vs		362259	0					
ANR	362314	PrimaryExpression	0		362259	1					
ANR	362315	Identifier	x		362259	1					
ANR	362316	Argument	fixed2float ( vs [ 0 ] . y )		362259	1					
ANR	362317	CallExpression	fixed2float ( vs [ 0 ] . y )		362259	0					
ANR	362318	Callee	fixed2float		362259	0					
ANR	362319	Identifier	fixed2float		362259	0					
ANR	362320	ArgumentList	vs [ 0 ] . y		362259	1					
ANR	362321	Argument	vs [ 0 ] . y		362259	0					
ANR	362322	MemberAccess	vs [ 0 ] . y		362259	0					
ANR	362323	ArrayIndexing	vs [ 0 ]		362259	0					
ANR	362324	Identifier	vs		362259	0					
ANR	362325	PrimaryExpression	0		362259	1					
ANR	362326	Identifier	y		362259	1					
ANR	362327	Argument	pmat		362259	2					
ANR	362328	Identifier	pmat		362259	0					
ANR	362329	Argument	& vp [ 0 ]		362259	3					
ANR	362330	UnaryOperationExpression	& vp [ 0 ]		362259	0					
ANR	362331	UnaryOperator	&		362259	0					
ANR	362332	ArrayIndexing	vp [ 0 ]		362259	1					
ANR	362333	Identifier	vp		362259	0					
ANR	362334	PrimaryExpression	0		362259	1					
ANR	362335	IfStatement	if ( code < 0 )		362259	2					
ANR	362336	Condition	code < 0	652:16:23181:23188	362259	0	True				
ANR	362337	RelationalExpression	code < 0		362259	0		<			
ANR	362338	Identifier	code		362259	0					
ANR	362339	PrimaryExpression	0		362259	1					
ANR	362340	ReturnStatement	return code ;	653:16:23207:23218	362259	1	True				
ANR	362341	Identifier	code		362259	0					
ANR	362342	IfStatement	if ( state -> first )		362259	3					
ANR	362343	Condition	state -> first	654:16:23236:23247	362259	0	True				
ANR	362344	PtrMemberAccess	state -> first		362259	0					
ANR	362345	Identifier	state		362259	0					
ANR	362346	Identifier	first		362259	1					
ANR	362347	ExpressionStatement	"state -> start = vp [ 0 ] , state -> first = false"	655:16:23266:23308	362259	1	True				
ANR	362348	Expression	"state -> start = vp [ 0 ] , state -> first = false"		362259	0					
ANR	362349	AssignmentExpression	state -> start = vp [ 0 ]		362259	0		=			
ANR	362350	PtrMemberAccess	state -> start		362259	0					
ANR	362351	Identifier	state		362259	0					
ANR	362352	Identifier	start		362259	1					
ANR	362353	ArrayIndexing	vp [ 0 ]		362259	1					
ANR	362354	Identifier	vp		362259	0					
ANR	362355	PrimaryExpression	0		362259	1					
ANR	362356	AssignmentExpression	state -> first = false		362259	1		=			
ANR	362357	PtrMemberAccess	state -> first		362259	0					
ANR	362358	Identifier	state		362259	0					
ANR	362359	Identifier	first		362259	1					
ANR	362360	Identifier	false		362259	1					
ANR	362361	ExpressionStatement	"code = vdev_proc ( vdev , moveto ) ( vdev , 0 , 0 , vp [ 0 ] . x , vp [ 0 ] . y , state -> type )"	656:12:23322:23449	362259	4	True				
ANR	362362	AssignmentExpression	"code = vdev_proc ( vdev , moveto ) ( vdev , 0 , 0 , vp [ 0 ] . x , vp [ 0 ] . y , state -> type )"		362259	0		=			
ANR	362363	Identifier	code		362259	0					
ANR	362364	CallExpression	"vdev_proc ( vdev , moveto ) ( vdev , 0 , 0 , vp [ 0 ] . x , vp [ 0 ] . y , state -> type )"		362259	1					
ANR	362365	Callee	"vdev_proc ( vdev , moveto )"		362259	0					
ANR	362366	CallExpression	"vdev_proc ( vdev , moveto )"		362259	0					
ANR	362367	Callee	vdev_proc		362259	0					
ANR	362368	Identifier	vdev_proc		362259	0					
ANR	362369	ArgumentList	vdev		362259	1					
ANR	362370	Argument	vdev		362259	0					
ANR	362371	Identifier	vdev		362259	0					
ANR	362372	Argument	moveto		362259	1					
ANR	362373	Identifier	moveto		362259	0					
ANR	362374	ArgumentList	vdev		362259	1					
ANR	362375	Argument	vdev		362259	0					
ANR	362376	Identifier	vdev		362259	0					
ANR	362377	Argument	0		362259	1					
ANR	362378	PrimaryExpression	0		362259	0					
ANR	362379	Argument	0		362259	2					
ANR	362380	PrimaryExpression	0		362259	0					
ANR	362381	Argument	vp [ 0 ] . x		362259	3					
ANR	362382	MemberAccess	vp [ 0 ] . x		362259	0					
ANR	362383	ArrayIndexing	vp [ 0 ]		362259	0					
ANR	362384	Identifier	vp		362259	0					
ANR	362385	PrimaryExpression	0		362259	1					
ANR	362386	Identifier	x		362259	1					
ANR	362387	Argument	vp [ 0 ] . y		362259	4					
ANR	362388	MemberAccess	vp [ 0 ] . y		362259	0					
ANR	362389	ArrayIndexing	vp [ 0 ]		362259	0					
ANR	362390	Identifier	vp		362259	0					
ANR	362391	PrimaryExpression	0		362259	1					
ANR	362392	Identifier	y		362259	1					
ANR	362393	Argument	state -> type		362259	5					
ANR	362394	PtrMemberAccess	state -> type		362259	0					
ANR	362395	Identifier	state		362259	0					
ANR	362396	Identifier	type		362259	1					
ANR	362397	ExpressionStatement	state -> prev = vp [ 0 ]	659:12:23463:23482	362259	5	True				
ANR	362398	AssignmentExpression	state -> prev = vp [ 0 ]		362259	0		=			
ANR	362399	PtrMemberAccess	state -> prev		362259	0					
ANR	362400	Identifier	state		362259	0					
ANR	362401	Identifier	prev		362259	1					
ANR	362402	ArrayIndexing	vp [ 0 ]		362259	1					
ANR	362403	Identifier	vp		362259	0					
ANR	362404	PrimaryExpression	0		362259	1					
ANR	362405	BreakStatement	break ;	660:12:23496:23501	362259	6	True				
ANR	362406	Label	case gs_pe_lineto :	661:8:23511:23528	362259	7	True				
ANR	362407	Identifier	gs_pe_lineto		362259	0					
ANR	362408	Label	case gs_pe_gapto :	662:8:23538:23554	362259	8	True				
ANR	362409	Identifier	gs_pe_gapto		362259	0					
ANR	362410	ExpressionStatement	"code = gs_point_transform_inverse ( fixed2float ( vs [ 0 ] . x ) , fixed2float ( vs [ 0 ] . y ) , pmat , & vp [ 0 ] )"	663:12:23580:23710	362259	9	True				
ANR	362411	AssignmentExpression	"code = gs_point_transform_inverse ( fixed2float ( vs [ 0 ] . x ) , fixed2float ( vs [ 0 ] . y ) , pmat , & vp [ 0 ] )"		362259	0		=			
ANR	362412	Identifier	code		362259	0					
ANR	362413	CallExpression	"gs_point_transform_inverse ( fixed2float ( vs [ 0 ] . x ) , fixed2float ( vs [ 0 ] . y ) , pmat , & vp [ 0 ] )"		362259	1					
ANR	362414	Callee	gs_point_transform_inverse		362259	0					
ANR	362415	Identifier	gs_point_transform_inverse		362259	0					
ANR	362416	ArgumentList	fixed2float ( vs [ 0 ] . x )		362259	1					
ANR	362417	Argument	fixed2float ( vs [ 0 ] . x )		362259	0					
ANR	362418	CallExpression	fixed2float ( vs [ 0 ] . x )		362259	0					
ANR	362419	Callee	fixed2float		362259	0					
ANR	362420	Identifier	fixed2float		362259	0					
ANR	362421	ArgumentList	vs [ 0 ] . x		362259	1					
ANR	362422	Argument	vs [ 0 ] . x		362259	0					
ANR	362423	MemberAccess	vs [ 0 ] . x		362259	0					
ANR	362424	ArrayIndexing	vs [ 0 ]		362259	0					
ANR	362425	Identifier	vs		362259	0					
ANR	362426	PrimaryExpression	0		362259	1					
ANR	362427	Identifier	x		362259	1					
ANR	362428	Argument	fixed2float ( vs [ 0 ] . y )		362259	1					
ANR	362429	CallExpression	fixed2float ( vs [ 0 ] . y )		362259	0					
ANR	362430	Callee	fixed2float		362259	0					
ANR	362431	Identifier	fixed2float		362259	0					
ANR	362432	ArgumentList	vs [ 0 ] . y		362259	1					
ANR	362433	Argument	vs [ 0 ] . y		362259	0					
ANR	362434	MemberAccess	vs [ 0 ] . y		362259	0					
ANR	362435	ArrayIndexing	vs [ 0 ]		362259	0					
ANR	362436	Identifier	vs		362259	0					
ANR	362437	PrimaryExpression	0		362259	1					
ANR	362438	Identifier	y		362259	1					
ANR	362439	Argument	pmat		362259	2					
ANR	362440	Identifier	pmat		362259	0					
ANR	362441	Argument	& vp [ 0 ]		362259	3					
ANR	362442	UnaryOperationExpression	& vp [ 0 ]		362259	0					
ANR	362443	UnaryOperator	&		362259	0					
ANR	362444	ArrayIndexing	vp [ 0 ]		362259	1					
ANR	362445	Identifier	vp		362259	0					
ANR	362446	PrimaryExpression	0		362259	1					
ANR	362447	IfStatement	if ( code < 0 )		362259	10					
ANR	362448	Condition	code < 0	665:16:23728:23735	362259	0	True				
ANR	362449	RelationalExpression	code < 0		362259	0		<			
ANR	362450	Identifier	code		362259	0					
ANR	362451	PrimaryExpression	0		362259	1					
ANR	362452	ReturnStatement	return code ;	666:16:23754:23765	362259	1	True				
ANR	362453	Identifier	code		362259	0					
ANR	362454	ExpressionStatement	"code = vdev_proc ( vdev , lineto ) ( vdev , state -> prev . x , state -> prev . y , vp [ 0 ] . x , vp [ 0 ] . y , state -> type )"	667:12:23779:23910	362259	11	True				
ANR	362455	AssignmentExpression	"code = vdev_proc ( vdev , lineto ) ( vdev , state -> prev . x , state -> prev . y , vp [ 0 ] . x , vp [ 0 ] . y , state -> type )"		362259	0		=			
ANR	362456	Identifier	code		362259	0					
ANR	362457	CallExpression	"vdev_proc ( vdev , lineto ) ( vdev , state -> prev . x , state -> prev . y , vp [ 0 ] . x , vp [ 0 ] . y , state -> type )"		362259	1					
ANR	362458	Callee	"vdev_proc ( vdev , lineto )"		362259	0					
ANR	362459	CallExpression	"vdev_proc ( vdev , lineto )"		362259	0					
ANR	362460	Callee	vdev_proc		362259	0					
ANR	362461	Identifier	vdev_proc		362259	0					
ANR	362462	ArgumentList	vdev		362259	1					
ANR	362463	Argument	vdev		362259	0					
ANR	362464	Identifier	vdev		362259	0					
ANR	362465	Argument	lineto		362259	1					
ANR	362466	Identifier	lineto		362259	0					
ANR	362467	ArgumentList	vdev		362259	1					
ANR	362468	Argument	vdev		362259	0					
ANR	362469	Identifier	vdev		362259	0					
ANR	362470	Argument	state -> prev . x		362259	1					
ANR	362471	MemberAccess	state -> prev . x		362259	0					
ANR	362472	PtrMemberAccess	state -> prev		362259	0					
ANR	362473	Identifier	state		362259	0					
ANR	362474	Identifier	prev		362259	1					
ANR	362475	Identifier	x		362259	1					
ANR	362476	Argument	state -> prev . y		362259	2					
ANR	362477	MemberAccess	state -> prev . y		362259	0					
ANR	362478	PtrMemberAccess	state -> prev		362259	0					
ANR	362479	Identifier	state		362259	0					
ANR	362480	Identifier	prev		362259	1					
ANR	362481	Identifier	y		362259	1					
ANR	362482	Argument	vp [ 0 ] . x		362259	3					
ANR	362483	MemberAccess	vp [ 0 ] . x		362259	0					
ANR	362484	ArrayIndexing	vp [ 0 ]		362259	0					
ANR	362485	Identifier	vp		362259	0					
ANR	362486	PrimaryExpression	0		362259	1					
ANR	362487	Identifier	x		362259	1					
ANR	362488	Argument	vp [ 0 ] . y		362259	4					
ANR	362489	MemberAccess	vp [ 0 ] . y		362259	0					
ANR	362490	ArrayIndexing	vp [ 0 ]		362259	0					
ANR	362491	Identifier	vp		362259	0					
ANR	362492	PrimaryExpression	0		362259	1					
ANR	362493	Identifier	y		362259	1					
ANR	362494	Argument	state -> type		362259	5					
ANR	362495	PtrMemberAccess	state -> type		362259	0					
ANR	362496	Identifier	state		362259	0					
ANR	362497	Identifier	type		362259	1					
ANR	362498	ExpressionStatement	state -> prev = vp [ 0 ]	670:12:23924:23943	362259	12	True				
ANR	362499	AssignmentExpression	state -> prev = vp [ 0 ]		362259	0		=			
ANR	362500	PtrMemberAccess	state -> prev		362259	0					
ANR	362501	Identifier	state		362259	0					
ANR	362502	Identifier	prev		362259	1					
ANR	362503	ArrayIndexing	vp [ 0 ]		362259	1					
ANR	362504	Identifier	vp		362259	0					
ANR	362505	PrimaryExpression	0		362259	1					
ANR	362506	BreakStatement	break ;	671:12:23957:23962	362259	13	True				
ANR	362507	Label	case gs_pe_curveto :	672:8:23972:23990	362259	14	True				
ANR	362508	Identifier	gs_pe_curveto		362259	0					
ANR	362509	ExpressionStatement	"code = gs_point_transform_inverse ( fixed2float ( vs [ 0 ] . x ) , fixed2float ( vs [ 0 ] . y ) , pmat , & vp [ 0 ] )"	673:12:24004:24134	362259	15	True				
ANR	362510	AssignmentExpression	"code = gs_point_transform_inverse ( fixed2float ( vs [ 0 ] . x ) , fixed2float ( vs [ 0 ] . y ) , pmat , & vp [ 0 ] )"		362259	0		=			
ANR	362511	Identifier	code		362259	0					
ANR	362512	CallExpression	"gs_point_transform_inverse ( fixed2float ( vs [ 0 ] . x ) , fixed2float ( vs [ 0 ] . y ) , pmat , & vp [ 0 ] )"		362259	1					
ANR	362513	Callee	gs_point_transform_inverse		362259	0					
ANR	362514	Identifier	gs_point_transform_inverse		362259	0					
ANR	362515	ArgumentList	fixed2float ( vs [ 0 ] . x )		362259	1					
ANR	362516	Argument	fixed2float ( vs [ 0 ] . x )		362259	0					
ANR	362517	CallExpression	fixed2float ( vs [ 0 ] . x )		362259	0					
ANR	362518	Callee	fixed2float		362259	0					
ANR	362519	Identifier	fixed2float		362259	0					
ANR	362520	ArgumentList	vs [ 0 ] . x		362259	1					
ANR	362521	Argument	vs [ 0 ] . x		362259	0					
ANR	362522	MemberAccess	vs [ 0 ] . x		362259	0					
ANR	362523	ArrayIndexing	vs [ 0 ]		362259	0					
ANR	362524	Identifier	vs		362259	0					
ANR	362525	PrimaryExpression	0		362259	1					
ANR	362526	Identifier	x		362259	1					
ANR	362527	Argument	fixed2float ( vs [ 0 ] . y )		362259	1					
ANR	362528	CallExpression	fixed2float ( vs [ 0 ] . y )		362259	0					
ANR	362529	Callee	fixed2float		362259	0					
ANR	362530	Identifier	fixed2float		362259	0					
ANR	362531	ArgumentList	vs [ 0 ] . y		362259	1					
ANR	362532	Argument	vs [ 0 ] . y		362259	0					
ANR	362533	MemberAccess	vs [ 0 ] . y		362259	0					
ANR	362534	ArrayIndexing	vs [ 0 ]		362259	0					
ANR	362535	Identifier	vs		362259	0					
ANR	362536	PrimaryExpression	0		362259	1					
ANR	362537	Identifier	y		362259	1					
ANR	362538	Argument	pmat		362259	2					
ANR	362539	Identifier	pmat		362259	0					
ANR	362540	Argument	& vp [ 0 ]		362259	3					
ANR	362541	UnaryOperationExpression	& vp [ 0 ]		362259	0					
ANR	362542	UnaryOperator	&		362259	0					
ANR	362543	ArrayIndexing	vp [ 0 ]		362259	1					
ANR	362544	Identifier	vp		362259	0					
ANR	362545	PrimaryExpression	0		362259	1					
ANR	362546	IfStatement	if ( code < 0 )		362259	16					
ANR	362547	Condition	code < 0	675:16:24152:24159	362259	0	True				
ANR	362548	RelationalExpression	code < 0		362259	0		<			
ANR	362549	Identifier	code		362259	0					
ANR	362550	PrimaryExpression	0		362259	1					
ANR	362551	ReturnStatement	return code ;	676:16:24178:24189	362259	1	True				
ANR	362552	Identifier	code		362259	0					
ANR	362553	ExpressionStatement	"code = gs_point_transform_inverse ( fixed2float ( vs [ 1 ] . x ) , fixed2float ( vs [ 1 ] . y ) , pmat , & vp [ 1 ] )"	677:12:24203:24333	362259	17	True				
ANR	362554	AssignmentExpression	"code = gs_point_transform_inverse ( fixed2float ( vs [ 1 ] . x ) , fixed2float ( vs [ 1 ] . y ) , pmat , & vp [ 1 ] )"		362259	0		=			
ANR	362555	Identifier	code		362259	0					
ANR	362556	CallExpression	"gs_point_transform_inverse ( fixed2float ( vs [ 1 ] . x ) , fixed2float ( vs [ 1 ] . y ) , pmat , & vp [ 1 ] )"		362259	1					
ANR	362557	Callee	gs_point_transform_inverse		362259	0					
ANR	362558	Identifier	gs_point_transform_inverse		362259	0					
ANR	362559	ArgumentList	fixed2float ( vs [ 1 ] . x )		362259	1					
ANR	362560	Argument	fixed2float ( vs [ 1 ] . x )		362259	0					
ANR	362561	CallExpression	fixed2float ( vs [ 1 ] . x )		362259	0					
ANR	362562	Callee	fixed2float		362259	0					
ANR	362563	Identifier	fixed2float		362259	0					
ANR	362564	ArgumentList	vs [ 1 ] . x		362259	1					
ANR	362565	Argument	vs [ 1 ] . x		362259	0					
ANR	362566	MemberAccess	vs [ 1 ] . x		362259	0					
ANR	362567	ArrayIndexing	vs [ 1 ]		362259	0					
ANR	362568	Identifier	vs		362259	0					
ANR	362569	PrimaryExpression	1		362259	1					
ANR	362570	Identifier	x		362259	1					
ANR	362571	Argument	fixed2float ( vs [ 1 ] . y )		362259	1					
ANR	362572	CallExpression	fixed2float ( vs [ 1 ] . y )		362259	0					
ANR	362573	Callee	fixed2float		362259	0					
ANR	362574	Identifier	fixed2float		362259	0					
ANR	362575	ArgumentList	vs [ 1 ] . y		362259	1					
ANR	362576	Argument	vs [ 1 ] . y		362259	0					
ANR	362577	MemberAccess	vs [ 1 ] . y		362259	0					
ANR	362578	ArrayIndexing	vs [ 1 ]		362259	0					
ANR	362579	Identifier	vs		362259	0					
ANR	362580	PrimaryExpression	1		362259	1					
ANR	362581	Identifier	y		362259	1					
ANR	362582	Argument	pmat		362259	2					
ANR	362583	Identifier	pmat		362259	0					
ANR	362584	Argument	& vp [ 1 ]		362259	3					
ANR	362585	UnaryOperationExpression	& vp [ 1 ]		362259	0					
ANR	362586	UnaryOperator	&		362259	0					
ANR	362587	ArrayIndexing	vp [ 1 ]		362259	1					
ANR	362588	Identifier	vp		362259	0					
ANR	362589	PrimaryExpression	1		362259	1					
ANR	362590	IfStatement	if ( code < 0 )		362259	18					
ANR	362591	Condition	code < 0	679:16:24351:24358	362259	0	True				
ANR	362592	RelationalExpression	code < 0		362259	0		<			
ANR	362593	Identifier	code		362259	0					
ANR	362594	PrimaryExpression	0		362259	1					
ANR	362595	ReturnStatement	return code ;	680:16:24377:24388	362259	1	True				
ANR	362596	Identifier	code		362259	0					
ANR	362597	ExpressionStatement	"gs_point_transform_inverse ( fixed2float ( vs [ 2 ] . x ) , fixed2float ( vs [ 2 ] . y ) , pmat , & vp [ 2 ] )"	681:12:24402:24525	362259	19	True				
ANR	362598	CallExpression	"gs_point_transform_inverse ( fixed2float ( vs [ 2 ] . x ) , fixed2float ( vs [ 2 ] . y ) , pmat , & vp [ 2 ] )"		362259	0					
ANR	362599	Callee	gs_point_transform_inverse		362259	0					
ANR	362600	Identifier	gs_point_transform_inverse		362259	0					
ANR	362601	ArgumentList	fixed2float ( vs [ 2 ] . x )		362259	1					
ANR	362602	Argument	fixed2float ( vs [ 2 ] . x )		362259	0					
ANR	362603	CallExpression	fixed2float ( vs [ 2 ] . x )		362259	0					
ANR	362604	Callee	fixed2float		362259	0					
ANR	362605	Identifier	fixed2float		362259	0					
ANR	362606	ArgumentList	vs [ 2 ] . x		362259	1					
ANR	362607	Argument	vs [ 2 ] . x		362259	0					
ANR	362608	MemberAccess	vs [ 2 ] . x		362259	0					
ANR	362609	ArrayIndexing	vs [ 2 ]		362259	0					
ANR	362610	Identifier	vs		362259	0					
ANR	362611	PrimaryExpression	2		362259	1					
ANR	362612	Identifier	x		362259	1					
ANR	362613	Argument	fixed2float ( vs [ 2 ] . y )		362259	1					
ANR	362614	CallExpression	fixed2float ( vs [ 2 ] . y )		362259	0					
ANR	362615	Callee	fixed2float		362259	0					
ANR	362616	Identifier	fixed2float		362259	0					
ANR	362617	ArgumentList	vs [ 2 ] . y		362259	1					
ANR	362618	Argument	vs [ 2 ] . y		362259	0					
ANR	362619	MemberAccess	vs [ 2 ] . y		362259	0					
ANR	362620	ArrayIndexing	vs [ 2 ]		362259	0					
ANR	362621	Identifier	vs		362259	0					
ANR	362622	PrimaryExpression	2		362259	1					
ANR	362623	Identifier	y		362259	1					
ANR	362624	Argument	pmat		362259	2					
ANR	362625	Identifier	pmat		362259	0					
ANR	362626	Argument	& vp [ 2 ]		362259	3					
ANR	362627	UnaryOperationExpression	& vp [ 2 ]		362259	0					
ANR	362628	UnaryOperator	&		362259	0					
ANR	362629	ArrayIndexing	vp [ 2 ]		362259	1					
ANR	362630	Identifier	vp		362259	0					
ANR	362631	PrimaryExpression	2		362259	1					
ANR	362632	ExpressionStatement	"code = vdev_proc ( vdev , curveto ) ( vdev , state -> prev . x , state -> prev . y , vp [ 0 ] . x , vp [ 0 ] . y , vp [ 1 ] . x , vp [ 1 ] . y , vp [ 2 ] . x , vp [ 2 ] . y , state -> type )"	683:12:24539:24707	362259	20	True				
ANR	362633	AssignmentExpression	"code = vdev_proc ( vdev , curveto ) ( vdev , state -> prev . x , state -> prev . y , vp [ 0 ] . x , vp [ 0 ] . y , vp [ 1 ] . x , vp [ 1 ] . y , vp [ 2 ] . x , vp [ 2 ] . y , state -> type )"		362259	0		=			
ANR	362634	Identifier	code		362259	0					
ANR	362635	CallExpression	"vdev_proc ( vdev , curveto ) ( vdev , state -> prev . x , state -> prev . y , vp [ 0 ] . x , vp [ 0 ] . y , vp [ 1 ] . x , vp [ 1 ] . y , vp [ 2 ] . x , vp [ 2 ] . y , state -> type )"		362259	1					
ANR	362636	Callee	"vdev_proc ( vdev , curveto )"		362259	0					
ANR	362637	CallExpression	"vdev_proc ( vdev , curveto )"		362259	0					
ANR	362638	Callee	vdev_proc		362259	0					
ANR	362639	Identifier	vdev_proc		362259	0					
ANR	362640	ArgumentList	vdev		362259	1					
ANR	362641	Argument	vdev		362259	0					
ANR	362642	Identifier	vdev		362259	0					
ANR	362643	Argument	curveto		362259	1					
ANR	362644	Identifier	curveto		362259	0					
ANR	362645	ArgumentList	vdev		362259	1					
ANR	362646	Argument	vdev		362259	0					
ANR	362647	Identifier	vdev		362259	0					
ANR	362648	Argument	state -> prev . x		362259	1					
ANR	362649	MemberAccess	state -> prev . x		362259	0					
ANR	362650	PtrMemberAccess	state -> prev		362259	0					
ANR	362651	Identifier	state		362259	0					
ANR	362652	Identifier	prev		362259	1					
ANR	362653	Identifier	x		362259	1					
ANR	362654	Argument	state -> prev . y		362259	2					
ANR	362655	MemberAccess	state -> prev . y		362259	0					
ANR	362656	PtrMemberAccess	state -> prev		362259	0					
ANR	362657	Identifier	state		362259	0					
ANR	362658	Identifier	prev		362259	1					
ANR	362659	Identifier	y		362259	1					
ANR	362660	Argument	vp [ 0 ] . x		362259	3					
ANR	362661	MemberAccess	vp [ 0 ] . x		362259	0					
ANR	362662	ArrayIndexing	vp [ 0 ]		362259	0					
ANR	362663	Identifier	vp		362259	0					
ANR	362664	PrimaryExpression	0		362259	1					
ANR	362665	Identifier	x		362259	1					
ANR	362666	Argument	vp [ 0 ] . y		362259	4					
ANR	362667	MemberAccess	vp [ 0 ] . y		362259	0					
ANR	362668	ArrayIndexing	vp [ 0 ]		362259	0					
ANR	362669	Identifier	vp		362259	0					
ANR	362670	PrimaryExpression	0		362259	1					
ANR	362671	Identifier	y		362259	1					
ANR	362672	Argument	vp [ 1 ] . x		362259	5					
ANR	362673	MemberAccess	vp [ 1 ] . x		362259	0					
ANR	362674	ArrayIndexing	vp [ 1 ]		362259	0					
ANR	362675	Identifier	vp		362259	0					
ANR	362676	PrimaryExpression	1		362259	1					
ANR	362677	Identifier	x		362259	1					
ANR	362678	Argument	vp [ 1 ] . y		362259	6					
ANR	362679	MemberAccess	vp [ 1 ] . y		362259	0					
ANR	362680	ArrayIndexing	vp [ 1 ]		362259	0					
ANR	362681	Identifier	vp		362259	0					
ANR	362682	PrimaryExpression	1		362259	1					
ANR	362683	Identifier	y		362259	1					
ANR	362684	Argument	vp [ 2 ] . x		362259	7					
ANR	362685	MemberAccess	vp [ 2 ] . x		362259	0					
ANR	362686	ArrayIndexing	vp [ 2 ]		362259	0					
ANR	362687	Identifier	vp		362259	0					
ANR	362688	PrimaryExpression	2		362259	1					
ANR	362689	Identifier	x		362259	1					
ANR	362690	Argument	vp [ 2 ] . y		362259	8					
ANR	362691	MemberAccess	vp [ 2 ] . y		362259	0					
ANR	362692	ArrayIndexing	vp [ 2 ]		362259	0					
ANR	362693	Identifier	vp		362259	0					
ANR	362694	PrimaryExpression	2		362259	1					
ANR	362695	Identifier	y		362259	1					
ANR	362696	Argument	state -> type		362259	9					
ANR	362697	PtrMemberAccess	state -> type		362259	0					
ANR	362698	Identifier	state		362259	0					
ANR	362699	Identifier	type		362259	1					
ANR	362700	ExpressionStatement	state -> prev = vp [ 2 ]	686:12:24721:24740	362259	21	True				
ANR	362701	AssignmentExpression	state -> prev = vp [ 2 ]		362259	0		=			
ANR	362702	PtrMemberAccess	state -> prev		362259	0					
ANR	362703	Identifier	state		362259	0					
ANR	362704	Identifier	prev		362259	1					
ANR	362705	ArrayIndexing	vp [ 2 ]		362259	1					
ANR	362706	Identifier	vp		362259	0					
ANR	362707	PrimaryExpression	2		362259	1					
ANR	362708	BreakStatement	break ;	687:12:24754:24759	362259	22	True				
ANR	362709	Label	case gs_pe_closepath :	688:8:24769:24789	362259	23	True				
ANR	362710	Identifier	gs_pe_closepath		362259	0					
ANR	362711	ExpressionStatement	"code = vdev_proc ( vdev , closepath ) ( vdev , state -> prev . x , state -> prev . y , state -> start . x , state -> start . y , state -> type )"	689:12:24803:24951	362259	24	True				
ANR	362712	AssignmentExpression	"code = vdev_proc ( vdev , closepath ) ( vdev , state -> prev . x , state -> prev . y , state -> start . x , state -> start . y , state -> type )"		362259	0		=			
ANR	362713	Identifier	code		362259	0					
ANR	362714	CallExpression	"vdev_proc ( vdev , closepath ) ( vdev , state -> prev . x , state -> prev . y , state -> start . x , state -> start . y , state -> type )"		362259	1					
ANR	362715	Callee	"vdev_proc ( vdev , closepath )"		362259	0					
ANR	362716	CallExpression	"vdev_proc ( vdev , closepath )"		362259	0					
ANR	362717	Callee	vdev_proc		362259	0					
ANR	362718	Identifier	vdev_proc		362259	0					
ANR	362719	ArgumentList	vdev		362259	1					
ANR	362720	Argument	vdev		362259	0					
ANR	362721	Identifier	vdev		362259	0					
ANR	362722	Argument	closepath		362259	1					
ANR	362723	Identifier	closepath		362259	0					
ANR	362724	ArgumentList	vdev		362259	1					
ANR	362725	Argument	vdev		362259	0					
ANR	362726	Identifier	vdev		362259	0					
ANR	362727	Argument	state -> prev . x		362259	1					
ANR	362728	MemberAccess	state -> prev . x		362259	0					
ANR	362729	PtrMemberAccess	state -> prev		362259	0					
ANR	362730	Identifier	state		362259	0					
ANR	362731	Identifier	prev		362259	1					
ANR	362732	Identifier	x		362259	1					
ANR	362733	Argument	state -> prev . y		362259	2					
ANR	362734	MemberAccess	state -> prev . y		362259	0					
ANR	362735	PtrMemberAccess	state -> prev		362259	0					
ANR	362736	Identifier	state		362259	0					
ANR	362737	Identifier	prev		362259	1					
ANR	362738	Identifier	y		362259	1					
ANR	362739	Argument	state -> start . x		362259	3					
ANR	362740	MemberAccess	state -> start . x		362259	0					
ANR	362741	PtrMemberAccess	state -> start		362259	0					
ANR	362742	Identifier	state		362259	0					
ANR	362743	Identifier	start		362259	1					
ANR	362744	Identifier	x		362259	1					
ANR	362745	Argument	state -> start . y		362259	4					
ANR	362746	MemberAccess	state -> start . y		362259	0					
ANR	362747	PtrMemberAccess	state -> start		362259	0					
ANR	362748	Identifier	state		362259	0					
ANR	362749	Identifier	start		362259	1					
ANR	362750	Identifier	y		362259	1					
ANR	362751	Argument	state -> type		362259	5					
ANR	362752	PtrMemberAccess	state -> type		362259	0					
ANR	362753	Identifier	state		362259	0					
ANR	362754	Identifier	type		362259	1					
ANR	362755	ExpressionStatement	state -> prev = state -> start	692:12:24965:24991	362259	25	True				
ANR	362756	AssignmentExpression	state -> prev = state -> start		362259	0		=			
ANR	362757	PtrMemberAccess	state -> prev		362259	0					
ANR	362758	Identifier	state		362259	0					
ANR	362759	Identifier	prev		362259	1					
ANR	362760	PtrMemberAccess	state -> start		362259	1					
ANR	362761	Identifier	state		362259	0					
ANR	362762	Identifier	start		362259	1					
ANR	362763	BreakStatement	break ;	693:12:25005:25010	362259	26	True				
ANR	362764	Label	default :	694:8:25020:25027	362259	27	True				
ANR	362765	Identifier	default		362259	0					
ANR	362766	ReturnStatement	return - 1 ;	695:12:25061:25070	362259	28	True				
ANR	362767	UnaryOperationExpression	- 1		362259	0					
ANR	362768	UnaryOperator	-		362259	0					
ANR	362769	PrimaryExpression	1		362259	1					
ANR	362770	ReturnStatement	return code ;	697:4:25082:25093	362259	9	True				
ANR	362771	Identifier	code		362259	0					
ANR	362772	ReturnType	int		362259	1					
ANR	362773	Identifier	gdev_vector_dopath_segment		362259	2					
ANR	362774	ParameterList	"gdev_vector_dopath_state_t * state , int pe_op , gs_fixed_point vs [ 3 ]"		362259	3					
ANR	362775	Parameter	gdev_vector_dopath_state_t * state	640:27:22746:22778	362259	0	True				
ANR	362776	ParameterType	gdev_vector_dopath_state_t *		362259	0					
ANR	362777	Identifier	state		362259	1					
ANR	362778	Parameter	int pe_op	640:62:22781:22789	362259	1	True				
ANR	362779	ParameterType	int		362259	0					
ANR	362780	Identifier	pe_op		362259	1					
ANR	362781	Parameter	gs_fixed_point vs [ 3 ]	641:27:22819:22838	362259	2	True				
ANR	362782	ParameterType	gs_fixed_point [ 3 ]		362259	0					
ANR	362783	Identifier	vs		362259	1					
ANR	362784	CFGEntryNode	ENTRY		362259		True				
ANR	362785	CFGExitNode	EXIT		362259		True				
ANR	362786	Symbol	code		362259						
ANR	362787	Symbol	pmat		362259						
ANR	362788	Symbol	curveto		362259						
ANR	362789	Symbol	state -> first		362259						
ANR	362790	Symbol	vs [ 0 ] . x		362259						
ANR	362791	Symbol	state -> start . x		362259						
ANR	362792	Symbol	vs [ 0 ] . y		362259						
ANR	362793	Symbol	state -> start . y		362259						
ANR	362794	Symbol	state -> start		362259						
ANR	362795	Symbol	vdev_proc		362259						
ANR	362796	Symbol	state -> type		362259						
ANR	362797	Symbol	closepath		362259						
ANR	362798	Symbol	state -> prev		362259						
ANR	362799	Symbol	vp [ 1 ] . x		362259						
ANR	362800	Symbol	state		362259						
ANR	362801	Symbol	vp [ 1 ] . y		362259						
ANR	362802	Symbol	moveto		362259						
ANR	362803	Symbol	* vs		362259						
ANR	362804	Symbol	& state -> scale_mat		362259						
ANR	362805	Symbol	vp [ 0 ] . y		362259						
ANR	362806	Symbol	* vp		362259						
ANR	362807	Symbol	vp [ 0 ] . x		362259						
ANR	362808	Symbol	fixed2float		362259						
ANR	362809	Symbol	vdev		362259						
ANR	362810	Symbol	false		362259						
ANR	362811	Symbol	vs [ 2 ] . y		362259						
ANR	362812	Symbol	lineto		362259						
ANR	362813	Symbol	vs [ 2 ] . x		362259						
ANR	362814	Symbol	* state		362259						
ANR	362815	Symbol	state -> vdev		362259						
ANR	362816	Symbol	pe_op		362259						
ANR	362817	Symbol	vs [ 1 ] . y		362259						
ANR	362818	Symbol	vp [ 2 ] . x		362259						
ANR	362819	Symbol	vs [ 1 ] . x		362259						
ANR	362820	Symbol	vp [ 2 ] . y		362259						
ANR	362821	Symbol	state -> prev . x		362259						
ANR	362822	Symbol	state -> prev . y		362259						
ANR	362823	Symbol	vp		362259						
ANR	362824	Symbol	gs_point_transform_inverse		362259						
ANR	362825	Symbol	vs		362259						
ANR	362826	Function	gdev_vector_write_polygon	702:0:25201:26444							
ANR	362827	FunctionDef	"gdev_vector_write_polygon (gx_device_vector * vdev , const gs_fixed_point * points , uint count , bool close , gx_path_type_t type)"		362826	0					
ANR	362828	CompoundStatement		705:0:25358:26444	362826	0					
ANR	362829	IdentifierDeclStatement	int code = 0 ;	706:4:25364:25376	362826	0	True				
ANR	362830	IdentifierDecl	code = 0		362826	0					
ANR	362831	IdentifierDeclType	int		362826	0					
ANR	362832	Identifier	code		362826	1					
ANR	362833	AssignmentExpression	code = 0		362826	2		=			
ANR	362834	Identifier	code		362826	0					
ANR	362835	PrimaryExpression	0		362826	1					
ANR	362836	IfStatement	"if ( type != gx_path_type_none && ( code = ( * vdev_proc ( vdev , beginpath ) ) ( vdev , type ) ) < 0 )"		362826	1					
ANR	362837	Condition	"type != gx_path_type_none && ( code = ( * vdev_proc ( vdev , beginpath ) ) ( vdev , type ) ) < 0"	708:8:25387:25478	362826	0	True				
ANR	362838	AndExpression	"type != gx_path_type_none && ( code = ( * vdev_proc ( vdev , beginpath ) ) ( vdev , type ) ) < 0"		362826	0		&&			
ANR	362839	EqualityExpression	type != gx_path_type_none		362826	0		!=			
ANR	362840	Identifier	type		362826	0					
ANR	362841	Identifier	gx_path_type_none		362826	1					
ANR	362842	RelationalExpression	"( code = ( * vdev_proc ( vdev , beginpath ) ) ( vdev , type ) ) < 0"		362826	1		<			
ANR	362843	AssignmentExpression	"code = ( * vdev_proc ( vdev , beginpath ) ) ( vdev , type )"		362826	0		=			
ANR	362844	Identifier	code		362826	0					
ANR	362845	CallExpression	"( * vdev_proc ( vdev , beginpath ) ) ( vdev , type )"		362826	1					
ANR	362846	Callee	"* vdev_proc ( vdev , beginpath )"		362826	0					
ANR	362847	UnaryOperationExpression	"* vdev_proc ( vdev , beginpath )"		362826	0					
ANR	362848	UnaryOperator	*		362826	0					
ANR	362849	CallExpression	"vdev_proc ( vdev , beginpath )"		362826	1					
ANR	362850	Callee	vdev_proc		362826	0					
ANR	362851	Identifier	vdev_proc		362826	0					
ANR	362852	ArgumentList	vdev		362826	1					
ANR	362853	Argument	vdev		362826	0					
ANR	362854	Identifier	vdev		362826	0					
ANR	362855	Argument	beginpath		362826	1					
ANR	362856	Identifier	beginpath		362826	0					
ANR	362857	ArgumentList	vdev		362826	1					
ANR	362858	Argument	vdev		362826	0					
ANR	362859	Identifier	vdev		362826	0					
ANR	362860	Argument	type		362826	1					
ANR	362861	Identifier	type		362826	0					
ANR	362862	PrimaryExpression	0		362826	1					
ANR	362863	ReturnStatement	return code ;	711:8:25498:25509	362826	1	True				
ANR	362864	Identifier	code		362826	0					
ANR	362865	IfStatement	if ( count > 0 )		362826	2					
ANR	362866	Condition	count > 0	712:8:25519:25527	362826	0	True				
ANR	362867	RelationalExpression	count > 0		362826	0		>			
ANR	362868	Identifier	count		362826	0					
ANR	362869	PrimaryExpression	0		362826	1					
ANR	362870	CompoundStatement		11:8:345:351	362826	1					
ANR	362871	IdentifierDeclStatement	"double x = fixed2float ( points [ 0 ] . x ) / vdev -> scale . x , y = fixed2float ( points [ 0 ] . y ) / vdev -> scale . y ;"	713:8:25540:25637	362826	0	True				
ANR	362872	IdentifierDecl	x = fixed2float ( points [ 0 ] . x ) / vdev -> scale . x		362826	0					
ANR	362873	IdentifierDeclType	double		362826	0					
ANR	362874	Identifier	x		362826	1					
ANR	362875	AssignmentExpression	x = fixed2float ( points [ 0 ] . x ) / vdev -> scale . x		362826	2		=			
ANR	362876	Identifier	x		362826	0					
ANR	362877	MultiplicativeExpression	fixed2float ( points [ 0 ] . x ) / vdev -> scale . x		362826	1		/			
ANR	362878	CallExpression	fixed2float ( points [ 0 ] . x )		362826	0					
ANR	362879	Callee	fixed2float		362826	0					
ANR	362880	Identifier	fixed2float		362826	0					
ANR	362881	ArgumentList	points [ 0 ] . x		362826	1					
ANR	362882	Argument	points [ 0 ] . x		362826	0					
ANR	362883	MemberAccess	points [ 0 ] . x		362826	0					
ANR	362884	ArrayIndexing	points [ 0 ]		362826	0					
ANR	362885	Identifier	points		362826	0					
ANR	362886	PrimaryExpression	0		362826	1					
ANR	362887	Identifier	x		362826	1					
ANR	362888	MemberAccess	vdev -> scale . x		362826	1					
ANR	362889	PtrMemberAccess	vdev -> scale		362826	0					
ANR	362890	Identifier	vdev		362826	0					
ANR	362891	Identifier	scale		362826	1					
ANR	362892	Identifier	x		362826	1					
ANR	362893	IdentifierDecl	y = fixed2float ( points [ 0 ] . y ) / vdev -> scale . y		362826	1					
ANR	362894	IdentifierDeclType	double		362826	0					
ANR	362895	Identifier	y		362826	1					
ANR	362896	AssignmentExpression	y = fixed2float ( points [ 0 ] . y ) / vdev -> scale . y		362826	2		=			
ANR	362897	Identifier	y		362826	0					
ANR	362898	MultiplicativeExpression	fixed2float ( points [ 0 ] . y ) / vdev -> scale . y		362826	1		/			
ANR	362899	CallExpression	fixed2float ( points [ 0 ] . y )		362826	0					
ANR	362900	Callee	fixed2float		362826	0					
ANR	362901	Identifier	fixed2float		362826	0					
ANR	362902	ArgumentList	points [ 0 ] . y		362826	1					
ANR	362903	Argument	points [ 0 ] . y		362826	0					
ANR	362904	MemberAccess	points [ 0 ] . y		362826	0					
ANR	362905	ArrayIndexing	points [ 0 ]		362826	0					
ANR	362906	Identifier	points		362826	0					
ANR	362907	PrimaryExpression	0		362826	1					
ANR	362908	Identifier	y		362826	1					
ANR	362909	MemberAccess	vdev -> scale . y		362826	1					
ANR	362910	PtrMemberAccess	vdev -> scale		362826	0					
ANR	362911	Identifier	vdev		362826	0					
ANR	362912	Identifier	scale		362826	1					
ANR	362913	Identifier	y		362826	1					
ANR	362914	IdentifierDeclStatement	"double x_start = x , y_start = y , x_prev , y_prev ;"	714:8:25647:25694	362826	1	True				
ANR	362915	IdentifierDecl	x_start = x		362826	0					
ANR	362916	IdentifierDeclType	double		362826	0					
ANR	362917	Identifier	x_start		362826	1					
ANR	362918	AssignmentExpression	x_start = x		362826	2		=			
ANR	362919	Identifier	x		362826	0					
ANR	362920	Identifier	x		362826	1					
ANR	362921	IdentifierDecl	y_start = y		362826	1					
ANR	362922	IdentifierDeclType	double		362826	0					
ANR	362923	Identifier	y_start		362826	1					
ANR	362924	AssignmentExpression	y_start = y		362826	2		=			
ANR	362925	Identifier	y		362826	0					
ANR	362926	Identifier	y		362826	1					
ANR	362927	IdentifierDecl	x_prev		362826	2					
ANR	362928	IdentifierDeclType	double		362826	0					
ANR	362929	Identifier	x_prev		362826	1					
ANR	362930	IdentifierDecl	y_prev		362826	3					
ANR	362931	IdentifierDeclType	double		362826	0					
ANR	362932	Identifier	y_prev		362826	1					
ANR	362933	IdentifierDeclStatement	uint i ;	715:8:25704:25710	362826	2	True				
ANR	362934	IdentifierDecl	i		362826	0					
ANR	362935	IdentifierDeclType	uint		362826	0					
ANR	362936	Identifier	i		362826	1					
ANR	362937	ExpressionStatement	"code = ( * vdev_proc ( vdev , moveto ) ) ( vdev , 0.0 , 0.0 , x , y , type )"	717:8:25721:25795	362826	3	True				
ANR	362938	AssignmentExpression	"code = ( * vdev_proc ( vdev , moveto ) ) ( vdev , 0.0 , 0.0 , x , y , type )"		362826	0		=			
ANR	362939	Identifier	code		362826	0					
ANR	362940	CallExpression	"( * vdev_proc ( vdev , moveto ) ) ( vdev , 0.0 , 0.0 , x , y , type )"		362826	1					
ANR	362941	Callee	"* vdev_proc ( vdev , moveto )"		362826	0					
ANR	362942	UnaryOperationExpression	"* vdev_proc ( vdev , moveto )"		362826	0					
ANR	362943	UnaryOperator	*		362826	0					
ANR	362944	CallExpression	"vdev_proc ( vdev , moveto )"		362826	1					
ANR	362945	Callee	vdev_proc		362826	0					
ANR	362946	Identifier	vdev_proc		362826	0					
ANR	362947	ArgumentList	vdev		362826	1					
ANR	362948	Argument	vdev		362826	0					
ANR	362949	Identifier	vdev		362826	0					
ANR	362950	Argument	moveto		362826	1					
ANR	362951	Identifier	moveto		362826	0					
ANR	362952	ArgumentList	vdev		362826	1					
ANR	362953	Argument	vdev		362826	0					
ANR	362954	Identifier	vdev		362826	0					
ANR	362955	Argument	0.0		362826	1					
ANR	362956	PrimaryExpression	0.0		362826	0					
ANR	362957	Argument	0.0		362826	2					
ANR	362958	PrimaryExpression	0.0		362826	0					
ANR	362959	Argument	x		362826	3					
ANR	362960	Identifier	x		362826	0					
ANR	362961	Argument	y		362826	4					
ANR	362962	Identifier	y		362826	0					
ANR	362963	Argument	type		362826	5					
ANR	362964	Identifier	type		362826	0					
ANR	362965	IfStatement	if ( code >= 0 )		362826	4					
ANR	362966	Condition	code >= 0	719:12:25809:25817	362826	0	True				
ANR	362967	RelationalExpression	code >= 0		362826	0		>=			
ANR	362968	Identifier	code		362826	0					
ANR	362969	PrimaryExpression	0		362826	1					
ANR	362970	ForStatement	for ( i = 1 ; i < count && code >= 0 ; ++ i )		362826	1					
ANR	362971	ForInit	i = 1 ;	720:17:25837:25842	362826	0	True				
ANR	362972	AssignmentExpression	i = 1		362826	0		=			
ANR	362973	Identifier	i		362826	0					
ANR	362974	PrimaryExpression	1		362826	1					
ANR	362975	Condition	i < count && code >= 0	720:24:25844:25865	362826	1	True				
ANR	362976	AndExpression	i < count && code >= 0		362826	0		&&			
ANR	362977	RelationalExpression	i < count		362826	0		<			
ANR	362978	Identifier	i		362826	0					
ANR	362979	Identifier	count		362826	1					
ANR	362980	RelationalExpression	code >= 0		362826	1		>=			
ANR	362981	Identifier	code		362826	0					
ANR	362982	PrimaryExpression	0		362826	1					
ANR	362983	UnaryExpression	++ i	720:48:25868:25870	362826	2	True				
ANR	362984	IncDec	++		362826	0					
ANR	362985	Identifier	i		362826	1					
ANR	362986	CompoundStatement		16:53:514:514	362826	3					
ANR	362987	ExpressionStatement	"x_prev = x , y_prev = y"	721:16:25891:25913	362826	0	True				
ANR	362988	Expression	"x_prev = x , y_prev = y"		362826	0					
ANR	362989	AssignmentExpression	x_prev = x		362826	0		=			
ANR	362990	Identifier	x_prev		362826	0					
ANR	362991	Identifier	x		362826	1					
ANR	362992	AssignmentExpression	y_prev = y		362826	1		=			
ANR	362993	Identifier	y_prev		362826	0					
ANR	362994	Identifier	y		362826	1					
ANR	362995	ExpressionStatement	"code = ( * vdev_proc ( vdev , lineto ) ) ( vdev , x_prev , y_prev , ( x = fixed2float ( points [ i ] . x ) / vdev -> scale . x ) , ( y = fixed2float ( points [ i ] . y ) / vdev -> scale . y ) , type )"	722:16:25931:26172	362826	1	True				
ANR	362996	AssignmentExpression	"code = ( * vdev_proc ( vdev , lineto ) ) ( vdev , x_prev , y_prev , ( x = fixed2float ( points [ i ] . x ) / vdev -> scale . x ) , ( y = fixed2float ( points [ i ] . y ) / vdev -> scale . y ) , type )"		362826	0		=			
ANR	362997	Identifier	code		362826	0					
ANR	362998	CallExpression	"( * vdev_proc ( vdev , lineto ) ) ( vdev , x_prev , y_prev , ( x = fixed2float ( points [ i ] . x ) / vdev -> scale . x ) , ( y = fixed2float ( points [ i ] . y ) / vdev -> scale . y ) , type )"		362826	1					
ANR	362999	Callee	"* vdev_proc ( vdev , lineto )"		362826	0					
ANR	363000	UnaryOperationExpression	"* vdev_proc ( vdev , lineto )"		362826	0					
ANR	363001	UnaryOperator	*		362826	0					
ANR	363002	CallExpression	"vdev_proc ( vdev , lineto )"		362826	1					
ANR	363003	Callee	vdev_proc		362826	0					
ANR	363004	Identifier	vdev_proc		362826	0					
ANR	363005	ArgumentList	vdev		362826	1					
ANR	363006	Argument	vdev		362826	0					
ANR	363007	Identifier	vdev		362826	0					
ANR	363008	Argument	lineto		362826	1					
ANR	363009	Identifier	lineto		362826	0					
ANR	363010	ArgumentList	vdev		362826	1					
ANR	363011	Argument	vdev		362826	0					
ANR	363012	Identifier	vdev		362826	0					
ANR	363013	Argument	x_prev		362826	1					
ANR	363014	Identifier	x_prev		362826	0					
ANR	363015	Argument	y_prev		362826	2					
ANR	363016	Identifier	y_prev		362826	0					
ANR	363017	Argument	x = fixed2float ( points [ i ] . x ) / vdev -> scale . x		362826	3					
ANR	363018	AssignmentExpression	x = fixed2float ( points [ i ] . x ) / vdev -> scale . x		362826	0		=			
ANR	363019	Identifier	x		362826	0					
ANR	363020	MultiplicativeExpression	fixed2float ( points [ i ] . x ) / vdev -> scale . x		362826	1		/			
ANR	363021	CallExpression	fixed2float ( points [ i ] . x )		362826	0					
ANR	363022	Callee	fixed2float		362826	0					
ANR	363023	Identifier	fixed2float		362826	0					
ANR	363024	ArgumentList	points [ i ] . x		362826	1					
ANR	363025	Argument	points [ i ] . x		362826	0					
ANR	363026	MemberAccess	points [ i ] . x		362826	0					
ANR	363027	ArrayIndexing	points [ i ]		362826	0					
ANR	363028	Identifier	points		362826	0					
ANR	363029	Identifier	i		362826	1					
ANR	363030	Identifier	x		362826	1					
ANR	363031	MemberAccess	vdev -> scale . x		362826	1					
ANR	363032	PtrMemberAccess	vdev -> scale		362826	0					
ANR	363033	Identifier	vdev		362826	0					
ANR	363034	Identifier	scale		362826	1					
ANR	363035	Identifier	x		362826	1					
ANR	363036	Argument	y = fixed2float ( points [ i ] . y ) / vdev -> scale . y		362826	4					
ANR	363037	AssignmentExpression	y = fixed2float ( points [ i ] . y ) / vdev -> scale . y		362826	0		=			
ANR	363038	Identifier	y		362826	0					
ANR	363039	MultiplicativeExpression	fixed2float ( points [ i ] . y ) / vdev -> scale . y		362826	1		/			
ANR	363040	CallExpression	fixed2float ( points [ i ] . y )		362826	0					
ANR	363041	Callee	fixed2float		362826	0					
ANR	363042	Identifier	fixed2float		362826	0					
ANR	363043	ArgumentList	points [ i ] . y		362826	1					
ANR	363044	Argument	points [ i ] . y		362826	0					
ANR	363045	MemberAccess	points [ i ] . y		362826	0					
ANR	363046	ArrayIndexing	points [ i ]		362826	0					
ANR	363047	Identifier	points		362826	0					
ANR	363048	Identifier	i		362826	1					
ANR	363049	Identifier	y		362826	1					
ANR	363050	MemberAccess	vdev -> scale . y		362826	1					
ANR	363051	PtrMemberAccess	vdev -> scale		362826	0					
ANR	363052	Identifier	vdev		362826	0					
ANR	363053	Identifier	scale		362826	1					
ANR	363054	Identifier	y		362826	1					
ANR	363055	Argument	type		362826	5					
ANR	363056	Identifier	type		362826	0					
ANR	363057	IfStatement	if ( code >= 0 && close )		362826	5					
ANR	363058	Condition	code >= 0 && close	728:12:26200:26217	362826	0	True				
ANR	363059	AndExpression	code >= 0 && close		362826	0		&&			
ANR	363060	RelationalExpression	code >= 0		362826	0		>=			
ANR	363061	Identifier	code		362826	0					
ANR	363062	PrimaryExpression	0		362826	1					
ANR	363063	Identifier	close		362826	1					
ANR	363064	ExpressionStatement	"code = ( * vdev_proc ( vdev , closepath ) ) ( vdev , x , y , x_start , y_start , type )"	729:12:26232:26321	362826	1	True				
ANR	363065	AssignmentExpression	"code = ( * vdev_proc ( vdev , closepath ) ) ( vdev , x , y , x_start , y_start , type )"		362826	0		=			
ANR	363066	Identifier	code		362826	0					
ANR	363067	CallExpression	"( * vdev_proc ( vdev , closepath ) ) ( vdev , x , y , x_start , y_start , type )"		362826	1					
ANR	363068	Callee	"* vdev_proc ( vdev , closepath )"		362826	0					
ANR	363069	UnaryOperationExpression	"* vdev_proc ( vdev , closepath )"		362826	0					
ANR	363070	UnaryOperator	*		362826	0					
ANR	363071	CallExpression	"vdev_proc ( vdev , closepath )"		362826	1					
ANR	363072	Callee	vdev_proc		362826	0					
ANR	363073	Identifier	vdev_proc		362826	0					
ANR	363074	ArgumentList	vdev		362826	1					
ANR	363075	Argument	vdev		362826	0					
ANR	363076	Identifier	vdev		362826	0					
ANR	363077	Argument	closepath		362826	1					
ANR	363078	Identifier	closepath		362826	0					
ANR	363079	ArgumentList	vdev		362826	1					
ANR	363080	Argument	vdev		362826	0					
ANR	363081	Identifier	vdev		362826	0					
ANR	363082	Argument	x		362826	1					
ANR	363083	Identifier	x		362826	0					
ANR	363084	Argument	y		362826	2					
ANR	363085	Identifier	y		362826	0					
ANR	363086	Argument	x_start		362826	3					
ANR	363087	Identifier	x_start		362826	0					
ANR	363088	Argument	y_start		362826	4					
ANR	363089	Identifier	y_start		362826	0					
ANR	363090	Argument	type		362826	5					
ANR	363091	Identifier	type		362826	0					
ANR	363092	ReturnStatement	"return ( code >= 0 && type != gx_path_type_none ? ( * vdev_proc ( vdev , endpath ) ) ( vdev , type ) : code ) ;"	732:4:26333:26442	362826	3	True				
ANR	363093	ConditionalExpression	"code >= 0 && type != gx_path_type_none ? ( * vdev_proc ( vdev , endpath ) ) ( vdev , type ) : code"		362826	0					
ANR	363094	Condition	code >= 0 && type != gx_path_type_none		362826	0					
ANR	363095	AndExpression	code >= 0 && type != gx_path_type_none		362826	0		&&			
ANR	363096	RelationalExpression	code >= 0		362826	0		>=			
ANR	363097	Identifier	code		362826	0					
ANR	363098	PrimaryExpression	0		362826	1					
ANR	363099	EqualityExpression	type != gx_path_type_none		362826	1		!=			
ANR	363100	Identifier	type		362826	0					
ANR	363101	Identifier	gx_path_type_none		362826	1					
ANR	363102	CallExpression	"( * vdev_proc ( vdev , endpath ) ) ( vdev , type )"		362826	1					
ANR	363103	Callee	"* vdev_proc ( vdev , endpath )"		362826	0					
ANR	363104	UnaryOperationExpression	"* vdev_proc ( vdev , endpath )"		362826	0					
ANR	363105	UnaryOperator	*		362826	0					
ANR	363106	CallExpression	"vdev_proc ( vdev , endpath )"		362826	1					
ANR	363107	Callee	vdev_proc		362826	0					
ANR	363108	Identifier	vdev_proc		362826	0					
ANR	363109	ArgumentList	vdev		362826	1					
ANR	363110	Argument	vdev		362826	0					
ANR	363111	Identifier	vdev		362826	0					
ANR	363112	Argument	endpath		362826	1					
ANR	363113	Identifier	endpath		362826	0					
ANR	363114	ArgumentList	vdev		362826	1					
ANR	363115	Argument	vdev		362826	0					
ANR	363116	Identifier	vdev		362826	0					
ANR	363117	Argument	type		362826	1					
ANR	363118	Identifier	type		362826	0					
ANR	363119	Identifier	code		362826	2					
ANR	363120	ReturnType	int		362826	1					
ANR	363121	Identifier	gdev_vector_write_polygon		362826	2					
ANR	363122	ParameterList	"gx_device_vector * vdev , const gs_fixed_point * points , uint count , bool close , gx_path_type_t type"		362826	3					
ANR	363123	Parameter	gx_device_vector * vdev	703:26:25231:25253	362826	0	True				
ANR	363124	ParameterType	gx_device_vector *		362826	0					
ANR	363125	Identifier	vdev		362826	1					
ANR	363126	Parameter	const gs_fixed_point * points	703:51:25256:25284	362826	1	True				
ANR	363127	ParameterType	const gs_fixed_point *		362826	0					
ANR	363128	Identifier	points		362826	1					
ANR	363129	Parameter	uint count	704:26:25313:25322	362826	2	True				
ANR	363130	ParameterType	uint		362826	0					
ANR	363131	Identifier	count		362826	1					
ANR	363132	Parameter	bool close	704:38:25325:25334	362826	3	True				
ANR	363133	ParameterType	bool		362826	0					
ANR	363134	Identifier	close		362826	1					
ANR	363135	Parameter	gx_path_type_t type	704:50:25337:25355	362826	4	True				
ANR	363136	ParameterType	gx_path_type_t		362826	0					
ANR	363137	Identifier	type		362826	1					
ANR	363138	CFGEntryNode	ENTRY		362826		True				
ANR	363139	CFGExitNode	EXIT		362826		True				
ANR	363140	Symbol	endpath		362826						
ANR	363141	Symbol	"* vdev_proc ( vdev , closepath )"		362826						
ANR	363142	Symbol	"* vdev_proc ( vdev , moveto )"		362826						
ANR	363143	Symbol	code		362826						
ANR	363144	Symbol	x_start		362826						
ANR	363145	Symbol	type		362826						
ANR	363146	Symbol	points		362826						
ANR	363147	Symbol	y_prev		362826						
ANR	363148	Symbol	* vdev_proc		362826						
ANR	363149	Symbol	beginpath		362826						
ANR	363150	Symbol	vdev -> scale . y		362826						
ANR	363151	Symbol	vdev -> scale . x		362826						
ANR	363152	Symbol	"* vdev_proc ( vdev , lineto )"		362826						
ANR	363153	Symbol	vdev_proc		362826						
ANR	363154	Symbol	closepath		362826						
ANR	363155	Symbol	points [ i ] . x		362826						
ANR	363156	Symbol	points [ i ] . y		362826						
ANR	363157	Symbol	close		362826						
ANR	363158	Symbol	vdev -> scale		362826						
ANR	363159	Symbol	points [ 0 ] . y		362826						
ANR	363160	Symbol	points [ 0 ] . x		362826						
ANR	363161	Symbol	moveto		362826						
ANR	363162	Symbol	fixed2float		362826						
ANR	363163	Symbol	y_start		362826						
ANR	363164	Symbol	"* vdev_proc ( vdev , endpath )"		362826						
ANR	363165	Symbol	vdev		362826						
ANR	363166	Symbol	count		362826						
ANR	363167	Symbol	i		362826						
ANR	363168	Symbol	lineto		362826						
ANR	363169	Symbol	x_prev		362826						
ANR	363170	Symbol	"* vdev_proc ( vdev , beginpath )"		362826						
ANR	363171	Symbol	* vdev		362826						
ANR	363172	Symbol	* i		362826						
ANR	363173	Symbol	x		362826						
ANR	363174	Symbol	y		362826						
ANR	363175	Symbol	gx_path_type_none		362826						
ANR	363176	Symbol	* points		362826						
ANR	363177	Function	gdev_vector_write_rectangle	738:0:26532:27148							
ANR	363178	FunctionDef	"gdev_vector_write_rectangle (gx_device_vector * vdev , fixed x0 , fixed y0 , fixed x1 , fixed y1 , bool close , gx_rect_direction_t direction)"		363177	0					
ANR	363179	CompoundStatement		741:0:26686:27148	363177	0					
ANR	363180	IdentifierDeclStatement	gs_fixed_point points [ 4 ] ;	742:4:26692:26716	363177	0	True				
ANR	363181	IdentifierDecl	points [ 4 ]		363177	0					
ANR	363182	IdentifierDeclType	gs_fixed_point [ 4 ]		363177	0					
ANR	363183	Identifier	points		363177	1					
ANR	363184	PrimaryExpression	4		363177	2					
ANR	363185	ExpressionStatement	"points [ 0 ] . x = x0 , points [ 0 ] . y = y0"	744:4:26723:26757	363177	1	True				
ANR	363186	Expression	"points [ 0 ] . x = x0 , points [ 0 ] . y = y0"		363177	0					
ANR	363187	AssignmentExpression	points [ 0 ] . x = x0		363177	0		=			
ANR	363188	MemberAccess	points [ 0 ] . x		363177	0					
ANR	363189	ArrayIndexing	points [ 0 ]		363177	0					
ANR	363190	Identifier	points		363177	0					
ANR	363191	PrimaryExpression	0		363177	1					
ANR	363192	Identifier	x		363177	1					
ANR	363193	Identifier	x0		363177	1					
ANR	363194	AssignmentExpression	points [ 0 ] . y = y0		363177	1		=			
ANR	363195	MemberAccess	points [ 0 ] . y		363177	0					
ANR	363196	ArrayIndexing	points [ 0 ]		363177	0					
ANR	363197	Identifier	points		363177	0					
ANR	363198	PrimaryExpression	0		363177	1					
ANR	363199	Identifier	y		363177	1					
ANR	363200	Identifier	y0		363177	1					
ANR	363201	ExpressionStatement	"points [ 2 ] . x = x1 , points [ 2 ] . y = y1"	745:4:26763:26797	363177	2	True				
ANR	363202	Expression	"points [ 2 ] . x = x1 , points [ 2 ] . y = y1"		363177	0					
ANR	363203	AssignmentExpression	points [ 2 ] . x = x1		363177	0		=			
ANR	363204	MemberAccess	points [ 2 ] . x		363177	0					
ANR	363205	ArrayIndexing	points [ 2 ]		363177	0					
ANR	363206	Identifier	points		363177	0					
ANR	363207	PrimaryExpression	2		363177	1					
ANR	363208	Identifier	x		363177	1					
ANR	363209	Identifier	x1		363177	1					
ANR	363210	AssignmentExpression	points [ 2 ] . y = y1		363177	1		=			
ANR	363211	MemberAccess	points [ 2 ] . y		363177	0					
ANR	363212	ArrayIndexing	points [ 2 ]		363177	0					
ANR	363213	Identifier	points		363177	0					
ANR	363214	PrimaryExpression	2		363177	1					
ANR	363215	Identifier	y		363177	1					
ANR	363216	Identifier	y1		363177	1					
ANR	363217	IfStatement	if ( direction == gx_rect_x_first )		363177	3					
ANR	363218	Condition	direction == gx_rect_x_first	746:8:26807:26834	363177	0	True				
ANR	363219	EqualityExpression	direction == gx_rect_x_first		363177	0		==			
ANR	363220	Identifier	direction		363177	0					
ANR	363221	Identifier	gx_rect_x_first		363177	1					
ANR	363222	ExpressionStatement	"points [ 1 ] . x = x1 , points [ 1 ] . y = y0 , points [ 3 ] . x = x0 , points [ 3 ] . y = y1"	747:8:26845:26927	363177	1	True				
ANR	363223	Expression	"points [ 1 ] . x = x1 , points [ 1 ] . y = y0 , points [ 3 ] . x = x0 , points [ 3 ] . y = y1"		363177	0					
ANR	363224	AssignmentExpression	points [ 1 ] . x = x1		363177	0		=			
ANR	363225	MemberAccess	points [ 1 ] . x		363177	0					
ANR	363226	ArrayIndexing	points [ 1 ]		363177	0					
ANR	363227	Identifier	points		363177	0					
ANR	363228	PrimaryExpression	1		363177	1					
ANR	363229	Identifier	x		363177	1					
ANR	363230	Identifier	x1		363177	1					
ANR	363231	Expression	"points [ 1 ] . y = y0 , points [ 3 ] . x = x0 , points [ 3 ] . y = y1"		363177	1					
ANR	363232	AssignmentExpression	points [ 1 ] . y = y0		363177	0		=			
ANR	363233	MemberAccess	points [ 1 ] . y		363177	0					
ANR	363234	ArrayIndexing	points [ 1 ]		363177	0					
ANR	363235	Identifier	points		363177	0					
ANR	363236	PrimaryExpression	1		363177	1					
ANR	363237	Identifier	y		363177	1					
ANR	363238	Identifier	y0		363177	1					
ANR	363239	Expression	"points [ 3 ] . x = x0 , points [ 3 ] . y = y1"		363177	1					
ANR	363240	AssignmentExpression	points [ 3 ] . x = x0		363177	0		=			
ANR	363241	MemberAccess	points [ 3 ] . x		363177	0					
ANR	363242	ArrayIndexing	points [ 3 ]		363177	0					
ANR	363243	Identifier	points		363177	0					
ANR	363244	PrimaryExpression	3		363177	1					
ANR	363245	Identifier	x		363177	1					
ANR	363246	Identifier	x0		363177	1					
ANR	363247	AssignmentExpression	points [ 3 ] . y = y1		363177	1		=			
ANR	363248	MemberAccess	points [ 3 ] . y		363177	0					
ANR	363249	ArrayIndexing	points [ 3 ]		363177	0					
ANR	363250	Identifier	points		363177	0					
ANR	363251	PrimaryExpression	3		363177	1					
ANR	363252	Identifier	y		363177	1					
ANR	363253	Identifier	y1		363177	1					
ANR	363254	ElseStatement	else		363177	0					
ANR	363255	ExpressionStatement	"points [ 1 ] . x = x0 , points [ 1 ] . y = y1 , points [ 3 ] . x = x1 , points [ 3 ] . y = y0"	750:8:26946:27028	363177	0	True				
ANR	363256	Expression	"points [ 1 ] . x = x0 , points [ 1 ] . y = y1 , points [ 3 ] . x = x1 , points [ 3 ] . y = y0"		363177	0					
ANR	363257	AssignmentExpression	points [ 1 ] . x = x0		363177	0		=			
ANR	363258	MemberAccess	points [ 1 ] . x		363177	0					
ANR	363259	ArrayIndexing	points [ 1 ]		363177	0					
ANR	363260	Identifier	points		363177	0					
ANR	363261	PrimaryExpression	1		363177	1					
ANR	363262	Identifier	x		363177	1					
ANR	363263	Identifier	x0		363177	1					
ANR	363264	Expression	"points [ 1 ] . y = y1 , points [ 3 ] . x = x1 , points [ 3 ] . y = y0"		363177	1					
ANR	363265	AssignmentExpression	points [ 1 ] . y = y1		363177	0		=			
ANR	363266	MemberAccess	points [ 1 ] . y		363177	0					
ANR	363267	ArrayIndexing	points [ 1 ]		363177	0					
ANR	363268	Identifier	points		363177	0					
ANR	363269	PrimaryExpression	1		363177	1					
ANR	363270	Identifier	y		363177	1					
ANR	363271	Identifier	y1		363177	1					
ANR	363272	Expression	"points [ 3 ] . x = x1 , points [ 3 ] . y = y0"		363177	1					
ANR	363273	AssignmentExpression	points [ 3 ] . x = x1		363177	0		=			
ANR	363274	MemberAccess	points [ 3 ] . x		363177	0					
ANR	363275	ArrayIndexing	points [ 3 ]		363177	0					
ANR	363276	Identifier	points		363177	0					
ANR	363277	PrimaryExpression	3		363177	1					
ANR	363278	Identifier	x		363177	1					
ANR	363279	Identifier	x1		363177	1					
ANR	363280	AssignmentExpression	points [ 3 ] . y = y0		363177	1		=			
ANR	363281	MemberAccess	points [ 3 ] . y		363177	0					
ANR	363282	ArrayIndexing	points [ 3 ]		363177	0					
ANR	363283	Identifier	points		363177	0					
ANR	363284	PrimaryExpression	3		363177	1					
ANR	363285	Identifier	y		363177	1					
ANR	363286	Identifier	y0		363177	1					
ANR	363287	ReturnStatement	"return gdev_vector_write_polygon ( vdev , points , 4 , close , gx_path_type_none ) ;"	752:4:27034:27146	363177	4	True				
ANR	363288	CallExpression	"gdev_vector_write_polygon ( vdev , points , 4 , close , gx_path_type_none )"		363177	0					
ANR	363289	Callee	gdev_vector_write_polygon		363177	0					
ANR	363290	Identifier	gdev_vector_write_polygon		363177	0					
ANR	363291	ArgumentList	vdev		363177	1					
ANR	363292	Argument	vdev		363177	0					
ANR	363293	Identifier	vdev		363177	0					
ANR	363294	Argument	points		363177	1					
ANR	363295	Identifier	points		363177	0					
ANR	363296	Argument	4		363177	2					
ANR	363297	PrimaryExpression	4		363177	0					
ANR	363298	Argument	close		363177	3					
ANR	363299	Identifier	close		363177	0					
ANR	363300	Argument	gx_path_type_none		363177	4					
ANR	363301	Identifier	gx_path_type_none		363177	0					
ANR	363302	ReturnType	int		363177	1					
ANR	363303	Identifier	gdev_vector_write_rectangle		363177	2					
ANR	363304	ParameterList	"gx_device_vector * vdev , fixed x0 , fixed y0 , fixed x1 , fixed y1 , bool close , gx_rect_direction_t direction"		363177	3					
ANR	363305	Parameter	gx_device_vector * vdev	739:28:26564:26586	363177	0	True				
ANR	363306	ParameterType	gx_device_vector *		363177	0					
ANR	363307	Identifier	vdev		363177	1					
ANR	363308	Parameter	fixed x0	739:53:26589:26596	363177	1	True				
ANR	363309	ParameterType	fixed		363177	0					
ANR	363310	Identifier	x0		363177	1					
ANR	363311	Parameter	fixed y0	739:63:26599:26606	363177	2	True				
ANR	363312	ParameterType	fixed		363177	0					
ANR	363313	Identifier	y0		363177	1					
ANR	363314	Parameter	fixed x1	740:14:26623:26630	363177	3	True				
ANR	363315	ParameterType	fixed		363177	0					
ANR	363316	Identifier	x1		363177	1					
ANR	363317	Parameter	fixed y1	740:24:26633:26640	363177	4	True				
ANR	363318	ParameterType	fixed		363177	0					
ANR	363319	Identifier	y1		363177	1					
ANR	363320	Parameter	bool close	740:34:26643:26652	363177	5	True				
ANR	363321	ParameterType	bool		363177	0					
ANR	363322	Identifier	close		363177	1					
ANR	363323	Parameter	gx_rect_direction_t direction	740:46:26655:26683	363177	6	True				
ANR	363324	ParameterType	gx_rect_direction_t		363177	0					
ANR	363325	Identifier	direction		363177	1					
ANR	363326	CFGEntryNode	ENTRY		363177		True				
ANR	363327	CFGExitNode	EXIT		363177		True				
ANR	363328	Symbol	points [ 1 ] . y		363177						
ANR	363329	Symbol	points [ 1 ] . x		363177						
ANR	363330	Symbol	vdev		363177						
ANR	363331	Symbol	points [ 2 ] . x		363177						
ANR	363332	Symbol	points		363177						
ANR	363333	Symbol	points [ 2 ] . y		363177						
ANR	363334	Symbol	points [ 3 ] . y		363177						
ANR	363335	Symbol	points [ 3 ] . x		363177						
ANR	363336	Symbol	y0		363177						
ANR	363337	Symbol	x0		363177						
ANR	363338	Symbol	y1		363177						
ANR	363339	Symbol	x1		363177						
ANR	363340	Symbol	* points		363177						
ANR	363341	Symbol	gx_path_type_none		363177						
ANR	363342	Symbol	close		363177						
ANR	363343	Symbol	points [ 0 ] . y		363177						
ANR	363344	Symbol	points [ 0 ] . x		363177						
ANR	363345	Symbol	direction		363177						
ANR	363346	Symbol	gx_rect_x_first		363177						
ANR	363347	Symbol	gdev_vector_write_polygon		363177						
ANR	363348	Function	gdev_vector_write_clip_path	757:0:27211:28734							
ANR	363349	FunctionDef	"gdev_vector_write_clip_path (gx_device_vector * vdev , const gx_clip_path * pcpath)"		363348	0					
ANR	363350	CompoundStatement		760:0:27325:28734	363348	0					
ANR	363351	IdentifierDeclStatement	const gx_clip_rect * prect ;	761:4:27331:27356	363348	0	True				
ANR	363352	IdentifierDecl	* prect		363348	0					
ANR	363353	IdentifierDeclType	const gx_clip_rect *		363348	0					
ANR	363354	Identifier	prect		363348	1					
ANR	363355	IdentifierDeclStatement	gx_clip_rect page_rect ;	762:4:27362:27384	363348	1	True				
ANR	363356	IdentifierDecl	page_rect		363348	0					
ANR	363357	IdentifierDeclType	gx_clip_rect		363348	0					
ANR	363358	Identifier	page_rect		363348	1					
ANR	363359	IdentifierDeclStatement	int code ;	763:4:27390:27398	363348	2	True				
ANR	363360	IdentifierDecl	code		363348	0					
ANR	363361	IdentifierDeclType	int		363348	0					
ANR	363362	Identifier	code		363348	1					
ANR	363363	IfStatement	if ( pcpath == 0 )		363348	3					
ANR	363364	Condition	pcpath == 0	765:8:27409:27419	363348	0	True				
ANR	363365	EqualityExpression	pcpath == 0		363348	0		==			
ANR	363366	Identifier	pcpath		363348	0					
ANR	363367	PrimaryExpression	0		363348	1					
ANR	363368	CompoundStatement		6:21:96:96	363348	1					
ANR	363369	ExpressionStatement	page_rect . xmin = page_rect . ymin = 0	768:8:27550:27585	363348	0	True				
ANR	363370	AssignmentExpression	page_rect . xmin = page_rect . ymin = 0		363348	0		=			
ANR	363371	MemberAccess	page_rect . xmin		363348	0					
ANR	363372	Identifier	page_rect		363348	0					
ANR	363373	Identifier	xmin		363348	1					
ANR	363374	AssignmentExpression	page_rect . ymin = 0		363348	1		=			
ANR	363375	MemberAccess	page_rect . ymin		363348	0					
ANR	363376	Identifier	page_rect		363348	0					
ANR	363377	Identifier	ymin		363348	1					
ANR	363378	PrimaryExpression	0		363348	1					
ANR	363379	ExpressionStatement	page_rect . xmax = vdev -> width	769:8:27595:27623	363348	1	True				
ANR	363380	AssignmentExpression	page_rect . xmax = vdev -> width		363348	0		=			
ANR	363381	MemberAccess	page_rect . xmax		363348	0					
ANR	363382	Identifier	page_rect		363348	0					
ANR	363383	Identifier	xmax		363348	1					
ANR	363384	PtrMemberAccess	vdev -> width		363348	1					
ANR	363385	Identifier	vdev		363348	0					
ANR	363386	Identifier	width		363348	1					
ANR	363387	ExpressionStatement	page_rect . ymax = vdev -> height	770:8:27633:27662	363348	2	True				
ANR	363388	AssignmentExpression	page_rect . ymax = vdev -> height		363348	0		=			
ANR	363389	MemberAccess	page_rect . ymax		363348	0					
ANR	363390	Identifier	page_rect		363348	0					
ANR	363391	Identifier	ymax		363348	1					
ANR	363392	PtrMemberAccess	vdev -> height		363348	1					
ANR	363393	Identifier	vdev		363348	0					
ANR	363394	Identifier	height		363348	1					
ANR	363395	ExpressionStatement	page_rect . next = 0	771:8:27672:27690	363348	3	True				
ANR	363396	AssignmentExpression	page_rect . next = 0		363348	0		=			
ANR	363397	MemberAccess	page_rect . next		363348	0					
ANR	363398	Identifier	page_rect		363348	0					
ANR	363399	Identifier	next		363348	1					
ANR	363400	PrimaryExpression	0		363348	1					
ANR	363401	ExpressionStatement	prect = & page_rect	772:8:27700:27718	363348	4	True				
ANR	363402	AssignmentExpression	prect = & page_rect		363348	0		=			
ANR	363403	Identifier	prect		363348	0					
ANR	363404	UnaryOperationExpression	& page_rect		363348	1					
ANR	363405	UnaryOperator	&		363348	0					
ANR	363406	Identifier	page_rect		363348	1					
ANR	363407	ElseStatement	else		363348	0					
ANR	363408	IfStatement	if ( pcpath -> path_valid )		363348	0					
ANR	363409	Condition	pcpath -> path_valid	773:15:27735:27752	363348	0	True				
ANR	363410	PtrMemberAccess	pcpath -> path_valid		363348	0					
ANR	363411	Identifier	pcpath		363348	0					
ANR	363412	Identifier	path_valid		363348	1					
ANR	363413	CompoundStatement		14:35:429:429	363348	1					
ANR	363414	ReturnStatement	"return ( * vdev_proc ( vdev , dopath ) ) ( vdev , & pcpath -> path , ( pcpath -> rule <= 0 ? gx_path_type_clip | gx_path_type_winding_number : gx_path_type_clip | gx_path_type_even_odd ) , NULL ) ;"	774:8:27765:28007	363348	0	True				
ANR	363415	CallExpression	"( * vdev_proc ( vdev , dopath ) ) ( vdev , & pcpath -> path , ( pcpath -> rule <= 0 ? gx_path_type_clip | gx_path_type_winding_number : gx_path_type_clip | gx_path_type_even_odd ) , NULL )"		363348	0					
ANR	363416	Callee	"* vdev_proc ( vdev , dopath )"		363348	0					
ANR	363417	UnaryOperationExpression	"* vdev_proc ( vdev , dopath )"		363348	0					
ANR	363418	UnaryOperator	*		363348	0					
ANR	363419	CallExpression	"vdev_proc ( vdev , dopath )"		363348	1					
ANR	363420	Callee	vdev_proc		363348	0					
ANR	363421	Identifier	vdev_proc		363348	0					
ANR	363422	ArgumentList	vdev		363348	1					
ANR	363423	Argument	vdev		363348	0					
ANR	363424	Identifier	vdev		363348	0					
ANR	363425	Argument	dopath		363348	1					
ANR	363426	Identifier	dopath		363348	0					
ANR	363427	ArgumentList	vdev		363348	1					
ANR	363428	Argument	vdev		363348	0					
ANR	363429	Identifier	vdev		363348	0					
ANR	363430	Argument	& pcpath -> path		363348	1					
ANR	363431	UnaryOperationExpression	& pcpath -> path		363348	0					
ANR	363432	UnaryOperator	&		363348	0					
ANR	363433	PtrMemberAccess	pcpath -> path		363348	1					
ANR	363434	Identifier	pcpath		363348	0					
ANR	363435	Identifier	path		363348	1					
ANR	363436	Argument	pcpath -> rule <= 0 ? gx_path_type_clip | gx_path_type_winding_number : gx_path_type_clip | gx_path_type_even_odd		363348	2					
ANR	363437	ConditionalExpression	pcpath -> rule <= 0 ? gx_path_type_clip | gx_path_type_winding_number : gx_path_type_clip | gx_path_type_even_odd		363348	0					
ANR	363438	Condition	pcpath -> rule <= 0		363348	0					
ANR	363439	RelationalExpression	pcpath -> rule <= 0		363348	0		<=			
ANR	363440	PtrMemberAccess	pcpath -> rule		363348	0					
ANR	363441	Identifier	pcpath		363348	0					
ANR	363442	Identifier	rule		363348	1					
ANR	363443	PrimaryExpression	0		363348	1					
ANR	363444	InclusiveOrExpression	gx_path_type_clip | gx_path_type_winding_number		363348	1		|			
ANR	363445	Identifier	gx_path_type_clip		363348	0					
ANR	363446	Identifier	gx_path_type_winding_number		363348	1					
ANR	363447	InclusiveOrExpression	gx_path_type_clip | gx_path_type_even_odd		363348	2		|			
ANR	363448	Identifier	gx_path_type_clip		363348	0					
ANR	363449	Identifier	gx_path_type_even_odd		363348	1					
ANR	363450	Argument	NULL		363348	3					
ANR	363451	Identifier	NULL		363348	0					
ANR	363452	ElseStatement	else		363348	0					
ANR	363453	CompoundStatement		22:8:704:752	363348	0					
ANR	363454	IdentifierDeclStatement	const gx_clip_list * list = gx_cpath_list ( pcpath ) ;	781:8:28030:28078	363348	0	True				
ANR	363455	IdentifierDecl	* list = gx_cpath_list ( pcpath )		363348	0					
ANR	363456	IdentifierDeclType	const gx_clip_list *		363348	0					
ANR	363457	Identifier	list		363348	1					
ANR	363458	AssignmentExpression	* list = gx_cpath_list ( pcpath )		363348	2		=			
ANR	363459	Identifier	list		363348	0					
ANR	363460	CallExpression	gx_cpath_list ( pcpath )		363348	1					
ANR	363461	Callee	gx_cpath_list		363348	0					
ANR	363462	Identifier	gx_cpath_list		363348	0					
ANR	363463	ArgumentList	pcpath		363348	1					
ANR	363464	Argument	pcpath		363348	0					
ANR	363465	Identifier	pcpath		363348	0					
ANR	363466	ExpressionStatement	prect = list -> head	783:8:28089:28107	363348	1	True				
ANR	363467	AssignmentExpression	prect = list -> head		363348	0		=			
ANR	363468	Identifier	prect		363348	0					
ANR	363469	PtrMemberAccess	list -> head		363348	1					
ANR	363470	Identifier	list		363348	0					
ANR	363471	Identifier	head		363348	1					
ANR	363472	IfStatement	if ( prect == 0 )		363348	2					
ANR	363473	Condition	prect == 0	784:12:28121:28130	363348	0	True				
ANR	363474	EqualityExpression	prect == 0		363348	0		==			
ANR	363475	Identifier	prect		363348	0					
ANR	363476	PrimaryExpression	0		363348	1					
ANR	363477	ExpressionStatement	prect = & list -> single	785:12:28145:28166	363348	1	True				
ANR	363478	AssignmentExpression	prect = & list -> single		363348	0		=			
ANR	363479	Identifier	prect		363348	0					
ANR	363480	UnaryOperationExpression	& list -> single		363348	1					
ANR	363481	UnaryOperator	&		363348	0					
ANR	363482	PtrMemberAccess	list -> single		363348	1					
ANR	363483	Identifier	list		363348	0					
ANR	363484	Identifier	single		363348	1					
ANR	363485	ExpressionStatement	"code = ( * vdev_proc ( vdev , beginpath ) ) ( vdev , gx_path_type_clip )"	788:4:28214:28276	363348	4	True				
ANR	363486	AssignmentExpression	"code = ( * vdev_proc ( vdev , beginpath ) ) ( vdev , gx_path_type_clip )"		363348	0		=			
ANR	363487	Identifier	code		363348	0					
ANR	363488	CallExpression	"( * vdev_proc ( vdev , beginpath ) ) ( vdev , gx_path_type_clip )"		363348	1					
ANR	363489	Callee	"* vdev_proc ( vdev , beginpath )"		363348	0					
ANR	363490	UnaryOperationExpression	"* vdev_proc ( vdev , beginpath )"		363348	0					
ANR	363491	UnaryOperator	*		363348	0					
ANR	363492	CallExpression	"vdev_proc ( vdev , beginpath )"		363348	1					
ANR	363493	Callee	vdev_proc		363348	0					
ANR	363494	Identifier	vdev_proc		363348	0					
ANR	363495	ArgumentList	vdev		363348	1					
ANR	363496	Argument	vdev		363348	0					
ANR	363497	Identifier	vdev		363348	0					
ANR	363498	Argument	beginpath		363348	1					
ANR	363499	Identifier	beginpath		363348	0					
ANR	363500	ArgumentList	vdev		363348	1					
ANR	363501	Argument	vdev		363348	0					
ANR	363502	Identifier	vdev		363348	0					
ANR	363503	Argument	gx_path_type_clip		363348	1					
ANR	363504	Identifier	gx_path_type_clip		363348	0					
ANR	363505	ForStatement	for ( ; code >= 0 && prect != 0 ; prect = prect -> next )		363348	5					
ANR	363506	Condition	code >= 0 && prect != 0	789:11:28289:28311	363348	0	True				
ANR	363507	AndExpression	code >= 0 && prect != 0		363348	0		&&			
ANR	363508	RelationalExpression	code >= 0		363348	0		>=			
ANR	363509	Identifier	code		363348	0					
ANR	363510	PrimaryExpression	0		363348	1					
ANR	363511	EqualityExpression	prect != 0		363348	1		!=			
ANR	363512	Identifier	prect		363348	0					
ANR	363513	PrimaryExpression	0		363348	1					
ANR	363514	AssignmentExpression	prect = prect -> next	789:36:28314:28332	363348	1	True	=			
ANR	363515	Identifier	prect		363348	0					
ANR	363516	PtrMemberAccess	prect -> next		363348	1					
ANR	363517	Identifier	prect		363348	0					
ANR	363518	Identifier	next		363348	1					
ANR	363519	IfStatement	if ( prect -> xmax > prect -> xmin && prect -> ymax > prect -> ymin )		363348	2					
ANR	363520	Condition	prect -> xmax > prect -> xmin && prect -> ymax > prect -> ymin	790:12:28347:28400	363348	0	True				
ANR	363521	AndExpression	prect -> xmax > prect -> xmin && prect -> ymax > prect -> ymin		363348	0		&&			
ANR	363522	RelationalExpression	prect -> xmax > prect -> xmin		363348	0		>			
ANR	363523	PtrMemberAccess	prect -> xmax		363348	0					
ANR	363524	Identifier	prect		363348	0					
ANR	363525	Identifier	xmax		363348	1					
ANR	363526	PtrMemberAccess	prect -> xmin		363348	1					
ANR	363527	Identifier	prect		363348	0					
ANR	363528	Identifier	xmin		363348	1					
ANR	363529	RelationalExpression	prect -> ymax > prect -> ymin		363348	1		>			
ANR	363530	PtrMemberAccess	prect -> ymax		363348	0					
ANR	363531	Identifier	prect		363348	0					
ANR	363532	Identifier	ymax		363348	1					
ANR	363533	PtrMemberAccess	prect -> ymin		363348	1					
ANR	363534	Identifier	prect		363348	0					
ANR	363535	Identifier	ymin		363348	1					
ANR	363536	ExpressionStatement	"code = gdev_vector_write_rectangle ( vdev , int2fixed ( prect -> xmin ) , int2fixed ( prect -> ymin ) , int2fixed ( prect -> xmax ) , int2fixed ( prect -> ymax ) , false , gx_rect_x_first )"	791:12:28415:28626	363348	1	True				
ANR	363537	AssignmentExpression	"code = gdev_vector_write_rectangle ( vdev , int2fixed ( prect -> xmin ) , int2fixed ( prect -> ymin ) , int2fixed ( prect -> xmax ) , int2fixed ( prect -> ymax ) , false , gx_rect_x_first )"		363348	0		=			
ANR	363538	Identifier	code		363348	0					
ANR	363539	CallExpression	"gdev_vector_write_rectangle ( vdev , int2fixed ( prect -> xmin ) , int2fixed ( prect -> ymin ) , int2fixed ( prect -> xmax ) , int2fixed ( prect -> ymax ) , false , gx_rect_x_first )"		363348	1					
ANR	363540	Callee	gdev_vector_write_rectangle		363348	0					
ANR	363541	Identifier	gdev_vector_write_rectangle		363348	0					
ANR	363542	ArgumentList	vdev		363348	1					
ANR	363543	Argument	vdev		363348	0					
ANR	363544	Identifier	vdev		363348	0					
ANR	363545	Argument	int2fixed ( prect -> xmin )		363348	1					
ANR	363546	CallExpression	int2fixed ( prect -> xmin )		363348	0					
ANR	363547	Callee	int2fixed		363348	0					
ANR	363548	Identifier	int2fixed		363348	0					
ANR	363549	ArgumentList	prect -> xmin		363348	1					
ANR	363550	Argument	prect -> xmin		363348	0					
ANR	363551	PtrMemberAccess	prect -> xmin		363348	0					
ANR	363552	Identifier	prect		363348	0					
ANR	363553	Identifier	xmin		363348	1					
ANR	363554	Argument	int2fixed ( prect -> ymin )		363348	2					
ANR	363555	CallExpression	int2fixed ( prect -> ymin )		363348	0					
ANR	363556	Callee	int2fixed		363348	0					
ANR	363557	Identifier	int2fixed		363348	0					
ANR	363558	ArgumentList	prect -> ymin		363348	1					
ANR	363559	Argument	prect -> ymin		363348	0					
ANR	363560	PtrMemberAccess	prect -> ymin		363348	0					
ANR	363561	Identifier	prect		363348	0					
ANR	363562	Identifier	ymin		363348	1					
ANR	363563	Argument	int2fixed ( prect -> xmax )		363348	3					
ANR	363564	CallExpression	int2fixed ( prect -> xmax )		363348	0					
ANR	363565	Callee	int2fixed		363348	0					
ANR	363566	Identifier	int2fixed		363348	0					
ANR	363567	ArgumentList	prect -> xmax		363348	1					
ANR	363568	Argument	prect -> xmax		363348	0					
ANR	363569	PtrMemberAccess	prect -> xmax		363348	0					
ANR	363570	Identifier	prect		363348	0					
ANR	363571	Identifier	xmax		363348	1					
ANR	363572	Argument	int2fixed ( prect -> ymax )		363348	4					
ANR	363573	CallExpression	int2fixed ( prect -> ymax )		363348	0					
ANR	363574	Callee	int2fixed		363348	0					
ANR	363575	Identifier	int2fixed		363348	0					
ANR	363576	ArgumentList	prect -> ymax		363348	1					
ANR	363577	Argument	prect -> ymax		363348	0					
ANR	363578	PtrMemberAccess	prect -> ymax		363348	0					
ANR	363579	Identifier	prect		363348	0					
ANR	363580	Identifier	ymax		363348	1					
ANR	363581	Argument	false		363348	5					
ANR	363582	Identifier	false		363348	0					
ANR	363583	Argument	gx_rect_x_first		363348	6					
ANR	363584	Identifier	gx_rect_x_first		363348	0					
ANR	363585	IfStatement	if ( code >= 0 )		363348	6					
ANR	363586	Condition	code >= 0	795:8:28636:28644	363348	0	True				
ANR	363587	RelationalExpression	code >= 0		363348	0		>=			
ANR	363588	Identifier	code		363348	0					
ANR	363589	PrimaryExpression	0		363348	1					
ANR	363590	ExpressionStatement	"code = ( * vdev_proc ( vdev , endpath ) ) ( vdev , gx_path_type_clip )"	796:8:28655:28715	363348	1	True				
ANR	363591	AssignmentExpression	"code = ( * vdev_proc ( vdev , endpath ) ) ( vdev , gx_path_type_clip )"		363348	0		=			
ANR	363592	Identifier	code		363348	0					
ANR	363593	CallExpression	"( * vdev_proc ( vdev , endpath ) ) ( vdev , gx_path_type_clip )"		363348	1					
ANR	363594	Callee	"* vdev_proc ( vdev , endpath )"		363348	0					
ANR	363595	UnaryOperationExpression	"* vdev_proc ( vdev , endpath )"		363348	0					
ANR	363596	UnaryOperator	*		363348	0					
ANR	363597	CallExpression	"vdev_proc ( vdev , endpath )"		363348	1					
ANR	363598	Callee	vdev_proc		363348	0					
ANR	363599	Identifier	vdev_proc		363348	0					
ANR	363600	ArgumentList	vdev		363348	1					
ANR	363601	Argument	vdev		363348	0					
ANR	363602	Identifier	vdev		363348	0					
ANR	363603	Argument	endpath		363348	1					
ANR	363604	Identifier	endpath		363348	0					
ANR	363605	ArgumentList	vdev		363348	1					
ANR	363606	Argument	vdev		363348	0					
ANR	363607	Identifier	vdev		363348	0					
ANR	363608	Argument	gx_path_type_clip		363348	1					
ANR	363609	Identifier	gx_path_type_clip		363348	0					
ANR	363610	ReturnStatement	return code ;	797:4:28721:28732	363348	7	True				
ANR	363611	Identifier	code		363348	0					
ANR	363612	ReturnType	int		363348	1					
ANR	363613	Identifier	gdev_vector_write_clip_path		363348	2					
ANR	363614	ParameterList	"gx_device_vector * vdev , const gx_clip_path * pcpath"		363348	3					
ANR	363615	Parameter	gx_device_vector * vdev	758:28:27243:27265	363348	0	True				
ANR	363616	ParameterType	gx_device_vector *		363348	0					
ANR	363617	Identifier	vdev		363348	1					
ANR	363618	Parameter	const gx_clip_path * pcpath	759:28:27296:27322	363348	1	True				
ANR	363619	ParameterType	const gx_clip_path *		363348	0					
ANR	363620	Identifier	pcpath		363348	1					
ANR	363621	CFGEntryNode	ENTRY		363348		True				
ANR	363622	CFGExitNode	EXIT		363348		True				
ANR	363623	Symbol	& list -> single		363348						
ANR	363624	Symbol	endpath		363348						
ANR	363625	Symbol	gx_path_type_clip		363348						
ANR	363626	Symbol	code		363348						
ANR	363627	Symbol	prect -> ymin		363348						
ANR	363628	Symbol	dopath		363348						
ANR	363629	Symbol	prect -> next		363348						
ANR	363630	Symbol	"* vdev_proc ( vdev , dopath )"		363348						
ANR	363631	Symbol	pcpath -> rule		363348						
ANR	363632	Symbol	page_rect . xmax		363348						
ANR	363633	Symbol	pcpath -> path_valid		363348						
ANR	363634	Symbol	prect		363348						
ANR	363635	Symbol	gx_path_type_even_odd		363348						
ANR	363636	Symbol	& page_rect		363348						
ANR	363637	Symbol	* vdev_proc		363348						
ANR	363638	Symbol	beginpath		363348						
ANR	363639	Symbol	page_rect . ymin		363348						
ANR	363640	Symbol	vdev_proc		363348						
ANR	363641	Symbol	prect -> xmax		363348						
ANR	363642	Symbol	vdev -> height		363348						
ANR	363643	Symbol	pcpath		363348						
ANR	363644	Symbol	* prect		363348						
ANR	363645	Symbol	gx_rect_x_first		363348						
ANR	363646	Symbol	NULL		363348						
ANR	363647	Symbol	vdev -> width		363348						
ANR	363648	Symbol	"* vdev_proc ( vdev , endpath )"		363348						
ANR	363649	Symbol	vdev		363348						
ANR	363650	Symbol	false		363348						
ANR	363651	Symbol	page_rect . ymax		363348						
ANR	363652	Symbol	page_rect . next		363348						
ANR	363653	Symbol	prect -> xmin		363348						
ANR	363654	Symbol	gdev_vector_write_rectangle		363348						
ANR	363655	Symbol	list		363348						
ANR	363656	Symbol	gx_path_type_winding_number		363348						
ANR	363657	Symbol	* vdev		363348						
ANR	363658	Symbol	list -> head		363348						
ANR	363659	Symbol	"* vdev_proc ( vdev , beginpath )"		363348						
ANR	363660	Symbol	* pcpath		363348						
ANR	363661	Symbol	* list		363348						
ANR	363662	Symbol	prect -> ymax		363348						
ANR	363663	Symbol	int2fixed		363348						
ANR	363664	Symbol	page_rect . xmin		363348						
ANR	363665	Symbol	& pcpath -> path		363348						
ANR	363666	Symbol	page_rect		363348						
ANR	363667	Symbol	gx_cpath_list		363348						
ANR	363668	Function	gdev_vector_update_clip_path	801:0:28779:29418							
ANR	363669	FunctionDef	"gdev_vector_update_clip_path (gx_device_vector * vdev , const gx_clip_path * pcpath)"		363668	0					
ANR	363670	CompoundStatement		804:0:28895:29418	363668	0					
ANR	363671	IfStatement	if ( pcpath )		363668	0					
ANR	363672	Condition	pcpath	805:8:28905:28910	363668	0	True				
ANR	363673	Identifier	pcpath		363668	0					
ANR	363674	CompoundStatement		2:16:17:17	363668	1					
ANR	363675	IfStatement	if ( pcpath -> id != vdev -> clip_path_id )		363668	0					
ANR	363676	Condition	pcpath -> id != vdev -> clip_path_id	806:12:28927:28958	363668	0	True				
ANR	363677	EqualityExpression	pcpath -> id != vdev -> clip_path_id		363668	0		!=			
ANR	363678	PtrMemberAccess	pcpath -> id		363668	0					
ANR	363679	Identifier	pcpath		363668	0					
ANR	363680	Identifier	id		363668	1					
ANR	363681	PtrMemberAccess	vdev -> clip_path_id		363668	1					
ANR	363682	Identifier	vdev		363668	0					
ANR	363683	Identifier	clip_path_id		363668	1					
ANR	363684	CompoundStatement		4:12:79:131	363668	1					
ANR	363685	IdentifierDeclStatement	"int code = gdev_vector_write_clip_path ( vdev , pcpath ) ;"	807:12:28975:29027	363668	0	True				
ANR	363686	IdentifierDecl	"code = gdev_vector_write_clip_path ( vdev , pcpath )"		363668	0					
ANR	363687	IdentifierDeclType	int		363668	0					
ANR	363688	Identifier	code		363668	1					
ANR	363689	AssignmentExpression	"code = gdev_vector_write_clip_path ( vdev , pcpath )"		363668	2		=			
ANR	363690	Identifier	code		363668	0					
ANR	363691	CallExpression	"gdev_vector_write_clip_path ( vdev , pcpath )"		363668	1					
ANR	363692	Callee	gdev_vector_write_clip_path		363668	0					
ANR	363693	Identifier	gdev_vector_write_clip_path		363668	0					
ANR	363694	ArgumentList	vdev		363668	1					
ANR	363695	Argument	vdev		363668	0					
ANR	363696	Identifier	vdev		363668	0					
ANR	363697	Argument	pcpath		363668	1					
ANR	363698	Identifier	pcpath		363668	0					
ANR	363699	IfStatement	if ( code < 0 )		363668	1					
ANR	363700	Condition	code < 0	809:16:29046:29053	363668	0	True				
ANR	363701	RelationalExpression	code < 0		363668	0		<			
ANR	363702	Identifier	code		363668	0					
ANR	363703	PrimaryExpression	0		363668	1					
ANR	363704	ReturnStatement	return code ;	810:16:29072:29083	363668	1	True				
ANR	363705	Identifier	code		363668	0					
ANR	363706	ExpressionStatement	vdev -> clip_path_id = pcpath -> id	811:12:29097:29128	363668	2	True				
ANR	363707	AssignmentExpression	vdev -> clip_path_id = pcpath -> id		363668	0		=			
ANR	363708	PtrMemberAccess	vdev -> clip_path_id		363668	0					
ANR	363709	Identifier	vdev		363668	0					
ANR	363710	Identifier	clip_path_id		363668	1					
ANR	363711	PtrMemberAccess	pcpath -> id		363668	1					
ANR	363712	Identifier	pcpath		363668	0					
ANR	363713	Identifier	id		363668	1					
ANR	363714	ElseStatement	else		363668	0					
ANR	363715	CompoundStatement		10:11:255:255	363668	0					
ANR	363716	IfStatement	if ( vdev -> clip_path_id != vdev -> no_clip_path_id )		363668	0					
ANR	363717	Condition	vdev -> clip_path_id != vdev -> no_clip_path_id	814:12:29165:29207	363668	0	True				
ANR	363718	EqualityExpression	vdev -> clip_path_id != vdev -> no_clip_path_id		363668	0		!=			
ANR	363719	PtrMemberAccess	vdev -> clip_path_id		363668	0					
ANR	363720	Identifier	vdev		363668	0					
ANR	363721	Identifier	clip_path_id		363668	1					
ANR	363722	PtrMemberAccess	vdev -> no_clip_path_id		363668	1					
ANR	363723	Identifier	vdev		363668	0					
ANR	363724	Identifier	no_clip_path_id		363668	1					
ANR	363725	CompoundStatement		12:12:328:378	363668	1					
ANR	363726	IdentifierDeclStatement	"int code = gdev_vector_write_clip_path ( vdev , NULL ) ;"	815:12:29224:29274	363668	0	True				
ANR	363727	IdentifierDecl	"code = gdev_vector_write_clip_path ( vdev , NULL )"		363668	0					
ANR	363728	IdentifierDeclType	int		363668	0					
ANR	363729	Identifier	code		363668	1					
ANR	363730	AssignmentExpression	"code = gdev_vector_write_clip_path ( vdev , NULL )"		363668	2		=			
ANR	363731	Identifier	code		363668	0					
ANR	363732	CallExpression	"gdev_vector_write_clip_path ( vdev , NULL )"		363668	1					
ANR	363733	Callee	gdev_vector_write_clip_path		363668	0					
ANR	363734	Identifier	gdev_vector_write_clip_path		363668	0					
ANR	363735	ArgumentList	vdev		363668	1					
ANR	363736	Argument	vdev		363668	0					
ANR	363737	Identifier	vdev		363668	0					
ANR	363738	Argument	NULL		363668	1					
ANR	363739	Identifier	NULL		363668	0					
ANR	363740	IfStatement	if ( code < 0 )		363668	1					
ANR	363741	Condition	code < 0	817:16:29293:29300	363668	0	True				
ANR	363742	RelationalExpression	code < 0		363668	0		<			
ANR	363743	Identifier	code		363668	0					
ANR	363744	PrimaryExpression	0		363668	1					
ANR	363745	ReturnStatement	return code ;	818:16:29319:29330	363668	1	True				
ANR	363746	Identifier	code		363668	0					
ANR	363747	ExpressionStatement	vdev -> clip_path_id = vdev -> no_clip_path_id	819:12:29344:29386	363668	2	True				
ANR	363748	AssignmentExpression	vdev -> clip_path_id = vdev -> no_clip_path_id		363668	0		=			
ANR	363749	PtrMemberAccess	vdev -> clip_path_id		363668	0					
ANR	363750	Identifier	vdev		363668	0					
ANR	363751	Identifier	clip_path_id		363668	1					
ANR	363752	PtrMemberAccess	vdev -> no_clip_path_id		363668	1					
ANR	363753	Identifier	vdev		363668	0					
ANR	363754	Identifier	no_clip_path_id		363668	1					
ANR	363755	ReturnStatement	return 0 ;	822:4:29408:29416	363668	1	True				
ANR	363756	PrimaryExpression	0		363668	0					
ANR	363757	ReturnType	int		363668	1					
ANR	363758	Identifier	gdev_vector_update_clip_path		363668	2					
ANR	363759	ParameterList	"gx_device_vector * vdev , const gx_clip_path * pcpath"		363668	3					
ANR	363760	Parameter	gx_device_vector * vdev	802:29:28812:28834	363668	0	True				
ANR	363761	ParameterType	gx_device_vector *		363668	0					
ANR	363762	Identifier	vdev		363668	1					
ANR	363763	Parameter	const gx_clip_path * pcpath	803:29:28866:28892	363668	1	True				
ANR	363764	ParameterType	const gx_clip_path *		363668	0					
ANR	363765	Identifier	pcpath		363668	1					
ANR	363766	CFGEntryNode	ENTRY		363668		True				
ANR	363767	CFGExitNode	EXIT		363668		True				
ANR	363768	Symbol	* vdev		363668						
ANR	363769	Symbol	* pcpath		363668						
ANR	363770	Symbol	vdev -> clip_path_id		363668						
ANR	363771	Symbol	code		363668						
ANR	363772	Symbol	gdev_vector_write_clip_path		363668						
ANR	363773	Symbol	NULL		363668						
ANR	363774	Symbol	vdev		363668						
ANR	363775	Symbol	vdev -> no_clip_path_id		363668						
ANR	363776	Symbol	pcpath -> id		363668						
ANR	363777	Symbol	pcpath		363668						
ANR	363778	Function	gdev_vector_close_file	826:0:29461:30586							
ANR	363779	FunctionDef	gdev_vector_close_file (gx_device_vector * vdev)		363778	0					
ANR	363780	CompoundStatement		828:0:29513:30586	363778	0					
ANR	363781	IdentifierDeclStatement	FILE * f = vdev -> file ;	829:4:29519:29539	363778	0	True				
ANR	363782	IdentifierDecl	* f = vdev -> file		363778	0					
ANR	363783	IdentifierDeclType	FILE *		363778	0					
ANR	363784	Identifier	f		363778	1					
ANR	363785	AssignmentExpression	* f = vdev -> file		363778	2		=			
ANR	363786	Identifier	f		363778	0					
ANR	363787	PtrMemberAccess	vdev -> file		363778	1					
ANR	363788	Identifier	vdev		363778	0					
ANR	363789	Identifier	file		363778	1					
ANR	363790	IdentifierDeclStatement	int err ;	830:4:29545:29552	363778	1	True				
ANR	363791	IdentifierDecl	err		363778	0					
ANR	363792	IdentifierDeclType	int		363778	0					
ANR	363793	Identifier	err		363778	1					
ANR	363794	IfStatement	if ( vdev -> dash_pattern )		363778	2					
ANR	363795	Condition	vdev -> dash_pattern	832:8:29563:29580	363778	0	True				
ANR	363796	PtrMemberAccess	vdev -> dash_pattern		363778	0					
ANR	363797	Identifier	vdev		363778	0					
ANR	363798	Identifier	dash_pattern		363778	1					
ANR	363799	CompoundStatement		5:28:69:69	363778	1					
ANR	363800	ExpressionStatement	"gs_free_object ( vdev -> memory -> stable_memory , vdev -> dash_pattern , ""vector free dash pattern"" )"	833:8:29593:29684	363778	0	True				
ANR	363801	CallExpression	"gs_free_object ( vdev -> memory -> stable_memory , vdev -> dash_pattern , ""vector free dash pattern"" )"		363778	0					
ANR	363802	Callee	gs_free_object		363778	0					
ANR	363803	Identifier	gs_free_object		363778	0					
ANR	363804	ArgumentList	vdev -> memory -> stable_memory		363778	1					
ANR	363805	Argument	vdev -> memory -> stable_memory		363778	0					
ANR	363806	PtrMemberAccess	vdev -> memory -> stable_memory		363778	0					
ANR	363807	PtrMemberAccess	vdev -> memory		363778	0					
ANR	363808	Identifier	vdev		363778	0					
ANR	363809	Identifier	memory		363778	1					
ANR	363810	Identifier	stable_memory		363778	1					
ANR	363811	Argument	vdev -> dash_pattern		363778	1					
ANR	363812	PtrMemberAccess	vdev -> dash_pattern		363778	0					
ANR	363813	Identifier	vdev		363778	0					
ANR	363814	Identifier	dash_pattern		363778	1					
ANR	363815	Argument	"""vector free dash pattern"""		363778	2					
ANR	363816	PrimaryExpression	"""vector free dash pattern"""		363778	0					
ANR	363817	ExpressionStatement	vdev -> dash_pattern = 0	834:8:29694:29716	363778	1	True				
ANR	363818	AssignmentExpression	vdev -> dash_pattern = 0		363778	0		=			
ANR	363819	PtrMemberAccess	vdev -> dash_pattern		363778	0					
ANR	363820	Identifier	vdev		363778	0					
ANR	363821	Identifier	dash_pattern		363778	1					
ANR	363822	PrimaryExpression	0		363778	1					
ANR	363823	IfStatement	if ( vdev -> bbox_device )		363778	3					
ANR	363824	Condition	vdev -> bbox_device	836:8:29732:29748	363778	0	True				
ANR	363825	PtrMemberAccess	vdev -> bbox_device		363778	0					
ANR	363826	Identifier	vdev		363778	0					
ANR	363827	Identifier	bbox_device		363778	1					
ANR	363828	CompoundStatement		9:27:237:237	363778	1					
ANR	363829	ExpressionStatement	"rc_decrement ( vdev -> bbox_device -> icc_struct , ""vector_close(bbox_device->icc_struct"" )"	837:8:29761:29844	363778	0	True				
ANR	363830	CallExpression	"rc_decrement ( vdev -> bbox_device -> icc_struct , ""vector_close(bbox_device->icc_struct"" )"		363778	0					
ANR	363831	Callee	rc_decrement		363778	0					
ANR	363832	Identifier	rc_decrement		363778	0					
ANR	363833	ArgumentList	vdev -> bbox_device -> icc_struct		363778	1					
ANR	363834	Argument	vdev -> bbox_device -> icc_struct		363778	0					
ANR	363835	PtrMemberAccess	vdev -> bbox_device -> icc_struct		363778	0					
ANR	363836	PtrMemberAccess	vdev -> bbox_device		363778	0					
ANR	363837	Identifier	vdev		363778	0					
ANR	363838	Identifier	bbox_device		363778	1					
ANR	363839	Identifier	icc_struct		363778	1					
ANR	363840	Argument	"""vector_close(bbox_device->icc_struct"""		363778	1					
ANR	363841	PrimaryExpression	"""vector_close(bbox_device->icc_struct"""		363778	0					
ANR	363842	ExpressionStatement	vdev -> bbox_device -> icc_struct = NULL	838:8:29854:29890	363778	1	True				
ANR	363843	AssignmentExpression	vdev -> bbox_device -> icc_struct = NULL		363778	0		=			
ANR	363844	PtrMemberAccess	vdev -> bbox_device -> icc_struct		363778	0					
ANR	363845	PtrMemberAccess	vdev -> bbox_device		363778	0					
ANR	363846	Identifier	vdev		363778	0					
ANR	363847	Identifier	bbox_device		363778	1					
ANR	363848	Identifier	icc_struct		363778	1					
ANR	363849	Identifier	NULL		363778	1					
ANR	363850	ExpressionStatement	"gs_free_object ( vdev -> v_memory , vdev -> bbox_device , ""vector_close(bbox_device)"" )"	839:8:29900:29997	363778	2	True				
ANR	363851	CallExpression	"gs_free_object ( vdev -> v_memory , vdev -> bbox_device , ""vector_close(bbox_device)"" )"		363778	0					
ANR	363852	Callee	gs_free_object		363778	0					
ANR	363853	Identifier	gs_free_object		363778	0					
ANR	363854	ArgumentList	vdev -> v_memory		363778	1					
ANR	363855	Argument	vdev -> v_memory		363778	0					
ANR	363856	PtrMemberAccess	vdev -> v_memory		363778	0					
ANR	363857	Identifier	vdev		363778	0					
ANR	363858	Identifier	v_memory		363778	1					
ANR	363859	Argument	vdev -> bbox_device		363778	1					
ANR	363860	PtrMemberAccess	vdev -> bbox_device		363778	0					
ANR	363861	Identifier	vdev		363778	0					
ANR	363862	Identifier	bbox_device		363778	1					
ANR	363863	Argument	"""vector_close(bbox_device)"""		363778	2					
ANR	363864	PrimaryExpression	"""vector_close(bbox_device)"""		363778	0					
ANR	363865	ExpressionStatement	vdev -> bbox_device = 0	841:8:30007:30028	363778	3	True				
ANR	363866	AssignmentExpression	vdev -> bbox_device = 0		363778	0		=			
ANR	363867	PtrMemberAccess	vdev -> bbox_device		363778	0					
ANR	363868	Identifier	vdev		363778	0					
ANR	363869	Identifier	bbox_device		363778	1					
ANR	363870	PrimaryExpression	0		363778	1					
ANR	363871	IfStatement	if ( vdev -> strm )		363778	4					
ANR	363872	Condition	vdev -> strm	844:8:30045:30054	363778	0	True				
ANR	363873	PtrMemberAccess	vdev -> strm		363778	0					
ANR	363874	Identifier	vdev		363778	0					
ANR	363875	Identifier	strm		363778	1					
ANR	363876	CompoundStatement		17:20:543:543	363778	1					
ANR	363877	ExpressionStatement	sclose ( vdev -> strm )	845:8:30067:30085	363778	0	True				
ANR	363878	CallExpression	sclose ( vdev -> strm )		363778	0					
ANR	363879	Callee	sclose		363778	0					
ANR	363880	Identifier	sclose		363778	0					
ANR	363881	ArgumentList	vdev -> strm		363778	1					
ANR	363882	Argument	vdev -> strm		363778	0					
ANR	363883	PtrMemberAccess	vdev -> strm		363778	0					
ANR	363884	Identifier	vdev		363778	0					
ANR	363885	Identifier	strm		363778	1					
ANR	363886	ExpressionStatement	"gs_free_object ( vdev -> v_memory , vdev -> strm , ""vector_close(strm)"" )"	846:8:30095:30159	363778	1	True				
ANR	363887	CallExpression	"gs_free_object ( vdev -> v_memory , vdev -> strm , ""vector_close(strm)"" )"		363778	0					
ANR	363888	Callee	gs_free_object		363778	0					
ANR	363889	Identifier	gs_free_object		363778	0					
ANR	363890	ArgumentList	vdev -> v_memory		363778	1					
ANR	363891	Argument	vdev -> v_memory		363778	0					
ANR	363892	PtrMemberAccess	vdev -> v_memory		363778	0					
ANR	363893	Identifier	vdev		363778	0					
ANR	363894	Identifier	v_memory		363778	1					
ANR	363895	Argument	vdev -> strm		363778	1					
ANR	363896	PtrMemberAccess	vdev -> strm		363778	0					
ANR	363897	Identifier	vdev		363778	0					
ANR	363898	Identifier	strm		363778	1					
ANR	363899	Argument	"""vector_close(strm)"""		363778	2					
ANR	363900	PrimaryExpression	"""vector_close(strm)"""		363778	0					
ANR	363901	ExpressionStatement	vdev -> strm = 0	847:8:30169:30183	363778	2	True				
ANR	363902	AssignmentExpression	vdev -> strm = 0		363778	0		=			
ANR	363903	PtrMemberAccess	vdev -> strm		363778	0					
ANR	363904	Identifier	vdev		363778	0					
ANR	363905	Identifier	strm		363778	1					
ANR	363906	PrimaryExpression	0		363778	1					
ANR	363907	ExpressionStatement	"gs_free_object ( vdev -> v_memory , vdev -> strmbuf , ""vector_close(strmbuf)"" )"	848:8:30193:30263	363778	3	True				
ANR	363908	CallExpression	"gs_free_object ( vdev -> v_memory , vdev -> strmbuf , ""vector_close(strmbuf)"" )"		363778	0					
ANR	363909	Callee	gs_free_object		363778	0					
ANR	363910	Identifier	gs_free_object		363778	0					
ANR	363911	ArgumentList	vdev -> v_memory		363778	1					
ANR	363912	Argument	vdev -> v_memory		363778	0					
ANR	363913	PtrMemberAccess	vdev -> v_memory		363778	0					
ANR	363914	Identifier	vdev		363778	0					
ANR	363915	Identifier	v_memory		363778	1					
ANR	363916	Argument	vdev -> strmbuf		363778	1					
ANR	363917	PtrMemberAccess	vdev -> strmbuf		363778	0					
ANR	363918	Identifier	vdev		363778	0					
ANR	363919	Identifier	strmbuf		363778	1					
ANR	363920	Argument	"""vector_close(strmbuf)"""		363778	2					
ANR	363921	PrimaryExpression	"""vector_close(strmbuf)"""		363778	0					
ANR	363922	ExpressionStatement	vdev -> strmbuf = 0	849:8:30273:30290	363778	4	True				
ANR	363923	AssignmentExpression	vdev -> strmbuf = 0		363778	0		=			
ANR	363924	PtrMemberAccess	vdev -> strmbuf		363778	0					
ANR	363925	Identifier	vdev		363778	0					
ANR	363926	Identifier	strmbuf		363778	1					
ANR	363927	PrimaryExpression	0		363778	1					
ANR	363928	ExpressionStatement	vdev -> file = 0	851:4:30302:30316	363778	5	True				
ANR	363929	AssignmentExpression	vdev -> file = 0		363778	0		=			
ANR	363930	PtrMemberAccess	vdev -> file		363778	0					
ANR	363931	Identifier	vdev		363778	0					
ANR	363932	Identifier	file		363778	1					
ANR	363933	PrimaryExpression	0		363778	1					
ANR	363934	IfStatement	if ( f )		363778	6					
ANR	363935	Condition	f	852:8:30326:30326	363778	0	True				
ANR	363936	Identifier	f		363778	0					
ANR	363937	CompoundStatement		25:11:815:815	363778	1					
ANR	363938	ExpressionStatement	err = ferror ( f )	853:8:30339:30354	363778	0	True				
ANR	363939	AssignmentExpression	err = ferror ( f )		363778	0		=			
ANR	363940	Identifier	err		363778	0					
ANR	363941	CallExpression	ferror ( f )		363778	1					
ANR	363942	Callee	ferror		363778	0					
ANR	363943	Identifier	ferror		363778	0					
ANR	363944	ArgumentList	f		363778	1					
ANR	363945	Argument	f		363778	0					
ANR	363946	Identifier	f		363778	0					
ANR	363947	IfStatement	"if ( gx_device_close_output_file ( ( gx_device * ) vdev , vdev -> fname , f ) != 0 || err != 0 )"		363778	1					
ANR	363948	Condition	"gx_device_close_output_file ( ( gx_device * ) vdev , vdev -> fname , f ) != 0 || err != 0"	855:12:30425:30519	363778	0	True				
ANR	363949	OrExpression	"gx_device_close_output_file ( ( gx_device * ) vdev , vdev -> fname , f ) != 0 || err != 0"		363778	0		||			
ANR	363950	EqualityExpression	"gx_device_close_output_file ( ( gx_device * ) vdev , vdev -> fname , f ) != 0"		363778	0		!=			
ANR	363951	CallExpression	"gx_device_close_output_file ( ( gx_device * ) vdev , vdev -> fname , f )"		363778	0					
ANR	363952	Callee	gx_device_close_output_file		363778	0					
ANR	363953	Identifier	gx_device_close_output_file		363778	0					
ANR	363954	ArgumentList	( gx_device * ) vdev		363778	1					
ANR	363955	Argument	( gx_device * ) vdev		363778	0					
ANR	363956	CastExpression	( gx_device * ) vdev		363778	0					
ANR	363957	CastTarget	gx_device *		363778	0					
ANR	363958	Identifier	vdev		363778	1					
ANR	363959	Argument	vdev -> fname		363778	1					
ANR	363960	PtrMemberAccess	vdev -> fname		363778	0					
ANR	363961	Identifier	vdev		363778	0					
ANR	363962	Identifier	fname		363778	1					
ANR	363963	Argument	f		363778	2					
ANR	363964	Identifier	f		363778	0					
ANR	363965	PrimaryExpression	0		363778	1					
ANR	363966	EqualityExpression	err != 0		363778	1		!=			
ANR	363967	Identifier	err		363778	0					
ANR	363968	PrimaryExpression	0		363778	1					
ANR	363969	ExpressionStatement	return_error ( gs_error_ioerror )	857:12:30534:30564	363778	1	True				
ANR	363970	CallExpression	return_error ( gs_error_ioerror )		363778	0					
ANR	363971	Callee	return_error		363778	0					
ANR	363972	Identifier	return_error		363778	0					
ANR	363973	ArgumentList	gs_error_ioerror		363778	1					
ANR	363974	Argument	gs_error_ioerror		363778	0					
ANR	363975	Identifier	gs_error_ioerror		363778	0					
ANR	363976	ReturnStatement	return 0 ;	859:4:30576:30584	363778	7	True				
ANR	363977	PrimaryExpression	0		363778	0					
ANR	363978	ReturnType	int		363778	1					
ANR	363979	Identifier	gdev_vector_close_file		363778	2					
ANR	363980	ParameterList	gx_device_vector * vdev		363778	3					
ANR	363981	Parameter	gx_device_vector * vdev	827:23:29488:29510	363778	0	True				
ANR	363982	ParameterType	gx_device_vector *		363778	0					
ANR	363983	Identifier	vdev		363778	1					
ANR	363984	CFGEntryNode	ENTRY		363778		True				
ANR	363985	CFGExitNode	EXIT		363778		True				
ANR	363986	Symbol	vdev -> bbox_device		363778						
ANR	363987	Symbol	vdev -> strmbuf		363778						
ANR	363988	Symbol	NULL		363778						
ANR	363989	Symbol	gx_device_close_output_file		363778						
ANR	363990	Symbol	err		363778						
ANR	363991	Symbol	f		363778						
ANR	363992	Symbol	vdev		363778						
ANR	363993	Symbol	gs_error_ioerror		363778						
ANR	363994	Symbol	vdev -> strm		363778						
ANR	363995	Symbol	* vdev -> memory		363778						
ANR	363996	Symbol	vdev -> v_memory		363778						
ANR	363997	Symbol	vdev -> fname		363778						
ANR	363998	Symbol	* vdev		363778						
ANR	363999	Symbol	vdev -> file		363778						
ANR	364000	Symbol	ferror		363778						
ANR	364001	Symbol	vdev -> bbox_device -> icc_struct		363778						
ANR	364002	Symbol	* * vdev		363778						
ANR	364003	Symbol	vdev -> dash_pattern		363778						
ANR	364004	Symbol	* vdev -> bbox_device		363778						
ANR	364005	Symbol	vdev -> memory -> stable_memory		363778						
ANR	364006	Symbol	vdev -> memory		363778						
ANR	364007	Function	gdev_vector_begin_image	865:0:30691:32690							
ANR	364008	FunctionDef	"gdev_vector_begin_image (gx_device_vector * vdev , const gs_gstate * pgs , const gs_image_t * pim , gs_image_format_t format , const gs_int_rect * prect , const gx_drawing_color * pdcolor , const gx_clip_path * pcpath , gs_memory_t * mem , const gx_image_enum_procs_t * pprocs , gdev_vector_image_enum_t * pie)"		364007	0					
ANR	364009	CompoundStatement		872:0:31102:32690	364007	0					
ANR	364010	IdentifierDeclStatement	const gs_color_space * pcs = pim -> ColorSpace ;	873:4:31108:31151	364007	0	True				
ANR	364011	IdentifierDecl	* pcs = pim -> ColorSpace		364007	0					
ANR	364012	IdentifierDeclType	const gs_color_space *		364007	0					
ANR	364013	Identifier	pcs		364007	1					
ANR	364014	AssignmentExpression	* pcs = pim -> ColorSpace		364007	2		=			
ANR	364015	Identifier	pcs		364007	0					
ANR	364016	PtrMemberAccess	pim -> ColorSpace		364007	1					
ANR	364017	Identifier	pim		364007	0					
ANR	364018	Identifier	ColorSpace		364007	1					
ANR	364019	IdentifierDeclStatement	int num_components ;	874:4:31157:31175	364007	1	True				
ANR	364020	IdentifierDecl	num_components		364007	0					
ANR	364021	IdentifierDeclType	int		364007	0					
ANR	364022	Identifier	num_components		364007	1					
ANR	364023	IdentifierDeclStatement	int bits_per_pixel ;	875:4:31181:31199	364007	2	True				
ANR	364024	IdentifierDecl	bits_per_pixel		364007	0					
ANR	364025	IdentifierDeclType	int		364007	0					
ANR	364026	Identifier	bits_per_pixel		364007	1					
ANR	364027	IdentifierDeclStatement	int code ;	876:4:31205:31213	364007	3	True				
ANR	364028	IdentifierDecl	code		364007	0					
ANR	364029	IdentifierDeclType	int		364007	0					
ANR	364030	Identifier	code		364007	1					
ANR	364031	IfStatement	if ( pim -> ImageMask )		364007	4					
ANR	364032	Condition	pim -> ImageMask	878:8:31224:31237	364007	0	True				
ANR	364033	PtrMemberAccess	pim -> ImageMask		364007	0					
ANR	364034	Identifier	pim		364007	0					
ANR	364035	Identifier	ImageMask		364007	1					
ANR	364036	ExpressionStatement	bits_per_pixel = num_components = 1	879:8:31248:31283	364007	1	True				
ANR	364037	AssignmentExpression	bits_per_pixel = num_components = 1		364007	0		=			
ANR	364038	Identifier	bits_per_pixel		364007	0					
ANR	364039	AssignmentExpression	num_components = 1		364007	1		=			
ANR	364040	Identifier	num_components		364007	0					
ANR	364041	PrimaryExpression	1		364007	1					
ANR	364042	ElseStatement	else		364007	0					
ANR	364043	ExpressionStatement	"num_components = gs_color_space_num_components ( pcs ) , bits_per_pixel = pim -> BitsPerComponent"	881:8:31302:31405	364007	0	True				
ANR	364044	Expression	"num_components = gs_color_space_num_components ( pcs ) , bits_per_pixel = pim -> BitsPerComponent"		364007	0					
ANR	364045	AssignmentExpression	num_components = gs_color_space_num_components ( pcs )		364007	0		=			
ANR	364046	Identifier	num_components		364007	0					
ANR	364047	CallExpression	gs_color_space_num_components ( pcs )		364007	1					
ANR	364048	Callee	gs_color_space_num_components		364007	0					
ANR	364049	Identifier	gs_color_space_num_components		364007	0					
ANR	364050	ArgumentList	pcs		364007	1					
ANR	364051	Argument	pcs		364007	0					
ANR	364052	Identifier	pcs		364007	0					
ANR	364053	AssignmentExpression	bits_per_pixel = pim -> BitsPerComponent		364007	1		=			
ANR	364054	Identifier	bits_per_pixel		364007	0					
ANR	364055	PtrMemberAccess	pim -> BitsPerComponent		364007	1					
ANR	364056	Identifier	pim		364007	0					
ANR	364057	Identifier	BitsPerComponent		364007	1					
ANR	364058	ExpressionStatement	"code = gx_image_enum_common_init ( ( gx_image_enum_common_t * ) pie , ( const gs_data_image_t * ) pim , pprocs , ( gx_device * ) vdev , num_components , format )"	883:4:31411:31668	364007	5	True				
ANR	364059	AssignmentExpression	"code = gx_image_enum_common_init ( ( gx_image_enum_common_t * ) pie , ( const gs_data_image_t * ) pim , pprocs , ( gx_device * ) vdev , num_components , format )"		364007	0		=			
ANR	364060	Identifier	code		364007	0					
ANR	364061	CallExpression	"gx_image_enum_common_init ( ( gx_image_enum_common_t * ) pie , ( const gs_data_image_t * ) pim , pprocs , ( gx_device * ) vdev , num_components , format )"		364007	1					
ANR	364062	Callee	gx_image_enum_common_init		364007	0					
ANR	364063	Identifier	gx_image_enum_common_init		364007	0					
ANR	364064	ArgumentList	( gx_image_enum_common_t * ) pie		364007	1					
ANR	364065	Argument	( gx_image_enum_common_t * ) pie		364007	0					
ANR	364066	CastExpression	( gx_image_enum_common_t * ) pie		364007	0					
ANR	364067	CastTarget	gx_image_enum_common_t *		364007	0					
ANR	364068	Identifier	pie		364007	1					
ANR	364069	Argument	( const gs_data_image_t * ) pim		364007	1					
ANR	364070	CastExpression	( const gs_data_image_t * ) pim		364007	0					
ANR	364071	CastTarget	const gs_data_image_t *		364007	0					
ANR	364072	Identifier	pim		364007	1					
ANR	364073	Argument	pprocs		364007	2					
ANR	364074	Identifier	pprocs		364007	0					
ANR	364075	Argument	( gx_device * ) vdev		364007	3					
ANR	364076	CastExpression	( gx_device * ) vdev		364007	0					
ANR	364077	CastTarget	gx_device *		364007	0					
ANR	364078	Identifier	vdev		364007	1					
ANR	364079	Argument	num_components		364007	4					
ANR	364080	Identifier	num_components		364007	0					
ANR	364081	Argument	format		364007	5					
ANR	364082	Identifier	format		364007	0					
ANR	364083	IfStatement	if ( code < 0 )		364007	6					
ANR	364084	Condition	code < 0	887:8:31678:31685	364007	0	True				
ANR	364085	RelationalExpression	code < 0		364007	0		<			
ANR	364086	Identifier	code		364007	0					
ANR	364087	PrimaryExpression	0		364007	1					
ANR	364088	ReturnStatement	return code ;	888:8:31696:31707	364007	1	True				
ANR	364089	Identifier	code		364007	0					
ANR	364090	ExpressionStatement	pie -> bits_per_pixel = bits_per_pixel * num_components / pie -> num_planes	889:4:31713:31792	364007	7	True				
ANR	364091	AssignmentExpression	pie -> bits_per_pixel = bits_per_pixel * num_components / pie -> num_planes		364007	0		=			
ANR	364092	PtrMemberAccess	pie -> bits_per_pixel		364007	0					
ANR	364093	Identifier	pie		364007	0					
ANR	364094	Identifier	bits_per_pixel		364007	1					
ANR	364095	MultiplicativeExpression	bits_per_pixel * num_components / pie -> num_planes		364007	1		*			
ANR	364096	Identifier	bits_per_pixel		364007	0					
ANR	364097	MultiplicativeExpression	num_components / pie -> num_planes		364007	1		/			
ANR	364098	Identifier	num_components		364007	0					
ANR	364099	PtrMemberAccess	pie -> num_planes		364007	1					
ANR	364100	Identifier	pie		364007	0					
ANR	364101	Identifier	num_planes		364007	1					
ANR	364102	ExpressionStatement	pie -> default_info = 0	891:4:31798:31819	364007	8	True				
ANR	364103	AssignmentExpression	pie -> default_info = 0		364007	0		=			
ANR	364104	PtrMemberAccess	pie -> default_info		364007	0					
ANR	364105	Identifier	pie		364007	0					
ANR	364106	Identifier	default_info		364007	1					
ANR	364107	PrimaryExpression	0		364007	1					
ANR	364108	ExpressionStatement	pie -> bbox_info = 0	892:4:31825:31843	364007	9	True				
ANR	364109	AssignmentExpression	pie -> bbox_info = 0		364007	0		=			
ANR	364110	PtrMemberAccess	pie -> bbox_info		364007	0					
ANR	364111	Identifier	pie		364007	0					
ANR	364112	Identifier	bbox_info		364007	1					
ANR	364113	PrimaryExpression	0		364007	1					
ANR	364114	IfStatement	"if ( ( code = gdev_vector_update_log_op ( vdev , pgs -> log_op ) ) < 0 || ( code = gdev_vector_update_clip_path ( vdev , pcpath ) ) < 0 || ( ( pim -> ImageMask || ( pim -> CombineWithColor && rop3_uses_T ( pgs -> log_op ) ) ) && ( code = gdev_vector_update_fill_color ( vdev , pgs , pdcolor ) ) < 0 ) || ( vdev -> bbox_device && ( code = ( * dev_proc ( vdev -> bbox_device , begin_image ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , pim , format , prect , pdcolor , pcpath , mem , & pie -> bbox_info ) ) < 0 ) )"		364007	10					
ANR	364115	Condition	"( code = gdev_vector_update_log_op ( vdev , pgs -> log_op ) ) < 0 || ( code = gdev_vector_update_clip_path ( vdev , pcpath ) ) < 0 || ( ( pim -> ImageMask || ( pim -> CombineWithColor && rop3_uses_T ( pgs -> log_op ) ) ) && ( code = gdev_vector_update_fill_color ( vdev , pgs , pdcolor ) ) < 0 ) || ( vdev -> bbox_device && ( code = ( * dev_proc ( vdev -> bbox_device , begin_image ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , pim , format , prect , pdcolor , pcpath , mem , & pie -> bbox_info ) ) < 0 )"	893:8:31853:32365	364007	0	True				
ANR	364116	OrExpression	"( code = gdev_vector_update_log_op ( vdev , pgs -> log_op ) ) < 0 || ( code = gdev_vector_update_clip_path ( vdev , pcpath ) ) < 0 || ( ( pim -> ImageMask || ( pim -> CombineWithColor && rop3_uses_T ( pgs -> log_op ) ) ) && ( code = gdev_vector_update_fill_color ( vdev , pgs , pdcolor ) ) < 0 ) || ( vdev -> bbox_device && ( code = ( * dev_proc ( vdev -> bbox_device , begin_image ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , pim , format , prect , pdcolor , pcpath , mem , & pie -> bbox_info ) ) < 0 )"		364007	0		||			
ANR	364117	RelationalExpression	"( code = gdev_vector_update_log_op ( vdev , pgs -> log_op ) ) < 0"		364007	0		<			
ANR	364118	AssignmentExpression	"code = gdev_vector_update_log_op ( vdev , pgs -> log_op )"		364007	0		=			
ANR	364119	Identifier	code		364007	0					
ANR	364120	CallExpression	"gdev_vector_update_log_op ( vdev , pgs -> log_op )"		364007	1					
ANR	364121	Callee	gdev_vector_update_log_op		364007	0					
ANR	364122	Identifier	gdev_vector_update_log_op		364007	0					
ANR	364123	ArgumentList	vdev		364007	1					
ANR	364124	Argument	vdev		364007	0					
ANR	364125	Identifier	vdev		364007	0					
ANR	364126	Argument	pgs -> log_op		364007	1					
ANR	364127	PtrMemberAccess	pgs -> log_op		364007	0					
ANR	364128	Identifier	pgs		364007	0					
ANR	364129	Identifier	log_op		364007	1					
ANR	364130	PrimaryExpression	0		364007	1					
ANR	364131	OrExpression	"( code = gdev_vector_update_clip_path ( vdev , pcpath ) ) < 0 || ( ( pim -> ImageMask || ( pim -> CombineWithColor && rop3_uses_T ( pgs -> log_op ) ) ) && ( code = gdev_vector_update_fill_color ( vdev , pgs , pdcolor ) ) < 0 ) || ( vdev -> bbox_device && ( code = ( * dev_proc ( vdev -> bbox_device , begin_image ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , pim , format , prect , pdcolor , pcpath , mem , & pie -> bbox_info ) ) < 0 )"		364007	1		||			
ANR	364132	RelationalExpression	"( code = gdev_vector_update_clip_path ( vdev , pcpath ) ) < 0"		364007	0		<			
ANR	364133	AssignmentExpression	"code = gdev_vector_update_clip_path ( vdev , pcpath )"		364007	0		=			
ANR	364134	Identifier	code		364007	0					
ANR	364135	CallExpression	"gdev_vector_update_clip_path ( vdev , pcpath )"		364007	1					
ANR	364136	Callee	gdev_vector_update_clip_path		364007	0					
ANR	364137	Identifier	gdev_vector_update_clip_path		364007	0					
ANR	364138	ArgumentList	vdev		364007	1					
ANR	364139	Argument	vdev		364007	0					
ANR	364140	Identifier	vdev		364007	0					
ANR	364141	Argument	pcpath		364007	1					
ANR	364142	Identifier	pcpath		364007	0					
ANR	364143	PrimaryExpression	0		364007	1					
ANR	364144	OrExpression	"( ( pim -> ImageMask || ( pim -> CombineWithColor && rop3_uses_T ( pgs -> log_op ) ) ) && ( code = gdev_vector_update_fill_color ( vdev , pgs , pdcolor ) ) < 0 ) || ( vdev -> bbox_device && ( code = ( * dev_proc ( vdev -> bbox_device , begin_image ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , pim , format , prect , pdcolor , pcpath , mem , & pie -> bbox_info ) ) < 0 )"		364007	1		||			
ANR	364145	AndExpression	"( pim -> ImageMask || ( pim -> CombineWithColor && rop3_uses_T ( pgs -> log_op ) ) ) && ( code = gdev_vector_update_fill_color ( vdev , pgs , pdcolor ) ) < 0"		364007	0		&&			
ANR	364146	OrExpression	pim -> ImageMask || ( pim -> CombineWithColor && rop3_uses_T ( pgs -> log_op ) )		364007	0		||			
ANR	364147	PtrMemberAccess	pim -> ImageMask		364007	0					
ANR	364148	Identifier	pim		364007	0					
ANR	364149	Identifier	ImageMask		364007	1					
ANR	364150	AndExpression	pim -> CombineWithColor && rop3_uses_T ( pgs -> log_op )		364007	1		&&			
ANR	364151	PtrMemberAccess	pim -> CombineWithColor		364007	0					
ANR	364152	Identifier	pim		364007	0					
ANR	364153	Identifier	CombineWithColor		364007	1					
ANR	364154	CallExpression	rop3_uses_T ( pgs -> log_op )		364007	1					
ANR	364155	Callee	rop3_uses_T		364007	0					
ANR	364156	Identifier	rop3_uses_T		364007	0					
ANR	364157	ArgumentList	pgs -> log_op		364007	1					
ANR	364158	Argument	pgs -> log_op		364007	0					
ANR	364159	PtrMemberAccess	pgs -> log_op		364007	0					
ANR	364160	Identifier	pgs		364007	0					
ANR	364161	Identifier	log_op		364007	1					
ANR	364162	RelationalExpression	"( code = gdev_vector_update_fill_color ( vdev , pgs , pdcolor ) ) < 0"		364007	1		<			
ANR	364163	AssignmentExpression	"code = gdev_vector_update_fill_color ( vdev , pgs , pdcolor )"		364007	0		=			
ANR	364164	Identifier	code		364007	0					
ANR	364165	CallExpression	"gdev_vector_update_fill_color ( vdev , pgs , pdcolor )"		364007	1					
ANR	364166	Callee	gdev_vector_update_fill_color		364007	0					
ANR	364167	Identifier	gdev_vector_update_fill_color		364007	0					
ANR	364168	ArgumentList	vdev		364007	1					
ANR	364169	Argument	vdev		364007	0					
ANR	364170	Identifier	vdev		364007	0					
ANR	364171	Argument	pgs		364007	1					
ANR	364172	Identifier	pgs		364007	0					
ANR	364173	Argument	pdcolor		364007	2					
ANR	364174	Identifier	pdcolor		364007	0					
ANR	364175	PrimaryExpression	0		364007	1					
ANR	364176	AndExpression	"vdev -> bbox_device && ( code = ( * dev_proc ( vdev -> bbox_device , begin_image ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , pim , format , prect , pdcolor , pcpath , mem , & pie -> bbox_info ) ) < 0"		364007	1		&&			
ANR	364177	PtrMemberAccess	vdev -> bbox_device		364007	0					
ANR	364178	Identifier	vdev		364007	0					
ANR	364179	Identifier	bbox_device		364007	1					
ANR	364180	RelationalExpression	"( code = ( * dev_proc ( vdev -> bbox_device , begin_image ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , pim , format , prect , pdcolor , pcpath , mem , & pie -> bbox_info ) ) < 0"		364007	1		<			
ANR	364181	AssignmentExpression	"code = ( * dev_proc ( vdev -> bbox_device , begin_image ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , pim , format , prect , pdcolor , pcpath , mem , & pie -> bbox_info )"		364007	0		=			
ANR	364182	Identifier	code		364007	0					
ANR	364183	CallExpression	"( * dev_proc ( vdev -> bbox_device , begin_image ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , pim , format , prect , pdcolor , pcpath , mem , & pie -> bbox_info )"		364007	1					
ANR	364184	Callee	"* dev_proc ( vdev -> bbox_device , begin_image )"		364007	0					
ANR	364185	UnaryOperationExpression	"* dev_proc ( vdev -> bbox_device , begin_image )"		364007	0					
ANR	364186	UnaryOperator	*		364007	0					
ANR	364187	CallExpression	"dev_proc ( vdev -> bbox_device , begin_image )"		364007	1					
ANR	364188	Callee	dev_proc		364007	0					
ANR	364189	Identifier	dev_proc		364007	0					
ANR	364190	ArgumentList	vdev -> bbox_device		364007	1					
ANR	364191	Argument	vdev -> bbox_device		364007	0					
ANR	364192	PtrMemberAccess	vdev -> bbox_device		364007	0					
ANR	364193	Identifier	vdev		364007	0					
ANR	364194	Identifier	bbox_device		364007	1					
ANR	364195	Argument	begin_image		364007	1					
ANR	364196	Identifier	begin_image		364007	0					
ANR	364197	ArgumentList	( gx_device * ) vdev -> bbox_device		364007	1					
ANR	364198	Argument	( gx_device * ) vdev -> bbox_device		364007	0					
ANR	364199	CastExpression	( gx_device * ) vdev -> bbox_device		364007	0					
ANR	364200	CastTarget	gx_device *		364007	0					
ANR	364201	PtrMemberAccess	vdev -> bbox_device		364007	1					
ANR	364202	Identifier	vdev		364007	0					
ANR	364203	Identifier	bbox_device		364007	1					
ANR	364204	Argument	pgs		364007	1					
ANR	364205	Identifier	pgs		364007	0					
ANR	364206	Argument	pim		364007	2					
ANR	364207	Identifier	pim		364007	0					
ANR	364208	Argument	format		364007	3					
ANR	364209	Identifier	format		364007	0					
ANR	364210	Argument	prect		364007	4					
ANR	364211	Identifier	prect		364007	0					
ANR	364212	Argument	pdcolor		364007	5					
ANR	364213	Identifier	pdcolor		364007	0					
ANR	364214	Argument	pcpath		364007	6					
ANR	364215	Identifier	pcpath		364007	0					
ANR	364216	Argument	mem		364007	7					
ANR	364217	Identifier	mem		364007	0					
ANR	364218	Argument	& pie -> bbox_info		364007	8					
ANR	364219	UnaryOperationExpression	& pie -> bbox_info		364007	0					
ANR	364220	UnaryOperator	&		364007	0					
ANR	364221	PtrMemberAccess	pie -> bbox_info		364007	1					
ANR	364222	Identifier	pie		364007	0					
ANR	364223	Identifier	bbox_info		364007	1					
ANR	364224	PrimaryExpression	0		364007	1					
ANR	364225	ReturnStatement	return code ;	903:8:32385:32396	364007	1	True				
ANR	364226	Identifier	code		364007	0					
ANR	364227	ExpressionStatement	pie -> memory = mem	904:4:32402:32419	364007	11	True				
ANR	364228	AssignmentExpression	pie -> memory = mem		364007	0		=			
ANR	364229	PtrMemberAccess	pie -> memory		364007	0					
ANR	364230	Identifier	pie		364007	0					
ANR	364231	Identifier	memory		364007	1					
ANR	364232	Identifier	mem		364007	1					
ANR	364233	IfStatement	if ( prect )		364007	12					
ANR	364234	Condition	prect	905:8:32429:32433	364007	0	True				
ANR	364235	Identifier	prect		364007	0					
ANR	364236	ExpressionStatement	"pie -> width = prect -> q . x - prect -> p . x , pie -> height = prect -> q . y - prect -> p . y"	906:8:32444:32531	364007	1	True				
ANR	364237	Expression	"pie -> width = prect -> q . x - prect -> p . x , pie -> height = prect -> q . y - prect -> p . y"		364007	0					
ANR	364238	AssignmentExpression	pie -> width = prect -> q . x - prect -> p . x		364007	0		=			
ANR	364239	PtrMemberAccess	pie -> width		364007	0					
ANR	364240	Identifier	pie		364007	0					
ANR	364241	Identifier	width		364007	1					
ANR	364242	AdditiveExpression	prect -> q . x - prect -> p . x		364007	1		-			
ANR	364243	MemberAccess	prect -> q . x		364007	0					
ANR	364244	PtrMemberAccess	prect -> q		364007	0					
ANR	364245	Identifier	prect		364007	0					
ANR	364246	Identifier	q		364007	1					
ANR	364247	Identifier	x		364007	1					
ANR	364248	MemberAccess	prect -> p . x		364007	1					
ANR	364249	PtrMemberAccess	prect -> p		364007	0					
ANR	364250	Identifier	prect		364007	0					
ANR	364251	Identifier	p		364007	1					
ANR	364252	Identifier	x		364007	1					
ANR	364253	AssignmentExpression	pie -> height = prect -> q . y - prect -> p . y		364007	1		=			
ANR	364254	PtrMemberAccess	pie -> height		364007	0					
ANR	364255	Identifier	pie		364007	0					
ANR	364256	Identifier	height		364007	1					
ANR	364257	AdditiveExpression	prect -> q . y - prect -> p . y		364007	1		-			
ANR	364258	MemberAccess	prect -> q . y		364007	0					
ANR	364259	PtrMemberAccess	prect -> q		364007	0					
ANR	364260	Identifier	prect		364007	0					
ANR	364261	Identifier	q		364007	1					
ANR	364262	Identifier	y		364007	1					
ANR	364263	MemberAccess	prect -> p . y		364007	1					
ANR	364264	PtrMemberAccess	prect -> p		364007	0					
ANR	364265	Identifier	prect		364007	0					
ANR	364266	Identifier	p		364007	1					
ANR	364267	Identifier	y		364007	1					
ANR	364268	ElseStatement	else		364007	0					
ANR	364269	ExpressionStatement	"pie -> width = pim -> Width , pie -> height = pim -> Height"	909:8:32550:32600	364007	0	True				
ANR	364270	Expression	"pie -> width = pim -> Width , pie -> height = pim -> Height"		364007	0					
ANR	364271	AssignmentExpression	pie -> width = pim -> Width		364007	0		=			
ANR	364272	PtrMemberAccess	pie -> width		364007	0					
ANR	364273	Identifier	pie		364007	0					
ANR	364274	Identifier	width		364007	1					
ANR	364275	PtrMemberAccess	pim -> Width		364007	1					
ANR	364276	Identifier	pim		364007	0					
ANR	364277	Identifier	Width		364007	1					
ANR	364278	AssignmentExpression	pie -> height = pim -> Height		364007	1		=			
ANR	364279	PtrMemberAccess	pie -> height		364007	0					
ANR	364280	Identifier	pie		364007	0					
ANR	364281	Identifier	height		364007	1					
ANR	364282	PtrMemberAccess	pim -> Height		364007	1					
ANR	364283	Identifier	pim		364007	0					
ANR	364284	Identifier	Height		364007	1					
ANR	364285	ExpressionStatement	pie -> bits_per_row = pie -> width * pie -> bits_per_pixel	910:4:32606:32658	364007	13	True				
ANR	364286	AssignmentExpression	pie -> bits_per_row = pie -> width * pie -> bits_per_pixel		364007	0		=			
ANR	364287	PtrMemberAccess	pie -> bits_per_row		364007	0					
ANR	364288	Identifier	pie		364007	0					
ANR	364289	Identifier	bits_per_row		364007	1					
ANR	364290	MultiplicativeExpression	pie -> width * pie -> bits_per_pixel		364007	1		*			
ANR	364291	PtrMemberAccess	pie -> width		364007	0					
ANR	364292	Identifier	pie		364007	0					
ANR	364293	Identifier	width		364007	1					
ANR	364294	PtrMemberAccess	pie -> bits_per_pixel		364007	1					
ANR	364295	Identifier	pie		364007	0					
ANR	364296	Identifier	bits_per_pixel		364007	1					
ANR	364297	ExpressionStatement	pie -> y = 0	911:4:32664:32674	364007	14	True				
ANR	364298	AssignmentExpression	pie -> y = 0		364007	0		=			
ANR	364299	PtrMemberAccess	pie -> y		364007	0					
ANR	364300	Identifier	pie		364007	0					
ANR	364301	Identifier	y		364007	1					
ANR	364302	PrimaryExpression	0		364007	1					
ANR	364303	ReturnStatement	return 0 ;	912:4:32680:32688	364007	15	True				
ANR	364304	PrimaryExpression	0		364007	0					
ANR	364305	ReturnType	int		364007	1					
ANR	364306	Identifier	gdev_vector_begin_image		364007	2					
ANR	364307	ParameterList	"gx_device_vector * vdev , const gs_gstate * pgs , const gs_image_t * pim , gs_image_format_t format , const gs_int_rect * prect , const gx_drawing_color * pdcolor , const gx_clip_path * pcpath , gs_memory_t * mem , const gx_image_enum_procs_t * pprocs , gdev_vector_image_enum_t * pie"		364007	3					
ANR	364308	Parameter	gx_device_vector * vdev	866:24:30719:30741	364007	0	True				
ANR	364309	ParameterType	gx_device_vector *		364007	0					
ANR	364310	Identifier	vdev		364007	1					
ANR	364311	Parameter	const gs_gstate * pgs	867:24:30768:30788	364007	1	True				
ANR	364312	ParameterType	const gs_gstate *		364007	0					
ANR	364313	Identifier	pgs		364007	1					
ANR	364314	Parameter	const gs_image_t * pim	867:47:30791:30812	364007	2	True				
ANR	364315	ParameterType	const gs_image_t *		364007	0					
ANR	364316	Identifier	pim		364007	1					
ANR	364317	Parameter	gs_image_format_t format	868:24:30839:30862	364007	3	True				
ANR	364318	ParameterType	gs_image_format_t		364007	0					
ANR	364319	Identifier	format		364007	1					
ANR	364320	Parameter	const gs_int_rect * prect	868:50:30865:30889	364007	4	True				
ANR	364321	ParameterType	const gs_int_rect *		364007	0					
ANR	364322	Identifier	prect		364007	1					
ANR	364323	Parameter	const gx_drawing_color * pdcolor	869:14:30906:30937	364007	5	True				
ANR	364324	ParameterType	const gx_drawing_color *		364007	0					
ANR	364325	Identifier	pdcolor		364007	1					
ANR	364326	Parameter	const gx_clip_path * pcpath	869:48:30940:30966	364007	6	True				
ANR	364327	ParameterType	const gx_clip_path *		364007	0					
ANR	364328	Identifier	pcpath		364007	1					
ANR	364329	Parameter	gs_memory_t * mem	870:20:30989:31005	364007	7	True				
ANR	364330	ParameterType	gs_memory_t *		364007	0					
ANR	364331	Identifier	mem		364007	1					
ANR	364332	Parameter	const gx_image_enum_procs_t * pprocs	870:39:31008:31043	364007	8	True				
ANR	364333	ParameterType	const gx_image_enum_procs_t *		364007	0					
ANR	364334	Identifier	pprocs		364007	1					
ANR	364335	Parameter	gdev_vector_image_enum_t * pie	871:24:31070:31099	364007	9	True				
ANR	364336	ParameterType	gdev_vector_image_enum_t *		364007	0					
ANR	364337	Identifier	pie		364007	1					
ANR	364338	CFGEntryNode	ENTRY		364007		True				
ANR	364339	CFGExitNode	EXIT		364007		True				
ANR	364340	Symbol	prect -> q . y		364007						
ANR	364341	Symbol	prect -> q . x		364007						
ANR	364342	Symbol	* pgs		364007						
ANR	364343	Symbol	prect		364007						
ANR	364344	Symbol	pie		364007						
ANR	364345	Symbol	bits_per_pixel		364007						
ANR	364346	Symbol	pie -> bbox_info		364007						
ANR	364347	Symbol	pie -> memory		364007						
ANR	364348	Symbol	pprocs		364007						
ANR	364349	Symbol	pim		364007						
ANR	364350	Symbol	pie -> width		364007						
ANR	364351	Symbol	rop3_uses_T		364007						
ANR	364352	Symbol	prect -> p . x		364007						
ANR	364353	Symbol	gs_color_space_num_components		364007						
ANR	364354	Symbol	prect -> p . y		364007						
ANR	364355	Symbol	* prect		364007						
ANR	364356	Symbol	pim -> ImageMask		364007						
ANR	364357	Symbol	format		364007						
ANR	364358	Symbol	begin_image		364007						
ANR	364359	Symbol	gdev_vector_update_fill_color		364007						
ANR	364360	Symbol	* vdev		364007						
ANR	364361	Symbol	pim -> ColorSpace		364007						
ANR	364362	Symbol	gx_image_enum_common_init		364007						
ANR	364363	Symbol	pim -> Height		364007						
ANR	364364	Symbol	vdev -> bbox_device		364007						
ANR	364365	Symbol	code		364007						
ANR	364366	Symbol	pim -> Width		364007						
ANR	364367	Symbol	* dev_proc		364007						
ANR	364368	Symbol	prect -> p		364007						
ANR	364369	Symbol	pie -> height		364007						
ANR	364370	Symbol	prect -> q		364007						
ANR	364371	Symbol	pie -> bits_per_row		364007						
ANR	364372	Symbol	mem		364007						
ANR	364373	Symbol	dev_proc		364007						
ANR	364374	Symbol	"* dev_proc ( vdev -> bbox_device , begin_image )"		364007						
ANR	364375	Symbol	gdev_vector_update_log_op		364007						
ANR	364376	Symbol	pim -> CombineWithColor		364007						
ANR	364377	Symbol	pie -> num_planes		364007						
ANR	364378	Symbol	pgs		364007						
ANR	364379	Symbol	pcpath		364007						
ANR	364380	Symbol	pcs		364007						
ANR	364381	Symbol	pgs -> log_op		364007						
ANR	364382	Symbol	pie -> bits_per_pixel		364007						
ANR	364383	Symbol	pie -> default_info		364007						
ANR	364384	Symbol	vdev		364007						
ANR	364385	Symbol	& pie -> bbox_info		364007						
ANR	364386	Symbol	pdcolor		364007						
ANR	364387	Symbol	num_components		364007						
ANR	364388	Symbol	* pie		364007						
ANR	364389	Symbol	gdev_vector_update_clip_path		364007						
ANR	364390	Symbol	pim -> BitsPerComponent		364007						
ANR	364391	Symbol	pie -> y		364007						
ANR	364392	Symbol	* pim		364007						
ANR	364393	Function	gdev_vector_end_image	917:0:32832:34232							
ANR	364394	FunctionDef	"gdev_vector_end_image (gx_device_vector * vdev , gdev_vector_image_enum_t * pie , bool draw_last , gx_color_index pad)"		364393	0					
ANR	364395	CompoundStatement		920:0:32960:34232	364393	0					
ANR	364396	IdentifierDeclStatement	int code ;	921:4:32966:32974	364393	0	True				
ANR	364397	IdentifierDecl	code		364393	0					
ANR	364398	IdentifierDeclType	int		364393	0					
ANR	364399	Identifier	code		364393	1					
ANR	364400	IfStatement	if ( pie -> default_info )		364393	1					
ANR	364401	Condition	pie -> default_info	923:8:32985:33001	364393	0	True				
ANR	364402	PtrMemberAccess	pie -> default_info		364393	0					
ANR	364403	Identifier	pie		364393	0					
ANR	364404	Identifier	default_info		364393	1					
ANR	364405	CompoundStatement		4:27:43:43	364393	1					
ANR	364406	ExpressionStatement	"code = gx_default_end_image ( ( gx_device * ) vdev , pie -> default_info , draw_last )"	924:8:33014:33127	364393	0	True				
ANR	364407	AssignmentExpression	"code = gx_default_end_image ( ( gx_device * ) vdev , pie -> default_info , draw_last )"		364393	0		=			
ANR	364408	Identifier	code		364393	0					
ANR	364409	CallExpression	"gx_default_end_image ( ( gx_device * ) vdev , pie -> default_info , draw_last )"		364393	1					
ANR	364410	Callee	gx_default_end_image		364393	0					
ANR	364411	Identifier	gx_default_end_image		364393	0					
ANR	364412	ArgumentList	( gx_device * ) vdev		364393	1					
ANR	364413	Argument	( gx_device * ) vdev		364393	0					
ANR	364414	CastExpression	( gx_device * ) vdev		364393	0					
ANR	364415	CastTarget	gx_device *		364393	0					
ANR	364416	Identifier	vdev		364393	1					
ANR	364417	Argument	pie -> default_info		364393	1					
ANR	364418	PtrMemberAccess	pie -> default_info		364393	0					
ANR	364419	Identifier	pie		364393	0					
ANR	364420	Identifier	default_info		364393	1					
ANR	364421	Argument	draw_last		364393	2					
ANR	364422	Identifier	draw_last		364393	0					
ANR	364423	IfStatement	if ( code >= 0 )		364393	1					
ANR	364424	Condition	code >= 0	926:12:33141:33149	364393	0	True				
ANR	364425	RelationalExpression	code >= 0		364393	0		>=			
ANR	364426	Identifier	code		364393	0					
ANR	364427	PrimaryExpression	0		364393	1					
ANR	364428	ExpressionStatement	code = 0	927:12:33164:33172	364393	1	True				
ANR	364429	AssignmentExpression	code = 0		364393	0		=			
ANR	364430	Identifier	code		364393	0					
ANR	364431	PrimaryExpression	0		364393	1					
ANR	364432	ElseStatement	else		364393	0					
ANR	364433	CompoundStatement		9:11:224:224	364393	0					
ANR	364434	IfStatement	if ( pie -> y < pie -> height && pad != gx_no_color_index )		364393	0					
ANR	364435	Condition	pie -> y < pie -> height && pad != gx_no_color_index	929:12:33242:33289	364393	0	True				
ANR	364436	AndExpression	pie -> y < pie -> height && pad != gx_no_color_index		364393	0		&&			
ANR	364437	RelationalExpression	pie -> y < pie -> height		364393	0		<			
ANR	364438	PtrMemberAccess	pie -> y		364393	0					
ANR	364439	Identifier	pie		364393	0					
ANR	364440	Identifier	y		364393	1					
ANR	364441	PtrMemberAccess	pie -> height		364393	1					
ANR	364442	Identifier	pie		364393	0					
ANR	364443	Identifier	height		364393	1					
ANR	364444	EqualityExpression	pad != gx_no_color_index		364393	1		!=			
ANR	364445	Identifier	pad		364393	0					
ANR	364446	Identifier	gx_no_color_index		364393	1					
ANR	364447	CompoundStatement		12:12:408:532	364393	1					
ANR	364448	IdentifierDeclStatement	uint bytes_per_row = ( pie -> bits_per_row + 7 ) >> 3 ;	930:12:33306:33355	364393	0	True				
ANR	364449	IdentifierDecl	bytes_per_row = ( pie -> bits_per_row + 7 ) >> 3		364393	0					
ANR	364450	IdentifierDeclType	uint		364393	0					
ANR	364451	Identifier	bytes_per_row		364393	1					
ANR	364452	AssignmentExpression	bytes_per_row = ( pie -> bits_per_row + 7 ) >> 3		364393	2		=			
ANR	364453	Identifier	bytes_per_row		364393	0					
ANR	364454	ShiftExpression	( pie -> bits_per_row + 7 ) >> 3		364393	1		>>			
ANR	364455	AdditiveExpression	pie -> bits_per_row + 7		364393	0		+			
ANR	364456	PtrMemberAccess	pie -> bits_per_row		364393	0					
ANR	364457	Identifier	pie		364393	0					
ANR	364458	Identifier	bits_per_row		364393	1					
ANR	364459	PrimaryExpression	7		364393	1					
ANR	364460	PrimaryExpression	3		364393	1					
ANR	364461	IdentifierDeclStatement	"byte * row = gs_alloc_bytes ( pie -> memory , bytes_per_row , ""gdev_vector_end_image(fill)"" ) ;"	931:12:33369:33493	364393	1	True				
ANR	364462	IdentifierDecl	"* row = gs_alloc_bytes ( pie -> memory , bytes_per_row , ""gdev_vector_end_image(fill)"" )"		364393	0					
ANR	364463	IdentifierDeclType	byte *		364393	0					
ANR	364464	Identifier	row		364393	1					
ANR	364465	AssignmentExpression	"* row = gs_alloc_bytes ( pie -> memory , bytes_per_row , ""gdev_vector_end_image(fill)"" )"		364393	2		=			
ANR	364466	Identifier	row		364393	0					
ANR	364467	CallExpression	"gs_alloc_bytes ( pie -> memory , bytes_per_row , ""gdev_vector_end_image(fill)"" )"		364393	1					
ANR	364468	Callee	gs_alloc_bytes		364393	0					
ANR	364469	Identifier	gs_alloc_bytes		364393	0					
ANR	364470	ArgumentList	pie -> memory		364393	1					
ANR	364471	Argument	pie -> memory		364393	0					
ANR	364472	PtrMemberAccess	pie -> memory		364393	0					
ANR	364473	Identifier	pie		364393	0					
ANR	364474	Identifier	memory		364393	1					
ANR	364475	Argument	bytes_per_row		364393	1					
ANR	364476	Identifier	bytes_per_row		364393	0					
ANR	364477	Argument	"""gdev_vector_end_image(fill)"""		364393	2					
ANR	364478	PrimaryExpression	"""gdev_vector_end_image(fill)"""		364393	0					
ANR	364479	IfStatement	if ( row == 0 )		364393	2					
ANR	364480	Condition	row == 0	934:16:33512:33519	364393	0	True				
ANR	364481	EqualityExpression	row == 0		364393	0		==			
ANR	364482	Identifier	row		364393	0					
ANR	364483	PrimaryExpression	0		364393	1					
ANR	364484	ExpressionStatement	return_error ( gs_error_VMerror )	935:16:33538:33568	364393	1	True				
ANR	364485	CallExpression	return_error ( gs_error_VMerror )		364393	0					
ANR	364486	Callee	return_error		364393	0					
ANR	364487	Identifier	return_error		364393	0					
ANR	364488	ArgumentList	gs_error_VMerror		364393	1					
ANR	364489	Argument	gs_error_VMerror		364393	0					
ANR	364490	Identifier	gs_error_VMerror		364393	0					
ANR	364491	ExpressionStatement	"memset ( row , ( byte ) pad , bytes_per_row )"	937:12:33618:33656	364393	3	True				
ANR	364492	CallExpression	"memset ( row , ( byte ) pad , bytes_per_row )"		364393	0					
ANR	364493	Callee	memset		364393	0					
ANR	364494	Identifier	memset		364393	0					
ANR	364495	ArgumentList	row		364393	1					
ANR	364496	Argument	row		364393	0					
ANR	364497	Identifier	row		364393	0					
ANR	364498	Argument	( byte ) pad		364393	1					
ANR	364499	CastExpression	( byte ) pad		364393	0					
ANR	364500	CastTarget	byte		364393	0					
ANR	364501	Identifier	pad		364393	1					
ANR	364502	Argument	bytes_per_row		364393	2					
ANR	364503	Identifier	bytes_per_row		364393	0					
ANR	364504	ForStatement	for ( ; pie -> y < pie -> height ; pie -> y ++ )		364393	4					
ANR	364505	Condition	pie -> y < pie -> height	938:19:33677:33696	364393	0	True				
ANR	364506	RelationalExpression	pie -> y < pie -> height		364393	0		<			
ANR	364507	PtrMemberAccess	pie -> y		364393	0					
ANR	364508	Identifier	pie		364393	0					
ANR	364509	Identifier	y		364393	1					
ANR	364510	PtrMemberAccess	pie -> height		364393	1					
ANR	364511	Identifier	pie		364393	0					
ANR	364512	Identifier	height		364393	1					
ANR	364513	PostIncDecOperationExpression	pie -> y ++	938:41:33699:33706	364393	1	True				
ANR	364514	PtrMemberAccess	pie -> y		364393	0					
ANR	364515	Identifier	pie		364393	0					
ANR	364516	Identifier	y		364393	1					
ANR	364517	IncDec	++		364393	1					
ANR	364518	ExpressionStatement	"gx_image_data ( ( gx_image_enum_common_t * ) pie , ( const byte * * ) & row , 0 , bytes_per_row , 1 )"	939:16:33725:33872	364393	2	True				
ANR	364519	CallExpression	"gx_image_data ( ( gx_image_enum_common_t * ) pie , ( const byte * * ) & row , 0 , bytes_per_row , 1 )"		364393	0					
ANR	364520	Callee	gx_image_data		364393	0					
ANR	364521	Identifier	gx_image_data		364393	0					
ANR	364522	ArgumentList	( gx_image_enum_common_t * ) pie		364393	1					
ANR	364523	Argument	( gx_image_enum_common_t * ) pie		364393	0					
ANR	364524	CastExpression	( gx_image_enum_common_t * ) pie		364393	0					
ANR	364525	CastTarget	gx_image_enum_common_t *		364393	0					
ANR	364526	Identifier	pie		364393	1					
ANR	364527	Argument	( const byte * * ) & row		364393	1					
ANR	364528	CastExpression	( const byte * * ) & row		364393	0					
ANR	364529	CastTarget	const byte * *		364393	0					
ANR	364530	UnaryOperationExpression	& row		364393	1					
ANR	364531	UnaryOperator	&		364393	0					
ANR	364532	Identifier	row		364393	1					
ANR	364533	Argument	0		364393	2					
ANR	364534	PrimaryExpression	0		364393	0					
ANR	364535	Argument	bytes_per_row		364393	3					
ANR	364536	Identifier	bytes_per_row		364393	0					
ANR	364537	Argument	1		364393	4					
ANR	364538	PrimaryExpression	1		364393	0					
ANR	364539	ExpressionStatement	"gs_free_object ( pie -> memory , row , ""gdev_vector_end_image(fill)"" )"	942:12:33886:33976	364393	5	True				
ANR	364540	CallExpression	"gs_free_object ( pie -> memory , row , ""gdev_vector_end_image(fill)"" )"		364393	0					
ANR	364541	Callee	gs_free_object		364393	0					
ANR	364542	Identifier	gs_free_object		364393	0					
ANR	364543	ArgumentList	pie -> memory		364393	1					
ANR	364544	Argument	pie -> memory		364393	0					
ANR	364545	PtrMemberAccess	pie -> memory		364393	0					
ANR	364546	Identifier	pie		364393	0					
ANR	364547	Identifier	memory		364393	1					
ANR	364548	Argument	row		364393	1					
ANR	364549	Identifier	row		364393	0					
ANR	364550	Argument	"""gdev_vector_end_image(fill)"""		364393	2					
ANR	364551	PrimaryExpression	"""gdev_vector_end_image(fill)"""		364393	0					
ANR	364552	ExpressionStatement	code = 1	945:8:33996:34004	364393	1	True				
ANR	364553	AssignmentExpression	code = 1		364393	0		=			
ANR	364554	Identifier	code		364393	0					
ANR	364555	PrimaryExpression	1		364393	1					
ANR	364556	IfStatement	if ( vdev -> bbox_device )		364393	2					
ANR	364557	Condition	vdev -> bbox_device	947:8:34020:34036	364393	0	True				
ANR	364558	PtrMemberAccess	vdev -> bbox_device		364393	0					
ANR	364559	Identifier	vdev		364393	0					
ANR	364560	Identifier	bbox_device		364393	1					
ANR	364561	CompoundStatement		29:8:1088:1139	364393	1					
ANR	364562	IdentifierDeclStatement	"int bcode = gx_image_end ( pie -> bbox_info , draw_last ) ;"	948:8:34049:34100	364393	0	True				
ANR	364563	IdentifierDecl	"bcode = gx_image_end ( pie -> bbox_info , draw_last )"		364393	0					
ANR	364564	IdentifierDeclType	int		364393	0					
ANR	364565	Identifier	bcode		364393	1					
ANR	364566	AssignmentExpression	"bcode = gx_image_end ( pie -> bbox_info , draw_last )"		364393	2		=			
ANR	364567	Identifier	bcode		364393	0					
ANR	364568	CallExpression	"gx_image_end ( pie -> bbox_info , draw_last )"		364393	1					
ANR	364569	Callee	gx_image_end		364393	0					
ANR	364570	Identifier	gx_image_end		364393	0					
ANR	364571	ArgumentList	pie -> bbox_info		364393	1					
ANR	364572	Argument	pie -> bbox_info		364393	0					
ANR	364573	PtrMemberAccess	pie -> bbox_info		364393	0					
ANR	364574	Identifier	pie		364393	0					
ANR	364575	Identifier	bbox_info		364393	1					
ANR	364576	Argument	draw_last		364393	1					
ANR	364577	Identifier	draw_last		364393	0					
ANR	364578	IfStatement	if ( bcode < 0 )		364393	1					
ANR	364579	Condition	bcode < 0	950:12:34115:34123	364393	0	True				
ANR	364580	RelationalExpression	bcode < 0		364393	0		<			
ANR	364581	Identifier	bcode		364393	0					
ANR	364582	PrimaryExpression	0		364393	1					
ANR	364583	ExpressionStatement	code = bcode	951:12:34138:34150	364393	1	True				
ANR	364584	AssignmentExpression	code = bcode		364393	0		=			
ANR	364585	Identifier	code		364393	0					
ANR	364586	Identifier	bcode		364393	1					
ANR	364587	ExpressionStatement	gx_image_free_enum ( ( gx_image_enum_common_t * * ) & pie )	953:4:34162:34213	364393	3	True				
ANR	364588	CallExpression	gx_image_free_enum ( ( gx_image_enum_common_t * * ) & pie )		364393	0					
ANR	364589	Callee	gx_image_free_enum		364393	0					
ANR	364590	Identifier	gx_image_free_enum		364393	0					
ANR	364591	ArgumentList	( gx_image_enum_common_t * * ) & pie		364393	1					
ANR	364592	Argument	( gx_image_enum_common_t * * ) & pie		364393	0					
ANR	364593	CastExpression	( gx_image_enum_common_t * * ) & pie		364393	0					
ANR	364594	CastTarget	gx_image_enum_common_t * *		364393	0					
ANR	364595	UnaryOperationExpression	& pie		364393	1					
ANR	364596	UnaryOperator	&		364393	0					
ANR	364597	Identifier	pie		364393	1					
ANR	364598	ReturnStatement	return code ;	954:4:34219:34230	364393	4	True				
ANR	364599	Identifier	code		364393	0					
ANR	364600	ReturnType	int		364393	1					
ANR	364601	Identifier	gdev_vector_end_image		364393	2					
ANR	364602	ParameterList	"gx_device_vector * vdev , gdev_vector_image_enum_t * pie , bool draw_last , gx_color_index pad"		364393	3					
ANR	364603	Parameter	gx_device_vector * vdev	918:22:32858:32880	364393	0	True				
ANR	364604	ParameterType	gx_device_vector *		364393	0					
ANR	364605	Identifier	vdev		364393	1					
ANR	364606	Parameter	gdev_vector_image_enum_t * pie	919:9:32892:32921	364393	1	True				
ANR	364607	ParameterType	gdev_vector_image_enum_t *		364393	0					
ANR	364608	Identifier	pie		364393	1					
ANR	364609	Parameter	bool draw_last	919:41:32924:32937	364393	2	True				
ANR	364610	ParameterType	bool		364393	0					
ANR	364611	Identifier	draw_last		364393	1					
ANR	364612	Parameter	gx_color_index pad	919:57:32940:32957	364393	3	True				
ANR	364613	ParameterType	gx_color_index		364393	0					
ANR	364614	Identifier	pad		364393	1					
ANR	364615	CFGEntryNode	ENTRY		364393		True				
ANR	364616	CFGExitNode	EXIT		364393		True				
ANR	364617	Symbol	vdev -> bbox_device		364393						
ANR	364618	Symbol	gs_alloc_bytes		364393						
ANR	364619	Symbol	code		364393						
ANR	364620	Symbol	pie -> default_info		364393						
ANR	364621	Symbol	& row		364393						
ANR	364622	Symbol	vdev		364393						
ANR	364623	Symbol	draw_last		364393						
ANR	364624	Symbol	pie -> height		364393						
ANR	364625	Symbol	bytes_per_row		364393						
ANR	364626	Symbol	pie		364393						
ANR	364627	Symbol	pie -> bits_per_row		364393						
ANR	364628	Symbol	pie -> memory		364393						
ANR	364629	Symbol	pie -> bbox_info		364393						
ANR	364630	Symbol	* vdev		364393						
ANR	364631	Symbol	gs_error_VMerror		364393						
ANR	364632	Symbol	pad		364393						
ANR	364633	Symbol	gx_image_end		364393						
ANR	364634	Symbol	gx_no_color_index		364393						
ANR	364635	Symbol	& pie		364393						
ANR	364636	Symbol	* pie		364393						
ANR	364637	Symbol	row		364393						
ANR	364638	Symbol	gx_default_end_image		364393						
ANR	364639	Symbol	bcode		364393						
ANR	364640	Symbol	pie -> y		364393						
ANR	364641	Function	gdev_vector_get_param	961:0:34334:35054							
ANR	364642	FunctionDef	"gdev_vector_get_param (gx_device * dev , char * Param , void * list)"		364641	0					
ANR	364643	CompoundStatement		962:0:34401:35054	364641	0					
ANR	364644	IdentifierDeclStatement	gs_param_list * plist = ( gs_param_list * ) list ;	963:4:34407:34452	364641	0	True				
ANR	364645	IdentifierDecl	* plist = ( gs_param_list * ) list		364641	0					
ANR	364646	IdentifierDeclType	gs_param_list *		364641	0					
ANR	364647	Identifier	plist		364641	1					
ANR	364648	AssignmentExpression	* plist = ( gs_param_list * ) list		364641	2		=			
ANR	364649	Identifier	plist		364641	0					
ANR	364650	CastExpression	( gs_param_list * ) list		364641	1					
ANR	364651	CastTarget	gs_param_list *		364641	0					
ANR	364652	Identifier	list		364641	1					
ANR	364653	IdentifierDeclStatement	gs_param_string ofns ;	964:4:34458:34478	364641	1	True				
ANR	364654	IdentifierDecl	ofns		364641	0					
ANR	364655	IdentifierDeclType	gs_param_string		364641	0					
ANR	364656	Identifier	ofns		364641	1					
ANR	364657	IdentifierDeclStatement	bool bool_true = 1 ;	965:4:34484:34502	364641	2	True				
ANR	364658	IdentifierDecl	bool_true = 1		364641	0					
ANR	364659	IdentifierDeclType	bool		364641	0					
ANR	364660	Identifier	bool_true		364641	1					
ANR	364661	AssignmentExpression	bool_true = 1		364641	2		=			
ANR	364662	Identifier	bool_true		364641	0					
ANR	364663	PrimaryExpression	1		364641	1					
ANR	364664	ExpressionStatement	"ofns . data = ( const byte * ) vdev -> fname , ofns . size = strlen ( vdev -> fname ) , ofns . persistent = false"	967:4:34509:34620	364641	3	True				
ANR	364665	Expression	"ofns . data = ( const byte * ) vdev -> fname , ofns . size = strlen ( vdev -> fname ) , ofns . persistent = false"		364641	0					
ANR	364666	AssignmentExpression	ofns . data = ( const byte * ) vdev -> fname		364641	0		=			
ANR	364667	MemberAccess	ofns . data		364641	0					
ANR	364668	Identifier	ofns		364641	0					
ANR	364669	Identifier	data		364641	1					
ANR	364670	CastExpression	( const byte * ) vdev -> fname		364641	1					
ANR	364671	CastTarget	const byte *		364641	0					
ANR	364672	PtrMemberAccess	vdev -> fname		364641	1					
ANR	364673	Identifier	vdev		364641	0					
ANR	364674	Identifier	fname		364641	1					
ANR	364675	Expression	"ofns . size = strlen ( vdev -> fname ) , ofns . persistent = false"		364641	1					
ANR	364676	AssignmentExpression	ofns . size = strlen ( vdev -> fname )		364641	0		=			
ANR	364677	MemberAccess	ofns . size		364641	0					
ANR	364678	Identifier	ofns		364641	0					
ANR	364679	Identifier	size		364641	1					
ANR	364680	CallExpression	strlen ( vdev -> fname )		364641	1					
ANR	364681	Callee	strlen		364641	0					
ANR	364682	Identifier	strlen		364641	0					
ANR	364683	ArgumentList	vdev -> fname		364641	1					
ANR	364684	Argument	vdev -> fname		364641	0					
ANR	364685	PtrMemberAccess	vdev -> fname		364641	0					
ANR	364686	Identifier	vdev		364641	0					
ANR	364687	Identifier	fname		364641	1					
ANR	364688	AssignmentExpression	ofns . persistent = false		364641	1		=			
ANR	364689	MemberAccess	ofns . persistent		364641	0					
ANR	364690	Identifier	ofns		364641	0					
ANR	364691	Identifier	persistent		364641	1					
ANR	364692	Identifier	false		364641	1					
ANR	364693	IfStatement	"if ( strcmp ( Param , ""OutputFile"" ) == 0 )"		364641	4					
ANR	364694	Condition	"strcmp ( Param , ""OutputFile"" ) == 0"	970:8:34630:34661	364641	0	True				
ANR	364695	EqualityExpression	"strcmp ( Param , ""OutputFile"" ) == 0"		364641	0		==			
ANR	364696	CallExpression	"strcmp ( Param , ""OutputFile"" )"		364641	0					
ANR	364697	Callee	strcmp		364641	0					
ANR	364698	Identifier	strcmp		364641	0					
ANR	364699	ArgumentList	Param		364641	1					
ANR	364700	Argument	Param		364641	0					
ANR	364701	Identifier	Param		364641	0					
ANR	364702	Argument	"""OutputFile"""		364641	1					
ANR	364703	PrimaryExpression	"""OutputFile"""		364641	0					
ANR	364704	PrimaryExpression	0		364641	1					
ANR	364705	CompoundStatement		9:42:262:262	364641	1					
ANR	364706	ReturnStatement	"return param_write_string ( plist , ""OutputFile"" , & ofns ) ;"	971:8:34674:34727	364641	0	True				
ANR	364707	CallExpression	"param_write_string ( plist , ""OutputFile"" , & ofns )"		364641	0					
ANR	364708	Callee	param_write_string		364641	0					
ANR	364709	Identifier	param_write_string		364641	0					
ANR	364710	ArgumentList	plist		364641	1					
ANR	364711	Argument	plist		364641	0					
ANR	364712	Identifier	plist		364641	0					
ANR	364713	Argument	"""OutputFile"""		364641	1					
ANR	364714	PrimaryExpression	"""OutputFile"""		364641	0					
ANR	364715	Argument	& ofns		364641	2					
ANR	364716	UnaryOperationExpression	& ofns		364641	0					
ANR	364717	UnaryOperator	&		364641	0					
ANR	364718	Identifier	ofns		364641	1					
ANR	364719	IfStatement	"if ( strcmp ( Param , ""HighLevelDevice"" ) == 0 )"		364641	5					
ANR	364720	Condition	"strcmp ( Param , ""HighLevelDevice"" ) == 0"	973:8:34743:34779	364641	0	True				
ANR	364721	EqualityExpression	"strcmp ( Param , ""HighLevelDevice"" ) == 0"		364641	0		==			
ANR	364722	CallExpression	"strcmp ( Param , ""HighLevelDevice"" )"		364641	0					
ANR	364723	Callee	strcmp		364641	0					
ANR	364724	Identifier	strcmp		364641	0					
ANR	364725	ArgumentList	Param		364641	1					
ANR	364726	Argument	Param		364641	0					
ANR	364727	Identifier	Param		364641	0					
ANR	364728	Argument	"""HighLevelDevice"""		364641	1					
ANR	364729	PrimaryExpression	"""HighLevelDevice"""		364641	0					
ANR	364730	PrimaryExpression	0		364641	1					
ANR	364731	CompoundStatement		12:47:380:380	364641	1					
ANR	364732	ReturnStatement	"return param_write_bool ( plist , ""HighLevelDevice"" , & bool_true ) ;"	974:8:34792:34853	364641	0	True				
ANR	364733	CallExpression	"param_write_bool ( plist , ""HighLevelDevice"" , & bool_true )"		364641	0					
ANR	364734	Callee	param_write_bool		364641	0					
ANR	364735	Identifier	param_write_bool		364641	0					
ANR	364736	ArgumentList	plist		364641	1					
ANR	364737	Argument	plist		364641	0					
ANR	364738	Identifier	plist		364641	0					
ANR	364739	Argument	"""HighLevelDevice"""		364641	1					
ANR	364740	PrimaryExpression	"""HighLevelDevice"""		364641	0					
ANR	364741	Argument	& bool_true		364641	2					
ANR	364742	UnaryOperationExpression	& bool_true		364641	0					
ANR	364743	UnaryOperator	&		364641	0					
ANR	364744	Identifier	bool_true		364641	1					
ANR	364745	IfStatement	"if ( strcmp ( Param , ""NoInterpolateImagemasks"" ) == 0 )"		364641	6					
ANR	364746	Condition	"strcmp ( Param , ""NoInterpolateImagemasks"" ) == 0"	976:8:34869:34913	364641	0	True				
ANR	364747	EqualityExpression	"strcmp ( Param , ""NoInterpolateImagemasks"" ) == 0"		364641	0		==			
ANR	364748	CallExpression	"strcmp ( Param , ""NoInterpolateImagemasks"" )"		364641	0					
ANR	364749	Callee	strcmp		364641	0					
ANR	364750	Identifier	strcmp		364641	0					
ANR	364751	ArgumentList	Param		364641	1					
ANR	364752	Argument	Param		364641	0					
ANR	364753	Identifier	Param		364641	0					
ANR	364754	Argument	"""NoInterpolateImagemasks"""		364641	1					
ANR	364755	PrimaryExpression	"""NoInterpolateImagemasks"""		364641	0					
ANR	364756	PrimaryExpression	0		364641	1					
ANR	364757	CompoundStatement		15:55:514:514	364641	1					
ANR	364758	ReturnStatement	"return param_write_bool ( plist , ""NoInterpolateImagemasks"" , & bool_true ) ;"	977:8:34926:34995	364641	0	True				
ANR	364759	CallExpression	"param_write_bool ( plist , ""NoInterpolateImagemasks"" , & bool_true )"		364641	0					
ANR	364760	Callee	param_write_bool		364641	0					
ANR	364761	Identifier	param_write_bool		364641	0					
ANR	364762	ArgumentList	plist		364641	1					
ANR	364763	Argument	plist		364641	0					
ANR	364764	Identifier	plist		364641	0					
ANR	364765	Argument	"""NoInterpolateImagemasks"""		364641	1					
ANR	364766	PrimaryExpression	"""NoInterpolateImagemasks"""		364641	0					
ANR	364767	Argument	& bool_true		364641	2					
ANR	364768	UnaryOperationExpression	& bool_true		364641	0					
ANR	364769	UnaryOperator	&		364641	0					
ANR	364770	Identifier	bool_true		364641	1					
ANR	364771	ReturnStatement	"return gx_default_get_param ( dev , Param , list ) ;"	979:4:35007:35052	364641	7	True				
ANR	364772	CallExpression	"gx_default_get_param ( dev , Param , list )"		364641	0					
ANR	364773	Callee	gx_default_get_param		364641	0					
ANR	364774	Identifier	gx_default_get_param		364641	0					
ANR	364775	ArgumentList	dev		364641	1					
ANR	364776	Argument	dev		364641	0					
ANR	364777	Identifier	dev		364641	0					
ANR	364778	Argument	Param		364641	1					
ANR	364779	Identifier	Param		364641	0					
ANR	364780	Argument	list		364641	2					
ANR	364781	Identifier	list		364641	0					
ANR	364782	ReturnType	int		364641	1					
ANR	364783	Identifier	gdev_vector_get_param		364641	2					
ANR	364784	ParameterList	"gx_device * dev , char * Param , void * list"		364641	3					
ANR	364785	Parameter	gx_device * dev	961:26:34360:34373	364641	0	True				
ANR	364786	ParameterType	gx_device *		364641	0					
ANR	364787	Identifier	dev		364641	1					
ANR	364788	Parameter	char * Param	961:42:34376:34386	364641	1	True				
ANR	364789	ParameterType	char *		364641	0					
ANR	364790	Identifier	Param		364641	1					
ANR	364791	Parameter	void * list	961:55:34389:34398	364641	2	True				
ANR	364792	ParameterType	void *		364641	0					
ANR	364793	Identifier	list		364641	1					
ANR	364794	CFGEntryNode	ENTRY		364641		True				
ANR	364795	CFGExitNode	EXIT		364641		True				
ANR	364796	Symbol	strcmp		364641						
ANR	364797	Symbol	bool_true		364641						
ANR	364798	Symbol	ofns		364641						
ANR	364799	Symbol	vdev		364641						
ANR	364800	Symbol	false		364641						
ANR	364801	Symbol	list		364641						
ANR	364802	Symbol	vdev -> fname		364641						
ANR	364803	Symbol	& bool_true		364641						
ANR	364804	Symbol	ofns . size		364641						
ANR	364805	Symbol	gx_default_get_param		364641						
ANR	364806	Symbol	ofns . persistent		364641						
ANR	364807	Symbol	* vdev		364641						
ANR	364808	Symbol	strlen		364641						
ANR	364809	Symbol	param_write_bool		364641						
ANR	364810	Symbol	plist		364641						
ANR	364811	Symbol	ofns . data		364641						
ANR	364812	Symbol	dev		364641						
ANR	364813	Symbol	Param		364641						
ANR	364814	Symbol	& ofns		364641						
ANR	364815	Symbol	param_write_string		364641						
ANR	364816	Function	gdev_vector_get_params	983:0:35079:35737							
ANR	364817	FunctionDef	"gdev_vector_get_params (gx_device * dev , gs_param_list * plist)"		364816	0					
ANR	364818	CompoundStatement		985:0:35146:35737	364816	0					
ANR	364819	IdentifierDeclStatement	"int code = gx_default_get_params ( dev , plist ) ;"	986:4:35152:35196	364816	0	True				
ANR	364820	IdentifierDecl	"code = gx_default_get_params ( dev , plist )"		364816	0					
ANR	364821	IdentifierDeclType	int		364816	0					
ANR	364822	Identifier	code		364816	1					
ANR	364823	AssignmentExpression	"code = gx_default_get_params ( dev , plist )"		364816	2		=			
ANR	364824	Identifier	code		364816	0					
ANR	364825	CallExpression	"gx_default_get_params ( dev , plist )"		364816	1					
ANR	364826	Callee	gx_default_get_params		364816	0					
ANR	364827	Identifier	gx_default_get_params		364816	0					
ANR	364828	ArgumentList	dev		364816	1					
ANR	364829	Argument	dev		364816	0					
ANR	364830	Identifier	dev		364816	0					
ANR	364831	Argument	plist		364816	1					
ANR	364832	Identifier	plist		364816	0					
ANR	364833	IdentifierDeclStatement	int ecode ;	987:4:35202:35211	364816	1	True				
ANR	364834	IdentifierDecl	ecode		364816	0					
ANR	364835	IdentifierDeclType	int		364816	0					
ANR	364836	Identifier	ecode		364816	1					
ANR	364837	IdentifierDeclStatement	gs_param_string ofns ;	988:4:35217:35237	364816	2	True				
ANR	364838	IdentifierDecl	ofns		364816	0					
ANR	364839	IdentifierDeclType	gs_param_string		364816	0					
ANR	364840	Identifier	ofns		364816	1					
ANR	364841	IdentifierDeclStatement	bool bool_true = 1 ;	989:4:35243:35261	364816	3	True				
ANR	364842	IdentifierDecl	bool_true = 1		364816	0					
ANR	364843	IdentifierDeclType	bool		364816	0					
ANR	364844	Identifier	bool_true		364816	1					
ANR	364845	AssignmentExpression	bool_true = 1		364816	2		=			
ANR	364846	Identifier	bool_true		364816	0					
ANR	364847	PrimaryExpression	1		364816	1					
ANR	364848	IfStatement	if ( code < 0 )		364816	4					
ANR	364849	Condition	code < 0	991:8:35272:35279	364816	0	True				
ANR	364850	RelationalExpression	code < 0		364816	0		<			
ANR	364851	Identifier	code		364816	0					
ANR	364852	PrimaryExpression	0		364816	1					
ANR	364853	ReturnStatement	return code ;	992:8:35290:35301	364816	1	True				
ANR	364854	Identifier	code		364816	0					
ANR	364855	ExpressionStatement	"ofns . data = ( const byte * ) vdev -> fname , ofns . size = strlen ( vdev -> fname ) , ofns . persistent = false"	993:4:35307:35418	364816	5	True				
ANR	364856	Expression	"ofns . data = ( const byte * ) vdev -> fname , ofns . size = strlen ( vdev -> fname ) , ofns . persistent = false"		364816	0					
ANR	364857	AssignmentExpression	ofns . data = ( const byte * ) vdev -> fname		364816	0		=			
ANR	364858	MemberAccess	ofns . data		364816	0					
ANR	364859	Identifier	ofns		364816	0					
ANR	364860	Identifier	data		364816	1					
ANR	364861	CastExpression	( const byte * ) vdev -> fname		364816	1					
ANR	364862	CastTarget	const byte *		364816	0					
ANR	364863	PtrMemberAccess	vdev -> fname		364816	1					
ANR	364864	Identifier	vdev		364816	0					
ANR	364865	Identifier	fname		364816	1					
ANR	364866	Expression	"ofns . size = strlen ( vdev -> fname ) , ofns . persistent = false"		364816	1					
ANR	364867	AssignmentExpression	ofns . size = strlen ( vdev -> fname )		364816	0		=			
ANR	364868	MemberAccess	ofns . size		364816	0					
ANR	364869	Identifier	ofns		364816	0					
ANR	364870	Identifier	size		364816	1					
ANR	364871	CallExpression	strlen ( vdev -> fname )		364816	1					
ANR	364872	Callee	strlen		364816	0					
ANR	364873	Identifier	strlen		364816	0					
ANR	364874	ArgumentList	vdev -> fname		364816	1					
ANR	364875	Argument	vdev -> fname		364816	0					
ANR	364876	PtrMemberAccess	vdev -> fname		364816	0					
ANR	364877	Identifier	vdev		364816	0					
ANR	364878	Identifier	fname		364816	1					
ANR	364879	AssignmentExpression	ofns . persistent = false		364816	1		=			
ANR	364880	MemberAccess	ofns . persistent		364816	0					
ANR	364881	Identifier	ofns		364816	0					
ANR	364882	Identifier	persistent		364816	1					
ANR	364883	Identifier	false		364816	1					
ANR	364884	IfStatement	"if ( ( ecode = param_write_string ( plist , ""OutputFile"" , & ofns ) ) < 0 )"		364816	6					
ANR	364885	Condition	"( ecode = param_write_string ( plist , ""OutputFile"" , & ofns ) ) < 0"	996:8:35428:35487	364816	0	True				
ANR	364886	RelationalExpression	"( ecode = param_write_string ( plist , ""OutputFile"" , & ofns ) ) < 0"		364816	0		<			
ANR	364887	AssignmentExpression	"ecode = param_write_string ( plist , ""OutputFile"" , & ofns )"		364816	0		=			
ANR	364888	Identifier	ecode		364816	0					
ANR	364889	CallExpression	"param_write_string ( plist , ""OutputFile"" , & ofns )"		364816	1					
ANR	364890	Callee	param_write_string		364816	0					
ANR	364891	Identifier	param_write_string		364816	0					
ANR	364892	ArgumentList	plist		364816	1					
ANR	364893	Argument	plist		364816	0					
ANR	364894	Identifier	plist		364816	0					
ANR	364895	Argument	"""OutputFile"""		364816	1					
ANR	364896	PrimaryExpression	"""OutputFile"""		364816	0					
ANR	364897	Argument	& ofns		364816	2					
ANR	364898	UnaryOperationExpression	& ofns		364816	0					
ANR	364899	UnaryOperator	&		364816	0					
ANR	364900	Identifier	ofns		364816	1					
ANR	364901	PrimaryExpression	0		364816	1					
ANR	364902	ReturnStatement	return ecode ;	997:8:35498:35510	364816	1	True				
ANR	364903	Identifier	ecode		364816	0					
ANR	364904	IfStatement	"if ( ( ecode = param_write_bool ( plist , ""HighLevelDevice"" , & bool_true ) ) < 0 )"		364816	7					
ANR	364905	Condition	"( ecode = param_write_bool ( plist , ""HighLevelDevice"" , & bool_true ) ) < 0"	998:8:35520:35587	364816	0	True				
ANR	364906	RelationalExpression	"( ecode = param_write_bool ( plist , ""HighLevelDevice"" , & bool_true ) ) < 0"		364816	0		<			
ANR	364907	AssignmentExpression	"ecode = param_write_bool ( plist , ""HighLevelDevice"" , & bool_true )"		364816	0		=			
ANR	364908	Identifier	ecode		364816	0					
ANR	364909	CallExpression	"param_write_bool ( plist , ""HighLevelDevice"" , & bool_true )"		364816	1					
ANR	364910	Callee	param_write_bool		364816	0					
ANR	364911	Identifier	param_write_bool		364816	0					
ANR	364912	ArgumentList	plist		364816	1					
ANR	364913	Argument	plist		364816	0					
ANR	364914	Identifier	plist		364816	0					
ANR	364915	Argument	"""HighLevelDevice"""		364816	1					
ANR	364916	PrimaryExpression	"""HighLevelDevice"""		364816	0					
ANR	364917	Argument	& bool_true		364816	2					
ANR	364918	UnaryOperationExpression	& bool_true		364816	0					
ANR	364919	UnaryOperator	&		364816	0					
ANR	364920	Identifier	bool_true		364816	1					
ANR	364921	PrimaryExpression	0		364816	1					
ANR	364922	ReturnStatement	return ecode ;	999:8:35598:35610	364816	1	True				
ANR	364923	Identifier	ecode		364816	0					
ANR	364924	IfStatement	"if ( ( ecode = param_write_bool ( plist , ""NoInterpolateImagemasks"" , & bool_true ) ) < 0 )"		364816	8					
ANR	364925	Condition	"( ecode = param_write_bool ( plist , ""NoInterpolateImagemasks"" , & bool_true ) ) < 0"	1000:8:35620:35695	364816	0	True				
ANR	364926	RelationalExpression	"( ecode = param_write_bool ( plist , ""NoInterpolateImagemasks"" , & bool_true ) ) < 0"		364816	0		<			
ANR	364927	AssignmentExpression	"ecode = param_write_bool ( plist , ""NoInterpolateImagemasks"" , & bool_true )"		364816	0		=			
ANR	364928	Identifier	ecode		364816	0					
ANR	364929	CallExpression	"param_write_bool ( plist , ""NoInterpolateImagemasks"" , & bool_true )"		364816	1					
ANR	364930	Callee	param_write_bool		364816	0					
ANR	364931	Identifier	param_write_bool		364816	0					
ANR	364932	ArgumentList	plist		364816	1					
ANR	364933	Argument	plist		364816	0					
ANR	364934	Identifier	plist		364816	0					
ANR	364935	Argument	"""NoInterpolateImagemasks"""		364816	1					
ANR	364936	PrimaryExpression	"""NoInterpolateImagemasks"""		364816	0					
ANR	364937	Argument	& bool_true		364816	2					
ANR	364938	UnaryOperationExpression	& bool_true		364816	0					
ANR	364939	UnaryOperator	&		364816	0					
ANR	364940	Identifier	bool_true		364816	1					
ANR	364941	PrimaryExpression	0		364816	1					
ANR	364942	ReturnStatement	return ecode ;	1001:8:35706:35718	364816	1	True				
ANR	364943	Identifier	ecode		364816	0					
ANR	364944	ReturnStatement	return code ;	1002:4:35724:35735	364816	9	True				
ANR	364945	Identifier	code		364816	0					
ANR	364946	ReturnType	int		364816	1					
ANR	364947	Identifier	gdev_vector_get_params		364816	2					
ANR	364948	ParameterList	"gx_device * dev , gs_param_list * plist"		364816	3					
ANR	364949	Parameter	gx_device * dev	984:23:35106:35120	364816	0	True				
ANR	364950	ParameterType	gx_device *		364816	0					
ANR	364951	Identifier	dev		364816	1					
ANR	364952	Parameter	gs_param_list * plist	984:40:35123:35143	364816	1	True				
ANR	364953	ParameterType	gs_param_list *		364816	0					
ANR	364954	Identifier	plist		364816	1					
ANR	364955	CFGEntryNode	ENTRY		364816		True				
ANR	364956	CFGExitNode	EXIT		364816		True				
ANR	364957	Symbol	code		364816						
ANR	364958	Symbol	bool_true		364816						
ANR	364959	Symbol	ofns		364816						
ANR	364960	Symbol	vdev		364816						
ANR	364961	Symbol	false		364816						
ANR	364962	Symbol	vdev -> fname		364816						
ANR	364963	Symbol	& bool_true		364816						
ANR	364964	Symbol	ofns . size		364816						
ANR	364965	Symbol	gx_default_get_params		364816						
ANR	364966	Symbol	ecode		364816						
ANR	364967	Symbol	ofns . persistent		364816						
ANR	364968	Symbol	* vdev		364816						
ANR	364969	Symbol	strlen		364816						
ANR	364970	Symbol	param_write_bool		364816						
ANR	364971	Symbol	plist		364816						
ANR	364972	Symbol	ofns . data		364816						
ANR	364973	Symbol	dev		364816						
ANR	364974	Symbol	& ofns		364816						
ANR	364975	Symbol	param_write_string		364816						
ANR	364976	Function	gdev_vector_put_params	1006:0:35762:40010							
ANR	364977	FunctionDef	"gdev_vector_put_params (gx_device * dev , gs_param_list * plist)"		364976	0					
ANR	364978	CompoundStatement		1008:0:35829:40010	364976	0					
ANR	364979	IdentifierDeclStatement	int ecode = 0 ;	1009:4:35835:35848	364976	0	True				
ANR	364980	IdentifierDecl	ecode = 0		364976	0					
ANR	364981	IdentifierDeclType	int		364976	0					
ANR	364982	Identifier	ecode		364976	1					
ANR	364983	AssignmentExpression	ecode = 0		364976	2		=			
ANR	364984	Identifier	ecode		364976	0					
ANR	364985	PrimaryExpression	0		364976	1					
ANR	364986	IdentifierDeclStatement	int code ;	1010:4:35854:35862	364976	1	True				
ANR	364987	IdentifierDecl	code		364976	0					
ANR	364988	IdentifierDeclType	int		364976	0					
ANR	364989	Identifier	code		364976	1					
ANR	364990	IdentifierDeclStatement	int igni ;	1011:4:35868:35876	364976	2	True				
ANR	364991	IdentifierDecl	igni		364976	0					
ANR	364992	IdentifierDeclType	int		364976	0					
ANR	364993	Identifier	igni		364976	1					
ANR	364994	IdentifierDeclStatement	bool ignb ;	1012:4:35882:35891	364976	3	True				
ANR	364995	IdentifierDecl	ignb		364976	0					
ANR	364996	IdentifierDeclType	bool		364976	0					
ANR	364997	Identifier	ignb		364976	1					
ANR	364998	IdentifierDeclStatement	gs_param_name param_name ;	1013:4:35897:35921	364976	4	True				
ANR	364999	IdentifierDecl	param_name		364976	0					
ANR	365000	IdentifierDeclType	gs_param_name		364976	0					
ANR	365001	Identifier	param_name		364976	1					
ANR	365002	IdentifierDeclStatement	gs_param_string ofns ;	1014:4:35927:35947	364976	5	True				
ANR	365003	IdentifierDecl	ofns		364976	0					
ANR	365004	IdentifierDeclType	gs_param_string		364976	0					
ANR	365005	Identifier	ofns		364976	1					
ANR	365006	IdentifierDeclStatement	"bool open = dev -> is_open , HighLevelDevice , NoInterpolateImagemasks ;"	1015:4:35953:36019	364976	6	True				
ANR	365007	IdentifierDecl	open = dev -> is_open		364976	0					
ANR	365008	IdentifierDeclType	bool		364976	0					
ANR	365009	Identifier	open		364976	1					
ANR	365010	AssignmentExpression	open = dev -> is_open		364976	2		=			
ANR	365011	Identifier	open		364976	0					
ANR	365012	PtrMemberAccess	dev -> is_open		364976	1					
ANR	365013	Identifier	dev		364976	0					
ANR	365014	Identifier	is_open		364976	1					
ANR	365015	IdentifierDecl	HighLevelDevice		364976	1					
ANR	365016	IdentifierDeclType	bool		364976	0					
ANR	365017	Identifier	HighLevelDevice		364976	1					
ANR	365018	IdentifierDecl	NoInterpolateImagemasks		364976	2					
ANR	365019	IdentifierDeclType	bool		364976	0					
ANR	365020	Identifier	NoInterpolateImagemasks		364976	1					
ANR	365021	ExpressionStatement	"code = param_read_bool ( plist , ( param_name = ""HighLevelDevice"" ) , & HighLevelDevice )"	1017:4:36026:36107	364976	7	True				
ANR	365022	AssignmentExpression	"code = param_read_bool ( plist , ( param_name = ""HighLevelDevice"" ) , & HighLevelDevice )"		364976	0		=			
ANR	365023	Identifier	code		364976	0					
ANR	365024	CallExpression	"param_read_bool ( plist , ( param_name = ""HighLevelDevice"" ) , & HighLevelDevice )"		364976	1					
ANR	365025	Callee	param_read_bool		364976	0					
ANR	365026	Identifier	param_read_bool		364976	0					
ANR	365027	ArgumentList	plist		364976	1					
ANR	365028	Argument	plist		364976	0					
ANR	365029	Identifier	plist		364976	0					
ANR	365030	Argument	"param_name = ""HighLevelDevice"""		364976	1					
ANR	365031	AssignmentExpression	"param_name = ""HighLevelDevice"""		364976	0		=			
ANR	365032	Identifier	param_name		364976	0					
ANR	365033	PrimaryExpression	"""HighLevelDevice"""		364976	1					
ANR	365034	Argument	& HighLevelDevice		364976	2					
ANR	365035	UnaryOperationExpression	& HighLevelDevice		364976	0					
ANR	365036	UnaryOperator	&		364976	0					
ANR	365037	Identifier	HighLevelDevice		364976	1					
ANR	365038	IfStatement	if ( code < 0 )		364976	8					
ANR	365039	Condition	code < 0	1018:8:36117:36124	364976	0	True				
ANR	365040	RelationalExpression	code < 0		364976	0		<			
ANR	365041	Identifier	code		364976	0					
ANR	365042	PrimaryExpression	0		364976	1					
ANR	365043	ReturnStatement	return code ;	1019:8:36135:36146	364976	1	True				
ANR	365044	Identifier	code		364976	0					
ANR	365045	ExpressionStatement	"code = param_read_bool ( plist , ( param_name = ""NoInterpolateImagemasks"" ) , & NoInterpolateImagemasks )"	1021:4:36153:36250	364976	9	True				
ANR	365046	AssignmentExpression	"code = param_read_bool ( plist , ( param_name = ""NoInterpolateImagemasks"" ) , & NoInterpolateImagemasks )"		364976	0		=			
ANR	365047	Identifier	code		364976	0					
ANR	365048	CallExpression	"param_read_bool ( plist , ( param_name = ""NoInterpolateImagemasks"" ) , & NoInterpolateImagemasks )"		364976	1					
ANR	365049	Callee	param_read_bool		364976	0					
ANR	365050	Identifier	param_read_bool		364976	0					
ANR	365051	ArgumentList	plist		364976	1					
ANR	365052	Argument	plist		364976	0					
ANR	365053	Identifier	plist		364976	0					
ANR	365054	Argument	"param_name = ""NoInterpolateImagemasks"""		364976	1					
ANR	365055	AssignmentExpression	"param_name = ""NoInterpolateImagemasks"""		364976	0		=			
ANR	365056	Identifier	param_name		364976	0					
ANR	365057	PrimaryExpression	"""NoInterpolateImagemasks"""		364976	1					
ANR	365058	Argument	& NoInterpolateImagemasks		364976	2					
ANR	365059	UnaryOperationExpression	& NoInterpolateImagemasks		364976	0					
ANR	365060	UnaryOperator	&		364976	0					
ANR	365061	Identifier	NoInterpolateImagemasks		364976	1					
ANR	365062	IfStatement	if ( code < 0 )		364976	10					
ANR	365063	Condition	code < 0	1022:8:36260:36267	364976	0	True				
ANR	365064	RelationalExpression	code < 0		364976	0		<			
ANR	365065	Identifier	code		364976	0					
ANR	365066	PrimaryExpression	0		364976	1					
ANR	365067	ReturnStatement	return code ;	1023:8:36278:36289	364976	1	True				
ANR	365068	Identifier	code		364976	0					
ANR	365069	SwitchStatement	"switch ( code = param_read_string ( plist , ( param_name = ""OutputFile"" ) , & ofns ) )"		364976	11					
ANR	365070	Condition	"code = param_read_string ( plist , ( param_name = ""OutputFile"" ) , & ofns )"	1025:12:36304:36370	364976	0	True				
ANR	365071	AssignmentExpression	"code = param_read_string ( plist , ( param_name = ""OutputFile"" ) , & ofns )"		364976	0		=			
ANR	365072	Identifier	code		364976	0					
ANR	365073	CallExpression	"param_read_string ( plist , ( param_name = ""OutputFile"" ) , & ofns )"		364976	1					
ANR	365074	Callee	param_read_string		364976	0					
ANR	365075	Identifier	param_read_string		364976	0					
ANR	365076	ArgumentList	plist		364976	1					
ANR	365077	Argument	plist		364976	0					
ANR	365078	Identifier	plist		364976	0					
ANR	365079	Argument	"param_name = ""OutputFile"""		364976	1					
ANR	365080	AssignmentExpression	"param_name = ""OutputFile"""		364976	0		=			
ANR	365081	Identifier	param_name		364976	0					
ANR	365082	PrimaryExpression	"""OutputFile"""		364976	1					
ANR	365083	Argument	& ofns		364976	2					
ANR	365084	UnaryOperationExpression	& ofns		364976	0					
ANR	365085	UnaryOperator	&		364976	0					
ANR	365086	Identifier	ofns		364976	1					
ANR	365087	CompoundStatement		18:81:543:543	364976	1					
ANR	365088	Label	case 0 :	1026:8:36383:36389	364976	0	True				
ANR	365089	IfStatement	if ( ofns . size > fname_size )		364976	1					
ANR	365090	Condition	ofns . size > fname_size	1032:16:36630:36651	364976	0	True				
ANR	365091	RelationalExpression	ofns . size > fname_size		364976	0		>			
ANR	365092	MemberAccess	ofns . size		364976	0					
ANR	365093	Identifier	ofns		364976	0					
ANR	365094	Identifier	size		364976	1					
ANR	365095	Identifier	fname_size		364976	1					
ANR	365096	CompoundStatement		25:40:824:824	364976	1					
ANR	365097	ExpressionStatement	"eprintf1 ( ""\\nERROR: Output filename too long (maximum %d bytes).\\n"" , fname_size )"	1033:16:36672:36751	364976	0	True				
ANR	365098	CallExpression	"eprintf1 ( ""\\nERROR: Output filename too long (maximum %d bytes).\\n"" , fname_size )"		364976	0					
ANR	365099	Callee	eprintf1		364976	0					
ANR	365100	Identifier	eprintf1		364976	0					
ANR	365101	ArgumentList	"""\\nERROR: Output filename too long (maximum %d bytes).\\n"""		364976	1					
ANR	365102	Argument	"""\\nERROR: Output filename too long (maximum %d bytes).\\n"""		364976	0					
ANR	365103	PrimaryExpression	"""\\nERROR: Output filename too long (maximum %d bytes).\\n"""		364976	0					
ANR	365104	Argument	fname_size		364976	1					
ANR	365105	Identifier	fname_size		364976	0					
ANR	365106	ExpressionStatement	ecode = gs_error_limitcheck	1034:16:36769:36796	364976	1	True				
ANR	365107	AssignmentExpression	ecode = gs_error_limitcheck		364976	0		=			
ANR	365108	Identifier	ecode		364976	0					
ANR	365109	Identifier	gs_error_limitcheck		364976	1					
ANR	365110	ElseStatement	else		364976	0					
ANR	365111	IfStatement	"if ( ! bytes_compare ( ofns . data , ofns . size , ( const byte * ) vdev -> fname , strlen ( vdev -> fname ) ) )"		364976	0					
ANR	365112	Condition	"! bytes_compare ( ofns . data , ofns . size , ( const byte * ) vdev -> fname , strlen ( vdev -> fname ) )"	1036:21:36833:36988	364976	0	True				
ANR	365113	UnaryOperationExpression	"! bytes_compare ( ofns . data , ofns . size , ( const byte * ) vdev -> fname , strlen ( vdev -> fname ) )"		364976	0					
ANR	365114	UnaryOperator	!		364976	0					
ANR	365115	CallExpression	"bytes_compare ( ofns . data , ofns . size , ( const byte * ) vdev -> fname , strlen ( vdev -> fname ) )"		364976	1					
ANR	365116	Callee	bytes_compare		364976	0					
ANR	365117	Identifier	bytes_compare		364976	0					
ANR	365118	ArgumentList	ofns . data		364976	1					
ANR	365119	Argument	ofns . data		364976	0					
ANR	365120	MemberAccess	ofns . data		364976	0					
ANR	365121	Identifier	ofns		364976	0					
ANR	365122	Identifier	data		364976	1					
ANR	365123	Argument	ofns . size		364976	1					
ANR	365124	MemberAccess	ofns . size		364976	0					
ANR	365125	Identifier	ofns		364976	0					
ANR	365126	Identifier	size		364976	1					
ANR	365127	Argument	( const byte * ) vdev -> fname		364976	2					
ANR	365128	CastExpression	( const byte * ) vdev -> fname		364976	0					
ANR	365129	CastTarget	const byte *		364976	0					
ANR	365130	PtrMemberAccess	vdev -> fname		364976	1					
ANR	365131	Identifier	vdev		364976	0					
ANR	365132	Identifier	fname		364976	1					
ANR	365133	Argument	strlen ( vdev -> fname )		364976	3					
ANR	365134	CallExpression	strlen ( vdev -> fname )		364976	0					
ANR	365135	Callee	strlen		364976	0					
ANR	365136	Identifier	strlen		364976	0					
ANR	365137	ArgumentList	vdev -> fname		364976	1					
ANR	365138	Argument	vdev -> fname		364976	0					
ANR	365139	PtrMemberAccess	vdev -> fname		364976	0					
ANR	365140	Identifier	vdev		364976	0					
ANR	365141	Identifier	fname		364976	1					
ANR	365142	CompoundStatement		32:23:1183:1183	364976	1					
ANR	365143	ExpressionStatement	ofns . data = 0	1041:16:37108:37121	364976	0	True				
ANR	365144	AssignmentExpression	ofns . data = 0		364976	0		=			
ANR	365145	MemberAccess	ofns . data		364976	0					
ANR	365146	Identifier	ofns		364976	0					
ANR	365147	Identifier	data		364976	1					
ANR	365148	PrimaryExpression	0		364976	1					
ANR	365149	BreakStatement	break ;	1042:16:37139:37144	364976	1	True				
ANR	365150	ElseStatement	else		364976	0					
ANR	365151	IfStatement	if ( dev -> LockSafetyParams )		364976	0					
ANR	365152	Condition	dev -> LockSafetyParams	1043:23:37169:37189	364976	0	True				
ANR	365153	PtrMemberAccess	dev -> LockSafetyParams		364976	0					
ANR	365154	Identifier	dev		364976	0					
ANR	365155	Identifier	LockSafetyParams		364976	1					
ANR	365156	CompoundStatement		36:46:1362:1362	364976	1					
ANR	365157	ExpressionStatement	ecode = gs_error_invalidaccess	1044:20:37214:37244	364976	0	True				
ANR	365158	AssignmentExpression	ecode = gs_error_invalidaccess		364976	0		=			
ANR	365159	Identifier	ecode		364976	0					
ANR	365160	Identifier	gs_error_invalidaccess		364976	1					
ANR	365161	GotoStatement	goto ofe ;	1045:20:37266:37274	364976	1	True				
ANR	365162	Identifier	ofe		364976	0					
ANR	365163	BreakStatement	break ;	1047:12:37302:37307	364976	2	True				
ANR	365164	Label	default :	1048:8:37317:37324	364976	3	True				
ANR	365165	Identifier	default		364976	0					
ANR	365166	ExpressionStatement	ecode = code	1049:12:37338:37350	364976	4	True				
ANR	365167	AssignmentExpression	ecode = code		364976	0		=			
ANR	365168	Identifier	ecode		364976	0					
ANR	365169	Identifier	code		364976	1					
ANR	365170	Label	ofe :	1050:0:37352:37355	364976	5	True				
ANR	365171	Identifier	ofe		364976	0					
ANR	365172	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1050:12:37364:37408	364976	6	True				
ANR	365173	CallExpression	"param_signal_error ( plist , param_name , ecode )"		364976	0					
ANR	365174	Callee	param_signal_error		364976	0					
ANR	365175	Identifier	param_signal_error		364976	0					
ANR	365176	ArgumentList	plist		364976	1					
ANR	365177	Argument	plist		364976	0					
ANR	365178	Identifier	plist		364976	0					
ANR	365179	Argument	param_name		364976	1					
ANR	365180	Identifier	param_name		364976	0					
ANR	365181	Argument	ecode		364976	2					
ANR	365182	Identifier	ecode		364976	0					
ANR	365183	Label	case 1 :	1052:8:37449:37455	364976	7	True				
ANR	365184	ExpressionStatement	ofns . data = 0	1053:12:37469:37482	364976	8	True				
ANR	365185	AssignmentExpression	ofns . data = 0		364976	0		=			
ANR	365186	MemberAccess	ofns . data		364976	0					
ANR	365187	Identifier	ofns		364976	0					
ANR	365188	Identifier	data		364976	1					
ANR	365189	PrimaryExpression	0		364976	1					
ANR	365190	BreakStatement	break ;	1054:12:37496:37501	364976	9	True				
ANR	365191	SwitchStatement	"switch ( code = param_read_bool ( plist , ( param_name = ""BGPrint"" ) , & ignb ) )"		364976	12					
ANR	365192	Condition	"code = param_read_bool ( plist , ( param_name = ""BGPrint"" ) , & ignb )"	1057:12:37574:37635	364976	0	True				
ANR	365193	AssignmentExpression	"code = param_read_bool ( plist , ( param_name = ""BGPrint"" ) , & ignb )"		364976	0		=			
ANR	365194	Identifier	code		364976	0					
ANR	365195	CallExpression	"param_read_bool ( plist , ( param_name = ""BGPrint"" ) , & ignb )"		364976	1					
ANR	365196	Callee	param_read_bool		364976	0					
ANR	365197	Identifier	param_read_bool		364976	0					
ANR	365198	ArgumentList	plist		364976	1					
ANR	365199	Argument	plist		364976	0					
ANR	365200	Identifier	plist		364976	0					
ANR	365201	Argument	"param_name = ""BGPrint"""		364976	1					
ANR	365202	AssignmentExpression	"param_name = ""BGPrint"""		364976	0		=			
ANR	365203	Identifier	param_name		364976	0					
ANR	365204	PrimaryExpression	"""BGPrint"""		364976	1					
ANR	365205	Argument	& ignb		364976	2					
ANR	365206	UnaryOperationExpression	& ignb		364976	0					
ANR	365207	UnaryOperator	&		364976	0					
ANR	365208	Identifier	ignb		364976	1					
ANR	365209	CompoundStatement		50:76:1808:1808	364976	1					
ANR	365210	Label	default :	1058:8:37648:37655	364976	0	True				
ANR	365211	Identifier	default		364976	0					
ANR	365212	ExpressionStatement	ecode = code	1059:10:37667:37679	364976	1	True				
ANR	365213	AssignmentExpression	ecode = code		364976	0		=			
ANR	365214	Identifier	ecode		364976	0					
ANR	365215	Identifier	code		364976	1					
ANR	365216	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1060:10:37691:37735	364976	2	True				
ANR	365217	CallExpression	"param_signal_error ( plist , param_name , ecode )"		364976	0					
ANR	365218	Callee	param_signal_error		364976	0					
ANR	365219	Identifier	param_signal_error		364976	0					
ANR	365220	ArgumentList	plist		364976	1					
ANR	365221	Argument	plist		364976	0					
ANR	365222	Identifier	plist		364976	0					
ANR	365223	Argument	param_name		364976	1					
ANR	365224	Identifier	param_name		364976	0					
ANR	365225	Argument	ecode		364976	2					
ANR	365226	Identifier	ecode		364976	0					
ANR	365227	Label	case 0 :	1061:8:37745:37751	364976	3	True				
ANR	365228	Label	case 1 :	1062:8:37761:37767	364976	4	True				
ANR	365229	BreakStatement	break ;	1063:10:37779:37784	364976	5	True				
ANR	365230	SwitchStatement	"switch ( code = param_read_int ( plist , ( param_name = ""NumRenderingThreads"" ) , & igni ) )"		364976	13					
ANR	365231	Condition	"code = param_read_int ( plist , ( param_name = ""NumRenderingThreads"" ) , & igni )"	1065:12:37804:37876	364976	0	True				
ANR	365232	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""NumRenderingThreads"" ) , & igni )"		364976	0		=			
ANR	365233	Identifier	code		364976	0					
ANR	365234	CallExpression	"param_read_int ( plist , ( param_name = ""NumRenderingThreads"" ) , & igni )"		364976	1					
ANR	365235	Callee	param_read_int		364976	0					
ANR	365236	Identifier	param_read_int		364976	0					
ANR	365237	ArgumentList	plist		364976	1					
ANR	365238	Argument	plist		364976	0					
ANR	365239	Identifier	plist		364976	0					
ANR	365240	Argument	"param_name = ""NumRenderingThreads"""		364976	1					
ANR	365241	AssignmentExpression	"param_name = ""NumRenderingThreads"""		364976	0		=			
ANR	365242	Identifier	param_name		364976	0					
ANR	365243	PrimaryExpression	"""NumRenderingThreads"""		364976	1					
ANR	365244	Argument	& igni		364976	2					
ANR	365245	UnaryOperationExpression	& igni		364976	0					
ANR	365246	UnaryOperator	&		364976	0					
ANR	365247	Identifier	igni		364976	1					
ANR	365248	CompoundStatement		58:87:2049:2049	364976	1					
ANR	365249	Label	default :	1066:8:37889:37896	364976	0	True				
ANR	365250	Identifier	default		364976	0					
ANR	365251	ExpressionStatement	ecode = code	1067:10:37908:37920	364976	1	True				
ANR	365252	AssignmentExpression	ecode = code		364976	0		=			
ANR	365253	Identifier	ecode		364976	0					
ANR	365254	Identifier	code		364976	1					
ANR	365255	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1068:10:37932:37976	364976	2	True				
ANR	365256	CallExpression	"param_signal_error ( plist , param_name , ecode )"		364976	0					
ANR	365257	Callee	param_signal_error		364976	0					
ANR	365258	Identifier	param_signal_error		364976	0					
ANR	365259	ArgumentList	plist		364976	1					
ANR	365260	Argument	plist		364976	0					
ANR	365261	Identifier	plist		364976	0					
ANR	365262	Argument	param_name		364976	1					
ANR	365263	Identifier	param_name		364976	0					
ANR	365264	Argument	ecode		364976	2					
ANR	365265	Identifier	ecode		364976	0					
ANR	365266	Label	case 0 :	1069:8:37986:37992	364976	3	True				
ANR	365267	Label	case 1 :	1070:8:38002:38008	364976	4	True				
ANR	365268	BreakStatement	break ;	1071:10:38020:38025	364976	5	True				
ANR	365269	IfStatement	if ( ecode < 0 )		364976	14					
ANR	365270	Condition	ecode < 0	1074:8:38042:38050	364976	0	True				
ANR	365271	RelationalExpression	ecode < 0		364976	0		<			
ANR	365272	Identifier	ecode		364976	0					
ANR	365273	PrimaryExpression	0		364976	1					
ANR	365274	ReturnStatement	return ecode ;	1075:8:38061:38073	364976	1	True				
ANR	365275	Identifier	ecode		364976	0					
ANR	365276	CompoundStatement		70:4:2250:2250	364976	15					
ANR	365277	ExpressionStatement	dev -> is_open = false	1079:8:38154:38174	364976	0	True				
ANR	365278	AssignmentExpression	dev -> is_open = false		364976	0		=			
ANR	365279	PtrMemberAccess	dev -> is_open		364976	0					
ANR	365280	Identifier	dev		364976	0					
ANR	365281	Identifier	is_open		364976	1					
ANR	365282	Identifier	false		364976	1					
ANR	365283	ExpressionStatement	"code = gx_default_put_params ( dev , plist )"	1080:8:38184:38224	364976	1	True				
ANR	365284	AssignmentExpression	"code = gx_default_put_params ( dev , plist )"		364976	0		=			
ANR	365285	Identifier	code		364976	0					
ANR	365286	CallExpression	"gx_default_put_params ( dev , plist )"		364976	1					
ANR	365287	Callee	gx_default_put_params		364976	0					
ANR	365288	Identifier	gx_default_put_params		364976	0					
ANR	365289	ArgumentList	dev		364976	1					
ANR	365290	Argument	dev		364976	0					
ANR	365291	Identifier	dev		364976	0					
ANR	365292	Argument	plist		364976	1					
ANR	365293	Identifier	plist		364976	0					
ANR	365294	ExpressionStatement	dev -> is_open = open	1081:8:38234:38253	364976	2	True				
ANR	365295	AssignmentExpression	dev -> is_open = open		364976	0		=			
ANR	365296	PtrMemberAccess	dev -> is_open		364976	0					
ANR	365297	Identifier	dev		364976	0					
ANR	365298	Identifier	is_open		364976	1					
ANR	365299	Identifier	open		364976	1					
ANR	365300	IfStatement	if ( code < 0 )		364976	16					
ANR	365301	Condition	code < 0	1083:8:38269:38276	364976	0	True				
ANR	365302	RelationalExpression	code < 0		364976	0		<			
ANR	365303	Identifier	code		364976	0					
ANR	365304	PrimaryExpression	0		364976	1					
ANR	365305	ReturnStatement	return code ;	1084:8:38287:38298	364976	1	True				
ANR	365306	Identifier	code		364976	0					
ANR	365307	IfStatement	if ( dev -> color_info . anti_alias . text_bits != 1 || dev -> color_info . anti_alias . graphics_bits != 1 )		364976	17					
ANR	365308	Condition	dev -> color_info . anti_alias . text_bits != 1 || dev -> color_info . anti_alias . graphics_bits != 1	1086:8:38309:38398	364976	0	True				
ANR	365309	OrExpression	dev -> color_info . anti_alias . text_bits != 1 || dev -> color_info . anti_alias . graphics_bits != 1		364976	0		||			
ANR	365310	EqualityExpression	dev -> color_info . anti_alias . text_bits != 1		364976	0		!=			
ANR	365311	MemberAccess	dev -> color_info . anti_alias . text_bits		364976	0					
ANR	365312	MemberAccess	dev -> color_info . anti_alias		364976	0					
ANR	365313	PtrMemberAccess	dev -> color_info		364976	0					
ANR	365314	Identifier	dev		364976	0					
ANR	365315	Identifier	color_info		364976	1					
ANR	365316	Identifier	anti_alias		364976	1					
ANR	365317	Identifier	text_bits		364976	1					
ANR	365318	PrimaryExpression	1		364976	1					
ANR	365319	EqualityExpression	dev -> color_info . anti_alias . graphics_bits != 1		364976	1		!=			
ANR	365320	MemberAccess	dev -> color_info . anti_alias . graphics_bits		364976	0					
ANR	365321	MemberAccess	dev -> color_info . anti_alias		364976	0					
ANR	365322	PtrMemberAccess	dev -> color_info		364976	0					
ANR	365323	Identifier	dev		364976	0					
ANR	365324	Identifier	color_info		364976	1					
ANR	365325	Identifier	anti_alias		364976	1					
ANR	365326	Identifier	graphics_bits		364976	1					
ANR	365327	PrimaryExpression	1		364976	1					
ANR	365328	CompoundStatement		79:100:2571:2571	364976	1					
ANR	365329	ExpressionStatement	"emprintf ( dev -> memory , ""\\n\\n  ERROR:\\n    Can't set GraphicsAlphaBits or TextAlphaBits with a vector device.\\n"" )"	1087:8:38411:38534	364976	0	True				
ANR	365330	CallExpression	"emprintf ( dev -> memory , ""\\n\\n  ERROR:\\n    Can't set GraphicsAlphaBits or TextAlphaBits with a vector device.\\n"" )"		364976	0					
ANR	365331	Callee	emprintf		364976	0					
ANR	365332	Identifier	emprintf		364976	0					
ANR	365333	ArgumentList	dev -> memory		364976	1					
ANR	365334	Argument	dev -> memory		364976	0					
ANR	365335	PtrMemberAccess	dev -> memory		364976	0					
ANR	365336	Identifier	dev		364976	0					
ANR	365337	Identifier	memory		364976	1					
ANR	365338	Argument	"""\\n\\n  ERROR:\\n    Can't set GraphicsAlphaBits or TextAlphaBits with a vector device.\\n"""		364976	1					
ANR	365339	PrimaryExpression	"""\\n\\n  ERROR:\\n    Can't set GraphicsAlphaBits or TextAlphaBits with a vector device.\\n"""		364976	0					
ANR	365340	ExpressionStatement	return_error ( gs_error_unregistered )	1089:8:38544:38579	364976	1	True				
ANR	365341	CallExpression	return_error ( gs_error_unregistered )		364976	0					
ANR	365342	Callee	return_error		364976	0					
ANR	365343	Identifier	return_error		364976	0					
ANR	365344	ArgumentList	gs_error_unregistered		364976	1					
ANR	365345	Argument	gs_error_unregistered		364976	0					
ANR	365346	Identifier	gs_error_unregistered		364976	0					
ANR	365347	IfStatement	if ( ofns . data != 0 )		364976	18					
ANR	365348	Condition	ofns . data != 0	1092:8:38596:38609	364976	0	True				
ANR	365349	EqualityExpression	ofns . data != 0		364976	0		!=			
ANR	365350	MemberAccess	ofns . data		364976	0					
ANR	365351	Identifier	ofns		364976	0					
ANR	365352	Identifier	data		364976	1					
ANR	365353	PrimaryExpression	0		364976	1					
ANR	365354	CompoundStatement		85:24:2782:2782	364976	1					
ANR	365355	ExpressionStatement	"memcpy ( vdev -> fname , ofns . data , ofns . size )"	1094:8:38697:38738	364976	0	True				
ANR	365356	CallExpression	"memcpy ( vdev -> fname , ofns . data , ofns . size )"		364976	0					
ANR	365357	Callee	memcpy		364976	0					
ANR	365358	Identifier	memcpy		364976	0					
ANR	365359	ArgumentList	vdev -> fname		364976	1					
ANR	365360	Argument	vdev -> fname		364976	0					
ANR	365361	PtrMemberAccess	vdev -> fname		364976	0					
ANR	365362	Identifier	vdev		364976	0					
ANR	365363	Identifier	fname		364976	1					
ANR	365364	Argument	ofns . data		364976	1					
ANR	365365	MemberAccess	ofns . data		364976	0					
ANR	365366	Identifier	ofns		364976	0					
ANR	365367	Identifier	data		364976	1					
ANR	365368	Argument	ofns . size		364976	2					
ANR	365369	MemberAccess	ofns . size		364976	0					
ANR	365370	Identifier	ofns		364976	0					
ANR	365371	Identifier	size		364976	1					
ANR	365372	ExpressionStatement	vdev -> fname [ ofns . size ] = 0	1095:8:38748:38774	364976	1	True				
ANR	365373	AssignmentExpression	vdev -> fname [ ofns . size ] = 0		364976	0		=			
ANR	365374	ArrayIndexing	vdev -> fname [ ofns . size ]		364976	0					
ANR	365375	PtrMemberAccess	vdev -> fname		364976	0					
ANR	365376	Identifier	vdev		364976	0					
ANR	365377	Identifier	fname		364976	1					
ANR	365378	MemberAccess	ofns . size		364976	1					
ANR	365379	Identifier	ofns		364976	0					
ANR	365380	Identifier	size		364976	1					
ANR	365381	PrimaryExpression	0		364976	1					
ANR	365382	IfStatement	if ( dev -> is_open && vdev -> strm != 0 && stell ( vdev -> strm ) != 0 )		364976	2					
ANR	365383	Condition	dev -> is_open && vdev -> strm != 0 && stell ( vdev -> strm ) != 0	1096:12:38788:38844	364976	0	True				
ANR	365384	AndExpression	dev -> is_open && vdev -> strm != 0 && stell ( vdev -> strm ) != 0		364976	0		&&			
ANR	365385	PtrMemberAccess	dev -> is_open		364976	0					
ANR	365386	Identifier	dev		364976	0					
ANR	365387	Identifier	is_open		364976	1					
ANR	365388	AndExpression	vdev -> strm != 0 && stell ( vdev -> strm ) != 0		364976	1		&&			
ANR	365389	EqualityExpression	vdev -> strm != 0		364976	0		!=			
ANR	365390	PtrMemberAccess	vdev -> strm		364976	0					
ANR	365391	Identifier	vdev		364976	0					
ANR	365392	Identifier	strm		364976	1					
ANR	365393	PrimaryExpression	0		364976	1					
ANR	365394	EqualityExpression	stell ( vdev -> strm ) != 0		364976	1		!=			
ANR	365395	CallExpression	stell ( vdev -> strm )		364976	0					
ANR	365396	Callee	stell		364976	0					
ANR	365397	Identifier	stell		364976	0					
ANR	365398	ArgumentList	vdev -> strm		364976	1					
ANR	365399	Argument	vdev -> strm		364976	0					
ANR	365400	PtrMemberAccess	vdev -> strm		364976	0					
ANR	365401	Identifier	vdev		364976	0					
ANR	365402	Identifier	strm		364976	1					
ANR	365403	PrimaryExpression	0		364976	1					
ANR	365404	CompoundStatement		89:71:3017:3017	364976	1					
ANR	365405	ExpressionStatement	ecode = gs_closedevice ( dev )	1098:12:38945:38972	364976	0	True				
ANR	365406	AssignmentExpression	ecode = gs_closedevice ( dev )		364976	0		=			
ANR	365407	Identifier	ecode		364976	0					
ANR	365408	CallExpression	gs_closedevice ( dev )		364976	1					
ANR	365409	Callee	gs_closedevice		364976	0					
ANR	365410	Identifier	gs_closedevice		364976	0					
ANR	365411	ArgumentList	dev		364976	1					
ANR	365412	Argument	dev		364976	0					
ANR	365413	Identifier	dev		364976	0					
ANR	365414	IfStatement	if ( ecode < 0 )		364976	1					
ANR	365415	Condition	ecode < 0	1099:16:38990:38998	364976	0	True				
ANR	365416	RelationalExpression	ecode < 0		364976	0		<			
ANR	365417	Identifier	ecode		364976	0					
ANR	365418	PrimaryExpression	0		364976	1					
ANR	365419	CompoundStatement		92:27:3171:3171	364976	1					
ANR	365420	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1100:16:39019:39063	364976	0	True				
ANR	365421	CallExpression	"param_signal_error ( plist , param_name , ecode )"		364976	0					
ANR	365422	Callee	param_signal_error		364976	0					
ANR	365423	Identifier	param_signal_error		364976	0					
ANR	365424	ArgumentList	plist		364976	1					
ANR	365425	Argument	plist		364976	0					
ANR	365426	Identifier	plist		364976	0					
ANR	365427	Argument	param_name		364976	1					
ANR	365428	Identifier	param_name		364976	0					
ANR	365429	Argument	ecode		364976	2					
ANR	365430	Identifier	ecode		364976	0					
ANR	365431	ReturnStatement	return ecode ;	1101:16:39081:39093	364976	1	True				
ANR	365432	Identifier	ecode		364976	0					
ANR	365433	IfStatement	if ( vdev -> file != 0 )		364976	2					
ANR	365434	Condition	vdev -> file != 0	1103:16:39189:39203	364976	0	True				
ANR	365435	EqualityExpression	vdev -> file != 0		364976	0		!=			
ANR	365436	PtrMemberAccess	vdev -> file		364976	0					
ANR	365437	Identifier	vdev		364976	0					
ANR	365438	Identifier	file		364976	1					
ANR	365439	PrimaryExpression	0		364976	1					
ANR	365440	CompoundStatement		97:16:3394:3435	364976	1					
ANR	365441	IdentifierDeclStatement	gx_device_bbox * bbdev = vdev -> bbox_device ;	1104:16:39224:39265	364976	0	True				
ANR	365442	IdentifierDecl	* bbdev = vdev -> bbox_device		364976	0					
ANR	365443	IdentifierDeclType	gx_device_bbox *		364976	0					
ANR	365444	Identifier	bbdev		364976	1					
ANR	365445	AssignmentExpression	* bbdev = vdev -> bbox_device		364976	2		=			
ANR	365446	Identifier	bbdev		364976	0					
ANR	365447	PtrMemberAccess	vdev -> bbox_device		364976	1					
ANR	365448	Identifier	vdev		364976	0					
ANR	365449	Identifier	bbox_device		364976	1					
ANR	365450	ExpressionStatement	vdev -> bbox_device = 0	1106:16:39284:39305	364976	1	True				
ANR	365451	AssignmentExpression	vdev -> bbox_device = 0		364976	0		=			
ANR	365452	PtrMemberAccess	vdev -> bbox_device		364976	0					
ANR	365453	Identifier	vdev		364976	0					
ANR	365454	Identifier	bbox_device		364976	1					
ANR	365455	PrimaryExpression	0		364976	1					
ANR	365456	ExpressionStatement	code = gdev_vector_close_file ( vdev )	1107:16:39351:39386	364976	2	True				
ANR	365457	AssignmentExpression	code = gdev_vector_close_file ( vdev )		364976	0		=			
ANR	365458	Identifier	code		364976	0					
ANR	365459	CallExpression	gdev_vector_close_file ( vdev )		364976	1					
ANR	365460	Callee	gdev_vector_close_file		364976	0					
ANR	365461	Identifier	gdev_vector_close_file		364976	0					
ANR	365462	ArgumentList	vdev		364976	1					
ANR	365463	Argument	vdev		364976	0					
ANR	365464	Identifier	vdev		364976	0					
ANR	365465	ExpressionStatement	vdev -> bbox_device = bbdev	1108:16:39404:39429	364976	3	True				
ANR	365466	AssignmentExpression	vdev -> bbox_device = bbdev		364976	0		=			
ANR	365467	PtrMemberAccess	vdev -> bbox_device		364976	0					
ANR	365468	Identifier	vdev		364976	0					
ANR	365469	Identifier	bbox_device		364976	1					
ANR	365470	Identifier	bbdev		364976	1					
ANR	365471	IfStatement	if ( code < 0 )		364976	4					
ANR	365472	Condition	code < 0	1109:20:39451:39458	364976	0	True				
ANR	365473	RelationalExpression	code < 0		364976	0		<			
ANR	365474	Identifier	code		364976	0					
ANR	365475	PrimaryExpression	0		364976	1					
ANR	365476	ReturnStatement	return code ;	1110:20:39481:39492	364976	1	True				
ANR	365477	Identifier	code		364976	0					
ANR	365478	ExpressionStatement	ecode = gs_opendevice ( dev )	1112:12:39520:39546	364976	3	True				
ANR	365479	AssignmentExpression	ecode = gs_opendevice ( dev )		364976	0		=			
ANR	365480	Identifier	ecode		364976	0					
ANR	365481	CallExpression	gs_opendevice ( dev )		364976	1					
ANR	365482	Callee	gs_opendevice		364976	0					
ANR	365483	Identifier	gs_opendevice		364976	0					
ANR	365484	ArgumentList	dev		364976	1					
ANR	365485	Argument	dev		364976	0					
ANR	365486	Identifier	dev		364976	0					
ANR	365487	IfStatement	if ( ecode < 0 )		364976	4					
ANR	365488	Condition	ecode < 0	1113:16:39617:39625	364976	0	True				
ANR	365489	RelationalExpression	ecode < 0		364976	0		<			
ANR	365490	Identifier	ecode		364976	0					
ANR	365491	PrimaryExpression	0		364976	1					
ANR	365492	CompoundStatement		106:27:3798:3798	364976	1					
ANR	365493	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1114:16:39646:39690	364976	0	True				
ANR	365494	CallExpression	"param_signal_error ( plist , param_name , ecode )"		364976	0					
ANR	365495	Callee	param_signal_error		364976	0					
ANR	365496	Identifier	param_signal_error		364976	0					
ANR	365497	ArgumentList	plist		364976	1					
ANR	365498	Argument	plist		364976	0					
ANR	365499	Identifier	plist		364976	0					
ANR	365500	Argument	param_name		364976	1					
ANR	365501	Identifier	param_name		364976	0					
ANR	365502	Argument	ecode		364976	2					
ANR	365503	Identifier	ecode		364976	0					
ANR	365504	ReturnStatement	return ecode ;	1115:16:39708:39720	364976	1	True				
ANR	365505	Identifier	ecode		364976	0					
ANR	365506	ElseStatement	else		364976	0					
ANR	365507	IfStatement	if ( dev -> is_open )		364976	0					
ANR	365508	Condition	dev -> is_open	1119:17:39838:39849	364976	0	True				
ANR	365509	PtrMemberAccess	dev -> is_open		364976	0					
ANR	365510	Identifier	dev		364976	0					
ANR	365511	Identifier	is_open		364976	1					
ANR	365512	CompoundStatement		112:31:4022:4022	364976	1					
ANR	365513	ReturnStatement	"return gdev_vector_open_file_options ( vdev , vdev -> strmbuf_size , vdev -> open_options ) ;"	1120:12:39866:39978	364976	0	True				
ANR	365514	CallExpression	"gdev_vector_open_file_options ( vdev , vdev -> strmbuf_size , vdev -> open_options )"		364976	0					
ANR	365515	Callee	gdev_vector_open_file_options		364976	0					
ANR	365516	Identifier	gdev_vector_open_file_options		364976	0					
ANR	365517	ArgumentList	vdev		364976	1					
ANR	365518	Argument	vdev		364976	0					
ANR	365519	Identifier	vdev		364976	0					
ANR	365520	Argument	vdev -> strmbuf_size		364976	1					
ANR	365521	PtrMemberAccess	vdev -> strmbuf_size		364976	0					
ANR	365522	Identifier	vdev		364976	0					
ANR	365523	Identifier	strmbuf_size		364976	1					
ANR	365524	Argument	vdev -> open_options		364976	2					
ANR	365525	PtrMemberAccess	vdev -> open_options		364976	0					
ANR	365526	Identifier	vdev		364976	0					
ANR	365527	Identifier	open_options		364976	1					
ANR	365528	ReturnStatement	return 0 ;	1124:4:40000:40008	364976	19	True				
ANR	365529	PrimaryExpression	0		364976	0					
ANR	365530	ReturnType	int		364976	1					
ANR	365531	Identifier	gdev_vector_put_params		364976	2					
ANR	365532	ParameterList	"gx_device * dev , gs_param_list * plist"		364976	3					
ANR	365533	Parameter	gx_device * dev	1007:23:35789:35803	364976	0	True				
ANR	365534	ParameterType	gx_device *		364976	0					
ANR	365535	Identifier	dev		364976	1					
ANR	365536	Parameter	gs_param_list * plist	1007:40:35806:35826	364976	1	True				
ANR	365537	ParameterType	gs_param_list *		364976	0					
ANR	365538	Identifier	plist		364976	1					
ANR	365539	CFGEntryNode	ENTRY		364976		True				
ANR	365540	CFGExitNode	EXIT		364976		True				
ANR	365541	Symbol	vdev -> open_options		364976						
ANR	365542	Symbol	gdev_vector_close_file		364976						
ANR	365543	Symbol	gs_opendevice		364976						
ANR	365544	Symbol	* vdev -> fname		364976						
ANR	365545	Symbol	vdev -> strm		364976						
ANR	365546	Symbol	strlen		364976						
ANR	365547	Symbol	ofns . data		364976						
ANR	365548	Symbol	dev		364976						
ANR	365549	Symbol	* * vdev		364976						
ANR	365550	Symbol	NoInterpolateImagemasks		364976						
ANR	365551	Symbol	HighLevelDevice		364976						
ANR	365552	Symbol	gs_error_invalidaccess		364976						
ANR	365553	Symbol	dev -> color_info . anti_alias		364976						
ANR	365554	Symbol	param_read_bool		364976						
ANR	365555	Symbol	param_read_string		364976						
ANR	365556	Symbol	dev -> LockSafetyParams		364976						
ANR	365557	Symbol	stell		364976						
ANR	365558	Symbol	* vdev		364976						
ANR	365559	Symbol	* ofns		364976						
ANR	365560	Symbol	dev -> is_open		364976						
ANR	365561	Symbol	bytes_compare		364976						
ANR	365562	Symbol	dev -> color_info . anti_alias . text_bits		364976						
ANR	365563	Symbol	* dev		364976						
ANR	365564	Symbol	& ignb		364976						
ANR	365565	Symbol	vdev -> bbox_device		364976						
ANR	365566	Symbol	fname_size		364976						
ANR	365567	Symbol	gs_error_unregistered		364976						
ANR	365568	Symbol	code		364976						
ANR	365569	Symbol	bbdev		364976						
ANR	365570	Symbol	vdev -> fname		364976						
ANR	365571	Symbol	dev -> color_info		364976						
ANR	365572	Symbol	ofns . size		364976						
ANR	365573	Symbol	vdev -> file		364976						
ANR	365574	Symbol	plist		364976						
ANR	365575	Symbol	param_read_int		364976						
ANR	365576	Symbol	gs_error_limitcheck		364976						
ANR	365577	Symbol	& ofns		364976						
ANR	365578	Symbol	& igni		364976						
ANR	365579	Symbol	vdev -> strmbuf_size		364976						
ANR	365580	Symbol	ignb		364976						
ANR	365581	Symbol	igni		364976						
ANR	365582	Symbol	ofns		364976						
ANR	365583	Symbol	vdev		364976						
ANR	365584	Symbol	false		364976						
ANR	365585	Symbol	& HighLevelDevice		364976						
ANR	365586	Symbol	& NoInterpolateImagemasks		364976						
ANR	365587	Symbol	ecode		364976						
ANR	365588	Symbol	* ofns . size		364976						
ANR	365589	Symbol	gx_default_put_params		364976						
ANR	365590	Symbol	dev -> memory		364976						
ANR	365591	Symbol	dev -> color_info . anti_alias . graphics_bits		364976						
ANR	365592	Symbol	param_name		364976						
ANR	365593	Symbol	open		364976						
ANR	365594	Symbol	gs_closedevice		364976						
ANR	365595	Symbol	gdev_vector_open_file_options		364976						
ANR	365596	Function	gdev_vector_fill_rectangle	1129:0:40063:41197							
ANR	365597	FunctionDef	"gdev_vector_fill_rectangle (gx_device * dev , int x , int y , int w , int h , gx_color_index color)"		365596	0					
ANR	365598	CompoundStatement		1132:0:40188:41197	365596	0					
ANR	365599	IdentifierDeclStatement	gx_drawing_color dcolor ;	1133:4:40194:40217	365596	0	True				
ANR	365600	IdentifierDecl	dcolor		365596	0					
ANR	365601	IdentifierDeclType	gx_drawing_color		365596	0					
ANR	365602	Identifier	dcolor		365596	1					
ANR	365603	IfStatement	if ( ! vdev -> in_page && color == vdev -> white )		365596	1					
ANR	365604	Condition	! vdev -> in_page && color == vdev -> white	1136:8:40274:40311	365596	0	True				
ANR	365605	AndExpression	! vdev -> in_page && color == vdev -> white		365596	0		&&			
ANR	365606	UnaryOperationExpression	! vdev -> in_page		365596	0					
ANR	365607	UnaryOperator	!		365596	0					
ANR	365608	PtrMemberAccess	vdev -> in_page		365596	1					
ANR	365609	Identifier	vdev		365596	0					
ANR	365610	Identifier	in_page		365596	1					
ANR	365611	EqualityExpression	color == vdev -> white		365596	1		==			
ANR	365612	Identifier	color		365596	0					
ANR	365613	PtrMemberAccess	vdev -> white		365596	1					
ANR	365614	Identifier	vdev		365596	0					
ANR	365615	Identifier	white		365596	1					
ANR	365616	ReturnStatement	return 0 ;	1137:8:40322:40330	365596	1	True				
ANR	365617	PrimaryExpression	0		365596	0					
ANR	365618	ExpressionStatement	"set_nonclient_dev_color ( & dcolor , color )"	1142:4:40476:40515	365596	2	True				
ANR	365619	CallExpression	"set_nonclient_dev_color ( & dcolor , color )"		365596	0					
ANR	365620	Callee	set_nonclient_dev_color		365596	0					
ANR	365621	Identifier	set_nonclient_dev_color		365596	0					
ANR	365622	ArgumentList	& dcolor		365596	1					
ANR	365623	Argument	& dcolor		365596	0					
ANR	365624	UnaryOperationExpression	& dcolor		365596	0					
ANR	365625	UnaryOperator	&		365596	0					
ANR	365626	Identifier	dcolor		365596	1					
ANR	365627	Argument	color		365596	1					
ANR	365628	Identifier	color		365596	0					
ANR	365629	CompoundStatement		14:8:391:442	365596	3					
ANR	365630	IdentifierDeclStatement	"int code = gdev_vector_update_clip_path ( vdev , NULL ) ;"	1145:8:40580:40631	365596	0	True				
ANR	365631	IdentifierDecl	"code = gdev_vector_update_clip_path ( vdev , NULL )"		365596	0					
ANR	365632	IdentifierDeclType	int		365596	0					
ANR	365633	Identifier	code		365596	1					
ANR	365634	AssignmentExpression	"code = gdev_vector_update_clip_path ( vdev , NULL )"		365596	2		=			
ANR	365635	Identifier	code		365596	0					
ANR	365636	CallExpression	"gdev_vector_update_clip_path ( vdev , NULL )"		365596	1					
ANR	365637	Callee	gdev_vector_update_clip_path		365596	0					
ANR	365638	Identifier	gdev_vector_update_clip_path		365596	0					
ANR	365639	ArgumentList	vdev		365596	1					
ANR	365640	Argument	vdev		365596	0					
ANR	365641	Identifier	vdev		365596	0					
ANR	365642	Argument	NULL		365596	1					
ANR	365643	Identifier	NULL		365596	0					
ANR	365644	IfStatement	if ( code < 0 )		365596	1					
ANR	365645	Condition	code < 0	1147:12:40646:40653	365596	0	True				
ANR	365646	RelationalExpression	code < 0		365596	0		<			
ANR	365647	Identifier	code		365596	0					
ANR	365648	PrimaryExpression	0		365596	1					
ANR	365649	ReturnStatement	return code ;	1148:12:40668:40679	365596	1	True				
ANR	365650	Identifier	code		365596	0					
ANR	365651	IfStatement	"if ( ( code = update_fill ( vdev , NULL , & dcolor , rop3_T ) ) < 0 )"		365596	2					
ANR	365652	Condition	"( code = update_fill ( vdev , NULL , & dcolor , rop3_T ) ) < 0"	1149:12:40693:40745	365596	0	True				
ANR	365653	RelationalExpression	"( code = update_fill ( vdev , NULL , & dcolor , rop3_T ) ) < 0"		365596	0		<			
ANR	365654	AssignmentExpression	"code = update_fill ( vdev , NULL , & dcolor , rop3_T )"		365596	0		=			
ANR	365655	Identifier	code		365596	0					
ANR	365656	CallExpression	"update_fill ( vdev , NULL , & dcolor , rop3_T )"		365596	1					
ANR	365657	Callee	update_fill		365596	0					
ANR	365658	Identifier	update_fill		365596	0					
ANR	365659	ArgumentList	vdev		365596	1					
ANR	365660	Argument	vdev		365596	0					
ANR	365661	Identifier	vdev		365596	0					
ANR	365662	Argument	NULL		365596	1					
ANR	365663	Identifier	NULL		365596	0					
ANR	365664	Argument	& dcolor		365596	2					
ANR	365665	UnaryOperationExpression	& dcolor		365596	0					
ANR	365666	UnaryOperator	&		365596	0					
ANR	365667	Identifier	dcolor		365596	1					
ANR	365668	Argument	rop3_T		365596	3					
ANR	365669	Identifier	rop3_T		365596	0					
ANR	365670	PrimaryExpression	0		365596	1					
ANR	365671	ReturnStatement	return code ;	1150:12:40760:40771	365596	1	True				
ANR	365672	Identifier	code		365596	0					
ANR	365673	IfStatement	if ( vdev -> bbox_device )		365596	4					
ANR	365674	Condition	vdev -> bbox_device	1152:8:40787:40803	365596	0	True				
ANR	365675	PtrMemberAccess	vdev -> bbox_device		365596	0					
ANR	365676	Identifier	vdev		365596	0					
ANR	365677	Identifier	bbox_device		365596	1					
ANR	365678	CompoundStatement		22:8:627:745	365596	1					
ANR	365679	IdentifierDeclStatement	"int code = ( * dev_proc ( vdev -> bbox_device , fill_rectangle ) ) ( ( gx_device * ) vdev -> bbox_device , x , y , w , h , color ) ;"	1153:8:40816:40934	365596	0	True				
ANR	365680	IdentifierDecl	"code = ( * dev_proc ( vdev -> bbox_device , fill_rectangle ) ) ( ( gx_device * ) vdev -> bbox_device , x , y , w , h , color )"		365596	0					
ANR	365681	IdentifierDeclType	int		365596	0					
ANR	365682	Identifier	code		365596	1					
ANR	365683	AssignmentExpression	"code = ( * dev_proc ( vdev -> bbox_device , fill_rectangle ) ) ( ( gx_device * ) vdev -> bbox_device , x , y , w , h , color )"		365596	2		=			
ANR	365684	Identifier	code		365596	0					
ANR	365685	CallExpression	"( * dev_proc ( vdev -> bbox_device , fill_rectangle ) ) ( ( gx_device * ) vdev -> bbox_device , x , y , w , h , color )"		365596	1					
ANR	365686	Callee	"* dev_proc ( vdev -> bbox_device , fill_rectangle )"		365596	0					
ANR	365687	UnaryOperationExpression	"* dev_proc ( vdev -> bbox_device , fill_rectangle )"		365596	0					
ANR	365688	UnaryOperator	*		365596	0					
ANR	365689	CallExpression	"dev_proc ( vdev -> bbox_device , fill_rectangle )"		365596	1					
ANR	365690	Callee	dev_proc		365596	0					
ANR	365691	Identifier	dev_proc		365596	0					
ANR	365692	ArgumentList	vdev -> bbox_device		365596	1					
ANR	365693	Argument	vdev -> bbox_device		365596	0					
ANR	365694	PtrMemberAccess	vdev -> bbox_device		365596	0					
ANR	365695	Identifier	vdev		365596	0					
ANR	365696	Identifier	bbox_device		365596	1					
ANR	365697	Argument	fill_rectangle		365596	1					
ANR	365698	Identifier	fill_rectangle		365596	0					
ANR	365699	ArgumentList	( gx_device * ) vdev -> bbox_device		365596	1					
ANR	365700	Argument	( gx_device * ) vdev -> bbox_device		365596	0					
ANR	365701	CastExpression	( gx_device * ) vdev -> bbox_device		365596	0					
ANR	365702	CastTarget	gx_device *		365596	0					
ANR	365703	PtrMemberAccess	vdev -> bbox_device		365596	1					
ANR	365704	Identifier	vdev		365596	0					
ANR	365705	Identifier	bbox_device		365596	1					
ANR	365706	Argument	x		365596	1					
ANR	365707	Identifier	x		365596	0					
ANR	365708	Argument	y		365596	2					
ANR	365709	Identifier	y		365596	0					
ANR	365710	Argument	w		365596	3					
ANR	365711	Identifier	w		365596	0					
ANR	365712	Argument	h		365596	4					
ANR	365713	Identifier	h		365596	0					
ANR	365714	Argument	color		365596	5					
ANR	365715	Identifier	color		365596	0					
ANR	365716	IfStatement	if ( code < 0 )		365596	1					
ANR	365717	Condition	code < 0	1156:12:40949:40956	365596	0	True				
ANR	365718	RelationalExpression	code < 0		365596	0		<			
ANR	365719	Identifier	code		365596	0					
ANR	365720	PrimaryExpression	0		365596	1					
ANR	365721	ReturnStatement	return code ;	1157:12:40971:40982	365596	1	True				
ANR	365722	Identifier	code		365596	0					
ANR	365723	ReturnStatement	"return ( * vdev_proc ( vdev , dorect ) ) ( vdev , int2fixed ( x ) , int2fixed ( y ) , int2fixed ( x + w ) , int2fixed ( y + h ) , gx_path_type_fill ) ;"	1159:4:40994:41195	365596	5	True				
ANR	365724	CallExpression	"( * vdev_proc ( vdev , dorect ) ) ( vdev , int2fixed ( x ) , int2fixed ( y ) , int2fixed ( x + w ) , int2fixed ( y + h ) , gx_path_type_fill )"		365596	0					
ANR	365725	Callee	"* vdev_proc ( vdev , dorect )"		365596	0					
ANR	365726	UnaryOperationExpression	"* vdev_proc ( vdev , dorect )"		365596	0					
ANR	365727	UnaryOperator	*		365596	0					
ANR	365728	CallExpression	"vdev_proc ( vdev , dorect )"		365596	1					
ANR	365729	Callee	vdev_proc		365596	0					
ANR	365730	Identifier	vdev_proc		365596	0					
ANR	365731	ArgumentList	vdev		365596	1					
ANR	365732	Argument	vdev		365596	0					
ANR	365733	Identifier	vdev		365596	0					
ANR	365734	Argument	dorect		365596	1					
ANR	365735	Identifier	dorect		365596	0					
ANR	365736	ArgumentList	vdev		365596	1					
ANR	365737	Argument	vdev		365596	0					
ANR	365738	Identifier	vdev		365596	0					
ANR	365739	Argument	int2fixed ( x )		365596	1					
ANR	365740	CallExpression	int2fixed ( x )		365596	0					
ANR	365741	Callee	int2fixed		365596	0					
ANR	365742	Identifier	int2fixed		365596	0					
ANR	365743	ArgumentList	x		365596	1					
ANR	365744	Argument	x		365596	0					
ANR	365745	Identifier	x		365596	0					
ANR	365746	Argument	int2fixed ( y )		365596	2					
ANR	365747	CallExpression	int2fixed ( y )		365596	0					
ANR	365748	Callee	int2fixed		365596	0					
ANR	365749	Identifier	int2fixed		365596	0					
ANR	365750	ArgumentList	y		365596	1					
ANR	365751	Argument	y		365596	0					
ANR	365752	Identifier	y		365596	0					
ANR	365753	Argument	int2fixed ( x + w )		365596	3					
ANR	365754	CallExpression	int2fixed ( x + w )		365596	0					
ANR	365755	Callee	int2fixed		365596	0					
ANR	365756	Identifier	int2fixed		365596	0					
ANR	365757	ArgumentList	x + w		365596	1					
ANR	365758	Argument	x + w		365596	0					
ANR	365759	AdditiveExpression	x + w		365596	0		+			
ANR	365760	Identifier	x		365596	0					
ANR	365761	Identifier	w		365596	1					
ANR	365762	Argument	int2fixed ( y + h )		365596	4					
ANR	365763	CallExpression	int2fixed ( y + h )		365596	0					
ANR	365764	Callee	int2fixed		365596	0					
ANR	365765	Identifier	int2fixed		365596	0					
ANR	365766	ArgumentList	y + h		365596	1					
ANR	365767	Argument	y + h		365596	0					
ANR	365768	AdditiveExpression	y + h		365596	0		+			
ANR	365769	Identifier	y		365596	0					
ANR	365770	Identifier	h		365596	1					
ANR	365771	Argument	gx_path_type_fill		365596	5					
ANR	365772	Identifier	gx_path_type_fill		365596	0					
ANR	365773	ReturnType	int		365596	1					
ANR	365774	Identifier	gdev_vector_fill_rectangle		365596	2					
ANR	365775	ParameterList	"gx_device * dev , int x , int y , int w , int h , gx_color_index color"		365596	3					
ANR	365776	Parameter	gx_device * dev	1130:27:40094:40108	365596	0	True				
ANR	365777	ParameterType	gx_device *		365596	0					
ANR	365778	Identifier	dev		365596	1					
ANR	365779	Parameter	int x	1130:44:40111:40115	365596	1	True				
ANR	365780	ParameterType	int		365596	0					
ANR	365781	Identifier	x		365596	1					
ANR	365782	Parameter	int y	1130:51:40118:40122	365596	2	True				
ANR	365783	ParameterType	int		365596	0					
ANR	365784	Identifier	y		365596	1					
ANR	365785	Parameter	int w	1130:58:40125:40129	365596	3	True				
ANR	365786	ParameterType	int		365596	0					
ANR	365787	Identifier	w		365596	1					
ANR	365788	Parameter	int h	1130:65:40132:40136	365596	4	True				
ANR	365789	ParameterType	int		365596	0					
ANR	365790	Identifier	h		365596	1					
ANR	365791	Parameter	gx_color_index color	1131:27:40166:40185	365596	5	True				
ANR	365792	ParameterType	gx_color_index		365596	0					
ANR	365793	Identifier	color		365596	1					
ANR	365794	CFGEntryNode	ENTRY		365596		True				
ANR	365795	CFGExitNode	EXIT		365596		True				
ANR	365796	Symbol	vdev -> bbox_device		365596						
ANR	365797	Symbol	code		365596						
ANR	365798	Symbol	color		365596						
ANR	365799	Symbol	& dcolor		365596						
ANR	365800	Symbol	* dev_proc		365596						
ANR	365801	Symbol	vdev -> white		365596						
ANR	365802	Symbol	rop3_T		365596						
ANR	365803	Symbol	"* dev_proc ( vdev -> bbox_device , fill_rectangle )"		365596						
ANR	365804	Symbol	dev		365596						
ANR	365805	Symbol	* vdev_proc		365596						
ANR	365806	Symbol	dev_proc		365596						
ANR	365807	Symbol	vdev_proc		365596						
ANR	365808	Symbol	dorect		365596						
ANR	365809	Symbol	NULL		365596						
ANR	365810	Symbol	h		365596						
ANR	365811	Symbol	vdev		365596						
ANR	365812	Symbol	fill_rectangle		365596						
ANR	365813	Symbol	* vdev		365596						
ANR	365814	Symbol	update_fill		365596						
ANR	365815	Symbol	dcolor		365596						
ANR	365816	Symbol	gx_path_type_fill		365596						
ANR	365817	Symbol	w		365596						
ANR	365818	Symbol	int2fixed		365596						
ANR	365819	Symbol	x		365596						
ANR	365820	Symbol	vdev -> in_page		365596						
ANR	365821	Symbol	y		365596						
ANR	365822	Symbol	gdev_vector_update_clip_path		365596						
ANR	365823	Symbol	"* vdev_proc ( vdev , dorect )"		365596						
ANR	365824	Function	gdev_vector_fill_path	1164:0:41200:42097							
ANR	365825	FunctionDef	"gdev_vector_fill_path (gx_device * dev , const gs_gstate * pgs , gx_path * ppath , const gx_fill_params * params , const gx_device_color * pdevc , const gx_clip_path * pcpath)"		365824	0					
ANR	365826	CompoundStatement		1168:0:41413:42097	365824	0					
ANR	365827	IdentifierDeclStatement	int code ;	1169:4:41419:41427	365824	0	True				
ANR	365828	IdentifierDecl	code		365824	0					
ANR	365829	IdentifierDeclType	int		365824	0					
ANR	365830	Identifier	code		365824	1					
ANR	365831	IfStatement	"if ( ( code = gdev_vector_update_clip_path ( vdev , pcpath ) ) < 0 || ( code = gdev_vector_prepare_fill ( vdev , pgs , params , pdevc ) ) < 0 || ( vdev -> bbox_device && ( code = ( * dev_proc ( vdev -> bbox_device , fill_path ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , ppath , params , pdevc , pcpath ) ) < 0 ) || ( code = ( * vdev_proc ( vdev , dopath ) ) ( vdev , ppath , ( params -> rule > 0 ? gx_path_type_even_odd : gx_path_type_winding_number ) | gx_path_type_fill | vdev -> fill_options , NULL ) ) < 0 )"		365824	1					
ANR	365832	Condition	"( code = gdev_vector_update_clip_path ( vdev , pcpath ) ) < 0 || ( code = gdev_vector_prepare_fill ( vdev , pgs , params , pdevc ) ) < 0 || ( vdev -> bbox_device && ( code = ( * dev_proc ( vdev -> bbox_device , fill_path ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , ppath , params , pdevc , pcpath ) ) < 0 ) || ( code = ( * vdev_proc ( vdev , dopath ) ) ( vdev , ppath , ( params -> rule > 0 ? gx_path_type_even_odd : gx_path_type_winding_number ) | gx_path_type_fill | vdev -> fill_options , NULL ) ) < 0"	1171:8:41438:41991	365824	0	True				
ANR	365833	OrExpression	"( code = gdev_vector_update_clip_path ( vdev , pcpath ) ) < 0 || ( code = gdev_vector_prepare_fill ( vdev , pgs , params , pdevc ) ) < 0 || ( vdev -> bbox_device && ( code = ( * dev_proc ( vdev -> bbox_device , fill_path ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , ppath , params , pdevc , pcpath ) ) < 0 ) || ( code = ( * vdev_proc ( vdev , dopath ) ) ( vdev , ppath , ( params -> rule > 0 ? gx_path_type_even_odd : gx_path_type_winding_number ) | gx_path_type_fill | vdev -> fill_options , NULL ) ) < 0"		365824	0		||			
ANR	365834	RelationalExpression	"( code = gdev_vector_update_clip_path ( vdev , pcpath ) ) < 0"		365824	0		<			
ANR	365835	AssignmentExpression	"code = gdev_vector_update_clip_path ( vdev , pcpath )"		365824	0		=			
ANR	365836	Identifier	code		365824	0					
ANR	365837	CallExpression	"gdev_vector_update_clip_path ( vdev , pcpath )"		365824	1					
ANR	365838	Callee	gdev_vector_update_clip_path		365824	0					
ANR	365839	Identifier	gdev_vector_update_clip_path		365824	0					
ANR	365840	ArgumentList	vdev		365824	1					
ANR	365841	Argument	vdev		365824	0					
ANR	365842	Identifier	vdev		365824	0					
ANR	365843	Argument	pcpath		365824	1					
ANR	365844	Identifier	pcpath		365824	0					
ANR	365845	PrimaryExpression	0		365824	1					
ANR	365846	OrExpression	"( code = gdev_vector_prepare_fill ( vdev , pgs , params , pdevc ) ) < 0 || ( vdev -> bbox_device && ( code = ( * dev_proc ( vdev -> bbox_device , fill_path ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , ppath , params , pdevc , pcpath ) ) < 0 ) || ( code = ( * vdev_proc ( vdev , dopath ) ) ( vdev , ppath , ( params -> rule > 0 ? gx_path_type_even_odd : gx_path_type_winding_number ) | gx_path_type_fill | vdev -> fill_options , NULL ) ) < 0"		365824	1		||			
ANR	365847	RelationalExpression	"( code = gdev_vector_prepare_fill ( vdev , pgs , params , pdevc ) ) < 0"		365824	0		<			
ANR	365848	AssignmentExpression	"code = gdev_vector_prepare_fill ( vdev , pgs , params , pdevc )"		365824	0		=			
ANR	365849	Identifier	code		365824	0					
ANR	365850	CallExpression	"gdev_vector_prepare_fill ( vdev , pgs , params , pdevc )"		365824	1					
ANR	365851	Callee	gdev_vector_prepare_fill		365824	0					
ANR	365852	Identifier	gdev_vector_prepare_fill		365824	0					
ANR	365853	ArgumentList	vdev		365824	1					
ANR	365854	Argument	vdev		365824	0					
ANR	365855	Identifier	vdev		365824	0					
ANR	365856	Argument	pgs		365824	1					
ANR	365857	Identifier	pgs		365824	0					
ANR	365858	Argument	params		365824	2					
ANR	365859	Identifier	params		365824	0					
ANR	365860	Argument	pdevc		365824	3					
ANR	365861	Identifier	pdevc		365824	0					
ANR	365862	PrimaryExpression	0		365824	1					
ANR	365863	OrExpression	"( vdev -> bbox_device && ( code = ( * dev_proc ( vdev -> bbox_device , fill_path ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , ppath , params , pdevc , pcpath ) ) < 0 ) || ( code = ( * vdev_proc ( vdev , dopath ) ) ( vdev , ppath , ( params -> rule > 0 ? gx_path_type_even_odd : gx_path_type_winding_number ) | gx_path_type_fill | vdev -> fill_options , NULL ) ) < 0"		365824	1		||			
ANR	365864	AndExpression	"vdev -> bbox_device && ( code = ( * dev_proc ( vdev -> bbox_device , fill_path ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , ppath , params , pdevc , pcpath ) ) < 0"		365824	0		&&			
ANR	365865	PtrMemberAccess	vdev -> bbox_device		365824	0					
ANR	365866	Identifier	vdev		365824	0					
ANR	365867	Identifier	bbox_device		365824	1					
ANR	365868	RelationalExpression	"( code = ( * dev_proc ( vdev -> bbox_device , fill_path ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , ppath , params , pdevc , pcpath ) ) < 0"		365824	1		<			
ANR	365869	AssignmentExpression	"code = ( * dev_proc ( vdev -> bbox_device , fill_path ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , ppath , params , pdevc , pcpath )"		365824	0		=			
ANR	365870	Identifier	code		365824	0					
ANR	365871	CallExpression	"( * dev_proc ( vdev -> bbox_device , fill_path ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , ppath , params , pdevc , pcpath )"		365824	1					
ANR	365872	Callee	"* dev_proc ( vdev -> bbox_device , fill_path )"		365824	0					
ANR	365873	UnaryOperationExpression	"* dev_proc ( vdev -> bbox_device , fill_path )"		365824	0					
ANR	365874	UnaryOperator	*		365824	0					
ANR	365875	CallExpression	"dev_proc ( vdev -> bbox_device , fill_path )"		365824	1					
ANR	365876	Callee	dev_proc		365824	0					
ANR	365877	Identifier	dev_proc		365824	0					
ANR	365878	ArgumentList	vdev -> bbox_device		365824	1					
ANR	365879	Argument	vdev -> bbox_device		365824	0					
ANR	365880	PtrMemberAccess	vdev -> bbox_device		365824	0					
ANR	365881	Identifier	vdev		365824	0					
ANR	365882	Identifier	bbox_device		365824	1					
ANR	365883	Argument	fill_path		365824	1					
ANR	365884	Identifier	fill_path		365824	0					
ANR	365885	ArgumentList	( gx_device * ) vdev -> bbox_device		365824	1					
ANR	365886	Argument	( gx_device * ) vdev -> bbox_device		365824	0					
ANR	365887	CastExpression	( gx_device * ) vdev -> bbox_device		365824	0					
ANR	365888	CastTarget	gx_device *		365824	0					
ANR	365889	PtrMemberAccess	vdev -> bbox_device		365824	1					
ANR	365890	Identifier	vdev		365824	0					
ANR	365891	Identifier	bbox_device		365824	1					
ANR	365892	Argument	pgs		365824	1					
ANR	365893	Identifier	pgs		365824	0					
ANR	365894	Argument	ppath		365824	2					
ANR	365895	Identifier	ppath		365824	0					
ANR	365896	Argument	params		365824	3					
ANR	365897	Identifier	params		365824	0					
ANR	365898	Argument	pdevc		365824	4					
ANR	365899	Identifier	pdevc		365824	0					
ANR	365900	Argument	pcpath		365824	5					
ANR	365901	Identifier	pcpath		365824	0					
ANR	365902	PrimaryExpression	0		365824	1					
ANR	365903	RelationalExpression	"( code = ( * vdev_proc ( vdev , dopath ) ) ( vdev , ppath , ( params -> rule > 0 ? gx_path_type_even_odd : gx_path_type_winding_number ) | gx_path_type_fill | vdev -> fill_options , NULL ) ) < 0"		365824	1		<			
ANR	365904	AssignmentExpression	"code = ( * vdev_proc ( vdev , dopath ) ) ( vdev , ppath , ( params -> rule > 0 ? gx_path_type_even_odd : gx_path_type_winding_number ) | gx_path_type_fill | vdev -> fill_options , NULL )"		365824	0		=			
ANR	365905	Identifier	code		365824	0					
ANR	365906	CallExpression	"( * vdev_proc ( vdev , dopath ) ) ( vdev , ppath , ( params -> rule > 0 ? gx_path_type_even_odd : gx_path_type_winding_number ) | gx_path_type_fill | vdev -> fill_options , NULL )"		365824	1					
ANR	365907	Callee	"* vdev_proc ( vdev , dopath )"		365824	0					
ANR	365908	UnaryOperationExpression	"* vdev_proc ( vdev , dopath )"		365824	0					
ANR	365909	UnaryOperator	*		365824	0					
ANR	365910	CallExpression	"vdev_proc ( vdev , dopath )"		365824	1					
ANR	365911	Callee	vdev_proc		365824	0					
ANR	365912	Identifier	vdev_proc		365824	0					
ANR	365913	ArgumentList	vdev		365824	1					
ANR	365914	Argument	vdev		365824	0					
ANR	365915	Identifier	vdev		365824	0					
ANR	365916	Argument	dopath		365824	1					
ANR	365917	Identifier	dopath		365824	0					
ANR	365918	ArgumentList	vdev		365824	1					
ANR	365919	Argument	vdev		365824	0					
ANR	365920	Identifier	vdev		365824	0					
ANR	365921	Argument	ppath		365824	1					
ANR	365922	Identifier	ppath		365824	0					
ANR	365923	Argument	( params -> rule > 0 ? gx_path_type_even_odd : gx_path_type_winding_number ) | gx_path_type_fill | vdev -> fill_options		365824	2					
ANR	365924	InclusiveOrExpression	( params -> rule > 0 ? gx_path_type_even_odd : gx_path_type_winding_number ) | gx_path_type_fill | vdev -> fill_options		365824	0		|			
ANR	365925	ConditionalExpression	params -> rule > 0 ? gx_path_type_even_odd : gx_path_type_winding_number		365824	0					
ANR	365926	Condition	params -> rule > 0		365824	0					
ANR	365927	RelationalExpression	params -> rule > 0		365824	0		>			
ANR	365928	PtrMemberAccess	params -> rule		365824	0					
ANR	365929	Identifier	params		365824	0					
ANR	365930	Identifier	rule		365824	1					
ANR	365931	PrimaryExpression	0		365824	1					
ANR	365932	Identifier	gx_path_type_even_odd		365824	1					
ANR	365933	Identifier	gx_path_type_winding_number		365824	2					
ANR	365934	InclusiveOrExpression	gx_path_type_fill | vdev -> fill_options		365824	1		|			
ANR	365935	Identifier	gx_path_type_fill		365824	0					
ANR	365936	PtrMemberAccess	vdev -> fill_options		365824	1					
ANR	365937	Identifier	vdev		365824	0					
ANR	365938	Identifier	fill_options		365824	1					
ANR	365939	Argument	NULL		365824	3					
ANR	365940	Identifier	NULL		365824	0					
ANR	365941	PrimaryExpression	0		365824	1					
ANR	365942	ReturnStatement	"return gx_default_fill_path ( dev , pgs , ppath , params , pdevc , pcpath ) ;"	1184:8:42011:42078	365824	1	True				
ANR	365943	CallExpression	"gx_default_fill_path ( dev , pgs , ppath , params , pdevc , pcpath )"		365824	0					
ANR	365944	Callee	gx_default_fill_path		365824	0					
ANR	365945	Identifier	gx_default_fill_path		365824	0					
ANR	365946	ArgumentList	dev		365824	1					
ANR	365947	Argument	dev		365824	0					
ANR	365948	Identifier	dev		365824	0					
ANR	365949	Argument	pgs		365824	1					
ANR	365950	Identifier	pgs		365824	0					
ANR	365951	Argument	ppath		365824	2					
ANR	365952	Identifier	ppath		365824	0					
ANR	365953	Argument	params		365824	3					
ANR	365954	Identifier	params		365824	0					
ANR	365955	Argument	pdevc		365824	4					
ANR	365956	Identifier	pdevc		365824	0					
ANR	365957	Argument	pcpath		365824	5					
ANR	365958	Identifier	pcpath		365824	0					
ANR	365959	ReturnStatement	return code ;	1185:4:42084:42095	365824	2	True				
ANR	365960	Identifier	code		365824	0					
ANR	365961	ReturnType	int		365824	1					
ANR	365962	Identifier	gdev_vector_fill_path		365824	2					
ANR	365963	ParameterList	"gx_device * dev , const gs_gstate * pgs , gx_path * ppath , const gx_fill_params * params , const gx_device_color * pdevc , const gx_clip_path * pcpath"		365824	3					
ANR	365964	Parameter	gx_device * dev	1165:22:41226:41240	365824	0	True				
ANR	365965	ParameterType	gx_device *		365824	0					
ANR	365966	Identifier	dev		365824	1					
ANR	365967	Parameter	const gs_gstate * pgs	1165:39:41243:41263	365824	1	True				
ANR	365968	ParameterType	const gs_gstate *		365824	0					
ANR	365969	Identifier	pgs		365824	1					
ANR	365970	Parameter	gx_path * ppath	1166:22:41288:41302	365824	2	True				
ANR	365971	ParameterType	gx_path *		365824	0					
ANR	365972	Identifier	ppath		365824	1					
ANR	365973	Parameter	const gx_fill_params * params	1166:39:41305:41333	365824	3	True				
ANR	365974	ParameterType	const gx_fill_params *		365824	0					
ANR	365975	Identifier	params		365824	1					
ANR	365976	Parameter	const gx_device_color * pdevc	1167:17:41353:41381	365824	4	True				
ANR	365977	ParameterType	const gx_device_color *		365824	0					
ANR	365978	Identifier	pdevc		365824	1					
ANR	365979	Parameter	const gx_clip_path * pcpath	1167:48:41384:41410	365824	5	True				
ANR	365980	ParameterType	const gx_clip_path *		365824	0					
ANR	365981	Identifier	pcpath		365824	1					
ANR	365982	CFGEntryNode	ENTRY		365824		True				
ANR	365983	CFGExitNode	EXIT		365824		True				
ANR	365984	Symbol	vdev -> bbox_device		365824						
ANR	365985	Symbol	code		365824						
ANR	365986	Symbol	dopath		365824						
ANR	365987	Symbol	"* vdev_proc ( vdev , dopath )"		365824						
ANR	365988	Symbol	* dev_proc		365824						
ANR	365989	Symbol	pdevc		365824						
ANR	365990	Symbol	ppath		365824						
ANR	365991	Symbol	gx_path_type_even_odd		365824						
ANR	365992	Symbol	dev		365824						
ANR	365993	Symbol	* vdev_proc		365824						
ANR	365994	Symbol	gdev_vector_prepare_fill		365824						
ANR	365995	Symbol	dev_proc		365824						
ANR	365996	Symbol	vdev_proc		365824						
ANR	365997	Symbol	fill_path		365824						
ANR	365998	Symbol	vdev -> fill_options		365824						
ANR	365999	Symbol	pgs		365824						
ANR	366000	Symbol	pcpath		365824						
ANR	366001	Symbol	* params		365824						
ANR	366002	Symbol	NULL		365824						
ANR	366003	Symbol	params -> rule		365824						
ANR	366004	Symbol	vdev		365824						
ANR	366005	Symbol	params		365824						
ANR	366006	Symbol	gx_path_type_winding_number		365824						
ANR	366007	Symbol	"* dev_proc ( vdev -> bbox_device , fill_path )"		365824						
ANR	366008	Symbol	* vdev		365824						
ANR	366009	Symbol	gx_path_type_fill		365824						
ANR	366010	Symbol	gdev_vector_update_clip_path		365824						
ANR	366011	Symbol	gx_default_fill_path		365824						
ANR	366012	Function	gdev_vector_stroke_path	1188:0:42100:43044							
ANR	366013	FunctionDef	"gdev_vector_stroke_path (gx_device * dev , const gs_gstate * pgs , gx_path * ppath , const gx_stroke_params * params , const gx_drawing_color * pdcolor , const gx_clip_path * pcpath)"		366012	0					
ANR	366014	CompoundStatement		1192:0:42319:43044	366012	0					
ANR	366015	IdentifierDeclStatement	int code ;	1193:4:42325:42333	366012	0	True				
ANR	366016	IdentifierDecl	code		366012	0					
ANR	366017	IdentifierDeclType	int		366012	0					
ANR	366018	Identifier	code		366012	1					
ANR	366019	IdentifierDeclStatement	double scale ;	1194:4:42339:42351	366012	1	True				
ANR	366020	IdentifierDecl	scale		366012	0					
ANR	366021	IdentifierDeclType	double		366012	0					
ANR	366022	Identifier	scale		366012	1					
ANR	366023	IdentifierDeclStatement	int set_ctm ;	1195:4:42357:42368	366012	2	True				
ANR	366024	IdentifierDecl	set_ctm		366012	0					
ANR	366025	IdentifierDeclType	int		366012	0					
ANR	366026	Identifier	set_ctm		366012	1					
ANR	366027	IdentifierDeclStatement	gs_matrix mat ;	1196:4:42374:42387	366012	3	True				
ANR	366028	IdentifierDecl	mat		366012	0					
ANR	366029	IdentifierDeclType	gs_matrix		366012	0					
ANR	366030	Identifier	mat		366012	1					
ANR	366031	IfStatement	"if ( ( code = gdev_vector_update_clip_path ( vdev , pcpath ) ) < 0 || ( set_ctm = gdev_vector_stroke_scaling ( vdev , pgs , & scale , & mat ) ) != 0 || ( code = gdev_vector_prepare_stroke ( vdev , pgs , params , pdcolor , scale ) ) < 0 || ( vdev -> bbox_device && ( code = ( * dev_proc ( vdev -> bbox_device , stroke_path ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , ppath , params , pdcolor , pcpath ) ) < 0 ) || ( code = ( * vdev_proc ( vdev , dopath ) ) ( vdev , ppath , gx_path_type_stroke | vdev -> stroke_options , NULL ) ) < 0 )"		366012	4					
ANR	366032	Condition	"( code = gdev_vector_update_clip_path ( vdev , pcpath ) ) < 0 || ( set_ctm = gdev_vector_stroke_scaling ( vdev , pgs , & scale , & mat ) ) != 0 || ( code = gdev_vector_prepare_stroke ( vdev , pgs , params , pdcolor , scale ) ) < 0 || ( vdev -> bbox_device && ( code = ( * dev_proc ( vdev -> bbox_device , stroke_path ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , ppath , params , pdcolor , pcpath ) ) < 0 ) || ( code = ( * vdev_proc ( vdev , dopath ) ) ( vdev , ppath , gx_path_type_stroke | vdev -> stroke_options , NULL ) ) < 0"	1198:8:42398:42934	366012	0	True				
ANR	366033	OrExpression	"( code = gdev_vector_update_clip_path ( vdev , pcpath ) ) < 0 || ( set_ctm = gdev_vector_stroke_scaling ( vdev , pgs , & scale , & mat ) ) != 0 || ( code = gdev_vector_prepare_stroke ( vdev , pgs , params , pdcolor , scale ) ) < 0 || ( vdev -> bbox_device && ( code = ( * dev_proc ( vdev -> bbox_device , stroke_path ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , ppath , params , pdcolor , pcpath ) ) < 0 ) || ( code = ( * vdev_proc ( vdev , dopath ) ) ( vdev , ppath , gx_path_type_stroke | vdev -> stroke_options , NULL ) ) < 0"		366012	0		||			
ANR	366034	RelationalExpression	"( code = gdev_vector_update_clip_path ( vdev , pcpath ) ) < 0"		366012	0		<			
ANR	366035	AssignmentExpression	"code = gdev_vector_update_clip_path ( vdev , pcpath )"		366012	0		=			
ANR	366036	Identifier	code		366012	0					
ANR	366037	CallExpression	"gdev_vector_update_clip_path ( vdev , pcpath )"		366012	1					
ANR	366038	Callee	gdev_vector_update_clip_path		366012	0					
ANR	366039	Identifier	gdev_vector_update_clip_path		366012	0					
ANR	366040	ArgumentList	vdev		366012	1					
ANR	366041	Argument	vdev		366012	0					
ANR	366042	Identifier	vdev		366012	0					
ANR	366043	Argument	pcpath		366012	1					
ANR	366044	Identifier	pcpath		366012	0					
ANR	366045	PrimaryExpression	0		366012	1					
ANR	366046	OrExpression	"( set_ctm = gdev_vector_stroke_scaling ( vdev , pgs , & scale , & mat ) ) != 0 || ( code = gdev_vector_prepare_stroke ( vdev , pgs , params , pdcolor , scale ) ) < 0 || ( vdev -> bbox_device && ( code = ( * dev_proc ( vdev -> bbox_device , stroke_path ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , ppath , params , pdcolor , pcpath ) ) < 0 ) || ( code = ( * vdev_proc ( vdev , dopath ) ) ( vdev , ppath , gx_path_type_stroke | vdev -> stroke_options , NULL ) ) < 0"		366012	1		||			
ANR	366047	EqualityExpression	"( set_ctm = gdev_vector_stroke_scaling ( vdev , pgs , & scale , & mat ) ) != 0"		366012	0		!=			
ANR	366048	AssignmentExpression	"set_ctm = gdev_vector_stroke_scaling ( vdev , pgs , & scale , & mat )"		366012	0		=			
ANR	366049	Identifier	set_ctm		366012	0					
ANR	366050	CallExpression	"gdev_vector_stroke_scaling ( vdev , pgs , & scale , & mat )"		366012	1					
ANR	366051	Callee	gdev_vector_stroke_scaling		366012	0					
ANR	366052	Identifier	gdev_vector_stroke_scaling		366012	0					
ANR	366053	ArgumentList	vdev		366012	1					
ANR	366054	Argument	vdev		366012	0					
ANR	366055	Identifier	vdev		366012	0					
ANR	366056	Argument	pgs		366012	1					
ANR	366057	Identifier	pgs		366012	0					
ANR	366058	Argument	& scale		366012	2					
ANR	366059	UnaryOperationExpression	& scale		366012	0					
ANR	366060	UnaryOperator	&		366012	0					
ANR	366061	Identifier	scale		366012	1					
ANR	366062	Argument	& mat		366012	3					
ANR	366063	UnaryOperationExpression	& mat		366012	0					
ANR	366064	UnaryOperator	&		366012	0					
ANR	366065	Identifier	mat		366012	1					
ANR	366066	PrimaryExpression	0		366012	1					
ANR	366067	OrExpression	"( code = gdev_vector_prepare_stroke ( vdev , pgs , params , pdcolor , scale ) ) < 0 || ( vdev -> bbox_device && ( code = ( * dev_proc ( vdev -> bbox_device , stroke_path ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , ppath , params , pdcolor , pcpath ) ) < 0 ) || ( code = ( * vdev_proc ( vdev , dopath ) ) ( vdev , ppath , gx_path_type_stroke | vdev -> stroke_options , NULL ) ) < 0"		366012	1		||			
ANR	366068	RelationalExpression	"( code = gdev_vector_prepare_stroke ( vdev , pgs , params , pdcolor , scale ) ) < 0"		366012	0		<			
ANR	366069	AssignmentExpression	"code = gdev_vector_prepare_stroke ( vdev , pgs , params , pdcolor , scale )"		366012	0		=			
ANR	366070	Identifier	code		366012	0					
ANR	366071	CallExpression	"gdev_vector_prepare_stroke ( vdev , pgs , params , pdcolor , scale )"		366012	1					
ANR	366072	Callee	gdev_vector_prepare_stroke		366012	0					
ANR	366073	Identifier	gdev_vector_prepare_stroke		366012	0					
ANR	366074	ArgumentList	vdev		366012	1					
ANR	366075	Argument	vdev		366012	0					
ANR	366076	Identifier	vdev		366012	0					
ANR	366077	Argument	pgs		366012	1					
ANR	366078	Identifier	pgs		366012	0					
ANR	366079	Argument	params		366012	2					
ANR	366080	Identifier	params		366012	0					
ANR	366081	Argument	pdcolor		366012	3					
ANR	366082	Identifier	pdcolor		366012	0					
ANR	366083	Argument	scale		366012	4					
ANR	366084	Identifier	scale		366012	0					
ANR	366085	PrimaryExpression	0		366012	1					
ANR	366086	OrExpression	"( vdev -> bbox_device && ( code = ( * dev_proc ( vdev -> bbox_device , stroke_path ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , ppath , params , pdcolor , pcpath ) ) < 0 ) || ( code = ( * vdev_proc ( vdev , dopath ) ) ( vdev , ppath , gx_path_type_stroke | vdev -> stroke_options , NULL ) ) < 0"		366012	1		||			
ANR	366087	AndExpression	"vdev -> bbox_device && ( code = ( * dev_proc ( vdev -> bbox_device , stroke_path ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , ppath , params , pdcolor , pcpath ) ) < 0"		366012	0		&&			
ANR	366088	PtrMemberAccess	vdev -> bbox_device		366012	0					
ANR	366089	Identifier	vdev		366012	0					
ANR	366090	Identifier	bbox_device		366012	1					
ANR	366091	RelationalExpression	"( code = ( * dev_proc ( vdev -> bbox_device , stroke_path ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , ppath , params , pdcolor , pcpath ) ) < 0"		366012	1		<			
ANR	366092	AssignmentExpression	"code = ( * dev_proc ( vdev -> bbox_device , stroke_path ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , ppath , params , pdcolor , pcpath )"		366012	0		=			
ANR	366093	Identifier	code		366012	0					
ANR	366094	CallExpression	"( * dev_proc ( vdev -> bbox_device , stroke_path ) ) ( ( gx_device * ) vdev -> bbox_device , pgs , ppath , params , pdcolor , pcpath )"		366012	1					
ANR	366095	Callee	"* dev_proc ( vdev -> bbox_device , stroke_path )"		366012	0					
ANR	366096	UnaryOperationExpression	"* dev_proc ( vdev -> bbox_device , stroke_path )"		366012	0					
ANR	366097	UnaryOperator	*		366012	0					
ANR	366098	CallExpression	"dev_proc ( vdev -> bbox_device , stroke_path )"		366012	1					
ANR	366099	Callee	dev_proc		366012	0					
ANR	366100	Identifier	dev_proc		366012	0					
ANR	366101	ArgumentList	vdev -> bbox_device		366012	1					
ANR	366102	Argument	vdev -> bbox_device		366012	0					
ANR	366103	PtrMemberAccess	vdev -> bbox_device		366012	0					
ANR	366104	Identifier	vdev		366012	0					
ANR	366105	Identifier	bbox_device		366012	1					
ANR	366106	Argument	stroke_path		366012	1					
ANR	366107	Identifier	stroke_path		366012	0					
ANR	366108	ArgumentList	( gx_device * ) vdev -> bbox_device		366012	1					
ANR	366109	Argument	( gx_device * ) vdev -> bbox_device		366012	0					
ANR	366110	CastExpression	( gx_device * ) vdev -> bbox_device		366012	0					
ANR	366111	CastTarget	gx_device *		366012	0					
ANR	366112	PtrMemberAccess	vdev -> bbox_device		366012	1					
ANR	366113	Identifier	vdev		366012	0					
ANR	366114	Identifier	bbox_device		366012	1					
ANR	366115	Argument	pgs		366012	1					
ANR	366116	Identifier	pgs		366012	0					
ANR	366117	Argument	ppath		366012	2					
ANR	366118	Identifier	ppath		366012	0					
ANR	366119	Argument	params		366012	3					
ANR	366120	Identifier	params		366012	0					
ANR	366121	Argument	pdcolor		366012	4					
ANR	366122	Identifier	pdcolor		366012	0					
ANR	366123	Argument	pcpath		366012	5					
ANR	366124	Identifier	pcpath		366012	0					
ANR	366125	PrimaryExpression	0		366012	1					
ANR	366126	RelationalExpression	"( code = ( * vdev_proc ( vdev , dopath ) ) ( vdev , ppath , gx_path_type_stroke | vdev -> stroke_options , NULL ) ) < 0"		366012	1		<			
ANR	366127	AssignmentExpression	"code = ( * vdev_proc ( vdev , dopath ) ) ( vdev , ppath , gx_path_type_stroke | vdev -> stroke_options , NULL )"		366012	0		=			
ANR	366128	Identifier	code		366012	0					
ANR	366129	CallExpression	"( * vdev_proc ( vdev , dopath ) ) ( vdev , ppath , gx_path_type_stroke | vdev -> stroke_options , NULL )"		366012	1					
ANR	366130	Callee	"* vdev_proc ( vdev , dopath )"		366012	0					
ANR	366131	UnaryOperationExpression	"* vdev_proc ( vdev , dopath )"		366012	0					
ANR	366132	UnaryOperator	*		366012	0					
ANR	366133	CallExpression	"vdev_proc ( vdev , dopath )"		366012	1					
ANR	366134	Callee	vdev_proc		366012	0					
ANR	366135	Identifier	vdev_proc		366012	0					
ANR	366136	ArgumentList	vdev		366012	1					
ANR	366137	Argument	vdev		366012	0					
ANR	366138	Identifier	vdev		366012	0					
ANR	366139	Argument	dopath		366012	1					
ANR	366140	Identifier	dopath		366012	0					
ANR	366141	ArgumentList	vdev		366012	1					
ANR	366142	Argument	vdev		366012	0					
ANR	366143	Identifier	vdev		366012	0					
ANR	366144	Argument	ppath		366012	1					
ANR	366145	Identifier	ppath		366012	0					
ANR	366146	Argument	gx_path_type_stroke | vdev -> stroke_options		366012	2					
ANR	366147	InclusiveOrExpression	gx_path_type_stroke | vdev -> stroke_options		366012	0		|			
ANR	366148	Identifier	gx_path_type_stroke		366012	0					
ANR	366149	PtrMemberAccess	vdev -> stroke_options		366012	1					
ANR	366150	Identifier	vdev		366012	0					
ANR	366151	Identifier	stroke_options		366012	1					
ANR	366152	Argument	NULL		366012	3					
ANR	366153	Identifier	NULL		366012	0					
ANR	366154	PrimaryExpression	0		366012	1					
ANR	366155	ReturnStatement	"return gx_default_stroke_path ( dev , pgs , ppath , params , pdcolor , pcpath ) ;"	1208:8:42954:43025	366012	1	True				
ANR	366156	CallExpression	"gx_default_stroke_path ( dev , pgs , ppath , params , pdcolor , pcpath )"		366012	0					
ANR	366157	Callee	gx_default_stroke_path		366012	0					
ANR	366158	Identifier	gx_default_stroke_path		366012	0					
ANR	366159	ArgumentList	dev		366012	1					
ANR	366160	Argument	dev		366012	0					
ANR	366161	Identifier	dev		366012	0					
ANR	366162	Argument	pgs		366012	1					
ANR	366163	Identifier	pgs		366012	0					
ANR	366164	Argument	ppath		366012	2					
ANR	366165	Identifier	ppath		366012	0					
ANR	366166	Argument	params		366012	3					
ANR	366167	Identifier	params		366012	0					
ANR	366168	Argument	pdcolor		366012	4					
ANR	366169	Identifier	pdcolor		366012	0					
ANR	366170	Argument	pcpath		366012	5					
ANR	366171	Identifier	pcpath		366012	0					
ANR	366172	ReturnStatement	return code ;	1209:4:43031:43042	366012	5	True				
ANR	366173	Identifier	code		366012	0					
ANR	366174	ReturnType	int		366012	1					
ANR	366175	Identifier	gdev_vector_stroke_path		366012	2					
ANR	366176	ParameterList	"gx_device * dev , const gs_gstate * pgs , gx_path * ppath , const gx_stroke_params * params , const gx_drawing_color * pdcolor , const gx_clip_path * pcpath"		366012	3					
ANR	366177	Parameter	gx_device * dev	1189:24:42128:42142	366012	0	True				
ANR	366178	ParameterType	gx_device *		366012	0					
ANR	366179	Identifier	dev		366012	1					
ANR	366180	Parameter	const gs_gstate * pgs	1189:41:42145:42165	366012	1	True				
ANR	366181	ParameterType	const gs_gstate *		366012	0					
ANR	366182	Identifier	pgs		366012	1					
ANR	366183	Parameter	gx_path * ppath	1190:24:42192:42206	366012	2	True				
ANR	366184	ParameterType	gx_path *		366012	0					
ANR	366185	Identifier	ppath		366012	1					
ANR	366186	Parameter	const gx_stroke_params * params	1190:41:42209:42239	366012	3	True				
ANR	366187	ParameterType	const gx_stroke_params *		366012	0					
ANR	366188	Identifier	params		366012	1					
ANR	366189	Parameter	const gx_drawing_color * pdcolor	1191:14:42256:42287	366012	4	True				
ANR	366190	ParameterType	const gx_drawing_color *		366012	0					
ANR	366191	Identifier	pdcolor		366012	1					
ANR	366192	Parameter	const gx_clip_path * pcpath	1191:48:42290:42316	366012	5	True				
ANR	366193	ParameterType	const gx_clip_path *		366012	0					
ANR	366194	Identifier	pcpath		366012	1					
ANR	366195	CFGEntryNode	ENTRY		366012		True				
ANR	366196	CFGExitNode	EXIT		366012		True				
ANR	366197	Symbol	vdev -> bbox_device		366012						
ANR	366198	Symbol	& mat		366012						
ANR	366199	Symbol	gdev_vector_prepare_stroke		366012						
ANR	366200	Symbol	code		366012						
ANR	366201	Symbol	dopath		366012						
ANR	366202	Symbol	* dev_proc		366012						
ANR	366203	Symbol	"* vdev_proc ( vdev , dopath )"		366012						
ANR	366204	Symbol	vdev -> stroke_options		366012						
ANR	366205	Symbol	scale		366012						
ANR	366206	Symbol	"* dev_proc ( vdev -> bbox_device , stroke_path )"		366012						
ANR	366207	Symbol	ppath		366012						
ANR	366208	Symbol	dev		366012						
ANR	366209	Symbol	* vdev_proc		366012						
ANR	366210	Symbol	dev_proc		366012						
ANR	366211	Symbol	vdev_proc		366012						
ANR	366212	Symbol	& scale		366012						
ANR	366213	Symbol	pgs		366012						
ANR	366214	Symbol	pcpath		366012						
ANR	366215	Symbol	mat		366012						
ANR	366216	Symbol	NULL		366012						
ANR	366217	Symbol	gx_path_type_stroke		366012						
ANR	366218	Symbol	gx_default_stroke_path		366012						
ANR	366219	Symbol	vdev		366012						
ANR	366220	Symbol	pdcolor		366012						
ANR	366221	Symbol	set_ctm		366012						
ANR	366222	Symbol	params		366012						
ANR	366223	Symbol	stroke_path		366012						
ANR	366224	Symbol	* vdev		366012						
ANR	366225	Symbol	gdev_vector_update_clip_path		366012						
ANR	366226	Symbol	gdev_vector_stroke_scaling		366012						
ANR	366227	Function	gdev_vector_fill_trapezoid	1212:0:43047:44948							
ANR	366228	FunctionDef	"gdev_vector_fill_trapezoid (gx_device * dev , const gs_fixed_edge * left , const gs_fixed_edge * right , fixed ybot , fixed ytop , bool swap_axes , const gx_device_color * pdevc , gs_logical_operation_t lop)"		366227	0					
ANR	366229	CompoundStatement		1216:0:43277:44948	366227	0					
ANR	366230	IdentifierDeclStatement	fixed xl = left -> start . x ;	1217:4:43283:43307	366227	0	True				
ANR	366231	IdentifierDecl	xl = left -> start . x		366227	0					
ANR	366232	IdentifierDeclType	fixed		366227	0					
ANR	366233	Identifier	xl		366227	1					
ANR	366234	AssignmentExpression	xl = left -> start . x		366227	2		=			
ANR	366235	Identifier	xl		366227	0					
ANR	366236	MemberAccess	left -> start . x		366227	1					
ANR	366237	PtrMemberAccess	left -> start		366227	0					
ANR	366238	Identifier	left		366227	0					
ANR	366239	Identifier	start		366227	1					
ANR	366240	Identifier	x		366227	1					
ANR	366241	IdentifierDeclStatement	fixed wl = left -> end . x - xl ;	1218:4:43313:43340	366227	1	True				
ANR	366242	IdentifierDecl	wl = left -> end . x - xl		366227	0					
ANR	366243	IdentifierDeclType	fixed		366227	0					
ANR	366244	Identifier	wl		366227	1					
ANR	366245	AssignmentExpression	wl = left -> end . x - xl		366227	2		=			
ANR	366246	Identifier	wl		366227	0					
ANR	366247	AdditiveExpression	left -> end . x - xl		366227	1		-			
ANR	366248	MemberAccess	left -> end . x		366227	0					
ANR	366249	PtrMemberAccess	left -> end		366227	0					
ANR	366250	Identifier	left		366227	0					
ANR	366251	Identifier	end		366227	1					
ANR	366252	Identifier	x		366227	1					
ANR	366253	Identifier	xl		366227	1					
ANR	366254	IdentifierDeclStatement	fixed yl = left -> start . y ;	1219:4:43346:43370	366227	2	True				
ANR	366255	IdentifierDecl	yl = left -> start . y		366227	0					
ANR	366256	IdentifierDeclType	fixed		366227	0					
ANR	366257	Identifier	yl		366227	1					
ANR	366258	AssignmentExpression	yl = left -> start . y		366227	2		=			
ANR	366259	Identifier	yl		366227	0					
ANR	366260	MemberAccess	left -> start . y		366227	1					
ANR	366261	PtrMemberAccess	left -> start		366227	0					
ANR	366262	Identifier	left		366227	0					
ANR	366263	Identifier	start		366227	1					
ANR	366264	Identifier	y		366227	1					
ANR	366265	IdentifierDeclStatement	fixed hl = left -> end . y - yl ;	1220:4:43376:43403	366227	3	True				
ANR	366266	IdentifierDecl	hl = left -> end . y - yl		366227	0					
ANR	366267	IdentifierDeclType	fixed		366227	0					
ANR	366268	Identifier	hl		366227	1					
ANR	366269	AssignmentExpression	hl = left -> end . y - yl		366227	2		=			
ANR	366270	Identifier	hl		366227	0					
ANR	366271	AdditiveExpression	left -> end . y - yl		366227	1		-			
ANR	366272	MemberAccess	left -> end . y		366227	0					
ANR	366273	PtrMemberAccess	left -> end		366227	0					
ANR	366274	Identifier	left		366227	0					
ANR	366275	Identifier	end		366227	1					
ANR	366276	Identifier	y		366227	1					
ANR	366277	Identifier	yl		366227	1					
ANR	366278	IdentifierDeclStatement	fixed xr = right -> start . x ;	1221:4:43409:43434	366227	4	True				
ANR	366279	IdentifierDecl	xr = right -> start . x		366227	0					
ANR	366280	IdentifierDeclType	fixed		366227	0					
ANR	366281	Identifier	xr		366227	1					
ANR	366282	AssignmentExpression	xr = right -> start . x		366227	2		=			
ANR	366283	Identifier	xr		366227	0					
ANR	366284	MemberAccess	right -> start . x		366227	1					
ANR	366285	PtrMemberAccess	right -> start		366227	0					
ANR	366286	Identifier	right		366227	0					
ANR	366287	Identifier	start		366227	1					
ANR	366288	Identifier	x		366227	1					
ANR	366289	IdentifierDeclStatement	fixed wr = right -> end . x - xr ;	1222:4:43440:43468	366227	5	True				
ANR	366290	IdentifierDecl	wr = right -> end . x - xr		366227	0					
ANR	366291	IdentifierDeclType	fixed		366227	0					
ANR	366292	Identifier	wr		366227	1					
ANR	366293	AssignmentExpression	wr = right -> end . x - xr		366227	2		=			
ANR	366294	Identifier	wr		366227	0					
ANR	366295	AdditiveExpression	right -> end . x - xr		366227	1		-			
ANR	366296	MemberAccess	right -> end . x		366227	0					
ANR	366297	PtrMemberAccess	right -> end		366227	0					
ANR	366298	Identifier	right		366227	0					
ANR	366299	Identifier	end		366227	1					
ANR	366300	Identifier	x		366227	1					
ANR	366301	Identifier	xr		366227	1					
ANR	366302	IdentifierDeclStatement	fixed yr = right -> start . y ;	1223:4:43474:43499	366227	6	True				
ANR	366303	IdentifierDecl	yr = right -> start . y		366227	0					
ANR	366304	IdentifierDeclType	fixed		366227	0					
ANR	366305	Identifier	yr		366227	1					
ANR	366306	AssignmentExpression	yr = right -> start . y		366227	2		=			
ANR	366307	Identifier	yr		366227	0					
ANR	366308	MemberAccess	right -> start . y		366227	1					
ANR	366309	PtrMemberAccess	right -> start		366227	0					
ANR	366310	Identifier	right		366227	0					
ANR	366311	Identifier	start		366227	1					
ANR	366312	Identifier	y		366227	1					
ANR	366313	IdentifierDeclStatement	fixed hr = right -> end . y - yr ;	1224:4:43505:43533	366227	7	True				
ANR	366314	IdentifierDecl	hr = right -> end . y - yr		366227	0					
ANR	366315	IdentifierDeclType	fixed		366227	0					
ANR	366316	Identifier	hr		366227	1					
ANR	366317	AssignmentExpression	hr = right -> end . y - yr		366227	2		=			
ANR	366318	Identifier	hr		366227	0					
ANR	366319	AdditiveExpression	right -> end . y - yr		366227	1		-			
ANR	366320	MemberAccess	right -> end . y		366227	0					
ANR	366321	PtrMemberAccess	right -> end		366227	0					
ANR	366322	Identifier	right		366227	0					
ANR	366323	Identifier	end		366227	1					
ANR	366324	Identifier	y		366227	1					
ANR	366325	Identifier	yr		366227	1					
ANR	366326	IdentifierDeclStatement	"fixed x0l = xl + fixed_mult_quo ( wl , ybot - yl , hl ) ;"	1225:4:43539:43589	366227	8	True				
ANR	366327	IdentifierDecl	"x0l = xl + fixed_mult_quo ( wl , ybot - yl , hl )"		366227	0					
ANR	366328	IdentifierDeclType	fixed		366227	0					
ANR	366329	Identifier	x0l		366227	1					
ANR	366330	AssignmentExpression	"x0l = xl + fixed_mult_quo ( wl , ybot - yl , hl )"		366227	2		=			
ANR	366331	Identifier	x0l		366227	0					
ANR	366332	AdditiveExpression	"xl + fixed_mult_quo ( wl , ybot - yl , hl )"		366227	1		+			
ANR	366333	Identifier	xl		366227	0					
ANR	366334	CallExpression	"fixed_mult_quo ( wl , ybot - yl , hl )"		366227	1					
ANR	366335	Callee	fixed_mult_quo		366227	0					
ANR	366336	Identifier	fixed_mult_quo		366227	0					
ANR	366337	ArgumentList	wl		366227	1					
ANR	366338	Argument	wl		366227	0					
ANR	366339	Identifier	wl		366227	0					
ANR	366340	Argument	ybot - yl		366227	1					
ANR	366341	AdditiveExpression	ybot - yl		366227	0		-			
ANR	366342	Identifier	ybot		366227	0					
ANR	366343	Identifier	yl		366227	1					
ANR	366344	Argument	hl		366227	2					
ANR	366345	Identifier	hl		366227	0					
ANR	366346	IdentifierDeclStatement	"fixed x1l = xl + fixed_mult_quo ( wl , ytop - yl , hl ) ;"	1226:4:43595:43645	366227	9	True				
ANR	366347	IdentifierDecl	"x1l = xl + fixed_mult_quo ( wl , ytop - yl , hl )"		366227	0					
ANR	366348	IdentifierDeclType	fixed		366227	0					
ANR	366349	Identifier	x1l		366227	1					
ANR	366350	AssignmentExpression	"x1l = xl + fixed_mult_quo ( wl , ytop - yl , hl )"		366227	2		=			
ANR	366351	Identifier	x1l		366227	0					
ANR	366352	AdditiveExpression	"xl + fixed_mult_quo ( wl , ytop - yl , hl )"		366227	1		+			
ANR	366353	Identifier	xl		366227	0					
ANR	366354	CallExpression	"fixed_mult_quo ( wl , ytop - yl , hl )"		366227	1					
ANR	366355	Callee	fixed_mult_quo		366227	0					
ANR	366356	Identifier	fixed_mult_quo		366227	0					
ANR	366357	ArgumentList	wl		366227	1					
ANR	366358	Argument	wl		366227	0					
ANR	366359	Identifier	wl		366227	0					
ANR	366360	Argument	ytop - yl		366227	1					
ANR	366361	AdditiveExpression	ytop - yl		366227	0		-			
ANR	366362	Identifier	ytop		366227	0					
ANR	366363	Identifier	yl		366227	1					
ANR	366364	Argument	hl		366227	2					
ANR	366365	Identifier	hl		366227	0					
ANR	366366	IdentifierDeclStatement	"fixed x0r = xr + fixed_mult_quo ( wr , ybot - yr , hr ) ;"	1227:4:43651:43701	366227	10	True				
ANR	366367	IdentifierDecl	"x0r = xr + fixed_mult_quo ( wr , ybot - yr , hr )"		366227	0					
ANR	366368	IdentifierDeclType	fixed		366227	0					
ANR	366369	Identifier	x0r		366227	1					
ANR	366370	AssignmentExpression	"x0r = xr + fixed_mult_quo ( wr , ybot - yr , hr )"		366227	2		=			
ANR	366371	Identifier	x0r		366227	0					
ANR	366372	AdditiveExpression	"xr + fixed_mult_quo ( wr , ybot - yr , hr )"		366227	1		+			
ANR	366373	Identifier	xr		366227	0					
ANR	366374	CallExpression	"fixed_mult_quo ( wr , ybot - yr , hr )"		366227	1					
ANR	366375	Callee	fixed_mult_quo		366227	0					
ANR	366376	Identifier	fixed_mult_quo		366227	0					
ANR	366377	ArgumentList	wr		366227	1					
ANR	366378	Argument	wr		366227	0					
ANR	366379	Identifier	wr		366227	0					
ANR	366380	Argument	ybot - yr		366227	1					
ANR	366381	AdditiveExpression	ybot - yr		366227	0		-			
ANR	366382	Identifier	ybot		366227	0					
ANR	366383	Identifier	yr		366227	1					
ANR	366384	Argument	hr		366227	2					
ANR	366385	Identifier	hr		366227	0					
ANR	366386	IdentifierDeclStatement	"fixed x1r = xr + fixed_mult_quo ( wr , ytop - yr , hr ) ;"	1228:4:43707:43757	366227	11	True				
ANR	366387	IdentifierDecl	"x1r = xr + fixed_mult_quo ( wr , ytop - yr , hr )"		366227	0					
ANR	366388	IdentifierDeclType	fixed		366227	0					
ANR	366389	Identifier	x1r		366227	1					
ANR	366390	AssignmentExpression	"x1r = xr + fixed_mult_quo ( wr , ytop - yr , hr )"		366227	2		=			
ANR	366391	Identifier	x1r		366227	0					
ANR	366392	AdditiveExpression	"xr + fixed_mult_quo ( wr , ytop - yr , hr )"		366227	1		+			
ANR	366393	Identifier	xr		366227	0					
ANR	366394	CallExpression	"fixed_mult_quo ( wr , ytop - yr , hr )"		366227	1					
ANR	366395	Callee	fixed_mult_quo		366227	0					
ANR	366396	Identifier	fixed_mult_quo		366227	0					
ANR	366397	ArgumentList	wr		366227	1					
ANR	366398	Argument	wr		366227	0					
ANR	366399	Identifier	wr		366227	0					
ANR	366400	Argument	ytop - yr		366227	1					
ANR	366401	AdditiveExpression	ytop - yr		366227	0		-			
ANR	366402	Identifier	ytop		366227	0					
ANR	366403	Identifier	yr		366227	1					
ANR	366404	Argument	hr		366227	2					
ANR	366405	Identifier	hr		366227	0					
ANR	366406	IdentifierDeclStatement	"define y0 ybot define y1 ytop int code = update_fill ( vdev , NULL , pdevc , lop ) ;"	1230:1:43761:43842	366227	12	True				
ANR	366407	IdentifierDecl	"code = update_fill ( vdev , NULL , pdevc , lop )"		366227	0					
ANR	366408	IdentifierDeclType	define y0 ybot define y1 ytop int		366227	0					
ANR	366409	Identifier	code		366227	1					
ANR	366410	AssignmentExpression	"code = update_fill ( vdev , NULL , pdevc , lop )"		366227	2		=			
ANR	366411	Identifier	code		366227	0					
ANR	366412	CallExpression	"update_fill ( vdev , NULL , pdevc , lop )"		366227	1					
ANR	366413	Callee	update_fill		366227	0					
ANR	366414	Identifier	update_fill		366227	0					
ANR	366415	ArgumentList	vdev		366227	1					
ANR	366416	Argument	vdev		366227	0					
ANR	366417	Identifier	vdev		366227	0					
ANR	366418	Argument	NULL		366227	1					
ANR	366419	Identifier	NULL		366227	0					
ANR	366420	Argument	pdevc		366227	2					
ANR	366421	Identifier	pdevc		366227	0					
ANR	366422	Argument	lop		366227	3					
ANR	366423	Identifier	lop		366227	0					
ANR	366424	IdentifierDeclStatement	gs_fixed_point points [ 4 ] ;	1233:4:43848:43872	366227	13	True				
ANR	366425	IdentifierDecl	points [ 4 ]		366227	0					
ANR	366426	IdentifierDeclType	gs_fixed_point [ 4 ]		366227	0					
ANR	366427	Identifier	points		366227	1					
ANR	366428	PrimaryExpression	4		366227	2					
ANR	366429	IfStatement	if ( code < 0 )		366227	14					
ANR	366430	Condition	code < 0	1235:8:43883:43890	366227	0	True				
ANR	366431	RelationalExpression	code < 0		366227	0		<			
ANR	366432	Identifier	code		366227	0					
ANR	366433	PrimaryExpression	0		366227	1					
ANR	366434	ReturnStatement	"return gx_default_fill_trapezoid ( dev , left , right , ybot , ytop , swap_axes , pdevc , lop ) ;"	1236:8:43901:44027	366227	1	True				
ANR	366435	CallExpression	"gx_default_fill_trapezoid ( dev , left , right , ybot , ytop , swap_axes , pdevc , lop )"		366227	0					
ANR	366436	Callee	gx_default_fill_trapezoid		366227	0					
ANR	366437	Identifier	gx_default_fill_trapezoid		366227	0					
ANR	366438	ArgumentList	dev		366227	1					
ANR	366439	Argument	dev		366227	0					
ANR	366440	Identifier	dev		366227	0					
ANR	366441	Argument	left		366227	1					
ANR	366442	Identifier	left		366227	0					
ANR	366443	Argument	right		366227	2					
ANR	366444	Identifier	right		366227	0					
ANR	366445	Argument	ybot		366227	3					
ANR	366446	Identifier	ybot		366227	0					
ANR	366447	Argument	ytop		366227	4					
ANR	366448	Identifier	ytop		366227	0					
ANR	366449	Argument	swap_axes		366227	5					
ANR	366450	Identifier	swap_axes		366227	0					
ANR	366451	Argument	pdevc		366227	6					
ANR	366452	Identifier	pdevc		366227	0					
ANR	366453	Argument	lop		366227	7					
ANR	366454	Identifier	lop		366227	0					
ANR	366455	ExpressionStatement	"code = gdev_vector_update_clip_path ( vdev , NULL )"	1239:4:44078:44125	366227	15	True				
ANR	366456	AssignmentExpression	"code = gdev_vector_update_clip_path ( vdev , NULL )"		366227	0		=			
ANR	366457	Identifier	code		366227	0					
ANR	366458	CallExpression	"gdev_vector_update_clip_path ( vdev , NULL )"		366227	1					
ANR	366459	Callee	gdev_vector_update_clip_path		366227	0					
ANR	366460	Identifier	gdev_vector_update_clip_path		366227	0					
ANR	366461	ArgumentList	vdev		366227	1					
ANR	366462	Argument	vdev		366227	0					
ANR	366463	Identifier	vdev		366227	0					
ANR	366464	Argument	NULL		366227	1					
ANR	366465	Identifier	NULL		366227	0					
ANR	366466	IfStatement	if ( code < 0 )		366227	16					
ANR	366467	Condition	code < 0	1240:8:44135:44142	366227	0	True				
ANR	366468	RelationalExpression	code < 0		366227	0		<			
ANR	366469	Identifier	code		366227	0					
ANR	366470	PrimaryExpression	0		366227	1					
ANR	366471	ReturnStatement	return code ;	1241:8:44153:44164	366227	1	True				
ANR	366472	Identifier	code		366227	0					
ANR	366473	IfStatement	if ( swap_axes )		366227	17					
ANR	366474	Condition	swap_axes	1242:8:44174:44182	366227	0	True				
ANR	366475	Identifier	swap_axes		366227	0					
ANR	366476	ExpressionStatement	"points [ 0 ] . y = x0l , points [ 1 ] . y = x0r , points [ 0 ] . x = points [ 1 ] . x = y0 , points [ 2 ] . y = x1r , points [ 3 ] . y = x1l , points [ 2 ] . x = points [ 3 ] . x = y1"	1243:8:44193:44367	366227	1	True				
ANR	366477	Expression	"points [ 0 ] . y = x0l , points [ 1 ] . y = x0r , points [ 0 ] . x = points [ 1 ] . x = y0 , points [ 2 ] . y = x1r , points [ 3 ] . y = x1l , points [ 2 ] . x = points [ 3 ] . x = y1"		366227	0					
ANR	366478	AssignmentExpression	points [ 0 ] . y = x0l		366227	0		=			
ANR	366479	MemberAccess	points [ 0 ] . y		366227	0					
ANR	366480	ArrayIndexing	points [ 0 ]		366227	0					
ANR	366481	Identifier	points		366227	0					
ANR	366482	PrimaryExpression	0		366227	1					
ANR	366483	Identifier	y		366227	1					
ANR	366484	Identifier	x0l		366227	1					
ANR	366485	Expression	"points [ 1 ] . y = x0r , points [ 0 ] . x = points [ 1 ] . x = y0 , points [ 2 ] . y = x1r , points [ 3 ] . y = x1l , points [ 2 ] . x = points [ 3 ] . x = y1"		366227	1					
ANR	366486	AssignmentExpression	points [ 1 ] . y = x0r		366227	0		=			
ANR	366487	MemberAccess	points [ 1 ] . y		366227	0					
ANR	366488	ArrayIndexing	points [ 1 ]		366227	0					
ANR	366489	Identifier	points		366227	0					
ANR	366490	PrimaryExpression	1		366227	1					
ANR	366491	Identifier	y		366227	1					
ANR	366492	Identifier	x0r		366227	1					
ANR	366493	Expression	"points [ 0 ] . x = points [ 1 ] . x = y0 , points [ 2 ] . y = x1r , points [ 3 ] . y = x1l , points [ 2 ] . x = points [ 3 ] . x = y1"		366227	1					
ANR	366494	AssignmentExpression	points [ 0 ] . x = points [ 1 ] . x = y0		366227	0		=			
ANR	366495	MemberAccess	points [ 0 ] . x		366227	0					
ANR	366496	ArrayIndexing	points [ 0 ]		366227	0					
ANR	366497	Identifier	points		366227	0					
ANR	366498	PrimaryExpression	0		366227	1					
ANR	366499	Identifier	x		366227	1					
ANR	366500	AssignmentExpression	points [ 1 ] . x = y0		366227	1		=			
ANR	366501	MemberAccess	points [ 1 ] . x		366227	0					
ANR	366502	ArrayIndexing	points [ 1 ]		366227	0					
ANR	366503	Identifier	points		366227	0					
ANR	366504	PrimaryExpression	1		366227	1					
ANR	366505	Identifier	x		366227	1					
ANR	366506	Identifier	y0		366227	1					
ANR	366507	Expression	"points [ 2 ] . y = x1r , points [ 3 ] . y = x1l , points [ 2 ] . x = points [ 3 ] . x = y1"		366227	1					
ANR	366508	AssignmentExpression	points [ 2 ] . y = x1r		366227	0		=			
ANR	366509	MemberAccess	points [ 2 ] . y		366227	0					
ANR	366510	ArrayIndexing	points [ 2 ]		366227	0					
ANR	366511	Identifier	points		366227	0					
ANR	366512	PrimaryExpression	2		366227	1					
ANR	366513	Identifier	y		366227	1					
ANR	366514	Identifier	x1r		366227	1					
ANR	366515	Expression	"points [ 3 ] . y = x1l , points [ 2 ] . x = points [ 3 ] . x = y1"		366227	1					
ANR	366516	AssignmentExpression	points [ 3 ] . y = x1l		366227	0		=			
ANR	366517	MemberAccess	points [ 3 ] . y		366227	0					
ANR	366518	ArrayIndexing	points [ 3 ]		366227	0					
ANR	366519	Identifier	points		366227	0					
ANR	366520	PrimaryExpression	3		366227	1					
ANR	366521	Identifier	y		366227	1					
ANR	366522	Identifier	x1l		366227	1					
ANR	366523	AssignmentExpression	points [ 2 ] . x = points [ 3 ] . x = y1		366227	1		=			
ANR	366524	MemberAccess	points [ 2 ] . x		366227	0					
ANR	366525	ArrayIndexing	points [ 2 ]		366227	0					
ANR	366526	Identifier	points		366227	0					
ANR	366527	PrimaryExpression	2		366227	1					
ANR	366528	Identifier	x		366227	1					
ANR	366529	AssignmentExpression	points [ 3 ] . x = y1		366227	1		=			
ANR	366530	MemberAccess	points [ 3 ] . x		366227	0					
ANR	366531	ArrayIndexing	points [ 3 ]		366227	0					
ANR	366532	Identifier	points		366227	0					
ANR	366533	PrimaryExpression	3		366227	1					
ANR	366534	Identifier	x		366227	1					
ANR	366535	Identifier	y1		366227	1					
ANR	366536	ElseStatement	else		366227	0					
ANR	366537	ExpressionStatement	"points [ 0 ] . x = x0l , points [ 1 ] . x = x0r , points [ 0 ] . y = points [ 1 ] . y = y0 , points [ 2 ] . x = x1r , points [ 3 ] . x = x1l , points [ 2 ] . y = points [ 3 ] . y = y1"	1248:8:44386:44560	366227	0	True				
ANR	366538	Expression	"points [ 0 ] . x = x0l , points [ 1 ] . x = x0r , points [ 0 ] . y = points [ 1 ] . y = y0 , points [ 2 ] . x = x1r , points [ 3 ] . x = x1l , points [ 2 ] . y = points [ 3 ] . y = y1"		366227	0					
ANR	366539	AssignmentExpression	points [ 0 ] . x = x0l		366227	0		=			
ANR	366540	MemberAccess	points [ 0 ] . x		366227	0					
ANR	366541	ArrayIndexing	points [ 0 ]		366227	0					
ANR	366542	Identifier	points		366227	0					
ANR	366543	PrimaryExpression	0		366227	1					
ANR	366544	Identifier	x		366227	1					
ANR	366545	Identifier	x0l		366227	1					
ANR	366546	Expression	"points [ 1 ] . x = x0r , points [ 0 ] . y = points [ 1 ] . y = y0 , points [ 2 ] . x = x1r , points [ 3 ] . x = x1l , points [ 2 ] . y = points [ 3 ] . y = y1"		366227	1					
ANR	366547	AssignmentExpression	points [ 1 ] . x = x0r		366227	0		=			
ANR	366548	MemberAccess	points [ 1 ] . x		366227	0					
ANR	366549	ArrayIndexing	points [ 1 ]		366227	0					
ANR	366550	Identifier	points		366227	0					
ANR	366551	PrimaryExpression	1		366227	1					
ANR	366552	Identifier	x		366227	1					
ANR	366553	Identifier	x0r		366227	1					
ANR	366554	Expression	"points [ 0 ] . y = points [ 1 ] . y = y0 , points [ 2 ] . x = x1r , points [ 3 ] . x = x1l , points [ 2 ] . y = points [ 3 ] . y = y1"		366227	1					
ANR	366555	AssignmentExpression	points [ 0 ] . y = points [ 1 ] . y = y0		366227	0		=			
ANR	366556	MemberAccess	points [ 0 ] . y		366227	0					
ANR	366557	ArrayIndexing	points [ 0 ]		366227	0					
ANR	366558	Identifier	points		366227	0					
ANR	366559	PrimaryExpression	0		366227	1					
ANR	366560	Identifier	y		366227	1					
ANR	366561	AssignmentExpression	points [ 1 ] . y = y0		366227	1		=			
ANR	366562	MemberAccess	points [ 1 ] . y		366227	0					
ANR	366563	ArrayIndexing	points [ 1 ]		366227	0					
ANR	366564	Identifier	points		366227	0					
ANR	366565	PrimaryExpression	1		366227	1					
ANR	366566	Identifier	y		366227	1					
ANR	366567	Identifier	y0		366227	1					
ANR	366568	Expression	"points [ 2 ] . x = x1r , points [ 3 ] . x = x1l , points [ 2 ] . y = points [ 3 ] . y = y1"		366227	1					
ANR	366569	AssignmentExpression	points [ 2 ] . x = x1r		366227	0		=			
ANR	366570	MemberAccess	points [ 2 ] . x		366227	0					
ANR	366571	ArrayIndexing	points [ 2 ]		366227	0					
ANR	366572	Identifier	points		366227	0					
ANR	366573	PrimaryExpression	2		366227	1					
ANR	366574	Identifier	x		366227	1					
ANR	366575	Identifier	x1r		366227	1					
ANR	366576	Expression	"points [ 3 ] . x = x1l , points [ 2 ] . y = points [ 3 ] . y = y1"		366227	1					
ANR	366577	AssignmentExpression	points [ 3 ] . x = x1l		366227	0		=			
ANR	366578	MemberAccess	points [ 3 ] . x		366227	0					
ANR	366579	ArrayIndexing	points [ 3 ]		366227	0					
ANR	366580	Identifier	points		366227	0					
ANR	366581	PrimaryExpression	3		366227	1					
ANR	366582	Identifier	x		366227	1					
ANR	366583	Identifier	x1l		366227	1					
ANR	366584	AssignmentExpression	points [ 2 ] . y = points [ 3 ] . y = y1		366227	1		=			
ANR	366585	MemberAccess	points [ 2 ] . y		366227	0					
ANR	366586	ArrayIndexing	points [ 2 ]		366227	0					
ANR	366587	Identifier	points		366227	0					
ANR	366588	PrimaryExpression	2		366227	1					
ANR	366589	Identifier	y		366227	1					
ANR	366590	AssignmentExpression	points [ 3 ] . y = y1		366227	1		=			
ANR	366591	MemberAccess	points [ 3 ] . y		366227	0					
ANR	366592	ArrayIndexing	points [ 3 ]		366227	0					
ANR	366593	Identifier	points		366227	0					
ANR	366594	PrimaryExpression	3		366227	1					
ANR	366595	Identifier	y		366227	1					
ANR	366596	Identifier	y1		366227	1					
ANR	366597	Statement	undef	1252:1:44563:44567	366227	18	True				
ANR	366598	Statement	y0	1252:7:44569:44570	366227	19	True				
ANR	366599	Statement	undef	1253:1:44573:44577	366227	20	True				
ANR	366600	Statement	y1	1253:7:44579:44580	366227	21	True				
ANR	366601	IfStatement	if ( vdev -> bbox_device )		366227	22					
ANR	366602	Condition	vdev -> bbox_device	1254:8:44590:44606	366227	0	True				
ANR	366603	PtrMemberAccess	vdev -> bbox_device		366227	0					
ANR	366604	Identifier	vdev		366227	0					
ANR	366605	Identifier	bbox_device		366227	1					
ANR	366606	CompoundStatement		40:8:1341:1497	366227	1					
ANR	366607	IdentifierDeclStatement	"int code = ( * dev_proc ( vdev -> bbox_device , fill_trapezoid ) ) ( ( gx_device * ) vdev -> bbox_device , left , right , ybot , ytop , swap_axes , pdevc , lop ) ;"	1255:8:44619:44775	366227	0	True				
ANR	366608	IdentifierDecl	"code = ( * dev_proc ( vdev -> bbox_device , fill_trapezoid ) ) ( ( gx_device * ) vdev -> bbox_device , left , right , ybot , ytop , swap_axes , pdevc , lop )"		366227	0					
ANR	366609	IdentifierDeclType	int		366227	0					
ANR	366610	Identifier	code		366227	1					
ANR	366611	AssignmentExpression	"code = ( * dev_proc ( vdev -> bbox_device , fill_trapezoid ) ) ( ( gx_device * ) vdev -> bbox_device , left , right , ybot , ytop , swap_axes , pdevc , lop )"		366227	2		=			
ANR	366612	Identifier	code		366227	0					
ANR	366613	CallExpression	"( * dev_proc ( vdev -> bbox_device , fill_trapezoid ) ) ( ( gx_device * ) vdev -> bbox_device , left , right , ybot , ytop , swap_axes , pdevc , lop )"		366227	1					
ANR	366614	Callee	"* dev_proc ( vdev -> bbox_device , fill_trapezoid )"		366227	0					
ANR	366615	UnaryOperationExpression	"* dev_proc ( vdev -> bbox_device , fill_trapezoid )"		366227	0					
ANR	366616	UnaryOperator	*		366227	0					
ANR	366617	CallExpression	"dev_proc ( vdev -> bbox_device , fill_trapezoid )"		366227	1					
ANR	366618	Callee	dev_proc		366227	0					
ANR	366619	Identifier	dev_proc		366227	0					
ANR	366620	ArgumentList	vdev -> bbox_device		366227	1					
ANR	366621	Argument	vdev -> bbox_device		366227	0					
ANR	366622	PtrMemberAccess	vdev -> bbox_device		366227	0					
ANR	366623	Identifier	vdev		366227	0					
ANR	366624	Identifier	bbox_device		366227	1					
ANR	366625	Argument	fill_trapezoid		366227	1					
ANR	366626	Identifier	fill_trapezoid		366227	0					
ANR	366627	ArgumentList	( gx_device * ) vdev -> bbox_device		366227	1					
ANR	366628	Argument	( gx_device * ) vdev -> bbox_device		366227	0					
ANR	366629	CastExpression	( gx_device * ) vdev -> bbox_device		366227	0					
ANR	366630	CastTarget	gx_device *		366227	0					
ANR	366631	PtrMemberAccess	vdev -> bbox_device		366227	1					
ANR	366632	Identifier	vdev		366227	0					
ANR	366633	Identifier	bbox_device		366227	1					
ANR	366634	Argument	left		366227	1					
ANR	366635	Identifier	left		366227	0					
ANR	366636	Argument	right		366227	2					
ANR	366637	Identifier	right		366227	0					
ANR	366638	Argument	ybot		366227	3					
ANR	366639	Identifier	ybot		366227	0					
ANR	366640	Argument	ytop		366227	4					
ANR	366641	Identifier	ytop		366227	0					
ANR	366642	Argument	swap_axes		366227	5					
ANR	366643	Identifier	swap_axes		366227	0					
ANR	366644	Argument	pdevc		366227	6					
ANR	366645	Identifier	pdevc		366227	0					
ANR	366646	Argument	lop		366227	7					
ANR	366647	Identifier	lop		366227	0					
ANR	366648	IfStatement	if ( code < 0 )		366227	1					
ANR	366649	Condition	code < 0	1259:12:44790:44797	366227	0	True				
ANR	366650	RelationalExpression	code < 0		366227	0		<			
ANR	366651	Identifier	code		366227	0					
ANR	366652	PrimaryExpression	0		366227	1					
ANR	366653	ReturnStatement	return code ;	1260:12:44812:44823	366227	1	True				
ANR	366654	Identifier	code		366227	0					
ANR	366655	ReturnStatement	"return gdev_vector_write_polygon ( vdev , points , 4 , true , gx_path_type_fill ) ;"	1262:4:44835:44946	366227	23	True				
ANR	366656	CallExpression	"gdev_vector_write_polygon ( vdev , points , 4 , true , gx_path_type_fill )"		366227	0					
ANR	366657	Callee	gdev_vector_write_polygon		366227	0					
ANR	366658	Identifier	gdev_vector_write_polygon		366227	0					
ANR	366659	ArgumentList	vdev		366227	1					
ANR	366660	Argument	vdev		366227	0					
ANR	366661	Identifier	vdev		366227	0					
ANR	366662	Argument	points		366227	1					
ANR	366663	Identifier	points		366227	0					
ANR	366664	Argument	4		366227	2					
ANR	366665	PrimaryExpression	4		366227	0					
ANR	366666	Argument	true		366227	3					
ANR	366667	Identifier	true		366227	0					
ANR	366668	Argument	gx_path_type_fill		366227	4					
ANR	366669	Identifier	gx_path_type_fill		366227	0					
ANR	366670	ReturnType	int		366227	1					
ANR	366671	Identifier	gdev_vector_fill_trapezoid		366227	2					
ANR	366672	ParameterList	"gx_device * dev , const gs_fixed_edge * left , const gs_fixed_edge * right , fixed ybot , fixed ytop , bool swap_axes , const gx_device_color * pdevc , gs_logical_operation_t lop"		366227	3					
ANR	366673	Parameter	gx_device * dev	1213:27:43078:43092	366227	0	True				
ANR	366674	ParameterType	gx_device *		366227	0					
ANR	366675	Identifier	dev		366227	1					
ANR	366676	Parameter	const gs_fixed_edge * left	1213:44:43095:43120	366227	1	True				
ANR	366677	ParameterType	const gs_fixed_edge *		366227	0					
ANR	366678	Identifier	left		366227	1					
ANR	366679	Parameter	const gs_fixed_edge * right	1214:8:43131:43157	366227	2	True				
ANR	366680	ParameterType	const gs_fixed_edge *		366227	0					
ANR	366681	Identifier	right		366227	1					
ANR	366682	Parameter	fixed ybot	1214:37:43160:43169	366227	3	True				
ANR	366683	ParameterType	fixed		366227	0					
ANR	366684	Identifier	ybot		366227	1					
ANR	366685	Parameter	fixed ytop	1214:49:43172:43181	366227	4	True				
ANR	366686	ParameterType	fixed		366227	0					
ANR	366687	Identifier	ytop		366227	1					
ANR	366688	Parameter	bool swap_axes	1214:61:43184:43197	366227	5	True				
ANR	366689	ParameterType	bool		366227	0					
ANR	366690	Identifier	swap_axes		366227	1					
ANR	366691	Parameter	const gx_device_color * pdevc	1215:18:43218:43246	366227	6	True				
ANR	366692	ParameterType	const gx_device_color *		366227	0					
ANR	366693	Identifier	pdevc		366227	1					
ANR	366694	Parameter	gs_logical_operation_t lop	1215:49:43249:43274	366227	7	True				
ANR	366695	ParameterType	gs_logical_operation_t		366227	0					
ANR	366696	Identifier	lop		366227	1					
ANR	366697	CFGEntryNode	ENTRY		366227		True				
ANR	366698	CFGExitNode	EXIT		366227		True				
ANR	366699	Symbol	right -> start . y		366227						
ANR	366700	Symbol	right -> start		366227						
ANR	366701	Symbol	fixed_mult_quo		366227						
ANR	366702	Symbol	right -> start . x		366227						
ANR	366703	Symbol	ytop		366227						
ANR	366704	Symbol	hl		366227						
ANR	366705	Symbol	pdevc		366227						
ANR	366706	Symbol	hr		366227						
ANR	366707	Symbol	points		366227						
ANR	366708	Symbol	yl		366227						
ANR	366709	Symbol	dev		366227						
ANR	366710	Symbol	points [ 3 ] . y		366227						
ANR	366711	Symbol	points [ 3 ] . x		366227						
ANR	366712	Symbol	ybot		366227						
ANR	366713	Symbol	yr		366227						
ANR	366714	Symbol	fill_trapezoid		366227						
ANR	366715	Symbol	left -> end . y		366227						
ANR	366716	Symbol	* left		366227						
ANR	366717	Symbol	left -> end . x		366227						
ANR	366718	Symbol	points [ 0 ] . y		366227						
ANR	366719	Symbol	points [ 0 ] . x		366227						
ANR	366720	Symbol	NULL		366227						
ANR	366721	Symbol	right -> end		366227						
ANR	366722	Symbol	points [ 1 ] . y		366227						
ANR	366723	Symbol	points [ 1 ] . x		366227						
ANR	366724	Symbol	* vdev		366227						
ANR	366725	Symbol	left		366227						
ANR	366726	Symbol	x0l		366227						
ANR	366727	Symbol	gx_path_type_fill		366227						
ANR	366728	Symbol	true		366227						
ANR	366729	Symbol	x0r		366227						
ANR	366730	Symbol	gx_default_fill_trapezoid		366227						
ANR	366731	Symbol	* points		366227						
ANR	366732	Symbol	vdev -> bbox_device		366227						
ANR	366733	Symbol	code		366227						
ANR	366734	Symbol	* dev_proc		366227						
ANR	366735	Symbol	points [ 2 ] . x		366227						
ANR	366736	Symbol	lop		366227						
ANR	366737	Symbol	points [ 2 ] . y		366227						
ANR	366738	Symbol	x1l		366227						
ANR	366739	Symbol	wl		366227						
ANR	366740	Symbol	dev_proc		366227						
ANR	366741	Symbol	y0		366227						
ANR	366742	Symbol	left -> start . y		366227						
ANR	366743	Symbol	x1r		366227						
ANR	366744	Symbol	y1		366227						
ANR	366745	Symbol	left -> start . x		366227						
ANR	366746	Symbol	wr		366227						
ANR	366747	Symbol	gdev_vector_write_polygon		366227						
ANR	366748	Symbol	left -> start		366227						
ANR	366749	Symbol	vdev		366227						
ANR	366750	Symbol	left -> end		366227						
ANR	366751	Symbol	right		366227						
ANR	366752	Symbol	right -> end . y		366227						
ANR	366753	Symbol	right -> end . x		366227						
ANR	366754	Symbol	"* dev_proc ( vdev -> bbox_device , fill_trapezoid )"		366227						
ANR	366755	Symbol	update_fill		366227						
ANR	366756	Symbol	xl		366227						
ANR	366757	Symbol	xr		366227						
ANR	366758	Symbol	gdev_vector_update_clip_path		366227						
ANR	366759	Symbol	swap_axes		366227						
ANR	366760	Symbol	* right		366227						
ANR	366761	Function	gdev_vector_fill_parallelogram	1266:0:44951:46548							
ANR	366762	FunctionDef	"gdev_vector_fill_parallelogram (gx_device * dev , fixed px , fixed py , fixed ax , fixed ay , fixed bx , fixed by , const gx_device_color * pdevc , gs_logical_operation_t lop)"		366761	0					
ANR	366763	CompoundStatement		1270:0:45157:46548	366761	0					
ANR	366764	IdentifierDeclStatement	"fixed pax = px + ax , pay = py + ay ;"	1271:4:45163:45197	366761	0	True				
ANR	366765	IdentifierDecl	pax = px + ax		366761	0					
ANR	366766	IdentifierDeclType	fixed		366761	0					
ANR	366767	Identifier	pax		366761	1					
ANR	366768	AssignmentExpression	pax = px + ax		366761	2		=			
ANR	366769	Identifier	pax		366761	0					
ANR	366770	AdditiveExpression	px + ax		366761	1		+			
ANR	366771	Identifier	px		366761	0					
ANR	366772	Identifier	ax		366761	1					
ANR	366773	IdentifierDecl	pay = py + ay		366761	1					
ANR	366774	IdentifierDeclType	fixed		366761	0					
ANR	366775	Identifier	pay		366761	1					
ANR	366776	AssignmentExpression	pay = py + ay		366761	2		=			
ANR	366777	Identifier	pay		366761	0					
ANR	366778	AdditiveExpression	py + ay		366761	1		+			
ANR	366779	Identifier	py		366761	0					
ANR	366780	Identifier	ay		366761	1					
ANR	366781	IdentifierDeclStatement	"int code = update_fill ( vdev , NULL , pdevc , lop ) ;"	1272:4:45203:45249	366761	1	True				
ANR	366782	IdentifierDecl	"code = update_fill ( vdev , NULL , pdevc , lop )"		366761	0					
ANR	366783	IdentifierDeclType	int		366761	0					
ANR	366784	Identifier	code		366761	1					
ANR	366785	AssignmentExpression	"code = update_fill ( vdev , NULL , pdevc , lop )"		366761	2		=			
ANR	366786	Identifier	code		366761	0					
ANR	366787	CallExpression	"update_fill ( vdev , NULL , pdevc , lop )"		366761	1					
ANR	366788	Callee	update_fill		366761	0					
ANR	366789	Identifier	update_fill		366761	0					
ANR	366790	ArgumentList	vdev		366761	1					
ANR	366791	Argument	vdev		366761	0					
ANR	366792	Identifier	vdev		366761	0					
ANR	366793	Argument	NULL		366761	1					
ANR	366794	Identifier	NULL		366761	0					
ANR	366795	Argument	pdevc		366761	2					
ANR	366796	Identifier	pdevc		366761	0					
ANR	366797	Argument	lop		366761	3					
ANR	366798	Identifier	lop		366761	0					
ANR	366799	IdentifierDeclStatement	gs_fixed_point points [ 4 ] ;	1273:4:45255:45279	366761	2	True				
ANR	366800	IdentifierDecl	points [ 4 ]		366761	0					
ANR	366801	IdentifierDeclType	gs_fixed_point [ 4 ]		366761	0					
ANR	366802	Identifier	points		366761	1					
ANR	366803	PrimaryExpression	4		366761	2					
ANR	366804	IdentifierDeclStatement	bool need_color_reset = false ;	1274:4:45285:45314	366761	3	True				
ANR	366805	IdentifierDecl	need_color_reset = false		366761	0					
ANR	366806	IdentifierDeclType	bool		366761	0					
ANR	366807	Identifier	need_color_reset		366761	1					
ANR	366808	AssignmentExpression	need_color_reset = false		366761	2		=			
ANR	366809	Identifier	false		366761	0					
ANR	366810	Identifier	false		366761	1					
ANR	366811	IfStatement	if ( code < 0 )		366761	4					
ANR	366812	Condition	code < 0	1276:8:45325:45332	366761	0	True				
ANR	366813	RelationalExpression	code < 0		366761	0		<			
ANR	366814	Identifier	code		366761	0					
ANR	366815	PrimaryExpression	0		366761	1					
ANR	366816	ReturnStatement	"return gx_default_fill_parallelogram ( dev , px , py , ax , ay , bx , by , pdevc , lop ) ;"	1277:8:45343:45465	366761	1	True				
ANR	366817	CallExpression	"gx_default_fill_parallelogram ( dev , px , py , ax , ay , bx , by , pdevc , lop )"		366761	0					
ANR	366818	Callee	gx_default_fill_parallelogram		366761	0					
ANR	366819	Identifier	gx_default_fill_parallelogram		366761	0					
ANR	366820	ArgumentList	dev		366761	1					
ANR	366821	Argument	dev		366761	0					
ANR	366822	Identifier	dev		366761	0					
ANR	366823	Argument	px		366761	1					
ANR	366824	Identifier	px		366761	0					
ANR	366825	Argument	py		366761	2					
ANR	366826	Identifier	py		366761	0					
ANR	366827	Argument	ax		366761	3					
ANR	366828	Identifier	ax		366761	0					
ANR	366829	Argument	ay		366761	4					
ANR	366830	Identifier	ay		366761	0					
ANR	366831	Argument	bx		366761	5					
ANR	366832	Identifier	bx		366761	0					
ANR	366833	Argument	by		366761	6					
ANR	366834	Identifier	by		366761	0					
ANR	366835	Argument	pdevc		366761	7					
ANR	366836	Identifier	pdevc		366761	0					
ANR	366837	Argument	lop		366761	8					
ANR	366838	Identifier	lop		366761	0					
ANR	366839	IfStatement	if ( vdev -> clip_path_id != vdev -> no_clip_path_id )		366761	5					
ANR	366840	Condition	vdev -> clip_path_id != vdev -> no_clip_path_id	1280:8:45520:45562	366761	0	True				
ANR	366841	EqualityExpression	vdev -> clip_path_id != vdev -> no_clip_path_id		366761	0		!=			
ANR	366842	PtrMemberAccess	vdev -> clip_path_id		366761	0					
ANR	366843	Identifier	vdev		366761	0					
ANR	366844	Identifier	clip_path_id		366761	1					
ANR	366845	PtrMemberAccess	vdev -> no_clip_path_id		366761	1					
ANR	366846	Identifier	vdev		366761	0					
ANR	366847	Identifier	no_clip_path_id		366761	1					
ANR	366848	ExpressionStatement	need_color_reset = true	1285:8:45751:45774	366761	1	True				
ANR	366849	AssignmentExpression	need_color_reset = true		366761	0		=			
ANR	366850	Identifier	need_color_reset		366761	0					
ANR	366851	Identifier	true		366761	1					
ANR	366852	ExpressionStatement	"code = gdev_vector_update_clip_path ( vdev , NULL )"	1287:4:45781:45828	366761	6	True				
ANR	366853	AssignmentExpression	"code = gdev_vector_update_clip_path ( vdev , NULL )"		366761	0		=			
ANR	366854	Identifier	code		366761	0					
ANR	366855	CallExpression	"gdev_vector_update_clip_path ( vdev , NULL )"		366761	1					
ANR	366856	Callee	gdev_vector_update_clip_path		366761	0					
ANR	366857	Identifier	gdev_vector_update_clip_path		366761	0					
ANR	366858	ArgumentList	vdev		366761	1					
ANR	366859	Argument	vdev		366761	0					
ANR	366860	Identifier	vdev		366761	0					
ANR	366861	Argument	NULL		366761	1					
ANR	366862	Identifier	NULL		366761	0					
ANR	366863	IfStatement	if ( code < 0 )		366761	7					
ANR	366864	Condition	code < 0	1288:8:45838:45845	366761	0	True				
ANR	366865	RelationalExpression	code < 0		366761	0		<			
ANR	366866	Identifier	code		366761	0					
ANR	366867	PrimaryExpression	0		366761	1					
ANR	366868	ReturnStatement	return code ;	1289:8:45856:45867	366761	1	True				
ANR	366869	Identifier	code		366761	0					
ANR	366870	IfStatement	if ( need_color_reset )		366761	8					
ANR	366871	Condition	need_color_reset	1291:8:45878:45893	366761	0	True				
ANR	366872	Identifier	need_color_reset		366761	0					
ANR	366873	CompoundStatement		22:26:738:738	366761	1					
ANR	366874	ExpressionStatement	"code = update_fill ( vdev , NULL , pdevc , lop )"	1292:8:45906:45948	366761	0	True				
ANR	366875	AssignmentExpression	"code = update_fill ( vdev , NULL , pdevc , lop )"		366761	0		=			
ANR	366876	Identifier	code		366761	0					
ANR	366877	CallExpression	"update_fill ( vdev , NULL , pdevc , lop )"		366761	1					
ANR	366878	Callee	update_fill		366761	0					
ANR	366879	Identifier	update_fill		366761	0					
ANR	366880	ArgumentList	vdev		366761	1					
ANR	366881	Argument	vdev		366761	0					
ANR	366882	Identifier	vdev		366761	0					
ANR	366883	Argument	NULL		366761	1					
ANR	366884	Identifier	NULL		366761	0					
ANR	366885	Argument	pdevc		366761	2					
ANR	366886	Identifier	pdevc		366761	0					
ANR	366887	Argument	lop		366761	3					
ANR	366888	Identifier	lop		366761	0					
ANR	366889	IfStatement	if ( code < 0 )		366761	1					
ANR	366890	Condition	code < 0	1293:12:45962:45969	366761	0	True				
ANR	366891	RelationalExpression	code < 0		366761	0		<			
ANR	366892	Identifier	code		366761	0					
ANR	366893	PrimaryExpression	0		366761	1					
ANR	366894	ReturnStatement	return code ;	1294:12:45984:45995	366761	1	True				
ANR	366895	Identifier	code		366761	0					
ANR	366896	IfStatement	if ( vdev -> bbox_device )		366761	9					
ANR	366897	Condition	vdev -> bbox_device	1296:8:46011:46027	366761	0	True				
ANR	366898	PtrMemberAccess	vdev -> bbox_device		366761	0					
ANR	366899	Identifier	vdev		366761	0					
ANR	366900	Identifier	bbox_device		366761	1					
ANR	366901	CompoundStatement		27:27:872:872	366761	1					
ANR	366902	ExpressionStatement	"code = ( * dev_proc ( vdev -> bbox_device , fill_parallelogram ) ) ( ( gx_device * ) vdev -> bbox_device , px , py , ax , ay , bx , by , pdevc , lop )"	1297:8:46040:46192	366761	0	True				
ANR	366903	AssignmentExpression	"code = ( * dev_proc ( vdev -> bbox_device , fill_parallelogram ) ) ( ( gx_device * ) vdev -> bbox_device , px , py , ax , ay , bx , by , pdevc , lop )"		366761	0		=			
ANR	366904	Identifier	code		366761	0					
ANR	366905	CallExpression	"( * dev_proc ( vdev -> bbox_device , fill_parallelogram ) ) ( ( gx_device * ) vdev -> bbox_device , px , py , ax , ay , bx , by , pdevc , lop )"		366761	1					
ANR	366906	Callee	"* dev_proc ( vdev -> bbox_device , fill_parallelogram )"		366761	0					
ANR	366907	UnaryOperationExpression	"* dev_proc ( vdev -> bbox_device , fill_parallelogram )"		366761	0					
ANR	366908	UnaryOperator	*		366761	0					
ANR	366909	CallExpression	"dev_proc ( vdev -> bbox_device , fill_parallelogram )"		366761	1					
ANR	366910	Callee	dev_proc		366761	0					
ANR	366911	Identifier	dev_proc		366761	0					
ANR	366912	ArgumentList	vdev -> bbox_device		366761	1					
ANR	366913	Argument	vdev -> bbox_device		366761	0					
ANR	366914	PtrMemberAccess	vdev -> bbox_device		366761	0					
ANR	366915	Identifier	vdev		366761	0					
ANR	366916	Identifier	bbox_device		366761	1					
ANR	366917	Argument	fill_parallelogram		366761	1					
ANR	366918	Identifier	fill_parallelogram		366761	0					
ANR	366919	ArgumentList	( gx_device * ) vdev -> bbox_device		366761	1					
ANR	366920	Argument	( gx_device * ) vdev -> bbox_device		366761	0					
ANR	366921	CastExpression	( gx_device * ) vdev -> bbox_device		366761	0					
ANR	366922	CastTarget	gx_device *		366761	0					
ANR	366923	PtrMemberAccess	vdev -> bbox_device		366761	1					
ANR	366924	Identifier	vdev		366761	0					
ANR	366925	Identifier	bbox_device		366761	1					
ANR	366926	Argument	px		366761	1					
ANR	366927	Identifier	px		366761	0					
ANR	366928	Argument	py		366761	2					
ANR	366929	Identifier	py		366761	0					
ANR	366930	Argument	ax		366761	3					
ANR	366931	Identifier	ax		366761	0					
ANR	366932	Argument	ay		366761	4					
ANR	366933	Identifier	ay		366761	0					
ANR	366934	Argument	bx		366761	5					
ANR	366935	Identifier	bx		366761	0					
ANR	366936	Argument	by		366761	6					
ANR	366937	Identifier	by		366761	0					
ANR	366938	Argument	pdevc		366761	7					
ANR	366939	Identifier	pdevc		366761	0					
ANR	366940	Argument	lop		366761	8					
ANR	366941	Identifier	lop		366761	0					
ANR	366942	IfStatement	if ( code < 0 )		366761	1					
ANR	366943	Condition	code < 0	1300:12:46206:46213	366761	0	True				
ANR	366944	RelationalExpression	code < 0		366761	0		<			
ANR	366945	Identifier	code		366761	0					
ANR	366946	PrimaryExpression	0		366761	1					
ANR	366947	ReturnStatement	return code ;	1301:12:46228:46239	366761	1	True				
ANR	366948	Identifier	code		366761	0					
ANR	366949	ExpressionStatement	"points [ 0 ] . x = px , points [ 0 ] . y = py"	1303:4:46251:46285	366761	10	True				
ANR	366950	Expression	"points [ 0 ] . x = px , points [ 0 ] . y = py"		366761	0					
ANR	366951	AssignmentExpression	points [ 0 ] . x = px		366761	0		=			
ANR	366952	MemberAccess	points [ 0 ] . x		366761	0					
ANR	366953	ArrayIndexing	points [ 0 ]		366761	0					
ANR	366954	Identifier	points		366761	0					
ANR	366955	PrimaryExpression	0		366761	1					
ANR	366956	Identifier	x		366761	1					
ANR	366957	Identifier	px		366761	1					
ANR	366958	AssignmentExpression	points [ 0 ] . y = py		366761	1		=			
ANR	366959	MemberAccess	points [ 0 ] . y		366761	0					
ANR	366960	ArrayIndexing	points [ 0 ]		366761	0					
ANR	366961	Identifier	points		366761	0					
ANR	366962	PrimaryExpression	0		366761	1					
ANR	366963	Identifier	y		366761	1					
ANR	366964	Identifier	py		366761	1					
ANR	366965	ExpressionStatement	"points [ 1 ] . x = pax , points [ 1 ] . y = pay"	1304:4:46291:46327	366761	11	True				
ANR	366966	Expression	"points [ 1 ] . x = pax , points [ 1 ] . y = pay"		366761	0					
ANR	366967	AssignmentExpression	points [ 1 ] . x = pax		366761	0		=			
ANR	366968	MemberAccess	points [ 1 ] . x		366761	0					
ANR	366969	ArrayIndexing	points [ 1 ]		366761	0					
ANR	366970	Identifier	points		366761	0					
ANR	366971	PrimaryExpression	1		366761	1					
ANR	366972	Identifier	x		366761	1					
ANR	366973	Identifier	pax		366761	1					
ANR	366974	AssignmentExpression	points [ 1 ] . y = pay		366761	1		=			
ANR	366975	MemberAccess	points [ 1 ] . y		366761	0					
ANR	366976	ArrayIndexing	points [ 1 ]		366761	0					
ANR	366977	Identifier	points		366761	0					
ANR	366978	PrimaryExpression	1		366761	1					
ANR	366979	Identifier	y		366761	1					
ANR	366980	Identifier	pay		366761	1					
ANR	366981	ExpressionStatement	"points [ 2 ] . x = pax + bx , points [ 2 ] . y = pay + by"	1305:4:46333:46379	366761	12	True				
ANR	366982	Expression	"points [ 2 ] . x = pax + bx , points [ 2 ] . y = pay + by"		366761	0					
ANR	366983	AssignmentExpression	points [ 2 ] . x = pax + bx		366761	0		=			
ANR	366984	MemberAccess	points [ 2 ] . x		366761	0					
ANR	366985	ArrayIndexing	points [ 2 ]		366761	0					
ANR	366986	Identifier	points		366761	0					
ANR	366987	PrimaryExpression	2		366761	1					
ANR	366988	Identifier	x		366761	1					
ANR	366989	AdditiveExpression	pax + bx		366761	1		+			
ANR	366990	Identifier	pax		366761	0					
ANR	366991	Identifier	bx		366761	1					
ANR	366992	AssignmentExpression	points [ 2 ] . y = pay + by		366761	1		=			
ANR	366993	MemberAccess	points [ 2 ] . y		366761	0					
ANR	366994	ArrayIndexing	points [ 2 ]		366761	0					
ANR	366995	Identifier	points		366761	0					
ANR	366996	PrimaryExpression	2		366761	1					
ANR	366997	Identifier	y		366761	1					
ANR	366998	AdditiveExpression	pay + by		366761	1		+			
ANR	366999	Identifier	pay		366761	0					
ANR	367000	Identifier	by		366761	1					
ANR	367001	ExpressionStatement	"points [ 3 ] . x = px + bx , points [ 3 ] . y = py + by"	1306:4:46385:46429	366761	13	True				
ANR	367002	Expression	"points [ 3 ] . x = px + bx , points [ 3 ] . y = py + by"		366761	0					
ANR	367003	AssignmentExpression	points [ 3 ] . x = px + bx		366761	0		=			
ANR	367004	MemberAccess	points [ 3 ] . x		366761	0					
ANR	367005	ArrayIndexing	points [ 3 ]		366761	0					
ANR	367006	Identifier	points		366761	0					
ANR	367007	PrimaryExpression	3		366761	1					
ANR	367008	Identifier	x		366761	1					
ANR	367009	AdditiveExpression	px + bx		366761	1		+			
ANR	367010	Identifier	px		366761	0					
ANR	367011	Identifier	bx		366761	1					
ANR	367012	AssignmentExpression	points [ 3 ] . y = py + by		366761	1		=			
ANR	367013	MemberAccess	points [ 3 ] . y		366761	0					
ANR	367014	ArrayIndexing	points [ 3 ]		366761	0					
ANR	367015	Identifier	points		366761	0					
ANR	367016	PrimaryExpression	3		366761	1					
ANR	367017	Identifier	y		366761	1					
ANR	367018	AdditiveExpression	py + by		366761	1		+			
ANR	367019	Identifier	py		366761	0					
ANR	367020	Identifier	by		366761	1					
ANR	367021	ReturnStatement	"return gdev_vector_write_polygon ( vdev , points , 4 , true , gx_path_type_fill ) ;"	1307:4:46435:46546	366761	14	True				
ANR	367022	CallExpression	"gdev_vector_write_polygon ( vdev , points , 4 , true , gx_path_type_fill )"		366761	0					
ANR	367023	Callee	gdev_vector_write_polygon		366761	0					
ANR	367024	Identifier	gdev_vector_write_polygon		366761	0					
ANR	367025	ArgumentList	vdev		366761	1					
ANR	367026	Argument	vdev		366761	0					
ANR	367027	Identifier	vdev		366761	0					
ANR	367028	Argument	points		366761	1					
ANR	367029	Identifier	points		366761	0					
ANR	367030	Argument	4		366761	2					
ANR	367031	PrimaryExpression	4		366761	0					
ANR	367032	Argument	true		366761	3					
ANR	367033	Identifier	true		366761	0					
ANR	367034	Argument	gx_path_type_fill		366761	4					
ANR	367035	Identifier	gx_path_type_fill		366761	0					
ANR	367036	ReturnType	int		366761	1					
ANR	367037	Identifier	gdev_vector_fill_parallelogram		366761	2					
ANR	367038	ParameterList	"gx_device * dev , fixed px , fixed py , fixed ax , fixed ay , fixed bx , fixed by , const gx_device_color * pdevc , gs_logical_operation_t lop"		366761	3					
ANR	367039	Parameter	gx_device * dev	1267:31:44986:45000	366761	0	True				
ANR	367040	ParameterType	gx_device *		366761	0					
ANR	367041	Identifier	dev		366761	1					
ANR	367042	Parameter	fixed px	1268:17:45020:45027	366761	1	True				
ANR	367043	ParameterType	fixed		366761	0					
ANR	367044	Identifier	px		366761	1					
ANR	367045	Parameter	fixed py	1268:27:45030:45037	366761	2	True				
ANR	367046	ParameterType	fixed		366761	0					
ANR	367047	Identifier	py		366761	1					
ANR	367048	Parameter	fixed ax	1268:37:45040:45047	366761	3	True				
ANR	367049	ParameterType	fixed		366761	0					
ANR	367050	Identifier	ax		366761	1					
ANR	367051	Parameter	fixed ay	1268:47:45050:45057	366761	4	True				
ANR	367052	ParameterType	fixed		366761	0					
ANR	367053	Identifier	ay		366761	1					
ANR	367054	Parameter	fixed bx	1268:57:45060:45067	366761	5	True				
ANR	367055	ParameterType	fixed		366761	0					
ANR	367056	Identifier	bx		366761	1					
ANR	367057	Parameter	fixed by	1268:67:45070:45077	366761	6	True				
ANR	367058	ParameterType	fixed		366761	0					
ANR	367059	Identifier	by		366761	1					
ANR	367060	Parameter	const gx_device_color * pdevc	1269:18:45098:45126	366761	7	True				
ANR	367061	ParameterType	const gx_device_color *		366761	0					
ANR	367062	Identifier	pdevc		366761	1					
ANR	367063	Parameter	gs_logical_operation_t lop	1269:49:45129:45154	366761	8	True				
ANR	367064	ParameterType	gs_logical_operation_t		366761	0					
ANR	367065	Identifier	lop		366761	1					
ANR	367066	CFGEntryNode	ENTRY		366761		True				
ANR	367067	CFGExitNode	EXIT		366761		True				
ANR	367068	Symbol	vdev -> bbox_device		366761						
ANR	367069	Symbol	code		366761						
ANR	367070	Symbol	* dev_proc		366761						
ANR	367071	Symbol	pdevc		366761						
ANR	367072	Symbol	px		366761						
ANR	367073	Symbol	points [ 2 ] . x		366761						
ANR	367074	Symbol	py		366761						
ANR	367075	Symbol	lop		366761						
ANR	367076	Symbol	points		366761						
ANR	367077	Symbol	points [ 2 ] . y		366761						
ANR	367078	Symbol	vdev -> clip_path_id		366761						
ANR	367079	Symbol	dev		366761						
ANR	367080	Symbol	points [ 3 ] . y		366761						
ANR	367081	Symbol	points [ 3 ] . x		366761						
ANR	367082	Symbol	bx		366761						
ANR	367083	Symbol	"* dev_proc ( vdev -> bbox_device , fill_parallelogram )"		366761						
ANR	367084	Symbol	dev_proc		366761						
ANR	367085	Symbol	by		366761						
ANR	367086	Symbol	points [ 0 ] . y		366761						
ANR	367087	Symbol	points [ 0 ] . x		366761						
ANR	367088	Symbol	gdev_vector_write_polygon		366761						
ANR	367089	Symbol	NULL		366761						
ANR	367090	Symbol	pax		366761						
ANR	367091	Symbol	points [ 1 ] . y		366761						
ANR	367092	Symbol	points [ 1 ] . x		366761						
ANR	367093	Symbol	vdev		366761						
ANR	367094	Symbol	false		366761						
ANR	367095	Symbol	pay		366761						
ANR	367096	Symbol	fill_parallelogram		366761						
ANR	367097	Symbol	* vdev		366761						
ANR	367098	Symbol	update_fill		366761						
ANR	367099	Symbol	gx_path_type_fill		366761						
ANR	367100	Symbol	ax		366761						
ANR	367101	Symbol	need_color_reset		366761						
ANR	367102	Symbol	ay		366761						
ANR	367103	Symbol	vdev -> no_clip_path_id		366761						
ANR	367104	Symbol	true		366761						
ANR	367105	Symbol	gx_default_fill_parallelogram		366761						
ANR	367106	Symbol	gdev_vector_update_clip_path		366761						
ANR	367107	Symbol	* points		366761						
ANR	367108	Function	gdev_vector_fill_triangle	1311:0:46551:47610							
ANR	367109	FunctionDef	"gdev_vector_fill_triangle (gx_device * dev , fixed px , fixed py , fixed ax , fixed ay , fixed bx , fixed by , const gx_device_color * pdevc , gs_logical_operation_t lop)"		367108	0					
ANR	367110	CompoundStatement		1315:0:46752:47610	367108	0					
ANR	367111	IdentifierDeclStatement	"int code = update_fill ( vdev , NULL , pdevc , lop ) ;"	1316:4:46758:46804	367108	0	True				
ANR	367112	IdentifierDecl	"code = update_fill ( vdev , NULL , pdevc , lop )"		367108	0					
ANR	367113	IdentifierDeclType	int		367108	0					
ANR	367114	Identifier	code		367108	1					
ANR	367115	AssignmentExpression	"code = update_fill ( vdev , NULL , pdevc , lop )"		367108	2		=			
ANR	367116	Identifier	code		367108	0					
ANR	367117	CallExpression	"update_fill ( vdev , NULL , pdevc , lop )"		367108	1					
ANR	367118	Callee	update_fill		367108	0					
ANR	367119	Identifier	update_fill		367108	0					
ANR	367120	ArgumentList	vdev		367108	1					
ANR	367121	Argument	vdev		367108	0					
ANR	367122	Identifier	vdev		367108	0					
ANR	367123	Argument	NULL		367108	1					
ANR	367124	Identifier	NULL		367108	0					
ANR	367125	Argument	pdevc		367108	2					
ANR	367126	Identifier	pdevc		367108	0					
ANR	367127	Argument	lop		367108	3					
ANR	367128	Identifier	lop		367108	0					
ANR	367129	IdentifierDeclStatement	gs_fixed_point points [ 3 ] ;	1317:4:46810:46834	367108	1	True				
ANR	367130	IdentifierDecl	points [ 3 ]		367108	0					
ANR	367131	IdentifierDeclType	gs_fixed_point [ 3 ]		367108	0					
ANR	367132	Identifier	points		367108	1					
ANR	367133	PrimaryExpression	3		367108	2					
ANR	367134	IfStatement	if ( code < 0 )		367108	2					
ANR	367135	Condition	code < 0	1319:8:46845:46852	367108	0	True				
ANR	367136	RelationalExpression	code < 0		367108	0		<			
ANR	367137	Identifier	code		367108	0					
ANR	367138	PrimaryExpression	0		367108	1					
ANR	367139	ReturnStatement	"return gx_default_fill_triangle ( dev , px , py , ax , ay , bx , by , pdevc , lop ) ;"	1320:8:46863:46975	367108	1	True				
ANR	367140	CallExpression	"gx_default_fill_triangle ( dev , px , py , ax , ay , bx , by , pdevc , lop )"		367108	0					
ANR	367141	Callee	gx_default_fill_triangle		367108	0					
ANR	367142	Identifier	gx_default_fill_triangle		367108	0					
ANR	367143	ArgumentList	dev		367108	1					
ANR	367144	Argument	dev		367108	0					
ANR	367145	Identifier	dev		367108	0					
ANR	367146	Argument	px		367108	1					
ANR	367147	Identifier	px		367108	0					
ANR	367148	Argument	py		367108	2					
ANR	367149	Identifier	py		367108	0					
ANR	367150	Argument	ax		367108	3					
ANR	367151	Identifier	ax		367108	0					
ANR	367152	Argument	ay		367108	4					
ANR	367153	Identifier	ay		367108	0					
ANR	367154	Argument	bx		367108	5					
ANR	367155	Identifier	bx		367108	0					
ANR	367156	Argument	by		367108	6					
ANR	367157	Identifier	by		367108	0					
ANR	367158	Argument	pdevc		367108	7					
ANR	367159	Identifier	pdevc		367108	0					
ANR	367160	Argument	lop		367108	8					
ANR	367161	Identifier	lop		367108	0					
ANR	367162	ExpressionStatement	"code = gdev_vector_update_clip_path ( vdev , NULL )"	1323:4:47026:47073	367108	3	True				
ANR	367163	AssignmentExpression	"code = gdev_vector_update_clip_path ( vdev , NULL )"		367108	0		=			
ANR	367164	Identifier	code		367108	0					
ANR	367165	CallExpression	"gdev_vector_update_clip_path ( vdev , NULL )"		367108	1					
ANR	367166	Callee	gdev_vector_update_clip_path		367108	0					
ANR	367167	Identifier	gdev_vector_update_clip_path		367108	0					
ANR	367168	ArgumentList	vdev		367108	1					
ANR	367169	Argument	vdev		367108	0					
ANR	367170	Identifier	vdev		367108	0					
ANR	367171	Argument	NULL		367108	1					
ANR	367172	Identifier	NULL		367108	0					
ANR	367173	IfStatement	if ( code < 0 )		367108	4					
ANR	367174	Condition	code < 0	1324:8:47083:47090	367108	0	True				
ANR	367175	RelationalExpression	code < 0		367108	0		<			
ANR	367176	Identifier	code		367108	0					
ANR	367177	PrimaryExpression	0		367108	1					
ANR	367178	ReturnStatement	return code ;	1325:8:47101:47112	367108	1	True				
ANR	367179	Identifier	code		367108	0					
ANR	367180	IfStatement	if ( vdev -> bbox_device )		367108	5					
ANR	367181	Condition	vdev -> bbox_device	1326:8:47122:47138	367108	0	True				
ANR	367182	PtrMemberAccess	vdev -> bbox_device		367108	0					
ANR	367183	Identifier	vdev		367108	0					
ANR	367184	Identifier	bbox_device		367108	1					
ANR	367185	CompoundStatement		12:27:388:388	367108	1					
ANR	367186	ExpressionStatement	"code = ( * dev_proc ( vdev -> bbox_device , fill_triangle ) ) ( ( gx_device * ) vdev -> bbox_device , px , py , ax , ay , bx , by , pdevc , lop )"	1327:8:47151:47298	367108	0	True				
ANR	367187	AssignmentExpression	"code = ( * dev_proc ( vdev -> bbox_device , fill_triangle ) ) ( ( gx_device * ) vdev -> bbox_device , px , py , ax , ay , bx , by , pdevc , lop )"		367108	0		=			
ANR	367188	Identifier	code		367108	0					
ANR	367189	CallExpression	"( * dev_proc ( vdev -> bbox_device , fill_triangle ) ) ( ( gx_device * ) vdev -> bbox_device , px , py , ax , ay , bx , by , pdevc , lop )"		367108	1					
ANR	367190	Callee	"* dev_proc ( vdev -> bbox_device , fill_triangle )"		367108	0					
ANR	367191	UnaryOperationExpression	"* dev_proc ( vdev -> bbox_device , fill_triangle )"		367108	0					
ANR	367192	UnaryOperator	*		367108	0					
ANR	367193	CallExpression	"dev_proc ( vdev -> bbox_device , fill_triangle )"		367108	1					
ANR	367194	Callee	dev_proc		367108	0					
ANR	367195	Identifier	dev_proc		367108	0					
ANR	367196	ArgumentList	vdev -> bbox_device		367108	1					
ANR	367197	Argument	vdev -> bbox_device		367108	0					
ANR	367198	PtrMemberAccess	vdev -> bbox_device		367108	0					
ANR	367199	Identifier	vdev		367108	0					
ANR	367200	Identifier	bbox_device		367108	1					
ANR	367201	Argument	fill_triangle		367108	1					
ANR	367202	Identifier	fill_triangle		367108	0					
ANR	367203	ArgumentList	( gx_device * ) vdev -> bbox_device		367108	1					
ANR	367204	Argument	( gx_device * ) vdev -> bbox_device		367108	0					
ANR	367205	CastExpression	( gx_device * ) vdev -> bbox_device		367108	0					
ANR	367206	CastTarget	gx_device *		367108	0					
ANR	367207	PtrMemberAccess	vdev -> bbox_device		367108	1					
ANR	367208	Identifier	vdev		367108	0					
ANR	367209	Identifier	bbox_device		367108	1					
ANR	367210	Argument	px		367108	1					
ANR	367211	Identifier	px		367108	0					
ANR	367212	Argument	py		367108	2					
ANR	367213	Identifier	py		367108	0					
ANR	367214	Argument	ax		367108	3					
ANR	367215	Identifier	ax		367108	0					
ANR	367216	Argument	ay		367108	4					
ANR	367217	Identifier	ay		367108	0					
ANR	367218	Argument	bx		367108	5					
ANR	367219	Identifier	bx		367108	0					
ANR	367220	Argument	by		367108	6					
ANR	367221	Identifier	by		367108	0					
ANR	367222	Argument	pdevc		367108	7					
ANR	367223	Identifier	pdevc		367108	0					
ANR	367224	Argument	lop		367108	8					
ANR	367225	Identifier	lop		367108	0					
ANR	367226	IfStatement	if ( code < 0 )		367108	1					
ANR	367227	Condition	code < 0	1330:12:47312:47319	367108	0	True				
ANR	367228	RelationalExpression	code < 0		367108	0		<			
ANR	367229	Identifier	code		367108	0					
ANR	367230	PrimaryExpression	0		367108	1					
ANR	367231	ReturnStatement	return code ;	1331:12:47334:47345	367108	1	True				
ANR	367232	Identifier	code		367108	0					
ANR	367233	ExpressionStatement	"points [ 0 ] . x = px , points [ 0 ] . y = py"	1333:4:47357:47391	367108	6	True				
ANR	367234	Expression	"points [ 0 ] . x = px , points [ 0 ] . y = py"		367108	0					
ANR	367235	AssignmentExpression	points [ 0 ] . x = px		367108	0		=			
ANR	367236	MemberAccess	points [ 0 ] . x		367108	0					
ANR	367237	ArrayIndexing	points [ 0 ]		367108	0					
ANR	367238	Identifier	points		367108	0					
ANR	367239	PrimaryExpression	0		367108	1					
ANR	367240	Identifier	x		367108	1					
ANR	367241	Identifier	px		367108	1					
ANR	367242	AssignmentExpression	points [ 0 ] . y = py		367108	1		=			
ANR	367243	MemberAccess	points [ 0 ] . y		367108	0					
ANR	367244	ArrayIndexing	points [ 0 ]		367108	0					
ANR	367245	Identifier	points		367108	0					
ANR	367246	PrimaryExpression	0		367108	1					
ANR	367247	Identifier	y		367108	1					
ANR	367248	Identifier	py		367108	1					
ANR	367249	ExpressionStatement	"points [ 1 ] . x = px + ax , points [ 1 ] . y = py + ay"	1334:4:47397:47441	367108	7	True				
ANR	367250	Expression	"points [ 1 ] . x = px + ax , points [ 1 ] . y = py + ay"		367108	0					
ANR	367251	AssignmentExpression	points [ 1 ] . x = px + ax		367108	0		=			
ANR	367252	MemberAccess	points [ 1 ] . x		367108	0					
ANR	367253	ArrayIndexing	points [ 1 ]		367108	0					
ANR	367254	Identifier	points		367108	0					
ANR	367255	PrimaryExpression	1		367108	1					
ANR	367256	Identifier	x		367108	1					
ANR	367257	AdditiveExpression	px + ax		367108	1		+			
ANR	367258	Identifier	px		367108	0					
ANR	367259	Identifier	ax		367108	1					
ANR	367260	AssignmentExpression	points [ 1 ] . y = py + ay		367108	1		=			
ANR	367261	MemberAccess	points [ 1 ] . y		367108	0					
ANR	367262	ArrayIndexing	points [ 1 ]		367108	0					
ANR	367263	Identifier	points		367108	0					
ANR	367264	PrimaryExpression	1		367108	1					
ANR	367265	Identifier	y		367108	1					
ANR	367266	AdditiveExpression	py + ay		367108	1		+			
ANR	367267	Identifier	py		367108	0					
ANR	367268	Identifier	ay		367108	1					
ANR	367269	ExpressionStatement	"points [ 2 ] . x = px + bx , points [ 2 ] . y = py + by"	1335:4:47447:47491	367108	8	True				
ANR	367270	Expression	"points [ 2 ] . x = px + bx , points [ 2 ] . y = py + by"		367108	0					
ANR	367271	AssignmentExpression	points [ 2 ] . x = px + bx		367108	0		=			
ANR	367272	MemberAccess	points [ 2 ] . x		367108	0					
ANR	367273	ArrayIndexing	points [ 2 ]		367108	0					
ANR	367274	Identifier	points		367108	0					
ANR	367275	PrimaryExpression	2		367108	1					
ANR	367276	Identifier	x		367108	1					
ANR	367277	AdditiveExpression	px + bx		367108	1		+			
ANR	367278	Identifier	px		367108	0					
ANR	367279	Identifier	bx		367108	1					
ANR	367280	AssignmentExpression	points [ 2 ] . y = py + by		367108	1		=			
ANR	367281	MemberAccess	points [ 2 ] . y		367108	0					
ANR	367282	ArrayIndexing	points [ 2 ]		367108	0					
ANR	367283	Identifier	points		367108	0					
ANR	367284	PrimaryExpression	2		367108	1					
ANR	367285	Identifier	y		367108	1					
ANR	367286	AdditiveExpression	py + by		367108	1		+			
ANR	367287	Identifier	py		367108	0					
ANR	367288	Identifier	by		367108	1					
ANR	367289	ReturnStatement	"return gdev_vector_write_polygon ( vdev , points , 3 , true , gx_path_type_fill ) ;"	1336:4:47497:47608	367108	9	True				
ANR	367290	CallExpression	"gdev_vector_write_polygon ( vdev , points , 3 , true , gx_path_type_fill )"		367108	0					
ANR	367291	Callee	gdev_vector_write_polygon		367108	0					
ANR	367292	Identifier	gdev_vector_write_polygon		367108	0					
ANR	367293	ArgumentList	vdev		367108	1					
ANR	367294	Argument	vdev		367108	0					
ANR	367295	Identifier	vdev		367108	0					
ANR	367296	Argument	points		367108	1					
ANR	367297	Identifier	points		367108	0					
ANR	367298	Argument	3		367108	2					
ANR	367299	PrimaryExpression	3		367108	0					
ANR	367300	Argument	true		367108	3					
ANR	367301	Identifier	true		367108	0					
ANR	367302	Argument	gx_path_type_fill		367108	4					
ANR	367303	Identifier	gx_path_type_fill		367108	0					
ANR	367304	ReturnType	int		367108	1					
ANR	367305	Identifier	gdev_vector_fill_triangle		367108	2					
ANR	367306	ParameterList	"gx_device * dev , fixed px , fixed py , fixed ax , fixed ay , fixed bx , fixed by , const gx_device_color * pdevc , gs_logical_operation_t lop"		367108	3					
ANR	367307	Parameter	gx_device * dev	1312:26:46581:46595	367108	0	True				
ANR	367308	ParameterType	gx_device *		367108	0					
ANR	367309	Identifier	dev		367108	1					
ANR	367310	Parameter	fixed px	1313:17:46615:46622	367108	1	True				
ANR	367311	ParameterType	fixed		367108	0					
ANR	367312	Identifier	px		367108	1					
ANR	367313	Parameter	fixed py	1313:27:46625:46632	367108	2	True				
ANR	367314	ParameterType	fixed		367108	0					
ANR	367315	Identifier	py		367108	1					
ANR	367316	Parameter	fixed ax	1313:37:46635:46642	367108	3	True				
ANR	367317	ParameterType	fixed		367108	0					
ANR	367318	Identifier	ax		367108	1					
ANR	367319	Parameter	fixed ay	1313:47:46645:46652	367108	4	True				
ANR	367320	ParameterType	fixed		367108	0					
ANR	367321	Identifier	ay		367108	1					
ANR	367322	Parameter	fixed bx	1313:57:46655:46662	367108	5	True				
ANR	367323	ParameterType	fixed		367108	0					
ANR	367324	Identifier	bx		367108	1					
ANR	367325	Parameter	fixed by	1313:67:46665:46672	367108	6	True				
ANR	367326	ParameterType	fixed		367108	0					
ANR	367327	Identifier	by		367108	1					
ANR	367328	Parameter	const gx_device_color * pdevc	1314:18:46693:46721	367108	7	True				
ANR	367329	ParameterType	const gx_device_color *		367108	0					
ANR	367330	Identifier	pdevc		367108	1					
ANR	367331	Parameter	gs_logical_operation_t lop	1314:49:46724:46749	367108	8	True				
ANR	367332	ParameterType	gs_logical_operation_t		367108	0					
ANR	367333	Identifier	lop		367108	1					
ANR	367334	CFGEntryNode	ENTRY		367108		True				
ANR	367335	CFGExitNode	EXIT		367108		True				
ANR	367336	Symbol	vdev -> bbox_device		367108						
ANR	367337	Symbol	code		367108						
ANR	367338	Symbol	* dev_proc		367108						
ANR	367339	Symbol	pdevc		367108						
ANR	367340	Symbol	px		367108						
ANR	367341	Symbol	points [ 2 ] . x		367108						
ANR	367342	Symbol	py		367108						
ANR	367343	Symbol	lop		367108						
ANR	367344	Symbol	points		367108						
ANR	367345	Symbol	points [ 2 ] . y		367108						
ANR	367346	Symbol	dev		367108						
ANR	367347	Symbol	bx		367108						
ANR	367348	Symbol	dev_proc		367108						
ANR	367349	Symbol	by		367108						
ANR	367350	Symbol	points [ 0 ] . y		367108						
ANR	367351	Symbol	points [ 0 ] . x		367108						
ANR	367352	Symbol	gdev_vector_write_polygon		367108						
ANR	367353	Symbol	NULL		367108						
ANR	367354	Symbol	gx_default_fill_triangle		367108						
ANR	367355	Symbol	points [ 1 ] . y		367108						
ANR	367356	Symbol	points [ 1 ] . x		367108						
ANR	367357	Symbol	vdev		367108						
ANR	367358	Symbol	"* dev_proc ( vdev -> bbox_device , fill_triangle )"		367108						
ANR	367359	Symbol	* vdev		367108						
ANR	367360	Symbol	update_fill		367108						
ANR	367361	Symbol	gx_path_type_fill		367108						
ANR	367362	Symbol	ax		367108						
ANR	367363	Symbol	fill_triangle		367108						
ANR	367364	Symbol	ay		367108						
ANR	367365	Symbol	true		367108						
ANR	367366	Symbol	gdev_vector_update_clip_path		367108						
ANR	367367	Symbol	* points		367108						
ANR	367368	Function	gdev_vector_dev_spec_op	1340:0:47613:48035							
ANR	367369	FunctionDef	"gdev_vector_dev_spec_op (gx_device * pdev , int dev_spec_op , void * data , int size)"		367368	0					
ANR	367370	CompoundStatement		1342:0:47697:48035	367368	0					
ANR	367371	IfStatement	if ( dev_spec_op == gxdso_get_dev_param )		367368	0					
ANR	367372	Condition	dev_spec_op == gxdso_get_dev_param	1343:8:47707:47740	367368	0	True				
ANR	367373	EqualityExpression	dev_spec_op == gxdso_get_dev_param		367368	0		==			
ANR	367374	Identifier	dev_spec_op		367368	0					
ANR	367375	Identifier	gxdso_get_dev_param		367368	1					
ANR	367376	CompoundStatement		4:8:73:123	367368	1					
ANR	367377	IdentifierDeclStatement	int code ;	1344:8:47753:47761	367368	0	True				
ANR	367378	IdentifierDecl	code		367368	0					
ANR	367379	IdentifierDeclType	int		367368	0					
ANR	367380	Identifier	code		367368	1					
ANR	367381	IdentifierDeclStatement	dev_param_req_t * request = ( dev_param_req_t * ) data ;	1345:8:47771:47821	367368	1	True				
ANR	367382	IdentifierDecl	* request = ( dev_param_req_t * ) data		367368	0					
ANR	367383	IdentifierDeclType	dev_param_req_t *		367368	0					
ANR	367384	Identifier	request		367368	1					
ANR	367385	AssignmentExpression	* request = ( dev_param_req_t * ) data		367368	2		=			
ANR	367386	Identifier	request		367368	0					
ANR	367387	CastExpression	( dev_param_req_t * ) data		367368	1					
ANR	367388	CastTarget	dev_param_req_t *		367368	0					
ANR	367389	Identifier	data		367368	1					
ANR	367390	ExpressionStatement	"code = gdev_vector_get_param ( pdev , request -> Param , request -> list )"	1346:8:47831:47896	367368	2	True				
ANR	367391	AssignmentExpression	"code = gdev_vector_get_param ( pdev , request -> Param , request -> list )"		367368	0		=			
ANR	367392	Identifier	code		367368	0					
ANR	367393	CallExpression	"gdev_vector_get_param ( pdev , request -> Param , request -> list )"		367368	1					
ANR	367394	Callee	gdev_vector_get_param		367368	0					
ANR	367395	Identifier	gdev_vector_get_param		367368	0					
ANR	367396	ArgumentList	pdev		367368	1					
ANR	367397	Argument	pdev		367368	0					
ANR	367398	Identifier	pdev		367368	0					
ANR	367399	Argument	request -> Param		367368	1					
ANR	367400	PtrMemberAccess	request -> Param		367368	0					
ANR	367401	Identifier	request		367368	0					
ANR	367402	Identifier	Param		367368	1					
ANR	367403	Argument	request -> list		367368	2					
ANR	367404	PtrMemberAccess	request -> list		367368	0					
ANR	367405	Identifier	request		367368	0					
ANR	367406	Identifier	list		367368	1					
ANR	367407	IfStatement	if ( code != gs_error_undefined )		367368	3					
ANR	367408	Condition	code != gs_error_undefined	1347:12:47910:47935	367368	0	True				
ANR	367409	EqualityExpression	code != gs_error_undefined		367368	0		!=			
ANR	367410	Identifier	code		367368	0					
ANR	367411	Identifier	gs_error_undefined		367368	1					
ANR	367412	ReturnStatement	return code ;	1348:12:47950:47961	367368	1	True				
ANR	367413	Identifier	code		367368	0					
ANR	367414	ReturnStatement	"return gx_default_dev_spec_op ( pdev , dev_spec_op , data , size ) ;"	1350:4:47973:48033	367368	1	True				
ANR	367415	CallExpression	"gx_default_dev_spec_op ( pdev , dev_spec_op , data , size )"		367368	0					
ANR	367416	Callee	gx_default_dev_spec_op		367368	0					
ANR	367417	Identifier	gx_default_dev_spec_op		367368	0					
ANR	367418	ArgumentList	pdev		367368	1					
ANR	367419	Argument	pdev		367368	0					
ANR	367420	Identifier	pdev		367368	0					
ANR	367421	Argument	dev_spec_op		367368	1					
ANR	367422	Identifier	dev_spec_op		367368	0					
ANR	367423	Argument	data		367368	2					
ANR	367424	Identifier	data		367368	0					
ANR	367425	Argument	size		367368	3					
ANR	367426	Identifier	size		367368	0					
ANR	367427	ReturnType	int		367368	1					
ANR	367428	Identifier	gdev_vector_dev_spec_op		367368	2					
ANR	367429	ParameterList	"gx_device * pdev , int dev_spec_op , void * data , int size"		367368	3					
ANR	367430	Parameter	gx_device * pdev	1341:24:47641:47655	367368	0	True				
ANR	367431	ParameterType	gx_device *		367368	0					
ANR	367432	Identifier	pdev		367368	1					
ANR	367433	Parameter	int dev_spec_op	1341:41:47658:47672	367368	1	True				
ANR	367434	ParameterType	int		367368	0					
ANR	367435	Identifier	dev_spec_op		367368	1					
ANR	367436	Parameter	void * data	1341:58:47675:47684	367368	2	True				
ANR	367437	ParameterType	void *		367368	0					
ANR	367438	Identifier	data		367368	1					
ANR	367439	Parameter	int size	1341:70:47687:47694	367368	3	True				
ANR	367440	ParameterType	int		367368	0					
ANR	367441	Identifier	size		367368	1					
ANR	367442	CFGEntryNode	ENTRY		367368		True				
ANR	367443	CFGExitNode	EXIT		367368		True				
ANR	367444	Symbol	gdev_vector_get_param		367368						
ANR	367445	Symbol	request		367368						
ANR	367446	Symbol	code		367368						
ANR	367447	Symbol	data		367368						
ANR	367448	Symbol	dev_spec_op		367368						
ANR	367449	Symbol	gs_error_undefined		367368						
ANR	367450	Symbol	request -> list		367368						
ANR	367451	Symbol	pdev		367368						
ANR	367452	Symbol	request -> Param		367368						
ANR	367453	Symbol	size		367368						
ANR	367454	Symbol	* request		367368						
ANR	367455	Symbol	gx_default_dev_spec_op		367368						
ANR	367456	Symbol	gxdso_get_dev_param		367368						
