command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4857546	File	data/converged/CVE-2018-16863_ghostpdl/gdevxcf.c								
ANR	4857547	DeclStmt									
ANR	4857548	Decl							void	void *	gcmmhlink_t
ANR	4857549	DeclStmt									
ANR	4857550	Decl							void	void *	gcmmhprofile_t
ANR	4857551	DeclStmt									
ANR	4857552	Decl							const char	const char *	fixed_colorant_name
ANR	4857553	DeclStmt									
ANR	4857554	Decl							fixed_colorant_name	fixed_colorant_name [ ]	fixed_colorant_names_list
ANR	4857555	ClassDef	gs_separation_names_s	78:8:2185:2323							
ANR	4857556	DeclStmt									
ANR	4857557	Decl							int	int	num_names
ANR	4857558	DeclStmt									
ANR	4857559	Decl							const gs_param_string	const gs_param_string * [ GX_DEVICE_COLOR_MAX_COMPONENTS ]	names
ANR	4857560	DeclStmt									
ANR	4857561	Decl							gs_separation_names_s	gs_separation_names_s	gs_separation_names
ANR	4857562	ClassDef	<unnamed>	85:8:2458:2561							
ANR	4857563	DeclStmt									
ANR	4857564	Decl									xcf_color_model
ANR	4857565	ClassDef	xcf_device_s	95:8:2631:4151							
ANR	4857566	DeclStmt									
ANR	4857567	Decl							xcf_color_model	xcf_color_model	color_model
ANR	4857568	DeclStmt									
ANR	4857569	Decl							int	int	bitspercomponent
ANR	4857570	DeclStmt									
ANR	4857571	Decl							const fixed_colorant_names_list	const fixed_colorant_names_list *	std_colorant_names
ANR	4857572	DeclStmt									
ANR	4857573	Decl							int	int	num_std_colorant_names
ANR	4857574	DeclStmt									
ANR	4857575	Decl							gs_separation_names	gs_separation_names	separation_names
ANR	4857576	DeclStmt									
ANR	4857577	Decl							gs_separation_names	gs_separation_names	separation_order
ANR	4857578	DeclStmt									
ANR	4857579	Decl							char	char [ 256 ]	profile_rgb_fn
ANR	4857580	DeclStmt									
ANR	4857581	Decl							cmm_profile_t	cmm_profile_t *	rgb_profile
ANR	4857582	DeclStmt									
ANR	4857583	Decl							gcmmhlink_t	gcmmhlink_t	rgb_icc_link
ANR	4857584	DeclStmt									
ANR	4857585	Decl							char	char [ 256 ]	profile_cmyk_fn
ANR	4857586	DeclStmt									
ANR	4857587	Decl							cmm_profile_t	cmm_profile_t *	cmyk_profile
ANR	4857588	DeclStmt									
ANR	4857589	Decl							gcmmhlink_t	gcmmhlink_t	cmyk_icc_link
ANR	4857590	DeclStmt									
ANR	4857591	Decl							char	char [ 256 ]	profile_out_fn
ANR	4857592	DeclStmt									
ANR	4857593	Decl							cmm_profile_t	cmm_profile_t *	output_profile
ANR	4857594	DeclStmt									
ANR	4857595	Decl							gcmmhlink_t	gcmmhlink_t	output_icc_link
ANR	4857596	DeclStmt									
ANR	4857597	Decl							xcf_device_s	xcf_device_s	xcf_device
ANR	4857598	DeclStmt									
ANR	4857599	Decl							const fixed_colorant_names_list	const fixed_colorant_names_list	DeviceGrayComponents
ANR	4857600	DeclStmt									
ANR	4857601	Decl							const fixed_colorant_names_list	const fixed_colorant_names_list	DeviceRGBComponents
ANR	4857602	DeclStmt									
ANR	4857603	Decl							const fixed_colorant_names_list	const fixed_colorant_names_list	DeviceCMYKComponents
ANR	4857604	DeclStmt									
ANR	4857605	Decl							const gx_device_procs	const gx_device_procs	spot_rgb_procs
ANR	4857606	DeclStmt									
ANR	4857607	Decl							const xcf_device	const xcf_device	gs_xcf_device
ANR	4857608	DeclStmt									
ANR	4857609	Decl							const gx_device_procs	const gx_device_procs	spot_cmyk_procs
ANR	4857610	DeclStmt									
ANR	4857611	Decl							const xcf_device	const xcf_device	gs_xcfcmyk_device
ANR	4857612	Function	gray_cs_to_spotrgb_cm	285:0:9424:9761							
ANR	4857613	FunctionDef	"gray_cs_to_spotrgb_cm (gx_device * dev , frac gray , frac out [ ])"		4857612	0					
ANR	4857614	CompoundStatement		287:0:9498:9761	4857612	0					
ANR	4857615	IdentifierDeclStatement	int i = ( ( xcf_device * ) dev ) -> separation_names . num_names ;	289:4:9596:9651	4857612	0	True				
ANR	4857616	IdentifierDecl	i = ( ( xcf_device * ) dev ) -> separation_names . num_names		4857612	0					
ANR	4857617	IdentifierDeclType	int		4857612	0					
ANR	4857618	Identifier	i		4857612	1					
ANR	4857619	AssignmentExpression	i = ( ( xcf_device * ) dev ) -> separation_names . num_names		4857612	2		=			
ANR	4857620	Identifier	i		4857612	0					
ANR	4857621	MemberAccess	( ( xcf_device * ) dev ) -> separation_names . num_names		4857612	1					
ANR	4857622	PtrMemberAccess	( ( xcf_device * ) dev ) -> separation_names		4857612	0					
ANR	4857623	CastExpression	( xcf_device * ) dev		4857612	0					
ANR	4857624	CastTarget	xcf_device *		4857612	0					
ANR	4857625	Identifier	dev		4857612	1					
ANR	4857626	Identifier	separation_names		4857612	1					
ANR	4857627	Identifier	num_names		4857612	1					
ANR	4857628	ExpressionStatement	out [ 0 ] = out [ 1 ] = out [ 2 ] = gray	291:4:9658:9689	4857612	1	True				
ANR	4857629	AssignmentExpression	out [ 0 ] = out [ 1 ] = out [ 2 ] = gray		4857612	0		=			
ANR	4857630	ArrayIndexing	out [ 0 ]		4857612	0					
ANR	4857631	Identifier	out		4857612	0					
ANR	4857632	PrimaryExpression	0		4857612	1					
ANR	4857633	AssignmentExpression	out [ 1 ] = out [ 2 ] = gray		4857612	1		=			
ANR	4857634	ArrayIndexing	out [ 1 ]		4857612	0					
ANR	4857635	Identifier	out		4857612	0					
ANR	4857636	PrimaryExpression	1		4857612	1					
ANR	4857637	AssignmentExpression	out [ 2 ] = gray		4857612	1		=			
ANR	4857638	ArrayIndexing	out [ 2 ]		4857612	0					
ANR	4857639	Identifier	out		4857612	0					
ANR	4857640	PrimaryExpression	2		4857612	1					
ANR	4857641	Identifier	gray		4857612	1					
ANR	4857642	ForStatement	for ( ; i > 0 ; i -- )		4857612	2					
ANR	4857643	Condition	i > 0	292:10:9701:9703	4857612	0	True				
ANR	4857644	RelationalExpression	i > 0		4857612	0		>			
ANR	4857645	Identifier	i		4857612	0					
ANR	4857646	PrimaryExpression	0		4857612	1					
ANR	4857647	PostIncDecOperationExpression	i --	292:15:9706:9708	4857612	1	True				
ANR	4857648	Identifier	i		4857612	0					
ANR	4857649	IncDec	--		4857612	1					
ANR	4857650	ExpressionStatement	out [ 2 + i ] = 0	293:8:9745:9759	4857612	2	True				
ANR	4857651	AssignmentExpression	out [ 2 + i ] = 0		4857612	0		=			
ANR	4857652	ArrayIndexing	out [ 2 + i ]		4857612	0					
ANR	4857653	Identifier	out		4857612	0					
ANR	4857654	AdditiveExpression	2 + i		4857612	1		+			
ANR	4857655	PrimaryExpression	2		4857612	0					
ANR	4857656	Identifier	i		4857612	1					
ANR	4857657	PrimaryExpression	0		4857612	1					
ANR	4857658	ReturnType	static void		4857612	1					
ANR	4857659	Identifier	gray_cs_to_spotrgb_cm		4857612	2					
ANR	4857660	ParameterList	"gx_device * dev , frac gray , frac out [ ]"		4857612	3					
ANR	4857661	Parameter	gx_device * dev	286:22:9458:9472	4857612	0	True				
ANR	4857662	ParameterType	gx_device *		4857612	0					
ANR	4857663	Identifier	dev		4857612	1					
ANR	4857664	Parameter	frac gray	286:39:9475:9483	4857612	1	True				
ANR	4857665	ParameterType	frac		4857612	0					
ANR	4857666	Identifier	gray		4857612	1					
ANR	4857667	Parameter	frac out [ ]	286:50:9486:9495	4857612	2	True				
ANR	4857668	ParameterType	frac [ ]		4857612	0					
ANR	4857669	Identifier	out		4857612	1					
ANR	4857670	CFGEntryNode	ENTRY		4857612		True				
ANR	4857671	CFGExitNode	EXIT		4857612		True				
ANR	4857672	Symbol	* dev		4857612						
ANR	4857673	Symbol	gray		4857612						
ANR	4857674	Symbol	* i		4857612						
ANR	4857675	Symbol	dev		4857612						
ANR	4857676	Symbol	( ( xcf_device * ) dev ) -> separation_names . num_names		4857612						
ANR	4857677	Symbol	* out		4857612						
ANR	4857678	Symbol	i		4857612						
ANR	4857679	Symbol	( ( xcf_device * ) dev ) -> separation_names		4857612						
ANR	4857680	Symbol	out		4857612						
ANR	4857681	Function	rgb_cs_to_spotrgb_cm	296:0:9764:10180							
ANR	4857682	FunctionDef	"rgb_cs_to_spotrgb_cm (gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ])"		4857681	0					
ANR	4857683	CompoundStatement		299:0:9906:10180	4857681	0					
ANR	4857684	IdentifierDeclStatement	int i = ( ( xcf_device * ) dev ) -> separation_names . num_names ;	301:4:10004:10059	4857681	0	True				
ANR	4857685	IdentifierDecl	i = ( ( xcf_device * ) dev ) -> separation_names . num_names		4857681	0					
ANR	4857686	IdentifierDeclType	int		4857681	0					
ANR	4857687	Identifier	i		4857681	1					
ANR	4857688	AssignmentExpression	i = ( ( xcf_device * ) dev ) -> separation_names . num_names		4857681	2		=			
ANR	4857689	Identifier	i		4857681	0					
ANR	4857690	MemberAccess	( ( xcf_device * ) dev ) -> separation_names . num_names		4857681	1					
ANR	4857691	PtrMemberAccess	( ( xcf_device * ) dev ) -> separation_names		4857681	0					
ANR	4857692	CastExpression	( xcf_device * ) dev		4857681	0					
ANR	4857693	CastTarget	xcf_device *		4857681	0					
ANR	4857694	Identifier	dev		4857681	1					
ANR	4857695	Identifier	separation_names		4857681	1					
ANR	4857696	Identifier	num_names		4857681	1					
ANR	4857697	ExpressionStatement	out [ 0 ] = r	303:4:10066:10076	4857681	1	True				
ANR	4857698	AssignmentExpression	out [ 0 ] = r		4857681	0		=			
ANR	4857699	ArrayIndexing	out [ 0 ]		4857681	0					
ANR	4857700	Identifier	out		4857681	0					
ANR	4857701	PrimaryExpression	0		4857681	1					
ANR	4857702	Identifier	r		4857681	1					
ANR	4857703	ExpressionStatement	out [ 1 ] = g	304:4:10082:10092	4857681	2	True				
ANR	4857704	AssignmentExpression	out [ 1 ] = g		4857681	0		=			
ANR	4857705	ArrayIndexing	out [ 1 ]		4857681	0					
ANR	4857706	Identifier	out		4857681	0					
ANR	4857707	PrimaryExpression	1		4857681	1					
ANR	4857708	Identifier	g		4857681	1					
ANR	4857709	ExpressionStatement	out [ 2 ] = b	305:4:10098:10108	4857681	3	True				
ANR	4857710	AssignmentExpression	out [ 2 ] = b		4857681	0		=			
ANR	4857711	ArrayIndexing	out [ 2 ]		4857681	0					
ANR	4857712	Identifier	out		4857681	0					
ANR	4857713	PrimaryExpression	2		4857681	1					
ANR	4857714	Identifier	b		4857681	1					
ANR	4857715	ForStatement	for ( ; i > 0 ; i -- )		4857681	4					
ANR	4857716	Condition	i > 0	306:10:10120:10122	4857681	0	True				
ANR	4857717	RelationalExpression	i > 0		4857681	0		>			
ANR	4857718	Identifier	i		4857681	0					
ANR	4857719	PrimaryExpression	0		4857681	1					
ANR	4857720	PostIncDecOperationExpression	i --	306:15:10125:10127	4857681	1	True				
ANR	4857721	Identifier	i		4857681	0					
ANR	4857722	IncDec	--		4857681	1					
ANR	4857723	ExpressionStatement	out [ 2 + i ] = 0	307:8:10164:10178	4857681	2	True				
ANR	4857724	AssignmentExpression	out [ 2 + i ] = 0		4857681	0		=			
ANR	4857725	ArrayIndexing	out [ 2 + i ]		4857681	0					
ANR	4857726	Identifier	out		4857681	0					
ANR	4857727	AdditiveExpression	2 + i		4857681	1		+			
ANR	4857728	PrimaryExpression	2		4857681	0					
ANR	4857729	Identifier	i		4857681	1					
ANR	4857730	PrimaryExpression	0		4857681	1					
ANR	4857731	ReturnType	static void		4857681	1					
ANR	4857732	Identifier	rgb_cs_to_spotrgb_cm		4857681	2					
ANR	4857733	ParameterList	"gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ]"		4857681	3					
ANR	4857734	Parameter	gx_device * dev	297:21:9797:9811	4857681	0	True				
ANR	4857735	ParameterType	gx_device *		4857681	0					
ANR	4857736	Identifier	dev		4857681	1					
ANR	4857737	Parameter	const gs_gstate * pgs	297:38:9814:9833	4857681	1	True				
ANR	4857738	ParameterType	const gs_gstate *		4857681	0					
ANR	4857739	Identifier	pgs		4857681	1					
ANR	4857740	Parameter	frac r	298:34:9870:9875	4857681	2	True				
ANR	4857741	ParameterType	frac		4857681	0					
ANR	4857742	Identifier	r		4857681	1					
ANR	4857743	Parameter	frac g	298:42:9878:9883	4857681	3	True				
ANR	4857744	ParameterType	frac		4857681	0					
ANR	4857745	Identifier	g		4857681	1					
ANR	4857746	Parameter	frac b	298:50:9886:9891	4857681	4	True				
ANR	4857747	ParameterType	frac		4857681	0					
ANR	4857748	Identifier	b		4857681	1					
ANR	4857749	Parameter	frac out [ ]	298:58:9894:9903	4857681	5	True				
ANR	4857750	ParameterType	frac [ ]		4857681	0					
ANR	4857751	Identifier	out		4857681	1					
ANR	4857752	CFGEntryNode	ENTRY		4857681		True				
ANR	4857753	CFGExitNode	EXIT		4857681		True				
ANR	4857754	Symbol	* dev		4857681						
ANR	4857755	Symbol	r		4857681						
ANR	4857756	Symbol	b		4857681						
ANR	4857757	Symbol	* i		4857681						
ANR	4857758	Symbol	dev		4857681						
ANR	4857759	Symbol	g		4857681						
ANR	4857760	Symbol	( ( xcf_device * ) dev ) -> separation_names . num_names		4857681						
ANR	4857761	Symbol	* out		4857681						
ANR	4857762	Symbol	i		4857681						
ANR	4857763	Symbol	( ( xcf_device * ) dev ) -> separation_names		4857681						
ANR	4857764	Symbol	pgs		4857681						
ANR	4857765	Symbol	out		4857681						
ANR	4857766	Function	cmyk_cs_to_spotrgb_cm	310:0:10183:10563							
ANR	4857767	FunctionDef	"cmyk_cs_to_spotrgb_cm (gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ])"		4857766	0					
ANR	4857768	CompoundStatement		312:0:10278:10563	4857766	0					
ANR	4857769	IdentifierDeclStatement	int i = ( ( xcf_device * ) dev ) -> separation_names . num_names ;	314:4:10376:10431	4857766	0	True				
ANR	4857770	IdentifierDecl	i = ( ( xcf_device * ) dev ) -> separation_names . num_names		4857766	0					
ANR	4857771	IdentifierDeclType	int		4857766	0					
ANR	4857772	Identifier	i		4857766	1					
ANR	4857773	AssignmentExpression	i = ( ( xcf_device * ) dev ) -> separation_names . num_names		4857766	2		=			
ANR	4857774	Identifier	i		4857766	0					
ANR	4857775	MemberAccess	( ( xcf_device * ) dev ) -> separation_names . num_names		4857766	1					
ANR	4857776	PtrMemberAccess	( ( xcf_device * ) dev ) -> separation_names		4857766	0					
ANR	4857777	CastExpression	( xcf_device * ) dev		4857766	0					
ANR	4857778	CastTarget	xcf_device *		4857766	0					
ANR	4857779	Identifier	dev		4857766	1					
ANR	4857780	Identifier	separation_names		4857766	1					
ANR	4857781	Identifier	num_names		4857766	1					
ANR	4857782	ExpressionStatement	"color_cmyk_to_rgb ( c , m , y , k , NULL , out , dev -> memory )"	316:4:10438:10491	4857766	1	True				
ANR	4857783	CallExpression	"color_cmyk_to_rgb ( c , m , y , k , NULL , out , dev -> memory )"		4857766	0					
ANR	4857784	Callee	color_cmyk_to_rgb		4857766	0					
ANR	4857785	Identifier	color_cmyk_to_rgb		4857766	0					
ANR	4857786	ArgumentList	c		4857766	1					
ANR	4857787	Argument	c		4857766	0					
ANR	4857788	Identifier	c		4857766	0					
ANR	4857789	Argument	m		4857766	1					
ANR	4857790	Identifier	m		4857766	0					
ANR	4857791	Argument	y		4857766	2					
ANR	4857792	Identifier	y		4857766	0					
ANR	4857793	Argument	k		4857766	3					
ANR	4857794	Identifier	k		4857766	0					
ANR	4857795	Argument	NULL		4857766	4					
ANR	4857796	Identifier	NULL		4857766	0					
ANR	4857797	Argument	out		4857766	5					
ANR	4857798	Identifier	out		4857766	0					
ANR	4857799	Argument	dev -> memory		4857766	6					
ANR	4857800	PtrMemberAccess	dev -> memory		4857766	0					
ANR	4857801	Identifier	dev		4857766	0					
ANR	4857802	Identifier	memory		4857766	1					
ANR	4857803	ForStatement	for ( ; i > 0 ; i -- )		4857766	2					
ANR	4857804	Condition	i > 0	317:10:10503:10505	4857766	0	True				
ANR	4857805	RelationalExpression	i > 0		4857766	0		>			
ANR	4857806	Identifier	i		4857766	0					
ANR	4857807	PrimaryExpression	0		4857766	1					
ANR	4857808	PostIncDecOperationExpression	i --	317:15:10508:10510	4857766	1	True				
ANR	4857809	Identifier	i		4857766	0					
ANR	4857810	IncDec	--		4857766	1					
ANR	4857811	ExpressionStatement	out [ 2 + i ] = 0	318:8:10547:10561	4857766	2	True				
ANR	4857812	AssignmentExpression	out [ 2 + i ] = 0		4857766	0		=			
ANR	4857813	ArrayIndexing	out [ 2 + i ]		4857766	0					
ANR	4857814	Identifier	out		4857766	0					
ANR	4857815	AdditiveExpression	2 + i		4857766	1		+			
ANR	4857816	PrimaryExpression	2		4857766	0					
ANR	4857817	Identifier	i		4857766	1					
ANR	4857818	PrimaryExpression	0		4857766	1					
ANR	4857819	ReturnType	static void		4857766	1					
ANR	4857820	Identifier	cmyk_cs_to_spotrgb_cm		4857766	2					
ANR	4857821	ParameterList	"gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ]"		4857766	3					
ANR	4857822	Parameter	gx_device * dev	311:22:10217:10231	4857766	0	True				
ANR	4857823	ParameterType	gx_device *		4857766	0					
ANR	4857824	Identifier	dev		4857766	1					
ANR	4857825	Parameter	frac c	311:39:10234:10239	4857766	1	True				
ANR	4857826	ParameterType	frac		4857766	0					
ANR	4857827	Identifier	c		4857766	1					
ANR	4857828	Parameter	frac m	311:47:10242:10247	4857766	2	True				
ANR	4857829	ParameterType	frac		4857766	0					
ANR	4857830	Identifier	m		4857766	1					
ANR	4857831	Parameter	frac y	311:55:10250:10255	4857766	3	True				
ANR	4857832	ParameterType	frac		4857766	0					
ANR	4857833	Identifier	y		4857766	1					
ANR	4857834	Parameter	frac k	311:63:10258:10263	4857766	4	True				
ANR	4857835	ParameterType	frac		4857766	0					
ANR	4857836	Identifier	k		4857766	1					
ANR	4857837	Parameter	frac out [ ]	311:71:10266:10275	4857766	5	True				
ANR	4857838	ParameterType	frac [ ]		4857766	0					
ANR	4857839	Identifier	out		4857766	1					
ANR	4857840	CFGEntryNode	ENTRY		4857766		True				
ANR	4857841	CFGExitNode	EXIT		4857766		True				
ANR	4857842	Symbol	* dev		4857766						
ANR	4857843	Symbol	c		4857766						
ANR	4857844	Symbol	NULL		4857766						
ANR	4857845	Symbol	i		4857766						
ANR	4857846	Symbol	( ( xcf_device * ) dev ) -> separation_names		4857766						
ANR	4857847	Symbol	k		4857766						
ANR	4857848	Symbol	m		4857766						
ANR	4857849	Symbol	out		4857766						
ANR	4857850	Symbol	dev -> memory		4857766						
ANR	4857851	Symbol	* i		4857766						
ANR	4857852	Symbol	dev		4857766						
ANR	4857853	Symbol	( ( xcf_device * ) dev ) -> separation_names . num_names		4857766						
ANR	4857854	Symbol	* out		4857766						
ANR	4857855	Symbol	y		4857766						
ANR	4857856	Function	gray_cs_to_spotcmyk_cm	321:0:10566:10929							
ANR	4857857	FunctionDef	"gray_cs_to_spotcmyk_cm (gx_device * dev , frac gray , frac out [ ])"		4857856	0					
ANR	4857858	CompoundStatement		323:0:10641:10929	4857856	0					
ANR	4857859	IdentifierDeclStatement	int i = ( ( xcf_device * ) dev ) -> separation_names . num_names ;	325:4:10739:10794	4857856	0	True				
ANR	4857860	IdentifierDecl	i = ( ( xcf_device * ) dev ) -> separation_names . num_names		4857856	0					
ANR	4857861	IdentifierDeclType	int		4857856	0					
ANR	4857862	Identifier	i		4857856	1					
ANR	4857863	AssignmentExpression	i = ( ( xcf_device * ) dev ) -> separation_names . num_names		4857856	2		=			
ANR	4857864	Identifier	i		4857856	0					
ANR	4857865	MemberAccess	( ( xcf_device * ) dev ) -> separation_names . num_names		4857856	1					
ANR	4857866	PtrMemberAccess	( ( xcf_device * ) dev ) -> separation_names		4857856	0					
ANR	4857867	CastExpression	( xcf_device * ) dev		4857856	0					
ANR	4857868	CastTarget	xcf_device *		4857856	0					
ANR	4857869	Identifier	dev		4857856	1					
ANR	4857870	Identifier	separation_names		4857856	1					
ANR	4857871	Identifier	num_names		4857856	1					
ANR	4857872	ExpressionStatement	out [ 0 ] = out [ 1 ] = out [ 2 ] = 0	327:4:10801:10829	4857856	1	True				
ANR	4857873	AssignmentExpression	out [ 0 ] = out [ 1 ] = out [ 2 ] = 0		4857856	0		=			
ANR	4857874	ArrayIndexing	out [ 0 ]		4857856	0					
ANR	4857875	Identifier	out		4857856	0					
ANR	4857876	PrimaryExpression	0		4857856	1					
ANR	4857877	AssignmentExpression	out [ 1 ] = out [ 2 ] = 0		4857856	1		=			
ANR	4857878	ArrayIndexing	out [ 1 ]		4857856	0					
ANR	4857879	Identifier	out		4857856	0					
ANR	4857880	PrimaryExpression	1		4857856	1					
ANR	4857881	AssignmentExpression	out [ 2 ] = 0		4857856	1		=			
ANR	4857882	ArrayIndexing	out [ 2 ]		4857856	0					
ANR	4857883	Identifier	out		4857856	0					
ANR	4857884	PrimaryExpression	2		4857856	1					
ANR	4857885	PrimaryExpression	0		4857856	1					
ANR	4857886	ExpressionStatement	out [ 3 ] = frac_1 - gray	328:4:10835:10857	4857856	2	True				
ANR	4857887	AssignmentExpression	out [ 3 ] = frac_1 - gray		4857856	0		=			
ANR	4857888	ArrayIndexing	out [ 3 ]		4857856	0					
ANR	4857889	Identifier	out		4857856	0					
ANR	4857890	PrimaryExpression	3		4857856	1					
ANR	4857891	AdditiveExpression	frac_1 - gray		4857856	1		-			
ANR	4857892	Identifier	frac_1		4857856	0					
ANR	4857893	Identifier	gray		4857856	1					
ANR	4857894	ForStatement	for ( ; i > 0 ; i -- )		4857856	3					
ANR	4857895	Condition	i > 0	329:10:10869:10871	4857856	0	True				
ANR	4857896	RelationalExpression	i > 0		4857856	0		>			
ANR	4857897	Identifier	i		4857856	0					
ANR	4857898	PrimaryExpression	0		4857856	1					
ANR	4857899	PostIncDecOperationExpression	i --	329:15:10874:10876	4857856	1	True				
ANR	4857900	Identifier	i		4857856	0					
ANR	4857901	IncDec	--		4857856	1					
ANR	4857902	ExpressionStatement	out [ 3 + i ] = 0	330:8:10913:10927	4857856	2	True				
ANR	4857903	AssignmentExpression	out [ 3 + i ] = 0		4857856	0		=			
ANR	4857904	ArrayIndexing	out [ 3 + i ]		4857856	0					
ANR	4857905	Identifier	out		4857856	0					
ANR	4857906	AdditiveExpression	3 + i		4857856	1		+			
ANR	4857907	PrimaryExpression	3		4857856	0					
ANR	4857908	Identifier	i		4857856	1					
ANR	4857909	PrimaryExpression	0		4857856	1					
ANR	4857910	ReturnType	static void		4857856	1					
ANR	4857911	Identifier	gray_cs_to_spotcmyk_cm		4857856	2					
ANR	4857912	ParameterList	"gx_device * dev , frac gray , frac out [ ]"		4857856	3					
ANR	4857913	Parameter	gx_device * dev	322:23:10601:10615	4857856	0	True				
ANR	4857914	ParameterType	gx_device *		4857856	0					
ANR	4857915	Identifier	dev		4857856	1					
ANR	4857916	Parameter	frac gray	322:40:10618:10626	4857856	1	True				
ANR	4857917	ParameterType	frac		4857856	0					
ANR	4857918	Identifier	gray		4857856	1					
ANR	4857919	Parameter	frac out [ ]	322:51:10629:10638	4857856	2	True				
ANR	4857920	ParameterType	frac [ ]		4857856	0					
ANR	4857921	Identifier	out		4857856	1					
ANR	4857922	CFGEntryNode	ENTRY		4857856		True				
ANR	4857923	CFGExitNode	EXIT		4857856		True				
ANR	4857924	Symbol	* dev		4857856						
ANR	4857925	Symbol	frac_1		4857856						
ANR	4857926	Symbol	gray		4857856						
ANR	4857927	Symbol	* i		4857856						
ANR	4857928	Symbol	dev		4857856						
ANR	4857929	Symbol	( ( xcf_device * ) dev ) -> separation_names . num_names		4857856						
ANR	4857930	Symbol	* out		4857856						
ANR	4857931	Symbol	i		4857856						
ANR	4857932	Symbol	( ( xcf_device * ) dev ) -> separation_names		4857856						
ANR	4857933	Symbol	out		4857856						
ANR	4857934	Function	rgb_cs_to_spotcmyk_cm	333:0:10932:11402							
ANR	4857935	FunctionDef	"rgb_cs_to_spotcmyk_cm (gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ])"		4857934	0					
ANR	4857936	CompoundStatement		336:0:11076:11402	4857934	0					
ANR	4857937	IdentifierDeclStatement	xcf_device * xdev = ( xcf_device * ) dev ;	338:4:11174:11210	4857934	0	True				
ANR	4857938	IdentifierDecl	* xdev = ( xcf_device * ) dev		4857934	0					
ANR	4857939	IdentifierDeclType	xcf_device *		4857934	0					
ANR	4857940	Identifier	xdev		4857934	1					
ANR	4857941	AssignmentExpression	* xdev = ( xcf_device * ) dev		4857934	2		=			
ANR	4857942	Identifier	xdev		4857934	0					
ANR	4857943	CastExpression	( xcf_device * ) dev		4857934	1					
ANR	4857944	CastTarget	xcf_device *		4857934	0					
ANR	4857945	Identifier	dev		4857934	1					
ANR	4857946	IdentifierDeclStatement	int n = xdev -> separation_names . num_names ;	339:4:11216:11256	4857934	1	True				
ANR	4857947	IdentifierDecl	n = xdev -> separation_names . num_names		4857934	0					
ANR	4857948	IdentifierDeclType	int		4857934	0					
ANR	4857949	Identifier	n		4857934	1					
ANR	4857950	AssignmentExpression	n = xdev -> separation_names . num_names		4857934	2		=			
ANR	4857951	Identifier	n		4857934	0					
ANR	4857952	MemberAccess	xdev -> separation_names . num_names		4857934	1					
ANR	4857953	PtrMemberAccess	xdev -> separation_names		4857934	0					
ANR	4857954	Identifier	xdev		4857934	0					
ANR	4857955	Identifier	separation_names		4857934	1					
ANR	4857956	Identifier	num_names		4857934	1					
ANR	4857957	IdentifierDeclStatement	int i ;	340:4:11262:11267	4857934	2	True				
ANR	4857958	IdentifierDecl	i		4857934	0					
ANR	4857959	IdentifierDeclType	int		4857934	0					
ANR	4857960	Identifier	i		4857934	1					
ANR	4857961	ExpressionStatement	"color_rgb_to_cmyk ( r , g , b , pgs , out , dev -> memory )"	342:4:11274:11323	4857934	3	True				
ANR	4857962	CallExpression	"color_rgb_to_cmyk ( r , g , b , pgs , out , dev -> memory )"		4857934	0					
ANR	4857963	Callee	color_rgb_to_cmyk		4857934	0					
ANR	4857964	Identifier	color_rgb_to_cmyk		4857934	0					
ANR	4857965	ArgumentList	r		4857934	1					
ANR	4857966	Argument	r		4857934	0					
ANR	4857967	Identifier	r		4857934	0					
ANR	4857968	Argument	g		4857934	1					
ANR	4857969	Identifier	g		4857934	0					
ANR	4857970	Argument	b		4857934	2					
ANR	4857971	Identifier	b		4857934	0					
ANR	4857972	Argument	pgs		4857934	3					
ANR	4857973	Identifier	pgs		4857934	0					
ANR	4857974	Argument	out		4857934	4					
ANR	4857975	Identifier	out		4857934	0					
ANR	4857976	Argument	dev -> memory		4857934	5					
ANR	4857977	PtrMemberAccess	dev -> memory		4857934	0					
ANR	4857978	Identifier	dev		4857934	0					
ANR	4857979	Identifier	memory		4857934	1					
ANR	4857980	ForStatement	for ( i = 0 ; i < n ; i ++ )		4857934	4					
ANR	4857981	ForInit	i = 0 ;	343:8:11333:11338	4857934	0	True				
ANR	4857982	AssignmentExpression	i = 0		4857934	0		=			
ANR	4857983	Identifier	i		4857934	0					
ANR	4857984	PrimaryExpression	0		4857934	1					
ANR	4857985	Condition	i < n	343:15:11340:11344	4857934	1	True				
ANR	4857986	RelationalExpression	i < n		4857934	0		<			
ANR	4857987	Identifier	i		4857934	0					
ANR	4857988	Identifier	n		4857934	1					
ANR	4857989	PostIncDecOperationExpression	i ++	343:22:11347:11349	4857934	2	True				
ANR	4857990	Identifier	i		4857934	0					
ANR	4857991	IncDec	++		4857934	1					
ANR	4857992	ExpressionStatement	out [ 4 + i ] = 0	344:8:11386:11400	4857934	3	True				
ANR	4857993	AssignmentExpression	out [ 4 + i ] = 0		4857934	0		=			
ANR	4857994	ArrayIndexing	out [ 4 + i ]		4857934	0					
ANR	4857995	Identifier	out		4857934	0					
ANR	4857996	AdditiveExpression	4 + i		4857934	1		+			
ANR	4857997	PrimaryExpression	4		4857934	0					
ANR	4857998	Identifier	i		4857934	1					
ANR	4857999	PrimaryExpression	0		4857934	1					
ANR	4858000	ReturnType	static void		4857934	1					
ANR	4858001	Identifier	rgb_cs_to_spotcmyk_cm		4857934	2					
ANR	4858002	ParameterList	"gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ]"		4857934	3					
ANR	4858003	Parameter	gx_device * dev	334:22:10966:10980	4857934	0	True				
ANR	4858004	ParameterType	gx_device *		4857934	0					
ANR	4858005	Identifier	dev		4857934	1					
ANR	4858006	Parameter	const gs_gstate * pgs	334:39:10983:11002	4857934	1	True				
ANR	4858007	ParameterType	const gs_gstate *		4857934	0					
ANR	4858008	Identifier	pgs		4857934	1					
ANR	4858009	Parameter	frac r	335:35:11040:11045	4857934	2	True				
ANR	4858010	ParameterType	frac		4857934	0					
ANR	4858011	Identifier	r		4857934	1					
ANR	4858012	Parameter	frac g	335:43:11048:11053	4857934	3	True				
ANR	4858013	ParameterType	frac		4857934	0					
ANR	4858014	Identifier	g		4857934	1					
ANR	4858015	Parameter	frac b	335:51:11056:11061	4857934	4	True				
ANR	4858016	ParameterType	frac		4857934	0					
ANR	4858017	Identifier	b		4857934	1					
ANR	4858018	Parameter	frac out [ ]	335:59:11064:11073	4857934	5	True				
ANR	4858019	ParameterType	frac [ ]		4857934	0					
ANR	4858020	Identifier	out		4857934	1					
ANR	4858021	CFGEntryNode	ENTRY		4857934		True				
ANR	4858022	CFGExitNode	EXIT		4857934		True				
ANR	4858023	Symbol	xdev -> separation_names . num_names		4857934						
ANR	4858024	Symbol	* dev		4857934						
ANR	4858025	Symbol	b		4857934						
ANR	4858026	Symbol	xdev		4857934						
ANR	4858027	Symbol	g		4857934						
ANR	4858028	Symbol	i		4857934						
ANR	4858029	Symbol	n		4857934						
ANR	4858030	Symbol	out		4857934						
ANR	4858031	Symbol	r		4857934						
ANR	4858032	Symbol	dev -> memory		4857934						
ANR	4858033	Symbol	* i		4857934						
ANR	4858034	Symbol	dev		4857934						
ANR	4858035	Symbol	* xdev		4857934						
ANR	4858036	Symbol	* out		4857934						
ANR	4858037	Symbol	pgs		4857934						
ANR	4858038	Symbol	xdev -> separation_names		4857934						
ANR	4858039	Function	cmyk_cs_to_spotcmyk_cm	347:0:11405:11836							
ANR	4858040	FunctionDef	"cmyk_cs_to_spotcmyk_cm (gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ])"		4858039	0					
ANR	4858041	CompoundStatement		349:0:11501:11836	4858039	0					
ANR	4858042	IdentifierDeclStatement	xcf_device * xdev = ( xcf_device * ) dev ;	351:4:11599:11635	4858039	0	True				
ANR	4858043	IdentifierDecl	* xdev = ( xcf_device * ) dev		4858039	0					
ANR	4858044	IdentifierDeclType	xcf_device *		4858039	0					
ANR	4858045	Identifier	xdev		4858039	1					
ANR	4858046	AssignmentExpression	* xdev = ( xcf_device * ) dev		4858039	2		=			
ANR	4858047	Identifier	xdev		4858039	0					
ANR	4858048	CastExpression	( xcf_device * ) dev		4858039	1					
ANR	4858049	CastTarget	xcf_device *		4858039	0					
ANR	4858050	Identifier	dev		4858039	1					
ANR	4858051	IdentifierDeclStatement	int n = xdev -> separation_names . num_names ;	352:4:11641:11681	4858039	1	True				
ANR	4858052	IdentifierDecl	n = xdev -> separation_names . num_names		4858039	0					
ANR	4858053	IdentifierDeclType	int		4858039	0					
ANR	4858054	Identifier	n		4858039	1					
ANR	4858055	AssignmentExpression	n = xdev -> separation_names . num_names		4858039	2		=			
ANR	4858056	Identifier	n		4858039	0					
ANR	4858057	MemberAccess	xdev -> separation_names . num_names		4858039	1					
ANR	4858058	PtrMemberAccess	xdev -> separation_names		4858039	0					
ANR	4858059	Identifier	xdev		4858039	0					
ANR	4858060	Identifier	separation_names		4858039	1					
ANR	4858061	Identifier	num_names		4858039	1					
ANR	4858062	IdentifierDeclStatement	int i ;	353:4:11687:11692	4858039	2	True				
ANR	4858063	IdentifierDecl	i		4858039	0					
ANR	4858064	IdentifierDeclType	int		4858039	0					
ANR	4858065	Identifier	i		4858039	1					
ANR	4858066	ExpressionStatement	out [ 0 ] = c	355:4:11699:11709	4858039	3	True				
ANR	4858067	AssignmentExpression	out [ 0 ] = c		4858039	0		=			
ANR	4858068	ArrayIndexing	out [ 0 ]		4858039	0					
ANR	4858069	Identifier	out		4858039	0					
ANR	4858070	PrimaryExpression	0		4858039	1					
ANR	4858071	Identifier	c		4858039	1					
ANR	4858072	ExpressionStatement	out [ 1 ] = m	356:4:11715:11725	4858039	4	True				
ANR	4858073	AssignmentExpression	out [ 1 ] = m		4858039	0		=			
ANR	4858074	ArrayIndexing	out [ 1 ]		4858039	0					
ANR	4858075	Identifier	out		4858039	0					
ANR	4858076	PrimaryExpression	1		4858039	1					
ANR	4858077	Identifier	m		4858039	1					
ANR	4858078	ExpressionStatement	out [ 2 ] = y	357:4:11731:11741	4858039	5	True				
ANR	4858079	AssignmentExpression	out [ 2 ] = y		4858039	0		=			
ANR	4858080	ArrayIndexing	out [ 2 ]		4858039	0					
ANR	4858081	Identifier	out		4858039	0					
ANR	4858082	PrimaryExpression	2		4858039	1					
ANR	4858083	Identifier	y		4858039	1					
ANR	4858084	ExpressionStatement	out [ 3 ] = k	358:4:11747:11757	4858039	6	True				
ANR	4858085	AssignmentExpression	out [ 3 ] = k		4858039	0		=			
ANR	4858086	ArrayIndexing	out [ 3 ]		4858039	0					
ANR	4858087	Identifier	out		4858039	0					
ANR	4858088	PrimaryExpression	3		4858039	1					
ANR	4858089	Identifier	k		4858039	1					
ANR	4858090	ForStatement	for ( i = 0 ; i < n ; i ++ )		4858039	7					
ANR	4858091	ForInit	i = 0 ;	359:8:11767:11772	4858039	0	True				
ANR	4858092	AssignmentExpression	i = 0		4858039	0		=			
ANR	4858093	Identifier	i		4858039	0					
ANR	4858094	PrimaryExpression	0		4858039	1					
ANR	4858095	Condition	i < n	359:15:11774:11778	4858039	1	True				
ANR	4858096	RelationalExpression	i < n		4858039	0		<			
ANR	4858097	Identifier	i		4858039	0					
ANR	4858098	Identifier	n		4858039	1					
ANR	4858099	PostIncDecOperationExpression	i ++	359:22:11781:11783	4858039	2	True				
ANR	4858100	Identifier	i		4858039	0					
ANR	4858101	IncDec	++		4858039	1					
ANR	4858102	ExpressionStatement	out [ 4 + i ] = 0	360:8:11820:11834	4858039	3	True				
ANR	4858103	AssignmentExpression	out [ 4 + i ] = 0		4858039	0		=			
ANR	4858104	ArrayIndexing	out [ 4 + i ]		4858039	0					
ANR	4858105	Identifier	out		4858039	0					
ANR	4858106	AdditiveExpression	4 + i		4858039	1		+			
ANR	4858107	PrimaryExpression	4		4858039	0					
ANR	4858108	Identifier	i		4858039	1					
ANR	4858109	PrimaryExpression	0		4858039	1					
ANR	4858110	ReturnType	static void		4858039	1					
ANR	4858111	Identifier	cmyk_cs_to_spotcmyk_cm		4858039	2					
ANR	4858112	ParameterList	"gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ]"		4858039	3					
ANR	4858113	Parameter	gx_device * dev	348:23:11440:11454	4858039	0	True				
ANR	4858114	ParameterType	gx_device *		4858039	0					
ANR	4858115	Identifier	dev		4858039	1					
ANR	4858116	Parameter	frac c	348:40:11457:11462	4858039	1	True				
ANR	4858117	ParameterType	frac		4858039	0					
ANR	4858118	Identifier	c		4858039	1					
ANR	4858119	Parameter	frac m	348:48:11465:11470	4858039	2	True				
ANR	4858120	ParameterType	frac		4858039	0					
ANR	4858121	Identifier	m		4858039	1					
ANR	4858122	Parameter	frac y	348:56:11473:11478	4858039	3	True				
ANR	4858123	ParameterType	frac		4858039	0					
ANR	4858124	Identifier	y		4858039	1					
ANR	4858125	Parameter	frac k	348:64:11481:11486	4858039	4	True				
ANR	4858126	ParameterType	frac		4858039	0					
ANR	4858127	Identifier	k		4858039	1					
ANR	4858128	Parameter	frac out [ ]	348:72:11489:11498	4858039	5	True				
ANR	4858129	ParameterType	frac [ ]		4858039	0					
ANR	4858130	Identifier	out		4858039	1					
ANR	4858131	CFGEntryNode	ENTRY		4858039		True				
ANR	4858132	CFGExitNode	EXIT		4858039		True				
ANR	4858133	Symbol	xdev -> separation_names . num_names		4858039						
ANR	4858134	Symbol	c		4858039						
ANR	4858135	Symbol	xdev		4858039						
ANR	4858136	Symbol	i		4858039						
ANR	4858137	Symbol	k		4858039						
ANR	4858138	Symbol	m		4858039						
ANR	4858139	Symbol	n		4858039						
ANR	4858140	Symbol	out		4858039						
ANR	4858141	Symbol	* i		4858039						
ANR	4858142	Symbol	dev		4858039						
ANR	4858143	Symbol	* xdev		4858039						
ANR	4858144	Symbol	* out		4858039						
ANR	4858145	Symbol	y		4858039						
ANR	4858146	Symbol	xdev -> separation_names		4858039						
ANR	4858147	Function	cmyk_cs_to_spotn_cm	363:0:11839:12877							
ANR	4858148	FunctionDef	"cmyk_cs_to_spotn_cm (gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ])"		4858147	0					
ANR	4858149	CompoundStatement		365:0:11932:12877	4858147	0					
ANR	4858150	IdentifierDeclStatement	xcf_device * xdev = ( xcf_device * ) dev ;	367:4:12030:12066	4858147	0	True				
ANR	4858151	IdentifierDecl	* xdev = ( xcf_device * ) dev		4858147	0					
ANR	4858152	IdentifierDeclType	xcf_device *		4858147	0					
ANR	4858153	Identifier	xdev		4858147	1					
ANR	4858154	AssignmentExpression	* xdev = ( xcf_device * ) dev		4858147	2		=			
ANR	4858155	Identifier	xdev		4858147	0					
ANR	4858156	CastExpression	( xcf_device * ) dev		4858147	1					
ANR	4858157	CastTarget	xcf_device *		4858147	0					
ANR	4858158	Identifier	dev		4858147	1					
ANR	4858159	IdentifierDeclStatement	int n = xdev -> separation_names . num_names ;	368:4:12072:12112	4858147	1	True				
ANR	4858160	IdentifierDecl	n = xdev -> separation_names . num_names		4858147	0					
ANR	4858161	IdentifierDeclType	int		4858147	0					
ANR	4858162	Identifier	n		4858147	1					
ANR	4858163	AssignmentExpression	n = xdev -> separation_names . num_names		4858147	2		=			
ANR	4858164	Identifier	n		4858147	0					
ANR	4858165	MemberAccess	xdev -> separation_names . num_names		4858147	1					
ANR	4858166	PtrMemberAccess	xdev -> separation_names		4858147	0					
ANR	4858167	Identifier	xdev		4858147	0					
ANR	4858168	Identifier	separation_names		4858147	1					
ANR	4858169	Identifier	num_names		4858147	1					
ANR	4858170	IdentifierDeclStatement	gcmmhlink_t link = xdev -> cmyk_icc_link ;	370:4:12119:12157	4858147	2	True				
ANR	4858171	IdentifierDecl	link = xdev -> cmyk_icc_link		4858147	0					
ANR	4858172	IdentifierDeclType	gcmmhlink_t		4858147	0					
ANR	4858173	Identifier	link		4858147	1					
ANR	4858174	AssignmentExpression	link = xdev -> cmyk_icc_link		4858147	2		=			
ANR	4858175	Identifier	link		4858147	0					
ANR	4858176	PtrMemberAccess	xdev -> cmyk_icc_link		4858147	1					
ANR	4858177	Identifier	xdev		4858147	0					
ANR	4858178	Identifier	cmyk_icc_link		4858147	1					
ANR	4858179	IdentifierDeclStatement	int i ;	371:4:12163:12168	4858147	3	True				
ANR	4858180	IdentifierDecl	i		4858147	0					
ANR	4858181	IdentifierDeclType	int		4858147	0					
ANR	4858182	Identifier	i		4858147	1					
ANR	4858183	IfStatement	if ( link != NULL )		4858147	4					
ANR	4858184	Condition	link != NULL	373:8:12179:12190	4858147	0	True				
ANR	4858185	EqualityExpression	link != NULL		4858147	0		!=			
ANR	4858186	Identifier	link		4858147	0					
ANR	4858187	Identifier	NULL		4858147	1					
ANR	4858188	CompoundStatement		12:8:338:382	4858147	1					
ANR	4858189	IdentifierDeclStatement	unsigned short in [ 4 ] ;	374:8:12203:12223	4858147	0	True				
ANR	4858190	IdentifierDecl	in [ 4 ]		4858147	0					
ANR	4858191	IdentifierDeclType	unsigned short [ 4 ]		4858147	0					
ANR	4858192	Identifier	in		4858147	1					
ANR	4858193	PrimaryExpression	4		4858147	2					
ANR	4858194	IdentifierDeclStatement	unsigned short tmp [ MAX_CHAN ] ;	375:8:12233:12261	4858147	1	True				
ANR	4858195	IdentifierDecl	tmp [ MAX_CHAN ]		4858147	0					
ANR	4858196	IdentifierDeclType	unsigned short [ MAX_CHAN ]		4858147	0					
ANR	4858197	Identifier	tmp		4858147	1					
ANR	4858198	Identifier	MAX_CHAN		4858147	2					
ANR	4858199	IdentifierDeclStatement	int outn = xdev -> cmyk_profile -> num_comps_out ;	376:8:12271:12315	4858147	2	True				
ANR	4858200	IdentifierDecl	outn = xdev -> cmyk_profile -> num_comps_out		4858147	0					
ANR	4858201	IdentifierDeclType	int		4858147	0					
ANR	4858202	Identifier	outn		4858147	1					
ANR	4858203	AssignmentExpression	outn = xdev -> cmyk_profile -> num_comps_out		4858147	2		=			
ANR	4858204	Identifier	outn		4858147	0					
ANR	4858205	PtrMemberAccess	xdev -> cmyk_profile -> num_comps_out		4858147	1					
ANR	4858206	PtrMemberAccess	xdev -> cmyk_profile		4858147	0					
ANR	4858207	Identifier	xdev		4858147	0					
ANR	4858208	Identifier	cmyk_profile		4858147	1					
ANR	4858209	Identifier	num_comps_out		4858147	1					
ANR	4858210	ExpressionStatement	in [ 0 ] = frac2ushort ( c )	378:8:12326:12348	4858147	3	True				
ANR	4858211	AssignmentExpression	in [ 0 ] = frac2ushort ( c )		4858147	0		=			
ANR	4858212	ArrayIndexing	in [ 0 ]		4858147	0					
ANR	4858213	Identifier	in		4858147	0					
ANR	4858214	PrimaryExpression	0		4858147	1					
ANR	4858215	CallExpression	frac2ushort ( c )		4858147	1					
ANR	4858216	Callee	frac2ushort		4858147	0					
ANR	4858217	Identifier	frac2ushort		4858147	0					
ANR	4858218	ArgumentList	c		4858147	1					
ANR	4858219	Argument	c		4858147	0					
ANR	4858220	Identifier	c		4858147	0					
ANR	4858221	ExpressionStatement	in [ 1 ] = frac2ushort ( m )	379:8:12358:12380	4858147	4	True				
ANR	4858222	AssignmentExpression	in [ 1 ] = frac2ushort ( m )		4858147	0		=			
ANR	4858223	ArrayIndexing	in [ 1 ]		4858147	0					
ANR	4858224	Identifier	in		4858147	0					
ANR	4858225	PrimaryExpression	1		4858147	1					
ANR	4858226	CallExpression	frac2ushort ( m )		4858147	1					
ANR	4858227	Callee	frac2ushort		4858147	0					
ANR	4858228	Identifier	frac2ushort		4858147	0					
ANR	4858229	ArgumentList	m		4858147	1					
ANR	4858230	Argument	m		4858147	0					
ANR	4858231	Identifier	m		4858147	0					
ANR	4858232	ExpressionStatement	in [ 2 ] = frac2ushort ( y )	380:8:12390:12412	4858147	5	True				
ANR	4858233	AssignmentExpression	in [ 2 ] = frac2ushort ( y )		4858147	0		=			
ANR	4858234	ArrayIndexing	in [ 2 ]		4858147	0					
ANR	4858235	Identifier	in		4858147	0					
ANR	4858236	PrimaryExpression	2		4858147	1					
ANR	4858237	CallExpression	frac2ushort ( y )		4858147	1					
ANR	4858238	Callee	frac2ushort		4858147	0					
ANR	4858239	Identifier	frac2ushort		4858147	0					
ANR	4858240	ArgumentList	y		4858147	1					
ANR	4858241	Argument	y		4858147	0					
ANR	4858242	Identifier	y		4858147	0					
ANR	4858243	ExpressionStatement	in [ 3 ] = frac2ushort ( k )	381:8:12422:12444	4858147	6	True				
ANR	4858244	AssignmentExpression	in [ 3 ] = frac2ushort ( k )		4858147	0		=			
ANR	4858245	ArrayIndexing	in [ 3 ]		4858147	0					
ANR	4858246	Identifier	in		4858147	0					
ANR	4858247	PrimaryExpression	3		4858147	1					
ANR	4858248	CallExpression	frac2ushort ( k )		4858147	1					
ANR	4858249	Callee	frac2ushort		4858147	0					
ANR	4858250	Identifier	frac2ushort		4858147	0					
ANR	4858251	ArgumentList	k		4858147	1					
ANR	4858252	Argument	k		4858147	0					
ANR	4858253	Identifier	k		4858147	0					
ANR	4858254	ExpressionStatement	"gscms_transform_color ( dev , link , & ( in [ 0 ] ) , & ( tmp [ 0 ] ) , 2 )"	383:8:12455:12511	4858147	7	True				
ANR	4858255	CallExpression	"gscms_transform_color ( dev , link , & ( in [ 0 ] ) , & ( tmp [ 0 ] ) , 2 )"		4858147	0					
ANR	4858256	Callee	gscms_transform_color		4858147	0					
ANR	4858257	Identifier	gscms_transform_color		4858147	0					
ANR	4858258	ArgumentList	dev		4858147	1					
ANR	4858259	Argument	dev		4858147	0					
ANR	4858260	Identifier	dev		4858147	0					
ANR	4858261	Argument	link		4858147	1					
ANR	4858262	Identifier	link		4858147	0					
ANR	4858263	Argument	& ( in [ 0 ] )		4858147	2					
ANR	4858264	UnaryOperationExpression	& ( in [ 0 ] )		4858147	0					
ANR	4858265	UnaryOperator	&		4858147	0					
ANR	4858266	ArrayIndexing	in [ 0 ]		4858147	1					
ANR	4858267	Identifier	in		4858147	0					
ANR	4858268	PrimaryExpression	0		4858147	1					
ANR	4858269	Argument	& ( tmp [ 0 ] )		4858147	3					
ANR	4858270	UnaryOperationExpression	& ( tmp [ 0 ] )		4858147	0					
ANR	4858271	UnaryOperator	&		4858147	0					
ANR	4858272	ArrayIndexing	tmp [ 0 ]		4858147	1					
ANR	4858273	Identifier	tmp		4858147	0					
ANR	4858274	PrimaryExpression	0		4858147	1					
ANR	4858275	Argument	2		4858147	4					
ANR	4858276	PrimaryExpression	2		4858147	0					
ANR	4858277	ForStatement	for ( i = 0 ; i < outn ; i ++ )		4858147	8					
ANR	4858278	ForInit	i = 0 ;	384:13:12526:12531	4858147	0	True				
ANR	4858279	AssignmentExpression	i = 0		4858147	0		=			
ANR	4858280	Identifier	i		4858147	0					
ANR	4858281	PrimaryExpression	0		4858147	1					
ANR	4858282	Condition	i < outn	384:20:12533:12540	4858147	1	True				
ANR	4858283	RelationalExpression	i < outn		4858147	0		<			
ANR	4858284	Identifier	i		4858147	0					
ANR	4858285	Identifier	outn		4858147	1					
ANR	4858286	PostIncDecOperationExpression	i ++	384:30:12543:12545	4858147	2	True				
ANR	4858287	Identifier	i		4858147	0					
ANR	4858288	IncDec	++		4858147	1					
ANR	4858289	ExpressionStatement	out [ i ] = ushort2frac ( tmp [ i ] )	385:12:12560:12588	4858147	3	True				
ANR	4858290	AssignmentExpression	out [ i ] = ushort2frac ( tmp [ i ] )		4858147	0		=			
ANR	4858291	ArrayIndexing	out [ i ]		4858147	0					
ANR	4858292	Identifier	out		4858147	0					
ANR	4858293	Identifier	i		4858147	1					
ANR	4858294	CallExpression	ushort2frac ( tmp [ i ] )		4858147	1					
ANR	4858295	Callee	ushort2frac		4858147	0					
ANR	4858296	Identifier	ushort2frac		4858147	0					
ANR	4858297	ArgumentList	tmp [ i ]		4858147	1					
ANR	4858298	Argument	tmp [ i ]		4858147	0					
ANR	4858299	ArrayIndexing	tmp [ i ]		4858147	0					
ANR	4858300	Identifier	tmp		4858147	0					
ANR	4858301	Identifier	i		4858147	1					
ANR	4858302	ForStatement	for ( ; i < n + 4 ; i ++ )		4858147	9					
ANR	4858303	Condition	i < n + 4	386:15:12605:12613	4858147	0	True				
ANR	4858304	RelationalExpression	i < n + 4		4858147	0		<			
ANR	4858305	Identifier	i		4858147	0					
ANR	4858306	AdditiveExpression	n + 4		4858147	1		+			
ANR	4858307	Identifier	n		4858147	0					
ANR	4858308	PrimaryExpression	4		4858147	1					
ANR	4858309	PostIncDecOperationExpression	i ++	386:26:12616:12618	4858147	1	True				
ANR	4858310	Identifier	i		4858147	0					
ANR	4858311	IncDec	++		4858147	1					
ANR	4858312	ExpressionStatement	out [ i ] = 0	387:12:12633:12643	4858147	2	True				
ANR	4858313	AssignmentExpression	out [ i ] = 0		4858147	0		=			
ANR	4858314	ArrayIndexing	out [ i ]		4858147	0					
ANR	4858315	Identifier	out		4858147	0					
ANR	4858316	Identifier	i		4858147	1					
ANR	4858317	PrimaryExpression	0		4858147	1					
ANR	4858318	ElseStatement	else		4858147	0					
ANR	4858319	CompoundStatement		25:11:724:724	4858147	0					
ANR	4858320	ExpressionStatement	out [ 0 ] = c	391:8:12714:12724	4858147	0	True				
ANR	4858321	AssignmentExpression	out [ 0 ] = c		4858147	0		=			
ANR	4858322	ArrayIndexing	out [ 0 ]		4858147	0					
ANR	4858323	Identifier	out		4858147	0					
ANR	4858324	PrimaryExpression	0		4858147	1					
ANR	4858325	Identifier	c		4858147	1					
ANR	4858326	ExpressionStatement	out [ 1 ] = m	392:8:12734:12744	4858147	1	True				
ANR	4858327	AssignmentExpression	out [ 1 ] = m		4858147	0		=			
ANR	4858328	ArrayIndexing	out [ 1 ]		4858147	0					
ANR	4858329	Identifier	out		4858147	0					
ANR	4858330	PrimaryExpression	1		4858147	1					
ANR	4858331	Identifier	m		4858147	1					
ANR	4858332	ExpressionStatement	out [ 2 ] = y	393:8:12754:12764	4858147	2	True				
ANR	4858333	AssignmentExpression	out [ 2 ] = y		4858147	0		=			
ANR	4858334	ArrayIndexing	out [ 2 ]		4858147	0					
ANR	4858335	Identifier	out		4858147	0					
ANR	4858336	PrimaryExpression	2		4858147	1					
ANR	4858337	Identifier	y		4858147	1					
ANR	4858338	ExpressionStatement	out [ 3 ] = k	394:8:12774:12784	4858147	3	True				
ANR	4858339	AssignmentExpression	out [ 3 ] = k		4858147	0		=			
ANR	4858340	ArrayIndexing	out [ 3 ]		4858147	0					
ANR	4858341	Identifier	out		4858147	0					
ANR	4858342	PrimaryExpression	3		4858147	1					
ANR	4858343	Identifier	k		4858147	1					
ANR	4858344	ForStatement	for ( i = 0 ; i < n ; i ++ )		4858147	4					
ANR	4858345	ForInit	i = 0 ;	395:12:12798:12803	4858147	0	True				
ANR	4858346	AssignmentExpression	i = 0		4858147	0		=			
ANR	4858347	Identifier	i		4858147	0					
ANR	4858348	PrimaryExpression	0		4858147	1					
ANR	4858349	Condition	i < n	395:19:12805:12809	4858147	1	True				
ANR	4858350	RelationalExpression	i < n		4858147	0		<			
ANR	4858351	Identifier	i		4858147	0					
ANR	4858352	Identifier	n		4858147	1					
ANR	4858353	PostIncDecOperationExpression	i ++	395:26:12812:12814	4858147	2	True				
ANR	4858354	Identifier	i		4858147	0					
ANR	4858355	IncDec	++		4858147	1					
ANR	4858356	ExpressionStatement	out [ 4 + i ] = 0	396:12:12855:12869	4858147	3	True				
ANR	4858357	AssignmentExpression	out [ 4 + i ] = 0		4858147	0		=			
ANR	4858358	ArrayIndexing	out [ 4 + i ]		4858147	0					
ANR	4858359	Identifier	out		4858147	0					
ANR	4858360	AdditiveExpression	4 + i		4858147	1		+			
ANR	4858361	PrimaryExpression	4		4858147	0					
ANR	4858362	Identifier	i		4858147	1					
ANR	4858363	PrimaryExpression	0		4858147	1					
ANR	4858364	ReturnType	static void		4858147	1					
ANR	4858365	Identifier	cmyk_cs_to_spotn_cm		4858147	2					
ANR	4858366	ParameterList	"gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ]"		4858147	3					
ANR	4858367	Parameter	gx_device * dev	364:20:11871:11885	4858147	0	True				
ANR	4858368	ParameterType	gx_device *		4858147	0					
ANR	4858369	Identifier	dev		4858147	1					
ANR	4858370	Parameter	frac c	364:37:11888:11893	4858147	1	True				
ANR	4858371	ParameterType	frac		4858147	0					
ANR	4858372	Identifier	c		4858147	1					
ANR	4858373	Parameter	frac m	364:45:11896:11901	4858147	2	True				
ANR	4858374	ParameterType	frac		4858147	0					
ANR	4858375	Identifier	m		4858147	1					
ANR	4858376	Parameter	frac y	364:53:11904:11909	4858147	3	True				
ANR	4858377	ParameterType	frac		4858147	0					
ANR	4858378	Identifier	y		4858147	1					
ANR	4858379	Parameter	frac k	364:61:11912:11917	4858147	4	True				
ANR	4858380	ParameterType	frac		4858147	0					
ANR	4858381	Identifier	k		4858147	1					
ANR	4858382	Parameter	frac out [ ]	364:69:11920:11929	4858147	5	True				
ANR	4858383	ParameterType	frac [ ]		4858147	0					
ANR	4858384	Identifier	out		4858147	1					
ANR	4858385	CFGEntryNode	ENTRY		4858147		True				
ANR	4858386	CFGExitNode	EXIT		4858147		True				
ANR	4858387	Symbol	xdev -> separation_names . num_names		4858147						
ANR	4858388	Symbol	* tmp		4858147						
ANR	4858389	Symbol	ushort2frac		4858147						
ANR	4858390	Symbol	link		4858147						
ANR	4858391	Symbol	* in		4858147						
ANR	4858392	Symbol	out		4858147						
ANR	4858393	Symbol	frac2ushort		4858147						
ANR	4858394	Symbol	* xdev -> cmyk_profile		4858147						
ANR	4858395	Symbol	dev		4858147						
ANR	4858396	Symbol	outn		4858147						
ANR	4858397	Symbol	tmp		4858147						
ANR	4858398	Symbol	* * xdev		4858147						
ANR	4858399	Symbol	xdev -> cmyk_icc_link		4858147						
ANR	4858400	Symbol	xdev -> cmyk_profile -> num_comps_out		4858147						
ANR	4858401	Symbol	xdev -> cmyk_profile		4858147						
ANR	4858402	Symbol	c		4858147						
ANR	4858403	Symbol	NULL		4858147						
ANR	4858404	Symbol	xdev		4858147						
ANR	4858405	Symbol	in		4858147						
ANR	4858406	Symbol	i		4858147						
ANR	4858407	Symbol	k		4858147						
ANR	4858408	Symbol	m		4858147						
ANR	4858409	Symbol	n		4858147						
ANR	4858410	Symbol	* i		4858147						
ANR	4858411	Symbol	* xdev		4858147						
ANR	4858412	Symbol	* out		4858147						
ANR	4858413	Symbol	y		4858147						
ANR	4858414	Symbol	xdev -> separation_names		4858147						
ANR	4858415	Function	gray_cs_to_spotn_cm	400:0:12880:13106							
ANR	4858416	FunctionDef	"gray_cs_to_spotn_cm (gx_device * dev , frac gray , frac out [ ])"		4858415	0					
ANR	4858417	CompoundStatement		402:0:12952:13106	4858415	0					
ANR	4858418	ExpressionStatement	"cmyk_cs_to_spotn_cm ( dev , 0 , 0 , 0 , frac_1 - gray , out )"	405:4:13051:13104	4858415	0	True				
ANR	4858419	CallExpression	"cmyk_cs_to_spotn_cm ( dev , 0 , 0 , 0 , frac_1 - gray , out )"		4858415	0					
ANR	4858420	Callee	cmyk_cs_to_spotn_cm		4858415	0					
ANR	4858421	Identifier	cmyk_cs_to_spotn_cm		4858415	0					
ANR	4858422	ArgumentList	dev		4858415	1					
ANR	4858423	Argument	dev		4858415	0					
ANR	4858424	Identifier	dev		4858415	0					
ANR	4858425	Argument	0		4858415	1					
ANR	4858426	PrimaryExpression	0		4858415	0					
ANR	4858427	Argument	0		4858415	2					
ANR	4858428	PrimaryExpression	0		4858415	0					
ANR	4858429	Argument	0		4858415	3					
ANR	4858430	PrimaryExpression	0		4858415	0					
ANR	4858431	Argument	frac_1 - gray		4858415	4					
ANR	4858432	AdditiveExpression	frac_1 - gray		4858415	0		-			
ANR	4858433	Identifier	frac_1		4858415	0					
ANR	4858434	Identifier	gray		4858415	1					
ANR	4858435	Argument	out		4858415	5					
ANR	4858436	Identifier	out		4858415	0					
ANR	4858437	ReturnType	static void		4858415	1					
ANR	4858438	Identifier	gray_cs_to_spotn_cm		4858415	2					
ANR	4858439	ParameterList	"gx_device * dev , frac gray , frac out [ ]"		4858415	3					
ANR	4858440	Parameter	gx_device * dev	401:20:12912:12926	4858415	0	True				
ANR	4858441	ParameterType	gx_device *		4858415	0					
ANR	4858442	Identifier	dev		4858415	1					
ANR	4858443	Parameter	frac gray	401:37:12929:12937	4858415	1	True				
ANR	4858444	ParameterType	frac		4858415	0					
ANR	4858445	Identifier	gray		4858415	1					
ANR	4858446	Parameter	frac out [ ]	401:48:12940:12949	4858415	2	True				
ANR	4858447	ParameterType	frac [ ]		4858415	0					
ANR	4858448	Identifier	out		4858415	1					
ANR	4858449	CFGEntryNode	ENTRY		4858415		True				
ANR	4858450	CFGExitNode	EXIT		4858415		True				
ANR	4858451	Symbol	frac_1		4858415						
ANR	4858452	Symbol	gray		4858415						
ANR	4858453	Symbol	dev		4858415						
ANR	4858454	Symbol	out		4858415						
ANR	4858455	Function	rgb_cs_to_spotn_cm	408:0:13109:14134							
ANR	4858456	FunctionDef	"rgb_cs_to_spotn_cm (gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ])"		4858455	0					
ANR	4858457	CompoundStatement		411:0:13250:14134	4858455	0					
ANR	4858458	IdentifierDeclStatement	xcf_device * xdev = ( xcf_device * ) dev ;	413:4:13348:13384	4858455	0	True				
ANR	4858459	IdentifierDecl	* xdev = ( xcf_device * ) dev		4858455	0					
ANR	4858460	IdentifierDeclType	xcf_device *		4858455	0					
ANR	4858461	Identifier	xdev		4858455	1					
ANR	4858462	AssignmentExpression	* xdev = ( xcf_device * ) dev		4858455	2		=			
ANR	4858463	Identifier	xdev		4858455	0					
ANR	4858464	CastExpression	( xcf_device * ) dev		4858455	1					
ANR	4858465	CastTarget	xcf_device *		4858455	0					
ANR	4858466	Identifier	dev		4858455	1					
ANR	4858467	IdentifierDeclStatement	int n = xdev -> separation_names . num_names ;	414:4:13390:13430	4858455	1	True				
ANR	4858468	IdentifierDecl	n = xdev -> separation_names . num_names		4858455	0					
ANR	4858469	IdentifierDeclType	int		4858455	0					
ANR	4858470	Identifier	n		4858455	1					
ANR	4858471	AssignmentExpression	n = xdev -> separation_names . num_names		4858455	2		=			
ANR	4858472	Identifier	n		4858455	0					
ANR	4858473	MemberAccess	xdev -> separation_names . num_names		4858455	1					
ANR	4858474	PtrMemberAccess	xdev -> separation_names		4858455	0					
ANR	4858475	Identifier	xdev		4858455	0					
ANR	4858476	Identifier	separation_names		4858455	1					
ANR	4858477	Identifier	num_names		4858455	1					
ANR	4858478	IdentifierDeclStatement	gcmmhlink_t link = xdev -> rgb_icc_link ;	415:4:13436:13473	4858455	2	True				
ANR	4858479	IdentifierDecl	link = xdev -> rgb_icc_link		4858455	0					
ANR	4858480	IdentifierDeclType	gcmmhlink_t		4858455	0					
ANR	4858481	Identifier	link		4858455	1					
ANR	4858482	AssignmentExpression	link = xdev -> rgb_icc_link		4858455	2		=			
ANR	4858483	Identifier	link		4858455	0					
ANR	4858484	PtrMemberAccess	xdev -> rgb_icc_link		4858455	1					
ANR	4858485	Identifier	xdev		4858455	0					
ANR	4858486	Identifier	rgb_icc_link		4858455	1					
ANR	4858487	IdentifierDeclStatement	int i ;	416:4:13479:13484	4858455	3	True				
ANR	4858488	IdentifierDecl	i		4858455	0					
ANR	4858489	IdentifierDeclType	int		4858455	0					
ANR	4858490	Identifier	i		4858455	1					
ANR	4858491	IfStatement	if ( link != NULL )		4858455	4					
ANR	4858492	Condition	link != NULL	418:8:13495:13506	4858455	0	True				
ANR	4858493	EqualityExpression	link != NULL		4858455	0		!=			
ANR	4858494	Identifier	link		4858455	0					
ANR	4858495	Identifier	NULL		4858455	1					
ANR	4858496	CompoundStatement		11:8:336:379	4858455	1					
ANR	4858497	IdentifierDeclStatement	unsigned short in [ 3 ] ;	419:8:13519:13539	4858455	0	True				
ANR	4858498	IdentifierDecl	in [ 3 ]		4858455	0					
ANR	4858499	IdentifierDeclType	unsigned short [ 3 ]		4858455	0					
ANR	4858500	Identifier	in		4858455	1					
ANR	4858501	PrimaryExpression	3		4858455	2					
ANR	4858502	IdentifierDeclStatement	unsigned short tmp [ MAX_CHAN ] ;	420:8:13549:13577	4858455	1	True				
ANR	4858503	IdentifierDecl	tmp [ MAX_CHAN ]		4858455	0					
ANR	4858504	IdentifierDeclType	unsigned short [ MAX_CHAN ]		4858455	0					
ANR	4858505	Identifier	tmp		4858455	1					
ANR	4858506	Identifier	MAX_CHAN		4858455	2					
ANR	4858507	IdentifierDeclStatement	int outn = xdev -> rgb_profile -> num_comps_out ;	421:8:13587:13630	4858455	2	True				
ANR	4858508	IdentifierDecl	outn = xdev -> rgb_profile -> num_comps_out		4858455	0					
ANR	4858509	IdentifierDeclType	int		4858455	0					
ANR	4858510	Identifier	outn		4858455	1					
ANR	4858511	AssignmentExpression	outn = xdev -> rgb_profile -> num_comps_out		4858455	2		=			
ANR	4858512	Identifier	outn		4858455	0					
ANR	4858513	PtrMemberAccess	xdev -> rgb_profile -> num_comps_out		4858455	1					
ANR	4858514	PtrMemberAccess	xdev -> rgb_profile		4858455	0					
ANR	4858515	Identifier	xdev		4858455	0					
ANR	4858516	Identifier	rgb_profile		4858455	1					
ANR	4858517	Identifier	num_comps_out		4858455	1					
ANR	4858518	ExpressionStatement	in [ 0 ] = frac2ushort ( r )	423:8:13641:13663	4858455	3	True				
ANR	4858519	AssignmentExpression	in [ 0 ] = frac2ushort ( r )		4858455	0		=			
ANR	4858520	ArrayIndexing	in [ 0 ]		4858455	0					
ANR	4858521	Identifier	in		4858455	0					
ANR	4858522	PrimaryExpression	0		4858455	1					
ANR	4858523	CallExpression	frac2ushort ( r )		4858455	1					
ANR	4858524	Callee	frac2ushort		4858455	0					
ANR	4858525	Identifier	frac2ushort		4858455	0					
ANR	4858526	ArgumentList	r		4858455	1					
ANR	4858527	Argument	r		4858455	0					
ANR	4858528	Identifier	r		4858455	0					
ANR	4858529	ExpressionStatement	in [ 1 ] = frac2ushort ( g )	424:8:13673:13695	4858455	4	True				
ANR	4858530	AssignmentExpression	in [ 1 ] = frac2ushort ( g )		4858455	0		=			
ANR	4858531	ArrayIndexing	in [ 1 ]		4858455	0					
ANR	4858532	Identifier	in		4858455	0					
ANR	4858533	PrimaryExpression	1		4858455	1					
ANR	4858534	CallExpression	frac2ushort ( g )		4858455	1					
ANR	4858535	Callee	frac2ushort		4858455	0					
ANR	4858536	Identifier	frac2ushort		4858455	0					
ANR	4858537	ArgumentList	g		4858455	1					
ANR	4858538	Argument	g		4858455	0					
ANR	4858539	Identifier	g		4858455	0					
ANR	4858540	ExpressionStatement	in [ 2 ] = frac2ushort ( b )	425:8:13705:13727	4858455	5	True				
ANR	4858541	AssignmentExpression	in [ 2 ] = frac2ushort ( b )		4858455	0		=			
ANR	4858542	ArrayIndexing	in [ 2 ]		4858455	0					
ANR	4858543	Identifier	in		4858455	0					
ANR	4858544	PrimaryExpression	2		4858455	1					
ANR	4858545	CallExpression	frac2ushort ( b )		4858455	1					
ANR	4858546	Callee	frac2ushort		4858455	0					
ANR	4858547	Identifier	frac2ushort		4858455	0					
ANR	4858548	ArgumentList	b		4858455	1					
ANR	4858549	Argument	b		4858455	0					
ANR	4858550	Identifier	b		4858455	0					
ANR	4858551	ExpressionStatement	"gscms_transform_color ( dev , link , & ( in [ 0 ] ) , & ( tmp [ 0 ] ) , 2 )"	427:8:13738:13794	4858455	6	True				
ANR	4858552	CallExpression	"gscms_transform_color ( dev , link , & ( in [ 0 ] ) , & ( tmp [ 0 ] ) , 2 )"		4858455	0					
ANR	4858553	Callee	gscms_transform_color		4858455	0					
ANR	4858554	Identifier	gscms_transform_color		4858455	0					
ANR	4858555	ArgumentList	dev		4858455	1					
ANR	4858556	Argument	dev		4858455	0					
ANR	4858557	Identifier	dev		4858455	0					
ANR	4858558	Argument	link		4858455	1					
ANR	4858559	Identifier	link		4858455	0					
ANR	4858560	Argument	& ( in [ 0 ] )		4858455	2					
ANR	4858561	UnaryOperationExpression	& ( in [ 0 ] )		4858455	0					
ANR	4858562	UnaryOperator	&		4858455	0					
ANR	4858563	ArrayIndexing	in [ 0 ]		4858455	1					
ANR	4858564	Identifier	in		4858455	0					
ANR	4858565	PrimaryExpression	0		4858455	1					
ANR	4858566	Argument	& ( tmp [ 0 ] )		4858455	3					
ANR	4858567	UnaryOperationExpression	& ( tmp [ 0 ] )		4858455	0					
ANR	4858568	UnaryOperator	&		4858455	0					
ANR	4858569	ArrayIndexing	tmp [ 0 ]		4858455	1					
ANR	4858570	Identifier	tmp		4858455	0					
ANR	4858571	PrimaryExpression	0		4858455	1					
ANR	4858572	Argument	2		4858455	4					
ANR	4858573	PrimaryExpression	2		4858455	0					
ANR	4858574	ForStatement	for ( i = 0 ; i < outn ; i ++ )		4858455	7					
ANR	4858575	ForInit	i = 0 ;	429:13:13810:13815	4858455	0	True				
ANR	4858576	AssignmentExpression	i = 0		4858455	0		=			
ANR	4858577	Identifier	i		4858455	0					
ANR	4858578	PrimaryExpression	0		4858455	1					
ANR	4858579	Condition	i < outn	429:20:13817:13824	4858455	1	True				
ANR	4858580	RelationalExpression	i < outn		4858455	0		<			
ANR	4858581	Identifier	i		4858455	0					
ANR	4858582	Identifier	outn		4858455	1					
ANR	4858583	PostIncDecOperationExpression	i ++	429:30:13827:13829	4858455	2	True				
ANR	4858584	Identifier	i		4858455	0					
ANR	4858585	IncDec	++		4858455	1					
ANR	4858586	ExpressionStatement	out [ i ] = ushort2frac ( tmp [ i ] )	430:12:13844:13872	4858455	3	True				
ANR	4858587	AssignmentExpression	out [ i ] = ushort2frac ( tmp [ i ] )		4858455	0		=			
ANR	4858588	ArrayIndexing	out [ i ]		4858455	0					
ANR	4858589	Identifier	out		4858455	0					
ANR	4858590	Identifier	i		4858455	1					
ANR	4858591	CallExpression	ushort2frac ( tmp [ i ] )		4858455	1					
ANR	4858592	Callee	ushort2frac		4858455	0					
ANR	4858593	Identifier	ushort2frac		4858455	0					
ANR	4858594	ArgumentList	tmp [ i ]		4858455	1					
ANR	4858595	Argument	tmp [ i ]		4858455	0					
ANR	4858596	ArrayIndexing	tmp [ i ]		4858455	0					
ANR	4858597	Identifier	tmp		4858455	0					
ANR	4858598	Identifier	i		4858455	1					
ANR	4858599	ForStatement	for ( ; i < n + 4 ; i ++ )		4858455	8					
ANR	4858600	Condition	i < n + 4	431:15:13889:13897	4858455	0	True				
ANR	4858601	RelationalExpression	i < n + 4		4858455	0		<			
ANR	4858602	Identifier	i		4858455	0					
ANR	4858603	AdditiveExpression	n + 4		4858455	1		+			
ANR	4858604	Identifier	n		4858455	0					
ANR	4858605	PrimaryExpression	4		4858455	1					
ANR	4858606	PostIncDecOperationExpression	i ++	431:26:13900:13902	4858455	1	True				
ANR	4858607	Identifier	i		4858455	0					
ANR	4858608	IncDec	++		4858455	1					
ANR	4858609	ExpressionStatement	out [ i ] = 0	432:12:13917:13927	4858455	2	True				
ANR	4858610	AssignmentExpression	out [ i ] = 0		4858455	0		=			
ANR	4858611	ArrayIndexing	out [ i ]		4858455	0					
ANR	4858612	Identifier	out		4858455	0					
ANR	4858613	Identifier	i		4858455	1					
ANR	4858614	PrimaryExpression	0		4858455	1					
ANR	4858615	ElseStatement	else		4858455	0					
ANR	4858616	CompoundStatement		24:8:699:711	4858455	0					
ANR	4858617	IdentifierDeclStatement	frac cmyk [ 4 ] ;	434:8:13950:13962	4858455	0	True				
ANR	4858618	IdentifierDecl	cmyk [ 4 ]		4858455	0					
ANR	4858619	IdentifierDeclType	frac [ 4 ]		4858455	0					
ANR	4858620	Identifier	cmyk		4858455	1					
ANR	4858621	PrimaryExpression	4		4858455	2					
ANR	4858622	ExpressionStatement	"color_rgb_to_cmyk ( r , g , b , pgs , cmyk , dev -> memory )"	436:8:13973:14023	4858455	1	True				
ANR	4858623	CallExpression	"color_rgb_to_cmyk ( r , g , b , pgs , cmyk , dev -> memory )"		4858455	0					
ANR	4858624	Callee	color_rgb_to_cmyk		4858455	0					
ANR	4858625	Identifier	color_rgb_to_cmyk		4858455	0					
ANR	4858626	ArgumentList	r		4858455	1					
ANR	4858627	Argument	r		4858455	0					
ANR	4858628	Identifier	r		4858455	0					
ANR	4858629	Argument	g		4858455	1					
ANR	4858630	Identifier	g		4858455	0					
ANR	4858631	Argument	b		4858455	2					
ANR	4858632	Identifier	b		4858455	0					
ANR	4858633	Argument	pgs		4858455	3					
ANR	4858634	Identifier	pgs		4858455	0					
ANR	4858635	Argument	cmyk		4858455	4					
ANR	4858636	Identifier	cmyk		4858455	0					
ANR	4858637	Argument	dev -> memory		4858455	5					
ANR	4858638	PtrMemberAccess	dev -> memory		4858455	0					
ANR	4858639	Identifier	dev		4858455	0					
ANR	4858640	Identifier	memory		4858455	1					
ANR	4858641	ExpressionStatement	"cmyk_cs_to_spotn_cm ( dev , cmyk [ 0 ] , cmyk [ 1 ] , cmyk [ 2 ] , cmyk [ 3 ] , out )"	437:8:14033:14126	4858455	2	True				
ANR	4858642	CallExpression	"cmyk_cs_to_spotn_cm ( dev , cmyk [ 0 ] , cmyk [ 1 ] , cmyk [ 2 ] , cmyk [ 3 ] , out )"		4858455	0					
ANR	4858643	Callee	cmyk_cs_to_spotn_cm		4858455	0					
ANR	4858644	Identifier	cmyk_cs_to_spotn_cm		4858455	0					
ANR	4858645	ArgumentList	dev		4858455	1					
ANR	4858646	Argument	dev		4858455	0					
ANR	4858647	Identifier	dev		4858455	0					
ANR	4858648	Argument	cmyk [ 0 ]		4858455	1					
ANR	4858649	ArrayIndexing	cmyk [ 0 ]		4858455	0					
ANR	4858650	Identifier	cmyk		4858455	0					
ANR	4858651	PrimaryExpression	0		4858455	1					
ANR	4858652	Argument	cmyk [ 1 ]		4858455	2					
ANR	4858653	ArrayIndexing	cmyk [ 1 ]		4858455	0					
ANR	4858654	Identifier	cmyk		4858455	0					
ANR	4858655	PrimaryExpression	1		4858455	1					
ANR	4858656	Argument	cmyk [ 2 ]		4858455	3					
ANR	4858657	ArrayIndexing	cmyk [ 2 ]		4858455	0					
ANR	4858658	Identifier	cmyk		4858455	0					
ANR	4858659	PrimaryExpression	2		4858455	1					
ANR	4858660	Argument	cmyk [ 3 ]		4858455	4					
ANR	4858661	ArrayIndexing	cmyk [ 3 ]		4858455	0					
ANR	4858662	Identifier	cmyk		4858455	0					
ANR	4858663	PrimaryExpression	3		4858455	1					
ANR	4858664	Argument	out		4858455	5					
ANR	4858665	Identifier	out		4858455	0					
ANR	4858666	ReturnType	static void		4858455	1					
ANR	4858667	Identifier	rgb_cs_to_spotn_cm		4858455	2					
ANR	4858668	ParameterList	"gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ]"		4858455	3					
ANR	4858669	Parameter	gx_device * dev	409:19:13140:13154	4858455	0	True				
ANR	4858670	ParameterType	gx_device *		4858455	0					
ANR	4858671	Identifier	dev		4858455	1					
ANR	4858672	Parameter	const gs_gstate * pgs	409:36:13157:13176	4858455	1	True				
ANR	4858673	ParameterType	const gs_gstate *		4858455	0					
ANR	4858674	Identifier	pgs		4858455	1					
ANR	4858675	Parameter	frac r	410:35:13214:13219	4858455	2	True				
ANR	4858676	ParameterType	frac		4858455	0					
ANR	4858677	Identifier	r		4858455	1					
ANR	4858678	Parameter	frac g	410:43:13222:13227	4858455	3	True				
ANR	4858679	ParameterType	frac		4858455	0					
ANR	4858680	Identifier	g		4858455	1					
ANR	4858681	Parameter	frac b	410:51:13230:13235	4858455	4	True				
ANR	4858682	ParameterType	frac		4858455	0					
ANR	4858683	Identifier	b		4858455	1					
ANR	4858684	Parameter	frac out [ ]	410:59:13238:13247	4858455	5	True				
ANR	4858685	ParameterType	frac [ ]		4858455	0					
ANR	4858686	Identifier	out		4858455	1					
ANR	4858687	CFGEntryNode	ENTRY		4858455		True				
ANR	4858688	CFGExitNode	EXIT		4858455		True				
ANR	4858689	Symbol	xdev -> separation_names . num_names		4858455						
ANR	4858690	Symbol	* dev		4858455						
ANR	4858691	Symbol	* tmp		4858455						
ANR	4858692	Symbol	xdev -> rgb_profile		4858455						
ANR	4858693	Symbol	ushort2frac		4858455						
ANR	4858694	Symbol	link		4858455						
ANR	4858695	Symbol	* in		4858455						
ANR	4858696	Symbol	* xdev -> rgb_profile		4858455						
ANR	4858697	Symbol	out		4858455						
ANR	4858698	Symbol	frac2ushort		4858455						
ANR	4858699	Symbol	cmyk		4858455						
ANR	4858700	Symbol	dev		4858455						
ANR	4858701	Symbol	outn		4858455						
ANR	4858702	Symbol	tmp		4858455						
ANR	4858703	Symbol	* * xdev		4858455						
ANR	4858704	Symbol	pgs		4858455						
ANR	4858705	Symbol	b		4858455						
ANR	4858706	Symbol	xdev -> rgb_icc_link		4858455						
ANR	4858707	Symbol	NULL		4858455						
ANR	4858708	Symbol	xdev		4858455						
ANR	4858709	Symbol	in		4858455						
ANR	4858710	Symbol	g		4858455						
ANR	4858711	Symbol	i		4858455						
ANR	4858712	Symbol	n		4858455						
ANR	4858713	Symbol	* cmyk		4858455						
ANR	4858714	Symbol	r		4858455						
ANR	4858715	Symbol	dev -> memory		4858455						
ANR	4858716	Symbol	* i		4858455						
ANR	4858717	Symbol	* xdev		4858455						
ANR	4858718	Symbol	xdev -> rgb_profile -> num_comps_out		4858455						
ANR	4858719	Symbol	* out		4858455						
ANR	4858720	Symbol	xdev -> separation_names		4858455						
ANR	4858721	DeclStmt									
ANR	4858722	Decl							const gx_cm_color_map_procs	const gx_cm_color_map_procs	spotRGB_procs
ANR	4858723	DeclStmt									
ANR	4858724	Decl							const gx_cm_color_map_procs	const gx_cm_color_map_procs	spotCMYK_procs
ANR	4858725	DeclStmt									
ANR	4858726	Decl							const gx_cm_color_map_procs	const gx_cm_color_map_procs	spotN_procs
ANR	4858727	Function	get_spotrgb_color_mapping_procs	458:0:14627:14748							
ANR	4858728	FunctionDef	get_spotrgb_color_mapping_procs (const gx_device * dev)		4858727	0					
ANR	4858729	CompoundStatement		460:0:14719:14748	4858727	0					
ANR	4858730	ReturnStatement	return & spotRGB_procs ;	461:4:14725:14746	4858727	0	True				
ANR	4858731	UnaryOperationExpression	& spotRGB_procs		4858727	0					
ANR	4858732	UnaryOperator	&		4858727	0					
ANR	4858733	Identifier	spotRGB_procs		4858727	1					
ANR	4858734	ReturnType	static const gx_cm_color_map_procs *		4858727	1					
ANR	4858735	Identifier	get_spotrgb_color_mapping_procs		4858727	2					
ANR	4858736	ParameterList	const gx_device * dev		4858727	3					
ANR	4858737	Parameter	const gx_device * dev	459:32:14696:14716	4858727	0	True				
ANR	4858738	ParameterType	const gx_device *		4858727	0					
ANR	4858739	Identifier	dev		4858727	1					
ANR	4858740	CFGEntryNode	ENTRY		4858727		True				
ANR	4858741	CFGExitNode	EXIT		4858727		True				
ANR	4858742	Symbol	dev		4858727						
ANR	4858743	Symbol	& spotRGB_procs		4858727						
ANR	4858744	Function	get_spotcmyk_color_mapping_procs	465:0:14757:14880							
ANR	4858745	FunctionDef	get_spotcmyk_color_mapping_procs (const gx_device * dev)		4858744	0					
ANR	4858746	CompoundStatement		467:0:14850:14880	4858744	0					
ANR	4858747	ReturnStatement	return & spotCMYK_procs ;	468:4:14856:14878	4858744	0	True				
ANR	4858748	UnaryOperationExpression	& spotCMYK_procs		4858744	0					
ANR	4858749	UnaryOperator	&		4858744	0					
ANR	4858750	Identifier	spotCMYK_procs		4858744	1					
ANR	4858751	ReturnType	static const gx_cm_color_map_procs *		4858744	1					
ANR	4858752	Identifier	get_spotcmyk_color_mapping_procs		4858744	2					
ANR	4858753	ParameterList	const gx_device * dev		4858744	3					
ANR	4858754	Parameter	const gx_device * dev	466:33:14827:14847	4858744	0	True				
ANR	4858755	ParameterType	const gx_device *		4858744	0					
ANR	4858756	Identifier	dev		4858744	1					
ANR	4858757	CFGEntryNode	ENTRY		4858744		True				
ANR	4858758	CFGExitNode	EXIT		4858744		True				
ANR	4858759	Symbol	& spotCMYK_procs		4858744						
ANR	4858760	Symbol	dev		4858744						
ANR	4858761	Function	get_xcf_color_mapping_procs	472:0:14890:15301							
ANR	4858762	FunctionDef	get_xcf_color_mapping_procs (const gx_device * dev)		4858761	0					
ANR	4858763	CompoundStatement		474:0:14978:15301	4858761	0					
ANR	4858764	IdentifierDeclStatement	const xcf_device * xdev = ( const xcf_device * ) dev ;	475:4:14984:15032	4858761	0	True				
ANR	4858765	IdentifierDecl	* xdev = ( const xcf_device * ) dev		4858761	0					
ANR	4858766	IdentifierDeclType	const xcf_device *		4858761	0					
ANR	4858767	Identifier	xdev		4858761	1					
ANR	4858768	AssignmentExpression	* xdev = ( const xcf_device * ) dev		4858761	2		=			
ANR	4858769	Identifier	xdev		4858761	0					
ANR	4858770	CastExpression	( const xcf_device * ) dev		4858761	1					
ANR	4858771	CastTarget	const xcf_device *		4858761	0					
ANR	4858772	Identifier	dev		4858761	1					
ANR	4858773	IfStatement	if ( xdev -> color_model == XCF_DEVICE_RGB )		4858761	1					
ANR	4858774	Condition	xdev -> color_model == XCF_DEVICE_RGB	477:8:15043:15077	4858761	0	True				
ANR	4858775	EqualityExpression	xdev -> color_model == XCF_DEVICE_RGB		4858761	0		==			
ANR	4858776	PtrMemberAccess	xdev -> color_model		4858761	0					
ANR	4858777	Identifier	xdev		4858761	0					
ANR	4858778	Identifier	color_model		4858761	1					
ANR	4858779	Identifier	XCF_DEVICE_RGB		4858761	1					
ANR	4858780	ReturnStatement	return & spotRGB_procs ;	478:8:15088:15109	4858761	1	True				
ANR	4858781	UnaryOperationExpression	& spotRGB_procs		4858761	0					
ANR	4858782	UnaryOperator	&		4858761	0					
ANR	4858783	Identifier	spotRGB_procs		4858761	1					
ANR	4858784	ElseStatement	else		4858761	0					
ANR	4858785	IfStatement	if ( xdev -> color_model == XCF_DEVICE_CMYK )		4858761	0					
ANR	4858786	Condition	xdev -> color_model == XCF_DEVICE_CMYK	479:13:15124:15159	4858761	0	True				
ANR	4858787	EqualityExpression	xdev -> color_model == XCF_DEVICE_CMYK		4858761	0		==			
ANR	4858788	PtrMemberAccess	xdev -> color_model		4858761	0					
ANR	4858789	Identifier	xdev		4858761	0					
ANR	4858790	Identifier	color_model		4858761	1					
ANR	4858791	Identifier	XCF_DEVICE_CMYK		4858761	1					
ANR	4858792	ReturnStatement	return & spotCMYK_procs ;	480:8:15170:15192	4858761	1	True				
ANR	4858793	UnaryOperationExpression	& spotCMYK_procs		4858761	0					
ANR	4858794	UnaryOperator	&		4858761	0					
ANR	4858795	Identifier	spotCMYK_procs		4858761	1					
ANR	4858796	ElseStatement	else		4858761	0					
ANR	4858797	IfStatement	if ( xdev -> color_model == XCF_DEVICE_N )		4858761	0					
ANR	4858798	Condition	xdev -> color_model == XCF_DEVICE_N	481:13:15207:15239	4858761	0	True				
ANR	4858799	EqualityExpression	xdev -> color_model == XCF_DEVICE_N		4858761	0		==			
ANR	4858800	PtrMemberAccess	xdev -> color_model		4858761	0					
ANR	4858801	Identifier	xdev		4858761	0					
ANR	4858802	Identifier	color_model		4858761	1					
ANR	4858803	Identifier	XCF_DEVICE_N		4858761	1					
ANR	4858804	ReturnStatement	return & spotN_procs ;	482:8:15250:15269	4858761	1	True				
ANR	4858805	UnaryOperationExpression	& spotN_procs		4858761	0					
ANR	4858806	UnaryOperator	&		4858761	0					
ANR	4858807	Identifier	spotN_procs		4858761	1					
ANR	4858808	ElseStatement	else		4858761	0					
ANR	4858809	ReturnStatement	return NULL ;	484:8:15288:15299	4858761	0	True				
ANR	4858810	Identifier	NULL		4858761	0					
ANR	4858811	ReturnType	static const gx_cm_color_map_procs *		4858761	1					
ANR	4858812	Identifier	get_xcf_color_mapping_procs		4858761	2					
ANR	4858813	ParameterList	const gx_device * dev		4858761	3					
ANR	4858814	Parameter	const gx_device * dev	473:28:14955:14975	4858761	0	True				
ANR	4858815	ParameterType	const gx_device *		4858761	0					
ANR	4858816	Identifier	dev		4858761	1					
ANR	4858817	CFGEntryNode	ENTRY		4858761		True				
ANR	4858818	CFGExitNode	EXIT		4858761		True				
ANR	4858819	Symbol	& spotCMYK_procs		4858761						
ANR	4858820	Symbol	XCF_DEVICE_CMYK		4858761						
ANR	4858821	Symbol	XCF_DEVICE_N		4858761						
ANR	4858822	Symbol	NULL		4858761						
ANR	4858823	Symbol	dev		4858761						
ANR	4858824	Symbol	xdev		4858761						
ANR	4858825	Symbol	* xdev		4858761						
ANR	4858826	Symbol	xdev -> color_model		4858761						
ANR	4858827	Symbol	& spotRGB_procs		4858761						
ANR	4858828	Symbol	& spotN_procs		4858761						
ANR	4858829	Symbol	XCF_DEVICE_RGB		4858761						
ANR	4858830	Function	xcf_encode_color	490:0:15376:15816							
ANR	4858831	FunctionDef	"xcf_encode_color (gx_device * dev , const gx_color_value colors [ ])"		4858830	0					
ANR	4858832	CompoundStatement		492:0:15462:15816	4858830	0					
ANR	4858833	IdentifierDeclStatement	int bpc = ( ( xcf_device * ) dev ) -> bitspercomponent ;	493:4:15468:15515	4858830	0	True				
ANR	4858834	IdentifierDecl	bpc = ( ( xcf_device * ) dev ) -> bitspercomponent		4858830	0					
ANR	4858835	IdentifierDeclType	int		4858830	0					
ANR	4858836	Identifier	bpc		4858830	1					
ANR	4858837	AssignmentExpression	bpc = ( ( xcf_device * ) dev ) -> bitspercomponent		4858830	2		=			
ANR	4858838	Identifier	bpc		4858830	0					
ANR	4858839	PtrMemberAccess	( ( xcf_device * ) dev ) -> bitspercomponent		4858830	1					
ANR	4858840	CastExpression	( xcf_device * ) dev		4858830	0					
ANR	4858841	CastTarget	xcf_device *		4858830	0					
ANR	4858842	Identifier	dev		4858830	1					
ANR	4858843	Identifier	bitspercomponent		4858830	1					
ANR	4858844	IdentifierDeclStatement	gx_color_index color = 0 ;	494:4:15521:15545	4858830	1	True				
ANR	4858845	IdentifierDecl	color = 0		4858830	0					
ANR	4858846	IdentifierDeclType	gx_color_index		4858830	0					
ANR	4858847	Identifier	color		4858830	1					
ANR	4858848	AssignmentExpression	color = 0		4858830	2		=			
ANR	4858849	Identifier	color		4858830	0					
ANR	4858850	PrimaryExpression	0		4858830	1					
ANR	4858851	IdentifierDeclStatement	int i = 0 ;	495:4:15551:15560	4858830	2	True				
ANR	4858852	IdentifierDecl	i = 0		4858830	0					
ANR	4858853	IdentifierDeclType	int		4858830	0					
ANR	4858854	Identifier	i		4858830	1					
ANR	4858855	AssignmentExpression	i = 0		4858830	2		=			
ANR	4858856	Identifier	i		4858830	0					
ANR	4858857	PrimaryExpression	0		4858830	1					
ANR	4858858	IdentifierDeclStatement	int ncomp = dev -> color_info . num_components ;	496:4:15566:15608	4858830	3	True				
ANR	4858859	IdentifierDecl	ncomp = dev -> color_info . num_components		4858830	0					
ANR	4858860	IdentifierDeclType	int		4858830	0					
ANR	4858861	Identifier	ncomp		4858830	1					
ANR	4858862	AssignmentExpression	ncomp = dev -> color_info . num_components		4858830	2		=			
ANR	4858863	Identifier	ncomp		4858830	0					
ANR	4858864	MemberAccess	dev -> color_info . num_components		4858830	1					
ANR	4858865	PtrMemberAccess	dev -> color_info		4858830	0					
ANR	4858866	Identifier	dev		4858830	0					
ANR	4858867	Identifier	color_info		4858830	1					
ANR	4858868	Identifier	num_components		4858830	1					
ANR	4858869	ExpressionStatement	COLROUND_VARS	497:4:15614:15627	4858830	4	True				
ANR	4858870	Identifier	COLROUND_VARS		4858830	0					
ANR	4858871	ExpressionStatement	COLROUND_SETUP ( bpc )	499:4:15634:15653	4858830	5	True				
ANR	4858872	CallExpression	COLROUND_SETUP ( bpc )		4858830	0					
ANR	4858873	Callee	COLROUND_SETUP		4858830	0					
ANR	4858874	Identifier	COLROUND_SETUP		4858830	0					
ANR	4858875	ArgumentList	bpc		4858830	1					
ANR	4858876	Argument	bpc		4858830	0					
ANR	4858877	Identifier	bpc		4858830	0					
ANR	4858878	ForStatement	for ( ; i < ncomp ; i ++ )		4858830	6					
ANR	4858879	Condition	i < ncomp	500:11:15666:15672	4858830	0	True				
ANR	4858880	RelationalExpression	i < ncomp		4858830	0		<			
ANR	4858881	Identifier	i		4858830	0					
ANR	4858882	Identifier	ncomp		4858830	1					
ANR	4858883	PostIncDecOperationExpression	i ++	500:20:15675:15677	4858830	1	True				
ANR	4858884	Identifier	i		4858830	0					
ANR	4858885	IncDec	++		4858830	1					
ANR	4858886	CompoundStatement		9:25:217:217	4858830	2					
ANR	4858887	ExpressionStatement	color <<= bpc	501:8:15690:15703	4858830	0	True				
ANR	4858888	AssignmentExpression	color <<= bpc		4858830	0		<<=			
ANR	4858889	Identifier	color		4858830	0					
ANR	4858890	Identifier	bpc		4858830	1					
ANR	4858891	ExpressionStatement	color |= COLROUND_ROUND ( colors [ i ] )	502:8:15713:15747	4858830	1	True				
ANR	4858892	AssignmentExpression	color |= COLROUND_ROUND ( colors [ i ] )		4858830	0		|=			
ANR	4858893	Identifier	color		4858830	0					
ANR	4858894	CallExpression	COLROUND_ROUND ( colors [ i ] )		4858830	1					
ANR	4858895	Callee	COLROUND_ROUND		4858830	0					
ANR	4858896	Identifier	COLROUND_ROUND		4858830	0					
ANR	4858897	ArgumentList	colors [ i ]		4858830	1					
ANR	4858898	Argument	colors [ i ]		4858830	0					
ANR	4858899	ArrayIndexing	colors [ i ]		4858830	0					
ANR	4858900	Identifier	colors		4858830	0					
ANR	4858901	Identifier	i		4858830	1					
ANR	4858902	ReturnStatement	return ( color == gx_no_color_index ? color ^ 1 : color ) ;	504:4:15759:15814	4858830	7	True				
ANR	4858903	ConditionalExpression	color == gx_no_color_index ? color ^ 1 : color		4858830	0					
ANR	4858904	Condition	color == gx_no_color_index		4858830	0					
ANR	4858905	EqualityExpression	color == gx_no_color_index		4858830	0		==			
ANR	4858906	Identifier	color		4858830	0					
ANR	4858907	Identifier	gx_no_color_index		4858830	1					
ANR	4858908	ExclusiveOrExpression	color ^ 1		4858830	1		^			
ANR	4858909	Identifier	color		4858830	0					
ANR	4858910	PrimaryExpression	1		4858830	1					
ANR	4858911	Identifier	color		4858830	2					
ANR	4858912	ReturnType	static gx_color_index		4858830	1					
ANR	4858913	Identifier	xcf_encode_color		4858830	2					
ANR	4858914	ParameterList	"gx_device * dev , const gx_color_value colors [ ]"		4858830	3					
ANR	4858915	Parameter	gx_device * dev	491:17:15415:15428	4858830	0	True				
ANR	4858916	ParameterType	gx_device *		4858830	0					
ANR	4858917	Identifier	dev		4858830	1					
ANR	4858918	Parameter	const gx_color_value colors [ ]	491:33:15431:15459	4858830	1	True				
ANR	4858919	ParameterType	const gx_color_value [ ]		4858830	0					
ANR	4858920	Identifier	colors		4858830	1					
ANR	4858921	CFGEntryNode	ENTRY		4858830		True				
ANR	4858922	CFGExitNode	EXIT		4858830		True				
ANR	4858923	Symbol	* dev		4858830						
ANR	4858924	Symbol	( ( xcf_device * ) dev ) -> bitspercomponent		4858830						
ANR	4858925	Symbol	ncomp		4858830						
ANR	4858926	Symbol	color		4858830						
ANR	4858927	Symbol	dev -> color_info . num_components		4858830						
ANR	4858928	Symbol	i		4858830						
ANR	4858929	Symbol	dev -> color_info		4858830						
ANR	4858930	Symbol	colors		4858830						
ANR	4858931	Symbol	* colors		4858830						
ANR	4858932	Symbol	* i		4858830						
ANR	4858933	Symbol	gx_no_color_index		4858830						
ANR	4858934	Symbol	dev		4858830						
ANR	4858935	Symbol	bpc		4858830						
ANR	4858936	Symbol	COLROUND_ROUND		4858830						
ANR	4858937	Function	xcf_decode_color	510:0:15894:16298							
ANR	4858938	FunctionDef	"xcf_decode_color (gx_device * dev , gx_color_index color , gx_color_value * out)"		4858937	0					
ANR	4858939	CompoundStatement		512:0:15983:16298	4858937	0					
ANR	4858940	IdentifierDeclStatement	int bpc = ( ( xcf_device * ) dev ) -> bitspercomponent ;	513:4:15989:16036	4858937	0	True				
ANR	4858941	IdentifierDecl	bpc = ( ( xcf_device * ) dev ) -> bitspercomponent		4858937	0					
ANR	4858942	IdentifierDeclType	int		4858937	0					
ANR	4858943	Identifier	bpc		4858937	1					
ANR	4858944	AssignmentExpression	bpc = ( ( xcf_device * ) dev ) -> bitspercomponent		4858937	2		=			
ANR	4858945	Identifier	bpc		4858937	0					
ANR	4858946	PtrMemberAccess	( ( xcf_device * ) dev ) -> bitspercomponent		4858937	1					
ANR	4858947	CastExpression	( xcf_device * ) dev		4858937	0					
ANR	4858948	CastTarget	xcf_device *		4858937	0					
ANR	4858949	Identifier	dev		4858937	1					
ANR	4858950	Identifier	bitspercomponent		4858937	1					
ANR	4858951	IdentifierDeclStatement	int mask = ( 1 << bpc ) - 1 ;	514:4:16042:16067	4858937	1	True				
ANR	4858952	IdentifierDecl	mask = ( 1 << bpc ) - 1		4858937	0					
ANR	4858953	IdentifierDeclType	int		4858937	0					
ANR	4858954	Identifier	mask		4858937	1					
ANR	4858955	AssignmentExpression	mask = ( 1 << bpc ) - 1		4858937	2		=			
ANR	4858956	Identifier	mask		4858937	0					
ANR	4858957	AdditiveExpression	( 1 << bpc ) - 1		4858937	1		-			
ANR	4858958	ShiftExpression	1 << bpc		4858937	0		<<			
ANR	4858959	PrimaryExpression	1		4858937	0					
ANR	4858960	Identifier	bpc		4858937	1					
ANR	4858961	PrimaryExpression	1		4858937	1					
ANR	4858962	IdentifierDeclStatement	int i = 0 ;	515:4:16073:16082	4858937	2	True				
ANR	4858963	IdentifierDecl	i = 0		4858937	0					
ANR	4858964	IdentifierDeclType	int		4858937	0					
ANR	4858965	Identifier	i		4858937	1					
ANR	4858966	AssignmentExpression	i = 0		4858937	2		=			
ANR	4858967	Identifier	i		4858937	0					
ANR	4858968	PrimaryExpression	0		4858937	1					
ANR	4858969	IdentifierDeclStatement	int ncomp = dev -> color_info . num_components ;	516:4:16088:16130	4858937	3	True				
ANR	4858970	IdentifierDecl	ncomp = dev -> color_info . num_components		4858937	0					
ANR	4858971	IdentifierDeclType	int		4858937	0					
ANR	4858972	Identifier	ncomp		4858937	1					
ANR	4858973	AssignmentExpression	ncomp = dev -> color_info . num_components		4858937	2		=			
ANR	4858974	Identifier	ncomp		4858937	0					
ANR	4858975	MemberAccess	dev -> color_info . num_components		4858937	1					
ANR	4858976	PtrMemberAccess	dev -> color_info		4858937	0					
ANR	4858977	Identifier	dev		4858937	0					
ANR	4858978	Identifier	color_info		4858937	1					
ANR	4858979	Identifier	num_components		4858937	1					
ANR	4858980	ExpressionStatement	COLDUP_VARS	517:4:16136:16147	4858937	4	True				
ANR	4858981	Identifier	COLDUP_VARS		4858937	0					
ANR	4858982	ExpressionStatement	COLDUP_SETUP ( bpc )	519:4:16154:16171	4858937	5	True				
ANR	4858983	CallExpression	COLDUP_SETUP ( bpc )		4858937	0					
ANR	4858984	Callee	COLDUP_SETUP		4858937	0					
ANR	4858985	Identifier	COLDUP_SETUP		4858937	0					
ANR	4858986	ArgumentList	bpc		4858937	1					
ANR	4858987	Argument	bpc		4858937	0					
ANR	4858988	Identifier	bpc		4858937	0					
ANR	4858989	ForStatement	for ( ; i < ncomp ; i ++ )		4858937	6					
ANR	4858990	Condition	i < ncomp	520:11:16184:16190	4858937	0	True				
ANR	4858991	RelationalExpression	i < ncomp		4858937	0		<			
ANR	4858992	Identifier	i		4858937	0					
ANR	4858993	Identifier	ncomp		4858937	1					
ANR	4858994	PostIncDecOperationExpression	i ++	520:20:16193:16195	4858937	1	True				
ANR	4858995	Identifier	i		4858937	0					
ANR	4858996	IncDec	++		4858937	1					
ANR	4858997	CompoundStatement		9:25:214:214	4858937	2					
ANR	4858998	ExpressionStatement	out [ ncomp - i - 1 ] = COLDUP_DUP ( color & mask )	521:8:16208:16253	4858937	0	True				
ANR	4858999	AssignmentExpression	out [ ncomp - i - 1 ] = COLDUP_DUP ( color & mask )		4858937	0		=			
ANR	4859000	ArrayIndexing	out [ ncomp - i - 1 ]		4858937	0					
ANR	4859001	Identifier	out		4858937	0					
ANR	4859002	AdditiveExpression	ncomp - i - 1		4858937	1		-			
ANR	4859003	Identifier	ncomp		4858937	0					
ANR	4859004	AdditiveExpression	i - 1		4858937	1		-			
ANR	4859005	Identifier	i		4858937	0					
ANR	4859006	PrimaryExpression	1		4858937	1					
ANR	4859007	CallExpression	COLDUP_DUP ( color & mask )		4858937	1					
ANR	4859008	Callee	COLDUP_DUP		4858937	0					
ANR	4859009	Identifier	COLDUP_DUP		4858937	0					
ANR	4859010	ArgumentList	color & mask		4858937	1					
ANR	4859011	Argument	color & mask		4858937	0					
ANR	4859012	BitAndExpression	color & mask		4858937	0		&			
ANR	4859013	Identifier	color		4858937	0					
ANR	4859014	Identifier	mask		4858937	1					
ANR	4859015	ExpressionStatement	color >>= bpc	522:8:16263:16276	4858937	1	True				
ANR	4859016	AssignmentExpression	color >>= bpc		4858937	0		>>=			
ANR	4859017	Identifier	color		4858937	0					
ANR	4859018	Identifier	bpc		4858937	1					
ANR	4859019	ReturnStatement	return 0 ;	524:4:16288:16296	4858937	7	True				
ANR	4859020	PrimaryExpression	0		4858937	0					
ANR	4859021	ReturnType	static int		4858937	1					
ANR	4859022	Identifier	xcf_decode_color		4858937	2					
ANR	4859023	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value * out"		4858937	3					
ANR	4859024	Parameter	gx_device * dev	511:17:15922:15936	4858937	0	True				
ANR	4859025	ParameterType	gx_device *		4858937	0					
ANR	4859026	Identifier	dev		4858937	1					
ANR	4859027	Parameter	gx_color_index color	511:34:15939:15958	4858937	1	True				
ANR	4859028	ParameterType	gx_color_index		4858937	0					
ANR	4859029	Identifier	color		4858937	1					
ANR	4859030	Parameter	gx_color_value * out	511:56:15961:15980	4858937	2	True				
ANR	4859031	ParameterType	gx_color_value *		4858937	0					
ANR	4859032	Identifier	out		4858937	1					
ANR	4859033	CFGEntryNode	ENTRY		4858937		True				
ANR	4859034	CFGExitNode	EXIT		4858937		True				
ANR	4859035	Symbol	( ( xcf_device * ) dev ) -> bitspercomponent		4858937						
ANR	4859036	Symbol	* dev		4858937						
ANR	4859037	Symbol	ncomp		4858937						
ANR	4859038	Symbol	color		4858937						
ANR	4859039	Symbol	dev -> color_info . num_components		4858937						
ANR	4859040	Symbol	COLDUP_DUP		4858937						
ANR	4859041	Symbol	i		4858937						
ANR	4859042	Symbol	dev -> color_info		4858937						
ANR	4859043	Symbol	out		4858937						
ANR	4859044	Symbol	* i		4858937						
ANR	4859045	Symbol	dev		4858937						
ANR	4859046	Symbol	bpc		4858937						
ANR	4859047	Symbol	* out		4858937						
ANR	4859048	Symbol	* ncomp		4858937						
ANR	4859049	Symbol	mask		4858937						
ANR	4859050	Function	xcf_map_color_rgb	530:0:16344:16678							
ANR	4859051	FunctionDef	"xcf_map_color_rgb (gx_device * dev , gx_color_index color , gx_color_value rgb [ 3 ])"		4859050	0					
ANR	4859052	CompoundStatement		532:0:16434:16678	4859050	0					
ANR	4859053	IdentifierDeclStatement	xcf_device * xdev = ( xcf_device * ) dev ;	533:4:16440:16476	4859050	0	True				
ANR	4859054	IdentifierDecl	* xdev = ( xcf_device * ) dev		4859050	0					
ANR	4859055	IdentifierDeclType	xcf_device *		4859050	0					
ANR	4859056	Identifier	xdev		4859050	1					
ANR	4859057	AssignmentExpression	* xdev = ( xcf_device * ) dev		4859050	2		=			
ANR	4859058	Identifier	xdev		4859050	0					
ANR	4859059	CastExpression	( xcf_device * ) dev		4859050	1					
ANR	4859060	CastTarget	xcf_device *		4859050	0					
ANR	4859061	Identifier	dev		4859050	1					
ANR	4859062	IfStatement	if ( xdev -> color_model == XCF_DEVICE_RGB )		4859050	1					
ANR	4859063	Condition	xdev -> color_model == XCF_DEVICE_RGB	535:8:16487:16521	4859050	0	True				
ANR	4859064	EqualityExpression	xdev -> color_model == XCF_DEVICE_RGB		4859050	0		==			
ANR	4859065	PtrMemberAccess	xdev -> color_model		4859050	0					
ANR	4859066	Identifier	xdev		4859050	0					
ANR	4859067	Identifier	color_model		4859050	1					
ANR	4859068	Identifier	XCF_DEVICE_RGB		4859050	1					
ANR	4859069	ReturnStatement	"return xcf_decode_color ( dev , color , rgb ) ;"	536:8:16532:16572	4859050	1	True				
ANR	4859070	CallExpression	"xcf_decode_color ( dev , color , rgb )"		4859050	0					
ANR	4859071	Callee	xcf_decode_color		4859050	0					
ANR	4859072	Identifier	xcf_decode_color		4859050	0					
ANR	4859073	ArgumentList	dev		4859050	1					
ANR	4859074	Argument	dev		4859050	0					
ANR	4859075	Identifier	dev		4859050	0					
ANR	4859076	Argument	color		4859050	1					
ANR	4859077	Identifier	color		4859050	0					
ANR	4859078	Argument	rgb		4859050	2					
ANR	4859079	Identifier	rgb		4859050	0					
ANR	4859080	ExpressionStatement	rgb [ 0 ] = 0	538:4:16620:16630	4859050	2	True				
ANR	4859081	AssignmentExpression	rgb [ 0 ] = 0		4859050	0		=			
ANR	4859082	ArrayIndexing	rgb [ 0 ]		4859050	0					
ANR	4859083	Identifier	rgb		4859050	0					
ANR	4859084	PrimaryExpression	0		4859050	1					
ANR	4859085	PrimaryExpression	0		4859050	1					
ANR	4859086	ExpressionStatement	rgb [ 1 ] = 0	539:4:16636:16646	4859050	3	True				
ANR	4859087	AssignmentExpression	rgb [ 1 ] = 0		4859050	0		=			
ANR	4859088	ArrayIndexing	rgb [ 1 ]		4859050	0					
ANR	4859089	Identifier	rgb		4859050	0					
ANR	4859090	PrimaryExpression	1		4859050	1					
ANR	4859091	PrimaryExpression	0		4859050	1					
ANR	4859092	ExpressionStatement	rgb [ 2 ] = 0	540:4:16652:16662	4859050	4	True				
ANR	4859093	AssignmentExpression	rgb [ 2 ] = 0		4859050	0		=			
ANR	4859094	ArrayIndexing	rgb [ 2 ]		4859050	0					
ANR	4859095	Identifier	rgb		4859050	0					
ANR	4859096	PrimaryExpression	2		4859050	1					
ANR	4859097	PrimaryExpression	0		4859050	1					
ANR	4859098	ReturnStatement	return 0 ;	541:4:16668:16676	4859050	5	True				
ANR	4859099	PrimaryExpression	0		4859050	0					
ANR	4859100	ReturnType	static int		4859050	1					
ANR	4859101	Identifier	xcf_map_color_rgb		4859050	2					
ANR	4859102	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value rgb [ 3 ]"		4859050	3					
ANR	4859103	Parameter	gx_device * dev	531:18:16373:16386	4859050	0	True				
ANR	4859104	ParameterType	gx_device *		4859050	0					
ANR	4859105	Identifier	dev		4859050	1					
ANR	4859106	Parameter	gx_color_index color	531:34:16389:16408	4859050	1	True				
ANR	4859107	ParameterType	gx_color_index		4859050	0					
ANR	4859108	Identifier	color		4859050	1					
ANR	4859109	Parameter	gx_color_value rgb [ 3 ]	531:56:16411:16431	4859050	2	True				
ANR	4859110	ParameterType	gx_color_value [ 3 ]		4859050	0					
ANR	4859111	Identifier	rgb		4859050	1					
ANR	4859112	CFGEntryNode	ENTRY		4859050		True				
ANR	4859113	CFGExitNode	EXIT		4859050		True				
ANR	4859114	Symbol	dev		4859050						
ANR	4859115	Symbol	color		4859050						
ANR	4859116	Symbol	xdev		4859050						
ANR	4859117	Symbol	* xdev		4859050						
ANR	4859118	Symbol	xdev -> color_model		4859050						
ANR	4859119	Symbol	* rgb		4859050						
ANR	4859120	Symbol	rgb		4859050						
ANR	4859121	Symbol	XCF_DEVICE_RGB		4859050						
ANR	4859122	Symbol	xcf_decode_color		4859050						
ANR	4859123	Function	repack_data	561:0:17189:19097							
ANR	4859124	FunctionDef	"repack_data (byte * source , byte * dest , int depth , int first_bit , int bit_width , int npixel)"		4859123	0					
ANR	4859125	CompoundStatement		564:0:17309:19097	4859123	0					
ANR	4859126	IdentifierDeclStatement	int in_nbyte = depth >> 3 ;	565:4:17315:17340	4859123	0	True				
ANR	4859127	IdentifierDecl	in_nbyte = depth >> 3		4859123	0					
ANR	4859128	IdentifierDeclType	int		4859123	0					
ANR	4859129	Identifier	in_nbyte		4859123	1					
ANR	4859130	AssignmentExpression	in_nbyte = depth >> 3		4859123	2		=			
ANR	4859131	Identifier	in_nbyte		4859123	0					
ANR	4859132	ShiftExpression	depth >> 3		4859123	1		>>			
ANR	4859133	Identifier	depth		4859123	0					
ANR	4859134	PrimaryExpression	3		4859123	1					
ANR	4859135	IdentifierDeclStatement	int out_nbyte = bit_width >> 3 ;	566:4:17385:17415	4859123	1	True				
ANR	4859136	IdentifierDecl	out_nbyte = bit_width >> 3		4859123	0					
ANR	4859137	IdentifierDeclType	int		4859123	0					
ANR	4859138	Identifier	out_nbyte		4859123	1					
ANR	4859139	AssignmentExpression	out_nbyte = bit_width >> 3		4859123	2		=			
ANR	4859140	Identifier	out_nbyte		4859123	0					
ANR	4859141	ShiftExpression	bit_width >> 3		4859123	1		>>			
ANR	4859142	Identifier	bit_width		4859123	0					
ANR	4859143	PrimaryExpression	3		4859123	1					
ANR	4859144	IdentifierDeclStatement	gx_color_index mask = 1 ;	567:4:17460:17483	4859123	2	True				
ANR	4859145	IdentifierDecl	mask = 1		4859123	0					
ANR	4859146	IdentifierDeclType	gx_color_index		4859123	0					
ANR	4859147	Identifier	mask		4859123	1					
ANR	4859148	AssignmentExpression	mask = 1		4859123	2		=			
ANR	4859149	Identifier	mask		4859123	0					
ANR	4859150	PrimaryExpression	1		4859123	1					
ANR	4859151	IdentifierDeclStatement	gx_color_index data ;	568:4:17489:17508	4859123	3	True				
ANR	4859152	IdentifierDecl	data		4859123	0					
ANR	4859153	IdentifierDeclType	gx_color_index		4859123	0					
ANR	4859154	Identifier	data		4859123	1					
ANR	4859155	IdentifierDeclStatement	"int i , j , length = 0 ;"	569:4:17514:17534	4859123	4	True				
ANR	4859156	IdentifierDecl	i		4859123	0					
ANR	4859157	IdentifierDeclType	int		4859123	0					
ANR	4859158	Identifier	i		4859123	1					
ANR	4859159	IdentifierDecl	j		4859123	1					
ANR	4859160	IdentifierDeclType	int		4859123	0					
ANR	4859161	Identifier	j		4859123	1					
ANR	4859162	IdentifierDecl	length = 0		4859123	2					
ANR	4859163	IdentifierDeclType	int		4859123	0					
ANR	4859164	Identifier	length		4859123	1					
ANR	4859165	AssignmentExpression	length = 0		4859123	2		=			
ANR	4859166	Identifier	length		4859123	0					
ANR	4859167	PrimaryExpression	0		4859123	1					
ANR	4859168	IdentifierDeclStatement	"int in_byte_loc = 0 , out_byte_loc = 0 ;"	570:4:17540:17577	4859123	5	True				
ANR	4859169	IdentifierDecl	in_byte_loc = 0		4859123	0					
ANR	4859170	IdentifierDeclType	int		4859123	0					
ANR	4859171	Identifier	in_byte_loc		4859123	1					
ANR	4859172	AssignmentExpression	in_byte_loc = 0		4859123	2		=			
ANR	4859173	Identifier	in_byte_loc		4859123	0					
ANR	4859174	PrimaryExpression	0		4859123	1					
ANR	4859175	IdentifierDecl	out_byte_loc = 0		4859123	1					
ANR	4859176	IdentifierDeclType	int		4859123	0					
ANR	4859177	Identifier	out_byte_loc		4859123	1					
ANR	4859178	AssignmentExpression	out_byte_loc = 0		4859123	2		=			
ANR	4859179	Identifier	out_byte_loc		4859123	0					
ANR	4859180	PrimaryExpression	0		4859123	1					
ANR	4859181	IdentifierDeclStatement	byte temp ;	571:4:17583:17592	4859123	6	True				
ANR	4859182	IdentifierDecl	temp		4859123	0					
ANR	4859183	IdentifierDeclType	byte		4859123	0					
ANR	4859184	Identifier	temp		4859123	1					
ANR	4859185	IdentifierDeclStatement	byte * out = dest ;	572:4:17598:17615	4859123	7	True				
ANR	4859186	IdentifierDecl	* out = dest		4859123	0					
ANR	4859187	IdentifierDeclType	byte *		4859123	0					
ANR	4859188	Identifier	out		4859123	1					
ANR	4859189	AssignmentExpression	* out = dest		4859123	2		=			
ANR	4859190	Identifier	dest		4859123	0					
ANR	4859191	Identifier	dest		4859123	1					
ANR	4859192	IdentifierDeclStatement	int max_bit_byte = 8 - bit_width ;	573:4:17621:17653	4859123	8	True				
ANR	4859193	IdentifierDecl	max_bit_byte = 8 - bit_width		4859123	0					
ANR	4859194	IdentifierDeclType	int		4859123	0					
ANR	4859195	Identifier	max_bit_byte		4859123	1					
ANR	4859196	AssignmentExpression	max_bit_byte = 8 - bit_width		4859123	2		=			
ANR	4859197	Identifier	max_bit_byte		4859123	0					
ANR	4859198	AdditiveExpression	8 - bit_width		4859123	1		-			
ANR	4859199	PrimaryExpression	8		4859123	0					
ANR	4859200	Identifier	bit_width		4859123	1					
ANR	4859201	ExpressionStatement	mask = ( mask << bit_width ) - 1	575:4:17660:17690	4859123	9	True				
ANR	4859202	AssignmentExpression	mask = ( mask << bit_width ) - 1		4859123	0		=			
ANR	4859203	Identifier	mask		4859123	0					
ANR	4859204	AdditiveExpression	( mask << bit_width ) - 1		4859123	1		-			
ANR	4859205	ShiftExpression	mask << bit_width		4859123	0		<<			
ANR	4859206	Identifier	mask		4859123	0					
ANR	4859207	Identifier	bit_width		4859123	1					
ANR	4859208	PrimaryExpression	1		4859123	1					
ANR	4859209	ForStatement	for ( i = 0 ; i < npixel ; i ++ )		4859123	10					
ANR	4859210	ForInit	i = 0 ;	576:9:17701:17704	4859123	0	True				
ANR	4859211	AssignmentExpression	i = 0		4859123	0		=			
ANR	4859212	Identifier	i		4859123	0					
ANR	4859213	PrimaryExpression	0		4859123	1					
ANR	4859214	Condition	i < npixel	576:14:17706:17713	4859123	1	True				
ANR	4859215	RelationalExpression	i < npixel		4859123	0		<			
ANR	4859216	Identifier	i		4859123	0					
ANR	4859217	Identifier	npixel		4859123	1					
ANR	4859218	PostIncDecOperationExpression	i ++	576:24:17716:17718	4859123	2	True				
ANR	4859219	Identifier	i		4859123	0					
ANR	4859220	IncDec	++		4859123	1					
ANR	4859221	CompoundStatement		13:29:411:411	4859123	3					
ANR	4859222	IfStatement	if ( ! in_nbyte )		4859123	0					
ANR	4859223	Condition	! in_nbyte	578:12:17768:17776	4859123	0	True				
ANR	4859224	UnaryOperationExpression	! in_nbyte		4859123	0					
ANR	4859225	UnaryOperator	!		4859123	0					
ANR	4859226	Identifier	in_nbyte		4859123	1					
ANR	4859227	CompoundStatement		15:23:469:469	4859123	1					
ANR	4859228	ExpressionStatement	data = * source	579:12:17825:17839	4859123	0	True				
ANR	4859229	AssignmentExpression	data = * source		4859123	0		=			
ANR	4859230	Identifier	data		4859123	0					
ANR	4859231	UnaryOperationExpression	* source		4859123	1					
ANR	4859232	UnaryOperator	*		4859123	0					
ANR	4859233	Identifier	source		4859123	1					
ANR	4859234	ExpressionStatement	data >>= in_byte_loc	580:12:17853:17873	4859123	1	True				
ANR	4859235	AssignmentExpression	data >>= in_byte_loc		4859123	0		>>=			
ANR	4859236	Identifier	data		4859123	0					
ANR	4859237	Identifier	in_byte_loc		4859123	1					
ANR	4859238	ExpressionStatement	in_byte_loc += depth	581:12:17887:17907	4859123	2	True				
ANR	4859239	AssignmentExpression	in_byte_loc += depth		4859123	0		+=			
ANR	4859240	Identifier	in_byte_loc		4859123	0					
ANR	4859241	Identifier	depth		4859123	1					
ANR	4859242	IfStatement	if ( in_byte_loc >= 8 )		4859123	3					
ANR	4859243	Condition	in_byte_loc >= 8	582:16:17925:17940	4859123	0	True				
ANR	4859244	RelationalExpression	in_byte_loc >= 8		4859123	0		>=			
ANR	4859245	Identifier	in_byte_loc		4859123	0					
ANR	4859246	PrimaryExpression	8		4859123	1					
ANR	4859247	CompoundStatement		19:34:633:633	4859123	1					
ANR	4859248	ExpressionStatement	in_byte_loc = 0	583:16:17989:18004	4859123	0	True				
ANR	4859249	AssignmentExpression	in_byte_loc = 0		4859123	0		=			
ANR	4859250	Identifier	in_byte_loc		4859123	0					
ANR	4859251	PrimaryExpression	0		4859123	1					
ANR	4859252	ExpressionStatement	source ++	584:16:18022:18030	4859123	1	True				
ANR	4859253	PostIncDecOperationExpression	source ++		4859123	0					
ANR	4859254	Identifier	source		4859123	0					
ANR	4859255	IncDec	++		4859123	1					
ANR	4859256	ElseStatement	else		4859123	0					
ANR	4859257	CompoundStatement		24:13:759:759	4859123	0					
ANR	4859258	ExpressionStatement	data = * source ++	588:12:18120:18136	4859123	0	True				
ANR	4859259	AssignmentExpression	data = * source ++		4859123	0		=			
ANR	4859260	Identifier	data		4859123	0					
ANR	4859261	UnaryOperationExpression	* source ++		4859123	1					
ANR	4859262	UnaryOperator	*		4859123	0					
ANR	4859263	PostIncDecOperationExpression	source ++		4859123	1					
ANR	4859264	Identifier	source		4859123	0					
ANR	4859265	IncDec	++		4859123	1					
ANR	4859266	ForStatement	for ( j = 1 ; j < in_nbyte ; j ++ )		4859123	1					
ANR	4859267	ForInit	j = 1 ;	589:17:18155:18158	4859123	0	True				
ANR	4859268	AssignmentExpression	j = 1		4859123	0		=			
ANR	4859269	Identifier	j		4859123	0					
ANR	4859270	PrimaryExpression	1		4859123	1					
ANR	4859271	Condition	j < in_nbyte	589:22:18160:18169	4859123	1	True				
ANR	4859272	RelationalExpression	j < in_nbyte		4859123	0		<			
ANR	4859273	Identifier	j		4859123	0					
ANR	4859274	Identifier	in_nbyte		4859123	1					
ANR	4859275	PostIncDecOperationExpression	j ++	589:34:18172:18174	4859123	2	True				
ANR	4859276	Identifier	j		4859123	0					
ANR	4859277	IncDec	++		4859123	1					
ANR	4859278	ExpressionStatement	data = ( data << 8 ) + * source ++	590:16:18193:18223	4859123	3	True				
ANR	4859279	AssignmentExpression	data = ( data << 8 ) + * source ++		4859123	0		=			
ANR	4859280	Identifier	data		4859123	0					
ANR	4859281	AdditiveExpression	( data << 8 ) + * source ++		4859123	1		+			
ANR	4859282	ShiftExpression	data << 8		4859123	0		<<			
ANR	4859283	Identifier	data		4859123	0					
ANR	4859284	PrimaryExpression	8		4859123	1					
ANR	4859285	UnaryOperationExpression	* source ++		4859123	1					
ANR	4859286	UnaryOperator	*		4859123	0					
ANR	4859287	PostIncDecOperationExpression	source ++		4859123	1					
ANR	4859288	Identifier	source		4859123	0					
ANR	4859289	IncDec	++		4859123	1					
ANR	4859290	ExpressionStatement	data >>= first_bit	592:8:18243:18261	4859123	1	True				
ANR	4859291	AssignmentExpression	data >>= first_bit		4859123	0		>>=			
ANR	4859292	Identifier	data		4859123	0					
ANR	4859293	Identifier	first_bit		4859123	1					
ANR	4859294	ExpressionStatement	data &= mask	593:8:18271:18283	4859123	2	True				
ANR	4859295	AssignmentExpression	data &= mask		4859123	0		&=			
ANR	4859296	Identifier	data		4859123	0					
ANR	4859297	Identifier	mask		4859123	1					
ANR	4859298	IfStatement	if ( ! out_nbyte )		4859123	3					
ANR	4859299	Condition	! out_nbyte	596:12:18332:18341	4859123	0	True				
ANR	4859300	UnaryOperationExpression	! out_nbyte		4859123	0					
ANR	4859301	UnaryOperator	!		4859123	0					
ANR	4859302	Identifier	out_nbyte		4859123	1					
ANR	4859303	CompoundStatement		33:24:1034:1034	4859123	1					
ANR	4859304	ExpressionStatement	temp = * out & ~ ( mask << out_byte_loc )	597:12:18390:18427	4859123	0	True				
ANR	4859305	AssignmentExpression	temp = * out & ~ ( mask << out_byte_loc )		4859123	0		=			
ANR	4859306	Identifier	temp		4859123	0					
ANR	4859307	BitAndExpression	* out & ~ ( mask << out_byte_loc )		4859123	1		&			
ANR	4859308	UnaryOperationExpression	* out		4859123	0					
ANR	4859309	UnaryOperator	*		4859123	0					
ANR	4859310	Identifier	out		4859123	1					
ANR	4859311	UnaryOperationExpression	~ ( mask << out_byte_loc )		4859123	1					
ANR	4859312	UnaryOperator	~		4859123	0					
ANR	4859313	ShiftExpression	mask << out_byte_loc		4859123	1		<<			
ANR	4859314	Identifier	mask		4859123	0					
ANR	4859315	Identifier	out_byte_loc		4859123	1					
ANR	4859316	ExpressionStatement	* out = temp | ( data << out_byte_loc )	598:12:18441:18477	4859123	1	True				
ANR	4859317	AssignmentExpression	* out = temp | ( data << out_byte_loc )		4859123	0		=			
ANR	4859318	UnaryOperationExpression	* out		4859123	0					
ANR	4859319	UnaryOperator	*		4859123	0					
ANR	4859320	Identifier	out		4859123	1					
ANR	4859321	InclusiveOrExpression	temp | ( data << out_byte_loc )		4859123	1		|			
ANR	4859322	Identifier	temp		4859123	0					
ANR	4859323	ShiftExpression	data << out_byte_loc		4859123	1		<<			
ANR	4859324	Identifier	data		4859123	0					
ANR	4859325	Identifier	out_byte_loc		4859123	1					
ANR	4859326	ExpressionStatement	out_byte_loc += bit_width	599:12:18491:18516	4859123	2	True				
ANR	4859327	AssignmentExpression	out_byte_loc += bit_width		4859123	0		+=			
ANR	4859328	Identifier	out_byte_loc		4859123	0					
ANR	4859329	Identifier	bit_width		4859123	1					
ANR	4859330	IfStatement	if ( out_byte_loc > max_bit_byte )		4859123	3					
ANR	4859331	Condition	out_byte_loc > max_bit_byte	600:16:18534:18560	4859123	0	True				
ANR	4859332	RelationalExpression	out_byte_loc > max_bit_byte		4859123	0		>			
ANR	4859333	Identifier	out_byte_loc		4859123	0					
ANR	4859334	Identifier	max_bit_byte		4859123	1					
ANR	4859335	CompoundStatement		37:45:1253:1253	4859123	1					
ANR	4859336	ExpressionStatement	out_byte_loc = 0	601:16:18609:18625	4859123	0	True				
ANR	4859337	AssignmentExpression	out_byte_loc = 0		4859123	0		=			
ANR	4859338	Identifier	out_byte_loc		4859123	0					
ANR	4859339	PrimaryExpression	0		4859123	1					
ANR	4859340	ExpressionStatement	out ++	602:16:18643:18648	4859123	1	True				
ANR	4859341	PostIncDecOperationExpression	out ++		4859123	0					
ANR	4859342	Identifier	out		4859123	0					
ANR	4859343	IncDec	++		4859123	1					
ANR	4859344	ElseStatement	else		4859123	0					
ANR	4859345	CompoundStatement		42:13:1377:1377	4859123	0					
ANR	4859346	ExpressionStatement	* out ++ = data >> ( ( out_nbyte - 1 ) * 8 )	606:12:18738:18776	4859123	0	True				
ANR	4859347	AssignmentExpression	* out ++ = data >> ( ( out_nbyte - 1 ) * 8 )		4859123	0		=			
ANR	4859348	UnaryOperationExpression	* out ++		4859123	0					
ANR	4859349	UnaryOperator	*		4859123	0					
ANR	4859350	PostIncDecOperationExpression	out ++		4859123	1					
ANR	4859351	Identifier	out		4859123	0					
ANR	4859352	IncDec	++		4859123	1					
ANR	4859353	ShiftExpression	data >> ( ( out_nbyte - 1 ) * 8 )		4859123	1		>>			
ANR	4859354	Identifier	data		4859123	0					
ANR	4859355	MultiplicativeExpression	( out_nbyte - 1 ) * 8		4859123	1		*			
ANR	4859356	AdditiveExpression	out_nbyte - 1		4859123	0		-			
ANR	4859357	Identifier	out_nbyte		4859123	0					
ANR	4859358	PrimaryExpression	1		4859123	1					
ANR	4859359	PrimaryExpression	8		4859123	1					
ANR	4859360	ForStatement	for ( j = 1 ; j < out_nbyte ; j ++ )		4859123	1					
ANR	4859361	ForInit	j = 1 ;	607:17:18795:18798	4859123	0	True				
ANR	4859362	AssignmentExpression	j = 1		4859123	0		=			
ANR	4859363	Identifier	j		4859123	0					
ANR	4859364	PrimaryExpression	1		4859123	1					
ANR	4859365	Condition	j < out_nbyte	607:22:18800:18810	4859123	1	True				
ANR	4859366	RelationalExpression	j < out_nbyte		4859123	0		<			
ANR	4859367	Identifier	j		4859123	0					
ANR	4859368	Identifier	out_nbyte		4859123	1					
ANR	4859369	PostIncDecOperationExpression	j ++	607:35:18813:18815	4859123	2	True				
ANR	4859370	Identifier	j		4859123	0					
ANR	4859371	IncDec	++		4859123	1					
ANR	4859372	CompoundStatement		44:40:1508:1508	4859123	3					
ANR	4859373	ExpressionStatement	* out ++ = data >> ( ( out_nbyte - 1 - j ) * 8 )	608:16:18836:18878	4859123	0	True				
ANR	4859374	AssignmentExpression	* out ++ = data >> ( ( out_nbyte - 1 - j ) * 8 )		4859123	0		=			
ANR	4859375	UnaryOperationExpression	* out ++		4859123	0					
ANR	4859376	UnaryOperator	*		4859123	0					
ANR	4859377	PostIncDecOperationExpression	out ++		4859123	1					
ANR	4859378	Identifier	out		4859123	0					
ANR	4859379	IncDec	++		4859123	1					
ANR	4859380	ShiftExpression	data >> ( ( out_nbyte - 1 - j ) * 8 )		4859123	1		>>			
ANR	4859381	Identifier	data		4859123	0					
ANR	4859382	MultiplicativeExpression	( out_nbyte - 1 - j ) * 8		4859123	1		*			
ANR	4859383	AdditiveExpression	out_nbyte - 1 - j		4859123	0		-			
ANR	4859384	Identifier	out_nbyte		4859123	0					
ANR	4859385	AdditiveExpression	1 - j		4859123	1		-			
ANR	4859386	PrimaryExpression	1		4859123	0					
ANR	4859387	Identifier	j		4859123	1					
ANR	4859388	PrimaryExpression	8		4859123	1					
ANR	4859389	ExpressionStatement	length = out - dest	613:4:18978:18997	4859123	11	True				
ANR	4859390	AssignmentExpression	length = out - dest		4859123	0		=			
ANR	4859391	Identifier	length		4859123	0					
ANR	4859392	AdditiveExpression	out - dest		4859123	1		-			
ANR	4859393	Identifier	out		4859123	0					
ANR	4859394	Identifier	dest		4859123	1					
ANR	4859395	IfStatement	if ( out_byte_loc )		4859123	12					
ANR	4859396	Condition	out_byte_loc	614:8:19007:19018	4859123	0	True				
ANR	4859397	Identifier	out_byte_loc		4859123	0					
ANR	4859398	ExpressionStatement	length ++	615:8:19068:19076	4859123	1	True				
ANR	4859399	PostIncDecOperationExpression	length ++		4859123	0					
ANR	4859400	Identifier	length		4859123	0					
ANR	4859401	IncDec	++		4859123	1					
ANR	4859402	ReturnStatement	return length ;	616:4:19082:19095	4859123	13	True				
ANR	4859403	Identifier	length		4859123	0					
ANR	4859404	ReturnType	static int		4859123	1					
ANR	4859405	Identifier	repack_data		4859123	2					
ANR	4859406	ParameterList	"byte * source , byte * dest , int depth , int first_bit , int bit_width , int npixel"		4859123	3					
ANR	4859407	Parameter	byte * source	562:12:17212:17224	4859123	0	True				
ANR	4859408	ParameterType	byte *		4859123	0					
ANR	4859409	Identifier	source		4859123	1					
ANR	4859410	Parameter	byte * dest	562:27:17227:17237	4859123	1	True				
ANR	4859411	ParameterType	byte *		4859123	0					
ANR	4859412	Identifier	dest		4859123	1					
ANR	4859413	Parameter	int depth	562:40:17240:17248	4859123	2	True				
ANR	4859414	ParameterType	int		4859123	0					
ANR	4859415	Identifier	depth		4859123	1					
ANR	4859416	Parameter	int first_bit	562:51:17251:17263	4859123	3	True				
ANR	4859417	ParameterType	int		4859123	0					
ANR	4859418	Identifier	first_bit		4859123	1					
ANR	4859419	Parameter	int bit_width	563:16:17282:17294	4859123	4	True				
ANR	4859420	ParameterType	int		4859123	0					
ANR	4859421	Identifier	bit_width		4859123	1					
ANR	4859422	Parameter	int npixel	563:31:17297:17306	4859123	5	True				
ANR	4859423	ParameterType	int		4859123	0					
ANR	4859424	Identifier	npixel		4859123	1					
ANR	4859425	CFGEntryNode	ENTRY		4859123		True				
ANR	4859426	CFGExitNode	EXIT		4859123		True				
ANR	4859427	Symbol	* out ++		4859123						
ANR	4859428	Symbol	temp		4859123						
ANR	4859429	Symbol	out_nbyte		4859123						
ANR	4859430	Symbol	data		4859123						
ANR	4859431	Symbol	npixel		4859123						
ANR	4859432	Symbol	length		4859123						
ANR	4859433	Symbol	i		4859123						
ANR	4859434	Symbol	j		4859123						
ANR	4859435	Symbol	source		4859123						
ANR	4859436	Symbol	dest		4859123						
ANR	4859437	Symbol	first_bit		4859123						
ANR	4859438	Symbol	bit_width		4859123						
ANR	4859439	Symbol	out		4859123						
ANR	4859440	Symbol	max_bit_byte		4859123						
ANR	4859441	Symbol	depth		4859123						
ANR	4859442	Symbol	out_byte_loc		4859123						
ANR	4859443	Symbol	in_byte_loc		4859123						
ANR	4859444	Symbol	* source		4859123						
ANR	4859445	Symbol	* out		4859123						
ANR	4859446	Symbol	* source ++		4859123						
ANR	4859447	Symbol	in_nbyte		4859123						
ANR	4859448	Symbol	mask		4859123						
ANR	4859449	Function	xcf_open_profile	620:0:19115:20073							
ANR	4859450	FunctionDef	"xcf_open_profile (const char * profile_out_fn , cmm_profile_t * icc_profile , gcmmhlink_t icc_link , gs_memory_t * memory)"		4859449	0					
ANR	4859451	CompoundStatement		622:0:19242:20073	4859449	0					
ANR	4859452	IdentifierDeclStatement	gsicc_rendering_param_t rendering_params ;	624:4:19249:19289	4859449	0	True				
ANR	4859453	IdentifierDecl	rendering_params		4859449	0					
ANR	4859454	IdentifierDeclType	gsicc_rendering_param_t		4859449	0					
ANR	4859455	Identifier	rendering_params		4859449	1					
ANR	4859456	ExpressionStatement	"icc_profile = gsicc_get_profile_handle_file ( profile_out_fn , strlen ( profile_out_fn ) , memory )"	626:4:19296:19407	4859449	1	True				
ANR	4859457	AssignmentExpression	"icc_profile = gsicc_get_profile_handle_file ( profile_out_fn , strlen ( profile_out_fn ) , memory )"		4859449	0		=			
ANR	4859458	Identifier	icc_profile		4859449	0					
ANR	4859459	CallExpression	"gsicc_get_profile_handle_file ( profile_out_fn , strlen ( profile_out_fn ) , memory )"		4859449	1					
ANR	4859460	Callee	gsicc_get_profile_handle_file		4859449	0					
ANR	4859461	Identifier	gsicc_get_profile_handle_file		4859449	0					
ANR	4859462	ArgumentList	profile_out_fn		4859449	1					
ANR	4859463	Argument	profile_out_fn		4859449	0					
ANR	4859464	Identifier	profile_out_fn		4859449	0					
ANR	4859465	Argument	strlen ( profile_out_fn )		4859449	1					
ANR	4859466	CallExpression	strlen ( profile_out_fn )		4859449	0					
ANR	4859467	Callee	strlen		4859449	0					
ANR	4859468	Identifier	strlen		4859449	0					
ANR	4859469	ArgumentList	profile_out_fn		4859449	1					
ANR	4859470	Argument	profile_out_fn		4859449	0					
ANR	4859471	Identifier	profile_out_fn		4859449	0					
ANR	4859472	Argument	memory		4859449	2					
ANR	4859473	Identifier	memory		4859449	0					
ANR	4859474	IfStatement	if ( icc_profile == NULL )		4859449	2					
ANR	4859475	Condition	icc_profile == NULL	629:8:19418:19436	4859449	0	True				
ANR	4859476	EqualityExpression	icc_profile == NULL		4859449	0		==			
ANR	4859477	Identifier	icc_profile		4859449	0					
ANR	4859478	Identifier	NULL		4859449	1					
ANR	4859479	ReturnStatement	"return gs_throw ( - 1 , ""Could not create profile for xcf device"" ) ;"	630:8:19447:19509	4859449	1	True				
ANR	4859480	CallExpression	"gs_throw ( - 1 , ""Could not create profile for xcf device"" )"		4859449	0					
ANR	4859481	Callee	gs_throw		4859449	0					
ANR	4859482	Identifier	gs_throw		4859449	0					
ANR	4859483	ArgumentList	- 1		4859449	1					
ANR	4859484	Argument	- 1		4859449	0					
ANR	4859485	UnaryOperationExpression	- 1		4859449	0					
ANR	4859486	UnaryOperator	-		4859449	0					
ANR	4859487	PrimaryExpression	1		4859449	1					
ANR	4859488	Argument	"""Could not create profile for xcf device"""		4859449	1					
ANR	4859489	PrimaryExpression	"""Could not create profile for xcf device"""		4859449	0					
ANR	4859490	ExpressionStatement	rendering_params . black_point_comp = gsBPNOTSPECIFIED	634:4:19559:19611	4859449	3	True				
ANR	4859491	AssignmentExpression	rendering_params . black_point_comp = gsBPNOTSPECIFIED		4859449	0		=			
ANR	4859492	MemberAccess	rendering_params . black_point_comp		4859449	0					
ANR	4859493	Identifier	rendering_params		4859449	0					
ANR	4859494	Identifier	black_point_comp		4859449	1					
ANR	4859495	Identifier	gsBPNOTSPECIFIED		4859449	1					
ANR	4859496	ExpressionStatement	rendering_params . graphics_type_tag = GS_UNKNOWN_TAG	635:4:19617:19668	4859449	4	True				
ANR	4859497	AssignmentExpression	rendering_params . graphics_type_tag = GS_UNKNOWN_TAG		4859449	0		=			
ANR	4859498	MemberAccess	rendering_params . graphics_type_tag		4859449	0					
ANR	4859499	Identifier	rendering_params		4859449	0					
ANR	4859500	Identifier	graphics_type_tag		4859449	1					
ANR	4859501	Identifier	GS_UNKNOWN_TAG		4859449	1					
ANR	4859502	ExpressionStatement	rendering_params . rendering_intent = gsPERCEPTUAL	636:4:19698:19746	4859449	5	True				
ANR	4859503	AssignmentExpression	rendering_params . rendering_intent = gsPERCEPTUAL		4859449	0		=			
ANR	4859504	MemberAccess	rendering_params . rendering_intent		4859449	0					
ANR	4859505	Identifier	rendering_params		4859449	0					
ANR	4859506	Identifier	rendering_intent		4859449	1					
ANR	4859507	Identifier	gsPERCEPTUAL		4859449	1					
ANR	4859508	ExpressionStatement	"icc_link = gscms_get_link ( icc_profile , NULL , & rendering_params , 0 , memory )"	639:4:19846:19950	4859449	6	True				
ANR	4859509	AssignmentExpression	"icc_link = gscms_get_link ( icc_profile , NULL , & rendering_params , 0 , memory )"		4859449	0		=			
ANR	4859510	Identifier	icc_link		4859449	0					
ANR	4859511	CallExpression	"gscms_get_link ( icc_profile , NULL , & rendering_params , 0 , memory )"		4859449	1					
ANR	4859512	Callee	gscms_get_link		4859449	0					
ANR	4859513	Identifier	gscms_get_link		4859449	0					
ANR	4859514	ArgumentList	icc_profile		4859449	1					
ANR	4859515	Argument	icc_profile		4859449	0					
ANR	4859516	Identifier	icc_profile		4859449	0					
ANR	4859517	Argument	NULL		4859449	1					
ANR	4859518	Identifier	NULL		4859449	0					
ANR	4859519	Argument	& rendering_params		4859449	2					
ANR	4859520	UnaryOperationExpression	& rendering_params		4859449	0					
ANR	4859521	UnaryOperator	&		4859449	0					
ANR	4859522	Identifier	rendering_params		4859449	1					
ANR	4859523	Argument	0		4859449	3					
ANR	4859524	PrimaryExpression	0		4859449	0					
ANR	4859525	Argument	memory		4859449	4					
ANR	4859526	Identifier	memory		4859449	0					
ANR	4859527	IfStatement	if ( icc_link == NULL )		4859449	7					
ANR	4859528	Condition	icc_link == NULL	642:8:19961:19976	4859449	0	True				
ANR	4859529	EqualityExpression	icc_link == NULL		4859449	0		==			
ANR	4859530	Identifier	icc_link		4859449	0					
ANR	4859531	Identifier	NULL		4859449	1					
ANR	4859532	ReturnStatement	"return gs_throw ( - 1 , ""Could not create link handle for xdev device"" ) ;"	643:8:19987:20054	4859449	1	True				
ANR	4859533	CallExpression	"gs_throw ( - 1 , ""Could not create link handle for xdev device"" )"		4859449	0					
ANR	4859534	Callee	gs_throw		4859449	0					
ANR	4859535	Identifier	gs_throw		4859449	0					
ANR	4859536	ArgumentList	- 1		4859449	1					
ANR	4859537	Argument	- 1		4859449	0					
ANR	4859538	UnaryOperationExpression	- 1		4859449	0					
ANR	4859539	UnaryOperator	-		4859449	0					
ANR	4859540	PrimaryExpression	1		4859449	1					
ANR	4859541	Argument	"""Could not create link handle for xdev device"""		4859449	1					
ANR	4859542	PrimaryExpression	"""Could not create link handle for xdev device"""		4859449	0					
ANR	4859543	ReturnStatement	return ( 0 ) ;	645:4:20061:20070	4859449	8	True				
ANR	4859544	PrimaryExpression	0		4859449	0					
ANR	4859545	ReturnType	static int		4859449	1					
ANR	4859546	Identifier	xcf_open_profile		4859449	2					
ANR	4859547	ParameterList	"const char * profile_out_fn , cmm_profile_t * icc_profile , gcmmhlink_t icc_link , gs_memory_t * memory"		4859449	3					
ANR	4859548	Parameter	const char * profile_out_fn	621:17:19143:19168	4859449	0	True				
ANR	4859549	ParameterType	const char *		4859449	0					
ANR	4859550	Identifier	profile_out_fn		4859449	1					
ANR	4859551	Parameter	cmm_profile_t * icc_profile	621:45:19171:19196	4859449	1	True				
ANR	4859552	ParameterType	cmm_profile_t *		4859449	0					
ANR	4859553	Identifier	icc_profile		4859449	1					
ANR	4859554	Parameter	gcmmhlink_t icc_link	621:73:19199:19218	4859449	2	True				
ANR	4859555	ParameterType	gcmmhlink_t		4859449	0					
ANR	4859556	Identifier	icc_link		4859449	1					
ANR	4859557	Parameter	gs_memory_t * memory	621:95:19221:19239	4859449	3	True				
ANR	4859558	ParameterType	gs_memory_t *		4859449	0					
ANR	4859559	Identifier	memory		4859449	1					
ANR	4859560	CFGEntryNode	ENTRY		4859449		True				
ANR	4859561	CFGExitNode	EXIT		4859449		True				
ANR	4859562	Symbol	rendering_params . graphics_type_tag		4859449						
ANR	4859563	Symbol	memory		4859449						
ANR	4859564	Symbol	NULL		4859449						
ANR	4859565	Symbol	gsPERCEPTUAL		4859449						
ANR	4859566	Symbol	rendering_params . rendering_intent		4859449						
ANR	4859567	Symbol	gs_throw		4859449						
ANR	4859568	Symbol	GS_UNKNOWN_TAG		4859449						
ANR	4859569	Symbol	rendering_params		4859449						
ANR	4859570	Symbol	icc_link		4859449						
ANR	4859571	Symbol	strlen		4859449						
ANR	4859572	Symbol	gsicc_get_profile_handle_file		4859449						
ANR	4859573	Symbol	profile_out_fn		4859449						
ANR	4859574	Symbol	gsBPNOTSPECIFIED		4859449						
ANR	4859575	Symbol	gscms_get_link		4859449						
ANR	4859576	Symbol	icc_profile		4859449						
ANR	4859577	Symbol	& rendering_params		4859449						
ANR	4859578	Symbol	rendering_params . black_point_comp		4859449						
ANR	4859579	Function	xcf_open_profiles	649:0:20076:20783							
ANR	4859580	FunctionDef	xcf_open_profiles (xcf_device * xdev)		4859579	0					
ANR	4859581	CompoundStatement		651:0:20123:20783	4859579	0					
ANR	4859582	IdentifierDeclStatement	int code = 0 ;	652:4:20129:20141	4859579	0	True				
ANR	4859583	IdentifierDecl	code = 0		4859579	0					
ANR	4859584	IdentifierDeclType	int		4859579	0					
ANR	4859585	Identifier	code		4859579	1					
ANR	4859586	AssignmentExpression	code = 0		4859579	2		=			
ANR	4859587	Identifier	code		4859579	0					
ANR	4859588	PrimaryExpression	0		4859579	1					
ANR	4859589	IfStatement	if ( xdev -> output_icc_link == NULL && xdev -> profile_out_fn [ 0 ] )		4859579	1					
ANR	4859590	Condition	xdev -> output_icc_link == NULL && xdev -> profile_out_fn [ 0 ]	654:8:20152:20207	4859579	0	True				
ANR	4859591	AndExpression	xdev -> output_icc_link == NULL && xdev -> profile_out_fn [ 0 ]		4859579	0		&&			
ANR	4859592	EqualityExpression	xdev -> output_icc_link == NULL		4859579	0		==			
ANR	4859593	PtrMemberAccess	xdev -> output_icc_link		4859579	0					
ANR	4859594	Identifier	xdev		4859579	0					
ANR	4859595	Identifier	output_icc_link		4859579	1					
ANR	4859596	Identifier	NULL		4859579	1					
ANR	4859597	ArrayIndexing	xdev -> profile_out_fn [ 0 ]		4859579	1					
ANR	4859598	PtrMemberAccess	xdev -> profile_out_fn		4859579	0					
ANR	4859599	Identifier	xdev		4859579	0					
ANR	4859600	Identifier	profile_out_fn		4859579	1					
ANR	4859601	PrimaryExpression	0		4859579	1					
ANR	4859602	CompoundStatement		4:66:86:86	4859579	1					
ANR	4859603	ExpressionStatement	"code = xcf_open_profile ( xdev -> profile_out_fn , xdev -> output_profile , xdev -> output_icc_link , xdev -> memory )"	656:8:20221:20337	4859579	0	True				
ANR	4859604	AssignmentExpression	"code = xcf_open_profile ( xdev -> profile_out_fn , xdev -> output_profile , xdev -> output_icc_link , xdev -> memory )"		4859579	0		=			
ANR	4859605	Identifier	code		4859579	0					
ANR	4859606	CallExpression	"xcf_open_profile ( xdev -> profile_out_fn , xdev -> output_profile , xdev -> output_icc_link , xdev -> memory )"		4859579	1					
ANR	4859607	Callee	xcf_open_profile		4859579	0					
ANR	4859608	Identifier	xcf_open_profile		4859579	0					
ANR	4859609	ArgumentList	xdev -> profile_out_fn		4859579	1					
ANR	4859610	Argument	xdev -> profile_out_fn		4859579	0					
ANR	4859611	PtrMemberAccess	xdev -> profile_out_fn		4859579	0					
ANR	4859612	Identifier	xdev		4859579	0					
ANR	4859613	Identifier	profile_out_fn		4859579	1					
ANR	4859614	Argument	xdev -> output_profile		4859579	1					
ANR	4859615	PtrMemberAccess	xdev -> output_profile		4859579	0					
ANR	4859616	Identifier	xdev		4859579	0					
ANR	4859617	Identifier	output_profile		4859579	1					
ANR	4859618	Argument	xdev -> output_icc_link		4859579	2					
ANR	4859619	PtrMemberAccess	xdev -> output_icc_link		4859579	0					
ANR	4859620	Identifier	xdev		4859579	0					
ANR	4859621	Identifier	output_icc_link		4859579	1					
ANR	4859622	Argument	xdev -> memory		4859579	3					
ANR	4859623	PtrMemberAccess	xdev -> memory		4859579	0					
ANR	4859624	Identifier	xdev		4859579	0					
ANR	4859625	Identifier	memory		4859579	1					
ANR	4859626	IfStatement	if ( code >= 0 && xdev -> rgb_icc_link == NULL && xdev -> profile_rgb_fn [ 0 ] )		4859579	2					
ANR	4859627	Condition	code >= 0 && xdev -> rgb_icc_link == NULL && xdev -> profile_rgb_fn [ 0 ]	661:8:20355:20420	4859579	0	True				
ANR	4859628	AndExpression	code >= 0 && xdev -> rgb_icc_link == NULL && xdev -> profile_rgb_fn [ 0 ]		4859579	0		&&			
ANR	4859629	RelationalExpression	code >= 0		4859579	0		>=			
ANR	4859630	Identifier	code		4859579	0					
ANR	4859631	PrimaryExpression	0		4859579	1					
ANR	4859632	AndExpression	xdev -> rgb_icc_link == NULL && xdev -> profile_rgb_fn [ 0 ]		4859579	1		&&			
ANR	4859633	EqualityExpression	xdev -> rgb_icc_link == NULL		4859579	0		==			
ANR	4859634	PtrMemberAccess	xdev -> rgb_icc_link		4859579	0					
ANR	4859635	Identifier	xdev		4859579	0					
ANR	4859636	Identifier	rgb_icc_link		4859579	1					
ANR	4859637	Identifier	NULL		4859579	1					
ANR	4859638	ArrayIndexing	xdev -> profile_rgb_fn [ 0 ]		4859579	1					
ANR	4859639	PtrMemberAccess	xdev -> profile_rgb_fn		4859579	0					
ANR	4859640	Identifier	xdev		4859579	0					
ANR	4859641	Identifier	profile_rgb_fn		4859579	1					
ANR	4859642	PrimaryExpression	0		4859579	1					
ANR	4859643	CompoundStatement		11:76:299:299	4859579	1					
ANR	4859644	ExpressionStatement	"code = xcf_open_profile ( xdev -> profile_rgb_fn , xdev -> rgb_profile , xdev -> rgb_icc_link , xdev -> memory )"	663:8:20434:20544	4859579	0	True				
ANR	4859645	AssignmentExpression	"code = xcf_open_profile ( xdev -> profile_rgb_fn , xdev -> rgb_profile , xdev -> rgb_icc_link , xdev -> memory )"		4859579	0		=			
ANR	4859646	Identifier	code		4859579	0					
ANR	4859647	CallExpression	"xcf_open_profile ( xdev -> profile_rgb_fn , xdev -> rgb_profile , xdev -> rgb_icc_link , xdev -> memory )"		4859579	1					
ANR	4859648	Callee	xcf_open_profile		4859579	0					
ANR	4859649	Identifier	xcf_open_profile		4859579	0					
ANR	4859650	ArgumentList	xdev -> profile_rgb_fn		4859579	1					
ANR	4859651	Argument	xdev -> profile_rgb_fn		4859579	0					
ANR	4859652	PtrMemberAccess	xdev -> profile_rgb_fn		4859579	0					
ANR	4859653	Identifier	xdev		4859579	0					
ANR	4859654	Identifier	profile_rgb_fn		4859579	1					
ANR	4859655	Argument	xdev -> rgb_profile		4859579	1					
ANR	4859656	PtrMemberAccess	xdev -> rgb_profile		4859579	0					
ANR	4859657	Identifier	xdev		4859579	0					
ANR	4859658	Identifier	rgb_profile		4859579	1					
ANR	4859659	Argument	xdev -> rgb_icc_link		4859579	2					
ANR	4859660	PtrMemberAccess	xdev -> rgb_icc_link		4859579	0					
ANR	4859661	Identifier	xdev		4859579	0					
ANR	4859662	Identifier	rgb_icc_link		4859579	1					
ANR	4859663	Argument	xdev -> memory		4859579	3					
ANR	4859664	PtrMemberAccess	xdev -> memory		4859579	0					
ANR	4859665	Identifier	xdev		4859579	0					
ANR	4859666	Identifier	memory		4859579	1					
ANR	4859667	IfStatement	if ( code >= 0 && xdev -> cmyk_icc_link == NULL && xdev -> profile_cmyk_fn [ 0 ] )		4859579	3					
ANR	4859668	Condition	code >= 0 && xdev -> cmyk_icc_link == NULL && xdev -> profile_cmyk_fn [ 0 ]	668:8:20562:20629	4859579	0	True				
ANR	4859669	AndExpression	code >= 0 && xdev -> cmyk_icc_link == NULL && xdev -> profile_cmyk_fn [ 0 ]		4859579	0		&&			
ANR	4859670	RelationalExpression	code >= 0		4859579	0		>=			
ANR	4859671	Identifier	code		4859579	0					
ANR	4859672	PrimaryExpression	0		4859579	1					
ANR	4859673	AndExpression	xdev -> cmyk_icc_link == NULL && xdev -> profile_cmyk_fn [ 0 ]		4859579	1		&&			
ANR	4859674	EqualityExpression	xdev -> cmyk_icc_link == NULL		4859579	0		==			
ANR	4859675	PtrMemberAccess	xdev -> cmyk_icc_link		4859579	0					
ANR	4859676	Identifier	xdev		4859579	0					
ANR	4859677	Identifier	cmyk_icc_link		4859579	1					
ANR	4859678	Identifier	NULL		4859579	1					
ANR	4859679	ArrayIndexing	xdev -> profile_cmyk_fn [ 0 ]		4859579	1					
ANR	4859680	PtrMemberAccess	xdev -> profile_cmyk_fn		4859579	0					
ANR	4859681	Identifier	xdev		4859579	0					
ANR	4859682	Identifier	profile_cmyk_fn		4859579	1					
ANR	4859683	PrimaryExpression	0		4859579	1					
ANR	4859684	CompoundStatement		18:78:508:508	4859579	1					
ANR	4859685	ExpressionStatement	"code = xcf_open_profile ( xdev -> profile_cmyk_fn , xdev -> cmyk_profile , xdev -> cmyk_icc_link , xdev -> memory )"	670:8:20643:20756	4859579	0	True				
ANR	4859686	AssignmentExpression	"code = xcf_open_profile ( xdev -> profile_cmyk_fn , xdev -> cmyk_profile , xdev -> cmyk_icc_link , xdev -> memory )"		4859579	0		=			
ANR	4859687	Identifier	code		4859579	0					
ANR	4859688	CallExpression	"xcf_open_profile ( xdev -> profile_cmyk_fn , xdev -> cmyk_profile , xdev -> cmyk_icc_link , xdev -> memory )"		4859579	1					
ANR	4859689	Callee	xcf_open_profile		4859579	0					
ANR	4859690	Identifier	xcf_open_profile		4859579	0					
ANR	4859691	ArgumentList	xdev -> profile_cmyk_fn		4859579	1					
ANR	4859692	Argument	xdev -> profile_cmyk_fn		4859579	0					
ANR	4859693	PtrMemberAccess	xdev -> profile_cmyk_fn		4859579	0					
ANR	4859694	Identifier	xdev		4859579	0					
ANR	4859695	Identifier	profile_cmyk_fn		4859579	1					
ANR	4859696	Argument	xdev -> cmyk_profile		4859579	1					
ANR	4859697	PtrMemberAccess	xdev -> cmyk_profile		4859579	0					
ANR	4859698	Identifier	xdev		4859579	0					
ANR	4859699	Identifier	cmyk_profile		4859579	1					
ANR	4859700	Argument	xdev -> cmyk_icc_link		4859579	2					
ANR	4859701	PtrMemberAccess	xdev -> cmyk_icc_link		4859579	0					
ANR	4859702	Identifier	xdev		4859579	0					
ANR	4859703	Identifier	cmyk_icc_link		4859579	1					
ANR	4859704	Argument	xdev -> memory		4859579	3					
ANR	4859705	PtrMemberAccess	xdev -> memory		4859579	0					
ANR	4859706	Identifier	xdev		4859579	0					
ANR	4859707	Identifier	memory		4859579	1					
ANR	4859708	ReturnStatement	return code ;	675:4:20770:20781	4859579	4	True				
ANR	4859709	Identifier	code		4859579	0					
ANR	4859710	ReturnType	static int		4859579	1					
ANR	4859711	Identifier	xcf_open_profiles		4859579	2					
ANR	4859712	ParameterList	xcf_device * xdev		4859579	3					
ANR	4859713	Parameter	xcf_device * xdev	650:18:20105:20120	4859579	0	True				
ANR	4859714	ParameterType	xcf_device *		4859579	0					
ANR	4859715	Identifier	xdev		4859579	1					
ANR	4859716	CFGEntryNode	ENTRY		4859579		True				
ANR	4859717	CFGExitNode	EXIT		4859579		True				
ANR	4859718	Symbol	xdev -> output_profile		4859579						
ANR	4859719	Symbol	xdev -> rgb_profile		4859579						
ANR	4859720	Symbol	code		4859579						
ANR	4859721	Symbol	NULL		4859579						
ANR	4859722	Symbol	xdev -> memory		4859579						
ANR	4859723	Symbol	xdev -> rgb_icc_link		4859579						
ANR	4859724	Symbol	xdev		4859579						
ANR	4859725	Symbol	xdev -> profile_rgb_fn		4859579						
ANR	4859726	Symbol	* xdev -> profile_cmyk_fn		4859579						
ANR	4859727	Symbol	xdev -> output_icc_link		4859579						
ANR	4859728	Symbol	* xdev -> profile_out_fn		4859579						
ANR	4859729	Symbol	xdev -> profile_out_fn		4859579						
ANR	4859730	Symbol	xcf_open_profile		4859579						
ANR	4859731	Symbol	* xdev		4859579						
ANR	4859732	Symbol	* * xdev		4859579						
ANR	4859733	Symbol	xdev -> cmyk_icc_link		4859579						
ANR	4859734	Symbol	xdev -> profile_cmyk_fn		4859579						
ANR	4859735	Symbol	xdev -> cmyk_profile		4859579						
ANR	4859736	Symbol	* xdev -> profile_rgb_fn		4859579						
ANR	4859737	DeclStmt									
ANR	4859738	Decl							define	"define ( a , d , s )"	set_param_array
ANR	4859739	Function	xcf_get_params	682:0:20920:22228							
ANR	4859740	FunctionDef	"xcf_get_params (gx_device * pdev , gs_param_list * plist)"		4859739	0					
ANR	4859741	CompoundStatement		684:0:20987:22228	4859739	0					
ANR	4859742	IdentifierDeclStatement	xcf_device * xdev = ( xcf_device * ) pdev ;	685:4:20993:21030	4859739	0	True				
ANR	4859743	IdentifierDecl	* xdev = ( xcf_device * ) pdev		4859739	0					
ANR	4859744	IdentifierDeclType	xcf_device *		4859739	0					
ANR	4859745	Identifier	xdev		4859739	1					
ANR	4859746	AssignmentExpression	* xdev = ( xcf_device * ) pdev		4859739	2		=			
ANR	4859747	Identifier	xdev		4859739	0					
ANR	4859748	CastExpression	( xcf_device * ) pdev		4859739	1					
ANR	4859749	CastTarget	xcf_device *		4859739	0					
ANR	4859750	Identifier	pdev		4859739	1					
ANR	4859751	IdentifierDeclStatement	int code ;	686:4:21036:21044	4859739	1	True				
ANR	4859752	IdentifierDecl	code		4859739	0					
ANR	4859753	IdentifierDeclType	int		4859739	0					
ANR	4859754	Identifier	code		4859739	1					
ANR	4859755	IdentifierDeclStatement	bool seprs = false ;	687:4:21050:21068	4859739	2	True				
ANR	4859756	IdentifierDecl	seprs = false		4859739	0					
ANR	4859757	IdentifierDeclType	bool		4859739	0					
ANR	4859758	Identifier	seprs		4859739	1					
ANR	4859759	AssignmentExpression	seprs = false		4859739	2		=			
ANR	4859760	Identifier	false		4859739	0					
ANR	4859761	Identifier	false		4859739	1					
ANR	4859762	IdentifierDeclStatement	gs_param_string_array scna ;	688:4:21074:21100	4859739	3	True				
ANR	4859763	IdentifierDecl	scna		4859739	0					
ANR	4859764	IdentifierDeclType	gs_param_string_array		4859739	0					
ANR	4859765	Identifier	scna		4859739	1					
ANR	4859766	IdentifierDeclStatement	gs_param_string pos ;	689:4:21106:21125	4859739	4	True				
ANR	4859767	IdentifierDecl	pos		4859739	0					
ANR	4859768	IdentifierDeclType	gs_param_string		4859739	0					
ANR	4859769	Identifier	pos		4859739	1					
ANR	4859770	IdentifierDeclStatement	gs_param_string prgbs ;	690:4:21131:21152	4859739	5	True				
ANR	4859771	IdentifierDecl	prgbs		4859739	0					
ANR	4859772	IdentifierDeclType	gs_param_string		4859739	0					
ANR	4859773	Identifier	prgbs		4859739	1					
ANR	4859774	IdentifierDeclStatement	gs_param_string pcmyks ;	691:4:21158:21180	4859739	6	True				
ANR	4859775	IdentifierDecl	pcmyks		4859739	0					
ANR	4859776	IdentifierDeclType	gs_param_string		4859739	0					
ANR	4859777	Identifier	pcmyks		4859739	1					
ANR	4859778	ExpressionStatement	"set_param_array ( scna , NULL , 0 )"	693:4:21187:21217	4859739	7	True				
ANR	4859779	CallExpression	"set_param_array ( scna , NULL , 0 )"		4859739	0					
ANR	4859780	Callee	set_param_array		4859739	0					
ANR	4859781	Identifier	set_param_array		4859739	0					
ANR	4859782	ArgumentList	scna		4859739	1					
ANR	4859783	Argument	scna		4859739	0					
ANR	4859784	Identifier	scna		4859739	0					
ANR	4859785	Argument	NULL		4859739	1					
ANR	4859786	Identifier	NULL		4859739	0					
ANR	4859787	Argument	0		4859739	2					
ANR	4859788	PrimaryExpression	0		4859739	0					
ANR	4859789	IfStatement	"if ( ( code = gdev_prn_get_params ( pdev , plist ) ) < 0 || ( code = sample_device_crd_get_params ( pdev , plist , ""CRDDefault"" ) ) < 0 || ( code = param_write_name_array ( plist , ""SeparationColorNames"" , & scna ) ) < 0 || ( code = param_write_bool ( plist , ""Separations"" , & seprs ) ) < 0 )"		4859739	8					
ANR	4859790	Condition	"( code = gdev_prn_get_params ( pdev , plist ) ) < 0 || ( code = sample_device_crd_get_params ( pdev , plist , ""CRDDefault"" ) ) < 0 || ( code = param_write_name_array ( plist , ""SeparationColorNames"" , & scna ) ) < 0 || ( code = param_write_bool ( plist , ""Separations"" , & seprs ) ) < 0"	695:9:21229:21512	4859739	0	True				
ANR	4859791	OrExpression	"( code = gdev_prn_get_params ( pdev , plist ) ) < 0 || ( code = sample_device_crd_get_params ( pdev , plist , ""CRDDefault"" ) ) < 0 || ( code = param_write_name_array ( plist , ""SeparationColorNames"" , & scna ) ) < 0 || ( code = param_write_bool ( plist , ""Separations"" , & seprs ) ) < 0"		4859739	0		||			
ANR	4859792	RelationalExpression	"( code = gdev_prn_get_params ( pdev , plist ) ) < 0"		4859739	0		<			
ANR	4859793	AssignmentExpression	"code = gdev_prn_get_params ( pdev , plist )"		4859739	0		=			
ANR	4859794	Identifier	code		4859739	0					
ANR	4859795	CallExpression	"gdev_prn_get_params ( pdev , plist )"		4859739	1					
ANR	4859796	Callee	gdev_prn_get_params		4859739	0					
ANR	4859797	Identifier	gdev_prn_get_params		4859739	0					
ANR	4859798	ArgumentList	pdev		4859739	1					
ANR	4859799	Argument	pdev		4859739	0					
ANR	4859800	Identifier	pdev		4859739	0					
ANR	4859801	Argument	plist		4859739	1					
ANR	4859802	Identifier	plist		4859739	0					
ANR	4859803	PrimaryExpression	0		4859739	1					
ANR	4859804	OrExpression	"( code = sample_device_crd_get_params ( pdev , plist , ""CRDDefault"" ) ) < 0 || ( code = param_write_name_array ( plist , ""SeparationColorNames"" , & scna ) ) < 0 || ( code = param_write_bool ( plist , ""Separations"" , & seprs ) ) < 0"		4859739	1		||			
ANR	4859805	RelationalExpression	"( code = sample_device_crd_get_params ( pdev , plist , ""CRDDefault"" ) ) < 0"		4859739	0		<			
ANR	4859806	AssignmentExpression	"code = sample_device_crd_get_params ( pdev , plist , ""CRDDefault"" )"		4859739	0		=			
ANR	4859807	Identifier	code		4859739	0					
ANR	4859808	CallExpression	"sample_device_crd_get_params ( pdev , plist , ""CRDDefault"" )"		4859739	1					
ANR	4859809	Callee	sample_device_crd_get_params		4859739	0					
ANR	4859810	Identifier	sample_device_crd_get_params		4859739	0					
ANR	4859811	ArgumentList	pdev		4859739	1					
ANR	4859812	Argument	pdev		4859739	0					
ANR	4859813	Identifier	pdev		4859739	0					
ANR	4859814	Argument	plist		4859739	1					
ANR	4859815	Identifier	plist		4859739	0					
ANR	4859816	Argument	"""CRDDefault"""		4859739	2					
ANR	4859817	PrimaryExpression	"""CRDDefault"""		4859739	0					
ANR	4859818	PrimaryExpression	0		4859739	1					
ANR	4859819	OrExpression	"( code = param_write_name_array ( plist , ""SeparationColorNames"" , & scna ) ) < 0 || ( code = param_write_bool ( plist , ""Separations"" , & seprs ) ) < 0"		4859739	1		||			
ANR	4859820	RelationalExpression	"( code = param_write_name_array ( plist , ""SeparationColorNames"" , & scna ) ) < 0"		4859739	0		<			
ANR	4859821	AssignmentExpression	"code = param_write_name_array ( plist , ""SeparationColorNames"" , & scna )"		4859739	0		=			
ANR	4859822	Identifier	code		4859739	0					
ANR	4859823	CallExpression	"param_write_name_array ( plist , ""SeparationColorNames"" , & scna )"		4859739	1					
ANR	4859824	Callee	param_write_name_array		4859739	0					
ANR	4859825	Identifier	param_write_name_array		4859739	0					
ANR	4859826	ArgumentList	plist		4859739	1					
ANR	4859827	Argument	plist		4859739	0					
ANR	4859828	Identifier	plist		4859739	0					
ANR	4859829	Argument	"""SeparationColorNames"""		4859739	1					
ANR	4859830	PrimaryExpression	"""SeparationColorNames"""		4859739	0					
ANR	4859831	Argument	& scna		4859739	2					
ANR	4859832	UnaryOperationExpression	& scna		4859739	0					
ANR	4859833	UnaryOperator	&		4859739	0					
ANR	4859834	Identifier	scna		4859739	1					
ANR	4859835	PrimaryExpression	0		4859739	1					
ANR	4859836	RelationalExpression	"( code = param_write_bool ( plist , ""Separations"" , & seprs ) ) < 0"		4859739	1		<			
ANR	4859837	AssignmentExpression	"code = param_write_bool ( plist , ""Separations"" , & seprs )"		4859739	0		=			
ANR	4859838	Identifier	code		4859739	0					
ANR	4859839	CallExpression	"param_write_bool ( plist , ""Separations"" , & seprs )"		4859739	1					
ANR	4859840	Callee	param_write_bool		4859739	0					
ANR	4859841	Identifier	param_write_bool		4859739	0					
ANR	4859842	ArgumentList	plist		4859739	1					
ANR	4859843	Argument	plist		4859739	0					
ANR	4859844	Identifier	plist		4859739	0					
ANR	4859845	Argument	"""Separations"""		4859739	1					
ANR	4859846	PrimaryExpression	"""Separations"""		4859739	0					
ANR	4859847	Argument	& seprs		4859739	2					
ANR	4859848	UnaryOperationExpression	& seprs		4859739	0					
ANR	4859849	UnaryOperator	&		4859739	0					
ANR	4859850	Identifier	seprs		4859739	1					
ANR	4859851	PrimaryExpression	0		4859739	1					
ANR	4859852	ReturnStatement	return code ;	699:8:21523:21534	4859739	1	True				
ANR	4859853	Identifier	code		4859739	0					
ANR	4859854	ExpressionStatement	"pos . data = ( const byte * ) xdev -> profile_out_fn , pos . size = strlen ( xdev -> profile_out_fn ) , pos . persistent = false"	701:4:21541:21667	4859739	9	True				
ANR	4859855	Expression	"pos . data = ( const byte * ) xdev -> profile_out_fn , pos . size = strlen ( xdev -> profile_out_fn ) , pos . persistent = false"		4859739	0					
ANR	4859856	AssignmentExpression	pos . data = ( const byte * ) xdev -> profile_out_fn		4859739	0		=			
ANR	4859857	MemberAccess	pos . data		4859739	0					
ANR	4859858	Identifier	pos		4859739	0					
ANR	4859859	Identifier	data		4859739	1					
ANR	4859860	CastExpression	( const byte * ) xdev -> profile_out_fn		4859739	1					
ANR	4859861	CastTarget	const byte *		4859739	0					
ANR	4859862	PtrMemberAccess	xdev -> profile_out_fn		4859739	1					
ANR	4859863	Identifier	xdev		4859739	0					
ANR	4859864	Identifier	profile_out_fn		4859739	1					
ANR	4859865	Expression	"pos . size = strlen ( xdev -> profile_out_fn ) , pos . persistent = false"		4859739	1					
ANR	4859866	AssignmentExpression	pos . size = strlen ( xdev -> profile_out_fn )		4859739	0		=			
ANR	4859867	MemberAccess	pos . size		4859739	0					
ANR	4859868	Identifier	pos		4859739	0					
ANR	4859869	Identifier	size		4859739	1					
ANR	4859870	CallExpression	strlen ( xdev -> profile_out_fn )		4859739	1					
ANR	4859871	Callee	strlen		4859739	0					
ANR	4859872	Identifier	strlen		4859739	0					
ANR	4859873	ArgumentList	xdev -> profile_out_fn		4859739	1					
ANR	4859874	Argument	xdev -> profile_out_fn		4859739	0					
ANR	4859875	PtrMemberAccess	xdev -> profile_out_fn		4859739	0					
ANR	4859876	Identifier	xdev		4859739	0					
ANR	4859877	Identifier	profile_out_fn		4859739	1					
ANR	4859878	AssignmentExpression	pos . persistent = false		4859739	1		=			
ANR	4859879	MemberAccess	pos . persistent		4859739	0					
ANR	4859880	Identifier	pos		4859739	0					
ANR	4859881	Identifier	persistent		4859739	1					
ANR	4859882	Identifier	false		4859739	1					
ANR	4859883	ExpressionStatement	"code = param_write_string ( plist , ""ProfileOut"" , & pos )"	704:4:21673:21725	4859739	10	True				
ANR	4859884	AssignmentExpression	"code = param_write_string ( plist , ""ProfileOut"" , & pos )"		4859739	0		=			
ANR	4859885	Identifier	code		4859739	0					
ANR	4859886	CallExpression	"param_write_string ( plist , ""ProfileOut"" , & pos )"		4859739	1					
ANR	4859887	Callee	param_write_string		4859739	0					
ANR	4859888	Identifier	param_write_string		4859739	0					
ANR	4859889	ArgumentList	plist		4859739	1					
ANR	4859890	Argument	plist		4859739	0					
ANR	4859891	Identifier	plist		4859739	0					
ANR	4859892	Argument	"""ProfileOut"""		4859739	1					
ANR	4859893	PrimaryExpression	"""ProfileOut"""		4859739	0					
ANR	4859894	Argument	& pos		4859739	2					
ANR	4859895	UnaryOperationExpression	& pos		4859739	0					
ANR	4859896	UnaryOperator	&		4859739	0					
ANR	4859897	Identifier	pos		4859739	1					
ANR	4859898	IfStatement	if ( code < 0 )		4859739	11					
ANR	4859899	Condition	code < 0	705:8:21735:21742	4859739	0	True				
ANR	4859900	RelationalExpression	code < 0		4859739	0		<			
ANR	4859901	Identifier	code		4859739	0					
ANR	4859902	PrimaryExpression	0		4859739	1					
ANR	4859903	ReturnStatement	return code ;	706:8:21753:21764	4859739	1	True				
ANR	4859904	Identifier	code		4859739	0					
ANR	4859905	ExpressionStatement	"prgbs . data = ( const byte * ) xdev -> profile_rgb_fn , prgbs . size = strlen ( xdev -> profile_rgb_fn ) , prgbs . persistent = false"	708:4:21771:21903	4859739	12	True				
ANR	4859906	Expression	"prgbs . data = ( const byte * ) xdev -> profile_rgb_fn , prgbs . size = strlen ( xdev -> profile_rgb_fn ) , prgbs . persistent = false"		4859739	0					
ANR	4859907	AssignmentExpression	prgbs . data = ( const byte * ) xdev -> profile_rgb_fn		4859739	0		=			
ANR	4859908	MemberAccess	prgbs . data		4859739	0					
ANR	4859909	Identifier	prgbs		4859739	0					
ANR	4859910	Identifier	data		4859739	1					
ANR	4859911	CastExpression	( const byte * ) xdev -> profile_rgb_fn		4859739	1					
ANR	4859912	CastTarget	const byte *		4859739	0					
ANR	4859913	PtrMemberAccess	xdev -> profile_rgb_fn		4859739	1					
ANR	4859914	Identifier	xdev		4859739	0					
ANR	4859915	Identifier	profile_rgb_fn		4859739	1					
ANR	4859916	Expression	"prgbs . size = strlen ( xdev -> profile_rgb_fn ) , prgbs . persistent = false"		4859739	1					
ANR	4859917	AssignmentExpression	prgbs . size = strlen ( xdev -> profile_rgb_fn )		4859739	0		=			
ANR	4859918	MemberAccess	prgbs . size		4859739	0					
ANR	4859919	Identifier	prgbs		4859739	0					
ANR	4859920	Identifier	size		4859739	1					
ANR	4859921	CallExpression	strlen ( xdev -> profile_rgb_fn )		4859739	1					
ANR	4859922	Callee	strlen		4859739	0					
ANR	4859923	Identifier	strlen		4859739	0					
ANR	4859924	ArgumentList	xdev -> profile_rgb_fn		4859739	1					
ANR	4859925	Argument	xdev -> profile_rgb_fn		4859739	0					
ANR	4859926	PtrMemberAccess	xdev -> profile_rgb_fn		4859739	0					
ANR	4859927	Identifier	xdev		4859739	0					
ANR	4859928	Identifier	profile_rgb_fn		4859739	1					
ANR	4859929	AssignmentExpression	prgbs . persistent = false		4859739	1		=			
ANR	4859930	MemberAccess	prgbs . persistent		4859739	0					
ANR	4859931	Identifier	prgbs		4859739	0					
ANR	4859932	Identifier	persistent		4859739	1					
ANR	4859933	Identifier	false		4859739	1					
ANR	4859934	ExpressionStatement	"code = param_write_string ( plist , ""ProfileRgb"" , & prgbs )"	711:4:21909:21963	4859739	13	True				
ANR	4859935	AssignmentExpression	"code = param_write_string ( plist , ""ProfileRgb"" , & prgbs )"		4859739	0		=			
ANR	4859936	Identifier	code		4859739	0					
ANR	4859937	CallExpression	"param_write_string ( plist , ""ProfileRgb"" , & prgbs )"		4859739	1					
ANR	4859938	Callee	param_write_string		4859739	0					
ANR	4859939	Identifier	param_write_string		4859739	0					
ANR	4859940	ArgumentList	plist		4859739	1					
ANR	4859941	Argument	plist		4859739	0					
ANR	4859942	Identifier	plist		4859739	0					
ANR	4859943	Argument	"""ProfileRgb"""		4859739	1					
ANR	4859944	PrimaryExpression	"""ProfileRgb"""		4859739	0					
ANR	4859945	Argument	& prgbs		4859739	2					
ANR	4859946	UnaryOperationExpression	& prgbs		4859739	0					
ANR	4859947	UnaryOperator	&		4859739	0					
ANR	4859948	Identifier	prgbs		4859739	1					
ANR	4859949	IfStatement	if ( code < 0 )		4859739	14					
ANR	4859950	Condition	code < 0	712:8:21973:21980	4859739	0	True				
ANR	4859951	RelationalExpression	code < 0		4859739	0		<			
ANR	4859952	Identifier	code		4859739	0					
ANR	4859953	PrimaryExpression	0		4859739	1					
ANR	4859954	ReturnStatement	return code ;	713:8:21991:22002	4859739	1	True				
ANR	4859955	Identifier	code		4859739	0					
ANR	4859956	ExpressionStatement	"pcmyks . data = ( const byte * ) xdev -> profile_cmyk_fn , pcmyks . size = strlen ( xdev -> profile_cmyk_fn ) , pcmyks . persistent = false"	715:4:22009:22146	4859739	15	True				
ANR	4859957	Expression	"pcmyks . data = ( const byte * ) xdev -> profile_cmyk_fn , pcmyks . size = strlen ( xdev -> profile_cmyk_fn ) , pcmyks . persistent = false"		4859739	0					
ANR	4859958	AssignmentExpression	pcmyks . data = ( const byte * ) xdev -> profile_cmyk_fn		4859739	0		=			
ANR	4859959	MemberAccess	pcmyks . data		4859739	0					
ANR	4859960	Identifier	pcmyks		4859739	0					
ANR	4859961	Identifier	data		4859739	1					
ANR	4859962	CastExpression	( const byte * ) xdev -> profile_cmyk_fn		4859739	1					
ANR	4859963	CastTarget	const byte *		4859739	0					
ANR	4859964	PtrMemberAccess	xdev -> profile_cmyk_fn		4859739	1					
ANR	4859965	Identifier	xdev		4859739	0					
ANR	4859966	Identifier	profile_cmyk_fn		4859739	1					
ANR	4859967	Expression	"pcmyks . size = strlen ( xdev -> profile_cmyk_fn ) , pcmyks . persistent = false"		4859739	1					
ANR	4859968	AssignmentExpression	pcmyks . size = strlen ( xdev -> profile_cmyk_fn )		4859739	0		=			
ANR	4859969	MemberAccess	pcmyks . size		4859739	0					
ANR	4859970	Identifier	pcmyks		4859739	0					
ANR	4859971	Identifier	size		4859739	1					
ANR	4859972	CallExpression	strlen ( xdev -> profile_cmyk_fn )		4859739	1					
ANR	4859973	Callee	strlen		4859739	0					
ANR	4859974	Identifier	strlen		4859739	0					
ANR	4859975	ArgumentList	xdev -> profile_cmyk_fn		4859739	1					
ANR	4859976	Argument	xdev -> profile_cmyk_fn		4859739	0					
ANR	4859977	PtrMemberAccess	xdev -> profile_cmyk_fn		4859739	0					
ANR	4859978	Identifier	xdev		4859739	0					
ANR	4859979	Identifier	profile_cmyk_fn		4859739	1					
ANR	4859980	AssignmentExpression	pcmyks . persistent = false		4859739	1		=			
ANR	4859981	MemberAccess	pcmyks . persistent		4859739	0					
ANR	4859982	Identifier	pcmyks		4859739	0					
ANR	4859983	Identifier	persistent		4859739	1					
ANR	4859984	Identifier	false		4859739	1					
ANR	4859985	ExpressionStatement	"code = param_write_string ( plist , ""ProfileCmyk"" , & pcmyks )"	718:4:22152:22208	4859739	16	True				
ANR	4859986	AssignmentExpression	"code = param_write_string ( plist , ""ProfileCmyk"" , & pcmyks )"		4859739	0		=			
ANR	4859987	Identifier	code		4859739	0					
ANR	4859988	CallExpression	"param_write_string ( plist , ""ProfileCmyk"" , & pcmyks )"		4859739	1					
ANR	4859989	Callee	param_write_string		4859739	0					
ANR	4859990	Identifier	param_write_string		4859739	0					
ANR	4859991	ArgumentList	plist		4859739	1					
ANR	4859992	Argument	plist		4859739	0					
ANR	4859993	Identifier	plist		4859739	0					
ANR	4859994	Argument	"""ProfileCmyk"""		4859739	1					
ANR	4859995	PrimaryExpression	"""ProfileCmyk"""		4859739	0					
ANR	4859996	Argument	& pcmyks		4859739	2					
ANR	4859997	UnaryOperationExpression	& pcmyks		4859739	0					
ANR	4859998	UnaryOperator	&		4859739	0					
ANR	4859999	Identifier	pcmyks		4859739	1					
ANR	4860000	ReturnStatement	return code ;	720:4:22215:22226	4859739	17	True				
ANR	4860001	Identifier	code		4859739	0					
ANR	4860002	ReturnType	static int		4859739	1					
ANR	4860003	Identifier	xcf_get_params		4859739	2					
ANR	4860004	ParameterList	"gx_device * pdev , gs_param_list * plist"		4859739	3					
ANR	4860005	Parameter	gx_device * pdev	683:15:20946:20961	4859739	0	True				
ANR	4860006	ParameterType	gx_device *		4859739	0					
ANR	4860007	Identifier	pdev		4859739	1					
ANR	4860008	Parameter	gs_param_list * plist	683:33:20964:20984	4859739	1	True				
ANR	4860009	ParameterType	gs_param_list *		4859739	0					
ANR	4860010	Identifier	plist		4859739	1					
ANR	4860011	CFGEntryNode	ENTRY		4859739		True				
ANR	4860012	CFGExitNode	EXIT		4859739		True				
ANR	4860013	Symbol	pcmyks		4859739						
ANR	4860014	Symbol	pcmyks . persistent		4859739						
ANR	4860015	Symbol	code		4859739						
ANR	4860016	Symbol	pcmyks . data		4859739						
ANR	4860017	Symbol	pos . data		4859739						
ANR	4860018	Symbol	xdev -> profile_rgb_fn		4859739						
ANR	4860019	Symbol	prgbs . persistent		4859739						
ANR	4860020	Symbol	pos . size		4859739						
ANR	4860021	Symbol	param_write_name_array		4859739						
ANR	4860022	Symbol	pdev		4859739						
ANR	4860023	Symbol	param_write_bool		4859739						
ANR	4860024	Symbol	strlen		4859739						
ANR	4860025	Symbol	pos . persistent		4859739						
ANR	4860026	Symbol	plist		4859739						
ANR	4860027	Symbol	pos		4859739						
ANR	4860028	Symbol	seprs		4859739						
ANR	4860029	Symbol	& prgbs		4859739						
ANR	4860030	Symbol	param_write_string		4859739						
ANR	4860031	Symbol	xdev -> profile_cmyk_fn		4859739						
ANR	4860032	Symbol	NULL		4859739						
ANR	4860033	Symbol	xdev		4859739						
ANR	4860034	Symbol	false		4859739						
ANR	4860035	Symbol	gdev_prn_get_params		4859739						
ANR	4860036	Symbol	prgbs . data		4859739						
ANR	4860037	Symbol	prgbs . size		4859739						
ANR	4860038	Symbol	prgbs		4859739						
ANR	4860039	Symbol	& seprs		4859739						
ANR	4860040	Symbol	& scna		4859739						
ANR	4860041	Symbol	pcmyks . size		4859739						
ANR	4860042	Symbol	xdev -> profile_out_fn		4859739						
ANR	4860043	Symbol	* xdev		4859739						
ANR	4860044	Symbol	scna		4859739						
ANR	4860045	Symbol	& pcmyks		4859739						
ANR	4860046	Symbol	sample_device_crd_get_params		4859739						
ANR	4860047	Symbol	& pos		4859739						
ANR	4860048	Function	check_process_color_names	732:0:22537:23004							
ANR	4860049	FunctionDef	"check_process_color_names (const fixed_colorant_names_list * pcomp_list , const gs_param_string * pstring)"		4860048	0					
ANR	4860050	CompoundStatement		735:0:22680:23004	4860048	0					
ANR	4860051	IfStatement	if ( pcomp_list )		4860048	0					
ANR	4860052	Condition	pcomp_list	736:8:22690:22699	4860048	0	True				
ANR	4860053	Identifier	pcomp_list		4860048	0					
ANR	4860054	CompoundStatement		4:8:88:113	4860048	1					
ANR	4860055	IdentifierDeclStatement	const fixed_colorant_name * plist = * pcomp_list ;	737:8:22712:22759	4860048	0	True				
ANR	4860056	IdentifierDecl	* plist = * pcomp_list		4860048	0					
ANR	4860057	IdentifierDeclType	const fixed_colorant_name *		4860048	0					
ANR	4860058	Identifier	plist		4860048	1					
ANR	4860059	AssignmentExpression	* plist = * pcomp_list		4860048	2		=			
ANR	4860060	Identifier	plist		4860048	0					
ANR	4860061	UnaryOperationExpression	* pcomp_list		4860048	1					
ANR	4860062	UnaryOperator	*		4860048	0					
ANR	4860063	Identifier	pcomp_list		4860048	1					
ANR	4860064	IdentifierDeclStatement	uint size = pstring -> size ;	738:8:22769:22794	4860048	1	True				
ANR	4860065	IdentifierDecl	size = pstring -> size		4860048	0					
ANR	4860066	IdentifierDeclType	uint		4860048	0					
ANR	4860067	Identifier	size		4860048	1					
ANR	4860068	AssignmentExpression	size = pstring -> size		4860048	2		=			
ANR	4860069	Identifier	size		4860048	0					
ANR	4860070	PtrMemberAccess	pstring -> size		4860048	1					
ANR	4860071	Identifier	pstring		4860048	0					
ANR	4860072	Identifier	size		4860048	1					
ANR	4860073	WhileStatement	while ( * plist )		4860048	2					
ANR	4860074	Condition	* plist	740:15:22812:22817	4860048	0	True				
ANR	4860075	UnaryOperationExpression	* plist		4860048	0					
ANR	4860076	UnaryOperator	*		4860048	0					
ANR	4860077	Identifier	plist		4860048	1					
ANR	4860078	CompoundStatement		6:23:139:139	4860048	1					
ANR	4860079	IfStatement	"if ( compare_color_names ( * plist , strlen ( * plist ) , pstring -> data , size ) )"		4860048	0					
ANR	4860080	Condition	"compare_color_names ( * plist , strlen ( * plist ) , pstring -> data , size )"	741:16:22838:22901	4860048	0	True				
ANR	4860081	CallExpression	"compare_color_names ( * plist , strlen ( * plist ) , pstring -> data , size )"		4860048	0					
ANR	4860082	Callee	compare_color_names		4860048	0					
ANR	4860083	Identifier	compare_color_names		4860048	0					
ANR	4860084	ArgumentList	* plist		4860048	1					
ANR	4860085	Argument	* plist		4860048	0					
ANR	4860086	UnaryOperationExpression	* plist		4860048	0					
ANR	4860087	UnaryOperator	*		4860048	0					
ANR	4860088	Identifier	plist		4860048	1					
ANR	4860089	Argument	strlen ( * plist )		4860048	1					
ANR	4860090	CallExpression	strlen ( * plist )		4860048	0					
ANR	4860091	Callee	strlen		4860048	0					
ANR	4860092	Identifier	strlen		4860048	0					
ANR	4860093	ArgumentList	* plist		4860048	1					
ANR	4860094	Argument	* plist		4860048	0					
ANR	4860095	UnaryOperationExpression	* plist		4860048	0					
ANR	4860096	UnaryOperator	*		4860048	0					
ANR	4860097	Identifier	plist		4860048	1					
ANR	4860098	Argument	pstring -> data		4860048	2					
ANR	4860099	PtrMemberAccess	pstring -> data		4860048	0					
ANR	4860100	Identifier	pstring		4860048	0					
ANR	4860101	Identifier	data		4860048	1					
ANR	4860102	Argument	size		4860048	3					
ANR	4860103	Identifier	size		4860048	0					
ANR	4860104	CompoundStatement		7:82:223:223	4860048	1					
ANR	4860105	ReturnStatement	return true ;	742:16:22922:22933	4860048	0	True				
ANR	4860106	Identifier	true		4860048	0					
ANR	4860107	ExpressionStatement	plist ++	744:12:22961:22968	4860048	1	True				
ANR	4860108	PostIncDecOperationExpression	plist ++		4860048	0					
ANR	4860109	Identifier	plist		4860048	0					
ANR	4860110	IncDec	++		4860048	1					
ANR	4860111	ReturnStatement	return false ;	747:4:22990:23002	4860048	1	True				
ANR	4860112	Identifier	false		4860048	0					
ANR	4860113	ReturnType	static bool		4860048	1					
ANR	4860114	Identifier	check_process_color_names		4860048	2					
ANR	4860115	ParameterList	"const fixed_colorant_names_list * pcomp_list , const gs_param_string * pstring"		4860048	3					
ANR	4860116	Parameter	const fixed_colorant_names_list * pcomp_list	733:26:22575:22618	4860048	0	True				
ANR	4860117	ParameterType	const fixed_colorant_names_list *		4860048	0					
ANR	4860118	Identifier	pcomp_list		4860048	1					
ANR	4860119	Parameter	const gs_param_string * pstring	734:26:22647:22677	4860048	1	True				
ANR	4860120	ParameterType	const gs_param_string *		4860048	0					
ANR	4860121	Identifier	pstring		4860048	1					
ANR	4860122	CFGEntryNode	ENTRY		4860048		True				
ANR	4860123	CFGExitNode	EXIT		4860048		True				
ANR	4860124	Symbol	pstring -> data		4860048						
ANR	4860125	Symbol	* pstring		4860048						
ANR	4860126	Symbol	* plist		4860048						
ANR	4860127	Symbol	compare_color_names		4860048						
ANR	4860128	Symbol	false		4860048						
ANR	4860129	Symbol	pstring		4860048						
ANR	4860130	Symbol	pcomp_list		4860048						
ANR	4860131	Symbol	strlen		4860048						
ANR	4860132	Symbol	plist		4860048						
ANR	4860133	Symbol	pstring -> size		4860048						
ANR	4860134	Symbol	size		4860048						
ANR	4860135	Symbol	true		4860048						
ANR	4860136	Symbol	* pcomp_list		4860048						
ANR	4860137	Function	bpc_to_depth	763:0:23531:23888							
ANR	4860138	FunctionDef	"bpc_to_depth (uchar ncomp , int bpc)"		4860137	0					
ANR	4860139	CompoundStatement		765:0:23577:23888	4860137	0					
ANR	4860140	Statement	static	766:4:23583:23588	4860137	0	True				
ANR	4860141	Statement	const	766:11:23590:23594	4860137	1	True				
ANR	4860142	Statement	byte	766:17:23596:23599	4860137	2	True				
ANR	4860143	Statement	depths	766:22:23601:23606	4860137	3	True				
ANR	4860144	Statement	[	766:28:23607:23607	4860137	4	True				
ANR	4860145	Statement	4	766:29:23608:23608	4860137	5	True				
ANR	4860146	Statement	]	766:30:23609:23609	4860137	6	True				
ANR	4860147	Statement	[	766:31:23610:23610	4860137	7	True				
ANR	4860148	Statement	8	766:32:23611:23611	4860137	8	True				
ANR	4860149	Statement	]	766:33:23612:23612	4860137	9	True				
ANR	4860150	Statement	=	766:35:23614:23614	4860137	10	True				
ANR	4860151	CompoundStatement		2:37:38:38	4860137	11					
ANR	4860152	CompoundStatement		3:8:48:48	4860137	0					
ANR	4860153	Statement	1	767:9:23627:23627	4860137	0	True				
ANR	4860154	Statement	","	767:10:23628:23628	4860137	1	True				
ANR	4860155	Statement	2	767:12:23630:23630	4860137	2	True				
ANR	4860156	Statement	","	767:13:23631:23631	4860137	3	True				
ANR	4860157	Statement	0	767:15:23633:23633	4860137	4	True				
ANR	4860158	Statement	","	767:16:23634:23634	4860137	5	True				
ANR	4860159	Statement	4	767:18:23636:23636	4860137	6	True				
ANR	4860160	Statement	","	767:19:23637:23637	4860137	7	True				
ANR	4860161	Statement	8	767:21:23639:23639	4860137	8	True				
ANR	4860162	Statement	","	767:22:23640:23640	4860137	9	True				
ANR	4860163	Statement	0	767:24:23642:23642	4860137	10	True				
ANR	4860164	Statement	","	767:25:23643:23643	4860137	11	True				
ANR	4860165	Statement	0	767:27:23645:23645	4860137	12	True				
ANR	4860166	Statement	","	767:28:23646:23646	4860137	13	True				
ANR	4860167	Statement	8	767:30:23648:23648	4860137	14	True				
ANR	4860168	Statement	","	767:32:23650:23650	4860137	1	True				
ANR	4860169	CompoundStatement		4:8:82:82	4860137	2					
ANR	4860170	Statement	2	768:9:23661:23661	4860137	0	True				
ANR	4860171	Statement	","	768:10:23662:23662	4860137	1	True				
ANR	4860172	Statement	4	768:12:23664:23664	4860137	2	True				
ANR	4860173	Statement	","	768:13:23665:23665	4860137	3	True				
ANR	4860174	Statement	0	768:15:23667:23667	4860137	4	True				
ANR	4860175	Statement	","	768:16:23668:23668	4860137	5	True				
ANR	4860176	Statement	8	768:18:23670:23670	4860137	6	True				
ANR	4860177	Statement	","	768:19:23671:23671	4860137	7	True				
ANR	4860178	Statement	16	768:21:23673:23674	4860137	8	True				
ANR	4860179	Statement	","	768:23:23675:23675	4860137	9	True				
ANR	4860180	Statement	0	768:25:23677:23677	4860137	10	True				
ANR	4860181	Statement	","	768:26:23678:23678	4860137	11	True				
ANR	4860182	Statement	0	768:28:23680:23680	4860137	12	True				
ANR	4860183	Statement	","	768:29:23681:23681	4860137	13	True				
ANR	4860184	Statement	16	768:31:23683:23684	4860137	14	True				
ANR	4860185	Statement	","	768:34:23686:23686	4860137	3	True				
ANR	4860186	CompoundStatement		5:8:118:118	4860137	4					
ANR	4860187	Statement	4	769:9:23697:23697	4860137	0	True				
ANR	4860188	Statement	","	769:10:23698:23698	4860137	1	True				
ANR	4860189	Statement	8	769:12:23700:23700	4860137	2	True				
ANR	4860190	Statement	","	769:13:23701:23701	4860137	3	True				
ANR	4860191	Statement	0	769:15:23703:23703	4860137	4	True				
ANR	4860192	Statement	","	769:16:23704:23704	4860137	5	True				
ANR	4860193	Statement	16	769:18:23706:23707	4860137	6	True				
ANR	4860194	Statement	","	769:20:23708:23708	4860137	7	True				
ANR	4860195	Statement	16	769:22:23710:23711	4860137	8	True				
ANR	4860196	Statement	","	769:24:23712:23712	4860137	9	True				
ANR	4860197	Statement	0	769:26:23714:23714	4860137	10	True				
ANR	4860198	Statement	","	769:27:23715:23715	4860137	11	True				
ANR	4860199	Statement	0	769:29:23717:23717	4860137	12	True				
ANR	4860200	Statement	","	769:30:23718:23718	4860137	13	True				
ANR	4860201	Statement	24	769:32:23720:23721	4860137	14	True				
ANR	4860202	Statement	","	769:35:23723:23723	4860137	5	True				
ANR	4860203	CompoundStatement		6:8:155:155	4860137	6					
ANR	4860204	Statement	4	770:9:23734:23734	4860137	0	True				
ANR	4860205	Statement	","	770:10:23735:23735	4860137	1	True				
ANR	4860206	Statement	8	770:12:23737:23737	4860137	2	True				
ANR	4860207	Statement	","	770:13:23738:23738	4860137	3	True				
ANR	4860208	Statement	0	770:15:23740:23740	4860137	4	True				
ANR	4860209	Statement	","	770:16:23741:23741	4860137	5	True				
ANR	4860210	Statement	16	770:18:23743:23744	4860137	6	True				
ANR	4860211	Statement	","	770:20:23745:23745	4860137	7	True				
ANR	4860212	Statement	32	770:22:23747:23748	4860137	8	True				
ANR	4860213	Statement	","	770:24:23749:23749	4860137	9	True				
ANR	4860214	Statement	0	770:26:23751:23751	4860137	10	True				
ANR	4860215	Statement	","	770:27:23752:23752	4860137	11	True				
ANR	4860216	Statement	0	770:29:23754:23754	4860137	12	True				
ANR	4860217	Statement	","	770:30:23755:23755	4860137	13	True				
ANR	4860218	Statement	32	770:32:23757:23758	4860137	14	True				
ANR	4860219	ExpressionStatement		771:5:23766:23766	4860137	12	True				
ANR	4860220	IfStatement	if ( ncomp <= 4 && bpc <= 8 )		4860137	13					
ANR	4860221	Condition	ncomp <= 4 && bpc <= 8	773:8:23777:23797	4860137	0	True				
ANR	4860222	AndExpression	ncomp <= 4 && bpc <= 8		4860137	0		&&			
ANR	4860223	RelationalExpression	ncomp <= 4		4860137	0		<=			
ANR	4860224	Identifier	ncomp		4860137	0					
ANR	4860225	PrimaryExpression	4		4860137	1					
ANR	4860226	RelationalExpression	bpc <= 8		4860137	1		<=			
ANR	4860227	Identifier	bpc		4860137	0					
ANR	4860228	PrimaryExpression	8		4860137	1					
ANR	4860229	ReturnStatement	return depths [ ncomp - 1 ] [ bpc - 1 ] ;	774:8:23808:23838	4860137	1	True				
ANR	4860230	ArrayIndexing	depths [ ncomp - 1 ] [ bpc - 1 ]		4860137	0					
ANR	4860231	ArrayIndexing	depths [ ncomp - 1 ]		4860137	0					
ANR	4860232	Identifier	depths		4860137	0					
ANR	4860233	AdditiveExpression	ncomp - 1		4860137	1		-			
ANR	4860234	Identifier	ncomp		4860137	0					
ANR	4860235	PrimaryExpression	1		4860137	1					
ANR	4860236	AdditiveExpression	bpc - 1		4860137	1		-			
ANR	4860237	Identifier	bpc		4860137	0					
ANR	4860238	PrimaryExpression	1		4860137	1					
ANR	4860239	ElseStatement	else		4860137	0					
ANR	4860240	ReturnStatement	return ( ncomp * bpc + 7 ) & ~7 ;	776:8:23857:23886	4860137	0	True				
ANR	4860241	BitAndExpression	( ncomp * bpc + 7 ) & ~7		4860137	0		&			
ANR	4860242	AdditiveExpression	ncomp * bpc + 7		4860137	0		+			
ANR	4860243	MultiplicativeExpression	ncomp * bpc		4860137	0		*			
ANR	4860244	Identifier	ncomp		4860137	0					
ANR	4860245	Identifier	bpc		4860137	1					
ANR	4860246	PrimaryExpression	7		4860137	1					
ANR	4860247	Identifier	~7		4860137	1					
ANR	4860248	ReturnType	static int		4860137	1					
ANR	4860249	Identifier	bpc_to_depth		4860137	2					
ANR	4860250	ParameterList	"uchar ncomp , int bpc"		4860137	3					
ANR	4860251	Parameter	uchar ncomp	764:13:23555:23565	4860137	0	True				
ANR	4860252	ParameterType	uchar		4860137	0					
ANR	4860253	Identifier	ncomp		4860137	1					
ANR	4860254	Parameter	int bpc	764:26:23568:23574	4860137	1	True				
ANR	4860255	ParameterType	int		4860137	0					
ANR	4860256	Identifier	bpc		4860137	1					
ANR	4860257	CFGEntryNode	ENTRY		4860137		True				
ANR	4860258	CFGExitNode	EXIT		4860137		True				
ANR	4860259	Symbol	* bpc		4860137						
ANR	4860260	Symbol	ncomp		4860137						
ANR	4860261	Symbol	bpc		4860137						
ANR	4860262	Symbol	* depths		4860137						
ANR	4860263	Symbol	* * depths		4860137						
ANR	4860264	Symbol	depths		4860137						
ANR	4860265	Symbol	~7		4860137						
ANR	4860266	Symbol	* ncomp		4860137						
ANR	4860267	Symbol	* * ncomp		4860137						
ANR	4860268	Function	xcf_param_read_fn	797:0:24412:24780							
ANR	4860269	FunctionDef	"xcf_param_read_fn (gs_param_list * plist , const char * name , gs_param_string * pstr , int max_len)"		4860268	0					
ANR	4860270	CompoundStatement		800:0:24535:24780	4860268	0					
ANR	4860271	IdentifierDeclStatement	"int code = param_read_string ( plist , name , pstr ) ;"	801:4:24541:24588	4860268	0	True				
ANR	4860272	IdentifierDecl	"code = param_read_string ( plist , name , pstr )"		4860268	0					
ANR	4860273	IdentifierDeclType	int		4860268	0					
ANR	4860274	Identifier	code		4860268	1					
ANR	4860275	AssignmentExpression	"code = param_read_string ( plist , name , pstr )"		4860268	2		=			
ANR	4860276	Identifier	code		4860268	0					
ANR	4860277	CallExpression	"param_read_string ( plist , name , pstr )"		4860268	1					
ANR	4860278	Callee	param_read_string		4860268	0					
ANR	4860279	Identifier	param_read_string		4860268	0					
ANR	4860280	ArgumentList	plist		4860268	1					
ANR	4860281	Argument	plist		4860268	0					
ANR	4860282	Identifier	plist		4860268	0					
ANR	4860283	Argument	name		4860268	1					
ANR	4860284	Identifier	name		4860268	0					
ANR	4860285	Argument	pstr		4860268	2					
ANR	4860286	Identifier	pstr		4860268	0					
ANR	4860287	IfStatement	if ( code == 0 )		4860268	1					
ANR	4860288	Condition	code == 0	803:8:24599:24607	4860268	0	True				
ANR	4860289	EqualityExpression	code == 0		4860268	0		==			
ANR	4860290	Identifier	code		4860268	0					
ANR	4860291	PrimaryExpression	0		4860268	1					
ANR	4860292	CompoundStatement		4:19:74:74	4860268	1					
ANR	4860293	IfStatement	if ( pstr -> size >= max_len )		4860268	0					
ANR	4860294	Condition	pstr -> size >= max_len	804:12:24624:24644	4860268	0	True				
ANR	4860295	RelationalExpression	pstr -> size >= max_len		4860268	0		>=			
ANR	4860296	PtrMemberAccess	pstr -> size		4860268	0					
ANR	4860297	Identifier	pstr		4860268	0					
ANR	4860298	Identifier	size		4860268	1					
ANR	4860299	Identifier	max_len		4860268	1					
ANR	4860300	ExpressionStatement	"param_signal_error ( plist , name , code = gs_error_rangecheck )"	805:12:24659:24718	4860268	1	True				
ANR	4860301	CallExpression	"param_signal_error ( plist , name , code = gs_error_rangecheck )"		4860268	0					
ANR	4860302	Callee	param_signal_error		4860268	0					
ANR	4860303	Identifier	param_signal_error		4860268	0					
ANR	4860304	ArgumentList	plist		4860268	1					
ANR	4860305	Argument	plist		4860268	0					
ANR	4860306	Identifier	plist		4860268	0					
ANR	4860307	Argument	name		4860268	1					
ANR	4860308	Identifier	name		4860268	0					
ANR	4860309	Argument	code = gs_error_rangecheck		4860268	2					
ANR	4860310	AssignmentExpression	code = gs_error_rangecheck		4860268	0		=			
ANR	4860311	Identifier	code		4860268	0					
ANR	4860312	Identifier	gs_error_rangecheck		4860268	1					
ANR	4860313	ElseStatement	else		4860268	0					
ANR	4860314	CompoundStatement		7:11:195:195	4860268	0					
ANR	4860315	ExpressionStatement	pstr -> data = 0	807:8:24741:24755	4860268	0	True				
ANR	4860316	AssignmentExpression	pstr -> data = 0		4860268	0		=			
ANR	4860317	PtrMemberAccess	pstr -> data		4860268	0					
ANR	4860318	Identifier	pstr		4860268	0					
ANR	4860319	Identifier	data		4860268	1					
ANR	4860320	PrimaryExpression	0		4860268	1					
ANR	4860321	ReturnStatement	return code ;	809:4:24767:24778	4860268	2	True				
ANR	4860322	Identifier	code		4860268	0					
ANR	4860323	ReturnType	static int		4860268	1					
ANR	4860324	Identifier	xcf_param_read_fn		4860268	2					
ANR	4860325	ParameterList	"gs_param_list * plist , const char * name , gs_param_string * pstr , int max_len"		4860268	3					
ANR	4860326	Parameter	gs_param_list * plist	798:18:24441:24460	4860268	0	True				
ANR	4860327	ParameterType	gs_param_list *		4860268	0					
ANR	4860328	Identifier	plist		4860268	1					
ANR	4860329	Parameter	const char * name	798:40:24463:24478	4860268	1	True				
ANR	4860330	ParameterType	const char *		4860268	0					
ANR	4860331	Identifier	name		4860268	1					
ANR	4860332	Parameter	gs_param_string * pstr	799:18:24499:24519	4860268	2	True				
ANR	4860333	ParameterType	gs_param_string *		4860268	0					
ANR	4860334	Identifier	pstr		4860268	1					
ANR	4860335	Parameter	int max_len	799:41:24522:24532	4860268	3	True				
ANR	4860336	ParameterType	int		4860268	0					
ANR	4860337	Identifier	max_len		4860268	1					
ANR	4860338	CFGEntryNode	ENTRY		4860268		True				
ANR	4860339	CFGExitNode	EXIT		4860268		True				
ANR	4860340	Symbol	plist		4860268						
ANR	4860341	Symbol	code		4860268						
ANR	4860342	Symbol	* pstr		4860268						
ANR	4860343	Symbol	gs_error_rangecheck		4860268						
ANR	4860344	Symbol	pstr		4860268						
ANR	4860345	Symbol	name		4860268						
ANR	4860346	Symbol	pstr -> size		4860268						
ANR	4860347	Symbol	pstr -> data		4860268						
ANR	4860348	Symbol	param_read_string		4860268						
ANR	4860349	Symbol	max_len		4860268						
ANR	4860350	Function	param_string_eq	813:0:24831:25010							
ANR	4860351	FunctionDef	"param_string_eq (const gs_param_string * pcs , const char * str)"		4860350	0					
ANR	4860352	CompoundStatement		815:0:24904:25010	4860350	0					
ANR	4860353	ReturnStatement	"return ( strlen ( str ) == pcs -> size && ! strncmp ( str , ( const char * ) pcs -> data , pcs -> size ) ) ;"	816:4:24910:25008	4860350	0	True				
ANR	4860354	AndExpression	"strlen ( str ) == pcs -> size && ! strncmp ( str , ( const char * ) pcs -> data , pcs -> size )"		4860350	0		&&			
ANR	4860355	EqualityExpression	strlen ( str ) == pcs -> size		4860350	0		==			
ANR	4860356	CallExpression	strlen ( str )		4860350	0					
ANR	4860357	Callee	strlen		4860350	0					
ANR	4860358	Identifier	strlen		4860350	0					
ANR	4860359	ArgumentList	str		4860350	1					
ANR	4860360	Argument	str		4860350	0					
ANR	4860361	Identifier	str		4860350	0					
ANR	4860362	PtrMemberAccess	pcs -> size		4860350	1					
ANR	4860363	Identifier	pcs		4860350	0					
ANR	4860364	Identifier	size		4860350	1					
ANR	4860365	UnaryOperationExpression	"! strncmp ( str , ( const char * ) pcs -> data , pcs -> size )"		4860350	1					
ANR	4860366	UnaryOperator	!		4860350	0					
ANR	4860367	CallExpression	"strncmp ( str , ( const char * ) pcs -> data , pcs -> size )"		4860350	1					
ANR	4860368	Callee	strncmp		4860350	0					
ANR	4860369	Identifier	strncmp		4860350	0					
ANR	4860370	ArgumentList	str		4860350	1					
ANR	4860371	Argument	str		4860350	0					
ANR	4860372	Identifier	str		4860350	0					
ANR	4860373	Argument	( const char * ) pcs -> data		4860350	1					
ANR	4860374	CastExpression	( const char * ) pcs -> data		4860350	0					
ANR	4860375	CastTarget	const char *		4860350	0					
ANR	4860376	PtrMemberAccess	pcs -> data		4860350	1					
ANR	4860377	Identifier	pcs		4860350	0					
ANR	4860378	Identifier	data		4860350	1					
ANR	4860379	Argument	pcs -> size		4860350	2					
ANR	4860380	PtrMemberAccess	pcs -> size		4860350	0					
ANR	4860381	Identifier	pcs		4860350	0					
ANR	4860382	Identifier	size		4860350	1					
ANR	4860383	ReturnType	static bool		4860350	1					
ANR	4860384	Identifier	param_string_eq		4860350	2					
ANR	4860385	ParameterList	"const gs_param_string * pcs , const char * str"		4860350	3					
ANR	4860386	Parameter	const gs_param_string * pcs	814:16:24859:24884	4860350	0	True				
ANR	4860387	ParameterType	const gs_param_string *		4860350	0					
ANR	4860388	Identifier	pcs		4860350	1					
ANR	4860389	Parameter	const char * str	814:44:24887:24901	4860350	1	True				
ANR	4860390	ParameterType	const char *		4860350	0					
ANR	4860391	Identifier	str		4860350	1					
ANR	4860392	CFGEntryNode	ENTRY		4860350		True				
ANR	4860393	CFGExitNode	EXIT		4860350		True				
ANR	4860394	Symbol	str		4860350						
ANR	4860395	Symbol	pcs		4860350						
ANR	4860396	Symbol	strlen		4860350						
ANR	4860397	Symbol	strncmp		4860350						
ANR	4860398	Symbol	pcs -> size		4860350						
ANR	4860399	Symbol	pcs -> data		4860350						
ANR	4860400	Symbol	* pcs		4860350						
ANR	4860401	Function	xcf_set_color_model	820:0:25013:26221							
ANR	4860402	FunctionDef	"xcf_set_color_model (xcf_device * xdev , xcf_color_model color_model)"		4860401	0					
ANR	4860403	CompoundStatement		822:0:25091:26221	4860401	0					
ANR	4860404	ExpressionStatement	xdev -> color_model = color_model	823:4:25097:25128	4860401	0	True				
ANR	4860405	AssignmentExpression	xdev -> color_model = color_model		4860401	0		=			
ANR	4860406	PtrMemberAccess	xdev -> color_model		4860401	0					
ANR	4860407	Identifier	xdev		4860401	0					
ANR	4860408	Identifier	color_model		4860401	1					
ANR	4860409	Identifier	color_model		4860401	1					
ANR	4860410	IfStatement	if ( color_model == XCF_DEVICE_GRAY )		4860401	1					
ANR	4860411	Condition	color_model == XCF_DEVICE_GRAY	824:8:25138:25167	4860401	0	True				
ANR	4860412	EqualityExpression	color_model == XCF_DEVICE_GRAY		4860401	0		==			
ANR	4860413	Identifier	color_model		4860401	0					
ANR	4860414	Identifier	XCF_DEVICE_GRAY		4860401	1					
ANR	4860415	CompoundStatement		3:40:78:78	4860401	1					
ANR	4860416	ExpressionStatement	xdev -> std_colorant_names = & DeviceGrayComponents	825:8:25180:25228	4860401	0	True				
ANR	4860417	AssignmentExpression	xdev -> std_colorant_names = & DeviceGrayComponents		4860401	0		=			
ANR	4860418	PtrMemberAccess	xdev -> std_colorant_names		4860401	0					
ANR	4860419	Identifier	xdev		4860401	0					
ANR	4860420	Identifier	std_colorant_names		4860401	1					
ANR	4860421	UnaryOperationExpression	& DeviceGrayComponents		4860401	1					
ANR	4860422	UnaryOperator	&		4860401	0					
ANR	4860423	Identifier	DeviceGrayComponents		4860401	1					
ANR	4860424	ExpressionStatement	xdev -> num_std_colorant_names = 1	826:8:25238:25270	4860401	1	True				
ANR	4860425	AssignmentExpression	xdev -> num_std_colorant_names = 1		4860401	0		=			
ANR	4860426	PtrMemberAccess	xdev -> num_std_colorant_names		4860401	0					
ANR	4860427	Identifier	xdev		4860401	0					
ANR	4860428	Identifier	num_std_colorant_names		4860401	1					
ANR	4860429	PrimaryExpression	1		4860401	1					
ANR	4860430	ExpressionStatement	"xdev -> color_info . cm_name = ""DeviceGray"""	827:8:25280:25319	4860401	2	True				
ANR	4860431	AssignmentExpression	"xdev -> color_info . cm_name = ""DeviceGray"""		4860401	0		=			
ANR	4860432	MemberAccess	xdev -> color_info . cm_name		4860401	0					
ANR	4860433	PtrMemberAccess	xdev -> color_info		4860401	0					
ANR	4860434	Identifier	xdev		4860401	0					
ANR	4860435	Identifier	color_info		4860401	1					
ANR	4860436	Identifier	cm_name		4860401	1					
ANR	4860437	PrimaryExpression	"""DeviceGray"""		4860401	1					
ANR	4860438	ExpressionStatement	xdev -> color_info . polarity = GX_CINFO_POLARITY_ADDITIVE	828:8:25329:25383	4860401	3	True				
ANR	4860439	AssignmentExpression	xdev -> color_info . polarity = GX_CINFO_POLARITY_ADDITIVE		4860401	0		=			
ANR	4860440	MemberAccess	xdev -> color_info . polarity		4860401	0					
ANR	4860441	PtrMemberAccess	xdev -> color_info		4860401	0					
ANR	4860442	Identifier	xdev		4860401	0					
ANR	4860443	Identifier	color_info		4860401	1					
ANR	4860444	Identifier	polarity		4860401	1					
ANR	4860445	Identifier	GX_CINFO_POLARITY_ADDITIVE		4860401	1					
ANR	4860446	ElseStatement	else		4860401	0					
ANR	4860447	IfStatement	if ( color_model == XCF_DEVICE_RGB )		4860401	0					
ANR	4860448	Condition	color_model == XCF_DEVICE_RGB	829:15:25400:25428	4860401	0	True				
ANR	4860449	EqualityExpression	color_model == XCF_DEVICE_RGB		4860401	0		==			
ANR	4860450	Identifier	color_model		4860401	0					
ANR	4860451	Identifier	XCF_DEVICE_RGB		4860401	1					
ANR	4860452	CompoundStatement		8:46:339:339	4860401	1					
ANR	4860453	ExpressionStatement	xdev -> std_colorant_names = & DeviceRGBComponents	830:8:25441:25488	4860401	0	True				
ANR	4860454	AssignmentExpression	xdev -> std_colorant_names = & DeviceRGBComponents		4860401	0		=			
ANR	4860455	PtrMemberAccess	xdev -> std_colorant_names		4860401	0					
ANR	4860456	Identifier	xdev		4860401	0					
ANR	4860457	Identifier	std_colorant_names		4860401	1					
ANR	4860458	UnaryOperationExpression	& DeviceRGBComponents		4860401	1					
ANR	4860459	UnaryOperator	&		4860401	0					
ANR	4860460	Identifier	DeviceRGBComponents		4860401	1					
ANR	4860461	ExpressionStatement	xdev -> num_std_colorant_names = 3	831:8:25498:25530	4860401	1	True				
ANR	4860462	AssignmentExpression	xdev -> num_std_colorant_names = 3		4860401	0		=			
ANR	4860463	PtrMemberAccess	xdev -> num_std_colorant_names		4860401	0					
ANR	4860464	Identifier	xdev		4860401	0					
ANR	4860465	Identifier	num_std_colorant_names		4860401	1					
ANR	4860466	PrimaryExpression	3		4860401	1					
ANR	4860467	ExpressionStatement	"xdev -> color_info . cm_name = ""DeviceRGB"""	832:8:25540:25578	4860401	2	True				
ANR	4860468	AssignmentExpression	"xdev -> color_info . cm_name = ""DeviceRGB"""		4860401	0		=			
ANR	4860469	MemberAccess	xdev -> color_info . cm_name		4860401	0					
ANR	4860470	PtrMemberAccess	xdev -> color_info		4860401	0					
ANR	4860471	Identifier	xdev		4860401	0					
ANR	4860472	Identifier	color_info		4860401	1					
ANR	4860473	Identifier	cm_name		4860401	1					
ANR	4860474	PrimaryExpression	"""DeviceRGB"""		4860401	1					
ANR	4860475	ExpressionStatement	xdev -> color_info . polarity = GX_CINFO_POLARITY_ADDITIVE	833:8:25588:25642	4860401	3	True				
ANR	4860476	AssignmentExpression	xdev -> color_info . polarity = GX_CINFO_POLARITY_ADDITIVE		4860401	0		=			
ANR	4860477	MemberAccess	xdev -> color_info . polarity		4860401	0					
ANR	4860478	PtrMemberAccess	xdev -> color_info		4860401	0					
ANR	4860479	Identifier	xdev		4860401	0					
ANR	4860480	Identifier	color_info		4860401	1					
ANR	4860481	Identifier	polarity		4860401	1					
ANR	4860482	Identifier	GX_CINFO_POLARITY_ADDITIVE		4860401	1					
ANR	4860483	ElseStatement	else		4860401	0					
ANR	4860484	IfStatement	if ( color_model == XCF_DEVICE_CMYK )		4860401	0					
ANR	4860485	Condition	color_model == XCF_DEVICE_CMYK	834:15:25659:25688	4860401	0	True				
ANR	4860486	EqualityExpression	color_model == XCF_DEVICE_CMYK		4860401	0		==			
ANR	4860487	Identifier	color_model		4860401	0					
ANR	4860488	Identifier	XCF_DEVICE_CMYK		4860401	1					
ANR	4860489	CompoundStatement		13:47:599:599	4860401	1					
ANR	4860490	ExpressionStatement	xdev -> std_colorant_names = & DeviceCMYKComponents	835:8:25701:25749	4860401	0	True				
ANR	4860491	AssignmentExpression	xdev -> std_colorant_names = & DeviceCMYKComponents		4860401	0		=			
ANR	4860492	PtrMemberAccess	xdev -> std_colorant_names		4860401	0					
ANR	4860493	Identifier	xdev		4860401	0					
ANR	4860494	Identifier	std_colorant_names		4860401	1					
ANR	4860495	UnaryOperationExpression	& DeviceCMYKComponents		4860401	1					
ANR	4860496	UnaryOperator	&		4860401	0					
ANR	4860497	Identifier	DeviceCMYKComponents		4860401	1					
ANR	4860498	ExpressionStatement	xdev -> num_std_colorant_names = 4	836:8:25759:25791	4860401	1	True				
ANR	4860499	AssignmentExpression	xdev -> num_std_colorant_names = 4		4860401	0		=			
ANR	4860500	PtrMemberAccess	xdev -> num_std_colorant_names		4860401	0					
ANR	4860501	Identifier	xdev		4860401	0					
ANR	4860502	Identifier	num_std_colorant_names		4860401	1					
ANR	4860503	PrimaryExpression	4		4860401	1					
ANR	4860504	ExpressionStatement	"xdev -> color_info . cm_name = ""DeviceCMYK"""	837:8:25801:25840	4860401	2	True				
ANR	4860505	AssignmentExpression	"xdev -> color_info . cm_name = ""DeviceCMYK"""		4860401	0		=			
ANR	4860506	MemberAccess	xdev -> color_info . cm_name		4860401	0					
ANR	4860507	PtrMemberAccess	xdev -> color_info		4860401	0					
ANR	4860508	Identifier	xdev		4860401	0					
ANR	4860509	Identifier	color_info		4860401	1					
ANR	4860510	Identifier	cm_name		4860401	1					
ANR	4860511	PrimaryExpression	"""DeviceCMYK"""		4860401	1					
ANR	4860512	ExpressionStatement	xdev -> color_info . polarity = GX_CINFO_POLARITY_SUBTRACTIVE	838:8:25850:25907	4860401	3	True				
ANR	4860513	AssignmentExpression	xdev -> color_info . polarity = GX_CINFO_POLARITY_SUBTRACTIVE		4860401	0		=			
ANR	4860514	MemberAccess	xdev -> color_info . polarity		4860401	0					
ANR	4860515	PtrMemberAccess	xdev -> color_info		4860401	0					
ANR	4860516	Identifier	xdev		4860401	0					
ANR	4860517	Identifier	color_info		4860401	1					
ANR	4860518	Identifier	polarity		4860401	1					
ANR	4860519	Identifier	GX_CINFO_POLARITY_SUBTRACTIVE		4860401	1					
ANR	4860520	ElseStatement	else		4860401	0					
ANR	4860521	IfStatement	if ( color_model == XCF_DEVICE_N )		4860401	0					
ANR	4860522	Condition	color_model == XCF_DEVICE_N	839:15:25924:25950	4860401	0	True				
ANR	4860523	EqualityExpression	color_model == XCF_DEVICE_N		4860401	0		==			
ANR	4860524	Identifier	color_model		4860401	0					
ANR	4860525	Identifier	XCF_DEVICE_N		4860401	1					
ANR	4860526	CompoundStatement		18:44:861:861	4860401	1					
ANR	4860527	ExpressionStatement	xdev -> std_colorant_names = & DeviceCMYKComponents	840:8:25963:26011	4860401	0	True				
ANR	4860528	AssignmentExpression	xdev -> std_colorant_names = & DeviceCMYKComponents		4860401	0		=			
ANR	4860529	PtrMemberAccess	xdev -> std_colorant_names		4860401	0					
ANR	4860530	Identifier	xdev		4860401	0					
ANR	4860531	Identifier	std_colorant_names		4860401	1					
ANR	4860532	UnaryOperationExpression	& DeviceCMYKComponents		4860401	1					
ANR	4860533	UnaryOperator	&		4860401	0					
ANR	4860534	Identifier	DeviceCMYKComponents		4860401	1					
ANR	4860535	ExpressionStatement	xdev -> num_std_colorant_names = 4	841:8:26021:26053	4860401	1	True				
ANR	4860536	AssignmentExpression	xdev -> num_std_colorant_names = 4		4860401	0		=			
ANR	4860537	PtrMemberAccess	xdev -> num_std_colorant_names		4860401	0					
ANR	4860538	Identifier	xdev		4860401	0					
ANR	4860539	Identifier	num_std_colorant_names		4860401	1					
ANR	4860540	PrimaryExpression	4		4860401	1					
ANR	4860541	ExpressionStatement	"xdev -> color_info . cm_name = ""DeviceN"""	842:8:26063:26099	4860401	2	True				
ANR	4860542	AssignmentExpression	"xdev -> color_info . cm_name = ""DeviceN"""		4860401	0		=			
ANR	4860543	MemberAccess	xdev -> color_info . cm_name		4860401	0					
ANR	4860544	PtrMemberAccess	xdev -> color_info		4860401	0					
ANR	4860545	Identifier	xdev		4860401	0					
ANR	4860546	Identifier	color_info		4860401	1					
ANR	4860547	Identifier	cm_name		4860401	1					
ANR	4860548	PrimaryExpression	"""DeviceN"""		4860401	1					
ANR	4860549	ExpressionStatement	xdev -> color_info . polarity = GX_CINFO_POLARITY_SUBTRACTIVE	843:8:26109:26166	4860401	3	True				
ANR	4860550	AssignmentExpression	xdev -> color_info . polarity = GX_CINFO_POLARITY_SUBTRACTIVE		4860401	0		=			
ANR	4860551	MemberAccess	xdev -> color_info . polarity		4860401	0					
ANR	4860552	PtrMemberAccess	xdev -> color_info		4860401	0					
ANR	4860553	Identifier	xdev		4860401	0					
ANR	4860554	Identifier	color_info		4860401	1					
ANR	4860555	Identifier	polarity		4860401	1					
ANR	4860556	Identifier	GX_CINFO_POLARITY_SUBTRACTIVE		4860401	1					
ANR	4860557	ElseStatement	else		4860401	0					
ANR	4860558	CompoundStatement		23:11:1087:1087	4860401	0					
ANR	4860559	ReturnStatement	return - 1 ;	845:8:26189:26198	4860401	0	True				
ANR	4860560	UnaryOperationExpression	- 1		4860401	0					
ANR	4860561	UnaryOperator	-		4860401	0					
ANR	4860562	PrimaryExpression	1		4860401	1					
ANR	4860563	ReturnStatement	return 0 ;	848:4:26211:26219	4860401	2	True				
ANR	4860564	PrimaryExpression	0		4860401	0					
ANR	4860565	ReturnType	static int		4860401	1					
ANR	4860566	Identifier	xcf_set_color_model		4860401	2					
ANR	4860567	ParameterList	"xcf_device * xdev , xcf_color_model color_model"		4860401	3					
ANR	4860568	Parameter	xcf_device * xdev	821:20:25044:25059	4860401	0	True				
ANR	4860569	ParameterType	xcf_device *		4860401	0					
ANR	4860570	Identifier	xdev		4860401	1					
ANR	4860571	Parameter	xcf_color_model color_model	821:38:25062:25088	4860401	1	True				
ANR	4860572	ParameterType	xcf_color_model		4860401	0					
ANR	4860573	Identifier	color_model		4860401	1					
ANR	4860574	CFGEntryNode	ENTRY		4860401		True				
ANR	4860575	CFGExitNode	EXIT		4860401		True				
ANR	4860576	Symbol	& DeviceRGBComponents		4860401						
ANR	4860577	Symbol	XCF_DEVICE_N		4860401						
ANR	4860578	Symbol	xdev -> std_colorant_names		4860401						
ANR	4860579	Symbol	xdev		4860401						
ANR	4860580	Symbol	color_model		4860401						
ANR	4860581	Symbol	GX_CINFO_POLARITY_ADDITIVE		4860401						
ANR	4860582	Symbol	& DeviceCMYKComponents		4860401						
ANR	4860583	Symbol	xdev -> color_info . cm_name		4860401						
ANR	4860584	Symbol	XCF_DEVICE_RGB		4860401						
ANR	4860585	Symbol	xdev -> num_std_colorant_names		4860401						
ANR	4860586	Symbol	XCF_DEVICE_CMYK		4860401						
ANR	4860587	Symbol	xdev -> color_info		4860401						
ANR	4860588	Symbol	GX_CINFO_POLARITY_SUBTRACTIVE		4860401						
ANR	4860589	Symbol	* xdev		4860401						
ANR	4860590	Symbol	& DeviceGrayComponents		4860401						
ANR	4860591	Symbol	xdev -> color_model		4860401						
ANR	4860592	Symbol	XCF_DEVICE_GRAY		4860401						
ANR	4860593	Symbol	xdev -> color_info . polarity		4860401						
ANR	4860594	Function	xcf_prn_close	855:0:26277:26868							
ANR	4860595	FunctionDef	xcf_prn_close (gx_device * dev)		4860594	0					
ANR	4860596	CompoundStatement		857:0:26318:26868	4860594	0					
ANR	4860597	Statement	xcf_device	858:4:26324:26333	4860594	0	True				
ANR	4860598	Statement	*	858:15:26335:26335	4860594	1	True				
ANR	4860599	Statement	const	858:17:26337:26341	4860594	2	True				
ANR	4860600	ExpressionStatement	xdev = ( xcf_device * ) dev	858:23:26343:26368	4860594	3	True				
ANR	4860601	AssignmentExpression	xdev = ( xcf_device * ) dev		4860594	0		=			
ANR	4860602	Identifier	xdev		4860594	0					
ANR	4860603	CastExpression	( xcf_device * ) dev		4860594	1					
ANR	4860604	CastTarget	xcf_device *		4860594	0					
ANR	4860605	Identifier	dev		4860594	1					
ANR	4860606	IfStatement	if ( xdev -> cmyk_icc_link != NULL )		4860594	4					
ANR	4860607	Condition	xdev -> cmyk_icc_link != NULL	860:8:26379:26405	4860594	0	True				
ANR	4860608	EqualityExpression	xdev -> cmyk_icc_link != NULL		4860594	0		!=			
ANR	4860609	PtrMemberAccess	xdev -> cmyk_icc_link		4860594	0					
ANR	4860610	Identifier	xdev		4860594	0					
ANR	4860611	Identifier	cmyk_icc_link		4860594	1					
ANR	4860612	Identifier	NULL		4860594	1					
ANR	4860613	CompoundStatement		4:37:89:89	4860594	1					
ANR	4860614	ExpressionStatement	gscms_release_link ( xdev -> cmyk_icc_link )	861:8:26418:26457	4860594	0	True				
ANR	4860615	CallExpression	gscms_release_link ( xdev -> cmyk_icc_link )		4860594	0					
ANR	4860616	Callee	gscms_release_link		4860594	0					
ANR	4860617	Identifier	gscms_release_link		4860594	0					
ANR	4860618	ArgumentList	xdev -> cmyk_icc_link		4860594	1					
ANR	4860619	Argument	xdev -> cmyk_icc_link		4860594	0					
ANR	4860620	PtrMemberAccess	xdev -> cmyk_icc_link		4860594	0					
ANR	4860621	Identifier	xdev		4860594	0					
ANR	4860622	Identifier	cmyk_icc_link		4860594	1					
ANR	4860623	ExpressionStatement	"rc_decrement ( xdev -> cmyk_profile , ""xcf_prn_close"" )"	862:8:26467:26516	4860594	1	True				
ANR	4860624	CallExpression	"rc_decrement ( xdev -> cmyk_profile , ""xcf_prn_close"" )"		4860594	0					
ANR	4860625	Callee	rc_decrement		4860594	0					
ANR	4860626	Identifier	rc_decrement		4860594	0					
ANR	4860627	ArgumentList	xdev -> cmyk_profile		4860594	1					
ANR	4860628	Argument	xdev -> cmyk_profile		4860594	0					
ANR	4860629	PtrMemberAccess	xdev -> cmyk_profile		4860594	0					
ANR	4860630	Identifier	xdev		4860594	0					
ANR	4860631	Identifier	cmyk_profile		4860594	1					
ANR	4860632	Argument	"""xcf_prn_close"""		4860594	1					
ANR	4860633	PrimaryExpression	"""xcf_prn_close"""		4860594	0					
ANR	4860634	IfStatement	if ( xdev -> rgb_icc_link != NULL )		4860594	5					
ANR	4860635	Condition	xdev -> rgb_icc_link != NULL	865:8:26533:26558	4860594	0	True				
ANR	4860636	EqualityExpression	xdev -> rgb_icc_link != NULL		4860594	0		!=			
ANR	4860637	PtrMemberAccess	xdev -> rgb_icc_link		4860594	0					
ANR	4860638	Identifier	xdev		4860594	0					
ANR	4860639	Identifier	rgb_icc_link		4860594	1					
ANR	4860640	Identifier	NULL		4860594	1					
ANR	4860641	CompoundStatement		9:36:242:242	4860594	1					
ANR	4860642	ExpressionStatement	gscms_release_link ( xdev -> rgb_icc_link )	866:8:26571:26609	4860594	0	True				
ANR	4860643	CallExpression	gscms_release_link ( xdev -> rgb_icc_link )		4860594	0					
ANR	4860644	Callee	gscms_release_link		4860594	0					
ANR	4860645	Identifier	gscms_release_link		4860594	0					
ANR	4860646	ArgumentList	xdev -> rgb_icc_link		4860594	1					
ANR	4860647	Argument	xdev -> rgb_icc_link		4860594	0					
ANR	4860648	PtrMemberAccess	xdev -> rgb_icc_link		4860594	0					
ANR	4860649	Identifier	xdev		4860594	0					
ANR	4860650	Identifier	rgb_icc_link		4860594	1					
ANR	4860651	ExpressionStatement	"rc_decrement ( xdev -> rgb_profile , ""xcf_prn_close"" )"	867:8:26619:26667	4860594	1	True				
ANR	4860652	CallExpression	"rc_decrement ( xdev -> rgb_profile , ""xcf_prn_close"" )"		4860594	0					
ANR	4860653	Callee	rc_decrement		4860594	0					
ANR	4860654	Identifier	rc_decrement		4860594	0					
ANR	4860655	ArgumentList	xdev -> rgb_profile		4860594	1					
ANR	4860656	Argument	xdev -> rgb_profile		4860594	0					
ANR	4860657	PtrMemberAccess	xdev -> rgb_profile		4860594	0					
ANR	4860658	Identifier	xdev		4860594	0					
ANR	4860659	Identifier	rgb_profile		4860594	1					
ANR	4860660	Argument	"""xcf_prn_close"""		4860594	1					
ANR	4860661	PrimaryExpression	"""xcf_prn_close"""		4860594	0					
ANR	4860662	IfStatement	if ( xdev -> output_icc_link != NULL )		4860594	6					
ANR	4860663	Condition	xdev -> output_icc_link != NULL	870:8:26684:26712	4860594	0	True				
ANR	4860664	EqualityExpression	xdev -> output_icc_link != NULL		4860594	0		!=			
ANR	4860665	PtrMemberAccess	xdev -> output_icc_link		4860594	0					
ANR	4860666	Identifier	xdev		4860594	0					
ANR	4860667	Identifier	output_icc_link		4860594	1					
ANR	4860668	Identifier	NULL		4860594	1					
ANR	4860669	CompoundStatement		14:39:396:396	4860594	1					
ANR	4860670	ExpressionStatement	gscms_release_link ( xdev -> output_icc_link )	871:8:26725:26766	4860594	0	True				
ANR	4860671	CallExpression	gscms_release_link ( xdev -> output_icc_link )		4860594	0					
ANR	4860672	Callee	gscms_release_link		4860594	0					
ANR	4860673	Identifier	gscms_release_link		4860594	0					
ANR	4860674	ArgumentList	xdev -> output_icc_link		4860594	1					
ANR	4860675	Argument	xdev -> output_icc_link		4860594	0					
ANR	4860676	PtrMemberAccess	xdev -> output_icc_link		4860594	0					
ANR	4860677	Identifier	xdev		4860594	0					
ANR	4860678	Identifier	output_icc_link		4860594	1					
ANR	4860679	ExpressionStatement	"rc_decrement ( xdev -> output_profile , ""xcf_prn_close"" )"	872:8:26776:26827	4860594	1	True				
ANR	4860680	CallExpression	"rc_decrement ( xdev -> output_profile , ""xcf_prn_close"" )"		4860594	0					
ANR	4860681	Callee	rc_decrement		4860594	0					
ANR	4860682	Identifier	rc_decrement		4860594	0					
ANR	4860683	ArgumentList	xdev -> output_profile		4860594	1					
ANR	4860684	Argument	xdev -> output_profile		4860594	0					
ANR	4860685	PtrMemberAccess	xdev -> output_profile		4860594	0					
ANR	4860686	Identifier	xdev		4860594	0					
ANR	4860687	Identifier	output_profile		4860594	1					
ANR	4860688	Argument	"""xcf_prn_close"""		4860594	1					
ANR	4860689	PrimaryExpression	"""xcf_prn_close"""		4860594	0					
ANR	4860690	ReturnStatement	return gdev_prn_close ( dev ) ;	875:4:26840:26866	4860594	7	True				
ANR	4860691	CallExpression	gdev_prn_close ( dev )		4860594	0					
ANR	4860692	Callee	gdev_prn_close		4860594	0					
ANR	4860693	Identifier	gdev_prn_close		4860594	0					
ANR	4860694	ArgumentList	dev		4860594	1					
ANR	4860695	Argument	dev		4860594	0					
ANR	4860696	Identifier	dev		4860594	0					
ANR	4860697	ReturnType	static int		4860594	1					
ANR	4860698	Identifier	xcf_prn_close		4860594	2					
ANR	4860699	ParameterList	gx_device * dev		4860594	3					
ANR	4860700	Parameter	gx_device * dev	856:14:26302:26315	4860594	0	True				
ANR	4860701	ParameterType	gx_device *		4860594	0					
ANR	4860702	Identifier	dev		4860594	1					
ANR	4860703	CFGEntryNode	ENTRY		4860594		True				
ANR	4860704	CFGExitNode	EXIT		4860594		True				
ANR	4860705	Symbol	xdev -> output_profile		4860594						
ANR	4860706	Symbol	xdev -> rgb_profile		4860594						
ANR	4860707	Symbol	NULL		4860594						
ANR	4860708	Symbol	xdev -> rgb_icc_link		4860594						
ANR	4860709	Symbol	dev		4860594						
ANR	4860710	Symbol	xdev		4860594						
ANR	4860711	Symbol	* xdev		4860594						
ANR	4860712	Symbol	gdev_prn_close		4860594						
ANR	4860713	Symbol	xdev -> output_icc_link		4860594						
ANR	4860714	Symbol	xdev -> cmyk_icc_link		4860594						
ANR	4860715	Symbol	xdev -> cmyk_profile		4860594						
ANR	4860716	Function	xcf_put_params	879:0:26945:31104							
ANR	4860717	FunctionDef	"xcf_put_params (gx_device * pdev , gs_param_list * plist)"		4860716	0					
ANR	4860718	CompoundStatement		881:0:27012:31104	4860716	0					
ANR	4860719	Statement	xcf_device	882:4:27018:27027	4860716	0	True				
ANR	4860720	Statement	*	882:15:27029:27029	4860716	1	True				
ANR	4860721	Statement	const	882:17:27031:27035	4860716	2	True				
ANR	4860722	ExpressionStatement	pdevn = ( xcf_device * ) pdev	882:23:27037:27064	4860716	3	True				
ANR	4860723	AssignmentExpression	pdevn = ( xcf_device * ) pdev		4860716	0		=			
ANR	4860724	Identifier	pdevn		4860716	0					
ANR	4860725	CastExpression	( xcf_device * ) pdev		4860716	1					
ANR	4860726	CastTarget	xcf_device *		4860716	0					
ANR	4860727	Identifier	pdev		4860716	1					
ANR	4860728	IdentifierDeclStatement	gx_device_color_info save_info ;	883:4:27070:27100	4860716	4	True				
ANR	4860729	IdentifierDecl	save_info		4860716	0					
ANR	4860730	IdentifierDeclType	gx_device_color_info		4860716	0					
ANR	4860731	Identifier	save_info		4860716	1					
ANR	4860732	IdentifierDeclStatement	gs_param_name param_name ;	884:4:27106:27130	4860716	5	True				
ANR	4860733	IdentifierDecl	param_name		4860716	0					
ANR	4860734	IdentifierDeclType	gs_param_name		4860716	0					
ANR	4860735	Identifier	param_name		4860716	1					
ANR	4860736	IdentifierDeclStatement	int npcmcolors ;	885:4:27136:27150	4860716	6	True				
ANR	4860737	IdentifierDecl	npcmcolors		4860716	0					
ANR	4860738	IdentifierDeclType	int		4860716	0					
ANR	4860739	Identifier	npcmcolors		4860716	1					
ANR	4860740	IdentifierDeclStatement	int num_spot = pdevn -> separation_names . num_names ;	886:4:27156:27204	4860716	7	True				
ANR	4860741	IdentifierDecl	num_spot = pdevn -> separation_names . num_names		4860716	0					
ANR	4860742	IdentifierDeclType	int		4860716	0					
ANR	4860743	Identifier	num_spot		4860716	1					
ANR	4860744	AssignmentExpression	num_spot = pdevn -> separation_names . num_names		4860716	2		=			
ANR	4860745	Identifier	num_spot		4860716	0					
ANR	4860746	MemberAccess	pdevn -> separation_names . num_names		4860716	1					
ANR	4860747	PtrMemberAccess	pdevn -> separation_names		4860716	0					
ANR	4860748	Identifier	pdevn		4860716	0					
ANR	4860749	Identifier	separation_names		4860716	1					
ANR	4860750	Identifier	num_names		4860716	1					
ANR	4860751	IdentifierDeclStatement	int ecode = 0 ;	887:4:27210:27223	4860716	8	True				
ANR	4860752	IdentifierDecl	ecode = 0		4860716	0					
ANR	4860753	IdentifierDeclType	int		4860716	0					
ANR	4860754	Identifier	ecode		4860716	1					
ANR	4860755	AssignmentExpression	ecode = 0		4860716	2		=			
ANR	4860756	Identifier	ecode		4860716	0					
ANR	4860757	PrimaryExpression	0		4860716	1					
ANR	4860758	IdentifierDeclStatement	int code ;	888:4:27229:27237	4860716	9	True				
ANR	4860759	IdentifierDecl	code		4860716	0					
ANR	4860760	IdentifierDeclType	int		4860716	0					
ANR	4860761	Identifier	code		4860716	1					
ANR	4860762	IdentifierDeclStatement	gs_param_string_array scna ;	889:4:27243:27269	4860716	10	True				
ANR	4860763	IdentifierDecl	scna		4860716	0					
ANR	4860764	IdentifierDeclType	gs_param_string_array		4860716	0					
ANR	4860765	Identifier	scna		4860716	1					
ANR	4860766	IdentifierDeclStatement	gs_param_string po ;	890:4:27275:27293	4860716	11	True				
ANR	4860767	IdentifierDecl	po		4860716	0					
ANR	4860768	IdentifierDeclType	gs_param_string		4860716	0					
ANR	4860769	Identifier	po		4860716	1					
ANR	4860770	IdentifierDeclStatement	gs_param_string prgb ;	891:4:27299:27319	4860716	12	True				
ANR	4860771	IdentifierDecl	prgb		4860716	0					
ANR	4860772	IdentifierDeclType	gs_param_string		4860716	0					
ANR	4860773	Identifier	prgb		4860716	1					
ANR	4860774	IdentifierDeclStatement	gs_param_string pcmyk ;	892:4:27325:27346	4860716	13	True				
ANR	4860775	IdentifierDecl	pcmyk		4860716	0					
ANR	4860776	IdentifierDeclType	gs_param_string		4860716	0					
ANR	4860777	Identifier	pcmyk		4860716	1					
ANR	4860778	IdentifierDeclStatement	gs_param_string pcm ;	893:4:27352:27371	4860716	14	True				
ANR	4860779	IdentifierDecl	pcm		4860716	0					
ANR	4860780	IdentifierDeclType	gs_param_string		4860716	0					
ANR	4860781	Identifier	pcm		4860716	1					
ANR	4860782	IdentifierDeclStatement	xcf_color_model color_model = pdevn -> color_model ;	894:4:27377:27425	4860716	15	True				
ANR	4860783	IdentifierDecl	color_model = pdevn -> color_model		4860716	0					
ANR	4860784	IdentifierDeclType	xcf_color_model		4860716	0					
ANR	4860785	Identifier	color_model		4860716	1					
ANR	4860786	AssignmentExpression	color_model = pdevn -> color_model		4860716	2		=			
ANR	4860787	Identifier	color_model		4860716	0					
ANR	4860788	PtrMemberAccess	pdevn -> color_model		4860716	1					
ANR	4860789	Identifier	pdevn		4860716	0					
ANR	4860790	Identifier	color_model		4860716	1					
ANR	4860791	Statement	BEGIN_ARRAY_PARAM	896:4:27432:27448	4860716	16	True				
ANR	4860792	Statement	(	896:21:27449:27449	4860716	17	True				
ANR	4860793	Statement	param_read_name_array	896:22:27450:27470	4860716	18	True				
ANR	4860794	Statement	","	896:43:27471:27471	4860716	19	True				
ANR	4860795	Statement	"""SeparationColorNames"""	896:45:27473:27494	4860716	20	True				
ANR	4860796	Statement	","	896:67:27495:27495	4860716	21	True				
ANR	4860797	Statement	scna	896:69:27497:27500	4860716	22	True				
ANR	4860798	Statement	","	896:73:27501:27501	4860716	23	True				
ANR	4860799	Statement	scna	896:75:27503:27506	4860716	24	True				
ANR	4860800	Statement	.	896:79:27507:27507	4860716	25	True				
ANR	4860801	Statement	size	896:80:27508:27511	4860716	26	True				
ANR	4860802	Statement	","	896:84:27512:27512	4860716	27	True				
ANR	4860803	Statement	scne	896:86:27514:27517	4860716	28	True				
ANR	4860804	Statement	)	896:90:27518:27518	4860716	29	True				
ANR	4860805	CompoundStatement		16:92:507:507	4860716	30					
ANR	4860806	BreakStatement	break ;	897:8:27530:27535	4860716	0	True				
ANR	4860807	ExpressionStatement	"END_ARRAY_PARAM ( scna , scne )"	898:6:27543:27570	4860716	31	True				
ANR	4860808	CallExpression	"END_ARRAY_PARAM ( scna , scne )"		4860716	0					
ANR	4860809	Callee	END_ARRAY_PARAM		4860716	0					
ANR	4860810	Identifier	END_ARRAY_PARAM		4860716	0					
ANR	4860811	ArgumentList	scna		4860716	1					
ANR	4860812	Argument	scna		4860716	0					
ANR	4860813	Identifier	scna		4860716	0					
ANR	4860814	Argument	scne		4860716	1					
ANR	4860815	Identifier	scne		4860716	0					
ANR	4860816	IfStatement	if ( code >= 0 )		4860716	32					
ANR	4860817	Condition	code >= 0	900:8:27581:27589	4860716	0	True				
ANR	4860818	RelationalExpression	code >= 0		4860716	0		>=			
ANR	4860819	Identifier	code		4860716	0					
ANR	4860820	PrimaryExpression	0		4860716	1					
ANR	4860821	ExpressionStatement	"code = xcf_param_read_fn ( plist , ""ProfileOut"" , & po , sizeof ( pdevn -> profile_out_fn ) )"	901:8:27600:27714	4860716	1	True				
ANR	4860822	AssignmentExpression	"code = xcf_param_read_fn ( plist , ""ProfileOut"" , & po , sizeof ( pdevn -> profile_out_fn ) )"		4860716	0		=			
ANR	4860823	Identifier	code		4860716	0					
ANR	4860824	CallExpression	"xcf_param_read_fn ( plist , ""ProfileOut"" , & po , sizeof ( pdevn -> profile_out_fn ) )"		4860716	1					
ANR	4860825	Callee	xcf_param_read_fn		4860716	0					
ANR	4860826	Identifier	xcf_param_read_fn		4860716	0					
ANR	4860827	ArgumentList	plist		4860716	1					
ANR	4860828	Argument	plist		4860716	0					
ANR	4860829	Identifier	plist		4860716	0					
ANR	4860830	Argument	"""ProfileOut"""		4860716	1					
ANR	4860831	PrimaryExpression	"""ProfileOut"""		4860716	0					
ANR	4860832	Argument	& po		4860716	2					
ANR	4860833	UnaryOperationExpression	& po		4860716	0					
ANR	4860834	UnaryOperator	&		4860716	0					
ANR	4860835	Identifier	po		4860716	1					
ANR	4860836	Argument	sizeof ( pdevn -> profile_out_fn )		4860716	3					
ANR	4860837	SizeofExpression	sizeof ( pdevn -> profile_out_fn )		4860716	0					
ANR	4860838	Sizeof	sizeof		4860716	0					
ANR	4860839	PtrMemberAccess	pdevn -> profile_out_fn		4860716	1					
ANR	4860840	Identifier	pdevn		4860716	0					
ANR	4860841	Identifier	profile_out_fn		4860716	1					
ANR	4860842	IfStatement	if ( code >= 0 )		4860716	33					
ANR	4860843	Condition	code >= 0	903:8:27724:27732	4860716	0	True				
ANR	4860844	RelationalExpression	code >= 0		4860716	0		>=			
ANR	4860845	Identifier	code		4860716	0					
ANR	4860846	PrimaryExpression	0		4860716	1					
ANR	4860847	ExpressionStatement	"code = xcf_param_read_fn ( plist , ""ProfileRgb"" , & prgb , sizeof ( pdevn -> profile_rgb_fn ) )"	904:8:27743:27859	4860716	1	True				
ANR	4860848	AssignmentExpression	"code = xcf_param_read_fn ( plist , ""ProfileRgb"" , & prgb , sizeof ( pdevn -> profile_rgb_fn ) )"		4860716	0		=			
ANR	4860849	Identifier	code		4860716	0					
ANR	4860850	CallExpression	"xcf_param_read_fn ( plist , ""ProfileRgb"" , & prgb , sizeof ( pdevn -> profile_rgb_fn ) )"		4860716	1					
ANR	4860851	Callee	xcf_param_read_fn		4860716	0					
ANR	4860852	Identifier	xcf_param_read_fn		4860716	0					
ANR	4860853	ArgumentList	plist		4860716	1					
ANR	4860854	Argument	plist		4860716	0					
ANR	4860855	Identifier	plist		4860716	0					
ANR	4860856	Argument	"""ProfileRgb"""		4860716	1					
ANR	4860857	PrimaryExpression	"""ProfileRgb"""		4860716	0					
ANR	4860858	Argument	& prgb		4860716	2					
ANR	4860859	UnaryOperationExpression	& prgb		4860716	0					
ANR	4860860	UnaryOperator	&		4860716	0					
ANR	4860861	Identifier	prgb		4860716	1					
ANR	4860862	Argument	sizeof ( pdevn -> profile_rgb_fn )		4860716	3					
ANR	4860863	SizeofExpression	sizeof ( pdevn -> profile_rgb_fn )		4860716	0					
ANR	4860864	Sizeof	sizeof		4860716	0					
ANR	4860865	PtrMemberAccess	pdevn -> profile_rgb_fn		4860716	1					
ANR	4860866	Identifier	pdevn		4860716	0					
ANR	4860867	Identifier	profile_rgb_fn		4860716	1					
ANR	4860868	IfStatement	if ( code >= 0 )		4860716	34					
ANR	4860869	Condition	code >= 0	906:8:27869:27877	4860716	0	True				
ANR	4860870	RelationalExpression	code >= 0		4860716	0		>=			
ANR	4860871	Identifier	code		4860716	0					
ANR	4860872	PrimaryExpression	0		4860716	1					
ANR	4860873	ExpressionStatement	"code = xcf_param_read_fn ( plist , ""ProfileCmyk"" , & pcmyk , sizeof ( pdevn -> profile_cmyk_fn ) )"	907:8:27888:28007	4860716	1	True				
ANR	4860874	AssignmentExpression	"code = xcf_param_read_fn ( plist , ""ProfileCmyk"" , & pcmyk , sizeof ( pdevn -> profile_cmyk_fn ) )"		4860716	0		=			
ANR	4860875	Identifier	code		4860716	0					
ANR	4860876	CallExpression	"xcf_param_read_fn ( plist , ""ProfileCmyk"" , & pcmyk , sizeof ( pdevn -> profile_cmyk_fn ) )"		4860716	1					
ANR	4860877	Callee	xcf_param_read_fn		4860716	0					
ANR	4860878	Identifier	xcf_param_read_fn		4860716	0					
ANR	4860879	ArgumentList	plist		4860716	1					
ANR	4860880	Argument	plist		4860716	0					
ANR	4860881	Identifier	plist		4860716	0					
ANR	4860882	Argument	"""ProfileCmyk"""		4860716	1					
ANR	4860883	PrimaryExpression	"""ProfileCmyk"""		4860716	0					
ANR	4860884	Argument	& pcmyk		4860716	2					
ANR	4860885	UnaryOperationExpression	& pcmyk		4860716	0					
ANR	4860886	UnaryOperator	&		4860716	0					
ANR	4860887	Identifier	pcmyk		4860716	1					
ANR	4860888	Argument	sizeof ( pdevn -> profile_cmyk_fn )		4860716	3					
ANR	4860889	SizeofExpression	sizeof ( pdevn -> profile_cmyk_fn )		4860716	0					
ANR	4860890	Sizeof	sizeof		4860716	0					
ANR	4860891	PtrMemberAccess	pdevn -> profile_cmyk_fn		4860716	1					
ANR	4860892	Identifier	pdevn		4860716	0					
ANR	4860893	Identifier	profile_cmyk_fn		4860716	1					
ANR	4860894	IfStatement	if ( code >= 0 )		4860716	35					
ANR	4860895	Condition	code >= 0	910:8:28018:28026	4860716	0	True				
ANR	4860896	RelationalExpression	code >= 0		4860716	0		>=			
ANR	4860897	Identifier	code		4860716	0					
ANR	4860898	PrimaryExpression	0		4860716	1					
ANR	4860899	ExpressionStatement	"code = param_read_name ( plist , ""ProcessColorModel"" , & pcm )"	911:8:28037:28093	4860716	1	True				
ANR	4860900	AssignmentExpression	"code = param_read_name ( plist , ""ProcessColorModel"" , & pcm )"		4860716	0		=			
ANR	4860901	Identifier	code		4860716	0					
ANR	4860902	CallExpression	"param_read_name ( plist , ""ProcessColorModel"" , & pcm )"		4860716	1					
ANR	4860903	Callee	param_read_name		4860716	0					
ANR	4860904	Identifier	param_read_name		4860716	0					
ANR	4860905	ArgumentList	plist		4860716	1					
ANR	4860906	Argument	plist		4860716	0					
ANR	4860907	Identifier	plist		4860716	0					
ANR	4860908	Argument	"""ProcessColorModel"""		4860716	1					
ANR	4860909	PrimaryExpression	"""ProcessColorModel"""		4860716	0					
ANR	4860910	Argument	& pcm		4860716	2					
ANR	4860911	UnaryOperationExpression	& pcm		4860716	0					
ANR	4860912	UnaryOperator	&		4860716	0					
ANR	4860913	Identifier	pcm		4860716	1					
ANR	4860914	IfStatement	if ( code == 0 )		4860716	36					
ANR	4860915	Condition	code == 0	912:8:28103:28111	4860716	0	True				
ANR	4860916	EqualityExpression	code == 0		4860716	0		==			
ANR	4860917	Identifier	code		4860716	0					
ANR	4860918	PrimaryExpression	0		4860716	1					
ANR	4860919	CompoundStatement		32:19:1101:1101	4860716	1					
ANR	4860920	IfStatement	"if ( param_string_eq ( & pcm , ""DeviceGray"" ) )"		4860716	0					
ANR	4860921	Condition	"param_string_eq ( & pcm , ""DeviceGray"" )"	913:12:28128:28163	4860716	0	True				
ANR	4860922	CallExpression	"param_string_eq ( & pcm , ""DeviceGray"" )"		4860716	0					
ANR	4860923	Callee	param_string_eq		4860716	0					
ANR	4860924	Identifier	param_string_eq		4860716	0					
ANR	4860925	ArgumentList	& pcm		4860716	1					
ANR	4860926	Argument	& pcm		4860716	0					
ANR	4860927	UnaryOperationExpression	& pcm		4860716	0					
ANR	4860928	UnaryOperator	&		4860716	0					
ANR	4860929	Identifier	pcm		4860716	1					
ANR	4860930	Argument	"""DeviceGray"""		4860716	1					
ANR	4860931	PrimaryExpression	"""DeviceGray"""		4860716	0					
ANR	4860932	ExpressionStatement	color_model = XCF_DEVICE_GRAY	914:12:28178:28207	4860716	1	True				
ANR	4860933	AssignmentExpression	color_model = XCF_DEVICE_GRAY		4860716	0		=			
ANR	4860934	Identifier	color_model		4860716	0					
ANR	4860935	Identifier	XCF_DEVICE_GRAY		4860716	1					
ANR	4860936	ElseStatement	else		4860716	0					
ANR	4860937	IfStatement	"if ( param_string_eq ( & pcm , ""DeviceRGB"" ) )"		4860716	0					
ANR	4860938	Condition	"param_string_eq ( & pcm , ""DeviceRGB"" )"	915:17:28226:28260	4860716	0	True				
ANR	4860939	CallExpression	"param_string_eq ( & pcm , ""DeviceRGB"" )"		4860716	0					
ANR	4860940	Callee	param_string_eq		4860716	0					
ANR	4860941	Identifier	param_string_eq		4860716	0					
ANR	4860942	ArgumentList	& pcm		4860716	1					
ANR	4860943	Argument	& pcm		4860716	0					
ANR	4860944	UnaryOperationExpression	& pcm		4860716	0					
ANR	4860945	UnaryOperator	&		4860716	0					
ANR	4860946	Identifier	pcm		4860716	1					
ANR	4860947	Argument	"""DeviceRGB"""		4860716	1					
ANR	4860948	PrimaryExpression	"""DeviceRGB"""		4860716	0					
ANR	4860949	ExpressionStatement	color_model = XCF_DEVICE_RGB	916:12:28275:28303	4860716	1	True				
ANR	4860950	AssignmentExpression	color_model = XCF_DEVICE_RGB		4860716	0		=			
ANR	4860951	Identifier	color_model		4860716	0					
ANR	4860952	Identifier	XCF_DEVICE_RGB		4860716	1					
ANR	4860953	ElseStatement	else		4860716	0					
ANR	4860954	IfStatement	"if ( param_string_eq ( & pcm , ""DeviceCMYK"" ) )"		4860716	0					
ANR	4860955	Condition	"param_string_eq ( & pcm , ""DeviceCMYK"" )"	917:17:28322:28357	4860716	0	True				
ANR	4860956	CallExpression	"param_string_eq ( & pcm , ""DeviceCMYK"" )"		4860716	0					
ANR	4860957	Callee	param_string_eq		4860716	0					
ANR	4860958	Identifier	param_string_eq		4860716	0					
ANR	4860959	ArgumentList	& pcm		4860716	1					
ANR	4860960	Argument	& pcm		4860716	0					
ANR	4860961	UnaryOperationExpression	& pcm		4860716	0					
ANR	4860962	UnaryOperator	&		4860716	0					
ANR	4860963	Identifier	pcm		4860716	1					
ANR	4860964	Argument	"""DeviceCMYK"""		4860716	1					
ANR	4860965	PrimaryExpression	"""DeviceCMYK"""		4860716	0					
ANR	4860966	ExpressionStatement	color_model = XCF_DEVICE_CMYK	918:12:28372:28401	4860716	1	True				
ANR	4860967	AssignmentExpression	color_model = XCF_DEVICE_CMYK		4860716	0		=			
ANR	4860968	Identifier	color_model		4860716	0					
ANR	4860969	Identifier	XCF_DEVICE_CMYK		4860716	1					
ANR	4860970	ElseStatement	else		4860716	0					
ANR	4860971	IfStatement	"if ( param_string_eq ( & pcm , ""DeviceN"" ) )"		4860716	0					
ANR	4860972	Condition	"param_string_eq ( & pcm , ""DeviceN"" )"	919:17:28420:28452	4860716	0	True				
ANR	4860973	CallExpression	"param_string_eq ( & pcm , ""DeviceN"" )"		4860716	0					
ANR	4860974	Callee	param_string_eq		4860716	0					
ANR	4860975	Identifier	param_string_eq		4860716	0					
ANR	4860976	ArgumentList	& pcm		4860716	1					
ANR	4860977	Argument	& pcm		4860716	0					
ANR	4860978	UnaryOperationExpression	& pcm		4860716	0					
ANR	4860979	UnaryOperator	&		4860716	0					
ANR	4860980	Identifier	pcm		4860716	1					
ANR	4860981	Argument	"""DeviceN"""		4860716	1					
ANR	4860982	PrimaryExpression	"""DeviceN"""		4860716	0					
ANR	4860983	ExpressionStatement	color_model = XCF_DEVICE_N	920:12:28467:28493	4860716	1	True				
ANR	4860984	AssignmentExpression	color_model = XCF_DEVICE_N		4860716	0		=			
ANR	4860985	Identifier	color_model		4860716	0					
ANR	4860986	Identifier	XCF_DEVICE_N		4860716	1					
ANR	4860987	ElseStatement	else		4860716	0					
ANR	4860988	CompoundStatement		41:13:1495:1495	4860716	0					
ANR	4860989	ExpressionStatement	"param_signal_error ( plist , ""ProcessColorModel"" , code = gs_error_rangecheck )"	922:12:28522:28627	4860716	0	True				
ANR	4860990	CallExpression	"param_signal_error ( plist , ""ProcessColorModel"" , code = gs_error_rangecheck )"		4860716	0					
ANR	4860991	Callee	param_signal_error		4860716	0					
ANR	4860992	Identifier	param_signal_error		4860716	0					
ANR	4860993	ArgumentList	plist		4860716	1					
ANR	4860994	Argument	plist		4860716	0					
ANR	4860995	Identifier	plist		4860716	0					
ANR	4860996	Argument	"""ProcessColorModel"""		4860716	1					
ANR	4860997	PrimaryExpression	"""ProcessColorModel"""		4860716	0					
ANR	4860998	Argument	code = gs_error_rangecheck		4860716	2					
ANR	4860999	AssignmentExpression	code = gs_error_rangecheck		4860716	0		=			
ANR	4861000	Identifier	code		4860716	0					
ANR	4861001	Identifier	gs_error_rangecheck		4860716	1					
ANR	4861002	IfStatement	if ( code < 0 )		4860716	37					
ANR	4861003	Condition	code < 0	926:8:28653:28660	4860716	0	True				
ANR	4861004	RelationalExpression	code < 0		4860716	0		<			
ANR	4861005	Identifier	code		4860716	0					
ANR	4861006	PrimaryExpression	0		4860716	1					
ANR	4861007	ReturnStatement	return code ;	927:8:28671:28682	4860716	1	True				
ANR	4861008	Identifier	code		4860716	0					
ANR	4861009	ExpressionStatement	save_info = pdevn -> color_info	933:4:28793:28822	4860716	38	True				
ANR	4861010	AssignmentExpression	save_info = pdevn -> color_info		4860716	0		=			
ANR	4861011	Identifier	save_info		4860716	0					
ANR	4861012	PtrMemberAccess	pdevn -> color_info		4860716	1					
ANR	4861013	Identifier	pdevn		4860716	0					
ANR	4861014	Identifier	color_info		4860716	1					
ANR	4861015	ExpressionStatement	"ecode = xcf_set_color_model ( pdevn , color_model )"	934:4:28828:28875	4860716	39	True				
ANR	4861016	AssignmentExpression	"ecode = xcf_set_color_model ( pdevn , color_model )"		4860716	0		=			
ANR	4861017	Identifier	ecode		4860716	0					
ANR	4861018	CallExpression	"xcf_set_color_model ( pdevn , color_model )"		4860716	1					
ANR	4861019	Callee	xcf_set_color_model		4860716	0					
ANR	4861020	Identifier	xcf_set_color_model		4860716	0					
ANR	4861021	ArgumentList	pdevn		4860716	1					
ANR	4861022	Argument	pdevn		4860716	0					
ANR	4861023	Identifier	pdevn		4860716	0					
ANR	4861024	Argument	color_model		4860716	1					
ANR	4861025	Identifier	color_model		4860716	0					
ANR	4861026	IfStatement	if ( ecode == 0 )		4860716	40					
ANR	4861027	Condition	ecode == 0	935:8:28885:28894	4860716	0	True				
ANR	4861028	EqualityExpression	ecode == 0		4860716	0		==			
ANR	4861029	Identifier	ecode		4860716	0					
ANR	4861030	PrimaryExpression	0		4860716	1					
ANR	4861031	ExpressionStatement	"ecode = gdev_prn_put_params ( pdev , plist )"	936:8:28905:28945	4860716	1	True				
ANR	4861032	AssignmentExpression	"ecode = gdev_prn_put_params ( pdev , plist )"		4860716	0		=			
ANR	4861033	Identifier	ecode		4860716	0					
ANR	4861034	CallExpression	"gdev_prn_put_params ( pdev , plist )"		4860716	1					
ANR	4861035	Callee	gdev_prn_put_params		4860716	0					
ANR	4861036	Identifier	gdev_prn_put_params		4860716	0					
ANR	4861037	ArgumentList	pdev		4860716	1					
ANR	4861038	Argument	pdev		4860716	0					
ANR	4861039	Identifier	pdev		4860716	0					
ANR	4861040	Argument	plist		4860716	1					
ANR	4861041	Identifier	plist		4860716	0					
ANR	4861042	IfStatement	if ( ecode < 0 )		4860716	41					
ANR	4861043	Condition	ecode < 0	937:8:28955:28963	4860716	0	True				
ANR	4861044	RelationalExpression	ecode < 0		4860716	0		<			
ANR	4861045	Identifier	ecode		4860716	0					
ANR	4861046	PrimaryExpression	0		4860716	1					
ANR	4861047	CompoundStatement		57:19:1953:1953	4860716	1					
ANR	4861048	ExpressionStatement	pdevn -> color_info = save_info	938:8:28976:29005	4860716	0	True				
ANR	4861049	AssignmentExpression	pdevn -> color_info = save_info		4860716	0		=			
ANR	4861050	PtrMemberAccess	pdevn -> color_info		4860716	0					
ANR	4861051	Identifier	pdevn		4860716	0					
ANR	4861052	Identifier	color_info		4860716	1					
ANR	4861053	Identifier	save_info		4860716	1					
ANR	4861054	ReturnStatement	return ecode ;	939:8:29015:29027	4860716	1	True				
ANR	4861055	Identifier	ecode		4860716	0					
ANR	4861056	IfStatement	if ( pdev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE )		4860716	42					
ANR	4861057	Condition	pdev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE	943:8:29113:29170	4860716	0	True				
ANR	4861058	EqualityExpression	pdev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE		4860716	0		==			
ANR	4861059	MemberAccess	pdev -> color_info . polarity		4860716	0					
ANR	4861060	PtrMemberAccess	pdev -> color_info		4860716	0					
ANR	4861061	Identifier	pdev		4860716	0					
ANR	4861062	Identifier	color_info		4860716	1					
ANR	4861063	Identifier	polarity		4860716	1					
ANR	4861064	Identifier	GX_CINFO_POLARITY_SUBTRACTIVE		4860716	1					
ANR	4861065	CompoundStatement		63:68:2160:2160	4860716	1					
ANR	4861066	IfStatement	if ( scna . data != 0 )		4860716	0					
ANR	4861067	Condition	scna . data != 0	948:12:29360:29373	4860716	0	True				
ANR	4861068	EqualityExpression	scna . data != 0		4860716	0		!=			
ANR	4861069	MemberAccess	scna . data		4860716	0					
ANR	4861070	Identifier	scna		4860716	0					
ANR	4861071	Identifier	data		4860716	1					
ANR	4861072	PrimaryExpression	0		4860716	1					
ANR	4861073	CompoundStatement		71:12:2435:2555	4860716	1					
ANR	4861074	IdentifierDeclStatement	int i ;	949:12:29390:29395	4860716	0	True				
ANR	4861075	IdentifierDecl	i		4860716	0					
ANR	4861076	IdentifierDeclType	int		4860716	0					
ANR	4861077	Identifier	i		4860716	1					
ANR	4861078	IdentifierDeclStatement	int num_names = scna . size ;	950:12:29409:29434	4860716	1	True				
ANR	4861079	IdentifierDecl	num_names = scna . size		4860716	0					
ANR	4861080	IdentifierDeclType	int		4860716	0					
ANR	4861081	Identifier	num_names		4860716	1					
ANR	4861082	AssignmentExpression	num_names = scna . size		4860716	2		=			
ANR	4861083	Identifier	num_names		4860716	0					
ANR	4861084	MemberAccess	scna . size		4860716	1					
ANR	4861085	Identifier	scna		4860716	0					
ANR	4861086	Identifier	size		4860716	1					
ANR	4861087	IdentifierDeclStatement	const fixed_colorant_names_list * pcomp_names = ( ( xcf_device * ) pdev ) -> std_colorant_names ;	951:12:29448:29568	4860716	2	True				
ANR	4861088	IdentifierDecl	* pcomp_names = ( ( xcf_device * ) pdev ) -> std_colorant_names		4860716	0					
ANR	4861089	IdentifierDeclType	const fixed_colorant_names_list *		4860716	0					
ANR	4861090	Identifier	pcomp_names		4860716	1					
ANR	4861091	AssignmentExpression	* pcomp_names = ( ( xcf_device * ) pdev ) -> std_colorant_names		4860716	2		=			
ANR	4861092	Identifier	pcomp_names		4860716	0					
ANR	4861093	PtrMemberAccess	( ( xcf_device * ) pdev ) -> std_colorant_names		4860716	1					
ANR	4861094	CastExpression	( xcf_device * ) pdev		4860716	0					
ANR	4861095	CastTarget	xcf_device *		4860716	0					
ANR	4861096	Identifier	pdev		4860716	1					
ANR	4861097	Identifier	std_colorant_names		4860716	1					
ANR	4861098	ForStatement	for ( i = num_spot = 0 ; i < num_names ; i ++ )		4860716	3					
ANR	4861099	ForInit	i = num_spot = 0 ;	954:17:29588:29604	4860716	0	True				
ANR	4861100	AssignmentExpression	i = num_spot = 0		4860716	0		=			
ANR	4861101	Identifier	i		4860716	0					
ANR	4861102	AssignmentExpression	num_spot = 0		4860716	1		=			
ANR	4861103	Identifier	num_spot		4860716	0					
ANR	4861104	PrimaryExpression	0		4860716	1					
ANR	4861105	Condition	i < num_names	954:35:29606:29618	4860716	1	True				
ANR	4861106	RelationalExpression	i < num_names		4860716	0		<			
ANR	4861107	Identifier	i		4860716	0					
ANR	4861108	Identifier	num_names		4860716	1					
ANR	4861109	PostIncDecOperationExpression	i ++	954:50:29621:29623	4860716	2	True				
ANR	4861110	Identifier	i		4860716	0					
ANR	4861111	IncDec	++		4860716	1					
ANR	4861112	CompoundStatement		74:55:2613:2613	4860716	3					
ANR	4861113	IfStatement	"if ( ! check_process_color_names ( pcomp_names , & scna . data [ i ] ) )"		4860716	0					
ANR	4861114	Condition	"! check_process_color_names ( pcomp_names , & scna . data [ i ] )"	955:20:29648:29701	4860716	0	True				
ANR	4861115	UnaryOperationExpression	"! check_process_color_names ( pcomp_names , & scna . data [ i ] )"		4860716	0					
ANR	4861116	UnaryOperator	!		4860716	0					
ANR	4861117	CallExpression	"check_process_color_names ( pcomp_names , & scna . data [ i ] )"		4860716	1					
ANR	4861118	Callee	check_process_color_names		4860716	0					
ANR	4861119	Identifier	check_process_color_names		4860716	0					
ANR	4861120	ArgumentList	pcomp_names		4860716	1					
ANR	4861121	Argument	pcomp_names		4860716	0					
ANR	4861122	Identifier	pcomp_names		4860716	0					
ANR	4861123	Argument	& scna . data [ i ]		4860716	1					
ANR	4861124	UnaryOperationExpression	& scna . data [ i ]		4860716	0					
ANR	4861125	UnaryOperator	&		4860716	0					
ANR	4861126	ArrayIndexing	scna . data [ i ]		4860716	1					
ANR	4861127	MemberAccess	scna . data		4860716	0					
ANR	4861128	Identifier	scna		4860716	0					
ANR	4861129	Identifier	data		4860716	1					
ANR	4861130	Identifier	i		4860716	1					
ANR	4861131	ExpressionStatement	pdevn -> separation_names . names [ num_spot ++ ] = & scna . data [ i ]	956:20:29724:29781	4860716	1	True				
ANR	4861132	AssignmentExpression	pdevn -> separation_names . names [ num_spot ++ ] = & scna . data [ i ]		4860716	0		=			
ANR	4861133	ArrayIndexing	pdevn -> separation_names . names [ num_spot ++ ]		4860716	0					
ANR	4861134	MemberAccess	pdevn -> separation_names . names		4860716	0					
ANR	4861135	PtrMemberAccess	pdevn -> separation_names		4860716	0					
ANR	4861136	Identifier	pdevn		4860716	0					
ANR	4861137	Identifier	separation_names		4860716	1					
ANR	4861138	Identifier	names		4860716	1					
ANR	4861139	PostIncDecOperationExpression	num_spot ++		4860716	1					
ANR	4861140	Identifier	num_spot		4860716	0					
ANR	4861141	IncDec	++		4860716	1					
ANR	4861142	UnaryOperationExpression	& scna . data [ i ]		4860716	1					
ANR	4861143	UnaryOperator	&		4860716	0					
ANR	4861144	ArrayIndexing	scna . data [ i ]		4860716	1					
ANR	4861145	MemberAccess	scna . data		4860716	0					
ANR	4861146	Identifier	scna		4860716	0					
ANR	4861147	Identifier	data		4860716	1					
ANR	4861148	Identifier	i		4860716	1					
ANR	4861149	ExpressionStatement	pdevn -> separation_names . num_names = num_spot	958:12:29809:29853	4860716	4	True				
ANR	4861150	AssignmentExpression	pdevn -> separation_names . num_names = num_spot		4860716	0		=			
ANR	4861151	MemberAccess	pdevn -> separation_names . num_names		4860716	0					
ANR	4861152	PtrMemberAccess	pdevn -> separation_names		4860716	0					
ANR	4861153	Identifier	pdevn		4860716	0					
ANR	4861154	Identifier	separation_names		4860716	1					
ANR	4861155	Identifier	num_names		4860716	1					
ANR	4861156	Identifier	num_spot		4860716	1					
ANR	4861157	IfStatement	if ( pdevn -> is_open )		4860716	5					
ANR	4861158	Condition	pdevn -> is_open	959:16:29871:29884	4860716	0	True				
ANR	4861159	PtrMemberAccess	pdevn -> is_open		4860716	0					
ANR	4861160	Identifier	pdevn		4860716	0					
ANR	4861161	Identifier	is_open		4860716	1					
ANR	4861162	ExpressionStatement	gs_closedevice ( pdev )	960:16:29903:29923	4860716	1	True				
ANR	4861163	CallExpression	gs_closedevice ( pdev )		4860716	0					
ANR	4861164	Callee	gs_closedevice		4860716	0					
ANR	4861165	Identifier	gs_closedevice		4860716	0					
ANR	4861166	ArgumentList	pdev		4860716	1					
ANR	4861167	Argument	pdev		4860716	0					
ANR	4861168	Identifier	pdev		4860716	0					
ANR	4861169	ExpressionStatement	npcmcolors = pdevn -> num_std_colorant_names	962:8:29943:29985	4860716	1	True				
ANR	4861170	AssignmentExpression	npcmcolors = pdevn -> num_std_colorant_names		4860716	0		=			
ANR	4861171	Identifier	npcmcolors		4860716	0					
ANR	4861172	PtrMemberAccess	pdevn -> num_std_colorant_names		4860716	1					
ANR	4861173	Identifier	pdevn		4860716	0					
ANR	4861174	Identifier	num_std_colorant_names		4860716	1					
ANR	4861175	ExpressionStatement	pdevn -> color_info . num_components = npcmcolors + num_spot	963:8:29995:30051	4860716	2	True				
ANR	4861176	AssignmentExpression	pdevn -> color_info . num_components = npcmcolors + num_spot		4860716	0		=			
ANR	4861177	MemberAccess	pdevn -> color_info . num_components		4860716	0					
ANR	4861178	PtrMemberAccess	pdevn -> color_info		4860716	0					
ANR	4861179	Identifier	pdevn		4860716	0					
ANR	4861180	Identifier	color_info		4860716	1					
ANR	4861181	Identifier	num_components		4860716	1					
ANR	4861182	AdditiveExpression	npcmcolors + num_spot		4860716	1		+			
ANR	4861183	Identifier	npcmcolors		4860716	0					
ANR	4861184	Identifier	num_spot		4860716	1					
ANR	4861185	IfStatement	if ( ! pdevn -> color_info . num_components )		4860716	3					
ANR	4861186	Condition	! pdevn -> color_info . num_components	969:12:30285:30317	4860716	0	True				
ANR	4861187	UnaryOperationExpression	! pdevn -> color_info . num_components		4860716	0					
ANR	4861188	UnaryOperator	!		4860716	0					
ANR	4861189	MemberAccess	pdevn -> color_info . num_components		4860716	1					
ANR	4861190	PtrMemberAccess	pdevn -> color_info		4860716	0					
ANR	4861191	Identifier	pdevn		4860716	0					
ANR	4861192	Identifier	color_info		4860716	1					
ANR	4861193	Identifier	num_components		4860716	1					
ANR	4861194	ExpressionStatement	pdevn -> color_info . num_components = 1	970:12:30332:30368	4860716	1	True				
ANR	4861195	AssignmentExpression	pdevn -> color_info . num_components = 1		4860716	0		=			
ANR	4861196	MemberAccess	pdevn -> color_info . num_components		4860716	0					
ANR	4861197	PtrMemberAccess	pdevn -> color_info		4860716	0					
ANR	4861198	Identifier	pdevn		4860716	0					
ANR	4861199	Identifier	color_info		4860716	1					
ANR	4861200	Identifier	num_components		4860716	1					
ANR	4861201	PrimaryExpression	1		4860716	1					
ANR	4861202	ExpressionStatement	"pdevn -> color_info . depth = bpc_to_depth ( pdevn -> color_info . num_components , pdevn -> bitspercomponent )"	971:8:30378:30523	4860716	4	True				
ANR	4861203	AssignmentExpression	"pdevn -> color_info . depth = bpc_to_depth ( pdevn -> color_info . num_components , pdevn -> bitspercomponent )"		4860716	0		=			
ANR	4861204	MemberAccess	pdevn -> color_info . depth		4860716	0					
ANR	4861205	PtrMemberAccess	pdevn -> color_info		4860716	0					
ANR	4861206	Identifier	pdevn		4860716	0					
ANR	4861207	Identifier	color_info		4860716	1					
ANR	4861208	Identifier	depth		4860716	1					
ANR	4861209	CallExpression	"bpc_to_depth ( pdevn -> color_info . num_components , pdevn -> bitspercomponent )"		4860716	1					
ANR	4861210	Callee	bpc_to_depth		4860716	0					
ANR	4861211	Identifier	bpc_to_depth		4860716	0					
ANR	4861212	ArgumentList	pdevn -> color_info . num_components		4860716	1					
ANR	4861213	Argument	pdevn -> color_info . num_components		4860716	0					
ANR	4861214	MemberAccess	pdevn -> color_info . num_components		4860716	0					
ANR	4861215	PtrMemberAccess	pdevn -> color_info		4860716	0					
ANR	4861216	Identifier	pdevn		4860716	0					
ANR	4861217	Identifier	color_info		4860716	1					
ANR	4861218	Identifier	num_components		4860716	1					
ANR	4861219	Argument	pdevn -> bitspercomponent		4860716	1					
ANR	4861220	PtrMemberAccess	pdevn -> bitspercomponent		4860716	0					
ANR	4861221	Identifier	pdevn		4860716	0					
ANR	4861222	Identifier	bitspercomponent		4860716	1					
ANR	4861223	IfStatement	if ( pdevn -> color_info . depth != save_info . depth )		4860716	5					
ANR	4861224	Condition	pdevn -> color_info . depth != save_info . depth	973:12:30537:30578	4860716	0	True				
ANR	4861225	EqualityExpression	pdevn -> color_info . depth != save_info . depth		4860716	0		!=			
ANR	4861226	MemberAccess	pdevn -> color_info . depth		4860716	0					
ANR	4861227	PtrMemberAccess	pdevn -> color_info		4860716	0					
ANR	4861228	Identifier	pdevn		4860716	0					
ANR	4861229	Identifier	color_info		4860716	1					
ANR	4861230	Identifier	depth		4860716	1					
ANR	4861231	MemberAccess	save_info . depth		4860716	1					
ANR	4861232	Identifier	save_info		4860716	0					
ANR	4861233	Identifier	depth		4860716	1					
ANR	4861234	CompoundStatement		93:56:3568:3568	4860716	1					
ANR	4861235	ExpressionStatement	gs_closedevice ( pdev )	974:12:30595:30615	4860716	0	True				
ANR	4861236	CallExpression	gs_closedevice ( pdev )		4860716	0					
ANR	4861237	Callee	gs_closedevice		4860716	0					
ANR	4861238	Identifier	gs_closedevice		4860716	0					
ANR	4861239	ArgumentList	pdev		4860716	1					
ANR	4861240	Argument	pdev		4860716	0					
ANR	4861241	Identifier	pdev		4860716	0					
ANR	4861242	IfStatement	if ( po . data != 0 )		4860716	43					
ANR	4861243	Condition	po . data != 0	978:8:30642:30653	4860716	0	True				
ANR	4861244	EqualityExpression	po . data != 0		4860716	0		!=			
ANR	4861245	MemberAccess	po . data		4860716	0					
ANR	4861246	Identifier	po		4860716	0					
ANR	4861247	Identifier	data		4860716	1					
ANR	4861248	PrimaryExpression	0		4860716	1					
ANR	4861249	CompoundStatement		98:22:3643:3643	4860716	1					
ANR	4861250	ExpressionStatement	"memcpy ( pdevn -> profile_out_fn , po . data , po . size )"	979:8:30666:30713	4860716	0	True				
ANR	4861251	CallExpression	"memcpy ( pdevn -> profile_out_fn , po . data , po . size )"		4860716	0					
ANR	4861252	Callee	memcpy		4860716	0					
ANR	4861253	Identifier	memcpy		4860716	0					
ANR	4861254	ArgumentList	pdevn -> profile_out_fn		4860716	1					
ANR	4861255	Argument	pdevn -> profile_out_fn		4860716	0					
ANR	4861256	PtrMemberAccess	pdevn -> profile_out_fn		4860716	0					
ANR	4861257	Identifier	pdevn		4860716	0					
ANR	4861258	Identifier	profile_out_fn		4860716	1					
ANR	4861259	Argument	po . data		4860716	1					
ANR	4861260	MemberAccess	po . data		4860716	0					
ANR	4861261	Identifier	po		4860716	0					
ANR	4861262	Identifier	data		4860716	1					
ANR	4861263	Argument	po . size		4860716	2					
ANR	4861264	MemberAccess	po . size		4860716	0					
ANR	4861265	Identifier	po		4860716	0					
ANR	4861266	Identifier	size		4860716	1					
ANR	4861267	ExpressionStatement	pdevn -> profile_out_fn [ po . size ] = 0	980:8:30723:30757	4860716	1	True				
ANR	4861268	AssignmentExpression	pdevn -> profile_out_fn [ po . size ] = 0		4860716	0		=			
ANR	4861269	ArrayIndexing	pdevn -> profile_out_fn [ po . size ]		4860716	0					
ANR	4861270	PtrMemberAccess	pdevn -> profile_out_fn		4860716	0					
ANR	4861271	Identifier	pdevn		4860716	0					
ANR	4861272	Identifier	profile_out_fn		4860716	1					
ANR	4861273	MemberAccess	po . size		4860716	1					
ANR	4861274	Identifier	po		4860716	0					
ANR	4861275	Identifier	size		4860716	1					
ANR	4861276	PrimaryExpression	0		4860716	1					
ANR	4861277	IfStatement	if ( prgb . data != 0 )		4860716	44					
ANR	4861278	Condition	prgb . data != 0	982:8:30773:30786	4860716	0	True				
ANR	4861279	EqualityExpression	prgb . data != 0		4860716	0		!=			
ANR	4861280	MemberAccess	prgb . data		4860716	0					
ANR	4861281	Identifier	prgb		4860716	0					
ANR	4861282	Identifier	data		4860716	1					
ANR	4861283	PrimaryExpression	0		4860716	1					
ANR	4861284	CompoundStatement		102:24:3776:3776	4860716	1					
ANR	4861285	ExpressionStatement	"memcpy ( pdevn -> profile_rgb_fn , prgb . data , prgb . size )"	983:8:30799:30850	4860716	0	True				
ANR	4861286	CallExpression	"memcpy ( pdevn -> profile_rgb_fn , prgb . data , prgb . size )"		4860716	0					
ANR	4861287	Callee	memcpy		4860716	0					
ANR	4861288	Identifier	memcpy		4860716	0					
ANR	4861289	ArgumentList	pdevn -> profile_rgb_fn		4860716	1					
ANR	4861290	Argument	pdevn -> profile_rgb_fn		4860716	0					
ANR	4861291	PtrMemberAccess	pdevn -> profile_rgb_fn		4860716	0					
ANR	4861292	Identifier	pdevn		4860716	0					
ANR	4861293	Identifier	profile_rgb_fn		4860716	1					
ANR	4861294	Argument	prgb . data		4860716	1					
ANR	4861295	MemberAccess	prgb . data		4860716	0					
ANR	4861296	Identifier	prgb		4860716	0					
ANR	4861297	Identifier	data		4860716	1					
ANR	4861298	Argument	prgb . size		4860716	2					
ANR	4861299	MemberAccess	prgb . size		4860716	0					
ANR	4861300	Identifier	prgb		4860716	0					
ANR	4861301	Identifier	size		4860716	1					
ANR	4861302	ExpressionStatement	pdevn -> profile_rgb_fn [ prgb . size ] = 0	984:8:30860:30896	4860716	1	True				
ANR	4861303	AssignmentExpression	pdevn -> profile_rgb_fn [ prgb . size ] = 0		4860716	0		=			
ANR	4861304	ArrayIndexing	pdevn -> profile_rgb_fn [ prgb . size ]		4860716	0					
ANR	4861305	PtrMemberAccess	pdevn -> profile_rgb_fn		4860716	0					
ANR	4861306	Identifier	pdevn		4860716	0					
ANR	4861307	Identifier	profile_rgb_fn		4860716	1					
ANR	4861308	MemberAccess	prgb . size		4860716	1					
ANR	4861309	Identifier	prgb		4860716	0					
ANR	4861310	Identifier	size		4860716	1					
ANR	4861311	PrimaryExpression	0		4860716	1					
ANR	4861312	IfStatement	if ( pcmyk . data != 0 )		4860716	45					
ANR	4861313	Condition	pcmyk . data != 0	986:8:30912:30926	4860716	0	True				
ANR	4861314	EqualityExpression	pcmyk . data != 0		4860716	0		!=			
ANR	4861315	MemberAccess	pcmyk . data		4860716	0					
ANR	4861316	Identifier	pcmyk		4860716	0					
ANR	4861317	Identifier	data		4860716	1					
ANR	4861318	PrimaryExpression	0		4860716	1					
ANR	4861319	CompoundStatement		106:25:3916:3916	4860716	1					
ANR	4861320	ExpressionStatement	"memcpy ( pdevn -> profile_cmyk_fn , pcmyk . data , pcmyk . size )"	987:8:30939:30993	4860716	0	True				
ANR	4861321	CallExpression	"memcpy ( pdevn -> profile_cmyk_fn , pcmyk . data , pcmyk . size )"		4860716	0					
ANR	4861322	Callee	memcpy		4860716	0					
ANR	4861323	Identifier	memcpy		4860716	0					
ANR	4861324	ArgumentList	pdevn -> profile_cmyk_fn		4860716	1					
ANR	4861325	Argument	pdevn -> profile_cmyk_fn		4860716	0					
ANR	4861326	PtrMemberAccess	pdevn -> profile_cmyk_fn		4860716	0					
ANR	4861327	Identifier	pdevn		4860716	0					
ANR	4861328	Identifier	profile_cmyk_fn		4860716	1					
ANR	4861329	Argument	pcmyk . data		4860716	1					
ANR	4861330	MemberAccess	pcmyk . data		4860716	0					
ANR	4861331	Identifier	pcmyk		4860716	0					
ANR	4861332	Identifier	data		4860716	1					
ANR	4861333	Argument	pcmyk . size		4860716	2					
ANR	4861334	MemberAccess	pcmyk . size		4860716	0					
ANR	4861335	Identifier	pcmyk		4860716	0					
ANR	4861336	Identifier	size		4860716	1					
ANR	4861337	ExpressionStatement	pdevn -> profile_cmyk_fn [ pcmyk . size ] = 0	988:8:31003:31041	4860716	1	True				
ANR	4861338	AssignmentExpression	pdevn -> profile_cmyk_fn [ pcmyk . size ] = 0		4860716	0		=			
ANR	4861339	ArrayIndexing	pdevn -> profile_cmyk_fn [ pcmyk . size ]		4860716	0					
ANR	4861340	PtrMemberAccess	pdevn -> profile_cmyk_fn		4860716	0					
ANR	4861341	Identifier	pdevn		4860716	0					
ANR	4861342	Identifier	profile_cmyk_fn		4860716	1					
ANR	4861343	MemberAccess	pcmyk . size		4860716	1					
ANR	4861344	Identifier	pcmyk		4860716	0					
ANR	4861345	Identifier	size		4860716	1					
ANR	4861346	PrimaryExpression	0		4860716	1					
ANR	4861347	ExpressionStatement	code = xcf_open_profiles ( pdevn )	990:4:31053:31084	4860716	46	True				
ANR	4861348	AssignmentExpression	code = xcf_open_profiles ( pdevn )		4860716	0		=			
ANR	4861349	Identifier	code		4860716	0					
ANR	4861350	CallExpression	xcf_open_profiles ( pdevn )		4860716	1					
ANR	4861351	Callee	xcf_open_profiles		4860716	0					
ANR	4861352	Identifier	xcf_open_profiles		4860716	0					
ANR	4861353	ArgumentList	pdevn		4860716	1					
ANR	4861354	Argument	pdevn		4860716	0					
ANR	4861355	Identifier	pdevn		4860716	0					
ANR	4861356	ReturnStatement	return code ;	992:4:31091:31102	4860716	47	True				
ANR	4861357	Identifier	code		4860716	0					
ANR	4861358	ReturnType	static int		4860716	1					
ANR	4861359	Identifier	xcf_put_params		4860716	2					
ANR	4861360	ParameterList	"gx_device * pdev , gs_param_list * plist"		4860716	3					
ANR	4861361	Parameter	gx_device * pdev	880:15:26971:26986	4860716	0	True				
ANR	4861362	ParameterType	gx_device *		4860716	0					
ANR	4861363	Identifier	pdev		4860716	1					
ANR	4861364	Parameter	gs_param_list * plist	880:33:26989:27009	4860716	1	True				
ANR	4861365	ParameterType	gs_param_list *		4860716	0					
ANR	4861366	Identifier	plist		4860716	1					
ANR	4861367	CFGEntryNode	ENTRY		4860716		True				
ANR	4861368	CFGExitNode	EXIT		4860716		True				
ANR	4861369	CFGErrorNode	ERROR		4860716		True				
ANR	4861370	Symbol	XCF_DEVICE_N		4860716						
ANR	4861371	Symbol	pdevn -> color_info . num_components		4860716						
ANR	4861372	Symbol	gs_error_rangecheck		4860716						
ANR	4861373	Symbol	( ( xcf_device * ) pdev ) -> std_colorant_names		4860716						
ANR	4861374	Symbol	pdev -> color_info		4860716						
ANR	4861375	Symbol	pdevn -> bitspercomponent		4860716						
ANR	4861376	Symbol	scna . data		4860716						
ANR	4861377	Symbol	pdevn -> separation_names . names		4860716						
ANR	4861378	Symbol	pcmyk . data		4860716						
ANR	4861379	Symbol	* pdevn -> profile_rgb_fn		4860716						
ANR	4861380	Symbol	pdev		4860716						
ANR	4861381	Symbol	XCF_DEVICE_CMYK		4860716						
ANR	4861382	Symbol	* prgb . size		4860716						
ANR	4861383	Symbol	param_read_name		4860716						
ANR	4861384	Symbol	xcf_set_color_model		4860716						
ANR	4861385	Symbol	pcomp_names		4860716						
ANR	4861386	Symbol	pdevn -> color_info . depth		4860716						
ANR	4861387	Symbol	pdevn -> color_info		4860716						
ANR	4861388	Symbol	po . size		4860716						
ANR	4861389	Symbol	* po		4860716						
ANR	4861390	Symbol	& po		4860716						
ANR	4861391	Symbol	pdevn -> color_model		4860716						
ANR	4861392	Symbol	bpc_to_depth		4860716						
ANR	4861393	Symbol	pdevn -> separation_names . num_names		4860716						
ANR	4861394	Symbol	check_process_color_names		4860716						
ANR	4861395	Symbol	pdevn		4860716						
ANR	4861396	Symbol	pdev -> color_info . polarity		4860716						
ANR	4861397	Symbol	* prgb		4860716						
ANR	4861398	Symbol	scne		4860716						
ANR	4861399	Symbol	GX_CINFO_POLARITY_SUBTRACTIVE		4860716						
ANR	4861400	Symbol	pcmyk		4860716						
ANR	4861401	Symbol	scna		4860716						
ANR	4861402	Symbol	pdevn -> profile_rgb_fn		4860716						
ANR	4861403	Symbol	pdevn -> profile_cmyk_fn		4860716						
ANR	4861404	Symbol	* pdevn -> separation_names . names		4860716						
ANR	4861405	Symbol	code		4860716						
ANR	4861406	Symbol	pcmyk . size		4860716						
ANR	4861407	Symbol	save_info		4860716						
ANR	4861408	Symbol	npcmcolors		4860716						
ANR	4861409	Symbol	& pcm		4860716						
ANR	4861410	Symbol	* pdevn -> profile_cmyk_fn		4860716						
ANR	4861411	Symbol	* pdevn		4860716						
ANR	4861412	Symbol	prgb . data		4860716						
ANR	4861413	Symbol	pdevn -> profile_out_fn		4860716						
ANR	4861414	Symbol	XCF_DEVICE_RGB		4860716						
ANR	4861415	Symbol	* pcmyk		4860716						
ANR	4861416	Symbol	plist		4860716						
ANR	4861417	Symbol	xcf_param_read_fn		4860716						
ANR	4861418	Symbol	& pcmyk		4860716						
ANR	4861419	Symbol	pdevn -> separation_names		4860716						
ANR	4861420	Symbol	save_info . depth		4860716						
ANR	4861421	Symbol	po . data		4860716						
ANR	4861422	Symbol	& prgb		4860716						
ANR	4861423	Symbol	pdevn -> num_std_colorant_names		4860716						
ANR	4861424	Symbol	* pdevn -> separation_names		4860716						
ANR	4861425	Symbol	pcm		4860716						
ANR	4861426	Symbol	param_string_eq		4860716						
ANR	4861427	Symbol	* * pdevn		4860716						
ANR	4861428	Symbol	xcf_open_profiles		4860716						
ANR	4861429	Symbol	prgb		4860716						
ANR	4861430	Symbol	i		4860716						
ANR	4861431	Symbol	scna . size		4860716						
ANR	4861432	Symbol	prgb . size		4860716						
ANR	4861433	Symbol	color_model		4860716						
ANR	4861434	Symbol	gdev_prn_put_params		4860716						
ANR	4861435	Symbol	ecode		4860716						
ANR	4861436	Symbol	num_spot		4860716						
ANR	4861437	Symbol	pdevn -> is_open		4860716						
ANR	4861438	Symbol	* pdev		4860716						
ANR	4861439	Symbol	XCF_DEVICE_GRAY		4860716						
ANR	4861440	Symbol	* pcmyk . size		4860716						
ANR	4861441	Symbol	* po . size		4860716						
ANR	4861442	Symbol	param_name		4860716						
ANR	4861443	Symbol	* pdevn -> profile_out_fn		4860716						
ANR	4861444	Symbol	po		4860716						
ANR	4861445	Symbol	num_names		4860716						
ANR	4861446	Function	xcf_get_color_comp_index	1007:0:31572:32839							
ANR	4861447	FunctionDef	"xcf_get_color_comp_index (gx_device * dev , const char * pname , int name_size , int component_type)"		4861446	0					
ANR	4861448	CompoundStatement		1010:0:31720:32839	4861446	0					
ANR	4861449	IdentifierDeclStatement	const fixed_colorant_names_list * list = ( ( const xcf_device * ) dev ) -> std_colorant_names ;	1012:4:31818:31904	4861446	0	True				
ANR	4861450	IdentifierDecl	* list = ( ( const xcf_device * ) dev ) -> std_colorant_names		4861446	0					
ANR	4861451	IdentifierDeclType	const fixed_colorant_names_list *		4861446	0					
ANR	4861452	Identifier	list		4861446	1					
ANR	4861453	AssignmentExpression	* list = ( ( const xcf_device * ) dev ) -> std_colorant_names		4861446	2		=			
ANR	4861454	Identifier	list		4861446	0					
ANR	4861455	PtrMemberAccess	( ( const xcf_device * ) dev ) -> std_colorant_names		4861446	1					
ANR	4861456	CastExpression	( const xcf_device * ) dev		4861446	0					
ANR	4861457	CastTarget	const xcf_device *		4861446	0					
ANR	4861458	Identifier	dev		4861446	1					
ANR	4861459	Identifier	std_colorant_names		4861446	1					
ANR	4861460	IdentifierDeclStatement	const fixed_colorant_name * pcolor = * list ;	1013:4:31910:31952	4861446	1	True				
ANR	4861461	IdentifierDecl	* pcolor = * list		4861446	0					
ANR	4861462	IdentifierDeclType	const fixed_colorant_name *		4861446	0					
ANR	4861463	Identifier	pcolor		4861446	1					
ANR	4861464	AssignmentExpression	* pcolor = * list		4861446	2		=			
ANR	4861465	Identifier	pcolor		4861446	0					
ANR	4861466	UnaryOperationExpression	* list		4861446	1					
ANR	4861467	UnaryOperator	*		4861446	0					
ANR	4861468	Identifier	list		4861446	1					
ANR	4861469	IdentifierDeclStatement	int color_component_number = 0 ;	1014:4:31958:31988	4861446	2	True				
ANR	4861470	IdentifierDecl	color_component_number = 0		4861446	0					
ANR	4861471	IdentifierDeclType	int		4861446	0					
ANR	4861472	Identifier	color_component_number		4861446	1					
ANR	4861473	AssignmentExpression	color_component_number = 0		4861446	2		=			
ANR	4861474	Identifier	color_component_number		4861446	0					
ANR	4861475	PrimaryExpression	0		4861446	1					
ANR	4861476	IdentifierDeclStatement	int i ;	1015:4:31994:31999	4861446	3	True				
ANR	4861477	IdentifierDecl	i		4861446	0					
ANR	4861478	IdentifierDeclType	int		4861446	0					
ANR	4861479	Identifier	i		4861446	1					
ANR	4861480	IfStatement	if ( pcolor )		4861446	4					
ANR	4861481	Condition	pcolor	1018:8:32067:32072	4861446	0	True				
ANR	4861482	Identifier	pcolor		4861446	0					
ANR	4861483	CompoundStatement		9:16:354:354	4861446	1					
ANR	4861484	WhileStatement	while ( * pcolor )		4861446	0					
ANR	4861485	Condition	* pcolor	1019:15:32092:32098	4861446	0	True				
ANR	4861486	UnaryOperationExpression	* pcolor		4861446	0					
ANR	4861487	UnaryOperator	*		4861446	0					
ANR	4861488	Identifier	pcolor		4861446	1					
ANR	4861489	CompoundStatement		10:24:380:380	4861446	1					
ANR	4861490	IfStatement	"if ( compare_color_names ( pname , name_size , * pcolor , strlen ( * pcolor ) ) )"		4861446	0					
ANR	4861491	Condition	"compare_color_names ( pname , name_size , * pcolor , strlen ( * pcolor ) )"	1020:16:32119:32181	4861446	0	True				
ANR	4861492	CallExpression	"compare_color_names ( pname , name_size , * pcolor , strlen ( * pcolor ) )"		4861446	0					
ANR	4861493	Callee	compare_color_names		4861446	0					
ANR	4861494	Identifier	compare_color_names		4861446	0					
ANR	4861495	ArgumentList	pname		4861446	1					
ANR	4861496	Argument	pname		4861446	0					
ANR	4861497	Identifier	pname		4861446	0					
ANR	4861498	Argument	name_size		4861446	1					
ANR	4861499	Identifier	name_size		4861446	0					
ANR	4861500	Argument	* pcolor		4861446	2					
ANR	4861501	UnaryOperationExpression	* pcolor		4861446	0					
ANR	4861502	UnaryOperator	*		4861446	0					
ANR	4861503	Identifier	pcolor		4861446	1					
ANR	4861504	Argument	strlen ( * pcolor )		4861446	3					
ANR	4861505	CallExpression	strlen ( * pcolor )		4861446	0					
ANR	4861506	Callee	strlen		4861446	0					
ANR	4861507	Identifier	strlen		4861446	0					
ANR	4861508	ArgumentList	* pcolor		4861446	1					
ANR	4861509	Argument	* pcolor		4861446	0					
ANR	4861510	UnaryOperationExpression	* pcolor		4861446	0					
ANR	4861511	UnaryOperator	*		4861446	0					
ANR	4861512	Identifier	pcolor		4861446	1					
ANR	4861513	ReturnStatement	return color_component_number ;	1021:16:32200:32229	4861446	1	True				
ANR	4861514	Identifier	color_component_number		4861446	0					
ANR	4861515	ExpressionStatement	pcolor ++	1022:12:32243:32251	4861446	1	True				
ANR	4861516	PostIncDecOperationExpression	pcolor ++		4861446	0					
ANR	4861517	Identifier	pcolor		4861446	0					
ANR	4861518	IncDec	++		4861446	1					
ANR	4861519	ExpressionStatement	color_component_number ++	1023:12:32265:32289	4861446	2	True				
ANR	4861520	PostIncDecOperationExpression	color_component_number ++		4861446	0					
ANR	4861521	Identifier	color_component_number		4861446	0					
ANR	4861522	IncDec	++		4861446	1					
ANR	4861523	CompoundStatement		21:8:763:800	4861446	5					
ANR	4861524	IdentifierDeclStatement	const gs_separation_names * separations = & ( ( const xcf_device * ) dev ) -> separation_names ;	1029:8:32388:32474	4861446	0	True				
ANR	4861525	IdentifierDecl	* separations = & ( ( const xcf_device * ) dev ) -> separation_names		4861446	0					
ANR	4861526	IdentifierDeclType	const gs_separation_names *		4861446	0					
ANR	4861527	Identifier	separations		4861446	1					
ANR	4861528	AssignmentExpression	* separations = & ( ( const xcf_device * ) dev ) -> separation_names		4861446	2		=			
ANR	4861529	Identifier	separations		4861446	0					
ANR	4861530	UnaryOperationExpression	& ( ( const xcf_device * ) dev ) -> separation_names		4861446	1					
ANR	4861531	UnaryOperator	&		4861446	0					
ANR	4861532	PtrMemberAccess	( ( const xcf_device * ) dev ) -> separation_names		4861446	1					
ANR	4861533	CastExpression	( const xcf_device * ) dev		4861446	0					
ANR	4861534	CastTarget	const xcf_device *		4861446	0					
ANR	4861535	Identifier	dev		4861446	1					
ANR	4861536	Identifier	separation_names		4861446	1					
ANR	4861537	IdentifierDeclStatement	int num_spot = separations -> num_names ;	1030:8:32484:32521	4861446	1	True				
ANR	4861538	IdentifierDecl	num_spot = separations -> num_names		4861446	0					
ANR	4861539	IdentifierDeclType	int		4861446	0					
ANR	4861540	Identifier	num_spot		4861446	1					
ANR	4861541	AssignmentExpression	num_spot = separations -> num_names		4861446	2		=			
ANR	4861542	Identifier	num_spot		4861446	0					
ANR	4861543	PtrMemberAccess	separations -> num_names		4861446	1					
ANR	4861544	Identifier	separations		4861446	0					
ANR	4861545	Identifier	num_names		4861446	1					
ANR	4861546	ForStatement	for ( i = 0 ; i < num_spot ; i ++ )		4861446	2					
ANR	4861547	ForInit	i = 0 ;	1032:13:32537:32540	4861446	0	True				
ANR	4861548	AssignmentExpression	i = 0		4861446	0		=			
ANR	4861549	Identifier	i		4861446	0					
ANR	4861550	PrimaryExpression	0		4861446	1					
ANR	4861551	Condition	i < num_spot	1032:18:32542:32551	4861446	1	True				
ANR	4861552	RelationalExpression	i < num_spot		4861446	0		<			
ANR	4861553	Identifier	i		4861446	0					
ANR	4861554	Identifier	num_spot		4861446	1					
ANR	4861555	PostIncDecOperationExpression	i ++	1032:30:32554:32556	4861446	2	True				
ANR	4861556	Identifier	i		4861446	0					
ANR	4861557	IncDec	++		4861446	1					
ANR	4861558	CompoundStatement		23:35:838:838	4861446	3					
ANR	4861559	IfStatement	"if ( compare_color_names ( ( const char * ) separations -> names [ i ] -> data , separations -> names [ i ] -> size , pname , name_size ) )"		4861446	0					
ANR	4861560	Condition	"compare_color_names ( ( const char * ) separations -> names [ i ] -> data , separations -> names [ i ] -> size , pname , name_size )"	1033:16:32577:32703	4861446	0	True				
ANR	4861561	CallExpression	"compare_color_names ( ( const char * ) separations -> names [ i ] -> data , separations -> names [ i ] -> size , pname , name_size )"		4861446	0					
ANR	4861562	Callee	compare_color_names		4861446	0					
ANR	4861563	Identifier	compare_color_names		4861446	0					
ANR	4861564	ArgumentList	( const char * ) separations -> names [ i ] -> data		4861446	1					
ANR	4861565	Argument	( const char * ) separations -> names [ i ] -> data		4861446	0					
ANR	4861566	CastExpression	( const char * ) separations -> names [ i ] -> data		4861446	0					
ANR	4861567	CastTarget	const char *		4861446	0					
ANR	4861568	PtrMemberAccess	separations -> names [ i ] -> data		4861446	1					
ANR	4861569	ArrayIndexing	separations -> names [ i ]		4861446	0					
ANR	4861570	PtrMemberAccess	separations -> names		4861446	0					
ANR	4861571	Identifier	separations		4861446	0					
ANR	4861572	Identifier	names		4861446	1					
ANR	4861573	Identifier	i		4861446	1					
ANR	4861574	Identifier	data		4861446	1					
ANR	4861575	Argument	separations -> names [ i ] -> size		4861446	1					
ANR	4861576	PtrMemberAccess	separations -> names [ i ] -> size		4861446	0					
ANR	4861577	ArrayIndexing	separations -> names [ i ]		4861446	0					
ANR	4861578	PtrMemberAccess	separations -> names		4861446	0					
ANR	4861579	Identifier	separations		4861446	0					
ANR	4861580	Identifier	names		4861446	1					
ANR	4861581	Identifier	i		4861446	1					
ANR	4861582	Identifier	size		4861446	1					
ANR	4861583	Argument	pname		4861446	2					
ANR	4861584	Identifier	pname		4861446	0					
ANR	4861585	Argument	name_size		4861446	3					
ANR	4861586	Identifier	name_size		4861446	0					
ANR	4861587	CompoundStatement		25:66:985:985	4861446	1					
ANR	4861588	ReturnStatement	return color_component_number ;	1035:16:32724:32753	4861446	0	True				
ANR	4861589	Identifier	color_component_number		4861446	0					
ANR	4861590	ExpressionStatement	color_component_number ++	1037:12:32781:32805	4861446	1	True				
ANR	4861591	PostIncDecOperationExpression	color_component_number ++		4861446	0					
ANR	4861592	Identifier	color_component_number		4861446	0					
ANR	4861593	IncDec	++		4861446	1					
ANR	4861594	ReturnStatement	return - 1 ;	1041:4:32828:32837	4861446	6	True				
ANR	4861595	UnaryOperationExpression	- 1		4861446	0					
ANR	4861596	UnaryOperator	-		4861446	0					
ANR	4861597	PrimaryExpression	1		4861446	1					
ANR	4861598	ReturnType	static int		4861446	1					
ANR	4861599	Identifier	xcf_get_color_comp_index		4861446	2					
ANR	4861600	ParameterList	"gx_device * dev , const char * pname , int name_size , int component_type"		4861446	3					
ANR	4861601	Parameter	gx_device * dev	1008:25:31608:31622	4861446	0	True				
ANR	4861602	ParameterType	gx_device *		4861446	0					
ANR	4861603	Identifier	dev		4861446	1					
ANR	4861604	Parameter	const char * pname	1008:42:31625:31642	4861446	1	True				
ANR	4861605	ParameterType	const char *		4861446	0					
ANR	4861606	Identifier	pname		4861446	1					
ANR	4861607	Parameter	int name_size	1008:62:31645:31657	4861446	2	True				
ANR	4861608	ParameterType	int		4861446	0					
ANR	4861609	Identifier	name_size		4861446	1					
ANR	4861610	Parameter	int component_type	1009:40:31700:31717	4861446	3	True				
ANR	4861611	ParameterType	int		4861446	0					
ANR	4861612	Identifier	component_type		4861446	1					
ANR	4861613	CFGEntryNode	ENTRY		4861446		True				
ANR	4861614	CFGExitNode	EXIT		4861446		True				
ANR	4861615	Symbol	* dev		4861446						
ANR	4861616	Symbol	* * separations		4861446						
ANR	4861617	Symbol	component_type		4861446						
ANR	4861618	Symbol	strlen		4861446						
ANR	4861619	Symbol	dev		4861446						
ANR	4861620	Symbol	separations -> num_names		4861446						
ANR	4861621	Symbol	* * * separations		4861446						
ANR	4861622	Symbol	* pcolor		4861446						
ANR	4861623	Symbol	( ( const xcf_device * ) dev ) -> std_colorant_names		4861446						
ANR	4861624	Symbol	separations -> names		4861446						
ANR	4861625	Symbol	color_component_number		4861446						
ANR	4861626	Symbol	* * separations -> names		4861446						
ANR	4861627	Symbol	* * i		4861446						
ANR	4861628	Symbol	compare_color_names		4861446						
ANR	4861629	Symbol	pname		4861446						
ANR	4861630	Symbol	separations -> names [ i ] -> data		4861446						
ANR	4861631	Symbol	* separations -> names		4861446						
ANR	4861632	Symbol	& ( ( const xcf_device * ) dev ) -> separation_names		4861446						
ANR	4861633	Symbol	i		4861446						
ANR	4861634	Symbol	list		4861446						
ANR	4861635	Symbol	num_spot		4861446						
ANR	4861636	Symbol	* i		4861446						
ANR	4861637	Symbol	separations		4861446						
ANR	4861638	Symbol	* list		4861446						
ANR	4861639	Symbol	pcolor		4861446						
ANR	4861640	Symbol	separations -> names [ i ] -> size		4861446						
ANR	4861641	Symbol	* separations		4861446						
ANR	4861642	Symbol	name_size		4861446						
ANR	4861643	ClassDef	<unnamed>	1055:8:33224:33521							
ANR	4861644	DeclStmt									
ANR	4861645	Decl							FILE	FILE *	f
ANR	4861646	DeclStmt									
ANR	4861647	Decl							int	int	offset
ANR	4861648	DeclStmt									
ANR	4861649	Decl							int	int	width
ANR	4861650	DeclStmt									
ANR	4861651	Decl							int	int	height
ANR	4861652	DeclStmt									
ANR	4861653	Decl							int	int	base_bytes_pp
ANR	4861654	DeclStmt									
ANR	4861655	Decl							int	int	n_extra_channels
ANR	4861656	DeclStmt									
ANR	4861657	Decl							int	int	n_tiles_x
ANR	4861658	DeclStmt									
ANR	4861659	Decl							int	int	n_tiles_y
ANR	4861660	DeclStmt									
ANR	4861661	Decl							int	int	n_tiles
ANR	4861662	DeclStmt									
ANR	4861663	Decl							int	int	n_levels
ANR	4861664	DeclStmt									
ANR	4861665	Decl							int	int	image_data_off
ANR	4861666	DeclStmt									
ANR	4861667	Decl									xcf_write_ctx
ANR	4861668	Function	xcf_calc_levels	1076:0:33570:33738							
ANR	4861669	FunctionDef	"xcf_calc_levels (int size , int tile_size)"		4861668	0					
ANR	4861670	CompoundStatement		1078:0:33622:33738	4861668	0					
ANR	4861671	IdentifierDeclStatement	int levels = 1 ;	1079:4:33628:33642	4861668	0	True				
ANR	4861672	IdentifierDecl	levels = 1		4861668	0					
ANR	4861673	IdentifierDeclType	int		4861668	0					
ANR	4861674	Identifier	levels		4861668	1					
ANR	4861675	AssignmentExpression	levels = 1		4861668	2		=			
ANR	4861676	Identifier	levels		4861668	0					
ANR	4861677	PrimaryExpression	1		4861668	1					
ANR	4861678	WhileStatement	while ( size > tile_size )		4861668	1					
ANR	4861679	Condition	size > tile_size	1080:11:33655:33670	4861668	0	True				
ANR	4861680	RelationalExpression	size > tile_size		4861668	0		>			
ANR	4861681	Identifier	size		4861668	0					
ANR	4861682	Identifier	tile_size		4861668	1					
ANR	4861683	CompoundStatement		3:29:50:50	4861668	1					
ANR	4861684	ExpressionStatement	size >>= 1	1081:8:33683:33693	4861668	0	True				
ANR	4861685	AssignmentExpression	size >>= 1		4861668	0		>>=			
ANR	4861686	Identifier	size		4861668	0					
ANR	4861687	PrimaryExpression	1		4861668	1					
ANR	4861688	ExpressionStatement	levels ++	1082:8:33703:33711	4861668	1	True				
ANR	4861689	PostIncDecOperationExpression	levels ++		4861668	0					
ANR	4861690	Identifier	levels		4861668	0					
ANR	4861691	IncDec	++		4861668	1					
ANR	4861692	ReturnStatement	return levels ;	1084:4:33723:33736	4861668	2	True				
ANR	4861693	Identifier	levels		4861668	0					
ANR	4861694	ReturnType	static int		4861668	1					
ANR	4861695	Identifier	xcf_calc_levels		4861668	2					
ANR	4861696	ParameterList	"int size , int tile_size"		4861668	3					
ANR	4861697	Parameter	int size	1077:16:33597:33604	4861668	0	True				
ANR	4861698	ParameterType	int		4861668	0					
ANR	4861699	Identifier	size		4861668	1					
ANR	4861700	Parameter	int tile_size	1077:26:33607:33619	4861668	1	True				
ANR	4861701	ParameterType	int		4861668	0					
ANR	4861702	Identifier	tile_size		4861668	1					
ANR	4861703	CFGEntryNode	ENTRY		4861668		True				
ANR	4861704	CFGExitNode	EXIT		4861668		True				
ANR	4861705	Symbol	size		4861668						
ANR	4861706	Symbol	tile_size		4861668						
ANR	4861707	Symbol	levels		4861668						
ANR	4861708	Function	xcf_setup_tiles	1087:0:33741:34277							
ANR	4861709	FunctionDef	"xcf_setup_tiles (xcf_write_ctx * xc , xcf_device * dev)"		4861708	0					
ANR	4861710	CompoundStatement		1089:0:33804:34277	4861708	0					
ANR	4861711	ExpressionStatement	xc -> base_bytes_pp = 3	1090:4:33810:33831	4861708	0	True				
ANR	4861712	AssignmentExpression	xc -> base_bytes_pp = 3		4861708	0		=			
ANR	4861713	PtrMemberAccess	xc -> base_bytes_pp		4861708	0					
ANR	4861714	Identifier	xc		4861708	0					
ANR	4861715	Identifier	base_bytes_pp		4861708	1					
ANR	4861716	PrimaryExpression	3		4861708	1					
ANR	4861717	ExpressionStatement	xc -> n_extra_channels = dev -> separation_names . num_names	1091:4:33837:33891	4861708	1	True				
ANR	4861718	AssignmentExpression	xc -> n_extra_channels = dev -> separation_names . num_names		4861708	0		=			
ANR	4861719	PtrMemberAccess	xc -> n_extra_channels		4861708	0					
ANR	4861720	Identifier	xc		4861708	0					
ANR	4861721	Identifier	n_extra_channels		4861708	1					
ANR	4861722	MemberAccess	dev -> separation_names . num_names		4861708	1					
ANR	4861723	PtrMemberAccess	dev -> separation_names		4861708	0					
ANR	4861724	Identifier	dev		4861708	0					
ANR	4861725	Identifier	separation_names		4861708	1					
ANR	4861726	Identifier	num_names		4861708	1					
ANR	4861727	ExpressionStatement	xc -> width = dev -> width	1092:4:33897:33919	4861708	2	True				
ANR	4861728	AssignmentExpression	xc -> width = dev -> width		4861708	0		=			
ANR	4861729	PtrMemberAccess	xc -> width		4861708	0					
ANR	4861730	Identifier	xc		4861708	0					
ANR	4861731	Identifier	width		4861708	1					
ANR	4861732	PtrMemberAccess	dev -> width		4861708	1					
ANR	4861733	Identifier	dev		4861708	0					
ANR	4861734	Identifier	width		4861708	1					
ANR	4861735	ExpressionStatement	xc -> height = dev -> height	1093:4:33925:33949	4861708	3	True				
ANR	4861736	AssignmentExpression	xc -> height = dev -> height		4861708	0		=			
ANR	4861737	PtrMemberAccess	xc -> height		4861708	0					
ANR	4861738	Identifier	xc		4861708	0					
ANR	4861739	Identifier	height		4861708	1					
ANR	4861740	PtrMemberAccess	dev -> height		4861708	1					
ANR	4861741	Identifier	dev		4861708	0					
ANR	4861742	Identifier	height		4861708	1					
ANR	4861743	ExpressionStatement	xc -> n_tiles_x = ( dev -> width + TILE_WIDTH - 1 ) / TILE_WIDTH	1094:4:33955:34013	4861708	4	True				
ANR	4861744	AssignmentExpression	xc -> n_tiles_x = ( dev -> width + TILE_WIDTH - 1 ) / TILE_WIDTH		4861708	0		=			
ANR	4861745	PtrMemberAccess	xc -> n_tiles_x		4861708	0					
ANR	4861746	Identifier	xc		4861708	0					
ANR	4861747	Identifier	n_tiles_x		4861708	1					
ANR	4861748	MultiplicativeExpression	( dev -> width + TILE_WIDTH - 1 ) / TILE_WIDTH		4861708	1		/			
ANR	4861749	AdditiveExpression	dev -> width + TILE_WIDTH - 1		4861708	0		+			
ANR	4861750	PtrMemberAccess	dev -> width		4861708	0					
ANR	4861751	Identifier	dev		4861708	0					
ANR	4861752	Identifier	width		4861708	1					
ANR	4861753	AdditiveExpression	TILE_WIDTH - 1		4861708	1		-			
ANR	4861754	Identifier	TILE_WIDTH		4861708	0					
ANR	4861755	PrimaryExpression	1		4861708	1					
ANR	4861756	Identifier	TILE_WIDTH		4861708	1					
ANR	4861757	ExpressionStatement	xc -> n_tiles_y = ( dev -> height + TILE_HEIGHT - 1 ) / TILE_HEIGHT	1095:4:34019:34080	4861708	5	True				
ANR	4861758	AssignmentExpression	xc -> n_tiles_y = ( dev -> height + TILE_HEIGHT - 1 ) / TILE_HEIGHT		4861708	0		=			
ANR	4861759	PtrMemberAccess	xc -> n_tiles_y		4861708	0					
ANR	4861760	Identifier	xc		4861708	0					
ANR	4861761	Identifier	n_tiles_y		4861708	1					
ANR	4861762	MultiplicativeExpression	( dev -> height + TILE_HEIGHT - 1 ) / TILE_HEIGHT		4861708	1		/			
ANR	4861763	AdditiveExpression	dev -> height + TILE_HEIGHT - 1		4861708	0		+			
ANR	4861764	PtrMemberAccess	dev -> height		4861708	0					
ANR	4861765	Identifier	dev		4861708	0					
ANR	4861766	Identifier	height		4861708	1					
ANR	4861767	AdditiveExpression	TILE_HEIGHT - 1		4861708	1		-			
ANR	4861768	Identifier	TILE_HEIGHT		4861708	0					
ANR	4861769	PrimaryExpression	1		4861708	1					
ANR	4861770	Identifier	TILE_HEIGHT		4861708	1					
ANR	4861771	ExpressionStatement	xc -> n_tiles = xc -> n_tiles_x * xc -> n_tiles_y	1096:4:34086:34129	4861708	6	True				
ANR	4861772	AssignmentExpression	xc -> n_tiles = xc -> n_tiles_x * xc -> n_tiles_y		4861708	0		=			
ANR	4861773	PtrMemberAccess	xc -> n_tiles		4861708	0					
ANR	4861774	Identifier	xc		4861708	0					
ANR	4861775	Identifier	n_tiles		4861708	1					
ANR	4861776	MultiplicativeExpression	xc -> n_tiles_x * xc -> n_tiles_y		4861708	1		*			
ANR	4861777	PtrMemberAccess	xc -> n_tiles_x		4861708	0					
ANR	4861778	Identifier	xc		4861708	0					
ANR	4861779	Identifier	n_tiles_x		4861708	1					
ANR	4861780	PtrMemberAccess	xc -> n_tiles_y		4861708	1					
ANR	4861781	Identifier	xc		4861708	0					
ANR	4861782	Identifier	n_tiles_y		4861708	1					
ANR	4861783	ExpressionStatement	"xc -> n_levels = max ( xcf_calc_levels ( dev -> width , TILE_WIDTH ) , xcf_calc_levels ( dev -> height , TILE_HEIGHT ) )"	1097:4:34135:34260	4861708	7	True				
ANR	4861784	AssignmentExpression	"xc -> n_levels = max ( xcf_calc_levels ( dev -> width , TILE_WIDTH ) , xcf_calc_levels ( dev -> height , TILE_HEIGHT ) )"		4861708	0		=			
ANR	4861785	PtrMemberAccess	xc -> n_levels		4861708	0					
ANR	4861786	Identifier	xc		4861708	0					
ANR	4861787	Identifier	n_levels		4861708	1					
ANR	4861788	CallExpression	"max ( xcf_calc_levels ( dev -> width , TILE_WIDTH ) , xcf_calc_levels ( dev -> height , TILE_HEIGHT ) )"		4861708	1					
ANR	4861789	Callee	max		4861708	0					
ANR	4861790	Identifier	max		4861708	0					
ANR	4861791	ArgumentList	"xcf_calc_levels ( dev -> width , TILE_WIDTH )"		4861708	1					
ANR	4861792	Argument	"xcf_calc_levels ( dev -> width , TILE_WIDTH )"		4861708	0					
ANR	4861793	CallExpression	"xcf_calc_levels ( dev -> width , TILE_WIDTH )"		4861708	0					
ANR	4861794	Callee	xcf_calc_levels		4861708	0					
ANR	4861795	Identifier	xcf_calc_levels		4861708	0					
ANR	4861796	ArgumentList	dev -> width		4861708	1					
ANR	4861797	Argument	dev -> width		4861708	0					
ANR	4861798	PtrMemberAccess	dev -> width		4861708	0					
ANR	4861799	Identifier	dev		4861708	0					
ANR	4861800	Identifier	width		4861708	1					
ANR	4861801	Argument	TILE_WIDTH		4861708	1					
ANR	4861802	Identifier	TILE_WIDTH		4861708	0					
ANR	4861803	Argument	"xcf_calc_levels ( dev -> height , TILE_HEIGHT )"		4861708	1					
ANR	4861804	CallExpression	"xcf_calc_levels ( dev -> height , TILE_HEIGHT )"		4861708	0					
ANR	4861805	Callee	xcf_calc_levels		4861708	0					
ANR	4861806	Identifier	xcf_calc_levels		4861708	0					
ANR	4861807	ArgumentList	dev -> height		4861708	1					
ANR	4861808	Argument	dev -> height		4861708	0					
ANR	4861809	PtrMemberAccess	dev -> height		4861708	0					
ANR	4861810	Identifier	dev		4861708	0					
ANR	4861811	Identifier	height		4861708	1					
ANR	4861812	Argument	TILE_HEIGHT		4861708	1					
ANR	4861813	Identifier	TILE_HEIGHT		4861708	0					
ANR	4861814	ReturnStatement	return 0 ;	1100:4:34267:34275	4861708	8	True				
ANR	4861815	PrimaryExpression	0		4861708	0					
ANR	4861816	ReturnType	static int		4861708	1					
ANR	4861817	Identifier	xcf_setup_tiles		4861708	2					
ANR	4861818	ParameterList	"xcf_write_ctx * xc , xcf_device * dev"		4861708	3					
ANR	4861819	Parameter	xcf_write_ctx * xc	1088:16:33768:33784	4861708	0	True				
ANR	4861820	ParameterType	xcf_write_ctx *		4861708	0					
ANR	4861821	Identifier	xc		4861708	1					
ANR	4861822	Parameter	xcf_device * dev	1088:35:33787:33801	4861708	1	True				
ANR	4861823	ParameterType	xcf_device *		4861708	0					
ANR	4861824	Identifier	dev		4861708	1					
ANR	4861825	CFGEntryNode	ENTRY		4861708		True				
ANR	4861826	CFGExitNode	EXIT		4861708		True				
ANR	4861827	Symbol	* dev		4861708						
ANR	4861828	Symbol	TILE_HEIGHT		4861708						
ANR	4861829	Symbol	xc -> n_extra_channels		4861708						
ANR	4861830	Symbol	max		4861708						
ANR	4861831	Symbol	dev -> separation_names . num_names		4861708						
ANR	4861832	Symbol	dev -> height		4861708						
ANR	4861833	Symbol	xc -> n_tiles		4861708						
ANR	4861834	Symbol	xc		4861708						
ANR	4861835	Symbol	xcf_calc_levels		4861708						
ANR	4861836	Symbol	xc -> n_tiles_x		4861708						
ANR	4861837	Symbol	* xc		4861708						
ANR	4861838	Symbol	dev		4861708						
ANR	4861839	Symbol	xc -> width		4861708						
ANR	4861840	Symbol	xc -> height		4861708						
ANR	4861841	Symbol	dev -> width		4861708						
ANR	4861842	Symbol	xc -> n_tiles_y		4861708						
ANR	4861843	Symbol	dev -> separation_names		4861708						
ANR	4861844	Symbol	TILE_WIDTH		4861708						
ANR	4861845	Symbol	xc -> base_bytes_pp		4861708						
ANR	4861846	Symbol	xc -> n_levels		4861708						
ANR	4861847	Function	xcf_tile_sizeof	1104:0:34324:34657							
ANR	4861848	FunctionDef	"xcf_tile_sizeof (xcf_write_ctx * xc , int tile_idx)"		4861847	0					
ANR	4861849	CompoundStatement		1106:0:34384:34657	4861847	0					
ANR	4861850	IdentifierDeclStatement	int tile_i = tile_idx % xc -> n_tiles_x ;	1107:4:34390:34427	4861847	0	True				
ANR	4861851	IdentifierDecl	tile_i = tile_idx % xc -> n_tiles_x		4861847	0					
ANR	4861852	IdentifierDeclType	int		4861847	0					
ANR	4861853	Identifier	tile_i		4861847	1					
ANR	4861854	AssignmentExpression	tile_i = tile_idx % xc -> n_tiles_x		4861847	2		=			
ANR	4861855	Identifier	tile_i		4861847	0					
ANR	4861856	MultiplicativeExpression	tile_idx % xc -> n_tiles_x		4861847	1		%			
ANR	4861857	Identifier	tile_idx		4861847	0					
ANR	4861858	PtrMemberAccess	xc -> n_tiles_x		4861847	1					
ANR	4861859	Identifier	xc		4861847	0					
ANR	4861860	Identifier	n_tiles_x		4861847	1					
ANR	4861861	IdentifierDeclStatement	int tile_j = tile_idx / xc -> n_tiles_x ;	1108:4:34433:34470	4861847	1	True				
ANR	4861862	IdentifierDecl	tile_j = tile_idx / xc -> n_tiles_x		4861847	0					
ANR	4861863	IdentifierDeclType	int		4861847	0					
ANR	4861864	Identifier	tile_j		4861847	1					
ANR	4861865	AssignmentExpression	tile_j = tile_idx / xc -> n_tiles_x		4861847	2		=			
ANR	4861866	Identifier	tile_j		4861847	0					
ANR	4861867	MultiplicativeExpression	tile_idx / xc -> n_tiles_x		4861847	1		/			
ANR	4861868	Identifier	tile_idx		4861847	0					
ANR	4861869	PtrMemberAccess	xc -> n_tiles_x		4861847	1					
ANR	4861870	Identifier	xc		4861847	0					
ANR	4861871	Identifier	n_tiles_x		4861847	1					
ANR	4861872	IdentifierDeclStatement	"int tile_size_x = min ( TILE_WIDTH , xc -> width - tile_i * TILE_WIDTH ) ;"	1109:4:34476:34542	4861847	2	True				
ANR	4861873	IdentifierDecl	"tile_size_x = min ( TILE_WIDTH , xc -> width - tile_i * TILE_WIDTH )"		4861847	0					
ANR	4861874	IdentifierDeclType	int		4861847	0					
ANR	4861875	Identifier	tile_size_x		4861847	1					
ANR	4861876	AssignmentExpression	"tile_size_x = min ( TILE_WIDTH , xc -> width - tile_i * TILE_WIDTH )"		4861847	2		=			
ANR	4861877	Identifier	tile_size_x		4861847	0					
ANR	4861878	CallExpression	"min ( TILE_WIDTH , xc -> width - tile_i * TILE_WIDTH )"		4861847	1					
ANR	4861879	Callee	min		4861847	0					
ANR	4861880	Identifier	min		4861847	0					
ANR	4861881	ArgumentList	TILE_WIDTH		4861847	1					
ANR	4861882	Argument	TILE_WIDTH		4861847	0					
ANR	4861883	Identifier	TILE_WIDTH		4861847	0					
ANR	4861884	Argument	xc -> width - tile_i * TILE_WIDTH		4861847	1					
ANR	4861885	AdditiveExpression	xc -> width - tile_i * TILE_WIDTH		4861847	0		-			
ANR	4861886	PtrMemberAccess	xc -> width		4861847	0					
ANR	4861887	Identifier	xc		4861847	0					
ANR	4861888	Identifier	width		4861847	1					
ANR	4861889	MultiplicativeExpression	tile_i * TILE_WIDTH		4861847	1		*			
ANR	4861890	Identifier	tile_i		4861847	0					
ANR	4861891	Identifier	TILE_WIDTH		4861847	1					
ANR	4861892	IdentifierDeclStatement	"int tile_size_y = min ( TILE_HEIGHT , xc -> height - tile_j * TILE_HEIGHT ) ;"	1110:4:34548:34617	4861847	3	True				
ANR	4861893	IdentifierDecl	"tile_size_y = min ( TILE_HEIGHT , xc -> height - tile_j * TILE_HEIGHT )"		4861847	0					
ANR	4861894	IdentifierDeclType	int		4861847	0					
ANR	4861895	Identifier	tile_size_y		4861847	1					
ANR	4861896	AssignmentExpression	"tile_size_y = min ( TILE_HEIGHT , xc -> height - tile_j * TILE_HEIGHT )"		4861847	2		=			
ANR	4861897	Identifier	tile_size_y		4861847	0					
ANR	4861898	CallExpression	"min ( TILE_HEIGHT , xc -> height - tile_j * TILE_HEIGHT )"		4861847	1					
ANR	4861899	Callee	min		4861847	0					
ANR	4861900	Identifier	min		4861847	0					
ANR	4861901	ArgumentList	TILE_HEIGHT		4861847	1					
ANR	4861902	Argument	TILE_HEIGHT		4861847	0					
ANR	4861903	Identifier	TILE_HEIGHT		4861847	0					
ANR	4861904	Argument	xc -> height - tile_j * TILE_HEIGHT		4861847	1					
ANR	4861905	AdditiveExpression	xc -> height - tile_j * TILE_HEIGHT		4861847	0		-			
ANR	4861906	PtrMemberAccess	xc -> height		4861847	0					
ANR	4861907	Identifier	xc		4861847	0					
ANR	4861908	Identifier	height		4861847	1					
ANR	4861909	MultiplicativeExpression	tile_j * TILE_HEIGHT		4861847	1		*			
ANR	4861910	Identifier	tile_j		4861847	0					
ANR	4861911	Identifier	TILE_HEIGHT		4861847	1					
ANR	4861912	ReturnStatement	return tile_size_x * tile_size_y ;	1111:4:34623:34655	4861847	4	True				
ANR	4861913	MultiplicativeExpression	tile_size_x * tile_size_y		4861847	0		*			
ANR	4861914	Identifier	tile_size_x		4861847	0					
ANR	4861915	Identifier	tile_size_y		4861847	1					
ANR	4861916	ReturnType	static int		4861847	1					
ANR	4861917	Identifier	xcf_tile_sizeof		4861847	2					
ANR	4861918	ParameterList	"xcf_write_ctx * xc , int tile_idx"		4861847	3					
ANR	4861919	Parameter	xcf_write_ctx * xc	1105:16:34351:34367	4861847	0	True				
ANR	4861920	ParameterType	xcf_write_ctx *		4861847	0					
ANR	4861921	Identifier	xc		4861847	1					
ANR	4861922	Parameter	int tile_idx	1105:35:34370:34381	4861847	1	True				
ANR	4861923	ParameterType	int		4861847	0					
ANR	4861924	Identifier	tile_idx		4861847	1					
ANR	4861925	CFGEntryNode	ENTRY		4861847		True				
ANR	4861926	CFGExitNode	EXIT		4861847		True				
ANR	4861927	Symbol	TILE_HEIGHT		4861847						
ANR	4861928	Symbol	tile_size_x		4861847						
ANR	4861929	Symbol	xc		4861847						
ANR	4861930	Symbol	tile_size_y		4861847						
ANR	4861931	Symbol	xc -> n_tiles_x		4861847						
ANR	4861932	Symbol	tile_idx		4861847						
ANR	4861933	Symbol	* xc		4861847						
ANR	4861934	Symbol	min		4861847						
ANR	4861935	Symbol	tile_i		4861847						
ANR	4861936	Symbol	xc -> width		4861847						
ANR	4861937	Symbol	xc -> height		4861847						
ANR	4861938	Symbol	tile_j		4861847						
ANR	4861939	Symbol	TILE_WIDTH		4861847						
ANR	4861940	Function	xcf_write	1114:0:34660:34861							
ANR	4861941	FunctionDef	"xcf_write (xcf_write_ctx * xc , const byte * buf , int size)"		4861940	0					
ANR	4861942	CompoundStatement		1115:56:34727:34861	4861940	0					
ANR	4861943	IdentifierDeclStatement	int code ;	1116:4:34733:34741	4861940	0	True				
ANR	4861944	IdentifierDecl	code		4861940	0					
ANR	4861945	IdentifierDeclType	int		4861940	0					
ANR	4861946	Identifier	code		4861940	1					
ANR	4861947	ExpressionStatement	"code = fwrite ( buf , 1 , size , xc -> f )"	1118:4:34748:34782	4861940	1	True				
ANR	4861948	AssignmentExpression	"code = fwrite ( buf , 1 , size , xc -> f )"		4861940	0		=			
ANR	4861949	Identifier	code		4861940	0					
ANR	4861950	CallExpression	"fwrite ( buf , 1 , size , xc -> f )"		4861940	1					
ANR	4861951	Callee	fwrite		4861940	0					
ANR	4861952	Identifier	fwrite		4861940	0					
ANR	4861953	ArgumentList	buf		4861940	1					
ANR	4861954	Argument	buf		4861940	0					
ANR	4861955	Identifier	buf		4861940	0					
ANR	4861956	Argument	1		4861940	1					
ANR	4861957	PrimaryExpression	1		4861940	0					
ANR	4861958	Argument	size		4861940	2					
ANR	4861959	Identifier	size		4861940	0					
ANR	4861960	Argument	xc -> f		4861940	3					
ANR	4861961	PtrMemberAccess	xc -> f		4861940	0					
ANR	4861962	Identifier	xc		4861940	0					
ANR	4861963	Identifier	f		4861940	1					
ANR	4861964	IfStatement	if ( code < 0 )		4861940	2					
ANR	4861965	Condition	code < 0	1119:8:34792:34799	4861940	0	True				
ANR	4861966	RelationalExpression	code < 0		4861940	0		<			
ANR	4861967	Identifier	code		4861940	0					
ANR	4861968	PrimaryExpression	0		4861940	1					
ANR	4861969	ReturnStatement	return code ;	1120:8:34810:34821	4861940	1	True				
ANR	4861970	Identifier	code		4861940	0					
ANR	4861971	ExpressionStatement	xc -> offset += code	1121:4:34827:34845	4861940	3	True				
ANR	4861972	AssignmentExpression	xc -> offset += code		4861940	0		+=			
ANR	4861973	PtrMemberAccess	xc -> offset		4861940	0					
ANR	4861974	Identifier	xc		4861940	0					
ANR	4861975	Identifier	offset		4861940	1					
ANR	4861976	Identifier	code		4861940	1					
ANR	4861977	ReturnStatement	return 0 ;	1122:4:34851:34859	4861940	4	True				
ANR	4861978	PrimaryExpression	0		4861940	0					
ANR	4861979	ReturnType	static int		4861940	1					
ANR	4861980	Identifier	xcf_write		4861940	2					
ANR	4861981	ParameterList	"xcf_write_ctx * xc , const byte * buf , int size"		4861940	3					
ANR	4861982	Parameter	xcf_write_ctx * xc	1115:10:34681:34697	4861940	0	True				
ANR	4861983	ParameterType	xcf_write_ctx *		4861940	0					
ANR	4861984	Identifier	xc		4861940	1					
ANR	4861985	Parameter	const byte * buf	1115:29:34700:34714	4861940	1	True				
ANR	4861986	ParameterType	const byte *		4861940	0					
ANR	4861987	Identifier	buf		4861940	1					
ANR	4861988	Parameter	int size	1115:46:34717:34724	4861940	2	True				
ANR	4861989	ParameterType	int		4861940	0					
ANR	4861990	Identifier	size		4861940	1					
ANR	4861991	CFGEntryNode	ENTRY		4861940		True				
ANR	4861992	CFGExitNode	EXIT		4861940		True				
ANR	4861993	Symbol	buf		4861940						
ANR	4861994	Symbol	* xc		4861940						
ANR	4861995	Symbol	code		4861940						
ANR	4861996	Symbol	size		4861940						
ANR	4861997	Symbol	fwrite		4861940						
ANR	4861998	Symbol	xc		4861940						
ANR	4861999	Symbol	xc -> offset		4861940						
ANR	4862000	Symbol	xc -> f		4861940						
ANR	4862001	Function	xcf_write_32	1125:0:34864:35003							
ANR	4862002	FunctionDef	"xcf_write_32 (xcf_write_ctx * xc , bits32 v)"		4862001	0					
ANR	4862003	CompoundStatement		1127:0:34917:35003	4862001	0					
ANR	4862004	IdentifierDeclStatement	bits32 buf ;	1128:4:34923:34933	4862001	0	True				
ANR	4862005	IdentifierDecl	buf		4862001	0					
ANR	4862006	IdentifierDeclType	bits32		4862001	0					
ANR	4862007	Identifier	buf		4862001	1					
ANR	4862008	ExpressionStatement	"assign_u32 ( buf , v )"	1130:4:34940:34958	4862001	1	True				
ANR	4862009	CallExpression	"assign_u32 ( buf , v )"		4862001	0					
ANR	4862010	Callee	assign_u32		4862001	0					
ANR	4862011	Identifier	assign_u32		4862001	0					
ANR	4862012	ArgumentList	buf		4862001	1					
ANR	4862013	Argument	buf		4862001	0					
ANR	4862014	Identifier	buf		4862001	0					
ANR	4862015	Argument	v		4862001	1					
ANR	4862016	Identifier	v		4862001	0					
ANR	4862017	ReturnStatement	"return xcf_write ( xc , ( byte * ) & buf , 4 ) ;"	1131:4:34964:35001	4862001	2	True				
ANR	4862018	CallExpression	"xcf_write ( xc , ( byte * ) & buf , 4 )"		4862001	0					
ANR	4862019	Callee	xcf_write		4862001	0					
ANR	4862020	Identifier	xcf_write		4862001	0					
ANR	4862021	ArgumentList	xc		4862001	1					
ANR	4862022	Argument	xc		4862001	0					
ANR	4862023	Identifier	xc		4862001	0					
ANR	4862024	Argument	( byte * ) & buf		4862001	1					
ANR	4862025	CastExpression	( byte * ) & buf		4862001	0					
ANR	4862026	CastTarget	byte *		4862001	0					
ANR	4862027	UnaryOperationExpression	& buf		4862001	1					
ANR	4862028	UnaryOperator	&		4862001	0					
ANR	4862029	Identifier	buf		4862001	1					
ANR	4862030	Argument	4		4862001	2					
ANR	4862031	PrimaryExpression	4		4862001	0					
ANR	4862032	ReturnType	static int		4862001	1					
ANR	4862033	Identifier	xcf_write_32		4862001	2					
ANR	4862034	ParameterList	"xcf_write_ctx * xc , bits32 v"		4862001	3					
ANR	4862035	Parameter	xcf_write_ctx * xc	1126:13:34888:34904	4862001	0	True				
ANR	4862036	ParameterType	xcf_write_ctx *		4862001	0					
ANR	4862037	Identifier	xc		4862001	1					
ANR	4862038	Parameter	bits32 v	1126:32:34907:34914	4862001	1	True				
ANR	4862039	ParameterType	bits32		4862001	0					
ANR	4862040	Identifier	v		4862001	1					
ANR	4862041	CFGEntryNode	ENTRY		4862001		True				
ANR	4862042	CFGExitNode	EXIT		4862001		True				
ANR	4862043	Symbol	buf		4862001						
ANR	4862044	Symbol	v		4862001						
ANR	4862045	Symbol	xcf_write		4862001						
ANR	4862046	Symbol	xc		4862001						
ANR	4862047	Symbol	& buf		4862001						
ANR	4862048	Function	xcf_write_image_props	1134:0:35006:35147							
ANR	4862049	FunctionDef	xcf_write_image_props (xcf_write_ctx * xc)		4862048	0					
ANR	4862050	CompoundStatement		1136:0:35058:35147	4862048	0					
ANR	4862051	IdentifierDeclStatement	int code = 0 ;	1137:4:35064:35076	4862048	0	True				
ANR	4862052	IdentifierDecl	code = 0		4862048	0					
ANR	4862053	IdentifierDeclType	int		4862048	0					
ANR	4862054	Identifier	code		4862048	1					
ANR	4862055	AssignmentExpression	code = 0		4862048	2		=			
ANR	4862056	Identifier	code		4862048	0					
ANR	4862057	PrimaryExpression	0		4862048	1					
ANR	4862058	ExpressionStatement	"xcf_write_32 ( xc , 0 )"	1139:4:35083:35102	4862048	1	True				
ANR	4862059	CallExpression	"xcf_write_32 ( xc , 0 )"		4862048	0					
ANR	4862060	Callee	xcf_write_32		4862048	0					
ANR	4862061	Identifier	xcf_write_32		4862048	0					
ANR	4862062	ArgumentList	xc		4862048	1					
ANR	4862063	Argument	xc		4862048	0					
ANR	4862064	Identifier	xc		4862048	0					
ANR	4862065	Argument	0		4862048	1					
ANR	4862066	PrimaryExpression	0		4862048	0					
ANR	4862067	ExpressionStatement	"xcf_write_32 ( xc , 0 )"	1140:4:35108:35127	4862048	2	True				
ANR	4862068	CallExpression	"xcf_write_32 ( xc , 0 )"		4862048	0					
ANR	4862069	Callee	xcf_write_32		4862048	0					
ANR	4862070	Identifier	xcf_write_32		4862048	0					
ANR	4862071	ArgumentList	xc		4862048	1					
ANR	4862072	Argument	xc		4862048	0					
ANR	4862073	Identifier	xc		4862048	0					
ANR	4862074	Argument	0		4862048	1					
ANR	4862075	PrimaryExpression	0		4862048	0					
ANR	4862076	ReturnStatement	return code ;	1142:4:35134:35145	4862048	3	True				
ANR	4862077	Identifier	code		4862048	0					
ANR	4862078	ReturnType	static int		4862048	1					
ANR	4862079	Identifier	xcf_write_image_props		4862048	2					
ANR	4862080	ParameterList	xcf_write_ctx * xc		4862048	3					
ANR	4862081	Parameter	xcf_write_ctx * xc	1135:22:35039:35055	4862048	0	True				
ANR	4862082	ParameterType	xcf_write_ctx *		4862048	0					
ANR	4862083	Identifier	xc		4862048	1					
ANR	4862084	CFGEntryNode	ENTRY		4862048		True				
ANR	4862085	CFGExitNode	EXIT		4862048		True				
ANR	4862086	Symbol	code		4862048						
ANR	4862087	Symbol	xc		4862048						
ANR	4862088	Function	xcf_base_size	1148:0:35215:35615							
ANR	4862089	FunctionDef	"xcf_base_size (xcf_write_ctx * xc , const char * layer_name)"		4862088	0					
ANR	4862090	CompoundStatement		1150:0:35283:35615	4862088	0					
ANR	4862091	IdentifierDeclStatement	int bytes_pp = xc -> base_bytes_pp + xc -> n_extra_channels ;	1151:4:35289:35344	4862088	0	True				
ANR	4862092	IdentifierDecl	bytes_pp = xc -> base_bytes_pp + xc -> n_extra_channels		4862088	0					
ANR	4862093	IdentifierDeclType	int		4862088	0					
ANR	4862094	Identifier	bytes_pp		4862088	1					
ANR	4862095	AssignmentExpression	bytes_pp = xc -> base_bytes_pp + xc -> n_extra_channels		4862088	2		=			
ANR	4862096	Identifier	bytes_pp		4862088	0					
ANR	4862097	AdditiveExpression	xc -> base_bytes_pp + xc -> n_extra_channels		4862088	1		+			
ANR	4862098	PtrMemberAccess	xc -> base_bytes_pp		4862088	0					
ANR	4862099	Identifier	xc		4862088	0					
ANR	4862100	Identifier	base_bytes_pp		4862088	1					
ANR	4862101	PtrMemberAccess	xc -> n_extra_channels		4862088	1					
ANR	4862102	Identifier	xc		4862088	0					
ANR	4862103	Identifier	n_extra_channels		4862088	1					
ANR	4862104	ReturnStatement	return 17 + strlen ( layer_name ) + 8 + 12 + xc -> n_levels * 16 + 12 + xc -> n_tiles * 4 + xc -> width * xc -> height * bytes_pp ;	1153:4:35351:35596	4862088	1	True				
ANR	4862105	AdditiveExpression	17 + strlen ( layer_name ) + 8 + 12 + xc -> n_levels * 16 + 12 + xc -> n_tiles * 4 + xc -> width * xc -> height * bytes_pp		4862088	0		+			
ANR	4862106	PrimaryExpression	17		4862088	0					
ANR	4862107	AdditiveExpression	strlen ( layer_name ) + 8 + 12 + xc -> n_levels * 16 + 12 + xc -> n_tiles * 4 + xc -> width * xc -> height * bytes_pp		4862088	1		+			
ANR	4862108	CallExpression	strlen ( layer_name )		4862088	0					
ANR	4862109	Callee	strlen		4862088	0					
ANR	4862110	Identifier	strlen		4862088	0					
ANR	4862111	ArgumentList	layer_name		4862088	1					
ANR	4862112	Argument	layer_name		4862088	0					
ANR	4862113	Identifier	layer_name		4862088	0					
ANR	4862114	AdditiveExpression	8 + 12 + xc -> n_levels * 16 + 12 + xc -> n_tiles * 4 + xc -> width * xc -> height * bytes_pp		4862088	1		+			
ANR	4862115	PrimaryExpression	8		4862088	0					
ANR	4862116	AdditiveExpression	12 + xc -> n_levels * 16 + 12 + xc -> n_tiles * 4 + xc -> width * xc -> height * bytes_pp		4862088	1		+			
ANR	4862117	PrimaryExpression	12		4862088	0					
ANR	4862118	AdditiveExpression	xc -> n_levels * 16 + 12 + xc -> n_tiles * 4 + xc -> width * xc -> height * bytes_pp		4862088	1		+			
ANR	4862119	MultiplicativeExpression	xc -> n_levels * 16		4862088	0		*			
ANR	4862120	PtrMemberAccess	xc -> n_levels		4862088	0					
ANR	4862121	Identifier	xc		4862088	0					
ANR	4862122	Identifier	n_levels		4862088	1					
ANR	4862123	PrimaryExpression	16		4862088	1					
ANR	4862124	AdditiveExpression	12 + xc -> n_tiles * 4 + xc -> width * xc -> height * bytes_pp		4862088	1		+			
ANR	4862125	PrimaryExpression	12		4862088	0					
ANR	4862126	AdditiveExpression	xc -> n_tiles * 4 + xc -> width * xc -> height * bytes_pp		4862088	1		+			
ANR	4862127	MultiplicativeExpression	xc -> n_tiles * 4		4862088	0		*			
ANR	4862128	PtrMemberAccess	xc -> n_tiles		4862088	0					
ANR	4862129	Identifier	xc		4862088	0					
ANR	4862130	Identifier	n_tiles		4862088	1					
ANR	4862131	PrimaryExpression	4		4862088	1					
ANR	4862132	MultiplicativeExpression	xc -> width * xc -> height * bytes_pp		4862088	1		*			
ANR	4862133	PtrMemberAccess	xc -> width		4862088	0					
ANR	4862134	Identifier	xc		4862088	0					
ANR	4862135	Identifier	width		4862088	1					
ANR	4862136	MultiplicativeExpression	xc -> height * bytes_pp		4862088	1		*			
ANR	4862137	PtrMemberAccess	xc -> height		4862088	0					
ANR	4862138	Identifier	xc		4862088	0					
ANR	4862139	Identifier	height		4862088	1					
ANR	4862140	Identifier	bytes_pp		4862088	1					
ANR	4862141	ReturnType	static int		4862088	1					
ANR	4862142	Identifier	xcf_base_size		4862088	2					
ANR	4862143	ParameterList	"xcf_write_ctx * xc , const char * layer_name"		4862088	3					
ANR	4862144	Parameter	xcf_write_ctx * xc	1149:14:35240:35256	4862088	0	True				
ANR	4862145	ParameterType	xcf_write_ctx *		4862088	0					
ANR	4862146	Identifier	xc		4862088	1					
ANR	4862147	Parameter	const char * layer_name	1149:33:35259:35280	4862088	1	True				
ANR	4862148	ParameterType	const char *		4862088	0					
ANR	4862149	Identifier	layer_name		4862088	1					
ANR	4862150	CFGEntryNode	ENTRY		4862088		True				
ANR	4862151	CFGExitNode	EXIT		4862088		True				
ANR	4862152	Symbol	strlen		4862088						
ANR	4862153	Symbol	* xc		4862088						
ANR	4862154	Symbol	xc -> n_extra_channels		4862088						
ANR	4862155	Symbol	xc -> width		4862088						
ANR	4862156	Symbol	xc -> height		4862088						
ANR	4862157	Symbol	bytes_pp		4862088						
ANR	4862158	Symbol	xc -> n_tiles		4862088						
ANR	4862159	Symbol	xc		4862088						
ANR	4862160	Symbol	xc -> base_bytes_pp		4862088						
ANR	4862161	Symbol	layer_name		4862088						
ANR	4862162	Symbol	xc -> n_levels		4862088						
ANR	4862163	Function	xcf_channel_size	1160:0:35618:35883							
ANR	4862164	FunctionDef	"xcf_channel_size (xcf_write_ctx * xc , int name_size)"		4862163	0					
ANR	4862165	CompoundStatement		1162:0:35680:35883	4862163	0					
ANR	4862166	ReturnStatement	return 17 + name_size + 8 + 4 + xc -> n_levels * 16 + 12 + xc -> n_tiles * 4 ;	1163:4:35686:35860	4862163	0	True				
ANR	4862167	AdditiveExpression	17 + name_size + 8 + 4 + xc -> n_levels * 16 + 12 + xc -> n_tiles * 4		4862163	0		+			
ANR	4862168	PrimaryExpression	17		4862163	0					
ANR	4862169	AdditiveExpression	name_size + 8 + 4 + xc -> n_levels * 16 + 12 + xc -> n_tiles * 4		4862163	1		+			
ANR	4862170	Identifier	name_size		4862163	0					
ANR	4862171	AdditiveExpression	8 + 4 + xc -> n_levels * 16 + 12 + xc -> n_tiles * 4		4862163	1		+			
ANR	4862172	PrimaryExpression	8		4862163	0					
ANR	4862173	AdditiveExpression	4 + xc -> n_levels * 16 + 12 + xc -> n_tiles * 4		4862163	1		+			
ANR	4862174	PrimaryExpression	4		4862163	0					
ANR	4862175	AdditiveExpression	xc -> n_levels * 16 + 12 + xc -> n_tiles * 4		4862163	1		+			
ANR	4862176	MultiplicativeExpression	xc -> n_levels * 16		4862163	0		*			
ANR	4862177	PtrMemberAccess	xc -> n_levels		4862163	0					
ANR	4862178	Identifier	xc		4862163	0					
ANR	4862179	Identifier	n_levels		4862163	1					
ANR	4862180	PrimaryExpression	16		4862163	1					
ANR	4862181	AdditiveExpression	12 + xc -> n_tiles * 4		4862163	1		+			
ANR	4862182	PrimaryExpression	12		4862163	0					
ANR	4862183	MultiplicativeExpression	xc -> n_tiles * 4		4862163	1		*			
ANR	4862184	PtrMemberAccess	xc -> n_tiles		4862163	0					
ANR	4862185	Identifier	xc		4862163	0					
ANR	4862186	Identifier	n_tiles		4862163	1					
ANR	4862187	PrimaryExpression	4		4862163	1					
ANR	4862188	ReturnType	static int		4862163	1					
ANR	4862189	Identifier	xcf_channel_size		4862163	2					
ANR	4862190	ParameterList	"xcf_write_ctx * xc , int name_size"		4862163	3					
ANR	4862191	Parameter	xcf_write_ctx * xc	1161:17:35646:35662	4862163	0	True				
ANR	4862192	ParameterType	xcf_write_ctx *		4862163	0					
ANR	4862193	Identifier	xc		4862163	1					
ANR	4862194	Parameter	int name_size	1161:36:35665:35677	4862163	1	True				
ANR	4862195	ParameterType	int		4862163	0					
ANR	4862196	Identifier	name_size		4862163	1					
ANR	4862197	CFGEntryNode	ENTRY		4862163		True				
ANR	4862198	CFGExitNode	EXIT		4862163		True				
ANR	4862199	Symbol	* xc		4862163						
ANR	4862200	Symbol	xc -> n_tiles		4862163						
ANR	4862201	Symbol	xc		4862163						
ANR	4862202	Symbol	xc -> n_levels		4862163						
ANR	4862203	Symbol	name_size		4862163						
ANR	4862204	Function	xcf_write_header	1169:0:35886:38205							
ANR	4862205	FunctionDef	"xcf_write_header (xcf_write_ctx * xc , xcf_device * pdev)"		4862204	0					
ANR	4862206	CompoundStatement		1171:0:35951:38205	4862204	0					
ANR	4862207	IdentifierDeclStatement	int code = 0 ;	1172:4:35957:35969	4862204	0	True				
ANR	4862208	IdentifierDecl	code = 0		4862204	0					
ANR	4862209	IdentifierDeclType	int		4862204	0					
ANR	4862210	Identifier	code		4862204	1					
ANR	4862211	AssignmentExpression	code = 0		4862204	2		=			
ANR	4862212	Identifier	code		4862204	0					
ANR	4862213	PrimaryExpression	0		4862204	1					
ANR	4862214	IdentifierDeclStatement	"const char * layer_name = ""Background"" ;"	1173:4:35975:36012	4862204	1	True				
ANR	4862215	IdentifierDecl	"* layer_name = ""Background"""		4862204	0					
ANR	4862216	IdentifierDeclType	const char *		4862204	0					
ANR	4862217	Identifier	layer_name		4862204	1					
ANR	4862218	AssignmentExpression	"* layer_name = ""Background"""		4862204	2		=			
ANR	4862219	Identifier	layer_name		4862204	0					
ANR	4862220	PrimaryExpression	"""Background"""		4862204	1					
ANR	4862221	IdentifierDeclStatement	int level ;	1174:4:36018:36027	4862204	2	True				
ANR	4862222	IdentifierDecl	level		4862204	0					
ANR	4862223	IdentifierDeclType	int		4862204	0					
ANR	4862224	Identifier	level		4862204	1					
ANR	4862225	IdentifierDeclStatement	int tile_offset ;	1175:4:36033:36048	4862204	3	True				
ANR	4862226	IdentifierDecl	tile_offset		4862204	0					
ANR	4862227	IdentifierDeclType	int		4862204	0					
ANR	4862228	Identifier	tile_offset		4862204	1					
ANR	4862229	IdentifierDeclStatement	int tile_idx ;	1176:4:36054:36066	4862204	4	True				
ANR	4862230	IdentifierDecl	tile_idx		4862204	0					
ANR	4862231	IdentifierDeclType	int		4862204	0					
ANR	4862232	Identifier	tile_idx		4862204	1					
ANR	4862233	IdentifierDeclStatement	int n_extra_channels = xc -> n_extra_channels ;	1177:4:36072:36115	4862204	5	True				
ANR	4862234	IdentifierDecl	n_extra_channels = xc -> n_extra_channels		4862204	0					
ANR	4862235	IdentifierDeclType	int		4862204	0					
ANR	4862236	Identifier	n_extra_channels		4862204	1					
ANR	4862237	AssignmentExpression	n_extra_channels = xc -> n_extra_channels		4862204	2		=			
ANR	4862238	Identifier	n_extra_channels		4862204	0					
ANR	4862239	PtrMemberAccess	xc -> n_extra_channels		4862204	1					
ANR	4862240	Identifier	xc		4862204	0					
ANR	4862241	Identifier	n_extra_channels		4862204	1					
ANR	4862242	IdentifierDeclStatement	int bytes_pp = xc -> base_bytes_pp + n_extra_channels ;	1178:4:36121:36172	4862204	6	True				
ANR	4862243	IdentifierDecl	bytes_pp = xc -> base_bytes_pp + n_extra_channels		4862204	0					
ANR	4862244	IdentifierDeclType	int		4862204	0					
ANR	4862245	Identifier	bytes_pp		4862204	1					
ANR	4862246	AssignmentExpression	bytes_pp = xc -> base_bytes_pp + n_extra_channels		4862204	2		=			
ANR	4862247	Identifier	bytes_pp		4862204	0					
ANR	4862248	AdditiveExpression	xc -> base_bytes_pp + n_extra_channels		4862204	1		+			
ANR	4862249	PtrMemberAccess	xc -> base_bytes_pp		4862204	0					
ANR	4862250	Identifier	xc		4862204	0					
ANR	4862251	Identifier	base_bytes_pp		4862204	1					
ANR	4862252	Identifier	n_extra_channels		4862204	1					
ANR	4862253	IdentifierDeclStatement	int channel_idx ;	1179:4:36178:36193	4862204	7	True				
ANR	4862254	IdentifierDecl	channel_idx		4862204	0					
ANR	4862255	IdentifierDeclType	int		4862204	0					
ANR	4862256	Identifier	channel_idx		4862204	1					
ANR	4862257	ExpressionStatement	"xcf_write ( xc , ( const byte * ) ""gimp xcf file"" , 14 )"	1181:4:36200:36248	4862204	8	True				
ANR	4862258	CallExpression	"xcf_write ( xc , ( const byte * ) ""gimp xcf file"" , 14 )"		4862204	0					
ANR	4862259	Callee	xcf_write		4862204	0					
ANR	4862260	Identifier	xcf_write		4862204	0					
ANR	4862261	ArgumentList	xc		4862204	1					
ANR	4862262	Argument	xc		4862204	0					
ANR	4862263	Identifier	xc		4862204	0					
ANR	4862264	Argument	"( const byte * ) ""gimp xcf file"""		4862204	1					
ANR	4862265	CastExpression	"( const byte * ) ""gimp xcf file"""		4862204	0					
ANR	4862266	CastTarget	const byte *		4862204	0					
ANR	4862267	PrimaryExpression	"""gimp xcf file"""		4862204	1					
ANR	4862268	Argument	14		4862204	2					
ANR	4862269	PrimaryExpression	14		4862204	0					
ANR	4862270	ExpressionStatement	"xcf_write_32 ( xc , xc -> width )"	1182:4:36254:36281	4862204	9	True				
ANR	4862271	CallExpression	"xcf_write_32 ( xc , xc -> width )"		4862204	0					
ANR	4862272	Callee	xcf_write_32		4862204	0					
ANR	4862273	Identifier	xcf_write_32		4862204	0					
ANR	4862274	ArgumentList	xc		4862204	1					
ANR	4862275	Argument	xc		4862204	0					
ANR	4862276	Identifier	xc		4862204	0					
ANR	4862277	Argument	xc -> width		4862204	1					
ANR	4862278	PtrMemberAccess	xc -> width		4862204	0					
ANR	4862279	Identifier	xc		4862204	0					
ANR	4862280	Identifier	width		4862204	1					
ANR	4862281	ExpressionStatement	"xcf_write_32 ( xc , xc -> height )"	1183:4:36287:36315	4862204	10	True				
ANR	4862282	CallExpression	"xcf_write_32 ( xc , xc -> height )"		4862204	0					
ANR	4862283	Callee	xcf_write_32		4862204	0					
ANR	4862284	Identifier	xcf_write_32		4862204	0					
ANR	4862285	ArgumentList	xc		4862204	1					
ANR	4862286	Argument	xc		4862204	0					
ANR	4862287	Identifier	xc		4862204	0					
ANR	4862288	Argument	xc -> height		4862204	1					
ANR	4862289	PtrMemberAccess	xc -> height		4862204	0					
ANR	4862290	Identifier	xc		4862204	0					
ANR	4862291	Identifier	height		4862204	1					
ANR	4862292	ExpressionStatement	"xcf_write_32 ( xc , 0 )"	1184:4:36321:36340	4862204	11	True				
ANR	4862293	CallExpression	"xcf_write_32 ( xc , 0 )"		4862204	0					
ANR	4862294	Callee	xcf_write_32		4862204	0					
ANR	4862295	Identifier	xcf_write_32		4862204	0					
ANR	4862296	ArgumentList	xc		4862204	1					
ANR	4862297	Argument	xc		4862204	0					
ANR	4862298	Identifier	xc		4862204	0					
ANR	4862299	Argument	0		4862204	1					
ANR	4862300	PrimaryExpression	0		4862204	0					
ANR	4862301	ExpressionStatement	xcf_write_image_props ( xc )	1186:4:36347:36372	4862204	12	True				
ANR	4862302	CallExpression	xcf_write_image_props ( xc )		4862204	0					
ANR	4862303	Callee	xcf_write_image_props		4862204	0					
ANR	4862304	Identifier	xcf_write_image_props		4862204	0					
ANR	4862305	ArgumentList	xc		4862204	1					
ANR	4862306	Argument	xc		4862204	0					
ANR	4862307	Identifier	xc		4862204	0					
ANR	4862308	ExpressionStatement	"xcf_write_32 ( xc , xc -> offset + 12 + 4 * n_extra_channels )"	1189:4:36403:36459	4862204	13	True				
ANR	4862309	CallExpression	"xcf_write_32 ( xc , xc -> offset + 12 + 4 * n_extra_channels )"		4862204	0					
ANR	4862310	Callee	xcf_write_32		4862204	0					
ANR	4862311	Identifier	xcf_write_32		4862204	0					
ANR	4862312	ArgumentList	xc		4862204	1					
ANR	4862313	Argument	xc		4862204	0					
ANR	4862314	Identifier	xc		4862204	0					
ANR	4862315	Argument	xc -> offset + 12 + 4 * n_extra_channels		4862204	1					
ANR	4862316	AdditiveExpression	xc -> offset + 12 + 4 * n_extra_channels		4862204	0		+			
ANR	4862317	PtrMemberAccess	xc -> offset		4862204	0					
ANR	4862318	Identifier	xc		4862204	0					
ANR	4862319	Identifier	offset		4862204	1					
ANR	4862320	AdditiveExpression	12 + 4 * n_extra_channels		4862204	1		+			
ANR	4862321	PrimaryExpression	12		4862204	0					
ANR	4862322	MultiplicativeExpression	4 * n_extra_channels		4862204	1		*			
ANR	4862323	PrimaryExpression	4		4862204	0					
ANR	4862324	Identifier	n_extra_channels		4862204	1					
ANR	4862325	ExpressionStatement	"xcf_write_32 ( xc , 0 )"	1190:4:36465:36484	4862204	14	True				
ANR	4862326	CallExpression	"xcf_write_32 ( xc , 0 )"		4862204	0					
ANR	4862327	Callee	xcf_write_32		4862204	0					
ANR	4862328	Identifier	xcf_write_32		4862204	0					
ANR	4862329	ArgumentList	xc		4862204	1					
ANR	4862330	Argument	xc		4862204	0					
ANR	4862331	Identifier	xc		4862204	0					
ANR	4862332	Argument	0		4862204	1					
ANR	4862333	PrimaryExpression	0		4862204	0					
ANR	4862334	ExpressionStatement	"tile_offset = xc -> offset + 4 + 4 * n_extra_channels + xcf_base_size ( xc , layer_name )"	1193:4:36517:36608	4862204	15	True				
ANR	4862335	AssignmentExpression	"tile_offset = xc -> offset + 4 + 4 * n_extra_channels + xcf_base_size ( xc , layer_name )"		4862204	0		=			
ANR	4862336	Identifier	tile_offset		4862204	0					
ANR	4862337	AdditiveExpression	"xc -> offset + 4 + 4 * n_extra_channels + xcf_base_size ( xc , layer_name )"		4862204	1		+			
ANR	4862338	PtrMemberAccess	xc -> offset		4862204	0					
ANR	4862339	Identifier	xc		4862204	0					
ANR	4862340	Identifier	offset		4862204	1					
ANR	4862341	AdditiveExpression	"4 + 4 * n_extra_channels + xcf_base_size ( xc , layer_name )"		4862204	1		+			
ANR	4862342	PrimaryExpression	4		4862204	0					
ANR	4862343	AdditiveExpression	"4 * n_extra_channels + xcf_base_size ( xc , layer_name )"		4862204	1		+			
ANR	4862344	MultiplicativeExpression	4 * n_extra_channels		4862204	0		*			
ANR	4862345	PrimaryExpression	4		4862204	0					
ANR	4862346	Identifier	n_extra_channels		4862204	1					
ANR	4862347	CallExpression	"xcf_base_size ( xc , layer_name )"		4862204	1					
ANR	4862348	Callee	xcf_base_size		4862204	0					
ANR	4862349	Identifier	xcf_base_size		4862204	0					
ANR	4862350	ArgumentList	xc		4862204	1					
ANR	4862351	Argument	xc		4862204	0					
ANR	4862352	Identifier	xc		4862204	0					
ANR	4862353	Argument	layer_name		4862204	1					
ANR	4862354	Identifier	layer_name		4862204	0					
ANR	4862355	ForStatement	for ( channel_idx = 0 ; channel_idx < n_extra_channels ; channel_idx ++ )		4862204	16					
ANR	4862356	ForInit	channel_idx = 0 ;	1195:9:36619:36634	4862204	0	True				
ANR	4862357	AssignmentExpression	channel_idx = 0		4862204	0		=			
ANR	4862358	Identifier	channel_idx		4862204	0					
ANR	4862359	PrimaryExpression	0		4862204	1					
ANR	4862360	Condition	channel_idx < n_extra_channels	1195:26:36636:36665	4862204	1	True				
ANR	4862361	RelationalExpression	channel_idx < n_extra_channels		4862204	0		<			
ANR	4862362	Identifier	channel_idx		4862204	0					
ANR	4862363	Identifier	n_extra_channels		4862204	1					
ANR	4862364	PostIncDecOperationExpression	channel_idx ++	1195:58:36668:36680	4862204	2	True				
ANR	4862365	Identifier	channel_idx		4862204	0					
ANR	4862366	IncDec	++		4862204	1					
ANR	4862367	CompoundStatement		26:8:741:835	4862204	3					
ANR	4862368	IdentifierDeclStatement	const gs_param_string * separation_name = pdev -> separation_names . names [ channel_idx ] ;	1196:8:36693:36787	4862204	0	True				
ANR	4862369	IdentifierDecl	* separation_name = pdev -> separation_names . names [ channel_idx ]		4862204	0					
ANR	4862370	IdentifierDeclType	const gs_param_string *		4862204	0					
ANR	4862371	Identifier	separation_name		4862204	1					
ANR	4862372	AssignmentExpression	* separation_name = pdev -> separation_names . names [ channel_idx ]		4862204	2		=			
ANR	4862373	Identifier	separation_name		4862204	0					
ANR	4862374	ArrayIndexing	pdev -> separation_names . names [ channel_idx ]		4862204	1					
ANR	4862375	MemberAccess	pdev -> separation_names . names		4862204	0					
ANR	4862376	PtrMemberAccess	pdev -> separation_names		4862204	0					
ANR	4862377	Identifier	pdev		4862204	0					
ANR	4862378	Identifier	separation_names		4862204	1					
ANR	4862379	Identifier	names		4862204	1					
ANR	4862380	Identifier	channel_idx		4862204	1					
ANR	4862381	ExpressionStatement	"dmlprintf1 ( pdev -> memory , ""tile offset: %d\\n"" , tile_offset )"	1198:8:36797:36855	4862204	1	True				
ANR	4862382	CallExpression	"dmlprintf1 ( pdev -> memory , ""tile offset: %d\\n"" , tile_offset )"		4862204	0					
ANR	4862383	Callee	dmlprintf1		4862204	0					
ANR	4862384	Identifier	dmlprintf1		4862204	0					
ANR	4862385	ArgumentList	pdev -> memory		4862204	1					
ANR	4862386	Argument	pdev -> memory		4862204	0					
ANR	4862387	PtrMemberAccess	pdev -> memory		4862204	0					
ANR	4862388	Identifier	pdev		4862204	0					
ANR	4862389	Identifier	memory		4862204	1					
ANR	4862390	Argument	"""tile offset: %d\\n"""		4862204	1					
ANR	4862391	PrimaryExpression	"""tile offset: %d\\n"""		4862204	0					
ANR	4862392	Argument	tile_offset		4862204	2					
ANR	4862393	Identifier	tile_offset		4862204	0					
ANR	4862394	ExpressionStatement	"xcf_write_32 ( xc , tile_offset )"	1199:8:36865:36894	4862204	2	True				
ANR	4862395	CallExpression	"xcf_write_32 ( xc , tile_offset )"		4862204	0					
ANR	4862396	Callee	xcf_write_32		4862204	0					
ANR	4862397	Identifier	xcf_write_32		4862204	0					
ANR	4862398	ArgumentList	xc		4862204	1					
ANR	4862399	Argument	xc		4862204	0					
ANR	4862400	Identifier	xc		4862204	0					
ANR	4862401	Argument	tile_offset		4862204	1					
ANR	4862402	Identifier	tile_offset		4862204	0					
ANR	4862403	ExpressionStatement	"tile_offset += xcf_channel_size ( xc , separation_name -> size )"	1200:8:36904:36962	4862204	3	True				
ANR	4862404	AssignmentExpression	"tile_offset += xcf_channel_size ( xc , separation_name -> size )"		4862204	0		+=			
ANR	4862405	Identifier	tile_offset		4862204	0					
ANR	4862406	CallExpression	"xcf_channel_size ( xc , separation_name -> size )"		4862204	1					
ANR	4862407	Callee	xcf_channel_size		4862204	0					
ANR	4862408	Identifier	xcf_channel_size		4862204	0					
ANR	4862409	ArgumentList	xc		4862204	1					
ANR	4862410	Argument	xc		4862204	0					
ANR	4862411	Identifier	xc		4862204	0					
ANR	4862412	Argument	separation_name -> size		4862204	1					
ANR	4862413	PtrMemberAccess	separation_name -> size		4862204	0					
ANR	4862414	Identifier	separation_name		4862204	0					
ANR	4862415	Identifier	size		4862204	1					
ANR	4862416	ExpressionStatement	"xcf_write_32 ( xc , 0 )"	1202:4:36974:36993	4862204	17	True				
ANR	4862417	CallExpression	"xcf_write_32 ( xc , 0 )"		4862204	0					
ANR	4862418	Callee	xcf_write_32		4862204	0					
ANR	4862419	Identifier	xcf_write_32		4862204	0					
ANR	4862420	ArgumentList	xc		4862204	1					
ANR	4862421	Argument	xc		4862204	0					
ANR	4862422	Identifier	xc		4862204	0					
ANR	4862423	Argument	0		4862204	1					
ANR	4862424	PrimaryExpression	0		4862204	0					
ANR	4862425	ExpressionStatement	"xcf_write_32 ( xc , xc -> width )"	1205:4:37016:37043	4862204	18	True				
ANR	4862426	CallExpression	"xcf_write_32 ( xc , xc -> width )"		4862204	0					
ANR	4862427	Callee	xcf_write_32		4862204	0					
ANR	4862428	Identifier	xcf_write_32		4862204	0					
ANR	4862429	ArgumentList	xc		4862204	1					
ANR	4862430	Argument	xc		4862204	0					
ANR	4862431	Identifier	xc		4862204	0					
ANR	4862432	Argument	xc -> width		4862204	1					
ANR	4862433	PtrMemberAccess	xc -> width		4862204	0					
ANR	4862434	Identifier	xc		4862204	0					
ANR	4862435	Identifier	width		4862204	1					
ANR	4862436	ExpressionStatement	"xcf_write_32 ( xc , xc -> height )"	1206:4:37049:37077	4862204	19	True				
ANR	4862437	CallExpression	"xcf_write_32 ( xc , xc -> height )"		4862204	0					
ANR	4862438	Callee	xcf_write_32		4862204	0					
ANR	4862439	Identifier	xcf_write_32		4862204	0					
ANR	4862440	ArgumentList	xc		4862204	1					
ANR	4862441	Argument	xc		4862204	0					
ANR	4862442	Identifier	xc		4862204	0					
ANR	4862443	Argument	xc -> height		4862204	1					
ANR	4862444	PtrMemberAccess	xc -> height		4862204	0					
ANR	4862445	Identifier	xc		4862204	0					
ANR	4862446	Identifier	height		4862204	1					
ANR	4862447	ExpressionStatement	"xcf_write_32 ( xc , 0 )"	1207:4:37083:37102	4862204	20	True				
ANR	4862448	CallExpression	"xcf_write_32 ( xc , 0 )"		4862204	0					
ANR	4862449	Callee	xcf_write_32		4862204	0					
ANR	4862450	Identifier	xcf_write_32		4862204	0					
ANR	4862451	ArgumentList	xc		4862204	1					
ANR	4862452	Argument	xc		4862204	0					
ANR	4862453	Identifier	xc		4862204	0					
ANR	4862454	Argument	0		4862204	1					
ANR	4862455	PrimaryExpression	0		4862204	0					
ANR	4862456	ExpressionStatement	"xcf_write_32 ( xc , strlen ( layer_name ) + 1 )"	1208:4:37108:37148	4862204	21	True				
ANR	4862457	CallExpression	"xcf_write_32 ( xc , strlen ( layer_name ) + 1 )"		4862204	0					
ANR	4862458	Callee	xcf_write_32		4862204	0					
ANR	4862459	Identifier	xcf_write_32		4862204	0					
ANR	4862460	ArgumentList	xc		4862204	1					
ANR	4862461	Argument	xc		4862204	0					
ANR	4862462	Identifier	xc		4862204	0					
ANR	4862463	Argument	strlen ( layer_name ) + 1		4862204	1					
ANR	4862464	AdditiveExpression	strlen ( layer_name ) + 1		4862204	0		+			
ANR	4862465	CallExpression	strlen ( layer_name )		4862204	0					
ANR	4862466	Callee	strlen		4862204	0					
ANR	4862467	Identifier	strlen		4862204	0					
ANR	4862468	ArgumentList	layer_name		4862204	1					
ANR	4862469	Argument	layer_name		4862204	0					
ANR	4862470	Identifier	layer_name		4862204	0					
ANR	4862471	PrimaryExpression	1		4862204	1					
ANR	4862472	ExpressionStatement	"xcf_write ( xc , ( const byte * ) layer_name , strlen ( layer_name ) + 1 )"	1209:4:37154:37217	4862204	22	True				
ANR	4862473	CallExpression	"xcf_write ( xc , ( const byte * ) layer_name , strlen ( layer_name ) + 1 )"		4862204	0					
ANR	4862474	Callee	xcf_write		4862204	0					
ANR	4862475	Identifier	xcf_write		4862204	0					
ANR	4862476	ArgumentList	xc		4862204	1					
ANR	4862477	Argument	xc		4862204	0					
ANR	4862478	Identifier	xc		4862204	0					
ANR	4862479	Argument	( const byte * ) layer_name		4862204	1					
ANR	4862480	CastExpression	( const byte * ) layer_name		4862204	0					
ANR	4862481	CastTarget	const byte *		4862204	0					
ANR	4862482	Identifier	layer_name		4862204	1					
ANR	4862483	Argument	strlen ( layer_name ) + 1		4862204	2					
ANR	4862484	AdditiveExpression	strlen ( layer_name ) + 1		4862204	0		+			
ANR	4862485	CallExpression	strlen ( layer_name )		4862204	0					
ANR	4862486	Callee	strlen		4862204	0					
ANR	4862487	Identifier	strlen		4862204	0					
ANR	4862488	ArgumentList	layer_name		4862204	1					
ANR	4862489	Argument	layer_name		4862204	0					
ANR	4862490	Identifier	layer_name		4862204	0					
ANR	4862491	PrimaryExpression	1		4862204	1					
ANR	4862492	ExpressionStatement	"xcf_write_32 ( xc , 0 )"	1212:4:37246:37265	4862204	23	True				
ANR	4862493	CallExpression	"xcf_write_32 ( xc , 0 )"		4862204	0					
ANR	4862494	Callee	xcf_write_32		4862204	0					
ANR	4862495	Identifier	xcf_write_32		4862204	0					
ANR	4862496	ArgumentList	xc		4862204	1					
ANR	4862497	Argument	xc		4862204	0					
ANR	4862498	Identifier	xc		4862204	0					
ANR	4862499	Argument	0		4862204	1					
ANR	4862500	PrimaryExpression	0		4862204	0					
ANR	4862501	ExpressionStatement	"xcf_write_32 ( xc , 0 )"	1213:4:37271:37290	4862204	24	True				
ANR	4862502	CallExpression	"xcf_write_32 ( xc , 0 )"		4862204	0					
ANR	4862503	Callee	xcf_write_32		4862204	0					
ANR	4862504	Identifier	xcf_write_32		4862204	0					
ANR	4862505	ArgumentList	xc		4862204	1					
ANR	4862506	Argument	xc		4862204	0					
ANR	4862507	Identifier	xc		4862204	0					
ANR	4862508	Argument	0		4862204	1					
ANR	4862509	PrimaryExpression	0		4862204	0					
ANR	4862510	ExpressionStatement	"xcf_write_32 ( xc , xc -> offset + 8 )"	1216:4:37328:37360	4862204	25	True				
ANR	4862511	CallExpression	"xcf_write_32 ( xc , xc -> offset + 8 )"		4862204	0					
ANR	4862512	Callee	xcf_write_32		4862204	0					
ANR	4862513	Identifier	xcf_write_32		4862204	0					
ANR	4862514	ArgumentList	xc		4862204	1					
ANR	4862515	Argument	xc		4862204	0					
ANR	4862516	Identifier	xc		4862204	0					
ANR	4862517	Argument	xc -> offset + 8		4862204	1					
ANR	4862518	AdditiveExpression	xc -> offset + 8		4862204	0		+			
ANR	4862519	PtrMemberAccess	xc -> offset		4862204	0					
ANR	4862520	Identifier	xc		4862204	0					
ANR	4862521	Identifier	offset		4862204	1					
ANR	4862522	PrimaryExpression	8		4862204	1					
ANR	4862523	ExpressionStatement	"xcf_write_32 ( xc , 0 )"	1217:4:37366:37385	4862204	26	True				
ANR	4862524	CallExpression	"xcf_write_32 ( xc , 0 )"		4862204	0					
ANR	4862525	Callee	xcf_write_32		4862204	0					
ANR	4862526	Identifier	xcf_write_32		4862204	0					
ANR	4862527	ArgumentList	xc		4862204	1					
ANR	4862528	Argument	xc		4862204	0					
ANR	4862529	Identifier	xc		4862204	0					
ANR	4862530	Argument	0		4862204	1					
ANR	4862531	PrimaryExpression	0		4862204	0					
ANR	4862532	ExpressionStatement	"xcf_write_32 ( xc , xc -> width )"	1219:4:37392:37419	4862204	27	True				
ANR	4862533	CallExpression	"xcf_write_32 ( xc , xc -> width )"		4862204	0					
ANR	4862534	Callee	xcf_write_32		4862204	0					
ANR	4862535	Identifier	xcf_write_32		4862204	0					
ANR	4862536	ArgumentList	xc		4862204	1					
ANR	4862537	Argument	xc		4862204	0					
ANR	4862538	Identifier	xc		4862204	0					
ANR	4862539	Argument	xc -> width		4862204	1					
ANR	4862540	PtrMemberAccess	xc -> width		4862204	0					
ANR	4862541	Identifier	xc		4862204	0					
ANR	4862542	Identifier	width		4862204	1					
ANR	4862543	ExpressionStatement	"xcf_write_32 ( xc , xc -> height )"	1220:4:37425:37453	4862204	28	True				
ANR	4862544	CallExpression	"xcf_write_32 ( xc , xc -> height )"		4862204	0					
ANR	4862545	Callee	xcf_write_32		4862204	0					
ANR	4862546	Identifier	xcf_write_32		4862204	0					
ANR	4862547	ArgumentList	xc		4862204	1					
ANR	4862548	Argument	xc		4862204	0					
ANR	4862549	Identifier	xc		4862204	0					
ANR	4862550	Argument	xc -> height		4862204	1					
ANR	4862551	PtrMemberAccess	xc -> height		4862204	0					
ANR	4862552	Identifier	xc		4862204	0					
ANR	4862553	Identifier	height		4862204	1					
ANR	4862554	ExpressionStatement	"xcf_write_32 ( xc , xc -> base_bytes_pp )"	1221:4:37459:37494	4862204	29	True				
ANR	4862555	CallExpression	"xcf_write_32 ( xc , xc -> base_bytes_pp )"		4862204	0					
ANR	4862556	Callee	xcf_write_32		4862204	0					
ANR	4862557	Identifier	xcf_write_32		4862204	0					
ANR	4862558	ArgumentList	xc		4862204	1					
ANR	4862559	Argument	xc		4862204	0					
ANR	4862560	Identifier	xc		4862204	0					
ANR	4862561	Argument	xc -> base_bytes_pp		4862204	1					
ANR	4862562	PtrMemberAccess	xc -> base_bytes_pp		4862204	0					
ANR	4862563	Identifier	xc		4862204	0					
ANR	4862564	Identifier	base_bytes_pp		4862204	1					
ANR	4862565	ExpressionStatement	"xcf_write_32 ( xc , xc -> offset + ( 1 + xc -> n_levels ) * 4 )"	1222:4:37500:37553	4862204	30	True				
ANR	4862566	CallExpression	"xcf_write_32 ( xc , xc -> offset + ( 1 + xc -> n_levels ) * 4 )"		4862204	0					
ANR	4862567	Callee	xcf_write_32		4862204	0					
ANR	4862568	Identifier	xcf_write_32		4862204	0					
ANR	4862569	ArgumentList	xc		4862204	1					
ANR	4862570	Argument	xc		4862204	0					
ANR	4862571	Identifier	xc		4862204	0					
ANR	4862572	Argument	xc -> offset + ( 1 + xc -> n_levels ) * 4		4862204	1					
ANR	4862573	AdditiveExpression	xc -> offset + ( 1 + xc -> n_levels ) * 4		4862204	0		+			
ANR	4862574	PtrMemberAccess	xc -> offset		4862204	0					
ANR	4862575	Identifier	xc		4862204	0					
ANR	4862576	Identifier	offset		4862204	1					
ANR	4862577	MultiplicativeExpression	( 1 + xc -> n_levels ) * 4		4862204	1		*			
ANR	4862578	AdditiveExpression	1 + xc -> n_levels		4862204	0		+			
ANR	4862579	PrimaryExpression	1		4862204	0					
ANR	4862580	PtrMemberAccess	xc -> n_levels		4862204	1					
ANR	4862581	Identifier	xc		4862204	0					
ANR	4862582	Identifier	n_levels		4862204	1					
ANR	4862583	PrimaryExpression	4		4862204	1					
ANR	4862584	ExpressionStatement	tile_offset = xc -> offset + xc -> width * xc -> height * bytes_pp + xc -> n_tiles * 4 + 12	1223:4:37559:37650	4862204	31	True				
ANR	4862585	AssignmentExpression	tile_offset = xc -> offset + xc -> width * xc -> height * bytes_pp + xc -> n_tiles * 4 + 12		4862204	0		=			
ANR	4862586	Identifier	tile_offset		4862204	0					
ANR	4862587	AdditiveExpression	xc -> offset + xc -> width * xc -> height * bytes_pp + xc -> n_tiles * 4 + 12		4862204	1		+			
ANR	4862588	PtrMemberAccess	xc -> offset		4862204	0					
ANR	4862589	Identifier	xc		4862204	0					
ANR	4862590	Identifier	offset		4862204	1					
ANR	4862591	AdditiveExpression	xc -> width * xc -> height * bytes_pp + xc -> n_tiles * 4 + 12		4862204	1		+			
ANR	4862592	MultiplicativeExpression	xc -> width * xc -> height * bytes_pp		4862204	0		*			
ANR	4862593	PtrMemberAccess	xc -> width		4862204	0					
ANR	4862594	Identifier	xc		4862204	0					
ANR	4862595	Identifier	width		4862204	1					
ANR	4862596	MultiplicativeExpression	xc -> height * bytes_pp		4862204	1		*			
ANR	4862597	PtrMemberAccess	xc -> height		4862204	0					
ANR	4862598	Identifier	xc		4862204	0					
ANR	4862599	Identifier	height		4862204	1					
ANR	4862600	Identifier	bytes_pp		4862204	1					
ANR	4862601	AdditiveExpression	xc -> n_tiles * 4 + 12		4862204	1		+			
ANR	4862602	MultiplicativeExpression	xc -> n_tiles * 4		4862204	0		*			
ANR	4862603	PtrMemberAccess	xc -> n_tiles		4862204	0					
ANR	4862604	Identifier	xc		4862204	0					
ANR	4862605	Identifier	n_tiles		4862204	1					
ANR	4862606	PrimaryExpression	4		4862204	1					
ANR	4862607	PrimaryExpression	12		4862204	1					
ANR	4862608	ForStatement	for ( level = 1 ; level < xc -> n_levels ; level ++ )		4862204	32					
ANR	4862609	ForInit	level = 1 ;	1225:9:37661:37670	4862204	0	True				
ANR	4862610	AssignmentExpression	level = 1		4862204	0		=			
ANR	4862611	Identifier	level		4862204	0					
ANR	4862612	PrimaryExpression	1		4862204	1					
ANR	4862613	Condition	level < xc -> n_levels	1225:20:37672:37691	4862204	1	True				
ANR	4862614	RelationalExpression	level < xc -> n_levels		4862204	0		<			
ANR	4862615	Identifier	level		4862204	0					
ANR	4862616	PtrMemberAccess	xc -> n_levels		4862204	1					
ANR	4862617	Identifier	xc		4862204	0					
ANR	4862618	Identifier	n_levels		4862204	1					
ANR	4862619	PostIncDecOperationExpression	level ++	1225:42:37694:37700	4862204	2	True				
ANR	4862620	Identifier	level		4862204	0					
ANR	4862621	IncDec	++		4862204	1					
ANR	4862622	CompoundStatement		55:51:1751:1751	4862204	3					
ANR	4862623	ExpressionStatement	"xcf_write_32 ( xc , tile_offset )"	1226:8:37713:37742	4862204	0	True				
ANR	4862624	CallExpression	"xcf_write_32 ( xc , tile_offset )"		4862204	0					
ANR	4862625	Callee	xcf_write_32		4862204	0					
ANR	4862626	Identifier	xcf_write_32		4862204	0					
ANR	4862627	ArgumentList	xc		4862204	1					
ANR	4862628	Argument	xc		4862204	0					
ANR	4862629	Identifier	xc		4862204	0					
ANR	4862630	Argument	tile_offset		4862204	1					
ANR	4862631	Identifier	tile_offset		4862204	0					
ANR	4862632	ExpressionStatement	tile_offset += 12	1227:8:37752:37769	4862204	1	True				
ANR	4862633	AssignmentExpression	tile_offset += 12		4862204	0		+=			
ANR	4862634	Identifier	tile_offset		4862204	0					
ANR	4862635	PrimaryExpression	12		4862204	1					
ANR	4862636	ExpressionStatement	"xcf_write_32 ( xc , 0 )"	1229:4:37781:37800	4862204	33	True				
ANR	4862637	CallExpression	"xcf_write_32 ( xc , 0 )"		4862204	0					
ANR	4862638	Callee	xcf_write_32		4862204	0					
ANR	4862639	Identifier	xcf_write_32		4862204	0					
ANR	4862640	ArgumentList	xc		4862204	1					
ANR	4862641	Argument	xc		4862204	0					
ANR	4862642	Identifier	xc		4862204	0					
ANR	4862643	Argument	0		4862204	1					
ANR	4862644	PrimaryExpression	0		4862204	0					
ANR	4862645	ExpressionStatement	"xcf_write_32 ( xc , xc -> width )"	1232:4:37836:37863	4862204	34	True				
ANR	4862646	CallExpression	"xcf_write_32 ( xc , xc -> width )"		4862204	0					
ANR	4862647	Callee	xcf_write_32		4862204	0					
ANR	4862648	Identifier	xcf_write_32		4862204	0					
ANR	4862649	ArgumentList	xc		4862204	1					
ANR	4862650	Argument	xc		4862204	0					
ANR	4862651	Identifier	xc		4862204	0					
ANR	4862652	Argument	xc -> width		4862204	1					
ANR	4862653	PtrMemberAccess	xc -> width		4862204	0					
ANR	4862654	Identifier	xc		4862204	0					
ANR	4862655	Identifier	width		4862204	1					
ANR	4862656	ExpressionStatement	"xcf_write_32 ( xc , xc -> height )"	1233:4:37869:37897	4862204	35	True				
ANR	4862657	CallExpression	"xcf_write_32 ( xc , xc -> height )"		4862204	0					
ANR	4862658	Callee	xcf_write_32		4862204	0					
ANR	4862659	Identifier	xcf_write_32		4862204	0					
ANR	4862660	ArgumentList	xc		4862204	1					
ANR	4862661	Argument	xc		4862204	0					
ANR	4862662	Identifier	xc		4862204	0					
ANR	4862663	Argument	xc -> height		4862204	1					
ANR	4862664	PtrMemberAccess	xc -> height		4862204	0					
ANR	4862665	Identifier	xc		4862204	0					
ANR	4862666	Identifier	height		4862204	1					
ANR	4862667	ExpressionStatement	tile_offset = xc -> offset + ( xc -> n_tiles + 1 ) * 4	1234:4:37903:37951	4862204	36	True				
ANR	4862668	AssignmentExpression	tile_offset = xc -> offset + ( xc -> n_tiles + 1 ) * 4		4862204	0		=			
ANR	4862669	Identifier	tile_offset		4862204	0					
ANR	4862670	AdditiveExpression	xc -> offset + ( xc -> n_tiles + 1 ) * 4		4862204	1		+			
ANR	4862671	PtrMemberAccess	xc -> offset		4862204	0					
ANR	4862672	Identifier	xc		4862204	0					
ANR	4862673	Identifier	offset		4862204	1					
ANR	4862674	MultiplicativeExpression	( xc -> n_tiles + 1 ) * 4		4862204	1		*			
ANR	4862675	AdditiveExpression	xc -> n_tiles + 1		4862204	0		+			
ANR	4862676	PtrMemberAccess	xc -> n_tiles		4862204	0					
ANR	4862677	Identifier	xc		4862204	0					
ANR	4862678	Identifier	n_tiles		4862204	1					
ANR	4862679	PrimaryExpression	1		4862204	1					
ANR	4862680	PrimaryExpression	4		4862204	1					
ANR	4862681	ForStatement	for ( tile_idx = 0 ; tile_idx < xc -> n_tiles ; tile_idx ++ )		4862204	37					
ANR	4862682	ForInit	tile_idx = 0 ;	1235:9:37962:37974	4862204	0	True				
ANR	4862683	AssignmentExpression	tile_idx = 0		4862204	0		=			
ANR	4862684	Identifier	tile_idx		4862204	0					
ANR	4862685	PrimaryExpression	0		4862204	1					
ANR	4862686	Condition	tile_idx < xc -> n_tiles	1235:23:37976:37997	4862204	1	True				
ANR	4862687	RelationalExpression	tile_idx < xc -> n_tiles		4862204	0		<			
ANR	4862688	Identifier	tile_idx		4862204	0					
ANR	4862689	PtrMemberAccess	xc -> n_tiles		4862204	1					
ANR	4862690	Identifier	xc		4862204	0					
ANR	4862691	Identifier	n_tiles		4862204	1					
ANR	4862692	PostIncDecOperationExpression	tile_idx ++	1235:47:38000:38009	4862204	2	True				
ANR	4862693	Identifier	tile_idx		4862204	0					
ANR	4862694	IncDec	++		4862204	1					
ANR	4862695	CompoundStatement		65:59:2060:2060	4862204	3					
ANR	4862696	ExpressionStatement	"xcf_write_32 ( xc , tile_offset )"	1236:8:38022:38051	4862204	0	True				
ANR	4862697	CallExpression	"xcf_write_32 ( xc , tile_offset )"		4862204	0					
ANR	4862698	Callee	xcf_write_32		4862204	0					
ANR	4862699	Identifier	xcf_write_32		4862204	0					
ANR	4862700	ArgumentList	xc		4862204	1					
ANR	4862701	Argument	xc		4862204	0					
ANR	4862702	Identifier	xc		4862204	0					
ANR	4862703	Argument	tile_offset		4862204	1					
ANR	4862704	Identifier	tile_offset		4862204	0					
ANR	4862705	ExpressionStatement	"tile_offset += xcf_tile_sizeof ( xc , tile_idx ) * bytes_pp"	1237:8:38061:38116	4862204	1	True				
ANR	4862706	AssignmentExpression	"tile_offset += xcf_tile_sizeof ( xc , tile_idx ) * bytes_pp"		4862204	0		+=			
ANR	4862707	Identifier	tile_offset		4862204	0					
ANR	4862708	MultiplicativeExpression	"xcf_tile_sizeof ( xc , tile_idx ) * bytes_pp"		4862204	1		*			
ANR	4862709	CallExpression	"xcf_tile_sizeof ( xc , tile_idx )"		4862204	0					
ANR	4862710	Callee	xcf_tile_sizeof		4862204	0					
ANR	4862711	Identifier	xcf_tile_sizeof		4862204	0					
ANR	4862712	ArgumentList	xc		4862204	1					
ANR	4862713	Argument	xc		4862204	0					
ANR	4862714	Identifier	xc		4862204	0					
ANR	4862715	Argument	tile_idx		4862204	1					
ANR	4862716	Identifier	tile_idx		4862204	0					
ANR	4862717	Identifier	bytes_pp		4862204	1					
ANR	4862718	ExpressionStatement	"xcf_write_32 ( xc , 0 )"	1239:4:38128:38147	4862204	38	True				
ANR	4862719	CallExpression	"xcf_write_32 ( xc , 0 )"		4862204	0					
ANR	4862720	Callee	xcf_write_32		4862204	0					
ANR	4862721	Identifier	xcf_write_32		4862204	0					
ANR	4862722	ArgumentList	xc		4862204	1					
ANR	4862723	Argument	xc		4862204	0					
ANR	4862724	Identifier	xc		4862204	0					
ANR	4862725	Argument	0		4862204	1					
ANR	4862726	PrimaryExpression	0		4862204	0					
ANR	4862727	ExpressionStatement	xc -> image_data_off = xc -> offset	1241:4:38154:38185	4862204	39	True				
ANR	4862728	AssignmentExpression	xc -> image_data_off = xc -> offset		4862204	0		=			
ANR	4862729	PtrMemberAccess	xc -> image_data_off		4862204	0					
ANR	4862730	Identifier	xc		4862204	0					
ANR	4862731	Identifier	image_data_off		4862204	1					
ANR	4862732	PtrMemberAccess	xc -> offset		4862204	1					
ANR	4862733	Identifier	xc		4862204	0					
ANR	4862734	Identifier	offset		4862204	1					
ANR	4862735	ReturnStatement	return code ;	1243:4:38192:38203	4862204	40	True				
ANR	4862736	Identifier	code		4862204	0					
ANR	4862737	ReturnType	static int		4862204	1					
ANR	4862738	Identifier	xcf_write_header		4862204	2					
ANR	4862739	ParameterList	"xcf_write_ctx * xc , xcf_device * pdev"		4862204	3					
ANR	4862740	Parameter	xcf_write_ctx * xc	1170:17:35914:35930	4862204	0	True				
ANR	4862741	ParameterType	xcf_write_ctx *		4862204	0					
ANR	4862742	Identifier	xc		4862204	1					
ANR	4862743	Parameter	xcf_device * pdev	1170:36:35933:35948	4862204	1	True				
ANR	4862744	ParameterType	xcf_device *		4862204	0					
ANR	4862745	Identifier	pdev		4862204	1					
ANR	4862746	CFGEntryNode	ENTRY		4862204		True				
ANR	4862747	CFGExitNode	EXIT		4862204		True				
ANR	4862748	Symbol	xcf_channel_size		4862204						
ANR	4862749	Symbol	code		4862204						
ANR	4862750	Symbol	* channel_idx		4862204						
ANR	4862751	Symbol	xcf_tile_sizeof		4862204						
ANR	4862752	Symbol	pdev -> separation_names . names		4862204						
ANR	4862753	Symbol	* * pdev		4862204						
ANR	4862754	Symbol	pdev		4862204						
ANR	4862755	Symbol	strlen		4862204						
ANR	4862756	Symbol	tile_idx		4862204						
ANR	4862757	Symbol	* pdev -> separation_names		4862204						
ANR	4862758	Symbol	pdev -> memory		4862204						
ANR	4862759	Symbol	separation_name		4862204						
ANR	4862760	Symbol	tile_offset		4862204						
ANR	4862761	Symbol	layer_name		4862204						
ANR	4862762	Symbol	channel_idx		4862204						
ANR	4862763	Symbol	xc -> offset		4862204						
ANR	4862764	Symbol	xc -> n_levels		4862204						
ANR	4862765	Symbol	* separation_name		4862204						
ANR	4862766	Symbol	xc -> n_extra_channels		4862204						
ANR	4862767	Symbol	level		4862204						
ANR	4862768	Symbol	bytes_pp		4862204						
ANR	4862769	Symbol	n_extra_channels		4862204						
ANR	4862770	Symbol	xc -> n_tiles		4862204						
ANR	4862771	Symbol	xc		4862204						
ANR	4862772	Symbol	xc -> image_data_off		4862204						
ANR	4862773	Symbol	* xc		4862204						
ANR	4862774	Symbol	xcf_base_size		4862204						
ANR	4862775	Symbol	* pdev -> separation_names . names		4862204						
ANR	4862776	Symbol	xc -> width		4862204						
ANR	4862777	Symbol	xc -> height		4862204						
ANR	4862778	Symbol	pdev -> separation_names		4862204						
ANR	4862779	Symbol	* pdev		4862204						
ANR	4862780	Symbol	separation_name -> size		4862204						
ANR	4862781	Symbol	xc -> base_bytes_pp		4862204						
ANR	4862782	Function	xcf_shuffle_to_tile	1246:0:38208:39394							
ANR	4862783	FunctionDef	"xcf_shuffle_to_tile (xcf_write_ctx * xc , byte * * tile_data , const byte * row , int y)"		4862782	0					
ANR	4862784	CompoundStatement		1249:0:38321:39394	4862782	0					
ANR	4862785	IdentifierDeclStatement	int tile_j = y / TILE_HEIGHT ;	1250:4:38327:38355	4862782	0	True				
ANR	4862786	IdentifierDecl	tile_j = y / TILE_HEIGHT		4862782	0					
ANR	4862787	IdentifierDeclType	int		4862782	0					
ANR	4862788	Identifier	tile_j		4862782	1					
ANR	4862789	AssignmentExpression	tile_j = y / TILE_HEIGHT		4862782	2		=			
ANR	4862790	Identifier	tile_j		4862782	0					
ANR	4862791	MultiplicativeExpression	y / TILE_HEIGHT		4862782	1		/			
ANR	4862792	Identifier	y		4862782	0					
ANR	4862793	Identifier	TILE_HEIGHT		4862782	1					
ANR	4862794	IdentifierDeclStatement	int yrem = y % TILE_HEIGHT ;	1251:4:38361:38387	4862782	1	True				
ANR	4862795	IdentifierDecl	yrem = y % TILE_HEIGHT		4862782	0					
ANR	4862796	IdentifierDeclType	int		4862782	0					
ANR	4862797	Identifier	yrem		4862782	1					
ANR	4862798	AssignmentExpression	yrem = y % TILE_HEIGHT		4862782	2		=			
ANR	4862799	Identifier	yrem		4862782	0					
ANR	4862800	MultiplicativeExpression	y % TILE_HEIGHT		4862782	1		%			
ANR	4862801	Identifier	y		4862782	0					
ANR	4862802	Identifier	TILE_HEIGHT		4862782	1					
ANR	4862803	IdentifierDeclStatement	int tile_i ;	1252:4:38393:38403	4862782	2	True				
ANR	4862804	IdentifierDecl	tile_i		4862782	0					
ANR	4862805	IdentifierDeclType	int		4862782	0					
ANR	4862806	Identifier	tile_i		4862782	1					
ANR	4862807	IdentifierDeclStatement	int base_bytes_pp = xc -> base_bytes_pp ;	1253:4:38409:38446	4862782	3	True				
ANR	4862808	IdentifierDecl	base_bytes_pp = xc -> base_bytes_pp		4862782	0					
ANR	4862809	IdentifierDeclType	int		4862782	0					
ANR	4862810	Identifier	base_bytes_pp		4862782	1					
ANR	4862811	AssignmentExpression	base_bytes_pp = xc -> base_bytes_pp		4862782	2		=			
ANR	4862812	Identifier	base_bytes_pp		4862782	0					
ANR	4862813	PtrMemberAccess	xc -> base_bytes_pp		4862782	1					
ANR	4862814	Identifier	xc		4862782	0					
ANR	4862815	Identifier	base_bytes_pp		4862782	1					
ANR	4862816	IdentifierDeclStatement	int n_extra_channels = xc -> n_extra_channels ;	1254:4:38452:38495	4862782	4	True				
ANR	4862817	IdentifierDecl	n_extra_channels = xc -> n_extra_channels		4862782	0					
ANR	4862818	IdentifierDeclType	int		4862782	0					
ANR	4862819	Identifier	n_extra_channels		4862782	1					
ANR	4862820	AssignmentExpression	n_extra_channels = xc -> n_extra_channels		4862782	2		=			
ANR	4862821	Identifier	n_extra_channels		4862782	0					
ANR	4862822	PtrMemberAccess	xc -> n_extra_channels		4862782	1					
ANR	4862823	Identifier	xc		4862782	0					
ANR	4862824	Identifier	n_extra_channels		4862782	1					
ANR	4862825	IdentifierDeclStatement	int row_idx = 0 ;	1255:4:38501:38516	4862782	5	True				
ANR	4862826	IdentifierDecl	row_idx = 0		4862782	0					
ANR	4862827	IdentifierDeclType	int		4862782	0					
ANR	4862828	Identifier	row_idx		4862782	1					
ANR	4862829	AssignmentExpression	row_idx = 0		4862782	2		=			
ANR	4862830	Identifier	row_idx		4862782	0					
ANR	4862831	PrimaryExpression	0		4862782	1					
ANR	4862832	ForStatement	for ( tile_i = 0 ; tile_i < xc -> n_tiles_x ; tile_i ++ )		4862782	6					
ANR	4862833	ForInit	tile_i = 0 ;	1257:9:38528:38538	4862782	0	True				
ANR	4862834	AssignmentExpression	tile_i = 0		4862782	0		=			
ANR	4862835	Identifier	tile_i		4862782	0					
ANR	4862836	PrimaryExpression	0		4862782	1					
ANR	4862837	Condition	tile_i < xc -> n_tiles_x	1257:21:38540:38561	4862782	1	True				
ANR	4862838	RelationalExpression	tile_i < xc -> n_tiles_x		4862782	0		<			
ANR	4862839	Identifier	tile_i		4862782	0					
ANR	4862840	PtrMemberAccess	xc -> n_tiles_x		4862782	1					
ANR	4862841	Identifier	xc		4862782	0					
ANR	4862842	Identifier	n_tiles_x		4862782	1					
ANR	4862843	PostIncDecOperationExpression	tile_i ++	1257:45:38564:38571	4862782	2	True				
ANR	4862844	Identifier	tile_i		4862782	0					
ANR	4862845	IncDec	++		4862782	1					
ANR	4862846	CompoundStatement		19:8:685:701	4862782	3					
ANR	4862847	IdentifierDeclStatement	int x ;	1258:8:38584:38589	4862782	0	True				
ANR	4862848	IdentifierDecl	x		4862782	0					
ANR	4862849	IdentifierDeclType	int		4862782	0					
ANR	4862850	Identifier	x		4862782	1					
ANR	4862851	IdentifierDeclStatement	"int tile_width = min ( TILE_WIDTH , xc -> width - tile_i * TILE_WIDTH ) ;"	1259:8:38599:38664	4862782	1	True				
ANR	4862852	IdentifierDecl	"tile_width = min ( TILE_WIDTH , xc -> width - tile_i * TILE_WIDTH )"		4862782	0					
ANR	4862853	IdentifierDeclType	int		4862782	0					
ANR	4862854	Identifier	tile_width		4862782	1					
ANR	4862855	AssignmentExpression	"tile_width = min ( TILE_WIDTH , xc -> width - tile_i * TILE_WIDTH )"		4862782	2		=			
ANR	4862856	Identifier	tile_width		4862782	0					
ANR	4862857	CallExpression	"min ( TILE_WIDTH , xc -> width - tile_i * TILE_WIDTH )"		4862782	1					
ANR	4862858	Callee	min		4862782	0					
ANR	4862859	Identifier	min		4862782	0					
ANR	4862860	ArgumentList	TILE_WIDTH		4862782	1					
ANR	4862861	Argument	TILE_WIDTH		4862782	0					
ANR	4862862	Identifier	TILE_WIDTH		4862782	0					
ANR	4862863	Argument	xc -> width - tile_i * TILE_WIDTH		4862782	1					
ANR	4862864	AdditiveExpression	xc -> width - tile_i * TILE_WIDTH		4862782	0		-			
ANR	4862865	PtrMemberAccess	xc -> width		4862782	0					
ANR	4862866	Identifier	xc		4862782	0					
ANR	4862867	Identifier	width		4862782	1					
ANR	4862868	MultiplicativeExpression	tile_i * TILE_WIDTH		4862782	1		*			
ANR	4862869	Identifier	tile_i		4862782	0					
ANR	4862870	Identifier	TILE_WIDTH		4862782	1					
ANR	4862871	IdentifierDeclStatement	"int tile_height = min ( TILE_HEIGHT , xc -> height - tile_j * TILE_HEIGHT ) ;"	1260:8:38674:38743	4862782	2	True				
ANR	4862872	IdentifierDecl	"tile_height = min ( TILE_HEIGHT , xc -> height - tile_j * TILE_HEIGHT )"		4862782	0					
ANR	4862873	IdentifierDeclType	int		4862782	0					
ANR	4862874	Identifier	tile_height		4862782	1					
ANR	4862875	AssignmentExpression	"tile_height = min ( TILE_HEIGHT , xc -> height - tile_j * TILE_HEIGHT )"		4862782	2		=			
ANR	4862876	Identifier	tile_height		4862782	0					
ANR	4862877	CallExpression	"min ( TILE_HEIGHT , xc -> height - tile_j * TILE_HEIGHT )"		4862782	1					
ANR	4862878	Callee	min		4862782	0					
ANR	4862879	Identifier	min		4862782	0					
ANR	4862880	ArgumentList	TILE_HEIGHT		4862782	1					
ANR	4862881	Argument	TILE_HEIGHT		4862782	0					
ANR	4862882	Identifier	TILE_HEIGHT		4862782	0					
ANR	4862883	Argument	xc -> height - tile_j * TILE_HEIGHT		4862782	1					
ANR	4862884	AdditiveExpression	xc -> height - tile_j * TILE_HEIGHT		4862782	0		-			
ANR	4862885	PtrMemberAccess	xc -> height		4862782	0					
ANR	4862886	Identifier	xc		4862782	0					
ANR	4862887	Identifier	height		4862782	1					
ANR	4862888	MultiplicativeExpression	tile_j * TILE_HEIGHT		4862782	1		*			
ANR	4862889	Identifier	tile_j		4862782	0					
ANR	4862890	Identifier	TILE_HEIGHT		4862782	1					
ANR	4862891	IdentifierDeclStatement	byte * base_ptr = tile_data [ tile_i ] + yrem * tile_width * base_bytes_pp ;	1261:8:38753:38835	4862782	3	True				
ANR	4862892	IdentifierDecl	* base_ptr = tile_data [ tile_i ] + yrem * tile_width * base_bytes_pp		4862782	0					
ANR	4862893	IdentifierDeclType	byte *		4862782	0					
ANR	4862894	Identifier	base_ptr		4862782	1					
ANR	4862895	AssignmentExpression	* base_ptr = tile_data [ tile_i ] + yrem * tile_width * base_bytes_pp		4862782	2		=			
ANR	4862896	Identifier	base_ptr		4862782	0					
ANR	4862897	AdditiveExpression	tile_data [ tile_i ] + yrem * tile_width * base_bytes_pp		4862782	1		+			
ANR	4862898	ArrayIndexing	tile_data [ tile_i ]		4862782	0					
ANR	4862899	Identifier	tile_data		4862782	0					
ANR	4862900	Identifier	tile_i		4862782	1					
ANR	4862901	MultiplicativeExpression	yrem * tile_width * base_bytes_pp		4862782	1		*			
ANR	4862902	Identifier	yrem		4862782	0					
ANR	4862903	MultiplicativeExpression	tile_width * base_bytes_pp		4862782	1		*			
ANR	4862904	Identifier	tile_width		4862782	0					
ANR	4862905	Identifier	base_bytes_pp		4862782	1					
ANR	4862906	IdentifierDeclStatement	int extra_stride = tile_width * tile_height ;	1263:8:38845:38888	4862782	4	True				
ANR	4862907	IdentifierDecl	extra_stride = tile_width * tile_height		4862782	0					
ANR	4862908	IdentifierDeclType	int		4862782	0					
ANR	4862909	Identifier	extra_stride		4862782	1					
ANR	4862910	AssignmentExpression	extra_stride = tile_width * tile_height		4862782	2		=			
ANR	4862911	Identifier	extra_stride		4862782	0					
ANR	4862912	MultiplicativeExpression	tile_width * tile_height		4862782	1		*			
ANR	4862913	Identifier	tile_width		4862782	0					
ANR	4862914	Identifier	tile_height		4862782	1					
ANR	4862915	IdentifierDeclStatement	byte * extra_ptr = tile_data [ tile_i ] + extra_stride * base_bytes_pp + yrem * tile_width ;	1264:8:38898:38996	4862782	5	True				
ANR	4862916	IdentifierDecl	* extra_ptr = tile_data [ tile_i ] + extra_stride * base_bytes_pp + yrem * tile_width		4862782	0					
ANR	4862917	IdentifierDeclType	byte *		4862782	0					
ANR	4862918	Identifier	extra_ptr		4862782	1					
ANR	4862919	AssignmentExpression	* extra_ptr = tile_data [ tile_i ] + extra_stride * base_bytes_pp + yrem * tile_width		4862782	2		=			
ANR	4862920	Identifier	extra_ptr		4862782	0					
ANR	4862921	AdditiveExpression	tile_data [ tile_i ] + extra_stride * base_bytes_pp + yrem * tile_width		4862782	1		+			
ANR	4862922	ArrayIndexing	tile_data [ tile_i ]		4862782	0					
ANR	4862923	Identifier	tile_data		4862782	0					
ANR	4862924	Identifier	tile_i		4862782	1					
ANR	4862925	AdditiveExpression	extra_stride * base_bytes_pp + yrem * tile_width		4862782	1		+			
ANR	4862926	MultiplicativeExpression	extra_stride * base_bytes_pp		4862782	0		*			
ANR	4862927	Identifier	extra_stride		4862782	0					
ANR	4862928	Identifier	base_bytes_pp		4862782	1					
ANR	4862929	MultiplicativeExpression	yrem * tile_width		4862782	1		*			
ANR	4862930	Identifier	yrem		4862782	0					
ANR	4862931	Identifier	tile_width		4862782	1					
ANR	4862932	IdentifierDeclStatement	int base_idx = 0 ;	1267:8:39007:39023	4862782	6	True				
ANR	4862933	IdentifierDecl	base_idx = 0		4862782	0					
ANR	4862934	IdentifierDeclType	int		4862782	0					
ANR	4862935	Identifier	base_idx		4862782	1					
ANR	4862936	AssignmentExpression	base_idx = 0		4862782	2		=			
ANR	4862937	Identifier	base_idx		4862782	0					
ANR	4862938	PrimaryExpression	0		4862782	1					
ANR	4862939	ForStatement	for ( x = 0 ; x < tile_width ; x ++ )		4862782	7					
ANR	4862940	ForInit	x = 0 ;	1269:13:39039:39044	4862782	0	True				
ANR	4862941	AssignmentExpression	x = 0		4862782	0		=			
ANR	4862942	Identifier	x		4862782	0					
ANR	4862943	PrimaryExpression	0		4862782	1					
ANR	4862944	Condition	x < tile_width	1269:20:39046:39059	4862782	1	True				
ANR	4862945	RelationalExpression	x < tile_width		4862782	0		<			
ANR	4862946	Identifier	x		4862782	0					
ANR	4862947	Identifier	tile_width		4862782	1					
ANR	4862948	PostIncDecOperationExpression	x ++	1269:36:39062:39064	4862782	2	True				
ANR	4862949	Identifier	x		4862782	0					
ANR	4862950	IncDec	++		4862782	1					
ANR	4862951	CompoundStatement		22:12:759:772	4862782	3					
ANR	4862952	IdentifierDeclStatement	int plane_idx ;	1270:12:39081:39094	4862782	0	True				
ANR	4862953	IdentifierDecl	plane_idx		4862782	0					
ANR	4862954	IdentifierDeclType	int		4862782	0					
ANR	4862955	Identifier	plane_idx		4862782	1					
ANR	4862956	ForStatement	for ( plane_idx = 0 ; plane_idx < base_bytes_pp ; plane_idx ++ )		4862782	1					
ANR	4862957	ForInit	plane_idx = 0 ;	1271:17:39113:39126	4862782	0	True				
ANR	4862958	AssignmentExpression	plane_idx = 0		4862782	0		=			
ANR	4862959	Identifier	plane_idx		4862782	0					
ANR	4862960	PrimaryExpression	0		4862782	1					
ANR	4862961	Condition	plane_idx < base_bytes_pp	1271:32:39128:39152	4862782	1	True				
ANR	4862962	RelationalExpression	plane_idx < base_bytes_pp		4862782	0		<			
ANR	4862963	Identifier	plane_idx		4862782	0					
ANR	4862964	Identifier	base_bytes_pp		4862782	1					
ANR	4862965	PostIncDecOperationExpression	plane_idx ++	1271:59:39155:39165	4862782	2	True				
ANR	4862966	Identifier	plane_idx		4862782	0					
ANR	4862967	IncDec	++		4862782	1					
ANR	4862968	ExpressionStatement	base_ptr [ base_idx ++ ] = row [ row_idx ++ ]	1272:16:39184:39221	4862782	3	True				
ANR	4862969	AssignmentExpression	base_ptr [ base_idx ++ ] = row [ row_idx ++ ]		4862782	0		=			
ANR	4862970	ArrayIndexing	base_ptr [ base_idx ++ ]		4862782	0					
ANR	4862971	Identifier	base_ptr		4862782	0					
ANR	4862972	PostIncDecOperationExpression	base_idx ++		4862782	1					
ANR	4862973	Identifier	base_idx		4862782	0					
ANR	4862974	IncDec	++		4862782	1					
ANR	4862975	ArrayIndexing	row [ row_idx ++ ]		4862782	1					
ANR	4862976	Identifier	row		4862782	0					
ANR	4862977	PostIncDecOperationExpression	row_idx ++		4862782	1					
ANR	4862978	Identifier	row_idx		4862782	0					
ANR	4862979	IncDec	++		4862782	1					
ANR	4862980	ForStatement	for ( plane_idx = 0 ; plane_idx < n_extra_channels ; plane_idx ++ )		4862782	2					
ANR	4862981	ForInit	plane_idx = 0 ;	1273:17:39240:39253	4862782	0	True				
ANR	4862982	AssignmentExpression	plane_idx = 0		4862782	0		=			
ANR	4862983	Identifier	plane_idx		4862782	0					
ANR	4862984	PrimaryExpression	0		4862782	1					
ANR	4862985	Condition	plane_idx < n_extra_channels	1273:32:39255:39282	4862782	1	True				
ANR	4862986	RelationalExpression	plane_idx < n_extra_channels		4862782	0		<			
ANR	4862987	Identifier	plane_idx		4862782	0					
ANR	4862988	Identifier	n_extra_channels		4862782	1					
ANR	4862989	PostIncDecOperationExpression	plane_idx ++	1273:62:39285:39295	4862782	2	True				
ANR	4862990	Identifier	plane_idx		4862782	0					
ANR	4862991	IncDec	++		4862782	1					
ANR	4862992	ExpressionStatement	extra_ptr [ plane_idx * extra_stride + x ] = 255 ^ row [ row_idx ++ ]	1274:16:39314:39376	4862782	3	True				
ANR	4862993	AssignmentExpression	extra_ptr [ plane_idx * extra_stride + x ] = 255 ^ row [ row_idx ++ ]		4862782	0		=			
ANR	4862994	ArrayIndexing	extra_ptr [ plane_idx * extra_stride + x ]		4862782	0					
ANR	4862995	Identifier	extra_ptr		4862782	0					
ANR	4862996	AdditiveExpression	plane_idx * extra_stride + x		4862782	1		+			
ANR	4862997	MultiplicativeExpression	plane_idx * extra_stride		4862782	0		*			
ANR	4862998	Identifier	plane_idx		4862782	0					
ANR	4862999	Identifier	extra_stride		4862782	1					
ANR	4863000	Identifier	x		4862782	1					
ANR	4863001	ExclusiveOrExpression	255 ^ row [ row_idx ++ ]		4862782	1		^			
ANR	4863002	PrimaryExpression	255		4862782	0					
ANR	4863003	ArrayIndexing	row [ row_idx ++ ]		4862782	1					
ANR	4863004	Identifier	row		4862782	0					
ANR	4863005	PostIncDecOperationExpression	row_idx ++		4862782	1					
ANR	4863006	Identifier	row_idx		4862782	0					
ANR	4863007	IncDec	++		4862782	1					
ANR	4863008	ReturnType	static void		4862782	1					
ANR	4863009	Identifier	xcf_shuffle_to_tile		4862782	2					
ANR	4863010	ParameterList	"xcf_write_ctx * xc , byte * * tile_data , const byte * row , int y"		4862782	3					
ANR	4863011	Parameter	xcf_write_ctx * xc	1247:20:38240:38256	4862782	0	True				
ANR	4863012	ParameterType	xcf_write_ctx *		4862782	0					
ANR	4863013	Identifier	xc		4862782	1					
ANR	4863014	Parameter	byte * * tile_data	1247:39:38259:38274	4862782	1	True				
ANR	4863015	ParameterType	byte * *		4862782	0					
ANR	4863016	Identifier	tile_data		4862782	1					
ANR	4863017	Parameter	const byte * row	1247:57:38277:38291	4862782	2	True				
ANR	4863018	ParameterType	const byte *		4862782	0					
ANR	4863019	Identifier	row		4862782	1					
ANR	4863020	Parameter	int y	1248:20:38314:38318	4862782	3	True				
ANR	4863021	ParameterType	int		4862782	0					
ANR	4863022	Identifier	y		4862782	1					
ANR	4863023	CFGEntryNode	ENTRY		4862782		True				
ANR	4863024	CFGExitNode	EXIT		4862782		True				
ANR	4863025	Symbol	* x		4862782						
ANR	4863026	Symbol	* row		4862782						
ANR	4863027	Symbol	tile_height		4862782						
ANR	4863028	Symbol	plane_idx		4862782						
ANR	4863029	Symbol	extra_stride		4862782						
ANR	4863030	Symbol	base_bytes_pp		4862782						
ANR	4863031	Symbol	* tile_data		4862782						
ANR	4863032	Symbol	min		4862782						
ANR	4863033	Symbol	extra_ptr		4862782						
ANR	4863034	Symbol	* extra_ptr		4862782						
ANR	4863035	Symbol	TILE_WIDTH		4862782						
ANR	4863036	Symbol	tile_data		4862782						
ANR	4863037	Symbol	row		4862782						
ANR	4863038	Symbol	TILE_HEIGHT		4862782						
ANR	4863039	Symbol	xc -> n_extra_channels		4862782						
ANR	4863040	Symbol	base_idx		4862782						
ANR	4863041	Symbol	n_extra_channels		4862782						
ANR	4863042	Symbol	base_ptr		4862782						
ANR	4863043	Symbol	xc		4862782						
ANR	4863044	Symbol	* tile_i		4862782						
ANR	4863045	Symbol	xc -> n_tiles_x		4862782						
ANR	4863046	Symbol	* xc		4862782						
ANR	4863047	Symbol	row_idx		4862782						
ANR	4863048	Symbol	tile_width		4862782						
ANR	4863049	Symbol	tile_i		4862782						
ANR	4863050	Symbol	xc -> width		4862782						
ANR	4863051	Symbol	xc -> height		4862782						
ANR	4863052	Symbol	* plane_idx		4862782						
ANR	4863053	Symbol	tile_j		4862782						
ANR	4863054	Symbol	* base_ptr		4862782						
ANR	4863055	Symbol	x		4862782						
ANR	4863056	Symbol	y		4862782						
ANR	4863057	Symbol	yrem		4862782						
ANR	4863058	Symbol	* extra_stride		4862782						
ANR	4863059	Symbol	xc -> base_bytes_pp		4862782						
ANR	4863060	Function	xcf_icc_to_tile	1279:0:39397:40866							
ANR	4863061	FunctionDef	"xcf_icc_to_tile (gx_device_printer * pdev , xcf_write_ctx * xc , byte * * tile_data , const byte * row , int y , gcmmhlink_t link)"		4863060	0					
ANR	4863062	CompoundStatement		1282:0:39549:40866	4863060	0					
ANR	4863063	IdentifierDeclStatement	int tile_j = y / TILE_HEIGHT ;	1283:4:39555:39583	4863060	0	True				
ANR	4863064	IdentifierDecl	tile_j = y / TILE_HEIGHT		4863060	0					
ANR	4863065	IdentifierDeclType	int		4863060	0					
ANR	4863066	Identifier	tile_j		4863060	1					
ANR	4863067	AssignmentExpression	tile_j = y / TILE_HEIGHT		4863060	2		=			
ANR	4863068	Identifier	tile_j		4863060	0					
ANR	4863069	MultiplicativeExpression	y / TILE_HEIGHT		4863060	1		/			
ANR	4863070	Identifier	y		4863060	0					
ANR	4863071	Identifier	TILE_HEIGHT		4863060	1					
ANR	4863072	IdentifierDeclStatement	int yrem = y % TILE_HEIGHT ;	1284:4:39589:39615	4863060	1	True				
ANR	4863073	IdentifierDecl	yrem = y % TILE_HEIGHT		4863060	0					
ANR	4863074	IdentifierDeclType	int		4863060	0					
ANR	4863075	Identifier	yrem		4863060	1					
ANR	4863076	AssignmentExpression	yrem = y % TILE_HEIGHT		4863060	2		=			
ANR	4863077	Identifier	yrem		4863060	0					
ANR	4863078	MultiplicativeExpression	y % TILE_HEIGHT		4863060	1		%			
ANR	4863079	Identifier	y		4863060	0					
ANR	4863080	Identifier	TILE_HEIGHT		4863060	1					
ANR	4863081	IdentifierDeclStatement	int tile_i ;	1285:4:39621:39631	4863060	2	True				
ANR	4863082	IdentifierDecl	tile_i		4863060	0					
ANR	4863083	IdentifierDeclType	int		4863060	0					
ANR	4863084	Identifier	tile_i		4863060	1					
ANR	4863085	IdentifierDeclStatement	int base_bytes_pp = xc -> base_bytes_pp ;	1286:4:39637:39674	4863060	3	True				
ANR	4863086	IdentifierDecl	base_bytes_pp = xc -> base_bytes_pp		4863060	0					
ANR	4863087	IdentifierDeclType	int		4863060	0					
ANR	4863088	Identifier	base_bytes_pp		4863060	1					
ANR	4863089	AssignmentExpression	base_bytes_pp = xc -> base_bytes_pp		4863060	2		=			
ANR	4863090	Identifier	base_bytes_pp		4863060	0					
ANR	4863091	PtrMemberAccess	xc -> base_bytes_pp		4863060	1					
ANR	4863092	Identifier	xc		4863060	0					
ANR	4863093	Identifier	base_bytes_pp		4863060	1					
ANR	4863094	IdentifierDeclStatement	int n_extra_channels = xc -> n_extra_channels ;	1287:4:39680:39723	4863060	4	True				
ANR	4863095	IdentifierDecl	n_extra_channels = xc -> n_extra_channels		4863060	0					
ANR	4863096	IdentifierDeclType	int		4863060	0					
ANR	4863097	Identifier	n_extra_channels		4863060	1					
ANR	4863098	AssignmentExpression	n_extra_channels = xc -> n_extra_channels		4863060	2		=			
ANR	4863099	Identifier	n_extra_channels		4863060	0					
ANR	4863100	PtrMemberAccess	xc -> n_extra_channels		4863060	1					
ANR	4863101	Identifier	xc		4863060	0					
ANR	4863102	Identifier	n_extra_channels		4863060	1					
ANR	4863103	IdentifierDeclStatement	int row_idx = 0 ;	1288:4:39729:39744	4863060	5	True				
ANR	4863104	IdentifierDecl	row_idx = 0		4863060	0					
ANR	4863105	IdentifierDeclType	int		4863060	0					
ANR	4863106	Identifier	row_idx		4863060	1					
ANR	4863107	AssignmentExpression	row_idx = 0		4863060	2		=			
ANR	4863108	Identifier	row_idx		4863060	0					
ANR	4863109	PrimaryExpression	0		4863060	1					
ANR	4863110	ForStatement	for ( tile_i = 0 ; tile_i < xc -> n_tiles_x ; tile_i ++ )		4863060	6					
ANR	4863111	ForInit	tile_i = 0 ;	1290:9:39756:39766	4863060	0	True				
ANR	4863112	AssignmentExpression	tile_i = 0		4863060	0		=			
ANR	4863113	Identifier	tile_i		4863060	0					
ANR	4863114	PrimaryExpression	0		4863060	1					
ANR	4863115	Condition	tile_i < xc -> n_tiles_x	1290:21:39768:39789	4863060	1	True				
ANR	4863116	RelationalExpression	tile_i < xc -> n_tiles_x		4863060	0		<			
ANR	4863117	Identifier	tile_i		4863060	0					
ANR	4863118	PtrMemberAccess	xc -> n_tiles_x		4863060	1					
ANR	4863119	Identifier	xc		4863060	0					
ANR	4863120	Identifier	n_tiles_x		4863060	1					
ANR	4863121	PostIncDecOperationExpression	tile_i ++	1290:45:39792:39799	4863060	2	True				
ANR	4863122	Identifier	tile_i		4863060	0					
ANR	4863123	IncDec	++		4863060	1					
ANR	4863124	CompoundStatement		19:8:685:701	4863060	3					
ANR	4863125	IdentifierDeclStatement	int x ;	1291:8:39812:39817	4863060	0	True				
ANR	4863126	IdentifierDecl	x		4863060	0					
ANR	4863127	IdentifierDeclType	int		4863060	0					
ANR	4863128	Identifier	x		4863060	1					
ANR	4863129	IdentifierDeclStatement	"int tile_width = min ( TILE_WIDTH , xc -> width - tile_i * TILE_WIDTH ) ;"	1292:8:39827:39892	4863060	1	True				
ANR	4863130	IdentifierDecl	"tile_width = min ( TILE_WIDTH , xc -> width - tile_i * TILE_WIDTH )"		4863060	0					
ANR	4863131	IdentifierDeclType	int		4863060	0					
ANR	4863132	Identifier	tile_width		4863060	1					
ANR	4863133	AssignmentExpression	"tile_width = min ( TILE_WIDTH , xc -> width - tile_i * TILE_WIDTH )"		4863060	2		=			
ANR	4863134	Identifier	tile_width		4863060	0					
ANR	4863135	CallExpression	"min ( TILE_WIDTH , xc -> width - tile_i * TILE_WIDTH )"		4863060	1					
ANR	4863136	Callee	min		4863060	0					
ANR	4863137	Identifier	min		4863060	0					
ANR	4863138	ArgumentList	TILE_WIDTH		4863060	1					
ANR	4863139	Argument	TILE_WIDTH		4863060	0					
ANR	4863140	Identifier	TILE_WIDTH		4863060	0					
ANR	4863141	Argument	xc -> width - tile_i * TILE_WIDTH		4863060	1					
ANR	4863142	AdditiveExpression	xc -> width - tile_i * TILE_WIDTH		4863060	0		-			
ANR	4863143	PtrMemberAccess	xc -> width		4863060	0					
ANR	4863144	Identifier	xc		4863060	0					
ANR	4863145	Identifier	width		4863060	1					
ANR	4863146	MultiplicativeExpression	tile_i * TILE_WIDTH		4863060	1		*			
ANR	4863147	Identifier	tile_i		4863060	0					
ANR	4863148	Identifier	TILE_WIDTH		4863060	1					
ANR	4863149	IdentifierDeclStatement	"int tile_height = min ( TILE_HEIGHT , xc -> height - tile_j * TILE_HEIGHT ) ;"	1293:8:39902:39971	4863060	2	True				
ANR	4863150	IdentifierDecl	"tile_height = min ( TILE_HEIGHT , xc -> height - tile_j * TILE_HEIGHT )"		4863060	0					
ANR	4863151	IdentifierDeclType	int		4863060	0					
ANR	4863152	Identifier	tile_height		4863060	1					
ANR	4863153	AssignmentExpression	"tile_height = min ( TILE_HEIGHT , xc -> height - tile_j * TILE_HEIGHT )"		4863060	2		=			
ANR	4863154	Identifier	tile_height		4863060	0					
ANR	4863155	CallExpression	"min ( TILE_HEIGHT , xc -> height - tile_j * TILE_HEIGHT )"		4863060	1					
ANR	4863156	Callee	min		4863060	0					
ANR	4863157	Identifier	min		4863060	0					
ANR	4863158	ArgumentList	TILE_HEIGHT		4863060	1					
ANR	4863159	Argument	TILE_HEIGHT		4863060	0					
ANR	4863160	Identifier	TILE_HEIGHT		4863060	0					
ANR	4863161	Argument	xc -> height - tile_j * TILE_HEIGHT		4863060	1					
ANR	4863162	AdditiveExpression	xc -> height - tile_j * TILE_HEIGHT		4863060	0		-			
ANR	4863163	PtrMemberAccess	xc -> height		4863060	0					
ANR	4863164	Identifier	xc		4863060	0					
ANR	4863165	Identifier	height		4863060	1					
ANR	4863166	MultiplicativeExpression	tile_j * TILE_HEIGHT		4863060	1		*			
ANR	4863167	Identifier	tile_j		4863060	0					
ANR	4863168	Identifier	TILE_HEIGHT		4863060	1					
ANR	4863169	IdentifierDeclStatement	byte * base_ptr = tile_data [ tile_i ] + yrem * tile_width * base_bytes_pp ;	1294:8:39981:40063	4863060	3	True				
ANR	4863170	IdentifierDecl	* base_ptr = tile_data [ tile_i ] + yrem * tile_width * base_bytes_pp		4863060	0					
ANR	4863171	IdentifierDeclType	byte *		4863060	0					
ANR	4863172	Identifier	base_ptr		4863060	1					
ANR	4863173	AssignmentExpression	* base_ptr = tile_data [ tile_i ] + yrem * tile_width * base_bytes_pp		4863060	2		=			
ANR	4863174	Identifier	base_ptr		4863060	0					
ANR	4863175	AdditiveExpression	tile_data [ tile_i ] + yrem * tile_width * base_bytes_pp		4863060	1		+			
ANR	4863176	ArrayIndexing	tile_data [ tile_i ]		4863060	0					
ANR	4863177	Identifier	tile_data		4863060	0					
ANR	4863178	Identifier	tile_i		4863060	1					
ANR	4863179	MultiplicativeExpression	yrem * tile_width * base_bytes_pp		4863060	1		*			
ANR	4863180	Identifier	yrem		4863060	0					
ANR	4863181	MultiplicativeExpression	tile_width * base_bytes_pp		4863060	1		*			
ANR	4863182	Identifier	tile_width		4863060	0					
ANR	4863183	Identifier	base_bytes_pp		4863060	1					
ANR	4863184	IdentifierDeclStatement	int extra_stride = tile_width * tile_height ;	1296:8:40073:40116	4863060	4	True				
ANR	4863185	IdentifierDecl	extra_stride = tile_width * tile_height		4863060	0					
ANR	4863186	IdentifierDeclType	int		4863060	0					
ANR	4863187	Identifier	extra_stride		4863060	1					
ANR	4863188	AssignmentExpression	extra_stride = tile_width * tile_height		4863060	2		=			
ANR	4863189	Identifier	extra_stride		4863060	0					
ANR	4863190	MultiplicativeExpression	tile_width * tile_height		4863060	1		*			
ANR	4863191	Identifier	tile_width		4863060	0					
ANR	4863192	Identifier	tile_height		4863060	1					
ANR	4863193	IdentifierDeclStatement	byte * extra_ptr = tile_data [ tile_i ] + extra_stride * base_bytes_pp + yrem * tile_width ;	1297:8:40126:40224	4863060	5	True				
ANR	4863194	IdentifierDecl	* extra_ptr = tile_data [ tile_i ] + extra_stride * base_bytes_pp + yrem * tile_width		4863060	0					
ANR	4863195	IdentifierDeclType	byte *		4863060	0					
ANR	4863196	Identifier	extra_ptr		4863060	1					
ANR	4863197	AssignmentExpression	* extra_ptr = tile_data [ tile_i ] + extra_stride * base_bytes_pp + yrem * tile_width		4863060	2		=			
ANR	4863198	Identifier	extra_ptr		4863060	0					
ANR	4863199	AdditiveExpression	tile_data [ tile_i ] + extra_stride * base_bytes_pp + yrem * tile_width		4863060	1		+			
ANR	4863200	ArrayIndexing	tile_data [ tile_i ]		4863060	0					
ANR	4863201	Identifier	tile_data		4863060	0					
ANR	4863202	Identifier	tile_i		4863060	1					
ANR	4863203	AdditiveExpression	extra_stride * base_bytes_pp + yrem * tile_width		4863060	1		+			
ANR	4863204	MultiplicativeExpression	extra_stride * base_bytes_pp		4863060	0		*			
ANR	4863205	Identifier	extra_stride		4863060	0					
ANR	4863206	Identifier	base_bytes_pp		4863060	1					
ANR	4863207	MultiplicativeExpression	yrem * tile_width		4863060	1		*			
ANR	4863208	Identifier	yrem		4863060	0					
ANR	4863209	Identifier	tile_width		4863060	1					
ANR	4863210	IdentifierDeclStatement	int base_idx = 0 ;	1300:8:40235:40251	4863060	6	True				
ANR	4863211	IdentifierDecl	base_idx = 0		4863060	0					
ANR	4863212	IdentifierDeclType	int		4863060	0					
ANR	4863213	Identifier	base_idx		4863060	1					
ANR	4863214	AssignmentExpression	base_idx = 0		4863060	2		=			
ANR	4863215	Identifier	base_idx		4863060	0					
ANR	4863216	PrimaryExpression	0		4863060	1					
ANR	4863217	ForStatement	for ( x = 0 ; x < tile_width ; x ++ )		4863060	7					
ANR	4863218	ForInit	x = 0 ;	1302:13:40267:40272	4863060	0	True				
ANR	4863219	AssignmentExpression	x = 0		4863060	0		=			
ANR	4863220	Identifier	x		4863060	0					
ANR	4863221	PrimaryExpression	0		4863060	1					
ANR	4863222	Condition	x < tile_width	1302:20:40274:40287	4863060	1	True				
ANR	4863223	RelationalExpression	x < tile_width		4863060	0		<			
ANR	4863224	Identifier	x		4863060	0					
ANR	4863225	Identifier	tile_width		4863060	1					
ANR	4863226	PostIncDecOperationExpression	x ++	1302:36:40290:40292	4863060	2	True				
ANR	4863227	Identifier	x		4863060	0					
ANR	4863228	IncDec	++		4863060	1					
ANR	4863229	CompoundStatement		23:12:760:773	4863060	3					
ANR	4863230	IdentifierDeclStatement	int plane_idx ;	1304:12:40310:40323	4863060	0	True				
ANR	4863231	IdentifierDecl	plane_idx		4863060	0					
ANR	4863232	IdentifierDeclType	int		4863060	0					
ANR	4863233	Identifier	plane_idx		4863060	1					
ANR	4863234	ExpressionStatement	"gscms_transform_color ( ( gx_device * ) pdev , link , ( void * ) ( & ( row [ row_idx ] ) ) , & ( base_ptr [ base_idx ] ) , 1 )"	1310:12:40522:40692	4863060	1	True				
ANR	4863235	CallExpression	"gscms_transform_color ( ( gx_device * ) pdev , link , ( void * ) ( & ( row [ row_idx ] ) ) , & ( base_ptr [ base_idx ] ) , 1 )"		4863060	0					
ANR	4863236	Callee	gscms_transform_color		4863060	0					
ANR	4863237	Identifier	gscms_transform_color		4863060	0					
ANR	4863238	ArgumentList	( gx_device * ) pdev		4863060	1					
ANR	4863239	Argument	( gx_device * ) pdev		4863060	0					
ANR	4863240	CastExpression	( gx_device * ) pdev		4863060	0					
ANR	4863241	CastTarget	gx_device *		4863060	0					
ANR	4863242	Identifier	pdev		4863060	1					
ANR	4863243	Argument	link		4863060	1					
ANR	4863244	Identifier	link		4863060	0					
ANR	4863245	Argument	( void * ) ( & ( row [ row_idx ] ) )		4863060	2					
ANR	4863246	CastExpression	( void * ) ( & ( row [ row_idx ] ) )		4863060	0					
ANR	4863247	CastTarget	void *		4863060	0					
ANR	4863248	UnaryOperationExpression	& ( row [ row_idx ] )		4863060	1					
ANR	4863249	UnaryOperator	&		4863060	0					
ANR	4863250	ArrayIndexing	row [ row_idx ]		4863060	1					
ANR	4863251	Identifier	row		4863060	0					
ANR	4863252	Identifier	row_idx		4863060	1					
ANR	4863253	Argument	& ( base_ptr [ base_idx ] )		4863060	3					
ANR	4863254	UnaryOperationExpression	& ( base_ptr [ base_idx ] )		4863060	0					
ANR	4863255	UnaryOperator	&		4863060	0					
ANR	4863256	ArrayIndexing	base_ptr [ base_idx ]		4863060	1					
ANR	4863257	Identifier	base_ptr		4863060	0					
ANR	4863258	Identifier	base_idx		4863060	1					
ANR	4863259	Argument	1		4863060	4					
ANR	4863260	PrimaryExpression	1		4863060	0					
ANR	4863261	ForStatement	for ( plane_idx = 0 ; plane_idx < n_extra_channels ; plane_idx ++ )		4863060	2					
ANR	4863262	ForInit	plane_idx = 0 ;	1314:17:40712:40725	4863060	0	True				
ANR	4863263	AssignmentExpression	plane_idx = 0		4863060	0		=			
ANR	4863264	Identifier	plane_idx		4863060	0					
ANR	4863265	PrimaryExpression	0		4863060	1					
ANR	4863266	Condition	plane_idx < n_extra_channels	1314:32:40727:40754	4863060	1	True				
ANR	4863267	RelationalExpression	plane_idx < n_extra_channels		4863060	0		<			
ANR	4863268	Identifier	plane_idx		4863060	0					
ANR	4863269	Identifier	n_extra_channels		4863060	1					
ANR	4863270	PostIncDecOperationExpression	plane_idx ++	1314:62:40757:40767	4863060	2	True				
ANR	4863271	Identifier	plane_idx		4863060	0					
ANR	4863272	IncDec	++		4863060	1					
ANR	4863273	ExpressionStatement	extra_ptr [ plane_idx * extra_stride + x ] = 255 ^ row [ row_idx ++ ]	1315:16:40786:40848	4863060	3	True				
ANR	4863274	AssignmentExpression	extra_ptr [ plane_idx * extra_stride + x ] = 255 ^ row [ row_idx ++ ]		4863060	0		=			
ANR	4863275	ArrayIndexing	extra_ptr [ plane_idx * extra_stride + x ]		4863060	0					
ANR	4863276	Identifier	extra_ptr		4863060	0					
ANR	4863277	AdditiveExpression	plane_idx * extra_stride + x		4863060	1		+			
ANR	4863278	MultiplicativeExpression	plane_idx * extra_stride		4863060	0		*			
ANR	4863279	Identifier	plane_idx		4863060	0					
ANR	4863280	Identifier	extra_stride		4863060	1					
ANR	4863281	Identifier	x		4863060	1					
ANR	4863282	ExclusiveOrExpression	255 ^ row [ row_idx ++ ]		4863060	1		^			
ANR	4863283	PrimaryExpression	255		4863060	0					
ANR	4863284	ArrayIndexing	row [ row_idx ++ ]		4863060	1					
ANR	4863285	Identifier	row		4863060	0					
ANR	4863286	PostIncDecOperationExpression	row_idx ++		4863060	1					
ANR	4863287	Identifier	row_idx		4863060	0					
ANR	4863288	IncDec	++		4863060	1					
ANR	4863289	ReturnType	static void		4863060	1					
ANR	4863290	Identifier	xcf_icc_to_tile		4863060	2					
ANR	4863291	ParameterList	"gx_device_printer * pdev , xcf_write_ctx * xc , byte * * tile_data , const byte * row , int y , gcmmhlink_t link"		4863060	3					
ANR	4863292	Parameter	gx_device_printer * pdev	1280:16:39425:39447	4863060	0	True				
ANR	4863293	ParameterType	gx_device_printer *		4863060	0					
ANR	4863294	Identifier	pdev		4863060	1					
ANR	4863295	Parameter	xcf_write_ctx * xc	1280:41:39450:39466	4863060	1	True				
ANR	4863296	ParameterType	xcf_write_ctx *		4863060	0					
ANR	4863297	Identifier	xc		4863060	1					
ANR	4863298	Parameter	byte * * tile_data	1280:60:39469:39484	4863060	2	True				
ANR	4863299	ParameterType	byte * *		4863060	0					
ANR	4863300	Identifier	tile_data		4863060	1					
ANR	4863301	Parameter	const byte * row	1280:78:39487:39501	4863060	3	True				
ANR	4863302	ParameterType	const byte *		4863060	0					
ANR	4863303	Identifier	row		4863060	1					
ANR	4863304	Parameter	int y	1281:20:39524:39528	4863060	4	True				
ANR	4863305	ParameterType	int		4863060	0					
ANR	4863306	Identifier	y		4863060	1					
ANR	4863307	Parameter	gcmmhlink_t link	1281:27:39531:39546	4863060	5	True				
ANR	4863308	ParameterType	gcmmhlink_t		4863060	0					
ANR	4863309	Identifier	link		4863060	1					
ANR	4863310	CFGEntryNode	ENTRY		4863060		True				
ANR	4863311	CFGExitNode	EXIT		4863060		True				
ANR	4863312	Symbol	* x		4863060						
ANR	4863313	Symbol	* row		4863060						
ANR	4863314	Symbol	tile_height		4863060						
ANR	4863315	Symbol	plane_idx		4863060						
ANR	4863316	Symbol	link		4863060						
ANR	4863317	Symbol	extra_stride		4863060						
ANR	4863318	Symbol	base_bytes_pp		4863060						
ANR	4863319	Symbol	* tile_data		4863060						
ANR	4863320	Symbol	pdev		4863060						
ANR	4863321	Symbol	min		4863060						
ANR	4863322	Symbol	extra_ptr		4863060						
ANR	4863323	Symbol	* extra_ptr		4863060						
ANR	4863324	Symbol	TILE_WIDTH		4863060						
ANR	4863325	Symbol	tile_data		4863060						
ANR	4863326	Symbol	row		4863060						
ANR	4863327	Symbol	TILE_HEIGHT		4863060						
ANR	4863328	Symbol	xc -> n_extra_channels		4863060						
ANR	4863329	Symbol	base_idx		4863060						
ANR	4863330	Symbol	n_extra_channels		4863060						
ANR	4863331	Symbol	base_ptr		4863060						
ANR	4863332	Symbol	xc		4863060						
ANR	4863333	Symbol	* tile_i		4863060						
ANR	4863334	Symbol	xc -> n_tiles_x		4863060						
ANR	4863335	Symbol	* xc		4863060						
ANR	4863336	Symbol	row_idx		4863060						
ANR	4863337	Symbol	tile_width		4863060						
ANR	4863338	Symbol	tile_i		4863060						
ANR	4863339	Symbol	xc -> width		4863060						
ANR	4863340	Symbol	xc -> height		4863060						
ANR	4863341	Symbol	* plane_idx		4863060						
ANR	4863342	Symbol	tile_j		4863060						
ANR	4863343	Symbol	x		4863060						
ANR	4863344	Symbol	y		4863060						
ANR	4863345	Symbol	yrem		4863060						
ANR	4863346	Symbol	* extra_stride		4863060						
ANR	4863347	Symbol	xc -> base_bytes_pp		4863060						
ANR	4863348	Function	xcf_write_image_data	1320:0:40869:43155							
ANR	4863349	FunctionDef	"xcf_write_image_data (xcf_write_ctx * xc , gx_device_printer * pdev)"		4863348	0					
ANR	4863350	CompoundStatement		1322:0:40945:43155	4863348	0					
ANR	4863351	IdentifierDeclStatement	int code = 0 ;	1323:4:40951:40963	4863348	0	True				
ANR	4863352	IdentifierDecl	code = 0		4863348	0					
ANR	4863353	IdentifierDeclType	int		4863348	0					
ANR	4863354	Identifier	code		4863348	1					
ANR	4863355	AssignmentExpression	code = 0		4863348	2		=			
ANR	4863356	Identifier	code		4863348	0					
ANR	4863357	PrimaryExpression	0		4863348	1					
ANR	4863358	IdentifierDeclStatement	int raster = gdev_prn_raster ( pdev ) ;	1324:4:40969:41003	4863348	1	True				
ANR	4863359	IdentifierDecl	raster = gdev_prn_raster ( pdev )		4863348	0					
ANR	4863360	IdentifierDeclType	int		4863348	0					
ANR	4863361	Identifier	raster		4863348	1					
ANR	4863362	AssignmentExpression	raster = gdev_prn_raster ( pdev )		4863348	2		=			
ANR	4863363	Identifier	raster		4863348	0					
ANR	4863364	CallExpression	gdev_prn_raster ( pdev )		4863348	1					
ANR	4863365	Callee	gdev_prn_raster		4863348	0					
ANR	4863366	Identifier	gdev_prn_raster		4863348	0					
ANR	4863367	ArgumentList	pdev		4863348	1					
ANR	4863368	Argument	pdev		4863348	0					
ANR	4863369	Identifier	pdev		4863348	0					
ANR	4863370	IdentifierDeclStatement	"int tile_i , tile_j ;"	1325:4:41009:41027	4863348	2	True				
ANR	4863371	IdentifierDecl	tile_i		4863348	0					
ANR	4863372	IdentifierDeclType	int		4863348	0					
ANR	4863373	Identifier	tile_i		4863348	1					
ANR	4863374	IdentifierDecl	tile_j		4863348	1					
ANR	4863375	IdentifierDeclType	int		4863348	0					
ANR	4863376	Identifier	tile_j		4863348	1					
ANR	4863377	IdentifierDeclStatement	byte * * tile_data ;	1326:4:41033:41049	4863348	3	True				
ANR	4863378	IdentifierDecl	* * tile_data		4863348	0					
ANR	4863379	IdentifierDeclType	byte * *		4863348	0					
ANR	4863380	Identifier	tile_data		4863348	1					
ANR	4863381	IdentifierDeclStatement	byte * line ;	1327:4:41055:41065	4863348	4	True				
ANR	4863382	IdentifierDecl	* line		4863348	0					
ANR	4863383	IdentifierDeclType	byte *		4863348	0					
ANR	4863384	Identifier	line		4863348	1					
ANR	4863385	IdentifierDeclStatement	int base_bytes_pp = xc -> base_bytes_pp ;	1328:4:41071:41108	4863348	5	True				
ANR	4863386	IdentifierDecl	base_bytes_pp = xc -> base_bytes_pp		4863348	0					
ANR	4863387	IdentifierDeclType	int		4863348	0					
ANR	4863388	Identifier	base_bytes_pp		4863348	1					
ANR	4863389	AssignmentExpression	base_bytes_pp = xc -> base_bytes_pp		4863348	2		=			
ANR	4863390	Identifier	base_bytes_pp		4863348	0					
ANR	4863391	PtrMemberAccess	xc -> base_bytes_pp		4863348	1					
ANR	4863392	Identifier	xc		4863348	0					
ANR	4863393	Identifier	base_bytes_pp		4863348	1					
ANR	4863394	IdentifierDeclStatement	int n_extra_channels = xc -> n_extra_channels ;	1329:4:41114:41157	4863348	6	True				
ANR	4863395	IdentifierDecl	n_extra_channels = xc -> n_extra_channels		4863348	0					
ANR	4863396	IdentifierDeclType	int		4863348	0					
ANR	4863397	Identifier	n_extra_channels		4863348	1					
ANR	4863398	AssignmentExpression	n_extra_channels = xc -> n_extra_channels		4863348	2		=			
ANR	4863399	Identifier	n_extra_channels		4863348	0					
ANR	4863400	PtrMemberAccess	xc -> n_extra_channels		4863348	1					
ANR	4863401	Identifier	xc		4863348	0					
ANR	4863402	Identifier	n_extra_channels		4863348	1					
ANR	4863403	IdentifierDeclStatement	int bytes_pp = base_bytes_pp + n_extra_channels ;	1330:4:41163:41210	4863348	7	True				
ANR	4863404	IdentifierDecl	bytes_pp = base_bytes_pp + n_extra_channels		4863348	0					
ANR	4863405	IdentifierDeclType	int		4863348	0					
ANR	4863406	Identifier	bytes_pp		4863348	1					
ANR	4863407	AssignmentExpression	bytes_pp = base_bytes_pp + n_extra_channels		4863348	2		=			
ANR	4863408	Identifier	bytes_pp		4863348	0					
ANR	4863409	AdditiveExpression	base_bytes_pp + n_extra_channels		4863348	1		+			
ANR	4863410	Identifier	base_bytes_pp		4863348	0					
ANR	4863411	Identifier	n_extra_channels		4863348	1					
ANR	4863412	IdentifierDeclStatement	int chan_idx ;	1331:4:41216:41228	4863348	8	True				
ANR	4863413	IdentifierDecl	chan_idx		4863348	0					
ANR	4863414	IdentifierDeclType	int		4863348	0					
ANR	4863415	Identifier	chan_idx		4863348	1					
ANR	4863416	IdentifierDeclStatement	xcf_device * xdev = ( xcf_device * ) pdev ;	1332:4:41234:41271	4863348	9	True				
ANR	4863417	IdentifierDecl	* xdev = ( xcf_device * ) pdev		4863348	0					
ANR	4863418	IdentifierDeclType	xcf_device *		4863348	0					
ANR	4863419	Identifier	xdev		4863348	1					
ANR	4863420	AssignmentExpression	* xdev = ( xcf_device * ) pdev		4863348	2		=			
ANR	4863421	Identifier	xdev		4863348	0					
ANR	4863422	CastExpression	( xcf_device * ) pdev		4863348	1					
ANR	4863423	CastTarget	xcf_device *		4863348	0					
ANR	4863424	Identifier	pdev		4863348	1					
ANR	4863425	IdentifierDeclStatement	gcmmhlink_t link = xdev -> output_icc_link ;	1333:4:41277:41317	4863348	10	True				
ANR	4863426	IdentifierDecl	link = xdev -> output_icc_link		4863348	0					
ANR	4863427	IdentifierDeclType	gcmmhlink_t		4863348	0					
ANR	4863428	Identifier	link		4863348	1					
ANR	4863429	AssignmentExpression	link = xdev -> output_icc_link		4863348	2		=			
ANR	4863430	Identifier	link		4863348	0					
ANR	4863431	PtrMemberAccess	xdev -> output_icc_link		4863348	1					
ANR	4863432	Identifier	xdev		4863348	0					
ANR	4863433	Identifier	output_icc_link		4863348	1					
ANR	4863434	ExpressionStatement	"line = gs_alloc_bytes ( pdev -> memory , raster , ""xcf_write_image_data"" )"	1335:4:41324:41391	4863348	11	True				
ANR	4863435	AssignmentExpression	"line = gs_alloc_bytes ( pdev -> memory , raster , ""xcf_write_image_data"" )"		4863348	0		=			
ANR	4863436	Identifier	line		4863348	0					
ANR	4863437	CallExpression	"gs_alloc_bytes ( pdev -> memory , raster , ""xcf_write_image_data"" )"		4863348	1					
ANR	4863438	Callee	gs_alloc_bytes		4863348	0					
ANR	4863439	Identifier	gs_alloc_bytes		4863348	0					
ANR	4863440	ArgumentList	pdev -> memory		4863348	1					
ANR	4863441	Argument	pdev -> memory		4863348	0					
ANR	4863442	PtrMemberAccess	pdev -> memory		4863348	0					
ANR	4863443	Identifier	pdev		4863348	0					
ANR	4863444	Identifier	memory		4863348	1					
ANR	4863445	Argument	raster		4863348	1					
ANR	4863446	Identifier	raster		4863348	0					
ANR	4863447	Argument	"""xcf_write_image_data"""		4863348	2					
ANR	4863448	PrimaryExpression	"""xcf_write_image_data"""		4863348	0					
ANR	4863449	ExpressionStatement	"tile_data = ( byte * * ) gs_alloc_bytes ( pdev -> memory , xc -> n_tiles_x * sizeof ( byte * ) , ""xcf_write_image_data"" )"	1336:4:41397:41582	4863348	12	True				
ANR	4863450	AssignmentExpression	"tile_data = ( byte * * ) gs_alloc_bytes ( pdev -> memory , xc -> n_tiles_x * sizeof ( byte * ) , ""xcf_write_image_data"" )"		4863348	0		=			
ANR	4863451	Identifier	tile_data		4863348	0					
ANR	4863452	CastExpression	"( byte * * ) gs_alloc_bytes ( pdev -> memory , xc -> n_tiles_x * sizeof ( byte * ) , ""xcf_write_image_data"" )"		4863348	1					
ANR	4863453	CastTarget	byte * *		4863348	0					
ANR	4863454	CallExpression	"gs_alloc_bytes ( pdev -> memory , xc -> n_tiles_x * sizeof ( byte * ) , ""xcf_write_image_data"" )"		4863348	1					
ANR	4863455	Callee	gs_alloc_bytes		4863348	0					
ANR	4863456	Identifier	gs_alloc_bytes		4863348	0					
ANR	4863457	ArgumentList	pdev -> memory		4863348	1					
ANR	4863458	Argument	pdev -> memory		4863348	0					
ANR	4863459	PtrMemberAccess	pdev -> memory		4863348	0					
ANR	4863460	Identifier	pdev		4863348	0					
ANR	4863461	Identifier	memory		4863348	1					
ANR	4863462	Argument	xc -> n_tiles_x * sizeof ( byte * )		4863348	1					
ANR	4863463	MultiplicativeExpression	xc -> n_tiles_x * sizeof ( byte * )		4863348	0		*			
ANR	4863464	PtrMemberAccess	xc -> n_tiles_x		4863348	0					
ANR	4863465	Identifier	xc		4863348	0					
ANR	4863466	Identifier	n_tiles_x		4863348	1					
ANR	4863467	SizeofExpression	sizeof ( byte * )		4863348	1					
ANR	4863468	Sizeof	sizeof		4863348	0					
ANR	4863469	SizeofOperand	byte *		4863348	1					
ANR	4863470	Argument	"""xcf_write_image_data"""		4863348	2					
ANR	4863471	PrimaryExpression	"""xcf_write_image_data"""		4863348	0					
ANR	4863472	ForStatement	for ( tile_i = 0 ; tile_i < xc -> n_tiles_x ; tile_i ++ )		4863348	13					
ANR	4863473	ForInit	tile_i = 0 ;	1339:9:41593:41603	4863348	0	True				
ANR	4863474	AssignmentExpression	tile_i = 0		4863348	0		=			
ANR	4863475	Identifier	tile_i		4863348	0					
ANR	4863476	PrimaryExpression	0		4863348	1					
ANR	4863477	Condition	tile_i < xc -> n_tiles_x	1339:21:41605:41626	4863348	1	True				
ANR	4863478	RelationalExpression	tile_i < xc -> n_tiles_x		4863348	0		<			
ANR	4863479	Identifier	tile_i		4863348	0					
ANR	4863480	PtrMemberAccess	xc -> n_tiles_x		4863348	1					
ANR	4863481	Identifier	xc		4863348	0					
ANR	4863482	Identifier	n_tiles_x		4863348	1					
ANR	4863483	PostIncDecOperationExpression	tile_i ++	1339:45:41629:41636	4863348	2	True				
ANR	4863484	Identifier	tile_i		4863348	0					
ANR	4863485	IncDec	++		4863348	1					
ANR	4863486	CompoundStatement		19:8:703:758	4863348	3					
ANR	4863487	IdentifierDeclStatement	"int tile_bytes = xcf_tile_sizeof ( xc , tile_i ) * bytes_pp ;"	1340:8:41649:41704	4863348	0	True				
ANR	4863488	IdentifierDecl	"tile_bytes = xcf_tile_sizeof ( xc , tile_i ) * bytes_pp"		4863348	0					
ANR	4863489	IdentifierDeclType	int		4863348	0					
ANR	4863490	Identifier	tile_bytes		4863348	1					
ANR	4863491	AssignmentExpression	"tile_bytes = xcf_tile_sizeof ( xc , tile_i ) * bytes_pp"		4863348	2		=			
ANR	4863492	Identifier	tile_bytes		4863348	0					
ANR	4863493	MultiplicativeExpression	"xcf_tile_sizeof ( xc , tile_i ) * bytes_pp"		4863348	1		*			
ANR	4863494	CallExpression	"xcf_tile_sizeof ( xc , tile_i )"		4863348	0					
ANR	4863495	Callee	xcf_tile_sizeof		4863348	0					
ANR	4863496	Identifier	xcf_tile_sizeof		4863348	0					
ANR	4863497	ArgumentList	xc		4863348	1					
ANR	4863498	Argument	xc		4863348	0					
ANR	4863499	Identifier	xc		4863348	0					
ANR	4863500	Argument	tile_i		4863348	1					
ANR	4863501	Identifier	tile_i		4863348	0					
ANR	4863502	Identifier	bytes_pp		4863348	1					
ANR	4863503	ExpressionStatement	"tile_data [ tile_i ] = gs_alloc_bytes ( pdev -> memory , tile_bytes , ""xcf_write_image_data"" )"	1342:8:41715:41842	4863348	1	True				
ANR	4863504	AssignmentExpression	"tile_data [ tile_i ] = gs_alloc_bytes ( pdev -> memory , tile_bytes , ""xcf_write_image_data"" )"		4863348	0		=			
ANR	4863505	ArrayIndexing	tile_data [ tile_i ]		4863348	0					
ANR	4863506	Identifier	tile_data		4863348	0					
ANR	4863507	Identifier	tile_i		4863348	1					
ANR	4863508	CallExpression	"gs_alloc_bytes ( pdev -> memory , tile_bytes , ""xcf_write_image_data"" )"		4863348	1					
ANR	4863509	Callee	gs_alloc_bytes		4863348	0					
ANR	4863510	Identifier	gs_alloc_bytes		4863348	0					
ANR	4863511	ArgumentList	pdev -> memory		4863348	1					
ANR	4863512	Argument	pdev -> memory		4863348	0					
ANR	4863513	PtrMemberAccess	pdev -> memory		4863348	0					
ANR	4863514	Identifier	pdev		4863348	0					
ANR	4863515	Identifier	memory		4863348	1					
ANR	4863516	Argument	tile_bytes		4863348	1					
ANR	4863517	Identifier	tile_bytes		4863348	0					
ANR	4863518	Argument	"""xcf_write_image_data"""		4863348	2					
ANR	4863519	PrimaryExpression	"""xcf_write_image_data"""		4863348	0					
ANR	4863520	ForStatement	for ( tile_j = 0 ; tile_j < xc -> n_tiles_y ; tile_j ++ )		4863348	14					
ANR	4863521	ForInit	tile_j = 0 ;	1345:9:41859:41869	4863348	0	True				
ANR	4863522	AssignmentExpression	tile_j = 0		4863348	0		=			
ANR	4863523	Identifier	tile_j		4863348	0					
ANR	4863524	PrimaryExpression	0		4863348	1					
ANR	4863525	Condition	tile_j < xc -> n_tiles_y	1345:21:41871:41892	4863348	1	True				
ANR	4863526	RelationalExpression	tile_j < xc -> n_tiles_y		4863348	0		<			
ANR	4863527	Identifier	tile_j		4863348	0					
ANR	4863528	PtrMemberAccess	xc -> n_tiles_y		4863348	1					
ANR	4863529	Identifier	xc		4863348	0					
ANR	4863530	Identifier	n_tiles_y		4863348	1					
ANR	4863531	PostIncDecOperationExpression	tile_j ++	1345:45:41895:41902	4863348	2	True				
ANR	4863532	Identifier	tile_j		4863348	0					
ANR	4863533	IncDec	++		4863348	1					
ANR	4863534	CompoundStatement		27:8:1004:1013	4863348	3					
ANR	4863535	IdentifierDeclStatement	"int y0 , y1 ;"	1346:8:41915:41925	4863348	0	True				
ANR	4863536	IdentifierDecl	y0		4863348	0					
ANR	4863537	IdentifierDeclType	int		4863348	0					
ANR	4863538	Identifier	y0		4863348	1					
ANR	4863539	IdentifierDecl	y1		4863348	1					
ANR	4863540	IdentifierDeclType	int		4863348	0					
ANR	4863541	Identifier	y1		4863348	1					
ANR	4863542	IdentifierDeclStatement	int y ;	1347:8:41935:41940	4863348	1	True				
ANR	4863543	IdentifierDecl	y		4863348	0					
ANR	4863544	IdentifierDeclType	int		4863348	0					
ANR	4863545	Identifier	y		4863348	1					
ANR	4863546	IdentifierDeclStatement	byte * row ;	1348:8:41950:41959	4863348	2	True				
ANR	4863547	IdentifierDecl	* row		4863348	0					
ANR	4863548	IdentifierDeclType	byte *		4863348	0					
ANR	4863549	Identifier	row		4863348	1					
ANR	4863550	ExpressionStatement	y0 = tile_j * TILE_HEIGHT	1350:8:41970:41995	4863348	3	True				
ANR	4863551	AssignmentExpression	y0 = tile_j * TILE_HEIGHT		4863348	0		=			
ANR	4863552	Identifier	y0		4863348	0					
ANR	4863553	MultiplicativeExpression	tile_j * TILE_HEIGHT		4863348	1		*			
ANR	4863554	Identifier	tile_j		4863348	0					
ANR	4863555	Identifier	TILE_HEIGHT		4863348	1					
ANR	4863556	ExpressionStatement	"y1 = min ( xc -> height , y0 + TILE_HEIGHT )"	1351:8:42005:42043	4863348	4	True				
ANR	4863557	AssignmentExpression	"y1 = min ( xc -> height , y0 + TILE_HEIGHT )"		4863348	0		=			
ANR	4863558	Identifier	y1		4863348	0					
ANR	4863559	CallExpression	"min ( xc -> height , y0 + TILE_HEIGHT )"		4863348	1					
ANR	4863560	Callee	min		4863348	0					
ANR	4863561	Identifier	min		4863348	0					
ANR	4863562	ArgumentList	xc -> height		4863348	1					
ANR	4863563	Argument	xc -> height		4863348	0					
ANR	4863564	PtrMemberAccess	xc -> height		4863348	0					
ANR	4863565	Identifier	xc		4863348	0					
ANR	4863566	Identifier	height		4863348	1					
ANR	4863567	Argument	y0 + TILE_HEIGHT		4863348	1					
ANR	4863568	AdditiveExpression	y0 + TILE_HEIGHT		4863348	0		+			
ANR	4863569	Identifier	y0		4863348	0					
ANR	4863570	Identifier	TILE_HEIGHT		4863348	1					
ANR	4863571	ForStatement	for ( y = y0 ; y < y1 ; y ++ )		4863348	5					
ANR	4863572	ForInit	y = y0 ;	1352:13:42058:42064	4863348	0	True				
ANR	4863573	AssignmentExpression	y = y0		4863348	0		=			
ANR	4863574	Identifier	y		4863348	0					
ANR	4863575	Identifier	y0		4863348	1					
ANR	4863576	Condition	y < y1	1352:21:42066:42071	4863348	1	True				
ANR	4863577	RelationalExpression	y < y1		4863348	0		<			
ANR	4863578	Identifier	y		4863348	0					
ANR	4863579	Identifier	y1		4863348	1					
ANR	4863580	PostIncDecOperationExpression	y ++	1352:29:42074:42076	4863348	2	True				
ANR	4863581	Identifier	y		4863348	0					
ANR	4863582	IncDec	++		4863348	1					
ANR	4863583	CompoundStatement		31:34:1133:1133	4863348	3					
ANR	4863584	ExpressionStatement	"code = gdev_prn_get_bits ( pdev , y , line , & row )"	1353:12:42093:42138	4863348	0	True				
ANR	4863585	AssignmentExpression	"code = gdev_prn_get_bits ( pdev , y , line , & row )"		4863348	0		=			
ANR	4863586	Identifier	code		4863348	0					
ANR	4863587	CallExpression	"gdev_prn_get_bits ( pdev , y , line , & row )"		4863348	1					
ANR	4863588	Callee	gdev_prn_get_bits		4863348	0					
ANR	4863589	Identifier	gdev_prn_get_bits		4863348	0					
ANR	4863590	ArgumentList	pdev		4863348	1					
ANR	4863591	Argument	pdev		4863348	0					
ANR	4863592	Identifier	pdev		4863348	0					
ANR	4863593	Argument	y		4863348	1					
ANR	4863594	Identifier	y		4863348	0					
ANR	4863595	Argument	line		4863348	2					
ANR	4863596	Identifier	line		4863348	0					
ANR	4863597	Argument	& row		4863348	3					
ANR	4863598	UnaryOperationExpression	& row		4863348	0					
ANR	4863599	UnaryOperator	&		4863348	0					
ANR	4863600	Identifier	row		4863348	1					
ANR	4863601	IfStatement	if ( link == NULL )		4863348	1					
ANR	4863602	Condition	link == NULL	1354:16:42156:42167	4863348	0	True				
ANR	4863603	EqualityExpression	link == NULL		4863348	0		==			
ANR	4863604	Identifier	link		4863348	0					
ANR	4863605	Identifier	NULL		4863348	1					
ANR	4863606	ExpressionStatement	"xcf_shuffle_to_tile ( xc , tile_data , row , y )"	1355:16:42186:42228	4863348	1	True				
ANR	4863607	CallExpression	"xcf_shuffle_to_tile ( xc , tile_data , row , y )"		4863348	0					
ANR	4863608	Callee	xcf_shuffle_to_tile		4863348	0					
ANR	4863609	Identifier	xcf_shuffle_to_tile		4863348	0					
ANR	4863610	ArgumentList	xc		4863348	1					
ANR	4863611	Argument	xc		4863348	0					
ANR	4863612	Identifier	xc		4863348	0					
ANR	4863613	Argument	tile_data		4863348	1					
ANR	4863614	Identifier	tile_data		4863348	0					
ANR	4863615	Argument	row		4863348	2					
ANR	4863616	Identifier	row		4863348	0					
ANR	4863617	Argument	y		4863348	3					
ANR	4863618	Identifier	y		4863348	0					
ANR	4863619	ElseStatement	else		4863348	0					
ANR	4863620	ExpressionStatement	"xcf_icc_to_tile ( pdev , xc , tile_data , row , y , link )"	1357:16:42263:42313	4863348	0	True				
ANR	4863621	CallExpression	"xcf_icc_to_tile ( pdev , xc , tile_data , row , y , link )"		4863348	0					
ANR	4863622	Callee	xcf_icc_to_tile		4863348	0					
ANR	4863623	Identifier	xcf_icc_to_tile		4863348	0					
ANR	4863624	ArgumentList	pdev		4863348	1					
ANR	4863625	Argument	pdev		4863348	0					
ANR	4863626	Identifier	pdev		4863348	0					
ANR	4863627	Argument	xc		4863348	1					
ANR	4863628	Identifier	xc		4863348	0					
ANR	4863629	Argument	tile_data		4863348	2					
ANR	4863630	Identifier	tile_data		4863348	0					
ANR	4863631	Argument	row		4863348	3					
ANR	4863632	Identifier	row		4863348	0					
ANR	4863633	Argument	y		4863348	4					
ANR	4863634	Identifier	y		4863348	0					
ANR	4863635	Argument	link		4863348	5					
ANR	4863636	Identifier	link		4863348	0					
ANR	4863637	ForStatement	for ( tile_i = 0 ; tile_i < xc -> n_tiles_x ; tile_i ++ )		4863348	6					
ANR	4863638	ForInit	tile_i = 0 ;	1359:13:42338:42348	4863348	0	True				
ANR	4863639	AssignmentExpression	tile_i = 0		4863348	0		=			
ANR	4863640	Identifier	tile_i		4863348	0					
ANR	4863641	PrimaryExpression	0		4863348	1					
ANR	4863642	Condition	tile_i < xc -> n_tiles_x	1359:25:42350:42371	4863348	1	True				
ANR	4863643	RelationalExpression	tile_i < xc -> n_tiles_x		4863348	0		<			
ANR	4863644	Identifier	tile_i		4863348	0					
ANR	4863645	PtrMemberAccess	xc -> n_tiles_x		4863348	1					
ANR	4863646	Identifier	xc		4863348	0					
ANR	4863647	Identifier	n_tiles_x		4863348	1					
ANR	4863648	PostIncDecOperationExpression	tile_i ++	1359:49:42374:42381	4863348	2	True				
ANR	4863649	Identifier	tile_i		4863348	0					
ANR	4863650	IncDec	++		4863348	1					
ANR	4863651	CompoundStatement		41:12:1571:1612	4863348	3					
ANR	4863652	IdentifierDeclStatement	int tile_idx = tile_j * xc -> n_tiles_x + tile_i ;	1360:12:42398:42444	4863348	0	True				
ANR	4863653	IdentifierDecl	tile_idx = tile_j * xc -> n_tiles_x + tile_i		4863348	0					
ANR	4863654	IdentifierDeclType	int		4863348	0					
ANR	4863655	Identifier	tile_idx		4863348	1					
ANR	4863656	AssignmentExpression	tile_idx = tile_j * xc -> n_tiles_x + tile_i		4863348	2		=			
ANR	4863657	Identifier	tile_idx		4863348	0					
ANR	4863658	AdditiveExpression	tile_j * xc -> n_tiles_x + tile_i		4863348	1		+			
ANR	4863659	MultiplicativeExpression	tile_j * xc -> n_tiles_x		4863348	0		*			
ANR	4863660	Identifier	tile_j		4863348	0					
ANR	4863661	PtrMemberAccess	xc -> n_tiles_x		4863348	1					
ANR	4863662	Identifier	xc		4863348	0					
ANR	4863663	Identifier	n_tiles_x		4863348	1					
ANR	4863664	Identifier	tile_i		4863348	1					
ANR	4863665	IdentifierDeclStatement	"int tile_size = xcf_tile_sizeof ( xc , tile_idx ) ;"	1361:12:42458:42503	4863348	1	True				
ANR	4863666	IdentifierDecl	"tile_size = xcf_tile_sizeof ( xc , tile_idx )"		4863348	0					
ANR	4863667	IdentifierDeclType	int		4863348	0					
ANR	4863668	Identifier	tile_size		4863348	1					
ANR	4863669	AssignmentExpression	"tile_size = xcf_tile_sizeof ( xc , tile_idx )"		4863348	2		=			
ANR	4863670	Identifier	tile_size		4863348	0					
ANR	4863671	CallExpression	"xcf_tile_sizeof ( xc , tile_idx )"		4863348	1					
ANR	4863672	Callee	xcf_tile_sizeof		4863348	0					
ANR	4863673	Identifier	xcf_tile_sizeof		4863348	0					
ANR	4863674	ArgumentList	xc		4863348	1					
ANR	4863675	Argument	xc		4863348	0					
ANR	4863676	Identifier	xc		4863348	0					
ANR	4863677	Argument	tile_idx		4863348	1					
ANR	4863678	Identifier	tile_idx		4863348	0					
ANR	4863679	IdentifierDeclStatement	int base_size = tile_size * base_bytes_pp ;	1362:12:42517:42558	4863348	2	True				
ANR	4863680	IdentifierDecl	base_size = tile_size * base_bytes_pp		4863348	0					
ANR	4863681	IdentifierDeclType	int		4863348	0					
ANR	4863682	Identifier	base_size		4863348	1					
ANR	4863683	AssignmentExpression	base_size = tile_size * base_bytes_pp		4863348	2		=			
ANR	4863684	Identifier	base_size		4863348	0					
ANR	4863685	MultiplicativeExpression	tile_size * base_bytes_pp		4863348	1		*			
ANR	4863686	Identifier	tile_size		4863348	0					
ANR	4863687	Identifier	base_bytes_pp		4863348	1					
ANR	4863688	ExpressionStatement	"xcf_write ( xc , tile_data [ tile_i ] , base_size )"	1364:12:42573:42616	4863348	3	True				
ANR	4863689	CallExpression	"xcf_write ( xc , tile_data [ tile_i ] , base_size )"		4863348	0					
ANR	4863690	Callee	xcf_write		4863348	0					
ANR	4863691	Identifier	xcf_write		4863348	0					
ANR	4863692	ArgumentList	xc		4863348	1					
ANR	4863693	Argument	xc		4863348	0					
ANR	4863694	Identifier	xc		4863348	0					
ANR	4863695	Argument	tile_data [ tile_i ]		4863348	1					
ANR	4863696	ArrayIndexing	tile_data [ tile_i ]		4863348	0					
ANR	4863697	Identifier	tile_data		4863348	0					
ANR	4863698	Identifier	tile_i		4863348	1					
ANR	4863699	Argument	base_size		4863348	2					
ANR	4863700	Identifier	base_size		4863348	0					
ANR	4863701	ForStatement	for ( chan_idx = 0 ; chan_idx < n_extra_channels ; chan_idx ++ )		4863348	4					
ANR	4863702	ForInit	chan_idx = 0 ;	1365:17:42635:42647	4863348	0	True				
ANR	4863703	AssignmentExpression	chan_idx = 0		4863348	0		=			
ANR	4863704	Identifier	chan_idx		4863348	0					
ANR	4863705	PrimaryExpression	0		4863348	1					
ANR	4863706	Condition	chan_idx < n_extra_channels	1365:31:42649:42675	4863348	1	True				
ANR	4863707	RelationalExpression	chan_idx < n_extra_channels		4863348	0		<			
ANR	4863708	Identifier	chan_idx		4863348	0					
ANR	4863709	Identifier	n_extra_channels		4863348	1					
ANR	4863710	PostIncDecOperationExpression	chan_idx ++	1365:60:42678:42687	4863348	2	True				
ANR	4863711	Identifier	chan_idx		4863348	0					
ANR	4863712	IncDec	++		4863348	1					
ANR	4863713	CompoundStatement		44:72:1744:1744	4863348	3					
ANR	4863714	ExpressionStatement	"xcf_write ( xc , tile_data [ tile_i ] + base_size + tile_size * chan_idx , tile_size )"	1366:16:42708:42812	4863348	0	True				
ANR	4863715	CallExpression	"xcf_write ( xc , tile_data [ tile_i ] + base_size + tile_size * chan_idx , tile_size )"		4863348	0					
ANR	4863716	Callee	xcf_write		4863348	0					
ANR	4863717	Identifier	xcf_write		4863348	0					
ANR	4863718	ArgumentList	xc		4863348	1					
ANR	4863719	Argument	xc		4863348	0					
ANR	4863720	Identifier	xc		4863348	0					
ANR	4863721	Argument	tile_data [ tile_i ] + base_size + tile_size * chan_idx		4863348	1					
ANR	4863722	AdditiveExpression	tile_data [ tile_i ] + base_size + tile_size * chan_idx		4863348	0		+			
ANR	4863723	ArrayIndexing	tile_data [ tile_i ]		4863348	0					
ANR	4863724	Identifier	tile_data		4863348	0					
ANR	4863725	Identifier	tile_i		4863348	1					
ANR	4863726	AdditiveExpression	base_size + tile_size * chan_idx		4863348	1		+			
ANR	4863727	Identifier	base_size		4863348	0					
ANR	4863728	MultiplicativeExpression	tile_size * chan_idx		4863348	1		*			
ANR	4863729	Identifier	tile_size		4863348	0					
ANR	4863730	Identifier	chan_idx		4863348	1					
ANR	4863731	Argument	tile_size		4863348	2					
ANR	4863732	Identifier	tile_size		4863348	0					
ANR	4863733	ForStatement	for ( tile_i = 0 ; tile_i < xc -> n_tiles_x ; tile_i ++ )		4863348	15					
ANR	4863734	ForInit	tile_i = 0 ;	1372:9:42854:42864	4863348	0	True				
ANR	4863735	AssignmentExpression	tile_i = 0		4863348	0		=			
ANR	4863736	Identifier	tile_i		4863348	0					
ANR	4863737	PrimaryExpression	0		4863348	1					
ANR	4863738	Condition	tile_i < xc -> n_tiles_x	1372:21:42866:42887	4863348	1	True				
ANR	4863739	RelationalExpression	tile_i < xc -> n_tiles_x		4863348	0		<			
ANR	4863740	Identifier	tile_i		4863348	0					
ANR	4863741	PtrMemberAccess	xc -> n_tiles_x		4863348	1					
ANR	4863742	Identifier	xc		4863348	0					
ANR	4863743	Identifier	n_tiles_x		4863348	1					
ANR	4863744	PostIncDecOperationExpression	tile_i ++	1372:45:42890:42897	4863348	2	True				
ANR	4863745	Identifier	tile_i		4863348	0					
ANR	4863746	IncDec	++		4863348	1					
ANR	4863747	CompoundStatement		51:55:1954:1954	4863348	3					
ANR	4863748	ExpressionStatement	"gs_free_object ( pdev -> memory , tile_data [ tile_i ] , ""xcf_write_image_data"" )"	1373:8:42910:42997	4863348	0	True				
ANR	4863749	CallExpression	"gs_free_object ( pdev -> memory , tile_data [ tile_i ] , ""xcf_write_image_data"" )"		4863348	0					
ANR	4863750	Callee	gs_free_object		4863348	0					
ANR	4863751	Identifier	gs_free_object		4863348	0					
ANR	4863752	ArgumentList	pdev -> memory		4863348	1					
ANR	4863753	Argument	pdev -> memory		4863348	0					
ANR	4863754	PtrMemberAccess	pdev -> memory		4863348	0					
ANR	4863755	Identifier	pdev		4863348	0					
ANR	4863756	Identifier	memory		4863348	1					
ANR	4863757	Argument	tile_data [ tile_i ]		4863348	1					
ANR	4863758	ArrayIndexing	tile_data [ tile_i ]		4863348	0					
ANR	4863759	Identifier	tile_data		4863348	0					
ANR	4863760	Identifier	tile_i		4863348	1					
ANR	4863761	Argument	"""xcf_write_image_data"""		4863348	2					
ANR	4863762	PrimaryExpression	"""xcf_write_image_data"""		4863348	0					
ANR	4863763	ExpressionStatement	"gs_free_object ( pdev -> memory , tile_data , ""xcf_write_image_data"" )"	1376:4:43009:43072	4863348	16	True				
ANR	4863764	CallExpression	"gs_free_object ( pdev -> memory , tile_data , ""xcf_write_image_data"" )"		4863348	0					
ANR	4863765	Callee	gs_free_object		4863348	0					
ANR	4863766	Identifier	gs_free_object		4863348	0					
ANR	4863767	ArgumentList	pdev -> memory		4863348	1					
ANR	4863768	Argument	pdev -> memory		4863348	0					
ANR	4863769	PtrMemberAccess	pdev -> memory		4863348	0					
ANR	4863770	Identifier	pdev		4863348	0					
ANR	4863771	Identifier	memory		4863348	1					
ANR	4863772	Argument	tile_data		4863348	1					
ANR	4863773	Identifier	tile_data		4863348	0					
ANR	4863774	Argument	"""xcf_write_image_data"""		4863348	2					
ANR	4863775	PrimaryExpression	"""xcf_write_image_data"""		4863348	0					
ANR	4863776	ExpressionStatement	"gs_free_object ( pdev -> memory , line , ""xcf_write_image_data"" )"	1377:4:43078:43136	4863348	17	True				
ANR	4863777	CallExpression	"gs_free_object ( pdev -> memory , line , ""xcf_write_image_data"" )"		4863348	0					
ANR	4863778	Callee	gs_free_object		4863348	0					
ANR	4863779	Identifier	gs_free_object		4863348	0					
ANR	4863780	ArgumentList	pdev -> memory		4863348	1					
ANR	4863781	Argument	pdev -> memory		4863348	0					
ANR	4863782	PtrMemberAccess	pdev -> memory		4863348	0					
ANR	4863783	Identifier	pdev		4863348	0					
ANR	4863784	Identifier	memory		4863348	1					
ANR	4863785	Argument	line		4863348	1					
ANR	4863786	Identifier	line		4863348	0					
ANR	4863787	Argument	"""xcf_write_image_data"""		4863348	2					
ANR	4863788	PrimaryExpression	"""xcf_write_image_data"""		4863348	0					
ANR	4863789	ReturnStatement	return code ;	1378:4:43142:43153	4863348	18	True				
ANR	4863790	Identifier	code		4863348	0					
ANR	4863791	ReturnType	static int		4863348	1					
ANR	4863792	Identifier	xcf_write_image_data		4863348	2					
ANR	4863793	ParameterList	"xcf_write_ctx * xc , gx_device_printer * pdev"		4863348	3					
ANR	4863794	Parameter	xcf_write_ctx * xc	1321:21:40901:40917	4863348	0	True				
ANR	4863795	ParameterType	xcf_write_ctx *		4863348	0					
ANR	4863796	Identifier	xc		4863348	1					
ANR	4863797	Parameter	gx_device_printer * pdev	1321:40:40920:40942	4863348	1	True				
ANR	4863798	ParameterType	gx_device_printer *		4863348	0					
ANR	4863799	Identifier	pdev		4863348	1					
ANR	4863800	CFGEntryNode	ENTRY		4863348		True				
ANR	4863801	CFGExitNode	EXIT		4863348		True				
ANR	4863802	Symbol	code		4863348						
ANR	4863803	Symbol	line		4863348						
ANR	4863804	Symbol	xcf_tile_sizeof		4863348						
ANR	4863805	Symbol	& row		4863348						
ANR	4863806	Symbol	link		4863348						
ANR	4863807	Symbol	base_bytes_pp		4863348						
ANR	4863808	Symbol	chan_idx		4863348						
ANR	4863809	Symbol	* tile_data		4863348						
ANR	4863810	Symbol	pdev		4863348						
ANR	4863811	Symbol	tile_idx		4863348						
ANR	4863812	Symbol	min		4863348						
ANR	4863813	Symbol	base_size		4863348						
ANR	4863814	Symbol	pdev -> memory		4863348						
ANR	4863815	Symbol	y0		4863348						
ANR	4863816	Symbol	y1		4863348						
ANR	4863817	Symbol	gdev_prn_get_bits		4863348						
ANR	4863818	Symbol	tile_data		4863348						
ANR	4863819	Symbol	row		4863348						
ANR	4863820	Symbol	TILE_HEIGHT		4863348						
ANR	4863821	Symbol	gs_alloc_bytes		4863348						
ANR	4863822	Symbol	NULL		4863348						
ANR	4863823	Symbol	xc -> n_extra_channels		4863348						
ANR	4863824	Symbol	xdev		4863348						
ANR	4863825	Symbol	raster		4863348						
ANR	4863826	Symbol	bytes_pp		4863348						
ANR	4863827	Symbol	xdev -> output_icc_link		4863348						
ANR	4863828	Symbol	n_extra_channels		4863348						
ANR	4863829	Symbol	xc		4863348						
ANR	4863830	Symbol	* tile_i		4863348						
ANR	4863831	Symbol	xc -> n_tiles_x		4863348						
ANR	4863832	Symbol	* xc		4863348						
ANR	4863833	Symbol	tile_i		4863348						
ANR	4863834	Symbol	xc -> height		4863348						
ANR	4863835	Symbol	tile_j		4863348						
ANR	4863836	Symbol	* xdev		4863348						
ANR	4863837	Symbol	xc -> n_tiles_y		4863348						
ANR	4863838	Symbol	* pdev		4863348						
ANR	4863839	Symbol	y		4863348						
ANR	4863840	Symbol	tile_size		4863348						
ANR	4863841	Symbol	xc -> base_bytes_pp		4863348						
ANR	4863842	Symbol	tile_bytes		4863348						
ANR	4863843	Symbol	gdev_prn_raster		4863348						
ANR	4863844	Function	xcf_write_fake_hierarchy	1381:0:43158:43481							
ANR	4863845	FunctionDef	xcf_write_fake_hierarchy (xcf_write_ctx * xc)		4863844	0					
ANR	4863846	CompoundStatement		1383:0:43213:43481	4863844	0					
ANR	4863847	IdentifierDeclStatement	"int widthf = xc -> width , heightf = xc -> height ;"	1384:4:43219:43263	4863844	0	True				
ANR	4863848	IdentifierDecl	widthf = xc -> width		4863844	0					
ANR	4863849	IdentifierDeclType	int		4863844	0					
ANR	4863850	Identifier	widthf		4863844	1					
ANR	4863851	AssignmentExpression	widthf = xc -> width		4863844	2		=			
ANR	4863852	Identifier	widthf		4863844	0					
ANR	4863853	PtrMemberAccess	xc -> width		4863844	1					
ANR	4863854	Identifier	xc		4863844	0					
ANR	4863855	Identifier	width		4863844	1					
ANR	4863856	IdentifierDecl	heightf = xc -> height		4863844	1					
ANR	4863857	IdentifierDeclType	int		4863844	0					
ANR	4863858	Identifier	heightf		4863844	1					
ANR	4863859	AssignmentExpression	heightf = xc -> height		4863844	2		=			
ANR	4863860	Identifier	heightf		4863844	0					
ANR	4863861	PtrMemberAccess	xc -> height		4863844	1					
ANR	4863862	Identifier	xc		4863844	0					
ANR	4863863	Identifier	height		4863844	1					
ANR	4863864	IdentifierDeclStatement	int i ;	1385:4:43269:43274	4863844	1	True				
ANR	4863865	IdentifierDecl	i		4863844	0					
ANR	4863866	IdentifierDeclType	int		4863844	0					
ANR	4863867	Identifier	i		4863844	1					
ANR	4863868	ForStatement	for ( i = 1 ; i < xc -> n_levels ; i ++ )		4863844	2					
ANR	4863869	ForInit	i = 1 ;	1387:9:43286:43291	4863844	0	True				
ANR	4863870	AssignmentExpression	i = 1		4863844	0		=			
ANR	4863871	Identifier	i		4863844	0					
ANR	4863872	PrimaryExpression	1		4863844	1					
ANR	4863873	Condition	i < xc -> n_levels	1387:16:43293:43308	4863844	1	True				
ANR	4863874	RelationalExpression	i < xc -> n_levels		4863844	0		<			
ANR	4863875	Identifier	i		4863844	0					
ANR	4863876	PtrMemberAccess	xc -> n_levels		4863844	1					
ANR	4863877	Identifier	xc		4863844	0					
ANR	4863878	Identifier	n_levels		4863844	1					
ANR	4863879	PostIncDecOperationExpression	i ++	1387:34:43311:43313	4863844	2	True				
ANR	4863880	Identifier	i		4863844	0					
ANR	4863881	IncDec	++		4863844	1					
ANR	4863882	CompoundStatement		5:39:102:102	4863844	3					
ANR	4863883	ExpressionStatement	widthf >>= 1	1388:8:43326:43338	4863844	0	True				
ANR	4863884	AssignmentExpression	widthf >>= 1		4863844	0		>>=			
ANR	4863885	Identifier	widthf		4863844	0					
ANR	4863886	PrimaryExpression	1		4863844	1					
ANR	4863887	ExpressionStatement	heightf >>= 1	1389:8:43348:43361	4863844	1	True				
ANR	4863888	AssignmentExpression	heightf >>= 1		4863844	0		>>=			
ANR	4863889	Identifier	heightf		4863844	0					
ANR	4863890	PrimaryExpression	1		4863844	1					
ANR	4863891	ExpressionStatement	"xcf_write_32 ( xc , widthf )"	1390:8:43371:43395	4863844	2	True				
ANR	4863892	CallExpression	"xcf_write_32 ( xc , widthf )"		4863844	0					
ANR	4863893	Callee	xcf_write_32		4863844	0					
ANR	4863894	Identifier	xcf_write_32		4863844	0					
ANR	4863895	ArgumentList	xc		4863844	1					
ANR	4863896	Argument	xc		4863844	0					
ANR	4863897	Identifier	xc		4863844	0					
ANR	4863898	Argument	widthf		4863844	1					
ANR	4863899	Identifier	widthf		4863844	0					
ANR	4863900	ExpressionStatement	"xcf_write_32 ( xc , heightf )"	1391:8:43405:43430	4863844	3	True				
ANR	4863901	CallExpression	"xcf_write_32 ( xc , heightf )"		4863844	0					
ANR	4863902	Callee	xcf_write_32		4863844	0					
ANR	4863903	Identifier	xcf_write_32		4863844	0					
ANR	4863904	ArgumentList	xc		4863844	1					
ANR	4863905	Argument	xc		4863844	0					
ANR	4863906	Identifier	xc		4863844	0					
ANR	4863907	Argument	heightf		4863844	1					
ANR	4863908	Identifier	heightf		4863844	0					
ANR	4863909	ExpressionStatement	"xcf_write_32 ( xc , 0 )"	1392:8:43440:43459	4863844	4	True				
ANR	4863910	CallExpression	"xcf_write_32 ( xc , 0 )"		4863844	0					
ANR	4863911	Callee	xcf_write_32		4863844	0					
ANR	4863912	Identifier	xcf_write_32		4863844	0					
ANR	4863913	ArgumentList	xc		4863844	1					
ANR	4863914	Argument	xc		4863844	0					
ANR	4863915	Identifier	xc		4863844	0					
ANR	4863916	Argument	0		4863844	1					
ANR	4863917	PrimaryExpression	0		4863844	0					
ANR	4863918	ReturnStatement	return 0 ;	1394:4:43471:43479	4863844	3	True				
ANR	4863919	PrimaryExpression	0		4863844	0					
ANR	4863920	ReturnType	static int		4863844	1					
ANR	4863921	Identifier	xcf_write_fake_hierarchy		4863844	2					
ANR	4863922	ParameterList	xcf_write_ctx * xc		4863844	3					
ANR	4863923	Parameter	xcf_write_ctx * xc	1382:25:43194:43210	4863844	0	True				
ANR	4863924	ParameterType	xcf_write_ctx *		4863844	0					
ANR	4863925	Identifier	xc		4863844	1					
ANR	4863926	CFGEntryNode	ENTRY		4863844		True				
ANR	4863927	CFGExitNode	EXIT		4863844		True				
ANR	4863928	Symbol	* xc		4863844						
ANR	4863929	Symbol	xc -> height		4863844						
ANR	4863930	Symbol	xc -> width		4863844						
ANR	4863931	Symbol	heightf		4863844						
ANR	4863932	Symbol	widthf		4863844						
ANR	4863933	Symbol	i		4863844						
ANR	4863934	Symbol	xc		4863844						
ANR	4863935	Symbol	xc -> n_levels		4863844						
ANR	4863936	Function	xcf_write_footer	1397:0:43484:45413							
ANR	4863937	FunctionDef	"xcf_write_footer (xcf_write_ctx * xc , xcf_device * pdev)"		4863936	0					
ANR	4863938	CompoundStatement		1399:0:43549:45413	4863936	0					
ANR	4863939	IdentifierDeclStatement	int code = 0 ;	1400:4:43555:43567	4863936	0	True				
ANR	4863940	IdentifierDecl	code = 0		4863936	0					
ANR	4863941	IdentifierDeclType	int		4863936	0					
ANR	4863942	Identifier	code		4863936	1					
ANR	4863943	AssignmentExpression	code = 0		4863936	2		=			
ANR	4863944	Identifier	code		4863936	0					
ANR	4863945	PrimaryExpression	0		4863936	1					
ANR	4863946	IdentifierDeclStatement	int base_bytes_pp = xc -> base_bytes_pp ;	1401:4:43573:43610	4863936	1	True				
ANR	4863947	IdentifierDecl	base_bytes_pp = xc -> base_bytes_pp		4863936	0					
ANR	4863948	IdentifierDeclType	int		4863936	0					
ANR	4863949	Identifier	base_bytes_pp		4863936	1					
ANR	4863950	AssignmentExpression	base_bytes_pp = xc -> base_bytes_pp		4863936	2		=			
ANR	4863951	Identifier	base_bytes_pp		4863936	0					
ANR	4863952	PtrMemberAccess	xc -> base_bytes_pp		4863936	1					
ANR	4863953	Identifier	xc		4863936	0					
ANR	4863954	Identifier	base_bytes_pp		4863936	1					
ANR	4863955	IdentifierDeclStatement	int n_extra_channels = xc -> n_extra_channels ;	1402:4:43616:43659	4863936	2	True				
ANR	4863956	IdentifierDecl	n_extra_channels = xc -> n_extra_channels		4863936	0					
ANR	4863957	IdentifierDeclType	int		4863936	0					
ANR	4863958	Identifier	n_extra_channels		4863936	1					
ANR	4863959	AssignmentExpression	n_extra_channels = xc -> n_extra_channels		4863936	2		=			
ANR	4863960	Identifier	n_extra_channels		4863936	0					
ANR	4863961	PtrMemberAccess	xc -> n_extra_channels		4863936	1					
ANR	4863962	Identifier	xc		4863936	0					
ANR	4863963	Identifier	n_extra_channels		4863936	1					
ANR	4863964	IdentifierDeclStatement	int bytes_pp = base_bytes_pp + n_extra_channels ;	1403:4:43665:43712	4863936	3	True				
ANR	4863965	IdentifierDecl	bytes_pp = base_bytes_pp + n_extra_channels		4863936	0					
ANR	4863966	IdentifierDeclType	int		4863936	0					
ANR	4863967	Identifier	bytes_pp		4863936	1					
ANR	4863968	AssignmentExpression	bytes_pp = base_bytes_pp + n_extra_channels		4863936	2		=			
ANR	4863969	Identifier	bytes_pp		4863936	0					
ANR	4863970	AdditiveExpression	base_bytes_pp + n_extra_channels		4863936	1		+			
ANR	4863971	Identifier	base_bytes_pp		4863936	0					
ANR	4863972	Identifier	n_extra_channels		4863936	1					
ANR	4863973	IdentifierDeclStatement	int chan_idx ;	1404:4:43718:43730	4863936	4	True				
ANR	4863974	IdentifierDecl	chan_idx		4863936	0					
ANR	4863975	IdentifierDeclType	int		4863936	0					
ANR	4863976	Identifier	chan_idx		4863936	1					
ANR	4863977	ExpressionStatement	xcf_write_fake_hierarchy ( xc )	1406:4:43737:43765	4863936	5	True				
ANR	4863978	CallExpression	xcf_write_fake_hierarchy ( xc )		4863936	0					
ANR	4863979	Callee	xcf_write_fake_hierarchy		4863936	0					
ANR	4863980	Identifier	xcf_write_fake_hierarchy		4863936	0					
ANR	4863981	ArgumentList	xc		4863936	1					
ANR	4863982	Argument	xc		4863936	0					
ANR	4863983	Identifier	xc		4863936	0					
ANR	4863984	ForStatement	for ( chan_idx = 0 ; chan_idx < xc -> n_extra_channels ; chan_idx ++ )		4863936	6					
ANR	4863985	ForInit	chan_idx = 0 ;	1408:9:43777:43789	4863936	0	True				
ANR	4863986	AssignmentExpression	chan_idx = 0		4863936	0		=			
ANR	4863987	Identifier	chan_idx		4863936	0					
ANR	4863988	PrimaryExpression	0		4863936	1					
ANR	4863989	Condition	chan_idx < xc -> n_extra_channels	1408:23:43791:43821	4863936	1	True				
ANR	4863990	RelationalExpression	chan_idx < xc -> n_extra_channels		4863936	0		<			
ANR	4863991	Identifier	chan_idx		4863936	0					
ANR	4863992	PtrMemberAccess	xc -> n_extra_channels		4863936	1					
ANR	4863993	Identifier	xc		4863936	0					
ANR	4863994	Identifier	n_extra_channels		4863936	1					
ANR	4863995	PostIncDecOperationExpression	chan_idx ++	1408:56:43824:43833	4863936	2	True				
ANR	4863996	Identifier	chan_idx		4863936	0					
ANR	4863997	IncDec	++		4863936	1					
ANR	4863998	CompoundStatement		16:8:469:481	4863936	3					
ANR	4863999	IdentifierDeclStatement	const gs_param_string * separation_name = pdev -> separation_names . names [ chan_idx ] ;	1409:8:43846:43937	4863936	0	True				
ANR	4864000	IdentifierDecl	* separation_name = pdev -> separation_names . names [ chan_idx ]		4863936	0					
ANR	4864001	IdentifierDeclType	const gs_param_string *		4863936	0					
ANR	4864002	Identifier	separation_name		4863936	1					
ANR	4864003	AssignmentExpression	* separation_name = pdev -> separation_names . names [ chan_idx ]		4863936	2		=			
ANR	4864004	Identifier	separation_name		4863936	0					
ANR	4864005	ArrayIndexing	pdev -> separation_names . names [ chan_idx ]		4863936	1					
ANR	4864006	MemberAccess	pdev -> separation_names . names		4863936	0					
ANR	4864007	PtrMemberAccess	pdev -> separation_names		4863936	0					
ANR	4864008	Identifier	pdev		4863936	0					
ANR	4864009	Identifier	separation_names		4863936	1					
ANR	4864010	Identifier	names		4863936	1					
ANR	4864011	Identifier	chan_idx		4863936	1					
ANR	4864012	IdentifierDeclStatement	byte nullbyte [ ] = { 0 } ;	1411:8:43947:43970	4863936	1	True				
ANR	4864013	IdentifierDecl	nullbyte [ ] = { 0 }		4863936	0					
ANR	4864014	IdentifierDeclType	byte [ ]		4863936	0					
ANR	4864015	Identifier	nullbyte		4863936	1					
ANR	4864016	AssignmentExpression	nullbyte [ ] = { 0 }		4863936	2		=			
ANR	4864017	Identifier	nullbyte		4863936	0					
ANR	4864018	InitializerList	0		4863936	1					
ANR	4864019	PrimaryExpression	0		4863936	0					
ANR	4864020	IdentifierDeclStatement	int level ;	1412:8:43980:43989	4863936	2	True				
ANR	4864021	IdentifierDecl	level		4863936	0					
ANR	4864022	IdentifierDeclType	int		4863936	0					
ANR	4864023	Identifier	level		4863936	1					
ANR	4864024	IdentifierDeclStatement	int offset ;	1413:8:43999:44009	4863936	3	True				
ANR	4864025	IdentifierDecl	offset		4863936	0					
ANR	4864026	IdentifierDeclType	int		4863936	0					
ANR	4864027	Identifier	offset		4863936	1					
ANR	4864028	IdentifierDeclStatement	int tile_idx ;	1414:8:44019:44031	4863936	4	True				
ANR	4864029	IdentifierDecl	tile_idx		4863936	0					
ANR	4864030	IdentifierDeclType	int		4863936	0					
ANR	4864031	Identifier	tile_idx		4863936	1					
ANR	4864032	ExpressionStatement	"dmlprintf2 ( pdev -> memory , ""actual tile offset: %d %d\\n"" , xc -> offset , ( int ) ARCH_SIZEOF_COLOR_INDEX )"	1416:8:44042:44139	4863936	5	True				
ANR	4864033	CallExpression	"dmlprintf2 ( pdev -> memory , ""actual tile offset: %d %d\\n"" , xc -> offset , ( int ) ARCH_SIZEOF_COLOR_INDEX )"		4863936	0					
ANR	4864034	Callee	dmlprintf2		4863936	0					
ANR	4864035	Identifier	dmlprintf2		4863936	0					
ANR	4864036	ArgumentList	pdev -> memory		4863936	1					
ANR	4864037	Argument	pdev -> memory		4863936	0					
ANR	4864038	PtrMemberAccess	pdev -> memory		4863936	0					
ANR	4864039	Identifier	pdev		4863936	0					
ANR	4864040	Identifier	memory		4863936	1					
ANR	4864041	Argument	"""actual tile offset: %d %d\\n"""		4863936	1					
ANR	4864042	PrimaryExpression	"""actual tile offset: %d %d\\n"""		4863936	0					
ANR	4864043	Argument	xc -> offset		4863936	2					
ANR	4864044	PtrMemberAccess	xc -> offset		4863936	0					
ANR	4864045	Identifier	xc		4863936	0					
ANR	4864046	Identifier	offset		4863936	1					
ANR	4864047	Argument	( int ) ARCH_SIZEOF_COLOR_INDEX		4863936	3					
ANR	4864048	CastExpression	( int ) ARCH_SIZEOF_COLOR_INDEX		4863936	0					
ANR	4864049	CastTarget	int		4863936	0					
ANR	4864050	Identifier	ARCH_SIZEOF_COLOR_INDEX		4863936	1					
ANR	4864051	ExpressionStatement	"xcf_write_32 ( xc , xc -> width )"	1417:8:44149:44176	4863936	6	True				
ANR	4864052	CallExpression	"xcf_write_32 ( xc , xc -> width )"		4863936	0					
ANR	4864053	Callee	xcf_write_32		4863936	0					
ANR	4864054	Identifier	xcf_write_32		4863936	0					
ANR	4864055	ArgumentList	xc		4863936	1					
ANR	4864056	Argument	xc		4863936	0					
ANR	4864057	Identifier	xc		4863936	0					
ANR	4864058	Argument	xc -> width		4863936	1					
ANR	4864059	PtrMemberAccess	xc -> width		4863936	0					
ANR	4864060	Identifier	xc		4863936	0					
ANR	4864061	Identifier	width		4863936	1					
ANR	4864062	ExpressionStatement	"xcf_write_32 ( xc , xc -> height )"	1418:8:44186:44214	4863936	7	True				
ANR	4864063	CallExpression	"xcf_write_32 ( xc , xc -> height )"		4863936	0					
ANR	4864064	Callee	xcf_write_32		4863936	0					
ANR	4864065	Identifier	xcf_write_32		4863936	0					
ANR	4864066	ArgumentList	xc		4863936	1					
ANR	4864067	Argument	xc		4863936	0					
ANR	4864068	Identifier	xc		4863936	0					
ANR	4864069	Argument	xc -> height		4863936	1					
ANR	4864070	PtrMemberAccess	xc -> height		4863936	0					
ANR	4864071	Identifier	xc		4863936	0					
ANR	4864072	Identifier	height		4863936	1					
ANR	4864073	ExpressionStatement	"xcf_write_32 ( xc , separation_name -> size + 1 )"	1419:8:44224:44267	4863936	8	True				
ANR	4864074	CallExpression	"xcf_write_32 ( xc , separation_name -> size + 1 )"		4863936	0					
ANR	4864075	Callee	xcf_write_32		4863936	0					
ANR	4864076	Identifier	xcf_write_32		4863936	0					
ANR	4864077	ArgumentList	xc		4863936	1					
ANR	4864078	Argument	xc		4863936	0					
ANR	4864079	Identifier	xc		4863936	0					
ANR	4864080	Argument	separation_name -> size + 1		4863936	1					
ANR	4864081	AdditiveExpression	separation_name -> size + 1		4863936	0		+			
ANR	4864082	PtrMemberAccess	separation_name -> size		4863936	0					
ANR	4864083	Identifier	separation_name		4863936	0					
ANR	4864084	Identifier	size		4863936	1					
ANR	4864085	PrimaryExpression	1		4863936	1					
ANR	4864086	ExpressionStatement	"xcf_write ( xc , separation_name -> data , separation_name -> size )"	1420:8:44277:44336	4863936	9	True				
ANR	4864087	CallExpression	"xcf_write ( xc , separation_name -> data , separation_name -> size )"		4863936	0					
ANR	4864088	Callee	xcf_write		4863936	0					
ANR	4864089	Identifier	xcf_write		4863936	0					
ANR	4864090	ArgumentList	xc		4863936	1					
ANR	4864091	Argument	xc		4863936	0					
ANR	4864092	Identifier	xc		4863936	0					
ANR	4864093	Argument	separation_name -> data		4863936	1					
ANR	4864094	PtrMemberAccess	separation_name -> data		4863936	0					
ANR	4864095	Identifier	separation_name		4863936	0					
ANR	4864096	Identifier	data		4863936	1					
ANR	4864097	Argument	separation_name -> size		4863936	2					
ANR	4864098	PtrMemberAccess	separation_name -> size		4863936	0					
ANR	4864099	Identifier	separation_name		4863936	0					
ANR	4864100	Identifier	size		4863936	1					
ANR	4864101	ExpressionStatement	"xcf_write ( xc , nullbyte , 1 )"	1421:8:44346:44372	4863936	10	True				
ANR	4864102	CallExpression	"xcf_write ( xc , nullbyte , 1 )"		4863936	0					
ANR	4864103	Callee	xcf_write		4863936	0					
ANR	4864104	Identifier	xcf_write		4863936	0					
ANR	4864105	ArgumentList	xc		4863936	1					
ANR	4864106	Argument	xc		4863936	0					
ANR	4864107	Identifier	xc		4863936	0					
ANR	4864108	Argument	nullbyte		4863936	1					
ANR	4864109	Identifier	nullbyte		4863936	0					
ANR	4864110	Argument	1		4863936	2					
ANR	4864111	PrimaryExpression	1		4863936	0					
ANR	4864112	ExpressionStatement	"xcf_write_32 ( xc , 0 )"	1424:8:44411:44430	4863936	11	True				
ANR	4864113	CallExpression	"xcf_write_32 ( xc , 0 )"		4863936	0					
ANR	4864114	Callee	xcf_write_32		4863936	0					
ANR	4864115	Identifier	xcf_write_32		4863936	0					
ANR	4864116	ArgumentList	xc		4863936	1					
ANR	4864117	Argument	xc		4863936	0					
ANR	4864118	Identifier	xc		4863936	0					
ANR	4864119	Argument	0		4863936	1					
ANR	4864120	PrimaryExpression	0		4863936	0					
ANR	4864121	ExpressionStatement	"xcf_write_32 ( xc , 0 )"	1425:8:44440:44459	4863936	12	True				
ANR	4864122	CallExpression	"xcf_write_32 ( xc , 0 )"		4863936	0					
ANR	4864123	Callee	xcf_write_32		4863936	0					
ANR	4864124	Identifier	xcf_write_32		4863936	0					
ANR	4864125	ArgumentList	xc		4863936	1					
ANR	4864126	Argument	xc		4863936	0					
ANR	4864127	Identifier	xc		4863936	0					
ANR	4864128	Argument	0		4863936	1					
ANR	4864129	PrimaryExpression	0		4863936	0					
ANR	4864130	ExpressionStatement	"xcf_write_32 ( xc , xc -> offset + 4 )"	1428:8:44507:44539	4863936	13	True				
ANR	4864131	CallExpression	"xcf_write_32 ( xc , xc -> offset + 4 )"		4863936	0					
ANR	4864132	Callee	xcf_write_32		4863936	0					
ANR	4864133	Identifier	xcf_write_32		4863936	0					
ANR	4864134	ArgumentList	xc		4863936	1					
ANR	4864135	Argument	xc		4863936	0					
ANR	4864136	Identifier	xc		4863936	0					
ANR	4864137	Argument	xc -> offset + 4		4863936	1					
ANR	4864138	AdditiveExpression	xc -> offset + 4		4863936	0		+			
ANR	4864139	PtrMemberAccess	xc -> offset		4863936	0					
ANR	4864140	Identifier	xc		4863936	0					
ANR	4864141	Identifier	offset		4863936	1					
ANR	4864142	PrimaryExpression	4		4863936	1					
ANR	4864143	ExpressionStatement	"xcf_write_32 ( xc , xc -> width )"	1430:8:44550:44577	4863936	14	True				
ANR	4864144	CallExpression	"xcf_write_32 ( xc , xc -> width )"		4863936	0					
ANR	4864145	Callee	xcf_write_32		4863936	0					
ANR	4864146	Identifier	xcf_write_32		4863936	0					
ANR	4864147	ArgumentList	xc		4863936	1					
ANR	4864148	Argument	xc		4863936	0					
ANR	4864149	Identifier	xc		4863936	0					
ANR	4864150	Argument	xc -> width		4863936	1					
ANR	4864151	PtrMemberAccess	xc -> width		4863936	0					
ANR	4864152	Identifier	xc		4863936	0					
ANR	4864153	Identifier	width		4863936	1					
ANR	4864154	ExpressionStatement	"xcf_write_32 ( xc , xc -> height )"	1431:8:44587:44615	4863936	15	True				
ANR	4864155	CallExpression	"xcf_write_32 ( xc , xc -> height )"		4863936	0					
ANR	4864156	Callee	xcf_write_32		4863936	0					
ANR	4864157	Identifier	xcf_write_32		4863936	0					
ANR	4864158	ArgumentList	xc		4863936	1					
ANR	4864159	Argument	xc		4863936	0					
ANR	4864160	Identifier	xc		4863936	0					
ANR	4864161	Argument	xc -> height		4863936	1					
ANR	4864162	PtrMemberAccess	xc -> height		4863936	0					
ANR	4864163	Identifier	xc		4863936	0					
ANR	4864164	Identifier	height		4863936	1					
ANR	4864165	ExpressionStatement	"xcf_write_32 ( xc , 1 )"	1432:8:44625:44644	4863936	16	True				
ANR	4864166	CallExpression	"xcf_write_32 ( xc , 1 )"		4863936	0					
ANR	4864167	Callee	xcf_write_32		4863936	0					
ANR	4864168	Identifier	xcf_write_32		4863936	0					
ANR	4864169	ArgumentList	xc		4863936	1					
ANR	4864170	Argument	xc		4863936	0					
ANR	4864171	Identifier	xc		4863936	0					
ANR	4864172	Argument	1		4863936	1					
ANR	4864173	PrimaryExpression	1		4863936	0					
ANR	4864174	ExpressionStatement	"xcf_write_32 ( xc , xc -> offset + xc -> n_levels * 16 - 8 )"	1433:8:44654:44706	4863936	17	True				
ANR	4864175	CallExpression	"xcf_write_32 ( xc , xc -> offset + xc -> n_levels * 16 - 8 )"		4863936	0					
ANR	4864176	Callee	xcf_write_32		4863936	0					
ANR	4864177	Identifier	xcf_write_32		4863936	0					
ANR	4864178	ArgumentList	xc		4863936	1					
ANR	4864179	Argument	xc		4863936	0					
ANR	4864180	Identifier	xc		4863936	0					
ANR	4864181	Argument	xc -> offset + xc -> n_levels * 16 - 8		4863936	1					
ANR	4864182	AdditiveExpression	xc -> offset + xc -> n_levels * 16 - 8		4863936	0		+			
ANR	4864183	PtrMemberAccess	xc -> offset		4863936	0					
ANR	4864184	Identifier	xc		4863936	0					
ANR	4864185	Identifier	offset		4863936	1					
ANR	4864186	AdditiveExpression	xc -> n_levels * 16 - 8		4863936	1		-			
ANR	4864187	MultiplicativeExpression	xc -> n_levels * 16		4863936	0		*			
ANR	4864188	PtrMemberAccess	xc -> n_levels		4863936	0					
ANR	4864189	Identifier	xc		4863936	0					
ANR	4864190	Identifier	n_levels		4863936	1					
ANR	4864191	PrimaryExpression	16		4863936	1					
ANR	4864192	PrimaryExpression	8		4863936	1					
ANR	4864193	ExpressionStatement	offset = xc -> offset + xc -> n_levels * 4	1434:8:44716:44754	4863936	18	True				
ANR	4864194	AssignmentExpression	offset = xc -> offset + xc -> n_levels * 4		4863936	0		=			
ANR	4864195	Identifier	offset		4863936	0					
ANR	4864196	AdditiveExpression	xc -> offset + xc -> n_levels * 4		4863936	1		+			
ANR	4864197	PtrMemberAccess	xc -> offset		4863936	0					
ANR	4864198	Identifier	xc		4863936	0					
ANR	4864199	Identifier	offset		4863936	1					
ANR	4864200	MultiplicativeExpression	xc -> n_levels * 4		4863936	1		*			
ANR	4864201	PtrMemberAccess	xc -> n_levels		4863936	0					
ANR	4864202	Identifier	xc		4863936	0					
ANR	4864203	Identifier	n_levels		4863936	1					
ANR	4864204	PrimaryExpression	4		4863936	1					
ANR	4864205	ForStatement	for ( level = 1 ; level < xc -> n_levels ; level ++ )		4863936	19					
ANR	4864206	ForInit	level = 1 ;	1435:13:44769:44778	4863936	0	True				
ANR	4864207	AssignmentExpression	level = 1		4863936	0		=			
ANR	4864208	Identifier	level		4863936	0					
ANR	4864209	PrimaryExpression	1		4863936	1					
ANR	4864210	Condition	level < xc -> n_levels	1435:24:44780:44799	4863936	1	True				
ANR	4864211	RelationalExpression	level < xc -> n_levels		4863936	0		<			
ANR	4864212	Identifier	level		4863936	0					
ANR	4864213	PtrMemberAccess	xc -> n_levels		4863936	1					
ANR	4864214	Identifier	xc		4863936	0					
ANR	4864215	Identifier	n_levels		4863936	1					
ANR	4864216	PostIncDecOperationExpression	level ++	1435:46:44802:44808	4863936	2	True				
ANR	4864217	Identifier	level		4863936	0					
ANR	4864218	IncDec	++		4863936	1					
ANR	4864219	CompoundStatement		37:55:1261:1261	4863936	3					
ANR	4864220	ExpressionStatement	"xcf_write_32 ( xc , offset )"	1436:12:44825:44849	4863936	0	True				
ANR	4864221	CallExpression	"xcf_write_32 ( xc , offset )"		4863936	0					
ANR	4864222	Callee	xcf_write_32		4863936	0					
ANR	4864223	Identifier	xcf_write_32		4863936	0					
ANR	4864224	ArgumentList	xc		4863936	1					
ANR	4864225	Argument	xc		4863936	0					
ANR	4864226	Identifier	xc		4863936	0					
ANR	4864227	Argument	offset		4863936	1					
ANR	4864228	Identifier	offset		4863936	0					
ANR	4864229	ExpressionStatement	offset += 12	1437:12:44863:44875	4863936	1	True				
ANR	4864230	AssignmentExpression	offset += 12		4863936	0		+=			
ANR	4864231	Identifier	offset		4863936	0					
ANR	4864232	PrimaryExpression	12		4863936	1					
ANR	4864233	ExpressionStatement	"xcf_write_32 ( xc , 0 )"	1439:8:44895:44914	4863936	20	True				
ANR	4864234	CallExpression	"xcf_write_32 ( xc , 0 )"		4863936	0					
ANR	4864235	Callee	xcf_write_32		4863936	0					
ANR	4864236	Identifier	xcf_write_32		4863936	0					
ANR	4864237	ArgumentList	xc		4863936	1					
ANR	4864238	Argument	xc		4863936	0					
ANR	4864239	Identifier	xc		4863936	0					
ANR	4864240	Argument	0		4863936	1					
ANR	4864241	PrimaryExpression	0		4863936	0					
ANR	4864242	ExpressionStatement	xcf_write_fake_hierarchy ( xc )	1440:8:44924:44952	4863936	21	True				
ANR	4864243	CallExpression	xcf_write_fake_hierarchy ( xc )		4863936	0					
ANR	4864244	Callee	xcf_write_fake_hierarchy		4863936	0					
ANR	4864245	Identifier	xcf_write_fake_hierarchy		4863936	0					
ANR	4864246	ArgumentList	xc		4863936	1					
ANR	4864247	Argument	xc		4863936	0					
ANR	4864248	Identifier	xc		4863936	0					
ANR	4864249	ExpressionStatement	"xcf_write_32 ( xc , xc -> width )"	1443:8:44998:45025	4863936	22	True				
ANR	4864250	CallExpression	"xcf_write_32 ( xc , xc -> width )"		4863936	0					
ANR	4864251	Callee	xcf_write_32		4863936	0					
ANR	4864252	Identifier	xcf_write_32		4863936	0					
ANR	4864253	ArgumentList	xc		4863936	1					
ANR	4864254	Argument	xc		4863936	0					
ANR	4864255	Identifier	xc		4863936	0					
ANR	4864256	Argument	xc -> width		4863936	1					
ANR	4864257	PtrMemberAccess	xc -> width		4863936	0					
ANR	4864258	Identifier	xc		4863936	0					
ANR	4864259	Identifier	width		4863936	1					
ANR	4864260	ExpressionStatement	"xcf_write_32 ( xc , xc -> height )"	1444:8:45035:45063	4863936	23	True				
ANR	4864261	CallExpression	"xcf_write_32 ( xc , xc -> height )"		4863936	0					
ANR	4864262	Callee	xcf_write_32		4863936	0					
ANR	4864263	Identifier	xcf_write_32		4863936	0					
ANR	4864264	ArgumentList	xc		4863936	1					
ANR	4864265	Argument	xc		4863936	0					
ANR	4864266	Identifier	xc		4863936	0					
ANR	4864267	Argument	xc -> height		4863936	1					
ANR	4864268	PtrMemberAccess	xc -> height		4863936	0					
ANR	4864269	Identifier	xc		4863936	0					
ANR	4864270	Identifier	height		4863936	1					
ANR	4864271	ExpressionStatement	offset = xc -> image_data_off	1445:8:45073:45100	4863936	24	True				
ANR	4864272	AssignmentExpression	offset = xc -> image_data_off		4863936	0		=			
ANR	4864273	Identifier	offset		4863936	0					
ANR	4864274	PtrMemberAccess	xc -> image_data_off		4863936	1					
ANR	4864275	Identifier	xc		4863936	0					
ANR	4864276	Identifier	image_data_off		4863936	1					
ANR	4864277	ForStatement	for ( tile_idx = 0 ; tile_idx < xc -> n_tiles ; tile_idx ++ )		4863936	25					
ANR	4864278	ForInit	tile_idx = 0 ;	1446:13:45115:45127	4863936	0	True				
ANR	4864279	AssignmentExpression	tile_idx = 0		4863936	0		=			
ANR	4864280	Identifier	tile_idx		4863936	0					
ANR	4864281	PrimaryExpression	0		4863936	1					
ANR	4864282	Condition	tile_idx < xc -> n_tiles	1446:27:45129:45150	4863936	1	True				
ANR	4864283	RelationalExpression	tile_idx < xc -> n_tiles		4863936	0		<			
ANR	4864284	Identifier	tile_idx		4863936	0					
ANR	4864285	PtrMemberAccess	xc -> n_tiles		4863936	1					
ANR	4864286	Identifier	xc		4863936	0					
ANR	4864287	Identifier	n_tiles		4863936	1					
ANR	4864288	PostIncDecOperationExpression	tile_idx ++	1446:51:45153:45162	4863936	2	True				
ANR	4864289	Identifier	tile_idx		4863936	0					
ANR	4864290	IncDec	++		4863936	1					
ANR	4864291	CompoundStatement		49:12:1629:1674	4863936	3					
ANR	4864292	IdentifierDeclStatement	"int tile_size = xcf_tile_sizeof ( xc , tile_idx ) ;"	1447:12:45179:45224	4863936	0	True				
ANR	4864293	IdentifierDecl	"tile_size = xcf_tile_sizeof ( xc , tile_idx )"		4863936	0					
ANR	4864294	IdentifierDeclType	int		4863936	0					
ANR	4864295	Identifier	tile_size		4863936	1					
ANR	4864296	AssignmentExpression	"tile_size = xcf_tile_sizeof ( xc , tile_idx )"		4863936	2		=			
ANR	4864297	Identifier	tile_size		4863936	0					
ANR	4864298	CallExpression	"xcf_tile_sizeof ( xc , tile_idx )"		4863936	1					
ANR	4864299	Callee	xcf_tile_sizeof		4863936	0					
ANR	4864300	Identifier	xcf_tile_sizeof		4863936	0					
ANR	4864301	ArgumentList	xc		4863936	1					
ANR	4864302	Argument	xc		4863936	0					
ANR	4864303	Identifier	xc		4863936	0					
ANR	4864304	Argument	tile_idx		4863936	1					
ANR	4864305	Identifier	tile_idx		4863936	0					
ANR	4864306	ExpressionStatement	"xcf_write_32 ( xc , offset + ( base_bytes_pp + chan_idx ) * tile_size )"	1449:12:45239:45304	4863936	1	True				
ANR	4864307	CallExpression	"xcf_write_32 ( xc , offset + ( base_bytes_pp + chan_idx ) * tile_size )"		4863936	0					
ANR	4864308	Callee	xcf_write_32		4863936	0					
ANR	4864309	Identifier	xcf_write_32		4863936	0					
ANR	4864310	ArgumentList	xc		4863936	1					
ANR	4864311	Argument	xc		4863936	0					
ANR	4864312	Identifier	xc		4863936	0					
ANR	4864313	Argument	offset + ( base_bytes_pp + chan_idx ) * tile_size		4863936	1					
ANR	4864314	AdditiveExpression	offset + ( base_bytes_pp + chan_idx ) * tile_size		4863936	0		+			
ANR	4864315	Identifier	offset		4863936	0					
ANR	4864316	MultiplicativeExpression	( base_bytes_pp + chan_idx ) * tile_size		4863936	1		*			
ANR	4864317	AdditiveExpression	base_bytes_pp + chan_idx		4863936	0		+			
ANR	4864318	Identifier	base_bytes_pp		4863936	0					
ANR	4864319	Identifier	chan_idx		4863936	1					
ANR	4864320	Identifier	tile_size		4863936	1					
ANR	4864321	ExpressionStatement	offset += bytes_pp * tile_size	1450:12:45318:45348	4863936	2	True				
ANR	4864322	AssignmentExpression	offset += bytes_pp * tile_size		4863936	0		+=			
ANR	4864323	Identifier	offset		4863936	0					
ANR	4864324	MultiplicativeExpression	bytes_pp * tile_size		4863936	1		*			
ANR	4864325	Identifier	bytes_pp		4863936	0					
ANR	4864326	Identifier	tile_size		4863936	1					
ANR	4864327	ExpressionStatement	"xcf_write_32 ( xc , 0 )"	1452:8:45368:45387	4863936	26	True				
ANR	4864328	CallExpression	"xcf_write_32 ( xc , 0 )"		4863936	0					
ANR	4864329	Callee	xcf_write_32		4863936	0					
ANR	4864330	Identifier	xcf_write_32		4863936	0					
ANR	4864331	ArgumentList	xc		4863936	1					
ANR	4864332	Argument	xc		4863936	0					
ANR	4864333	Identifier	xc		4863936	0					
ANR	4864334	Argument	0		4863936	1					
ANR	4864335	PrimaryExpression	0		4863936	0					
ANR	4864336	ReturnStatement	return code ;	1455:4:45400:45411	4863936	7	True				
ANR	4864337	Identifier	code		4863936	0					
ANR	4864338	ReturnType	static int		4863936	1					
ANR	4864339	Identifier	xcf_write_footer		4863936	2					
ANR	4864340	ParameterList	"xcf_write_ctx * xc , xcf_device * pdev"		4863936	3					
ANR	4864341	Parameter	xcf_write_ctx * xc	1398:17:43512:43528	4863936	0	True				
ANR	4864342	ParameterType	xcf_write_ctx *		4863936	0					
ANR	4864343	Identifier	xc		4863936	1					
ANR	4864344	Parameter	xcf_device * pdev	1398:36:43531:43546	4863936	1	True				
ANR	4864345	ParameterType	xcf_device *		4863936	0					
ANR	4864346	Identifier	pdev		4863936	1					
ANR	4864347	CFGEntryNode	ENTRY		4863936		True				
ANR	4864348	CFGExitNode	EXIT		4863936		True				
ANR	4864349	Symbol	code		4863936						
ANR	4864350	Symbol	xcf_tile_sizeof		4863936						
ANR	4864351	Symbol	pdev -> separation_names . names		4863936						
ANR	4864352	Symbol	* * pdev		4863936						
ANR	4864353	Symbol	base_bytes_pp		4863936						
ANR	4864354	Symbol	chan_idx		4863936						
ANR	4864355	Symbol	pdev		4863936						
ANR	4864356	Symbol	* pdev -> separation_names		4863936						
ANR	4864357	Symbol	tile_idx		4863936						
ANR	4864358	Symbol	pdev -> memory		4863936						
ANR	4864359	Symbol	separation_name -> data		4863936						
ANR	4864360	Symbol	separation_name		4863936						
ANR	4864361	Symbol	xc -> offset		4863936						
ANR	4864362	Symbol	xc -> n_levels		4863936						
ANR	4864363	Symbol	* separation_name		4863936						
ANR	4864364	Symbol	xc -> n_extra_channels		4863936						
ANR	4864365	Symbol	offset		4863936						
ANR	4864366	Symbol	level		4863936						
ANR	4864367	Symbol	bytes_pp		4863936						
ANR	4864368	Symbol	n_extra_channels		4863936						
ANR	4864369	Symbol	nullbyte		4863936						
ANR	4864370	Symbol	xc -> n_tiles		4863936						
ANR	4864371	Symbol	xc		4863936						
ANR	4864372	Symbol	xc -> image_data_off		4863936						
ANR	4864373	Symbol	* chan_idx		4863936						
ANR	4864374	Symbol	* xc		4863936						
ANR	4864375	Symbol	* pdev -> separation_names . names		4863936						
ANR	4864376	Symbol	xc -> width		4863936						
ANR	4864377	Symbol	xc -> height		4863936						
ANR	4864378	Symbol	* pdev		4863936						
ANR	4864379	Symbol	pdev -> separation_names		4863936						
ANR	4864380	Symbol	tile_size		4863936						
ANR	4864381	Symbol	separation_name -> size		4863936						
ANR	4864382	Symbol	xc -> base_bytes_pp		4863936						
ANR	4864383	Symbol	ARCH_SIZEOF_COLOR_INDEX		4863936						
ANR	4864384	Function	xcf_print_page	1458:0:45416:45733							
ANR	4864385	FunctionDef	"xcf_print_page (gx_device_printer * pdev , FILE * file)"		4864384	0					
ANR	4864386	CompoundStatement		1460:0:45479:45733	4864384	0					
ANR	4864387	IdentifierDeclStatement	xcf_write_ctx xc ;	1461:4:45485:45501	4864384	0	True				
ANR	4864388	IdentifierDecl	xc		4864384	0					
ANR	4864389	IdentifierDeclType	xcf_write_ctx		4864384	0					
ANR	4864390	Identifier	xc		4864384	1					
ANR	4864391	ExpressionStatement	xc . f = file	1463:4:45508:45519	4864384	1	True				
ANR	4864392	AssignmentExpression	xc . f = file		4864384	0		=			
ANR	4864393	MemberAccess	xc . f		4864384	0					
ANR	4864394	Identifier	xc		4864384	0					
ANR	4864395	Identifier	f		4864384	1					
ANR	4864396	Identifier	file		4864384	1					
ANR	4864397	ExpressionStatement	xc . offset = 0	1464:4:45525:45538	4864384	2	True				
ANR	4864398	AssignmentExpression	xc . offset = 0		4864384	0		=			
ANR	4864399	MemberAccess	xc . offset		4864384	0					
ANR	4864400	Identifier	xc		4864384	0					
ANR	4864401	Identifier	offset		4864384	1					
ANR	4864402	PrimaryExpression	0		4864384	1					
ANR	4864403	ExpressionStatement	"xcf_setup_tiles ( & xc , ( xcf_device * ) pdev )"	1466:4:45545:45585	4864384	3	True				
ANR	4864404	CallExpression	"xcf_setup_tiles ( & xc , ( xcf_device * ) pdev )"		4864384	0					
ANR	4864405	Callee	xcf_setup_tiles		4864384	0					
ANR	4864406	Identifier	xcf_setup_tiles		4864384	0					
ANR	4864407	ArgumentList	& xc		4864384	1					
ANR	4864408	Argument	& xc		4864384	0					
ANR	4864409	UnaryOperationExpression	& xc		4864384	0					
ANR	4864410	UnaryOperator	&		4864384	0					
ANR	4864411	Identifier	xc		4864384	1					
ANR	4864412	Argument	( xcf_device * ) pdev		4864384	1					
ANR	4864413	CastExpression	( xcf_device * ) pdev		4864384	0					
ANR	4864414	CastTarget	xcf_device *		4864384	0					
ANR	4864415	Identifier	pdev		4864384	1					
ANR	4864416	ExpressionStatement	"xcf_write_header ( & xc , ( xcf_device * ) pdev )"	1467:4:45591:45632	4864384	4	True				
ANR	4864417	CallExpression	"xcf_write_header ( & xc , ( xcf_device * ) pdev )"		4864384	0					
ANR	4864418	Callee	xcf_write_header		4864384	0					
ANR	4864419	Identifier	xcf_write_header		4864384	0					
ANR	4864420	ArgumentList	& xc		4864384	1					
ANR	4864421	Argument	& xc		4864384	0					
ANR	4864422	UnaryOperationExpression	& xc		4864384	0					
ANR	4864423	UnaryOperator	&		4864384	0					
ANR	4864424	Identifier	xc		4864384	1					
ANR	4864425	Argument	( xcf_device * ) pdev		4864384	1					
ANR	4864426	CastExpression	( xcf_device * ) pdev		4864384	0					
ANR	4864427	CastTarget	xcf_device *		4864384	0					
ANR	4864428	Identifier	pdev		4864384	1					
ANR	4864429	ExpressionStatement	"xcf_write_image_data ( & xc , pdev )"	1468:4:45638:45669	4864384	5	True				
ANR	4864430	CallExpression	"xcf_write_image_data ( & xc , pdev )"		4864384	0					
ANR	4864431	Callee	xcf_write_image_data		4864384	0					
ANR	4864432	Identifier	xcf_write_image_data		4864384	0					
ANR	4864433	ArgumentList	& xc		4864384	1					
ANR	4864434	Argument	& xc		4864384	0					
ANR	4864435	UnaryOperationExpression	& xc		4864384	0					
ANR	4864436	UnaryOperator	&		4864384	0					
ANR	4864437	Identifier	xc		4864384	1					
ANR	4864438	Argument	pdev		4864384	1					
ANR	4864439	Identifier	pdev		4864384	0					
ANR	4864440	ExpressionStatement	"xcf_write_footer ( & xc , ( xcf_device * ) pdev )"	1469:4:45675:45716	4864384	6	True				
ANR	4864441	CallExpression	"xcf_write_footer ( & xc , ( xcf_device * ) pdev )"		4864384	0					
ANR	4864442	Callee	xcf_write_footer		4864384	0					
ANR	4864443	Identifier	xcf_write_footer		4864384	0					
ANR	4864444	ArgumentList	& xc		4864384	1					
ANR	4864445	Argument	& xc		4864384	0					
ANR	4864446	UnaryOperationExpression	& xc		4864384	0					
ANR	4864447	UnaryOperator	&		4864384	0					
ANR	4864448	Identifier	xc		4864384	1					
ANR	4864449	Argument	( xcf_device * ) pdev		4864384	1					
ANR	4864450	CastExpression	( xcf_device * ) pdev		4864384	0					
ANR	4864451	CastTarget	xcf_device *		4864384	0					
ANR	4864452	Identifier	pdev		4864384	1					
ANR	4864453	ReturnStatement	return 0 ;	1471:4:45723:45731	4864384	7	True				
ANR	4864454	PrimaryExpression	0		4864384	0					
ANR	4864455	ReturnType	static int		4864384	1					
ANR	4864456	Identifier	xcf_print_page		4864384	2					
ANR	4864457	ParameterList	"gx_device_printer * pdev , FILE * file"		4864384	3					
ANR	4864458	Parameter	gx_device_printer * pdev	1459:15:45442:45464	4864384	0	True				
ANR	4864459	ParameterType	gx_device_printer *		4864384	0					
ANR	4864460	Identifier	pdev		4864384	1					
ANR	4864461	Parameter	FILE * file	1459:40:45467:45476	4864384	1	True				
ANR	4864462	ParameterType	FILE *		4864384	0					
ANR	4864463	Identifier	file		4864384	1					
ANR	4864464	CFGEntryNode	ENTRY		4864384		True				
ANR	4864465	CFGExitNode	EXIT		4864384		True				
ANR	4864466	Symbol	pdev		4864384						
ANR	4864467	Symbol	file		4864384						
ANR	4864468	Symbol	& xc		4864384						
ANR	4864469	Symbol	xc . offset		4864384						
ANR	4864470	Symbol	xc . f		4864384						
ANR	4864471	Symbol	xc		4864384						
