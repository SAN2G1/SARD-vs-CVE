command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4972484	File	data/converged/CVE-2018-16863_ghostpdl/gsargs.c								
ANR	4972485	Function	codepoint_to_utf8	26:0:769:1848							
ANR	4972486	FunctionDef	"codepoint_to_utf8 (char * cstr , int rune)"		4972485	0					
ANR	4972487	CompoundStatement		27:0:813:1848	4972485	0					
ANR	4972488	IdentifierDeclStatement	int idx = 0 ;	28:4:819:830	4972485	0	True				
ANR	4972489	IdentifierDecl	idx = 0		4972485	0					
ANR	4972490	IdentifierDeclType	int		4972485	0					
ANR	4972491	Identifier	idx		4972485	1					
ANR	4972492	AssignmentExpression	idx = 0		4972485	2		=			
ANR	4972493	Identifier	idx		4972485	0					
ANR	4972494	PrimaryExpression	0		4972485	1					
ANR	4972495	IfStatement	if ( rune < 0x80 )		4972485	1					
ANR	4972496	Condition	rune < 0x80	30:8:841:851	4972485	0	True				
ANR	4972497	RelationalExpression	rune < 0x80		4972485	0		<			
ANR	4972498	Identifier	rune		4972485	0					
ANR	4972499	PrimaryExpression	0x80		4972485	1					
ANR	4972500	CompoundStatement		4:21:40:40	4972485	1					
ANR	4972501	ExpressionStatement	cstr [ idx ++ ] = rune	31:8:864:882	4972485	0	True				
ANR	4972502	AssignmentExpression	cstr [ idx ++ ] = rune		4972485	0		=			
ANR	4972503	ArrayIndexing	cstr [ idx ++ ]		4972485	0					
ANR	4972504	Identifier	cstr		4972485	0					
ANR	4972505	PostIncDecOperationExpression	idx ++		4972485	1					
ANR	4972506	Identifier	idx		4972485	0					
ANR	4972507	IncDec	++		4972485	1					
ANR	4972508	Identifier	rune		4972485	1					
ANR	4972509	ElseStatement	else		4972485	0					
ANR	4972510	CompoundStatement		6:11:81:81	4972485	0					
ANR	4972511	IfStatement	if ( rune < 0x800 )		4972485	0					
ANR	4972512	Condition	rune < 0x800	33:12:909:920	4972485	0	True				
ANR	4972513	RelationalExpression	rune < 0x800		4972485	0		<			
ANR	4972514	Identifier	rune		4972485	0					
ANR	4972515	PrimaryExpression	0x800		4972485	1					
ANR	4972516	CompoundStatement		7:26:109:109	4972485	1					
ANR	4972517	ExpressionStatement	cstr [ idx ++ ] = 0xc0 | ( rune >> 6 )	34:12:937:967	4972485	0	True				
ANR	4972518	AssignmentExpression	cstr [ idx ++ ] = 0xc0 | ( rune >> 6 )		4972485	0		=			
ANR	4972519	ArrayIndexing	cstr [ idx ++ ]		4972485	0					
ANR	4972520	Identifier	cstr		4972485	0					
ANR	4972521	PostIncDecOperationExpression	idx ++		4972485	1					
ANR	4972522	Identifier	idx		4972485	0					
ANR	4972523	IncDec	++		4972485	1					
ANR	4972524	InclusiveOrExpression	0xc0 | ( rune >> 6 )		4972485	1		|			
ANR	4972525	PrimaryExpression	0xc0		4972485	0					
ANR	4972526	ShiftExpression	rune >> 6		4972485	1		>>			
ANR	4972527	Identifier	rune		4972485	0					
ANR	4972528	PrimaryExpression	6		4972485	1					
ANR	4972529	ElseStatement	else		4972485	0					
ANR	4972530	CompoundStatement		9:15:170:170	4972485	0					
ANR	4972531	IfStatement	if ( rune < 0x10000 )		4972485	0					
ANR	4972532	Condition	rune < 0x10000	36:16:1002:1015	4972485	0	True				
ANR	4972533	RelationalExpression	rune < 0x10000		4972485	0		<			
ANR	4972534	Identifier	rune		4972485	0					
ANR	4972535	PrimaryExpression	0x10000		4972485	1					
ANR	4972536	CompoundStatement		10:32:204:204	4972485	1					
ANR	4972537	ExpressionStatement	cstr [ idx ++ ] = 0xe0 | ( rune >> 12 )	37:16:1036:1067	4972485	0	True				
ANR	4972538	AssignmentExpression	cstr [ idx ++ ] = 0xe0 | ( rune >> 12 )		4972485	0		=			
ANR	4972539	ArrayIndexing	cstr [ idx ++ ]		4972485	0					
ANR	4972540	Identifier	cstr		4972485	0					
ANR	4972541	PostIncDecOperationExpression	idx ++		4972485	1					
ANR	4972542	Identifier	idx		4972485	0					
ANR	4972543	IncDec	++		4972485	1					
ANR	4972544	InclusiveOrExpression	0xe0 | ( rune >> 12 )		4972485	1		|			
ANR	4972545	PrimaryExpression	0xe0		4972485	0					
ANR	4972546	ShiftExpression	rune >> 12		4972485	1		>>			
ANR	4972547	Identifier	rune		4972485	0					
ANR	4972548	PrimaryExpression	12		4972485	1					
ANR	4972549	ElseStatement	else		4972485	0					
ANR	4972550	CompoundStatement		12:19:274:274	4972485	0					
ANR	4972551	IfStatement	if ( rune < 0x200000 )		4972485	0					
ANR	4972552	Condition	rune < 0x200000	39:20:1110:1124	4972485	0	True				
ANR	4972553	RelationalExpression	rune < 0x200000		4972485	0		<			
ANR	4972554	Identifier	rune		4972485	0					
ANR	4972555	PrimaryExpression	0x200000		4972485	1					
ANR	4972556	CompoundStatement		13:37:313:313	4972485	1					
ANR	4972557	ExpressionStatement	cstr [ idx ++ ] = 0xf0 | ( rune >> 18 )	40:20:1149:1180	4972485	0	True				
ANR	4972558	AssignmentExpression	cstr [ idx ++ ] = 0xf0 | ( rune >> 18 )		4972485	0		=			
ANR	4972559	ArrayIndexing	cstr [ idx ++ ]		4972485	0					
ANR	4972560	Identifier	cstr		4972485	0					
ANR	4972561	PostIncDecOperationExpression	idx ++		4972485	1					
ANR	4972562	Identifier	idx		4972485	0					
ANR	4972563	IncDec	++		4972485	1					
ANR	4972564	InclusiveOrExpression	0xf0 | ( rune >> 18 )		4972485	1		|			
ANR	4972565	PrimaryExpression	0xf0		4972485	0					
ANR	4972566	ShiftExpression	rune >> 18		4972485	1		>>			
ANR	4972567	Identifier	rune		4972485	0					
ANR	4972568	PrimaryExpression	18		4972485	1					
ANR	4972569	ElseStatement	else		4972485	0					
ANR	4972570	CompoundStatement		15:23:391:391	4972485	0					
ANR	4972571	IfStatement	if ( rune < 0x4000000 )		4972485	0					
ANR	4972572	Condition	rune < 0x4000000	43:24:1315:1330	4972485	0	True				
ANR	4972573	RelationalExpression	rune < 0x4000000		4972485	0		<			
ANR	4972574	Identifier	rune		4972485	0					
ANR	4972575	PrimaryExpression	0x4000000		4972485	1					
ANR	4972576	CompoundStatement		17:42:519:519	4972485	1					
ANR	4972577	ExpressionStatement	cstr [ idx ++ ] = 0xf8 | ( rune >> 24 )	44:24:1359:1390	4972485	0	True				
ANR	4972578	AssignmentExpression	cstr [ idx ++ ] = 0xf8 | ( rune >> 24 )		4972485	0		=			
ANR	4972579	ArrayIndexing	cstr [ idx ++ ]		4972485	0					
ANR	4972580	Identifier	cstr		4972485	0					
ANR	4972581	PostIncDecOperationExpression	idx ++		4972485	1					
ANR	4972582	Identifier	idx		4972485	0					
ANR	4972583	IncDec	++		4972485	1					
ANR	4972584	InclusiveOrExpression	0xf8 | ( rune >> 24 )		4972485	1		|			
ANR	4972585	PrimaryExpression	0xf8		4972485	0					
ANR	4972586	ShiftExpression	rune >> 24		4972485	1		>>			
ANR	4972587	Identifier	rune		4972485	0					
ANR	4972588	PrimaryExpression	24		4972485	1					
ANR	4972589	ElseStatement	else		4972485	0					
ANR	4972590	CompoundStatement		19:27:605:605	4972485	0					
ANR	4972591	ExpressionStatement	cstr [ idx ++ ] = 0xfc | ( rune >> 30 )	46:24:1445:1476	4972485	0	True				
ANR	4972592	AssignmentExpression	cstr [ idx ++ ] = 0xfc | ( rune >> 30 )		4972485	0		=			
ANR	4972593	ArrayIndexing	cstr [ idx ++ ]		4972485	0					
ANR	4972594	Identifier	cstr		4972485	0					
ANR	4972595	PostIncDecOperationExpression	idx ++		4972485	1					
ANR	4972596	Identifier	idx		4972485	0					
ANR	4972597	IncDec	++		4972485	1					
ANR	4972598	InclusiveOrExpression	0xfc | ( rune >> 30 )		4972485	1		|			
ANR	4972599	PrimaryExpression	0xfc		4972485	0					
ANR	4972600	ShiftExpression	rune >> 30		4972485	1		>>			
ANR	4972601	Identifier	rune		4972485	0					
ANR	4972602	PrimaryExpression	30		4972485	1					
ANR	4972603	ExpressionStatement	cstr [ idx ++ ] = 0x80 | ( ( rune >> 24 ) & 0x3f )	47:24:1502:1542	4972485	1	True				
ANR	4972604	AssignmentExpression	cstr [ idx ++ ] = 0x80 | ( ( rune >> 24 ) & 0x3f )		4972485	0		=			
ANR	4972605	ArrayIndexing	cstr [ idx ++ ]		4972485	0					
ANR	4972606	Identifier	cstr		4972485	0					
ANR	4972607	PostIncDecOperationExpression	idx ++		4972485	1					
ANR	4972608	Identifier	idx		4972485	0					
ANR	4972609	IncDec	++		4972485	1					
ANR	4972610	InclusiveOrExpression	0x80 | ( ( rune >> 24 ) & 0x3f )		4972485	1		|			
ANR	4972611	PrimaryExpression	0x80		4972485	0					
ANR	4972612	BitAndExpression	( rune >> 24 ) & 0x3f		4972485	1		&			
ANR	4972613	ShiftExpression	rune >> 24		4972485	0		>>			
ANR	4972614	Identifier	rune		4972485	0					
ANR	4972615	PrimaryExpression	24		4972485	1					
ANR	4972616	PrimaryExpression	0x3f		4972485	1					
ANR	4972617	ExpressionStatement	cstr [ idx ++ ] = 0x80 | ( ( rune >> 18 ) & 0x3f )	49:20:1586:1626	4972485	1	True				
ANR	4972618	AssignmentExpression	cstr [ idx ++ ] = 0x80 | ( ( rune >> 18 ) & 0x3f )		4972485	0		=			
ANR	4972619	ArrayIndexing	cstr [ idx ++ ]		4972485	0					
ANR	4972620	Identifier	cstr		4972485	0					
ANR	4972621	PostIncDecOperationExpression	idx ++		4972485	1					
ANR	4972622	Identifier	idx		4972485	0					
ANR	4972623	IncDec	++		4972485	1					
ANR	4972624	InclusiveOrExpression	0x80 | ( ( rune >> 18 ) & 0x3f )		4972485	1		|			
ANR	4972625	PrimaryExpression	0x80		4972485	0					
ANR	4972626	BitAndExpression	( rune >> 18 ) & 0x3f		4972485	1		&			
ANR	4972627	ShiftExpression	rune >> 18		4972485	0		>>			
ANR	4972628	Identifier	rune		4972485	0					
ANR	4972629	PrimaryExpression	18		4972485	1					
ANR	4972630	PrimaryExpression	0x3f		4972485	1					
ANR	4972631	ExpressionStatement	cstr [ idx ++ ] = 0x80 | ( ( rune >> 12 ) & 0x3f )	51:16:1662:1702	4972485	1	True				
ANR	4972632	AssignmentExpression	cstr [ idx ++ ] = 0x80 | ( ( rune >> 12 ) & 0x3f )		4972485	0		=			
ANR	4972633	ArrayIndexing	cstr [ idx ++ ]		4972485	0					
ANR	4972634	Identifier	cstr		4972485	0					
ANR	4972635	PostIncDecOperationExpression	idx ++		4972485	1					
ANR	4972636	Identifier	idx		4972485	0					
ANR	4972637	IncDec	++		4972485	1					
ANR	4972638	InclusiveOrExpression	0x80 | ( ( rune >> 12 ) & 0x3f )		4972485	1		|			
ANR	4972639	PrimaryExpression	0x80		4972485	0					
ANR	4972640	BitAndExpression	( rune >> 12 ) & 0x3f		4972485	1		&			
ANR	4972641	ShiftExpression	rune >> 12		4972485	0		>>			
ANR	4972642	Identifier	rune		4972485	0					
ANR	4972643	PrimaryExpression	12		4972485	1					
ANR	4972644	PrimaryExpression	0x3f		4972485	1					
ANR	4972645	ExpressionStatement	cstr [ idx ++ ] = 0x80 | ( ( rune >> 6 ) & 0x3f )	53:12:1730:1769	4972485	1	True				
ANR	4972646	AssignmentExpression	cstr [ idx ++ ] = 0x80 | ( ( rune >> 6 ) & 0x3f )		4972485	0		=			
ANR	4972647	ArrayIndexing	cstr [ idx ++ ]		4972485	0					
ANR	4972648	Identifier	cstr		4972485	0					
ANR	4972649	PostIncDecOperationExpression	idx ++		4972485	1					
ANR	4972650	Identifier	idx		4972485	0					
ANR	4972651	IncDec	++		4972485	1					
ANR	4972652	InclusiveOrExpression	0x80 | ( ( rune >> 6 ) & 0x3f )		4972485	1		|			
ANR	4972653	PrimaryExpression	0x80		4972485	0					
ANR	4972654	BitAndExpression	( rune >> 6 ) & 0x3f		4972485	1		&			
ANR	4972655	ShiftExpression	rune >> 6		4972485	0		>>			
ANR	4972656	Identifier	rune		4972485	0					
ANR	4972657	PrimaryExpression	6		4972485	1					
ANR	4972658	PrimaryExpression	0x3f		4972485	1					
ANR	4972659	ExpressionStatement	cstr [ idx ++ ] = 0x80 | ( rune & 0x3f )	55:8:1789:1823	4972485	1	True				
ANR	4972660	AssignmentExpression	cstr [ idx ++ ] = 0x80 | ( rune & 0x3f )		4972485	0		=			
ANR	4972661	ArrayIndexing	cstr [ idx ++ ]		4972485	0					
ANR	4972662	Identifier	cstr		4972485	0					
ANR	4972663	PostIncDecOperationExpression	idx ++		4972485	1					
ANR	4972664	Identifier	idx		4972485	0					
ANR	4972665	IncDec	++		4972485	1					
ANR	4972666	InclusiveOrExpression	0x80 | ( rune & 0x3f )		4972485	1		|			
ANR	4972667	PrimaryExpression	0x80		4972485	0					
ANR	4972668	BitAndExpression	rune & 0x3f		4972485	1		&			
ANR	4972669	Identifier	rune		4972485	0					
ANR	4972670	PrimaryExpression	0x3f		4972485	1					
ANR	4972671	ReturnStatement	return idx ;	58:4:1836:1846	4972485	2	True				
ANR	4972672	Identifier	idx		4972485	0					
ANR	4972673	ReturnType	int		4972485	1					
ANR	4972674	Identifier	codepoint_to_utf8		4972485	2					
ANR	4972675	ParameterList	"char * cstr , int rune"		4972485	3					
ANR	4972676	Parameter	char * cstr	26:22:791:800	4972485	0	True				
ANR	4972677	ParameterType	char *		4972485	0					
ANR	4972678	Identifier	cstr		4972485	1					
ANR	4972679	Parameter	int rune	26:34:803:810	4972485	1	True				
ANR	4972680	ParameterType	int		4972485	0					
ANR	4972681	Identifier	rune		4972485	1					
ANR	4972682	CFGEntryNode	ENTRY		4972485		True				
ANR	4972683	CFGExitNode	EXIT		4972485		True				
ANR	4972684	Symbol	cstr		4972485						
ANR	4972685	Symbol	* cstr		4972485						
ANR	4972686	Symbol	idx		4972485						
ANR	4972687	Symbol	rune		4972485						
ANR	4972688	Function	get_codepoint_utf8	61:0:1851:3644							
ANR	4972689	FunctionDef	"get_codepoint_utf8 (FILE * file , const char * * astr)"		4972688	0					
ANR	4972690	CompoundStatement		62:0:1912:3644	4972688	0					
ANR	4972691	IdentifierDeclStatement	int c ;	63:4:1918:1923	4972688	0	True				
ANR	4972692	IdentifierDecl	c		4972688	0					
ANR	4972693	IdentifierDeclType	int		4972688	0					
ANR	4972694	Identifier	c		4972688	1					
ANR	4972695	IdentifierDeclStatement	int rune ;	64:4:1929:1937	4972688	1	True				
ANR	4972696	IdentifierDecl	rune		4972688	0					
ANR	4972697	IdentifierDeclType	int		4972688	0					
ANR	4972698	Identifier	rune		4972688	1					
ANR	4972699	IdentifierDeclStatement	int len ;	65:4:1943:1950	4972688	2	True				
ANR	4972700	IdentifierDecl	len		4972688	0					
ANR	4972701	IdentifierDeclType	int		4972688	0					
ANR	4972702	Identifier	len		4972688	1					
ANR	4972703	DoStatement	do		4972688	3					
ANR	4972704	CompoundStatement		12:7:383:383	4972688	0					
ANR	4972705	ExpressionStatement	c = ( file ? fgetc ( file ) : ( * * astr ? ( int ) ( unsigned char ) * ( * astr ) ++ : EOF ) )	74:8:2306:2380	4972688	0	True				
ANR	4972706	AssignmentExpression	c = ( file ? fgetc ( file ) : ( * * astr ? ( int ) ( unsigned char ) * ( * astr ) ++ : EOF ) )		4972688	0		=			
ANR	4972707	Identifier	c		4972688	0					
ANR	4972708	ConditionalExpression	file ? fgetc ( file ) : ( * * astr ? ( int ) ( unsigned char ) * ( * astr ) ++ : EOF )		4972688	1					
ANR	4972709	Condition	file		4972688	0					
ANR	4972710	Identifier	file		4972688	0					
ANR	4972711	CallExpression	fgetc ( file )		4972688	1					
ANR	4972712	Callee	fgetc		4972688	0					
ANR	4972713	Identifier	fgetc		4972688	0					
ANR	4972714	ArgumentList	file		4972688	1					
ANR	4972715	Argument	file		4972688	0					
ANR	4972716	Identifier	file		4972688	0					
ANR	4972717	ConditionalExpression	* * astr ? ( int ) ( unsigned char ) * ( * astr ) ++ : EOF		4972688	2					
ANR	4972718	Condition	* * astr		4972688	0					
ANR	4972719	UnaryOperationExpression	* * astr		4972688	0					
ANR	4972720	UnaryOperator	*		4972688	0					
ANR	4972721	UnaryOperationExpression	* astr		4972688	1					
ANR	4972722	UnaryOperator	*		4972688	0					
ANR	4972723	Identifier	astr		4972688	1					
ANR	4972724	CastExpression	( int ) ( unsigned char ) * ( * astr ) ++		4972688	1					
ANR	4972725	CastTarget	int		4972688	0					
ANR	4972726	CastExpression	( unsigned char ) * ( * astr ) ++		4972688	1					
ANR	4972727	CastTarget	unsigned char		4972688	0					
ANR	4972728	UnaryOperationExpression	* ( * astr ) ++		4972688	1					
ANR	4972729	UnaryOperator	*		4972688	0					
ANR	4972730	PostIncDecOperationExpression	( * astr ) ++		4972688	1					
ANR	4972731	UnaryOperationExpression	* astr		4972688	0					
ANR	4972732	UnaryOperator	*		4972688	0					
ANR	4972733	Identifier	astr		4972688	1					
ANR	4972734	IncDec	++		4972688	1					
ANR	4972735	Identifier	EOF		4972688	2					
ANR	4972736	IfStatement	if ( c == EOF )		4972688	1					
ANR	4972737	Condition	c == EOF	75:12:2394:2401	4972688	0	True				
ANR	4972738	EqualityExpression	c == EOF		4972688	0		==			
ANR	4972739	Identifier	c		4972688	0					
ANR	4972740	Identifier	EOF		4972688	1					
ANR	4972741	ReturnStatement	return EOF ;	76:12:2416:2426	4972688	1	True				
ANR	4972742	Identifier	EOF		4972688	0					
ANR	4972743	IfStatement	if ( c < 0x80 )		4972688	2					
ANR	4972744	Condition	c < 0x80	77:12:2440:2447	4972688	0	True				
ANR	4972745	RelationalExpression	c < 0x80		4972688	0		<			
ANR	4972746	Identifier	c		4972688	0					
ANR	4972747	PrimaryExpression	0x80		4972688	1					
ANR	4972748	ReturnStatement	return c ;	78:12:2462:2470	4972688	1	True				
ANR	4972749	Identifier	c		4972688	0					
ANR	4972750	Label	lead :	79:0:2472:2476	4972688	3	True				
ANR	4972751	Identifier	lead		4972688	0					
ANR	4972752	IfStatement	if ( c < 0xc0 )		4972688	4					
ANR	4972753	Condition	c < 0xc0	80:12:2554:2561	4972688	0	True				
ANR	4972754	RelationalExpression	c < 0xc0		4972688	0		<			
ANR	4972755	Identifier	c		4972688	0					
ANR	4972756	PrimaryExpression	0xc0		4972688	1					
ANR	4972757	ContinueStatement	continue ;	81:12:2576:2584	4972688	1	True				
ANR	4972758	ElseStatement	else		4972688	0					
ANR	4972759	IfStatement	if ( c < 0xe0 )		4972688	0					
ANR	4972760	Condition	c < 0xe0	82:17:2627:2634	4972688	0	True				
ANR	4972761	RelationalExpression	c < 0xe0		4972688	0		<			
ANR	4972762	Identifier	c		4972688	0					
ANR	4972763	PrimaryExpression	0xe0		4972688	1					
ANR	4972764	ExpressionStatement	"len = 1 , rune = c & 0x1f"	83:12:2649:2673	4972688	1	True				
ANR	4972765	Expression	"len = 1 , rune = c & 0x1f"		4972688	0					
ANR	4972766	AssignmentExpression	len = 1		4972688	0		=			
ANR	4972767	Identifier	len		4972688	0					
ANR	4972768	PrimaryExpression	1		4972688	1					
ANR	4972769	AssignmentExpression	rune = c & 0x1f		4972688	1		=			
ANR	4972770	Identifier	rune		4972688	0					
ANR	4972771	BitAndExpression	c & 0x1f		4972688	1		&			
ANR	4972772	Identifier	c		4972688	0					
ANR	4972773	PrimaryExpression	0x1f		4972688	1					
ANR	4972774	ElseStatement	else		4972688	0					
ANR	4972775	IfStatement	if ( c < 0xf0 )		4972688	0					
ANR	4972776	Condition	c < 0xf0	84:17:2692:2699	4972688	0	True				
ANR	4972777	RelationalExpression	c < 0xf0		4972688	0		<			
ANR	4972778	Identifier	c		4972688	0					
ANR	4972779	PrimaryExpression	0xf0		4972688	1					
ANR	4972780	ExpressionStatement	"len = 2 , rune = c & 0xf"	85:12:2714:2737	4972688	1	True				
ANR	4972781	Expression	"len = 2 , rune = c & 0xf"		4972688	0					
ANR	4972782	AssignmentExpression	len = 2		4972688	0		=			
ANR	4972783	Identifier	len		4972688	0					
ANR	4972784	PrimaryExpression	2		4972688	1					
ANR	4972785	AssignmentExpression	rune = c & 0xf		4972688	1		=			
ANR	4972786	Identifier	rune		4972688	0					
ANR	4972787	BitAndExpression	c & 0xf		4972688	1		&			
ANR	4972788	Identifier	c		4972688	0					
ANR	4972789	PrimaryExpression	0xf		4972688	1					
ANR	4972790	ElseStatement	else		4972688	0					
ANR	4972791	IfStatement	if ( c < 0xf8 )		4972688	0					
ANR	4972792	Condition	c < 0xf8	86:17:2756:2763	4972688	0	True				
ANR	4972793	RelationalExpression	c < 0xf8		4972688	0		<			
ANR	4972794	Identifier	c		4972688	0					
ANR	4972795	PrimaryExpression	0xf8		4972688	1					
ANR	4972796	ExpressionStatement	"len = 3 , rune = c & 7"	87:12:2778:2799	4972688	1	True				
ANR	4972797	Expression	"len = 3 , rune = c & 7"		4972688	0					
ANR	4972798	AssignmentExpression	len = 3		4972688	0		=			
ANR	4972799	Identifier	len		4972688	0					
ANR	4972800	PrimaryExpression	3		4972688	1					
ANR	4972801	AssignmentExpression	rune = c & 7		4972688	1		=			
ANR	4972802	Identifier	rune		4972688	0					
ANR	4972803	BitAndExpression	c & 7		4972688	1		&			
ANR	4972804	Identifier	c		4972688	0					
ANR	4972805	PrimaryExpression	7		4972688	1					
ANR	4972806	ElseStatement	else		4972688	0					
ANR	4972807	IfStatement	if ( c < 0xfc )		4972688	0					
ANR	4972808	Condition	c < 0xfc	88:17:2818:2825	4972688	0	True				
ANR	4972809	RelationalExpression	c < 0xfc		4972688	0		<			
ANR	4972810	Identifier	c		4972688	0					
ANR	4972811	PrimaryExpression	0xfc		4972688	1					
ANR	4972812	ExpressionStatement	"len = 4 , rune = c & 3"	89:12:2840:2861	4972688	1	True				
ANR	4972813	Expression	"len = 4 , rune = c & 3"		4972688	0					
ANR	4972814	AssignmentExpression	len = 4		4972688	0		=			
ANR	4972815	Identifier	len		4972688	0					
ANR	4972816	PrimaryExpression	4		4972688	1					
ANR	4972817	AssignmentExpression	rune = c & 3		4972688	1		=			
ANR	4972818	Identifier	rune		4972688	0					
ANR	4972819	BitAndExpression	c & 3		4972688	1		&			
ANR	4972820	Identifier	c		4972688	0					
ANR	4972821	PrimaryExpression	3		4972688	1					
ANR	4972822	ElseStatement	else		4972688	0					
ANR	4972823	IfStatement	if ( c < 0xfe )		4972688	0					
ANR	4972824	Condition	c < 0xfe	90:17:2880:2887	4972688	0	True				
ANR	4972825	RelationalExpression	c < 0xfe		4972688	0		<			
ANR	4972826	Identifier	c		4972688	0					
ANR	4972827	PrimaryExpression	0xfe		4972688	1					
ANR	4972828	ExpressionStatement	"len = 5 , rune = c & 1"	91:12:2902:2923	4972688	1	True				
ANR	4972829	Expression	"len = 5 , rune = c & 1"		4972688	0					
ANR	4972830	AssignmentExpression	len = 5		4972688	0		=			
ANR	4972831	Identifier	len		4972688	0					
ANR	4972832	PrimaryExpression	5		4972688	1					
ANR	4972833	AssignmentExpression	rune = c & 1		4972688	1		=			
ANR	4972834	Identifier	rune		4972688	0					
ANR	4972835	BitAndExpression	c & 1		4972688	1		&			
ANR	4972836	Identifier	c		4972688	0					
ANR	4972837	PrimaryExpression	1		4972688	1					
ANR	4972838	ElseStatement	else		4972688	0					
ANR	4972839	ContinueStatement	continue ;	93:12:2950:2958	4972688	0	True				
ANR	4972840	DoStatement	do		4972688	5					
ANR	4972841	CompoundStatement		33:11:1082:1082	4972688	0					
ANR	4972842	ExpressionStatement	c = ( file ? fgetc ( file ) : ( * * astr ? ( int ) ( unsigned char ) * ( * astr ) ++ : EOF ) )	95:12:3009:3083	4972688	0	True				
ANR	4972843	AssignmentExpression	c = ( file ? fgetc ( file ) : ( * * astr ? ( int ) ( unsigned char ) * ( * astr ) ++ : EOF ) )		4972688	0		=			
ANR	4972844	Identifier	c		4972688	0					
ANR	4972845	ConditionalExpression	file ? fgetc ( file ) : ( * * astr ? ( int ) ( unsigned char ) * ( * astr ) ++ : EOF )		4972688	1					
ANR	4972846	Condition	file		4972688	0					
ANR	4972847	Identifier	file		4972688	0					
ANR	4972848	CallExpression	fgetc ( file )		4972688	1					
ANR	4972849	Callee	fgetc		4972688	0					
ANR	4972850	Identifier	fgetc		4972688	0					
ANR	4972851	ArgumentList	file		4972688	1					
ANR	4972852	Argument	file		4972688	0					
ANR	4972853	Identifier	file		4972688	0					
ANR	4972854	ConditionalExpression	* * astr ? ( int ) ( unsigned char ) * ( * astr ) ++ : EOF		4972688	2					
ANR	4972855	Condition	* * astr		4972688	0					
ANR	4972856	UnaryOperationExpression	* * astr		4972688	0					
ANR	4972857	UnaryOperator	*		4972688	0					
ANR	4972858	UnaryOperationExpression	* astr		4972688	1					
ANR	4972859	UnaryOperator	*		4972688	0					
ANR	4972860	Identifier	astr		4972688	1					
ANR	4972861	CastExpression	( int ) ( unsigned char ) * ( * astr ) ++		4972688	1					
ANR	4972862	CastTarget	int		4972688	0					
ANR	4972863	CastExpression	( unsigned char ) * ( * astr ) ++		4972688	1					
ANR	4972864	CastTarget	unsigned char		4972688	0					
ANR	4972865	UnaryOperationExpression	* ( * astr ) ++		4972688	1					
ANR	4972866	UnaryOperator	*		4972688	0					
ANR	4972867	PostIncDecOperationExpression	( * astr ) ++		4972688	1					
ANR	4972868	UnaryOperationExpression	* astr		4972688	0					
ANR	4972869	UnaryOperator	*		4972688	0					
ANR	4972870	Identifier	astr		4972688	1					
ANR	4972871	IncDec	++		4972688	1					
ANR	4972872	Identifier	EOF		4972688	2					
ANR	4972873	IfStatement	if ( c == EOF )		4972688	1					
ANR	4972874	Condition	c == EOF	96:16:3101:3108	4972688	0	True				
ANR	4972875	EqualityExpression	c == EOF		4972688	0		==			
ANR	4972876	Identifier	c		4972688	0					
ANR	4972877	Identifier	EOF		4972688	1					
ANR	4972878	ReturnStatement	return EOF ;	97:16:3127:3137	4972688	1	True				
ANR	4972879	Identifier	EOF		4972688	0					
ANR	4972880	ExpressionStatement	rune = ( rune << 6 ) | ( c & 0x3f )	98:12:3151:3180	4972688	2	True				
ANR	4972881	AssignmentExpression	rune = ( rune << 6 ) | ( c & 0x3f )		4972688	0		=			
ANR	4972882	Identifier	rune		4972688	0					
ANR	4972883	InclusiveOrExpression	( rune << 6 ) | ( c & 0x3f )		4972688	1		|			
ANR	4972884	ShiftExpression	rune << 6		4972688	0		<<			
ANR	4972885	Identifier	rune		4972688	0					
ANR	4972886	PrimaryExpression	6		4972688	1					
ANR	4972887	BitAndExpression	c & 0x3f		4972688	1		&			
ANR	4972888	Identifier	c		4972688	0					
ANR	4972889	PrimaryExpression	0x3f		4972688	1					
ANR	4972890	Condition	( ( c & 0xC0 ) == 0x80 ) && -- len	99:17:3199:3227	4972688	1	True				
ANR	4972891	AndExpression	( ( c & 0xC0 ) == 0x80 ) && -- len		4972688	0		&&			
ANR	4972892	EqualityExpression	( c & 0xC0 ) == 0x80		4972688	0		==			
ANR	4972893	BitAndExpression	c & 0xC0		4972688	0		&			
ANR	4972894	Identifier	c		4972688	0					
ANR	4972895	PrimaryExpression	0xC0		4972688	1					
ANR	4972896	PrimaryExpression	0x80		4972688	1					
ANR	4972897	UnaryExpression	-- len		4972688	1					
ANR	4972898	IncDec	--		4972688	0					
ANR	4972899	Identifier	len		4972688	1					
ANR	4972900	IfStatement	if ( len )		4972688	6					
ANR	4972901	Condition	len	100:12:3243:3245	4972688	0	True				
ANR	4972902	Identifier	len		4972688	0					
ANR	4972903	CompoundStatement		39:17:1335:1335	4972688	1					
ANR	4972904	IfStatement	if ( c < 0x80 )		4972688	0					
ANR	4972905	Condition	c < 0x80	102:16:3333:3340	4972688	0	True				
ANR	4972906	RelationalExpression	c < 0x80		4972688	0		<			
ANR	4972907	Identifier	c		4972688	0					
ANR	4972908	PrimaryExpression	0x80		4972688	1					
ANR	4972909	CompoundStatement		41:26:1430:1430	4972688	1					
ANR	4972910	ReturnStatement	return c ;	104:16:3427:3435	4972688	0	True				
ANR	4972911	Identifier	c		4972688	0					
ANR	4972912	GotoStatement	goto lead ;	107:12:3504:3513	4972688	1	True				
ANR	4972913	Identifier	lead		4972688	0					
ANR	4972914	IfStatement	if ( rune == 0xFEFF )		4972688	7					
ANR	4972915	Condition	rune == 0xFEFF	109:12:3537:3550	4972688	0	True				
ANR	4972916	EqualityExpression	rune == 0xFEFF		4972688	0		==			
ANR	4972917	Identifier	rune		4972688	0					
ANR	4972918	PrimaryExpression	0xFEFF		4972688	1					
ANR	4972919	ContinueStatement	continue ;	110:12:3565:3573	4972688	1	True				
ANR	4972920	BreakStatement	break ;	111:8:3602:3607	4972688	8	True				
ANR	4972921	Condition	1	112:13:3622:3622	4972688	1	True				
ANR	4972922	PrimaryExpression	1		4972688	0					
ANR	4972923	ReturnStatement	return rune ;	114:4:3631:3642	4972688	4	True				
ANR	4972924	Identifier	rune		4972688	0					
ANR	4972925	ReturnType	static int		4972688	1					
ANR	4972926	Identifier	get_codepoint_utf8		4972688	2					
ANR	4972927	ParameterList	"FILE * file , const char * * astr"		4972688	3					
ANR	4972928	Parameter	FILE * file	61:30:1881:1890	4972688	0	True				
ANR	4972929	ParameterType	FILE *		4972688	0					
ANR	4972930	Identifier	file		4972688	1					
ANR	4972931	Parameter	const char * * astr	61:42:1893:1909	4972688	1	True				
ANR	4972932	ParameterType	const char * *		4972688	0					
ANR	4972933	Identifier	astr		4972688	1					
ANR	4972934	CFGEntryNode	ENTRY		4972688		True				
ANR	4972935	CFGExitNode	EXIT		4972688		True				
ANR	4972936	Symbol	file		4972688						
ANR	4972937	Symbol	c		4972688						
ANR	4972938	Symbol	* ( * astr ) ++		4972688						
ANR	4972939	Symbol	len		4972688						
ANR	4972940	Symbol	* * astr		4972688						
ANR	4972941	Symbol	* astr		4972688						
ANR	4972942	Symbol	astr		4972688						
ANR	4972943	Symbol	EOF		4972688						
ANR	4972944	Symbol	fgetc		4972688						
ANR	4972945	Symbol	rune		4972688						
ANR	4972946	Function	arg_init	118:0:3677:4366							
ANR	4972947	FunctionDef	"arg_init (arg_list * pal , const char * * argv , int argc , FILE * ( * arg_fopen ) ( const char * fname , void * fopen_data ) , void * fopen_data , int ( * get_codepoint ) ( FILE * file , const char * * astr ) , gs_memory_t * memory)"		4972946	0					
ANR	4972948	CompoundStatement		124:0:3948:4366	4972946	0					
ANR	4972949	ExpressionStatement	pal -> expand_ats = true	125:4:3954:3976	4972946	0	True				
ANR	4972950	AssignmentExpression	pal -> expand_ats = true		4972946	0		=			
ANR	4972951	PtrMemberAccess	pal -> expand_ats		4972946	0					
ANR	4972952	Identifier	pal		4972946	0					
ANR	4972953	Identifier	expand_ats		4972946	1					
ANR	4972954	Identifier	true		4972946	1					
ANR	4972955	ExpressionStatement	pal -> arg_fopen = arg_fopen	126:4:3982:4008	4972946	1	True				
ANR	4972956	AssignmentExpression	pal -> arg_fopen = arg_fopen		4972946	0		=			
ANR	4972957	PtrMemberAccess	pal -> arg_fopen		4972946	0					
ANR	4972958	Identifier	pal		4972946	0					
ANR	4972959	Identifier	arg_fopen		4972946	1					
ANR	4972960	Identifier	arg_fopen		4972946	1					
ANR	4972961	ExpressionStatement	pal -> fopen_data = fopen_data	127:4:4014:4042	4972946	2	True				
ANR	4972962	AssignmentExpression	pal -> fopen_data = fopen_data		4972946	0		=			
ANR	4972963	PtrMemberAccess	pal -> fopen_data		4972946	0					
ANR	4972964	Identifier	pal		4972946	0					
ANR	4972965	Identifier	fopen_data		4972946	1					
ANR	4972966	Identifier	fopen_data		4972946	1					
ANR	4972967	ExpressionStatement	pal -> get_codepoint = ( get_codepoint ? get_codepoint : get_codepoint_utf8 )	128:4:4048:4121	4972946	3	True				
ANR	4972968	AssignmentExpression	pal -> get_codepoint = ( get_codepoint ? get_codepoint : get_codepoint_utf8 )		4972946	0		=			
ANR	4972969	PtrMemberAccess	pal -> get_codepoint		4972946	0					
ANR	4972970	Identifier	pal		4972946	0					
ANR	4972971	Identifier	get_codepoint		4972946	1					
ANR	4972972	ConditionalExpression	get_codepoint ? get_codepoint : get_codepoint_utf8		4972946	1					
ANR	4972973	Condition	get_codepoint		4972946	0					
ANR	4972974	Identifier	get_codepoint		4972946	0					
ANR	4972975	Identifier	get_codepoint		4972946	1					
ANR	4972976	Identifier	get_codepoint_utf8		4972946	2					
ANR	4972977	ExpressionStatement	pal -> memory = memory	129:4:4127:4147	4972946	4	True				
ANR	4972978	AssignmentExpression	pal -> memory = memory		4972946	0		=			
ANR	4972979	PtrMemberAccess	pal -> memory		4972946	0					
ANR	4972980	Identifier	pal		4972946	0					
ANR	4972981	Identifier	memory		4972946	1					
ANR	4972982	Identifier	memory		4972946	1					
ANR	4972983	ExpressionStatement	pal -> argp = argv + 1	130:4:4153:4173	4972946	5	True				
ANR	4972984	AssignmentExpression	pal -> argp = argv + 1		4972946	0		=			
ANR	4972985	PtrMemberAccess	pal -> argp		4972946	0					
ANR	4972986	Identifier	pal		4972946	0					
ANR	4972987	Identifier	argp		4972946	1					
ANR	4972988	AdditiveExpression	argv + 1		4972946	1		+			
ANR	4972989	Identifier	argv		4972946	0					
ANR	4972990	PrimaryExpression	1		4972946	1					
ANR	4972991	ExpressionStatement	pal -> argn = argc - 1	131:4:4179:4199	4972946	6	True				
ANR	4972992	AssignmentExpression	pal -> argn = argc - 1		4972946	0		=			
ANR	4972993	PtrMemberAccess	pal -> argn		4972946	0					
ANR	4972994	Identifier	pal		4972946	0					
ANR	4972995	Identifier	argn		4972946	1					
ANR	4972996	AdditiveExpression	argc - 1		4972946	1		-			
ANR	4972997	Identifier	argc		4972946	0					
ANR	4972998	PrimaryExpression	1		4972946	1					
ANR	4972999	ExpressionStatement	pal -> depth = 0	132:4:4205:4219	4972946	7	True				
ANR	4973000	AssignmentExpression	pal -> depth = 0		4972946	0		=			
ANR	4973001	PtrMemberAccess	pal -> depth		4972946	0					
ANR	4973002	Identifier	pal		4972946	0					
ANR	4973003	Identifier	depth		4972946	1					
ANR	4973004	PrimaryExpression	0		4972946	1					
ANR	4973005	ExpressionStatement	pal -> sources [ 0 ] . is_file = 0	133:4:4225:4252	4972946	8	True				
ANR	4973006	AssignmentExpression	pal -> sources [ 0 ] . is_file = 0		4972946	0		=			
ANR	4973007	MemberAccess	pal -> sources [ 0 ] . is_file		4972946	0					
ANR	4973008	ArrayIndexing	pal -> sources [ 0 ]		4972946	0					
ANR	4973009	PtrMemberAccess	pal -> sources		4972946	0					
ANR	4973010	Identifier	pal		4972946	0					
ANR	4973011	Identifier	sources		4972946	1					
ANR	4973012	PrimaryExpression	0		4972946	1					
ANR	4973013	Identifier	is_file		4972946	1					
ANR	4973014	PrimaryExpression	0		4972946	1					
ANR	4973015	ExpressionStatement	pal -> sources [ 0 ] . u . s . memory = NULL	134:4:4258:4291	4972946	9	True				
ANR	4973016	AssignmentExpression	pal -> sources [ 0 ] . u . s . memory = NULL		4972946	0		=			
ANR	4973017	MemberAccess	pal -> sources [ 0 ] . u . s . memory		4972946	0					
ANR	4973018	MemberAccess	pal -> sources [ 0 ] . u . s		4972946	0					
ANR	4973019	MemberAccess	pal -> sources [ 0 ] . u		4972946	0					
ANR	4973020	ArrayIndexing	pal -> sources [ 0 ]		4972946	0					
ANR	4973021	PtrMemberAccess	pal -> sources		4972946	0					
ANR	4973022	Identifier	pal		4972946	0					
ANR	4973023	Identifier	sources		4972946	1					
ANR	4973024	PrimaryExpression	0		4972946	1					
ANR	4973025	Identifier	u		4972946	1					
ANR	4973026	Identifier	s		4972946	1					
ANR	4973027	Identifier	memory		4972946	1					
ANR	4973028	Identifier	NULL		4972946	1					
ANR	4973029	ExpressionStatement	pal -> sources [ 0 ] . u . s . decoded = 0	135:4:4297:4328	4972946	10	True				
ANR	4973030	AssignmentExpression	pal -> sources [ 0 ] . u . s . decoded = 0		4972946	0		=			
ANR	4973031	MemberAccess	pal -> sources [ 0 ] . u . s . decoded		4972946	0					
ANR	4973032	MemberAccess	pal -> sources [ 0 ] . u . s		4972946	0					
ANR	4973033	MemberAccess	pal -> sources [ 0 ] . u		4972946	0					
ANR	4973034	ArrayIndexing	pal -> sources [ 0 ]		4972946	0					
ANR	4973035	PtrMemberAccess	pal -> sources		4972946	0					
ANR	4973036	Identifier	pal		4972946	0					
ANR	4973037	Identifier	sources		4972946	1					
ANR	4973038	PrimaryExpression	0		4972946	1					
ANR	4973039	Identifier	u		4972946	1					
ANR	4973040	Identifier	s		4972946	1					
ANR	4973041	Identifier	decoded		4972946	1					
ANR	4973042	PrimaryExpression	0		4972946	1					
ANR	4973043	ExpressionStatement	pal -> sources [ 0 ] . u . s . parsed = 0	136:4:4334:4364	4972946	11	True				
ANR	4973044	AssignmentExpression	pal -> sources [ 0 ] . u . s . parsed = 0		4972946	0		=			
ANR	4973045	MemberAccess	pal -> sources [ 0 ] . u . s . parsed		4972946	0					
ANR	4973046	MemberAccess	pal -> sources [ 0 ] . u . s		4972946	0					
ANR	4973047	MemberAccess	pal -> sources [ 0 ] . u		4972946	0					
ANR	4973048	ArrayIndexing	pal -> sources [ 0 ]		4972946	0					
ANR	4973049	PtrMemberAccess	pal -> sources		4972946	0					
ANR	4973050	Identifier	pal		4972946	0					
ANR	4973051	Identifier	sources		4972946	1					
ANR	4973052	PrimaryExpression	0		4972946	1					
ANR	4973053	Identifier	u		4972946	1					
ANR	4973054	Identifier	s		4972946	1					
ANR	4973055	Identifier	parsed		4972946	1					
ANR	4973056	PrimaryExpression	0		4972946	1					
ANR	4973057	ReturnType	void		4972946	1					
ANR	4973058	Identifier	arg_init		4972946	2					
ANR	4973059	ParameterList	"arg_list * pal , const char * * argv , int argc , FILE * ( * arg_fopen ) ( const char * fname , void * fopen_data ) , void * fopen_data , int ( * get_codepoint ) ( FILE * file , const char * * astr ) , gs_memory_t * memory"		4972946	3					
ANR	4973060	Parameter	arg_list * pal	119:9:3691:3704	4972946	0	True				
ANR	4973061	ParameterType	arg_list *		4972946	0					
ANR	4973062	Identifier	pal		4972946	1					
ANR	4973063	Parameter	const char * * argv	119:25:3707:3723	4972946	1	True				
ANR	4973064	ParameterType	const char * *		4972946	0					
ANR	4973065	Identifier	argv		4972946	1					
ANR	4973066	Parameter	int argc	119:44:3726:3733	4972946	2	True				
ANR	4973067	ParameterType	int		4972946	0					
ANR	4973068	Identifier	argc		4972946	1					
ANR	4973069	Parameter	"FILE * ( * arg_fopen ) ( const char * fname , void * fopen_data )"	120:9:3745:3807	4972946	3	True				
ANR	4973070	ParameterType	"(* ( const char * fname , void * fopen_data ) FILE) *"		4972946	0					
ANR	4973071	Identifier	arg_fopen		4972946	1					
ANR	4973072	Parameter	void * fopen_data	121:9:3819:3842	4972946	4	True				
ANR	4973073	ParameterType	void *		4972946	0					
ANR	4973074	Identifier	fopen_data		4972946	1					
ANR	4973075	Parameter	"int ( * get_codepoint ) ( FILE * file , const char * * astr )"	122:9:3854:3914	4972946	5	True				
ANR	4973076	ParameterType	"(( FILE * file , const char * * astr ) int) *"		4972946	0					
ANR	4973077	Identifier	get_codepoint		4972946	1					
ANR	4973078	Parameter	gs_memory_t * memory	123:9:3926:3945	4972946	6	True				
ANR	4973079	ParameterType	gs_memory_t *		4972946	0					
ANR	4973080	Identifier	memory		4972946	1					
ANR	4973081	CFGEntryNode	ENTRY		4972946		True				
ANR	4973082	CFGExitNode	EXIT		4972946		True				
ANR	4973083	Symbol	memory		4972946						
ANR	4973084	Symbol	arg_fopen		4972946						
ANR	4973085	Symbol	* pal		4972946						
ANR	4973086	Symbol	pal -> get_codepoint		4972946						
ANR	4973087	Symbol	pal -> arg_fopen		4972946						
ANR	4973088	Symbol	pal -> fopen_data		4972946						
ANR	4973089	Symbol	* pal -> sources		4972946						
ANR	4973090	Symbol	pal -> sources [ 0 ] . u . s		4972946						
ANR	4973091	Symbol	pal -> sources [ 0 ] . u . s . decoded		4972946						
ANR	4973092	Symbol	argv		4972946						
ANR	4973093	Symbol	pal -> sources [ 0 ] . u . s . memory		4972946						
ANR	4973094	Symbol	pal		4972946						
ANR	4973095	Symbol	pal -> sources [ 0 ] . u . s . parsed		4972946						
ANR	4973096	Symbol	get_codepoint_utf8		4972946						
ANR	4973097	Symbol	argc		4972946						
ANR	4973098	Symbol	NULL		4972946						
ANR	4973099	Symbol	pal -> sources [ 0 ] . is_file		4972946						
ANR	4973100	Symbol	get_codepoint		4972946						
ANR	4973101	Symbol	pal -> memory		4972946						
ANR	4973102	Symbol	* * pal		4972946						
ANR	4973103	Symbol	pal -> expand_ats		4972946						
ANR	4973104	Symbol	pal -> sources [ 0 ] . u		4972946						
ANR	4973105	Symbol	pal -> depth		4972946						
ANR	4973106	Symbol	true		4972946						
ANR	4973107	Symbol	pal -> argp		4972946						
ANR	4973108	Symbol	pal -> sources		4972946						
ANR	4973109	Symbol	pal -> argn		4972946						
ANR	4973110	Symbol	fopen_data		4972946						
ANR	4973111	Function	arg_push_memory_string	140:0:4407:4569							
ANR	4973112	FunctionDef	"arg_push_memory_string (arg_list * pal , char * str , bool parsed , gs_memory_t * mem)"		4973111	0					
ANR	4973113	CompoundStatement		142:0:4493:4569	4973111	0					
ANR	4973114	ReturnStatement	"return arg_push_decoded_memory_string ( pal , str , parsed , parsed , mem ) ;"	143:4:4499:4567	4973111	0	True				
ANR	4973115	CallExpression	"arg_push_decoded_memory_string ( pal , str , parsed , parsed , mem )"		4973111	0					
ANR	4973116	Callee	arg_push_decoded_memory_string		4973111	0					
ANR	4973117	Identifier	arg_push_decoded_memory_string		4973111	0					
ANR	4973118	ArgumentList	pal		4973111	1					
ANR	4973119	Argument	pal		4973111	0					
ANR	4973120	Identifier	pal		4973111	0					
ANR	4973121	Argument	str		4973111	1					
ANR	4973122	Identifier	str		4973111	0					
ANR	4973123	Argument	parsed		4973111	2					
ANR	4973124	Identifier	parsed		4973111	0					
ANR	4973125	Argument	parsed		4973111	3					
ANR	4973126	Identifier	parsed		4973111	0					
ANR	4973127	Argument	mem		4973111	4					
ANR	4973128	Identifier	mem		4973111	0					
ANR	4973129	ReturnType	int		4973111	1					
ANR	4973130	Identifier	arg_push_memory_string		4973111	2					
ANR	4973131	ParameterList	"arg_list * pal , char * str , bool parsed , gs_memory_t * mem"		4973111	3					
ANR	4973132	Parameter	arg_list * pal	141:23:4434:4447	4973111	0	True				
ANR	4973133	ParameterType	arg_list *		4973111	0					
ANR	4973134	Identifier	pal		4973111	1					
ANR	4973135	Parameter	char * str	141:39:4450:4458	4973111	1	True				
ANR	4973136	ParameterType	char *		4973111	0					
ANR	4973137	Identifier	str		4973111	1					
ANR	4973138	Parameter	bool parsed	141:50:4461:4471	4973111	2	True				
ANR	4973139	ParameterType	bool		4973111	0					
ANR	4973140	Identifier	parsed		4973111	1					
ANR	4973141	Parameter	gs_memory_t * mem	141:63:4474:4490	4973111	3	True				
ANR	4973142	ParameterType	gs_memory_t *		4973111	0					
ANR	4973143	Identifier	mem		4973111	1					
ANR	4973144	CFGEntryNode	ENTRY		4973111		True				
ANR	4973145	CFGExitNode	EXIT		4973111		True				
ANR	4973146	Symbol	str		4973111						
ANR	4973147	Symbol	mem		4973111						
ANR	4973148	Symbol	arg_push_decoded_memory_string		4973111						
ANR	4973149	Symbol	pal		4973111						
ANR	4973150	Symbol	parsed		4973111						
ANR	4973151	Function	arg_push_decoded_memory_string	146:0:4572:5038							
ANR	4973152	FunctionDef	"arg_push_decoded_memory_string (arg_list * pal , char * str , bool parsed , bool decoded , gs_memory_t * mem)"		4973151	0					
ANR	4973153	CompoundStatement		148:0:4680:5038	4973151	0					
ANR	4973154	IdentifierDeclStatement	arg_source * pas ;	149:4:4686:4701	4973151	0	True				
ANR	4973155	IdentifierDecl	* pas		4973151	0					
ANR	4973156	IdentifierDeclType	arg_source *		4973151	0					
ANR	4973157	Identifier	pas		4973151	1					
ANR	4973158	IfStatement	if ( pal -> depth + 1 == arg_depth_max )		4973151	1					
ANR	4973159	Condition	pal -> depth + 1 == arg_depth_max	151:8:4712:4740	4973151	0	True				
ANR	4973160	EqualityExpression	pal -> depth + 1 == arg_depth_max		4973151	0		==			
ANR	4973161	AdditiveExpression	pal -> depth + 1		4973151	0		+			
ANR	4973162	PtrMemberAccess	pal -> depth		4973151	0					
ANR	4973163	Identifier	pal		4973151	0					
ANR	4973164	Identifier	depth		4973151	1					
ANR	4973165	PrimaryExpression	1		4973151	1					
ANR	4973166	Identifier	arg_depth_max		4973151	1					
ANR	4973167	CompoundStatement		4:39:62:62	4973151	1					
ANR	4973168	ExpressionStatement	"lprintf ( ""Too much nesting of @-files.\\n"" )"	152:8:4753:4794	4973151	0	True				
ANR	4973169	CallExpression	"lprintf ( ""Too much nesting of @-files.\\n"" )"		4973151	0					
ANR	4973170	Callee	lprintf		4973151	0					
ANR	4973171	Identifier	lprintf		4973151	0					
ANR	4973172	ArgumentList	"""Too much nesting of @-files.\\n"""		4973151	1					
ANR	4973173	Argument	"""Too much nesting of @-files.\\n"""		4973151	0					
ANR	4973174	PrimaryExpression	"""Too much nesting of @-files.\\n"""		4973151	0					
ANR	4973175	ReturnStatement	return 1 ;	153:8:4804:4812	4973151	1	True				
ANR	4973176	PrimaryExpression	1		4973151	0					
ANR	4973177	ExpressionStatement	pas = & pal -> sources [ ++ pal -> depth ]	155:4:4824:4857	4973151	2	True				
ANR	4973178	AssignmentExpression	pas = & pal -> sources [ ++ pal -> depth ]		4973151	0		=			
ANR	4973179	Identifier	pas		4973151	0					
ANR	4973180	UnaryOperationExpression	& pal -> sources [ ++ pal -> depth ]		4973151	1					
ANR	4973181	UnaryOperator	&		4973151	0					
ANR	4973182	ArrayIndexing	pal -> sources [ ++ pal -> depth ]		4973151	1					
ANR	4973183	PtrMemberAccess	pal -> sources		4973151	0					
ANR	4973184	Identifier	pal		4973151	0					
ANR	4973185	Identifier	sources		4973151	1					
ANR	4973186	UnaryExpression	++ pal -> depth		4973151	1					
ANR	4973187	IncDec	++		4973151	0					
ANR	4973188	PtrMemberAccess	pal -> depth		4973151	1					
ANR	4973189	Identifier	pal		4973151	0					
ANR	4973190	Identifier	depth		4973151	1					
ANR	4973191	ExpressionStatement	pas -> is_file = false	156:4:4863:4883	4973151	3	True				
ANR	4973192	AssignmentExpression	pas -> is_file = false		4973151	0		=			
ANR	4973193	PtrMemberAccess	pas -> is_file		4973151	0					
ANR	4973194	Identifier	pas		4973151	0					
ANR	4973195	Identifier	is_file		4973151	1					
ANR	4973196	Identifier	false		4973151	1					
ANR	4973197	ExpressionStatement	pas -> u . s . parsed = parsed	157:4:4889:4913	4973151	4	True				
ANR	4973198	AssignmentExpression	pas -> u . s . parsed = parsed		4973151	0		=			
ANR	4973199	MemberAccess	pas -> u . s . parsed		4973151	0					
ANR	4973200	MemberAccess	pas -> u . s		4973151	0					
ANR	4973201	PtrMemberAccess	pas -> u		4973151	0					
ANR	4973202	Identifier	pas		4973151	0					
ANR	4973203	Identifier	u		4973151	1					
ANR	4973204	Identifier	s		4973151	1					
ANR	4973205	Identifier	parsed		4973151	1					
ANR	4973206	Identifier	parsed		4973151	1					
ANR	4973207	ExpressionStatement	pas -> u . s . decoded = decoded	158:4:4919:4945	4973151	5	True				
ANR	4973208	AssignmentExpression	pas -> u . s . decoded = decoded		4973151	0		=			
ANR	4973209	MemberAccess	pas -> u . s . decoded		4973151	0					
ANR	4973210	MemberAccess	pas -> u . s		4973151	0					
ANR	4973211	PtrMemberAccess	pas -> u		4973151	0					
ANR	4973212	Identifier	pas		4973151	0					
ANR	4973213	Identifier	u		4973151	1					
ANR	4973214	Identifier	s		4973151	1					
ANR	4973215	Identifier	decoded		4973151	1					
ANR	4973216	Identifier	decoded		4973151	1					
ANR	4973217	ExpressionStatement	pas -> u . s . chars = str	159:4:4951:4971	4973151	6	True				
ANR	4973218	AssignmentExpression	pas -> u . s . chars = str		4973151	0		=			
ANR	4973219	MemberAccess	pas -> u . s . chars		4973151	0					
ANR	4973220	MemberAccess	pas -> u . s		4973151	0					
ANR	4973221	PtrMemberAccess	pas -> u		4973151	0					
ANR	4973222	Identifier	pas		4973151	0					
ANR	4973223	Identifier	u		4973151	1					
ANR	4973224	Identifier	s		4973151	1					
ANR	4973225	Identifier	chars		4973151	1					
ANR	4973226	Identifier	str		4973151	1					
ANR	4973227	ExpressionStatement	pas -> u . s . memory = mem	160:4:4977:4998	4973151	7	True				
ANR	4973228	AssignmentExpression	pas -> u . s . memory = mem		4973151	0		=			
ANR	4973229	MemberAccess	pas -> u . s . memory		4973151	0					
ANR	4973230	MemberAccess	pas -> u . s		4973151	0					
ANR	4973231	PtrMemberAccess	pas -> u		4973151	0					
ANR	4973232	Identifier	pas		4973151	0					
ANR	4973233	Identifier	u		4973151	1					
ANR	4973234	Identifier	s		4973151	1					
ANR	4973235	Identifier	memory		4973151	1					
ANR	4973236	Identifier	mem		4973151	1					
ANR	4973237	ExpressionStatement	pas -> u . s . str = str	161:4:5004:5022	4973151	8	True				
ANR	4973238	AssignmentExpression	pas -> u . s . str = str		4973151	0		=			
ANR	4973239	MemberAccess	pas -> u . s . str		4973151	0					
ANR	4973240	MemberAccess	pas -> u . s		4973151	0					
ANR	4973241	PtrMemberAccess	pas -> u		4973151	0					
ANR	4973242	Identifier	pas		4973151	0					
ANR	4973243	Identifier	u		4973151	1					
ANR	4973244	Identifier	s		4973151	1					
ANR	4973245	Identifier	str		4973151	1					
ANR	4973246	Identifier	str		4973151	1					
ANR	4973247	ReturnStatement	return 0 ;	162:4:5028:5036	4973151	9	True				
ANR	4973248	PrimaryExpression	0		4973151	0					
ANR	4973249	ReturnType	int		4973151	1					
ANR	4973250	Identifier	arg_push_decoded_memory_string		4973151	2					
ANR	4973251	ParameterList	"arg_list * pal , char * str , bool parsed , bool decoded , gs_memory_t * mem"		4973151	3					
ANR	4973252	Parameter	arg_list * pal	147:31:4607:4620	4973151	0	True				
ANR	4973253	ParameterType	arg_list *		4973151	0					
ANR	4973254	Identifier	pal		4973151	1					
ANR	4973255	Parameter	char * str	147:47:4623:4631	4973151	1	True				
ANR	4973256	ParameterType	char *		4973151	0					
ANR	4973257	Identifier	str		4973151	1					
ANR	4973258	Parameter	bool parsed	147:58:4634:4644	4973151	2	True				
ANR	4973259	ParameterType	bool		4973151	0					
ANR	4973260	Identifier	parsed		4973151	1					
ANR	4973261	Parameter	bool decoded	147:71:4647:4658	4973151	3	True				
ANR	4973262	ParameterType	bool		4973151	0					
ANR	4973263	Identifier	decoded		4973151	1					
ANR	4973264	Parameter	gs_memory_t * mem	147:85:4661:4677	4973151	4	True				
ANR	4973265	ParameterType	gs_memory_t *		4973151	0					
ANR	4973266	Identifier	mem		4973151	1					
ANR	4973267	CFGEntryNode	ENTRY		4973151		True				
ANR	4973268	CFGExitNode	EXIT		4973151		True				
ANR	4973269	Symbol	pas -> u . s . memory		4973151						
ANR	4973270	Symbol	pas		4973151						
ANR	4973271	Symbol	* pal		4973151						
ANR	4973272	Symbol	pas -> is_file		4973151						
ANR	4973273	Symbol	false		4973151						
ANR	4973274	Symbol	pas -> u . s . parsed		4973151						
ANR	4973275	Symbol	* pas		4973151						
ANR	4973276	Symbol	pas -> u . s . decoded		4973151						
ANR	4973277	Symbol	str		4973151						
ANR	4973278	Symbol	pas -> u . s . chars		4973151						
ANR	4973279	Symbol	pas -> u		4973151						
ANR	4973280	Symbol	pas -> u . s . str		4973151						
ANR	4973281	Symbol	mem		4973151						
ANR	4973282	Symbol	pal -> depth		4973151						
ANR	4973283	Symbol	arg_depth_max		4973151						
ANR	4973284	Symbol	decoded		4973151						
ANR	4973285	Symbol	pal		4973151						
ANR	4973286	Symbol	parsed		4973151						
ANR	4973287	Symbol	pas -> u . s		4973151						
ANR	4973288	Symbol	pal -> sources		4973151						
ANR	4973289	Function	arg_finit	166:0:5069:5401							
ANR	4973290	FunctionDef	arg_finit (arg_list * pal)		4973289	0					
ANR	4973291	CompoundStatement		168:0:5100:5401	4973289	0					
ANR	4973292	WhileStatement	while ( pal -> depth )		4973289	0					
ANR	4973293	Condition	pal -> depth	170:11:5158:5167	4973289	0	True				
ANR	4973294	PtrMemberAccess	pal -> depth		4973289	0					
ANR	4973295	Identifier	pal		4973289	0					
ANR	4973296	Identifier	depth		4973289	1					
ANR	4973297	CompoundStatement		4:8:79:124	4973289	1					
ANR	4973298	IdentifierDeclStatement	arg_source * pas = & pal -> sources [ pal -> depth -- ] ;	171:8:5180:5225	4973289	0	True				
ANR	4973299	IdentifierDecl	* pas = & pal -> sources [ pal -> depth -- ]		4973289	0					
ANR	4973300	IdentifierDeclType	arg_source *		4973289	0					
ANR	4973301	Identifier	pas		4973289	1					
ANR	4973302	AssignmentExpression	* pas = & pal -> sources [ pal -> depth -- ]		4973289	2		=			
ANR	4973303	Identifier	pas		4973289	0					
ANR	4973304	UnaryOperationExpression	& pal -> sources [ pal -> depth -- ]		4973289	1					
ANR	4973305	UnaryOperator	&		4973289	0					
ANR	4973306	ArrayIndexing	pal -> sources [ pal -> depth -- ]		4973289	1					
ANR	4973307	PtrMemberAccess	pal -> sources		4973289	0					
ANR	4973308	Identifier	pal		4973289	0					
ANR	4973309	Identifier	sources		4973289	1					
ANR	4973310	PostIncDecOperationExpression	pal -> depth --		4973289	1					
ANR	4973311	PtrMemberAccess	pal -> depth		4973289	0					
ANR	4973312	Identifier	pal		4973289	0					
ANR	4973313	Identifier	depth		4973289	1					
ANR	4973314	IncDec	--		4973289	1					
ANR	4973315	IfStatement	if ( pas -> is_file )		4973289	1					
ANR	4973316	Condition	pas -> is_file	173:12:5240:5251	4973289	0	True				
ANR	4973317	PtrMemberAccess	pas -> is_file		4973289	0					
ANR	4973318	Identifier	pas		4973289	0					
ANR	4973319	Identifier	is_file		4973289	1					
ANR	4973320	ExpressionStatement	fclose ( pas -> u . file )	174:12:5266:5285	4973289	1	True				
ANR	4973321	CallExpression	fclose ( pas -> u . file )		4973289	0					
ANR	4973322	Callee	fclose		4973289	0					
ANR	4973323	Identifier	fclose		4973289	0					
ANR	4973324	ArgumentList	pas -> u . file		4973289	1					
ANR	4973325	Argument	pas -> u . file		4973289	0					
ANR	4973326	MemberAccess	pas -> u . file		4973289	0					
ANR	4973327	PtrMemberAccess	pas -> u		4973289	0					
ANR	4973328	Identifier	pas		4973289	0					
ANR	4973329	Identifier	u		4973289	1					
ANR	4973330	Identifier	file		4973289	1					
ANR	4973331	ElseStatement	else		4973289	0					
ANR	4973332	IfStatement	if ( pas -> u . s . memory )		4973289	0					
ANR	4973333	Condition	pas -> u . s . memory	175:17:5304:5318	4973289	0	True				
ANR	4973334	MemberAccess	pas -> u . s . memory		4973289	0					
ANR	4973335	MemberAccess	pas -> u . s		4973289	0					
ANR	4973336	PtrMemberAccess	pas -> u		4973289	0					
ANR	4973337	Identifier	pas		4973289	0					
ANR	4973338	Identifier	u		4973289	1					
ANR	4973339	Identifier	s		4973289	1					
ANR	4973340	Identifier	memory		4973289	1					
ANR	4973341	ExpressionStatement	"gs_free_object ( pas -> u . s . memory , pas -> u . s . chars , ""arg_finit"" )"	176:12:5333:5393	4973289	1	True				
ANR	4973342	CallExpression	"gs_free_object ( pas -> u . s . memory , pas -> u . s . chars , ""arg_finit"" )"		4973289	0					
ANR	4973343	Callee	gs_free_object		4973289	0					
ANR	4973344	Identifier	gs_free_object		4973289	0					
ANR	4973345	ArgumentList	pas -> u . s . memory		4973289	1					
ANR	4973346	Argument	pas -> u . s . memory		4973289	0					
ANR	4973347	MemberAccess	pas -> u . s . memory		4973289	0					
ANR	4973348	MemberAccess	pas -> u . s		4973289	0					
ANR	4973349	PtrMemberAccess	pas -> u		4973289	0					
ANR	4973350	Identifier	pas		4973289	0					
ANR	4973351	Identifier	u		4973289	1					
ANR	4973352	Identifier	s		4973289	1					
ANR	4973353	Identifier	memory		4973289	1					
ANR	4973354	Argument	pas -> u . s . chars		4973289	1					
ANR	4973355	MemberAccess	pas -> u . s . chars		4973289	0					
ANR	4973356	MemberAccess	pas -> u . s		4973289	0					
ANR	4973357	PtrMemberAccess	pas -> u		4973289	0					
ANR	4973358	Identifier	pas		4973289	0					
ANR	4973359	Identifier	u		4973289	1					
ANR	4973360	Identifier	s		4973289	1					
ANR	4973361	Identifier	chars		4973289	1					
ANR	4973362	Argument	"""arg_finit"""		4973289	2					
ANR	4973363	PrimaryExpression	"""arg_finit"""		4973289	0					
ANR	4973364	ReturnType	void		4973289	1					
ANR	4973365	Identifier	arg_finit		4973289	2					
ANR	4973366	ParameterList	arg_list * pal		4973289	3					
ANR	4973367	Parameter	arg_list * pal	167:10:5084:5097	4973289	0	True				
ANR	4973368	ParameterType	arg_list *		4973289	0					
ANR	4973369	Identifier	pal		4973289	1					
ANR	4973370	CFGEntryNode	ENTRY		4973289		True				
ANR	4973371	CFGExitNode	EXIT		4973289		True				
ANR	4973372	Symbol	pas -> u . s . chars		4973289						
ANR	4973373	Symbol	pas -> u		4973289						
ANR	4973374	Symbol	pas -> u . s . memory		4973289						
ANR	4973375	Symbol	pas		4973289						
ANR	4973376	Symbol	pal -> depth		4973289						
ANR	4973377	Symbol	* pal		4973289						
ANR	4973378	Symbol	pas -> is_file		4973289						
ANR	4973379	Symbol	pal		4973289						
ANR	4973380	Symbol	pas -> u . s		4973289						
ANR	4973381	Symbol	* pas		4973289						
ANR	4973382	Symbol	pal -> sources		4973289						
ANR	4973383	Symbol	pas -> u . file		4973289						
ANR	4973384	Function	get_codepoint	180:0:5404:5640							
ANR	4973385	FunctionDef	"get_codepoint (arg_list * pal , arg_source * pas)"		4973384	0					
ANR	4973386	CompoundStatement		181:0:5461:5640	4973384	0					
ANR	4973387	IdentifierDeclStatement	"int ( * fn ) ( FILE * file , const char * * str ) ;"	182:4:5467:5506	4973384	0	True				
ANR	4973388	IdentifierDecl	"( * fn ) ( FILE * file , const char * * str )"		4973384	0					
ANR	4973389	IdentifierDeclType	"int ( * ) ( FILE * file , const char * * str )"		4973384	0					
ANR	4973390	Identifier	fn		4973384	1					
ANR	4973391	Identifier	file		4973384	2					
ANR	4973392	Identifier	str		4973384	3					
ANR	4973393	ExpressionStatement	fn = ( ! pas -> is_file && pas -> u . s . decoded ? get_codepoint_utf8 : pal -> get_codepoint )	184:4:5513:5595	4973384	1	True				
ANR	4973394	AssignmentExpression	fn = ( ! pas -> is_file && pas -> u . s . decoded ? get_codepoint_utf8 : pal -> get_codepoint )		4973384	0		=			
ANR	4973395	Identifier	fn		4973384	0					
ANR	4973396	ConditionalExpression	! pas -> is_file && pas -> u . s . decoded ? get_codepoint_utf8 : pal -> get_codepoint		4973384	1					
ANR	4973397	Condition	! pas -> is_file && pas -> u . s . decoded		4973384	0					
ANR	4973398	AndExpression	! pas -> is_file && pas -> u . s . decoded		4973384	0		&&			
ANR	4973399	UnaryOperationExpression	! pas -> is_file		4973384	0					
ANR	4973400	UnaryOperator	!		4973384	0					
ANR	4973401	PtrMemberAccess	pas -> is_file		4973384	1					
ANR	4973402	Identifier	pas		4973384	0					
ANR	4973403	Identifier	is_file		4973384	1					
ANR	4973404	MemberAccess	pas -> u . s . decoded		4973384	1					
ANR	4973405	MemberAccess	pas -> u . s		4973384	0					
ANR	4973406	PtrMemberAccess	pas -> u		4973384	0					
ANR	4973407	Identifier	pas		4973384	0					
ANR	4973408	Identifier	u		4973384	1					
ANR	4973409	Identifier	s		4973384	1					
ANR	4973410	Identifier	decoded		4973384	1					
ANR	4973411	Identifier	get_codepoint_utf8		4973384	1					
ANR	4973412	PtrMemberAccess	pal -> get_codepoint		4973384	2					
ANR	4973413	Identifier	pal		4973384	0					
ANR	4973414	Identifier	get_codepoint		4973384	1					
ANR	4973415	ReturnStatement	"return fn ( pas -> u . file , & pas -> u . s . str ) ;"	185:4:5601:5638	4973384	2	True				
ANR	4973416	CallExpression	"fn ( pas -> u . file , & pas -> u . s . str )"		4973384	0					
ANR	4973417	Callee	fn		4973384	0					
ANR	4973418	Identifier	fn		4973384	0					
ANR	4973419	ArgumentList	pas -> u . file		4973384	1					
ANR	4973420	Argument	pas -> u . file		4973384	0					
ANR	4973421	MemberAccess	pas -> u . file		4973384	0					
ANR	4973422	PtrMemberAccess	pas -> u		4973384	0					
ANR	4973423	Identifier	pas		4973384	0					
ANR	4973424	Identifier	u		4973384	1					
ANR	4973425	Identifier	file		4973384	1					
ANR	4973426	Argument	& pas -> u . s . str		4973384	1					
ANR	4973427	UnaryOperationExpression	& pas -> u . s . str		4973384	0					
ANR	4973428	UnaryOperator	&		4973384	0					
ANR	4973429	MemberAccess	pas -> u . s . str		4973384	1					
ANR	4973430	MemberAccess	pas -> u . s		4973384	0					
ANR	4973431	PtrMemberAccess	pas -> u		4973384	0					
ANR	4973432	Identifier	pas		4973384	0					
ANR	4973433	Identifier	u		4973384	1					
ANR	4973434	Identifier	s		4973384	1					
ANR	4973435	Identifier	str		4973384	1					
ANR	4973436	ReturnType	static int		4973384	1					
ANR	4973437	Identifier	get_codepoint		4973384	2					
ANR	4973438	ParameterList	"arg_list * pal , arg_source * pas"		4973384	3					
ANR	4973439	Parameter	arg_list * pal	180:25:5429:5441	4973384	0	True				
ANR	4973440	ParameterType	arg_list *		4973384	0					
ANR	4973441	Identifier	pal		4973384	1					
ANR	4973442	Parameter	arg_source * pas	180:40:5444:5458	4973384	1	True				
ANR	4973443	ParameterType	arg_source *		4973384	0					
ANR	4973444	Identifier	pas		4973384	1					
ANR	4973445	CFGEntryNode	ENTRY		4973384		True				
ANR	4973446	CFGExitNode	EXIT		4973384		True				
ANR	4973447	Symbol	pas		4973384						
ANR	4973448	Symbol	pal -> get_codepoint		4973384						
ANR	4973449	Symbol	* pal		4973384						
ANR	4973450	Symbol	fn		4973384						
ANR	4973451	Symbol	pas -> is_file		4973384						
ANR	4973452	Symbol	* pas		4973384						
ANR	4973453	Symbol	pas -> u . s . decoded		4973384						
ANR	4973454	Symbol	pas -> u . file		4973384						
ANR	4973455	Symbol	pas -> u		4973384						
ANR	4973456	Symbol	& pas -> u		4973384						
ANR	4973457	Symbol	& pas -> u . s		4973384						
ANR	4973458	Symbol	& pas -> u . s . str		4973384						
ANR	4973459	Symbol	pal		4973384						
ANR	4973460	Symbol	pas -> u . s		4973384						
ANR	4973461	Symbol	get_codepoint_utf8		4973384						
ANR	4973462	Function	arg_next	197:0:5906:12367							
ANR	4973463	FunctionDef	"arg_next (arg_list * pal , const char * * argstr , const gs_memory_t * errmem)"		4973462	0					
ANR	4973464	CompoundStatement		199:0:5983:12367	4973462	0					
ANR	4973465	IdentifierDeclStatement	arg_source * pas ;	200:4:5989:6004	4973462	0	True				
ANR	4973466	IdentifierDecl	* pas		4973462	0					
ANR	4973467	IdentifierDeclType	arg_source *		4973462	0					
ANR	4973468	Identifier	pas		4973462	1					
ANR	4973469	IdentifierDeclStatement	char * cstr ;	201:4:6010:6020	4973462	1	True				
ANR	4973470	IdentifierDecl	* cstr		4973462	0					
ANR	4973471	IdentifierDeclType	char *		4973462	0					
ANR	4973472	Identifier	cstr		4973462	1					
ANR	4973473	IdentifierDeclStatement	int c ;	202:4:6026:6031	4973462	2	True				
ANR	4973474	IdentifierDecl	c		4973462	0					
ANR	4973475	IdentifierDeclType	int		4973462	0					
ANR	4973476	Identifier	c		4973462	1					
ANR	4973477	IdentifierDeclStatement	int i ;	203:4:6037:6042	4973462	3	True				
ANR	4973478	IdentifierDecl	i		4973462	0					
ANR	4973479	IdentifierDeclType	int		4973462	0					
ANR	4973480	Identifier	i		4973462	1					
ANR	4973481	IdentifierDeclStatement	"bool in_quote , eol ;"	204:4:6048:6066	4973462	4	True				
ANR	4973482	IdentifierDecl	in_quote		4973462	0					
ANR	4973483	IdentifierDeclType	bool		4973462	0					
ANR	4973484	Identifier	in_quote		4973462	1					
ANR	4973485	IdentifierDecl	eol		4973462	1					
ANR	4973486	IdentifierDeclType	bool		4973462	0					
ANR	4973487	Identifier	eol		4973462	1					
ANR	4973488	ExpressionStatement	* argstr = NULL	206:4:6073:6087	4973462	5	True				
ANR	4973489	AssignmentExpression	* argstr = NULL		4973462	0		=			
ANR	4973490	UnaryOperationExpression	* argstr		4973462	0					
ANR	4973491	UnaryOperator	*		4973462	0					
ANR	4973492	Identifier	argstr		4973462	1					
ANR	4973493	Identifier	NULL		4973462	1					
ANR	4973494	DoStatement	do		4973462	6					
ANR	4973495	CompoundStatement		11:7:167:167	4973462	0					
ANR	4973496	ExpressionStatement	pas = & pal -> sources [ pal -> depth ]	210:8:6161:6192	4973462	0	True				
ANR	4973497	AssignmentExpression	pas = & pal -> sources [ pal -> depth ]		4973462	0		=			
ANR	4973498	Identifier	pas		4973462	0					
ANR	4973499	UnaryOperationExpression	& pal -> sources [ pal -> depth ]		4973462	1					
ANR	4973500	UnaryOperator	&		4973462	0					
ANR	4973501	ArrayIndexing	pal -> sources [ pal -> depth ]		4973462	1					
ANR	4973502	PtrMemberAccess	pal -> sources		4973462	0					
ANR	4973503	Identifier	pal		4973462	0					
ANR	4973504	Identifier	sources		4973462	1					
ANR	4973505	PtrMemberAccess	pal -> depth		4973462	1					
ANR	4973506	Identifier	pal		4973462	0					
ANR	4973507	Identifier	depth		4973462	1					
ANR	4973508	IfStatement	if ( ! pas -> is_file && pas -> u . s . parsed )		4973462	1					
ANR	4973509	Condition	! pas -> is_file && pas -> u . s . parsed	211:12:6206:6237	4973462	0	True				
ANR	4973510	AndExpression	! pas -> is_file && pas -> u . s . parsed		4973462	0		&&			
ANR	4973511	UnaryOperationExpression	! pas -> is_file		4973462	0					
ANR	4973512	UnaryOperator	!		4973462	0					
ANR	4973513	PtrMemberAccess	pas -> is_file		4973462	1					
ANR	4973514	Identifier	pas		4973462	0					
ANR	4973515	Identifier	is_file		4973462	1					
ANR	4973516	MemberAccess	pas -> u . s . parsed		4973462	1					
ANR	4973517	MemberAccess	pas -> u . s		4973462	0					
ANR	4973518	PtrMemberAccess	pas -> u		4973462	0					
ANR	4973519	Identifier	pas		4973462	0					
ANR	4973520	Identifier	u		4973462	1					
ANR	4973521	Identifier	s		4973462	1					
ANR	4973522	Identifier	parsed		4973462	1					
ANR	4973523	CompoundStatement		13:46:256:256	4973462	1					
ANR	4973524	IfStatement	if ( strlen ( pas -> u . s . str ) >= arg_str_max )		4973462	0					
ANR	4973525	Condition	strlen ( pas -> u . s . str ) >= arg_str_max	216:16:6473:6507	4973462	0	True				
ANR	4973526	RelationalExpression	strlen ( pas -> u . s . str ) >= arg_str_max		4973462	0		>=			
ANR	4973527	CallExpression	strlen ( pas -> u . s . str )		4973462	0					
ANR	4973528	Callee	strlen		4973462	0					
ANR	4973529	Identifier	strlen		4973462	0					
ANR	4973530	ArgumentList	pas -> u . s . str		4973462	1					
ANR	4973531	Argument	pas -> u . s . str		4973462	0					
ANR	4973532	MemberAccess	pas -> u . s . str		4973462	0					
ANR	4973533	MemberAccess	pas -> u . s		4973462	0					
ANR	4973534	PtrMemberAccess	pas -> u		4973462	0					
ANR	4973535	Identifier	pas		4973462	0					
ANR	4973536	Identifier	u		4973462	1					
ANR	4973537	Identifier	s		4973462	1					
ANR	4973538	Identifier	str		4973462	1					
ANR	4973539	Identifier	arg_str_max		4973462	1					
ANR	4973540	CompoundStatement		18:53:526:526	4973462	1					
ANR	4973541	ExpressionStatement	"errprintf ( errmem , ""Command too long: %s\\n"" , pas -> u . s . str )"	217:16:6528:6585	4973462	0	True				
ANR	4973542	CallExpression	"errprintf ( errmem , ""Command too long: %s\\n"" , pas -> u . s . str )"		4973462	0					
ANR	4973543	Callee	errprintf		4973462	0					
ANR	4973544	Identifier	errprintf		4973462	0					
ANR	4973545	ArgumentList	errmem		4973462	1					
ANR	4973546	Argument	errmem		4973462	0					
ANR	4973547	Identifier	errmem		4973462	0					
ANR	4973548	Argument	"""Command too long: %s\\n"""		4973462	1					
ANR	4973549	PrimaryExpression	"""Command too long: %s\\n"""		4973462	0					
ANR	4973550	Argument	pas -> u . s . str		4973462	2					
ANR	4973551	MemberAccess	pas -> u . s . str		4973462	0					
ANR	4973552	MemberAccess	pas -> u . s		4973462	0					
ANR	4973553	PtrMemberAccess	pas -> u		4973462	0					
ANR	4973554	Identifier	pas		4973462	0					
ANR	4973555	Identifier	u		4973462	1					
ANR	4973556	Identifier	s		4973462	1					
ANR	4973557	Identifier	str		4973462	1					
ANR	4973558	ExpressionStatement	return_error ( gs_error_Fatal )	218:16:6603:6631	4973462	1	True				
ANR	4973559	CallExpression	return_error ( gs_error_Fatal )		4973462	0					
ANR	4973560	Callee	return_error		4973462	0					
ANR	4973561	Identifier	return_error		4973462	0					
ANR	4973562	ArgumentList	gs_error_Fatal		4973462	1					
ANR	4973563	Argument	gs_error_Fatal		4973462	0					
ANR	4973564	Identifier	gs_error_Fatal		4973462	0					
ANR	4973565	ExpressionStatement	"strcpy ( pal -> cstr , pas -> u . s . str )"	220:12:6659:6690	4973462	1	True				
ANR	4973566	CallExpression	"strcpy ( pal -> cstr , pas -> u . s . str )"		4973462	0					
ANR	4973567	Callee	strcpy		4973462	0					
ANR	4973568	Identifier	strcpy		4973462	0					
ANR	4973569	ArgumentList	pal -> cstr		4973462	1					
ANR	4973570	Argument	pal -> cstr		4973462	0					
ANR	4973571	PtrMemberAccess	pal -> cstr		4973462	0					
ANR	4973572	Identifier	pal		4973462	0					
ANR	4973573	Identifier	cstr		4973462	1					
ANR	4973574	Argument	pas -> u . s . str		4973462	1					
ANR	4973575	MemberAccess	pas -> u . s . str		4973462	0					
ANR	4973576	MemberAccess	pas -> u . s		4973462	0					
ANR	4973577	PtrMemberAccess	pas -> u		4973462	0					
ANR	4973578	Identifier	pas		4973462	0					
ANR	4973579	Identifier	u		4973462	1					
ANR	4973580	Identifier	s		4973462	1					
ANR	4973581	Identifier	str		4973462	1					
ANR	4973582	ExpressionStatement	* argstr = pal -> cstr	221:12:6704:6723	4973462	2	True				
ANR	4973583	AssignmentExpression	* argstr = pal -> cstr		4973462	0		=			
ANR	4973584	UnaryOperationExpression	* argstr		4973462	0					
ANR	4973585	UnaryOperator	*		4973462	0					
ANR	4973586	Identifier	argstr		4973462	1					
ANR	4973587	PtrMemberAccess	pal -> cstr		4973462	1					
ANR	4973588	Identifier	pal		4973462	0					
ANR	4973589	Identifier	cstr		4973462	1					
ANR	4973590	IfStatement	if ( pas -> u . s . memory )		4973462	3					
ANR	4973591	Condition	pas -> u . s . memory	222:16:6741:6755	4973462	0	True				
ANR	4973592	MemberAccess	pas -> u . s . memory		4973462	0					
ANR	4973593	MemberAccess	pas -> u . s		4973462	0					
ANR	4973594	PtrMemberAccess	pas -> u		4973462	0					
ANR	4973595	Identifier	pas		4973462	0					
ANR	4973596	Identifier	u		4973462	1					
ANR	4973597	Identifier	s		4973462	1					
ANR	4973598	Identifier	memory		4973462	1					
ANR	4973599	ExpressionStatement	"gs_free_object ( pas -> u . s . memory , pas -> u . s . chars , ""arg_next"" )"	223:16:6774:6833	4973462	1	True				
ANR	4973600	CallExpression	"gs_free_object ( pas -> u . s . memory , pas -> u . s . chars , ""arg_next"" )"		4973462	0					
ANR	4973601	Callee	gs_free_object		4973462	0					
ANR	4973602	Identifier	gs_free_object		4973462	0					
ANR	4973603	ArgumentList	pas -> u . s . memory		4973462	1					
ANR	4973604	Argument	pas -> u . s . memory		4973462	0					
ANR	4973605	MemberAccess	pas -> u . s . memory		4973462	0					
ANR	4973606	MemberAccess	pas -> u . s		4973462	0					
ANR	4973607	PtrMemberAccess	pas -> u		4973462	0					
ANR	4973608	Identifier	pas		4973462	0					
ANR	4973609	Identifier	u		4973462	1					
ANR	4973610	Identifier	s		4973462	1					
ANR	4973611	Identifier	memory		4973462	1					
ANR	4973612	Argument	pas -> u . s . chars		4973462	1					
ANR	4973613	MemberAccess	pas -> u . s . chars		4973462	0					
ANR	4973614	MemberAccess	pas -> u . s		4973462	0					
ANR	4973615	PtrMemberAccess	pas -> u		4973462	0					
ANR	4973616	Identifier	pas		4973462	0					
ANR	4973617	Identifier	u		4973462	1					
ANR	4973618	Identifier	s		4973462	1					
ANR	4973619	Identifier	chars		4973462	1					
ANR	4973620	Argument	"""arg_next"""		4973462	2					
ANR	4973621	PrimaryExpression	"""arg_next"""		4973462	0					
ANR	4973622	ExpressionStatement	pal -> depth --	224:12:6847:6859	4973462	4	True				
ANR	4973623	PostIncDecOperationExpression	pal -> depth --		4973462	0					
ANR	4973624	PtrMemberAccess	pal -> depth		4973462	0					
ANR	4973625	Identifier	pal		4973462	0					
ANR	4973626	Identifier	depth		4973462	1					
ANR	4973627	IncDec	--		4973462	1					
ANR	4973628	ElseStatement	else		4973462	0					
ANR	4973629	CompoundStatement		27:15:892:892	4973462	0					
ANR	4973630	IfStatement	if ( pal -> depth == 0 )		4973462	0					
ANR	4973631	Condition	pal -> depth == 0	227:16:6948:6962	4973462	0	True				
ANR	4973632	EqualityExpression	pal -> depth == 0		4973462	0		==			
ANR	4973633	PtrMemberAccess	pal -> depth		4973462	0					
ANR	4973634	Identifier	pal		4973462	0					
ANR	4973635	Identifier	depth		4973462	1					
ANR	4973636	PrimaryExpression	0		4973462	1					
ANR	4973637	CompoundStatement		29:33:981:981	4973462	1					
ANR	4973638	IfStatement	if ( pal -> argn <= 0 )		4973462	0					
ANR	4973639	Condition	pal -> argn <= 0	228:20:6987:7000	4973462	0	True				
ANR	4973640	RelationalExpression	pal -> argn <= 0		4973462	0		<=			
ANR	4973641	PtrMemberAccess	pal -> argn		4973462	0					
ANR	4973642	Identifier	pal		4973462	0					
ANR	4973643	Identifier	argn		4973462	1					
ANR	4973644	PrimaryExpression	0		4973462	1					
ANR	4973645	ReturnStatement	return 0 ;	229:20:7023:7031	4973462	1	True				
ANR	4973646	PrimaryExpression	0		4973462	0					
ANR	4973647	ExpressionStatement	pal -> argn --	231:16:7131:7142	4973462	1	True				
ANR	4973648	PostIncDecOperationExpression	pal -> argn --		4973462	0					
ANR	4973649	PtrMemberAccess	pal -> argn		4973462	0					
ANR	4973650	Identifier	pal		4973462	0					
ANR	4973651	Identifier	argn		4973462	1					
ANR	4973652	IncDec	--		4973462	1					
ANR	4973653	ExpressionStatement	pas -> u . s . str = * ( pal -> argp ++ )	232:16:7160:7189	4973462	2	True				
ANR	4973654	AssignmentExpression	pas -> u . s . str = * ( pal -> argp ++ )		4973462	0		=			
ANR	4973655	MemberAccess	pas -> u . s . str		4973462	0					
ANR	4973656	MemberAccess	pas -> u . s		4973462	0					
ANR	4973657	PtrMemberAccess	pas -> u		4973462	0					
ANR	4973658	Identifier	pas		4973462	0					
ANR	4973659	Identifier	u		4973462	1					
ANR	4973660	Identifier	s		4973462	1					
ANR	4973661	Identifier	str		4973462	1					
ANR	4973662	UnaryOperationExpression	* ( pal -> argp ++ )		4973462	1					
ANR	4973663	UnaryOperator	*		4973462	0					
ANR	4973664	PostIncDecOperationExpression	pal -> argp ++		4973462	1					
ANR	4973665	PtrMemberAccess	pal -> argp		4973462	0					
ANR	4973666	Identifier	pal		4973462	0					
ANR	4973667	Identifier	argp		4973462	1					
ANR	4973668	IncDec	++		4973462	1					
ANR	4973669	DoStatement	do		4973462	1					
ANR	4973670	CompoundStatement		37:15:1283:1283	4973462	0					
ANR	4973671	ExpressionStatement	"c = get_codepoint ( pal , pas )"	236:16:7285:7312	4973462	0	True				
ANR	4973672	AssignmentExpression	"c = get_codepoint ( pal , pas )"		4973462	0		=			
ANR	4973673	Identifier	c		4973462	0					
ANR	4973674	CallExpression	"get_codepoint ( pal , pas )"		4973462	1					
ANR	4973675	Callee	get_codepoint		4973462	0					
ANR	4973676	Identifier	get_codepoint		4973462	0					
ANR	4973677	ArgumentList	pal		4973462	1					
ANR	4973678	Argument	pal		4973462	0					
ANR	4973679	Identifier	pal		4973462	0					
ANR	4973680	Argument	pas		4973462	1					
ANR	4973681	Identifier	pas		4973462	0					
ANR	4973682	Condition	c > 0 && c < 256 && isspace ( c )	237:21:7335:7364	4973462	1	True				
ANR	4973683	AndExpression	c > 0 && c < 256 && isspace ( c )		4973462	0		&&			
ANR	4973684	RelationalExpression	c > 0		4973462	0		>			
ANR	4973685	Identifier	c		4973462	0					
ANR	4973686	PrimaryExpression	0		4973462	1					
ANR	4973687	AndExpression	c < 256 && isspace ( c )		4973462	1		&&			
ANR	4973688	RelationalExpression	c < 256		4973462	0		<			
ANR	4973689	Identifier	c		4973462	0					
ANR	4973690	PrimaryExpression	256		4973462	1					
ANR	4973691	CallExpression	isspace ( c )		4973462	1					
ANR	4973692	Callee	isspace		4973462	0					
ANR	4973693	Identifier	isspace		4973462	0					
ANR	4973694	ArgumentList	c		4973462	1					
ANR	4973695	Argument	c		4973462	0					
ANR	4973696	Identifier	c		4973462	0					
ANR	4973697	IfStatement	if ( c == EOF )		4973462	2					
ANR	4973698	Condition	c == EOF	238:16:7384:7391	4973462	0	True				
ANR	4973699	EqualityExpression	c == EOF		4973462	0		==			
ANR	4973700	Identifier	c		4973462	0					
ANR	4973701	Identifier	EOF		4973462	1					
ANR	4973702	CompoundStatement		40:26:1410:1410	4973462	1					
ANR	4973703	IfStatement	if ( pas -> is_file )		4973462	0					
ANR	4973704	Condition	pas -> is_file	240:20:7474:7485	4973462	0	True				
ANR	4973705	PtrMemberAccess	pas -> is_file		4973462	0					
ANR	4973706	Identifier	pas		4973462	0					
ANR	4973707	Identifier	is_file		4973462	1					
ANR	4973708	ExpressionStatement	fclose ( pas -> u . file )	241:20:7508:7527	4973462	1	True				
ANR	4973709	CallExpression	fclose ( pas -> u . file )		4973462	0					
ANR	4973710	Callee	fclose		4973462	0					
ANR	4973711	Identifier	fclose		4973462	0					
ANR	4973712	ArgumentList	pas -> u . file		4973462	1					
ANR	4973713	Argument	pas -> u . file		4973462	0					
ANR	4973714	MemberAccess	pas -> u . file		4973462	0					
ANR	4973715	PtrMemberAccess	pas -> u		4973462	0					
ANR	4973716	Identifier	pas		4973462	0					
ANR	4973717	Identifier	u		4973462	1					
ANR	4973718	Identifier	file		4973462	1					
ANR	4973719	ElseStatement	else		4973462	0					
ANR	4973720	IfStatement	if ( pas -> u . s . memory )		4973462	0					
ANR	4973721	Condition	pas -> u . s . memory	242:25:7554:7568	4973462	0	True				
ANR	4973722	MemberAccess	pas -> u . s . memory		4973462	0					
ANR	4973723	MemberAccess	pas -> u . s		4973462	0					
ANR	4973724	PtrMemberAccess	pas -> u		4973462	0					
ANR	4973725	Identifier	pas		4973462	0					
ANR	4973726	Identifier	u		4973462	1					
ANR	4973727	Identifier	s		4973462	1					
ANR	4973728	Identifier	memory		4973462	1					
ANR	4973729	ExpressionStatement	"gs_free_object ( pas -> u . s . memory , pas -> u . s . chars , ""arg_next"" )"	243:20:7591:7685	4973462	1	True				
ANR	4973730	CallExpression	"gs_free_object ( pas -> u . s . memory , pas -> u . s . chars , ""arg_next"" )"		4973462	0					
ANR	4973731	Callee	gs_free_object		4973462	0					
ANR	4973732	Identifier	gs_free_object		4973462	0					
ANR	4973733	ArgumentList	pas -> u . s . memory		4973462	1					
ANR	4973734	Argument	pas -> u . s . memory		4973462	0					
ANR	4973735	MemberAccess	pas -> u . s . memory		4973462	0					
ANR	4973736	MemberAccess	pas -> u . s		4973462	0					
ANR	4973737	PtrMemberAccess	pas -> u		4973462	0					
ANR	4973738	Identifier	pas		4973462	0					
ANR	4973739	Identifier	u		4973462	1					
ANR	4973740	Identifier	s		4973462	1					
ANR	4973741	Identifier	memory		4973462	1					
ANR	4973742	Argument	pas -> u . s . chars		4973462	1					
ANR	4973743	MemberAccess	pas -> u . s . chars		4973462	0					
ANR	4973744	MemberAccess	pas -> u . s		4973462	0					
ANR	4973745	PtrMemberAccess	pas -> u		4973462	0					
ANR	4973746	Identifier	pas		4973462	0					
ANR	4973747	Identifier	u		4973462	1					
ANR	4973748	Identifier	s		4973462	1					
ANR	4973749	Identifier	chars		4973462	1					
ANR	4973750	Argument	"""arg_next"""		4973462	2					
ANR	4973751	PrimaryExpression	"""arg_next"""		4973462	0					
ANR	4973752	ExpressionStatement	pal -> depth --	245:16:7703:7715	4973462	1	True				
ANR	4973753	PostIncDecOperationExpression	pal -> depth --		4973462	0					
ANR	4973754	PtrMemberAccess	pal -> depth		4973462	0					
ANR	4973755	Identifier	pal		4973462	0					
ANR	4973756	Identifier	depth		4973462	1					
ANR	4973757	IncDec	--		4973462	1					
ANR	4973758	ContinueStatement	continue ;	246:16:7733:7741	4973462	2	True				
ANR	4973759	Statement	define	248:5:7782:7787	4973462	3	True				
ANR	4973760	ExpressionStatement	is_eol ( c ) ( c == '\\r' || c == '\\n' ) * argstr = cstr = pal -> cstr	248:12:7789:7940	4973462	4	True				
ANR	4973761	AssignmentExpression	is_eol ( c ) ( c == '\\r' || c == '\\n' ) * argstr = cstr = pal -> cstr		4973462	0		=			
ANR	4973762	MultiplicativeExpression	is_eol ( c ) ( c == '\\r' || c == '\\n' ) * argstr		4973462	0		*			
ANR	4973763	CallExpression	is_eol ( c ) ( c == '\\r' || c == '\\n' )		4973462	0					
ANR	4973764	Callee	is_eol ( c )		4973462	0					
ANR	4973765	CallExpression	is_eol ( c )		4973462	0					
ANR	4973766	Callee	is_eol		4973462	0					
ANR	4973767	Identifier	is_eol		4973462	0					
ANR	4973768	ArgumentList	c		4973462	1					
ANR	4973769	Argument	c		4973462	0					
ANR	4973770	Identifier	c		4973462	0					
ANR	4973771	ArgumentList	c == '\\r' || c == '\\n'		4973462	1					
ANR	4973772	Argument	c == '\\r' || c == '\\n'		4973462	0					
ANR	4973773	OrExpression	c == '\\r' || c == '\\n'		4973462	0		||			
ANR	4973774	EqualityExpression	c == '\\r'		4973462	0		==			
ANR	4973775	Identifier	c		4973462	0					
ANR	4973776	PrimaryExpression	'\\r'		4973462	1					
ANR	4973777	EqualityExpression	c == '\\n'		4973462	1		==			
ANR	4973778	Identifier	c		4973462	0					
ANR	4973779	PrimaryExpression	'\\n'		4973462	1					
ANR	4973780	Identifier	argstr		4973462	1					
ANR	4973781	AssignmentExpression	cstr = pal -> cstr		4973462	1		=			
ANR	4973782	Identifier	cstr		4973462	0					
ANR	4973783	PtrMemberAccess	pal -> cstr		4973462	1					
ANR	4973784	Identifier	pal		4973462	0					
ANR	4973785	Identifier	cstr		4973462	1					
ANR	4973786	ExpressionStatement	in_quote = false	251:12:7954:7970	4973462	5	True				
ANR	4973787	AssignmentExpression	in_quote = false		4973462	0		=			
ANR	4973788	Identifier	in_quote		4973462	0					
ANR	4973789	Identifier	false		4973462	1					
ANR	4973790	ExpressionStatement	eol = pal -> depth > 0	257:12:8332:8352	4973462	6	True				
ANR	4973791	AssignmentExpression	eol = pal -> depth > 0		4973462	0		=			
ANR	4973792	Identifier	eol		4973462	0					
ANR	4973793	RelationalExpression	pal -> depth > 0		4973462	1		>			
ANR	4973794	PtrMemberAccess	pal -> depth		4973462	0					
ANR	4973795	Identifier	pal		4973462	0					
ANR	4973796	Identifier	depth		4973462	1					
ANR	4973797	PrimaryExpression	0		4973462	1					
ANR	4973798	ForStatement	for ( i = 0 ; ; )		4973462	7					
ANR	4973799	ForInit	i = 0 ;	258:17:8371:8376	4973462	0	True				
ANR	4973800	AssignmentExpression	i = 0		4973462	0		=			
ANR	4973801	Identifier	i		4973462	0					
ANR	4973802	PrimaryExpression	0		4973462	1					
ANR	4973803	CompoundStatement		60:26:2396:2396	4973462	1					
ANR	4973804	IfStatement	if ( c == EOF )		4973462	0					
ANR	4973805	Condition	c == EOF	259:20:8402:8409	4973462	0	True				
ANR	4973806	EqualityExpression	c == EOF		4973462	0		==			
ANR	4973807	Identifier	c		4973462	0					
ANR	4973808	Identifier	EOF		4973462	1					
ANR	4973809	CompoundStatement		61:30:2428:2428	4973462	1					
ANR	4973810	IfStatement	if ( in_quote )		4973462	0					
ANR	4973811	Condition	in_quote	260:24:8438:8445	4973462	0	True				
ANR	4973812	Identifier	in_quote		4973462	0					
ANR	4973813	CompoundStatement		62:34:2464:2464	4973462	1					
ANR	4973814	ExpressionStatement	cstr [ i ] = 0	261:24:8474:8485	4973462	0	True				
ANR	4973815	AssignmentExpression	cstr [ i ] = 0		4973462	0		=			
ANR	4973816	ArrayIndexing	cstr [ i ]		4973462	0					
ANR	4973817	Identifier	cstr		4973462	0					
ANR	4973818	Identifier	i		4973462	1					
ANR	4973819	PrimaryExpression	0		4973462	1					
ANR	4973820	ExpressionStatement	"errprintf ( errmem , ""Unterminated quote in @-file: %s\\n"" , cstr )"	262:24:8511:8606	4973462	1	True				
ANR	4973821	CallExpression	"errprintf ( errmem , ""Unterminated quote in @-file: %s\\n"" , cstr )"		4973462	0					
ANR	4973822	Callee	errprintf		4973462	0					
ANR	4973823	Identifier	errprintf		4973462	0					
ANR	4973824	ArgumentList	errmem		4973462	1					
ANR	4973825	Argument	errmem		4973462	0					
ANR	4973826	Identifier	errmem		4973462	0					
ANR	4973827	Argument	"""Unterminated quote in @-file: %s\\n"""		4973462	1					
ANR	4973828	PrimaryExpression	"""Unterminated quote in @-file: %s\\n"""		4973462	0					
ANR	4973829	Argument	cstr		4973462	2					
ANR	4973830	Identifier	cstr		4973462	0					
ANR	4973831	ExpressionStatement	return_error ( gs_error_Fatal )	264:24:8632:8660	4973462	2	True				
ANR	4973832	CallExpression	return_error ( gs_error_Fatal )		4973462	0					
ANR	4973833	Callee	return_error		4973462	0					
ANR	4973834	Identifier	return_error		4973462	0					
ANR	4973835	ArgumentList	gs_error_Fatal		4973462	1					
ANR	4973836	Argument	gs_error_Fatal		4973462	0					
ANR	4973837	Identifier	gs_error_Fatal		4973462	0					
ANR	4973838	BreakStatement	break ;	266:20:8704:8709	4973462	1	True				
ANR	4973839	IfStatement	if ( pal -> depth > 0 && ! in_quote && c > 0 && c < 256 && isspace ( c ) )		4973462	1					
ANR	4973840	Condition	pal -> depth > 0 && ! in_quote && c > 0 && c < 256 && isspace ( c )	271:20:8945:9005	4973462	0	True				
ANR	4973841	AndExpression	pal -> depth > 0 && ! in_quote && c > 0 && c < 256 && isspace ( c )		4973462	0		&&			
ANR	4973842	RelationalExpression	pal -> depth > 0		4973462	0		>			
ANR	4973843	PtrMemberAccess	pal -> depth		4973462	0					
ANR	4973844	Identifier	pal		4973462	0					
ANR	4973845	Identifier	depth		4973462	1					
ANR	4973846	PrimaryExpression	0		4973462	1					
ANR	4973847	AndExpression	! in_quote && c > 0 && c < 256 && isspace ( c )		4973462	1		&&			
ANR	4973848	UnaryOperationExpression	! in_quote		4973462	0					
ANR	4973849	UnaryOperator	!		4973462	0					
ANR	4973850	Identifier	in_quote		4973462	1					
ANR	4973851	AndExpression	c > 0 && c < 256 && isspace ( c )		4973462	1		&&			
ANR	4973852	RelationalExpression	c > 0		4973462	0		>			
ANR	4973853	Identifier	c		4973462	0					
ANR	4973854	PrimaryExpression	0		4973462	1					
ANR	4973855	AndExpression	c < 256 && isspace ( c )		4973462	1		&&			
ANR	4973856	RelationalExpression	c < 256		4973462	0		<			
ANR	4973857	Identifier	c		4973462	0					
ANR	4973858	PrimaryExpression	256		4973462	1					
ANR	4973859	CallExpression	isspace ( c )		4973462	1					
ANR	4973860	Callee	isspace		4973462	0					
ANR	4973861	Identifier	isspace		4973462	0					
ANR	4973862	ArgumentList	c		4973462	1					
ANR	4973863	Argument	c		4973462	0					
ANR	4973864	Identifier	c		4973462	0					
ANR	4973865	BreakStatement	break ;	272:20:9028:9033	4973462	1	True				
ANR	4973866	IfStatement	if ( c == '#' && eol )		4973462	2					
ANR	4973867	Condition	c == '#' && eol	274:20:9137:9151	4973462	0	True				
ANR	4973868	AndExpression	c == '#' && eol		4973462	0		&&			
ANR	4973869	EqualityExpression	c == '#'		4973462	0		==			
ANR	4973870	Identifier	c		4973462	0					
ANR	4973871	PrimaryExpression	'#'		4973462	1					
ANR	4973872	Identifier	eol		4973462	1					
ANR	4973873	CompoundStatement		76:37:3170:3170	4973462	1					
ANR	4973874	DoStatement	do		4973462	0					
ANR	4973875	CompoundStatement		78:23:3237:3237	4973462	0					
ANR	4973876	ExpressionStatement	"c = get_codepoint ( pal , pas )"	277:24:9247:9274	4973462	0	True				
ANR	4973877	AssignmentExpression	"c = get_codepoint ( pal , pas )"		4973462	0		=			
ANR	4973878	Identifier	c		4973462	0					
ANR	4973879	CallExpression	"get_codepoint ( pal , pas )"		4973462	1					
ANR	4973880	Callee	get_codepoint		4973462	0					
ANR	4973881	Identifier	get_codepoint		4973462	0					
ANR	4973882	ArgumentList	pal		4973462	1					
ANR	4973883	Argument	pal		4973462	0					
ANR	4973884	Identifier	pal		4973462	0					
ANR	4973885	Argument	pas		4973462	1					
ANR	4973886	Identifier	pas		4973462	0					
ANR	4973887	Condition	c != 0 && ! is_eol ( c ) && c != EOF	278:29:9305:9336	4973462	1	True				
ANR	4973888	AndExpression	c != 0 && ! is_eol ( c ) && c != EOF		4973462	0		&&			
ANR	4973889	EqualityExpression	c != 0		4973462	0		!=			
ANR	4973890	Identifier	c		4973462	0					
ANR	4973891	PrimaryExpression	0		4973462	1					
ANR	4973892	AndExpression	! is_eol ( c ) && c != EOF		4973462	1		&&			
ANR	4973893	UnaryOperationExpression	! is_eol ( c )		4973462	0					
ANR	4973894	UnaryOperator	!		4973462	0					
ANR	4973895	CallExpression	is_eol ( c )		4973462	1					
ANR	4973896	Callee	is_eol		4973462	0					
ANR	4973897	Identifier	is_eol		4973462	0					
ANR	4973898	ArgumentList	c		4973462	1					
ANR	4973899	Argument	c		4973462	0					
ANR	4973900	Identifier	c		4973462	0					
ANR	4973901	EqualityExpression	c != EOF		4973462	1		!=			
ANR	4973902	Identifier	c		4973462	0					
ANR	4973903	Identifier	EOF		4973462	1					
ANR	4973904	IfStatement	if ( c == '\\r' )		4973462	1					
ANR	4973905	Condition	c == '\\r'	279:24:9364:9372	4973462	0	True				
ANR	4973906	EqualityExpression	c == '\\r'		4973462	0		==			
ANR	4973907	Identifier	c		4973462	0					
ANR	4973908	PrimaryExpression	'\\r'		4973462	1					
ANR	4973909	ExpressionStatement	"c = get_codepoint ( pal , pas )"	280:24:9399:9426	4973462	1	True				
ANR	4973910	AssignmentExpression	"c = get_codepoint ( pal , pas )"		4973462	0		=			
ANR	4973911	Identifier	c		4973462	0					
ANR	4973912	CallExpression	"get_codepoint ( pal , pas )"		4973462	1					
ANR	4973913	Callee	get_codepoint		4973462	0					
ANR	4973914	Identifier	get_codepoint		4973462	0					
ANR	4973915	ArgumentList	pal		4973462	1					
ANR	4973916	Argument	pal		4973462	0					
ANR	4973917	Identifier	pal		4973462	0					
ANR	4973918	Argument	pas		4973462	1					
ANR	4973919	Identifier	pas		4973462	0					
ANR	4973920	IfStatement	if ( c == '\\n' )		4973462	2					
ANR	4973921	Condition	c == '\\n'	281:24:9452:9460	4973462	0	True				
ANR	4973922	EqualityExpression	c == '\\n'		4973462	0		==			
ANR	4973923	Identifier	c		4973462	0					
ANR	4973924	PrimaryExpression	'\\n'		4973462	1					
ANR	4973925	ExpressionStatement	"c = get_codepoint ( pal , pas )"	282:24:9487:9514	4973462	1	True				
ANR	4973926	AssignmentExpression	"c = get_codepoint ( pal , pas )"		4973462	0		=			
ANR	4973927	Identifier	c		4973462	0					
ANR	4973928	CallExpression	"get_codepoint ( pal , pas )"		4973462	1					
ANR	4973929	Callee	get_codepoint		4973462	0					
ANR	4973930	Identifier	get_codepoint		4973462	0					
ANR	4973931	ArgumentList	pal		4973462	1					
ANR	4973932	Argument	pal		4973462	0					
ANR	4973933	Identifier	pal		4973462	0					
ANR	4973934	Argument	pas		4973462	1					
ANR	4973935	Identifier	pas		4973462	0					
ANR	4973936	ContinueStatement	continue ;	283:20:9536:9544	4973462	3	True				
ANR	4973937	IfStatement	if ( c == '\\\\' )		4973462	3					
ANR	4973938	Condition	c == '\\\\'	285:20:9600:9608	4973462	0	True				
ANR	4973939	EqualityExpression	c == '\\\\'		4973462	0		==			
ANR	4973940	Identifier	c		4973462	0					
ANR	4973941	PrimaryExpression	'\\\\'		4973462	1					
ANR	4973942	CompoundStatement		87:31:3627:3627	4973462	1					
ANR	4973943	ExpressionStatement	"c = get_codepoint ( pal , pas )"	287:20:9692:9719	4973462	0	True				
ANR	4973944	AssignmentExpression	"c = get_codepoint ( pal , pas )"		4973462	0		=			
ANR	4973945	Identifier	c		4973462	0					
ANR	4973946	CallExpression	"get_codepoint ( pal , pas )"		4973462	1					
ANR	4973947	Callee	get_codepoint		4973462	0					
ANR	4973948	Identifier	get_codepoint		4973462	0					
ANR	4973949	ArgumentList	pal		4973462	1					
ANR	4973950	Argument	pal		4973462	0					
ANR	4973951	Identifier	pal		4973462	0					
ANR	4973952	Argument	pas		4973462	1					
ANR	4973953	Identifier	pas		4973462	0					
ANR	4973954	IfStatement	if ( is_eol ( c ) )		4973462	1					
ANR	4973955	Condition	is_eol ( c )	288:24:9745:9753	4973462	0	True				
ANR	4973956	CallExpression	is_eol ( c )		4973462	0					
ANR	4973957	Callee	is_eol		4973462	0					
ANR	4973958	Identifier	is_eol		4973462	0					
ANR	4973959	ArgumentList	c		4973462	1					
ANR	4973960	Argument	c		4973462	0					
ANR	4973961	Identifier	c		4973462	0					
ANR	4973962	CompoundStatement		90:35:3772:3772	4973462	1					
ANR	4973963	IfStatement	if ( c == '\\r' )		4973462	0					
ANR	4973964	Condition	c == '\\r'	289:28:9786:9794	4973462	0	True				
ANR	4973965	EqualityExpression	c == '\\r'		4973462	0		==			
ANR	4973966	Identifier	c		4973462	0					
ANR	4973967	PrimaryExpression	'\\r'		4973462	1					
ANR	4973968	ExpressionStatement	"c = get_codepoint ( pal , pas )"	290:28:9825:9852	4973462	1	True				
ANR	4973969	AssignmentExpression	"c = get_codepoint ( pal , pas )"		4973462	0		=			
ANR	4973970	Identifier	c		4973462	0					
ANR	4973971	CallExpression	"get_codepoint ( pal , pas )"		4973462	1					
ANR	4973972	Callee	get_codepoint		4973462	0					
ANR	4973973	Identifier	get_codepoint		4973462	0					
ANR	4973974	ArgumentList	pal		4973462	1					
ANR	4973975	Argument	pal		4973462	0					
ANR	4973976	Identifier	pal		4973462	0					
ANR	4973977	Argument	pas		4973462	1					
ANR	4973978	Identifier	pas		4973462	0					
ANR	4973979	IfStatement	if ( c == '\\n' )		4973462	1					
ANR	4973980	Condition	c == '\\n'	291:28:9882:9890	4973462	0	True				
ANR	4973981	EqualityExpression	c == '\\n'		4973462	0		==			
ANR	4973982	Identifier	c		4973462	0					
ANR	4973983	PrimaryExpression	'\\n'		4973462	1					
ANR	4973984	ExpressionStatement	"c = get_codepoint ( pal , pas )"	292:28:9921:9948	4973462	1	True				
ANR	4973985	AssignmentExpression	"c = get_codepoint ( pal , pas )"		4973462	0		=			
ANR	4973986	Identifier	c		4973462	0					
ANR	4973987	CallExpression	"get_codepoint ( pal , pas )"		4973462	1					
ANR	4973988	Callee	get_codepoint		4973462	0					
ANR	4973989	Identifier	get_codepoint		4973462	0					
ANR	4973990	ArgumentList	pal		4973462	1					
ANR	4973991	Argument	pal		4973462	0					
ANR	4973992	Identifier	pal		4973462	0					
ANR	4973993	Argument	pas		4973462	1					
ANR	4973994	Identifier	pas		4973462	0					
ANR	4973995	ExpressionStatement	eol = true	293:24:9974:9984	4973462	2	True				
ANR	4973996	AssignmentExpression	eol = true		4973462	0		=			
ANR	4973997	Identifier	eol		4973462	0					
ANR	4973998	Identifier	true		4973462	1					
ANR	4973999	ContinueStatement	continue ;	294:24:10010:10018	4973462	3	True				
ANR	4974000	IfStatement	if ( i >= arg_str_max - 1 )		4973462	2					
ANR	4974001	Condition	i >= arg_str_max - 1	298:24:10226:10245	4973462	0	True				
ANR	4974002	RelationalExpression	i >= arg_str_max - 1		4973462	0		>=			
ANR	4974003	Identifier	i		4973462	0					
ANR	4974004	AdditiveExpression	arg_str_max - 1		4973462	1		-			
ANR	4974005	Identifier	arg_str_max		4973462	0					
ANR	4974006	PrimaryExpression	1		4973462	1					
ANR	4974007	CompoundStatement		100:46:4264:4264	4973462	1					
ANR	4974008	ExpressionStatement	cstr [ i ] = 0	299:24:10274:10285	4973462	0	True				
ANR	4974009	AssignmentExpression	cstr [ i ] = 0		4973462	0		=			
ANR	4974010	ArrayIndexing	cstr [ i ]		4973462	0					
ANR	4974011	Identifier	cstr		4973462	0					
ANR	4974012	Identifier	i		4973462	1					
ANR	4974013	PrimaryExpression	0		4973462	1					
ANR	4974014	ExpressionStatement	"errprintf ( errmem , ""Command too long: %s\\n"" , cstr )"	300:24:10311:10360	4973462	1	True				
ANR	4974015	CallExpression	"errprintf ( errmem , ""Command too long: %s\\n"" , cstr )"		4973462	0					
ANR	4974016	Callee	errprintf		4973462	0					
ANR	4974017	Identifier	errprintf		4973462	0					
ANR	4974018	ArgumentList	errmem		4973462	1					
ANR	4974019	Argument	errmem		4973462	0					
ANR	4974020	Identifier	errmem		4973462	0					
ANR	4974021	Argument	"""Command too long: %s\\n"""		4973462	1					
ANR	4974022	PrimaryExpression	"""Command too long: %s\\n"""		4973462	0					
ANR	4974023	Argument	cstr		4973462	2					
ANR	4974024	Identifier	cstr		4973462	0					
ANR	4974025	ExpressionStatement	return_error ( gs_error_Fatal )	301:24:10386:10414	4973462	2	True				
ANR	4974026	CallExpression	return_error ( gs_error_Fatal )		4973462	0					
ANR	4974027	Callee	return_error		4973462	0					
ANR	4974028	Identifier	return_error		4973462	0					
ANR	4974029	ArgumentList	gs_error_Fatal		4973462	1					
ANR	4974030	Argument	gs_error_Fatal		4973462	0					
ANR	4974031	Identifier	gs_error_Fatal		4973462	0					
ANR	4974032	ExpressionStatement	cstr [ i ++ ] = '\\\\'	303:20:10458:10474	4973462	3	True				
ANR	4974033	AssignmentExpression	cstr [ i ++ ] = '\\\\'		4973462	0		=			
ANR	4974034	ArrayIndexing	cstr [ i ++ ]		4973462	0					
ANR	4974035	Identifier	cstr		4973462	0					
ANR	4974036	PostIncDecOperationExpression	i ++		4973462	1					
ANR	4974037	Identifier	i		4973462	0					
ANR	4974038	IncDec	++		4973462	1					
ANR	4974039	PrimaryExpression	'\\\\'		4973462	1					
ANR	4974040	ExpressionStatement	eol = false	304:20:10496:10507	4973462	4	True				
ANR	4974041	AssignmentExpression	eol = false		4973462	0		=			
ANR	4974042	Identifier	eol		4973462	0					
ANR	4974043	Identifier	false		4973462	1					
ANR	4974044	ContinueStatement	continue ;	305:20:10529:10537	4973462	5	True				
ANR	4974045	IfStatement	if ( i >= arg_str_max - 1 )		4973462	4					
ANR	4974046	Condition	i >= arg_str_max - 1	308:20:10650:10669	4973462	0	True				
ANR	4974047	RelationalExpression	i >= arg_str_max - 1		4973462	0		>=			
ANR	4974048	Identifier	i		4973462	0					
ANR	4974049	AdditiveExpression	arg_str_max - 1		4973462	1		-			
ANR	4974050	Identifier	arg_str_max		4973462	0					
ANR	4974051	PrimaryExpression	1		4973462	1					
ANR	4974052	CompoundStatement		110:42:4688:4688	4973462	1					
ANR	4974053	ExpressionStatement	cstr [ i ] = 0	309:20:10694:10705	4973462	0	True				
ANR	4974054	AssignmentExpression	cstr [ i ] = 0		4973462	0		=			
ANR	4974055	ArrayIndexing	cstr [ i ]		4973462	0					
ANR	4974056	Identifier	cstr		4973462	0					
ANR	4974057	Identifier	i		4973462	1					
ANR	4974058	PrimaryExpression	0		4973462	1					
ANR	4974059	ExpressionStatement	"errprintf ( errmem , ""Command too long: %s\\n"" , cstr )"	310:20:10727:10776	4973462	1	True				
ANR	4974060	CallExpression	"errprintf ( errmem , ""Command too long: %s\\n"" , cstr )"		4973462	0					
ANR	4974061	Callee	errprintf		4973462	0					
ANR	4974062	Identifier	errprintf		4973462	0					
ANR	4974063	ArgumentList	errmem		4973462	1					
ANR	4974064	Argument	errmem		4973462	0					
ANR	4974065	Identifier	errmem		4973462	0					
ANR	4974066	Argument	"""Command too long: %s\\n"""		4973462	1					
ANR	4974067	PrimaryExpression	"""Command too long: %s\\n"""		4973462	0					
ANR	4974068	Argument	cstr		4973462	2					
ANR	4974069	Identifier	cstr		4973462	0					
ANR	4974070	ExpressionStatement	return_error ( gs_error_Fatal )	311:20:10798:10826	4973462	2	True				
ANR	4974071	CallExpression	return_error ( gs_error_Fatal )		4973462	0					
ANR	4974072	Callee	return_error		4973462	0					
ANR	4974073	Identifier	return_error		4973462	0					
ANR	4974074	ArgumentList	gs_error_Fatal		4973462	1					
ANR	4974075	Argument	gs_error_Fatal		4973462	0					
ANR	4974076	Identifier	gs_error_Fatal		4973462	0					
ANR	4974077	IfStatement	"if ( c == '""' )"		4973462	5					
ANR	4974078	Condition	"c == '""'"	315:20:11015:11022	4973462	0	True				
ANR	4974079	EqualityExpression	"c == '""'"		4973462	0		==			
ANR	4974080	Identifier	c		4973462	0					
ANR	4974081	PrimaryExpression	"'""'"		4973462	1					
ANR	4974082	ExpressionStatement	in_quote = ! in_quote	316:20:11045:11065	4973462	1	True				
ANR	4974083	AssignmentExpression	in_quote = ! in_quote		4973462	0		=			
ANR	4974084	Identifier	in_quote		4973462	0					
ANR	4974085	UnaryOperationExpression	! in_quote		4973462	1					
ANR	4974086	UnaryOperator	!		4973462	0					
ANR	4974087	Identifier	in_quote		4973462	1					
ANR	4974088	ElseStatement	else		4973462	0					
ANR	4974089	ExpressionStatement	cstr [ i ++ ] = c	319:20:11130:11143	4973462	0	True				
ANR	4974090	AssignmentExpression	cstr [ i ++ ] = c		4973462	0		=			
ANR	4974091	ArrayIndexing	cstr [ i ++ ]		4973462	0					
ANR	4974092	Identifier	cstr		4973462	0					
ANR	4974093	PostIncDecOperationExpression	i ++		4973462	1					
ANR	4974094	Identifier	i		4973462	0					
ANR	4974095	IncDec	++		4973462	1					
ANR	4974096	Identifier	c		4973462	1					
ANR	4974097	ExpressionStatement	eol = is_eol ( c )	323:16:11239:11254	4973462	6	True				
ANR	4974098	AssignmentExpression	eol = is_eol ( c )		4973462	0		=			
ANR	4974099	Identifier	eol		4973462	0					
ANR	4974100	CallExpression	is_eol ( c )		4973462	1					
ANR	4974101	Callee	is_eol		4973462	0					
ANR	4974102	Identifier	is_eol		4973462	0					
ANR	4974103	ArgumentList	c		4973462	1					
ANR	4974104	Argument	c		4973462	0					
ANR	4974105	Identifier	c		4973462	0					
ANR	4974106	ExpressionStatement	"c = get_codepoint ( pal , pas )"	324:16:11272:11299	4973462	7	True				
ANR	4974107	AssignmentExpression	"c = get_codepoint ( pal , pas )"		4973462	0		=			
ANR	4974108	Identifier	c		4973462	0					
ANR	4974109	CallExpression	"get_codepoint ( pal , pas )"		4973462	1					
ANR	4974110	Callee	get_codepoint		4973462	0					
ANR	4974111	Identifier	get_codepoint		4973462	0					
ANR	4974112	ArgumentList	pal		4973462	1					
ANR	4974113	Argument	pal		4973462	0					
ANR	4974114	Identifier	pal		4973462	0					
ANR	4974115	Argument	pas		4973462	1					
ANR	4974116	Identifier	pas		4973462	0					
ANR	4974117	ExpressionStatement	cstr [ i ] = 0	326:12:11327:11338	4973462	8	True				
ANR	4974118	AssignmentExpression	cstr [ i ] = 0		4973462	0		=			
ANR	4974119	ArrayIndexing	cstr [ i ]		4973462	0					
ANR	4974120	Identifier	cstr		4973462	0					
ANR	4974121	Identifier	i		4973462	1					
ANR	4974122	PrimaryExpression	0		4973462	1					
ANR	4974123	IfStatement	if ( pal -> expand_ats && * * argstr == '@' )		4973462	2					
ANR	4974124	Condition	pal -> expand_ats && * * argstr == '@'	332:12:11543:11576	4973462	0	True				
ANR	4974125	AndExpression	pal -> expand_ats && * * argstr == '@'		4973462	0		&&			
ANR	4974126	PtrMemberAccess	pal -> expand_ats		4973462	0					
ANR	4974127	Identifier	pal		4973462	0					
ANR	4974128	Identifier	expand_ats		4973462	1					
ANR	4974129	EqualityExpression	* * argstr == '@'		4973462	1		==			
ANR	4974130	UnaryOperationExpression	* * argstr		4973462	0					
ANR	4974131	UnaryOperator	*		4973462	0					
ANR	4974132	UnaryOperationExpression	* argstr		4973462	1					
ANR	4974133	UnaryOperator	*		4973462	0					
ANR	4974134	Identifier	argstr		4973462	1					
ANR	4974135	PrimaryExpression	'@'		4973462	1					
ANR	4974136	CompoundStatement		136:12:5634:5641	4973462	1					
ANR	4974137	IdentifierDeclStatement	char * fname ;	333:12:11593:11604	4973462	0	True				
ANR	4974138	IdentifierDecl	* fname		4973462	0					
ANR	4974139	IdentifierDeclType	char *		4973462	0					
ANR	4974140	Identifier	fname		4973462	1					
ANR	4974141	IdentifierDeclStatement	FILE * f ;	334:12:11618:11625	4973462	1	True				
ANR	4974142	IdentifierDecl	* f		4973462	0					
ANR	4974143	IdentifierDeclType	FILE *		4973462	0					
ANR	4974144	Identifier	f		4973462	1					
ANR	4974145	IfStatement	if ( pal -> depth + 1 == arg_depth_max )		4973462	2					
ANR	4974146	Condition	pal -> depth + 1 == arg_depth_max	335:16:11643:11671	4973462	0	True				
ANR	4974147	EqualityExpression	pal -> depth + 1 == arg_depth_max		4973462	0		==			
ANR	4974148	AdditiveExpression	pal -> depth + 1		4973462	0		+			
ANR	4974149	PtrMemberAccess	pal -> depth		4973462	0					
ANR	4974150	Identifier	pal		4973462	0					
ANR	4974151	Identifier	depth		4973462	1					
ANR	4974152	PrimaryExpression	1		4973462	1					
ANR	4974153	Identifier	arg_depth_max		4973462	1					
ANR	4974154	CompoundStatement		137:47:5690:5690	4973462	1					
ANR	4974155	ExpressionStatement	"errprintf ( errmem , ""Too much nesting of @-files.\\n"" )"	336:16:11692:11743	4973462	0	True				
ANR	4974156	CallExpression	"errprintf ( errmem , ""Too much nesting of @-files.\\n"" )"		4973462	0					
ANR	4974157	Callee	errprintf		4973462	0					
ANR	4974158	Identifier	errprintf		4973462	0					
ANR	4974159	ArgumentList	errmem		4973462	1					
ANR	4974160	Argument	errmem		4973462	0					
ANR	4974161	Identifier	errmem		4973462	0					
ANR	4974162	Argument	"""Too much nesting of @-files.\\n"""		4973462	1					
ANR	4974163	PrimaryExpression	"""Too much nesting of @-files.\\n"""		4973462	0					
ANR	4974164	ExpressionStatement	return_error ( gs_error_Fatal )	337:16:11761:11789	4973462	1	True				
ANR	4974165	CallExpression	return_error ( gs_error_Fatal )		4973462	0					
ANR	4974166	Callee	return_error		4973462	0					
ANR	4974167	Identifier	return_error		4973462	0					
ANR	4974168	ArgumentList	gs_error_Fatal		4973462	1					
ANR	4974169	Argument	gs_error_Fatal		4973462	0					
ANR	4974170	Identifier	gs_error_Fatal		4973462	0					
ANR	4974171	ExpressionStatement	fname = ( char * ) * argstr + 1	339:12:11817:11844	4973462	3	True				
ANR	4974172	AssignmentExpression	fname = ( char * ) * argstr + 1		4973462	0		=			
ANR	4974173	Identifier	fname		4973462	0					
ANR	4974174	AdditiveExpression	( char * ) * argstr + 1		4973462	1		+			
ANR	4974175	CastExpression	( char * ) * argstr		4973462	0					
ANR	4974176	CastTarget	char *		4973462	0					
ANR	4974177	UnaryOperationExpression	* argstr		4973462	1					
ANR	4974178	UnaryOperator	*		4973462	0					
ANR	4974179	Identifier	argstr		4973462	1					
ANR	4974180	PrimaryExpression	1		4973462	1					
ANR	4974181	ExpressionStatement	"f = ( * pal -> arg_fopen ) ( fname , pal -> fopen_data )"	340:12:11871:11917	4973462	4	True				
ANR	4974182	AssignmentExpression	"f = ( * pal -> arg_fopen ) ( fname , pal -> fopen_data )"		4973462	0		=			
ANR	4974183	Identifier	f		4973462	0					
ANR	4974184	CallExpression	"( * pal -> arg_fopen ) ( fname , pal -> fopen_data )"		4973462	1					
ANR	4974185	Callee	* pal -> arg_fopen		4973462	0					
ANR	4974186	UnaryOperationExpression	* pal -> arg_fopen		4973462	0					
ANR	4974187	UnaryOperator	*		4973462	0					
ANR	4974188	PtrMemberAccess	pal -> arg_fopen		4973462	1					
ANR	4974189	Identifier	pal		4973462	0					
ANR	4974190	Identifier	arg_fopen		4973462	1					
ANR	4974191	ArgumentList	fname		4973462	1					
ANR	4974192	Argument	fname		4973462	0					
ANR	4974193	Identifier	fname		4973462	0					
ANR	4974194	Argument	pal -> fopen_data		4973462	1					
ANR	4974195	PtrMemberAccess	pal -> fopen_data		4973462	0					
ANR	4974196	Identifier	pal		4973462	0					
ANR	4974197	Identifier	fopen_data		4973462	1					
ANR	4974198	IfStatement	if ( f == NULL )		4973462	5					
ANR	4974199	Condition	f == NULL	341:16:11935:11943	4973462	0	True				
ANR	4974200	EqualityExpression	f == NULL		4973462	0		==			
ANR	4974201	Identifier	f		4973462	0					
ANR	4974202	Identifier	NULL		4973462	1					
ANR	4974203	CompoundStatement		143:27:5962:5962	4973462	1					
ANR	4974204	ExpressionStatement	"errprintf ( errmem , ""Unable to open command line file %s\\n"" , * argstr )"	342:16:11964:12031	4973462	0	True				
ANR	4974205	CallExpression	"errprintf ( errmem , ""Unable to open command line file %s\\n"" , * argstr )"		4973462	0					
ANR	4974206	Callee	errprintf		4973462	0					
ANR	4974207	Identifier	errprintf		4973462	0					
ANR	4974208	ArgumentList	errmem		4973462	1					
ANR	4974209	Argument	errmem		4973462	0					
ANR	4974210	Identifier	errmem		4973462	0					
ANR	4974211	Argument	"""Unable to open command line file %s\\n"""		4973462	1					
ANR	4974212	PrimaryExpression	"""Unable to open command line file %s\\n"""		4973462	0					
ANR	4974213	Argument	* argstr		4973462	2					
ANR	4974214	UnaryOperationExpression	* argstr		4973462	0					
ANR	4974215	UnaryOperator	*		4973462	0					
ANR	4974216	Identifier	argstr		4973462	1					
ANR	4974217	ExpressionStatement	return_error ( gs_error_Fatal )	343:16:12049:12077	4973462	1	True				
ANR	4974218	CallExpression	return_error ( gs_error_Fatal )		4973462	0					
ANR	4974219	Callee	return_error		4973462	0					
ANR	4974220	Identifier	return_error		4973462	0					
ANR	4974221	ArgumentList	gs_error_Fatal		4973462	1					
ANR	4974222	Argument	gs_error_Fatal		4973462	0					
ANR	4974223	Identifier	gs_error_Fatal		4973462	0					
ANR	4974224	ExpressionStatement	pas = & pal -> sources [ ++ pal -> depth ]	345:12:12105:12138	4973462	6	True				
ANR	4974225	AssignmentExpression	pas = & pal -> sources [ ++ pal -> depth ]		4973462	0		=			
ANR	4974226	Identifier	pas		4973462	0					
ANR	4974227	UnaryOperationExpression	& pal -> sources [ ++ pal -> depth ]		4973462	1					
ANR	4974228	UnaryOperator	&		4973462	0					
ANR	4974229	ArrayIndexing	pal -> sources [ ++ pal -> depth ]		4973462	1					
ANR	4974230	PtrMemberAccess	pal -> sources		4973462	0					
ANR	4974231	Identifier	pal		4973462	0					
ANR	4974232	Identifier	sources		4973462	1					
ANR	4974233	UnaryExpression	++ pal -> depth		4973462	1					
ANR	4974234	IncDec	++		4973462	0					
ANR	4974235	PtrMemberAccess	pal -> depth		4973462	1					
ANR	4974236	Identifier	pal		4973462	0					
ANR	4974237	Identifier	depth		4973462	1					
ANR	4974238	ExpressionStatement	pas -> is_file = true	346:12:12152:12171	4973462	7	True				
ANR	4974239	AssignmentExpression	pas -> is_file = true		4973462	0		=			
ANR	4974240	PtrMemberAccess	pas -> is_file		4973462	0					
ANR	4974241	Identifier	pas		4973462	0					
ANR	4974242	Identifier	is_file		4973462	1					
ANR	4974243	Identifier	true		4973462	1					
ANR	4974244	ExpressionStatement	pas -> u . file = f	347:12:12185:12200	4973462	8	True				
ANR	4974245	AssignmentExpression	pas -> u . file = f		4973462	0		=			
ANR	4974246	MemberAccess	pas -> u . file		4973462	0					
ANR	4974247	PtrMemberAccess	pas -> u		4973462	0					
ANR	4974248	Identifier	pas		4973462	0					
ANR	4974249	Identifier	u		4973462	1					
ANR	4974250	Identifier	file		4973462	1					
ANR	4974251	Identifier	f		4973462	1					
ANR	4974252	ContinueStatement	continue ;	348:12:12214:12222	4973462	9	True				
ANR	4974253	Condition	* * argstr == 0	350:13:12301:12313	4973462	1	True				
ANR	4974254	EqualityExpression	* * argstr == 0		4973462	0		==			
ANR	4974255	UnaryOperationExpression	* * argstr		4973462	0					
ANR	4974256	UnaryOperator	*		4973462	0					
ANR	4974257	UnaryOperationExpression	* argstr		4973462	1					
ANR	4974258	UnaryOperator	*		4973462	0					
ANR	4974259	Identifier	argstr		4973462	1					
ANR	4974260	PrimaryExpression	0		4973462	1					
ANR	4974261	ReturnStatement	return 1 ;	352:4:12357:12365	4973462	7	True				
ANR	4974262	PrimaryExpression	1		4973462	0					
ANR	4974263	ReturnType	int		4973462	1					
ANR	4974264	Identifier	arg_next		4973462	2					
ANR	4974265	ParameterList	"arg_list * pal , const char * * argstr , const gs_memory_t * errmem"		4973462	3					
ANR	4974266	Parameter	arg_list * pal	198:9:5919:5932	4973462	0	True				
ANR	4974267	ParameterType	arg_list *		4973462	0					
ANR	4974268	Identifier	pal		4973462	1					
ANR	4974269	Parameter	const char * * argstr	198:25:5935:5953	4973462	1	True				
ANR	4974270	ParameterType	const char * *		4973462	0					
ANR	4974271	Identifier	argstr		4973462	1					
ANR	4974272	Parameter	const gs_memory_t * errmem	198:46:5956:5980	4973462	2	True				
ANR	4974273	ParameterType	const gs_memory_t *		4973462	0					
ANR	4974274	Identifier	errmem		4973462	1					
ANR	4974275	CFGEntryNode	ENTRY		4973462		True				
ANR	4974276	CFGExitNode	EXIT		4973462		True				
ANR	4974277	InfiniteForNode	true		4973462		True				
ANR	4974278	Symbol	cstr		4973462						
ANR	4974279	Symbol	eol		4973462						
ANR	4974280	Symbol	is_eol		4973462						
ANR	4974281	Symbol	errmem		4973462						
ANR	4974282	Symbol	* pal		4973462						
ANR	4974283	Symbol	pas -> is_file		4973462						
ANR	4974284	Symbol	pal -> fopen_data		4973462						
ANR	4974285	Symbol	pal -> arg_fopen		4973462						
ANR	4974286	Symbol	pas -> u . s . parsed		4973462						
ANR	4974287	Symbol	* pas		4973462						
ANR	4974288	Symbol	* ( pal -> argp ++ )		4973462						
ANR	4974289	Symbol	pas -> u . file		4973462						
ANR	4974290	Symbol	pas -> u		4973462						
ANR	4974291	Symbol	strlen		4973462						
ANR	4974292	Symbol	pas -> u . s . str		4973462						
ANR	4974293	Symbol	* pal -> arg_fopen		4973462						
ANR	4974294	Symbol	arg_depth_max		4973462						
ANR	4974295	Symbol	* * argstr		4973462						
ANR	4974296	Symbol	pal		4973462						
ANR	4974297	Symbol	EOF		4973462						
ANR	4974298	Symbol	gs_error_Fatal		4973462						
ANR	4974299	Symbol	fname		4973462						
ANR	4974300	Symbol	pas -> u . s . memory		4973462						
ANR	4974301	Symbol	pas		4973462						
ANR	4974302	Symbol	c		4973462						
ANR	4974303	Symbol	NULL		4973462						
ANR	4974304	Symbol	* argstr		4973462						
ANR	4974305	Symbol	pal -> cstr		4973462						
ANR	4974306	Symbol	argstr		4973462						
ANR	4974307	Symbol	f		4973462						
ANR	4974308	Symbol	isspace		4973462						
ANR	4974309	Symbol	false		4973462						
ANR	4974310	Symbol	i		4973462						
ANR	4974311	Symbol	get_codepoint		4973462						
ANR	4974312	Symbol	arg_str_max		4973462						
ANR	4974313	Symbol	* * pal		4973462						
ANR	4974314	Symbol	pas -> u . s . chars		4973462						
ANR	4974315	Symbol	pal -> expand_ats		4973462						
ANR	4974316	Symbol	* i		4973462						
ANR	4974317	Symbol	pal -> depth		4973462						
ANR	4974318	Symbol	in_quote		4973462						
ANR	4974319	Symbol	pal -> argp		4973462						
ANR	4974320	Symbol	true		4973462						
ANR	4974321	Symbol	* cstr		4973462						
ANR	4974322	Symbol	pas -> u . s		4973462						
ANR	4974323	Symbol	pal -> sources		4973462						
ANR	4974324	Symbol	pal -> argn		4973462						
ANR	4974325	Function	arg_copy	356:0:12413:12668							
ANR	4974326	FunctionDef	"arg_copy (const char * str , gs_memory_t * mem)"		4974325	0					
ANR	4974327	CompoundStatement		358:0:12465:12668	4974325	0					
ANR	4974328	IdentifierDeclStatement	"char * sstr = ( char * ) gs_alloc_bytes ( mem , strlen ( str ) + 1 , ""arg_copy"" ) ;"	359:4:12471:12540	4974325	0	True				
ANR	4974329	IdentifierDecl	"* sstr = ( char * ) gs_alloc_bytes ( mem , strlen ( str ) + 1 , ""arg_copy"" )"		4974325	0					
ANR	4974330	IdentifierDeclType	char *		4974325	0					
ANR	4974331	Identifier	sstr		4974325	1					
ANR	4974332	AssignmentExpression	"* sstr = ( char * ) gs_alloc_bytes ( mem , strlen ( str ) + 1 , ""arg_copy"" )"		4974325	2		=			
ANR	4974333	Identifier	sstr		4974325	0					
ANR	4974334	CastExpression	"( char * ) gs_alloc_bytes ( mem , strlen ( str ) + 1 , ""arg_copy"" )"		4974325	1					
ANR	4974335	CastTarget	char *		4974325	0					
ANR	4974336	CallExpression	"gs_alloc_bytes ( mem , strlen ( str ) + 1 , ""arg_copy"" )"		4974325	1					
ANR	4974337	Callee	gs_alloc_bytes		4974325	0					
ANR	4974338	Identifier	gs_alloc_bytes		4974325	0					
ANR	4974339	ArgumentList	mem		4974325	1					
ANR	4974340	Argument	mem		4974325	0					
ANR	4974341	Identifier	mem		4974325	0					
ANR	4974342	Argument	strlen ( str ) + 1		4974325	1					
ANR	4974343	AdditiveExpression	strlen ( str ) + 1		4974325	0		+			
ANR	4974344	CallExpression	strlen ( str )		4974325	0					
ANR	4974345	Callee	strlen		4974325	0					
ANR	4974346	Identifier	strlen		4974325	0					
ANR	4974347	ArgumentList	str		4974325	1					
ANR	4974348	Argument	str		4974325	0					
ANR	4974349	Identifier	str		4974325	0					
ANR	4974350	PrimaryExpression	1		4974325	1					
ANR	4974351	Argument	"""arg_copy"""		4974325	2					
ANR	4974352	PrimaryExpression	"""arg_copy"""		4974325	0					
ANR	4974353	IfStatement	if ( sstr == 0 )		4974325	1					
ANR	4974354	Condition	sstr == 0	361:8:12551:12559	4974325	0	True				
ANR	4974355	EqualityExpression	sstr == 0		4974325	0		==			
ANR	4974356	Identifier	sstr		4974325	0					
ANR	4974357	PrimaryExpression	0		4974325	1					
ANR	4974358	CompoundStatement		4:19:96:96	4974325	1					
ANR	4974359	ExpressionStatement	"lprintf ( ""Out of memory!\\n"" )"	362:8:12572:12599	4974325	0	True				
ANR	4974360	CallExpression	"lprintf ( ""Out of memory!\\n"" )"		4974325	0					
ANR	4974361	Callee	lprintf		4974325	0					
ANR	4974362	Identifier	lprintf		4974325	0					
ANR	4974363	ArgumentList	"""Out of memory!\\n"""		4974325	1					
ANR	4974364	Argument	"""Out of memory!\\n"""		4974325	0					
ANR	4974365	PrimaryExpression	"""Out of memory!\\n"""		4974325	0					
ANR	4974366	ReturnStatement	return NULL ;	363:8:12609:12620	4974325	1	True				
ANR	4974367	Identifier	NULL		4974325	0					
ANR	4974368	ExpressionStatement	"strcpy ( sstr , str )"	365:4:12632:12649	4974325	2	True				
ANR	4974369	CallExpression	"strcpy ( sstr , str )"		4974325	0					
ANR	4974370	Callee	strcpy		4974325	0					
ANR	4974371	Identifier	strcpy		4974325	0					
ANR	4974372	ArgumentList	sstr		4974325	1					
ANR	4974373	Argument	sstr		4974325	0					
ANR	4974374	Identifier	sstr		4974325	0					
ANR	4974375	Argument	str		4974325	1					
ANR	4974376	Identifier	str		4974325	0					
ANR	4974377	ReturnStatement	return sstr ;	366:4:12655:12666	4974325	3	True				
ANR	4974378	Identifier	sstr		4974325	0					
ANR	4974379	ReturnType	char *		4974325	1					
ANR	4974380	Identifier	arg_copy		4974325	2					
ANR	4974381	ParameterList	"const char * str , gs_memory_t * mem"		4974325	3					
ANR	4974382	Parameter	const char * str	357:9:12429:12443	4974325	0	True				
ANR	4974383	ParameterType	const char *		4974325	0					
ANR	4974384	Identifier	str		4974325	1					
ANR	4974385	Parameter	gs_memory_t * mem	357:26:12446:12462	4974325	1	True				
ANR	4974386	ParameterType	gs_memory_t *		4974325	0					
ANR	4974387	Identifier	mem		4974325	1					
ANR	4974388	CFGEntryNode	ENTRY		4974325		True				
ANR	4974389	CFGExitNode	EXIT		4974325		True				
ANR	4974390	Symbol	str		4974325						
ANR	4974391	Symbol	strlen		4974325						
ANR	4974392	Symbol	gs_alloc_bytes		4974325						
ANR	4974393	Symbol	NULL		4974325						
ANR	4974394	Symbol	mem		4974325						
ANR	4974395	Symbol	sstr		4974325						
ANR	4974396	Function	arg_free	370:0:12713:12801							
ANR	4974397	FunctionDef	"arg_free (char * str , gs_memory_t * mem)"		4974396	0					
ANR	4974398	CompoundStatement		372:0:12757:12801	4974396	0					
ANR	4974399	ExpressionStatement	"gs_free_object ( mem , str , ""arg_copy"" )"	373:4:12763:12799	4974396	0	True				
ANR	4974400	CallExpression	"gs_free_object ( mem , str , ""arg_copy"" )"		4974396	0					
ANR	4974401	Callee	gs_free_object		4974396	0					
ANR	4974402	Identifier	gs_free_object		4974396	0					
ANR	4974403	ArgumentList	mem		4974396	1					
ANR	4974404	Argument	mem		4974396	0					
ANR	4974405	Identifier	mem		4974396	0					
ANR	4974406	Argument	str		4974396	1					
ANR	4974407	Identifier	str		4974396	0					
ANR	4974408	Argument	"""arg_copy"""		4974396	2					
ANR	4974409	PrimaryExpression	"""arg_copy"""		4974396	0					
ANR	4974410	ReturnType	void		4974396	1					
ANR	4974411	Identifier	arg_free		4974396	2					
ANR	4974412	ParameterList	"char * str , gs_memory_t * mem"		4974396	3					
ANR	4974413	Parameter	char * str	371:9:12727:12735	4974396	0	True				
ANR	4974414	ParameterType	char *		4974396	0					
ANR	4974415	Identifier	str		4974396	1					
ANR	4974416	Parameter	gs_memory_t * mem	371:20:12738:12754	4974396	1	True				
ANR	4974417	ParameterType	gs_memory_t *		4974396	0					
ANR	4974418	Identifier	mem		4974396	1					
ANR	4974419	CFGEntryNode	ENTRY		4974396		True				
ANR	4974420	CFGExitNode	EXIT		4974396		True				
ANR	4974421	Symbol	str		4974396						
ANR	4974422	Symbol	mem		4974396						
ANR	4974423	Function	arg_strcmp	376:0:12804:13147							
ANR	4974424	FunctionDef	"arg_strcmp (arg_list * pal , const char * arg , const char * match)"		4974423	0					
ANR	4974425	CompoundStatement		377:0:12870:13147	4974423	0					
ANR	4974426	IdentifierDeclStatement	"int rune , c ;"	378:4:12876:12887	4974423	0	True				
ANR	4974427	IdentifierDecl	rune		4974423	0					
ANR	4974428	IdentifierDeclType	int		4974423	0					
ANR	4974429	Identifier	rune		4974423	1					
ANR	4974430	IdentifierDecl	c		4974423	1					
ANR	4974431	IdentifierDeclType	int		4974423	0					
ANR	4974432	Identifier	c		4974423	1					
ANR	4974433	IfStatement	if ( ! arg || ! match )		4974423	1					
ANR	4974434	Condition	! arg || ! match	380:8:12898:12911	4974423	0	True				
ANR	4974435	OrExpression	! arg || ! match		4974423	0		||			
ANR	4974436	UnaryOperationExpression	! arg		4974423	0					
ANR	4974437	UnaryOperator	!		4974423	0					
ANR	4974438	Identifier	arg		4974423	1					
ANR	4974439	UnaryOperationExpression	! match		4974423	1					
ANR	4974440	UnaryOperator	!		4974423	0					
ANR	4974441	Identifier	match		4974423	1					
ANR	4974442	ReturnStatement	return 1 ;	381:8:12922:12930	4974423	1	True				
ANR	4974443	PrimaryExpression	1		4974423	0					
ANR	4974444	DoStatement	do		4974423	2					
ANR	4974445	CompoundStatement		6:7:68:68	4974423	0					
ANR	4974446	ExpressionStatement	"rune = pal -> get_codepoint ( NULL , & arg )"	383:8:12949:12986	4974423	0	True				
ANR	4974447	AssignmentExpression	"rune = pal -> get_codepoint ( NULL , & arg )"		4974423	0		=			
ANR	4974448	Identifier	rune		4974423	0					
ANR	4974449	CallExpression	"pal -> get_codepoint ( NULL , & arg )"		4974423	1					
ANR	4974450	Callee	pal -> get_codepoint		4974423	0					
ANR	4974451	PtrMemberAccess	pal -> get_codepoint		4974423	0					
ANR	4974452	Identifier	pal		4974423	0					
ANR	4974453	Identifier	get_codepoint		4974423	1					
ANR	4974454	ArgumentList	NULL		4974423	1					
ANR	4974455	Argument	NULL		4974423	0					
ANR	4974456	Identifier	NULL		4974423	0					
ANR	4974457	Argument	& arg		4974423	1					
ANR	4974458	UnaryOperationExpression	& arg		4974423	0					
ANR	4974459	UnaryOperator	&		4974423	0					
ANR	4974460	Identifier	arg		4974423	1					
ANR	4974461	IfStatement	if ( rune == - 1 )		4974423	1					
ANR	4974462	Condition	rune == - 1	384:12:13000:13009	4974423	0	True				
ANR	4974463	EqualityExpression	rune == - 1		4974423	0		==			
ANR	4974464	Identifier	rune		4974423	0					
ANR	4974465	UnaryOperationExpression	- 1		4974423	1					
ANR	4974466	UnaryOperator	-		4974423	0					
ANR	4974467	PrimaryExpression	1		4974423	1					
ANR	4974468	ExpressionStatement	rune = 0	385:12:13024:13032	4974423	1	True				
ANR	4974469	AssignmentExpression	rune = 0		4974423	0		=			
ANR	4974470	Identifier	rune		4974423	0					
ANR	4974471	PrimaryExpression	0		4974423	1					
ANR	4974472	ExpressionStatement	c = * match ++	386:8:13042:13054	4974423	2	True				
ANR	4974473	AssignmentExpression	c = * match ++		4974423	0		=			
ANR	4974474	Identifier	c		4974423	0					
ANR	4974475	UnaryOperationExpression	* match ++		4974423	1					
ANR	4974476	UnaryOperator	*		4974423	0					
ANR	4974477	PostIncDecOperationExpression	match ++		4974423	1					
ANR	4974478	Identifier	match		4974423	0					
ANR	4974479	IncDec	++		4974423	1					
ANR	4974480	IfStatement	if ( rune != c )		4974423	3					
ANR	4974481	Condition	rune != c	387:12:13068:13076	4974423	0	True				
ANR	4974482	EqualityExpression	rune != c		4974423	0		!=			
ANR	4974483	Identifier	rune		4974423	0					
ANR	4974484	Identifier	c		4974423	1					
ANR	4974485	ReturnStatement	return rune - c ;	388:12:13091:13106	4974423	1	True				
ANR	4974486	AdditiveExpression	rune - c		4974423	0		-			
ANR	4974487	Identifier	rune		4974423	0					
ANR	4974488	Identifier	c		4974423	1					
ANR	4974489	Condition	rune && c	389:13:13121:13129	4974423	1	True				
ANR	4974490	AndExpression	rune && c		4974423	0		&&			
ANR	4974491	Identifier	rune		4974423	0					
ANR	4974492	Identifier	c		4974423	1					
ANR	4974493	ReturnStatement	return 0 ;	390:4:13137:13145	4974423	3	True				
ANR	4974494	PrimaryExpression	0		4974423	0					
ANR	4974495	ReturnType	int		4974423	1					
ANR	4974496	Identifier	arg_strcmp		4974423	2					
ANR	4974497	ParameterList	"arg_list * pal , const char * arg , const char * match"		4974423	3					
ANR	4974498	Parameter	arg_list * pal	376:15:12819:12831	4974423	0	True				
ANR	4974499	ParameterType	arg_list *		4974423	0					
ANR	4974500	Identifier	pal		4974423	1					
ANR	4974501	Parameter	const char * arg	376:30:12834:12848	4974423	1	True				
ANR	4974502	ParameterType	const char *		4974423	0					
ANR	4974503	Identifier	arg		4974423	1					
ANR	4974504	Parameter	const char * match	376:47:12851:12867	4974423	2	True				
ANR	4974505	ParameterType	const char *		4974423	0					
ANR	4974506	Identifier	match		4974423	1					
ANR	4974507	CFGEntryNode	ENTRY		4974423		True				
ANR	4974508	CFGExitNode	EXIT		4974423		True				
ANR	4974509	Symbol	c		4974423						
ANR	4974510	Symbol	NULL		4974423						
ANR	4974511	Symbol	pal -> get_codepoint		4974423						
ANR	4974512	Symbol	* pal		4974423						
ANR	4974513	Symbol	arg		4974423						
ANR	4974514	Symbol	match		4974423						
ANR	4974515	Symbol	pal		4974423						
ANR	4974516	Symbol	& arg		4974423						
ANR	4974517	Symbol	* match ++		4974423						
ANR	4974518	Symbol	rune		4974423						
