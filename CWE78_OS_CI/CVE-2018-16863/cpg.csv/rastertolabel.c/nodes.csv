command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9358777	File	data/converged/CVE-2018-16863_ghostpdl/rastertolabel.c								
ANR	9358778	DeclStmt									
ANR	9358779	Decl							unsigned char	unsigned char *	Buffer
ANR	9358780	DeclStmt									
ANR	9358781	Decl							unsigned char	unsigned char *	CompBuffer
ANR	9358782	DeclStmt									
ANR	9358783	Decl							unsigned char	unsigned char *	LastBuffer
ANR	9358784	DeclStmt									
ANR	9358785	Decl							int	int	LastSet
ANR	9358786	DeclStmt									
ANR	9358787	Decl							int	int	ModelNumber
ANR	9358788	Decl							int	int	Page
ANR	9358789	Decl							int	int	Feed
ANR	9358790	Decl							int	int	Canceled
ANR	9358791	DeclStmt									
ANR	9358792	Decl							void	void ( ppd_file_t * ppd )	Setup
ANR	9358793	DeclStmt									
ANR	9358794	Decl							void	"void ( ppd_file_t * ppd , cups_page_header2_t * header )"	StartPage
ANR	9358795	DeclStmt									
ANR	9358796	Decl							void	"void ( ppd_file_t * ppd , cups_page_header2_t * header )"	EndPage
ANR	9358797	DeclStmt									
ANR	9358798	Decl							void	void ( int sig )	CancelJob
ANR	9358799	DeclStmt									
ANR	9358800	Decl							void	"void ( ppd_file_t * ppd , cups_page_header2_t * header , int y )"	OutputLine
ANR	9358801	DeclStmt									
ANR	9358802	Decl							void	"void ( unsigned char * line , int length )"	PCLCompress
ANR	9358803	DeclStmt									
ANR	9358804	Decl							void	"void ( char repeat_char , int repeat_count )"	ZPLCompress
ANR	9358805	Function	Setup	105:0:3280:4002							
ANR	9358806	FunctionDef	Setup (ppd_file_t * ppd)		9358805	0					
ANR	9358807	CompoundStatement		107:0:3329:4002	9358805	0					
ANR	9358808	IdentifierDeclStatement	int i ;	108:2:3333:3339	9358805	0	True				
ANR	9358809	IdentifierDecl	i		9358805	0					
ANR	9358810	IdentifierDeclType	int		9358805	0					
ANR	9358811	Identifier	i		9358805	1					
ANR	9358812	IfStatement	if ( ppd )		9358805	1					
ANR	9358813	Condition	ppd	115:6:3425:3427	9358805	0	True				
ANR	9358814	Identifier	ppd		9358805	0					
ANR	9358815	ExpressionStatement	ModelNumber = ppd -> model_number	116:4:3434:3465	9358805	1	True				
ANR	9358816	AssignmentExpression	ModelNumber = ppd -> model_number		9358805	0		=			
ANR	9358817	Identifier	ModelNumber		9358805	0					
ANR	9358818	PtrMemberAccess	ppd -> model_number		9358805	1					
ANR	9358819	Identifier	ppd		9358805	0					
ANR	9358820	Identifier	model_number		9358805	1					
ANR	9358821	SwitchStatement	switch ( ModelNumber )		9358805	2					
ANR	9358822	Condition	ModelNumber	122:10:3532:3542	9358805	0	True				
ANR	9358823	Identifier	ModelNumber		9358805	0					
ANR	9358824	CompoundStatement		17:2:217:217	9358805	1					
ANR	9358825	Label	case DYMO_3x0 :	124:4:3553:3567	9358805	0	True				
ANR	9358826	Identifier	DYMO_3x0		9358805	0					
ANR	9358827	ForStatement	for ( i = 0 ; i < 100 ; i ++ )		9358805	1					
ANR	9358828	ForInit	i = 0 ;	129:6:3621:3626	9358805	0	True				
ANR	9358829	AssignmentExpression	i = 0		9358805	0		=			
ANR	9358830	Identifier	i		9358805	0					
ANR	9358831	PrimaryExpression	0		9358805	1					
ANR	9358832	Condition	i < 100	129:13:3628:3634	9358805	1	True				
ANR	9358833	RelationalExpression	i < 100		9358805	0		<			
ANR	9358834	Identifier	i		9358805	0					
ANR	9358835	PrimaryExpression	100		9358805	1					
ANR	9358836	PostIncDecOperationExpression	i ++	129:22:3637:3640	9358805	2	True				
ANR	9358837	Identifier	i		9358805	0					
ANR	9358838	IncDec	++		9358805	1					
ANR	9358839	ExpressionStatement	putchar ( 0x1b )	130:3:3646:3659	9358805	3	True				
ANR	9358840	CallExpression	putchar ( 0x1b )		9358805	0					
ANR	9358841	Callee	putchar		9358805	0					
ANR	9358842	Identifier	putchar		9358805	0					
ANR	9358843	ArgumentList	0x1b		9358805	1					
ANR	9358844	Argument	0x1b		9358805	0					
ANR	9358845	PrimaryExpression	0x1b		9358805	0					
ANR	9358846	ExpressionStatement	"fputs ( ""\\033@"" , stdout )"	136:1:3702:3724	9358805	2	True				
ANR	9358847	CallExpression	"fputs ( ""\\033@"" , stdout )"		9358805	0					
ANR	9358848	Callee	fputs		9358805	0					
ANR	9358849	Identifier	fputs		9358805	0					
ANR	9358850	ArgumentList	"""\\033@"""		9358805	1					
ANR	9358851	Argument	"""\\033@"""		9358805	0					
ANR	9358852	PrimaryExpression	"""\\033@"""		9358805	0					
ANR	9358853	Argument	stdout		9358805	1					
ANR	9358854	Identifier	stdout		9358805	0					
ANR	9358855	BreakStatement	break ;	137:1:3727:3732	9358805	3	True				
ANR	9358856	Label	case ZEBRA_EPL_LINE :	139:4:3739:3759	9358805	4	True				
ANR	9358857	Identifier	ZEBRA_EPL_LINE		9358805	0					
ANR	9358858	BreakStatement	break ;	140:1:3762:3767	9358805	5	True				
ANR	9358859	Label	case ZEBRA_EPL_PAGE :	142:4:3774:3794	9358805	6	True				
ANR	9358860	Identifier	ZEBRA_EPL_PAGE		9358805	0					
ANR	9358861	BreakStatement	break ;	143:1:3797:3802	9358805	7	True				
ANR	9358862	Label	case ZEBRA_ZPL :	145:4:3809:3824	9358805	8	True				
ANR	9358863	Identifier	ZEBRA_ZPL		9358805	0					
ANR	9358864	BreakStatement	break ;	146:8:3834:3839	9358805	9	True				
ANR	9358865	Label	case ZEBRA_CPCL :	148:4:3846:3862	9358805	10	True				
ANR	9358866	Identifier	ZEBRA_CPCL		9358805	0					
ANR	9358867	BreakStatement	break ;	149:8:3872:3877	9358805	11	True				
ANR	9358868	Label	case INTELLITECH_PCL :	151:4:3884:3905	9358805	12	True				
ANR	9358869	Identifier	INTELLITECH_PCL		9358805	0					
ANR	9358870	ExpressionStatement	putchar ( 0x1b )	156:1:3953:3966	9358805	13	True				
ANR	9358871	CallExpression	putchar ( 0x1b )		9358805	0					
ANR	9358872	Callee	putchar		9358805	0					
ANR	9358873	Identifier	putchar		9358805	0					
ANR	9358874	ArgumentList	0x1b		9358805	1					
ANR	9358875	Argument	0x1b		9358805	0					
ANR	9358876	PrimaryExpression	0x1b		9358805	0					
ANR	9358877	ExpressionStatement	putchar ( 'E' )	157:1:3969:3981	9358805	14	True				
ANR	9358878	CallExpression	putchar ( 'E' )		9358805	0					
ANR	9358879	Callee	putchar		9358805	0					
ANR	9358880	Identifier	putchar		9358805	0					
ANR	9358881	ArgumentList	'E'		9358805	1					
ANR	9358882	Argument	'E'		9358805	0					
ANR	9358883	PrimaryExpression	'E'		9358805	0					
ANR	9358884	BreakStatement	break ;	158:8:3991:3996	9358805	15	True				
ANR	9358885	ReturnType	void		9358805	1					
ANR	9358886	Identifier	Setup		9358805	2					
ANR	9358887	ParameterList	ppd_file_t * ppd		9358805	3					
ANR	9358888	Parameter	ppd_file_t * ppd	106:6:3291:3305	9358805	0	True				
ANR	9358889	ParameterType	ppd_file_t *		9358805	0					
ANR	9358890	Identifier	ppd		9358805	1					
ANR	9358891	CFGEntryNode	ENTRY		9358805		True				
ANR	9358892	CFGExitNode	EXIT		9358805		True				
ANR	9358893	Symbol	ModelNumber		9358805						
ANR	9358894	Symbol	ppd -> model_number		9358805						
ANR	9358895	Symbol	stdout		9358805						
ANR	9358896	Symbol	ppd		9358805						
ANR	9358897	Symbol	i		9358805						
ANR	9358898	Symbol	* ppd		9358805						
ANR	9358899	Function	StartPage	167:0:4059:12937							
ANR	9358900	FunctionDef	"StartPage (ppd_file_t * ppd , cups_page_header2_t * header)"		9358899	0					
ANR	9358901	CompoundStatement		170:0:4179:12937	9358899	0					
ANR	9358902	IdentifierDeclStatement	ppd_choice_t * choice ;	171:2:4183:4203	9358899	0	True				
ANR	9358903	IdentifierDecl	* choice		9358899	0					
ANR	9358904	IdentifierDeclType	ppd_choice_t *		9358899	0					
ANR	9358905	Identifier	choice		9358899	1					
ANR	9358906	IdentifierDeclStatement	int length ;	172:2:4228:4239	9358899	1	True				
ANR	9358907	IdentifierDecl	length		9358899	0					
ANR	9358908	IdentifierDeclType	int		9358899	0					
ANR	9358909	Identifier	length		9358899	1					
ANR	9358910	ExpressionStatement	"fprintf ( stderr , ""DEBUG: StartPage...\\n"" )"	179:2:4318:4358	9358899	2	True				
ANR	9358911	CallExpression	"fprintf ( stderr , ""DEBUG: StartPage...\\n"" )"		9358899	0					
ANR	9358912	Callee	fprintf		9358899	0					
ANR	9358913	Identifier	fprintf		9358899	0					
ANR	9358914	ArgumentList	stderr		9358899	1					
ANR	9358915	Argument	stderr		9358899	0					
ANR	9358916	Identifier	stderr		9358899	0					
ANR	9358917	Argument	"""DEBUG: StartPage...\\n"""		9358899	1					
ANR	9358918	PrimaryExpression	"""DEBUG: StartPage...\\n"""		9358899	0					
ANR	9358919	ExpressionStatement	"fprintf ( stderr , ""DEBUG: MediaClass = \\""%s\\""\\n"" , header -> MediaClass )"	180:2:4362:4429	9358899	3	True				
ANR	9358920	CallExpression	"fprintf ( stderr , ""DEBUG: MediaClass = \\""%s\\""\\n"" , header -> MediaClass )"		9358899	0					
ANR	9358921	Callee	fprintf		9358899	0					
ANR	9358922	Identifier	fprintf		9358899	0					
ANR	9358923	ArgumentList	stderr		9358899	1					
ANR	9358924	Argument	stderr		9358899	0					
ANR	9358925	Identifier	stderr		9358899	0					
ANR	9358926	Argument	"""DEBUG: MediaClass = \\""%s\\""\\n"""		9358899	1					
ANR	9358927	PrimaryExpression	"""DEBUG: MediaClass = \\""%s\\""\\n"""		9358899	0					
ANR	9358928	Argument	header -> MediaClass		9358899	2					
ANR	9358929	PtrMemberAccess	header -> MediaClass		9358899	0					
ANR	9358930	Identifier	header		9358899	0					
ANR	9358931	Identifier	MediaClass		9358899	1					
ANR	9358932	ExpressionStatement	"fprintf ( stderr , ""DEBUG: MediaColor = \\""%s\\""\\n"" , header -> MediaColor )"	181:2:4433:4500	9358899	4	True				
ANR	9358933	CallExpression	"fprintf ( stderr , ""DEBUG: MediaColor = \\""%s\\""\\n"" , header -> MediaColor )"		9358899	0					
ANR	9358934	Callee	fprintf		9358899	0					
ANR	9358935	Identifier	fprintf		9358899	0					
ANR	9358936	ArgumentList	stderr		9358899	1					
ANR	9358937	Argument	stderr		9358899	0					
ANR	9358938	Identifier	stderr		9358899	0					
ANR	9358939	Argument	"""DEBUG: MediaColor = \\""%s\\""\\n"""		9358899	1					
ANR	9358940	PrimaryExpression	"""DEBUG: MediaColor = \\""%s\\""\\n"""		9358899	0					
ANR	9358941	Argument	header -> MediaColor		9358899	2					
ANR	9358942	PtrMemberAccess	header -> MediaColor		9358899	0					
ANR	9358943	Identifier	header		9358899	0					
ANR	9358944	Identifier	MediaColor		9358899	1					
ANR	9358945	ExpressionStatement	"fprintf ( stderr , ""DEBUG: MediaType = \\""%s\\""\\n"" , header -> MediaType )"	182:2:4504:4569	9358899	5	True				
ANR	9358946	CallExpression	"fprintf ( stderr , ""DEBUG: MediaType = \\""%s\\""\\n"" , header -> MediaType )"		9358899	0					
ANR	9358947	Callee	fprintf		9358899	0					
ANR	9358948	Identifier	fprintf		9358899	0					
ANR	9358949	ArgumentList	stderr		9358899	1					
ANR	9358950	Argument	stderr		9358899	0					
ANR	9358951	Identifier	stderr		9358899	0					
ANR	9358952	Argument	"""DEBUG: MediaType = \\""%s\\""\\n"""		9358899	1					
ANR	9358953	PrimaryExpression	"""DEBUG: MediaType = \\""%s\\""\\n"""		9358899	0					
ANR	9358954	Argument	header -> MediaType		9358899	2					
ANR	9358955	PtrMemberAccess	header -> MediaType		9358899	0					
ANR	9358956	Identifier	header		9358899	0					
ANR	9358957	Identifier	MediaType		9358899	1					
ANR	9358958	ExpressionStatement	"fprintf ( stderr , ""DEBUG: OutputType = \\""%s\\""\\n"" , header -> OutputType )"	183:2:4573:4640	9358899	6	True				
ANR	9358959	CallExpression	"fprintf ( stderr , ""DEBUG: OutputType = \\""%s\\""\\n"" , header -> OutputType )"		9358899	0					
ANR	9358960	Callee	fprintf		9358899	0					
ANR	9358961	Identifier	fprintf		9358899	0					
ANR	9358962	ArgumentList	stderr		9358899	1					
ANR	9358963	Argument	stderr		9358899	0					
ANR	9358964	Identifier	stderr		9358899	0					
ANR	9358965	Argument	"""DEBUG: OutputType = \\""%s\\""\\n"""		9358899	1					
ANR	9358966	PrimaryExpression	"""DEBUG: OutputType = \\""%s\\""\\n"""		9358899	0					
ANR	9358967	Argument	header -> OutputType		9358899	2					
ANR	9358968	PtrMemberAccess	header -> OutputType		9358899	0					
ANR	9358969	Identifier	header		9358899	0					
ANR	9358970	Identifier	OutputType		9358899	1					
ANR	9358971	ExpressionStatement	"fprintf ( stderr , ""DEBUG: AdvanceDistance = %d\\n"" , header -> AdvanceDistance )"	185:2:4645:4718	9358899	7	True				
ANR	9358972	CallExpression	"fprintf ( stderr , ""DEBUG: AdvanceDistance = %d\\n"" , header -> AdvanceDistance )"		9358899	0					
ANR	9358973	Callee	fprintf		9358899	0					
ANR	9358974	Identifier	fprintf		9358899	0					
ANR	9358975	ArgumentList	stderr		9358899	1					
ANR	9358976	Argument	stderr		9358899	0					
ANR	9358977	Identifier	stderr		9358899	0					
ANR	9358978	Argument	"""DEBUG: AdvanceDistance = %d\\n"""		9358899	1					
ANR	9358979	PrimaryExpression	"""DEBUG: AdvanceDistance = %d\\n"""		9358899	0					
ANR	9358980	Argument	header -> AdvanceDistance		9358899	2					
ANR	9358981	PtrMemberAccess	header -> AdvanceDistance		9358899	0					
ANR	9358982	Identifier	header		9358899	0					
ANR	9358983	Identifier	AdvanceDistance		9358899	1					
ANR	9358984	ExpressionStatement	"fprintf ( stderr , ""DEBUG: AdvanceMedia = %d\\n"" , header -> AdvanceMedia )"	186:2:4722:4789	9358899	8	True				
ANR	9358985	CallExpression	"fprintf ( stderr , ""DEBUG: AdvanceMedia = %d\\n"" , header -> AdvanceMedia )"		9358899	0					
ANR	9358986	Callee	fprintf		9358899	0					
ANR	9358987	Identifier	fprintf		9358899	0					
ANR	9358988	ArgumentList	stderr		9358899	1					
ANR	9358989	Argument	stderr		9358899	0					
ANR	9358990	Identifier	stderr		9358899	0					
ANR	9358991	Argument	"""DEBUG: AdvanceMedia = %d\\n"""		9358899	1					
ANR	9358992	PrimaryExpression	"""DEBUG: AdvanceMedia = %d\\n"""		9358899	0					
ANR	9358993	Argument	header -> AdvanceMedia		9358899	2					
ANR	9358994	PtrMemberAccess	header -> AdvanceMedia		9358899	0					
ANR	9358995	Identifier	header		9358899	0					
ANR	9358996	Identifier	AdvanceMedia		9358899	1					
ANR	9358997	ExpressionStatement	"fprintf ( stderr , ""DEBUG: Collate = %d\\n"" , header -> Collate )"	187:2:4793:4850	9358899	9	True				
ANR	9358998	CallExpression	"fprintf ( stderr , ""DEBUG: Collate = %d\\n"" , header -> Collate )"		9358899	0					
ANR	9358999	Callee	fprintf		9358899	0					
ANR	9359000	Identifier	fprintf		9358899	0					
ANR	9359001	ArgumentList	stderr		9358899	1					
ANR	9359002	Argument	stderr		9358899	0					
ANR	9359003	Identifier	stderr		9358899	0					
ANR	9359004	Argument	"""DEBUG: Collate = %d\\n"""		9358899	1					
ANR	9359005	PrimaryExpression	"""DEBUG: Collate = %d\\n"""		9358899	0					
ANR	9359006	Argument	header -> Collate		9358899	2					
ANR	9359007	PtrMemberAccess	header -> Collate		9358899	0					
ANR	9359008	Identifier	header		9358899	0					
ANR	9359009	Identifier	Collate		9358899	1					
ANR	9359010	ExpressionStatement	"fprintf ( stderr , ""DEBUG: CutMedia = %d\\n"" , header -> CutMedia )"	188:2:4854:4913	9358899	10	True				
ANR	9359011	CallExpression	"fprintf ( stderr , ""DEBUG: CutMedia = %d\\n"" , header -> CutMedia )"		9358899	0					
ANR	9359012	Callee	fprintf		9358899	0					
ANR	9359013	Identifier	fprintf		9358899	0					
ANR	9359014	ArgumentList	stderr		9358899	1					
ANR	9359015	Argument	stderr		9358899	0					
ANR	9359016	Identifier	stderr		9358899	0					
ANR	9359017	Argument	"""DEBUG: CutMedia = %d\\n"""		9358899	1					
ANR	9359018	PrimaryExpression	"""DEBUG: CutMedia = %d\\n"""		9358899	0					
ANR	9359019	Argument	header -> CutMedia		9358899	2					
ANR	9359020	PtrMemberAccess	header -> CutMedia		9358899	0					
ANR	9359021	Identifier	header		9358899	0					
ANR	9359022	Identifier	CutMedia		9358899	1					
ANR	9359023	ExpressionStatement	"fprintf ( stderr , ""DEBUG: Duplex = %d\\n"" , header -> Duplex )"	189:2:4917:4972	9358899	11	True				
ANR	9359024	CallExpression	"fprintf ( stderr , ""DEBUG: Duplex = %d\\n"" , header -> Duplex )"		9358899	0					
ANR	9359025	Callee	fprintf		9358899	0					
ANR	9359026	Identifier	fprintf		9358899	0					
ANR	9359027	ArgumentList	stderr		9358899	1					
ANR	9359028	Argument	stderr		9358899	0					
ANR	9359029	Identifier	stderr		9358899	0					
ANR	9359030	Argument	"""DEBUG: Duplex = %d\\n"""		9358899	1					
ANR	9359031	PrimaryExpression	"""DEBUG: Duplex = %d\\n"""		9358899	0					
ANR	9359032	Argument	header -> Duplex		9358899	2					
ANR	9359033	PtrMemberAccess	header -> Duplex		9358899	0					
ANR	9359034	Identifier	header		9358899	0					
ANR	9359035	Identifier	Duplex		9358899	1					
ANR	9359036	ExpressionStatement	"fprintf ( stderr , ""DEBUG: HWResolution = [ %d %d ]\\n"" , header -> HWResolution [ 0 ] , header -> HWResolution [ 1 ] )"	190:2:4976:5088	9358899	12	True				
ANR	9359037	CallExpression	"fprintf ( stderr , ""DEBUG: HWResolution = [ %d %d ]\\n"" , header -> HWResolution [ 0 ] , header -> HWResolution [ 1 ] )"		9358899	0					
ANR	9359038	Callee	fprintf		9358899	0					
ANR	9359039	Identifier	fprintf		9358899	0					
ANR	9359040	ArgumentList	stderr		9358899	1					
ANR	9359041	Argument	stderr		9358899	0					
ANR	9359042	Identifier	stderr		9358899	0					
ANR	9359043	Argument	"""DEBUG: HWResolution = [ %d %d ]\\n"""		9358899	1					
ANR	9359044	PrimaryExpression	"""DEBUG: HWResolution = [ %d %d ]\\n"""		9358899	0					
ANR	9359045	Argument	header -> HWResolution [ 0 ]		9358899	2					
ANR	9359046	ArrayIndexing	header -> HWResolution [ 0 ]		9358899	0					
ANR	9359047	PtrMemberAccess	header -> HWResolution		9358899	0					
ANR	9359048	Identifier	header		9358899	0					
ANR	9359049	Identifier	HWResolution		9358899	1					
ANR	9359050	PrimaryExpression	0		9358899	1					
ANR	9359051	Argument	header -> HWResolution [ 1 ]		9358899	3					
ANR	9359052	ArrayIndexing	header -> HWResolution [ 1 ]		9358899	0					
ANR	9359053	PtrMemberAccess	header -> HWResolution		9358899	0					
ANR	9359054	Identifier	header		9358899	0					
ANR	9359055	Identifier	HWResolution		9358899	1					
ANR	9359056	PrimaryExpression	1		9358899	1					
ANR	9359057	ExpressionStatement	"fprintf ( stderr , ""DEBUG: ImagingBoundingBox = [ %d %d %d %d ]\\n"" , header -> ImagingBoundingBox [ 0 ] , header -> ImagingBoundingBox [ 1 ] , header -> ImagingBoundingBox [ 2 ] , header -> ImagingBoundingBox [ 3 ] )"	192:2:5092:5300	9358899	13	True				
ANR	9359058	CallExpression	"fprintf ( stderr , ""DEBUG: ImagingBoundingBox = [ %d %d %d %d ]\\n"" , header -> ImagingBoundingBox [ 0 ] , header -> ImagingBoundingBox [ 1 ] , header -> ImagingBoundingBox [ 2 ] , header -> ImagingBoundingBox [ 3 ] )"		9358899	0					
ANR	9359059	Callee	fprintf		9358899	0					
ANR	9359060	Identifier	fprintf		9358899	0					
ANR	9359061	ArgumentList	stderr		9358899	1					
ANR	9359062	Argument	stderr		9358899	0					
ANR	9359063	Identifier	stderr		9358899	0					
ANR	9359064	Argument	"""DEBUG: ImagingBoundingBox = [ %d %d %d %d ]\\n"""		9358899	1					
ANR	9359065	PrimaryExpression	"""DEBUG: ImagingBoundingBox = [ %d %d %d %d ]\\n"""		9358899	0					
ANR	9359066	Argument	header -> ImagingBoundingBox [ 0 ]		9358899	2					
ANR	9359067	ArrayIndexing	header -> ImagingBoundingBox [ 0 ]		9358899	0					
ANR	9359068	PtrMemberAccess	header -> ImagingBoundingBox		9358899	0					
ANR	9359069	Identifier	header		9358899	0					
ANR	9359070	Identifier	ImagingBoundingBox		9358899	1					
ANR	9359071	PrimaryExpression	0		9358899	1					
ANR	9359072	Argument	header -> ImagingBoundingBox [ 1 ]		9358899	3					
ANR	9359073	ArrayIndexing	header -> ImagingBoundingBox [ 1 ]		9358899	0					
ANR	9359074	PtrMemberAccess	header -> ImagingBoundingBox		9358899	0					
ANR	9359075	Identifier	header		9358899	0					
ANR	9359076	Identifier	ImagingBoundingBox		9358899	1					
ANR	9359077	PrimaryExpression	1		9358899	1					
ANR	9359078	Argument	header -> ImagingBoundingBox [ 2 ]		9358899	4					
ANR	9359079	ArrayIndexing	header -> ImagingBoundingBox [ 2 ]		9358899	0					
ANR	9359080	PtrMemberAccess	header -> ImagingBoundingBox		9358899	0					
ANR	9359081	Identifier	header		9358899	0					
ANR	9359082	Identifier	ImagingBoundingBox		9358899	1					
ANR	9359083	PrimaryExpression	2		9358899	1					
ANR	9359084	Argument	header -> ImagingBoundingBox [ 3 ]		9358899	5					
ANR	9359085	ArrayIndexing	header -> ImagingBoundingBox [ 3 ]		9358899	0					
ANR	9359086	PtrMemberAccess	header -> ImagingBoundingBox		9358899	0					
ANR	9359087	Identifier	header		9358899	0					
ANR	9359088	Identifier	ImagingBoundingBox		9358899	1					
ANR	9359089	PrimaryExpression	3		9358899	1					
ANR	9359090	ExpressionStatement	"fprintf ( stderr , ""DEBUG: InsertSheet = %d\\n"" , header -> InsertSheet )"	195:2:5304:5369	9358899	14	True				
ANR	9359091	CallExpression	"fprintf ( stderr , ""DEBUG: InsertSheet = %d\\n"" , header -> InsertSheet )"		9358899	0					
ANR	9359092	Callee	fprintf		9358899	0					
ANR	9359093	Identifier	fprintf		9358899	0					
ANR	9359094	ArgumentList	stderr		9358899	1					
ANR	9359095	Argument	stderr		9358899	0					
ANR	9359096	Identifier	stderr		9358899	0					
ANR	9359097	Argument	"""DEBUG: InsertSheet = %d\\n"""		9358899	1					
ANR	9359098	PrimaryExpression	"""DEBUG: InsertSheet = %d\\n"""		9358899	0					
ANR	9359099	Argument	header -> InsertSheet		9358899	2					
ANR	9359100	PtrMemberAccess	header -> InsertSheet		9358899	0					
ANR	9359101	Identifier	header		9358899	0					
ANR	9359102	Identifier	InsertSheet		9358899	1					
ANR	9359103	ExpressionStatement	"fprintf ( stderr , ""DEBUG: Jog = %d\\n"" , header -> Jog )"	196:2:5373:5422	9358899	15	True				
ANR	9359104	CallExpression	"fprintf ( stderr , ""DEBUG: Jog = %d\\n"" , header -> Jog )"		9358899	0					
ANR	9359105	Callee	fprintf		9358899	0					
ANR	9359106	Identifier	fprintf		9358899	0					
ANR	9359107	ArgumentList	stderr		9358899	1					
ANR	9359108	Argument	stderr		9358899	0					
ANR	9359109	Identifier	stderr		9358899	0					
ANR	9359110	Argument	"""DEBUG: Jog = %d\\n"""		9358899	1					
ANR	9359111	PrimaryExpression	"""DEBUG: Jog = %d\\n"""		9358899	0					
ANR	9359112	Argument	header -> Jog		9358899	2					
ANR	9359113	PtrMemberAccess	header -> Jog		9358899	0					
ANR	9359114	Identifier	header		9358899	0					
ANR	9359115	Identifier	Jog		9358899	1					
ANR	9359116	ExpressionStatement	"fprintf ( stderr , ""DEBUG: LeadingEdge = %d\\n"" , header -> LeadingEdge )"	197:2:5426:5491	9358899	16	True				
ANR	9359117	CallExpression	"fprintf ( stderr , ""DEBUG: LeadingEdge = %d\\n"" , header -> LeadingEdge )"		9358899	0					
ANR	9359118	Callee	fprintf		9358899	0					
ANR	9359119	Identifier	fprintf		9358899	0					
ANR	9359120	ArgumentList	stderr		9358899	1					
ANR	9359121	Argument	stderr		9358899	0					
ANR	9359122	Identifier	stderr		9358899	0					
ANR	9359123	Argument	"""DEBUG: LeadingEdge = %d\\n"""		9358899	1					
ANR	9359124	PrimaryExpression	"""DEBUG: LeadingEdge = %d\\n"""		9358899	0					
ANR	9359125	Argument	header -> LeadingEdge		9358899	2					
ANR	9359126	PtrMemberAccess	header -> LeadingEdge		9358899	0					
ANR	9359127	Identifier	header		9358899	0					
ANR	9359128	Identifier	LeadingEdge		9358899	1					
ANR	9359129	ExpressionStatement	"fprintf ( stderr , ""DEBUG: Margins = [ %d %d ]\\n"" , header -> Margins [ 0 ] , header -> Margins [ 1 ] )"	198:2:5495:5592	9358899	17	True				
ANR	9359130	CallExpression	"fprintf ( stderr , ""DEBUG: Margins = [ %d %d ]\\n"" , header -> Margins [ 0 ] , header -> Margins [ 1 ] )"		9358899	0					
ANR	9359131	Callee	fprintf		9358899	0					
ANR	9359132	Identifier	fprintf		9358899	0					
ANR	9359133	ArgumentList	stderr		9358899	1					
ANR	9359134	Argument	stderr		9358899	0					
ANR	9359135	Identifier	stderr		9358899	0					
ANR	9359136	Argument	"""DEBUG: Margins = [ %d %d ]\\n"""		9358899	1					
ANR	9359137	PrimaryExpression	"""DEBUG: Margins = [ %d %d ]\\n"""		9358899	0					
ANR	9359138	Argument	header -> Margins [ 0 ]		9358899	2					
ANR	9359139	ArrayIndexing	header -> Margins [ 0 ]		9358899	0					
ANR	9359140	PtrMemberAccess	header -> Margins		9358899	0					
ANR	9359141	Identifier	header		9358899	0					
ANR	9359142	Identifier	Margins		9358899	1					
ANR	9359143	PrimaryExpression	0		9358899	1					
ANR	9359144	Argument	header -> Margins [ 1 ]		9358899	3					
ANR	9359145	ArrayIndexing	header -> Margins [ 1 ]		9358899	0					
ANR	9359146	PtrMemberAccess	header -> Margins		9358899	0					
ANR	9359147	Identifier	header		9358899	0					
ANR	9359148	Identifier	Margins		9358899	1					
ANR	9359149	PrimaryExpression	1		9358899	1					
ANR	9359150	ExpressionStatement	"fprintf ( stderr , ""DEBUG: ManualFeed = %d\\n"" , header -> ManualFeed )"	200:2:5596:5659	9358899	18	True				
ANR	9359151	CallExpression	"fprintf ( stderr , ""DEBUG: ManualFeed = %d\\n"" , header -> ManualFeed )"		9358899	0					
ANR	9359152	Callee	fprintf		9358899	0					
ANR	9359153	Identifier	fprintf		9358899	0					
ANR	9359154	ArgumentList	stderr		9358899	1					
ANR	9359155	Argument	stderr		9358899	0					
ANR	9359156	Identifier	stderr		9358899	0					
ANR	9359157	Argument	"""DEBUG: ManualFeed = %d\\n"""		9358899	1					
ANR	9359158	PrimaryExpression	"""DEBUG: ManualFeed = %d\\n"""		9358899	0					
ANR	9359159	Argument	header -> ManualFeed		9358899	2					
ANR	9359160	PtrMemberAccess	header -> ManualFeed		9358899	0					
ANR	9359161	Identifier	header		9358899	0					
ANR	9359162	Identifier	ManualFeed		9358899	1					
ANR	9359163	ExpressionStatement	"fprintf ( stderr , ""DEBUG: MediaPosition = %d\\n"" , header -> MediaPosition )"	201:2:5663:5732	9358899	19	True				
ANR	9359164	CallExpression	"fprintf ( stderr , ""DEBUG: MediaPosition = %d\\n"" , header -> MediaPosition )"		9358899	0					
ANR	9359165	Callee	fprintf		9358899	0					
ANR	9359166	Identifier	fprintf		9358899	0					
ANR	9359167	ArgumentList	stderr		9358899	1					
ANR	9359168	Argument	stderr		9358899	0					
ANR	9359169	Identifier	stderr		9358899	0					
ANR	9359170	Argument	"""DEBUG: MediaPosition = %d\\n"""		9358899	1					
ANR	9359171	PrimaryExpression	"""DEBUG: MediaPosition = %d\\n"""		9358899	0					
ANR	9359172	Argument	header -> MediaPosition		9358899	2					
ANR	9359173	PtrMemberAccess	header -> MediaPosition		9358899	0					
ANR	9359174	Identifier	header		9358899	0					
ANR	9359175	Identifier	MediaPosition		9358899	1					
ANR	9359176	ExpressionStatement	"fprintf ( stderr , ""DEBUG: MediaWeight = %d\\n"" , header -> MediaWeight )"	202:2:5736:5801	9358899	20	True				
ANR	9359177	CallExpression	"fprintf ( stderr , ""DEBUG: MediaWeight = %d\\n"" , header -> MediaWeight )"		9358899	0					
ANR	9359178	Callee	fprintf		9358899	0					
ANR	9359179	Identifier	fprintf		9358899	0					
ANR	9359180	ArgumentList	stderr		9358899	1					
ANR	9359181	Argument	stderr		9358899	0					
ANR	9359182	Identifier	stderr		9358899	0					
ANR	9359183	Argument	"""DEBUG: MediaWeight = %d\\n"""		9358899	1					
ANR	9359184	PrimaryExpression	"""DEBUG: MediaWeight = %d\\n"""		9358899	0					
ANR	9359185	Argument	header -> MediaWeight		9358899	2					
ANR	9359186	PtrMemberAccess	header -> MediaWeight		9358899	0					
ANR	9359187	Identifier	header		9358899	0					
ANR	9359188	Identifier	MediaWeight		9358899	1					
ANR	9359189	ExpressionStatement	"fprintf ( stderr , ""DEBUG: MirrorPrint = %d\\n"" , header -> MirrorPrint )"	203:2:5805:5870	9358899	21	True				
ANR	9359190	CallExpression	"fprintf ( stderr , ""DEBUG: MirrorPrint = %d\\n"" , header -> MirrorPrint )"		9358899	0					
ANR	9359191	Callee	fprintf		9358899	0					
ANR	9359192	Identifier	fprintf		9358899	0					
ANR	9359193	ArgumentList	stderr		9358899	1					
ANR	9359194	Argument	stderr		9358899	0					
ANR	9359195	Identifier	stderr		9358899	0					
ANR	9359196	Argument	"""DEBUG: MirrorPrint = %d\\n"""		9358899	1					
ANR	9359197	PrimaryExpression	"""DEBUG: MirrorPrint = %d\\n"""		9358899	0					
ANR	9359198	Argument	header -> MirrorPrint		9358899	2					
ANR	9359199	PtrMemberAccess	header -> MirrorPrint		9358899	0					
ANR	9359200	Identifier	header		9358899	0					
ANR	9359201	Identifier	MirrorPrint		9358899	1					
ANR	9359202	ExpressionStatement	"fprintf ( stderr , ""DEBUG: NegativePrint = %d\\n"" , header -> NegativePrint )"	204:2:5874:5943	9358899	22	True				
ANR	9359203	CallExpression	"fprintf ( stderr , ""DEBUG: NegativePrint = %d\\n"" , header -> NegativePrint )"		9358899	0					
ANR	9359204	Callee	fprintf		9358899	0					
ANR	9359205	Identifier	fprintf		9358899	0					
ANR	9359206	ArgumentList	stderr		9358899	1					
ANR	9359207	Argument	stderr		9358899	0					
ANR	9359208	Identifier	stderr		9358899	0					
ANR	9359209	Argument	"""DEBUG: NegativePrint = %d\\n"""		9358899	1					
ANR	9359210	PrimaryExpression	"""DEBUG: NegativePrint = %d\\n"""		9358899	0					
ANR	9359211	Argument	header -> NegativePrint		9358899	2					
ANR	9359212	PtrMemberAccess	header -> NegativePrint		9358899	0					
ANR	9359213	Identifier	header		9358899	0					
ANR	9359214	Identifier	NegativePrint		9358899	1					
ANR	9359215	ExpressionStatement	"fprintf ( stderr , ""DEBUG: NumCopies = %d\\n"" , header -> NumCopies )"	205:2:5947:6008	9358899	23	True				
ANR	9359216	CallExpression	"fprintf ( stderr , ""DEBUG: NumCopies = %d\\n"" , header -> NumCopies )"		9358899	0					
ANR	9359217	Callee	fprintf		9358899	0					
ANR	9359218	Identifier	fprintf		9358899	0					
ANR	9359219	ArgumentList	stderr		9358899	1					
ANR	9359220	Argument	stderr		9358899	0					
ANR	9359221	Identifier	stderr		9358899	0					
ANR	9359222	Argument	"""DEBUG: NumCopies = %d\\n"""		9358899	1					
ANR	9359223	PrimaryExpression	"""DEBUG: NumCopies = %d\\n"""		9358899	0					
ANR	9359224	Argument	header -> NumCopies		9358899	2					
ANR	9359225	PtrMemberAccess	header -> NumCopies		9358899	0					
ANR	9359226	Identifier	header		9358899	0					
ANR	9359227	Identifier	NumCopies		9358899	1					
ANR	9359228	ExpressionStatement	"fprintf ( stderr , ""DEBUG: Orientation = %d\\n"" , header -> Orientation )"	206:2:6012:6077	9358899	24	True				
ANR	9359229	CallExpression	"fprintf ( stderr , ""DEBUG: Orientation = %d\\n"" , header -> Orientation )"		9358899	0					
ANR	9359230	Callee	fprintf		9358899	0					
ANR	9359231	Identifier	fprintf		9358899	0					
ANR	9359232	ArgumentList	stderr		9358899	1					
ANR	9359233	Argument	stderr		9358899	0					
ANR	9359234	Identifier	stderr		9358899	0					
ANR	9359235	Argument	"""DEBUG: Orientation = %d\\n"""		9358899	1					
ANR	9359236	PrimaryExpression	"""DEBUG: Orientation = %d\\n"""		9358899	0					
ANR	9359237	Argument	header -> Orientation		9358899	2					
ANR	9359238	PtrMemberAccess	header -> Orientation		9358899	0					
ANR	9359239	Identifier	header		9358899	0					
ANR	9359240	Identifier	Orientation		9358899	1					
ANR	9359241	ExpressionStatement	"fprintf ( stderr , ""DEBUG: OutputFaceUp = %d\\n"" , header -> OutputFaceUp )"	207:2:6081:6148	9358899	25	True				
ANR	9359242	CallExpression	"fprintf ( stderr , ""DEBUG: OutputFaceUp = %d\\n"" , header -> OutputFaceUp )"		9358899	0					
ANR	9359243	Callee	fprintf		9358899	0					
ANR	9359244	Identifier	fprintf		9358899	0					
ANR	9359245	ArgumentList	stderr		9358899	1					
ANR	9359246	Argument	stderr		9358899	0					
ANR	9359247	Identifier	stderr		9358899	0					
ANR	9359248	Argument	"""DEBUG: OutputFaceUp = %d\\n"""		9358899	1					
ANR	9359249	PrimaryExpression	"""DEBUG: OutputFaceUp = %d\\n"""		9358899	0					
ANR	9359250	Argument	header -> OutputFaceUp		9358899	2					
ANR	9359251	PtrMemberAccess	header -> OutputFaceUp		9358899	0					
ANR	9359252	Identifier	header		9358899	0					
ANR	9359253	Identifier	OutputFaceUp		9358899	1					
ANR	9359254	ExpressionStatement	"fprintf ( stderr , ""DEBUG: PageSize = [ %d %d ]\\n"" , header -> PageSize [ 0 ] , header -> PageSize [ 1 ] )"	208:2:6152:6252	9358899	26	True				
ANR	9359255	CallExpression	"fprintf ( stderr , ""DEBUG: PageSize = [ %d %d ]\\n"" , header -> PageSize [ 0 ] , header -> PageSize [ 1 ] )"		9358899	0					
ANR	9359256	Callee	fprintf		9358899	0					
ANR	9359257	Identifier	fprintf		9358899	0					
ANR	9359258	ArgumentList	stderr		9358899	1					
ANR	9359259	Argument	stderr		9358899	0					
ANR	9359260	Identifier	stderr		9358899	0					
ANR	9359261	Argument	"""DEBUG: PageSize = [ %d %d ]\\n"""		9358899	1					
ANR	9359262	PrimaryExpression	"""DEBUG: PageSize = [ %d %d ]\\n"""		9358899	0					
ANR	9359263	Argument	header -> PageSize [ 0 ]		9358899	2					
ANR	9359264	ArrayIndexing	header -> PageSize [ 0 ]		9358899	0					
ANR	9359265	PtrMemberAccess	header -> PageSize		9358899	0					
ANR	9359266	Identifier	header		9358899	0					
ANR	9359267	Identifier	PageSize		9358899	1					
ANR	9359268	PrimaryExpression	0		9358899	1					
ANR	9359269	Argument	header -> PageSize [ 1 ]		9358899	3					
ANR	9359270	ArrayIndexing	header -> PageSize [ 1 ]		9358899	0					
ANR	9359271	PtrMemberAccess	header -> PageSize		9358899	0					
ANR	9359272	Identifier	header		9358899	0					
ANR	9359273	Identifier	PageSize		9358899	1					
ANR	9359274	PrimaryExpression	1		9358899	1					
ANR	9359275	ExpressionStatement	"fprintf ( stderr , ""DEBUG: Separations = %d\\n"" , header -> Separations )"	210:2:6256:6321	9358899	27	True				
ANR	9359276	CallExpression	"fprintf ( stderr , ""DEBUG: Separations = %d\\n"" , header -> Separations )"		9358899	0					
ANR	9359277	Callee	fprintf		9358899	0					
ANR	9359278	Identifier	fprintf		9358899	0					
ANR	9359279	ArgumentList	stderr		9358899	1					
ANR	9359280	Argument	stderr		9358899	0					
ANR	9359281	Identifier	stderr		9358899	0					
ANR	9359282	Argument	"""DEBUG: Separations = %d\\n"""		9358899	1					
ANR	9359283	PrimaryExpression	"""DEBUG: Separations = %d\\n"""		9358899	0					
ANR	9359284	Argument	header -> Separations		9358899	2					
ANR	9359285	PtrMemberAccess	header -> Separations		9358899	0					
ANR	9359286	Identifier	header		9358899	0					
ANR	9359287	Identifier	Separations		9358899	1					
ANR	9359288	ExpressionStatement	"fprintf ( stderr , ""DEBUG: TraySwitch = %d\\n"" , header -> TraySwitch )"	211:2:6325:6388	9358899	28	True				
ANR	9359289	CallExpression	"fprintf ( stderr , ""DEBUG: TraySwitch = %d\\n"" , header -> TraySwitch )"		9358899	0					
ANR	9359290	Callee	fprintf		9358899	0					
ANR	9359291	Identifier	fprintf		9358899	0					
ANR	9359292	ArgumentList	stderr		9358899	1					
ANR	9359293	Argument	stderr		9358899	0					
ANR	9359294	Identifier	stderr		9358899	0					
ANR	9359295	Argument	"""DEBUG: TraySwitch = %d\\n"""		9358899	1					
ANR	9359296	PrimaryExpression	"""DEBUG: TraySwitch = %d\\n"""		9358899	0					
ANR	9359297	Argument	header -> TraySwitch		9358899	2					
ANR	9359298	PtrMemberAccess	header -> TraySwitch		9358899	0					
ANR	9359299	Identifier	header		9358899	0					
ANR	9359300	Identifier	TraySwitch		9358899	1					
ANR	9359301	ExpressionStatement	"fprintf ( stderr , ""DEBUG: Tumble = %d\\n"" , header -> Tumble )"	212:2:6392:6447	9358899	29	True				
ANR	9359302	CallExpression	"fprintf ( stderr , ""DEBUG: Tumble = %d\\n"" , header -> Tumble )"		9358899	0					
ANR	9359303	Callee	fprintf		9358899	0					
ANR	9359304	Identifier	fprintf		9358899	0					
ANR	9359305	ArgumentList	stderr		9358899	1					
ANR	9359306	Argument	stderr		9358899	0					
ANR	9359307	Identifier	stderr		9358899	0					
ANR	9359308	Argument	"""DEBUG: Tumble = %d\\n"""		9358899	1					
ANR	9359309	PrimaryExpression	"""DEBUG: Tumble = %d\\n"""		9358899	0					
ANR	9359310	Argument	header -> Tumble		9358899	2					
ANR	9359311	PtrMemberAccess	header -> Tumble		9358899	0					
ANR	9359312	Identifier	header		9358899	0					
ANR	9359313	Identifier	Tumble		9358899	1					
ANR	9359314	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsWidth = %d\\n"" , header -> cupsWidth )"	213:2:6451:6512	9358899	30	True				
ANR	9359315	CallExpression	"fprintf ( stderr , ""DEBUG: cupsWidth = %d\\n"" , header -> cupsWidth )"		9358899	0					
ANR	9359316	Callee	fprintf		9358899	0					
ANR	9359317	Identifier	fprintf		9358899	0					
ANR	9359318	ArgumentList	stderr		9358899	1					
ANR	9359319	Argument	stderr		9358899	0					
ANR	9359320	Identifier	stderr		9358899	0					
ANR	9359321	Argument	"""DEBUG: cupsWidth = %d\\n"""		9358899	1					
ANR	9359322	PrimaryExpression	"""DEBUG: cupsWidth = %d\\n"""		9358899	0					
ANR	9359323	Argument	header -> cupsWidth		9358899	2					
ANR	9359324	PtrMemberAccess	header -> cupsWidth		9358899	0					
ANR	9359325	Identifier	header		9358899	0					
ANR	9359326	Identifier	cupsWidth		9358899	1					
ANR	9359327	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsHeight = %d\\n"" , header -> cupsHeight )"	214:2:6516:6579	9358899	31	True				
ANR	9359328	CallExpression	"fprintf ( stderr , ""DEBUG: cupsHeight = %d\\n"" , header -> cupsHeight )"		9358899	0					
ANR	9359329	Callee	fprintf		9358899	0					
ANR	9359330	Identifier	fprintf		9358899	0					
ANR	9359331	ArgumentList	stderr		9358899	1					
ANR	9359332	Argument	stderr		9358899	0					
ANR	9359333	Identifier	stderr		9358899	0					
ANR	9359334	Argument	"""DEBUG: cupsHeight = %d\\n"""		9358899	1					
ANR	9359335	PrimaryExpression	"""DEBUG: cupsHeight = %d\\n"""		9358899	0					
ANR	9359336	Argument	header -> cupsHeight		9358899	2					
ANR	9359337	PtrMemberAccess	header -> cupsHeight		9358899	0					
ANR	9359338	Identifier	header		9358899	0					
ANR	9359339	Identifier	cupsHeight		9358899	1					
ANR	9359340	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsMediaType = %d\\n"" , header -> cupsMediaType )"	215:2:6583:6652	9358899	32	True				
ANR	9359341	CallExpression	"fprintf ( stderr , ""DEBUG: cupsMediaType = %d\\n"" , header -> cupsMediaType )"		9358899	0					
ANR	9359342	Callee	fprintf		9358899	0					
ANR	9359343	Identifier	fprintf		9358899	0					
ANR	9359344	ArgumentList	stderr		9358899	1					
ANR	9359345	Argument	stderr		9358899	0					
ANR	9359346	Identifier	stderr		9358899	0					
ANR	9359347	Argument	"""DEBUG: cupsMediaType = %d\\n"""		9358899	1					
ANR	9359348	PrimaryExpression	"""DEBUG: cupsMediaType = %d\\n"""		9358899	0					
ANR	9359349	Argument	header -> cupsMediaType		9358899	2					
ANR	9359350	PtrMemberAccess	header -> cupsMediaType		9358899	0					
ANR	9359351	Identifier	header		9358899	0					
ANR	9359352	Identifier	cupsMediaType		9358899	1					
ANR	9359353	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsBitsPerColor = %d\\n"" , header -> cupsBitsPerColor )"	216:2:6656:6731	9358899	33	True				
ANR	9359354	CallExpression	"fprintf ( stderr , ""DEBUG: cupsBitsPerColor = %d\\n"" , header -> cupsBitsPerColor )"		9358899	0					
ANR	9359355	Callee	fprintf		9358899	0					
ANR	9359356	Identifier	fprintf		9358899	0					
ANR	9359357	ArgumentList	stderr		9358899	1					
ANR	9359358	Argument	stderr		9358899	0					
ANR	9359359	Identifier	stderr		9358899	0					
ANR	9359360	Argument	"""DEBUG: cupsBitsPerColor = %d\\n"""		9358899	1					
ANR	9359361	PrimaryExpression	"""DEBUG: cupsBitsPerColor = %d\\n"""		9358899	0					
ANR	9359362	Argument	header -> cupsBitsPerColor		9358899	2					
ANR	9359363	PtrMemberAccess	header -> cupsBitsPerColor		9358899	0					
ANR	9359364	Identifier	header		9358899	0					
ANR	9359365	Identifier	cupsBitsPerColor		9358899	1					
ANR	9359366	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsBitsPerPixel = %d\\n"" , header -> cupsBitsPerPixel )"	217:2:6735:6810	9358899	34	True				
ANR	9359367	CallExpression	"fprintf ( stderr , ""DEBUG: cupsBitsPerPixel = %d\\n"" , header -> cupsBitsPerPixel )"		9358899	0					
ANR	9359368	Callee	fprintf		9358899	0					
ANR	9359369	Identifier	fprintf		9358899	0					
ANR	9359370	ArgumentList	stderr		9358899	1					
ANR	9359371	Argument	stderr		9358899	0					
ANR	9359372	Identifier	stderr		9358899	0					
ANR	9359373	Argument	"""DEBUG: cupsBitsPerPixel = %d\\n"""		9358899	1					
ANR	9359374	PrimaryExpression	"""DEBUG: cupsBitsPerPixel = %d\\n"""		9358899	0					
ANR	9359375	Argument	header -> cupsBitsPerPixel		9358899	2					
ANR	9359376	PtrMemberAccess	header -> cupsBitsPerPixel		9358899	0					
ANR	9359377	Identifier	header		9358899	0					
ANR	9359378	Identifier	cupsBitsPerPixel		9358899	1					
ANR	9359379	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsBytesPerLine = %d\\n"" , header -> cupsBytesPerLine )"	218:2:6814:6889	9358899	35	True				
ANR	9359380	CallExpression	"fprintf ( stderr , ""DEBUG: cupsBytesPerLine = %d\\n"" , header -> cupsBytesPerLine )"		9358899	0					
ANR	9359381	Callee	fprintf		9358899	0					
ANR	9359382	Identifier	fprintf		9358899	0					
ANR	9359383	ArgumentList	stderr		9358899	1					
ANR	9359384	Argument	stderr		9358899	0					
ANR	9359385	Identifier	stderr		9358899	0					
ANR	9359386	Argument	"""DEBUG: cupsBytesPerLine = %d\\n"""		9358899	1					
ANR	9359387	PrimaryExpression	"""DEBUG: cupsBytesPerLine = %d\\n"""		9358899	0					
ANR	9359388	Argument	header -> cupsBytesPerLine		9358899	2					
ANR	9359389	PtrMemberAccess	header -> cupsBytesPerLine		9358899	0					
ANR	9359390	Identifier	header		9358899	0					
ANR	9359391	Identifier	cupsBytesPerLine		9358899	1					
ANR	9359392	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsColorOrder = %d\\n"" , header -> cupsColorOrder )"	219:2:6893:6964	9358899	36	True				
ANR	9359393	CallExpression	"fprintf ( stderr , ""DEBUG: cupsColorOrder = %d\\n"" , header -> cupsColorOrder )"		9358899	0					
ANR	9359394	Callee	fprintf		9358899	0					
ANR	9359395	Identifier	fprintf		9358899	0					
ANR	9359396	ArgumentList	stderr		9358899	1					
ANR	9359397	Argument	stderr		9358899	0					
ANR	9359398	Identifier	stderr		9358899	0					
ANR	9359399	Argument	"""DEBUG: cupsColorOrder = %d\\n"""		9358899	1					
ANR	9359400	PrimaryExpression	"""DEBUG: cupsColorOrder = %d\\n"""		9358899	0					
ANR	9359401	Argument	header -> cupsColorOrder		9358899	2					
ANR	9359402	PtrMemberAccess	header -> cupsColorOrder		9358899	0					
ANR	9359403	Identifier	header		9358899	0					
ANR	9359404	Identifier	cupsColorOrder		9358899	1					
ANR	9359405	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsColorSpace = %d\\n"" , header -> cupsColorSpace )"	220:2:6968:7039	9358899	37	True				
ANR	9359406	CallExpression	"fprintf ( stderr , ""DEBUG: cupsColorSpace = %d\\n"" , header -> cupsColorSpace )"		9358899	0					
ANR	9359407	Callee	fprintf		9358899	0					
ANR	9359408	Identifier	fprintf		9358899	0					
ANR	9359409	ArgumentList	stderr		9358899	1					
ANR	9359410	Argument	stderr		9358899	0					
ANR	9359411	Identifier	stderr		9358899	0					
ANR	9359412	Argument	"""DEBUG: cupsColorSpace = %d\\n"""		9358899	1					
ANR	9359413	PrimaryExpression	"""DEBUG: cupsColorSpace = %d\\n"""		9358899	0					
ANR	9359414	Argument	header -> cupsColorSpace		9358899	2					
ANR	9359415	PtrMemberAccess	header -> cupsColorSpace		9358899	0					
ANR	9359416	Identifier	header		9358899	0					
ANR	9359417	Identifier	cupsColorSpace		9358899	1					
ANR	9359418	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsCompression = %d\\n"" , header -> cupsCompression )"	221:2:7043:7116	9358899	38	True				
ANR	9359419	CallExpression	"fprintf ( stderr , ""DEBUG: cupsCompression = %d\\n"" , header -> cupsCompression )"		9358899	0					
ANR	9359420	Callee	fprintf		9358899	0					
ANR	9359421	Identifier	fprintf		9358899	0					
ANR	9359422	ArgumentList	stderr		9358899	1					
ANR	9359423	Argument	stderr		9358899	0					
ANR	9359424	Identifier	stderr		9358899	0					
ANR	9359425	Argument	"""DEBUG: cupsCompression = %d\\n"""		9358899	1					
ANR	9359426	PrimaryExpression	"""DEBUG: cupsCompression = %d\\n"""		9358899	0					
ANR	9359427	Argument	header -> cupsCompression		9358899	2					
ANR	9359428	PtrMemberAccess	header -> cupsCompression		9358899	0					
ANR	9359429	Identifier	header		9358899	0					
ANR	9359430	Identifier	cupsCompression		9358899	1					
ANR	9359431	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsRowCount = %d\\n"" , header -> cupsRowCount )"	222:2:7120:7187	9358899	39	True				
ANR	9359432	CallExpression	"fprintf ( stderr , ""DEBUG: cupsRowCount = %d\\n"" , header -> cupsRowCount )"		9358899	0					
ANR	9359433	Callee	fprintf		9358899	0					
ANR	9359434	Identifier	fprintf		9358899	0					
ANR	9359435	ArgumentList	stderr		9358899	1					
ANR	9359436	Argument	stderr		9358899	0					
ANR	9359437	Identifier	stderr		9358899	0					
ANR	9359438	Argument	"""DEBUG: cupsRowCount = %d\\n"""		9358899	1					
ANR	9359439	PrimaryExpression	"""DEBUG: cupsRowCount = %d\\n"""		9358899	0					
ANR	9359440	Argument	header -> cupsRowCount		9358899	2					
ANR	9359441	PtrMemberAccess	header -> cupsRowCount		9358899	0					
ANR	9359442	Identifier	header		9358899	0					
ANR	9359443	Identifier	cupsRowCount		9358899	1					
ANR	9359444	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsRowFeed = %d\\n"" , header -> cupsRowFeed )"	223:2:7191:7256	9358899	40	True				
ANR	9359445	CallExpression	"fprintf ( stderr , ""DEBUG: cupsRowFeed = %d\\n"" , header -> cupsRowFeed )"		9358899	0					
ANR	9359446	Callee	fprintf		9358899	0					
ANR	9359447	Identifier	fprintf		9358899	0					
ANR	9359448	ArgumentList	stderr		9358899	1					
ANR	9359449	Argument	stderr		9358899	0					
ANR	9359450	Identifier	stderr		9358899	0					
ANR	9359451	Argument	"""DEBUG: cupsRowFeed = %d\\n"""		9358899	1					
ANR	9359452	PrimaryExpression	"""DEBUG: cupsRowFeed = %d\\n"""		9358899	0					
ANR	9359453	Argument	header -> cupsRowFeed		9358899	2					
ANR	9359454	PtrMemberAccess	header -> cupsRowFeed		9358899	0					
ANR	9359455	Identifier	header		9358899	0					
ANR	9359456	Identifier	cupsRowFeed		9358899	1					
ANR	9359457	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsRowStep = %d\\n"" , header -> cupsRowStep )"	224:2:7260:7325	9358899	41	True				
ANR	9359458	CallExpression	"fprintf ( stderr , ""DEBUG: cupsRowStep = %d\\n"" , header -> cupsRowStep )"		9358899	0					
ANR	9359459	Callee	fprintf		9358899	0					
ANR	9359460	Identifier	fprintf		9358899	0					
ANR	9359461	ArgumentList	stderr		9358899	1					
ANR	9359462	Argument	stderr		9358899	0					
ANR	9359463	Identifier	stderr		9358899	0					
ANR	9359464	Argument	"""DEBUG: cupsRowStep = %d\\n"""		9358899	1					
ANR	9359465	PrimaryExpression	"""DEBUG: cupsRowStep = %d\\n"""		9358899	0					
ANR	9359466	Argument	header -> cupsRowStep		9358899	2					
ANR	9359467	PtrMemberAccess	header -> cupsRowStep		9358899	0					
ANR	9359468	Identifier	header		9358899	0					
ANR	9359469	Identifier	cupsRowStep		9358899	1					
ANR	9359470	SwitchStatement	switch ( ModelNumber )		9358899	42					
ANR	9359471	Condition	ModelNumber	226:10:7338:7348	9358899	0	True				
ANR	9359472	Identifier	ModelNumber		9358899	0					
ANR	9359473	CompoundStatement		58:2:3173:3173	9358899	1					
ANR	9359474	Label	case DYMO_3x0 :	228:4:7359:7373	9358899	0	True				
ANR	9359475	Identifier	DYMO_3x0		9358899	0					
ANR	9359476	ExpressionStatement	length = header -> PageSize [ 1 ] * header -> HWResolution [ 1 ] / 72	233:1:7426:7485	9358899	1	True				
ANR	9359477	AssignmentExpression	length = header -> PageSize [ 1 ] * header -> HWResolution [ 1 ] / 72		9358899	0		=			
ANR	9359478	Identifier	length		9358899	0					
ANR	9359479	MultiplicativeExpression	header -> PageSize [ 1 ] * header -> HWResolution [ 1 ] / 72		9358899	1		*			
ANR	9359480	ArrayIndexing	header -> PageSize [ 1 ]		9358899	0					
ANR	9359481	PtrMemberAccess	header -> PageSize		9358899	0					
ANR	9359482	Identifier	header		9358899	0					
ANR	9359483	Identifier	PageSize		9358899	1					
ANR	9359484	PrimaryExpression	1		9358899	1					
ANR	9359485	MultiplicativeExpression	header -> HWResolution [ 1 ] / 72		9358899	1		/			
ANR	9359486	ArrayIndexing	header -> HWResolution [ 1 ]		9358899	0					
ANR	9359487	PtrMemberAccess	header -> HWResolution		9358899	0					
ANR	9359488	Identifier	header		9358899	0					
ANR	9359489	Identifier	HWResolution		9358899	1					
ANR	9359490	PrimaryExpression	1		9358899	1					
ANR	9359491	PrimaryExpression	72		9358899	1					
ANR	9359492	ExpressionStatement	"printf ( ""\\033L%c%c"" , length >> 8 , length )"	235:1:7489:7529	9358899	2	True				
ANR	9359493	CallExpression	"printf ( ""\\033L%c%c"" , length >> 8 , length )"		9358899	0					
ANR	9359494	Callee	printf		9358899	0					
ANR	9359495	Identifier	printf		9358899	0					
ANR	9359496	ArgumentList	"""\\033L%c%c"""		9358899	1					
ANR	9359497	Argument	"""\\033L%c%c"""		9358899	0					
ANR	9359498	PrimaryExpression	"""\\033L%c%c"""		9358899	0					
ANR	9359499	Argument	length >> 8		9358899	1					
ANR	9359500	ShiftExpression	length >> 8		9358899	0		>>			
ANR	9359501	Identifier	length		9358899	0					
ANR	9359502	PrimaryExpression	8		9358899	1					
ANR	9359503	Argument	length		9358899	2					
ANR	9359504	Identifier	length		9358899	0					
ANR	9359505	ExpressionStatement	"printf ( ""\\033D%c"" , header -> cupsBytesPerLine )"	236:1:7532:7575	9358899	3	True				
ANR	9359506	CallExpression	"printf ( ""\\033D%c"" , header -> cupsBytesPerLine )"		9358899	0					
ANR	9359507	Callee	printf		9358899	0					
ANR	9359508	Identifier	printf		9358899	0					
ANR	9359509	ArgumentList	"""\\033D%c"""		9358899	1					
ANR	9359510	Argument	"""\\033D%c"""		9358899	0					
ANR	9359511	PrimaryExpression	"""\\033D%c"""		9358899	0					
ANR	9359512	Argument	header -> cupsBytesPerLine		9358899	1					
ANR	9359513	PtrMemberAccess	header -> cupsBytesPerLine		9358899	0					
ANR	9359514	Identifier	header		9358899	0					
ANR	9359515	Identifier	cupsBytesPerLine		9358899	1					
ANR	9359516	ExpressionStatement	"printf ( ""\\033%c"" , header -> cupsCompression + 'c' )"	238:1:7579:7626	9358899	4	True				
ANR	9359517	CallExpression	"printf ( ""\\033%c"" , header -> cupsCompression + 'c' )"		9358899	0					
ANR	9359518	Callee	printf		9358899	0					
ANR	9359519	Identifier	printf		9358899	0					
ANR	9359520	ArgumentList	"""\\033%c"""		9358899	1					
ANR	9359521	Argument	"""\\033%c"""		9358899	0					
ANR	9359522	PrimaryExpression	"""\\033%c"""		9358899	0					
ANR	9359523	Argument	header -> cupsCompression + 'c'		9358899	1					
ANR	9359524	AdditiveExpression	header -> cupsCompression + 'c'		9358899	0		+			
ANR	9359525	PtrMemberAccess	header -> cupsCompression		9358899	0					
ANR	9359526	Identifier	header		9358899	0					
ANR	9359527	Identifier	cupsCompression		9358899	1					
ANR	9359528	PrimaryExpression	'c'		9358899	1					
ANR	9359529	BreakStatement	break ;	239:1:7644:7649	9358899	5	True				
ANR	9359530	Label	case ZEBRA_EPL_LINE :	241:4:7656:7676	9358899	6	True				
ANR	9359531	Identifier	ZEBRA_EPL_LINE		9358899	0					
ANR	9359532	IfStatement	"if ( ( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" ) )"		9358899	7					
ANR	9359533	Condition	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" )"	246:5:7726:7825	9358899	0	True				
ANR	9359534	AndExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" )"		9358899	0		&&			
ANR	9359535	EqualityExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL"		9358899	0		!=			
ANR	9359536	AssignmentExpression	"choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" )"		9358899	0		=			
ANR	9359537	Identifier	choice		9358899	0					
ANR	9359538	CallExpression	"ppdFindMarkedChoice ( ppd , ""zePrintRate"" )"		9358899	1					
ANR	9359539	Callee	ppdFindMarkedChoice		9358899	0					
ANR	9359540	Identifier	ppdFindMarkedChoice		9358899	0					
ANR	9359541	ArgumentList	ppd		9358899	1					
ANR	9359542	Argument	ppd		9358899	0					
ANR	9359543	Identifier	ppd		9358899	0					
ANR	9359544	Argument	"""zePrintRate"""		9358899	1					
ANR	9359545	PrimaryExpression	"""zePrintRate"""		9358899	0					
ANR	9359546	Identifier	NULL		9358899	1					
ANR	9359547	CallExpression	"strcmp ( choice -> choice , ""Default"" )"		9358899	1					
ANR	9359548	Callee	strcmp		9358899	0					
ANR	9359549	Identifier	strcmp		9358899	0					
ANR	9359550	ArgumentList	choice -> choice		9358899	1					
ANR	9359551	Argument	choice -> choice		9358899	0					
ANR	9359552	PtrMemberAccess	choice -> choice		9358899	0					
ANR	9359553	Identifier	choice		9358899	0					
ANR	9359554	Identifier	choice		9358899	1					
ANR	9359555	Argument	"""Default"""		9358899	1					
ANR	9359556	PrimaryExpression	"""Default"""		9358899	0					
ANR	9359557	ExpressionStatement	"printf ( ""\\033S%.0f"" , atof ( choice -> choice ) * 2.0 - 2.0 )"	248:3:7831:7884	9358899	1	True				
ANR	9359558	CallExpression	"printf ( ""\\033S%.0f"" , atof ( choice -> choice ) * 2.0 - 2.0 )"		9358899	0					
ANR	9359559	Callee	printf		9358899	0					
ANR	9359560	Identifier	printf		9358899	0					
ANR	9359561	ArgumentList	"""\\033S%.0f"""		9358899	1					
ANR	9359562	Argument	"""\\033S%.0f"""		9358899	0					
ANR	9359563	PrimaryExpression	"""\\033S%.0f"""		9358899	0					
ANR	9359564	Argument	atof ( choice -> choice ) * 2.0 - 2.0		9358899	1					
ANR	9359565	AdditiveExpression	atof ( choice -> choice ) * 2.0 - 2.0		9358899	0		-			
ANR	9359566	MultiplicativeExpression	atof ( choice -> choice ) * 2.0		9358899	0		*			
ANR	9359567	CallExpression	atof ( choice -> choice )		9358899	0					
ANR	9359568	Callee	atof		9358899	0					
ANR	9359569	Identifier	atof		9358899	0					
ANR	9359570	ArgumentList	choice -> choice		9358899	1					
ANR	9359571	Argument	choice -> choice		9358899	0					
ANR	9359572	PtrMemberAccess	choice -> choice		9358899	0					
ANR	9359573	Identifier	choice		9358899	0					
ANR	9359574	Identifier	choice		9358899	1					
ANR	9359575	PrimaryExpression	2.0		9358899	1					
ANR	9359576	PrimaryExpression	2.0		9358899	1					
ANR	9359577	IfStatement	if ( header -> cupsCompression > 0 && header -> cupsCompression <= 100 )		9358899	8					
ANR	9359578	Condition	header -> cupsCompression > 0 && header -> cupsCompression <= 100	254:12:7940:8000	9358899	0	True				
ANR	9359579	AndExpression	header -> cupsCompression > 0 && header -> cupsCompression <= 100		9358899	0		&&			
ANR	9359580	RelationalExpression	header -> cupsCompression > 0		9358899	0		>			
ANR	9359581	PtrMemberAccess	header -> cupsCompression		9358899	0					
ANR	9359582	Identifier	header		9358899	0					
ANR	9359583	Identifier	cupsCompression		9358899	1					
ANR	9359584	PrimaryExpression	0		9358899	1					
ANR	9359585	RelationalExpression	header -> cupsCompression <= 100		9358899	1		<=			
ANR	9359586	PtrMemberAccess	header -> cupsCompression		9358899	0					
ANR	9359587	Identifier	header		9358899	0					
ANR	9359588	Identifier	cupsCompression		9358899	1					
ANR	9359589	PrimaryExpression	100		9358899	1					
ANR	9359590	ExpressionStatement	"printf ( ""\\033D%d"" , 7 * header -> cupsCompression / 100 )"	255:3:8006:8058	9358899	1	True				
ANR	9359591	CallExpression	"printf ( ""\\033D%d"" , 7 * header -> cupsCompression / 100 )"		9358899	0					
ANR	9359592	Callee	printf		9358899	0					
ANR	9359593	Identifier	printf		9358899	0					
ANR	9359594	ArgumentList	"""\\033D%d"""		9358899	1					
ANR	9359595	Argument	"""\\033D%d"""		9358899	0					
ANR	9359596	PrimaryExpression	"""\\033D%d"""		9358899	0					
ANR	9359597	Argument	7 * header -> cupsCompression / 100		9358899	1					
ANR	9359598	MultiplicativeExpression	7 * header -> cupsCompression / 100		9358899	0		*			
ANR	9359599	PrimaryExpression	7		9358899	0					
ANR	9359600	MultiplicativeExpression	header -> cupsCompression / 100		9358899	1		/			
ANR	9359601	PtrMemberAccess	header -> cupsCompression		9358899	0					
ANR	9359602	Identifier	header		9358899	0					
ANR	9359603	Identifier	cupsCompression		9358899	1					
ANR	9359604	PrimaryExpression	100		9358899	1					
ANR	9359605	ExpressionStatement	"fputs ( ""\\033M01"" , stdout )"	261:1:8111:8135	9358899	9	True				
ANR	9359606	CallExpression	"fputs ( ""\\033M01"" , stdout )"		9358899	0					
ANR	9359607	Callee	fputs		9358899	0					
ANR	9359608	Identifier	fputs		9358899	0					
ANR	9359609	ArgumentList	"""\\033M01"""		9358899	1					
ANR	9359610	Argument	"""\\033M01"""		9358899	0					
ANR	9359611	PrimaryExpression	"""\\033M01"""		9358899	0					
ANR	9359612	Argument	stdout		9358899	1					
ANR	9359613	Identifier	stdout		9358899	0					
ANR	9359614	ExpressionStatement	"fputs ( ""\\033B"" , stdout )"	267:8:8196:8218	9358899	10	True				
ANR	9359615	CallExpression	"fputs ( ""\\033B"" , stdout )"		9358899	0					
ANR	9359616	Callee	fputs		9358899	0					
ANR	9359617	Identifier	fputs		9358899	0					
ANR	9359618	ArgumentList	"""\\033B"""		9358899	1					
ANR	9359619	Argument	"""\\033B"""		9358899	0					
ANR	9359620	PrimaryExpression	"""\\033B"""		9358899	0					
ANR	9359621	Argument	stdout		9358899	1					
ANR	9359622	Identifier	stdout		9358899	0					
ANR	9359623	BreakStatement	break ;	268:8:8228:8233	9358899	11	True				
ANR	9359624	Label	case ZEBRA_EPL_PAGE :	270:4:8240:8260	9358899	12	True				
ANR	9359625	Identifier	ZEBRA_EPL_PAGE		9358899	0					
ANR	9359626	ExpressionStatement	"puts ( """" )"	275:8:8316:8324	9358899	13	True				
ANR	9359627	CallExpression	"puts ( """" )"		9358899	0					
ANR	9359628	Callee	puts		9358899	0					
ANR	9359629	Identifier	puts		9358899	0					
ANR	9359630	ArgumentList	""""""		9358899	1					
ANR	9359631	Argument	""""""		9358899	0					
ANR	9359632	PrimaryExpression	""""""		9358899	0					
ANR	9359633	ExpressionStatement	"puts ( ""N"" )"	276:1:8327:8336	9358899	14	True				
ANR	9359634	CallExpression	"puts ( ""N"" )"		9358899	0					
ANR	9359635	Callee	puts		9358899	0					
ANR	9359636	Identifier	puts		9358899	0					
ANR	9359637	ArgumentList	"""N"""		9358899	1					
ANR	9359638	Argument	"""N"""		9358899	0					
ANR	9359639	PrimaryExpression	"""N"""		9358899	0					
ANR	9359640	IfStatement	"if ( ! strcmp ( header -> MediaType , ""Direct"" ) )"		9358899	15					
ANR	9359641	Condition	"! strcmp ( header -> MediaType , ""Direct"" )"	282:5:8393:8428	9358899	0	True				
ANR	9359642	UnaryOperationExpression	"! strcmp ( header -> MediaType , ""Direct"" )"		9358899	0					
ANR	9359643	UnaryOperator	!		9358899	0					
ANR	9359644	CallExpression	"strcmp ( header -> MediaType , ""Direct"" )"		9358899	1					
ANR	9359645	Callee	strcmp		9358899	0					
ANR	9359646	Identifier	strcmp		9358899	0					
ANR	9359647	ArgumentList	header -> MediaType		9358899	1					
ANR	9359648	Argument	header -> MediaType		9358899	0					
ANR	9359649	PtrMemberAccess	header -> MediaType		9358899	0					
ANR	9359650	Identifier	header		9358899	0					
ANR	9359651	Identifier	MediaType		9358899	1					
ANR	9359652	Argument	"""Direct"""		9358899	1					
ANR	9359653	PrimaryExpression	"""Direct"""		9358899	0					
ANR	9359654	ExpressionStatement	"puts ( ""OD"" )"	283:3:8434:8444	9358899	1	True				
ANR	9359655	CallExpression	"puts ( ""OD"" )"		9358899	0					
ANR	9359656	Callee	puts		9358899	0					
ANR	9359657	Identifier	puts		9358899	0					
ANR	9359658	ArgumentList	"""OD"""		9358899	1					
ANR	9359659	Argument	"""OD"""		9358899	0					
ANR	9359660	PrimaryExpression	"""OD"""		9358899	0					
ANR	9359661	IfStatement	"if ( ( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" ) )"		9358899	16					
ANR	9359662	Condition	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" )"	289:5:8495:8594	9358899	0	True				
ANR	9359663	AndExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" )"		9358899	0		&&			
ANR	9359664	EqualityExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL"		9358899	0		!=			
ANR	9359665	AssignmentExpression	"choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" )"		9358899	0		=			
ANR	9359666	Identifier	choice		9358899	0					
ANR	9359667	CallExpression	"ppdFindMarkedChoice ( ppd , ""zePrintRate"" )"		9358899	1					
ANR	9359668	Callee	ppdFindMarkedChoice		9358899	0					
ANR	9359669	Identifier	ppdFindMarkedChoice		9358899	0					
ANR	9359670	ArgumentList	ppd		9358899	1					
ANR	9359671	Argument	ppd		9358899	0					
ANR	9359672	Identifier	ppd		9358899	0					
ANR	9359673	Argument	"""zePrintRate"""		9358899	1					
ANR	9359674	PrimaryExpression	"""zePrintRate"""		9358899	0					
ANR	9359675	Identifier	NULL		9358899	1					
ANR	9359676	CallExpression	"strcmp ( choice -> choice , ""Default"" )"		9358899	1					
ANR	9359677	Callee	strcmp		9358899	0					
ANR	9359678	Identifier	strcmp		9358899	0					
ANR	9359679	ArgumentList	choice -> choice		9358899	1					
ANR	9359680	Argument	choice -> choice		9358899	0					
ANR	9359681	PtrMemberAccess	choice -> choice		9358899	0					
ANR	9359682	Identifier	choice		9358899	0					
ANR	9359683	Identifier	choice		9358899	1					
ANR	9359684	Argument	"""Default"""		9358899	1					
ANR	9359685	PrimaryExpression	"""Default"""		9358899	0					
ANR	9359686	CompoundStatement		123:3:4423:4455	9358899	1					
ANR	9359687	IdentifierDeclStatement	float val = atof ( choice -> choice ) ;	292:3:8603:8635	9358899	0	True				
ANR	9359688	IdentifierDecl	val = atof ( choice -> choice )		9358899	0					
ANR	9359689	IdentifierDeclType	float		9358899	0					
ANR	9359690	Identifier	val		9358899	1					
ANR	9359691	AssignmentExpression	val = atof ( choice -> choice )		9358899	2		=			
ANR	9359692	Identifier	val		9358899	0					
ANR	9359693	CallExpression	atof ( choice -> choice )		9358899	1					
ANR	9359694	Callee	atof		9358899	0					
ANR	9359695	Identifier	atof		9358899	0					
ANR	9359696	ArgumentList	choice -> choice		9358899	1					
ANR	9359697	Argument	choice -> choice		9358899	0					
ANR	9359698	PtrMemberAccess	choice -> choice		9358899	0					
ANR	9359699	Identifier	choice		9358899	0					
ANR	9359700	Identifier	choice		9358899	1					
ANR	9359701	IfStatement	if ( val >= 3.0 )		9358899	1					
ANR	9359702	Condition	val >= 3.0	294:7:8645:8654	9358899	0	True				
ANR	9359703	RelationalExpression	val >= 3.0		9358899	0		>=			
ANR	9359704	Identifier	val		9358899	0					
ANR	9359705	PrimaryExpression	3.0		9358899	1					
ANR	9359706	ExpressionStatement	"printf ( ""S%.0f\\n"" , val )"	295:5:8662:8684	9358899	1	True				
ANR	9359707	CallExpression	"printf ( ""S%.0f\\n"" , val )"		9358899	0					
ANR	9359708	Callee	printf		9358899	0					
ANR	9359709	Identifier	printf		9358899	0					
ANR	9359710	ArgumentList	"""S%.0f\\n"""		9358899	1					
ANR	9359711	Argument	"""S%.0f\\n"""		9358899	0					
ANR	9359712	PrimaryExpression	"""S%.0f\\n"""		9358899	0					
ANR	9359713	Argument	val		9358899	1					
ANR	9359714	Identifier	val		9358899	0					
ANR	9359715	ElseStatement	else		9358899	0					
ANR	9359716	ExpressionStatement	"printf ( ""S%.0f\\n"" , val * 2.0 - 2.0 )"	297:5:8699:8733	9358899	0	True				
ANR	9359717	CallExpression	"printf ( ""S%.0f\\n"" , val * 2.0 - 2.0 )"		9358899	0					
ANR	9359718	Callee	printf		9358899	0					
ANR	9359719	Identifier	printf		9358899	0					
ANR	9359720	ArgumentList	"""S%.0f\\n"""		9358899	1					
ANR	9359721	Argument	"""S%.0f\\n"""		9358899	0					
ANR	9359722	PrimaryExpression	"""S%.0f\\n"""		9358899	0					
ANR	9359723	Argument	val * 2.0 - 2.0		9358899	1					
ANR	9359724	AdditiveExpression	val * 2.0 - 2.0		9358899	0		-			
ANR	9359725	MultiplicativeExpression	val * 2.0		9358899	0		*			
ANR	9359726	Identifier	val		9358899	0					
ANR	9359727	PrimaryExpression	2.0		9358899	1					
ANR	9359728	PrimaryExpression	2.0		9358899	1					
ANR	9359729	IfStatement	if ( header -> cupsCompression > 0 && header -> cupsCompression <= 100 )		9358899	17					
ANR	9359730	Condition	header -> cupsCompression > 0 && header -> cupsCompression <= 100	304:12:8799:8859	9358899	0	True				
ANR	9359731	AndExpression	header -> cupsCompression > 0 && header -> cupsCompression <= 100		9358899	0		&&			
ANR	9359732	RelationalExpression	header -> cupsCompression > 0		9358899	0		>			
ANR	9359733	PtrMemberAccess	header -> cupsCompression		9358899	0					
ANR	9359734	Identifier	header		9358899	0					
ANR	9359735	Identifier	cupsCompression		9358899	1					
ANR	9359736	PrimaryExpression	0		9358899	1					
ANR	9359737	RelationalExpression	header -> cupsCompression <= 100		9358899	1		<=			
ANR	9359738	PtrMemberAccess	header -> cupsCompression		9358899	0					
ANR	9359739	Identifier	header		9358899	0					
ANR	9359740	Identifier	cupsCompression		9358899	1					
ANR	9359741	PrimaryExpression	100		9358899	1					
ANR	9359742	ExpressionStatement	"printf ( ""D%d\\n"" , 15 * header -> cupsCompression / 100 )"	305:3:8865:8916	9358899	1	True				
ANR	9359743	CallExpression	"printf ( ""D%d\\n"" , 15 * header -> cupsCompression / 100 )"		9358899	0					
ANR	9359744	Callee	printf		9358899	0					
ANR	9359745	Identifier	printf		9358899	0					
ANR	9359746	ArgumentList	"""D%d\\n"""		9358899	1					
ANR	9359747	Argument	"""D%d\\n"""		9358899	0					
ANR	9359748	PrimaryExpression	"""D%d\\n"""		9358899	0					
ANR	9359749	Argument	15 * header -> cupsCompression / 100		9358899	1					
ANR	9359750	MultiplicativeExpression	15 * header -> cupsCompression / 100		9358899	0		*			
ANR	9359751	PrimaryExpression	15		9358899	0					
ANR	9359752	MultiplicativeExpression	header -> cupsCompression / 100		9358899	1		/			
ANR	9359753	PtrMemberAccess	header -> cupsCompression		9358899	0					
ANR	9359754	Identifier	header		9358899	0					
ANR	9359755	Identifier	cupsCompression		9358899	1					
ANR	9359756	PrimaryExpression	100		9358899	1					
ANR	9359757	ExpressionStatement	"printf ( ""q%d\\n"" , ( header -> cupsWidth + 7 ) & ~7 )"	311:8:8970:9015	9358899	18	True				
ANR	9359758	CallExpression	"printf ( ""q%d\\n"" , ( header -> cupsWidth + 7 ) & ~7 )"		9358899	0					
ANR	9359759	Callee	printf		9358899	0					
ANR	9359760	Identifier	printf		9358899	0					
ANR	9359761	ArgumentList	"""q%d\\n"""		9358899	1					
ANR	9359762	Argument	"""q%d\\n"""		9358899	0					
ANR	9359763	PrimaryExpression	"""q%d\\n"""		9358899	0					
ANR	9359764	Argument	( header -> cupsWidth + 7 ) & ~7		9358899	1					
ANR	9359765	BitAndExpression	( header -> cupsWidth + 7 ) & ~7		9358899	0		&			
ANR	9359766	AdditiveExpression	header -> cupsWidth + 7		9358899	0		+			
ANR	9359767	PtrMemberAccess	header -> cupsWidth		9358899	0					
ANR	9359768	Identifier	header		9358899	0					
ANR	9359769	Identifier	cupsWidth		9358899	1					
ANR	9359770	PrimaryExpression	7		9358899	1					
ANR	9359771	Identifier	~7		9358899	1					
ANR	9359772	BreakStatement	break ;	312:8:9025:9030	9358899	19	True				
ANR	9359773	Label	case ZEBRA_ZPL :	314:4:9037:9052	9358899	20	True				
ANR	9359774	Identifier	ZEBRA_ZPL		9358899	0					
ANR	9359775	IfStatement	if ( header -> cupsCompression > 0 && header -> cupsCompression <= 100 )		9358899	21					
ANR	9359776	Condition	header -> cupsCompression > 0 && header -> cupsCompression <= 100	319:12:9107:9167	9358899	0	True				
ANR	9359777	AndExpression	header -> cupsCompression > 0 && header -> cupsCompression <= 100		9358899	0		&&			
ANR	9359778	RelationalExpression	header -> cupsCompression > 0		9358899	0		>			
ANR	9359779	PtrMemberAccess	header -> cupsCompression		9358899	0					
ANR	9359780	Identifier	header		9358899	0					
ANR	9359781	Identifier	cupsCompression		9358899	1					
ANR	9359782	PrimaryExpression	0		9358899	1					
ANR	9359783	RelationalExpression	header -> cupsCompression <= 100		9358899	1		<=			
ANR	9359784	PtrMemberAccess	header -> cupsCompression		9358899	0					
ANR	9359785	Identifier	header		9358899	0					
ANR	9359786	Identifier	cupsCompression		9358899	1					
ANR	9359787	PrimaryExpression	100		9358899	1					
ANR	9359788	ExpressionStatement	"printf ( ""~SD%02d\\n"" , 30 * header -> cupsCompression / 100 )"	320:3:9173:9228	9358899	1	True				
ANR	9359789	CallExpression	"printf ( ""~SD%02d\\n"" , 30 * header -> cupsCompression / 100 )"		9358899	0					
ANR	9359790	Callee	printf		9358899	0					
ANR	9359791	Identifier	printf		9358899	0					
ANR	9359792	ArgumentList	"""~SD%02d\\n"""		9358899	1					
ANR	9359793	Argument	"""~SD%02d\\n"""		9358899	0					
ANR	9359794	PrimaryExpression	"""~SD%02d\\n"""		9358899	0					
ANR	9359795	Argument	30 * header -> cupsCompression / 100		9358899	1					
ANR	9359796	MultiplicativeExpression	30 * header -> cupsCompression / 100		9358899	0		*			
ANR	9359797	PrimaryExpression	30		9358899	0					
ANR	9359798	MultiplicativeExpression	header -> cupsCompression / 100		9358899	1		/			
ANR	9359799	PtrMemberAccess	header -> cupsCompression		9358899	0					
ANR	9359800	Identifier	header		9358899	0					
ANR	9359801	Identifier	cupsCompression		9358899	1					
ANR	9359802	PrimaryExpression	100		9358899	1					
ANR	9359803	ExpressionStatement	"printf ( ""~DGR:CUPS.GRF,%d,%d,\\n"" , header -> cupsHeight * header -> cupsBytesPerLine , header -> cupsBytesPerLine )"	326:8:9289:9410	9358899	22	True				
ANR	9359804	CallExpression	"printf ( ""~DGR:CUPS.GRF,%d,%d,\\n"" , header -> cupsHeight * header -> cupsBytesPerLine , header -> cupsBytesPerLine )"		9358899	0					
ANR	9359805	Callee	printf		9358899	0					
ANR	9359806	Identifier	printf		9358899	0					
ANR	9359807	ArgumentList	"""~DGR:CUPS.GRF,%d,%d,\\n"""		9358899	1					
ANR	9359808	Argument	"""~DGR:CUPS.GRF,%d,%d,\\n"""		9358899	0					
ANR	9359809	PrimaryExpression	"""~DGR:CUPS.GRF,%d,%d,\\n"""		9358899	0					
ANR	9359810	Argument	header -> cupsHeight * header -> cupsBytesPerLine		9358899	1					
ANR	9359811	MultiplicativeExpression	header -> cupsHeight * header -> cupsBytesPerLine		9358899	0		*			
ANR	9359812	PtrMemberAccess	header -> cupsHeight		9358899	0					
ANR	9359813	Identifier	header		9358899	0					
ANR	9359814	Identifier	cupsHeight		9358899	1					
ANR	9359815	PtrMemberAccess	header -> cupsBytesPerLine		9358899	1					
ANR	9359816	Identifier	header		9358899	0					
ANR	9359817	Identifier	cupsBytesPerLine		9358899	1					
ANR	9359818	Argument	header -> cupsBytesPerLine		9358899	2					
ANR	9359819	PtrMemberAccess	header -> cupsBytesPerLine		9358899	0					
ANR	9359820	Identifier	header		9358899	0					
ANR	9359821	Identifier	cupsBytesPerLine		9358899	1					
ANR	9359822	ExpressionStatement	CompBuffer = malloc ( 2 * header -> cupsBytesPerLine + 1 )	334:1:9471:9524	9358899	23	True				
ANR	9359823	AssignmentExpression	CompBuffer = malloc ( 2 * header -> cupsBytesPerLine + 1 )		9358899	0		=			
ANR	9359824	Identifier	CompBuffer		9358899	0					
ANR	9359825	CallExpression	malloc ( 2 * header -> cupsBytesPerLine + 1 )		9358899	1					
ANR	9359826	Callee	malloc		9358899	0					
ANR	9359827	Identifier	malloc		9358899	0					
ANR	9359828	ArgumentList	2 * header -> cupsBytesPerLine + 1		9358899	1					
ANR	9359829	Argument	2 * header -> cupsBytesPerLine + 1		9358899	0					
ANR	9359830	AdditiveExpression	2 * header -> cupsBytesPerLine + 1		9358899	0		+			
ANR	9359831	MultiplicativeExpression	2 * header -> cupsBytesPerLine		9358899	0		*			
ANR	9359832	PrimaryExpression	2		9358899	0					
ANR	9359833	PtrMemberAccess	header -> cupsBytesPerLine		9358899	1					
ANR	9359834	Identifier	header		9358899	0					
ANR	9359835	Identifier	cupsBytesPerLine		9358899	1					
ANR	9359836	PrimaryExpression	1		9358899	1					
ANR	9359837	ExpressionStatement	LastBuffer = malloc ( header -> cupsBytesPerLine )	335:1:9527:9572	9358899	24	True				
ANR	9359838	AssignmentExpression	LastBuffer = malloc ( header -> cupsBytesPerLine )		9358899	0		=			
ANR	9359839	Identifier	LastBuffer		9358899	0					
ANR	9359840	CallExpression	malloc ( header -> cupsBytesPerLine )		9358899	1					
ANR	9359841	Callee	malloc		9358899	0					
ANR	9359842	Identifier	malloc		9358899	0					
ANR	9359843	ArgumentList	header -> cupsBytesPerLine		9358899	1					
ANR	9359844	Argument	header -> cupsBytesPerLine		9358899	0					
ANR	9359845	PtrMemberAccess	header -> cupsBytesPerLine		9358899	0					
ANR	9359846	Identifier	header		9358899	0					
ANR	9359847	Identifier	cupsBytesPerLine		9358899	1					
ANR	9359848	ExpressionStatement	LastSet = 0	336:1:9575:9589	9358899	25	True				
ANR	9359849	AssignmentExpression	LastSet = 0		9358899	0		=			
ANR	9359850	Identifier	LastSet		9358899	0					
ANR	9359851	PrimaryExpression	0		9358899	1					
ANR	9359852	BreakStatement	break ;	337:8:9599:9604	9358899	26	True				
ANR	9359853	Label	case ZEBRA_CPCL :	339:4:9611:9627	9358899	27	True				
ANR	9359854	Identifier	ZEBRA_CPCL		9358899	0					
ANR	9359855	ExpressionStatement	"printf ( ""! 0 %u %u %u %u\\r\\n"" , header -> HWResolution [ 0 ] , header -> HWResolution [ 1 ] , header -> cupsHeight , header -> NumCopies )"	344:8:9677:9811	9358899	28	True				
ANR	9359856	CallExpression	"printf ( ""! 0 %u %u %u %u\\r\\n"" , header -> HWResolution [ 0 ] , header -> HWResolution [ 1 ] , header -> cupsHeight , header -> NumCopies )"		9358899	0					
ANR	9359857	Callee	printf		9358899	0					
ANR	9359858	Identifier	printf		9358899	0					
ANR	9359859	ArgumentList	"""! 0 %u %u %u %u\\r\\n"""		9358899	1					
ANR	9359860	Argument	"""! 0 %u %u %u %u\\r\\n"""		9358899	0					
ANR	9359861	PrimaryExpression	"""! 0 %u %u %u %u\\r\\n"""		9358899	0					
ANR	9359862	Argument	header -> HWResolution [ 0 ]		9358899	1					
ANR	9359863	ArrayIndexing	header -> HWResolution [ 0 ]		9358899	0					
ANR	9359864	PtrMemberAccess	header -> HWResolution		9358899	0					
ANR	9359865	Identifier	header		9358899	0					
ANR	9359866	Identifier	HWResolution		9358899	1					
ANR	9359867	PrimaryExpression	0		9358899	1					
ANR	9359868	Argument	header -> HWResolution [ 1 ]		9358899	2					
ANR	9359869	ArrayIndexing	header -> HWResolution [ 1 ]		9358899	0					
ANR	9359870	PtrMemberAccess	header -> HWResolution		9358899	0					
ANR	9359871	Identifier	header		9358899	0					
ANR	9359872	Identifier	HWResolution		9358899	1					
ANR	9359873	PrimaryExpression	1		9358899	1					
ANR	9359874	Argument	header -> cupsHeight		9358899	3					
ANR	9359875	PtrMemberAccess	header -> cupsHeight		9358899	0					
ANR	9359876	Identifier	header		9358899	0					
ANR	9359877	Identifier	cupsHeight		9358899	1					
ANR	9359878	Argument	header -> NumCopies		9358899	4					
ANR	9359879	PtrMemberAccess	header -> NumCopies		9358899	0					
ANR	9359880	Identifier	header		9358899	0					
ANR	9359881	Identifier	NumCopies		9358899	1					
ANR	9359882	ExpressionStatement	"printf ( ""PAGE-WIDTH %d\\r\\n"" , header -> cupsWidth )"	347:1:9814:9860	9358899	29	True				
ANR	9359883	CallExpression	"printf ( ""PAGE-WIDTH %d\\r\\n"" , header -> cupsWidth )"		9358899	0					
ANR	9359884	Callee	printf		9358899	0					
ANR	9359885	Identifier	printf		9358899	0					
ANR	9359886	ArgumentList	"""PAGE-WIDTH %d\\r\\n"""		9358899	1					
ANR	9359887	Argument	"""PAGE-WIDTH %d\\r\\n"""		9358899	0					
ANR	9359888	PrimaryExpression	"""PAGE-WIDTH %d\\r\\n"""		9358899	0					
ANR	9359889	Argument	header -> cupsWidth		9358899	1					
ANR	9359890	PtrMemberAccess	header -> cupsWidth		9358899	0					
ANR	9359891	Identifier	header		9358899	0					
ANR	9359892	Identifier	cupsWidth		9358899	1					
ANR	9359893	ExpressionStatement	"printf ( ""PAGE-HEIGHT %d\\r\\n"" , header -> cupsWidth )"	348:1:9863:9910	9358899	30	True				
ANR	9359894	CallExpression	"printf ( ""PAGE-HEIGHT %d\\r\\n"" , header -> cupsWidth )"		9358899	0					
ANR	9359895	Callee	printf		9358899	0					
ANR	9359896	Identifier	printf		9358899	0					
ANR	9359897	ArgumentList	"""PAGE-HEIGHT %d\\r\\n"""		9358899	1					
ANR	9359898	Argument	"""PAGE-HEIGHT %d\\r\\n"""		9358899	0					
ANR	9359899	PrimaryExpression	"""PAGE-HEIGHT %d\\r\\n"""		9358899	0					
ANR	9359900	Argument	header -> cupsWidth		9358899	1					
ANR	9359901	PtrMemberAccess	header -> cupsWidth		9358899	0					
ANR	9359902	Identifier	header		9358899	0					
ANR	9359903	Identifier	cupsWidth		9358899	1					
ANR	9359904	BreakStatement	break ;	349:8:9920:9925	9358899	31	True				
ANR	9359905	Label	case INTELLITECH_PCL :	351:4:9932:9953	9358899	32	True				
ANR	9359906	Identifier	INTELLITECH_PCL		9358899	0					
ANR	9359907	ExpressionStatement	"printf ( ""\\033&l6D\\033&k12H"" )"	356:1:10003:10030	9358899	33	True				
ANR	9359908	CallExpression	"printf ( ""\\033&l6D\\033&k12H"" )"		9358899	0					
ANR	9359909	Callee	printf		9358899	0					
ANR	9359910	Identifier	printf		9358899	0					
ANR	9359911	ArgumentList	"""\\033&l6D\\033&k12H"""		9358899	1					
ANR	9359912	Argument	"""\\033&l6D\\033&k12H"""		9358899	0					
ANR	9359913	PrimaryExpression	"""\\033&l6D\\033&k12H"""		9358899	0					
ANR	9359914	ExpressionStatement	"printf ( ""\\033&l0O"" )"	357:1:10057:10075	9358899	34	True				
ANR	9359915	CallExpression	"printf ( ""\\033&l0O"" )"		9358899	0					
ANR	9359916	Callee	printf		9358899	0					
ANR	9359917	Identifier	printf		9358899	0					
ANR	9359918	ArgumentList	"""\\033&l0O"""		9358899	1					
ANR	9359919	Argument	"""\\033&l0O"""		9358899	0					
ANR	9359920	PrimaryExpression	"""\\033&l0O"""		9358899	0					
ANR	9359921	SwitchStatement	switch ( header -> PageSize [ 1 ] )		9358899	35					
ANR	9359922	Condition	header -> PageSize [ 1 ]	359:9:10119:10137	9358899	0	True				
ANR	9359923	ArrayIndexing	header -> PageSize [ 1 ]		9358899	0					
ANR	9359924	PtrMemberAccess	header -> PageSize		9358899	0					
ANR	9359925	Identifier	header		9358899	0					
ANR	9359926	Identifier	PageSize		9358899	1					
ANR	9359927	PrimaryExpression	1		9358899	1					
ANR	9359928	CompoundStatement		191:1:5961:5961	9358899	1					
ANR	9359929	Label	case 540 :	361:3:10146:10155	9358899	0	True				
ANR	9359930	ExpressionStatement	"printf ( ""\\033&l80A"" )"	362:14:10194:10213	9358899	1	True				
ANR	9359931	CallExpression	"printf ( ""\\033&l80A"" )"		9358899	0					
ANR	9359932	Callee	printf		9358899	0					
ANR	9359933	Identifier	printf		9358899	0					
ANR	9359934	ArgumentList	"""\\033&l80A"""		9358899	1					
ANR	9359935	Argument	"""\\033&l80A"""		9358899	0					
ANR	9359936	PrimaryExpression	"""\\033&l80A"""		9358899	0					
ANR	9359937	BreakStatement	break ;	363:7:10242:10247	9358899	2	True				
ANR	9359938	Label	case 624 :	365:3:10253:10262	9358899	3	True				
ANR	9359939	ExpressionStatement	"printf ( ""\\033&l90A"" )"	366:14:10296:10315	9358899	4	True				
ANR	9359940	CallExpression	"printf ( ""\\033&l90A"" )"		9358899	0					
ANR	9359941	Callee	printf		9358899	0					
ANR	9359942	Identifier	printf		9358899	0					
ANR	9359943	ArgumentList	"""\\033&l90A"""		9358899	1					
ANR	9359944	Argument	"""\\033&l90A"""		9358899	0					
ANR	9359945	PrimaryExpression	"""\\033&l90A"""		9358899	0					
ANR	9359946	BreakStatement	break ;	367:7:10344:10349	9358899	5	True				
ANR	9359947	Label	case 649 :	369:3:10355:10364	9358899	6	True				
ANR	9359948	ExpressionStatement	"printf ( ""\\033&l91A"" )"	370:14:10398:10417	9358899	7	True				
ANR	9359949	CallExpression	"printf ( ""\\033&l91A"" )"		9358899	0					
ANR	9359950	Callee	printf		9358899	0					
ANR	9359951	Identifier	printf		9358899	0					
ANR	9359952	ArgumentList	"""\\033&l91A"""		9358899	1					
ANR	9359953	Argument	"""\\033&l91A"""		9358899	0					
ANR	9359954	PrimaryExpression	"""\\033&l91A"""		9358899	0					
ANR	9359955	BreakStatement	break ;	371:7:10446:10451	9358899	8	True				
ANR	9359956	Label	case 684 :	373:3:10457:10466	9358899	9	True				
ANR	9359957	ExpressionStatement	"printf ( ""\\033&l81A"" )"	374:14:10504:10523	9358899	10	True				
ANR	9359958	CallExpression	"printf ( ""\\033&l81A"" )"		9358899	0					
ANR	9359959	Callee	printf		9358899	0					
ANR	9359960	Identifier	printf		9358899	0					
ANR	9359961	ArgumentList	"""\\033&l81A"""		9358899	1					
ANR	9359962	Argument	"""\\033&l81A"""		9358899	0					
ANR	9359963	PrimaryExpression	"""\\033&l81A"""		9358899	0					
ANR	9359964	BreakStatement	break ;	375:7:10552:10557	9358899	11	True				
ANR	9359965	Label	case 756 :	377:3:10563:10572	9358899	12	True				
ANR	9359966	ExpressionStatement	"printf ( ""\\033&l1A"" )"	378:14:10604:10622	9358899	13	True				
ANR	9359967	CallExpression	"printf ( ""\\033&l1A"" )"		9358899	0					
ANR	9359968	Callee	printf		9358899	0					
ANR	9359969	Identifier	printf		9358899	0					
ANR	9359970	ArgumentList	"""\\033&l1A"""		9358899	1					
ANR	9359971	Argument	"""\\033&l1A"""		9358899	0					
ANR	9359972	PrimaryExpression	"""\\033&l1A"""		9358899	0					
ANR	9359973	BreakStatement	break ;	379:7:10651:10656	9358899	14	True				
ANR	9359974	Label	case 792 :	381:3:10662:10671	9358899	15	True				
ANR	9359975	ExpressionStatement	"printf ( ""\\033&l2A"" )"	382:14:10700:10718	9358899	16	True				
ANR	9359976	CallExpression	"printf ( ""\\033&l2A"" )"		9358899	0					
ANR	9359977	Callee	printf		9358899	0					
ANR	9359978	Identifier	printf		9358899	0					
ANR	9359979	ArgumentList	"""\\033&l2A"""		9358899	1					
ANR	9359980	Argument	"""\\033&l2A"""		9358899	0					
ANR	9359981	PrimaryExpression	"""\\033&l2A"""		9358899	0					
ANR	9359982	BreakStatement	break ;	383:7:10747:10752	9358899	17	True				
ANR	9359983	Label	case 842 :	385:3:10758:10767	9358899	18	True				
ANR	9359984	ExpressionStatement	"printf ( ""\\033&l26A"" )"	386:14:10792:10811	9358899	19	True				
ANR	9359985	CallExpression	"printf ( ""\\033&l26A"" )"		9358899	0					
ANR	9359986	Callee	printf		9358899	0					
ANR	9359987	Identifier	printf		9358899	0					
ANR	9359988	ArgumentList	"""\\033&l26A"""		9358899	1					
ANR	9359989	Argument	"""\\033&l26A"""		9358899	0					
ANR	9359990	PrimaryExpression	"""\\033&l26A"""		9358899	0					
ANR	9359991	BreakStatement	break ;	387:7:10840:10845	9358899	20	True				
ANR	9359992	Label	case 1008 :	389:3:10851:10861	9358899	21	True				
ANR	9359993	ExpressionStatement	"printf ( ""\\033&l3A"" )"	390:14:10889:10907	9358899	22	True				
ANR	9359994	CallExpression	"printf ( ""\\033&l3A"" )"		9358899	0					
ANR	9359995	Callee	printf		9358899	0					
ANR	9359996	Identifier	printf		9358899	0					
ANR	9359997	ArgumentList	"""\\033&l3A"""		9358899	1					
ANR	9359998	Argument	"""\\033&l3A"""		9358899	0					
ANR	9359999	PrimaryExpression	"""\\033&l3A"""		9358899	0					
ANR	9360000	BreakStatement	break ;	391:7:10936:10941	9358899	23	True				
ANR	9360001	Label	default :	393:10:10954:10962	9358899	24	True				
ANR	9360002	Identifier	default		9358899	0					
ANR	9360003	ExpressionStatement	"printf ( ""\\033!f%dZ"" , header -> PageSize [ 1 ] * 300 / 72 )"	394:7:10989:11040	9358899	25	True				
ANR	9360004	CallExpression	"printf ( ""\\033!f%dZ"" , header -> PageSize [ 1 ] * 300 / 72 )"		9358899	0					
ANR	9360005	Callee	printf		9358899	0					
ANR	9360006	Identifier	printf		9358899	0					
ANR	9360007	ArgumentList	"""\\033!f%dZ"""		9358899	1					
ANR	9360008	Argument	"""\\033!f%dZ"""		9358899	0					
ANR	9360009	PrimaryExpression	"""\\033!f%dZ"""		9358899	0					
ANR	9360010	Argument	header -> PageSize [ 1 ] * 300 / 72		9358899	1					
ANR	9360011	MultiplicativeExpression	header -> PageSize [ 1 ] * 300 / 72		9358899	0		*			
ANR	9360012	ArrayIndexing	header -> PageSize [ 1 ]		9358899	0					
ANR	9360013	PtrMemberAccess	header -> PageSize		9358899	0					
ANR	9360014	Identifier	header		9358899	0					
ANR	9360015	Identifier	PageSize		9358899	1					
ANR	9360016	PrimaryExpression	1		9358899	1					
ANR	9360017	MultiplicativeExpression	300 / 72		9358899	1		/			
ANR	9360018	PrimaryExpression	300		9358899	0					
ANR	9360019	PrimaryExpression	72		9358899	1					
ANR	9360020	BreakStatement	break ;	395:7:11049:11054	9358899	26	True				
ANR	9360021	ExpressionStatement	"printf ( ""\\033&l%dP"" , header -> PageSize [ 1 ] / 12 )"	398:1:11061:11144	9358899	36	True				
ANR	9360022	CallExpression	"printf ( ""\\033&l%dP"" , header -> PageSize [ 1 ] / 12 )"		9358899	0					
ANR	9360023	Callee	printf		9358899	0					
ANR	9360024	Identifier	printf		9358899	0					
ANR	9360025	ArgumentList	"""\\033&l%dP"""		9358899	1					
ANR	9360026	Argument	"""\\033&l%dP"""		9358899	0					
ANR	9360027	PrimaryExpression	"""\\033&l%dP"""		9358899	0					
ANR	9360028	Argument	header -> PageSize [ 1 ] / 12		9358899	1					
ANR	9360029	MultiplicativeExpression	header -> PageSize [ 1 ] / 12		9358899	0		/			
ANR	9360030	ArrayIndexing	header -> PageSize [ 1 ]		9358899	0					
ANR	9360031	PtrMemberAccess	header -> PageSize		9358899	0					
ANR	9360032	Identifier	header		9358899	0					
ANR	9360033	Identifier	PageSize		9358899	1					
ANR	9360034	PrimaryExpression	1		9358899	1					
ANR	9360035	PrimaryExpression	12		9358899	1					
ANR	9360036	ExpressionStatement	"printf ( ""\\033&l0E"" )"	400:1:11147:11165	9358899	37	True				
ANR	9360037	CallExpression	"printf ( ""\\033&l0E"" )"		9358899	0					
ANR	9360038	Callee	printf		9358899	0					
ANR	9360039	Identifier	printf		9358899	0					
ANR	9360040	ArgumentList	"""\\033&l0E"""		9358899	1					
ANR	9360041	Argument	"""\\033&l0E"""		9358899	0					
ANR	9360042	PrimaryExpression	"""\\033&l0E"""		9358899	0					
ANR	9360043	ExpressionStatement	"printf ( ""\\033&l%dX"" , header -> NumCopies )"	401:8:11202:11240	9358899	38	True				
ANR	9360044	CallExpression	"printf ( ""\\033&l%dX"" , header -> NumCopies )"		9358899	0					
ANR	9360045	Callee	printf		9358899	0					
ANR	9360046	Identifier	printf		9358899	0					
ANR	9360047	ArgumentList	"""\\033&l%dX"""		9358899	1					
ANR	9360048	Argument	"""\\033&l%dX"""		9358899	0					
ANR	9360049	PrimaryExpression	"""\\033&l%dX"""		9358899	0					
ANR	9360050	Argument	header -> NumCopies		9358899	1					
ANR	9360051	PtrMemberAccess	header -> NumCopies		9358899	0					
ANR	9360052	Identifier	header		9358899	0					
ANR	9360053	Identifier	NumCopies		9358899	1					
ANR	9360054	ExpressionStatement	"printf ( ""\\033&l0L"" )"	403:8:11279:11297	9358899	39	True				
ANR	9360055	CallExpression	"printf ( ""\\033&l0L"" )"		9358899	0					
ANR	9360056	Callee	printf		9358899	0					
ANR	9360057	Identifier	printf		9358899	0					
ANR	9360058	ArgumentList	"""\\033&l0L"""		9358899	1					
ANR	9360059	Argument	"""\\033&l0L"""		9358899	0					
ANR	9360060	PrimaryExpression	"""\\033&l0L"""		9358899	0					
ANR	9360061	IfStatement	if ( Page == 1 )		9358899	40					
ANR	9360062	Condition	Page == 1	409:5:11381:11389	9358899	0	True				
ANR	9360063	EqualityExpression	Page == 1		9358899	0		==			
ANR	9360064	Identifier	Page		9358899	0					
ANR	9360065	PrimaryExpression	1		9358899	1					
ANR	9360066	CompoundStatement		241:1:7213:7213	9358899	1					
ANR	9360067	IfStatement	if ( header -> cupsRowFeed )		9358899	0					
ANR	9360068	Condition	header -> cupsRowFeed	411:14:11409:11427	9358899	0	True				
ANR	9360069	PtrMemberAccess	header -> cupsRowFeed		9358899	0					
ANR	9360070	Identifier	header		9358899	0					
ANR	9360071	Identifier	cupsRowFeed		9358899	1					
ANR	9360072	ExpressionStatement	"printf ( ""\\033!p%dS"" , header -> cupsRowFeed )"	412:5:11453:11493	9358899	1	True				
ANR	9360073	CallExpression	"printf ( ""\\033!p%dS"" , header -> cupsRowFeed )"		9358899	0					
ANR	9360074	Callee	printf		9358899	0					
ANR	9360075	Identifier	printf		9358899	0					
ANR	9360076	ArgumentList	"""\\033!p%dS"""		9358899	1					
ANR	9360077	Argument	"""\\033!p%dS"""		9358899	0					
ANR	9360078	PrimaryExpression	"""\\033!p%dS"""		9358899	0					
ANR	9360079	Argument	header -> cupsRowFeed		9358899	1					
ANR	9360080	PtrMemberAccess	header -> cupsRowFeed		9358899	0					
ANR	9360081	Identifier	header		9358899	0					
ANR	9360082	Identifier	cupsRowFeed		9358899	1					
ANR	9360083	IfStatement	if ( header -> cupsCompression != ~0 )		9358899	1					
ANR	9360084	Condition	header -> cupsCompression != ~0	414:14:11510:11538	9358899	0	True				
ANR	9360085	EqualityExpression	header -> cupsCompression != ~0		9358899	0		!=			
ANR	9360086	PtrMemberAccess	header -> cupsCompression		9358899	0					
ANR	9360087	Identifier	header		9358899	0					
ANR	9360088	Identifier	cupsCompression		9358899	1					
ANR	9360089	Identifier	~0		9358899	1					
ANR	9360090	ExpressionStatement	"printf ( ""\\033&d%dA"" , 30 * header -> cupsCompression / 100 - 15 )"	416:5:11574:11634	9358899	1	True				
ANR	9360091	CallExpression	"printf ( ""\\033&d%dA"" , 30 * header -> cupsCompression / 100 - 15 )"		9358899	0					
ANR	9360092	Callee	printf		9358899	0					
ANR	9360093	Identifier	printf		9358899	0					
ANR	9360094	ArgumentList	"""\\033&d%dA"""		9358899	1					
ANR	9360095	Argument	"""\\033&d%dA"""		9358899	0					
ANR	9360096	PrimaryExpression	"""\\033&d%dA"""		9358899	0					
ANR	9360097	Argument	30 * header -> cupsCompression / 100 - 15		9358899	1					
ANR	9360098	AdditiveExpression	30 * header -> cupsCompression / 100 - 15		9358899	0		-			
ANR	9360099	MultiplicativeExpression	30 * header -> cupsCompression / 100		9358899	0		*			
ANR	9360100	PrimaryExpression	30		9358899	0					
ANR	9360101	MultiplicativeExpression	header -> cupsCompression / 100		9358899	1		/			
ANR	9360102	PtrMemberAccess	header -> cupsCompression		9358899	0					
ANR	9360103	Identifier	header		9358899	0					
ANR	9360104	Identifier	cupsCompression		9358899	1					
ANR	9360105	PrimaryExpression	100		9358899	1					
ANR	9360106	PrimaryExpression	15		9358899	1					
ANR	9360107	IfStatement	"if ( ( choice = ppdFindMarkedChoice ( ppd , ""inPrintMode"" ) ) != NULL )"		9358899	2					
ANR	9360108	Condition	"( choice = ppdFindMarkedChoice ( ppd , ""inPrintMode"" ) ) != NULL"	418:7:11644:11701	9358899	0	True				
ANR	9360109	EqualityExpression	"( choice = ppdFindMarkedChoice ( ppd , ""inPrintMode"" ) ) != NULL"		9358899	0		!=			
ANR	9360110	AssignmentExpression	"choice = ppdFindMarkedChoice ( ppd , ""inPrintMode"" )"		9358899	0		=			
ANR	9360111	Identifier	choice		9358899	0					
ANR	9360112	CallExpression	"ppdFindMarkedChoice ( ppd , ""inPrintMode"" )"		9358899	1					
ANR	9360113	Callee	ppdFindMarkedChoice		9358899	0					
ANR	9360114	Identifier	ppdFindMarkedChoice		9358899	0					
ANR	9360115	ArgumentList	ppd		9358899	1					
ANR	9360116	Argument	ppd		9358899	0					
ANR	9360117	Identifier	ppd		9358899	0					
ANR	9360118	Argument	"""inPrintMode"""		9358899	1					
ANR	9360119	PrimaryExpression	"""inPrintMode"""		9358899	0					
ANR	9360120	Identifier	NULL		9358899	1					
ANR	9360121	CompoundStatement		250:3:7527:7527	9358899	1					
ANR	9360122	IfStatement	"if ( ! strcmp ( choice -> choice , ""Standard"" ) )"		9358899	0					
ANR	9360123	Condition	"! strcmp ( choice -> choice , ""Standard"" )"	420:9:11718:11752	9358899	0	True				
ANR	9360124	UnaryOperationExpression	"! strcmp ( choice -> choice , ""Standard"" )"		9358899	0					
ANR	9360125	UnaryOperator	!		9358899	0					
ANR	9360126	CallExpression	"strcmp ( choice -> choice , ""Standard"" )"		9358899	1					
ANR	9360127	Callee	strcmp		9358899	0					
ANR	9360128	Identifier	strcmp		9358899	0					
ANR	9360129	ArgumentList	choice -> choice		9358899	1					
ANR	9360130	Argument	choice -> choice		9358899	0					
ANR	9360131	PtrMemberAccess	choice -> choice		9358899	0					
ANR	9360132	Identifier	choice		9358899	0					
ANR	9360133	Identifier	choice		9358899	1					
ANR	9360134	Argument	"""Standard"""		9358899	1					
ANR	9360135	PrimaryExpression	"""Standard"""		9358899	0					
ANR	9360136	ExpressionStatement	"fputs ( ""\\033!p0M"" , stdout )"	421:7:11762:11787	9358899	1	True				
ANR	9360137	CallExpression	"fputs ( ""\\033!p0M"" , stdout )"		9358899	0					
ANR	9360138	Callee	fputs		9358899	0					
ANR	9360139	Identifier	fputs		9358899	0					
ANR	9360140	ArgumentList	"""\\033!p0M"""		9358899	1					
ANR	9360141	Argument	"""\\033!p0M"""		9358899	0					
ANR	9360142	PrimaryExpression	"""\\033!p0M"""		9358899	0					
ANR	9360143	Argument	stdout		9358899	1					
ANR	9360144	Identifier	stdout		9358899	0					
ANR	9360145	ElseStatement	else		9358899	0					
ANR	9360146	IfStatement	"if ( ! strcmp ( choice -> choice , ""Tear"" ) )"		9358899	0					
ANR	9360147	Condition	"! strcmp ( choice -> choice , ""Tear"" )"	422:14:11803:11833	9358899	0	True				
ANR	9360148	UnaryOperationExpression	"! strcmp ( choice -> choice , ""Tear"" )"		9358899	0					
ANR	9360149	UnaryOperator	!		9358899	0					
ANR	9360150	CallExpression	"strcmp ( choice -> choice , ""Tear"" )"		9358899	1					
ANR	9360151	Callee	strcmp		9358899	0					
ANR	9360152	Identifier	strcmp		9358899	0					
ANR	9360153	ArgumentList	choice -> choice		9358899	1					
ANR	9360154	Argument	choice -> choice		9358899	0					
ANR	9360155	PtrMemberAccess	choice -> choice		9358899	0					
ANR	9360156	Identifier	choice		9358899	0					
ANR	9360157	Identifier	choice		9358899	1					
ANR	9360158	Argument	"""Tear"""		9358899	1					
ANR	9360159	PrimaryExpression	"""Tear"""		9358899	0					
ANR	9360160	CompoundStatement		254:5:7661:7661	9358899	1					
ANR	9360161	ExpressionStatement	"fputs ( ""\\033!p1M"" , stdout )"	424:7:11850:11875	9358899	0	True				
ANR	9360162	CallExpression	"fputs ( ""\\033!p1M"" , stdout )"		9358899	0					
ANR	9360163	Callee	fputs		9358899	0					
ANR	9360164	Identifier	fputs		9358899	0					
ANR	9360165	ArgumentList	"""\\033!p1M"""		9358899	1					
ANR	9360166	Argument	"""\\033!p1M"""		9358899	0					
ANR	9360167	PrimaryExpression	"""\\033!p1M"""		9358899	0					
ANR	9360168	Argument	stdout		9358899	1					
ANR	9360169	Identifier	stdout		9358899	0					
ANR	9360170	IfStatement	if ( header -> cupsRowCount )		9358899	1					
ANR	9360171	Condition	header -> cupsRowCount	426:18:11896:11915	9358899	0	True				
ANR	9360172	PtrMemberAccess	header -> cupsRowCount		9358899	0					
ANR	9360173	Identifier	header		9358899	0					
ANR	9360174	Identifier	cupsRowCount		9358899	1					
ANR	9360175	ExpressionStatement	"printf ( ""\\033!n%dT"" , header -> cupsRowCount )"	427:2:11941:11982	9358899	1	True				
ANR	9360176	CallExpression	"printf ( ""\\033!n%dT"" , header -> cupsRowCount )"		9358899	0					
ANR	9360177	Callee	printf		9358899	0					
ANR	9360178	Identifier	printf		9358899	0					
ANR	9360179	ArgumentList	"""\\033!n%dT"""		9358899	1					
ANR	9360180	Argument	"""\\033!n%dT"""		9358899	0					
ANR	9360181	PrimaryExpression	"""\\033!n%dT"""		9358899	0					
ANR	9360182	Argument	header -> cupsRowCount		9358899	1					
ANR	9360183	PtrMemberAccess	header -> cupsRowCount		9358899	0					
ANR	9360184	Identifier	header		9358899	0					
ANR	9360185	Identifier	cupsRowCount		9358899	1					
ANR	9360186	ElseStatement	else		9358899	0					
ANR	9360187	CompoundStatement		261:5:7833:7833	9358899	0					
ANR	9360188	ExpressionStatement	"fputs ( ""\\033!p2M"" , stdout )"	431:7:12022:12047	9358899	0	True				
ANR	9360189	CallExpression	"fputs ( ""\\033!p2M"" , stdout )"		9358899	0					
ANR	9360190	Callee	fputs		9358899	0					
ANR	9360191	Identifier	fputs		9358899	0					
ANR	9360192	ArgumentList	"""\\033!p2M"""		9358899	1					
ANR	9360193	Argument	"""\\033!p2M"""		9358899	0					
ANR	9360194	PrimaryExpression	"""\\033!p2M"""		9358899	0					
ANR	9360195	Argument	stdout		9358899	1					
ANR	9360196	Identifier	stdout		9358899	0					
ANR	9360197	IfStatement	if ( header -> cupsRowStep )		9358899	1					
ANR	9360198	Condition	header -> cupsRowStep	433:18:12068:12086	9358899	0	True				
ANR	9360199	PtrMemberAccess	header -> cupsRowStep		9358899	0					
ANR	9360200	Identifier	header		9358899	0					
ANR	9360201	Identifier	cupsRowStep		9358899	1					
ANR	9360202	ExpressionStatement	"printf ( ""\\033!n%dC"" , header -> cupsRowStep )"	434:2:12111:12151	9358899	1	True				
ANR	9360203	CallExpression	"printf ( ""\\033!n%dC"" , header -> cupsRowStep )"		9358899	0					
ANR	9360204	Callee	printf		9358899	0					
ANR	9360205	Identifier	printf		9358899	0					
ANR	9360206	ArgumentList	"""\\033!n%dC"""		9358899	1					
ANR	9360207	Argument	"""\\033!n%dC"""		9358899	0					
ANR	9360208	PrimaryExpression	"""\\033!n%dC"""		9358899	0					
ANR	9360209	Argument	header -> cupsRowStep		9358899	1					
ANR	9360210	PtrMemberAccess	header -> cupsRowStep		9358899	0					
ANR	9360211	Identifier	header		9358899	0					
ANR	9360212	Identifier	cupsRowStep		9358899	1					
ANR	9360213	ExpressionStatement	"printf ( ""\\033*t%dR"" , header -> HWResolution [ 0 ] )"	443:1:12220:12264	9358899	41	True				
ANR	9360214	CallExpression	"printf ( ""\\033*t%dR"" , header -> HWResolution [ 0 ] )"		9358899	0					
ANR	9360215	Callee	printf		9358899	0					
ANR	9360216	Identifier	printf		9358899	0					
ANR	9360217	ArgumentList	"""\\033*t%dR"""		9358899	1					
ANR	9360218	Argument	"""\\033*t%dR"""		9358899	0					
ANR	9360219	PrimaryExpression	"""\\033*t%dR"""		9358899	0					
ANR	9360220	Argument	header -> HWResolution [ 0 ]		9358899	1					
ANR	9360221	ArrayIndexing	header -> HWResolution [ 0 ]		9358899	0					
ANR	9360222	PtrMemberAccess	header -> HWResolution		9358899	0					
ANR	9360223	Identifier	header		9358899	0					
ANR	9360224	Identifier	HWResolution		9358899	1					
ANR	9360225	PrimaryExpression	0		9358899	1					
ANR	9360226	ExpressionStatement	"printf ( ""\\033*r%dS"" , header -> cupsWidth )"	446:1:12294:12332	9358899	42	True				
ANR	9360227	CallExpression	"printf ( ""\\033*r%dS"" , header -> cupsWidth )"		9358899	0					
ANR	9360228	Callee	printf		9358899	0					
ANR	9360229	Identifier	printf		9358899	0					
ANR	9360230	ArgumentList	"""\\033*r%dS"""		9358899	1					
ANR	9360231	Argument	"""\\033*r%dS"""		9358899	0					
ANR	9360232	PrimaryExpression	"""\\033*r%dS"""		9358899	0					
ANR	9360233	Argument	header -> cupsWidth		9358899	1					
ANR	9360234	PtrMemberAccess	header -> cupsWidth		9358899	0					
ANR	9360235	Identifier	header		9358899	0					
ANR	9360236	Identifier	cupsWidth		9358899	1					
ANR	9360237	ExpressionStatement	"printf ( ""\\033*r%dT"" , header -> cupsHeight )"	448:1:12356:12395	9358899	43	True				
ANR	9360238	CallExpression	"printf ( ""\\033*r%dT"" , header -> cupsHeight )"		9358899	0					
ANR	9360239	Callee	printf		9358899	0					
ANR	9360240	Identifier	printf		9358899	0					
ANR	9360241	ArgumentList	"""\\033*r%dT"""		9358899	1					
ANR	9360242	Argument	"""\\033*r%dT"""		9358899	0					
ANR	9360243	PrimaryExpression	"""\\033*r%dT"""		9358899	0					
ANR	9360244	Argument	header -> cupsHeight		9358899	1					
ANR	9360245	PtrMemberAccess	header -> cupsHeight		9358899	0					
ANR	9360246	Identifier	header		9358899	0					
ANR	9360247	Identifier	cupsHeight		9358899	1					
ANR	9360248	ExpressionStatement	"printf ( ""\\033&a0H"" )"	451:1:12421:12439	9358899	44	True				
ANR	9360249	CallExpression	"printf ( ""\\033&a0H"" )"		9358899	0					
ANR	9360250	Callee	printf		9358899	0					
ANR	9360251	Identifier	printf		9358899	0					
ANR	9360252	ArgumentList	"""\\033&a0H"""		9358899	1					
ANR	9360253	Argument	"""\\033&a0H"""		9358899	0					
ANR	9360254	PrimaryExpression	"""\\033&a0H"""		9358899	0					
ANR	9360255	ExpressionStatement	"printf ( ""\\033&a0V"" )"	452:1:12473:12491	9358899	45	True				
ANR	9360256	CallExpression	"printf ( ""\\033&a0V"" )"		9358899	0					
ANR	9360257	Callee	printf		9358899	0					
ANR	9360258	Identifier	printf		9358899	0					
ANR	9360259	ArgumentList	"""\\033&a0V"""		9358899	1					
ANR	9360260	Argument	"""\\033&a0V"""		9358899	0					
ANR	9360261	PrimaryExpression	"""\\033&a0V"""		9358899	0					
ANR	9360262	ExpressionStatement	"printf ( ""\\033*r1A"" )"	453:8:12530:12548	9358899	46	True				
ANR	9360263	CallExpression	"printf ( ""\\033*r1A"" )"		9358899	0					
ANR	9360264	Callee	printf		9358899	0					
ANR	9360265	Identifier	printf		9358899	0					
ANR	9360266	ArgumentList	"""\\033*r1A"""		9358899	1					
ANR	9360267	Argument	"""\\033*r1A"""		9358899	0					
ANR	9360268	PrimaryExpression	"""\\033*r1A"""		9358899	0					
ANR	9360269	ExpressionStatement	"printf ( ""\\033*b3M"" )"	454:8:12580:12598	9358899	47	True				
ANR	9360270	CallExpression	"printf ( ""\\033*b3M"" )"		9358899	0					
ANR	9360271	Callee	printf		9358899	0					
ANR	9360272	Identifier	printf		9358899	0					
ANR	9360273	ArgumentList	"""\\033*b3M"""		9358899	1					
ANR	9360274	Argument	"""\\033*b3M"""		9358899	0					
ANR	9360275	PrimaryExpression	"""\\033*b3M"""		9358899	0					
ANR	9360276	ExpressionStatement	CompBuffer = malloc ( 2 * header -> cupsBytesPerLine + 1 )	460:1:12682:12735	9358899	48	True				
ANR	9360277	AssignmentExpression	CompBuffer = malloc ( 2 * header -> cupsBytesPerLine + 1 )		9358899	0		=			
ANR	9360278	Identifier	CompBuffer		9358899	0					
ANR	9360279	CallExpression	malloc ( 2 * header -> cupsBytesPerLine + 1 )		9358899	1					
ANR	9360280	Callee	malloc		9358899	0					
ANR	9360281	Identifier	malloc		9358899	0					
ANR	9360282	ArgumentList	2 * header -> cupsBytesPerLine + 1		9358899	1					
ANR	9360283	Argument	2 * header -> cupsBytesPerLine + 1		9358899	0					
ANR	9360284	AdditiveExpression	2 * header -> cupsBytesPerLine + 1		9358899	0		+			
ANR	9360285	MultiplicativeExpression	2 * header -> cupsBytesPerLine		9358899	0		*			
ANR	9360286	PrimaryExpression	2		9358899	0					
ANR	9360287	PtrMemberAccess	header -> cupsBytesPerLine		9358899	1					
ANR	9360288	Identifier	header		9358899	0					
ANR	9360289	Identifier	cupsBytesPerLine		9358899	1					
ANR	9360290	PrimaryExpression	1		9358899	1					
ANR	9360291	ExpressionStatement	LastBuffer = malloc ( header -> cupsBytesPerLine )	461:1:12738:12783	9358899	49	True				
ANR	9360292	AssignmentExpression	LastBuffer = malloc ( header -> cupsBytesPerLine )		9358899	0		=			
ANR	9360293	Identifier	LastBuffer		9358899	0					
ANR	9360294	CallExpression	malloc ( header -> cupsBytesPerLine )		9358899	1					
ANR	9360295	Callee	malloc		9358899	0					
ANR	9360296	Identifier	malloc		9358899	0					
ANR	9360297	ArgumentList	header -> cupsBytesPerLine		9358899	1					
ANR	9360298	Argument	header -> cupsBytesPerLine		9358899	0					
ANR	9360299	PtrMemberAccess	header -> cupsBytesPerLine		9358899	0					
ANR	9360300	Identifier	header		9358899	0					
ANR	9360301	Identifier	cupsBytesPerLine		9358899	1					
ANR	9360302	ExpressionStatement	LastSet = 0	462:1:12786:12800	9358899	50	True				
ANR	9360303	AssignmentExpression	LastSet = 0		9358899	0		=			
ANR	9360304	Identifier	LastSet		9358899	0					
ANR	9360305	PrimaryExpression	0		9358899	1					
ANR	9360306	BreakStatement	break ;	463:8:12810:12815	9358899	51	True				
ANR	9360307	ExpressionStatement	Buffer = malloc ( header -> cupsBytesPerLine )	470:2:12880:12921	9358899	43	True				
ANR	9360308	AssignmentExpression	Buffer = malloc ( header -> cupsBytesPerLine )		9358899	0		=			
ANR	9360309	Identifier	Buffer		9358899	0					
ANR	9360310	CallExpression	malloc ( header -> cupsBytesPerLine )		9358899	1					
ANR	9360311	Callee	malloc		9358899	0					
ANR	9360312	Identifier	malloc		9358899	0					
ANR	9360313	ArgumentList	header -> cupsBytesPerLine		9358899	1					
ANR	9360314	Argument	header -> cupsBytesPerLine		9358899	0					
ANR	9360315	PtrMemberAccess	header -> cupsBytesPerLine		9358899	0					
ANR	9360316	Identifier	header		9358899	0					
ANR	9360317	Identifier	cupsBytesPerLine		9358899	1					
ANR	9360318	ExpressionStatement	Feed = 0	471:2:12925:12935	9358899	44	True				
ANR	9360319	AssignmentExpression	Feed = 0		9358899	0		=			
ANR	9360320	Identifier	Feed		9358899	0					
ANR	9360321	PrimaryExpression	0		9358899	1					
ANR	9360322	ReturnType	void		9358899	1					
ANR	9360323	Identifier	StartPage		9358899	2					
ANR	9360324	ParameterList	"ppd_file_t * ppd , cups_page_header2_t * header"		9358899	3					
ANR	9360325	Parameter	ppd_file_t * ppd	168:10:4074:4096	9358899	0	True				
ANR	9360326	ParameterType	ppd_file_t *		9358899	0					
ANR	9360327	Identifier	ppd		9358899	1					
ANR	9360328	Parameter	cups_page_header2_t * header	169:10:4128:4154	9358899	1	True				
ANR	9360329	ParameterType	cups_page_header2_t *		9358899	0					
ANR	9360330	Identifier	header		9358899	1					
ANR	9360331	CFGEntryNode	ENTRY		9358899		True				
ANR	9360332	CFGExitNode	EXIT		9358899		True				
ANR	9360333	Symbol	stdout		9358899						
ANR	9360334	Symbol	header -> MediaType		9358899						
ANR	9360335	Symbol	Page		9358899						
ANR	9360336	Symbol	header -> cupsHeight		9358899						
ANR	9360337	Symbol	header -> MediaClass		9358899						
ANR	9360338	Symbol	header -> Separations		9358899						
ANR	9360339	Symbol	header -> NegativePrint		9358899						
ANR	9360340	Symbol	header -> Tumble		9358899						
ANR	9360341	Symbol	Feed		9358899						
ANR	9360342	Symbol	ModelNumber		9358899						
ANR	9360343	Symbol	strcmp		9358899						
ANR	9360344	Symbol	val		9358899						
ANR	9360345	Symbol	Buffer		9358899						
ANR	9360346	Symbol	header -> Collate		9358899						
ANR	9360347	Symbol	NULL		9358899						
ANR	9360348	Symbol	header -> cupsWidth		9358899						
ANR	9360349	Symbol	LastSet		9358899						
ANR	9360350	Symbol	header -> cupsRowFeed		9358899						
ANR	9360351	Symbol	stderr		9358899						
ANR	9360352	Symbol	* header		9358899						
ANR	9360353	Symbol	header -> cupsCompression		9358899						
ANR	9360354	Symbol	* header -> Margins		9358899						
ANR	9360355	Symbol	header		9358899						
ANR	9360356	Symbol	header -> CutMedia		9358899						
ANR	9360357	Symbol	header -> OutputFaceUp		9358899						
ANR	9360358	Symbol	header -> PageSize		9358899						
ANR	9360359	Symbol	header -> cupsBitsPerColor		9358899						
ANR	9360360	Symbol	header -> cupsMediaType		9358899						
ANR	9360361	Symbol	header -> AdvanceDistance		9358899						
ANR	9360362	Symbol	header -> MediaPosition		9358899						
ANR	9360363	Symbol	header -> cupsRowCount		9358899						
ANR	9360364	Symbol	* choice		9358899						
ANR	9360365	Symbol	* header -> ImagingBoundingBox		9358899						
ANR	9360366	Symbol	header -> cupsRowStep		9358899						
ANR	9360367	Symbol	header -> MediaWeight		9358899						
ANR	9360368	Symbol	ppdFindMarkedChoice		9358899						
ANR	9360369	Symbol	header -> LeadingEdge		9358899						
ANR	9360370	Symbol	* header -> PageSize		9358899						
ANR	9360371	Symbol	header -> Orientation		9358899						
ANR	9360372	Symbol	header -> HWResolution		9358899						
ANR	9360373	Symbol	header -> NumCopies		9358899						
ANR	9360374	Symbol	header -> cupsBitsPerPixel		9358899						
ANR	9360375	Symbol	header -> cupsBytesPerLine		9358899						
ANR	9360376	Symbol	header -> Jog		9358899						
ANR	9360377	Symbol	LastBuffer		9358899						
ANR	9360378	Symbol	malloc		9358899						
ANR	9360379	Symbol	ppd		9358899						
ANR	9360380	Symbol	header -> MediaColor		9358899						
ANR	9360381	Symbol	header -> cupsColorSpace		9358899						
ANR	9360382	Symbol	header -> cupsColorOrder		9358899						
ANR	9360383	Symbol	atof		9358899						
ANR	9360384	Symbol	length		9358899						
ANR	9360385	Symbol	header -> TraySwitch		9358899						
ANR	9360386	Symbol	header -> OutputType		9358899						
ANR	9360387	Symbol	header -> MirrorPrint		9358899						
ANR	9360388	Symbol	header -> AdvanceMedia		9358899						
ANR	9360389	Symbol	CompBuffer		9358899						
ANR	9360390	Symbol	header -> Duplex		9358899						
ANR	9360391	Symbol	* * header		9358899						
ANR	9360392	Symbol	* header -> HWResolution		9358899						
ANR	9360393	Symbol	header -> ManualFeed		9358899						
ANR	9360394	Symbol	~0		9358899						
ANR	9360395	Symbol	choice -> choice		9358899						
ANR	9360396	Symbol	~7		9358899						
ANR	9360397	Symbol	header -> ImagingBoundingBox		9358899						
ANR	9360398	Symbol	header -> InsertSheet		9358899						
ANR	9360399	Symbol	choice		9358899						
ANR	9360400	Symbol	header -> Margins		9358899						
ANR	9360401	Function	EndPage	479:0:12993:17449							
ANR	9360402	FunctionDef	"EndPage (ppd_file_t * ppd , cups_page_header2_t * header)"		9360401	0					
ANR	9360403	CompoundStatement		482:0:13102:17449	9360401	0					
ANR	9360404	IdentifierDeclStatement	int val ;	483:2:13106:13114	9360401	0	True				
ANR	9360405	IdentifierDecl	val		9360401	0					
ANR	9360406	IdentifierDeclType	int		9360401	0					
ANR	9360407	Identifier	val		9360401	1					
ANR	9360408	IdentifierDeclStatement	ppd_choice_t * choice ;	484:2:13139:13159	9360401	1	True				
ANR	9360409	IdentifierDecl	* choice		9360401	0					
ANR	9360410	IdentifierDeclType	ppd_choice_t *		9360401	0					
ANR	9360411	Identifier	choice		9360401	1					
ANR	9360412	SwitchStatement	switch ( ModelNumber )		9360401	2					
ANR	9360413	Condition	ModelNumber	487:10:13194:13204	9360401	0	True				
ANR	9360414	Identifier	ModelNumber		9360401	0					
ANR	9360415	CompoundStatement		7:2:106:106	9360401	1					
ANR	9360416	Label	case DYMO_3x0 :	489:4:13215:13229	9360401	0	True				
ANR	9360417	Identifier	DYMO_3x0		9360401	0					
ANR	9360418	ExpressionStatement	"fputs ( ""\\033E"" , stdout )"	494:1:13276:13298	9360401	1	True				
ANR	9360419	CallExpression	"fputs ( ""\\033E"" , stdout )"		9360401	0					
ANR	9360420	Callee	fputs		9360401	0					
ANR	9360421	Identifier	fputs		9360401	0					
ANR	9360422	ArgumentList	"""\\033E"""		9360401	1					
ANR	9360423	Argument	"""\\033E"""		9360401	0					
ANR	9360424	PrimaryExpression	"""\\033E"""		9360401	0					
ANR	9360425	Argument	stdout		9360401	1					
ANR	9360426	Identifier	stdout		9360401	0					
ANR	9360427	BreakStatement	break ;	495:1:13301:13306	9360401	2	True				
ANR	9360428	Label	case ZEBRA_EPL_LINE :	497:4:13313:13333	9360401	3	True				
ANR	9360429	Identifier	ZEBRA_EPL_LINE		9360401	0					
ANR	9360430	ExpressionStatement	"fputs ( ""\\033E\\014"" , stdout )"	502:8:13408:13434	9360401	4	True				
ANR	9360431	CallExpression	"fputs ( ""\\033E\\014"" , stdout )"		9360401	0					
ANR	9360432	Callee	fputs		9360401	0					
ANR	9360433	Identifier	fputs		9360401	0					
ANR	9360434	ArgumentList	"""\\033E\\014"""		9360401	1					
ANR	9360435	Argument	"""\\033E\\014"""		9360401	0					
ANR	9360436	PrimaryExpression	"""\\033E\\014"""		9360401	0					
ANR	9360437	Argument	stdout		9360401	1					
ANR	9360438	Identifier	stdout		9360401	0					
ANR	9360439	BreakStatement	break ;	503:1:13437:13442	9360401	5	True				
ANR	9360440	Label	case ZEBRA_EPL_PAGE :	505:4:13449:13469	9360401	6	True				
ANR	9360441	Identifier	ZEBRA_EPL_PAGE		9360401	0					
ANR	9360442	ExpressionStatement	"puts ( ""P1"" )"	510:8:13523:13533	9360401	7	True				
ANR	9360443	CallExpression	"puts ( ""P1"" )"		9360401	0					
ANR	9360444	Callee	puts		9360401	0					
ANR	9360445	Identifier	puts		9360401	0					
ANR	9360446	ArgumentList	"""P1"""		9360401	1					
ANR	9360447	Argument	"""P1"""		9360401	0					
ANR	9360448	PrimaryExpression	"""P1"""		9360401	0					
ANR	9360449	BreakStatement	break ;	511:1:13536:13541	9360401	8	True				
ANR	9360450	Label	case ZEBRA_ZPL :	513:4:13548:13563	9360401	9	True				
ANR	9360451	Identifier	ZEBRA_ZPL		9360401	0					
ANR	9360452	IfStatement	if ( Canceled )		9360401	10					
ANR	9360453	Condition	Canceled	514:12:13577:13584	9360401	0	True				
ANR	9360454	Identifier	Canceled		9360401	0					
ANR	9360455	CompoundStatement		34:1:485:485	9360401	1					
ANR	9360456	ExpressionStatement	"puts ( ""~DN"" )"	520:3:13636:13647	9360401	0	True				
ANR	9360457	CallExpression	"puts ( ""~DN"" )"		9360401	0					
ANR	9360458	Callee	puts		9360401	0					
ANR	9360459	Identifier	puts		9360401	0					
ANR	9360460	ArgumentList	"""~DN"""		9360401	1					
ANR	9360461	Argument	"""~DN"""		9360401	0					
ANR	9360462	PrimaryExpression	"""~DN"""		9360401	0					
ANR	9360463	BreakStatement	break ;	521:3:13652:13657	9360401	1	True				
ANR	9360464	ExpressionStatement	"puts ( ""^XA"" )"	528:8:13711:13722	9360401	11	True				
ANR	9360465	CallExpression	"puts ( ""^XA"" )"		9360401	0					
ANR	9360466	Callee	puts		9360401	0					
ANR	9360467	Identifier	puts		9360401	0					
ANR	9360468	ArgumentList	"""^XA"""		9360401	1					
ANR	9360469	Argument	"""^XA"""		9360401	0					
ANR	9360470	PrimaryExpression	"""^XA"""		9360401	0					
ANR	9360471	IfStatement	"if ( ( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" ) )"		9360401	12					
ANR	9360472	Condition	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" )"	534:5:13773:13872	9360401	0	True				
ANR	9360473	AndExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" )"		9360401	0		&&			
ANR	9360474	EqualityExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL"		9360401	0		!=			
ANR	9360475	AssignmentExpression	"choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" )"		9360401	0		=			
ANR	9360476	Identifier	choice		9360401	0					
ANR	9360477	CallExpression	"ppdFindMarkedChoice ( ppd , ""zePrintRate"" )"		9360401	1					
ANR	9360478	Callee	ppdFindMarkedChoice		9360401	0					
ANR	9360479	Identifier	ppdFindMarkedChoice		9360401	0					
ANR	9360480	ArgumentList	ppd		9360401	1					
ANR	9360481	Argument	ppd		9360401	0					
ANR	9360482	Identifier	ppd		9360401	0					
ANR	9360483	Argument	"""zePrintRate"""		9360401	1					
ANR	9360484	PrimaryExpression	"""zePrintRate"""		9360401	0					
ANR	9360485	Identifier	NULL		9360401	1					
ANR	9360486	CallExpression	"strcmp ( choice -> choice , ""Default"" )"		9360401	1					
ANR	9360487	Callee	strcmp		9360401	0					
ANR	9360488	Identifier	strcmp		9360401	0					
ANR	9360489	ArgumentList	choice -> choice		9360401	1					
ANR	9360490	Argument	choice -> choice		9360401	0					
ANR	9360491	PtrMemberAccess	choice -> choice		9360401	0					
ANR	9360492	Identifier	choice		9360401	0					
ANR	9360493	Identifier	choice		9360401	1					
ANR	9360494	Argument	"""Default"""		9360401	1					
ANR	9360495	PrimaryExpression	"""Default"""		9360401	0					
ANR	9360496	CompoundStatement		55:1:773:773	9360401	1					
ANR	9360497	ExpressionStatement	val = atoi ( choice -> choice )	537:3:13881:13907	9360401	0	True				
ANR	9360498	AssignmentExpression	val = atoi ( choice -> choice )		9360401	0		=			
ANR	9360499	Identifier	val		9360401	0					
ANR	9360500	CallExpression	atoi ( choice -> choice )		9360401	1					
ANR	9360501	Callee	atoi		9360401	0					
ANR	9360502	Identifier	atoi		9360401	0					
ANR	9360503	ArgumentList	choice -> choice		9360401	1					
ANR	9360504	Argument	choice -> choice		9360401	0					
ANR	9360505	PtrMemberAccess	choice -> choice		9360401	0					
ANR	9360506	Identifier	choice		9360401	0					
ANR	9360507	Identifier	choice		9360401	1					
ANR	9360508	ExpressionStatement	"printf ( ""^PR%d,%d,%d\\n"" , val , val , val )"	538:3:13912:13950	9360401	1	True				
ANR	9360509	CallExpression	"printf ( ""^PR%d,%d,%d\\n"" , val , val , val )"		9360401	0					
ANR	9360510	Callee	printf		9360401	0					
ANR	9360511	Identifier	printf		9360401	0					
ANR	9360512	ArgumentList	"""^PR%d,%d,%d\\n"""		9360401	1					
ANR	9360513	Argument	"""^PR%d,%d,%d\\n"""		9360401	0					
ANR	9360514	PrimaryExpression	"""^PR%d,%d,%d\\n"""		9360401	0					
ANR	9360515	Argument	val		9360401	1					
ANR	9360516	Identifier	val		9360401	0					
ANR	9360517	Argument	val		9360401	2					
ANR	9360518	Identifier	val		9360401	0					
ANR	9360519	Argument	val		9360401	3					
ANR	9360520	Identifier	val		9360401	0					
ANR	9360521	ExpressionStatement	"printf ( ""^LH0,0\\n"" )"	545:1:14033:14051	9360401	13	True				
ANR	9360522	CallExpression	"printf ( ""^LH0,0\\n"" )"		9360401	0					
ANR	9360523	Callee	printf		9360401	0					
ANR	9360524	Identifier	printf		9360401	0					
ANR	9360525	ArgumentList	"""^LH0,0\\n"""		9360401	1					
ANR	9360526	Argument	"""^LH0,0\\n"""		9360401	0					
ANR	9360527	PrimaryExpression	"""^LH0,0\\n"""		9360401	0					
ANR	9360528	IfStatement	"if ( ppdIsMarked ( ppd , ""zeMediaTracking"" , ""Continuous"" ) )"		9360401	14					
ANR	9360529	Condition	"ppdIsMarked ( ppd , ""zeMediaTracking"" , ""Continuous"" )"	551:5:14106:14154	9360401	0	True				
ANR	9360530	CallExpression	"ppdIsMarked ( ppd , ""zeMediaTracking"" , ""Continuous"" )"		9360401	0					
ANR	9360531	Callee	ppdIsMarked		9360401	0					
ANR	9360532	Identifier	ppdIsMarked		9360401	0					
ANR	9360533	ArgumentList	ppd		9360401	1					
ANR	9360534	Argument	ppd		9360401	0					
ANR	9360535	Identifier	ppd		9360401	0					
ANR	9360536	Argument	"""zeMediaTracking"""		9360401	1					
ANR	9360537	PrimaryExpression	"""zeMediaTracking"""		9360401	0					
ANR	9360538	Argument	"""Continuous"""		9360401	2					
ANR	9360539	PrimaryExpression	"""Continuous"""		9360401	0					
ANR	9360540	CompoundStatement		71:1:1055:1055	9360401	1					
ANR	9360541	ExpressionStatement	"printf ( ""^LL%d\\n"" , header -> cupsHeight )"	557:3:14230:14267	9360401	0	True				
ANR	9360542	CallExpression	"printf ( ""^LL%d\\n"" , header -> cupsHeight )"		9360401	0					
ANR	9360543	Callee	printf		9360401	0					
ANR	9360544	Identifier	printf		9360401	0					
ANR	9360545	ArgumentList	"""^LL%d\\n"""		9360401	1					
ANR	9360546	Argument	"""^LL%d\\n"""		9360401	0					
ANR	9360547	PrimaryExpression	"""^LL%d\\n"""		9360401	0					
ANR	9360548	Argument	header -> cupsHeight		9360401	1					
ANR	9360549	PtrMemberAccess	header -> cupsHeight		9360401	0					
ANR	9360550	Identifier	header		9360401	0					
ANR	9360551	Identifier	cupsHeight		9360401	1					
ANR	9360552	ExpressionStatement	"printf ( ""^MNN\\n"" )"	558:3:14272:14288	9360401	1	True				
ANR	9360553	CallExpression	"printf ( ""^MNN\\n"" )"		9360401	0					
ANR	9360554	Callee	printf		9360401	0					
ANR	9360555	Identifier	printf		9360401	0					
ANR	9360556	ArgumentList	"""^MNN\\n"""		9360401	1					
ANR	9360557	Argument	"""^MNN\\n"""		9360401	0					
ANR	9360558	PrimaryExpression	"""^MNN\\n"""		9360401	0					
ANR	9360559	ElseStatement	else		9360401	0					
ANR	9360560	IfStatement	"if ( ppdIsMarked ( ppd , ""zeMediaTracking"" , ""Web"" ) )"		9360401	0					
ANR	9360561	Condition	"ppdIsMarked ( ppd , ""zeMediaTracking"" , ""Web"" )"	560:10:14303:14344	9360401	0	True				
ANR	9360562	CallExpression	"ppdIsMarked ( ppd , ""zeMediaTracking"" , ""Web"" )"		9360401	0					
ANR	9360563	Callee	ppdIsMarked		9360401	0					
ANR	9360564	Identifier	ppdIsMarked		9360401	0					
ANR	9360565	ArgumentList	ppd		9360401	1					
ANR	9360566	Argument	ppd		9360401	0					
ANR	9360567	Identifier	ppd		9360401	0					
ANR	9360568	Argument	"""zeMediaTracking"""		9360401	1					
ANR	9360569	PrimaryExpression	"""zeMediaTracking"""		9360401	0					
ANR	9360570	Argument	"""Web"""		9360401	2					
ANR	9360571	PrimaryExpression	"""Web"""		9360401	0					
ANR	9360572	ExpressionStatement	"printf ( ""^MNY\\n"" )"	561:10:14357:14373	9360401	1	True				
ANR	9360573	CallExpression	"printf ( ""^MNY\\n"" )"		9360401	0					
ANR	9360574	Callee	printf		9360401	0					
ANR	9360575	Identifier	printf		9360401	0					
ANR	9360576	ArgumentList	"""^MNY\\n"""		9360401	1					
ANR	9360577	Argument	"""^MNY\\n"""		9360401	0					
ANR	9360578	PrimaryExpression	"""^MNY\\n"""		9360401	0					
ANR	9360579	ElseStatement	else		9360401	0					
ANR	9360580	IfStatement	"if ( ppdIsMarked ( ppd , ""zeMediaTracking"" , ""Mark"" ) )"		9360401	0					
ANR	9360581	Condition	"ppdIsMarked ( ppd , ""zeMediaTracking"" , ""Mark"" )"	562:10:14385:14427	9360401	0	True				
ANR	9360582	CallExpression	"ppdIsMarked ( ppd , ""zeMediaTracking"" , ""Mark"" )"		9360401	0					
ANR	9360583	Callee	ppdIsMarked		9360401	0					
ANR	9360584	Identifier	ppdIsMarked		9360401	0					
ANR	9360585	ArgumentList	ppd		9360401	1					
ANR	9360586	Argument	ppd		9360401	0					
ANR	9360587	Identifier	ppd		9360401	0					
ANR	9360588	Argument	"""zeMediaTracking"""		9360401	1					
ANR	9360589	PrimaryExpression	"""zeMediaTracking"""		9360401	0					
ANR	9360590	Argument	"""Mark"""		9360401	2					
ANR	9360591	PrimaryExpression	"""Mark"""		9360401	0					
ANR	9360592	ExpressionStatement	"printf ( ""^MNM\\n"" )"	563:3:14433:14449	9360401	1	True				
ANR	9360593	CallExpression	"printf ( ""^MNM\\n"" )"		9360401	0					
ANR	9360594	Callee	printf		9360401	0					
ANR	9360595	Identifier	printf		9360401	0					
ANR	9360596	ArgumentList	"""^MNM\\n"""		9360401	1					
ANR	9360597	Argument	"""^MNM\\n"""		9360401	0					
ANR	9360598	PrimaryExpression	"""^MNM\\n"""		9360401	0					
ANR	9360599	IfStatement	if ( header -> cupsRowStep != 200 )		9360401	15					
ANR	9360600	Condition	header -> cupsRowStep != 200	569:5:14496:14521	9360401	0	True				
ANR	9360601	EqualityExpression	header -> cupsRowStep != 200		9360401	0		!=			
ANR	9360602	PtrMemberAccess	header -> cupsRowStep		9360401	0					
ANR	9360603	Identifier	header		9360401	0					
ANR	9360604	Identifier	cupsRowStep		9360401	1					
ANR	9360605	PrimaryExpression	200		9360401	1					
ANR	9360606	ExpressionStatement	"printf ( ""^LT%d\\n"" , header -> cupsRowStep )"	570:3:14527:14565	9360401	1	True				
ANR	9360607	CallExpression	"printf ( ""^LT%d\\n"" , header -> cupsRowStep )"		9360401	0					
ANR	9360608	Callee	printf		9360401	0					
ANR	9360609	Identifier	printf		9360401	0					
ANR	9360610	ArgumentList	"""^LT%d\\n"""		9360401	1					
ANR	9360611	Argument	"""^LT%d\\n"""		9360401	0					
ANR	9360612	PrimaryExpression	"""^LT%d\\n"""		9360401	0					
ANR	9360613	Argument	header -> cupsRowStep		9360401	1					
ANR	9360614	PtrMemberAccess	header -> cupsRowStep		9360401	0					
ANR	9360615	Identifier	header		9360401	0					
ANR	9360616	Identifier	cupsRowStep		9360401	1					
ANR	9360617	IfStatement	"if ( ! strcmp ( header -> MediaType , ""Thermal"" ) )"		9360401	16					
ANR	9360618	Condition	"! strcmp ( header -> MediaType , ""Thermal"" )"	576:5:14616:14652	9360401	0	True				
ANR	9360619	UnaryOperationExpression	"! strcmp ( header -> MediaType , ""Thermal"" )"		9360401	0					
ANR	9360620	UnaryOperator	!		9360401	0					
ANR	9360621	CallExpression	"strcmp ( header -> MediaType , ""Thermal"" )"		9360401	1					
ANR	9360622	Callee	strcmp		9360401	0					
ANR	9360623	Identifier	strcmp		9360401	0					
ANR	9360624	ArgumentList	header -> MediaType		9360401	1					
ANR	9360625	Argument	header -> MediaType		9360401	0					
ANR	9360626	PtrMemberAccess	header -> MediaType		9360401	0					
ANR	9360627	Identifier	header		9360401	0					
ANR	9360628	Identifier	MediaType		9360401	1					
ANR	9360629	Argument	"""Thermal"""		9360401	1					
ANR	9360630	PrimaryExpression	"""Thermal"""		9360401	0					
ANR	9360631	ExpressionStatement	"printf ( ""^MTT\\n"" )"	577:3:14658:14674	9360401	1	True				
ANR	9360632	CallExpression	"printf ( ""^MTT\\n"" )"		9360401	0					
ANR	9360633	Callee	printf		9360401	0					
ANR	9360634	Identifier	printf		9360401	0					
ANR	9360635	ArgumentList	"""^MTT\\n"""		9360401	1					
ANR	9360636	Argument	"""^MTT\\n"""		9360401	0					
ANR	9360637	PrimaryExpression	"""^MTT\\n"""		9360401	0					
ANR	9360638	ElseStatement	else		9360401	0					
ANR	9360639	IfStatement	"if ( ! strcmp ( header -> MediaType , ""Direct"" ) )"		9360401	0					
ANR	9360640	Condition	"! strcmp ( header -> MediaType , ""Direct"" )"	578:10:14686:14721	9360401	0	True				
ANR	9360641	UnaryOperationExpression	"! strcmp ( header -> MediaType , ""Direct"" )"		9360401	0					
ANR	9360642	UnaryOperator	!		9360401	0					
ANR	9360643	CallExpression	"strcmp ( header -> MediaType , ""Direct"" )"		9360401	1					
ANR	9360644	Callee	strcmp		9360401	0					
ANR	9360645	Identifier	strcmp		9360401	0					
ANR	9360646	ArgumentList	header -> MediaType		9360401	1					
ANR	9360647	Argument	header -> MediaType		9360401	0					
ANR	9360648	PtrMemberAccess	header -> MediaType		9360401	0					
ANR	9360649	Identifier	header		9360401	0					
ANR	9360650	Identifier	MediaType		9360401	1					
ANR	9360651	Argument	"""Direct"""		9360401	1					
ANR	9360652	PrimaryExpression	"""Direct"""		9360401	0					
ANR	9360653	ExpressionStatement	"printf ( ""^MTD\\n"" )"	579:3:14727:14743	9360401	1	True				
ANR	9360654	CallExpression	"printf ( ""^MTD\\n"" )"		9360401	0					
ANR	9360655	Callee	printf		9360401	0					
ANR	9360656	Identifier	printf		9360401	0					
ANR	9360657	ArgumentList	"""^MTD\\n"""		9360401	1					
ANR	9360658	Argument	"""^MTD\\n"""		9360401	0					
ANR	9360659	PrimaryExpression	"""^MTD\\n"""		9360401	0					
ANR	9360660	IfStatement	"if ( ( choice = ppdFindMarkedChoice ( ppd , ""zePrintMode"" ) ) != NULL && strcmp ( choice -> choice , ""Saved"" ) )"		9360401	17					
ANR	9360661	Condition	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintMode"" ) ) != NULL && strcmp ( choice -> choice , ""Saved"" )"	585:5:14794:14891	9360401	0	True				
ANR	9360662	AndExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintMode"" ) ) != NULL && strcmp ( choice -> choice , ""Saved"" )"		9360401	0		&&			
ANR	9360663	EqualityExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintMode"" ) ) != NULL"		9360401	0		!=			
ANR	9360664	AssignmentExpression	"choice = ppdFindMarkedChoice ( ppd , ""zePrintMode"" )"		9360401	0		=			
ANR	9360665	Identifier	choice		9360401	0					
ANR	9360666	CallExpression	"ppdFindMarkedChoice ( ppd , ""zePrintMode"" )"		9360401	1					
ANR	9360667	Callee	ppdFindMarkedChoice		9360401	0					
ANR	9360668	Identifier	ppdFindMarkedChoice		9360401	0					
ANR	9360669	ArgumentList	ppd		9360401	1					
ANR	9360670	Argument	ppd		9360401	0					
ANR	9360671	Identifier	ppd		9360401	0					
ANR	9360672	Argument	"""zePrintMode"""		9360401	1					
ANR	9360673	PrimaryExpression	"""zePrintMode"""		9360401	0					
ANR	9360674	Identifier	NULL		9360401	1					
ANR	9360675	CallExpression	"strcmp ( choice -> choice , ""Saved"" )"		9360401	1					
ANR	9360676	Callee	strcmp		9360401	0					
ANR	9360677	Identifier	strcmp		9360401	0					
ANR	9360678	ArgumentList	choice -> choice		9360401	1					
ANR	9360679	Argument	choice -> choice		9360401	0					
ANR	9360680	PtrMemberAccess	choice -> choice		9360401	0					
ANR	9360681	Identifier	choice		9360401	0					
ANR	9360682	Identifier	choice		9360401	1					
ANR	9360683	Argument	"""Saved"""		9360401	1					
ANR	9360684	PrimaryExpression	"""Saved"""		9360401	0					
ANR	9360685	CompoundStatement		106:1:1792:1792	9360401	1					
ANR	9360686	ExpressionStatement	"printf ( ""^MM"" )"	588:3:14900:14913	9360401	0	True				
ANR	9360687	CallExpression	"printf ( ""^MM"" )"		9360401	0					
ANR	9360688	Callee	printf		9360401	0					
ANR	9360689	Identifier	printf		9360401	0					
ANR	9360690	ArgumentList	"""^MM"""		9360401	1					
ANR	9360691	Argument	"""^MM"""		9360401	0					
ANR	9360692	PrimaryExpression	"""^MM"""		9360401	0					
ANR	9360693	IfStatement	"if ( ! strcmp ( choice -> choice , ""Tear"" ) )"		9360401	1					
ANR	9360694	Condition	"! strcmp ( choice -> choice , ""Tear"" )"	590:7:14923:14953	9360401	0	True				
ANR	9360695	UnaryOperationExpression	"! strcmp ( choice -> choice , ""Tear"" )"		9360401	0					
ANR	9360696	UnaryOperator	!		9360401	0					
ANR	9360697	CallExpression	"strcmp ( choice -> choice , ""Tear"" )"		9360401	1					
ANR	9360698	Callee	strcmp		9360401	0					
ANR	9360699	Identifier	strcmp		9360401	0					
ANR	9360700	ArgumentList	choice -> choice		9360401	1					
ANR	9360701	Argument	choice -> choice		9360401	0					
ANR	9360702	PtrMemberAccess	choice -> choice		9360401	0					
ANR	9360703	Identifier	choice		9360401	0					
ANR	9360704	Identifier	choice		9360401	1					
ANR	9360705	Argument	"""Tear"""		9360401	1					
ANR	9360706	PrimaryExpression	"""Tear"""		9360401	0					
ANR	9360707	ExpressionStatement	"printf ( ""T,Y\\n"" )"	591:5:14961:14976	9360401	1	True				
ANR	9360708	CallExpression	"printf ( ""T,Y\\n"" )"		9360401	0					
ANR	9360709	Callee	printf		9360401	0					
ANR	9360710	Identifier	printf		9360401	0					
ANR	9360711	ArgumentList	"""T,Y\\n"""		9360401	1					
ANR	9360712	Argument	"""T,Y\\n"""		9360401	0					
ANR	9360713	PrimaryExpression	"""T,Y\\n"""		9360401	0					
ANR	9360714	ElseStatement	else		9360401	0					
ANR	9360715	IfStatement	"if ( ! strcmp ( choice -> choice , ""Peel"" ) )"		9360401	0					
ANR	9360716	Condition	"! strcmp ( choice -> choice , ""Peel"" )"	592:12:14990:15020	9360401	0	True				
ANR	9360717	UnaryOperationExpression	"! strcmp ( choice -> choice , ""Peel"" )"		9360401	0					
ANR	9360718	UnaryOperator	!		9360401	0					
ANR	9360719	CallExpression	"strcmp ( choice -> choice , ""Peel"" )"		9360401	1					
ANR	9360720	Callee	strcmp		9360401	0					
ANR	9360721	Identifier	strcmp		9360401	0					
ANR	9360722	ArgumentList	choice -> choice		9360401	1					
ANR	9360723	Argument	choice -> choice		9360401	0					
ANR	9360724	PtrMemberAccess	choice -> choice		9360401	0					
ANR	9360725	Identifier	choice		9360401	0					
ANR	9360726	Identifier	choice		9360401	1					
ANR	9360727	Argument	"""Peel"""		9360401	1					
ANR	9360728	PrimaryExpression	"""Peel"""		9360401	0					
ANR	9360729	ExpressionStatement	"printf ( ""P,Y\\n"" )"	593:5:15028:15043	9360401	1	True				
ANR	9360730	CallExpression	"printf ( ""P,Y\\n"" )"		9360401	0					
ANR	9360731	Callee	printf		9360401	0					
ANR	9360732	Identifier	printf		9360401	0					
ANR	9360733	ArgumentList	"""P,Y\\n"""		9360401	1					
ANR	9360734	Argument	"""P,Y\\n"""		9360401	0					
ANR	9360735	PrimaryExpression	"""P,Y\\n"""		9360401	0					
ANR	9360736	ElseStatement	else		9360401	0					
ANR	9360737	IfStatement	"if ( ! strcmp ( choice -> choice , ""Rewind"" ) )"		9360401	0					
ANR	9360738	Condition	"! strcmp ( choice -> choice , ""Rewind"" )"	594:12:15057:15089	9360401	0	True				
ANR	9360739	UnaryOperationExpression	"! strcmp ( choice -> choice , ""Rewind"" )"		9360401	0					
ANR	9360740	UnaryOperator	!		9360401	0					
ANR	9360741	CallExpression	"strcmp ( choice -> choice , ""Rewind"" )"		9360401	1					
ANR	9360742	Callee	strcmp		9360401	0					
ANR	9360743	Identifier	strcmp		9360401	0					
ANR	9360744	ArgumentList	choice -> choice		9360401	1					
ANR	9360745	Argument	choice -> choice		9360401	0					
ANR	9360746	PtrMemberAccess	choice -> choice		9360401	0					
ANR	9360747	Identifier	choice		9360401	0					
ANR	9360748	Identifier	choice		9360401	1					
ANR	9360749	Argument	"""Rewind"""		9360401	1					
ANR	9360750	PrimaryExpression	"""Rewind"""		9360401	0					
ANR	9360751	ExpressionStatement	"printf ( ""R,Y\\n"" )"	595:5:15097:15112	9360401	1	True				
ANR	9360752	CallExpression	"printf ( ""R,Y\\n"" )"		9360401	0					
ANR	9360753	Callee	printf		9360401	0					
ANR	9360754	Identifier	printf		9360401	0					
ANR	9360755	ArgumentList	"""R,Y\\n"""		9360401	1					
ANR	9360756	Argument	"""R,Y\\n"""		9360401	0					
ANR	9360757	PrimaryExpression	"""R,Y\\n"""		9360401	0					
ANR	9360758	ElseStatement	else		9360401	0					
ANR	9360759	IfStatement	"if ( ! strcmp ( choice -> choice , ""Applicator"" ) )"		9360401	0					
ANR	9360760	Condition	"! strcmp ( choice -> choice , ""Applicator"" )"	596:12:15126:15162	9360401	0	True				
ANR	9360761	UnaryOperationExpression	"! strcmp ( choice -> choice , ""Applicator"" )"		9360401	0					
ANR	9360762	UnaryOperator	!		9360401	0					
ANR	9360763	CallExpression	"strcmp ( choice -> choice , ""Applicator"" )"		9360401	1					
ANR	9360764	Callee	strcmp		9360401	0					
ANR	9360765	Identifier	strcmp		9360401	0					
ANR	9360766	ArgumentList	choice -> choice		9360401	1					
ANR	9360767	Argument	choice -> choice		9360401	0					
ANR	9360768	PtrMemberAccess	choice -> choice		9360401	0					
ANR	9360769	Identifier	choice		9360401	0					
ANR	9360770	Identifier	choice		9360401	1					
ANR	9360771	Argument	"""Applicator"""		9360401	1					
ANR	9360772	PrimaryExpression	"""Applicator"""		9360401	0					
ANR	9360773	ExpressionStatement	"printf ( ""A,Y\\n"" )"	597:5:15170:15185	9360401	1	True				
ANR	9360774	CallExpression	"printf ( ""A,Y\\n"" )"		9360401	0					
ANR	9360775	Callee	printf		9360401	0					
ANR	9360776	Identifier	printf		9360401	0					
ANR	9360777	ArgumentList	"""A,Y\\n"""		9360401	1					
ANR	9360778	Argument	"""A,Y\\n"""		9360401	0					
ANR	9360779	PrimaryExpression	"""A,Y\\n"""		9360401	0					
ANR	9360780	ElseStatement	else		9360401	0					
ANR	9360781	ExpressionStatement	"printf ( ""C,Y\\n"" )"	599:5:15200:15215	9360401	0	True				
ANR	9360782	CallExpression	"printf ( ""C,Y\\n"" )"		9360401	0					
ANR	9360783	Callee	printf		9360401	0					
ANR	9360784	Identifier	printf		9360401	0					
ANR	9360785	ArgumentList	"""C,Y\\n"""		9360401	1					
ANR	9360786	Argument	"""C,Y\\n"""		9360401	0					
ANR	9360787	PrimaryExpression	"""C,Y\\n"""		9360401	0					
ANR	9360788	IfStatement	if ( header -> AdvanceDistance != 1000 )		9360401	18					
ANR	9360789	Condition	header -> AdvanceDistance != 1000	606:5:15283:15313	9360401	0	True				
ANR	9360790	EqualityExpression	header -> AdvanceDistance != 1000		9360401	0		!=			
ANR	9360791	PtrMemberAccess	header -> AdvanceDistance		9360401	0					
ANR	9360792	Identifier	header		9360401	0					
ANR	9360793	Identifier	AdvanceDistance		9360401	1					
ANR	9360794	PrimaryExpression	1000		9360401	1					
ANR	9360795	CompoundStatement		126:1:2214:2214	9360401	1					
ANR	9360796	IfStatement	if ( ( int ) header -> AdvanceDistance < 0 )		9360401	0					
ANR	9360797	Condition	( int ) header -> AdvanceDistance < 0	608:7:15326:15357	9360401	0	True				
ANR	9360798	RelationalExpression	( int ) header -> AdvanceDistance < 0		9360401	0		<			
ANR	9360799	CastExpression	( int ) header -> AdvanceDistance		9360401	0					
ANR	9360800	CastTarget	int		9360401	0					
ANR	9360801	PtrMemberAccess	header -> AdvanceDistance		9360401	1					
ANR	9360802	Identifier	header		9360401	0					
ANR	9360803	Identifier	AdvanceDistance		9360401	1					
ANR	9360804	PrimaryExpression	0		9360401	1					
ANR	9360805	ExpressionStatement	"printf ( ""~TA%04d\\n"" , ( int ) header -> AdvanceDistance )"	609:5:15365:15414	9360401	1	True				
ANR	9360806	CallExpression	"printf ( ""~TA%04d\\n"" , ( int ) header -> AdvanceDistance )"		9360401	0					
ANR	9360807	Callee	printf		9360401	0					
ANR	9360808	Identifier	printf		9360401	0					
ANR	9360809	ArgumentList	"""~TA%04d\\n"""		9360401	1					
ANR	9360810	Argument	"""~TA%04d\\n"""		9360401	0					
ANR	9360811	PrimaryExpression	"""~TA%04d\\n"""		9360401	0					
ANR	9360812	Argument	( int ) header -> AdvanceDistance		9360401	1					
ANR	9360813	CastExpression	( int ) header -> AdvanceDistance		9360401	0					
ANR	9360814	CastTarget	int		9360401	0					
ANR	9360815	PtrMemberAccess	header -> AdvanceDistance		9360401	1					
ANR	9360816	Identifier	header		9360401	0					
ANR	9360817	Identifier	AdvanceDistance		9360401	1					
ANR	9360818	ElseStatement	else		9360401	0					
ANR	9360819	ExpressionStatement	"printf ( ""~TA%03d\\n"" , ( int ) header -> AdvanceDistance )"	611:5:15429:15478	9360401	0	True				
ANR	9360820	CallExpression	"printf ( ""~TA%03d\\n"" , ( int ) header -> AdvanceDistance )"		9360401	0					
ANR	9360821	Callee	printf		9360401	0					
ANR	9360822	Identifier	printf		9360401	0					
ANR	9360823	ArgumentList	"""~TA%03d\\n"""		9360401	1					
ANR	9360824	Argument	"""~TA%03d\\n"""		9360401	0					
ANR	9360825	PrimaryExpression	"""~TA%03d\\n"""		9360401	0					
ANR	9360826	Argument	( int ) header -> AdvanceDistance		9360401	1					
ANR	9360827	CastExpression	( int ) header -> AdvanceDistance		9360401	0					
ANR	9360828	CastTarget	int		9360401	0					
ANR	9360829	PtrMemberAccess	header -> AdvanceDistance		9360401	1					
ANR	9360830	Identifier	header		9360401	0					
ANR	9360831	Identifier	AdvanceDistance		9360401	1					
ANR	9360832	IfStatement	"if ( ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Always"" ) )"		9360401	19					
ANR	9360833	Condition	"ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Always"" )"	618:5:15553:15596	9360401	0	True				
ANR	9360834	CallExpression	"ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Always"" )"		9360401	0					
ANR	9360835	Callee	ppdIsMarked		9360401	0					
ANR	9360836	Identifier	ppdIsMarked		9360401	0					
ANR	9360837	ArgumentList	ppd		9360401	1					
ANR	9360838	Argument	ppd		9360401	0					
ANR	9360839	Identifier	ppd		9360401	0					
ANR	9360840	Argument	"""zeErrorReprint"""		9360401	1					
ANR	9360841	PrimaryExpression	"""zeErrorReprint"""		9360401	0					
ANR	9360842	Argument	"""Always"""		9360401	2					
ANR	9360843	PrimaryExpression	"""Always"""		9360401	0					
ANR	9360844	ExpressionStatement	"printf ( ""^JZY\\n"" )"	619:3:15602:15618	9360401	1	True				
ANR	9360845	CallExpression	"printf ( ""^JZY\\n"" )"		9360401	0					
ANR	9360846	Callee	printf		9360401	0					
ANR	9360847	Identifier	printf		9360401	0					
ANR	9360848	ArgumentList	"""^JZY\\n"""		9360401	1					
ANR	9360849	Argument	"""^JZY\\n"""		9360401	0					
ANR	9360850	PrimaryExpression	"""^JZY\\n"""		9360401	0					
ANR	9360851	ElseStatement	else		9360401	0					
ANR	9360852	IfStatement	"if ( ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Never"" ) )"		9360401	0					
ANR	9360853	Condition	"ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Never"" )"	620:10:15630:15672	9360401	0	True				
ANR	9360854	CallExpression	"ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Never"" )"		9360401	0					
ANR	9360855	Callee	ppdIsMarked		9360401	0					
ANR	9360856	Identifier	ppdIsMarked		9360401	0					
ANR	9360857	ArgumentList	ppd		9360401	1					
ANR	9360858	Argument	ppd		9360401	0					
ANR	9360859	Identifier	ppd		9360401	0					
ANR	9360860	Argument	"""zeErrorReprint"""		9360401	1					
ANR	9360861	PrimaryExpression	"""zeErrorReprint"""		9360401	0					
ANR	9360862	Argument	"""Never"""		9360401	2					
ANR	9360863	PrimaryExpression	"""Never"""		9360401	0					
ANR	9360864	ExpressionStatement	"printf ( ""^JZN\\n"" )"	621:3:15678:15694	9360401	1	True				
ANR	9360865	CallExpression	"printf ( ""^JZN\\n"" )"		9360401	0					
ANR	9360866	Callee	printf		9360401	0					
ANR	9360867	Identifier	printf		9360401	0					
ANR	9360868	ArgumentList	"""^JZN\\n"""		9360401	1					
ANR	9360869	Argument	"""^JZN\\n"""		9360401	0					
ANR	9360870	PrimaryExpression	"""^JZN\\n"""		9360401	0					
ANR	9360871	IfStatement	if ( header -> NumCopies > 1 )		9360401	20					
ANR	9360872	Condition	header -> NumCopies > 1	627:5:15749:15769	9360401	0	True				
ANR	9360873	RelationalExpression	header -> NumCopies > 1		9360401	0		>			
ANR	9360874	PtrMemberAccess	header -> NumCopies		9360401	0					
ANR	9360875	Identifier	header		9360401	0					
ANR	9360876	Identifier	NumCopies		9360401	1					
ANR	9360877	PrimaryExpression	1		9360401	1					
ANR	9360878	ExpressionStatement	"printf ( ""^PQ%d, 0, 0, N\\n"" , header -> NumCopies )"	628:3:15775:15820	9360401	1	True				
ANR	9360879	CallExpression	"printf ( ""^PQ%d, 0, 0, N\\n"" , header -> NumCopies )"		9360401	0					
ANR	9360880	Callee	printf		9360401	0					
ANR	9360881	Identifier	printf		9360401	0					
ANR	9360882	ArgumentList	"""^PQ%d, 0, 0, N\\n"""		9360401	1					
ANR	9360883	Argument	"""^PQ%d, 0, 0, N\\n"""		9360401	0					
ANR	9360884	PrimaryExpression	"""^PQ%d, 0, 0, N\\n"""		9360401	0					
ANR	9360885	Argument	header -> NumCopies		9360401	1					
ANR	9360886	PtrMemberAccess	header -> NumCopies		9360401	0					
ANR	9360887	Identifier	header		9360401	0					
ANR	9360888	Identifier	NumCopies		9360401	1					
ANR	9360889	ExpressionStatement	"puts ( ""^FO0,0^XGR:CUPS.GRF,1,1^FS"" )"	634:1:15876:15910	9360401	21	True				
ANR	9360890	CallExpression	"puts ( ""^FO0,0^XGR:CUPS.GRF,1,1^FS"" )"		9360401	0					
ANR	9360891	Callee	puts		9360401	0					
ANR	9360892	Identifier	puts		9360401	0					
ANR	9360893	ArgumentList	"""^FO0,0^XGR:CUPS.GRF,1,1^FS"""		9360401	1					
ANR	9360894	Argument	"""^FO0,0^XGR:CUPS.GRF,1,1^FS"""		9360401	0					
ANR	9360895	PrimaryExpression	"""^FO0,0^XGR:CUPS.GRF,1,1^FS"""		9360401	0					
ANR	9360896	ExpressionStatement	"puts ( ""^IDR:CUPS.GRF^FS"" )"	640:8:15973:15997	9360401	22	True				
ANR	9360897	CallExpression	"puts ( ""^IDR:CUPS.GRF^FS"" )"		9360401	0					
ANR	9360898	Callee	puts		9360401	0					
ANR	9360899	Identifier	puts		9360401	0					
ANR	9360900	ArgumentList	"""^IDR:CUPS.GRF^FS"""		9360401	1					
ANR	9360901	Argument	"""^IDR:CUPS.GRF^FS"""		9360401	0					
ANR	9360902	PrimaryExpression	"""^IDR:CUPS.GRF^FS"""		9360401	0					
ANR	9360903	ExpressionStatement	"puts ( ""^XZ"" )"	641:1:16000:16011	9360401	23	True				
ANR	9360904	CallExpression	"puts ( ""^XZ"" )"		9360401	0					
ANR	9360905	Callee	puts		9360401	0					
ANR	9360906	Identifier	puts		9360401	0					
ANR	9360907	ArgumentList	"""^XZ"""		9360401	1					
ANR	9360908	Argument	"""^XZ"""		9360401	0					
ANR	9360909	PrimaryExpression	"""^XZ"""		9360401	0					
ANR	9360910	BreakStatement	break ;	642:8:16021:16026	9360401	24	True				
ANR	9360911	Label	case ZEBRA_CPCL :	644:4:16033:16049	9360401	25	True				
ANR	9360912	Identifier	ZEBRA_CPCL		9360401	0					
ANR	9360913	IfStatement	if ( header -> AdvanceDistance != 1000 )		9360401	26					
ANR	9360914	Condition	header -> AdvanceDistance != 1000	649:5:16113:16143	9360401	0	True				
ANR	9360915	EqualityExpression	header -> AdvanceDistance != 1000		9360401	0		!=			
ANR	9360916	PtrMemberAccess	header -> AdvanceDistance		9360401	0					
ANR	9360917	Identifier	header		9360401	0					
ANR	9360918	Identifier	AdvanceDistance		9360401	1					
ANR	9360919	PrimaryExpression	1000		9360401	1					
ANR	9360920	ExpressionStatement	"printf ( ""PRESENT-AT %d 1\\r\\n"" , ( int ) header -> AdvanceDistance )"	650:10:16156:16215	9360401	1	True				
ANR	9360921	CallExpression	"printf ( ""PRESENT-AT %d 1\\r\\n"" , ( int ) header -> AdvanceDistance )"		9360401	0					
ANR	9360922	Callee	printf		9360401	0					
ANR	9360923	Identifier	printf		9360401	0					
ANR	9360924	ArgumentList	"""PRESENT-AT %d 1\\r\\n"""		9360401	1					
ANR	9360925	Argument	"""PRESENT-AT %d 1\\r\\n"""		9360401	0					
ANR	9360926	PrimaryExpression	"""PRESENT-AT %d 1\\r\\n"""		9360401	0					
ANR	9360927	Argument	( int ) header -> AdvanceDistance		9360401	1					
ANR	9360928	CastExpression	( int ) header -> AdvanceDistance		9360401	0					
ANR	9360929	CastTarget	int		9360401	0					
ANR	9360930	PtrMemberAccess	header -> AdvanceDistance		9360401	1					
ANR	9360931	Identifier	header		9360401	0					
ANR	9360932	Identifier	AdvanceDistance		9360401	1					
ANR	9360933	IfStatement	"if ( ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Always"" ) )"		9360401	27					
ANR	9360934	Condition	"ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Always"" )"	656:5:16287:16330	9360401	0	True				
ANR	9360935	CallExpression	"ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Always"" )"		9360401	0					
ANR	9360936	Callee	ppdIsMarked		9360401	0					
ANR	9360937	Identifier	ppdIsMarked		9360401	0					
ANR	9360938	ArgumentList	ppd		9360401	1					
ANR	9360939	Argument	ppd		9360401	0					
ANR	9360940	Identifier	ppd		9360401	0					
ANR	9360941	Argument	"""zeErrorReprint"""		9360401	1					
ANR	9360942	PrimaryExpression	"""zeErrorReprint"""		9360401	0					
ANR	9360943	Argument	"""Always"""		9360401	2					
ANR	9360944	PrimaryExpression	"""Always"""		9360401	0					
ANR	9360945	ExpressionStatement	"puts ( ""ON-OUT-OF-PAPER WAIT\\r"" )"	657:3:16336:16366	9360401	1	True				
ANR	9360946	CallExpression	"puts ( ""ON-OUT-OF-PAPER WAIT\\r"" )"		9360401	0					
ANR	9360947	Callee	puts		9360401	0					
ANR	9360948	Identifier	puts		9360401	0					
ANR	9360949	ArgumentList	"""ON-OUT-OF-PAPER WAIT\\r"""		9360401	1					
ANR	9360950	Argument	"""ON-OUT-OF-PAPER WAIT\\r"""		9360401	0					
ANR	9360951	PrimaryExpression	"""ON-OUT-OF-PAPER WAIT\\r"""		9360401	0					
ANR	9360952	ElseStatement	else		9360401	0					
ANR	9360953	IfStatement	"if ( ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Never"" ) )"		9360401	0					
ANR	9360954	Condition	"ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Never"" )"	658:10:16378:16420	9360401	0	True				
ANR	9360955	CallExpression	"ppdIsMarked ( ppd , ""zeErrorReprint"" , ""Never"" )"		9360401	0					
ANR	9360956	Callee	ppdIsMarked		9360401	0					
ANR	9360957	Identifier	ppdIsMarked		9360401	0					
ANR	9360958	ArgumentList	ppd		9360401	1					
ANR	9360959	Argument	ppd		9360401	0					
ANR	9360960	Identifier	ppd		9360401	0					
ANR	9360961	Argument	"""zeErrorReprint"""		9360401	1					
ANR	9360962	PrimaryExpression	"""zeErrorReprint"""		9360401	0					
ANR	9360963	Argument	"""Never"""		9360401	2					
ANR	9360964	PrimaryExpression	"""Never"""		9360401	0					
ANR	9360965	ExpressionStatement	"puts ( ""ON-OUT-OF-PAPER PURGE\\r"" )"	659:3:16426:16457	9360401	1	True				
ANR	9360966	CallExpression	"puts ( ""ON-OUT-OF-PAPER PURGE\\r"" )"		9360401	0					
ANR	9360967	Callee	puts		9360401	0					
ANR	9360968	Identifier	puts		9360401	0					
ANR	9360969	ArgumentList	"""ON-OUT-OF-PAPER PURGE\\r"""		9360401	1					
ANR	9360970	Argument	"""ON-OUT-OF-PAPER PURGE\\r"""		9360401	0					
ANR	9360971	PrimaryExpression	"""ON-OUT-OF-PAPER PURGE\\r"""		9360401	0					
ANR	9360972	IfStatement	if ( header -> CutMedia )		9360401	28					
ANR	9360973	Condition	header -> CutMedia	665:5:16501:16516	9360401	0	True				
ANR	9360974	PtrMemberAccess	header -> CutMedia		9360401	0					
ANR	9360975	Identifier	header		9360401	0					
ANR	9360976	Identifier	CutMedia		9360401	1					
ANR	9360977	ExpressionStatement	"puts ( ""CUT\\r"" )"	666:3:16522:16535	9360401	1	True				
ANR	9360978	CallExpression	"puts ( ""CUT\\r"" )"		9360401	0					
ANR	9360979	Callee	puts		9360401	0					
ANR	9360980	Identifier	puts		9360401	0					
ANR	9360981	ArgumentList	"""CUT\\r"""		9360401	1					
ANR	9360982	Argument	"""CUT\\r"""		9360401	0					
ANR	9360983	PrimaryExpression	"""CUT\\r"""		9360401	0					
ANR	9360984	IfStatement	if ( header -> cupsCompression > 0 )		9360401	29					
ANR	9360985	Condition	header -> cupsCompression > 0	672:5:16584:16610	9360401	0	True				
ANR	9360986	RelationalExpression	header -> cupsCompression > 0		9360401	0		>			
ANR	9360987	PtrMemberAccess	header -> cupsCompression		9360401	0					
ANR	9360988	Identifier	header		9360401	0					
ANR	9360989	Identifier	cupsCompression		9360401	1					
ANR	9360990	PrimaryExpression	0		9360401	1					
ANR	9360991	ExpressionStatement	"printf ( ""TONE %u\\r\\n"" , 2 * header -> cupsCompression )"	673:3:16616:16666	9360401	1	True				
ANR	9360992	CallExpression	"printf ( ""TONE %u\\r\\n"" , 2 * header -> cupsCompression )"		9360401	0					
ANR	9360993	Callee	printf		9360401	0					
ANR	9360994	Identifier	printf		9360401	0					
ANR	9360995	ArgumentList	"""TONE %u\\r\\n"""		9360401	1					
ANR	9360996	Argument	"""TONE %u\\r\\n"""		9360401	0					
ANR	9360997	PrimaryExpression	"""TONE %u\\r\\n"""		9360401	0					
ANR	9360998	Argument	2 * header -> cupsCompression		9360401	1					
ANR	9360999	MultiplicativeExpression	2 * header -> cupsCompression		9360401	0		*			
ANR	9361000	PrimaryExpression	2		9360401	0					
ANR	9361001	PtrMemberAccess	header -> cupsCompression		9360401	1					
ANR	9361002	Identifier	header		9360401	0					
ANR	9361003	Identifier	cupsCompression		9360401	1					
ANR	9361004	IfStatement	"if ( ( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" ) )"		9360401	30					
ANR	9361005	Condition	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" )"	679:5:16717:16816	9360401	0	True				
ANR	9361006	AndExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL && strcmp ( choice -> choice , ""Default"" )"		9360401	0		&&			
ANR	9361007	EqualityExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" ) ) != NULL"		9360401	0		!=			
ANR	9361008	AssignmentExpression	"choice = ppdFindMarkedChoice ( ppd , ""zePrintRate"" )"		9360401	0		=			
ANR	9361009	Identifier	choice		9360401	0					
ANR	9361010	CallExpression	"ppdFindMarkedChoice ( ppd , ""zePrintRate"" )"		9360401	1					
ANR	9361011	Callee	ppdFindMarkedChoice		9360401	0					
ANR	9361012	Identifier	ppdFindMarkedChoice		9360401	0					
ANR	9361013	ArgumentList	ppd		9360401	1					
ANR	9361014	Argument	ppd		9360401	0					
ANR	9361015	Identifier	ppd		9360401	0					
ANR	9361016	Argument	"""zePrintRate"""		9360401	1					
ANR	9361017	PrimaryExpression	"""zePrintRate"""		9360401	0					
ANR	9361018	Identifier	NULL		9360401	1					
ANR	9361019	CallExpression	"strcmp ( choice -> choice , ""Default"" )"		9360401	1					
ANR	9361020	Callee	strcmp		9360401	0					
ANR	9361021	Identifier	strcmp		9360401	0					
ANR	9361022	ArgumentList	choice -> choice		9360401	1					
ANR	9361023	Argument	choice -> choice		9360401	0					
ANR	9361024	PtrMemberAccess	choice -> choice		9360401	0					
ANR	9361025	Identifier	choice		9360401	0					
ANR	9361026	Identifier	choice		9360401	1					
ANR	9361027	Argument	"""Default"""		9360401	1					
ANR	9361028	PrimaryExpression	"""Default"""		9360401	0					
ANR	9361029	CompoundStatement		200:1:3717:3717	9360401	1					
ANR	9361030	ExpressionStatement	val = atoi ( choice -> choice )	682:3:16825:16851	9360401	0	True				
ANR	9361031	AssignmentExpression	val = atoi ( choice -> choice )		9360401	0		=			
ANR	9361032	Identifier	val		9360401	0					
ANR	9361033	CallExpression	atoi ( choice -> choice )		9360401	1					
ANR	9361034	Callee	atoi		9360401	0					
ANR	9361035	Identifier	atoi		9360401	0					
ANR	9361036	ArgumentList	choice -> choice		9360401	1					
ANR	9361037	Argument	choice -> choice		9360401	0					
ANR	9361038	PtrMemberAccess	choice -> choice		9360401	0					
ANR	9361039	Identifier	choice		9360401	0					
ANR	9361040	Identifier	choice		9360401	1					
ANR	9361041	ExpressionStatement	"printf ( ""SPEED %d\\r\\n"" , val )"	683:3:16856:16883	9360401	1	True				
ANR	9361042	CallExpression	"printf ( ""SPEED %d\\r\\n"" , val )"		9360401	0					
ANR	9361043	Callee	printf		9360401	0					
ANR	9361044	Identifier	printf		9360401	0					
ANR	9361045	ArgumentList	"""SPEED %d\\r\\n"""		9360401	1					
ANR	9361046	Argument	"""SPEED %d\\r\\n"""		9360401	0					
ANR	9361047	PrimaryExpression	"""SPEED %d\\r\\n"""		9360401	0					
ANR	9361048	Argument	val		9360401	1					
ANR	9361049	Identifier	val		9360401	0					
ANR	9361050	IfStatement	"if ( ( choice = ppdFindMarkedChoice ( ppd , ""zeMediaTracking"" ) ) == NULL || strcmp ( choice -> choice , ""Continuous"" ) )"		9360401	31					
ANR	9361051	Condition	"( choice = ppdFindMarkedChoice ( ppd , ""zeMediaTracking"" ) ) == NULL || strcmp ( choice -> choice , ""Continuous"" )"	690:5:16938:17044	9360401	0	True				
ANR	9361052	OrExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zeMediaTracking"" ) ) == NULL || strcmp ( choice -> choice , ""Continuous"" )"		9360401	0		||			
ANR	9361053	EqualityExpression	"( choice = ppdFindMarkedChoice ( ppd , ""zeMediaTracking"" ) ) == NULL"		9360401	0		==			
ANR	9361054	AssignmentExpression	"choice = ppdFindMarkedChoice ( ppd , ""zeMediaTracking"" )"		9360401	0		=			
ANR	9361055	Identifier	choice		9360401	0					
ANR	9361056	CallExpression	"ppdFindMarkedChoice ( ppd , ""zeMediaTracking"" )"		9360401	1					
ANR	9361057	Callee	ppdFindMarkedChoice		9360401	0					
ANR	9361058	Identifier	ppdFindMarkedChoice		9360401	0					
ANR	9361059	ArgumentList	ppd		9360401	1					
ANR	9361060	Argument	ppd		9360401	0					
ANR	9361061	Identifier	ppd		9360401	0					
ANR	9361062	Argument	"""zeMediaTracking"""		9360401	1					
ANR	9361063	PrimaryExpression	"""zeMediaTracking"""		9360401	0					
ANR	9361064	Identifier	NULL		9360401	1					
ANR	9361065	CallExpression	"strcmp ( choice -> choice , ""Continuous"" )"		9360401	1					
ANR	9361066	Callee	strcmp		9360401	0					
ANR	9361067	Identifier	strcmp		9360401	0					
ANR	9361068	ArgumentList	choice -> choice		9360401	1					
ANR	9361069	Argument	choice -> choice		9360401	0					
ANR	9361070	PtrMemberAccess	choice -> choice		9360401	0					
ANR	9361071	Identifier	choice		9360401	0					
ANR	9361072	Identifier	choice		9360401	1					
ANR	9361073	Argument	"""Continuous"""		9360401	1					
ANR	9361074	PrimaryExpression	"""Continuous"""		9360401	0					
ANR	9361075	ExpressionStatement	"puts ( ""FORM\\r"" )"	692:10:17057:17071	9360401	1	True				
ANR	9361076	CallExpression	"puts ( ""FORM\\r"" )"		9360401	0					
ANR	9361077	Callee	puts		9360401	0					
ANR	9361078	Identifier	puts		9360401	0					
ANR	9361079	ArgumentList	"""FORM\\r"""		9360401	1					
ANR	9361080	Argument	"""FORM\\r"""		9360401	0					
ANR	9361081	PrimaryExpression	"""FORM\\r"""		9360401	0					
ANR	9361082	ExpressionStatement	"puts ( ""PRINT\\r"" )"	694:1:17075:17090	9360401	32	True				
ANR	9361083	CallExpression	"puts ( ""PRINT\\r"" )"		9360401	0					
ANR	9361084	Callee	puts		9360401	0					
ANR	9361085	Identifier	puts		9360401	0					
ANR	9361086	ArgumentList	"""PRINT\\r"""		9360401	1					
ANR	9361087	Argument	"""PRINT\\r"""		9360401	0					
ANR	9361088	PrimaryExpression	"""PRINT\\r"""		9360401	0					
ANR	9361089	BreakStatement	break ;	695:1:17093:17098	9360401	33	True				
ANR	9361090	Label	case INTELLITECH_PCL :	697:4:17105:17126	9360401	34	True				
ANR	9361091	Identifier	INTELLITECH_PCL		9360401	0					
ANR	9361092	ExpressionStatement	"printf ( ""\\033*rB"" )"	698:8:17136:17153	9360401	35	True				
ANR	9361093	CallExpression	"printf ( ""\\033*rB"" )"		9360401	0					
ANR	9361094	Callee	printf		9360401	0					
ANR	9361095	Identifier	printf		9360401	0					
ANR	9361096	ArgumentList	"""\\033*rB"""		9360401	1					
ANR	9361097	Argument	"""\\033*rB"""		9360401	0					
ANR	9361098	PrimaryExpression	"""\\033*rB"""		9360401	0					
ANR	9361099	ExpressionStatement	"printf ( ""\\014"" )"	699:8:17178:17192	9360401	36	True				
ANR	9361100	CallExpression	"printf ( ""\\014"" )"		9360401	0					
ANR	9361101	Callee	printf		9360401	0					
ANR	9361102	Identifier	printf		9360401	0					
ANR	9361103	ArgumentList	"""\\014"""		9360401	1					
ANR	9361104	Argument	"""\\014"""		9360401	0					
ANR	9361105	PrimaryExpression	"""\\014"""		9360401	0					
ANR	9361106	BreakStatement	break ;	700:8:17229:17234	9360401	37	True				
ANR	9361107	ExpressionStatement	fflush ( stdout )	703:2:17243:17257	9360401	3	True				
ANR	9361108	CallExpression	fflush ( stdout )		9360401	0					
ANR	9361109	Callee	fflush		9360401	0					
ANR	9361110	Identifier	fflush		9360401	0					
ANR	9361111	ArgumentList	stdout		9360401	1					
ANR	9361112	Argument	stdout		9360401	0					
ANR	9361113	Identifier	stdout		9360401	0					
ANR	9361114	ExpressionStatement	free ( Buffer )	709:2:17291:17303	9360401	4	True				
ANR	9361115	CallExpression	free ( Buffer )		9360401	0					
ANR	9361116	Callee	free		9360401	0					
ANR	9361117	Identifier	free		9360401	0					
ANR	9361118	ArgumentList	Buffer		9360401	1					
ANR	9361119	Argument	Buffer		9360401	0					
ANR	9361120	Identifier	Buffer		9360401	0					
ANR	9361121	IfStatement	if ( CompBuffer )		9360401	5					
ANR	9361122	Condition	CompBuffer	711:6:17312:17321	9360401	0	True				
ANR	9361123	Identifier	CompBuffer		9360401	0					
ANR	9361124	CompoundStatement		231:2:4223:4223	9360401	1					
ANR	9361125	ExpressionStatement	free ( CompBuffer )	713:4:17332:17348	9360401	0	True				
ANR	9361126	CallExpression	free ( CompBuffer )		9360401	0					
ANR	9361127	Callee	free		9360401	0					
ANR	9361128	Identifier	free		9360401	0					
ANR	9361129	ArgumentList	CompBuffer		9360401	1					
ANR	9361130	Argument	CompBuffer		9360401	0					
ANR	9361131	Identifier	CompBuffer		9360401	0					
ANR	9361132	ExpressionStatement	CompBuffer = NULL	714:4:17354:17371	9360401	1	True				
ANR	9361133	AssignmentExpression	CompBuffer = NULL		9360401	0		=			
ANR	9361134	Identifier	CompBuffer		9360401	0					
ANR	9361135	Identifier	NULL		9360401	1					
ANR	9361136	IfStatement	if ( LastBuffer )		9360401	6					
ANR	9361137	Condition	LastBuffer	717:6:17384:17393	9360401	0	True				
ANR	9361138	Identifier	LastBuffer		9360401	0					
ANR	9361139	CompoundStatement		237:2:4295:4295	9360401	1					
ANR	9361140	ExpressionStatement	free ( LastBuffer )	719:4:17404:17420	9360401	0	True				
ANR	9361141	CallExpression	free ( LastBuffer )		9360401	0					
ANR	9361142	Callee	free		9360401	0					
ANR	9361143	Identifier	free		9360401	0					
ANR	9361144	ArgumentList	LastBuffer		9360401	1					
ANR	9361145	Argument	LastBuffer		9360401	0					
ANR	9361146	Identifier	LastBuffer		9360401	0					
ANR	9361147	ExpressionStatement	LastBuffer = NULL	720:4:17426:17443	9360401	1	True				
ANR	9361148	AssignmentExpression	LastBuffer = NULL		9360401	0		=			
ANR	9361149	Identifier	LastBuffer		9360401	0					
ANR	9361150	Identifier	NULL		9360401	1					
ANR	9361151	ReturnType	void		9360401	1					
ANR	9361152	Identifier	EndPage		9360401	2					
ANR	9361153	ParameterList	"ppd_file_t * ppd , cups_page_header2_t * header"		9360401	3					
ANR	9361154	Parameter	ppd_file_t * ppd	480:8:13006:13020	9360401	0	True				
ANR	9361155	ParameterType	ppd_file_t *		9360401	0					
ANR	9361156	Identifier	ppd		9360401	1					
ANR	9361157	Parameter	cups_page_header2_t * header	481:8:13051:13077	9360401	1	True				
ANR	9361158	ParameterType	cups_page_header2_t *		9360401	0					
ANR	9361159	Identifier	header		9360401	1					
ANR	9361160	CFGEntryNode	ENTRY		9360401		True				
ANR	9361161	CFGExitNode	EXIT		9360401		True				
ANR	9361162	Symbol	* choice		9360401						
ANR	9361163	Symbol	stdout		9360401						
ANR	9361164	Symbol	ppdIsMarked		9360401						
ANR	9361165	Symbol	header -> cupsRowStep		9360401						
ANR	9361166	Symbol	header -> MediaType		9360401						
ANR	9361167	Symbol	ppdFindMarkedChoice		9360401						
ANR	9361168	Symbol	header -> cupsHeight		9360401						
ANR	9361169	Symbol	header -> NumCopies		9360401						
ANR	9361170	Symbol	val		9360401						
ANR	9361171	Symbol	ModelNumber		9360401						
ANR	9361172	Symbol	strcmp		9360401						
ANR	9361173	Symbol	atoi		9360401						
ANR	9361174	Symbol	Buffer		9360401						
ANR	9361175	Symbol	LastBuffer		9360401						
ANR	9361176	Symbol	NULL		9360401						
ANR	9361177	Symbol	ppd		9360401						
ANR	9361178	Symbol	* header		9360401						
ANR	9361179	Symbol	header -> cupsCompression		9360401						
ANR	9361180	Symbol	CompBuffer		9360401						
ANR	9361181	Symbol	choice -> choice		9360401						
ANR	9361182	Symbol	header		9360401						
ANR	9361183	Symbol	Canceled		9360401						
ANR	9361184	Symbol	choice		9360401						
ANR	9361185	Symbol	header -> CutMedia		9360401						
ANR	9361186	Symbol	header -> AdvanceDistance		9360401						
ANR	9361187	Function	CancelJob	729:0:17506:17625							
ANR	9361188	FunctionDef	CancelJob (int sig)		9361187	0					
ANR	9361189	CompoundStatement		731:0:17549:17625	9361187	0					
ANR	9361190	ExpressionStatement	( void ) sig	736:2:17597:17606	9361187	0	True				
ANR	9361191	CastExpression	( void ) sig		9361187	0					
ANR	9361192	CastTarget	void		9361187	0					
ANR	9361193	Identifier	sig		9361187	1					
ANR	9361194	ExpressionStatement	Canceled = 1	738:2:17611:17623	9361187	1	True				
ANR	9361195	AssignmentExpression	Canceled = 1		9361187	0		=			
ANR	9361196	Identifier	Canceled		9361187	0					
ANR	9361197	PrimaryExpression	1		9361187	1					
ANR	9361198	ReturnType	void		9361187	1					
ANR	9361199	Identifier	CancelJob		9361187	2					
ANR	9361200	ParameterList	int sig		9361187	3					
ANR	9361201	Parameter	int sig	730:10:17521:17527	9361187	0	True				
ANR	9361202	ParameterType	int		9361187	0					
ANR	9361203	Identifier	sig		9361187	1					
ANR	9361204	CFGEntryNode	ENTRY		9361187		True				
ANR	9361205	CFGExitNode	EXIT		9361187		True				
ANR	9361206	Symbol	sig		9361187						
ANR	9361207	Symbol	Canceled		9361187						
ANR	9361208	Function	OutputLine	746:0:17686:21121							
ANR	9361209	FunctionDef	"OutputLine (ppd_file_t * ppd , cups_page_header2_t * header , int y)"		9361208	0					
ANR	9361210	CompoundStatement		750:0:17863:21121	9361208	0					
ANR	9361211	IdentifierDeclStatement	int i ;	751:2:17867:17873	9361208	0	True				
ANR	9361212	IdentifierDecl	i		9361208	0					
ANR	9361213	IdentifierDeclType	int		9361208	0					
ANR	9361214	Identifier	i		9361208	1					
ANR	9361215	IdentifierDeclStatement	unsigned char * ptr ;	752:2:17897:17915	9361208	1	True				
ANR	9361216	IdentifierDecl	* ptr		9361208	0					
ANR	9361217	IdentifierDeclType	unsigned char *		9361208	0					
ANR	9361218	Identifier	ptr		9361208	1					
ANR	9361219	IdentifierDeclStatement	unsigned char * compptr ;	753:2:17947:17969	9361208	2	True				
ANR	9361220	IdentifierDecl	* compptr		9361208	0					
ANR	9361221	IdentifierDeclType	unsigned char *		9361208	0					
ANR	9361222	Identifier	compptr		9361208	1					
ANR	9361223	IdentifierDeclStatement	char repeat_char ;	754:2:18012:18029	9361208	3	True				
ANR	9361224	IdentifierDecl	repeat_char		9361208	0					
ANR	9361225	IdentifierDeclType	char		9361208	0					
ANR	9361226	Identifier	repeat_char		9361208	1					
ANR	9361227	IdentifierDeclStatement	int repeat_count ;	755:2:18059:18076	9361208	4	True				
ANR	9361228	IdentifierDecl	repeat_count		9361208	0					
ANR	9361229	IdentifierDeclType	int		9361208	0					
ANR	9361230	Identifier	repeat_count		9361208	1					
ANR	9361231	Statement	static	756:2:18117:18122	9361208	5	True				
ANR	9361232	IdentifierDeclStatement	"const char * hex = ""0123456789ABCDEF"" ;"	756:9:18124:18160	9361208	6	True				
ANR	9361233	IdentifierDecl	"* hex = ""0123456789ABCDEF"""		9361208	0					
ANR	9361234	IdentifierDeclType	const char *		9361208	0					
ANR	9361235	Identifier	hex		9361208	1					
ANR	9361236	AssignmentExpression	"* hex = ""0123456789ABCDEF"""		9361208	2		=			
ANR	9361237	Identifier	hex		9361208	0					
ANR	9361238	PrimaryExpression	"""0123456789ABCDEF"""		9361208	1					
ANR	9361239	SwitchStatement	switch ( ModelNumber )		9361208	7					
ANR	9361240	Condition	ModelNumber	760:10:18196:18206	9361208	0	True				
ANR	9361241	Identifier	ModelNumber		9361208	0					
ANR	9361242	CompoundStatement		12:2:347:347	9361208	1					
ANR	9361243	Label	case DYMO_3x0 :	762:4:18217:18231	9361208	0	True				
ANR	9361244	Identifier	DYMO_3x0		9361208	0					
ANR	9361245	IfStatement	"if ( Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine - 1 ) )"		9361208	1					
ANR	9361246	Condition	"Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine - 1 )"	767:5:18317:18397	9361208	0	True				
ANR	9361247	OrExpression	"Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine - 1 )"		9361208	0		||			
ANR	9361248	ArrayIndexing	Buffer [ 0 ]		9361208	0					
ANR	9361249	Identifier	Buffer		9361208	0					
ANR	9361250	PrimaryExpression	0		9361208	1					
ANR	9361251	CallExpression	"memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine - 1 )"		9361208	1					
ANR	9361252	Callee	memcmp		9361208	0					
ANR	9361253	Identifier	memcmp		9361208	0					
ANR	9361254	ArgumentList	Buffer		9361208	1					
ANR	9361255	Argument	Buffer		9361208	0					
ANR	9361256	Identifier	Buffer		9361208	0					
ANR	9361257	Argument	Buffer + 1		9361208	1					
ANR	9361258	AdditiveExpression	Buffer + 1		9361208	0		+			
ANR	9361259	Identifier	Buffer		9361208	0					
ANR	9361260	PrimaryExpression	1		9361208	1					
ANR	9361261	Argument	header -> cupsBytesPerLine - 1		9361208	2					
ANR	9361262	AdditiveExpression	header -> cupsBytesPerLine - 1		9361208	0		-			
ANR	9361263	PtrMemberAccess	header -> cupsBytesPerLine		9361208	0					
ANR	9361264	Identifier	header		9361208	0					
ANR	9361265	Identifier	cupsBytesPerLine		9361208	1					
ANR	9361266	PrimaryExpression	1		9361208	1					
ANR	9361267	CompoundStatement		20:1:537:537	9361208	1					
ANR	9361268	IfStatement	if ( Feed )		9361208	0					
ANR	9361269	Condition	Feed	770:14:18417:18420	9361208	0	True				
ANR	9361270	Identifier	Feed		9361208	0					
ANR	9361271	CompoundStatement		22:3:562:562	9361208	1					
ANR	9361272	WhileStatement	while ( Feed > 255 )		9361208	0					
ANR	9361273	Condition	Feed > 255	772:12:18440:18449	9361208	0	True				
ANR	9361274	RelationalExpression	Feed > 255		9361208	0		>			
ANR	9361275	Identifier	Feed		9361208	0					
ANR	9361276	PrimaryExpression	255		9361208	1					
ANR	9361277	CompoundStatement		24:5:593:593	9361208	1					
ANR	9361278	ExpressionStatement	"printf ( ""\\033f\\001%c"" , 255 )"	774:7:18466:18492	9361208	0	True				
ANR	9361279	CallExpression	"printf ( ""\\033f\\001%c"" , 255 )"		9361208	0					
ANR	9361280	Callee	printf		9361208	0					
ANR	9361281	Identifier	printf		9361208	0					
ANR	9361282	ArgumentList	"""\\033f\\001%c"""		9361208	1					
ANR	9361283	Argument	"""\\033f\\001%c"""		9361208	0					
ANR	9361284	PrimaryExpression	"""\\033f\\001%c"""		9361208	0					
ANR	9361285	Argument	255		9361208	1					
ANR	9361286	PrimaryExpression	255		9361208	0					
ANR	9361287	ExpressionStatement	Feed -= 255	775:7:18501:18512	9361208	1	True				
ANR	9361288	AssignmentExpression	Feed -= 255		9361208	0		-=			
ANR	9361289	Identifier	Feed		9361208	0					
ANR	9361290	PrimaryExpression	255		9361208	1					
ANR	9361291	ExpressionStatement	"printf ( ""\\033f\\001%c"" , Feed )"	778:5:18527:18554	9361208	1	True				
ANR	9361292	CallExpression	"printf ( ""\\033f\\001%c"" , Feed )"		9361208	0					
ANR	9361293	Callee	printf		9361208	0					
ANR	9361294	Identifier	printf		9361208	0					
ANR	9361295	ArgumentList	"""\\033f\\001%c"""		9361208	1					
ANR	9361296	Argument	"""\\033f\\001%c"""		9361208	0					
ANR	9361297	PrimaryExpression	"""\\033f\\001%c"""		9361208	0					
ANR	9361298	Argument	Feed		9361208	1					
ANR	9361299	Identifier	Feed		9361208	0					
ANR	9361300	ExpressionStatement	Feed = 0	779:5:18561:18569	9361208	2	True				
ANR	9361301	AssignmentExpression	Feed = 0		9361208	0		=			
ANR	9361302	Identifier	Feed		9361208	0					
ANR	9361303	PrimaryExpression	0		9361208	1					
ANR	9361304	ExpressionStatement	putchar ( 0x16 )	782:10:18594:18607	9361208	1	True				
ANR	9361305	CallExpression	putchar ( 0x16 )		9361208	0					
ANR	9361306	Callee	putchar		9361208	0					
ANR	9361307	Identifier	putchar		9361208	0					
ANR	9361308	ArgumentList	0x16		9361208	1					
ANR	9361309	Argument	0x16		9361208	0					
ANR	9361310	PrimaryExpression	0x16		9361208	0					
ANR	9361311	ExpressionStatement	"fwrite ( Buffer , header -> cupsBytesPerLine , 1 , stdout )"	783:3:18612:18663	9361208	2	True				
ANR	9361312	CallExpression	"fwrite ( Buffer , header -> cupsBytesPerLine , 1 , stdout )"		9361208	0					
ANR	9361313	Callee	fwrite		9361208	0					
ANR	9361314	Identifier	fwrite		9361208	0					
ANR	9361315	ArgumentList	Buffer		9361208	1					
ANR	9361316	Argument	Buffer		9361208	0					
ANR	9361317	Identifier	Buffer		9361208	0					
ANR	9361318	Argument	header -> cupsBytesPerLine		9361208	1					
ANR	9361319	PtrMemberAccess	header -> cupsBytesPerLine		9361208	0					
ANR	9361320	Identifier	header		9361208	0					
ANR	9361321	Identifier	cupsBytesPerLine		9361208	1					
ANR	9361322	Argument	1		9361208	2					
ANR	9361323	PrimaryExpression	1		9361208	0					
ANR	9361324	Argument	stdout		9361208	3					
ANR	9361325	Identifier	stdout		9361208	0					
ANR	9361326	ExpressionStatement	fflush ( stdout )	784:3:18668:18682	9361208	3	True				
ANR	9361327	CallExpression	fflush ( stdout )		9361208	0					
ANR	9361328	Callee	fflush		9361208	0					
ANR	9361329	Identifier	fflush		9361208	0					
ANR	9361330	ArgumentList	stdout		9361208	1					
ANR	9361331	Argument	stdout		9361208	0					
ANR	9361332	Identifier	stdout		9361208	0					
ANR	9361333	ElseStatement	else		9361208	0					
ANR	9361334	ExpressionStatement	Feed ++	787:10:18703:18710	9361208	0	True				
ANR	9361335	PostIncDecOperationExpression	Feed ++		9361208	0					
ANR	9361336	Identifier	Feed		9361208	0					
ANR	9361337	IncDec	++		9361208	1					
ANR	9361338	BreakStatement	break ;	788:1:18713:18718	9361208	2	True				
ANR	9361339	Label	case ZEBRA_EPL_LINE :	790:4:18725:18745	9361208	3	True				
ANR	9361340	Identifier	ZEBRA_EPL_LINE		9361208	0					
ANR	9361341	ExpressionStatement	"printf ( ""\\033g%03d"" , header -> cupsBytesPerLine )"	791:8:18755:18800	9361208	4	True				
ANR	9361342	CallExpression	"printf ( ""\\033g%03d"" , header -> cupsBytesPerLine )"		9361208	0					
ANR	9361343	Callee	printf		9361208	0					
ANR	9361344	Identifier	printf		9361208	0					
ANR	9361345	ArgumentList	"""\\033g%03d"""		9361208	1					
ANR	9361346	Argument	"""\\033g%03d"""		9361208	0					
ANR	9361347	PrimaryExpression	"""\\033g%03d"""		9361208	0					
ANR	9361348	Argument	header -> cupsBytesPerLine		9361208	1					
ANR	9361349	PtrMemberAccess	header -> cupsBytesPerLine		9361208	0					
ANR	9361350	Identifier	header		9361208	0					
ANR	9361351	Identifier	cupsBytesPerLine		9361208	1					
ANR	9361352	ExpressionStatement	"fwrite ( Buffer , 1 , header -> cupsBytesPerLine , stdout )"	792:1:18803:18854	9361208	5	True				
ANR	9361353	CallExpression	"fwrite ( Buffer , 1 , header -> cupsBytesPerLine , stdout )"		9361208	0					
ANR	9361354	Callee	fwrite		9361208	0					
ANR	9361355	Identifier	fwrite		9361208	0					
ANR	9361356	ArgumentList	Buffer		9361208	1					
ANR	9361357	Argument	Buffer		9361208	0					
ANR	9361358	Identifier	Buffer		9361208	0					
ANR	9361359	Argument	1		9361208	1					
ANR	9361360	PrimaryExpression	1		9361208	0					
ANR	9361361	Argument	header -> cupsBytesPerLine		9361208	2					
ANR	9361362	PtrMemberAccess	header -> cupsBytesPerLine		9361208	0					
ANR	9361363	Identifier	header		9361208	0					
ANR	9361364	Identifier	cupsBytesPerLine		9361208	1					
ANR	9361365	Argument	stdout		9361208	3					
ANR	9361366	Identifier	stdout		9361208	0					
ANR	9361367	ExpressionStatement	fflush ( stdout )	793:1:18857:18871	9361208	6	True				
ANR	9361368	CallExpression	fflush ( stdout )		9361208	0					
ANR	9361369	Callee	fflush		9361208	0					
ANR	9361370	Identifier	fflush		9361208	0					
ANR	9361371	ArgumentList	stdout		9361208	1					
ANR	9361372	Argument	stdout		9361208	0					
ANR	9361373	Identifier	stdout		9361208	0					
ANR	9361374	BreakStatement	break ;	794:8:18881:18886	9361208	7	True				
ANR	9361375	Label	case ZEBRA_EPL_PAGE :	796:4:18893:18913	9361208	8	True				
ANR	9361376	Identifier	ZEBRA_EPL_PAGE		9361208	0					
ANR	9361377	IfStatement	"if ( Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine ) )"		9361208	9					
ANR	9361378	Condition	"Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine )"	797:12:18927:18991	9361208	0	True				
ANR	9361379	OrExpression	"Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine )"		9361208	0		||			
ANR	9361380	ArrayIndexing	Buffer [ 0 ]		9361208	0					
ANR	9361381	Identifier	Buffer		9361208	0					
ANR	9361382	PrimaryExpression	0		9361208	1					
ANR	9361383	CallExpression	"memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine )"		9361208	1					
ANR	9361384	Callee	memcmp		9361208	0					
ANR	9361385	Identifier	memcmp		9361208	0					
ANR	9361386	ArgumentList	Buffer		9361208	1					
ANR	9361387	Argument	Buffer		9361208	0					
ANR	9361388	Identifier	Buffer		9361208	0					
ANR	9361389	Argument	Buffer + 1		9361208	1					
ANR	9361390	AdditiveExpression	Buffer + 1		9361208	0		+			
ANR	9361391	Identifier	Buffer		9361208	0					
ANR	9361392	PrimaryExpression	1		9361208	1					
ANR	9361393	Argument	header -> cupsBytesPerLine		9361208	2					
ANR	9361394	PtrMemberAccess	header -> cupsBytesPerLine		9361208	0					
ANR	9361395	Identifier	header		9361208	0					
ANR	9361396	Identifier	cupsBytesPerLine		9361208	1					
ANR	9361397	CompoundStatement		49:1:1131:1131	9361208	1					
ANR	9361398	ExpressionStatement	"printf ( ""GW0,%d,%d,1\\n"" , y , header -> cupsBytesPerLine )"	799:10:19007:19059	9361208	0	True				
ANR	9361399	CallExpression	"printf ( ""GW0,%d,%d,1\\n"" , y , header -> cupsBytesPerLine )"		9361208	0					
ANR	9361400	Callee	printf		9361208	0					
ANR	9361401	Identifier	printf		9361208	0					
ANR	9361402	ArgumentList	"""GW0,%d,%d,1\\n"""		9361208	1					
ANR	9361403	Argument	"""GW0,%d,%d,1\\n"""		9361208	0					
ANR	9361404	PrimaryExpression	"""GW0,%d,%d,1\\n"""		9361208	0					
ANR	9361405	Argument	y		9361208	1					
ANR	9361406	Identifier	y		9361208	0					
ANR	9361407	Argument	header -> cupsBytesPerLine		9361208	2					
ANR	9361408	PtrMemberAccess	header -> cupsBytesPerLine		9361208	0					
ANR	9361409	Identifier	header		9361208	0					
ANR	9361410	Identifier	cupsBytesPerLine		9361208	1					
ANR	9361411	ForStatement	"for ( i = header -> cupsBytesPerLine , ptr = Buffer ; i > 0 ; i -- , ptr ++ )"		9361208	1					
ANR	9361412	ForInit	"i = header -> cupsBytesPerLine , ptr = Buffer ;"	800:8:19069:19111	9361208	0	True				
ANR	9361413	Expression	"i = header -> cupsBytesPerLine , ptr = Buffer"		9361208	0					
ANR	9361414	AssignmentExpression	i = header -> cupsBytesPerLine		9361208	0		=			
ANR	9361415	Identifier	i		9361208	0					
ANR	9361416	PtrMemberAccess	header -> cupsBytesPerLine		9361208	1					
ANR	9361417	Identifier	header		9361208	0					
ANR	9361418	Identifier	cupsBytesPerLine		9361208	1					
ANR	9361419	AssignmentExpression	ptr = Buffer		9361208	1		=			
ANR	9361420	Identifier	ptr		9361208	0					
ANR	9361421	Identifier	Buffer		9361208	1					
ANR	9361422	Condition	i > 0	800:52:19113:19117	9361208	1	True				
ANR	9361423	RelationalExpression	i > 0		9361208	0		>			
ANR	9361424	Identifier	i		9361208	0					
ANR	9361425	PrimaryExpression	0		9361208	1					
ANR	9361426	Expression	"i -- , ptr ++"	800:59:19120:19131	9361208	2	True				
ANR	9361427	PostIncDecOperationExpression	i --		9361208	0					
ANR	9361428	Identifier	i		9361208	0					
ANR	9361429	IncDec	--		9361208	1					
ANR	9361430	PostIncDecOperationExpression	ptr ++		9361208	1					
ANR	9361431	Identifier	ptr		9361208	0					
ANR	9361432	IncDec	++		9361208	1					
ANR	9361433	ExpressionStatement	putchar ( ~ * ptr )	801:5:19139:19153	9361208	3	True				
ANR	9361434	CallExpression	putchar ( ~ * ptr )		9361208	0					
ANR	9361435	Callee	putchar		9361208	0					
ANR	9361436	Identifier	putchar		9361208	0					
ANR	9361437	ArgumentList	~ * ptr		9361208	1					
ANR	9361438	Argument	~ * ptr		9361208	0					
ANR	9361439	UnaryOperationExpression	~ * ptr		9361208	0					
ANR	9361440	UnaryOperator	~		9361208	0					
ANR	9361441	UnaryOperationExpression	* ptr		9361208	1					
ANR	9361442	UnaryOperator	*		9361208	0					
ANR	9361443	Identifier	ptr		9361208	1					
ANR	9361444	ExpressionStatement	putchar ( '\\n' )	802:3:19158:19171	9361208	2	True				
ANR	9361445	CallExpression	putchar ( '\\n' )		9361208	0					
ANR	9361446	Callee	putchar		9361208	0					
ANR	9361447	Identifier	putchar		9361208	0					
ANR	9361448	ArgumentList	'\\n'		9361208	1					
ANR	9361449	Argument	'\\n'		9361208	0					
ANR	9361450	PrimaryExpression	'\\n'		9361208	0					
ANR	9361451	ExpressionStatement	fflush ( stdout )	803:3:19176:19190	9361208	3	True				
ANR	9361452	CallExpression	fflush ( stdout )		9361208	0					
ANR	9361453	Callee	fflush		9361208	0					
ANR	9361454	Identifier	fflush		9361208	0					
ANR	9361455	ArgumentList	stdout		9361208	1					
ANR	9361456	Argument	stdout		9361208	0					
ANR	9361457	Identifier	stdout		9361208	0					
ANR	9361458	BreakStatement	break ;	805:8:19203:19208	9361208	10	True				
ANR	9361459	Label	case ZEBRA_ZPL :	807:4:19215:19230	9361208	11	True				
ANR	9361460	Identifier	ZEBRA_ZPL		9361208	0					
ANR	9361461	IfStatement	if ( LastSet )		9361208	12					
ANR	9361462	Condition	LastSet	813:12:19369:19375	9361208	0	True				
ANR	9361463	Identifier	LastSet		9361208	0					
ANR	9361464	CompoundStatement		65:1:1515:1515	9361208	1					
ANR	9361465	IfStatement	"if ( ! memcmp ( Buffer , LastBuffer , header -> cupsBytesPerLine ) )"		9361208	0					
ANR	9361466	Condition	"! memcmp ( Buffer , LastBuffer , header -> cupsBytesPerLine )"	815:7:19388:19440	9361208	0	True				
ANR	9361467	UnaryOperationExpression	"! memcmp ( Buffer , LastBuffer , header -> cupsBytesPerLine )"		9361208	0					
ANR	9361468	UnaryOperator	!		9361208	0					
ANR	9361469	CallExpression	"memcmp ( Buffer , LastBuffer , header -> cupsBytesPerLine )"		9361208	1					
ANR	9361470	Callee	memcmp		9361208	0					
ANR	9361471	Identifier	memcmp		9361208	0					
ANR	9361472	ArgumentList	Buffer		9361208	1					
ANR	9361473	Argument	Buffer		9361208	0					
ANR	9361474	Identifier	Buffer		9361208	0					
ANR	9361475	Argument	LastBuffer		9361208	1					
ANR	9361476	Identifier	LastBuffer		9361208	0					
ANR	9361477	Argument	header -> cupsBytesPerLine		9361208	2					
ANR	9361478	PtrMemberAccess	header -> cupsBytesPerLine		9361208	0					
ANR	9361479	Identifier	header		9361208	0					
ANR	9361480	Identifier	cupsBytesPerLine		9361208	1					
ANR	9361481	CompoundStatement		67:3:1582:1582	9361208	1					
ANR	9361482	ExpressionStatement	putchar ( ':' )	817:5:19453:19465	9361208	0	True				
ANR	9361483	CallExpression	putchar ( ':' )		9361208	0					
ANR	9361484	Callee	putchar		9361208	0					
ANR	9361485	Identifier	putchar		9361208	0					
ANR	9361486	ArgumentList	':'		9361208	1					
ANR	9361487	Argument	':'		9361208	0					
ANR	9361488	PrimaryExpression	':'		9361208	0					
ANR	9361489	ReturnStatement	return ;	818:5:19472:19478	9361208	1	True				
ANR	9361490	ForStatement	"for ( ptr = Buffer , compptr = CompBuffer , i = header -> cupsBytesPerLine ; i > 0 ; i -- , ptr ++ )"		9361208	13					
ANR	9361491	ForInit	"ptr = Buffer , compptr = CompBuffer , i = header -> cupsBytesPerLine ;"	826:6:19554:19618	9361208	0	True				
ANR	9361492	Expression	"ptr = Buffer , compptr = CompBuffer , i = header -> cupsBytesPerLine"		9361208	0					
ANR	9361493	AssignmentExpression	ptr = Buffer		9361208	0		=			
ANR	9361494	Identifier	ptr		9361208	0					
ANR	9361495	Identifier	Buffer		9361208	1					
ANR	9361496	Expression	"compptr = CompBuffer , i = header -> cupsBytesPerLine"		9361208	1					
ANR	9361497	AssignmentExpression	compptr = CompBuffer		9361208	0		=			
ANR	9361498	Identifier	compptr		9361208	0					
ANR	9361499	Identifier	CompBuffer		9361208	1					
ANR	9361500	AssignmentExpression	i = header -> cupsBytesPerLine		9361208	1		=			
ANR	9361501	Identifier	i		9361208	0					
ANR	9361502	PtrMemberAccess	header -> cupsBytesPerLine		9361208	1					
ANR	9361503	Identifier	header		9361208	0					
ANR	9361504	Identifier	cupsBytesPerLine		9361208	1					
ANR	9361505	Condition	i > 0	827:6:19626:19630	9361208	1	True				
ANR	9361506	RelationalExpression	i > 0		9361208	0		>			
ANR	9361507	Identifier	i		9361208	0					
ANR	9361508	PrimaryExpression	0		9361208	1					
ANR	9361509	Expression	"i -- , ptr ++"	828:6:19639:19650	9361208	2	True				
ANR	9361510	PostIncDecOperationExpression	i --		9361208	0					
ANR	9361511	Identifier	i		9361208	0					
ANR	9361512	IncDec	--		9361208	1					
ANR	9361513	PostIncDecOperationExpression	ptr ++		9361208	1					
ANR	9361514	Identifier	ptr		9361208	0					
ANR	9361515	IncDec	++		9361208	1					
ANR	9361516	CompoundStatement		80:8:1797:1797	9361208	3					
ANR	9361517	ExpressionStatement	* compptr ++ = hex [ * ptr >> 4 ]	830:3:19666:19693	9361208	0	True				
ANR	9361518	AssignmentExpression	* compptr ++ = hex [ * ptr >> 4 ]		9361208	0		=			
ANR	9361519	UnaryOperationExpression	* compptr ++		9361208	0					
ANR	9361520	UnaryOperator	*		9361208	0					
ANR	9361521	PostIncDecOperationExpression	compptr ++		9361208	1					
ANR	9361522	Identifier	compptr		9361208	0					
ANR	9361523	IncDec	++		9361208	1					
ANR	9361524	ArrayIndexing	hex [ * ptr >> 4 ]		9361208	1					
ANR	9361525	Identifier	hex		9361208	0					
ANR	9361526	ShiftExpression	* ptr >> 4		9361208	1		>>			
ANR	9361527	UnaryOperationExpression	* ptr		9361208	0					
ANR	9361528	UnaryOperator	*		9361208	0					
ANR	9361529	Identifier	ptr		9361208	1					
ANR	9361530	PrimaryExpression	4		9361208	1					
ANR	9361531	ExpressionStatement	* compptr ++ = hex [ * ptr & 15 ]	831:3:19698:19725	9361208	1	True				
ANR	9361532	AssignmentExpression	* compptr ++ = hex [ * ptr & 15 ]		9361208	0		=			
ANR	9361533	UnaryOperationExpression	* compptr ++		9361208	0					
ANR	9361534	UnaryOperator	*		9361208	0					
ANR	9361535	PostIncDecOperationExpression	compptr ++		9361208	1					
ANR	9361536	Identifier	compptr		9361208	0					
ANR	9361537	IncDec	++		9361208	1					
ANR	9361538	ArrayIndexing	hex [ * ptr & 15 ]		9361208	1					
ANR	9361539	Identifier	hex		9361208	0					
ANR	9361540	BitAndExpression	* ptr & 15		9361208	1		&			
ANR	9361541	UnaryOperationExpression	* ptr		9361208	0					
ANR	9361542	UnaryOperator	*		9361208	0					
ANR	9361543	Identifier	ptr		9361208	1					
ANR	9361544	PrimaryExpression	15		9361208	1					
ANR	9361545	ExpressionStatement	* compptr = '\\0'	834:8:19739:19754	9361208	14	True				
ANR	9361546	AssignmentExpression	* compptr = '\\0'		9361208	0		=			
ANR	9361547	UnaryOperationExpression	* compptr		9361208	0					
ANR	9361548	UnaryOperator	*		9361208	0					
ANR	9361549	Identifier	compptr		9361208	1					
ANR	9361550	PrimaryExpression	'\\0'		9361208	1					
ANR	9361551	ForStatement	"for ( compptr = CompBuffer + 1 , repeat_char = CompBuffer [ 0 ] , repeat_count = 1 ; * compptr ; compptr ++ )"		9361208	15					
ANR	9361552	ForInit	"compptr = CompBuffer + 1 , repeat_char = CompBuffer [ 0 ] , repeat_count = 1 ;"	840:6:19824:19895	9361208	0	True				
ANR	9361553	Expression	"compptr = CompBuffer + 1 , repeat_char = CompBuffer [ 0 ] , repeat_count = 1"		9361208	0					
ANR	9361554	AssignmentExpression	compptr = CompBuffer + 1		9361208	0		=			
ANR	9361555	Identifier	compptr		9361208	0					
ANR	9361556	AdditiveExpression	CompBuffer + 1		9361208	1		+			
ANR	9361557	Identifier	CompBuffer		9361208	0					
ANR	9361558	PrimaryExpression	1		9361208	1					
ANR	9361559	Expression	"repeat_char = CompBuffer [ 0 ] , repeat_count = 1"		9361208	1					
ANR	9361560	AssignmentExpression	repeat_char = CompBuffer [ 0 ]		9361208	0		=			
ANR	9361561	Identifier	repeat_char		9361208	0					
ANR	9361562	ArrayIndexing	CompBuffer [ 0 ]		9361208	1					
ANR	9361563	Identifier	CompBuffer		9361208	0					
ANR	9361564	PrimaryExpression	0		9361208	1					
ANR	9361565	AssignmentExpression	repeat_count = 1		9361208	1		=			
ANR	9361566	Identifier	repeat_count		9361208	0					
ANR	9361567	PrimaryExpression	1		9361208	1					
ANR	9361568	Condition	* compptr	841:6:19903:19910	9361208	1	True				
ANR	9361569	UnaryOperationExpression	* compptr		9361208	0					
ANR	9361570	UnaryOperator	*		9361208	0					
ANR	9361571	Identifier	compptr		9361208	1					
ANR	9361572	PostIncDecOperationExpression	compptr ++	842:6:19919:19928	9361208	2	True				
ANR	9361573	Identifier	compptr		9361208	0					
ANR	9361574	IncDec	++		9361208	1					
ANR	9361575	IfStatement	if ( * compptr == repeat_char )		9361208	3					
ANR	9361576	Condition	* compptr == repeat_char	843:7:19938:19960	9361208	0	True				
ANR	9361577	EqualityExpression	* compptr == repeat_char		9361208	0		==			
ANR	9361578	UnaryOperationExpression	* compptr		9361208	0					
ANR	9361579	UnaryOperator	*		9361208	0					
ANR	9361580	Identifier	compptr		9361208	1					
ANR	9361581	Identifier	repeat_char		9361208	1					
ANR	9361582	ExpressionStatement	repeat_count ++	844:5:19968:19983	9361208	1	True				
ANR	9361583	PostIncDecOperationExpression	repeat_count ++		9361208	0					
ANR	9361584	Identifier	repeat_count		9361208	0					
ANR	9361585	IncDec	++		9361208	1					
ANR	9361586	ElseStatement	else		9361208	0					
ANR	9361587	CompoundStatement		97:3:2132:2132	9361208	0					
ANR	9361588	ExpressionStatement	"ZPLCompress ( repeat_char , repeat_count )"	847:5:20003:20041	9361208	0	True				
ANR	9361589	CallExpression	"ZPLCompress ( repeat_char , repeat_count )"		9361208	0					
ANR	9361590	Callee	ZPLCompress		9361208	0					
ANR	9361591	Identifier	ZPLCompress		9361208	0					
ANR	9361592	ArgumentList	repeat_char		9361208	1					
ANR	9361593	Argument	repeat_char		9361208	0					
ANR	9361594	Identifier	repeat_char		9361208	0					
ANR	9361595	Argument	repeat_count		9361208	1					
ANR	9361596	Identifier	repeat_count		9361208	0					
ANR	9361597	ExpressionStatement	repeat_char = * compptr	848:5:20048:20071	9361208	1	True				
ANR	9361598	AssignmentExpression	repeat_char = * compptr		9361208	0		=			
ANR	9361599	Identifier	repeat_char		9361208	0					
ANR	9361600	UnaryOperationExpression	* compptr		9361208	1					
ANR	9361601	UnaryOperator	*		9361208	0					
ANR	9361602	Identifier	compptr		9361208	1					
ANR	9361603	ExpressionStatement	repeat_count = 1	849:5:20078:20094	9361208	2	True				
ANR	9361604	AssignmentExpression	repeat_count = 1		9361208	0		=			
ANR	9361605	Identifier	repeat_count		9361208	0					
ANR	9361606	PrimaryExpression	1		9361208	1					
ANR	9361607	IfStatement	if ( repeat_char == '0' )		9361208	16					
ANR	9361608	Condition	repeat_char == '0'	852:12:20114:20131	9361208	0	True				
ANR	9361609	EqualityExpression	repeat_char == '0'		9361208	0		==			
ANR	9361610	Identifier	repeat_char		9361208	0					
ANR	9361611	PrimaryExpression	'0'		9361208	1					
ANR	9361612	CompoundStatement		104:1:2271:2271	9361208	1					
ANR	9361613	IfStatement	if ( repeat_count & 1 )		9361208	0					
ANR	9361614	Condition	repeat_count & 1	858:7:20198:20213	9361208	0	True				
ANR	9361615	BitAndExpression	repeat_count & 1		9361208	0		&			
ANR	9361616	Identifier	repeat_count		9361208	0					
ANR	9361617	PrimaryExpression	1		9361208	1					
ANR	9361618	CompoundStatement		110:3:2355:2355	9361208	1					
ANR	9361619	ExpressionStatement	repeat_count --	860:5:20226:20241	9361208	0	True				
ANR	9361620	PostIncDecOperationExpression	repeat_count --		9361208	0					
ANR	9361621	Identifier	repeat_count		9361208	0					
ANR	9361622	IncDec	--		9361208	1					
ANR	9361623	ExpressionStatement	putchar ( '0' )	861:5:20248:20260	9361208	1	True				
ANR	9361624	CallExpression	putchar ( '0' )		9361208	0					
ANR	9361625	Callee	putchar		9361208	0					
ANR	9361626	Identifier	putchar		9361208	0					
ANR	9361627	ArgumentList	'0'		9361208	1					
ANR	9361628	Argument	'0'		9361208	0					
ANR	9361629	PrimaryExpression	'0'		9361208	0					
ANR	9361630	IfStatement	if ( repeat_count > 0 )		9361208	1					
ANR	9361631	Condition	repeat_count > 0	864:14:20282:20297	9361208	0	True				
ANR	9361632	RelationalExpression	repeat_count > 0		9361208	0		>			
ANR	9361633	Identifier	repeat_count		9361208	0					
ANR	9361634	PrimaryExpression	0		9361208	1					
ANR	9361635	ExpressionStatement	"putchar ( ',' )"	865:5:20305:20317	9361208	1	True				
ANR	9361636	CallExpression	"putchar ( ',' )"		9361208	0					
ANR	9361637	Callee	putchar		9361208	0					
ANR	9361638	Identifier	putchar		9361208	0					
ANR	9361639	ArgumentList	"','"		9361208	1					
ANR	9361640	Argument	"','"		9361208	0					
ANR	9361641	PrimaryExpression	"','"		9361208	0					
ANR	9361642	ElseStatement	else		9361208	0					
ANR	9361643	ExpressionStatement	"ZPLCompress ( repeat_char , repeat_count )"	868:3:20331:20369	9361208	0	True				
ANR	9361644	CallExpression	"ZPLCompress ( repeat_char , repeat_count )"		9361208	0					
ANR	9361645	Callee	ZPLCompress		9361208	0					
ANR	9361646	Identifier	ZPLCompress		9361208	0					
ANR	9361647	ArgumentList	repeat_char		9361208	1					
ANR	9361648	Argument	repeat_char		9361208	0					
ANR	9361649	Identifier	repeat_char		9361208	0					
ANR	9361650	Argument	repeat_count		9361208	1					
ANR	9361651	Identifier	repeat_count		9361208	0					
ANR	9361652	ExpressionStatement	fflush ( stdout )	870:1:20373:20387	9361208	17	True				
ANR	9361653	CallExpression	fflush ( stdout )		9361208	0					
ANR	9361654	Callee	fflush		9361208	0					
ANR	9361655	Identifier	fflush		9361208	0					
ANR	9361656	ArgumentList	stdout		9361208	1					
ANR	9361657	Argument	stdout		9361208	0					
ANR	9361658	Identifier	stdout		9361208	0					
ANR	9361659	ExpressionStatement	"memcpy ( LastBuffer , Buffer , header -> cupsBytesPerLine )"	876:1:20453:20505	9361208	18	True				
ANR	9361660	CallExpression	"memcpy ( LastBuffer , Buffer , header -> cupsBytesPerLine )"		9361208	0					
ANR	9361661	Callee	memcpy		9361208	0					
ANR	9361662	Identifier	memcpy		9361208	0					
ANR	9361663	ArgumentList	LastBuffer		9361208	1					
ANR	9361664	Argument	LastBuffer		9361208	0					
ANR	9361665	Identifier	LastBuffer		9361208	0					
ANR	9361666	Argument	Buffer		9361208	1					
ANR	9361667	Identifier	Buffer		9361208	0					
ANR	9361668	Argument	header -> cupsBytesPerLine		9361208	2					
ANR	9361669	PtrMemberAccess	header -> cupsBytesPerLine		9361208	0					
ANR	9361670	Identifier	header		9361208	0					
ANR	9361671	Identifier	cupsBytesPerLine		9361208	1					
ANR	9361672	ExpressionStatement	LastSet = 1	877:1:20508:20519	9361208	19	True				
ANR	9361673	AssignmentExpression	LastSet = 1		9361208	0		=			
ANR	9361674	Identifier	LastSet		9361208	0					
ANR	9361675	PrimaryExpression	1		9361208	1					
ANR	9361676	BreakStatement	break ;	878:8:20529:20534	9361208	20	True				
ANR	9361677	Label	case ZEBRA_CPCL :	880:4:20541:20557	9361208	21	True				
ANR	9361678	Identifier	ZEBRA_CPCL		9361208	0					
ANR	9361679	IfStatement	"if ( Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine ) )"		9361208	22					
ANR	9361680	Condition	"Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine )"	881:12:20571:20635	9361208	0	True				
ANR	9361681	OrExpression	"Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine )"		9361208	0		||			
ANR	9361682	ArrayIndexing	Buffer [ 0 ]		9361208	0					
ANR	9361683	Identifier	Buffer		9361208	0					
ANR	9361684	PrimaryExpression	0		9361208	1					
ANR	9361685	CallExpression	"memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine )"		9361208	1					
ANR	9361686	Callee	memcmp		9361208	0					
ANR	9361687	Identifier	memcmp		9361208	0					
ANR	9361688	ArgumentList	Buffer		9361208	1					
ANR	9361689	Argument	Buffer		9361208	0					
ANR	9361690	Identifier	Buffer		9361208	0					
ANR	9361691	Argument	Buffer + 1		9361208	1					
ANR	9361692	AdditiveExpression	Buffer + 1		9361208	0		+			
ANR	9361693	Identifier	Buffer		9361208	0					
ANR	9361694	PrimaryExpression	1		9361208	1					
ANR	9361695	Argument	header -> cupsBytesPerLine		9361208	2					
ANR	9361696	PtrMemberAccess	header -> cupsBytesPerLine		9361208	0					
ANR	9361697	Identifier	header		9361208	0					
ANR	9361698	Identifier	cupsBytesPerLine		9361208	1					
ANR	9361699	CompoundStatement		133:1:2775:2775	9361208	1					
ANR	9361700	ExpressionStatement	"printf ( ""CG %u 1 0 %d "" , header -> cupsBytesPerLine , y )"	883:3:20644:20696	9361208	0	True				
ANR	9361701	CallExpression	"printf ( ""CG %u 1 0 %d "" , header -> cupsBytesPerLine , y )"		9361208	0					
ANR	9361702	Callee	printf		9361208	0					
ANR	9361703	Identifier	printf		9361208	0					
ANR	9361704	ArgumentList	"""CG %u 1 0 %d """		9361208	1					
ANR	9361705	Argument	"""CG %u 1 0 %d """		9361208	0					
ANR	9361706	PrimaryExpression	"""CG %u 1 0 %d """		9361208	0					
ANR	9361707	Argument	header -> cupsBytesPerLine		9361208	1					
ANR	9361708	PtrMemberAccess	header -> cupsBytesPerLine		9361208	0					
ANR	9361709	Identifier	header		9361208	0					
ANR	9361710	Identifier	cupsBytesPerLine		9361208	1					
ANR	9361711	Argument	y		9361208	2					
ANR	9361712	Identifier	y		9361208	0					
ANR	9361713	ExpressionStatement	"fwrite ( Buffer , 1 , header -> cupsBytesPerLine , stdout )"	884:10:20708:20759	9361208	1	True				
ANR	9361714	CallExpression	"fwrite ( Buffer , 1 , header -> cupsBytesPerLine , stdout )"		9361208	0					
ANR	9361715	Callee	fwrite		9361208	0					
ANR	9361716	Identifier	fwrite		9361208	0					
ANR	9361717	ArgumentList	Buffer		9361208	1					
ANR	9361718	Argument	Buffer		9361208	0					
ANR	9361719	Identifier	Buffer		9361208	0					
ANR	9361720	Argument	1		9361208	1					
ANR	9361721	PrimaryExpression	1		9361208	0					
ANR	9361722	Argument	header -> cupsBytesPerLine		9361208	2					
ANR	9361723	PtrMemberAccess	header -> cupsBytesPerLine		9361208	0					
ANR	9361724	Identifier	header		9361208	0					
ANR	9361725	Identifier	cupsBytesPerLine		9361208	1					
ANR	9361726	Argument	stdout		9361208	3					
ANR	9361727	Identifier	stdout		9361208	0					
ANR	9361728	ExpressionStatement	"puts ( ""\\r"" )"	885:3:20764:20774	9361208	2	True				
ANR	9361729	CallExpression	"puts ( ""\\r"" )"		9361208	0					
ANR	9361730	Callee	puts		9361208	0					
ANR	9361731	Identifier	puts		9361208	0					
ANR	9361732	ArgumentList	"""\\r"""		9361208	1					
ANR	9361733	Argument	"""\\r"""		9361208	0					
ANR	9361734	PrimaryExpression	"""\\r"""		9361208	0					
ANR	9361735	ExpressionStatement	fflush ( stdout )	886:3:20779:20793	9361208	3	True				
ANR	9361736	CallExpression	fflush ( stdout )		9361208	0					
ANR	9361737	Callee	fflush		9361208	0					
ANR	9361738	Identifier	fflush		9361208	0					
ANR	9361739	ArgumentList	stdout		9361208	1					
ANR	9361740	Argument	stdout		9361208	0					
ANR	9361741	Identifier	stdout		9361208	0					
ANR	9361742	BreakStatement	break ;	888:1:20799:20804	9361208	23	True				
ANR	9361743	Label	case INTELLITECH_PCL :	890:4:20811:20832	9361208	24	True				
ANR	9361744	Identifier	INTELLITECH_PCL		9361208	0					
ANR	9361745	IfStatement	"if ( Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine - 1 ) )"		9361208	25					
ANR	9361746	Condition	"Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine - 1 )"	891:5:20839:20919	9361208	0	True				
ANR	9361747	OrExpression	"Buffer [ 0 ] || memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine - 1 )"		9361208	0		||			
ANR	9361748	ArrayIndexing	Buffer [ 0 ]		9361208	0					
ANR	9361749	Identifier	Buffer		9361208	0					
ANR	9361750	PrimaryExpression	0		9361208	1					
ANR	9361751	CallExpression	"memcmp ( Buffer , Buffer + 1 , header -> cupsBytesPerLine - 1 )"		9361208	1					
ANR	9361752	Callee	memcmp		9361208	0					
ANR	9361753	Identifier	memcmp		9361208	0					
ANR	9361754	ArgumentList	Buffer		9361208	1					
ANR	9361755	Argument	Buffer		9361208	0					
ANR	9361756	Identifier	Buffer		9361208	0					
ANR	9361757	Argument	Buffer + 1		9361208	1					
ANR	9361758	AdditiveExpression	Buffer + 1		9361208	0		+			
ANR	9361759	Identifier	Buffer		9361208	0					
ANR	9361760	PrimaryExpression	1		9361208	1					
ANR	9361761	Argument	header -> cupsBytesPerLine - 1		9361208	2					
ANR	9361762	AdditiveExpression	header -> cupsBytesPerLine - 1		9361208	0		-			
ANR	9361763	PtrMemberAccess	header -> cupsBytesPerLine		9361208	0					
ANR	9361764	Identifier	header		9361208	0					
ANR	9361765	Identifier	cupsBytesPerLine		9361208	1					
ANR	9361766	PrimaryExpression	1		9361208	1					
ANR	9361767	CompoundStatement		144:8:3066:3066	9361208	1					
ANR	9361768	IfStatement	if ( Feed )		9361208	0					
ANR	9361769	Condition	Feed	894:7:20939:20942	9361208	0	True				
ANR	9361770	Identifier	Feed		9361208	0					
ANR	9361771	CompoundStatement		146:3:3084:3084	9361208	1					
ANR	9361772	ExpressionStatement	"printf ( ""\\033*b%dY"" , Feed )"	896:5:20955:20980	9361208	0	True				
ANR	9361773	CallExpression	"printf ( ""\\033*b%dY"" , Feed )"		9361208	0					
ANR	9361774	Callee	printf		9361208	0					
ANR	9361775	Identifier	printf		9361208	0					
ANR	9361776	ArgumentList	"""\\033*b%dY"""		9361208	1					
ANR	9361777	Argument	"""\\033*b%dY"""		9361208	0					
ANR	9361778	PrimaryExpression	"""\\033*b%dY"""		9361208	0					
ANR	9361779	Argument	Feed		9361208	1					
ANR	9361780	Identifier	Feed		9361208	0					
ANR	9361781	ExpressionStatement	Feed = 0	897:5:20987:20998	9361208	1	True				
ANR	9361782	AssignmentExpression	Feed = 0		9361208	0		=			
ANR	9361783	Identifier	Feed		9361208	0					
ANR	9361784	PrimaryExpression	0		9361208	1					
ANR	9361785	ExpressionStatement	LastSet = 0	898:5:21005:21016	9361208	2	True				
ANR	9361786	AssignmentExpression	LastSet = 0		9361208	0		=			
ANR	9361787	Identifier	LastSet		9361208	0					
ANR	9361788	PrimaryExpression	0		9361208	1					
ANR	9361789	ExpressionStatement	"PCLCompress ( Buffer , header -> cupsBytesPerLine )"	901:10:21034:21079	9361208	1	True				
ANR	9361790	CallExpression	"PCLCompress ( Buffer , header -> cupsBytesPerLine )"		9361208	0					
ANR	9361791	Callee	PCLCompress		9361208	0					
ANR	9361792	Identifier	PCLCompress		9361208	0					
ANR	9361793	ArgumentList	Buffer		9361208	1					
ANR	9361794	Argument	Buffer		9361208	0					
ANR	9361795	Identifier	Buffer		9361208	0					
ANR	9361796	Argument	header -> cupsBytesPerLine		9361208	1					
ANR	9361797	PtrMemberAccess	header -> cupsBytesPerLine		9361208	0					
ANR	9361798	Identifier	header		9361208	0					
ANR	9361799	Identifier	cupsBytesPerLine		9361208	1					
ANR	9361800	ElseStatement	else		9361208	0					
ANR	9361801	ExpressionStatement	Feed ++	904:3:21093:21100	9361208	0	True				
ANR	9361802	PostIncDecOperationExpression	Feed ++		9361208	0					
ANR	9361803	Identifier	Feed		9361208	0					
ANR	9361804	IncDec	++		9361208	1					
ANR	9361805	BreakStatement	break ;	905:8:21110:21115	9361208	26	True				
ANR	9361806	ReturnType	void		9361208	1					
ANR	9361807	Identifier	OutputLine		9361208	2					
ANR	9361808	ParameterList	"ppd_file_t * ppd , cups_page_header2_t * header , int y"		9361208	3					
ANR	9361809	Parameter	ppd_file_t * ppd	747:11:17702:17724	9361208	0	True				
ANR	9361810	ParameterType	ppd_file_t *		9361208	0					
ANR	9361811	Identifier	ppd		9361208	1					
ANR	9361812	Parameter	cups_page_header2_t * header	748:11:17757:17783	9361208	1	True				
ANR	9361813	ParameterType	cups_page_header2_t *		9361208	0					
ANR	9361814	Identifier	header		9361208	1					
ANR	9361815	Parameter	int y	749:11:17819:17838	9361208	2	True				
ANR	9361816	ParameterType	int		9361208	0					
ANR	9361817	Identifier	y		9361208	1					
ANR	9361818	CFGEntryNode	ENTRY		9361208		True				
ANR	9361819	CFGExitNode	EXIT		9361208		True				
ANR	9361820	Symbol	* * ptr		9361208						
ANR	9361821	Symbol	stdout		9361208						
ANR	9361822	Symbol	* compptr ++		9361208						
ANR	9361823	Symbol	repeat_char		9361208						
ANR	9361824	Symbol	repeat_count		9361208						
ANR	9361825	Symbol	* compptr		9361208						
ANR	9361826	Symbol	memcmp		9361208						
ANR	9361827	Symbol	compptr		9361208						
ANR	9361828	Symbol	* ptr		9361208						
ANR	9361829	Symbol	hex		9361208						
ANR	9361830	Symbol	header -> cupsBytesPerLine		9361208						
ANR	9361831	Symbol	Feed		9361208						
ANR	9361832	Symbol	ModelNumber		9361208						
ANR	9361833	Symbol	Buffer		9361208						
ANR	9361834	Symbol	LastBuffer		9361208						
ANR	9361835	Symbol	ppd		9361208						
ANR	9361836	Symbol	LastSet		9361208						
ANR	9361837	Symbol	i		9361208						
ANR	9361838	Symbol	* header		9361208						
ANR	9361839	Symbol	ptr		9361208						
ANR	9361840	Symbol	* Buffer		9361208						
ANR	9361841	Symbol	CompBuffer		9361208						
ANR	9361842	Symbol	header		9361208						
ANR	9361843	Symbol	y		9361208						
ANR	9361844	Symbol	* hex		9361208						
ANR	9361845	Symbol	* CompBuffer		9361208						
ANR	9361846	Function	PCLCompress	914:0:21193:23582							
ANR	9361847	FunctionDef	"PCLCompress (unsigned char * line , int length)"		9361846	0					
ANR	9361848	CompoundStatement		917:0:21317:23582	9361846	0					
ANR	9361849	IdentifierDeclStatement	"unsigned char * line_ptr , * line_end , * comp_ptr , * start , * seed ;"	918:2:21321:21547	9361846	0	True				
ANR	9361850	IdentifierDecl	* line_ptr		9361846	0					
ANR	9361851	IdentifierDeclType	unsigned char *		9361846	0					
ANR	9361852	Identifier	line_ptr		9361846	1					
ANR	9361853	IdentifierDecl	* line_end		9361846	1					
ANR	9361854	IdentifierDeclType	unsigned char *		9361846	0					
ANR	9361855	Identifier	line_end		9361846	1					
ANR	9361856	IdentifierDecl	* comp_ptr		9361846	2					
ANR	9361857	IdentifierDeclType	unsigned char *		9361846	0					
ANR	9361858	Identifier	comp_ptr		9361846	1					
ANR	9361859	IdentifierDecl	* start		9361846	3					
ANR	9361860	IdentifierDeclType	unsigned char *		9361846	0					
ANR	9361861	Identifier	start		9361846	1					
ANR	9361862	IdentifierDecl	* seed		9361846	4					
ANR	9361863	IdentifierDeclType	unsigned char *		9361846	0					
ANR	9361864	Identifier	seed		9361846	1					
ANR	9361865	IdentifierDeclStatement	"int count , offset ;"	923:2:21579:21642	9361846	1	True				
ANR	9361866	IdentifierDecl	count		9361846	0					
ANR	9361867	IdentifierDeclType	int		9361846	0					
ANR	9361868	Identifier	count		9361846	1					
ANR	9361869	IdentifierDecl	offset		9361846	1					
ANR	9361870	IdentifierDeclType	int		9361846	0					
ANR	9361871	Identifier	offset		9361846	1					
ANR	9361872	ExpressionStatement	line_ptr = line	931:2:21725:21740	9361846	2	True				
ANR	9361873	AssignmentExpression	line_ptr = line		9361846	0		=			
ANR	9361874	Identifier	line_ptr		9361846	0					
ANR	9361875	Identifier	line		9361846	1					
ANR	9361876	ExpressionStatement	line_end = line + length	932:2:21744:21768	9361846	3	True				
ANR	9361877	AssignmentExpression	line_end = line + length		9361846	0		=			
ANR	9361878	Identifier	line_end		9361846	0					
ANR	9361879	AdditiveExpression	line + length		9361846	1		+			
ANR	9361880	Identifier	line		9361846	0					
ANR	9361881	Identifier	length		9361846	1					
ANR	9361882	ExpressionStatement	comp_ptr = CompBuffer	934:2:21773:21794	9361846	4	True				
ANR	9361883	AssignmentExpression	comp_ptr = CompBuffer		9361846	0		=			
ANR	9361884	Identifier	comp_ptr		9361846	0					
ANR	9361885	Identifier	CompBuffer		9361846	1					
ANR	9361886	ExpressionStatement	seed = LastBuffer	935:2:21798:21819	9361846	5	True				
ANR	9361887	AssignmentExpression	seed = LastBuffer		9361846	0		=			
ANR	9361888	Identifier	seed		9361846	0					
ANR	9361889	Identifier	LastBuffer		9361846	1					
ANR	9361890	WhileStatement	while ( line_ptr < line_end )		9361846	6					
ANR	9361891	Condition	line_ptr < line_end	937:9:21831:21849	9361846	0	True				
ANR	9361892	RelationalExpression	line_ptr < line_end		9361846	0		<			
ANR	9361893	Identifier	line_ptr		9361846	0					
ANR	9361894	Identifier	line_end		9361846	1					
ANR	9361895	CompoundStatement		22:2:536:536	9361846	1					
ANR	9361896	ExpressionStatement	start = line_ptr	943:4:21919:21935	9361846	0	True				
ANR	9361897	AssignmentExpression	start = line_ptr		9361846	0		=			
ANR	9361898	Identifier	start		9361846	0					
ANR	9361899	Identifier	line_ptr		9361846	1					
ANR	9361900	IfStatement	if ( ! LastSet )		9361846	1					
ANR	9361901	Condition	! LastSet	945:8:21946:21953	9361846	0	True				
ANR	9361902	UnaryOperationExpression	! LastSet		9361846	0					
ANR	9361903	UnaryOperator	!		9361846	0					
ANR	9361904	Identifier	LastSet		9361846	1					
ANR	9361905	CompoundStatement		30:4:642:642	9361846	1					
ANR	9361906	ExpressionStatement	offset = 0	951:6:22053:22063	9361846	0	True				
ANR	9361907	AssignmentExpression	offset = 0		9361846	0		=			
ANR	9361908	Identifier	offset		9361846	0					
ANR	9361909	PrimaryExpression	0		9361846	1					
ANR	9361910	IfStatement	if ( ( count = line_end - line_ptr ) > 8 )		9361846	1					
ANR	9361911	Condition	( count = line_end - line_ptr ) > 8	953:10:22076:22108	9361846	0	True				
ANR	9361912	RelationalExpression	( count = line_end - line_ptr ) > 8		9361846	0		>			
ANR	9361913	AssignmentExpression	count = line_end - line_ptr		9361846	0		=			
ANR	9361914	Identifier	count		9361846	0					
ANR	9361915	AdditiveExpression	line_end - line_ptr		9361846	1		-			
ANR	9361916	Identifier	line_end		9361846	0					
ANR	9361917	Identifier	line_ptr		9361846	1					
ANR	9361918	PrimaryExpression	8		9361846	1					
ANR	9361919	ExpressionStatement	count = 8	954:1:22112:22121	9361846	1	True				
ANR	9361920	AssignmentExpression	count = 8		9361846	0		=			
ANR	9361921	Identifier	count		9361846	0					
ANR	9361922	PrimaryExpression	8		9361846	1					
ANR	9361923	ExpressionStatement	line_ptr += count	956:6:22130:22147	9361846	2	True				
ANR	9361924	AssignmentExpression	line_ptr += count		9361846	0		+=			
ANR	9361925	Identifier	line_ptr		9361846	0					
ANR	9361926	Identifier	count		9361846	1					
ANR	9361927	ElseStatement	else		9361846	0					
ANR	9361928	CompoundStatement		43:4:850:850	9361846	0					
ANR	9361929	WhileStatement	while ( * line_ptr == * seed && line_ptr < line_end )		9361846	0					
ANR	9361930	Condition	* line_ptr == * seed && line_ptr < line_end	964:13:22260:22313	9361846	0	True				
ANR	9361931	AndExpression	* line_ptr == * seed && line_ptr < line_end		9361846	0		&&			
ANR	9361932	EqualityExpression	* line_ptr == * seed		9361846	0		==			
ANR	9361933	UnaryOperationExpression	* line_ptr		9361846	0					
ANR	9361934	UnaryOperator	*		9361846	0					
ANR	9361935	Identifier	line_ptr		9361846	1					
ANR	9361936	UnaryOperationExpression	* seed		9361846	1					
ANR	9361937	UnaryOperator	*		9361846	0					
ANR	9361938	Identifier	seed		9361846	1					
ANR	9361939	RelationalExpression	line_ptr < line_end		9361846	1		<			
ANR	9361940	Identifier	line_ptr		9361846	0					
ANR	9361941	Identifier	line_end		9361846	1					
ANR	9361942	CompoundStatement		50:6:1004:1004	9361846	1					
ANR	9361943	ExpressionStatement	line_ptr ++	967:8:22332:22343	9361846	0	True				
ANR	9361944	PostIncDecOperationExpression	line_ptr ++		9361846	0					
ANR	9361945	Identifier	line_ptr		9361846	0					
ANR	9361946	IncDec	++		9361846	1					
ANR	9361947	ExpressionStatement	seed ++	968:8:22353:22360	9361846	1	True				
ANR	9361948	PostIncDecOperationExpression	seed ++		9361846	0					
ANR	9361949	Identifier	seed		9361846	0					
ANR	9361950	IncDec	++		9361846	1					
ANR	9361951	IfStatement	if ( line_ptr == line_end )		9361846	1					
ANR	9361952	Condition	line_ptr == line_end	971:10:22381:22400	9361846	0	True				
ANR	9361953	EqualityExpression	line_ptr == line_end		9361846	0		==			
ANR	9361954	Identifier	line_ptr		9361846	0					
ANR	9361955	Identifier	line_end		9361846	1					
ANR	9361956	BreakStatement	break ;	972:8:22411:22416	9361846	1	True				
ANR	9361957	ExpressionStatement	offset = line_ptr - start	974:6:22425:22450	9361846	2	True				
ANR	9361958	AssignmentExpression	offset = line_ptr - start		9361846	0		=			
ANR	9361959	Identifier	offset		9361846	0					
ANR	9361960	AdditiveExpression	line_ptr - start		9361846	1		-			
ANR	9361961	Identifier	line_ptr		9361846	0					
ANR	9361962	Identifier	start		9361846	1					
ANR	9361963	ExpressionStatement	start = line_ptr	980:6:22520:22536	9361846	3	True				
ANR	9361964	AssignmentExpression	start = line_ptr		9361846	0		=			
ANR	9361965	Identifier	start		9361846	0					
ANR	9361966	Identifier	line_ptr		9361846	1					
ANR	9361967	ExpressionStatement	count = 0	981:6:22544:22553	9361846	4	True				
ANR	9361968	AssignmentExpression	count = 0		9361846	0		=			
ANR	9361969	Identifier	count		9361846	0					
ANR	9361970	PrimaryExpression	0		9361846	1					
ANR	9361971	WhileStatement	while ( * line_ptr != * seed && line_ptr < line_end && count < 8 )		9361846	5					
ANR	9361972	Condition	* line_ptr != * seed && line_ptr < line_end && count < 8	982:13:22568:22647	9361846	0	True				
ANR	9361973	AndExpression	* line_ptr != * seed && line_ptr < line_end && count < 8		9361846	0		&&			
ANR	9361974	EqualityExpression	* line_ptr != * seed		9361846	0		!=			
ANR	9361975	UnaryOperationExpression	* line_ptr		9361846	0					
ANR	9361976	UnaryOperator	*		9361846	0					
ANR	9361977	Identifier	line_ptr		9361846	1					
ANR	9361978	UnaryOperationExpression	* seed		9361846	1					
ANR	9361979	UnaryOperator	*		9361846	0					
ANR	9361980	Identifier	seed		9361846	1					
ANR	9361981	AndExpression	line_ptr < line_end && count < 8		9361846	1		&&			
ANR	9361982	RelationalExpression	line_ptr < line_end		9361846	0		<			
ANR	9361983	Identifier	line_ptr		9361846	0					
ANR	9361984	Identifier	line_end		9361846	1					
ANR	9361985	RelationalExpression	count < 8		9361846	1		<			
ANR	9361986	Identifier	count		9361846	0					
ANR	9361987	PrimaryExpression	8		9361846	1					
ANR	9361988	CompoundStatement		69:6:1338:1338	9361846	1					
ANR	9361989	ExpressionStatement	line_ptr ++	986:8:22666:22677	9361846	0	True				
ANR	9361990	PostIncDecOperationExpression	line_ptr ++		9361846	0					
ANR	9361991	Identifier	line_ptr		9361846	0					
ANR	9361992	IncDec	++		9361846	1					
ANR	9361993	ExpressionStatement	seed ++	987:8:22687:22694	9361846	1	True				
ANR	9361994	PostIncDecOperationExpression	seed ++		9361846	0					
ANR	9361995	Identifier	seed		9361846	0					
ANR	9361996	IncDec	++		9361846	1					
ANR	9361997	ExpressionStatement	count ++	988:8:22704:22712	9361846	2	True				
ANR	9361998	PostIncDecOperationExpression	count ++		9361846	0					
ANR	9361999	Identifier	count		9361846	0					
ANR	9362000	IncDec	++		9361846	1					
ANR	9362001	IfStatement	if ( offset >= 31 )		9361846	2					
ANR	9362002	Condition	offset >= 31	997:8:22838:22849	9361846	0	True				
ANR	9362003	RelationalExpression	offset >= 31		9361846	0		>=			
ANR	9362004	Identifier	offset		9361846	0					
ANR	9362005	PrimaryExpression	31		9361846	1					
ANR	9362006	CompoundStatement		82:4:1538:1538	9361846	1					
ANR	9362007	ExpressionStatement	* comp_ptr ++ = ( ( count - 1 ) << 5 ) | 31	1003:6:22918:22955	9361846	0	True				
ANR	9362008	AssignmentExpression	* comp_ptr ++ = ( ( count - 1 ) << 5 ) | 31		9361846	0		=			
ANR	9362009	UnaryOperationExpression	* comp_ptr ++		9361846	0					
ANR	9362010	UnaryOperator	*		9361846	0					
ANR	9362011	PostIncDecOperationExpression	comp_ptr ++		9361846	1					
ANR	9362012	Identifier	comp_ptr		9361846	0					
ANR	9362013	IncDec	++		9361846	1					
ANR	9362014	InclusiveOrExpression	( ( count - 1 ) << 5 ) | 31		9361846	1		|			
ANR	9362015	ShiftExpression	( count - 1 ) << 5		9361846	0		<<			
ANR	9362016	AdditiveExpression	count - 1		9361846	0		-			
ANR	9362017	Identifier	count		9361846	0					
ANR	9362018	PrimaryExpression	1		9361846	1					
ANR	9362019	PrimaryExpression	5		9361846	1					
ANR	9362020	PrimaryExpression	31		9361846	1					
ANR	9362021	ExpressionStatement	offset -= 31	1005:6:22964:22976	9361846	1	True				
ANR	9362022	AssignmentExpression	offset -= 31		9361846	0		-=			
ANR	9362023	Identifier	offset		9361846	0					
ANR	9362024	PrimaryExpression	31		9361846	1					
ANR	9362025	WhileStatement	while ( offset >= 255 )		9361846	2					
ANR	9362026	Condition	offset >= 255	1006:13:22991:23003	9361846	0	True				
ANR	9362027	RelationalExpression	offset >= 255		9361846	0		>=			
ANR	9362028	Identifier	offset		9361846	0					
ANR	9362029	PrimaryExpression	255		9361846	1					
ANR	9362030	CompoundStatement		91:6:1694:1694	9361846	1					
ANR	9362031	ExpressionStatement	* comp_ptr ++ = 255	1008:8:23022:23039	9361846	0	True				
ANR	9362032	AssignmentExpression	* comp_ptr ++ = 255		9361846	0		=			
ANR	9362033	UnaryOperationExpression	* comp_ptr ++		9361846	0					
ANR	9362034	UnaryOperator	*		9361846	0					
ANR	9362035	PostIncDecOperationExpression	comp_ptr ++		9361846	1					
ANR	9362036	Identifier	comp_ptr		9361846	0					
ANR	9362037	IncDec	++		9361846	1					
ANR	9362038	PrimaryExpression	255		9361846	1					
ANR	9362039	ExpressionStatement	offset -= 255	1009:8:23049:23065	9361846	1	True				
ANR	9362040	AssignmentExpression	offset -= 255		9361846	0		-=			
ANR	9362041	Identifier	offset		9361846	0					
ANR	9362042	PrimaryExpression	255		9361846	1					
ANR	9362043	ExpressionStatement	* comp_ptr ++ = offset	1012:6:23082:23102	9361846	3	True				
ANR	9362044	AssignmentExpression	* comp_ptr ++ = offset		9361846	0		=			
ANR	9362045	UnaryOperationExpression	* comp_ptr ++		9361846	0					
ANR	9362046	UnaryOperator	*		9361846	0					
ANR	9362047	PostIncDecOperationExpression	comp_ptr ++		9361846	1					
ANR	9362048	Identifier	comp_ptr		9361846	0					
ANR	9362049	IncDec	++		9361846	1					
ANR	9362050	Identifier	offset		9361846	1					
ANR	9362051	ElseStatement	else		9361846	0					
ANR	9362052	CompoundStatement		99:4:1805:1805	9361846	0					
ANR	9362053	ExpressionStatement	* comp_ptr ++ = ( ( count - 1 ) << 5 ) | offset	1020:6:23186:23227	9361846	0	True				
ANR	9362054	AssignmentExpression	* comp_ptr ++ = ( ( count - 1 ) << 5 ) | offset		9361846	0		=			
ANR	9362055	UnaryOperationExpression	* comp_ptr ++		9361846	0					
ANR	9362056	UnaryOperator	*		9361846	0					
ANR	9362057	PostIncDecOperationExpression	comp_ptr ++		9361846	1					
ANR	9362058	Identifier	comp_ptr		9361846	0					
ANR	9362059	IncDec	++		9361846	1					
ANR	9362060	InclusiveOrExpression	( ( count - 1 ) << 5 ) | offset		9361846	1		|			
ANR	9362061	ShiftExpression	( count - 1 ) << 5		9361846	0		<<			
ANR	9362062	AdditiveExpression	count - 1		9361846	0		-			
ANR	9362063	Identifier	count		9361846	0					
ANR	9362064	PrimaryExpression	1		9361846	1					
ANR	9362065	PrimaryExpression	5		9361846	1					
ANR	9362066	Identifier	offset		9361846	1					
ANR	9362067	ExpressionStatement	"memcpy ( comp_ptr , start , count )"	1023:4:23240:23270	9361846	3	True				
ANR	9362068	CallExpression	"memcpy ( comp_ptr , start , count )"		9361846	0					
ANR	9362069	Callee	memcpy		9361846	0					
ANR	9362070	Identifier	memcpy		9361846	0					
ANR	9362071	ArgumentList	comp_ptr		9361846	1					
ANR	9362072	Argument	comp_ptr		9361846	0					
ANR	9362073	Identifier	comp_ptr		9361846	0					
ANR	9362074	Argument	start		9361846	1					
ANR	9362075	Identifier	start		9361846	0					
ANR	9362076	Argument	count		9361846	2					
ANR	9362077	Identifier	count		9361846	0					
ANR	9362078	ExpressionStatement	comp_ptr += count	1024:4:23276:23293	9361846	4	True				
ANR	9362079	AssignmentExpression	comp_ptr += count		9361846	0		+=			
ANR	9362080	Identifier	comp_ptr		9361846	0					
ANR	9362081	Identifier	count		9361846	1					
ANR	9362082	ExpressionStatement	"printf ( ""\\033*b%dW"" , ( int ) ( comp_ptr - CompBuffer ) )"	1031:2:23359:23408	9361846	7	True				
ANR	9362083	CallExpression	"printf ( ""\\033*b%dW"" , ( int ) ( comp_ptr - CompBuffer ) )"		9361846	0					
ANR	9362084	Callee	printf		9361846	0					
ANR	9362085	Identifier	printf		9361846	0					
ANR	9362086	ArgumentList	"""\\033*b%dW"""		9361846	1					
ANR	9362087	Argument	"""\\033*b%dW"""		9361846	0					
ANR	9362088	PrimaryExpression	"""\\033*b%dW"""		9361846	0					
ANR	9362089	Argument	( int ) ( comp_ptr - CompBuffer )		9361846	1					
ANR	9362090	CastExpression	( int ) ( comp_ptr - CompBuffer )		9361846	0					
ANR	9362091	CastTarget	int		9361846	0					
ANR	9362092	AdditiveExpression	comp_ptr - CompBuffer		9361846	1		-			
ANR	9362093	Identifier	comp_ptr		9361846	0					
ANR	9362094	Identifier	CompBuffer		9361846	1					
ANR	9362095	ExpressionStatement	"fwrite ( CompBuffer , comp_ptr - CompBuffer , 1 , stdout )"	1032:2:23412:23464	9361846	8	True				
ANR	9362096	CallExpression	"fwrite ( CompBuffer , comp_ptr - CompBuffer , 1 , stdout )"		9361846	0					
ANR	9362097	Callee	fwrite		9361846	0					
ANR	9362098	Identifier	fwrite		9361846	0					
ANR	9362099	ArgumentList	CompBuffer		9361846	1					
ANR	9362100	Argument	CompBuffer		9361846	0					
ANR	9362101	Identifier	CompBuffer		9361846	0					
ANR	9362102	Argument	comp_ptr - CompBuffer		9361846	1					
ANR	9362103	AdditiveExpression	comp_ptr - CompBuffer		9361846	0		-			
ANR	9362104	Identifier	comp_ptr		9361846	0					
ANR	9362105	Identifier	CompBuffer		9361846	1					
ANR	9362106	Argument	1		9361846	2					
ANR	9362107	PrimaryExpression	1		9361846	0					
ANR	9362108	Argument	stdout		9361846	3					
ANR	9362109	Identifier	stdout		9361846	0					
ANR	9362110	ExpressionStatement	"memcpy ( LastBuffer , line , length )"	1038:2:23533:23565	9361846	9	True				
ANR	9362111	CallExpression	"memcpy ( LastBuffer , line , length )"		9361846	0					
ANR	9362112	Callee	memcpy		9361846	0					
ANR	9362113	Identifier	memcpy		9361846	0					
ANR	9362114	ArgumentList	LastBuffer		9361846	1					
ANR	9362115	Argument	LastBuffer		9361846	0					
ANR	9362116	Identifier	LastBuffer		9361846	0					
ANR	9362117	Argument	line		9361846	1					
ANR	9362118	Identifier	line		9361846	0					
ANR	9362119	Argument	length		9361846	2					
ANR	9362120	Identifier	length		9361846	0					
ANR	9362121	ExpressionStatement	LastSet = 1	1039:2:23569:23580	9361846	10	True				
ANR	9362122	AssignmentExpression	LastSet = 1		9361846	0		=			
ANR	9362123	Identifier	LastSet		9361846	0					
ANR	9362124	PrimaryExpression	1		9361846	1					
ANR	9362125	ReturnType	void		9361846	1					
ANR	9362126	Identifier	PCLCompress		9361846	2					
ANR	9362127	ParameterList	"unsigned char * line , int length"		9361846	3					
ANR	9362128	Parameter	unsigned char * line	915:12:21210:21228	9361846	0	True				
ANR	9362129	ParameterType	unsigned char *		9361846	0					
ANR	9362130	Identifier	line		9361846	1					
ANR	9362131	Parameter	int length	916:12:21270:21289	9361846	1	True				
ANR	9362132	ParameterType	int		9361846	0					
ANR	9362133	Identifier	length		9361846	1					
ANR	9362134	CFGEntryNode	ENTRY		9361846		True				
ANR	9362135	CFGExitNode	EXIT		9361846		True				
ANR	9362136	Symbol	LastBuffer		9361846						
ANR	9362137	Symbol	comp_ptr		9361846						
ANR	9362138	Symbol	* line_ptr		9361846						
ANR	9362139	Symbol	* seed		9361846						
ANR	9362140	Symbol	seed		9361846						
ANR	9362141	Symbol	offset		9361846						
ANR	9362142	Symbol	stdout		9361846						
ANR	9362143	Symbol	* comp_ptr ++		9361846						
ANR	9362144	Symbol	line		9361846						
ANR	9362145	Symbol	LastSet		9361846						
ANR	9362146	Symbol	length		9361846						
ANR	9362147	Symbol	start		9361846						
ANR	9362148	Symbol	count		9361846						
ANR	9362149	Symbol	line_end		9361846						
ANR	9362150	Symbol	CompBuffer		9361846						
ANR	9362151	Symbol	line_ptr		9361846						
ANR	9362152	Function	ZPLCompress	1047:0:23657:24472							
ANR	9362153	FunctionDef	"ZPLCompress (char repeat_char , int repeat_count)"		9362152	0					
ANR	9362154	CompoundStatement		1050:0:23788:24472	9362152	0					
ANR	9362155	IfStatement	if ( repeat_count > 1 )		9362152	0					
ANR	9362156	Condition	repeat_count > 1	1051:6:23796:23811	9362152	0	True				
ANR	9362157	RelationalExpression	repeat_count > 1		9362152	0		>			
ANR	9362158	Identifier	repeat_count		9362152	0					
ANR	9362159	PrimaryExpression	1		9362152	1					
ANR	9362160	CompoundStatement		3:2:27:27	9362152	1					
ANR	9362161	WhileStatement	while ( repeat_count >= 400 )		9362152	0					
ANR	9362162	Condition	repeat_count >= 400	1058:11:23982:24000	9362152	0	True				
ANR	9362163	RelationalExpression	repeat_count >= 400		9362152	0		>=			
ANR	9362164	Identifier	repeat_count		9362152	0					
ANR	9362165	PrimaryExpression	400		9362152	1					
ANR	9362166	CompoundStatement		10:4:218:218	9362152	1					
ANR	9362167	ExpressionStatement	putchar ( 'z' )	1060:6:24015:24027	9362152	0	True				
ANR	9362168	CallExpression	putchar ( 'z' )		9362152	0					
ANR	9362169	Callee	putchar		9362152	0					
ANR	9362170	Identifier	putchar		9362152	0					
ANR	9362171	ArgumentList	'z'		9362152	1					
ANR	9362172	Argument	'z'		9362152	0					
ANR	9362173	PrimaryExpression	'z'		9362152	0					
ANR	9362174	ExpressionStatement	repeat_count -= 400	1061:6:24035:24054	9362152	1	True				
ANR	9362175	AssignmentExpression	repeat_count -= 400		9362152	0		-=			
ANR	9362176	Identifier	repeat_count		9362152	0					
ANR	9362177	PrimaryExpression	400		9362152	1					
ANR	9362178	IfStatement	if ( repeat_count >= 20 )		9362152	1					
ANR	9362179	Condition	repeat_count >= 20	1068:8:24151:24168	9362152	0	True				
ANR	9362180	RelationalExpression	repeat_count >= 20		9362152	0		>=			
ANR	9362181	Identifier	repeat_count		9362152	0					
ANR	9362182	PrimaryExpression	20		9362152	1					
ANR	9362183	CompoundStatement		20:4:386:386	9362152	1					
ANR	9362184	ExpressionStatement	putchar ( 'f' + repeat_count / 20 )	1070:6:24183:24215	9362152	0	True				
ANR	9362185	CallExpression	putchar ( 'f' + repeat_count / 20 )		9362152	0					
ANR	9362186	Callee	putchar		9362152	0					
ANR	9362187	Identifier	putchar		9362152	0					
ANR	9362188	ArgumentList	'f' + repeat_count / 20		9362152	1					
ANR	9362189	Argument	'f' + repeat_count / 20		9362152	0					
ANR	9362190	AdditiveExpression	'f' + repeat_count / 20		9362152	0		+			
ANR	9362191	PrimaryExpression	'f'		9362152	0					
ANR	9362192	MultiplicativeExpression	repeat_count / 20		9362152	1		/			
ANR	9362193	Identifier	repeat_count		9362152	0					
ANR	9362194	PrimaryExpression	20		9362152	1					
ANR	9362195	ExpressionStatement	repeat_count %= 20	1071:6:24223:24241	9362152	1	True				
ANR	9362196	AssignmentExpression	repeat_count %= 20		9362152	0		%=			
ANR	9362197	Identifier	repeat_count		9362152	0					
ANR	9362198	PrimaryExpression	20		9362152	1					
ANR	9362199	IfStatement	if ( repeat_count > 0 )		9362152	2					
ANR	9362200	Condition	repeat_count > 0	1078:8:24339:24354	9362152	0	True				
ANR	9362201	RelationalExpression	repeat_count > 0		9362152	0		>			
ANR	9362202	Identifier	repeat_count		9362152	0					
ANR	9362203	PrimaryExpression	0		9362152	1					
ANR	9362204	ExpressionStatement	putchar ( 'F' + repeat_count )	1079:6:24363:24390	9362152	1	True				
ANR	9362205	CallExpression	putchar ( 'F' + repeat_count )		9362152	0					
ANR	9362206	Callee	putchar		9362152	0					
ANR	9362207	Identifier	putchar		9362152	0					
ANR	9362208	ArgumentList	'F' + repeat_count		9362152	1					
ANR	9362209	Argument	'F' + repeat_count		9362152	0					
ANR	9362210	AdditiveExpression	'F' + repeat_count		9362152	0		+			
ANR	9362211	PrimaryExpression	'F'		9362152	0					
ANR	9362212	Identifier	repeat_count		9362152	1					
ANR	9362213	ExpressionStatement	putchar ( repeat_char )	1086:2:24450:24470	9362152	1	True				
ANR	9362214	CallExpression	putchar ( repeat_char )		9362152	0					
ANR	9362215	Callee	putchar		9362152	0					
ANR	9362216	Identifier	putchar		9362152	0					
ANR	9362217	ArgumentList	repeat_char		9362152	1					
ANR	9362218	Argument	repeat_char		9362152	0					
ANR	9362219	Identifier	repeat_char		9362152	0					
ANR	9362220	ReturnType	void		9362152	1					
ANR	9362221	Identifier	ZPLCompress		9362152	2					
ANR	9362222	ParameterList	"char repeat_char , int repeat_count"		9362152	3					
ANR	9362223	Parameter	char repeat_char	1048:12:23674:23689	9362152	0	True				
ANR	9362224	ParameterType	char		9362152	0					
ANR	9362225	Identifier	repeat_char		9362152	1					
ANR	9362226	Parameter	int repeat_count	1049:5:23728:23744	9362152	1	True				
ANR	9362227	ParameterType	int		9362152	0					
ANR	9362228	Identifier	repeat_count		9362152	1					
ANR	9362229	CFGEntryNode	ENTRY		9362152		True				
ANR	9362230	CFGExitNode	EXIT		9362152		True				
ANR	9362231	Symbol	repeat_char		9362152						
ANR	9362232	Symbol	repeat_count		9362152						
ANR	9362233	Function	main	1094:0:24535:28672							
ANR	9362234	FunctionDef	"main (int argc , char * argv [ ])"		9362233	0					
ANR	9362235	CompoundStatement		1097:0:24681:28672	9362233	0					
ANR	9362236	IdentifierDeclStatement	int fd ;	1098:2:24685:24693	9362233	0	True				
ANR	9362237	IdentifierDecl	fd		9362233	0					
ANR	9362238	IdentifierDeclType	int		9362233	0					
ANR	9362239	Identifier	fd		9362233	1					
ANR	9362240	IdentifierDeclStatement	cups_raster_t * ras ;	1099:2:24720:24739	9362233	1	True				
ANR	9362241	IdentifierDecl	* ras		9362233	0					
ANR	9362242	IdentifierDeclType	cups_raster_t *		9362233	0					
ANR	9362243	Identifier	ras		9362233	1					
ANR	9362244	IdentifierDeclStatement	cups_page_header2_t header ;	1100:2:24777:24803	9362233	2	True				
ANR	9362245	IdentifierDecl	header		9362233	0					
ANR	9362246	IdentifierDeclType	cups_page_header2_t		9362233	0					
ANR	9362247	Identifier	header		9362233	1					
ANR	9362248	IdentifierDeclStatement	int y ;	1101:2:24836:24843	9362233	3	True				
ANR	9362249	IdentifierDecl	y		9362233	0					
ANR	9362250	IdentifierDeclType	int		9362233	0					
ANR	9362251	Identifier	y		9362233	1					
ANR	9362252	IdentifierDeclStatement	ppd_file_t * ppd ;	1102:2:24867:24883	9362233	4	True				
ANR	9362253	IdentifierDecl	* ppd		9362233	0					
ANR	9362254	IdentifierDeclType	ppd_file_t *		9362233	0					
ANR	9362255	Identifier	ppd		9362233	1					
ANR	9362256	IdentifierDeclStatement	int num_options ;	1103:2:24903:24920	9362233	5	True				
ANR	9362257	IdentifierDecl	num_options		9362233	0					
ANR	9362258	IdentifierDeclType	int		9362233	0					
ANR	9362259	Identifier	num_options		9362233	1					
ANR	9362260	IdentifierDeclStatement	cups_option_t * options ;	1104:2:24948:24971	9362233	6	True				
ANR	9362261	IdentifierDecl	* options		9362233	0					
ANR	9362262	IdentifierDeclType	cups_option_t *		9362233	0					
ANR	9362263	Identifier	options		9362233	1					
ANR	9362264	IdentifierDeclStatement	struct sigaction action ;	1106:2:25042:25065	9362233	7	True				
ANR	9362265	IdentifierDecl	action		9362233	0					
ANR	9362266	IdentifierDeclType	struct sigaction		9362233	0					
ANR	9362267	Identifier	action		9362233	1					
ANR	9362268	ExpressionStatement	"setbuf ( stderr , NULL )"	1114:2:25208:25228	9362233	8	True				
ANR	9362269	CallExpression	"setbuf ( stderr , NULL )"		9362233	0					
ANR	9362270	Callee	setbuf		9362233	0					
ANR	9362271	Identifier	setbuf		9362233	0					
ANR	9362272	ArgumentList	stderr		9362233	1					
ANR	9362273	Argument	stderr		9362233	0					
ANR	9362274	Identifier	stderr		9362233	0					
ANR	9362275	Argument	NULL		9362233	1					
ANR	9362276	Identifier	NULL		9362233	0					
ANR	9362277	IfStatement	if ( argc < 6 || argc > 7 )		9362233	9					
ANR	9362278	Condition	argc < 6 || argc > 7	1120:6:25273:25292	9362233	0	True				
ANR	9362279	OrExpression	argc < 6 || argc > 7		9362233	0		||			
ANR	9362280	RelationalExpression	argc < 6		9362233	0		<			
ANR	9362281	Identifier	argc		9362233	0					
ANR	9362282	PrimaryExpression	6		9362233	1					
ANR	9362283	RelationalExpression	argc > 7		9362233	1		>			
ANR	9362284	Identifier	argc		9362233	0					
ANR	9362285	PrimaryExpression	7		9362233	1					
ANR	9362286	CompoundStatement		25:2:615:615	9362233	1					
ANR	9362287	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""%s job-id user title copies options [file]"" ) , ""rastertolabel"" )"	1127:4:25411:25543	9362233	0	True				
ANR	9362288	CallExpression	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""%s job-id user title copies options [file]"" ) , ""rastertolabel"" )"		9362233	0					
ANR	9362289	Callee	_cupsLangPrintFilter		9362233	0					
ANR	9362290	Identifier	_cupsLangPrintFilter		9362233	0					
ANR	9362291	ArgumentList	stderr		9362233	1					
ANR	9362292	Argument	stderr		9362233	0					
ANR	9362293	Identifier	stderr		9362233	0					
ANR	9362294	Argument	"""ERROR"""		9362233	1					
ANR	9362295	PrimaryExpression	"""ERROR"""		9362233	0					
ANR	9362296	Argument	"_ ( ""%s job-id user title copies options [file]"" )"		9362233	2					
ANR	9362297	CallExpression	"_ ( ""%s job-id user title copies options [file]"" )"		9362233	0					
ANR	9362298	Callee	_		9362233	0					
ANR	9362299	Identifier	_		9362233	0					
ANR	9362300	ArgumentList	"""%s job-id user title copies options [file]"""		9362233	1					
ANR	9362301	Argument	"""%s job-id user title copies options [file]"""		9362233	0					
ANR	9362302	PrimaryExpression	"""%s job-id user title copies options [file]"""		9362233	0					
ANR	9362303	Argument	"""rastertolabel"""		9362233	3					
ANR	9362304	PrimaryExpression	"""rastertolabel"""		9362233	0					
ANR	9362305	ReturnStatement	return ( 1 ) ;	1130:4:25549:25559	9362233	1	True				
ANR	9362306	PrimaryExpression	1		9362233	0					
ANR	9362307	IfStatement	if ( argc == 7 )		9362233	10					
ANR	9362308	Condition	argc == 7	1137:6:25610:25618	9362233	0	True				
ANR	9362309	EqualityExpression	argc == 7		9362233	0		==			
ANR	9362310	Identifier	argc		9362233	0					
ANR	9362311	PrimaryExpression	7		9362233	1					
ANR	9362312	CompoundStatement		42:2:941:941	9362233	1					
ANR	9362313	IfStatement	"if ( ( fd = open ( argv [ 6 ] , O_RDONLY ) ) == - 1 )"		9362233	0					
ANR	9362314	Condition	"( fd = open ( argv [ 6 ] , O_RDONLY ) ) == - 1"	1139:8:25633:25668	9362233	0	True				
ANR	9362315	EqualityExpression	"( fd = open ( argv [ 6 ] , O_RDONLY ) ) == - 1"		9362233	0		==			
ANR	9362316	AssignmentExpression	"fd = open ( argv [ 6 ] , O_RDONLY )"		9362233	0		=			
ANR	9362317	Identifier	fd		9362233	0					
ANR	9362318	CallExpression	"open ( argv [ 6 ] , O_RDONLY )"		9362233	1					
ANR	9362319	Callee	open		9362233	0					
ANR	9362320	Identifier	open		9362233	0					
ANR	9362321	ArgumentList	argv [ 6 ]		9362233	1					
ANR	9362322	Argument	argv [ 6 ]		9362233	0					
ANR	9362323	ArrayIndexing	argv [ 6 ]		9362233	0					
ANR	9362324	Identifier	argv		9362233	0					
ANR	9362325	PrimaryExpression	6		9362233	1					
ANR	9362326	Argument	O_RDONLY		9362233	1					
ANR	9362327	Identifier	O_RDONLY		9362233	0					
ANR	9362328	UnaryOperationExpression	- 1		9362233	1					
ANR	9362329	UnaryOperator	-		9362233	0					
ANR	9362330	PrimaryExpression	1		9362233	1					
ANR	9362331	CompoundStatement		44:4:993:993	9362233	1					
ANR	9362332	ExpressionStatement	"_cupsLangPrintError ( ""ERROR"" , _ ( ""Unable to open raster file"" ) )"	1141:6:25683:25744	9362233	0	True				
ANR	9362333	CallExpression	"_cupsLangPrintError ( ""ERROR"" , _ ( ""Unable to open raster file"" ) )"		9362233	0					
ANR	9362334	Callee	_cupsLangPrintError		9362233	0					
ANR	9362335	Identifier	_cupsLangPrintError		9362233	0					
ANR	9362336	ArgumentList	"""ERROR"""		9362233	1					
ANR	9362337	Argument	"""ERROR"""		9362233	0					
ANR	9362338	PrimaryExpression	"""ERROR"""		9362233	0					
ANR	9362339	Argument	"_ ( ""Unable to open raster file"" )"		9362233	1					
ANR	9362340	CallExpression	"_ ( ""Unable to open raster file"" )"		9362233	0					
ANR	9362341	Callee	_		9362233	0					
ANR	9362342	Identifier	_		9362233	0					
ANR	9362343	ArgumentList	"""Unable to open raster file"""		9362233	1					
ANR	9362344	Argument	"""Unable to open raster file"""		9362233	0					
ANR	9362345	PrimaryExpression	"""Unable to open raster file"""		9362233	0					
ANR	9362346	ExpressionStatement	sleep ( 1 )	1142:6:25752:25760	9362233	1	True				
ANR	9362347	CallExpression	sleep ( 1 )		9362233	0					
ANR	9362348	Callee	sleep		9362233	0					
ANR	9362349	Identifier	sleep		9362233	0					
ANR	9362350	ArgumentList	1		9362233	1					
ANR	9362351	Argument	1		9362233	0					
ANR	9362352	PrimaryExpression	1		9362233	0					
ANR	9362353	ReturnStatement	return ( 1 ) ;	1143:6:25768:25778	9362233	2	True				
ANR	9362354	PrimaryExpression	1		9362233	0					
ANR	9362355	ElseStatement	else		9362233	0					
ANR	9362356	ExpressionStatement	fd = 0	1147:4:25801:25807	9362233	0	True				
ANR	9362357	AssignmentExpression	fd = 0		9362233	0		=			
ANR	9362358	Identifier	fd		9362233	0					
ANR	9362359	PrimaryExpression	0		9362233	1					
ANR	9362360	ExpressionStatement	"ras = cupsRasterOpen ( fd , CUPS_RASTER_READ )"	1149:2:25812:25854	9362233	11	True				
ANR	9362361	AssignmentExpression	"ras = cupsRasterOpen ( fd , CUPS_RASTER_READ )"		9362233	0		=			
ANR	9362362	Identifier	ras		9362233	0					
ANR	9362363	CallExpression	"cupsRasterOpen ( fd , CUPS_RASTER_READ )"		9362233	1					
ANR	9362364	Callee	cupsRasterOpen		9362233	0					
ANR	9362365	Identifier	cupsRasterOpen		9362233	0					
ANR	9362366	ArgumentList	fd		9362233	1					
ANR	9362367	Argument	fd		9362233	0					
ANR	9362368	Identifier	fd		9362233	0					
ANR	9362369	Argument	CUPS_RASTER_READ		9362233	1					
ANR	9362370	Identifier	CUPS_RASTER_READ		9362233	0					
ANR	9362371	ExpressionStatement	Canceled = 0	1156:2:25954:25966	9362233	12	True				
ANR	9362372	AssignmentExpression	Canceled = 0		9362233	0		=			
ANR	9362373	Identifier	Canceled		9362233	0					
ANR	9362374	PrimaryExpression	0		9362233	1					
ANR	9362375	ExpressionStatement	"sigset ( SIGTERM , CancelJob )"	1159:2:26042:26068	9362233	13	True				
ANR	9362376	CallExpression	"sigset ( SIGTERM , CancelJob )"		9362233	0					
ANR	9362377	Callee	sigset		9362233	0					
ANR	9362378	Identifier	sigset		9362233	0					
ANR	9362379	ArgumentList	SIGTERM		9362233	1					
ANR	9362380	Argument	SIGTERM		9362233	0					
ANR	9362381	Identifier	SIGTERM		9362233	0					
ANR	9362382	Argument	CancelJob		9362233	1					
ANR	9362383	Identifier	CancelJob		9362233	0					
ANR	9362384	ExpressionStatement	"num_options = cupsParseOptions ( argv [ 5 ] , 0 , & options )"	1174:2:26358:26410	9362233	14	True				
ANR	9362385	AssignmentExpression	"num_options = cupsParseOptions ( argv [ 5 ] , 0 , & options )"		9362233	0		=			
ANR	9362386	Identifier	num_options		9362233	0					
ANR	9362387	CallExpression	"cupsParseOptions ( argv [ 5 ] , 0 , & options )"		9362233	1					
ANR	9362388	Callee	cupsParseOptions		9362233	0					
ANR	9362389	Identifier	cupsParseOptions		9362233	0					
ANR	9362390	ArgumentList	argv [ 5 ]		9362233	1					
ANR	9362391	Argument	argv [ 5 ]		9362233	0					
ANR	9362392	ArrayIndexing	argv [ 5 ]		9362233	0					
ANR	9362393	Identifier	argv		9362233	0					
ANR	9362394	PrimaryExpression	5		9362233	1					
ANR	9362395	Argument	0		9362233	1					
ANR	9362396	PrimaryExpression	0		9362233	0					
ANR	9362397	Argument	& options		9362233	2					
ANR	9362398	UnaryOperationExpression	& options		9362233	0					
ANR	9362399	UnaryOperator	&		9362233	0					
ANR	9362400	Identifier	options		9362233	1					
ANR	9362401	ExpressionStatement	"ppd = ppdOpenFile ( getenv ( ""PPD"" ) )"	1176:2:26415:26447	9362233	15	True				
ANR	9362402	AssignmentExpression	"ppd = ppdOpenFile ( getenv ( ""PPD"" ) )"		9362233	0		=			
ANR	9362403	Identifier	ppd		9362233	0					
ANR	9362404	CallExpression	"ppdOpenFile ( getenv ( ""PPD"" ) )"		9362233	1					
ANR	9362405	Callee	ppdOpenFile		9362233	0					
ANR	9362406	Identifier	ppdOpenFile		9362233	0					
ANR	9362407	ArgumentList	"getenv ( ""PPD"" )"		9362233	1					
ANR	9362408	Argument	"getenv ( ""PPD"" )"		9362233	0					
ANR	9362409	CallExpression	"getenv ( ""PPD"" )"		9362233	0					
ANR	9362410	Callee	getenv		9362233	0					
ANR	9362411	Identifier	getenv		9362233	0					
ANR	9362412	ArgumentList	"""PPD"""		9362233	1					
ANR	9362413	Argument	"""PPD"""		9362233	0					
ANR	9362414	PrimaryExpression	"""PPD"""		9362233	0					
ANR	9362415	IfStatement	if ( ! ppd )		9362233	16					
ANR	9362416	Condition	! ppd	1177:6:26455:26458	9362233	0	True				
ANR	9362417	UnaryOperationExpression	! ppd		9362233	0					
ANR	9362418	UnaryOperator	!		9362233	0					
ANR	9362419	Identifier	ppd		9362233	1					
ANR	9362420	CompoundStatement		84:4:1829:1842	9362233	1					
ANR	9362421	IdentifierDeclStatement	ppd_status_t status ;	1179:4:26469:26488	9362233	0	True				
ANR	9362422	IdentifierDecl	status		9362233	0					
ANR	9362423	IdentifierDeclType	ppd_status_t		9362233	0					
ANR	9362424	Identifier	status		9362233	1					
ANR	9362425	IdentifierDeclStatement	int linenum ;	1180:4:26511:26524	9362233	1	True				
ANR	9362426	IdentifierDecl	linenum		9362233	0					
ANR	9362427	IdentifierDeclType	int		9362233	0					
ANR	9362428	Identifier	linenum		9362233	1					
ANR	9362429	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""The PPD file could not be opened."" ) )"	1182:4:26549:26651	9362233	2	True				
ANR	9362430	CallExpression	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""The PPD file could not be opened."" ) )"		9362233	0					
ANR	9362431	Callee	_cupsLangPrintFilter		9362233	0					
ANR	9362432	Identifier	_cupsLangPrintFilter		9362233	0					
ANR	9362433	ArgumentList	stderr		9362233	1					
ANR	9362434	Argument	stderr		9362233	0					
ANR	9362435	Identifier	stderr		9362233	0					
ANR	9362436	Argument	"""ERROR"""		9362233	1					
ANR	9362437	PrimaryExpression	"""ERROR"""		9362233	0					
ANR	9362438	Argument	"_ ( ""The PPD file could not be opened."" )"		9362233	2					
ANR	9362439	CallExpression	"_ ( ""The PPD file could not be opened."" )"		9362233	0					
ANR	9362440	Callee	_		9362233	0					
ANR	9362441	Identifier	_		9362233	0					
ANR	9362442	ArgumentList	"""The PPD file could not be opened."""		9362233	1					
ANR	9362443	Argument	"""The PPD file could not be opened."""		9362233	0					
ANR	9362444	PrimaryExpression	"""The PPD file could not be opened."""		9362233	0					
ANR	9362445	ExpressionStatement	status = ppdLastError ( & linenum )	1185:4:26658:26689	9362233	3	True				
ANR	9362446	AssignmentExpression	status = ppdLastError ( & linenum )		9362233	0		=			
ANR	9362447	Identifier	status		9362233	0					
ANR	9362448	CallExpression	ppdLastError ( & linenum )		9362233	1					
ANR	9362449	Callee	ppdLastError		9362233	0					
ANR	9362450	Identifier	ppdLastError		9362233	0					
ANR	9362451	ArgumentList	& linenum		9362233	1					
ANR	9362452	Argument	& linenum		9362233	0					
ANR	9362453	UnaryOperationExpression	& linenum		9362233	0					
ANR	9362454	UnaryOperator	&		9362233	0					
ANR	9362455	Identifier	linenum		9362233	1					
ANR	9362456	ExpressionStatement	"fprintf ( stderr , ""DEBUG: %s on line %d.\\n"" , ppdErrorString ( status ) , linenum )"	1187:4:26696:26771	9362233	4	True				
ANR	9362457	CallExpression	"fprintf ( stderr , ""DEBUG: %s on line %d.\\n"" , ppdErrorString ( status ) , linenum )"		9362233	0					
ANR	9362458	Callee	fprintf		9362233	0					
ANR	9362459	Identifier	fprintf		9362233	0					
ANR	9362460	ArgumentList	stderr		9362233	1					
ANR	9362461	Argument	stderr		9362233	0					
ANR	9362462	Identifier	stderr		9362233	0					
ANR	9362463	Argument	"""DEBUG: %s on line %d.\\n"""		9362233	1					
ANR	9362464	PrimaryExpression	"""DEBUG: %s on line %d.\\n"""		9362233	0					
ANR	9362465	Argument	ppdErrorString ( status )		9362233	2					
ANR	9362466	CallExpression	ppdErrorString ( status )		9362233	0					
ANR	9362467	Callee	ppdErrorString		9362233	0					
ANR	9362468	Identifier	ppdErrorString		9362233	0					
ANR	9362469	ArgumentList	status		9362233	1					
ANR	9362470	Argument	status		9362233	0					
ANR	9362471	Identifier	status		9362233	0					
ANR	9362472	Argument	linenum		9362233	3					
ANR	9362473	Identifier	linenum		9362233	0					
ANR	9362474	ReturnStatement	return ( 1 ) ;	1189:4:26778:26788	9362233	5	True				
ANR	9362475	PrimaryExpression	1		9362233	0					
ANR	9362476	ExpressionStatement	ppdMarkDefaults ( ppd )	1192:2:26797:26817	9362233	17	True				
ANR	9362477	CallExpression	ppdMarkDefaults ( ppd )		9362233	0					
ANR	9362478	Callee	ppdMarkDefaults		9362233	0					
ANR	9362479	Identifier	ppdMarkDefaults		9362233	0					
ANR	9362480	ArgumentList	ppd		9362233	1					
ANR	9362481	Argument	ppd		9362233	0					
ANR	9362482	Identifier	ppd		9362233	0					
ANR	9362483	ExpressionStatement	"cupsMarkOptions ( ppd , num_options , options )"	1193:2:26821:26863	9362233	18	True				
ANR	9362484	CallExpression	"cupsMarkOptions ( ppd , num_options , options )"		9362233	0					
ANR	9362485	Callee	cupsMarkOptions		9362233	0					
ANR	9362486	Identifier	cupsMarkOptions		9362233	0					
ANR	9362487	ArgumentList	ppd		9362233	1					
ANR	9362488	Argument	ppd		9362233	0					
ANR	9362489	Identifier	ppd		9362233	0					
ANR	9362490	Argument	num_options		9362233	1					
ANR	9362491	Identifier	num_options		9362233	0					
ANR	9362492	Argument	options		9362233	2					
ANR	9362493	Identifier	options		9362233	0					
ANR	9362494	ExpressionStatement	Setup ( ppd )	1199:2:26913:26923	9362233	19	True				
ANR	9362495	CallExpression	Setup ( ppd )		9362233	0					
ANR	9362496	Callee	Setup		9362233	0					
ANR	9362497	Identifier	Setup		9362233	0					
ANR	9362498	ArgumentList	ppd		9362233	1					
ANR	9362499	Argument	ppd		9362233	0					
ANR	9362500	Identifier	ppd		9362233	0					
ANR	9362501	ExpressionStatement	Page = 0	1205:2:26969:26977	9362233	20	True				
ANR	9362502	AssignmentExpression	Page = 0		9362233	0		=			
ANR	9362503	Identifier	Page		9362233	0					
ANR	9362504	PrimaryExpression	0		9362233	1					
ANR	9362505	WhileStatement	"while ( cupsRasterReadHeader2 ( ras , & header ) )"		9362233	21					
ANR	9362506	Condition	"cupsRasterReadHeader2 ( ras , & header )"	1207:9:26989:27023	9362233	0	True				
ANR	9362507	CallExpression	"cupsRasterReadHeader2 ( ras , & header )"		9362233	0					
ANR	9362508	Callee	cupsRasterReadHeader2		9362233	0					
ANR	9362509	Identifier	cupsRasterReadHeader2		9362233	0					
ANR	9362510	ArgumentList	ras		9362233	1					
ANR	9362511	Argument	ras		9362233	0					
ANR	9362512	Identifier	ras		9362233	0					
ANR	9362513	Argument	& header		9362233	1					
ANR	9362514	UnaryOperationExpression	& header		9362233	0					
ANR	9362515	UnaryOperator	&		9362233	0					
ANR	9362516	Identifier	header		9362233	1					
ANR	9362517	CompoundStatement		112:2:2346:2346	9362233	1					
ANR	9362518	IfStatement	if ( Canceled )		9362233	0					
ANR	9362519	Condition	Canceled	1213:8:27124:27131	9362233	0	True				
ANR	9362520	Identifier	Canceled		9362233	0					
ANR	9362521	BreakStatement	break ;	1214:6:27140:27145	9362233	1	True				
ANR	9362522	ExpressionStatement	Page ++	1216:4:27152:27159	9362233	1	True				
ANR	9362523	PostIncDecOperationExpression	Page ++		9362233	0					
ANR	9362524	Identifier	Page		9362233	0					
ANR	9362525	IncDec	++		9362233	1					
ANR	9362526	ExpressionStatement	"fprintf ( stderr , ""PAGE: %d 1\\n"" , Page )"	1218:4:27166:27203	9362233	2	True				
ANR	9362527	CallExpression	"fprintf ( stderr , ""PAGE: %d 1\\n"" , Page )"		9362233	0					
ANR	9362528	Callee	fprintf		9362233	0					
ANR	9362529	Identifier	fprintf		9362233	0					
ANR	9362530	ArgumentList	stderr		9362233	1					
ANR	9362531	Argument	stderr		9362233	0					
ANR	9362532	Identifier	stderr		9362233	0					
ANR	9362533	Argument	"""PAGE: %d 1\\n"""		9362233	1					
ANR	9362534	PrimaryExpression	"""PAGE: %d 1\\n"""		9362233	0					
ANR	9362535	Argument	Page		9362233	2					
ANR	9362536	Identifier	Page		9362233	0					
ANR	9362537	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Starting page %d."" ) , Page )"	1219:4:27209:27275	9362233	3	True				
ANR	9362538	CallExpression	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Starting page %d."" ) , Page )"		9362233	0					
ANR	9362539	Callee	_cupsLangPrintFilter		9362233	0					
ANR	9362540	Identifier	_cupsLangPrintFilter		9362233	0					
ANR	9362541	ArgumentList	stderr		9362233	1					
ANR	9362542	Argument	stderr		9362233	0					
ANR	9362543	Identifier	stderr		9362233	0					
ANR	9362544	Argument	"""INFO"""		9362233	1					
ANR	9362545	PrimaryExpression	"""INFO"""		9362233	0					
ANR	9362546	Argument	"_ ( ""Starting page %d."" )"		9362233	2					
ANR	9362547	CallExpression	"_ ( ""Starting page %d."" )"		9362233	0					
ANR	9362548	Callee	_		9362233	0					
ANR	9362549	Identifier	_		9362233	0					
ANR	9362550	ArgumentList	"""Starting page %d."""		9362233	1					
ANR	9362551	Argument	"""Starting page %d."""		9362233	0					
ANR	9362552	PrimaryExpression	"""Starting page %d."""		9362233	0					
ANR	9362553	Argument	Page		9362233	3					
ANR	9362554	Identifier	Page		9362233	0					
ANR	9362555	ExpressionStatement	"StartPage ( ppd , & header )"	1225:4:27320:27343	9362233	4	True				
ANR	9362556	CallExpression	"StartPage ( ppd , & header )"		9362233	0					
ANR	9362557	Callee	StartPage		9362233	0					
ANR	9362558	Identifier	StartPage		9362233	0					
ANR	9362559	ArgumentList	ppd		9362233	1					
ANR	9362560	Argument	ppd		9362233	0					
ANR	9362561	Identifier	ppd		9362233	0					
ANR	9362562	Argument	& header		9362233	1					
ANR	9362563	UnaryOperationExpression	& header		9362233	0					
ANR	9362564	UnaryOperator	&		9362233	0					
ANR	9362565	Identifier	header		9362233	1					
ANR	9362566	ForStatement	for ( y = 0 ; y < header . cupsHeight && ! Canceled ; y ++ )		9362233	5					
ANR	9362567	ForInit	y = 0 ;	1231:9:27409:27414	9362233	0	True				
ANR	9362568	AssignmentExpression	y = 0		9362233	0		=			
ANR	9362569	Identifier	y		9362233	0					
ANR	9362570	PrimaryExpression	0		9362233	1					
ANR	9362571	Condition	y < header . cupsHeight && ! Canceled	1231:16:27416:27449	9362233	1	True				
ANR	9362572	AndExpression	y < header . cupsHeight && ! Canceled		9362233	0		&&			
ANR	9362573	RelationalExpression	y < header . cupsHeight		9362233	0		<			
ANR	9362574	Identifier	y		9362233	0					
ANR	9362575	MemberAccess	header . cupsHeight		9362233	1					
ANR	9362576	Identifier	header		9362233	0					
ANR	9362577	Identifier	cupsHeight		9362233	1					
ANR	9362578	UnaryOperationExpression	! Canceled		9362233	1					
ANR	9362579	UnaryOperator	!		9362233	0					
ANR	9362580	Identifier	Canceled		9362233	1					
ANR	9362581	PostIncDecOperationExpression	y ++	1231:52:27452:27455	9362233	2	True				
ANR	9362582	Identifier	y		9362233	0					
ANR	9362583	IncDec	++		9362233	1					
ANR	9362584	CompoundStatement		136:4:2780:2780	9362233	3					
ANR	9362585	IfStatement	if ( Canceled )		9362233	0					
ANR	9362586	Condition	Canceled	1237:10:27548:27555	9362233	0	True				
ANR	9362587	Identifier	Canceled		9362233	0					
ANR	9362588	BreakStatement	break ;	1238:1:27559:27564	9362233	1	True				
ANR	9362589	IfStatement	if ( ( y & 15 ) == 0 )		9362233	1					
ANR	9362590	Condition	( y & 15 ) == 0	1240:10:27577:27589	9362233	0	True				
ANR	9362591	EqualityExpression	( y & 15 ) == 0		9362233	0		==			
ANR	9362592	BitAndExpression	y & 15		9362233	0		&			
ANR	9362593	Identifier	y		9362233	0					
ANR	9362594	PrimaryExpression	15		9362233	1					
ANR	9362595	PrimaryExpression	0		9362233	1					
ANR	9362596	CompoundStatement		145:6:2916:2916	9362233	1					
ANR	9362597	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Printing page %d, %d%% complete."" ) , Page , 100 * y / header . cupsHeight )"	1242:8:27608:27748	9362233	0	True				
ANR	9362598	CallExpression	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Printing page %d, %d%% complete."" ) , Page , 100 * y / header . cupsHeight )"		9362233	0					
ANR	9362599	Callee	_cupsLangPrintFilter		9362233	0					
ANR	9362600	Identifier	_cupsLangPrintFilter		9362233	0					
ANR	9362601	ArgumentList	stderr		9362233	1					
ANR	9362602	Argument	stderr		9362233	0					
ANR	9362603	Identifier	stderr		9362233	0					
ANR	9362604	Argument	"""INFO"""		9362233	1					
ANR	9362605	PrimaryExpression	"""INFO"""		9362233	0					
ANR	9362606	Argument	"_ ( ""Printing page %d, %d%% complete."" )"		9362233	2					
ANR	9362607	CallExpression	"_ ( ""Printing page %d, %d%% complete."" )"		9362233	0					
ANR	9362608	Callee	_		9362233	0					
ANR	9362609	Identifier	_		9362233	0					
ANR	9362610	ArgumentList	"""Printing page %d, %d%% complete."""		9362233	1					
ANR	9362611	Argument	"""Printing page %d, %d%% complete."""		9362233	0					
ANR	9362612	PrimaryExpression	"""Printing page %d, %d%% complete."""		9362233	0					
ANR	9362613	Argument	Page		9362233	3					
ANR	9362614	Identifier	Page		9362233	0					
ANR	9362615	Argument	100 * y / header . cupsHeight		9362233	4					
ANR	9362616	MultiplicativeExpression	100 * y / header . cupsHeight		9362233	0		*			
ANR	9362617	PrimaryExpression	100		9362233	0					
ANR	9362618	MultiplicativeExpression	y / header . cupsHeight		9362233	1		/			
ANR	9362619	Identifier	y		9362233	0					
ANR	9362620	MemberAccess	header . cupsHeight		9362233	1					
ANR	9362621	Identifier	header		9362233	0					
ANR	9362622	Identifier	cupsHeight		9362233	1					
ANR	9362623	ExpressionStatement	"fprintf ( stderr , ""ATTR: job-media-progress=%d\\n"" , 100 * y / header . cupsHeight )"	1245:8:27758:27837	9362233	1	True				
ANR	9362624	CallExpression	"fprintf ( stderr , ""ATTR: job-media-progress=%d\\n"" , 100 * y / header . cupsHeight )"		9362233	0					
ANR	9362625	Callee	fprintf		9362233	0					
ANR	9362626	Identifier	fprintf		9362233	0					
ANR	9362627	ArgumentList	stderr		9362233	1					
ANR	9362628	Argument	stderr		9362233	0					
ANR	9362629	Identifier	stderr		9362233	0					
ANR	9362630	Argument	"""ATTR: job-media-progress=%d\\n"""		9362233	1					
ANR	9362631	PrimaryExpression	"""ATTR: job-media-progress=%d\\n"""		9362233	0					
ANR	9362632	Argument	100 * y / header . cupsHeight		9362233	2					
ANR	9362633	MultiplicativeExpression	100 * y / header . cupsHeight		9362233	0		*			
ANR	9362634	PrimaryExpression	100		9362233	0					
ANR	9362635	MultiplicativeExpression	y / header . cupsHeight		9362233	1		/			
ANR	9362636	Identifier	y		9362233	0					
ANR	9362637	MemberAccess	header . cupsHeight		9362233	1					
ANR	9362638	Identifier	header		9362233	0					
ANR	9362639	Identifier	cupsHeight		9362233	1					
ANR	9362640	IfStatement	"if ( cupsRasterReadPixels ( ras , Buffer , header . cupsBytesPerLine ) < 1 )"		9362233	2					
ANR	9362641	Condition	"cupsRasterReadPixels ( ras , Buffer , header . cupsBytesPerLine ) < 1"	1253:10:27911:27972	9362233	0	True				
ANR	9362642	RelationalExpression	"cupsRasterReadPixels ( ras , Buffer , header . cupsBytesPerLine ) < 1"		9362233	0		<			
ANR	9362643	CallExpression	"cupsRasterReadPixels ( ras , Buffer , header . cupsBytesPerLine )"		9362233	0					
ANR	9362644	Callee	cupsRasterReadPixels		9362233	0					
ANR	9362645	Identifier	cupsRasterReadPixels		9362233	0					
ANR	9362646	ArgumentList	ras		9362233	1					
ANR	9362647	Argument	ras		9362233	0					
ANR	9362648	Identifier	ras		9362233	0					
ANR	9362649	Argument	Buffer		9362233	1					
ANR	9362650	Identifier	Buffer		9362233	0					
ANR	9362651	Argument	header . cupsBytesPerLine		9362233	2					
ANR	9362652	MemberAccess	header . cupsBytesPerLine		9362233	0					
ANR	9362653	Identifier	header		9362233	0					
ANR	9362654	Identifier	cupsBytesPerLine		9362233	1					
ANR	9362655	PrimaryExpression	1		9362233	1					
ANR	9362656	BreakStatement	break ;	1254:8:27983:27988	9362233	1	True				
ANR	9362657	ExpressionStatement	"OutputLine ( ppd , & header , y )"	1260:6:28050:28077	9362233	3	True				
ANR	9362658	CallExpression	"OutputLine ( ppd , & header , y )"		9362233	0					
ANR	9362659	Callee	OutputLine		9362233	0					
ANR	9362660	Identifier	OutputLine		9362233	0					
ANR	9362661	ArgumentList	ppd		9362233	1					
ANR	9362662	Argument	ppd		9362233	0					
ANR	9362663	Identifier	ppd		9362233	0					
ANR	9362664	Argument	& header		9362233	1					
ANR	9362665	UnaryOperationExpression	& header		9362233	0					
ANR	9362666	UnaryOperator	&		9362233	0					
ANR	9362667	Identifier	header		9362233	1					
ANR	9362668	Argument	y		9362233	2					
ANR	9362669	Identifier	y		9362233	0					
ANR	9362670	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Finished page %d."" ) , Page )"	1267:4:28128:28194	9362233	6	True				
ANR	9362671	CallExpression	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Finished page %d."" ) , Page )"		9362233	0					
ANR	9362672	Callee	_cupsLangPrintFilter		9362233	0					
ANR	9362673	Identifier	_cupsLangPrintFilter		9362233	0					
ANR	9362674	ArgumentList	stderr		9362233	1					
ANR	9362675	Argument	stderr		9362233	0					
ANR	9362676	Identifier	stderr		9362233	0					
ANR	9362677	Argument	"""INFO"""		9362233	1					
ANR	9362678	PrimaryExpression	"""INFO"""		9362233	0					
ANR	9362679	Argument	"_ ( ""Finished page %d."" )"		9362233	2					
ANR	9362680	CallExpression	"_ ( ""Finished page %d."" )"		9362233	0					
ANR	9362681	Callee	_		9362233	0					
ANR	9362682	Identifier	_		9362233	0					
ANR	9362683	ArgumentList	"""Finished page %d."""		9362233	1					
ANR	9362684	Argument	"""Finished page %d."""		9362233	0					
ANR	9362685	PrimaryExpression	"""Finished page %d."""		9362233	0					
ANR	9362686	Argument	Page		9362233	3					
ANR	9362687	Identifier	Page		9362233	0					
ANR	9362688	ExpressionStatement	"EndPage ( ppd , & header )"	1269:4:28201:28222	9362233	7	True				
ANR	9362689	CallExpression	"EndPage ( ppd , & header )"		9362233	0					
ANR	9362690	Callee	EndPage		9362233	0					
ANR	9362691	Identifier	EndPage		9362233	0					
ANR	9362692	ArgumentList	ppd		9362233	1					
ANR	9362693	Argument	ppd		9362233	0					
ANR	9362694	Identifier	ppd		9362233	0					
ANR	9362695	Argument	& header		9362233	1					
ANR	9362696	UnaryOperationExpression	& header		9362233	0					
ANR	9362697	UnaryOperator	&		9362233	0					
ANR	9362698	Identifier	header		9362233	1					
ANR	9362699	IfStatement	if ( Canceled )		9362233	8					
ANR	9362700	Condition	Canceled	1271:8:28233:28240	9362233	0	True				
ANR	9362701	Identifier	Canceled		9362233	0					
ANR	9362702	BreakStatement	break ;	1272:6:28249:28254	9362233	1	True				
ANR	9362703	ExpressionStatement	cupsRasterClose ( ras )	1279:2:28304:28324	9362233	22	True				
ANR	9362704	CallExpression	cupsRasterClose ( ras )		9362233	0					
ANR	9362705	Callee	cupsRasterClose		9362233	0					
ANR	9362706	Identifier	cupsRasterClose		9362233	0					
ANR	9362707	ArgumentList	ras		9362233	1					
ANR	9362708	Argument	ras		9362233	0					
ANR	9362709	Identifier	ras		9362233	0					
ANR	9362710	IfStatement	if ( fd != 0 )		9362233	23					
ANR	9362711	Condition	fd != 0	1280:6:28332:28338	9362233	0	True				
ANR	9362712	EqualityExpression	fd != 0		9362233	0		!=			
ANR	9362713	Identifier	fd		9362233	0					
ANR	9362714	PrimaryExpression	0		9362233	1					
ANR	9362715	ExpressionStatement	close ( fd )	1281:4:28345:28354	9362233	1	True				
ANR	9362716	CallExpression	close ( fd )		9362233	0					
ANR	9362717	Callee	close		9362233	0					
ANR	9362718	Identifier	close		9362233	0					
ANR	9362719	ArgumentList	fd		9362233	1					
ANR	9362720	Argument	fd		9362233	0					
ANR	9362721	Identifier	fd		9362233	0					
ANR	9362722	ExpressionStatement	ppdClose ( ppd )	1287:2:28416:28429	9362233	24	True				
ANR	9362723	CallExpression	ppdClose ( ppd )		9362233	0					
ANR	9362724	Callee	ppdClose		9362233	0					
ANR	9362725	Identifier	ppdClose		9362233	0					
ANR	9362726	ArgumentList	ppd		9362233	1					
ANR	9362727	Argument	ppd		9362233	0					
ANR	9362728	Identifier	ppd		9362233	0					
ANR	9362729	ExpressionStatement	"cupsFreeOptions ( num_options , options )"	1288:2:28433:28470	9362233	25	True				
ANR	9362730	CallExpression	"cupsFreeOptions ( num_options , options )"		9362233	0					
ANR	9362731	Callee	cupsFreeOptions		9362233	0					
ANR	9362732	Identifier	cupsFreeOptions		9362233	0					
ANR	9362733	ArgumentList	num_options		9362233	1					
ANR	9362734	Argument	num_options		9362233	0					
ANR	9362735	Identifier	num_options		9362233	0					
ANR	9362736	Argument	options		9362233	1					
ANR	9362737	Identifier	options		9362233	0					
ANR	9362738	IfStatement	if ( Page == 0 )		9362233	26					
ANR	9362739	Condition	Page == 0	1294:6:28544:28552	9362233	0	True				
ANR	9362740	EqualityExpression	Page == 0		9362233	0		==			
ANR	9362741	Identifier	Page		9362233	0					
ANR	9362742	PrimaryExpression	0		9362233	1					
ANR	9362743	CompoundStatement		199:2:3875:3875	9362233	1					
ANR	9362744	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""No pages were found."" ) )"	1296:4:28563:28627	9362233	0	True				
ANR	9362745	CallExpression	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""No pages were found."" ) )"		9362233	0					
ANR	9362746	Callee	_cupsLangPrintFilter		9362233	0					
ANR	9362747	Identifier	_cupsLangPrintFilter		9362233	0					
ANR	9362748	ArgumentList	stderr		9362233	1					
ANR	9362749	Argument	stderr		9362233	0					
ANR	9362750	Identifier	stderr		9362233	0					
ANR	9362751	Argument	"""ERROR"""		9362233	1					
ANR	9362752	PrimaryExpression	"""ERROR"""		9362233	0					
ANR	9362753	Argument	"_ ( ""No pages were found."" )"		9362233	2					
ANR	9362754	CallExpression	"_ ( ""No pages were found."" )"		9362233	0					
ANR	9362755	Callee	_		9362233	0					
ANR	9362756	Identifier	_		9362233	0					
ANR	9362757	ArgumentList	"""No pages were found."""		9362233	1					
ANR	9362758	Argument	"""No pages were found."""		9362233	0					
ANR	9362759	PrimaryExpression	"""No pages were found."""		9362233	0					
ANR	9362760	ReturnStatement	return ( 1 ) ;	1297:4:28633:28643	9362233	1	True				
ANR	9362761	PrimaryExpression	1		9362233	0					
ANR	9362762	ElseStatement	else		9362233	0					
ANR	9362763	ReturnStatement	return ( 0 ) ;	1300:4:28660:28670	9362233	0	True				
ANR	9362764	PrimaryExpression	0		9362233	0					
ANR	9362765	ReturnType	int		9362233	1					
ANR	9362766	Identifier	main		9362233	2					
ANR	9362767	ParameterList	"int argc , char * argv [ ]"		9362233	3					
ANR	9362768	Parameter	int argc	1095:5:24570:24578	9362233	0	True				
ANR	9362769	ParameterType	int		9362233	0					
ANR	9362770	Identifier	argc		9362233	1					
ANR	9362771	Parameter	char * argv [ ]	1096:5:24632:24643	9362233	1	True				
ANR	9362772	ParameterType	char * [ ]		9362233	0					
ANR	9362773	Identifier	argv		9362233	1					
ANR	9362774	CFGEntryNode	ENTRY		9362233		True				
ANR	9362775	CFGExitNode	EXIT		9362233		True				
ANR	9362776	Symbol	ppdOpenFile		9362233						
ANR	9362777	Symbol	& linenum		9362233						
ANR	9362778	Symbol	ppdErrorString		9362233						
ANR	9362779	Symbol	cupsParseOptions		9362233						
ANR	9362780	Symbol	* argv		9362233						
ANR	9362781	Symbol	Page		9362233						
ANR	9362782	Symbol	header . cupsBytesPerLine		9362233						
ANR	9362783	Symbol	argv		9362233						
ANR	9362784	Symbol	options		9362233						
ANR	9362785	Symbol	action		9362233						
ANR	9362786	Symbol	linenum		9362233						
ANR	9362787	Symbol	CancelJob		9362233						
ANR	9362788	Symbol	SIGTERM		9362233						
ANR	9362789	Symbol	CUPS_RASTER_READ		9362233						
ANR	9362790	Symbol	_		9362233						
ANR	9362791	Symbol	getenv		9362233						
ANR	9362792	Symbol	argc		9362233						
ANR	9362793	Symbol	Buffer		9362233						
ANR	9362794	Symbol	NULL		9362233						
ANR	9362795	Symbol	ras		9362233						
ANR	9362796	Symbol	ppd		9362233						
ANR	9362797	Symbol	cupsRasterReadHeader2		9362233						
ANR	9362798	Symbol	num_options		9362233						
ANR	9362799	Symbol	stderr		9362233						
ANR	9362800	Symbol	& header		9362233						
ANR	9362801	Symbol	& options		9362233						
ANR	9362802	Symbol	header . cupsHeight		9362233						
ANR	9362803	Symbol	O_RDONLY		9362233						
ANR	9362804	Symbol	cupsRasterOpen		9362233						
ANR	9362805	Symbol	ppdLastError		9362233						
ANR	9362806	Symbol	header		9362233						
ANR	9362807	Symbol	y		9362233						
ANR	9362808	Symbol	Canceled		9362233						
ANR	9362809	Symbol	fd		9362233						
ANR	9362810	Symbol	open		9362233						
ANR	9362811	Symbol	cupsRasterReadPixels		9362233						
ANR	9362812	Symbol	status		9362233						
