command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8960219	File	data/converged/CVE-2018-16863_ghostpdl/psi_zchar42.c								
ANR	8960220	Function	zchar42_set_cache	43:0:1253:5909							
ANR	8960221	FunctionDef	"zchar42_set_cache (i_ctx_t * i_ctx_p , gs_font_base * pbfont , ref * cnref , uint glyph_index , op_proc_t cont , op_proc_t * exec_cont)"		8960220	0					
ANR	8960222	CompoundStatement		46:0:1395:5909	8960220	0					
ANR	8960223	IdentifierDeclStatement	double sbw [ 4 ] ;	46:3:1399:1412	8960220	0	True				
ANR	8960224	IdentifierDecl	sbw [ 4 ]		8960220	0					
ANR	8960225	IdentifierDeclType	double [ 4 ]		8960220	0					
ANR	8960226	Identifier	sbw		8960220	1					
ANR	8960227	PrimaryExpression	4		8960220	2					
ANR	8960228	IdentifierDeclStatement	double w [ 2 ] ;	47:4:1418:1429	8960220	1	True				
ANR	8960229	IdentifierDecl	w [ 2 ]		8960220	0					
ANR	8960230	IdentifierDeclType	double [ 2 ]		8960220	0					
ANR	8960231	Identifier	w		8960220	1					
ANR	8960232	PrimaryExpression	2		8960220	2					
ANR	8960233	IdentifierDeclStatement	int present ;	48:4:1435:1446	8960220	2	True				
ANR	8960234	IdentifierDecl	present		8960220	0					
ANR	8960235	IdentifierDeclType	int		8960220	0					
ANR	8960236	Identifier	present		8960220	1					
ANR	8960237	IdentifierDeclStatement	gs_font_type42 * pfont42 = ( gs_font_type42 * ) pbfont ;	49:4:1452:1502	8960220	3	True				
ANR	8960238	IdentifierDecl	* pfont42 = ( gs_font_type42 * ) pbfont		8960220	0					
ANR	8960239	IdentifierDeclType	gs_font_type42 *		8960220	0					
ANR	8960240	Identifier	pfont42		8960220	1					
ANR	8960241	AssignmentExpression	* pfont42 = ( gs_font_type42 * ) pbfont		8960220	2		=			
ANR	8960242	Identifier	pfont42		8960220	0					
ANR	8960243	CastExpression	( gs_font_type42 * ) pbfont		8960220	1					
ANR	8960244	CastTarget	gs_font_type42 *		8960220	0					
ANR	8960245	Identifier	pbfont		8960220	1					
ANR	8960246	IdentifierDeclStatement	"int code = zchar_get_metrics ( pbfont , cnref , sbw ) ;"	50:4:1508:1556	8960220	4	True				
ANR	8960247	IdentifierDecl	"code = zchar_get_metrics ( pbfont , cnref , sbw )"		8960220	0					
ANR	8960248	IdentifierDeclType	int		8960220	0					
ANR	8960249	Identifier	code		8960220	1					
ANR	8960250	AssignmentExpression	"code = zchar_get_metrics ( pbfont , cnref , sbw )"		8960220	2		=			
ANR	8960251	Identifier	code		8960220	0					
ANR	8960252	CallExpression	"zchar_get_metrics ( pbfont , cnref , sbw )"		8960220	1					
ANR	8960253	Callee	zchar_get_metrics		8960220	0					
ANR	8960254	Identifier	zchar_get_metrics		8960220	0					
ANR	8960255	ArgumentList	pbfont		8960220	1					
ANR	8960256	Argument	pbfont		8960220	0					
ANR	8960257	Identifier	pbfont		8960220	0					
ANR	8960258	Argument	cnref		8960220	1					
ANR	8960259	Identifier	cnref		8960220	0					
ANR	8960260	Argument	sbw		8960220	2					
ANR	8960261	Identifier	sbw		8960220	0					
ANR	8960262	IdentifierDeclStatement	gs_rect bbox ;	51:4:1562:1574	8960220	5	True				
ANR	8960263	IdentifierDecl	bbox		8960220	0					
ANR	8960264	IdentifierDeclType	gs_rect		8960220	0					
ANR	8960265	Identifier	bbox		8960220	1					
ANR	8960266	IdentifierDeclStatement	int vertical = gs_rootfont ( igs ) -> WMode ;	52:4:1580:1618	8960220	6	True				
ANR	8960267	IdentifierDecl	vertical = gs_rootfont ( igs ) -> WMode		8960220	0					
ANR	8960268	IdentifierDeclType	int		8960220	0					
ANR	8960269	Identifier	vertical		8960220	1					
ANR	8960270	AssignmentExpression	vertical = gs_rootfont ( igs ) -> WMode		8960220	2		=			
ANR	8960271	Identifier	vertical		8960220	0					
ANR	8960272	PtrMemberAccess	gs_rootfont ( igs ) -> WMode		8960220	1					
ANR	8960273	CallExpression	gs_rootfont ( igs )		8960220	0					
ANR	8960274	Callee	gs_rootfont		8960220	0					
ANR	8960275	Identifier	gs_rootfont		8960220	0					
ANR	8960276	ArgumentList	igs		8960220	1					
ANR	8960277	Argument	igs		8960220	0					
ANR	8960278	Identifier	igs		8960220	0					
ANR	8960279	Identifier	WMode		8960220	1					
ANR	8960280	IdentifierDeclStatement	float sbw_bbox [ 8 ] ;	53:4:1624:1641	8960220	7	True				
ANR	8960281	IdentifierDecl	sbw_bbox [ 8 ]		8960220	0					
ANR	8960282	IdentifierDeclType	float [ 8 ]		8960220	0					
ANR	8960283	Identifier	sbw_bbox		8960220	1					
ANR	8960284	PrimaryExpression	8		8960220	2					
ANR	8960285	IdentifierDeclStatement	float sbw_bbox_h [ 8 ] ;	54:4:1647:1666	8960220	8	True				
ANR	8960286	IdentifierDecl	sbw_bbox_h [ 8 ]		8960220	0					
ANR	8960287	IdentifierDeclType	float [ 8 ]		8960220	0					
ANR	8960288	Identifier	sbw_bbox_h		8960220	1					
ANR	8960289	PrimaryExpression	8		8960220	2					
ANR	8960290	IdentifierDeclStatement	ref * fdict = ( ref * ) pbfont -> client_data ;	55:4:1672:1711	8960220	9	True				
ANR	8960291	IdentifierDecl	* fdict = ( ref * ) pbfont -> client_data		8960220	0					
ANR	8960292	IdentifierDeclType	ref *		8960220	0					
ANR	8960293	Identifier	fdict		8960220	1					
ANR	8960294	AssignmentExpression	* fdict = ( ref * ) pbfont -> client_data		8960220	2		=			
ANR	8960295	Identifier	fdict		8960220	0					
ANR	8960296	CastExpression	( ref * ) pbfont -> client_data		8960220	1					
ANR	8960297	CastTarget	ref *		8960220	0					
ANR	8960298	PtrMemberAccess	pbfont -> client_data		8960220	1					
ANR	8960299	Identifier	pbfont		8960220	0					
ANR	8960300	Identifier	client_data		8960220	1					
ANR	8960301	IdentifierDeclStatement	ref * rpath = NULL ;	56:4:1717:1734	8960220	10	True				
ANR	8960302	IdentifierDecl	* rpath = NULL		8960220	0					
ANR	8960303	IdentifierDeclType	ref *		8960220	0					
ANR	8960304	Identifier	rpath		8960220	1					
ANR	8960305	AssignmentExpression	* rpath = NULL		8960220	2		=			
ANR	8960306	Identifier	NULL		8960220	0					
ANR	8960307	Identifier	NULL		8960220	1					
ANR	8960308	IdentifierDeclStatement	bool embedded = true ;	57:4:1740:1760	8960220	11	True				
ANR	8960309	IdentifierDecl	embedded = true		8960220	0					
ANR	8960310	IdentifierDeclType	bool		8960220	0					
ANR	8960311	Identifier	embedded		8960220	1					
ANR	8960312	AssignmentExpression	embedded = true		8960220	2		=			
ANR	8960313	Identifier	true		8960220	0					
ANR	8960314	Identifier	true		8960220	1					
ANR	8960315	IfStatement	if ( code < 0 )		8960220	12					
ANR	8960316	Condition	code < 0	59:8:1771:1778	8960220	0	True				
ANR	8960317	RelationalExpression	code < 0		8960220	0		<			
ANR	8960318	Identifier	code		8960220	0					
ANR	8960319	PrimaryExpression	0		8960220	1					
ANR	8960320	ReturnStatement	return code ;	60:8:1789:1800	8960220	1	True				
ANR	8960321	Identifier	code		8960220	0					
ANR	8960322	ExpressionStatement	present = code	61:4:1806:1820	8960220	13	True				
ANR	8960323	AssignmentExpression	present = code		8960220	0		=			
ANR	8960324	Identifier	present		8960220	0					
ANR	8960325	Identifier	code		8960220	1					
ANR	8960326	IfStatement	"if ( dict_find_string ( fdict , ""Path"" , & rpath ) > 0 )"		8960220	14					
ANR	8960327	Condition	"dict_find_string ( fdict , ""Path"" , & rpath ) > 0"	63:8:1831:1873	8960220	0	True				
ANR	8960328	RelationalExpression	"dict_find_string ( fdict , ""Path"" , & rpath ) > 0"		8960220	0		>			
ANR	8960329	CallExpression	"dict_find_string ( fdict , ""Path"" , & rpath )"		8960220	0					
ANR	8960330	Callee	dict_find_string		8960220	0					
ANR	8960331	Identifier	dict_find_string		8960220	0					
ANR	8960332	ArgumentList	fdict		8960220	1					
ANR	8960333	Argument	fdict		8960220	0					
ANR	8960334	Identifier	fdict		8960220	0					
ANR	8960335	Argument	"""Path"""		8960220	1					
ANR	8960336	PrimaryExpression	"""Path"""		8960220	0					
ANR	8960337	Argument	& rpath		8960220	2					
ANR	8960338	UnaryOperationExpression	& rpath		8960220	0					
ANR	8960339	UnaryOperator	&		8960220	0					
ANR	8960340	Identifier	rpath		8960220	1					
ANR	8960341	PrimaryExpression	0		8960220	1					
ANR	8960342	CompoundStatement		18:53:480:480	8960220	1					
ANR	8960343	ExpressionStatement	embedded = false	64:8:1886:1902	8960220	0	True				
ANR	8960344	AssignmentExpression	embedded = false		8960220	0		=			
ANR	8960345	Identifier	embedded		8960220	0					
ANR	8960346	Identifier	false		8960220	1					
ANR	8960347	IfStatement	if ( vertical )		8960220	15					
ANR	8960348	Condition	vertical	67:8:1919:1926	8960220	0	True				
ANR	8960349	Identifier	vertical		8960220	0					
ANR	8960350	CompoundStatement		22:18:533:533	8960220	1					
ANR	8960351	ExpressionStatement	"code = pfont42 -> data . get_metrics ( pfont42 , glyph_index , gs_type42_metrics_options_WMODE0_AND_BBOX , sbw_bbox_h )"	71:8:2143:2272	8960220	0	True				
ANR	8960352	AssignmentExpression	"code = pfont42 -> data . get_metrics ( pfont42 , glyph_index , gs_type42_metrics_options_WMODE0_AND_BBOX , sbw_bbox_h )"		8960220	0		=			
ANR	8960353	Identifier	code		8960220	0					
ANR	8960354	CallExpression	"pfont42 -> data . get_metrics ( pfont42 , glyph_index , gs_type42_metrics_options_WMODE0_AND_BBOX , sbw_bbox_h )"		8960220	1					
ANR	8960355	Callee	pfont42 -> data . get_metrics		8960220	0					
ANR	8960356	MemberAccess	pfont42 -> data . get_metrics		8960220	0					
ANR	8960357	PtrMemberAccess	pfont42 -> data		8960220	0					
ANR	8960358	Identifier	pfont42		8960220	0					
ANR	8960359	Identifier	data		8960220	1					
ANR	8960360	Identifier	get_metrics		8960220	1					
ANR	8960361	ArgumentList	pfont42		8960220	1					
ANR	8960362	Argument	pfont42		8960220	0					
ANR	8960363	Identifier	pfont42		8960220	0					
ANR	8960364	Argument	glyph_index		8960220	1					
ANR	8960365	Identifier	glyph_index		8960220	0					
ANR	8960366	Argument	gs_type42_metrics_options_WMODE0_AND_BBOX		8960220	2					
ANR	8960367	Identifier	gs_type42_metrics_options_WMODE0_AND_BBOX		8960220	0					
ANR	8960368	Argument	sbw_bbox_h		8960220	3					
ANR	8960369	Identifier	sbw_bbox_h		8960220	0					
ANR	8960370	IfStatement	if ( code < 0 )		8960220	1					
ANR	8960371	Condition	code < 0	73:12:2286:2293	8960220	0	True				
ANR	8960372	RelationalExpression	code < 0		8960220	0		<			
ANR	8960373	Identifier	code		8960220	0					
ANR	8960374	PrimaryExpression	0		8960220	1					
ANR	8960375	ReturnStatement	return code ;	74:12:2308:2319	8960220	1	True				
ANR	8960376	Identifier	code		8960220	0					
ANR	8960377	ExpressionStatement	"code = pfont42 -> data . get_metrics ( pfont42 , glyph_index , gs_type42_metrics_options_WMODE1_AND_BBOX , sbw_bbox )"	75:8:2329:2452	8960220	2	True				
ANR	8960378	AssignmentExpression	"code = pfont42 -> data . get_metrics ( pfont42 , glyph_index , gs_type42_metrics_options_WMODE1_AND_BBOX , sbw_bbox )"		8960220	0		=			
ANR	8960379	Identifier	code		8960220	0					
ANR	8960380	CallExpression	"pfont42 -> data . get_metrics ( pfont42 , glyph_index , gs_type42_metrics_options_WMODE1_AND_BBOX , sbw_bbox )"		8960220	1					
ANR	8960381	Callee	pfont42 -> data . get_metrics		8960220	0					
ANR	8960382	MemberAccess	pfont42 -> data . get_metrics		8960220	0					
ANR	8960383	PtrMemberAccess	pfont42 -> data		8960220	0					
ANR	8960384	Identifier	pfont42		8960220	0					
ANR	8960385	Identifier	data		8960220	1					
ANR	8960386	Identifier	get_metrics		8960220	1					
ANR	8960387	ArgumentList	pfont42		8960220	1					
ANR	8960388	Argument	pfont42		8960220	0					
ANR	8960389	Identifier	pfont42		8960220	0					
ANR	8960390	Argument	glyph_index		8960220	1					
ANR	8960391	Identifier	glyph_index		8960220	0					
ANR	8960392	Argument	gs_type42_metrics_options_WMODE1_AND_BBOX		8960220	2					
ANR	8960393	Identifier	gs_type42_metrics_options_WMODE1_AND_BBOX		8960220	0					
ANR	8960394	Argument	sbw_bbox		8960220	3					
ANR	8960395	Identifier	sbw_bbox		8960220	0					
ANR	8960396	IfStatement	if ( code < 0 && ! embedded )		8960220	3					
ANR	8960397	Condition	code < 0 && ! embedded	84:12:2861:2881	8960220	0	True				
ANR	8960398	AndExpression	code < 0 && ! embedded		8960220	0		&&			
ANR	8960399	RelationalExpression	code < 0		8960220	0		<			
ANR	8960400	Identifier	code		8960220	0					
ANR	8960401	PrimaryExpression	0		8960220	1					
ANR	8960402	UnaryOperationExpression	! embedded		8960220	1					
ANR	8960403	UnaryOperator	!		8960220	0					
ANR	8960404	Identifier	embedded		8960220	1					
ANR	8960405	CompoundStatement		39:35:1488:1488	8960220	1					
ANR	8960406	ExpressionStatement	sbw_bbox [ 0 ] = 0	87:12:3024:3039	8960220	0	True				
ANR	8960407	AssignmentExpression	sbw_bbox [ 0 ] = 0		8960220	0		=			
ANR	8960408	ArrayIndexing	sbw_bbox [ 0 ]		8960220	0					
ANR	8960409	Identifier	sbw_bbox		8960220	0					
ANR	8960410	PrimaryExpression	0		8960220	1					
ANR	8960411	PrimaryExpression	0		8960220	1					
ANR	8960412	ExpressionStatement	sbw_bbox [ 1 ] = pbfont -> FontBBox . q . y - 1	88:12:3053:3091	8960220	1	True				
ANR	8960413	AssignmentExpression	sbw_bbox [ 1 ] = pbfont -> FontBBox . q . y - 1		8960220	0		=			
ANR	8960414	ArrayIndexing	sbw_bbox [ 1 ]		8960220	0					
ANR	8960415	Identifier	sbw_bbox		8960220	0					
ANR	8960416	PrimaryExpression	1		8960220	1					
ANR	8960417	AdditiveExpression	pbfont -> FontBBox . q . y - 1		8960220	1		-			
ANR	8960418	MemberAccess	pbfont -> FontBBox . q . y		8960220	0					
ANR	8960419	MemberAccess	pbfont -> FontBBox . q		8960220	0					
ANR	8960420	PtrMemberAccess	pbfont -> FontBBox		8960220	0					
ANR	8960421	Identifier	pbfont		8960220	0					
ANR	8960422	Identifier	FontBBox		8960220	1					
ANR	8960423	Identifier	q		8960220	1					
ANR	8960424	Identifier	y		8960220	1					
ANR	8960425	PrimaryExpression	1		8960220	1					
ANR	8960426	ExpressionStatement	sbw_bbox [ 2 ] = 0	89:12:3105:3120	8960220	2	True				
ANR	8960427	AssignmentExpression	sbw_bbox [ 2 ] = 0		8960220	0		=			
ANR	8960428	ArrayIndexing	sbw_bbox [ 2 ]		8960220	0					
ANR	8960429	Identifier	sbw_bbox		8960220	0					
ANR	8960430	PrimaryExpression	2		8960220	1					
ANR	8960431	PrimaryExpression	0		8960220	1					
ANR	8960432	ExpressionStatement	sbw_bbox [ 3 ] = - 1	90:12:3134:3150	8960220	3	True				
ANR	8960433	AssignmentExpression	sbw_bbox [ 3 ] = - 1		8960220	0		=			
ANR	8960434	ArrayIndexing	sbw_bbox [ 3 ]		8960220	0					
ANR	8960435	Identifier	sbw_bbox		8960220	0					
ANR	8960436	PrimaryExpression	3		8960220	1					
ANR	8960437	UnaryOperationExpression	- 1		8960220	1					
ANR	8960438	UnaryOperator	-		8960220	0					
ANR	8960439	PrimaryExpression	1		8960220	1					
ANR	8960440	ElseStatement	else		8960220	0					
ANR	8960441	CompoundStatement		47:13:1779:1779	8960220	0					
ANR	8960442	ExpressionStatement	vertical = false	93:12:3189:3205	8960220	0	True				
ANR	8960443	AssignmentExpression	vertical = false		8960220	0		=			
ANR	8960444	Identifier	vertical		8960220	0					
ANR	8960445	Identifier	false		8960220	1					
ANR	8960446	IfStatement	if ( vertical )		8960220	16					
ANR	8960447	Condition	vertical	96:8:3231:3238	8960220	0	True				
ANR	8960448	Identifier	vertical		8960220	0					
ANR	8960449	CompoundStatement		51:18:1845:1845	8960220	1					
ANR	8960450	IfStatement	if ( present != metricsSideBearingAndWidth )		8960220	0					
ANR	8960451	Condition	present != metricsSideBearingAndWidth	97:12:3255:3291	8960220	0	True				
ANR	8960452	EqualityExpression	present != metricsSideBearingAndWidth		8960220	0		!=			
ANR	8960453	Identifier	present		8960220	0					
ANR	8960454	Identifier	metricsSideBearingAndWidth		8960220	1					
ANR	8960455	CompoundStatement		52:51:1898:1898	8960220	1					
ANR	8960456	Statement	if	105:6:3766:3767	8960220	0	True				
ANR	8960457	Statement	0	105:9:3769:3769	8960220	1	True				
ANR	8960458	ExpressionStatement	sbw [ 0 ] = ( sbw_bbox [ 6 ] + sbw_bbox [ 4 ] ) / 2	106:12:3863:3903	8960220	2	True				
ANR	8960459	AssignmentExpression	sbw [ 0 ] = ( sbw_bbox [ 6 ] + sbw_bbox [ 4 ] ) / 2		8960220	0		=			
ANR	8960460	ArrayIndexing	sbw [ 0 ]		8960220	0					
ANR	8960461	Identifier	sbw		8960220	0					
ANR	8960462	PrimaryExpression	0		8960220	1					
ANR	8960463	MultiplicativeExpression	( sbw_bbox [ 6 ] + sbw_bbox [ 4 ] ) / 2		8960220	1		/			
ANR	8960464	AdditiveExpression	sbw_bbox [ 6 ] + sbw_bbox [ 4 ]		8960220	0		+			
ANR	8960465	ArrayIndexing	sbw_bbox [ 6 ]		8960220	0					
ANR	8960466	Identifier	sbw_bbox		8960220	0					
ANR	8960467	PrimaryExpression	6		8960220	1					
ANR	8960468	ArrayIndexing	sbw_bbox [ 4 ]		8960220	1					
ANR	8960469	Identifier	sbw_bbox		8960220	0					
ANR	8960470	PrimaryExpression	4		8960220	1					
ANR	8960471	PrimaryExpression	2		8960220	1					
ANR	8960472	ExpressionStatement	sbw [ 1 ] = ( pbfont -> FontBBox . q . y + pbfont -> FontBBox . p . y - sbw_bbox [ 3 ] ) / 2	107:12:3917:3989	8960220	3	True				
ANR	8960473	AssignmentExpression	sbw [ 1 ] = ( pbfont -> FontBBox . q . y + pbfont -> FontBBox . p . y - sbw_bbox [ 3 ] ) / 2		8960220	0		=			
ANR	8960474	ArrayIndexing	sbw [ 1 ]		8960220	0					
ANR	8960475	Identifier	sbw		8960220	0					
ANR	8960476	PrimaryExpression	1		8960220	1					
ANR	8960477	MultiplicativeExpression	( pbfont -> FontBBox . q . y + pbfont -> FontBBox . p . y - sbw_bbox [ 3 ] ) / 2		8960220	1		/			
ANR	8960478	AdditiveExpression	pbfont -> FontBBox . q . y + pbfont -> FontBBox . p . y - sbw_bbox [ 3 ]		8960220	0		+			
ANR	8960479	MemberAccess	pbfont -> FontBBox . q . y		8960220	0					
ANR	8960480	MemberAccess	pbfont -> FontBBox . q		8960220	0					
ANR	8960481	PtrMemberAccess	pbfont -> FontBBox		8960220	0					
ANR	8960482	Identifier	pbfont		8960220	0					
ANR	8960483	Identifier	FontBBox		8960220	1					
ANR	8960484	Identifier	q		8960220	1					
ANR	8960485	Identifier	y		8960220	1					
ANR	8960486	AdditiveExpression	pbfont -> FontBBox . p . y - sbw_bbox [ 3 ]		8960220	1		-			
ANR	8960487	MemberAccess	pbfont -> FontBBox . p . y		8960220	0					
ANR	8960488	MemberAccess	pbfont -> FontBBox . p		8960220	0					
ANR	8960489	PtrMemberAccess	pbfont -> FontBBox		8960220	0					
ANR	8960490	Identifier	pbfont		8960220	0					
ANR	8960491	Identifier	FontBBox		8960220	1					
ANR	8960492	Identifier	p		8960220	1					
ANR	8960493	Identifier	y		8960220	1					
ANR	8960494	ArrayIndexing	sbw_bbox [ 3 ]		8960220	1					
ANR	8960495	Identifier	sbw_bbox		8960220	0					
ANR	8960496	PrimaryExpression	3		8960220	1					
ANR	8960497	PrimaryExpression	2		8960220	1					
ANR	8960498	ExpressionStatement	sbw [ 1 ] = sbw_bbox [ 1 ] - sbw_bbox [ 3 ]	110:12:4054:4088	8960220	4	True				
ANR	8960499	AssignmentExpression	sbw [ 1 ] = sbw_bbox [ 1 ] - sbw_bbox [ 3 ]		8960220	0		=			
ANR	8960500	ArrayIndexing	sbw [ 1 ]		8960220	0					
ANR	8960501	Identifier	sbw		8960220	0					
ANR	8960502	PrimaryExpression	1		8960220	1					
ANR	8960503	AdditiveExpression	sbw_bbox [ 1 ] - sbw_bbox [ 3 ]		8960220	1		-			
ANR	8960504	ArrayIndexing	sbw_bbox [ 1 ]		8960220	0					
ANR	8960505	Identifier	sbw_bbox		8960220	0					
ANR	8960506	PrimaryExpression	1		8960220	1					
ANR	8960507	ArrayIndexing	sbw_bbox [ 3 ]		8960220	1					
ANR	8960508	Identifier	sbw_bbox		8960220	0					
ANR	8960509	PrimaryExpression	3		8960220	1					
ANR	8960510	Statement	endif	111:6:4096:4100	8960220	5	True				
ANR	8960511	ElseStatement	else		8960220	0					
ANR	8960512	ExpressionStatement	sbw [ 0 ] = sbw_bbox_h [ 2 ] / 2	109:12:4014:4040	8960220	0	True				
ANR	8960513	AssignmentExpression	sbw [ 0 ] = sbw_bbox_h [ 2 ] / 2		8960220	0		=			
ANR	8960514	ArrayIndexing	sbw [ 0 ]		8960220	0					
ANR	8960515	Identifier	sbw		8960220	0					
ANR	8960516	PrimaryExpression	0		8960220	1					
ANR	8960517	MultiplicativeExpression	sbw_bbox_h [ 2 ] / 2		8960220	1		/			
ANR	8960518	ArrayIndexing	sbw_bbox_h [ 2 ]		8960220	0					
ANR	8960519	Identifier	sbw_bbox_h		8960220	0					
ANR	8960520	PrimaryExpression	2		8960220	1					
ANR	8960521	PrimaryExpression	2		8960220	1					
ANR	8960522	IfStatement	if ( present == metricsNone )		8960220	1					
ANR	8960523	Condition	present == metricsNone	113:12:4124:4145	8960220	0	True				
ANR	8960524	EqualityExpression	present == metricsNone		8960220	0		==			
ANR	8960525	Identifier	present		8960220	0					
ANR	8960526	Identifier	metricsNone		8960220	1					
ANR	8960527	CompoundStatement		68:36:2752:2752	8960220	1					
ANR	8960528	ExpressionStatement	sbw [ 2 ] = 0	115:12:4231:4241	8960220	0	True				
ANR	8960529	AssignmentExpression	sbw [ 2 ] = 0		8960220	0		=			
ANR	8960530	ArrayIndexing	sbw [ 2 ]		8960220	0					
ANR	8960531	Identifier	sbw		8960220	0					
ANR	8960532	PrimaryExpression	2		8960220	1					
ANR	8960533	PrimaryExpression	0		8960220	1					
ANR	8960534	ExpressionStatement	sbw [ 3 ] = sbw_bbox [ 3 ]	116:12:4255:4275	8960220	1	True				
ANR	8960535	AssignmentExpression	sbw [ 3 ] = sbw_bbox [ 3 ]		8960220	0		=			
ANR	8960536	ArrayIndexing	sbw [ 3 ]		8960220	0					
ANR	8960537	Identifier	sbw		8960220	0					
ANR	8960538	PrimaryExpression	3		8960220	1					
ANR	8960539	ArrayIndexing	sbw_bbox [ 3 ]		8960220	1					
ANR	8960540	Identifier	sbw_bbox		8960220	0					
ANR	8960541	PrimaryExpression	3		8960220	1					
ANR	8960542	ElseStatement	else		8960220	0					
ANR	8960543	CompoundStatement		73:11:2902:2902	8960220	0					
ANR	8960544	ExpressionStatement	"code = pfont42 -> data . get_metrics ( pfont42 , glyph_index , gs_type42_metrics_options_WMODE0_AND_BBOX , sbw_bbox )"	121:8:4473:4600	8960220	0	True				
ANR	8960545	AssignmentExpression	"code = pfont42 -> data . get_metrics ( pfont42 , glyph_index , gs_type42_metrics_options_WMODE0_AND_BBOX , sbw_bbox )"		8960220	0		=			
ANR	8960546	Identifier	code		8960220	0					
ANR	8960547	CallExpression	"pfont42 -> data . get_metrics ( pfont42 , glyph_index , gs_type42_metrics_options_WMODE0_AND_BBOX , sbw_bbox )"		8960220	1					
ANR	8960548	Callee	pfont42 -> data . get_metrics		8960220	0					
ANR	8960549	MemberAccess	pfont42 -> data . get_metrics		8960220	0					
ANR	8960550	PtrMemberAccess	pfont42 -> data		8960220	0					
ANR	8960551	Identifier	pfont42		8960220	0					
ANR	8960552	Identifier	data		8960220	1					
ANR	8960553	Identifier	get_metrics		8960220	1					
ANR	8960554	ArgumentList	pfont42		8960220	1					
ANR	8960555	Argument	pfont42		8960220	0					
ANR	8960556	Identifier	pfont42		8960220	0					
ANR	8960557	Argument	glyph_index		8960220	1					
ANR	8960558	Identifier	glyph_index		8960220	0					
ANR	8960559	Argument	gs_type42_metrics_options_WMODE0_AND_BBOX		8960220	2					
ANR	8960560	Identifier	gs_type42_metrics_options_WMODE0_AND_BBOX		8960220	0					
ANR	8960561	Argument	sbw_bbox		8960220	3					
ANR	8960562	Identifier	sbw_bbox		8960220	0					
ANR	8960563	IfStatement	if ( code < 0 )		8960220	1					
ANR	8960564	Condition	code < 0	123:12:4614:4621	8960220	0	True				
ANR	8960565	RelationalExpression	code < 0		8960220	0		<			
ANR	8960566	Identifier	code		8960220	0					
ANR	8960567	PrimaryExpression	0		8960220	1					
ANR	8960568	ReturnStatement	return code ;	124:12:4636:4647	8960220	1	True				
ANR	8960569	Identifier	code		8960220	0					
ANR	8960570	IfStatement	if ( present != metricsSideBearingAndWidth )		8960220	2					
ANR	8960571	Condition	present != metricsSideBearingAndWidth	125:12:4661:4697	8960220	0	True				
ANR	8960572	EqualityExpression	present != metricsSideBearingAndWidth		8960220	0		!=			
ANR	8960573	Identifier	present		8960220	0					
ANR	8960574	Identifier	metricsSideBearingAndWidth		8960220	1					
ANR	8960575	CompoundStatement		80:51:3304:3304	8960220	1					
ANR	8960576	ExpressionStatement	sbw [ 0 ] = sbw_bbox [ 0 ]	128:12:4837:4857	8960220	0	True				
ANR	8960577	AssignmentExpression	sbw [ 0 ] = sbw_bbox [ 0 ]		8960220	0		=			
ANR	8960578	ArrayIndexing	sbw [ 0 ]		8960220	0					
ANR	8960579	Identifier	sbw		8960220	0					
ANR	8960580	PrimaryExpression	0		8960220	1					
ANR	8960581	ArrayIndexing	sbw_bbox [ 0 ]		8960220	1					
ANR	8960582	Identifier	sbw_bbox		8960220	0					
ANR	8960583	PrimaryExpression	0		8960220	1					
ANR	8960584	ExpressionStatement	sbw [ 1 ] = sbw_bbox [ 1 ]	129:12:4871:4891	8960220	1	True				
ANR	8960585	AssignmentExpression	sbw [ 1 ] = sbw_bbox [ 1 ]		8960220	0		=			
ANR	8960586	ArrayIndexing	sbw [ 1 ]		8960220	0					
ANR	8960587	Identifier	sbw		8960220	0					
ANR	8960588	PrimaryExpression	1		8960220	1					
ANR	8960589	ArrayIndexing	sbw_bbox [ 1 ]		8960220	1					
ANR	8960590	Identifier	sbw_bbox		8960220	0					
ANR	8960591	PrimaryExpression	1		8960220	1					
ANR	8960592	IfStatement	if ( present == metricsNone )		8960220	3					
ANR	8960593	Condition	present == metricsNone	131:12:4915:4936	8960220	0	True				
ANR	8960594	EqualityExpression	present == metricsNone		8960220	0		==			
ANR	8960595	Identifier	present		8960220	0					
ANR	8960596	Identifier	metricsNone		8960220	1					
ANR	8960597	CompoundStatement		86:36:3543:3543	8960220	1					
ANR	8960598	ExpressionStatement	sbw [ 2 ] = sbw_bbox [ 2 ]	133:12:5021:5041	8960220	0	True				
ANR	8960599	AssignmentExpression	sbw [ 2 ] = sbw_bbox [ 2 ]		8960220	0		=			
ANR	8960600	ArrayIndexing	sbw [ 2 ]		8960220	0					
ANR	8960601	Identifier	sbw		8960220	0					
ANR	8960602	PrimaryExpression	2		8960220	1					
ANR	8960603	ArrayIndexing	sbw_bbox [ 2 ]		8960220	1					
ANR	8960604	Identifier	sbw_bbox		8960220	0					
ANR	8960605	PrimaryExpression	2		8960220	1					
ANR	8960606	ExpressionStatement	sbw [ 3 ] = sbw_bbox [ 3 ]	134:12:5055:5075	8960220	1	True				
ANR	8960607	AssignmentExpression	sbw [ 3 ] = sbw_bbox [ 3 ]		8960220	0		=			
ANR	8960608	ArrayIndexing	sbw [ 3 ]		8960220	0					
ANR	8960609	Identifier	sbw		8960220	0					
ANR	8960610	PrimaryExpression	3		8960220	1					
ANR	8960611	ArrayIndexing	sbw_bbox [ 3 ]		8960220	1					
ANR	8960612	Identifier	sbw_bbox		8960220	0					
ANR	8960613	PrimaryExpression	3		8960220	1					
ANR	8960614	ExpressionStatement	w [ 0 ] = sbw [ 2 ]	137:4:5097:5110	8960220	17	True				
ANR	8960615	AssignmentExpression	w [ 0 ] = sbw [ 2 ]		8960220	0		=			
ANR	8960616	ArrayIndexing	w [ 0 ]		8960220	0					
ANR	8960617	Identifier	w		8960220	0					
ANR	8960618	PrimaryExpression	0		8960220	1					
ANR	8960619	ArrayIndexing	sbw [ 2 ]		8960220	1					
ANR	8960620	Identifier	sbw		8960220	0					
ANR	8960621	PrimaryExpression	2		8960220	1					
ANR	8960622	ExpressionStatement	w [ 1 ] = sbw [ 3 ]	138:4:5116:5129	8960220	18	True				
ANR	8960623	AssignmentExpression	w [ 1 ] = sbw [ 3 ]		8960220	0		=			
ANR	8960624	ArrayIndexing	w [ 1 ]		8960220	0					
ANR	8960625	Identifier	w		8960220	0					
ANR	8960626	PrimaryExpression	1		8960220	1					
ANR	8960627	ArrayIndexing	sbw [ 3 ]		8960220	1					
ANR	8960628	Identifier	sbw		8960220	0					
ANR	8960629	PrimaryExpression	3		8960220	1					
ANR	8960630	IfStatement	if ( ! vertical )		8960220	19					
ANR	8960631	Condition	! vertical	139:8:5139:5147	8960220	0	True				
ANR	8960632	UnaryOperationExpression	! vertical		8960220	0					
ANR	8960633	UnaryOperator	!		8960220	0					
ANR	8960634	Identifier	vertical		8960220	1					
ANR	8960635	CompoundStatement		94:19:3754:3754	8960220	1					
ANR	8960636	ExpressionStatement	sbw_bbox [ 6 ] = ( sbw_bbox [ 6 ] - sbw_bbox [ 4 ] ) + sbw_bbox [ 0 ]	140:8:5160:5215	8960220	0	True				
ANR	8960637	AssignmentExpression	sbw_bbox [ 6 ] = ( sbw_bbox [ 6 ] - sbw_bbox [ 4 ] ) + sbw_bbox [ 0 ]		8960220	0		=			
ANR	8960638	ArrayIndexing	sbw_bbox [ 6 ]		8960220	0					
ANR	8960639	Identifier	sbw_bbox		8960220	0					
ANR	8960640	PrimaryExpression	6		8960220	1					
ANR	8960641	AdditiveExpression	( sbw_bbox [ 6 ] - sbw_bbox [ 4 ] ) + sbw_bbox [ 0 ]		8960220	1		+			
ANR	8960642	AdditiveExpression	sbw_bbox [ 6 ] - sbw_bbox [ 4 ]		8960220	0		-			
ANR	8960643	ArrayIndexing	sbw_bbox [ 6 ]		8960220	0					
ANR	8960644	Identifier	sbw_bbox		8960220	0					
ANR	8960645	PrimaryExpression	6		8960220	1					
ANR	8960646	ArrayIndexing	sbw_bbox [ 4 ]		8960220	1					
ANR	8960647	Identifier	sbw_bbox		8960220	0					
ANR	8960648	PrimaryExpression	4		8960220	1					
ANR	8960649	ArrayIndexing	sbw_bbox [ 0 ]		8960220	1					
ANR	8960650	Identifier	sbw_bbox		8960220	0					
ANR	8960651	PrimaryExpression	0		8960220	1					
ANR	8960652	ExpressionStatement	sbw_bbox [ 4 ] = sbw_bbox [ 0 ]	141:8:5225:5250	8960220	1	True				
ANR	8960653	AssignmentExpression	sbw_bbox [ 4 ] = sbw_bbox [ 0 ]		8960220	0		=			
ANR	8960654	ArrayIndexing	sbw_bbox [ 4 ]		8960220	0					
ANR	8960655	Identifier	sbw_bbox		8960220	0					
ANR	8960656	PrimaryExpression	4		8960220	1					
ANR	8960657	ArrayIndexing	sbw_bbox [ 0 ]		8960220	1					
ANR	8960658	Identifier	sbw_bbox		8960220	0					
ANR	8960659	PrimaryExpression	0		8960220	1					
ANR	8960660	ExpressionStatement	"bbox . p . x = min ( sbw_bbox [ 4 ] , pbfont -> FontBBox . p . y )"	147:4:5477:5526	8960220	20	True				
ANR	8960661	AssignmentExpression	"bbox . p . x = min ( sbw_bbox [ 4 ] , pbfont -> FontBBox . p . y )"		8960220	0		=			
ANR	8960662	MemberAccess	bbox . p . x		8960220	0					
ANR	8960663	MemberAccess	bbox . p		8960220	0					
ANR	8960664	Identifier	bbox		8960220	0					
ANR	8960665	Identifier	p		8960220	1					
ANR	8960666	Identifier	x		8960220	1					
ANR	8960667	CallExpression	"min ( sbw_bbox [ 4 ] , pbfont -> FontBBox . p . y )"		8960220	1					
ANR	8960668	Callee	min		8960220	0					
ANR	8960669	Identifier	min		8960220	0					
ANR	8960670	ArgumentList	sbw_bbox [ 4 ]		8960220	1					
ANR	8960671	Argument	sbw_bbox [ 4 ]		8960220	0					
ANR	8960672	ArrayIndexing	sbw_bbox [ 4 ]		8960220	0					
ANR	8960673	Identifier	sbw_bbox		8960220	0					
ANR	8960674	PrimaryExpression	4		8960220	1					
ANR	8960675	Argument	pbfont -> FontBBox . p . y		8960220	1					
ANR	8960676	MemberAccess	pbfont -> FontBBox . p . y		8960220	0					
ANR	8960677	MemberAccess	pbfont -> FontBBox . p		8960220	0					
ANR	8960678	PtrMemberAccess	pbfont -> FontBBox		8960220	0					
ANR	8960679	Identifier	pbfont		8960220	0					
ANR	8960680	Identifier	FontBBox		8960220	1					
ANR	8960681	Identifier	p		8960220	1					
ANR	8960682	Identifier	y		8960220	1					
ANR	8960683	ExpressionStatement	"bbox . p . y = min ( sbw_bbox [ 5 ] , pbfont -> FontBBox . p . y )"	148:4:5532:5581	8960220	21	True				
ANR	8960684	AssignmentExpression	"bbox . p . y = min ( sbw_bbox [ 5 ] , pbfont -> FontBBox . p . y )"		8960220	0		=			
ANR	8960685	MemberAccess	bbox . p . y		8960220	0					
ANR	8960686	MemberAccess	bbox . p		8960220	0					
ANR	8960687	Identifier	bbox		8960220	0					
ANR	8960688	Identifier	p		8960220	1					
ANR	8960689	Identifier	y		8960220	1					
ANR	8960690	CallExpression	"min ( sbw_bbox [ 5 ] , pbfont -> FontBBox . p . y )"		8960220	1					
ANR	8960691	Callee	min		8960220	0					
ANR	8960692	Identifier	min		8960220	0					
ANR	8960693	ArgumentList	sbw_bbox [ 5 ]		8960220	1					
ANR	8960694	Argument	sbw_bbox [ 5 ]		8960220	0					
ANR	8960695	ArrayIndexing	sbw_bbox [ 5 ]		8960220	0					
ANR	8960696	Identifier	sbw_bbox		8960220	0					
ANR	8960697	PrimaryExpression	5		8960220	1					
ANR	8960698	Argument	pbfont -> FontBBox . p . y		8960220	1					
ANR	8960699	MemberAccess	pbfont -> FontBBox . p . y		8960220	0					
ANR	8960700	MemberAccess	pbfont -> FontBBox . p		8960220	0					
ANR	8960701	PtrMemberAccess	pbfont -> FontBBox		8960220	0					
ANR	8960702	Identifier	pbfont		8960220	0					
ANR	8960703	Identifier	FontBBox		8960220	1					
ANR	8960704	Identifier	p		8960220	1					
ANR	8960705	Identifier	y		8960220	1					
ANR	8960706	ExpressionStatement	"bbox . q . x = max ( sbw_bbox [ 6 ] , pbfont -> FontBBox . q . x )"	149:4:5587:5636	8960220	22	True				
ANR	8960707	AssignmentExpression	"bbox . q . x = max ( sbw_bbox [ 6 ] , pbfont -> FontBBox . q . x )"		8960220	0		=			
ANR	8960708	MemberAccess	bbox . q . x		8960220	0					
ANR	8960709	MemberAccess	bbox . q		8960220	0					
ANR	8960710	Identifier	bbox		8960220	0					
ANR	8960711	Identifier	q		8960220	1					
ANR	8960712	Identifier	x		8960220	1					
ANR	8960713	CallExpression	"max ( sbw_bbox [ 6 ] , pbfont -> FontBBox . q . x )"		8960220	1					
ANR	8960714	Callee	max		8960220	0					
ANR	8960715	Identifier	max		8960220	0					
ANR	8960716	ArgumentList	sbw_bbox [ 6 ]		8960220	1					
ANR	8960717	Argument	sbw_bbox [ 6 ]		8960220	0					
ANR	8960718	ArrayIndexing	sbw_bbox [ 6 ]		8960220	0					
ANR	8960719	Identifier	sbw_bbox		8960220	0					
ANR	8960720	PrimaryExpression	6		8960220	1					
ANR	8960721	Argument	pbfont -> FontBBox . q . x		8960220	1					
ANR	8960722	MemberAccess	pbfont -> FontBBox . q . x		8960220	0					
ANR	8960723	MemberAccess	pbfont -> FontBBox . q		8960220	0					
ANR	8960724	PtrMemberAccess	pbfont -> FontBBox		8960220	0					
ANR	8960725	Identifier	pbfont		8960220	0					
ANR	8960726	Identifier	FontBBox		8960220	1					
ANR	8960727	Identifier	q		8960220	1					
ANR	8960728	Identifier	x		8960220	1					
ANR	8960729	ExpressionStatement	"bbox . q . y = max ( sbw_bbox [ 7 ] , pbfont -> FontBBox . q . y )"	150:4:5642:5691	8960220	23	True				
ANR	8960730	AssignmentExpression	"bbox . q . y = max ( sbw_bbox [ 7 ] , pbfont -> FontBBox . q . y )"		8960220	0		=			
ANR	8960731	MemberAccess	bbox . q . y		8960220	0					
ANR	8960732	MemberAccess	bbox . q		8960220	0					
ANR	8960733	Identifier	bbox		8960220	0					
ANR	8960734	Identifier	q		8960220	1					
ANR	8960735	Identifier	y		8960220	1					
ANR	8960736	CallExpression	"max ( sbw_bbox [ 7 ] , pbfont -> FontBBox . q . y )"		8960220	1					
ANR	8960737	Callee	max		8960220	0					
ANR	8960738	Identifier	max		8960220	0					
ANR	8960739	ArgumentList	sbw_bbox [ 7 ]		8960220	1					
ANR	8960740	Argument	sbw_bbox [ 7 ]		8960220	0					
ANR	8960741	ArrayIndexing	sbw_bbox [ 7 ]		8960220	0					
ANR	8960742	Identifier	sbw_bbox		8960220	0					
ANR	8960743	PrimaryExpression	7		8960220	1					
ANR	8960744	Argument	pbfont -> FontBBox . q . y		8960220	1					
ANR	8960745	MemberAccess	pbfont -> FontBBox . q . y		8960220	0					
ANR	8960746	MemberAccess	pbfont -> FontBBox . q		8960220	0					
ANR	8960747	PtrMemberAccess	pbfont -> FontBBox		8960220	0					
ANR	8960748	Identifier	pbfont		8960220	0					
ANR	8960749	Identifier	FontBBox		8960220	1					
ANR	8960750	Identifier	q		8960220	1					
ANR	8960751	Identifier	y		8960220	1					
ANR	8960752	ReturnStatement	"return zchar_set_cache ( i_ctx_p , pbfont , cnref , NULL , w , & bbox , cont , exec_cont , vertical ? sbw : NULL ) ;"	151:4:5697:5907	8960220	24	True				
ANR	8960753	CallExpression	"zchar_set_cache ( i_ctx_p , pbfont , cnref , NULL , w , & bbox , cont , exec_cont , vertical ? sbw : NULL )"		8960220	0					
ANR	8960754	Callee	zchar_set_cache		8960220	0					
ANR	8960755	Identifier	zchar_set_cache		8960220	0					
ANR	8960756	ArgumentList	i_ctx_p		8960220	1					
ANR	8960757	Argument	i_ctx_p		8960220	0					
ANR	8960758	Identifier	i_ctx_p		8960220	0					
ANR	8960759	Argument	pbfont		8960220	1					
ANR	8960760	Identifier	pbfont		8960220	0					
ANR	8960761	Argument	cnref		8960220	2					
ANR	8960762	Identifier	cnref		8960220	0					
ANR	8960763	Argument	NULL		8960220	3					
ANR	8960764	Identifier	NULL		8960220	0					
ANR	8960765	Argument	w		8960220	4					
ANR	8960766	Identifier	w		8960220	0					
ANR	8960767	Argument	& bbox		8960220	5					
ANR	8960768	UnaryOperationExpression	& bbox		8960220	0					
ANR	8960769	UnaryOperator	&		8960220	0					
ANR	8960770	Identifier	bbox		8960220	1					
ANR	8960771	Argument	cont		8960220	6					
ANR	8960772	Identifier	cont		8960220	0					
ANR	8960773	Argument	exec_cont		8960220	7					
ANR	8960774	Identifier	exec_cont		8960220	0					
ANR	8960775	Argument	vertical ? sbw : NULL		8960220	8					
ANR	8960776	ConditionalExpression	vertical ? sbw : NULL		8960220	0					
ANR	8960777	Condition	vertical		8960220	0					
ANR	8960778	Identifier	vertical		8960220	0					
ANR	8960779	Identifier	sbw		8960220	1					
ANR	8960780	Identifier	NULL		8960220	2					
ANR	8960781	ReturnType	int		8960220	1					
ANR	8960782	Identifier	zchar42_set_cache		8960220	2					
ANR	8960783	ParameterList	"i_ctx_t * i_ctx_p , gs_font_base * pbfont , ref * cnref , uint glyph_index , op_proc_t cont , op_proc_t * exec_cont"		8960220	3					
ANR	8960784	Parameter	i_ctx_t * i_ctx_p	44:18:1275:1290	8960220	0	True				
ANR	8960785	ParameterType	i_ctx_t *		8960220	0					
ANR	8960786	Identifier	i_ctx_p		8960220	1					
ANR	8960787	Parameter	gs_font_base * pbfont	44:36:1293:1312	8960220	1	True				
ANR	8960788	ParameterType	gs_font_base *		8960220	0					
ANR	8960789	Identifier	pbfont		8960220	1					
ANR	8960790	Parameter	ref * cnref	44:58:1315:1324	8960220	2	True				
ANR	8960791	ParameterType	ref *		8960220	0					
ANR	8960792	Identifier	cnref		8960220	1					
ANR	8960793	Parameter	uint glyph_index	45:12:1339:1354	8960220	3	True				
ANR	8960794	ParameterType	uint		8960220	0					
ANR	8960795	Identifier	glyph_index		8960220	1					
ANR	8960796	Parameter	op_proc_t cont	45:30:1357:1370	8960220	4	True				
ANR	8960797	ParameterType	op_proc_t		8960220	0					
ANR	8960798	Identifier	cont		8960220	1					
ANR	8960799	Parameter	op_proc_t * exec_cont	45:46:1373:1392	8960220	5	True				
ANR	8960800	ParameterType	op_proc_t *		8960220	0					
ANR	8960801	Identifier	exec_cont		8960220	1					
ANR	8960802	CFGEntryNode	ENTRY		8960220		True				
ANR	8960803	CFGExitNode	EXIT		8960220		True				
ANR	8960804	Symbol	* w		8960220						
ANR	8960805	Symbol	glyph_index		8960220						
ANR	8960806	Symbol	bbox		8960220						
ANR	8960807	Symbol	gs_type42_metrics_options_WMODE0_AND_BBOX		8960220						
ANR	8960808	Symbol	sbw		8960220						
ANR	8960809	Symbol	pfont42 -> data . get_metrics		8960220						
ANR	8960810	Symbol	bbox . q . x		8960220						
ANR	8960811	Symbol	bbox . q . y		8960220						
ANR	8960812	Symbol	igs		8960220						
ANR	8960813	Symbol	exec_cont		8960220						
ANR	8960814	Symbol	* pbfont		8960220						
ANR	8960815	Symbol	cont		8960220						
ANR	8960816	Symbol	* gs_rootfont		8960220						
ANR	8960817	Symbol	gs_type42_metrics_options_WMODE1_AND_BBOX		8960220						
ANR	8960818	Symbol	NULL		8960220						
ANR	8960819	Symbol	dict_find_string		8960220						
ANR	8960820	Symbol	zchar_set_cache		8960220						
ANR	8960821	Symbol	& bbox		8960220						
ANR	8960822	Symbol	i_ctx_p		8960220						
ANR	8960823	Symbol	true		8960220						
ANR	8960824	Symbol	present		8960220						
ANR	8960825	Symbol	bbox . p . y		8960220						
ANR	8960826	Symbol	zchar_get_metrics		8960220						
ANR	8960827	Symbol	bbox . p . x		8960220						
ANR	8960828	Symbol	code		8960220						
ANR	8960829	Symbol	sbw_bbox		8960220						
ANR	8960830	Symbol	* sbw_bbox_h		8960220						
ANR	8960831	Symbol	sbw_bbox_h		8960220						
ANR	8960832	Symbol	vertical		8960220						
ANR	8960833	Symbol	fdict		8960220						
ANR	8960834	Symbol	pfont42 -> data		8960220						
ANR	8960835	Symbol	min		8960220						
ANR	8960836	Symbol	gs_rootfont		8960220						
ANR	8960837	Symbol	embedded		8960220						
ANR	8960838	Symbol	& rpath		8960220						
ANR	8960839	Symbol	metricsSideBearingAndWidth		8960220						
ANR	8960840	Symbol	pbfont -> FontBBox . p . y		8960220						
ANR	8960841	Symbol	metricsNone		8960220						
ANR	8960842	Symbol	bbox . q		8960220						
ANR	8960843	Symbol	pbfont -> FontBBox . p		8960220						
ANR	8960844	Symbol	pfont42		8960220						
ANR	8960845	Symbol	pbfont -> FontBBox . q		8960220						
ANR	8960846	Symbol	max		8960220						
ANR	8960847	Symbol	false		8960220						
ANR	8960848	Symbol	* sbw_bbox		8960220						
ANR	8960849	Symbol	pbfont -> FontBBox		8960220						
ANR	8960850	Symbol	rpath		8960220						
ANR	8960851	Symbol	bbox . p		8960220						
ANR	8960852	Symbol	cnref		8960220						
ANR	8960853	Symbol	* pfont42		8960220						
ANR	8960854	Symbol	pbfont -> FontBBox . q . x		8960220						
ANR	8960855	Symbol	pbfont		8960220						
ANR	8960856	Symbol	* sbw		8960220						
ANR	8960857	Symbol	pbfont -> FontBBox . q . y		8960220						
ANR	8960858	Symbol	w		8960220						
ANR	8960859	Symbol	gs_rootfont ( igs ) -> WMode		8960220						
ANR	8960860	Symbol	pbfont -> client_data		8960220						
ANR	8960861	DeclStmt									
ANR	8960862	Decl							int	int ( i_ctx_t * )	type42_fill
ANR	8960863	DeclStmt									
ANR	8960864	Decl							int	int ( i_ctx_t * )	type42_stroke
ANR	8960865	Function	ztype42execchar	161:0:6048:8182							
ANR	8960866	FunctionDef	ztype42execchar (i_ctx_t * i_ctx_p)		8960865	0					
ANR	8960867	CompoundStatement		163:0:6093:8182	8960865	0					
ANR	8960868	IdentifierDeclStatement	os_ptr op = osp ;	164:4:6099:6114	8960865	0	True				
ANR	8960869	IdentifierDecl	op = osp		8960865	0					
ANR	8960870	IdentifierDeclType	os_ptr		8960865	0					
ANR	8960871	Identifier	op		8960865	1					
ANR	8960872	AssignmentExpression	op = osp		8960865	2		=			
ANR	8960873	Identifier	osp		8960865	0					
ANR	8960874	Identifier	osp		8960865	1					
ANR	8960875	IdentifierDeclStatement	gs_font * pfont ;	165:4:6120:6134	8960865	1	True				
ANR	8960876	IdentifierDecl	* pfont		8960865	0					
ANR	8960877	IdentifierDeclType	gs_font *		8960865	0					
ANR	8960878	Identifier	pfont		8960865	1					
ANR	8960879	IdentifierDeclStatement	int code ;	166:4:6140:6148	8960865	2	True				
ANR	8960880	IdentifierDecl	code		8960865	0					
ANR	8960881	IdentifierDeclType	int		8960865	0					
ANR	8960882	Identifier	code		8960865	1					
ANR	8960883	IdentifierDeclStatement	gs_font_base * pbfont ;	167:4:6154:6174	8960865	3	True				
ANR	8960884	IdentifierDecl	* pbfont		8960865	0					
ANR	8960885	IdentifierDeclType	gs_font_base *		8960865	0					
ANR	8960886	Identifier	pbfont		8960865	1					
ANR	8960887	IdentifierDeclStatement	gs_font_type42 * pfont42 ;	168:4:6180:6203	8960865	4	True				
ANR	8960888	IdentifierDecl	* pfont42		8960865	0					
ANR	8960889	IdentifierDeclType	gs_font_type42 *		8960865	0					
ANR	8960890	Identifier	pfont42		8960865	1					
ANR	8960891	IdentifierDeclStatement	gs_text_enum_t * penum = op_show_find ( i_ctx_p ) ;	169:4:6209:6254	8960865	5	True				
ANR	8960892	IdentifierDecl	* penum = op_show_find ( i_ctx_p )		8960865	0					
ANR	8960893	IdentifierDeclType	gs_text_enum_t *		8960865	0					
ANR	8960894	Identifier	penum		8960865	1					
ANR	8960895	AssignmentExpression	* penum = op_show_find ( i_ctx_p )		8960865	2		=			
ANR	8960896	Identifier	penum		8960865	0					
ANR	8960897	CallExpression	op_show_find ( i_ctx_p )		8960865	1					
ANR	8960898	Callee	op_show_find		8960865	0					
ANR	8960899	Identifier	op_show_find		8960865	0					
ANR	8960900	ArgumentList	i_ctx_p		8960865	1					
ANR	8960901	Argument	i_ctx_p		8960865	0					
ANR	8960902	Identifier	i_ctx_p		8960865	0					
ANR	8960903	IdentifierDeclStatement	"op_proc_t cont , exec_cont = 0 ;"	170:4:6260:6289	8960865	6	True				
ANR	8960904	IdentifierDecl	cont		8960865	0					
ANR	8960905	IdentifierDeclType	op_proc_t		8960865	0					
ANR	8960906	Identifier	cont		8960865	1					
ANR	8960907	IdentifierDecl	exec_cont = 0		8960865	1					
ANR	8960908	IdentifierDeclType	op_proc_t		8960865	0					
ANR	8960909	Identifier	exec_cont		8960865	1					
ANR	8960910	AssignmentExpression	exec_cont = 0		8960865	2		=			
ANR	8960911	Identifier	exec_cont		8960865	0					
ANR	8960912	PrimaryExpression	0		8960865	1					
ANR	8960913	IdentifierDeclStatement	ref * cnref ;	171:4:6295:6305	8960865	7	True				
ANR	8960914	IdentifierDecl	* cnref		8960865	0					
ANR	8960915	IdentifierDeclType	ref *		8960865	0					
ANR	8960916	Identifier	cnref		8960865	1					
ANR	8960917	IdentifierDeclStatement	uint glyph_index ;	172:4:6311:6327	8960865	8	True				
ANR	8960918	IdentifierDecl	glyph_index		8960865	0					
ANR	8960919	IdentifierDeclType	uint		8960865	0					
ANR	8960920	Identifier	glyph_index		8960865	1					
ANR	8960921	ExpressionStatement	check_op ( 4 )	174:4:6334:6345	8960865	9	True				
ANR	8960922	CallExpression	check_op ( 4 )		8960865	0					
ANR	8960923	Callee	check_op		8960865	0					
ANR	8960924	Identifier	check_op		8960865	0					
ANR	8960925	ArgumentList	4		8960865	1					
ANR	8960926	Argument	4		8960865	0					
ANR	8960927	PrimaryExpression	4		8960865	0					
ANR	8960928	ExpressionStatement	"check_type ( * ( op - 1 ) , t_name )"	175:4:6351:6380	8960865	10	True				
ANR	8960929	CallExpression	"check_type ( * ( op - 1 ) , t_name )"		8960865	0					
ANR	8960930	Callee	check_type		8960865	0					
ANR	8960931	Identifier	check_type		8960865	0					
ANR	8960932	ArgumentList	* ( op - 1 )		8960865	1					
ANR	8960933	Argument	* ( op - 1 )		8960865	0					
ANR	8960934	UnaryOperationExpression	* ( op - 1 )		8960865	0					
ANR	8960935	UnaryOperator	*		8960865	0					
ANR	8960936	AdditiveExpression	op - 1		8960865	1		-			
ANR	8960937	Identifier	op		8960865	0					
ANR	8960938	PrimaryExpression	1		8960865	1					
ANR	8960939	Argument	t_name		8960865	1					
ANR	8960940	Identifier	t_name		8960865	0					
ANR	8960941	IfStatement	"if ( ! r_has_type ( ( op - 2 ) , t_name ) )"		8960865	11					
ANR	8960942	Condition	"! r_has_type ( ( op - 2 ) , t_name )"	176:8:6390:6418	8960865	0	True				
ANR	8960943	UnaryOperationExpression	"! r_has_type ( ( op - 2 ) , t_name )"		8960865	0					
ANR	8960944	UnaryOperator	!		8960865	0					
ANR	8960945	CallExpression	"r_has_type ( ( op - 2 ) , t_name )"		8960865	1					
ANR	8960946	Callee	r_has_type		8960865	0					
ANR	8960947	Identifier	r_has_type		8960865	0					
ANR	8960948	ArgumentList	op - 2		8960865	1					
ANR	8960949	Argument	op - 2		8960865	0					
ANR	8960950	AdditiveExpression	op - 2		8960865	0		-			
ANR	8960951	Identifier	op		8960865	0					
ANR	8960952	PrimaryExpression	2		8960865	1					
ANR	8960953	Argument	t_name		8960865	1					
ANR	8960954	Identifier	t_name		8960865	0					
ANR	8960955	CompoundStatement		14:39:327:327	8960865	1					
ANR	8960956	ExpressionStatement	"check_type ( * ( op - 2 ) , t_integer )"	177:8:6431:6463	8960865	0	True				
ANR	8960957	CallExpression	"check_type ( * ( op - 2 ) , t_integer )"		8960865	0					
ANR	8960958	Callee	check_type		8960865	0					
ANR	8960959	Identifier	check_type		8960865	0					
ANR	8960960	ArgumentList	* ( op - 2 )		8960865	1					
ANR	8960961	Argument	* ( op - 2 )		8960865	0					
ANR	8960962	UnaryOperationExpression	* ( op - 2 )		8960865	0					
ANR	8960963	UnaryOperator	*		8960865	0					
ANR	8960964	AdditiveExpression	op - 2		8960865	1		-			
ANR	8960965	Identifier	op		8960865	0					
ANR	8960966	PrimaryExpression	2		8960865	1					
ANR	8960967	Argument	t_integer		8960865	1					
ANR	8960968	Identifier	t_integer		8960865	0					
ANR	8960969	ExpressionStatement	"code = font_param ( op - 3 , & pfont )"	180:4:6476:6509	8960865	12	True				
ANR	8960970	AssignmentExpression	"code = font_param ( op - 3 , & pfont )"		8960865	0		=			
ANR	8960971	Identifier	code		8960865	0					
ANR	8960972	CallExpression	"font_param ( op - 3 , & pfont )"		8960865	1					
ANR	8960973	Callee	font_param		8960865	0					
ANR	8960974	Identifier	font_param		8960865	0					
ANR	8960975	ArgumentList	op - 3		8960865	1					
ANR	8960976	Argument	op - 3		8960865	0					
ANR	8960977	AdditiveExpression	op - 3		8960865	0		-			
ANR	8960978	Identifier	op		8960865	0					
ANR	8960979	PrimaryExpression	3		8960865	1					
ANR	8960980	Argument	& pfont		8960865	1					
ANR	8960981	UnaryOperationExpression	& pfont		8960865	0					
ANR	8960982	UnaryOperator	&		8960865	0					
ANR	8960983	Identifier	pfont		8960865	1					
ANR	8960984	IfStatement	if ( code < 0 )		8960865	13					
ANR	8960985	Condition	code < 0	181:8:6519:6526	8960865	0	True				
ANR	8960986	RelationalExpression	code < 0		8960865	0		<			
ANR	8960987	Identifier	code		8960865	0					
ANR	8960988	PrimaryExpression	0		8960865	1					
ANR	8960989	ReturnStatement	return code ;	182:8:6537:6548	8960865	1	True				
ANR	8960990	Identifier	code		8960865	0					
ANR	8960991	ExpressionStatement	pbfont = ( gs_font_base * ) pfont	184:4:6555:6586	8960865	14	True				
ANR	8960992	AssignmentExpression	pbfont = ( gs_font_base * ) pfont		8960865	0		=			
ANR	8960993	Identifier	pbfont		8960865	0					
ANR	8960994	CastExpression	( gs_font_base * ) pfont		8960865	1					
ANR	8960995	CastTarget	gs_font_base *		8960865	0					
ANR	8960996	Identifier	pfont		8960865	1					
ANR	8960997	ExpressionStatement	cont = ( pbfont -> PaintType == 0 ? type42_fill : type42_stroke )	185:4:6592:6653	8960865	15	True				
ANR	8960998	AssignmentExpression	cont = ( pbfont -> PaintType == 0 ? type42_fill : type42_stroke )		8960865	0		=			
ANR	8960999	Identifier	cont		8960865	0					
ANR	8961000	ConditionalExpression	pbfont -> PaintType == 0 ? type42_fill : type42_stroke		8960865	1					
ANR	8961001	Condition	pbfont -> PaintType == 0		8960865	0					
ANR	8961002	EqualityExpression	pbfont -> PaintType == 0		8960865	0		==			
ANR	8961003	PtrMemberAccess	pbfont -> PaintType		8960865	0					
ANR	8961004	Identifier	pbfont		8960865	0					
ANR	8961005	Identifier	PaintType		8960865	1					
ANR	8961006	PrimaryExpression	0		8960865	1					
ANR	8961007	Identifier	type42_fill		8960865	1					
ANR	8961008	Identifier	type42_stroke		8960865	2					
ANR	8961009	ExpressionStatement	pfont42 = ( gs_font_type42 * ) pfont	186:4:6659:6693	8960865	16	True				
ANR	8961010	AssignmentExpression	pfont42 = ( gs_font_type42 * ) pfont		8960865	0		=			
ANR	8961011	Identifier	pfont42		8960865	0					
ANR	8961012	CastExpression	( gs_font_type42 * ) pfont		8960865	1					
ANR	8961013	CastTarget	gs_font_type42 *		8960865	0					
ANR	8961014	Identifier	pfont		8960865	1					
ANR	8961015	IfStatement	if ( penum == 0 || ( pfont -> FontType != ft_TrueType && pfont -> FontType != ft_CID_TrueType ) )		8960865	17					
ANR	8961016	Condition	penum == 0 || ( pfont -> FontType != ft_TrueType && pfont -> FontType != ft_CID_TrueType )	188:8:6704:6804	8960865	0	True				
ANR	8961017	OrExpression	penum == 0 || ( pfont -> FontType != ft_TrueType && pfont -> FontType != ft_CID_TrueType )		8960865	0		||			
ANR	8961018	EqualityExpression	penum == 0		8960865	0		==			
ANR	8961019	Identifier	penum		8960865	0					
ANR	8961020	PrimaryExpression	0		8960865	1					
ANR	8961021	AndExpression	pfont -> FontType != ft_TrueType && pfont -> FontType != ft_CID_TrueType		8960865	1		&&			
ANR	8961022	EqualityExpression	pfont -> FontType != ft_TrueType		8960865	0		!=			
ANR	8961023	PtrMemberAccess	pfont -> FontType		8960865	0					
ANR	8961024	Identifier	pfont		8960865	0					
ANR	8961025	Identifier	FontType		8960865	1					
ANR	8961026	Identifier	ft_TrueType		8960865	1					
ANR	8961027	EqualityExpression	pfont -> FontType != ft_CID_TrueType		8960865	1		!=			
ANR	8961028	PtrMemberAccess	pfont -> FontType		8960865	0					
ANR	8961029	Identifier	pfont		8960865	0					
ANR	8961030	Identifier	FontType		8960865	1					
ANR	8961031	Identifier	ft_CID_TrueType		8960865	1					
ANR	8961032	ExpressionStatement	return_error ( gs_error_undefined )	192:8:6824:6856	8960865	1	True				
ANR	8961033	CallExpression	return_error ( gs_error_undefined )		8960865	0					
ANR	8961034	Callee	return_error		8960865	0					
ANR	8961035	Identifier	return_error		8960865	0					
ANR	8961036	ArgumentList	gs_error_undefined		8960865	1					
ANR	8961037	Argument	gs_error_undefined		8960865	0					
ANR	8961038	Identifier	gs_error_undefined		8960865	0					
ANR	8961039	IfStatement	if ( pfont -> PaintType )		8960865	18					
ANR	8961040	Condition	pfont -> PaintType	200:8:7134:7149	8960865	0	True				
ANR	8961041	PtrMemberAccess	pfont -> PaintType		8960865	0					
ANR	8961042	Identifier	pfont		8960865	0					
ANR	8961043	Identifier	PaintType		8960865	1					
ANR	8961044	ExpressionStatement	"gs_setlinewidth ( igs , pfont -> StrokeWidth )"	201:8:7160:7200	8960865	1	True				
ANR	8961045	CallExpression	"gs_setlinewidth ( igs , pfont -> StrokeWidth )"		8960865	0					
ANR	8961046	Callee	gs_setlinewidth		8960865	0					
ANR	8961047	Identifier	gs_setlinewidth		8960865	0					
ANR	8961048	ArgumentList	igs		8960865	1					
ANR	8961049	Argument	igs		8960865	0					
ANR	8961050	Identifier	igs		8960865	0					
ANR	8961051	Argument	pfont -> StrokeWidth		8960865	1					
ANR	8961052	PtrMemberAccess	pfont -> StrokeWidth		8960865	0					
ANR	8961053	Identifier	pfont		8960865	0					
ANR	8961054	Identifier	StrokeWidth		8960865	1					
ANR	8961055	ExpressionStatement	check_estack ( 3 )	202:4:7206:7221	8960865	19	True				
ANR	8961056	CallExpression	check_estack ( 3 )		8960865	0					
ANR	8961057	Callee	check_estack		8960865	0					
ANR	8961058	Identifier	check_estack		8960865	0					
ANR	8961059	ArgumentList	3		8960865	1					
ANR	8961060	Argument	3		8960865	0					
ANR	8961061	PrimaryExpression	3		8960865	0					
ANR	8961062	IfStatement	if ( r_is_proc ( op ) )		8960865	20					
ANR	8961063	Condition	r_is_proc ( op )	206:8:7319:7331	8960865	0	True				
ANR	8961064	CallExpression	r_is_proc ( op )		8960865	0					
ANR	8961065	Callee	r_is_proc		8960865	0					
ANR	8961066	Identifier	r_is_proc		8960865	0					
ANR	8961067	ArgumentList	op		8960865	1					
ANR	8961068	Argument	op		8960865	0					
ANR	8961069	Identifier	op		8960865	0					
ANR	8961070	ReturnStatement	return zchar_exec_char_proc ( i_ctx_p ) ;	207:8:7342:7378	8960865	1	True				
ANR	8961071	CallExpression	zchar_exec_char_proc ( i_ctx_p )		8960865	0					
ANR	8961072	Callee	zchar_exec_char_proc		8960865	0					
ANR	8961073	Identifier	zchar_exec_char_proc		8960865	0					
ANR	8961074	ArgumentList	i_ctx_p		8960865	1					
ANR	8961075	Argument	i_ctx_p		8960865	0					
ANR	8961076	Identifier	i_ctx_p		8960865	0					
ANR	8961077	ExpressionStatement	"check_type ( * op , t_integer )"	212:4:7520:7546	8960865	21	True				
ANR	8961078	CallExpression	"check_type ( * op , t_integer )"		8960865	0					
ANR	8961079	Callee	check_type		8960865	0					
ANR	8961080	Identifier	check_type		8960865	0					
ANR	8961081	ArgumentList	* op		8960865	1					
ANR	8961082	Argument	* op		8960865	0					
ANR	8961083	UnaryOperationExpression	* op		8960865	0					
ANR	8961084	UnaryOperator	*		8960865	0					
ANR	8961085	Identifier	op		8960865	1					
ANR	8961086	Argument	t_integer		8960865	1					
ANR	8961087	Identifier	t_integer		8960865	0					
ANR	8961088	ExpressionStatement	check_ostack ( 3 )	213:4:7552:7567	8960865	22	True				
ANR	8961089	CallExpression	check_ostack ( 3 )		8960865	0					
ANR	8961090	Callee	check_ostack		8960865	0					
ANR	8961091	Identifier	check_ostack		8960865	0					
ANR	8961092	ArgumentList	3		8960865	1					
ANR	8961093	Argument	3		8960865	0					
ANR	8961094	PrimaryExpression	3		8960865	0					
ANR	8961095	ExpressionStatement	"code = gs_moveto ( igs , 0.0 , 0.0 )"	215:4:7632:7663	8960865	23	True				
ANR	8961096	AssignmentExpression	"code = gs_moveto ( igs , 0.0 , 0.0 )"		8960865	0		=			
ANR	8961097	Identifier	code		8960865	0					
ANR	8961098	CallExpression	"gs_moveto ( igs , 0.0 , 0.0 )"		8960865	1					
ANR	8961099	Callee	gs_moveto		8960865	0					
ANR	8961100	Identifier	gs_moveto		8960865	0					
ANR	8961101	ArgumentList	igs		8960865	1					
ANR	8961102	Argument	igs		8960865	0					
ANR	8961103	Identifier	igs		8960865	0					
ANR	8961104	Argument	0.0		8960865	1					
ANR	8961105	PrimaryExpression	0.0		8960865	0					
ANR	8961106	Argument	0.0		8960865	2					
ANR	8961107	PrimaryExpression	0.0		8960865	0					
ANR	8961108	IfStatement	if ( code < 0 )		8960865	24					
ANR	8961109	Condition	code < 0	216:8:7673:7680	8960865	0	True				
ANR	8961110	RelationalExpression	code < 0		8960865	0		<			
ANR	8961111	Identifier	code		8960865	0					
ANR	8961112	PrimaryExpression	0		8960865	1					
ANR	8961113	ReturnStatement	return code ;	217:8:7691:7702	8960865	1	True				
ANR	8961114	Identifier	code		8960865	0					
ANR	8961115	ExpressionStatement	cnref = op - 1	218:4:7708:7722	8960865	25	True				
ANR	8961116	AssignmentExpression	cnref = op - 1		8960865	0		=			
ANR	8961117	Identifier	cnref		8960865	0					
ANR	8961118	AdditiveExpression	op - 1		8960865	1		-			
ANR	8961119	Identifier	op		8960865	0					
ANR	8961120	PrimaryExpression	1		8960865	1					
ANR	8961121	ExpressionStatement	glyph_index = ( uint ) op -> value . intval	219:4:7728:7764	8960865	26	True				
ANR	8961122	AssignmentExpression	glyph_index = ( uint ) op -> value . intval		8960865	0		=			
ANR	8961123	Identifier	glyph_index		8960865	0					
ANR	8961124	CastExpression	( uint ) op -> value . intval		8960865	1					
ANR	8961125	CastTarget	uint		8960865	0					
ANR	8961126	MemberAccess	op -> value . intval		8960865	1					
ANR	8961127	PtrMemberAccess	op -> value		8960865	0					
ANR	8961128	Identifier	op		8960865	0					
ANR	8961129	Identifier	value		8960865	1					
ANR	8961130	Identifier	intval		8960865	1					
ANR	8961131	IfStatement	if ( pfont42 -> data . gsub_size )		8960865	27					
ANR	8961132	Condition	pfont42 -> data . gsub_size	220:8:7774:7796	8960865	0	True				
ANR	8961133	MemberAccess	pfont42 -> data . gsub_size		8960865	0					
ANR	8961134	PtrMemberAccess	pfont42 -> data		8960865	0					
ANR	8961135	Identifier	pfont42		8960865	0					
ANR	8961136	Identifier	data		8960865	1					
ANR	8961137	Identifier	gsub_size		8960865	1					
ANR	8961138	CompoundStatement		58:33:1705:1705	8960865	1					
ANR	8961139	ExpressionStatement	"glyph_index = pfont42 -> data . substitute_glyph_index_vertical ( pfont42 , glyph_index , gs_rootfont ( igs ) -> WMode , penum -> returned . current_glyph )"	221:8:7809:7962	8960865	0	True				
ANR	8961140	AssignmentExpression	"glyph_index = pfont42 -> data . substitute_glyph_index_vertical ( pfont42 , glyph_index , gs_rootfont ( igs ) -> WMode , penum -> returned . current_glyph )"		8960865	0		=			
ANR	8961141	Identifier	glyph_index		8960865	0					
ANR	8961142	CallExpression	"pfont42 -> data . substitute_glyph_index_vertical ( pfont42 , glyph_index , gs_rootfont ( igs ) -> WMode , penum -> returned . current_glyph )"		8960865	1					
ANR	8961143	Callee	pfont42 -> data . substitute_glyph_index_vertical		8960865	0					
ANR	8961144	MemberAccess	pfont42 -> data . substitute_glyph_index_vertical		8960865	0					
ANR	8961145	PtrMemberAccess	pfont42 -> data		8960865	0					
ANR	8961146	Identifier	pfont42		8960865	0					
ANR	8961147	Identifier	data		8960865	1					
ANR	8961148	Identifier	substitute_glyph_index_vertical		8960865	1					
ANR	8961149	ArgumentList	pfont42		8960865	1					
ANR	8961150	Argument	pfont42		8960865	0					
ANR	8961151	Identifier	pfont42		8960865	0					
ANR	8961152	Argument	glyph_index		8960865	1					
ANR	8961153	Identifier	glyph_index		8960865	0					
ANR	8961154	Argument	gs_rootfont ( igs ) -> WMode		8960865	2					
ANR	8961155	PtrMemberAccess	gs_rootfont ( igs ) -> WMode		8960865	0					
ANR	8961156	CallExpression	gs_rootfont ( igs )		8960865	0					
ANR	8961157	Callee	gs_rootfont		8960865	0					
ANR	8961158	Identifier	gs_rootfont		8960865	0					
ANR	8961159	ArgumentList	igs		8960865	1					
ANR	8961160	Argument	igs		8960865	0					
ANR	8961161	Identifier	igs		8960865	0					
ANR	8961162	Identifier	WMode		8960865	1					
ANR	8961163	Argument	penum -> returned . current_glyph		8960865	3					
ANR	8961164	MemberAccess	penum -> returned . current_glyph		8960865	0					
ANR	8961165	PtrMemberAccess	penum -> returned		8960865	0					
ANR	8961166	Identifier	penum		8960865	0					
ANR	8961167	Identifier	returned		8960865	1					
ANR	8961168	Identifier	current_glyph		8960865	1					
ANR	8961169	ExpressionStatement	"make_int ( op , glyph_index )"	223:8:7972:7997	8960865	1	True				
ANR	8961170	CallExpression	"make_int ( op , glyph_index )"		8960865	0					
ANR	8961171	Callee	make_int		8960865	0					
ANR	8961172	Identifier	make_int		8960865	0					
ANR	8961173	ArgumentList	op		8960865	1					
ANR	8961174	Argument	op		8960865	0					
ANR	8961175	Identifier	op		8960865	0					
ANR	8961176	Argument	glyph_index		8960865	1					
ANR	8961177	Identifier	glyph_index		8960865	0					
ANR	8961178	ExpressionStatement	"code = zchar42_set_cache ( i_ctx_p , pbfont , cnref , glyph_index , cont , & exec_cont )"	225:4:8009:8088	8960865	28	True				
ANR	8961179	AssignmentExpression	"code = zchar42_set_cache ( i_ctx_p , pbfont , cnref , glyph_index , cont , & exec_cont )"		8960865	0		=			
ANR	8961180	Identifier	code		8960865	0					
ANR	8961181	CallExpression	"zchar42_set_cache ( i_ctx_p , pbfont , cnref , glyph_index , cont , & exec_cont )"		8960865	1					
ANR	8961182	Callee	zchar42_set_cache		8960865	0					
ANR	8961183	Identifier	zchar42_set_cache		8960865	0					
ANR	8961184	ArgumentList	i_ctx_p		8960865	1					
ANR	8961185	Argument	i_ctx_p		8960865	0					
ANR	8961186	Identifier	i_ctx_p		8960865	0					
ANR	8961187	Argument	pbfont		8960865	1					
ANR	8961188	Identifier	pbfont		8960865	0					
ANR	8961189	Argument	cnref		8960865	2					
ANR	8961190	Identifier	cnref		8960865	0					
ANR	8961191	Argument	glyph_index		8960865	3					
ANR	8961192	Identifier	glyph_index		8960865	0					
ANR	8961193	Argument	cont		8960865	4					
ANR	8961194	Identifier	cont		8960865	0					
ANR	8961195	Argument	& exec_cont		8960865	5					
ANR	8961196	UnaryOperationExpression	& exec_cont		8960865	0					
ANR	8961197	UnaryOperator	&		8960865	0					
ANR	8961198	Identifier	exec_cont		8960865	1					
ANR	8961199	IfStatement	if ( code >= 0 && exec_cont != 0 )		8960865	29					
ANR	8961200	Condition	code >= 0 && exec_cont != 0	226:8:8098:8124	8960865	0	True				
ANR	8961201	AndExpression	code >= 0 && exec_cont != 0		8960865	0		&&			
ANR	8961202	RelationalExpression	code >= 0		8960865	0		>=			
ANR	8961203	Identifier	code		8960865	0					
ANR	8961204	PrimaryExpression	0		8960865	1					
ANR	8961205	EqualityExpression	exec_cont != 0		8960865	1		!=			
ANR	8961206	Identifier	exec_cont		8960865	0					
ANR	8961207	PrimaryExpression	0		8960865	1					
ANR	8961208	ExpressionStatement	code = ( * exec_cont ) ( i_ctx_p )	227:8:8135:8163	8960865	1	True				
ANR	8961209	AssignmentExpression	code = ( * exec_cont ) ( i_ctx_p )		8960865	0		=			
ANR	8961210	Identifier	code		8960865	0					
ANR	8961211	CallExpression	( * exec_cont ) ( i_ctx_p )		8960865	1					
ANR	8961212	Callee	* exec_cont		8960865	0					
ANR	8961213	UnaryOperationExpression	* exec_cont		8960865	0					
ANR	8961214	UnaryOperator	*		8960865	0					
ANR	8961215	Identifier	exec_cont		8960865	1					
ANR	8961216	ArgumentList	i_ctx_p		8960865	1					
ANR	8961217	Argument	i_ctx_p		8960865	0					
ANR	8961218	Identifier	i_ctx_p		8960865	0					
ANR	8961219	ReturnStatement	return code ;	228:4:8169:8180	8960865	30	True				
ANR	8961220	Identifier	code		8960865	0					
ANR	8961221	ReturnType	static int		8960865	1					
ANR	8961222	Identifier	ztype42execchar		8960865	2					
ANR	8961223	ParameterList	i_ctx_t * i_ctx_p		8960865	3					
ANR	8961224	Parameter	i_ctx_t * i_ctx_p	162:16:6075:6090	8960865	0	True				
ANR	8961225	ParameterType	i_ctx_t *		8960865	0					
ANR	8961226	Identifier	i_ctx_p		8960865	1					
ANR	8961227	CFGEntryNode	ENTRY		8960865		True				
ANR	8961228	CFGExitNode	EXIT		8960865		True				
ANR	8961229	Symbol	op_show_find		8960865						
ANR	8961230	Symbol	glyph_index		8960865						
ANR	8961231	Symbol	* op		8960865						
ANR	8961232	Symbol	gs_error_undefined		8960865						
ANR	8961233	Symbol	osp		8960865						
ANR	8961234	Symbol	penum -> returned		8960865						
ANR	8961235	Symbol	r_has_type		8960865						
ANR	8961236	Symbol	igs		8960865						
ANR	8961237	Symbol	t_name		8960865						
ANR	8961238	Symbol	pfont -> StrokeWidth		8960865						
ANR	8961239	Symbol	exec_cont		8960865						
ANR	8961240	Symbol	* pbfont		8960865						
ANR	8961241	Symbol	type42_stroke		8960865						
ANR	8961242	Symbol	cont		8960865						
ANR	8961243	Symbol	* gs_rootfont		8960865						
ANR	8961244	Symbol	zchar_exec_char_proc		8960865						
ANR	8961245	Symbol	penum		8960865						
ANR	8961246	Symbol	* ( op - 2 )		8960865						
ANR	8961247	Symbol	t_integer		8960865						
ANR	8961248	Symbol	pfont42 -> data . gsub_size		8960865						
ANR	8961249	Symbol	type42_fill		8960865						
ANR	8961250	Symbol	ft_CID_TrueType		8960865						
ANR	8961251	Symbol	i_ctx_p		8960865						
ANR	8961252	Symbol	penum -> returned . current_glyph		8960865						
ANR	8961253	Symbol	pfont -> PaintType		8960865						
ANR	8961254	Symbol	zchar42_set_cache		8960865						
ANR	8961255	Symbol	op -> value . intval		8960865						
ANR	8961256	Symbol	* penum		8960865						
ANR	8961257	Symbol	code		8960865						
ANR	8961258	Symbol	* exec_cont		8960865						
ANR	8961259	Symbol	ft_TrueType		8960865						
ANR	8961260	Symbol	gs_moveto		8960865						
ANR	8961261	Symbol	pbfont -> PaintType		8960865						
ANR	8961262	Symbol	pfont42 -> data		8960865						
ANR	8961263	Symbol	pfont -> FontType		8960865						
ANR	8961264	Symbol	op -> value		8960865						
ANR	8961265	Symbol	gs_rootfont		8960865						
ANR	8961266	Symbol	r_is_proc		8960865						
ANR	8961267	Symbol	op		8960865						
ANR	8961268	Symbol	pfont		8960865						
ANR	8961269	Symbol	pfont42		8960865						
ANR	8961270	Symbol	& pfont		8960865						
ANR	8961271	Symbol	font_param		8960865						
ANR	8961272	Symbol	pfont42 -> data . substitute_glyph_index_vertical		8960865						
ANR	8961273	Symbol	cnref		8960865						
ANR	8961274	Symbol	* pfont42		8960865						
ANR	8961275	Symbol	pbfont		8960865						
ANR	8961276	Symbol	* pfont		8960865						
ANR	8961277	Symbol	* ( op - 1 )		8960865						
ANR	8961278	Symbol	& exec_cont		8960865						
ANR	8961279	Symbol	gs_rootfont ( igs ) -> WMode		8960865						
ANR	8961280	DeclStmt									
ANR	8961281	Decl							int	"int ( i_ctx_t * i_ctx_p , int ( * cont ) ( gs_gstate * ) )"	type42_finish
ANR	8961282	Function	type42_fill	234:0:8322:8705							
ANR	8961283	FunctionDef	type42_fill (i_ctx_t * i_ctx_p)		8961282	0					
ANR	8961284	CompoundStatement		236:0:8363:8705	8961282	0					
ANR	8961285	IdentifierDeclStatement	int code ;	237:4:8369:8377	8961282	0	True				
ANR	8961286	IdentifierDecl	code		8961282	0					
ANR	8961287	IdentifierDeclType	int		8961282	0					
ANR	8961288	Identifier	code		8961282	1					
ANR	8961289	IdentifierDeclStatement	gs_fixed_point fa = i_ctx_p -> pgs -> fill_adjust ;	238:4:8383:8428	8961282	1	True				
ANR	8961290	IdentifierDecl	fa = i_ctx_p -> pgs -> fill_adjust		8961282	0					
ANR	8961291	IdentifierDeclType	gs_fixed_point		8961282	0					
ANR	8961292	Identifier	fa		8961282	1					
ANR	8961293	AssignmentExpression	fa = i_ctx_p -> pgs -> fill_adjust		8961282	2		=			
ANR	8961294	Identifier	fa		8961282	0					
ANR	8961295	PtrMemberAccess	i_ctx_p -> pgs -> fill_adjust		8961282	1					
ANR	8961296	PtrMemberAccess	i_ctx_p -> pgs		8961282	0					
ANR	8961297	Identifier	i_ctx_p		8961282	0					
ANR	8961298	Identifier	pgs		8961282	1					
ANR	8961299	Identifier	fill_adjust		8961282	1					
ANR	8961300	ExpressionStatement	i_ctx_p -> pgs -> fill_adjust . x = i_ctx_p -> pgs -> fill_adjust . y = - 1	240:4:8435:8497	8961282	2	True				
ANR	8961301	AssignmentExpression	i_ctx_p -> pgs -> fill_adjust . x = i_ctx_p -> pgs -> fill_adjust . y = - 1		8961282	0		=			
ANR	8961302	MemberAccess	i_ctx_p -> pgs -> fill_adjust . x		8961282	0					
ANR	8961303	PtrMemberAccess	i_ctx_p -> pgs -> fill_adjust		8961282	0					
ANR	8961304	PtrMemberAccess	i_ctx_p -> pgs		8961282	0					
ANR	8961305	Identifier	i_ctx_p		8961282	0					
ANR	8961306	Identifier	pgs		8961282	1					
ANR	8961307	Identifier	fill_adjust		8961282	1					
ANR	8961308	Identifier	x		8961282	1					
ANR	8961309	AssignmentExpression	i_ctx_p -> pgs -> fill_adjust . y = - 1		8961282	1		=			
ANR	8961310	MemberAccess	i_ctx_p -> pgs -> fill_adjust . y		8961282	0					
ANR	8961311	PtrMemberAccess	i_ctx_p -> pgs -> fill_adjust		8961282	0					
ANR	8961312	PtrMemberAccess	i_ctx_p -> pgs		8961282	0					
ANR	8961313	Identifier	i_ctx_p		8961282	0					
ANR	8961314	Identifier	pgs		8961282	1					
ANR	8961315	Identifier	fill_adjust		8961282	1					
ANR	8961316	Identifier	y		8961282	1					
ANR	8961317	UnaryOperationExpression	- 1		8961282	1					
ANR	8961318	UnaryOperator	-		8961282	0					
ANR	8961319	PrimaryExpression	1		8961282	1					
ANR	8961320	ExpressionStatement	"code = type42_finish ( i_ctx_p , gs_fill )"	241:4:8503:8541	8961282	3	True				
ANR	8961321	AssignmentExpression	"code = type42_finish ( i_ctx_p , gs_fill )"		8961282	0		=			
ANR	8961322	Identifier	code		8961282	0					
ANR	8961323	CallExpression	"type42_finish ( i_ctx_p , gs_fill )"		8961282	1					
ANR	8961324	Callee	type42_finish		8961282	0					
ANR	8961325	Identifier	type42_finish		8961282	0					
ANR	8961326	ArgumentList	i_ctx_p		8961282	1					
ANR	8961327	Argument	i_ctx_p		8961282	0					
ANR	8961328	Identifier	i_ctx_p		8961282	0					
ANR	8961329	Argument	gs_fill		8961282	1					
ANR	8961330	Identifier	gs_fill		8961282	0					
ANR	8961331	ExpressionStatement	i_ctx_p -> pgs -> fill_adjust = fa	242:4:8547:8577	8961282	4	True				
ANR	8961332	AssignmentExpression	i_ctx_p -> pgs -> fill_adjust = fa		8961282	0		=			
ANR	8961333	PtrMemberAccess	i_ctx_p -> pgs -> fill_adjust		8961282	0					
ANR	8961334	PtrMemberAccess	i_ctx_p -> pgs		8961282	0					
ANR	8961335	Identifier	i_ctx_p		8961282	0					
ANR	8961336	Identifier	pgs		8961282	1					
ANR	8961337	Identifier	fill_adjust		8961282	1					
ANR	8961338	Identifier	fa		8961282	1					
ANR	8961339	ReturnStatement	return code ;	244:4:8692:8703	8961282	5	True				
ANR	8961340	Identifier	code		8961282	0					
ANR	8961341	ReturnType	static int		8961282	1					
ANR	8961342	Identifier	type42_fill		8961282	2					
ANR	8961343	ParameterList	i_ctx_t * i_ctx_p		8961282	3					
ANR	8961344	Parameter	i_ctx_t * i_ctx_p	235:12:8345:8360	8961282	0	True				
ANR	8961345	ParameterType	i_ctx_t *		8961282	0					
ANR	8961346	Identifier	i_ctx_p		8961282	1					
ANR	8961347	CFGEntryNode	ENTRY		8961282		True				
ANR	8961348	CFGExitNode	EXIT		8961282		True				
ANR	8961349	Symbol	* * i_ctx_p		8961282						
ANR	8961350	Symbol	type42_finish		8961282						
ANR	8961351	Symbol	code		8961282						
ANR	8961352	Symbol	i_ctx_p		8961282						
ANR	8961353	Symbol	i_ctx_p -> pgs -> fill_adjust . y		8961282						
ANR	8961354	Symbol	i_ctx_p -> pgs		8961282						
ANR	8961355	Symbol	* i_ctx_p		8961282						
ANR	8961356	Symbol	* i_ctx_p -> pgs		8961282						
ANR	8961357	Symbol	i_ctx_p -> pgs -> fill_adjust . x		8961282						
ANR	8961358	Symbol	fa		8961282						
ANR	8961359	Symbol	i_ctx_p -> pgs -> fill_adjust		8961282						
ANR	8961360	Symbol	gs_fill		8961282						
ANR	8961361	Function	type42_stroke	246:0:8707:8798							
ANR	8961362	FunctionDef	type42_stroke (i_ctx_t * i_ctx_p)		8961361	0					
ANR	8961363	CompoundStatement		248:0:8750:8798	8961361	0					
ANR	8961364	ReturnStatement	"return type42_finish ( i_ctx_p , gs_stroke ) ;"	249:4:8756:8796	8961361	0	True				
ANR	8961365	CallExpression	"type42_finish ( i_ctx_p , gs_stroke )"		8961361	0					
ANR	8961366	Callee	type42_finish		8961361	0					
ANR	8961367	Identifier	type42_finish		8961361	0					
ANR	8961368	ArgumentList	i_ctx_p		8961361	1					
ANR	8961369	Argument	i_ctx_p		8961361	0					
ANR	8961370	Identifier	i_ctx_p		8961361	0					
ANR	8961371	Argument	gs_stroke		8961361	1					
ANR	8961372	Identifier	gs_stroke		8961361	0					
ANR	8961373	ReturnType	static int		8961361	1					
ANR	8961374	Identifier	type42_stroke		8961361	2					
ANR	8961375	ParameterList	i_ctx_t * i_ctx_p		8961361	3					
ANR	8961376	Parameter	i_ctx_t * i_ctx_p	247:14:8732:8747	8961361	0	True				
ANR	8961377	ParameterType	i_ctx_t *		8961361	0					
ANR	8961378	Identifier	i_ctx_p		8961361	1					
ANR	8961379	CFGEntryNode	ENTRY		8961361		True				
ANR	8961380	CFGExitNode	EXIT		8961361		True				
ANR	8961381	Symbol	type42_finish		8961361						
ANR	8961382	Symbol	i_ctx_p		8961361						
ANR	8961383	Symbol	gs_stroke		8961361						
ANR	8961384	Function	type42_finish	252:0:8870:10597							
ANR	8961385	FunctionDef	"type42_finish (i_ctx_t * i_ctx_p , int ( * cont ) ( gs_gstate * ))"		8961384	0					
ANR	8961386	CompoundStatement		254:0:8940:10597	8961384	0					
ANR	8961387	IdentifierDeclStatement	os_ptr op = osp ;	255:4:8946:8961	8961384	0	True				
ANR	8961388	IdentifierDecl	op = osp		8961384	0					
ANR	8961389	IdentifierDeclType	os_ptr		8961384	0					
ANR	8961390	Identifier	op		8961384	1					
ANR	8961391	AssignmentExpression	op = osp		8961384	2		=			
ANR	8961392	Identifier	osp		8961384	0					
ANR	8961393	Identifier	osp		8961384	1					
ANR	8961394	IdentifierDeclStatement	gs_font * pfont ;	256:4:8967:8981	8961384	1	True				
ANR	8961395	IdentifierDecl	* pfont		8961384	0					
ANR	8961396	IdentifierDeclType	gs_font *		8961384	0					
ANR	8961397	Identifier	pfont		8961384	1					
ANR	8961398	IdentifierDeclStatement	gs_font_type42 * pfont42 ;	257:4:8987:9010	8961384	2	True				
ANR	8961399	IdentifierDecl	* pfont42		8961384	0					
ANR	8961400	IdentifierDeclType	gs_font_type42 *		8961384	0					
ANR	8961401	Identifier	pfont42		8961384	1					
ANR	8961402	IdentifierDeclStatement	int code ;	258:4:9016:9024	8961384	3	True				
ANR	8961403	IdentifierDecl	code		8961384	0					
ANR	8961404	IdentifierDeclType	int		8961384	0					
ANR	8961405	Identifier	code		8961384	1					
ANR	8961406	IdentifierDeclStatement	gs_text_enum_t * penum = op_show_find ( i_ctx_p ) ;	259:4:9030:9075	8961384	4	True				
ANR	8961407	IdentifierDecl	* penum = op_show_find ( i_ctx_p )		8961384	0					
ANR	8961408	IdentifierDeclType	gs_text_enum_t *		8961384	0					
ANR	8961409	Identifier	penum		8961384	1					
ANR	8961410	AssignmentExpression	* penum = op_show_find ( i_ctx_p )		8961384	2		=			
ANR	8961411	Identifier	penum		8961384	0					
ANR	8961412	CallExpression	op_show_find ( i_ctx_p )		8961384	1					
ANR	8961413	Callee	op_show_find		8961384	0					
ANR	8961414	Identifier	op_show_find		8961384	0					
ANR	8961415	ArgumentList	i_ctx_p		8961384	1					
ANR	8961416	Argument	i_ctx_p		8961384	0					
ANR	8961417	Identifier	i_ctx_p		8961384	0					
ANR	8961418	IdentifierDeclStatement	os_ptr opc = op ;	260:4:9081:9096	8961384	5	True				
ANR	8961419	IdentifierDecl	opc = op		8961384	0					
ANR	8961420	IdentifierDeclType	os_ptr		8961384	0					
ANR	8961421	Identifier	opc		8961384	1					
ANR	8961422	AssignmentExpression	opc = op		8961384	2		=			
ANR	8961423	Identifier	op		8961384	0					
ANR	8961424	Identifier	op		8961384	1					
ANR	8961425	IdentifierDeclStatement	uint glyph_index ;	261:4:9102:9118	8961384	6	True				
ANR	8961426	IdentifierDecl	glyph_index		8961384	0					
ANR	8961427	IdentifierDeclType	uint		8961384	0					
ANR	8961428	Identifier	glyph_index		8961384	1					
ANR	8961429	ExpressionStatement	"check_type ( * opc , t_integer )"	263:4:9125:9152	8961384	7	True				
ANR	8961430	CallExpression	"check_type ( * opc , t_integer )"		8961384	0					
ANR	8961431	Callee	check_type		8961384	0					
ANR	8961432	Identifier	check_type		8961384	0					
ANR	8961433	ArgumentList	* opc		8961384	1					
ANR	8961434	Argument	* opc		8961384	0					
ANR	8961435	UnaryOperationExpression	* opc		8961384	0					
ANR	8961436	UnaryOperator	*		8961384	0					
ANR	8961437	Identifier	opc		8961384	1					
ANR	8961438	Argument	t_integer		8961384	1					
ANR	8961439	Identifier	t_integer		8961384	0					
ANR	8961440	ExpressionStatement	"code = font_param ( opc - 3 , & pfont )"	264:4:9158:9192	8961384	8	True				
ANR	8961441	AssignmentExpression	"code = font_param ( opc - 3 , & pfont )"		8961384	0		=			
ANR	8961442	Identifier	code		8961384	0					
ANR	8961443	CallExpression	"font_param ( opc - 3 , & pfont )"		8961384	1					
ANR	8961444	Callee	font_param		8961384	0					
ANR	8961445	Identifier	font_param		8961384	0					
ANR	8961446	ArgumentList	opc - 3		8961384	1					
ANR	8961447	Argument	opc - 3		8961384	0					
ANR	8961448	AdditiveExpression	opc - 3		8961384	0		-			
ANR	8961449	Identifier	opc		8961384	0					
ANR	8961450	PrimaryExpression	3		8961384	1					
ANR	8961451	Argument	& pfont		8961384	1					
ANR	8961452	UnaryOperationExpression	& pfont		8961384	0					
ANR	8961453	UnaryOperator	&		8961384	0					
ANR	8961454	Identifier	pfont		8961384	1					
ANR	8961455	IfStatement	if ( code < 0 )		8961384	9					
ANR	8961456	Condition	code < 0	265:8:9202:9209	8961384	0	True				
ANR	8961457	RelationalExpression	code < 0		8961384	0		<			
ANR	8961458	Identifier	code		8961384	0					
ANR	8961459	PrimaryExpression	0		8961384	1					
ANR	8961460	ReturnStatement	return code ;	266:8:9220:9231	8961384	1	True				
ANR	8961461	Identifier	code		8961384	0					
ANR	8961462	IfStatement	if ( penum == 0 || ( pfont -> FontType != ft_TrueType && pfont -> FontType != ft_CID_TrueType ) )		8961384	10					
ANR	8961463	Condition	penum == 0 || ( pfont -> FontType != ft_TrueType && pfont -> FontType != ft_CID_TrueType )	267:8:9241:9347	8961384	0	True				
ANR	8961464	OrExpression	penum == 0 || ( pfont -> FontType != ft_TrueType && pfont -> FontType != ft_CID_TrueType )		8961384	0		||			
ANR	8961465	EqualityExpression	penum == 0		8961384	0		==			
ANR	8961466	Identifier	penum		8961384	0					
ANR	8961467	PrimaryExpression	0		8961384	1					
ANR	8961468	AndExpression	pfont -> FontType != ft_TrueType && pfont -> FontType != ft_CID_TrueType		8961384	1		&&			
ANR	8961469	EqualityExpression	pfont -> FontType != ft_TrueType		8961384	0		!=			
ANR	8961470	PtrMemberAccess	pfont -> FontType		8961384	0					
ANR	8961471	Identifier	pfont		8961384	0					
ANR	8961472	Identifier	FontType		8961384	1					
ANR	8961473	Identifier	ft_TrueType		8961384	1					
ANR	8961474	EqualityExpression	pfont -> FontType != ft_CID_TrueType		8961384	1		!=			
ANR	8961475	PtrMemberAccess	pfont -> FontType		8961384	0					
ANR	8961476	Identifier	pfont		8961384	0					
ANR	8961477	Identifier	FontType		8961384	1					
ANR	8961478	Identifier	ft_CID_TrueType		8961384	1					
ANR	8961479	ExpressionStatement	return_error ( gs_error_undefined )	270:8:9367:9399	8961384	1	True				
ANR	8961480	CallExpression	return_error ( gs_error_undefined )		8961384	0					
ANR	8961481	Callee	return_error		8961384	0					
ANR	8961482	Identifier	return_error		8961384	0					
ANR	8961483	ArgumentList	gs_error_undefined		8961384	1					
ANR	8961484	Argument	gs_error_undefined		8961384	0					
ANR	8961485	Identifier	gs_error_undefined		8961384	0					
ANR	8961486	ExpressionStatement	pfont42 = ( gs_font_type42 * ) pfont	271:4:9405:9438	8961384	11	True				
ANR	8961487	AssignmentExpression	pfont42 = ( gs_font_type42 * ) pfont		8961384	0		=			
ANR	8961488	Identifier	pfont42		8961384	0					
ANR	8961489	CastExpression	( gs_font_type42 * ) pfont		8961384	1					
ANR	8961490	CastTarget	gs_font_type42 *		8961384	0					
ANR	8961491	Identifier	pfont		8961384	1					
ANR	8961492	IfStatement	if ( ! i_ctx_p -> RenderTTNotdef )		8961384	12					
ANR	8961493	Condition	! i_ctx_p -> RenderTTNotdef	273:8:9449:9472	8961384	0	True				
ANR	8961494	UnaryOperationExpression	! i_ctx_p -> RenderTTNotdef		8961384	0					
ANR	8961495	UnaryOperator	!		8961384	0					
ANR	8961496	PtrMemberAccess	i_ctx_p -> RenderTTNotdef		8961384	1					
ANR	8961497	Identifier	i_ctx_p		8961384	0					
ANR	8961498	Identifier	RenderTTNotdef		8961384	1					
ANR	8961499	CompoundStatement		20:34:534:534	8961384	1					
ANR	8961500	IfStatement	"if ( r_has_type ( opc - 1 , t_name ) )"		8961384	0					
ANR	8961501	Condition	"r_has_type ( opc - 1 , t_name )"	274:12:9489:9515	8961384	0	True				
ANR	8961502	CallExpression	"r_has_type ( opc - 1 , t_name )"		8961384	0					
ANR	8961503	Callee	r_has_type		8961384	0					
ANR	8961504	Identifier	r_has_type		8961384	0					
ANR	8961505	ArgumentList	opc - 1		8961384	1					
ANR	8961506	Argument	opc - 1		8961384	0					
ANR	8961507	AdditiveExpression	opc - 1		8961384	0		-			
ANR	8961508	Identifier	opc		8961384	0					
ANR	8961509	PrimaryExpression	1		8961384	1					
ANR	8961510	Argument	t_name		8961384	1					
ANR	8961511	Identifier	t_name		8961384	0					
ANR	8961512	CompoundStatement		22:12:591:599	8961384	1					
ANR	8961513	IdentifierDeclStatement	ref gref ;	275:12:9532:9540	8961384	0	True				
ANR	8961514	IdentifierDecl	gref		8961384	0					
ANR	8961515	IdentifierDeclType	ref		8961384	0					
ANR	8961516	Identifier	gref		8961384	1					
ANR	8961517	ExpressionStatement	"name_string_ref ( imemory , opc - 1 , & gref )"	277:12:9555:9595	8961384	1	True				
ANR	8961518	CallExpression	"name_string_ref ( imemory , opc - 1 , & gref )"		8961384	0					
ANR	8961519	Callee	name_string_ref		8961384	0					
ANR	8961520	Identifier	name_string_ref		8961384	0					
ANR	8961521	ArgumentList	imemory		8961384	1					
ANR	8961522	Argument	imemory		8961384	0					
ANR	8961523	Identifier	imemory		8961384	0					
ANR	8961524	Argument	opc - 1		8961384	1					
ANR	8961525	AdditiveExpression	opc - 1		8961384	0		-			
ANR	8961526	Identifier	opc		8961384	0					
ANR	8961527	PrimaryExpression	1		8961384	1					
ANR	8961528	Argument	& gref		8961384	2					
ANR	8961529	UnaryOperationExpression	& gref		8961384	0					
ANR	8961530	UnaryOperator	&		8961384	0					
ANR	8961531	Identifier	gref		8961384	1					
ANR	8961532	IfStatement	"if ( ( gref . tas . rsize == 7 && strncmp ( ( const char * ) gref . value . const_bytes , "".notdef"" , 7 ) == 0 ) || ( gref . tas . rsize > 9 && strncmp ( ( const char * ) gref . value . const_bytes , "".notdef~GS"" , 10 ) == 0 ) )"		8961384	2					
ANR	8961533	Condition	"( gref . tas . rsize == 7 && strncmp ( ( const char * ) gref . value . const_bytes , "".notdef"" , 7 ) == 0 ) || ( gref . tas . rsize > 9 && strncmp ( ( const char * ) gref . value . const_bytes , "".notdef~GS"" , 10 ) == 0 )"	278:16:9613:9813	8961384	0	True				
ANR	8961534	OrExpression	"( gref . tas . rsize == 7 && strncmp ( ( const char * ) gref . value . const_bytes , "".notdef"" , 7 ) == 0 ) || ( gref . tas . rsize > 9 && strncmp ( ( const char * ) gref . value . const_bytes , "".notdef~GS"" , 10 ) == 0 )"		8961384	0		||			
ANR	8961535	AndExpression	"gref . tas . rsize == 7 && strncmp ( ( const char * ) gref . value . const_bytes , "".notdef"" , 7 ) == 0"		8961384	0		&&			
ANR	8961536	EqualityExpression	gref . tas . rsize == 7		8961384	0		==			
ANR	8961537	MemberAccess	gref . tas . rsize		8961384	0					
ANR	8961538	MemberAccess	gref . tas		8961384	0					
ANR	8961539	Identifier	gref		8961384	0					
ANR	8961540	Identifier	tas		8961384	1					
ANR	8961541	Identifier	rsize		8961384	1					
ANR	8961542	PrimaryExpression	7		8961384	1					
ANR	8961543	EqualityExpression	"strncmp ( ( const char * ) gref . value . const_bytes , "".notdef"" , 7 ) == 0"		8961384	1		==			
ANR	8961544	CallExpression	"strncmp ( ( const char * ) gref . value . const_bytes , "".notdef"" , 7 )"		8961384	0					
ANR	8961545	Callee	strncmp		8961384	0					
ANR	8961546	Identifier	strncmp		8961384	0					
ANR	8961547	ArgumentList	( const char * ) gref . value . const_bytes		8961384	1					
ANR	8961548	Argument	( const char * ) gref . value . const_bytes		8961384	0					
ANR	8961549	CastExpression	( const char * ) gref . value . const_bytes		8961384	0					
ANR	8961550	CastTarget	const char *		8961384	0					
ANR	8961551	MemberAccess	gref . value . const_bytes		8961384	1					
ANR	8961552	MemberAccess	gref . value		8961384	0					
ANR	8961553	Identifier	gref		8961384	0					
ANR	8961554	Identifier	value		8961384	1					
ANR	8961555	Identifier	const_bytes		8961384	1					
ANR	8961556	Argument	""".notdef"""		8961384	1					
ANR	8961557	PrimaryExpression	""".notdef"""		8961384	0					
ANR	8961558	Argument	7		8961384	2					
ANR	8961559	PrimaryExpression	7		8961384	0					
ANR	8961560	PrimaryExpression	0		8961384	1					
ANR	8961561	AndExpression	"gref . tas . rsize > 9 && strncmp ( ( const char * ) gref . value . const_bytes , "".notdef~GS"" , 10 ) == 0"		8961384	1		&&			
ANR	8961562	RelationalExpression	gref . tas . rsize > 9		8961384	0		>			
ANR	8961563	MemberAccess	gref . tas . rsize		8961384	0					
ANR	8961564	MemberAccess	gref . tas		8961384	0					
ANR	8961565	Identifier	gref		8961384	0					
ANR	8961566	Identifier	tas		8961384	1					
ANR	8961567	Identifier	rsize		8961384	1					
ANR	8961568	PrimaryExpression	9		8961384	1					
ANR	8961569	EqualityExpression	"strncmp ( ( const char * ) gref . value . const_bytes , "".notdef~GS"" , 10 ) == 0"		8961384	1		==			
ANR	8961570	CallExpression	"strncmp ( ( const char * ) gref . value . const_bytes , "".notdef~GS"" , 10 )"		8961384	0					
ANR	8961571	Callee	strncmp		8961384	0					
ANR	8961572	Identifier	strncmp		8961384	0					
ANR	8961573	ArgumentList	( const char * ) gref . value . const_bytes		8961384	1					
ANR	8961574	Argument	( const char * ) gref . value . const_bytes		8961384	0					
ANR	8961575	CastExpression	( const char * ) gref . value . const_bytes		8961384	0					
ANR	8961576	CastTarget	const char *		8961384	0					
ANR	8961577	MemberAccess	gref . value . const_bytes		8961384	1					
ANR	8961578	MemberAccess	gref . value		8961384	0					
ANR	8961579	Identifier	gref		8961384	0					
ANR	8961580	Identifier	value		8961384	1					
ANR	8961581	Identifier	const_bytes		8961384	1					
ANR	8961582	Argument	""".notdef~GS"""		8961384	1					
ANR	8961583	PrimaryExpression	""".notdef~GS"""		8961384	0					
ANR	8961584	Argument	10		8961384	2					
ANR	8961585	PrimaryExpression	10		8961384	0					
ANR	8961586	PrimaryExpression	0		8961384	1					
ANR	8961587	CompoundStatement		26:110:875:875	8961384	1					
ANR	8961588	ExpressionStatement	pop ( 4 )	280:16:9834:9840	8961384	0	True				
ANR	8961589	CallExpression	pop ( 4 )		8961384	0					
ANR	8961590	Callee	pop		8961384	0					
ANR	8961591	Identifier	pop		8961384	0					
ANR	8961592	ArgumentList	4		8961384	1					
ANR	8961593	Argument	4		8961384	0					
ANR	8961594	PrimaryExpression	4		8961384	0					
ANR	8961595	ReturnStatement	return ( * cont ) ( igs ) ;	281:16:9858:9877	8961384	1	True				
ANR	8961596	CallExpression	( * cont ) ( igs )		8961384	0					
ANR	8961597	Callee	* cont		8961384	0					
ANR	8961598	UnaryOperationExpression	* cont		8961384	0					
ANR	8961599	UnaryOperator	*		8961384	0					
ANR	8961600	Identifier	cont		8961384	1					
ANR	8961601	ArgumentList	igs		8961384	1					
ANR	8961602	Argument	igs		8961384	0					
ANR	8961603	Identifier	igs		8961384	0					
ANR	8961604	ExpressionStatement	glyph_index = ( uint ) opc -> value . intval	285:4:9913:9950	8961384	13	True				
ANR	8961605	AssignmentExpression	glyph_index = ( uint ) opc -> value . intval		8961384	0		=			
ANR	8961606	Identifier	glyph_index		8961384	0					
ANR	8961607	CastExpression	( uint ) opc -> value . intval		8961384	1					
ANR	8961608	CastTarget	uint		8961384	0					
ANR	8961609	MemberAccess	opc -> value . intval		8961384	1					
ANR	8961610	PtrMemberAccess	opc -> value		8961384	0					
ANR	8961611	Identifier	opc		8961384	0					
ANR	8961612	Identifier	value		8961384	1					
ANR	8961613	Identifier	intval		8961384	1					
ANR	8961614	IfStatement	if ( pfont42 -> data . gsub_size )		8961384	14					
ANR	8961615	Condition	pfont42 -> data . gsub_size	286:8:9960:9982	8961384	0	True				
ANR	8961616	MemberAccess	pfont42 -> data . gsub_size		8961384	0					
ANR	8961617	PtrMemberAccess	pfont42 -> data		8961384	0					
ANR	8961618	Identifier	pfont42		8961384	0					
ANR	8961619	Identifier	data		8961384	1					
ANR	8961620	Identifier	gsub_size		8961384	1					
ANR	8961621	ExpressionStatement	"glyph_index = pfont42 -> data . substitute_glyph_index_vertical ( pfont42 , glyph_index , gs_rootfont ( igs ) -> WMode , penum -> returned . current_glyph )"	287:8:9993:10150	8961384	1	True				
ANR	8961622	AssignmentExpression	"glyph_index = pfont42 -> data . substitute_glyph_index_vertical ( pfont42 , glyph_index , gs_rootfont ( igs ) -> WMode , penum -> returned . current_glyph )"		8961384	0		=			
ANR	8961623	Identifier	glyph_index		8961384	0					
ANR	8961624	CallExpression	"pfont42 -> data . substitute_glyph_index_vertical ( pfont42 , glyph_index , gs_rootfont ( igs ) -> WMode , penum -> returned . current_glyph )"		8961384	1					
ANR	8961625	Callee	pfont42 -> data . substitute_glyph_index_vertical		8961384	0					
ANR	8961626	MemberAccess	pfont42 -> data . substitute_glyph_index_vertical		8961384	0					
ANR	8961627	PtrMemberAccess	pfont42 -> data		8961384	0					
ANR	8961628	Identifier	pfont42		8961384	0					
ANR	8961629	Identifier	data		8961384	1					
ANR	8961630	Identifier	substitute_glyph_index_vertical		8961384	1					
ANR	8961631	ArgumentList	pfont42		8961384	1					
ANR	8961632	Argument	pfont42		8961384	0					
ANR	8961633	Identifier	pfont42		8961384	0					
ANR	8961634	Argument	glyph_index		8961384	1					
ANR	8961635	Identifier	glyph_index		8961384	0					
ANR	8961636	Argument	gs_rootfont ( igs ) -> WMode		8961384	2					
ANR	8961637	PtrMemberAccess	gs_rootfont ( igs ) -> WMode		8961384	0					
ANR	8961638	CallExpression	gs_rootfont ( igs )		8961384	0					
ANR	8961639	Callee	gs_rootfont		8961384	0					
ANR	8961640	Identifier	gs_rootfont		8961384	0					
ANR	8961641	ArgumentList	igs		8961384	1					
ANR	8961642	Argument	igs		8961384	0					
ANR	8961643	Identifier	igs		8961384	0					
ANR	8961644	Identifier	WMode		8961384	1					
ANR	8961645	Argument	penum -> returned . current_glyph		8961384	3					
ANR	8961646	MemberAccess	penum -> returned . current_glyph		8961384	0					
ANR	8961647	PtrMemberAccess	penum -> returned		8961384	0					
ANR	8961648	Identifier	penum		8961384	0					
ANR	8961649	Identifier	returned		8961384	1					
ANR	8961650	Identifier	current_glyph		8961384	1					
ANR	8961651	ExpressionStatement	"code = gs_type42_append ( glyph_index , igs , igs -> path , penum , pfont , ( penum -> text . operation & TEXT_DO_ANY_CHARPATH ) != 0 )"	294:4:10344:10519	8961384	15	True				
ANR	8961652	AssignmentExpression	"code = gs_type42_append ( glyph_index , igs , igs -> path , penum , pfont , ( penum -> text . operation & TEXT_DO_ANY_CHARPATH ) != 0 )"		8961384	0		=			
ANR	8961653	Identifier	code		8961384	0					
ANR	8961654	CallExpression	"gs_type42_append ( glyph_index , igs , igs -> path , penum , pfont , ( penum -> text . operation & TEXT_DO_ANY_CHARPATH ) != 0 )"		8961384	1					
ANR	8961655	Callee	gs_type42_append		8961384	0					
ANR	8961656	Identifier	gs_type42_append		8961384	0					
ANR	8961657	ArgumentList	glyph_index		8961384	1					
ANR	8961658	Argument	glyph_index		8961384	0					
ANR	8961659	Identifier	glyph_index		8961384	0					
ANR	8961660	Argument	igs		8961384	1					
ANR	8961661	Identifier	igs		8961384	0					
ANR	8961662	Argument	igs -> path		8961384	2					
ANR	8961663	PtrMemberAccess	igs -> path		8961384	0					
ANR	8961664	Identifier	igs		8961384	0					
ANR	8961665	Identifier	path		8961384	1					
ANR	8961666	Argument	penum		8961384	3					
ANR	8961667	Identifier	penum		8961384	0					
ANR	8961668	Argument	pfont		8961384	4					
ANR	8961669	Identifier	pfont		8961384	0					
ANR	8961670	Argument	( penum -> text . operation & TEXT_DO_ANY_CHARPATH ) != 0		8961384	5					
ANR	8961671	EqualityExpression	( penum -> text . operation & TEXT_DO_ANY_CHARPATH ) != 0		8961384	0		!=			
ANR	8961672	BitAndExpression	penum -> text . operation & TEXT_DO_ANY_CHARPATH		8961384	0		&			
ANR	8961673	MemberAccess	penum -> text . operation		8961384	0					
ANR	8961674	PtrMemberAccess	penum -> text		8961384	0					
ANR	8961675	Identifier	penum		8961384	0					
ANR	8961676	Identifier	text		8961384	1					
ANR	8961677	Identifier	operation		8961384	1					
ANR	8961678	Identifier	TEXT_DO_ANY_CHARPATH		8961384	1					
ANR	8961679	PrimaryExpression	0		8961384	1					
ANR	8961680	IfStatement	if ( code < 0 )		8961384	16					
ANR	8961681	Condition	code < 0	297:8:10529:10536	8961384	0	True				
ANR	8961682	RelationalExpression	code < 0		8961384	0		<			
ANR	8961683	Identifier	code		8961384	0					
ANR	8961684	PrimaryExpression	0		8961384	1					
ANR	8961685	ReturnStatement	return code ;	298:8:10547:10558	8961384	1	True				
ANR	8961686	Identifier	code		8961384	0					
ANR	8961687	ExpressionStatement	pop ( 4 )	299:4:10564:10570	8961384	17	True				
ANR	8961688	CallExpression	pop ( 4 )		8961384	0					
ANR	8961689	Callee	pop		8961384	0					
ANR	8961690	Identifier	pop		8961384	0					
ANR	8961691	ArgumentList	4		8961384	1					
ANR	8961692	Argument	4		8961384	0					
ANR	8961693	PrimaryExpression	4		8961384	0					
ANR	8961694	ReturnStatement	return ( * cont ) ( igs ) ;	300:4:10576:10595	8961384	18	True				
ANR	8961695	CallExpression	( * cont ) ( igs )		8961384	0					
ANR	8961696	Callee	* cont		8961384	0					
ANR	8961697	UnaryOperationExpression	* cont		8961384	0					
ANR	8961698	UnaryOperator	*		8961384	0					
ANR	8961699	Identifier	cont		8961384	1					
ANR	8961700	ArgumentList	igs		8961384	1					
ANR	8961701	Argument	igs		8961384	0					
ANR	8961702	Identifier	igs		8961384	0					
ANR	8961703	ReturnType	static int		8961384	1					
ANR	8961704	Identifier	type42_finish		8961384	2					
ANR	8961705	ParameterList	"i_ctx_t * i_ctx_p , int ( * cont ) ( gs_gstate * )"		8961384	3					
ANR	8961706	Parameter	i_ctx_t * i_ctx_p	253:14:8895:8910	8961384	0	True				
ANR	8961707	ParameterType	i_ctx_t *		8961384	0					
ANR	8961708	Identifier	i_ctx_p		8961384	1					
ANR	8961709	Parameter	int ( * cont ) ( gs_gstate * )	253:32:8913:8937	8961384	1	True				
ANR	8961710	ParameterType	(( gs_gstate * ) int) *		8961384	0					
ANR	8961711	Identifier	cont		8961384	1					
ANR	8961712	CFGEntryNode	ENTRY		8961384		True				
ANR	8961713	CFGExitNode	EXIT		8961384		True				
ANR	8961714	Symbol	op_show_find		8961384						
ANR	8961715	Symbol	glyph_index		8961384						
ANR	8961716	Symbol	gs_error_undefined		8961384						
ANR	8961717	Symbol	osp		8961384						
ANR	8961718	Symbol	penum -> returned		8961384						
ANR	8961719	Symbol	strncmp		8961384						
ANR	8961720	Symbol	r_has_type		8961384						
ANR	8961721	Symbol	igs		8961384						
ANR	8961722	Symbol	t_name		8961384						
ANR	8961723	Symbol	* i_ctx_p		8961384						
ANR	8961724	Symbol	imemory		8961384						
ANR	8961725	Symbol	cont		8961384						
ANR	8961726	Symbol	* gs_rootfont		8961384						
ANR	8961727	Symbol	opc		8961384						
ANR	8961728	Symbol	penum		8961384						
ANR	8961729	Symbol	opc -> value		8961384						
ANR	8961730	Symbol	gref . tas		8961384						
ANR	8961731	Symbol	t_integer		8961384						
ANR	8961732	Symbol	pfont42 -> data . gsub_size		8961384						
ANR	8961733	Symbol	ft_CID_TrueType		8961384						
ANR	8961734	Symbol	i_ctx_p		8961384						
ANR	8961735	Symbol	penum -> returned . current_glyph		8961384						
ANR	8961736	Symbol	gref . value . const_bytes		8961384						
ANR	8961737	Symbol	* igs		8961384						
ANR	8961738	Symbol	* penum		8961384						
ANR	8961739	Symbol	penum -> text . operation		8961384						
ANR	8961740	Symbol	code		8961384						
ANR	8961741	Symbol	penum -> text		8961384						
ANR	8961742	Symbol	ft_TrueType		8961384						
ANR	8961743	Symbol	* opc		8961384						
ANR	8961744	Symbol	gs_type42_append		8961384						
ANR	8961745	Symbol	& gref		8961384						
ANR	8961746	Symbol	opc -> value . intval		8961384						
ANR	8961747	Symbol	igs -> path		8961384						
ANR	8961748	Symbol	pfont42 -> data		8961384						
ANR	8961749	Symbol	pfont -> FontType		8961384						
ANR	8961750	Symbol	gref . tas . rsize		8961384						
ANR	8961751	Symbol	gs_rootfont		8961384						
ANR	8961752	Symbol	i_ctx_p -> RenderTTNotdef		8961384						
ANR	8961753	Symbol	op		8961384						
ANR	8961754	Symbol	pfont		8961384						
ANR	8961755	Symbol	pfont42		8961384						
ANR	8961756	Symbol	& pfont		8961384						
ANR	8961757	Symbol	font_param		8961384						
ANR	8961758	Symbol	pfont42 -> data . substitute_glyph_index_vertical		8961384						
ANR	8961759	Symbol	TEXT_DO_ANY_CHARPATH		8961384						
ANR	8961760	Symbol	* pfont42		8961384						
ANR	8961761	Symbol	gref . value		8961384						
ANR	8961762	Symbol	* pfont		8961384						
ANR	8961763	Symbol	* cont		8961384						
ANR	8961764	Symbol	gs_rootfont ( igs ) -> WMode		8961384						
ANR	8961765	Symbol	gref		8961384						
ANR	8961766	DeclStmt									
ANR	8961767	Decl							const op_def	const op_def [ ]	zchar42_op_defs
