command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	680432	File	data/converged/CVE-2018-16863_ghostpdl/base_gsline.c								
ANR	680433	Function	gs_setlinewidth	34:0:1047:1152							
ANR	680434	FunctionDef	"gs_setlinewidth (gs_gstate * pgs , double width)"		680433	0					
ANR	680435	CompoundStatement		36:0:1098:1152	680433	0					
ANR	680436	ExpressionStatement	"gx_set_line_width ( pgs_lp , width )"	37:4:1104:1136	680433	0	True				
ANR	680437	CallExpression	"gx_set_line_width ( pgs_lp , width )"		680433	0					
ANR	680438	Callee	gx_set_line_width		680433	0					
ANR	680439	Identifier	gx_set_line_width		680433	0					
ANR	680440	ArgumentList	pgs_lp		680433	1					
ANR	680441	Argument	pgs_lp		680433	0					
ANR	680442	Identifier	pgs_lp		680433	0					
ANR	680443	Argument	width		680433	1					
ANR	680444	Identifier	width		680433	0					
ANR	680445	ReturnStatement	return 0 ;	38:4:1142:1150	680433	1	True				
ANR	680446	PrimaryExpression	0		680433	0					
ANR	680447	ReturnType	int		680433	1					
ANR	680448	Identifier	gs_setlinewidth		680433	2					
ANR	680449	ParameterList	"gs_gstate * pgs , double width"		680433	3					
ANR	680450	Parameter	gs_gstate * pgs	35:16:1067:1081	680433	0	True				
ANR	680451	ParameterType	gs_gstate *		680433	0					
ANR	680452	Identifier	pgs		680433	1					
ANR	680453	Parameter	double width	35:33:1084:1095	680433	1	True				
ANR	680454	ParameterType	double		680433	0					
ANR	680455	Identifier	width		680433	1					
ANR	680456	CFGEntryNode	ENTRY		680433		True				
ANR	680457	CFGExitNode	EXIT		680433		True				
ANR	680458	Symbol	width		680433						
ANR	680459	Symbol	pgs_lp		680433						
ANR	680460	Symbol	pgs		680433						
ANR	680461	Function	gs_currentlinewidth	42:0:1178:1271							
ANR	680462	FunctionDef	gs_currentlinewidth (const gs_gstate * pgs)		680461	0					
ANR	680463	CompoundStatement		44:0:1227:1271	680461	0					
ANR	680464	ReturnStatement	return gx_current_line_width ( pgs_lp ) ;	45:4:1233:1269	680461	0	True				
ANR	680465	CallExpression	gx_current_line_width ( pgs_lp )		680461	0					
ANR	680466	Callee	gx_current_line_width		680461	0					
ANR	680467	Identifier	gx_current_line_width		680461	0					
ANR	680468	ArgumentList	pgs_lp		680461	1					
ANR	680469	Argument	pgs_lp		680461	0					
ANR	680470	Identifier	pgs_lp		680461	0					
ANR	680471	ReturnType	float		680461	1					
ANR	680472	Identifier	gs_currentlinewidth		680461	2					
ANR	680473	ParameterList	const gs_gstate * pgs		680461	3					
ANR	680474	Parameter	const gs_gstate * pgs	43:20:1204:1224	680461	0	True				
ANR	680475	ParameterType	const gs_gstate *		680461	0					
ANR	680476	Identifier	pgs		680461	1					
ANR	680477	CFGEntryNode	ENTRY		680461		True				
ANR	680478	CFGExitNode	EXIT		680461		True				
ANR	680479	Symbol	pgs_lp		680461						
ANR	680480	Symbol	pgs		680461						
ANR	680481	Symbol	gx_current_line_width		680461						
ANR	680482	Function	gs_setlinecap	49:0:1309:1545							
ANR	680483	FunctionDef	"gs_setlinecap (gs_gstate * pgs , gs_line_cap cap)"		680482	0					
ANR	680484	CompoundStatement		51:0:1361:1545	680482	0					
ANR	680485	IfStatement	if ( ( uint ) cap > gs_line_cap_max )		680482	0					
ANR	680486	Condition	( uint ) cap > gs_line_cap_max	52:8:1371:1398	680482	0	True				
ANR	680487	RelationalExpression	( uint ) cap > gs_line_cap_max		680482	0		>			
ANR	680488	CastExpression	( uint ) cap		680482	0					
ANR	680489	CastTarget	uint		680482	0					
ANR	680490	Identifier	cap		680482	1					
ANR	680491	Identifier	gs_line_cap_max		680482	1					
ANR	680492	ExpressionStatement	return_error ( gs_error_rangecheck )	53:8:1409:1442	680482	1	True				
ANR	680493	CallExpression	return_error ( gs_error_rangecheck )		680482	0					
ANR	680494	Callee	return_error		680482	0					
ANR	680495	Identifier	return_error		680482	0					
ANR	680496	ArgumentList	gs_error_rangecheck		680482	1					
ANR	680497	Argument	gs_error_rangecheck		680482	0					
ANR	680498	Identifier	gs_error_rangecheck		680482	0					
ANR	680499	ExpressionStatement	pgs_lp -> start_cap = cap	54:4:1448:1471	680482	1	True				
ANR	680500	AssignmentExpression	pgs_lp -> start_cap = cap		680482	0		=			
ANR	680501	PtrMemberAccess	pgs_lp -> start_cap		680482	0					
ANR	680502	Identifier	pgs_lp		680482	0					
ANR	680503	Identifier	start_cap		680482	1					
ANR	680504	Identifier	cap		680482	1					
ANR	680505	ExpressionStatement	pgs_lp -> end_cap = cap	55:4:1477:1500	680482	2	True				
ANR	680506	AssignmentExpression	pgs_lp -> end_cap = cap		680482	0		=			
ANR	680507	PtrMemberAccess	pgs_lp -> end_cap		680482	0					
ANR	680508	Identifier	pgs_lp		680482	0					
ANR	680509	Identifier	end_cap		680482	1					
ANR	680510	Identifier	cap		680482	1					
ANR	680511	ExpressionStatement	pgs_lp -> dash_cap = cap	56:4:1506:1529	680482	3	True				
ANR	680512	AssignmentExpression	pgs_lp -> dash_cap = cap		680482	0		=			
ANR	680513	PtrMemberAccess	pgs_lp -> dash_cap		680482	0					
ANR	680514	Identifier	pgs_lp		680482	0					
ANR	680515	Identifier	dash_cap		680482	1					
ANR	680516	Identifier	cap		680482	1					
ANR	680517	ReturnStatement	return 0 ;	57:4:1535:1543	680482	4	True				
ANR	680518	PrimaryExpression	0		680482	0					
ANR	680519	ReturnType	int		680482	1					
ANR	680520	Identifier	gs_setlinecap		680482	2					
ANR	680521	ParameterList	"gs_gstate * pgs , gs_line_cap cap"		680482	3					
ANR	680522	Parameter	gs_gstate * pgs	50:14:1327:1341	680482	0	True				
ANR	680523	ParameterType	gs_gstate *		680482	0					
ANR	680524	Identifier	pgs		680482	1					
ANR	680525	Parameter	gs_line_cap cap	50:31:1344:1358	680482	1	True				
ANR	680526	ParameterType	gs_line_cap		680482	0					
ANR	680527	Identifier	cap		680482	1					
ANR	680528	CFGEntryNode	ENTRY		680482		True				
ANR	680529	CFGExitNode	EXIT		680482		True				
ANR	680530	Symbol	cap		680482						
ANR	680531	Symbol	pgs_lp -> start_cap		680482						
ANR	680532	Symbol	gs_line_cap_max		680482						
ANR	680533	Symbol	gs_error_rangecheck		680482						
ANR	680534	Symbol	* pgs_lp		680482						
ANR	680535	Symbol	pgs_lp -> end_cap		680482						
ANR	680536	Symbol	pgs_lp		680482						
ANR	680537	Symbol	pgs_lp -> dash_cap		680482						
ANR	680538	Symbol	pgs		680482						
ANR	680539	Function	gs_setlinestartcap	61:0:1570:1753							
ANR	680540	FunctionDef	"gs_setlinestartcap (gs_gstate * pgs , gs_line_cap cap)"		680539	0					
ANR	680541	CompoundStatement		63:0:1627:1753	680539	0					
ANR	680542	IfStatement	if ( ( uint ) cap > gs_line_cap_max )		680539	0					
ANR	680543	Condition	( uint ) cap > gs_line_cap_max	64:8:1637:1664	680539	0	True				
ANR	680544	RelationalExpression	( uint ) cap > gs_line_cap_max		680539	0		>			
ANR	680545	CastExpression	( uint ) cap		680539	0					
ANR	680546	CastTarget	uint		680539	0					
ANR	680547	Identifier	cap		680539	1					
ANR	680548	Identifier	gs_line_cap_max		680539	1					
ANR	680549	ExpressionStatement	return_error ( gs_error_rangecheck )	65:8:1675:1708	680539	1	True				
ANR	680550	CallExpression	return_error ( gs_error_rangecheck )		680539	0					
ANR	680551	Callee	return_error		680539	0					
ANR	680552	Identifier	return_error		680539	0					
ANR	680553	ArgumentList	gs_error_rangecheck		680539	1					
ANR	680554	Argument	gs_error_rangecheck		680539	0					
ANR	680555	Identifier	gs_error_rangecheck		680539	0					
ANR	680556	ExpressionStatement	pgs_lp -> start_cap = cap	66:4:1714:1737	680539	1	True				
ANR	680557	AssignmentExpression	pgs_lp -> start_cap = cap		680539	0		=			
ANR	680558	PtrMemberAccess	pgs_lp -> start_cap		680539	0					
ANR	680559	Identifier	pgs_lp		680539	0					
ANR	680560	Identifier	start_cap		680539	1					
ANR	680561	Identifier	cap		680539	1					
ANR	680562	ReturnStatement	return 0 ;	67:4:1743:1751	680539	2	True				
ANR	680563	PrimaryExpression	0		680539	0					
ANR	680564	ReturnType	int		680539	1					
ANR	680565	Identifier	gs_setlinestartcap		680539	2					
ANR	680566	ParameterList	"gs_gstate * pgs , gs_line_cap cap"		680539	3					
ANR	680567	Parameter	gs_gstate * pgs	62:19:1593:1607	680539	0	True				
ANR	680568	ParameterType	gs_gstate *		680539	0					
ANR	680569	Identifier	pgs		680539	1					
ANR	680570	Parameter	gs_line_cap cap	62:36:1610:1624	680539	1	True				
ANR	680571	ParameterType	gs_line_cap		680539	0					
ANR	680572	Identifier	cap		680539	1					
ANR	680573	CFGEntryNode	ENTRY		680539		True				
ANR	680574	CFGExitNode	EXIT		680539		True				
ANR	680575	Symbol	cap		680539						
ANR	680576	Symbol	pgs_lp -> start_cap		680539						
ANR	680577	Symbol	gs_line_cap_max		680539						
ANR	680578	Symbol	gs_error_rangecheck		680539						
ANR	680579	Symbol	* pgs_lp		680539						
ANR	680580	Symbol	pgs_lp		680539						
ANR	680581	Symbol	pgs		680539						
ANR	680582	Function	gs_setlineendcap	71:0:1776:1955							
ANR	680583	FunctionDef	"gs_setlineendcap (gs_gstate * pgs , gs_line_cap cap)"		680582	0					
ANR	680584	CompoundStatement		73:0:1831:1955	680582	0					
ANR	680585	IfStatement	if ( ( uint ) cap > gs_line_cap_max )		680582	0					
ANR	680586	Condition	( uint ) cap > gs_line_cap_max	74:8:1841:1868	680582	0	True				
ANR	680587	RelationalExpression	( uint ) cap > gs_line_cap_max		680582	0		>			
ANR	680588	CastExpression	( uint ) cap		680582	0					
ANR	680589	CastTarget	uint		680582	0					
ANR	680590	Identifier	cap		680582	1					
ANR	680591	Identifier	gs_line_cap_max		680582	1					
ANR	680592	ExpressionStatement	return_error ( gs_error_rangecheck )	75:8:1879:1912	680582	1	True				
ANR	680593	CallExpression	return_error ( gs_error_rangecheck )		680582	0					
ANR	680594	Callee	return_error		680582	0					
ANR	680595	Identifier	return_error		680582	0					
ANR	680596	ArgumentList	gs_error_rangecheck		680582	1					
ANR	680597	Argument	gs_error_rangecheck		680582	0					
ANR	680598	Identifier	gs_error_rangecheck		680582	0					
ANR	680599	ExpressionStatement	pgs_lp -> end_cap = cap	76:4:1918:1939	680582	1	True				
ANR	680600	AssignmentExpression	pgs_lp -> end_cap = cap		680582	0		=			
ANR	680601	PtrMemberAccess	pgs_lp -> end_cap		680582	0					
ANR	680602	Identifier	pgs_lp		680582	0					
ANR	680603	Identifier	end_cap		680582	1					
ANR	680604	Identifier	cap		680582	1					
ANR	680605	ReturnStatement	return 0 ;	77:4:1945:1953	680582	2	True				
ANR	680606	PrimaryExpression	0		680582	0					
ANR	680607	ReturnType	int		680582	1					
ANR	680608	Identifier	gs_setlineendcap		680582	2					
ANR	680609	ParameterList	"gs_gstate * pgs , gs_line_cap cap"		680582	3					
ANR	680610	Parameter	gs_gstate * pgs	72:17:1797:1811	680582	0	True				
ANR	680611	ParameterType	gs_gstate *		680582	0					
ANR	680612	Identifier	pgs		680582	1					
ANR	680613	Parameter	gs_line_cap cap	72:34:1814:1828	680582	1	True				
ANR	680614	ParameterType	gs_line_cap		680582	0					
ANR	680615	Identifier	cap		680582	1					
ANR	680616	CFGEntryNode	ENTRY		680582		True				
ANR	680617	CFGExitNode	EXIT		680582		True				
ANR	680618	Symbol	cap		680582						
ANR	680619	Symbol	gs_line_cap_max		680582						
ANR	680620	Symbol	gs_error_rangecheck		680582						
ANR	680621	Symbol	* pgs_lp		680582						
ANR	680622	Symbol	pgs_lp -> end_cap		680582						
ANR	680623	Symbol	pgs_lp		680582						
ANR	680624	Symbol	pgs		680582						
ANR	680625	Function	gs_setlinedashcap	81:0:1979:2160							
ANR	680626	FunctionDef	"gs_setlinedashcap (gs_gstate * pgs , gs_line_cap cap)"		680625	0					
ANR	680627	CompoundStatement		83:0:2035:2160	680625	0					
ANR	680628	IfStatement	if ( ( uint ) cap > gs_line_cap_max )		680625	0					
ANR	680629	Condition	( uint ) cap > gs_line_cap_max	84:8:2045:2072	680625	0	True				
ANR	680630	RelationalExpression	( uint ) cap > gs_line_cap_max		680625	0		>			
ANR	680631	CastExpression	( uint ) cap		680625	0					
ANR	680632	CastTarget	uint		680625	0					
ANR	680633	Identifier	cap		680625	1					
ANR	680634	Identifier	gs_line_cap_max		680625	1					
ANR	680635	ExpressionStatement	return_error ( gs_error_rangecheck )	85:8:2083:2116	680625	1	True				
ANR	680636	CallExpression	return_error ( gs_error_rangecheck )		680625	0					
ANR	680637	Callee	return_error		680625	0					
ANR	680638	Identifier	return_error		680625	0					
ANR	680639	ArgumentList	gs_error_rangecheck		680625	1					
ANR	680640	Argument	gs_error_rangecheck		680625	0					
ANR	680641	Identifier	gs_error_rangecheck		680625	0					
ANR	680642	ExpressionStatement	pgs_lp -> dash_cap = cap	86:4:2122:2144	680625	1	True				
ANR	680643	AssignmentExpression	pgs_lp -> dash_cap = cap		680625	0		=			
ANR	680644	PtrMemberAccess	pgs_lp -> dash_cap		680625	0					
ANR	680645	Identifier	pgs_lp		680625	0					
ANR	680646	Identifier	dash_cap		680625	1					
ANR	680647	Identifier	cap		680625	1					
ANR	680648	ReturnStatement	return 0 ;	87:4:2150:2158	680625	2	True				
ANR	680649	PrimaryExpression	0		680625	0					
ANR	680650	ReturnType	int		680625	1					
ANR	680651	Identifier	gs_setlinedashcap		680625	2					
ANR	680652	ParameterList	"gs_gstate * pgs , gs_line_cap cap"		680625	3					
ANR	680653	Parameter	gs_gstate * pgs	82:18:2001:2015	680625	0	True				
ANR	680654	ParameterType	gs_gstate *		680625	0					
ANR	680655	Identifier	pgs		680625	1					
ANR	680656	Parameter	gs_line_cap cap	82:35:2018:2032	680625	1	True				
ANR	680657	ParameterType	gs_line_cap		680625	0					
ANR	680658	Identifier	cap		680625	1					
ANR	680659	CFGEntryNode	ENTRY		680625		True				
ANR	680660	CFGExitNode	EXIT		680625		True				
ANR	680661	Symbol	cap		680625						
ANR	680662	Symbol	gs_line_cap_max		680625						
ANR	680663	Symbol	gs_error_rangecheck		680625						
ANR	680664	Symbol	* pgs_lp		680625						
ANR	680665	Symbol	pgs_lp		680625						
ANR	680666	Symbol	pgs_lp -> dash_cap		680625						
ANR	680667	Symbol	pgs		680625						
ANR	680668	Function	gs_currentlinecap	91:0:2184:2388							
ANR	680669	FunctionDef	gs_currentlinecap (const gs_gstate * pgs)		680668	0					
ANR	680670	CompoundStatement		93:0:2237:2388	680668	0					
ANR	680671	ReturnStatement	return pgs_lp -> start_cap ;	96:4:2362:2386	680668	0	True				
ANR	680672	PtrMemberAccess	pgs_lp -> start_cap		680668	0					
ANR	680673	Identifier	pgs_lp		680668	0					
ANR	680674	Identifier	start_cap		680668	1					
ANR	680675	ReturnType	gs_line_cap		680668	1					
ANR	680676	Identifier	gs_currentlinecap		680668	2					
ANR	680677	ParameterList	const gs_gstate * pgs		680668	3					
ANR	680678	Parameter	const gs_gstate * pgs	92:18:2214:2234	680668	0	True				
ANR	680679	ParameterType	const gs_gstate *		680668	0					
ANR	680680	Identifier	pgs		680668	1					
ANR	680681	CFGEntryNode	ENTRY		680668		True				
ANR	680682	CFGExitNode	EXIT		680668		True				
ANR	680683	Symbol	pgs_lp -> start_cap		680668						
ANR	680684	Symbol	* pgs_lp		680668						
ANR	680685	Symbol	pgs_lp		680668						
ANR	680686	Symbol	pgs		680668						
ANR	680687	Function	gs_setlinejoin	100:0:2409:2588							
ANR	680688	FunctionDef	"gs_setlinejoin (gs_gstate * pgs , gs_line_join join)"		680687	0					
ANR	680689	CompoundStatement		102:0:2464:2588	680687	0					
ANR	680690	IfStatement	if ( ( uint ) join > gs_line_join_max )		680687	0					
ANR	680691	Condition	( uint ) join > gs_line_join_max	103:8:2474:2503	680687	0	True				
ANR	680692	RelationalExpression	( uint ) join > gs_line_join_max		680687	0		>			
ANR	680693	CastExpression	( uint ) join		680687	0					
ANR	680694	CastTarget	uint		680687	0					
ANR	680695	Identifier	join		680687	1					
ANR	680696	Identifier	gs_line_join_max		680687	1					
ANR	680697	ExpressionStatement	return_error ( gs_error_rangecheck )	104:8:2514:2547	680687	1	True				
ANR	680698	CallExpression	return_error ( gs_error_rangecheck )		680687	0					
ANR	680699	Callee	return_error		680687	0					
ANR	680700	Identifier	return_error		680687	0					
ANR	680701	ArgumentList	gs_error_rangecheck		680687	1					
ANR	680702	Argument	gs_error_rangecheck		680687	0					
ANR	680703	Identifier	gs_error_rangecheck		680687	0					
ANR	680704	ExpressionStatement	pgs_lp -> join = join	105:4:2553:2572	680687	1	True				
ANR	680705	AssignmentExpression	pgs_lp -> join = join		680687	0		=			
ANR	680706	PtrMemberAccess	pgs_lp -> join		680687	0					
ANR	680707	Identifier	pgs_lp		680687	0					
ANR	680708	Identifier	join		680687	1					
ANR	680709	Identifier	join		680687	1					
ANR	680710	ReturnStatement	return 0 ;	106:4:2578:2586	680687	2	True				
ANR	680711	PrimaryExpression	0		680687	0					
ANR	680712	ReturnType	int		680687	1					
ANR	680713	Identifier	gs_setlinejoin		680687	2					
ANR	680714	ParameterList	"gs_gstate * pgs , gs_line_join join"		680687	3					
ANR	680715	Parameter	gs_gstate * pgs	101:15:2428:2442	680687	0	True				
ANR	680716	ParameterType	gs_gstate *		680687	0					
ANR	680717	Identifier	pgs		680687	1					
ANR	680718	Parameter	gs_line_join join	101:32:2445:2461	680687	1	True				
ANR	680719	ParameterType	gs_line_join		680687	0					
ANR	680720	Identifier	join		680687	1					
ANR	680721	CFGEntryNode	ENTRY		680687		True				
ANR	680722	CFGExitNode	EXIT		680687		True				
ANR	680723	Symbol	gs_error_rangecheck		680687						
ANR	680724	Symbol	* pgs_lp		680687						
ANR	680725	Symbol	pgs_lp -> join		680687						
ANR	680726	Symbol	pgs_lp		680687						
ANR	680727	Symbol	gs_line_join_max		680687						
ANR	680728	Symbol	join		680687						
ANR	680729	Symbol	pgs		680687						
ANR	680730	Function	gs_currentlinejoin	110:0:2613:2695							
ANR	680731	FunctionDef	gs_currentlinejoin (const gs_gstate * pgs)		680730	0					
ANR	680732	CompoundStatement		112:0:2668:2695	680730	0					
ANR	680733	ReturnStatement	return pgs_lp -> join ;	113:4:2674:2693	680730	0	True				
ANR	680734	PtrMemberAccess	pgs_lp -> join		680730	0					
ANR	680735	Identifier	pgs_lp		680730	0					
ANR	680736	Identifier	join		680730	1					
ANR	680737	ReturnType	gs_line_join		680730	1					
ANR	680738	Identifier	gs_currentlinejoin		680730	2					
ANR	680739	ParameterList	const gs_gstate * pgs		680730	3					
ANR	680740	Parameter	const gs_gstate * pgs	111:19:2645:2665	680730	0	True				
ANR	680741	ParameterType	const gs_gstate *		680730	0					
ANR	680742	Identifier	pgs		680730	1					
ANR	680743	CFGEntryNode	ENTRY		680730		True				
ANR	680744	CFGExitNode	EXIT		680730		True				
ANR	680745	Symbol	* pgs_lp		680730						
ANR	680746	Symbol	pgs_lp -> join		680730						
ANR	680747	Symbol	pgs_lp		680730						
ANR	680748	Symbol	pgs		680730						
ANR	680749	Function	gx_set_miter_limit	117:0:2718:3597							
ANR	680750	FunctionDef	"gx_set_miter_limit (gx_line_params * plp , double limit)"		680749	0					
ANR	680751	CompoundStatement		119:0:2777:3597	680749	0					
ANR	680752	IfStatement	if ( limit < 1.0 )		680749	0					
ANR	680753	Condition	limit < 1.0	120:8:2787:2797	680749	0	True				
ANR	680754	RelationalExpression	limit < 1.0		680749	0		<			
ANR	680755	Identifier	limit		680749	0					
ANR	680756	PrimaryExpression	1.0		680749	1					
ANR	680757	ExpressionStatement	return_error ( gs_error_rangecheck )	121:8:2808:2841	680749	1	True				
ANR	680758	CallExpression	return_error ( gs_error_rangecheck )		680749	0					
ANR	680759	Callee	return_error		680749	0					
ANR	680760	Identifier	return_error		680749	0					
ANR	680761	ArgumentList	gs_error_rangecheck		680749	1					
ANR	680762	Argument	gs_error_rangecheck		680749	0					
ANR	680763	Identifier	gs_error_rangecheck		680749	0					
ANR	680764	ExpressionStatement	plp -> miter_limit = limit	122:4:2847:2871	680749	1	True				
ANR	680765	AssignmentExpression	plp -> miter_limit = limit		680749	0		=			
ANR	680766	PtrMemberAccess	plp -> miter_limit		680749	0					
ANR	680767	Identifier	plp		680749	0					
ANR	680768	Identifier	miter_limit		680749	1					
ANR	680769	Identifier	limit		680749	1					
ANR	680770	CompoundStatement		14:8:549:585	680749	2					
ANR	680771	IdentifierDeclStatement	double limit_squared = limit * limit ;	132:8:3327:3363	680749	0	True				
ANR	680772	IdentifierDecl	limit_squared = limit * limit		680749	0					
ANR	680773	IdentifierDeclType	double		680749	0					
ANR	680774	Identifier	limit_squared		680749	1					
ANR	680775	AssignmentExpression	limit_squared = limit * limit		680749	2		=			
ANR	680776	Identifier	limit_squared		680749	0					
ANR	680777	MultiplicativeExpression	limit * limit		680749	1		*			
ANR	680778	Identifier	limit		680749	0					
ANR	680779	Identifier	limit		680749	1					
ANR	680780	IfStatement	if ( limit_squared < 2.0001 && limit_squared > 1.9999 )		680749	1					
ANR	680781	Condition	limit_squared < 2.0001 && limit_squared > 1.9999	134:12:3378:3425	680749	0	True				
ANR	680782	AndExpression	limit_squared < 2.0001 && limit_squared > 1.9999		680749	0		&&			
ANR	680783	RelationalExpression	limit_squared < 2.0001		680749	0		<			
ANR	680784	Identifier	limit_squared		680749	0					
ANR	680785	PrimaryExpression	2.0001		680749	1					
ANR	680786	RelationalExpression	limit_squared > 1.9999		680749	1		>			
ANR	680787	Identifier	limit_squared		680749	0					
ANR	680788	PrimaryExpression	1.9999		680749	1					
ANR	680789	ExpressionStatement	plp -> miter_check = 1.0e6	135:12:3440:3464	680749	1	True				
ANR	680790	AssignmentExpression	plp -> miter_check = 1.0e6		680749	0		=			
ANR	680791	PtrMemberAccess	plp -> miter_check		680749	0					
ANR	680792	Identifier	plp		680749	0					
ANR	680793	Identifier	miter_check		680749	1					
ANR	680794	PrimaryExpression	1.0e6		680749	1					
ANR	680795	ElseStatement	else		680749	0					
ANR	680796	ExpressionStatement	plp -> miter_check = sqrt ( limit_squared - 1 ) * 2 / ( limit_squared - 2 )	137:12:3491:3575	680749	0	True				
ANR	680797	AssignmentExpression	plp -> miter_check = sqrt ( limit_squared - 1 ) * 2 / ( limit_squared - 2 )		680749	0		=			
ANR	680798	PtrMemberAccess	plp -> miter_check		680749	0					
ANR	680799	Identifier	plp		680749	0					
ANR	680800	Identifier	miter_check		680749	1					
ANR	680801	MultiplicativeExpression	sqrt ( limit_squared - 1 ) * 2 / ( limit_squared - 2 )		680749	1		*			
ANR	680802	CallExpression	sqrt ( limit_squared - 1 )		680749	0					
ANR	680803	Callee	sqrt		680749	0					
ANR	680804	Identifier	sqrt		680749	0					
ANR	680805	ArgumentList	limit_squared - 1		680749	1					
ANR	680806	Argument	limit_squared - 1		680749	0					
ANR	680807	AdditiveExpression	limit_squared - 1		680749	0		-			
ANR	680808	Identifier	limit_squared		680749	0					
ANR	680809	PrimaryExpression	1		680749	1					
ANR	680810	MultiplicativeExpression	2 / ( limit_squared - 2 )		680749	1		/			
ANR	680811	PrimaryExpression	2		680749	0					
ANR	680812	AdditiveExpression	limit_squared - 2		680749	1		-			
ANR	680813	Identifier	limit_squared		680749	0					
ANR	680814	PrimaryExpression	2		680749	1					
ANR	680815	ReturnStatement	return 0 ;	140:4:3587:3595	680749	3	True				
ANR	680816	PrimaryExpression	0		680749	0					
ANR	680817	ReturnType	int		680749	1					
ANR	680818	Identifier	gx_set_miter_limit		680749	2					
ANR	680819	ParameterList	"gx_line_params * plp , double limit"		680749	3					
ANR	680820	Parameter	gx_line_params * plp	118:19:2741:2760	680749	0	True				
ANR	680821	ParameterType	gx_line_params *		680749	0					
ANR	680822	Identifier	plp		680749	1					
ANR	680823	Parameter	double limit	118:41:2763:2774	680749	1	True				
ANR	680824	ParameterType	double		680749	0					
ANR	680825	Identifier	limit		680749	1					
ANR	680826	CFGEntryNode	ENTRY		680749		True				
ANR	680827	CFGExitNode	EXIT		680749		True				
ANR	680828	Symbol	limit_squared		680749						
ANR	680829	Symbol	gs_error_rangecheck		680749						
ANR	680830	Symbol	plp		680749						
ANR	680831	Symbol	sqrt		680749						
ANR	680832	Symbol	limit		680749						
ANR	680833	Symbol	plp -> miter_limit		680749						
ANR	680834	Symbol	plp -> miter_check		680749						
ANR	680835	Symbol	* plp		680749						
ANR	680836	Function	gs_setmiterlimit	142:0:3599:3699							
ANR	680837	FunctionDef	"gs_setmiterlimit (gs_gstate * pgs , double limit)"		680836	0					
ANR	680838	CompoundStatement		144:0:3651:3699	680836	0					
ANR	680839	ReturnStatement	"return gx_set_miter_limit ( pgs_lp , limit ) ;"	145:4:3657:3697	680836	0	True				
ANR	680840	CallExpression	"gx_set_miter_limit ( pgs_lp , limit )"		680836	0					
ANR	680841	Callee	gx_set_miter_limit		680836	0					
ANR	680842	Identifier	gx_set_miter_limit		680836	0					
ANR	680843	ArgumentList	pgs_lp		680836	1					
ANR	680844	Argument	pgs_lp		680836	0					
ANR	680845	Identifier	pgs_lp		680836	0					
ANR	680846	Argument	limit		680836	1					
ANR	680847	Identifier	limit		680836	0					
ANR	680848	ReturnType	int		680836	1					
ANR	680849	Identifier	gs_setmiterlimit		680836	2					
ANR	680850	ParameterList	"gs_gstate * pgs , double limit"		680836	3					
ANR	680851	Parameter	gs_gstate * pgs	143:17:3620:3634	680836	0	True				
ANR	680852	ParameterType	gs_gstate *		680836	0					
ANR	680853	Identifier	pgs		680836	1					
ANR	680854	Parameter	double limit	143:34:3637:3648	680836	1	True				
ANR	680855	ParameterType	double		680836	0					
ANR	680856	Identifier	limit		680836	1					
ANR	680857	CFGEntryNode	ENTRY		680836		True				
ANR	680858	CFGExitNode	EXIT		680836		True				
ANR	680859	Symbol	limit		680836						
ANR	680860	Symbol	pgs_lp		680836						
ANR	680861	Symbol	gx_set_miter_limit		680836						
ANR	680862	Symbol	pgs		680836						
ANR	680863	Function	gs_currentmiterlimit	149:0:3726:3810							
ANR	680864	FunctionDef	gs_currentmiterlimit (const gs_gstate * pgs)		680863	0					
ANR	680865	CompoundStatement		151:0:3776:3810	680863	0					
ANR	680866	ReturnStatement	return pgs_lp -> miter_limit ;	152:4:3782:3808	680863	0	True				
ANR	680867	PtrMemberAccess	pgs_lp -> miter_limit		680863	0					
ANR	680868	Identifier	pgs_lp		680863	0					
ANR	680869	Identifier	miter_limit		680863	1					
ANR	680870	ReturnType	float		680863	1					
ANR	680871	Identifier	gs_currentmiterlimit		680863	2					
ANR	680872	ParameterList	const gs_gstate * pgs		680863	3					
ANR	680873	Parameter	const gs_gstate * pgs	150:21:3753:3773	680863	0	True				
ANR	680874	ParameterType	const gs_gstate *		680863	0					
ANR	680875	Identifier	pgs		680863	1					
ANR	680876	CFGEntryNode	ENTRY		680863		True				
ANR	680877	CFGExitNode	EXIT		680863		True				
ANR	680878	Symbol	pgs_lp -> miter_limit		680863						
ANR	680879	Symbol	* pgs_lp		680863						
ANR	680880	Symbol	pgs_lp		680863						
ANR	680881	Symbol	pgs		680863						
ANR	680882	Function	gx_set_dash	156:0:3827:6381							
ANR	680883	FunctionDef	"gx_set_dash (gx_dash_params * dash , const float * pattern , uint length , double offset , gs_memory_t * mem)"		680882	0					
ANR	680884	CompoundStatement		159:0:3947:6381	680882	0					
ANR	680885	IdentifierDeclStatement	uint n = length ;	160:4:3953:3968	680882	0	True				
ANR	680886	IdentifierDecl	n = length		680882	0					
ANR	680887	IdentifierDeclType	uint		680882	0					
ANR	680888	Identifier	n		680882	1					
ANR	680889	AssignmentExpression	n = length		680882	2		=			
ANR	680890	Identifier	length		680882	0					
ANR	680891	Identifier	length		680882	1					
ANR	680892	IdentifierDeclStatement	const float * dfrom = pattern ;	161:4:3974:4002	680882	1	True				
ANR	680893	IdentifierDecl	* dfrom = pattern		680882	0					
ANR	680894	IdentifierDeclType	const float *		680882	0					
ANR	680895	Identifier	dfrom		680882	1					
ANR	680896	AssignmentExpression	* dfrom = pattern		680882	2		=			
ANR	680897	Identifier	pattern		680882	0					
ANR	680898	Identifier	pattern		680882	1					
ANR	680899	IdentifierDeclStatement	bool ink = true ;	162:4:4008:4023	680882	2	True				
ANR	680900	IdentifierDecl	ink = true		680882	0					
ANR	680901	IdentifierDeclType	bool		680882	0					
ANR	680902	Identifier	ink		680882	1					
ANR	680903	AssignmentExpression	ink = true		680882	2		=			
ANR	680904	Identifier	true		680882	0					
ANR	680905	Identifier	true		680882	1					
ANR	680906	IdentifierDeclStatement	int index = 0 ;	163:4:4029:4042	680882	3	True				
ANR	680907	IdentifierDecl	index = 0		680882	0					
ANR	680908	IdentifierDeclType	int		680882	0					
ANR	680909	Identifier	index		680882	1					
ANR	680910	AssignmentExpression	index = 0		680882	2		=			
ANR	680911	Identifier	index		680882	0					
ANR	680912	PrimaryExpression	0		680882	1					
ANR	680913	IdentifierDeclStatement	float pattern_length = 0.0 ;	164:4:4048:4074	680882	4	True				
ANR	680914	IdentifierDecl	pattern_length = 0.0		680882	0					
ANR	680915	IdentifierDeclType	float		680882	0					
ANR	680916	Identifier	pattern_length		680882	1					
ANR	680917	AssignmentExpression	pattern_length = 0.0		680882	2		=			
ANR	680918	Identifier	pattern_length		680882	0					
ANR	680919	PrimaryExpression	0.0		680882	1					
ANR	680920	IdentifierDeclStatement	float dist_left ;	165:4:4080:4095	680882	5	True				
ANR	680921	IdentifierDecl	dist_left		680882	0					
ANR	680922	IdentifierDeclType	float		680882	0					
ANR	680923	Identifier	dist_left		680882	1					
ANR	680924	IdentifierDeclStatement	float * ppat = dash -> pattern ;	166:4:4101:4128	680882	6	True				
ANR	680925	IdentifierDecl	* ppat = dash -> pattern		680882	0					
ANR	680926	IdentifierDeclType	float *		680882	0					
ANR	680927	Identifier	ppat		680882	1					
ANR	680928	AssignmentExpression	* ppat = dash -> pattern		680882	2		=			
ANR	680929	Identifier	ppat		680882	0					
ANR	680930	PtrMemberAccess	dash -> pattern		680882	1					
ANR	680931	Identifier	dash		680882	0					
ANR	680932	Identifier	pattern		680882	1					
ANR	680933	WhileStatement	while ( n -- )		680882	7					
ANR	680934	Condition	n --	169:11:4176:4178	680882	0	True				
ANR	680935	PostIncDecOperationExpression	n --		680882	0					
ANR	680936	Identifier	n		680882	0					
ANR	680937	IncDec	--		680882	1					
ANR	680938	CompoundStatement		12:8:243:263	680882	1					
ANR	680939	IdentifierDeclStatement	float elt = * dfrom ++ ;	170:8:4191:4211	680882	0	True				
ANR	680940	IdentifierDecl	elt = * dfrom ++		680882	0					
ANR	680941	IdentifierDeclType	float		680882	0					
ANR	680942	Identifier	elt		680882	1					
ANR	680943	AssignmentExpression	elt = * dfrom ++		680882	2		=			
ANR	680944	Identifier	elt		680882	0					
ANR	680945	UnaryOperationExpression	* dfrom ++		680882	1					
ANR	680946	UnaryOperator	*		680882	0					
ANR	680947	PostIncDecOperationExpression	dfrom ++		680882	1					
ANR	680948	Identifier	dfrom		680882	0					
ANR	680949	IncDec	++		680882	1					
ANR	680950	IfStatement	if ( elt < 0 )		680882	1					
ANR	680951	Condition	elt < 0	172:12:4226:4232	680882	0	True				
ANR	680952	RelationalExpression	elt < 0		680882	0		<			
ANR	680953	Identifier	elt		680882	0					
ANR	680954	PrimaryExpression	0		680882	1					
ANR	680955	ExpressionStatement	return_error ( gs_error_rangecheck )	173:12:4247:4280	680882	1	True				
ANR	680956	CallExpression	return_error ( gs_error_rangecheck )		680882	0					
ANR	680957	Callee	return_error		680882	0					
ANR	680958	Identifier	return_error		680882	0					
ANR	680959	ArgumentList	gs_error_rangecheck		680882	1					
ANR	680960	Argument	gs_error_rangecheck		680882	0					
ANR	680961	Identifier	gs_error_rangecheck		680882	0					
ANR	680962	ExpressionStatement	pattern_length += elt	174:8:4290:4311	680882	2	True				
ANR	680963	AssignmentExpression	pattern_length += elt		680882	0		+=			
ANR	680964	Identifier	pattern_length		680882	0					
ANR	680965	Identifier	elt		680882	1					
ANR	680966	IfStatement	if ( length == 0 )		680882	8					
ANR	680967	Condition	length == 0	176:8:4327:4337	680882	0	True				
ANR	680968	EqualityExpression	length == 0		680882	0		==			
ANR	680969	Identifier	length		680882	0					
ANR	680970	PrimaryExpression	0		680882	1					
ANR	680971	CompoundStatement		18:21:392:392	680882	1					
ANR	680972	ExpressionStatement	dist_left = 0.0	177:8:4371:4386	680882	0	True				
ANR	680973	AssignmentExpression	dist_left = 0.0		680882	0		=			
ANR	680974	Identifier	dist_left		680882	0					
ANR	680975	PrimaryExpression	0.0		680882	1					
ANR	680976	IfStatement	if ( mem && ppat )		680882	1					
ANR	680977	Condition	mem && ppat	178:12:4400:4410	680882	0	True				
ANR	680978	AndExpression	mem && ppat		680882	0		&&			
ANR	680979	Identifier	mem		680882	0					
ANR	680980	Identifier	ppat		680882	1					
ANR	680981	CompoundStatement		20:25:465:465	680882	1					
ANR	680982	ExpressionStatement	"gs_free_object ( mem , ppat , ""gx_set_dash(old pattern)"" )"	179:12:4427:4480	680882	0	True				
ANR	680983	CallExpression	"gs_free_object ( mem , ppat , ""gx_set_dash(old pattern)"" )"		680882	0					
ANR	680984	Callee	gs_free_object		680882	0					
ANR	680985	Identifier	gs_free_object		680882	0					
ANR	680986	ArgumentList	mem		680882	1					
ANR	680987	Argument	mem		680882	0					
ANR	680988	Identifier	mem		680882	0					
ANR	680989	Argument	ppat		680882	1					
ANR	680990	Identifier	ppat		680882	0					
ANR	680991	Argument	"""gx_set_dash(old pattern)"""		680882	2					
ANR	680992	PrimaryExpression	"""gx_set_dash(old pattern)"""		680882	0					
ANR	680993	ExpressionStatement	ppat = 0	180:12:4494:4502	680882	1	True				
ANR	680994	AssignmentExpression	ppat = 0		680882	0		=			
ANR	680995	Identifier	ppat		680882	0					
ANR	680996	PrimaryExpression	0		680882	1					
ANR	680997	ElseStatement	else		680882	0					
ANR	680998	CompoundStatement		25:8:587:621	680882	0					
ANR	680999	IdentifierDeclStatement	uint size = length * sizeof ( float ) ;	183:8:4535:4569	680882	0	True				
ANR	681000	IdentifierDecl	size = length * sizeof ( float )		680882	0					
ANR	681001	IdentifierDeclType	uint		680882	0					
ANR	681002	Identifier	size		680882	1					
ANR	681003	AssignmentExpression	size = length * sizeof ( float )		680882	2		=			
ANR	681004	Identifier	size		680882	0					
ANR	681005	MultiplicativeExpression	length * sizeof ( float )		680882	1		*			
ANR	681006	Identifier	length		680882	0					
ANR	681007	SizeofExpression	sizeof ( float )		680882	1					
ANR	681008	Sizeof	sizeof		680882	0					
ANR	681009	SizeofOperand	float		680882	1					
ANR	681010	IfStatement	if ( pattern_length == 0 )		680882	1					
ANR	681011	Condition	pattern_length == 0	185:12:4584:4602	680882	0	True				
ANR	681012	EqualityExpression	pattern_length == 0		680882	0		==			
ANR	681013	Identifier	pattern_length		680882	0					
ANR	681014	PrimaryExpression	0		680882	1					
ANR	681015	ExpressionStatement	return_error ( gs_error_rangecheck )	186:12:4617:4650	680882	1	True				
ANR	681016	CallExpression	return_error ( gs_error_rangecheck )		680882	0					
ANR	681017	Callee	return_error		680882	0					
ANR	681018	Identifier	return_error		680882	0					
ANR	681019	ArgumentList	gs_error_rangecheck		680882	1					
ANR	681020	Argument	gs_error_rangecheck		680882	0					
ANR	681021	Identifier	gs_error_rangecheck		680882	0					
ANR	681022	Statement	define	189:1:4775:4780	680882	2	True				
ANR	681023	Statement	f_mod	189:8:4782:4786	680882	3	True				
ANR	681024	Statement	(	189:13:4787:4787	680882	4	True				
ANR	681025	Statement	a	189:14:4788:4788	680882	5	True				
ANR	681026	Statement	","	189:15:4789:4789	680882	6	True				
ANR	681027	Statement	b	189:17:4791:4791	680882	7	True				
ANR	681028	Statement	)	189:18:4792:4792	680882	8	True				
ANR	681029	Statement	(	189:20:4794:4794	680882	9	True				
ANR	681030	Statement	(	189:21:4795:4795	680882	10	True				
ANR	681031	Statement	a	189:22:4796:4796	680882	11	True				
ANR	681032	Statement	)	189:23:4797:4797	680882	12	True				
ANR	681033	Statement	-	189:25:4799:4799	680882	13	True				
ANR	681034	Statement	floor	189:27:4801:4805	680882	14	True				
ANR	681035	Statement	(	189:32:4806:4806	680882	15	True				
ANR	681036	Statement	(	189:33:4807:4807	680882	16	True				
ANR	681037	Statement	a	189:34:4808:4808	680882	17	True				
ANR	681038	Statement	)	189:35:4809:4809	680882	18	True				
ANR	681039	Statement	/	189:37:4811:4811	680882	19	True				
ANR	681040	Statement	(	189:39:4813:4813	680882	20	True				
ANR	681041	Statement	b	189:40:4814:4814	680882	21	True				
ANR	681042	Statement	)	189:41:4815:4815	680882	22	True				
ANR	681043	Statement	)	189:42:4816:4816	680882	23	True				
ANR	681044	Statement	*	189:44:4818:4818	680882	24	True				
ANR	681045	Statement	(	189:46:4820:4820	680882	25	True				
ANR	681046	Statement	b	189:47:4821:4821	680882	26	True				
ANR	681047	Statement	)	189:48:4822:4822	680882	27	True				
ANR	681048	Statement	)	189:49:4823:4823	680882	28	True				
ANR	681049	IfStatement	if ( length & 1 )		680882	29					
ANR	681050	Condition	length & 1	190:12:4837:4846	680882	0	True				
ANR	681051	BitAndExpression	length & 1		680882	0		&			
ANR	681052	Identifier	length		680882	0					
ANR	681053	PrimaryExpression	1		680882	1					
ANR	681054	CompoundStatement		34:12:1005:1039	680882	1					
ANR	681055	IdentifierDeclStatement	float length2 = pattern_length * 2 ;	192:12:4953:4987	680882	0	True				
ANR	681056	IdentifierDecl	length2 = pattern_length * 2		680882	0					
ANR	681057	IdentifierDeclType	float		680882	0					
ANR	681058	Identifier	length2		680882	1					
ANR	681059	AssignmentExpression	length2 = pattern_length * 2		680882	2		=			
ANR	681060	Identifier	length2		680882	0					
ANR	681061	MultiplicativeExpression	pattern_length * 2		680882	1		*			
ANR	681062	Identifier	pattern_length		680882	0					
ANR	681063	PrimaryExpression	2		680882	1					
ANR	681064	ExpressionStatement	"dist_left = f_mod ( offset , length2 )"	194:12:5002:5036	680882	1	True				
ANR	681065	AssignmentExpression	"dist_left = f_mod ( offset , length2 )"		680882	0		=			
ANR	681066	Identifier	dist_left		680882	0					
ANR	681067	CallExpression	"f_mod ( offset , length2 )"		680882	1					
ANR	681068	Callee	f_mod		680882	0					
ANR	681069	Identifier	f_mod		680882	0					
ANR	681070	ArgumentList	offset		680882	1					
ANR	681071	Argument	offset		680882	0					
ANR	681072	Identifier	offset		680882	0					
ANR	681073	Argument	length2		680882	1					
ANR	681074	Identifier	length2		680882	0					
ANR	681075	ExpressionStatement	"dist_left = f_mod ( dist_left , length2 )"	196:12:5114:5151	680882	2	True				
ANR	681076	AssignmentExpression	"dist_left = f_mod ( dist_left , length2 )"		680882	0		=			
ANR	681077	Identifier	dist_left		680882	0					
ANR	681078	CallExpression	"f_mod ( dist_left , length2 )"		680882	1					
ANR	681079	Callee	f_mod		680882	0					
ANR	681080	Identifier	f_mod		680882	0					
ANR	681081	ArgumentList	dist_left		680882	1					
ANR	681082	Argument	dist_left		680882	0					
ANR	681083	Identifier	dist_left		680882	0					
ANR	681084	Argument	length2		680882	1					
ANR	681085	Identifier	length2		680882	0					
ANR	681086	IfStatement	if ( dist_left >= pattern_length )		680882	3					
ANR	681087	Condition	dist_left >= pattern_length	197:16:5169:5195	680882	0	True				
ANR	681088	RelationalExpression	dist_left >= pattern_length		680882	0		>=			
ANR	681089	Identifier	dist_left		680882	0					
ANR	681090	Identifier	pattern_length		680882	1					
ANR	681091	ExpressionStatement	"dist_left -= pattern_length , ink = ! ink"	198:16:5214:5253	680882	1	True				
ANR	681092	Expression	"dist_left -= pattern_length , ink = ! ink"		680882	0					
ANR	681093	AssignmentExpression	dist_left -= pattern_length		680882	0		-=			
ANR	681094	Identifier	dist_left		680882	0					
ANR	681095	Identifier	pattern_length		680882	1					
ANR	681096	AssignmentExpression	ink = ! ink		680882	1		=			
ANR	681097	Identifier	ink		680882	0					
ANR	681098	UnaryOperationExpression	! ink		680882	1					
ANR	681099	UnaryOperator	!		680882	0					
ANR	681100	Identifier	ink		680882	1					
ANR	681101	ElseStatement	else		680882	0					
ANR	681102	CompoundStatement		41:15:1322:1322	680882	0					
ANR	681103	ExpressionStatement	"dist_left = f_mod ( offset , pattern_length )"	200:12:5284:5325	680882	0	True				
ANR	681104	AssignmentExpression	"dist_left = f_mod ( offset , pattern_length )"		680882	0		=			
ANR	681105	Identifier	dist_left		680882	0					
ANR	681106	CallExpression	"f_mod ( offset , pattern_length )"		680882	1					
ANR	681107	Callee	f_mod		680882	0					
ANR	681108	Identifier	f_mod		680882	0					
ANR	681109	ArgumentList	offset		680882	1					
ANR	681110	Argument	offset		680882	0					
ANR	681111	Identifier	offset		680882	0					
ANR	681112	Argument	pattern_length		680882	1					
ANR	681113	Identifier	pattern_length		680882	0					
ANR	681114	ExpressionStatement	"dist_left = f_mod ( dist_left , pattern_length )"	202:12:5402:5446	680882	1	True				
ANR	681115	AssignmentExpression	"dist_left = f_mod ( dist_left , pattern_length )"		680882	0		=			
ANR	681116	Identifier	dist_left		680882	0					
ANR	681117	CallExpression	"f_mod ( dist_left , pattern_length )"		680882	1					
ANR	681118	Callee	f_mod		680882	0					
ANR	681119	Identifier	f_mod		680882	0					
ANR	681120	ArgumentList	dist_left		680882	1					
ANR	681121	Argument	dist_left		680882	0					
ANR	681122	Identifier	dist_left		680882	0					
ANR	681123	Argument	pattern_length		680882	1					
ANR	681124	Identifier	pattern_length		680882	0					
ANR	681125	WhileStatement	while ( ( dist_left -= pattern [ index ] ) >= 0 && ( dist_left > 0 || pattern [ index ] != 0 ) )		680882	30					
ANR	681126	Condition	( dist_left -= pattern [ index ] ) >= 0 && ( dist_left > 0 || pattern [ index ] != 0 )	204:15:5473:5563	680882	0	True				
ANR	681127	AndExpression	( dist_left -= pattern [ index ] ) >= 0 && ( dist_left > 0 || pattern [ index ] != 0 )		680882	0		&&			
ANR	681128	RelationalExpression	( dist_left -= pattern [ index ] ) >= 0		680882	0		>=			
ANR	681129	AssignmentExpression	dist_left -= pattern [ index ]		680882	0		-=			
ANR	681130	Identifier	dist_left		680882	0					
ANR	681131	ArrayIndexing	pattern [ index ]		680882	1					
ANR	681132	Identifier	pattern		680882	0					
ANR	681133	Identifier	index		680882	1					
ANR	681134	PrimaryExpression	0		680882	1					
ANR	681135	OrExpression	dist_left > 0 || pattern [ index ] != 0		680882	1		||			
ANR	681136	RelationalExpression	dist_left > 0		680882	0		>			
ANR	681137	Identifier	dist_left		680882	0					
ANR	681138	PrimaryExpression	0		680882	1					
ANR	681139	EqualityExpression	pattern [ index ] != 0		680882	1		!=			
ANR	681140	ArrayIndexing	pattern [ index ]		680882	0					
ANR	681141	Identifier	pattern		680882	0					
ANR	681142	Identifier	index		680882	1					
ANR	681143	PrimaryExpression	0		680882	1					
ANR	681144	ExpressionStatement	"ink = ! ink , index ++"	207:12:5591:5610	680882	1	True				
ANR	681145	Expression	"ink = ! ink , index ++"		680882	0					
ANR	681146	AssignmentExpression	ink = ! ink		680882	0		=			
ANR	681147	Identifier	ink		680882	0					
ANR	681148	UnaryOperationExpression	! ink		680882	1					
ANR	681149	UnaryOperator	!		680882	0					
ANR	681150	Identifier	ink		680882	1					
ANR	681151	PostIncDecOperationExpression	index ++		680882	1					
ANR	681152	Identifier	index		680882	0					
ANR	681153	IncDec	++		680882	1					
ANR	681154	IfStatement	if ( mem )		680882	31					
ANR	681155	Condition	mem	208:12:5624:5626	680882	0	True				
ANR	681156	Identifier	mem		680882	0					
ANR	681157	CompoundStatement		50:17:1681:1681	680882	1					
ANR	681158	IfStatement	if ( ppat == 0 )		680882	0					
ANR	681159	Condition	ppat == 0	209:16:5647:5655	680882	0	True				
ANR	681160	EqualityExpression	ppat == 0		680882	0		==			
ANR	681161	Identifier	ppat		680882	0					
ANR	681162	PrimaryExpression	0		680882	1					
ANR	681163	ExpressionStatement	"ppat = ( float * ) gs_alloc_bytes ( mem , size , ""gx_set_dash(pattern)"" )"	210:16:5674:5786	680882	1	True				
ANR	681164	AssignmentExpression	"ppat = ( float * ) gs_alloc_bytes ( mem , size , ""gx_set_dash(pattern)"" )"		680882	0		=			
ANR	681165	Identifier	ppat		680882	0					
ANR	681166	CastExpression	"( float * ) gs_alloc_bytes ( mem , size , ""gx_set_dash(pattern)"" )"		680882	1					
ANR	681167	CastTarget	float *		680882	0					
ANR	681168	CallExpression	"gs_alloc_bytes ( mem , size , ""gx_set_dash(pattern)"" )"		680882	1					
ANR	681169	Callee	gs_alloc_bytes		680882	0					
ANR	681170	Identifier	gs_alloc_bytes		680882	0					
ANR	681171	ArgumentList	mem		680882	1					
ANR	681172	Argument	mem		680882	0					
ANR	681173	Identifier	mem		680882	0					
ANR	681174	Argument	size		680882	1					
ANR	681175	Identifier	size		680882	0					
ANR	681176	Argument	"""gx_set_dash(pattern)"""		680882	2					
ANR	681177	PrimaryExpression	"""gx_set_dash(pattern)"""		680882	0					
ANR	681178	ElseStatement	else		680882	0					
ANR	681179	IfStatement	if ( length != dash -> pattern_size )		680882	0					
ANR	681180	Condition	length != dash -> pattern_size	212:21:5809:5836	680882	0	True				
ANR	681181	EqualityExpression	length != dash -> pattern_size		680882	0		!=			
ANR	681182	Identifier	length		680882	0					
ANR	681183	PtrMemberAccess	dash -> pattern_size		680882	1					
ANR	681184	Identifier	dash		680882	0					
ANR	681185	Identifier	pattern_size		680882	1					
ANR	681186	ExpressionStatement	"ppat = gs_resize_object ( mem , ppat , size , ""gx_set_dash(pattern)"" )"	213:16:5855:5959	680882	1	True				
ANR	681187	AssignmentExpression	"ppat = gs_resize_object ( mem , ppat , size , ""gx_set_dash(pattern)"" )"		680882	0		=			
ANR	681188	Identifier	ppat		680882	0					
ANR	681189	CallExpression	"gs_resize_object ( mem , ppat , size , ""gx_set_dash(pattern)"" )"		680882	1					
ANR	681190	Callee	gs_resize_object		680882	0					
ANR	681191	Identifier	gs_resize_object		680882	0					
ANR	681192	ArgumentList	mem		680882	1					
ANR	681193	Argument	mem		680882	0					
ANR	681194	Identifier	mem		680882	0					
ANR	681195	Argument	ppat		680882	1					
ANR	681196	Identifier	ppat		680882	0					
ANR	681197	Argument	size		680882	2					
ANR	681198	Identifier	size		680882	0					
ANR	681199	Argument	"""gx_set_dash(pattern)"""		680882	3					
ANR	681200	PrimaryExpression	"""gx_set_dash(pattern)"""		680882	0					
ANR	681201	IfStatement	if ( ppat == 0 )		680882	1					
ANR	681202	Condition	ppat == 0	215:16:5977:5985	680882	0	True				
ANR	681203	EqualityExpression	ppat == 0		680882	0		==			
ANR	681204	Identifier	ppat		680882	0					
ANR	681205	PrimaryExpression	0		680882	1					
ANR	681206	ExpressionStatement	return_error ( gs_error_VMerror )	216:16:6004:6034	680882	1	True				
ANR	681207	CallExpression	return_error ( gs_error_VMerror )		680882	0					
ANR	681208	Callee	return_error		680882	0					
ANR	681209	Identifier	return_error		680882	0					
ANR	681210	ArgumentList	gs_error_VMerror		680882	1					
ANR	681211	Argument	gs_error_VMerror		680882	0					
ANR	681212	Identifier	gs_error_VMerror		680882	0					
ANR	681213	IfStatement	if ( ppat != pattern )		680882	32					
ANR	681214	Condition	ppat != pattern	218:12:6058:6072	680882	0	True				
ANR	681215	EqualityExpression	ppat != pattern		680882	0		!=			
ANR	681216	Identifier	ppat		680882	0					
ANR	681217	Identifier	pattern		680882	1					
ANR	681218	ExpressionStatement	"memcpy ( ppat , pattern , length * sizeof ( float ) )"	219:12:6087:6132	680882	1	True				
ANR	681219	CallExpression	"memcpy ( ppat , pattern , length * sizeof ( float ) )"		680882	0					
ANR	681220	Callee	memcpy		680882	0					
ANR	681221	Identifier	memcpy		680882	0					
ANR	681222	ArgumentList	ppat		680882	1					
ANR	681223	Argument	ppat		680882	0					
ANR	681224	Identifier	ppat		680882	0					
ANR	681225	Argument	pattern		680882	1					
ANR	681226	Identifier	pattern		680882	0					
ANR	681227	Argument	length * sizeof ( float )		680882	2					
ANR	681228	MultiplicativeExpression	length * sizeof ( float )		680882	0		*			
ANR	681229	Identifier	length		680882	0					
ANR	681230	SizeofExpression	sizeof ( float )		680882	1					
ANR	681231	Sizeof	sizeof		680882	0					
ANR	681232	SizeofOperand	float		680882	1					
ANR	681233	ExpressionStatement	dash -> pattern = ppat	221:4:6144:6164	680882	9	True				
ANR	681234	AssignmentExpression	dash -> pattern = ppat		680882	0		=			
ANR	681235	PtrMemberAccess	dash -> pattern		680882	0					
ANR	681236	Identifier	dash		680882	0					
ANR	681237	Identifier	pattern		680882	1					
ANR	681238	Identifier	ppat		680882	1					
ANR	681239	ExpressionStatement	dash -> pattern_size = length	222:4:6170:6197	680882	10	True				
ANR	681240	AssignmentExpression	dash -> pattern_size = length		680882	0		=			
ANR	681241	PtrMemberAccess	dash -> pattern_size		680882	0					
ANR	681242	Identifier	dash		680882	0					
ANR	681243	Identifier	pattern_size		680882	1					
ANR	681244	Identifier	length		680882	1					
ANR	681245	ExpressionStatement	dash -> offset = offset	223:4:6203:6224	680882	11	True				
ANR	681246	AssignmentExpression	dash -> offset = offset		680882	0		=			
ANR	681247	PtrMemberAccess	dash -> offset		680882	0					
ANR	681248	Identifier	dash		680882	0					
ANR	681249	Identifier	offset		680882	1					
ANR	681250	Identifier	offset		680882	1					
ANR	681251	ExpressionStatement	dash -> pattern_length = pattern_length	224:4:6230:6267	680882	12	True				
ANR	681252	AssignmentExpression	dash -> pattern_length = pattern_length		680882	0		=			
ANR	681253	PtrMemberAccess	dash -> pattern_length		680882	0					
ANR	681254	Identifier	dash		680882	0					
ANR	681255	Identifier	pattern_length		680882	1					
ANR	681256	Identifier	pattern_length		680882	1					
ANR	681257	ExpressionStatement	dash -> init_ink_on = ink	225:4:6273:6296	680882	13	True				
ANR	681258	AssignmentExpression	dash -> init_ink_on = ink		680882	0		=			
ANR	681259	PtrMemberAccess	dash -> init_ink_on		680882	0					
ANR	681260	Identifier	dash		680882	0					
ANR	681261	Identifier	init_ink_on		680882	1					
ANR	681262	Identifier	ink		680882	1					
ANR	681263	ExpressionStatement	dash -> init_index = index	226:4:6302:6326	680882	14	True				
ANR	681264	AssignmentExpression	dash -> init_index = index		680882	0		=			
ANR	681265	PtrMemberAccess	dash -> init_index		680882	0					
ANR	681266	Identifier	dash		680882	0					
ANR	681267	Identifier	init_index		680882	1					
ANR	681268	Identifier	index		680882	1					
ANR	681269	ExpressionStatement	dash -> init_dist_left = - dist_left	227:4:6332:6365	680882	15	True				
ANR	681270	AssignmentExpression	dash -> init_dist_left = - dist_left		680882	0		=			
ANR	681271	PtrMemberAccess	dash -> init_dist_left		680882	0					
ANR	681272	Identifier	dash		680882	0					
ANR	681273	Identifier	init_dist_left		680882	1					
ANR	681274	UnaryOperationExpression	- dist_left		680882	1					
ANR	681275	UnaryOperator	-		680882	0					
ANR	681276	Identifier	dist_left		680882	1					
ANR	681277	ReturnStatement	return 0 ;	228:4:6371:6379	680882	16	True				
ANR	681278	PrimaryExpression	0		680882	0					
ANR	681279	ReturnType	int		680882	1					
ANR	681280	Identifier	gx_set_dash		680882	2					
ANR	681281	ParameterList	"gx_dash_params * dash , const float * pattern , uint length , double offset , gs_memory_t * mem"		680882	3					
ANR	681282	Parameter	gx_dash_params * dash	157:12:3843:3863	680882	0	True				
ANR	681283	ParameterType	gx_dash_params *		680882	0					
ANR	681284	Identifier	dash		680882	1					
ANR	681285	Parameter	const float * pattern	157:35:3866:3885	680882	1	True				
ANR	681286	ParameterType	const float *		680882	0					
ANR	681287	Identifier	pattern		680882	1					
ANR	681288	Parameter	uint length	157:57:3888:3898	680882	2	True				
ANR	681289	ParameterType	uint		680882	0					
ANR	681290	Identifier	length		680882	1					
ANR	681291	Parameter	double offset	158:12:3913:3925	680882	3	True				
ANR	681292	ParameterType	double		680882	0					
ANR	681293	Identifier	offset		680882	1					
ANR	681294	Parameter	gs_memory_t * mem	158:27:3928:3944	680882	4	True				
ANR	681295	ParameterType	gs_memory_t *		680882	0					
ANR	681296	Identifier	mem		680882	1					
ANR	681297	CFGEntryNode	ENTRY		680882		True				
ANR	681298	CFGExitNode	EXIT		680882		True				
ANR	681299	Symbol	dash -> pattern_length		680882						
ANR	681300	Symbol	gs_error_rangecheck		680882						
ANR	681301	Symbol	ppat		680882						
ANR	681302	Symbol	* index		680882						
ANR	681303	Symbol	pattern		680882						
ANR	681304	Symbol	dash -> init_index		680882						
ANR	681305	Symbol	* dfrom ++		680882						
ANR	681306	Symbol	dash -> init_dist_left		680882						
ANR	681307	Symbol	mem		680882						
ANR	681308	Symbol	dash -> init_ink_on		680882						
ANR	681309	Symbol	* dash		680882						
ANR	681310	Symbol	dist_left		680882						
ANR	681311	Symbol	* pattern		680882						
ANR	681312	Symbol	gs_alloc_bytes		680882						
ANR	681313	Symbol	f_mod		680882						
ANR	681314	Symbol	offset		680882						
ANR	681315	Symbol	ink		680882						
ANR	681316	Symbol	length		680882						
ANR	681317	Symbol	index		680882						
ANR	681318	Symbol	gs_resize_object		680882						
ANR	681319	Symbol	elt		680882						
ANR	681320	Symbol	n		680882						
ANR	681321	Symbol	dash -> offset		680882						
ANR	681322	Symbol	gs_error_VMerror		680882						
ANR	681323	Symbol	dash -> pattern_size		680882						
ANR	681324	Symbol	size		680882						
ANR	681325	Symbol	pattern_length		680882						
ANR	681326	Symbol	length2		680882						
ANR	681327	Symbol	true		680882						
ANR	681328	Symbol	dash -> pattern		680882						
ANR	681329	Symbol	dash		680882						
ANR	681330	Symbol	dfrom		680882						
ANR	681331	Function	gs_setdash	230:0:6383:6567							
ANR	681332	FunctionDef	"gs_setdash (gs_gstate * pgs , const float * pattern , uint length , double offset)"		681331	0					
ANR	681333	CompoundStatement		232:0:6465:6567	681331	0					
ANR	681334	ReturnStatement	"return gx_set_dash ( & pgs_lp -> dash , pattern , length , offset , pgs -> memory ) ;"	233:4:6471:6565	681331	0	True				
ANR	681335	CallExpression	"gx_set_dash ( & pgs_lp -> dash , pattern , length , offset , pgs -> memory )"		681331	0					
ANR	681336	Callee	gx_set_dash		681331	0					
ANR	681337	Identifier	gx_set_dash		681331	0					
ANR	681338	ArgumentList	& pgs_lp -> dash		681331	1					
ANR	681339	Argument	& pgs_lp -> dash		681331	0					
ANR	681340	UnaryOperationExpression	& pgs_lp -> dash		681331	0					
ANR	681341	UnaryOperator	&		681331	0					
ANR	681342	PtrMemberAccess	pgs_lp -> dash		681331	1					
ANR	681343	Identifier	pgs_lp		681331	0					
ANR	681344	Identifier	dash		681331	1					
ANR	681345	Argument	pattern		681331	1					
ANR	681346	Identifier	pattern		681331	0					
ANR	681347	Argument	length		681331	2					
ANR	681348	Identifier	length		681331	0					
ANR	681349	Argument	offset		681331	3					
ANR	681350	Identifier	offset		681331	0					
ANR	681351	Argument	pgs -> memory		681331	4					
ANR	681352	PtrMemberAccess	pgs -> memory		681331	0					
ANR	681353	Identifier	pgs		681331	0					
ANR	681354	Identifier	memory		681331	1					
ANR	681355	ReturnType	int		681331	1					
ANR	681356	Identifier	gs_setdash		681331	2					
ANR	681357	ParameterList	"gs_gstate * pgs , const float * pattern , uint length , double offset"		681331	3					
ANR	681358	Parameter	gs_gstate * pgs	231:11:6398:6412	681331	0	True				
ANR	681359	ParameterType	gs_gstate *		681331	0					
ANR	681360	Identifier	pgs		681331	1					
ANR	681361	Parameter	const float * pattern	231:28:6415:6434	681331	1	True				
ANR	681362	ParameterType	const float *		681331	0					
ANR	681363	Identifier	pattern		681331	1					
ANR	681364	Parameter	uint length	231:50:6437:6447	681331	2	True				
ANR	681365	ParameterType	uint		681331	0					
ANR	681366	Identifier	length		681331	1					
ANR	681367	Parameter	double offset	231:63:6450:6462	681331	3	True				
ANR	681368	ParameterType	double		681331	0					
ANR	681369	Identifier	offset		681331	1					
ANR	681370	CFGEntryNode	ENTRY		681331		True				
ANR	681371	CFGExitNode	EXIT		681331		True				
ANR	681372	Symbol	gx_set_dash		681331						
ANR	681373	Symbol	offset		681331						
ANR	681374	Symbol	* pgs		681331						
ANR	681375	Symbol	pattern		681331						
ANR	681376	Symbol	length		681331						
ANR	681377	Symbol	pgs_lp		681331						
ANR	681378	Symbol	& pgs_lp -> dash		681331						
ANR	681379	Symbol	pgs		681331						
ANR	681380	Symbol	pgs -> memory		681331						
ANR	681381	Function	gs_currentdash_length	238:0:6588:6678							
ANR	681382	FunctionDef	gs_currentdash_length (const gs_gstate * pgs)		681381	0					
ANR	681383	CompoundStatement		240:0:6638:6678	681381	0					
ANR	681384	ReturnStatement	return pgs_lp -> dash . pattern_size ;	241:4:6644:6676	681381	0	True				
ANR	681385	MemberAccess	pgs_lp -> dash . pattern_size		681381	0					
ANR	681386	PtrMemberAccess	pgs_lp -> dash		681381	0					
ANR	681387	Identifier	pgs_lp		681381	0					
ANR	681388	Identifier	dash		681381	1					
ANR	681389	Identifier	pattern_size		681381	1					
ANR	681390	ReturnType	uint		681381	1					
ANR	681391	Identifier	gs_currentdash_length		681381	2					
ANR	681392	ParameterList	const gs_gstate * pgs		681381	3					
ANR	681393	Parameter	const gs_gstate * pgs	239:22:6615:6635	681381	0	True				
ANR	681394	ParameterType	const gs_gstate *		681381	0					
ANR	681395	Identifier	pgs		681381	1					
ANR	681396	CFGEntryNode	ENTRY		681381		True				
ANR	681397	CFGExitNode	EXIT		681381		True				
ANR	681398	Symbol	* pgs_lp		681381						
ANR	681399	Symbol	pgs_lp		681381						
ANR	681400	Symbol	pgs_lp -> dash . pattern_size		681381						
ANR	681401	Symbol	pgs_lp -> dash		681381						
ANR	681402	Symbol	pgs		681381						
ANR	681403	Function	gs_currentdash_pattern	243:0:6680:6775							
ANR	681404	FunctionDef	gs_currentdash_pattern (const gs_gstate * pgs)		681403	0					
ANR	681405	CompoundStatement		245:0:6740:6775	681403	0					
ANR	681406	ReturnStatement	return pgs_lp -> dash . pattern ;	246:4:6746:6773	681403	0	True				
ANR	681407	MemberAccess	pgs_lp -> dash . pattern		681403	0					
ANR	681408	PtrMemberAccess	pgs_lp -> dash		681403	0					
ANR	681409	Identifier	pgs_lp		681403	0					
ANR	681410	Identifier	dash		681403	1					
ANR	681411	Identifier	pattern		681403	1					
ANR	681412	ReturnType	const float *		681403	1					
ANR	681413	Identifier	gs_currentdash_pattern		681403	2					
ANR	681414	ParameterList	const gs_gstate * pgs		681403	3					
ANR	681415	Parameter	const gs_gstate * pgs	244:23:6717:6737	681403	0	True				
ANR	681416	ParameterType	const gs_gstate *		681403	0					
ANR	681417	Identifier	pgs		681403	1					
ANR	681418	CFGEntryNode	ENTRY		681403		True				
ANR	681419	CFGExitNode	EXIT		681403		True				
ANR	681420	Symbol	* pgs_lp		681403						
ANR	681421	Symbol	pgs_lp		681403						
ANR	681422	Symbol	pgs_lp -> dash		681403						
ANR	681423	Symbol	pgs_lp -> dash . pattern		681403						
ANR	681424	Symbol	pgs		681403						
ANR	681425	Function	gs_currentdash_offset	248:0:6777:6862							
ANR	681426	FunctionDef	gs_currentdash_offset (const gs_gstate * pgs)		681425	0					
ANR	681427	CompoundStatement		250:0:6828:6862	681425	0					
ANR	681428	ReturnStatement	return pgs_lp -> dash . offset ;	251:4:6834:6860	681425	0	True				
ANR	681429	MemberAccess	pgs_lp -> dash . offset		681425	0					
ANR	681430	PtrMemberAccess	pgs_lp -> dash		681425	0					
ANR	681431	Identifier	pgs_lp		681425	0					
ANR	681432	Identifier	dash		681425	1					
ANR	681433	Identifier	offset		681425	1					
ANR	681434	ReturnType	float		681425	1					
ANR	681435	Identifier	gs_currentdash_offset		681425	2					
ANR	681436	ParameterList	const gs_gstate * pgs		681425	3					
ANR	681437	Parameter	const gs_gstate * pgs	249:22:6805:6825	681425	0	True				
ANR	681438	ParameterType	const gs_gstate *		681425	0					
ANR	681439	Identifier	pgs		681425	1					
ANR	681440	CFGEntryNode	ENTRY		681425		True				
ANR	681441	CFGExitNode	EXIT		681425		True				
ANR	681442	Symbol	* pgs_lp		681425						
ANR	681443	Symbol	pgs_lp -> dash . offset		681425						
ANR	681444	Symbol	pgs_lp		681425						
ANR	681445	Symbol	pgs_lp -> dash		681425						
ANR	681446	Symbol	pgs		681425						
ANR	681447	Function	gs_currentlineparams	255:0:6909:7023							
ANR	681448	FunctionDef	gs_currentlineparams (const gs_gstate * pgs)		681447	0					
ANR	681449	CompoundStatement		257:0:6976:7023	681447	0					
ANR	681450	ReturnStatement	return gs_currentlineparams_inline ( pgs ) ;	258:4:6982:7021	681447	0	True				
ANR	681451	CallExpression	gs_currentlineparams_inline ( pgs )		681447	0					
ANR	681452	Callee	gs_currentlineparams_inline		681447	0					
ANR	681453	Identifier	gs_currentlineparams_inline		681447	0					
ANR	681454	ArgumentList	pgs		681447	1					
ANR	681455	Argument	pgs		681447	0					
ANR	681456	Identifier	pgs		681447	0					
ANR	681457	ReturnType	const gx_line_params *		681447	1					
ANR	681458	Identifier	gs_currentlineparams		681447	2					
ANR	681459	ParameterList	const gs_gstate * pgs		681447	3					
ANR	681460	Parameter	const gs_gstate * pgs	256:21:6953:6973	681447	0	True				
ANR	681461	ParameterType	const gs_gstate *		681447	0					
ANR	681462	Identifier	pgs		681447	1					
ANR	681463	CFGEntryNode	ENTRY		681447		True				
ANR	681464	CFGExitNode	EXIT		681447		True				
ANR	681465	Symbol	gs_currentlineparams_inline		681447						
ANR	681466	Symbol	pgs		681447						
ANR	681467	Function	gs_gstate_setflat	264:0:7089:7269							
ANR	681468	FunctionDef	"gs_gstate_setflat (gs_gstate * pgs , double flat)"		681467	0					
ANR	681469	CompoundStatement		266:0:7141:7269	681467	0					
ANR	681470	IfStatement	if ( flat <= 0.2 )		681467	0					
ANR	681471	Condition	flat <= 0.2	267:8:7151:7161	681467	0	True				
ANR	681472	RelationalExpression	flat <= 0.2		681467	0		<=			
ANR	681473	Identifier	flat		681467	0					
ANR	681474	PrimaryExpression	0.2		681467	1					
ANR	681475	ExpressionStatement	flat = 0.2	268:8:7172:7182	681467	1	True				
ANR	681476	AssignmentExpression	flat = 0.2		681467	0		=			
ANR	681477	Identifier	flat		681467	0					
ANR	681478	PrimaryExpression	0.2		681467	1					
ANR	681479	ElseStatement	else		681467	0					
ANR	681480	IfStatement	if ( flat > 100 )		681467	0					
ANR	681481	Condition	flat > 100	269:13:7197:7206	681467	0	True				
ANR	681482	RelationalExpression	flat > 100		681467	0		>			
ANR	681483	Identifier	flat		681467	0					
ANR	681484	PrimaryExpression	100		681467	1					
ANR	681485	ExpressionStatement	flat = 100	270:8:7217:7227	681467	1	True				
ANR	681486	AssignmentExpression	flat = 100		681467	0		=			
ANR	681487	Identifier	flat		681467	0					
ANR	681488	PrimaryExpression	100		681467	1					
ANR	681489	ExpressionStatement	pgs -> flatness = flat	271:4:7233:7253	681467	1	True				
ANR	681490	AssignmentExpression	pgs -> flatness = flat		681467	0		=			
ANR	681491	PtrMemberAccess	pgs -> flatness		681467	0					
ANR	681492	Identifier	pgs		681467	0					
ANR	681493	Identifier	flatness		681467	1					
ANR	681494	Identifier	flat		681467	1					
ANR	681495	ReturnStatement	return 0 ;	272:4:7259:7267	681467	2	True				
ANR	681496	PrimaryExpression	0		681467	0					
ANR	681497	ReturnType	int		681467	1					
ANR	681498	Identifier	gs_gstate_setflat		681467	2					
ANR	681499	ParameterList	"gs_gstate * pgs , double flat"		681467	3					
ANR	681500	Parameter	gs_gstate * pgs	265:18:7111:7125	681467	0	True				
ANR	681501	ParameterType	gs_gstate *		681467	0					
ANR	681502	Identifier	pgs		681467	1					
ANR	681503	Parameter	double flat	265:35:7128:7138	681467	1	True				
ANR	681504	ParameterType	double		681467	0					
ANR	681505	Identifier	flat		681467	1					
ANR	681506	CFGEntryNode	ENTRY		681467		True				
ANR	681507	CFGExitNode	EXIT		681467		True				
ANR	681508	Symbol	pgs -> flatness		681467						
ANR	681509	Symbol	flat		681467						
ANR	681510	Symbol	* pgs		681467						
ANR	681511	Symbol	pgs		681467						
ANR	681512	Function	gs_setflat	274:0:7271:7359							
ANR	681513	FunctionDef	"gs_setflat (gs_gstate * pgs , double flat)"		681512	0					
ANR	681514	CompoundStatement		276:0:7316:7359	681512	0					
ANR	681515	ReturnStatement	"return gs_gstate_setflat ( pgs , flat ) ;"	277:4:7322:7357	681512	0	True				
ANR	681516	CallExpression	"gs_gstate_setflat ( pgs , flat )"		681512	0					
ANR	681517	Callee	gs_gstate_setflat		681512	0					
ANR	681518	Identifier	gs_gstate_setflat		681512	0					
ANR	681519	ArgumentList	pgs		681512	1					
ANR	681520	Argument	pgs		681512	0					
ANR	681521	Identifier	pgs		681512	0					
ANR	681522	Argument	flat		681512	1					
ANR	681523	Identifier	flat		681512	0					
ANR	681524	ReturnType	int		681512	1					
ANR	681525	Identifier	gs_setflat		681512	2					
ANR	681526	ParameterList	"gs_gstate * pgs , double flat"		681512	3					
ANR	681527	Parameter	gs_gstate * pgs	275:11:7286:7300	681512	0	True				
ANR	681528	ParameterType	gs_gstate *		681512	0					
ANR	681529	Identifier	pgs		681512	1					
ANR	681530	Parameter	double flat	275:28:7303:7313	681512	1	True				
ANR	681531	ParameterType	double		681512	0					
ANR	681532	Identifier	flat		681512	1					
ANR	681533	CFGEntryNode	ENTRY		681512		True				
ANR	681534	CFGExitNode	EXIT		681512		True				
ANR	681535	Symbol	gs_gstate_setflat		681512						
ANR	681536	Symbol	flat		681512						
ANR	681537	Symbol	pgs		681512						
ANR	681538	Function	gs_currentflat	281:0:7380:7452							
ANR	681539	FunctionDef	gs_currentflat (const gs_gstate * pgs)		681538	0					
ANR	681540	CompoundStatement		283:0:7424:7452	681538	0					
ANR	681541	ReturnStatement	return pgs -> flatness ;	284:4:7430:7450	681538	0	True				
ANR	681542	PtrMemberAccess	pgs -> flatness		681538	0					
ANR	681543	Identifier	pgs		681538	0					
ANR	681544	Identifier	flatness		681538	1					
ANR	681545	ReturnType	float		681538	1					
ANR	681546	Identifier	gs_currentflat		681538	2					
ANR	681547	ParameterList	const gs_gstate * pgs		681538	3					
ANR	681548	Parameter	const gs_gstate * pgs	282:15:7401:7421	681538	0	True				
ANR	681549	ParameterType	const gs_gstate *		681538	0					
ANR	681550	Identifier	pgs		681538	1					
ANR	681551	CFGEntryNode	ENTRY		681538		True				
ANR	681552	CFGExitNode	EXIT		681538		True				
ANR	681553	Symbol	pgs -> flatness		681538						
ANR	681554	Symbol	* pgs		681538						
ANR	681555	Symbol	pgs		681538						
ANR	681556	Function	gs_setstrokeadjust	288:0:7477:7593							
ANR	681557	FunctionDef	"gs_setstrokeadjust (gs_gstate * pgs , bool stroke_adjust)"		681556	0					
ANR	681558	CompoundStatement		290:0:7537:7593	681556	0					
ANR	681559	ExpressionStatement	pgs -> stroke_adjust = stroke_adjust	291:4:7543:7577	681556	0	True				
ANR	681560	AssignmentExpression	pgs -> stroke_adjust = stroke_adjust		681556	0		=			
ANR	681561	PtrMemberAccess	pgs -> stroke_adjust		681556	0					
ANR	681562	Identifier	pgs		681556	0					
ANR	681563	Identifier	stroke_adjust		681556	1					
ANR	681564	Identifier	stroke_adjust		681556	1					
ANR	681565	ReturnStatement	return 0 ;	292:4:7583:7591	681556	1	True				
ANR	681566	PrimaryExpression	0		681556	0					
ANR	681567	ReturnType	int		681556	1					
ANR	681568	Identifier	gs_setstrokeadjust		681556	2					
ANR	681569	ParameterList	"gs_gstate * pgs , bool stroke_adjust"		681556	3					
ANR	681570	Parameter	gs_gstate * pgs	289:19:7500:7514	681556	0	True				
ANR	681571	ParameterType	gs_gstate *		681556	0					
ANR	681572	Identifier	pgs		681556	1					
ANR	681573	Parameter	bool stroke_adjust	289:36:7517:7534	681556	1	True				
ANR	681574	ParameterType	bool		681556	0					
ANR	681575	Identifier	stroke_adjust		681556	1					
ANR	681576	CFGEntryNode	ENTRY		681556		True				
ANR	681577	CFGExitNode	EXIT		681556		True				
ANR	681578	Symbol	stroke_adjust		681556						
ANR	681579	Symbol	* pgs		681556						
ANR	681580	Symbol	pgs		681556						
ANR	681581	Symbol	pgs -> stroke_adjust		681556						
ANR	681582	Function	gs_currentstrokeadjust	296:0:7622:7706							
ANR	681583	FunctionDef	gs_currentstrokeadjust (const gs_gstate * pgs)		681582	0					
ANR	681584	CompoundStatement		298:0:7673:7706	681582	0					
ANR	681585	ReturnStatement	return pgs -> stroke_adjust ;	299:4:7679:7704	681582	0	True				
ANR	681586	PtrMemberAccess	pgs -> stroke_adjust		681582	0					
ANR	681587	Identifier	pgs		681582	0					
ANR	681588	Identifier	stroke_adjust		681582	1					
ANR	681589	ReturnType	bool		681582	1					
ANR	681590	Identifier	gs_currentstrokeadjust		681582	2					
ANR	681591	ParameterList	const gs_gstate * pgs		681582	3					
ANR	681592	Parameter	const gs_gstate * pgs	297:23:7650:7670	681582	0	True				
ANR	681593	ParameterType	const gs_gstate *		681582	0					
ANR	681594	Identifier	pgs		681582	1					
ANR	681595	CFGEntryNode	ENTRY		681582		True				
ANR	681596	CFGExitNode	EXIT		681582		True				
ANR	681597	Symbol	* pgs		681582						
ANR	681598	Symbol	pgs		681582						
ANR	681599	Symbol	pgs -> stroke_adjust		681582						
ANR	681600	Function	gs_setdashadapt	307:0:7786:7870							
ANR	681601	FunctionDef	"gs_setdashadapt (gs_gstate * pgs , bool adapt)"		681600	0					
ANR	681602	CompoundStatement		309:0:7836:7870	681600	0					
ANR	681603	ExpressionStatement	pgs_lp -> dash . adapt = adapt	310:4:7842:7868	681600	0	True				
ANR	681604	AssignmentExpression	pgs_lp -> dash . adapt = adapt		681600	0		=			
ANR	681605	MemberAccess	pgs_lp -> dash . adapt		681600	0					
ANR	681606	PtrMemberAccess	pgs_lp -> dash		681600	0					
ANR	681607	Identifier	pgs_lp		681600	0					
ANR	681608	Identifier	dash		681600	1					
ANR	681609	Identifier	adapt		681600	1					
ANR	681610	Identifier	adapt		681600	1					
ANR	681611	ReturnType	void		681600	1					
ANR	681612	Identifier	gs_setdashadapt		681600	2					
ANR	681613	ParameterList	"gs_gstate * pgs , bool adapt"		681600	3					
ANR	681614	Parameter	gs_gstate * pgs	308:16:7807:7821	681600	0	True				
ANR	681615	ParameterType	gs_gstate *		681600	0					
ANR	681616	Identifier	pgs		681600	1					
ANR	681617	Parameter	bool adapt	308:33:7824:7833	681600	1	True				
ANR	681618	ParameterType	bool		681600	0					
ANR	681619	Identifier	adapt		681600	1					
ANR	681620	CFGEntryNode	ENTRY		681600		True				
ANR	681621	CFGExitNode	EXIT		681600		True				
ANR	681622	Symbol	* pgs_lp		681600						
ANR	681623	Symbol	adapt		681600						
ANR	681624	Symbol	pgs_lp		681600						
ANR	681625	Symbol	pgs_lp -> dash		681600						
ANR	681626	Symbol	pgs		681600						
ANR	681627	Symbol	pgs_lp -> dash . adapt		681600						
ANR	681628	Function	gs_gstate_currentdashadapt	314:0:7896:8010							
ANR	681629	FunctionDef	gs_gstate_currentdashadapt (const gs_gstate * pgs)		681628	0					
ANR	681630	CompoundStatement		316:0:7951:8010	681628	0					
ANR	681631	ReturnStatement	return gs_currentlineparams_inline ( pgs ) -> dash . adapt ;	317:4:7957:8008	681628	0	True				
ANR	681632	MemberAccess	gs_currentlineparams_inline ( pgs ) -> dash . adapt		681628	0					
ANR	681633	PtrMemberAccess	gs_currentlineparams_inline ( pgs ) -> dash		681628	0					
ANR	681634	CallExpression	gs_currentlineparams_inline ( pgs )		681628	0					
ANR	681635	Callee	gs_currentlineparams_inline		681628	0					
ANR	681636	Identifier	gs_currentlineparams_inline		681628	0					
ANR	681637	ArgumentList	pgs		681628	1					
ANR	681638	Argument	pgs		681628	0					
ANR	681639	Identifier	pgs		681628	0					
ANR	681640	Identifier	dash		681628	1					
ANR	681641	Identifier	adapt		681628	1					
ANR	681642	ReturnType	bool		681628	1					
ANR	681643	Identifier	gs_gstate_currentdashadapt		681628	2					
ANR	681644	ParameterList	const gs_gstate * pgs		681628	3					
ANR	681645	Parameter	const gs_gstate * pgs	315:27:7928:7948	681628	0	True				
ANR	681646	ParameterType	const gs_gstate *		681628	0					
ANR	681647	Identifier	pgs		681628	1					
ANR	681648	CFGEntryNode	ENTRY		681628		True				
ANR	681649	CFGExitNode	EXIT		681628		True				
ANR	681650	Symbol	gs_currentlineparams_inline		681628						
ANR	681651	Symbol	gs_currentlineparams_inline ( pgs ) -> dash		681628						
ANR	681652	Symbol	pgs		681628						
ANR	681653	Symbol	gs_currentlineparams_inline ( pgs ) -> dash . adapt		681628						
ANR	681654	Symbol	* gs_currentlineparams_inline		681628						
ANR	681655	Function	gs_currentdashadapt	319:0:8012:8125							
ANR	681656	FunctionDef	gs_currentdashadapt (const gs_gstate * pgs)		681655	0					
ANR	681657	CompoundStatement		321:0:8060:8125	681655	0					
ANR	681658	ReturnStatement	return gs_gstate_currentdashadapt ( ( const gs_gstate * ) pgs ) ;	322:4:8066:8123	681655	0	True				
ANR	681659	CallExpression	gs_gstate_currentdashadapt ( ( const gs_gstate * ) pgs )		681655	0					
ANR	681660	Callee	gs_gstate_currentdashadapt		681655	0					
ANR	681661	Identifier	gs_gstate_currentdashadapt		681655	0					
ANR	681662	ArgumentList	( const gs_gstate * ) pgs		681655	1					
ANR	681663	Argument	( const gs_gstate * ) pgs		681655	0					
ANR	681664	CastExpression	( const gs_gstate * ) pgs		681655	0					
ANR	681665	CastTarget	const gs_gstate *		681655	0					
ANR	681666	Identifier	pgs		681655	1					
ANR	681667	ReturnType	bool		681655	1					
ANR	681668	Identifier	gs_currentdashadapt		681655	2					
ANR	681669	ParameterList	const gs_gstate * pgs		681655	3					
ANR	681670	Parameter	const gs_gstate * pgs	320:20:8037:8057	681655	0	True				
ANR	681671	ParameterType	const gs_gstate *		681655	0					
ANR	681672	Identifier	pgs		681655	1					
ANR	681673	CFGEntryNode	ENTRY		681655		True				
ANR	681674	CFGExitNode	EXIT		681655		True				
ANR	681675	Symbol	gs_gstate_currentdashadapt		681655						
ANR	681676	Symbol	pgs		681655						
ANR	681677	Function	gs_setcurvejoin	326:0:8147:8330							
ANR	681678	FunctionDef	"gs_setcurvejoin (gs_gstate * pgs , int join)"		681677	0					
ANR	681679	CompoundStatement		328:0:8194:8330	681677	0					
ANR	681680	IfStatement	if ( join < - 1 || join > gs_line_join_max )		681677	0					
ANR	681681	Condition	join < - 1 || join > gs_line_join_max	329:8:8204:8239	681677	0	True				
ANR	681682	OrExpression	join < - 1 || join > gs_line_join_max		681677	0		||			
ANR	681683	RelationalExpression	join < - 1		681677	0		<			
ANR	681684	Identifier	join		681677	0					
ANR	681685	UnaryOperationExpression	- 1		681677	1					
ANR	681686	UnaryOperator	-		681677	0					
ANR	681687	PrimaryExpression	1		681677	1					
ANR	681688	RelationalExpression	join > gs_line_join_max		681677	1		>			
ANR	681689	Identifier	join		681677	0					
ANR	681690	Identifier	gs_line_join_max		681677	1					
ANR	681691	ExpressionStatement	return_error ( gs_error_rangecheck )	330:8:8250:8283	681677	1	True				
ANR	681692	CallExpression	return_error ( gs_error_rangecheck )		681677	0					
ANR	681693	Callee	return_error		681677	0					
ANR	681694	Identifier	return_error		681677	0					
ANR	681695	ArgumentList	gs_error_rangecheck		681677	1					
ANR	681696	Argument	gs_error_rangecheck		681677	0					
ANR	681697	Identifier	gs_error_rangecheck		681677	0					
ANR	681698	ExpressionStatement	pgs_lp -> curve_join = join	331:4:8289:8314	681677	1	True				
ANR	681699	AssignmentExpression	pgs_lp -> curve_join = join		681677	0		=			
ANR	681700	PtrMemberAccess	pgs_lp -> curve_join		681677	0					
ANR	681701	Identifier	pgs_lp		681677	0					
ANR	681702	Identifier	curve_join		681677	1					
ANR	681703	Identifier	join		681677	1					
ANR	681704	ReturnStatement	return 0 ;	332:4:8320:8328	681677	2	True				
ANR	681705	PrimaryExpression	0		681677	0					
ANR	681706	ReturnType	int		681677	1					
ANR	681707	Identifier	gs_setcurvejoin		681677	2					
ANR	681708	ParameterList	"gs_gstate * pgs , int join"		681677	3					
ANR	681709	Parameter	gs_gstate * pgs	327:16:8167:8181	681677	0	True				
ANR	681710	ParameterType	gs_gstate *		681677	0					
ANR	681711	Identifier	pgs		681677	1					
ANR	681712	Parameter	int join	327:33:8184:8191	681677	1	True				
ANR	681713	ParameterType	int		681677	0					
ANR	681714	Identifier	join		681677	1					
ANR	681715	CFGEntryNode	ENTRY		681677		True				
ANR	681716	CFGExitNode	EXIT		681677		True				
ANR	681717	Symbol	gs_error_rangecheck		681677						
ANR	681718	Symbol	* pgs_lp		681677						
ANR	681719	Symbol	pgs_lp		681677						
ANR	681720	Symbol	gs_line_join_max		681677						
ANR	681721	Symbol	join		681677						
ANR	681722	Symbol	pgs_lp -> curve_join		681677						
ANR	681723	Symbol	pgs		681677						
ANR	681724	Function	gs_currentcurvejoin	336:0:8356:8436							
ANR	681725	FunctionDef	gs_currentcurvejoin (const gs_gstate * pgs)		681724	0					
ANR	681726	CompoundStatement		338:0:8403:8436	681724	0					
ANR	681727	ReturnStatement	return pgs_lp -> curve_join ;	339:4:8409:8434	681724	0	True				
ANR	681728	PtrMemberAccess	pgs_lp -> curve_join		681724	0					
ANR	681729	Identifier	pgs_lp		681724	0					
ANR	681730	Identifier	curve_join		681724	1					
ANR	681731	ReturnType	int		681724	1					
ANR	681732	Identifier	gs_currentcurvejoin		681724	2					
ANR	681733	ParameterList	const gs_gstate * pgs		681724	3					
ANR	681734	Parameter	const gs_gstate * pgs	337:20:8380:8400	681724	0	True				
ANR	681735	ParameterType	const gs_gstate *		681724	0					
ANR	681736	Identifier	pgs		681724	1					
ANR	681737	CFGEntryNode	ENTRY		681724		True				
ANR	681738	CFGExitNode	EXIT		681724		True				
ANR	681739	Symbol	* pgs_lp		681724						
ANR	681740	Symbol	pgs_lp		681724						
ANR	681741	Symbol	pgs_lp -> curve_join		681724						
ANR	681742	Symbol	pgs		681724						
ANR	681743	Function	gs_setaccuratecurves	345:0:8487:8584							
ANR	681744	FunctionDef	"gs_setaccuratecurves (gs_gstate * pgs , bool accurate)"		681743	0					
ANR	681745	CompoundStatement		347:0:8545:8584	681743	0					
ANR	681746	ExpressionStatement	pgs -> accurate_curves = accurate	348:4:8551:8582	681743	0	True				
ANR	681747	AssignmentExpression	pgs -> accurate_curves = accurate		681743	0		=			
ANR	681748	PtrMemberAccess	pgs -> accurate_curves		681743	0					
ANR	681749	Identifier	pgs		681743	0					
ANR	681750	Identifier	accurate_curves		681743	1					
ANR	681751	Identifier	accurate		681743	1					
ANR	681752	ReturnType	void		681743	1					
ANR	681753	Identifier	gs_setaccuratecurves		681743	2					
ANR	681754	ParameterList	"gs_gstate * pgs , bool accurate"		681743	3					
ANR	681755	Parameter	gs_gstate * pgs	346:21:8513:8527	681743	0	True				
ANR	681756	ParameterType	gs_gstate *		681743	0					
ANR	681757	Identifier	pgs		681743	1					
ANR	681758	Parameter	bool accurate	346:38:8530:8542	681743	1	True				
ANR	681759	ParameterType	bool		681743	0					
ANR	681760	Identifier	accurate		681743	1					
ANR	681761	CFGEntryNode	ENTRY		681743		True				
ANR	681762	CFGExitNode	EXIT		681743		True				
ANR	681763	Symbol	accurate		681743						
ANR	681764	Symbol	* pgs		681743						
ANR	681765	Symbol	pgs -> accurate_curves		681743						
ANR	681766	Symbol	pgs		681743						
ANR	681767	Function	gs_gstate_currentaccuratecurves	352:0:8615:8710							
ANR	681768	FunctionDef	gs_gstate_currentaccuratecurves (const gs_gstate * pgs)		681767	0					
ANR	681769	CompoundStatement		354:0:8675:8710	681767	0					
ANR	681770	ReturnStatement	return pgs -> accurate_curves ;	355:4:8681:8708	681767	0	True				
ANR	681771	PtrMemberAccess	pgs -> accurate_curves		681767	0					
ANR	681772	Identifier	pgs		681767	0					
ANR	681773	Identifier	accurate_curves		681767	1					
ANR	681774	ReturnType	bool		681767	1					
ANR	681775	Identifier	gs_gstate_currentaccuratecurves		681767	2					
ANR	681776	ParameterList	const gs_gstate * pgs		681767	3					
ANR	681777	Parameter	const gs_gstate * pgs	353:32:8652:8672	681767	0	True				
ANR	681778	ParameterType	const gs_gstate *		681767	0					
ANR	681779	Identifier	pgs		681767	1					
ANR	681780	CFGEntryNode	ENTRY		681767		True				
ANR	681781	CFGExitNode	EXIT		681767		True				
ANR	681782	Symbol	* pgs		681767						
ANR	681783	Symbol	pgs -> accurate_curves		681767						
ANR	681784	Symbol	pgs		681767						
ANR	681785	Function	gs_currentaccuratecurves	357:0:8712:8835							
ANR	681786	FunctionDef	gs_currentaccuratecurves (const gs_gstate * pgs)		681785	0					
ANR	681787	CompoundStatement		359:0:8765:8835	681785	0					
ANR	681788	ReturnStatement	return gs_gstate_currentaccuratecurves ( ( const gs_gstate * ) pgs ) ;	360:4:8771:8833	681785	0	True				
ANR	681789	CallExpression	gs_gstate_currentaccuratecurves ( ( const gs_gstate * ) pgs )		681785	0					
ANR	681790	Callee	gs_gstate_currentaccuratecurves		681785	0					
ANR	681791	Identifier	gs_gstate_currentaccuratecurves		681785	0					
ANR	681792	ArgumentList	( const gs_gstate * ) pgs		681785	1					
ANR	681793	Argument	( const gs_gstate * ) pgs		681785	0					
ANR	681794	CastExpression	( const gs_gstate * ) pgs		681785	0					
ANR	681795	CastTarget	const gs_gstate *		681785	0					
ANR	681796	Identifier	pgs		681785	1					
ANR	681797	ReturnType	bool		681785	1					
ANR	681798	Identifier	gs_currentaccuratecurves		681785	2					
ANR	681799	ParameterList	const gs_gstate * pgs		681785	3					
ANR	681800	Parameter	const gs_gstate * pgs	358:25:8742:8762	681785	0	True				
ANR	681801	ParameterType	const gs_gstate *		681785	0					
ANR	681802	Identifier	pgs		681785	1					
ANR	681803	CFGEntryNode	ENTRY		681785		True				
ANR	681804	CFGExitNode	EXIT		681785		True				
ANR	681805	Symbol	gs_gstate_currentaccuratecurves		681785						
ANR	681806	Symbol	pgs		681785						
ANR	681807	Function	gx_set_dot_length	364:0:8857:9081							
ANR	681808	FunctionDef	"gx_set_dot_length (gx_line_params * plp , double length , bool absolute)"		681807	0					
ANR	681809	CompoundStatement		366:0:8931:9081	681807	0					
ANR	681810	IfStatement	if ( length < 0 )		681807	0					
ANR	681811	Condition	length < 0	367:8:8941:8950	681807	0	True				
ANR	681812	RelationalExpression	length < 0		681807	0		<			
ANR	681813	Identifier	length		681807	0					
ANR	681814	PrimaryExpression	0		681807	1					
ANR	681815	ExpressionStatement	return_error ( gs_error_rangecheck )	368:8:8961:8994	681807	1	True				
ANR	681816	CallExpression	return_error ( gs_error_rangecheck )		681807	0					
ANR	681817	Callee	return_error		681807	0					
ANR	681818	Identifier	return_error		681807	0					
ANR	681819	ArgumentList	gs_error_rangecheck		681807	1					
ANR	681820	Argument	gs_error_rangecheck		681807	0					
ANR	681821	Identifier	gs_error_rangecheck		681807	0					
ANR	681822	ExpressionStatement	plp -> dot_length = length	369:4:9000:9024	681807	1	True				
ANR	681823	AssignmentExpression	plp -> dot_length = length		681807	0		=			
ANR	681824	PtrMemberAccess	plp -> dot_length		681807	0					
ANR	681825	Identifier	plp		681807	0					
ANR	681826	Identifier	dot_length		681807	1					
ANR	681827	Identifier	length		681807	1					
ANR	681828	ExpressionStatement	plp -> dot_length_absolute = absolute	370:4:9030:9065	681807	2	True				
ANR	681829	AssignmentExpression	plp -> dot_length_absolute = absolute		681807	0		=			
ANR	681830	PtrMemberAccess	plp -> dot_length_absolute		681807	0					
ANR	681831	Identifier	plp		681807	0					
ANR	681832	Identifier	dot_length_absolute		681807	1					
ANR	681833	Identifier	absolute		681807	1					
ANR	681834	ReturnStatement	return 0 ;	371:4:9071:9079	681807	3	True				
ANR	681835	PrimaryExpression	0		681807	0					
ANR	681836	ReturnType	int		681807	1					
ANR	681837	Identifier	gx_set_dot_length		681807	2					
ANR	681838	ParameterList	"gx_line_params * plp , double length , bool absolute"		681807	3					
ANR	681839	Parameter	gx_line_params * plp	365:18:8879:8898	681807	0	True				
ANR	681840	ParameterType	gx_line_params *		681807	0					
ANR	681841	Identifier	plp		681807	1					
ANR	681842	Parameter	double length	365:40:8901:8913	681807	1	True				
ANR	681843	ParameterType	double		681807	0					
ANR	681844	Identifier	length		681807	1					
ANR	681845	Parameter	bool absolute	365:55:8916:8928	681807	2	True				
ANR	681846	ParameterType	bool		681807	0					
ANR	681847	Identifier	absolute		681807	1					
ANR	681848	CFGEntryNode	ENTRY		681807		True				
ANR	681849	CFGExitNode	EXIT		681807		True				
ANR	681850	Symbol	gs_error_rangecheck		681807						
ANR	681851	Symbol	plp		681807						
ANR	681852	Symbol	absolute		681807						
ANR	681853	Symbol	plp -> dot_length		681807						
ANR	681854	Symbol	length		681807						
ANR	681855	Symbol	plp -> dot_length_absolute		681807						
ANR	681856	Symbol	* plp		681807						
ANR	681857	Function	gs_setdotlength	373:0:9083:9208							
ANR	681858	FunctionDef	"gs_setdotlength (gs_gstate * pgs , double length , bool absolute)"		681857	0					
ANR	681859	CompoundStatement		375:0:9150:9208	681857	0					
ANR	681860	ReturnStatement	"return gx_set_dot_length ( pgs_lp , length , absolute ) ;"	376:4:9156:9206	681857	0	True				
ANR	681861	CallExpression	"gx_set_dot_length ( pgs_lp , length , absolute )"		681857	0					
ANR	681862	Callee	gx_set_dot_length		681857	0					
ANR	681863	Identifier	gx_set_dot_length		681857	0					
ANR	681864	ArgumentList	pgs_lp		681857	1					
ANR	681865	Argument	pgs_lp		681857	0					
ANR	681866	Identifier	pgs_lp		681857	0					
ANR	681867	Argument	length		681857	1					
ANR	681868	Identifier	length		681857	0					
ANR	681869	Argument	absolute		681857	2					
ANR	681870	Identifier	absolute		681857	0					
ANR	681871	ReturnType	int		681857	1					
ANR	681872	Identifier	gs_setdotlength		681857	2					
ANR	681873	ParameterList	"gs_gstate * pgs , double length , bool absolute"		681857	3					
ANR	681874	Parameter	gs_gstate * pgs	374:16:9103:9117	681857	0	True				
ANR	681875	ParameterType	gs_gstate *		681857	0					
ANR	681876	Identifier	pgs		681857	1					
ANR	681877	Parameter	double length	374:33:9120:9132	681857	1	True				
ANR	681878	ParameterType	double		681857	0					
ANR	681879	Identifier	length		681857	1					
ANR	681880	Parameter	bool absolute	374:48:9135:9147	681857	2	True				
ANR	681881	ParameterType	bool		681857	0					
ANR	681882	Identifier	absolute		681857	1					
ANR	681883	CFGEntryNode	ENTRY		681857		True				
ANR	681884	CFGExitNode	EXIT		681857		True				
ANR	681885	Symbol	absolute		681857						
ANR	681886	Symbol	length		681857						
ANR	681887	Symbol	pgs_lp		681857						
ANR	681888	Symbol	pgs		681857						
ANR	681889	Symbol	gx_set_dot_length		681857						
ANR	681890	Function	gs_currentdotlength	380:0:9234:9316							
ANR	681891	FunctionDef	gs_currentdotlength (const gs_gstate * pgs)		681890	0					
ANR	681892	CompoundStatement		382:0:9283:9316	681890	0					
ANR	681893	ReturnStatement	return pgs_lp -> dot_length ;	383:4:9289:9314	681890	0	True				
ANR	681894	PtrMemberAccess	pgs_lp -> dot_length		681890	0					
ANR	681895	Identifier	pgs_lp		681890	0					
ANR	681896	Identifier	dot_length		681890	1					
ANR	681897	ReturnType	float		681890	1					
ANR	681898	Identifier	gs_currentdotlength		681890	2					
ANR	681899	ParameterList	const gs_gstate * pgs		681890	3					
ANR	681900	Parameter	const gs_gstate * pgs	381:20:9260:9280	681890	0	True				
ANR	681901	ParameterType	const gs_gstate *		681890	0					
ANR	681902	Identifier	pgs		681890	1					
ANR	681903	CFGEntryNode	ENTRY		681890		True				
ANR	681904	CFGExitNode	EXIT		681890		True				
ANR	681905	Symbol	* pgs_lp		681890						
ANR	681906	Symbol	pgs_lp -> dot_length		681890						
ANR	681907	Symbol	pgs_lp		681890						
ANR	681908	Symbol	pgs		681890						
ANR	681909	Function	gs_currentdotlength_absolute	385:0:9318:9417							
ANR	681910	FunctionDef	gs_currentdotlength_absolute (const gs_gstate * pgs)		681909	0					
ANR	681911	CompoundStatement		387:0:9375:9417	681909	0					
ANR	681912	ReturnStatement	return pgs_lp -> dot_length_absolute ;	388:4:9381:9415	681909	0	True				
ANR	681913	PtrMemberAccess	pgs_lp -> dot_length_absolute		681909	0					
ANR	681914	Identifier	pgs_lp		681909	0					
ANR	681915	Identifier	dot_length_absolute		681909	1					
ANR	681916	ReturnType	bool		681909	1					
ANR	681917	Identifier	gs_currentdotlength_absolute		681909	2					
ANR	681918	ParameterList	const gs_gstate * pgs		681909	3					
ANR	681919	Parameter	const gs_gstate * pgs	386:29:9352:9372	681909	0	True				
ANR	681920	ParameterType	const gs_gstate *		681909	0					
ANR	681921	Identifier	pgs		681909	1					
ANR	681922	CFGEntryNode	ENTRY		681909		True				
ANR	681923	CFGExitNode	EXIT		681909		True				
ANR	681924	Symbol	pgs_lp -> dot_length_absolute		681909						
ANR	681925	Symbol	* pgs_lp		681909						
ANR	681926	Symbol	pgs_lp		681909						
ANR	681927	Symbol	pgs		681909						
ANR	681928	Function	gs_setdotorientation	392:0:9444:9640							
ANR	681929	FunctionDef	gs_setdotorientation (gs_gstate * pgs)		681928	0					
ANR	681930	CompoundStatement		394:0:9485:9640	681928	0					
ANR	681931	IfStatement	if ( is_xxyy ( & pgs -> ctm ) || is_xyyx ( & pgs -> ctm ) )		681928	0					
ANR	681932	Condition	is_xxyy ( & pgs -> ctm ) || is_xyyx ( & pgs -> ctm )	395:8:9495:9534	681928	0	True				
ANR	681933	OrExpression	is_xxyy ( & pgs -> ctm ) || is_xyyx ( & pgs -> ctm )		681928	0		||			
ANR	681934	CallExpression	is_xxyy ( & pgs -> ctm )		681928	0					
ANR	681935	Callee	is_xxyy		681928	0					
ANR	681936	Identifier	is_xxyy		681928	0					
ANR	681937	ArgumentList	& pgs -> ctm		681928	1					
ANR	681938	Argument	& pgs -> ctm		681928	0					
ANR	681939	UnaryOperationExpression	& pgs -> ctm		681928	0					
ANR	681940	UnaryOperator	&		681928	0					
ANR	681941	PtrMemberAccess	pgs -> ctm		681928	1					
ANR	681942	Identifier	pgs		681928	0					
ANR	681943	Identifier	ctm		681928	1					
ANR	681944	CallExpression	is_xyyx ( & pgs -> ctm )		681928	1					
ANR	681945	Callee	is_xyyx		681928	0					
ANR	681946	Identifier	is_xyyx		681928	0					
ANR	681947	ArgumentList	& pgs -> ctm		681928	1					
ANR	681948	Argument	& pgs -> ctm		681928	0					
ANR	681949	UnaryOperationExpression	& pgs -> ctm		681928	0					
ANR	681950	UnaryOperator	&		681928	0					
ANR	681951	PtrMemberAccess	pgs -> ctm		681928	1					
ANR	681952	Identifier	pgs		681928	0					
ANR	681953	Identifier	ctm		681928	1					
ANR	681954	ReturnStatement	"return gs_currentmatrix ( pgs , & pgs_lp -> dot_orientation ) ;"	396:8:9545:9599	681928	1	True				
ANR	681955	CallExpression	"gs_currentmatrix ( pgs , & pgs_lp -> dot_orientation )"		681928	0					
ANR	681956	Callee	gs_currentmatrix		681928	0					
ANR	681957	Identifier	gs_currentmatrix		681928	0					
ANR	681958	ArgumentList	pgs		681928	1					
ANR	681959	Argument	pgs		681928	0					
ANR	681960	Identifier	pgs		681928	0					
ANR	681961	Argument	& pgs_lp -> dot_orientation		681928	1					
ANR	681962	UnaryOperationExpression	& pgs_lp -> dot_orientation		681928	0					
ANR	681963	UnaryOperator	&		681928	0					
ANR	681964	PtrMemberAccess	pgs_lp -> dot_orientation		681928	1					
ANR	681965	Identifier	pgs_lp		681928	0					
ANR	681966	Identifier	dot_orientation		681928	1					
ANR	681967	ExpressionStatement	return_error ( gs_error_rangecheck )	397:4:9605:9638	681928	1	True				
ANR	681968	CallExpression	return_error ( gs_error_rangecheck )		681928	0					
ANR	681969	Callee	return_error		681928	0					
ANR	681970	Identifier	return_error		681928	0					
ANR	681971	ArgumentList	gs_error_rangecheck		681928	1					
ANR	681972	Argument	gs_error_rangecheck		681928	0					
ANR	681973	Identifier	gs_error_rangecheck		681928	0					
ANR	681974	ReturnType	int		681928	1					
ANR	681975	Identifier	gs_setdotorientation		681928	2					
ANR	681976	ParameterList	gs_gstate * pgs		681928	3					
ANR	681977	Parameter	gs_gstate * pgs	393:21:9469:9482	681928	0	True				
ANR	681978	ParameterType	gs_gstate *		681928	0					
ANR	681979	Identifier	pgs		681928	1					
ANR	681980	CFGEntryNode	ENTRY		681928		True				
ANR	681981	CFGExitNode	EXIT		681928		True				
ANR	681982	Symbol	gs_error_rangecheck		681928						
ANR	681983	Symbol	pgs_lp		681928						
ANR	681984	Symbol	& pgs -> ctm		681928						
ANR	681985	Symbol	is_xyyx		681928						
ANR	681986	Symbol	is_xxyy		681928						
ANR	681987	Symbol	& pgs_lp -> dot_orientation		681928						
ANR	681988	Symbol	pgs		681928						
ANR	681989	Symbol	gs_currentmatrix		681928						
ANR	681990	Function	gs_dotorientation	401:0:9664:9760							
ANR	681991	FunctionDef	gs_dotorientation (gs_gstate * pgs)		681990	0					
ANR	681992	CompoundStatement		403:0:9702:9760	681990	0					
ANR	681993	ReturnStatement	"return gs_setmatrix ( pgs , & pgs_lp -> dot_orientation ) ;"	404:4:9708:9758	681990	0	True				
ANR	681994	CallExpression	"gs_setmatrix ( pgs , & pgs_lp -> dot_orientation )"		681990	0					
ANR	681995	Callee	gs_setmatrix		681990	0					
ANR	681996	Identifier	gs_setmatrix		681990	0					
ANR	681997	ArgumentList	pgs		681990	1					
ANR	681998	Argument	pgs		681990	0					
ANR	681999	Identifier	pgs		681990	0					
ANR	682000	Argument	& pgs_lp -> dot_orientation		681990	1					
ANR	682001	UnaryOperationExpression	& pgs_lp -> dot_orientation		681990	0					
ANR	682002	UnaryOperator	&		681990	0					
ANR	682003	PtrMemberAccess	pgs_lp -> dot_orientation		681990	1					
ANR	682004	Identifier	pgs_lp		681990	0					
ANR	682005	Identifier	dot_orientation		681990	1					
ANR	682006	ReturnType	int		681990	1					
ANR	682007	Identifier	gs_dotorientation		681990	2					
ANR	682008	ParameterList	gs_gstate * pgs		681990	3					
ANR	682009	Parameter	gs_gstate * pgs	402:18:9686:9699	681990	0	True				
ANR	682010	ParameterType	gs_gstate *		681990	0					
ANR	682011	Identifier	pgs		681990	1					
ANR	682012	CFGEntryNode	ENTRY		681990		True				
ANR	682013	CFGExitNode	EXIT		681990		True				
ANR	682014	Symbol	pgs_lp		681990						
ANR	682015	Symbol	& pgs_lp -> dot_orientation		681990						
ANR	682016	Symbol	gs_setmatrix		681990						
ANR	682017	Symbol	pgs		681990						
