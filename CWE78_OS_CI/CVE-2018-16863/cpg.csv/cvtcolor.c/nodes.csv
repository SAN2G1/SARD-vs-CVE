command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2316669	File	data/converged/CVE-2018-16863_ghostpdl/cvtcolor.c								
ANR	2316670	Function	usage	24:0:516:675							
ANR	2316671	FunctionDef	usage (const char * prog)		2316670	0					
ANR	2316672	CompoundStatement		26:0:552:675	2316670	0					
ANR	2316673	ExpressionStatement	"fprintf ( stderr , ""%s: usage: %s [-linear|-sRGB] [-gray|-color] component{1,4}\\n"" , prog , prog )"	27:3:557:661	2316670	0	True				
ANR	2316674	CallExpression	"fprintf ( stderr , ""%s: usage: %s [-linear|-sRGB] [-gray|-color] component{1,4}\\n"" , prog , prog )"		2316670	0					
ANR	2316675	Callee	fprintf		2316670	0					
ANR	2316676	Identifier	fprintf		2316670	0					
ANR	2316677	ArgumentList	stderr		2316670	1					
ANR	2316678	Argument	stderr		2316670	0					
ANR	2316679	Identifier	stderr		2316670	0					
ANR	2316680	Argument	"""%s: usage: %s [-linear|-sRGB] [-gray|-color] component{1,4}\\n"""		2316670	1					
ANR	2316681	PrimaryExpression	"""%s: usage: %s [-linear|-sRGB] [-gray|-color] component{1,4}\\n"""		2316670	0					
ANR	2316682	Argument	prog		2316670	2					
ANR	2316683	Identifier	prog		2316670	0					
ANR	2316684	Argument	prog		2316670	3					
ANR	2316685	Identifier	prog		2316670	0					
ANR	2316686	ExpressionStatement	exit ( 1 )	30:3:666:673	2316670	1	True				
ANR	2316687	CallExpression	exit ( 1 )		2316670	0					
ANR	2316688	Callee	exit		2316670	0					
ANR	2316689	Identifier	exit		2316670	0					
ANR	2316690	ArgumentList	1		2316670	1					
ANR	2316691	Argument	1		2316670	0					
ANR	2316692	PrimaryExpression	1		2316670	0					
ANR	2316693	ReturnType	static void		2316670	1					
ANR	2316694	Identifier	usage		2316670	2					
ANR	2316695	ParameterList	const char * prog		2316670	3					
ANR	2316696	Parameter	const char * prog	25:6:534:549	2316670	0	True				
ANR	2316697	ParameterType	const char *		2316670	0					
ANR	2316698	Identifier	prog		2316670	1					
ANR	2316699	CFGEntryNode	ENTRY		2316670		True				
ANR	2316700	CFGExitNode	EXIT		2316670		True				
ANR	2316701	Symbol	stderr		2316670						
ANR	2316702	Symbol	prog		2316670						
ANR	2316703	Function	component	33:0:678:992							
ANR	2316704	FunctionDef	"component (const char * prog , const char * arg , int issRGB)"		2316703	0					
ANR	2316705	CompoundStatement		35:0:749:992	2316703	0					
ANR	2316706	IdentifierDeclStatement	char * ep ;	36:3:754:762	2316703	0	True				
ANR	2316707	IdentifierDecl	* ep		2316703	0					
ANR	2316708	IdentifierDeclType	char *		2316703	0					
ANR	2316709	Identifier	ep		2316703	1					
ANR	2316710	IdentifierDeclStatement	"unsigned long c = strtoul ( arg , & ep , 0 ) ;"	37:3:767:805	2316703	1	True				
ANR	2316711	IdentifierDecl	"c = strtoul ( arg , & ep , 0 )"		2316703	0					
ANR	2316712	IdentifierDeclType	unsigned long		2316703	0					
ANR	2316713	Identifier	c		2316703	1					
ANR	2316714	AssignmentExpression	"c = strtoul ( arg , & ep , 0 )"		2316703	2		=			
ANR	2316715	Identifier	c		2316703	0					
ANR	2316716	CallExpression	"strtoul ( arg , & ep , 0 )"		2316703	1					
ANR	2316717	Callee	strtoul		2316703	0					
ANR	2316718	Identifier	strtoul		2316703	0					
ANR	2316719	ArgumentList	arg		2316703	1					
ANR	2316720	Argument	arg		2316703	0					
ANR	2316721	Identifier	arg		2316703	0					
ANR	2316722	Argument	& ep		2316703	1					
ANR	2316723	UnaryOperationExpression	& ep		2316703	0					
ANR	2316724	UnaryOperator	&		2316703	0					
ANR	2316725	Identifier	ep		2316703	1					
ANR	2316726	Argument	0		2316703	2					
ANR	2316727	PrimaryExpression	0		2316703	0					
ANR	2316728	IfStatement	if ( ep <= arg || * ep || c > 65535 || ( issRGB && c > 255 ) )		2316703	2					
ANR	2316729	Condition	ep <= arg || * ep || c > 65535 || ( issRGB && c > 255 )	39:7:815:866	2316703	0	True				
ANR	2316730	OrExpression	ep <= arg || * ep || c > 65535 || ( issRGB && c > 255 )		2316703	0		||			
ANR	2316731	RelationalExpression	ep <= arg		2316703	0		<=			
ANR	2316732	Identifier	ep		2316703	0					
ANR	2316733	Identifier	arg		2316703	1					
ANR	2316734	OrExpression	* ep || c > 65535 || ( issRGB && c > 255 )		2316703	1		||			
ANR	2316735	UnaryOperationExpression	* ep		2316703	0					
ANR	2316736	UnaryOperator	*		2316703	0					
ANR	2316737	Identifier	ep		2316703	1					
ANR	2316738	OrExpression	c > 65535 || ( issRGB && c > 255 )		2316703	1		||			
ANR	2316739	RelationalExpression	c > 65535		2316703	0		>			
ANR	2316740	Identifier	c		2316703	0					
ANR	2316741	PrimaryExpression	65535		2316703	1					
ANR	2316742	AndExpression	issRGB && c > 255		2316703	1		&&			
ANR	2316743	Identifier	issRGB		2316703	0					
ANR	2316744	RelationalExpression	c > 255		2316703	1		>			
ANR	2316745	Identifier	c		2316703	0					
ANR	2316746	PrimaryExpression	255		2316703	1					
ANR	2316747	CompoundStatement		6:3:122:122	2316703	1					
ANR	2316748	ExpressionStatement	"fprintf ( stderr , ""%s: %s: invalid component value (%lu)\\n"" , prog , arg , c )"	41:6:880:952	2316703	0	True				
ANR	2316749	CallExpression	"fprintf ( stderr , ""%s: %s: invalid component value (%lu)\\n"" , prog , arg , c )"		2316703	0					
ANR	2316750	Callee	fprintf		2316703	0					
ANR	2316751	Identifier	fprintf		2316703	0					
ANR	2316752	ArgumentList	stderr		2316703	1					
ANR	2316753	Argument	stderr		2316703	0					
ANR	2316754	Identifier	stderr		2316703	0					
ANR	2316755	Argument	"""%s: %s: invalid component value (%lu)\\n"""		2316703	1					
ANR	2316756	PrimaryExpression	"""%s: %s: invalid component value (%lu)\\n"""		2316703	0					
ANR	2316757	Argument	prog		2316703	2					
ANR	2316758	Identifier	prog		2316703	0					
ANR	2316759	Argument	arg		2316703	3					
ANR	2316760	Identifier	arg		2316703	0					
ANR	2316761	Argument	c		2316703	4					
ANR	2316762	Identifier	c		2316703	0					
ANR	2316763	ExpressionStatement	usage ( prog )	42:6:960:971	2316703	1	True				
ANR	2316764	CallExpression	usage ( prog )		2316703	0					
ANR	2316765	Callee	usage		2316703	0					
ANR	2316766	Identifier	usage		2316703	0					
ANR	2316767	ArgumentList	prog		2316703	1					
ANR	2316768	Argument	prog		2316703	0					
ANR	2316769	Identifier	prog		2316703	0					
ANR	2316770	ReturnStatement	return c ;	45:3:982:990	2316703	3	True				
ANR	2316771	Identifier	c		2316703	0					
ANR	2316772	ReturnType	unsigned long		2316703	1					
ANR	2316773	Identifier	component		2316703	2					
ANR	2316774	ParameterList	"const char * prog , const char * arg , int issRGB"		2316703	3					
ANR	2316775	Parameter	const char * prog	34:10:702:717	2316703	0	True				
ANR	2316776	ParameterType	const char *		2316703	0					
ANR	2316777	Identifier	prog		2316703	1					
ANR	2316778	Parameter	const char * arg	34:28:720:734	2316703	1	True				
ANR	2316779	ParameterType	const char *		2316703	0					
ANR	2316780	Identifier	arg		2316703	1					
ANR	2316781	Parameter	int issRGB	34:45:737:746	2316703	2	True				
ANR	2316782	ParameterType	int		2316703	0					
ANR	2316783	Identifier	issRGB		2316703	1					
ANR	2316784	CFGEntryNode	ENTRY		2316703		True				
ANR	2316785	CFGExitNode	EXIT		2316703		True				
ANR	2316786	Symbol	issRGB		2316703						
ANR	2316787	Symbol	* ep		2316703						
ANR	2316788	Symbol	c		2316703						
ANR	2316789	Symbol	& ep		2316703						
ANR	2316790	Symbol	arg		2316703						
ANR	2316791	Symbol	strtoul		2316703						
ANR	2316792	Symbol	ep		2316703						
ANR	2316793	Symbol	stderr		2316703						
ANR	2316794	Symbol	prog		2316703						
ANR	2316795	Function	main	48:0:995:3905							
ANR	2316796	FunctionDef	"main (int argc , const char * * argv)"		2316795	0					
ANR	2316797	CompoundStatement		50:0:1033:3905	2316795	0					
ANR	2316798	IdentifierDeclStatement	const char * prog = * argv ++ ;	51:3:1038:1064	2316795	0	True				
ANR	2316799	IdentifierDecl	* prog = * argv ++		2316795	0					
ANR	2316800	IdentifierDeclType	const char *		2316795	0					
ANR	2316801	Identifier	prog		2316795	1					
ANR	2316802	AssignmentExpression	* prog = * argv ++		2316795	2		=			
ANR	2316803	Identifier	prog		2316795	0					
ANR	2316804	UnaryOperationExpression	* argv ++		2316795	1					
ANR	2316805	UnaryOperator	*		2316795	0					
ANR	2316806	PostIncDecOperationExpression	argv ++		2316795	1					
ANR	2316807	Identifier	argv		2316795	0					
ANR	2316808	IncDec	++		2316795	1					
ANR	2316809	IdentifierDeclStatement	"int to_linear = 0 , to_gray = 0 , to_color = 0 ;"	52:3:1069:1113	2316795	1	True				
ANR	2316810	IdentifierDecl	to_linear = 0		2316795	0					
ANR	2316811	IdentifierDeclType	int		2316795	0					
ANR	2316812	Identifier	to_linear		2316795	1					
ANR	2316813	AssignmentExpression	to_linear = 0		2316795	2		=			
ANR	2316814	Identifier	to_linear		2316795	0					
ANR	2316815	PrimaryExpression	0		2316795	1					
ANR	2316816	IdentifierDecl	to_gray = 0		2316795	1					
ANR	2316817	IdentifierDeclType	int		2316795	0					
ANR	2316818	Identifier	to_gray		2316795	1					
ANR	2316819	AssignmentExpression	to_gray = 0		2316795	2		=			
ANR	2316820	Identifier	to_gray		2316795	0					
ANR	2316821	PrimaryExpression	0		2316795	1					
ANR	2316822	IdentifierDecl	to_color = 0		2316795	2					
ANR	2316823	IdentifierDeclType	int		2316795	0					
ANR	2316824	Identifier	to_color		2316795	1					
ANR	2316825	AssignmentExpression	to_color = 0		2316795	2		=			
ANR	2316826	Identifier	to_color		2316795	0					
ANR	2316827	PrimaryExpression	0		2316795	1					
ANR	2316828	IdentifierDeclStatement	int channels = 0 ;	53:3:1118:1134	2316795	2	True				
ANR	2316829	IdentifierDecl	channels = 0		2316795	0					
ANR	2316830	IdentifierDeclType	int		2316795	0					
ANR	2316831	Identifier	channels		2316795	1					
ANR	2316832	AssignmentExpression	channels = 0		2316795	2		=			
ANR	2316833	Identifier	channels		2316795	0					
ANR	2316834	PrimaryExpression	0		2316795	1					
ANR	2316835	IdentifierDeclStatement	double c [ 4 ] ;	54:3:1139:1150	2316795	3	True				
ANR	2316836	IdentifierDecl	c [ 4 ]		2316795	0					
ANR	2316837	IdentifierDeclType	double [ 4 ]		2316795	0					
ANR	2316838	Identifier	c		2316795	1					
ANR	2316839	PrimaryExpression	4		2316795	2					
ANR	2316840	ExpressionStatement	fesetround ( FE_TONEAREST )	60:3:1345:1369	2316795	4	True				
ANR	2316841	CallExpression	fesetround ( FE_TONEAREST )		2316795	0					
ANR	2316842	Callee	fesetround		2316795	0					
ANR	2316843	Identifier	fesetround		2316795	0					
ANR	2316844	ArgumentList	FE_TONEAREST		2316795	1					
ANR	2316845	Argument	FE_TONEAREST		2316795	0					
ANR	2316846	Identifier	FE_TONEAREST		2316795	0					
ANR	2316847	ExpressionStatement	c [ 3 ] = c [ 2 ] = c [ 1 ] = c [ 0 ] = 0	62:3:1375:1404	2316795	5	True				
ANR	2316848	AssignmentExpression	c [ 3 ] = c [ 2 ] = c [ 1 ] = c [ 0 ] = 0		2316795	0		=			
ANR	2316849	ArrayIndexing	c [ 3 ]		2316795	0					
ANR	2316850	Identifier	c		2316795	0					
ANR	2316851	PrimaryExpression	3		2316795	1					
ANR	2316852	AssignmentExpression	c [ 2 ] = c [ 1 ] = c [ 0 ] = 0		2316795	1		=			
ANR	2316853	ArrayIndexing	c [ 2 ]		2316795	0					
ANR	2316854	Identifier	c		2316795	0					
ANR	2316855	PrimaryExpression	2		2316795	1					
ANR	2316856	AssignmentExpression	c [ 1 ] = c [ 0 ] = 0		2316795	1		=			
ANR	2316857	ArrayIndexing	c [ 1 ]		2316795	0					
ANR	2316858	Identifier	c		2316795	0					
ANR	2316859	PrimaryExpression	1		2316795	1					
ANR	2316860	AssignmentExpression	c [ 0 ] = 0		2316795	1		=			
ANR	2316861	ArrayIndexing	c [ 0 ]		2316795	0					
ANR	2316862	Identifier	c		2316795	0					
ANR	2316863	PrimaryExpression	0		2316795	1					
ANR	2316864	PrimaryExpression	0		2316795	1					
ANR	2316865	WhileStatement	while ( -- argc > 0 && * * argv == '-' )		2316795	6					
ANR	2316866	Condition	-- argc > 0 && * * argv == '-'	64:10:1417:1443	2316795	0	True				
ANR	2316867	AndExpression	-- argc > 0 && * * argv == '-'		2316795	0		&&			
ANR	2316868	RelationalExpression	-- argc > 0		2316795	0		>			
ANR	2316869	UnaryExpression	-- argc		2316795	0					
ANR	2316870	IncDec	--		2316795	0					
ANR	2316871	Identifier	argc		2316795	1					
ANR	2316872	PrimaryExpression	0		2316795	1					
ANR	2316873	EqualityExpression	* * argv == '-'		2316795	1		==			
ANR	2316874	UnaryOperationExpression	* * argv		2316795	0					
ANR	2316875	UnaryOperator	*		2316795	0					
ANR	2316876	UnaryOperationExpression	* argv		2316795	1					
ANR	2316877	UnaryOperator	*		2316795	0					
ANR	2316878	Identifier	argv		2316795	1					
ANR	2316879	PrimaryExpression	'-'		2316795	1					
ANR	2316880	CompoundStatement		17:6:423:450	2316795	1					
ANR	2316881	IdentifierDeclStatement	const char * arg = 1 + * argv ++ ;	66:6:1457:1484	2316795	0	True				
ANR	2316882	IdentifierDecl	* arg = 1 + * argv ++		2316795	0					
ANR	2316883	IdentifierDeclType	const char *		2316795	0					
ANR	2316884	Identifier	arg		2316795	1					
ANR	2316885	AssignmentExpression	* arg = 1 + * argv ++		2316795	2		=			
ANR	2316886	Identifier	arg		2316795	0					
ANR	2316887	AdditiveExpression	1 + * argv ++		2316795	1		+			
ANR	2316888	PrimaryExpression	1		2316795	0					
ANR	2316889	UnaryOperationExpression	* argv ++		2316795	1					
ANR	2316890	UnaryOperator	*		2316795	0					
ANR	2316891	PostIncDecOperationExpression	argv ++		2316795	1					
ANR	2316892	Identifier	argv		2316795	0					
ANR	2316893	IncDec	++		2316795	1					
ANR	2316894	IfStatement	"if ( strcmp ( arg , ""sRGB"" ) == 0 )"		2316795	1					
ANR	2316895	Condition	"strcmp ( arg , ""sRGB"" ) == 0"	68:10:1497:1520	2316795	0	True				
ANR	2316896	EqualityExpression	"strcmp ( arg , ""sRGB"" ) == 0"		2316795	0		==			
ANR	2316897	CallExpression	"strcmp ( arg , ""sRGB"" )"		2316795	0					
ANR	2316898	Callee	strcmp		2316795	0					
ANR	2316899	Identifier	strcmp		2316795	0					
ANR	2316900	ArgumentList	arg		2316795	1					
ANR	2316901	Argument	arg		2316795	0					
ANR	2316902	Identifier	arg		2316795	0					
ANR	2316903	Argument	"""sRGB"""		2316795	1					
ANR	2316904	PrimaryExpression	"""sRGB"""		2316795	0					
ANR	2316905	PrimaryExpression	0		2316795	1					
ANR	2316906	ExpressionStatement	to_linear = 0	69:9:1532:1545	2316795	1	True				
ANR	2316907	AssignmentExpression	to_linear = 0		2316795	0		=			
ANR	2316908	Identifier	to_linear		2316795	0					
ANR	2316909	PrimaryExpression	0		2316795	1					
ANR	2316910	ElseStatement	else		2316795	0					
ANR	2316911	IfStatement	"if ( strcmp ( arg , ""linear"" ) == 0 )"		2316795	0					
ANR	2316912	Condition	"strcmp ( arg , ""linear"" ) == 0"	71:15:1563:1588	2316795	0	True				
ANR	2316913	EqualityExpression	"strcmp ( arg , ""linear"" ) == 0"		2316795	0		==			
ANR	2316914	CallExpression	"strcmp ( arg , ""linear"" )"		2316795	0					
ANR	2316915	Callee	strcmp		2316795	0					
ANR	2316916	Identifier	strcmp		2316795	0					
ANR	2316917	ArgumentList	arg		2316795	1					
ANR	2316918	Argument	arg		2316795	0					
ANR	2316919	Identifier	arg		2316795	0					
ANR	2316920	Argument	"""linear"""		2316795	1					
ANR	2316921	PrimaryExpression	"""linear"""		2316795	0					
ANR	2316922	PrimaryExpression	0		2316795	1					
ANR	2316923	ExpressionStatement	to_linear = 1	72:9:1600:1613	2316795	1	True				
ANR	2316924	AssignmentExpression	to_linear = 1		2316795	0		=			
ANR	2316925	Identifier	to_linear		2316795	0					
ANR	2316926	PrimaryExpression	1		2316795	1					
ANR	2316927	ElseStatement	else		2316795	0					
ANR	2316928	IfStatement	"if ( strcmp ( arg , ""gray"" ) == 0 )"		2316795	0					
ANR	2316929	Condition	"strcmp ( arg , ""gray"" ) == 0"	74:15:1631:1654	2316795	0	True				
ANR	2316930	EqualityExpression	"strcmp ( arg , ""gray"" ) == 0"		2316795	0		==			
ANR	2316931	CallExpression	"strcmp ( arg , ""gray"" )"		2316795	0					
ANR	2316932	Callee	strcmp		2316795	0					
ANR	2316933	Identifier	strcmp		2316795	0					
ANR	2316934	ArgumentList	arg		2316795	1					
ANR	2316935	Argument	arg		2316795	0					
ANR	2316936	Identifier	arg		2316795	0					
ANR	2316937	Argument	"""gray"""		2316795	1					
ANR	2316938	PrimaryExpression	"""gray"""		2316795	0					
ANR	2316939	PrimaryExpression	0		2316795	1					
ANR	2316940	ExpressionStatement	"to_gray = 1 , to_color = 0"	75:9:1666:1691	2316795	1	True				
ANR	2316941	Expression	"to_gray = 1 , to_color = 0"		2316795	0					
ANR	2316942	AssignmentExpression	to_gray = 1		2316795	0		=			
ANR	2316943	Identifier	to_gray		2316795	0					
ANR	2316944	PrimaryExpression	1		2316795	1					
ANR	2316945	AssignmentExpression	to_color = 0		2316795	1		=			
ANR	2316946	Identifier	to_color		2316795	0					
ANR	2316947	PrimaryExpression	0		2316795	1					
ANR	2316948	ElseStatement	else		2316795	0					
ANR	2316949	IfStatement	"if ( strcmp ( arg , ""color"" ) == 0 )"		2316795	0					
ANR	2316950	Condition	"strcmp ( arg , ""color"" ) == 0"	77:15:1709:1733	2316795	0	True				
ANR	2316951	EqualityExpression	"strcmp ( arg , ""color"" ) == 0"		2316795	0		==			
ANR	2316952	CallExpression	"strcmp ( arg , ""color"" )"		2316795	0					
ANR	2316953	Callee	strcmp		2316795	0					
ANR	2316954	Identifier	strcmp		2316795	0					
ANR	2316955	ArgumentList	arg		2316795	1					
ANR	2316956	Argument	arg		2316795	0					
ANR	2316957	Identifier	arg		2316795	0					
ANR	2316958	Argument	"""color"""		2316795	1					
ANR	2316959	PrimaryExpression	"""color"""		2316795	0					
ANR	2316960	PrimaryExpression	0		2316795	1					
ANR	2316961	ExpressionStatement	"to_gray = 0 , to_color = 1"	78:9:1745:1770	2316795	1	True				
ANR	2316962	Expression	"to_gray = 0 , to_color = 1"		2316795	0					
ANR	2316963	AssignmentExpression	to_gray = 0		2316795	0		=			
ANR	2316964	Identifier	to_gray		2316795	0					
ANR	2316965	PrimaryExpression	0		2316795	1					
ANR	2316966	AssignmentExpression	to_color = 1		2316795	1		=			
ANR	2316967	Identifier	to_color		2316795	0					
ANR	2316968	PrimaryExpression	1		2316795	1					
ANR	2316969	ElseStatement	else		2316795	0					
ANR	2316970	ExpressionStatement	usage ( prog )	81:9:1793:1804	2316795	0	True				
ANR	2316971	CallExpression	usage ( prog )		2316795	0					
ANR	2316972	Callee	usage		2316795	0					
ANR	2316973	Identifier	usage		2316795	0					
ANR	2316974	ArgumentList	prog		2316795	1					
ANR	2316975	Argument	prog		2316795	0					
ANR	2316976	Identifier	prog		2316795	0					
ANR	2316977	SwitchStatement	switch ( argc )		2316795	7					
ANR	2316978	Condition	argc	84:11:1823:1826	2316795	0	True				
ANR	2316979	Identifier	argc		2316795	0					
ANR	2316980	CompoundStatement		36:3:798:798	2316795	1					
ANR	2316981	Label	default :	86:6:1840:1847	2316795	0	True				
ANR	2316982	Identifier	default		2316795	0					
ANR	2316983	ExpressionStatement	usage ( prog )	87:9:1858:1869	2316795	1	True				
ANR	2316984	CallExpression	usage ( prog )		2316795	0					
ANR	2316985	Callee	usage		2316795	0					
ANR	2316986	Identifier	usage		2316795	0					
ANR	2316987	ArgumentList	prog		2316795	1					
ANR	2316988	Argument	prog		2316795	0					
ANR	2316989	Identifier	prog		2316795	0					
ANR	2316990	BreakStatement	break ;	88:9:1880:1885	2316795	2	True				
ANR	2316991	Label	case 4 :	90:6:1894:1900	2316795	3	True				
ANR	2316992	ExpressionStatement	"c [ 3 ] = component ( prog , argv [ 3 ] , to_linear )"	91:9:1911:1953	2316795	4	True				
ANR	2316993	AssignmentExpression	"c [ 3 ] = component ( prog , argv [ 3 ] , to_linear )"		2316795	0		=			
ANR	2316994	ArrayIndexing	c [ 3 ]		2316795	0					
ANR	2316995	Identifier	c		2316795	0					
ANR	2316996	PrimaryExpression	3		2316795	1					
ANR	2316997	CallExpression	"component ( prog , argv [ 3 ] , to_linear )"		2316795	1					
ANR	2316998	Callee	component		2316795	0					
ANR	2316999	Identifier	component		2316795	0					
ANR	2317000	ArgumentList	prog		2316795	1					
ANR	2317001	Argument	prog		2316795	0					
ANR	2317002	Identifier	prog		2316795	0					
ANR	2317003	Argument	argv [ 3 ]		2316795	1					
ANR	2317004	ArrayIndexing	argv [ 3 ]		2316795	0					
ANR	2317005	Identifier	argv		2316795	0					
ANR	2317006	PrimaryExpression	3		2316795	1					
ANR	2317007	Argument	to_linear		2316795	2					
ANR	2317008	Identifier	to_linear		2316795	0					
ANR	2317009	ExpressionStatement	++ channels	92:9:1964:1974	2316795	5	True				
ANR	2317010	UnaryExpression	++ channels		2316795	0					
ANR	2317011	IncDec	++		2316795	0					
ANR	2317012	Identifier	channels		2316795	1					
ANR	2317013	Label	case 3 :	93:6:1982:1988	2316795	6	True				
ANR	2317014	ExpressionStatement	"c [ 2 ] = component ( prog , argv [ 2 ] , to_linear )"	94:9:1999:2041	2316795	7	True				
ANR	2317015	AssignmentExpression	"c [ 2 ] = component ( prog , argv [ 2 ] , to_linear )"		2316795	0		=			
ANR	2317016	ArrayIndexing	c [ 2 ]		2316795	0					
ANR	2317017	Identifier	c		2316795	0					
ANR	2317018	PrimaryExpression	2		2316795	1					
ANR	2317019	CallExpression	"component ( prog , argv [ 2 ] , to_linear )"		2316795	1					
ANR	2317020	Callee	component		2316795	0					
ANR	2317021	Identifier	component		2316795	0					
ANR	2317022	ArgumentList	prog		2316795	1					
ANR	2317023	Argument	prog		2316795	0					
ANR	2317024	Identifier	prog		2316795	0					
ANR	2317025	Argument	argv [ 2 ]		2316795	1					
ANR	2317026	ArrayIndexing	argv [ 2 ]		2316795	0					
ANR	2317027	Identifier	argv		2316795	0					
ANR	2317028	PrimaryExpression	2		2316795	1					
ANR	2317029	Argument	to_linear		2316795	2					
ANR	2317030	Identifier	to_linear		2316795	0					
ANR	2317031	ExpressionStatement	++ channels	95:9:2052:2062	2316795	8	True				
ANR	2317032	UnaryExpression	++ channels		2316795	0					
ANR	2317033	IncDec	++		2316795	0					
ANR	2317034	Identifier	channels		2316795	1					
ANR	2317035	Label	case 2 :	96:6:2070:2076	2316795	9	True				
ANR	2317036	ExpressionStatement	"c [ 1 ] = component ( prog , argv [ 1 ] , to_linear )"	97:9:2087:2129	2316795	10	True				
ANR	2317037	AssignmentExpression	"c [ 1 ] = component ( prog , argv [ 1 ] , to_linear )"		2316795	0		=			
ANR	2317038	ArrayIndexing	c [ 1 ]		2316795	0					
ANR	2317039	Identifier	c		2316795	0					
ANR	2317040	PrimaryExpression	1		2316795	1					
ANR	2317041	CallExpression	"component ( prog , argv [ 1 ] , to_linear )"		2316795	1					
ANR	2317042	Callee	component		2316795	0					
ANR	2317043	Identifier	component		2316795	0					
ANR	2317044	ArgumentList	prog		2316795	1					
ANR	2317045	Argument	prog		2316795	0					
ANR	2317046	Identifier	prog		2316795	0					
ANR	2317047	Argument	argv [ 1 ]		2316795	1					
ANR	2317048	ArrayIndexing	argv [ 1 ]		2316795	0					
ANR	2317049	Identifier	argv		2316795	0					
ANR	2317050	PrimaryExpression	1		2316795	1					
ANR	2317051	Argument	to_linear		2316795	2					
ANR	2317052	Identifier	to_linear		2316795	0					
ANR	2317053	ExpressionStatement	++ channels	98:9:2140:2150	2316795	11	True				
ANR	2317054	UnaryExpression	++ channels		2316795	0					
ANR	2317055	IncDec	++		2316795	0					
ANR	2317056	Identifier	channels		2316795	1					
ANR	2317057	Label	case 1 :	99:6:2158:2164	2316795	12	True				
ANR	2317058	ExpressionStatement	"c [ 0 ] = component ( prog , argv [ 0 ] , to_linear )"	100:9:2175:2217	2316795	13	True				
ANR	2317059	AssignmentExpression	"c [ 0 ] = component ( prog , argv [ 0 ] , to_linear )"		2316795	0		=			
ANR	2317060	ArrayIndexing	c [ 0 ]		2316795	0					
ANR	2317061	Identifier	c		2316795	0					
ANR	2317062	PrimaryExpression	0		2316795	1					
ANR	2317063	CallExpression	"component ( prog , argv [ 0 ] , to_linear )"		2316795	1					
ANR	2317064	Callee	component		2316795	0					
ANR	2317065	Identifier	component		2316795	0					
ANR	2317066	ArgumentList	prog		2316795	1					
ANR	2317067	Argument	prog		2316795	0					
ANR	2317068	Identifier	prog		2316795	0					
ANR	2317069	Argument	argv [ 0 ]		2316795	1					
ANR	2317070	ArrayIndexing	argv [ 0 ]		2316795	0					
ANR	2317071	Identifier	argv		2316795	0					
ANR	2317072	PrimaryExpression	0		2316795	1					
ANR	2317073	Argument	to_linear		2316795	2					
ANR	2317074	Identifier	to_linear		2316795	0					
ANR	2317075	ExpressionStatement	++ channels	101:9:2228:2238	2316795	14	True				
ANR	2317076	UnaryExpression	++ channels		2316795	0					
ANR	2317077	IncDec	++		2316795	0					
ANR	2317078	Identifier	channels		2316795	1					
ANR	2317079	BreakStatement	break ;	102:9:2249:2254	2316795	15	True				
ANR	2317080	IfStatement	if ( to_linear )		2316795	8					
ANR	2317081	Condition	to_linear	105:7:2272:2280	2316795	0	True				
ANR	2317082	Identifier	to_linear		2316795	0					
ANR	2317083	CompoundStatement		59:6:1273:1298	2316795	1					
ANR	2317084	IdentifierDeclStatement	int i ;	107:6:2294:2299	2316795	0	True				
ANR	2317085	IdentifierDecl	i		2316795	0					
ANR	2317086	IdentifierDeclType	int		2316795	0					
ANR	2317087	Identifier	i		2316795	1					
ANR	2317088	IdentifierDeclStatement	int components = channels ;	108:6:2307:2332	2316795	1	True				
ANR	2317089	IdentifierDecl	components = channels		2316795	0					
ANR	2317090	IdentifierDeclType	int		2316795	0					
ANR	2317091	Identifier	components		2316795	1					
ANR	2317092	AssignmentExpression	components = channels		2316795	2		=			
ANR	2317093	Identifier	channels		2316795	0					
ANR	2317094	Identifier	channels		2316795	1					
ANR	2317095	IfStatement	if ( ( components & 1 ) == 0 )		2316795	2					
ANR	2317096	Condition	( components & 1 ) == 0	110:10:2345:2365	2316795	0	True				
ANR	2317097	EqualityExpression	( components & 1 ) == 0		2316795	0		==			
ANR	2317098	BitAndExpression	components & 1		2316795	0		&			
ANR	2317099	Identifier	components		2316795	0					
ANR	2317100	PrimaryExpression	1		2316795	1					
ANR	2317101	PrimaryExpression	0		2316795	1					
ANR	2317102	ExpressionStatement	-- components	111:9:2377:2389	2316795	1	True				
ANR	2317103	UnaryExpression	-- components		2316795	0					
ANR	2317104	IncDec	--		2316795	0					
ANR	2317105	Identifier	components		2316795	1					
ANR	2317106	ForStatement	for ( i = 0 ; i < components ; ++ i )		2316795	3					
ANR	2317107	ForInit	i = 0 ;	113:11:2403:2406	2316795	0	True				
ANR	2317108	AssignmentExpression	i = 0		2316795	0		=			
ANR	2317109	Identifier	i		2316795	0					
ANR	2317110	PrimaryExpression	0		2316795	1					
ANR	2317111	Condition	i < components	113:16:2408:2419	2316795	1	True				
ANR	2317112	RelationalExpression	i < components		2316795	0		<			
ANR	2317113	Identifier	i		2316795	0					
ANR	2317114	Identifier	components		2316795	1					
ANR	2317115	UnaryExpression	++ i	113:30:2422:2424	2316795	2	True				
ANR	2317116	IncDec	++		2316795	0					
ANR	2317117	Identifier	i		2316795	1					
ANR	2317118	ExpressionStatement	c [ i ] = linear_from_sRGB ( c [ i ] / 255 )	113:35:2427:2462	2316795	3	True				
ANR	2317119	AssignmentExpression	c [ i ] = linear_from_sRGB ( c [ i ] / 255 )		2316795	0		=			
ANR	2317120	ArrayIndexing	c [ i ]		2316795	0					
ANR	2317121	Identifier	c		2316795	0					
ANR	2317122	Identifier	i		2316795	1					
ANR	2317123	CallExpression	linear_from_sRGB ( c [ i ] / 255 )		2316795	1					
ANR	2317124	Callee	linear_from_sRGB		2316795	0					
ANR	2317125	Identifier	linear_from_sRGB		2316795	0					
ANR	2317126	ArgumentList	c [ i ] / 255		2316795	1					
ANR	2317127	Argument	c [ i ] / 255		2316795	0					
ANR	2317128	MultiplicativeExpression	c [ i ] / 255		2316795	0		/			
ANR	2317129	ArrayIndexing	c [ i ]		2316795	0					
ANR	2317130	Identifier	c		2316795	0					
ANR	2317131	Identifier	i		2316795	1					
ANR	2317132	PrimaryExpression	255		2316795	1					
ANR	2317133	IfStatement	if ( components < channels )		2316795	4					
ANR	2317134	Condition	components < channels	114:10:2474:2494	2316795	0	True				
ANR	2317135	RelationalExpression	components < channels		2316795	0		<			
ANR	2317136	Identifier	components		2316795	0					
ANR	2317137	Identifier	channels		2316795	1					
ANR	2317138	ExpressionStatement	c [ components ] = c [ components ] / 255	115:9:2506:2541	2316795	1	True				
ANR	2317139	AssignmentExpression	c [ components ] = c [ components ] / 255		2316795	0		=			
ANR	2317140	ArrayIndexing	c [ components ]		2316795	0					
ANR	2317141	Identifier	c		2316795	0					
ANR	2317142	Identifier	components		2316795	1					
ANR	2317143	MultiplicativeExpression	c [ components ] / 255		2316795	1		/			
ANR	2317144	ArrayIndexing	c [ components ]		2316795	0					
ANR	2317145	Identifier	c		2316795	0					
ANR	2317146	Identifier	components		2316795	1					
ANR	2317147	PrimaryExpression	255		2316795	1					
ANR	2317148	ElseStatement	else		2316795	0					
ANR	2317149	CompoundStatement		71:6:1534:1539	2316795	0					
ANR	2317150	IdentifierDeclStatement	int i ;	120:6:2568:2573	2316795	0	True				
ANR	2317151	IdentifierDecl	i		2316795	0					
ANR	2317152	IdentifierDeclType	int		2316795	0					
ANR	2317153	Identifier	i		2316795	1					
ANR	2317154	ForStatement	for ( i = 0 ; i < 4 ; ++ i )		2316795	1					
ANR	2317155	ForInit	i = 0 ;	121:11:2586:2589	2316795	0	True				
ANR	2317156	AssignmentExpression	i = 0		2316795	0		=			
ANR	2317157	Identifier	i		2316795	0					
ANR	2317158	PrimaryExpression	0		2316795	1					
ANR	2317159	Condition	i < 4	121:16:2591:2593	2316795	1	True				
ANR	2317160	RelationalExpression	i < 4		2316795	0		<			
ANR	2317161	Identifier	i		2316795	0					
ANR	2317162	PrimaryExpression	4		2316795	1					
ANR	2317163	UnaryExpression	++ i	121:21:2596:2598	2316795	2	True				
ANR	2317164	IncDec	++		2316795	0					
ANR	2317165	Identifier	i		2316795	1					
ANR	2317166	ExpressionStatement	c [ i ] /= 65535	121:26:2601:2614	2316795	3	True				
ANR	2317167	AssignmentExpression	c [ i ] /= 65535		2316795	0		/=			
ANR	2317168	ArrayIndexing	c [ i ]		2316795	0					
ANR	2317169	Identifier	c		2316795	0					
ANR	2317170	Identifier	i		2316795	1					
ANR	2317171	PrimaryExpression	65535		2316795	1					
ANR	2317172	IfStatement	if ( ( channels & 1 ) == 0 )		2316795	2					
ANR	2317173	Condition	( channels & 1 ) == 0	123:10:2627:2645	2316795	0	True				
ANR	2317174	EqualityExpression	( channels & 1 ) == 0		2316795	0		==			
ANR	2317175	BitAndExpression	channels & 1		2316795	0		&			
ANR	2317176	Identifier	channels		2316795	0					
ANR	2317177	PrimaryExpression	1		2316795	1					
ANR	2317178	PrimaryExpression	0		2316795	1					
ANR	2317179	CompoundStatement		76:9:1631:1659	2316795	1					
ANR	2317180	IdentifierDeclStatement	double alpha = c [ channels - 1 ] ;	125:9:2665:2693	2316795	0	True				
ANR	2317181	IdentifierDecl	alpha = c [ channels - 1 ]		2316795	0					
ANR	2317182	IdentifierDeclType	double		2316795	0					
ANR	2317183	Identifier	alpha		2316795	1					
ANR	2317184	AssignmentExpression	alpha = c [ channels - 1 ]		2316795	2		=			
ANR	2317185	Identifier	alpha		2316795	0					
ANR	2317186	ArrayIndexing	c [ channels - 1 ]		2316795	1					
ANR	2317187	Identifier	c		2316795	0					
ANR	2317188	AdditiveExpression	channels - 1		2316795	1		-			
ANR	2317189	Identifier	channels		2316795	0					
ANR	2317190	PrimaryExpression	1		2316795	1					
ANR	2317191	IfStatement	if ( alpha > 0 )		2316795	1					
ANR	2317192	Condition	alpha > 0	127:13:2709:2717	2316795	0	True				
ANR	2317193	RelationalExpression	alpha > 0		2316795	0		>			
ANR	2317194	Identifier	alpha		2316795	0					
ANR	2317195	PrimaryExpression	0		2316795	1					
ANR	2317196	ForStatement	for ( i = 0 ; i < channels - 1 ; ++ i )		2316795	1					
ANR	2317197	ForInit	i = 0 ;	128:17:2737:2740	2316795	0	True				
ANR	2317198	AssignmentExpression	i = 0		2316795	0		=			
ANR	2317199	Identifier	i		2316795	0					
ANR	2317200	PrimaryExpression	0		2316795	1					
ANR	2317201	Condition	i < channels - 1	128:22:2742:2753	2316795	1	True				
ANR	2317202	RelationalExpression	i < channels - 1		2316795	0		<			
ANR	2317203	Identifier	i		2316795	0					
ANR	2317204	AdditiveExpression	channels - 1		2316795	1		-			
ANR	2317205	Identifier	channels		2316795	0					
ANR	2317206	PrimaryExpression	1		2316795	1					
ANR	2317207	UnaryExpression	++ i	128:36:2756:2758	2316795	2	True				
ANR	2317208	IncDec	++		2316795	0					
ANR	2317209	Identifier	i		2316795	1					
ANR	2317210	ExpressionStatement	c [ i ] /= alpha	128:41:2761:2774	2316795	3	True				
ANR	2317211	AssignmentExpression	c [ i ] /= alpha		2316795	0		/=			
ANR	2317212	ArrayIndexing	c [ i ]		2316795	0					
ANR	2317213	Identifier	c		2316795	0					
ANR	2317214	Identifier	i		2316795	1					
ANR	2317215	Identifier	alpha		2316795	1					
ANR	2317216	ElseStatement	else		2316795	0					
ANR	2317217	ForStatement	for ( i = 0 ; i < channels - 1 ; ++ i )		2316795	0					
ANR	2317218	ForInit	i = 0 ;	130:17:2807:2810	2316795	0	True				
ANR	2317219	AssignmentExpression	i = 0		2316795	0		=			
ANR	2317220	Identifier	i		2316795	0					
ANR	2317221	PrimaryExpression	0		2316795	1					
ANR	2317222	Condition	i < channels - 1	130:22:2812:2823	2316795	1	True				
ANR	2317223	RelationalExpression	i < channels - 1		2316795	0		<			
ANR	2317224	Identifier	i		2316795	0					
ANR	2317225	AdditiveExpression	channels - 1		2316795	1		-			
ANR	2317226	Identifier	channels		2316795	0					
ANR	2317227	PrimaryExpression	1		2316795	1					
ANR	2317228	UnaryExpression	++ i	130:36:2826:2828	2316795	2	True				
ANR	2317229	IncDec	++		2316795	0					
ANR	2317230	Identifier	i		2316795	1					
ANR	2317231	ExpressionStatement	c [ i ] = 1	130:41:2831:2839	2316795	3	True				
ANR	2317232	AssignmentExpression	c [ i ] = 1		2316795	0		=			
ANR	2317233	ArrayIndexing	c [ i ]		2316795	0					
ANR	2317234	Identifier	c		2316795	0					
ANR	2317235	Identifier	i		2316795	1					
ANR	2317236	PrimaryExpression	1		2316795	1					
ANR	2317237	IfStatement	if ( to_gray )		2316795	9					
ANR	2317238	Condition	to_gray	134:7:2862:2868	2316795	0	True				
ANR	2317239	Identifier	to_gray		2316795	0					
ANR	2317240	CompoundStatement		86:3:1840:1840	2316795	1					
ANR	2317241	IfStatement	if ( channels < 3 )		2316795	0					
ANR	2317242	Condition	channels < 3	136:10:2886:2897	2316795	0	True				
ANR	2317243	RelationalExpression	channels < 3		2316795	0		<			
ANR	2317244	Identifier	channels		2316795	0					
ANR	2317245	PrimaryExpression	3		2316795	1					
ANR	2317246	CompoundStatement		88:6:1872:1872	2316795	1					
ANR	2317247	ExpressionStatement	"fprintf ( stderr , ""%s: too few channels (%d) for -gray\\n"" , prog , channels )"	138:9:2917:3001	2316795	0	True				
ANR	2317248	CallExpression	"fprintf ( stderr , ""%s: too few channels (%d) for -gray\\n"" , prog , channels )"		2316795	0					
ANR	2317249	Callee	fprintf		2316795	0					
ANR	2317250	Identifier	fprintf		2316795	0					
ANR	2317251	ArgumentList	stderr		2316795	1					
ANR	2317252	Argument	stderr		2316795	0					
ANR	2317253	Identifier	stderr		2316795	0					
ANR	2317254	Argument	"""%s: too few channels (%d) for -gray\\n"""		2316795	1					
ANR	2317255	PrimaryExpression	"""%s: too few channels (%d) for -gray\\n"""		2316795	0					
ANR	2317256	Argument	prog		2316795	2					
ANR	2317257	Identifier	prog		2316795	0					
ANR	2317258	Argument	channels		2316795	3					
ANR	2317259	Identifier	channels		2316795	0					
ANR	2317260	ExpressionStatement	usage ( prog )	140:9:3012:3023	2316795	1	True				
ANR	2317261	CallExpression	usage ( prog )		2316795	0					
ANR	2317262	Callee	usage		2316795	0					
ANR	2317263	Identifier	usage		2316795	0					
ANR	2317264	ArgumentList	prog		2316795	1					
ANR	2317265	Argument	prog		2316795	0					
ANR	2317266	Identifier	prog		2316795	0					
ANR	2317267	ExpressionStatement	"c [ 0 ] = YfromRGB ( c [ 0 ] , c [ 1 ] , c [ 2 ] )"	143:6:3040:3073	2316795	1	True				
ANR	2317268	AssignmentExpression	"c [ 0 ] = YfromRGB ( c [ 0 ] , c [ 1 ] , c [ 2 ] )"		2316795	0		=			
ANR	2317269	ArrayIndexing	c [ 0 ]		2316795	0					
ANR	2317270	Identifier	c		2316795	0					
ANR	2317271	PrimaryExpression	0		2316795	1					
ANR	2317272	CallExpression	"YfromRGB ( c [ 0 ] , c [ 1 ] , c [ 2 ] )"		2316795	1					
ANR	2317273	Callee	YfromRGB		2316795	0					
ANR	2317274	Identifier	YfromRGB		2316795	0					
ANR	2317275	ArgumentList	c [ 0 ]		2316795	1					
ANR	2317276	Argument	c [ 0 ]		2316795	0					
ANR	2317277	ArrayIndexing	c [ 0 ]		2316795	0					
ANR	2317278	Identifier	c		2316795	0					
ANR	2317279	PrimaryExpression	0		2316795	1					
ANR	2317280	Argument	c [ 1 ]		2316795	1					
ANR	2317281	ArrayIndexing	c [ 1 ]		2316795	0					
ANR	2317282	Identifier	c		2316795	0					
ANR	2317283	PrimaryExpression	1		2316795	1					
ANR	2317284	Argument	c [ 2 ]		2316795	2					
ANR	2317285	ArrayIndexing	c [ 2 ]		2316795	0					
ANR	2317286	Identifier	c		2316795	0					
ANR	2317287	PrimaryExpression	2		2316795	1					
ANR	2317288	ExpressionStatement	channels -= 2	144:6:3081:3094	2316795	2	True				
ANR	2317289	AssignmentExpression	channels -= 2		2316795	0		-=			
ANR	2317290	Identifier	channels		2316795	0					
ANR	2317291	PrimaryExpression	2		2316795	1					
ANR	2317292	IfStatement	if ( to_color )		2316795	10					
ANR	2317293	Condition	to_color	147:7:3109:3116	2316795	0	True				
ANR	2317294	Identifier	to_color		2316795	0					
ANR	2317295	CompoundStatement		99:3:2088:2088	2316795	1					
ANR	2317296	IfStatement	if ( channels > 2 )		2316795	0					
ANR	2317297	Condition	channels > 2	149:10:3134:3145	2316795	0	True				
ANR	2317298	RelationalExpression	channels > 2		2316795	0		>			
ANR	2317299	Identifier	channels		2316795	0					
ANR	2317300	PrimaryExpression	2		2316795	1					
ANR	2317301	CompoundStatement		101:6:2120:2120	2316795	1					
ANR	2317302	ExpressionStatement	"fprintf ( stderr , ""%s: too many channels (%d) for -color\\n"" , prog , channels )"	151:9:3165:3251	2316795	0	True				
ANR	2317303	CallExpression	"fprintf ( stderr , ""%s: too many channels (%d) for -color\\n"" , prog , channels )"		2316795	0					
ANR	2317304	Callee	fprintf		2316795	0					
ANR	2317305	Identifier	fprintf		2316795	0					
ANR	2317306	ArgumentList	stderr		2316795	1					
ANR	2317307	Argument	stderr		2316795	0					
ANR	2317308	Identifier	stderr		2316795	0					
ANR	2317309	Argument	"""%s: too many channels (%d) for -color\\n"""		2316795	1					
ANR	2317310	PrimaryExpression	"""%s: too many channels (%d) for -color\\n"""		2316795	0					
ANR	2317311	Argument	prog		2316795	2					
ANR	2317312	Identifier	prog		2316795	0					
ANR	2317313	Argument	channels		2316795	3					
ANR	2317314	Identifier	channels		2316795	0					
ANR	2317315	ExpressionStatement	usage ( prog )	153:9:3262:3273	2316795	1	True				
ANR	2317316	CallExpression	usage ( prog )		2316795	0					
ANR	2317317	Callee	usage		2316795	0					
ANR	2317318	Identifier	usage		2316795	0					
ANR	2317319	ArgumentList	prog		2316795	1					
ANR	2317320	Argument	prog		2316795	0					
ANR	2317321	Identifier	prog		2316795	0					
ANR	2317322	ExpressionStatement	c [ 3 ] = c [ 1 ]	156:6:3290:3301	2316795	1	True				
ANR	2317323	AssignmentExpression	c [ 3 ] = c [ 1 ]		2316795	0		=			
ANR	2317324	ArrayIndexing	c [ 3 ]		2316795	0					
ANR	2317325	Identifier	c		2316795	0					
ANR	2317326	PrimaryExpression	3		2316795	1					
ANR	2317327	ArrayIndexing	c [ 1 ]		2316795	1					
ANR	2317328	Identifier	c		2316795	0					
ANR	2317329	PrimaryExpression	1		2316795	1					
ANR	2317330	ExpressionStatement	c [ 2 ] = c [ 1 ] = c [ 0 ]	157:6:3333:3351	2316795	2	True				
ANR	2317331	AssignmentExpression	c [ 2 ] = c [ 1 ] = c [ 0 ]		2316795	0		=			
ANR	2317332	ArrayIndexing	c [ 2 ]		2316795	0					
ANR	2317333	Identifier	c		2316795	0					
ANR	2317334	PrimaryExpression	2		2316795	1					
ANR	2317335	AssignmentExpression	c [ 1 ] = c [ 0 ]		2316795	1		=			
ANR	2317336	ArrayIndexing	c [ 1 ]		2316795	0					
ANR	2317337	Identifier	c		2316795	0					
ANR	2317338	PrimaryExpression	1		2316795	1					
ANR	2317339	ArrayIndexing	c [ 0 ]		2316795	1					
ANR	2317340	Identifier	c		2316795	0					
ANR	2317341	PrimaryExpression	0		2316795	1					
ANR	2317342	IfStatement	if ( to_linear )		2316795	11					
ANR	2317343	Condition	to_linear	160:7:3366:3374	2316795	0	True				
ANR	2317344	Identifier	to_linear		2316795	0					
ANR	2317345	CompoundStatement		113:6:2354:2359	2316795	1					
ANR	2317346	IdentifierDeclStatement	int i ;	162:6:3388:3393	2316795	0	True				
ANR	2317347	IdentifierDecl	i		2316795	0					
ANR	2317348	IdentifierDeclType	int		2316795	0					
ANR	2317349	Identifier	i		2316795	1					
ANR	2317350	IfStatement	if ( ( channels & 1 ) == 0 )		2316795	1					
ANR	2317351	Condition	( channels & 1 ) == 0	163:10:3405:3423	2316795	0	True				
ANR	2317352	EqualityExpression	( channels & 1 ) == 0		2316795	0		==			
ANR	2317353	BitAndExpression	channels & 1		2316795	0		&			
ANR	2317354	Identifier	channels		2316795	0					
ANR	2317355	PrimaryExpression	1		2316795	1					
ANR	2317356	PrimaryExpression	0		2316795	1					
ANR	2317357	CompoundStatement		116:9:2409:2437	2316795	1					
ANR	2317358	IdentifierDeclStatement	double alpha = c [ channels - 1 ] ;	165:9:3443:3471	2316795	0	True				
ANR	2317359	IdentifierDecl	alpha = c [ channels - 1 ]		2316795	0					
ANR	2317360	IdentifierDeclType	double		2316795	0					
ANR	2317361	Identifier	alpha		2316795	1					
ANR	2317362	AssignmentExpression	alpha = c [ channels - 1 ]		2316795	2		=			
ANR	2317363	Identifier	alpha		2316795	0					
ANR	2317364	ArrayIndexing	c [ channels - 1 ]		2316795	1					
ANR	2317365	Identifier	c		2316795	0					
ANR	2317366	AdditiveExpression	channels - 1		2316795	1		-			
ANR	2317367	Identifier	channels		2316795	0					
ANR	2317368	PrimaryExpression	1		2316795	1					
ANR	2317369	ForStatement	for ( i = 0 ; i < channels - 1 ; ++ i )		2316795	1					
ANR	2317370	ForInit	i = 0 ;	166:14:3487:3490	2316795	0	True				
ANR	2317371	AssignmentExpression	i = 0		2316795	0		=			
ANR	2317372	Identifier	i		2316795	0					
ANR	2317373	PrimaryExpression	0		2316795	1					
ANR	2317374	Condition	i < channels - 1	166:19:3492:3503	2316795	1	True				
ANR	2317375	RelationalExpression	i < channels - 1		2316795	0		<			
ANR	2317376	Identifier	i		2316795	0					
ANR	2317377	AdditiveExpression	channels - 1		2316795	1		-			
ANR	2317378	Identifier	channels		2316795	0					
ANR	2317379	PrimaryExpression	1		2316795	1					
ANR	2317380	UnaryExpression	++ i	166:33:3506:3508	2316795	2	True				
ANR	2317381	IncDec	++		2316795	0					
ANR	2317382	Identifier	i		2316795	1					
ANR	2317383	ExpressionStatement	c [ i ] *= alpha	166:38:3511:3524	2316795	3	True				
ANR	2317384	AssignmentExpression	c [ i ] *= alpha		2316795	0		*=			
ANR	2317385	ArrayIndexing	c [ i ]		2316795	0					
ANR	2317386	Identifier	c		2316795	0					
ANR	2317387	Identifier	i		2316795	1					
ANR	2317388	Identifier	alpha		2316795	1					
ANR	2317389	ForStatement	for ( i = 0 ; i < channels ; ++ i )		2316795	2					
ANR	2317390	ForInit	i = 0 ;	169:11:3546:3549	2316795	0	True				
ANR	2317391	AssignmentExpression	i = 0		2316795	0		=			
ANR	2317392	Identifier	i		2316795	0					
ANR	2317393	PrimaryExpression	0		2316795	1					
ANR	2317394	Condition	i < channels	169:16:3551:3560	2316795	1	True				
ANR	2317395	RelationalExpression	i < channels		2316795	0		<			
ANR	2317396	Identifier	i		2316795	0					
ANR	2317397	Identifier	channels		2316795	1					
ANR	2317398	UnaryExpression	++ i	169:28:3563:3565	2316795	2	True				
ANR	2317399	IncDec	++		2316795	0					
ANR	2317400	Identifier	i		2316795	1					
ANR	2317401	ExpressionStatement	c [ i ] = nearbyint ( c [ i ] * 65535 )	169:33:3568:3598	2316795	3	True				
ANR	2317402	AssignmentExpression	c [ i ] = nearbyint ( c [ i ] * 65535 )		2316795	0		=			
ANR	2317403	ArrayIndexing	c [ i ]		2316795	0					
ANR	2317404	Identifier	c		2316795	0					
ANR	2317405	Identifier	i		2316795	1					
ANR	2317406	CallExpression	nearbyint ( c [ i ] * 65535 )		2316795	1					
ANR	2317407	Callee	nearbyint		2316795	0					
ANR	2317408	Identifier	nearbyint		2316795	0					
ANR	2317409	ArgumentList	c [ i ] * 65535		2316795	1					
ANR	2317410	Argument	c [ i ] * 65535		2316795	0					
ANR	2317411	MultiplicativeExpression	c [ i ] * 65535		2316795	0		*			
ANR	2317412	ArrayIndexing	c [ i ]		2316795	0					
ANR	2317413	Identifier	c		2316795	0					
ANR	2317414	Identifier	i		2316795	1					
ANR	2317415	PrimaryExpression	65535		2316795	1					
ANR	2317416	ElseStatement	else		2316795	0					
ANR	2317417	CompoundStatement		125:6:2605:2628	2316795	0					
ANR	2317418	IdentifierDeclStatement	int i = ( channels + 1 ) & ~1 ;	174:6:3639:3662	2316795	0	True				
ANR	2317419	IdentifierDecl	i = ( channels + 1 ) & ~1		2316795	0					
ANR	2317420	IdentifierDeclType	int		2316795	0					
ANR	2317421	Identifier	i		2316795	1					
ANR	2317422	AssignmentExpression	i = ( channels + 1 ) & ~1		2316795	2		=			
ANR	2317423	Identifier	i		2316795	0					
ANR	2317424	BitAndExpression	( channels + 1 ) & ~1		2316795	1		&			
ANR	2317425	AdditiveExpression	channels + 1		2316795	0		+			
ANR	2317426	Identifier	channels		2316795	0					
ANR	2317427	PrimaryExpression	1		2316795	1					
ANR	2317428	Identifier	~1		2316795	1					
ANR	2317429	WhileStatement	while ( -- i >= 0 )		2316795	1					
ANR	2317430	Condition	-- i >= 0	175:13:3677:3684	2316795	0	True				
ANR	2317431	RelationalExpression	-- i >= 0		2316795	0		>=			
ANR	2317432	UnaryExpression	-- i		2316795	0					
ANR	2317433	IncDec	--		2316795	0					
ANR	2317434	Identifier	i		2316795	1					
ANR	2317435	PrimaryExpression	0		2316795	1					
ANR	2317436	ExpressionStatement	c [ i ] = sRGB_from_linear ( c [ i ] )	176:9:3696:3725	2316795	1	True				
ANR	2317437	AssignmentExpression	c [ i ] = sRGB_from_linear ( c [ i ] )		2316795	0		=			
ANR	2317438	ArrayIndexing	c [ i ]		2316795	0					
ANR	2317439	Identifier	c		2316795	0					
ANR	2317440	Identifier	i		2316795	1					
ANR	2317441	CallExpression	sRGB_from_linear ( c [ i ] )		2316795	1					
ANR	2317442	Callee	sRGB_from_linear		2316795	0					
ANR	2317443	Identifier	sRGB_from_linear		2316795	0					
ANR	2317444	ArgumentList	c [ i ]		2316795	1					
ANR	2317445	Argument	c [ i ]		2316795	0					
ANR	2317446	ArrayIndexing	c [ i ]		2316795	0					
ANR	2317447	Identifier	c		2316795	0					
ANR	2317448	Identifier	i		2316795	1					
ANR	2317449	ForStatement	for ( i = 0 ; i < channels ; ++ i )		2316795	2					
ANR	2317450	ForInit	i = 0 ;	178:11:3739:3742	2316795	0	True				
ANR	2317451	AssignmentExpression	i = 0		2316795	0		=			
ANR	2317452	Identifier	i		2316795	0					
ANR	2317453	PrimaryExpression	0		2316795	1					
ANR	2317454	Condition	i < channels	178:16:3744:3753	2316795	1	True				
ANR	2317455	RelationalExpression	i < channels		2316795	0		<			
ANR	2317456	Identifier	i		2316795	0					
ANR	2317457	Identifier	channels		2316795	1					
ANR	2317458	UnaryExpression	++ i	178:28:3756:3758	2316795	2	True				
ANR	2317459	IncDec	++		2316795	0					
ANR	2317460	Identifier	i		2316795	1					
ANR	2317461	ExpressionStatement	c [ i ] = nearbyint ( c [ i ] * 255 )	178:33:3761:3789	2316795	3	True				
ANR	2317462	AssignmentExpression	c [ i ] = nearbyint ( c [ i ] * 255 )		2316795	0		=			
ANR	2317463	ArrayIndexing	c [ i ]		2316795	0					
ANR	2317464	Identifier	c		2316795	0					
ANR	2317465	Identifier	i		2316795	1					
ANR	2317466	CallExpression	nearbyint ( c [ i ] * 255 )		2316795	1					
ANR	2317467	Callee	nearbyint		2316795	0					
ANR	2317468	Identifier	nearbyint		2316795	0					
ANR	2317469	ArgumentList	c [ i ] * 255		2316795	1					
ANR	2317470	Argument	c [ i ] * 255		2316795	0					
ANR	2317471	MultiplicativeExpression	c [ i ] * 255		2316795	0		*			
ANR	2317472	ArrayIndexing	c [ i ]		2316795	0					
ANR	2317473	Identifier	c		2316795	0					
ANR	2317474	Identifier	i		2316795	1					
ANR	2317475	PrimaryExpression	255		2316795	1					
ANR	2317476	CompoundStatement		133:6:2774:2779	2316795	12					
ANR	2317477	IdentifierDeclStatement	int i ;	182:6:3808:3813	2316795	0	True				
ANR	2317478	IdentifierDecl	i		2316795	0					
ANR	2317479	IdentifierDeclType	int		2316795	0					
ANR	2317480	Identifier	i		2316795	1					
ANR	2317481	ForStatement	for ( i = 0 ; i < channels ; ++ i )		2316795	1					
ANR	2317482	ForInit	i = 0 ;	183:11:3826:3829	2316795	0	True				
ANR	2317483	AssignmentExpression	i = 0		2316795	0		=			
ANR	2317484	Identifier	i		2316795	0					
ANR	2317485	PrimaryExpression	0		2316795	1					
ANR	2317486	Condition	i < channels	183:16:3831:3840	2316795	1	True				
ANR	2317487	RelationalExpression	i < channels		2316795	0		<			
ANR	2317488	Identifier	i		2316795	0					
ANR	2317489	Identifier	channels		2316795	1					
ANR	2317490	UnaryExpression	++ i	183:28:3843:3845	2316795	2	True				
ANR	2317491	IncDec	++		2316795	0					
ANR	2317492	Identifier	i		2316795	1					
ANR	2317493	ExpressionStatement	"printf ( "" %g"" , c [ i ] )"	183:33:3848:3867	2316795	3	True				
ANR	2317494	CallExpression	"printf ( "" %g"" , c [ i ] )"		2316795	0					
ANR	2317495	Callee	printf		2316795	0					
ANR	2317496	Identifier	printf		2316795	0					
ANR	2317497	ArgumentList	""" %g"""		2316795	1					
ANR	2317498	Argument	""" %g"""		2316795	0					
ANR	2317499	PrimaryExpression	""" %g"""		2316795	0					
ANR	2317500	Argument	c [ i ]		2316795	1					
ANR	2317501	ArrayIndexing	c [ i ]		2316795	0					
ANR	2317502	Identifier	c		2316795	0					
ANR	2317503	Identifier	i		2316795	1					
ANR	2317504	ExpressionStatement	"printf ( ""\\n"" )"	185:3:3877:3889	2316795	13	True				
ANR	2317505	CallExpression	"printf ( ""\\n"" )"		2316795	0					
ANR	2317506	Callee	printf		2316795	0					
ANR	2317507	Identifier	printf		2316795	0					
ANR	2317508	ArgumentList	"""\\n"""		2316795	1					
ANR	2317509	Argument	"""\\n"""		2316795	0					
ANR	2317510	PrimaryExpression	"""\\n"""		2316795	0					
ANR	2317511	ReturnStatement	return 0 ;	187:3:3895:3903	2316795	14	True				
ANR	2317512	PrimaryExpression	0		2316795	0					
ANR	2317513	ReturnType	int		2316795	1					
ANR	2317514	Identifier	main		2316795	2					
ANR	2317515	ParameterList	"int argc , const char * * argv"		2316795	3					
ANR	2317516	Parameter	int argc	49:5:1004:1011	2316795	0	True				
ANR	2317517	ParameterType	int		2316795	0					
ANR	2317518	Identifier	argc		2316795	1					
ANR	2317519	Parameter	const char * * argv	49:15:1014:1030	2316795	1	True				
ANR	2317520	ParameterType	const char * *		2316795	0					
ANR	2317521	Identifier	argv		2316795	1					
ANR	2317522	CFGEntryNode	ENTRY		2316795		True				
ANR	2317523	CFGExitNode	EXIT		2316795		True				
ANR	2317524	Symbol	to_color		2316795						
ANR	2317525	Symbol	components		2316795						
ANR	2317526	Symbol	* components		2316795						
ANR	2317527	Symbol	linear_from_sRGB		2316795						
ANR	2317528	Symbol	* argv		2316795						
ANR	2317529	Symbol	argv		2316795						
ANR	2317530	Symbol	to_gray		2316795						
ANR	2317531	Symbol	YfromRGB		2316795						
ANR	2317532	Symbol	arg		2316795						
ANR	2317533	Symbol	alpha		2316795						
ANR	2317534	Symbol	* * argv		2316795						
ANR	2317535	Symbol	argc		2316795						
ANR	2317536	Symbol	strcmp		2316795						
ANR	2317537	Symbol	c		2316795						
ANR	2317538	Symbol	i		2316795						
ANR	2317539	Symbol	sRGB_from_linear		2316795						
ANR	2317540	Symbol	FE_TONEAREST		2316795						
ANR	2317541	Symbol	* argv ++		2316795						
ANR	2317542	Symbol	stderr		2316795						
ANR	2317543	Symbol	* c		2316795						
ANR	2317544	Symbol	prog		2316795						
ANR	2317545	Symbol	nearbyint		2316795						
ANR	2317546	Symbol	to_linear		2316795						
ANR	2317547	Symbol	component		2316795						
ANR	2317548	Symbol	* i		2316795						
ANR	2317549	Symbol	~1		2316795						
ANR	2317550	Symbol	channels		2316795						
ANR	2317551	Symbol	* channels		2316795						
