command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8964010	File	data/converged/CVE-2018-16863_ghostpdl/psi_zcharx.c								
ANR	8964011	Function	glyph_show_setup	33:0:963:1520							
ANR	8964012	FunctionDef	"glyph_show_setup (i_ctx_t * i_ctx_p , gs_glyph * pglyph)"		8964011	0					
ANR	8964013	CompoundStatement		35:0:1027:1520	8964011	0					
ANR	8964014	IdentifierDeclStatement	os_ptr op = osp ;	36:4:1033:1048	8964011	0	True				
ANR	8964015	IdentifierDecl	op = osp		8964011	0					
ANR	8964016	IdentifierDeclType	os_ptr		8964011	0					
ANR	8964017	Identifier	op		8964011	1					
ANR	8964018	AssignmentExpression	op = osp		8964011	2		=			
ANR	8964019	Identifier	osp		8964011	0					
ANR	8964020	Identifier	osp		8964011	1					
ANR	8964021	SwitchStatement	switch ( gs_currentfont ( igs ) -> FontType )		8964011	1					
ANR	8964022	Condition	gs_currentfont ( igs ) -> FontType	38:12:1063:1091	8964011	0	True				
ANR	8964023	PtrMemberAccess	gs_currentfont ( igs ) -> FontType		8964011	0					
ANR	8964024	CallExpression	gs_currentfont ( igs )		8964011	0					
ANR	8964025	Callee	gs_currentfont		8964011	0					
ANR	8964026	Identifier	gs_currentfont		8964011	0					
ANR	8964027	ArgumentList	igs		8964011	1					
ANR	8964028	Argument	igs		8964011	0					
ANR	8964029	Identifier	igs		8964011	0					
ANR	8964030	Identifier	FontType		8964011	1					
ANR	8964031	CompoundStatement		4:43:66:66	8964011	1					
ANR	8964032	Label	case ft_CID_encrypted :	39:8:1104:1125	8964011	0	True				
ANR	8964033	Identifier	ft_CID_encrypted		8964011	0					
ANR	8964034	Label	case ft_CID_user_defined :	40:8:1135:1159	8964011	1	True				
ANR	8964035	Identifier	ft_CID_user_defined		8964011	0					
ANR	8964036	Label	case ft_CID_TrueType :	41:8:1169:1189	8964011	2	True				
ANR	8964037	Identifier	ft_CID_TrueType		8964011	0					
ANR	8964038	Label	case ft_CID_bitmap :	42:8:1199:1217	8964011	3	True				
ANR	8964039	Identifier	ft_CID_bitmap		8964011	0					
ANR	8964040	ExpressionStatement	"check_int_leu ( * op , GS_MAX_GLYPH - GS_MIN_CID_GLYPH )"	43:12:1231:1282	8964011	4	True				
ANR	8964041	CallExpression	"check_int_leu ( * op , GS_MAX_GLYPH - GS_MIN_CID_GLYPH )"		8964011	0					
ANR	8964042	Callee	check_int_leu		8964011	0					
ANR	8964043	Identifier	check_int_leu		8964011	0					
ANR	8964044	ArgumentList	* op		8964011	1					
ANR	8964045	Argument	* op		8964011	0					
ANR	8964046	UnaryOperationExpression	* op		8964011	0					
ANR	8964047	UnaryOperator	*		8964011	0					
ANR	8964048	Identifier	op		8964011	1					
ANR	8964049	Argument	GS_MAX_GLYPH - GS_MIN_CID_GLYPH		8964011	1					
ANR	8964050	AdditiveExpression	GS_MAX_GLYPH - GS_MIN_CID_GLYPH		8964011	0		-			
ANR	8964051	Identifier	GS_MAX_GLYPH		8964011	0					
ANR	8964052	Identifier	GS_MIN_CID_GLYPH		8964011	1					
ANR	8964053	ExpressionStatement	* pglyph = ( gs_glyph ) op -> value . intval + GS_MIN_CID_GLYPH	44:12:1296:1352	8964011	5	True				
ANR	8964054	AssignmentExpression	* pglyph = ( gs_glyph ) op -> value . intval + GS_MIN_CID_GLYPH		8964011	0		=			
ANR	8964055	UnaryOperationExpression	* pglyph		8964011	0					
ANR	8964056	UnaryOperator	*		8964011	0					
ANR	8964057	Identifier	pglyph		8964011	1					
ANR	8964058	AdditiveExpression	( gs_glyph ) op -> value . intval + GS_MIN_CID_GLYPH		8964011	1		+			
ANR	8964059	CastExpression	( gs_glyph ) op -> value . intval		8964011	0					
ANR	8964060	CastTarget	gs_glyph		8964011	0					
ANR	8964061	MemberAccess	op -> value . intval		8964011	1					
ANR	8964062	PtrMemberAccess	op -> value		8964011	0					
ANR	8964063	Identifier	op		8964011	0					
ANR	8964064	Identifier	value		8964011	1					
ANR	8964065	Identifier	intval		8964011	1					
ANR	8964066	Identifier	GS_MIN_CID_GLYPH		8964011	1					
ANR	8964067	BreakStatement	break ;	45:12:1366:1371	8964011	6	True				
ANR	8964068	Label	default :	46:8:1381:1388	8964011	7	True				
ANR	8964069	Identifier	default		8964011	0					
ANR	8964070	ExpressionStatement	"check_type ( * op , t_name )"	47:12:1402:1425	8964011	8	True				
ANR	8964071	CallExpression	"check_type ( * op , t_name )"		8964011	0					
ANR	8964072	Callee	check_type		8964011	0					
ANR	8964073	Identifier	check_type		8964011	0					
ANR	8964074	ArgumentList	* op		8964011	1					
ANR	8964075	Argument	* op		8964011	0					
ANR	8964076	UnaryOperationExpression	* op		8964011	0					
ANR	8964077	UnaryOperator	*		8964011	0					
ANR	8964078	Identifier	op		8964011	1					
ANR	8964079	Argument	t_name		8964011	1					
ANR	8964080	Identifier	t_name		8964011	0					
ANR	8964081	ExpressionStatement	"* pglyph = name_index ( imemory , op )"	48:12:1439:1472	8964011	9	True				
ANR	8964082	AssignmentExpression	"* pglyph = name_index ( imemory , op )"		8964011	0		=			
ANR	8964083	UnaryOperationExpression	* pglyph		8964011	0					
ANR	8964084	UnaryOperator	*		8964011	0					
ANR	8964085	Identifier	pglyph		8964011	1					
ANR	8964086	CallExpression	"name_index ( imemory , op )"		8964011	1					
ANR	8964087	Callee	name_index		8964011	0					
ANR	8964088	Identifier	name_index		8964011	0					
ANR	8964089	ArgumentList	imemory		8964011	1					
ANR	8964090	Argument	imemory		8964011	0					
ANR	8964091	Identifier	imemory		8964011	0					
ANR	8964092	Argument	op		8964011	1					
ANR	8964093	Identifier	op		8964011	0					
ANR	8964094	ReturnStatement	return op_show_enum_setup ( i_ctx_p ) ;	50:4:1484:1518	8964011	2	True				
ANR	8964095	CallExpression	op_show_enum_setup ( i_ctx_p )		8964011	0					
ANR	8964096	Callee	op_show_enum_setup		8964011	0					
ANR	8964097	Identifier	op_show_enum_setup		8964011	0					
ANR	8964098	ArgumentList	i_ctx_p		8964011	1					
ANR	8964099	Argument	i_ctx_p		8964011	0					
ANR	8964100	Identifier	i_ctx_p		8964011	0					
ANR	8964101	ReturnType	static int		8964011	1					
ANR	8964102	Identifier	glyph_show_setup		8964011	2					
ANR	8964103	ParameterList	"i_ctx_t * i_ctx_p , gs_glyph * pglyph"		8964011	3					
ANR	8964104	Parameter	i_ctx_t * i_ctx_p	34:17:991:1006	8964011	0	True				
ANR	8964105	ParameterType	i_ctx_t *		8964011	0					
ANR	8964106	Identifier	i_ctx_p		8964011	1					
ANR	8964107	Parameter	gs_glyph * pglyph	34:35:1009:1024	8964011	1	True				
ANR	8964108	ParameterType	gs_glyph *		8964011	0					
ANR	8964109	Identifier	pglyph		8964011	1					
ANR	8964110	CFGEntryNode	ENTRY		8964011		True				
ANR	8964111	CFGExitNode	EXIT		8964011		True				
ANR	8964112	Symbol	pglyph		8964011						
ANR	8964113	Symbol	op		8964011						
ANR	8964114	Symbol	* op		8964011						
ANR	8964115	Symbol	GS_MAX_GLYPH		8964011						
ANR	8964116	Symbol	gs_currentfont ( igs ) -> FontType		8964011						
ANR	8964117	Symbol	* pglyph		8964011						
ANR	8964118	Symbol	osp		8964011						
ANR	8964119	Symbol	op_show_enum_setup		8964011						
ANR	8964120	Symbol	igs		8964011						
ANR	8964121	Symbol	* gs_currentfont		8964011						
ANR	8964122	Symbol	i_ctx_p		8964011						
ANR	8964123	Symbol	op -> value		8964011						
ANR	8964124	Symbol	t_name		8964011						
ANR	8964125	Symbol	gs_currentfont		8964011						
ANR	8964126	Symbol	name_index		8964011						
ANR	8964127	Symbol	imemory		8964011						
ANR	8964128	Symbol	op -> value . intval		8964011						
ANR	8964129	Symbol	GS_MIN_CID_GLYPH		8964011						
ANR	8964130	Function	zglyphshow	54:0:1552:2054							
ANR	8964131	FunctionDef	zglyphshow (i_ctx_t * i_ctx_p)		8964130	0					
ANR	8964132	CompoundStatement		56:0:1592:2054	8964130	0					
ANR	8964133	IdentifierDeclStatement	gs_glyph glyph ;	57:4:1598:1612	8964130	0	True				
ANR	8964134	IdentifierDecl	glyph		8964130	0					
ANR	8964135	IdentifierDeclType	gs_glyph		8964130	0					
ANR	8964136	Identifier	glyph		8964130	1					
ANR	8964137	IdentifierDeclStatement	gs_text_enum_t * penum ;	58:4:1618:1639	8964130	1	True				
ANR	8964138	IdentifierDecl	* penum		8964130	0					
ANR	8964139	IdentifierDeclType	gs_text_enum_t *		8964130	0					
ANR	8964140	Identifier	penum		8964130	1					
ANR	8964141	IdentifierDeclStatement	int code ;	59:4:1645:1653	8964130	2	True				
ANR	8964142	IdentifierDecl	code		8964130	0					
ANR	8964143	IdentifierDeclType	int		8964130	0					
ANR	8964144	Identifier	code		8964130	1					
ANR	8964145	IfStatement	"if ( ( code = glyph_show_setup ( i_ctx_p , & glyph ) ) != 0 || ( code = gs_glyphshow_begin ( igs , glyph , imemory_local , & penum ) ) < 0 )"		8964130	3					
ANR	8964146	Condition	"( code = glyph_show_setup ( i_ctx_p , & glyph ) ) != 0 || ( code = gs_glyphshow_begin ( igs , glyph , imemory_local , & penum ) ) < 0"	61:8:1664:1788	8964130	0	True				
ANR	8964147	OrExpression	"( code = glyph_show_setup ( i_ctx_p , & glyph ) ) != 0 || ( code = gs_glyphshow_begin ( igs , glyph , imemory_local , & penum ) ) < 0"		8964130	0		||			
ANR	8964148	EqualityExpression	"( code = glyph_show_setup ( i_ctx_p , & glyph ) ) != 0"		8964130	0		!=			
ANR	8964149	AssignmentExpression	"code = glyph_show_setup ( i_ctx_p , & glyph )"		8964130	0		=			
ANR	8964150	Identifier	code		8964130	0					
ANR	8964151	CallExpression	"glyph_show_setup ( i_ctx_p , & glyph )"		8964130	1					
ANR	8964152	Callee	glyph_show_setup		8964130	0					
ANR	8964153	Identifier	glyph_show_setup		8964130	0					
ANR	8964154	ArgumentList	i_ctx_p		8964130	1					
ANR	8964155	Argument	i_ctx_p		8964130	0					
ANR	8964156	Identifier	i_ctx_p		8964130	0					
ANR	8964157	Argument	& glyph		8964130	1					
ANR	8964158	UnaryOperationExpression	& glyph		8964130	0					
ANR	8964159	UnaryOperator	&		8964130	0					
ANR	8964160	Identifier	glyph		8964130	1					
ANR	8964161	PrimaryExpression	0		8964130	1					
ANR	8964162	RelationalExpression	"( code = gs_glyphshow_begin ( igs , glyph , imemory_local , & penum ) ) < 0"		8964130	1		<			
ANR	8964163	AssignmentExpression	"code = gs_glyphshow_begin ( igs , glyph , imemory_local , & penum )"		8964130	0		=			
ANR	8964164	Identifier	code		8964130	0					
ANR	8964165	CallExpression	"gs_glyphshow_begin ( igs , glyph , imemory_local , & penum )"		8964130	1					
ANR	8964166	Callee	gs_glyphshow_begin		8964130	0					
ANR	8964167	Identifier	gs_glyphshow_begin		8964130	0					
ANR	8964168	ArgumentList	igs		8964130	1					
ANR	8964169	Argument	igs		8964130	0					
ANR	8964170	Identifier	igs		8964130	0					
ANR	8964171	Argument	glyph		8964130	1					
ANR	8964172	Identifier	glyph		8964130	0					
ANR	8964173	Argument	imemory_local		8964130	2					
ANR	8964174	Identifier	imemory_local		8964130	0					
ANR	8964175	Argument	& penum		8964130	3					
ANR	8964176	UnaryOperationExpression	& penum		8964130	0					
ANR	8964177	UnaryOperator	&		8964130	0					
ANR	8964178	Identifier	penum		8964130	1					
ANR	8964179	PrimaryExpression	0		8964130	1					
ANR	8964180	ReturnStatement	return code ;	63:8:1799:1810	8964130	1	True				
ANR	8964181	Identifier	code		8964130	0					
ANR	8964182	ExpressionStatement	* ( op_proc_t * ) & penum -> enum_client_data = zglyphshow	64:4:1816:1867	8964130	4	True				
ANR	8964183	AssignmentExpression	* ( op_proc_t * ) & penum -> enum_client_data = zglyphshow		8964130	0		=			
ANR	8964184	UnaryOperationExpression	* ( op_proc_t * ) & penum -> enum_client_data		8964130	0					
ANR	8964185	UnaryOperator	*		8964130	0					
ANR	8964186	CastExpression	( op_proc_t * ) & penum -> enum_client_data		8964130	1					
ANR	8964187	CastTarget	op_proc_t *		8964130	0					
ANR	8964188	UnaryOperationExpression	& penum -> enum_client_data		8964130	1					
ANR	8964189	UnaryOperator	&		8964130	0					
ANR	8964190	PtrMemberAccess	penum -> enum_client_data		8964130	1					
ANR	8964191	Identifier	penum		8964130	0					
ANR	8964192	Identifier	enum_client_data		8964130	1					
ANR	8964193	Identifier	zglyphshow		8964130	1					
ANR	8964194	IfStatement	"if ( ( code = op_show_finish_setup ( i_ctx_p , penum , 1 , NULL ) ) < 0 )"		8964130	5					
ANR	8964195	Condition	"( code = op_show_finish_setup ( i_ctx_p , penum , 1 , NULL ) ) < 0"	65:8:1877:1934	8964130	0	True				
ANR	8964196	RelationalExpression	"( code = op_show_finish_setup ( i_ctx_p , penum , 1 , NULL ) ) < 0"		8964130	0		<			
ANR	8964197	AssignmentExpression	"code = op_show_finish_setup ( i_ctx_p , penum , 1 , NULL )"		8964130	0		=			
ANR	8964198	Identifier	code		8964130	0					
ANR	8964199	CallExpression	"op_show_finish_setup ( i_ctx_p , penum , 1 , NULL )"		8964130	1					
ANR	8964200	Callee	op_show_finish_setup		8964130	0					
ANR	8964201	Identifier	op_show_finish_setup		8964130	0					
ANR	8964202	ArgumentList	i_ctx_p		8964130	1					
ANR	8964203	Argument	i_ctx_p		8964130	0					
ANR	8964204	Identifier	i_ctx_p		8964130	0					
ANR	8964205	Argument	penum		8964130	1					
ANR	8964206	Identifier	penum		8964130	0					
ANR	8964207	Argument	1		8964130	2					
ANR	8964208	PrimaryExpression	1		8964130	0					
ANR	8964209	Argument	NULL		8964130	3					
ANR	8964210	Identifier	NULL		8964130	0					
ANR	8964211	PrimaryExpression	0		8964130	1					
ANR	8964212	CompoundStatement		10:68:344:344	8964130	1					
ANR	8964213	ExpressionStatement	"ifree_object ( penum , ""zglyphshow"" )"	66:8:1947:1980	8964130	0	True				
ANR	8964214	CallExpression	"ifree_object ( penum , ""zglyphshow"" )"		8964130	0					
ANR	8964215	Callee	ifree_object		8964130	0					
ANR	8964216	Identifier	ifree_object		8964130	0					
ANR	8964217	ArgumentList	penum		8964130	1					
ANR	8964218	Argument	penum		8964130	0					
ANR	8964219	Identifier	penum		8964130	0					
ANR	8964220	Argument	"""zglyphshow"""		8964130	1					
ANR	8964221	PrimaryExpression	"""zglyphshow"""		8964130	0					
ANR	8964222	ReturnStatement	return code ;	67:8:1990:2001	8964130	1	True				
ANR	8964223	Identifier	code		8964130	0					
ANR	8964224	ReturnStatement	"return op_show_continue_pop ( i_ctx_p , 1 ) ;"	69:4:2013:2052	8964130	6	True				
ANR	8964225	CallExpression	"op_show_continue_pop ( i_ctx_p , 1 )"		8964130	0					
ANR	8964226	Callee	op_show_continue_pop		8964130	0					
ANR	8964227	Identifier	op_show_continue_pop		8964130	0					
ANR	8964228	ArgumentList	i_ctx_p		8964130	1					
ANR	8964229	Argument	i_ctx_p		8964130	0					
ANR	8964230	Identifier	i_ctx_p		8964130	0					
ANR	8964231	Argument	1		8964130	1					
ANR	8964232	PrimaryExpression	1		8964130	0					
ANR	8964233	ReturnType	static int		8964130	1					
ANR	8964234	Identifier	zglyphshow		8964130	2					
ANR	8964235	ParameterList	i_ctx_t * i_ctx_p		8964130	3					
ANR	8964236	Parameter	i_ctx_t * i_ctx_p	55:11:1574:1589	8964130	0	True				
ANR	8964237	ParameterType	i_ctx_t *		8964130	0					
ANR	8964238	Identifier	i_ctx_p		8964130	1					
ANR	8964239	CFGEntryNode	ENTRY		8964130		True				
ANR	8964240	CFGExitNode	EXIT		8964130		True				
ANR	8964241	Symbol	* penum		8964130						
ANR	8964242	Symbol	& penum -> enum_client_data		8964130						
ANR	8964243	Symbol	op_show_continue_pop		8964130						
ANR	8964244	Symbol	code		8964130						
ANR	8964245	Symbol	NULL		8964130						
ANR	8964246	Symbol	penum		8964130						
ANR	8964247	Symbol	zglyphshow		8964130						
ANR	8964248	Symbol	glyph_show_setup		8964130						
ANR	8964249	Symbol	gs_glyphshow_begin		8964130						
ANR	8964250	Symbol	* ( op_proc_t * ) & penum -> enum_client_data		8964130						
ANR	8964251	Symbol	imemory_local		8964130						
ANR	8964252	Symbol	glyph		8964130						
ANR	8964253	Symbol	penum -> enum_client_data		8964130						
ANR	8964254	Symbol	& glyph		8964130						
ANR	8964255	Symbol	igs		8964130						
ANR	8964256	Symbol	i_ctx_p		8964130						
ANR	8964257	Symbol	& penum		8964130						
ANR	8964258	Symbol	op_show_finish_setup		8964130						
ANR	8964259	Function	zglyphwidth	73:0:2096:2552							
ANR	8964260	FunctionDef	zglyphwidth (i_ctx_t * i_ctx_p)		8964259	0					
ANR	8964261	CompoundStatement		75:0:2137:2552	8964259	0					
ANR	8964262	IdentifierDeclStatement	gs_glyph glyph ;	76:4:2143:2157	8964259	0	True				
ANR	8964263	IdentifierDecl	glyph		8964259	0					
ANR	8964264	IdentifierDeclType	gs_glyph		8964259	0					
ANR	8964265	Identifier	glyph		8964259	1					
ANR	8964266	IdentifierDeclStatement	gs_text_enum_t * penum ;	77:4:2163:2184	8964259	1	True				
ANR	8964267	IdentifierDecl	* penum		8964259	0					
ANR	8964268	IdentifierDeclType	gs_text_enum_t *		8964259	0					
ANR	8964269	Identifier	penum		8964259	1					
ANR	8964270	IdentifierDeclStatement	int code ;	78:4:2190:2198	8964259	2	True				
ANR	8964271	IdentifierDecl	code		8964259	0					
ANR	8964272	IdentifierDeclType	int		8964259	0					
ANR	8964273	Identifier	code		8964259	1					
ANR	8964274	IfStatement	"if ( ( code = glyph_show_setup ( i_ctx_p , & glyph ) ) != 0 || ( code = gs_glyphwidth_begin ( igs , glyph , imemory , & penum ) ) < 0 )"		8964259	3					
ANR	8964275	Condition	"( code = glyph_show_setup ( i_ctx_p , & glyph ) ) != 0 || ( code = gs_glyphwidth_begin ( igs , glyph , imemory , & penum ) ) < 0"	80:8:2209:2328	8964259	0	True				
ANR	8964276	OrExpression	"( code = glyph_show_setup ( i_ctx_p , & glyph ) ) != 0 || ( code = gs_glyphwidth_begin ( igs , glyph , imemory , & penum ) ) < 0"		8964259	0		||			
ANR	8964277	EqualityExpression	"( code = glyph_show_setup ( i_ctx_p , & glyph ) ) != 0"		8964259	0		!=			
ANR	8964278	AssignmentExpression	"code = glyph_show_setup ( i_ctx_p , & glyph )"		8964259	0		=			
ANR	8964279	Identifier	code		8964259	0					
ANR	8964280	CallExpression	"glyph_show_setup ( i_ctx_p , & glyph )"		8964259	1					
ANR	8964281	Callee	glyph_show_setup		8964259	0					
ANR	8964282	Identifier	glyph_show_setup		8964259	0					
ANR	8964283	ArgumentList	i_ctx_p		8964259	1					
ANR	8964284	Argument	i_ctx_p		8964259	0					
ANR	8964285	Identifier	i_ctx_p		8964259	0					
ANR	8964286	Argument	& glyph		8964259	1					
ANR	8964287	UnaryOperationExpression	& glyph		8964259	0					
ANR	8964288	UnaryOperator	&		8964259	0					
ANR	8964289	Identifier	glyph		8964259	1					
ANR	8964290	PrimaryExpression	0		8964259	1					
ANR	8964291	RelationalExpression	"( code = gs_glyphwidth_begin ( igs , glyph , imemory , & penum ) ) < 0"		8964259	1		<			
ANR	8964292	AssignmentExpression	"code = gs_glyphwidth_begin ( igs , glyph , imemory , & penum )"		8964259	0		=			
ANR	8964293	Identifier	code		8964259	0					
ANR	8964294	CallExpression	"gs_glyphwidth_begin ( igs , glyph , imemory , & penum )"		8964259	1					
ANR	8964295	Callee	gs_glyphwidth_begin		8964259	0					
ANR	8964296	Identifier	gs_glyphwidth_begin		8964259	0					
ANR	8964297	ArgumentList	igs		8964259	1					
ANR	8964298	Argument	igs		8964259	0					
ANR	8964299	Identifier	igs		8964259	0					
ANR	8964300	Argument	glyph		8964259	1					
ANR	8964301	Identifier	glyph		8964259	0					
ANR	8964302	Argument	imemory		8964259	2					
ANR	8964303	Identifier	imemory		8964259	0					
ANR	8964304	Argument	& penum		8964259	3					
ANR	8964305	UnaryOperationExpression	& penum		8964259	0					
ANR	8964306	UnaryOperator	&		8964259	0					
ANR	8964307	Identifier	penum		8964259	1					
ANR	8964308	PrimaryExpression	0		8964259	1					
ANR	8964309	ReturnStatement	return code ;	82:8:2339:2350	8964259	1	True				
ANR	8964310	Identifier	code		8964259	0					
ANR	8964311	IfStatement	"if ( ( code = op_show_finish_setup ( i_ctx_p , penum , 1 , finish_stringwidth ) ) < 0 )"		8964259	4					
ANR	8964312	Condition	"( code = op_show_finish_setup ( i_ctx_p , penum , 1 , finish_stringwidth ) ) < 0"	83:8:2360:2431	8964259	0	True				
ANR	8964313	RelationalExpression	"( code = op_show_finish_setup ( i_ctx_p , penum , 1 , finish_stringwidth ) ) < 0"		8964259	0		<			
ANR	8964314	AssignmentExpression	"code = op_show_finish_setup ( i_ctx_p , penum , 1 , finish_stringwidth )"		8964259	0		=			
ANR	8964315	Identifier	code		8964259	0					
ANR	8964316	CallExpression	"op_show_finish_setup ( i_ctx_p , penum , 1 , finish_stringwidth )"		8964259	1					
ANR	8964317	Callee	op_show_finish_setup		8964259	0					
ANR	8964318	Identifier	op_show_finish_setup		8964259	0					
ANR	8964319	ArgumentList	i_ctx_p		8964259	1					
ANR	8964320	Argument	i_ctx_p		8964259	0					
ANR	8964321	Identifier	i_ctx_p		8964259	0					
ANR	8964322	Argument	penum		8964259	1					
ANR	8964323	Identifier	penum		8964259	0					
ANR	8964324	Argument	1		8964259	2					
ANR	8964325	PrimaryExpression	1		8964259	0					
ANR	8964326	Argument	finish_stringwidth		8964259	3					
ANR	8964327	Identifier	finish_stringwidth		8964259	0					
ANR	8964328	PrimaryExpression	0		8964259	1					
ANR	8964329	CompoundStatement		9:82:296:296	8964259	1					
ANR	8964330	ExpressionStatement	"ifree_object ( penum , ""zglyphwidth"" )"	84:8:2444:2478	8964259	0	True				
ANR	8964331	CallExpression	"ifree_object ( penum , ""zglyphwidth"" )"		8964259	0					
ANR	8964332	Callee	ifree_object		8964259	0					
ANR	8964333	Identifier	ifree_object		8964259	0					
ANR	8964334	ArgumentList	penum		8964259	1					
ANR	8964335	Argument	penum		8964259	0					
ANR	8964336	Identifier	penum		8964259	0					
ANR	8964337	Argument	"""zglyphwidth"""		8964259	1					
ANR	8964338	PrimaryExpression	"""zglyphwidth"""		8964259	0					
ANR	8964339	ReturnStatement	return code ;	85:8:2488:2499	8964259	1	True				
ANR	8964340	Identifier	code		8964259	0					
ANR	8964341	ReturnStatement	"return op_show_continue_pop ( i_ctx_p , 1 ) ;"	87:4:2511:2550	8964259	5	True				
ANR	8964342	CallExpression	"op_show_continue_pop ( i_ctx_p , 1 )"		8964259	0					
ANR	8964343	Callee	op_show_continue_pop		8964259	0					
ANR	8964344	Identifier	op_show_continue_pop		8964259	0					
ANR	8964345	ArgumentList	i_ctx_p		8964259	1					
ANR	8964346	Argument	i_ctx_p		8964259	0					
ANR	8964347	Identifier	i_ctx_p		8964259	0					
ANR	8964348	Argument	1		8964259	1					
ANR	8964349	PrimaryExpression	1		8964259	0					
ANR	8964350	ReturnType	static int		8964259	1					
ANR	8964351	Identifier	zglyphwidth		8964259	2					
ANR	8964352	ParameterList	i_ctx_t * i_ctx_p		8964259	3					
ANR	8964353	Parameter	i_ctx_t * i_ctx_p	74:12:2119:2134	8964259	0	True				
ANR	8964354	ParameterType	i_ctx_t *		8964259	0					
ANR	8964355	Identifier	i_ctx_p		8964259	1					
ANR	8964356	CFGEntryNode	ENTRY		8964259		True				
ANR	8964357	CFGExitNode	EXIT		8964259		True				
ANR	8964358	Symbol	op_show_continue_pop		8964259						
ANR	8964359	Symbol	code		8964259						
ANR	8964360	Symbol	penum		8964259						
ANR	8964361	Symbol	gs_glyphwidth_begin		8964259						
ANR	8964362	Symbol	glyph_show_setup		8964259						
ANR	8964363	Symbol	finish_stringwidth		8964259						
ANR	8964364	Symbol	glyph		8964259						
ANR	8964365	Symbol	igs		8964259						
ANR	8964366	Symbol	& glyph		8964259						
ANR	8964367	Symbol	i_ctx_p		8964259						
ANR	8964368	Symbol	& penum		8964259						
ANR	8964369	Symbol	imemory		8964259						
ANR	8964370	Symbol	op_show_finish_setup		8964259						
ANR	8964371	Function	moveshow	93:0:2688:5196							
ANR	8964372	FunctionDef	"moveshow (i_ctx_t * i_ctx_p , bool have_x , bool have_y)"		8964371	0					
ANR	8964373	CompoundStatement		95:0:2752:5196	8964371	0					
ANR	8964374	IdentifierDeclStatement	os_ptr op = osp ;	96:4:2758:2773	8964371	0	True				
ANR	8964375	IdentifierDecl	op = osp		8964371	0					
ANR	8964376	IdentifierDeclType	os_ptr		8964371	0					
ANR	8964377	Identifier	op		8964371	1					
ANR	8964378	AssignmentExpression	op = osp		8964371	2		=			
ANR	8964379	Identifier	osp		8964371	0					
ANR	8964380	Identifier	osp		8964371	1					
ANR	8964381	IdentifierDeclStatement	gs_text_enum_t * penum = NULL ;	97:4:2779:2807	8964371	1	True				
ANR	8964382	IdentifierDecl	* penum = NULL		8964371	0					
ANR	8964383	IdentifierDeclType	gs_text_enum_t *		8964371	0					
ANR	8964384	Identifier	penum		8964371	1					
ANR	8964385	AssignmentExpression	* penum = NULL		8964371	2		=			
ANR	8964386	Identifier	NULL		8964371	0					
ANR	8964387	Identifier	NULL		8964371	1					
ANR	8964388	IdentifierDeclStatement	"int code = op_show_setup ( i_ctx_p , op - 1 ) ;"	98:4:2813:2854	8964371	2	True				
ANR	8964389	IdentifierDecl	"code = op_show_setup ( i_ctx_p , op - 1 )"		8964371	0					
ANR	8964390	IdentifierDeclType	int		8964371	0					
ANR	8964391	Identifier	code		8964371	1					
ANR	8964392	AssignmentExpression	"code = op_show_setup ( i_ctx_p , op - 1 )"		8964371	2		=			
ANR	8964393	Identifier	code		8964371	0					
ANR	8964394	CallExpression	"op_show_setup ( i_ctx_p , op - 1 )"		8964371	1					
ANR	8964395	Callee	op_show_setup		8964371	0					
ANR	8964396	Identifier	op_show_setup		8964371	0					
ANR	8964397	ArgumentList	i_ctx_p		8964371	1					
ANR	8964398	Argument	i_ctx_p		8964371	0					
ANR	8964399	Identifier	i_ctx_p		8964371	0					
ANR	8964400	Argument	op - 1		8964371	1					
ANR	8964401	AdditiveExpression	op - 1		8964371	0		-			
ANR	8964402	Identifier	op		8964371	0					
ANR	8964403	PrimaryExpression	1		8964371	1					
ANR	8964404	IdentifierDeclStatement	int format ;	99:4:2860:2870	8964371	3	True				
ANR	8964405	IdentifierDecl	format		8964371	0					
ANR	8964406	IdentifierDeclType	int		8964371	0					
ANR	8964407	Identifier	format		8964371	1					
ANR	8964408	IdentifierDeclStatement	"uint i , size , widths_needed ;"	100:4:2876:2903	8964371	4	True				
ANR	8964409	IdentifierDecl	i		8964371	0					
ANR	8964410	IdentifierDeclType	uint		8964371	0					
ANR	8964411	Identifier	i		8964371	1					
ANR	8964412	IdentifierDecl	size		8964371	1					
ANR	8964413	IdentifierDeclType	uint		8964371	0					
ANR	8964414	Identifier	size		8964371	1					
ANR	8964415	IdentifierDecl	widths_needed		8964371	2					
ANR	8964416	IdentifierDeclType	uint		8964371	0					
ANR	8964417	Identifier	widths_needed		8964371	1					
ANR	8964418	IdentifierDeclStatement	float * values ;	101:4:2909:2922	8964371	5	True				
ANR	8964419	IdentifierDecl	* values		8964371	0					
ANR	8964420	IdentifierDeclType	float *		8964371	0					
ANR	8964421	Identifier	values		8964371	1					
ANR	8964422	IdentifierDeclStatement	bool CPSI_mode = gs_currentcpsimode ( imemory ) ;	102:4:2928:2972	8964371	6	True				
ANR	8964423	IdentifierDecl	CPSI_mode = gs_currentcpsimode ( imemory )		8964371	0					
ANR	8964424	IdentifierDeclType	bool		8964371	0					
ANR	8964425	Identifier	CPSI_mode		8964371	1					
ANR	8964426	AssignmentExpression	CPSI_mode = gs_currentcpsimode ( imemory )		8964371	2		=			
ANR	8964427	Identifier	CPSI_mode		8964371	0					
ANR	8964428	CallExpression	gs_currentcpsimode ( imemory )		8964371	1					
ANR	8964429	Callee	gs_currentcpsimode		8964371	0					
ANR	8964430	Identifier	gs_currentcpsimode		8964371	0					
ANR	8964431	ArgumentList	imemory		8964371	1					
ANR	8964432	Argument	imemory		8964371	0					
ANR	8964433	Identifier	imemory		8964371	0					
ANR	8964434	IfStatement	if ( code != 0 )		8964371	7					
ANR	8964435	Condition	code != 0	104:8:2983:2991	8964371	0	True				
ANR	8964436	EqualityExpression	code != 0		8964371	0		!=			
ANR	8964437	Identifier	code		8964371	0					
ANR	8964438	PrimaryExpression	0		8964371	1					
ANR	8964439	ReturnStatement	return code ;	105:8:3002:3013	8964371	1	True				
ANR	8964440	Identifier	code		8964371	0					
ANR	8964441	ExpressionStatement	format = num_array_format ( op )	106:4:3019:3048	8964371	8	True				
ANR	8964442	AssignmentExpression	format = num_array_format ( op )		8964371	0		=			
ANR	8964443	Identifier	format		8964371	0					
ANR	8964444	CallExpression	num_array_format ( op )		8964371	1					
ANR	8964445	Callee	num_array_format		8964371	0					
ANR	8964446	Identifier	num_array_format		8964371	0					
ANR	8964447	ArgumentList	op		8964371	1					
ANR	8964448	Argument	op		8964371	0					
ANR	8964449	Identifier	op		8964371	0					
ANR	8964450	IfStatement	if ( format < 0 )		8964371	9					
ANR	8964451	Condition	format < 0	107:8:3058:3067	8964371	0	True				
ANR	8964452	RelationalExpression	format < 0		8964371	0		<			
ANR	8964453	Identifier	format		8964371	0					
ANR	8964454	PrimaryExpression	0		8964371	1					
ANR	8964455	ReturnStatement	return format ;	108:8:3078:3091	8964371	1	True				
ANR	8964456	Identifier	format		8964371	0					
ANR	8964457	ExpressionStatement	"size = num_array_size ( op , format )"	109:4:3097:3130	8964371	10	True				
ANR	8964458	AssignmentExpression	"size = num_array_size ( op , format )"		8964371	0		=			
ANR	8964459	Identifier	size		8964371	0					
ANR	8964460	CallExpression	"num_array_size ( op , format )"		8964371	1					
ANR	8964461	Callee	num_array_size		8964371	0					
ANR	8964462	Identifier	num_array_size		8964371	0					
ANR	8964463	ArgumentList	op		8964371	1					
ANR	8964464	Argument	op		8964371	0					
ANR	8964465	Identifier	op		8964371	0					
ANR	8964466	Argument	format		8964371	1					
ANR	8964467	Identifier	format		8964371	0					
ANR	8964468	ExpressionStatement	"values = ( float * ) ialloc_byte_array ( size , sizeof ( float ) , ""moveshow"" )"	110:4:3136:3204	8964371	11	True				
ANR	8964469	AssignmentExpression	"values = ( float * ) ialloc_byte_array ( size , sizeof ( float ) , ""moveshow"" )"		8964371	0		=			
ANR	8964470	Identifier	values		8964371	0					
ANR	8964471	CastExpression	"( float * ) ialloc_byte_array ( size , sizeof ( float ) , ""moveshow"" )"		8964371	1					
ANR	8964472	CastTarget	float *		8964371	0					
ANR	8964473	CallExpression	"ialloc_byte_array ( size , sizeof ( float ) , ""moveshow"" )"		8964371	1					
ANR	8964474	Callee	ialloc_byte_array		8964371	0					
ANR	8964475	Identifier	ialloc_byte_array		8964371	0					
ANR	8964476	ArgumentList	size		8964371	1					
ANR	8964477	Argument	size		8964371	0					
ANR	8964478	Identifier	size		8964371	0					
ANR	8964479	Argument	sizeof ( float )		8964371	1					
ANR	8964480	SizeofExpression	sizeof ( float )		8964371	0					
ANR	8964481	Sizeof	sizeof		8964371	0					
ANR	8964482	SizeofOperand	float		8964371	1					
ANR	8964483	Argument	"""moveshow"""		8964371	2					
ANR	8964484	PrimaryExpression	"""moveshow"""		8964371	0					
ANR	8964485	IfStatement	if ( values == 0 )		8964371	12					
ANR	8964486	Condition	values == 0	111:8:3214:3224	8964371	0	True				
ANR	8964487	EqualityExpression	values == 0		8964371	0		==			
ANR	8964488	Identifier	values		8964371	0					
ANR	8964489	PrimaryExpression	0		8964371	1					
ANR	8964490	ExpressionStatement	return_error ( gs_error_VMerror )	112:8:3235:3265	8964371	1	True				
ANR	8964491	CallExpression	return_error ( gs_error_VMerror )		8964371	0					
ANR	8964492	Callee	return_error		8964371	0					
ANR	8964493	Identifier	return_error		8964371	0					
ANR	8964494	ArgumentList	gs_error_VMerror		8964371	1					
ANR	8964495	Argument	gs_error_VMerror		8964371	0					
ANR	8964496	Identifier	gs_error_VMerror		8964371	0					
ANR	8964497	IfStatement	if ( CPSI_mode )		8964371	13					
ANR	8964498	Condition	CPSI_mode	113:8:3275:3283	8964371	0	True				
ANR	8964499	Identifier	CPSI_mode		8964371	0					
ANR	8964500	ExpressionStatement	"memset ( values , 0 , size * sizeof ( values [ 0 ] ) )"	114:8:3294:3337	8964371	1	True				
ANR	8964501	CallExpression	"memset ( values , 0 , size * sizeof ( values [ 0 ] ) )"		8964371	0					
ANR	8964502	Callee	memset		8964371	0					
ANR	8964503	Identifier	memset		8964371	0					
ANR	8964504	ArgumentList	values		8964371	1					
ANR	8964505	Argument	values		8964371	0					
ANR	8964506	Identifier	values		8964371	0					
ANR	8964507	Argument	0		8964371	1					
ANR	8964508	PrimaryExpression	0		8964371	0					
ANR	8964509	Argument	size * sizeof ( values [ 0 ] )		8964371	2					
ANR	8964510	MultiplicativeExpression	size * sizeof ( values [ 0 ] )		8964371	0		*			
ANR	8964511	Identifier	size		8964371	0					
ANR	8964512	SizeofExpression	sizeof ( values [ 0 ] )		8964371	1					
ANR	8964513	Sizeof	sizeof		8964371	0					
ANR	8964514	ArrayIndexing	values [ 0 ]		8964371	1					
ANR	8964515	Identifier	values		8964371	0					
ANR	8964516	PrimaryExpression	0		8964371	1					
ANR	8964517	IfStatement	"if ( ( code = gs_xyshow_begin ( igs , op [ - 1 ] . value . bytes , r_size ( op - 1 ) , ( have_x ? values : ( float * ) 0 ) , ( have_y ? values : ( float * ) 0 ) , size , imemory_local , & penum ) ) < 0 )"		8964371	14					
ANR	8964518	Condition	"( code = gs_xyshow_begin ( igs , op [ - 1 ] . value . bytes , r_size ( op - 1 ) , ( have_x ? values : ( float * ) 0 ) , ( have_y ? values : ( float * ) 0 ) , size , imemory_local , & penum ) ) < 0"	115:8:3361:3618	8964371	0	True				
ANR	8964519	RelationalExpression	"( code = gs_xyshow_begin ( igs , op [ - 1 ] . value . bytes , r_size ( op - 1 ) , ( have_x ? values : ( float * ) 0 ) , ( have_y ? values : ( float * ) 0 ) , size , imemory_local , & penum ) ) < 0"		8964371	0		<			
ANR	8964520	AssignmentExpression	"code = gs_xyshow_begin ( igs , op [ - 1 ] . value . bytes , r_size ( op - 1 ) , ( have_x ? values : ( float * ) 0 ) , ( have_y ? values : ( float * ) 0 ) , size , imemory_local , & penum )"		8964371	0		=			
ANR	8964521	Identifier	code		8964371	0					
ANR	8964522	CallExpression	"gs_xyshow_begin ( igs , op [ - 1 ] . value . bytes , r_size ( op - 1 ) , ( have_x ? values : ( float * ) 0 ) , ( have_y ? values : ( float * ) 0 ) , size , imemory_local , & penum )"		8964371	1					
ANR	8964523	Callee	gs_xyshow_begin		8964371	0					
ANR	8964524	Identifier	gs_xyshow_begin		8964371	0					
ANR	8964525	ArgumentList	igs		8964371	1					
ANR	8964526	Argument	igs		8964371	0					
ANR	8964527	Identifier	igs		8964371	0					
ANR	8964528	Argument	op [ - 1 ] . value . bytes		8964371	1					
ANR	8964529	MemberAccess	op [ - 1 ] . value . bytes		8964371	0					
ANR	8964530	MemberAccess	op [ - 1 ] . value		8964371	0					
ANR	8964531	ArrayIndexing	op [ - 1 ]		8964371	0					
ANR	8964532	Identifier	op		8964371	0					
ANR	8964533	UnaryOperationExpression	- 1		8964371	1					
ANR	8964534	UnaryOperator	-		8964371	0					
ANR	8964535	PrimaryExpression	1		8964371	1					
ANR	8964536	Identifier	value		8964371	1					
ANR	8964537	Identifier	bytes		8964371	1					
ANR	8964538	Argument	r_size ( op - 1 )		8964371	2					
ANR	8964539	CallExpression	r_size ( op - 1 )		8964371	0					
ANR	8964540	Callee	r_size		8964371	0					
ANR	8964541	Identifier	r_size		8964371	0					
ANR	8964542	ArgumentList	op - 1		8964371	1					
ANR	8964543	Argument	op - 1		8964371	0					
ANR	8964544	AdditiveExpression	op - 1		8964371	0		-			
ANR	8964545	Identifier	op		8964371	0					
ANR	8964546	PrimaryExpression	1		8964371	1					
ANR	8964547	Argument	have_x ? values : ( float * ) 0		8964371	3					
ANR	8964548	ConditionalExpression	have_x ? values : ( float * ) 0		8964371	0					
ANR	8964549	Condition	have_x		8964371	0					
ANR	8964550	Identifier	have_x		8964371	0					
ANR	8964551	Identifier	values		8964371	1					
ANR	8964552	CastExpression	( float * ) 0		8964371	2					
ANR	8964553	CastTarget	float *		8964371	0					
ANR	8964554	PrimaryExpression	0		8964371	1					
ANR	8964555	Argument	have_y ? values : ( float * ) 0		8964371	4					
ANR	8964556	ConditionalExpression	have_y ? values : ( float * ) 0		8964371	0					
ANR	8964557	Condition	have_y		8964371	0					
ANR	8964558	Identifier	have_y		8964371	0					
ANR	8964559	Identifier	values		8964371	1					
ANR	8964560	CastExpression	( float * ) 0		8964371	2					
ANR	8964561	CastTarget	float *		8964371	0					
ANR	8964562	PrimaryExpression	0		8964371	1					
ANR	8964563	Argument	size		8964371	5					
ANR	8964564	Identifier	size		8964371	0					
ANR	8964565	Argument	imemory_local		8964371	6					
ANR	8964566	Identifier	imemory_local		8964371	0					
ANR	8964567	Argument	& penum		8964371	7					
ANR	8964568	UnaryOperationExpression	& penum		8964371	0					
ANR	8964569	UnaryOperator	&		8964371	0					
ANR	8964570	Identifier	penum		8964371	1					
ANR	8964571	PrimaryExpression	0		8964371	1					
ANR	8964572	CompoundStatement		24:67:868:868	8964371	1					
ANR	8964573	ExpressionStatement	"ifree_object ( values , ""moveshow"" )"	119:8:3631:3663	8964371	0	True				
ANR	8964574	CallExpression	"ifree_object ( values , ""moveshow"" )"		8964371	0					
ANR	8964575	Callee	ifree_object		8964371	0					
ANR	8964576	Identifier	ifree_object		8964371	0					
ANR	8964577	ArgumentList	values		8964371	1					
ANR	8964578	Argument	values		8964371	0					
ANR	8964579	Identifier	values		8964371	0					
ANR	8964580	Argument	"""moveshow"""		8964371	1					
ANR	8964581	PrimaryExpression	"""moveshow"""		8964371	0					
ANR	8964582	IfStatement	if ( penum )		8964371	1					
ANR	8964583	Condition	penum	120:12:3677:3681	8964371	0	True				
ANR	8964584	Identifier	penum		8964371	0					
ANR	8964585	ExpressionStatement	penum -> text . x_widths = penum -> text . y_widths = NULL	121:12:3767:3817	8964371	1	True				
ANR	8964586	AssignmentExpression	penum -> text . x_widths = penum -> text . y_widths = NULL		8964371	0		=			
ANR	8964587	MemberAccess	penum -> text . x_widths		8964371	0					
ANR	8964588	PtrMemberAccess	penum -> text		8964371	0					
ANR	8964589	Identifier	penum		8964371	0					
ANR	8964590	Identifier	text		8964371	1					
ANR	8964591	Identifier	x_widths		8964371	1					
ANR	8964592	AssignmentExpression	penum -> text . y_widths = NULL		8964371	1		=			
ANR	8964593	MemberAccess	penum -> text . y_widths		8964371	0					
ANR	8964594	PtrMemberAccess	penum -> text		8964371	0					
ANR	8964595	Identifier	penum		8964371	0					
ANR	8964596	Identifier	text		8964371	1					
ANR	8964597	Identifier	y_widths		8964371	1					
ANR	8964598	Identifier	NULL		8964371	1					
ANR	8964599	ReturnStatement	return code ;	122:8:3827:3838	8964371	2	True				
ANR	8964600	Identifier	code		8964371	0					
ANR	8964601	IfStatement	if ( CPSI_mode )		8964371	15					
ANR	8964602	Condition	CPSI_mode	124:8:3854:3862	8964371	0	True				
ANR	8964603	Identifier	CPSI_mode		8964371	0					
ANR	8964604	CompoundStatement		30:19:1112:1112	8964371	1					
ANR	8964605	ExpressionStatement	"code = gs_text_count_chars ( igs , gs_get_text_params ( penum ) , imemory )"	129:8:4136:4203	8964371	0	True				
ANR	8964606	AssignmentExpression	"code = gs_text_count_chars ( igs , gs_get_text_params ( penum ) , imemory )"		8964371	0		=			
ANR	8964607	Identifier	code		8964371	0					
ANR	8964608	CallExpression	"gs_text_count_chars ( igs , gs_get_text_params ( penum ) , imemory )"		8964371	1					
ANR	8964609	Callee	gs_text_count_chars		8964371	0					
ANR	8964610	Identifier	gs_text_count_chars		8964371	0					
ANR	8964611	ArgumentList	igs		8964371	1					
ANR	8964612	Argument	igs		8964371	0					
ANR	8964613	Identifier	igs		8964371	0					
ANR	8964614	Argument	gs_get_text_params ( penum )		8964371	1					
ANR	8964615	CallExpression	gs_get_text_params ( penum )		8964371	0					
ANR	8964616	Callee	gs_get_text_params		8964371	0					
ANR	8964617	Identifier	gs_get_text_params		8964371	0					
ANR	8964618	ArgumentList	penum		8964371	1					
ANR	8964619	Argument	penum		8964371	0					
ANR	8964620	Identifier	penum		8964371	0					
ANR	8964621	Argument	imemory		8964371	2					
ANR	8964622	Identifier	imemory		8964371	0					
ANR	8964623	IfStatement	if ( code < 0 )		8964371	1					
ANR	8964624	Condition	code < 0	130:12:4217:4224	8964371	0	True				
ANR	8964625	RelationalExpression	code < 0		8964371	0		<			
ANR	8964626	Identifier	code		8964371	0					
ANR	8964627	PrimaryExpression	0		8964371	1					
ANR	8964628	ReturnStatement	return code ;	131:12:4239:4250	8964371	1	True				
ANR	8964629	Identifier	code		8964371	0					
ANR	8964630	ExpressionStatement	widths_needed = code	132:8:4260:4280	8964371	2	True				
ANR	8964631	AssignmentExpression	widths_needed = code		8964371	0		=			
ANR	8964632	Identifier	widths_needed		8964371	0					
ANR	8964633	Identifier	code		8964371	1					
ANR	8964634	IfStatement	if ( have_x && have_y )		8964371	3					
ANR	8964635	Condition	have_x && have_y	133:12:4294:4309	8964371	0	True				
ANR	8964636	AndExpression	have_x && have_y		8964371	0		&&			
ANR	8964637	Identifier	have_x		8964371	0					
ANR	8964638	Identifier	have_y		8964371	1					
ANR	8964639	ExpressionStatement	widths_needed <<= 1	134:12:4324:4343	8964371	1	True				
ANR	8964640	AssignmentExpression	widths_needed <<= 1		8964371	0		<<=			
ANR	8964641	Identifier	widths_needed		8964371	0					
ANR	8964642	PrimaryExpression	1		8964371	1					
ANR	8964643	ElseStatement	else		8964371	0					
ANR	8964644	ExpressionStatement	widths_needed = size	136:8:4364:4384	8964371	0	True				
ANR	8964645	AssignmentExpression	widths_needed = size		8964371	0		=			
ANR	8964646	Identifier	widths_needed		8964371	0					
ANR	8964647	Identifier	size		8964371	1					
ANR	8964648	ForStatement	for ( i = 0 ; i < widths_needed ; ++ i )		8964371	16					
ANR	8964649	ForInit	i = 0 ;	137:9:4395:4400	8964371	0	True				
ANR	8964650	AssignmentExpression	i = 0		8964371	0		=			
ANR	8964651	Identifier	i		8964371	0					
ANR	8964652	PrimaryExpression	0		8964371	1					
ANR	8964653	Condition	i < widths_needed	137:16:4402:4418	8964371	1	True				
ANR	8964654	RelationalExpression	i < widths_needed		8964371	0		<			
ANR	8964655	Identifier	i		8964371	0					
ANR	8964656	Identifier	widths_needed		8964371	1					
ANR	8964657	UnaryExpression	++ i	137:35:4421:4423	8964371	2	True				
ANR	8964658	IncDec	++		8964371	0					
ANR	8964659	Identifier	i		8964371	1					
ANR	8964660	CompoundStatement		44:8:1683:1692	8964371	3					
ANR	8964661	IdentifierDeclStatement	ref value ;	138:8:4436:4445	8964371	0	True				
ANR	8964662	IdentifierDecl	value		8964371	0					
ANR	8964663	IdentifierDeclType	ref		8964371	0					
ANR	8964664	Identifier	value		8964371	1					
ANR	8964665	SwitchStatement	"switch ( code = num_array_get ( imemory , op , format , i , & value ) )"		8964371	1					
ANR	8964666	Condition	"code = num_array_get ( imemory , op , format , i , & value )"	140:16:4464:4515	8964371	0	True				
ANR	8964667	AssignmentExpression	"code = num_array_get ( imemory , op , format , i , & value )"		8964371	0		=			
ANR	8964668	Identifier	code		8964371	0					
ANR	8964669	CallExpression	"num_array_get ( imemory , op , format , i , & value )"		8964371	1					
ANR	8964670	Callee	num_array_get		8964371	0					
ANR	8964671	Identifier	num_array_get		8964371	0					
ANR	8964672	ArgumentList	imemory		8964371	1					
ANR	8964673	Argument	imemory		8964371	0					
ANR	8964674	Identifier	imemory		8964371	0					
ANR	8964675	Argument	op		8964371	1					
ANR	8964676	Identifier	op		8964371	0					
ANR	8964677	Argument	format		8964371	2					
ANR	8964678	Identifier	format		8964371	0					
ANR	8964679	Argument	i		8964371	3					
ANR	8964680	Identifier	i		8964371	0					
ANR	8964681	Argument	& value		8964371	4					
ANR	8964682	UnaryOperationExpression	& value		8964371	0					
ANR	8964683	UnaryOperator	&		8964371	0					
ANR	8964684	Identifier	value		8964371	1					
ANR	8964685	CompoundStatement		46:70:1765:1765	8964371	1					
ANR	8964686	Label	case t_integer :	141:8:4528:4542	8964371	0	True				
ANR	8964687	Identifier	t_integer		8964371	0					
ANR	8964688	ExpressionStatement	values [ i ] = ( float ) value . value . intval	142:12:4556:4593	8964371	1	True				
ANR	8964689	AssignmentExpression	values [ i ] = ( float ) value . value . intval		8964371	0		=			
ANR	8964690	ArrayIndexing	values [ i ]		8964371	0					
ANR	8964691	Identifier	values		8964371	0					
ANR	8964692	Identifier	i		8964371	1					
ANR	8964693	CastExpression	( float ) value . value . intval		8964371	1					
ANR	8964694	CastTarget	float		8964371	0					
ANR	8964695	MemberAccess	value . value . intval		8964371	1					
ANR	8964696	MemberAccess	value . value		8964371	0					
ANR	8964697	Identifier	value		8964371	0					
ANR	8964698	Identifier	value		8964371	1					
ANR	8964699	Identifier	intval		8964371	1					
ANR	8964700	BreakStatement	break ;	142:51:4595:4600	8964371	2	True				
ANR	8964701	Label	case t_real :	143:8:4610:4621	8964371	3	True				
ANR	8964702	Identifier	t_real		8964371	0					
ANR	8964703	ExpressionStatement	values [ i ] = value . value . realval	144:12:4635:4666	8964371	4	True				
ANR	8964704	AssignmentExpression	values [ i ] = value . value . realval		8964371	0		=			
ANR	8964705	ArrayIndexing	values [ i ]		8964371	0					
ANR	8964706	Identifier	values		8964371	0					
ANR	8964707	Identifier	i		8964371	1					
ANR	8964708	MemberAccess	value . value . realval		8964371	1					
ANR	8964709	MemberAccess	value . value		8964371	0					
ANR	8964710	Identifier	value		8964371	0					
ANR	8964711	Identifier	value		8964371	1					
ANR	8964712	Identifier	realval		8964371	1					
ANR	8964713	BreakStatement	break ;	144:45:4668:4673	8964371	5	True				
ANR	8964714	Label	case t_null :	145:8:4683:4694	8964371	6	True				
ANR	8964715	Identifier	t_null		8964371	0					
ANR	8964716	ExpressionStatement	code = gs_note_error ( gs_error_rangecheck )	146:12:4708:4749	8964371	7	True				
ANR	8964717	AssignmentExpression	code = gs_note_error ( gs_error_rangecheck )		8964371	0		=			
ANR	8964718	Identifier	code		8964371	0					
ANR	8964719	CallExpression	gs_note_error ( gs_error_rangecheck )		8964371	1					
ANR	8964720	Callee	gs_note_error		8964371	0					
ANR	8964721	Identifier	gs_note_error		8964371	0					
ANR	8964722	ArgumentList	gs_error_rangecheck		8964371	1					
ANR	8964723	Argument	gs_error_rangecheck		8964371	0					
ANR	8964724	Identifier	gs_error_rangecheck		8964371	0					
ANR	8964725	Label	default :	148:8:4791:4798	8964371	8	True				
ANR	8964726	Identifier	default		8964371	0					
ANR	8964727	ExpressionStatement	"ifree_object ( values , ""moveshow"" )"	149:12:4812:4844	8964371	9	True				
ANR	8964728	CallExpression	"ifree_object ( values , ""moveshow"" )"		8964371	0					
ANR	8964729	Callee	ifree_object		8964371	0					
ANR	8964730	Identifier	ifree_object		8964371	0					
ANR	8964731	ArgumentList	values		8964371	1					
ANR	8964732	Argument	values		8964371	0					
ANR	8964733	Identifier	values		8964371	0					
ANR	8964734	Argument	"""moveshow"""		8964371	1					
ANR	8964735	PrimaryExpression	"""moveshow"""		8964371	0					
ANR	8964736	ExpressionStatement	penum -> text . x_widths = penum -> text . y_widths = NULL	150:8:4854:4904	8964371	10	True				
ANR	8964737	AssignmentExpression	penum -> text . x_widths = penum -> text . y_widths = NULL		8964371	0		=			
ANR	8964738	MemberAccess	penum -> text . x_widths		8964371	0					
ANR	8964739	PtrMemberAccess	penum -> text		8964371	0					
ANR	8964740	Identifier	penum		8964371	0					
ANR	8964741	Identifier	text		8964371	1					
ANR	8964742	Identifier	x_widths		8964371	1					
ANR	8964743	AssignmentExpression	penum -> text . y_widths = NULL		8964371	1		=			
ANR	8964744	MemberAccess	penum -> text . y_widths		8964371	0					
ANR	8964745	PtrMemberAccess	penum -> text		8964371	0					
ANR	8964746	Identifier	penum		8964371	0					
ANR	8964747	Identifier	text		8964371	1					
ANR	8964748	Identifier	y_widths		8964371	1					
ANR	8964749	Identifier	NULL		8964371	1					
ANR	8964750	ReturnStatement	return code ;	151:12:4918:4929	8964371	11	True				
ANR	8964751	Identifier	code		8964371	0					
ANR	8964752	IfStatement	"if ( ( code = op_show_finish_setup ( i_ctx_p , penum , 2 , NULL ) ) < 0 )"		8964371	17					
ANR	8964753	Condition	"( code = op_show_finish_setup ( i_ctx_p , penum , 2 , NULL ) ) < 0"	154:8:4955:5012	8964371	0	True				
ANR	8964754	RelationalExpression	"( code = op_show_finish_setup ( i_ctx_p , penum , 2 , NULL ) ) < 0"		8964371	0		<			
ANR	8964755	AssignmentExpression	"code = op_show_finish_setup ( i_ctx_p , penum , 2 , NULL )"		8964371	0		=			
ANR	8964756	Identifier	code		8964371	0					
ANR	8964757	CallExpression	"op_show_finish_setup ( i_ctx_p , penum , 2 , NULL )"		8964371	1					
ANR	8964758	Callee	op_show_finish_setup		8964371	0					
ANR	8964759	Identifier	op_show_finish_setup		8964371	0					
ANR	8964760	ArgumentList	i_ctx_p		8964371	1					
ANR	8964761	Argument	i_ctx_p		8964371	0					
ANR	8964762	Identifier	i_ctx_p		8964371	0					
ANR	8964763	Argument	penum		8964371	1					
ANR	8964764	Identifier	penum		8964371	0					
ANR	8964765	Argument	2		8964371	2					
ANR	8964766	PrimaryExpression	2		8964371	0					
ANR	8964767	Argument	NULL		8964371	3					
ANR	8964768	Identifier	NULL		8964371	0					
ANR	8964769	PrimaryExpression	0		8964371	1					
ANR	8964770	CompoundStatement		60:68:2262:2262	8964371	1					
ANR	8964771	ExpressionStatement	"ifree_object ( values , ""moveshow"" )"	155:8:5025:5057	8964371	0	True				
ANR	8964772	CallExpression	"ifree_object ( values , ""moveshow"" )"		8964371	0					
ANR	8964773	Callee	ifree_object		8964371	0					
ANR	8964774	Identifier	ifree_object		8964371	0					
ANR	8964775	ArgumentList	values		8964371	1					
ANR	8964776	Argument	values		8964371	0					
ANR	8964777	Identifier	values		8964371	0					
ANR	8964778	Argument	"""moveshow"""		8964371	1					
ANR	8964779	PrimaryExpression	"""moveshow"""		8964371	0					
ANR	8964780	ExpressionStatement	penum -> text . x_widths = penum -> text . y_widths = NULL	156:8:5067:5117	8964371	1	True				
ANR	8964781	AssignmentExpression	penum -> text . x_widths = penum -> text . y_widths = NULL		8964371	0		=			
ANR	8964782	MemberAccess	penum -> text . x_widths		8964371	0					
ANR	8964783	PtrMemberAccess	penum -> text		8964371	0					
ANR	8964784	Identifier	penum		8964371	0					
ANR	8964785	Identifier	text		8964371	1					
ANR	8964786	Identifier	x_widths		8964371	1					
ANR	8964787	AssignmentExpression	penum -> text . y_widths = NULL		8964371	1		=			
ANR	8964788	MemberAccess	penum -> text . y_widths		8964371	0					
ANR	8964789	PtrMemberAccess	penum -> text		8964371	0					
ANR	8964790	Identifier	penum		8964371	0					
ANR	8964791	Identifier	text		8964371	1					
ANR	8964792	Identifier	y_widths		8964371	1					
ANR	8964793	Identifier	NULL		8964371	1					
ANR	8964794	ReturnStatement	return code ;	157:8:5127:5138	8964371	2	True				
ANR	8964795	Identifier	code		8964371	0					
ANR	8964796	ExpressionStatement	pop ( 2 )	159:4:5150:5156	8964371	18	True				
ANR	8964797	CallExpression	pop ( 2 )		8964371	0					
ANR	8964798	Callee	pop		8964371	0					
ANR	8964799	Identifier	pop		8964371	0					
ANR	8964800	ArgumentList	2		8964371	1					
ANR	8964801	Argument	2		8964371	0					
ANR	8964802	PrimaryExpression	2		8964371	0					
ANR	8964803	ReturnStatement	return op_show_continue ( i_ctx_p ) ;	160:4:5162:5194	8964371	19	True				
ANR	8964804	CallExpression	op_show_continue ( i_ctx_p )		8964371	0					
ANR	8964805	Callee	op_show_continue		8964371	0					
ANR	8964806	Identifier	op_show_continue		8964371	0					
ANR	8964807	ArgumentList	i_ctx_p		8964371	1					
ANR	8964808	Argument	i_ctx_p		8964371	0					
ANR	8964809	Identifier	i_ctx_p		8964371	0					
ANR	8964810	ReturnType	static int		8964371	1					
ANR	8964811	Identifier	moveshow		8964371	2					
ANR	8964812	ParameterList	"i_ctx_t * i_ctx_p , bool have_x , bool have_y"		8964371	3					
ANR	8964813	Parameter	i_ctx_t * i_ctx_p	94:9:2708:2723	8964371	0	True				
ANR	8964814	ParameterType	i_ctx_t *		8964371	0					
ANR	8964815	Identifier	i_ctx_p		8964371	1					
ANR	8964816	Parameter	bool have_x	94:27:2726:2736	8964371	1	True				
ANR	8964817	ParameterType	bool		8964371	0					
ANR	8964818	Identifier	have_x		8964371	1					
ANR	8964819	Parameter	bool have_y	94:40:2739:2749	8964371	2	True				
ANR	8964820	ParameterType	bool		8964371	0					
ANR	8964821	Identifier	have_y		8964371	1					
ANR	8964822	CFGEntryNode	ENTRY		8964371		True				
ANR	8964823	CFGExitNode	EXIT		8964371		True				
ANR	8964824	Symbol	* penum		8964371						
ANR	8964825	Symbol	code		8964371						
ANR	8964826	Symbol	num_array_get		8964371						
ANR	8964827	Symbol	& value		8964371						
ANR	8964828	Symbol	* op		8964371						
ANR	8964829	Symbol	gs_error_rangecheck		8964371						
ANR	8964830	Symbol	* values		8964371						
ANR	8964831	Symbol	values		8964371						
ANR	8964832	Symbol	penum -> text		8964371						
ANR	8964833	Symbol	op [ - 1 ] . value		8964371						
ANR	8964834	Symbol	osp		8964371						
ANR	8964835	Symbol	gs_xyshow_begin		8964371						
ANR	8964836	Symbol	gs_currentcpsimode		8964371						
ANR	8964837	Symbol	igs		8964371						
ANR	8964838	Symbol	& penum		8964371						
ANR	8964839	Symbol	r_size		8964371						
ANR	8964840	Symbol	imemory		8964371						
ANR	8964841	Symbol	gs_get_text_params		8964371						
ANR	8964842	Symbol	op [ - 1 ] . value . bytes		8964371						
ANR	8964843	Symbol	value . value		8964371						
ANR	8964844	Symbol	value		8964371						
ANR	8964845	Symbol	gs_text_count_chars		8964371						
ANR	8964846	Symbol	op		8964371						
ANR	8964847	Symbol	NULL		8964371						
ANR	8964848	Symbol	op_show_setup		8964371						
ANR	8964849	Symbol	have_y		8964371						
ANR	8964850	Symbol	ialloc_byte_array		8964371						
ANR	8964851	Symbol	value . value . realval		8964371						
ANR	8964852	Symbol	have_x		8964371						
ANR	8964853	Symbol	penum		8964371						
ANR	8964854	Symbol	format		8964371						
ANR	8964855	Symbol	i		8964371						
ANR	8964856	Symbol	num_array_size		8964371						
ANR	8964857	Symbol	value . value . intval		8964371						
ANR	8964858	Symbol	gs_error_VMerror		8964371						
ANR	8964859	Symbol	imemory_local		8964371						
ANR	8964860	Symbol	penum -> text . x_widths		8964371						
ANR	8964861	Symbol	penum -> text . y_widths		8964371						
ANR	8964862	Symbol	gs_note_error		8964371						
ANR	8964863	Symbol	CPSI_mode		8964371						
ANR	8964864	Symbol	* i		8964371						
ANR	8964865	Symbol	size		8964371						
ANR	8964866	Symbol	i_ctx_p		8964371						
ANR	8964867	Symbol	num_array_format		8964371						
ANR	8964868	Symbol	op_show_continue		8964371						
ANR	8964869	Symbol	widths_needed		8964371						
ANR	8964870	Symbol	op_show_finish_setup		8964371						
ANR	8964871	Function	zxshow	162:0:5198:5279							
ANR	8964872	FunctionDef	zxshow (i_ctx_t * i_ctx_p)		8964871	0					
ANR	8964873	CompoundStatement		164:0:5234:5279	8964871	0					
ANR	8964874	ReturnStatement	"return moveshow ( i_ctx_p , true , false ) ;"	165:4:5240:5277	8964871	0	True				
ANR	8964875	CallExpression	"moveshow ( i_ctx_p , true , false )"		8964871	0					
ANR	8964876	Callee	moveshow		8964871	0					
ANR	8964877	Identifier	moveshow		8964871	0					
ANR	8964878	ArgumentList	i_ctx_p		8964871	1					
ANR	8964879	Argument	i_ctx_p		8964871	0					
ANR	8964880	Identifier	i_ctx_p		8964871	0					
ANR	8964881	Argument	true		8964871	1					
ANR	8964882	Identifier	true		8964871	0					
ANR	8964883	Argument	false		8964871	2					
ANR	8964884	Identifier	false		8964871	0					
ANR	8964885	ReturnType	static int		8964871	1					
ANR	8964886	Identifier	zxshow		8964871	2					
ANR	8964887	ParameterList	i_ctx_t * i_ctx_p		8964871	3					
ANR	8964888	Parameter	i_ctx_t * i_ctx_p	163:7:5216:5231	8964871	0	True				
ANR	8964889	ParameterType	i_ctx_t *		8964871	0					
ANR	8964890	Identifier	i_ctx_p		8964871	1					
ANR	8964891	CFGEntryNode	ENTRY		8964871		True				
ANR	8964892	CFGExitNode	EXIT		8964871		True				
ANR	8964893	Symbol	i_ctx_p		8964871						
ANR	8964894	Symbol	true		8964871						
ANR	8964895	Symbol	false		8964871						
ANR	8964896	Symbol	moveshow		8964871						
ANR	8964897	Function	zyshow	167:0:5281:5362							
ANR	8964898	FunctionDef	zyshow (i_ctx_t * i_ctx_p)		8964897	0					
ANR	8964899	CompoundStatement		169:0:5317:5362	8964897	0					
ANR	8964900	ReturnStatement	"return moveshow ( i_ctx_p , false , true ) ;"	170:4:5323:5360	8964897	0	True				
ANR	8964901	CallExpression	"moveshow ( i_ctx_p , false , true )"		8964897	0					
ANR	8964902	Callee	moveshow		8964897	0					
ANR	8964903	Identifier	moveshow		8964897	0					
ANR	8964904	ArgumentList	i_ctx_p		8964897	1					
ANR	8964905	Argument	i_ctx_p		8964897	0					
ANR	8964906	Identifier	i_ctx_p		8964897	0					
ANR	8964907	Argument	false		8964897	1					
ANR	8964908	Identifier	false		8964897	0					
ANR	8964909	Argument	true		8964897	2					
ANR	8964910	Identifier	true		8964897	0					
ANR	8964911	ReturnType	static int		8964897	1					
ANR	8964912	Identifier	zyshow		8964897	2					
ANR	8964913	ParameterList	i_ctx_t * i_ctx_p		8964897	3					
ANR	8964914	Parameter	i_ctx_t * i_ctx_p	168:7:5299:5314	8964897	0	True				
ANR	8964915	ParameterType	i_ctx_t *		8964897	0					
ANR	8964916	Identifier	i_ctx_p		8964897	1					
ANR	8964917	CFGEntryNode	ENTRY		8964897		True				
ANR	8964918	CFGExitNode	EXIT		8964897		True				
ANR	8964919	Symbol	i_ctx_p		8964897						
ANR	8964920	Symbol	false		8964897						
ANR	8964921	Symbol	true		8964897						
ANR	8964922	Symbol	moveshow		8964897						
ANR	8964923	Function	zxyshow	172:0:5364:5445							
ANR	8964924	FunctionDef	zxyshow (i_ctx_t * i_ctx_p)		8964923	0					
ANR	8964925	CompoundStatement		174:0:5401:5445	8964923	0					
ANR	8964926	ReturnStatement	"return moveshow ( i_ctx_p , true , true ) ;"	175:4:5407:5443	8964923	0	True				
ANR	8964927	CallExpression	"moveshow ( i_ctx_p , true , true )"		8964923	0					
ANR	8964928	Callee	moveshow		8964923	0					
ANR	8964929	Identifier	moveshow		8964923	0					
ANR	8964930	ArgumentList	i_ctx_p		8964923	1					
ANR	8964931	Argument	i_ctx_p		8964923	0					
ANR	8964932	Identifier	i_ctx_p		8964923	0					
ANR	8964933	Argument	true		8964923	1					
ANR	8964934	Identifier	true		8964923	0					
ANR	8964935	Argument	true		8964923	2					
ANR	8964936	Identifier	true		8964923	0					
ANR	8964937	ReturnType	static int		8964923	1					
ANR	8964938	Identifier	zxyshow		8964923	2					
ANR	8964939	ParameterList	i_ctx_t * i_ctx_p		8964923	3					
ANR	8964940	Parameter	i_ctx_t * i_ctx_p	173:8:5383:5398	8964923	0	True				
ANR	8964941	ParameterType	i_ctx_t *		8964923	0					
ANR	8964942	Identifier	i_ctx_p		8964923	1					
ANR	8964943	CFGEntryNode	ENTRY		8964923		True				
ANR	8964944	CFGExitNode	EXIT		8964923		True				
ANR	8964945	Symbol	i_ctx_p		8964923						
ANR	8964946	Symbol	true		8964923						
ANR	8964947	Symbol	moveshow		8964923						
ANR	8964948	DeclStmt									
ANR	8964949	Decl							const op_def	const op_def [ ]	zcharx_op_defs
