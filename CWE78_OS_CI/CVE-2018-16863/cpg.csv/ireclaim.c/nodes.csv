command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6123076	File	data/converged/CVE-2018-16863_ghostpdl/ireclaim.c								
ANR	6123077	DeclStmt									
ANR	6123078	Decl							extern void	extern void ( gs_ref_memory_t * )	ialloc_gc_prepare
ANR	6123079	DeclStmt									
ANR	6123080	Decl							int	"int ( gs_dual_memory_t * , bool )"	gs_vmreclaim
ANR	6123081	DeclStmt									
ANR	6123082	Decl							int	"int ( gs_dual_memory_t * , int )"	ireclaim
ANR	6123083	Function	ireclaim_init	40:0:1349:1443							
ANR	6123084	FunctionDef	ireclaim_init (i_ctx_t * i_ctx_p)		6123083	0					
ANR	6123085	CompoundStatement		42:0:1392:1443	6123083	0					
ANR	6123086	ExpressionStatement	gs_imemory . reclaim = ireclaim	43:4:1398:1427	6123083	0	True				
ANR	6123087	AssignmentExpression	gs_imemory . reclaim = ireclaim		6123083	0		=			
ANR	6123088	MemberAccess	gs_imemory . reclaim		6123083	0					
ANR	6123089	Identifier	gs_imemory		6123083	0					
ANR	6123090	Identifier	reclaim		6123083	1					
ANR	6123091	Identifier	ireclaim		6123083	1					
ANR	6123092	ReturnStatement	return 0 ;	44:4:1433:1441	6123083	1	True				
ANR	6123093	PrimaryExpression	0		6123083	0					
ANR	6123094	ReturnType	static int		6123083	1					
ANR	6123095	Identifier	ireclaim_init		6123083	2					
ANR	6123096	ParameterList	i_ctx_t * i_ctx_p		6123083	3					
ANR	6123097	Parameter	i_ctx_t * i_ctx_p	41:14:1374:1389	6123083	0	True				
ANR	6123098	ParameterType	i_ctx_t *		6123083	0					
ANR	6123099	Identifier	i_ctx_p		6123083	1					
ANR	6123100	CFGEntryNode	ENTRY		6123083		True				
ANR	6123101	CFGExitNode	EXIT		6123083		True				
ANR	6123102	Symbol	ireclaim		6123083						
ANR	6123103	Symbol	gs_imemory . reclaim		6123083						
ANR	6123104	Symbol	i_ctx_p		6123083						
ANR	6123105	Symbol	gs_imemory		6123083						
ANR	6123106	Function	ireclaim	49:0:1578:3362							
ANR	6123107	FunctionDef	"ireclaim (gs_dual_memory_t * dmem , int space)"		6123106	0					
ANR	6123108	CompoundStatement		51:0:1634:3362	6123106	0					
ANR	6123109	IdentifierDeclStatement	bool global ;	52:4:1640:1651	6123106	0	True				
ANR	6123110	IdentifierDecl	global		6123106	0					
ANR	6123111	IdentifierDeclType	bool		6123106	0					
ANR	6123112	Identifier	global		6123106	1					
ANR	6123113	IdentifierDeclStatement	gs_ref_memory_t * mem = NULL ;	53:4:1657:1684	6123106	1	True				
ANR	6123114	IdentifierDecl	* mem = NULL		6123106	0					
ANR	6123115	IdentifierDeclType	gs_ref_memory_t *		6123106	0					
ANR	6123116	Identifier	mem		6123106	1					
ANR	6123117	AssignmentExpression	* mem = NULL		6123106	2		=			
ANR	6123118	Identifier	NULL		6123106	0					
ANR	6123119	Identifier	NULL		6123106	1					
ANR	6123120	IdentifierDeclStatement	int code ;	54:4:1690:1698	6123106	2	True				
ANR	6123121	IdentifierDecl	code		6123106	0					
ANR	6123122	IdentifierDeclType	int		6123106	0					
ANR	6123123	Identifier	code		6123106	1					
ANR	6123124	IfStatement	if ( space < 0 )		6123106	3					
ANR	6123125	Condition	space < 0	56:8:1709:1717	6123106	0	True				
ANR	6123126	RelationalExpression	space < 0		6123106	0		<			
ANR	6123127	Identifier	space		6123106	0					
ANR	6123128	PrimaryExpression	0		6123106	1					
ANR	6123129	CompoundStatement		8:8:155:160	6123106	1					
ANR	6123130	IdentifierDeclStatement	int i ;	58:8:1790:1795	6123106	0	True				
ANR	6123131	IdentifierDecl	i		6123106	0					
ANR	6123132	IdentifierDeclType	int		6123106	0					
ANR	6123133	Identifier	i		6123106	1					
ANR	6123134	ForStatement	for ( i = 0 ; i < countof ( dmem -> spaces_indexed ) ; i ++ )		6123106	1					
ANR	6123135	ForInit	i = 0 ;	60:13:1811:1816	6123106	0	True				
ANR	6123136	AssignmentExpression	i = 0		6123106	0		=			
ANR	6123137	Identifier	i		6123106	0					
ANR	6123138	PrimaryExpression	0		6123106	1					
ANR	6123139	Condition	i < countof ( dmem -> spaces_indexed )	60:20:1818:1850	6123106	1	True				
ANR	6123140	RelationalExpression	i < countof ( dmem -> spaces_indexed )		6123106	0		<			
ANR	6123141	Identifier	i		6123106	0					
ANR	6123142	CallExpression	countof ( dmem -> spaces_indexed )		6123106	1					
ANR	6123143	Callee	countof		6123106	0					
ANR	6123144	Identifier	countof		6123106	0					
ANR	6123145	ArgumentList	dmem -> spaces_indexed		6123106	1					
ANR	6123146	Argument	dmem -> spaces_indexed		6123106	0					
ANR	6123147	PtrMemberAccess	dmem -> spaces_indexed		6123106	0					
ANR	6123148	Identifier	dmem		6123106	0					
ANR	6123149	Identifier	spaces_indexed		6123106	1					
ANR	6123150	PostIncDecOperationExpression	i ++	60:55:1853:1855	6123106	2	True				
ANR	6123151	Identifier	i		6123106	0					
ANR	6123152	IncDec	++		6123106	1					
ANR	6123153	CompoundStatement		10:60:223:223	6123106	3					
ANR	6123154	ExpressionStatement	mem = dmem -> spaces_indexed [ i ]	61:12:1872:1901	6123106	0	True				
ANR	6123155	AssignmentExpression	mem = dmem -> spaces_indexed [ i ]		6123106	0		=			
ANR	6123156	Identifier	mem		6123106	0					
ANR	6123157	ArrayIndexing	dmem -> spaces_indexed [ i ]		6123106	1					
ANR	6123158	PtrMemberAccess	dmem -> spaces_indexed		6123106	0					
ANR	6123159	Identifier	dmem		6123106	0					
ANR	6123160	Identifier	spaces_indexed		6123106	1					
ANR	6123161	Identifier	i		6123106	1					
ANR	6123162	IfStatement	if ( mem == 0 )		6123106	1					
ANR	6123163	Condition	mem == 0	62:16:1919:1926	6123106	0	True				
ANR	6123164	EqualityExpression	mem == 0		6123106	0		==			
ANR	6123165	Identifier	mem		6123106	0					
ANR	6123166	PrimaryExpression	0		6123106	1					
ANR	6123167	ContinueStatement	continue ;	63:16:1945:1953	6123106	1	True				
ANR	6123168	IfStatement	if ( mem -> gc_status . requested > 0 || ( ( gs_ref_memory_t * ) mem -> stable_memory ) -> gc_status . requested > 0 )		6123106	2					
ANR	6123169	Condition	mem -> gc_status . requested > 0 || ( ( gs_ref_memory_t * ) mem -> stable_memory ) -> gc_status . requested > 0	64:16:1971:2082	6123106	0	True				
ANR	6123170	OrExpression	mem -> gc_status . requested > 0 || ( ( gs_ref_memory_t * ) mem -> stable_memory ) -> gc_status . requested > 0		6123106	0		||			
ANR	6123171	RelationalExpression	mem -> gc_status . requested > 0		6123106	0		>			
ANR	6123172	MemberAccess	mem -> gc_status . requested		6123106	0					
ANR	6123173	PtrMemberAccess	mem -> gc_status		6123106	0					
ANR	6123174	Identifier	mem		6123106	0					
ANR	6123175	Identifier	gc_status		6123106	1					
ANR	6123176	Identifier	requested		6123106	1					
ANR	6123177	PrimaryExpression	0		6123106	1					
ANR	6123178	RelationalExpression	( ( gs_ref_memory_t * ) mem -> stable_memory ) -> gc_status . requested > 0		6123106	1		>			
ANR	6123179	MemberAccess	( ( gs_ref_memory_t * ) mem -> stable_memory ) -> gc_status . requested		6123106	0					
ANR	6123180	PtrMemberAccess	( ( gs_ref_memory_t * ) mem -> stable_memory ) -> gc_status		6123106	0					
ANR	6123181	CastExpression	( gs_ref_memory_t * ) mem -> stable_memory		6123106	0					
ANR	6123182	CastTarget	gs_ref_memory_t *		6123106	0					
ANR	6123183	PtrMemberAccess	mem -> stable_memory		6123106	1					
ANR	6123184	Identifier	mem		6123106	0					
ANR	6123185	Identifier	stable_memory		6123106	1					
ANR	6123186	Identifier	gc_status		6123106	1					
ANR	6123187	Identifier	requested		6123106	1					
ANR	6123188	PrimaryExpression	0		6123106	1					
ANR	6123189	BreakStatement	break ;	67:16:2118:2123	6123106	1	True				
ANR	6123190	IfStatement	if ( ! mem )		6123106	2					
ANR	6123191	Condition	! mem	69:12:2147:2150	6123106	0	True				
ANR	6123192	UnaryOperationExpression	! mem		6123106	0					
ANR	6123193	UnaryOperator	!		6123106	0					
ANR	6123194	Identifier	mem		6123106	1					
ANR	6123195	CompoundStatement		19:18:518:518	6123106	1					
ANR	6123196	ExpressionStatement	mem = dmem -> space_global	70:12:2167:2191	6123106	0	True				
ANR	6123197	AssignmentExpression	mem = dmem -> space_global		6123106	0		=			
ANR	6123198	Identifier	mem		6123106	0					
ANR	6123199	PtrMemberAccess	dmem -> space_global		6123106	1					
ANR	6123200	Identifier	dmem		6123106	0					
ANR	6123201	Identifier	space_global		6123106	1					
ANR	6123202	ElseStatement	else		6123106	0					
ANR	6123203	CompoundStatement		22:11:598:598	6123106	0					
ANR	6123204	ExpressionStatement	mem = dmem -> spaces_indexed [ space >> r_space_shift ]	73:8:2243:2293	6123106	0	True				
ANR	6123205	AssignmentExpression	mem = dmem -> spaces_indexed [ space >> r_space_shift ]		6123106	0		=			
ANR	6123206	Identifier	mem		6123106	0					
ANR	6123207	ArrayIndexing	dmem -> spaces_indexed [ space >> r_space_shift ]		6123106	1					
ANR	6123208	PtrMemberAccess	dmem -> spaces_indexed		6123106	0					
ANR	6123209	Identifier	dmem		6123106	0					
ANR	6123210	Identifier	spaces_indexed		6123106	1					
ANR	6123211	ShiftExpression	space >> r_space_shift		6123106	1		>>			
ANR	6123212	Identifier	space		6123106	0					
ANR	6123213	Identifier	r_space_shift		6123106	1					
ANR	6123214	ExpressionStatement	"if_debug3m ( '0' , ( gs_memory_t * ) mem , ""[0]GC called, space=%d, requestor=%d, requested=%ld\\n"" , space , mem -> space , ( long ) mem -> gc_status . requested )"	75:4:2305:2463	6123106	4	True				
ANR	6123215	CallExpression	"if_debug3m ( '0' , ( gs_memory_t * ) mem , ""[0]GC called, space=%d, requestor=%d, requested=%ld\\n"" , space , mem -> space , ( long ) mem -> gc_status . requested )"		6123106	0					
ANR	6123216	Callee	if_debug3m		6123106	0					
ANR	6123217	Identifier	if_debug3m		6123106	0					
ANR	6123218	ArgumentList	'0'		6123106	1					
ANR	6123219	Argument	'0'		6123106	0					
ANR	6123220	PrimaryExpression	'0'		6123106	0					
ANR	6123221	Argument	( gs_memory_t * ) mem		6123106	1					
ANR	6123222	CastExpression	( gs_memory_t * ) mem		6123106	0					
ANR	6123223	CastTarget	gs_memory_t *		6123106	0					
ANR	6123224	Identifier	mem		6123106	1					
ANR	6123225	Argument	"""[0]GC called, space=%d, requestor=%d, requested=%ld\\n"""		6123106	2					
ANR	6123226	PrimaryExpression	"""[0]GC called, space=%d, requestor=%d, requested=%ld\\n"""		6123106	0					
ANR	6123227	Argument	space		6123106	3					
ANR	6123228	Identifier	space		6123106	0					
ANR	6123229	Argument	mem -> space		6123106	4					
ANR	6123230	PtrMemberAccess	mem -> space		6123106	0					
ANR	6123231	Identifier	mem		6123106	0					
ANR	6123232	Identifier	space		6123106	1					
ANR	6123233	Argument	( long ) mem -> gc_status . requested		6123106	5					
ANR	6123234	CastExpression	( long ) mem -> gc_status . requested		6123106	0					
ANR	6123235	CastTarget	long		6123106	0					
ANR	6123236	MemberAccess	mem -> gc_status . requested		6123106	1					
ANR	6123237	PtrMemberAccess	mem -> gc_status		6123106	0					
ANR	6123238	Identifier	mem		6123106	0					
ANR	6123239	Identifier	gc_status		6123106	1					
ANR	6123240	Identifier	requested		6123106	1					
ANR	6123241	ExpressionStatement	global = mem -> space != avm_local	77:4:2469:2501	6123106	5	True				
ANR	6123242	AssignmentExpression	global = mem -> space != avm_local		6123106	0		=			
ANR	6123243	Identifier	global		6123106	0					
ANR	6123244	EqualityExpression	mem -> space != avm_local		6123106	1		!=			
ANR	6123245	PtrMemberAccess	mem -> space		6123106	0					
ANR	6123246	Identifier	mem		6123106	0					
ANR	6123247	Identifier	space		6123106	1					
ANR	6123248	Identifier	avm_local		6123106	1					
ANR	6123249	ExpressionStatement	ialloc_reset_requested ( dmem )	79:4:2561:2589	6123106	6	True				
ANR	6123250	CallExpression	ialloc_reset_requested ( dmem )		6123106	0					
ANR	6123251	Callee	ialloc_reset_requested		6123106	0					
ANR	6123252	Identifier	ialloc_reset_requested		6123106	0					
ANR	6123253	ArgumentList	dmem		6123106	1					
ANR	6123254	Argument	dmem		6123106	0					
ANR	6123255	Identifier	dmem		6123106	0					
ANR	6123256	ExpressionStatement	"code = gs_vmreclaim ( dmem , global )"	80:4:2595:2628	6123106	7	True				
ANR	6123257	AssignmentExpression	"code = gs_vmreclaim ( dmem , global )"		6123106	0		=			
ANR	6123258	Identifier	code		6123106	0					
ANR	6123259	CallExpression	"gs_vmreclaim ( dmem , global )"		6123106	1					
ANR	6123260	Callee	gs_vmreclaim		6123106	0					
ANR	6123261	Identifier	gs_vmreclaim		6123106	0					
ANR	6123262	ArgumentList	dmem		6123106	1					
ANR	6123263	Argument	dmem		6123106	0					
ANR	6123264	Identifier	dmem		6123106	0					
ANR	6123265	Argument	global		6123106	1					
ANR	6123266	Identifier	global		6123106	0					
ANR	6123267	IfStatement	if ( code < 0 )		6123106	8					
ANR	6123268	Condition	code < 0	81:8:2638:2645	6123106	0	True				
ANR	6123269	RelationalExpression	code < 0		6123106	0		<			
ANR	6123270	Identifier	code		6123106	0					
ANR	6123271	PrimaryExpression	0		6123106	1					
ANR	6123272	ReturnStatement	return code ;	82:8:2656:2667	6123106	1	True				
ANR	6123273	Identifier	code		6123106	0					
ANR	6123274	ExpressionStatement	ialloc_set_limit ( mem )	83:4:2673:2694	6123106	9	True				
ANR	6123275	CallExpression	ialloc_set_limit ( mem )		6123106	0					
ANR	6123276	Callee	ialloc_set_limit		6123106	0					
ANR	6123277	Identifier	ialloc_set_limit		6123106	0					
ANR	6123278	ArgumentList	mem		6123106	1					
ANR	6123279	Argument	mem		6123106	0					
ANR	6123280	Identifier	mem		6123106	0					
ANR	6123281	IfStatement	if ( space < 0 )		6123106	10					
ANR	6123282	Condition	space < 0	84:8:2704:2712	6123106	0	True				
ANR	6123283	RelationalExpression	space < 0		6123106	0		<			
ANR	6123284	Identifier	space		6123106	0					
ANR	6123285	PrimaryExpression	0		6123106	1					
ANR	6123286	CompoundStatement		36:8:1124:1139	6123106	1					
ANR	6123287	IdentifierDeclStatement	gs_memory_status_t stats ;	85:8:2725:2749	6123106	0	True				
ANR	6123288	IdentifierDecl	stats		6123106	0					
ANR	6123289	IdentifierDeclType	gs_memory_status_t		6123106	0					
ANR	6123290	Identifier	stats		6123106	1					
ANR	6123291	IdentifierDeclStatement	ulong allocated ;	86:8:2759:2774	6123106	1	True				
ANR	6123292	IdentifierDecl	allocated		6123106	0					
ANR	6123293	IdentifierDeclType	ulong		6123106	0					
ANR	6123294	Identifier	allocated		6123106	1					
ANR	6123295	ExpressionStatement	"gs_memory_status ( ( gs_memory_t * ) mem , & stats )"	90:8:2925:2970	6123106	2	True				
ANR	6123296	CallExpression	"gs_memory_status ( ( gs_memory_t * ) mem , & stats )"		6123106	0					
ANR	6123297	Callee	gs_memory_status		6123106	0					
ANR	6123298	Identifier	gs_memory_status		6123106	0					
ANR	6123299	ArgumentList	( gs_memory_t * ) mem		6123106	1					
ANR	6123300	Argument	( gs_memory_t * ) mem		6123106	0					
ANR	6123301	CastExpression	( gs_memory_t * ) mem		6123106	0					
ANR	6123302	CastTarget	gs_memory_t *		6123106	0					
ANR	6123303	Identifier	mem		6123106	1					
ANR	6123304	Argument	& stats		6123106	1					
ANR	6123305	UnaryOperationExpression	& stats		6123106	0					
ANR	6123306	UnaryOperator	&		6123106	0					
ANR	6123307	Identifier	stats		6123106	1					
ANR	6123308	ExpressionStatement	allocated = stats . allocated	91:8:2980:3007	6123106	3	True				
ANR	6123309	AssignmentExpression	allocated = stats . allocated		6123106	0		=			
ANR	6123310	Identifier	allocated		6123106	0					
ANR	6123311	MemberAccess	stats . allocated		6123106	1					
ANR	6123312	Identifier	stats		6123106	0					
ANR	6123313	Identifier	allocated		6123106	1					
ANR	6123314	IfStatement	if ( mem -> stable_memory != ( gs_memory_t * ) mem )		6123106	4					
ANR	6123315	Condition	mem -> stable_memory != ( gs_memory_t * ) mem	92:12:3021:3060	6123106	0	True				
ANR	6123316	EqualityExpression	mem -> stable_memory != ( gs_memory_t * ) mem		6123106	0		!=			
ANR	6123317	PtrMemberAccess	mem -> stable_memory		6123106	0					
ANR	6123318	Identifier	mem		6123106	0					
ANR	6123319	Identifier	stable_memory		6123106	1					
ANR	6123320	CastExpression	( gs_memory_t * ) mem		6123106	1					
ANR	6123321	CastTarget	gs_memory_t *		6123106	0					
ANR	6123322	Identifier	mem		6123106	1					
ANR	6123323	CompoundStatement		42:54:1428:1428	6123106	1					
ANR	6123324	ExpressionStatement	"gs_memory_status ( mem -> stable_memory , & stats )"	93:12:3077:3121	6123106	0	True				
ANR	6123325	CallExpression	"gs_memory_status ( mem -> stable_memory , & stats )"		6123106	0					
ANR	6123326	Callee	gs_memory_status		6123106	0					
ANR	6123327	Identifier	gs_memory_status		6123106	0					
ANR	6123328	ArgumentList	mem -> stable_memory		6123106	1					
ANR	6123329	Argument	mem -> stable_memory		6123106	0					
ANR	6123330	PtrMemberAccess	mem -> stable_memory		6123106	0					
ANR	6123331	Identifier	mem		6123106	0					
ANR	6123332	Identifier	stable_memory		6123106	1					
ANR	6123333	Argument	& stats		6123106	1					
ANR	6123334	UnaryOperationExpression	& stats		6123106	0					
ANR	6123335	UnaryOperator	&		6123106	0					
ANR	6123336	Identifier	stats		6123106	1					
ANR	6123337	ExpressionStatement	allocated += stats . allocated	94:12:3135:3163	6123106	1	True				
ANR	6123338	AssignmentExpression	allocated += stats . allocated		6123106	0		+=			
ANR	6123339	Identifier	allocated		6123106	0					
ANR	6123340	MemberAccess	stats . allocated		6123106	1					
ANR	6123341	Identifier	stats		6123106	0					
ANR	6123342	Identifier	allocated		6123106	1					
ANR	6123343	IfStatement	if ( allocated >= mem -> gc_status . max_vm )		6123106	5					
ANR	6123344	Condition	allocated >= mem -> gc_status . max_vm	96:12:3187:3220	6123106	0	True				
ANR	6123345	RelationalExpression	allocated >= mem -> gc_status . max_vm		6123106	0		>=			
ANR	6123346	Identifier	allocated		6123106	0					
ANR	6123347	MemberAccess	mem -> gc_status . max_vm		6123106	1					
ANR	6123348	PtrMemberAccess	mem -> gc_status		6123106	0					
ANR	6123349	Identifier	mem		6123106	0					
ANR	6123350	Identifier	gc_status		6123106	1					
ANR	6123351	Identifier	max_vm		6123106	1					
ANR	6123352	CompoundStatement		46:48:1588:1588	6123106	1					
ANR	6123353	ExpressionStatement	return_error ( gs_error_VMerror )	98:12:3300:3330	6123106	0	True				
ANR	6123354	CallExpression	return_error ( gs_error_VMerror )		6123106	0					
ANR	6123355	Callee	return_error		6123106	0					
ANR	6123356	Identifier	return_error		6123106	0					
ANR	6123357	ArgumentList	gs_error_VMerror		6123106	1					
ANR	6123358	Argument	gs_error_VMerror		6123106	0					
ANR	6123359	Identifier	gs_error_VMerror		6123106	0					
ANR	6123360	ReturnStatement	return 0 ;	101:4:3352:3360	6123106	11	True				
ANR	6123361	PrimaryExpression	0		6123106	0					
ANR	6123362	ReturnType	static int		6123106	1					
ANR	6123363	Identifier	ireclaim		6123106	2					
ANR	6123364	ParameterList	"gs_dual_memory_t * dmem , int space"		6123106	3					
ANR	6123365	Parameter	gs_dual_memory_t * dmem	50:9:1598:1620	6123106	0	True				
ANR	6123366	ParameterType	gs_dual_memory_t *		6123106	0					
ANR	6123367	Identifier	dmem		6123106	1					
ANR	6123368	Parameter	int space	50:34:1623:1631	6123106	1	True				
ANR	6123369	ParameterType	int		6123106	0					
ANR	6123370	Identifier	space		6123106	1					
ANR	6123371	CFGEntryNode	ENTRY		6123106		True				
ANR	6123372	CFGExitNode	EXIT		6123106		True				
ANR	6123373	Symbol	code		6123106						
ANR	6123374	Symbol	mem -> stable_memory		6123106						
ANR	6123375	Symbol	avm_local		6123106						
ANR	6123376	Symbol	mem -> gc_status . max_vm		6123106						
ANR	6123377	Symbol	global		6123106						
ANR	6123378	Symbol	* * dmem		6123106						
ANR	6123379	Symbol	space		6123106						
ANR	6123380	Symbol	dmem -> spaces_indexed		6123106						
ANR	6123381	Symbol	mem -> gc_status		6123106						
ANR	6123382	Symbol	* r_space_shift		6123106						
ANR	6123383	Symbol	mem		6123106						
ANR	6123384	Symbol	* dmem -> spaces_indexed		6123106						
ANR	6123385	Symbol	stats		6123106						
ANR	6123386	Symbol	gs_vmreclaim		6123106						
ANR	6123387	Symbol	dmem		6123106						
ANR	6123388	Symbol	allocated		6123106						
ANR	6123389	Symbol	r_space_shift		6123106						
ANR	6123390	Symbol	mem -> gc_status . requested		6123106						
ANR	6123391	Symbol	NULL		6123106						
ANR	6123392	Symbol	* mem -> stable_memory		6123106						
ANR	6123393	Symbol	i		6123106						
ANR	6123394	Symbol	* * mem		6123106						
ANR	6123395	Symbol	( ( gs_ref_memory_t * ) mem -> stable_memory ) -> gc_status . requested		6123106						
ANR	6123396	Symbol	stats . allocated		6123106						
ANR	6123397	Symbol	mem -> space		6123106						
ANR	6123398	Symbol	countof		6123106						
ANR	6123399	Symbol	gs_error_VMerror		6123106						
ANR	6123400	Symbol	* i		6123106						
ANR	6123401	Symbol	& stats		6123106						
ANR	6123402	Symbol	* space		6123106						
ANR	6123403	Symbol	* dmem		6123106						
ANR	6123404	Symbol	dmem -> space_global		6123106						
ANR	6123405	Symbol	( ( gs_ref_memory_t * ) mem -> stable_memory ) -> gc_status		6123106						
ANR	6123406	Symbol	* mem		6123106						
ANR	6123407	Function	gs_vmreclaim	105:0:3411:6055							
ANR	6123408	FunctionDef	"gs_vmreclaim (gs_dual_memory_t * dmem , bool global)"		6123407	0					
ANR	6123409	CompoundStatement		107:0:3472:6055	6123407	0					
ANR	6123410	IdentifierDeclStatement	"i_ctx_t * i_ctx_p = ( i_ctx_t * ) ( ( char * ) dmem - offset_of ( i_ctx_t , memory ) ) ;"	109:4:3555:3636	6123407	0	True				
ANR	6123411	IdentifierDecl	"* i_ctx_p = ( i_ctx_t * ) ( ( char * ) dmem - offset_of ( i_ctx_t , memory ) )"		6123407	0					
ANR	6123412	IdentifierDeclType	i_ctx_t *		6123407	0					
ANR	6123413	Identifier	i_ctx_p		6123407	1					
ANR	6123414	AssignmentExpression	"* i_ctx_p = ( i_ctx_t * ) ( ( char * ) dmem - offset_of ( i_ctx_t , memory ) )"		6123407	2		=			
ANR	6123415	Identifier	i_ctx_p		6123407	0					
ANR	6123416	CastExpression	"( i_ctx_t * ) ( ( char * ) dmem - offset_of ( i_ctx_t , memory ) )"		6123407	1					
ANR	6123417	CastTarget	i_ctx_t *		6123407	0					
ANR	6123418	AdditiveExpression	"( char * ) dmem - offset_of ( i_ctx_t , memory )"		6123407	1		-			
ANR	6123419	CastExpression	( char * ) dmem		6123407	0					
ANR	6123420	CastTarget	char *		6123407	0					
ANR	6123421	Identifier	dmem		6123407	1					
ANR	6123422	CallExpression	"offset_of ( i_ctx_t , memory )"		6123407	1					
ANR	6123423	Callee	offset_of		6123407	0					
ANR	6123424	Identifier	offset_of		6123407	0					
ANR	6123425	ArgumentList	i_ctx_t		6123407	1					
ANR	6123426	Argument	i_ctx_t		6123407	0					
ANR	6123427	Identifier	i_ctx_t		6123407	0					
ANR	6123428	Argument	memory		6123407	1					
ANR	6123429	Identifier	memory		6123407	0					
ANR	6123430	IdentifierDeclStatement	gs_ref_memory_t * lmem = dmem -> space_local ;	111:4:3642:3683	6123407	1	True				
ANR	6123431	IdentifierDecl	* lmem = dmem -> space_local		6123407	0					
ANR	6123432	IdentifierDeclType	gs_ref_memory_t *		6123407	0					
ANR	6123433	Identifier	lmem		6123407	1					
ANR	6123434	AssignmentExpression	* lmem = dmem -> space_local		6123407	2		=			
ANR	6123435	Identifier	lmem		6123407	0					
ANR	6123436	PtrMemberAccess	dmem -> space_local		6123407	1					
ANR	6123437	Identifier	dmem		6123407	0					
ANR	6123438	Identifier	space_local		6123407	1					
ANR	6123439	IdentifierDeclStatement	int code = context_state_store ( i_ctx_p ) ;	112:4:3689:3728	6123407	2	True				
ANR	6123440	IdentifierDecl	code = context_state_store ( i_ctx_p )		6123407	0					
ANR	6123441	IdentifierDeclType	int		6123407	0					
ANR	6123442	Identifier	code		6123407	1					
ANR	6123443	AssignmentExpression	code = context_state_store ( i_ctx_p )		6123407	2		=			
ANR	6123444	Identifier	code		6123407	0					
ANR	6123445	CallExpression	context_state_store ( i_ctx_p )		6123407	1					
ANR	6123446	Callee	context_state_store		6123407	0					
ANR	6123447	Identifier	context_state_store		6123407	0					
ANR	6123448	ArgumentList	i_ctx_p		6123407	1					
ANR	6123449	Argument	i_ctx_p		6123407	0					
ANR	6123450	Identifier	i_ctx_p		6123407	0					
ANR	6123451	IdentifierDeclStatement	gs_ref_memory_t * memories [ 5 ] ;	113:4:3734:3762	6123407	3	True				
ANR	6123452	IdentifierDecl	* memories [ 5 ]		6123407	0					
ANR	6123453	IdentifierDeclType	gs_ref_memory_t * [ 5 ]		6123407	0					
ANR	6123454	Identifier	memories		6123407	1					
ANR	6123455	PrimaryExpression	5		6123407	2					
ANR	6123456	IdentifierDeclStatement	gs_ref_memory_t * mem ;	114:4:3768:3788	6123407	4	True				
ANR	6123457	IdentifierDecl	* mem		6123407	0					
ANR	6123458	IdentifierDeclType	gs_ref_memory_t *		6123407	0					
ANR	6123459	Identifier	mem		6123407	1					
ANR	6123460	IdentifierDeclStatement	"int nmem , i ;"	115:4:3794:3805	6123407	5	True				
ANR	6123461	IdentifierDecl	nmem		6123407	0					
ANR	6123462	IdentifierDeclType	int		6123407	0					
ANR	6123463	Identifier	nmem		6123407	1					
ANR	6123464	IdentifierDecl	i		6123407	1					
ANR	6123465	IdentifierDeclType	int		6123407	0					
ANR	6123466	Identifier	i		6123407	1					
ANR	6123467	IfStatement	if ( code < 0 )		6123407	6					
ANR	6123468	Condition	code < 0	117:8:3816:3823	6123407	0	True				
ANR	6123469	RelationalExpression	code < 0		6123407	0		<			
ANR	6123470	Identifier	code		6123407	0					
ANR	6123471	PrimaryExpression	0		6123407	1					
ANR	6123472	ReturnStatement	return code ;	118:8:3834:3845	6123407	1	True				
ANR	6123473	Identifier	code		6123407	0					
ANR	6123474	ExpressionStatement	memories [ 0 ] = dmem -> space_system	120:4:3852:3884	6123407	7	True				
ANR	6123475	AssignmentExpression	memories [ 0 ] = dmem -> space_system		6123407	0		=			
ANR	6123476	ArrayIndexing	memories [ 0 ]		6123407	0					
ANR	6123477	Identifier	memories		6123407	0					
ANR	6123478	PrimaryExpression	0		6123407	1					
ANR	6123479	PtrMemberAccess	dmem -> space_system		6123407	1					
ANR	6123480	Identifier	dmem		6123407	0					
ANR	6123481	Identifier	space_system		6123407	1					
ANR	6123482	ExpressionStatement	memories [ 1 ] = mem = dmem -> space_global	121:4:3890:3928	6123407	8	True				
ANR	6123483	AssignmentExpression	memories [ 1 ] = mem = dmem -> space_global		6123407	0		=			
ANR	6123484	ArrayIndexing	memories [ 1 ]		6123407	0					
ANR	6123485	Identifier	memories		6123407	0					
ANR	6123486	PrimaryExpression	1		6123407	1					
ANR	6123487	AssignmentExpression	mem = dmem -> space_global		6123407	1		=			
ANR	6123488	Identifier	mem		6123407	0					
ANR	6123489	PtrMemberAccess	dmem -> space_global		6123407	1					
ANR	6123490	Identifier	dmem		6123407	0					
ANR	6123491	Identifier	space_global		6123407	1					
ANR	6123492	ExpressionStatement	nmem = 2	122:4:3934:3942	6123407	9	True				
ANR	6123493	AssignmentExpression	nmem = 2		6123407	0		=			
ANR	6123494	Identifier	nmem		6123407	0					
ANR	6123495	PrimaryExpression	2		6123407	1					
ANR	6123496	IfStatement	if ( lmem != dmem -> space_global )		6123407	10					
ANR	6123497	Condition	lmem != dmem -> space_global	123:8:3952:3977	6123407	0	True				
ANR	6123498	EqualityExpression	lmem != dmem -> space_global		6123407	0		!=			
ANR	6123499	Identifier	lmem		6123407	0					
ANR	6123500	PtrMemberAccess	dmem -> space_global		6123407	1					
ANR	6123501	Identifier	dmem		6123407	0					
ANR	6123502	Identifier	space_global		6123407	1					
ANR	6123503	ExpressionStatement	memories [ nmem ++ ] = lmem	124:8:3988:4011	6123407	1	True				
ANR	6123504	AssignmentExpression	memories [ nmem ++ ] = lmem		6123407	0		=			
ANR	6123505	ArrayIndexing	memories [ nmem ++ ]		6123407	0					
ANR	6123506	Identifier	memories		6123407	0					
ANR	6123507	PostIncDecOperationExpression	nmem ++		6123407	1					
ANR	6123508	Identifier	nmem		6123407	0					
ANR	6123509	IncDec	++		6123407	1					
ANR	6123510	Identifier	lmem		6123407	1					
ANR	6123511	ForStatement	for ( i = nmem ; -- i >= 0 ; )		6123407	11					
ANR	6123512	ForInit	i = nmem ;	125:9:4022:4030	6123407	0	True				
ANR	6123513	AssignmentExpression	i = nmem		6123407	0		=			
ANR	6123514	Identifier	i		6123407	0					
ANR	6123515	Identifier	nmem		6123407	1					
ANR	6123516	Condition	-- i >= 0	125:19:4032:4039	6123407	1	True				
ANR	6123517	RelationalExpression	-- i >= 0		6123407	0		>=			
ANR	6123518	UnaryExpression	-- i		6123407	0					
ANR	6123519	IncDec	--		6123407	0					
ANR	6123520	Identifier	i		6123407	1					
ANR	6123521	PrimaryExpression	0		6123407	1					
ANR	6123522	CompoundStatement		19:30:570:570	6123407	2					
ANR	6123523	ExpressionStatement	mem = memories [ i ]	126:8:4053:4070	6123407	0	True				
ANR	6123524	AssignmentExpression	mem = memories [ i ]		6123407	0		=			
ANR	6123525	Identifier	mem		6123407	0					
ANR	6123526	ArrayIndexing	memories [ i ]		6123407	1					
ANR	6123527	Identifier	memories		6123407	0					
ANR	6123528	Identifier	i		6123407	1					
ANR	6123529	IfStatement	if ( mem -> stable_memory != ( gs_memory_t * ) mem )		6123407	1					
ANR	6123530	Condition	mem -> stable_memory != ( gs_memory_t * ) mem	127:12:4084:4123	6123407	0	True				
ANR	6123531	EqualityExpression	mem -> stable_memory != ( gs_memory_t * ) mem		6123407	0		!=			
ANR	6123532	PtrMemberAccess	mem -> stable_memory		6123407	0					
ANR	6123533	Identifier	mem		6123407	0					
ANR	6123534	Identifier	stable_memory		6123407	1					
ANR	6123535	CastExpression	( gs_memory_t * ) mem		6123407	1					
ANR	6123536	CastTarget	gs_memory_t *		6123407	0					
ANR	6123537	Identifier	mem		6123407	1					
ANR	6123538	ExpressionStatement	memories [ nmem ++ ] = ( gs_ref_memory_t * ) mem -> stable_memory	128:12:4138:4194	6123407	1	True				
ANR	6123539	AssignmentExpression	memories [ nmem ++ ] = ( gs_ref_memory_t * ) mem -> stable_memory		6123407	0		=			
ANR	6123540	ArrayIndexing	memories [ nmem ++ ]		6123407	0					
ANR	6123541	Identifier	memories		6123407	0					
ANR	6123542	PostIncDecOperationExpression	nmem ++		6123407	1					
ANR	6123543	Identifier	nmem		6123407	0					
ANR	6123544	IncDec	++		6123407	1					
ANR	6123545	CastExpression	( gs_ref_memory_t * ) mem -> stable_memory		6123407	1					
ANR	6123546	CastTarget	gs_ref_memory_t *		6123407	0					
ANR	6123547	PtrMemberAccess	mem -> stable_memory		6123407	1					
ANR	6123548	Identifier	mem		6123407	0					
ANR	6123549	Identifier	stable_memory		6123407	1					
ANR	6123550	ForStatement	for ( i = nmem ; -- i >= 0 ; )		6123407	12					
ANR	6123551	ForInit	i = nmem ;	132:9:4250:4258	6123407	0	True				
ANR	6123552	AssignmentExpression	i = nmem		6123407	0		=			
ANR	6123553	Identifier	i		6123407	0					
ANR	6123554	Identifier	nmem		6123407	1					
ANR	6123555	Condition	-- i >= 0	132:19:4260:4267	6123407	1	True				
ANR	6123556	RelationalExpression	-- i >= 0		6123407	0		>=			
ANR	6123557	UnaryExpression	-- i		6123407	0					
ANR	6123558	IncDec	--		6123407	0					
ANR	6123559	Identifier	i		6123407	1					
ANR	6123560	PrimaryExpression	0		6123407	1					
ANR	6123561	ExpressionStatement	alloc_close_clump ( memories [ i ] )	133:8:4280:4310	6123407	2	True				
ANR	6123562	CallExpression	alloc_close_clump ( memories [ i ] )		6123407	0					
ANR	6123563	Callee	alloc_close_clump		6123407	0					
ANR	6123564	Identifier	alloc_close_clump		6123407	0					
ANR	6123565	ArgumentList	memories [ i ]		6123407	1					
ANR	6123566	Argument	memories [ i ]		6123407	0					
ANR	6123567	ArrayIndexing	memories [ i ]		6123407	0					
ANR	6123568	Identifier	memories		6123407	0					
ANR	6123569	Identifier	i		6123407	1					
ANR	6123570	ForStatement	for ( i = ( global ? i_vm_system : i_vm_local ) ; i < countof ( dmem -> spaces_indexed ) ; ++ i )		6123407	13					
ANR	6123571	ForInit	i = ( global ? i_vm_system : i_vm_local ) ;	138:9:4413:4452	6123407	0	True				
ANR	6123572	AssignmentExpression	i = ( global ? i_vm_system : i_vm_local )		6123407	0		=			
ANR	6123573	Identifier	i		6123407	0					
ANR	6123574	ConditionalExpression	global ? i_vm_system : i_vm_local		6123407	1					
ANR	6123575	Condition	global		6123407	0					
ANR	6123576	Identifier	global		6123407	0					
ANR	6123577	Identifier	i_vm_system		6123407	1					
ANR	6123578	Identifier	i_vm_local		6123407	2					
ANR	6123579	Condition	i < countof ( dmem -> spaces_indexed )	139:9:4463:4495	6123407	1	True				
ANR	6123580	RelationalExpression	i < countof ( dmem -> spaces_indexed )		6123407	0		<			
ANR	6123581	Identifier	i		6123407	0					
ANR	6123582	CallExpression	countof ( dmem -> spaces_indexed )		6123407	1					
ANR	6123583	Callee	countof		6123407	0					
ANR	6123584	Identifier	countof		6123407	0					
ANR	6123585	ArgumentList	dmem -> spaces_indexed		6123407	1					
ANR	6123586	Argument	dmem -> spaces_indexed		6123407	0					
ANR	6123587	PtrMemberAccess	dmem -> spaces_indexed		6123407	0					
ANR	6123588	Identifier	dmem		6123407	0					
ANR	6123589	Identifier	spaces_indexed		6123407	1					
ANR	6123590	UnaryExpression	++ i	140:9:4507:4509	6123407	2	True				
ANR	6123591	IncDec	++		6123407	0					
ANR	6123592	Identifier	i		6123407	1					
ANR	6123593	CompoundStatement		36:8:1059:1105	6123407	3					
ANR	6123594	IdentifierDeclStatement	gs_ref_memory_t * mem = dmem -> spaces_indexed [ i ] ;	142:8:4532:4578	6123407	0	True				
ANR	6123595	IdentifierDecl	* mem = dmem -> spaces_indexed [ i ]		6123407	0					
ANR	6123596	IdentifierDeclType	gs_ref_memory_t *		6123407	0					
ANR	6123597	Identifier	mem		6123407	1					
ANR	6123598	AssignmentExpression	* mem = dmem -> spaces_indexed [ i ]		6123407	2		=			
ANR	6123599	Identifier	mem		6123407	0					
ANR	6123600	ArrayIndexing	dmem -> spaces_indexed [ i ]		6123407	1					
ANR	6123601	PtrMemberAccess	dmem -> spaces_indexed		6123407	0					
ANR	6123602	Identifier	dmem		6123407	0					
ANR	6123603	Identifier	spaces_indexed		6123407	1					
ANR	6123604	Identifier	i		6123407	1					
ANR	6123605	IfStatement	if ( mem == 0 || ( i > 0 && mem == dmem -> spaces_indexed [ i - 1 ] ) )		6123407	1					
ANR	6123606	Condition	mem == 0 || ( i > 0 && mem == dmem -> spaces_indexed [ i - 1 ] )	144:12:4593:4649	6123407	0	True				
ANR	6123607	OrExpression	mem == 0 || ( i > 0 && mem == dmem -> spaces_indexed [ i - 1 ] )		6123407	0		||			
ANR	6123608	EqualityExpression	mem == 0		6123407	0		==			
ANR	6123609	Identifier	mem		6123407	0					
ANR	6123610	PrimaryExpression	0		6123407	1					
ANR	6123611	AndExpression	i > 0 && mem == dmem -> spaces_indexed [ i - 1 ]		6123407	1		&&			
ANR	6123612	RelationalExpression	i > 0		6123407	0		>			
ANR	6123613	Identifier	i		6123407	0					
ANR	6123614	PrimaryExpression	0		6123407	1					
ANR	6123615	EqualityExpression	mem == dmem -> spaces_indexed [ i - 1 ]		6123407	1		==			
ANR	6123616	Identifier	mem		6123407	0					
ANR	6123617	ArrayIndexing	dmem -> spaces_indexed [ i - 1 ]		6123407	1					
ANR	6123618	PtrMemberAccess	dmem -> spaces_indexed		6123407	0					
ANR	6123619	Identifier	dmem		6123407	0					
ANR	6123620	Identifier	spaces_indexed		6123407	1					
ANR	6123621	AdditiveExpression	i - 1		6123407	1		-			
ANR	6123622	Identifier	i		6123407	0					
ANR	6123623	PrimaryExpression	1		6123407	1					
ANR	6123624	ContinueStatement	continue ;	145:12:4664:4672	6123407	1	True				
ANR	6123625	IfStatement	if ( mem -> stable_memory != ( gs_memory_t * ) mem )		6123407	2					
ANR	6123626	Condition	mem -> stable_memory != ( gs_memory_t * ) mem	146:12:4686:4725	6123407	0	True				
ANR	6123627	EqualityExpression	mem -> stable_memory != ( gs_memory_t * ) mem		6123407	0		!=			
ANR	6123628	PtrMemberAccess	mem -> stable_memory		6123407	0					
ANR	6123629	Identifier	mem		6123407	0					
ANR	6123630	Identifier	stable_memory		6123407	1					
ANR	6123631	CastExpression	( gs_memory_t * ) mem		6123407	1					
ANR	6123632	CastTarget	gs_memory_t *		6123407	0					
ANR	6123633	Identifier	mem		6123407	1					
ANR	6123634	ExpressionStatement	ialloc_gc_prepare ( ( gs_ref_memory_t * ) mem -> stable_memory )	147:12:4740:4796	6123407	1	True				
ANR	6123635	CallExpression	ialloc_gc_prepare ( ( gs_ref_memory_t * ) mem -> stable_memory )		6123407	0					
ANR	6123636	Callee	ialloc_gc_prepare		6123407	0					
ANR	6123637	Identifier	ialloc_gc_prepare		6123407	0					
ANR	6123638	ArgumentList	( gs_ref_memory_t * ) mem -> stable_memory		6123407	1					
ANR	6123639	Argument	( gs_ref_memory_t * ) mem -> stable_memory		6123407	0					
ANR	6123640	CastExpression	( gs_ref_memory_t * ) mem -> stable_memory		6123407	0					
ANR	6123641	CastTarget	gs_ref_memory_t *		6123407	0					
ANR	6123642	PtrMemberAccess	mem -> stable_memory		6123407	1					
ANR	6123643	Identifier	mem		6123407	0					
ANR	6123644	Identifier	stable_memory		6123407	1					
ANR	6123645	ForStatement	for ( ; ; mem = & mem -> saved -> state )		6123407	3					
ANR	6123646	AssignmentExpression	mem = & mem -> saved -> state	148:16:4814:4837	6123407	0	True	=			
ANR	6123647	Identifier	mem		6123407	0					
ANR	6123648	UnaryOperationExpression	& mem -> saved -> state		6123407	1					
ANR	6123649	UnaryOperator	&		6123407	0					
ANR	6123650	PtrMemberAccess	mem -> saved -> state		6123407	1					
ANR	6123651	PtrMemberAccess	mem -> saved		6123407	0					
ANR	6123652	Identifier	mem		6123407	0					
ANR	6123653	Identifier	saved		6123407	1					
ANR	6123654	Identifier	state		6123407	1					
ANR	6123655	CompoundStatement		42:42:1367:1367	6123407	1					
ANR	6123656	ExpressionStatement	ialloc_gc_prepare ( mem )	149:12:4854:4876	6123407	0	True				
ANR	6123657	CallExpression	ialloc_gc_prepare ( mem )		6123407	0					
ANR	6123658	Callee	ialloc_gc_prepare		6123407	0					
ANR	6123659	Identifier	ialloc_gc_prepare		6123407	0					
ANR	6123660	ArgumentList	mem		6123407	1					
ANR	6123661	Argument	mem		6123407	0					
ANR	6123662	Identifier	mem		6123407	0					
ANR	6123663	IfStatement	if ( mem -> saved == 0 )		6123407	1					
ANR	6123664	Condition	mem -> saved == 0	150:16:4894:4908	6123407	0	True				
ANR	6123665	EqualityExpression	mem -> saved == 0		6123407	0		==			
ANR	6123666	PtrMemberAccess	mem -> saved		6123407	0					
ANR	6123667	Identifier	mem		6123407	0					
ANR	6123668	Identifier	saved		6123407	1					
ANR	6123669	PrimaryExpression	0		6123407	1					
ANR	6123670	BreakStatement	break ;	151:16:4927:4932	6123407	1	True				
ANR	6123671	CompoundStatement		53:8:1559:1584	6123407	14					
ANR	6123672	IdentifierDeclStatement	void * ctxp = i_ctx_p ;	158:8:5002:5022	6123407	0	True				
ANR	6123673	IdentifierDecl	* ctxp = i_ctx_p		6123407	0					
ANR	6123674	IdentifierDeclType	void *		6123407	0					
ANR	6123675	Identifier	ctxp		6123407	1					
ANR	6123676	AssignmentExpression	* ctxp = i_ctx_p		6123407	2		=			
ANR	6123677	Identifier	i_ctx_p		6123407	0					
ANR	6123678	Identifier	i_ctx_p		6123407	1					
ANR	6123679	IdentifierDeclStatement	gs_gc_root_t context_root ;	159:8:5032:5057	6123407	1	True				
ANR	6123680	IdentifierDecl	context_root		6123407	0					
ANR	6123681	IdentifierDeclType	gs_gc_root_t		6123407	0					
ANR	6123682	Identifier	context_root		6123407	1					
ANR	6123683	ExpressionStatement	"gs_register_struct_root ( ( gs_memory_t * ) lmem , & context_root , & ctxp , ""i_ctx_p root"" )"	161:8:5068:5182	6123407	2	True				
ANR	6123684	CallExpression	"gs_register_struct_root ( ( gs_memory_t * ) lmem , & context_root , & ctxp , ""i_ctx_p root"" )"		6123407	0					
ANR	6123685	Callee	gs_register_struct_root		6123407	0					
ANR	6123686	Identifier	gs_register_struct_root		6123407	0					
ANR	6123687	ArgumentList	( gs_memory_t * ) lmem		6123407	1					
ANR	6123688	Argument	( gs_memory_t * ) lmem		6123407	0					
ANR	6123689	CastExpression	( gs_memory_t * ) lmem		6123407	0					
ANR	6123690	CastTarget	gs_memory_t *		6123407	0					
ANR	6123691	Identifier	lmem		6123407	1					
ANR	6123692	Argument	& context_root		6123407	1					
ANR	6123693	UnaryOperationExpression	& context_root		6123407	0					
ANR	6123694	UnaryOperator	&		6123407	0					
ANR	6123695	Identifier	context_root		6123407	1					
ANR	6123696	Argument	& ctxp		6123407	2					
ANR	6123697	UnaryOperationExpression	& ctxp		6123407	0					
ANR	6123698	UnaryOperator	&		6123407	0					
ANR	6123699	Identifier	ctxp		6123407	1					
ANR	6123700	Argument	"""i_ctx_p root"""		6123407	3					
ANR	6123701	PrimaryExpression	"""i_ctx_p root"""		6123407	0					
ANR	6123702	ExpressionStatement	"GS_RECLAIM ( & dmem -> spaces , global )"	163:8:5192:5225	6123407	3	True				
ANR	6123703	CallExpression	"GS_RECLAIM ( & dmem -> spaces , global )"		6123407	0					
ANR	6123704	Callee	GS_RECLAIM		6123407	0					
ANR	6123705	Identifier	GS_RECLAIM		6123407	0					
ANR	6123706	ArgumentList	& dmem -> spaces		6123407	1					
ANR	6123707	Argument	& dmem -> spaces		6123407	0					
ANR	6123708	UnaryOperationExpression	& dmem -> spaces		6123407	0					
ANR	6123709	UnaryOperator	&		6123407	0					
ANR	6123710	PtrMemberAccess	dmem -> spaces		6123407	1					
ANR	6123711	Identifier	dmem		6123407	0					
ANR	6123712	Identifier	spaces		6123407	1					
ANR	6123713	Argument	global		6123407	1					
ANR	6123714	Identifier	global		6123407	0					
ANR	6123715	ExpressionStatement	"gs_unregister_root ( ( gs_memory_t * ) lmem , & context_root , ""i_ctx_p root"" )"	164:8:5235:5305	6123407	4	True				
ANR	6123716	CallExpression	"gs_unregister_root ( ( gs_memory_t * ) lmem , & context_root , ""i_ctx_p root"" )"		6123407	0					
ANR	6123717	Callee	gs_unregister_root		6123407	0					
ANR	6123718	Identifier	gs_unregister_root		6123407	0					
ANR	6123719	ArgumentList	( gs_memory_t * ) lmem		6123407	1					
ANR	6123720	Argument	( gs_memory_t * ) lmem		6123407	0					
ANR	6123721	CastExpression	( gs_memory_t * ) lmem		6123407	0					
ANR	6123722	CastTarget	gs_memory_t *		6123407	0					
ANR	6123723	Identifier	lmem		6123407	1					
ANR	6123724	Argument	& context_root		6123407	1					
ANR	6123725	UnaryOperationExpression	& context_root		6123407	0					
ANR	6123726	UnaryOperator	&		6123407	0					
ANR	6123727	Identifier	context_root		6123407	1					
ANR	6123728	Argument	"""i_ctx_p root"""		6123407	2					
ANR	6123729	PrimaryExpression	"""i_ctx_p root"""		6123407	0					
ANR	6123730	ExpressionStatement	i_ctx_p = ctxp	165:8:5315:5329	6123407	5	True				
ANR	6123731	AssignmentExpression	i_ctx_p = ctxp		6123407	0		=			
ANR	6123732	Identifier	i_ctx_p		6123407	0					
ANR	6123733	Identifier	ctxp		6123407	1					
ANR	6123734	ExpressionStatement	dmem = & i_ctx_p -> memory	166:8:5339:5362	6123407	6	True				
ANR	6123735	AssignmentExpression	dmem = & i_ctx_p -> memory		6123407	0		=			
ANR	6123736	Identifier	dmem		6123407	0					
ANR	6123737	UnaryOperationExpression	& i_ctx_p -> memory		6123407	1					
ANR	6123738	UnaryOperator	&		6123407	0					
ANR	6123739	PtrMemberAccess	i_ctx_p -> memory		6123407	1					
ANR	6123740	Identifier	i_ctx_p		6123407	0					
ANR	6123741	Identifier	memory		6123407	1					
ANR	6123742	ExpressionStatement	"* systemdict = * ref_stack_index ( & d_stack , ref_stack_count ( & d_stack ) - 1 )"	171:4:5435:5506	6123407	15	True				
ANR	6123743	AssignmentExpression	"* systemdict = * ref_stack_index ( & d_stack , ref_stack_count ( & d_stack ) - 1 )"		6123407	0		=			
ANR	6123744	UnaryOperationExpression	* systemdict		6123407	0					
ANR	6123745	UnaryOperator	*		6123407	0					
ANR	6123746	Identifier	systemdict		6123407	1					
ANR	6123747	UnaryOperationExpression	"* ref_stack_index ( & d_stack , ref_stack_count ( & d_stack ) - 1 )"		6123407	1					
ANR	6123748	UnaryOperator	*		6123407	0					
ANR	6123749	CallExpression	"ref_stack_index ( & d_stack , ref_stack_count ( & d_stack ) - 1 )"		6123407	1					
ANR	6123750	Callee	ref_stack_index		6123407	0					
ANR	6123751	Identifier	ref_stack_index		6123407	0					
ANR	6123752	ArgumentList	& d_stack		6123407	1					
ANR	6123753	Argument	& d_stack		6123407	0					
ANR	6123754	UnaryOperationExpression	& d_stack		6123407	0					
ANR	6123755	UnaryOperator	&		6123407	0					
ANR	6123756	Identifier	d_stack		6123407	1					
ANR	6123757	Argument	ref_stack_count ( & d_stack ) - 1		6123407	1					
ANR	6123758	AdditiveExpression	ref_stack_count ( & d_stack ) - 1		6123407	0		-			
ANR	6123759	CallExpression	ref_stack_count ( & d_stack )		6123407	0					
ANR	6123760	Callee	ref_stack_count		6123407	0					
ANR	6123761	Identifier	ref_stack_count		6123407	0					
ANR	6123762	ArgumentList	& d_stack		6123407	1					
ANR	6123763	Argument	& d_stack		6123407	0					
ANR	6123764	UnaryOperationExpression	& d_stack		6123407	0					
ANR	6123765	UnaryOperator	&		6123407	0					
ANR	6123766	Identifier	d_stack		6123407	1					
ANR	6123767	PrimaryExpression	1		6123407	1					
ANR	6123768	ExpressionStatement	dicts_gc_cleanup ( )	175:4:5567:5585	6123407	16	True				
ANR	6123769	CallExpression	dicts_gc_cleanup ( )		6123407	0					
ANR	6123770	Callee	dicts_gc_cleanup		6123407	0					
ANR	6123771	Identifier	dicts_gc_cleanup		6123407	0					
ANR	6123772	ArgumentList			6123407	1					
ANR	6123773	ForStatement	for ( i = 0 ; i < nmem ; ++ i )		6123407	17					
ANR	6123774	ForInit	i = 0 ;	179:9:5634:5639	6123407	0	True				
ANR	6123775	AssignmentExpression	i = 0		6123407	0		=			
ANR	6123776	Identifier	i		6123407	0					
ANR	6123777	PrimaryExpression	0		6123407	1					
ANR	6123778	Condition	i < nmem	179:16:5641:5648	6123407	1	True				
ANR	6123779	RelationalExpression	i < nmem		6123407	0		<			
ANR	6123780	Identifier	i		6123407	0					
ANR	6123781	Identifier	nmem		6123407	1					
ANR	6123782	UnaryExpression	++ i	179:26:5651:5653	6123407	2	True				
ANR	6123783	IncDec	++		6123407	0					
ANR	6123784	Identifier	i		6123407	1					
ANR	6123785	ExpressionStatement	alloc_open_clump ( memories [ i ] )	180:8:5664:5693	6123407	3	True				
ANR	6123786	CallExpression	alloc_open_clump ( memories [ i ] )		6123407	0					
ANR	6123787	Callee	alloc_open_clump		6123407	0					
ANR	6123788	Identifier	alloc_open_clump		6123407	0					
ANR	6123789	ArgumentList	memories [ i ]		6123407	1					
ANR	6123790	Argument	memories [ i ]		6123407	0					
ANR	6123791	ArrayIndexing	memories [ i ]		6123407	0					
ANR	6123792	Identifier	memories		6123407	0					
ANR	6123793	Identifier	i		6123407	1					
ANR	6123794	ExpressionStatement	code = context_state_load ( i_ctx_p )	188:4:6002:6036	6123407	18	True				
ANR	6123795	AssignmentExpression	code = context_state_load ( i_ctx_p )		6123407	0		=			
ANR	6123796	Identifier	code		6123407	0					
ANR	6123797	CallExpression	context_state_load ( i_ctx_p )		6123407	1					
ANR	6123798	Callee	context_state_load		6123407	0					
ANR	6123799	Identifier	context_state_load		6123407	0					
ANR	6123800	ArgumentList	i_ctx_p		6123407	1					
ANR	6123801	Argument	i_ctx_p		6123407	0					
ANR	6123802	Identifier	i_ctx_p		6123407	0					
ANR	6123803	ReturnStatement	return code ;	189:4:6042:6053	6123407	19	True				
ANR	6123804	Identifier	code		6123407	0					
ANR	6123805	ReturnType	static int		6123407	1					
ANR	6123806	Identifier	gs_vmreclaim		6123407	2					
ANR	6123807	ParameterList	"gs_dual_memory_t * dmem , bool global"		6123407	3					
ANR	6123808	Parameter	gs_dual_memory_t * dmem	106:13:3435:3456	6123407	0	True				
ANR	6123809	ParameterType	gs_dual_memory_t *		6123407	0					
ANR	6123810	Identifier	dmem		6123407	1					
ANR	6123811	Parameter	bool global	106:37:3459:3469	6123407	1	True				
ANR	6123812	ParameterType	bool		6123407	0					
ANR	6123813	Identifier	global		6123407	1					
ANR	6123814	CFGEntryNode	ENTRY		6123407		True				
ANR	6123815	CFGExitNode	EXIT		6123407		True				
ANR	6123816	InfiniteForNode	true		6123407		True				
ANR	6123817	Symbol	ref_stack_index		6123407						
ANR	6123818	Symbol	memory		6123407						
ANR	6123819	Symbol	code		6123407						
ANR	6123820	Symbol	mem -> stable_memory		6123407						
ANR	6123821	Symbol	ctxp		6123407						
ANR	6123822	Symbol	global		6123407						
ANR	6123823	Symbol	* * dmem		6123407						
ANR	6123824	Symbol	dmem -> space_local		6123407						
ANR	6123825	Symbol	* systemdict		6123407						
ANR	6123826	Symbol	dmem -> spaces_indexed		6123407						
ANR	6123827	Symbol	mem		6123407						
ANR	6123828	Symbol	nmem		6123407						
ANR	6123829	Symbol	* dmem -> spaces_indexed		6123407						
ANR	6123830	Symbol	& dmem -> spaces		6123407						
ANR	6123831	Symbol	& d_stack		6123407						
ANR	6123832	Symbol	memories		6123407						
ANR	6123833	Symbol	lmem		6123407						
ANR	6123834	Symbol	dmem		6123407						
ANR	6123835	Symbol	context_root		6123407						
ANR	6123836	Symbol	offset_of		6123407						
ANR	6123837	Symbol	i_vm_local		6123407						
ANR	6123838	Symbol	& i_ctx_p -> memory		6123407						
ANR	6123839	Symbol	mem -> saved		6123407						
ANR	6123840	Symbol	context_state_store		6123407						
ANR	6123841	Symbol	i_vm_system		6123407						
ANR	6123842	Symbol	i		6123407						
ANR	6123843	Symbol	& ctxp		6123407						
ANR	6123844	Symbol	* ref_stack_index		6123407						
ANR	6123845	Symbol	countof		6123407						
ANR	6123846	Symbol	i_ctx_t		6123407						
ANR	6123847	Symbol	& context_root		6123407						
ANR	6123848	Symbol	* i		6123407						
ANR	6123849	Symbol	* memories		6123407						
ANR	6123850	Symbol	"* ref_stack_index ( & d_stack , ref_stack_count ( & d_stack ) - 1 )"		6123407						
ANR	6123851	Symbol	i_ctx_p		6123407						
ANR	6123852	Symbol	& mem -> saved -> state		6123407						
ANR	6123853	Symbol	ref_stack_count		6123407						
ANR	6123854	Symbol	* dmem		6123407						
ANR	6123855	Symbol	dmem -> space_system		6123407						
ANR	6123856	Symbol	context_state_load		6123407						
ANR	6123857	Symbol	dmem -> space_global		6123407						
ANR	6123858	Symbol	systemdict		6123407						
ANR	6123859	Symbol	* mem		6123407						
ANR	6123860	DeclStmt									
ANR	6123861	Decl							const op_def	const op_def [ ]	ireclaim_l2_op_defs
