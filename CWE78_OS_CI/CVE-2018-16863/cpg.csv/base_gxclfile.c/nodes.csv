command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	864900	File	data/converged/CVE-2018-16863_ghostpdl/base_gxclfile.c								
ANR	864901	DeclStmt									
ANR	864902	Decl							clist_io_procs_t	clist_io_procs_t	clist_io_procs_file
ANR	864903	ClassDef	<unnamed>	42:8:1185:1247							
ANR	864904	DeclStmt									
ANR	864905	Decl							int64_t	int64_t	blocknum
ANR	864906	DeclStmt									
ANR	864907	Decl							byte	byte *	base
ANR	864908	DeclStmt									
ANR	864909	Decl									CL_CACHE_SLOT
ANR	864910	ClassDef	<unnamed>	48:8:1258:1541							
ANR	864911	DeclStmt									
ANR	864912	Decl							int	int	block_size
ANR	864913	DeclStmt									
ANR	864914	Decl							int	int	nslots
ANR	864915	DeclStmt									
ANR	864916	Decl							int64_t	int64_t	filesize
ANR	864917	DeclStmt									
ANR	864918	Decl							gs_memory_t	gs_memory_t *	memory
ANR	864919	DeclStmt									
ANR	864920	Decl							CL_CACHE_SLOT	CL_CACHE_SLOT *	slots
ANR	864921	DeclStmt									
ANR	864922	Decl							byte	byte *	base
ANR	864923	DeclStmt									
ANR	864924	Decl									CL_CACHE
ANR	864925	DeclStmt									
ANR	864926	Decl							CL_CACHE	CL_CACHE * ( gs_memory_t * mem )	cl_cache_alloc
ANR	864927	DeclStmt									
ANR	864928	Decl							void	void ( CL_CACHE * cache )	cl_cache_destroy
ANR	864929	DeclStmt									
ANR	864930	Decl							CL_CACHE	"CL_CACHE * ( CL_CACHE * cache , int nslots , int64_t block_size , int64_t filesize )"	cl_cache_read_init
ANR	864931	DeclStmt									
ANR	864932	Decl							int	"int ( byte * data , int len , int64_t pos , CL_CACHE * cache )"	cl_cache_read
ANR	864933	DeclStmt									
ANR	864934	Decl							CL_CACHE_SLOT	"CL_CACHE_SLOT * ( CL_CACHE * cache , int64_t pos )"	cl_cache_get_empty_slot
ANR	864935	DeclStmt									
ANR	864936	Decl							void	"void ( CL_CACHE * cache , CL_CACHE_SLOT * slot , int64_t pos , byte * data , int len )"	cl_cache_load_slot
ANR	864937	Function	cl_cache_alloc	68:0:2065:2524							
ANR	864938	FunctionDef	cl_cache_alloc (gs_memory_t * mem)		864937	0					
ANR	864939	CompoundStatement		70:0:2109:2524	864937	0					
ANR	864940	IdentifierDeclStatement	CL_CACHE * cache ;	71:4:2115:2130	864937	0	True				
ANR	864941	IdentifierDecl	* cache		864937	0					
ANR	864942	IdentifierDeclType	CL_CACHE *		864937	0					
ANR	864943	Identifier	cache		864937	1					
ANR	864944	ExpressionStatement	"cache = ( CL_CACHE * ) gs_alloc_bytes ( mem , sizeof ( CL_CACHE ) , ""alloc CL_CACHE"" )"	74:4:2225:2300	864937	1	True				
ANR	864945	AssignmentExpression	"cache = ( CL_CACHE * ) gs_alloc_bytes ( mem , sizeof ( CL_CACHE ) , ""alloc CL_CACHE"" )"		864937	0		=			
ANR	864946	Identifier	cache		864937	0					
ANR	864947	CastExpression	"( CL_CACHE * ) gs_alloc_bytes ( mem , sizeof ( CL_CACHE ) , ""alloc CL_CACHE"" )"		864937	1					
ANR	864948	CastTarget	CL_CACHE *		864937	0					
ANR	864949	CallExpression	"gs_alloc_bytes ( mem , sizeof ( CL_CACHE ) , ""alloc CL_CACHE"" )"		864937	1					
ANR	864950	Callee	gs_alloc_bytes		864937	0					
ANR	864951	Identifier	gs_alloc_bytes		864937	0					
ANR	864952	ArgumentList	mem		864937	1					
ANR	864953	Argument	mem		864937	0					
ANR	864954	Identifier	mem		864937	0					
ANR	864955	Argument	sizeof ( CL_CACHE )		864937	1					
ANR	864956	SizeofExpression	sizeof ( CL_CACHE )		864937	0					
ANR	864957	Sizeof	sizeof		864937	0					
ANR	864958	SizeofOperand	CL_CACHE		864937	1					
ANR	864959	Argument	"""alloc CL_CACHE"""		864937	2					
ANR	864960	PrimaryExpression	"""alloc CL_CACHE"""		864937	0					
ANR	864961	IfStatement	if ( cache != NULL )		864937	2					
ANR	864962	Condition	cache != NULL	75:8:2310:2322	864937	0	True				
ANR	864963	EqualityExpression	cache != NULL		864937	0		!=			
ANR	864964	Identifier	cache		864937	0					
ANR	864965	Identifier	NULL		864937	1					
ANR	864966	CompoundStatement		6:23:215:215	864937	1					
ANR	864967	ExpressionStatement	cache -> filesize = 0	76:8:2335:2354	864937	0	True				
ANR	864968	AssignmentExpression	cache -> filesize = 0		864937	0		=			
ANR	864969	PtrMemberAccess	cache -> filesize		864937	0					
ANR	864970	Identifier	cache		864937	0					
ANR	864971	Identifier	filesize		864937	1					
ANR	864972	PrimaryExpression	0		864937	1					
ANR	864973	ExpressionStatement	cache -> nslots = 0	77:8:2364:2381	864937	1	True				
ANR	864974	AssignmentExpression	cache -> nslots = 0		864937	0		=			
ANR	864975	PtrMemberAccess	cache -> nslots		864937	0					
ANR	864976	Identifier	cache		864937	0					
ANR	864977	Identifier	nslots		864937	1					
ANR	864978	PrimaryExpression	0		864937	1					
ANR	864979	ExpressionStatement	cache -> block_size = 0	78:8:2391:2412	864937	2	True				
ANR	864980	AssignmentExpression	cache -> block_size = 0		864937	0		=			
ANR	864981	PtrMemberAccess	cache -> block_size		864937	0					
ANR	864982	Identifier	cache		864937	0					
ANR	864983	Identifier	block_size		864937	1					
ANR	864984	PrimaryExpression	0		864937	1					
ANR	864985	ExpressionStatement	cache -> slots = NULL	79:8:2422:2441	864937	3	True				
ANR	864986	AssignmentExpression	cache -> slots = NULL		864937	0		=			
ANR	864987	PtrMemberAccess	cache -> slots		864937	0					
ANR	864988	Identifier	cache		864937	0					
ANR	864989	Identifier	slots		864937	1					
ANR	864990	Identifier	NULL		864937	1					
ANR	864991	ExpressionStatement	cache -> base = NULL	80:8:2451:2469	864937	4	True				
ANR	864992	AssignmentExpression	cache -> base = NULL		864937	0		=			
ANR	864993	PtrMemberAccess	cache -> base		864937	0					
ANR	864994	Identifier	cache		864937	0					
ANR	864995	Identifier	base		864937	1					
ANR	864996	Identifier	NULL		864937	1					
ANR	864997	ExpressionStatement	cache -> memory = mem	81:8:2479:2498	864937	5	True				
ANR	864998	AssignmentExpression	cache -> memory = mem		864937	0		=			
ANR	864999	PtrMemberAccess	cache -> memory		864937	0					
ANR	865000	Identifier	cache		864937	0					
ANR	865001	Identifier	memory		864937	1					
ANR	865002	Identifier	mem		864937	1					
ANR	865003	ReturnStatement	return cache ;	83:4:2510:2522	864937	3	True				
ANR	865004	Identifier	cache		864937	0					
ANR	865005	ReturnType	CL_CACHE *		864937	1					
ANR	865006	Identifier	cl_cache_alloc		864937	2					
ANR	865007	ParameterList	gs_memory_t * mem		864937	3					
ANR	865008	Parameter	gs_memory_t * mem	69:15:2091:2106	864937	0	True				
ANR	865009	ParameterType	gs_memory_t *		864937	0					
ANR	865010	Identifier	mem		864937	1					
ANR	865011	CFGEntryNode	ENTRY		864937		True				
ANR	865012	CFGExitNode	EXIT		864937		True				
ANR	865013	Symbol	cache		864937						
ANR	865014	Symbol	gs_alloc_bytes		864937						
ANR	865015	Symbol	NULL		864937						
ANR	865016	Symbol	cache -> slots		864937						
ANR	865017	Symbol	mem		864937						
ANR	865018	Symbol	* cache		864937						
ANR	865019	Symbol	cache -> block_size		864937						
ANR	865020	Symbol	cache -> filesize		864937						
ANR	865021	Symbol	cache -> nslots		864937						
ANR	865022	Symbol	cache -> base		864937						
ANR	865023	Symbol	cache -> memory		864937						
ANR	865024	Function	cl_cache_destroy	86:0:2527:2861							
ANR	865025	FunctionDef	cl_cache_destroy (CL_CACHE * cache)		865024	0					
ANR	865026	CompoundStatement		88:0:2566:2861	865024	0					
ANR	865027	IfStatement	if ( cache == NULL )		865024	0					
ANR	865028	Condition	cache == NULL	89:8:2576:2588	865024	0	True				
ANR	865029	EqualityExpression	cache == NULL		865024	0		==			
ANR	865030	Identifier	cache		865024	0					
ANR	865031	Identifier	NULL		865024	1					
ANR	865032	ReturnStatement	return ;	90:8:2599:2605	865024	1	True				
ANR	865033	IfStatement	if ( cache -> slots != NULL )		865024	1					
ANR	865034	Condition	cache -> slots != NULL	92:8:2616:2635	865024	0	True				
ANR	865035	EqualityExpression	cache -> slots != NULL		865024	0		!=			
ANR	865036	PtrMemberAccess	cache -> slots		865024	0					
ANR	865037	Identifier	cache		865024	0					
ANR	865038	Identifier	slots		865024	1					
ANR	865039	Identifier	NULL		865024	1					
ANR	865040	CompoundStatement		5:30:71:71	865024	1					
ANR	865041	ExpressionStatement	"gs_free_object ( cache -> memory , cache -> base , ""CL_CACHE SLOT data"" )"	93:8:2648:2712	865024	0	True				
ANR	865042	CallExpression	"gs_free_object ( cache -> memory , cache -> base , ""CL_CACHE SLOT data"" )"		865024	0					
ANR	865043	Callee	gs_free_object		865024	0					
ANR	865044	Identifier	gs_free_object		865024	0					
ANR	865045	ArgumentList	cache -> memory		865024	1					
ANR	865046	Argument	cache -> memory		865024	0					
ANR	865047	PtrMemberAccess	cache -> memory		865024	0					
ANR	865048	Identifier	cache		865024	0					
ANR	865049	Identifier	memory		865024	1					
ANR	865050	Argument	cache -> base		865024	1					
ANR	865051	PtrMemberAccess	cache -> base		865024	0					
ANR	865052	Identifier	cache		865024	0					
ANR	865053	Identifier	base		865024	1					
ANR	865054	Argument	"""CL_CACHE SLOT data"""		865024	2					
ANR	865055	PrimaryExpression	"""CL_CACHE SLOT data"""		865024	0					
ANR	865056	ExpressionStatement	"gs_free_object ( cache -> memory , cache -> slots , ""CL_CACHE slots array"" )"	94:8:2722:2789	865024	1	True				
ANR	865057	CallExpression	"gs_free_object ( cache -> memory , cache -> slots , ""CL_CACHE slots array"" )"		865024	0					
ANR	865058	Callee	gs_free_object		865024	0					
ANR	865059	Identifier	gs_free_object		865024	0					
ANR	865060	ArgumentList	cache -> memory		865024	1					
ANR	865061	Argument	cache -> memory		865024	0					
ANR	865062	PtrMemberAccess	cache -> memory		865024	0					
ANR	865063	Identifier	cache		865024	0					
ANR	865064	Identifier	memory		865024	1					
ANR	865065	Argument	cache -> slots		865024	1					
ANR	865066	PtrMemberAccess	cache -> slots		865024	0					
ANR	865067	Identifier	cache		865024	0					
ANR	865068	Identifier	slots		865024	1					
ANR	865069	Argument	"""CL_CACHE slots array"""		865024	2					
ANR	865070	PrimaryExpression	"""CL_CACHE slots array"""		865024	0					
ANR	865071	ExpressionStatement	"gs_free_object ( cache -> memory , cache , ""CL_CACHE for IFILE"" )"	96:4:2801:2859	865024	2	True				
ANR	865072	CallExpression	"gs_free_object ( cache -> memory , cache , ""CL_CACHE for IFILE"" )"		865024	0					
ANR	865073	Callee	gs_free_object		865024	0					
ANR	865074	Identifier	gs_free_object		865024	0					
ANR	865075	ArgumentList	cache -> memory		865024	1					
ANR	865076	Argument	cache -> memory		865024	0					
ANR	865077	PtrMemberAccess	cache -> memory		865024	0					
ANR	865078	Identifier	cache		865024	0					
ANR	865079	Identifier	memory		865024	1					
ANR	865080	Argument	cache		865024	1					
ANR	865081	Identifier	cache		865024	0					
ANR	865082	Argument	"""CL_CACHE for IFILE"""		865024	2					
ANR	865083	PrimaryExpression	"""CL_CACHE for IFILE"""		865024	0					
ANR	865084	ReturnType	void		865024	1					
ANR	865085	Identifier	cl_cache_destroy		865024	2					
ANR	865086	ParameterList	CL_CACHE * cache		865024	3					
ANR	865087	Parameter	CL_CACHE * cache	87:17:2549:2563	865024	0	True				
ANR	865088	ParameterType	CL_CACHE *		865024	0					
ANR	865089	Identifier	cache		865024	1					
ANR	865090	CFGEntryNode	ENTRY		865024		True				
ANR	865091	CFGExitNode	EXIT		865024		True				
ANR	865092	Symbol	cache		865024						
ANR	865093	Symbol	NULL		865024						
ANR	865094	Symbol	cache -> slots		865024						
ANR	865095	Symbol	* cache		865024						
ANR	865096	Symbol	cache -> base		865024						
ANR	865097	Symbol	cache -> memory		865024						
ANR	865098	Function	cl_cache_read_init	100:0:2929:4751							
ANR	865099	FunctionDef	"cl_cache_read_init (CL_CACHE * cache , int nslots , int64_t block_size , int64_t filesize)"		865098	0					
ANR	865100	CompoundStatement		102:0:3026:4751	865098	0					
ANR	865101	IfStatement	if ( cache == NULL || cache -> filesize != 0 )		865098	0					
ANR	865102	Condition	cache == NULL || cache -> filesize != 0	104:8:3125:3161	865098	0	True				
ANR	865103	OrExpression	cache == NULL || cache -> filesize != 0		865098	0		||			
ANR	865104	EqualityExpression	cache == NULL		865098	0		==			
ANR	865105	Identifier	cache		865098	0					
ANR	865106	Identifier	NULL		865098	1					
ANR	865107	EqualityExpression	cache -> filesize != 0		865098	1		!=			
ANR	865108	PtrMemberAccess	cache -> filesize		865098	0					
ANR	865109	Identifier	cache		865098	0					
ANR	865110	Identifier	filesize		865098	1					
ANR	865111	PrimaryExpression	0		865098	1					
ANR	865112	ReturnStatement	return cache ;	105:8:3172:3184	865098	1	True				
ANR	865113	Identifier	cache		865098	0					
ANR	865114	IfStatement	if ( ( filesize + block_size ) / block_size < nslots )		865098	1					
ANR	865115	Condition	( filesize + block_size ) / block_size < nslots	107:8:3249:3289	865098	0	True				
ANR	865116	RelationalExpression	( filesize + block_size ) / block_size < nslots		865098	0		<			
ANR	865117	MultiplicativeExpression	( filesize + block_size ) / block_size		865098	0		/			
ANR	865118	AdditiveExpression	filesize + block_size		865098	0		+			
ANR	865119	Identifier	filesize		865098	0					
ANR	865120	Identifier	block_size		865098	1					
ANR	865121	Identifier	block_size		865098	1					
ANR	865122	Identifier	nslots		865098	1					
ANR	865123	ExpressionStatement	nslots = ( filesize + block_size ) / block_size	108:8:3300:3343	865098	1	True				
ANR	865124	AssignmentExpression	nslots = ( filesize + block_size ) / block_size		865098	0		=			
ANR	865125	Identifier	nslots		865098	0					
ANR	865126	MultiplicativeExpression	( filesize + block_size ) / block_size		865098	1		/			
ANR	865127	AdditiveExpression	filesize + block_size		865098	0		+			
ANR	865128	Identifier	filesize		865098	0					
ANR	865129	Identifier	block_size		865098	1					
ANR	865130	Identifier	block_size		865098	1					
ANR	865131	ExpressionStatement	"cache -> slots = ( CL_CACHE_SLOT * ) gs_alloc_bytes ( cache -> memory , nslots * sizeof ( CL_CACHE_SLOT ) , ""CL_CACHE slots array"" )"	109:4:3394:3566	865098	2	True				
ANR	865132	AssignmentExpression	"cache -> slots = ( CL_CACHE_SLOT * ) gs_alloc_bytes ( cache -> memory , nslots * sizeof ( CL_CACHE_SLOT ) , ""CL_CACHE slots array"" )"		865098	0		=			
ANR	865133	PtrMemberAccess	cache -> slots		865098	0					
ANR	865134	Identifier	cache		865098	0					
ANR	865135	Identifier	slots		865098	1					
ANR	865136	CastExpression	"( CL_CACHE_SLOT * ) gs_alloc_bytes ( cache -> memory , nslots * sizeof ( CL_CACHE_SLOT ) , ""CL_CACHE slots array"" )"		865098	1					
ANR	865137	CastTarget	CL_CACHE_SLOT *		865098	0					
ANR	865138	CallExpression	"gs_alloc_bytes ( cache -> memory , nslots * sizeof ( CL_CACHE_SLOT ) , ""CL_CACHE slots array"" )"		865098	1					
ANR	865139	Callee	gs_alloc_bytes		865098	0					
ANR	865140	Identifier	gs_alloc_bytes		865098	0					
ANR	865141	ArgumentList	cache -> memory		865098	1					
ANR	865142	Argument	cache -> memory		865098	0					
ANR	865143	PtrMemberAccess	cache -> memory		865098	0					
ANR	865144	Identifier	cache		865098	0					
ANR	865145	Identifier	memory		865098	1					
ANR	865146	Argument	nslots * sizeof ( CL_CACHE_SLOT )		865098	1					
ANR	865147	MultiplicativeExpression	nslots * sizeof ( CL_CACHE_SLOT )		865098	0		*			
ANR	865148	Identifier	nslots		865098	0					
ANR	865149	SizeofExpression	sizeof ( CL_CACHE_SLOT )		865098	1					
ANR	865150	Sizeof	sizeof		865098	0					
ANR	865151	SizeofOperand	CL_CACHE_SLOT		865098	1					
ANR	865152	Argument	"""CL_CACHE slots array"""		865098	2					
ANR	865153	PrimaryExpression	"""CL_CACHE slots array"""		865098	0					
ANR	865154	IfStatement	if ( cache -> slots == NULL )		865098	3					
ANR	865155	Condition	cache -> slots == NULL	111:8:3576:3595	865098	0	True				
ANR	865156	EqualityExpression	cache -> slots == NULL		865098	0		==			
ANR	865157	PtrMemberAccess	cache -> slots		865098	0					
ANR	865158	Identifier	cache		865098	0					
ANR	865159	Identifier	slots		865098	1					
ANR	865160	Identifier	NULL		865098	1					
ANR	865161	CompoundStatement		10:30:571:571	865098	1					
ANR	865162	ExpressionStatement	"gs_free_object ( cache -> memory , cache , ""Free CL_CACHE for IFILE"" )"	112:8:3608:3671	865098	0	True				
ANR	865163	CallExpression	"gs_free_object ( cache -> memory , cache , ""Free CL_CACHE for IFILE"" )"		865098	0					
ANR	865164	Callee	gs_free_object		865098	0					
ANR	865165	Identifier	gs_free_object		865098	0					
ANR	865166	ArgumentList	cache -> memory		865098	1					
ANR	865167	Argument	cache -> memory		865098	0					
ANR	865168	PtrMemberAccess	cache -> memory		865098	0					
ANR	865169	Identifier	cache		865098	0					
ANR	865170	Identifier	memory		865098	1					
ANR	865171	Argument	cache		865098	1					
ANR	865172	Identifier	cache		865098	0					
ANR	865173	Argument	"""Free CL_CACHE for IFILE"""		865098	2					
ANR	865174	PrimaryExpression	"""Free CL_CACHE for IFILE"""		865098	0					
ANR	865175	ExpressionStatement	cache = NULL	113:8:3681:3693	865098	1	True				
ANR	865176	AssignmentExpression	cache = NULL		865098	0		=			
ANR	865177	Identifier	cache		865098	0					
ANR	865178	Identifier	NULL		865098	1					
ANR	865179	ElseStatement	else		865098	0					
ANR	865180	CompoundStatement		13:11:706:706	865098	0					
ANR	865181	ExpressionStatement	"cache -> slots [ 0 ] . base = ( byte * ) gs_alloc_bytes ( cache -> memory , nslots * block_size , ""CL_CACHE_SLOT data"" )"	115:8:3743:3901	865098	0	True				
ANR	865182	AssignmentExpression	"cache -> slots [ 0 ] . base = ( byte * ) gs_alloc_bytes ( cache -> memory , nslots * block_size , ""CL_CACHE_SLOT data"" )"		865098	0		=			
ANR	865183	MemberAccess	cache -> slots [ 0 ] . base		865098	0					
ANR	865184	ArrayIndexing	cache -> slots [ 0 ]		865098	0					
ANR	865185	PtrMemberAccess	cache -> slots		865098	0					
ANR	865186	Identifier	cache		865098	0					
ANR	865187	Identifier	slots		865098	1					
ANR	865188	PrimaryExpression	0		865098	1					
ANR	865189	Identifier	base		865098	1					
ANR	865190	CastExpression	"( byte * ) gs_alloc_bytes ( cache -> memory , nslots * block_size , ""CL_CACHE_SLOT data"" )"		865098	1					
ANR	865191	CastTarget	byte *		865098	0					
ANR	865192	CallExpression	"gs_alloc_bytes ( cache -> memory , nslots * block_size , ""CL_CACHE_SLOT data"" )"		865098	1					
ANR	865193	Callee	gs_alloc_bytes		865098	0					
ANR	865194	Identifier	gs_alloc_bytes		865098	0					
ANR	865195	ArgumentList	cache -> memory		865098	1					
ANR	865196	Argument	cache -> memory		865098	0					
ANR	865197	PtrMemberAccess	cache -> memory		865098	0					
ANR	865198	Identifier	cache		865098	0					
ANR	865199	Identifier	memory		865098	1					
ANR	865200	Argument	nslots * block_size		865098	1					
ANR	865201	MultiplicativeExpression	nslots * block_size		865098	0		*			
ANR	865202	Identifier	nslots		865098	0					
ANR	865203	Identifier	block_size		865098	1					
ANR	865204	Argument	"""CL_CACHE_SLOT data"""		865098	2					
ANR	865205	PrimaryExpression	"""CL_CACHE_SLOT data"""		865098	0					
ANR	865206	IfStatement	if ( cache -> slots [ 0 ] . base == NULL )		865098	1					
ANR	865207	Condition	cache -> slots [ 0 ] . base == NULL	117:12:3915:3942	865098	0	True				
ANR	865208	EqualityExpression	cache -> slots [ 0 ] . base == NULL		865098	0		==			
ANR	865209	MemberAccess	cache -> slots [ 0 ] . base		865098	0					
ANR	865210	ArrayIndexing	cache -> slots [ 0 ]		865098	0					
ANR	865211	PtrMemberAccess	cache -> slots		865098	0					
ANR	865212	Identifier	cache		865098	0					
ANR	865213	Identifier	slots		865098	1					
ANR	865214	PrimaryExpression	0		865098	1					
ANR	865215	Identifier	base		865098	1					
ANR	865216	Identifier	NULL		865098	1					
ANR	865217	CompoundStatement		16:42:918:918	865098	1					
ANR	865218	ExpressionStatement	"gs_free_object ( cache -> memory , cache -> slots , ""Free CL_CACHE for IFILE"" )"	118:12:3959:4029	865098	0	True				
ANR	865219	CallExpression	"gs_free_object ( cache -> memory , cache -> slots , ""Free CL_CACHE for IFILE"" )"		865098	0					
ANR	865220	Callee	gs_free_object		865098	0					
ANR	865221	Identifier	gs_free_object		865098	0					
ANR	865222	ArgumentList	cache -> memory		865098	1					
ANR	865223	Argument	cache -> memory		865098	0					
ANR	865224	PtrMemberAccess	cache -> memory		865098	0					
ANR	865225	Identifier	cache		865098	0					
ANR	865226	Identifier	memory		865098	1					
ANR	865227	Argument	cache -> slots		865098	1					
ANR	865228	PtrMemberAccess	cache -> slots		865098	0					
ANR	865229	Identifier	cache		865098	0					
ANR	865230	Identifier	slots		865098	1					
ANR	865231	Argument	"""Free CL_CACHE for IFILE"""		865098	2					
ANR	865232	PrimaryExpression	"""Free CL_CACHE for IFILE"""		865098	0					
ANR	865233	ExpressionStatement	"gs_free_object ( cache -> memory , cache , ""Free CL_CACHE for IFILE"" )"	119:12:4043:4106	865098	1	True				
ANR	865234	CallExpression	"gs_free_object ( cache -> memory , cache , ""Free CL_CACHE for IFILE"" )"		865098	0					
ANR	865235	Callee	gs_free_object		865098	0					
ANR	865236	Identifier	gs_free_object		865098	0					
ANR	865237	ArgumentList	cache -> memory		865098	1					
ANR	865238	Argument	cache -> memory		865098	0					
ANR	865239	PtrMemberAccess	cache -> memory		865098	0					
ANR	865240	Identifier	cache		865098	0					
ANR	865241	Identifier	memory		865098	1					
ANR	865242	Argument	cache		865098	1					
ANR	865243	Identifier	cache		865098	0					
ANR	865244	Argument	"""Free CL_CACHE for IFILE"""		865098	2					
ANR	865245	PrimaryExpression	"""Free CL_CACHE for IFILE"""		865098	0					
ANR	865246	ExpressionStatement	cache = NULL	120:12:4120:4132	865098	2	True				
ANR	865247	AssignmentExpression	cache = NULL		865098	0		=			
ANR	865248	Identifier	cache		865098	0					
ANR	865249	Identifier	NULL		865098	1					
ANR	865250	ElseStatement	else		865098	0					
ANR	865251	CompoundStatement		22:12:1211:1216	865098	0					
ANR	865252	IdentifierDeclStatement	int i ;	123:12:4238:4243	865098	0	True				
ANR	865253	IdentifierDecl	i		865098	0					
ANR	865254	IdentifierDeclType	int		865098	0					
ANR	865255	Identifier	i		865098	1					
ANR	865256	ForStatement	for ( i = 0 ; i < nslots ; i ++ )		865098	1					
ANR	865257	ForInit	i = 0 ;	125:17:4263:4266	865098	0	True				
ANR	865258	AssignmentExpression	i = 0		865098	0		=			
ANR	865259	Identifier	i		865098	0					
ANR	865260	PrimaryExpression	0		865098	1					
ANR	865261	Condition	i < nslots	125:22:4268:4277	865098	1	True				
ANR	865262	RelationalExpression	i < nslots		865098	0		<			
ANR	865263	Identifier	i		865098	0					
ANR	865264	Identifier	nslots		865098	1					
ANR	865265	PostIncDecOperationExpression	i ++	125:34:4280:4282	865098	2	True				
ANR	865266	Identifier	i		865098	0					
ANR	865267	IncDec	++		865098	1					
ANR	865268	CompoundStatement		24:39:1258:1258	865098	3					
ANR	865269	ExpressionStatement	cache -> slots [ i ] . blocknum = CL_CACHE_SLOT_EMPTY	126:16:4303:4349	865098	0	True				
ANR	865270	AssignmentExpression	cache -> slots [ i ] . blocknum = CL_CACHE_SLOT_EMPTY		865098	0		=			
ANR	865271	MemberAccess	cache -> slots [ i ] . blocknum		865098	0					
ANR	865272	ArrayIndexing	cache -> slots [ i ]		865098	0					
ANR	865273	PtrMemberAccess	cache -> slots		865098	0					
ANR	865274	Identifier	cache		865098	0					
ANR	865275	Identifier	slots		865098	1					
ANR	865276	Identifier	i		865098	1					
ANR	865277	Identifier	blocknum		865098	1					
ANR	865278	Identifier	CL_CACHE_SLOT_EMPTY		865098	1					
ANR	865279	ExpressionStatement	cache -> slots [ i ] . base = cache -> slots [ 0 ] . base + ( i * block_size )	127:16:4367:4429	865098	1	True				
ANR	865280	AssignmentExpression	cache -> slots [ i ] . base = cache -> slots [ 0 ] . base + ( i * block_size )		865098	0		=			
ANR	865281	MemberAccess	cache -> slots [ i ] . base		865098	0					
ANR	865282	ArrayIndexing	cache -> slots [ i ]		865098	0					
ANR	865283	PtrMemberAccess	cache -> slots		865098	0					
ANR	865284	Identifier	cache		865098	0					
ANR	865285	Identifier	slots		865098	1					
ANR	865286	Identifier	i		865098	1					
ANR	865287	Identifier	base		865098	1					
ANR	865288	AdditiveExpression	cache -> slots [ 0 ] . base + ( i * block_size )		865098	1		+			
ANR	865289	MemberAccess	cache -> slots [ 0 ] . base		865098	0					
ANR	865290	ArrayIndexing	cache -> slots [ 0 ]		865098	0					
ANR	865291	PtrMemberAccess	cache -> slots		865098	0					
ANR	865292	Identifier	cache		865098	0					
ANR	865293	Identifier	slots		865098	1					
ANR	865294	PrimaryExpression	0		865098	1					
ANR	865295	Identifier	base		865098	1					
ANR	865296	MultiplicativeExpression	i * block_size		865098	1		*			
ANR	865297	Identifier	i		865098	0					
ANR	865298	Identifier	block_size		865098	1					
ANR	865299	ExpressionStatement	cache -> base = cache -> slots [ 0 ] . base	129:12:4457:4491	865098	2	True				
ANR	865300	AssignmentExpression	cache -> base = cache -> slots [ 0 ] . base		865098	0		=			
ANR	865301	PtrMemberAccess	cache -> base		865098	0					
ANR	865302	Identifier	cache		865098	0					
ANR	865303	Identifier	base		865098	1					
ANR	865304	MemberAccess	cache -> slots [ 0 ] . base		865098	1					
ANR	865305	ArrayIndexing	cache -> slots [ 0 ]		865098	0					
ANR	865306	PtrMemberAccess	cache -> slots		865098	0					
ANR	865307	Identifier	cache		865098	0					
ANR	865308	Identifier	slots		865098	1					
ANR	865309	PrimaryExpression	0		865098	1					
ANR	865310	Identifier	base		865098	1					
ANR	865311	ExpressionStatement	cache -> nslots = nslots	130:12:4569:4591	865098	3	True				
ANR	865312	AssignmentExpression	cache -> nslots = nslots		865098	0		=			
ANR	865313	PtrMemberAccess	cache -> nslots		865098	0					
ANR	865314	Identifier	cache		865098	0					
ANR	865315	Identifier	nslots		865098	1					
ANR	865316	Identifier	nslots		865098	1					
ANR	865317	ExpressionStatement	cache -> block_size = block_size	131:12:4605:4635	865098	4	True				
ANR	865318	AssignmentExpression	cache -> block_size = block_size		865098	0		=			
ANR	865319	PtrMemberAccess	cache -> block_size		865098	0					
ANR	865320	Identifier	cache		865098	0					
ANR	865321	Identifier	block_size		865098	1					
ANR	865322	Identifier	block_size		865098	1					
ANR	865323	ExpressionStatement	cache -> filesize = filesize	132:12:4649:4675	865098	5	True				
ANR	865324	AssignmentExpression	cache -> filesize = filesize		865098	0		=			
ANR	865325	PtrMemberAccess	cache -> filesize		865098	0					
ANR	865326	Identifier	cache		865098	0					
ANR	865327	Identifier	filesize		865098	1					
ANR	865328	Identifier	filesize		865098	1					
ANR	865329	ReturnStatement	return cache ;	135:4:4697:4709	865098	4	True				
ANR	865330	Identifier	cache		865098	0					
ANR	865331	ReturnType	CL_CACHE *		865098	1					
ANR	865332	Identifier	cl_cache_read_init		865098	2					
ANR	865333	ParameterList	"CL_CACHE * cache , int nslots , int64_t block_size , int64_t filesize"		865098	3					
ANR	865334	Parameter	CL_CACHE * cache	101:19:2959:2973	865098	0	True				
ANR	865335	ParameterType	CL_CACHE *		865098	0					
ANR	865336	Identifier	cache		865098	1					
ANR	865337	Parameter	int nslots	101:36:2976:2985	865098	1	True				
ANR	865338	ParameterType	int		865098	0					
ANR	865339	Identifier	nslots		865098	1					
ANR	865340	Parameter	int64_t block_size	101:48:2988:3005	865098	2	True				
ANR	865341	ParameterType	int64_t		865098	0					
ANR	865342	Identifier	block_size		865098	1					
ANR	865343	Parameter	int64_t filesize	101:68:3008:3023	865098	3	True				
ANR	865344	ParameterType	int64_t		865098	0					
ANR	865345	Identifier	filesize		865098	1					
ANR	865346	CFGEntryNode	ENTRY		865098		True				
ANR	865347	CFGExitNode	EXIT		865098		True				
ANR	865348	Symbol	cache		865098						
ANR	865349	Symbol	gs_alloc_bytes		865098						
ANR	865350	Symbol	NULL		865098						
ANR	865351	Symbol	cache -> slots		865098						
ANR	865352	Symbol	cache -> slots [ i ] . base		865098						
ANR	865353	Symbol	cache -> slots [ 0 ] . base		865098						
ANR	865354	Symbol	i		865098						
ANR	865355	Symbol	filesize		865098						
ANR	865356	Symbol	* cache		865098						
ANR	865357	Symbol	cache -> memory		865098						
ANR	865358	Symbol	cache -> nslots		865098						
ANR	865359	Symbol	CL_CACHE_SLOT_EMPTY		865098						
ANR	865360	Symbol	* i		865098						
ANR	865361	Symbol	* * cache		865098						
ANR	865362	Symbol	* cache -> slots		865098						
ANR	865363	Symbol	nslots		865098						
ANR	865364	Symbol	block_size		865098						
ANR	865365	Symbol	cache -> slots [ i ] . blocknum		865098						
ANR	865366	Symbol	cache -> block_size		865098						
ANR	865367	Symbol	cache -> filesize		865098						
ANR	865368	Symbol	cache -> base		865098						
ANR	865369	Function	cl_cache_read	141:0:4932:6096							
ANR	865370	FunctionDef	"cl_cache_read (byte * data , int len , int64_t pos , CL_CACHE * cache)"		865369	0					
ANR	865371	CompoundStatement		143:0:5001:6096	865369	0					
ANR	865372	IdentifierDeclStatement	int nread = 0 ;	144:4:5007:5020	865369	0	True				
ANR	865373	IdentifierDecl	nread = 0		865369	0					
ANR	865374	IdentifierDeclType	int		865369	0					
ANR	865375	Identifier	nread		865369	1					
ANR	865376	AssignmentExpression	nread = 0		865369	2		=			
ANR	865377	Identifier	nread		865369	0					
ANR	865378	PrimaryExpression	0		865369	1					
ANR	865379	IdentifierDeclStatement	int slot ;	145:4:5026:5034	865369	1	True				
ANR	865380	IdentifierDecl	slot		865369	0					
ANR	865381	IdentifierDeclType	int		865369	0					
ANR	865382	Identifier	slot		865369	1					
ANR	865383	IdentifierDeclStatement	int offset ;	146:4:5040:5050	865369	2	True				
ANR	865384	IdentifierDecl	offset		865369	0					
ANR	865385	IdentifierDeclType	int		865369	0					
ANR	865386	Identifier	offset		865369	1					
ANR	865387	IdentifierDeclStatement	int64_t blocknum = pos / cache -> block_size ;	147:4:5056:5098	865369	3	True				
ANR	865388	IdentifierDecl	blocknum = pos / cache -> block_size		865369	0					
ANR	865389	IdentifierDeclType	int64_t		865369	0					
ANR	865390	Identifier	blocknum		865369	1					
ANR	865391	AssignmentExpression	blocknum = pos / cache -> block_size		865369	2		=			
ANR	865392	Identifier	blocknum		865369	0					
ANR	865393	MultiplicativeExpression	pos / cache -> block_size		865369	1		/			
ANR	865394	Identifier	pos		865369	0					
ANR	865395	PtrMemberAccess	cache -> block_size		865369	1					
ANR	865396	Identifier	cache		865369	0					
ANR	865397	Identifier	block_size		865369	1					
ANR	865398	IfStatement	if ( pos >= cache -> filesize )		865369	4					
ANR	865399	Condition	pos >= cache -> filesize	149:8:5109:5130	865369	0	True				
ANR	865400	RelationalExpression	pos >= cache -> filesize		865369	0		>=			
ANR	865401	Identifier	pos		865369	0					
ANR	865402	PtrMemberAccess	cache -> filesize		865369	1					
ANR	865403	Identifier	cache		865369	0					
ANR	865404	Identifier	filesize		865369	1					
ANR	865405	ReturnStatement	return - 1 ;	150:8:5141:5150	865369	1	True				
ANR	865406	UnaryOperationExpression	- 1		865369	0					
ANR	865407	UnaryOperator	-		865369	0					
ANR	865408	PrimaryExpression	1		865369	1					
ANR	865409	ForStatement	for ( slot = 0 ; slot < cache -> nslots ; slot ++ )		865369	5					
ANR	865410	ForInit	slot = 0 ;	153:9:5186:5194	865369	0	True				
ANR	865411	AssignmentExpression	slot = 0		865369	0		=			
ANR	865412	Identifier	slot		865369	0					
ANR	865413	PrimaryExpression	0		865369	1					
ANR	865414	Condition	slot < cache -> nslots	153:19:5196:5215	865369	1	True				
ANR	865415	RelationalExpression	slot < cache -> nslots		865369	0		<			
ANR	865416	Identifier	slot		865369	0					
ANR	865417	PtrMemberAccess	cache -> nslots		865369	1					
ANR	865418	Identifier	cache		865369	0					
ANR	865419	Identifier	nslots		865369	1					
ANR	865420	PostIncDecOperationExpression	slot ++	153:41:5218:5223	865369	2	True				
ANR	865421	Identifier	slot		865369	0					
ANR	865422	IncDec	++		865369	1					
ANR	865423	CompoundStatement		11:49:224:224	865369	3					
ANR	865424	IfStatement	if ( blocknum == cache -> slots [ slot ] . blocknum )		865369	0					
ANR	865425	Condition	blocknum == cache -> slots [ slot ] . blocknum	154:12:5240:5278	865369	0	True				
ANR	865426	EqualityExpression	blocknum == cache -> slots [ slot ] . blocknum		865369	0		==			
ANR	865427	Identifier	blocknum		865369	0					
ANR	865428	MemberAccess	cache -> slots [ slot ] . blocknum		865369	1					
ANR	865429	ArrayIndexing	cache -> slots [ slot ]		865369	0					
ANR	865430	PtrMemberAccess	cache -> slots		865369	0					
ANR	865431	Identifier	cache		865369	0					
ANR	865432	Identifier	slots		865369	1					
ANR	865433	Identifier	slot		865369	1					
ANR	865434	Identifier	blocknum		865369	1					
ANR	865435	BreakStatement	break ;	155:12:5293:5298	865369	1	True				
ANR	865436	IfStatement	if ( slot >= cache -> nslots )		865369	6					
ANR	865437	Condition	slot >= cache -> nslots	157:8:5314:5334	865369	0	True				
ANR	865438	RelationalExpression	slot >= cache -> nslots		865369	0		>=			
ANR	865439	Identifier	slot		865369	0					
ANR	865440	PtrMemberAccess	cache -> nslots		865369	1					
ANR	865441	Identifier	cache		865369	0					
ANR	865442	Identifier	nslots		865369	1					
ANR	865443	ReturnStatement	return 0 ;	158:8:5345:5353	865369	1	True				
ANR	865444	PrimaryExpression	0		865369	0					
ANR	865445	IfStatement	if ( slot != 0 )		865369	7					
ANR	865446	Condition	slot != 0	160:8:5403:5411	865369	0	True				
ANR	865447	EqualityExpression	slot != 0		865369	0		!=			
ANR	865448	Identifier	slot		865369	0					
ANR	865449	PrimaryExpression	0		865369	1					
ANR	865450	CompoundStatement		21:8:538:543	865369	1					
ANR	865451	IdentifierDeclStatement	byte * base = cache -> slots [ slot ] . base ;	162:8:5494:5530	865369	0	True				
ANR	865452	IdentifierDecl	* base = cache -> slots [ slot ] . base		865369	0					
ANR	865453	IdentifierDeclType	byte *		865369	0					
ANR	865454	Identifier	base		865369	1					
ANR	865455	AssignmentExpression	* base = cache -> slots [ slot ] . base		865369	2		=			
ANR	865456	Identifier	base		865369	0					
ANR	865457	MemberAccess	cache -> slots [ slot ] . base		865369	1					
ANR	865458	ArrayIndexing	cache -> slots [ slot ]		865369	0					
ANR	865459	PtrMemberAccess	cache -> slots		865369	0					
ANR	865460	Identifier	cache		865369	0					
ANR	865461	Identifier	slots		865369	1					
ANR	865462	Identifier	slot		865369	1					
ANR	865463	Identifier	base		865369	1					
ANR	865464	IdentifierDeclStatement	int i ;	163:8:5540:5545	865369	1	True				
ANR	865465	IdentifierDecl	i		865369	0					
ANR	865466	IdentifierDeclType	int		865369	0					
ANR	865467	Identifier	i		865369	1					
ANR	865468	ForStatement	for ( i = slot ; i > 0 ; i -- )		865369	2					
ANR	865469	ForInit	i = slot ;	165:13:5561:5569	865369	0	True				
ANR	865470	AssignmentExpression	i = slot		865369	0		=			
ANR	865471	Identifier	i		865369	0					
ANR	865472	Identifier	slot		865369	1					
ANR	865473	Condition	i > 0	165:23:5571:5575	865369	1	True				
ANR	865474	RelationalExpression	i > 0		865369	0		>			
ANR	865475	Identifier	i		865369	0					
ANR	865476	PrimaryExpression	0		865369	1					
ANR	865477	PostIncDecOperationExpression	i --	165:30:5578:5580	865369	2	True				
ANR	865478	Identifier	i		865369	0					
ANR	865479	IncDec	--		865369	1					
ANR	865480	CompoundStatement		23:35:581:581	865369	3					
ANR	865481	ExpressionStatement	cache -> slots [ i ] . base = cache -> slots [ i - 1 ] . base	166:12:5597:5642	865369	0	True				
ANR	865482	AssignmentExpression	cache -> slots [ i ] . base = cache -> slots [ i - 1 ] . base		865369	0		=			
ANR	865483	MemberAccess	cache -> slots [ i ] . base		865369	0					
ANR	865484	ArrayIndexing	cache -> slots [ i ]		865369	0					
ANR	865485	PtrMemberAccess	cache -> slots		865369	0					
ANR	865486	Identifier	cache		865369	0					
ANR	865487	Identifier	slots		865369	1					
ANR	865488	Identifier	i		865369	1					
ANR	865489	Identifier	base		865369	1					
ANR	865490	MemberAccess	cache -> slots [ i - 1 ] . base		865369	1					
ANR	865491	ArrayIndexing	cache -> slots [ i - 1 ]		865369	0					
ANR	865492	PtrMemberAccess	cache -> slots		865369	0					
ANR	865493	Identifier	cache		865369	0					
ANR	865494	Identifier	slots		865369	1					
ANR	865495	AdditiveExpression	i - 1		865369	1		-			
ANR	865496	Identifier	i		865369	0					
ANR	865497	PrimaryExpression	1		865369	1					
ANR	865498	Identifier	base		865369	1					
ANR	865499	ExpressionStatement	cache -> slots [ i ] . blocknum = cache -> slots [ i - 1 ] . blocknum	167:12:5656:5709	865369	1	True				
ANR	865500	AssignmentExpression	cache -> slots [ i ] . blocknum = cache -> slots [ i - 1 ] . blocknum		865369	0		=			
ANR	865501	MemberAccess	cache -> slots [ i ] . blocknum		865369	0					
ANR	865502	ArrayIndexing	cache -> slots [ i ]		865369	0					
ANR	865503	PtrMemberAccess	cache -> slots		865369	0					
ANR	865504	Identifier	cache		865369	0					
ANR	865505	Identifier	slots		865369	1					
ANR	865506	Identifier	i		865369	1					
ANR	865507	Identifier	blocknum		865369	1					
ANR	865508	MemberAccess	cache -> slots [ i - 1 ] . blocknum		865369	1					
ANR	865509	ArrayIndexing	cache -> slots [ i - 1 ]		865369	0					
ANR	865510	PtrMemberAccess	cache -> slots		865369	0					
ANR	865511	Identifier	cache		865369	0					
ANR	865512	Identifier	slots		865369	1					
ANR	865513	AdditiveExpression	i - 1		865369	1		-			
ANR	865514	Identifier	i		865369	0					
ANR	865515	PrimaryExpression	1		865369	1					
ANR	865516	Identifier	blocknum		865369	1					
ANR	865517	ExpressionStatement	cache -> slots [ 0 ] . blocknum = blocknum	169:8:5729:5764	865369	3	True				
ANR	865518	AssignmentExpression	cache -> slots [ 0 ] . blocknum = blocknum		865369	0		=			
ANR	865519	MemberAccess	cache -> slots [ 0 ] . blocknum		865369	0					
ANR	865520	ArrayIndexing	cache -> slots [ 0 ]		865369	0					
ANR	865521	PtrMemberAccess	cache -> slots		865369	0					
ANR	865522	Identifier	cache		865369	0					
ANR	865523	Identifier	slots		865369	1					
ANR	865524	PrimaryExpression	0		865369	1					
ANR	865525	Identifier	blocknum		865369	1					
ANR	865526	Identifier	blocknum		865369	1					
ANR	865527	ExpressionStatement	cache -> slots [ 0 ] . base = base	170:8:5774:5801	865369	4	True				
ANR	865528	AssignmentExpression	cache -> slots [ 0 ] . base = base		865369	0		=			
ANR	865529	MemberAccess	cache -> slots [ 0 ] . base		865369	0					
ANR	865530	ArrayIndexing	cache -> slots [ 0 ]		865369	0					
ANR	865531	PtrMemberAccess	cache -> slots		865369	0					
ANR	865532	Identifier	cache		865369	0					
ANR	865533	Identifier	slots		865369	1					
ANR	865534	PrimaryExpression	0		865369	1					
ANR	865535	Identifier	base		865369	1					
ANR	865536	Identifier	base		865369	1					
ANR	865537	ExpressionStatement	offset = pos - cache -> slots [ 0 ] . blocknum * cache -> block_size	172:4:5813:5872	865369	8	True				
ANR	865538	AssignmentExpression	offset = pos - cache -> slots [ 0 ] . blocknum * cache -> block_size		865369	0		=			
ANR	865539	Identifier	offset		865369	0					
ANR	865540	AdditiveExpression	pos - cache -> slots [ 0 ] . blocknum * cache -> block_size		865369	1		-			
ANR	865541	Identifier	pos		865369	0					
ANR	865542	MultiplicativeExpression	cache -> slots [ 0 ] . blocknum * cache -> block_size		865369	1		*			
ANR	865543	MemberAccess	cache -> slots [ 0 ] . blocknum		865369	0					
ANR	865544	ArrayIndexing	cache -> slots [ 0 ]		865369	0					
ANR	865545	PtrMemberAccess	cache -> slots		865369	0					
ANR	865546	Identifier	cache		865369	0					
ANR	865547	Identifier	slots		865369	1					
ANR	865548	PrimaryExpression	0		865369	1					
ANR	865549	Identifier	blocknum		865369	1					
ANR	865550	PtrMemberAccess	cache -> block_size		865369	1					
ANR	865551	Identifier	cache		865369	0					
ANR	865552	Identifier	block_size		865369	1					
ANR	865553	ExpressionStatement	"nread = min ( cache -> block_size - offset , len )"	173:4:5878:5922	865369	9	True				
ANR	865554	AssignmentExpression	"nread = min ( cache -> block_size - offset , len )"		865369	0		=			
ANR	865555	Identifier	nread		865369	0					
ANR	865556	CallExpression	"min ( cache -> block_size - offset , len )"		865369	1					
ANR	865557	Callee	min		865369	0					
ANR	865558	Identifier	min		865369	0					
ANR	865559	ArgumentList	cache -> block_size - offset		865369	1					
ANR	865560	Argument	cache -> block_size - offset		865369	0					
ANR	865561	AdditiveExpression	cache -> block_size - offset		865369	0		-			
ANR	865562	PtrMemberAccess	cache -> block_size		865369	0					
ANR	865563	Identifier	cache		865369	0					
ANR	865564	Identifier	block_size		865369	1					
ANR	865565	Identifier	offset		865369	1					
ANR	865566	Argument	len		865369	1					
ANR	865567	Identifier	len		865369	0					
ANR	865568	IfStatement	if ( nread + pos > cache -> filesize )		865369	10					
ANR	865569	Condition	nread + pos > cache -> filesize	174:8:5932:5960	865369	0	True				
ANR	865570	RelationalExpression	nread + pos > cache -> filesize		865369	0		>			
ANR	865571	AdditiveExpression	nread + pos		865369	0		+			
ANR	865572	Identifier	nread		865369	0					
ANR	865573	Identifier	pos		865369	1					
ANR	865574	PtrMemberAccess	cache -> filesize		865369	1					
ANR	865575	Identifier	cache		865369	0					
ANR	865576	Identifier	filesize		865369	1					
ANR	865577	ExpressionStatement	nread = cache -> filesize - pos	175:8:5971:6000	865369	1	True				
ANR	865578	AssignmentExpression	nread = cache -> filesize - pos		865369	0		=			
ANR	865579	Identifier	nread		865369	0					
ANR	865580	AdditiveExpression	cache -> filesize - pos		865369	1		-			
ANR	865581	PtrMemberAccess	cache -> filesize		865369	0					
ANR	865582	Identifier	cache		865369	0					
ANR	865583	Identifier	filesize		865369	1					
ANR	865584	Identifier	pos		865369	1					
ANR	865585	ExpressionStatement	"memcpy ( data , cache -> slots [ 0 ] . base + offset , nread )"	176:4:6026:6076	865369	11	True				
ANR	865586	CallExpression	"memcpy ( data , cache -> slots [ 0 ] . base + offset , nread )"		865369	0					
ANR	865587	Callee	memcpy		865369	0					
ANR	865588	Identifier	memcpy		865369	0					
ANR	865589	ArgumentList	data		865369	1					
ANR	865590	Argument	data		865369	0					
ANR	865591	Identifier	data		865369	0					
ANR	865592	Argument	cache -> slots [ 0 ] . base + offset		865369	1					
ANR	865593	AdditiveExpression	cache -> slots [ 0 ] . base + offset		865369	0		+			
ANR	865594	MemberAccess	cache -> slots [ 0 ] . base		865369	0					
ANR	865595	ArrayIndexing	cache -> slots [ 0 ]		865369	0					
ANR	865596	PtrMemberAccess	cache -> slots		865369	0					
ANR	865597	Identifier	cache		865369	0					
ANR	865598	Identifier	slots		865369	1					
ANR	865599	PrimaryExpression	0		865369	1					
ANR	865600	Identifier	base		865369	1					
ANR	865601	Identifier	offset		865369	1					
ANR	865602	Argument	nread		865369	2					
ANR	865603	Identifier	nread		865369	0					
ANR	865604	ReturnStatement	return nread ;	177:4:6082:6094	865369	12	True				
ANR	865605	Identifier	nread		865369	0					
ANR	865606	ReturnType	int		865369	1					
ANR	865607	Identifier	cl_cache_read		865369	2					
ANR	865608	ParameterList	"byte * data , int len , int64_t pos , CL_CACHE * cache"		865369	3					
ANR	865609	Parameter	byte * data	142:14:4950:4959	865369	0	True				
ANR	865610	ParameterType	byte *		865369	0					
ANR	865611	Identifier	data		865369	1					
ANR	865612	Parameter	int len	142:26:4962:4968	865369	1	True				
ANR	865613	ParameterType	int		865369	0					
ANR	865614	Identifier	len		865369	1					
ANR	865615	Parameter	int64_t pos	142:35:4971:4981	865369	2	True				
ANR	865616	ParameterType	int64_t		865369	0					
ANR	865617	Identifier	pos		865369	1					
ANR	865618	Parameter	CL_CACHE * cache	142:48:4984:4998	865369	3	True				
ANR	865619	ParameterType	CL_CACHE *		865369	0					
ANR	865620	Identifier	cache		865369	1					
ANR	865621	CFGEntryNode	ENTRY		865369		True				
ANR	865622	CFGExitNode	EXIT		865369		True				
ANR	865623	Symbol	data		865369						
ANR	865624	Symbol	cache -> slots [ 0 ] . blocknum		865369						
ANR	865625	Symbol	nread		865369						
ANR	865626	Symbol	cache -> slots [ i - 1 ] . base		865369						
ANR	865627	Symbol	slot		865369						
ANR	865628	Symbol	cache -> slots [ i - 1 ] . blocknum		865369						
ANR	865629	Symbol	* cache		865369						
ANR	865630	Symbol	cache -> nslots		865369						
ANR	865631	Symbol	* slot		865369						
ANR	865632	Symbol	min		865369						
ANR	865633	Symbol	len		865369						
ANR	865634	Symbol	pos		865369						
ANR	865635	Symbol	cache -> block_size		865369						
ANR	865636	Symbol	cache		865369						
ANR	865637	Symbol	cache -> slots		865369						
ANR	865638	Symbol	offset		865369						
ANR	865639	Symbol	cache -> slots [ slot ] . base		865369						
ANR	865640	Symbol	cache -> slots [ i ] . base		865369						
ANR	865641	Symbol	cache -> slots [ 0 ] . base		865369						
ANR	865642	Symbol	i		865369						
ANR	865643	Symbol	* i		865369						
ANR	865644	Symbol	cache -> slots [ slot ] . blocknum		865369						
ANR	865645	Symbol	* * cache		865369						
ANR	865646	Symbol	* cache -> slots		865369						
ANR	865647	Symbol	blocknum		865369						
ANR	865648	Symbol	cache -> slots [ i ] . blocknum		865369						
ANR	865649	Symbol	cache -> filesize		865369						
ANR	865650	Symbol	base		865369						
ANR	865651	Function	cl_cache_get_empty_slot	182:0:6205:7327							
ANR	865652	FunctionDef	"cl_cache_get_empty_slot (CL_CACHE * cache , int64_t pos)"		865651	0					
ANR	865653	CompoundStatement		184:0:6275:7327	865651	0					
ANR	865654	IdentifierDeclStatement	CL_CACHE_SLOT * pslot = & ( cache -> slots [ 0 ] ) ;	186:4:6333:6374	865651	0	True				
ANR	865655	IdentifierDecl	* pslot = & ( cache -> slots [ 0 ] )		865651	0					
ANR	865656	IdentifierDeclType	CL_CACHE_SLOT *		865651	0					
ANR	865657	Identifier	pslot		865651	1					
ANR	865658	AssignmentExpression	* pslot = & ( cache -> slots [ 0 ] )		865651	2		=			
ANR	865659	Identifier	pslot		865651	0					
ANR	865660	UnaryOperationExpression	& ( cache -> slots [ 0 ] )		865651	1					
ANR	865661	UnaryOperator	&		865651	0					
ANR	865662	ArrayIndexing	cache -> slots [ 0 ]		865651	1					
ANR	865663	PtrMemberAccess	cache -> slots		865651	0					
ANR	865664	Identifier	cache		865651	0					
ANR	865665	Identifier	slots		865651	1					
ANR	865666	PrimaryExpression	0		865651	1					
ANR	865667	IdentifierDeclStatement	int64_t slot0_blocknum = pslot -> blocknum ;	187:4:6452:6492	865651	1	True				
ANR	865668	IdentifierDecl	slot0_blocknum = pslot -> blocknum		865651	0					
ANR	865669	IdentifierDeclType	int64_t		865651	0					
ANR	865670	Identifier	slot0_blocknum		865651	1					
ANR	865671	AssignmentExpression	slot0_blocknum = pslot -> blocknum		865651	2		=			
ANR	865672	Identifier	slot0_blocknum		865651	0					
ANR	865673	PtrMemberAccess	pslot -> blocknum		865651	1					
ANR	865674	Identifier	pslot		865651	0					
ANR	865675	Identifier	blocknum		865651	1					
ANR	865676	IfStatement	if ( slot0_blocknum == CL_CACHE_SLOT_EMPTY )		865651	2					
ANR	865677	Condition	slot0_blocknum == CL_CACHE_SLOT_EMPTY	189:8:6503:6539	865651	0	True				
ANR	865678	EqualityExpression	slot0_blocknum == CL_CACHE_SLOT_EMPTY		865651	0		==			
ANR	865679	Identifier	slot0_blocknum		865651	0					
ANR	865680	Identifier	CL_CACHE_SLOT_EMPTY		865651	1					
ANR	865681	ReturnStatement	return pslot ;	190:8:6550:6562	865651	1	True				
ANR	865682	Identifier	pslot		865651	0					
ANR	865683	IfStatement	if ( cache -> nslots > 1 )		865651	3					
ANR	865684	Condition	cache -> nslots > 1	194:8:6752:6768	865651	0	True				
ANR	865685	RelationalExpression	cache -> nslots > 1		865651	0		>			
ANR	865686	PtrMemberAccess	cache -> nslots		865651	0					
ANR	865687	Identifier	cache		865651	0					
ANR	865688	Identifier	nslots		865651	1					
ANR	865689	PrimaryExpression	1		865651	1					
ANR	865690	CompoundStatement		14:8:721:726	865651	1					
ANR	865691	IdentifierDeclStatement	byte * last_slot_base = cache -> slots [ cache -> nslots - 1 ] . base ;	196:8:6887:6946	865651	0	True				
ANR	865692	IdentifierDecl	* last_slot_base = cache -> slots [ cache -> nslots - 1 ] . base		865651	0					
ANR	865693	IdentifierDeclType	byte *		865651	0					
ANR	865694	Identifier	last_slot_base		865651	1					
ANR	865695	AssignmentExpression	* last_slot_base = cache -> slots [ cache -> nslots - 1 ] . base		865651	2		=			
ANR	865696	Identifier	last_slot_base		865651	0					
ANR	865697	MemberAccess	cache -> slots [ cache -> nslots - 1 ] . base		865651	1					
ANR	865698	ArrayIndexing	cache -> slots [ cache -> nslots - 1 ]		865651	0					
ANR	865699	PtrMemberAccess	cache -> slots		865651	0					
ANR	865700	Identifier	cache		865651	0					
ANR	865701	Identifier	slots		865651	1					
ANR	865702	AdditiveExpression	cache -> nslots - 1		865651	1		-			
ANR	865703	PtrMemberAccess	cache -> nslots		865651	0					
ANR	865704	Identifier	cache		865651	0					
ANR	865705	Identifier	nslots		865651	1					
ANR	865706	PrimaryExpression	1		865651	1					
ANR	865707	Identifier	base		865651	1					
ANR	865708	IdentifierDeclStatement	int i ;	197:8:6997:7002	865651	1	True				
ANR	865709	IdentifierDecl	i		865651	0					
ANR	865710	IdentifierDeclType	int		865651	0					
ANR	865711	Identifier	i		865651	1					
ANR	865712	ForStatement	for ( i = cache -> nslots - 1 ; i > 0 ; i -- )		865651	2					
ANR	865713	ForInit	i = cache -> nslots - 1 ;	200:13:7051:7070	865651	0	True				
ANR	865714	AssignmentExpression	i = cache -> nslots - 1		865651	0		=			
ANR	865715	Identifier	i		865651	0					
ANR	865716	AdditiveExpression	cache -> nslots - 1		865651	1		-			
ANR	865717	PtrMemberAccess	cache -> nslots		865651	0					
ANR	865718	Identifier	cache		865651	0					
ANR	865719	Identifier	nslots		865651	1					
ANR	865720	PrimaryExpression	1		865651	1					
ANR	865721	Condition	i > 0	200:34:7072:7076	865651	1	True				
ANR	865722	RelationalExpression	i > 0		865651	0		>			
ANR	865723	Identifier	i		865651	0					
ANR	865724	PrimaryExpression	0		865651	1					
ANR	865725	PostIncDecOperationExpression	i --	200:41:7079:7081	865651	2	True				
ANR	865726	Identifier	i		865651	0					
ANR	865727	IncDec	--		865651	1					
ANR	865728	CompoundStatement		17:46:808:808	865651	3					
ANR	865729	ExpressionStatement	cache -> slots [ i ] . blocknum = cache -> slots [ i - 1 ] . blocknum	201:12:7098:7151	865651	0	True				
ANR	865730	AssignmentExpression	cache -> slots [ i ] . blocknum = cache -> slots [ i - 1 ] . blocknum		865651	0		=			
ANR	865731	MemberAccess	cache -> slots [ i ] . blocknum		865651	0					
ANR	865732	ArrayIndexing	cache -> slots [ i ]		865651	0					
ANR	865733	PtrMemberAccess	cache -> slots		865651	0					
ANR	865734	Identifier	cache		865651	0					
ANR	865735	Identifier	slots		865651	1					
ANR	865736	Identifier	i		865651	1					
ANR	865737	Identifier	blocknum		865651	1					
ANR	865738	MemberAccess	cache -> slots [ i - 1 ] . blocknum		865651	1					
ANR	865739	ArrayIndexing	cache -> slots [ i - 1 ]		865651	0					
ANR	865740	PtrMemberAccess	cache -> slots		865651	0					
ANR	865741	Identifier	cache		865651	0					
ANR	865742	Identifier	slots		865651	1					
ANR	865743	AdditiveExpression	i - 1		865651	1		-			
ANR	865744	Identifier	i		865651	0					
ANR	865745	PrimaryExpression	1		865651	1					
ANR	865746	Identifier	blocknum		865651	1					
ANR	865747	ExpressionStatement	cache -> slots [ i ] . base = cache -> slots [ i - 1 ] . base	202:12:7165:7210	865651	1	True				
ANR	865748	AssignmentExpression	cache -> slots [ i ] . base = cache -> slots [ i - 1 ] . base		865651	0		=			
ANR	865749	MemberAccess	cache -> slots [ i ] . base		865651	0					
ANR	865750	ArrayIndexing	cache -> slots [ i ]		865651	0					
ANR	865751	PtrMemberAccess	cache -> slots		865651	0					
ANR	865752	Identifier	cache		865651	0					
ANR	865753	Identifier	slots		865651	1					
ANR	865754	Identifier	i		865651	1					
ANR	865755	Identifier	base		865651	1					
ANR	865756	MemberAccess	cache -> slots [ i - 1 ] . base		865651	1					
ANR	865757	ArrayIndexing	cache -> slots [ i - 1 ]		865651	0					
ANR	865758	PtrMemberAccess	cache -> slots		865651	0					
ANR	865759	Identifier	cache		865651	0					
ANR	865760	Identifier	slots		865651	1					
ANR	865761	AdditiveExpression	i - 1		865651	1		-			
ANR	865762	Identifier	i		865651	0					
ANR	865763	PrimaryExpression	1		865651	1					
ANR	865764	Identifier	base		865651	1					
ANR	865765	ExpressionStatement	pslot -> base = last_slot_base	204:8:7230:7258	865651	3	True				
ANR	865766	AssignmentExpression	pslot -> base = last_slot_base		865651	0		=			
ANR	865767	PtrMemberAccess	pslot -> base		865651	0					
ANR	865768	Identifier	pslot		865651	0					
ANR	865769	Identifier	base		865651	1					
ANR	865770	Identifier	last_slot_base		865651	1					
ANR	865771	ExpressionStatement	pslot -> blocknum = CL_CACHE_SLOT_EMPTY	206:4:7270:7307	865651	4	True				
ANR	865772	AssignmentExpression	pslot -> blocknum = CL_CACHE_SLOT_EMPTY		865651	0		=			
ANR	865773	PtrMemberAccess	pslot -> blocknum		865651	0					
ANR	865774	Identifier	pslot		865651	0					
ANR	865775	Identifier	blocknum		865651	1					
ANR	865776	Identifier	CL_CACHE_SLOT_EMPTY		865651	1					
ANR	865777	ReturnStatement	return pslot ;	207:4:7313:7325	865651	5	True				
ANR	865778	Identifier	pslot		865651	0					
ANR	865779	ReturnType	CL_CACHE_SLOT *		865651	1					
ANR	865780	Identifier	cl_cache_get_empty_slot		865651	2					
ANR	865781	ParameterList	"CL_CACHE * cache , int64_t pos"		865651	3					
ANR	865782	Parameter	CL_CACHE * cache	183:24:6245:6259	865651	0	True				
ANR	865783	ParameterType	CL_CACHE *		865651	0					
ANR	865784	Identifier	cache		865651	1					
ANR	865785	Parameter	int64_t pos	183:41:6262:6272	865651	1	True				
ANR	865786	ParameterType	int64_t		865651	0					
ANR	865787	Identifier	pos		865651	1					
ANR	865788	CFGEntryNode	ENTRY		865651		True				
ANR	865789	CFGExitNode	EXIT		865651		True				
ANR	865790	Symbol	cache		865651						
ANR	865791	Symbol	pslot -> blocknum		865651						
ANR	865792	Symbol	cache -> slots		865651						
ANR	865793	Symbol	cache -> slots [ i ] . base		865651						
ANR	865794	Symbol	i		865651						
ANR	865795	Symbol	cache -> slots [ i - 1 ] . base		865651						
ANR	865796	Symbol	cache -> slots [ cache -> nslots - 1 ] . base		865651						
ANR	865797	Symbol	cache -> slots [ i - 1 ] . blocknum		865651						
ANR	865798	Symbol	* cache		865651						
ANR	865799	Symbol	pslot		865651						
ANR	865800	Symbol	cache -> nslots		865651						
ANR	865801	Symbol	CL_CACHE_SLOT_EMPTY		865651						
ANR	865802	Symbol	* cache -> nslots		865651						
ANR	865803	Symbol	* i		865651						
ANR	865804	Symbol	pos		865651						
ANR	865805	Symbol	* * cache		865651						
ANR	865806	Symbol	* pslot		865651						
ANR	865807	Symbol	* cache -> slots		865651						
ANR	865808	Symbol	last_slot_base		865651						
ANR	865809	Symbol	slot0_blocknum		865651						
ANR	865810	Symbol	cache -> slots [ i ] . blocknum		865651						
ANR	865811	Symbol	pslot -> base		865651						
ANR	865812	Function	cl_cache_load_slot	210:0:7330:7510							
ANR	865813	FunctionDef	"cl_cache_load_slot (CL_CACHE * cache , CL_CACHE_SLOT * slot , int64_t pos , byte * data , int len)"		865812	0					
ANR	865814	CompoundStatement		212:0:7426:7510	865812	0					
ANR	865815	ExpressionStatement	slot -> blocknum = pos / cache -> block_size	213:4:7432:7472	865812	0	True				
ANR	865816	AssignmentExpression	slot -> blocknum = pos / cache -> block_size		865812	0		=			
ANR	865817	PtrMemberAccess	slot -> blocknum		865812	0					
ANR	865818	Identifier	slot		865812	0					
ANR	865819	Identifier	blocknum		865812	1					
ANR	865820	MultiplicativeExpression	pos / cache -> block_size		865812	1		/			
ANR	865821	Identifier	pos		865812	0					
ANR	865822	PtrMemberAccess	cache -> block_size		865812	1					
ANR	865823	Identifier	cache		865812	0					
ANR	865824	Identifier	block_size		865812	1					
ANR	865825	ExpressionStatement	"memmove ( slot -> base , data , len )"	214:4:7478:7508	865812	1	True				
ANR	865826	CallExpression	"memmove ( slot -> base , data , len )"		865812	0					
ANR	865827	Callee	memmove		865812	0					
ANR	865828	Identifier	memmove		865812	0					
ANR	865829	ArgumentList	slot -> base		865812	1					
ANR	865830	Argument	slot -> base		865812	0					
ANR	865831	PtrMemberAccess	slot -> base		865812	0					
ANR	865832	Identifier	slot		865812	0					
ANR	865833	Identifier	base		865812	1					
ANR	865834	Argument	data		865812	1					
ANR	865835	Identifier	data		865812	0					
ANR	865836	Argument	len		865812	2					
ANR	865837	Identifier	len		865812	0					
ANR	865838	ReturnType	void		865812	1					
ANR	865839	Identifier	cl_cache_load_slot		865812	2					
ANR	865840	ParameterList	"CL_CACHE * cache , CL_CACHE_SLOT * slot , int64_t pos , byte * data , int len"		865812	3					
ANR	865841	Parameter	CL_CACHE * cache	211:19:7354:7368	865812	0	True				
ANR	865842	ParameterType	CL_CACHE *		865812	0					
ANR	865843	Identifier	cache		865812	1					
ANR	865844	Parameter	CL_CACHE_SLOT * slot	211:36:7371:7389	865812	1	True				
ANR	865845	ParameterType	CL_CACHE_SLOT *		865812	0					
ANR	865846	Identifier	slot		865812	1					
ANR	865847	Parameter	int64_t pos	211:57:7392:7402	865812	2	True				
ANR	865848	ParameterType	int64_t		865812	0					
ANR	865849	Identifier	pos		865812	1					
ANR	865850	Parameter	byte * data	211:70:7405:7414	865812	3	True				
ANR	865851	ParameterType	byte *		865812	0					
ANR	865852	Identifier	data		865812	1					
ANR	865853	Parameter	int len	211:82:7417:7423	865812	4	True				
ANR	865854	ParameterType	int		865812	0					
ANR	865855	Identifier	len		865812	1					
ANR	865856	CFGEntryNode	ENTRY		865812		True				
ANR	865857	CFGExitNode	EXIT		865812		True				
ANR	865858	Symbol	* slot		865812						
ANR	865859	Symbol	slot -> base		865812						
ANR	865860	Symbol	cache		865812						
ANR	865861	Symbol	data		865812						
ANR	865862	Symbol	len		865812						
ANR	865863	Symbol	pos		865812						
ANR	865864	Symbol	slot -> blocknum		865812						
ANR	865865	Symbol	slot		865812						
ANR	865866	Symbol	* cache		865812						
ANR	865867	Symbol	cache -> block_size		865812						
ANR	865868	ClassDef	<unnamed>	227:8:7989:8143							
ANR	865869	DeclStmt									
ANR	865870	Decl							gs_memory_t	gs_memory_t *	mem
ANR	865871	DeclStmt									
ANR	865872	Decl							FILE	FILE *	f
ANR	865873	DeclStmt									
ANR	865874	Decl							int64_t	int64_t	pos
ANR	865875	DeclStmt									
ANR	865876	Decl							int64_t	int64_t	filesize
ANR	865877	DeclStmt									
ANR	865878	Decl							CL_CACHE	CL_CACHE *	cache
ANR	865879	DeclStmt									
ANR	865880	Decl									IFILE
ANR	865881	Function	file_to_fake_path	236:0:8146:8275							
ANR	865882	FunctionDef	"file_to_fake_path (clist_file_ptr file , char fname [ gp_file_name_sizeof ])"		865881	0					
ANR	865883	CompoundStatement		238:0:8230:8275	865881	0					
ANR	865884	ExpressionStatement	"gs_sprintf ( fname , ENC_FILE_STR , file )"	239:4:8236:8273	865881	0	True				
ANR	865885	CallExpression	"gs_sprintf ( fname , ENC_FILE_STR , file )"		865881	0					
ANR	865886	Callee	gs_sprintf		865881	0					
ANR	865887	Identifier	gs_sprintf		865881	0					
ANR	865888	ArgumentList	fname		865881	1					
ANR	865889	Argument	fname		865881	0					
ANR	865890	Identifier	fname		865881	0					
ANR	865891	Argument	ENC_FILE_STR		865881	1					
ANR	865892	Identifier	ENC_FILE_STR		865881	0					
ANR	865893	Argument	file		865881	2					
ANR	865894	Identifier	file		865881	0					
ANR	865895	ReturnType	static void		865881	1					
ANR	865896	Identifier	file_to_fake_path		865881	2					
ANR	865897	ParameterList	"clist_file_ptr file , char fname [ gp_file_name_sizeof ]"		865881	3					
ANR	865898	Parameter	clist_file_ptr file	237:18:8176:8194	865881	0	True				
ANR	865899	ParameterType	clist_file_ptr		865881	0					
ANR	865900	Identifier	file		865881	1					
ANR	865901	Parameter	char fname [ gp_file_name_sizeof ]	237:39:8197:8227	865881	1	True				
ANR	865902	ParameterType	char [ gp_file_name_sizeof ]		865881	0					
ANR	865903	Identifier	fname		865881	1					
ANR	865904	CFGEntryNode	ENTRY		865881		True				
ANR	865905	CFGExitNode	EXIT		865881		True				
ANR	865906	Symbol	fname		865881						
ANR	865907	Symbol	file		865881						
ANR	865908	Symbol	ENC_FILE_STR		865881						
ANR	865909	Function	fake_path_to_file	242:0:8278:8511							
ANR	865910	FunctionDef	fake_path_to_file (const char * fname)		865909	0					
ANR	865911	CompoundStatement		244:0:8337:8511	865909	0					
ANR	865912	IdentifierDeclStatement	"clist_file_ptr i1 , i2 ;"	245:4:8343:8364	865909	0	True				
ANR	865913	IdentifierDecl	i1		865909	0					
ANR	865914	IdentifierDeclType	clist_file_ptr		865909	0					
ANR	865915	Identifier	i1		865909	1					
ANR	865916	IdentifierDecl	i2		865909	1					
ANR	865917	IdentifierDeclType	clist_file_ptr		865909	0					
ANR	865918	Identifier	i2		865909	1					
ANR	865919	IdentifierDeclStatement	"int r1 = sscanf ( fname , ENC_FILE_STR , & i1 ) ;"	247:4:8371:8412	865909	1	True				
ANR	865920	IdentifierDecl	"r1 = sscanf ( fname , ENC_FILE_STR , & i1 )"		865909	0					
ANR	865921	IdentifierDeclType	int		865909	0					
ANR	865922	Identifier	r1		865909	1					
ANR	865923	AssignmentExpression	"r1 = sscanf ( fname , ENC_FILE_STR , & i1 )"		865909	2		=			
ANR	865924	Identifier	r1		865909	0					
ANR	865925	CallExpression	"sscanf ( fname , ENC_FILE_STR , & i1 )"		865909	1					
ANR	865926	Callee	sscanf		865909	0					
ANR	865927	Identifier	sscanf		865909	0					
ANR	865928	ArgumentList	fname		865909	1					
ANR	865929	Argument	fname		865909	0					
ANR	865930	Identifier	fname		865909	0					
ANR	865931	Argument	ENC_FILE_STR		865909	1					
ANR	865932	Identifier	ENC_FILE_STR		865909	0					
ANR	865933	Argument	& i1		865909	2					
ANR	865934	UnaryOperationExpression	& i1		865909	0					
ANR	865935	UnaryOperator	&		865909	0					
ANR	865936	Identifier	i1		865909	1					
ANR	865937	IdentifierDeclStatement	"int r2 = sscanf ( fname , ENC_FILE_STRX , & i2 ) ;"	248:4:8418:8460	865909	2	True				
ANR	865938	IdentifierDecl	"r2 = sscanf ( fname , ENC_FILE_STRX , & i2 )"		865909	0					
ANR	865939	IdentifierDeclType	int		865909	0					
ANR	865940	Identifier	r2		865909	1					
ANR	865941	AssignmentExpression	"r2 = sscanf ( fname , ENC_FILE_STRX , & i2 )"		865909	2		=			
ANR	865942	Identifier	r2		865909	0					
ANR	865943	CallExpression	"sscanf ( fname , ENC_FILE_STRX , & i2 )"		865909	1					
ANR	865944	Callee	sscanf		865909	0					
ANR	865945	Identifier	sscanf		865909	0					
ANR	865946	ArgumentList	fname		865909	1					
ANR	865947	Argument	fname		865909	0					
ANR	865948	Identifier	fname		865909	0					
ANR	865949	Argument	ENC_FILE_STRX		865909	1					
ANR	865950	Identifier	ENC_FILE_STRX		865909	0					
ANR	865951	Argument	& i2		865909	2					
ANR	865952	UnaryOperationExpression	& i2		865909	0					
ANR	865953	UnaryOperator	&		865909	0					
ANR	865954	Identifier	i2		865909	1					
ANR	865955	ReturnStatement	return r2 == 1 ? i2 : ( r1 == 1 ? i1 : NULL ) ;	249:4:8466:8509	865909	3	True				
ANR	865956	ConditionalExpression	r2 == 1 ? i2 : ( r1 == 1 ? i1 : NULL )		865909	0					
ANR	865957	Condition	r2 == 1		865909	0					
ANR	865958	EqualityExpression	r2 == 1		865909	0		==			
ANR	865959	Identifier	r2		865909	0					
ANR	865960	PrimaryExpression	1		865909	1					
ANR	865961	Identifier	i2		865909	1					
ANR	865962	ConditionalExpression	r1 == 1 ? i1 : NULL		865909	2					
ANR	865963	Condition	r1 == 1		865909	0					
ANR	865964	EqualityExpression	r1 == 1		865909	0		==			
ANR	865965	Identifier	r1		865909	0					
ANR	865966	PrimaryExpression	1		865909	1					
ANR	865967	Identifier	i1		865909	1					
ANR	865968	Identifier	NULL		865909	2					
ANR	865969	ReturnType	static clist_file_ptr		865909	1					
ANR	865970	Identifier	fake_path_to_file		865909	2					
ANR	865971	ParameterList	const char * fname		865909	3					
ANR	865972	Parameter	const char * fname	243:18:8318:8334	865909	0	True				
ANR	865973	ParameterType	const char *		865909	0					
ANR	865974	Identifier	fname		865909	1					
ANR	865975	CFGEntryNode	ENTRY		865909		True				
ANR	865976	CFGExitNode	EXIT		865909		True				
ANR	865977	Symbol	r2		865909						
ANR	865978	Symbol	fname		865909						
ANR	865979	Symbol	& i2		865909						
ANR	865980	Symbol	& i1		865909						
ANR	865981	Symbol	ENC_FILE_STR		865909						
ANR	865982	Symbol	NULL		865909						
ANR	865983	Symbol	sscanf		865909						
ANR	865984	Symbol	ENC_FILE_STRX		865909						
ANR	865985	Symbol	i1		865909						
ANR	865986	Symbol	i2		865909						
ANR	865987	Symbol	r1		865909						
ANR	865988	Function	wrap_file	252:0:8514:8958							
ANR	865989	FunctionDef	"wrap_file (gs_memory_t * mem , FILE * f , const char * fmode)"		865988	0					
ANR	865990	CompoundStatement		253:0:8584:8958	865988	0					
ANR	865991	IdentifierDeclStatement	IFILE * ifile ;	254:4:8590:8602	865988	0	True				
ANR	865992	IdentifierDecl	* ifile		865988	0					
ANR	865993	IdentifierDeclType	IFILE *		865988	0					
ANR	865994	Identifier	ifile		865988	1					
ANR	865995	IfStatement	if ( ! f )		865988	1					
ANR	865996	Condition	! f	256:8:8613:8614	865988	0	True				
ANR	865997	UnaryOperationExpression	! f		865988	0					
ANR	865998	UnaryOperator	!		865988	0					
ANR	865999	Identifier	f		865988	1					
ANR	866000	ReturnStatement	return NULL ;	256:12:8617:8628	865988	1	True				
ANR	866001	Identifier	NULL		865988	0					
ANR	866002	ExpressionStatement	"ifile = ( IFILE * ) gs_alloc_bytes ( mem -> non_gc_memory , sizeof ( * ifile ) , ""Allocate wrapped IFILE"" )"	257:4:8634:8727	865988	2	True				
ANR	866003	AssignmentExpression	"ifile = ( IFILE * ) gs_alloc_bytes ( mem -> non_gc_memory , sizeof ( * ifile ) , ""Allocate wrapped IFILE"" )"		865988	0		=			
ANR	866004	Identifier	ifile		865988	0					
ANR	866005	CastExpression	"( IFILE * ) gs_alloc_bytes ( mem -> non_gc_memory , sizeof ( * ifile ) , ""Allocate wrapped IFILE"" )"		865988	1					
ANR	866006	CastTarget	IFILE *		865988	0					
ANR	866007	CallExpression	"gs_alloc_bytes ( mem -> non_gc_memory , sizeof ( * ifile ) , ""Allocate wrapped IFILE"" )"		865988	1					
ANR	866008	Callee	gs_alloc_bytes		865988	0					
ANR	866009	Identifier	gs_alloc_bytes		865988	0					
ANR	866010	ArgumentList	mem -> non_gc_memory		865988	1					
ANR	866011	Argument	mem -> non_gc_memory		865988	0					
ANR	866012	PtrMemberAccess	mem -> non_gc_memory		865988	0					
ANR	866013	Identifier	mem		865988	0					
ANR	866014	Identifier	non_gc_memory		865988	1					
ANR	866015	Argument	sizeof ( * ifile )		865988	1					
ANR	866016	SizeofExpression	sizeof ( * ifile )		865988	0					
ANR	866017	Sizeof	sizeof		865988	0					
ANR	866018	UnaryOperationExpression	* ifile		865988	1					
ANR	866019	UnaryOperator	*		865988	0					
ANR	866020	Identifier	ifile		865988	1					
ANR	866021	Argument	"""Allocate wrapped IFILE"""		865988	2					
ANR	866022	PrimaryExpression	"""Allocate wrapped IFILE"""		865988	0					
ANR	866023	IfStatement	if ( ! ifile )		865988	3					
ANR	866024	Condition	! ifile	258:8:8737:8742	865988	0	True				
ANR	866025	UnaryOperationExpression	! ifile		865988	0					
ANR	866026	UnaryOperator	!		865988	0					
ANR	866027	Identifier	ifile		865988	1					
ANR	866028	CompoundStatement		6:16:160:160	865988	1					
ANR	866029	ExpressionStatement	fclose ( f )	259:8:8755:8764	865988	0	True				
ANR	866030	CallExpression	fclose ( f )		865988	0					
ANR	866031	Callee	fclose		865988	0					
ANR	866032	Identifier	fclose		865988	0					
ANR	866033	ArgumentList	f		865988	1					
ANR	866034	Argument	f		865988	0					
ANR	866035	Identifier	f		865988	0					
ANR	866036	ReturnStatement	return NULL ;	260:8:8774:8785	865988	1	True				
ANR	866037	Identifier	NULL		865988	0					
ANR	866038	ExpressionStatement	ifile -> mem = mem -> non_gc_memory	262:4:8797:8828	865988	4	True				
ANR	866039	AssignmentExpression	ifile -> mem = mem -> non_gc_memory		865988	0		=			
ANR	866040	PtrMemberAccess	ifile -> mem		865988	0					
ANR	866041	Identifier	ifile		865988	0					
ANR	866042	Identifier	mem		865988	1					
ANR	866043	PtrMemberAccess	mem -> non_gc_memory		865988	1					
ANR	866044	Identifier	mem		865988	0					
ANR	866045	Identifier	non_gc_memory		865988	1					
ANR	866046	ExpressionStatement	ifile -> f = f	263:4:8834:8846	865988	5	True				
ANR	866047	AssignmentExpression	ifile -> f = f		865988	0		=			
ANR	866048	PtrMemberAccess	ifile -> f		865988	0					
ANR	866049	Identifier	ifile		865988	0					
ANR	866050	Identifier	f		865988	1					
ANR	866051	Identifier	f		865988	1					
ANR	866052	ExpressionStatement	ifile -> pos = 0	264:4:8852:8866	865988	6	True				
ANR	866053	AssignmentExpression	ifile -> pos = 0		865988	0		=			
ANR	866054	PtrMemberAccess	ifile -> pos		865988	0					
ANR	866055	Identifier	ifile		865988	0					
ANR	866056	Identifier	pos		865988	1					
ANR	866057	PrimaryExpression	0		865988	1					
ANR	866058	ExpressionStatement	ifile -> filesize = 0	265:4:8872:8891	865988	7	True				
ANR	866059	AssignmentExpression	ifile -> filesize = 0		865988	0		=			
ANR	866060	PtrMemberAccess	ifile -> filesize		865988	0					
ANR	866061	Identifier	ifile		865988	0					
ANR	866062	Identifier	filesize		865988	1					
ANR	866063	PrimaryExpression	0		865988	1					
ANR	866064	ExpressionStatement	ifile -> cache = cl_cache_alloc ( ifile -> mem )	266:4:8897:8938	865988	8	True				
ANR	866065	AssignmentExpression	ifile -> cache = cl_cache_alloc ( ifile -> mem )		865988	0		=			
ANR	866066	PtrMemberAccess	ifile -> cache		865988	0					
ANR	866067	Identifier	ifile		865988	0					
ANR	866068	Identifier	cache		865988	1					
ANR	866069	CallExpression	cl_cache_alloc ( ifile -> mem )		865988	1					
ANR	866070	Callee	cl_cache_alloc		865988	0					
ANR	866071	Identifier	cl_cache_alloc		865988	0					
ANR	866072	ArgumentList	ifile -> mem		865988	1					
ANR	866073	Argument	ifile -> mem		865988	0					
ANR	866074	PtrMemberAccess	ifile -> mem		865988	0					
ANR	866075	Identifier	ifile		865988	0					
ANR	866076	Identifier	mem		865988	1					
ANR	866077	ReturnStatement	return ifile ;	267:4:8944:8956	865988	9	True				
ANR	866078	Identifier	ifile		865988	0					
ANR	866079	ReturnType	static IFILE *		865988	1					
ANR	866080	Identifier	wrap_file		865988	2					
ANR	866081	ParameterList	"gs_memory_t * mem , FILE * f , const char * fmode"		865988	3					
ANR	866082	Parameter	gs_memory_t * mem	252:24:8538:8553	865988	0	True				
ANR	866083	ParameterType	gs_memory_t *		865988	0					
ANR	866084	Identifier	mem		865988	1					
ANR	866085	Parameter	FILE * f	252:42:8556:8562	865988	1	True				
ANR	866086	ParameterType	FILE *		865988	0					
ANR	866087	Identifier	f		865988	1					
ANR	866088	Parameter	const char * fmode	252:51:8565:8581	865988	2	True				
ANR	866089	ParameterType	const char *		865988	0					
ANR	866090	Identifier	fmode		865988	1					
ANR	866091	CFGEntryNode	ENTRY		865988		True				
ANR	866092	CFGExitNode	EXIT		865988		True				
ANR	866093	Symbol	gs_alloc_bytes		865988						
ANR	866094	Symbol	NULL		865988						
ANR	866095	Symbol	ifile -> f		865988						
ANR	866096	Symbol	f		865988						
ANR	866097	Symbol	cl_cache_alloc		865988						
ANR	866098	Symbol	mem -> non_gc_memory		865988						
ANR	866099	Symbol	ifile -> filesize		865988						
ANR	866100	Symbol	ifile -> cache		865988						
ANR	866101	Symbol	ifile		865988						
ANR	866102	Symbol	mem		865988						
ANR	866103	Symbol	* ifile		865988						
ANR	866104	Symbol	fmode		865988						
ANR	866105	Symbol	ifile -> pos		865988						
ANR	866106	Symbol	ifile -> mem		865988						
ANR	866107	Symbol	* mem		865988						
ANR	866108	Function	close_file	270:0:8961:9230							
ANR	866109	FunctionDef	close_file (IFILE * ifile)		866108	0					
ANR	866110	CompoundStatement		271:0:8997:9230	866108	0					
ANR	866111	IdentifierDeclStatement	int res = 0 ;	272:4:9003:9014	866108	0	True				
ANR	866112	IdentifierDecl	res = 0		866108	0					
ANR	866113	IdentifierDeclType	int		866108	0					
ANR	866114	Identifier	res		866108	1					
ANR	866115	AssignmentExpression	res = 0		866108	2		=			
ANR	866116	Identifier	res		866108	0					
ANR	866117	PrimaryExpression	0		866108	1					
ANR	866118	IfStatement	if ( ifile )		866108	1					
ANR	866119	Condition	ifile	273:8:9024:9028	866108	0	True				
ANR	866120	Identifier	ifile		866108	0					
ANR	866121	CompoundStatement		3:15:33:33	866108	1					
ANR	866122	ExpressionStatement	res = fclose ( ifile -> f )	274:8:9041:9063	866108	0	True				
ANR	866123	AssignmentExpression	res = fclose ( ifile -> f )		866108	0		=			
ANR	866124	Identifier	res		866108	0					
ANR	866125	CallExpression	fclose ( ifile -> f )		866108	1					
ANR	866126	Callee	fclose		866108	0					
ANR	866127	Identifier	fclose		866108	0					
ANR	866128	ArgumentList	ifile -> f		866108	1					
ANR	866129	Argument	ifile -> f		866108	0					
ANR	866130	PtrMemberAccess	ifile -> f		866108	0					
ANR	866131	Identifier	ifile		866108	0					
ANR	866132	Identifier	f		866108	1					
ANR	866133	IfStatement	if ( ifile -> cache != NULL )		866108	1					
ANR	866134	Condition	ifile -> cache != NULL	275:12:9077:9096	866108	0	True				
ANR	866135	EqualityExpression	ifile -> cache != NULL		866108	0		!=			
ANR	866136	PtrMemberAccess	ifile -> cache		866108	0					
ANR	866137	Identifier	ifile		866108	0					
ANR	866138	Identifier	cache		866108	1					
ANR	866139	Identifier	NULL		866108	1					
ANR	866140	ExpressionStatement	cl_cache_destroy ( ifile -> cache )	276:12:9111:9141	866108	1	True				
ANR	866141	CallExpression	cl_cache_destroy ( ifile -> cache )		866108	0					
ANR	866142	Callee	cl_cache_destroy		866108	0					
ANR	866143	Identifier	cl_cache_destroy		866108	0					
ANR	866144	ArgumentList	ifile -> cache		866108	1					
ANR	866145	Argument	ifile -> cache		866108	0					
ANR	866146	PtrMemberAccess	ifile -> cache		866108	0					
ANR	866147	Identifier	ifile		866108	0					
ANR	866148	Identifier	cache		866108	1					
ANR	866149	ExpressionStatement	"gs_free_object ( ifile -> mem , ifile , ""Free wrapped IFILE"" )"	277:8:9151:9206	866108	2	True				
ANR	866150	CallExpression	"gs_free_object ( ifile -> mem , ifile , ""Free wrapped IFILE"" )"		866108	0					
ANR	866151	Callee	gs_free_object		866108	0					
ANR	866152	Identifier	gs_free_object		866108	0					
ANR	866153	ArgumentList	ifile -> mem		866108	1					
ANR	866154	Argument	ifile -> mem		866108	0					
ANR	866155	PtrMemberAccess	ifile -> mem		866108	0					
ANR	866156	Identifier	ifile		866108	0					
ANR	866157	Identifier	mem		866108	1					
ANR	866158	Argument	ifile		866108	1					
ANR	866159	Identifier	ifile		866108	0					
ANR	866160	Argument	"""Free wrapped IFILE"""		866108	2					
ANR	866161	PrimaryExpression	"""Free wrapped IFILE"""		866108	0					
ANR	866162	ReturnStatement	return res ;	279:4:9218:9228	866108	2	True				
ANR	866163	Identifier	res		866108	0					
ANR	866164	ReturnType	static int		866108	1					
ANR	866165	Identifier	close_file		866108	2					
ANR	866166	ParameterList	IFILE * ifile		866108	3					
ANR	866167	Parameter	IFILE * ifile	270:22:8983:8994	866108	0	True				
ANR	866168	ParameterType	IFILE *		866108	0					
ANR	866169	Identifier	ifile		866108	1					
ANR	866170	CFGEntryNode	ENTRY		866108		True				
ANR	866171	CFGExitNode	EXIT		866108		True				
ANR	866172	Symbol	res		866108						
ANR	866173	Symbol	ifile -> cache		866108						
ANR	866174	Symbol	ifile		866108						
ANR	866175	Symbol	ifile -> f		866108						
ANR	866176	Symbol	NULL		866108						
ANR	866177	Symbol	fclose		866108						
ANR	866178	Symbol	* ifile		866108						
ANR	866179	Symbol	ifile -> mem		866108						
ANR	866180	Function	clist_fopen	284:0:9272:11016							
ANR	866181	FunctionDef	"clist_fopen (char fname [ gp_file_name_sizeof ] , const char * fmode , clist_file_ptr * pcf , gs_memory_t * mem , gs_memory_t * data_mem , bool ok_to_compress)"		866180	0					
ANR	866182	CompoundStatement		288:0:9456:11016	866180	0					
ANR	866183	IfStatement	if ( * fname == 0 )		866180	0					
ANR	866184	Condition	* fname == 0	289:8:9466:9476	866180	0	True				
ANR	866185	EqualityExpression	* fname == 0		866180	0		==			
ANR	866186	UnaryOperationExpression	* fname		866180	0					
ANR	866187	UnaryOperator	*		866180	0					
ANR	866188	Identifier	fname		866180	1					
ANR	866189	PrimaryExpression	0		866180	1					
ANR	866190	CompoundStatement		2:21:22:22	866180	1					
ANR	866191	IfStatement	if ( fmode [ 0 ] == 'r' )		866180	0					
ANR	866192	Condition	fmode [ 0 ] == 'r'	290:12:9493:9507	866180	0	True				
ANR	866193	EqualityExpression	fmode [ 0 ] == 'r'		866180	0		==			
ANR	866194	ArrayIndexing	fmode [ 0 ]		866180	0					
ANR	866195	Identifier	fmode		866180	0					
ANR	866196	PrimaryExpression	0		866180	1					
ANR	866197	PrimaryExpression	'r'		866180	1					
ANR	866198	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	291:12:9522:9562	866180	1	True				
ANR	866199	CallExpression	return_error ( gs_error_invalidfileaccess )		866180	0					
ANR	866200	Callee	return_error		866180	0					
ANR	866201	Identifier	return_error		866180	0					
ANR	866202	ArgumentList	gs_error_invalidfileaccess		866180	1					
ANR	866203	Argument	gs_error_invalidfileaccess		866180	0					
ANR	866204	Identifier	gs_error_invalidfileaccess		866180	0					
ANR	866205	IfStatement	if ( gp_can_share_fdesc ( ) )		866180	1					
ANR	866206	Condition	gp_can_share_fdesc ( )	292:12:9576:9595	866180	0	True				
ANR	866207	CallExpression	gp_can_share_fdesc ( )		866180	0					
ANR	866208	Callee	gp_can_share_fdesc		866180	0					
ANR	866209	Identifier	gp_can_share_fdesc		866180	0					
ANR	866210	ArgumentList			866180	1					
ANR	866211	CompoundStatement		5:34:141:141	866180	1					
ANR	866212	ExpressionStatement	"* pcf = ( clist_file_ptr ) wrap_file ( mem , gp_open_scratch_file_rm ( mem , gp_scratch_file_name_prefix , fname , fmode ) , fmode )"	293:12:9612:9839	866180	0	True				
ANR	866213	AssignmentExpression	"* pcf = ( clist_file_ptr ) wrap_file ( mem , gp_open_scratch_file_rm ( mem , gp_scratch_file_name_prefix , fname , fmode ) , fmode )"		866180	0		=			
ANR	866214	UnaryOperationExpression	* pcf		866180	0					
ANR	866215	UnaryOperator	*		866180	0					
ANR	866216	Identifier	pcf		866180	1					
ANR	866217	CastExpression	"( clist_file_ptr ) wrap_file ( mem , gp_open_scratch_file_rm ( mem , gp_scratch_file_name_prefix , fname , fmode ) , fmode )"		866180	1					
ANR	866218	CastTarget	clist_file_ptr		866180	0					
ANR	866219	CallExpression	"wrap_file ( mem , gp_open_scratch_file_rm ( mem , gp_scratch_file_name_prefix , fname , fmode ) , fmode )"		866180	1					
ANR	866220	Callee	wrap_file		866180	0					
ANR	866221	Identifier	wrap_file		866180	0					
ANR	866222	ArgumentList	mem		866180	1					
ANR	866223	Argument	mem		866180	0					
ANR	866224	Identifier	mem		866180	0					
ANR	866225	Argument	"gp_open_scratch_file_rm ( mem , gp_scratch_file_name_prefix , fname , fmode )"		866180	1					
ANR	866226	CallExpression	"gp_open_scratch_file_rm ( mem , gp_scratch_file_name_prefix , fname , fmode )"		866180	0					
ANR	866227	Callee	gp_open_scratch_file_rm		866180	0					
ANR	866228	Identifier	gp_open_scratch_file_rm		866180	0					
ANR	866229	ArgumentList	mem		866180	1					
ANR	866230	Argument	mem		866180	0					
ANR	866231	Identifier	mem		866180	0					
ANR	866232	Argument	gp_scratch_file_name_prefix		866180	1					
ANR	866233	Identifier	gp_scratch_file_name_prefix		866180	0					
ANR	866234	Argument	fname		866180	2					
ANR	866235	Identifier	fname		866180	0					
ANR	866236	Argument	fmode		866180	3					
ANR	866237	Identifier	fmode		866180	0					
ANR	866238	Argument	fmode		866180	2					
ANR	866239	Identifier	fmode		866180	0					
ANR	866240	IfStatement	if ( * pcf != NULL )		866180	1					
ANR	866241	Condition	* pcf != NULL	298:16:10005:10016	866180	0	True				
ANR	866242	EqualityExpression	* pcf != NULL		866180	0		!=			
ANR	866243	UnaryOperationExpression	* pcf		866180	0					
ANR	866244	UnaryOperator	*		866180	0					
ANR	866245	Identifier	pcf		866180	1					
ANR	866246	Identifier	NULL		866180	1					
ANR	866247	ExpressionStatement	"file_to_fake_path ( * pcf , fname )"	299:16:10035:10065	866180	1	True				
ANR	866248	CallExpression	"file_to_fake_path ( * pcf , fname )"		866180	0					
ANR	866249	Callee	file_to_fake_path		866180	0					
ANR	866250	Identifier	file_to_fake_path		866180	0					
ANR	866251	ArgumentList	* pcf		866180	1					
ANR	866252	Argument	* pcf		866180	0					
ANR	866253	UnaryOperationExpression	* pcf		866180	0					
ANR	866254	UnaryOperator	*		866180	0					
ANR	866255	Identifier	pcf		866180	1					
ANR	866256	Argument	fname		866180	1					
ANR	866257	Identifier	fname		866180	0					
ANR	866258	ElseStatement	else		866180	0					
ANR	866259	CompoundStatement		13:15:625:625	866180	0					
ANR	866260	ExpressionStatement	"* pcf = ( clist_file_ptr ) wrap_file ( mem , gp_open_scratch_file_64 ( mem , gp_scratch_file_name_prefix , fname , fmode ) , fmode )"	301:12:10096:10323	866180	0	True				
ANR	866261	AssignmentExpression	"* pcf = ( clist_file_ptr ) wrap_file ( mem , gp_open_scratch_file_64 ( mem , gp_scratch_file_name_prefix , fname , fmode ) , fmode )"		866180	0		=			
ANR	866262	UnaryOperationExpression	* pcf		866180	0					
ANR	866263	UnaryOperator	*		866180	0					
ANR	866264	Identifier	pcf		866180	1					
ANR	866265	CastExpression	"( clist_file_ptr ) wrap_file ( mem , gp_open_scratch_file_64 ( mem , gp_scratch_file_name_prefix , fname , fmode ) , fmode )"		866180	1					
ANR	866266	CastTarget	clist_file_ptr		866180	0					
ANR	866267	CallExpression	"wrap_file ( mem , gp_open_scratch_file_64 ( mem , gp_scratch_file_name_prefix , fname , fmode ) , fmode )"		866180	1					
ANR	866268	Callee	wrap_file		866180	0					
ANR	866269	Identifier	wrap_file		866180	0					
ANR	866270	ArgumentList	mem		866180	1					
ANR	866271	Argument	mem		866180	0					
ANR	866272	Identifier	mem		866180	0					
ANR	866273	Argument	"gp_open_scratch_file_64 ( mem , gp_scratch_file_name_prefix , fname , fmode )"		866180	1					
ANR	866274	CallExpression	"gp_open_scratch_file_64 ( mem , gp_scratch_file_name_prefix , fname , fmode )"		866180	0					
ANR	866275	Callee	gp_open_scratch_file_64		866180	0					
ANR	866276	Identifier	gp_open_scratch_file_64		866180	0					
ANR	866277	ArgumentList	mem		866180	1					
ANR	866278	Argument	mem		866180	0					
ANR	866279	Identifier	mem		866180	0					
ANR	866280	Argument	gp_scratch_file_name_prefix		866180	1					
ANR	866281	Identifier	gp_scratch_file_name_prefix		866180	0					
ANR	866282	Argument	fname		866180	2					
ANR	866283	Identifier	fname		866180	0					
ANR	866284	Argument	fmode		866180	3					
ANR	866285	Identifier	fmode		866180	0					
ANR	866286	Argument	fmode		866180	2					
ANR	866287	Identifier	fmode		866180	0					
ANR	866288	ElseStatement	else		866180	0					
ANR	866289	CompoundStatement		19:8:899:944	866180	0					
ANR	866290	IdentifierDeclStatement	clist_file_ptr ocf = fake_path_to_file ( fname ) ;	306:8:10356:10401	866180	0	True				
ANR	866291	IdentifierDecl	ocf = fake_path_to_file ( fname )		866180	0					
ANR	866292	IdentifierDeclType	clist_file_ptr		866180	0					
ANR	866293	Identifier	ocf		866180	1					
ANR	866294	AssignmentExpression	ocf = fake_path_to_file ( fname )		866180	2		=			
ANR	866295	Identifier	ocf		866180	0					
ANR	866296	CallExpression	fake_path_to_file ( fname )		866180	1					
ANR	866297	Callee	fake_path_to_file		866180	0					
ANR	866298	Identifier	fake_path_to_file		866180	0					
ANR	866299	ArgumentList	fname		866180	1					
ANR	866300	Argument	fname		866180	0					
ANR	866301	Identifier	fname		866180	0					
ANR	866302	IfStatement	if ( ocf )		866180	1					
ANR	866303	Condition	ocf	307:12:10415:10417	866180	0	True				
ANR	866304	Identifier	ocf		866180	0					
ANR	866305	CompoundStatement		20:17:963:963	866180	1					
ANR	866306	ExpressionStatement	"* pcf = wrap_file ( mem , gp_fdup ( ( ( IFILE * ) ocf ) -> f , fmode ) , fmode )"	309:12:10519:10582	866180	0	True				
ANR	866307	AssignmentExpression	"* pcf = wrap_file ( mem , gp_fdup ( ( ( IFILE * ) ocf ) -> f , fmode ) , fmode )"		866180	0		=			
ANR	866308	UnaryOperationExpression	* pcf		866180	0					
ANR	866309	UnaryOperator	*		866180	0					
ANR	866310	Identifier	pcf		866180	1					
ANR	866311	CallExpression	"wrap_file ( mem , gp_fdup ( ( ( IFILE * ) ocf ) -> f , fmode ) , fmode )"		866180	1					
ANR	866312	Callee	wrap_file		866180	0					
ANR	866313	Identifier	wrap_file		866180	0					
ANR	866314	ArgumentList	mem		866180	1					
ANR	866315	Argument	mem		866180	0					
ANR	866316	Identifier	mem		866180	0					
ANR	866317	Argument	"gp_fdup ( ( ( IFILE * ) ocf ) -> f , fmode )"		866180	1					
ANR	866318	CallExpression	"gp_fdup ( ( ( IFILE * ) ocf ) -> f , fmode )"		866180	0					
ANR	866319	Callee	gp_fdup		866180	0					
ANR	866320	Identifier	gp_fdup		866180	0					
ANR	866321	ArgumentList	( ( IFILE * ) ocf ) -> f		866180	1					
ANR	866322	Argument	( ( IFILE * ) ocf ) -> f		866180	0					
ANR	866323	PtrMemberAccess	( ( IFILE * ) ocf ) -> f		866180	0					
ANR	866324	CastExpression	( IFILE * ) ocf		866180	0					
ANR	866325	CastTarget	IFILE *		866180	0					
ANR	866326	Identifier	ocf		866180	1					
ANR	866327	Identifier	f		866180	1					
ANR	866328	Argument	fmode		866180	1					
ANR	866329	Identifier	fmode		866180	0					
ANR	866330	Argument	fmode		866180	2					
ANR	866331	Identifier	fmode		866180	0					
ANR	866332	IfStatement	if ( * pcf )		866180	1					
ANR	866333	Condition	* pcf	311:16:10671:10674	866180	0	True				
ANR	866334	UnaryOperationExpression	* pcf		866180	0					
ANR	866335	UnaryOperator	*		866180	0					
ANR	866336	Identifier	pcf		866180	1					
ANR	866337	ExpressionStatement	( ( IFILE * ) ( * pcf ) ) -> filesize = ( ( IFILE * ) ocf ) -> filesize	312:16:10693:10747	866180	1	True				
ANR	866338	AssignmentExpression	( ( IFILE * ) ( * pcf ) ) -> filesize = ( ( IFILE * ) ocf ) -> filesize		866180	0		=			
ANR	866339	PtrMemberAccess	( ( IFILE * ) ( * pcf ) ) -> filesize		866180	0					
ANR	866340	CastExpression	( IFILE * ) ( * pcf )		866180	0					
ANR	866341	CastTarget	IFILE *		866180	0					
ANR	866342	UnaryOperationExpression	* pcf		866180	1					
ANR	866343	UnaryOperator	*		866180	0					
ANR	866344	Identifier	pcf		866180	1					
ANR	866345	Identifier	filesize		866180	1					
ANR	866346	PtrMemberAccess	( ( IFILE * ) ocf ) -> filesize		866180	1					
ANR	866347	CastExpression	( IFILE * ) ocf		866180	0					
ANR	866348	CastTarget	IFILE *		866180	0					
ANR	866349	Identifier	ocf		866180	1					
ANR	866350	Identifier	filesize		866180	1					
ANR	866351	ElseStatement	else		866180	0					
ANR	866352	CompoundStatement		26:15:1307:1307	866180	0					
ANR	866353	ExpressionStatement	"* pcf = wrap_file ( mem , gp_fopen ( fname , fmode ) , fmode )"	314:12:10778:10830	866180	0	True				
ANR	866354	AssignmentExpression	"* pcf = wrap_file ( mem , gp_fopen ( fname , fmode ) , fmode )"		866180	0		=			
ANR	866355	UnaryOperationExpression	* pcf		866180	0					
ANR	866356	UnaryOperator	*		866180	0					
ANR	866357	Identifier	pcf		866180	1					
ANR	866358	CallExpression	"wrap_file ( mem , gp_fopen ( fname , fmode ) , fmode )"		866180	1					
ANR	866359	Callee	wrap_file		866180	0					
ANR	866360	Identifier	wrap_file		866180	0					
ANR	866361	ArgumentList	mem		866180	1					
ANR	866362	Argument	mem		866180	0					
ANR	866363	Identifier	mem		866180	0					
ANR	866364	Argument	"gp_fopen ( fname , fmode )"		866180	1					
ANR	866365	CallExpression	"gp_fopen ( fname , fmode )"		866180	0					
ANR	866366	Callee	gp_fopen		866180	0					
ANR	866367	Identifier	gp_fopen		866180	0					
ANR	866368	ArgumentList	fname		866180	1					
ANR	866369	Argument	fname		866180	0					
ANR	866370	Identifier	fname		866180	0					
ANR	866371	Argument	fmode		866180	1					
ANR	866372	Identifier	fmode		866180	0					
ANR	866373	Argument	fmode		866180	2					
ANR	866374	Identifier	fmode		866180	0					
ANR	866375	IfStatement	if ( * pcf == NULL )		866180	1					
ANR	866376	Condition	* pcf == NULL	318:8:10857:10868	866180	0	True				
ANR	866377	EqualityExpression	* pcf == NULL		866180	0		==			
ANR	866378	UnaryOperationExpression	* pcf		866180	0					
ANR	866379	UnaryOperator	*		866180	0					
ANR	866380	Identifier	pcf		866180	1					
ANR	866381	Identifier	NULL		866180	1					
ANR	866382	CompoundStatement		31:22:1414:1414	866180	1					
ANR	866383	ExpressionStatement	"emprintf1 ( mem , ""Could not open the scratch file %s.\\n"" , fname )"	319:8:10881:10943	866180	0	True				
ANR	866384	CallExpression	"emprintf1 ( mem , ""Could not open the scratch file %s.\\n"" , fname )"		866180	0					
ANR	866385	Callee	emprintf1		866180	0					
ANR	866386	Identifier	emprintf1		866180	0					
ANR	866387	ArgumentList	mem		866180	1					
ANR	866388	Argument	mem		866180	0					
ANR	866389	Identifier	mem		866180	0					
ANR	866390	Argument	"""Could not open the scratch file %s.\\n"""		866180	1					
ANR	866391	PrimaryExpression	"""Could not open the scratch file %s.\\n"""		866180	0					
ANR	866392	Argument	fname		866180	2					
ANR	866393	Identifier	fname		866180	0					
ANR	866394	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	320:8:10953:10993	866180	1	True				
ANR	866395	CallExpression	return_error ( gs_error_invalidfileaccess )		866180	0					
ANR	866396	Callee	return_error		866180	0					
ANR	866397	Identifier	return_error		866180	0					
ANR	866398	ArgumentList	gs_error_invalidfileaccess		866180	1					
ANR	866399	Argument	gs_error_invalidfileaccess		866180	0					
ANR	866400	Identifier	gs_error_invalidfileaccess		866180	0					
ANR	866401	ReturnStatement	return 0 ;	323:4:11006:11014	866180	2	True				
ANR	866402	PrimaryExpression	0		866180	0					
ANR	866403	ReturnType	static int		866180	1					
ANR	866404	Identifier	clist_fopen		866180	2					
ANR	866405	ParameterList	"char fname [ gp_file_name_sizeof ] , const char * fmode , clist_file_ptr * pcf , gs_memory_t * mem , gs_memory_t * data_mem , bool ok_to_compress"		866180	3					
ANR	866406	Parameter	char fname [ gp_file_name_sizeof ]	285:12:9295:9325	866180	0	True				
ANR	866407	ParameterType	char [ gp_file_name_sizeof ]		866180	0					
ANR	866408	Identifier	fname		866180	1					
ANR	866409	Parameter	const char * fmode	285:45:9328:9344	866180	1	True				
ANR	866410	ParameterType	const char *		866180	0					
ANR	866411	Identifier	fmode		866180	1					
ANR	866412	Parameter	clist_file_ptr * pcf	286:12:9359:9378	866180	2	True				
ANR	866413	ParameterType	clist_file_ptr *		866180	0					
ANR	866414	Identifier	pcf		866180	1					
ANR	866415	Parameter	gs_memory_t * mem	286:34:9381:9397	866180	3	True				
ANR	866416	ParameterType	gs_memory_t *		866180	0					
ANR	866417	Identifier	mem		866180	1					
ANR	866418	Parameter	gs_memory_t * data_mem	286:53:9400:9420	866180	4	True				
ANR	866419	ParameterType	gs_memory_t *		866180	0					
ANR	866420	Identifier	data_mem		866180	1					
ANR	866421	Parameter	bool ok_to_compress	287:12:9435:9453	866180	5	True				
ANR	866422	ParameterType	bool		866180	0					
ANR	866423	Identifier	ok_to_compress		866180	1					
ANR	866424	CFGEntryNode	ENTRY		866180		True				
ANR	866425	CFGExitNode	EXIT		866180		True				
ANR	866426	Symbol	ok_to_compress		866180						
ANR	866427	Symbol	gp_fdup		866180						
ANR	866428	Symbol	* fname		866180						
ANR	866429	Symbol	wrap_file		866180						
ANR	866430	Symbol	pcf		866180						
ANR	866431	Symbol	ocf		866180						
ANR	866432	Symbol	mem		866180						
ANR	866433	Symbol	gp_scratch_file_name_prefix		866180						
ANR	866434	Symbol	gp_can_share_fdesc		866180						
ANR	866435	Symbol	fmode		866180						
ANR	866436	Symbol	gp_fopen		866180						
ANR	866437	Symbol	fname		866180						
ANR	866438	Symbol	( ( IFILE * ) ocf ) -> filesize		866180						
ANR	866439	Symbol	* fmode		866180						
ANR	866440	Symbol	NULL		866180						
ANR	866441	Symbol	fake_path_to_file		866180						
ANR	866442	Symbol	data_mem		866180						
ANR	866443	Symbol	* * pcf		866180						
ANR	866444	Symbol	gp_open_scratch_file_rm		866180						
ANR	866445	Symbol	( ( IFILE * ) ( * pcf ) ) -> filesize		866180						
ANR	866446	Symbol	gp_open_scratch_file_64		866180						
ANR	866447	Symbol	( ( IFILE * ) ocf ) -> f		866180						
ANR	866448	Symbol	gs_error_invalidfileaccess		866180						
ANR	866449	Symbol	* ocf		866180						
ANR	866450	Symbol	* pcf		866180						
ANR	866451	Function	clist_unlink	326:0:11019:11509							
ANR	866452	FunctionDef	clist_unlink (const char * fname)		866451	0					
ANR	866453	CompoundStatement		328:0:11062:11509	866451	0					
ANR	866454	IdentifierDeclStatement	clist_file_ptr ocf = fake_path_to_file ( fname ) ;	329:4:11068:11113	866451	0	True				
ANR	866455	IdentifierDecl	ocf = fake_path_to_file ( fname )		866451	0					
ANR	866456	IdentifierDeclType	clist_file_ptr		866451	0					
ANR	866457	Identifier	ocf		866451	1					
ANR	866458	AssignmentExpression	ocf = fake_path_to_file ( fname )		866451	2		=			
ANR	866459	Identifier	ocf		866451	0					
ANR	866460	CallExpression	fake_path_to_file ( fname )		866451	1					
ANR	866461	Callee	fake_path_to_file		866451	0					
ANR	866462	Identifier	fake_path_to_file		866451	0					
ANR	866463	ArgumentList	fname		866451	1					
ANR	866464	Argument	fname		866451	0					
ANR	866465	Identifier	fname		866451	0					
ANR	866466	IfStatement	if ( ocf )		866451	1					
ANR	866467	Condition	ocf	330:8:11123:11125	866451	0	True				
ANR	866468	Identifier	ocf		866451	0					
ANR	866469	CompoundStatement		3:13:65:65	866451	1					
ANR	866470	ReturnStatement	return close_file ( ( IFILE * ) ocf ) != 0 ? gs_note_error ( gs_error_ioerror ) : 0 ;	334:8:11339:11413	866451	0	True				
ANR	866471	ConditionalExpression	close_file ( ( IFILE * ) ocf ) != 0 ? gs_note_error ( gs_error_ioerror ) : 0		866451	0					
ANR	866472	Condition	close_file ( ( IFILE * ) ocf ) != 0		866451	0					
ANR	866473	EqualityExpression	close_file ( ( IFILE * ) ocf ) != 0		866451	0		!=			
ANR	866474	CallExpression	close_file ( ( IFILE * ) ocf )		866451	0					
ANR	866475	Callee	close_file		866451	0					
ANR	866476	Identifier	close_file		866451	0					
ANR	866477	ArgumentList	( IFILE * ) ocf		866451	1					
ANR	866478	Argument	( IFILE * ) ocf		866451	0					
ANR	866479	CastExpression	( IFILE * ) ocf		866451	0					
ANR	866480	CastTarget	IFILE *		866451	0					
ANR	866481	Identifier	ocf		866451	1					
ANR	866482	PrimaryExpression	0		866451	1					
ANR	866483	CallExpression	gs_note_error ( gs_error_ioerror )		866451	1					
ANR	866484	Callee	gs_note_error		866451	0					
ANR	866485	Identifier	gs_note_error		866451	0					
ANR	866486	ArgumentList	gs_error_ioerror		866451	1					
ANR	866487	Argument	gs_error_ioerror		866451	0					
ANR	866488	Identifier	gs_error_ioerror		866451	0					
ANR	866489	PrimaryExpression	0		866451	2					
ANR	866490	ElseStatement	else		866451	0					
ANR	866491	CompoundStatement		8:11:363:363	866451	0					
ANR	866492	ReturnStatement	return ( unlink ( fname ) != 0 ? gs_note_error ( gs_error_ioerror ) : 0 ) ;	336:8:11436:11501	866451	0	True				
ANR	866493	ConditionalExpression	unlink ( fname ) != 0 ? gs_note_error ( gs_error_ioerror ) : 0		866451	0					
ANR	866494	Condition	unlink ( fname ) != 0		866451	0					
ANR	866495	EqualityExpression	unlink ( fname ) != 0		866451	0		!=			
ANR	866496	CallExpression	unlink ( fname )		866451	0					
ANR	866497	Callee	unlink		866451	0					
ANR	866498	Identifier	unlink		866451	0					
ANR	866499	ArgumentList	fname		866451	1					
ANR	866500	Argument	fname		866451	0					
ANR	866501	Identifier	fname		866451	0					
ANR	866502	PrimaryExpression	0		866451	1					
ANR	866503	CallExpression	gs_note_error ( gs_error_ioerror )		866451	1					
ANR	866504	Callee	gs_note_error		866451	0					
ANR	866505	Identifier	gs_note_error		866451	0					
ANR	866506	ArgumentList	gs_error_ioerror		866451	1					
ANR	866507	Argument	gs_error_ioerror		866451	0					
ANR	866508	Identifier	gs_error_ioerror		866451	0					
ANR	866509	PrimaryExpression	0		866451	2					
ANR	866510	ReturnType	static int		866451	1					
ANR	866511	Identifier	clist_unlink		866451	2					
ANR	866512	ParameterList	const char * fname		866451	3					
ANR	866513	Parameter	const char * fname	327:13:11043:11059	866451	0	True				
ANR	866514	ParameterType	const char *		866451	0					
ANR	866515	Identifier	fname		866451	1					
ANR	866516	CFGEntryNode	ENTRY		866451		True				
ANR	866517	CFGExitNode	EXIT		866451		True				
ANR	866518	Symbol	fname		866451						
ANR	866519	Symbol	gs_note_error		866451						
ANR	866520	Symbol	ocf		866451						
ANR	866521	Symbol	fake_path_to_file		866451						
ANR	866522	Symbol	unlink		866451						
ANR	866523	Symbol	gs_error_ioerror		866451						
ANR	866524	Symbol	close_file		866451						
ANR	866525	DeclStmt									
ANR	866526	Decl							clist_file_ptr	clist_file_ptr	ocf
ANR	866527	Function	clist_fwrite_chars	358:0:12165:12760							
ANR	866528	FunctionDef	"clist_fwrite_chars (const void * data , uint len , clist_file_ptr cf)"		866527	0					
ANR	866529	CompoundStatement		360:0:12242:12760	866527	0					
ANR	866530	IdentifierDeclStatement	int res = 0 ;	361:4:12248:12259	866527	0	True				
ANR	866531	IdentifierDecl	res = 0		866527	0					
ANR	866532	IdentifierDeclType	int		866527	0					
ANR	866533	Identifier	res		866527	1					
ANR	866534	AssignmentExpression	res = 0		866527	2		=			
ANR	866535	Identifier	res		866527	0					
ANR	866536	PrimaryExpression	0		866527	1					
ANR	866537	IdentifierDeclStatement	IFILE * icf = ( IFILE * ) cf ;	362:4:12265:12289	866527	1	True				
ANR	866538	IdentifierDecl	* icf = ( IFILE * ) cf		866527	0					
ANR	866539	IdentifierDeclType	IFILE *		866527	0					
ANR	866540	Identifier	icf		866527	1					
ANR	866541	AssignmentExpression	* icf = ( IFILE * ) cf		866527	2		=			
ANR	866542	Identifier	icf		866527	0					
ANR	866543	CastExpression	( IFILE * ) cf		866527	1					
ANR	866544	CastTarget	IFILE *		866527	0					
ANR	866545	Identifier	cf		866527	1					
ANR	866546	IfStatement	if ( gp_can_share_fdesc ( ) )		866527	2					
ANR	866547	Condition	gp_can_share_fdesc ( )	364:8:12300:12319	866527	0	True				
ANR	866548	CallExpression	gp_can_share_fdesc ( )		866527	0					
ANR	866549	Callee	gp_can_share_fdesc		866527	0					
ANR	866550	Identifier	gp_can_share_fdesc		866527	0					
ANR	866551	ArgumentList			866527	1					
ANR	866552	CompoundStatement		5:30:79:79	866527	1					
ANR	866553	ExpressionStatement	"res = gp_fpwrite ( ( char * ) data , len , ( ( IFILE * ) cf ) -> pos , ( ( IFILE * ) cf ) -> f )"	365:8:12332:12405	866527	0	True				
ANR	866554	AssignmentExpression	"res = gp_fpwrite ( ( char * ) data , len , ( ( IFILE * ) cf ) -> pos , ( ( IFILE * ) cf ) -> f )"		866527	0		=			
ANR	866555	Identifier	res		866527	0					
ANR	866556	CallExpression	"gp_fpwrite ( ( char * ) data , len , ( ( IFILE * ) cf ) -> pos , ( ( IFILE * ) cf ) -> f )"		866527	1					
ANR	866557	Callee	gp_fpwrite		866527	0					
ANR	866558	Identifier	gp_fpwrite		866527	0					
ANR	866559	ArgumentList	( char * ) data		866527	1					
ANR	866560	Argument	( char * ) data		866527	0					
ANR	866561	CastExpression	( char * ) data		866527	0					
ANR	866562	CastTarget	char *		866527	0					
ANR	866563	Identifier	data		866527	1					
ANR	866564	Argument	len		866527	1					
ANR	866565	Identifier	len		866527	0					
ANR	866566	Argument	( ( IFILE * ) cf ) -> pos		866527	2					
ANR	866567	PtrMemberAccess	( ( IFILE * ) cf ) -> pos		866527	0					
ANR	866568	CastExpression	( IFILE * ) cf		866527	0					
ANR	866569	CastTarget	IFILE *		866527	0					
ANR	866570	Identifier	cf		866527	1					
ANR	866571	Identifier	pos		866527	1					
ANR	866572	Argument	( ( IFILE * ) cf ) -> f		866527	3					
ANR	866573	PtrMemberAccess	( ( IFILE * ) cf ) -> f		866527	0					
ANR	866574	CastExpression	( IFILE * ) cf		866527	0					
ANR	866575	CastTarget	IFILE *		866527	0					
ANR	866576	Identifier	cf		866527	1					
ANR	866577	Identifier	f		866527	1					
ANR	866578	ElseStatement	else		866527	0					
ANR	866579	CompoundStatement		7:11:175:175	866527	0					
ANR	866580	ExpressionStatement	"res = fwrite ( data , 1 , len , ( ( IFILE * ) cf ) -> f )"	367:8:12428:12472	866527	0	True				
ANR	866581	AssignmentExpression	"res = fwrite ( data , 1 , len , ( ( IFILE * ) cf ) -> f )"		866527	0		=			
ANR	866582	Identifier	res		866527	0					
ANR	866583	CallExpression	"fwrite ( data , 1 , len , ( ( IFILE * ) cf ) -> f )"		866527	1					
ANR	866584	Callee	fwrite		866527	0					
ANR	866585	Identifier	fwrite		866527	0					
ANR	866586	ArgumentList	data		866527	1					
ANR	866587	Argument	data		866527	0					
ANR	866588	Identifier	data		866527	0					
ANR	866589	Argument	1		866527	1					
ANR	866590	PrimaryExpression	1		866527	0					
ANR	866591	Argument	len		866527	2					
ANR	866592	Identifier	len		866527	0					
ANR	866593	Argument	( ( IFILE * ) cf ) -> f		866527	3					
ANR	866594	PtrMemberAccess	( ( IFILE * ) cf ) -> f		866527	0					
ANR	866595	CastExpression	( IFILE * ) cf		866527	0					
ANR	866596	CastTarget	IFILE *		866527	0					
ANR	866597	Identifier	cf		866527	1					
ANR	866598	Identifier	f		866527	1					
ANR	866599	IfStatement	if ( res >= 0 )		866527	3					
ANR	866600	Condition	res >= 0	369:8:12488:12495	866527	0	True				
ANR	866601	RelationalExpression	res >= 0		866527	0		>=			
ANR	866602	Identifier	res		866527	0					
ANR	866603	PrimaryExpression	0		866527	1					
ANR	866604	ExpressionStatement	icf -> pos += len	370:8:12506:12521	866527	1	True				
ANR	866605	AssignmentExpression	icf -> pos += len		866527	0		+=			
ANR	866606	PtrMemberAccess	icf -> pos		866527	0					
ANR	866607	Identifier	icf		866527	0					
ANR	866608	Identifier	pos		866527	1					
ANR	866609	Identifier	len		866527	1					
ANR	866610	ExpressionStatement	icf -> filesize = icf -> pos	371:4:12527:12551	866527	4	True				
ANR	866611	AssignmentExpression	icf -> filesize = icf -> pos		866527	0		=			
ANR	866612	PtrMemberAccess	icf -> filesize		866527	0					
ANR	866613	Identifier	icf		866527	0					
ANR	866614	Identifier	filesize		866527	1					
ANR	866615	PtrMemberAccess	icf -> pos		866527	1					
ANR	866616	Identifier	icf		866527	0					
ANR	866617	Identifier	pos		866527	1					
ANR	866618	IfStatement	if ( ! CL_CACHE_NEEDS_INIT ( icf -> cache ) )		866527	5					
ANR	866619	Condition	! CL_CACHE_NEEDS_INIT ( icf -> cache )	372:8:12588:12619	866527	0	True				
ANR	866620	UnaryOperationExpression	! CL_CACHE_NEEDS_INIT ( icf -> cache )		866527	0					
ANR	866621	UnaryOperator	!		866527	0					
ANR	866622	CallExpression	CL_CACHE_NEEDS_INIT ( icf -> cache )		866527	1					
ANR	866623	Callee	CL_CACHE_NEEDS_INIT		866527	0					
ANR	866624	Identifier	CL_CACHE_NEEDS_INIT		866527	0					
ANR	866625	ArgumentList	icf -> cache		866527	1					
ANR	866626	Argument	icf -> cache		866527	0					
ANR	866627	PtrMemberAccess	icf -> cache		866527	0					
ANR	866628	Identifier	icf		866527	0					
ANR	866629	Identifier	cache		866527	1					
ANR	866630	CompoundStatement		13:42:379:379	866527	1					
ANR	866631	ExpressionStatement	cl_cache_destroy ( icf -> cache )	374:8:12681:12709	866527	0	True				
ANR	866632	CallExpression	cl_cache_destroy ( icf -> cache )		866527	0					
ANR	866633	Callee	cl_cache_destroy		866527	0					
ANR	866634	Identifier	cl_cache_destroy		866527	0					
ANR	866635	ArgumentList	icf -> cache		866527	1					
ANR	866636	Argument	icf -> cache		866527	0					
ANR	866637	PtrMemberAccess	icf -> cache		866527	0					
ANR	866638	Identifier	icf		866527	0					
ANR	866639	Identifier	cache		866527	1					
ANR	866640	ExpressionStatement	icf -> cache = NULL	375:8:12719:12736	866527	1	True				
ANR	866641	AssignmentExpression	icf -> cache = NULL		866527	0		=			
ANR	866642	PtrMemberAccess	icf -> cache		866527	0					
ANR	866643	Identifier	icf		866527	0					
ANR	866644	Identifier	cache		866527	1					
ANR	866645	Identifier	NULL		866527	1					
ANR	866646	ReturnStatement	return res ;	377:4:12748:12758	866527	6	True				
ANR	866647	Identifier	res		866527	0					
ANR	866648	ReturnType	static int		866527	1					
ANR	866649	Identifier	clist_fwrite_chars		866527	2					
ANR	866650	ParameterList	"const void * data , uint len , clist_file_ptr cf"		866527	3					
ANR	866651	Parameter	const void * data	359:19:12195:12210	866527	0	True				
ANR	866652	ParameterType	const void *		866527	0					
ANR	866653	Identifier	data		866527	1					
ANR	866654	Parameter	uint len	359:37:12213:12220	866527	1	True				
ANR	866655	ParameterType	uint		866527	0					
ANR	866656	Identifier	len		866527	1					
ANR	866657	Parameter	clist_file_ptr cf	359:47:12223:12239	866527	2	True				
ANR	866658	ParameterType	clist_file_ptr		866527	0					
ANR	866659	Identifier	cf		866527	1					
ANR	866660	CFGEntryNode	ENTRY		866527		True				
ANR	866661	CFGExitNode	EXIT		866527		True				
ANR	866662	Symbol	icf -> pos		866527						
ANR	866663	Symbol	res		866527						
ANR	866664	Symbol	cf		866527						
ANR	866665	Symbol	NULL		866527						
ANR	866666	Symbol	data		866527						
ANR	866667	Symbol	( ( IFILE * ) cf ) -> pos		866527						
ANR	866668	Symbol	CL_CACHE_NEEDS_INIT		866527						
ANR	866669	Symbol	( ( IFILE * ) cf ) -> f		866527						
ANR	866670	Symbol	fwrite		866527						
ANR	866671	Symbol	* icf		866527						
ANR	866672	Symbol	* cf		866527						
ANR	866673	Symbol	icf		866527						
ANR	866674	Symbol	len		866527						
ANR	866675	Symbol	gp_fpwrite		866527						
ANR	866676	Symbol	icf -> filesize		866527						
ANR	866677	Symbol	icf -> cache		866527						
ANR	866678	Symbol	gp_can_share_fdesc		866527						
ANR	866679	Function	clist_fread_chars	382:0:12792:15189							
ANR	866680	FunctionDef	"clist_fread_chars (void * data , uint len , clist_file_ptr cf)"		866679	0					
ANR	866681	CompoundStatement		384:0:12862:15189	866679	0					
ANR	866682	IdentifierDeclStatement	int nread = 0 ;	385:4:12868:12881	866679	0	True				
ANR	866683	IdentifierDecl	nread = 0		866679	0					
ANR	866684	IdentifierDeclType	int		866679	0					
ANR	866685	Identifier	nread		866679	1					
ANR	866686	AssignmentExpression	nread = 0		866679	2		=			
ANR	866687	Identifier	nread		866679	0					
ANR	866688	PrimaryExpression	0		866679	1					
ANR	866689	IfStatement	if ( gp_can_share_fdesc ( ) )		866679	1					
ANR	866690	Condition	gp_can_share_fdesc ( )	387:8:12892:12911	866679	0	True				
ANR	866691	CallExpression	gp_can_share_fdesc ( )		866679	0					
ANR	866692	Callee	gp_can_share_fdesc		866679	0					
ANR	866693	Identifier	gp_can_share_fdesc		866679	0					
ANR	866694	ArgumentList			866679	1					
ANR	866695	CompoundStatement		6:8:95:110	866679	1					
ANR	866696	IdentifierDeclStatement	IFILE * icf = ( IFILE * ) cf ;	388:8:12924:12948	866679	0	True				
ANR	866697	IdentifierDecl	* icf = ( IFILE * ) cf		866679	0					
ANR	866698	IdentifierDeclType	IFILE *		866679	0					
ANR	866699	Identifier	icf		866679	1					
ANR	866700	AssignmentExpression	* icf = ( IFILE * ) cf		866679	2		=			
ANR	866701	Identifier	icf		866679	0					
ANR	866702	CastExpression	( IFILE * ) cf		866679	1					
ANR	866703	CastTarget	IFILE *		866679	0					
ANR	866704	Identifier	cf		866679	1					
ANR	866705	IdentifierDeclStatement	byte * dp = data ;	389:8:12958:12973	866679	1	True				
ANR	866706	IdentifierDecl	* dp = data		866679	0					
ANR	866707	IdentifierDeclType	byte *		866679	0					
ANR	866708	Identifier	dp		866679	1					
ANR	866709	AssignmentExpression	* dp = data		866679	2		=			
ANR	866710	Identifier	data		866679	0					
ANR	866711	Identifier	data		866679	1					
ANR	866712	IfStatement	if ( CL_CACHE_NEEDS_INIT ( icf -> cache ) )		866679	2					
ANR	866713	Condition	CL_CACHE_NEEDS_INIT ( icf -> cache )	392:12:13056:13086	866679	0	True				
ANR	866714	CallExpression	CL_CACHE_NEEDS_INIT ( icf -> cache )		866679	0					
ANR	866715	Callee	CL_CACHE_NEEDS_INIT		866679	0					
ANR	866716	Identifier	CL_CACHE_NEEDS_INIT		866679	0					
ANR	866717	ArgumentList	icf -> cache		866679	1					
ANR	866718	Argument	icf -> cache		866679	0					
ANR	866719	PtrMemberAccess	icf -> cache		866679	0					
ANR	866720	Identifier	icf		866679	0					
ANR	866721	Identifier	cache		866679	1					
ANR	866722	CompoundStatement		9:45:226:226	866679	1					
ANR	866723	ExpressionStatement	"icf -> cache = cl_cache_read_init ( icf -> cache , CL_CACHE_NSLOTS , 1 << CL_CACHE_SLOT_SIZE_LOG2 , icf -> filesize )"	393:12:13103:13206	866679	0	True				
ANR	866724	AssignmentExpression	"icf -> cache = cl_cache_read_init ( icf -> cache , CL_CACHE_NSLOTS , 1 << CL_CACHE_SLOT_SIZE_LOG2 , icf -> filesize )"		866679	0		=			
ANR	866725	PtrMemberAccess	icf -> cache		866679	0					
ANR	866726	Identifier	icf		866679	0					
ANR	866727	Identifier	cache		866679	1					
ANR	866728	CallExpression	"cl_cache_read_init ( icf -> cache , CL_CACHE_NSLOTS , 1 << CL_CACHE_SLOT_SIZE_LOG2 , icf -> filesize )"		866679	1					
ANR	866729	Callee	cl_cache_read_init		866679	0					
ANR	866730	Identifier	cl_cache_read_init		866679	0					
ANR	866731	ArgumentList	icf -> cache		866679	1					
ANR	866732	Argument	icf -> cache		866679	0					
ANR	866733	PtrMemberAccess	icf -> cache		866679	0					
ANR	866734	Identifier	icf		866679	0					
ANR	866735	Identifier	cache		866679	1					
ANR	866736	Argument	CL_CACHE_NSLOTS		866679	1					
ANR	866737	Identifier	CL_CACHE_NSLOTS		866679	0					
ANR	866738	Argument	1 << CL_CACHE_SLOT_SIZE_LOG2		866679	2					
ANR	866739	ShiftExpression	1 << CL_CACHE_SLOT_SIZE_LOG2		866679	0		<<			
ANR	866740	PrimaryExpression	1		866679	0					
ANR	866741	Identifier	CL_CACHE_SLOT_SIZE_LOG2		866679	1					
ANR	866742	Argument	icf -> filesize		866679	3					
ANR	866743	PtrMemberAccess	icf -> filesize		866679	0					
ANR	866744	Identifier	icf		866679	0					
ANR	866745	Identifier	filesize		866679	1					
ANR	866746	IfStatement	if ( icf -> cache != NULL )		866679	3					
ANR	866747	Condition	icf -> cache != NULL	396:12:13325:13342	866679	0	True				
ANR	866748	EqualityExpression	icf -> cache != NULL		866679	0		!=			
ANR	866749	PtrMemberAccess	icf -> cache		866679	0					
ANR	866750	Identifier	icf		866679	0					
ANR	866751	Identifier	cache		866679	1					
ANR	866752	Identifier	NULL		866679	1					
ANR	866753	CompoundStatement		13:32:482:482	866679	1					
ANR	866754	DoStatement	do		866679	0					
ANR	866755	CompoundStatement		15:16:517:522	866679	0					
ANR	866756	IdentifierDeclStatement	int n ;	398:16:13380:13385	866679	0	True				
ANR	866757	IdentifierDecl	n		866679	0					
ANR	866758	IdentifierDeclType	int		866679	0					
ANR	866759	Identifier	n		866679	1					
ANR	866760	IfStatement	"if ( ( n = cl_cache_read ( dp , len - nread , icf -> pos + nread , icf -> cache ) ) < 0 )"		866679	1					
ANR	866761	Condition	"( n = cl_cache_read ( dp , len - nread , icf -> pos + nread , icf -> cache ) ) < 0"	400:20:13408:13473	866679	0	True				
ANR	866762	RelationalExpression	"( n = cl_cache_read ( dp , len - nread , icf -> pos + nread , icf -> cache ) ) < 0"		866679	0		<			
ANR	866763	AssignmentExpression	"n = cl_cache_read ( dp , len - nread , icf -> pos + nread , icf -> cache )"		866679	0		=			
ANR	866764	Identifier	n		866679	0					
ANR	866765	CallExpression	"cl_cache_read ( dp , len - nread , icf -> pos + nread , icf -> cache )"		866679	1					
ANR	866766	Callee	cl_cache_read		866679	0					
ANR	866767	Identifier	cl_cache_read		866679	0					
ANR	866768	ArgumentList	dp		866679	1					
ANR	866769	Argument	dp		866679	0					
ANR	866770	Identifier	dp		866679	0					
ANR	866771	Argument	len - nread		866679	1					
ANR	866772	AdditiveExpression	len - nread		866679	0		-			
ANR	866773	Identifier	len		866679	0					
ANR	866774	Identifier	nread		866679	1					
ANR	866775	Argument	icf -> pos + nread		866679	2					
ANR	866776	AdditiveExpression	icf -> pos + nread		866679	0		+			
ANR	866777	PtrMemberAccess	icf -> pos		866679	0					
ANR	866778	Identifier	icf		866679	0					
ANR	866779	Identifier	pos		866679	1					
ANR	866780	Identifier	nread		866679	1					
ANR	866781	Argument	icf -> cache		866679	3					
ANR	866782	PtrMemberAccess	icf -> cache		866679	0					
ANR	866783	Identifier	icf		866679	0					
ANR	866784	Identifier	cache		866679	1					
ANR	866785	PrimaryExpression	0		866679	1					
ANR	866786	BreakStatement	break ;	401:20:13496:13501	866679	1	True				
ANR	866787	IfStatement	if ( n == 0 )		866679	2					
ANR	866788	Condition	n == 0	402:20:13523:13528	866679	0	True				
ANR	866789	EqualityExpression	n == 0		866679	0		==			
ANR	866790	Identifier	n		866679	0					
ANR	866791	PrimaryExpression	0		866679	1					
ANR	866792	CompoundStatement		23:20:976:1065	866679	1					
ANR	866793	IdentifierDeclStatement	"CL_CACHE_SLOT * slot = cl_cache_get_empty_slot ( icf -> cache , icf -> pos + nread ) ;"	404:20:13635:13708	866679	0	True				
ANR	866794	IdentifierDecl	"* slot = cl_cache_get_empty_slot ( icf -> cache , icf -> pos + nread )"		866679	0					
ANR	866795	IdentifierDeclType	CL_CACHE_SLOT *		866679	0					
ANR	866796	Identifier	slot		866679	1					
ANR	866797	AssignmentExpression	"* slot = cl_cache_get_empty_slot ( icf -> cache , icf -> pos + nread )"		866679	2		=			
ANR	866798	Identifier	slot		866679	0					
ANR	866799	CallExpression	"cl_cache_get_empty_slot ( icf -> cache , icf -> pos + nread )"		866679	1					
ANR	866800	Callee	cl_cache_get_empty_slot		866679	0					
ANR	866801	Identifier	cl_cache_get_empty_slot		866679	0					
ANR	866802	ArgumentList	icf -> cache		866679	1					
ANR	866803	Argument	icf -> cache		866679	0					
ANR	866804	PtrMemberAccess	icf -> cache		866679	0					
ANR	866805	Identifier	icf		866679	0					
ANR	866806	Identifier	cache		866679	1					
ANR	866807	Argument	icf -> pos + nread		866679	1					
ANR	866808	AdditiveExpression	icf -> pos + nread		866679	0		+			
ANR	866809	PtrMemberAccess	icf -> pos		866679	0					
ANR	866810	Identifier	icf		866679	0					
ANR	866811	Identifier	pos		866679	1					
ANR	866812	Identifier	nread		866679	1					
ANR	866813	IdentifierDeclStatement	int64_t block_pos = ( icf -> pos + nread ) & ~ ( icf -> cache -> block_size - 1 ) ;	405:20:13749:13817	866679	1	True				
ANR	866814	IdentifierDecl	block_pos = ( icf -> pos + nread ) & ~ ( icf -> cache -> block_size - 1 )		866679	0					
ANR	866815	IdentifierDeclType	int64_t		866679	0					
ANR	866816	Identifier	block_pos		866679	1					
ANR	866817	AssignmentExpression	block_pos = ( icf -> pos + nread ) & ~ ( icf -> cache -> block_size - 1 )		866679	2		=			
ANR	866818	Identifier	block_pos		866679	0					
ANR	866819	BitAndExpression	( icf -> pos + nread ) & ~ ( icf -> cache -> block_size - 1 )		866679	1		&			
ANR	866820	AdditiveExpression	icf -> pos + nread		866679	0		+			
ANR	866821	PtrMemberAccess	icf -> pos		866679	0					
ANR	866822	Identifier	icf		866679	0					
ANR	866823	Identifier	pos		866679	1					
ANR	866824	Identifier	nread		866679	1					
ANR	866825	UnaryOperationExpression	~ ( icf -> cache -> block_size - 1 )		866679	1					
ANR	866826	UnaryOperator	~		866679	0					
ANR	866827	AdditiveExpression	icf -> cache -> block_size - 1		866679	1		-			
ANR	866828	PtrMemberAccess	icf -> cache -> block_size		866679	0					
ANR	866829	PtrMemberAccess	icf -> cache		866679	0					
ANR	866830	Identifier	icf		866679	0					
ANR	866831	Identifier	cache		866679	1					
ANR	866832	Identifier	block_size		866679	1					
ANR	866833	PrimaryExpression	1		866679	1					
ANR	866834	IdentifierDeclStatement	"int fill_len = gp_fpread ( ( char * ) ( slot -> base ) , icf -> cache -> block_size , block_pos , icf -> f ) ;"	406:20:13839:13928	866679	2	True				
ANR	866835	IdentifierDecl	"fill_len = gp_fpread ( ( char * ) ( slot -> base ) , icf -> cache -> block_size , block_pos , icf -> f )"		866679	0					
ANR	866836	IdentifierDeclType	int		866679	0					
ANR	866837	Identifier	fill_len		866679	1					
ANR	866838	AssignmentExpression	"fill_len = gp_fpread ( ( char * ) ( slot -> base ) , icf -> cache -> block_size , block_pos , icf -> f )"		866679	2		=			
ANR	866839	Identifier	fill_len		866679	0					
ANR	866840	CallExpression	"gp_fpread ( ( char * ) ( slot -> base ) , icf -> cache -> block_size , block_pos , icf -> f )"		866679	1					
ANR	866841	Callee	gp_fpread		866679	0					
ANR	866842	Identifier	gp_fpread		866679	0					
ANR	866843	ArgumentList	( char * ) ( slot -> base )		866679	1					
ANR	866844	Argument	( char * ) ( slot -> base )		866679	0					
ANR	866845	CastExpression	( char * ) ( slot -> base )		866679	0					
ANR	866846	CastTarget	char *		866679	0					
ANR	866847	PtrMemberAccess	slot -> base		866679	1					
ANR	866848	Identifier	slot		866679	0					
ANR	866849	Identifier	base		866679	1					
ANR	866850	Argument	icf -> cache -> block_size		866679	1					
ANR	866851	PtrMemberAccess	icf -> cache -> block_size		866679	0					
ANR	866852	PtrMemberAccess	icf -> cache		866679	0					
ANR	866853	Identifier	icf		866679	0					
ANR	866854	Identifier	cache		866679	1					
ANR	866855	Identifier	block_size		866679	1					
ANR	866856	Argument	block_pos		866679	2					
ANR	866857	Identifier	block_pos		866679	0					
ANR	866858	Argument	icf -> f		866679	3					
ANR	866859	PtrMemberAccess	icf -> f		866679	0					
ANR	866860	Identifier	icf		866679	0					
ANR	866861	Identifier	f		866679	1					
ANR	866862	ExpressionStatement	"cl_cache_load_slot ( icf -> cache , slot , block_pos , slot -> base , fill_len )"	408:20:13951:14020	866679	3	True				
ANR	866863	CallExpression	"cl_cache_load_slot ( icf -> cache , slot , block_pos , slot -> base , fill_len )"		866679	0					
ANR	866864	Callee	cl_cache_load_slot		866679	0					
ANR	866865	Identifier	cl_cache_load_slot		866679	0					
ANR	866866	ArgumentList	icf -> cache		866679	1					
ANR	866867	Argument	icf -> cache		866679	0					
ANR	866868	PtrMemberAccess	icf -> cache		866679	0					
ANR	866869	Identifier	icf		866679	0					
ANR	866870	Identifier	cache		866679	1					
ANR	866871	Argument	slot		866679	1					
ANR	866872	Identifier	slot		866679	0					
ANR	866873	Argument	block_pos		866679	2					
ANR	866874	Identifier	block_pos		866679	0					
ANR	866875	Argument	slot -> base		866679	3					
ANR	866876	PtrMemberAccess	slot -> base		866679	0					
ANR	866877	Identifier	slot		866679	0					
ANR	866878	Identifier	base		866679	1					
ANR	866879	Argument	fill_len		866679	4					
ANR	866880	Identifier	fill_len		866679	0					
ANR	866881	ExpressionStatement	nread += n	410:16:14056:14066	866679	3	True				
ANR	866882	AssignmentExpression	nread += n		866679	0		+=			
ANR	866883	Identifier	nread		866679	0					
ANR	866884	Identifier	n		866679	1					
ANR	866885	ExpressionStatement	dp += n	411:16:14084:14091	866679	4	True				
ANR	866886	AssignmentExpression	dp += n		866679	0		+=			
ANR	866887	Identifier	dp		866679	0					
ANR	866888	Identifier	n		866679	1					
ANR	866889	Condition	nread < len	412:21:14114:14124	866679	1	True				
ANR	866890	RelationalExpression	nread < len		866679	0		<			
ANR	866891	Identifier	nread		866679	0					
ANR	866892	Identifier	len		866679	1					
ANR	866893	ElseStatement	else		866679	0					
ANR	866894	CompoundStatement		30:15:1280:1280	866679	0					
ANR	866895	ExpressionStatement	"nread = gp_fpread ( data , len , icf -> pos , icf -> f )"	415:12:14205:14251	866679	0	True				
ANR	866896	AssignmentExpression	"nread = gp_fpread ( data , len , icf -> pos , icf -> f )"		866679	0		=			
ANR	866897	Identifier	nread		866679	0					
ANR	866898	CallExpression	"gp_fpread ( data , len , icf -> pos , icf -> f )"		866679	1					
ANR	866899	Callee	gp_fpread		866679	0					
ANR	866900	Identifier	gp_fpread		866679	0					
ANR	866901	ArgumentList	data		866679	1					
ANR	866902	Argument	data		866679	0					
ANR	866903	Identifier	data		866679	0					
ANR	866904	Argument	len		866679	1					
ANR	866905	Identifier	len		866679	0					
ANR	866906	Argument	icf -> pos		866679	2					
ANR	866907	PtrMemberAccess	icf -> pos		866679	0					
ANR	866908	Identifier	icf		866679	0					
ANR	866909	Identifier	pos		866679	1					
ANR	866910	Argument	icf -> f		866679	3					
ANR	866911	PtrMemberAccess	icf -> f		866679	0					
ANR	866912	Identifier	icf		866679	0					
ANR	866913	Identifier	f		866679	1					
ANR	866914	IfStatement	if ( nread >= 0 )		866679	4					
ANR	866915	Condition	nread >= 0	417:12:14275:14284	866679	0	True				
ANR	866916	RelationalExpression	nread >= 0		866679	0		>=			
ANR	866917	Identifier	nread		866679	0					
ANR	866918	PrimaryExpression	0		866679	1					
ANR	866919	ExpressionStatement	icf -> pos += nread	418:12:14299:14316	866679	1	True				
ANR	866920	AssignmentExpression	icf -> pos += nread		866679	0		+=			
ANR	866921	PtrMemberAccess	icf -> pos		866679	0					
ANR	866922	Identifier	icf		866679	0					
ANR	866923	Identifier	pos		866679	1					
ANR	866924	Identifier	nread		866679	1					
ANR	866925	ElseStatement	else		866679	0					
ANR	866926	CompoundStatement		38:8:1512:1528	866679	0					
ANR	866927	IdentifierDeclStatement	FILE * f = ( ( IFILE * ) cf ) -> f ;	420:8:14339:14365	866679	0	True				
ANR	866928	IdentifierDecl	* f = ( ( IFILE * ) cf ) -> f		866679	0					
ANR	866929	IdentifierDeclType	FILE *		866679	0					
ANR	866930	Identifier	f		866679	1					
ANR	866931	AssignmentExpression	* f = ( ( IFILE * ) cf ) -> f		866679	2		=			
ANR	866932	Identifier	f		866679	0					
ANR	866933	PtrMemberAccess	( ( IFILE * ) cf ) -> f		866679	1					
ANR	866934	CastExpression	( IFILE * ) cf		866679	0					
ANR	866935	CastTarget	IFILE *		866679	0					
ANR	866936	Identifier	cf		866679	1					
ANR	866937	Identifier	f		866679	1					
ANR	866938	IdentifierDeclStatement	byte * str = data ;	421:8:14375:14391	866679	1	True				
ANR	866939	IdentifierDecl	* str = data		866679	0					
ANR	866940	IdentifierDeclType	byte *		866679	0					
ANR	866941	Identifier	str		866679	1					
ANR	866942	AssignmentExpression	* str = data		866679	2		=			
ANR	866943	Identifier	data		866679	0					
ANR	866944	Identifier	data		866679	1					
ANR	866945	SwitchStatement	switch ( len )		866679	2					
ANR	866946	Condition	len	426:16:14574:14576	866679	0	True				
ANR	866947	Identifier	len		866679	0					
ANR	866948	CompoundStatement		43:21:1716:1716	866679	1					
ANR	866949	Label	default :	427:12:14593:14600	866679	0	True				
ANR	866950	Identifier	default		866679	0					
ANR	866951	ReturnStatement	"return fread ( str , 1 , len , f ) ;"	428:16:14618:14646	866679	1	True				
ANR	866952	CallExpression	"fread ( str , 1 , len , f )"		866679	0					
ANR	866953	Callee	fread		866679	0					
ANR	866954	Identifier	fread		866679	0					
ANR	866955	ArgumentList	str		866679	1					
ANR	866956	Argument	str		866679	0					
ANR	866957	Identifier	str		866679	0					
ANR	866958	Argument	1		866679	1					
ANR	866959	PrimaryExpression	1		866679	0					
ANR	866960	Argument	len		866679	2					
ANR	866961	Identifier	len		866679	0					
ANR	866962	Argument	f		866679	3					
ANR	866963	Identifier	f		866679	0					
ANR	866964	Label	case 8 :	429:12:14660:14666	866679	2	True				
ANR	866965	ExpressionStatement	* str ++ = ( byte ) getc ( f )	430:16:14684:14707	866679	3	True				
ANR	866966	AssignmentExpression	* str ++ = ( byte ) getc ( f )		866679	0		=			
ANR	866967	UnaryOperationExpression	* str ++		866679	0					
ANR	866968	UnaryOperator	*		866679	0					
ANR	866969	PostIncDecOperationExpression	str ++		866679	1					
ANR	866970	Identifier	str		866679	0					
ANR	866971	IncDec	++		866679	1					
ANR	866972	CastExpression	( byte ) getc ( f )		866679	1					
ANR	866973	CastTarget	byte		866679	0					
ANR	866974	CallExpression	getc ( f )		866679	1					
ANR	866975	Callee	getc		866679	0					
ANR	866976	Identifier	getc		866679	0					
ANR	866977	ArgumentList	f		866679	1					
ANR	866978	Argument	f		866679	0					
ANR	866979	Identifier	f		866679	0					
ANR	866980	Label	case 7 :	431:12:14721:14727	866679	4	True				
ANR	866981	ExpressionStatement	* str ++ = ( byte ) getc ( f )	432:16:14745:14768	866679	5	True				
ANR	866982	AssignmentExpression	* str ++ = ( byte ) getc ( f )		866679	0		=			
ANR	866983	UnaryOperationExpression	* str ++		866679	0					
ANR	866984	UnaryOperator	*		866679	0					
ANR	866985	PostIncDecOperationExpression	str ++		866679	1					
ANR	866986	Identifier	str		866679	0					
ANR	866987	IncDec	++		866679	1					
ANR	866988	CastExpression	( byte ) getc ( f )		866679	1					
ANR	866989	CastTarget	byte		866679	0					
ANR	866990	CallExpression	getc ( f )		866679	1					
ANR	866991	Callee	getc		866679	0					
ANR	866992	Identifier	getc		866679	0					
ANR	866993	ArgumentList	f		866679	1					
ANR	866994	Argument	f		866679	0					
ANR	866995	Identifier	f		866679	0					
ANR	866996	Label	case 6 :	433:12:14782:14788	866679	6	True				
ANR	866997	ExpressionStatement	* str ++ = ( byte ) getc ( f )	434:16:14806:14829	866679	7	True				
ANR	866998	AssignmentExpression	* str ++ = ( byte ) getc ( f )		866679	0		=			
ANR	866999	UnaryOperationExpression	* str ++		866679	0					
ANR	867000	UnaryOperator	*		866679	0					
ANR	867001	PostIncDecOperationExpression	str ++		866679	1					
ANR	867002	Identifier	str		866679	0					
ANR	867003	IncDec	++		866679	1					
ANR	867004	CastExpression	( byte ) getc ( f )		866679	1					
ANR	867005	CastTarget	byte		866679	0					
ANR	867006	CallExpression	getc ( f )		866679	1					
ANR	867007	Callee	getc		866679	0					
ANR	867008	Identifier	getc		866679	0					
ANR	867009	ArgumentList	f		866679	1					
ANR	867010	Argument	f		866679	0					
ANR	867011	Identifier	f		866679	0					
ANR	867012	Label	case 5 :	435:12:14843:14849	866679	8	True				
ANR	867013	ExpressionStatement	* str ++ = ( byte ) getc ( f )	436:16:14867:14890	866679	9	True				
ANR	867014	AssignmentExpression	* str ++ = ( byte ) getc ( f )		866679	0		=			
ANR	867015	UnaryOperationExpression	* str ++		866679	0					
ANR	867016	UnaryOperator	*		866679	0					
ANR	867017	PostIncDecOperationExpression	str ++		866679	1					
ANR	867018	Identifier	str		866679	0					
ANR	867019	IncDec	++		866679	1					
ANR	867020	CastExpression	( byte ) getc ( f )		866679	1					
ANR	867021	CastTarget	byte		866679	0					
ANR	867022	CallExpression	getc ( f )		866679	1					
ANR	867023	Callee	getc		866679	0					
ANR	867024	Identifier	getc		866679	0					
ANR	867025	ArgumentList	f		866679	1					
ANR	867026	Argument	f		866679	0					
ANR	867027	Identifier	f		866679	0					
ANR	867028	Label	case 4 :	437:12:14904:14910	866679	10	True				
ANR	867029	ExpressionStatement	* str ++ = ( byte ) getc ( f )	438:16:14928:14951	866679	11	True				
ANR	867030	AssignmentExpression	* str ++ = ( byte ) getc ( f )		866679	0		=			
ANR	867031	UnaryOperationExpression	* str ++		866679	0					
ANR	867032	UnaryOperator	*		866679	0					
ANR	867033	PostIncDecOperationExpression	str ++		866679	1					
ANR	867034	Identifier	str		866679	0					
ANR	867035	IncDec	++		866679	1					
ANR	867036	CastExpression	( byte ) getc ( f )		866679	1					
ANR	867037	CastTarget	byte		866679	0					
ANR	867038	CallExpression	getc ( f )		866679	1					
ANR	867039	Callee	getc		866679	0					
ANR	867040	Identifier	getc		866679	0					
ANR	867041	ArgumentList	f		866679	1					
ANR	867042	Argument	f		866679	0					
ANR	867043	Identifier	f		866679	0					
ANR	867044	Label	case 3 :	439:12:14965:14971	866679	12	True				
ANR	867045	ExpressionStatement	* str ++ = ( byte ) getc ( f )	440:16:14989:15012	866679	13	True				
ANR	867046	AssignmentExpression	* str ++ = ( byte ) getc ( f )		866679	0		=			
ANR	867047	UnaryOperationExpression	* str ++		866679	0					
ANR	867048	UnaryOperator	*		866679	0					
ANR	867049	PostIncDecOperationExpression	str ++		866679	1					
ANR	867050	Identifier	str		866679	0					
ANR	867051	IncDec	++		866679	1					
ANR	867052	CastExpression	( byte ) getc ( f )		866679	1					
ANR	867053	CastTarget	byte		866679	0					
ANR	867054	CallExpression	getc ( f )		866679	1					
ANR	867055	Callee	getc		866679	0					
ANR	867056	Identifier	getc		866679	0					
ANR	867057	ArgumentList	f		866679	1					
ANR	867058	Argument	f		866679	0					
ANR	867059	Identifier	f		866679	0					
ANR	867060	Label	case 2 :	441:12:15026:15032	866679	14	True				
ANR	867061	ExpressionStatement	* str ++ = ( byte ) getc ( f )	442:16:15050:15073	866679	15	True				
ANR	867062	AssignmentExpression	* str ++ = ( byte ) getc ( f )		866679	0		=			
ANR	867063	UnaryOperationExpression	* str ++		866679	0					
ANR	867064	UnaryOperator	*		866679	0					
ANR	867065	PostIncDecOperationExpression	str ++		866679	1					
ANR	867066	Identifier	str		866679	0					
ANR	867067	IncDec	++		866679	1					
ANR	867068	CastExpression	( byte ) getc ( f )		866679	1					
ANR	867069	CastTarget	byte		866679	0					
ANR	867070	CallExpression	getc ( f )		866679	1					
ANR	867071	Callee	getc		866679	0					
ANR	867072	Identifier	getc		866679	0					
ANR	867073	ArgumentList	f		866679	1					
ANR	867074	Argument	f		866679	0					
ANR	867075	Identifier	f		866679	0					
ANR	867076	Label	case 1 :	443:12:15087:15093	866679	16	True				
ANR	867077	ExpressionStatement	* str = ( byte ) getc ( f )	444:16:15111:15132	866679	17	True				
ANR	867078	AssignmentExpression	* str = ( byte ) getc ( f )		866679	0		=			
ANR	867079	UnaryOperationExpression	* str		866679	0					
ANR	867080	UnaryOperator	*		866679	0					
ANR	867081	Identifier	str		866679	1					
ANR	867082	CastExpression	( byte ) getc ( f )		866679	1					
ANR	867083	CastTarget	byte		866679	0					
ANR	867084	CallExpression	getc ( f )		866679	1					
ANR	867085	Callee	getc		866679	0					
ANR	867086	Identifier	getc		866679	0					
ANR	867087	ArgumentList	f		866679	1					
ANR	867088	Argument	f		866679	0					
ANR	867089	Identifier	f		866679	0					
ANR	867090	ExpressionStatement	nread = len	446:8:15152:15163	866679	3	True				
ANR	867091	AssignmentExpression	nread = len		866679	0		=			
ANR	867092	Identifier	nread		866679	0					
ANR	867093	Identifier	len		866679	1					
ANR	867094	ReturnStatement	return nread ;	448:4:15175:15187	866679	2	True				
ANR	867095	Identifier	nread		866679	0					
ANR	867096	ReturnType	static int		866679	1					
ANR	867097	Identifier	clist_fread_chars		866679	2					
ANR	867098	ParameterList	"void * data , uint len , clist_file_ptr cf"		866679	3					
ANR	867099	Parameter	void * data	383:18:12821:12830	866679	0	True				
ANR	867100	ParameterType	void *		866679	0					
ANR	867101	Identifier	data		866679	1					
ANR	867102	Parameter	uint len	383:30:12833:12840	866679	1	True				
ANR	867103	ParameterType	uint		866679	0					
ANR	867104	Identifier	len		866679	1					
ANR	867105	Parameter	clist_file_ptr cf	383:40:12843:12859	866679	2	True				
ANR	867106	ParameterType	clist_file_ptr		866679	0					
ANR	867107	Identifier	cf		866679	1					
ANR	867108	CFGEntryNode	ENTRY		866679		True				
ANR	867109	CFGExitNode	EXIT		866679		True				
ANR	867110	Symbol	slot -> base		866679						
ANR	867111	Symbol	icf -> f		866679						
ANR	867112	Symbol	data		866679						
ANR	867113	Symbol	CL_CACHE_NEEDS_INIT		866679						
ANR	867114	Symbol	CL_CACHE_NSLOTS		866679						
ANR	867115	Symbol	nread		866679						
ANR	867116	Symbol	( ( IFILE * ) cf ) -> f		866679						
ANR	867117	Symbol	* icf		866679						
ANR	867118	Symbol	fill_len		866679						
ANR	867119	Symbol	* cf		866679						
ANR	867120	Symbol	slot		866679						
ANR	867121	Symbol	dp		866679						
ANR	867122	Symbol	icf		866679						
ANR	867123	Symbol	cl_cache_read_init		866679						
ANR	867124	Symbol	* slot		866679						
ANR	867125	Symbol	len		866679						
ANR	867126	Symbol	icf -> cache		866679						
ANR	867127	Symbol	icf -> filesize		866679						
ANR	867128	Symbol	gp_can_share_fdesc		866679						
ANR	867129	Symbol	* str		866679						
ANR	867130	Symbol	gp_fpread		866679						
ANR	867131	Symbol	icf -> pos		866679						
ANR	867132	Symbol	* * icf		866679						
ANR	867133	Symbol	cf		866679						
ANR	867134	Symbol	NULL		866679						
ANR	867135	Symbol	cl_cache_get_empty_slot		866679						
ANR	867136	Symbol	f		866679						
ANR	867137	Symbol	block_pos		866679						
ANR	867138	Symbol	* icf -> cache		866679						
ANR	867139	Symbol	* str ++		866679						
ANR	867140	Symbol	icf -> cache -> block_size		866679						
ANR	867141	Symbol	n		866679						
ANR	867142	Symbol	fread		866679						
ANR	867143	Symbol	str		866679						
ANR	867144	Symbol	getc		866679						
ANR	867145	Symbol	CL_CACHE_SLOT_SIZE_LOG2		866679						
ANR	867146	Symbol	cl_cache_read		866679						
ANR	867147	Function	clist_set_memory_warning	453:0:15229:15330							
ANR	867148	FunctionDef	"clist_set_memory_warning (clist_file_ptr cf , int bytes_left)"		867147	0					
ANR	867149	CompoundStatement		455:0:15300:15330	867147	0					
ANR	867150	ReturnStatement	return 0 ;	456:4:15306:15314	867147	0	True				
ANR	867151	PrimaryExpression	0		867147	0					
ANR	867152	ReturnType	static int		867147	1					
ANR	867153	Identifier	clist_set_memory_warning		867147	2					
ANR	867154	ParameterList	"clist_file_ptr cf , int bytes_left"		867147	3					
ANR	867155	Parameter	clist_file_ptr cf	454:25:15265:15281	867147	0	True				
ANR	867156	ParameterType	clist_file_ptr		867147	0					
ANR	867157	Identifier	cf		867147	1					
ANR	867158	Parameter	int bytes_left	454:44:15284:15297	867147	1	True				
ANR	867159	ParameterType	int		867147	0					
ANR	867160	Identifier	bytes_left		867147	1					
ANR	867161	CFGEntryNode	ENTRY		867147		True				
ANR	867162	CFGExitNode	EXIT		867147		True				
ANR	867163	Symbol	cf		867147						
ANR	867164	Symbol	bytes_left		867147						
ANR	867165	Function	clist_ferror_code	459:0:15333:15445							
ANR	867166	FunctionDef	clist_ferror_code (clist_file_ptr cf)		867165	0					
ANR	867167	CompoundStatement		461:0:15381:15445	867165	0					
ANR	867168	ReturnStatement	return ( ferror ( ( ( IFILE * ) cf ) -> f ) ? gs_error_ioerror : 0 ) ;	462:4:15387:15443	867165	0	True				
ANR	867169	ConditionalExpression	ferror ( ( ( IFILE * ) cf ) -> f ) ? gs_error_ioerror : 0		867165	0					
ANR	867170	Condition	ferror ( ( ( IFILE * ) cf ) -> f )		867165	0					
ANR	867171	CallExpression	ferror ( ( ( IFILE * ) cf ) -> f )		867165	0					
ANR	867172	Callee	ferror		867165	0					
ANR	867173	Identifier	ferror		867165	0					
ANR	867174	ArgumentList	( ( IFILE * ) cf ) -> f		867165	1					
ANR	867175	Argument	( ( IFILE * ) cf ) -> f		867165	0					
ANR	867176	PtrMemberAccess	( ( IFILE * ) cf ) -> f		867165	0					
ANR	867177	CastExpression	( IFILE * ) cf		867165	0					
ANR	867178	CastTarget	IFILE *		867165	0					
ANR	867179	Identifier	cf		867165	1					
ANR	867180	Identifier	f		867165	1					
ANR	867181	Identifier	gs_error_ioerror		867165	1					
ANR	867182	PrimaryExpression	0		867165	2					
ANR	867183	ReturnType	static int		867165	1					
ANR	867184	Identifier	clist_ferror_code		867165	2					
ANR	867185	ParameterList	clist_file_ptr cf		867165	3					
ANR	867186	Parameter	clist_file_ptr cf	460:18:15362:15378	867165	0	True				
ANR	867187	ParameterType	clist_file_ptr		867165	0					
ANR	867188	Identifier	cf		867165	1					
ANR	867189	CFGEntryNode	ENTRY		867165		True				
ANR	867190	CFGExitNode	EXIT		867165		True				
ANR	867191	Symbol	ferror		867165						
ANR	867192	Symbol	cf		867165						
ANR	867193	Symbol	( ( IFILE * ) cf ) -> f		867165						
ANR	867194	Symbol	gs_error_ioerror		867165						
ANR	867195	Symbol	* cf		867165						
ANR	867196	Function	clist_ftell	465:0:15448:15593							
ANR	867197	FunctionDef	clist_ftell (clist_file_ptr cf)		867196	0					
ANR	867198	CompoundStatement		467:0:15494:15593	867196	0					
ANR	867199	IdentifierDeclStatement	IFILE * ifile = ( IFILE * ) cf ;	468:4:15500:15526	867196	0	True				
ANR	867200	IdentifierDecl	* ifile = ( IFILE * ) cf		867196	0					
ANR	867201	IdentifierDeclType	IFILE *		867196	0					
ANR	867202	Identifier	ifile		867196	1					
ANR	867203	AssignmentExpression	* ifile = ( IFILE * ) cf		867196	2		=			
ANR	867204	Identifier	ifile		867196	0					
ANR	867205	CastExpression	( IFILE * ) cf		867196	1					
ANR	867206	CastTarget	IFILE *		867196	0					
ANR	867207	Identifier	cf		867196	1					
ANR	867208	ReturnStatement	return gp_can_share_fdesc ( ) ? ifile -> pos : ftell ( ifile -> f ) ;	470:4:15533:15591	867196	1	True				
ANR	867209	ConditionalExpression	gp_can_share_fdesc ( ) ? ifile -> pos : ftell ( ifile -> f )		867196	0					
ANR	867210	Condition	gp_can_share_fdesc ( )		867196	0					
ANR	867211	CallExpression	gp_can_share_fdesc ( )		867196	0					
ANR	867212	Callee	gp_can_share_fdesc		867196	0					
ANR	867213	Identifier	gp_can_share_fdesc		867196	0					
ANR	867214	ArgumentList			867196	1					
ANR	867215	PtrMemberAccess	ifile -> pos		867196	1					
ANR	867216	Identifier	ifile		867196	0					
ANR	867217	Identifier	pos		867196	1					
ANR	867218	CallExpression	ftell ( ifile -> f )		867196	2					
ANR	867219	Callee	ftell		867196	0					
ANR	867220	Identifier	ftell		867196	0					
ANR	867221	ArgumentList	ifile -> f		867196	1					
ANR	867222	Argument	ifile -> f		867196	0					
ANR	867223	PtrMemberAccess	ifile -> f		867196	0					
ANR	867224	Identifier	ifile		867196	0					
ANR	867225	Identifier	f		867196	1					
ANR	867226	ReturnType	static int64_t		867196	1					
ANR	867227	Identifier	clist_ftell		867196	2					
ANR	867228	ParameterList	clist_file_ptr cf		867196	3					
ANR	867229	Parameter	clist_file_ptr cf	466:12:15475:15491	867196	0	True				
ANR	867230	ParameterType	clist_file_ptr		867196	0					
ANR	867231	Identifier	cf		867196	1					
ANR	867232	CFGEntryNode	ENTRY		867196		True				
ANR	867233	CFGExitNode	EXIT		867196		True				
ANR	867234	Symbol	ifile		867196						
ANR	867235	Symbol	cf		867196						
ANR	867236	Symbol	ifile -> f		867196						
ANR	867237	Symbol	ftell		867196						
ANR	867238	Symbol	* ifile		867196						
ANR	867239	Symbol	gp_can_share_fdesc		867196						
ANR	867240	Symbol	ifile -> pos		867196						
ANR	867241	Function	clist_rewind	473:0:15596:17211							
ANR	867242	FunctionDef	"clist_rewind (clist_file_ptr cf , bool discard_data , const char * fname)"		867241	0					
ANR	867243	CompoundStatement		475:0:15678:17211	867241	0					
ANR	867244	IdentifierDeclStatement	FILE * f = ( ( IFILE * ) cf ) -> f ;	476:4:15684:15710	867241	0	True				
ANR	867245	IdentifierDecl	* f = ( ( IFILE * ) cf ) -> f		867241	0					
ANR	867246	IdentifierDeclType	FILE *		867241	0					
ANR	867247	Identifier	f		867241	1					
ANR	867248	AssignmentExpression	* f = ( ( IFILE * ) cf ) -> f		867241	2		=			
ANR	867249	Identifier	f		867241	0					
ANR	867250	PtrMemberAccess	( ( IFILE * ) cf ) -> f		867241	1					
ANR	867251	CastExpression	( IFILE * ) cf		867241	0					
ANR	867252	CastTarget	IFILE *		867241	0					
ANR	867253	Identifier	cf		867241	1					
ANR	867254	Identifier	f		867241	1					
ANR	867255	IdentifierDeclStatement	IFILE * ocf = fake_path_to_file ( fname ) ;	477:4:15716:15753	867241	1	True				
ANR	867256	IdentifierDecl	* ocf = fake_path_to_file ( fname )		867241	0					
ANR	867257	IdentifierDeclType	IFILE *		867241	0					
ANR	867258	Identifier	ocf		867241	1					
ANR	867259	AssignmentExpression	* ocf = fake_path_to_file ( fname )		867241	2		=			
ANR	867260	Identifier	ocf		867241	0					
ANR	867261	CallExpression	fake_path_to_file ( fname )		867241	1					
ANR	867262	Callee	fake_path_to_file		867241	0					
ANR	867263	Identifier	fake_path_to_file		867241	0					
ANR	867264	ArgumentList	fname		867241	1					
ANR	867265	Argument	fname		867241	0					
ANR	867266	Identifier	fname		867241	0					
ANR	867267	IdentifierDeclStatement	char fmode [ 4 ] ;	478:4:15759:15772	867241	2	True				
ANR	867268	IdentifierDecl	fmode [ 4 ]		867241	0					
ANR	867269	IdentifierDeclType	char [ 4 ]		867241	0					
ANR	867270	Identifier	fmode		867241	1					
ANR	867271	PrimaryExpression	4		867241	2					
ANR	867272	ExpressionStatement	"strcpy ( fmode , ""w+"" )"	480:4:15779:15798	867241	3	True				
ANR	867273	CallExpression	"strcpy ( fmode , ""w+"" )"		867241	0					
ANR	867274	Callee	strcpy		867241	0					
ANR	867275	Identifier	strcpy		867241	0					
ANR	867276	ArgumentList	fmode		867241	1					
ANR	867277	Argument	fmode		867241	0					
ANR	867278	Identifier	fmode		867241	0					
ANR	867279	Argument	"""w+"""		867241	1					
ANR	867280	PrimaryExpression	"""w+"""		867241	0					
ANR	867281	ExpressionStatement	"strcat ( fmode , gp_fmode_binary_suffix )"	481:4:15804:15841	867241	4	True				
ANR	867282	CallExpression	"strcat ( fmode , gp_fmode_binary_suffix )"		867241	0					
ANR	867283	Callee	strcat		867241	0					
ANR	867284	Identifier	strcat		867241	0					
ANR	867285	ArgumentList	fmode		867241	1					
ANR	867286	Argument	fmode		867241	0					
ANR	867287	Identifier	fmode		867241	0					
ANR	867288	Argument	gp_fmode_binary_suffix		867241	1					
ANR	867289	Identifier	gp_fmode_binary_suffix		867241	0					
ANR	867290	IfStatement	if ( ocf )		867241	5					
ANR	867291	Condition	ocf	483:8:15852:15854	867241	0	True				
ANR	867292	Identifier	ocf		867241	0					
ANR	867293	CompoundStatement		9:13:178:178	867241	1					
ANR	867294	IfStatement	if ( discard_data )		867241	0					
ANR	867295	Condition	discard_data	484:12:15871:15882	867241	0	True				
ANR	867296	Identifier	discard_data		867241	0					
ANR	867297	CompoundStatement		13:12:329:361	867241	1					
ANR	867298	IdentifierDeclStatement	char tfname [ gp_file_name_sizeof ] ;	487:12:16008:16040	867241	0	True				
ANR	867299	IdentifierDecl	tfname [ gp_file_name_sizeof ]		867241	0					
ANR	867300	IdentifierDeclType	char [ gp_file_name_sizeof ]		867241	0					
ANR	867301	Identifier	tfname		867241	1					
ANR	867302	Identifier	gp_file_name_sizeof		867241	2					
ANR	867303	ExpressionStatement	fclose ( ocf -> f )	488:12:16054:16068	867241	1	True				
ANR	867304	CallExpression	fclose ( ocf -> f )		867241	0					
ANR	867305	Callee	fclose		867241	0					
ANR	867306	Identifier	fclose		867241	0					
ANR	867307	ArgumentList	ocf -> f		867241	1					
ANR	867308	Argument	ocf -> f		867241	0					
ANR	867309	PtrMemberAccess	ocf -> f		867241	0					
ANR	867310	Identifier	ocf		867241	0					
ANR	867311	Identifier	f		867241	1					
ANR	867312	ExpressionStatement	"ocf -> f = gp_open_scratch_file_rm ( NULL , gp_scratch_file_name_prefix , tfname , fmode )"	489:12:16082:16164	867241	2	True				
ANR	867313	AssignmentExpression	"ocf -> f = gp_open_scratch_file_rm ( NULL , gp_scratch_file_name_prefix , tfname , fmode )"		867241	0		=			
ANR	867314	PtrMemberAccess	ocf -> f		867241	0					
ANR	867315	Identifier	ocf		867241	0					
ANR	867316	Identifier	f		867241	1					
ANR	867317	CallExpression	"gp_open_scratch_file_rm ( NULL , gp_scratch_file_name_prefix , tfname , fmode )"		867241	1					
ANR	867318	Callee	gp_open_scratch_file_rm		867241	0					
ANR	867319	Identifier	gp_open_scratch_file_rm		867241	0					
ANR	867320	ArgumentList	NULL		867241	1					
ANR	867321	Argument	NULL		867241	0					
ANR	867322	Identifier	NULL		867241	0					
ANR	867323	Argument	gp_scratch_file_name_prefix		867241	1					
ANR	867324	Identifier	gp_scratch_file_name_prefix		867241	0					
ANR	867325	Argument	tfname		867241	2					
ANR	867326	Identifier	tfname		867241	0					
ANR	867327	Argument	fmode		867241	3					
ANR	867328	Identifier	fmode		867241	0					
ANR	867329	IfStatement	if ( ocf -> cache != NULL )		867241	3					
ANR	867330	Condition	ocf -> cache != NULL	492:16:16349:16366	867241	0	True				
ANR	867331	EqualityExpression	ocf -> cache != NULL		867241	0		!=			
ANR	867332	PtrMemberAccess	ocf -> cache		867241	0					
ANR	867333	Identifier	ocf		867241	0					
ANR	867334	Identifier	cache		867241	1					
ANR	867335	Identifier	NULL		867241	1					
ANR	867336	CompoundStatement		18:36:690:690	867241	1					
ANR	867337	ExpressionStatement	cl_cache_destroy ( ocf -> cache )	493:16:16387:16415	867241	0	True				
ANR	867338	CallExpression	cl_cache_destroy ( ocf -> cache )		867241	0					
ANR	867339	Callee	cl_cache_destroy		867241	0					
ANR	867340	Identifier	cl_cache_destroy		867241	0					
ANR	867341	ArgumentList	ocf -> cache		867241	1					
ANR	867342	Argument	ocf -> cache		867241	0					
ANR	867343	PtrMemberAccess	ocf -> cache		867241	0					
ANR	867344	Identifier	ocf		867241	0					
ANR	867345	Identifier	cache		867241	1					
ANR	867346	ExpressionStatement	ocf -> cache = cl_cache_alloc ( ocf -> mem )	494:16:16433:16470	867241	1	True				
ANR	867347	AssignmentExpression	ocf -> cache = cl_cache_alloc ( ocf -> mem )		867241	0		=			
ANR	867348	PtrMemberAccess	ocf -> cache		867241	0					
ANR	867349	Identifier	ocf		867241	0					
ANR	867350	Identifier	cache		867241	1					
ANR	867351	CallExpression	cl_cache_alloc ( ocf -> mem )		867241	1					
ANR	867352	Callee	cl_cache_alloc		867241	0					
ANR	867353	Identifier	cl_cache_alloc		867241	0					
ANR	867354	ArgumentList	ocf -> mem		867241	1					
ANR	867355	Argument	ocf -> mem		867241	0					
ANR	867356	PtrMemberAccess	ocf -> mem		867241	0					
ANR	867357	Identifier	ocf		867241	0					
ANR	867358	Identifier	mem		867241	1					
ANR	867359	ExpressionStatement	( ( IFILE * ) cf ) -> filesize = 0	496:12:16498:16525	867241	4	True				
ANR	867360	AssignmentExpression	( ( IFILE * ) cf ) -> filesize = 0		867241	0		=			
ANR	867361	PtrMemberAccess	( ( IFILE * ) cf ) -> filesize		867241	0					
ANR	867362	CastExpression	( IFILE * ) cf		867241	0					
ANR	867363	CastTarget	IFILE *		867241	0					
ANR	867364	Identifier	cf		867241	1					
ANR	867365	Identifier	filesize		867241	1					
ANR	867366	PrimaryExpression	0		867241	1					
ANR	867367	ExpressionStatement	( ( IFILE * ) cf ) -> pos = 0	498:8:16545:16567	867241	1	True				
ANR	867368	AssignmentExpression	( ( IFILE * ) cf ) -> pos = 0		867241	0		=			
ANR	867369	PtrMemberAccess	( ( IFILE * ) cf ) -> pos		867241	0					
ANR	867370	CastExpression	( IFILE * ) cf		867241	0					
ANR	867371	CastTarget	IFILE *		867241	0					
ANR	867372	Identifier	cf		867241	1					
ANR	867373	Identifier	pos		867241	1					
ANR	867374	PrimaryExpression	0		867241	1					
ANR	867375	ElseStatement	else		867241	0					
ANR	867376	CompoundStatement		25:11:901:901	867241	0					
ANR	867377	IfStatement	if ( discard_data )		867241	0					
ANR	867378	Condition	discard_data	500:12:16594:16605	867241	0	True				
ANR	867379	Identifier	discard_data		867241	0					
ANR	867380	CompoundStatement		26:26:929:929	867241	1					
ANR	867381	ExpressionStatement	"f = freopen ( fname , gp_fmode_wb , f )"	509:12:16985:17019	867241	0	True				
ANR	867382	AssignmentExpression	"f = freopen ( fname , gp_fmode_wb , f )"		867241	0		=			
ANR	867383	Identifier	f		867241	0					
ANR	867384	CallExpression	"freopen ( fname , gp_fmode_wb , f )"		867241	1					
ANR	867385	Callee	freopen		867241	0					
ANR	867386	Identifier	freopen		867241	0					
ANR	867387	ArgumentList	fname		867241	1					
ANR	867388	Argument	fname		867241	0					
ANR	867389	Identifier	fname		867241	0					
ANR	867390	Argument	gp_fmode_wb		867241	1					
ANR	867391	Identifier	gp_fmode_wb		867241	0					
ANR	867392	Argument	f		867241	2					
ANR	867393	Identifier	f		867241	0					
ANR	867394	ExpressionStatement	"( ( IFILE * ) cf ) -> f = freopen ( fname , fmode , f )"	510:12:17033:17076	867241	1	True				
ANR	867395	AssignmentExpression	"( ( IFILE * ) cf ) -> f = freopen ( fname , fmode , f )"		867241	0		=			
ANR	867396	PtrMemberAccess	( ( IFILE * ) cf ) -> f		867241	0					
ANR	867397	CastExpression	( IFILE * ) cf		867241	0					
ANR	867398	CastTarget	IFILE *		867241	0					
ANR	867399	Identifier	cf		867241	1					
ANR	867400	Identifier	f		867241	1					
ANR	867401	CallExpression	"freopen ( fname , fmode , f )"		867241	1					
ANR	867402	Callee	freopen		867241	0					
ANR	867403	Identifier	freopen		867241	0					
ANR	867404	ArgumentList	fname		867241	1					
ANR	867405	Argument	fname		867241	0					
ANR	867406	Identifier	fname		867241	0					
ANR	867407	Argument	fmode		867241	1					
ANR	867408	Identifier	fmode		867241	0					
ANR	867409	Argument	f		867241	2					
ANR	867410	Identifier	f		867241	0					
ANR	867411	ExpressionStatement	( ( IFILE * ) cf ) -> pos = 0	511:12:17090:17112	867241	2	True				
ANR	867412	AssignmentExpression	( ( IFILE * ) cf ) -> pos = 0		867241	0		=			
ANR	867413	PtrMemberAccess	( ( IFILE * ) cf ) -> pos		867241	0					
ANR	867414	CastExpression	( IFILE * ) cf		867241	0					
ANR	867415	CastTarget	IFILE *		867241	0					
ANR	867416	Identifier	cf		867241	1					
ANR	867417	Identifier	pos		867241	1					
ANR	867418	PrimaryExpression	0		867241	1					
ANR	867419	ExpressionStatement	( ( IFILE * ) cf ) -> filesize = 0	512:12:17126:17153	867241	3	True				
ANR	867420	AssignmentExpression	( ( IFILE * ) cf ) -> filesize = 0		867241	0		=			
ANR	867421	PtrMemberAccess	( ( IFILE * ) cf ) -> filesize		867241	0					
ANR	867422	CastExpression	( IFILE * ) cf		867241	0					
ANR	867423	CastTarget	IFILE *		867241	0					
ANR	867424	Identifier	cf		867241	1					
ANR	867425	Identifier	filesize		867241	1					
ANR	867426	PrimaryExpression	0		867241	1					
ANR	867427	ElseStatement	else		867241	0					
ANR	867428	CompoundStatement		39:15:1491:1491	867241	0					
ANR	867429	ExpressionStatement	rewind ( f )	514:12:17184:17193	867241	0	True				
ANR	867430	CallExpression	rewind ( f )		867241	0					
ANR	867431	Callee	rewind		867241	0					
ANR	867432	Identifier	rewind		867241	0					
ANR	867433	ArgumentList	f		867241	1					
ANR	867434	Argument	f		867241	0					
ANR	867435	Identifier	f		867241	0					
ANR	867436	ReturnType	static void		867241	1					
ANR	867437	Identifier	clist_rewind		867241	2					
ANR	867438	ParameterList	"clist_file_ptr cf , bool discard_data , const char * fname"		867241	3					
ANR	867439	Parameter	clist_file_ptr cf	474:13:15621:15637	867241	0	True				
ANR	867440	ParameterType	clist_file_ptr		867241	0					
ANR	867441	Identifier	cf		867241	1					
ANR	867442	Parameter	bool discard_data	474:32:15640:15656	867241	1	True				
ANR	867443	ParameterType	bool		867241	0					
ANR	867444	Identifier	discard_data		867241	1					
ANR	867445	Parameter	const char * fname	474:51:15659:15675	867241	2	True				
ANR	867446	ParameterType	const char *		867241	0					
ANR	867447	Identifier	fname		867241	1					
ANR	867448	CFGEntryNode	ENTRY		867241		True				
ANR	867449	CFGExitNode	EXIT		867241		True				
ANR	867450	Symbol	fname		867241						
ANR	867451	Symbol	cf		867241						
ANR	867452	Symbol	NULL		867241						
ANR	867453	Symbol	fake_path_to_file		867241						
ANR	867454	Symbol	freopen		867241						
ANR	867455	Symbol	( ( IFILE * ) cf ) -> pos		867241						
ANR	867456	Symbol	discard_data		867241						
ANR	867457	Symbol	f		867241						
ANR	867458	Symbol	ocf -> mem		867241						
ANR	867459	Symbol	( ( IFILE * ) cf ) -> f		867241						
ANR	867460	Symbol	( ( IFILE * ) cf ) -> filesize		867241						
ANR	867461	Symbol	* cf		867241						
ANR	867462	Symbol	cl_cache_alloc		867241						
ANR	867463	Symbol	ocf		867241						
ANR	867464	Symbol	gp_open_scratch_file_rm		867241						
ANR	867465	Symbol	gp_fmode_wb		867241						
ANR	867466	Symbol	gp_scratch_file_name_prefix		867241						
ANR	867467	Symbol	ocf -> f		867241						
ANR	867468	Symbol	fmode		867241						
ANR	867469	Symbol	ocf -> cache		867241						
ANR	867470	Symbol	* ocf		867241						
ANR	867471	Symbol	gp_fmode_binary_suffix		867241						
ANR	867472	Symbol	tfname		867241						
ANR	867473	Function	clist_fseek	519:0:17214:17935							
ANR	867474	FunctionDef	"clist_fseek (clist_file_ptr cf , int64_t offset , int mode , const char * ignore_fname)"		867473	0					
ANR	867475	CompoundStatement		521:0:17308:17935	867473	0					
ANR	867476	IdentifierDeclStatement	IFILE * ifile = ( IFILE * ) cf ;	522:4:17314:17340	867473	0	True				
ANR	867477	IdentifierDecl	* ifile = ( IFILE * ) cf		867473	0					
ANR	867478	IdentifierDeclType	IFILE *		867473	0					
ANR	867479	Identifier	ifile		867473	1					
ANR	867480	AssignmentExpression	* ifile = ( IFILE * ) cf		867473	2		=			
ANR	867481	Identifier	ifile		867473	0					
ANR	867482	CastExpression	( IFILE * ) cf		867473	1					
ANR	867483	CastTarget	IFILE *		867473	0					
ANR	867484	Identifier	cf		867473	1					
ANR	867485	IdentifierDeclStatement	int res = 0 ;	523:4:17346:17357	867473	1	True				
ANR	867486	IdentifierDecl	res = 0		867473	0					
ANR	867487	IdentifierDeclType	int		867473	0					
ANR	867488	Identifier	res		867473	1					
ANR	867489	AssignmentExpression	res = 0		867473	2		=			
ANR	867490	Identifier	res		867473	0					
ANR	867491	PrimaryExpression	0		867473	1					
ANR	867492	IfStatement	if ( ! gp_can_share_fdesc ( ) )		867473	2					
ANR	867493	Condition	! gp_can_share_fdesc ( )	525:8:17368:17388	867473	0	True				
ANR	867494	UnaryOperationExpression	! gp_can_share_fdesc ( )		867473	0					
ANR	867495	UnaryOperator	!		867473	0					
ANR	867496	CallExpression	gp_can_share_fdesc ( )		867473	1					
ANR	867497	Callee	gp_can_share_fdesc		867473	0					
ANR	867498	Identifier	gp_can_share_fdesc		867473	0					
ANR	867499	ArgumentList			867473	1					
ANR	867500	CompoundStatement		5:31:82:82	867473	1					
ANR	867501	ExpressionStatement	"res = gp_fseek_64 ( ifile -> f , offset , mode )"	526:8:17401:17442	867473	0	True				
ANR	867502	AssignmentExpression	"res = gp_fseek_64 ( ifile -> f , offset , mode )"		867473	0		=			
ANR	867503	Identifier	res		867473	0					
ANR	867504	CallExpression	"gp_fseek_64 ( ifile -> f , offset , mode )"		867473	1					
ANR	867505	Callee	gp_fseek_64		867473	0					
ANR	867506	Identifier	gp_fseek_64		867473	0					
ANR	867507	ArgumentList	ifile -> f		867473	1					
ANR	867508	Argument	ifile -> f		867473	0					
ANR	867509	PtrMemberAccess	ifile -> f		867473	0					
ANR	867510	Identifier	ifile		867473	0					
ANR	867511	Identifier	f		867473	1					
ANR	867512	Argument	offset		867473	1					
ANR	867513	Identifier	offset		867473	0					
ANR	867514	Argument	mode		867473	2					
ANR	867515	Identifier	mode		867473	0					
ANR	867516	IfStatement	if ( res >= 0 )		867473	3					
ANR	867517	Condition	res >= 0	529:8:17518:17525	867473	0	True				
ANR	867518	RelationalExpression	res >= 0		867473	0		>=			
ANR	867519	Identifier	res		867473	0					
ANR	867520	PrimaryExpression	0		867473	1					
ANR	867521	CompoundStatement		9:18:219:219	867473	1					
ANR	867522	SwitchStatement	switch ( mode )		867473	0					
ANR	867523	Condition	mode	531:16:17582:17585	867473	0	True				
ANR	867524	Identifier	mode		867473	0					
ANR	867525	CompoundStatement		11:22:279:279	867473	1					
ANR	867526	Label	case SEEK_SET :	532:12:17602:17615	867473	0	True				
ANR	867527	Identifier	SEEK_SET		867473	0					
ANR	867528	ExpressionStatement	ifile -> pos = offset	533:16:17633:17652	867473	1	True				
ANR	867529	AssignmentExpression	ifile -> pos = offset		867473	0		=			
ANR	867530	PtrMemberAccess	ifile -> pos		867473	0					
ANR	867531	Identifier	ifile		867473	0					
ANR	867532	Identifier	pos		867473	1					
ANR	867533	Identifier	offset		867473	1					
ANR	867534	BreakStatement	break ;	534:16:17670:17675	867473	2	True				
ANR	867535	Label	case SEEK_CUR :	535:12:17689:17702	867473	3	True				
ANR	867536	Identifier	SEEK_CUR		867473	0					
ANR	867537	ExpressionStatement	ifile -> pos += offset	536:16:17720:17740	867473	4	True				
ANR	867538	AssignmentExpression	ifile -> pos += offset		867473	0		+=			
ANR	867539	PtrMemberAccess	ifile -> pos		867473	0					
ANR	867540	Identifier	ifile		867473	0					
ANR	867541	Identifier	pos		867473	1					
ANR	867542	Identifier	offset		867473	1					
ANR	867543	BreakStatement	break ;	537:16:17758:17763	867473	5	True				
ANR	867544	Label	case SEEK_END :	538:12:17777:17790	867473	6	True				
ANR	867545	Identifier	SEEK_END		867473	0					
ANR	867546	ExpressionStatement	ifile -> pos = ifile -> filesize	539:16:17808:17836	867473	7	True				
ANR	867547	AssignmentExpression	ifile -> pos = ifile -> filesize		867473	0		=			
ANR	867548	PtrMemberAccess	ifile -> pos		867473	0					
ANR	867549	Identifier	ifile		867473	0					
ANR	867550	Identifier	pos		867473	1					
ANR	867551	PtrMemberAccess	ifile -> filesize		867473	1					
ANR	867552	Identifier	ifile		867473	0					
ANR	867553	Identifier	filesize		867473	1					
ANR	867554	BreakStatement	break ;	540:16:17896:17901	867473	8	True				
ANR	867555	ReturnStatement	return res ;	543:4:17923:17933	867473	4	True				
ANR	867556	Identifier	res		867473	0					
ANR	867557	ReturnType	static int		867473	1					
ANR	867558	Identifier	clist_fseek		867473	2					
ANR	867559	ParameterList	"clist_file_ptr cf , int64_t offset , int mode , const char * ignore_fname"		867473	3					
ANR	867560	Parameter	clist_file_ptr cf	520:12:17237:17253	867473	0	True				
ANR	867561	ParameterType	clist_file_ptr		867473	0					
ANR	867562	Identifier	cf		867473	1					
ANR	867563	Parameter	int64_t offset	520:31:17256:17269	867473	1	True				
ANR	867564	ParameterType	int64_t		867473	0					
ANR	867565	Identifier	offset		867473	1					
ANR	867566	Parameter	int mode	520:47:17272:17279	867473	2	True				
ANR	867567	ParameterType	int		867473	0					
ANR	867568	Identifier	mode		867473	1					
ANR	867569	Parameter	const char * ignore_fname	520:57:17282:17305	867473	3	True				
ANR	867570	ParameterType	const char *		867473	0					
ANR	867571	Identifier	ignore_fname		867473	1					
ANR	867572	CFGEntryNode	ENTRY		867473		True				
ANR	867573	CFGExitNode	EXIT		867473		True				
ANR	867574	Symbol	mode		867473						
ANR	867575	Symbol	ignore_fname		867473						
ANR	867576	Symbol	ifile -> filesize		867473						
ANR	867577	Symbol	res		867473						
ANR	867578	Symbol	ifile		867473						
ANR	867579	Symbol	cf		867473						
ANR	867580	Symbol	ifile -> f		867473						
ANR	867581	Symbol	offset		867473						
ANR	867582	Symbol	gp_can_share_fdesc		867473						
ANR	867583	Symbol	* ifile		867473						
ANR	867584	Symbol	gp_fseek_64		867473						
ANR	867585	Symbol	ifile -> pos		867473						
ANR	867586	DeclStmt									
ANR	867587	Decl							clist_io_procs_t	clist_io_procs_t	clist_io_procs_file
ANR	867588	Function	gs_gxclfile_init	560:0:18224:18463							
ANR	867589	FunctionDef	gs_gxclfile_init (gs_memory_t * mem)		867588	0					
ANR	867590	CompoundStatement		562:0:18263:18463	867588	0					
ANR	867591	ExpressionStatement	"VALGRIND_HG_DISABLE_CHECKING ( & clist_io_procs_file_global , sizeof ( clist_io_procs_file_global ) )"	564:4:18292:18385	867588	0	True				
ANR	867592	CallExpression	"VALGRIND_HG_DISABLE_CHECKING ( & clist_io_procs_file_global , sizeof ( clist_io_procs_file_global ) )"		867588	0					
ANR	867593	Callee	VALGRIND_HG_DISABLE_CHECKING		867588	0					
ANR	867594	Identifier	VALGRIND_HG_DISABLE_CHECKING		867588	0					
ANR	867595	ArgumentList	& clist_io_procs_file_global		867588	1					
ANR	867596	Argument	& clist_io_procs_file_global		867588	0					
ANR	867597	UnaryOperationExpression	& clist_io_procs_file_global		867588	0					
ANR	867598	UnaryOperator	&		867588	0					
ANR	867599	Identifier	clist_io_procs_file_global		867588	1					
ANR	867600	Argument	sizeof ( clist_io_procs_file_global )		867588	1					
ANR	867601	SizeofExpression	sizeof ( clist_io_procs_file_global )		867588	0					
ANR	867602	Sizeof	sizeof		867588	0					
ANR	867603	SizeofOperand	clist_io_procs_file_global		867588	1					
ANR	867604	ExpressionStatement	clist_io_procs_file_global = & clist_io_procs_file	566:4:18398:18447	867588	1	True				
ANR	867605	AssignmentExpression	clist_io_procs_file_global = & clist_io_procs_file		867588	0		=			
ANR	867606	Identifier	clist_io_procs_file_global		867588	0					
ANR	867607	UnaryOperationExpression	& clist_io_procs_file		867588	1					
ANR	867608	UnaryOperator	&		867588	0					
ANR	867609	Identifier	clist_io_procs_file		867588	1					
ANR	867610	ReturnStatement	return 0 ;	567:4:18453:18461	867588	2	True				
ANR	867611	PrimaryExpression	0		867588	0					
ANR	867612	ReturnType	int		867588	1					
ANR	867613	Identifier	gs_gxclfile_init		867588	2					
ANR	867614	ParameterList	gs_memory_t * mem		867588	3					
ANR	867615	Parameter	gs_memory_t * mem	561:17:18245:18260	867588	0	True				
ANR	867616	ParameterType	gs_memory_t *		867588	0					
ANR	867617	Identifier	mem		867588	1					
ANR	867618	CFGEntryNode	ENTRY		867588		True				
ANR	867619	CFGExitNode	EXIT		867588		True				
ANR	867620	Symbol	& clist_io_procs_file_global		867588						
ANR	867621	Symbol	clist_io_procs_file_global		867588						
ANR	867622	Symbol	& clist_io_procs_file		867588						
ANR	867623	Symbol	mem		867588						
