command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2301964	File	data/converged/CVE-2018-16863_ghostpdl/cups_libs_filter_rastertohp.c								
ANR	2301965	DeclStmt									
ANR	2301966	Decl							unsigned char	unsigned char * [ 4 ]	Planes
ANR	2301967	Decl							unsigned char	unsigned char *	CompBuffer
ANR	2301968	Decl							unsigned char	unsigned char *	BitBuffer
ANR	2301969	DeclStmt									
ANR	2301970	Decl							int	int	NumPlanes
ANR	2301971	Decl							int	int	ColorBits
ANR	2301972	Decl							int	int	Feed
ANR	2301973	Decl							int	int	Duplex
ANR	2301974	Decl							int	int	Page
ANR	2301975	Decl							int	int	Canceled
ANR	2301976	DeclStmt									
ANR	2301977	Decl							void	void ( void )	Setup
ANR	2301978	DeclStmt									
ANR	2301979	Decl							void	"void ( ppd_file_t * ppd , cups_page_header2_t * header )"	StartPage
ANR	2301980	DeclStmt									
ANR	2301981	Decl							void	void ( void )	EndPage
ANR	2301982	DeclStmt									
ANR	2301983	Decl							void	void ( void )	Shutdown
ANR	2301984	DeclStmt									
ANR	2301985	Decl							void	void ( int sig )	CancelJob
ANR	2301986	DeclStmt									
ANR	2301987	Decl							void	"void ( unsigned char * line , int length , int plane , int type )"	CompressData
ANR	2301988	DeclStmt									
ANR	2301989	Decl							void	void ( cups_page_header2_t * header )	OutputLine
ANR	2301990	Function	Setup	76:0:2094:2187							
ANR	2301991	FunctionDef	Setup ()		2301990	0					
ANR	2301992	CompoundStatement		78:0:2111:2187	2301990	0					
ANR	2301993	ExpressionStatement	putchar ( 0x1b )	83:2:2156:2169	2301990	0	True				
ANR	2301994	CallExpression	putchar ( 0x1b )		2301990	0					
ANR	2301995	Callee	putchar		2301990	0					
ANR	2301996	Identifier	putchar		2301990	0					
ANR	2301997	ArgumentList	0x1b		2301990	1					
ANR	2301998	Argument	0x1b		2301990	0					
ANR	2301999	PrimaryExpression	0x1b		2301990	0					
ANR	2302000	ExpressionStatement	putchar ( 'E' )	84:2:2173:2185	2301990	1	True				
ANR	2302001	CallExpression	putchar ( 'E' )		2301990	0					
ANR	2302002	Callee	putchar		2301990	0					
ANR	2302003	Identifier	putchar		2301990	0					
ANR	2302004	ArgumentList	'E'		2301990	1					
ANR	2302005	Argument	'E'		2301990	0					
ANR	2302006	PrimaryExpression	'E'		2301990	0					
ANR	2302007	ReturnType	void		2301990	1					
ANR	2302008	Identifier	Setup		2301990	2					
ANR	2302009	ParameterList			2301990	3					
ANR	2302010	CFGEntryNode	ENTRY		2301990		True				
ANR	2302011	CFGExitNode	EXIT		2301990		True				
ANR	2302012	Function	StartPage	92:0:2244:11429							
ANR	2302013	FunctionDef	"StartPage (ppd_file_t * ppd , cups_page_header2_t * header)"		2302012	0					
ANR	2302014	CompoundStatement		95:0:2364:11429	2302012	0					
ANR	2302015	IdentifierDeclStatement	int plane ;	96:2:2368:2377	2302012	0	True				
ANR	2302016	IdentifierDecl	plane		2302012	0					
ANR	2302017	IdentifierDeclType	int		2302012	0					
ANR	2302018	Identifier	plane		2302012	1					
ANR	2302019	ExpressionStatement	"fprintf ( stderr , ""DEBUG: StartPage...\\n"" )"	103:2:2449:2489	2302012	1	True				
ANR	2302020	CallExpression	"fprintf ( stderr , ""DEBUG: StartPage...\\n"" )"		2302012	0					
ANR	2302021	Callee	fprintf		2302012	0					
ANR	2302022	Identifier	fprintf		2302012	0					
ANR	2302023	ArgumentList	stderr		2302012	1					
ANR	2302024	Argument	stderr		2302012	0					
ANR	2302025	Identifier	stderr		2302012	0					
ANR	2302026	Argument	"""DEBUG: StartPage...\\n"""		2302012	1					
ANR	2302027	PrimaryExpression	"""DEBUG: StartPage...\\n"""		2302012	0					
ANR	2302028	ExpressionStatement	"fprintf ( stderr , ""DEBUG: MediaClass = \\""%s\\""\\n"" , header -> MediaClass )"	104:2:2493:2560	2302012	2	True				
ANR	2302029	CallExpression	"fprintf ( stderr , ""DEBUG: MediaClass = \\""%s\\""\\n"" , header -> MediaClass )"		2302012	0					
ANR	2302030	Callee	fprintf		2302012	0					
ANR	2302031	Identifier	fprintf		2302012	0					
ANR	2302032	ArgumentList	stderr		2302012	1					
ANR	2302033	Argument	stderr		2302012	0					
ANR	2302034	Identifier	stderr		2302012	0					
ANR	2302035	Argument	"""DEBUG: MediaClass = \\""%s\\""\\n"""		2302012	1					
ANR	2302036	PrimaryExpression	"""DEBUG: MediaClass = \\""%s\\""\\n"""		2302012	0					
ANR	2302037	Argument	header -> MediaClass		2302012	2					
ANR	2302038	PtrMemberAccess	header -> MediaClass		2302012	0					
ANR	2302039	Identifier	header		2302012	0					
ANR	2302040	Identifier	MediaClass		2302012	1					
ANR	2302041	ExpressionStatement	"fprintf ( stderr , ""DEBUG: MediaColor = \\""%s\\""\\n"" , header -> MediaColor )"	105:2:2564:2631	2302012	3	True				
ANR	2302042	CallExpression	"fprintf ( stderr , ""DEBUG: MediaColor = \\""%s\\""\\n"" , header -> MediaColor )"		2302012	0					
ANR	2302043	Callee	fprintf		2302012	0					
ANR	2302044	Identifier	fprintf		2302012	0					
ANR	2302045	ArgumentList	stderr		2302012	1					
ANR	2302046	Argument	stderr		2302012	0					
ANR	2302047	Identifier	stderr		2302012	0					
ANR	2302048	Argument	"""DEBUG: MediaColor = \\""%s\\""\\n"""		2302012	1					
ANR	2302049	PrimaryExpression	"""DEBUG: MediaColor = \\""%s\\""\\n"""		2302012	0					
ANR	2302050	Argument	header -> MediaColor		2302012	2					
ANR	2302051	PtrMemberAccess	header -> MediaColor		2302012	0					
ANR	2302052	Identifier	header		2302012	0					
ANR	2302053	Identifier	MediaColor		2302012	1					
ANR	2302054	ExpressionStatement	"fprintf ( stderr , ""DEBUG: MediaType = \\""%s\\""\\n"" , header -> MediaType )"	106:2:2635:2700	2302012	4	True				
ANR	2302055	CallExpression	"fprintf ( stderr , ""DEBUG: MediaType = \\""%s\\""\\n"" , header -> MediaType )"		2302012	0					
ANR	2302056	Callee	fprintf		2302012	0					
ANR	2302057	Identifier	fprintf		2302012	0					
ANR	2302058	ArgumentList	stderr		2302012	1					
ANR	2302059	Argument	stderr		2302012	0					
ANR	2302060	Identifier	stderr		2302012	0					
ANR	2302061	Argument	"""DEBUG: MediaType = \\""%s\\""\\n"""		2302012	1					
ANR	2302062	PrimaryExpression	"""DEBUG: MediaType = \\""%s\\""\\n"""		2302012	0					
ANR	2302063	Argument	header -> MediaType		2302012	2					
ANR	2302064	PtrMemberAccess	header -> MediaType		2302012	0					
ANR	2302065	Identifier	header		2302012	0					
ANR	2302066	Identifier	MediaType		2302012	1					
ANR	2302067	ExpressionStatement	"fprintf ( stderr , ""DEBUG: OutputType = \\""%s\\""\\n"" , header -> OutputType )"	107:2:2704:2771	2302012	5	True				
ANR	2302068	CallExpression	"fprintf ( stderr , ""DEBUG: OutputType = \\""%s\\""\\n"" , header -> OutputType )"		2302012	0					
ANR	2302069	Callee	fprintf		2302012	0					
ANR	2302070	Identifier	fprintf		2302012	0					
ANR	2302071	ArgumentList	stderr		2302012	1					
ANR	2302072	Argument	stderr		2302012	0					
ANR	2302073	Identifier	stderr		2302012	0					
ANR	2302074	Argument	"""DEBUG: OutputType = \\""%s\\""\\n"""		2302012	1					
ANR	2302075	PrimaryExpression	"""DEBUG: OutputType = \\""%s\\""\\n"""		2302012	0					
ANR	2302076	Argument	header -> OutputType		2302012	2					
ANR	2302077	PtrMemberAccess	header -> OutputType		2302012	0					
ANR	2302078	Identifier	header		2302012	0					
ANR	2302079	Identifier	OutputType		2302012	1					
ANR	2302080	ExpressionStatement	"fprintf ( stderr , ""DEBUG: AdvanceDistance = %d\\n"" , header -> AdvanceDistance )"	109:2:2776:2849	2302012	6	True				
ANR	2302081	CallExpression	"fprintf ( stderr , ""DEBUG: AdvanceDistance = %d\\n"" , header -> AdvanceDistance )"		2302012	0					
ANR	2302082	Callee	fprintf		2302012	0					
ANR	2302083	Identifier	fprintf		2302012	0					
ANR	2302084	ArgumentList	stderr		2302012	1					
ANR	2302085	Argument	stderr		2302012	0					
ANR	2302086	Identifier	stderr		2302012	0					
ANR	2302087	Argument	"""DEBUG: AdvanceDistance = %d\\n"""		2302012	1					
ANR	2302088	PrimaryExpression	"""DEBUG: AdvanceDistance = %d\\n"""		2302012	0					
ANR	2302089	Argument	header -> AdvanceDistance		2302012	2					
ANR	2302090	PtrMemberAccess	header -> AdvanceDistance		2302012	0					
ANR	2302091	Identifier	header		2302012	0					
ANR	2302092	Identifier	AdvanceDistance		2302012	1					
ANR	2302093	ExpressionStatement	"fprintf ( stderr , ""DEBUG: AdvanceMedia = %d\\n"" , header -> AdvanceMedia )"	110:2:2853:2920	2302012	7	True				
ANR	2302094	CallExpression	"fprintf ( stderr , ""DEBUG: AdvanceMedia = %d\\n"" , header -> AdvanceMedia )"		2302012	0					
ANR	2302095	Callee	fprintf		2302012	0					
ANR	2302096	Identifier	fprintf		2302012	0					
ANR	2302097	ArgumentList	stderr		2302012	1					
ANR	2302098	Argument	stderr		2302012	0					
ANR	2302099	Identifier	stderr		2302012	0					
ANR	2302100	Argument	"""DEBUG: AdvanceMedia = %d\\n"""		2302012	1					
ANR	2302101	PrimaryExpression	"""DEBUG: AdvanceMedia = %d\\n"""		2302012	0					
ANR	2302102	Argument	header -> AdvanceMedia		2302012	2					
ANR	2302103	PtrMemberAccess	header -> AdvanceMedia		2302012	0					
ANR	2302104	Identifier	header		2302012	0					
ANR	2302105	Identifier	AdvanceMedia		2302012	1					
ANR	2302106	ExpressionStatement	"fprintf ( stderr , ""DEBUG: Collate = %d\\n"" , header -> Collate )"	111:2:2924:2981	2302012	8	True				
ANR	2302107	CallExpression	"fprintf ( stderr , ""DEBUG: Collate = %d\\n"" , header -> Collate )"		2302012	0					
ANR	2302108	Callee	fprintf		2302012	0					
ANR	2302109	Identifier	fprintf		2302012	0					
ANR	2302110	ArgumentList	stderr		2302012	1					
ANR	2302111	Argument	stderr		2302012	0					
ANR	2302112	Identifier	stderr		2302012	0					
ANR	2302113	Argument	"""DEBUG: Collate = %d\\n"""		2302012	1					
ANR	2302114	PrimaryExpression	"""DEBUG: Collate = %d\\n"""		2302012	0					
ANR	2302115	Argument	header -> Collate		2302012	2					
ANR	2302116	PtrMemberAccess	header -> Collate		2302012	0					
ANR	2302117	Identifier	header		2302012	0					
ANR	2302118	Identifier	Collate		2302012	1					
ANR	2302119	ExpressionStatement	"fprintf ( stderr , ""DEBUG: CutMedia = %d\\n"" , header -> CutMedia )"	112:2:2985:3044	2302012	9	True				
ANR	2302120	CallExpression	"fprintf ( stderr , ""DEBUG: CutMedia = %d\\n"" , header -> CutMedia )"		2302012	0					
ANR	2302121	Callee	fprintf		2302012	0					
ANR	2302122	Identifier	fprintf		2302012	0					
ANR	2302123	ArgumentList	stderr		2302012	1					
ANR	2302124	Argument	stderr		2302012	0					
ANR	2302125	Identifier	stderr		2302012	0					
ANR	2302126	Argument	"""DEBUG: CutMedia = %d\\n"""		2302012	1					
ANR	2302127	PrimaryExpression	"""DEBUG: CutMedia = %d\\n"""		2302012	0					
ANR	2302128	Argument	header -> CutMedia		2302012	2					
ANR	2302129	PtrMemberAccess	header -> CutMedia		2302012	0					
ANR	2302130	Identifier	header		2302012	0					
ANR	2302131	Identifier	CutMedia		2302012	1					
ANR	2302132	ExpressionStatement	"fprintf ( stderr , ""DEBUG: Duplex = %d\\n"" , header -> Duplex )"	113:2:3048:3103	2302012	10	True				
ANR	2302133	CallExpression	"fprintf ( stderr , ""DEBUG: Duplex = %d\\n"" , header -> Duplex )"		2302012	0					
ANR	2302134	Callee	fprintf		2302012	0					
ANR	2302135	Identifier	fprintf		2302012	0					
ANR	2302136	ArgumentList	stderr		2302012	1					
ANR	2302137	Argument	stderr		2302012	0					
ANR	2302138	Identifier	stderr		2302012	0					
ANR	2302139	Argument	"""DEBUG: Duplex = %d\\n"""		2302012	1					
ANR	2302140	PrimaryExpression	"""DEBUG: Duplex = %d\\n"""		2302012	0					
ANR	2302141	Argument	header -> Duplex		2302012	2					
ANR	2302142	PtrMemberAccess	header -> Duplex		2302012	0					
ANR	2302143	Identifier	header		2302012	0					
ANR	2302144	Identifier	Duplex		2302012	1					
ANR	2302145	ExpressionStatement	"fprintf ( stderr , ""DEBUG: HWResolution = [ %d %d ]\\n"" , header -> HWResolution [ 0 ] , header -> HWResolution [ 1 ] )"	114:2:3107:3219	2302012	11	True				
ANR	2302146	CallExpression	"fprintf ( stderr , ""DEBUG: HWResolution = [ %d %d ]\\n"" , header -> HWResolution [ 0 ] , header -> HWResolution [ 1 ] )"		2302012	0					
ANR	2302147	Callee	fprintf		2302012	0					
ANR	2302148	Identifier	fprintf		2302012	0					
ANR	2302149	ArgumentList	stderr		2302012	1					
ANR	2302150	Argument	stderr		2302012	0					
ANR	2302151	Identifier	stderr		2302012	0					
ANR	2302152	Argument	"""DEBUG: HWResolution = [ %d %d ]\\n"""		2302012	1					
ANR	2302153	PrimaryExpression	"""DEBUG: HWResolution = [ %d %d ]\\n"""		2302012	0					
ANR	2302154	Argument	header -> HWResolution [ 0 ]		2302012	2					
ANR	2302155	ArrayIndexing	header -> HWResolution [ 0 ]		2302012	0					
ANR	2302156	PtrMemberAccess	header -> HWResolution		2302012	0					
ANR	2302157	Identifier	header		2302012	0					
ANR	2302158	Identifier	HWResolution		2302012	1					
ANR	2302159	PrimaryExpression	0		2302012	1					
ANR	2302160	Argument	header -> HWResolution [ 1 ]		2302012	3					
ANR	2302161	ArrayIndexing	header -> HWResolution [ 1 ]		2302012	0					
ANR	2302162	PtrMemberAccess	header -> HWResolution		2302012	0					
ANR	2302163	Identifier	header		2302012	0					
ANR	2302164	Identifier	HWResolution		2302012	1					
ANR	2302165	PrimaryExpression	1		2302012	1					
ANR	2302166	ExpressionStatement	"fprintf ( stderr , ""DEBUG: ImagingBoundingBox = [ %d %d %d %d ]\\n"" , header -> ImagingBoundingBox [ 0 ] , header -> ImagingBoundingBox [ 1 ] , header -> ImagingBoundingBox [ 2 ] , header -> ImagingBoundingBox [ 3 ] )"	116:2:3223:3431	2302012	12	True				
ANR	2302167	CallExpression	"fprintf ( stderr , ""DEBUG: ImagingBoundingBox = [ %d %d %d %d ]\\n"" , header -> ImagingBoundingBox [ 0 ] , header -> ImagingBoundingBox [ 1 ] , header -> ImagingBoundingBox [ 2 ] , header -> ImagingBoundingBox [ 3 ] )"		2302012	0					
ANR	2302168	Callee	fprintf		2302012	0					
ANR	2302169	Identifier	fprintf		2302012	0					
ANR	2302170	ArgumentList	stderr		2302012	1					
ANR	2302171	Argument	stderr		2302012	0					
ANR	2302172	Identifier	stderr		2302012	0					
ANR	2302173	Argument	"""DEBUG: ImagingBoundingBox = [ %d %d %d %d ]\\n"""		2302012	1					
ANR	2302174	PrimaryExpression	"""DEBUG: ImagingBoundingBox = [ %d %d %d %d ]\\n"""		2302012	0					
ANR	2302175	Argument	header -> ImagingBoundingBox [ 0 ]		2302012	2					
ANR	2302176	ArrayIndexing	header -> ImagingBoundingBox [ 0 ]		2302012	0					
ANR	2302177	PtrMemberAccess	header -> ImagingBoundingBox		2302012	0					
ANR	2302178	Identifier	header		2302012	0					
ANR	2302179	Identifier	ImagingBoundingBox		2302012	1					
ANR	2302180	PrimaryExpression	0		2302012	1					
ANR	2302181	Argument	header -> ImagingBoundingBox [ 1 ]		2302012	3					
ANR	2302182	ArrayIndexing	header -> ImagingBoundingBox [ 1 ]		2302012	0					
ANR	2302183	PtrMemberAccess	header -> ImagingBoundingBox		2302012	0					
ANR	2302184	Identifier	header		2302012	0					
ANR	2302185	Identifier	ImagingBoundingBox		2302012	1					
ANR	2302186	PrimaryExpression	1		2302012	1					
ANR	2302187	Argument	header -> ImagingBoundingBox [ 2 ]		2302012	4					
ANR	2302188	ArrayIndexing	header -> ImagingBoundingBox [ 2 ]		2302012	0					
ANR	2302189	PtrMemberAccess	header -> ImagingBoundingBox		2302012	0					
ANR	2302190	Identifier	header		2302012	0					
ANR	2302191	Identifier	ImagingBoundingBox		2302012	1					
ANR	2302192	PrimaryExpression	2		2302012	1					
ANR	2302193	Argument	header -> ImagingBoundingBox [ 3 ]		2302012	5					
ANR	2302194	ArrayIndexing	header -> ImagingBoundingBox [ 3 ]		2302012	0					
ANR	2302195	PtrMemberAccess	header -> ImagingBoundingBox		2302012	0					
ANR	2302196	Identifier	header		2302012	0					
ANR	2302197	Identifier	ImagingBoundingBox		2302012	1					
ANR	2302198	PrimaryExpression	3		2302012	1					
ANR	2302199	ExpressionStatement	"fprintf ( stderr , ""DEBUG: InsertSheet = %d\\n"" , header -> InsertSheet )"	119:2:3435:3500	2302012	13	True				
ANR	2302200	CallExpression	"fprintf ( stderr , ""DEBUG: InsertSheet = %d\\n"" , header -> InsertSheet )"		2302012	0					
ANR	2302201	Callee	fprintf		2302012	0					
ANR	2302202	Identifier	fprintf		2302012	0					
ANR	2302203	ArgumentList	stderr		2302012	1					
ANR	2302204	Argument	stderr		2302012	0					
ANR	2302205	Identifier	stderr		2302012	0					
ANR	2302206	Argument	"""DEBUG: InsertSheet = %d\\n"""		2302012	1					
ANR	2302207	PrimaryExpression	"""DEBUG: InsertSheet = %d\\n"""		2302012	0					
ANR	2302208	Argument	header -> InsertSheet		2302012	2					
ANR	2302209	PtrMemberAccess	header -> InsertSheet		2302012	0					
ANR	2302210	Identifier	header		2302012	0					
ANR	2302211	Identifier	InsertSheet		2302012	1					
ANR	2302212	ExpressionStatement	"fprintf ( stderr , ""DEBUG: Jog = %d\\n"" , header -> Jog )"	120:2:3504:3553	2302012	14	True				
ANR	2302213	CallExpression	"fprintf ( stderr , ""DEBUG: Jog = %d\\n"" , header -> Jog )"		2302012	0					
ANR	2302214	Callee	fprintf		2302012	0					
ANR	2302215	Identifier	fprintf		2302012	0					
ANR	2302216	ArgumentList	stderr		2302012	1					
ANR	2302217	Argument	stderr		2302012	0					
ANR	2302218	Identifier	stderr		2302012	0					
ANR	2302219	Argument	"""DEBUG: Jog = %d\\n"""		2302012	1					
ANR	2302220	PrimaryExpression	"""DEBUG: Jog = %d\\n"""		2302012	0					
ANR	2302221	Argument	header -> Jog		2302012	2					
ANR	2302222	PtrMemberAccess	header -> Jog		2302012	0					
ANR	2302223	Identifier	header		2302012	0					
ANR	2302224	Identifier	Jog		2302012	1					
ANR	2302225	ExpressionStatement	"fprintf ( stderr , ""DEBUG: LeadingEdge = %d\\n"" , header -> LeadingEdge )"	121:2:3557:3622	2302012	15	True				
ANR	2302226	CallExpression	"fprintf ( stderr , ""DEBUG: LeadingEdge = %d\\n"" , header -> LeadingEdge )"		2302012	0					
ANR	2302227	Callee	fprintf		2302012	0					
ANR	2302228	Identifier	fprintf		2302012	0					
ANR	2302229	ArgumentList	stderr		2302012	1					
ANR	2302230	Argument	stderr		2302012	0					
ANR	2302231	Identifier	stderr		2302012	0					
ANR	2302232	Argument	"""DEBUG: LeadingEdge = %d\\n"""		2302012	1					
ANR	2302233	PrimaryExpression	"""DEBUG: LeadingEdge = %d\\n"""		2302012	0					
ANR	2302234	Argument	header -> LeadingEdge		2302012	2					
ANR	2302235	PtrMemberAccess	header -> LeadingEdge		2302012	0					
ANR	2302236	Identifier	header		2302012	0					
ANR	2302237	Identifier	LeadingEdge		2302012	1					
ANR	2302238	ExpressionStatement	"fprintf ( stderr , ""DEBUG: Margins = [ %d %d ]\\n"" , header -> Margins [ 0 ] , header -> Margins [ 1 ] )"	122:2:3626:3723	2302012	16	True				
ANR	2302239	CallExpression	"fprintf ( stderr , ""DEBUG: Margins = [ %d %d ]\\n"" , header -> Margins [ 0 ] , header -> Margins [ 1 ] )"		2302012	0					
ANR	2302240	Callee	fprintf		2302012	0					
ANR	2302241	Identifier	fprintf		2302012	0					
ANR	2302242	ArgumentList	stderr		2302012	1					
ANR	2302243	Argument	stderr		2302012	0					
ANR	2302244	Identifier	stderr		2302012	0					
ANR	2302245	Argument	"""DEBUG: Margins = [ %d %d ]\\n"""		2302012	1					
ANR	2302246	PrimaryExpression	"""DEBUG: Margins = [ %d %d ]\\n"""		2302012	0					
ANR	2302247	Argument	header -> Margins [ 0 ]		2302012	2					
ANR	2302248	ArrayIndexing	header -> Margins [ 0 ]		2302012	0					
ANR	2302249	PtrMemberAccess	header -> Margins		2302012	0					
ANR	2302250	Identifier	header		2302012	0					
ANR	2302251	Identifier	Margins		2302012	1					
ANR	2302252	PrimaryExpression	0		2302012	1					
ANR	2302253	Argument	header -> Margins [ 1 ]		2302012	3					
ANR	2302254	ArrayIndexing	header -> Margins [ 1 ]		2302012	0					
ANR	2302255	PtrMemberAccess	header -> Margins		2302012	0					
ANR	2302256	Identifier	header		2302012	0					
ANR	2302257	Identifier	Margins		2302012	1					
ANR	2302258	PrimaryExpression	1		2302012	1					
ANR	2302259	ExpressionStatement	"fprintf ( stderr , ""DEBUG: ManualFeed = %d\\n"" , header -> ManualFeed )"	124:2:3727:3790	2302012	17	True				
ANR	2302260	CallExpression	"fprintf ( stderr , ""DEBUG: ManualFeed = %d\\n"" , header -> ManualFeed )"		2302012	0					
ANR	2302261	Callee	fprintf		2302012	0					
ANR	2302262	Identifier	fprintf		2302012	0					
ANR	2302263	ArgumentList	stderr		2302012	1					
ANR	2302264	Argument	stderr		2302012	0					
ANR	2302265	Identifier	stderr		2302012	0					
ANR	2302266	Argument	"""DEBUG: ManualFeed = %d\\n"""		2302012	1					
ANR	2302267	PrimaryExpression	"""DEBUG: ManualFeed = %d\\n"""		2302012	0					
ANR	2302268	Argument	header -> ManualFeed		2302012	2					
ANR	2302269	PtrMemberAccess	header -> ManualFeed		2302012	0					
ANR	2302270	Identifier	header		2302012	0					
ANR	2302271	Identifier	ManualFeed		2302012	1					
ANR	2302272	ExpressionStatement	"fprintf ( stderr , ""DEBUG: MediaPosition = %d\\n"" , header -> MediaPosition )"	125:2:3794:3863	2302012	18	True				
ANR	2302273	CallExpression	"fprintf ( stderr , ""DEBUG: MediaPosition = %d\\n"" , header -> MediaPosition )"		2302012	0					
ANR	2302274	Callee	fprintf		2302012	0					
ANR	2302275	Identifier	fprintf		2302012	0					
ANR	2302276	ArgumentList	stderr		2302012	1					
ANR	2302277	Argument	stderr		2302012	0					
ANR	2302278	Identifier	stderr		2302012	0					
ANR	2302279	Argument	"""DEBUG: MediaPosition = %d\\n"""		2302012	1					
ANR	2302280	PrimaryExpression	"""DEBUG: MediaPosition = %d\\n"""		2302012	0					
ANR	2302281	Argument	header -> MediaPosition		2302012	2					
ANR	2302282	PtrMemberAccess	header -> MediaPosition		2302012	0					
ANR	2302283	Identifier	header		2302012	0					
ANR	2302284	Identifier	MediaPosition		2302012	1					
ANR	2302285	ExpressionStatement	"fprintf ( stderr , ""DEBUG: MediaWeight = %d\\n"" , header -> MediaWeight )"	126:2:3867:3932	2302012	19	True				
ANR	2302286	CallExpression	"fprintf ( stderr , ""DEBUG: MediaWeight = %d\\n"" , header -> MediaWeight )"		2302012	0					
ANR	2302287	Callee	fprintf		2302012	0					
ANR	2302288	Identifier	fprintf		2302012	0					
ANR	2302289	ArgumentList	stderr		2302012	1					
ANR	2302290	Argument	stderr		2302012	0					
ANR	2302291	Identifier	stderr		2302012	0					
ANR	2302292	Argument	"""DEBUG: MediaWeight = %d\\n"""		2302012	1					
ANR	2302293	PrimaryExpression	"""DEBUG: MediaWeight = %d\\n"""		2302012	0					
ANR	2302294	Argument	header -> MediaWeight		2302012	2					
ANR	2302295	PtrMemberAccess	header -> MediaWeight		2302012	0					
ANR	2302296	Identifier	header		2302012	0					
ANR	2302297	Identifier	MediaWeight		2302012	1					
ANR	2302298	ExpressionStatement	"fprintf ( stderr , ""DEBUG: MirrorPrint = %d\\n"" , header -> MirrorPrint )"	127:2:3936:4001	2302012	20	True				
ANR	2302299	CallExpression	"fprintf ( stderr , ""DEBUG: MirrorPrint = %d\\n"" , header -> MirrorPrint )"		2302012	0					
ANR	2302300	Callee	fprintf		2302012	0					
ANR	2302301	Identifier	fprintf		2302012	0					
ANR	2302302	ArgumentList	stderr		2302012	1					
ANR	2302303	Argument	stderr		2302012	0					
ANR	2302304	Identifier	stderr		2302012	0					
ANR	2302305	Argument	"""DEBUG: MirrorPrint = %d\\n"""		2302012	1					
ANR	2302306	PrimaryExpression	"""DEBUG: MirrorPrint = %d\\n"""		2302012	0					
ANR	2302307	Argument	header -> MirrorPrint		2302012	2					
ANR	2302308	PtrMemberAccess	header -> MirrorPrint		2302012	0					
ANR	2302309	Identifier	header		2302012	0					
ANR	2302310	Identifier	MirrorPrint		2302012	1					
ANR	2302311	ExpressionStatement	"fprintf ( stderr , ""DEBUG: NegativePrint = %d\\n"" , header -> NegativePrint )"	128:2:4005:4074	2302012	21	True				
ANR	2302312	CallExpression	"fprintf ( stderr , ""DEBUG: NegativePrint = %d\\n"" , header -> NegativePrint )"		2302012	0					
ANR	2302313	Callee	fprintf		2302012	0					
ANR	2302314	Identifier	fprintf		2302012	0					
ANR	2302315	ArgumentList	stderr		2302012	1					
ANR	2302316	Argument	stderr		2302012	0					
ANR	2302317	Identifier	stderr		2302012	0					
ANR	2302318	Argument	"""DEBUG: NegativePrint = %d\\n"""		2302012	1					
ANR	2302319	PrimaryExpression	"""DEBUG: NegativePrint = %d\\n"""		2302012	0					
ANR	2302320	Argument	header -> NegativePrint		2302012	2					
ANR	2302321	PtrMemberAccess	header -> NegativePrint		2302012	0					
ANR	2302322	Identifier	header		2302012	0					
ANR	2302323	Identifier	NegativePrint		2302012	1					
ANR	2302324	ExpressionStatement	"fprintf ( stderr , ""DEBUG: NumCopies = %d\\n"" , header -> NumCopies )"	129:2:4078:4139	2302012	22	True				
ANR	2302325	CallExpression	"fprintf ( stderr , ""DEBUG: NumCopies = %d\\n"" , header -> NumCopies )"		2302012	0					
ANR	2302326	Callee	fprintf		2302012	0					
ANR	2302327	Identifier	fprintf		2302012	0					
ANR	2302328	ArgumentList	stderr		2302012	1					
ANR	2302329	Argument	stderr		2302012	0					
ANR	2302330	Identifier	stderr		2302012	0					
ANR	2302331	Argument	"""DEBUG: NumCopies = %d\\n"""		2302012	1					
ANR	2302332	PrimaryExpression	"""DEBUG: NumCopies = %d\\n"""		2302012	0					
ANR	2302333	Argument	header -> NumCopies		2302012	2					
ANR	2302334	PtrMemberAccess	header -> NumCopies		2302012	0					
ANR	2302335	Identifier	header		2302012	0					
ANR	2302336	Identifier	NumCopies		2302012	1					
ANR	2302337	ExpressionStatement	"fprintf ( stderr , ""DEBUG: Orientation = %d\\n"" , header -> Orientation )"	130:2:4143:4208	2302012	23	True				
ANR	2302338	CallExpression	"fprintf ( stderr , ""DEBUG: Orientation = %d\\n"" , header -> Orientation )"		2302012	0					
ANR	2302339	Callee	fprintf		2302012	0					
ANR	2302340	Identifier	fprintf		2302012	0					
ANR	2302341	ArgumentList	stderr		2302012	1					
ANR	2302342	Argument	stderr		2302012	0					
ANR	2302343	Identifier	stderr		2302012	0					
ANR	2302344	Argument	"""DEBUG: Orientation = %d\\n"""		2302012	1					
ANR	2302345	PrimaryExpression	"""DEBUG: Orientation = %d\\n"""		2302012	0					
ANR	2302346	Argument	header -> Orientation		2302012	2					
ANR	2302347	PtrMemberAccess	header -> Orientation		2302012	0					
ANR	2302348	Identifier	header		2302012	0					
ANR	2302349	Identifier	Orientation		2302012	1					
ANR	2302350	ExpressionStatement	"fprintf ( stderr , ""DEBUG: OutputFaceUp = %d\\n"" , header -> OutputFaceUp )"	131:2:4212:4279	2302012	24	True				
ANR	2302351	CallExpression	"fprintf ( stderr , ""DEBUG: OutputFaceUp = %d\\n"" , header -> OutputFaceUp )"		2302012	0					
ANR	2302352	Callee	fprintf		2302012	0					
ANR	2302353	Identifier	fprintf		2302012	0					
ANR	2302354	ArgumentList	stderr		2302012	1					
ANR	2302355	Argument	stderr		2302012	0					
ANR	2302356	Identifier	stderr		2302012	0					
ANR	2302357	Argument	"""DEBUG: OutputFaceUp = %d\\n"""		2302012	1					
ANR	2302358	PrimaryExpression	"""DEBUG: OutputFaceUp = %d\\n"""		2302012	0					
ANR	2302359	Argument	header -> OutputFaceUp		2302012	2					
ANR	2302360	PtrMemberAccess	header -> OutputFaceUp		2302012	0					
ANR	2302361	Identifier	header		2302012	0					
ANR	2302362	Identifier	OutputFaceUp		2302012	1					
ANR	2302363	ExpressionStatement	"fprintf ( stderr , ""DEBUG: PageSize = [ %d %d ]\\n"" , header -> PageSize [ 0 ] , header -> PageSize [ 1 ] )"	132:2:4283:4383	2302012	25	True				
ANR	2302364	CallExpression	"fprintf ( stderr , ""DEBUG: PageSize = [ %d %d ]\\n"" , header -> PageSize [ 0 ] , header -> PageSize [ 1 ] )"		2302012	0					
ANR	2302365	Callee	fprintf		2302012	0					
ANR	2302366	Identifier	fprintf		2302012	0					
ANR	2302367	ArgumentList	stderr		2302012	1					
ANR	2302368	Argument	stderr		2302012	0					
ANR	2302369	Identifier	stderr		2302012	0					
ANR	2302370	Argument	"""DEBUG: PageSize = [ %d %d ]\\n"""		2302012	1					
ANR	2302371	PrimaryExpression	"""DEBUG: PageSize = [ %d %d ]\\n"""		2302012	0					
ANR	2302372	Argument	header -> PageSize [ 0 ]		2302012	2					
ANR	2302373	ArrayIndexing	header -> PageSize [ 0 ]		2302012	0					
ANR	2302374	PtrMemberAccess	header -> PageSize		2302012	0					
ANR	2302375	Identifier	header		2302012	0					
ANR	2302376	Identifier	PageSize		2302012	1					
ANR	2302377	PrimaryExpression	0		2302012	1					
ANR	2302378	Argument	header -> PageSize [ 1 ]		2302012	3					
ANR	2302379	ArrayIndexing	header -> PageSize [ 1 ]		2302012	0					
ANR	2302380	PtrMemberAccess	header -> PageSize		2302012	0					
ANR	2302381	Identifier	header		2302012	0					
ANR	2302382	Identifier	PageSize		2302012	1					
ANR	2302383	PrimaryExpression	1		2302012	1					
ANR	2302384	ExpressionStatement	"fprintf ( stderr , ""DEBUG: Separations = %d\\n"" , header -> Separations )"	134:2:4387:4452	2302012	26	True				
ANR	2302385	CallExpression	"fprintf ( stderr , ""DEBUG: Separations = %d\\n"" , header -> Separations )"		2302012	0					
ANR	2302386	Callee	fprintf		2302012	0					
ANR	2302387	Identifier	fprintf		2302012	0					
ANR	2302388	ArgumentList	stderr		2302012	1					
ANR	2302389	Argument	stderr		2302012	0					
ANR	2302390	Identifier	stderr		2302012	0					
ANR	2302391	Argument	"""DEBUG: Separations = %d\\n"""		2302012	1					
ANR	2302392	PrimaryExpression	"""DEBUG: Separations = %d\\n"""		2302012	0					
ANR	2302393	Argument	header -> Separations		2302012	2					
ANR	2302394	PtrMemberAccess	header -> Separations		2302012	0					
ANR	2302395	Identifier	header		2302012	0					
ANR	2302396	Identifier	Separations		2302012	1					
ANR	2302397	ExpressionStatement	"fprintf ( stderr , ""DEBUG: TraySwitch = %d\\n"" , header -> TraySwitch )"	135:2:4456:4519	2302012	27	True				
ANR	2302398	CallExpression	"fprintf ( stderr , ""DEBUG: TraySwitch = %d\\n"" , header -> TraySwitch )"		2302012	0					
ANR	2302399	Callee	fprintf		2302012	0					
ANR	2302400	Identifier	fprintf		2302012	0					
ANR	2302401	ArgumentList	stderr		2302012	1					
ANR	2302402	Argument	stderr		2302012	0					
ANR	2302403	Identifier	stderr		2302012	0					
ANR	2302404	Argument	"""DEBUG: TraySwitch = %d\\n"""		2302012	1					
ANR	2302405	PrimaryExpression	"""DEBUG: TraySwitch = %d\\n"""		2302012	0					
ANR	2302406	Argument	header -> TraySwitch		2302012	2					
ANR	2302407	PtrMemberAccess	header -> TraySwitch		2302012	0					
ANR	2302408	Identifier	header		2302012	0					
ANR	2302409	Identifier	TraySwitch		2302012	1					
ANR	2302410	ExpressionStatement	"fprintf ( stderr , ""DEBUG: Tumble = %d\\n"" , header -> Tumble )"	136:2:4523:4578	2302012	28	True				
ANR	2302411	CallExpression	"fprintf ( stderr , ""DEBUG: Tumble = %d\\n"" , header -> Tumble )"		2302012	0					
ANR	2302412	Callee	fprintf		2302012	0					
ANR	2302413	Identifier	fprintf		2302012	0					
ANR	2302414	ArgumentList	stderr		2302012	1					
ANR	2302415	Argument	stderr		2302012	0					
ANR	2302416	Identifier	stderr		2302012	0					
ANR	2302417	Argument	"""DEBUG: Tumble = %d\\n"""		2302012	1					
ANR	2302418	PrimaryExpression	"""DEBUG: Tumble = %d\\n"""		2302012	0					
ANR	2302419	Argument	header -> Tumble		2302012	2					
ANR	2302420	PtrMemberAccess	header -> Tumble		2302012	0					
ANR	2302421	Identifier	header		2302012	0					
ANR	2302422	Identifier	Tumble		2302012	1					
ANR	2302423	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsWidth = %d\\n"" , header -> cupsWidth )"	137:2:4582:4643	2302012	29	True				
ANR	2302424	CallExpression	"fprintf ( stderr , ""DEBUG: cupsWidth = %d\\n"" , header -> cupsWidth )"		2302012	0					
ANR	2302425	Callee	fprintf		2302012	0					
ANR	2302426	Identifier	fprintf		2302012	0					
ANR	2302427	ArgumentList	stderr		2302012	1					
ANR	2302428	Argument	stderr		2302012	0					
ANR	2302429	Identifier	stderr		2302012	0					
ANR	2302430	Argument	"""DEBUG: cupsWidth = %d\\n"""		2302012	1					
ANR	2302431	PrimaryExpression	"""DEBUG: cupsWidth = %d\\n"""		2302012	0					
ANR	2302432	Argument	header -> cupsWidth		2302012	2					
ANR	2302433	PtrMemberAccess	header -> cupsWidth		2302012	0					
ANR	2302434	Identifier	header		2302012	0					
ANR	2302435	Identifier	cupsWidth		2302012	1					
ANR	2302436	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsHeight = %d\\n"" , header -> cupsHeight )"	138:2:4647:4710	2302012	30	True				
ANR	2302437	CallExpression	"fprintf ( stderr , ""DEBUG: cupsHeight = %d\\n"" , header -> cupsHeight )"		2302012	0					
ANR	2302438	Callee	fprintf		2302012	0					
ANR	2302439	Identifier	fprintf		2302012	0					
ANR	2302440	ArgumentList	stderr		2302012	1					
ANR	2302441	Argument	stderr		2302012	0					
ANR	2302442	Identifier	stderr		2302012	0					
ANR	2302443	Argument	"""DEBUG: cupsHeight = %d\\n"""		2302012	1					
ANR	2302444	PrimaryExpression	"""DEBUG: cupsHeight = %d\\n"""		2302012	0					
ANR	2302445	Argument	header -> cupsHeight		2302012	2					
ANR	2302446	PtrMemberAccess	header -> cupsHeight		2302012	0					
ANR	2302447	Identifier	header		2302012	0					
ANR	2302448	Identifier	cupsHeight		2302012	1					
ANR	2302449	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsMediaType = %d\\n"" , header -> cupsMediaType )"	139:2:4714:4783	2302012	31	True				
ANR	2302450	CallExpression	"fprintf ( stderr , ""DEBUG: cupsMediaType = %d\\n"" , header -> cupsMediaType )"		2302012	0					
ANR	2302451	Callee	fprintf		2302012	0					
ANR	2302452	Identifier	fprintf		2302012	0					
ANR	2302453	ArgumentList	stderr		2302012	1					
ANR	2302454	Argument	stderr		2302012	0					
ANR	2302455	Identifier	stderr		2302012	0					
ANR	2302456	Argument	"""DEBUG: cupsMediaType = %d\\n"""		2302012	1					
ANR	2302457	PrimaryExpression	"""DEBUG: cupsMediaType = %d\\n"""		2302012	0					
ANR	2302458	Argument	header -> cupsMediaType		2302012	2					
ANR	2302459	PtrMemberAccess	header -> cupsMediaType		2302012	0					
ANR	2302460	Identifier	header		2302012	0					
ANR	2302461	Identifier	cupsMediaType		2302012	1					
ANR	2302462	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsBitsPerColor = %d\\n"" , header -> cupsBitsPerColor )"	140:2:4787:4862	2302012	32	True				
ANR	2302463	CallExpression	"fprintf ( stderr , ""DEBUG: cupsBitsPerColor = %d\\n"" , header -> cupsBitsPerColor )"		2302012	0					
ANR	2302464	Callee	fprintf		2302012	0					
ANR	2302465	Identifier	fprintf		2302012	0					
ANR	2302466	ArgumentList	stderr		2302012	1					
ANR	2302467	Argument	stderr		2302012	0					
ANR	2302468	Identifier	stderr		2302012	0					
ANR	2302469	Argument	"""DEBUG: cupsBitsPerColor = %d\\n"""		2302012	1					
ANR	2302470	PrimaryExpression	"""DEBUG: cupsBitsPerColor = %d\\n"""		2302012	0					
ANR	2302471	Argument	header -> cupsBitsPerColor		2302012	2					
ANR	2302472	PtrMemberAccess	header -> cupsBitsPerColor		2302012	0					
ANR	2302473	Identifier	header		2302012	0					
ANR	2302474	Identifier	cupsBitsPerColor		2302012	1					
ANR	2302475	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsBitsPerPixel = %d\\n"" , header -> cupsBitsPerPixel )"	141:2:4866:4941	2302012	33	True				
ANR	2302476	CallExpression	"fprintf ( stderr , ""DEBUG: cupsBitsPerPixel = %d\\n"" , header -> cupsBitsPerPixel )"		2302012	0					
ANR	2302477	Callee	fprintf		2302012	0					
ANR	2302478	Identifier	fprintf		2302012	0					
ANR	2302479	ArgumentList	stderr		2302012	1					
ANR	2302480	Argument	stderr		2302012	0					
ANR	2302481	Identifier	stderr		2302012	0					
ANR	2302482	Argument	"""DEBUG: cupsBitsPerPixel = %d\\n"""		2302012	1					
ANR	2302483	PrimaryExpression	"""DEBUG: cupsBitsPerPixel = %d\\n"""		2302012	0					
ANR	2302484	Argument	header -> cupsBitsPerPixel		2302012	2					
ANR	2302485	PtrMemberAccess	header -> cupsBitsPerPixel		2302012	0					
ANR	2302486	Identifier	header		2302012	0					
ANR	2302487	Identifier	cupsBitsPerPixel		2302012	1					
ANR	2302488	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsBytesPerLine = %d\\n"" , header -> cupsBytesPerLine )"	142:2:4945:5020	2302012	34	True				
ANR	2302489	CallExpression	"fprintf ( stderr , ""DEBUG: cupsBytesPerLine = %d\\n"" , header -> cupsBytesPerLine )"		2302012	0					
ANR	2302490	Callee	fprintf		2302012	0					
ANR	2302491	Identifier	fprintf		2302012	0					
ANR	2302492	ArgumentList	stderr		2302012	1					
ANR	2302493	Argument	stderr		2302012	0					
ANR	2302494	Identifier	stderr		2302012	0					
ANR	2302495	Argument	"""DEBUG: cupsBytesPerLine = %d\\n"""		2302012	1					
ANR	2302496	PrimaryExpression	"""DEBUG: cupsBytesPerLine = %d\\n"""		2302012	0					
ANR	2302497	Argument	header -> cupsBytesPerLine		2302012	2					
ANR	2302498	PtrMemberAccess	header -> cupsBytesPerLine		2302012	0					
ANR	2302499	Identifier	header		2302012	0					
ANR	2302500	Identifier	cupsBytesPerLine		2302012	1					
ANR	2302501	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsColorOrder = %d\\n"" , header -> cupsColorOrder )"	143:2:5024:5095	2302012	35	True				
ANR	2302502	CallExpression	"fprintf ( stderr , ""DEBUG: cupsColorOrder = %d\\n"" , header -> cupsColorOrder )"		2302012	0					
ANR	2302503	Callee	fprintf		2302012	0					
ANR	2302504	Identifier	fprintf		2302012	0					
ANR	2302505	ArgumentList	stderr		2302012	1					
ANR	2302506	Argument	stderr		2302012	0					
ANR	2302507	Identifier	stderr		2302012	0					
ANR	2302508	Argument	"""DEBUG: cupsColorOrder = %d\\n"""		2302012	1					
ANR	2302509	PrimaryExpression	"""DEBUG: cupsColorOrder = %d\\n"""		2302012	0					
ANR	2302510	Argument	header -> cupsColorOrder		2302012	2					
ANR	2302511	PtrMemberAccess	header -> cupsColorOrder		2302012	0					
ANR	2302512	Identifier	header		2302012	0					
ANR	2302513	Identifier	cupsColorOrder		2302012	1					
ANR	2302514	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsColorSpace = %d\\n"" , header -> cupsColorSpace )"	144:2:5099:5170	2302012	36	True				
ANR	2302515	CallExpression	"fprintf ( stderr , ""DEBUG: cupsColorSpace = %d\\n"" , header -> cupsColorSpace )"		2302012	0					
ANR	2302516	Callee	fprintf		2302012	0					
ANR	2302517	Identifier	fprintf		2302012	0					
ANR	2302518	ArgumentList	stderr		2302012	1					
ANR	2302519	Argument	stderr		2302012	0					
ANR	2302520	Identifier	stderr		2302012	0					
ANR	2302521	Argument	"""DEBUG: cupsColorSpace = %d\\n"""		2302012	1					
ANR	2302522	PrimaryExpression	"""DEBUG: cupsColorSpace = %d\\n"""		2302012	0					
ANR	2302523	Argument	header -> cupsColorSpace		2302012	2					
ANR	2302524	PtrMemberAccess	header -> cupsColorSpace		2302012	0					
ANR	2302525	Identifier	header		2302012	0					
ANR	2302526	Identifier	cupsColorSpace		2302012	1					
ANR	2302527	ExpressionStatement	"fprintf ( stderr , ""DEBUG: cupsCompression = %d\\n"" , header -> cupsCompression )"	145:2:5174:5247	2302012	37	True				
ANR	2302528	CallExpression	"fprintf ( stderr , ""DEBUG: cupsCompression = %d\\n"" , header -> cupsCompression )"		2302012	0					
ANR	2302529	Callee	fprintf		2302012	0					
ANR	2302530	Identifier	fprintf		2302012	0					
ANR	2302531	ArgumentList	stderr		2302012	1					
ANR	2302532	Argument	stderr		2302012	0					
ANR	2302533	Identifier	stderr		2302012	0					
ANR	2302534	Argument	"""DEBUG: cupsCompression = %d\\n"""		2302012	1					
ANR	2302535	PrimaryExpression	"""DEBUG: cupsCompression = %d\\n"""		2302012	0					
ANR	2302536	Argument	header -> cupsCompression		2302012	2					
ANR	2302537	PtrMemberAccess	header -> cupsCompression		2302012	0					
ANR	2302538	Identifier	header		2302012	0					
ANR	2302539	Identifier	cupsCompression		2302012	1					
ANR	2302540	ExpressionStatement	Duplex = header -> Duplex	151:2:5298:5324	2302012	38	True				
ANR	2302541	AssignmentExpression	Duplex = header -> Duplex		2302012	0		=			
ANR	2302542	Identifier	Duplex		2302012	0					
ANR	2302543	PtrMemberAccess	header -> Duplex		2302012	1					
ANR	2302544	Identifier	header		2302012	0					
ANR	2302545	Identifier	Duplex		2302012	1					
ANR	2302546	ExpressionStatement	ColorBits = header -> cupsBitsPerColor	152:2:5328:5364	2302012	39	True				
ANR	2302547	AssignmentExpression	ColorBits = header -> cupsBitsPerColor		2302012	0		=			
ANR	2302548	Identifier	ColorBits		2302012	0					
ANR	2302549	PtrMemberAccess	header -> cupsBitsPerColor		2302012	1					
ANR	2302550	Identifier	header		2302012	0					
ANR	2302551	Identifier	cupsBitsPerColor		2302012	1					
ANR	2302552	IfStatement	if ( ( ! Duplex || ( Page & 1 ) ) && header -> MediaPosition )		2302012	40					
ANR	2302553	Condition	( ! Duplex || ( Page & 1 ) ) && header -> MediaPosition	154:6:5373:5420	2302012	0	True				
ANR	2302554	AndExpression	( ! Duplex || ( Page & 1 ) ) && header -> MediaPosition		2302012	0		&&			
ANR	2302555	OrExpression	! Duplex || ( Page & 1 )		2302012	0		||			
ANR	2302556	UnaryOperationExpression	! Duplex		2302012	0					
ANR	2302557	UnaryOperator	!		2302012	0					
ANR	2302558	Identifier	Duplex		2302012	1					
ANR	2302559	BitAndExpression	Page & 1		2302012	1		&			
ANR	2302560	Identifier	Page		2302012	0					
ANR	2302561	PrimaryExpression	1		2302012	1					
ANR	2302562	PtrMemberAccess	header -> MediaPosition		2302012	1					
ANR	2302563	Identifier	header		2302012	0					
ANR	2302564	Identifier	MediaPosition		2302012	1					
ANR	2302565	ExpressionStatement	"printf ( ""\\033&l%dH"" , header -> MediaPosition )"	155:4:5427:5508	2302012	1	True				
ANR	2302566	CallExpression	"printf ( ""\\033&l%dH"" , header -> MediaPosition )"		2302012	0					
ANR	2302567	Callee	printf		2302012	0					
ANR	2302568	Identifier	printf		2302012	0					
ANR	2302569	ArgumentList	"""\\033&l%dH"""		2302012	1					
ANR	2302570	Argument	"""\\033&l%dH"""		2302012	0					
ANR	2302571	PrimaryExpression	"""\\033&l%dH"""		2302012	0					
ANR	2302572	Argument	header -> MediaPosition		2302012	1					
ANR	2302573	PtrMemberAccess	header -> MediaPosition		2302012	0					
ANR	2302574	Identifier	header		2302012	0					
ANR	2302575	Identifier	MediaPosition		2302012	1					
ANR	2302576	IfStatement	if ( Duplex && ppd && ppd -> model_number == 2 )		2302012	41					
ANR	2302577	Condition	Duplex && ppd && ppd -> model_number == 2	158:6:5517:5555	2302012	0	True				
ANR	2302578	AndExpression	Duplex && ppd && ppd -> model_number == 2		2302012	0		&&			
ANR	2302579	Identifier	Duplex		2302012	0					
ANR	2302580	AndExpression	ppd && ppd -> model_number == 2		2302012	1		&&			
ANR	2302581	Identifier	ppd		2302012	0					
ANR	2302582	EqualityExpression	ppd -> model_number == 2		2302012	1		==			
ANR	2302583	PtrMemberAccess	ppd -> model_number		2302012	0					
ANR	2302584	Identifier	ppd		2302012	0					
ANR	2302585	Identifier	model_number		2302012	1					
ANR	2302586	PrimaryExpression	2		2302012	1					
ANR	2302587	CompoundStatement		65:2:3195:3195	2302012	1					
ANR	2302588	ExpressionStatement	"printf ( ""\\033&l-2H"" )"	164:4:5630:5649	2302012	0	True				
ANR	2302589	CallExpression	"printf ( ""\\033&l-2H"" )"		2302012	0					
ANR	2302590	Callee	printf		2302012	0					
ANR	2302591	Identifier	printf		2302012	0					
ANR	2302592	ArgumentList	"""\\033&l-2H"""		2302012	1					
ANR	2302593	Argument	"""\\033&l-2H"""		2302012	0					
ANR	2302594	PrimaryExpression	"""\\033&l-2H"""		2302012	0					
ANR	2302595	IfStatement	if ( Page & 1 )		2302012	1					
ANR	2302596	Condition	Page & 1	166:8:5679:5686	2302012	0	True				
ANR	2302597	BitAndExpression	Page & 1		2302012	0		&			
ANR	2302598	Identifier	Page		2302012	0					
ANR	2302599	PrimaryExpression	1		2302012	1					
ANR	2302600	ExpressionStatement	"printf ( ""\\033&l2S"" )"	167:6:5695:5713	2302012	1	True				
ANR	2302601	CallExpression	"printf ( ""\\033&l2S"" )"		2302012	0					
ANR	2302602	Callee	printf		2302012	0					
ANR	2302603	Identifier	printf		2302012	0					
ANR	2302604	ArgumentList	"""\\033&l2S"""		2302012	1					
ANR	2302605	Argument	"""\\033&l2S"""		2302012	0					
ANR	2302606	PrimaryExpression	"""\\033&l2S"""		2302012	0					
ANR	2302607	IfStatement	if ( ! Duplex || ( Page & 1 ) || ( ppd && ppd -> model_number == 2 ) )		2302012	42					
ANR	2302608	Condition	! Duplex || ( Page & 1 ) || ( ppd && ppd -> model_number == 2 )	170:6:5750:5805	2302012	0	True				
ANR	2302609	OrExpression	! Duplex || ( Page & 1 ) || ( ppd && ppd -> model_number == 2 )		2302012	0		||			
ANR	2302610	UnaryOperationExpression	! Duplex		2302012	0					
ANR	2302611	UnaryOperator	!		2302012	0					
ANR	2302612	Identifier	Duplex		2302012	1					
ANR	2302613	OrExpression	( Page & 1 ) || ( ppd && ppd -> model_number == 2 )		2302012	1		||			
ANR	2302614	BitAndExpression	Page & 1		2302012	0		&			
ANR	2302615	Identifier	Page		2302012	0					
ANR	2302616	PrimaryExpression	1		2302012	1					
ANR	2302617	AndExpression	ppd && ppd -> model_number == 2		2302012	1		&&			
ANR	2302618	Identifier	ppd		2302012	0					
ANR	2302619	EqualityExpression	ppd -> model_number == 2		2302012	1		==			
ANR	2302620	PtrMemberAccess	ppd -> model_number		2302012	0					
ANR	2302621	Identifier	ppd		2302012	0					
ANR	2302622	Identifier	model_number		2302012	1					
ANR	2302623	PrimaryExpression	2		2302012	1					
ANR	2302624	CompoundStatement		77:2:3445:3445	2302012	1					
ANR	2302625	ExpressionStatement	"printf ( ""\\033&l6D\\033&k12H"" )"	176:4:5858:5885	2302012	0	True				
ANR	2302626	CallExpression	"printf ( ""\\033&l6D\\033&k12H"" )"		2302012	0					
ANR	2302627	Callee	printf		2302012	0					
ANR	2302628	Identifier	printf		2302012	0					
ANR	2302629	ArgumentList	"""\\033&l6D\\033&k12H"""		2302012	1					
ANR	2302630	Argument	"""\\033&l6D\\033&k12H"""		2302012	0					
ANR	2302631	PrimaryExpression	"""\\033&l6D\\033&k12H"""		2302012	0					
ANR	2302632	ExpressionStatement	"printf ( ""\\033&l0O"" )"	177:4:5916:5934	2302012	1	True				
ANR	2302633	CallExpression	"printf ( ""\\033&l0O"" )"		2302012	0					
ANR	2302634	Callee	printf		2302012	0					
ANR	2302635	Identifier	printf		2302012	0					
ANR	2302636	ArgumentList	"""\\033&l0O"""		2302012	1					
ANR	2302637	Argument	"""\\033&l0O"""		2302012	0					
ANR	2302638	PrimaryExpression	"""\\033&l0O"""		2302012	0					
ANR	2302639	SwitchStatement	switch ( header -> PageSize [ 1 ] )		2302012	2					
ANR	2302640	Condition	header -> PageSize [ 1 ]	179:12:5983:6001	2302012	0	True				
ANR	2302641	ArrayIndexing	header -> PageSize [ 1 ]		2302012	0					
ANR	2302642	PtrMemberAccess	header -> PageSize		2302012	0					
ANR	2302643	Identifier	header		2302012	0					
ANR	2302644	Identifier	PageSize		2302012	1					
ANR	2302645	PrimaryExpression	1		2302012	1					
ANR	2302646	CompoundStatement		86:4:3643:3643	2302012	1					
ANR	2302647	Label	case 540 :	181:6:6016:6025	2302012	0	True				
ANR	2302648	ExpressionStatement	"printf ( ""\\033&l80A"" )"	182:10:6060:6079	2302012	1	True				
ANR	2302649	CallExpression	"printf ( ""\\033&l80A"" )"		2302012	0					
ANR	2302650	Callee	printf		2302012	0					
ANR	2302651	Identifier	printf		2302012	0					
ANR	2302652	ArgumentList	"""\\033&l80A"""		2302012	1					
ANR	2302653	Argument	"""\\033&l80A"""		2302012	0					
ANR	2302654	PrimaryExpression	"""\\033&l80A"""		2302012	0					
ANR	2302655	BreakStatement	break ;	183:3:6106:6111	2302012	2	True				
ANR	2302656	Label	case 595 :	185:6:6120:6129	2302012	3	True				
ANR	2302657	ExpressionStatement	"printf ( ""\\033&l25A"" )"	186:10:6150:6169	2302012	4	True				
ANR	2302658	CallExpression	"printf ( ""\\033&l25A"" )"		2302012	0					
ANR	2302659	Callee	printf		2302012	0					
ANR	2302660	Identifier	printf		2302012	0					
ANR	2302661	ArgumentList	"""\\033&l25A"""		2302012	1					
ANR	2302662	Argument	"""\\033&l25A"""		2302012	0					
ANR	2302663	PrimaryExpression	"""\\033&l25A"""		2302012	0					
ANR	2302664	BreakStatement	break ;	187:3:6196:6201	2302012	5	True				
ANR	2302665	Label	case 624 :	189:6:6210:6219	2302012	6	True				
ANR	2302666	ExpressionStatement	"printf ( ""\\033&l90A"" )"	190:10:6249:6268	2302012	7	True				
ANR	2302667	CallExpression	"printf ( ""\\033&l90A"" )"		2302012	0					
ANR	2302668	Callee	printf		2302012	0					
ANR	2302669	Identifier	printf		2302012	0					
ANR	2302670	ArgumentList	"""\\033&l90A"""		2302012	1					
ANR	2302671	Argument	"""\\033&l90A"""		2302012	0					
ANR	2302672	PrimaryExpression	"""\\033&l90A"""		2302012	0					
ANR	2302673	BreakStatement	break ;	191:3:6295:6300	2302012	8	True				
ANR	2302674	Label	case 649 :	193:6:6309:6318	2302012	9	True				
ANR	2302675	ExpressionStatement	"printf ( ""\\033&l91A"" )"	194:10:6348:6367	2302012	10	True				
ANR	2302676	CallExpression	"printf ( ""\\033&l91A"" )"		2302012	0					
ANR	2302677	Callee	printf		2302012	0					
ANR	2302678	Identifier	printf		2302012	0					
ANR	2302679	ArgumentList	"""\\033&l91A"""		2302012	1					
ANR	2302680	Argument	"""\\033&l91A"""		2302012	0					
ANR	2302681	PrimaryExpression	"""\\033&l91A"""		2302012	0					
ANR	2302682	BreakStatement	break ;	195:3:6394:6399	2302012	11	True				
ANR	2302683	Label	case 684 :	197:6:6408:6417	2302012	12	True				
ANR	2302684	ExpressionStatement	"printf ( ""\\033&l81A"" )"	198:10:6451:6470	2302012	13	True				
ANR	2302685	CallExpression	"printf ( ""\\033&l81A"" )"		2302012	0					
ANR	2302686	Callee	printf		2302012	0					
ANR	2302687	Identifier	printf		2302012	0					
ANR	2302688	ArgumentList	"""\\033&l81A"""		2302012	1					
ANR	2302689	Argument	"""\\033&l81A"""		2302012	0					
ANR	2302690	PrimaryExpression	"""\\033&l81A"""		2302012	0					
ANR	2302691	BreakStatement	break ;	199:3:6497:6502	2302012	14	True				
ANR	2302692	Label	case 709 :	201:6:6511:6520	2302012	15	True				
ANR	2302693	ExpressionStatement	"printf ( ""\\033&l100A"" )"	202:10:6550:6570	2302012	16	True				
ANR	2302694	CallExpression	"printf ( ""\\033&l100A"" )"		2302012	0					
ANR	2302695	Callee	printf		2302012	0					
ANR	2302696	Identifier	printf		2302012	0					
ANR	2302697	ArgumentList	"""\\033&l100A"""		2302012	1					
ANR	2302698	Argument	"""\\033&l100A"""		2302012	0					
ANR	2302699	PrimaryExpression	"""\\033&l100A"""		2302012	0					
ANR	2302700	BreakStatement	break ;	203:3:6597:6602	2302012	17	True				
ANR	2302701	Label	case 756 :	205:6:6611:6620	2302012	18	True				
ANR	2302702	ExpressionStatement	"printf ( ""\\033&l1A"" )"	206:10:6648:6666	2302012	19	True				
ANR	2302703	CallExpression	"printf ( ""\\033&l1A"" )"		2302012	0					
ANR	2302704	Callee	printf		2302012	0					
ANR	2302705	Identifier	printf		2302012	0					
ANR	2302706	ArgumentList	"""\\033&l1A"""		2302012	1					
ANR	2302707	Argument	"""\\033&l1A"""		2302012	0					
ANR	2302708	PrimaryExpression	"""\\033&l1A"""		2302012	0					
ANR	2302709	BreakStatement	break ;	207:3:6693:6698	2302012	20	True				
ANR	2302710	Label	case 792 :	209:6:6707:6716	2302012	21	True				
ANR	2302711	ExpressionStatement	"printf ( ""\\033&l2A"" )"	210:10:6741:6759	2302012	22	True				
ANR	2302712	CallExpression	"printf ( ""\\033&l2A"" )"		2302012	0					
ANR	2302713	Callee	printf		2302012	0					
ANR	2302714	Identifier	printf		2302012	0					
ANR	2302715	ArgumentList	"""\\033&l2A"""		2302012	1					
ANR	2302716	Argument	"""\\033&l2A"""		2302012	0					
ANR	2302717	PrimaryExpression	"""\\033&l2A"""		2302012	0					
ANR	2302718	BreakStatement	break ;	211:3:6786:6791	2302012	23	True				
ANR	2302719	Label	case 842 :	213:6:6800:6809	2302012	24	True				
ANR	2302720	ExpressionStatement	"printf ( ""\\033&l26A"" )"	214:10:6830:6849	2302012	25	True				
ANR	2302721	CallExpression	"printf ( ""\\033&l26A"" )"		2302012	0					
ANR	2302722	Callee	printf		2302012	0					
ANR	2302723	Identifier	printf		2302012	0					
ANR	2302724	ArgumentList	"""\\033&l26A"""		2302012	1					
ANR	2302725	Argument	"""\\033&l26A"""		2302012	0					
ANR	2302726	PrimaryExpression	"""\\033&l26A"""		2302012	0					
ANR	2302727	BreakStatement	break ;	215:3:6876:6881	2302012	26	True				
ANR	2302728	Label	case 1008 :	217:6:6890:6900	2302012	27	True				
ANR	2302729	ExpressionStatement	"printf ( ""\\033&l3A"" )"	218:10:6924:6942	2302012	28	True				
ANR	2302730	CallExpression	"printf ( ""\\033&l3A"" )"		2302012	0					
ANR	2302731	Callee	printf		2302012	0					
ANR	2302732	Identifier	printf		2302012	0					
ANR	2302733	ArgumentList	"""\\033&l3A"""		2302012	1					
ANR	2302734	Argument	"""\\033&l3A"""		2302012	0					
ANR	2302735	PrimaryExpression	"""\\033&l3A"""		2302012	0					
ANR	2302736	BreakStatement	break ;	219:3:6969:6974	2302012	29	True				
ANR	2302737	Label	case 1191 :	221:6:6983:6993	2302012	30	True				
ANR	2302738	ExpressionStatement	"printf ( ""\\033&l27A"" )"	222:10:7014:7033	2302012	31	True				
ANR	2302739	CallExpression	"printf ( ""\\033&l27A"" )"		2302012	0					
ANR	2302740	Callee	printf		2302012	0					
ANR	2302741	Identifier	printf		2302012	0					
ANR	2302742	ArgumentList	"""\\033&l27A"""		2302012	1					
ANR	2302743	Argument	"""\\033&l27A"""		2302012	0					
ANR	2302744	PrimaryExpression	"""\\033&l27A"""		2302012	0					
ANR	2302745	BreakStatement	break ;	223:3:7060:7065	2302012	32	True				
ANR	2302746	Label	case 1224 :	225:6:7074:7084	2302012	33	True				
ANR	2302747	ExpressionStatement	"printf ( ""\\033&l6A"" )"	226:10:7110:7128	2302012	34	True				
ANR	2302748	CallExpression	"printf ( ""\\033&l6A"" )"		2302012	0					
ANR	2302749	Callee	printf		2302012	0					
ANR	2302750	Identifier	printf		2302012	0					
ANR	2302751	ArgumentList	"""\\033&l6A"""		2302012	1					
ANR	2302752	Argument	"""\\033&l6A"""		2302012	0					
ANR	2302753	PrimaryExpression	"""\\033&l6A"""		2302012	0					
ANR	2302754	BreakStatement	break ;	227:3:7155:7160	2302012	35	True				
ANR	2302755	ExpressionStatement	"printf ( ""\\033&l%dP"" , header -> PageSize [ 1 ] / 12 )"	230:4:7173:7254	2302012	3	True				
ANR	2302756	CallExpression	"printf ( ""\\033&l%dP"" , header -> PageSize [ 1 ] / 12 )"		2302012	0					
ANR	2302757	Callee	printf		2302012	0					
ANR	2302758	Identifier	printf		2302012	0					
ANR	2302759	ArgumentList	"""\\033&l%dP"""		2302012	1					
ANR	2302760	Argument	"""\\033&l%dP"""		2302012	0					
ANR	2302761	PrimaryExpression	"""\\033&l%dP"""		2302012	0					
ANR	2302762	Argument	header -> PageSize [ 1 ] / 12		2302012	1					
ANR	2302763	MultiplicativeExpression	header -> PageSize [ 1 ] / 12		2302012	0		/			
ANR	2302764	ArrayIndexing	header -> PageSize [ 1 ]		2302012	0					
ANR	2302765	PtrMemberAccess	header -> PageSize		2302012	0					
ANR	2302766	Identifier	header		2302012	0					
ANR	2302767	Identifier	PageSize		2302012	1					
ANR	2302768	PrimaryExpression	1		2302012	1					
ANR	2302769	PrimaryExpression	12		2302012	1					
ANR	2302770	ExpressionStatement	"printf ( ""\\033&l0E"" )"	232:4:7260:7278	2302012	4	True				
ANR	2302771	CallExpression	"printf ( ""\\033&l0E"" )"		2302012	0					
ANR	2302772	Callee	printf		2302012	0					
ANR	2302773	Identifier	printf		2302012	0					
ANR	2302774	ArgumentList	"""\\033&l0E"""		2302012	1					
ANR	2302775	Argument	"""\\033&l0E"""		2302012	0					
ANR	2302776	PrimaryExpression	"""\\033&l0E"""		2302012	0					
ANR	2302777	IfStatement	if ( ! Duplex || ( Page & 1 ) )		2302012	43					
ANR	2302778	Condition	! Duplex || ( Page & 1 )	235:6:7320:7340	2302012	0	True				
ANR	2302779	OrExpression	! Duplex || ( Page & 1 )		2302012	0		||			
ANR	2302780	UnaryOperationExpression	! Duplex		2302012	0					
ANR	2302781	UnaryOperator	!		2302012	0					
ANR	2302782	Identifier	Duplex		2302012	1					
ANR	2302783	BitAndExpression	Page & 1		2302012	1		&			
ANR	2302784	Identifier	Page		2302012	0					
ANR	2302785	PrimaryExpression	1		2302012	1					
ANR	2302786	CompoundStatement		142:2:4980:4980	2302012	1					
ANR	2302787	ExpressionStatement	"printf ( ""\\033&l%dX"" , header -> NumCopies )"	241:4:7396:7434	2302012	0	True				
ANR	2302788	CallExpression	"printf ( ""\\033&l%dX"" , header -> NumCopies )"		2302012	0					
ANR	2302789	Callee	printf		2302012	0					
ANR	2302790	Identifier	printf		2302012	0					
ANR	2302791	ArgumentList	"""\\033&l%dX"""		2302012	1					
ANR	2302792	Argument	"""\\033&l%dX"""		2302012	0					
ANR	2302793	PrimaryExpression	"""\\033&l%dX"""		2302012	0					
ANR	2302794	Argument	header -> NumCopies		2302012	1					
ANR	2302795	PtrMemberAccess	header -> NumCopies		2302012	0					
ANR	2302796	Identifier	header		2302012	0					
ANR	2302797	Identifier	NumCopies		2302012	1					
ANR	2302798	IfStatement	if ( header -> cupsMediaType && ( ! ppd || ppd -> model_number != 2 || header -> HWResolution [ 0 ] == 600 ) )		2302012	1					
ANR	2302799	Condition	header -> cupsMediaType && ( ! ppd || ppd -> model_number != 2 || header -> HWResolution [ 0 ] == 600 )	243:8:7469:7567	2302012	0	True				
ANR	2302800	AndExpression	header -> cupsMediaType && ( ! ppd || ppd -> model_number != 2 || header -> HWResolution [ 0 ] == 600 )		2302012	0		&&			
ANR	2302801	PtrMemberAccess	header -> cupsMediaType		2302012	0					
ANR	2302802	Identifier	header		2302012	0					
ANR	2302803	Identifier	cupsMediaType		2302012	1					
ANR	2302804	OrExpression	! ppd || ppd -> model_number != 2 || header -> HWResolution [ 0 ] == 600		2302012	1		||			
ANR	2302805	UnaryOperationExpression	! ppd		2302012	0					
ANR	2302806	UnaryOperator	!		2302012	0					
ANR	2302807	Identifier	ppd		2302012	1					
ANR	2302808	OrExpression	ppd -> model_number != 2 || header -> HWResolution [ 0 ] == 600		2302012	1		||			
ANR	2302809	EqualityExpression	ppd -> model_number != 2		2302012	0		!=			
ANR	2302810	PtrMemberAccess	ppd -> model_number		2302012	0					
ANR	2302811	Identifier	ppd		2302012	0					
ANR	2302812	Identifier	model_number		2302012	1					
ANR	2302813	PrimaryExpression	2		2302012	1					
ANR	2302814	EqualityExpression	header -> HWResolution [ 0 ] == 600		2302012	1		==			
ANR	2302815	ArrayIndexing	header -> HWResolution [ 0 ]		2302012	0					
ANR	2302816	PtrMemberAccess	header -> HWResolution		2302012	0					
ANR	2302817	Identifier	header		2302012	0					
ANR	2302818	Identifier	HWResolution		2302012	1					
ANR	2302819	PrimaryExpression	0		2302012	1					
ANR	2302820	PrimaryExpression	600		2302012	1					
ANR	2302821	ExpressionStatement	"printf ( ""\\033&l%dM"" , header -> cupsMediaType )"	245:6:7576:7654	2302012	1	True				
ANR	2302822	CallExpression	"printf ( ""\\033&l%dM"" , header -> cupsMediaType )"		2302012	0					
ANR	2302823	Callee	printf		2302012	0					
ANR	2302824	Identifier	printf		2302012	0					
ANR	2302825	ArgumentList	"""\\033&l%dM"""		2302012	1					
ANR	2302826	Argument	"""\\033&l%dM"""		2302012	0					
ANR	2302827	PrimaryExpression	"""\\033&l%dM"""		2302012	0					
ANR	2302828	Argument	header -> cupsMediaType		2302012	1					
ANR	2302829	PtrMemberAccess	header -> cupsMediaType		2302012	0					
ANR	2302830	Identifier	header		2302012	0					
ANR	2302831	Identifier	cupsMediaType		2302012	1					
ANR	2302832	IfStatement	if ( ! ppd || ppd -> model_number != 2 )		2302012	2					
ANR	2302833	Condition	! ppd || ppd -> model_number != 2	248:8:7665:7694	2302012	0	True				
ANR	2302834	OrExpression	! ppd || ppd -> model_number != 2		2302012	0		||			
ANR	2302835	UnaryOperationExpression	! ppd		2302012	0					
ANR	2302836	UnaryOperator	!		2302012	0					
ANR	2302837	Identifier	ppd		2302012	1					
ANR	2302838	EqualityExpression	ppd -> model_number != 2		2302012	1		!=			
ANR	2302839	PtrMemberAccess	ppd -> model_number		2302012	0					
ANR	2302840	Identifier	ppd		2302012	0					
ANR	2302841	Identifier	model_number		2302012	1					
ANR	2302842	PrimaryExpression	2		2302012	1					
ANR	2302843	CompoundStatement		156:6:5344:5391	2302012	1					
ANR	2302844	IdentifierDeclStatement	int mode = Duplex ? 1 + header -> Tumble != 0 : 0 ;	250:6:7709:7756	2302012	0	True				
ANR	2302845	IdentifierDecl	mode = Duplex ? 1 + header -> Tumble != 0 : 0		2302012	0					
ANR	2302846	IdentifierDeclType	int		2302012	0					
ANR	2302847	Identifier	mode		2302012	1					
ANR	2302848	AssignmentExpression	mode = Duplex ? 1 + header -> Tumble != 0 : 0		2302012	2		=			
ANR	2302849	Identifier	mode		2302012	0					
ANR	2302850	ConditionalExpression	Duplex ? 1 + header -> Tumble != 0 : 0		2302012	1					
ANR	2302851	Condition	Duplex		2302012	0					
ANR	2302852	Identifier	Duplex		2302012	0					
ANR	2302853	EqualityExpression	1 + header -> Tumble != 0		2302012	1		!=			
ANR	2302854	AdditiveExpression	1 + header -> Tumble		2302012	0		+			
ANR	2302855	PrimaryExpression	1		2302012	0					
ANR	2302856	PtrMemberAccess	header -> Tumble		2302012	1					
ANR	2302857	Identifier	header		2302012	0					
ANR	2302858	Identifier	Tumble		2302012	1					
ANR	2302859	PrimaryExpression	0		2302012	1					
ANR	2302860	PrimaryExpression	0		2302012	2					
ANR	2302861	ExpressionStatement	"printf ( ""\\033&l%dS"" , mode )"	252:6:7765:7790	2302012	1	True				
ANR	2302862	CallExpression	"printf ( ""\\033&l%dS"" , mode )"		2302012	0					
ANR	2302863	Callee	printf		2302012	0					
ANR	2302864	Identifier	printf		2302012	0					
ANR	2302865	ArgumentList	"""\\033&l%dS"""		2302012	1					
ANR	2302866	Argument	"""\\033&l%dS"""		2302012	0					
ANR	2302867	PrimaryExpression	"""\\033&l%dS"""		2302012	0					
ANR	2302868	Argument	mode		2302012	1					
ANR	2302869	Identifier	mode		2302012	0					
ANR	2302870	ExpressionStatement	"printf ( ""\\033&l0L"" )"	253:6:7821:7839	2302012	2	True				
ANR	2302871	CallExpression	"printf ( ""\\033&l0L"" )"		2302012	0					
ANR	2302872	Callee	printf		2302012	0					
ANR	2302873	Identifier	printf		2302012	0					
ANR	2302874	ArgumentList	"""\\033&l0L"""		2302012	1					
ANR	2302875	Argument	"""\\033&l0L"""		2302012	0					
ANR	2302876	PrimaryExpression	"""\\033&l0L"""		2302012	0					
ANR	2302877	ElseStatement	else		2302012	0					
ANR	2302878	IfStatement	if ( ! ppd || ppd -> model_number != 2 )		2302012	0					
ANR	2302879	Condition	! ppd || ppd -> model_number != 2	256:11:7896:7925	2302012	0	True				
ANR	2302880	OrExpression	! ppd || ppd -> model_number != 2		2302012	0		||			
ANR	2302881	UnaryOperationExpression	! ppd		2302012	0					
ANR	2302882	UnaryOperator	!		2302012	0					
ANR	2302883	Identifier	ppd		2302012	1					
ANR	2302884	EqualityExpression	ppd -> model_number != 2		2302012	1		!=			
ANR	2302885	PtrMemberAccess	ppd -> model_number		2302012	0					
ANR	2302886	Identifier	ppd		2302012	0					
ANR	2302887	Identifier	model_number		2302012	1					
ANR	2302888	PrimaryExpression	2		2302012	1					
ANR	2302889	ExpressionStatement	"printf ( ""\\033&a2G"" )"	257:4:7932:7950	2302012	1	True				
ANR	2302890	CallExpression	"printf ( ""\\033&a2G"" )"		2302012	0					
ANR	2302891	Callee	printf		2302012	0					
ANR	2302892	Identifier	printf		2302012	0					
ANR	2302893	ArgumentList	"""\\033&a2G"""		2302012	1					
ANR	2302894	Argument	"""\\033&a2G"""		2302012	0					
ANR	2302895	PrimaryExpression	"""\\033&a2G"""		2302012	0					
ANR	2302896	IfStatement	if ( ppd && ppd -> model_number == 2 )		2302012	44					
ANR	2302897	Condition	ppd && ppd -> model_number == 2	263:6:8017:8045	2302012	0	True				
ANR	2302898	AndExpression	ppd && ppd -> model_number == 2		2302012	0		&&			
ANR	2302899	Identifier	ppd		2302012	0					
ANR	2302900	EqualityExpression	ppd -> model_number == 2		2302012	1		==			
ANR	2302901	PtrMemberAccess	ppd -> model_number		2302012	0					
ANR	2302902	Identifier	ppd		2302012	0					
ANR	2302903	Identifier	model_number		2302012	1					
ANR	2302904	PrimaryExpression	2		2302012	1					
ANR	2302905	CompoundStatement		170:2:5685:5685	2302012	1					
ANR	2302906	IfStatement	if ( header -> cupsColorSpace == CUPS_CSPACE_KCMY )		2302012	0					
ANR	2302907	Condition	header -> cupsColorSpace == CUPS_CSPACE_KCMY	269:8:8121:8162	2302012	0	True				
ANR	2302908	EqualityExpression	header -> cupsColorSpace == CUPS_CSPACE_KCMY		2302012	0		==			
ANR	2302909	PtrMemberAccess	header -> cupsColorSpace		2302012	0					
ANR	2302910	Identifier	header		2302012	0					
ANR	2302911	Identifier	cupsColorSpace		2302012	1					
ANR	2302912	Identifier	CUPS_CSPACE_KCMY		2302012	1					
ANR	2302913	ExpressionStatement	NumPlanes = 4	270:6:8171:8184	2302012	1	True				
ANR	2302914	AssignmentExpression	NumPlanes = 4		2302012	0		=			
ANR	2302915	Identifier	NumPlanes		2302012	0					
ANR	2302916	PrimaryExpression	4		2302012	1					
ANR	2302917	ElseStatement	else		2302012	0					
ANR	2302918	ExpressionStatement	NumPlanes = 1	272:6:8201:8214	2302012	0	True				
ANR	2302919	AssignmentExpression	NumPlanes = 1		2302012	0		=			
ANR	2302920	Identifier	NumPlanes		2302012	0					
ANR	2302921	PrimaryExpression	1		2302012	1					
ANR	2302922	ExpressionStatement	"printf ( ""\\033&u%dD"" , header -> HWResolution [ 0 ] )"	278:4:8279:8323	2302012	1	True				
ANR	2302923	CallExpression	"printf ( ""\\033&u%dD"" , header -> HWResolution [ 0 ] )"		2302012	0					
ANR	2302924	Callee	printf		2302012	0					
ANR	2302925	Identifier	printf		2302012	0					
ANR	2302926	ArgumentList	"""\\033&u%dD"""		2302012	1					
ANR	2302927	Argument	"""\\033&u%dD"""		2302012	0					
ANR	2302928	PrimaryExpression	"""\\033&u%dD"""		2302012	0					
ANR	2302929	Argument	header -> HWResolution [ 0 ]		2302012	1					
ANR	2302930	ArrayIndexing	header -> HWResolution [ 0 ]		2302012	0					
ANR	2302931	PtrMemberAccess	header -> HWResolution		2302012	0					
ANR	2302932	Identifier	header		2302012	0					
ANR	2302933	Identifier	HWResolution		2302012	1					
ANR	2302934	PrimaryExpression	0		2302012	1					
ANR	2302935	ExpressionStatement	"printf ( ""\\033&l0e0L"" )"	280:4:8352:8372	2302012	2	True				
ANR	2302936	CallExpression	"printf ( ""\\033&l0e0L"" )"		2302012	0					
ANR	2302937	Callee	printf		2302012	0					
ANR	2302938	Identifier	printf		2302012	0					
ANR	2302939	ArgumentList	"""\\033&l0e0L"""		2302012	1					
ANR	2302940	Argument	"""\\033&l0e0L"""		2302012	0					
ANR	2302941	PrimaryExpression	"""\\033&l0e0L"""		2302012	0					
ANR	2302942	ExpressionStatement	"printf ( ""\\033*p0Y\\033*p0X"" )"	281:4:8411:8437	2302012	3	True				
ANR	2302943	CallExpression	"printf ( ""\\033*p0Y\\033*p0X"" )"		2302012	0					
ANR	2302944	Callee	printf		2302012	0					
ANR	2302945	Identifier	printf		2302012	0					
ANR	2302946	ArgumentList	"""\\033*p0Y\\033*p0X"""		2302012	1					
ANR	2302947	Argument	"""\\033*p0Y\\033*p0X"""		2302012	0					
ANR	2302948	PrimaryExpression	"""\\033*p0Y\\033*p0X"""		2302012	0					
ANR	2302949	ExpressionStatement	"printf ( ""\\033*g26W"" )"	288:4:8605:8624	2302012	4	True				
ANR	2302950	CallExpression	"printf ( ""\\033*g26W"" )"		2302012	0					
ANR	2302951	Callee	printf		2302012	0					
ANR	2302952	Identifier	printf		2302012	0					
ANR	2302953	ArgumentList	"""\\033*g26W"""		2302012	1					
ANR	2302954	Argument	"""\\033*g26W"""		2302012	0					
ANR	2302955	PrimaryExpression	"""\\033*g26W"""		2302012	0					
ANR	2302956	ExpressionStatement	putchar ( 2 )	289:4:8630:8640	2302012	5	True				
ANR	2302957	CallExpression	putchar ( 2 )		2302012	0					
ANR	2302958	Callee	putchar		2302012	0					
ANR	2302959	Identifier	putchar		2302012	0					
ANR	2302960	ArgumentList	2		2302012	1					
ANR	2302961	Argument	2		2302012	0					
ANR	2302962	PrimaryExpression	2		2302012	0					
ANR	2302963	ExpressionStatement	putchar ( NumPlanes )	290:4:8665:8683	2302012	6	True				
ANR	2302964	CallExpression	putchar ( NumPlanes )		2302012	0					
ANR	2302965	Callee	putchar		2302012	0					
ANR	2302966	Identifier	putchar		2302012	0					
ANR	2302967	ArgumentList	NumPlanes		2302012	1					
ANR	2302968	Argument	NumPlanes		2302012	0					
ANR	2302969	Identifier	NumPlanes		2302012	0					
ANR	2302970	ExpressionStatement	putchar ( header -> HWResolution [ 0 ] >> 8 )	292:4:8713:8750	2302012	7	True				
ANR	2302971	CallExpression	putchar ( header -> HWResolution [ 0 ] >> 8 )		2302012	0					
ANR	2302972	Callee	putchar		2302012	0					
ANR	2302973	Identifier	putchar		2302012	0					
ANR	2302974	ArgumentList	header -> HWResolution [ 0 ] >> 8		2302012	1					
ANR	2302975	Argument	header -> HWResolution [ 0 ] >> 8		2302012	0					
ANR	2302976	ShiftExpression	header -> HWResolution [ 0 ] >> 8		2302012	0		>>			
ANR	2302977	ArrayIndexing	header -> HWResolution [ 0 ]		2302012	0					
ANR	2302978	PtrMemberAccess	header -> HWResolution		2302012	0					
ANR	2302979	Identifier	header		2302012	0					
ANR	2302980	Identifier	HWResolution		2302012	1					
ANR	2302981	PrimaryExpression	0		2302012	1					
ANR	2302982	PrimaryExpression	8		2302012	1					
ANR	2302983	ExpressionStatement	putchar ( header -> HWResolution [ 0 ] )	293:4:8779:8811	2302012	8	True				
ANR	2302984	CallExpression	putchar ( header -> HWResolution [ 0 ] )		2302012	0					
ANR	2302985	Callee	putchar		2302012	0					
ANR	2302986	Identifier	putchar		2302012	0					
ANR	2302987	ArgumentList	header -> HWResolution [ 0 ]		2302012	1					
ANR	2302988	Argument	header -> HWResolution [ 0 ]		2302012	0					
ANR	2302989	ArrayIndexing	header -> HWResolution [ 0 ]		2302012	0					
ANR	2302990	PtrMemberAccess	header -> HWResolution		2302012	0					
ANR	2302991	Identifier	header		2302012	0					
ANR	2302992	Identifier	HWResolution		2302012	1					
ANR	2302993	PrimaryExpression	0		2302012	1					
ANR	2302994	ExpressionStatement	putchar ( header -> HWResolution [ 1 ] >> 8 )	294:4:8817:8854	2302012	9	True				
ANR	2302995	CallExpression	putchar ( header -> HWResolution [ 1 ] >> 8 )		2302012	0					
ANR	2302996	Callee	putchar		2302012	0					
ANR	2302997	Identifier	putchar		2302012	0					
ANR	2302998	ArgumentList	header -> HWResolution [ 1 ] >> 8		2302012	1					
ANR	2302999	Argument	header -> HWResolution [ 1 ] >> 8		2302012	0					
ANR	2303000	ShiftExpression	header -> HWResolution [ 1 ] >> 8		2302012	0		>>			
ANR	2303001	ArrayIndexing	header -> HWResolution [ 1 ]		2302012	0					
ANR	2303002	PtrMemberAccess	header -> HWResolution		2302012	0					
ANR	2303003	Identifier	header		2302012	0					
ANR	2303004	Identifier	HWResolution		2302012	1					
ANR	2303005	PrimaryExpression	1		2302012	1					
ANR	2303006	PrimaryExpression	8		2302012	1					
ANR	2303007	ExpressionStatement	putchar ( header -> HWResolution [ 1 ] )	295:4:8860:8892	2302012	10	True				
ANR	2303008	CallExpression	putchar ( header -> HWResolution [ 1 ] )		2302012	0					
ANR	2303009	Callee	putchar		2302012	0					
ANR	2303010	Identifier	putchar		2302012	0					
ANR	2303011	ArgumentList	header -> HWResolution [ 1 ]		2302012	1					
ANR	2303012	Argument	header -> HWResolution [ 1 ]		2302012	0					
ANR	2303013	ArrayIndexing	header -> HWResolution [ 1 ]		2302012	0					
ANR	2303014	PtrMemberAccess	header -> HWResolution		2302012	0					
ANR	2303015	Identifier	header		2302012	0					
ANR	2303016	Identifier	HWResolution		2302012	1					
ANR	2303017	PrimaryExpression	1		2302012	1					
ANR	2303018	ExpressionStatement	putchar ( 0 )	296:4:8898:8908	2302012	11	True				
ANR	2303019	CallExpression	putchar ( 0 )		2302012	0					
ANR	2303020	Callee	putchar		2302012	0					
ANR	2303021	Identifier	putchar		2302012	0					
ANR	2303022	ArgumentList	0		2302012	1					
ANR	2303023	Argument	0		2302012	0					
ANR	2303024	PrimaryExpression	0		2302012	0					
ANR	2303025	ExpressionStatement	putchar ( 1 << ColorBits )	297:4:8914:8937	2302012	12	True				
ANR	2303026	CallExpression	putchar ( 1 << ColorBits )		2302012	0					
ANR	2303027	Callee	putchar		2302012	0					
ANR	2303028	Identifier	putchar		2302012	0					
ANR	2303029	ArgumentList	1 << ColorBits		2302012	1					
ANR	2303030	Argument	1 << ColorBits		2302012	0					
ANR	2303031	ShiftExpression	1 << ColorBits		2302012	0		<<			
ANR	2303032	PrimaryExpression	1		2302012	0					
ANR	2303033	Identifier	ColorBits		2302012	1					
ANR	2303034	ExpressionStatement	putchar ( header -> HWResolution [ 0 ] >> 8 )	299:4:8970:9007	2302012	13	True				
ANR	2303035	CallExpression	putchar ( header -> HWResolution [ 0 ] >> 8 )		2302012	0					
ANR	2303036	Callee	putchar		2302012	0					
ANR	2303037	Identifier	putchar		2302012	0					
ANR	2303038	ArgumentList	header -> HWResolution [ 0 ] >> 8		2302012	1					
ANR	2303039	Argument	header -> HWResolution [ 0 ] >> 8		2302012	0					
ANR	2303040	ShiftExpression	header -> HWResolution [ 0 ] >> 8		2302012	0		>>			
ANR	2303041	ArrayIndexing	header -> HWResolution [ 0 ]		2302012	0					
ANR	2303042	PtrMemberAccess	header -> HWResolution		2302012	0					
ANR	2303043	Identifier	header		2302012	0					
ANR	2303044	Identifier	HWResolution		2302012	1					
ANR	2303045	PrimaryExpression	0		2302012	1					
ANR	2303046	PrimaryExpression	8		2302012	1					
ANR	2303047	ExpressionStatement	putchar ( header -> HWResolution [ 0 ] )	300:4:9035:9067	2302012	14	True				
ANR	2303048	CallExpression	putchar ( header -> HWResolution [ 0 ] )		2302012	0					
ANR	2303049	Callee	putchar		2302012	0					
ANR	2303050	Identifier	putchar		2302012	0					
ANR	2303051	ArgumentList	header -> HWResolution [ 0 ]		2302012	1					
ANR	2303052	Argument	header -> HWResolution [ 0 ]		2302012	0					
ANR	2303053	ArrayIndexing	header -> HWResolution [ 0 ]		2302012	0					
ANR	2303054	PtrMemberAccess	header -> HWResolution		2302012	0					
ANR	2303055	Identifier	header		2302012	0					
ANR	2303056	Identifier	HWResolution		2302012	1					
ANR	2303057	PrimaryExpression	0		2302012	1					
ANR	2303058	ExpressionStatement	putchar ( header -> HWResolution [ 1 ] >> 8 )	301:4:9073:9110	2302012	15	True				
ANR	2303059	CallExpression	putchar ( header -> HWResolution [ 1 ] >> 8 )		2302012	0					
ANR	2303060	Callee	putchar		2302012	0					
ANR	2303061	Identifier	putchar		2302012	0					
ANR	2303062	ArgumentList	header -> HWResolution [ 1 ] >> 8		2302012	1					
ANR	2303063	Argument	header -> HWResolution [ 1 ] >> 8		2302012	0					
ANR	2303064	ShiftExpression	header -> HWResolution [ 1 ] >> 8		2302012	0		>>			
ANR	2303065	ArrayIndexing	header -> HWResolution [ 1 ]		2302012	0					
ANR	2303066	PtrMemberAccess	header -> HWResolution		2302012	0					
ANR	2303067	Identifier	header		2302012	0					
ANR	2303068	Identifier	HWResolution		2302012	1					
ANR	2303069	PrimaryExpression	1		2302012	1					
ANR	2303070	PrimaryExpression	8		2302012	1					
ANR	2303071	ExpressionStatement	putchar ( header -> HWResolution [ 1 ] )	302:4:9116:9148	2302012	16	True				
ANR	2303072	CallExpression	putchar ( header -> HWResolution [ 1 ] )		2302012	0					
ANR	2303073	Callee	putchar		2302012	0					
ANR	2303074	Identifier	putchar		2302012	0					
ANR	2303075	ArgumentList	header -> HWResolution [ 1 ]		2302012	1					
ANR	2303076	Argument	header -> HWResolution [ 1 ]		2302012	0					
ANR	2303077	ArrayIndexing	header -> HWResolution [ 1 ]		2302012	0					
ANR	2303078	PtrMemberAccess	header -> HWResolution		2302012	0					
ANR	2303079	Identifier	header		2302012	0					
ANR	2303080	Identifier	HWResolution		2302012	1					
ANR	2303081	PrimaryExpression	1		2302012	1					
ANR	2303082	ExpressionStatement	putchar ( 0 )	303:4:9154:9164	2302012	17	True				
ANR	2303083	CallExpression	putchar ( 0 )		2302012	0					
ANR	2303084	Callee	putchar		2302012	0					
ANR	2303085	Identifier	putchar		2302012	0					
ANR	2303086	ArgumentList	0		2302012	1					
ANR	2303087	Argument	0		2302012	0					
ANR	2303088	PrimaryExpression	0		2302012	0					
ANR	2303089	ExpressionStatement	putchar ( 1 << ColorBits )	304:4:9170:9193	2302012	18	True				
ANR	2303090	CallExpression	putchar ( 1 << ColorBits )		2302012	0					
ANR	2303091	Callee	putchar		2302012	0					
ANR	2303092	Identifier	putchar		2302012	0					
ANR	2303093	ArgumentList	1 << ColorBits		2302012	1					
ANR	2303094	Argument	1 << ColorBits		2302012	0					
ANR	2303095	ShiftExpression	1 << ColorBits		2302012	0		<<			
ANR	2303096	PrimaryExpression	1		2302012	0					
ANR	2303097	Identifier	ColorBits		2302012	1					
ANR	2303098	ExpressionStatement	putchar ( header -> HWResolution [ 0 ] >> 8 )	306:4:9225:9262	2302012	19	True				
ANR	2303099	CallExpression	putchar ( header -> HWResolution [ 0 ] >> 8 )		2302012	0					
ANR	2303100	Callee	putchar		2302012	0					
ANR	2303101	Identifier	putchar		2302012	0					
ANR	2303102	ArgumentList	header -> HWResolution [ 0 ] >> 8		2302012	1					
ANR	2303103	Argument	header -> HWResolution [ 0 ] >> 8		2302012	0					
ANR	2303104	ShiftExpression	header -> HWResolution [ 0 ] >> 8		2302012	0		>>			
ANR	2303105	ArrayIndexing	header -> HWResolution [ 0 ]		2302012	0					
ANR	2303106	PtrMemberAccess	header -> HWResolution		2302012	0					
ANR	2303107	Identifier	header		2302012	0					
ANR	2303108	Identifier	HWResolution		2302012	1					
ANR	2303109	PrimaryExpression	0		2302012	1					
ANR	2303110	PrimaryExpression	8		2302012	1					
ANR	2303111	ExpressionStatement	putchar ( header -> HWResolution [ 0 ] )	307:4:9293:9325	2302012	20	True				
ANR	2303112	CallExpression	putchar ( header -> HWResolution [ 0 ] )		2302012	0					
ANR	2303113	Callee	putchar		2302012	0					
ANR	2303114	Identifier	putchar		2302012	0					
ANR	2303115	ArgumentList	header -> HWResolution [ 0 ]		2302012	1					
ANR	2303116	Argument	header -> HWResolution [ 0 ]		2302012	0					
ANR	2303117	ArrayIndexing	header -> HWResolution [ 0 ]		2302012	0					
ANR	2303118	PtrMemberAccess	header -> HWResolution		2302012	0					
ANR	2303119	Identifier	header		2302012	0					
ANR	2303120	Identifier	HWResolution		2302012	1					
ANR	2303121	PrimaryExpression	0		2302012	1					
ANR	2303122	ExpressionStatement	putchar ( header -> HWResolution [ 1 ] >> 8 )	308:4:9331:9368	2302012	21	True				
ANR	2303123	CallExpression	putchar ( header -> HWResolution [ 1 ] >> 8 )		2302012	0					
ANR	2303124	Callee	putchar		2302012	0					
ANR	2303125	Identifier	putchar		2302012	0					
ANR	2303126	ArgumentList	header -> HWResolution [ 1 ] >> 8		2302012	1					
ANR	2303127	Argument	header -> HWResolution [ 1 ] >> 8		2302012	0					
ANR	2303128	ShiftExpression	header -> HWResolution [ 1 ] >> 8		2302012	0		>>			
ANR	2303129	ArrayIndexing	header -> HWResolution [ 1 ]		2302012	0					
ANR	2303130	PtrMemberAccess	header -> HWResolution		2302012	0					
ANR	2303131	Identifier	header		2302012	0					
ANR	2303132	Identifier	HWResolution		2302012	1					
ANR	2303133	PrimaryExpression	1		2302012	1					
ANR	2303134	PrimaryExpression	8		2302012	1					
ANR	2303135	ExpressionStatement	putchar ( header -> HWResolution [ 1 ] )	309:4:9374:9406	2302012	22	True				
ANR	2303136	CallExpression	putchar ( header -> HWResolution [ 1 ] )		2302012	0					
ANR	2303137	Callee	putchar		2302012	0					
ANR	2303138	Identifier	putchar		2302012	0					
ANR	2303139	ArgumentList	header -> HWResolution [ 1 ]		2302012	1					
ANR	2303140	Argument	header -> HWResolution [ 1 ]		2302012	0					
ANR	2303141	ArrayIndexing	header -> HWResolution [ 1 ]		2302012	0					
ANR	2303142	PtrMemberAccess	header -> HWResolution		2302012	0					
ANR	2303143	Identifier	header		2302012	0					
ANR	2303144	Identifier	HWResolution		2302012	1					
ANR	2303145	PrimaryExpression	1		2302012	1					
ANR	2303146	ExpressionStatement	putchar ( 0 )	310:4:9412:9422	2302012	23	True				
ANR	2303147	CallExpression	putchar ( 0 )		2302012	0					
ANR	2303148	Callee	putchar		2302012	0					
ANR	2303149	Identifier	putchar		2302012	0					
ANR	2303150	ArgumentList	0		2302012	1					
ANR	2303151	Argument	0		2302012	0					
ANR	2303152	PrimaryExpression	0		2302012	0					
ANR	2303153	ExpressionStatement	putchar ( 1 << ColorBits )	311:4:9428:9451	2302012	24	True				
ANR	2303154	CallExpression	putchar ( 1 << ColorBits )		2302012	0					
ANR	2303155	Callee	putchar		2302012	0					
ANR	2303156	Identifier	putchar		2302012	0					
ANR	2303157	ArgumentList	1 << ColorBits		2302012	1					
ANR	2303158	Argument	1 << ColorBits		2302012	0					
ANR	2303159	ShiftExpression	1 << ColorBits		2302012	0		<<			
ANR	2303160	PrimaryExpression	1		2302012	0					
ANR	2303161	Identifier	ColorBits		2302012	1					
ANR	2303162	ExpressionStatement	putchar ( header -> HWResolution [ 0 ] >> 8 )	313:4:9486:9523	2302012	25	True				
ANR	2303163	CallExpression	putchar ( header -> HWResolution [ 0 ] >> 8 )		2302012	0					
ANR	2303164	Callee	putchar		2302012	0					
ANR	2303165	Identifier	putchar		2302012	0					
ANR	2303166	ArgumentList	header -> HWResolution [ 0 ] >> 8		2302012	1					
ANR	2303167	Argument	header -> HWResolution [ 0 ] >> 8		2302012	0					
ANR	2303168	ShiftExpression	header -> HWResolution [ 0 ] >> 8		2302012	0		>>			
ANR	2303169	ArrayIndexing	header -> HWResolution [ 0 ]		2302012	0					
ANR	2303170	PtrMemberAccess	header -> HWResolution		2302012	0					
ANR	2303171	Identifier	header		2302012	0					
ANR	2303172	Identifier	HWResolution		2302012	1					
ANR	2303173	PrimaryExpression	0		2302012	1					
ANR	2303174	PrimaryExpression	8		2302012	1					
ANR	2303175	ExpressionStatement	putchar ( header -> HWResolution [ 0 ] )	314:4:9553:9585	2302012	26	True				
ANR	2303176	CallExpression	putchar ( header -> HWResolution [ 0 ] )		2302012	0					
ANR	2303177	Callee	putchar		2302012	0					
ANR	2303178	Identifier	putchar		2302012	0					
ANR	2303179	ArgumentList	header -> HWResolution [ 0 ]		2302012	1					
ANR	2303180	Argument	header -> HWResolution [ 0 ]		2302012	0					
ANR	2303181	ArrayIndexing	header -> HWResolution [ 0 ]		2302012	0					
ANR	2303182	PtrMemberAccess	header -> HWResolution		2302012	0					
ANR	2303183	Identifier	header		2302012	0					
ANR	2303184	Identifier	HWResolution		2302012	1					
ANR	2303185	PrimaryExpression	0		2302012	1					
ANR	2303186	ExpressionStatement	putchar ( header -> HWResolution [ 1 ] >> 8 )	315:4:9591:9628	2302012	27	True				
ANR	2303187	CallExpression	putchar ( header -> HWResolution [ 1 ] >> 8 )		2302012	0					
ANR	2303188	Callee	putchar		2302012	0					
ANR	2303189	Identifier	putchar		2302012	0					
ANR	2303190	ArgumentList	header -> HWResolution [ 1 ] >> 8		2302012	1					
ANR	2303191	Argument	header -> HWResolution [ 1 ] >> 8		2302012	0					
ANR	2303192	ShiftExpression	header -> HWResolution [ 1 ] >> 8		2302012	0		>>			
ANR	2303193	ArrayIndexing	header -> HWResolution [ 1 ]		2302012	0					
ANR	2303194	PtrMemberAccess	header -> HWResolution		2302012	0					
ANR	2303195	Identifier	header		2302012	0					
ANR	2303196	Identifier	HWResolution		2302012	1					
ANR	2303197	PrimaryExpression	1		2302012	1					
ANR	2303198	PrimaryExpression	8		2302012	1					
ANR	2303199	ExpressionStatement	putchar ( header -> HWResolution [ 1 ] )	316:4:9634:9666	2302012	28	True				
ANR	2303200	CallExpression	putchar ( header -> HWResolution [ 1 ] )		2302012	0					
ANR	2303201	Callee	putchar		2302012	0					
ANR	2303202	Identifier	putchar		2302012	0					
ANR	2303203	ArgumentList	header -> HWResolution [ 1 ]		2302012	1					
ANR	2303204	Argument	header -> HWResolution [ 1 ]		2302012	0					
ANR	2303205	ArrayIndexing	header -> HWResolution [ 1 ]		2302012	0					
ANR	2303206	PtrMemberAccess	header -> HWResolution		2302012	0					
ANR	2303207	Identifier	header		2302012	0					
ANR	2303208	Identifier	HWResolution		2302012	1					
ANR	2303209	PrimaryExpression	1		2302012	1					
ANR	2303210	ExpressionStatement	putchar ( 0 )	317:4:9672:9682	2302012	29	True				
ANR	2303211	CallExpression	putchar ( 0 )		2302012	0					
ANR	2303212	Callee	putchar		2302012	0					
ANR	2303213	Identifier	putchar		2302012	0					
ANR	2303214	ArgumentList	0		2302012	1					
ANR	2303215	Argument	0		2302012	0					
ANR	2303216	PrimaryExpression	0		2302012	0					
ANR	2303217	ExpressionStatement	putchar ( 1 << ColorBits )	318:4:9688:9711	2302012	30	True				
ANR	2303218	CallExpression	putchar ( 1 << ColorBits )		2302012	0					
ANR	2303219	Callee	putchar		2302012	0					
ANR	2303220	Identifier	putchar		2302012	0					
ANR	2303221	ArgumentList	1 << ColorBits		2302012	1					
ANR	2303222	Argument	1 << ColorBits		2302012	0					
ANR	2303223	ShiftExpression	1 << ColorBits		2302012	0		<<			
ANR	2303224	PrimaryExpression	1		2302012	0					
ANR	2303225	Identifier	ColorBits		2302012	1					
ANR	2303226	ExpressionStatement	"printf ( ""\\033&l0H"" )"	320:4:9745:9763	2302012	31	True				
ANR	2303227	CallExpression	"printf ( ""\\033&l0H"" )"		2302012	0					
ANR	2303228	Callee	printf		2302012	0					
ANR	2303229	Identifier	printf		2302012	0					
ANR	2303230	ArgumentList	"""\\033&l0H"""		2302012	1					
ANR	2303231	Argument	"""\\033&l0H"""		2302012	0					
ANR	2303232	PrimaryExpression	"""\\033&l0H"""		2302012	0					
ANR	2303233	ElseStatement	else		2302012	0					
ANR	2303234	CompoundStatement		229:2:7441:7441	2302012	0					
ANR	2303235	ExpressionStatement	"printf ( ""\\033*t%dR"" , header -> HWResolution [ 0 ] )"	324:4:9812:9856	2302012	0	True				
ANR	2303236	CallExpression	"printf ( ""\\033*t%dR"" , header -> HWResolution [ 0 ] )"		2302012	0					
ANR	2303237	Callee	printf		2302012	0					
ANR	2303238	Identifier	printf		2302012	0					
ANR	2303239	ArgumentList	"""\\033*t%dR"""		2302012	1					
ANR	2303240	Argument	"""\\033*t%dR"""		2302012	0					
ANR	2303241	PrimaryExpression	"""\\033*t%dR"""		2302012	0					
ANR	2303242	Argument	header -> HWResolution [ 0 ]		2302012	1					
ANR	2303243	ArrayIndexing	header -> HWResolution [ 0 ]		2302012	0					
ANR	2303244	PtrMemberAccess	header -> HWResolution		2302012	0					
ANR	2303245	Identifier	header		2302012	0					
ANR	2303246	Identifier	HWResolution		2302012	1					
ANR	2303247	PrimaryExpression	0		2302012	1					
ANR	2303248	IfStatement	if ( header -> cupsColorSpace == CUPS_CSPACE_KCMY )		2302012	1					
ANR	2303249	Condition	header -> cupsColorSpace == CUPS_CSPACE_KCMY	327:8:9894:9935	2302012	0	True				
ANR	2303250	EqualityExpression	header -> cupsColorSpace == CUPS_CSPACE_KCMY		2302012	0		==			
ANR	2303251	PtrMemberAccess	header -> cupsColorSpace		2302012	0					
ANR	2303252	Identifier	header		2302012	0					
ANR	2303253	Identifier	cupsColorSpace		2302012	1					
ANR	2303254	Identifier	CUPS_CSPACE_KCMY		2302012	1					
ANR	2303255	CompoundStatement		234:4:7577:7577	2302012	1					
ANR	2303256	ExpressionStatement	NumPlanes = 4	329:6:9950:9963	2302012	0	True				
ANR	2303257	AssignmentExpression	NumPlanes = 4		2302012	0		=			
ANR	2303258	Identifier	NumPlanes		2302012	0					
ANR	2303259	PrimaryExpression	4		2302012	1					
ANR	2303260	ExpressionStatement	"printf ( ""\\033*r-4U"" )"	330:6:9971:9990	2302012	1	True				
ANR	2303261	CallExpression	"printf ( ""\\033*r-4U"" )"		2302012	0					
ANR	2303262	Callee	printf		2302012	0					
ANR	2303263	Identifier	printf		2302012	0					
ANR	2303264	ArgumentList	"""\\033*r-4U"""		2302012	1					
ANR	2303265	Argument	"""\\033*r-4U"""		2302012	0					
ANR	2303266	PrimaryExpression	"""\\033*r-4U"""		2302012	0					
ANR	2303267	ElseStatement	else		2302012	0					
ANR	2303268	IfStatement	if ( header -> cupsColorSpace == CUPS_CSPACE_CMY )		2302012	0					
ANR	2303269	Condition	header -> cupsColorSpace == CUPS_CSPACE_CMY	332:13:10037:10077	2302012	0	True				
ANR	2303270	EqualityExpression	header -> cupsColorSpace == CUPS_CSPACE_CMY		2302012	0		==			
ANR	2303271	PtrMemberAccess	header -> cupsColorSpace		2302012	0					
ANR	2303272	Identifier	header		2302012	0					
ANR	2303273	Identifier	cupsColorSpace		2302012	1					
ANR	2303274	Identifier	CUPS_CSPACE_CMY		2302012	1					
ANR	2303275	CompoundStatement		239:4:7719:7719	2302012	1					
ANR	2303276	ExpressionStatement	NumPlanes = 3	334:6:10092:10105	2302012	0	True				
ANR	2303277	AssignmentExpression	NumPlanes = 3		2302012	0		=			
ANR	2303278	Identifier	NumPlanes		2302012	0					
ANR	2303279	PrimaryExpression	3		2302012	1					
ANR	2303280	ExpressionStatement	"printf ( ""\\033*r-3U"" )"	335:6:10113:10132	2302012	1	True				
ANR	2303281	CallExpression	"printf ( ""\\033*r-3U"" )"		2302012	0					
ANR	2303282	Callee	printf		2302012	0					
ANR	2303283	Identifier	printf		2302012	0					
ANR	2303284	ArgumentList	"""\\033*r-3U"""		2302012	1					
ANR	2303285	Argument	"""\\033*r-3U"""		2302012	0					
ANR	2303286	PrimaryExpression	"""\\033*r-3U"""		2302012	0					
ANR	2303287	ElseStatement	else		2302012	0					
ANR	2303288	ExpressionStatement	NumPlanes = 1	338:6:10180:10193	2302012	0	True				
ANR	2303289	AssignmentExpression	NumPlanes = 1		2302012	0		=			
ANR	2303290	Identifier	NumPlanes		2302012	0					
ANR	2303291	PrimaryExpression	1		2302012	1					
ANR	2303292	ExpressionStatement	"printf ( ""\\033*r%dS"" , header -> cupsWidth )"	344:4:10287:10325	2302012	2	True				
ANR	2303293	CallExpression	"printf ( ""\\033*r%dS"" , header -> cupsWidth )"		2302012	0					
ANR	2303294	Callee	printf		2302012	0					
ANR	2303295	Identifier	printf		2302012	0					
ANR	2303296	ArgumentList	"""\\033*r%dS"""		2302012	1					
ANR	2303297	Argument	"""\\033*r%dS"""		2302012	0					
ANR	2303298	PrimaryExpression	"""\\033*r%dS"""		2302012	0					
ANR	2303299	Argument	header -> cupsWidth		2302012	1					
ANR	2303300	PtrMemberAccess	header -> cupsWidth		2302012	0					
ANR	2303301	Identifier	header		2302012	0					
ANR	2303302	Identifier	cupsWidth		2302012	1					
ANR	2303303	ExpressionStatement	"printf ( ""\\033*r%dT"" , header -> cupsHeight )"	345:4:10347:10386	2302012	3	True				
ANR	2303304	CallExpression	"printf ( ""\\033*r%dT"" , header -> cupsHeight )"		2302012	0					
ANR	2303305	Callee	printf		2302012	0					
ANR	2303306	Identifier	printf		2302012	0					
ANR	2303307	ArgumentList	"""\\033*r%dT"""		2302012	1					
ANR	2303308	Argument	"""\\033*r%dT"""		2302012	0					
ANR	2303309	PrimaryExpression	"""\\033*r%dT"""		2302012	0					
ANR	2303310	Argument	header -> cupsHeight		2302012	1					
ANR	2303311	PtrMemberAccess	header -> cupsHeight		2302012	0					
ANR	2303312	Identifier	header		2302012	0					
ANR	2303313	Identifier	cupsHeight		2302012	1					
ANR	2303314	ExpressionStatement	"printf ( ""\\033&a0H"" )"	347:4:10410:10428	2302012	4	True				
ANR	2303315	CallExpression	"printf ( ""\\033&a0H"" )"		2302012	0					
ANR	2303316	Callee	printf		2302012	0					
ANR	2303317	Identifier	printf		2302012	0					
ANR	2303318	ArgumentList	"""\\033&a0H"""		2302012	1					
ANR	2303319	Argument	"""\\033&a0H"""		2302012	0					
ANR	2303320	PrimaryExpression	"""\\033&a0H"""		2302012	0					
ANR	2303321	IfStatement	if ( ppd )		2302012	5					
ANR	2303322	Condition	ppd	349:8:10472:10474	2302012	0	True				
ANR	2303323	Identifier	ppd		2302012	0					
ANR	2303324	ExpressionStatement	"printf ( ""\\033&a%.0fV"" , 10.0 * ( ppd -> sizes [ 0 ] . length - ppd -> sizes [ 0 ] . top ) )"	350:6:10483:10599	2302012	1	True				
ANR	2303325	CallExpression	"printf ( ""\\033&a%.0fV"" , 10.0 * ( ppd -> sizes [ 0 ] . length - ppd -> sizes [ 0 ] . top ) )"		2302012	0					
ANR	2303326	Callee	printf		2302012	0					
ANR	2303327	Identifier	printf		2302012	0					
ANR	2303328	ArgumentList	"""\\033&a%.0fV"""		2302012	1					
ANR	2303329	Argument	"""\\033&a%.0fV"""		2302012	0					
ANR	2303330	PrimaryExpression	"""\\033&a%.0fV"""		2302012	0					
ANR	2303331	Argument	10.0 * ( ppd -> sizes [ 0 ] . length - ppd -> sizes [ 0 ] . top )		2302012	1					
ANR	2303332	MultiplicativeExpression	10.0 * ( ppd -> sizes [ 0 ] . length - ppd -> sizes [ 0 ] . top )		2302012	0		*			
ANR	2303333	PrimaryExpression	10.0		2302012	0					
ANR	2303334	AdditiveExpression	ppd -> sizes [ 0 ] . length - ppd -> sizes [ 0 ] . top		2302012	1		-			
ANR	2303335	MemberAccess	ppd -> sizes [ 0 ] . length		2302012	0					
ANR	2303336	ArrayIndexing	ppd -> sizes [ 0 ]		2302012	0					
ANR	2303337	PtrMemberAccess	ppd -> sizes		2302012	0					
ANR	2303338	Identifier	ppd		2302012	0					
ANR	2303339	Identifier	sizes		2302012	1					
ANR	2303340	PrimaryExpression	0		2302012	1					
ANR	2303341	Identifier	length		2302012	1					
ANR	2303342	MemberAccess	ppd -> sizes [ 0 ] . top		2302012	1					
ANR	2303343	ArrayIndexing	ppd -> sizes [ 0 ]		2302012	0					
ANR	2303344	PtrMemberAccess	ppd -> sizes		2302012	0					
ANR	2303345	Identifier	ppd		2302012	0					
ANR	2303346	Identifier	sizes		2302012	1					
ANR	2303347	PrimaryExpression	0		2302012	1					
ANR	2303348	Identifier	top		2302012	1					
ANR	2303349	ElseStatement	else		2302012	0					
ANR	2303350	ExpressionStatement	"printf ( ""\\033&a0V"" )"	353:6:10616:10634	2302012	0	True				
ANR	2303351	CallExpression	"printf ( ""\\033&a0V"" )"		2302012	0					
ANR	2303352	Callee	printf		2302012	0					
ANR	2303353	Identifier	printf		2302012	0					
ANR	2303354	ArgumentList	"""\\033&a0V"""		2302012	1					
ANR	2303355	Argument	"""\\033&a0V"""		2302012	0					
ANR	2303356	PrimaryExpression	"""\\033&a0V"""		2302012	0					
ANR	2303357	ExpressionStatement	"printf ( ""\\033*r1A"" )"	356:2:10667:10685	2302012	45	True				
ANR	2303358	CallExpression	"printf ( ""\\033*r1A"" )"		2302012	0					
ANR	2303359	Callee	printf		2302012	0					
ANR	2303360	Identifier	printf		2302012	0					
ANR	2303361	ArgumentList	"""\\033*r1A"""		2302012	1					
ANR	2303362	Argument	"""\\033*r1A"""		2302012	0					
ANR	2303363	PrimaryExpression	"""\\033*r1A"""		2302012	0					
ANR	2303364	IfStatement	if ( header -> cupsCompression )		2302012	46					
ANR	2303365	Condition	header -> cupsCompression	358:6:10718:10740	2302012	0	True				
ANR	2303366	PtrMemberAccess	header -> cupsCompression		2302012	0					
ANR	2303367	Identifier	header		2302012	0					
ANR	2303368	Identifier	cupsCompression		2302012	1					
ANR	2303369	ExpressionStatement	"printf ( ""\\033*b%dM"" , header -> cupsCompression )"	359:4:10747:10827	2302012	1	True				
ANR	2303370	CallExpression	"printf ( ""\\033*b%dM"" , header -> cupsCompression )"		2302012	0					
ANR	2303371	Callee	printf		2302012	0					
ANR	2303372	Identifier	printf		2302012	0					
ANR	2303373	ArgumentList	"""\\033*b%dM"""		2302012	1					
ANR	2303374	Argument	"""\\033*b%dM"""		2302012	0					
ANR	2303375	PrimaryExpression	"""\\033*b%dM"""		2302012	0					
ANR	2303376	Argument	header -> cupsCompression		2302012	1					
ANR	2303377	PtrMemberAccess	header -> cupsCompression		2302012	0					
ANR	2303378	Identifier	header		2302012	0					
ANR	2303379	Identifier	cupsCompression		2302012	1					
ANR	2303380	ExpressionStatement	Feed = 0	362:2:10832:10840	2302012	47	True				
ANR	2303381	AssignmentExpression	Feed = 0		2302012	0		=			
ANR	2303382	Identifier	Feed		2302012	0					
ANR	2303383	PrimaryExpression	0		2302012	1					
ANR	2303384	IfStatement	if ( ( Planes [ 0 ] = malloc ( header -> cupsBytesPerLine ) ) == NULL )		2302012	48					
ANR	2303385	Condition	( Planes [ 0 ] = malloc ( header -> cupsBytesPerLine ) ) == NULL	368:6:10934:10987	2302012	0	True				
ANR	2303386	EqualityExpression	( Planes [ 0 ] = malloc ( header -> cupsBytesPerLine ) ) == NULL		2302012	0		==			
ANR	2303387	AssignmentExpression	Planes [ 0 ] = malloc ( header -> cupsBytesPerLine )		2302012	0		=			
ANR	2303388	ArrayIndexing	Planes [ 0 ]		2302012	0					
ANR	2303389	Identifier	Planes		2302012	0					
ANR	2303390	PrimaryExpression	0		2302012	1					
ANR	2303391	CallExpression	malloc ( header -> cupsBytesPerLine )		2302012	1					
ANR	2303392	Callee	malloc		2302012	0					
ANR	2303393	Identifier	malloc		2302012	0					
ANR	2303394	ArgumentList	header -> cupsBytesPerLine		2302012	1					
ANR	2303395	Argument	header -> cupsBytesPerLine		2302012	0					
ANR	2303396	PtrMemberAccess	header -> cupsBytesPerLine		2302012	0					
ANR	2303397	Identifier	header		2302012	0					
ANR	2303398	Identifier	cupsBytesPerLine		2302012	1					
ANR	2303399	Identifier	NULL		2302012	1					
ANR	2303400	CompoundStatement		275:2:8627:8627	2302012	1					
ANR	2303401	ExpressionStatement	"fputs ( ""ERROR: Unable to allocate memory\\n"" , stderr )"	370:4:10998:11049	2302012	0	True				
ANR	2303402	CallExpression	"fputs ( ""ERROR: Unable to allocate memory\\n"" , stderr )"		2302012	0					
ANR	2303403	Callee	fputs		2302012	0					
ANR	2303404	Identifier	fputs		2302012	0					
ANR	2303405	ArgumentList	"""ERROR: Unable to allocate memory\\n"""		2302012	1					
ANR	2303406	Argument	"""ERROR: Unable to allocate memory\\n"""		2302012	0					
ANR	2303407	PrimaryExpression	"""ERROR: Unable to allocate memory\\n"""		2302012	0					
ANR	2303408	Argument	stderr		2302012	1					
ANR	2303409	Identifier	stderr		2302012	0					
ANR	2303410	ExpressionStatement	exit ( 1 )	371:4:11055:11062	2302012	1	True				
ANR	2303411	CallExpression	exit ( 1 )		2302012	0					
ANR	2303412	Callee	exit		2302012	0					
ANR	2303413	Identifier	exit		2302012	0					
ANR	2303414	ArgumentList	1		2302012	1					
ANR	2303415	Argument	1		2302012	0					
ANR	2303416	PrimaryExpression	1		2302012	0					
ANR	2303417	ForStatement	for ( plane = 1 ; plane < NumPlanes ; plane ++ )		2302012	49					
ANR	2303418	ForInit	plane = 1 ;	374:7:11076:11085	2302012	0	True				
ANR	2303419	AssignmentExpression	plane = 1		2302012	0		=			
ANR	2303420	Identifier	plane		2302012	0					
ANR	2303421	PrimaryExpression	1		2302012	1					
ANR	2303422	Condition	plane < NumPlanes	374:18:11087:11103	2302012	1	True				
ANR	2303423	RelationalExpression	plane < NumPlanes		2302012	0		<			
ANR	2303424	Identifier	plane		2302012	0					
ANR	2303425	Identifier	NumPlanes		2302012	1					
ANR	2303426	PostIncDecOperationExpression	plane ++	374:37:11106:11113	2302012	2	True				
ANR	2303427	Identifier	plane		2302012	0					
ANR	2303428	IncDec	++		2302012	1					
ANR	2303429	ExpressionStatement	Planes [ plane ] = Planes [ 0 ] + plane * header -> cupsBytesPerLine / NumPlanes	375:4:11120:11192	2302012	3	True				
ANR	2303430	AssignmentExpression	Planes [ plane ] = Planes [ 0 ] + plane * header -> cupsBytesPerLine / NumPlanes		2302012	0		=			
ANR	2303431	ArrayIndexing	Planes [ plane ]		2302012	0					
ANR	2303432	Identifier	Planes		2302012	0					
ANR	2303433	Identifier	plane		2302012	1					
ANR	2303434	AdditiveExpression	Planes [ 0 ] + plane * header -> cupsBytesPerLine / NumPlanes		2302012	1		+			
ANR	2303435	ArrayIndexing	Planes [ 0 ]		2302012	0					
ANR	2303436	Identifier	Planes		2302012	0					
ANR	2303437	PrimaryExpression	0		2302012	1					
ANR	2303438	MultiplicativeExpression	plane * header -> cupsBytesPerLine / NumPlanes		2302012	1		*			
ANR	2303439	Identifier	plane		2302012	0					
ANR	2303440	MultiplicativeExpression	header -> cupsBytesPerLine / NumPlanes		2302012	1		/			
ANR	2303441	PtrMemberAccess	header -> cupsBytesPerLine		2302012	0					
ANR	2303442	Identifier	header		2302012	0					
ANR	2303443	Identifier	cupsBytesPerLine		2302012	1					
ANR	2303444	Identifier	NumPlanes		2302012	1					
ANR	2303445	IfStatement	if ( ColorBits > 1 )		2302012	50					
ANR	2303446	Condition	ColorBits > 1	377:6:11201:11213	2302012	0	True				
ANR	2303447	RelationalExpression	ColorBits > 1		2302012	0		>			
ANR	2303448	Identifier	ColorBits		2302012	0					
ANR	2303449	PrimaryExpression	1		2302012	1					
ANR	2303450	ExpressionStatement	BitBuffer = malloc ( ColorBits * ( ( header -> cupsWidth + 7 ) / 8 ) )	378:4:11220:11281	2302012	1	True				
ANR	2303451	AssignmentExpression	BitBuffer = malloc ( ColorBits * ( ( header -> cupsWidth + 7 ) / 8 ) )		2302012	0		=			
ANR	2303452	Identifier	BitBuffer		2302012	0					
ANR	2303453	CallExpression	malloc ( ColorBits * ( ( header -> cupsWidth + 7 ) / 8 ) )		2302012	1					
ANR	2303454	Callee	malloc		2302012	0					
ANR	2303455	Identifier	malloc		2302012	0					
ANR	2303456	ArgumentList	ColorBits * ( ( header -> cupsWidth + 7 ) / 8 )		2302012	1					
ANR	2303457	Argument	ColorBits * ( ( header -> cupsWidth + 7 ) / 8 )		2302012	0					
ANR	2303458	MultiplicativeExpression	ColorBits * ( ( header -> cupsWidth + 7 ) / 8 )		2302012	0		*			
ANR	2303459	Identifier	ColorBits		2302012	0					
ANR	2303460	MultiplicativeExpression	( header -> cupsWidth + 7 ) / 8		2302012	1		/			
ANR	2303461	AdditiveExpression	header -> cupsWidth + 7		2302012	0		+			
ANR	2303462	PtrMemberAccess	header -> cupsWidth		2302012	0					
ANR	2303463	Identifier	header		2302012	0					
ANR	2303464	Identifier	cupsWidth		2302012	1					
ANR	2303465	PrimaryExpression	7		2302012	1					
ANR	2303466	PrimaryExpression	8		2302012	1					
ANR	2303467	ElseStatement	else		2302012	0					
ANR	2303468	ExpressionStatement	BitBuffer = NULL	380:4:11294:11310	2302012	0	True				
ANR	2303469	AssignmentExpression	BitBuffer = NULL		2302012	0		=			
ANR	2303470	Identifier	BitBuffer		2302012	0					
ANR	2303471	Identifier	NULL		2302012	1					
ANR	2303472	IfStatement	if ( header -> cupsCompression )		2302012	51					
ANR	2303473	Condition	header -> cupsCompression	382:6:11319:11341	2302012	0	True				
ANR	2303474	PtrMemberAccess	header -> cupsCompression		2302012	0					
ANR	2303475	Identifier	header		2302012	0					
ANR	2303476	Identifier	cupsCompression		2302012	1					
ANR	2303477	ExpressionStatement	CompBuffer = malloc ( header -> cupsBytesPerLine * 2 )	383:4:11348:11397	2302012	1	True				
ANR	2303478	AssignmentExpression	CompBuffer = malloc ( header -> cupsBytesPerLine * 2 )		2302012	0		=			
ANR	2303479	Identifier	CompBuffer		2302012	0					
ANR	2303480	CallExpression	malloc ( header -> cupsBytesPerLine * 2 )		2302012	1					
ANR	2303481	Callee	malloc		2302012	0					
ANR	2303482	Identifier	malloc		2302012	0					
ANR	2303483	ArgumentList	header -> cupsBytesPerLine * 2		2302012	1					
ANR	2303484	Argument	header -> cupsBytesPerLine * 2		2302012	0					
ANR	2303485	MultiplicativeExpression	header -> cupsBytesPerLine * 2		2302012	0		*			
ANR	2303486	PtrMemberAccess	header -> cupsBytesPerLine		2302012	0					
ANR	2303487	Identifier	header		2302012	0					
ANR	2303488	Identifier	cupsBytesPerLine		2302012	1					
ANR	2303489	PrimaryExpression	2		2302012	1					
ANR	2303490	ElseStatement	else		2302012	0					
ANR	2303491	ExpressionStatement	CompBuffer = NULL	385:4:11410:11427	2302012	0	True				
ANR	2303492	AssignmentExpression	CompBuffer = NULL		2302012	0		=			
ANR	2303493	Identifier	CompBuffer		2302012	0					
ANR	2303494	Identifier	NULL		2302012	1					
ANR	2303495	ReturnType	void		2302012	1					
ANR	2303496	Identifier	StartPage		2302012	2					
ANR	2303497	ParameterList	"ppd_file_t * ppd , cups_page_header2_t * header"		2302012	3					
ANR	2303498	Parameter	ppd_file_t * ppd	93:10:2259:2281	2302012	0	True				
ANR	2303499	ParameterType	ppd_file_t *		2302012	0					
ANR	2303500	Identifier	ppd		2302012	1					
ANR	2303501	Parameter	cups_page_header2_t * header	94:10:2313:2339	2302012	1	True				
ANR	2303502	ParameterType	cups_page_header2_t *		2302012	0					
ANR	2303503	Identifier	header		2302012	1					
ANR	2303504	CFGEntryNode	ENTRY		2302012		True				
ANR	2303505	CFGExitNode	EXIT		2302012		True				
ANR	2303506	Symbol	plane		2302012						
ANR	2303507	Symbol	header -> MediaType		2302012						
ANR	2303508	Symbol	Page		2302012						
ANR	2303509	Symbol	header -> cupsHeight		2302012						
ANR	2303510	Symbol	header -> MediaClass		2302012						
ANR	2303511	Symbol	* ppd		2302012						
ANR	2303512	Symbol	header -> Separations		2302012						
ANR	2303513	Symbol	ppd -> model_number		2302012						
ANR	2303514	Symbol	mode		2302012						
ANR	2303515	Symbol	header -> NegativePrint		2302012						
ANR	2303516	Symbol	header -> Tumble		2302012						
ANR	2303517	Symbol	Planes		2302012						
ANR	2303518	Symbol	ColorBits		2302012						
ANR	2303519	Symbol	* ppd -> sizes		2302012						
ANR	2303520	Symbol	BitBuffer		2302012						
ANR	2303521	Symbol	Feed		2302012						
ANR	2303522	Symbol	header -> Collate		2302012						
ANR	2303523	Symbol	CUPS_CSPACE_KCMY		2302012						
ANR	2303524	Symbol	NULL		2302012						
ANR	2303525	Symbol	header -> cupsWidth		2302012						
ANR	2303526	Symbol	stderr		2302012						
ANR	2303527	Symbol	* header		2302012						
ANR	2303528	Symbol	header -> cupsCompression		2302012						
ANR	2303529	Symbol	* Planes		2302012						
ANR	2303530	Symbol	* header -> Margins		2302012						
ANR	2303531	Symbol	* * ppd		2302012						
ANR	2303532	Symbol	header		2302012						
ANR	2303533	Symbol	header -> CutMedia		2302012						
ANR	2303534	Symbol	header -> OutputFaceUp		2302012						
ANR	2303535	Symbol	header -> PageSize		2302012						
ANR	2303536	Symbol	header -> cupsBitsPerColor		2302012						
ANR	2303537	Symbol	ppd -> sizes [ 0 ] . length		2302012						
ANR	2303538	Symbol	header -> cupsMediaType		2302012						
ANR	2303539	Symbol	header -> AdvanceDistance		2302012						
ANR	2303540	Symbol	header -> MediaPosition		2302012						
ANR	2303541	Symbol	* header -> ImagingBoundingBox		2302012						
ANR	2303542	Symbol	header -> MediaWeight		2302012						
ANR	2303543	Symbol	header -> LeadingEdge		2302012						
ANR	2303544	Symbol	* header -> PageSize		2302012						
ANR	2303545	Symbol	header -> Orientation		2302012						
ANR	2303546	Symbol	Duplex		2302012						
ANR	2303547	Symbol	header -> HWResolution		2302012						
ANR	2303548	Symbol	header -> NumCopies		2302012						
ANR	2303549	Symbol	header -> cupsBitsPerPixel		2302012						
ANR	2303550	Symbol	ppd -> sizes [ 0 ] . top		2302012						
ANR	2303551	Symbol	header -> cupsBytesPerLine		2302012						
ANR	2303552	Symbol	* plane		2302012						
ANR	2303553	Symbol	header -> Jog		2302012						
ANR	2303554	Symbol	malloc		2302012						
ANR	2303555	Symbol	ppd -> sizes		2302012						
ANR	2303556	Symbol	ppd		2302012						
ANR	2303557	Symbol	header -> MediaColor		2302012						
ANR	2303558	Symbol	header -> cupsColorSpace		2302012						
ANR	2303559	Symbol	header -> cupsColorOrder		2302012						
ANR	2303560	Symbol	header -> TraySwitch		2302012						
ANR	2303561	Symbol	header -> OutputType		2302012						
ANR	2303562	Symbol	header -> MirrorPrint		2302012						
ANR	2303563	Symbol	header -> AdvanceMedia		2302012						
ANR	2303564	Symbol	NumPlanes		2302012						
ANR	2303565	Symbol	CompBuffer		2302012						
ANR	2303566	Symbol	header -> Duplex		2302012						
ANR	2303567	Symbol	* * header		2302012						
ANR	2303568	Symbol	* header -> HWResolution		2302012						
ANR	2303569	Symbol	header -> ManualFeed		2302012						
ANR	2303570	Symbol	header -> ImagingBoundingBox		2302012						
ANR	2303571	Symbol	header -> InsertSheet		2302012						
ANR	2303572	Symbol	header -> Margins		2302012						
ANR	2303573	Symbol	CUPS_CSPACE_CMY		2302012						
ANR	2303574	Function	EndPage	393:0:11485:11997							
ANR	2303575	FunctionDef	EndPage ()		2303574	0					
ANR	2303576	CompoundStatement		395:0:11504:11997	2303574	0					
ANR	2303577	IfStatement	if ( NumPlanes > 1 )		2303574	0					
ANR	2303578	Condition	NumPlanes > 1	400:6:11552:11564	2303574	0	True				
ANR	2303579	RelationalExpression	NumPlanes > 1		2303574	0		>			
ANR	2303580	Identifier	NumPlanes		2303574	0					
ANR	2303581	PrimaryExpression	1		2303574	1					
ANR	2303582	CompoundStatement		7:2:64:64	2303574	1					
ANR	2303583	ExpressionStatement	"printf ( ""\\033*rC"" )"	402:5:11576:11593	2303574	0	True				
ANR	2303584	CallExpression	"printf ( ""\\033*rC"" )"		2303574	0					
ANR	2303585	Callee	printf		2303574	0					
ANR	2303586	Identifier	printf		2303574	0					
ANR	2303587	ArgumentList	"""\\033*rC"""		2303574	1					
ANR	2303588	Argument	"""\\033*rC"""		2303574	0					
ANR	2303589	PrimaryExpression	"""\\033*rC"""		2303574	0					
ANR	2303590	IfStatement	if ( ! ( Duplex && ( Page & 1 ) ) )		2303574	1					
ANR	2303591	Condition	! ( Duplex && ( Page & 1 ) )	404:9:11627:11649	2303574	0	True				
ANR	2303592	UnaryOperationExpression	! ( Duplex && ( Page & 1 ) )		2303574	0					
ANR	2303593	UnaryOperator	!		2303574	0					
ANR	2303594	AndExpression	Duplex && ( Page & 1 )		2303574	1		&&			
ANR	2303595	Identifier	Duplex		2303574	0					
ANR	2303596	BitAndExpression	Page & 1		2303574	1		&			
ANR	2303597	Identifier	Page		2303574	0					
ANR	2303598	PrimaryExpression	1		2303574	1					
ANR	2303599	ExpressionStatement	"printf ( ""\\033&l0H"" )"	405:7:11659:11677	2303574	1	True				
ANR	2303600	CallExpression	"printf ( ""\\033&l0H"" )"		2303574	0					
ANR	2303601	Callee	printf		2303574	0					
ANR	2303602	Identifier	printf		2303574	0					
ANR	2303603	ArgumentList	"""\\033&l0H"""		2303574	1					
ANR	2303604	Argument	"""\\033&l0H"""		2303574	0					
ANR	2303605	PrimaryExpression	"""\\033&l0H"""		2303574	0					
ANR	2303606	ElseStatement	else		2303574	0					
ANR	2303607	CompoundStatement		14:2:213:213	2303574	0					
ANR	2303608	ExpressionStatement	"printf ( ""\\033*r0B"" )"	409:5:11725:11743	2303574	0	True				
ANR	2303609	CallExpression	"printf ( ""\\033*r0B"" )"		2303574	0					
ANR	2303610	Callee	printf		2303574	0					
ANR	2303611	Identifier	printf		2303574	0					
ANR	2303612	ArgumentList	"""\\033*r0B"""		2303574	1					
ANR	2303613	Argument	"""\\033*r0B"""		2303574	0					
ANR	2303614	PrimaryExpression	"""\\033*r0B"""		2303574	0					
ANR	2303615	IfStatement	if ( ! ( Duplex && ( Page & 1 ) ) )		2303574	1					
ANR	2303616	Condition	! ( Duplex && ( Page & 1 ) )	411:9:11770:11792	2303574	0	True				
ANR	2303617	UnaryOperationExpression	! ( Duplex && ( Page & 1 ) )		2303574	0					
ANR	2303618	UnaryOperator	!		2303574	0					
ANR	2303619	AndExpression	Duplex && ( Page & 1 )		2303574	1		&&			
ANR	2303620	Identifier	Duplex		2303574	0					
ANR	2303621	BitAndExpression	Page & 1		2303574	1		&			
ANR	2303622	Identifier	Page		2303574	0					
ANR	2303623	PrimaryExpression	1		2303574	1					
ANR	2303624	ExpressionStatement	"printf ( ""\\014"" )"	412:7:11802:11816	2303574	1	True				
ANR	2303625	CallExpression	"printf ( ""\\014"" )"		2303574	0					
ANR	2303626	Callee	printf		2303574	0					
ANR	2303627	Identifier	printf		2303574	0					
ANR	2303628	ArgumentList	"""\\014"""		2303574	1					
ANR	2303629	Argument	"""\\014"""		2303574	0					
ANR	2303630	PrimaryExpression	"""\\014"""		2303574	0					
ANR	2303631	ExpressionStatement	fflush ( stdout )	415:2:11852:11866	2303574	1	True				
ANR	2303632	CallExpression	fflush ( stdout )		2303574	0					
ANR	2303633	Callee	fflush		2303574	0					
ANR	2303634	Identifier	fflush		2303574	0					
ANR	2303635	ArgumentList	stdout		2303574	1					
ANR	2303636	Argument	stdout		2303574	0					
ANR	2303637	Identifier	stdout		2303574	0					
ANR	2303638	ExpressionStatement	free ( Planes [ 0 ] )	421:2:11900:11915	2303574	2	True				
ANR	2303639	CallExpression	free ( Planes [ 0 ] )		2303574	0					
ANR	2303640	Callee	free		2303574	0					
ANR	2303641	Identifier	free		2303574	0					
ANR	2303642	ArgumentList	Planes [ 0 ]		2303574	1					
ANR	2303643	Argument	Planes [ 0 ]		2303574	0					
ANR	2303644	ArrayIndexing	Planes [ 0 ]		2303574	0					
ANR	2303645	Identifier	Planes		2303574	0					
ANR	2303646	PrimaryExpression	0		2303574	1					
ANR	2303647	IfStatement	if ( BitBuffer )		2303574	3					
ANR	2303648	Condition	BitBuffer	423:6:11924:11932	2303574	0	True				
ANR	2303649	Identifier	BitBuffer		2303574	0					
ANR	2303650	ExpressionStatement	free ( BitBuffer )	424:4:11939:11954	2303574	1	True				
ANR	2303651	CallExpression	free ( BitBuffer )		2303574	0					
ANR	2303652	Callee	free		2303574	0					
ANR	2303653	Identifier	free		2303574	0					
ANR	2303654	ArgumentList	BitBuffer		2303574	1					
ANR	2303655	Argument	BitBuffer		2303574	0					
ANR	2303656	Identifier	BitBuffer		2303574	0					
ANR	2303657	IfStatement	if ( CompBuffer )		2303574	4					
ANR	2303658	Condition	CompBuffer	426:6:11963:11972	2303574	0	True				
ANR	2303659	Identifier	CompBuffer		2303574	0					
ANR	2303660	ExpressionStatement	free ( CompBuffer )	427:4:11979:11995	2303574	1	True				
ANR	2303661	CallExpression	free ( CompBuffer )		2303574	0					
ANR	2303662	Callee	free		2303574	0					
ANR	2303663	Identifier	free		2303574	0					
ANR	2303664	ArgumentList	CompBuffer		2303574	1					
ANR	2303665	Argument	CompBuffer		2303574	0					
ANR	2303666	Identifier	CompBuffer		2303574	0					
ANR	2303667	ReturnType	void		2303574	1					
ANR	2303668	Identifier	EndPage		2303574	2					
ANR	2303669	ParameterList			2303574	3					
ANR	2303670	CFGEntryNode	ENTRY		2303574		True				
ANR	2303671	CFGExitNode	EXIT		2303574		True				
ANR	2303672	Symbol	NumPlanes		2303574						
ANR	2303673	Symbol	CompBuffer		2303574						
ANR	2303674	Symbol	* Planes		2303574						
ANR	2303675	Symbol	stdout		2303574						
ANR	2303676	Symbol	Planes		2303574						
ANR	2303677	Symbol	Page		2303574						
ANR	2303678	Symbol	Duplex		2303574						
ANR	2303679	Symbol	BitBuffer		2303574						
ANR	2303680	Function	Shutdown	435:0:12049:12145							
ANR	2303681	FunctionDef	Shutdown ()		2303680	0					
ANR	2303682	CompoundStatement		437:0:12069:12145	2303680	0					
ANR	2303683	ExpressionStatement	putchar ( 0x1b )	442:2:12114:12127	2303680	0	True				
ANR	2303684	CallExpression	putchar ( 0x1b )		2303680	0					
ANR	2303685	Callee	putchar		2303680	0					
ANR	2303686	Identifier	putchar		2303680	0					
ANR	2303687	ArgumentList	0x1b		2303680	1					
ANR	2303688	Argument	0x1b		2303680	0					
ANR	2303689	PrimaryExpression	0x1b		2303680	0					
ANR	2303690	ExpressionStatement	putchar ( 'E' )	443:2:12131:12143	2303680	1	True				
ANR	2303691	CallExpression	putchar ( 'E' )		2303680	0					
ANR	2303692	Callee	putchar		2303680	0					
ANR	2303693	Identifier	putchar		2303680	0					
ANR	2303694	ArgumentList	'E'		2303680	1					
ANR	2303695	Argument	'E'		2303680	0					
ANR	2303696	PrimaryExpression	'E'		2303680	0					
ANR	2303697	ReturnType	void		2303680	1					
ANR	2303698	Identifier	Shutdown		2303680	2					
ANR	2303699	ParameterList			2303680	3					
ANR	2303700	CFGEntryNode	ENTRY		2303680		True				
ANR	2303701	CFGExitNode	EXIT		2303680		True				
ANR	2303702	Function	CancelJob	451:0:12202:12277							
ANR	2303703	FunctionDef	CancelJob (int sig)		2303702	0					
ANR	2303704	CompoundStatement		453:0:12245:12277	2303702	0					
ANR	2303705	ExpressionStatement	( void ) sig	454:2:12249:12258	2303702	0	True				
ANR	2303706	CastExpression	( void ) sig		2303702	0					
ANR	2303707	CastTarget	void		2303702	0					
ANR	2303708	Identifier	sig		2303702	1					
ANR	2303709	ExpressionStatement	Canceled = 1	456:2:12263:12275	2303702	1	True				
ANR	2303710	AssignmentExpression	Canceled = 1		2303702	0		=			
ANR	2303711	Identifier	Canceled		2303702	0					
ANR	2303712	PrimaryExpression	1		2303702	1					
ANR	2303713	ReturnType	void		2303702	1					
ANR	2303714	Identifier	CancelJob		2303702	2					
ANR	2303715	ParameterList	int sig		2303702	3					
ANR	2303716	Parameter	int sig	452:10:12217:12223	2303702	0	True				
ANR	2303717	ParameterType	int		2303702	0					
ANR	2303718	Identifier	sig		2303702	1					
ANR	2303719	CFGEntryNode	ENTRY		2303702		True				
ANR	2303720	CFGExitNode	EXIT		2303702		True				
ANR	2303721	Symbol	sig		2303702						
ANR	2303722	Symbol	Canceled		2303702						
ANR	2303723	Function	CompressData	464:0:12340:14839							
ANR	2303724	FunctionDef	"CompressData (unsigned char * line , int length , int plane , int type)"		2303723	0					
ANR	2303725	CompoundStatement		469:0:12572:14839	2303723	0					
ANR	2303726	IdentifierDeclStatement	"unsigned char * line_ptr , * line_end , * comp_ptr , * start ;"	470:2:12576:12755	2303723	0	True				
ANR	2303727	IdentifierDecl	* line_ptr		2303723	0					
ANR	2303728	IdentifierDeclType	unsigned char *		2303723	0					
ANR	2303729	Identifier	line_ptr		2303723	1					
ANR	2303730	IdentifierDecl	* line_end		2303723	1					
ANR	2303731	IdentifierDeclType	unsigned char *		2303723	0					
ANR	2303732	Identifier	line_end		2303723	1					
ANR	2303733	IdentifierDecl	* comp_ptr		2303723	2					
ANR	2303734	IdentifierDeclType	unsigned char *		2303723	0					
ANR	2303735	Identifier	comp_ptr		2303723	1					
ANR	2303736	IdentifierDecl	* start		2303723	3					
ANR	2303737	IdentifierDeclType	unsigned char *		2303723	0					
ANR	2303738	Identifier	start		2303723	1					
ANR	2303739	IdentifierDeclStatement	int count ;	474:2:12797:12816	2303723	1	True				
ANR	2303740	IdentifierDecl	count		2303723	0					
ANR	2303741	IdentifierDeclType	int		2303723	0					
ANR	2303742	Identifier	count		2303723	1					
ANR	2303743	SwitchStatement	switch ( type )		2303723	2					
ANR	2303744	Condition	type	477:10:12864:12867	2303723	0	True				
ANR	2303745	Identifier	type		2303723	0					
ANR	2303746	CompoundStatement		10:2:299:299	2303723	1					
ANR	2303747	Label	default :	479:4:12878:12886	2303723	0	True				
ANR	2303748	Identifier	default		2303723	0					
ANR	2303749	ExpressionStatement	line_ptr = line	484:1:12928:12943	2303723	1	True				
ANR	2303750	AssignmentExpression	line_ptr = line		2303723	0		=			
ANR	2303751	Identifier	line_ptr		2303723	0					
ANR	2303752	Identifier	line		2303723	1					
ANR	2303753	ExpressionStatement	line_end = line + length	485:1:12946:12970	2303723	2	True				
ANR	2303754	AssignmentExpression	line_end = line + length		2303723	0		=			
ANR	2303755	Identifier	line_end		2303723	0					
ANR	2303756	AdditiveExpression	line + length		2303723	1		+			
ANR	2303757	Identifier	line		2303723	0					
ANR	2303758	Identifier	length		2303723	1					
ANR	2303759	BreakStatement	break ;	486:1:12973:12978	2303723	3	True				
ANR	2303760	Label	case 1 :	488:4:12985:12992	2303723	4	True				
ANR	2303761	ExpressionStatement	line_end = line + length	493:1:13053:13077	2303723	5	True				
ANR	2303762	AssignmentExpression	line_end = line + length		2303723	0		=			
ANR	2303763	Identifier	line_end		2303723	0					
ANR	2303764	AdditiveExpression	line + length		2303723	1		+			
ANR	2303765	Identifier	line		2303723	0					
ANR	2303766	Identifier	length		2303723	1					
ANR	2303767	ForStatement	"for ( line_ptr = line , comp_ptr = CompBuffer ; line_ptr < line_end ; comp_ptr += 2 , line_ptr += count )"		2303723	6					
ANR	2303768	ForInit	"line_ptr = line , comp_ptr = CompBuffer ;"	494:6:13085:13123	2303723	0	True				
ANR	2303769	Expression	"line_ptr = line , comp_ptr = CompBuffer"		2303723	0					
ANR	2303770	AssignmentExpression	line_ptr = line		2303723	0		=			
ANR	2303771	Identifier	line_ptr		2303723	0					
ANR	2303772	Identifier	line		2303723	1					
ANR	2303773	AssignmentExpression	comp_ptr = CompBuffer		2303723	1		=			
ANR	2303774	Identifier	comp_ptr		2303723	0					
ANR	2303775	Identifier	CompBuffer		2303723	1					
ANR	2303776	Condition	line_ptr < line_end	495:6:13131:13149	2303723	1	True				
ANR	2303777	RelationalExpression	line_ptr < line_end		2303723	0		<			
ANR	2303778	Identifier	line_ptr		2303723	0					
ANR	2303779	Identifier	line_end		2303723	1					
ANR	2303780	Expression	"comp_ptr += 2 , line_ptr += count"	496:6:13158:13189	2303723	2	True				
ANR	2303781	AssignmentExpression	comp_ptr += 2		2303723	0		+=			
ANR	2303782	Identifier	comp_ptr		2303723	0					
ANR	2303783	PrimaryExpression	2		2303723	1					
ANR	2303784	AssignmentExpression	line_ptr += count		2303723	1		+=			
ANR	2303785	Identifier	line_ptr		2303723	0					
ANR	2303786	Identifier	count		2303723	1					
ANR	2303787	CompoundStatement		29:1:620:620	2303723	3					
ANR	2303788	ForStatement	for ( count = 1 ; ( line_ptr + count ) < line_end && line_ptr [ 0 ] == line_ptr [ count ] && count < 256 ; count ++ )		2303723	0					
ANR	2303789	ForInit	count = 1 ;	498:8:13203:13212	2303723	0	True				
ANR	2303790	AssignmentExpression	count = 1		2303723	0		=			
ANR	2303791	Identifier	count		2303723	0					
ANR	2303792	PrimaryExpression	1		2303723	1					
ANR	2303793	Condition	( line_ptr + count ) < line_end && line_ptr [ 0 ] == line_ptr [ count ] && count < 256	499:15:13229:13330	2303723	1	True				
ANR	2303794	AndExpression	( line_ptr + count ) < line_end && line_ptr [ 0 ] == line_ptr [ count ] && count < 256		2303723	0		&&			
ANR	2303795	RelationalExpression	( line_ptr + count ) < line_end		2303723	0		<			
ANR	2303796	AdditiveExpression	line_ptr + count		2303723	0		+			
ANR	2303797	Identifier	line_ptr		2303723	0					
ANR	2303798	Identifier	count		2303723	1					
ANR	2303799	Identifier	line_end		2303723	1					
ANR	2303800	AndExpression	line_ptr [ 0 ] == line_ptr [ count ] && count < 256		2303723	1		&&			
ANR	2303801	EqualityExpression	line_ptr [ 0 ] == line_ptr [ count ]		2303723	0		==			
ANR	2303802	ArrayIndexing	line_ptr [ 0 ]		2303723	0					
ANR	2303803	Identifier	line_ptr		2303723	0					
ANR	2303804	PrimaryExpression	0		2303723	1					
ANR	2303805	ArrayIndexing	line_ptr [ count ]		2303723	1					
ANR	2303806	Identifier	line_ptr		2303723	0					
ANR	2303807	Identifier	count		2303723	1					
ANR	2303808	RelationalExpression	count < 256		2303723	1		<			
ANR	2303809	Identifier	count		2303723	0					
ANR	2303810	PrimaryExpression	256		2303723	1					
ANR	2303811	PostIncDecOperationExpression	count ++	502:15:13348:13355	2303723	2	True				
ANR	2303812	Identifier	count		2303723	0					
ANR	2303813	IncDec	++		2303723	1					
ANR	2303814	ExpressionStatement		502:24:13357:13357	2303723	3	True				
ANR	2303815	ExpressionStatement	comp_ptr [ 0 ] = count - 1	504:3:13363:13386	2303723	1	True				
ANR	2303816	AssignmentExpression	comp_ptr [ 0 ] = count - 1		2303723	0		=			
ANR	2303817	ArrayIndexing	comp_ptr [ 0 ]		2303723	0					
ANR	2303818	Identifier	comp_ptr		2303723	0					
ANR	2303819	PrimaryExpression	0		2303723	1					
ANR	2303820	AdditiveExpression	count - 1		2303723	1		-			
ANR	2303821	Identifier	count		2303723	0					
ANR	2303822	PrimaryExpression	1		2303723	1					
ANR	2303823	ExpressionStatement	comp_ptr [ 1 ] = line_ptr [ 0 ]	505:3:13391:13416	2303723	2	True				
ANR	2303824	AssignmentExpression	comp_ptr [ 1 ] = line_ptr [ 0 ]		2303723	0		=			
ANR	2303825	ArrayIndexing	comp_ptr [ 1 ]		2303723	0					
ANR	2303826	Identifier	comp_ptr		2303723	0					
ANR	2303827	PrimaryExpression	1		2303723	1					
ANR	2303828	ArrayIndexing	line_ptr [ 0 ]		2303723	1					
ANR	2303829	Identifier	line_ptr		2303723	0					
ANR	2303830	PrimaryExpression	0		2303723	1					
ANR	2303831	ExpressionStatement	line_ptr = CompBuffer	508:8:13430:13451	2303723	7	True				
ANR	2303832	AssignmentExpression	line_ptr = CompBuffer		2303723	0		=			
ANR	2303833	Identifier	line_ptr		2303723	0					
ANR	2303834	Identifier	CompBuffer		2303723	1					
ANR	2303835	ExpressionStatement	line_end = comp_ptr	509:8:13461:13480	2303723	8	True				
ANR	2303836	AssignmentExpression	line_end = comp_ptr		2303723	0		=			
ANR	2303837	Identifier	line_end		2303723	0					
ANR	2303838	Identifier	comp_ptr		2303723	1					
ANR	2303839	BreakStatement	break ;	510:1:13483:13488	2303723	9	True				
ANR	2303840	Label	case 2 :	512:4:13495:13502	2303723	10	True				
ANR	2303841	ExpressionStatement	line_ptr = line	517:1:13567:13582	2303723	11	True				
ANR	2303842	AssignmentExpression	line_ptr = line		2303723	0		=			
ANR	2303843	Identifier	line_ptr		2303723	0					
ANR	2303844	Identifier	line		2303723	1					
ANR	2303845	ExpressionStatement	line_end = line + length	518:1:13585:13609	2303723	12	True				
ANR	2303846	AssignmentExpression	line_end = line + length		2303723	0		=			
ANR	2303847	Identifier	line_end		2303723	0					
ANR	2303848	AdditiveExpression	line + length		2303723	1		+			
ANR	2303849	Identifier	line		2303723	0					
ANR	2303850	Identifier	length		2303723	1					
ANR	2303851	ExpressionStatement	comp_ptr = CompBuffer	519:1:13612:13633	2303723	13	True				
ANR	2303852	AssignmentExpression	comp_ptr = CompBuffer		2303723	0		=			
ANR	2303853	Identifier	comp_ptr		2303723	0					
ANR	2303854	Identifier	CompBuffer		2303723	1					
ANR	2303855	WhileStatement	while ( line_ptr < line_end )		2303723	14					
ANR	2303856	Condition	line_ptr < line_end	521:8:13644:13662	2303723	0	True				
ANR	2303857	RelationalExpression	line_ptr < line_end		2303723	0		<			
ANR	2303858	Identifier	line_ptr		2303723	0					
ANR	2303859	Identifier	line_end		2303723	1					
ANR	2303860	CompoundStatement		54:1:1093:1093	2303723	1					
ANR	2303861	IfStatement	if ( ( line_ptr + 1 ) >= line_end )		2303723	0					
ANR	2303862	Condition	( line_ptr + 1 ) >= line_end	523:7:13675:13700	2303723	0	True				
ANR	2303863	RelationalExpression	( line_ptr + 1 ) >= line_end		2303723	0		>=			
ANR	2303864	AdditiveExpression	line_ptr + 1		2303723	0		+			
ANR	2303865	Identifier	line_ptr		2303723	0					
ANR	2303866	PrimaryExpression	1		2303723	1					
ANR	2303867	Identifier	line_end		2303723	1					
ANR	2303868	CompoundStatement		56:3:1133:1133	2303723	1					
ANR	2303869	ExpressionStatement	* comp_ptr ++ = 0x00	529:5:13762:13780	2303723	0	True				
ANR	2303870	AssignmentExpression	* comp_ptr ++ = 0x00		2303723	0		=			
ANR	2303871	UnaryOperationExpression	* comp_ptr ++		2303723	0					
ANR	2303872	UnaryOperator	*		2303723	0					
ANR	2303873	PostIncDecOperationExpression	comp_ptr ++		2303723	1					
ANR	2303874	Identifier	comp_ptr		2303723	0					
ANR	2303875	IncDec	++		2303723	1					
ANR	2303876	PrimaryExpression	0x00		2303723	1					
ANR	2303877	ExpressionStatement	* comp_ptr ++ = * line_ptr ++	530:5:13787:13812	2303723	1	True				
ANR	2303878	AssignmentExpression	* comp_ptr ++ = * line_ptr ++		2303723	0		=			
ANR	2303879	UnaryOperationExpression	* comp_ptr ++		2303723	0					
ANR	2303880	UnaryOperator	*		2303723	0					
ANR	2303881	PostIncDecOperationExpression	comp_ptr ++		2303723	1					
ANR	2303882	Identifier	comp_ptr		2303723	0					
ANR	2303883	IncDec	++		2303723	1					
ANR	2303884	UnaryOperationExpression	* line_ptr ++		2303723	1					
ANR	2303885	UnaryOperator	*		2303723	0					
ANR	2303886	PostIncDecOperationExpression	line_ptr ++		2303723	1					
ANR	2303887	Identifier	line_ptr		2303723	0					
ANR	2303888	IncDec	++		2303723	1					
ANR	2303889	ElseStatement	else		2303723	0					
ANR	2303890	IfStatement	if ( line_ptr [ 0 ] == line_ptr [ 1 ] )		2303723	0					
ANR	2303891	Condition	line_ptr [ 0 ] == line_ptr [ 1 ]	532:12:13831:13856	2303723	0	True				
ANR	2303892	EqualityExpression	line_ptr [ 0 ] == line_ptr [ 1 ]		2303723	0		==			
ANR	2303893	ArrayIndexing	line_ptr [ 0 ]		2303723	0					
ANR	2303894	Identifier	line_ptr		2303723	0					
ANR	2303895	PrimaryExpression	0		2303723	1					
ANR	2303896	ArrayIndexing	line_ptr [ 1 ]		2303723	1					
ANR	2303897	Identifier	line_ptr		2303723	0					
ANR	2303898	PrimaryExpression	1		2303723	1					
ANR	2303899	CompoundStatement		65:3:1289:1289	2303723	1					
ANR	2303900	ExpressionStatement	line_ptr ++	538:5:13913:13924	2303723	0	True				
ANR	2303901	PostIncDecOperationExpression	line_ptr ++		2303723	0					
ANR	2303902	Identifier	line_ptr		2303723	0					
ANR	2303903	IncDec	++		2303723	1					
ANR	2303904	ExpressionStatement	count = 2	539:5:13931:13940	2303723	1	True				
ANR	2303905	AssignmentExpression	count = 2		2303723	0		=			
ANR	2303906	Identifier	count		2303723	0					
ANR	2303907	PrimaryExpression	2		2303723	1					
ANR	2303908	WhileStatement	while ( line_ptr < ( line_end - 1 ) && line_ptr [ 0 ] == line_ptr [ 1 ] && count < 127 )		2303723	2					
ANR	2303909	Condition	line_ptr < ( line_end - 1 ) && line_ptr [ 0 ] == line_ptr [ 1 ] && count < 127	541:12:13955:14048	2303723	0	True				
ANR	2303910	AndExpression	line_ptr < ( line_end - 1 ) && line_ptr [ 0 ] == line_ptr [ 1 ] && count < 127		2303723	0		&&			
ANR	2303911	RelationalExpression	line_ptr < ( line_end - 1 )		2303723	0		<			
ANR	2303912	Identifier	line_ptr		2303723	0					
ANR	2303913	AdditiveExpression	line_end - 1		2303723	1		-			
ANR	2303914	Identifier	line_end		2303723	0					
ANR	2303915	PrimaryExpression	1		2303723	1					
ANR	2303916	AndExpression	line_ptr [ 0 ] == line_ptr [ 1 ] && count < 127		2303723	1		&&			
ANR	2303917	EqualityExpression	line_ptr [ 0 ] == line_ptr [ 1 ]		2303723	0		==			
ANR	2303918	ArrayIndexing	line_ptr [ 0 ]		2303723	0					
ANR	2303919	Identifier	line_ptr		2303723	0					
ANR	2303920	PrimaryExpression	0		2303723	1					
ANR	2303921	ArrayIndexing	line_ptr [ 1 ]		2303723	1					
ANR	2303922	Identifier	line_ptr		2303723	0					
ANR	2303923	PrimaryExpression	1		2303723	1					
ANR	2303924	RelationalExpression	count < 127		2303723	1		<			
ANR	2303925	Identifier	count		2303723	0					
ANR	2303926	PrimaryExpression	127		2303723	1					
ANR	2303927	CompoundStatement		76:5:1483:1483	2303723	1					
ANR	2303928	ExpressionStatement	line_ptr ++	545:14:14072:14083	2303723	0	True				
ANR	2303929	PostIncDecOperationExpression	line_ptr ++		2303723	0					
ANR	2303930	Identifier	line_ptr		2303723	0					
ANR	2303931	IncDec	++		2303723	1					
ANR	2303932	ExpressionStatement	count ++	546:14:14099:14107	2303723	1	True				
ANR	2303933	PostIncDecOperationExpression	count ++		2303723	0					
ANR	2303934	Identifier	count		2303723	0					
ANR	2303935	IncDec	++		2303723	1					
ANR	2303936	ExpressionStatement	* comp_ptr ++ = 257 - count	549:5:14122:14147	2303723	3	True				
ANR	2303937	AssignmentExpression	* comp_ptr ++ = 257 - count		2303723	0		=			
ANR	2303938	UnaryOperationExpression	* comp_ptr ++		2303723	0					
ANR	2303939	UnaryOperator	*		2303723	0					
ANR	2303940	PostIncDecOperationExpression	comp_ptr ++		2303723	1					
ANR	2303941	Identifier	comp_ptr		2303723	0					
ANR	2303942	IncDec	++		2303723	1					
ANR	2303943	AdditiveExpression	257 - count		2303723	1		-			
ANR	2303944	PrimaryExpression	257		2303723	0					
ANR	2303945	Identifier	count		2303723	1					
ANR	2303946	ExpressionStatement	* comp_ptr ++ = * line_ptr ++	550:5:14154:14179	2303723	4	True				
ANR	2303947	AssignmentExpression	* comp_ptr ++ = * line_ptr ++		2303723	0		=			
ANR	2303948	UnaryOperationExpression	* comp_ptr ++		2303723	0					
ANR	2303949	UnaryOperator	*		2303723	0					
ANR	2303950	PostIncDecOperationExpression	comp_ptr ++		2303723	1					
ANR	2303951	Identifier	comp_ptr		2303723	0					
ANR	2303952	IncDec	++		2303723	1					
ANR	2303953	UnaryOperationExpression	* line_ptr ++		2303723	1					
ANR	2303954	UnaryOperator	*		2303723	0					
ANR	2303955	PostIncDecOperationExpression	line_ptr ++		2303723	1					
ANR	2303956	Identifier	line_ptr		2303723	0					
ANR	2303957	IncDec	++		2303723	1					
ANR	2303958	ElseStatement	else		2303723	0					
ANR	2303959	CompoundStatement		85:3:1624:1624	2303723	0					
ANR	2303960	ExpressionStatement	start = line_ptr	558:5:14252:14271	2303723	0	True				
ANR	2303961	AssignmentExpression	start = line_ptr		2303723	0		=			
ANR	2303962	Identifier	start		2303723	0					
ANR	2303963	Identifier	line_ptr		2303723	1					
ANR	2303964	ExpressionStatement	line_ptr ++	559:5:14278:14289	2303723	1	True				
ANR	2303965	PostIncDecOperationExpression	line_ptr ++		2303723	0					
ANR	2303966	Identifier	line_ptr		2303723	0					
ANR	2303967	IncDec	++		2303723	1					
ANR	2303968	ExpressionStatement	count = 1	560:5:14296:14308	2303723	2	True				
ANR	2303969	AssignmentExpression	count = 1		2303723	0		=			
ANR	2303970	Identifier	count		2303723	0					
ANR	2303971	PrimaryExpression	1		2303723	1					
ANR	2303972	WhileStatement	while ( line_ptr < ( line_end - 1 ) && line_ptr [ 0 ] != line_ptr [ 1 ] && count < 127 )		2303723	3					
ANR	2303973	Condition	line_ptr < ( line_end - 1 ) && line_ptr [ 0 ] != line_ptr [ 1 ] && count < 127	562:12:14323:14416	2303723	0	True				
ANR	2303974	AndExpression	line_ptr < ( line_end - 1 ) && line_ptr [ 0 ] != line_ptr [ 1 ] && count < 127		2303723	0		&&			
ANR	2303975	RelationalExpression	line_ptr < ( line_end - 1 )		2303723	0		<			
ANR	2303976	Identifier	line_ptr		2303723	0					
ANR	2303977	AdditiveExpression	line_end - 1		2303723	1		-			
ANR	2303978	Identifier	line_end		2303723	0					
ANR	2303979	PrimaryExpression	1		2303723	1					
ANR	2303980	AndExpression	line_ptr [ 0 ] != line_ptr [ 1 ] && count < 127		2303723	1		&&			
ANR	2303981	EqualityExpression	line_ptr [ 0 ] != line_ptr [ 1 ]		2303723	0		!=			
ANR	2303982	ArrayIndexing	line_ptr [ 0 ]		2303723	0					
ANR	2303983	Identifier	line_ptr		2303723	0					
ANR	2303984	PrimaryExpression	0		2303723	1					
ANR	2303985	ArrayIndexing	line_ptr [ 1 ]		2303723	1					
ANR	2303986	Identifier	line_ptr		2303723	0					
ANR	2303987	PrimaryExpression	1		2303723	1					
ANR	2303988	RelationalExpression	count < 127		2303723	1		<			
ANR	2303989	Identifier	count		2303723	0					
ANR	2303990	PrimaryExpression	127		2303723	1					
ANR	2303991	CompoundStatement		97:5:1851:1851	2303723	1					
ANR	2303992	ExpressionStatement	line_ptr ++	566:14:14440:14451	2303723	0	True				
ANR	2303993	PostIncDecOperationExpression	line_ptr ++		2303723	0					
ANR	2303994	Identifier	line_ptr		2303723	0					
ANR	2303995	IncDec	++		2303723	1					
ANR	2303996	ExpressionStatement	count ++	567:14:14467:14475	2303723	1	True				
ANR	2303997	PostIncDecOperationExpression	count ++		2303723	0					
ANR	2303998	Identifier	count		2303723	0					
ANR	2303999	IncDec	++		2303723	1					
ANR	2304000	ExpressionStatement	* comp_ptr ++ = count - 1	570:5:14490:14513	2303723	4	True				
ANR	2304001	AssignmentExpression	* comp_ptr ++ = count - 1		2303723	0		=			
ANR	2304002	UnaryOperationExpression	* comp_ptr ++		2303723	0					
ANR	2304003	UnaryOperator	*		2303723	0					
ANR	2304004	PostIncDecOperationExpression	comp_ptr ++		2303723	1					
ANR	2304005	Identifier	comp_ptr		2303723	0					
ANR	2304006	IncDec	++		2303723	1					
ANR	2304007	AdditiveExpression	count - 1		2303723	1		-			
ANR	2304008	Identifier	count		2303723	0					
ANR	2304009	PrimaryExpression	1		2303723	1					
ANR	2304010	ExpressionStatement	"memcpy ( comp_ptr , start , count )"	572:5:14521:14551	2303723	5	True				
ANR	2304011	CallExpression	"memcpy ( comp_ptr , start , count )"		2303723	0					
ANR	2304012	Callee	memcpy		2303723	0					
ANR	2304013	Identifier	memcpy		2303723	0					
ANR	2304014	ArgumentList	comp_ptr		2303723	1					
ANR	2304015	Argument	comp_ptr		2303723	0					
ANR	2304016	Identifier	comp_ptr		2303723	0					
ANR	2304017	Argument	start		2303723	1					
ANR	2304018	Identifier	start		2303723	0					
ANR	2304019	Argument	count		2303723	2					
ANR	2304020	Identifier	count		2303723	0					
ANR	2304021	ExpressionStatement	comp_ptr += count	573:5:14558:14575	2303723	6	True				
ANR	2304022	AssignmentExpression	comp_ptr += count		2303723	0		+=			
ANR	2304023	Identifier	comp_ptr		2303723	0					
ANR	2304024	Identifier	count		2303723	1					
ANR	2304025	ExpressionStatement	line_ptr = CompBuffer	577:8:14594:14615	2303723	15	True				
ANR	2304026	AssignmentExpression	line_ptr = CompBuffer		2303723	0		=			
ANR	2304027	Identifier	line_ptr		2303723	0					
ANR	2304028	Identifier	CompBuffer		2303723	1					
ANR	2304029	ExpressionStatement	line_end = comp_ptr	578:8:14625:14644	2303723	16	True				
ANR	2304030	AssignmentExpression	line_end = comp_ptr		2303723	0		=			
ANR	2304031	Identifier	line_end		2303723	0					
ANR	2304032	Identifier	comp_ptr		2303723	1					
ANR	2304033	BreakStatement	break ;	579:1:14647:14652	2303723	17	True				
ANR	2304034	ExpressionStatement	"printf ( ""\\033*b%d%c"" , ( int ) ( line_end - line_ptr ) , plane )"	586:2:14730:14785	2303723	3	True				
ANR	2304035	CallExpression	"printf ( ""\\033*b%d%c"" , ( int ) ( line_end - line_ptr ) , plane )"		2303723	0					
ANR	2304036	Callee	printf		2303723	0					
ANR	2304037	Identifier	printf		2303723	0					
ANR	2304038	ArgumentList	"""\\033*b%d%c"""		2303723	1					
ANR	2304039	Argument	"""\\033*b%d%c"""		2303723	0					
ANR	2304040	PrimaryExpression	"""\\033*b%d%c"""		2303723	0					
ANR	2304041	Argument	( int ) ( line_end - line_ptr )		2303723	1					
ANR	2304042	CastExpression	( int ) ( line_end - line_ptr )		2303723	0					
ANR	2304043	CastTarget	int		2303723	0					
ANR	2304044	AdditiveExpression	line_end - line_ptr		2303723	1		-			
ANR	2304045	Identifier	line_end		2303723	0					
ANR	2304046	Identifier	line_ptr		2303723	1					
ANR	2304047	Argument	plane		2303723	2					
ANR	2304048	Identifier	plane		2303723	0					
ANR	2304049	ExpressionStatement	"fwrite ( line_ptr , line_end - line_ptr , 1 , stdout )"	587:2:14789:14837	2303723	4	True				
ANR	2304050	CallExpression	"fwrite ( line_ptr , line_end - line_ptr , 1 , stdout )"		2303723	0					
ANR	2304051	Callee	fwrite		2303723	0					
ANR	2304052	Identifier	fwrite		2303723	0					
ANR	2304053	ArgumentList	line_ptr		2303723	1					
ANR	2304054	Argument	line_ptr		2303723	0					
ANR	2304055	Identifier	line_ptr		2303723	0					
ANR	2304056	Argument	line_end - line_ptr		2303723	1					
ANR	2304057	AdditiveExpression	line_end - line_ptr		2303723	0		-			
ANR	2304058	Identifier	line_end		2303723	0					
ANR	2304059	Identifier	line_ptr		2303723	1					
ANR	2304060	Argument	1		2303723	2					
ANR	2304061	PrimaryExpression	1		2303723	0					
ANR	2304062	Argument	stdout		2303723	3					
ANR	2304063	Identifier	stdout		2303723	0					
ANR	2304064	ReturnType	void		2303723	1					
ANR	2304065	Identifier	CompressData		2303723	2					
ANR	2304066	ParameterList	"unsigned char * line , int length , int plane , int type"		2303723	3					
ANR	2304067	Parameter	unsigned char * line	465:13:12358:12376	2303723	0	True				
ANR	2304068	ParameterType	unsigned char *		2303723	0					
ANR	2304069	Identifier	line		2303723	1					
ANR	2304070	Parameter	int length	466:13:12419:12438	2303723	1	True				
ANR	2304071	ParameterType	int		2303723	0					
ANR	2304072	Identifier	length		2303723	1					
ANR	2304073	Parameter	int plane	467:6:12473:12491	2303723	2	True				
ANR	2304074	ParameterType	int		2303723	0					
ANR	2304075	Identifier	plane		2303723	1					
ANR	2304076	Parameter	int type	468:6:12522:12539	2303723	3	True				
ANR	2304077	ParameterType	int		2303723	0					
ANR	2304078	Identifier	type		2303723	1					
ANR	2304079	CFGEntryNode	ENTRY		2303723		True				
ANR	2304080	CFGExitNode	EXIT		2303723		True				
ANR	2304081	Symbol	plane		2303723						
ANR	2304082	Symbol	comp_ptr		2303723						
ANR	2304083	Symbol	* line_ptr		2303723						
ANR	2304084	Symbol	stdout		2303723						
ANR	2304085	Symbol	* comp_ptr ++		2303723						
ANR	2304086	Symbol	line		2303723						
ANR	2304087	Symbol	length		2303723						
ANR	2304088	Symbol	start		2303723						
ANR	2304089	Symbol	count		2303723						
ANR	2304090	Symbol	type		2303723						
ANR	2304091	Symbol	* comp_ptr		2303723						
ANR	2304092	Symbol	line_end		2303723						
ANR	2304093	Symbol	CompBuffer		2303723						
ANR	2304094	Symbol	* count		2303723						
ANR	2304095	Symbol	* line_ptr ++		2303723						
ANR	2304096	Symbol	line_ptr		2303723						
ANR	2304097	Function	OutputLine	595:0:14898:16764							
ANR	2304098	FunctionDef	OutputLine (cups_page_header2_t * header)		2304097	0					
ANR	2304099	CompoundStatement		597:0:14965:16764	2304097	0					
ANR	2304100	IdentifierDeclStatement	"int plane , bytes , count ;"	598:2:14969:15042	2304097	0	True				
ANR	2304101	IdentifierDecl	plane		2304097	0					
ANR	2304102	IdentifierDeclType	int		2304097	0					
ANR	2304103	Identifier	plane		2304097	1					
ANR	2304104	IdentifierDecl	bytes		2304097	1					
ANR	2304105	IdentifierDeclType	int		2304097	0					
ANR	2304106	Identifier	bytes		2304097	1					
ANR	2304107	IdentifierDecl	count		2304097	2					
ANR	2304108	IdentifierDeclType	int		2304097	0					
ANR	2304109	Identifier	count		2304097	1					
ANR	2304110	IdentifierDeclStatement	"unsigned char bit , bit0 , bit1 , * plane_ptr , * bit_ptr ;"	601:2:15071:15243	2304097	1	True				
ANR	2304111	IdentifierDecl	bit		2304097	0					
ANR	2304112	IdentifierDeclType	unsigned char		2304097	0					
ANR	2304113	Identifier	bit		2304097	1					
ANR	2304114	IdentifierDecl	bit0		2304097	1					
ANR	2304115	IdentifierDeclType	unsigned char		2304097	0					
ANR	2304116	Identifier	bit0		2304097	1					
ANR	2304117	IdentifierDecl	bit1		2304097	2					
ANR	2304118	IdentifierDeclType	unsigned char		2304097	0					
ANR	2304119	Identifier	bit1		2304097	1					
ANR	2304120	IdentifierDecl	* plane_ptr		2304097	3					
ANR	2304121	IdentifierDeclType	unsigned char *		2304097	0					
ANR	2304122	Identifier	plane_ptr		2304097	1					
ANR	2304123	IdentifierDecl	* bit_ptr		2304097	4					
ANR	2304124	IdentifierDeclType	unsigned char *		2304097	0					
ANR	2304125	Identifier	bit_ptr		2304097	1					
ANR	2304126	IfStatement	if ( Feed > 0 )		2304097	2					
ANR	2304127	Condition	Feed > 0	612:6:15328:15335	2304097	0	True				
ANR	2304128	RelationalExpression	Feed > 0		2304097	0		>			
ANR	2304129	Identifier	Feed		2304097	0					
ANR	2304130	PrimaryExpression	0		2304097	1					
ANR	2304131	CompoundStatement		17:2:374:374	2304097	1					
ANR	2304132	ExpressionStatement	"printf ( ""\\033*b%dY"" , Feed )"	614:4:15346:15371	2304097	0	True				
ANR	2304133	CallExpression	"printf ( ""\\033*b%dY"" , Feed )"		2304097	0					
ANR	2304134	Callee	printf		2304097	0					
ANR	2304135	Identifier	printf		2304097	0					
ANR	2304136	ArgumentList	"""\\033*b%dY"""		2304097	1					
ANR	2304137	Argument	"""\\033*b%dY"""		2304097	0					
ANR	2304138	PrimaryExpression	"""\\033*b%dY"""		2304097	0					
ANR	2304139	Argument	Feed		2304097	1					
ANR	2304140	Identifier	Feed		2304097	0					
ANR	2304141	ExpressionStatement	Feed = 0	615:4:15377:15385	2304097	1	True				
ANR	2304142	AssignmentExpression	Feed = 0		2304097	0		=			
ANR	2304143	Identifier	Feed		2304097	0					
ANR	2304144	PrimaryExpression	0		2304097	1					
ANR	2304145	ExpressionStatement	bytes = ( header -> cupsWidth + 7 ) / 8	622:2:15439:15474	2304097	3	True				
ANR	2304146	AssignmentExpression	bytes = ( header -> cupsWidth + 7 ) / 8		2304097	0		=			
ANR	2304147	Identifier	bytes		2304097	0					
ANR	2304148	MultiplicativeExpression	( header -> cupsWidth + 7 ) / 8		2304097	1		/			
ANR	2304149	AdditiveExpression	header -> cupsWidth + 7		2304097	0		+			
ANR	2304150	PtrMemberAccess	header -> cupsWidth		2304097	0					
ANR	2304151	Identifier	header		2304097	0					
ANR	2304152	Identifier	cupsWidth		2304097	1					
ANR	2304153	PrimaryExpression	7		2304097	1					
ANR	2304154	PrimaryExpression	8		2304097	1					
ANR	2304155	ForStatement	for ( plane = 0 ; plane < NumPlanes ; plane ++ )		2304097	4					
ANR	2304156	ForInit	plane = 0 ;	624:7:15484:15493	2304097	0	True				
ANR	2304157	AssignmentExpression	plane = 0		2304097	0		=			
ANR	2304158	Identifier	plane		2304097	0					
ANR	2304159	PrimaryExpression	0		2304097	1					
ANR	2304160	Condition	plane < NumPlanes	624:18:15495:15511	2304097	1	True				
ANR	2304161	RelationalExpression	plane < NumPlanes		2304097	0		<			
ANR	2304162	Identifier	plane		2304097	0					
ANR	2304163	Identifier	NumPlanes		2304097	1					
ANR	2304164	PostIncDecOperationExpression	plane ++	624:37:15514:15521	2304097	2	True				
ANR	2304165	Identifier	plane		2304097	0					
ANR	2304166	IncDec	++		2304097	1					
ANR	2304167	IfStatement	if ( ColorBits == 1 )		2304097	3					
ANR	2304168	Condition	ColorBits == 1	625:8:15532:15545	2304097	0	True				
ANR	2304169	EqualityExpression	ColorBits == 1		2304097	0		==			
ANR	2304170	Identifier	ColorBits		2304097	0					
ANR	2304171	PrimaryExpression	1		2304097	1					
ANR	2304172	CompoundStatement		30:4:586:586	2304097	1					
ANR	2304173	ExpressionStatement	"CompressData ( Planes [ plane ] , bytes , plane < ( NumPlanes - 1 ) ? 'V' : 'W' , header -> cupsCompression )"	631:6:15605:15706	2304097	0	True				
ANR	2304174	CallExpression	"CompressData ( Planes [ plane ] , bytes , plane < ( NumPlanes - 1 ) ? 'V' : 'W' , header -> cupsCompression )"		2304097	0					
ANR	2304175	Callee	CompressData		2304097	0					
ANR	2304176	Identifier	CompressData		2304097	0					
ANR	2304177	ArgumentList	Planes [ plane ]		2304097	1					
ANR	2304178	Argument	Planes [ plane ]		2304097	0					
ANR	2304179	ArrayIndexing	Planes [ plane ]		2304097	0					
ANR	2304180	Identifier	Planes		2304097	0					
ANR	2304181	Identifier	plane		2304097	1					
ANR	2304182	Argument	bytes		2304097	1					
ANR	2304183	Identifier	bytes		2304097	0					
ANR	2304184	Argument	plane < ( NumPlanes - 1 ) ? 'V' : 'W'		2304097	2					
ANR	2304185	ConditionalExpression	plane < ( NumPlanes - 1 ) ? 'V' : 'W'		2304097	0					
ANR	2304186	Condition	plane < ( NumPlanes - 1 )		2304097	0					
ANR	2304187	RelationalExpression	plane < ( NumPlanes - 1 )		2304097	0		<			
ANR	2304188	Identifier	plane		2304097	0					
ANR	2304189	AdditiveExpression	NumPlanes - 1		2304097	1		-			
ANR	2304190	Identifier	NumPlanes		2304097	0					
ANR	2304191	PrimaryExpression	1		2304097	1					
ANR	2304192	PrimaryExpression	'V'		2304097	1					
ANR	2304193	PrimaryExpression	'W'		2304097	2					
ANR	2304194	Argument	header -> cupsCompression		2304097	3					
ANR	2304195	PtrMemberAccess	header -> cupsCompression		2304097	0					
ANR	2304196	Identifier	header		2304097	0					
ANR	2304197	Identifier	cupsCompression		2304097	1					
ANR	2304198	ElseStatement	else		2304097	0					
ANR	2304199	CompoundStatement		39:4:761:761	2304097	0					
ANR	2304200	ForStatement	"for ( count = header -> cupsBytesPerLine / NumPlanes , plane_ptr = Planes [ plane ] , bit_ptr = BitBuffer ; count > 0 ; count -= 2 , plane_ptr += 2 , bit_ptr ++ )"		2304097	0					
ANR	2304201	ForInit	"count = header -> cupsBytesPerLine / NumPlanes , plane_ptr = Planes [ plane ] , bit_ptr = BitBuffer ;"	640:11:15820:15927	2304097	0	True				
ANR	2304202	Expression	"count = header -> cupsBytesPerLine / NumPlanes , plane_ptr = Planes [ plane ] , bit_ptr = BitBuffer"		2304097	0					
ANR	2304203	AssignmentExpression	count = header -> cupsBytesPerLine / NumPlanes		2304097	0		=			
ANR	2304204	Identifier	count		2304097	0					
ANR	2304205	MultiplicativeExpression	header -> cupsBytesPerLine / NumPlanes		2304097	1		/			
ANR	2304206	PtrMemberAccess	header -> cupsBytesPerLine		2304097	0					
ANR	2304207	Identifier	header		2304097	0					
ANR	2304208	Identifier	cupsBytesPerLine		2304097	1					
ANR	2304209	Identifier	NumPlanes		2304097	1					
ANR	2304210	Expression	"plane_ptr = Planes [ plane ] , bit_ptr = BitBuffer"		2304097	1					
ANR	2304211	AssignmentExpression	plane_ptr = Planes [ plane ]		2304097	0		=			
ANR	2304212	Identifier	plane_ptr		2304097	0					
ANR	2304213	ArrayIndexing	Planes [ plane ]		2304097	1					
ANR	2304214	Identifier	Planes		2304097	0					
ANR	2304215	Identifier	plane		2304097	1					
ANR	2304216	AssignmentExpression	bit_ptr = BitBuffer		2304097	1		=			
ANR	2304217	Identifier	bit_ptr		2304097	0					
ANR	2304218	Identifier	BitBuffer		2304097	1					
ANR	2304219	Condition	count > 0	642:4:15933:15941	2304097	1	True				
ANR	2304220	RelationalExpression	count > 0		2304097	0		>			
ANR	2304221	Identifier	count		2304097	0					
ANR	2304222	PrimaryExpression	0		2304097	1					
ANR	2304223	Expression	"count -= 2 , plane_ptr += 2 , bit_ptr ++"	643:4:15948:15985	2304097	2	True				
ANR	2304224	AssignmentExpression	count -= 2		2304097	0		-=			
ANR	2304225	Identifier	count		2304097	0					
ANR	2304226	PrimaryExpression	2		2304097	1					
ANR	2304227	Expression	"plane_ptr += 2 , bit_ptr ++"		2304097	1					
ANR	2304228	AssignmentExpression	plane_ptr += 2		2304097	0		+=			
ANR	2304229	Identifier	plane_ptr		2304097	0					
ANR	2304230	PrimaryExpression	2		2304097	1					
ANR	2304231	PostIncDecOperationExpression	bit_ptr ++		2304097	1					
ANR	2304232	Identifier	bit_ptr		2304097	0					
ANR	2304233	IncDec	++		2304097	1					
ANR	2304234	CompoundStatement		48:6:1028:1028	2304097	3					
ANR	2304235	ExpressionStatement	bit = plane_ptr [ 0 ]	645:8:16004:16022	2304097	0	True				
ANR	2304236	AssignmentExpression	bit = plane_ptr [ 0 ]		2304097	0		=			
ANR	2304237	Identifier	bit		2304097	0					
ANR	2304238	ArrayIndexing	plane_ptr [ 0 ]		2304097	1					
ANR	2304239	Identifier	plane_ptr		2304097	0					
ANR	2304240	PrimaryExpression	0		2304097	1					
ANR	2304241	ExpressionStatement	bit0 = ( ( bit & 64 ) << 1 ) | ( ( bit & 16 ) << 2 ) | ( ( bit & 4 ) << 3 ) | ( ( bit & 1 ) << 4 )	647:8:16033:16115	2304097	1	True				
ANR	2304242	AssignmentExpression	bit0 = ( ( bit & 64 ) << 1 ) | ( ( bit & 16 ) << 2 ) | ( ( bit & 4 ) << 3 ) | ( ( bit & 1 ) << 4 )		2304097	0		=			
ANR	2304243	Identifier	bit0		2304097	0					
ANR	2304244	InclusiveOrExpression	( ( bit & 64 ) << 1 ) | ( ( bit & 16 ) << 2 ) | ( ( bit & 4 ) << 3 ) | ( ( bit & 1 ) << 4 )		2304097	1		|			
ANR	2304245	ShiftExpression	( bit & 64 ) << 1		2304097	0		<<			
ANR	2304246	BitAndExpression	bit & 64		2304097	0		&			
ANR	2304247	Identifier	bit		2304097	0					
ANR	2304248	PrimaryExpression	64		2304097	1					
ANR	2304249	PrimaryExpression	1		2304097	1					
ANR	2304250	InclusiveOrExpression	( ( bit & 16 ) << 2 ) | ( ( bit & 4 ) << 3 ) | ( ( bit & 1 ) << 4 )		2304097	1		|			
ANR	2304251	ShiftExpression	( bit & 16 ) << 2		2304097	0		<<			
ANR	2304252	BitAndExpression	bit & 16		2304097	0		&			
ANR	2304253	Identifier	bit		2304097	0					
ANR	2304254	PrimaryExpression	16		2304097	1					
ANR	2304255	PrimaryExpression	2		2304097	1					
ANR	2304256	InclusiveOrExpression	( ( bit & 4 ) << 3 ) | ( ( bit & 1 ) << 4 )		2304097	1		|			
ANR	2304257	ShiftExpression	( bit & 4 ) << 3		2304097	0		<<			
ANR	2304258	BitAndExpression	bit & 4		2304097	0		&			
ANR	2304259	Identifier	bit		2304097	0					
ANR	2304260	PrimaryExpression	4		2304097	1					
ANR	2304261	PrimaryExpression	3		2304097	1					
ANR	2304262	ShiftExpression	( bit & 1 ) << 4		2304097	1		<<			
ANR	2304263	BitAndExpression	bit & 1		2304097	0		&			
ANR	2304264	Identifier	bit		2304097	0					
ANR	2304265	PrimaryExpression	1		2304097	1					
ANR	2304266	PrimaryExpression	4		2304097	1					
ANR	2304267	ExpressionStatement	bit1 = ( bit & 128 ) | ( ( bit & 32 ) << 1 ) | ( ( bit & 8 ) << 2 ) | ( ( bit & 2 ) << 3 )	648:8:16125:16201	2304097	2	True				
ANR	2304268	AssignmentExpression	bit1 = ( bit & 128 ) | ( ( bit & 32 ) << 1 ) | ( ( bit & 8 ) << 2 ) | ( ( bit & 2 ) << 3 )		2304097	0		=			
ANR	2304269	Identifier	bit1		2304097	0					
ANR	2304270	InclusiveOrExpression	( bit & 128 ) | ( ( bit & 32 ) << 1 ) | ( ( bit & 8 ) << 2 ) | ( ( bit & 2 ) << 3 )		2304097	1		|			
ANR	2304271	BitAndExpression	bit & 128		2304097	0		&			
ANR	2304272	Identifier	bit		2304097	0					
ANR	2304273	PrimaryExpression	128		2304097	1					
ANR	2304274	InclusiveOrExpression	( ( bit & 32 ) << 1 ) | ( ( bit & 8 ) << 2 ) | ( ( bit & 2 ) << 3 )		2304097	1		|			
ANR	2304275	ShiftExpression	( bit & 32 ) << 1		2304097	0		<<			
ANR	2304276	BitAndExpression	bit & 32		2304097	0		&			
ANR	2304277	Identifier	bit		2304097	0					
ANR	2304278	PrimaryExpression	32		2304097	1					
ANR	2304279	PrimaryExpression	1		2304097	1					
ANR	2304280	InclusiveOrExpression	( ( bit & 8 ) << 2 ) | ( ( bit & 2 ) << 3 )		2304097	1		|			
ANR	2304281	ShiftExpression	( bit & 8 ) << 2		2304097	0		<<			
ANR	2304282	BitAndExpression	bit & 8		2304097	0		&			
ANR	2304283	Identifier	bit		2304097	0					
ANR	2304284	PrimaryExpression	8		2304097	1					
ANR	2304285	PrimaryExpression	2		2304097	1					
ANR	2304286	ShiftExpression	( bit & 2 ) << 3		2304097	1		<<			
ANR	2304287	BitAndExpression	bit & 2		2304097	0		&			
ANR	2304288	Identifier	bit		2304097	0					
ANR	2304289	PrimaryExpression	2		2304097	1					
ANR	2304290	PrimaryExpression	3		2304097	1					
ANR	2304291	IfStatement	if ( count > 1 )		2304097	3					
ANR	2304292	Condition	count > 1	650:12:16216:16224	2304097	0	True				
ANR	2304293	RelationalExpression	count > 1		2304097	0		>			
ANR	2304294	Identifier	count		2304097	0					
ANR	2304295	PrimaryExpression	1		2304097	1					
ANR	2304296	CompoundStatement		55:1:1262:1262	2304097	1					
ANR	2304297	ExpressionStatement	bit = plane_ptr [ 1 ]	652:3:16233:16251	2304097	0	True				
ANR	2304298	AssignmentExpression	bit = plane_ptr [ 1 ]		2304097	0		=			
ANR	2304299	Identifier	bit		2304097	0					
ANR	2304300	ArrayIndexing	plane_ptr [ 1 ]		2304097	1					
ANR	2304301	Identifier	plane_ptr		2304097	0					
ANR	2304302	PrimaryExpression	1		2304097	1					
ANR	2304303	ExpressionStatement	bit0 |= ( bit & 1 ) | ( ( bit & 4 ) >> 1 ) | ( ( bit & 16 ) >> 2 ) | ( ( bit & 64 ) >> 3 )	654:10:16264:16340	2304097	1	True				
ANR	2304304	AssignmentExpression	bit0 |= ( bit & 1 ) | ( ( bit & 4 ) >> 1 ) | ( ( bit & 16 ) >> 2 ) | ( ( bit & 64 ) >> 3 )		2304097	0		|=			
ANR	2304305	Identifier	bit0		2304097	0					
ANR	2304306	InclusiveOrExpression	( bit & 1 ) | ( ( bit & 4 ) >> 1 ) | ( ( bit & 16 ) >> 2 ) | ( ( bit & 64 ) >> 3 )		2304097	1		|			
ANR	2304307	BitAndExpression	bit & 1		2304097	0		&			
ANR	2304308	Identifier	bit		2304097	0					
ANR	2304309	PrimaryExpression	1		2304097	1					
ANR	2304310	InclusiveOrExpression	( ( bit & 4 ) >> 1 ) | ( ( bit & 16 ) >> 2 ) | ( ( bit & 64 ) >> 3 )		2304097	1		|			
ANR	2304311	ShiftExpression	( bit & 4 ) >> 1		2304097	0		>>			
ANR	2304312	BitAndExpression	bit & 4		2304097	0		&			
ANR	2304313	Identifier	bit		2304097	0					
ANR	2304314	PrimaryExpression	4		2304097	1					
ANR	2304315	PrimaryExpression	1		2304097	1					
ANR	2304316	InclusiveOrExpression	( ( bit & 16 ) >> 2 ) | ( ( bit & 64 ) >> 3 )		2304097	1		|			
ANR	2304317	ShiftExpression	( bit & 16 ) >> 2		2304097	0		>>			
ANR	2304318	BitAndExpression	bit & 16		2304097	0		&			
ANR	2304319	Identifier	bit		2304097	0					
ANR	2304320	PrimaryExpression	16		2304097	1					
ANR	2304321	PrimaryExpression	2		2304097	1					
ANR	2304322	ShiftExpression	( bit & 64 ) >> 3		2304097	1		>>			
ANR	2304323	BitAndExpression	bit & 64		2304097	0		&			
ANR	2304324	Identifier	bit		2304097	0					
ANR	2304325	PrimaryExpression	64		2304097	1					
ANR	2304326	PrimaryExpression	3		2304097	1					
ANR	2304327	ExpressionStatement	bit1 |= ( ( bit & 2 ) >> 1 ) | ( ( bit & 8 ) >> 2 ) | ( ( bit & 32 ) >> 3 ) | ( ( bit & 128 ) >> 4 )	655:10:16352:16436	2304097	2	True				
ANR	2304328	AssignmentExpression	bit1 |= ( ( bit & 2 ) >> 1 ) | ( ( bit & 8 ) >> 2 ) | ( ( bit & 32 ) >> 3 ) | ( ( bit & 128 ) >> 4 )		2304097	0		|=			
ANR	2304329	Identifier	bit1		2304097	0					
ANR	2304330	InclusiveOrExpression	( ( bit & 2 ) >> 1 ) | ( ( bit & 8 ) >> 2 ) | ( ( bit & 32 ) >> 3 ) | ( ( bit & 128 ) >> 4 )		2304097	1		|			
ANR	2304331	ShiftExpression	( bit & 2 ) >> 1		2304097	0		>>			
ANR	2304332	BitAndExpression	bit & 2		2304097	0		&			
ANR	2304333	Identifier	bit		2304097	0					
ANR	2304334	PrimaryExpression	2		2304097	1					
ANR	2304335	PrimaryExpression	1		2304097	1					
ANR	2304336	InclusiveOrExpression	( ( bit & 8 ) >> 2 ) | ( ( bit & 32 ) >> 3 ) | ( ( bit & 128 ) >> 4 )		2304097	1		|			
ANR	2304337	ShiftExpression	( bit & 8 ) >> 2		2304097	0		>>			
ANR	2304338	BitAndExpression	bit & 8		2304097	0		&			
ANR	2304339	Identifier	bit		2304097	0					
ANR	2304340	PrimaryExpression	8		2304097	1					
ANR	2304341	PrimaryExpression	2		2304097	1					
ANR	2304342	InclusiveOrExpression	( ( bit & 32 ) >> 3 ) | ( ( bit & 128 ) >> 4 )		2304097	1		|			
ANR	2304343	ShiftExpression	( bit & 32 ) >> 3		2304097	0		>>			
ANR	2304344	BitAndExpression	bit & 32		2304097	0		&			
ANR	2304345	Identifier	bit		2304097	0					
ANR	2304346	PrimaryExpression	32		2304097	1					
ANR	2304347	PrimaryExpression	3		2304097	1					
ANR	2304348	ShiftExpression	( bit & 128 ) >> 4		2304097	1		>>			
ANR	2304349	BitAndExpression	bit & 128		2304097	0		&			
ANR	2304350	Identifier	bit		2304097	0					
ANR	2304351	PrimaryExpression	128		2304097	1					
ANR	2304352	PrimaryExpression	4		2304097	1					
ANR	2304353	ExpressionStatement	bit_ptr [ 0 ] = bit0	658:8:16450:16471	2304097	4	True				
ANR	2304354	AssignmentExpression	bit_ptr [ 0 ] = bit0		2304097	0		=			
ANR	2304355	ArrayIndexing	bit_ptr [ 0 ]		2304097	0					
ANR	2304356	Identifier	bit_ptr		2304097	0					
ANR	2304357	PrimaryExpression	0		2304097	1					
ANR	2304358	Identifier	bit0		2304097	1					
ANR	2304359	ExpressionStatement	bit_ptr [ bytes ] = bit1	659:1:16474:16495	2304097	5	True				
ANR	2304360	AssignmentExpression	bit_ptr [ bytes ] = bit1		2304097	0		=			
ANR	2304361	ArrayIndexing	bit_ptr [ bytes ]		2304097	0					
ANR	2304362	Identifier	bit_ptr		2304097	0					
ANR	2304363	Identifier	bytes		2304097	1					
ANR	2304364	Identifier	bit1		2304097	1					
ANR	2304365	ExpressionStatement	"CompressData ( BitBuffer , bytes , 'V' , header -> cupsCompression )"	666:6:16564:16624	2304097	1	True				
ANR	2304366	CallExpression	"CompressData ( BitBuffer , bytes , 'V' , header -> cupsCompression )"		2304097	0					
ANR	2304367	Callee	CompressData		2304097	0					
ANR	2304368	Identifier	CompressData		2304097	0					
ANR	2304369	ArgumentList	BitBuffer		2304097	1					
ANR	2304370	Argument	BitBuffer		2304097	0					
ANR	2304371	Identifier	BitBuffer		2304097	0					
ANR	2304372	Argument	bytes		2304097	1					
ANR	2304373	Identifier	bytes		2304097	0					
ANR	2304374	Argument	'V'		2304097	2					
ANR	2304375	PrimaryExpression	'V'		2304097	0					
ANR	2304376	Argument	header -> cupsCompression		2304097	3					
ANR	2304377	PtrMemberAccess	header -> cupsCompression		2304097	0					
ANR	2304378	Identifier	header		2304097	0					
ANR	2304379	Identifier	cupsCompression		2304097	1					
ANR	2304380	ExpressionStatement	"CompressData ( BitBuffer + bytes , bytes , plane < ( NumPlanes - 1 ) ? 'V' : 'W' , header -> cupsCompression )"	667:6:16632:16737	2304097	2	True				
ANR	2304381	CallExpression	"CompressData ( BitBuffer + bytes , bytes , plane < ( NumPlanes - 1 ) ? 'V' : 'W' , header -> cupsCompression )"		2304097	0					
ANR	2304382	Callee	CompressData		2304097	0					
ANR	2304383	Identifier	CompressData		2304097	0					
ANR	2304384	ArgumentList	BitBuffer + bytes		2304097	1					
ANR	2304385	Argument	BitBuffer + bytes		2304097	0					
ANR	2304386	AdditiveExpression	BitBuffer + bytes		2304097	0		+			
ANR	2304387	Identifier	BitBuffer		2304097	0					
ANR	2304388	Identifier	bytes		2304097	1					
ANR	2304389	Argument	bytes		2304097	1					
ANR	2304390	Identifier	bytes		2304097	0					
ANR	2304391	Argument	plane < ( NumPlanes - 1 ) ? 'V' : 'W'		2304097	2					
ANR	2304392	ConditionalExpression	plane < ( NumPlanes - 1 ) ? 'V' : 'W'		2304097	0					
ANR	2304393	Condition	plane < ( NumPlanes - 1 )		2304097	0					
ANR	2304394	RelationalExpression	plane < ( NumPlanes - 1 )		2304097	0		<			
ANR	2304395	Identifier	plane		2304097	0					
ANR	2304396	AdditiveExpression	NumPlanes - 1		2304097	1		-			
ANR	2304397	Identifier	NumPlanes		2304097	0					
ANR	2304398	PrimaryExpression	1		2304097	1					
ANR	2304399	PrimaryExpression	'V'		2304097	1					
ANR	2304400	PrimaryExpression	'W'		2304097	2					
ANR	2304401	Argument	header -> cupsCompression		2304097	3					
ANR	2304402	PtrMemberAccess	header -> cupsCompression		2304097	0					
ANR	2304403	Identifier	header		2304097	0					
ANR	2304404	Identifier	cupsCompression		2304097	1					
ANR	2304405	ExpressionStatement	fflush ( stdout )	671:2:16748:16762	2304097	5	True				
ANR	2304406	CallExpression	fflush ( stdout )		2304097	0					
ANR	2304407	Callee	fflush		2304097	0					
ANR	2304408	Identifier	fflush		2304097	0					
ANR	2304409	ArgumentList	stdout		2304097	1					
ANR	2304410	Argument	stdout		2304097	0					
ANR	2304411	Identifier	stdout		2304097	0					
ANR	2304412	ReturnType	void		2304097	1					
ANR	2304413	Identifier	OutputLine		2304097	2					
ANR	2304414	ParameterList	cups_page_header2_t * header		2304097	3					
ANR	2304415	Parameter	cups_page_header2_t * header	596:11:14914:14940	2304097	0	True				
ANR	2304416	ParameterType	cups_page_header2_t *		2304097	0					
ANR	2304417	Identifier	header		2304097	1					
ANR	2304418	CFGEntryNode	ENTRY		2304097		True				
ANR	2304419	CFGExitNode	EXIT		2304097		True				
ANR	2304420	Symbol	plane		2304097						
ANR	2304421	Symbol	bit_ptr		2304097						
ANR	2304422	Symbol	header -> cupsWidth		2304097						
ANR	2304423	Symbol	stdout		2304097						
ANR	2304424	Symbol	* plane_ptr		2304097						
ANR	2304425	Symbol	count		2304097						
ANR	2304426	Symbol	bit1		2304097						
ANR	2304427	Symbol	* bytes		2304097						
ANR	2304428	Symbol	bit		2304097						
ANR	2304429	Symbol	bit0		2304097						
ANR	2304430	Symbol	* header		2304097						
ANR	2304431	Symbol	header -> cupsCompression		2304097						
ANR	2304432	Symbol	NumPlanes		2304097						
ANR	2304433	Symbol	* Planes		2304097						
ANR	2304434	Symbol	Planes		2304097						
ANR	2304435	Symbol	ColorBits		2304097						
ANR	2304436	Symbol	bytes		2304097						
ANR	2304437	Symbol	plane_ptr		2304097						
ANR	2304438	Symbol	* bit_ptr		2304097						
ANR	2304439	Symbol	header		2304097						
ANR	2304440	Symbol	* plane		2304097						
ANR	2304441	Symbol	header -> cupsBytesPerLine		2304097						
ANR	2304442	Symbol	BitBuffer		2304097						
ANR	2304443	Symbol	Feed		2304097						
ANR	2304444	Function	main	679:0:16827:20812							
ANR	2304445	FunctionDef	"main (int argc , char * argv [ ])"		2304444	0					
ANR	2304446	CompoundStatement		682:0:16973:20812	2304444	0					
ANR	2304447	IdentifierDeclStatement	int fd ;	683:2:16977:16985	2304444	0	True				
ANR	2304448	IdentifierDecl	fd		2304444	0					
ANR	2304449	IdentifierDeclType	int		2304444	0					
ANR	2304450	Identifier	fd		2304444	1					
ANR	2304451	IdentifierDeclStatement	cups_raster_t * ras ;	684:2:17012:17031	2304444	1	True				
ANR	2304452	IdentifierDecl	* ras		2304444	0					
ANR	2304453	IdentifierDeclType	cups_raster_t *		2304444	0					
ANR	2304454	Identifier	ras		2304444	1					
ANR	2304455	IdentifierDeclStatement	cups_page_header2_t header ;	685:2:17069:17095	2304444	2	True				
ANR	2304456	IdentifierDecl	header		2304444	0					
ANR	2304457	IdentifierDeclType	cups_page_header2_t		2304444	0					
ANR	2304458	Identifier	header		2304444	1					
ANR	2304459	IdentifierDeclStatement	int y ;	686:2:17128:17135	2304444	3	True				
ANR	2304460	IdentifierDecl	y		2304444	0					
ANR	2304461	IdentifierDeclType	int		2304444	0					
ANR	2304462	Identifier	y		2304444	1					
ANR	2304463	IdentifierDeclStatement	ppd_file_t * ppd ;	687:2:17159:17175	2304444	4	True				
ANR	2304464	IdentifierDecl	* ppd		2304444	0					
ANR	2304465	IdentifierDeclType	ppd_file_t *		2304444	0					
ANR	2304466	Identifier	ppd		2304444	1					
ANR	2304467	IdentifierDeclStatement	struct sigaction action ;	689:2:17248:17271	2304444	5	True				
ANR	2304468	IdentifierDecl	action		2304444	0					
ANR	2304469	IdentifierDeclType	struct sigaction		2304444	0					
ANR	2304470	Identifier	action		2304444	1					
ANR	2304471	ExpressionStatement	"setbuf ( stderr , NULL )"	697:2:17414:17434	2304444	6	True				
ANR	2304472	CallExpression	"setbuf ( stderr , NULL )"		2304444	0					
ANR	2304473	Callee	setbuf		2304444	0					
ANR	2304474	Identifier	setbuf		2304444	0					
ANR	2304475	ArgumentList	stderr		2304444	1					
ANR	2304476	Argument	stderr		2304444	0					
ANR	2304477	Identifier	stderr		2304444	0					
ANR	2304478	Argument	NULL		2304444	1					
ANR	2304479	Identifier	NULL		2304444	0					
ANR	2304480	IfStatement	if ( argc < 6 || argc > 7 )		2304444	7					
ANR	2304481	Condition	argc < 6 || argc > 7	703:6:17479:17498	2304444	0	True				
ANR	2304482	OrExpression	argc < 6 || argc > 7		2304444	0		||			
ANR	2304483	RelationalExpression	argc < 6		2304444	0		<			
ANR	2304484	Identifier	argc		2304444	0					
ANR	2304485	PrimaryExpression	6		2304444	1					
ANR	2304486	RelationalExpression	argc > 7		2304444	1		>			
ANR	2304487	Identifier	argc		2304444	0					
ANR	2304488	PrimaryExpression	7		2304444	1					
ANR	2304489	CompoundStatement		23:2:529:529	2304444	1					
ANR	2304490	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""%s job-id user title copies options [file]"" ) , ""rastertohp"" )"	710:4:17617:17746	2304444	0	True				
ANR	2304491	CallExpression	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""%s job-id user title copies options [file]"" ) , ""rastertohp"" )"		2304444	0					
ANR	2304492	Callee	_cupsLangPrintFilter		2304444	0					
ANR	2304493	Identifier	_cupsLangPrintFilter		2304444	0					
ANR	2304494	ArgumentList	stderr		2304444	1					
ANR	2304495	Argument	stderr		2304444	0					
ANR	2304496	Identifier	stderr		2304444	0					
ANR	2304497	Argument	"""ERROR"""		2304444	1					
ANR	2304498	PrimaryExpression	"""ERROR"""		2304444	0					
ANR	2304499	Argument	"_ ( ""%s job-id user title copies options [file]"" )"		2304444	2					
ANR	2304500	CallExpression	"_ ( ""%s job-id user title copies options [file]"" )"		2304444	0					
ANR	2304501	Callee	_		2304444	0					
ANR	2304502	Identifier	_		2304444	0					
ANR	2304503	ArgumentList	"""%s job-id user title copies options [file]"""		2304444	1					
ANR	2304504	Argument	"""%s job-id user title copies options [file]"""		2304444	0					
ANR	2304505	PrimaryExpression	"""%s job-id user title copies options [file]"""		2304444	0					
ANR	2304506	Argument	"""rastertohp"""		2304444	3					
ANR	2304507	PrimaryExpression	"""rastertohp"""		2304444	0					
ANR	2304508	ReturnStatement	return ( 1 ) ;	713:4:17752:17762	2304444	1	True				
ANR	2304509	PrimaryExpression	1		2304444	0					
ANR	2304510	IfStatement	if ( argc == 7 )		2304444	8					
ANR	2304511	Condition	argc == 7	720:6:17813:17821	2304444	0	True				
ANR	2304512	EqualityExpression	argc == 7		2304444	0		==			
ANR	2304513	Identifier	argc		2304444	0					
ANR	2304514	PrimaryExpression	7		2304444	1					
ANR	2304515	CompoundStatement		40:2:852:852	2304444	1					
ANR	2304516	IfStatement	"if ( ( fd = open ( argv [ 6 ] , O_RDONLY ) ) == - 1 )"		2304444	0					
ANR	2304517	Condition	"( fd = open ( argv [ 6 ] , O_RDONLY ) ) == - 1"	722:8:17836:17871	2304444	0	True				
ANR	2304518	EqualityExpression	"( fd = open ( argv [ 6 ] , O_RDONLY ) ) == - 1"		2304444	0		==			
ANR	2304519	AssignmentExpression	"fd = open ( argv [ 6 ] , O_RDONLY )"		2304444	0		=			
ANR	2304520	Identifier	fd		2304444	0					
ANR	2304521	CallExpression	"open ( argv [ 6 ] , O_RDONLY )"		2304444	1					
ANR	2304522	Callee	open		2304444	0					
ANR	2304523	Identifier	open		2304444	0					
ANR	2304524	ArgumentList	argv [ 6 ]		2304444	1					
ANR	2304525	Argument	argv [ 6 ]		2304444	0					
ANR	2304526	ArrayIndexing	argv [ 6 ]		2304444	0					
ANR	2304527	Identifier	argv		2304444	0					
ANR	2304528	PrimaryExpression	6		2304444	1					
ANR	2304529	Argument	O_RDONLY		2304444	1					
ANR	2304530	Identifier	O_RDONLY		2304444	0					
ANR	2304531	UnaryOperationExpression	- 1		2304444	1					
ANR	2304532	UnaryOperator	-		2304444	0					
ANR	2304533	PrimaryExpression	1		2304444	1					
ANR	2304534	CompoundStatement		42:4:904:904	2304444	1					
ANR	2304535	ExpressionStatement	"_cupsLangPrintError ( ""ERROR"" , _ ( ""Unable to open raster file"" ) )"	724:6:17886:17947	2304444	0	True				
ANR	2304536	CallExpression	"_cupsLangPrintError ( ""ERROR"" , _ ( ""Unable to open raster file"" ) )"		2304444	0					
ANR	2304537	Callee	_cupsLangPrintError		2304444	0					
ANR	2304538	Identifier	_cupsLangPrintError		2304444	0					
ANR	2304539	ArgumentList	"""ERROR"""		2304444	1					
ANR	2304540	Argument	"""ERROR"""		2304444	0					
ANR	2304541	PrimaryExpression	"""ERROR"""		2304444	0					
ANR	2304542	Argument	"_ ( ""Unable to open raster file"" )"		2304444	1					
ANR	2304543	CallExpression	"_ ( ""Unable to open raster file"" )"		2304444	0					
ANR	2304544	Callee	_		2304444	0					
ANR	2304545	Identifier	_		2304444	0					
ANR	2304546	ArgumentList	"""Unable to open raster file"""		2304444	1					
ANR	2304547	Argument	"""Unable to open raster file"""		2304444	0					
ANR	2304548	PrimaryExpression	"""Unable to open raster file"""		2304444	0					
ANR	2304549	ExpressionStatement	sleep ( 1 )	725:6:17955:17963	2304444	1	True				
ANR	2304550	CallExpression	sleep ( 1 )		2304444	0					
ANR	2304551	Callee	sleep		2304444	0					
ANR	2304552	Identifier	sleep		2304444	0					
ANR	2304553	ArgumentList	1		2304444	1					
ANR	2304554	Argument	1		2304444	0					
ANR	2304555	PrimaryExpression	1		2304444	0					
ANR	2304556	ReturnStatement	return ( 1 ) ;	726:6:17971:17981	2304444	2	True				
ANR	2304557	PrimaryExpression	1		2304444	0					
ANR	2304558	ElseStatement	else		2304444	0					
ANR	2304559	ExpressionStatement	fd = 0	730:4:18004:18010	2304444	0	True				
ANR	2304560	AssignmentExpression	fd = 0		2304444	0		=			
ANR	2304561	Identifier	fd		2304444	0					
ANR	2304562	PrimaryExpression	0		2304444	1					
ANR	2304563	ExpressionStatement	"ras = cupsRasterOpen ( fd , CUPS_RASTER_READ )"	732:2:18015:18057	2304444	9	True				
ANR	2304564	AssignmentExpression	"ras = cupsRasterOpen ( fd , CUPS_RASTER_READ )"		2304444	0		=			
ANR	2304565	Identifier	ras		2304444	0					
ANR	2304566	CallExpression	"cupsRasterOpen ( fd , CUPS_RASTER_READ )"		2304444	1					
ANR	2304567	Callee	cupsRasterOpen		2304444	0					
ANR	2304568	Identifier	cupsRasterOpen		2304444	0					
ANR	2304569	ArgumentList	fd		2304444	1					
ANR	2304570	Argument	fd		2304444	0					
ANR	2304571	Identifier	fd		2304444	0					
ANR	2304572	Argument	CUPS_RASTER_READ		2304444	1					
ANR	2304573	Identifier	CUPS_RASTER_READ		2304444	0					
ANR	2304574	ExpressionStatement	Canceled = 0	739:2:18157:18169	2304444	10	True				
ANR	2304575	AssignmentExpression	Canceled = 0		2304444	0		=			
ANR	2304576	Identifier	Canceled		2304444	0					
ANR	2304577	PrimaryExpression	0		2304444	1					
ANR	2304578	ExpressionStatement	"sigset ( SIGTERM , CancelJob )"	742:2:18245:18271	2304444	11	True				
ANR	2304579	CallExpression	"sigset ( SIGTERM , CancelJob )"		2304444	0					
ANR	2304580	Callee	sigset		2304444	0					
ANR	2304581	Identifier	sigset		2304444	0					
ANR	2304582	ArgumentList	SIGTERM		2304444	1					
ANR	2304583	Argument	SIGTERM		2304444	0					
ANR	2304584	Identifier	SIGTERM		2304444	0					
ANR	2304585	Argument	CancelJob		2304444	1					
ANR	2304586	Identifier	CancelJob		2304444	0					
ANR	2304587	ExpressionStatement	"ppd = ppdOpenFile ( getenv ( ""PPD"" ) )"	757:2:18553:18585	2304444	12	True				
ANR	2304588	AssignmentExpression	"ppd = ppdOpenFile ( getenv ( ""PPD"" ) )"		2304444	0		=			
ANR	2304589	Identifier	ppd		2304444	0					
ANR	2304590	CallExpression	"ppdOpenFile ( getenv ( ""PPD"" ) )"		2304444	1					
ANR	2304591	Callee	ppdOpenFile		2304444	0					
ANR	2304592	Identifier	ppdOpenFile		2304444	0					
ANR	2304593	ArgumentList	"getenv ( ""PPD"" )"		2304444	1					
ANR	2304594	Argument	"getenv ( ""PPD"" )"		2304444	0					
ANR	2304595	CallExpression	"getenv ( ""PPD"" )"		2304444	0					
ANR	2304596	Callee	getenv		2304444	0					
ANR	2304597	Identifier	getenv		2304444	0					
ANR	2304598	ArgumentList	"""PPD"""		2304444	1					
ANR	2304599	Argument	"""PPD"""		2304444	0					
ANR	2304600	PrimaryExpression	"""PPD"""		2304444	0					
ANR	2304601	IfStatement	if ( ! ppd )		2304444	13					
ANR	2304602	Condition	! ppd	758:6:18593:18596	2304444	0	True				
ANR	2304603	UnaryOperationExpression	! ppd		2304444	0					
ANR	2304604	UnaryOperator	!		2304444	0					
ANR	2304605	Identifier	ppd		2304444	1					
ANR	2304606	CompoundStatement		80:4:1675:1688	2304444	1					
ANR	2304607	IdentifierDeclStatement	ppd_status_t status ;	760:4:18607:18626	2304444	0	True				
ANR	2304608	IdentifierDecl	status		2304444	0					
ANR	2304609	IdentifierDeclType	ppd_status_t		2304444	0					
ANR	2304610	Identifier	status		2304444	1					
ANR	2304611	IdentifierDeclStatement	int linenum ;	761:4:18649:18662	2304444	1	True				
ANR	2304612	IdentifierDecl	linenum		2304444	0					
ANR	2304613	IdentifierDeclType	int		2304444	0					
ANR	2304614	Identifier	linenum		2304444	1					
ANR	2304615	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""The PPD file could not be opened."" ) )"	763:4:18687:18789	2304444	2	True				
ANR	2304616	CallExpression	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""The PPD file could not be opened."" ) )"		2304444	0					
ANR	2304617	Callee	_cupsLangPrintFilter		2304444	0					
ANR	2304618	Identifier	_cupsLangPrintFilter		2304444	0					
ANR	2304619	ArgumentList	stderr		2304444	1					
ANR	2304620	Argument	stderr		2304444	0					
ANR	2304621	Identifier	stderr		2304444	0					
ANR	2304622	Argument	"""ERROR"""		2304444	1					
ANR	2304623	PrimaryExpression	"""ERROR"""		2304444	0					
ANR	2304624	Argument	"_ ( ""The PPD file could not be opened."" )"		2304444	2					
ANR	2304625	CallExpression	"_ ( ""The PPD file could not be opened."" )"		2304444	0					
ANR	2304626	Callee	_		2304444	0					
ANR	2304627	Identifier	_		2304444	0					
ANR	2304628	ArgumentList	"""The PPD file could not be opened."""		2304444	1					
ANR	2304629	Argument	"""The PPD file could not be opened."""		2304444	0					
ANR	2304630	PrimaryExpression	"""The PPD file could not be opened."""		2304444	0					
ANR	2304631	ExpressionStatement	status = ppdLastError ( & linenum )	766:4:18796:18827	2304444	3	True				
ANR	2304632	AssignmentExpression	status = ppdLastError ( & linenum )		2304444	0		=			
ANR	2304633	Identifier	status		2304444	0					
ANR	2304634	CallExpression	ppdLastError ( & linenum )		2304444	1					
ANR	2304635	Callee	ppdLastError		2304444	0					
ANR	2304636	Identifier	ppdLastError		2304444	0					
ANR	2304637	ArgumentList	& linenum		2304444	1					
ANR	2304638	Argument	& linenum		2304444	0					
ANR	2304639	UnaryOperationExpression	& linenum		2304444	0					
ANR	2304640	UnaryOperator	&		2304444	0					
ANR	2304641	Identifier	linenum		2304444	1					
ANR	2304642	ExpressionStatement	"fprintf ( stderr , ""DEBUG: %s on line %d.\\n"" , ppdErrorString ( status ) , linenum )"	768:4:18834:18909	2304444	4	True				
ANR	2304643	CallExpression	"fprintf ( stderr , ""DEBUG: %s on line %d.\\n"" , ppdErrorString ( status ) , linenum )"		2304444	0					
ANR	2304644	Callee	fprintf		2304444	0					
ANR	2304645	Identifier	fprintf		2304444	0					
ANR	2304646	ArgumentList	stderr		2304444	1					
ANR	2304647	Argument	stderr		2304444	0					
ANR	2304648	Identifier	stderr		2304444	0					
ANR	2304649	Argument	"""DEBUG: %s on line %d.\\n"""		2304444	1					
ANR	2304650	PrimaryExpression	"""DEBUG: %s on line %d.\\n"""		2304444	0					
ANR	2304651	Argument	ppdErrorString ( status )		2304444	2					
ANR	2304652	CallExpression	ppdErrorString ( status )		2304444	0					
ANR	2304653	Callee	ppdErrorString		2304444	0					
ANR	2304654	Identifier	ppdErrorString		2304444	0					
ANR	2304655	ArgumentList	status		2304444	1					
ANR	2304656	Argument	status		2304444	0					
ANR	2304657	Identifier	status		2304444	0					
ANR	2304658	Argument	linenum		2304444	3					
ANR	2304659	Identifier	linenum		2304444	0					
ANR	2304660	ReturnStatement	return ( 1 ) ;	770:4:18916:18926	2304444	5	True				
ANR	2304661	PrimaryExpression	1		2304444	0					
ANR	2304662	ExpressionStatement	Setup ( )	773:2:18935:18942	2304444	14	True				
ANR	2304663	CallExpression	Setup ( )		2304444	0					
ANR	2304664	Callee	Setup		2304444	0					
ANR	2304665	Identifier	Setup		2304444	0					
ANR	2304666	ArgumentList			2304444	1					
ANR	2304667	ExpressionStatement	Page = 0	779:2:18988:18996	2304444	15	True				
ANR	2304668	AssignmentExpression	Page = 0		2304444	0		=			
ANR	2304669	Identifier	Page		2304444	0					
ANR	2304670	PrimaryExpression	0		2304444	1					
ANR	2304671	WhileStatement	"while ( cupsRasterReadHeader2 ( ras , & header ) )"		2304444	16					
ANR	2304672	Condition	"cupsRasterReadHeader2 ( ras , & header )"	781:9:19008:19042	2304444	0	True				
ANR	2304673	CallExpression	"cupsRasterReadHeader2 ( ras , & header )"		2304444	0					
ANR	2304674	Callee	cupsRasterReadHeader2		2304444	0					
ANR	2304675	Identifier	cupsRasterReadHeader2		2304444	0					
ANR	2304676	ArgumentList	ras		2304444	1					
ANR	2304677	Argument	ras		2304444	0					
ANR	2304678	Identifier	ras		2304444	0					
ANR	2304679	Argument	& header		2304444	1					
ANR	2304680	UnaryOperationExpression	& header		2304444	0					
ANR	2304681	UnaryOperator	&		2304444	0					
ANR	2304682	Identifier	header		2304444	1					
ANR	2304683	CompoundStatement		101:2:2073:2073	2304444	1					
ANR	2304684	IfStatement	if ( Canceled )		2304444	0					
ANR	2304685	Condition	Canceled	787:8:19143:19150	2304444	0	True				
ANR	2304686	Identifier	Canceled		2304444	0					
ANR	2304687	BreakStatement	break ;	788:6:19159:19164	2304444	1	True				
ANR	2304688	ExpressionStatement	Page ++	790:4:19171:19178	2304444	1	True				
ANR	2304689	PostIncDecOperationExpression	Page ++		2304444	0					
ANR	2304690	Identifier	Page		2304444	0					
ANR	2304691	IncDec	++		2304444	1					
ANR	2304692	ExpressionStatement	"fprintf ( stderr , ""PAGE: %d %d\\n"" , Page , header . NumCopies )"	792:4:19185:19241	2304444	2	True				
ANR	2304693	CallExpression	"fprintf ( stderr , ""PAGE: %d %d\\n"" , Page , header . NumCopies )"		2304444	0					
ANR	2304694	Callee	fprintf		2304444	0					
ANR	2304695	Identifier	fprintf		2304444	0					
ANR	2304696	ArgumentList	stderr		2304444	1					
ANR	2304697	Argument	stderr		2304444	0					
ANR	2304698	Identifier	stderr		2304444	0					
ANR	2304699	Argument	"""PAGE: %d %d\\n"""		2304444	1					
ANR	2304700	PrimaryExpression	"""PAGE: %d %d\\n"""		2304444	0					
ANR	2304701	Argument	Page		2304444	2					
ANR	2304702	Identifier	Page		2304444	0					
ANR	2304703	Argument	header . NumCopies		2304444	3					
ANR	2304704	MemberAccess	header . NumCopies		2304444	0					
ANR	2304705	Identifier	header		2304444	0					
ANR	2304706	Identifier	NumCopies		2304444	1					
ANR	2304707	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Starting page %d."" ) , Page )"	793:4:19247:19313	2304444	3	True				
ANR	2304708	CallExpression	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Starting page %d."" ) , Page )"		2304444	0					
ANR	2304709	Callee	_cupsLangPrintFilter		2304444	0					
ANR	2304710	Identifier	_cupsLangPrintFilter		2304444	0					
ANR	2304711	ArgumentList	stderr		2304444	1					
ANR	2304712	Argument	stderr		2304444	0					
ANR	2304713	Identifier	stderr		2304444	0					
ANR	2304714	Argument	"""INFO"""		2304444	1					
ANR	2304715	PrimaryExpression	"""INFO"""		2304444	0					
ANR	2304716	Argument	"_ ( ""Starting page %d."" )"		2304444	2					
ANR	2304717	CallExpression	"_ ( ""Starting page %d."" )"		2304444	0					
ANR	2304718	Callee	_		2304444	0					
ANR	2304719	Identifier	_		2304444	0					
ANR	2304720	ArgumentList	"""Starting page %d."""		2304444	1					
ANR	2304721	Argument	"""Starting page %d."""		2304444	0					
ANR	2304722	PrimaryExpression	"""Starting page %d."""		2304444	0					
ANR	2304723	Argument	Page		2304444	3					
ANR	2304724	Identifier	Page		2304444	0					
ANR	2304725	ExpressionStatement	"StartPage ( ppd , & header )"	799:4:19358:19381	2304444	4	True				
ANR	2304726	CallExpression	"StartPage ( ppd , & header )"		2304444	0					
ANR	2304727	Callee	StartPage		2304444	0					
ANR	2304728	Identifier	StartPage		2304444	0					
ANR	2304729	ArgumentList	ppd		2304444	1					
ANR	2304730	Argument	ppd		2304444	0					
ANR	2304731	Identifier	ppd		2304444	0					
ANR	2304732	Argument	& header		2304444	1					
ANR	2304733	UnaryOperationExpression	& header		2304444	0					
ANR	2304734	UnaryOperator	&		2304444	0					
ANR	2304735	Identifier	header		2304444	1					
ANR	2304736	ForStatement	for ( y = 0 ; y < header . cupsHeight ; y ++ )		2304444	5					
ANR	2304737	ForInit	y = 0 ;	805:9:19447:19452	2304444	0	True				
ANR	2304738	AssignmentExpression	y = 0		2304444	0		=			
ANR	2304739	Identifier	y		2304444	0					
ANR	2304740	PrimaryExpression	0		2304444	1					
ANR	2304741	Condition	y < header . cupsHeight	805:16:19454:19474	2304444	1	True				
ANR	2304742	RelationalExpression	y < header . cupsHeight		2304444	0		<			
ANR	2304743	Identifier	y		2304444	0					
ANR	2304744	MemberAccess	header . cupsHeight		2304444	1					
ANR	2304745	Identifier	header		2304444	0					
ANR	2304746	Identifier	cupsHeight		2304444	1					
ANR	2304747	PostIncDecOperationExpression	y ++	805:39:19477:19480	2304444	2	True				
ANR	2304748	Identifier	y		2304444	0					
ANR	2304749	IncDec	++		2304444	1					
ANR	2304750	CompoundStatement		125:4:2513:2513	2304444	3					
ANR	2304751	IfStatement	if ( Canceled )		2304444	0					
ANR	2304752	Condition	Canceled	811:10:19573:19580	2304444	0	True				
ANR	2304753	Identifier	Canceled		2304444	0					
ANR	2304754	BreakStatement	break ;	812:1:19584:19589	2304444	1	True				
ANR	2304755	IfStatement	if ( ( y & 127 ) == 0 )		2304444	1					
ANR	2304756	Condition	( y & 127 ) == 0	814:10:19602:19615	2304444	0	True				
ANR	2304757	EqualityExpression	( y & 127 ) == 0		2304444	0		==			
ANR	2304758	BitAndExpression	y & 127		2304444	0		&			
ANR	2304759	Identifier	y		2304444	0					
ANR	2304760	PrimaryExpression	127		2304444	1					
ANR	2304761	PrimaryExpression	0		2304444	1					
ANR	2304762	CompoundStatement		134:6:2650:2650	2304444	1					
ANR	2304763	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Printing page %d, %d%% complete."" ) , Page , 100 * y / header . cupsHeight )"	816:8:19634:19774	2304444	0	True				
ANR	2304764	CallExpression	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Printing page %d, %d%% complete."" ) , Page , 100 * y / header . cupsHeight )"		2304444	0					
ANR	2304765	Callee	_cupsLangPrintFilter		2304444	0					
ANR	2304766	Identifier	_cupsLangPrintFilter		2304444	0					
ANR	2304767	ArgumentList	stderr		2304444	1					
ANR	2304768	Argument	stderr		2304444	0					
ANR	2304769	Identifier	stderr		2304444	0					
ANR	2304770	Argument	"""INFO"""		2304444	1					
ANR	2304771	PrimaryExpression	"""INFO"""		2304444	0					
ANR	2304772	Argument	"_ ( ""Printing page %d, %d%% complete."" )"		2304444	2					
ANR	2304773	CallExpression	"_ ( ""Printing page %d, %d%% complete."" )"		2304444	0					
ANR	2304774	Callee	_		2304444	0					
ANR	2304775	Identifier	_		2304444	0					
ANR	2304776	ArgumentList	"""Printing page %d, %d%% complete."""		2304444	1					
ANR	2304777	Argument	"""Printing page %d, %d%% complete."""		2304444	0					
ANR	2304778	PrimaryExpression	"""Printing page %d, %d%% complete."""		2304444	0					
ANR	2304779	Argument	Page		2304444	3					
ANR	2304780	Identifier	Page		2304444	0					
ANR	2304781	Argument	100 * y / header . cupsHeight		2304444	4					
ANR	2304782	MultiplicativeExpression	100 * y / header . cupsHeight		2304444	0		*			
ANR	2304783	PrimaryExpression	100		2304444	0					
ANR	2304784	MultiplicativeExpression	y / header . cupsHeight		2304444	1		/			
ANR	2304785	Identifier	y		2304444	0					
ANR	2304786	MemberAccess	header . cupsHeight		2304444	1					
ANR	2304787	Identifier	header		2304444	0					
ANR	2304788	Identifier	cupsHeight		2304444	1					
ANR	2304789	ExpressionStatement	"fprintf ( stderr , ""ATTR: job-media-progress=%d\\n"" , 100 * y / header . cupsHeight )"	819:8:19784:19863	2304444	1	True				
ANR	2304790	CallExpression	"fprintf ( stderr , ""ATTR: job-media-progress=%d\\n"" , 100 * y / header . cupsHeight )"		2304444	0					
ANR	2304791	Callee	fprintf		2304444	0					
ANR	2304792	Identifier	fprintf		2304444	0					
ANR	2304793	ArgumentList	stderr		2304444	1					
ANR	2304794	Argument	stderr		2304444	0					
ANR	2304795	Identifier	stderr		2304444	0					
ANR	2304796	Argument	"""ATTR: job-media-progress=%d\\n"""		2304444	1					
ANR	2304797	PrimaryExpression	"""ATTR: job-media-progress=%d\\n"""		2304444	0					
ANR	2304798	Argument	100 * y / header . cupsHeight		2304444	2					
ANR	2304799	MultiplicativeExpression	100 * y / header . cupsHeight		2304444	0		*			
ANR	2304800	PrimaryExpression	100		2304444	0					
ANR	2304801	MultiplicativeExpression	y / header . cupsHeight		2304444	1		/			
ANR	2304802	Identifier	y		2304444	0					
ANR	2304803	MemberAccess	header . cupsHeight		2304444	1					
ANR	2304804	Identifier	header		2304444	0					
ANR	2304805	Identifier	cupsHeight		2304444	1					
ANR	2304806	IfStatement	"if ( cupsRasterReadPixels ( ras , Planes [ 0 ] , header . cupsBytesPerLine ) < 1 )"		2304444	2					
ANR	2304807	Condition	"cupsRasterReadPixels ( ras , Planes [ 0 ] , header . cupsBytesPerLine ) < 1"	827:10:19937:20001	2304444	0	True				
ANR	2304808	RelationalExpression	"cupsRasterReadPixels ( ras , Planes [ 0 ] , header . cupsBytesPerLine ) < 1"		2304444	0		<			
ANR	2304809	CallExpression	"cupsRasterReadPixels ( ras , Planes [ 0 ] , header . cupsBytesPerLine )"		2304444	0					
ANR	2304810	Callee	cupsRasterReadPixels		2304444	0					
ANR	2304811	Identifier	cupsRasterReadPixels		2304444	0					
ANR	2304812	ArgumentList	ras		2304444	1					
ANR	2304813	Argument	ras		2304444	0					
ANR	2304814	Identifier	ras		2304444	0					
ANR	2304815	Argument	Planes [ 0 ]		2304444	1					
ANR	2304816	ArrayIndexing	Planes [ 0 ]		2304444	0					
ANR	2304817	Identifier	Planes		2304444	0					
ANR	2304818	PrimaryExpression	0		2304444	1					
ANR	2304819	Argument	header . cupsBytesPerLine		2304444	2					
ANR	2304820	MemberAccess	header . cupsBytesPerLine		2304444	0					
ANR	2304821	Identifier	header		2304444	0					
ANR	2304822	Identifier	cupsBytesPerLine		2304444	1					
ANR	2304823	PrimaryExpression	1		2304444	1					
ANR	2304824	BreakStatement	break ;	828:8:20012:20017	2304444	1	True				
ANR	2304825	IfStatement	"if ( Planes [ 0 ] [ 0 ] || memcmp ( Planes [ 0 ] , Planes [ 0 ] + 1 , header . cupsBytesPerLine - 1 ) )"		2304444	3					
ANR	2304826	Condition	"Planes [ 0 ] [ 0 ] || memcmp ( Planes [ 0 ] , Planes [ 0 ] + 1 , header . cupsBytesPerLine - 1 )"	834:10:20117:20203	2304444	0	True				
ANR	2304827	OrExpression	"Planes [ 0 ] [ 0 ] || memcmp ( Planes [ 0 ] , Planes [ 0 ] + 1 , header . cupsBytesPerLine - 1 )"		2304444	0		||			
ANR	2304828	ArrayIndexing	Planes [ 0 ] [ 0 ]		2304444	0					
ANR	2304829	ArrayIndexing	Planes [ 0 ]		2304444	0					
ANR	2304830	Identifier	Planes		2304444	0					
ANR	2304831	PrimaryExpression	0		2304444	1					
ANR	2304832	PrimaryExpression	0		2304444	1					
ANR	2304833	CallExpression	"memcmp ( Planes [ 0 ] , Planes [ 0 ] + 1 , header . cupsBytesPerLine - 1 )"		2304444	1					
ANR	2304834	Callee	memcmp		2304444	0					
ANR	2304835	Identifier	memcmp		2304444	0					
ANR	2304836	ArgumentList	Planes [ 0 ]		2304444	1					
ANR	2304837	Argument	Planes [ 0 ]		2304444	0					
ANR	2304838	ArrayIndexing	Planes [ 0 ]		2304444	0					
ANR	2304839	Identifier	Planes		2304444	0					
ANR	2304840	PrimaryExpression	0		2304444	1					
ANR	2304841	Argument	Planes [ 0 ] + 1		2304444	1					
ANR	2304842	AdditiveExpression	Planes [ 0 ] + 1		2304444	0		+			
ANR	2304843	ArrayIndexing	Planes [ 0 ]		2304444	0					
ANR	2304844	Identifier	Planes		2304444	0					
ANR	2304845	PrimaryExpression	0		2304444	1					
ANR	2304846	PrimaryExpression	1		2304444	1					
ANR	2304847	Argument	header . cupsBytesPerLine - 1		2304444	2					
ANR	2304848	AdditiveExpression	header . cupsBytesPerLine - 1		2304444	0		-			
ANR	2304849	MemberAccess	header . cupsBytesPerLine		2304444	0					
ANR	2304850	Identifier	header		2304444	0					
ANR	2304851	Identifier	cupsBytesPerLine		2304444	1					
ANR	2304852	PrimaryExpression	1		2304444	1					
ANR	2304853	ExpressionStatement	OutputLine ( & header )	836:8:20214:20233	2304444	1	True				
ANR	2304854	CallExpression	OutputLine ( & header )		2304444	0					
ANR	2304855	Callee	OutputLine		2304444	0					
ANR	2304856	Identifier	OutputLine		2304444	0					
ANR	2304857	ArgumentList	& header		2304444	1					
ANR	2304858	Argument	& header		2304444	0					
ANR	2304859	UnaryOperationExpression	& header		2304444	0					
ANR	2304860	UnaryOperator	&		2304444	0					
ANR	2304861	Identifier	header		2304444	1					
ANR	2304862	ElseStatement	else		2304444	0					
ANR	2304863	ExpressionStatement	Feed ++	838:8:20254:20261	2304444	0	True				
ANR	2304864	PostIncDecOperationExpression	Feed ++		2304444	0					
ANR	2304865	Identifier	Feed		2304444	0					
ANR	2304866	IncDec	++		2304444	1					
ANR	2304867	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Finished page %d."" ) , Page )"	845:4:20312:20378	2304444	6	True				
ANR	2304868	CallExpression	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Finished page %d."" ) , Page )"		2304444	0					
ANR	2304869	Callee	_cupsLangPrintFilter		2304444	0					
ANR	2304870	Identifier	_cupsLangPrintFilter		2304444	0					
ANR	2304871	ArgumentList	stderr		2304444	1					
ANR	2304872	Argument	stderr		2304444	0					
ANR	2304873	Identifier	stderr		2304444	0					
ANR	2304874	Argument	"""INFO"""		2304444	1					
ANR	2304875	PrimaryExpression	"""INFO"""		2304444	0					
ANR	2304876	Argument	"_ ( ""Finished page %d."" )"		2304444	2					
ANR	2304877	CallExpression	"_ ( ""Finished page %d."" )"		2304444	0					
ANR	2304878	Callee	_		2304444	0					
ANR	2304879	Identifier	_		2304444	0					
ANR	2304880	ArgumentList	"""Finished page %d."""		2304444	1					
ANR	2304881	Argument	"""Finished page %d."""		2304444	0					
ANR	2304882	PrimaryExpression	"""Finished page %d."""		2304444	0					
ANR	2304883	Argument	Page		2304444	3					
ANR	2304884	Identifier	Page		2304444	0					
ANR	2304885	ExpressionStatement	EndPage ( )	847:4:20385:20394	2304444	7	True				
ANR	2304886	CallExpression	EndPage ( )		2304444	0					
ANR	2304887	Callee	EndPage		2304444	0					
ANR	2304888	Identifier	EndPage		2304444	0					
ANR	2304889	ArgumentList			2304444	1					
ANR	2304890	IfStatement	if ( Canceled )		2304444	8					
ANR	2304891	Condition	Canceled	849:8:20405:20412	2304444	0	True				
ANR	2304892	Identifier	Canceled		2304444	0					
ANR	2304893	BreakStatement	break ;	850:6:20421:20426	2304444	1	True				
ANR	2304894	ExpressionStatement	Shutdown ( )	857:2:20473:20483	2304444	17	True				
ANR	2304895	CallExpression	Shutdown ( )		2304444	0					
ANR	2304896	Callee	Shutdown		2304444	0					
ANR	2304897	Identifier	Shutdown		2304444	0					
ANR	2304898	ArgumentList			2304444	1					
ANR	2304899	IfStatement	if ( ppd )		2304444	18					
ANR	2304900	Condition	ppd	859:6:20492:20494	2304444	0	True				
ANR	2304901	Identifier	ppd		2304444	0					
ANR	2304902	ExpressionStatement	ppdClose ( ppd )	860:4:20501:20514	2304444	1	True				
ANR	2304903	CallExpression	ppdClose ( ppd )		2304444	0					
ANR	2304904	Callee	ppdClose		2304444	0					
ANR	2304905	Identifier	ppdClose		2304444	0					
ANR	2304906	ArgumentList	ppd		2304444	1					
ANR	2304907	Argument	ppd		2304444	0					
ANR	2304908	Identifier	ppd		2304444	0					
ANR	2304909	ExpressionStatement	cupsRasterClose ( ras )	866:2:20560:20580	2304444	19	True				
ANR	2304910	CallExpression	cupsRasterClose ( ras )		2304444	0					
ANR	2304911	Callee	cupsRasterClose		2304444	0					
ANR	2304912	Identifier	cupsRasterClose		2304444	0					
ANR	2304913	ArgumentList	ras		2304444	1					
ANR	2304914	Argument	ras		2304444	0					
ANR	2304915	Identifier	ras		2304444	0					
ANR	2304916	IfStatement	if ( fd != 0 )		2304444	20					
ANR	2304917	Condition	fd != 0	867:6:20588:20594	2304444	0	True				
ANR	2304918	EqualityExpression	fd != 0		2304444	0		!=			
ANR	2304919	Identifier	fd		2304444	0					
ANR	2304920	PrimaryExpression	0		2304444	1					
ANR	2304921	ExpressionStatement	close ( fd )	868:4:20601:20610	2304444	1	True				
ANR	2304922	CallExpression	close ( fd )		2304444	0					
ANR	2304923	Callee	close		2304444	0					
ANR	2304924	Identifier	close		2304444	0					
ANR	2304925	ArgumentList	fd		2304444	1					
ANR	2304926	Argument	fd		2304444	0					
ANR	2304927	Identifier	fd		2304444	0					
ANR	2304928	IfStatement	if ( Page == 0 )		2304444	21					
ANR	2304929	Condition	Page == 0	874:6:20684:20692	2304444	0	True				
ANR	2304930	EqualityExpression	Page == 0		2304444	0		==			
ANR	2304931	Identifier	Page		2304444	0					
ANR	2304932	PrimaryExpression	0		2304444	1					
ANR	2304933	CompoundStatement		194:2:3723:3723	2304444	1					
ANR	2304934	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""No pages were found."" ) )"	876:4:20703:20767	2304444	0	True				
ANR	2304935	CallExpression	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""No pages were found."" ) )"		2304444	0					
ANR	2304936	Callee	_cupsLangPrintFilter		2304444	0					
ANR	2304937	Identifier	_cupsLangPrintFilter		2304444	0					
ANR	2304938	ArgumentList	stderr		2304444	1					
ANR	2304939	Argument	stderr		2304444	0					
ANR	2304940	Identifier	stderr		2304444	0					
ANR	2304941	Argument	"""ERROR"""		2304444	1					
ANR	2304942	PrimaryExpression	"""ERROR"""		2304444	0					
ANR	2304943	Argument	"_ ( ""No pages were found."" )"		2304444	2					
ANR	2304944	CallExpression	"_ ( ""No pages were found."" )"		2304444	0					
ANR	2304945	Callee	_		2304444	0					
ANR	2304946	Identifier	_		2304444	0					
ANR	2304947	ArgumentList	"""No pages were found."""		2304444	1					
ANR	2304948	Argument	"""No pages were found."""		2304444	0					
ANR	2304949	PrimaryExpression	"""No pages were found."""		2304444	0					
ANR	2304950	ReturnStatement	return ( 1 ) ;	877:4:20773:20783	2304444	1	True				
ANR	2304951	PrimaryExpression	1		2304444	0					
ANR	2304952	ElseStatement	else		2304444	0					
ANR	2304953	ReturnStatement	return ( 0 ) ;	880:4:20800:20810	2304444	0	True				
ANR	2304954	PrimaryExpression	0		2304444	0					
ANR	2304955	ReturnType	int		2304444	1					
ANR	2304956	Identifier	main		2304444	2					
ANR	2304957	ParameterList	"int argc , char * argv [ ]"		2304444	3					
ANR	2304958	Parameter	int argc	680:5:16862:16870	2304444	0	True				
ANR	2304959	ParameterType	int		2304444	0					
ANR	2304960	Identifier	argc		2304444	1					
ANR	2304961	Parameter	char * argv [ ]	681:5:16924:16935	2304444	1	True				
ANR	2304962	ParameterType	char * [ ]		2304444	0					
ANR	2304963	Identifier	argv		2304444	1					
ANR	2304964	CFGEntryNode	ENTRY		2304444		True				
ANR	2304965	CFGExitNode	EXIT		2304444		True				
ANR	2304966	Symbol	ppdOpenFile		2304444						
ANR	2304967	Symbol	& linenum		2304444						
ANR	2304968	Symbol	ppdErrorString		2304444						
ANR	2304969	Symbol	* argv		2304444						
ANR	2304970	Symbol	Page		2304444						
ANR	2304971	Symbol	header . cupsBytesPerLine		2304444						
ANR	2304972	Symbol	argv		2304444						
ANR	2304973	Symbol	header . NumCopies		2304444						
ANR	2304974	Symbol	memcmp		2304444						
ANR	2304975	Symbol	Planes		2304444						
ANR	2304976	Symbol	* * Planes		2304444						
ANR	2304977	Symbol	action		2304444						
ANR	2304978	Symbol	linenum		2304444						
ANR	2304979	Symbol	CancelJob		2304444						
ANR	2304980	Symbol	SIGTERM		2304444						
ANR	2304981	Symbol	CUPS_RASTER_READ		2304444						
ANR	2304982	Symbol	_		2304444						
ANR	2304983	Symbol	getenv		2304444						
ANR	2304984	Symbol	Feed		2304444						
ANR	2304985	Symbol	argc		2304444						
ANR	2304986	Symbol	NULL		2304444						
ANR	2304987	Symbol	ras		2304444						
ANR	2304988	Symbol	ppd		2304444						
ANR	2304989	Symbol	cupsRasterReadHeader2		2304444						
ANR	2304990	Symbol	stderr		2304444						
ANR	2304991	Symbol	& header		2304444						
ANR	2304992	Symbol	header . cupsHeight		2304444						
ANR	2304993	Symbol	* Planes		2304444						
ANR	2304994	Symbol	O_RDONLY		2304444						
ANR	2304995	Symbol	cupsRasterOpen		2304444						
ANR	2304996	Symbol	ppdLastError		2304444						
ANR	2304997	Symbol	header		2304444						
ANR	2304998	Symbol	y		2304444						
ANR	2304999	Symbol	Canceled		2304444						
ANR	2305000	Symbol	fd		2304444						
ANR	2305001	Symbol	open		2304444						
ANR	2305002	Symbol	cupsRasterReadPixels		2304444						
ANR	2305003	Symbol	status		2304444						
