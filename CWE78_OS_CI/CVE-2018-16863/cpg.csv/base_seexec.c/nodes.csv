command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1370052	File	data/converged/CVE-2018-16863_ghostpdl/base_seexec.c								
ANR	1370053	Function	s_exE_process	33:0:982:1554							
ANR	1370054	FunctionDef	"s_exE_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last)"		1370053	0					
ANR	1370055	CompoundStatement		36:0:1102:1554	1370053	0					
ANR	1370056	Statement	stream_exE_state	37:4:1108:1123	1370053	0	True				
ANR	1370057	Statement	*	37:21:1125:1125	1370053	1	True				
ANR	1370058	Statement	const	37:22:1126:1130	1370053	2	True				
ANR	1370059	ExpressionStatement	ss = ( stream_exE_state * ) st	37:28:1132:1160	1370053	3	True				
ANR	1370060	AssignmentExpression	ss = ( stream_exE_state * ) st		1370053	0		=			
ANR	1370061	Identifier	ss		1370053	0					
ANR	1370062	CastExpression	( stream_exE_state * ) st		1370053	1					
ANR	1370063	CastTarget	stream_exE_state *		1370053	0					
ANR	1370064	Identifier	st		1370053	1					
ANR	1370065	IdentifierDeclStatement	const byte * p = pr -> ptr ;	38:4:1166:1189	1370053	4	True				
ANR	1370066	IdentifierDecl	* p = pr -> ptr		1370053	0					
ANR	1370067	IdentifierDeclType	const byte *		1370053	0					
ANR	1370068	Identifier	p		1370053	1					
ANR	1370069	AssignmentExpression	* p = pr -> ptr		1370053	2		=			
ANR	1370070	Identifier	p		1370053	0					
ANR	1370071	PtrMemberAccess	pr -> ptr		1370053	1					
ANR	1370072	Identifier	pr		1370053	0					
ANR	1370073	Identifier	ptr		1370053	1					
ANR	1370074	IdentifierDeclStatement	byte * q = pw -> ptr ;	39:4:1195:1212	1370053	5	True				
ANR	1370075	IdentifierDecl	* q = pw -> ptr		1370053	0					
ANR	1370076	IdentifierDeclType	byte *		1370053	0					
ANR	1370077	Identifier	q		1370053	1					
ANR	1370078	AssignmentExpression	* q = pw -> ptr		1370053	2		=			
ANR	1370079	Identifier	q		1370053	0					
ANR	1370080	PtrMemberAccess	pw -> ptr		1370053	1					
ANR	1370081	Identifier	pw		1370053	0					
ANR	1370082	Identifier	ptr		1370053	1					
ANR	1370083	IdentifierDeclStatement	uint rcount = pr -> limit - p ;	40:4:1218:1245	1370053	6	True				
ANR	1370084	IdentifierDecl	rcount = pr -> limit - p		1370053	0					
ANR	1370085	IdentifierDeclType	uint		1370053	0					
ANR	1370086	Identifier	rcount		1370053	1					
ANR	1370087	AssignmentExpression	rcount = pr -> limit - p		1370053	2		=			
ANR	1370088	Identifier	rcount		1370053	0					
ANR	1370089	AdditiveExpression	pr -> limit - p		1370053	1		-			
ANR	1370090	PtrMemberAccess	pr -> limit		1370053	0					
ANR	1370091	Identifier	pr		1370053	0					
ANR	1370092	Identifier	limit		1370053	1					
ANR	1370093	Identifier	p		1370053	1					
ANR	1370094	IdentifierDeclStatement	uint wcount = pw -> limit - q ;	41:4:1251:1278	1370053	7	True				
ANR	1370095	IdentifierDecl	wcount = pw -> limit - q		1370053	0					
ANR	1370096	IdentifierDeclType	uint		1370053	0					
ANR	1370097	Identifier	wcount		1370053	1					
ANR	1370098	AssignmentExpression	wcount = pw -> limit - q		1370053	2		=			
ANR	1370099	Identifier	wcount		1370053	0					
ANR	1370100	AdditiveExpression	pw -> limit - q		1370053	1		-			
ANR	1370101	PtrMemberAccess	pw -> limit		1370053	0					
ANR	1370102	Identifier	pw		1370053	0					
ANR	1370103	Identifier	limit		1370053	1					
ANR	1370104	Identifier	q		1370053	1					
ANR	1370105	IdentifierDeclStatement	uint count ;	42:4:1284:1294	1370053	8	True				
ANR	1370106	IdentifierDecl	count		1370053	0					
ANR	1370107	IdentifierDeclType	uint		1370053	0					
ANR	1370108	Identifier	count		1370053	1					
ANR	1370109	IdentifierDeclStatement	int status ;	43:4:1300:1310	1370053	9	True				
ANR	1370110	IdentifierDecl	status		1370053	0					
ANR	1370111	IdentifierDeclType	int		1370053	0					
ANR	1370112	Identifier	status		1370053	1					
ANR	1370113	IfStatement	if ( rcount <= wcount )		1370053	10					
ANR	1370114	Condition	rcount <= wcount	45:8:1321:1336	1370053	0	True				
ANR	1370115	RelationalExpression	rcount <= wcount		1370053	0		<=			
ANR	1370116	Identifier	rcount		1370053	0					
ANR	1370117	Identifier	wcount		1370053	1					
ANR	1370118	ExpressionStatement	"count = rcount , status = 0"	46:8:1347:1373	1370053	1	True				
ANR	1370119	Expression	"count = rcount , status = 0"		1370053	0					
ANR	1370120	AssignmentExpression	count = rcount		1370053	0		=			
ANR	1370121	Identifier	count		1370053	0					
ANR	1370122	Identifier	rcount		1370053	1					
ANR	1370123	AssignmentExpression	status = 0		1370053	1		=			
ANR	1370124	Identifier	status		1370053	0					
ANR	1370125	PrimaryExpression	0		1370053	1					
ANR	1370126	ElseStatement	else		1370053	0					
ANR	1370127	ExpressionStatement	"count = wcount , status = 1"	48:8:1392:1418	1370053	0	True				
ANR	1370128	Expression	"count = wcount , status = 1"		1370053	0					
ANR	1370129	AssignmentExpression	count = wcount		1370053	0		=			
ANR	1370130	Identifier	count		1370053	0					
ANR	1370131	Identifier	wcount		1370053	1					
ANR	1370132	AssignmentExpression	status = 1		1370053	1		=			
ANR	1370133	Identifier	status		1370053	0					
ANR	1370134	PrimaryExpression	1		1370053	1					
ANR	1370135	ExpressionStatement	"gs_type1_encrypt ( q + 1 , p + 1 , count , ( crypt_state * ) & ss -> cstate )"	49:4:1424:1489	1370053	11	True				
ANR	1370136	CallExpression	"gs_type1_encrypt ( q + 1 , p + 1 , count , ( crypt_state * ) & ss -> cstate )"		1370053	0					
ANR	1370137	Callee	gs_type1_encrypt		1370053	0					
ANR	1370138	Identifier	gs_type1_encrypt		1370053	0					
ANR	1370139	ArgumentList	q + 1		1370053	1					
ANR	1370140	Argument	q + 1		1370053	0					
ANR	1370141	AdditiveExpression	q + 1		1370053	0		+			
ANR	1370142	Identifier	q		1370053	0					
ANR	1370143	PrimaryExpression	1		1370053	1					
ANR	1370144	Argument	p + 1		1370053	1					
ANR	1370145	AdditiveExpression	p + 1		1370053	0		+			
ANR	1370146	Identifier	p		1370053	0					
ANR	1370147	PrimaryExpression	1		1370053	1					
ANR	1370148	Argument	count		1370053	2					
ANR	1370149	Identifier	count		1370053	0					
ANR	1370150	Argument	( crypt_state * ) & ss -> cstate		1370053	3					
ANR	1370151	CastExpression	( crypt_state * ) & ss -> cstate		1370053	0					
ANR	1370152	CastTarget	crypt_state *		1370053	0					
ANR	1370153	UnaryOperationExpression	& ss -> cstate		1370053	1					
ANR	1370154	UnaryOperator	&		1370053	0					
ANR	1370155	PtrMemberAccess	ss -> cstate		1370053	1					
ANR	1370156	Identifier	ss		1370053	0					
ANR	1370157	Identifier	cstate		1370053	1					
ANR	1370158	ExpressionStatement	pr -> ptr += count	50:4:1495:1511	1370053	12	True				
ANR	1370159	AssignmentExpression	pr -> ptr += count		1370053	0		+=			
ANR	1370160	PtrMemberAccess	pr -> ptr		1370053	0					
ANR	1370161	Identifier	pr		1370053	0					
ANR	1370162	Identifier	ptr		1370053	1					
ANR	1370163	Identifier	count		1370053	1					
ANR	1370164	ExpressionStatement	pw -> ptr += count	51:4:1517:1533	1370053	13	True				
ANR	1370165	AssignmentExpression	pw -> ptr += count		1370053	0		+=			
ANR	1370166	PtrMemberAccess	pw -> ptr		1370053	0					
ANR	1370167	Identifier	pw		1370053	0					
ANR	1370168	Identifier	ptr		1370053	1					
ANR	1370169	Identifier	count		1370053	1					
ANR	1370170	ReturnStatement	return status ;	52:4:1539:1552	1370053	14	True				
ANR	1370171	Identifier	status		1370053	0					
ANR	1370172	ReturnType	static int		1370053	1					
ANR	1370173	Identifier	s_exE_process		1370053	2					
ANR	1370174	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last"		1370053	3					
ANR	1370175	Parameter	stream_state * st	34:14:1007:1023	1370053	0	True				
ANR	1370176	ParameterType	stream_state *		1370053	0					
ANR	1370177	Identifier	st		1370053	1					
ANR	1370178	Parameter	stream_cursor_read * pr	34:33:1026:1048	1370053	1	True				
ANR	1370179	ParameterType	stream_cursor_read *		1370053	0					
ANR	1370180	Identifier	pr		1370053	1					
ANR	1370181	Parameter	stream_cursor_write * pw	35:14:1065:1088	1370053	2	True				
ANR	1370182	ParameterType	stream_cursor_write *		1370053	0					
ANR	1370183	Identifier	pw		1370053	1					
ANR	1370184	Parameter	bool last	35:40:1091:1099	1370053	3	True				
ANR	1370185	ParameterType	bool		1370053	0					
ANR	1370186	Identifier	last		1370053	1					
ANR	1370187	CFGEntryNode	ENTRY		1370053		True				
ANR	1370188	CFGExitNode	EXIT		1370053		True				
ANR	1370189	Symbol	ss		1370053						
ANR	1370190	Symbol	wcount		1370053						
ANR	1370191	Symbol	st		1370053						
ANR	1370192	Symbol	& ss -> cstate		1370053						
ANR	1370193	Symbol	pr		1370053						
ANR	1370194	Symbol	last		1370053						
ANR	1370195	Symbol	pw		1370053						
ANR	1370196	Symbol	count		1370053						
ANR	1370197	Symbol	* pr		1370053						
ANR	1370198	Symbol	pr -> limit		1370053						
ANR	1370199	Symbol	* pw		1370053						
ANR	1370200	Symbol	p		1370053						
ANR	1370201	Symbol	pw -> limit		1370053						
ANR	1370202	Symbol	q		1370053						
ANR	1370203	Symbol	rcount		1370053						
ANR	1370204	Symbol	pr -> ptr		1370053						
ANR	1370205	Symbol	pw -> ptr		1370053						
ANR	1370206	Symbol	status		1370053						
ANR	1370207	DeclStmt									
ANR	1370208	Decl							const stream_template	const stream_template	s_exE_template
ANR	1370209	Function	s_exD_set_defaults	65:0:1747:2076							
ANR	1370210	FunctionDef	s_exD_set_defaults (stream_state * st)		1370209	0					
ANR	1370211	CompoundStatement		67:0:1797:2076	1370209	0					
ANR	1370212	Statement	stream_exD_state	68:4:1803:1818	1370209	0	True				
ANR	1370213	Statement	*	68:21:1820:1820	1370209	1	True				
ANR	1370214	Statement	const	68:22:1821:1825	1370209	2	True				
ANR	1370215	ExpressionStatement	ss = ( stream_exD_state * ) st	68:28:1827:1855	1370209	3	True				
ANR	1370216	AssignmentExpression	ss = ( stream_exD_state * ) st		1370209	0		=			
ANR	1370217	Identifier	ss		1370209	0					
ANR	1370218	CastExpression	( stream_exD_state * ) st		1370209	1					
ANR	1370219	CastTarget	stream_exD_state *		1370209	0					
ANR	1370220	Identifier	st		1370209	1					
ANR	1370221	ExpressionStatement	ss -> binary = - 1	70:4:1862:1877	1370209	4	True				
ANR	1370222	AssignmentExpression	ss -> binary = - 1		1370209	0		=			
ANR	1370223	PtrMemberAccess	ss -> binary		1370209	0					
ANR	1370224	Identifier	ss		1370209	0					
ANR	1370225	Identifier	binary		1370209	1					
ANR	1370226	UnaryOperationExpression	- 1		1370209	1					
ANR	1370227	UnaryOperator	-		1370209	0					
ANR	1370228	PrimaryExpression	1		1370209	1					
ANR	1370229	ExpressionStatement	ss -> lenIV = 4	71:4:1898:1911	1370209	5	True				
ANR	1370230	AssignmentExpression	ss -> lenIV = 4		1370209	0		=			
ANR	1370231	PtrMemberAccess	ss -> lenIV		1370209	0					
ANR	1370232	Identifier	ss		1370209	0					
ANR	1370233	Identifier	lenIV		1370209	1					
ANR	1370234	PrimaryExpression	4		1370209	1					
ANR	1370235	ExpressionStatement	ss -> hex_left = max_long	72:4:1917:1940	1370209	6	True				
ANR	1370236	AssignmentExpression	ss -> hex_left = max_long		1370209	0		=			
ANR	1370237	PtrMemberAccess	ss -> hex_left		1370209	0					
ANR	1370238	Identifier	ss		1370209	0					
ANR	1370239	Identifier	hex_left		1370209	1					
ANR	1370240	Identifier	max_long		1370209	1					
ANR	1370241	ExpressionStatement	ss -> pfb_state = 0	74:4:1978:1995	1370209	7	True				
ANR	1370242	AssignmentExpression	ss -> pfb_state = 0		1370209	0		=			
ANR	1370243	PtrMemberAccess	ss -> pfb_state		1370209	0					
ANR	1370244	Identifier	ss		1370209	0					
ANR	1370245	Identifier	pfb_state		1370209	1					
ANR	1370246	PrimaryExpression	0		1370209	1					
ANR	1370247	ExpressionStatement	ss -> keep_spaces = false	75:4:2001:2024	1370209	8	True				
ANR	1370248	AssignmentExpression	ss -> keep_spaces = false		1370209	0		=			
ANR	1370249	PtrMemberAccess	ss -> keep_spaces		1370209	0					
ANR	1370250	Identifier	ss		1370209	0					
ANR	1370251	Identifier	keep_spaces		1370209	1					
ANR	1370252	Identifier	false		1370209	1					
ANR	1370253	ExpressionStatement	ss -> is_leading_space = true	76:4:2047:2074	1370209	9	True				
ANR	1370254	AssignmentExpression	ss -> is_leading_space = true		1370209	0		=			
ANR	1370255	PtrMemberAccess	ss -> is_leading_space		1370209	0					
ANR	1370256	Identifier	ss		1370209	0					
ANR	1370257	Identifier	is_leading_space		1370209	1					
ANR	1370258	Identifier	true		1370209	1					
ANR	1370259	ReturnType	static void		1370209	1					
ANR	1370260	Identifier	s_exD_set_defaults		1370209	2					
ANR	1370261	ParameterList	stream_state * st		1370209	3					
ANR	1370262	Parameter	stream_state * st	66:19:1778:1794	1370209	0	True				
ANR	1370263	ParameterType	stream_state *		1370209	0					
ANR	1370264	Identifier	st		1370209	1					
ANR	1370265	CFGEntryNode	ENTRY		1370209		True				
ANR	1370266	CFGExitNode	EXIT		1370209		True				
ANR	1370267	Symbol	ss		1370209						
ANR	1370268	Symbol	ss -> keep_spaces		1370209						
ANR	1370269	Symbol	st		1370209						
ANR	1370270	Symbol	ss -> binary		1370209						
ANR	1370271	Symbol	* ss		1370209						
ANR	1370272	Symbol	ss -> hex_left		1370209						
ANR	1370273	Symbol	ss -> lenIV		1370209						
ANR	1370274	Symbol	max_long		1370209						
ANR	1370275	Symbol	false		1370209						
ANR	1370276	Symbol	true		1370209						
ANR	1370277	Symbol	ss -> is_leading_space		1370209						
ANR	1370278	Symbol	ss -> pfb_state		1370209						
ANR	1370279	Function	s_exD_init	81:0:2181:2341							
ANR	1370280	FunctionDef	s_exD_init (stream_state * st)		1370279	0					
ANR	1370281	CompoundStatement		83:0:2222:2341	1370279	0					
ANR	1370282	Statement	stream_exD_state	84:4:2228:2243	1370279	0	True				
ANR	1370283	Statement	*	84:21:2245:2245	1370279	1	True				
ANR	1370284	Statement	const	84:22:2246:2250	1370279	2	True				
ANR	1370285	ExpressionStatement	ss = ( stream_exD_state * ) st	84:28:2252:2280	1370279	3	True				
ANR	1370286	AssignmentExpression	ss = ( stream_exD_state * ) st		1370279	0		=			
ANR	1370287	Identifier	ss		1370279	0					
ANR	1370288	CastExpression	( stream_exD_state * ) st		1370279	1					
ANR	1370289	CastTarget	stream_exD_state *		1370279	0					
ANR	1370290	Identifier	st		1370279	1					
ANR	1370291	ExpressionStatement	ss -> odd = - 1	86:4:2287:2299	1370279	4	True				
ANR	1370292	AssignmentExpression	ss -> odd = - 1		1370279	0		=			
ANR	1370293	PtrMemberAccess	ss -> odd		1370279	0					
ANR	1370294	Identifier	ss		1370279	0					
ANR	1370295	Identifier	odd		1370279	1					
ANR	1370296	UnaryOperationExpression	- 1		1370279	1					
ANR	1370297	UnaryOperator	-		1370279	0					
ANR	1370298	PrimaryExpression	1		1370279	1					
ANR	1370299	ExpressionStatement	ss -> skip = ss -> lenIV	87:4:2305:2325	1370279	5	True				
ANR	1370300	AssignmentExpression	ss -> skip = ss -> lenIV		1370279	0		=			
ANR	1370301	PtrMemberAccess	ss -> skip		1370279	0					
ANR	1370302	Identifier	ss		1370279	0					
ANR	1370303	Identifier	skip		1370279	1					
ANR	1370304	PtrMemberAccess	ss -> lenIV		1370279	1					
ANR	1370305	Identifier	ss		1370279	0					
ANR	1370306	Identifier	lenIV		1370279	1					
ANR	1370307	ReturnStatement	return 0 ;	88:4:2331:2339	1370279	6	True				
ANR	1370308	PrimaryExpression	0		1370279	0					
ANR	1370309	ReturnType	static int		1370279	1					
ANR	1370310	Identifier	s_exD_init		1370279	2					
ANR	1370311	ParameterList	stream_state * st		1370279	3					
ANR	1370312	Parameter	stream_state * st	82:11:2203:2219	1370279	0	True				
ANR	1370313	ParameterType	stream_state *		1370279	0					
ANR	1370314	Identifier	st		1370279	1					
ANR	1370315	CFGEntryNode	ENTRY		1370279		True				
ANR	1370316	CFGExitNode	EXIT		1370279		True				
ANR	1370317	Symbol	ss		1370279						
ANR	1370318	Symbol	ss -> odd		1370279						
ANR	1370319	Symbol	st		1370279						
ANR	1370320	Symbol	ss -> skip		1370279						
ANR	1370321	Symbol	* ss		1370279						
ANR	1370322	Symbol	ss -> lenIV		1370279						
ANR	1370323	Function	s_exD_process	92:0:2368:6331							
ANR	1370324	FunctionDef	"s_exD_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last)"		1370323	0					
ANR	1370325	CompoundStatement		95:0:2488:6331	1370323	0					
ANR	1370326	Statement	stream_exD_state	96:4:2494:2509	1370323	0	True				
ANR	1370327	Statement	*	96:21:2511:2511	1370323	1	True				
ANR	1370328	Statement	const	96:22:2512:2516	1370323	2	True				
ANR	1370329	ExpressionStatement	ss = ( stream_exD_state * ) st	96:28:2518:2546	1370323	3	True				
ANR	1370330	AssignmentExpression	ss = ( stream_exD_state * ) st		1370323	0		=			
ANR	1370331	Identifier	ss		1370323	0					
ANR	1370332	CastExpression	( stream_exD_state * ) st		1370323	1					
ANR	1370333	CastTarget	stream_exD_state *		1370323	0					
ANR	1370334	Identifier	st		1370323	1					
ANR	1370335	IdentifierDeclStatement	const byte * p = pr -> ptr ;	97:4:2552:2575	1370323	4	True				
ANR	1370336	IdentifierDecl	* p = pr -> ptr		1370323	0					
ANR	1370337	IdentifierDeclType	const byte *		1370323	0					
ANR	1370338	Identifier	p		1370323	1					
ANR	1370339	AssignmentExpression	* p = pr -> ptr		1370323	2		=			
ANR	1370340	Identifier	p		1370323	0					
ANR	1370341	PtrMemberAccess	pr -> ptr		1370323	1					
ANR	1370342	Identifier	pr		1370323	0					
ANR	1370343	Identifier	ptr		1370323	1					
ANR	1370344	IdentifierDeclStatement	byte * q = pw -> ptr ;	98:4:2581:2598	1370323	5	True				
ANR	1370345	IdentifierDecl	* q = pw -> ptr		1370323	0					
ANR	1370346	IdentifierDeclType	byte *		1370323	0					
ANR	1370347	Identifier	q		1370323	1					
ANR	1370348	AssignmentExpression	* q = pw -> ptr		1370323	2		=			
ANR	1370349	Identifier	q		1370323	0					
ANR	1370350	PtrMemberAccess	pw -> ptr		1370323	1					
ANR	1370351	Identifier	pw		1370323	0					
ANR	1370352	Identifier	ptr		1370323	1					
ANR	1370353	IdentifierDeclStatement	int skip = ss -> skip ;	99:4:2604:2623	1370323	6	True				
ANR	1370354	IdentifierDecl	skip = ss -> skip		1370323	0					
ANR	1370355	IdentifierDeclType	int		1370323	0					
ANR	1370356	Identifier	skip		1370323	1					
ANR	1370357	AssignmentExpression	skip = ss -> skip		1370323	2		=			
ANR	1370358	Identifier	skip		1370323	0					
ANR	1370359	PtrMemberAccess	ss -> skip		1370323	1					
ANR	1370360	Identifier	ss		1370323	0					
ANR	1370361	Identifier	skip		1370323	1					
ANR	1370362	IdentifierDeclStatement	int rcount = pr -> limit - p ;	100:4:2629:2655	1370323	7	True				
ANR	1370363	IdentifierDecl	rcount = pr -> limit - p		1370323	0					
ANR	1370364	IdentifierDeclType	int		1370323	0					
ANR	1370365	Identifier	rcount		1370323	1					
ANR	1370366	AssignmentExpression	rcount = pr -> limit - p		1370323	2		=			
ANR	1370367	Identifier	rcount		1370323	0					
ANR	1370368	AdditiveExpression	pr -> limit - p		1370323	1		-			
ANR	1370369	PtrMemberAccess	pr -> limit		1370323	0					
ANR	1370370	Identifier	pr		1370323	0					
ANR	1370371	Identifier	limit		1370323	1					
ANR	1370372	Identifier	p		1370323	1					
ANR	1370373	IdentifierDeclStatement	int wcount = pw -> limit - q ;	101:4:2661:2687	1370323	8	True				
ANR	1370374	IdentifierDecl	wcount = pw -> limit - q		1370323	0					
ANR	1370375	IdentifierDeclType	int		1370323	0					
ANR	1370376	Identifier	wcount		1370323	1					
ANR	1370377	AssignmentExpression	wcount = pw -> limit - q		1370323	2		=			
ANR	1370378	Identifier	wcount		1370323	0					
ANR	1370379	AdditiveExpression	pw -> limit - q		1370323	1		-			
ANR	1370380	PtrMemberAccess	pw -> limit		1370323	0					
ANR	1370381	Identifier	pw		1370323	0					
ANR	1370382	Identifier	limit		1370323	1					
ANR	1370383	Identifier	q		1370323	1					
ANR	1370384	IdentifierDeclStatement	int status = 0 ;	102:4:2693:2707	1370323	9	True				
ANR	1370385	IdentifierDecl	status = 0		1370323	0					
ANR	1370386	IdentifierDeclType	int		1370323	0					
ANR	1370387	Identifier	status		1370323	1					
ANR	1370388	AssignmentExpression	status = 0		1370323	2		=			
ANR	1370389	Identifier	status		1370323	0					
ANR	1370390	PrimaryExpression	0		1370323	1					
ANR	1370391	IdentifierDeclStatement	"int count = ( wcount < rcount ? ( status = 1 , wcount ) : rcount ) ;"	103:4:2713:2774	1370323	10	True				
ANR	1370392	IdentifierDecl	"count = ( wcount < rcount ? ( status = 1 , wcount ) : rcount )"		1370323	0					
ANR	1370393	IdentifierDeclType	int		1370323	0					
ANR	1370394	Identifier	count		1370323	1					
ANR	1370395	AssignmentExpression	"count = ( wcount < rcount ? ( status = 1 , wcount ) : rcount )"		1370323	2		=			
ANR	1370396	Identifier	count		1370323	0					
ANR	1370397	ConditionalExpression	"wcount < rcount ? ( status = 1 , wcount ) : rcount"		1370323	1					
ANR	1370398	Condition	wcount < rcount		1370323	0					
ANR	1370399	RelationalExpression	wcount < rcount		1370323	0		<			
ANR	1370400	Identifier	wcount		1370323	0					
ANR	1370401	Identifier	rcount		1370323	1					
ANR	1370402	Expression	"status = 1 , wcount"		1370323	1					
ANR	1370403	AssignmentExpression	status = 1		1370323	0		=			
ANR	1370404	Identifier	status		1370323	0					
ANR	1370405	PrimaryExpression	1		1370323	1					
ANR	1370406	Identifier	wcount		1370323	1					
ANR	1370407	Identifier	rcount		1370323	2					
ANR	1370408	IfStatement	if ( ss -> binary < 0 )		1370323	11					
ANR	1370409	Condition	ss -> binary < 0	105:8:2785:2798	1370323	0	True				
ANR	1370410	RelationalExpression	ss -> binary < 0		1370323	0		<			
ANR	1370411	PtrMemberAccess	ss -> binary		1370323	0					
ANR	1370412	Identifier	ss		1370323	0					
ANR	1370413	Identifier	binary		1370323	1					
ANR	1370414	PrimaryExpression	0		1370323	1					
ANR	1370415	CompoundStatement		16:8:465:470	1370323	1					
ANR	1370416	Statement	const	109:8:2899:2903	1370323	0	True				
ANR	1370417	Statement	byte	109:14:2905:2908	1370323	1	True				
ANR	1370418	Statement	*	109:19:2910:2910	1370323	2	True				
ANR	1370419	Statement	const	109:20:2911:2915	1370323	3	True				
ANR	1370420	ExpressionStatement	decoder = scan_char_decoder	109:26:2917:2944	1370323	4	True				
ANR	1370421	AssignmentExpression	decoder = scan_char_decoder		1370323	0		=			
ANR	1370422	Identifier	decoder		1370323	0					
ANR	1370423	Identifier	scan_char_decoder		1370323	1					
ANR	1370424	IdentifierDeclStatement	int i ;	110:8:2954:2959	1370323	5	True				
ANR	1370425	IdentifierDecl	i		1370323	0					
ANR	1370426	IdentifierDeclType	int		1370323	0					
ANR	1370427	Identifier	i		1370323	1					
ANR	1370428	IfStatement	if ( ss -> pfb_state == 0 && ! ss -> keep_spaces )		1370323	6					
ANR	1370429	Condition	ss -> pfb_state == 0 && ! ss -> keep_spaces	112:12:2974:3011	1370323	0	True				
ANR	1370430	AndExpression	ss -> pfb_state == 0 && ! ss -> keep_spaces		1370323	0		&&			
ANR	1370431	EqualityExpression	ss -> pfb_state == 0		1370323	0		==			
ANR	1370432	PtrMemberAccess	ss -> pfb_state		1370323	0					
ANR	1370433	Identifier	ss		1370323	0					
ANR	1370434	Identifier	pfb_state		1370323	1					
ANR	1370435	PrimaryExpression	0		1370323	1					
ANR	1370436	UnaryOperationExpression	! ss -> keep_spaces		1370323	1					
ANR	1370437	UnaryOperator	!		1370323	0					
ANR	1370438	PtrMemberAccess	ss -> keep_spaces		1370323	1					
ANR	1370439	Identifier	ss		1370323	0					
ANR	1370440	Identifier	keep_spaces		1370323	1					
ANR	1370441	CompoundStatement		18:52:525:525	1370323	1					
ANR	1370442	ForStatement	"for ( ; rcount ; rcount -- , p ++ )"		1370323	0					
ANR	1370443	Condition	rcount	118:19:3283:3288	1370323	0	True				
ANR	1370444	Identifier	rcount		1370323	0					
ANR	1370445	Expression	"rcount -- , p ++"	118:27:3291:3303	1370323	1	True				
ANR	1370446	PostIncDecOperationExpression	rcount --		1370323	0					
ANR	1370447	Identifier	rcount		1370323	0					
ANR	1370448	IncDec	--		1370323	1					
ANR	1370449	PostIncDecOperationExpression	p ++		1370323	1					
ANR	1370450	Identifier	p		1370323	0					
ANR	1370451	IncDec	++		1370323	1					
ANR	1370452	CompoundStatement		25:16:835:848	1370323	2					
ANR	1370453	IdentifierDeclStatement	byte c = p [ 1 ] ;	119:16:3324:3337	1370323	0	True				
ANR	1370454	IdentifierDecl	c = p [ 1 ]		1370323	0					
ANR	1370455	IdentifierDeclType	byte		1370323	0					
ANR	1370456	Identifier	c		1370323	1					
ANR	1370457	AssignmentExpression	c = p [ 1 ]		1370323	2		=			
ANR	1370458	Identifier	c		1370323	0					
ANR	1370459	ArrayIndexing	p [ 1 ]		1370323	1					
ANR	1370460	Identifier	p		1370323	0					
ANR	1370461	PrimaryExpression	1		1370323	1					
ANR	1370462	IfStatement	if ( c != '\\t' && c != char_CR && c != char_EOL && c != ' ' )		1370323	1					
ANR	1370463	Condition	c != '\\t' && c != char_CR && c != char_EOL && c != ' '	120:19:3358:3411	1370323	0	True				
ANR	1370464	AndExpression	c != '\\t' && c != char_CR && c != char_EOL && c != ' '		1370323	0		&&			
ANR	1370465	EqualityExpression	c != '\\t'		1370323	0		!=			
ANR	1370466	Identifier	c		1370323	0					
ANR	1370467	PrimaryExpression	'\\t'		1370323	1					
ANR	1370468	AndExpression	c != char_CR && c != char_EOL && c != ' '		1370323	1		&&			
ANR	1370469	EqualityExpression	c != char_CR		1370323	0		!=			
ANR	1370470	Identifier	c		1370323	0					
ANR	1370471	Identifier	char_CR		1370323	1					
ANR	1370472	AndExpression	c != char_EOL && c != ' '		1370323	1		&&			
ANR	1370473	EqualityExpression	c != char_EOL		1370323	0		!=			
ANR	1370474	Identifier	c		1370323	0					
ANR	1370475	Identifier	char_EOL		1370323	1					
ANR	1370476	EqualityExpression	c != ' '		1370323	1		!=			
ANR	1370477	Identifier	c		1370323	0					
ANR	1370478	PrimaryExpression	' '		1370323	1					
ANR	1370479	BreakStatement	break ;	121:20:3434:3439	1370323	1	True				
ANR	1370480	ExpressionStatement	pr -> ptr = p	123:12:3467:3478	1370323	1	True				
ANR	1370481	AssignmentExpression	pr -> ptr = p		1370323	0		=			
ANR	1370482	PtrMemberAccess	pr -> ptr		1370323	0					
ANR	1370483	Identifier	pr		1370323	0					
ANR	1370484	Identifier	ptr		1370323	1					
ANR	1370485	Identifier	p		1370323	1					
ANR	1370486	ExpressionStatement	"count = min ( wcount , rcount )"	124:12:3492:3519	1370323	2	True				
ANR	1370487	AssignmentExpression	"count = min ( wcount , rcount )"		1370323	0		=			
ANR	1370488	Identifier	count		1370323	0					
ANR	1370489	CallExpression	"min ( wcount , rcount )"		1370323	1					
ANR	1370490	Callee	min		1370323	0					
ANR	1370491	Identifier	min		1370323	0					
ANR	1370492	ArgumentList	wcount		1370323	1					
ANR	1370493	Argument	wcount		1370323	0					
ANR	1370494	Identifier	wcount		1370323	0					
ANR	1370495	Argument	rcount		1370323	1					
ANR	1370496	Identifier	rcount		1370323	0					
ANR	1370497	IfStatement	if ( rcount < 8 && ! last )		1370323	7					
ANR	1370498	Condition	rcount < 8 && ! last	134:12:3874:3892	1370323	0	True				
ANR	1370499	AndExpression	rcount < 8 && ! last		1370323	0		&&			
ANR	1370500	RelationalExpression	rcount < 8		1370323	0		<			
ANR	1370501	Identifier	rcount		1370323	0					
ANR	1370502	PrimaryExpression	8		1370323	1					
ANR	1370503	UnaryOperationExpression	! last		1370323	1					
ANR	1370504	UnaryOperator	!		1370323	0					
ANR	1370505	Identifier	last		1370323	1					
ANR	1370506	ReturnStatement	return 0 ;	135:12:3907:3915	1370323	1	True				
ANR	1370507	PrimaryExpression	0		1370323	0					
ANR	1370508	ExpressionStatement	ss -> binary = 0	137:8:3926:3940	1370323	8	True				
ANR	1370509	AssignmentExpression	ss -> binary = 0		1370323	0		=			
ANR	1370510	PtrMemberAccess	ss -> binary		1370323	0					
ANR	1370511	Identifier	ss		1370323	0					
ANR	1370512	Identifier	binary		1370323	1					
ANR	1370513	PrimaryExpression	0		1370323	1					
ANR	1370514	ForStatement	"for ( i = min ( 8 , rcount ) ; i > 0 ; i -- )"		1370323	9					
ANR	1370515	ForInit	"i = min ( 8 , rcount ) ;"	138:13:3955:3973	1370323	0	True				
ANR	1370516	AssignmentExpression	"i = min ( 8 , rcount )"		1370323	0		=			
ANR	1370517	Identifier	i		1370323	0					
ANR	1370518	CallExpression	"min ( 8 , rcount )"		1370323	1					
ANR	1370519	Callee	min		1370323	0					
ANR	1370520	Identifier	min		1370323	0					
ANR	1370521	ArgumentList	8		1370323	1					
ANR	1370522	Argument	8		1370323	0					
ANR	1370523	PrimaryExpression	8		1370323	0					
ANR	1370524	Argument	rcount		1370323	1					
ANR	1370525	Identifier	rcount		1370323	0					
ANR	1370526	Condition	i > 0	138:33:3975:3979	1370323	1	True				
ANR	1370527	RelationalExpression	i > 0		1370323	0		>			
ANR	1370528	Identifier	i		1370323	0					
ANR	1370529	PrimaryExpression	0		1370323	1					
ANR	1370530	PostIncDecOperationExpression	i --	138:40:3982:3984	1370323	2	True				
ANR	1370531	Identifier	i		1370323	0					
ANR	1370532	IncDec	--		1370323	1					
ANR	1370533	IfStatement	if ( ! ( decoder [ p [ i ] ] <= 0xf || decoder [ p [ i ] ] == ctype_space ) )		1370323	3					
ANR	1370534	Condition	! ( decoder [ p [ i ] ] <= 0xf || decoder [ p [ i ] ] == ctype_space )	139:16:4003:4075	1370323	0	True				
ANR	1370535	UnaryOperationExpression	! ( decoder [ p [ i ] ] <= 0xf || decoder [ p [ i ] ] == ctype_space )		1370323	0					
ANR	1370536	UnaryOperator	!		1370323	0					
ANR	1370537	OrExpression	decoder [ p [ i ] ] <= 0xf || decoder [ p [ i ] ] == ctype_space		1370323	1		||			
ANR	1370538	RelationalExpression	decoder [ p [ i ] ] <= 0xf		1370323	0		<=			
ANR	1370539	ArrayIndexing	decoder [ p [ i ] ]		1370323	0					
ANR	1370540	Identifier	decoder		1370323	0					
ANR	1370541	ArrayIndexing	p [ i ]		1370323	1					
ANR	1370542	Identifier	p		1370323	0					
ANR	1370543	Identifier	i		1370323	1					
ANR	1370544	PrimaryExpression	0xf		1370323	1					
ANR	1370545	EqualityExpression	decoder [ p [ i ] ] == ctype_space		1370323	1		==			
ANR	1370546	ArrayIndexing	decoder [ p [ i ] ]		1370323	0					
ANR	1370547	Identifier	decoder		1370323	0					
ANR	1370548	ArrayIndexing	p [ i ]		1370323	1					
ANR	1370549	Identifier	p		1370323	0					
ANR	1370550	Identifier	i		1370323	1					
ANR	1370551	Identifier	ctype_space		1370323	1					
ANR	1370552	CompoundStatement		47:18:1606:1606	1370323	1					
ANR	1370553	ExpressionStatement	ss -> binary = 1	142:16:4113:4127	1370323	0	True				
ANR	1370554	AssignmentExpression	ss -> binary = 1		1370323	0		=			
ANR	1370555	PtrMemberAccess	ss -> binary		1370323	0					
ANR	1370556	Identifier	ss		1370323	0					
ANR	1370557	Identifier	binary		1370323	1					
ANR	1370558	PrimaryExpression	1		1370323	1					
ANR	1370559	BreakStatement	break ;	143:16:4145:4150	1370323	1	True				
ANR	1370560	IfStatement	if ( ss -> binary )		1370323	12					
ANR	1370561	Condition	ss -> binary	146:8:4180:4189	1370323	0	True				
ANR	1370562	PtrMemberAccess	ss -> binary		1370323	0					
ANR	1370563	Identifier	ss		1370323	0					
ANR	1370564	Identifier	binary		1370323	1					
ANR	1370565	CompoundStatement		52:20:1703:1703	1370323	1					
ANR	1370566	ExpressionStatement	pr -> ptr = p + count	154:8:4556:4575	1370323	0	True				
ANR	1370567	AssignmentExpression	pr -> ptr = p + count		1370323	0		=			
ANR	1370568	PtrMemberAccess	pr -> ptr		1370323	0					
ANR	1370569	Identifier	pr		1370323	0					
ANR	1370570	Identifier	ptr		1370323	1					
ANR	1370571	AdditiveExpression	p + count		1370323	1		+			
ANR	1370572	Identifier	p		1370323	0					
ANR	1370573	Identifier	count		1370323	1					
ANR	1370574	ElseStatement	else		1370323	0					
ANR	1370575	CompoundStatement		68:8:2359:2376	1370323	0					
ANR	1370576	IdentifierDeclStatement	stream_cursor_read r ;	161:8:4818:4838	1370323	0	True				
ANR	1370577	IdentifierDecl	r		1370323	0					
ANR	1370578	IdentifierDeclType	stream_cursor_read		1370323	0					
ANR	1370579	Identifier	r		1370323	1					
ANR	1370580	IdentifierDeclStatement	const byte * start ;	162:8:4848:4865	1370323	1	True				
ANR	1370581	IdentifierDecl	* start		1370323	0					
ANR	1370582	IdentifierDeclType	const byte *		1370323	0					
ANR	1370583	Identifier	start		1370323	1					
ANR	1370584	Label	hp :	164:0:4868:4870	1370323	2	True				
ANR	1370585	Identifier	hp		1370323	0					
ANR	1370586	ExpressionStatement	r = * pr	164:4:4872:4879	1370323	3	True				
ANR	1370587	AssignmentExpression	r = * pr		1370323	0		=			
ANR	1370588	Identifier	r		1370323	0					
ANR	1370589	UnaryOperationExpression	* pr		1370323	1					
ANR	1370590	UnaryOperator	*		1370323	0					
ANR	1370591	Identifier	pr		1370323	1					
ANR	1370592	ExpressionStatement	start = r . ptr	165:8:4889:4902	1370323	4	True				
ANR	1370593	AssignmentExpression	start = r . ptr		1370323	0		=			
ANR	1370594	Identifier	start		1370323	0					
ANR	1370595	MemberAccess	r . ptr		1370323	1					
ANR	1370596	Identifier	r		1370323	0					
ANR	1370597	Identifier	ptr		1370323	1					
ANR	1370598	IfStatement	if ( r . limit - r . ptr > ss -> hex_left )		1370323	5					
ANR	1370599	Condition	r . limit - r . ptr > ss -> hex_left	166:12:4916:4945	1370323	0	True				
ANR	1370600	RelationalExpression	r . limit - r . ptr > ss -> hex_left		1370323	0		>			
ANR	1370601	AdditiveExpression	r . limit - r . ptr		1370323	0		-			
ANR	1370602	MemberAccess	r . limit		1370323	0					
ANR	1370603	Identifier	r		1370323	0					
ANR	1370604	Identifier	limit		1370323	1					
ANR	1370605	MemberAccess	r . ptr		1370323	1					
ANR	1370606	Identifier	r		1370323	0					
ANR	1370607	Identifier	ptr		1370323	1					
ANR	1370608	PtrMemberAccess	ss -> hex_left		1370323	1					
ANR	1370609	Identifier	ss		1370323	0					
ANR	1370610	Identifier	hex_left		1370323	1					
ANR	1370611	ExpressionStatement	r . limit = r . ptr + ss -> hex_left	167:12:4960:4990	1370323	1	True				
ANR	1370612	AssignmentExpression	r . limit = r . ptr + ss -> hex_left		1370323	0		=			
ANR	1370613	MemberAccess	r . limit		1370323	0					
ANR	1370614	Identifier	r		1370323	0					
ANR	1370615	Identifier	limit		1370323	1					
ANR	1370616	AdditiveExpression	r . ptr + ss -> hex_left		1370323	1		+			
ANR	1370617	MemberAccess	r . ptr		1370323	0					
ANR	1370618	Identifier	r		1370323	0					
ANR	1370619	Identifier	ptr		1370323	1					
ANR	1370620	PtrMemberAccess	ss -> hex_left		1370323	1					
ANR	1370621	Identifier	ss		1370323	0					
ANR	1370622	Identifier	hex_left		1370323	1					
ANR	1370623	ExpressionStatement	"status = s_hex_process ( & r , pw , & ss -> odd , ( ss -> is_leading_space ? hex_ignore_leading_whitespace : hex_break_on_whitespace ) )"	168:8:5000:5132	1370323	6	True				
ANR	1370624	AssignmentExpression	"status = s_hex_process ( & r , pw , & ss -> odd , ( ss -> is_leading_space ? hex_ignore_leading_whitespace : hex_break_on_whitespace ) )"		1370323	0		=			
ANR	1370625	Identifier	status		1370323	0					
ANR	1370626	CallExpression	"s_hex_process ( & r , pw , & ss -> odd , ( ss -> is_leading_space ? hex_ignore_leading_whitespace : hex_break_on_whitespace ) )"		1370323	1					
ANR	1370627	Callee	s_hex_process		1370323	0					
ANR	1370628	Identifier	s_hex_process		1370323	0					
ANR	1370629	ArgumentList	& r		1370323	1					
ANR	1370630	Argument	& r		1370323	0					
ANR	1370631	UnaryOperationExpression	& r		1370323	0					
ANR	1370632	UnaryOperator	&		1370323	0					
ANR	1370633	Identifier	r		1370323	1					
ANR	1370634	Argument	pw		1370323	1					
ANR	1370635	Identifier	pw		1370323	0					
ANR	1370636	Argument	& ss -> odd		1370323	2					
ANR	1370637	UnaryOperationExpression	& ss -> odd		1370323	0					
ANR	1370638	UnaryOperator	&		1370323	0					
ANR	1370639	PtrMemberAccess	ss -> odd		1370323	1					
ANR	1370640	Identifier	ss		1370323	0					
ANR	1370641	Identifier	odd		1370323	1					
ANR	1370642	Argument	ss -> is_leading_space ? hex_ignore_leading_whitespace : hex_break_on_whitespace		1370323	3					
ANR	1370643	ConditionalExpression	ss -> is_leading_space ? hex_ignore_leading_whitespace : hex_break_on_whitespace		1370323	0					
ANR	1370644	Condition	ss -> is_leading_space		1370323	0					
ANR	1370645	PtrMemberAccess	ss -> is_leading_space		1370323	0					
ANR	1370646	Identifier	ss		1370323	0					
ANR	1370647	Identifier	is_leading_space		1370323	1					
ANR	1370648	Identifier	hex_ignore_leading_whitespace		1370323	1					
ANR	1370649	Identifier	hex_break_on_whitespace		1370323	2					
ANR	1370650	IfStatement	if ( status == 2 )		1370323	7					
ANR	1370651	Condition	status == 2	170:12:5146:5156	1370323	0	True				
ANR	1370652	EqualityExpression	status == 2		1370323	0		==			
ANR	1370653	Identifier	status		1370323	0					
ANR	1370654	PrimaryExpression	2		1370323	1					
ANR	1370655	CompoundStatement		76:25:2670:2670	1370323	1					
ANR	1370656	ExpressionStatement	ss -> is_leading_space = true	171:12:5173:5200	1370323	0	True				
ANR	1370657	AssignmentExpression	ss -> is_leading_space = true		1370323	0		=			
ANR	1370658	PtrMemberAccess	ss -> is_leading_space		1370323	0					
ANR	1370659	Identifier	ss		1370323	0					
ANR	1370660	Identifier	is_leading_space		1370323	1					
ANR	1370661	Identifier	true		1370323	1					
ANR	1370662	ExpressionStatement	status = 1	172:12:5214:5224	1370323	1	True				
ANR	1370663	AssignmentExpression	status = 1		1370323	0		=			
ANR	1370664	Identifier	status		1370323	0					
ANR	1370665	PrimaryExpression	1		1370323	1					
ANR	1370666	ElseStatement	else		1370323	0					
ANR	1370667	ExpressionStatement	ss -> is_leading_space = false	174:12:5253:5281	1370323	0	True				
ANR	1370668	AssignmentExpression	ss -> is_leading_space = false		1370323	0		=			
ANR	1370669	PtrMemberAccess	ss -> is_leading_space		1370323	0					
ANR	1370670	Identifier	ss		1370323	0					
ANR	1370671	Identifier	is_leading_space		1370323	1					
ANR	1370672	Identifier	false		1370323	1					
ANR	1370673	ExpressionStatement	pr -> ptr = r . ptr	175:8:5291:5306	1370323	8	True				
ANR	1370674	AssignmentExpression	pr -> ptr = r . ptr		1370323	0		=			
ANR	1370675	PtrMemberAccess	pr -> ptr		1370323	0					
ANR	1370676	Identifier	pr		1370323	0					
ANR	1370677	Identifier	ptr		1370323	1					
ANR	1370678	MemberAccess	r . ptr		1370323	1					
ANR	1370679	Identifier	r		1370323	0					
ANR	1370680	Identifier	ptr		1370323	1					
ANR	1370681	ExpressionStatement	ss -> hex_left -= r . ptr - start	176:8:5316:5345	1370323	9	True				
ANR	1370682	AssignmentExpression	ss -> hex_left -= r . ptr - start		1370323	0		-=			
ANR	1370683	PtrMemberAccess	ss -> hex_left		1370323	0					
ANR	1370684	Identifier	ss		1370323	0					
ANR	1370685	Identifier	hex_left		1370323	1					
ANR	1370686	AdditiveExpression	r . ptr - start		1370323	1		-			
ANR	1370687	MemberAccess	r . ptr		1370323	0					
ANR	1370688	Identifier	r		1370323	0					
ANR	1370689	Identifier	ptr		1370323	1					
ANR	1370690	Identifier	start		1370323	1					
ANR	1370691	IfStatement	if ( ss -> hex_left == 0 )		1370323	10					
ANR	1370692	Condition	ss -> hex_left == 0	181:12:5479:5495	1370323	0	True				
ANR	1370693	EqualityExpression	ss -> hex_left == 0		1370323	0		==			
ANR	1370694	PtrMemberAccess	ss -> hex_left		1370323	0					
ANR	1370695	Identifier	ss		1370323	0					
ANR	1370696	Identifier	hex_left		1370323	1					
ANR	1370697	PrimaryExpression	0		1370323	1					
ANR	1370698	ExpressionStatement	ss -> binary = 1	182:12:5510:5524	1370323	1	True				
ANR	1370699	AssignmentExpression	ss -> binary = 1		1370323	0		=			
ANR	1370700	PtrMemberAccess	ss -> binary		1370323	0					
ANR	1370701	Identifier	ss		1370323	0					
ANR	1370702	Identifier	binary		1370323	1					
ANR	1370703	PrimaryExpression	1		1370323	1					
ANR	1370704	ExpressionStatement	count = pw -> ptr - q	183:8:5534:5553	1370323	11	True				
ANR	1370705	AssignmentExpression	count = pw -> ptr - q		1370323	0		=			
ANR	1370706	Identifier	count		1370323	0					
ANR	1370707	AdditiveExpression	pw -> ptr - q		1370323	1		-			
ANR	1370708	PtrMemberAccess	pw -> ptr		1370323	0					
ANR	1370709	Identifier	pw		1370323	0					
ANR	1370710	Identifier	ptr		1370323	1					
ANR	1370711	Identifier	q		1370323	1					
ANR	1370712	IfStatement	if ( status < 0 && ss -> odd < 0 )		1370323	12					
ANR	1370713	Condition	status < 0 && ss -> odd < 0	184:12:5567:5591	1370323	0	True				
ANR	1370714	AndExpression	status < 0 && ss -> odd < 0		1370323	0		&&			
ANR	1370715	RelationalExpression	status < 0		1370323	0		<			
ANR	1370716	Identifier	status		1370323	0					
ANR	1370717	PrimaryExpression	0		1370323	1					
ANR	1370718	RelationalExpression	ss -> odd < 0		1370323	1		<			
ANR	1370719	PtrMemberAccess	ss -> odd		1370323	0					
ANR	1370720	Identifier	ss		1370323	0					
ANR	1370721	Identifier	odd		1370323	1					
ANR	1370722	PrimaryExpression	0		1370323	1					
ANR	1370723	CompoundStatement		90:39:3105:3105	1370323	1					
ANR	1370724	IfStatement	if ( count )		1370323	0					
ANR	1370725	Condition	count	185:16:5612:5616	1370323	0	True				
ANR	1370726	Identifier	count		1370323	0					
ANR	1370727	CompoundStatement		91:23:3130:3130	1370323	1					
ANR	1370728	ExpressionStatement	-- p	186:16:5637:5640	1370323	0	True				
ANR	1370729	UnaryExpression	-- p		1370323	0					
ANR	1370730	IncDec	--		1370323	0					
ANR	1370731	Identifier	p		1370323	1					
ANR	1370732	ExpressionStatement	status = 0	187:16:5658:5668	1370323	1	True				
ANR	1370733	AssignmentExpression	status = 0		1370323	0		=			
ANR	1370734	Identifier	status		1370323	0					
ANR	1370735	PrimaryExpression	0		1370323	1					
ANR	1370736	ElseStatement	else		1370323	0					
ANR	1370737	IfStatement	if ( * p == '%' )		1370323	0					
ANR	1370738	Condition	* p == '%'	188:23:5725:5733	1370323	0	True				
ANR	1370739	EqualityExpression	* p == '%'		1370323	0		==			
ANR	1370740	UnaryOperationExpression	* p		1370323	0					
ANR	1370741	UnaryOperator	*		1370323	0					
ANR	1370742	Identifier	p		1370323	1					
ANR	1370743	PrimaryExpression	'%'		1370323	1					
ANR	1370744	GotoStatement	goto hp ;	189:16:5752:5759	1370323	1	True				
ANR	1370745	Identifier	hp		1370323	0					
ANR	1370746	ExpressionStatement	p = q	191:8:5794:5799	1370323	13	True				
ANR	1370747	AssignmentExpression	p = q		1370323	0		=			
ANR	1370748	Identifier	p		1370323	0					
ANR	1370749	Identifier	q		1370323	1					
ANR	1370750	IfStatement	if ( skip >= count && skip != 0 )		1370323	13					
ANR	1370751	Condition	skip >= count && skip != 0	193:8:5815:5840	1370323	0	True				
ANR	1370752	AndExpression	skip >= count && skip != 0		1370323	0		&&			
ANR	1370753	RelationalExpression	skip >= count		1370323	0		>=			
ANR	1370754	Identifier	skip		1370323	0					
ANR	1370755	Identifier	count		1370323	1					
ANR	1370756	EqualityExpression	skip != 0		1370323	1		!=			
ANR	1370757	Identifier	skip		1370323	0					
ANR	1370758	PrimaryExpression	0		1370323	1					
ANR	1370759	CompoundStatement		99:36:3354:3354	1370323	1					
ANR	1370760	ExpressionStatement	"gs_type1_decrypt ( q + 1 , p + 1 , count , ( crypt_state * ) & ss -> cstate )"	194:8:5853:5945	1370323	0	True				
ANR	1370761	CallExpression	"gs_type1_decrypt ( q + 1 , p + 1 , count , ( crypt_state * ) & ss -> cstate )"		1370323	0					
ANR	1370762	Callee	gs_type1_decrypt		1370323	0					
ANR	1370763	Identifier	gs_type1_decrypt		1370323	0					
ANR	1370764	ArgumentList	q + 1		1370323	1					
ANR	1370765	Argument	q + 1		1370323	0					
ANR	1370766	AdditiveExpression	q + 1		1370323	0		+			
ANR	1370767	Identifier	q		1370323	0					
ANR	1370768	PrimaryExpression	1		1370323	1					
ANR	1370769	Argument	p + 1		1370323	1					
ANR	1370770	AdditiveExpression	p + 1		1370323	0		+			
ANR	1370771	Identifier	p		1370323	0					
ANR	1370772	PrimaryExpression	1		1370323	1					
ANR	1370773	Argument	count		1370323	2					
ANR	1370774	Identifier	count		1370323	0					
ANR	1370775	Argument	( crypt_state * ) & ss -> cstate		1370323	3					
ANR	1370776	CastExpression	( crypt_state * ) & ss -> cstate		1370323	0					
ANR	1370777	CastTarget	crypt_state *		1370323	0					
ANR	1370778	UnaryOperationExpression	& ss -> cstate		1370323	1					
ANR	1370779	UnaryOperator	&		1370323	0					
ANR	1370780	PtrMemberAccess	ss -> cstate		1370323	1					
ANR	1370781	Identifier	ss		1370323	0					
ANR	1370782	Identifier	cstate		1370323	1					
ANR	1370783	ExpressionStatement	ss -> skip -= count	196:8:5955:5972	1370323	1	True				
ANR	1370784	AssignmentExpression	ss -> skip -= count		1370323	0		-=			
ANR	1370785	PtrMemberAccess	ss -> skip		1370323	0					
ANR	1370786	Identifier	ss		1370323	0					
ANR	1370787	Identifier	skip		1370323	1					
ANR	1370788	Identifier	count		1370323	1					
ANR	1370789	ExpressionStatement	count = 0	197:8:5982:5991	1370323	2	True				
ANR	1370790	AssignmentExpression	count = 0		1370323	0		=			
ANR	1370791	Identifier	count		1370323	0					
ANR	1370792	PrimaryExpression	0		1370323	1					
ANR	1370793	ExpressionStatement	status = 0	198:8:6001:6011	1370323	3	True				
ANR	1370794	AssignmentExpression	status = 0		1370323	0		=			
ANR	1370795	Identifier	status		1370323	0					
ANR	1370796	PrimaryExpression	0		1370323	1					
ANR	1370797	ElseStatement	else		1370323	0					
ANR	1370798	CompoundStatement		105:11:3535:3535	1370323	0					
ANR	1370799	ExpressionStatement	"gs_type1_decrypt ( q + 1 , p + 1 , skip , ( crypt_state * ) & ss -> cstate )"	200:8:6034:6125	1370323	0	True				
ANR	1370800	CallExpression	"gs_type1_decrypt ( q + 1 , p + 1 , skip , ( crypt_state * ) & ss -> cstate )"		1370323	0					
ANR	1370801	Callee	gs_type1_decrypt		1370323	0					
ANR	1370802	Identifier	gs_type1_decrypt		1370323	0					
ANR	1370803	ArgumentList	q + 1		1370323	1					
ANR	1370804	Argument	q + 1		1370323	0					
ANR	1370805	AdditiveExpression	q + 1		1370323	0		+			
ANR	1370806	Identifier	q		1370323	0					
ANR	1370807	PrimaryExpression	1		1370323	1					
ANR	1370808	Argument	p + 1		1370323	1					
ANR	1370809	AdditiveExpression	p + 1		1370323	0		+			
ANR	1370810	Identifier	p		1370323	0					
ANR	1370811	PrimaryExpression	1		1370323	1					
ANR	1370812	Argument	skip		1370323	2					
ANR	1370813	Identifier	skip		1370323	0					
ANR	1370814	Argument	( crypt_state * ) & ss -> cstate		1370323	3					
ANR	1370815	CastExpression	( crypt_state * ) & ss -> cstate		1370323	0					
ANR	1370816	CastTarget	crypt_state *		1370323	0					
ANR	1370817	UnaryOperationExpression	& ss -> cstate		1370323	1					
ANR	1370818	UnaryOperator	&		1370323	0					
ANR	1370819	PtrMemberAccess	ss -> cstate		1370323	1					
ANR	1370820	Identifier	ss		1370323	0					
ANR	1370821	Identifier	cstate		1370323	1					
ANR	1370822	ExpressionStatement	count -= skip	202:8:6135:6148	1370323	1	True				
ANR	1370823	AssignmentExpression	count -= skip		1370323	0		-=			
ANR	1370824	Identifier	count		1370323	0					
ANR	1370825	Identifier	skip		1370323	1					
ANR	1370826	ExpressionStatement	"gs_type1_decrypt ( q + 1 , p + 1 + skip , count , ( crypt_state * ) & ss -> cstate )"	203:8:6158:6257	1370323	2	True				
ANR	1370827	CallExpression	"gs_type1_decrypt ( q + 1 , p + 1 + skip , count , ( crypt_state * ) & ss -> cstate )"		1370323	0					
ANR	1370828	Callee	gs_type1_decrypt		1370323	0					
ANR	1370829	Identifier	gs_type1_decrypt		1370323	0					
ANR	1370830	ArgumentList	q + 1		1370323	1					
ANR	1370831	Argument	q + 1		1370323	0					
ANR	1370832	AdditiveExpression	q + 1		1370323	0		+			
ANR	1370833	Identifier	q		1370323	0					
ANR	1370834	PrimaryExpression	1		1370323	1					
ANR	1370835	Argument	p + 1 + skip		1370323	1					
ANR	1370836	AdditiveExpression	p + 1 + skip		1370323	0		+			
ANR	1370837	Identifier	p		1370323	0					
ANR	1370838	AdditiveExpression	1 + skip		1370323	1		+			
ANR	1370839	PrimaryExpression	1		1370323	0					
ANR	1370840	Identifier	skip		1370323	1					
ANR	1370841	Argument	count		1370323	2					
ANR	1370842	Identifier	count		1370323	0					
ANR	1370843	Argument	( crypt_state * ) & ss -> cstate		1370323	3					
ANR	1370844	CastExpression	( crypt_state * ) & ss -> cstate		1370323	0					
ANR	1370845	CastTarget	crypt_state *		1370323	0					
ANR	1370846	UnaryOperationExpression	& ss -> cstate		1370323	1					
ANR	1370847	UnaryOperator	&		1370323	0					
ANR	1370848	PtrMemberAccess	ss -> cstate		1370323	1					
ANR	1370849	Identifier	ss		1370323	0					
ANR	1370850	Identifier	cstate		1370323	1					
ANR	1370851	ExpressionStatement	ss -> skip = 0	205:8:6267:6279	1370323	3	True				
ANR	1370852	AssignmentExpression	ss -> skip = 0		1370323	0		=			
ANR	1370853	PtrMemberAccess	ss -> skip		1370323	0					
ANR	1370854	Identifier	ss		1370323	0					
ANR	1370855	Identifier	skip		1370323	1					
ANR	1370856	PrimaryExpression	0		1370323	1					
ANR	1370857	ExpressionStatement	pw -> ptr = q + count	207:4:6291:6310	1370323	14	True				
ANR	1370858	AssignmentExpression	pw -> ptr = q + count		1370323	0		=			
ANR	1370859	PtrMemberAccess	pw -> ptr		1370323	0					
ANR	1370860	Identifier	pw		1370323	0					
ANR	1370861	Identifier	ptr		1370323	1					
ANR	1370862	AdditiveExpression	q + count		1370323	1		+			
ANR	1370863	Identifier	q		1370323	0					
ANR	1370864	Identifier	count		1370323	1					
ANR	1370865	ReturnStatement	return status ;	208:4:6316:6329	1370323	15	True				
ANR	1370866	Identifier	status		1370323	0					
ANR	1370867	ReturnType	static int		1370323	1					
ANR	1370868	Identifier	s_exD_process		1370323	2					
ANR	1370869	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last"		1370323	3					
ANR	1370870	Parameter	stream_state * st	93:14:2393:2409	1370323	0	True				
ANR	1370871	ParameterType	stream_state *		1370323	0					
ANR	1370872	Identifier	st		1370323	1					
ANR	1370873	Parameter	stream_cursor_read * pr	93:33:2412:2434	1370323	1	True				
ANR	1370874	ParameterType	stream_cursor_read *		1370323	0					
ANR	1370875	Identifier	pr		1370323	1					
ANR	1370876	Parameter	stream_cursor_write * pw	94:14:2451:2474	1370323	2	True				
ANR	1370877	ParameterType	stream_cursor_write *		1370323	0					
ANR	1370878	Identifier	pw		1370323	1					
ANR	1370879	Parameter	bool last	94:40:2477:2485	1370323	3	True				
ANR	1370880	ParameterType	bool		1370323	0					
ANR	1370881	Identifier	last		1370323	1					
ANR	1370882	CFGEntryNode	ENTRY		1370323		True				
ANR	1370883	CFGExitNode	EXIT		1370323		True				
ANR	1370884	Symbol	* decoder		1370323						
ANR	1370885	Symbol	& ss -> cstate		1370323						
ANR	1370886	Symbol	pr		1370323						
ANR	1370887	Symbol	* ss		1370323						
ANR	1370888	Symbol	pw		1370323						
ANR	1370889	Symbol	pr -> limit		1370323						
ANR	1370890	Symbol	ss -> is_leading_space		1370323						
ANR	1370891	Symbol	& ss -> odd		1370323						
ANR	1370892	Symbol	hex_ignore_leading_whitespace		1370323						
ANR	1370893	Symbol	pr -> ptr		1370323						
ANR	1370894	Symbol	pw -> ptr		1370323						
ANR	1370895	Symbol	ss -> pfb_state		1370323						
ANR	1370896	Symbol	* * i		1370323						
ANR	1370897	Symbol	last		1370323						
ANR	1370898	Symbol	s_hex_process		1370323						
ANR	1370899	Symbol	r . limit		1370323						
ANR	1370900	Symbol	count		1370323						
ANR	1370901	Symbol	* pr		1370323						
ANR	1370902	Symbol	decoder		1370323						
ANR	1370903	Symbol	* pw		1370323						
ANR	1370904	Symbol	ss -> keep_spaces		1370323						
ANR	1370905	Symbol	true		1370323						
ANR	1370906	Symbol	status		1370323						
ANR	1370907	Symbol	wcount		1370323						
ANR	1370908	Symbol	ss -> hex_left		1370323						
ANR	1370909	Symbol	skip		1370323						
ANR	1370910	Symbol	pw -> limit		1370323						
ANR	1370911	Symbol	ss -> skip		1370323						
ANR	1370912	Symbol	min		1370323						
ANR	1370913	Symbol	ss -> binary		1370323						
ANR	1370914	Symbol	hex_break_on_whitespace		1370323						
ANR	1370915	Symbol	* * p		1370323						
ANR	1370916	Symbol	ss		1370323						
ANR	1370917	Symbol	st		1370323						
ANR	1370918	Symbol	c		1370323						
ANR	1370919	Symbol	start		1370323						
ANR	1370920	Symbol	false		1370323						
ANR	1370921	Symbol	i		1370323						
ANR	1370922	Symbol	ctype_space		1370323						
ANR	1370923	Symbol	char_EOL		1370323						
ANR	1370924	Symbol	p		1370323						
ANR	1370925	Symbol	ss -> odd		1370323						
ANR	1370926	Symbol	q		1370323						
ANR	1370927	Symbol	rcount		1370323						
ANR	1370928	Symbol	scan_char_decoder		1370323						
ANR	1370929	Symbol	r		1370323						
ANR	1370930	Symbol	* i		1370323						
ANR	1370931	Symbol	char_CR		1370323						
ANR	1370932	Symbol	r . ptr		1370323						
ANR	1370933	Symbol	& r		1370323						
ANR	1370934	Symbol	* p		1370323						
ANR	1370935	DeclStmt									
ANR	1370936	Decl							const stream_template	const stream_template	s_exD_template
