command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8878233	File	data/converged/CVE-2018-16863_ghostpdl/psi_imainarg.c								
ANR	8878234	DeclStmt									
ANR	8878235	Decl							extern int	extern int ( i_ctx_t * )	zflush
ANR	8878236	DeclStmt									
ANR	8878237	Decl							extern int	extern int ( i_ctx_t * )	zflushpage
ANR	8878238	DeclStmt									
ANR	8878239	Decl							int	"int ( gs_main_instance * , const char * , arg_list * )"	swproc
ANR	8878240	DeclStmt									
ANR	8878241	Decl							int	"int ( gs_main_instance * , const char * )"	argproc
ANR	8878242	DeclStmt									
ANR	8878243	Decl							int	"int ( gs_main_instance * , const char * )"	run_buffered
ANR	8878244	DeclStmt									
ANR	8878245	Decl							int	int ( const char * )	esc_strlen
ANR	8878246	DeclStmt									
ANR	8878247	Decl							void	"void ( char * , const char * )"	esc_strcat
ANR	8878248	DeclStmt									
ANR	8878249	Decl							int	"int ( gs_main_instance * , const char * , const char * , const char * , int )"	runarg
ANR	8878250	DeclStmt									
ANR	8878251	Decl							int	"int ( gs_main_instance * , const char * , int )"	run_string
ANR	8878252	DeclStmt									
ANR	8878253	Decl							int	"int ( gs_main_instance * , int , int , ref * )"	run_finish
ANR	8878254	DeclStmt									
ANR	8878255	Decl							int	"int ( gs_main_instance * minst , const char * command , const char * filename )"	try_stdout_redirect
ANR	8878256	DeclStmt									
ANR	8878257	Decl							void	void ( gs_main_instance * )	print_help
ANR	8878258	DeclStmt									
ANR	8878259	Decl							void	void ( const gs_main_instance * )	print_revision
ANR	8878260	DeclStmt									
ANR	8878261	Decl							void	void ( const gs_main_instance * )	print_version
ANR	8878262	DeclStmt									
ANR	8878263	Decl							void	void ( const gs_main_instance * )	print_usage
ANR	8878264	DeclStmt									
ANR	8878265	Decl							void	void ( const gs_main_instance * )	print_devices
ANR	8878266	DeclStmt									
ANR	8878267	Decl							void	void ( const gs_main_instance * )	print_emulators
ANR	8878268	DeclStmt									
ANR	8878269	Decl							void	void ( gs_main_instance * )	print_paths
ANR	8878270	DeclStmt									
ANR	8878271	Decl							void	void ( const gs_main_instance * )	print_help_trailer
ANR	8878272	Function	gs_main_arg_fopen	117:0:3631:3881							
ANR	8878273	FunctionDef	"gs_main_arg_fopen (const char * fname , void * vminst)"		8878272	0					
ANR	8878274	CompoundStatement		119:0:3696:3881	8878272	0					
ANR	8878275	ExpressionStatement	gs_main_set_lib_paths ( ( gs_main_instance * ) vminst )	120:4:3702:3752	8878272	0	True				
ANR	8878276	CallExpression	gs_main_set_lib_paths ( ( gs_main_instance * ) vminst )		8878272	0					
ANR	8878277	Callee	gs_main_set_lib_paths		8878272	0					
ANR	8878278	Identifier	gs_main_set_lib_paths		8878272	0					
ANR	8878279	ArgumentList	( gs_main_instance * ) vminst		8878272	1					
ANR	8878280	Argument	( gs_main_instance * ) vminst		8878272	0					
ANR	8878281	CastExpression	( gs_main_instance * ) vminst		8878272	0					
ANR	8878282	CastTarget	gs_main_instance *		8878272	0					
ANR	8878283	Identifier	vminst		8878272	1					
ANR	8878284	ReturnStatement	"return lib_fopen ( & ( ( gs_main_instance * ) vminst ) -> lib_path , ( ( gs_main_instance * ) vminst ) -> heap , fname ) ;"	121:4:3758:3879	8878272	1	True				
ANR	8878285	CallExpression	"lib_fopen ( & ( ( gs_main_instance * ) vminst ) -> lib_path , ( ( gs_main_instance * ) vminst ) -> heap , fname )"		8878272	0					
ANR	8878286	Callee	lib_fopen		8878272	0					
ANR	8878287	Identifier	lib_fopen		8878272	0					
ANR	8878288	ArgumentList	& ( ( gs_main_instance * ) vminst ) -> lib_path		8878272	1					
ANR	8878289	Argument	& ( ( gs_main_instance * ) vminst ) -> lib_path		8878272	0					
ANR	8878290	UnaryOperationExpression	& ( ( gs_main_instance * ) vminst ) -> lib_path		8878272	0					
ANR	8878291	UnaryOperator	&		8878272	0					
ANR	8878292	PtrMemberAccess	( ( gs_main_instance * ) vminst ) -> lib_path		8878272	1					
ANR	8878293	CastExpression	( gs_main_instance * ) vminst		8878272	0					
ANR	8878294	CastTarget	gs_main_instance *		8878272	0					
ANR	8878295	Identifier	vminst		8878272	1					
ANR	8878296	Identifier	lib_path		8878272	1					
ANR	8878297	Argument	( ( gs_main_instance * ) vminst ) -> heap		8878272	1					
ANR	8878298	PtrMemberAccess	( ( gs_main_instance * ) vminst ) -> heap		8878272	0					
ANR	8878299	CastExpression	( gs_main_instance * ) vminst		8878272	0					
ANR	8878300	CastTarget	gs_main_instance *		8878272	0					
ANR	8878301	Identifier	vminst		8878272	1					
ANR	8878302	Identifier	heap		8878272	1					
ANR	8878303	Argument	fname		8878272	2					
ANR	8878304	Identifier	fname		8878272	0					
ANR	8878305	ReturnType	static FILE *		8878272	1					
ANR	8878306	Identifier	gs_main_arg_fopen		8878272	2					
ANR	8878307	ParameterList	"const char * fname , void * vminst"		8878272	3					
ANR	8878308	Parameter	const char * fname	118:18:3663:3679	8878272	0	True				
ANR	8878309	ParameterType	const char *		8878272	0					
ANR	8878310	Identifier	fname		8878272	1					
ANR	8878311	Parameter	void * vminst	118:37:3682:3693	8878272	1	True				
ANR	8878312	ParameterType	void *		8878272	0					
ANR	8878313	Identifier	vminst		8878272	1					
ANR	8878314	CFGEntryNode	ENTRY		8878272		True				
ANR	8878315	CFGExitNode	EXIT		8878272		True				
ANR	8878316	Symbol	vminst		8878272						
ANR	8878317	Symbol	fname		8878272						
ANR	8878318	Symbol	( ( gs_main_instance * ) vminst ) -> heap		8878272						
ANR	8878319	Symbol	* vminst		8878272						
ANR	8878320	Symbol	lib_fopen		8878272						
ANR	8878321	Symbol	& ( ( gs_main_instance * ) vminst ) -> lib_path		8878272						
ANR	8878322	Function	set_debug_flags	124:0:3883:4050							
ANR	8878323	FunctionDef	"set_debug_flags (const char * arg , char * flags)"		8878322	0					
ANR	8878324	CompoundStatement		126:0:3941:4050	8878322	0					
ANR	8878325	IdentifierDeclStatement	"byte value = ( * arg == '-' ? ( ++ arg , 0 ) : 0xff ) ;"	127:4:3947:3993	8878322	0	True				
ANR	8878326	IdentifierDecl	"value = ( * arg == '-' ? ( ++ arg , 0 ) : 0xff )"		8878322	0					
ANR	8878327	IdentifierDeclType	byte		8878322	0					
ANR	8878328	Identifier	value		8878322	1					
ANR	8878329	AssignmentExpression	"value = ( * arg == '-' ? ( ++ arg , 0 ) : 0xff )"		8878322	2		=			
ANR	8878330	Identifier	value		8878322	0					
ANR	8878331	ConditionalExpression	"* arg == '-' ? ( ++ arg , 0 ) : 0xff"		8878322	1					
ANR	8878332	Condition	* arg == '-'		8878322	0					
ANR	8878333	EqualityExpression	* arg == '-'		8878322	0		==			
ANR	8878334	UnaryOperationExpression	* arg		8878322	0					
ANR	8878335	UnaryOperator	*		8878322	0					
ANR	8878336	Identifier	arg		8878322	1					
ANR	8878337	PrimaryExpression	'-'		8878322	1					
ANR	8878338	Expression	"++ arg , 0"		8878322	1					
ANR	8878339	UnaryExpression	++ arg		8878322	0					
ANR	8878340	IncDec	++		8878322	0					
ANR	8878341	Identifier	arg		8878322	1					
ANR	8878342	PrimaryExpression	0		8878322	1					
ANR	8878343	PrimaryExpression	0xff		8878322	2					
ANR	8878344	WhileStatement	while ( * arg )		8878322	1					
ANR	8878345	Condition	* arg	129:11:4007:4010	8878322	0	True				
ANR	8878346	UnaryOperationExpression	* arg		8878322	0					
ANR	8878347	UnaryOperator	*		8878322	0					
ANR	8878348	Identifier	arg		8878322	1					
ANR	8878349	ExpressionStatement	flags [ * arg ++ & 127 ] = value	130:8:4021:4048	8878322	1	True				
ANR	8878350	AssignmentExpression	flags [ * arg ++ & 127 ] = value		8878322	0		=			
ANR	8878351	ArrayIndexing	flags [ * arg ++ & 127 ]		8878322	0					
ANR	8878352	Identifier	flags		8878322	0					
ANR	8878353	BitAndExpression	* arg ++ & 127		8878322	1		&			
ANR	8878354	UnaryOperationExpression	* arg ++		8878322	0					
ANR	8878355	UnaryOperator	*		8878322	0					
ANR	8878356	PostIncDecOperationExpression	arg ++		8878322	1					
ANR	8878357	Identifier	arg		8878322	0					
ANR	8878358	IncDec	++		8878322	1					
ANR	8878359	PrimaryExpression	127		8878322	1					
ANR	8878360	Identifier	value		8878322	1					
ANR	8878361	ReturnType	static void		8878322	1					
ANR	8878362	Identifier	set_debug_flags		8878322	2					
ANR	8878363	ParameterList	"const char * arg , char * flags"		8878322	3					
ANR	8878364	Parameter	const char * arg	125:16:3911:3925	8878322	0	True				
ANR	8878365	ParameterType	const char *		8878322	0					
ANR	8878366	Identifier	arg		8878322	1					
ANR	8878367	Parameter	char * flags	125:33:3928:3938	8878322	1	True				
ANR	8878368	ParameterType	char *		8878322	0					
ANR	8878369	Identifier	flags		8878322	1					
ANR	8878370	CFGEntryNode	ENTRY		8878322		True				
ANR	8878371	CFGExitNode	EXIT		8878322		True				
ANR	8878372	Symbol	* flags		8878322						
ANR	8878373	Symbol	* arg ++		8878322						
ANR	8878374	Symbol	arg		8878322						
ANR	8878375	Symbol	flags		8878322						
ANR	8878376	Symbol	* * arg ++		8878322						
ANR	8878377	Symbol	value		8878322						
ANR	8878378	Symbol	* arg		8878322						
ANR	8878379	Function	gs_main_init_with_args	133:0:4053:9521							
ANR	8878380	FunctionDef	"gs_main_init_with_args (gs_main_instance * minst , int argc , char * argv [ ])"		8878379	0					
ANR	8878381	CompoundStatement		135:0:4130:9521	8878379	0					
ANR	8878382	IdentifierDeclStatement	const char * arg ;	136:4:4136:4151	8878379	0	True				
ANR	8878383	IdentifierDecl	* arg		8878379	0					
ANR	8878384	IdentifierDeclType	const char *		8878379	0					
ANR	8878385	Identifier	arg		8878379	1					
ANR	8878386	IdentifierDeclStatement	arg_list args ;	137:4:4157:4170	8878379	1	True				
ANR	8878387	IdentifierDecl	args		8878379	0					
ANR	8878388	IdentifierDeclType	arg_list		8878379	0					
ANR	8878389	Identifier	args		8878379	1					
ANR	8878390	IdentifierDeclStatement	int code ;	138:4:4176:4184	8878379	2	True				
ANR	8878391	IdentifierDecl	code		8878379	0					
ANR	8878392	IdentifierDeclType	int		8878379	0					
ANR	8878393	Identifier	code		8878379	1					
ANR	8878394	ExpressionStatement	"arg_init ( & args , ( const char * * ) argv , argc , gs_main_arg_fopen , ( void * ) minst , minst -> get_codepoint , minst -> heap )"	140:4:4191:4341	8878379	3	True				
ANR	8878395	CallExpression	"arg_init ( & args , ( const char * * ) argv , argc , gs_main_arg_fopen , ( void * ) minst , minst -> get_codepoint , minst -> heap )"		8878379	0					
ANR	8878396	Callee	arg_init		8878379	0					
ANR	8878397	Identifier	arg_init		8878379	0					
ANR	8878398	ArgumentList	& args		8878379	1					
ANR	8878399	Argument	& args		8878379	0					
ANR	8878400	UnaryOperationExpression	& args		8878379	0					
ANR	8878401	UnaryOperator	&		8878379	0					
ANR	8878402	Identifier	args		8878379	1					
ANR	8878403	Argument	( const char * * ) argv		8878379	1					
ANR	8878404	CastExpression	( const char * * ) argv		8878379	0					
ANR	8878405	CastTarget	const char * *		8878379	0					
ANR	8878406	Identifier	argv		8878379	1					
ANR	8878407	Argument	argc		8878379	2					
ANR	8878408	Identifier	argc		8878379	0					
ANR	8878409	Argument	gs_main_arg_fopen		8878379	3					
ANR	8878410	Identifier	gs_main_arg_fopen		8878379	0					
ANR	8878411	Argument	( void * ) minst		8878379	4					
ANR	8878412	CastExpression	( void * ) minst		8878379	0					
ANR	8878413	CastTarget	void *		8878379	0					
ANR	8878414	Identifier	minst		8878379	1					
ANR	8878415	Argument	minst -> get_codepoint		8878379	5					
ANR	8878416	PtrMemberAccess	minst -> get_codepoint		8878379	0					
ANR	8878417	Identifier	minst		8878379	0					
ANR	8878418	Identifier	get_codepoint		8878379	1					
ANR	8878419	Argument	minst -> heap		8878379	6					
ANR	8878420	PtrMemberAccess	minst -> heap		8878379	0					
ANR	8878421	Identifier	minst		8878379	0					
ANR	8878422	Identifier	heap		8878379	1					
ANR	8878423	ExpressionStatement	"code = gs_main_init0 ( minst , 0 , 0 , 0 , GS_MAX_LIB_DIRS )"	144:4:4347:4400	8878379	4	True				
ANR	8878424	AssignmentExpression	"code = gs_main_init0 ( minst , 0 , 0 , 0 , GS_MAX_LIB_DIRS )"		8878379	0		=			
ANR	8878425	Identifier	code		8878379	0					
ANR	8878426	CallExpression	"gs_main_init0 ( minst , 0 , 0 , 0 , GS_MAX_LIB_DIRS )"		8878379	1					
ANR	8878427	Callee	gs_main_init0		8878379	0					
ANR	8878428	Identifier	gs_main_init0		8878379	0					
ANR	8878429	ArgumentList	minst		8878379	1					
ANR	8878430	Argument	minst		8878379	0					
ANR	8878431	Identifier	minst		8878379	0					
ANR	8878432	Argument	0		8878379	1					
ANR	8878433	PrimaryExpression	0		8878379	0					
ANR	8878434	Argument	0		8878379	2					
ANR	8878435	PrimaryExpression	0		8878379	0					
ANR	8878436	Argument	0		8878379	3					
ANR	8878437	PrimaryExpression	0		8878379	0					
ANR	8878438	Argument	GS_MAX_LIB_DIRS		8878379	4					
ANR	8878439	Identifier	GS_MAX_LIB_DIRS		8878379	0					
ANR	8878440	IfStatement	if ( code < 0 )		8878379	5					
ANR	8878441	Condition	code < 0	145:8:4410:4417	8878379	0	True				
ANR	8878442	RelationalExpression	code < 0		8878379	0		<			
ANR	8878443	Identifier	code		8878379	0					
ANR	8878444	PrimaryExpression	0		8878379	1					
ANR	8878445	ReturnStatement	return code ;	146:8:4428:4439	8878379	1	True				
ANR	8878446	Identifier	code		8878379	0					
ANR	8878447	CompoundStatement		22:8:683:728	8878379	6					
ANR	8878448	IdentifierDeclStatement	int len = 0 ;	155:8:4793:4804	8878379	0	True				
ANR	8878449	IdentifierDecl	len = 0		8878379	0					
ANR	8878450	IdentifierDeclType	int		8878379	0					
ANR	8878451	Identifier	len		8878379	1					
ANR	8878452	AssignmentExpression	len = 0		8878379	2		=			
ANR	8878453	Identifier	len		8878379	0					
ANR	8878454	PrimaryExpression	0		8878379	1					
ANR	8878455	IdentifierDeclStatement	"int code = gp_getenv ( GS_LIB , ( char * ) 0 , & len ) ;"	156:8:4814:4859	8878379	1	True				
ANR	8878456	IdentifierDecl	"code = gp_getenv ( GS_LIB , ( char * ) 0 , & len )"		8878379	0					
ANR	8878457	IdentifierDeclType	int		8878379	0					
ANR	8878458	Identifier	code		8878379	1					
ANR	8878459	AssignmentExpression	"code = gp_getenv ( GS_LIB , ( char * ) 0 , & len )"		8878379	2		=			
ANR	8878460	Identifier	code		8878379	0					
ANR	8878461	CallExpression	"gp_getenv ( GS_LIB , ( char * ) 0 , & len )"		8878379	1					
ANR	8878462	Callee	gp_getenv		8878379	0					
ANR	8878463	Identifier	gp_getenv		8878379	0					
ANR	8878464	ArgumentList	GS_LIB		8878379	1					
ANR	8878465	Argument	GS_LIB		8878379	0					
ANR	8878466	Identifier	GS_LIB		8878379	0					
ANR	8878467	Argument	( char * ) 0		8878379	1					
ANR	8878468	CastExpression	( char * ) 0		8878379	0					
ANR	8878469	CastTarget	char *		8878379	0					
ANR	8878470	PrimaryExpression	0		8878379	1					
ANR	8878471	Argument	& len		8878379	2					
ANR	8878472	UnaryOperationExpression	& len		8878379	0					
ANR	8878473	UnaryOperator	&		8878379	0					
ANR	8878474	Identifier	len		8878379	1					
ANR	8878475	IfStatement	if ( code < 0 )		8878379	2					
ANR	8878476	Condition	code < 0	158:12:4874:4881	8878379	0	True				
ANR	8878477	RelationalExpression	code < 0		8878379	0		<			
ANR	8878478	Identifier	code		8878379	0					
ANR	8878479	PrimaryExpression	0		8878379	1					
ANR	8878480	CompoundStatement		25:12:812:875	8878379	1					
ANR	8878481	IdentifierDeclStatement	"char * path = ( char * ) gs_alloc_bytes ( minst -> heap , len , ""GS_LIB"" ) ;"	159:12:4943:5006	8878379	0	True				
ANR	8878482	IdentifierDecl	"* path = ( char * ) gs_alloc_bytes ( minst -> heap , len , ""GS_LIB"" )"		8878379	0					
ANR	8878483	IdentifierDeclType	char *		8878379	0					
ANR	8878484	Identifier	path		8878379	1					
ANR	8878485	AssignmentExpression	"* path = ( char * ) gs_alloc_bytes ( minst -> heap , len , ""GS_LIB"" )"		8878379	2		=			
ANR	8878486	Identifier	path		8878379	0					
ANR	8878487	CastExpression	"( char * ) gs_alloc_bytes ( minst -> heap , len , ""GS_LIB"" )"		8878379	1					
ANR	8878488	CastTarget	char *		8878379	0					
ANR	8878489	CallExpression	"gs_alloc_bytes ( minst -> heap , len , ""GS_LIB"" )"		8878379	1					
ANR	8878490	Callee	gs_alloc_bytes		8878379	0					
ANR	8878491	Identifier	gs_alloc_bytes		8878379	0					
ANR	8878492	ArgumentList	minst -> heap		8878379	1					
ANR	8878493	Argument	minst -> heap		8878379	0					
ANR	8878494	PtrMemberAccess	minst -> heap		8878379	0					
ANR	8878495	Identifier	minst		8878379	0					
ANR	8878496	Identifier	heap		8878379	1					
ANR	8878497	Argument	len		8878379	1					
ANR	8878498	Identifier	len		8878379	0					
ANR	8878499	Argument	"""GS_LIB"""		8878379	2					
ANR	8878500	PrimaryExpression	"""GS_LIB"""		8878379	0					
ANR	8878501	ExpressionStatement	"gp_getenv ( GS_LIB , path , & len )"	161:12:5021:5050	8878379	1	True				
ANR	8878502	CallExpression	"gp_getenv ( GS_LIB , path , & len )"		8878379	0					
ANR	8878503	Callee	gp_getenv		8878379	0					
ANR	8878504	Identifier	gp_getenv		8878379	0					
ANR	8878505	ArgumentList	GS_LIB		8878379	1					
ANR	8878506	Argument	GS_LIB		8878379	0					
ANR	8878507	Identifier	GS_LIB		8878379	0					
ANR	8878508	Argument	path		8878379	1					
ANR	8878509	Identifier	path		8878379	0					
ANR	8878510	Argument	& len		8878379	2					
ANR	8878511	UnaryOperationExpression	& len		8878379	0					
ANR	8878512	UnaryOperator	&		8878379	0					
ANR	8878513	Identifier	len		8878379	1					
ANR	8878514	ExpressionStatement	minst -> lib_path . env = path	162:12:5086:5112	8878379	2	True				
ANR	8878515	AssignmentExpression	minst -> lib_path . env = path		8878379	0		=			
ANR	8878516	MemberAccess	minst -> lib_path . env		8878379	0					
ANR	8878517	PtrMemberAccess	minst -> lib_path		8878379	0					
ANR	8878518	Identifier	minst		8878379	0					
ANR	8878519	Identifier	lib_path		8878379	1					
ANR	8878520	Identifier	env		8878379	1					
ANR	8878521	Identifier	path		8878379	1					
ANR	8878522	ExpressionStatement	minst -> lib_path . final = gs_lib_default_path	166:4:5153:5196	8878379	7	True				
ANR	8878523	AssignmentExpression	minst -> lib_path . final = gs_lib_default_path		8878379	0		=			
ANR	8878524	MemberAccess	minst -> lib_path . final		8878379	0					
ANR	8878525	PtrMemberAccess	minst -> lib_path		8878379	0					
ANR	8878526	Identifier	minst		8878379	0					
ANR	8878527	Identifier	lib_path		8878379	1					
ANR	8878528	Identifier	final		8878379	1					
ANR	8878529	Identifier	gs_lib_default_path		8878379	1					
ANR	8878530	ExpressionStatement	code = gs_main_set_lib_paths ( minst )	167:4:5202:5237	8878379	8	True				
ANR	8878531	AssignmentExpression	code = gs_main_set_lib_paths ( minst )		8878379	0		=			
ANR	8878532	Identifier	code		8878379	0					
ANR	8878533	CallExpression	gs_main_set_lib_paths ( minst )		8878379	1					
ANR	8878534	Callee	gs_main_set_lib_paths		8878379	0					
ANR	8878535	Identifier	gs_main_set_lib_paths		8878379	0					
ANR	8878536	ArgumentList	minst		8878379	1					
ANR	8878537	Argument	minst		8878379	0					
ANR	8878538	Identifier	minst		8878379	0					
ANR	8878539	IfStatement	if ( code < 0 )		8878379	9					
ANR	8878540	Condition	code < 0	168:8:5247:5254	8878379	0	True				
ANR	8878541	RelationalExpression	code < 0		8878379	0		<			
ANR	8878542	Identifier	code		8878379	0					
ANR	8878543	PrimaryExpression	0		8878379	1					
ANR	8878544	ReturnStatement	return code ;	169:8:5265:5276	8878379	1	True				
ANR	8878545	Identifier	code		8878379	0					
ANR	8878546	CompoundStatement		39:8:1237:1257	8878379	10					
ANR	8878547	IdentifierDeclStatement	int i ;	172:8:5353:5358	8878379	0	True				
ANR	8878548	IdentifierDecl	i		8878379	0					
ANR	8878549	IdentifierDeclType	int		8878379	0					
ANR	8878550	Identifier	i		8878379	1					
ANR	8878551	IdentifierDeclStatement	bool helping = false ;	173:8:5368:5388	8878379	1	True				
ANR	8878552	IdentifierDecl	helping = false		8878379	0					
ANR	8878553	IdentifierDeclType	bool		8878379	0					
ANR	8878554	Identifier	helping		8878379	1					
ANR	8878555	AssignmentExpression	helping = false		8878379	2		=			
ANR	8878556	Identifier	false		8878379	0					
ANR	8878557	Identifier	false		8878379	1					
ANR	8878558	ForStatement	for ( i = 1 ; i < argc ; ++ i )		8878379	2					
ANR	8878559	ForInit	i = 1 ;	175:13:5404:5409	8878379	0	True				
ANR	8878560	AssignmentExpression	i = 1		8878379	0		=			
ANR	8878561	Identifier	i		8878379	0					
ANR	8878562	PrimaryExpression	1		8878379	1					
ANR	8878563	Condition	i < argc	175:20:5411:5418	8878379	1	True				
ANR	8878564	RelationalExpression	i < argc		8878379	0		<			
ANR	8878565	Identifier	i		8878379	0					
ANR	8878566	Identifier	argc		8878379	1					
ANR	8878567	UnaryExpression	++ i	175:30:5421:5423	8878379	2	True				
ANR	8878568	IncDec	++		8878379	0					
ANR	8878569	Identifier	i		8878379	1					
ANR	8878570	IfStatement	"if ( ! arg_strcmp ( & args , argv [ i ] , ""--"" ) )"		8878379	3					
ANR	8878571	Condition	"! arg_strcmp ( & args , argv [ i ] , ""--"" )"	176:16:5442:5474	8878379	0	True				
ANR	8878572	UnaryOperationExpression	"! arg_strcmp ( & args , argv [ i ] , ""--"" )"		8878379	0					
ANR	8878573	UnaryOperator	!		8878379	0					
ANR	8878574	CallExpression	"arg_strcmp ( & args , argv [ i ] , ""--"" )"		8878379	1					
ANR	8878575	Callee	arg_strcmp		8878379	0					
ANR	8878576	Identifier	arg_strcmp		8878379	0					
ANR	8878577	ArgumentList	& args		8878379	1					
ANR	8878578	Argument	& args		8878379	0					
ANR	8878579	UnaryOperationExpression	& args		8878379	0					
ANR	8878580	UnaryOperator	&		8878379	0					
ANR	8878581	Identifier	args		8878379	1					
ANR	8878582	Argument	argv [ i ]		8878379	1					
ANR	8878583	ArrayIndexing	argv [ i ]		8878379	0					
ANR	8878584	Identifier	argv		8878379	0					
ANR	8878585	Identifier	i		8878379	1					
ANR	8878586	Argument	"""--"""		8878379	2					
ANR	8878587	PrimaryExpression	"""--"""		8878379	0					
ANR	8878588	CompoundStatement		42:51:1346:1346	8878379	1					
ANR	8878589	ExpressionStatement	helping = false	179:16:5627:5642	8878379	0	True				
ANR	8878590	AssignmentExpression	helping = false		8878379	0		=			
ANR	8878591	Identifier	helping		8878379	0					
ANR	8878592	Identifier	false		8878379	1					
ANR	8878593	BreakStatement	break ;	180:16:5660:5665	8878379	1	True				
ANR	8878594	ElseStatement	else		8878379	0					
ANR	8878595	IfStatement	"if ( ! arg_strcmp ( & args , argv [ i ] , ""--help"" ) )"		8878379	0					
ANR	8878596	Condition	"! arg_strcmp ( & args , argv [ i ] , ""--help"" )"	181:23:5690:5726	8878379	0	True				
ANR	8878597	UnaryOperationExpression	"! arg_strcmp ( & args , argv [ i ] , ""--help"" )"		8878379	0					
ANR	8878598	UnaryOperator	!		8878379	0					
ANR	8878599	CallExpression	"arg_strcmp ( & args , argv [ i ] , ""--help"" )"		8878379	1					
ANR	8878600	Callee	arg_strcmp		8878379	0					
ANR	8878601	Identifier	arg_strcmp		8878379	0					
ANR	8878602	ArgumentList	& args		8878379	1					
ANR	8878603	Argument	& args		8878379	0					
ANR	8878604	UnaryOperationExpression	& args		8878379	0					
ANR	8878605	UnaryOperator	&		8878379	0					
ANR	8878606	Identifier	args		8878379	1					
ANR	8878607	Argument	argv [ i ]		8878379	1					
ANR	8878608	ArrayIndexing	argv [ i ]		8878379	0					
ANR	8878609	Identifier	argv		8878379	0					
ANR	8878610	Identifier	i		8878379	1					
ANR	8878611	Argument	"""--help"""		8878379	2					
ANR	8878612	PrimaryExpression	"""--help"""		8878379	0					
ANR	8878613	CompoundStatement		47:62:1598:1598	8878379	1					
ANR	8878614	ExpressionStatement	print_help ( minst )	182:16:5747:5764	8878379	0	True				
ANR	8878615	CallExpression	print_help ( minst )		8878379	0					
ANR	8878616	Callee	print_help		8878379	0					
ANR	8878617	Identifier	print_help		8878379	0					
ANR	8878618	ArgumentList	minst		8878379	1					
ANR	8878619	Argument	minst		8878379	0					
ANR	8878620	Identifier	minst		8878379	0					
ANR	8878621	ExpressionStatement	helping = true	183:16:5782:5796	8878379	1	True				
ANR	8878622	AssignmentExpression	helping = true		8878379	0		=			
ANR	8878623	Identifier	helping		8878379	0					
ANR	8878624	Identifier	true		8878379	1					
ANR	8878625	ElseStatement	else		8878379	0					
ANR	8878626	IfStatement	"if ( ! arg_strcmp ( & args , argv [ i ] , ""--debug"" ) )"		8878379	0					
ANR	8878627	Condition	"! arg_strcmp ( & args , argv [ i ] , ""--debug"" )"	184:23:5821:5858	8878379	0	True				
ANR	8878628	UnaryOperationExpression	"! arg_strcmp ( & args , argv [ i ] , ""--debug"" )"		8878379	0					
ANR	8878629	UnaryOperator	!		8878379	0					
ANR	8878630	CallExpression	"arg_strcmp ( & args , argv [ i ] , ""--debug"" )"		8878379	1					
ANR	8878631	Callee	arg_strcmp		8878379	0					
ANR	8878632	Identifier	arg_strcmp		8878379	0					
ANR	8878633	ArgumentList	& args		8878379	1					
ANR	8878634	Argument	& args		8878379	0					
ANR	8878635	UnaryOperationExpression	& args		8878379	0					
ANR	8878636	UnaryOperator	&		8878379	0					
ANR	8878637	Identifier	args		8878379	1					
ANR	8878638	Argument	argv [ i ]		8878379	1					
ANR	8878639	ArrayIndexing	argv [ i ]		8878379	0					
ANR	8878640	Identifier	argv		8878379	0					
ANR	8878641	Identifier	i		8878379	1					
ANR	8878642	Argument	"""--debug"""		8878379	2					
ANR	8878643	PrimaryExpression	"""--debug"""		8878379	0					
ANR	8878644	CompoundStatement		50:63:1730:1730	8878379	1					
ANR	8878645	ExpressionStatement	gs_debug_flags_list ( minst -> heap )	185:16:5879:5911	8878379	0	True				
ANR	8878646	CallExpression	gs_debug_flags_list ( minst -> heap )		8878379	0					
ANR	8878647	Callee	gs_debug_flags_list		8878379	0					
ANR	8878648	Identifier	gs_debug_flags_list		8878379	0					
ANR	8878649	ArgumentList	minst -> heap		8878379	1					
ANR	8878650	Argument	minst -> heap		8878379	0					
ANR	8878651	PtrMemberAccess	minst -> heap		8878379	0					
ANR	8878652	Identifier	minst		8878379	0					
ANR	8878653	Identifier	heap		8878379	1					
ANR	8878654	ExpressionStatement	helping = true	186:16:5929:5943	8878379	1	True				
ANR	8878655	AssignmentExpression	helping = true		8878379	0		=			
ANR	8878656	Identifier	helping		8878379	0					
ANR	8878657	Identifier	true		8878379	1					
ANR	8878658	ElseStatement	else		8878379	0					
ANR	8878659	IfStatement	"if ( ! arg_strcmp ( & args , argv [ i ] , ""--version"" ) )"		8878379	0					
ANR	8878660	Condition	"! arg_strcmp ( & args , argv [ i ] , ""--version"" )"	187:23:5968:6007	8878379	0	True				
ANR	8878661	UnaryOperationExpression	"! arg_strcmp ( & args , argv [ i ] , ""--version"" )"		8878379	0					
ANR	8878662	UnaryOperator	!		8878379	0					
ANR	8878663	CallExpression	"arg_strcmp ( & args , argv [ i ] , ""--version"" )"		8878379	1					
ANR	8878664	Callee	arg_strcmp		8878379	0					
ANR	8878665	Identifier	arg_strcmp		8878379	0					
ANR	8878666	ArgumentList	& args		8878379	1					
ANR	8878667	Argument	& args		8878379	0					
ANR	8878668	UnaryOperationExpression	& args		8878379	0					
ANR	8878669	UnaryOperator	&		8878379	0					
ANR	8878670	Identifier	args		8878379	1					
ANR	8878671	Argument	argv [ i ]		8878379	1					
ANR	8878672	ArrayIndexing	argv [ i ]		8878379	0					
ANR	8878673	Identifier	argv		8878379	0					
ANR	8878674	Identifier	i		8878379	1					
ANR	8878675	Argument	"""--version"""		8878379	2					
ANR	8878676	PrimaryExpression	"""--version"""		8878379	0					
ANR	8878677	CompoundStatement		53:65:1879:1879	8878379	1					
ANR	8878678	ExpressionStatement	print_version ( minst )	188:16:6028:6048	8878379	0	True				
ANR	8878679	CallExpression	print_version ( minst )		8878379	0					
ANR	8878680	Callee	print_version		8878379	0					
ANR	8878681	Identifier	print_version		8878379	0					
ANR	8878682	ArgumentList	minst		8878379	1					
ANR	8878683	Argument	minst		8878379	0					
ANR	8878684	Identifier	minst		8878379	0					
ANR	8878685	ExpressionStatement	"puts ( minst -> heap , """" )"	189:16:6066:6087	8878379	1	True				
ANR	8878686	CallExpression	"puts ( minst -> heap , """" )"		8878379	0					
ANR	8878687	Callee	puts		8878379	0					
ANR	8878688	Identifier	puts		8878379	0					
ANR	8878689	ArgumentList	minst -> heap		8878379	1					
ANR	8878690	Argument	minst -> heap		8878379	0					
ANR	8878691	PtrMemberAccess	minst -> heap		8878379	0					
ANR	8878692	Identifier	minst		8878379	0					
ANR	8878693	Identifier	heap		8878379	1					
ANR	8878694	Argument	""""""		8878379	1					
ANR	8878695	PrimaryExpression	""""""		8878379	0					
ANR	8878696	ExpressionStatement	helping = true	190:16:6115:6129	8878379	2	True				
ANR	8878697	AssignmentExpression	helping = true		8878379	0		=			
ANR	8878698	Identifier	helping		8878379	0					
ANR	8878699	Identifier	true		8878379	1					
ANR	8878700	IfStatement	if ( helping )		8878379	3					
ANR	8878701	Condition	helping	192:12:6157:6163	8878379	0	True				
ANR	8878702	Identifier	helping		8878379	0					
ANR	8878703	ReturnStatement	return gs_error_Info ;	193:12:6178:6198	8878379	1	True				
ANR	8878704	Identifier	gs_error_Info		8878379	0					
ANR	8878705	ExpressionStatement	minst -> run_start = true	199:4:6407:6430	8878379	11	True				
ANR	8878706	AssignmentExpression	minst -> run_start = true		8878379	0		=			
ANR	8878707	PtrMemberAccess	minst -> run_start		8878379	0					
ANR	8878708	Identifier	minst		8878379	0					
ANR	8878709	Identifier	run_start		8878379	1					
ANR	8878710	Identifier	true		8878379	1					
ANR	8878711	CompoundStatement		69:8:2337:2386	8878379	12					
ANR	8878712	IdentifierDeclStatement	int len = 0 ;	202:8:6447:6458	8878379	0	True				
ANR	8878713	IdentifierDecl	len = 0		8878379	0					
ANR	8878714	IdentifierDeclType	int		8878379	0					
ANR	8878715	Identifier	len		8878379	1					
ANR	8878716	AssignmentExpression	len = 0		8878379	2		=			
ANR	8878717	Identifier	len		8878379	0					
ANR	8878718	PrimaryExpression	0		8878379	1					
ANR	8878719	IdentifierDeclStatement	"int code = gp_getenv ( GS_OPTIONS , ( char * ) 0 , & len ) ;"	203:8:6468:6517	8878379	1	True				
ANR	8878720	IdentifierDecl	"code = gp_getenv ( GS_OPTIONS , ( char * ) 0 , & len )"		8878379	0					
ANR	8878721	IdentifierDeclType	int		8878379	0					
ANR	8878722	Identifier	code		8878379	1					
ANR	8878723	AssignmentExpression	"code = gp_getenv ( GS_OPTIONS , ( char * ) 0 , & len )"		8878379	2		=			
ANR	8878724	Identifier	code		8878379	0					
ANR	8878725	CallExpression	"gp_getenv ( GS_OPTIONS , ( char * ) 0 , & len )"		8878379	1					
ANR	8878726	Callee	gp_getenv		8878379	0					
ANR	8878727	Identifier	gp_getenv		8878379	0					
ANR	8878728	ArgumentList	GS_OPTIONS		8878379	1					
ANR	8878729	Argument	GS_OPTIONS		8878379	0					
ANR	8878730	Identifier	GS_OPTIONS		8878379	0					
ANR	8878731	Argument	( char * ) 0		8878379	1					
ANR	8878732	CastExpression	( char * ) 0		8878379	0					
ANR	8878733	CastTarget	char *		8878379	0					
ANR	8878734	PrimaryExpression	0		8878379	1					
ANR	8878735	Argument	& len		8878379	2					
ANR	8878736	UnaryOperationExpression	& len		8878379	0					
ANR	8878737	UnaryOperator	&		8878379	0					
ANR	8878738	Identifier	len		8878379	1					
ANR	8878739	IfStatement	if ( code < 0 )		8878379	2					
ANR	8878740	Condition	code < 0	205:12:6532:6539	8878379	0	True				
ANR	8878741	RelationalExpression	code < 0		8878379	0		<			
ANR	8878742	Identifier	code		8878379	0					
ANR	8878743	PrimaryExpression	0		8878379	1					
ANR	8878744	CompoundStatement		72:12:2470:2549	8878379	1					
ANR	8878745	IdentifierDeclStatement	"char * opts = ( char * ) gs_alloc_bytes ( minst -> heap , len , ""GS_OPTIONS"" ) ;"	206:12:6601:6680	8878379	0	True				
ANR	8878746	IdentifierDecl	"* opts = ( char * ) gs_alloc_bytes ( minst -> heap , len , ""GS_OPTIONS"" )"		8878379	0					
ANR	8878747	IdentifierDeclType	char *		8878379	0					
ANR	8878748	Identifier	opts		8878379	1					
ANR	8878749	AssignmentExpression	"* opts = ( char * ) gs_alloc_bytes ( minst -> heap , len , ""GS_OPTIONS"" )"		8878379	2		=			
ANR	8878750	Identifier	opts		8878379	0					
ANR	8878751	CastExpression	"( char * ) gs_alloc_bytes ( minst -> heap , len , ""GS_OPTIONS"" )"		8878379	1					
ANR	8878752	CastTarget	char *		8878379	0					
ANR	8878753	CallExpression	"gs_alloc_bytes ( minst -> heap , len , ""GS_OPTIONS"" )"		8878379	1					
ANR	8878754	Callee	gs_alloc_bytes		8878379	0					
ANR	8878755	Identifier	gs_alloc_bytes		8878379	0					
ANR	8878756	ArgumentList	minst -> heap		8878379	1					
ANR	8878757	Argument	minst -> heap		8878379	0					
ANR	8878758	PtrMemberAccess	minst -> heap		8878379	0					
ANR	8878759	Identifier	minst		8878379	0					
ANR	8878760	Identifier	heap		8878379	1					
ANR	8878761	Argument	len		8878379	1					
ANR	8878762	Identifier	len		8878379	0					
ANR	8878763	Argument	"""GS_OPTIONS"""		8878379	2					
ANR	8878764	PrimaryExpression	"""GS_OPTIONS"""		8878379	0					
ANR	8878765	ExpressionStatement	"gp_getenv ( GS_OPTIONS , opts , & len )"	209:12:6695:6728	8878379	1	True				
ANR	8878766	CallExpression	"gp_getenv ( GS_OPTIONS , opts , & len )"		8878379	0					
ANR	8878767	Callee	gp_getenv		8878379	0					
ANR	8878768	Identifier	gp_getenv		8878379	0					
ANR	8878769	ArgumentList	GS_OPTIONS		8878379	1					
ANR	8878770	Argument	GS_OPTIONS		8878379	0					
ANR	8878771	Identifier	GS_OPTIONS		8878379	0					
ANR	8878772	Argument	opts		8878379	1					
ANR	8878773	Identifier	opts		8878379	0					
ANR	8878774	Argument	& len		8878379	2					
ANR	8878775	UnaryOperationExpression	& len		8878379	0					
ANR	8878776	UnaryOperator	&		8878379	0					
ANR	8878777	Identifier	len		8878379	1					
ANR	8878778	IfStatement	"if ( arg_push_memory_string ( & args , opts , false , minst -> heap ) )"		8878379	2					
ANR	8878779	Condition	"arg_push_memory_string ( & args , opts , false , minst -> heap )"	211:16:6788:6842	8878379	0	True				
ANR	8878780	CallExpression	"arg_push_memory_string ( & args , opts , false , minst -> heap )"		8878379	0					
ANR	8878781	Callee	arg_push_memory_string		8878379	0					
ANR	8878782	Identifier	arg_push_memory_string		8878379	0					
ANR	8878783	ArgumentList	& args		8878379	1					
ANR	8878784	Argument	& args		8878379	0					
ANR	8878785	UnaryOperationExpression	& args		8878379	0					
ANR	8878786	UnaryOperator	&		8878379	0					
ANR	8878787	Identifier	args		8878379	1					
ANR	8878788	Argument	opts		8878379	1					
ANR	8878789	Identifier	opts		8878379	0					
ANR	8878790	Argument	false		8878379	2					
ANR	8878791	Identifier	false		8878379	0					
ANR	8878792	Argument	minst -> heap		8878379	3					
ANR	8878793	PtrMemberAccess	minst -> heap		8878379	0					
ANR	8878794	Identifier	minst		8878379	0					
ANR	8878795	Identifier	heap		8878379	1					
ANR	8878796	ReturnStatement	return gs_error_Fatal ;	212:16:6861:6882	8878379	1	True				
ANR	8878797	Identifier	gs_error_Fatal		8878379	0					
ANR	8878798	WhileStatement	"while ( ( code = arg_next ( & args , ( const char * * ) & arg , minst -> heap ) ) > 0 )"		8878379	13					
ANR	8878799	Condition	"( code = arg_next ( & args , ( const char * * ) & arg , minst -> heap ) ) > 0"	219:11:7050:7111	8878379	0	True				
ANR	8878800	RelationalExpression	"( code = arg_next ( & args , ( const char * * ) & arg , minst -> heap ) ) > 0"		8878379	0		>			
ANR	8878801	AssignmentExpression	"code = arg_next ( & args , ( const char * * ) & arg , minst -> heap )"		8878379	0		=			
ANR	8878802	Identifier	code		8878379	0					
ANR	8878803	CallExpression	"arg_next ( & args , ( const char * * ) & arg , minst -> heap )"		8878379	1					
ANR	8878804	Callee	arg_next		8878379	0					
ANR	8878805	Identifier	arg_next		8878379	0					
ANR	8878806	ArgumentList	& args		8878379	1					
ANR	8878807	Argument	& args		8878379	0					
ANR	8878808	UnaryOperationExpression	& args		8878379	0					
ANR	8878809	UnaryOperator	&		8878379	0					
ANR	8878810	Identifier	args		8878379	1					
ANR	8878811	Argument	( const char * * ) & arg		8878379	1					
ANR	8878812	CastExpression	( const char * * ) & arg		8878379	0					
ANR	8878813	CastTarget	const char * *		8878379	0					
ANR	8878814	UnaryOperationExpression	& arg		8878379	1					
ANR	8878815	UnaryOperator	&		8878379	0					
ANR	8878816	Identifier	arg		8878379	1					
ANR	8878817	Argument	minst -> heap		8878379	2					
ANR	8878818	PtrMemberAccess	minst -> heap		8878379	0					
ANR	8878819	Identifier	minst		8878379	0					
ANR	8878820	Identifier	heap		8878379	1					
ANR	8878821	PrimaryExpression	0		8878379	1					
ANR	8878822	CompoundStatement		85:75:2983:2983	8878379	1					
ANR	8878823	SwitchStatement	switch ( * arg )		8878379	0					
ANR	8878824	Condition	* arg	220:16:7132:7135	8878379	0	True				
ANR	8878825	UnaryOperationExpression	* arg		8878379	0					
ANR	8878826	UnaryOperator	*		8878379	0					
ANR	8878827	Identifier	arg		8878379	1					
ANR	8878828	CompoundStatement		86:22:3007:3007	8878379	1					
ANR	8878829	Label	case '-' :	221:12:7152:7160	8878379	0	True				
ANR	8878830	ExpressionStatement	"code = swproc ( minst , arg , & args )"	222:16:7178:7210	8878379	1	True				
ANR	8878831	AssignmentExpression	"code = swproc ( minst , arg , & args )"		8878379	0		=			
ANR	8878832	Identifier	code		8878379	0					
ANR	8878833	CallExpression	"swproc ( minst , arg , & args )"		8878379	1					
ANR	8878834	Callee	swproc		8878379	0					
ANR	8878835	Identifier	swproc		8878379	0					
ANR	8878836	ArgumentList	minst		8878379	1					
ANR	8878837	Argument	minst		8878379	0					
ANR	8878838	Identifier	minst		8878379	0					
ANR	8878839	Argument	arg		8878379	1					
ANR	8878840	Identifier	arg		8878379	0					
ANR	8878841	Argument	& args		8878379	2					
ANR	8878842	UnaryOperationExpression	& args		8878379	0					
ANR	8878843	UnaryOperator	&		8878379	0					
ANR	8878844	Identifier	args		8878379	1					
ANR	8878845	IfStatement	if ( code < 0 )		8878379	2					
ANR	8878846	Condition	code < 0	223:20:7232:7239	8878379	0	True				
ANR	8878847	RelationalExpression	code < 0		8878379	0		<			
ANR	8878848	Identifier	code		8878379	0					
ANR	8878849	PrimaryExpression	0		8878379	1					
ANR	8878850	ReturnStatement	return code ;	224:20:7262:7273	8878379	1	True				
ANR	8878851	Identifier	code		8878379	0					
ANR	8878852	IfStatement	if ( code > 0 )		8878379	3					
ANR	8878853	Condition	code > 0	225:20:7295:7302	8878379	0	True				
ANR	8878854	RelationalExpression	code > 0		8878379	0		>			
ANR	8878855	Identifier	code		8878379	0					
ANR	8878856	PrimaryExpression	0		8878379	1					
ANR	8878857	ExpressionStatement	"outprintf ( minst -> heap , ""Unknown switch %s - ignoring\\n"" , arg )"	226:20:7325:7386	8878379	1	True				
ANR	8878858	CallExpression	"outprintf ( minst -> heap , ""Unknown switch %s - ignoring\\n"" , arg )"		8878379	0					
ANR	8878859	Callee	outprintf		8878379	0					
ANR	8878860	Identifier	outprintf		8878379	0					
ANR	8878861	ArgumentList	minst -> heap		8878379	1					
ANR	8878862	Argument	minst -> heap		8878379	0					
ANR	8878863	PtrMemberAccess	minst -> heap		8878379	0					
ANR	8878864	Identifier	minst		8878379	0					
ANR	8878865	Identifier	heap		8878379	1					
ANR	8878866	Argument	"""Unknown switch %s - ignoring\\n"""		8878379	1					
ANR	8878867	PrimaryExpression	"""Unknown switch %s - ignoring\\n"""		8878379	0					
ANR	8878868	Argument	arg		8878379	2					
ANR	8878869	Identifier	arg		8878379	0					
ANR	8878870	IfStatement	if ( gs_debug [ ':' ] && arg [ 1 ] == 'Z' )		8878379	4					
ANR	8878871	Condition	gs_debug [ ':' ] && arg [ 1 ] == 'Z'	227:20:7408:7437	8878379	0	True				
ANR	8878872	AndExpression	gs_debug [ ':' ] && arg [ 1 ] == 'Z'		8878379	0		&&			
ANR	8878873	ArrayIndexing	gs_debug [ ':' ]		8878379	0					
ANR	8878874	Identifier	gs_debug		8878379	0					
ANR	8878875	PrimaryExpression	':'		8878379	1					
ANR	8878876	EqualityExpression	arg [ 1 ] == 'Z'		8878379	1		==			
ANR	8878877	ArrayIndexing	arg [ 1 ]		8878379	0					
ANR	8878878	Identifier	arg		8878379	0					
ANR	8878879	PrimaryExpression	1		8878379	1					
ANR	8878880	PrimaryExpression	'Z'		8878379	1					
ANR	8878881	CompoundStatement		94:20:3331:3336	8878379	1					
ANR	8878882	IdentifierDeclStatement	int i ;	228:20:7462:7467	8878379	0	True				
ANR	8878883	IdentifierDecl	i		8878379	0					
ANR	8878884	IdentifierDeclType	int		8878379	0					
ANR	8878885	Identifier	i		8878379	1					
ANR	8878886	ExpressionStatement	"dmprintf1 ( minst -> heap , ""%% Init started, instance 0x%p, with args: "" , minst )"	230:20:7490:7566	8878379	1	True				
ANR	8878887	CallExpression	"dmprintf1 ( minst -> heap , ""%% Init started, instance 0x%p, with args: "" , minst )"		8878379	0					
ANR	8878888	Callee	dmprintf1		8878379	0					
ANR	8878889	Identifier	dmprintf1		8878379	0					
ANR	8878890	ArgumentList	minst -> heap		8878379	1					
ANR	8878891	Argument	minst -> heap		8878379	0					
ANR	8878892	PtrMemberAccess	minst -> heap		8878379	0					
ANR	8878893	Identifier	minst		8878379	0					
ANR	8878894	Identifier	heap		8878379	1					
ANR	8878895	Argument	"""%% Init started, instance 0x%p, with args: """		8878379	1					
ANR	8878896	PrimaryExpression	"""%% Init started, instance 0x%p, with args: """		8878379	0					
ANR	8878897	Argument	minst		8878379	2					
ANR	8878898	Identifier	minst		8878379	0					
ANR	8878899	ForStatement	for ( i = 1 ; i < argc ; i ++ )		8878379	2					
ANR	8878900	ForInit	i = 1 ;	231:25:7593:7596	8878379	0	True				
ANR	8878901	AssignmentExpression	i = 1		8878379	0		=			
ANR	8878902	Identifier	i		8878379	0					
ANR	8878903	PrimaryExpression	1		8878379	1					
ANR	8878904	Condition	i < argc	231:30:7598:7603	8878379	1	True				
ANR	8878905	RelationalExpression	i < argc		8878379	0		<			
ANR	8878906	Identifier	i		8878379	0					
ANR	8878907	Identifier	argc		8878379	1					
ANR	8878908	PostIncDecOperationExpression	i ++	231:38:7606:7608	8878379	2	True				
ANR	8878909	Identifier	i		8878379	0					
ANR	8878910	IncDec	++		8878379	1					
ANR	8878911	ExpressionStatement	"dmprintf1 ( minst -> heap , ""%s "" , argv [ i ] )"	232:24:7635:7673	8878379	3	True				
ANR	8878912	CallExpression	"dmprintf1 ( minst -> heap , ""%s "" , argv [ i ] )"		8878379	0					
ANR	8878913	Callee	dmprintf1		8878379	0					
ANR	8878914	Identifier	dmprintf1		8878379	0					
ANR	8878915	ArgumentList	minst -> heap		8878379	1					
ANR	8878916	Argument	minst -> heap		8878379	0					
ANR	8878917	PtrMemberAccess	minst -> heap		8878379	0					
ANR	8878918	Identifier	minst		8878379	0					
ANR	8878919	Identifier	heap		8878379	1					
ANR	8878920	Argument	"""%s """		8878379	1					
ANR	8878921	PrimaryExpression	"""%s """		8878379	0					
ANR	8878922	Argument	argv [ i ]		8878379	2					
ANR	8878923	ArrayIndexing	argv [ i ]		8878379	0					
ANR	8878924	Identifier	argv		8878379	0					
ANR	8878925	Identifier	i		8878379	1					
ANR	8878926	ExpressionStatement	"dmprintf ( minst -> heap , ""\\n"" )"	233:20:7695:7722	8878379	3	True				
ANR	8878927	CallExpression	"dmprintf ( minst -> heap , ""\\n"" )"		8878379	0					
ANR	8878928	Callee	dmprintf		8878379	0					
ANR	8878929	Identifier	dmprintf		8878379	0					
ANR	8878930	ArgumentList	minst -> heap		8878379	1					
ANR	8878931	Argument	minst -> heap		8878379	0					
ANR	8878932	PtrMemberAccess	minst -> heap		8878379	0					
ANR	8878933	Identifier	minst		8878379	0					
ANR	8878934	Identifier	heap		8878379	1					
ANR	8878935	Argument	"""\\n"""		8878379	1					
ANR	8878936	PrimaryExpression	"""\\n"""		8878379	0					
ANR	8878937	BreakStatement	break ;	235:16:7758:7763	8878379	5	True				
ANR	8878938	Label	default :	236:12:7777:7784	8878379	6	True				
ANR	8878939	Identifier	default		8878379	0					
ANR	8878940	ExpressionStatement	"code = argproc ( minst , arg )"	238:16:7874:7900	8878379	7	True				
ANR	8878941	AssignmentExpression	"code = argproc ( minst , arg )"		8878379	0		=			
ANR	8878942	Identifier	code		8878379	0					
ANR	8878943	CallExpression	"argproc ( minst , arg )"		8878379	1					
ANR	8878944	Callee	argproc		8878379	0					
ANR	8878945	Identifier	argproc		8878379	0					
ANR	8878946	ArgumentList	minst		8878379	1					
ANR	8878947	Argument	minst		8878379	0					
ANR	8878948	Identifier	minst		8878379	0					
ANR	8878949	Argument	arg		8878379	1					
ANR	8878950	Identifier	arg		8878379	0					
ANR	8878951	IfStatement	if ( code < 0 )		8878379	8					
ANR	8878952	Condition	code < 0	239:20:7922:7929	8878379	0	True				
ANR	8878953	RelationalExpression	code < 0		8878379	0		<			
ANR	8878954	Identifier	code		8878379	0					
ANR	8878955	PrimaryExpression	0		8878379	1					
ANR	8878956	ReturnStatement	return code ;	240:20:7952:7963	8878379	1	True				
ANR	8878957	Identifier	code		8878379	0					
ANR	8878958	IfStatement	if ( minst -> saved_pages_test_mode )		8878379	9					
ANR	8878959	Condition	minst -> saved_pages_test_mode	241:20:7985:8012	8878379	0	True				
ANR	8878960	PtrMemberAccess	minst -> saved_pages_test_mode		8878379	0					
ANR	8878961	Identifier	minst		8878379	0					
ANR	8878962	Identifier	saved_pages_test_mode		8878379	1					
ANR	8878963	CompoundStatement		110:20:3972:4013	8878379	1					
ANR	8878964	IdentifierDeclStatement	gx_device * pdev ;	242:20:8037:8052	8878379	0	True				
ANR	8878965	IdentifierDecl	* pdev		8878379	0					
ANR	8878966	IdentifierDeclType	gx_device *		8878379	0					
ANR	8878967	Identifier	pdev		8878379	1					
ANR	8878968	IdentifierDeclStatement	int ret ;	243:20:8074:8081	8878379	1	True				
ANR	8878969	IdentifierDecl	ret		8878379	0					
ANR	8878970	IdentifierDeclType	int		8878379	0					
ANR	8878971	Identifier	ret		8878379	1					
ANR	8878972	IdentifierDeclStatement	gxdso_device_child_request child_dev_data ;	244:20:8103:8144	8878379	2	True				
ANR	8878973	IdentifierDecl	child_dev_data		8878379	0					
ANR	8878974	IdentifierDeclType	gxdso_device_child_request		8878379	0					
ANR	8878975	Identifier	child_dev_data		8878379	1					
ANR	8878976	ExpressionStatement	pdev = gs_currentdevice ( minst -> i_ctx_p -> pgs )	247:20:8230:8274	8878379	3	True				
ANR	8878977	AssignmentExpression	pdev = gs_currentdevice ( minst -> i_ctx_p -> pgs )		8878379	0		=			
ANR	8878978	Identifier	pdev		8878379	0					
ANR	8878979	CallExpression	gs_currentdevice ( minst -> i_ctx_p -> pgs )		8878379	1					
ANR	8878980	Callee	gs_currentdevice		8878379	0					
ANR	8878981	Identifier	gs_currentdevice		8878379	0					
ANR	8878982	ArgumentList	minst -> i_ctx_p -> pgs		8878379	1					
ANR	8878983	Argument	minst -> i_ctx_p -> pgs		8878379	0					
ANR	8878984	PtrMemberAccess	minst -> i_ctx_p -> pgs		8878379	0					
ANR	8878985	PtrMemberAccess	minst -> i_ctx_p		8878379	0					
ANR	8878986	Identifier	minst		8878379	0					
ANR	8878987	Identifier	i_ctx_p		8878379	1					
ANR	8878988	Identifier	pgs		8878379	1					
ANR	8878989	DoStatement	do		8878379	4					
ANR	8878990	CompoundStatement		114:23:4168:4168	8878379	0					
ANR	8878991	ExpressionStatement	child_dev_data . target = pdev	249:24:8325:8353	8878379	0	True				
ANR	8878992	AssignmentExpression	child_dev_data . target = pdev		8878379	0		=			
ANR	8878993	MemberAccess	child_dev_data . target		8878379	0					
ANR	8878994	Identifier	child_dev_data		8878379	0					
ANR	8878995	Identifier	target		8878379	1					
ANR	8878996	Identifier	pdev		8878379	1					
ANR	8878997	ExpressionStatement	"ret = dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_device_child , & child_dev_data , sizeof ( child_dev_data ) )"	250:24:8379:8537	8878379	1	True				
ANR	8878998	AssignmentExpression	"ret = dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_device_child , & child_dev_data , sizeof ( child_dev_data ) )"		8878379	0		=			
ANR	8878999	Identifier	ret		8878379	0					
ANR	8879000	CallExpression	"dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_device_child , & child_dev_data , sizeof ( child_dev_data ) )"		8878379	1					
ANR	8879001	Callee	"dev_proc ( pdev , dev_spec_op )"		8878379	0					
ANR	8879002	CallExpression	"dev_proc ( pdev , dev_spec_op )"		8878379	0					
ANR	8879003	Callee	dev_proc		8878379	0					
ANR	8879004	Identifier	dev_proc		8878379	0					
ANR	8879005	ArgumentList	pdev		8878379	1					
ANR	8879006	Argument	pdev		8878379	0					
ANR	8879007	Identifier	pdev		8878379	0					
ANR	8879008	Argument	dev_spec_op		8878379	1					
ANR	8879009	Identifier	dev_spec_op		8878379	0					
ANR	8879010	ArgumentList	pdev		8878379	1					
ANR	8879011	Argument	pdev		8878379	0					
ANR	8879012	Identifier	pdev		8878379	0					
ANR	8879013	Argument	gxdso_device_child		8878379	1					
ANR	8879014	Identifier	gxdso_device_child		8878379	0					
ANR	8879015	Argument	& child_dev_data		8878379	2					
ANR	8879016	UnaryOperationExpression	& child_dev_data		8878379	0					
ANR	8879017	UnaryOperator	&		8878379	0					
ANR	8879018	Identifier	child_dev_data		8878379	1					
ANR	8879019	Argument	sizeof ( child_dev_data )		8878379	3					
ANR	8879020	SizeofExpression	sizeof ( child_dev_data )		8878379	0					
ANR	8879021	Sizeof	sizeof		8878379	0					
ANR	8879022	SizeofOperand	child_dev_data		8878379	1					
ANR	8879023	IfStatement	if ( ret > 0 )		8878379	2					
ANR	8879024	Condition	ret > 0	252:28:8567:8573	8878379	0	True				
ANR	8879025	RelationalExpression	ret > 0		8878379	0		>			
ANR	8879026	Identifier	ret		8878379	0					
ANR	8879027	PrimaryExpression	0		8878379	1					
ANR	8879028	ExpressionStatement	pdev = child_dev_data . target	253:28:8604:8632	8878379	1	True				
ANR	8879029	AssignmentExpression	pdev = child_dev_data . target		8878379	0		=			
ANR	8879030	Identifier	pdev		8878379	0					
ANR	8879031	MemberAccess	child_dev_data . target		8878379	1					
ANR	8879032	Identifier	child_dev_data		8878379	0					
ANR	8879033	Identifier	target		8878379	1					
ANR	8879034	Condition	( ret > 0 ) && ( child_dev_data . n != 0 )	254:29:8663:8698	8878379	1	True				
ANR	8879035	AndExpression	( ret > 0 ) && ( child_dev_data . n != 0 )		8878379	0		&&			
ANR	8879036	RelationalExpression	ret > 0		8878379	0		>			
ANR	8879037	Identifier	ret		8878379	0					
ANR	8879038	PrimaryExpression	0		8878379	1					
ANR	8879039	EqualityExpression	child_dev_data . n != 0		8878379	1		!=			
ANR	8879040	MemberAccess	child_dev_data . n		8878379	0					
ANR	8879041	Identifier	child_dev_data		8878379	0					
ANR	8879042	Identifier	n		8878379	1					
ANR	8879043	PrimaryExpression	0		8878379	1					
ANR	8879044	IfStatement	"if ( ( code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""print normal flush"" , 18 ) ) < 0 )"		8878379	5					
ANR	8879045	Condition	"( code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""print normal flush"" , 18 ) ) < 0"	255:24:8726:8858	8878379	0	True				
ANR	8879046	RelationalExpression	"( code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""print normal flush"" , 18 ) ) < 0"		8878379	0		<			
ANR	8879047	AssignmentExpression	"code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""print normal flush"" , 18 )"		8878379	0		=			
ANR	8879048	Identifier	code		8878379	0					
ANR	8879049	CallExpression	"gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""print normal flush"" , 18 )"		8878379	1					
ANR	8879050	Callee	gx_saved_pages_param_process		8878379	0					
ANR	8879051	Identifier	gx_saved_pages_param_process		8878379	0					
ANR	8879052	ArgumentList	( gx_device_printer * ) pdev		8878379	1					
ANR	8879053	Argument	( gx_device_printer * ) pdev		8878379	0					
ANR	8879054	CastExpression	( gx_device_printer * ) pdev		8878379	0					
ANR	8879055	CastTarget	gx_device_printer *		8878379	0					
ANR	8879056	Identifier	pdev		8878379	1					
ANR	8879057	Argument	"( byte * ) ""print normal flush"""		8878379	1					
ANR	8879058	CastExpression	"( byte * ) ""print normal flush"""		8878379	0					
ANR	8879059	CastTarget	byte *		8878379	0					
ANR	8879060	PrimaryExpression	"""print normal flush"""		8878379	1					
ANR	8879061	Argument	18		8878379	2					
ANR	8879062	PrimaryExpression	18		8878379	0					
ANR	8879063	PrimaryExpression	0		8878379	1					
ANR	8879064	ReturnStatement	return code ;	257:24:8885:8896	8878379	1	True				
ANR	8879065	Identifier	code		8878379	0					
ANR	8879066	IfStatement	if ( code > 0 )		8878379	6					
ANR	8879067	Condition	code > 0	258:24:8922:8929	8878379	0	True				
ANR	8879068	RelationalExpression	code > 0		8878379	0		>			
ANR	8879069	Identifier	code		8878379	0					
ANR	8879070	PrimaryExpression	0		8878379	1					
ANR	8879071	IfStatement	if ( ( code = gs_erasepage ( minst -> i_ctx_p -> pgs ) ) < 0 )		8878379	1					
ANR	8879072	Condition	( code = gs_erasepage ( minst -> i_ctx_p -> pgs ) ) < 0	259:28:8960:9005	8878379	0	True				
ANR	8879073	RelationalExpression	( code = gs_erasepage ( minst -> i_ctx_p -> pgs ) ) < 0		8878379	0		<			
ANR	8879074	AssignmentExpression	code = gs_erasepage ( minst -> i_ctx_p -> pgs )		8878379	0		=			
ANR	8879075	Identifier	code		8878379	0					
ANR	8879076	CallExpression	gs_erasepage ( minst -> i_ctx_p -> pgs )		8878379	1					
ANR	8879077	Callee	gs_erasepage		8878379	0					
ANR	8879078	Identifier	gs_erasepage		8878379	0					
ANR	8879079	ArgumentList	minst -> i_ctx_p -> pgs		8878379	1					
ANR	8879080	Argument	minst -> i_ctx_p -> pgs		8878379	0					
ANR	8879081	PtrMemberAccess	minst -> i_ctx_p -> pgs		8878379	0					
ANR	8879082	PtrMemberAccess	minst -> i_ctx_p		8878379	0					
ANR	8879083	Identifier	minst		8878379	0					
ANR	8879084	Identifier	i_ctx_p		8878379	1					
ANR	8879085	Identifier	pgs		8878379	1					
ANR	8879086	PrimaryExpression	0		8878379	1					
ANR	8879087	ReturnStatement	return code ;	260:28:9036:9047	8878379	1	True				
ANR	8879088	Identifier	code		8878379	0					
ANR	8879089	IfStatement	if ( code < 0 )		8878379	14					
ANR	8879090	Condition	code < 0	264:8:9091:9098	8878379	0	True				
ANR	8879091	RelationalExpression	code < 0		8878379	0		<			
ANR	8879092	Identifier	code		8878379	0					
ANR	8879093	PrimaryExpression	0		8878379	1					
ANR	8879094	ReturnStatement	return code ;	265:8:9109:9120	8878379	1	True				
ANR	8879095	Identifier	code		8878379	0					
ANR	8879096	ExpressionStatement	code = gs_main_init2 ( minst )	267:4:9127:9154	8878379	15	True				
ANR	8879097	AssignmentExpression	code = gs_main_init2 ( minst )		8878379	0		=			
ANR	8879098	Identifier	code		8878379	0					
ANR	8879099	CallExpression	gs_main_init2 ( minst )		8878379	1					
ANR	8879100	Callee	gs_main_init2		8878379	0					
ANR	8879101	Identifier	gs_main_init2		8878379	0					
ANR	8879102	ArgumentList	minst		8878379	1					
ANR	8879103	Argument	minst		8878379	0					
ANR	8879104	Identifier	minst		8878379	0					
ANR	8879105	IfStatement	if ( code < 0 )		8878379	16					
ANR	8879106	Condition	code < 0	268:8:9164:9171	8878379	0	True				
ANR	8879107	RelationalExpression	code < 0		8878379	0		<			
ANR	8879108	Identifier	code		8878379	0					
ANR	8879109	PrimaryExpression	0		8878379	1					
ANR	8879110	ReturnStatement	return code ;	269:8:9182:9193	8878379	1	True				
ANR	8879111	Identifier	code		8878379	0					
ANR	8879112	IfStatement	if ( gs_debug [ ':' ] )		8878379	17					
ANR	8879113	Condition	gs_debug [ ':' ]	271:8:9204:9216	8878379	0	True				
ANR	8879114	ArrayIndexing	gs_debug [ ':' ]		8878379	0					
ANR	8879115	Identifier	gs_debug		8878379	0					
ANR	8879116	PrimaryExpression	':'		8878379	1					
ANR	8879117	CompoundStatement		138:8:5098:5103	8878379	1					
ANR	8879118	IdentifierDeclStatement	int i ;	272:8:9229:9234	8878379	0	True				
ANR	8879119	IdentifierDecl	i		8878379	0					
ANR	8879120	IdentifierDeclType	int		8878379	0					
ANR	8879121	Identifier	i		8878379	1					
ANR	8879122	ExpressionStatement	"dmprintf1 ( minst -> heap , ""%% Init done, instance 0x%p, with args: "" , minst )"	274:8:9245:9318	8878379	1	True				
ANR	8879123	CallExpression	"dmprintf1 ( minst -> heap , ""%% Init done, instance 0x%p, with args: "" , minst )"		8878379	0					
ANR	8879124	Callee	dmprintf1		8878379	0					
ANR	8879125	Identifier	dmprintf1		8878379	0					
ANR	8879126	ArgumentList	minst -> heap		8878379	1					
ANR	8879127	Argument	minst -> heap		8878379	0					
ANR	8879128	PtrMemberAccess	minst -> heap		8878379	0					
ANR	8879129	Identifier	minst		8878379	0					
ANR	8879130	Identifier	heap		8878379	1					
ANR	8879131	Argument	"""%% Init done, instance 0x%p, with args: """		8878379	1					
ANR	8879132	PrimaryExpression	"""%% Init done, instance 0x%p, with args: """		8878379	0					
ANR	8879133	Argument	minst		8878379	2					
ANR	8879134	Identifier	minst		8878379	0					
ANR	8879135	ForStatement	for ( i = 1 ; i < argc ; i ++ )		8878379	2					
ANR	8879136	ForInit	i = 1 ;	275:13:9333:9336	8878379	0	True				
ANR	8879137	AssignmentExpression	i = 1		8878379	0		=			
ANR	8879138	Identifier	i		8878379	0					
ANR	8879139	PrimaryExpression	1		8878379	1					
ANR	8879140	Condition	i < argc	275:18:9338:9343	8878379	1	True				
ANR	8879141	RelationalExpression	i < argc		8878379	0		<			
ANR	8879142	Identifier	i		8878379	0					
ANR	8879143	Identifier	argc		8878379	1					
ANR	8879144	PostIncDecOperationExpression	i ++	275:26:9346:9348	8878379	2	True				
ANR	8879145	Identifier	i		8878379	0					
ANR	8879146	IncDec	++		8878379	1					
ANR	8879147	ExpressionStatement	"dmprintf1 ( minst -> heap , ""%s "" , argv [ i ] )"	276:12:9363:9401	8878379	3	True				
ANR	8879148	CallExpression	"dmprintf1 ( minst -> heap , ""%s "" , argv [ i ] )"		8878379	0					
ANR	8879149	Callee	dmprintf1		8878379	0					
ANR	8879150	Identifier	dmprintf1		8878379	0					
ANR	8879151	ArgumentList	minst -> heap		8878379	1					
ANR	8879152	Argument	minst -> heap		8878379	0					
ANR	8879153	PtrMemberAccess	minst -> heap		8878379	0					
ANR	8879154	Identifier	minst		8878379	0					
ANR	8879155	Identifier	heap		8878379	1					
ANR	8879156	Argument	"""%s """		8878379	1					
ANR	8879157	PrimaryExpression	"""%s """		8878379	0					
ANR	8879158	Argument	argv [ i ]		8878379	2					
ANR	8879159	ArrayIndexing	argv [ i ]		8878379	0					
ANR	8879160	Identifier	argv		8878379	0					
ANR	8879161	Identifier	i		8878379	1					
ANR	8879162	ExpressionStatement	"dmprintf ( minst -> heap , ""\\n"" )"	277:8:9411:9438	8878379	3	True				
ANR	8879163	CallExpression	"dmprintf ( minst -> heap , ""\\n"" )"		8878379	0					
ANR	8879164	Callee	dmprintf		8878379	0					
ANR	8879165	Identifier	dmprintf		8878379	0					
ANR	8879166	ArgumentList	minst -> heap		8878379	1					
ANR	8879167	Argument	minst -> heap		8878379	0					
ANR	8879168	PtrMemberAccess	minst -> heap		8878379	0					
ANR	8879169	Identifier	minst		8878379	0					
ANR	8879170	Identifier	heap		8878379	1					
ANR	8879171	Argument	"""\\n"""		8878379	1					
ANR	8879172	PrimaryExpression	"""\\n"""		8878379	0					
ANR	8879173	IfStatement	if ( ! minst -> run_start )		8878379	18					
ANR	8879174	Condition	! minst -> run_start	279:8:9454:9470	8878379	0	True				
ANR	8879175	UnaryOperationExpression	! minst -> run_start		8878379	0					
ANR	8879176	UnaryOperator	!		8878379	0					
ANR	8879177	PtrMemberAccess	minst -> run_start		8878379	1					
ANR	8879178	Identifier	minst		8878379	0					
ANR	8879179	Identifier	run_start		8878379	1					
ANR	8879180	ReturnStatement	return gs_error_Quit ;	280:8:9481:9501	8878379	1	True				
ANR	8879181	Identifier	gs_error_Quit		8878379	0					
ANR	8879182	ReturnStatement	return code ;	281:4:9507:9519	8878379	19	True				
ANR	8879183	Identifier	code		8878379	0					
ANR	8879184	ReturnType	int		8878379	1					
ANR	8879185	Identifier	gs_main_init_with_args		8878379	2					
ANR	8879186	ParameterList	"gs_main_instance * minst , int argc , char * argv [ ]"		8878379	3					
ANR	8879187	Parameter	gs_main_instance * minst	134:23:4080:4103	8878379	0	True				
ANR	8879188	ParameterType	gs_main_instance *		8878379	0					
ANR	8879189	Identifier	minst		8878379	1					
ANR	8879190	Parameter	int argc	134:49:4106:4113	8878379	1	True				
ANR	8879191	ParameterType	int		8878379	0					
ANR	8879192	Identifier	argc		8878379	1					
ANR	8879193	Parameter	char * argv [ ]	134:59:4116:4127	8878379	2	True				
ANR	8879194	ParameterType	char * [ ]		8878379	0					
ANR	8879195	Identifier	argv		8878379	1					
ANR	8879196	CFGEntryNode	ENTRY		8878379		True				
ANR	8879197	CFGExitNode	EXIT		8878379		True				
ANR	8879198	Symbol	& child_dev_data		8878379						
ANR	8879199	Symbol	minst		8878379						
ANR	8879200	Symbol	helping		8878379						
ANR	8879201	Symbol	minst -> lib_path		8878379						
ANR	8879202	Symbol	dev_spec_op		8878379						
ANR	8879203	Symbol	argproc		8878379						
ANR	8879204	Symbol	gs_currentdevice		8878379						
ANR	8879205	Symbol	* argv		8878379						
ANR	8879206	Symbol	minst -> i_ctx_p		8878379						
ANR	8879207	Symbol	gs_error_Info		8878379						
ANR	8879208	Symbol	* minst -> i_ctx_p		8878379						
ANR	8879209	Symbol	path		8878379						
ANR	8879210	Symbol	pdev		8878379						
ANR	8879211	Symbol	gs_debug		8878379						
ANR	8879212	Symbol	len		8878379						
ANR	8879213	Symbol	opts		8878379						
ANR	8879214	Symbol	* gs_debug		8878379						
ANR	8879215	Symbol	gs_error_Fatal		8878379						
ANR	8879216	Symbol	ret		8878379						
ANR	8879217	Symbol	gs_error_Quit		8878379						
ANR	8879218	Symbol	child_dev_data . target		8878379						
ANR	8879219	Symbol	child_dev_data		8878379						
ANR	8879220	Symbol	* minst		8878379						
ANR	8879221	Symbol	GS_MAX_LIB_DIRS		8878379						
ANR	8879222	Symbol	minst -> lib_path . env		8878379						
ANR	8879223	Symbol	minst -> get_codepoint		8878379						
ANR	8879224	Symbol	gs_main_arg_fopen		8878379						
ANR	8879225	Symbol	minst -> lib_path . final		8878379						
ANR	8879226	Symbol	arg_next		8878379						
ANR	8879227	Symbol	* * minst		8878379						
ANR	8879228	Symbol	true		8878379						
ANR	8879229	Symbol	gs_main_init2		8878379						
ANR	8879230	Symbol	gs_lib_default_path		8878379						
ANR	8879231	Symbol	gs_main_init0		8878379						
ANR	8879232	Symbol	& len		8878379						
ANR	8879233	Symbol	* arg		8878379						
ANR	8879234	Symbol	code		8878379						
ANR	8879235	Symbol	swproc		8878379						
ANR	8879236	Symbol	gs_main_set_lib_paths		8878379						
ANR	8879237	Symbol	minst -> saved_pages_test_mode		8878379						
ANR	8879238	Symbol	minst -> heap		8878379						
ANR	8879239	Symbol	argv		8878379						
ANR	8879240	Symbol	child_dev_data . n		8878379						
ANR	8879241	Symbol	minst -> i_ctx_p -> pgs		8878379						
ANR	8879242	Symbol	arg_strcmp		8878379						
ANR	8879243	Symbol	dev_proc		8878379						
ANR	8879244	Symbol	arg		8878379						
ANR	8879245	Symbol	gs_erasepage		8878379						
ANR	8879246	Symbol	GS_OPTIONS		8878379						
ANR	8879247	Symbol	& args		8878379						
ANR	8879248	Symbol	gxdso_device_child		8878379						
ANR	8879249	Symbol	argc		8878379						
ANR	8879250	Symbol	arg_push_memory_string		8878379						
ANR	8879251	Symbol	gs_alloc_bytes		8878379						
ANR	8879252	Symbol	gx_saved_pages_param_process		8878379						
ANR	8879253	Symbol	minst -> run_start		8878379						
ANR	8879254	Symbol	false		8878379						
ANR	8879255	Symbol	gp_getenv		8878379						
ANR	8879256	Symbol	i		8878379						
ANR	8879257	Symbol	args		8878379						
ANR	8879258	Symbol	* i		8878379						
ANR	8879259	Symbol	GS_LIB		8878379						
ANR	8879260	Symbol	& arg		8878379						
ANR	8879261	Function	gs_main_inst_arg_decode	287:0:9562:9727							
ANR	8879262	FunctionDef	"gs_main_inst_arg_decode (gs_main_instance * minst , gs_arg_get_codepoint * get_codepoint)"		8879261	0					
ANR	8879263	CompoundStatement		289:0:9683:9727	8879261	0					
ANR	8879264	ExpressionStatement	minst -> get_codepoint = get_codepoint	290:4:9689:9725	8879261	0	True				
ANR	8879265	AssignmentExpression	minst -> get_codepoint = get_codepoint		8879261	0		=			
ANR	8879266	PtrMemberAccess	minst -> get_codepoint		8879261	0					
ANR	8879267	Identifier	minst		8879261	0					
ANR	8879268	Identifier	get_codepoint		8879261	1					
ANR	8879269	Identifier	get_codepoint		8879261	1					
ANR	8879270	ReturnType	void		8879261	1					
ANR	8879271	Identifier	gs_main_inst_arg_decode		8879261	2					
ANR	8879272	ParameterList	"gs_main_instance * minst , gs_arg_get_codepoint * get_codepoint"		8879261	3					
ANR	8879273	Parameter	gs_main_instance * minst	287:29:9591:9614	8879261	0	True				
ANR	8879274	ParameterType	gs_main_instance *		8879261	0					
ANR	8879275	Identifier	minst		8879261	1					
ANR	8879276	Parameter	gs_arg_get_codepoint * get_codepoint	288:29:9646:9680	8879261	1	True				
ANR	8879277	ParameterType	gs_arg_get_codepoint *		8879261	0					
ANR	8879278	Identifier	get_codepoint		8879261	1					
ANR	8879279	CFGEntryNode	ENTRY		8879261		True				
ANR	8879280	CFGExitNode	EXIT		8879261		True				
ANR	8879281	Symbol	minst -> get_codepoint		8879261						
ANR	8879282	Symbol	minst		8879261						
ANR	8879283	Symbol	get_codepoint		8879261						
ANR	8879284	Symbol	* minst		8879261						
ANR	8879285	Function	gs_main_inst_get_arg_decode	293:0:9730:9841							
ANR	8879286	FunctionDef	gs_main_inst_get_arg_decode (gs_main_instance * minst)		8879285	0					
ANR	8879287	CompoundStatement		294:0:9806:9841	8879285	0					
ANR	8879288	ReturnStatement	return minst -> get_codepoint ;	295:4:9812:9839	8879285	0	True				
ANR	8879289	PtrMemberAccess	minst -> get_codepoint		8879285	0					
ANR	8879290	Identifier	minst		8879285	0					
ANR	8879291	Identifier	get_codepoint		8879285	1					
ANR	8879292	ReturnType	gs_arg_get_codepoint *		8879285	1					
ANR	8879293	Identifier	gs_main_inst_get_arg_decode		8879285	2					
ANR	8879294	ParameterList	gs_main_instance * minst		8879285	3					
ANR	8879295	Parameter	gs_main_instance * minst	293:50:9780:9803	8879285	0	True				
ANR	8879296	ParameterType	gs_main_instance *		8879285	0					
ANR	8879297	Identifier	minst		8879285	1					
ANR	8879298	CFGEntryNode	ENTRY		8879285		True				
ANR	8879299	CFGExitNode	EXIT		8879285		True				
ANR	8879300	Symbol	minst -> get_codepoint		8879285						
ANR	8879301	Symbol	minst		8879285						
ANR	8879302	Symbol	* minst		8879285						
ANR	8879303	Function	gs_main_run_start	301:0:9917:10037							
ANR	8879304	FunctionDef	gs_main_run_start (gs_main_instance * minst)		8879303	0					
ANR	8879305	CompoundStatement		303:0:9965:10037	8879303	0					
ANR	8879306	ReturnStatement	"return run_string ( minst , ""systemdict /start get exec"" , runFlush ) ;"	304:4:9971:10035	8879303	0	True				
ANR	8879307	CallExpression	"run_string ( minst , ""systemdict /start get exec"" , runFlush )"		8879303	0					
ANR	8879308	Callee	run_string		8879303	0					
ANR	8879309	Identifier	run_string		8879303	0					
ANR	8879310	ArgumentList	minst		8879303	1					
ANR	8879311	Argument	minst		8879303	0					
ANR	8879312	Identifier	minst		8879303	0					
ANR	8879313	Argument	"""systemdict /start get exec"""		8879303	1					
ANR	8879314	PrimaryExpression	"""systemdict /start get exec"""		8879303	0					
ANR	8879315	Argument	runFlush		8879303	2					
ANR	8879316	Identifier	runFlush		8879303	0					
ANR	8879317	ReturnType	int		8879303	1					
ANR	8879318	Identifier	gs_main_run_start		8879303	2					
ANR	8879319	ParameterList	gs_main_instance * minst		8879303	3					
ANR	8879320	Parameter	gs_main_instance * minst	302:18:9939:9962	8879303	0	True				
ANR	8879321	ParameterType	gs_main_instance *		8879303	0					
ANR	8879322	Identifier	minst		8879303	1					
ANR	8879323	CFGEntryNode	ENTRY		8879303		True				
ANR	8879324	CFGExitNode	EXIT		8879303		True				
ANR	8879325	Symbol	minst		8879303						
ANR	8879326	Symbol	run_string		8879303						
ANR	8879327	Symbol	runFlush		8879303						
ANR	8879328	Function	swproc	309:0:10129:35802							
ANR	8879329	FunctionDef	"swproc (gs_main_instance * minst , const char * arg , arg_list * pal)"		8879328	0					
ANR	8879330	CompoundStatement		311:0:10206:35802	8879328	0					
ANR	8879331	IdentifierDeclStatement	char sw = arg [ 1 ] ;	312:4:10212:10228	8879328	0	True				
ANR	8879332	IdentifierDecl	sw = arg [ 1 ]		8879328	0					
ANR	8879333	IdentifierDeclType	char		8879328	0					
ANR	8879334	Identifier	sw		8879328	1					
ANR	8879335	AssignmentExpression	sw = arg [ 1 ]		8879328	2		=			
ANR	8879336	Identifier	sw		8879328	0					
ANR	8879337	ArrayIndexing	arg [ 1 ]		8879328	1					
ANR	8879338	Identifier	arg		8879328	0					
ANR	8879339	PrimaryExpression	1		8879328	1					
ANR	8879340	IdentifierDeclStatement	ref vtrue ;	313:4:10234:10243	8879328	1	True				
ANR	8879341	IdentifierDecl	vtrue		8879328	0					
ANR	8879342	IdentifierDeclType	ref		8879328	0					
ANR	8879343	Identifier	vtrue		8879328	1					
ANR	8879344	IdentifierDeclStatement	int code = 0 ;	314:4:10249:10261	8879328	2	True				
ANR	8879345	IdentifierDecl	code = 0		8879328	0					
ANR	8879346	IdentifierDeclType	int		8879328	0					
ANR	8879347	Identifier	code		8879328	1					
ANR	8879348	AssignmentExpression	code = 0		8879328	2		=			
ANR	8879349	Identifier	code		8879328	0					
ANR	8879350	PrimaryExpression	0		8879328	1					
ANR	8879351	Statement	undef	315:1:10264:10268	8879328	3	True				
ANR	8879352	Statement	initial_enter_name	315:7:10270:10287	8879328	4	True				
ANR	8879353	Statement	define	316:1:10290:10295	8879328	5	True				
ANR	8879354	Statement	initial_enter_name	316:8:10297:10314	8879328	6	True				
ANR	8879355	Statement	(	316:26:10315:10315	8879328	7	True				
ANR	8879356	Statement	nstr	316:27:10316:10319	8879328	8	True				
ANR	8879357	Statement	","	316:31:10320:10320	8879328	9	True				
ANR	8879358	Statement	pvalue	316:33:10322:10327	8879328	10	True				
ANR	8879359	Statement	)	316:39:10328:10328	8879328	11	True				
ANR	8879360	Statement	i_initial_enter_name	317:2:10333:10352	8879328	12	True				
ANR	8879361	Statement	(	317:22:10353:10353	8879328	13	True				
ANR	8879362	Statement	minst	317:23:10354:10358	8879328	14	True				
ANR	8879363	Statement	->	317:28:10359:10360	8879328	15	True				
ANR	8879364	Statement	i_ctx_p	317:30:10361:10367	8879328	16	True				
ANR	8879365	Statement	","	317:37:10368:10368	8879328	17	True				
ANR	8879366	Statement	nstr	317:39:10370:10373	8879328	18	True				
ANR	8879367	Statement	","	317:43:10374:10374	8879328	19	True				
ANR	8879368	Statement	pvalue	317:45:10376:10381	8879328	20	True				
ANR	8879369	Statement	)	317:51:10382:10382	8879328	21	True				
ANR	8879370	ExpressionStatement	make_true ( & vtrue )	319:4:10389:10406	8879328	22	True				
ANR	8879371	CallExpression	make_true ( & vtrue )		8879328	0					
ANR	8879372	Callee	make_true		8879328	0					
ANR	8879373	Identifier	make_true		8879328	0					
ANR	8879374	ArgumentList	& vtrue		8879328	1					
ANR	8879375	Argument	& vtrue		8879328	0					
ANR	8879376	UnaryOperationExpression	& vtrue		8879328	0					
ANR	8879377	UnaryOperator	&		8879328	0					
ANR	8879378	Identifier	vtrue		8879328	1					
ANR	8879379	ExpressionStatement	arg += 2	320:4:10412:10420	8879328	23	True				
ANR	8879380	AssignmentExpression	arg += 2		8879328	0		+=			
ANR	8879381	Identifier	arg		8879328	0					
ANR	8879382	PrimaryExpression	2		8879328	1					
ANR	8879383	SwitchStatement	switch ( sw )		8879328	24					
ANR	8879384	Condition	sw	321:12:10476:10477	8879328	0	True				
ANR	8879385	Identifier	sw		8879328	0					
ANR	8879386	CompoundStatement		11:16:273:273	8879328	1					
ANR	8879387	Label	default :	322:8:10490:10497	8879328	0	True				
ANR	8879388	Identifier	default		8879328	0					
ANR	8879389	ReturnStatement	return 1 ;	323:12:10511:10519	8879328	1	True				
ANR	8879390	PrimaryExpression	1		8879328	0					
ANR	8879391	Label	case 0 :	324:8:10529:10535	8879328	2	True				
ANR	8879392	ExpressionStatement	minst -> heap -> gs_lib_ctx -> stdin_is_interactive = true	326:12:10657:10709	8879328	3	True				
ANR	8879393	AssignmentExpression	minst -> heap -> gs_lib_ctx -> stdin_is_interactive = true		8879328	0		=			
ANR	8879394	PtrMemberAccess	minst -> heap -> gs_lib_ctx -> stdin_is_interactive		8879328	0					
ANR	8879395	PtrMemberAccess	minst -> heap -> gs_lib_ctx		8879328	0					
ANR	8879396	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8879397	Identifier	minst		8879328	0					
ANR	8879398	Identifier	heap		8879328	1					
ANR	8879399	Identifier	gs_lib_ctx		8879328	1					
ANR	8879400	Identifier	stdin_is_interactive		8879328	1					
ANR	8879401	Identifier	true		8879328	1					
ANR	8879402	GotoStatement	goto run_stdin ;	327:12:10723:10737	8879328	4	True				
ANR	8879403	Identifier	run_stdin		8879328	0					
ANR	8879404	Label	case '_' :	328:8:10747:10755	8879328	5	True				
ANR	8879405	ExpressionStatement	minst -> heap -> gs_lib_ctx -> stdin_is_interactive = false	329:12:10814:10867	8879328	6	True				
ANR	8879406	AssignmentExpression	minst -> heap -> gs_lib_ctx -> stdin_is_interactive = false		8879328	0		=			
ANR	8879407	PtrMemberAccess	minst -> heap -> gs_lib_ctx -> stdin_is_interactive		8879328	0					
ANR	8879408	PtrMemberAccess	minst -> heap -> gs_lib_ctx		8879328	0					
ANR	8879409	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8879410	Identifier	minst		8879328	0					
ANR	8879411	Identifier	heap		8879328	1					
ANR	8879412	Identifier	gs_lib_ctx		8879328	1					
ANR	8879413	Identifier	stdin_is_interactive		8879328	1					
ANR	8879414	Identifier	false		8879328	1					
ANR	8879415	Label	run_stdin :	330:0:10869:10878	8879328	7	True				
ANR	8879416	Identifier	run_stdin		8879328	0					
ANR	8879417	ExpressionStatement	minst -> run_start = false	331:12:10892:10916	8879328	8	True				
ANR	8879418	AssignmentExpression	minst -> run_start = false		8879328	0		=			
ANR	8879419	PtrMemberAccess	minst -> run_start		8879328	0					
ANR	8879420	Identifier	minst		8879328	0					
ANR	8879421	Identifier	run_start		8879328	1					
ANR	8879422	Identifier	false		8879328	1					
ANR	8879423	ExpressionStatement	"code = swproc ( minst , ""-dNOPAUSE"" , pal )"	333:12:11028:11066	8879328	9	True				
ANR	8879424	AssignmentExpression	"code = swproc ( minst , ""-dNOPAUSE"" , pal )"		8879328	0		=			
ANR	8879425	Identifier	code		8879328	0					
ANR	8879426	CallExpression	"swproc ( minst , ""-dNOPAUSE"" , pal )"		8879328	1					
ANR	8879427	Callee	swproc		8879328	0					
ANR	8879428	Identifier	swproc		8879328	0					
ANR	8879429	ArgumentList	minst		8879328	1					
ANR	8879430	Argument	minst		8879328	0					
ANR	8879431	Identifier	minst		8879328	0					
ANR	8879432	Argument	"""-dNOPAUSE"""		8879328	1					
ANR	8879433	PrimaryExpression	"""-dNOPAUSE"""		8879328	0					
ANR	8879434	Argument	pal		8879328	2					
ANR	8879435	Identifier	pal		8879328	0					
ANR	8879436	IfStatement	if ( code )		8879328	10					
ANR	8879437	Condition	code	334:16:11084:11087	8879328	0	True				
ANR	8879438	Identifier	code		8879328	0					
ANR	8879439	ReturnStatement	return code ;	335:16:11106:11117	8879328	1	True				
ANR	8879440	Identifier	code		8879328	0					
ANR	8879441	ExpressionStatement	code = gs_main_init2 ( minst )	336:12:11131:11158	8879328	11	True				
ANR	8879442	AssignmentExpression	code = gs_main_init2 ( minst )		8879328	0		=			
ANR	8879443	Identifier	code		8879328	0					
ANR	8879444	CallExpression	gs_main_init2 ( minst )		8879328	1					
ANR	8879445	Callee	gs_main_init2		8879328	0					
ANR	8879446	Identifier	gs_main_init2		8879328	0					
ANR	8879447	ArgumentList	minst		8879328	1					
ANR	8879448	Argument	minst		8879328	0					
ANR	8879449	Identifier	minst		8879328	0					
ANR	8879450	IfStatement	if ( code < 0 )		8879328	12					
ANR	8879451	Condition	code < 0	337:16:11211:11218	8879328	0	True				
ANR	8879452	RelationalExpression	code < 0		8879328	0		<			
ANR	8879453	Identifier	code		8879328	0					
ANR	8879454	PrimaryExpression	0		8879328	1					
ANR	8879455	ReturnStatement	return code ;	338:16:11237:11248	8879328	1	True				
ANR	8879456	Identifier	code		8879328	0					
ANR	8879457	ExpressionStatement	"code = run_string ( minst , "".runstdin"" , runFlush )"	340:12:11263:11310	8879328	13	True				
ANR	8879458	AssignmentExpression	"code = run_string ( minst , "".runstdin"" , runFlush )"		8879328	0		=			
ANR	8879459	Identifier	code		8879328	0					
ANR	8879460	CallExpression	"run_string ( minst , "".runstdin"" , runFlush )"		8879328	1					
ANR	8879461	Callee	run_string		8879328	0					
ANR	8879462	Identifier	run_string		8879328	0					
ANR	8879463	ArgumentList	minst		8879328	1					
ANR	8879464	Argument	minst		8879328	0					
ANR	8879465	Identifier	minst		8879328	0					
ANR	8879466	Argument	""".runstdin"""		8879328	1					
ANR	8879467	PrimaryExpression	""".runstdin"""		8879328	0					
ANR	8879468	Argument	runFlush		8879328	2					
ANR	8879469	Identifier	runFlush		8879328	0					
ANR	8879470	IfStatement	if ( code < 0 )		8879328	14					
ANR	8879471	Condition	code < 0	341:16:11328:11335	8879328	0	True				
ANR	8879472	RelationalExpression	code < 0		8879328	0		<			
ANR	8879473	Identifier	code		8879328	0					
ANR	8879474	PrimaryExpression	0		8879328	1					
ANR	8879475	ReturnStatement	return code ;	342:16:11354:11365	8879328	1	True				
ANR	8879476	Identifier	code		8879328	0					
ANR	8879477	IfStatement	if ( minst -> saved_pages_test_mode )		8879328	15					
ANR	8879478	Condition	minst -> saved_pages_test_mode	344:16:11480:11507	8879328	0	True				
ANR	8879479	PtrMemberAccess	minst -> saved_pages_test_mode		8879328	0					
ANR	8879480	Identifier	minst		8879328	0					
ANR	8879481	Identifier	saved_pages_test_mode		8879328	1					
ANR	8879482	CompoundStatement		37:16:1379:1420	8879328	1					
ANR	8879483	IdentifierDeclStatement	gx_device * pdev ;	345:16:11528:11543	8879328	0	True				
ANR	8879484	IdentifierDecl	* pdev		8879328	0					
ANR	8879485	IdentifierDeclType	gx_device *		8879328	0					
ANR	8879486	Identifier	pdev		8879328	1					
ANR	8879487	IdentifierDeclStatement	int ret ;	346:16:11561:11568	8879328	1	True				
ANR	8879488	IdentifierDecl	ret		8879328	0					
ANR	8879489	IdentifierDeclType	int		8879328	0					
ANR	8879490	Identifier	ret		8879328	1					
ANR	8879491	IdentifierDeclStatement	gxdso_device_child_request child_dev_data ;	347:16:11586:11627	8879328	2	True				
ANR	8879492	IdentifierDecl	child_dev_data		8879328	0					
ANR	8879493	IdentifierDeclType	gxdso_device_child_request		8879328	0					
ANR	8879494	Identifier	child_dev_data		8879328	1					
ANR	8879495	ExpressionStatement	pdev = gs_currentdevice ( minst -> i_ctx_p -> pgs )	350:16:11705:11749	8879328	3	True				
ANR	8879496	AssignmentExpression	pdev = gs_currentdevice ( minst -> i_ctx_p -> pgs )		8879328	0		=			
ANR	8879497	Identifier	pdev		8879328	0					
ANR	8879498	CallExpression	gs_currentdevice ( minst -> i_ctx_p -> pgs )		8879328	1					
ANR	8879499	Callee	gs_currentdevice		8879328	0					
ANR	8879500	Identifier	gs_currentdevice		8879328	0					
ANR	8879501	ArgumentList	minst -> i_ctx_p -> pgs		8879328	1					
ANR	8879502	Argument	minst -> i_ctx_p -> pgs		8879328	0					
ANR	8879503	PtrMemberAccess	minst -> i_ctx_p -> pgs		8879328	0					
ANR	8879504	PtrMemberAccess	minst -> i_ctx_p		8879328	0					
ANR	8879505	Identifier	minst		8879328	0					
ANR	8879506	Identifier	i_ctx_p		8879328	1					
ANR	8879507	Identifier	pgs		8879328	1					
ANR	8879508	DoStatement	do		8879328	4					
ANR	8879509	CompoundStatement		41:19:1563:1563	8879328	0					
ANR	8879510	ExpressionStatement	child_dev_data . target = pdev	352:20:11792:11820	8879328	0	True				
ANR	8879511	AssignmentExpression	child_dev_data . target = pdev		8879328	0		=			
ANR	8879512	MemberAccess	child_dev_data . target		8879328	0					
ANR	8879513	Identifier	child_dev_data		8879328	0					
ANR	8879514	Identifier	target		8879328	1					
ANR	8879515	Identifier	pdev		8879328	1					
ANR	8879516	ExpressionStatement	"ret = dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_device_child , & child_dev_data , sizeof ( child_dev_data ) )"	353:20:11842:11996	8879328	1	True				
ANR	8879517	AssignmentExpression	"ret = dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_device_child , & child_dev_data , sizeof ( child_dev_data ) )"		8879328	0		=			
ANR	8879518	Identifier	ret		8879328	0					
ANR	8879519	CallExpression	"dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_device_child , & child_dev_data , sizeof ( child_dev_data ) )"		8879328	1					
ANR	8879520	Callee	"dev_proc ( pdev , dev_spec_op )"		8879328	0					
ANR	8879521	CallExpression	"dev_proc ( pdev , dev_spec_op )"		8879328	0					
ANR	8879522	Callee	dev_proc		8879328	0					
ANR	8879523	Identifier	dev_proc		8879328	0					
ANR	8879524	ArgumentList	pdev		8879328	1					
ANR	8879525	Argument	pdev		8879328	0					
ANR	8879526	Identifier	pdev		8879328	0					
ANR	8879527	Argument	dev_spec_op		8879328	1					
ANR	8879528	Identifier	dev_spec_op		8879328	0					
ANR	8879529	ArgumentList	pdev		8879328	1					
ANR	8879530	Argument	pdev		8879328	0					
ANR	8879531	Identifier	pdev		8879328	0					
ANR	8879532	Argument	gxdso_device_child		8879328	1					
ANR	8879533	Identifier	gxdso_device_child		8879328	0					
ANR	8879534	Argument	& child_dev_data		8879328	2					
ANR	8879535	UnaryOperationExpression	& child_dev_data		8879328	0					
ANR	8879536	UnaryOperator	&		8879328	0					
ANR	8879537	Identifier	child_dev_data		8879328	1					
ANR	8879538	Argument	sizeof ( child_dev_data )		8879328	3					
ANR	8879539	SizeofExpression	sizeof ( child_dev_data )		8879328	0					
ANR	8879540	Sizeof	sizeof		8879328	0					
ANR	8879541	SizeofOperand	child_dev_data		8879328	1					
ANR	8879542	IfStatement	if ( ret > 0 )		8879328	2					
ANR	8879543	Condition	ret > 0	355:24:12022:12028	8879328	0	True				
ANR	8879544	RelationalExpression	ret > 0		8879328	0		>			
ANR	8879545	Identifier	ret		8879328	0					
ANR	8879546	PrimaryExpression	0		8879328	1					
ANR	8879547	ExpressionStatement	pdev = child_dev_data . target	356:24:12055:12083	8879328	1	True				
ANR	8879548	AssignmentExpression	pdev = child_dev_data . target		8879328	0		=			
ANR	8879549	Identifier	pdev		8879328	0					
ANR	8879550	MemberAccess	child_dev_data . target		8879328	1					
ANR	8879551	Identifier	child_dev_data		8879328	0					
ANR	8879552	Identifier	target		8879328	1					
ANR	8879553	Condition	( ret > 0 ) && ( child_dev_data . n != 0 )	357:25:12110:12145	8879328	1	True				
ANR	8879554	AndExpression	( ret > 0 ) && ( child_dev_data . n != 0 )		8879328	0		&&			
ANR	8879555	RelationalExpression	ret > 0		8879328	0		>			
ANR	8879556	Identifier	ret		8879328	0					
ANR	8879557	PrimaryExpression	0		8879328	1					
ANR	8879558	EqualityExpression	child_dev_data . n != 0		8879328	1		!=			
ANR	8879559	MemberAccess	child_dev_data . n		8879328	0					
ANR	8879560	Identifier	child_dev_data		8879328	0					
ANR	8879561	Identifier	n		8879328	1					
ANR	8879562	PrimaryExpression	0		8879328	1					
ANR	8879563	IfStatement	"if ( ( code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""print normal flush"" , 18 ) ) < 0 )"		8879328	5					
ANR	8879564	Condition	"( code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""print normal flush"" , 18 ) ) < 0"	358:20:12169:12297	8879328	0	True				
ANR	8879565	RelationalExpression	"( code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""print normal flush"" , 18 ) ) < 0"		8879328	0		<			
ANR	8879566	AssignmentExpression	"code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""print normal flush"" , 18 )"		8879328	0		=			
ANR	8879567	Identifier	code		8879328	0					
ANR	8879568	CallExpression	"gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""print normal flush"" , 18 )"		8879328	1					
ANR	8879569	Callee	gx_saved_pages_param_process		8879328	0					
ANR	8879570	Identifier	gx_saved_pages_param_process		8879328	0					
ANR	8879571	ArgumentList	( gx_device_printer * ) pdev		8879328	1					
ANR	8879572	Argument	( gx_device_printer * ) pdev		8879328	0					
ANR	8879573	CastExpression	( gx_device_printer * ) pdev		8879328	0					
ANR	8879574	CastTarget	gx_device_printer *		8879328	0					
ANR	8879575	Identifier	pdev		8879328	1					
ANR	8879576	Argument	"( byte * ) ""print normal flush"""		8879328	1					
ANR	8879577	CastExpression	"( byte * ) ""print normal flush"""		8879328	0					
ANR	8879578	CastTarget	byte *		8879328	0					
ANR	8879579	PrimaryExpression	"""print normal flush"""		8879328	1					
ANR	8879580	Argument	18		8879328	2					
ANR	8879581	PrimaryExpression	18		8879328	0					
ANR	8879582	PrimaryExpression	0		8879328	1					
ANR	8879583	ReturnStatement	return code ;	360:20:12320:12331	8879328	1	True				
ANR	8879584	Identifier	code		8879328	0					
ANR	8879585	IfStatement	if ( code > 0 )		8879328	6					
ANR	8879586	Condition	code > 0	361:20:12353:12360	8879328	0	True				
ANR	8879587	RelationalExpression	code > 0		8879328	0		>			
ANR	8879588	Identifier	code		8879328	0					
ANR	8879589	PrimaryExpression	0		8879328	1					
ANR	8879590	IfStatement	if ( ( code = gs_erasepage ( minst -> i_ctx_p -> pgs ) ) < 0 )		8879328	1					
ANR	8879591	Condition	( code = gs_erasepage ( minst -> i_ctx_p -> pgs ) ) < 0	362:24:12387:12432	8879328	0	True				
ANR	8879592	RelationalExpression	( code = gs_erasepage ( minst -> i_ctx_p -> pgs ) ) < 0		8879328	0		<			
ANR	8879593	AssignmentExpression	code = gs_erasepage ( minst -> i_ctx_p -> pgs )		8879328	0		=			
ANR	8879594	Identifier	code		8879328	0					
ANR	8879595	CallExpression	gs_erasepage ( minst -> i_ctx_p -> pgs )		8879328	1					
ANR	8879596	Callee	gs_erasepage		8879328	0					
ANR	8879597	Identifier	gs_erasepage		8879328	0					
ANR	8879598	ArgumentList	minst -> i_ctx_p -> pgs		8879328	1					
ANR	8879599	Argument	minst -> i_ctx_p -> pgs		8879328	0					
ANR	8879600	PtrMemberAccess	minst -> i_ctx_p -> pgs		8879328	0					
ANR	8879601	PtrMemberAccess	minst -> i_ctx_p		8879328	0					
ANR	8879602	Identifier	minst		8879328	0					
ANR	8879603	Identifier	i_ctx_p		8879328	1					
ANR	8879604	Identifier	pgs		8879328	1					
ANR	8879605	PrimaryExpression	0		8879328	1					
ANR	8879606	ReturnStatement	return code ;	363:24:12459:12470	8879328	1	True				
ANR	8879607	Identifier	code		8879328	0					
ANR	8879608	BreakStatement	break ;	365:12:12498:12503	8879328	16	True				
ANR	8879609	Label	case '-' :	366:8:12513:12521	8879328	17	True				
ANR	8879610	IfStatement	"if ( strncmp ( arg , ""debug="" , 6 ) == 0 )"		8879328	18					
ANR	8879611	Condition	"strncmp ( arg , ""debug="" , 6 ) == 0"	367:16:12586:12615	8879328	0	True				
ANR	8879612	EqualityExpression	"strncmp ( arg , ""debug="" , 6 ) == 0"		8879328	0		==			
ANR	8879613	CallExpression	"strncmp ( arg , ""debug="" , 6 )"		8879328	0					
ANR	8879614	Callee	strncmp		8879328	0					
ANR	8879615	Identifier	strncmp		8879328	0					
ANR	8879616	ArgumentList	arg		8879328	1					
ANR	8879617	Argument	arg		8879328	0					
ANR	8879618	Identifier	arg		8879328	0					
ANR	8879619	Argument	"""debug="""		8879328	1					
ANR	8879620	PrimaryExpression	"""debug="""		8879328	0					
ANR	8879621	Argument	6		8879328	2					
ANR	8879622	PrimaryExpression	6		8879328	0					
ANR	8879623	PrimaryExpression	0		8879328	1					
ANR	8879624	CompoundStatement		57:48:2411:2411	8879328	1					
ANR	8879625	ExpressionStatement	"code = gs_debug_flags_parse ( minst -> heap , arg + 6 )"	368:16:12636:12683	8879328	0	True				
ANR	8879626	AssignmentExpression	"code = gs_debug_flags_parse ( minst -> heap , arg + 6 )"		8879328	0		=			
ANR	8879627	Identifier	code		8879328	0					
ANR	8879628	CallExpression	"gs_debug_flags_parse ( minst -> heap , arg + 6 )"		8879328	1					
ANR	8879629	Callee	gs_debug_flags_parse		8879328	0					
ANR	8879630	Identifier	gs_debug_flags_parse		8879328	0					
ANR	8879631	ArgumentList	minst -> heap		8879328	1					
ANR	8879632	Argument	minst -> heap		8879328	0					
ANR	8879633	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8879634	Identifier	minst		8879328	0					
ANR	8879635	Identifier	heap		8879328	1					
ANR	8879636	Argument	arg + 6		8879328	1					
ANR	8879637	AdditiveExpression	arg + 6		8879328	0		+			
ANR	8879638	Identifier	arg		8879328	0					
ANR	8879639	PrimaryExpression	6		8879328	1					
ANR	8879640	IfStatement	if ( code < 0 )		8879328	1					
ANR	8879641	Condition	code < 0	369:20:12705:12712	8879328	0	True				
ANR	8879642	RelationalExpression	code < 0		8879328	0		<			
ANR	8879643	Identifier	code		8879328	0					
ANR	8879644	PrimaryExpression	0		8879328	1					
ANR	8879645	ReturnStatement	return code ;	370:20:12735:12746	8879328	1	True				
ANR	8879646	Identifier	code		8879328	0					
ANR	8879647	BreakStatement	break ;	371:16:12764:12769	8879328	2	True				
ANR	8879648	ElseStatement	else		8879328	0					
ANR	8879649	IfStatement	"if ( strncmp ( arg , ""saved-pages="" , 12 ) == 0 )"		8879328	0					
ANR	8879650	Condition	"strncmp ( arg , ""saved-pages="" , 12 ) == 0"	372:23:12794:12830	8879328	0	True				
ANR	8879651	EqualityExpression	"strncmp ( arg , ""saved-pages="" , 12 ) == 0"		8879328	0		==			
ANR	8879652	CallExpression	"strncmp ( arg , ""saved-pages="" , 12 )"		8879328	0					
ANR	8879653	Callee	strncmp		8879328	0					
ANR	8879654	Identifier	strncmp		8879328	0					
ANR	8879655	ArgumentList	arg		8879328	1					
ANR	8879656	Argument	arg		8879328	0					
ANR	8879657	Identifier	arg		8879328	0					
ANR	8879658	Argument	"""saved-pages="""		8879328	1					
ANR	8879659	PrimaryExpression	"""saved-pages="""		8879328	0					
ANR	8879660	Argument	12		8879328	2					
ANR	8879661	PrimaryExpression	12		8879328	0					
ANR	8879662	PrimaryExpression	0		8879328	1					
ANR	8879663	CompoundStatement		63:16:2644:2659	8879328	1					
ANR	8879664	IdentifierDeclStatement	gx_device * pdev ;	373:16:12851:12866	8879328	0	True				
ANR	8879665	IdentifierDecl	* pdev		8879328	0					
ANR	8879666	IdentifierDeclType	gx_device *		8879328	0					
ANR	8879667	Identifier	pdev		8879328	1					
ANR	8879668	IfStatement	if ( minst -> init_done < 2 )		8879328	1					
ANR	8879669	Condition	minst -> init_done < 2	376:20:12977:12996	8879328	0	True				
ANR	8879670	RelationalExpression	minst -> init_done < 2		8879328	0		<			
ANR	8879671	PtrMemberAccess	minst -> init_done		8879328	0					
ANR	8879672	Identifier	minst		8879328	0					
ANR	8879673	Identifier	init_done		8879328	1					
ANR	8879674	PrimaryExpression	2		8879328	1					
ANR	8879675	CompoundStatement		66:42:2792:2792	8879328	1					
ANR	8879676	IfStatement	if ( minst -> saved_pages_initial_arg == NULL )		8879328	0					
ANR	8879677	Condition	minst -> saved_pages_initial_arg == NULL	377:24:13025:13062	8879328	0	True				
ANR	8879678	EqualityExpression	minst -> saved_pages_initial_arg == NULL		8879328	0		==			
ANR	8879679	PtrMemberAccess	minst -> saved_pages_initial_arg		8879328	0					
ANR	8879680	Identifier	minst		8879328	0					
ANR	8879681	Identifier	saved_pages_initial_arg		8879328	1					
ANR	8879682	Identifier	NULL		8879328	1					
ANR	8879683	CompoundStatement		67:64:2858:2858	8879328	1					
ANR	8879684	ExpressionStatement	minst -> saved_pages_initial_arg = ( char * ) arg + 12	379:24:13175:13222	8879328	0	True				
ANR	8879685	AssignmentExpression	minst -> saved_pages_initial_arg = ( char * ) arg + 12		8879328	0		=			
ANR	8879686	PtrMemberAccess	minst -> saved_pages_initial_arg		8879328	0					
ANR	8879687	Identifier	minst		8879328	0					
ANR	8879688	Identifier	saved_pages_initial_arg		8879328	1					
ANR	8879689	AdditiveExpression	( char * ) arg + 12		8879328	1		+			
ANR	8879690	CastExpression	( char * ) arg		8879328	0					
ANR	8879691	CastTarget	char *		8879328	0					
ANR	8879692	Identifier	arg		8879328	1					
ANR	8879693	PrimaryExpression	12		8879328	1					
ANR	8879694	ElseStatement	else		8879328	0					
ANR	8879695	CompoundStatement		70:27:3044:3044	8879328	0					
ANR	8879696	ExpressionStatement	"outprintf ( minst -> heap , ""   Only one --saved-pages=... command allowed before processing input\\n"" )"	381:24:13277:13408	8879328	0	True				
ANR	8879697	CallExpression	"outprintf ( minst -> heap , ""   Only one --saved-pages=... command allowed before processing input\\n"" )"		8879328	0					
ANR	8879698	Callee	outprintf		8879328	0					
ANR	8879699	Identifier	outprintf		8879328	0					
ANR	8879700	ArgumentList	minst -> heap		8879328	1					
ANR	8879701	Argument	minst -> heap		8879328	0					
ANR	8879702	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8879703	Identifier	minst		8879328	0					
ANR	8879704	Identifier	heap		8879328	1					
ANR	8879705	Argument	"""   Only one --saved-pages=... command allowed before processing input\\n"""		8879328	1					
ANR	8879706	PrimaryExpression	"""   Only one --saved-pages=... command allowed before processing input\\n"""		8879328	0					
ANR	8879707	ExpressionStatement	arg_finit ( pal )	383:24:13434:13448	8879328	1	True				
ANR	8879708	CallExpression	arg_finit ( pal )		8879328	0					
ANR	8879709	Callee	arg_finit		8879328	0					
ANR	8879710	Identifier	arg_finit		8879328	0					
ANR	8879711	ArgumentList	pal		8879328	1					
ANR	8879712	Argument	pal		8879328	0					
ANR	8879713	Identifier	pal		8879328	0					
ANR	8879714	ReturnStatement	return gs_error_Fatal ;	384:24:13474:13495	8879328	2	True				
ANR	8879715	Identifier	gs_error_Fatal		8879328	0					
ANR	8879716	ElseStatement	else		8879328	0					
ANR	8879717	CompoundStatement		78:20:3386:3427	8879328	0					
ANR	8879718	IdentifierDeclStatement	int ret ;	387:20:13564:13571	8879328	0	True				
ANR	8879719	IdentifierDecl	ret		8879328	0					
ANR	8879720	IdentifierDeclType	int		8879328	0					
ANR	8879721	Identifier	ret		8879328	1					
ANR	8879722	IdentifierDeclStatement	gxdso_device_child_request child_dev_data ;	388:20:13593:13634	8879328	1	True				
ANR	8879723	IdentifierDecl	child_dev_data		8879328	0					
ANR	8879724	IdentifierDeclType	gxdso_device_child_request		8879328	0					
ANR	8879725	Identifier	child_dev_data		8879328	1					
ANR	8879726	ExpressionStatement	pdev = gs_currentdevice ( minst -> i_ctx_p -> pgs )	391:20:13706:13750	8879328	2	True				
ANR	8879727	AssignmentExpression	pdev = gs_currentdevice ( minst -> i_ctx_p -> pgs )		8879328	0		=			
ANR	8879728	Identifier	pdev		8879328	0					
ANR	8879729	CallExpression	gs_currentdevice ( minst -> i_ctx_p -> pgs )		8879328	1					
ANR	8879730	Callee	gs_currentdevice		8879328	0					
ANR	8879731	Identifier	gs_currentdevice		8879328	0					
ANR	8879732	ArgumentList	minst -> i_ctx_p -> pgs		8879328	1					
ANR	8879733	Argument	minst -> i_ctx_p -> pgs		8879328	0					
ANR	8879734	PtrMemberAccess	minst -> i_ctx_p -> pgs		8879328	0					
ANR	8879735	PtrMemberAccess	minst -> i_ctx_p		8879328	0					
ANR	8879736	Identifier	minst		8879328	0					
ANR	8879737	Identifier	i_ctx_p		8879328	1					
ANR	8879738	Identifier	pgs		8879328	1					
ANR	8879739	IfStatement	"if ( dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_supports_saved_pages , NULL , 0 ) <= 0 )"		8879328	3					
ANR	8879740	Condition	"dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_supports_saved_pages , NULL , 0 ) <= 0"	392:24:13776:13850	8879328	0	True				
ANR	8879741	RelationalExpression	"dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_supports_saved_pages , NULL , 0 ) <= 0"		8879328	0		<=			
ANR	8879742	CallExpression	"dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_supports_saved_pages , NULL , 0 )"		8879328	0					
ANR	8879743	Callee	"dev_proc ( pdev , dev_spec_op )"		8879328	0					
ANR	8879744	CallExpression	"dev_proc ( pdev , dev_spec_op )"		8879328	0					
ANR	8879745	Callee	dev_proc		8879328	0					
ANR	8879746	Identifier	dev_proc		8879328	0					
ANR	8879747	ArgumentList	pdev		8879328	1					
ANR	8879748	Argument	pdev		8879328	0					
ANR	8879749	Identifier	pdev		8879328	0					
ANR	8879750	Argument	dev_spec_op		8879328	1					
ANR	8879751	Identifier	dev_spec_op		8879328	0					
ANR	8879752	ArgumentList	pdev		8879328	1					
ANR	8879753	Argument	pdev		8879328	0					
ANR	8879754	Identifier	pdev		8879328	0					
ANR	8879755	Argument	gxdso_supports_saved_pages		8879328	1					
ANR	8879756	Identifier	gxdso_supports_saved_pages		8879328	0					
ANR	8879757	Argument	NULL		8879328	2					
ANR	8879758	Identifier	NULL		8879328	0					
ANR	8879759	Argument	0		8879328	3					
ANR	8879760	PrimaryExpression	0		8879328	0					
ANR	8879761	PrimaryExpression	0		8879328	1					
ANR	8879762	CompoundStatement		82:101:3646:3646	8879328	1					
ANR	8879763	ExpressionStatement	"outprintf ( minst -> heap , ""   --saved-pages not supported by the '%s' device.\\n"" , pdev -> dname )"	393:24:13879:14038	8879328	0	True				
ANR	8879764	CallExpression	"outprintf ( minst -> heap , ""   --saved-pages not supported by the '%s' device.\\n"" , pdev -> dname )"		8879328	0					
ANR	8879765	Callee	outprintf		8879328	0					
ANR	8879766	Identifier	outprintf		8879328	0					
ANR	8879767	ArgumentList	minst -> heap		8879328	1					
ANR	8879768	Argument	minst -> heap		8879328	0					
ANR	8879769	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8879770	Identifier	minst		8879328	0					
ANR	8879771	Identifier	heap		8879328	1					
ANR	8879772	Argument	"""   --saved-pages not supported by the '%s' device.\\n"""		8879328	1					
ANR	8879773	PrimaryExpression	"""   --saved-pages not supported by the '%s' device.\\n"""		8879328	0					
ANR	8879774	Argument	pdev -> dname		8879328	2					
ANR	8879775	PtrMemberAccess	pdev -> dname		8879328	0					
ANR	8879776	Identifier	pdev		8879328	0					
ANR	8879777	Identifier	dname		8879328	1					
ANR	8879778	ExpressionStatement	arg_finit ( pal )	396:24:14064:14078	8879328	1	True				
ANR	8879779	CallExpression	arg_finit ( pal )		8879328	0					
ANR	8879780	Callee	arg_finit		8879328	0					
ANR	8879781	Identifier	arg_finit		8879328	0					
ANR	8879782	ArgumentList	pal		8879328	1					
ANR	8879783	Argument	pal		8879328	0					
ANR	8879784	Identifier	pal		8879328	0					
ANR	8879785	ReturnStatement	return gs_error_Fatal ;	397:24:14104:14125	8879328	2	True				
ANR	8879786	Identifier	gs_error_Fatal		8879328	0					
ANR	8879787	DoStatement	do		8879328	4					
ANR	8879788	CompoundStatement		90:23:4028:4028	8879328	0					
ANR	8879789	ExpressionStatement	child_dev_data . target = pdev	401:24:14261:14289	8879328	0	True				
ANR	8879790	AssignmentExpression	child_dev_data . target = pdev		8879328	0		=			
ANR	8879791	MemberAccess	child_dev_data . target		8879328	0					
ANR	8879792	Identifier	child_dev_data		8879328	0					
ANR	8879793	Identifier	target		8879328	1					
ANR	8879794	Identifier	pdev		8879328	1					
ANR	8879795	ExpressionStatement	"ret = dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_device_child , & child_dev_data , sizeof ( child_dev_data ) )"	402:24:14315:14473	8879328	1	True				
ANR	8879796	AssignmentExpression	"ret = dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_device_child , & child_dev_data , sizeof ( child_dev_data ) )"		8879328	0		=			
ANR	8879797	Identifier	ret		8879328	0					
ANR	8879798	CallExpression	"dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_device_child , & child_dev_data , sizeof ( child_dev_data ) )"		8879328	1					
ANR	8879799	Callee	"dev_proc ( pdev , dev_spec_op )"		8879328	0					
ANR	8879800	CallExpression	"dev_proc ( pdev , dev_spec_op )"		8879328	0					
ANR	8879801	Callee	dev_proc		8879328	0					
ANR	8879802	Identifier	dev_proc		8879328	0					
ANR	8879803	ArgumentList	pdev		8879328	1					
ANR	8879804	Argument	pdev		8879328	0					
ANR	8879805	Identifier	pdev		8879328	0					
ANR	8879806	Argument	dev_spec_op		8879328	1					
ANR	8879807	Identifier	dev_spec_op		8879328	0					
ANR	8879808	ArgumentList	pdev		8879328	1					
ANR	8879809	Argument	pdev		8879328	0					
ANR	8879810	Identifier	pdev		8879328	0					
ANR	8879811	Argument	gxdso_device_child		8879328	1					
ANR	8879812	Identifier	gxdso_device_child		8879328	0					
ANR	8879813	Argument	& child_dev_data		8879328	2					
ANR	8879814	UnaryOperationExpression	& child_dev_data		8879328	0					
ANR	8879815	UnaryOperator	&		8879328	0					
ANR	8879816	Identifier	child_dev_data		8879328	1					
ANR	8879817	Argument	sizeof ( child_dev_data )		8879328	3					
ANR	8879818	SizeofExpression	sizeof ( child_dev_data )		8879328	0					
ANR	8879819	Sizeof	sizeof		8879328	0					
ANR	8879820	SizeofOperand	child_dev_data		8879328	1					
ANR	8879821	IfStatement	if ( ret > 0 )		8879328	2					
ANR	8879822	Condition	ret > 0	404:28:14503:14509	8879328	0	True				
ANR	8879823	RelationalExpression	ret > 0		8879328	0		>			
ANR	8879824	Identifier	ret		8879328	0					
ANR	8879825	PrimaryExpression	0		8879328	1					
ANR	8879826	ExpressionStatement	pdev = child_dev_data . target	405:28:14540:14568	8879328	1	True				
ANR	8879827	AssignmentExpression	pdev = child_dev_data . target		8879328	0		=			
ANR	8879828	Identifier	pdev		8879328	0					
ANR	8879829	MemberAccess	child_dev_data . target		8879328	1					
ANR	8879830	Identifier	child_dev_data		8879328	0					
ANR	8879831	Identifier	target		8879328	1					
ANR	8879832	Condition	( ret > 0 ) && ( child_dev_data . n != 0 )	406:29:14599:14634	8879328	1	True				
ANR	8879833	AndExpression	( ret > 0 ) && ( child_dev_data . n != 0 )		8879328	0		&&			
ANR	8879834	RelationalExpression	ret > 0		8879328	0		>			
ANR	8879835	Identifier	ret		8879328	0					
ANR	8879836	PrimaryExpression	0		8879328	1					
ANR	8879837	EqualityExpression	child_dev_data . n != 0		8879328	1		!=			
ANR	8879838	MemberAccess	child_dev_data . n		8879328	0					
ANR	8879839	Identifier	child_dev_data		8879328	0					
ANR	8879840	Identifier	n		8879328	1					
ANR	8879841	PrimaryExpression	0		8879328	1					
ANR	8879842	IfStatement	"if ( ( code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) arg + 12 , strlen ( arg + 12 ) ) ) < 0 )"		8879328	5					
ANR	8879843	Condition	"( code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) arg + 12 , strlen ( arg + 12 ) ) ) < 0"	407:24:14662:14823	8879328	0	True				
ANR	8879844	RelationalExpression	"( code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) arg + 12 , strlen ( arg + 12 ) ) ) < 0"		8879328	0		<			
ANR	8879845	AssignmentExpression	"code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) arg + 12 , strlen ( arg + 12 ) )"		8879328	0		=			
ANR	8879846	Identifier	code		8879328	0					
ANR	8879847	CallExpression	"gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) arg + 12 , strlen ( arg + 12 ) )"		8879328	1					
ANR	8879848	Callee	gx_saved_pages_param_process		8879328	0					
ANR	8879849	Identifier	gx_saved_pages_param_process		8879328	0					
ANR	8879850	ArgumentList	( gx_device_printer * ) pdev		8879328	1					
ANR	8879851	Argument	( gx_device_printer * ) pdev		8879328	0					
ANR	8879852	CastExpression	( gx_device_printer * ) pdev		8879328	0					
ANR	8879853	CastTarget	gx_device_printer *		8879328	0					
ANR	8879854	Identifier	pdev		8879328	1					
ANR	8879855	Argument	( byte * ) arg + 12		8879328	1					
ANR	8879856	AdditiveExpression	( byte * ) arg + 12		8879328	0		+			
ANR	8879857	CastExpression	( byte * ) arg		8879328	0					
ANR	8879858	CastTarget	byte *		8879328	0					
ANR	8879859	Identifier	arg		8879328	1					
ANR	8879860	PrimaryExpression	12		8879328	1					
ANR	8879861	Argument	strlen ( arg + 12 )		8879328	2					
ANR	8879862	CallExpression	strlen ( arg + 12 )		8879328	0					
ANR	8879863	Callee	strlen		8879328	0					
ANR	8879864	Identifier	strlen		8879328	0					
ANR	8879865	ArgumentList	arg + 12		8879328	1					
ANR	8879866	Argument	arg + 12		8879328	0					
ANR	8879867	AdditiveExpression	arg + 12		8879328	0		+			
ANR	8879868	Identifier	arg		8879328	0					
ANR	8879869	PrimaryExpression	12		8879328	1					
ANR	8879870	PrimaryExpression	0		8879328	1					
ANR	8879871	ReturnStatement	return code ;	409:24:14850:14861	8879328	1	True				
ANR	8879872	Identifier	code		8879328	0					
ANR	8879873	IfStatement	if ( code > 0 )		8879328	6					
ANR	8879874	Condition	code > 0	410:24:14887:14894	8879328	0	True				
ANR	8879875	RelationalExpression	code > 0		8879328	0		>			
ANR	8879876	Identifier	code		8879328	0					
ANR	8879877	PrimaryExpression	0		8879328	1					
ANR	8879878	IfStatement	if ( ( code = gs_erasepage ( minst -> i_ctx_p -> pgs ) ) < 0 )		8879328	1					
ANR	8879879	Condition	( code = gs_erasepage ( minst -> i_ctx_p -> pgs ) ) < 0	411:28:14925:14970	8879328	0	True				
ANR	8879880	RelationalExpression	( code = gs_erasepage ( minst -> i_ctx_p -> pgs ) ) < 0		8879328	0		<			
ANR	8879881	AssignmentExpression	code = gs_erasepage ( minst -> i_ctx_p -> pgs )		8879328	0		=			
ANR	8879882	Identifier	code		8879328	0					
ANR	8879883	CallExpression	gs_erasepage ( minst -> i_ctx_p -> pgs )		8879328	1					
ANR	8879884	Callee	gs_erasepage		8879328	0					
ANR	8879885	Identifier	gs_erasepage		8879328	0					
ANR	8879886	ArgumentList	minst -> i_ctx_p -> pgs		8879328	1					
ANR	8879887	Argument	minst -> i_ctx_p -> pgs		8879328	0					
ANR	8879888	PtrMemberAccess	minst -> i_ctx_p -> pgs		8879328	0					
ANR	8879889	PtrMemberAccess	minst -> i_ctx_p		8879328	0					
ANR	8879890	Identifier	minst		8879328	0					
ANR	8879891	Identifier	i_ctx_p		8879328	1					
ANR	8879892	Identifier	pgs		8879328	1					
ANR	8879893	PrimaryExpression	0		8879328	1					
ANR	8879894	ReturnStatement	return code ;	412:28:15001:15012	8879328	1	True				
ANR	8879895	Identifier	code		8879328	0					
ANR	8879896	BreakStatement	break ;	414:16:15048:15053	8879328	2	True				
ANR	8879897	ElseStatement	else		8879328	0					
ANR	8879898	IfStatement	"if ( strncmp ( arg , ""saved-pages-test"" , 16 ) == 0 )"		8879328	0					
ANR	8879899	Condition	"strncmp ( arg , ""saved-pages-test"" , 16 ) == 0"	416:23:15166:15206	8879328	0	True				
ANR	8879900	EqualityExpression	"strncmp ( arg , ""saved-pages-test"" , 16 ) == 0"		8879328	0		==			
ANR	8879901	CallExpression	"strncmp ( arg , ""saved-pages-test"" , 16 )"		8879328	0					
ANR	8879902	Callee	strncmp		8879328	0					
ANR	8879903	Identifier	strncmp		8879328	0					
ANR	8879904	ArgumentList	arg		8879328	1					
ANR	8879905	Argument	arg		8879328	0					
ANR	8879906	Identifier	arg		8879328	0					
ANR	8879907	Argument	"""saved-pages-test"""		8879328	1					
ANR	8879908	PrimaryExpression	"""saved-pages-test"""		8879328	0					
ANR	8879909	Argument	16		8879328	2					
ANR	8879910	PrimaryExpression	16		8879328	0					
ANR	8879911	PrimaryExpression	0		8879328	1					
ANR	8879912	CompoundStatement		106:66:5002:5002	8879328	1					
ANR	8879913	ExpressionStatement	minst -> saved_pages_test_mode = true	417:16:15227:15262	8879328	0	True				
ANR	8879914	AssignmentExpression	minst -> saved_pages_test_mode = true		8879328	0		=			
ANR	8879915	PtrMemberAccess	minst -> saved_pages_test_mode		8879328	0					
ANR	8879916	Identifier	minst		8879328	0					
ANR	8879917	Identifier	saved_pages_test_mode		8879328	1					
ANR	8879918	Identifier	true		8879328	1					
ANR	8879919	BreakStatement	break ;	418:16:15280:15285	8879328	1	True				
ANR	8879920	Label	case '+' :	421:8:15339:15347	8879328	19	True				
ANR	8879921	ExpressionStatement	pal -> expand_ats = false	422:12:15361:15384	8879328	20	True				
ANR	8879922	AssignmentExpression	pal -> expand_ats = false		8879328	0		=			
ANR	8879923	PtrMemberAccess	pal -> expand_ats		8879328	0					
ANR	8879924	Identifier	pal		8879328	0					
ANR	8879925	Identifier	expand_ats		8879328	1					
ANR	8879926	Identifier	false		8879328	1					
ANR	8879927	Label	case '@' :	424:8:15424:15432	8879328	21	True				
ANR	8879928	CompoundStatement		116:16:5300:5311	8879328	22					
ANR	8879929	IdentifierDeclStatement	char * psarg ;	426:16:15507:15518	8879328	0	True				
ANR	8879930	IdentifierDecl	* psarg		8879328	0					
ANR	8879931	IdentifierDeclType	char *		8879328	0					
ANR	8879932	Identifier	psarg		8879328	1					
ANR	8879933	ExpressionStatement	"code = arg_next ( pal , ( const char * * ) & psarg , minst -> heap )"	428:16:15537:15593	8879328	1	True				
ANR	8879934	AssignmentExpression	"code = arg_next ( pal , ( const char * * ) & psarg , minst -> heap )"		8879328	0		=			
ANR	8879935	Identifier	code		8879328	0					
ANR	8879936	CallExpression	"arg_next ( pal , ( const char * * ) & psarg , minst -> heap )"		8879328	1					
ANR	8879937	Callee	arg_next		8879328	0					
ANR	8879938	Identifier	arg_next		8879328	0					
ANR	8879939	ArgumentList	pal		8879328	1					
ANR	8879940	Argument	pal		8879328	0					
ANR	8879941	Identifier	pal		8879328	0					
ANR	8879942	Argument	( const char * * ) & psarg		8879328	1					
ANR	8879943	CastExpression	( const char * * ) & psarg		8879328	0					
ANR	8879944	CastTarget	const char * *		8879328	0					
ANR	8879945	UnaryOperationExpression	& psarg		8879328	1					
ANR	8879946	UnaryOperator	&		8879328	0					
ANR	8879947	Identifier	psarg		8879328	1					
ANR	8879948	Argument	minst -> heap		8879328	2					
ANR	8879949	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8879950	Identifier	minst		8879328	0					
ANR	8879951	Identifier	heap		8879328	1					
ANR	8879952	IfStatement	if ( code < 0 )		8879328	2					
ANR	8879953	Condition	code < 0	430:20:15616:15623	8879328	0	True				
ANR	8879954	RelationalExpression	code < 0		8879328	0		<			
ANR	8879955	Identifier	code		8879328	0					
ANR	8879956	PrimaryExpression	0		8879328	1					
ANR	8879957	ReturnStatement	return gs_error_Fatal ;	431:20:15646:15667	8879328	1	True				
ANR	8879958	Identifier	gs_error_Fatal		8879328	0					
ANR	8879959	IfStatement	if ( psarg == 0 )		8879328	3					
ANR	8879960	Condition	psarg == 0	432:20:15689:15698	8879328	0	True				
ANR	8879961	EqualityExpression	psarg == 0		8879328	0		==			
ANR	8879962	Identifier	psarg		8879328	0					
ANR	8879963	PrimaryExpression	0		8879328	1					
ANR	8879964	CompoundStatement		122:32:5494:5494	8879328	1					
ANR	8879965	ExpressionStatement	"outprintf ( minst -> heap , ""Usage: gs ... -%c file.ps arg1 ... argn\\n"" , sw )"	433:20:15723:15794	8879328	0	True				
ANR	8879966	CallExpression	"outprintf ( minst -> heap , ""Usage: gs ... -%c file.ps arg1 ... argn\\n"" , sw )"		8879328	0					
ANR	8879967	Callee	outprintf		8879328	0					
ANR	8879968	Identifier	outprintf		8879328	0					
ANR	8879969	ArgumentList	minst -> heap		8879328	1					
ANR	8879970	Argument	minst -> heap		8879328	0					
ANR	8879971	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8879972	Identifier	minst		8879328	0					
ANR	8879973	Identifier	heap		8879328	1					
ANR	8879974	Argument	"""Usage: gs ... -%c file.ps arg1 ... argn\\n"""		8879328	1					
ANR	8879975	PrimaryExpression	"""Usage: gs ... -%c file.ps arg1 ... argn\\n"""		8879328	0					
ANR	8879976	Argument	sw		8879328	2					
ANR	8879977	Identifier	sw		8879328	0					
ANR	8879978	ExpressionStatement	arg_finit ( pal )	434:20:15816:15830	8879328	1	True				
ANR	8879979	CallExpression	arg_finit ( pal )		8879328	0					
ANR	8879980	Callee	arg_finit		8879328	0					
ANR	8879981	Identifier	arg_finit		8879328	0					
ANR	8879982	ArgumentList	pal		8879328	1					
ANR	8879983	Argument	pal		8879328	0					
ANR	8879984	Identifier	pal		8879328	0					
ANR	8879985	ReturnStatement	return gs_error_Fatal ;	435:20:15852:15873	8879328	2	True				
ANR	8879986	Identifier	gs_error_Fatal		8879328	0					
ANR	8879987	ExpressionStatement	"psarg = arg_copy ( psarg , minst -> heap )"	437:16:15909:15945	8879328	4	True				
ANR	8879988	AssignmentExpression	"psarg = arg_copy ( psarg , minst -> heap )"		8879328	0		=			
ANR	8879989	Identifier	psarg		8879328	0					
ANR	8879990	CallExpression	"arg_copy ( psarg , minst -> heap )"		8879328	1					
ANR	8879991	Callee	arg_copy		8879328	0					
ANR	8879992	Identifier	arg_copy		8879328	0					
ANR	8879993	ArgumentList	psarg		8879328	1					
ANR	8879994	Argument	psarg		8879328	0					
ANR	8879995	Identifier	psarg		8879328	0					
ANR	8879996	Argument	minst -> heap		8879328	1					
ANR	8879997	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8879998	Identifier	minst		8879328	0					
ANR	8879999	Identifier	heap		8879328	1					
ANR	8880000	IfStatement	if ( psarg == NULL )		8879328	5					
ANR	8880001	Condition	psarg == NULL	438:20:15967:15979	8879328	0	True				
ANR	8880002	EqualityExpression	psarg == NULL		8879328	0		==			
ANR	8880003	Identifier	psarg		8879328	0					
ANR	8880004	Identifier	NULL		8879328	1					
ANR	8880005	ExpressionStatement	code = gs_error_Fatal	439:20:16002:16023	8879328	1	True				
ANR	8880006	AssignmentExpression	code = gs_error_Fatal		8879328	0		=			
ANR	8880007	Identifier	code		8879328	0					
ANR	8880008	Identifier	gs_error_Fatal		8879328	1					
ANR	8880009	ElseStatement	else		8879328	0					
ANR	8880010	ExpressionStatement	code = gs_main_init2 ( minst )	441:20:16066:16093	8879328	0	True				
ANR	8880011	AssignmentExpression	code = gs_main_init2 ( minst )		8879328	0		=			
ANR	8880012	Identifier	code		8879328	0					
ANR	8880013	CallExpression	gs_main_init2 ( minst )		8879328	1					
ANR	8880014	Callee	gs_main_init2		8879328	0					
ANR	8880015	Identifier	gs_main_init2		8879328	0					
ANR	8880016	ArgumentList	minst		8879328	1					
ANR	8880017	Argument	minst		8879328	0					
ANR	8880018	Identifier	minst		8879328	0					
ANR	8880019	IfStatement	if ( code >= 0 )		8879328	6					
ANR	8880020	Condition	code >= 0	442:20:16115:16123	8879328	0	True				
ANR	8880021	RelationalExpression	code >= 0		8879328	0		>=			
ANR	8880022	Identifier	code		8879328	0					
ANR	8880023	PrimaryExpression	0		8879328	1					
ANR	8880024	ExpressionStatement	"code = run_string ( minst , ""userdict/ARGUMENTS["" , 0 )"	443:20:16146:16196	8879328	1	True				
ANR	8880025	AssignmentExpression	"code = run_string ( minst , ""userdict/ARGUMENTS["" , 0 )"		8879328	0		=			
ANR	8880026	Identifier	code		8879328	0					
ANR	8880027	CallExpression	"run_string ( minst , ""userdict/ARGUMENTS["" , 0 )"		8879328	1					
ANR	8880028	Callee	run_string		8879328	0					
ANR	8880029	Identifier	run_string		8879328	0					
ANR	8880030	ArgumentList	minst		8879328	1					
ANR	8880031	Argument	minst		8879328	0					
ANR	8880032	Identifier	minst		8879328	0					
ANR	8880033	Argument	"""userdict/ARGUMENTS["""		8879328	1					
ANR	8880034	PrimaryExpression	"""userdict/ARGUMENTS["""		8879328	0					
ANR	8880035	Argument	0		8879328	2					
ANR	8880036	PrimaryExpression	0		8879328	0					
ANR	8880037	IfStatement	if ( code >= 0 )		8879328	7					
ANR	8880038	Condition	code >= 0	444:20:16218:16226	8879328	0	True				
ANR	8880039	RelationalExpression	code >= 0		8879328	0		>=			
ANR	8880040	Identifier	code		8879328	0					
ANR	8880041	PrimaryExpression	0		8879328	1					
ANR	8880042	WhileStatement	"while ( ( code = arg_next ( pal , ( const char * * ) & arg , minst -> heap ) ) > 0 )"		8879328	1					
ANR	8880043	Condition	"( code = arg_next ( pal , ( const char * * ) & arg , minst -> heap ) ) > 0"	445:27:16256:16315	8879328	0	True				
ANR	8880044	RelationalExpression	"( code = arg_next ( pal , ( const char * * ) & arg , minst -> heap ) ) > 0"		8879328	0		>			
ANR	8880045	AssignmentExpression	"code = arg_next ( pal , ( const char * * ) & arg , minst -> heap )"		8879328	0		=			
ANR	8880046	Identifier	code		8879328	0					
ANR	8880047	CallExpression	"arg_next ( pal , ( const char * * ) & arg , minst -> heap )"		8879328	1					
ANR	8880048	Callee	arg_next		8879328	0					
ANR	8880049	Identifier	arg_next		8879328	0					
ANR	8880050	ArgumentList	pal		8879328	1					
ANR	8880051	Argument	pal		8879328	0					
ANR	8880052	Identifier	pal		8879328	0					
ANR	8880053	Argument	( const char * * ) & arg		8879328	1					
ANR	8880054	CastExpression	( const char * * ) & arg		8879328	0					
ANR	8880055	CastTarget	const char * *		8879328	0					
ANR	8880056	UnaryOperationExpression	& arg		8879328	1					
ANR	8880057	UnaryOperator	&		8879328	0					
ANR	8880058	Identifier	arg		8879328	1					
ANR	8880059	Argument	minst -> heap		8879328	2					
ANR	8880060	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8880061	Identifier	minst		8879328	0					
ANR	8880062	Identifier	heap		8879328	1					
ANR	8880063	PrimaryExpression	0		8879328	1					
ANR	8880064	CompoundStatement		135:89:6111:6111	8879328	1					
ANR	8880065	ExpressionStatement	"code = runarg ( minst , """" , arg , """" , runInit )"	446:24:16344:16386	8879328	0	True				
ANR	8880066	AssignmentExpression	"code = runarg ( minst , """" , arg , """" , runInit )"		8879328	0		=			
ANR	8880067	Identifier	code		8879328	0					
ANR	8880068	CallExpression	"runarg ( minst , """" , arg , """" , runInit )"		8879328	1					
ANR	8880069	Callee	runarg		8879328	0					
ANR	8880070	Identifier	runarg		8879328	0					
ANR	8880071	ArgumentList	minst		8879328	1					
ANR	8880072	Argument	minst		8879328	0					
ANR	8880073	Identifier	minst		8879328	0					
ANR	8880074	Argument	""""""		8879328	1					
ANR	8880075	PrimaryExpression	""""""		8879328	0					
ANR	8880076	Argument	arg		8879328	2					
ANR	8880077	Identifier	arg		8879328	0					
ANR	8880078	Argument	""""""		8879328	3					
ANR	8880079	PrimaryExpression	""""""		8879328	0					
ANR	8880080	Argument	runInit		8879328	4					
ANR	8880081	Identifier	runInit		8879328	0					
ANR	8880082	IfStatement	if ( code < 0 )		8879328	1					
ANR	8880083	Condition	code < 0	447:28:16416:16423	8879328	0	True				
ANR	8880084	RelationalExpression	code < 0		8879328	0		<			
ANR	8880085	Identifier	code		8879328	0					
ANR	8880086	PrimaryExpression	0		8879328	1					
ANR	8880087	BreakStatement	break ;	448:28:16454:16459	8879328	1	True				
ANR	8880088	IfStatement	if ( code >= 0 )		8879328	8					
ANR	8880089	Condition	code >= 0	450:20:16503:16511	8879328	0	True				
ANR	8880090	RelationalExpression	code >= 0		8879328	0		>=			
ANR	8880091	Identifier	code		8879328	0					
ANR	8880092	PrimaryExpression	0		8879328	1					
ANR	8880093	ExpressionStatement	"code = runarg ( minst , ""]put"" , psarg , "".runfile"" , runInit | runFlush )"	451:20:16534:16601	8879328	1	True				
ANR	8880094	AssignmentExpression	"code = runarg ( minst , ""]put"" , psarg , "".runfile"" , runInit | runFlush )"		8879328	0		=			
ANR	8880095	Identifier	code		8879328	0					
ANR	8880096	CallExpression	"runarg ( minst , ""]put"" , psarg , "".runfile"" , runInit | runFlush )"		8879328	1					
ANR	8880097	Callee	runarg		8879328	0					
ANR	8880098	Identifier	runarg		8879328	0					
ANR	8880099	ArgumentList	minst		8879328	1					
ANR	8880100	Argument	minst		8879328	0					
ANR	8880101	Identifier	minst		8879328	0					
ANR	8880102	Argument	"""]put"""		8879328	1					
ANR	8880103	PrimaryExpression	"""]put"""		8879328	0					
ANR	8880104	Argument	psarg		8879328	2					
ANR	8880105	Identifier	psarg		8879328	0					
ANR	8880106	Argument	""".runfile"""		8879328	3					
ANR	8880107	PrimaryExpression	""".runfile"""		8879328	0					
ANR	8880108	Argument	runInit | runFlush		8879328	4					
ANR	8880109	InclusiveOrExpression	runInit | runFlush		8879328	0		|			
ANR	8880110	Identifier	runInit		8879328	0					
ANR	8880111	Identifier	runFlush		8879328	1					
ANR	8880112	ExpressionStatement	"arg_free ( ( char * ) psarg , minst -> heap )"	452:16:16619:16655	8879328	9	True				
ANR	8880113	CallExpression	"arg_free ( ( char * ) psarg , minst -> heap )"		8879328	0					
ANR	8880114	Callee	arg_free		8879328	0					
ANR	8880115	Identifier	arg_free		8879328	0					
ANR	8880116	ArgumentList	( char * ) psarg		8879328	1					
ANR	8880117	Argument	( char * ) psarg		8879328	0					
ANR	8880118	CastExpression	( char * ) psarg		8879328	0					
ANR	8880119	CastTarget	char *		8879328	0					
ANR	8880120	Identifier	psarg		8879328	1					
ANR	8880121	Argument	minst -> heap		8879328	1					
ANR	8880122	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8880123	Identifier	minst		8879328	0					
ANR	8880124	Identifier	heap		8879328	1					
ANR	8880125	IfStatement	if ( code >= 0 )		8879328	10					
ANR	8880126	Condition	code >= 0	453:20:16677:16685	8879328	0	True				
ANR	8880127	RelationalExpression	code >= 0		8879328	0		>=			
ANR	8880128	Identifier	code		8879328	0					
ANR	8880129	PrimaryExpression	0		8879328	1					
ANR	8880130	ExpressionStatement	code = gs_error_Quit	454:20:16708:16728	8879328	1	True				
ANR	8880131	AssignmentExpression	code = gs_error_Quit		8879328	0		=			
ANR	8880132	Identifier	code		8879328	0					
ANR	8880133	Identifier	gs_error_Quit		8879328	1					
ANR	8880134	ReturnStatement	return code ;	456:16:16763:16774	8879328	11	True				
ANR	8880135	Identifier	code		8879328	0					
ANR	8880136	Label	case 'A' :	458:8:16798:16806	8879328	23	True				
ANR	8880137	SwitchStatement	switch ( * arg )		8879328	24					
ANR	8880138	Condition	* arg	459:20:16864:16867	8879328	0	True				
ANR	8880139	UnaryOperationExpression	* arg		8879328	0					
ANR	8880140	UnaryOperator	*		8879328	0					
ANR	8880141	Identifier	arg		8879328	1					
ANR	8880142	CompoundStatement		149:26:6663:6663	8879328	1					
ANR	8880143	Label	case 0 :	460:16:16888:16894	8879328	0	True				
ANR	8880144	ExpressionStatement	gs_alloc_debug = 1	461:20:16916:16934	8879328	1	True				
ANR	8880145	AssignmentExpression	gs_alloc_debug = 1		8879328	0		=			
ANR	8880146	Identifier	gs_alloc_debug		8879328	0					
ANR	8880147	PrimaryExpression	1		8879328	1					
ANR	8880148	BreakStatement	break ;	462:20:16956:16961	8879328	2	True				
ANR	8880149	Label	case '-' :	463:16:16979:16987	8879328	3	True				
ANR	8880150	ExpressionStatement	gs_alloc_debug = 0	464:20:17009:17027	8879328	4	True				
ANR	8880151	AssignmentExpression	gs_alloc_debug = 0		8879328	0		=			
ANR	8880152	Identifier	gs_alloc_debug		8879328	0					
ANR	8880153	PrimaryExpression	0		8879328	1					
ANR	8880154	BreakStatement	break ;	465:20:17049:17054	8879328	5	True				
ANR	8880155	Label	default :	466:16:17072:17079	8879328	6	True				
ANR	8880156	Identifier	default		8879328	0					
ANR	8880157	ExpressionStatement	"puts ( minst -> heap , ""-A may only be followed by -"" )"	467:20:17101:17150	8879328	7	True				
ANR	8880158	CallExpression	"puts ( minst -> heap , ""-A may only be followed by -"" )"		8879328	0					
ANR	8880159	Callee	puts		8879328	0					
ANR	8880160	Identifier	puts		8879328	0					
ANR	8880161	ArgumentList	minst -> heap		8879328	1					
ANR	8880162	Argument	minst -> heap		8879328	0					
ANR	8880163	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8880164	Identifier	minst		8879328	0					
ANR	8880165	Identifier	heap		8879328	1					
ANR	8880166	Argument	"""-A may only be followed by -"""		8879328	1					
ANR	8880167	PrimaryExpression	"""-A may only be followed by -"""		8879328	0					
ANR	8880168	ReturnStatement	return gs_error_Fatal ;	468:20:17172:17193	8879328	8	True				
ANR	8880169	Identifier	gs_error_Fatal		8879328	0					
ANR	8880170	BreakStatement	break ;	470:12:17221:17226	8879328	25	True				
ANR	8880171	Label	case 'B' :	471:8:17236:17244	8879328	26	True				
ANR	8880172	IfStatement	if ( * arg == '-' )		8879328	27					
ANR	8880173	Condition	* arg == '-'	472:16:17309:17319	8879328	0	True				
ANR	8880174	EqualityExpression	* arg == '-'		8879328	0		==			
ANR	8880175	UnaryOperationExpression	* arg		8879328	0					
ANR	8880176	UnaryOperator	*		8879328	0					
ANR	8880177	Identifier	arg		8879328	1					
ANR	8880178	PrimaryExpression	'-'		8879328	1					
ANR	8880179	ExpressionStatement	minst -> run_buffer_size = 0	473:16:17338:17364	8879328	1	True				
ANR	8880180	AssignmentExpression	minst -> run_buffer_size = 0		8879328	0		=			
ANR	8880181	PtrMemberAccess	minst -> run_buffer_size		8879328	0					
ANR	8880182	Identifier	minst		8879328	0					
ANR	8880183	Identifier	run_buffer_size		8879328	1					
ANR	8880184	PrimaryExpression	0		8879328	1					
ANR	8880185	ElseStatement	else		8879328	0					
ANR	8880186	CompoundStatement		165:16:7194:7204	8879328	0					
ANR	8880187	IdentifierDeclStatement	uint bsize ;	475:16:17401:17411	8879328	0	True				
ANR	8880188	IdentifierDecl	bsize		8879328	0					
ANR	8880189	IdentifierDeclType	uint		8879328	0					
ANR	8880190	Identifier	bsize		8879328	1					
ANR	8880191	IfStatement	"if ( sscanf ( ( const char * ) arg , ""%u"" , & bsize ) != 1 || bsize <= 0 || bsize > MAX_BUFFERED_SIZE )"		8879328	1					
ANR	8880192	Condition	"sscanf ( ( const char * ) arg , ""%u"" , & bsize ) != 1 || bsize <= 0 || bsize > MAX_BUFFERED_SIZE"	477:20:17434:17540	8879328	0	True				
ANR	8880193	OrExpression	"sscanf ( ( const char * ) arg , ""%u"" , & bsize ) != 1 || bsize <= 0 || bsize > MAX_BUFFERED_SIZE"		8879328	0		||			
ANR	8880194	EqualityExpression	"sscanf ( ( const char * ) arg , ""%u"" , & bsize ) != 1"		8879328	0		!=			
ANR	8880195	CallExpression	"sscanf ( ( const char * ) arg , ""%u"" , & bsize )"		8879328	0					
ANR	8880196	Callee	sscanf		8879328	0					
ANR	8880197	Identifier	sscanf		8879328	0					
ANR	8880198	ArgumentList	( const char * ) arg		8879328	1					
ANR	8880199	Argument	( const char * ) arg		8879328	0					
ANR	8880200	CastExpression	( const char * ) arg		8879328	0					
ANR	8880201	CastTarget	const char *		8879328	0					
ANR	8880202	Identifier	arg		8879328	1					
ANR	8880203	Argument	"""%u"""		8879328	1					
ANR	8880204	PrimaryExpression	"""%u"""		8879328	0					
ANR	8880205	Argument	& bsize		8879328	2					
ANR	8880206	UnaryOperationExpression	& bsize		8879328	0					
ANR	8880207	UnaryOperator	&		8879328	0					
ANR	8880208	Identifier	bsize		8879328	1					
ANR	8880209	PrimaryExpression	1		8879328	1					
ANR	8880210	OrExpression	bsize <= 0 || bsize > MAX_BUFFERED_SIZE		8879328	1		||			
ANR	8880211	RelationalExpression	bsize <= 0		8879328	0		<=			
ANR	8880212	Identifier	bsize		8879328	0					
ANR	8880213	PrimaryExpression	0		8879328	1					
ANR	8880214	RelationalExpression	bsize > MAX_BUFFERED_SIZE		8879328	1		>			
ANR	8880215	Identifier	bsize		8879328	0					
ANR	8880216	Identifier	MAX_BUFFERED_SIZE		8879328	1					
ANR	8880217	CompoundStatement		169:22:7357:7357	8879328	1					
ANR	8880218	ExpressionStatement	"outprintf ( minst -> heap , ""-B must be followed by - or size between 1 and %u\\n"" , MAX_BUFFERED_SIZE )"	480:20:17586:17742	8879328	0	True				
ANR	8880219	CallExpression	"outprintf ( minst -> heap , ""-B must be followed by - or size between 1 and %u\\n"" , MAX_BUFFERED_SIZE )"		8879328	0					
ANR	8880220	Callee	outprintf		8879328	0					
ANR	8880221	Identifier	outprintf		8879328	0					
ANR	8880222	ArgumentList	minst -> heap		8879328	1					
ANR	8880223	Argument	minst -> heap		8879328	0					
ANR	8880224	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8880225	Identifier	minst		8879328	0					
ANR	8880226	Identifier	heap		8879328	1					
ANR	8880227	Argument	"""-B must be followed by - or size between 1 and %u\\n"""		8879328	1					
ANR	8880228	PrimaryExpression	"""-B must be followed by - or size between 1 and %u\\n"""		8879328	0					
ANR	8880229	Argument	MAX_BUFFERED_SIZE		8879328	2					
ANR	8880230	Identifier	MAX_BUFFERED_SIZE		8879328	0					
ANR	8880231	ReturnStatement	return gs_error_Fatal ;	483:20:17764:17785	8879328	1	True				
ANR	8880232	Identifier	gs_error_Fatal		8879328	0					
ANR	8880233	ExpressionStatement	minst -> run_buffer_size = bsize	485:16:17821:17851	8879328	2	True				
ANR	8880234	AssignmentExpression	minst -> run_buffer_size = bsize		8879328	0		=			
ANR	8880235	PtrMemberAccess	minst -> run_buffer_size		8879328	0					
ANR	8880236	Identifier	minst		8879328	0					
ANR	8880237	Identifier	run_buffer_size		8879328	1					
ANR	8880238	Identifier	bsize		8879328	1					
ANR	8880239	BreakStatement	break ;	487:12:17879:17884	8879328	28	True				
ANR	8880240	Label	case 'c' :	488:8:17894:17902	8879328	29	True				
ANR	8880241	CompoundStatement		180:16:7760:7786	8879328	30					
ANR	8880242	IdentifierDeclStatement	bool ats = pal -> expand_ats ;	490:16:17967:17993	8879328	0	True				
ANR	8880243	IdentifierDecl	ats = pal -> expand_ats		8879328	0					
ANR	8880244	IdentifierDeclType	bool		8879328	0					
ANR	8880245	Identifier	ats		8879328	1					
ANR	8880246	AssignmentExpression	ats = pal -> expand_ats		8879328	2		=			
ANR	8880247	Identifier	ats		8879328	0					
ANR	8880248	PtrMemberAccess	pal -> expand_ats		8879328	1					
ANR	8880249	Identifier	pal		8879328	0					
ANR	8880250	Identifier	expand_ats		8879328	1					
ANR	8880251	ExpressionStatement	code = gs_main_init2 ( minst )	492:16:18012:18039	8879328	1	True				
ANR	8880252	AssignmentExpression	code = gs_main_init2 ( minst )		8879328	0		=			
ANR	8880253	Identifier	code		8879328	0					
ANR	8880254	CallExpression	gs_main_init2 ( minst )		8879328	1					
ANR	8880255	Callee	gs_main_init2		8879328	0					
ANR	8880256	Identifier	gs_main_init2		8879328	0					
ANR	8880257	ArgumentList	minst		8879328	1					
ANR	8880258	Argument	minst		8879328	0					
ANR	8880259	Identifier	minst		8879328	0					
ANR	8880260	IfStatement	if ( code < 0 )		8879328	2					
ANR	8880261	Condition	code < 0	493:20:18061:18068	8879328	0	True				
ANR	8880262	RelationalExpression	code < 0		8879328	0		<			
ANR	8880263	Identifier	code		8879328	0					
ANR	8880264	PrimaryExpression	0		8879328	1					
ANR	8880265	ReturnStatement	return code ;	494:20:18091:18102	8879328	1	True				
ANR	8880266	Identifier	code		8879328	0					
ANR	8880267	ExpressionStatement	pal -> expand_ats = false	495:16:18120:18143	8879328	3	True				
ANR	8880268	AssignmentExpression	pal -> expand_ats = false		8879328	0		=			
ANR	8880269	PtrMemberAccess	pal -> expand_ats		8879328	0					
ANR	8880270	Identifier	pal		8879328	0					
ANR	8880271	Identifier	expand_ats		8879328	1					
ANR	8880272	Identifier	false		8879328	1					
ANR	8880273	WhileStatement	"while ( ( code = arg_next ( pal , ( const char * * ) & arg , minst -> heap ) ) > 0 )"		8879328	4					
ANR	8880274	Condition	"( code = arg_next ( pal , ( const char * * ) & arg , minst -> heap ) ) > 0"	496:23:18168:18227	8879328	0	True				
ANR	8880275	RelationalExpression	"( code = arg_next ( pal , ( const char * * ) & arg , minst -> heap ) ) > 0"		8879328	0		>			
ANR	8880276	AssignmentExpression	"code = arg_next ( pal , ( const char * * ) & arg , minst -> heap )"		8879328	0		=			
ANR	8880277	Identifier	code		8879328	0					
ANR	8880278	CallExpression	"arg_next ( pal , ( const char * * ) & arg , minst -> heap )"		8879328	1					
ANR	8880279	Callee	arg_next		8879328	0					
ANR	8880280	Identifier	arg_next		8879328	0					
ANR	8880281	ArgumentList	pal		8879328	1					
ANR	8880282	Argument	pal		8879328	0					
ANR	8880283	Identifier	pal		8879328	0					
ANR	8880284	Argument	( const char * * ) & arg		8879328	1					
ANR	8880285	CastExpression	( const char * * ) & arg		8879328	0					
ANR	8880286	CastTarget	const char * *		8879328	0					
ANR	8880287	UnaryOperationExpression	& arg		8879328	1					
ANR	8880288	UnaryOperator	&		8879328	0					
ANR	8880289	Identifier	arg		8879328	1					
ANR	8880290	Argument	minst -> heap		8879328	2					
ANR	8880291	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8880292	Identifier	minst		8879328	0					
ANR	8880293	Identifier	heap		8879328	1					
ANR	8880294	PrimaryExpression	0		8879328	1					
ANR	8880295	CompoundStatement		186:85:8023:8023	8879328	1					
ANR	8880296	IfStatement	if ( arg [ 0 ] == '@' || ( arg [ 0 ] == '-' && ! isdigit ( ( unsigned char ) arg [ 1 ] ) ) )		8879328	0					
ANR	8880297	Condition	arg [ 0 ] == '@' || ( arg [ 0 ] == '-' && ! isdigit ( ( unsigned char ) arg [ 1 ] ) )	497:24:18256:18346	8879328	0	True				
ANR	8880298	OrExpression	arg [ 0 ] == '@' || ( arg [ 0 ] == '-' && ! isdigit ( ( unsigned char ) arg [ 1 ] ) )		8879328	0		||			
ANR	8880299	EqualityExpression	arg [ 0 ] == '@'		8879328	0		==			
ANR	8880300	ArrayIndexing	arg [ 0 ]		8879328	0					
ANR	8880301	Identifier	arg		8879328	0					
ANR	8880302	PrimaryExpression	0		8879328	1					
ANR	8880303	PrimaryExpression	'@'		8879328	1					
ANR	8880304	AndExpression	arg [ 0 ] == '-' && ! isdigit ( ( unsigned char ) arg [ 1 ] )		8879328	1		&&			
ANR	8880305	EqualityExpression	arg [ 0 ] == '-'		8879328	0		==			
ANR	8880306	ArrayIndexing	arg [ 0 ]		8879328	0					
ANR	8880307	Identifier	arg		8879328	0					
ANR	8880308	PrimaryExpression	0		8879328	1					
ANR	8880309	PrimaryExpression	'-'		8879328	1					
ANR	8880310	UnaryOperationExpression	! isdigit ( ( unsigned char ) arg [ 1 ] )		8879328	1					
ANR	8880311	UnaryOperator	!		8879328	0					
ANR	8880312	CallExpression	isdigit ( ( unsigned char ) arg [ 1 ] )		8879328	1					
ANR	8880313	Callee	isdigit		8879328	0					
ANR	8880314	Identifier	isdigit		8879328	0					
ANR	8880315	ArgumentList	( unsigned char ) arg [ 1 ]		8879328	1					
ANR	8880316	Argument	( unsigned char ) arg [ 1 ]		8879328	0					
ANR	8880317	CastExpression	( unsigned char ) arg [ 1 ]		8879328	0					
ANR	8880318	CastTarget	unsigned char		8879328	0					
ANR	8880319	ArrayIndexing	arg [ 1 ]		8879328	1					
ANR	8880320	Identifier	arg		8879328	0					
ANR	8880321	PrimaryExpression	1		8879328	1					
ANR	8880322	BreakStatement	break ;	500:24:18398:18403	8879328	1	True				
ANR	8880323	ExpressionStatement	"code = runarg ( minst , """" , arg , "".runstring"" , 0 )"	501:20:18425:18471	8879328	1	True				
ANR	8880324	AssignmentExpression	"code = runarg ( minst , """" , arg , "".runstring"" , 0 )"		8879328	0		=			
ANR	8880325	Identifier	code		8879328	0					
ANR	8880326	CallExpression	"runarg ( minst , """" , arg , "".runstring"" , 0 )"		8879328	1					
ANR	8880327	Callee	runarg		8879328	0					
ANR	8880328	Identifier	runarg		8879328	0					
ANR	8880329	ArgumentList	minst		8879328	1					
ANR	8880330	Argument	minst		8879328	0					
ANR	8880331	Identifier	minst		8879328	0					
ANR	8880332	Argument	""""""		8879328	1					
ANR	8880333	PrimaryExpression	""""""		8879328	0					
ANR	8880334	Argument	arg		8879328	2					
ANR	8880335	Identifier	arg		8879328	0					
ANR	8880336	Argument	""".runstring"""		8879328	3					
ANR	8880337	PrimaryExpression	""".runstring"""		8879328	0					
ANR	8880338	Argument	0		8879328	4					
ANR	8880339	PrimaryExpression	0		8879328	0					
ANR	8880340	IfStatement	if ( code < 0 )		8879328	2					
ANR	8880341	Condition	code < 0	502:24:18497:18504	8879328	0	True				
ANR	8880342	RelationalExpression	code < 0		8879328	0		<			
ANR	8880343	Identifier	code		8879328	0					
ANR	8880344	PrimaryExpression	0		8879328	1					
ANR	8880345	ReturnStatement	return code ;	503:24:18531:18542	8879328	1	True				
ANR	8880346	Identifier	code		8879328	0					
ANR	8880347	IfStatement	if ( code < 0 )		8879328	5					
ANR	8880348	Condition	code < 0	505:20:18582:18589	8879328	0	True				
ANR	8880349	RelationalExpression	code < 0		8879328	0		<			
ANR	8880350	Identifier	code		8879328	0					
ANR	8880351	PrimaryExpression	0		8879328	1					
ANR	8880352	ReturnStatement	return gs_error_Fatal ;	506:20:18612:18633	8879328	1	True				
ANR	8880353	Identifier	gs_error_Fatal		8879328	0					
ANR	8880354	IfStatement	if ( arg != 0 )		8879328	6					
ANR	8880355	Condition	arg != 0	507:20:18655:18662	8879328	0	True				
ANR	8880356	EqualityExpression	arg != 0		8879328	0		!=			
ANR	8880357	Identifier	arg		8879328	0					
ANR	8880358	PrimaryExpression	0		8879328	1					
ANR	8880359	CompoundStatement		198:20:8480:8516	8879328	1					
ANR	8880360	IdentifierDeclStatement	"char * p = arg_copy ( arg , minst -> heap ) ;"	508:20:18687:18723	8879328	0	True				
ANR	8880361	IdentifierDecl	"* p = arg_copy ( arg , minst -> heap )"		8879328	0					
ANR	8880362	IdentifierDeclType	char *		8879328	0					
ANR	8880363	Identifier	p		8879328	1					
ANR	8880364	AssignmentExpression	"* p = arg_copy ( arg , minst -> heap )"		8879328	2		=			
ANR	8880365	Identifier	p		8879328	0					
ANR	8880366	CallExpression	"arg_copy ( arg , minst -> heap )"		8879328	1					
ANR	8880367	Callee	arg_copy		8879328	0					
ANR	8880368	Identifier	arg_copy		8879328	0					
ANR	8880369	ArgumentList	arg		8879328	1					
ANR	8880370	Argument	arg		8879328	0					
ANR	8880371	Identifier	arg		8879328	0					
ANR	8880372	Argument	minst -> heap		8879328	1					
ANR	8880373	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8880374	Identifier	minst		8879328	0					
ANR	8880375	Identifier	heap		8879328	1					
ANR	8880376	IfStatement	if ( p == NULL )		8879328	1					
ANR	8880377	Condition	p == NULL	509:24:18749:18757	8879328	0	True				
ANR	8880378	EqualityExpression	p == NULL		8879328	0		==			
ANR	8880379	Identifier	p		8879328	0					
ANR	8880380	Identifier	NULL		8879328	1					
ANR	8880381	ReturnStatement	return gs_error_Fatal ;	510:24:18784:18805	8879328	1	True				
ANR	8880382	Identifier	gs_error_Fatal		8879328	0					
ANR	8880383	ExpressionStatement	"arg_push_string ( pal , p , true )"	511:20:18827:18856	8879328	2	True				
ANR	8880384	CallExpression	"arg_push_string ( pal , p , true )"		8879328	0					
ANR	8880385	Callee	arg_push_string		8879328	0					
ANR	8880386	Identifier	arg_push_string		8879328	0					
ANR	8880387	ArgumentList	pal		8879328	1					
ANR	8880388	Argument	pal		8879328	0					
ANR	8880389	Identifier	pal		8879328	0					
ANR	8880390	Argument	p		8879328	1					
ANR	8880391	Identifier	p		8879328	0					
ANR	8880392	Argument	true		8879328	2					
ANR	8880393	Identifier	true		8879328	0					
ANR	8880394	ExpressionStatement	pal -> expand_ats = ats	513:16:18892:18913	8879328	7	True				
ANR	8880395	AssignmentExpression	pal -> expand_ats = ats		8879328	0		=			
ANR	8880396	PtrMemberAccess	pal -> expand_ats		8879328	0					
ANR	8880397	Identifier	pal		8879328	0					
ANR	8880398	Identifier	expand_ats		8879328	1					
ANR	8880399	Identifier	ats		8879328	1					
ANR	8880400	BreakStatement	break ;	514:16:18931:18936	8879328	8	True				
ANR	8880401	Label	case 'E' :	516:8:18960:18968	8879328	31	True				
ANR	8880402	SwitchStatement	switch ( * arg )		8879328	32					
ANR	8880403	Condition	* arg	517:20:19021:19024	8879328	0	True				
ANR	8880404	UnaryOperationExpression	* arg		8879328	0					
ANR	8880405	UnaryOperator	*		8879328	0					
ANR	8880406	Identifier	arg		8879328	1					
ANR	8880407	CompoundStatement		207:26:8820:8820	8879328	1					
ANR	8880408	Label	case 0 :	518:16:19045:19051	8879328	0	True				
ANR	8880409	ExpressionStatement	gs_log_errors = 1	519:20:19073:19090	8879328	1	True				
ANR	8880410	AssignmentExpression	gs_log_errors = 1		8879328	0		=			
ANR	8880411	Identifier	gs_log_errors		8879328	0					
ANR	8880412	PrimaryExpression	1		8879328	1					
ANR	8880413	BreakStatement	break ;	520:20:19112:19117	8879328	2	True				
ANR	8880414	Label	case '-' :	521:16:19135:19143	8879328	3	True				
ANR	8880415	ExpressionStatement	gs_log_errors = 0	522:20:19165:19182	8879328	4	True				
ANR	8880416	AssignmentExpression	gs_log_errors = 0		8879328	0		=			
ANR	8880417	Identifier	gs_log_errors		8879328	0					
ANR	8880418	PrimaryExpression	0		8879328	1					
ANR	8880419	BreakStatement	break ;	523:20:19204:19209	8879328	5	True				
ANR	8880420	Label	default :	524:16:19227:19234	8879328	6	True				
ANR	8880421	Identifier	default		8879328	0					
ANR	8880422	ExpressionStatement	"puts ( minst -> heap , ""-E may only be followed by -"" )"	525:20:19256:19305	8879328	7	True				
ANR	8880423	CallExpression	"puts ( minst -> heap , ""-E may only be followed by -"" )"		8879328	0					
ANR	8880424	Callee	puts		8879328	0					
ANR	8880425	Identifier	puts		8879328	0					
ANR	8880426	ArgumentList	minst -> heap		8879328	1					
ANR	8880427	Argument	minst -> heap		8879328	0					
ANR	8880428	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8880429	Identifier	minst		8879328	0					
ANR	8880430	Identifier	heap		8879328	1					
ANR	8880431	Argument	"""-E may only be followed by -"""		8879328	1					
ANR	8880432	PrimaryExpression	"""-E may only be followed by -"""		8879328	0					
ANR	8880433	ReturnStatement	return gs_error_Fatal ;	526:20:19327:19348	8879328	8	True				
ANR	8880434	Identifier	gs_error_Fatal		8879328	0					
ANR	8880435	BreakStatement	break ;	528:12:19376:19381	8879328	33	True				
ANR	8880436	Label	case 'f' :	529:8:19391:19399	8879328	34	True				
ANR	8880437	IfStatement	if ( * arg != 0 )		8879328	35					
ANR	8880438	Condition	* arg != 0	530:16:19464:19472	8879328	0	True				
ANR	8880439	EqualityExpression	* arg != 0		8879328	0		!=			
ANR	8880440	UnaryOperationExpression	* arg		8879328	0					
ANR	8880441	UnaryOperator	*		8879328	0					
ANR	8880442	Identifier	arg		8879328	1					
ANR	8880443	PrimaryExpression	0		8879328	1					
ANR	8880444	CompoundStatement		220:27:9268:9268	8879328	1					
ANR	8880445	ExpressionStatement	"code = argproc ( minst , arg )"	531:16:19493:19519	8879328	0	True				
ANR	8880446	AssignmentExpression	"code = argproc ( minst , arg )"		8879328	0		=			
ANR	8880447	Identifier	code		8879328	0					
ANR	8880448	CallExpression	"argproc ( minst , arg )"		8879328	1					
ANR	8880449	Callee	argproc		8879328	0					
ANR	8880450	Identifier	argproc		8879328	0					
ANR	8880451	ArgumentList	minst		8879328	1					
ANR	8880452	Argument	minst		8879328	0					
ANR	8880453	Identifier	minst		8879328	0					
ANR	8880454	Argument	arg		8879328	1					
ANR	8880455	Identifier	arg		8879328	0					
ANR	8880456	IfStatement	if ( code < 0 )		8879328	1					
ANR	8880457	Condition	code < 0	532:20:19541:19548	8879328	0	True				
ANR	8880458	RelationalExpression	code < 0		8879328	0		<			
ANR	8880459	Identifier	code		8879328	0					
ANR	8880460	PrimaryExpression	0		8879328	1					
ANR	8880461	ReturnStatement	return code ;	533:20:19571:19582	8879328	1	True				
ANR	8880462	Identifier	code		8879328	0					
ANR	8880463	IfStatement	if ( minst -> saved_pages_test_mode )		8879328	2					
ANR	8880464	Condition	minst -> saved_pages_test_mode	535:20:19705:19732	8879328	0	True				
ANR	8880465	PtrMemberAccess	minst -> saved_pages_test_mode		8879328	0					
ANR	8880466	Identifier	minst		8879328	0					
ANR	8880467	Identifier	saved_pages_test_mode		8879328	1					
ANR	8880468	CompoundStatement		228:20:9616:9657	8879328	1					
ANR	8880469	IdentifierDeclStatement	gx_device * pdev ;	536:20:19757:19772	8879328	0	True				
ANR	8880470	IdentifierDecl	* pdev		8879328	0					
ANR	8880471	IdentifierDeclType	gx_device *		8879328	0					
ANR	8880472	Identifier	pdev		8879328	1					
ANR	8880473	IdentifierDeclStatement	int ret ;	537:20:19794:19801	8879328	1	True				
ANR	8880474	IdentifierDecl	ret		8879328	0					
ANR	8880475	IdentifierDeclType	int		8879328	0					
ANR	8880476	Identifier	ret		8879328	1					
ANR	8880477	IdentifierDeclStatement	gxdso_device_child_request child_dev_data ;	538:20:19823:19864	8879328	2	True				
ANR	8880478	IdentifierDecl	child_dev_data		8879328	0					
ANR	8880479	IdentifierDeclType	gxdso_device_child_request		8879328	0					
ANR	8880480	Identifier	child_dev_data		8879328	1					
ANR	8880481	ExpressionStatement	pdev = gs_currentdevice ( minst -> i_ctx_p -> pgs )	541:20:19950:19994	8879328	3	True				
ANR	8880482	AssignmentExpression	pdev = gs_currentdevice ( minst -> i_ctx_p -> pgs )		8879328	0		=			
ANR	8880483	Identifier	pdev		8879328	0					
ANR	8880484	CallExpression	gs_currentdevice ( minst -> i_ctx_p -> pgs )		8879328	1					
ANR	8880485	Callee	gs_currentdevice		8879328	0					
ANR	8880486	Identifier	gs_currentdevice		8879328	0					
ANR	8880487	ArgumentList	minst -> i_ctx_p -> pgs		8879328	1					
ANR	8880488	Argument	minst -> i_ctx_p -> pgs		8879328	0					
ANR	8880489	PtrMemberAccess	minst -> i_ctx_p -> pgs		8879328	0					
ANR	8880490	PtrMemberAccess	minst -> i_ctx_p		8879328	0					
ANR	8880491	Identifier	minst		8879328	0					
ANR	8880492	Identifier	i_ctx_p		8879328	1					
ANR	8880493	Identifier	pgs		8879328	1					
ANR	8880494	DoStatement	do		8879328	4					
ANR	8880495	CompoundStatement		232:23:9812:9812	8879328	0					
ANR	8880496	ExpressionStatement	child_dev_data . target = pdev	543:24:20045:20073	8879328	0	True				
ANR	8880497	AssignmentExpression	child_dev_data . target = pdev		8879328	0		=			
ANR	8880498	MemberAccess	child_dev_data . target		8879328	0					
ANR	8880499	Identifier	child_dev_data		8879328	0					
ANR	8880500	Identifier	target		8879328	1					
ANR	8880501	Identifier	pdev		8879328	1					
ANR	8880502	ExpressionStatement	"ret = dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_device_child , & child_dev_data , sizeof ( child_dev_data ) )"	544:24:20099:20257	8879328	1	True				
ANR	8880503	AssignmentExpression	"ret = dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_device_child , & child_dev_data , sizeof ( child_dev_data ) )"		8879328	0		=			
ANR	8880504	Identifier	ret		8879328	0					
ANR	8880505	CallExpression	"dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_device_child , & child_dev_data , sizeof ( child_dev_data ) )"		8879328	1					
ANR	8880506	Callee	"dev_proc ( pdev , dev_spec_op )"		8879328	0					
ANR	8880507	CallExpression	"dev_proc ( pdev , dev_spec_op )"		8879328	0					
ANR	8880508	Callee	dev_proc		8879328	0					
ANR	8880509	Identifier	dev_proc		8879328	0					
ANR	8880510	ArgumentList	pdev		8879328	1					
ANR	8880511	Argument	pdev		8879328	0					
ANR	8880512	Identifier	pdev		8879328	0					
ANR	8880513	Argument	dev_spec_op		8879328	1					
ANR	8880514	Identifier	dev_spec_op		8879328	0					
ANR	8880515	ArgumentList	pdev		8879328	1					
ANR	8880516	Argument	pdev		8879328	0					
ANR	8880517	Identifier	pdev		8879328	0					
ANR	8880518	Argument	gxdso_device_child		8879328	1					
ANR	8880519	Identifier	gxdso_device_child		8879328	0					
ANR	8880520	Argument	& child_dev_data		8879328	2					
ANR	8880521	UnaryOperationExpression	& child_dev_data		8879328	0					
ANR	8880522	UnaryOperator	&		8879328	0					
ANR	8880523	Identifier	child_dev_data		8879328	1					
ANR	8880524	Argument	sizeof ( child_dev_data )		8879328	3					
ANR	8880525	SizeofExpression	sizeof ( child_dev_data )		8879328	0					
ANR	8880526	Sizeof	sizeof		8879328	0					
ANR	8880527	SizeofOperand	child_dev_data		8879328	1					
ANR	8880528	IfStatement	if ( ret > 0 )		8879328	2					
ANR	8880529	Condition	ret > 0	546:28:20287:20293	8879328	0	True				
ANR	8880530	RelationalExpression	ret > 0		8879328	0		>			
ANR	8880531	Identifier	ret		8879328	0					
ANR	8880532	PrimaryExpression	0		8879328	1					
ANR	8880533	ExpressionStatement	pdev = child_dev_data . target	547:28:20324:20352	8879328	1	True				
ANR	8880534	AssignmentExpression	pdev = child_dev_data . target		8879328	0		=			
ANR	8880535	Identifier	pdev		8879328	0					
ANR	8880536	MemberAccess	child_dev_data . target		8879328	1					
ANR	8880537	Identifier	child_dev_data		8879328	0					
ANR	8880538	Identifier	target		8879328	1					
ANR	8880539	Condition	( ret > 0 ) && ( child_dev_data . n != 0 )	548:29:20383:20418	8879328	1	True				
ANR	8880540	AndExpression	( ret > 0 ) && ( child_dev_data . n != 0 )		8879328	0		&&			
ANR	8880541	RelationalExpression	ret > 0		8879328	0		>			
ANR	8880542	Identifier	ret		8879328	0					
ANR	8880543	PrimaryExpression	0		8879328	1					
ANR	8880544	EqualityExpression	child_dev_data . n != 0		8879328	1		!=			
ANR	8880545	MemberAccess	child_dev_data . n		8879328	0					
ANR	8880546	Identifier	child_dev_data		8879328	0					
ANR	8880547	Identifier	n		8879328	1					
ANR	8880548	PrimaryExpression	0		8879328	1					
ANR	8880549	IfStatement	"if ( ( code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""print normal flush"" , 18 ) ) < 0 )"		8879328	5					
ANR	8880550	Condition	"( code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""print normal flush"" , 18 ) ) < 0"	549:24:20446:20578	8879328	0	True				
ANR	8880551	RelationalExpression	"( code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""print normal flush"" , 18 ) ) < 0"		8879328	0		<			
ANR	8880552	AssignmentExpression	"code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""print normal flush"" , 18 )"		8879328	0		=			
ANR	8880553	Identifier	code		8879328	0					
ANR	8880554	CallExpression	"gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""print normal flush"" , 18 )"		8879328	1					
ANR	8880555	Callee	gx_saved_pages_param_process		8879328	0					
ANR	8880556	Identifier	gx_saved_pages_param_process		8879328	0					
ANR	8880557	ArgumentList	( gx_device_printer * ) pdev		8879328	1					
ANR	8880558	Argument	( gx_device_printer * ) pdev		8879328	0					
ANR	8880559	CastExpression	( gx_device_printer * ) pdev		8879328	0					
ANR	8880560	CastTarget	gx_device_printer *		8879328	0					
ANR	8880561	Identifier	pdev		8879328	1					
ANR	8880562	Argument	"( byte * ) ""print normal flush"""		8879328	1					
ANR	8880563	CastExpression	"( byte * ) ""print normal flush"""		8879328	0					
ANR	8880564	CastTarget	byte *		8879328	0					
ANR	8880565	PrimaryExpression	"""print normal flush"""		8879328	1					
ANR	8880566	Argument	18		8879328	2					
ANR	8880567	PrimaryExpression	18		8879328	0					
ANR	8880568	PrimaryExpression	0		8879328	1					
ANR	8880569	ReturnStatement	return code ;	551:24:20605:20616	8879328	1	True				
ANR	8880570	Identifier	code		8879328	0					
ANR	8880571	IfStatement	if ( code > 0 )		8879328	6					
ANR	8880572	Condition	code > 0	552:24:20642:20649	8879328	0	True				
ANR	8880573	RelationalExpression	code > 0		8879328	0		>			
ANR	8880574	Identifier	code		8879328	0					
ANR	8880575	PrimaryExpression	0		8879328	1					
ANR	8880576	IfStatement	if ( ( code = gs_erasepage ( minst -> i_ctx_p -> pgs ) ) < 0 )		8879328	1					
ANR	8880577	Condition	( code = gs_erasepage ( minst -> i_ctx_p -> pgs ) ) < 0	553:28:20680:20725	8879328	0	True				
ANR	8880578	RelationalExpression	( code = gs_erasepage ( minst -> i_ctx_p -> pgs ) ) < 0		8879328	0		<			
ANR	8880579	AssignmentExpression	code = gs_erasepage ( minst -> i_ctx_p -> pgs )		8879328	0		=			
ANR	8880580	Identifier	code		8879328	0					
ANR	8880581	CallExpression	gs_erasepage ( minst -> i_ctx_p -> pgs )		8879328	1					
ANR	8880582	Callee	gs_erasepage		8879328	0					
ANR	8880583	Identifier	gs_erasepage		8879328	0					
ANR	8880584	ArgumentList	minst -> i_ctx_p -> pgs		8879328	1					
ANR	8880585	Argument	minst -> i_ctx_p -> pgs		8879328	0					
ANR	8880586	PtrMemberAccess	minst -> i_ctx_p -> pgs		8879328	0					
ANR	8880587	PtrMemberAccess	minst -> i_ctx_p		8879328	0					
ANR	8880588	Identifier	minst		8879328	0					
ANR	8880589	Identifier	i_ctx_p		8879328	1					
ANR	8880590	Identifier	pgs		8879328	1					
ANR	8880591	PrimaryExpression	0		8879328	1					
ANR	8880592	ReturnStatement	return code ;	554:28:20756:20767	8879328	1	True				
ANR	8880593	Identifier	code		8879328	0					
ANR	8880594	BreakStatement	break ;	557:12:20813:20818	8879328	36	True				
ANR	8880595	Label	case 'F' :	558:8:20828:20836	8879328	37	True				
ANR	8880596	IfStatement	if ( ! * arg )		8879328	38					
ANR	8880597	Condition	! * arg	559:16:20904:20908	8879328	0	True				
ANR	8880598	UnaryOperationExpression	! * arg		8879328	0					
ANR	8880599	UnaryOperator	!		8879328	0					
ANR	8880600	UnaryOperationExpression	* arg		8879328	1					
ANR	8880601	UnaryOperator	*		8879328	0					
ANR	8880602	Identifier	arg		8879328	1					
ANR	8880603	CompoundStatement		249:23:10704:10704	8879328	1					
ANR	8880604	ExpressionStatement	"puts ( minst -> heap , ""-F requires a file name"" )"	560:16:20929:20973	8879328	0	True				
ANR	8880605	CallExpression	"puts ( minst -> heap , ""-F requires a file name"" )"		8879328	0					
ANR	8880606	Callee	puts		8879328	0					
ANR	8880607	Identifier	puts		8879328	0					
ANR	8880608	ArgumentList	minst -> heap		8879328	1					
ANR	8880609	Argument	minst -> heap		8879328	0					
ANR	8880610	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8880611	Identifier	minst		8879328	0					
ANR	8880612	Identifier	heap		8879328	1					
ANR	8880613	Argument	"""-F requires a file name"""		8879328	1					
ANR	8880614	PrimaryExpression	"""-F requires a file name"""		8879328	0					
ANR	8880615	ReturnStatement	return gs_error_Fatal ;	561:16:20991:21012	8879328	1	True				
ANR	8880616	Identifier	gs_error_Fatal		8879328	0					
ANR	8880617	CompoundStatement		253:16:10839:10874	8879328	39					
ANR	8880618	IdentifierDeclStatement	uint bsize = minst -> run_buffer_size ;	563:16:21046:21081	8879328	0	True				
ANR	8880619	IdentifierDecl	bsize = minst -> run_buffer_size		8879328	0					
ANR	8880620	IdentifierDeclType	uint		8879328	0					
ANR	8880621	Identifier	bsize		8879328	1					
ANR	8880622	AssignmentExpression	bsize = minst -> run_buffer_size		8879328	2		=			
ANR	8880623	Identifier	bsize		8879328	0					
ANR	8880624	PtrMemberAccess	minst -> run_buffer_size		8879328	1					
ANR	8880625	Identifier	minst		8879328	0					
ANR	8880626	Identifier	run_buffer_size		8879328	1					
ANR	8880627	ExpressionStatement	minst -> run_buffer_size = 1	565:16:21100:21126	8879328	1	True				
ANR	8880628	AssignmentExpression	minst -> run_buffer_size = 1		8879328	0		=			
ANR	8880629	PtrMemberAccess	minst -> run_buffer_size		8879328	0					
ANR	8880630	Identifier	minst		8879328	0					
ANR	8880631	Identifier	run_buffer_size		8879328	1					
ANR	8880632	PrimaryExpression	1		8879328	1					
ANR	8880633	ExpressionStatement	"code = argproc ( minst , arg )"	566:16:21144:21170	8879328	2	True				
ANR	8880634	AssignmentExpression	"code = argproc ( minst , arg )"		8879328	0		=			
ANR	8880635	Identifier	code		8879328	0					
ANR	8880636	CallExpression	"argproc ( minst , arg )"		8879328	1					
ANR	8880637	Callee	argproc		8879328	0					
ANR	8880638	Identifier	argproc		8879328	0					
ANR	8880639	ArgumentList	minst		8879328	1					
ANR	8880640	Argument	minst		8879328	0					
ANR	8880641	Identifier	minst		8879328	0					
ANR	8880642	Argument	arg		8879328	1					
ANR	8880643	Identifier	arg		8879328	0					
ANR	8880644	ExpressionStatement	minst -> run_buffer_size = bsize	567:16:21188:21218	8879328	3	True				
ANR	8880645	AssignmentExpression	minst -> run_buffer_size = bsize		8879328	0		=			
ANR	8880646	PtrMemberAccess	minst -> run_buffer_size		8879328	0					
ANR	8880647	Identifier	minst		8879328	0					
ANR	8880648	Identifier	run_buffer_size		8879328	1					
ANR	8880649	Identifier	bsize		8879328	1					
ANR	8880650	IfStatement	if ( code < 0 )		8879328	4					
ANR	8880651	Condition	code < 0	568:20:21240:21247	8879328	0	True				
ANR	8880652	RelationalExpression	code < 0		8879328	0		<			
ANR	8880653	Identifier	code		8879328	0					
ANR	8880654	PrimaryExpression	0		8879328	1					
ANR	8880655	ReturnStatement	return code ;	569:20:21270:21281	8879328	1	True				
ANR	8880656	Identifier	code		8879328	0					
ANR	8880657	IfStatement	if ( minst -> saved_pages_test_mode )		8879328	5					
ANR	8880658	Condition	minst -> saved_pages_test_mode	571:20:21404:21431	8879328	0	True				
ANR	8880659	PtrMemberAccess	minst -> saved_pages_test_mode		8879328	0					
ANR	8880660	Identifier	minst		8879328	0					
ANR	8880661	Identifier	saved_pages_test_mode		8879328	1					
ANR	8880662	CompoundStatement		264:20:11315:11356	8879328	1					
ANR	8880663	IdentifierDeclStatement	gx_device * pdev ;	572:20:21456:21471	8879328	0	True				
ANR	8880664	IdentifierDecl	* pdev		8879328	0					
ANR	8880665	IdentifierDeclType	gx_device *		8879328	0					
ANR	8880666	Identifier	pdev		8879328	1					
ANR	8880667	IdentifierDeclStatement	int ret ;	573:20:21493:21500	8879328	1	True				
ANR	8880668	IdentifierDecl	ret		8879328	0					
ANR	8880669	IdentifierDeclType	int		8879328	0					
ANR	8880670	Identifier	ret		8879328	1					
ANR	8880671	IdentifierDeclStatement	gxdso_device_child_request child_dev_data ;	574:20:21522:21563	8879328	2	True				
ANR	8880672	IdentifierDecl	child_dev_data		8879328	0					
ANR	8880673	IdentifierDeclType	gxdso_device_child_request		8879328	0					
ANR	8880674	Identifier	child_dev_data		8879328	1					
ANR	8880675	ExpressionStatement	pdev = gs_currentdevice ( minst -> i_ctx_p -> pgs )	577:20:21649:21693	8879328	3	True				
ANR	8880676	AssignmentExpression	pdev = gs_currentdevice ( minst -> i_ctx_p -> pgs )		8879328	0		=			
ANR	8880677	Identifier	pdev		8879328	0					
ANR	8880678	CallExpression	gs_currentdevice ( minst -> i_ctx_p -> pgs )		8879328	1					
ANR	8880679	Callee	gs_currentdevice		8879328	0					
ANR	8880680	Identifier	gs_currentdevice		8879328	0					
ANR	8880681	ArgumentList	minst -> i_ctx_p -> pgs		8879328	1					
ANR	8880682	Argument	minst -> i_ctx_p -> pgs		8879328	0					
ANR	8880683	PtrMemberAccess	minst -> i_ctx_p -> pgs		8879328	0					
ANR	8880684	PtrMemberAccess	minst -> i_ctx_p		8879328	0					
ANR	8880685	Identifier	minst		8879328	0					
ANR	8880686	Identifier	i_ctx_p		8879328	1					
ANR	8880687	Identifier	pgs		8879328	1					
ANR	8880688	DoStatement	do		8879328	4					
ANR	8880689	CompoundStatement		268:23:11511:11511	8879328	0					
ANR	8880690	ExpressionStatement	child_dev_data . target = pdev	579:24:21744:21772	8879328	0	True				
ANR	8880691	AssignmentExpression	child_dev_data . target = pdev		8879328	0		=			
ANR	8880692	MemberAccess	child_dev_data . target		8879328	0					
ANR	8880693	Identifier	child_dev_data		8879328	0					
ANR	8880694	Identifier	target		8879328	1					
ANR	8880695	Identifier	pdev		8879328	1					
ANR	8880696	ExpressionStatement	"ret = dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_device_child , & child_dev_data , sizeof ( child_dev_data ) )"	580:24:21798:21956	8879328	1	True				
ANR	8880697	AssignmentExpression	"ret = dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_device_child , & child_dev_data , sizeof ( child_dev_data ) )"		8879328	0		=			
ANR	8880698	Identifier	ret		8879328	0					
ANR	8880699	CallExpression	"dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_device_child , & child_dev_data , sizeof ( child_dev_data ) )"		8879328	1					
ANR	8880700	Callee	"dev_proc ( pdev , dev_spec_op )"		8879328	0					
ANR	8880701	CallExpression	"dev_proc ( pdev , dev_spec_op )"		8879328	0					
ANR	8880702	Callee	dev_proc		8879328	0					
ANR	8880703	Identifier	dev_proc		8879328	0					
ANR	8880704	ArgumentList	pdev		8879328	1					
ANR	8880705	Argument	pdev		8879328	0					
ANR	8880706	Identifier	pdev		8879328	0					
ANR	8880707	Argument	dev_spec_op		8879328	1					
ANR	8880708	Identifier	dev_spec_op		8879328	0					
ANR	8880709	ArgumentList	pdev		8879328	1					
ANR	8880710	Argument	pdev		8879328	0					
ANR	8880711	Identifier	pdev		8879328	0					
ANR	8880712	Argument	gxdso_device_child		8879328	1					
ANR	8880713	Identifier	gxdso_device_child		8879328	0					
ANR	8880714	Argument	& child_dev_data		8879328	2					
ANR	8880715	UnaryOperationExpression	& child_dev_data		8879328	0					
ANR	8880716	UnaryOperator	&		8879328	0					
ANR	8880717	Identifier	child_dev_data		8879328	1					
ANR	8880718	Argument	sizeof ( child_dev_data )		8879328	3					
ANR	8880719	SizeofExpression	sizeof ( child_dev_data )		8879328	0					
ANR	8880720	Sizeof	sizeof		8879328	0					
ANR	8880721	SizeofOperand	child_dev_data		8879328	1					
ANR	8880722	IfStatement	if ( ret > 0 )		8879328	2					
ANR	8880723	Condition	ret > 0	582:28:21986:21992	8879328	0	True				
ANR	8880724	RelationalExpression	ret > 0		8879328	0		>			
ANR	8880725	Identifier	ret		8879328	0					
ANR	8880726	PrimaryExpression	0		8879328	1					
ANR	8880727	ExpressionStatement	pdev = child_dev_data . target	583:28:22023:22051	8879328	1	True				
ANR	8880728	AssignmentExpression	pdev = child_dev_data . target		8879328	0		=			
ANR	8880729	Identifier	pdev		8879328	0					
ANR	8880730	MemberAccess	child_dev_data . target		8879328	1					
ANR	8880731	Identifier	child_dev_data		8879328	0					
ANR	8880732	Identifier	target		8879328	1					
ANR	8880733	Condition	( ret > 0 ) && ( child_dev_data . n != 0 )	584:29:22082:22117	8879328	1	True				
ANR	8880734	AndExpression	( ret > 0 ) && ( child_dev_data . n != 0 )		8879328	0		&&			
ANR	8880735	RelationalExpression	ret > 0		8879328	0		>			
ANR	8880736	Identifier	ret		8879328	0					
ANR	8880737	PrimaryExpression	0		8879328	1					
ANR	8880738	EqualityExpression	child_dev_data . n != 0		8879328	1		!=			
ANR	8880739	MemberAccess	child_dev_data . n		8879328	0					
ANR	8880740	Identifier	child_dev_data		8879328	0					
ANR	8880741	Identifier	n		8879328	1					
ANR	8880742	PrimaryExpression	0		8879328	1					
ANR	8880743	IfStatement	"if ( ( code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""print normal flush"" , 18 ) ) < 0 )"		8879328	5					
ANR	8880744	Condition	"( code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""print normal flush"" , 18 ) ) < 0"	585:24:22145:22277	8879328	0	True				
ANR	8880745	RelationalExpression	"( code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""print normal flush"" , 18 ) ) < 0"		8879328	0		<			
ANR	8880746	AssignmentExpression	"code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""print normal flush"" , 18 )"		8879328	0		=			
ANR	8880747	Identifier	code		8879328	0					
ANR	8880748	CallExpression	"gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""print normal flush"" , 18 )"		8879328	1					
ANR	8880749	Callee	gx_saved_pages_param_process		8879328	0					
ANR	8880750	Identifier	gx_saved_pages_param_process		8879328	0					
ANR	8880751	ArgumentList	( gx_device_printer * ) pdev		8879328	1					
ANR	8880752	Argument	( gx_device_printer * ) pdev		8879328	0					
ANR	8880753	CastExpression	( gx_device_printer * ) pdev		8879328	0					
ANR	8880754	CastTarget	gx_device_printer *		8879328	0					
ANR	8880755	Identifier	pdev		8879328	1					
ANR	8880756	Argument	"( byte * ) ""print normal flush"""		8879328	1					
ANR	8880757	CastExpression	"( byte * ) ""print normal flush"""		8879328	0					
ANR	8880758	CastTarget	byte *		8879328	0					
ANR	8880759	PrimaryExpression	"""print normal flush"""		8879328	1					
ANR	8880760	Argument	18		8879328	2					
ANR	8880761	PrimaryExpression	18		8879328	0					
ANR	8880762	PrimaryExpression	0		8879328	1					
ANR	8880763	ReturnStatement	return code ;	587:24:22304:22315	8879328	1	True				
ANR	8880764	Identifier	code		8879328	0					
ANR	8880765	IfStatement	if ( code > 0 )		8879328	6					
ANR	8880766	Condition	code > 0	588:24:22341:22348	8879328	0	True				
ANR	8880767	RelationalExpression	code > 0		8879328	0		>			
ANR	8880768	Identifier	code		8879328	0					
ANR	8880769	PrimaryExpression	0		8879328	1					
ANR	8880770	IfStatement	if ( ( code = gs_erasepage ( minst -> i_ctx_p -> pgs ) ) < 0 )		8879328	1					
ANR	8880771	Condition	( code = gs_erasepage ( minst -> i_ctx_p -> pgs ) ) < 0	589:28:22379:22424	8879328	0	True				
ANR	8880772	RelationalExpression	( code = gs_erasepage ( minst -> i_ctx_p -> pgs ) ) < 0		8879328	0		<			
ANR	8880773	AssignmentExpression	code = gs_erasepage ( minst -> i_ctx_p -> pgs )		8879328	0		=			
ANR	8880774	Identifier	code		8879328	0					
ANR	8880775	CallExpression	gs_erasepage ( minst -> i_ctx_p -> pgs )		8879328	1					
ANR	8880776	Callee	gs_erasepage		8879328	0					
ANR	8880777	Identifier	gs_erasepage		8879328	0					
ANR	8880778	ArgumentList	minst -> i_ctx_p -> pgs		8879328	1					
ANR	8880779	Argument	minst -> i_ctx_p -> pgs		8879328	0					
ANR	8880780	PtrMemberAccess	minst -> i_ctx_p -> pgs		8879328	0					
ANR	8880781	PtrMemberAccess	minst -> i_ctx_p		8879328	0					
ANR	8880782	Identifier	minst		8879328	0					
ANR	8880783	Identifier	i_ctx_p		8879328	1					
ANR	8880784	Identifier	pgs		8879328	1					
ANR	8880785	PrimaryExpression	0		8879328	1					
ANR	8880786	ReturnStatement	return code ;	590:28:22455:22466	8879328	1	True				
ANR	8880787	Identifier	code		8879328	0					
ANR	8880788	BreakStatement	break ;	593:12:22512:22517	8879328	40	True				
ANR	8880789	Label	case 'g' :	594:8:22527:22535	8879328	41	True				
ANR	8880790	CompoundStatement		287:16:12439:12448	8879328	42					
ANR	8880791	IdentifierDeclStatement	"long width , height ;"	596:16:22610:22628	8879328	0	True				
ANR	8880792	IdentifierDecl	width		8879328	0					
ANR	8880793	IdentifierDeclType	long		8879328	0					
ANR	8880794	Identifier	width		8879328	1					
ANR	8880795	IdentifierDecl	height		8879328	1					
ANR	8880796	IdentifierDeclType	long		8879328	0					
ANR	8880797	Identifier	height		8879328	1					
ANR	8880798	IdentifierDeclStatement	ref value ;	597:16:22646:22655	8879328	1	True				
ANR	8880799	IdentifierDecl	value		8879328	0					
ANR	8880800	IdentifierDeclType	ref		8879328	0					
ANR	8880801	Identifier	value		8879328	1					
ANR	8880802	IfStatement	if ( ( code = gs_main_init1 ( minst ) ) < 0 )		8879328	2					
ANR	8880803	Condition	( code = gs_main_init1 ( minst ) ) < 0	599:20:22678:22710	8879328	0	True				
ANR	8880804	RelationalExpression	( code = gs_main_init1 ( minst ) ) < 0		8879328	0		<			
ANR	8880805	AssignmentExpression	code = gs_main_init1 ( minst )		8879328	0		=			
ANR	8880806	Identifier	code		8879328	0					
ANR	8880807	CallExpression	gs_main_init1 ( minst )		8879328	1					
ANR	8880808	Callee	gs_main_init1		8879328	0					
ANR	8880809	Identifier	gs_main_init1		8879328	0					
ANR	8880810	ArgumentList	minst		8879328	1					
ANR	8880811	Argument	minst		8879328	0					
ANR	8880812	Identifier	minst		8879328	0					
ANR	8880813	PrimaryExpression	0		8879328	1					
ANR	8880814	ReturnStatement	return code ;	600:20:22733:22744	8879328	1	True				
ANR	8880815	Identifier	code		8879328	0					
ANR	8880816	IfStatement	"if ( sscanf ( ( const char * ) arg , ""%ldx%ld"" , & width , & height ) != 2 )"		8879328	3					
ANR	8880817	Condition	"sscanf ( ( const char * ) arg , ""%ldx%ld"" , & width , & height ) != 2"	601:20:22766:22823	8879328	0	True				
ANR	8880818	EqualityExpression	"sscanf ( ( const char * ) arg , ""%ldx%ld"" , & width , & height ) != 2"		8879328	0		!=			
ANR	8880819	CallExpression	"sscanf ( ( const char * ) arg , ""%ldx%ld"" , & width , & height )"		8879328	0					
ANR	8880820	Callee	sscanf		8879328	0					
ANR	8880821	Identifier	sscanf		8879328	0					
ANR	8880822	ArgumentList	( const char * ) arg		8879328	1					
ANR	8880823	Argument	( const char * ) arg		8879328	0					
ANR	8880824	CastExpression	( const char * ) arg		8879328	0					
ANR	8880825	CastTarget	const char *		8879328	0					
ANR	8880826	Identifier	arg		8879328	1					
ANR	8880827	Argument	"""%ldx%ld"""		8879328	1					
ANR	8880828	PrimaryExpression	"""%ldx%ld"""		8879328	0					
ANR	8880829	Argument	& width		8879328	2					
ANR	8880830	UnaryOperationExpression	& width		8879328	0					
ANR	8880831	UnaryOperator	&		8879328	0					
ANR	8880832	Identifier	width		8879328	1					
ANR	8880833	Argument	& height		8879328	3					
ANR	8880834	UnaryOperationExpression	& height		8879328	0					
ANR	8880835	UnaryOperator	&		8879328	0					
ANR	8880836	Identifier	height		8879328	1					
ANR	8880837	PrimaryExpression	2		8879328	1					
ANR	8880838	CompoundStatement		291:80:12619:12619	8879328	1					
ANR	8880839	ExpressionStatement	"puts ( minst -> heap , ""-g must be followed by <width>x<height>"" )"	602:20:22848:22908	8879328	0	True				
ANR	8880840	CallExpression	"puts ( minst -> heap , ""-g must be followed by <width>x<height>"" )"		8879328	0					
ANR	8880841	Callee	puts		8879328	0					
ANR	8880842	Identifier	puts		8879328	0					
ANR	8880843	ArgumentList	minst -> heap		8879328	1					
ANR	8880844	Argument	minst -> heap		8879328	0					
ANR	8880845	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8880846	Identifier	minst		8879328	0					
ANR	8880847	Identifier	heap		8879328	1					
ANR	8880848	Argument	"""-g must be followed by <width>x<height>"""		8879328	1					
ANR	8880849	PrimaryExpression	"""-g must be followed by <width>x<height>"""		8879328	0					
ANR	8880850	ReturnStatement	return gs_error_Fatal ;	603:20:22930:22951	8879328	1	True				
ANR	8880851	Identifier	gs_error_Fatal		8879328	0					
ANR	8880852	ExpressionStatement	"make_int ( & value , width )"	605:16:22987:23010	8879328	4	True				
ANR	8880853	CallExpression	"make_int ( & value , width )"		8879328	0					
ANR	8880854	Callee	make_int		8879328	0					
ANR	8880855	Identifier	make_int		8879328	0					
ANR	8880856	ArgumentList	& value		8879328	1					
ANR	8880857	Argument	& value		8879328	0					
ANR	8880858	UnaryOperationExpression	& value		8879328	0					
ANR	8880859	UnaryOperator	&		8879328	0					
ANR	8880860	Identifier	value		8879328	1					
ANR	8880861	Argument	width		8879328	1					
ANR	8880862	Identifier	width		8879328	0					
ANR	8880863	ExpressionStatement	"initial_enter_name ( ""DEVICEWIDTH"" , & value )"	606:16:23028:23069	8879328	5	True				
ANR	8880864	CallExpression	"initial_enter_name ( ""DEVICEWIDTH"" , & value )"		8879328	0					
ANR	8880865	Callee	initial_enter_name		8879328	0					
ANR	8880866	Identifier	initial_enter_name		8879328	0					
ANR	8880867	ArgumentList	"""DEVICEWIDTH"""		8879328	1					
ANR	8880868	Argument	"""DEVICEWIDTH"""		8879328	0					
ANR	8880869	PrimaryExpression	"""DEVICEWIDTH"""		8879328	0					
ANR	8880870	Argument	& value		8879328	1					
ANR	8880871	UnaryOperationExpression	& value		8879328	0					
ANR	8880872	UnaryOperator	&		8879328	0					
ANR	8880873	Identifier	value		8879328	1					
ANR	8880874	ExpressionStatement	"make_int ( & value , height )"	607:16:23087:23111	8879328	6	True				
ANR	8880875	CallExpression	"make_int ( & value , height )"		8879328	0					
ANR	8880876	Callee	make_int		8879328	0					
ANR	8880877	Identifier	make_int		8879328	0					
ANR	8880878	ArgumentList	& value		8879328	1					
ANR	8880879	Argument	& value		8879328	0					
ANR	8880880	UnaryOperationExpression	& value		8879328	0					
ANR	8880881	UnaryOperator	&		8879328	0					
ANR	8880882	Identifier	value		8879328	1					
ANR	8880883	Argument	height		8879328	1					
ANR	8880884	Identifier	height		8879328	0					
ANR	8880885	ExpressionStatement	"initial_enter_name ( ""DEVICEHEIGHT"" , & value )"	608:16:23129:23171	8879328	7	True				
ANR	8880886	CallExpression	"initial_enter_name ( ""DEVICEHEIGHT"" , & value )"		8879328	0					
ANR	8880887	Callee	initial_enter_name		8879328	0					
ANR	8880888	Identifier	initial_enter_name		8879328	0					
ANR	8880889	ArgumentList	"""DEVICEHEIGHT"""		8879328	1					
ANR	8880890	Argument	"""DEVICEHEIGHT"""		8879328	0					
ANR	8880891	PrimaryExpression	"""DEVICEHEIGHT"""		8879328	0					
ANR	8880892	Argument	& value		8879328	1					
ANR	8880893	UnaryOperationExpression	& value		8879328	0					
ANR	8880894	UnaryOperator	&		8879328	0					
ANR	8880895	Identifier	value		8879328	1					
ANR	8880896	ExpressionStatement	"initial_enter_name ( ""FIXEDMEDIA"" , & vtrue )"	609:16:23189:23229	8879328	8	True				
ANR	8880897	CallExpression	"initial_enter_name ( ""FIXEDMEDIA"" , & vtrue )"		8879328	0					
ANR	8880898	Callee	initial_enter_name		8879328	0					
ANR	8880899	Identifier	initial_enter_name		8879328	0					
ANR	8880900	ArgumentList	"""FIXEDMEDIA"""		8879328	1					
ANR	8880901	Argument	"""FIXEDMEDIA"""		8879328	0					
ANR	8880902	PrimaryExpression	"""FIXEDMEDIA"""		8879328	0					
ANR	8880903	Argument	& vtrue		8879328	1					
ANR	8880904	UnaryOperationExpression	& vtrue		8879328	0					
ANR	8880905	UnaryOperator	&		8879328	0					
ANR	8880906	Identifier	vtrue		8879328	1					
ANR	8880907	BreakStatement	break ;	610:16:23247:23252	8879328	9	True				
ANR	8880908	Label	case 'h' :	612:8:23276:23284	8879328	43	True				
ANR	8880909	Label	case '?' :	613:8:23325:23333	8879328	44	True				
ANR	8880910	ExpressionStatement	print_help ( minst )	614:12:23373:23390	8879328	45	True				
ANR	8880911	CallExpression	print_help ( minst )		8879328	0					
ANR	8880912	Callee	print_help		8879328	0					
ANR	8880913	Identifier	print_help		8879328	0					
ANR	8880914	ArgumentList	minst		8879328	1					
ANR	8880915	Argument	minst		8879328	0					
ANR	8880916	Identifier	minst		8879328	0					
ANR	8880917	ReturnStatement	return gs_error_Info ;	615:12:23404:23424	8879328	46	True				
ANR	8880918	Identifier	gs_error_Info		8879328	0					
ANR	8880919	Label	case 'I' :	616:8:23469:23477	8879328	47	True				
ANR	8880920	CompoundStatement		308:16:13342:13358	8879328	48					
ANR	8880921	IdentifierDeclStatement	const char * path ;	618:16:23549:23565	8879328	0	True				
ANR	8880922	IdentifierDecl	* path		8879328	0					
ANR	8880923	IdentifierDeclType	const char *		8879328	0					
ANR	8880924	Identifier	path		8879328	1					
ANR	8880925	IfStatement	if ( arg [ 0 ] == 0 )		8879328	1					
ANR	8880926	Condition	arg [ 0 ] == 0	620:20:23588:23598	8879328	0	True				
ANR	8880927	EqualityExpression	arg [ 0 ] == 0		8879328	0		==			
ANR	8880928	ArrayIndexing	arg [ 0 ]		8879328	0					
ANR	8880929	Identifier	arg		8879328	0					
ANR	8880930	PrimaryExpression	0		8879328	1					
ANR	8880931	PrimaryExpression	0		8879328	1					
ANR	8880932	CompoundStatement		310:33:13394:13394	8879328	1					
ANR	8880933	ExpressionStatement	"code = arg_next ( pal , ( const char * * ) & path , minst -> heap )"	621:20:23623:23678	8879328	0	True				
ANR	8880934	AssignmentExpression	"code = arg_next ( pal , ( const char * * ) & path , minst -> heap )"		8879328	0		=			
ANR	8880935	Identifier	code		8879328	0					
ANR	8880936	CallExpression	"arg_next ( pal , ( const char * * ) & path , minst -> heap )"		8879328	1					
ANR	8880937	Callee	arg_next		8879328	0					
ANR	8880938	Identifier	arg_next		8879328	0					
ANR	8880939	ArgumentList	pal		8879328	1					
ANR	8880940	Argument	pal		8879328	0					
ANR	8880941	Identifier	pal		8879328	0					
ANR	8880942	Argument	( const char * * ) & path		8879328	1					
ANR	8880943	CastExpression	( const char * * ) & path		8879328	0					
ANR	8880944	CastTarget	const char * *		8879328	0					
ANR	8880945	UnaryOperationExpression	& path		8879328	1					
ANR	8880946	UnaryOperator	&		8879328	0					
ANR	8880947	Identifier	path		8879328	1					
ANR	8880948	Argument	minst -> heap		8879328	2					
ANR	8880949	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8880950	Identifier	minst		8879328	0					
ANR	8880951	Identifier	heap		8879328	1					
ANR	8880952	IfStatement	if ( code < 0 )		8879328	1					
ANR	8880953	Condition	code < 0	622:24:23704:23711	8879328	0	True				
ANR	8880954	RelationalExpression	code < 0		8879328	0		<			
ANR	8880955	Identifier	code		8879328	0					
ANR	8880956	PrimaryExpression	0		8879328	1					
ANR	8880957	ReturnStatement	return code ;	623:24:23738:23749	8879328	1	True				
ANR	8880958	Identifier	code		8879328	0					
ANR	8880959	ElseStatement	else		8879328	0					
ANR	8880960	ExpressionStatement	path = arg	625:20:23794:23804	8879328	0	True				
ANR	8880961	AssignmentExpression	path = arg		8879328	0		=			
ANR	8880962	Identifier	path		8879328	0					
ANR	8880963	Identifier	arg		8879328	1					
ANR	8880964	IfStatement	if ( path == NULL )		8879328	2					
ANR	8880965	Condition	path == NULL	626:20:23826:23837	8879328	0	True				
ANR	8880966	EqualityExpression	path == NULL		8879328	0		==			
ANR	8880967	Identifier	path		8879328	0					
ANR	8880968	Identifier	NULL		8879328	1					
ANR	8880969	ReturnStatement	return gs_error_Fatal ;	627:20:23860:23881	8879328	1	True				
ANR	8880970	Identifier	gs_error_Fatal		8879328	0					
ANR	8880971	ExpressionStatement	"path = arg_copy ( path , minst -> heap )"	628:16:23899:23933	8879328	3	True				
ANR	8880972	AssignmentExpression	"path = arg_copy ( path , minst -> heap )"		8879328	0		=			
ANR	8880973	Identifier	path		8879328	0					
ANR	8880974	CallExpression	"arg_copy ( path , minst -> heap )"		8879328	1					
ANR	8880975	Callee	arg_copy		8879328	0					
ANR	8880976	Identifier	arg_copy		8879328	0					
ANR	8880977	ArgumentList	path		8879328	1					
ANR	8880978	Argument	path		8879328	0					
ANR	8880979	Identifier	path		8879328	0					
ANR	8880980	Argument	minst -> heap		8879328	1					
ANR	8880981	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8880982	Identifier	minst		8879328	0					
ANR	8880983	Identifier	heap		8879328	1					
ANR	8880984	IfStatement	if ( path == NULL )		8879328	4					
ANR	8880985	Condition	path == NULL	629:20:23955:23966	8879328	0	True				
ANR	8880986	EqualityExpression	path == NULL		8879328	0		==			
ANR	8880987	Identifier	path		8879328	0					
ANR	8880988	Identifier	NULL		8879328	1					
ANR	8880989	ReturnStatement	return gs_error_Fatal ;	630:20:23989:24010	8879328	1	True				
ANR	8880990	Identifier	gs_error_Fatal		8879328	0					
ANR	8880991	ExpressionStatement	"gs_main_add_lib_path ( minst , path )"	631:16:24028:24061	8879328	5	True				
ANR	8880992	CallExpression	"gs_main_add_lib_path ( minst , path )"		8879328	0					
ANR	8880993	Callee	gs_main_add_lib_path		8879328	0					
ANR	8880994	Identifier	gs_main_add_lib_path		8879328	0					
ANR	8880995	ArgumentList	minst		8879328	1					
ANR	8880996	Argument	minst		8879328	0					
ANR	8880997	Identifier	minst		8879328	0					
ANR	8880998	Argument	path		8879328	1					
ANR	8880999	Identifier	path		8879328	0					
ANR	8881000	BreakStatement	break ;	633:12:24089:24094	8879328	49	True				
ANR	8881001	Label	case 'K' :	634:8:24104:24112	8879328	50	True				
ANR	8881002	CompoundStatement		327:16:14006:14075	8879328	51					
ANR	8881003	IdentifierDeclStatement	long msize = 0 ;	636:16:24181:24195	8879328	0	True				
ANR	8881004	IdentifierDecl	msize = 0		8879328	0					
ANR	8881005	IdentifierDeclType	long		8879328	0					
ANR	8881006	Identifier	msize		8879328	1					
ANR	8881007	AssignmentExpression	msize = 0		8879328	2		=			
ANR	8881008	Identifier	msize		8879328	0					
ANR	8881009	PrimaryExpression	0		8879328	1					
ANR	8881010	IdentifierDeclStatement	gs_malloc_memory_t * rawheap = gs_malloc_wrapped_contents ( minst -> heap ) ;	637:16:24213:24282	8879328	1	True				
ANR	8881011	IdentifierDecl	* rawheap = gs_malloc_wrapped_contents ( minst -> heap )		8879328	0					
ANR	8881012	IdentifierDeclType	gs_malloc_memory_t *		8879328	0					
ANR	8881013	Identifier	rawheap		8879328	1					
ANR	8881014	AssignmentExpression	* rawheap = gs_malloc_wrapped_contents ( minst -> heap )		8879328	2		=			
ANR	8881015	Identifier	rawheap		8879328	0					
ANR	8881016	CallExpression	gs_malloc_wrapped_contents ( minst -> heap )		8879328	1					
ANR	8881017	Callee	gs_malloc_wrapped_contents		8879328	0					
ANR	8881018	Identifier	gs_malloc_wrapped_contents		8879328	0					
ANR	8881019	ArgumentList	minst -> heap		8879328	1					
ANR	8881020	Argument	minst -> heap		8879328	0					
ANR	8881021	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8881022	Identifier	minst		8879328	0					
ANR	8881023	Identifier	heap		8879328	1					
ANR	8881024	ExpressionStatement	"sscanf ( ( const char * ) arg , ""%ld"" , & msize )"	639:16:24301:24341	8879328	2	True				
ANR	8881025	CallExpression	"sscanf ( ( const char * ) arg , ""%ld"" , & msize )"		8879328	0					
ANR	8881026	Callee	sscanf		8879328	0					
ANR	8881027	Identifier	sscanf		8879328	0					
ANR	8881028	ArgumentList	( const char * ) arg		8879328	1					
ANR	8881029	Argument	( const char * ) arg		8879328	0					
ANR	8881030	CastExpression	( const char * ) arg		8879328	0					
ANR	8881031	CastTarget	const char *		8879328	0					
ANR	8881032	Identifier	arg		8879328	1					
ANR	8881033	Argument	"""%ld"""		8879328	1					
ANR	8881034	PrimaryExpression	"""%ld"""		8879328	0					
ANR	8881035	Argument	& msize		8879328	2					
ANR	8881036	UnaryOperationExpression	& msize		8879328	0					
ANR	8881037	UnaryOperator	&		8879328	0					
ANR	8881038	Identifier	msize		8879328	1					
ANR	8881039	IfStatement	if ( msize <= 0 || msize > max_long >> 10 )		8879328	3					
ANR	8881040	Condition	msize <= 0 || msize > max_long >> 10	640:20:24363:24398	8879328	0	True				
ANR	8881041	OrExpression	msize <= 0 || msize > max_long >> 10		8879328	0		||			
ANR	8881042	RelationalExpression	msize <= 0		8879328	0		<=			
ANR	8881043	Identifier	msize		8879328	0					
ANR	8881044	PrimaryExpression	0		8879328	1					
ANR	8881045	RelationalExpression	msize > max_long >> 10		8879328	1		>			
ANR	8881046	Identifier	msize		8879328	0					
ANR	8881047	ShiftExpression	max_long >> 10		8879328	1		>>			
ANR	8881048	Identifier	max_long		8879328	0					
ANR	8881049	PrimaryExpression	10		8879328	1					
ANR	8881050	CompoundStatement		330:58:14194:14194	8879328	1					
ANR	8881051	ExpressionStatement	"outprintf ( minst -> heap , ""-K<numK> must have 1 <= numK <= %ld\\n"" , max_long >> 10 )"	641:20:24423:24532	8879328	0	True				
ANR	8881052	CallExpression	"outprintf ( minst -> heap , ""-K<numK> must have 1 <= numK <= %ld\\n"" , max_long >> 10 )"		8879328	0					
ANR	8881053	Callee	outprintf		8879328	0					
ANR	8881054	Identifier	outprintf		8879328	0					
ANR	8881055	ArgumentList	minst -> heap		8879328	1					
ANR	8881056	Argument	minst -> heap		8879328	0					
ANR	8881057	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8881058	Identifier	minst		8879328	0					
ANR	8881059	Identifier	heap		8879328	1					
ANR	8881060	Argument	"""-K<numK> must have 1 <= numK <= %ld\\n"""		8879328	1					
ANR	8881061	PrimaryExpression	"""-K<numK> must have 1 <= numK <= %ld\\n"""		8879328	0					
ANR	8881062	Argument	max_long >> 10		8879328	2					
ANR	8881063	ShiftExpression	max_long >> 10		8879328	0		>>			
ANR	8881064	Identifier	max_long		8879328	0					
ANR	8881065	PrimaryExpression	10		8879328	1					
ANR	8881066	ReturnStatement	return gs_error_Fatal ;	643:20:24554:24575	8879328	1	True				
ANR	8881067	Identifier	gs_error_Fatal		8879328	0					
ANR	8881068	ExpressionStatement	rawheap -> limit = msize << 10	645:16:24611:24639	8879328	4	True				
ANR	8881069	AssignmentExpression	rawheap -> limit = msize << 10		8879328	0		=			
ANR	8881070	PtrMemberAccess	rawheap -> limit		8879328	0					
ANR	8881071	Identifier	rawheap		8879328	0					
ANR	8881072	Identifier	limit		8879328	1					
ANR	8881073	ShiftExpression	msize << 10		8879328	1		<<			
ANR	8881074	Identifier	msize		8879328	0					
ANR	8881075	PrimaryExpression	10		8879328	1					
ANR	8881076	BreakStatement	break ;	647:12:24667:24672	8879328	52	True				
ANR	8881077	Label	case 'M' :	648:8:24682:24690	8879328	53	True				
ANR	8881078	CompoundStatement		340:16:14567:14585	8879328	54					
ANR	8881079	IdentifierDeclStatement	unsigned msize = 0 ;	650:16:24774:24792	8879328	0	True				
ANR	8881080	IdentifierDecl	msize = 0		8879328	0					
ANR	8881081	IdentifierDeclType	unsigned		8879328	0					
ANR	8881082	Identifier	msize		8879328	1					
ANR	8881083	AssignmentExpression	msize = 0		8879328	2		=			
ANR	8881084	Identifier	msize		8879328	0					
ANR	8881085	PrimaryExpression	0		8879328	1					
ANR	8881086	ExpressionStatement	"sscanf ( ( const char * ) arg , ""%u"" , & msize )"	652:16:24811:24850	8879328	1	True				
ANR	8881087	CallExpression	"sscanf ( ( const char * ) arg , ""%u"" , & msize )"		8879328	0					
ANR	8881088	Callee	sscanf		8879328	0					
ANR	8881089	Identifier	sscanf		8879328	0					
ANR	8881090	ArgumentList	( const char * ) arg		8879328	1					
ANR	8881091	Argument	( const char * ) arg		8879328	0					
ANR	8881092	CastExpression	( const char * ) arg		8879328	0					
ANR	8881093	CastTarget	const char *		8879328	0					
ANR	8881094	Identifier	arg		8879328	1					
ANR	8881095	Argument	"""%u"""		8879328	1					
ANR	8881096	PrimaryExpression	"""%u"""		8879328	0					
ANR	8881097	Argument	& msize		8879328	2					
ANR	8881098	UnaryOperationExpression	& msize		8879328	0					
ANR	8881099	UnaryOperator	&		8879328	0					
ANR	8881100	Identifier	msize		8879328	1					
ANR	8881101	IfStatement	if ( msize <= 0 || msize >= 64 )		8879328	2					
ANR	8881102	Condition	msize <= 0 || msize >= 64	654:20:24896:24920	8879328	0	True				
ANR	8881103	OrExpression	msize <= 0 || msize >= 64		8879328	0		||			
ANR	8881104	RelationalExpression	msize <= 0		8879328	0		<=			
ANR	8881105	Identifier	msize		8879328	0					
ANR	8881106	PrimaryExpression	0		8879328	1					
ANR	8881107	RelationalExpression	msize >= 64		8879328	1		>=			
ANR	8881108	Identifier	msize		8879328	0					
ANR	8881109	PrimaryExpression	64		8879328	1					
ANR	8881110	CompoundStatement		344:47:14716:14716	8879328	1					
ANR	8881111	ExpressionStatement	"puts ( minst -> heap , ""-M must be between 1 and 63"" )"	655:20:24945:24993	8879328	0	True				
ANR	8881112	CallExpression	"puts ( minst -> heap , ""-M must be between 1 and 63"" )"		8879328	0					
ANR	8881113	Callee	puts		8879328	0					
ANR	8881114	Identifier	puts		8879328	0					
ANR	8881115	ArgumentList	minst -> heap		8879328	1					
ANR	8881116	Argument	minst -> heap		8879328	0					
ANR	8881117	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8881118	Identifier	minst		8879328	0					
ANR	8881119	Identifier	heap		8879328	1					
ANR	8881120	Argument	"""-M must be between 1 and 63"""		8879328	1					
ANR	8881121	PrimaryExpression	"""-M must be between 1 and 63"""		8879328	0					
ANR	8881122	ReturnStatement	return gs_error_Fatal ;	656:20:25015:25036	8879328	1	True				
ANR	8881123	Identifier	gs_error_Fatal		8879328	0					
ANR	8881124	ExpressionStatement	minst -> memory_clump_size = msize << 10	659:16:25079:25117	8879328	3	True				
ANR	8881125	AssignmentExpression	minst -> memory_clump_size = msize << 10		8879328	0		=			
ANR	8881126	PtrMemberAccess	minst -> memory_clump_size		8879328	0					
ANR	8881127	Identifier	minst		8879328	0					
ANR	8881128	Identifier	memory_clump_size		8879328	1					
ANR	8881129	ShiftExpression	msize << 10		8879328	1		<<			
ANR	8881130	Identifier	msize		8879328	0					
ANR	8881131	PrimaryExpression	10		8879328	1					
ANR	8881132	BreakStatement	break ;	661:12:25145:25150	8879328	55	True				
ANR	8881133	Label	case 'N' :	662:8:25160:25168	8879328	56	True				
ANR	8881134	CompoundStatement		354:16:15036:15054	8879328	57					
ANR	8881135	IdentifierDeclStatement	unsigned nsize = 0 ;	664:16:25243:25261	8879328	0	True				
ANR	8881136	IdentifierDecl	nsize = 0		8879328	0					
ANR	8881137	IdentifierDeclType	unsigned		8879328	0					
ANR	8881138	Identifier	nsize		8879328	1					
ANR	8881139	AssignmentExpression	nsize = 0		8879328	2		=			
ANR	8881140	Identifier	nsize		8879328	0					
ANR	8881141	PrimaryExpression	0		8879328	1					
ANR	8881142	ExpressionStatement	"sscanf ( ( const char * ) arg , ""%d"" , & nsize )"	666:16:25280:25319	8879328	1	True				
ANR	8881143	CallExpression	"sscanf ( ( const char * ) arg , ""%d"" , & nsize )"		8879328	0					
ANR	8881144	Callee	sscanf		8879328	0					
ANR	8881145	Identifier	sscanf		8879328	0					
ANR	8881146	ArgumentList	( const char * ) arg		8879328	1					
ANR	8881147	Argument	( const char * ) arg		8879328	0					
ANR	8881148	CastExpression	( const char * ) arg		8879328	0					
ANR	8881149	CastTarget	const char *		8879328	0					
ANR	8881150	Identifier	arg		8879328	1					
ANR	8881151	Argument	"""%d"""		8879328	1					
ANR	8881152	PrimaryExpression	"""%d"""		8879328	0					
ANR	8881153	Argument	& nsize		8879328	2					
ANR	8881154	UnaryOperationExpression	& nsize		8879328	0					
ANR	8881155	UnaryOperator	&		8879328	0					
ANR	8881156	Identifier	nsize		8879328	1					
ANR	8881157	IfStatement	if ( nsize < 2 || nsize > 64 )		8879328	2					
ANR	8881158	Condition	nsize < 2 || nsize > 64	668:20:25365:25387	8879328	0	True				
ANR	8881159	OrExpression	nsize < 2 || nsize > 64		8879328	0		||			
ANR	8881160	RelationalExpression	nsize < 2		8879328	0		<			
ANR	8881161	Identifier	nsize		8879328	0					
ANR	8881162	PrimaryExpression	2		8879328	1					
ANR	8881163	RelationalExpression	nsize > 64		8879328	1		>			
ANR	8881164	Identifier	nsize		8879328	0					
ANR	8881165	PrimaryExpression	64		8879328	1					
ANR	8881166	CompoundStatement		358:45:15183:15183	8879328	1					
ANR	8881167	ExpressionStatement	"puts ( minst -> heap , ""-N must be between 2 and 64"" )"	669:20:25412:25460	8879328	0	True				
ANR	8881168	CallExpression	"puts ( minst -> heap , ""-N must be between 2 and 64"" )"		8879328	0					
ANR	8881169	Callee	puts		8879328	0					
ANR	8881170	Identifier	puts		8879328	0					
ANR	8881171	ArgumentList	minst -> heap		8879328	1					
ANR	8881172	Argument	minst -> heap		8879328	0					
ANR	8881173	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8881174	Identifier	minst		8879328	0					
ANR	8881175	Identifier	heap		8879328	1					
ANR	8881176	Argument	"""-N must be between 2 and 64"""		8879328	1					
ANR	8881177	PrimaryExpression	"""-N must be between 2 and 64"""		8879328	0					
ANR	8881178	ReturnStatement	return gs_error_Fatal ;	670:20:25482:25503	8879328	1	True				
ANR	8881179	Identifier	gs_error_Fatal		8879328	0					
ANR	8881180	ExpressionStatement	minst -> name_table_size = ( ulong ) nsize << 10	673:16:25546:25590	8879328	3	True				
ANR	8881181	AssignmentExpression	minst -> name_table_size = ( ulong ) nsize << 10		8879328	0		=			
ANR	8881182	PtrMemberAccess	minst -> name_table_size		8879328	0					
ANR	8881183	Identifier	minst		8879328	0					
ANR	8881184	Identifier	name_table_size		8879328	1					
ANR	8881185	ShiftExpression	( ulong ) nsize << 10		8879328	1		<<			
ANR	8881186	CastExpression	( ulong ) nsize		8879328	0					
ANR	8881187	CastTarget	ulong		8879328	0					
ANR	8881188	Identifier	nsize		8879328	1					
ANR	8881189	PrimaryExpression	10		8879328	1					
ANR	8881190	BreakStatement	break ;	675:12:25618:25623	8879328	58	True				
ANR	8881191	Label	case 'o' :	676:8:25633:25641	8879328	59	True				
ANR	8881192	CompoundStatement		373:16:15672:15679	8879328	60					
ANR	8881193	IdentifierDeclStatement	i_ctx_t * i_ctx_p ;	678:16:25729:25745	8879328	0	True				
ANR	8881194	IdentifierDecl	* i_ctx_p		8879328	0					
ANR	8881195	IdentifierDeclType	i_ctx_t *		8879328	0					
ANR	8881196	Identifier	i_ctx_p		8879328	1					
ANR	8881197	IdentifierDeclStatement	uint space ;	679:16:25763:25773	8879328	1	True				
ANR	8881198	IdentifierDecl	space		8879328	0					
ANR	8881199	IdentifierDeclType	uint		8879328	0					
ANR	8881200	Identifier	space		8879328	1					
ANR	8881201	IdentifierDeclStatement	const char * adef ;	680:16:25791:25807	8879328	2	True				
ANR	8881202	IdentifierDecl	* adef		8879328	0					
ANR	8881203	IdentifierDeclType	const char *		8879328	0					
ANR	8881204	Identifier	adef		8879328	1					
ANR	8881205	IdentifierDeclStatement	byte * str ;	681:16:25825:25834	8879328	3	True				
ANR	8881206	IdentifierDecl	* str		8879328	0					
ANR	8881207	IdentifierDeclType	byte *		8879328	0					
ANR	8881208	Identifier	str		8879328	1					
ANR	8881209	IdentifierDeclStatement	ref value ;	682:16:25852:25861	8879328	4	True				
ANR	8881210	IdentifierDecl	value		8879328	0					
ANR	8881211	IdentifierDeclType	ref		8879328	0					
ANR	8881212	Identifier	value		8879328	1					
ANR	8881213	IdentifierDeclStatement	int len ;	683:16:25879:25886	8879328	5	True				
ANR	8881214	IdentifierDecl	len		8879328	0					
ANR	8881215	IdentifierDeclType	int		8879328	0					
ANR	8881216	Identifier	len		8879328	1					
ANR	8881217	IfStatement	if ( ( code = gs_main_init1 ( minst ) ) < 0 )		8879328	6					
ANR	8881218	Condition	( code = gs_main_init1 ( minst ) ) < 0	685:20:25909:25941	8879328	0	True				
ANR	8881219	RelationalExpression	( code = gs_main_init1 ( minst ) ) < 0		8879328	0		<			
ANR	8881220	AssignmentExpression	code = gs_main_init1 ( minst )		8879328	0		=			
ANR	8881221	Identifier	code		8879328	0					
ANR	8881222	CallExpression	gs_main_init1 ( minst )		8879328	1					
ANR	8881223	Callee	gs_main_init1		8879328	0					
ANR	8881224	Identifier	gs_main_init1		8879328	0					
ANR	8881225	ArgumentList	minst		8879328	1					
ANR	8881226	Argument	minst		8879328	0					
ANR	8881227	Identifier	minst		8879328	0					
ANR	8881228	PrimaryExpression	0		8879328	1					
ANR	8881229	ReturnStatement	return code ;	686:20:25964:25975	8879328	1	True				
ANR	8881230	Identifier	code		8879328	0					
ANR	8881231	ExpressionStatement	i_ctx_p = minst -> i_ctx_p	688:16:25994:26018	8879328	7	True				
ANR	8881232	AssignmentExpression	i_ctx_p = minst -> i_ctx_p		8879328	0		=			
ANR	8881233	Identifier	i_ctx_p		8879328	0					
ANR	8881234	PtrMemberAccess	minst -> i_ctx_p		8879328	1					
ANR	8881235	Identifier	minst		8879328	0					
ANR	8881236	Identifier	i_ctx_p		8879328	1					
ANR	8881237	ExpressionStatement	space = icurrent_space	689:16:26036:26058	8879328	8	True				
ANR	8881238	AssignmentExpression	space = icurrent_space		8879328	0		=			
ANR	8881239	Identifier	space		8879328	0					
ANR	8881240	Identifier	icurrent_space		8879328	1					
ANR	8881241	IfStatement	if ( arg [ 0 ] == 0 )		8879328	9					
ANR	8881242	Condition	arg [ 0 ] == 0	690:20:26080:26090	8879328	0	True				
ANR	8881243	EqualityExpression	arg [ 0 ] == 0		8879328	0		==			
ANR	8881244	ArrayIndexing	arg [ 0 ]		8879328	0					
ANR	8881245	Identifier	arg		8879328	0					
ANR	8881246	PrimaryExpression	0		8879328	1					
ANR	8881247	PrimaryExpression	0		8879328	1					
ANR	8881248	CompoundStatement		380:33:15886:15886	8879328	1					
ANR	8881249	ExpressionStatement	"code = arg_next ( pal , ( const char * * ) & adef , minst -> heap )"	691:20:26115:26170	8879328	0	True				
ANR	8881250	AssignmentExpression	"code = arg_next ( pal , ( const char * * ) & adef , minst -> heap )"		8879328	0		=			
ANR	8881251	Identifier	code		8879328	0					
ANR	8881252	CallExpression	"arg_next ( pal , ( const char * * ) & adef , minst -> heap )"		8879328	1					
ANR	8881253	Callee	arg_next		8879328	0					
ANR	8881254	Identifier	arg_next		8879328	0					
ANR	8881255	ArgumentList	pal		8879328	1					
ANR	8881256	Argument	pal		8879328	0					
ANR	8881257	Identifier	pal		8879328	0					
ANR	8881258	Argument	( const char * * ) & adef		8879328	1					
ANR	8881259	CastExpression	( const char * * ) & adef		8879328	0					
ANR	8881260	CastTarget	const char * *		8879328	0					
ANR	8881261	UnaryOperationExpression	& adef		8879328	1					
ANR	8881262	UnaryOperator	&		8879328	0					
ANR	8881263	Identifier	adef		8879328	1					
ANR	8881264	Argument	minst -> heap		8879328	2					
ANR	8881265	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8881266	Identifier	minst		8879328	0					
ANR	8881267	Identifier	heap		8879328	1					
ANR	8881268	IfStatement	if ( code < 0 )		8879328	1					
ANR	8881269	Condition	code < 0	692:24:26196:26203	8879328	0	True				
ANR	8881270	RelationalExpression	code < 0		8879328	0		<			
ANR	8881271	Identifier	code		8879328	0					
ANR	8881272	PrimaryExpression	0		8879328	1					
ANR	8881273	ReturnStatement	return code ;	693:24:26230:26241	8879328	1	True				
ANR	8881274	Identifier	code		8879328	0					
ANR	8881275	ElseStatement	else		8879328	0					
ANR	8881276	ExpressionStatement	adef = arg	695:20:26286:26296	8879328	0	True				
ANR	8881277	AssignmentExpression	adef = arg		8879328	0		=			
ANR	8881278	Identifier	adef		8879328	0					
ANR	8881279	Identifier	arg		8879328	1					
ANR	8881280	IfStatement	if ( ( code = gs_main_init1 ( minst ) ) < 0 )		8879328	10					
ANR	8881281	Condition	( code = gs_main_init1 ( minst ) ) < 0	696:20:26318:26350	8879328	0	True				
ANR	8881282	RelationalExpression	( code = gs_main_init1 ( minst ) ) < 0		8879328	0		<			
ANR	8881283	AssignmentExpression	code = gs_main_init1 ( minst )		8879328	0		=			
ANR	8881284	Identifier	code		8879328	0					
ANR	8881285	CallExpression	gs_main_init1 ( minst )		8879328	1					
ANR	8881286	Callee	gs_main_init1		8879328	0					
ANR	8881287	Identifier	gs_main_init1		8879328	0					
ANR	8881288	ArgumentList	minst		8879328	1					
ANR	8881289	Argument	minst		8879328	0					
ANR	8881290	Identifier	minst		8879328	0					
ANR	8881291	PrimaryExpression	0		8879328	1					
ANR	8881292	ReturnStatement	return code ;	697:20:26373:26384	8879328	1	True				
ANR	8881293	Identifier	code		8879328	0					
ANR	8881294	ExpressionStatement	"ialloc_set_space ( idmemory , avm_system )"	698:16:26402:26440	8879328	11	True				
ANR	8881295	CallExpression	"ialloc_set_space ( idmemory , avm_system )"		8879328	0					
ANR	8881296	Callee	ialloc_set_space		8879328	0					
ANR	8881297	Identifier	ialloc_set_space		8879328	0					
ANR	8881298	ArgumentList	idmemory		8879328	1					
ANR	8881299	Argument	idmemory		8879328	0					
ANR	8881300	Identifier	idmemory		8879328	0					
ANR	8881301	Argument	avm_system		8879328	1					
ANR	8881302	Identifier	avm_system		8879328	0					
ANR	8881303	ExpressionStatement	len = strlen ( adef )	699:16:26458:26476	8879328	12	True				
ANR	8881304	AssignmentExpression	len = strlen ( adef )		8879328	0		=			
ANR	8881305	Identifier	len		8879328	0					
ANR	8881306	CallExpression	strlen ( adef )		8879328	1					
ANR	8881307	Callee	strlen		8879328	0					
ANR	8881308	Identifier	strlen		8879328	0					
ANR	8881309	ArgumentList	adef		8879328	1					
ANR	8881310	Argument	adef		8879328	0					
ANR	8881311	Identifier	adef		8879328	0					
ANR	8881312	ExpressionStatement	"str = ialloc_string ( len , ""-o"" )"	700:16:26494:26524	8879328	13	True				
ANR	8881313	AssignmentExpression	"str = ialloc_string ( len , ""-o"" )"		8879328	0		=			
ANR	8881314	Identifier	str		8879328	0					
ANR	8881315	CallExpression	"ialloc_string ( len , ""-o"" )"		8879328	1					
ANR	8881316	Callee	ialloc_string		8879328	0					
ANR	8881317	Identifier	ialloc_string		8879328	0					
ANR	8881318	ArgumentList	len		8879328	1					
ANR	8881319	Argument	len		8879328	0					
ANR	8881320	Identifier	len		8879328	0					
ANR	8881321	Argument	"""-o"""		8879328	1					
ANR	8881322	PrimaryExpression	"""-o"""		8879328	0					
ANR	8881323	IfStatement	if ( str == NULL )		8879328	14					
ANR	8881324	Condition	str == NULL	701:20:26546:26556	8879328	0	True				
ANR	8881325	EqualityExpression	str == NULL		8879328	0		==			
ANR	8881326	Identifier	str		8879328	0					
ANR	8881327	Identifier	NULL		8879328	1					
ANR	8881328	ReturnStatement	return gs_error_VMerror ;	702:20:26579:26602	8879328	1	True				
ANR	8881329	Identifier	gs_error_VMerror		8879328	0					
ANR	8881330	ExpressionStatement	"memcpy ( str , adef , len )"	703:16:26620:26642	8879328	15	True				
ANR	8881331	CallExpression	"memcpy ( str , adef , len )"		8879328	0					
ANR	8881332	Callee	memcpy		8879328	0					
ANR	8881333	Identifier	memcpy		8879328	0					
ANR	8881334	ArgumentList	str		8879328	1					
ANR	8881335	Argument	str		8879328	0					
ANR	8881336	Identifier	str		8879328	0					
ANR	8881337	Argument	adef		8879328	1					
ANR	8881338	Identifier	adef		8879328	0					
ANR	8881339	Argument	len		8879328	2					
ANR	8881340	Identifier	len		8879328	0					
ANR	8881341	ExpressionStatement	"make_const_string ( & value , a_readonly | avm_system , len , str )"	704:16:26660:26720	8879328	16	True				
ANR	8881342	CallExpression	"make_const_string ( & value , a_readonly | avm_system , len , str )"		8879328	0					
ANR	8881343	Callee	make_const_string		8879328	0					
ANR	8881344	Identifier	make_const_string		8879328	0					
ANR	8881345	ArgumentList	& value		8879328	1					
ANR	8881346	Argument	& value		8879328	0					
ANR	8881347	UnaryOperationExpression	& value		8879328	0					
ANR	8881348	UnaryOperator	&		8879328	0					
ANR	8881349	Identifier	value		8879328	1					
ANR	8881350	Argument	a_readonly | avm_system		8879328	1					
ANR	8881351	InclusiveOrExpression	a_readonly | avm_system		8879328	0		|			
ANR	8881352	Identifier	a_readonly		8879328	0					
ANR	8881353	Identifier	avm_system		8879328	1					
ANR	8881354	Argument	len		8879328	2					
ANR	8881355	Identifier	len		8879328	0					
ANR	8881356	Argument	str		8879328	3					
ANR	8881357	Identifier	str		8879328	0					
ANR	8881358	ExpressionStatement	"ialloc_set_space ( idmemory , space )"	705:16:26738:26771	8879328	17	True				
ANR	8881359	CallExpression	"ialloc_set_space ( idmemory , space )"		8879328	0					
ANR	8881360	Callee	ialloc_set_space		8879328	0					
ANR	8881361	Identifier	ialloc_set_space		8879328	0					
ANR	8881362	ArgumentList	idmemory		8879328	1					
ANR	8881363	Argument	idmemory		8879328	0					
ANR	8881364	Identifier	idmemory		8879328	0					
ANR	8881365	Argument	space		8879328	1					
ANR	8881366	Identifier	space		8879328	0					
ANR	8881367	ExpressionStatement	"initial_enter_name ( ""OutputFile"" , & value )"	706:16:26789:26829	8879328	18	True				
ANR	8881368	CallExpression	"initial_enter_name ( ""OutputFile"" , & value )"		8879328	0					
ANR	8881369	Callee	initial_enter_name		8879328	0					
ANR	8881370	Identifier	initial_enter_name		8879328	0					
ANR	8881371	ArgumentList	"""OutputFile"""		8879328	1					
ANR	8881372	Argument	"""OutputFile"""		8879328	0					
ANR	8881373	PrimaryExpression	"""OutputFile"""		8879328	0					
ANR	8881374	Argument	& value		8879328	1					
ANR	8881375	UnaryOperationExpression	& value		8879328	0					
ANR	8881376	UnaryOperator	&		8879328	0					
ANR	8881377	Identifier	value		8879328	1					
ANR	8881378	ExpressionStatement	"initial_enter_name ( ""NOPAUSE"" , & vtrue )"	707:16:26847:26884	8879328	19	True				
ANR	8881379	CallExpression	"initial_enter_name ( ""NOPAUSE"" , & vtrue )"		8879328	0					
ANR	8881380	Callee	initial_enter_name		8879328	0					
ANR	8881381	Identifier	initial_enter_name		8879328	0					
ANR	8881382	ArgumentList	"""NOPAUSE"""		8879328	1					
ANR	8881383	Argument	"""NOPAUSE"""		8879328	0					
ANR	8881384	PrimaryExpression	"""NOPAUSE"""		8879328	0					
ANR	8881385	Argument	& vtrue		8879328	1					
ANR	8881386	UnaryOperationExpression	& vtrue		8879328	0					
ANR	8881387	UnaryOperator	&		8879328	0					
ANR	8881388	Identifier	vtrue		8879328	1					
ANR	8881389	ExpressionStatement	"initial_enter_name ( ""BATCH"" , & vtrue )"	708:16:26902:26937	8879328	20	True				
ANR	8881390	CallExpression	"initial_enter_name ( ""BATCH"" , & vtrue )"		8879328	0					
ANR	8881391	Callee	initial_enter_name		8879328	0					
ANR	8881392	Identifier	initial_enter_name		8879328	0					
ANR	8881393	ArgumentList	"""BATCH"""		8879328	1					
ANR	8881394	Argument	"""BATCH"""		8879328	0					
ANR	8881395	PrimaryExpression	"""BATCH"""		8879328	0					
ANR	8881396	Argument	& vtrue		8879328	1					
ANR	8881397	UnaryOperationExpression	& vtrue		8879328	0					
ANR	8881398	UnaryOperator	&		8879328	0					
ANR	8881399	Identifier	vtrue		8879328	1					
ANR	8881400	BreakStatement	break ;	710:12:26965:26970	8879328	61	True				
ANR	8881401	Label	case 'P' :	711:8:26980:26988	8879328	62	True				
ANR	8881402	IfStatement	"if ( ! strcmp ( arg , """" ) )"		8879328	63					
ANR	8881403	Condition	"! strcmp ( arg , """" )"	712:16:27058:27073	8879328	0	True				
ANR	8881404	UnaryOperationExpression	"! strcmp ( arg , """" )"		8879328	0					
ANR	8881405	UnaryOperator	!		8879328	0					
ANR	8881406	CallExpression	"strcmp ( arg , """" )"		8879328	1					
ANR	8881407	Callee	strcmp		8879328	0					
ANR	8881408	Identifier	strcmp		8879328	0					
ANR	8881409	ArgumentList	arg		8879328	1					
ANR	8881410	Argument	arg		8879328	0					
ANR	8881411	Identifier	arg		8879328	0					
ANR	8881412	Argument	""""""		8879328	1					
ANR	8881413	PrimaryExpression	""""""		8879328	0					
ANR	8881414	ExpressionStatement	minst -> search_here_first = true	713:16:27092:27123	8879328	1	True				
ANR	8881415	AssignmentExpression	minst -> search_here_first = true		8879328	0		=			
ANR	8881416	PtrMemberAccess	minst -> search_here_first		8879328	0					
ANR	8881417	Identifier	minst		8879328	0					
ANR	8881418	Identifier	search_here_first		8879328	1					
ANR	8881419	Identifier	true		8879328	1					
ANR	8881420	ElseStatement	else		8879328	0					
ANR	8881421	IfStatement	"if ( ! strcmp ( arg , ""-"" ) )"		8879328	0					
ANR	8881422	Condition	"! strcmp ( arg , ""-"" )"	714:21:27146:27162	8879328	0	True				
ANR	8881423	UnaryOperationExpression	"! strcmp ( arg , ""-"" )"		8879328	0					
ANR	8881424	UnaryOperator	!		8879328	0					
ANR	8881425	CallExpression	"strcmp ( arg , ""-"" )"		8879328	1					
ANR	8881426	Callee	strcmp		8879328	0					
ANR	8881427	Identifier	strcmp		8879328	0					
ANR	8881428	ArgumentList	arg		8879328	1					
ANR	8881429	Argument	arg		8879328	0					
ANR	8881430	Identifier	arg		8879328	0					
ANR	8881431	Argument	"""-"""		8879328	1					
ANR	8881432	PrimaryExpression	"""-"""		8879328	0					
ANR	8881433	ExpressionStatement	minst -> search_here_first = false	715:16:27181:27213	8879328	1	True				
ANR	8881434	AssignmentExpression	minst -> search_here_first = false		8879328	0		=			
ANR	8881435	PtrMemberAccess	minst -> search_here_first		8879328	0					
ANR	8881436	Identifier	minst		8879328	0					
ANR	8881437	Identifier	search_here_first		8879328	1					
ANR	8881438	Identifier	false		8879328	1					
ANR	8881439	ElseStatement	else		8879328	0					
ANR	8881440	CompoundStatement		406:17:17025:17025	8879328	0					
ANR	8881441	ExpressionStatement	"puts ( minst -> heap , ""Only -P or -P- is allowed."" )"	717:16:27250:27297	8879328	0	True				
ANR	8881442	CallExpression	"puts ( minst -> heap , ""Only -P or -P- is allowed."" )"		8879328	0					
ANR	8881443	Callee	puts		8879328	0					
ANR	8881444	Identifier	puts		8879328	0					
ANR	8881445	ArgumentList	minst -> heap		8879328	1					
ANR	8881446	Argument	minst -> heap		8879328	0					
ANR	8881447	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8881448	Identifier	minst		8879328	0					
ANR	8881449	Identifier	heap		8879328	1					
ANR	8881450	Argument	"""Only -P or -P- is allowed."""		8879328	1					
ANR	8881451	PrimaryExpression	"""Only -P or -P- is allowed."""		8879328	0					
ANR	8881452	ReturnStatement	return gs_error_Fatal ;	718:16:27315:27336	8879328	1	True				
ANR	8881453	Identifier	gs_error_Fatal		8879328	0					
ANR	8881454	BreakStatement	break ;	720:12:27364:27369	8879328	64	True				
ANR	8881455	Label	case 'q' :	721:8:27379:27387	8879328	65	True				
ANR	8881456	IfStatement	if ( ( code = gs_main_init1 ( minst ) ) < 0 )		8879328	66					
ANR	8881457	Condition	( code = gs_main_init1 ( minst ) ) < 0	722:16:27439:27471	8879328	0	True				
ANR	8881458	RelationalExpression	( code = gs_main_init1 ( minst ) ) < 0		8879328	0		<			
ANR	8881459	AssignmentExpression	code = gs_main_init1 ( minst )		8879328	0		=			
ANR	8881460	Identifier	code		8879328	0					
ANR	8881461	CallExpression	gs_main_init1 ( minst )		8879328	1					
ANR	8881462	Callee	gs_main_init1		8879328	0					
ANR	8881463	Identifier	gs_main_init1		8879328	0					
ANR	8881464	ArgumentList	minst		8879328	1					
ANR	8881465	Argument	minst		8879328	0					
ANR	8881466	Identifier	minst		8879328	0					
ANR	8881467	PrimaryExpression	0		8879328	1					
ANR	8881468	ReturnStatement	return code ;	723:16:27490:27501	8879328	1	True				
ANR	8881469	Identifier	code		8879328	0					
ANR	8881470	ExpressionStatement	"initial_enter_name ( ""QUIET"" , & vtrue )"	724:12:27515:27550	8879328	67	True				
ANR	8881471	CallExpression	"initial_enter_name ( ""QUIET"" , & vtrue )"		8879328	0					
ANR	8881472	Callee	initial_enter_name		8879328	0					
ANR	8881473	Identifier	initial_enter_name		8879328	0					
ANR	8881474	ArgumentList	"""QUIET"""		8879328	1					
ANR	8881475	Argument	"""QUIET"""		8879328	0					
ANR	8881476	PrimaryExpression	"""QUIET"""		8879328	0					
ANR	8881477	Argument	& vtrue		8879328	1					
ANR	8881478	UnaryOperationExpression	& vtrue		8879328	0					
ANR	8881479	UnaryOperator	&		8879328	0					
ANR	8881480	Identifier	vtrue		8879328	1					
ANR	8881481	BreakStatement	break ;	725:12:27564:27569	8879328	68	True				
ANR	8881482	Label	case 'r' :	726:8:27579:27587	8879328	69	True				
ANR	8881483	CompoundStatement		419:16:17491:17500	8879328	70					
ANR	8881484	IdentifierDeclStatement	"float xres , yres ;"	728:16:27664:27680	8879328	0	True				
ANR	8881485	IdentifierDecl	xres		8879328	0					
ANR	8881486	IdentifierDeclType	float		8879328	0					
ANR	8881487	Identifier	xres		8879328	1					
ANR	8881488	IdentifierDecl	yres		8879328	1					
ANR	8881489	IdentifierDeclType	float		8879328	0					
ANR	8881490	Identifier	yres		8879328	1					
ANR	8881491	IdentifierDeclStatement	ref value ;	729:16:27698:27707	8879328	1	True				
ANR	8881492	IdentifierDecl	value		8879328	0					
ANR	8881493	IdentifierDeclType	ref		8879328	0					
ANR	8881494	Identifier	value		8879328	1					
ANR	8881495	IfStatement	if ( ( code = gs_main_init1 ( minst ) ) < 0 )		8879328	2					
ANR	8881496	Condition	( code = gs_main_init1 ( minst ) ) < 0	731:20:27730:27762	8879328	0	True				
ANR	8881497	RelationalExpression	( code = gs_main_init1 ( minst ) ) < 0		8879328	0		<			
ANR	8881498	AssignmentExpression	code = gs_main_init1 ( minst )		8879328	0		=			
ANR	8881499	Identifier	code		8879328	0					
ANR	8881500	CallExpression	gs_main_init1 ( minst )		8879328	1					
ANR	8881501	Callee	gs_main_init1		8879328	0					
ANR	8881502	Identifier	gs_main_init1		8879328	0					
ANR	8881503	ArgumentList	minst		8879328	1					
ANR	8881504	Argument	minst		8879328	0					
ANR	8881505	Identifier	minst		8879328	0					
ANR	8881506	PrimaryExpression	0		8879328	1					
ANR	8881507	ReturnStatement	return code ;	732:20:27785:27796	8879328	1	True				
ANR	8881508	Identifier	code		8879328	0					
ANR	8881509	SwitchStatement	"switch ( sscanf ( ( const char * ) arg , ""%fx%f"" , & xres , & yres ) )"		8879328	3					
ANR	8881510	Condition	"sscanf ( ( const char * ) arg , ""%fx%f"" , & xres , & yres )"	733:24:27822:27869	8879328	0	True				
ANR	8881511	CallExpression	"sscanf ( ( const char * ) arg , ""%fx%f"" , & xres , & yres )"		8879328	0					
ANR	8881512	Callee	sscanf		8879328	0					
ANR	8881513	Identifier	sscanf		8879328	0					
ANR	8881514	ArgumentList	( const char * ) arg		8879328	1					
ANR	8881515	Argument	( const char * ) arg		8879328	0					
ANR	8881516	CastExpression	( const char * ) arg		8879328	0					
ANR	8881517	CastTarget	const char *		8879328	0					
ANR	8881518	Identifier	arg		8879328	1					
ANR	8881519	Argument	"""%fx%f"""		8879328	1					
ANR	8881520	PrimaryExpression	"""%fx%f"""		8879328	0					
ANR	8881521	Argument	& xres		8879328	2					
ANR	8881522	UnaryOperationExpression	& xres		8879328	0					
ANR	8881523	UnaryOperator	&		8879328	0					
ANR	8881524	Identifier	xres		8879328	1					
ANR	8881525	Argument	& yres		8879328	3					
ANR	8881526	UnaryOperationExpression	& yres		8879328	0					
ANR	8881527	UnaryOperator	&		8879328	0					
ANR	8881528	Identifier	yres		8879328	1					
ANR	8881529	CompoundStatement		423:74:17665:17665	8879328	1					
ANR	8881530	Label	default :	734:20:27894:27901	8879328	0	True				
ANR	8881531	Identifier	default		8879328	0					
ANR	8881532	ExpressionStatement	"puts ( minst -> heap , ""-r must be followed by <res> or <xres>x<yres>"" )"	735:24:27927:27993	8879328	1	True				
ANR	8881533	CallExpression	"puts ( minst -> heap , ""-r must be followed by <res> or <xres>x<yres>"" )"		8879328	0					
ANR	8881534	Callee	puts		8879328	0					
ANR	8881535	Identifier	puts		8879328	0					
ANR	8881536	ArgumentList	minst -> heap		8879328	1					
ANR	8881537	Argument	minst -> heap		8879328	0					
ANR	8881538	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8881539	Identifier	minst		8879328	0					
ANR	8881540	Identifier	heap		8879328	1					
ANR	8881541	Argument	"""-r must be followed by <res> or <xres>x<yres>"""		8879328	1					
ANR	8881542	PrimaryExpression	"""-r must be followed by <res> or <xres>x<yres>"""		8879328	0					
ANR	8881543	ReturnStatement	return gs_error_Fatal ;	736:24:28019:28040	8879328	2	True				
ANR	8881544	Identifier	gs_error_Fatal		8879328	0					
ANR	8881545	Label	case 1 :	737:20:28062:28068	8879328	3	True				
ANR	8881546	ExpressionStatement	yres = xres	738:24:28112:28123	8879328	4	True				
ANR	8881547	AssignmentExpression	yres = xres		8879328	0		=			
ANR	8881548	Identifier	yres		8879328	0					
ANR	8881549	Identifier	xres		8879328	1					
ANR	8881550	Label	case 2 :	740:20:28188:28194	8879328	5	True				
ANR	8881551	ExpressionStatement	"make_real ( & value , xres )"	741:24:28246:28269	8879328	6	True				
ANR	8881552	CallExpression	"make_real ( & value , xres )"		8879328	0					
ANR	8881553	Callee	make_real		8879328	0					
ANR	8881554	Identifier	make_real		8879328	0					
ANR	8881555	ArgumentList	& value		8879328	1					
ANR	8881556	Argument	& value		8879328	0					
ANR	8881557	UnaryOperationExpression	& value		8879328	0					
ANR	8881558	UnaryOperator	&		8879328	0					
ANR	8881559	Identifier	value		8879328	1					
ANR	8881560	Argument	xres		8879328	1					
ANR	8881561	Identifier	xres		8879328	0					
ANR	8881562	ExpressionStatement	"initial_enter_name ( ""DEVICEXRESOLUTION"" , & value )"	742:24:28295:28342	8879328	7	True				
ANR	8881563	CallExpression	"initial_enter_name ( ""DEVICEXRESOLUTION"" , & value )"		8879328	0					
ANR	8881564	Callee	initial_enter_name		8879328	0					
ANR	8881565	Identifier	initial_enter_name		8879328	0					
ANR	8881566	ArgumentList	"""DEVICEXRESOLUTION"""		8879328	1					
ANR	8881567	Argument	"""DEVICEXRESOLUTION"""		8879328	0					
ANR	8881568	PrimaryExpression	"""DEVICEXRESOLUTION"""		8879328	0					
ANR	8881569	Argument	& value		8879328	1					
ANR	8881570	UnaryOperationExpression	& value		8879328	0					
ANR	8881571	UnaryOperator	&		8879328	0					
ANR	8881572	Identifier	value		8879328	1					
ANR	8881573	ExpressionStatement	"make_real ( & value , yres )"	743:24:28368:28391	8879328	8	True				
ANR	8881574	CallExpression	"make_real ( & value , yres )"		8879328	0					
ANR	8881575	Callee	make_real		8879328	0					
ANR	8881576	Identifier	make_real		8879328	0					
ANR	8881577	ArgumentList	& value		8879328	1					
ANR	8881578	Argument	& value		8879328	0					
ANR	8881579	UnaryOperationExpression	& value		8879328	0					
ANR	8881580	UnaryOperator	&		8879328	0					
ANR	8881581	Identifier	value		8879328	1					
ANR	8881582	Argument	yres		8879328	1					
ANR	8881583	Identifier	yres		8879328	0					
ANR	8881584	ExpressionStatement	"initial_enter_name ( ""DEVICEYRESOLUTION"" , & value )"	744:24:28417:28464	8879328	9	True				
ANR	8881585	CallExpression	"initial_enter_name ( ""DEVICEYRESOLUTION"" , & value )"		8879328	0					
ANR	8881586	Callee	initial_enter_name		8879328	0					
ANR	8881587	Identifier	initial_enter_name		8879328	0					
ANR	8881588	ArgumentList	"""DEVICEYRESOLUTION"""		8879328	1					
ANR	8881589	Argument	"""DEVICEYRESOLUTION"""		8879328	0					
ANR	8881590	PrimaryExpression	"""DEVICEYRESOLUTION"""		8879328	0					
ANR	8881591	Argument	& value		8879328	1					
ANR	8881592	UnaryOperationExpression	& value		8879328	0					
ANR	8881593	UnaryOperator	&		8879328	0					
ANR	8881594	Identifier	value		8879328	1					
ANR	8881595	ExpressionStatement	"initial_enter_name ( ""FIXEDRESOLUTION"" , & vtrue )"	745:24:28490:28535	8879328	10	True				
ANR	8881596	CallExpression	"initial_enter_name ( ""FIXEDRESOLUTION"" , & vtrue )"		8879328	0					
ANR	8881597	Callee	initial_enter_name		8879328	0					
ANR	8881598	Identifier	initial_enter_name		8879328	0					
ANR	8881599	ArgumentList	"""FIXEDRESOLUTION"""		8879328	1					
ANR	8881600	Argument	"""FIXEDRESOLUTION"""		8879328	0					
ANR	8881601	PrimaryExpression	"""FIXEDRESOLUTION"""		8879328	0					
ANR	8881602	Argument	& vtrue		8879328	1					
ANR	8881603	UnaryOperationExpression	& vtrue		8879328	0					
ANR	8881604	UnaryOperator	&		8879328	0					
ANR	8881605	Identifier	vtrue		8879328	1					
ANR	8881606	BreakStatement	break ;	747:16:28571:28576	8879328	4	True				
ANR	8881607	Label	case 'D' :	749:8:28600:28608	8879328	71	True				
ANR	8881608	Label	case 'd' :	750:8:28650:28658	8879328	72	True				
ANR	8881609	Label	case 'S' :	751:8:28668:28676	8879328	73	True				
ANR	8881610	Label	case 's' :	752:8:28728:28736	8879328	74	True				
ANR	8881611	CompoundStatement		447:16:18698:18707	8879328	75					
ANR	8881612	IdentifierDeclStatement	"char * adef = arg_copy ( arg , minst -> heap ) ;"	754:16:28768:28807	8879328	0	True				
ANR	8881613	IdentifierDecl	"* adef = arg_copy ( arg , minst -> heap )"		8879328	0					
ANR	8881614	IdentifierDeclType	char *		8879328	0					
ANR	8881615	Identifier	adef		8879328	1					
ANR	8881616	AssignmentExpression	"* adef = arg_copy ( arg , minst -> heap )"		8879328	2		=			
ANR	8881617	Identifier	adef		8879328	0					
ANR	8881618	CallExpression	"arg_copy ( arg , minst -> heap )"		8879328	1					
ANR	8881619	Callee	arg_copy		8879328	0					
ANR	8881620	Identifier	arg_copy		8879328	0					
ANR	8881621	ArgumentList	arg		8879328	1					
ANR	8881622	Argument	arg		8879328	0					
ANR	8881623	Identifier	arg		8879328	0					
ANR	8881624	Argument	minst -> heap		8879328	1					
ANR	8881625	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8881626	Identifier	minst		8879328	0					
ANR	8881627	Identifier	heap		8879328	1					
ANR	8881628	IdentifierDeclStatement	char * eqp ;	755:16:28825:28834	8879328	1	True				
ANR	8881629	IdentifierDecl	* eqp		8879328	0					
ANR	8881630	IdentifierDeclType	char *		8879328	0					
ANR	8881631	Identifier	eqp		8879328	1					
ANR	8881632	IdentifierDeclStatement	bool isd = ( sw == 'D' || sw == 'd' ) ;	756:16:28852:28887	8879328	2	True				
ANR	8881633	IdentifierDecl	isd = ( sw == 'D' || sw == 'd' )		8879328	0					
ANR	8881634	IdentifierDeclType	bool		8879328	0					
ANR	8881635	Identifier	isd		8879328	1					
ANR	8881636	AssignmentExpression	isd = ( sw == 'D' || sw == 'd' )		8879328	2		=			
ANR	8881637	Identifier	isd		8879328	0					
ANR	8881638	OrExpression	sw == 'D' || sw == 'd'		8879328	1		||			
ANR	8881639	EqualityExpression	sw == 'D'		8879328	0		==			
ANR	8881640	Identifier	sw		8879328	0					
ANR	8881641	PrimaryExpression	'D'		8879328	1					
ANR	8881642	EqualityExpression	sw == 'd'		8879328	1		==			
ANR	8881643	Identifier	sw		8879328	0					
ANR	8881644	PrimaryExpression	'd'		8879328	1					
ANR	8881645	IdentifierDeclStatement	ref value ;	757:16:28905:28914	8879328	3	True				
ANR	8881646	IdentifierDecl	value		8879328	0					
ANR	8881647	IdentifierDeclType	ref		8879328	0					
ANR	8881648	Identifier	value		8879328	1					
ANR	8881649	IfStatement	if ( adef == NULL )		8879328	4					
ANR	8881650	Condition	adef == NULL	759:20:28937:28948	8879328	0	True				
ANR	8881651	EqualityExpression	adef == NULL		8879328	0		==			
ANR	8881652	Identifier	adef		8879328	0					
ANR	8881653	Identifier	NULL		8879328	1					
ANR	8881654	ReturnStatement	return gs_error_Fatal ;	760:20:28971:28992	8879328	1	True				
ANR	8881655	Identifier	gs_error_Fatal		8879328	0					
ANR	8881656	ExpressionStatement	"eqp = strchr ( adef , '=' )"	761:16:29010:29033	8879328	5	True				
ANR	8881657	AssignmentExpression	"eqp = strchr ( adef , '=' )"		8879328	0		=			
ANR	8881658	Identifier	eqp		8879328	0					
ANR	8881659	CallExpression	"strchr ( adef , '=' )"		8879328	1					
ANR	8881660	Callee	strchr		8879328	0					
ANR	8881661	Identifier	strchr		8879328	0					
ANR	8881662	ArgumentList	adef		8879328	1					
ANR	8881663	Argument	adef		8879328	0					
ANR	8881664	Identifier	adef		8879328	0					
ANR	8881665	Argument	'='		8879328	1					
ANR	8881666	PrimaryExpression	'='		8879328	0					
ANR	8881667	IfStatement	if ( eqp == NULL )		8879328	6					
ANR	8881668	Condition	eqp == NULL	763:20:29056:29066	8879328	0	True				
ANR	8881669	EqualityExpression	eqp == NULL		8879328	0		==			
ANR	8881670	Identifier	eqp		8879328	0					
ANR	8881671	Identifier	NULL		8879328	1					
ANR	8881672	ExpressionStatement	"eqp = strchr ( adef , '#' )"	764:20:29089:29112	8879328	1	True				
ANR	8881673	AssignmentExpression	"eqp = strchr ( adef , '#' )"		8879328	0		=			
ANR	8881674	Identifier	eqp		8879328	0					
ANR	8881675	CallExpression	"strchr ( adef , '#' )"		8879328	1					
ANR	8881676	Callee	strchr		8879328	0					
ANR	8881677	Identifier	strchr		8879328	0					
ANR	8881678	ArgumentList	adef		8879328	1					
ANR	8881679	Argument	adef		8879328	0					
ANR	8881680	Identifier	adef		8879328	0					
ANR	8881681	Argument	'#'		8879328	1					
ANR	8881682	PrimaryExpression	'#'		8879328	0					
ANR	8881683	IfStatement	if ( ( code = gs_main_init1 ( minst ) ) < 0 )		8879328	7					
ANR	8881684	Condition	( code = gs_main_init1 ( minst ) ) < 0	767:20:29247:29279	8879328	0	True				
ANR	8881685	RelationalExpression	( code = gs_main_init1 ( minst ) ) < 0		8879328	0		<			
ANR	8881686	AssignmentExpression	code = gs_main_init1 ( minst )		8879328	0		=			
ANR	8881687	Identifier	code		8879328	0					
ANR	8881688	CallExpression	gs_main_init1 ( minst )		8879328	1					
ANR	8881689	Callee	gs_main_init1		8879328	0					
ANR	8881690	Identifier	gs_main_init1		8879328	0					
ANR	8881691	ArgumentList	minst		8879328	1					
ANR	8881692	Argument	minst		8879328	0					
ANR	8881693	Identifier	minst		8879328	0					
ANR	8881694	PrimaryExpression	0		8879328	1					
ANR	8881695	CompoundStatement		457:55:19075:19075	8879328	1					
ANR	8881696	ExpressionStatement	"arg_free ( ( char * ) adef , minst -> heap )"	768:20:29304:29339	8879328	0	True				
ANR	8881697	CallExpression	"arg_free ( ( char * ) adef , minst -> heap )"		8879328	0					
ANR	8881698	Callee	arg_free		8879328	0					
ANR	8881699	Identifier	arg_free		8879328	0					
ANR	8881700	ArgumentList	( char * ) adef		8879328	1					
ANR	8881701	Argument	( char * ) adef		8879328	0					
ANR	8881702	CastExpression	( char * ) adef		8879328	0					
ANR	8881703	CastTarget	char *		8879328	0					
ANR	8881704	Identifier	adef		8879328	1					
ANR	8881705	Argument	minst -> heap		8879328	1					
ANR	8881706	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8881707	Identifier	minst		8879328	0					
ANR	8881708	Identifier	heap		8879328	1					
ANR	8881709	ReturnStatement	return code ;	769:20:29361:29372	8879328	1	True				
ANR	8881710	Identifier	code		8879328	0					
ANR	8881711	IfStatement	if ( eqp == adef )		8879328	8					
ANR	8881712	Condition	eqp == adef	771:20:29412:29422	8879328	0	True				
ANR	8881713	EqualityExpression	eqp == adef		8879328	0		==			
ANR	8881714	Identifier	eqp		8879328	0					
ANR	8881715	Identifier	adef		8879328	1					
ANR	8881716	CompoundStatement		461:33:19218:19218	8879328	1					
ANR	8881717	ExpressionStatement	"puts ( minst -> heap , ""Usage: -dNAME, -dNAME=TOKEN, -sNAME=STRING"" )"	772:20:29447:29510	8879328	0	True				
ANR	8881718	CallExpression	"puts ( minst -> heap , ""Usage: -dNAME, -dNAME=TOKEN, -sNAME=STRING"" )"		8879328	0					
ANR	8881719	Callee	puts		8879328	0					
ANR	8881720	Identifier	puts		8879328	0					
ANR	8881721	ArgumentList	minst -> heap		8879328	1					
ANR	8881722	Argument	minst -> heap		8879328	0					
ANR	8881723	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8881724	Identifier	minst		8879328	0					
ANR	8881725	Identifier	heap		8879328	1					
ANR	8881726	Argument	"""Usage: -dNAME, -dNAME=TOKEN, -sNAME=STRING"""		8879328	1					
ANR	8881727	PrimaryExpression	"""Usage: -dNAME, -dNAME=TOKEN, -sNAME=STRING"""		8879328	0					
ANR	8881728	ReturnStatement	return gs_error_Fatal ;	773:20:29532:29553	8879328	1	True				
ANR	8881729	Identifier	gs_error_Fatal		8879328	0					
ANR	8881730	IfStatement	if ( eqp == NULL )		8879328	9					
ANR	8881731	Condition	eqp == NULL	775:20:29593:29603	8879328	0	True				
ANR	8881732	EqualityExpression	eqp == NULL		8879328	0		==			
ANR	8881733	Identifier	eqp		8879328	0					
ANR	8881734	Identifier	NULL		8879328	1					
ANR	8881735	CompoundStatement		465:33:19399:19399	8879328	1					
ANR	8881736	IfStatement	if ( isd )		8879328	0					
ANR	8881737	Condition	isd	776:24:29632:29634	8879328	0	True				
ANR	8881738	Identifier	isd		8879328	0					
ANR	8881739	ExpressionStatement	make_true ( & value )	777:24:29661:29678	8879328	1	True				
ANR	8881740	CallExpression	make_true ( & value )		8879328	0					
ANR	8881741	Callee	make_true		8879328	0					
ANR	8881742	Identifier	make_true		8879328	0					
ANR	8881743	ArgumentList	& value		8879328	1					
ANR	8881744	Argument	& value		8879328	0					
ANR	8881745	UnaryOperationExpression	& value		8879328	0					
ANR	8881746	UnaryOperator	&		8879328	0					
ANR	8881747	Identifier	value		8879328	1					
ANR	8881748	ElseStatement	else		8879328	0					
ANR	8881749	ExpressionStatement	"make_empty_string ( & value , a_readonly )"	779:24:29729:29766	8879328	0	True				
ANR	8881750	CallExpression	"make_empty_string ( & value , a_readonly )"		8879328	0					
ANR	8881751	Callee	make_empty_string		8879328	0					
ANR	8881752	Identifier	make_empty_string		8879328	0					
ANR	8881753	ArgumentList	& value		8879328	1					
ANR	8881754	Argument	& value		8879328	0					
ANR	8881755	UnaryOperationExpression	& value		8879328	0					
ANR	8881756	UnaryOperator	&		8879328	0					
ANR	8881757	Identifier	value		8879328	1					
ANR	8881758	Argument	a_readonly		8879328	1					
ANR	8881759	Identifier	a_readonly		8879328	0					
ANR	8881760	ElseStatement	else		8879328	0					
ANR	8881761	CompoundStatement		473:20:19691:19718	8879328	0					
ANR	8881762	IdentifierDeclStatement	int code ;	781:20:29813:29821	8879328	0	True				
ANR	8881763	IdentifierDecl	code		8879328	0					
ANR	8881764	IdentifierDeclType	int		8879328	0					
ANR	8881765	Identifier	code		8879328	1					
ANR	8881766	IdentifierDeclStatement	i_ctx_t * i_ctx_p = minst -> i_ctx_p ;	782:20:29843:29876	8879328	1	True				
ANR	8881767	IdentifierDecl	* i_ctx_p = minst -> i_ctx_p		8879328	0					
ANR	8881768	IdentifierDeclType	i_ctx_t *		8879328	0					
ANR	8881769	Identifier	i_ctx_p		8879328	1					
ANR	8881770	AssignmentExpression	* i_ctx_p = minst -> i_ctx_p		8879328	2		=			
ANR	8881771	Identifier	i_ctx_p		8879328	0					
ANR	8881772	PtrMemberAccess	minst -> i_ctx_p		8879328	1					
ANR	8881773	Identifier	minst		8879328	0					
ANR	8881774	Identifier	i_ctx_p		8879328	1					
ANR	8881775	IdentifierDeclStatement	uint space = icurrent_space ;	783:20:29898:29925	8879328	2	True				
ANR	8881776	IdentifierDecl	space = icurrent_space		8879328	0					
ANR	8881777	IdentifierDeclType	uint		8879328	0					
ANR	8881778	Identifier	space		8879328	1					
ANR	8881779	AssignmentExpression	space = icurrent_space		8879328	2		=			
ANR	8881780	Identifier	icurrent_space		8879328	0					
ANR	8881781	Identifier	icurrent_space		8879328	1					
ANR	8881782	ExpressionStatement	* eqp ++ = 0	785:20:29948:29958	8879328	3	True				
ANR	8881783	AssignmentExpression	* eqp ++ = 0		8879328	0		=			
ANR	8881784	UnaryOperationExpression	* eqp ++		8879328	0					
ANR	8881785	UnaryOperator	*		8879328	0					
ANR	8881786	PostIncDecOperationExpression	eqp ++		8879328	1					
ANR	8881787	Identifier	eqp		8879328	0					
ANR	8881788	IncDec	++		8879328	1					
ANR	8881789	PrimaryExpression	0		8879328	1					
ANR	8881790	ExpressionStatement	"ialloc_set_space ( idmemory , avm_system )"	786:20:29980:30018	8879328	4	True				
ANR	8881791	CallExpression	"ialloc_set_space ( idmemory , avm_system )"		8879328	0					
ANR	8881792	Callee	ialloc_set_space		8879328	0					
ANR	8881793	Identifier	ialloc_set_space		8879328	0					
ANR	8881794	ArgumentList	idmemory		8879328	1					
ANR	8881795	Argument	idmemory		8879328	0					
ANR	8881796	Identifier	idmemory		8879328	0					
ANR	8881797	Argument	avm_system		8879328	1					
ANR	8881798	Identifier	avm_system		8879328	0					
ANR	8881799	IfStatement	if ( isd )		8879328	5					
ANR	8881800	Condition	isd	787:24:30044:30046	8879328	0	True				
ANR	8881801	Identifier	isd		8879328	0					
ANR	8881802	CompoundStatement		478:24:19868:19878	8879328	1					
ANR	8881803	IdentifierDeclStatement	"int num , i ;"	788:24:30075:30085	8879328	0	True				
ANR	8881804	IdentifierDecl	num		8879328	0					
ANR	8881805	IdentifierDeclType	int		8879328	0					
ANR	8881806	Identifier	num		8879328	1					
ANR	8881807	IdentifierDecl	i		8879328	1					
ANR	8881808	IdentifierDeclType	int		8879328	0					
ANR	8881809	Identifier	i		8879328	1					
ANR	8881810	IfStatement	"if ( ( strchr ( eqp , '#' ) == NULL ) && ( strchr ( eqp , '.' ) == NULL ) && ( strchr ( eqp , 'e' ) == NULL ) && ( strchr ( eqp , 'E' ) == NULL ) && ( ( i = sscanf ( ( const char * ) eqp , ""%d"" , & num ) ) == 1 ) )"		8879328	1					
ANR	8881811	Condition	"( strchr ( eqp , '#' ) == NULL ) && ( strchr ( eqp , '.' ) == NULL ) && ( strchr ( eqp , 'e' ) == NULL ) && ( strchr ( eqp , 'E' ) == NULL ) && ( ( i = sscanf ( ( const char * ) eqp , ""%d"" , & num ) ) == 1 )"	793:28:30382:30607	8879328	0	True				
ANR	8881812	AndExpression	"( strchr ( eqp , '#' ) == NULL ) && ( strchr ( eqp , '.' ) == NULL ) && ( strchr ( eqp , 'e' ) == NULL ) && ( strchr ( eqp , 'E' ) == NULL ) && ( ( i = sscanf ( ( const char * ) eqp , ""%d"" , & num ) ) == 1 )"		8879328	0		&&			
ANR	8881813	EqualityExpression	"strchr ( eqp , '#' ) == NULL"		8879328	0		==			
ANR	8881814	CallExpression	"strchr ( eqp , '#' )"		8879328	0					
ANR	8881815	Callee	strchr		8879328	0					
ANR	8881816	Identifier	strchr		8879328	0					
ANR	8881817	ArgumentList	eqp		8879328	1					
ANR	8881818	Argument	eqp		8879328	0					
ANR	8881819	Identifier	eqp		8879328	0					
ANR	8881820	Argument	'#'		8879328	1					
ANR	8881821	PrimaryExpression	'#'		8879328	0					
ANR	8881822	Identifier	NULL		8879328	1					
ANR	8881823	AndExpression	"( strchr ( eqp , '.' ) == NULL ) && ( strchr ( eqp , 'e' ) == NULL ) && ( strchr ( eqp , 'E' ) == NULL ) && ( ( i = sscanf ( ( const char * ) eqp , ""%d"" , & num ) ) == 1 )"		8879328	1		&&			
ANR	8881824	EqualityExpression	"strchr ( eqp , '.' ) == NULL"		8879328	0		==			
ANR	8881825	CallExpression	"strchr ( eqp , '.' )"		8879328	0					
ANR	8881826	Callee	strchr		8879328	0					
ANR	8881827	Identifier	strchr		8879328	0					
ANR	8881828	ArgumentList	eqp		8879328	1					
ANR	8881829	Argument	eqp		8879328	0					
ANR	8881830	Identifier	eqp		8879328	0					
ANR	8881831	Argument	'.'		8879328	1					
ANR	8881832	PrimaryExpression	'.'		8879328	0					
ANR	8881833	Identifier	NULL		8879328	1					
ANR	8881834	AndExpression	"( strchr ( eqp , 'e' ) == NULL ) && ( strchr ( eqp , 'E' ) == NULL ) && ( ( i = sscanf ( ( const char * ) eqp , ""%d"" , & num ) ) == 1 )"		8879328	1		&&			
ANR	8881835	EqualityExpression	"strchr ( eqp , 'e' ) == NULL"		8879328	0		==			
ANR	8881836	CallExpression	"strchr ( eqp , 'e' )"		8879328	0					
ANR	8881837	Callee	strchr		8879328	0					
ANR	8881838	Identifier	strchr		8879328	0					
ANR	8881839	ArgumentList	eqp		8879328	1					
ANR	8881840	Argument	eqp		8879328	0					
ANR	8881841	Identifier	eqp		8879328	0					
ANR	8881842	Argument	'e'		8879328	1					
ANR	8881843	PrimaryExpression	'e'		8879328	0					
ANR	8881844	Identifier	NULL		8879328	1					
ANR	8881845	AndExpression	"( strchr ( eqp , 'E' ) == NULL ) && ( ( i = sscanf ( ( const char * ) eqp , ""%d"" , & num ) ) == 1 )"		8879328	1		&&			
ANR	8881846	EqualityExpression	"strchr ( eqp , 'E' ) == NULL"		8879328	0		==			
ANR	8881847	CallExpression	"strchr ( eqp , 'E' )"		8879328	0					
ANR	8881848	Callee	strchr		8879328	0					
ANR	8881849	Identifier	strchr		8879328	0					
ANR	8881850	ArgumentList	eqp		8879328	1					
ANR	8881851	Argument	eqp		8879328	0					
ANR	8881852	Identifier	eqp		8879328	0					
ANR	8881853	Argument	'E'		8879328	1					
ANR	8881854	PrimaryExpression	'E'		8879328	0					
ANR	8881855	Identifier	NULL		8879328	1					
ANR	8881856	EqualityExpression	"( i = sscanf ( ( const char * ) eqp , ""%d"" , & num ) ) == 1"		8879328	1		==			
ANR	8881857	AssignmentExpression	"i = sscanf ( ( const char * ) eqp , ""%d"" , & num )"		8879328	0		=			
ANR	8881858	Identifier	i		8879328	0					
ANR	8881859	CallExpression	"sscanf ( ( const char * ) eqp , ""%d"" , & num )"		8879328	1					
ANR	8881860	Callee	sscanf		8879328	0					
ANR	8881861	Identifier	sscanf		8879328	0					
ANR	8881862	ArgumentList	( const char * ) eqp		8879328	1					
ANR	8881863	Argument	( const char * ) eqp		8879328	0					
ANR	8881864	CastExpression	( const char * ) eqp		8879328	0					
ANR	8881865	CastTarget	const char *		8879328	0					
ANR	8881866	Identifier	eqp		8879328	1					
ANR	8881867	Argument	"""%d"""		8879328	1					
ANR	8881868	PrimaryExpression	"""%d"""		8879328	0					
ANR	8881869	Argument	& num		8879328	2					
ANR	8881870	UnaryOperationExpression	& num		8879328	0					
ANR	8881871	UnaryOperator	&		8879328	0					
ANR	8881872	Identifier	num		8879328	1					
ANR	8881873	PrimaryExpression	1		8879328	1					
ANR	8881874	CompoundStatement		486:28:20433:20467	8879328	1					
ANR	8881875	IdentifierDeclStatement	char suffix = eqp [ strlen ( eqp ) - 1 ] ;	796:28:30640:30674	8879328	0	True				
ANR	8881876	IdentifierDecl	suffix = eqp [ strlen ( eqp ) - 1 ]		8879328	0					
ANR	8881877	IdentifierDeclType	char		8879328	0					
ANR	8881878	Identifier	suffix		8879328	1					
ANR	8881879	AssignmentExpression	suffix = eqp [ strlen ( eqp ) - 1 ]		8879328	2		=			
ANR	8881880	Identifier	suffix		8879328	0					
ANR	8881881	ArrayIndexing	eqp [ strlen ( eqp ) - 1 ]		8879328	1					
ANR	8881882	Identifier	eqp		8879328	0					
ANR	8881883	AdditiveExpression	strlen ( eqp ) - 1		8879328	1		-			
ANR	8881884	CallExpression	strlen ( eqp )		8879328	0					
ANR	8881885	Callee	strlen		8879328	0					
ANR	8881886	Identifier	strlen		8879328	0					
ANR	8881887	ArgumentList	eqp		8879328	1					
ANR	8881888	Argument	eqp		8879328	0					
ANR	8881889	Identifier	eqp		8879328	0					
ANR	8881890	PrimaryExpression	1		8879328	1					
ANR	8881891	SwitchStatement	switch ( suffix )		8879328	1					
ANR	8881892	Condition	suffix	798:36:30713:30718	8879328	0	True				
ANR	8881893	Identifier	suffix		8879328	0					
ANR	8881894	CompoundStatement		488:44:20514:20514	8879328	1					
ANR	8881895	Label	case 'k' :	799:32:30755:30763	8879328	0	True				
ANR	8881896	Label	case 'K' :	800:32:30797:30805	8879328	1	True				
ANR	8881897	ExpressionStatement	num *= 1024	801:36:30843:30854	8879328	2	True				
ANR	8881898	AssignmentExpression	num *= 1024		8879328	0		*=			
ANR	8881899	Identifier	num		8879328	0					
ANR	8881900	PrimaryExpression	1024		8879328	1					
ANR	8881901	BreakStatement	break ;	802:36:30892:30897	8879328	3	True				
ANR	8881902	Label	case 'm' :	803:32:30931:30939	8879328	4	True				
ANR	8881903	Label	case 'M' :	804:32:30973:30981	8879328	5	True				
ANR	8881904	ExpressionStatement	num *= 1024 * 1024	805:36:31019:31037	8879328	6	True				
ANR	8881905	AssignmentExpression	num *= 1024 * 1024		8879328	0		*=			
ANR	8881906	Identifier	num		8879328	0					
ANR	8881907	MultiplicativeExpression	1024 * 1024		8879328	1		*			
ANR	8881908	PrimaryExpression	1024		8879328	0					
ANR	8881909	PrimaryExpression	1024		8879328	1					
ANR	8881910	BreakStatement	break ;	806:36:31075:31080	8879328	7	True				
ANR	8881911	Label	case 'g' :	807:32:31114:31122	8879328	8	True				
ANR	8881912	Label	case 'G' :	808:32:31156:31164	8879328	9	True				
ANR	8881913	ExpressionStatement	num *= 1024 * 1024 * 1024	811:36:31381:31406	8879328	10	True				
ANR	8881914	AssignmentExpression	num *= 1024 * 1024 * 1024		8879328	0		*=			
ANR	8881915	Identifier	num		8879328	0					
ANR	8881916	MultiplicativeExpression	1024 * 1024 * 1024		8879328	1		*			
ANR	8881917	PrimaryExpression	1024		8879328	0					
ANR	8881918	MultiplicativeExpression	1024 * 1024		8879328	1		*			
ANR	8881919	PrimaryExpression	1024		8879328	0					
ANR	8881920	PrimaryExpression	1024		8879328	1					
ANR	8881921	BreakStatement	break ;	812:36:31444:31449	8879328	11	True				
ANR	8881922	Label	default :	813:32:31483:31490	8879328	12	True				
ANR	8881923	Identifier	default		8879328	0					
ANR	8881924	BreakStatement	break ;	814:36:31528:31533	8879328	13	True				
ANR	8881925	ExpressionStatement	"make_int ( & value , num )"	816:28:31643:31664	8879328	2	True				
ANR	8881926	CallExpression	"make_int ( & value , num )"		8879328	0					
ANR	8881927	Callee	make_int		8879328	0					
ANR	8881928	Identifier	make_int		8879328	0					
ANR	8881929	ArgumentList	& value		8879328	1					
ANR	8881930	Argument	& value		8879328	0					
ANR	8881931	UnaryOperationExpression	& value		8879328	0					
ANR	8881932	UnaryOperator	&		8879328	0					
ANR	8881933	Identifier	value		8879328	1					
ANR	8881934	Argument	num		8879328	1					
ANR	8881935	Identifier	num		8879328	0					
ANR	8881936	ElseStatement	else		8879328	0					
ANR	8881937	CompoundStatement		510:28:21652:21671	8879328	0					
ANR	8881938	IdentifierDeclStatement	stream astream ;	819:28:31815:31829	8879328	0	True				
ANR	8881939	IdentifierDecl	astream		8879328	0					
ANR	8881940	IdentifierDeclType	stream		8879328	0					
ANR	8881941	Identifier	astream		8879328	1					
ANR	8881942	IdentifierDeclStatement	scanner_state state ;	820:28:31859:31878	8879328	1	True				
ANR	8881943	IdentifierDecl	state		8879328	0					
ANR	8881944	IdentifierDeclType	scanner_state		8879328	0					
ANR	8881945	Identifier	state		8879328	1					
ANR	8881946	ExpressionStatement	"s_init ( & astream , NULL )"	822:28:31909:31931	8879328	2	True				
ANR	8881947	CallExpression	"s_init ( & astream , NULL )"		8879328	0					
ANR	8881948	Callee	s_init		8879328	0					
ANR	8881949	Identifier	s_init		8879328	0					
ANR	8881950	ArgumentList	& astream		8879328	1					
ANR	8881951	Argument	& astream		8879328	0					
ANR	8881952	UnaryOperationExpression	& astream		8879328	0					
ANR	8881953	UnaryOperator	&		8879328	0					
ANR	8881954	Identifier	astream		8879328	1					
ANR	8881955	Argument	NULL		8879328	1					
ANR	8881956	Identifier	NULL		8879328	0					
ANR	8881957	ExpressionStatement	"sread_string ( & astream , ( const byte * ) eqp , strlen ( eqp ) )"	823:28:31961:32056	8879328	3	True				
ANR	8881958	CallExpression	"sread_string ( & astream , ( const byte * ) eqp , strlen ( eqp ) )"		8879328	0					
ANR	8881959	Callee	sread_string		8879328	0					
ANR	8881960	Identifier	sread_string		8879328	0					
ANR	8881961	ArgumentList	& astream		8879328	1					
ANR	8881962	Argument	& astream		8879328	0					
ANR	8881963	UnaryOperationExpression	& astream		8879328	0					
ANR	8881964	UnaryOperator	&		8879328	0					
ANR	8881965	Identifier	astream		8879328	1					
ANR	8881966	Argument	( const byte * ) eqp		8879328	1					
ANR	8881967	CastExpression	( const byte * ) eqp		8879328	0					
ANR	8881968	CastTarget	const byte *		8879328	0					
ANR	8881969	Identifier	eqp		8879328	1					
ANR	8881970	Argument	strlen ( eqp )		8879328	2					
ANR	8881971	CallExpression	strlen ( eqp )		8879328	0					
ANR	8881972	Callee	strlen		8879328	0					
ANR	8881973	Identifier	strlen		8879328	0					
ANR	8881974	ArgumentList	eqp		8879328	1					
ANR	8881975	Argument	eqp		8879328	0					
ANR	8881976	Identifier	eqp		8879328	0					
ANR	8881977	ExpressionStatement	"gs_scanner_init_stream ( & state , & astream )"	825:28:32086:32126	8879328	4	True				
ANR	8881978	CallExpression	"gs_scanner_init_stream ( & state , & astream )"		8879328	0					
ANR	8881979	Callee	gs_scanner_init_stream		8879328	0					
ANR	8881980	Identifier	gs_scanner_init_stream		8879328	0					
ANR	8881981	ArgumentList	& state		8879328	1					
ANR	8881982	Argument	& state		8879328	0					
ANR	8881983	UnaryOperationExpression	& state		8879328	0					
ANR	8881984	UnaryOperator	&		8879328	0					
ANR	8881985	Identifier	state		8879328	1					
ANR	8881986	Argument	& astream		8879328	1					
ANR	8881987	UnaryOperationExpression	& astream		8879328	0					
ANR	8881988	UnaryOperator	&		8879328	0					
ANR	8881989	Identifier	astream		8879328	1					
ANR	8881990	ExpressionStatement	"code = gs_scan_token ( minst -> i_ctx_p , & value , & state )"	826:28:32156:32208	8879328	5	True				
ANR	8881991	AssignmentExpression	"code = gs_scan_token ( minst -> i_ctx_p , & value , & state )"		8879328	0		=			
ANR	8881992	Identifier	code		8879328	0					
ANR	8881993	CallExpression	"gs_scan_token ( minst -> i_ctx_p , & value , & state )"		8879328	1					
ANR	8881994	Callee	gs_scan_token		8879328	0					
ANR	8881995	Identifier	gs_scan_token		8879328	0					
ANR	8881996	ArgumentList	minst -> i_ctx_p		8879328	1					
ANR	8881997	Argument	minst -> i_ctx_p		8879328	0					
ANR	8881998	PtrMemberAccess	minst -> i_ctx_p		8879328	0					
ANR	8881999	Identifier	minst		8879328	0					
ANR	8882000	Identifier	i_ctx_p		8879328	1					
ANR	8882001	Argument	& value		8879328	1					
ANR	8882002	UnaryOperationExpression	& value		8879328	0					
ANR	8882003	UnaryOperator	&		8879328	0					
ANR	8882004	Identifier	value		8879328	1					
ANR	8882005	Argument	& state		8879328	2					
ANR	8882006	UnaryOperationExpression	& state		8879328	0					
ANR	8882007	UnaryOperator	&		8879328	0					
ANR	8882008	Identifier	state		8879328	1					
ANR	8882009	IfStatement	if ( code )		8879328	6					
ANR	8882010	Condition	code	827:32:32242:32245	8879328	0	True				
ANR	8882011	Identifier	code		8879328	0					
ANR	8882012	CompoundStatement		517:38:22041:22041	8879328	1					
ANR	8882013	ExpressionStatement	"outprintf ( minst -> heap , ""Invalid value for option -d%s, -dNAME= must be followed by a valid token\\n"" , arg )"	828:32:32282:32387	8879328	0	True				
ANR	8882014	CallExpression	"outprintf ( minst -> heap , ""Invalid value for option -d%s, -dNAME= must be followed by a valid token\\n"" , arg )"		8879328	0					
ANR	8882015	Callee	outprintf		8879328	0					
ANR	8882016	Identifier	outprintf		8879328	0					
ANR	8882017	ArgumentList	minst -> heap		8879328	1					
ANR	8882018	Argument	minst -> heap		8879328	0					
ANR	8882019	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8882020	Identifier	minst		8879328	0					
ANR	8882021	Identifier	heap		8879328	1					
ANR	8882022	Argument	"""Invalid value for option -d%s, -dNAME= must be followed by a valid token\\n"""		8879328	1					
ANR	8882023	PrimaryExpression	"""Invalid value for option -d%s, -dNAME= must be followed by a valid token\\n"""		8879328	0					
ANR	8882024	Argument	arg		8879328	2					
ANR	8882025	Identifier	arg		8879328	0					
ANR	8882026	ReturnStatement	return gs_error_Fatal ;	829:32:32421:32442	8879328	1	True				
ANR	8882027	Identifier	gs_error_Fatal		8879328	0					
ANR	8882028	IfStatement	"if ( r_has_type_attrs ( & value , t_name , a_executable ) )"		8879328	7					
ANR	8882029	Condition	"r_has_type_attrs ( & value , t_name , a_executable )"	831:32:32506:32600	8879328	0	True				
ANR	8882030	CallExpression	"r_has_type_attrs ( & value , t_name , a_executable )"		8879328	0					
ANR	8882031	Callee	r_has_type_attrs		8879328	0					
ANR	8882032	Identifier	r_has_type_attrs		8879328	0					
ANR	8882033	ArgumentList	& value		8879328	1					
ANR	8882034	Argument	& value		8879328	0					
ANR	8882035	UnaryOperationExpression	& value		8879328	0					
ANR	8882036	UnaryOperator	&		8879328	0					
ANR	8882037	Identifier	value		8879328	1					
ANR	8882038	Argument	t_name		8879328	1					
ANR	8882039	Identifier	t_name		8879328	0					
ANR	8882040	Argument	a_executable		8879328	2					
ANR	8882041	Identifier	a_executable		8879328	0					
ANR	8882042	CompoundStatement		523:32:22430:22439	8879328	1					
ANR	8882043	IdentifierDeclStatement	ref nsref ;	833:32:32637:32646	8879328	0	True				
ANR	8882044	IdentifierDecl	nsref		8879328	0					
ANR	8882045	IdentifierDeclType	ref		8879328	0					
ANR	8882046	Identifier	nsref		8879328	1					
ANR	8882047	ExpressionStatement	"name_string_ref ( minst -> heap , & value , & nsref )"	835:32:32681:32725	8879328	1	True				
ANR	8882048	CallExpression	"name_string_ref ( minst -> heap , & value , & nsref )"		8879328	0					
ANR	8882049	Callee	name_string_ref		8879328	0					
ANR	8882050	Identifier	name_string_ref		8879328	0					
ANR	8882051	ArgumentList	minst -> heap		8879328	1					
ANR	8882052	Argument	minst -> heap		8879328	0					
ANR	8882053	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8882054	Identifier	minst		8879328	0					
ANR	8882055	Identifier	heap		8879328	1					
ANR	8882056	Argument	& value		8879328	1					
ANR	8882057	UnaryOperationExpression	& value		8879328	0					
ANR	8882058	UnaryOperator	&		8879328	0					
ANR	8882059	Identifier	value		8879328	1					
ANR	8882060	Argument	& nsref		8879328	2					
ANR	8882061	UnaryOperationExpression	& nsref		8879328	0					
ANR	8882062	UnaryOperator	&		8879328	0					
ANR	8882063	Identifier	nsref		8879328	1					
ANR	8882064	Statement	undef	836:1:32728:32732	8879328	2	True				
ANR	8882065	Statement	string_is	836:7:32734:32742	8879328	3	True				
ANR	8882066	Statement	define	837:1:32745:32750	8879328	4	True				
ANR	8882067	Statement	string_is	837:8:32752:32760	8879328	5	True				
ANR	8882068	Statement	(	837:17:32761:32761	8879328	6	True				
ANR	8882069	Statement	nsref	837:18:32762:32766	8879328	7	True				
ANR	8882070	Statement	","	837:23:32767:32767	8879328	8	True				
ANR	8882071	Statement	str	837:25:32769:32771	8879328	9	True				
ANR	8882072	Statement	","	837:28:32772:32772	8879328	10	True				
ANR	8882073	Statement	len	837:30:32774:32776	8879328	11	True				
ANR	8882074	Statement	)	837:33:32777:32777	8879328	12	True				
ANR	8882075	Statement	(	838:7:32787:32787	8879328	13	True				
ANR	8882076	Statement	r_size	838:8:32788:32793	8879328	14	True				
ANR	8882077	Statement	(	838:14:32794:32794	8879328	15	True				
ANR	8882078	Statement	&	838:15:32795:32795	8879328	16	True				
ANR	8882079	Statement	(	838:16:32796:32796	8879328	17	True				
ANR	8882080	Statement	nsref	838:17:32797:32801	8879328	18	True				
ANR	8882081	Statement	)	838:22:32802:32802	8879328	19	True				
ANR	8882082	Statement	)	838:23:32803:32803	8879328	20	True				
ANR	8882083	Statement	==	838:25:32805:32806	8879328	21	True				
ANR	8882084	Statement	(	838:28:32808:32808	8879328	22	True				
ANR	8882085	Statement	len	838:29:32809:32811	8879328	23	True				
ANR	8882086	Statement	)	838:32:32812:32812	8879328	24	True				
ANR	8882087	Statement	&&	838:34:32814:32815	8879328	25	True				
ANR	8882088	Statement	!	839:7:32825:32825	8879328	26	True				
ANR	8882089	Statement	strncmp	839:8:32826:32832	8879328	27	True				
ANR	8882090	Statement	(	839:15:32833:32833	8879328	28	True				
ANR	8882091	Statement	(	839:16:32834:32834	8879328	29	True				
ANR	8882092	Statement	const	839:17:32835:32839	8879328	30	True				
ANR	8882093	Statement	char	839:23:32841:32844	8879328	31	True				
ANR	8882094	Statement	*	839:28:32846:32846	8879328	32	True				
ANR	8882095	Statement	)	839:29:32847:32847	8879328	33	True				
ANR	8882096	Statement	(	839:30:32848:32848	8879328	34	True				
ANR	8882097	Statement	nsref	839:31:32849:32853	8879328	35	True				
ANR	8882098	Statement	)	839:36:32854:32854	8879328	36	True				
ANR	8882099	Statement	.	839:37:32855:32855	8879328	37	True				
ANR	8882100	Statement	value	839:38:32856:32860	8879328	38	True				
ANR	8882101	Statement	.	839:43:32861:32861	8879328	39	True				
ANR	8882102	Statement	const_bytes	839:44:32862:32872	8879328	40	True				
ANR	8882103	Statement	","	839:55:32873:32873	8879328	41	True				
ANR	8882104	Statement	str	839:57:32875:32877	8879328	42	True				
ANR	8882105	Statement	","	839:60:32878:32878	8879328	43	True				
ANR	8882106	Statement	(	839:62:32880:32880	8879328	44	True				
ANR	8882107	Statement	len	839:63:32881:32883	8879328	45	True				
ANR	8882108	Statement	)	839:66:32884:32884	8879328	46	True				
ANR	8882109	Statement	)	839:67:32885:32885	8879328	47	True				
ANR	8882110	Statement	)	839:68:32886:32886	8879328	48	True				
ANR	8882111	IfStatement	"if ( string_is ( nsref , ""null"" , 4 ) )"		8879328	49					
ANR	8882112	Condition	"string_is ( nsref , ""null"" , 4 )"	840:36:32924:32950	8879328	0	True				
ANR	8882113	CallExpression	"string_is ( nsref , ""null"" , 4 )"		8879328	0					
ANR	8882114	Callee	string_is		8879328	0					
ANR	8882115	Identifier	string_is		8879328	0					
ANR	8882116	ArgumentList	nsref		8879328	1					
ANR	8882117	Argument	nsref		8879328	0					
ANR	8882118	Identifier	nsref		8879328	0					
ANR	8882119	Argument	"""null"""		8879328	1					
ANR	8882120	PrimaryExpression	"""null"""		8879328	0					
ANR	8882121	Argument	4		8879328	2					
ANR	8882122	PrimaryExpression	4		8879328	0					
ANR	8882123	ExpressionStatement	make_null ( & value )	841:36:32989:33006	8879328	1	True				
ANR	8882124	CallExpression	make_null ( & value )		8879328	0					
ANR	8882125	Callee	make_null		8879328	0					
ANR	8882126	Identifier	make_null		8879328	0					
ANR	8882127	ArgumentList	& value		8879328	1					
ANR	8882128	Argument	& value		8879328	0					
ANR	8882129	UnaryOperationExpression	& value		8879328	0					
ANR	8882130	UnaryOperator	&		8879328	0					
ANR	8882131	Identifier	value		8879328	1					
ANR	8882132	ElseStatement	else		8879328	0					
ANR	8882133	IfStatement	"if ( string_is ( nsref , ""true"" , 4 ) )"		8879328	0					
ANR	8882134	Condition	"string_is ( nsref , ""true"" , 4 )"	842:41:33049:33075	8879328	0	True				
ANR	8882135	CallExpression	"string_is ( nsref , ""true"" , 4 )"		8879328	0					
ANR	8882136	Callee	string_is		8879328	0					
ANR	8882137	Identifier	string_is		8879328	0					
ANR	8882138	ArgumentList	nsref		8879328	1					
ANR	8882139	Argument	nsref		8879328	0					
ANR	8882140	Identifier	nsref		8879328	0					
ANR	8882141	Argument	"""true"""		8879328	1					
ANR	8882142	PrimaryExpression	"""true"""		8879328	0					
ANR	8882143	Argument	4		8879328	2					
ANR	8882144	PrimaryExpression	4		8879328	0					
ANR	8882145	ExpressionStatement	make_true ( & value )	843:36:33114:33131	8879328	1	True				
ANR	8882146	CallExpression	make_true ( & value )		8879328	0					
ANR	8882147	Callee	make_true		8879328	0					
ANR	8882148	Identifier	make_true		8879328	0					
ANR	8882149	ArgumentList	& value		8879328	1					
ANR	8882150	Argument	& value		8879328	0					
ANR	8882151	UnaryOperationExpression	& value		8879328	0					
ANR	8882152	UnaryOperator	&		8879328	0					
ANR	8882153	Identifier	value		8879328	1					
ANR	8882154	ElseStatement	else		8879328	0					
ANR	8882155	IfStatement	"if ( string_is ( nsref , ""false"" , 5 ) )"		8879328	0					
ANR	8882156	Condition	"string_is ( nsref , ""false"" , 5 )"	844:41:33174:33201	8879328	0	True				
ANR	8882157	CallExpression	"string_is ( nsref , ""false"" , 5 )"		8879328	0					
ANR	8882158	Callee	string_is		8879328	0					
ANR	8882159	Identifier	string_is		8879328	0					
ANR	8882160	ArgumentList	nsref		8879328	1					
ANR	8882161	Argument	nsref		8879328	0					
ANR	8882162	Identifier	nsref		8879328	0					
ANR	8882163	Argument	"""false"""		8879328	1					
ANR	8882164	PrimaryExpression	"""false"""		8879328	0					
ANR	8882165	Argument	5		8879328	2					
ANR	8882166	PrimaryExpression	5		8879328	0					
ANR	8882167	ExpressionStatement	make_false ( & value )	845:36:33240:33258	8879328	1	True				
ANR	8882168	CallExpression	make_false ( & value )		8879328	0					
ANR	8882169	Callee	make_false		8879328	0					
ANR	8882170	Identifier	make_false		8879328	0					
ANR	8882171	ArgumentList	& value		8879328	1					
ANR	8882172	Argument	& value		8879328	0					
ANR	8882173	UnaryOperationExpression	& value		8879328	0					
ANR	8882174	UnaryOperator	&		8879328	0					
ANR	8882175	Identifier	value		8879328	1					
ANR	8882176	ElseStatement	else		8879328	0					
ANR	8882177	CompoundStatement		536:37:23090:23090	8879328	0					
ANR	8882178	ExpressionStatement	"outprintf ( minst -> heap , ""Invalid value for option -d%s, use -sNAME= to define string constants\\n"" , arg )"	847:36:33335:33437	8879328	0	True				
ANR	8882179	CallExpression	"outprintf ( minst -> heap , ""Invalid value for option -d%s, use -sNAME= to define string constants\\n"" , arg )"		8879328	0					
ANR	8882180	Callee	outprintf		8879328	0					
ANR	8882181	Identifier	outprintf		8879328	0					
ANR	8882182	ArgumentList	minst -> heap		8879328	1					
ANR	8882183	Argument	minst -> heap		8879328	0					
ANR	8882184	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8882185	Identifier	minst		8879328	0					
ANR	8882186	Identifier	heap		8879328	1					
ANR	8882187	Argument	"""Invalid value for option -d%s, use -sNAME= to define string constants\\n"""		8879328	1					
ANR	8882188	PrimaryExpression	"""Invalid value for option -d%s, use -sNAME= to define string constants\\n"""		8879328	0					
ANR	8882189	Argument	arg		8879328	2					
ANR	8882190	Identifier	arg		8879328	0					
ANR	8882191	ReturnStatement	return gs_error_Fatal ;	848:36:33475:33496	8879328	1	True				
ANR	8882192	Identifier	gs_error_Fatal		8879328	0					
ANR	8882193	ElseStatement	else		8879328	0					
ANR	8882194	CompoundStatement		544:24:23481:23518	8879328	0					
ANR	8882195	IdentifierDeclStatement	int len = strlen ( eqp ) ;	853:24:33641:33662	8879328	0	True				
ANR	8882196	IdentifierDecl	len = strlen ( eqp )		8879328	0					
ANR	8882197	IdentifierDeclType	int		8879328	0					
ANR	8882198	Identifier	len		8879328	1					
ANR	8882199	AssignmentExpression	len = strlen ( eqp )		8879328	2		=			
ANR	8882200	Identifier	len		8879328	0					
ANR	8882201	CallExpression	strlen ( eqp )		8879328	1					
ANR	8882202	Callee	strlen		8879328	0					
ANR	8882203	Identifier	strlen		8879328	0					
ANR	8882204	ArgumentList	eqp		8879328	1					
ANR	8882205	Argument	eqp		8879328	0					
ANR	8882206	Identifier	eqp		8879328	0					
ANR	8882207	IdentifierDeclStatement	"byte * body = ialloc_string ( len , ""-s"" ) ;"	854:24:33688:33725	8879328	1	True				
ANR	8882208	IdentifierDecl	"* body = ialloc_string ( len , ""-s"" )"		8879328	0					
ANR	8882209	IdentifierDeclType	byte *		8879328	0					
ANR	8882210	Identifier	body		8879328	1					
ANR	8882211	AssignmentExpression	"* body = ialloc_string ( len , ""-s"" )"		8879328	2		=			
ANR	8882212	Identifier	body		8879328	0					
ANR	8882213	CallExpression	"ialloc_string ( len , ""-s"" )"		8879328	1					
ANR	8882214	Callee	ialloc_string		8879328	0					
ANR	8882215	Identifier	ialloc_string		8879328	0					
ANR	8882216	ArgumentList	len		8879328	1					
ANR	8882217	Argument	len		8879328	0					
ANR	8882218	Identifier	len		8879328	0					
ANR	8882219	Argument	"""-s"""		8879328	1					
ANR	8882220	PrimaryExpression	"""-s"""		8879328	0					
ANR	8882221	IfStatement	if ( body == NULL )		8879328	2					
ANR	8882222	Condition	body == NULL	856:28:33756:33767	8879328	0	True				
ANR	8882223	EqualityExpression	body == NULL		8879328	0		==			
ANR	8882224	Identifier	body		8879328	0					
ANR	8882225	Identifier	NULL		8879328	1					
ANR	8882226	CompoundStatement		546:42:23563:23563	8879328	1					
ANR	8882227	ExpressionStatement	"lprintf ( ""Out of memory!\\n"" )"	857:28:33800:33827	8879328	0	True				
ANR	8882228	CallExpression	"lprintf ( ""Out of memory!\\n"" )"		8879328	0					
ANR	8882229	Callee	lprintf		8879328	0					
ANR	8882230	Identifier	lprintf		8879328	0					
ANR	8882231	ArgumentList	"""Out of memory!\\n"""		8879328	1					
ANR	8882232	Argument	"""Out of memory!\\n"""		8879328	0					
ANR	8882233	PrimaryExpression	"""Out of memory!\\n"""		8879328	0					
ANR	8882234	ReturnStatement	return gs_error_Fatal ;	858:28:33857:33878	8879328	1	True				
ANR	8882235	Identifier	gs_error_Fatal		8879328	0					
ANR	8882236	ExpressionStatement	"memcpy ( body , eqp , len )"	860:24:33930:33952	8879328	3	True				
ANR	8882237	CallExpression	"memcpy ( body , eqp , len )"		8879328	0					
ANR	8882238	Callee	memcpy		8879328	0					
ANR	8882239	Identifier	memcpy		8879328	0					
ANR	8882240	ArgumentList	body		8879328	1					
ANR	8882241	Argument	body		8879328	0					
ANR	8882242	Identifier	body		8879328	0					
ANR	8882243	Argument	eqp		8879328	1					
ANR	8882244	Identifier	eqp		8879328	0					
ANR	8882245	Argument	len		8879328	2					
ANR	8882246	Identifier	len		8879328	0					
ANR	8882247	ExpressionStatement	"make_const_string ( & value , a_readonly | avm_system , len , body )"	861:24:33978:34039	8879328	4	True				
ANR	8882248	CallExpression	"make_const_string ( & value , a_readonly | avm_system , len , body )"		8879328	0					
ANR	8882249	Callee	make_const_string		8879328	0					
ANR	8882250	Identifier	make_const_string		8879328	0					
ANR	8882251	ArgumentList	& value		8879328	1					
ANR	8882252	Argument	& value		8879328	0					
ANR	8882253	UnaryOperationExpression	& value		8879328	0					
ANR	8882254	UnaryOperator	&		8879328	0					
ANR	8882255	Identifier	value		8879328	1					
ANR	8882256	Argument	a_readonly | avm_system		8879328	1					
ANR	8882257	InclusiveOrExpression	a_readonly | avm_system		8879328	0		|			
ANR	8882258	Identifier	a_readonly		8879328	0					
ANR	8882259	Identifier	avm_system		8879328	1					
ANR	8882260	Argument	len		8879328	2					
ANR	8882261	Identifier	len		8879328	0					
ANR	8882262	Argument	body		8879328	3					
ANR	8882263	Identifier	body		8879328	0					
ANR	8882264	IfStatement	"if ( ( code = try_stdout_redirect ( minst , adef , eqp ) ) < 0 )"		8879328	5					
ANR	8882265	Condition	"( code = try_stdout_redirect ( minst , adef , eqp ) ) < 0"	862:28:34069:34118	8879328	0	True				
ANR	8882266	RelationalExpression	"( code = try_stdout_redirect ( minst , adef , eqp ) ) < 0"		8879328	0		<			
ANR	8882267	AssignmentExpression	"code = try_stdout_redirect ( minst , adef , eqp )"		8879328	0		=			
ANR	8882268	Identifier	code		8879328	0					
ANR	8882269	CallExpression	"try_stdout_redirect ( minst , adef , eqp )"		8879328	1					
ANR	8882270	Callee	try_stdout_redirect		8879328	0					
ANR	8882271	Identifier	try_stdout_redirect		8879328	0					
ANR	8882272	ArgumentList	minst		8879328	1					
ANR	8882273	Argument	minst		8879328	0					
ANR	8882274	Identifier	minst		8879328	0					
ANR	8882275	Argument	adef		8879328	1					
ANR	8882276	Identifier	adef		8879328	0					
ANR	8882277	Argument	eqp		8879328	2					
ANR	8882278	Identifier	eqp		8879328	0					
ANR	8882279	PrimaryExpression	0		8879328	1					
ANR	8882280	ReturnStatement	return code ;	863:28:34149:34160	8879328	1	True				
ANR	8882281	Identifier	code		8879328	0					
ANR	8882282	ExpressionStatement	"ialloc_set_space ( idmemory , space )"	865:20:34204:34237	8879328	6	True				
ANR	8882283	CallExpression	"ialloc_set_space ( idmemory , space )"		8879328	0					
ANR	8882284	Callee	ialloc_set_space		8879328	0					
ANR	8882285	Identifier	ialloc_set_space		8879328	0					
ANR	8882286	ArgumentList	idmemory		8879328	1					
ANR	8882287	Argument	idmemory		8879328	0					
ANR	8882288	Identifier	idmemory		8879328	0					
ANR	8882289	Argument	space		8879328	1					
ANR	8882290	Identifier	space		8879328	0					
ANR	8882291	ExpressionStatement	"initial_enter_name ( adef , & value )"	868:16:34325:34357	8879328	10	True				
ANR	8882292	CallExpression	"initial_enter_name ( adef , & value )"		8879328	0					
ANR	8882293	Callee	initial_enter_name		8879328	0					
ANR	8882294	Identifier	initial_enter_name		8879328	0					
ANR	8882295	ArgumentList	adef		8879328	1					
ANR	8882296	Argument	adef		8879328	0					
ANR	8882297	Identifier	adef		8879328	0					
ANR	8882298	Argument	& value		8879328	1					
ANR	8882299	UnaryOperationExpression	& value		8879328	0					
ANR	8882300	UnaryOperator	&		8879328	0					
ANR	8882301	Identifier	value		8879328	1					
ANR	8882302	BreakStatement	break ;	869:16:34375:34380	8879328	11	True				
ANR	8882303	Label	case 'u' :	871:8:34404:34412	8879328	76	True				
ANR	8882304	IfStatement	if ( ! * arg )		8879328	77					
ANR	8882305	Condition	! * arg	872:16:34464:34468	8879328	0	True				
ANR	8882306	UnaryOperationExpression	! * arg		8879328	0					
ANR	8882307	UnaryOperator	!		8879328	0					
ANR	8882308	UnaryOperationExpression	* arg		8879328	1					
ANR	8882309	UnaryOperator	*		8879328	0					
ANR	8882310	Identifier	arg		8879328	1					
ANR	8882311	CompoundStatement		562:23:24264:24264	8879328	1					
ANR	8882312	ExpressionStatement	"puts ( minst -> heap , ""-u requires a name to undefine."" )"	873:16:34489:34541	8879328	0	True				
ANR	8882313	CallExpression	"puts ( minst -> heap , ""-u requires a name to undefine."" )"		8879328	0					
ANR	8882314	Callee	puts		8879328	0					
ANR	8882315	Identifier	puts		8879328	0					
ANR	8882316	ArgumentList	minst -> heap		8879328	1					
ANR	8882317	Argument	minst -> heap		8879328	0					
ANR	8882318	PtrMemberAccess	minst -> heap		8879328	0					
ANR	8882319	Identifier	minst		8879328	0					
ANR	8882320	Identifier	heap		8879328	1					
ANR	8882321	Argument	"""-u requires a name to undefine."""		8879328	1					
ANR	8882322	PrimaryExpression	"""-u requires a name to undefine."""		8879328	0					
ANR	8882323	ReturnStatement	return gs_error_Fatal ;	874:16:34559:34580	8879328	1	True				
ANR	8882324	Identifier	gs_error_Fatal		8879328	0					
ANR	8882325	IfStatement	if ( ( code = gs_main_init1 ( minst ) ) < 0 )		8879328	78					
ANR	8882326	Condition	( code = gs_main_init1 ( minst ) ) < 0	876:16:34612:34644	8879328	0	True				
ANR	8882327	RelationalExpression	( code = gs_main_init1 ( minst ) ) < 0		8879328	0		<			
ANR	8882328	AssignmentExpression	code = gs_main_init1 ( minst )		8879328	0		=			
ANR	8882329	Identifier	code		8879328	0					
ANR	8882330	CallExpression	gs_main_init1 ( minst )		8879328	1					
ANR	8882331	Callee	gs_main_init1		8879328	0					
ANR	8882332	Identifier	gs_main_init1		8879328	0					
ANR	8882333	ArgumentList	minst		8879328	1					
ANR	8882334	Argument	minst		8879328	0					
ANR	8882335	Identifier	minst		8879328	0					
ANR	8882336	PrimaryExpression	0		8879328	1					
ANR	8882337	ReturnStatement	return code ;	877:16:34663:34674	8879328	1	True				
ANR	8882338	Identifier	code		8879328	0					
ANR	8882339	ExpressionStatement	"i_initial_remove_name ( minst -> i_ctx_p , arg )"	878:12:34688:34730	8879328	79	True				
ANR	8882340	CallExpression	"i_initial_remove_name ( minst -> i_ctx_p , arg )"		8879328	0					
ANR	8882341	Callee	i_initial_remove_name		8879328	0					
ANR	8882342	Identifier	i_initial_remove_name		8879328	0					
ANR	8882343	ArgumentList	minst -> i_ctx_p		8879328	1					
ANR	8882344	Argument	minst -> i_ctx_p		8879328	0					
ANR	8882345	PtrMemberAccess	minst -> i_ctx_p		8879328	0					
ANR	8882346	Identifier	minst		8879328	0					
ANR	8882347	Identifier	i_ctx_p		8879328	1					
ANR	8882348	Argument	arg		8879328	1					
ANR	8882349	Identifier	arg		8879328	0					
ANR	8882350	BreakStatement	break ;	879:12:34744:34749	8879328	80	True				
ANR	8882351	Label	case 'v' :	880:8:34759:34767	8879328	81	True				
ANR	8882352	ExpressionStatement	print_revision ( minst )	881:12:34816:34837	8879328	82	True				
ANR	8882353	CallExpression	print_revision ( minst )		8879328	0					
ANR	8882354	Callee	print_revision		8879328	0					
ANR	8882355	Identifier	print_revision		8879328	0					
ANR	8882356	ArgumentList	minst		8879328	1					
ANR	8882357	Argument	minst		8879328	0					
ANR	8882358	Identifier	minst		8879328	0					
ANR	8882359	ReturnStatement	return gs_error_Info ;	882:12:34851:34871	8879328	83	True				
ANR	8882360	Identifier	gs_error_Info		8879328	0					
ANR	8882361	Label	case 'X' :	888:8:35070:35078	8879328	84	True				
ANR	8882362	ExpressionStatement	code = gs_main_init2 ( minst )	889:12:35092:35119	8879328	85	True				
ANR	8882363	AssignmentExpression	code = gs_main_init2 ( minst )		8879328	0		=			
ANR	8882364	Identifier	code		8879328	0					
ANR	8882365	CallExpression	gs_main_init2 ( minst )		8879328	1					
ANR	8882366	Callee	gs_main_init2		8879328	0					
ANR	8882367	Identifier	gs_main_init2		8879328	0					
ANR	8882368	ArgumentList	minst		8879328	1					
ANR	8882369	Argument	minst		8879328	0					
ANR	8882370	Identifier	minst		8879328	0					
ANR	8882371	IfStatement	if ( code < 0 )		8879328	86					
ANR	8882372	Condition	code < 0	890:16:35137:35144	8879328	0	True				
ANR	8882373	RelationalExpression	code < 0		8879328	0		<			
ANR	8882374	Identifier	code		8879328	0					
ANR	8882375	PrimaryExpression	0		8879328	1					
ANR	8882376	ReturnStatement	return code ;	891:16:35163:35174	8879328	1	True				
ANR	8882377	Identifier	code		8879328	0					
ANR	8882378	CompoundStatement		584:16:25047:25054	8879328	87					
ANR	8882379	IdentifierDeclStatement	int xec ;	893:16:35206:35213	8879328	0	True				
ANR	8882380	IdentifierDecl	xec		8879328	0					
ANR	8882381	IdentifierDeclType	int		8879328	0					
ANR	8882382	Identifier	xec		8879328	1					
ANR	8882383	IdentifierDeclStatement	ref xeo ;	894:16:35254:35261	8879328	1	True				
ANR	8882384	IdentifierDecl	xeo		8879328	0					
ANR	8882385	IdentifierDeclType	ref		8879328	0					
ANR	8882386	Identifier	xeo		8879328	1					
ANR	8882387	Statement	define	896:1:35291:35296	8879328	2	True				
ANR	8882388	Statement	start_x	896:8:35298:35304	8879328	3	True				
ANR	8882389	Statement	(	896:15:35305:35305	8879328	4	True				
ANR	8882390	Statement	)	896:16:35306:35306	8879328	5	True				
ANR	8882391	Statement	gs_main_run_string_begin	897:2:35311:35334	8879328	6	True				
ANR	8882392	Statement	(	897:26:35335:35335	8879328	7	True				
ANR	8882393	Statement	minst	897:27:35336:35340	8879328	8	True				
ANR	8882394	Statement	","	897:32:35341:35341	8879328	9	True				
ANR	8882395	Statement	1	897:34:35343:35343	8879328	10	True				
ANR	8882396	Statement	","	897:35:35344:35344	8879328	11	True				
ANR	8882397	Statement	&	897:37:35346:35346	8879328	12	True				
ANR	8882398	Statement	xec	897:38:35347:35349	8879328	13	True				
ANR	8882399	Statement	","	897:41:35350:35350	8879328	14	True				
ANR	8882400	Statement	&	897:43:35352:35352	8879328	15	True				
ANR	8882401	Statement	xeo	897:44:35353:35355	8879328	16	True				
ANR	8882402	Statement	)	897:47:35356:35356	8879328	17	True				
ANR	8882403	Statement	define	898:1:35359:35364	8879328	18	True				
ANR	8882404	Statement	run_x	898:8:35366:35370	8879328	19	True				
ANR	8882405	Statement	(	898:13:35371:35371	8879328	20	True				
ANR	8882406	Statement	str	898:14:35372:35374	8879328	21	True				
ANR	8882407	Statement	)	898:17:35375:35375	8879328	22	True				
ANR	8882408	Statement	gs_main_run_string_continue	899:2:35380:35406	8879328	23	True				
ANR	8882409	Statement	(	899:29:35407:35407	8879328	24	True				
ANR	8882410	Statement	minst	899:30:35408:35412	8879328	25	True				
ANR	8882411	Statement	","	899:35:35413:35413	8879328	26	True				
ANR	8882412	Statement	str	899:37:35415:35417	8879328	27	True				
ANR	8882413	Statement	","	899:40:35418:35418	8879328	28	True				
ANR	8882414	Statement	strlen	899:42:35420:35425	8879328	29	True				
ANR	8882415	Statement	(	899:48:35426:35426	8879328	30	True				
ANR	8882416	Statement	str	899:49:35427:35429	8879328	31	True				
ANR	8882417	Statement	)	899:52:35430:35430	8879328	32	True				
ANR	8882418	Statement	","	899:53:35431:35431	8879328	33	True				
ANR	8882419	Statement	1	899:55:35433:35433	8879328	34	True				
ANR	8882420	Statement	","	899:56:35434:35434	8879328	35	True				
ANR	8882421	Statement	&	899:58:35436:35436	8879328	36	True				
ANR	8882422	Statement	xec	899:59:35437:35439	8879328	37	True				
ANR	8882423	Statement	","	899:62:35440:35440	8879328	38	True				
ANR	8882424	Statement	&	899:64:35442:35442	8879328	39	True				
ANR	8882425	Statement	xeo	899:65:35443:35445	8879328	40	True				
ANR	8882426	Statement	)	899:68:35446:35446	8879328	41	True				
ANR	8882427	Statement	define	900:1:35449:35454	8879328	42	True				
ANR	8882428	Statement	stop_x	900:8:35456:35461	8879328	43	True				
ANR	8882429	Statement	(	900:14:35462:35462	8879328	44	True				
ANR	8882430	Statement	)	900:15:35463:35463	8879328	45	True				
ANR	8882431	Statement	gs_main_run_string_end	901:2:35468:35489	8879328	46	True				
ANR	8882432	Statement	(	901:24:35490:35490	8879328	47	True				
ANR	8882433	Statement	minst	901:25:35491:35495	8879328	48	True				
ANR	8882434	Statement	","	901:30:35496:35496	8879328	49	True				
ANR	8882435	Statement	1	901:32:35498:35498	8879328	50	True				
ANR	8882436	Statement	","	901:33:35499:35499	8879328	51	True				
ANR	8882437	Statement	&	901:35:35501:35501	8879328	52	True				
ANR	8882438	Statement	xec	901:36:35502:35504	8879328	53	True				
ANR	8882439	Statement	","	901:39:35505:35505	8879328	54	True				
ANR	8882440	Statement	&	901:41:35507:35507	8879328	55	True				
ANR	8882441	Statement	xeo	901:42:35508:35510	8879328	56	True				
ANR	8882442	Statement	)	901:45:35511:35511	8879328	57	True				
ANR	8882443	ExpressionStatement	start_x ( )	902:16:35529:35538	8879328	58	True				
ANR	8882444	CallExpression	start_x ( )		8879328	0					
ANR	8882445	Callee	start_x		8879328	0					
ANR	8882446	Identifier	start_x		8879328	0					
ANR	8882447	ArgumentList			8879328	1					
ANR	8882448	ExpressionStatement	"run_x ( ""\\216\\003abc"" )"	903:16:35556:35576	8879328	59	True				
ANR	8882449	CallExpression	"run_x ( ""\\216\\003abc"" )"		8879328	0					
ANR	8882450	Callee	run_x		8879328	0					
ANR	8882451	Identifier	run_x		8879328	0					
ANR	8882452	ArgumentList	"""\\216\\003abc"""		8879328	1					
ANR	8882453	Argument	"""\\216\\003abc"""		8879328	0					
ANR	8882454	PrimaryExpression	"""\\216\\003abc"""		8879328	0					
ANR	8882455	ExpressionStatement	"run_x ( ""== flush\\n"" )"	904:16:35594:35613	8879328	60	True				
ANR	8882456	CallExpression	"run_x ( ""== flush\\n"" )"		8879328	0					
ANR	8882457	Callee	run_x		8879328	0					
ANR	8882458	Identifier	run_x		8879328	0					
ANR	8882459	ArgumentList	"""== flush\\n"""		8879328	1					
ANR	8882460	Argument	"""== flush\\n"""		8879328	0					
ANR	8882461	PrimaryExpression	"""== flush\\n"""		8879328	0					
ANR	8882462	ExpressionStatement	stop_x ( )	905:16:35631:35639	8879328	61	True				
ANR	8882463	CallExpression	stop_x ( )		8879328	0					
ANR	8882464	Callee	stop_x		8879328	0					
ANR	8882465	Identifier	stop_x		8879328	0					
ANR	8882466	ArgumentList			8879328	1					
ANR	8882467	ReturnStatement	return gs_error_Quit ;	907:12:35667:35687	8879328	88	True				
ANR	8882468	Identifier	gs_error_Quit		8879328	0					
ANR	8882469	Label	case 'Z' :	909:8:35709:35717	8879328	89	True				
ANR	8882470	ExpressionStatement	"set_debug_flags ( arg , gs_debug )"	910:12:35731:35761	8879328	90	True				
ANR	8882471	CallExpression	"set_debug_flags ( arg , gs_debug )"		8879328	0					
ANR	8882472	Callee	set_debug_flags		8879328	0					
ANR	8882473	Identifier	set_debug_flags		8879328	0					
ANR	8882474	ArgumentList	arg		8879328	1					
ANR	8882475	Argument	arg		8879328	0					
ANR	8882476	Identifier	arg		8879328	0					
ANR	8882477	Argument	gs_debug		8879328	1					
ANR	8882478	Identifier	gs_debug		8879328	0					
ANR	8882479	BreakStatement	break ;	911:12:35775:35780	8879328	91	True				
ANR	8882480	ReturnStatement	return 0 ;	913:4:35792:35800	8879328	25	True				
ANR	8882481	PrimaryExpression	0		8879328	0					
ANR	8882482	ReturnType	static int		8879328	1					
ANR	8882483	Identifier	swproc		8879328	2					
ANR	8882484	ParameterList	"gs_main_instance * minst , const char * arg , arg_list * pal"		8879328	3					
ANR	8882485	Parameter	gs_main_instance * minst	310:7:10147:10170	8879328	0	True				
ANR	8882486	ParameterType	gs_main_instance *		8879328	0					
ANR	8882487	Identifier	minst		8879328	1					
ANR	8882488	Parameter	const char * arg	310:33:10173:10187	8879328	1	True				
ANR	8882489	ParameterType	const char *		8879328	0					
ANR	8882490	Identifier	arg		8879328	1					
ANR	8882491	Parameter	arg_list * pal	310:50:10190:10203	8879328	2	True				
ANR	8882492	ParameterType	arg_list *		8879328	0					
ANR	8882493	Identifier	pal		8879328	1					
ANR	8882494	CFGEntryNode	ENTRY		8879328		True				
ANR	8882495	CFGExitNode	EXIT		8879328		True				
ANR	8882496	Symbol	minst		8879328						
ANR	8882497	Symbol	gs_malloc_wrapped_contents		8879328						
ANR	8882498	Symbol	try_stdout_redirect		8879328						
ANR	8882499	Symbol	minst -> heap -> gs_lib_ctx		8879328						
ANR	8882500	Symbol	dev_spec_op		8879328						
ANR	8882501	Symbol	gs_alloc_debug		8879328						
ANR	8882502	Symbol	argproc		8879328						
ANR	8882503	Symbol	strchr		8879328						
ANR	8882504	Symbol	* eqp ++		8879328						
ANR	8882505	Symbol	& height		8879328						
ANR	8882506	Symbol	gs_error_Info		8879328						
ANR	8882507	Symbol	gs_log_errors		8879328						
ANR	8882508	Symbol	& path		8879328						
ANR	8882509	Symbol	xres		8879328						
ANR	8882510	Symbol	strncmp		8879328						
ANR	8882511	Symbol	path		8879328						
ANR	8882512	Symbol	* eqp		8879328						
ANR	8882513	Symbol	psarg		8879328						
ANR	8882514	Symbol	len		8879328						
ANR	8882515	Symbol	t_name		8879328						
ANR	8882516	Symbol	xec		8879328						
ANR	8882517	Symbol	state		8879328						
ANR	8882518	Symbol	isdigit		8879328						
ANR	8882519	Symbol	gxdso_supports_saved_pages		8879328						
ANR	8882520	Symbol	height		8879328						
ANR	8882521	Symbol	gs_scan_token		8879328						
ANR	8882522	Symbol	xeo		8879328						
ANR	8882523	Symbol	adef		8879328						
ANR	8882524	Symbol	nsize		8879328						
ANR	8882525	Symbol	* minst		8879328						
ANR	8882526	Symbol	pal -> expand_ats		8879328						
ANR	8882527	Symbol	str		8879328						
ANR	8882528	Symbol	astream		8879328						
ANR	8882529	Symbol	& xres		8879328						
ANR	8882530	Symbol	* rawheap		8879328						
ANR	8882531	Symbol	* * minst		8879328						
ANR	8882532	Symbol	arg_next		8879328						
ANR	8882533	Symbol	sscanf		8879328						
ANR	8882534	Symbol	i_ctx_p		8879328						
ANR	8882535	Symbol	max_long		8879328						
ANR	8882536	Symbol	* arg		8879328						
ANR	8882537	Symbol	minst -> init_done		8879328						
ANR	8882538	Symbol	& nsref		8879328						
ANR	8882539	Symbol	swproc		8879328						
ANR	8882540	Symbol	run_string		8879328						
ANR	8882541	Symbol	eqp		8879328						
ANR	8882542	Symbol	& state		8879328						
ANR	8882543	Symbol	minst -> heap		8879328						
ANR	8882544	Symbol	gs_debug_flags_parse		8879328						
ANR	8882545	Symbol	minst -> i_ctx_p -> pgs		8879328						
ANR	8882546	Symbol	arg		8879328						
ANR	8882547	Symbol	gs_erasepage		8879328						
ANR	8882548	Symbol	sw		8879328						
ANR	8882549	Symbol	gx_saved_pages_param_process		8879328						
ANR	8882550	Symbol	runInit		8879328						
ANR	8882551	Symbol	minst -> run_start		8879328						
ANR	8882552	Symbol	i		8879328						
ANR	8882553	Symbol	minst -> heap -> gs_lib_ctx -> stdin_is_interactive		8879328						
ANR	8882554	Symbol	p		8879328						
ANR	8882555	Symbol	* strlen		8879328						
ANR	8882556	Symbol	& adef		8879328						
ANR	8882557	Symbol	runFlush		8879328						
ANR	8882558	Symbol	width		8879328						
ANR	8882559	Symbol	& astream		8879328						
ANR	8882560	Symbol	* pdev		8879328						
ANR	8882561	Symbol	& arg		8879328						
ANR	8882562	Symbol	isd		8879328						
ANR	8882563	Symbol	minst -> saved_pages_initial_arg		8879328						
ANR	8882564	Symbol	& child_dev_data		8879328						
ANR	8882565	Symbol	& value		8879328						
ANR	8882566	Symbol	num		8879328						
ANR	8882567	Symbol	gs_currentdevice		8879328						
ANR	8882568	Symbol	& msize		8879328						
ANR	8882569	Symbol	& bsize		8879328						
ANR	8882570	Symbol	suffix		8879328						
ANR	8882571	Symbol	body		8879328						
ANR	8882572	Symbol	minst -> i_ctx_p		8879328						
ANR	8882573	Symbol	minst -> run_buffer_size		8879328						
ANR	8882574	Symbol	* minst -> i_ctx_p		8879328						
ANR	8882575	Symbol	space		8879328						
ANR	8882576	Symbol	pdev		8879328						
ANR	8882577	Symbol	strlen		8879328						
ANR	8882578	Symbol	minst -> name_table_size		8879328						
ANR	8882579	Symbol	& yres		8879328						
ANR	8882580	Symbol	gs_debug		8879328						
ANR	8882581	Symbol	pal		8879328						
ANR	8882582	Symbol	* minst -> heap		8879328						
ANR	8882583	Symbol	ret		8879328						
ANR	8882584	Symbol	gs_error_Fatal		8879328						
ANR	8882585	Symbol	gs_error_Quit		8879328						
ANR	8882586	Symbol	strcmp		8879328						
ANR	8882587	Symbol	ats		8879328						
ANR	8882588	Symbol	NULL		8879328						
ANR	8882589	Symbol	child_dev_data . target		8879328						
ANR	8882590	Symbol	child_dev_data		8879328						
ANR	8882591	Symbol	& num		8879328						
ANR	8882592	Symbol	string_is		8879328						
ANR	8882593	Symbol	vtrue		8879328						
ANR	8882594	Symbol	true		8879328						
ANR	8882595	Symbol	gs_main_init1		8879328						
ANR	8882596	Symbol	gs_main_init2		8879328						
ANR	8882597	Symbol	arg_copy		8879328						
ANR	8882598	Symbol	a_executable		8879328						
ANR	8882599	Symbol	avm_system		8879328						
ANR	8882600	Symbol	* * minst -> heap		8879328						
ANR	8882601	Symbol	yres		8879328						
ANR	8882602	Symbol	code		8879328						
ANR	8882603	Symbol	* pal		8879328						
ANR	8882604	Symbol	minst -> saved_pages_test_mode		8879328						
ANR	8882605	Symbol	runarg		8879328						
ANR	8882606	Symbol	& width		8879328						
ANR	8882607	Symbol	ialloc_string		8879328						
ANR	8882608	Symbol	child_dev_data . n		8879328						
ANR	8882609	Symbol	idmemory		8879328						
ANR	8882610	Symbol	minst -> memory_clump_size		8879328						
ANR	8882611	Symbol	dev_proc		8879328						
ANR	8882612	Symbol	pdev -> dname		8879328						
ANR	8882613	Symbol	msize		8879328						
ANR	8882614	Symbol	value		8879328						
ANR	8882615	Symbol	& psarg		8879328						
ANR	8882616	Symbol	rawheap		8879328						
ANR	8882617	Symbol	gxdso_device_child		8879328						
ANR	8882618	Symbol	r_has_type_attrs		8879328						
ANR	8882619	Symbol	false		8879328						
ANR	8882620	Symbol	nsref		8879328						
ANR	8882621	Symbol	* minst -> heap -> gs_lib_ctx		8879328						
ANR	8882622	Symbol	MAX_BUFFERED_SIZE		8879328						
ANR	8882623	Symbol	icurrent_space		8879328						
ANR	8882624	Symbol	a_readonly		8879328						
ANR	8882625	Symbol	gs_error_VMerror		8879328						
ANR	8882626	Symbol	* * * minst		8879328						
ANR	8882627	Symbol	rawheap -> limit		8879328						
ANR	8882628	Symbol	& vtrue		8879328						
ANR	8882629	Symbol	bsize		8879328						
ANR	8882630	Symbol	& nsize		8879328						
ANR	8882631	Symbol	minst -> search_here_first		8879328						
ANR	8882632	Function	esc_strlen	920:0:36049:36122							
ANR	8882633	FunctionDef	esc_strlen (const char * str)		8882632	0					
ANR	8882634	CompoundStatement		922:0:36088:36122	8882632	0					
ANR	8882635	ReturnStatement	return strlen ( str ) * 2 + 2 ;	923:4:36094:36120	8882632	0	True				
ANR	8882636	AdditiveExpression	strlen ( str ) * 2 + 2		8882632	0		+			
ANR	8882637	MultiplicativeExpression	strlen ( str ) * 2		8882632	0		*			
ANR	8882638	CallExpression	strlen ( str )		8882632	0					
ANR	8882639	Callee	strlen		8882632	0					
ANR	8882640	Identifier	strlen		8882632	0					
ANR	8882641	ArgumentList	str		8882632	1					
ANR	8882642	Argument	str		8882632	0					
ANR	8882643	Identifier	str		8882632	0					
ANR	8882644	PrimaryExpression	2		8882632	1					
ANR	8882645	PrimaryExpression	2		8882632	1					
ANR	8882646	ReturnType	static int		8882632	1					
ANR	8882647	Identifier	esc_strlen		8882632	2					
ANR	8882648	ParameterList	const char * str		8882632	3					
ANR	8882649	Parameter	const char * str	921:11:36071:36085	8882632	0	True				
ANR	8882650	ParameterType	const char *		8882632	0					
ANR	8882651	Identifier	str		8882632	1					
ANR	8882652	CFGEntryNode	ENTRY		8882632		True				
ANR	8882653	CFGExitNode	EXIT		8882632		True				
ANR	8882654	Symbol	str		8882632						
ANR	8882655	Symbol	strlen		8882632						
ANR	8882656	Function	esc_strcat	925:0:36124:36454							
ANR	8882657	FunctionDef	"esc_strcat (char * dest , const char * src)"		8882656	0					
ANR	8882658	CompoundStatement		927:0:36176:36454	8882656	0					
ANR	8882659	IdentifierDeclStatement	char * d = dest + strlen ( dest ) ;	928:4:36182:36211	8882656	0	True				
ANR	8882660	IdentifierDecl	* d = dest + strlen ( dest )		8882656	0					
ANR	8882661	IdentifierDeclType	char *		8882656	0					
ANR	8882662	Identifier	d		8882656	1					
ANR	8882663	AssignmentExpression	* d = dest + strlen ( dest )		8882656	2		=			
ANR	8882664	Identifier	d		8882656	0					
ANR	8882665	AdditiveExpression	dest + strlen ( dest )		8882656	1		+			
ANR	8882666	Identifier	dest		8882656	0					
ANR	8882667	CallExpression	strlen ( dest )		8882656	1					
ANR	8882668	Callee	strlen		8882656	0					
ANR	8882669	Identifier	strlen		8882656	0					
ANR	8882670	ArgumentList	dest		8882656	1					
ANR	8882671	Argument	dest		8882656	0					
ANR	8882672	Identifier	dest		8882656	0					
ANR	8882673	IdentifierDeclStatement	const char * p ;	929:4:36217:36230	8882656	1	True				
ANR	8882674	IdentifierDecl	* p		8882656	0					
ANR	8882675	IdentifierDeclType	const char *		8882656	0					
ANR	8882676	Identifier	p		8882656	1					
ANR	8882677	Statement	static	930:4:36236:36241	8882656	2	True				
ANR	8882678	Statement	const	930:11:36243:36247	8882656	3	True				
ANR	8882679	Statement	char	930:17:36249:36252	8882656	4	True				
ANR	8882680	Statement	*	930:22:36254:36254	8882656	5	True				
ANR	8882681	Statement	const	930:23:36255:36259	8882656	6	True				
ANR	8882682	ExpressionStatement	"hex = ""0123456789abcdef"""	930:29:36261:36285	8882656	7	True				
ANR	8882683	AssignmentExpression	"hex = ""0123456789abcdef"""		8882656	0		=			
ANR	8882684	Identifier	hex		8882656	0					
ANR	8882685	PrimaryExpression	"""0123456789abcdef"""		8882656	1					
ANR	8882686	ExpressionStatement	* d ++ = '<'	932:4:36292:36302	8882656	8	True				
ANR	8882687	AssignmentExpression	* d ++ = '<'		8882656	0		=			
ANR	8882688	UnaryOperationExpression	* d ++		8882656	0					
ANR	8882689	UnaryOperator	*		8882656	0					
ANR	8882690	PostIncDecOperationExpression	d ++		8882656	1					
ANR	8882691	Identifier	d		8882656	0					
ANR	8882692	IncDec	++		8882656	1					
ANR	8882693	PrimaryExpression	'<'		8882656	1					
ANR	8882694	ForStatement	for ( p = src ; * p ; p ++ )		8882656	9					
ANR	8882695	ForInit	p = src ;	933:9:36313:36320	8882656	0	True				
ANR	8882696	AssignmentExpression	p = src		8882656	0		=			
ANR	8882697	Identifier	p		8882656	0					
ANR	8882698	Identifier	src		8882656	1					
ANR	8882699	Condition	* p	933:18:36322:36323	8882656	1	True				
ANR	8882700	UnaryOperationExpression	* p		8882656	0					
ANR	8882701	UnaryOperator	*		8882656	0					
ANR	8882702	Identifier	p		8882656	1					
ANR	8882703	PostIncDecOperationExpression	p ++	933:22:36326:36328	8882656	2	True				
ANR	8882704	Identifier	p		8882656	0					
ANR	8882705	IncDec	++		8882656	1					
ANR	8882706	CompoundStatement		8:8:164:183	8882656	3					
ANR	8882707	IdentifierDeclStatement	byte c = ( byte ) * p ;	934:8:36341:36360	8882656	0	True				
ANR	8882708	IdentifierDecl	c = ( byte ) * p		8882656	0					
ANR	8882709	IdentifierDeclType	byte		8882656	0					
ANR	8882710	Identifier	c		8882656	1					
ANR	8882711	AssignmentExpression	c = ( byte ) * p		8882656	2		=			
ANR	8882712	Identifier	c		8882656	0					
ANR	8882713	CastExpression	( byte ) * p		8882656	1					
ANR	8882714	CastTarget	byte		8882656	0					
ANR	8882715	UnaryOperationExpression	* p		8882656	1					
ANR	8882716	UnaryOperator	*		8882656	0					
ANR	8882717	Identifier	p		8882656	1					
ANR	8882718	ExpressionStatement	* d ++ = hex [ c >> 4 ]	936:8:36371:36389	8882656	1	True				
ANR	8882719	AssignmentExpression	* d ++ = hex [ c >> 4 ]		8882656	0		=			
ANR	8882720	UnaryOperationExpression	* d ++		8882656	0					
ANR	8882721	UnaryOperator	*		8882656	0					
ANR	8882722	PostIncDecOperationExpression	d ++		8882656	1					
ANR	8882723	Identifier	d		8882656	0					
ANR	8882724	IncDec	++		8882656	1					
ANR	8882725	ArrayIndexing	hex [ c >> 4 ]		8882656	1					
ANR	8882726	Identifier	hex		8882656	0					
ANR	8882727	ShiftExpression	c >> 4		8882656	1		>>			
ANR	8882728	Identifier	c		8882656	0					
ANR	8882729	PrimaryExpression	4		8882656	1					
ANR	8882730	ExpressionStatement	* d ++ = hex [ c & 0xf ]	937:8:36399:36418	8882656	2	True				
ANR	8882731	AssignmentExpression	* d ++ = hex [ c & 0xf ]		8882656	0		=			
ANR	8882732	UnaryOperationExpression	* d ++		8882656	0					
ANR	8882733	UnaryOperator	*		8882656	0					
ANR	8882734	PostIncDecOperationExpression	d ++		8882656	1					
ANR	8882735	Identifier	d		8882656	0					
ANR	8882736	IncDec	++		8882656	1					
ANR	8882737	ArrayIndexing	hex [ c & 0xf ]		8882656	1					
ANR	8882738	Identifier	hex		8882656	0					
ANR	8882739	BitAndExpression	c & 0xf		8882656	1		&			
ANR	8882740	Identifier	c		8882656	0					
ANR	8882741	PrimaryExpression	0xf		8882656	1					
ANR	8882742	ExpressionStatement	* d ++ = '>'	939:4:36430:36440	8882656	10	True				
ANR	8882743	AssignmentExpression	* d ++ = '>'		8882656	0		=			
ANR	8882744	UnaryOperationExpression	* d ++		8882656	0					
ANR	8882745	UnaryOperator	*		8882656	0					
ANR	8882746	PostIncDecOperationExpression	d ++		8882656	1					
ANR	8882747	Identifier	d		8882656	0					
ANR	8882748	IncDec	++		8882656	1					
ANR	8882749	PrimaryExpression	'>'		8882656	1					
ANR	8882750	ExpressionStatement	* d = 0	940:4:36446:36452	8882656	11	True				
ANR	8882751	AssignmentExpression	* d = 0		8882656	0		=			
ANR	8882752	UnaryOperationExpression	* d		8882656	0					
ANR	8882753	UnaryOperator	*		8882656	0					
ANR	8882754	Identifier	d		8882656	1					
ANR	8882755	PrimaryExpression	0		8882656	1					
ANR	8882756	ReturnType	static void		8882656	1					
ANR	8882757	Identifier	esc_strcat		8882656	2					
ANR	8882758	ParameterList	"char * dest , const char * src"		8882656	3					
ANR	8882759	Parameter	char * dest	926:11:36147:36156	8882656	0	True				
ANR	8882760	ParameterType	char *		8882656	0					
ANR	8882761	Identifier	dest		8882656	1					
ANR	8882762	Parameter	const char * src	926:23:36159:36173	8882656	1	True				
ANR	8882763	ParameterType	const char *		8882656	0					
ANR	8882764	Identifier	src		8882656	1					
ANR	8882765	CFGEntryNode	ENTRY		8882656		True				
ANR	8882766	CFGExitNode	EXIT		8882656		True				
ANR	8882767	Symbol	p		8882656						
ANR	8882768	Symbol	strlen		8882656						
ANR	8882769	Symbol	c		8882656						
ANR	8882770	Symbol	d		8882656						
ANR	8882771	Symbol	src		8882656						
ANR	8882772	Symbol	hex		8882656						
ANR	8882773	Symbol	* p		8882656						
ANR	8882774	Symbol	* hex		8882656						
ANR	8882775	Symbol	dest		8882656						
ANR	8882776	Symbol	* c		8882656						
ANR	8882777	Symbol	* d ++		8882656						
ANR	8882778	Symbol	* d		8882656						
ANR	8882779	Function	argproc	944:0:36482:36920							
ANR	8882780	FunctionDef	"argproc (gs_main_instance * minst , const char * arg)"		8882779	0					
ANR	8882781	CompoundStatement		946:0:36544:36920	8882779	0					
ANR	8882782	IdentifierDeclStatement	int code = gs_main_init1 ( minst ) ;	947:4:36550:36581	8882779	0	True				
ANR	8882783	IdentifierDecl	code = gs_main_init1 ( minst )		8882779	0					
ANR	8882784	IdentifierDeclType	int		8882779	0					
ANR	8882785	Identifier	code		8882779	1					
ANR	8882786	AssignmentExpression	code = gs_main_init1 ( minst )		8882779	2		=			
ANR	8882787	Identifier	code		8882779	0					
ANR	8882788	CallExpression	gs_main_init1 ( minst )		8882779	1					
ANR	8882789	Callee	gs_main_init1		8882779	0					
ANR	8882790	Identifier	gs_main_init1		8882779	0					
ANR	8882791	ArgumentList	minst		8882779	1					
ANR	8882792	Argument	minst		8882779	0					
ANR	8882793	Identifier	minst		8882779	0					
ANR	8882794	IfStatement	if ( code < 0 )		8882779	1					
ANR	8882795	Condition	code < 0	949:8:36633:36640	8882779	0	True				
ANR	8882796	RelationalExpression	code < 0		8882779	0		<			
ANR	8882797	Identifier	code		8882779	0					
ANR	8882798	PrimaryExpression	0		8882779	1					
ANR	8882799	ReturnStatement	return code ;	950:8:36651:36662	8882779	1	True				
ANR	8882800	Identifier	code		8882779	0					
ANR	8882801	IfStatement	if ( minst -> run_buffer_size )		8882779	2					
ANR	8882802	Condition	minst -> run_buffer_size	951:8:36672:36693	8882779	0	True				
ANR	8882803	PtrMemberAccess	minst -> run_buffer_size		8882779	0					
ANR	8882804	Identifier	minst		8882779	0					
ANR	8882805	Identifier	run_buffer_size		8882779	1					
ANR	8882806	CompoundStatement		6:32:151:151	8882779	1					
ANR	8882807	ReturnStatement	"return run_buffered ( minst , arg ) ;"	953:8:36746:36777	8882779	0	True				
ANR	8882808	CallExpression	"run_buffered ( minst , arg )"		8882779	0					
ANR	8882809	Callee	run_buffered		8882779	0					
ANR	8882810	Identifier	run_buffered		8882779	0					
ANR	8882811	ArgumentList	minst		8882779	1					
ANR	8882812	Argument	minst		8882779	0					
ANR	8882813	Identifier	minst		8882779	0					
ANR	8882814	Argument	arg		8882779	1					
ANR	8882815	Identifier	arg		8882779	0					
ANR	8882816	ElseStatement	else		8882779	0					
ANR	8882817	CompoundStatement		9:11:245:245	8882779	0					
ANR	8882818	ReturnStatement	"return runarg ( minst , """" , arg , "".runfile"" , runInit | runFlush ) ;"	956:8:36851:36912	8882779	0	True				
ANR	8882819	CallExpression	"runarg ( minst , """" , arg , "".runfile"" , runInit | runFlush )"		8882779	0					
ANR	8882820	Callee	runarg		8882779	0					
ANR	8882821	Identifier	runarg		8882779	0					
ANR	8882822	ArgumentList	minst		8882779	1					
ANR	8882823	Argument	minst		8882779	0					
ANR	8882824	Identifier	minst		8882779	0					
ANR	8882825	Argument	""""""		8882779	1					
ANR	8882826	PrimaryExpression	""""""		8882779	0					
ANR	8882827	Argument	arg		8882779	2					
ANR	8882828	Identifier	arg		8882779	0					
ANR	8882829	Argument	""".runfile"""		8882779	3					
ANR	8882830	PrimaryExpression	""".runfile"""		8882779	0					
ANR	8882831	Argument	runInit | runFlush		8882779	4					
ANR	8882832	InclusiveOrExpression	runInit | runFlush		8882779	0		|			
ANR	8882833	Identifier	runInit		8882779	0					
ANR	8882834	Identifier	runFlush		8882779	1					
ANR	8882835	ReturnType	static int		8882779	1					
ANR	8882836	Identifier	argproc		8882779	2					
ANR	8882837	ParameterList	"gs_main_instance * minst , const char * arg"		8882779	3					
ANR	8882838	Parameter	gs_main_instance * minst	945:8:36501:36524	8882779	0	True				
ANR	8882839	ParameterType	gs_main_instance *		8882779	0					
ANR	8882840	Identifier	minst		8882779	1					
ANR	8882841	Parameter	const char * arg	945:34:36527:36541	8882779	1	True				
ANR	8882842	ParameterType	const char *		8882779	0					
ANR	8882843	Identifier	arg		8882779	1					
ANR	8882844	CFGEntryNode	ENTRY		8882779		True				
ANR	8882845	CFGExitNode	EXIT		8882779		True				
ANR	8882846	Symbol	minst		8882779						
ANR	8882847	Symbol	code		8882779						
ANR	8882848	Symbol	runInit		8882779						
ANR	8882849	Symbol	arg		8882779						
ANR	8882850	Symbol	runarg		8882779						
ANR	8882851	Symbol	gs_main_init1		8882779						
ANR	8882852	Symbol	runFlush		8882779						
ANR	8882853	Symbol	minst -> run_buffer_size		8882779						
ANR	8882854	Symbol	* minst		8882779						
ANR	8882855	Symbol	run_buffered		8882779						
ANR	8882856	Function	run_buffered	959:0:36922:38265							
ANR	8882857	FunctionDef	"run_buffered (gs_main_instance * minst , const char * arg)"		8882856	0					
ANR	8882858	CompoundStatement		961:0:36989:38265	8882856	0					
ANR	8882859	IdentifierDeclStatement	"FILE * in = gp_fopen ( arg , gp_fmode_rb ) ;"	962:4:36995:37032	8882856	0	True				
ANR	8882860	IdentifierDecl	"* in = gp_fopen ( arg , gp_fmode_rb )"		8882856	0					
ANR	8882861	IdentifierDeclType	FILE *		8882856	0					
ANR	8882862	Identifier	in		8882856	1					
ANR	8882863	AssignmentExpression	"* in = gp_fopen ( arg , gp_fmode_rb )"		8882856	2		=			
ANR	8882864	Identifier	in		8882856	0					
ANR	8882865	CallExpression	"gp_fopen ( arg , gp_fmode_rb )"		8882856	1					
ANR	8882866	Callee	gp_fopen		8882856	0					
ANR	8882867	Identifier	gp_fopen		8882856	0					
ANR	8882868	ArgumentList	arg		8882856	1					
ANR	8882869	Argument	arg		8882856	0					
ANR	8882870	Identifier	arg		8882856	0					
ANR	8882871	Argument	gp_fmode_rb		8882856	1					
ANR	8882872	Identifier	gp_fmode_rb		8882856	0					
ANR	8882873	IdentifierDeclStatement	int exit_code ;	963:4:37038:37051	8882856	1	True				
ANR	8882874	IdentifierDecl	exit_code		8882856	0					
ANR	8882875	IdentifierDeclType	int		8882856	0					
ANR	8882876	Identifier	exit_code		8882856	1					
ANR	8882877	IdentifierDeclStatement	ref error_object ;	964:4:37057:37073	8882856	2	True				
ANR	8882878	IdentifierDecl	error_object		8882856	0					
ANR	8882879	IdentifierDeclType	ref		8882856	0					
ANR	8882880	Identifier	error_object		8882856	1					
ANR	8882881	IdentifierDeclStatement	int code ;	965:4:37079:37087	8882856	3	True				
ANR	8882882	IdentifierDecl	code		8882856	0					
ANR	8882883	IdentifierDeclType	int		8882856	0					
ANR	8882884	Identifier	code		8882856	1					
ANR	8882885	IfStatement	if ( in == 0 )		8882856	4					
ANR	8882886	Condition	in == 0	967:8:37098:37104	8882856	0	True				
ANR	8882887	EqualityExpression	in == 0		8882856	0		==			
ANR	8882888	Identifier	in		8882856	0					
ANR	8882889	PrimaryExpression	0		8882856	1					
ANR	8882890	CompoundStatement		7:17:117:117	8882856	1					
ANR	8882891	ExpressionStatement	"outprintf ( minst -> heap , ""Unable to open %s for reading"" , arg )"	968:8:37117:37177	8882856	0	True				
ANR	8882892	CallExpression	"outprintf ( minst -> heap , ""Unable to open %s for reading"" , arg )"		8882856	0					
ANR	8882893	Callee	outprintf		8882856	0					
ANR	8882894	Identifier	outprintf		8882856	0					
ANR	8882895	ArgumentList	minst -> heap		8882856	1					
ANR	8882896	Argument	minst -> heap		8882856	0					
ANR	8882897	PtrMemberAccess	minst -> heap		8882856	0					
ANR	8882898	Identifier	minst		8882856	0					
ANR	8882899	Identifier	heap		8882856	1					
ANR	8882900	Argument	"""Unable to open %s for reading"""		8882856	1					
ANR	8882901	PrimaryExpression	"""Unable to open %s for reading"""		8882856	0					
ANR	8882902	Argument	arg		8882856	2					
ANR	8882903	Identifier	arg		8882856	0					
ANR	8882904	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	969:8:37187:37227	8882856	1	True				
ANR	8882905	CallExpression	return_error ( gs_error_invalidfileaccess )		8882856	0					
ANR	8882906	Callee	return_error		8882856	0					
ANR	8882907	Identifier	return_error		8882856	0					
ANR	8882908	ArgumentList	gs_error_invalidfileaccess		8882856	1					
ANR	8882909	Argument	gs_error_invalidfileaccess		8882856	0					
ANR	8882910	Identifier	gs_error_invalidfileaccess		8882856	0					
ANR	8882911	ExpressionStatement	code = gs_main_init2 ( minst )	971:4:37239:37266	8882856	5	True				
ANR	8882912	AssignmentExpression	code = gs_main_init2 ( minst )		8882856	0		=			
ANR	8882913	Identifier	code		8882856	0					
ANR	8882914	CallExpression	gs_main_init2 ( minst )		8882856	1					
ANR	8882915	Callee	gs_main_init2		8882856	0					
ANR	8882916	Identifier	gs_main_init2		8882856	0					
ANR	8882917	ArgumentList	minst		8882856	1					
ANR	8882918	Argument	minst		8882856	0					
ANR	8882919	Identifier	minst		8882856	0					
ANR	8882920	IfStatement	if ( code < 0 )		8882856	6					
ANR	8882921	Condition	code < 0	972:8:37276:37283	8882856	0	True				
ANR	8882922	RelationalExpression	code < 0		8882856	0		<			
ANR	8882923	Identifier	code		8882856	0					
ANR	8882924	PrimaryExpression	0		8882856	1					
ANR	8882925	CompoundStatement		12:18:296:296	8882856	1					
ANR	8882926	ExpressionStatement	fclose ( in )	973:8:37296:37306	8882856	0	True				
ANR	8882927	CallExpression	fclose ( in )		8882856	0					
ANR	8882928	Callee	fclose		8882856	0					
ANR	8882929	Identifier	fclose		8882856	0					
ANR	8882930	ArgumentList	in		8882856	1					
ANR	8882931	Argument	in		8882856	0					
ANR	8882932	Identifier	in		8882856	0					
ANR	8882933	ReturnStatement	return code ;	974:8:37316:37327	8882856	1	True				
ANR	8882934	Identifier	code		8882856	0					
ANR	8882935	ExpressionStatement	"code = gs_main_run_string_begin ( minst , minst -> user_errors , & exit_code , & error_object )"	976:4:37339:37460	8882856	7	True				
ANR	8882936	AssignmentExpression	"code = gs_main_run_string_begin ( minst , minst -> user_errors , & exit_code , & error_object )"		8882856	0		=			
ANR	8882937	Identifier	code		8882856	0					
ANR	8882938	CallExpression	"gs_main_run_string_begin ( minst , minst -> user_errors , & exit_code , & error_object )"		8882856	1					
ANR	8882939	Callee	gs_main_run_string_begin		8882856	0					
ANR	8882940	Identifier	gs_main_run_string_begin		8882856	0					
ANR	8882941	ArgumentList	minst		8882856	1					
ANR	8882942	Argument	minst		8882856	0					
ANR	8882943	Identifier	minst		8882856	0					
ANR	8882944	Argument	minst -> user_errors		8882856	1					
ANR	8882945	PtrMemberAccess	minst -> user_errors		8882856	0					
ANR	8882946	Identifier	minst		8882856	0					
ANR	8882947	Identifier	user_errors		8882856	1					
ANR	8882948	Argument	& exit_code		8882856	2					
ANR	8882949	UnaryOperationExpression	& exit_code		8882856	0					
ANR	8882950	UnaryOperator	&		8882856	0					
ANR	8882951	Identifier	exit_code		8882856	1					
ANR	8882952	Argument	& error_object		8882856	3					
ANR	8882953	UnaryOperationExpression	& error_object		8882856	0					
ANR	8882954	UnaryOperator	&		8882856	0					
ANR	8882955	Identifier	error_object		8882856	1					
ANR	8882956	IfStatement	if ( ! code )		8882856	8					
ANR	8882957	Condition	! code	978:8:37470:37474	8882856	0	True				
ANR	8882958	UnaryOperationExpression	! code		8882856	0					
ANR	8882959	UnaryOperator	!		8882856	0					
ANR	8882960	Identifier	code		8882856	1					
ANR	8882961	CompoundStatement		20:8:534:543	8882856	1					
ANR	8882962	IdentifierDeclStatement	char buf [ MAX_BUFFERED_SIZE ] ;	979:8:37487:37514	8882856	0	True				
ANR	8882963	IdentifierDecl	buf [ MAX_BUFFERED_SIZE ]		8882856	0					
ANR	8882964	IdentifierDeclType	char [ MAX_BUFFERED_SIZE ]		8882856	0					
ANR	8882965	Identifier	buf		8882856	1					
ANR	8882966	Identifier	MAX_BUFFERED_SIZE		8882856	2					
ANR	8882967	IdentifierDeclStatement	int count ;	980:8:37524:37533	8882856	1	True				
ANR	8882968	IdentifierDecl	count		8882856	0					
ANR	8882969	IdentifierDeclType	int		8882856	0					
ANR	8882970	Identifier	count		8882856	1					
ANR	8882971	ExpressionStatement	code = gs_error_NeedInput	982:8:37544:37569	8882856	2	True				
ANR	8882972	AssignmentExpression	code = gs_error_NeedInput		8882856	0		=			
ANR	8882973	Identifier	code		8882856	0					
ANR	8882974	Identifier	gs_error_NeedInput		8882856	1					
ANR	8882975	WhileStatement	"while ( ( count = fread ( buf , 1 , minst -> run_buffer_size , in ) ) > 0 )"		8882856	3					
ANR	8882976	Condition	"( count = fread ( buf , 1 , minst -> run_buffer_size , in ) ) > 0"	983:15:37586:37640	8882856	0	True				
ANR	8882977	RelationalExpression	"( count = fread ( buf , 1 , minst -> run_buffer_size , in ) ) > 0"		8882856	0		>			
ANR	8882978	AssignmentExpression	"count = fread ( buf , 1 , minst -> run_buffer_size , in )"		8882856	0		=			
ANR	8882979	Identifier	count		8882856	0					
ANR	8882980	CallExpression	"fread ( buf , 1 , minst -> run_buffer_size , in )"		8882856	1					
ANR	8882981	Callee	fread		8882856	0					
ANR	8882982	Identifier	fread		8882856	0					
ANR	8882983	ArgumentList	buf		8882856	1					
ANR	8882984	Argument	buf		8882856	0					
ANR	8882985	Identifier	buf		8882856	0					
ANR	8882986	Argument	1		8882856	1					
ANR	8882987	PrimaryExpression	1		8882856	0					
ANR	8882988	Argument	minst -> run_buffer_size		8882856	2					
ANR	8882989	PtrMemberAccess	minst -> run_buffer_size		8882856	0					
ANR	8882990	Identifier	minst		8882856	0					
ANR	8882991	Identifier	run_buffer_size		8882856	1					
ANR	8882992	Argument	in		8882856	3					
ANR	8882993	Identifier	in		8882856	0					
ANR	8882994	PrimaryExpression	0		8882856	1					
ANR	8882995	CompoundStatement		23:72:653:653	8882856	1					
ANR	8882996	ExpressionStatement	"code = gs_main_run_string_continue ( minst , buf , count , minst -> user_errors , & exit_code , & error_object )"	984:12:37657:37851	8882856	0	True				
ANR	8882997	AssignmentExpression	"code = gs_main_run_string_continue ( minst , buf , count , minst -> user_errors , & exit_code , & error_object )"		8882856	0		=			
ANR	8882998	Identifier	code		8882856	0					
ANR	8882999	CallExpression	"gs_main_run_string_continue ( minst , buf , count , minst -> user_errors , & exit_code , & error_object )"		8882856	1					
ANR	8883000	Callee	gs_main_run_string_continue		8882856	0					
ANR	8883001	Identifier	gs_main_run_string_continue		8882856	0					
ANR	8883002	ArgumentList	minst		8882856	1					
ANR	8883003	Argument	minst		8882856	0					
ANR	8883004	Identifier	minst		8882856	0					
ANR	8883005	Argument	buf		8882856	1					
ANR	8883006	Identifier	buf		8882856	0					
ANR	8883007	Argument	count		8882856	2					
ANR	8883008	Identifier	count		8882856	0					
ANR	8883009	Argument	minst -> user_errors		8882856	3					
ANR	8883010	PtrMemberAccess	minst -> user_errors		8882856	0					
ANR	8883011	Identifier	minst		8882856	0					
ANR	8883012	Identifier	user_errors		8882856	1					
ANR	8883013	Argument	& exit_code		8882856	4					
ANR	8883014	UnaryOperationExpression	& exit_code		8882856	0					
ANR	8883015	UnaryOperator	&		8882856	0					
ANR	8883016	Identifier	exit_code		8882856	1					
ANR	8883017	Argument	& error_object		8882856	5					
ANR	8883018	UnaryOperationExpression	& error_object		8882856	0					
ANR	8883019	UnaryOperator	&		8882856	0					
ANR	8883020	Identifier	error_object		8882856	1					
ANR	8883021	IfStatement	if ( code != gs_error_NeedInput )		8882856	1					
ANR	8883022	Condition	code != gs_error_NeedInput	987:16:37869:37894	8882856	0	True				
ANR	8883023	EqualityExpression	code != gs_error_NeedInput		8882856	0		!=			
ANR	8883024	Identifier	code		8882856	0					
ANR	8883025	Identifier	gs_error_NeedInput		8882856	1					
ANR	8883026	BreakStatement	break ;	988:16:37913:37918	8882856	1	True				
ANR	8883027	IfStatement	if ( code == gs_error_NeedInput )		8882856	4					
ANR	8883028	Condition	code == gs_error_NeedInput	990:12:37942:37967	8882856	0	True				
ANR	8883029	EqualityExpression	code == gs_error_NeedInput		8882856	0		==			
ANR	8883030	Identifier	code		8882856	0					
ANR	8883031	Identifier	gs_error_NeedInput		8882856	1					
ANR	8883032	CompoundStatement		30:40:980:980	8882856	1					
ANR	8883033	ExpressionStatement	"code = gs_main_run_string_end ( minst , minst -> user_errors , & exit_code , & error_object )"	991:12:37984:38109	8882856	0	True				
ANR	8883034	AssignmentExpression	"code = gs_main_run_string_end ( minst , minst -> user_errors , & exit_code , & error_object )"		8882856	0		=			
ANR	8883035	Identifier	code		8882856	0					
ANR	8883036	CallExpression	"gs_main_run_string_end ( minst , minst -> user_errors , & exit_code , & error_object )"		8882856	1					
ANR	8883037	Callee	gs_main_run_string_end		8882856	0					
ANR	8883038	Identifier	gs_main_run_string_end		8882856	0					
ANR	8883039	ArgumentList	minst		8882856	1					
ANR	8883040	Argument	minst		8882856	0					
ANR	8883041	Identifier	minst		8882856	0					
ANR	8883042	Argument	minst -> user_errors		8882856	1					
ANR	8883043	PtrMemberAccess	minst -> user_errors		8882856	0					
ANR	8883044	Identifier	minst		8882856	0					
ANR	8883045	Identifier	user_errors		8882856	1					
ANR	8883046	Argument	& exit_code		8882856	2					
ANR	8883047	UnaryOperationExpression	& exit_code		8882856	0					
ANR	8883048	UnaryOperator	&		8882856	0					
ANR	8883049	Identifier	exit_code		8882856	1					
ANR	8883050	Argument	& error_object		8882856	3					
ANR	8883051	UnaryOperationExpression	& error_object		8882856	0					
ANR	8883052	UnaryOperator	&		8882856	0					
ANR	8883053	Identifier	error_object		8882856	1					
ANR	8883054	ExpressionStatement	fclose ( in )	995:4:38131:38141	8882856	9	True				
ANR	8883055	CallExpression	fclose ( in )		8882856	0					
ANR	8883056	Callee	fclose		8882856	0					
ANR	8883057	Identifier	fclose		8882856	0					
ANR	8883058	ArgumentList	in		8882856	1					
ANR	8883059	Argument	in		8882856	0					
ANR	8883060	Identifier	in		8882856	0					
ANR	8883061	ExpressionStatement	zflush ( minst -> i_ctx_p )	996:4:38147:38169	8882856	10	True				
ANR	8883062	CallExpression	zflush ( minst -> i_ctx_p )		8882856	0					
ANR	8883063	Callee	zflush		8882856	0					
ANR	8883064	Identifier	zflush		8882856	0					
ANR	8883065	ArgumentList	minst -> i_ctx_p		8882856	1					
ANR	8883066	Argument	minst -> i_ctx_p		8882856	0					
ANR	8883067	PtrMemberAccess	minst -> i_ctx_p		8882856	0					
ANR	8883068	Identifier	minst		8882856	0					
ANR	8883069	Identifier	i_ctx_p		8882856	1					
ANR	8883070	ExpressionStatement	zflushpage ( minst -> i_ctx_p )	997:4:38175:38201	8882856	11	True				
ANR	8883071	CallExpression	zflushpage ( minst -> i_ctx_p )		8882856	0					
ANR	8883072	Callee	zflushpage		8882856	0					
ANR	8883073	Identifier	zflushpage		8882856	0					
ANR	8883074	ArgumentList	minst -> i_ctx_p		8882856	1					
ANR	8883075	Argument	minst -> i_ctx_p		8882856	0					
ANR	8883076	PtrMemberAccess	minst -> i_ctx_p		8882856	0					
ANR	8883077	Identifier	minst		8882856	0					
ANR	8883078	Identifier	i_ctx_p		8882856	1					
ANR	8883079	ReturnStatement	"return run_finish ( minst , code , exit_code , & error_object ) ;"	998:4:38207:38263	8882856	12	True				
ANR	8883080	CallExpression	"run_finish ( minst , code , exit_code , & error_object )"		8882856	0					
ANR	8883081	Callee	run_finish		8882856	0					
ANR	8883082	Identifier	run_finish		8882856	0					
ANR	8883083	ArgumentList	minst		8882856	1					
ANR	8883084	Argument	minst		8882856	0					
ANR	8883085	Identifier	minst		8882856	0					
ANR	8883086	Argument	code		8882856	1					
ANR	8883087	Identifier	code		8882856	0					
ANR	8883088	Argument	exit_code		8882856	2					
ANR	8883089	Identifier	exit_code		8882856	0					
ANR	8883090	Argument	& error_object		8882856	3					
ANR	8883091	UnaryOperationExpression	& error_object		8882856	0					
ANR	8883092	UnaryOperator	&		8882856	0					
ANR	8883093	Identifier	error_object		8882856	1					
ANR	8883094	ReturnType	static int		8882856	1					
ANR	8883095	Identifier	run_buffered		8882856	2					
ANR	8883096	ParameterList	"gs_main_instance * minst , const char * arg"		8882856	3					
ANR	8883097	Parameter	gs_main_instance * minst	960:13:36946:36969	8882856	0	True				
ANR	8883098	ParameterType	gs_main_instance *		8882856	0					
ANR	8883099	Identifier	minst		8882856	1					
ANR	8883100	Parameter	const char * arg	960:39:36972:36986	8882856	1	True				
ANR	8883101	ParameterType	const char *		8882856	0					
ANR	8883102	Identifier	arg		8882856	1					
ANR	8883103	CFGEntryNode	ENTRY		8882856		True				
ANR	8883104	CFGExitNode	EXIT		8882856		True				
ANR	8883105	Symbol	& error_object		8882856						
ANR	8883106	Symbol	minst		8882856						
ANR	8883107	Symbol	code		8882856						
ANR	8883108	Symbol	& exit_code		8882856						
ANR	8883109	Symbol	minst -> heap		8882856						
ANR	8883110	Symbol	minst -> run_buffer_size		8882856						
ANR	8883111	Symbol	minst -> i_ctx_p		8882856						
ANR	8883112	Symbol	gs_main_run_string_end		8882856						
ANR	8883113	Symbol	error_object		8882856						
ANR	8883114	Symbol	arg		8882856						
ANR	8883115	Symbol	gs_main_run_string_continue		8882856						
ANR	8883116	Symbol	gp_fmode_rb		8882856						
ANR	8883117	Symbol	gp_fopen		8882856						
ANR	8883118	Symbol	gs_main_run_string_begin		8882856						
ANR	8883119	Symbol	in		8882856						
ANR	8883120	Symbol	count		8882856						
ANR	8883121	Symbol	fread		8882856						
ANR	8883122	Symbol	* minst		8882856						
ANR	8883123	Symbol	buf		8882856						
ANR	8883124	Symbol	run_finish		8882856						
ANR	8883125	Symbol	minst -> user_errors		8882856						
ANR	8883126	Symbol	exit_code		8882856						
ANR	8883127	Symbol	gs_main_init2		8882856						
ANR	8883128	Symbol	gs_error_NeedInput		8882856						
ANR	8883129	Symbol	gs_error_invalidfileaccess		8882856						
ANR	8883130	Function	runarg	1000:0:38267:39076							
ANR	8883131	FunctionDef	"runarg (gs_main_instance * minst , const char * pre , const char * arg , const char * post , int options)"		8883130	0					
ANR	8883132	CompoundStatement		1003:0:38383:39076	8883130	0					
ANR	8883133	IdentifierDeclStatement	int len = strlen ( pre ) + esc_strlen ( arg ) + strlen ( post ) + 1 ;	1004:4:38389:38447	8883130	0	True				
ANR	8883134	IdentifierDecl	len = strlen ( pre ) + esc_strlen ( arg ) + strlen ( post ) + 1		8883130	0					
ANR	8883135	IdentifierDeclType	int		8883130	0					
ANR	8883136	Identifier	len		8883130	1					
ANR	8883137	AssignmentExpression	len = strlen ( pre ) + esc_strlen ( arg ) + strlen ( post ) + 1		8883130	2		=			
ANR	8883138	Identifier	len		8883130	0					
ANR	8883139	AdditiveExpression	strlen ( pre ) + esc_strlen ( arg ) + strlen ( post ) + 1		8883130	1		+			
ANR	8883140	CallExpression	strlen ( pre )		8883130	0					
ANR	8883141	Callee	strlen		8883130	0					
ANR	8883142	Identifier	strlen		8883130	0					
ANR	8883143	ArgumentList	pre		8883130	1					
ANR	8883144	Argument	pre		8883130	0					
ANR	8883145	Identifier	pre		8883130	0					
ANR	8883146	AdditiveExpression	esc_strlen ( arg ) + strlen ( post ) + 1		8883130	1		+			
ANR	8883147	CallExpression	esc_strlen ( arg )		8883130	0					
ANR	8883148	Callee	esc_strlen		8883130	0					
ANR	8883149	Identifier	esc_strlen		8883130	0					
ANR	8883150	ArgumentList	arg		8883130	1					
ANR	8883151	Argument	arg		8883130	0					
ANR	8883152	Identifier	arg		8883130	0					
ANR	8883153	AdditiveExpression	strlen ( post ) + 1		8883130	1		+			
ANR	8883154	CallExpression	strlen ( post )		8883130	0					
ANR	8883155	Callee	strlen		8883130	0					
ANR	8883156	Identifier	strlen		8883130	0					
ANR	8883157	ArgumentList	post		8883130	1					
ANR	8883158	Argument	post		8883130	0					
ANR	8883159	Identifier	post		8883130	0					
ANR	8883160	PrimaryExpression	1		8883130	1					
ANR	8883161	IdentifierDeclStatement	int code ;	1005:4:38453:38461	8883130	1	True				
ANR	8883162	IdentifierDecl	code		8883130	0					
ANR	8883163	IdentifierDeclType	int		8883130	0					
ANR	8883164	Identifier	code		8883130	1					
ANR	8883165	IdentifierDeclStatement	char * line ;	1006:4:38467:38477	8883130	2	True				
ANR	8883166	IdentifierDecl	* line		8883130	0					
ANR	8883167	IdentifierDeclType	char *		8883130	0					
ANR	8883168	Identifier	line		8883130	1					
ANR	8883169	IfStatement	if ( options & runInit )		8883130	3					
ANR	8883170	Condition	options & runInit	1008:8:38488:38504	8883130	0	True				
ANR	8883171	BitAndExpression	options & runInit		8883130	0		&			
ANR	8883172	Identifier	options		8883130	0					
ANR	8883173	Identifier	runInit		8883130	1					
ANR	8883174	CompoundStatement		6:27:123:123	8883130	1					
ANR	8883175	ExpressionStatement	code = gs_main_init2 ( minst )	1009:8:38517:38544	8883130	0	True				
ANR	8883176	AssignmentExpression	code = gs_main_init2 ( minst )		8883130	0		=			
ANR	8883177	Identifier	code		8883130	0					
ANR	8883178	CallExpression	gs_main_init2 ( minst )		8883130	1					
ANR	8883179	Callee	gs_main_init2		8883130	0					
ANR	8883180	Identifier	gs_main_init2		8883130	0					
ANR	8883181	ArgumentList	minst		8883130	1					
ANR	8883182	Argument	minst		8883130	0					
ANR	8883183	Identifier	minst		8883130	0					
ANR	8883184	IfStatement	if ( code < 0 )		8883130	1					
ANR	8883185	Condition	code < 0	1011:12:38590:38597	8883130	0	True				
ANR	8883186	RelationalExpression	code < 0		8883130	0		<			
ANR	8883187	Identifier	code		8883130	0					
ANR	8883188	PrimaryExpression	0		8883130	1					
ANR	8883189	ReturnStatement	return code ;	1012:12:38612:38623	8883130	1	True				
ANR	8883190	Identifier	code		8883130	0					
ANR	8883191	ExpressionStatement	"line = ( char * ) gs_alloc_bytes ( minst -> heap , len , ""runarg"" )"	1014:4:38635:38692	8883130	4	True				
ANR	8883192	AssignmentExpression	"line = ( char * ) gs_alloc_bytes ( minst -> heap , len , ""runarg"" )"		8883130	0		=			
ANR	8883193	Identifier	line		8883130	0					
ANR	8883194	CastExpression	"( char * ) gs_alloc_bytes ( minst -> heap , len , ""runarg"" )"		8883130	1					
ANR	8883195	CastTarget	char *		8883130	0					
ANR	8883196	CallExpression	"gs_alloc_bytes ( minst -> heap , len , ""runarg"" )"		8883130	1					
ANR	8883197	Callee	gs_alloc_bytes		8883130	0					
ANR	8883198	Identifier	gs_alloc_bytes		8883130	0					
ANR	8883199	ArgumentList	minst -> heap		8883130	1					
ANR	8883200	Argument	minst -> heap		8883130	0					
ANR	8883201	PtrMemberAccess	minst -> heap		8883130	0					
ANR	8883202	Identifier	minst		8883130	0					
ANR	8883203	Identifier	heap		8883130	1					
ANR	8883204	Argument	len		8883130	1					
ANR	8883205	Identifier	len		8883130	0					
ANR	8883206	Argument	"""runarg"""		8883130	2					
ANR	8883207	PrimaryExpression	"""runarg"""		8883130	0					
ANR	8883208	IfStatement	if ( line == 0 )		8883130	5					
ANR	8883209	Condition	line == 0	1015:8:38702:38710	8883130	0	True				
ANR	8883210	EqualityExpression	line == 0		8883130	0		==			
ANR	8883211	Identifier	line		8883130	0					
ANR	8883212	PrimaryExpression	0		8883130	1					
ANR	8883213	CompoundStatement		13:19:329:329	8883130	1					
ANR	8883214	ExpressionStatement	"lprintf ( ""Out of memory!\\n"" )"	1016:8:38723:38750	8883130	0	True				
ANR	8883215	CallExpression	"lprintf ( ""Out of memory!\\n"" )"		8883130	0					
ANR	8883216	Callee	lprintf		8883130	0					
ANR	8883217	Identifier	lprintf		8883130	0					
ANR	8883218	ArgumentList	"""Out of memory!\\n"""		8883130	1					
ANR	8883219	Argument	"""Out of memory!\\n"""		8883130	0					
ANR	8883220	PrimaryExpression	"""Out of memory!\\n"""		8883130	0					
ANR	8883221	ExpressionStatement	return_error ( gs_error_VMerror )	1017:8:38760:38790	8883130	1	True				
ANR	8883222	CallExpression	return_error ( gs_error_VMerror )		8883130	0					
ANR	8883223	Callee	return_error		8883130	0					
ANR	8883224	Identifier	return_error		8883130	0					
ANR	8883225	ArgumentList	gs_error_VMerror		8883130	1					
ANR	8883226	Argument	gs_error_VMerror		8883130	0					
ANR	8883227	Identifier	gs_error_VMerror		8883130	0					
ANR	8883228	ExpressionStatement	"strcpy ( line , pre )"	1019:4:38802:38819	8883130	6	True				
ANR	8883229	CallExpression	"strcpy ( line , pre )"		8883130	0					
ANR	8883230	Callee	strcpy		8883130	0					
ANR	8883231	Identifier	strcpy		8883130	0					
ANR	8883232	ArgumentList	line		8883130	1					
ANR	8883233	Argument	line		8883130	0					
ANR	8883234	Identifier	line		8883130	0					
ANR	8883235	Argument	pre		8883130	1					
ANR	8883236	Identifier	pre		8883130	0					
ANR	8883237	ExpressionStatement	"esc_strcat ( line , arg )"	1020:4:38825:38846	8883130	7	True				
ANR	8883238	CallExpression	"esc_strcat ( line , arg )"		8883130	0					
ANR	8883239	Callee	esc_strcat		8883130	0					
ANR	8883240	Identifier	esc_strcat		8883130	0					
ANR	8883241	ArgumentList	line		8883130	1					
ANR	8883242	Argument	line		8883130	0					
ANR	8883243	Identifier	line		8883130	0					
ANR	8883244	Argument	arg		8883130	1					
ANR	8883245	Identifier	arg		8883130	0					
ANR	8883246	ExpressionStatement	"strcat ( line , post )"	1021:4:38852:38870	8883130	8	True				
ANR	8883247	CallExpression	"strcat ( line , post )"		8883130	0					
ANR	8883248	Callee	strcat		8883130	0					
ANR	8883249	Identifier	strcat		8883130	0					
ANR	8883250	ArgumentList	line		8883130	1					
ANR	8883251	Argument	line		8883130	0					
ANR	8883252	Identifier	line		8883130	0					
ANR	8883253	Argument	post		8883130	1					
ANR	8883254	Identifier	post		8883130	0					
ANR	8883255	ExpressionStatement	minst -> i_ctx_p -> starting_arg_file = true	1022:4:38876:38916	8883130	9	True				
ANR	8883256	AssignmentExpression	minst -> i_ctx_p -> starting_arg_file = true		8883130	0		=			
ANR	8883257	PtrMemberAccess	minst -> i_ctx_p -> starting_arg_file		8883130	0					
ANR	8883258	PtrMemberAccess	minst -> i_ctx_p		8883130	0					
ANR	8883259	Identifier	minst		8883130	0					
ANR	8883260	Identifier	i_ctx_p		8883130	1					
ANR	8883261	Identifier	starting_arg_file		8883130	1					
ANR	8883262	Identifier	true		8883130	1					
ANR	8883263	ExpressionStatement	"code = run_string ( minst , line , options )"	1023:4:38922:38961	8883130	10	True				
ANR	8883264	AssignmentExpression	"code = run_string ( minst , line , options )"		8883130	0		=			
ANR	8883265	Identifier	code		8883130	0					
ANR	8883266	CallExpression	"run_string ( minst , line , options )"		8883130	1					
ANR	8883267	Callee	run_string		8883130	0					
ANR	8883268	Identifier	run_string		8883130	0					
ANR	8883269	ArgumentList	minst		8883130	1					
ANR	8883270	Argument	minst		8883130	0					
ANR	8883271	Identifier	minst		8883130	0					
ANR	8883272	Argument	line		8883130	1					
ANR	8883273	Identifier	line		8883130	0					
ANR	8883274	Argument	options		8883130	2					
ANR	8883275	Identifier	options		8883130	0					
ANR	8883276	ExpressionStatement	minst -> i_ctx_p -> starting_arg_file = false	1024:4:38967:39008	8883130	11	True				
ANR	8883277	AssignmentExpression	minst -> i_ctx_p -> starting_arg_file = false		8883130	0		=			
ANR	8883278	PtrMemberAccess	minst -> i_ctx_p -> starting_arg_file		8883130	0					
ANR	8883279	PtrMemberAccess	minst -> i_ctx_p		8883130	0					
ANR	8883280	Identifier	minst		8883130	0					
ANR	8883281	Identifier	i_ctx_p		8883130	1					
ANR	8883282	Identifier	starting_arg_file		8883130	1					
ANR	8883283	Identifier	false		8883130	1					
ANR	8883284	ExpressionStatement	"gs_free_object ( minst -> heap , line , ""runarg"" )"	1025:4:39014:39057	8883130	12	True				
ANR	8883285	CallExpression	"gs_free_object ( minst -> heap , line , ""runarg"" )"		8883130	0					
ANR	8883286	Callee	gs_free_object		8883130	0					
ANR	8883287	Identifier	gs_free_object		8883130	0					
ANR	8883288	ArgumentList	minst -> heap		8883130	1					
ANR	8883289	Argument	minst -> heap		8883130	0					
ANR	8883290	PtrMemberAccess	minst -> heap		8883130	0					
ANR	8883291	Identifier	minst		8883130	0					
ANR	8883292	Identifier	heap		8883130	1					
ANR	8883293	Argument	line		8883130	1					
ANR	8883294	Identifier	line		8883130	0					
ANR	8883295	Argument	"""runarg"""		8883130	2					
ANR	8883296	PrimaryExpression	"""runarg"""		8883130	0					
ANR	8883297	ReturnStatement	return code ;	1026:4:39063:39074	8883130	13	True				
ANR	8883298	Identifier	code		8883130	0					
ANR	8883299	ReturnType	static int		8883130	1					
ANR	8883300	Identifier	runarg		8883130	2					
ANR	8883301	ParameterList	"gs_main_instance * minst , const char * pre , const char * arg , const char * post , int options"		8883130	3					
ANR	8883302	Parameter	gs_main_instance * minst	1001:7:38285:38308	8883130	0	True				
ANR	8883303	ParameterType	gs_main_instance *		8883130	0					
ANR	8883304	Identifier	minst		8883130	1					
ANR	8883305	Parameter	const char * pre	1001:33:38311:38325	8883130	1	True				
ANR	8883306	ParameterType	const char *		8883130	0					
ANR	8883307	Identifier	pre		8883130	1					
ANR	8883308	Parameter	const char * arg	1001:50:38328:38342	8883130	2	True				
ANR	8883309	ParameterType	const char *		8883130	0					
ANR	8883310	Identifier	arg		8883130	1					
ANR	8883311	Parameter	const char * post	1002:7:38352:38367	8883130	3	True				
ANR	8883312	ParameterType	const char *		8883130	0					
ANR	8883313	Identifier	post		8883130	1					
ANR	8883314	Parameter	int options	1002:25:38370:38380	8883130	4	True				
ANR	8883315	ParameterType	int		8883130	0					
ANR	8883316	Identifier	options		8883130	1					
ANR	8883317	CFGEntryNode	ENTRY		8883130		True				
ANR	8883318	CFGExitNode	EXIT		8883130		True				
ANR	8883319	Symbol	minst		8883130						
ANR	8883320	Symbol	pre		8883130						
ANR	8883321	Symbol	gs_alloc_bytes		8883130						
ANR	8883322	Symbol	code		8883130						
ANR	8883323	Symbol	run_string		8883130						
ANR	8883324	Symbol	runInit		8883130						
ANR	8883325	Symbol	line		8883130						
ANR	8883326	Symbol	minst -> heap		8883130						
ANR	8883327	Symbol	false		8883130						
ANR	8883328	Symbol	minst -> i_ctx_p		8883130						
ANR	8883329	Symbol	* minst -> i_ctx_p		8883130						
ANR	8883330	Symbol	* minst		8883130						
ANR	8883331	Symbol	strlen		8883130						
ANR	8883332	Symbol	gs_error_VMerror		8883130						
ANR	8883333	Symbol	post		8883130						
ANR	8883334	Symbol	len		8883130						
ANR	8883335	Symbol	* * minst		8883130						
ANR	8883336	Symbol	arg		8883130						
ANR	8883337	Symbol	options		8883130						
ANR	8883338	Symbol	true		8883130						
ANR	8883339	Symbol	gs_main_init2		8883130						
ANR	8883340	Symbol	minst -> i_ctx_p -> starting_arg_file		8883130						
ANR	8883341	Symbol	esc_strlen		8883130						
ANR	8883342	Function	run_string	1028:0:39078:39567							
ANR	8883343	FunctionDef	"run_string (gs_main_instance * minst , const char * str , int options)"		8883342	0					
ANR	8883344	CompoundStatement		1030:0:39156:39567	8883342	0					
ANR	8883345	IdentifierDeclStatement	int exit_code ;	1031:4:39162:39175	8883342	0	True				
ANR	8883346	IdentifierDecl	exit_code		8883342	0					
ANR	8883347	IdentifierDeclType	int		8883342	0					
ANR	8883348	Identifier	exit_code		8883342	1					
ANR	8883349	IdentifierDeclStatement	ref error_object ;	1032:4:39181:39197	8883342	1	True				
ANR	8883350	IdentifierDecl	error_object		8883342	0					
ANR	8883351	IdentifierDeclType	ref		8883342	0					
ANR	8883352	Identifier	error_object		8883342	1					
ANR	8883353	IdentifierDeclStatement	"int code = gs_main_run_string ( minst , str , minst -> user_errors , & exit_code , & error_object ) ;"	1033:4:39203:39325	8883342	2	True				
ANR	8883354	IdentifierDecl	"code = gs_main_run_string ( minst , str , minst -> user_errors , & exit_code , & error_object )"		8883342	0					
ANR	8883355	IdentifierDeclType	int		8883342	0					
ANR	8883356	Identifier	code		8883342	1					
ANR	8883357	AssignmentExpression	"code = gs_main_run_string ( minst , str , minst -> user_errors , & exit_code , & error_object )"		8883342	2		=			
ANR	8883358	Identifier	code		8883342	0					
ANR	8883359	CallExpression	"gs_main_run_string ( minst , str , minst -> user_errors , & exit_code , & error_object )"		8883342	1					
ANR	8883360	Callee	gs_main_run_string		8883342	0					
ANR	8883361	Identifier	gs_main_run_string		8883342	0					
ANR	8883362	ArgumentList	minst		8883342	1					
ANR	8883363	Argument	minst		8883342	0					
ANR	8883364	Identifier	minst		8883342	0					
ANR	8883365	Argument	str		8883342	1					
ANR	8883366	Identifier	str		8883342	0					
ANR	8883367	Argument	minst -> user_errors		8883342	2					
ANR	8883368	PtrMemberAccess	minst -> user_errors		8883342	0					
ANR	8883369	Identifier	minst		8883342	0					
ANR	8883370	Identifier	user_errors		8883342	1					
ANR	8883371	Argument	& exit_code		8883342	3					
ANR	8883372	UnaryOperationExpression	& exit_code		8883342	0					
ANR	8883373	UnaryOperator	&		8883342	0					
ANR	8883374	Identifier	exit_code		8883342	1					
ANR	8883375	Argument	& error_object		8883342	4					
ANR	8883376	UnaryOperationExpression	& error_object		8883342	0					
ANR	8883377	UnaryOperator	&		8883342	0					
ANR	8883378	Identifier	error_object		8883342	1					
ANR	8883379	IfStatement	if ( ( options & runFlush ) || code != 0 )		8883342	3					
ANR	8883380	Condition	( options & runFlush ) || code != 0	1036:8:39336:39368	8883342	0	True				
ANR	8883381	OrExpression	( options & runFlush ) || code != 0		8883342	0		||			
ANR	8883382	BitAndExpression	options & runFlush		8883342	0		&			
ANR	8883383	Identifier	options		8883342	0					
ANR	8883384	Identifier	runFlush		8883342	1					
ANR	8883385	EqualityExpression	code != 0		8883342	1		!=			
ANR	8883386	Identifier	code		8883342	0					
ANR	8883387	PrimaryExpression	0		8883342	1					
ANR	8883388	CompoundStatement		7:43:214:214	8883342	1					
ANR	8883389	ExpressionStatement	zflush ( minst -> i_ctx_p )	1037:8:39381:39403	8883342	0	True				
ANR	8883390	CallExpression	zflush ( minst -> i_ctx_p )		8883342	0					
ANR	8883391	Callee	zflush		8883342	0					
ANR	8883392	Identifier	zflush		8883342	0					
ANR	8883393	ArgumentList	minst -> i_ctx_p		8883342	1					
ANR	8883394	Argument	minst -> i_ctx_p		8883342	0					
ANR	8883395	PtrMemberAccess	minst -> i_ctx_p		8883342	0					
ANR	8883396	Identifier	minst		8883342	0					
ANR	8883397	Identifier	i_ctx_p		8883342	1					
ANR	8883398	ExpressionStatement	zflushpage ( minst -> i_ctx_p )	1038:8:39440:39466	8883342	1	True				
ANR	8883399	CallExpression	zflushpage ( minst -> i_ctx_p )		8883342	0					
ANR	8883400	Callee	zflushpage		8883342	0					
ANR	8883401	Identifier	zflushpage		8883342	0					
ANR	8883402	ArgumentList	minst -> i_ctx_p		8883342	1					
ANR	8883403	Argument	minst -> i_ctx_p		8883342	0					
ANR	8883404	PtrMemberAccess	minst -> i_ctx_p		8883342	0					
ANR	8883405	Identifier	minst		8883342	0					
ANR	8883406	Identifier	i_ctx_p		8883342	1					
ANR	8883407	ReturnStatement	"return run_finish ( minst , code , exit_code , & error_object ) ;"	1040:4:39509:39565	8883342	4	True				
ANR	8883408	CallExpression	"run_finish ( minst , code , exit_code , & error_object )"		8883342	0					
ANR	8883409	Callee	run_finish		8883342	0					
ANR	8883410	Identifier	run_finish		8883342	0					
ANR	8883411	ArgumentList	minst		8883342	1					
ANR	8883412	Argument	minst		8883342	0					
ANR	8883413	Identifier	minst		8883342	0					
ANR	8883414	Argument	code		8883342	1					
ANR	8883415	Identifier	code		8883342	0					
ANR	8883416	Argument	exit_code		8883342	2					
ANR	8883417	Identifier	exit_code		8883342	0					
ANR	8883418	Argument	& error_object		8883342	3					
ANR	8883419	UnaryOperationExpression	& error_object		8883342	0					
ANR	8883420	UnaryOperator	&		8883342	0					
ANR	8883421	Identifier	error_object		8883342	1					
ANR	8883422	ReturnType	static int		8883342	1					
ANR	8883423	Identifier	run_string		8883342	2					
ANR	8883424	ParameterList	"gs_main_instance * minst , const char * str , int options"		8883342	3					
ANR	8883425	Parameter	gs_main_instance * minst	1029:11:39100:39123	8883342	0	True				
ANR	8883426	ParameterType	gs_main_instance *		8883342	0					
ANR	8883427	Identifier	minst		8883342	1					
ANR	8883428	Parameter	const char * str	1029:37:39126:39140	8883342	1	True				
ANR	8883429	ParameterType	const char *		8883342	0					
ANR	8883430	Identifier	str		8883342	1					
ANR	8883431	Parameter	int options	1029:54:39143:39153	8883342	2	True				
ANR	8883432	ParameterType	int		8883342	0					
ANR	8883433	Identifier	options		8883342	1					
ANR	8883434	CFGEntryNode	ENTRY		8883342		True				
ANR	8883435	CFGExitNode	EXIT		8883342		True				
ANR	8883436	Symbol	& error_object		8883342						
ANR	8883437	Symbol	minst		8883342						
ANR	8883438	Symbol	& exit_code		8883342						
ANR	8883439	Symbol	code		8883342						
ANR	8883440	Symbol	minst -> i_ctx_p		8883342						
ANR	8883441	Symbol	* minst		8883342						
ANR	8883442	Symbol	str		8883342						
ANR	8883443	Symbol	error_object		8883342						
ANR	8883444	Symbol	gs_main_run_string		8883342						
ANR	8883445	Symbol	run_finish		8883342						
ANR	8883446	Symbol	minst -> user_errors		8883342						
ANR	8883447	Symbol	options		8883342						
ANR	8883448	Symbol	exit_code		8883342						
ANR	8883449	Symbol	runFlush		8883342						
ANR	8883450	Function	run_finish	1042:0:39569:40036							
ANR	8883451	FunctionDef	"run_finish (gs_main_instance * minst , int code , int exit_code , ref * perror_object)"		8883450	0					
ANR	8883452	CompoundStatement		1045:0:39673:40036	8883450	0					
ANR	8883453	SwitchStatement	switch ( code )		8883450	0					
ANR	8883454	Condition	code	1046:12:39687:39690	8883450	0	True				
ANR	8883455	Identifier	code		8883450	0					
ANR	8883456	CompoundStatement		2:18:19:19	8883450	1					
ANR	8883457	Label	case gs_error_Quit :	1047:8:39703:39721	8883450	0	True				
ANR	8883458	Identifier	gs_error_Quit		8883450	0					
ANR	8883459	Label	case 0 :	1048:8:39731:39737	8883450	1	True				
ANR	8883460	BreakStatement	break ;	1049:12:39751:39756	8883450	2	True				
ANR	8883461	Label	case gs_error_Fatal :	1050:8:39766:39785	8883450	3	True				
ANR	8883462	Identifier	gs_error_Fatal		8883450	0					
ANR	8883463	ExpressionStatement	"emprintf1 ( minst -> heap , ""Unrecoverable error, exit code %d\\n"" , exit_code )"	1051:12:39799:39915	8883450	4	True				
ANR	8883464	CallExpression	"emprintf1 ( minst -> heap , ""Unrecoverable error, exit code %d\\n"" , exit_code )"		8883450	0					
ANR	8883465	Callee	emprintf1		8883450	0					
ANR	8883466	Identifier	emprintf1		8883450	0					
ANR	8883467	ArgumentList	minst -> heap		8883450	1					
ANR	8883468	Argument	minst -> heap		8883450	0					
ANR	8883469	PtrMemberAccess	minst -> heap		8883450	0					
ANR	8883470	Identifier	minst		8883450	0					
ANR	8883471	Identifier	heap		8883450	1					
ANR	8883472	Argument	"""Unrecoverable error, exit code %d\\n"""		8883450	1					
ANR	8883473	PrimaryExpression	"""Unrecoverable error, exit code %d\\n"""		8883450	0					
ANR	8883474	Argument	exit_code		8883450	2					
ANR	8883475	Identifier	exit_code		8883450	0					
ANR	8883476	BreakStatement	break ;	1054:12:39929:39934	8883450	5	True				
ANR	8883477	Label	default :	1055:8:39944:39951	8883450	6	True				
ANR	8883478	Identifier	default		8883450	0					
ANR	8883479	ExpressionStatement	"gs_main_dump_stack ( minst , code , perror_object )"	1056:12:39965:40011	8883450	7	True				
ANR	8883480	CallExpression	"gs_main_dump_stack ( minst , code , perror_object )"		8883450	0					
ANR	8883481	Callee	gs_main_dump_stack		8883450	0					
ANR	8883482	Identifier	gs_main_dump_stack		8883450	0					
ANR	8883483	ArgumentList	minst		8883450	1					
ANR	8883484	Argument	minst		8883450	0					
ANR	8883485	Identifier	minst		8883450	0					
ANR	8883486	Argument	code		8883450	1					
ANR	8883487	Identifier	code		8883450	0					
ANR	8883488	Argument	perror_object		8883450	2					
ANR	8883489	Identifier	perror_object		8883450	0					
ANR	8883490	ReturnStatement	return code ;	1058:4:40023:40034	8883450	1	True				
ANR	8883491	Identifier	code		8883450	0					
ANR	8883492	ReturnType	static int		8883450	1					
ANR	8883493	Identifier	run_finish		8883450	2					
ANR	8883494	ParameterList	"gs_main_instance * minst , int code , int exit_code , ref * perror_object"		8883450	3					
ANR	8883495	Parameter	gs_main_instance * minst	1043:11:39591:39613	8883450	0	True				
ANR	8883496	ParameterType	gs_main_instance *		8883450	0					
ANR	8883497	Identifier	minst		8883450	1					
ANR	8883498	Parameter	int code	1043:36:39616:39623	8883450	1	True				
ANR	8883499	ParameterType	int		8883450	0					
ANR	8883500	Identifier	code		8883450	1					
ANR	8883501	Parameter	int exit_code	1043:46:39626:39638	8883450	2	True				
ANR	8883502	ParameterType	int		8883450	0					
ANR	8883503	Identifier	exit_code		8883450	1					
ANR	8883504	Parameter	ref * perror_object	1044:11:39652:39670	8883450	3	True				
ANR	8883505	ParameterType	ref *		8883450	0					
ANR	8883506	Identifier	perror_object		8883450	1					
ANR	8883507	CFGEntryNode	ENTRY		8883450		True				
ANR	8883508	CFGExitNode	EXIT		8883450		True				
ANR	8883509	Symbol	perror_object		8883450						
ANR	8883510	Symbol	minst		8883450						
ANR	8883511	Symbol	code		8883450						
ANR	8883512	Symbol	minst -> heap		8883450						
ANR	8883513	Symbol	exit_code		8883450						
ANR	8883514	Symbol	* minst		8883450						
ANR	8883515	Function	try_stdout_redirect	1070:0:40276:41604							
ANR	8883516	FunctionDef	"try_stdout_redirect (gs_main_instance * minst , const char * command , const char * filename)"		8883515	0					
ANR	8883517	CompoundStatement		1073:0:40380:41604	8883515	0					
ANR	8883518	IfStatement	"if ( strcmp ( command , ""stdout"" ) == 0 )"		8883515	0					
ANR	8883519	Condition	"strcmp ( command , ""stdout"" ) == 0"	1074:8:40390:40419	8883515	0	True				
ANR	8883520	EqualityExpression	"strcmp ( command , ""stdout"" ) == 0"		8883515	0		==			
ANR	8883521	CallExpression	"strcmp ( command , ""stdout"" )"		8883515	0					
ANR	8883522	Callee	strcmp		8883515	0					
ANR	8883523	Identifier	strcmp		8883515	0					
ANR	8883524	ArgumentList	command		8883515	1					
ANR	8883525	Argument	command		8883515	0					
ANR	8883526	Identifier	command		8883515	0					
ANR	8883527	Argument	"""stdout"""		8883515	1					
ANR	8883528	PrimaryExpression	"""stdout"""		8883515	0					
ANR	8883529	PrimaryExpression	0		8883515	1					
ANR	8883530	CompoundStatement		2:40:41:41	8883515	1					
ANR	8883531	ExpressionStatement	minst -> heap -> gs_lib_ctx -> stdout_to_stderr = 0	1075:8:40432:40477	8883515	0	True				
ANR	8883532	AssignmentExpression	minst -> heap -> gs_lib_ctx -> stdout_to_stderr = 0		8883515	0		=			
ANR	8883533	PtrMemberAccess	minst -> heap -> gs_lib_ctx -> stdout_to_stderr		8883515	0					
ANR	8883534	PtrMemberAccess	minst -> heap -> gs_lib_ctx		8883515	0					
ANR	8883535	PtrMemberAccess	minst -> heap		8883515	0					
ANR	8883536	Identifier	minst		8883515	0					
ANR	8883537	Identifier	heap		8883515	1					
ANR	8883538	Identifier	gs_lib_ctx		8883515	1					
ANR	8883539	Identifier	stdout_to_stderr		8883515	1					
ANR	8883540	PrimaryExpression	0		8883515	1					
ANR	8883541	ExpressionStatement	minst -> heap -> gs_lib_ctx -> stdout_is_redirected = 0	1076:8:40487:40536	8883515	1	True				
ANR	8883542	AssignmentExpression	minst -> heap -> gs_lib_ctx -> stdout_is_redirected = 0		8883515	0		=			
ANR	8883543	PtrMemberAccess	minst -> heap -> gs_lib_ctx -> stdout_is_redirected		8883515	0					
ANR	8883544	PtrMemberAccess	minst -> heap -> gs_lib_ctx		8883515	0					
ANR	8883545	PtrMemberAccess	minst -> heap		8883515	0					
ANR	8883546	Identifier	minst		8883515	0					
ANR	8883547	Identifier	heap		8883515	1					
ANR	8883548	Identifier	gs_lib_ctx		8883515	1					
ANR	8883549	Identifier	stdout_is_redirected		8883515	1					
ANR	8883550	PrimaryExpression	0		8883515	1					
ANR	8883551	IfStatement	if ( minst -> heap -> gs_lib_ctx -> fstdout2 && ( minst -> heap -> gs_lib_ctx -> fstdout2 != minst -> heap -> gs_lib_ctx -> fstdout ) && ( minst -> heap -> gs_lib_ctx -> fstdout2 != minst -> heap -> gs_lib_ctx -> fstderr ) )		8883515	2					
ANR	8883552	Condition	minst -> heap -> gs_lib_ctx -> fstdout2 && ( minst -> heap -> gs_lib_ctx -> fstdout2 != minst -> heap -> gs_lib_ctx -> fstdout ) && ( minst -> heap -> gs_lib_ctx -> fstdout2 != minst -> heap -> gs_lib_ctx -> fstderr )	1080:12:40660:40866	8883515	0	True				
ANR	8883553	AndExpression	minst -> heap -> gs_lib_ctx -> fstdout2 && ( minst -> heap -> gs_lib_ctx -> fstdout2 != minst -> heap -> gs_lib_ctx -> fstdout ) && ( minst -> heap -> gs_lib_ctx -> fstdout2 != minst -> heap -> gs_lib_ctx -> fstderr )		8883515	0		&&			
ANR	8883554	PtrMemberAccess	minst -> heap -> gs_lib_ctx -> fstdout2		8883515	0					
ANR	8883555	PtrMemberAccess	minst -> heap -> gs_lib_ctx		8883515	0					
ANR	8883556	PtrMemberAccess	minst -> heap		8883515	0					
ANR	8883557	Identifier	minst		8883515	0					
ANR	8883558	Identifier	heap		8883515	1					
ANR	8883559	Identifier	gs_lib_ctx		8883515	1					
ANR	8883560	Identifier	fstdout2		8883515	1					
ANR	8883561	AndExpression	( minst -> heap -> gs_lib_ctx -> fstdout2 != minst -> heap -> gs_lib_ctx -> fstdout ) && ( minst -> heap -> gs_lib_ctx -> fstdout2 != minst -> heap -> gs_lib_ctx -> fstderr )		8883515	1		&&			
ANR	8883562	EqualityExpression	minst -> heap -> gs_lib_ctx -> fstdout2 != minst -> heap -> gs_lib_ctx -> fstdout		8883515	0		!=			
ANR	8883563	PtrMemberAccess	minst -> heap -> gs_lib_ctx -> fstdout2		8883515	0					
ANR	8883564	PtrMemberAccess	minst -> heap -> gs_lib_ctx		8883515	0					
ANR	8883565	PtrMemberAccess	minst -> heap		8883515	0					
ANR	8883566	Identifier	minst		8883515	0					
ANR	8883567	Identifier	heap		8883515	1					
ANR	8883568	Identifier	gs_lib_ctx		8883515	1					
ANR	8883569	Identifier	fstdout2		8883515	1					
ANR	8883570	PtrMemberAccess	minst -> heap -> gs_lib_ctx -> fstdout		8883515	1					
ANR	8883571	PtrMemberAccess	minst -> heap -> gs_lib_ctx		8883515	0					
ANR	8883572	PtrMemberAccess	minst -> heap		8883515	0					
ANR	8883573	Identifier	minst		8883515	0					
ANR	8883574	Identifier	heap		8883515	1					
ANR	8883575	Identifier	gs_lib_ctx		8883515	1					
ANR	8883576	Identifier	fstdout		8883515	1					
ANR	8883577	EqualityExpression	minst -> heap -> gs_lib_ctx -> fstdout2 != minst -> heap -> gs_lib_ctx -> fstderr		8883515	1		!=			
ANR	8883578	PtrMemberAccess	minst -> heap -> gs_lib_ctx -> fstdout2		8883515	0					
ANR	8883579	PtrMemberAccess	minst -> heap -> gs_lib_ctx		8883515	0					
ANR	8883580	PtrMemberAccess	minst -> heap		8883515	0					
ANR	8883581	Identifier	minst		8883515	0					
ANR	8883582	Identifier	heap		8883515	1					
ANR	8883583	Identifier	gs_lib_ctx		8883515	1					
ANR	8883584	Identifier	fstdout2		8883515	1					
ANR	8883585	PtrMemberAccess	minst -> heap -> gs_lib_ctx -> fstderr		8883515	1					
ANR	8883586	PtrMemberAccess	minst -> heap -> gs_lib_ctx		8883515	0					
ANR	8883587	PtrMemberAccess	minst -> heap		8883515	0					
ANR	8883588	Identifier	minst		8883515	0					
ANR	8883589	Identifier	heap		8883515	1					
ANR	8883590	Identifier	gs_lib_ctx		8883515	1					
ANR	8883591	Identifier	fstderr		8883515	1					
ANR	8883592	CompoundStatement		10:88:488:488	8883515	1					
ANR	8883593	ExpressionStatement	fclose ( minst -> heap -> gs_lib_ctx -> fstdout2 )	1083:12:40883:40924	8883515	0	True				
ANR	8883594	CallExpression	fclose ( minst -> heap -> gs_lib_ctx -> fstdout2 )		8883515	0					
ANR	8883595	Callee	fclose		8883515	0					
ANR	8883596	Identifier	fclose		8883515	0					
ANR	8883597	ArgumentList	minst -> heap -> gs_lib_ctx -> fstdout2		8883515	1					
ANR	8883598	Argument	minst -> heap -> gs_lib_ctx -> fstdout2		8883515	0					
ANR	8883599	PtrMemberAccess	minst -> heap -> gs_lib_ctx -> fstdout2		8883515	0					
ANR	8883600	PtrMemberAccess	minst -> heap -> gs_lib_ctx		8883515	0					
ANR	8883601	PtrMemberAccess	minst -> heap		8883515	0					
ANR	8883602	Identifier	minst		8883515	0					
ANR	8883603	Identifier	heap		8883515	1					
ANR	8883604	Identifier	gs_lib_ctx		8883515	1					
ANR	8883605	Identifier	fstdout2		8883515	1					
ANR	8883606	ExpressionStatement	minst -> heap -> gs_lib_ctx -> fstdout2 = ( FILE * ) NULL	1084:12:40938:40986	8883515	1	True				
ANR	8883607	AssignmentExpression	minst -> heap -> gs_lib_ctx -> fstdout2 = ( FILE * ) NULL		8883515	0		=			
ANR	8883608	PtrMemberAccess	minst -> heap -> gs_lib_ctx -> fstdout2		8883515	0					
ANR	8883609	PtrMemberAccess	minst -> heap -> gs_lib_ctx		8883515	0					
ANR	8883610	PtrMemberAccess	minst -> heap		8883515	0					
ANR	8883611	Identifier	minst		8883515	0					
ANR	8883612	Identifier	heap		8883515	1					
ANR	8883613	Identifier	gs_lib_ctx		8883515	1					
ANR	8883614	Identifier	fstdout2		8883515	1					
ANR	8883615	CastExpression	( FILE * ) NULL		8883515	1					
ANR	8883616	CastTarget	FILE *		8883515	0					
ANR	8883617	Identifier	NULL		8883515	1					
ANR	8883618	IfStatement	"if ( ( filename != 0 ) && strlen ( filename ) && strcmp ( filename , ""-"" ) && strcmp ( filename , ""%stdout"" ) )"		8883515	3					
ANR	8883619	Condition	"( filename != 0 ) && strlen ( filename ) && strcmp ( filename , ""-"" ) && strcmp ( filename , ""%stdout"" )"	1087:13:41076:41178	8883515	0	True				
ANR	8883620	AndExpression	"( filename != 0 ) && strlen ( filename ) && strcmp ( filename , ""-"" ) && strcmp ( filename , ""%stdout"" )"		8883515	0		&&			
ANR	8883621	EqualityExpression	filename != 0		8883515	0		!=			
ANR	8883622	Identifier	filename		8883515	0					
ANR	8883623	PrimaryExpression	0		8883515	1					
ANR	8883624	AndExpression	"strlen ( filename ) && strcmp ( filename , ""-"" ) && strcmp ( filename , ""%stdout"" )"		8883515	1		&&			
ANR	8883625	CallExpression	strlen ( filename )		8883515	0					
ANR	8883626	Callee	strlen		8883515	0					
ANR	8883627	Identifier	strlen		8883515	0					
ANR	8883628	ArgumentList	filename		8883515	1					
ANR	8883629	Argument	filename		8883515	0					
ANR	8883630	Identifier	filename		8883515	0					
ANR	8883631	AndExpression	"strcmp ( filename , ""-"" ) && strcmp ( filename , ""%stdout"" )"		8883515	1		&&			
ANR	8883632	CallExpression	"strcmp ( filename , ""-"" )"		8883515	0					
ANR	8883633	Callee	strcmp		8883515	0					
ANR	8883634	Identifier	strcmp		8883515	0					
ANR	8883635	ArgumentList	filename		8883515	1					
ANR	8883636	Argument	filename		8883515	0					
ANR	8883637	Identifier	filename		8883515	0					
ANR	8883638	Argument	"""-"""		8883515	1					
ANR	8883639	PrimaryExpression	"""-"""		8883515	0					
ANR	8883640	CallExpression	"strcmp ( filename , ""%stdout"" )"		8883515	1					
ANR	8883641	Callee	strcmp		8883515	0					
ANR	8883642	Identifier	strcmp		8883515	0					
ANR	8883643	ArgumentList	filename		8883515	1					
ANR	8883644	Argument	filename		8883515	0					
ANR	8883645	Identifier	filename		8883515	0					
ANR	8883646	Argument	"""%stdout"""		8883515	1					
ANR	8883647	PrimaryExpression	"""%stdout"""		8883515	0					
ANR	8883648	CompoundStatement		16:67:801:801	8883515	1					
ANR	8883649	IfStatement	"if ( strcmp ( filename , ""%stderr"" ) == 0 )"		8883515	0					
ANR	8883650	Condition	"strcmp ( filename , ""%stderr"" ) == 0"	1089:16:41200:41231	8883515	0	True				
ANR	8883651	EqualityExpression	"strcmp ( filename , ""%stderr"" ) == 0"		8883515	0		==			
ANR	8883652	CallExpression	"strcmp ( filename , ""%stderr"" )"		8883515	0					
ANR	8883653	Callee	strcmp		8883515	0					
ANR	8883654	Identifier	strcmp		8883515	0					
ANR	8883655	ArgumentList	filename		8883515	1					
ANR	8883656	Argument	filename		8883515	0					
ANR	8883657	Identifier	filename		8883515	0					
ANR	8883658	Argument	"""%stderr"""		8883515	1					
ANR	8883659	PrimaryExpression	"""%stderr"""		8883515	0					
ANR	8883660	PrimaryExpression	0		8883515	1					
ANR	8883661	CompoundStatement		17:50:853:853	8883515	1					
ANR	8883662	ExpressionStatement	minst -> heap -> gs_lib_ctx -> stdout_to_stderr = 1	1090:16:41252:41297	8883515	0	True				
ANR	8883663	AssignmentExpression	minst -> heap -> gs_lib_ctx -> stdout_to_stderr = 1		8883515	0		=			
ANR	8883664	PtrMemberAccess	minst -> heap -> gs_lib_ctx -> stdout_to_stderr		8883515	0					
ANR	8883665	PtrMemberAccess	minst -> heap -> gs_lib_ctx		8883515	0					
ANR	8883666	PtrMemberAccess	minst -> heap		8883515	0					
ANR	8883667	Identifier	minst		8883515	0					
ANR	8883668	Identifier	heap		8883515	1					
ANR	8883669	Identifier	gs_lib_ctx		8883515	1					
ANR	8883670	Identifier	stdout_to_stderr		8883515	1					
ANR	8883671	PrimaryExpression	1		8883515	1					
ANR	8883672	ElseStatement	else		8883515	0					
ANR	8883673	IfStatement	"if ( ( minst -> heap -> gs_lib_ctx -> fstdout2 = gp_fopen ( filename , ""w"" ) ) == ( FILE * ) NULL )"		8883515	0					
ANR	8883674	Condition	"( minst -> heap -> gs_lib_ctx -> fstdout2 = gp_fopen ( filename , ""w"" ) ) == ( FILE * ) NULL"	1092:21:41334:41432	8883515	0	True				
ANR	8883675	EqualityExpression	"( minst -> heap -> gs_lib_ctx -> fstdout2 = gp_fopen ( filename , ""w"" ) ) == ( FILE * ) NULL"		8883515	0		==			
ANR	8883676	AssignmentExpression	"minst -> heap -> gs_lib_ctx -> fstdout2 = gp_fopen ( filename , ""w"" )"		8883515	0		=			
ANR	8883677	PtrMemberAccess	minst -> heap -> gs_lib_ctx -> fstdout2		8883515	0					
ANR	8883678	PtrMemberAccess	minst -> heap -> gs_lib_ctx		8883515	0					
ANR	8883679	PtrMemberAccess	minst -> heap		8883515	0					
ANR	8883680	Identifier	minst		8883515	0					
ANR	8883681	Identifier	heap		8883515	1					
ANR	8883682	Identifier	gs_lib_ctx		8883515	1					
ANR	8883683	Identifier	fstdout2		8883515	1					
ANR	8883684	CallExpression	"gp_fopen ( filename , ""w"" )"		8883515	1					
ANR	8883685	Callee	gp_fopen		8883515	0					
ANR	8883686	Identifier	gp_fopen		8883515	0					
ANR	8883687	ArgumentList	filename		8883515	1					
ANR	8883688	Argument	filename		8883515	0					
ANR	8883689	Identifier	filename		8883515	0					
ANR	8883690	Argument	"""w"""		8883515	1					
ANR	8883691	PrimaryExpression	"""w"""		8883515	0					
ANR	8883692	CastExpression	( FILE * ) NULL		8883515	1					
ANR	8883693	CastTarget	FILE *		8883515	0					
ANR	8883694	Identifier	NULL		8883515	1					
ANR	8883695	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	1094:16:41451:41491	8883515	1	True				
ANR	8883696	CallExpression	return_error ( gs_error_invalidfileaccess )		8883515	0					
ANR	8883697	Callee	return_error		8883515	0					
ANR	8883698	Identifier	return_error		8883515	0					
ANR	8883699	ArgumentList	gs_error_invalidfileaccess		8883515	1					
ANR	8883700	Argument	gs_error_invalidfileaccess		8883515	0					
ANR	8883701	Identifier	gs_error_invalidfileaccess		8883515	0					
ANR	8883702	ExpressionStatement	minst -> heap -> gs_lib_ctx -> stdout_is_redirected = 1	1095:12:41505:41554	8883515	1	True				
ANR	8883703	AssignmentExpression	minst -> heap -> gs_lib_ctx -> stdout_is_redirected = 1		8883515	0		=			
ANR	8883704	PtrMemberAccess	minst -> heap -> gs_lib_ctx -> stdout_is_redirected		8883515	0					
ANR	8883705	PtrMemberAccess	minst -> heap -> gs_lib_ctx		8883515	0					
ANR	8883706	PtrMemberAccess	minst -> heap		8883515	0					
ANR	8883707	Identifier	minst		8883515	0					
ANR	8883708	Identifier	heap		8883515	1					
ANR	8883709	Identifier	gs_lib_ctx		8883515	1					
ANR	8883710	Identifier	stdout_is_redirected		8883515	1					
ANR	8883711	PrimaryExpression	1		8883515	1					
ANR	8883712	ReturnStatement	return 0 ;	1097:8:41574:41582	8883515	4	True				
ANR	8883713	PrimaryExpression	0		8883515	0					
ANR	8883714	ReturnStatement	return 1 ;	1099:4:41594:41602	8883515	1	True				
ANR	8883715	PrimaryExpression	1		8883515	0					
ANR	8883716	ReturnType	static int		8883515	1					
ANR	8883717	Identifier	try_stdout_redirect		8883515	2					
ANR	8883718	ParameterList	"gs_main_instance * minst , const char * command , const char * filename"		8883515	3					
ANR	8883719	Parameter	gs_main_instance * minst	1071:20:40307:40330	8883515	0	True				
ANR	8883720	ParameterType	gs_main_instance *		8883515	0					
ANR	8883721	Identifier	minst		8883515	1					
ANR	8883722	Parameter	const char * command	1072:4:40337:40355	8883515	1	True				
ANR	8883723	ParameterType	const char *		8883515	0					
ANR	8883724	Identifier	command		8883515	1					
ANR	8883725	Parameter	const char * filename	1072:25:40358:40377	8883515	2	True				
ANR	8883726	ParameterType	const char *		8883515	0					
ANR	8883727	Identifier	filename		8883515	1					
ANR	8883728	CFGEntryNode	ENTRY		8883515		True				
ANR	8883729	CFGExitNode	EXIT		8883515		True				
ANR	8883730	Symbol	strcmp		8883515						
ANR	8883731	Symbol	minst -> heap -> gs_lib_ctx -> fstdout2		8883515						
ANR	8883732	Symbol	minst		8883515						
ANR	8883733	Symbol	NULL		8883515						
ANR	8883734	Symbol	minst -> heap -> gs_lib_ctx -> stdout_is_redirected		8883515						
ANR	8883735	Symbol	minst -> heap		8883515						
ANR	8883736	Symbol	minst -> heap -> gs_lib_ctx		8883515						
ANR	8883737	Symbol	* minst -> heap -> gs_lib_ctx		8883515						
ANR	8883738	Symbol	command		8883515						
ANR	8883739	Symbol	* minst		8883515						
ANR	8883740	Symbol	minst -> heap -> gs_lib_ctx -> fstdout		8883515						
ANR	8883741	Symbol	strlen		8883515						
ANR	8883742	Symbol	filename		8883515						
ANR	8883743	Symbol	minst -> heap -> gs_lib_ctx -> stdout_to_stderr		8883515						
ANR	8883744	Symbol	* * * minst		8883515						
ANR	8883745	Symbol	* * minst		8883515						
ANR	8883746	Symbol	* minst -> heap		8883515						
ANR	8883747	Symbol	gp_fopen		8883515						
ANR	8883748	Symbol	minst -> heap -> gs_lib_ctx -> fstderr		8883515						
ANR	8883749	Symbol	gs_error_invalidfileaccess		8883515						
ANR	8883750	Symbol	* * minst -> heap		8883515						
ANR	8883751	DeclStmt									
ANR	8883752	Decl							const char	const char [ ]	help_usage1
ANR	8883753	DeclStmt									
ANR	8883754	Decl							const char	const char [ ]	help_usage2
ANR	8883755	DeclStmt									
ANR	8883756	Decl							const char	const char [ ]	help_debug
ANR	8883757	DeclStmt									
ANR	8883758	Decl							const char	const char [ ]	help_trailer
ANR	8883759	DeclStmt									
ANR	8883760	Decl							const char	const char [ ]	help_devices
ANR	8883761	DeclStmt									
ANR	8883762	Decl							const char	const char [ ]	help_default_device
ANR	8883763	DeclStmt									
ANR	8883764	Decl							const char	const char [ ]	help_emulators
ANR	8883765	DeclStmt									
ANR	8883766	Decl							const char	const char [ ]	help_paths
ANR	8883767	DeclStmt									
ANR	8883768	Decl							const char	const char [ ]	help_fontconfig
ANR	8883769	DeclStmt									
ANR	8883770	Decl							const char	const char [ ]	help_fontconfig
ANR	8883771	Function	print_help	1139:0:43220:44187							
ANR	8883772	FunctionDef	print_help (gs_main_instance * minst)		8883771	0					
ANR	8883773	CompoundStatement		1141:0:43269:44187	8883771	0					
ANR	8883774	IdentifierDeclStatement	"int i , have_rom_device = 0 ;"	1142:4:43275:43301	8883771	0	True				
ANR	8883775	IdentifierDecl	i		8883771	0					
ANR	8883776	IdentifierDeclType	int		8883771	0					
ANR	8883777	Identifier	i		8883771	1					
ANR	8883778	IdentifierDecl	have_rom_device = 0		8883771	1					
ANR	8883779	IdentifierDeclType	int		8883771	0					
ANR	8883780	Identifier	have_rom_device		8883771	1					
ANR	8883781	AssignmentExpression	have_rom_device = 0		8883771	2		=			
ANR	8883782	Identifier	have_rom_device		8883771	0					
ANR	8883783	PrimaryExpression	0		8883771	1					
ANR	8883784	ExpressionStatement	print_revision ( minst )	1144:4:43308:43329	8883771	1	True				
ANR	8883785	CallExpression	print_revision ( minst )		8883771	0					
ANR	8883786	Callee	print_revision		8883771	0					
ANR	8883787	Identifier	print_revision		8883771	0					
ANR	8883788	ArgumentList	minst		8883771	1					
ANR	8883789	Argument	minst		8883771	0					
ANR	8883790	Identifier	minst		8883771	0					
ANR	8883791	ExpressionStatement	print_usage ( minst )	1145:4:43335:43353	8883771	2	True				
ANR	8883792	CallExpression	print_usage ( minst )		8883771	0					
ANR	8883793	Callee	print_usage		8883771	0					
ANR	8883794	Identifier	print_usage		8883771	0					
ANR	8883795	ArgumentList	minst		8883771	1					
ANR	8883796	Argument	minst		8883771	0					
ANR	8883797	Identifier	minst		8883771	0					
ANR	8883798	ExpressionStatement	print_emulators ( minst )	1146:4:43359:43381	8883771	3	True				
ANR	8883799	CallExpression	print_emulators ( minst )		8883771	0					
ANR	8883800	Callee	print_emulators		8883771	0					
ANR	8883801	Identifier	print_emulators		8883771	0					
ANR	8883802	ArgumentList	minst		8883771	1					
ANR	8883803	Argument	minst		8883771	0					
ANR	8883804	Identifier	minst		8883771	0					
ANR	8883805	ExpressionStatement	print_devices ( minst )	1147:4:43387:43407	8883771	4	True				
ANR	8883806	CallExpression	print_devices ( minst )		8883771	0					
ANR	8883807	Callee	print_devices		8883771	0					
ANR	8883808	Identifier	print_devices		8883771	0					
ANR	8883809	ArgumentList	minst		8883771	1					
ANR	8883810	Argument	minst		8883771	0					
ANR	8883811	Identifier	minst		8883771	0					
ANR	8883812	ExpressionStatement	print_paths ( minst )	1148:4:43413:43431	8883771	5	True				
ANR	8883813	CallExpression	print_paths ( minst )		8883771	0					
ANR	8883814	Callee	print_paths		8883771	0					
ANR	8883815	Identifier	print_paths		8883771	0					
ANR	8883816	ArgumentList	minst		8883771	1					
ANR	8883817	Argument	minst		8883771	0					
ANR	8883818	Identifier	minst		8883771	0					
ANR	8883819	ForStatement	for ( i = 0 ; i < gx_io_device_table_count ; i ++ )		8883771	6					
ANR	8883820	ForInit	i = 0 ;	1150:9:43485:43490	8883771	0	True				
ANR	8883821	AssignmentExpression	i = 0		8883771	0		=			
ANR	8883822	Identifier	i		8883771	0					
ANR	8883823	PrimaryExpression	0		8883771	1					
ANR	8883824	Condition	i < gx_io_device_table_count	1150:16:43492:43519	8883771	1	True				
ANR	8883825	RelationalExpression	i < gx_io_device_table_count		8883771	0		<			
ANR	8883826	Identifier	i		8883771	0					
ANR	8883827	Identifier	gx_io_device_table_count		8883771	1					
ANR	8883828	PostIncDecOperationExpression	i ++	1150:46:43522:43524	8883771	2	True				
ANR	8883829	Identifier	i		8883771	0					
ANR	8883830	IncDec	++		8883771	1					
ANR	8883831	CompoundStatement		12:8:326:358	8883771	3					
ANR	8883832	IdentifierDeclStatement	const gx_io_device * iodev = gx_io_device_table [ i ] ;	1151:8:43537:43586	8883771	0	True				
ANR	8883833	IdentifierDecl	* iodev = gx_io_device_table [ i ]		8883771	0					
ANR	8883834	IdentifierDeclType	const gx_io_device *		8883771	0					
ANR	8883835	Identifier	iodev		8883771	1					
ANR	8883836	AssignmentExpression	* iodev = gx_io_device_table [ i ]		8883771	2		=			
ANR	8883837	Identifier	iodev		8883771	0					
ANR	8883838	ArrayIndexing	gx_io_device_table [ i ]		8883771	1					
ANR	8883839	Identifier	gx_io_device_table		8883771	0					
ANR	8883840	Identifier	i		8883771	1					
ANR	8883841	IdentifierDeclStatement	const char * dname = iodev -> dname ;	1152:8:43596:43628	8883771	1	True				
ANR	8883842	IdentifierDecl	* dname = iodev -> dname		8883771	0					
ANR	8883843	IdentifierDeclType	const char *		8883771	0					
ANR	8883844	Identifier	dname		8883771	1					
ANR	8883845	AssignmentExpression	* dname = iodev -> dname		8883771	2		=			
ANR	8883846	Identifier	dname		8883771	0					
ANR	8883847	PtrMemberAccess	iodev -> dname		8883771	1					
ANR	8883848	Identifier	iodev		8883771	0					
ANR	8883849	Identifier	dname		8883771	1					
ANR	8883850	IfStatement	"if ( dname && strlen ( dname ) == 5 && ! memcmp ( ""%rom%"" , dname , 5 ) )"		8883771	2					
ANR	8883851	Condition	"dname && strlen ( dname ) == 5 && ! memcmp ( ""%rom%"" , dname , 5 )"	1154:12:43643:43699	8883771	0	True				
ANR	8883852	AndExpression	"dname && strlen ( dname ) == 5 && ! memcmp ( ""%rom%"" , dname , 5 )"		8883771	0		&&			
ANR	8883853	Identifier	dname		8883771	0					
ANR	8883854	AndExpression	"strlen ( dname ) == 5 && ! memcmp ( ""%rom%"" , dname , 5 )"		8883771	1		&&			
ANR	8883855	EqualityExpression	strlen ( dname ) == 5		8883771	0		==			
ANR	8883856	CallExpression	strlen ( dname )		8883771	0					
ANR	8883857	Callee	strlen		8883771	0					
ANR	8883858	Identifier	strlen		8883771	0					
ANR	8883859	ArgumentList	dname		8883771	1					
ANR	8883860	Argument	dname		8883771	0					
ANR	8883861	Identifier	dname		8883771	0					
ANR	8883862	PrimaryExpression	5		8883771	1					
ANR	8883863	UnaryOperationExpression	"! memcmp ( ""%rom%"" , dname , 5 )"		8883771	1					
ANR	8883864	UnaryOperator	!		8883771	0					
ANR	8883865	CallExpression	"memcmp ( ""%rom%"" , dname , 5 )"		8883771	1					
ANR	8883866	Callee	memcmp		8883771	0					
ANR	8883867	Identifier	memcmp		8883771	0					
ANR	8883868	ArgumentList	"""%rom%"""		8883771	1					
ANR	8883869	Argument	"""%rom%"""		8883771	0					
ANR	8883870	PrimaryExpression	"""%rom%"""		8883771	0					
ANR	8883871	Argument	dname		8883771	1					
ANR	8883872	Identifier	dname		8883771	0					
ANR	8883873	Argument	5		8883771	2					
ANR	8883874	PrimaryExpression	5		8883771	0					
ANR	8883875	CompoundStatement		17:12:552:625	8883771	1					
ANR	8883876	IdentifierDeclStatement	struct stat pstat ;	1155:12:43716:43733	8883771	0	True				
ANR	8883877	IdentifierDecl	pstat		8883771	0					
ANR	8883878	IdentifierDeclType	struct stat		8883771	0					
ANR	8883879	Identifier	pstat		8883771	1					
ANR	8883880	IdentifierDeclStatement	"int code = iodev -> procs . file_status ( ( gx_io_device * ) iodev , dname , & pstat ) ;"	1157:12:43822:43895	8883771	1	True				
ANR	8883881	IdentifierDecl	"code = iodev -> procs . file_status ( ( gx_io_device * ) iodev , dname , & pstat )"		8883771	0					
ANR	8883882	IdentifierDeclType	int		8883771	0					
ANR	8883883	Identifier	code		8883771	1					
ANR	8883884	AssignmentExpression	"code = iodev -> procs . file_status ( ( gx_io_device * ) iodev , dname , & pstat )"		8883771	2		=			
ANR	8883885	Identifier	code		8883771	0					
ANR	8883886	CallExpression	"iodev -> procs . file_status ( ( gx_io_device * ) iodev , dname , & pstat )"		8883771	1					
ANR	8883887	Callee	iodev -> procs . file_status		8883771	0					
ANR	8883888	MemberAccess	iodev -> procs . file_status		8883771	0					
ANR	8883889	PtrMemberAccess	iodev -> procs		8883771	0					
ANR	8883890	Identifier	iodev		8883771	0					
ANR	8883891	Identifier	procs		8883771	1					
ANR	8883892	Identifier	file_status		8883771	1					
ANR	8883893	ArgumentList	( gx_io_device * ) iodev		8883771	1					
ANR	8883894	Argument	( gx_io_device * ) iodev		8883771	0					
ANR	8883895	CastExpression	( gx_io_device * ) iodev		8883771	0					
ANR	8883896	CastTarget	gx_io_device *		8883771	0					
ANR	8883897	Identifier	iodev		8883771	1					
ANR	8883898	Argument	dname		8883771	1					
ANR	8883899	Identifier	dname		8883771	0					
ANR	8883900	Argument	& pstat		8883771	2					
ANR	8883901	UnaryOperationExpression	& pstat		8883771	0					
ANR	8883902	UnaryOperator	&		8883771	0					
ANR	8883903	Identifier	pstat		8883771	1					
ANR	8883904	IfStatement	if ( code != gs_error_unregistered )		8883771	2					
ANR	8883905	Condition	code != gs_error_unregistered	1158:16:43913:43941	8883771	0	True				
ANR	8883906	EqualityExpression	code != gs_error_unregistered		8883771	0		!=			
ANR	8883907	Identifier	code		8883771	0					
ANR	8883908	Identifier	gs_error_unregistered		8883771	1					
ANR	8883909	CompoundStatement		18:46:673:673	8883771	1					
ANR	8883910	ExpressionStatement	have_rom_device = 1	1159:16:43961:43980	8883771	0	True				
ANR	8883911	AssignmentExpression	have_rom_device = 1		8883771	0		=			
ANR	8883912	Identifier	have_rom_device		8883771	0					
ANR	8883913	PrimaryExpression	1		8883771	1					
ANR	8883914	BreakStatement	break ;	1161:12:44008:44013	8883771	3	True				
ANR	8883915	IfStatement	if ( have_rom_device )		8883771	7					
ANR	8883916	Condition	have_rom_device	1164:8:44039:44053	8883771	0	True				
ANR	8883917	Identifier	have_rom_device		8883771	0					
ANR	8883918	CompoundStatement		24:25:786:786	8883771	1					
ANR	8883919	ExpressionStatement	"outprintf ( minst -> heap , ""Initialization files are compiled into the executable.\\n"" )"	1165:8:44066:44148	8883771	0	True				
ANR	8883920	CallExpression	"outprintf ( minst -> heap , ""Initialization files are compiled into the executable.\\n"" )"		8883771	0					
ANR	8883921	Callee	outprintf		8883771	0					
ANR	8883922	Identifier	outprintf		8883771	0					
ANR	8883923	ArgumentList	minst -> heap		8883771	1					
ANR	8883924	Argument	minst -> heap		8883771	0					
ANR	8883925	PtrMemberAccess	minst -> heap		8883771	0					
ANR	8883926	Identifier	minst		8883771	0					
ANR	8883927	Identifier	heap		8883771	1					
ANR	8883928	Argument	"""Initialization files are compiled into the executable.\\n"""		8883771	1					
ANR	8883929	PrimaryExpression	"""Initialization files are compiled into the executable.\\n"""		8883771	0					
ANR	8883930	ExpressionStatement	print_help_trailer ( minst )	1167:4:44160:44185	8883771	8	True				
ANR	8883931	CallExpression	print_help_trailer ( minst )		8883771	0					
ANR	8883932	Callee	print_help_trailer		8883771	0					
ANR	8883933	Identifier	print_help_trailer		8883771	0					
ANR	8883934	ArgumentList	minst		8883771	1					
ANR	8883935	Argument	minst		8883771	0					
ANR	8883936	Identifier	minst		8883771	0					
ANR	8883937	ReturnType	static void		8883771	1					
ANR	8883938	Identifier	print_help		8883771	2					
ANR	8883939	ParameterList	gs_main_instance * minst		8883771	3					
ANR	8883940	Parameter	gs_main_instance * minst	1140:11:43243:43266	8883771	0	True				
ANR	8883941	ParameterType	gs_main_instance *		8883771	0					
ANR	8883942	Identifier	minst		8883771	1					
ANR	8883943	CFGEntryNode	ENTRY		8883771		True				
ANR	8883944	CFGExitNode	EXIT		8883771		True				
ANR	8883945	Symbol	gx_io_device_table_count		8883771						
ANR	8883946	Symbol	minst		8883771						
ANR	8883947	Symbol	& pstat		8883771						
ANR	8883948	Symbol	gs_error_unregistered		8883771						
ANR	8883949	Symbol	code		8883771						
ANR	8883950	Symbol	iodev -> dname		8883771						
ANR	8883951	Symbol	pstat		8883771						
ANR	8883952	Symbol	* iodev		8883771						
ANR	8883953	Symbol	minst -> heap		8883771						
ANR	8883954	Symbol	i		8883771						
ANR	8883955	Symbol	gx_io_device_table		8883771						
ANR	8883956	Symbol	* minst		8883771						
ANR	8883957	Symbol	* gx_io_device_table		8883771						
ANR	8883958	Symbol	strlen		8883771						
ANR	8883959	Symbol	* i		8883771						
ANR	8883960	Symbol	memcmp		8883771						
ANR	8883961	Symbol	iodev		8883771						
ANR	8883962	Symbol	iodev -> procs . file_status		8883771						
ANR	8883963	Symbol	dname		8883771						
ANR	8883964	Symbol	have_rom_device		8883771						
ANR	8883965	Symbol	iodev -> procs		8883771						
ANR	8883966	Function	print_revision	1171:0:44246:44583							
ANR	8883967	FunctionDef	print_revision (const gs_main_instance * minst)		8883966	0					
ANR	8883968	CompoundStatement		1173:0:44304:44583	8883966	0					
ANR	8883969	ExpressionStatement	"printf_program_ident ( minst -> heap , gs_product , gs_revision )"	1174:4:44310:44368	8883966	0	True				
ANR	8883970	CallExpression	"printf_program_ident ( minst -> heap , gs_product , gs_revision )"		8883966	0					
ANR	8883971	Callee	printf_program_ident		8883966	0					
ANR	8883972	Identifier	printf_program_ident		8883966	0					
ANR	8883973	ArgumentList	minst -> heap		8883966	1					
ANR	8883974	Argument	minst -> heap		8883966	0					
ANR	8883975	PtrMemberAccess	minst -> heap		8883966	0					
ANR	8883976	Identifier	minst		8883966	0					
ANR	8883977	Identifier	heap		8883966	1					
ANR	8883978	Argument	gs_product		8883966	1					
ANR	8883979	Identifier	gs_product		8883966	0					
ANR	8883980	Argument	gs_revision		8883966	2					
ANR	8883981	Identifier	gs_revision		8883966	0					
ANR	8883982	ExpressionStatement	"outprintf ( minst -> heap , "" (%d-%02d-%02d)\\n%s\\n"" , ( int ) ( gs_revisiondate / 10000 ) , ( int ) ( gs_revisiondate / 100 % 100 ) , ( int ) ( gs_revisiondate % 100 ) , gs_copyright )"	1175:4:44374:44581	8883966	1	True				
ANR	8883983	CallExpression	"outprintf ( minst -> heap , "" (%d-%02d-%02d)\\n%s\\n"" , ( int ) ( gs_revisiondate / 10000 ) , ( int ) ( gs_revisiondate / 100 % 100 ) , ( int ) ( gs_revisiondate % 100 ) , gs_copyright )"		8883966	0					
ANR	8883984	Callee	outprintf		8883966	0					
ANR	8883985	Identifier	outprintf		8883966	0					
ANR	8883986	ArgumentList	minst -> heap		8883966	1					
ANR	8883987	Argument	minst -> heap		8883966	0					
ANR	8883988	PtrMemberAccess	minst -> heap		8883966	0					
ANR	8883989	Identifier	minst		8883966	0					
ANR	8883990	Identifier	heap		8883966	1					
ANR	8883991	Argument	""" (%d-%02d-%02d)\\n%s\\n"""		8883966	1					
ANR	8883992	PrimaryExpression	""" (%d-%02d-%02d)\\n%s\\n"""		8883966	0					
ANR	8883993	Argument	( int ) ( gs_revisiondate / 10000 )		8883966	2					
ANR	8883994	CastExpression	( int ) ( gs_revisiondate / 10000 )		8883966	0					
ANR	8883995	CastTarget	int		8883966	0					
ANR	8883996	MultiplicativeExpression	gs_revisiondate / 10000		8883966	1		/			
ANR	8883997	Identifier	gs_revisiondate		8883966	0					
ANR	8883998	PrimaryExpression	10000		8883966	1					
ANR	8883999	Argument	( int ) ( gs_revisiondate / 100 % 100 )		8883966	3					
ANR	8884000	CastExpression	( int ) ( gs_revisiondate / 100 % 100 )		8883966	0					
ANR	8884001	CastTarget	int		8883966	0					
ANR	8884002	MultiplicativeExpression	gs_revisiondate / 100 % 100		8883966	1		/			
ANR	8884003	Identifier	gs_revisiondate		8883966	0					
ANR	8884004	MultiplicativeExpression	100 % 100		8883966	1		%			
ANR	8884005	PrimaryExpression	100		8883966	0					
ANR	8884006	PrimaryExpression	100		8883966	1					
ANR	8884007	Argument	( int ) ( gs_revisiondate % 100 )		8883966	4					
ANR	8884008	CastExpression	( int ) ( gs_revisiondate % 100 )		8883966	0					
ANR	8884009	CastTarget	int		8883966	0					
ANR	8884010	MultiplicativeExpression	gs_revisiondate % 100		8883966	1		%			
ANR	8884011	Identifier	gs_revisiondate		8883966	0					
ANR	8884012	PrimaryExpression	100		8883966	1					
ANR	8884013	Argument	gs_copyright		8883966	5					
ANR	8884014	Identifier	gs_copyright		8883966	0					
ANR	8884015	ReturnType	static void		8883966	1					
ANR	8884016	Identifier	print_revision		8883966	2					
ANR	8884017	ParameterList	const gs_main_instance * minst		8883966	3					
ANR	8884018	Parameter	const gs_main_instance * minst	1172:15:44273:44301	8883966	0	True				
ANR	8884019	ParameterType	const gs_main_instance *		8883966	0					
ANR	8884020	Identifier	minst		8883966	1					
ANR	8884021	CFGEntryNode	ENTRY		8883966		True				
ANR	8884022	CFGExitNode	EXIT		8883966		True				
ANR	8884023	Symbol	minst		8883966						
ANR	8884024	Symbol	gs_revision		8883966						
ANR	8884025	Symbol	minst -> heap		8883966						
ANR	8884026	Symbol	gs_copyright		8883966						
ANR	8884027	Symbol	gs_revisiondate		8883966						
ANR	8884028	Symbol	gs_product		8883966						
ANR	8884029	Symbol	* minst		8883966						
ANR	8884030	Function	print_version	1183:0:44618:44735							
ANR	8884031	FunctionDef	print_version (const gs_main_instance * minst)		8884030	0					
ANR	8884032	CompoundStatement		1185:0:44675:44735	8884030	0					
ANR	8884033	ExpressionStatement	"printf_program_ident ( minst -> heap , NULL , gs_revision )"	1186:4:44681:44733	8884030	0	True				
ANR	8884034	CallExpression	"printf_program_ident ( minst -> heap , NULL , gs_revision )"		8884030	0					
ANR	8884035	Callee	printf_program_ident		8884030	0					
ANR	8884036	Identifier	printf_program_ident		8884030	0					
ANR	8884037	ArgumentList	minst -> heap		8884030	1					
ANR	8884038	Argument	minst -> heap		8884030	0					
ANR	8884039	PtrMemberAccess	minst -> heap		8884030	0					
ANR	8884040	Identifier	minst		8884030	0					
ANR	8884041	Identifier	heap		8884030	1					
ANR	8884042	Argument	NULL		8884030	1					
ANR	8884043	Identifier	NULL		8884030	0					
ANR	8884044	Argument	gs_revision		8884030	2					
ANR	8884045	Identifier	gs_revision		8884030	0					
ANR	8884046	ReturnType	static void		8884030	1					
ANR	8884047	Identifier	print_version		8884030	2					
ANR	8884048	ParameterList	const gs_main_instance * minst		8884030	3					
ANR	8884049	Parameter	const gs_main_instance * minst	1184:14:44644:44672	8884030	0	True				
ANR	8884050	ParameterType	const gs_main_instance *		8884030	0					
ANR	8884051	Identifier	minst		8884030	1					
ANR	8884052	CFGEntryNode	ENTRY		8884030		True				
ANR	8884053	CFGExitNode	EXIT		8884030		True				
ANR	8884054	Symbol	minst		8884030						
ANR	8884055	Symbol	NULL		8884030						
ANR	8884056	Symbol	gs_revision		8884030						
ANR	8884057	Symbol	minst -> heap		8884030						
ANR	8884058	Symbol	* minst		8884030						
ANR	8884059	Function	print_usage	1190:0:44769:44986							
ANR	8884060	FunctionDef	print_usage (const gs_main_instance * minst)		8884059	0					
ANR	8884061	CompoundStatement		1192:0:44824:44986	8884059	0					
ANR	8884062	ExpressionStatement	"outprintf ( minst -> heap , ""%s"" , help_usage1 )"	1193:4:44830:44871	8884059	0	True				
ANR	8884063	CallExpression	"outprintf ( minst -> heap , ""%s"" , help_usage1 )"		8884059	0					
ANR	8884064	Callee	outprintf		8884059	0					
ANR	8884065	Identifier	outprintf		8884059	0					
ANR	8884066	ArgumentList	minst -> heap		8884059	1					
ANR	8884067	Argument	minst -> heap		8884059	0					
ANR	8884068	PtrMemberAccess	minst -> heap		8884059	0					
ANR	8884069	Identifier	minst		8884059	0					
ANR	8884070	Identifier	heap		8884059	1					
ANR	8884071	Argument	"""%s"""		8884059	1					
ANR	8884072	PrimaryExpression	"""%s"""		8884059	0					
ANR	8884073	Argument	help_usage1		8884059	2					
ANR	8884074	Identifier	help_usage1		8884059	0					
ANR	8884075	ExpressionStatement	"outprintf ( minst -> heap , ""%s"" , help_usage2 )"	1194:4:44877:44918	8884059	1	True				
ANR	8884076	CallExpression	"outprintf ( minst -> heap , ""%s"" , help_usage2 )"		8884059	0					
ANR	8884077	Callee	outprintf		8884059	0					
ANR	8884078	Identifier	outprintf		8884059	0					
ANR	8884079	ArgumentList	minst -> heap		8884059	1					
ANR	8884080	Argument	minst -> heap		8884059	0					
ANR	8884081	PtrMemberAccess	minst -> heap		8884059	0					
ANR	8884082	Identifier	minst		8884059	0					
ANR	8884083	Identifier	heap		8884059	1					
ANR	8884084	Argument	"""%s"""		8884059	1					
ANR	8884085	PrimaryExpression	"""%s"""		8884059	0					
ANR	8884086	Argument	help_usage2		8884059	2					
ANR	8884087	Identifier	help_usage2		8884059	0					
ANR	8884088	ExpressionStatement	"outprintf ( minst -> heap , ""%s"" , help_debug )"	1196:4:44937:44977	8884059	2	True				
ANR	8884089	CallExpression	"outprintf ( minst -> heap , ""%s"" , help_debug )"		8884059	0					
ANR	8884090	Callee	outprintf		8884059	0					
ANR	8884091	Identifier	outprintf		8884059	0					
ANR	8884092	ArgumentList	minst -> heap		8884059	1					
ANR	8884093	Argument	minst -> heap		8884059	0					
ANR	8884094	PtrMemberAccess	minst -> heap		8884059	0					
ANR	8884095	Identifier	minst		8884059	0					
ANR	8884096	Identifier	heap		8884059	1					
ANR	8884097	Argument	"""%s"""		8884059	1					
ANR	8884098	PrimaryExpression	"""%s"""		8884059	0					
ANR	8884099	Argument	help_debug		8884059	2					
ANR	8884100	Identifier	help_debug		8884059	0					
ANR	8884101	ReturnType	static void		8884059	1					
ANR	8884102	Identifier	print_usage		8884059	2					
ANR	8884103	ParameterList	const gs_main_instance * minst		8884059	3					
ANR	8884104	Parameter	const gs_main_instance * minst	1191:12:44793:44821	8884059	0	True				
ANR	8884105	ParameterType	const gs_main_instance *		8884059	0					
ANR	8884106	Identifier	minst		8884059	1					
ANR	8884107	CFGEntryNode	ENTRY		8884059		True				
ANR	8884108	CFGExitNode	EXIT		8884059		True				
ANR	8884109	Symbol	minst		8884059						
ANR	8884110	Symbol	help_usage2		8884059						
ANR	8884111	Symbol	help_usage1		8884059						
ANR	8884112	Symbol	minst -> heap		8884059						
ANR	8884113	Symbol	help_debug		8884059						
ANR	8884114	Symbol	* minst		8884059						
ANR	8884115	Function	cmpstr	1201:0:45022:45137							
ANR	8884116	FunctionDef	"cmpstr (const void * v1 , const void * v2)"		8884115	0					
ANR	8884117	CompoundStatement		1203:0:45072:45137	8884115	0					
ANR	8884118	Statement	return	1204:4:45078:45083	8884115	0	True				
ANR	8884119	Statement	strcmp	1204:11:45085:45090	8884115	1	True				
ANR	8884120	Statement	(	1204:17:45091:45091	8884115	2	True				
ANR	8884121	Statement	*	1204:19:45093:45093	8884115	3	True				
ANR	8884122	Statement	(	1204:20:45094:45094	8884115	4	True				
ANR	8884123	Statement	char	1204:21:45095:45098	8884115	5	True				
ANR	8884124	Statement	*	1204:26:45100:45100	8884115	6	True				
ANR	8884125	Statement	const	1204:28:45102:45106	8884115	7	True				
ANR	8884126	Statement	*	1204:34:45108:45108	8884115	8	True				
ANR	8884127	Statement	)	1204:35:45109:45109	8884115	9	True				
ANR	8884128	Statement	v1	1204:36:45110:45111	8884115	10	True				
ANR	8884129	Statement	","	1204:38:45112:45112	8884115	11	True				
ANR	8884130	Statement	*	1204:40:45114:45114	8884115	12	True				
ANR	8884131	Statement	(	1204:41:45115:45115	8884115	13	True				
ANR	8884132	Statement	char	1204:42:45116:45119	8884115	14	True				
ANR	8884133	Statement	*	1204:47:45121:45121	8884115	15	True				
ANR	8884134	Statement	const	1204:49:45123:45127	8884115	16	True				
ANR	8884135	Statement	*	1204:55:45129:45129	8884115	17	True				
ANR	8884136	Statement	)	1204:56:45130:45130	8884115	18	True				
ANR	8884137	Statement	v2	1204:57:45131:45132	8884115	19	True				
ANR	8884138	Statement	)	1204:60:45134:45134	8884115	20	True				
ANR	8884139	ExpressionStatement		1204:61:45135:45135	8884115	21	True				
ANR	8884140	ReturnType	static int		8884115	1					
ANR	8884141	Identifier	cmpstr		8884115	2					
ANR	8884142	ParameterList	"const void * v1 , const void * v2"		8884115	3					
ANR	8884143	Parameter	const void * v1	1202:7:45040:45053	8884115	0	True				
ANR	8884144	ParameterType	const void *		8884115	0					
ANR	8884145	Identifier	v1		8884115	1					
ANR	8884146	Parameter	const void * v2	1202:23:45056:45069	8884115	1	True				
ANR	8884147	ParameterType	const void *		8884115	0					
ANR	8884148	Identifier	v2		8884115	1					
ANR	8884149	CFGEntryNode	ENTRY		8884115		True				
ANR	8884150	CFGExitNode	EXIT		8884115		True				
ANR	8884151	Symbol	v1		8884115						
ANR	8884152	Symbol	v2		8884115						
ANR	8884153	Function	print_devices	1208:0:45183:46882							
ANR	8884154	FunctionDef	print_devices (const gs_main_instance * minst)		8884153	0					
ANR	8884155	CompoundStatement		1210:0:45240:46882	8884153	0					
ANR	8884156	ExpressionStatement	"outprintf ( minst -> heap , ""%s"" , help_default_device )"	1211:4:45246:45295	8884153	0	True				
ANR	8884157	CallExpression	"outprintf ( minst -> heap , ""%s"" , help_default_device )"		8884153	0					
ANR	8884158	Callee	outprintf		8884153	0					
ANR	8884159	Identifier	outprintf		8884153	0					
ANR	8884160	ArgumentList	minst -> heap		8884153	1					
ANR	8884161	Argument	minst -> heap		8884153	0					
ANR	8884162	PtrMemberAccess	minst -> heap		8884153	0					
ANR	8884163	Identifier	minst		8884153	0					
ANR	8884164	Identifier	heap		8884153	1					
ANR	8884165	Argument	"""%s"""		8884153	1					
ANR	8884166	PrimaryExpression	"""%s"""		8884153	0					
ANR	8884167	Argument	help_default_device		8884153	2					
ANR	8884168	Identifier	help_default_device		8884153	0					
ANR	8884169	ExpressionStatement	"outprintf ( minst -> heap , "" %s\\n"" , gs_devicename ( gs_getdefaultdevice ( ) ) )"	1212:4:45301:45370	8884153	1	True				
ANR	8884170	CallExpression	"outprintf ( minst -> heap , "" %s\\n"" , gs_devicename ( gs_getdefaultdevice ( ) ) )"		8884153	0					
ANR	8884171	Callee	outprintf		8884153	0					
ANR	8884172	Identifier	outprintf		8884153	0					
ANR	8884173	ArgumentList	minst -> heap		8884153	1					
ANR	8884174	Argument	minst -> heap		8884153	0					
ANR	8884175	PtrMemberAccess	minst -> heap		8884153	0					
ANR	8884176	Identifier	minst		8884153	0					
ANR	8884177	Identifier	heap		8884153	1					
ANR	8884178	Argument	""" %s\\n"""		8884153	1					
ANR	8884179	PrimaryExpression	""" %s\\n"""		8884153	0					
ANR	8884180	Argument	gs_devicename ( gs_getdefaultdevice ( ) )		8884153	2					
ANR	8884181	CallExpression	gs_devicename ( gs_getdefaultdevice ( ) )		8884153	0					
ANR	8884182	Callee	gs_devicename		8884153	0					
ANR	8884183	Identifier	gs_devicename		8884153	0					
ANR	8884184	ArgumentList	gs_getdefaultdevice ( )		8884153	1					
ANR	8884185	Argument	gs_getdefaultdevice ( )		8884153	0					
ANR	8884186	CallExpression	gs_getdefaultdevice ( )		8884153	0					
ANR	8884187	Callee	gs_getdefaultdevice		8884153	0					
ANR	8884188	Identifier	gs_getdefaultdevice		8884153	0					
ANR	8884189	ArgumentList			8884153	1					
ANR	8884190	ExpressionStatement	"outprintf ( minst -> heap , ""%s"" , help_devices )"	1213:4:45376:45418	8884153	2	True				
ANR	8884191	CallExpression	"outprintf ( minst -> heap , ""%s"" , help_devices )"		8884153	0					
ANR	8884192	Callee	outprintf		8884153	0					
ANR	8884193	Identifier	outprintf		8884153	0					
ANR	8884194	ArgumentList	minst -> heap		8884153	1					
ANR	8884195	Argument	minst -> heap		8884153	0					
ANR	8884196	PtrMemberAccess	minst -> heap		8884153	0					
ANR	8884197	Identifier	minst		8884153	0					
ANR	8884198	Identifier	heap		8884153	1					
ANR	8884199	Argument	"""%s"""		8884153	1					
ANR	8884200	PrimaryExpression	"""%s"""		8884153	0					
ANR	8884201	Argument	help_devices		8884153	2					
ANR	8884202	Identifier	help_devices		8884153	0					
ANR	8884203	CompoundStatement		10:8:290:305	8884153	3					
ANR	8884204	IdentifierDeclStatement	int i ;	1215:8:45434:45439	8884153	0	True				
ANR	8884205	IdentifierDecl	i		8884153	0					
ANR	8884206	IdentifierDeclType	int		8884153	0					
ANR	8884207	Identifier	i		8884153	1					
ANR	8884208	IdentifierDeclStatement	int pos = 100 ;	1216:8:45449:45462	8884153	1	True				
ANR	8884209	IdentifierDecl	pos = 100		8884153	0					
ANR	8884210	IdentifierDeclType	int		8884153	0					
ANR	8884211	Identifier	pos		8884153	1					
ANR	8884212	AssignmentExpression	pos = 100		8884153	2		=			
ANR	8884213	Identifier	pos		8884153	0					
ANR	8884214	PrimaryExpression	100		8884153	1					
ANR	8884215	IdentifierDeclStatement	const gx_device * pdev ;	1217:8:45472:45493	8884153	2	True				
ANR	8884216	IdentifierDecl	* pdev		8884153	0					
ANR	8884217	IdentifierDeclType	const gx_device *		8884153	0					
ANR	8884218	Identifier	pdev		8884153	1					
ANR	8884219	IdentifierDeclStatement	const char * * names ;	1218:8:45503:45521	8884153	3	True				
ANR	8884220	IdentifierDecl	* * names		8884153	0					
ANR	8884221	IdentifierDeclType	const char * *		8884153	0					
ANR	8884222	Identifier	names		8884153	1					
ANR	8884223	IdentifierDeclStatement	size_t ndev = 0 ;	1219:8:45531:45546	8884153	4	True				
ANR	8884224	IdentifierDecl	ndev = 0		8884153	0					
ANR	8884225	IdentifierDeclType	size_t		8884153	0					
ANR	8884226	Identifier	ndev		8884153	1					
ANR	8884227	AssignmentExpression	ndev = 0		8884153	2		=			
ANR	8884228	Identifier	ndev		8884153	0					
ANR	8884229	PrimaryExpression	0		8884153	1					
ANR	8884230	ForStatement	for ( i = 0 ; gs_getdevice ( i ) != 0 ; i ++ )		8884153	5					
ANR	8884231	ForInit	i = 0 ;	1221:13:45562:45567	8884153	0	True				
ANR	8884232	AssignmentExpression	i = 0		8884153	0		=			
ANR	8884233	Identifier	i		8884153	0					
ANR	8884234	PrimaryExpression	0		8884153	1					
ANR	8884235	Condition	gs_getdevice ( i ) != 0	1221:20:45569:45588	8884153	1	True				
ANR	8884236	EqualityExpression	gs_getdevice ( i ) != 0		8884153	0		!=			
ANR	8884237	CallExpression	gs_getdevice ( i )		8884153	0					
ANR	8884238	Callee	gs_getdevice		8884153	0					
ANR	8884239	Identifier	gs_getdevice		8884153	0					
ANR	8884240	ArgumentList	i		8884153	1					
ANR	8884241	Argument	i		8884153	0					
ANR	8884242	Identifier	i		8884153	0					
ANR	8884243	PrimaryExpression	0		8884153	1					
ANR	8884244	PostIncDecOperationExpression	i ++	1221:42:45591:45593	8884153	2	True				
ANR	8884245	Identifier	i		8884153	0					
ANR	8884246	IncDec	++		8884153	1					
ANR	8884247	ExpressionStatement		1222:12:45608:45608	8884153	3	True				
ANR	8884248	ExpressionStatement	ndev = ( size_t ) i	1223:8:45618:45634	8884153	6	True				
ANR	8884249	AssignmentExpression	ndev = ( size_t ) i		8884153	0		=			
ANR	8884250	Identifier	ndev		8884153	0					
ANR	8884251	CastExpression	( size_t ) i		8884153	1					
ANR	8884252	CastTarget	size_t		8884153	0					
ANR	8884253	Identifier	i		8884153	1					
ANR	8884254	ExpressionStatement	"names = ( const char * * ) gs_alloc_bytes ( minst -> heap , ndev * sizeof ( const char * ) , ""print_devices"" )"	1224:8:45644:45739	8884153	7	True				
ANR	8884255	AssignmentExpression	"names = ( const char * * ) gs_alloc_bytes ( minst -> heap , ndev * sizeof ( const char * ) , ""print_devices"" )"		8884153	0		=			
ANR	8884256	Identifier	names		8884153	0					
ANR	8884257	CastExpression	"( const char * * ) gs_alloc_bytes ( minst -> heap , ndev * sizeof ( const char * ) , ""print_devices"" )"		8884153	1					
ANR	8884258	CastTarget	const char * *		8884153	0					
ANR	8884259	CallExpression	"gs_alloc_bytes ( minst -> heap , ndev * sizeof ( const char * ) , ""print_devices"" )"		8884153	1					
ANR	8884260	Callee	gs_alloc_bytes		8884153	0					
ANR	8884261	Identifier	gs_alloc_bytes		8884153	0					
ANR	8884262	ArgumentList	minst -> heap		8884153	1					
ANR	8884263	Argument	minst -> heap		8884153	0					
ANR	8884264	PtrMemberAccess	minst -> heap		8884153	0					
ANR	8884265	Identifier	minst		8884153	0					
ANR	8884266	Identifier	heap		8884153	1					
ANR	8884267	Argument	ndev * sizeof ( const char * )		8884153	1					
ANR	8884268	MultiplicativeExpression	ndev * sizeof ( const char * )		8884153	0		*			
ANR	8884269	Identifier	ndev		8884153	0					
ANR	8884270	SizeofExpression	sizeof ( const char * )		8884153	1					
ANR	8884271	Sizeof	sizeof		8884153	0					
ANR	8884272	SizeofOperand	const char *		8884153	1					
ANR	8884273	Argument	"""print_devices"""		8884153	2					
ANR	8884274	PrimaryExpression	"""print_devices"""		8884153	0					
ANR	8884275	IfStatement	if ( names == ( const char * * ) NULL )		8884153	8					
ANR	8884276	Condition	names == ( const char * * ) NULL	1225:12:45753:45780	8884153	0	True				
ANR	8884277	EqualityExpression	names == ( const char * * ) NULL		8884153	0		==			
ANR	8884278	Identifier	names		8884153	0					
ANR	8884279	CastExpression	( const char * * ) NULL		8884153	1					
ANR	8884280	CastTarget	const char * *		8884153	0					
ANR	8884281	Identifier	NULL		8884153	1					
ANR	8884282	CompoundStatement		16:42:542:542	8884153	1					
ANR	8884283	ForStatement	for ( i = 0 ; ( pdev = gs_getdevice ( i ) ) != 0 ; i ++ )		8884153	0					
ANR	8884284	ForInit	i = 0 ;	1226:17:45839:45844	8884153	0	True				
ANR	8884285	AssignmentExpression	i = 0		8884153	0		=			
ANR	8884286	Identifier	i		8884153	0					
ANR	8884287	PrimaryExpression	0		8884153	1					
ANR	8884288	Condition	( pdev = gs_getdevice ( i ) ) != 0	1226:24:45846:45874	8884153	1	True				
ANR	8884289	EqualityExpression	( pdev = gs_getdevice ( i ) ) != 0		8884153	0		!=			
ANR	8884290	AssignmentExpression	pdev = gs_getdevice ( i )		8884153	0		=			
ANR	8884291	Identifier	pdev		8884153	0					
ANR	8884292	CallExpression	gs_getdevice ( i )		8884153	1					
ANR	8884293	Callee	gs_getdevice		8884153	0					
ANR	8884294	Identifier	gs_getdevice		8884153	0					
ANR	8884295	ArgumentList	i		8884153	1					
ANR	8884296	Argument	i		8884153	0					
ANR	8884297	Identifier	i		8884153	0					
ANR	8884298	PrimaryExpression	0		8884153	1					
ANR	8884299	PostIncDecOperationExpression	i ++	1226:55:45877:45879	8884153	2	True				
ANR	8884300	Identifier	i		8884153	0					
ANR	8884301	IncDec	++		8884153	1					
ANR	8884302	CompoundStatement		19:16:716:739	8884153	3					
ANR	8884303	IdentifierDeclStatement	const char * dname = gs_devicename ( pdev ) ;	1227:16:45900:45939	8884153	0	True				
ANR	8884304	IdentifierDecl	* dname = gs_devicename ( pdev )		8884153	0					
ANR	8884305	IdentifierDeclType	const char *		8884153	0					
ANR	8884306	Identifier	dname		8884153	1					
ANR	8884307	AssignmentExpression	* dname = gs_devicename ( pdev )		8884153	2		=			
ANR	8884308	Identifier	dname		8884153	0					
ANR	8884309	CallExpression	gs_devicename ( pdev )		8884153	1					
ANR	8884310	Callee	gs_devicename		8884153	0					
ANR	8884311	Identifier	gs_devicename		8884153	0					
ANR	8884312	ArgumentList	pdev		8884153	1					
ANR	8884313	Argument	pdev		8884153	0					
ANR	8884314	Identifier	pdev		8884153	0					
ANR	8884315	IdentifierDeclStatement	int len = strlen ( dname ) ;	1228:16:45957:45980	8884153	1	True				
ANR	8884316	IdentifierDecl	len = strlen ( dname )		8884153	0					
ANR	8884317	IdentifierDeclType	int		8884153	0					
ANR	8884318	Identifier	len		8884153	1					
ANR	8884319	AssignmentExpression	len = strlen ( dname )		8884153	2		=			
ANR	8884320	Identifier	len		8884153	0					
ANR	8884321	CallExpression	strlen ( dname )		8884153	1					
ANR	8884322	Callee	strlen		8884153	0					
ANR	8884323	Identifier	strlen		8884153	0					
ANR	8884324	ArgumentList	dname		8884153	1					
ANR	8884325	Argument	dname		8884153	0					
ANR	8884326	Identifier	dname		8884153	0					
ANR	8884327	IfStatement	if ( pos + 1 + len > 76 )		8884153	2					
ANR	8884328	Condition	pos + 1 + len > 76	1230:20:46003:46020	8884153	0	True				
ANR	8884329	RelationalExpression	pos + 1 + len > 76		8884153	0		>			
ANR	8884330	AdditiveExpression	pos + 1 + len		8884153	0		+			
ANR	8884331	Identifier	pos		8884153	0					
ANR	8884332	AdditiveExpression	1 + len		8884153	1		+			
ANR	8884333	PrimaryExpression	1		8884153	0					
ANR	8884334	Identifier	len		8884153	1					
ANR	8884335	PrimaryExpression	76		8884153	1					
ANR	8884336	ExpressionStatement	"outprintf ( minst -> heap , ""\\n  "" ) , pos = 2"	1231:20:46043:46082	8884153	1	True				
ANR	8884337	Expression	"outprintf ( minst -> heap , ""\\n  "" ) , pos = 2"		8884153	0					
ANR	8884338	CallExpression	"outprintf ( minst -> heap , ""\\n  "" )"		8884153	0					
ANR	8884339	Callee	outprintf		8884153	0					
ANR	8884340	Identifier	outprintf		8884153	0					
ANR	8884341	ArgumentList	minst -> heap		8884153	1					
ANR	8884342	Argument	minst -> heap		8884153	0					
ANR	8884343	PtrMemberAccess	minst -> heap		8884153	0					
ANR	8884344	Identifier	minst		8884153	0					
ANR	8884345	Identifier	heap		8884153	1					
ANR	8884346	Argument	"""\\n  """		8884153	1					
ANR	8884347	PrimaryExpression	"""\\n  """		8884153	0					
ANR	8884348	AssignmentExpression	pos = 2		8884153	1		=			
ANR	8884349	Identifier	pos		8884153	0					
ANR	8884350	PrimaryExpression	2		8884153	1					
ANR	8884351	ExpressionStatement	"outprintf ( minst -> heap , "" %s"" , dname )"	1232:16:46100:46136	8884153	3	True				
ANR	8884352	CallExpression	"outprintf ( minst -> heap , "" %s"" , dname )"		8884153	0					
ANR	8884353	Callee	outprintf		8884153	0					
ANR	8884354	Identifier	outprintf		8884153	0					
ANR	8884355	ArgumentList	minst -> heap		8884153	1					
ANR	8884356	Argument	minst -> heap		8884153	0					
ANR	8884357	PtrMemberAccess	minst -> heap		8884153	0					
ANR	8884358	Identifier	minst		8884153	0					
ANR	8884359	Identifier	heap		8884153	1					
ANR	8884360	Argument	""" %s"""		8884153	1					
ANR	8884361	PrimaryExpression	""" %s"""		8884153	0					
ANR	8884362	Argument	dname		8884153	2					
ANR	8884363	Identifier	dname		8884153	0					
ANR	8884364	ExpressionStatement	pos += 1 + len	1233:16:46154:46168	8884153	4	True				
ANR	8884365	AssignmentExpression	pos += 1 + len		8884153	0		+=			
ANR	8884366	Identifier	pos		8884153	0					
ANR	8884367	AdditiveExpression	1 + len		8884153	1		+			
ANR	8884368	PrimaryExpression	1		8884153	0					
ANR	8884369	Identifier	len		8884153	1					
ANR	8884370	ElseStatement	else		8884153	0					
ANR	8884371	CompoundStatement		27:13:966:966	8884153	0					
ANR	8884372	ForStatement	for ( i = 0 ; ( pdev = gs_getdevice ( i ) ) != 0 ; i ++ )		8884153	0					
ANR	8884373	ForInit	i = 0 ;	1237:17:46286:46291	8884153	0	True				
ANR	8884374	AssignmentExpression	i = 0		8884153	0		=			
ANR	8884375	Identifier	i		8884153	0					
ANR	8884376	PrimaryExpression	0		8884153	1					
ANR	8884377	Condition	( pdev = gs_getdevice ( i ) ) != 0	1237:24:46293:46321	8884153	1	True				
ANR	8884378	EqualityExpression	( pdev = gs_getdevice ( i ) ) != 0		8884153	0		!=			
ANR	8884379	AssignmentExpression	pdev = gs_getdevice ( i )		8884153	0		=			
ANR	8884380	Identifier	pdev		8884153	0					
ANR	8884381	CallExpression	gs_getdevice ( i )		8884153	1					
ANR	8884382	Callee	gs_getdevice		8884153	0					
ANR	8884383	Identifier	gs_getdevice		8884153	0					
ANR	8884384	ArgumentList	i		8884153	1					
ANR	8884385	Argument	i		8884153	0					
ANR	8884386	Identifier	i		8884153	0					
ANR	8884387	PrimaryExpression	0		8884153	1					
ANR	8884388	PostIncDecOperationExpression	i ++	1237:55:46324:46326	8884153	2	True				
ANR	8884389	Identifier	i		8884153	0					
ANR	8884390	IncDec	++		8884153	1					
ANR	8884391	ExpressionStatement	names [ i ] = gs_devicename ( pdev )	1238:16:46345:46375	8884153	3	True				
ANR	8884392	AssignmentExpression	names [ i ] = gs_devicename ( pdev )		8884153	0		=			
ANR	8884393	ArrayIndexing	names [ i ]		8884153	0					
ANR	8884394	Identifier	names		8884153	0					
ANR	8884395	Identifier	i		8884153	1					
ANR	8884396	CallExpression	gs_devicename ( pdev )		8884153	1					
ANR	8884397	Callee	gs_devicename		8884153	0					
ANR	8884398	Identifier	gs_devicename		8884153	0					
ANR	8884399	ArgumentList	pdev		8884153	1					
ANR	8884400	Argument	pdev		8884153	0					
ANR	8884401	Identifier	pdev		8884153	0					
ANR	8884402	ExpressionStatement	"qsort ( ( void * ) names , ndev , sizeof ( const char * ) , cmpstr )"	1239:12:46389:46443	8884153	1	True				
ANR	8884403	CallExpression	"qsort ( ( void * ) names , ndev , sizeof ( const char * ) , cmpstr )"		8884153	0					
ANR	8884404	Callee	qsort		8884153	0					
ANR	8884405	Identifier	qsort		8884153	0					
ANR	8884406	ArgumentList	( void * ) names		8884153	1					
ANR	8884407	Argument	( void * ) names		8884153	0					
ANR	8884408	CastExpression	( void * ) names		8884153	0					
ANR	8884409	CastTarget	void *		8884153	0					
ANR	8884410	Identifier	names		8884153	1					
ANR	8884411	Argument	ndev		8884153	1					
ANR	8884412	Identifier	ndev		8884153	0					
ANR	8884413	Argument	sizeof ( const char * )		8884153	2					
ANR	8884414	SizeofExpression	sizeof ( const char * )		8884153	0					
ANR	8884415	Sizeof	sizeof		8884153	0					
ANR	8884416	SizeofOperand	const char *		8884153	1					
ANR	8884417	Argument	cmpstr		8884153	3					
ANR	8884418	Identifier	cmpstr		8884153	0					
ANR	8884419	ForStatement	for ( i = 0 ; i < ndev ; i ++ )		8884153	2					
ANR	8884420	ForInit	i = 0 ;	1240:17:46462:46467	8884153	0	True				
ANR	8884421	AssignmentExpression	i = 0		8884153	0		=			
ANR	8884422	Identifier	i		8884153	0					
ANR	8884423	PrimaryExpression	0		8884153	1					
ANR	8884424	Condition	i < ndev	1240:24:46469:46476	8884153	1	True				
ANR	8884425	RelationalExpression	i < ndev		8884153	0		<			
ANR	8884426	Identifier	i		8884153	0					
ANR	8884427	Identifier	ndev		8884153	1					
ANR	8884428	PostIncDecOperationExpression	i ++	1240:34:46479:46481	8884153	2	True				
ANR	8884429	Identifier	i		8884153	0					
ANR	8884430	IncDec	++		8884153	1					
ANR	8884431	CompoundStatement		32:16:1261:1287	8884153	3					
ANR	8884432	IdentifierDeclStatement	int len = strlen ( names [ i ] ) ;	1241:16:46502:46528	8884153	0	True				
ANR	8884433	IdentifierDecl	len = strlen ( names [ i ] )		8884153	0					
ANR	8884434	IdentifierDeclType	int		8884153	0					
ANR	8884435	Identifier	len		8884153	1					
ANR	8884436	AssignmentExpression	len = strlen ( names [ i ] )		8884153	2		=			
ANR	8884437	Identifier	len		8884153	0					
ANR	8884438	CallExpression	strlen ( names [ i ] )		8884153	1					
ANR	8884439	Callee	strlen		8884153	0					
ANR	8884440	Identifier	strlen		8884153	0					
ANR	8884441	ArgumentList	names [ i ]		8884153	1					
ANR	8884442	Argument	names [ i ]		8884153	0					
ANR	8884443	ArrayIndexing	names [ i ]		8884153	0					
ANR	8884444	Identifier	names		8884153	0					
ANR	8884445	Identifier	i		8884153	1					
ANR	8884446	IfStatement	if ( pos + 1 + len > 76 )		8884153	1					
ANR	8884447	Condition	pos + 1 + len > 76	1243:20:46551:46568	8884153	0	True				
ANR	8884448	RelationalExpression	pos + 1 + len > 76		8884153	0		>			
ANR	8884449	AdditiveExpression	pos + 1 + len		8884153	0		+			
ANR	8884450	Identifier	pos		8884153	0					
ANR	8884451	AdditiveExpression	1 + len		8884153	1		+			
ANR	8884452	PrimaryExpression	1		8884153	0					
ANR	8884453	Identifier	len		8884153	1					
ANR	8884454	PrimaryExpression	76		8884153	1					
ANR	8884455	ExpressionStatement	"outprintf ( minst -> heap , ""\\n  "" ) , pos = 2"	1244:20:46591:46630	8884153	1	True				
ANR	8884456	Expression	"outprintf ( minst -> heap , ""\\n  "" ) , pos = 2"		8884153	0					
ANR	8884457	CallExpression	"outprintf ( minst -> heap , ""\\n  "" )"		8884153	0					
ANR	8884458	Callee	outprintf		8884153	0					
ANR	8884459	Identifier	outprintf		8884153	0					
ANR	8884460	ArgumentList	minst -> heap		8884153	1					
ANR	8884461	Argument	minst -> heap		8884153	0					
ANR	8884462	PtrMemberAccess	minst -> heap		8884153	0					
ANR	8884463	Identifier	minst		8884153	0					
ANR	8884464	Identifier	heap		8884153	1					
ANR	8884465	Argument	"""\\n  """		8884153	1					
ANR	8884466	PrimaryExpression	"""\\n  """		8884153	0					
ANR	8884467	AssignmentExpression	pos = 2		8884153	1		=			
ANR	8884468	Identifier	pos		8884153	0					
ANR	8884469	PrimaryExpression	2		8884153	1					
ANR	8884470	ExpressionStatement	"outprintf ( minst -> heap , "" %s"" , names [ i ] )"	1245:16:46648:46687	8884153	2	True				
ANR	8884471	CallExpression	"outprintf ( minst -> heap , "" %s"" , names [ i ] )"		8884153	0					
ANR	8884472	Callee	outprintf		8884153	0					
ANR	8884473	Identifier	outprintf		8884153	0					
ANR	8884474	ArgumentList	minst -> heap		8884153	1					
ANR	8884475	Argument	minst -> heap		8884153	0					
ANR	8884476	PtrMemberAccess	minst -> heap		8884153	0					
ANR	8884477	Identifier	minst		8884153	0					
ANR	8884478	Identifier	heap		8884153	1					
ANR	8884479	Argument	""" %s"""		8884153	1					
ANR	8884480	PrimaryExpression	""" %s"""		8884153	0					
ANR	8884481	Argument	names [ i ]		8884153	2					
ANR	8884482	ArrayIndexing	names [ i ]		8884153	0					
ANR	8884483	Identifier	names		8884153	0					
ANR	8884484	Identifier	i		8884153	1					
ANR	8884485	ExpressionStatement	pos += 1 + len	1246:16:46705:46719	8884153	3	True				
ANR	8884486	AssignmentExpression	pos += 1 + len		8884153	0		+=			
ANR	8884487	Identifier	pos		8884153	0					
ANR	8884488	AdditiveExpression	1 + len		8884153	1		+			
ANR	8884489	PrimaryExpression	1		8884153	0					
ANR	8884490	Identifier	len		8884153	1					
ANR	8884491	ExpressionStatement	"gs_free ( minst -> heap , ( char * ) names , ndev * sizeof ( const char * ) , 1 , ""print_devices"" )"	1248:12:46747:46830	8884153	3	True				
ANR	8884492	CallExpression	"gs_free ( minst -> heap , ( char * ) names , ndev * sizeof ( const char * ) , 1 , ""print_devices"" )"		8884153	0					
ANR	8884493	Callee	gs_free		8884153	0					
ANR	8884494	Identifier	gs_free		8884153	0					
ANR	8884495	ArgumentList	minst -> heap		8884153	1					
ANR	8884496	Argument	minst -> heap		8884153	0					
ANR	8884497	PtrMemberAccess	minst -> heap		8884153	0					
ANR	8884498	Identifier	minst		8884153	0					
ANR	8884499	Identifier	heap		8884153	1					
ANR	8884500	Argument	( char * ) names		8884153	1					
ANR	8884501	CastExpression	( char * ) names		8884153	0					
ANR	8884502	CastTarget	char *		8884153	0					
ANR	8884503	Identifier	names		8884153	1					
ANR	8884504	Argument	ndev * sizeof ( const char * )		8884153	2					
ANR	8884505	MultiplicativeExpression	ndev * sizeof ( const char * )		8884153	0		*			
ANR	8884506	Identifier	ndev		8884153	0					
ANR	8884507	SizeofExpression	sizeof ( const char * )		8884153	1					
ANR	8884508	Sizeof	sizeof		8884153	0					
ANR	8884509	SizeofOperand	const char *		8884153	1					
ANR	8884510	Argument	1		8884153	3					
ANR	8884511	PrimaryExpression	1		8884153	0					
ANR	8884512	Argument	"""print_devices"""		8884153	4					
ANR	8884513	PrimaryExpression	"""print_devices"""		8884153	0					
ANR	8884514	ExpressionStatement	"outprintf ( minst -> heap , ""\\n"" )"	1251:4:46852:46880	8884153	4	True				
ANR	8884515	CallExpression	"outprintf ( minst -> heap , ""\\n"" )"		8884153	0					
ANR	8884516	Callee	outprintf		8884153	0					
ANR	8884517	Identifier	outprintf		8884153	0					
ANR	8884518	ArgumentList	minst -> heap		8884153	1					
ANR	8884519	Argument	minst -> heap		8884153	0					
ANR	8884520	PtrMemberAccess	minst -> heap		8884153	0					
ANR	8884521	Identifier	minst		8884153	0					
ANR	8884522	Identifier	heap		8884153	1					
ANR	8884523	Argument	"""\\n"""		8884153	1					
ANR	8884524	PrimaryExpression	"""\\n"""		8884153	0					
ANR	8884525	ReturnType	static void		8884153	1					
ANR	8884526	Identifier	print_devices		8884153	2					
ANR	8884527	ParameterList	const gs_main_instance * minst		8884153	3					
ANR	8884528	Parameter	const gs_main_instance * minst	1209:14:45209:45237	8884153	0	True				
ANR	8884529	ParameterType	const gs_main_instance *		8884153	0					
ANR	8884530	Identifier	minst		8884153	1					
ANR	8884531	CFGEntryNode	ENTRY		8884153		True				
ANR	8884532	CFGExitNode	EXIT		8884153		True				
ANR	8884533	Symbol	minst		8884153						
ANR	8884534	Symbol	gs_alloc_bytes		8884153						
ANR	8884535	Symbol	NULL		8884153						
ANR	8884536	Symbol	help_devices		8884153						
ANR	8884537	Symbol	minst -> heap		8884153						
ANR	8884538	Symbol	i		8884153						
ANR	8884539	Symbol	gs_devicename		8884153						
ANR	8884540	Symbol	gs_getdevice		8884153						
ANR	8884541	Symbol	* names		8884153						
ANR	8884542	Symbol	* minst		8884153						
ANR	8884543	Symbol	gs_getdefaultdevice		8884153						
ANR	8884544	Symbol	cmpstr		8884153						
ANR	8884545	Symbol	help_default_device		8884153						
ANR	8884546	Symbol	pdev		8884153						
ANR	8884547	Symbol	strlen		8884153						
ANR	8884548	Symbol	names		8884153						
ANR	8884549	Symbol	* i		8884153						
ANR	8884550	Symbol	ndev		8884153						
ANR	8884551	Symbol	len		8884153						
ANR	8884552	Symbol	pos		8884153						
ANR	8884553	Symbol	dname		8884153						
ANR	8884554	Function	print_emulators	1255:0:46929:47232							
ANR	8884555	FunctionDef	print_emulators (const gs_main_instance * minst)		8884554	0					
ANR	8884556	CompoundStatement		1257:0:46988:47232	8884554	0					
ANR	8884557	ExpressionStatement	"outprintf ( minst -> heap , ""%s"" , help_emulators )"	1258:4:46994:47038	8884554	0	True				
ANR	8884558	CallExpression	"outprintf ( minst -> heap , ""%s"" , help_emulators )"		8884554	0					
ANR	8884559	Callee	outprintf		8884554	0					
ANR	8884560	Identifier	outprintf		8884554	0					
ANR	8884561	ArgumentList	minst -> heap		8884554	1					
ANR	8884562	Argument	minst -> heap		8884554	0					
ANR	8884563	PtrMemberAccess	minst -> heap		8884554	0					
ANR	8884564	Identifier	minst		8884554	0					
ANR	8884565	Identifier	heap		8884554	1					
ANR	8884566	Argument	"""%s"""		8884554	1					
ANR	8884567	PrimaryExpression	"""%s"""		8884554	0					
ANR	8884568	Argument	help_emulators		8884554	2					
ANR	8884569	Identifier	help_emulators		8884554	0					
ANR	8884570	CompoundStatement		4:8:65:78	8884554	1					
ANR	8884571	IdentifierDeclStatement	const byte * s ;	1260:8:47054:47067	8884554	0	True				
ANR	8884572	IdentifierDecl	* s		8884554	0					
ANR	8884573	IdentifierDeclType	const byte *		8884554	0					
ANR	8884574	Identifier	s		8884554	1					
ANR	8884575	ForStatement	for ( s = gs_emulators ; s [ 0 ] != 0 ; s += strlen ( ( const char * ) s ) + 1 )		8884554	1					
ANR	8884576	ForInit	s = gs_emulators ;	1262:13:47083:47099	8884554	0	True				
ANR	8884577	AssignmentExpression	s = gs_emulators		8884554	0		=			
ANR	8884578	Identifier	s		8884554	0					
ANR	8884579	Identifier	gs_emulators		8884554	1					
ANR	8884580	Condition	s [ 0 ] != 0	1262:31:47101:47109	8884554	1	True				
ANR	8884581	EqualityExpression	s [ 0 ] != 0		8884554	0		!=			
ANR	8884582	ArrayIndexing	s [ 0 ]		8884554	0					
ANR	8884583	Identifier	s		8884554	0					
ANR	8884584	PrimaryExpression	0		8884554	1					
ANR	8884585	PrimaryExpression	0		8884554	1					
ANR	8884586	AssignmentExpression	s += strlen ( ( const char * ) s ) + 1	1262:42:47112:47143	8884554	2	True	+=			
ANR	8884587	Identifier	s		8884554	0					
ANR	8884588	AdditiveExpression	strlen ( ( const char * ) s ) + 1		8884554	1		+			
ANR	8884589	CallExpression	strlen ( ( const char * ) s )		8884554	0					
ANR	8884590	Callee	strlen		8884554	0					
ANR	8884591	Identifier	strlen		8884554	0					
ANR	8884592	ArgumentList	( const char * ) s		8884554	1					
ANR	8884593	Argument	( const char * ) s		8884554	0					
ANR	8884594	CastExpression	( const char * ) s		8884554	0					
ANR	8884595	CastTarget	const char *		8884554	0					
ANR	8884596	Identifier	s		8884554	1					
ANR	8884597	PrimaryExpression	1		8884554	1					
ANR	8884598	ExpressionStatement	"outprintf ( minst -> heap , "" %s"" , s )"	1263:12:47158:47190	8884554	3	True				
ANR	8884599	CallExpression	"outprintf ( minst -> heap , "" %s"" , s )"		8884554	0					
ANR	8884600	Callee	outprintf		8884554	0					
ANR	8884601	Identifier	outprintf		8884554	0					
ANR	8884602	ArgumentList	minst -> heap		8884554	1					
ANR	8884603	Argument	minst -> heap		8884554	0					
ANR	8884604	PtrMemberAccess	minst -> heap		8884554	0					
ANR	8884605	Identifier	minst		8884554	0					
ANR	8884606	Identifier	heap		8884554	1					
ANR	8884607	Argument	""" %s"""		8884554	1					
ANR	8884608	PrimaryExpression	""" %s"""		8884554	0					
ANR	8884609	Argument	s		8884554	2					
ANR	8884610	Identifier	s		8884554	0					
ANR	8884611	ExpressionStatement	"outprintf ( minst -> heap , ""\\n"" )"	1265:4:47202:47230	8884554	2	True				
ANR	8884612	CallExpression	"outprintf ( minst -> heap , ""\\n"" )"		8884554	0					
ANR	8884613	Callee	outprintf		8884554	0					
ANR	8884614	Identifier	outprintf		8884554	0					
ANR	8884615	ArgumentList	minst -> heap		8884554	1					
ANR	8884616	Argument	minst -> heap		8884554	0					
ANR	8884617	PtrMemberAccess	minst -> heap		8884554	0					
ANR	8884618	Identifier	minst		8884554	0					
ANR	8884619	Identifier	heap		8884554	1					
ANR	8884620	Argument	"""\\n"""		8884554	1					
ANR	8884621	PrimaryExpression	"""\\n"""		8884554	0					
ANR	8884622	ReturnType	static void		8884554	1					
ANR	8884623	Identifier	print_emulators		8884554	2					
ANR	8884624	ParameterList	const gs_main_instance * minst		8884554	3					
ANR	8884625	Parameter	const gs_main_instance * minst	1256:16:46957:46985	8884554	0	True				
ANR	8884626	ParameterType	const gs_main_instance *		8884554	0					
ANR	8884627	Identifier	minst		8884554	1					
ANR	8884628	CFGEntryNode	ENTRY		8884554		True				
ANR	8884629	CFGExitNode	EXIT		8884554		True				
ANR	8884630	Symbol	strlen		8884554						
ANR	8884631	Symbol	minst		8884554						
ANR	8884632	Symbol	s		8884554						
ANR	8884633	Symbol	gs_emulators		8884554						
ANR	8884634	Symbol	minst -> heap		8884554						
ANR	8884635	Symbol	* s		8884554						
ANR	8884636	Symbol	help_emulators		8884554						
ANR	8884637	Symbol	* minst		8884554						
ANR	8884638	Function	print_paths	1269:0:47265:48673							
ANR	8884639	FunctionDef	print_paths (gs_main_instance * minst)		8884638	0					
ANR	8884640	CompoundStatement		1271:0:47315:48673	8884638	0					
ANR	8884641	ExpressionStatement	"outprintf ( minst -> heap , ""%s"" , help_paths )"	1272:4:47321:47361	8884638	0	True				
ANR	8884642	CallExpression	"outprintf ( minst -> heap , ""%s"" , help_paths )"		8884638	0					
ANR	8884643	Callee	outprintf		8884638	0					
ANR	8884644	Identifier	outprintf		8884638	0					
ANR	8884645	ArgumentList	minst -> heap		8884638	1					
ANR	8884646	Argument	minst -> heap		8884638	0					
ANR	8884647	PtrMemberAccess	minst -> heap		8884638	0					
ANR	8884648	Identifier	minst		8884638	0					
ANR	8884649	Identifier	heap		8884638	1					
ANR	8884650	Argument	"""%s"""		8884638	1					
ANR	8884651	PrimaryExpression	"""%s"""		8884638	0					
ANR	8884652	Argument	help_paths		8884638	2					
ANR	8884653	Identifier	help_paths		8884638	0					
ANR	8884654	ExpressionStatement	gs_main_set_lib_paths ( minst )	1273:4:47367:47395	8884638	1	True				
ANR	8884655	CallExpression	gs_main_set_lib_paths ( minst )		8884638	0					
ANR	8884656	Callee	gs_main_set_lib_paths		8884638	0					
ANR	8884657	Identifier	gs_main_set_lib_paths		8884638	0					
ANR	8884658	ArgumentList	minst		8884638	1					
ANR	8884659	Argument	minst		8884638	0					
ANR	8884660	Identifier	minst		8884638	0					
ANR	8884661	CompoundStatement		8:8:186:199	8884638	2					
ANR	8884662	IdentifierDeclStatement	uint count = r_size ( & minst -> lib_path . list ) ;	1275:8:47411:47453	8884638	0	True				
ANR	8884663	IdentifierDecl	count = r_size ( & minst -> lib_path . list )		8884638	0					
ANR	8884664	IdentifierDeclType	uint		8884638	0					
ANR	8884665	Identifier	count		8884638	1					
ANR	8884666	AssignmentExpression	count = r_size ( & minst -> lib_path . list )		8884638	2		=			
ANR	8884667	Identifier	count		8884638	0					
ANR	8884668	CallExpression	r_size ( & minst -> lib_path . list )		8884638	1					
ANR	8884669	Callee	r_size		8884638	0					
ANR	8884670	Identifier	r_size		8884638	0					
ANR	8884671	ArgumentList	& minst -> lib_path . list		8884638	1					
ANR	8884672	Argument	& minst -> lib_path . list		8884638	0					
ANR	8884673	UnaryOperationExpression	& minst -> lib_path . list		8884638	0					
ANR	8884674	UnaryOperator	&		8884638	0					
ANR	8884675	MemberAccess	minst -> lib_path . list		8884638	1					
ANR	8884676	PtrMemberAccess	minst -> lib_path		8884638	0					
ANR	8884677	Identifier	minst		8884638	0					
ANR	8884678	Identifier	lib_path		8884638	1					
ANR	8884679	Identifier	list		8884638	1					
ANR	8884680	IdentifierDeclStatement	uint i ;	1276:8:47463:47469	8884638	1	True				
ANR	8884681	IdentifierDecl	i		8884638	0					
ANR	8884682	IdentifierDeclType	uint		8884638	0					
ANR	8884683	Identifier	i		8884638	1					
ANR	8884684	IdentifierDeclStatement	int pos = 100 ;	1277:8:47479:47492	8884638	2	True				
ANR	8884685	IdentifierDecl	pos = 100		8884638	0					
ANR	8884686	IdentifierDeclType	int		8884638	0					
ANR	8884687	Identifier	pos		8884638	1					
ANR	8884688	AssignmentExpression	pos = 100		8884638	2		=			
ANR	8884689	Identifier	pos		8884638	0					
ANR	8884690	PrimaryExpression	100		8884638	1					
ANR	8884691	IdentifierDeclStatement	char fsepr [ 3 ] ;	1278:8:47502:47515	8884638	3	True				
ANR	8884692	IdentifierDecl	fsepr [ 3 ]		8884638	0					
ANR	8884693	IdentifierDeclType	char [ 3 ]		8884638	0					
ANR	8884694	Identifier	fsepr		8884638	1					
ANR	8884695	PrimaryExpression	3		8884638	2					
ANR	8884696	ExpressionStatement	"fsepr [ 0 ] = ' ' , fsepr [ 1 ] = gp_file_name_list_separator , fsepr [ 2 ] = 0"	1280:8:47526:47606	8884638	4	True				
ANR	8884697	Expression	"fsepr [ 0 ] = ' ' , fsepr [ 1 ] = gp_file_name_list_separator , fsepr [ 2 ] = 0"		8884638	0					
ANR	8884698	AssignmentExpression	fsepr [ 0 ] = ' '		8884638	0		=			
ANR	8884699	ArrayIndexing	fsepr [ 0 ]		8884638	0					
ANR	8884700	Identifier	fsepr		8884638	0					
ANR	8884701	PrimaryExpression	0		8884638	1					
ANR	8884702	PrimaryExpression	' '		8884638	1					
ANR	8884703	Expression	"fsepr [ 1 ] = gp_file_name_list_separator , fsepr [ 2 ] = 0"		8884638	1					
ANR	8884704	AssignmentExpression	fsepr [ 1 ] = gp_file_name_list_separator		8884638	0		=			
ANR	8884705	ArrayIndexing	fsepr [ 1 ]		8884638	0					
ANR	8884706	Identifier	fsepr		8884638	0					
ANR	8884707	PrimaryExpression	1		8884638	1					
ANR	8884708	Identifier	gp_file_name_list_separator		8884638	1					
ANR	8884709	AssignmentExpression	fsepr [ 2 ] = 0		8884638	1		=			
ANR	8884710	ArrayIndexing	fsepr [ 2 ]		8884638	0					
ANR	8884711	Identifier	fsepr		8884638	0					
ANR	8884712	PrimaryExpression	2		8884638	1					
ANR	8884713	PrimaryExpression	0		8884638	1					
ANR	8884714	ForStatement	for ( i = 0 ; i < count ; ++ i )		8884638	5					
ANR	8884715	ForInit	i = 0 ;	1282:13:47621:47626	8884638	0	True				
ANR	8884716	AssignmentExpression	i = 0		8884638	0		=			
ANR	8884717	Identifier	i		8884638	0					
ANR	8884718	PrimaryExpression	0		8884638	1					
ANR	8884719	Condition	i < count	1282:20:47628:47636	8884638	1	True				
ANR	8884720	RelationalExpression	i < count		8884638	0		<			
ANR	8884721	Identifier	i		8884638	0					
ANR	8884722	Identifier	count		8884638	1					
ANR	8884723	UnaryExpression	++ i	1282:31:47639:47641	8884638	2	True				
ANR	8884724	IncDec	++		8884638	0					
ANR	8884725	Identifier	i		8884638	1					
ANR	8884726	CompoundStatement		16:12:460:508	8884638	3					
ANR	8884727	IdentifierDeclStatement	const ref * prdir = minst -> lib_path . list . value . refs + i ;	1283:12:47658:47724	8884638	0	True				
ANR	8884728	IdentifierDecl	* prdir = minst -> lib_path . list . value . refs + i		8884638	0					
ANR	8884729	IdentifierDeclType	const ref *		8884638	0					
ANR	8884730	Identifier	prdir		8884638	1					
ANR	8884731	AssignmentExpression	* prdir = minst -> lib_path . list . value . refs + i		8884638	2		=			
ANR	8884732	Identifier	prdir		8884638	0					
ANR	8884733	AdditiveExpression	minst -> lib_path . list . value . refs + i		8884638	1		+			
ANR	8884734	MemberAccess	minst -> lib_path . list . value . refs		8884638	0					
ANR	8884735	MemberAccess	minst -> lib_path . list . value		8884638	0					
ANR	8884736	MemberAccess	minst -> lib_path . list		8884638	0					
ANR	8884737	PtrMemberAccess	minst -> lib_path		8884638	0					
ANR	8884738	Identifier	minst		8884638	0					
ANR	8884739	Identifier	lib_path		8884638	1					
ANR	8884740	Identifier	list		8884638	1					
ANR	8884741	Identifier	value		8884638	1					
ANR	8884742	Identifier	refs		8884638	1					
ANR	8884743	Identifier	i		8884638	1					
ANR	8884744	IdentifierDeclStatement	uint len = r_size ( prdir ) ;	1285:12:47738:47762	8884638	1	True				
ANR	8884745	IdentifierDecl	len = r_size ( prdir )		8884638	0					
ANR	8884746	IdentifierDeclType	uint		8884638	0					
ANR	8884747	Identifier	len		8884638	1					
ANR	8884748	AssignmentExpression	len = r_size ( prdir )		8884638	2		=			
ANR	8884749	Identifier	len		8884638	0					
ANR	8884750	CallExpression	r_size ( prdir )		8884638	1					
ANR	8884751	Callee	r_size		8884638	0					
ANR	8884752	Identifier	r_size		8884638	0					
ANR	8884753	ArgumentList	prdir		8884638	1					
ANR	8884754	Argument	prdir		8884638	0					
ANR	8884755	Identifier	prdir		8884638	0					
ANR	8884756	IdentifierDeclStatement	"const char * sepr = ( i == count - 1 ? """" : fsepr ) ;"	1286:12:47776:47824	8884638	2	True				
ANR	8884757	IdentifierDecl	"* sepr = ( i == count - 1 ? """" : fsepr )"		8884638	0					
ANR	8884758	IdentifierDeclType	const char *		8884638	0					
ANR	8884759	Identifier	sepr		8884638	1					
ANR	8884760	AssignmentExpression	"* sepr = ( i == count - 1 ? """" : fsepr )"		8884638	2		=			
ANR	8884761	Identifier	sepr		8884638	0					
ANR	8884762	ConditionalExpression	"i == count - 1 ? """" : fsepr"		8884638	1					
ANR	8884763	Condition	i == count - 1		8884638	0					
ANR	8884764	EqualityExpression	i == count - 1		8884638	0		==			
ANR	8884765	Identifier	i		8884638	0					
ANR	8884766	AdditiveExpression	count - 1		8884638	1		-			
ANR	8884767	Identifier	count		8884638	0					
ANR	8884768	PrimaryExpression	1		8884638	1					
ANR	8884769	PrimaryExpression	""""""		8884638	1					
ANR	8884770	Identifier	fsepr		8884638	2					
ANR	8884771	IfStatement	if ( 1 + pos + strlen ( sepr ) + len > 76 )		8884638	3					
ANR	8884772	Condition	1 + pos + strlen ( sepr ) + len > 76	1288:16:47843:47875	8884638	0	True				
ANR	8884773	RelationalExpression	1 + pos + strlen ( sepr ) + len > 76		8884638	0		>			
ANR	8884774	AdditiveExpression	1 + pos + strlen ( sepr ) + len		8884638	0		+			
ANR	8884775	PrimaryExpression	1		8884638	0					
ANR	8884776	AdditiveExpression	pos + strlen ( sepr ) + len		8884638	1		+			
ANR	8884777	Identifier	pos		8884638	0					
ANR	8884778	AdditiveExpression	strlen ( sepr ) + len		8884638	1		+			
ANR	8884779	CallExpression	strlen ( sepr )		8884638	0					
ANR	8884780	Callee	strlen		8884638	0					
ANR	8884781	Identifier	strlen		8884638	0					
ANR	8884782	ArgumentList	sepr		8884638	1					
ANR	8884783	Argument	sepr		8884638	0					
ANR	8884784	Identifier	sepr		8884638	0					
ANR	8884785	Identifier	len		8884638	1					
ANR	8884786	PrimaryExpression	76		8884638	1					
ANR	8884787	ExpressionStatement	"outprintf ( minst -> heap , ""\\n  "" ) , pos = 2"	1289:16:47894:47933	8884638	1	True				
ANR	8884788	Expression	"outprintf ( minst -> heap , ""\\n  "" ) , pos = 2"		8884638	0					
ANR	8884789	CallExpression	"outprintf ( minst -> heap , ""\\n  "" )"		8884638	0					
ANR	8884790	Callee	outprintf		8884638	0					
ANR	8884791	Identifier	outprintf		8884638	0					
ANR	8884792	ArgumentList	minst -> heap		8884638	1					
ANR	8884793	Argument	minst -> heap		8884638	0					
ANR	8884794	PtrMemberAccess	minst -> heap		8884638	0					
ANR	8884795	Identifier	minst		8884638	0					
ANR	8884796	Identifier	heap		8884638	1					
ANR	8884797	Argument	"""\\n  """		8884638	1					
ANR	8884798	PrimaryExpression	"""\\n  """		8884638	0					
ANR	8884799	AssignmentExpression	pos = 2		8884638	1		=			
ANR	8884800	Identifier	pos		8884638	0					
ANR	8884801	PrimaryExpression	2		8884638	1					
ANR	8884802	ExpressionStatement	"outprintf ( minst -> heap , "" "" )"	1290:12:47947:47974	8884638	4	True				
ANR	8884803	CallExpression	"outprintf ( minst -> heap , "" "" )"		8884638	0					
ANR	8884804	Callee	outprintf		8884638	0					
ANR	8884805	Identifier	outprintf		8884638	0					
ANR	8884806	ArgumentList	minst -> heap		8884638	1					
ANR	8884807	Argument	minst -> heap		8884638	0					
ANR	8884808	PtrMemberAccess	minst -> heap		8884638	0					
ANR	8884809	Identifier	minst		8884638	0					
ANR	8884810	Identifier	heap		8884638	1					
ANR	8884811	Argument	""" """		8884638	1					
ANR	8884812	PrimaryExpression	""" """		8884638	0					
ANR	8884813	CompoundStatement		29:16:1048:1054	8884638	5					
ANR	8884814	IdentifierDeclStatement	const char * p = ( const char * ) prdir -> value . bytes ;	1298:16:48298:48346	8884638	0	True				
ANR	8884815	IdentifierDecl	* p = ( const char * ) prdir -> value . bytes		8884638	0					
ANR	8884816	IdentifierDeclType	const char *		8884638	0					
ANR	8884817	Identifier	p		8884638	1					
ANR	8884818	AssignmentExpression	* p = ( const char * ) prdir -> value . bytes		8884638	2		=			
ANR	8884819	Identifier	p		8884638	0					
ANR	8884820	CastExpression	( const char * ) prdir -> value . bytes		8884638	1					
ANR	8884821	CastTarget	const char *		8884638	0					
ANR	8884822	MemberAccess	prdir -> value . bytes		8884638	1					
ANR	8884823	PtrMemberAccess	prdir -> value		8884638	0					
ANR	8884824	Identifier	prdir		8884638	0					
ANR	8884825	Identifier	value		8884638	1					
ANR	8884826	Identifier	bytes		8884638	1					
ANR	8884827	IdentifierDeclStatement	uint j ;	1299:16:48364:48370	8884638	1	True				
ANR	8884828	IdentifierDecl	j		8884638	0					
ANR	8884829	IdentifierDeclType	uint		8884638	0					
ANR	8884830	Identifier	j		8884638	1					
ANR	8884831	ForStatement	for ( j = len ; j ; j -- )		8884638	2					
ANR	8884832	ForInit	j = len ;	1301:21:48394:48401	8884638	0	True				
ANR	8884833	AssignmentExpression	j = len		8884638	0		=			
ANR	8884834	Identifier	j		8884638	0					
ANR	8884835	Identifier	len		8884638	1					
ANR	8884836	Condition	j	1301:30:48403:48403	8884638	1	True				
ANR	8884837	Identifier	j		8884638	0					
ANR	8884838	PostIncDecOperationExpression	j --	1301:33:48406:48408	8884638	2	True				
ANR	8884839	Identifier	j		8884638	0					
ANR	8884840	IncDec	--		8884638	1					
ANR	8884841	ExpressionStatement	"outprintf ( minst -> heap , ""%c"" , * p ++ )"	1302:20:48431:48465	8884638	3	True				
ANR	8884842	CallExpression	"outprintf ( minst -> heap , ""%c"" , * p ++ )"		8884638	0					
ANR	8884843	Callee	outprintf		8884638	0					
ANR	8884844	Identifier	outprintf		8884638	0					
ANR	8884845	ArgumentList	minst -> heap		8884638	1					
ANR	8884846	Argument	minst -> heap		8884638	0					
ANR	8884847	PtrMemberAccess	minst -> heap		8884638	0					
ANR	8884848	Identifier	minst		8884638	0					
ANR	8884849	Identifier	heap		8884638	1					
ANR	8884850	Argument	"""%c"""		8884638	1					
ANR	8884851	PrimaryExpression	"""%c"""		8884638	0					
ANR	8884852	Argument	* p ++		8884638	2					
ANR	8884853	UnaryOperationExpression	* p ++		8884638	0					
ANR	8884854	UnaryOperator	*		8884638	0					
ANR	8884855	PostIncDecOperationExpression	p ++		8884638	1					
ANR	8884856	Identifier	p		8884638	0					
ANR	8884857	IncDec	++		8884638	1					
ANR	8884858	ExpressionStatement	"outprintf ( minst -> heap , ""%s"" , sepr )"	1304:12:48493:48527	8884638	6	True				
ANR	8884859	CallExpression	"outprintf ( minst -> heap , ""%s"" , sepr )"		8884638	0					
ANR	8884860	Callee	outprintf		8884638	0					
ANR	8884861	Identifier	outprintf		8884638	0					
ANR	8884862	ArgumentList	minst -> heap		8884638	1					
ANR	8884863	Argument	minst -> heap		8884638	0					
ANR	8884864	PtrMemberAccess	minst -> heap		8884638	0					
ANR	8884865	Identifier	minst		8884638	0					
ANR	8884866	Identifier	heap		8884638	1					
ANR	8884867	Argument	"""%s"""		8884638	1					
ANR	8884868	PrimaryExpression	"""%s"""		8884638	0					
ANR	8884869	Argument	sepr		8884638	2					
ANR	8884870	Identifier	sepr		8884638	0					
ANR	8884871	ExpressionStatement	pos += 1 + len + strlen ( sepr )	1305:12:48541:48570	8884638	7	True				
ANR	8884872	AssignmentExpression	pos += 1 + len + strlen ( sepr )		8884638	0		+=			
ANR	8884873	Identifier	pos		8884638	0					
ANR	8884874	AdditiveExpression	1 + len + strlen ( sepr )		8884638	1		+			
ANR	8884875	PrimaryExpression	1		8884638	0					
ANR	8884876	AdditiveExpression	len + strlen ( sepr )		8884638	1		+			
ANR	8884877	Identifier	len		8884638	0					
ANR	8884878	CallExpression	strlen ( sepr )		8884638	1					
ANR	8884879	Callee	strlen		8884638	0					
ANR	8884880	Identifier	strlen		8884638	0					
ANR	8884881	ArgumentList	sepr		8884638	1					
ANR	8884882	Argument	sepr		8884638	0					
ANR	8884883	Identifier	sepr		8884638	0					
ANR	8884884	ExpressionStatement	"outprintf ( minst -> heap , ""\\n"" )"	1308:4:48592:48620	8884638	3	True				
ANR	8884885	CallExpression	"outprintf ( minst -> heap , ""\\n"" )"		8884638	0					
ANR	8884886	Callee	outprintf		8884638	0					
ANR	8884887	Identifier	outprintf		8884638	0					
ANR	8884888	ArgumentList	minst -> heap		8884638	1					
ANR	8884889	Argument	minst -> heap		8884638	0					
ANR	8884890	PtrMemberAccess	minst -> heap		8884638	0					
ANR	8884891	Identifier	minst		8884638	0					
ANR	8884892	Identifier	heap		8884638	1					
ANR	8884893	Argument	"""\\n"""		8884638	1					
ANR	8884894	PrimaryExpression	"""\\n"""		8884638	0					
ANR	8884895	ExpressionStatement	"outprintf ( minst -> heap , ""%s"" , help_fontconfig )"	1309:4:48626:48671	8884638	4	True				
ANR	8884896	CallExpression	"outprintf ( minst -> heap , ""%s"" , help_fontconfig )"		8884638	0					
ANR	8884897	Callee	outprintf		8884638	0					
ANR	8884898	Identifier	outprintf		8884638	0					
ANR	8884899	ArgumentList	minst -> heap		8884638	1					
ANR	8884900	Argument	minst -> heap		8884638	0					
ANR	8884901	PtrMemberAccess	minst -> heap		8884638	0					
ANR	8884902	Identifier	minst		8884638	0					
ANR	8884903	Identifier	heap		8884638	1					
ANR	8884904	Argument	"""%s"""		8884638	1					
ANR	8884905	PrimaryExpression	"""%s"""		8884638	0					
ANR	8884906	Argument	help_fontconfig		8884638	2					
ANR	8884907	Identifier	help_fontconfig		8884638	0					
ANR	8884908	ReturnType	static void		8884638	1					
ANR	8884909	Identifier	print_paths		8884638	2					
ANR	8884910	ParameterList	gs_main_instance * minst		8884638	3					
ANR	8884911	Parameter	gs_main_instance * minst	1270:12:47289:47312	8884638	0	True				
ANR	8884912	ParameterType	gs_main_instance *		8884638	0					
ANR	8884913	Identifier	minst		8884638	1					
ANR	8884914	CFGEntryNode	ENTRY		8884638		True				
ANR	8884915	CFGExitNode	EXIT		8884638		True				
ANR	8884916	Symbol	minst -> lib_path . list . value		8884638						
ANR	8884917	Symbol	minst		8884638						
ANR	8884918	Symbol	prdir -> value		8884638						
ANR	8884919	Symbol	minst -> lib_path . list		8884638						
ANR	8884920	Symbol	minst -> heap		8884638						
ANR	8884921	Symbol	minst -> lib_path		8884638						
ANR	8884922	Symbol	& minst -> lib_path		8884638						
ANR	8884923	Symbol	help_fontconfig		8884638						
ANR	8884924	Symbol	strlen		8884638						
ANR	8884925	Symbol	prdir		8884638						
ANR	8884926	Symbol	len		8884638						
ANR	8884927	Symbol	pos		8884638						
ANR	8884928	Symbol	* prdir		8884638						
ANR	8884929	Symbol	r_size		8884638						
ANR	8884930	Symbol	minst -> lib_path . list . value . refs		8884638						
ANR	8884931	Symbol	& minst -> lib_path . list		8884638						
ANR	8884932	Symbol	sepr		8884638						
ANR	8884933	Symbol	* p ++		8884638						
ANR	8884934	Symbol	count		8884638						
ANR	8884935	Symbol	i		8884638						
ANR	8884936	Symbol	fsepr		8884638						
ANR	8884937	Symbol	j		8884638						
ANR	8884938	Symbol	* minst		8884638						
ANR	8884939	Symbol	p		8884638						
ANR	8884940	Symbol	help_paths		8884638						
ANR	8884941	Symbol	* fsepr		8884638						
ANR	8884942	Symbol	prdir -> value . bytes		8884638						
ANR	8884943	Symbol	gp_file_name_list_separator		8884638						
ANR	8884944	Function	print_help_trailer	1313:0:48706:49113							
ANR	8884945	FunctionDef	print_help_trailer (const gs_main_instance * minst)		8884944	0					
ANR	8884946	CompoundStatement		1315:0:48768:49113	8884944	0					
ANR	8884947	IdentifierDeclStatement	char buffer [ gp_file_name_sizeof ] ;	1316:4:48774:48806	8884944	0	True				
ANR	8884948	IdentifierDecl	buffer [ gp_file_name_sizeof ]		8884944	0					
ANR	8884949	IdentifierDeclType	char [ gp_file_name_sizeof ]		8884944	0					
ANR	8884950	Identifier	buffer		8884944	1					
ANR	8884951	Identifier	gp_file_name_sizeof		8884944	2					
ANR	8884952	IdentifierDeclStatement	"const char * use_htm = ""Use.htm"" , * p = buffer ;"	1317:4:48812:48856	8884944	1	True				
ANR	8884953	IdentifierDecl	"* use_htm = ""Use.htm"""		8884944	0					
ANR	8884954	IdentifierDeclType	const char *		8884944	0					
ANR	8884955	Identifier	use_htm		8884944	1					
ANR	8884956	AssignmentExpression	"* use_htm = ""Use.htm"""		8884944	2		=			
ANR	8884957	Identifier	use_htm		8884944	0					
ANR	8884958	PrimaryExpression	"""Use.htm"""		8884944	1					
ANR	8884959	IdentifierDecl	* p = buffer		8884944	1					
ANR	8884960	IdentifierDeclType	const char *		8884944	0					
ANR	8884961	Identifier	p		8884944	1					
ANR	8884962	AssignmentExpression	* p = buffer		8884944	2		=			
ANR	8884963	Identifier	buffer		8884944	0					
ANR	8884964	Identifier	buffer		8884944	1					
ANR	8884965	IdentifierDeclStatement	uint blen = sizeof ( buffer ) ;	1318:4:48862:48888	8884944	2	True				
ANR	8884966	IdentifierDecl	blen = sizeof ( buffer )		8884944	0					
ANR	8884967	IdentifierDeclType	uint		8884944	0					
ANR	8884968	Identifier	blen		8884944	1					
ANR	8884969	AssignmentExpression	blen = sizeof ( buffer )		8884944	2		=			
ANR	8884970	Identifier	blen		8884944	0					
ANR	8884971	SizeofExpression	sizeof ( buffer )		8884944	1					
ANR	8884972	Sizeof	sizeof		8884944	0					
ANR	8884973	SizeofOperand	buffer		8884944	1					
ANR	8884974	IfStatement	"if ( gp_file_name_combine ( gs_doc_directory , strlen ( gs_doc_directory ) , use_htm , strlen ( use_htm ) , false , buffer , & blen ) != gp_combine_success )"		8884944	3					
ANR	8884975	Condition	"gp_file_name_combine ( gs_doc_directory , strlen ( gs_doc_directory ) , use_htm , strlen ( use_htm ) , false , buffer , & blen ) != gp_combine_success"	1320:8:48899:49044	8884944	0	True				
ANR	8884976	EqualityExpression	"gp_file_name_combine ( gs_doc_directory , strlen ( gs_doc_directory ) , use_htm , strlen ( use_htm ) , false , buffer , & blen ) != gp_combine_success"		8884944	0		!=			
ANR	8884977	CallExpression	"gp_file_name_combine ( gs_doc_directory , strlen ( gs_doc_directory ) , use_htm , strlen ( use_htm ) , false , buffer , & blen )"		8884944	0					
ANR	8884978	Callee	gp_file_name_combine		8884944	0					
ANR	8884979	Identifier	gp_file_name_combine		8884944	0					
ANR	8884980	ArgumentList	gs_doc_directory		8884944	1					
ANR	8884981	Argument	gs_doc_directory		8884944	0					
ANR	8884982	Identifier	gs_doc_directory		8884944	0					
ANR	8884983	Argument	strlen ( gs_doc_directory )		8884944	1					
ANR	8884984	CallExpression	strlen ( gs_doc_directory )		8884944	0					
ANR	8884985	Callee	strlen		8884944	0					
ANR	8884986	Identifier	strlen		8884944	0					
ANR	8884987	ArgumentList	gs_doc_directory		8884944	1					
ANR	8884988	Argument	gs_doc_directory		8884944	0					
ANR	8884989	Identifier	gs_doc_directory		8884944	0					
ANR	8884990	Argument	use_htm		8884944	2					
ANR	8884991	Identifier	use_htm		8884944	0					
ANR	8884992	Argument	strlen ( use_htm )		8884944	3					
ANR	8884993	CallExpression	strlen ( use_htm )		8884944	0					
ANR	8884994	Callee	strlen		8884944	0					
ANR	8884995	Identifier	strlen		8884944	0					
ANR	8884996	ArgumentList	use_htm		8884944	1					
ANR	8884997	Argument	use_htm		8884944	0					
ANR	8884998	Identifier	use_htm		8884944	0					
ANR	8884999	Argument	false		8884944	4					
ANR	8885000	Identifier	false		8884944	0					
ANR	8885001	Argument	buffer		8884944	5					
ANR	8885002	Identifier	buffer		8884944	0					
ANR	8885003	Argument	& blen		8884944	6					
ANR	8885004	UnaryOperationExpression	& blen		8884944	0					
ANR	8885005	UnaryOperator	&		8884944	0					
ANR	8885006	Identifier	blen		8884944	1					
ANR	8885007	Identifier	gp_combine_success		8884944	1					
ANR	8885008	ExpressionStatement	p = use_htm	1322:8:49055:49066	8884944	1	True				
ANR	8885009	AssignmentExpression	p = use_htm		8884944	0		=			
ANR	8885010	Identifier	p		8884944	0					
ANR	8885011	Identifier	use_htm		8884944	1					
ANR	8885012	ExpressionStatement	"outprintf ( minst -> heap , help_trailer , p )"	1323:4:49072:49111	8884944	4	True				
ANR	8885013	CallExpression	"outprintf ( minst -> heap , help_trailer , p )"		8884944	0					
ANR	8885014	Callee	outprintf		8884944	0					
ANR	8885015	Identifier	outprintf		8884944	0					
ANR	8885016	ArgumentList	minst -> heap		8884944	1					
ANR	8885017	Argument	minst -> heap		8884944	0					
ANR	8885018	PtrMemberAccess	minst -> heap		8884944	0					
ANR	8885019	Identifier	minst		8884944	0					
ANR	8885020	Identifier	heap		8884944	1					
ANR	8885021	Argument	help_trailer		8884944	1					
ANR	8885022	Identifier	help_trailer		8884944	0					
ANR	8885023	Argument	p		8884944	2					
ANR	8885024	Identifier	p		8884944	0					
ANR	8885025	ReturnType	static void		8884944	1					
ANR	8885026	Identifier	print_help_trailer		8884944	2					
ANR	8885027	ParameterList	const gs_main_instance * minst		8884944	3					
ANR	8885028	Parameter	const gs_main_instance * minst	1314:19:48737:48765	8884944	0	True				
ANR	8885029	ParameterType	const gs_main_instance *		8884944	0					
ANR	8885030	Identifier	minst		8884944	1					
ANR	8885031	CFGEntryNode	ENTRY		8884944		True				
ANR	8885032	CFGExitNode	EXIT		8884944		True				
ANR	8885033	Symbol	minst		8884944						
ANR	8885034	Symbol	& blen		8884944						
ANR	8885035	Symbol	gs_doc_directory		8884944						
ANR	8885036	Symbol	minst -> heap		8884944						
ANR	8885037	Symbol	false		8884944						
ANR	8885038	Symbol	gp_file_name_combine		8884944						
ANR	8885039	Symbol	* minst		8884944						
ANR	8885040	Symbol	p		8884944						
ANR	8885041	Symbol	help_trailer		8884944						
ANR	8885042	Symbol	strlen		8884944						
ANR	8885043	Symbol	gp_combine_success		8884944						
ANR	8885044	Symbol	buffer		8884944						
ANR	8885045	Symbol	use_htm		8884944						
ANR	8885046	Symbol	blen		8884944						
