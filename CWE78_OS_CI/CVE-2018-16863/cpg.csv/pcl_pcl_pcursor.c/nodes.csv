command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8108872	File	data/converged/CVE-2018-16863_ghostpdl/pcl_pcl_pcursor.c								
ANR	8108873	Function	pcl_cursor_at_home_pos	184:0:7937:8073							
ANR	8108874	FunctionDef	pcl_cursor_at_home_pos (pcl_state_t * pcs)		8108873	0					
ANR	8108875	CompoundStatement		186:0:7998:8073	8108873	0					
ANR	8108876	ReturnStatement	return ( ( pcs -> cap . y == HOME_Y ( pcs ) ) && ( pcs -> cap . x == HOME_X ( pcs ) ) ) ;	187:4:8004:8071	8108873	0	True				
ANR	8108877	AndExpression	( pcs -> cap . y == HOME_Y ( pcs ) ) && ( pcs -> cap . x == HOME_X ( pcs ) )		8108873	0		&&			
ANR	8108878	EqualityExpression	pcs -> cap . y == HOME_Y ( pcs )		8108873	0		==			
ANR	8108879	MemberAccess	pcs -> cap . y		8108873	0					
ANR	8108880	PtrMemberAccess	pcs -> cap		8108873	0					
ANR	8108881	Identifier	pcs		8108873	0					
ANR	8108882	Identifier	cap		8108873	1					
ANR	8108883	Identifier	y		8108873	1					
ANR	8108884	CallExpression	HOME_Y ( pcs )		8108873	1					
ANR	8108885	Callee	HOME_Y		8108873	0					
ANR	8108886	Identifier	HOME_Y		8108873	0					
ANR	8108887	ArgumentList	pcs		8108873	1					
ANR	8108888	Argument	pcs		8108873	0					
ANR	8108889	Identifier	pcs		8108873	0					
ANR	8108890	EqualityExpression	pcs -> cap . x == HOME_X ( pcs )		8108873	1		==			
ANR	8108891	MemberAccess	pcs -> cap . x		8108873	0					
ANR	8108892	PtrMemberAccess	pcs -> cap		8108873	0					
ANR	8108893	Identifier	pcs		8108873	0					
ANR	8108894	Identifier	cap		8108873	1					
ANR	8108895	Identifier	x		8108873	1					
ANR	8108896	CallExpression	HOME_X ( pcs )		8108873	1					
ANR	8108897	Callee	HOME_X		8108873	0					
ANR	8108898	Identifier	HOME_X		8108873	0					
ANR	8108899	ArgumentList	pcs		8108873	1					
ANR	8108900	Argument	pcs		8108873	0					
ANR	8108901	Identifier	pcs		8108873	0					
ANR	8108902	ReturnType	static inline bool		8108873	1					
ANR	8108903	Identifier	pcl_cursor_at_home_pos		8108873	2					
ANR	8108904	ParameterList	pcl_state_t * pcs		8108873	3					
ANR	8108905	Parameter	pcl_state_t * pcs	185:23:7979:7995	8108873	0	True				
ANR	8108906	ParameterType	pcl_state_t *		8108873	0					
ANR	8108907	Identifier	pcs		8108873	1					
ANR	8108908	CFGEntryNode	ENTRY		8108873		True				
ANR	8108909	CFGExitNode	EXIT		8108873		True				
ANR	8108910	Symbol	pcs		8108873						
ANR	8108911	Symbol	HOME_X		8108873						
ANR	8108912	Symbol	HOME_Y		8108873						
ANR	8108913	Symbol	pcs -> cap . x		8108873						
ANR	8108914	Symbol	pcs -> cap		8108873						
ANR	8108915	Symbol	* pcs		8108873						
ANR	8108916	Symbol	pcs -> cap . y		8108873						
ANR	8108917	Function	pcl_set_cap_x	190:0:8076:8904							
ANR	8108918	FunctionDef	"pcl_set_cap_x (pcl_state_t * pcs , coord x , bool relative , bool use_margins)"		8108917	0					
ANR	8108919	CompoundStatement		192:0:8156:8904	8108917	0					
ANR	8108920	IdentifierDeclStatement	coord old_x = pcs -> cap . x ;	193:4:8162:8186	8108917	0	True				
ANR	8108921	IdentifierDecl	old_x = pcs -> cap . x		8108917	0					
ANR	8108922	IdentifierDeclType	coord		8108917	0					
ANR	8108923	Identifier	old_x		8108917	1					
ANR	8108924	AssignmentExpression	old_x = pcs -> cap . x		8108917	2		=			
ANR	8108925	Identifier	old_x		8108917	0					
ANR	8108926	MemberAccess	pcs -> cap . x		8108917	1					
ANR	8108927	PtrMemberAccess	pcs -> cap		8108917	0					
ANR	8108928	Identifier	pcs		8108917	0					
ANR	8108929	Identifier	cap		8108917	1					
ANR	8108930	Identifier	x		8108917	1					
ANR	8108931	IfStatement	if ( relative )		8108917	1					
ANR	8108932	Condition	relative	195:8:8197:8204	8108917	0	True				
ANR	8108933	Identifier	relative		8108917	0					
ANR	8108934	ExpressionStatement	x += pcs -> cap . x	196:8:8215:8230	8108917	1	True				
ANR	8108935	AssignmentExpression	x += pcs -> cap . x		8108917	0		+=			
ANR	8108936	Identifier	x		8108917	0					
ANR	8108937	MemberAccess	pcs -> cap . x		8108917	1					
ANR	8108938	PtrMemberAccess	pcs -> cap		8108917	0					
ANR	8108939	Identifier	pcs		8108917	0					
ANR	8108940	Identifier	cap		8108917	1					
ANR	8108941	Identifier	x		8108917	1					
ANR	8108942	IfStatement	if ( use_margins )		8108917	2					
ANR	8108943	Condition	use_margins	199:8:8314:8324	8108917	0	True				
ANR	8108944	Identifier	use_margins		8108917	0					
ANR	8108945	CompoundStatement		10:8:221:253	8108917	1					
ANR	8108946	IdentifierDeclStatement	coord min_x = pcs -> margins . left ;	200:8:8337:8368	8108917	0	True				
ANR	8108947	IdentifierDecl	min_x = pcs -> margins . left		8108917	0					
ANR	8108948	IdentifierDeclType	coord		8108917	0					
ANR	8108949	Identifier	min_x		8108917	1					
ANR	8108950	AssignmentExpression	min_x = pcs -> margins . left		8108917	2		=			
ANR	8108951	Identifier	min_x		8108917	0					
ANR	8108952	MemberAccess	pcs -> margins . left		8108917	1					
ANR	8108953	PtrMemberAccess	pcs -> margins		8108917	0					
ANR	8108954	Identifier	pcs		8108917	0					
ANR	8108955	Identifier	margins		8108917	1					
ANR	8108956	Identifier	left		8108917	1					
ANR	8108957	IdentifierDeclStatement	coord max_x = pcs -> margins . right ;	201:8:8378:8410	8108917	1	True				
ANR	8108958	IdentifierDecl	max_x = pcs -> margins . right		8108917	0					
ANR	8108959	IdentifierDeclType	coord		8108917	0					
ANR	8108960	Identifier	max_x		8108917	1					
ANR	8108961	AssignmentExpression	max_x = pcs -> margins . right		8108917	2		=			
ANR	8108962	Identifier	max_x		8108917	0					
ANR	8108963	MemberAccess	pcs -> margins . right		8108917	1					
ANR	8108964	PtrMemberAccess	pcs -> margins		8108917	0					
ANR	8108965	Identifier	pcs		8108917	0					
ANR	8108966	Identifier	margins		8108917	1					
ANR	8108967	Identifier	right		8108917	1					
ANR	8108968	IfStatement	if ( ( old_x >= min_x ) && ( x < min_x ) )		8108917	2					
ANR	8108969	Condition	( old_x >= min_x ) && ( x < min_x )	203:12:8425:8455	8108917	0	True				
ANR	8108970	AndExpression	( old_x >= min_x ) && ( x < min_x )		8108917	0		&&			
ANR	8108971	RelationalExpression	old_x >= min_x		8108917	0		>=			
ANR	8108972	Identifier	old_x		8108917	0					
ANR	8108973	Identifier	min_x		8108917	1					
ANR	8108974	RelationalExpression	x < min_x		8108917	1		<			
ANR	8108975	Identifier	x		8108917	0					
ANR	8108976	Identifier	min_x		8108917	1					
ANR	8108977	ExpressionStatement	x = min_x	204:12:8470:8479	8108917	1	True				
ANR	8108978	AssignmentExpression	x = min_x		8108917	0		=			
ANR	8108979	Identifier	x		8108917	0					
ANR	8108980	Identifier	min_x		8108917	1					
ANR	8108981	ElseStatement	else		8108917	0					
ANR	8108982	IfStatement	if ( ( old_x <= max_x ) && ( x > max_x ) )		8108917	0					
ANR	8108983	Condition	( old_x <= max_x ) && ( x > max_x )	205:17:8498:8528	8108917	0	True				
ANR	8108984	AndExpression	( old_x <= max_x ) && ( x > max_x )		8108917	0		&&			
ANR	8108985	RelationalExpression	old_x <= max_x		8108917	0		<=			
ANR	8108986	Identifier	old_x		8108917	0					
ANR	8108987	Identifier	max_x		8108917	1					
ANR	8108988	RelationalExpression	x > max_x		8108917	1		>			
ANR	8108989	Identifier	x		8108917	0					
ANR	8108990	Identifier	max_x		8108917	1					
ANR	8108991	ExpressionStatement	x = max_x	206:12:8543:8552	8108917	1	True				
ANR	8108992	AssignmentExpression	x = max_x		8108917	0		=			
ANR	8108993	Identifier	x		8108917	0					
ANR	8108994	Identifier	max_x		8108917	1					
ANR	8108995	ExpressionStatement	x = ( x > pcs -> xfm_state . pd_size . x ? pcs -> xfm_state . pd_size . x : ( x < 0L ? 0L : x ) )	210:4:8612:8702	8108917	3	True				
ANR	8108996	AssignmentExpression	x = ( x > pcs -> xfm_state . pd_size . x ? pcs -> xfm_state . pd_size . x : ( x < 0L ? 0L : x ) )		8108917	0		=			
ANR	8108997	Identifier	x		8108917	0					
ANR	8108998	ConditionalExpression	x > pcs -> xfm_state . pd_size . x ? pcs -> xfm_state . pd_size . x : ( x < 0L ? 0L : x )		8108917	1					
ANR	8108999	Condition	x > pcs -> xfm_state . pd_size . x		8108917	0					
ANR	8109000	RelationalExpression	x > pcs -> xfm_state . pd_size . x		8108917	0		>			
ANR	8109001	Identifier	x		8108917	0					
ANR	8109002	MemberAccess	pcs -> xfm_state . pd_size . x		8108917	1					
ANR	8109003	MemberAccess	pcs -> xfm_state . pd_size		8108917	0					
ANR	8109004	PtrMemberAccess	pcs -> xfm_state		8108917	0					
ANR	8109005	Identifier	pcs		8108917	0					
ANR	8109006	Identifier	xfm_state		8108917	1					
ANR	8109007	Identifier	pd_size		8108917	1					
ANR	8109008	Identifier	x		8108917	1					
ANR	8109009	MemberAccess	pcs -> xfm_state . pd_size . x		8108917	1					
ANR	8109010	MemberAccess	pcs -> xfm_state . pd_size		8108917	0					
ANR	8109011	PtrMemberAccess	pcs -> xfm_state		8108917	0					
ANR	8109012	Identifier	pcs		8108917	0					
ANR	8109013	Identifier	xfm_state		8108917	1					
ANR	8109014	Identifier	pd_size		8108917	1					
ANR	8109015	Identifier	x		8108917	1					
ANR	8109016	ConditionalExpression	x < 0L ? 0L : x		8108917	2					
ANR	8109017	Condition	x < 0L		8108917	0					
ANR	8109018	RelationalExpression	x < 0L		8108917	0		<			
ANR	8109019	Identifier	x		8108917	0					
ANR	8109020	PrimaryExpression	0L		8108917	1					
ANR	8109021	PrimaryExpression	0L		8108917	1					
ANR	8109022	Identifier	x		8108917	2					
ANR	8109023	IfStatement	if ( x < old_x )		8108917	4					
ANR	8109024	Condition	x < old_x	214:8:8761:8769	8108917	0	True				
ANR	8109025	RelationalExpression	x < old_x		8108917	0		<			
ANR	8109026	Identifier	x		8108917	0					
ANR	8109027	Identifier	old_x		8108917	1					
ANR	8109028	CompoundStatement		23:19:615:615	8108917	1					
ANR	8109029	ExpressionStatement	pcl_break_underline ( pcs )	215:8:8782:8806	8108917	0	True				
ANR	8109030	CallExpression	pcl_break_underline ( pcs )		8108917	0					
ANR	8109031	Callee	pcl_break_underline		8108917	0					
ANR	8109032	Identifier	pcl_break_underline		8108917	0					
ANR	8109033	ArgumentList	pcs		8108917	1					
ANR	8109034	Argument	pcs		8108917	0					
ANR	8109035	Identifier	pcs		8108917	0					
ANR	8109036	ExpressionStatement	pcs -> cap . x = x	216:8:8816:8830	8108917	1	True				
ANR	8109037	AssignmentExpression	pcs -> cap . x = x		8108917	0		=			
ANR	8109038	MemberAccess	pcs -> cap . x		8108917	0					
ANR	8109039	PtrMemberAccess	pcs -> cap		8108917	0					
ANR	8109040	Identifier	pcs		8108917	0					
ANR	8109041	Identifier	cap		8108917	1					
ANR	8109042	Identifier	x		8108917	1					
ANR	8109043	Identifier	x		8108917	1					
ANR	8109044	ExpressionStatement	pcl_continue_underline ( pcs )	217:8:8840:8867	8108917	2	True				
ANR	8109045	CallExpression	pcl_continue_underline ( pcs )		8108917	0					
ANR	8109046	Callee	pcl_continue_underline		8108917	0					
ANR	8109047	Identifier	pcl_continue_underline		8108917	0					
ANR	8109048	ArgumentList	pcs		8108917	1					
ANR	8109049	Argument	pcs		8108917	0					
ANR	8109050	Identifier	pcs		8108917	0					
ANR	8109051	ElseStatement	else		8108917	0					
ANR	8109052	ExpressionStatement	pcs -> cap . x = x	219:8:8888:8902	8108917	0	True				
ANR	8109053	AssignmentExpression	pcs -> cap . x = x		8108917	0		=			
ANR	8109054	MemberAccess	pcs -> cap . x		8108917	0					
ANR	8109055	PtrMemberAccess	pcs -> cap		8108917	0					
ANR	8109056	Identifier	pcs		8108917	0					
ANR	8109057	Identifier	cap		8108917	1					
ANR	8109058	Identifier	x		8108917	1					
ANR	8109059	Identifier	x		8108917	1					
ANR	8109060	ReturnType	void		8108917	1					
ANR	8109061	Identifier	pcl_set_cap_x		8108917	2					
ANR	8109062	ParameterList	"pcl_state_t * pcs , coord x , bool relative , bool use_margins"		8108917	3					
ANR	8109063	Parameter	pcl_state_t * pcs	191:14:8095:8111	8108917	0	True				
ANR	8109064	ParameterType	pcl_state_t *		8108917	0					
ANR	8109065	Identifier	pcs		8108917	1					
ANR	8109066	Parameter	coord x	191:33:8114:8120	8108917	1	True				
ANR	8109067	ParameterType	coord		8108917	0					
ANR	8109068	Identifier	x		8108917	1					
ANR	8109069	Parameter	bool relative	191:42:8123:8135	8108917	2	True				
ANR	8109070	ParameterType	bool		8108917	0					
ANR	8109071	Identifier	relative		8108917	1					
ANR	8109072	Parameter	bool use_margins	191:57:8138:8153	8108917	3	True				
ANR	8109073	ParameterType	bool		8108917	0					
ANR	8109074	Identifier	use_margins		8108917	1					
ANR	8109075	CFGEntryNode	ENTRY		8108917		True				
ANR	8109076	CFGExitNode	EXIT		8108917		True				
ANR	8109077	Symbol	pcs		8108917						
ANR	8109078	Symbol	pcs -> margins . left		8108917						
ANR	8109079	Symbol	pcs -> margins . right		8108917						
ANR	8109080	Symbol	pcs -> cap . x		8108917						
ANR	8109081	Symbol	pcs -> cap		8108917						
ANR	8109082	Symbol	* pcs		8108917						
ANR	8109083	Symbol	pcs -> margins		8108917						
ANR	8109084	Symbol	old_x		8108917						
ANR	8109085	Symbol	max_x		8108917						
ANR	8109086	Symbol	pcs -> xfm_state . pd_size . x		8108917						
ANR	8109087	Symbol	pcs -> xfm_state		8108917						
ANR	8109088	Symbol	x		8108917						
ANR	8109089	Symbol	use_margins		8108917						
ANR	8109090	Symbol	min_x		8108917						
ANR	8109091	Symbol	pcs -> xfm_state . pd_size		8108917						
ANR	8109092	Symbol	relative		8108917						
ANR	8109093	Function	pcl_set_cap_y	222:0:8907:10716							
ANR	8109094	FunctionDef	"pcl_set_cap_y (pcl_state_t * pcs , coord y , bool relative , bool use_margins , bool by_row , bool by_row_command)"		8109093	0					
ANR	8109095	CompoundStatement		227:0:9062:10716	8109093	0					
ANR	8109096	IdentifierDeclStatement	coord lim_y = pcs -> xfm_state . pd_size . y ;	228:4:9068:9106	8109093	0	True				
ANR	8109097	IdentifierDecl	lim_y = pcs -> xfm_state . pd_size . y		8109093	0					
ANR	8109098	IdentifierDeclType	coord		8109093	0					
ANR	8109099	Identifier	lim_y		8109093	1					
ANR	8109100	AssignmentExpression	lim_y = pcs -> xfm_state . pd_size . y		8109093	2		=			
ANR	8109101	Identifier	lim_y		8109093	0					
ANR	8109102	MemberAccess	pcs -> xfm_state . pd_size . y		8109093	1					
ANR	8109103	MemberAccess	pcs -> xfm_state . pd_size		8109093	0					
ANR	8109104	PtrMemberAccess	pcs -> xfm_state		8109093	0					
ANR	8109105	Identifier	pcs		8109093	0					
ANR	8109106	Identifier	xfm_state		8109093	1					
ANR	8109107	Identifier	pd_size		8109093	1					
ANR	8109108	Identifier	y		8109093	1					
ANR	8109109	IdentifierDeclStatement	coord max_y = pcs -> margins . top + pcs -> margins . length ;	229:4:9112:9164	8109093	1	True				
ANR	8109110	IdentifierDecl	max_y = pcs -> margins . top + pcs -> margins . length		8109093	0					
ANR	8109111	IdentifierDeclType	coord		8109093	0					
ANR	8109112	Identifier	max_y		8109093	1					
ANR	8109113	AssignmentExpression	max_y = pcs -> margins . top + pcs -> margins . length		8109093	2		=			
ANR	8109114	Identifier	max_y		8109093	0					
ANR	8109115	AdditiveExpression	pcs -> margins . top + pcs -> margins . length		8109093	1		+			
ANR	8109116	MemberAccess	pcs -> margins . top		8109093	0					
ANR	8109117	PtrMemberAccess	pcs -> margins		8109093	0					
ANR	8109118	Identifier	pcs		8109093	0					
ANR	8109119	Identifier	margins		8109093	1					
ANR	8109120	Identifier	top		8109093	1					
ANR	8109121	MemberAccess	pcs -> margins . length		8109093	1					
ANR	8109122	PtrMemberAccess	pcs -> margins		8109093	0					
ANR	8109123	Identifier	pcs		8109093	0					
ANR	8109124	Identifier	margins		8109093	1					
ANR	8109125	Identifier	length		8109093	1					
ANR	8109126	IdentifierDeclStatement	bool page_eject = by_row && relative ;	230:4:9170:9206	8109093	2	True				
ANR	8109127	IdentifierDecl	page_eject = by_row && relative		8109093	0					
ANR	8109128	IdentifierDeclType	bool		8109093	0					
ANR	8109129	Identifier	page_eject		8109093	1					
ANR	8109130	AssignmentExpression	page_eject = by_row && relative		8109093	2		=			
ANR	8109131	Identifier	page_eject		8109093	0					
ANR	8109132	AndExpression	by_row && relative		8109093	1		&&			
ANR	8109133	Identifier	by_row		8109093	0					
ANR	8109134	Identifier	relative		8109093	1					
ANR	8109135	IfStatement	if ( relative && by_row_command )		8109093	3					
ANR	8109136	Condition	relative && by_row_command	233:8:9263:9288	8109093	0	True				
ANR	8109137	AndExpression	relative && by_row_command		8109093	0		&&			
ANR	8109138	Identifier	relative		8109093	0					
ANR	8109139	Identifier	by_row_command		8109093	1					
ANR	8109140	CompoundStatement		10:8:368:410	8109093	1					
ANR	8109141	IdentifierDeclStatement	coord advance_max = 2 * lim_y - pcs -> cap . y ;	236:8:9431:9473	8109093	0	True				
ANR	8109142	IdentifierDecl	advance_max = 2 * lim_y - pcs -> cap . y		8109093	0					
ANR	8109143	IdentifierDeclType	coord		8109093	0					
ANR	8109144	Identifier	advance_max		8109093	1					
ANR	8109145	AssignmentExpression	advance_max = 2 * lim_y - pcs -> cap . y		8109093	2		=			
ANR	8109146	Identifier	advance_max		8109093	0					
ANR	8109147	AdditiveExpression	2 * lim_y - pcs -> cap . y		8109093	1		-			
ANR	8109148	MultiplicativeExpression	2 * lim_y		8109093	0		*			
ANR	8109149	PrimaryExpression	2		8109093	0					
ANR	8109150	Identifier	lim_y		8109093	1					
ANR	8109151	MemberAccess	pcs -> cap . y		8109093	1					
ANR	8109152	PtrMemberAccess	pcs -> cap		8109093	0					
ANR	8109153	Identifier	pcs		8109093	0					
ANR	8109154	Identifier	cap		8109093	1					
ANR	8109155	Identifier	y		8109093	1					
ANR	8109156	ExpressionStatement	y = ( y < advance_max ? y : advance_max + HOME_Y ( pcs ) )	239:8:9504:9557	8109093	1	True				
ANR	8109157	AssignmentExpression	y = ( y < advance_max ? y : advance_max + HOME_Y ( pcs ) )		8109093	0		=			
ANR	8109158	Identifier	y		8109093	0					
ANR	8109159	ConditionalExpression	y < advance_max ? y : advance_max + HOME_Y ( pcs )		8109093	1					
ANR	8109160	Condition	y < advance_max		8109093	0					
ANR	8109161	RelationalExpression	y < advance_max		8109093	0		<			
ANR	8109162	Identifier	y		8109093	0					
ANR	8109163	Identifier	advance_max		8109093	1					
ANR	8109164	Identifier	y		8109093	1					
ANR	8109165	AdditiveExpression	advance_max + HOME_Y ( pcs )		8109093	2		+			
ANR	8109166	Identifier	advance_max		8109093	0					
ANR	8109167	CallExpression	HOME_Y ( pcs )		8109093	1					
ANR	8109168	Callee	HOME_Y		8109093	0					
ANR	8109169	Identifier	HOME_Y		8109093	0					
ANR	8109170	ArgumentList	pcs		8109093	1					
ANR	8109171	Argument	pcs		8109093	0					
ANR	8109172	Identifier	pcs		8109093	0					
ANR	8109173	IfStatement	if ( relative )		8109093	4					
ANR	8109174	Condition	relative	243:8:9622:9629	8109093	0	True				
ANR	8109175	Identifier	relative		8109093	0					
ANR	8109176	ExpressionStatement	y += pcs -> cap . y	244:8:9640:9655	8109093	1	True				
ANR	8109177	AssignmentExpression	y += pcs -> cap . y		8109093	0		+=			
ANR	8109178	Identifier	y		8109093	0					
ANR	8109179	MemberAccess	pcs -> cap . y		8109093	1					
ANR	8109180	PtrMemberAccess	pcs -> cap		8109093	0					
ANR	8109181	Identifier	pcs		8109093	0					
ANR	8109182	Identifier	cap		8109093	1					
ANR	8109183	Identifier	y		8109093	1					
ANR	8109184	ElseStatement	else		8109093	0					
ANR	8109185	ExpressionStatement	y += ( by_row ? HOME_Y ( pcs ) : pcs -> margins . top )	246:8:9674:9720	8109093	0	True				
ANR	8109186	AssignmentExpression	y += ( by_row ? HOME_Y ( pcs ) : pcs -> margins . top )		8109093	0		+=			
ANR	8109187	Identifier	y		8109093	0					
ANR	8109188	ConditionalExpression	by_row ? HOME_Y ( pcs ) : pcs -> margins . top		8109093	1					
ANR	8109189	Condition	by_row		8109093	0					
ANR	8109190	Identifier	by_row		8109093	0					
ANR	8109191	CallExpression	HOME_Y ( pcs )		8109093	1					
ANR	8109192	Callee	HOME_Y		8109093	0					
ANR	8109193	Identifier	HOME_Y		8109093	0					
ANR	8109194	ArgumentList	pcs		8109093	1					
ANR	8109195	Argument	pcs		8109093	0					
ANR	8109196	Identifier	pcs		8109093	0					
ANR	8109197	MemberAccess	pcs -> margins . top		8109093	2					
ANR	8109198	PtrMemberAccess	pcs -> margins		8109093	0					
ANR	8109199	Identifier	pcs		8109093	0					
ANR	8109200	Identifier	margins		8109093	1					
ANR	8109201	Identifier	top		8109093	1					
ANR	8109202	ExpressionStatement	pcl_break_underline ( pcs )	249:4:9778:9802	8109093	5	True				
ANR	8109203	CallExpression	pcl_break_underline ( pcs )		8109093	0					
ANR	8109204	Callee	pcl_break_underline		8109093	0					
ANR	8109205	Identifier	pcl_break_underline		8109093	0					
ANR	8109206	ArgumentList	pcs		8109093	1					
ANR	8109207	Argument	pcs		8109093	0					
ANR	8109208	Identifier	pcs		8109093	0					
ANR	8109209	ExpressionStatement	max_y = ( use_margins ? max_y : lim_y )	251:4:9809:9846	8109093	6	True				
ANR	8109210	AssignmentExpression	max_y = ( use_margins ? max_y : lim_y )		8109093	0		=			
ANR	8109211	Identifier	max_y		8109093	0					
ANR	8109212	ConditionalExpression	use_margins ? max_y : lim_y		8109093	1					
ANR	8109213	Condition	use_margins		8109093	0					
ANR	8109214	Identifier	use_margins		8109093	0					
ANR	8109215	Identifier	max_y		8109093	1					
ANR	8109216	Identifier	lim_y		8109093	2					
ANR	8109217	IfStatement	if ( y < 0L )		8109093	7					
ANR	8109218	Condition	y < 0L	252:8:9856:9861	8109093	0	True				
ANR	8109219	RelationalExpression	y < 0L		8109093	0		<			
ANR	8109220	Identifier	y		8109093	0					
ANR	8109221	PrimaryExpression	0L		8109093	1					
ANR	8109222	ExpressionStatement	pcs -> cap . y = 0L	253:8:9872:9887	8109093	1	True				
ANR	8109223	AssignmentExpression	pcs -> cap . y = 0L		8109093	0		=			
ANR	8109224	MemberAccess	pcs -> cap . y		8109093	0					
ANR	8109225	PtrMemberAccess	pcs -> cap		8109093	0					
ANR	8109226	Identifier	pcs		8109093	0					
ANR	8109227	Identifier	cap		8109093	1					
ANR	8109228	Identifier	y		8109093	1					
ANR	8109229	PrimaryExpression	0L		8109093	1					
ANR	8109230	ElseStatement	else		8109093	0					
ANR	8109231	IfStatement	if ( y <= max_y )		8109093	0					
ANR	8109232	Condition	y <= max_y	254:13:9902:9911	8109093	0	True				
ANR	8109233	RelationalExpression	y <= max_y		8109093	0		<=			
ANR	8109234	Identifier	y		8109093	0					
ANR	8109235	Identifier	max_y		8109093	1					
ANR	8109236	ExpressionStatement	pcs -> cap . y = y	255:8:9922:9936	8109093	1	True				
ANR	8109237	AssignmentExpression	pcs -> cap . y = y		8109093	0		=			
ANR	8109238	MemberAccess	pcs -> cap . y		8109093	0					
ANR	8109239	PtrMemberAccess	pcs -> cap		8109093	0					
ANR	8109240	Identifier	pcs		8109093	0					
ANR	8109241	Identifier	cap		8109093	1					
ANR	8109242	Identifier	y		8109093	1					
ANR	8109243	Identifier	y		8109093	1					
ANR	8109244	ElseStatement	else		8109093	0					
ANR	8109245	IfStatement	if ( ! page_eject )		8109093	0					
ANR	8109246	Condition	! page_eject	256:13:9951:9961	8109093	0	True				
ANR	8109247	UnaryOperationExpression	! page_eject		8109093	0					
ANR	8109248	UnaryOperator	!		8109093	0					
ANR	8109249	Identifier	page_eject		8109093	1					
ANR	8109250	ExpressionStatement	pcs -> cap . y = ( y <= lim_y ? y : lim_y )	257:8:9972:10009	8109093	1	True				
ANR	8109251	AssignmentExpression	pcs -> cap . y = ( y <= lim_y ? y : lim_y )		8109093	0		=			
ANR	8109252	MemberAccess	pcs -> cap . y		8109093	0					
ANR	8109253	PtrMemberAccess	pcs -> cap		8109093	0					
ANR	8109254	Identifier	pcs		8109093	0					
ANR	8109255	Identifier	cap		8109093	1					
ANR	8109256	Identifier	y		8109093	1					
ANR	8109257	ConditionalExpression	y <= lim_y ? y : lim_y		8109093	1					
ANR	8109258	Condition	y <= lim_y		8109093	0					
ANR	8109259	RelationalExpression	y <= lim_y		8109093	0		<=			
ANR	8109260	Identifier	y		8109093	0					
ANR	8109261	Identifier	lim_y		8109093	1					
ANR	8109262	Identifier	y		8109093	1					
ANR	8109263	Identifier	lim_y		8109093	2					
ANR	8109264	ElseStatement	else		8109093	0					
ANR	8109265	CompoundStatement		34:8:1003:1024	8109093	0					
ANR	8109266	IdentifierDeclStatement	coord vmi_cp = pcs -> vmi_cp ;	259:8:10030:10056	8109093	0	True				
ANR	8109267	IdentifierDecl	vmi_cp = pcs -> vmi_cp		8109093	0					
ANR	8109268	IdentifierDeclType	coord		8109093	0					
ANR	8109269	Identifier	vmi_cp		8109093	1					
ANR	8109270	AssignmentExpression	vmi_cp = pcs -> vmi_cp		8109093	2		=			
ANR	8109271	Identifier	vmi_cp		8109093	0					
ANR	8109272	PtrMemberAccess	pcs -> vmi_cp		8109093	1					
ANR	8109273	Identifier	pcs		8109093	0					
ANR	8109274	Identifier	vmi_cp		8109093	1					
ANR	8109275	IdentifierDeclStatement	coord y0 = pcs -> cap . y ;	260:8:10066:10087	8109093	1	True				
ANR	8109276	IdentifierDecl	y0 = pcs -> cap . y		8109093	0					
ANR	8109277	IdentifierDeclType	coord		8109093	0					
ANR	8109278	Identifier	y0		8109093	1					
ANR	8109279	AssignmentExpression	y0 = pcs -> cap . y		8109093	2		=			
ANR	8109280	Identifier	y0		8109093	0					
ANR	8109281	MemberAccess	pcs -> cap . y		8109093	1					
ANR	8109282	PtrMemberAccess	pcs -> cap		8109093	0					
ANR	8109283	Identifier	pcs		8109093	0					
ANR	8109284	Identifier	cap		8109093	1					
ANR	8109285	Identifier	y		8109093	1					
ANR	8109286	WhileStatement	while ( y > max_y )		8109093	2					
ANR	8109287	Condition	y > max_y	262:15:10105:10113	8109093	0	True				
ANR	8109288	RelationalExpression	y > max_y		8109093	0		>			
ANR	8109289	Identifier	y		8109093	0					
ANR	8109290	Identifier	max_y		8109093	1					
ANR	8109291	CompoundStatement		37:12:1067:1102	8109093	1					
ANR	8109292	IdentifierDeclStatement	int code = pcl_end_page_always ( pcs ) ;	263:12:10130:10165	8109093	0	True				
ANR	8109293	IdentifierDecl	code = pcl_end_page_always ( pcs )		8109093	0					
ANR	8109294	IdentifierDeclType	int		8109093	0					
ANR	8109295	Identifier	code		8109093	1					
ANR	8109296	AssignmentExpression	code = pcl_end_page_always ( pcs )		8109093	2		=			
ANR	8109297	Identifier	code		8109093	0					
ANR	8109298	CallExpression	pcl_end_page_always ( pcs )		8109093	1					
ANR	8109299	Callee	pcl_end_page_always		8109093	0					
ANR	8109300	Identifier	pcl_end_page_always		8109093	0					
ANR	8109301	ArgumentList	pcs		8109093	1					
ANR	8109302	Argument	pcs		8109093	0					
ANR	8109303	Identifier	pcs		8109093	0					
ANR	8109304	IfStatement	if ( code < 0 )		8109093	1					
ANR	8109305	Condition	code < 0	265:16:10184:10191	8109093	0	True				
ANR	8109306	RelationalExpression	code < 0		8109093	0		<			
ANR	8109307	Identifier	code		8109093	0					
ANR	8109308	PrimaryExpression	0		8109093	1					
ANR	8109309	ReturnStatement	return code ;	266:16:10210:10221	8109093	1	True				
ANR	8109310	Identifier	code		8109093	0					
ANR	8109311	ExpressionStatement	y -= ( y0 <= max_y ? max_y : y0 )	267:12:10235:10266	8109093	2	True				
ANR	8109312	AssignmentExpression	y -= ( y0 <= max_y ? max_y : y0 )		8109093	0		-=			
ANR	8109313	Identifier	y		8109093	0					
ANR	8109314	ConditionalExpression	y0 <= max_y ? max_y : y0		8109093	1					
ANR	8109315	Condition	y0 <= max_y		8109093	0					
ANR	8109316	RelationalExpression	y0 <= max_y		8109093	0		<=			
ANR	8109317	Identifier	y0		8109093	0					
ANR	8109318	Identifier	max_y		8109093	1					
ANR	8109319	Identifier	max_y		8109093	1					
ANR	8109320	Identifier	y0		8109093	2					
ANR	8109321	ExpressionStatement	y0 = ( use_margins ? HOME_Y ( pcs ) : DEFAULT_Y_START ( pcs ) )	268:12:10280:10335	8109093	3	True				
ANR	8109322	AssignmentExpression	y0 = ( use_margins ? HOME_Y ( pcs ) : DEFAULT_Y_START ( pcs ) )		8109093	0		=			
ANR	8109323	Identifier	y0		8109093	0					
ANR	8109324	ConditionalExpression	use_margins ? HOME_Y ( pcs ) : DEFAULT_Y_START ( pcs )		8109093	1					
ANR	8109325	Condition	use_margins		8109093	0					
ANR	8109326	Identifier	use_margins		8109093	0					
ANR	8109327	CallExpression	HOME_Y ( pcs )		8109093	1					
ANR	8109328	Callee	HOME_Y		8109093	0					
ANR	8109329	Identifier	HOME_Y		8109093	0					
ANR	8109330	ArgumentList	pcs		8109093	1					
ANR	8109331	Argument	pcs		8109093	0					
ANR	8109332	Identifier	pcs		8109093	0					
ANR	8109333	CallExpression	DEFAULT_Y_START ( pcs )		8109093	2					
ANR	8109334	Callee	DEFAULT_Y_START		8109093	0					
ANR	8109335	Identifier	DEFAULT_Y_START		8109093	0					
ANR	8109336	ArgumentList	pcs		8109093	1					
ANR	8109337	Argument	pcs		8109093	0					
ANR	8109338	Identifier	pcs		8109093	0					
ANR	8109339	IfStatement	if ( ( vmi_cp == 0 ) || ( y <= vmi_cp ) )		8109093	4					
ANR	8109340	Condition	( vmi_cp == 0 ) || ( y <= vmi_cp )	271:16:10421:10450	8109093	0	True				
ANR	8109341	OrExpression	( vmi_cp == 0 ) || ( y <= vmi_cp )		8109093	0		||			
ANR	8109342	EqualityExpression	vmi_cp == 0		8109093	0		==			
ANR	8109343	Identifier	vmi_cp		8109093	0					
ANR	8109344	PrimaryExpression	0		8109093	1					
ANR	8109345	RelationalExpression	y <= vmi_cp		8109093	1		<=			
ANR	8109346	Identifier	y		8109093	0					
ANR	8109347	Identifier	vmi_cp		8109093	1					
ANR	8109348	CompoundStatement		45:48:1390:1390	8109093	1					
ANR	8109349	ExpressionStatement	y = y0	272:16:10471:10477	8109093	0	True				
ANR	8109350	AssignmentExpression	y = y0		8109093	0		=			
ANR	8109351	Identifier	y		8109093	0					
ANR	8109352	Identifier	y0		8109093	1					
ANR	8109353	BreakStatement	break ;	273:16:10495:10500	8109093	1	True				
ANR	8109354	ExpressionStatement	y += y0 - 1 - ( ( y - 1 ) % vmi_cp )	277:12:10594:10626	8109093	5	True				
ANR	8109355	AssignmentExpression	y += y0 - 1 - ( ( y - 1 ) % vmi_cp )		8109093	0		+=			
ANR	8109356	Identifier	y		8109093	0					
ANR	8109357	AdditiveExpression	y0 - 1 - ( ( y - 1 ) % vmi_cp )		8109093	1		-			
ANR	8109358	Identifier	y0		8109093	0					
ANR	8109359	AdditiveExpression	1 - ( ( y - 1 ) % vmi_cp )		8109093	1		-			
ANR	8109360	PrimaryExpression	1		8109093	0					
ANR	8109361	MultiplicativeExpression	( y - 1 ) % vmi_cp		8109093	1		%			
ANR	8109362	AdditiveExpression	y - 1		8109093	0		-			
ANR	8109363	Identifier	y		8109093	0					
ANR	8109364	PrimaryExpression	1		8109093	1					
ANR	8109365	Identifier	vmi_cp		8109093	1					
ANR	8109366	ExpressionStatement	pcs -> cap . y = y	279:8:10646:10660	8109093	3	True				
ANR	8109367	AssignmentExpression	pcs -> cap . y = y		8109093	0		=			
ANR	8109368	MemberAccess	pcs -> cap . y		8109093	0					
ANR	8109369	PtrMemberAccess	pcs -> cap		8109093	0					
ANR	8109370	Identifier	pcs		8109093	0					
ANR	8109371	Identifier	cap		8109093	1					
ANR	8109372	Identifier	y		8109093	1					
ANR	8109373	Identifier	y		8109093	1					
ANR	8109374	ExpressionStatement	pcl_continue_underline ( pcs )	282:4:10673:10700	8109093	8	True				
ANR	8109375	CallExpression	pcl_continue_underline ( pcs )		8109093	0					
ANR	8109376	Callee	pcl_continue_underline		8109093	0					
ANR	8109377	Identifier	pcl_continue_underline		8109093	0					
ANR	8109378	ArgumentList	pcs		8109093	1					
ANR	8109379	Argument	pcs		8109093	0					
ANR	8109380	Identifier	pcs		8109093	0					
ANR	8109381	ReturnStatement	return 0 ;	283:4:10706:10714	8109093	9	True				
ANR	8109382	PrimaryExpression	0		8109093	0					
ANR	8109383	ReturnType	int		8109093	1					
ANR	8109384	Identifier	pcl_set_cap_y		8109093	2					
ANR	8109385	ParameterList	"pcl_state_t * pcs , coord y , bool relative , bool use_margins , bool by_row , bool by_row_command"		8109093	3					
ANR	8109386	Parameter	pcl_state_t * pcs	223:14:8925:8941	8109093	0	True				
ANR	8109387	ParameterType	pcl_state_t *		8109093	0					
ANR	8109388	Identifier	pcs		8109093	1					
ANR	8109389	Parameter	coord y	224:14:8958:8964	8109093	1	True				
ANR	8109390	ParameterType	coord		8109093	0					
ANR	8109391	Identifier	y		8109093	1					
ANR	8109392	Parameter	bool relative	225:14:8981:8993	8109093	2	True				
ANR	8109393	ParameterType	bool		8109093	0					
ANR	8109394	Identifier	relative		8109093	1					
ANR	8109395	Parameter	bool use_margins	226:14:9010:9025	8109093	3	True				
ANR	8109396	ParameterType	bool		8109093	0					
ANR	8109397	Identifier	use_margins		8109093	1					
ANR	8109398	Parameter	bool by_row	226:32:9028:9038	8109093	4	True				
ANR	8109399	ParameterType	bool		8109093	0					
ANR	8109400	Identifier	by_row		8109093	1					
ANR	8109401	Parameter	bool by_row_command	226:45:9041:9059	8109093	5	True				
ANR	8109402	ParameterType	bool		8109093	0					
ANR	8109403	Identifier	by_row_command		8109093	1					
ANR	8109404	CFGEntryNode	ENTRY		8109093		True				
ANR	8109405	CFGExitNode	EXIT		8109093		True				
ANR	8109406	Symbol	code		8109093						
ANR	8109407	Symbol	by_row_command		8109093						
ANR	8109408	Symbol	* pcs		8109093						
ANR	8109409	Symbol	pcs -> cap . y		8109093						
ANR	8109410	Symbol	pcs -> xfm_state . pd_size . y		8109093						
ANR	8109411	Symbol	pcs -> xfm_state		8109093						
ANR	8109412	Symbol	y0		8109093						
ANR	8109413	Symbol	use_margins		8109093						
ANR	8109414	Symbol	pcs -> vmi_cp		8109093						
ANR	8109415	Symbol	pcs		8109093						
ANR	8109416	Symbol	DEFAULT_Y_START		8109093						
ANR	8109417	Symbol	by_row		8109093						
ANR	8109418	Symbol	HOME_Y		8109093						
ANR	8109419	Symbol	lim_y		8109093						
ANR	8109420	Symbol	advance_max		8109093						
ANR	8109421	Symbol	pcs -> cap		8109093						
ANR	8109422	Symbol	pcs -> margins		8109093						
ANR	8109423	Symbol	pcl_end_page_always		8109093						
ANR	8109424	Symbol	pcs -> margins . length		8109093						
ANR	8109425	Symbol	max_y		8109093						
ANR	8109426	Symbol	vmi_cp		8109093						
ANR	8109427	Symbol	y		8109093						
ANR	8109428	Symbol	page_eject		8109093						
ANR	8109429	Symbol	pcs -> xfm_state . pd_size		8109093						
ANR	8109430	Symbol	pcs -> margins . top		8109093						
ANR	8109431	Symbol	relative		8109093						
ANR	8109432	Function	motion_args	286:0:10719:10883							
ANR	8109433	FunctionDef	"motion_args (pcl_args_t * pargs , bool truncate)"		8109432	0					
ANR	8109434	CompoundStatement		288:0:10786:10883	8109432	0					
ANR	8109435	IdentifierDeclStatement	float arg = float_arg ( pargs ) ;	289:4:10792:10820	8109432	0	True				
ANR	8109436	IdentifierDecl	arg = float_arg ( pargs )		8109432	0					
ANR	8109437	IdentifierDeclType	float		8109432	0					
ANR	8109438	Identifier	arg		8109432	1					
ANR	8109439	AssignmentExpression	arg = float_arg ( pargs )		8109432	2		=			
ANR	8109440	Identifier	arg		8109432	0					
ANR	8109441	CallExpression	float_arg ( pargs )		8109432	1					
ANR	8109442	Callee	float_arg		8109432	0					
ANR	8109443	Identifier	float_arg		8109432	0					
ANR	8109444	ArgumentList	pargs		8109432	1					
ANR	8109445	Argument	pargs		8109432	0					
ANR	8109446	Identifier	pargs		8109432	0					
ANR	8109447	IfStatement	if ( truncate )		8109432	1					
ANR	8109448	Condition	truncate	291:8:10831:10838	8109432	0	True				
ANR	8109449	Identifier	truncate		8109432	0					
ANR	8109450	ExpressionStatement	arg = floor ( arg )	292:8:10849:10865	8109432	1	True				
ANR	8109451	AssignmentExpression	arg = floor ( arg )		8109432	0		=			
ANR	8109452	Identifier	arg		8109432	0					
ANR	8109453	CallExpression	floor ( arg )		8109432	1					
ANR	8109454	Callee	floor		8109432	0					
ANR	8109455	Identifier	floor		8109432	0					
ANR	8109456	ArgumentList	arg		8109432	1					
ANR	8109457	Argument	arg		8109432	0					
ANR	8109458	Identifier	arg		8109432	0					
ANR	8109459	ReturnStatement	return arg ;	293:4:10871:10881	8109432	2	True				
ANR	8109460	Identifier	arg		8109432	0					
ANR	8109461	ReturnType	static inline float		8109432	1					
ANR	8109462	Identifier	motion_args		8109432	2					
ANR	8109463	ParameterList	"pcl_args_t * pargs , bool truncate"		8109432	3					
ANR	8109464	Parameter	pcl_args_t * pargs	287:12:10751:10768	8109432	0	True				
ANR	8109465	ParameterType	pcl_args_t *		8109432	0					
ANR	8109466	Identifier	pargs		8109432	1					
ANR	8109467	Parameter	bool truncate	287:32:10771:10783	8109432	1	True				
ANR	8109468	ParameterType	bool		8109432	0					
ANR	8109469	Identifier	truncate		8109432	1					
ANR	8109470	CFGEntryNode	ENTRY		8109432		True				
ANR	8109471	CFGExitNode	EXIT		8109432		True				
ANR	8109472	Symbol	truncate		8109432						
ANR	8109473	Symbol	pargs		8109432						
ANR	8109474	Symbol	arg		8109432						
ANR	8109475	Symbol	floor		8109432						
ANR	8109476	Symbol	float_arg		8109432						
ANR	8109477	Function	do_horiz_motion	298:0:10953:11238							
ANR	8109478	FunctionDef	"do_horiz_motion (pcl_args_t * pargs , pcl_state_t * pcs , coord mul , bool truncate_arg)"		8109477	0					
ANR	8109479	CompoundStatement		301:0:11073:11238	8109477	0					
ANR	8109480	ExpressionStatement	"pcl_set_cap_x ( pcs , ( coord ) ( motion_args ( pargs , truncate_arg ) * mul ) , arg_is_signed ( pargs ) , false )"	302:4:11079:11194	8109477	0	True				
ANR	8109481	CallExpression	"pcl_set_cap_x ( pcs , ( coord ) ( motion_args ( pargs , truncate_arg ) * mul ) , arg_is_signed ( pargs ) , false )"		8109477	0					
ANR	8109482	Callee	pcl_set_cap_x		8109477	0					
ANR	8109483	Identifier	pcl_set_cap_x		8109477	0					
ANR	8109484	ArgumentList	pcs		8109477	1					
ANR	8109485	Argument	pcs		8109477	0					
ANR	8109486	Identifier	pcs		8109477	0					
ANR	8109487	Argument	"( coord ) ( motion_args ( pargs , truncate_arg ) * mul )"		8109477	1					
ANR	8109488	CastExpression	"( coord ) ( motion_args ( pargs , truncate_arg ) * mul )"		8109477	0					
ANR	8109489	CastTarget	coord		8109477	0					
ANR	8109490	MultiplicativeExpression	"motion_args ( pargs , truncate_arg ) * mul"		8109477	1		*			
ANR	8109491	CallExpression	"motion_args ( pargs , truncate_arg )"		8109477	0					
ANR	8109492	Callee	motion_args		8109477	0					
ANR	8109493	Identifier	motion_args		8109477	0					
ANR	8109494	ArgumentList	pargs		8109477	1					
ANR	8109495	Argument	pargs		8109477	0					
ANR	8109496	Identifier	pargs		8109477	0					
ANR	8109497	Argument	truncate_arg		8109477	1					
ANR	8109498	Identifier	truncate_arg		8109477	0					
ANR	8109499	Identifier	mul		8109477	1					
ANR	8109500	Argument	arg_is_signed ( pargs )		8109477	2					
ANR	8109501	CallExpression	arg_is_signed ( pargs )		8109477	0					
ANR	8109502	Callee	arg_is_signed		8109477	0					
ANR	8109503	Identifier	arg_is_signed		8109477	0					
ANR	8109504	ArgumentList	pargs		8109477	1					
ANR	8109505	Argument	pargs		8109477	0					
ANR	8109506	Identifier	pargs		8109477	0					
ANR	8109507	Argument	false		8109477	3					
ANR	8109508	Identifier	false		8109477	0					
ANR	8109509	ExpressionStatement	pcs -> cursor_moved = true	304:4:11200:11224	8109477	1	True				
ANR	8109510	AssignmentExpression	pcs -> cursor_moved = true		8109477	0		=			
ANR	8109511	PtrMemberAccess	pcs -> cursor_moved		8109477	0					
ANR	8109512	Identifier	pcs		8109477	0					
ANR	8109513	Identifier	cursor_moved		8109477	1					
ANR	8109514	Identifier	true		8109477	1					
ANR	8109515	ReturnStatement	return ;	305:4:11230:11236	8109477	2	True				
ANR	8109516	ReturnType	static inline void		8109477	1					
ANR	8109517	Identifier	do_horiz_motion		8109477	2					
ANR	8109518	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs , coord mul , bool truncate_arg"		8109477	3					
ANR	8109519	Parameter	pcl_args_t * pargs	299:16:10988:11005	8109477	0	True				
ANR	8109520	ParameterType	pcl_args_t *		8109477	0					
ANR	8109521	Identifier	pargs		8109477	1					
ANR	8109522	Parameter	pcl_state_t * pcs	300:16:11024:11040	8109477	1	True				
ANR	8109523	ParameterType	pcl_state_t *		8109477	0					
ANR	8109524	Identifier	pcs		8109477	1					
ANR	8109525	Parameter	coord mul	300:35:11043:11051	8109477	2	True				
ANR	8109526	ParameterType	coord		8109477	0					
ANR	8109527	Identifier	mul		8109477	1					
ANR	8109528	Parameter	bool truncate_arg	300:46:11054:11070	8109477	3	True				
ANR	8109529	ParameterType	bool		8109477	0					
ANR	8109530	Identifier	truncate_arg		8109477	1					
ANR	8109531	CFGEntryNode	ENTRY		8109477		True				
ANR	8109532	CFGExitNode	EXIT		8109477		True				
ANR	8109533	Symbol	truncate_arg		8109477						
ANR	8109534	Symbol	pcs		8109477						
ANR	8109535	Symbol	motion_args		8109477						
ANR	8109536	Symbol	pcs -> cursor_moved		8109477						
ANR	8109537	Symbol	pargs		8109477						
ANR	8109538	Symbol	mul		8109477						
ANR	8109539	Symbol	false		8109477						
ANR	8109540	Symbol	true		8109477						
ANR	8109541	Symbol	* pcs		8109477						
ANR	8109542	Symbol	arg_is_signed		8109477						
ANR	8109543	Function	do_vertical_move	308:0:11241:11678							
ANR	8109544	FunctionDef	"do_vertical_move (pcl_state_t * pcs , pcl_args_t * pargs , float mul , bool use_margins , bool by_row , bool by_row_command , bool truncate_arg)"		8109543	0					
ANR	8109545	CompoundStatement		312:0:11431:11678	8109543	0					
ANR	8109546	ExpressionStatement	pcs -> cursor_moved = true	313:4:11437:11461	8109543	0	True				
ANR	8109547	AssignmentExpression	pcs -> cursor_moved = true		8109543	0		=			
ANR	8109548	PtrMemberAccess	pcs -> cursor_moved		8109543	0					
ANR	8109549	Identifier	pcs		8109543	0					
ANR	8109550	Identifier	cursor_moved		8109543	1					
ANR	8109551	Identifier	true		8109543	1					
ANR	8109552	ReturnStatement	"return pcl_set_cap_y ( pcs , ( coord ) ( motion_args ( pargs , truncate_arg ) * mul ) , arg_is_signed ( pargs ) , use_margins , by_row , by_row_command ) ;"	314:4:11467:11676	8109543	1	True				
ANR	8109553	CallExpression	"pcl_set_cap_y ( pcs , ( coord ) ( motion_args ( pargs , truncate_arg ) * mul ) , arg_is_signed ( pargs ) , use_margins , by_row , by_row_command )"		8109543	0					
ANR	8109554	Callee	pcl_set_cap_y		8109543	0					
ANR	8109555	Identifier	pcl_set_cap_y		8109543	0					
ANR	8109556	ArgumentList	pcs		8109543	1					
ANR	8109557	Argument	pcs		8109543	0					
ANR	8109558	Identifier	pcs		8109543	0					
ANR	8109559	Argument	"( coord ) ( motion_args ( pargs , truncate_arg ) * mul )"		8109543	1					
ANR	8109560	CastExpression	"( coord ) ( motion_args ( pargs , truncate_arg ) * mul )"		8109543	0					
ANR	8109561	CastTarget	coord		8109543	0					
ANR	8109562	MultiplicativeExpression	"motion_args ( pargs , truncate_arg ) * mul"		8109543	1		*			
ANR	8109563	CallExpression	"motion_args ( pargs , truncate_arg )"		8109543	0					
ANR	8109564	Callee	motion_args		8109543	0					
ANR	8109565	Identifier	motion_args		8109543	0					
ANR	8109566	ArgumentList	pargs		8109543	1					
ANR	8109567	Argument	pargs		8109543	0					
ANR	8109568	Identifier	pargs		8109543	0					
ANR	8109569	Argument	truncate_arg		8109543	1					
ANR	8109570	Identifier	truncate_arg		8109543	0					
ANR	8109571	Identifier	mul		8109543	1					
ANR	8109572	Argument	arg_is_signed ( pargs )		8109543	2					
ANR	8109573	CallExpression	arg_is_signed ( pargs )		8109543	0					
ANR	8109574	Callee	arg_is_signed		8109543	0					
ANR	8109575	Identifier	arg_is_signed		8109543	0					
ANR	8109576	ArgumentList	pargs		8109543	1					
ANR	8109577	Argument	pargs		8109543	0					
ANR	8109578	Identifier	pargs		8109543	0					
ANR	8109579	Argument	use_margins		8109543	3					
ANR	8109580	Identifier	use_margins		8109543	0					
ANR	8109581	Argument	by_row		8109543	4					
ANR	8109582	Identifier	by_row		8109543	0					
ANR	8109583	Argument	by_row_command		8109543	5					
ANR	8109584	Identifier	by_row_command		8109543	0					
ANR	8109585	ReturnType	static inline int		8109543	1					
ANR	8109586	Identifier	do_vertical_move		8109543	2					
ANR	8109587	ParameterList	"pcl_state_t * pcs , pcl_args_t * pargs , float mul , bool use_margins , bool by_row , bool by_row_command , bool truncate_arg"		8109543	3					
ANR	8109588	Parameter	pcl_state_t * pcs	309:17:11276:11292	8109543	0	True				
ANR	8109589	ParameterType	pcl_state_t *		8109543	0					
ANR	8109590	Identifier	pcs		8109543	1					
ANR	8109591	Parameter	pcl_args_t * pargs	309:36:11295:11312	8109543	1	True				
ANR	8109592	ParameterType	pcl_args_t *		8109543	0					
ANR	8109593	Identifier	pargs		8109543	1					
ANR	8109594	Parameter	float mul	309:56:11315:11323	8109543	2	True				
ANR	8109595	ParameterType	float		8109543	0					
ANR	8109596	Identifier	mul		8109543	1					
ANR	8109597	Parameter	bool use_margins	310:17:11343:11358	8109543	3	True				
ANR	8109598	ParameterType	bool		8109543	0					
ANR	8109599	Identifier	use_margins		8109543	1					
ANR	8109600	Parameter	bool by_row	310:35:11361:11371	8109543	4	True				
ANR	8109601	ParameterType	bool		8109543	0					
ANR	8109602	Identifier	by_row		8109543	1					
ANR	8109603	Parameter	bool by_row_command	310:48:11374:11392	8109543	5	True				
ANR	8109604	ParameterType	bool		8109543	0					
ANR	8109605	Identifier	by_row_command		8109543	1					
ANR	8109606	Parameter	bool truncate_arg	311:17:11412:11428	8109543	6	True				
ANR	8109607	ParameterType	bool		8109543	0					
ANR	8109608	Identifier	truncate_arg		8109543	1					
ANR	8109609	CFGEntryNode	ENTRY		8109543		True				
ANR	8109610	CFGExitNode	EXIT		8109543		True				
ANR	8109611	Symbol	pcs		8109543						
ANR	8109612	Symbol	motion_args		8109543						
ANR	8109613	Symbol	by_row		8109543						
ANR	8109614	Symbol	mul		8109543						
ANR	8109615	Symbol	by_row_command		8109543						
ANR	8109616	Symbol	* pcs		8109543						
ANR	8109617	Symbol	arg_is_signed		8109543						
ANR	8109618	Symbol	pcl_set_cap_y		8109543						
ANR	8109619	Symbol	truncate_arg		8109543						
ANR	8109620	Symbol	pcs -> cursor_moved		8109543						
ANR	8109621	Symbol	pargs		8109543						
ANR	8109622	Symbol	true		8109543						
ANR	8109623	Symbol	use_margins		8109543						
ANR	8109624	Function	pcl_do_CR	332:0:12095:12281							
ANR	8109625	FunctionDef	pcl_do_CR (pcl_state_t * pcs)		8109624	0					
ANR	8109626	CompoundStatement		334:0:12129:12281	8109624	0					
ANR	8109627	ExpressionStatement	pcl_break_underline ( pcs )	335:4:12135:12159	8109624	0	True				
ANR	8109628	CallExpression	pcl_break_underline ( pcs )		8109624	0					
ANR	8109629	Callee	pcl_break_underline		8109624	0					
ANR	8109630	Identifier	pcl_break_underline		8109624	0					
ANR	8109631	ArgumentList	pcs		8109624	1					
ANR	8109632	Argument	pcs		8109624	0					
ANR	8109633	Identifier	pcs		8109624	0					
ANR	8109634	ExpressionStatement	"pcl_set_cap_x ( pcs , pcs -> margins . left , false , false )"	336:4:12165:12216	8109624	1	True				
ANR	8109635	CallExpression	"pcl_set_cap_x ( pcs , pcs -> margins . left , false , false )"		8109624	0					
ANR	8109636	Callee	pcl_set_cap_x		8109624	0					
ANR	8109637	Identifier	pcl_set_cap_x		8109624	0					
ANR	8109638	ArgumentList	pcs		8109624	1					
ANR	8109639	Argument	pcs		8109624	0					
ANR	8109640	Identifier	pcs		8109624	0					
ANR	8109641	Argument	pcs -> margins . left		8109624	1					
ANR	8109642	MemberAccess	pcs -> margins . left		8109624	0					
ANR	8109643	PtrMemberAccess	pcs -> margins		8109624	0					
ANR	8109644	Identifier	pcs		8109624	0					
ANR	8109645	Identifier	margins		8109624	1					
ANR	8109646	Identifier	left		8109624	1					
ANR	8109647	Argument	false		8109624	2					
ANR	8109648	Identifier	false		8109624	0					
ANR	8109649	Argument	false		8109624	3					
ANR	8109650	Identifier	false		8109624	0					
ANR	8109651	ExpressionStatement	pcl_continue_underline ( pcs )	337:4:12222:12249	8109624	2	True				
ANR	8109652	CallExpression	pcl_continue_underline ( pcs )		8109624	0					
ANR	8109653	Callee	pcl_continue_underline		8109624	0					
ANR	8109654	Identifier	pcl_continue_underline		8109624	0					
ANR	8109655	ArgumentList	pcs		8109624	1					
ANR	8109656	Argument	pcs		8109624	0					
ANR	8109657	Identifier	pcs		8109624	0					
ANR	8109658	ExpressionStatement	pcs -> cursor_moved = true	338:4:12255:12279	8109624	3	True				
ANR	8109659	AssignmentExpression	pcs -> cursor_moved = true		8109624	0		=			
ANR	8109660	PtrMemberAccess	pcs -> cursor_moved		8109624	0					
ANR	8109661	Identifier	pcs		8109624	0					
ANR	8109662	Identifier	cursor_moved		8109624	1					
ANR	8109663	Identifier	true		8109624	1					
ANR	8109664	ReturnType	void		8109624	1					
ANR	8109665	Identifier	pcl_do_CR		8109624	2					
ANR	8109666	ParameterList	pcl_state_t * pcs		8109624	3					
ANR	8109667	Parameter	pcl_state_t * pcs	333:10:12110:12126	8109624	0	True				
ANR	8109668	ParameterType	pcl_state_t *		8109624	0					
ANR	8109669	Identifier	pcs		8109624	1					
ANR	8109670	CFGEntryNode	ENTRY		8109624		True				
ANR	8109671	CFGExitNode	EXIT		8109624		True				
ANR	8109672	Symbol	pcs		8109624						
ANR	8109673	Symbol	pcs -> margins . left		8109624						
ANR	8109674	Symbol	pcs -> cursor_moved		8109624						
ANR	8109675	Symbol	false		8109624						
ANR	8109676	Symbol	true		8109624						
ANR	8109677	Symbol	* pcs		8109624						
ANR	8109678	Symbol	pcs -> margins		8109624						
ANR	8109679	Function	pcl_do_LF	341:0:12284:12492							
ANR	8109680	FunctionDef	pcl_do_LF (pcl_state_t * pcs)		8109679	0					
ANR	8109681	CompoundStatement		343:0:12317:12492	8109679	0					
ANR	8109682	ExpressionStatement	pcs -> cursor_moved = true	344:4:12323:12347	8109679	0	True				
ANR	8109683	AssignmentExpression	pcs -> cursor_moved = true		8109679	0		=			
ANR	8109684	PtrMemberAccess	pcs -> cursor_moved		8109679	0					
ANR	8109685	Identifier	pcs		8109679	0					
ANR	8109686	Identifier	cursor_moved		8109679	1					
ANR	8109687	Identifier	true		8109679	1					
ANR	8109688	ReturnStatement	"return pcl_set_cap_y ( pcs , pcs -> vmi_cp , true , ( pcs -> perforation_skip == 1 ) , true , false ) ;"	345:4:12353:12490	8109679	1	True				
ANR	8109689	CallExpression	"pcl_set_cap_y ( pcs , pcs -> vmi_cp , true , ( pcs -> perforation_skip == 1 ) , true , false )"		8109679	0					
ANR	8109690	Callee	pcl_set_cap_y		8109679	0					
ANR	8109691	Identifier	pcl_set_cap_y		8109679	0					
ANR	8109692	ArgumentList	pcs		8109679	1					
ANR	8109693	Argument	pcs		8109679	0					
ANR	8109694	Identifier	pcs		8109679	0					
ANR	8109695	Argument	pcs -> vmi_cp		8109679	1					
ANR	8109696	PtrMemberAccess	pcs -> vmi_cp		8109679	0					
ANR	8109697	Identifier	pcs		8109679	0					
ANR	8109698	Identifier	vmi_cp		8109679	1					
ANR	8109699	Argument	true		8109679	2					
ANR	8109700	Identifier	true		8109679	0					
ANR	8109701	Argument	pcs -> perforation_skip == 1		8109679	3					
ANR	8109702	EqualityExpression	pcs -> perforation_skip == 1		8109679	0		==			
ANR	8109703	PtrMemberAccess	pcs -> perforation_skip		8109679	0					
ANR	8109704	Identifier	pcs		8109679	0					
ANR	8109705	Identifier	perforation_skip		8109679	1					
ANR	8109706	PrimaryExpression	1		8109679	1					
ANR	8109707	Argument	true		8109679	4					
ANR	8109708	Identifier	true		8109679	0					
ANR	8109709	Argument	false		8109679	5					
ANR	8109710	Identifier	false		8109679	0					
ANR	8109711	ReturnType	int		8109679	1					
ANR	8109712	Identifier	pcl_do_LF		8109679	2					
ANR	8109713	ParameterList	pcl_state_t * pcs		8109679	3					
ANR	8109714	Parameter	pcl_state_t * pcs	342:10:12298:12314	8109679	0	True				
ANR	8109715	ParameterType	pcl_state_t *		8109679	0					
ANR	8109716	Identifier	pcs		8109679	1					
ANR	8109717	CFGEntryNode	ENTRY		8109679		True				
ANR	8109718	CFGExitNode	EXIT		8109679		True				
ANR	8109719	Symbol	pcs		8109679						
ANR	8109720	Symbol	pcs -> cursor_moved		8109679						
ANR	8109721	Symbol	pcs -> perforation_skip		8109679						
ANR	8109722	Symbol	true		8109679						
ANR	8109723	Symbol	false		8109679						
ANR	8109724	Symbol	* pcs		8109679						
ANR	8109725	Symbol	pcs -> vmi_cp		8109679						
ANR	8109726	Symbol	pcl_set_cap_y		8109679						
ANR	8109727	Function	pcl_do_FF	354:0:12600:12854							
ANR	8109728	FunctionDef	pcl_do_FF (pcl_state_t * pcs)		8109727	0					
ANR	8109729	CompoundStatement		356:0:12633:12854	8109727	0					
ANR	8109730	IdentifierDeclStatement	int code = pcl_end_page_always ( pcs ) ;	357:4:12639:12674	8109727	0	True				
ANR	8109731	IdentifierDecl	code = pcl_end_page_always ( pcs )		8109727	0					
ANR	8109732	IdentifierDeclType	int		8109727	0					
ANR	8109733	Identifier	code		8109727	1					
ANR	8109734	AssignmentExpression	code = pcl_end_page_always ( pcs )		8109727	2		=			
ANR	8109735	Identifier	code		8109727	0					
ANR	8109736	CallExpression	pcl_end_page_always ( pcs )		8109727	1					
ANR	8109737	Callee	pcl_end_page_always		8109727	0					
ANR	8109738	Identifier	pcl_end_page_always		8109727	0					
ANR	8109739	ArgumentList	pcs		8109727	1					
ANR	8109740	Argument	pcs		8109727	0					
ANR	8109741	Identifier	pcs		8109727	0					
ANR	8109742	IfStatement	if ( code >= 0 )		8109727	1					
ANR	8109743	Condition	code >= 0	359:8:12685:12693	8109727	0	True				
ANR	8109744	RelationalExpression	code >= 0		8109727	0		>=			
ANR	8109745	Identifier	code		8109727	0					
ANR	8109746	PrimaryExpression	0		8109727	1					
ANR	8109747	CompoundStatement		4:19:62:62	8109727	1					
ANR	8109748	ExpressionStatement	"code = pcl_set_cap_y ( pcs , 0L , false , false , true , false )"	360:8:12706:12762	8109727	0	True				
ANR	8109749	AssignmentExpression	"code = pcl_set_cap_y ( pcs , 0L , false , false , true , false )"		8109727	0		=			
ANR	8109750	Identifier	code		8109727	0					
ANR	8109751	CallExpression	"pcl_set_cap_y ( pcs , 0L , false , false , true , false )"		8109727	1					
ANR	8109752	Callee	pcl_set_cap_y		8109727	0					
ANR	8109753	Identifier	pcl_set_cap_y		8109727	0					
ANR	8109754	ArgumentList	pcs		8109727	1					
ANR	8109755	Argument	pcs		8109727	0					
ANR	8109756	Identifier	pcs		8109727	0					
ANR	8109757	Argument	0L		8109727	1					
ANR	8109758	PrimaryExpression	0L		8109727	0					
ANR	8109759	Argument	false		8109727	2					
ANR	8109760	Identifier	false		8109727	0					
ANR	8109761	Argument	false		8109727	3					
ANR	8109762	Identifier	false		8109727	0					
ANR	8109763	Argument	true		8109727	4					
ANR	8109764	Identifier	true		8109727	0					
ANR	8109765	Argument	false		8109727	5					
ANR	8109766	Identifier	false		8109727	0					
ANR	8109767	ExpressionStatement	pcl_continue_underline ( pcs )	361:8:12772:12799	8109727	1	True				
ANR	8109768	CallExpression	pcl_continue_underline ( pcs )		8109727	0					
ANR	8109769	Callee	pcl_continue_underline		8109727	0					
ANR	8109770	Identifier	pcl_continue_underline		8109727	0					
ANR	8109771	ArgumentList	pcs		8109727	1					
ANR	8109772	Argument	pcs		8109727	0					
ANR	8109773	Identifier	pcs		8109727	0					
ANR	8109774	ReturnStatement	return code ;	363:4:12841:12852	8109727	2	True				
ANR	8109775	Identifier	code		8109727	0					
ANR	8109776	ReturnType	int		8109727	1					
ANR	8109777	Identifier	pcl_do_FF		8109727	2					
ANR	8109778	ParameterList	pcl_state_t * pcs		8109727	3					
ANR	8109779	Parameter	pcl_state_t * pcs	355:10:12614:12630	8109727	0	True				
ANR	8109780	ParameterType	pcl_state_t *		8109727	0					
ANR	8109781	Identifier	pcs		8109727	1					
ANR	8109782	CFGEntryNode	ENTRY		8109727		True				
ANR	8109783	CFGExitNode	EXIT		8109727		True				
ANR	8109784	Symbol	pcs		8109727						
ANR	8109785	Symbol	code		8109727						
ANR	8109786	Symbol	false		8109727						
ANR	8109787	Symbol	true		8109727						
ANR	8109788	Symbol	pcl_end_page_always		8109727						
ANR	8109789	Symbol	pcl_set_cap_y		8109727						
ANR	8109790	Function	pcl_home_cursor	369:0:12908:13062							
ANR	8109791	FunctionDef	pcl_home_cursor (pcl_state_t * pcs)		8109790	0					
ANR	8109792	CompoundStatement		371:0:12948:13062	8109790	0					
ANR	8109793	ExpressionStatement	"pcl_set_cap_x ( pcs , pcs -> margins . left , false , false )"	372:4:12954:13005	8109790	0	True				
ANR	8109794	CallExpression	"pcl_set_cap_x ( pcs , pcs -> margins . left , false , false )"		8109790	0					
ANR	8109795	Callee	pcl_set_cap_x		8109790	0					
ANR	8109796	Identifier	pcl_set_cap_x		8109790	0					
ANR	8109797	ArgumentList	pcs		8109790	1					
ANR	8109798	Argument	pcs		8109790	0					
ANR	8109799	Identifier	pcs		8109790	0					
ANR	8109800	Argument	pcs -> margins . left		8109790	1					
ANR	8109801	MemberAccess	pcs -> margins . left		8109790	0					
ANR	8109802	PtrMemberAccess	pcs -> margins		8109790	0					
ANR	8109803	Identifier	pcs		8109790	0					
ANR	8109804	Identifier	margins		8109790	1					
ANR	8109805	Identifier	left		8109790	1					
ANR	8109806	Argument	false		8109790	2					
ANR	8109807	Identifier	false		8109790	0					
ANR	8109808	Argument	false		8109790	3					
ANR	8109809	Identifier	false		8109790	0					
ANR	8109810	ExpressionStatement	"pcl_set_cap_y ( pcs , 0L , false , false , true , false )"	373:4:13011:13060	8109790	1	True				
ANR	8109811	CallExpression	"pcl_set_cap_y ( pcs , 0L , false , false , true , false )"		8109790	0					
ANR	8109812	Callee	pcl_set_cap_y		8109790	0					
ANR	8109813	Identifier	pcl_set_cap_y		8109790	0					
ANR	8109814	ArgumentList	pcs		8109790	1					
ANR	8109815	Argument	pcs		8109790	0					
ANR	8109816	Identifier	pcs		8109790	0					
ANR	8109817	Argument	0L		8109790	1					
ANR	8109818	PrimaryExpression	0L		8109790	0					
ANR	8109819	Argument	false		8109790	2					
ANR	8109820	Identifier	false		8109790	0					
ANR	8109821	Argument	false		8109790	3					
ANR	8109822	Identifier	false		8109790	0					
ANR	8109823	Argument	true		8109790	4					
ANR	8109824	Identifier	true		8109790	0					
ANR	8109825	Argument	false		8109790	5					
ANR	8109826	Identifier	false		8109790	0					
ANR	8109827	ReturnType	void		8109790	1					
ANR	8109828	Identifier	pcl_home_cursor		8109790	2					
ANR	8109829	ParameterList	pcl_state_t * pcs		8109790	3					
ANR	8109830	Parameter	pcl_state_t * pcs	370:16:12929:12945	8109790	0	True				
ANR	8109831	ParameterType	pcl_state_t *		8109790	0					
ANR	8109832	Identifier	pcs		8109790	1					
ANR	8109833	CFGEntryNode	ENTRY		8109790		True				
ANR	8109834	CFGExitNode	EXIT		8109790		True				
ANR	8109835	Symbol	pcs		8109790						
ANR	8109836	Symbol	pcs -> margins . left		8109790						
ANR	8109837	Symbol	false		8109790						
ANR	8109838	Symbol	true		8109790						
ANR	8109839	Symbol	* pcs		8109790						
ANR	8109840	Symbol	pcs -> margins		8109790						
ANR	8109841	Function	pcl_updated_hmi	379:0:13123:14318							
ANR	8109842	FunctionDef	pcl_updated_hmi (pcl_state_t * pcs)		8109841	0					
ANR	8109843	CompoundStatement		381:0:13164:14318	8109841	0					
ANR	8109844	IdentifierDeclStatement	coord hmi ;	382:4:13170:13179	8109841	0	True				
ANR	8109845	IdentifierDecl	hmi		8109841	0					
ANR	8109846	IdentifierDeclType	coord		8109841	0					
ANR	8109847	Identifier	hmi		8109841	1					
ANR	8109848	IdentifierDeclStatement	const pcl_font_selection_t * pfs = & ( pcs -> font_selection [ pcs -> font_selected ] ) ;	383:4:13185:13269	8109841	1	True				
ANR	8109849	IdentifierDecl	* pfs = & ( pcs -> font_selection [ pcs -> font_selected ] )		8109841	0					
ANR	8109850	IdentifierDeclType	const pcl_font_selection_t *		8109841	0					
ANR	8109851	Identifier	pfs		8109841	1					
ANR	8109852	AssignmentExpression	* pfs = & ( pcs -> font_selection [ pcs -> font_selected ] )		8109841	2		=			
ANR	8109853	Identifier	pfs		8109841	0					
ANR	8109854	UnaryOperationExpression	& ( pcs -> font_selection [ pcs -> font_selected ] )		8109841	1					
ANR	8109855	UnaryOperator	&		8109841	0					
ANR	8109856	ArrayIndexing	pcs -> font_selection [ pcs -> font_selected ]		8109841	1					
ANR	8109857	PtrMemberAccess	pcs -> font_selection		8109841	0					
ANR	8109858	Identifier	pcs		8109841	0					
ANR	8109859	Identifier	font_selection		8109841	1					
ANR	8109860	PtrMemberAccess	pcs -> font_selected		8109841	1					
ANR	8109861	Identifier	pcs		8109841	0					
ANR	8109862	Identifier	font_selected		8109841	1					
ANR	8109863	IdentifierDeclStatement	"int code = pcl_recompute_font ( pcs , false ) ;"	385:4:13275:13316	8109841	2	True				
ANR	8109864	IdentifierDecl	"code = pcl_recompute_font ( pcs , false )"		8109841	0					
ANR	8109865	IdentifierDeclType	int		8109841	0					
ANR	8109866	Identifier	code		8109841	1					
ANR	8109867	AssignmentExpression	"code = pcl_recompute_font ( pcs , false )"		8109841	2		=			
ANR	8109868	Identifier	code		8109841	0					
ANR	8109869	CallExpression	"pcl_recompute_font ( pcs , false )"		8109841	1					
ANR	8109870	Callee	pcl_recompute_font		8109841	0					
ANR	8109871	Identifier	pcl_recompute_font		8109841	0					
ANR	8109872	ArgumentList	pcs		8109841	1					
ANR	8109873	Argument	pcs		8109841	0					
ANR	8109874	Identifier	pcs		8109841	0					
ANR	8109875	Argument	false		8109841	1					
ANR	8109876	Identifier	false		8109841	0					
ANR	8109877	IdentifierDeclStatement	const pl_font_t * plfont = pcs -> font ;	386:4:13322:13357	8109841	3	True				
ANR	8109878	IdentifierDecl	* plfont = pcs -> font		8109841	0					
ANR	8109879	IdentifierDeclType	const pl_font_t *		8109841	0					
ANR	8109880	Identifier	plfont		8109841	1					
ANR	8109881	AssignmentExpression	* plfont = pcs -> font		8109841	2		=			
ANR	8109882	Identifier	plfont		8109841	0					
ANR	8109883	PtrMemberAccess	pcs -> font		8109841	1					
ANR	8109884	Identifier	pcs		8109841	0					
ANR	8109885	Identifier	font		8109841	1					
ANR	8109886	IfStatement	if ( code < 0 )		8109841	4					
ANR	8109887	Condition	code < 0	388:8:13368:13375	8109841	0	True				
ANR	8109888	RelationalExpression	code < 0		8109841	0		<			
ANR	8109889	Identifier	code		8109841	0					
ANR	8109890	PrimaryExpression	0		8109841	1					
ANR	8109891	ReturnStatement	return pcs -> hmi_cp ;	389:8:13386:13404	8109841	1	True				
ANR	8109892	PtrMemberAccess	pcs -> hmi_cp		8109841	0					
ANR	8109893	Identifier	pcs		8109841	0					
ANR	8109894	Identifier	hmi_cp		8109841	1					
ANR	8109895	IfStatement	if ( pl_font_is_scalable ( plfont ) && plfont -> params . typeface_family != 0 )		8109841	5					
ANR	8109896	Condition	pl_font_is_scalable ( plfont ) && plfont -> params . typeface_family != 0	394:8:13607:13672	8109841	0	True				
ANR	8109897	AndExpression	pl_font_is_scalable ( plfont ) && plfont -> params . typeface_family != 0		8109841	0		&&			
ANR	8109898	CallExpression	pl_font_is_scalable ( plfont )		8109841	0					
ANR	8109899	Callee	pl_font_is_scalable		8109841	0					
ANR	8109900	Identifier	pl_font_is_scalable		8109841	0					
ANR	8109901	ArgumentList	plfont		8109841	1					
ANR	8109902	Argument	plfont		8109841	0					
ANR	8109903	Identifier	plfont		8109841	0					
ANR	8109904	EqualityExpression	plfont -> params . typeface_family != 0		8109841	1		!=			
ANR	8109905	MemberAccess	plfont -> params . typeface_family		8109841	0					
ANR	8109906	PtrMemberAccess	plfont -> params		8109841	0					
ANR	8109907	Identifier	plfont		8109841	0					
ANR	8109908	Identifier	params		8109841	1					
ANR	8109909	Identifier	typeface_family		8109841	1					
ANR	8109910	PrimaryExpression	0		8109841	1					
ANR	8109911	CompoundStatement		14:76:510:510	8109841	1					
ANR	8109912	IfStatement	if ( plfont -> params . proportional_spacing )		8109841	0					
ANR	8109913	Condition	plfont -> params . proportional_spacing	395:12:13689:13723	8109841	0	True				
ANR	8109914	MemberAccess	plfont -> params . proportional_spacing		8109841	0					
ANR	8109915	PtrMemberAccess	plfont -> params		8109841	0					
ANR	8109916	Identifier	plfont		8109841	0					
ANR	8109917	Identifier	params		8109841	1					
ANR	8109918	Identifier	proportional_spacing		8109841	1					
ANR	8109919	ExpressionStatement	hmi = ( coord ) ( pl_fp_pitch_cp ( & plfont -> params ) / 10.0 * pfs -> params . height_4ths / 4 )	397:12:13804:13929	8109841	1	True				
ANR	8109920	AssignmentExpression	hmi = ( coord ) ( pl_fp_pitch_cp ( & plfont -> params ) / 10.0 * pfs -> params . height_4ths / 4 )		8109841	0		=			
ANR	8109921	Identifier	hmi		8109841	0					
ANR	8109922	CastExpression	( coord ) ( pl_fp_pitch_cp ( & plfont -> params ) / 10.0 * pfs -> params . height_4ths / 4 )		8109841	1					
ANR	8109923	CastTarget	coord		8109841	0					
ANR	8109924	MultiplicativeExpression	pl_fp_pitch_cp ( & plfont -> params ) / 10.0 * pfs -> params . height_4ths / 4		8109841	1		/			
ANR	8109925	CallExpression	pl_fp_pitch_cp ( & plfont -> params )		8109841	0					
ANR	8109926	Callee	pl_fp_pitch_cp		8109841	0					
ANR	8109927	Identifier	pl_fp_pitch_cp		8109841	0					
ANR	8109928	ArgumentList	& plfont -> params		8109841	1					
ANR	8109929	Argument	& plfont -> params		8109841	0					
ANR	8109930	UnaryOperationExpression	& plfont -> params		8109841	0					
ANR	8109931	UnaryOperator	&		8109841	0					
ANR	8109932	PtrMemberAccess	plfont -> params		8109841	1					
ANR	8109933	Identifier	plfont		8109841	0					
ANR	8109934	Identifier	params		8109841	1					
ANR	8109935	MultiplicativeExpression	10.0 * pfs -> params . height_4ths / 4		8109841	1		*			
ANR	8109936	PrimaryExpression	10.0		8109841	0					
ANR	8109937	MultiplicativeExpression	pfs -> params . height_4ths / 4		8109841	1		/			
ANR	8109938	MemberAccess	pfs -> params . height_4ths		8109841	0					
ANR	8109939	PtrMemberAccess	pfs -> params		8109841	0					
ANR	8109940	Identifier	pfs		8109841	0					
ANR	8109941	Identifier	params		8109841	1					
ANR	8109942	Identifier	height_4ths		8109841	1					
ANR	8109943	PrimaryExpression	4		8109841	1					
ANR	8109944	ElseStatement	else		8109841	0					
ANR	8109945	ExpressionStatement	hmi = ( coord ) pl_fp_pitch_cp ( & ( pfs -> params ) )	401:12:13956:14000	8109841	0	True				
ANR	8109946	AssignmentExpression	hmi = ( coord ) pl_fp_pitch_cp ( & ( pfs -> params ) )		8109841	0		=			
ANR	8109947	Identifier	hmi		8109841	0					
ANR	8109948	CastExpression	( coord ) pl_fp_pitch_cp ( & ( pfs -> params ) )		8109841	1					
ANR	8109949	CastTarget	coord		8109841	0					
ANR	8109950	CallExpression	pl_fp_pitch_cp ( & ( pfs -> params ) )		8109841	1					
ANR	8109951	Callee	pl_fp_pitch_cp		8109841	0					
ANR	8109952	Identifier	pl_fp_pitch_cp		8109841	0					
ANR	8109953	ArgumentList	& ( pfs -> params )		8109841	1					
ANR	8109954	Argument	& ( pfs -> params )		8109841	0					
ANR	8109955	UnaryOperationExpression	& ( pfs -> params )		8109841	0					
ANR	8109956	UnaryOperator	&		8109841	0					
ANR	8109957	PtrMemberAccess	pfs -> params		8109841	1					
ANR	8109958	Identifier	pfs		8109841	0					
ANR	8109959	Identifier	params		8109841	1					
ANR	8109960	ElseStatement	else		8109841	0					
ANR	8109961	ExpressionStatement	hmi = ( coord ) pl_fp_pitch_cp ( & ( plfont -> params ) )	403:8:14021:14068	8109841	0	True				
ANR	8109962	AssignmentExpression	hmi = ( coord ) pl_fp_pitch_cp ( & ( plfont -> params ) )		8109841	0		=			
ANR	8109963	Identifier	hmi		8109841	0					
ANR	8109964	CastExpression	( coord ) pl_fp_pitch_cp ( & ( plfont -> params ) )		8109841	1					
ANR	8109965	CastTarget	coord		8109841	0					
ANR	8109966	CallExpression	pl_fp_pitch_cp ( & ( plfont -> params ) )		8109841	1					
ANR	8109967	Callee	pl_fp_pitch_cp		8109841	0					
ANR	8109968	Identifier	pl_fp_pitch_cp		8109841	0					
ANR	8109969	ArgumentList	& ( plfont -> params )		8109841	1					
ANR	8109970	Argument	& ( plfont -> params )		8109841	0					
ANR	8109971	UnaryOperationExpression	& ( plfont -> params )		8109841	0					
ANR	8109972	UnaryOperator	&		8109841	0					
ANR	8109973	PtrMemberAccess	plfont -> params		8109841	1					
ANR	8109974	Identifier	plfont		8109841	0					
ANR	8109975	Identifier	params		8109841	1					
ANR	8109976	ExpressionStatement	hmi = hmi + pcs -> uom_cp / 2	409:4:14237:14264	8109841	6	True				
ANR	8109977	AssignmentExpression	hmi = hmi + pcs -> uom_cp / 2		8109841	0		=			
ANR	8109978	Identifier	hmi		8109841	0					
ANR	8109979	AdditiveExpression	hmi + pcs -> uom_cp / 2		8109841	1		+			
ANR	8109980	Identifier	hmi		8109841	0					
ANR	8109981	MultiplicativeExpression	pcs -> uom_cp / 2		8109841	1		/			
ANR	8109982	PtrMemberAccess	pcs -> uom_cp		8109841	0					
ANR	8109983	Identifier	pcs		8109841	0					
ANR	8109984	Identifier	uom_cp		8109841	1					
ANR	8109985	PrimaryExpression	2		8109841	1					
ANR	8109986	ReturnStatement	return pcs -> hmi_cp = hmi - ( hmi % pcs -> uom_cp ) ;	410:4:14270:14316	8109841	7	True				
ANR	8109987	AssignmentExpression	pcs -> hmi_cp = hmi - ( hmi % pcs -> uom_cp )		8109841	0		=			
ANR	8109988	PtrMemberAccess	pcs -> hmi_cp		8109841	0					
ANR	8109989	Identifier	pcs		8109841	0					
ANR	8109990	Identifier	hmi_cp		8109841	1					
ANR	8109991	AdditiveExpression	hmi - ( hmi % pcs -> uom_cp )		8109841	1		-			
ANR	8109992	Identifier	hmi		8109841	0					
ANR	8109993	MultiplicativeExpression	hmi % pcs -> uom_cp		8109841	1		%			
ANR	8109994	Identifier	hmi		8109841	0					
ANR	8109995	PtrMemberAccess	pcs -> uom_cp		8109841	1					
ANR	8109996	Identifier	pcs		8109841	0					
ANR	8109997	Identifier	uom_cp		8109841	1					
ANR	8109998	ReturnType	coord		8109841	1					
ANR	8109999	Identifier	pcl_updated_hmi		8109841	2					
ANR	8110000	ParameterList	pcl_state_t * pcs		8109841	3					
ANR	8110001	Parameter	pcl_state_t * pcs	380:16:13145:13161	8109841	0	True				
ANR	8110002	ParameterType	pcl_state_t *		8109841	0					
ANR	8110003	Identifier	pcs		8109841	1					
ANR	8110004	CFGEntryNode	ENTRY		8109841		True				
ANR	8110005	CFGExitNode	EXIT		8109841		True				
ANR	8110006	Symbol	& plfont -> params		8109841						
ANR	8110007	Symbol	pcs		8109841						
ANR	8110008	Symbol	code		8109841						
ANR	8110009	Symbol	pl_font_is_scalable		8109841						
ANR	8110010	Symbol	hmi		8109841						
ANR	8110011	Symbol	pcs -> hmi_cp		8109841						
ANR	8110012	Symbol	* pfs		8109841						
ANR	8110013	Symbol	false		8109841						
ANR	8110014	Symbol	pcs -> font_selection		8109841						
ANR	8110015	Symbol	* pcs		8109841						
ANR	8110016	Symbol	& pfs -> params		8109841						
ANR	8110017	Symbol	plfont		8109841						
ANR	8110018	Symbol	pcs -> font		8109841						
ANR	8110019	Symbol	pcl_recompute_font		8109841						
ANR	8110020	Symbol	pcs -> font_selected		8109841						
ANR	8110021	Symbol	pfs -> params		8109841						
ANR	8110022	Symbol	pcs -> uom_cp		8109841						
ANR	8110023	Symbol	plfont -> params		8109841						
ANR	8110024	Symbol	pl_fp_pitch_cp		8109841						
ANR	8110025	Symbol	* plfont		8109841						
ANR	8110026	Symbol	plfont -> params . typeface_family		8109841						
ANR	8110027	Symbol	pfs		8109841						
ANR	8110028	Symbol	pfs -> params . height_4ths		8109841						
ANR	8110029	Symbol	plfont -> params . proportional_spacing		8109841						
ANR	8110030	Function	set_horiz_motion_index	420:0:14396:14616							
ANR	8110031	FunctionDef	"set_horiz_motion_index (pcl_args_t * pargs , pcl_state_t * pcs)"		8110030	0					
ANR	8110032	CompoundStatement		422:0:14469:14616	8110030	0					
ANR	8110033	ExpressionStatement	pcs -> hmi_cp = ( coord ) ( ( fabs ( float_arg ( pargs ) ) * 60.0 ) + 0.5 )	424:4:14539:14600	8110030	0	True				
ANR	8110034	AssignmentExpression	pcs -> hmi_cp = ( coord ) ( ( fabs ( float_arg ( pargs ) ) * 60.0 ) + 0.5 )		8110030	0		=			
ANR	8110035	PtrMemberAccess	pcs -> hmi_cp		8110030	0					
ANR	8110036	Identifier	pcs		8110030	0					
ANR	8110037	Identifier	hmi_cp		8110030	1					
ANR	8110038	CastExpression	( coord ) ( ( fabs ( float_arg ( pargs ) ) * 60.0 ) + 0.5 )		8110030	1					
ANR	8110039	CastTarget	coord		8110030	0					
ANR	8110040	AdditiveExpression	( fabs ( float_arg ( pargs ) ) * 60.0 ) + 0.5		8110030	1		+			
ANR	8110041	MultiplicativeExpression	fabs ( float_arg ( pargs ) ) * 60.0		8110030	0		*			
ANR	8110042	CallExpression	fabs ( float_arg ( pargs ) )		8110030	0					
ANR	8110043	Callee	fabs		8110030	0					
ANR	8110044	Identifier	fabs		8110030	0					
ANR	8110045	ArgumentList	float_arg ( pargs )		8110030	1					
ANR	8110046	Argument	float_arg ( pargs )		8110030	0					
ANR	8110047	CallExpression	float_arg ( pargs )		8110030	0					
ANR	8110048	Callee	float_arg		8110030	0					
ANR	8110049	Identifier	float_arg		8110030	0					
ANR	8110050	ArgumentList	pargs		8110030	1					
ANR	8110051	Argument	pargs		8110030	0					
ANR	8110052	Identifier	pargs		8110030	0					
ANR	8110053	PrimaryExpression	60.0		8110030	1					
ANR	8110054	PrimaryExpression	0.5		8110030	1					
ANR	8110055	ReturnStatement	return 0 ;	425:4:14606:14614	8110030	1	True				
ANR	8110056	PrimaryExpression	0		8110030	0					
ANR	8110057	ReturnType	static int		8110030	1					
ANR	8110058	Identifier	set_horiz_motion_index		8110030	2					
ANR	8110059	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8110030	3					
ANR	8110060	Parameter	pcl_args_t * pargs	421:23:14430:14447	8110030	0	True				
ANR	8110061	ParameterType	pcl_args_t *		8110030	0					
ANR	8110062	Identifier	pargs		8110030	1					
ANR	8110063	Parameter	pcl_state_t * pcs	421:43:14450:14466	8110030	1	True				
ANR	8110064	ParameterType	pcl_state_t *		8110030	0					
ANR	8110065	Identifier	pcs		8110030	1					
ANR	8110066	CFGEntryNode	ENTRY		8110030		True				
ANR	8110067	CFGExitNode	EXIT		8110030		True				
ANR	8110068	Symbol	pcs		8110030						
ANR	8110069	Symbol	fabs		8110030						
ANR	8110070	Symbol	pargs		8110030						
ANR	8110071	Symbol	pcs -> hmi_cp		8110030						
ANR	8110072	Symbol	* pcs		8110030						
ANR	8110073	Symbol	float_arg		8110030						
ANR	8110074	Function	set_vert_motion_index	442:0:15038:15976							
ANR	8110075	FunctionDef	"set_vert_motion_index (pcl_args_t * pargs , pcl_state_t * pcs)"		8110074	0					
ANR	8110076	CompoundStatement		444:0:15110:15976	8110074	0					
ANR	8110077	IdentifierDeclStatement	coord vcp = ( coord ) ( ( fabs ( float_arg ( pargs ) ) * 7200.0 / 48.0 ) + 0.5 ) ;	448:4:15251:15319	8110074	0	True				
ANR	8110078	IdentifierDecl	vcp = ( coord ) ( ( fabs ( float_arg ( pargs ) ) * 7200.0 / 48.0 ) + 0.5 )		8110074	0					
ANR	8110079	IdentifierDeclType	coord		8110074	0					
ANR	8110080	Identifier	vcp		8110074	1					
ANR	8110081	AssignmentExpression	vcp = ( coord ) ( ( fabs ( float_arg ( pargs ) ) * 7200.0 / 48.0 ) + 0.5 )		8110074	2		=			
ANR	8110082	Identifier	vcp		8110074	0					
ANR	8110083	CastExpression	( coord ) ( ( fabs ( float_arg ( pargs ) ) * 7200.0 / 48.0 ) + 0.5 )		8110074	1					
ANR	8110084	CastTarget	coord		8110074	0					
ANR	8110085	AdditiveExpression	( fabs ( float_arg ( pargs ) ) * 7200.0 / 48.0 ) + 0.5		8110074	1		+			
ANR	8110086	MultiplicativeExpression	fabs ( float_arg ( pargs ) ) * 7200.0 / 48.0		8110074	0		*			
ANR	8110087	CallExpression	fabs ( float_arg ( pargs ) )		8110074	0					
ANR	8110088	Callee	fabs		8110074	0					
ANR	8110089	Identifier	fabs		8110074	0					
ANR	8110090	ArgumentList	float_arg ( pargs )		8110074	1					
ANR	8110091	Argument	float_arg ( pargs )		8110074	0					
ANR	8110092	CallExpression	float_arg ( pargs )		8110074	0					
ANR	8110093	Callee	float_arg		8110074	0					
ANR	8110094	Identifier	float_arg		8110074	0					
ANR	8110095	ArgumentList	pargs		8110074	1					
ANR	8110096	Argument	pargs		8110074	0					
ANR	8110097	Identifier	pargs		8110074	0					
ANR	8110098	MultiplicativeExpression	7200.0 / 48.0		8110074	1		/			
ANR	8110099	PrimaryExpression	7200.0		8110074	0					
ANR	8110100	PrimaryExpression	48.0		8110074	1					
ANR	8110101	PrimaryExpression	0.5		8110074	1					
ANR	8110102	IdentifierDeclStatement	bool cursor_at_home = pcl_cursor_at_home_pos ( pcs ) ;	449:4:15325:15374	8110074	1	True				
ANR	8110103	IdentifierDecl	cursor_at_home = pcl_cursor_at_home_pos ( pcs )		8110074	0					
ANR	8110104	IdentifierDeclType	bool		8110074	0					
ANR	8110105	Identifier	cursor_at_home		8110074	1					
ANR	8110106	AssignmentExpression	cursor_at_home = pcl_cursor_at_home_pos ( pcs )		8110074	2		=			
ANR	8110107	Identifier	cursor_at_home		8110074	0					
ANR	8110108	CallExpression	pcl_cursor_at_home_pos ( pcs )		8110074	1					
ANR	8110109	Callee	pcl_cursor_at_home_pos		8110074	0					
ANR	8110110	Identifier	pcl_cursor_at_home_pos		8110074	0					
ANR	8110111	ArgumentList	pcs		8110074	1					
ANR	8110112	Argument	pcs		8110074	0					
ANR	8110113	Identifier	pcs		8110074	0					
ANR	8110114	IfStatement	if ( vcp <= pcs -> xfm_state . pd_size . y )		8110074	2					
ANR	8110115	Condition	vcp <= pcs -> xfm_state . pd_size . y	452:8:15411:15441	8110074	0	True				
ANR	8110116	RelationalExpression	vcp <= pcs -> xfm_state . pd_size . y		8110074	0		<=			
ANR	8110117	Identifier	vcp		8110074	0					
ANR	8110118	MemberAccess	pcs -> xfm_state . pd_size . y		8110074	1					
ANR	8110119	MemberAccess	pcs -> xfm_state . pd_size		8110074	0					
ANR	8110120	PtrMemberAccess	pcs -> xfm_state		8110074	0					
ANR	8110121	Identifier	pcs		8110074	0					
ANR	8110122	Identifier	xfm_state		8110074	1					
ANR	8110123	Identifier	pd_size		8110074	1					
ANR	8110124	Identifier	y		8110074	1					
ANR	8110125	ExpressionStatement	pcs -> vmi_cp = vcp	454:8:15459:15476	8110074	1	True				
ANR	8110126	AssignmentExpression	pcs -> vmi_cp = vcp		8110074	0		=			
ANR	8110127	PtrMemberAccess	pcs -> vmi_cp		8110074	0					
ANR	8110128	Identifier	pcs		8110074	0					
ANR	8110129	Identifier	vmi_cp		8110074	1					
ANR	8110130	Identifier	vcp		8110074	1					
ANR	8110131	IfStatement	if ( cursor_at_home )		8110074	3					
ANR	8110132	Condition	cursor_at_home	463:8:15916:15929	8110074	0	True				
ANR	8110133	Identifier	cursor_at_home		8110074	0					
ANR	8110134	ExpressionStatement	pcl_home_cursor ( pcs )	464:8:15940:15960	8110074	1	True				
ANR	8110135	CallExpression	pcl_home_cursor ( pcs )		8110074	0					
ANR	8110136	Callee	pcl_home_cursor		8110074	0					
ANR	8110137	Identifier	pcl_home_cursor		8110074	0					
ANR	8110138	ArgumentList	pcs		8110074	1					
ANR	8110139	Argument	pcs		8110074	0					
ANR	8110140	Identifier	pcs		8110074	0					
ANR	8110141	ReturnStatement	return 0 ;	465:4:15966:15974	8110074	4	True				
ANR	8110142	PrimaryExpression	0		8110074	0					
ANR	8110143	ReturnType	static int		8110074	1					
ANR	8110144	Identifier	set_vert_motion_index		8110074	2					
ANR	8110145	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8110074	3					
ANR	8110146	Parameter	pcl_args_t * pargs	443:22:15071:15088	8110074	0	True				
ANR	8110147	ParameterType	pcl_args_t *		8110074	0					
ANR	8110148	Identifier	pargs		8110074	1					
ANR	8110149	Parameter	pcl_state_t * pcs	443:42:15091:15107	8110074	1	True				
ANR	8110150	ParameterType	pcl_state_t *		8110074	0					
ANR	8110151	Identifier	pcs		8110074	1					
ANR	8110152	CFGEntryNode	ENTRY		8110074		True				
ANR	8110153	CFGExitNode	EXIT		8110074		True				
ANR	8110154	Symbol	pcs -> xfm_state . pd_size . y		8110074						
ANR	8110155	Symbol	pcs		8110074						
ANR	8110156	Symbol	pcs -> xfm_state		8110074						
ANR	8110157	Symbol	vcp		8110074						
ANR	8110158	Symbol	fabs		8110074						
ANR	8110159	Symbol	pcl_cursor_at_home_pos		8110074						
ANR	8110160	Symbol	pargs		8110074						
ANR	8110161	Symbol	cursor_at_home		8110074						
ANR	8110162	Symbol	* pcs		8110074						
ANR	8110163	Symbol	pcs -> vmi_cp		8110074						
ANR	8110164	Symbol	pcs -> xfm_state . pd_size		8110074						
ANR	8110165	Symbol	float_arg		8110074						
ANR	8110166	Function	set_line_spacing	476:0:16189:16596							
ANR	8110167	FunctionDef	"set_line_spacing (pcl_args_t * pargs , pcl_state_t * pcs)"		8110166	0					
ANR	8110168	CompoundStatement		478:0:16256:16596	8110166	0					
ANR	8110169	IdentifierDeclStatement	uint lpi = uint_arg ( pargs ) ;	479:4:16262:16288	8110166	0	True				
ANR	8110170	IdentifierDecl	lpi = uint_arg ( pargs )		8110166	0					
ANR	8110171	IdentifierDeclType	uint		8110166	0					
ANR	8110172	Identifier	lpi		8110166	1					
ANR	8110173	AssignmentExpression	lpi = uint_arg ( pargs )		8110166	2		=			
ANR	8110174	Identifier	lpi		8110166	0					
ANR	8110175	CallExpression	uint_arg ( pargs )		8110166	1					
ANR	8110176	Callee	uint_arg		8110166	0					
ANR	8110177	Identifier	uint_arg		8110166	0					
ANR	8110178	ArgumentList	pargs		8110166	1					
ANR	8110179	Argument	pargs		8110166	0					
ANR	8110180	Identifier	pargs		8110166	0					
ANR	8110181	IdentifierDeclStatement	bool cursor_at_home = pcl_cursor_at_home_pos ( pcs ) ;	480:4:16294:16343	8110166	1	True				
ANR	8110182	IdentifierDecl	cursor_at_home = pcl_cursor_at_home_pos ( pcs )		8110166	0					
ANR	8110183	IdentifierDeclType	bool		8110166	0					
ANR	8110184	Identifier	cursor_at_home		8110166	1					
ANR	8110185	AssignmentExpression	cursor_at_home = pcl_cursor_at_home_pos ( pcs )		8110166	2		=			
ANR	8110186	Identifier	cursor_at_home		8110166	0					
ANR	8110187	CallExpression	pcl_cursor_at_home_pos ( pcs )		8110166	1					
ANR	8110188	Callee	pcl_cursor_at_home_pos		8110166	0					
ANR	8110189	Identifier	pcl_cursor_at_home_pos		8110166	0					
ANR	8110190	ArgumentList	pcs		8110166	1					
ANR	8110191	Argument	pcs		8110166	0					
ANR	8110192	Identifier	pcs		8110166	0					
ANR	8110193	IfStatement	if ( lpi == 0 )		8110166	2					
ANR	8110194	Condition	lpi == 0	482:8:16354:16361	8110166	0	True				
ANR	8110195	EqualityExpression	lpi == 0		8110166	0		==			
ANR	8110196	Identifier	lpi		8110166	0					
ANR	8110197	PrimaryExpression	0		8110166	1					
ANR	8110198	ExpressionStatement	lpi = 12	483:8:16416:16424	8110166	1	True				
ANR	8110199	AssignmentExpression	lpi = 12		8110166	0		=			
ANR	8110200	Identifier	lpi		8110166	0					
ANR	8110201	PrimaryExpression	12		8110166	1					
ANR	8110202	IfStatement	if ( ( 48 % lpi ) == 0 )		8110166	3					
ANR	8110203	Condition	( 48 % lpi ) == 0	484:8:16434:16448	8110166	0	True				
ANR	8110204	EqualityExpression	( 48 % lpi ) == 0		8110166	0		==			
ANR	8110205	MultiplicativeExpression	48 % lpi		8110166	0		%			
ANR	8110206	PrimaryExpression	48		8110166	0					
ANR	8110207	Identifier	lpi		8110166	1					
ANR	8110208	PrimaryExpression	0		8110166	1					
ANR	8110209	ExpressionStatement	pcs -> vmi_cp = inch2coord ( 1.0 / lpi )	485:8:16491:16526	8110166	1	True				
ANR	8110210	AssignmentExpression	pcs -> vmi_cp = inch2coord ( 1.0 / lpi )		8110166	0		=			
ANR	8110211	PtrMemberAccess	pcs -> vmi_cp		8110166	0					
ANR	8110212	Identifier	pcs		8110166	0					
ANR	8110213	Identifier	vmi_cp		8110166	1					
ANR	8110214	CallExpression	inch2coord ( 1.0 / lpi )		8110166	1					
ANR	8110215	Callee	inch2coord		8110166	0					
ANR	8110216	Identifier	inch2coord		8110166	0					
ANR	8110217	ArgumentList	1.0 / lpi		8110166	1					
ANR	8110218	Argument	1.0 / lpi		8110166	0					
ANR	8110219	MultiplicativeExpression	1.0 / lpi		8110166	0		/			
ANR	8110220	PrimaryExpression	1.0		8110166	0					
ANR	8110221	Identifier	lpi		8110166	1					
ANR	8110222	IfStatement	if ( cursor_at_home )		8110166	4					
ANR	8110223	Condition	cursor_at_home	486:8:16536:16549	8110166	0	True				
ANR	8110224	Identifier	cursor_at_home		8110166	0					
ANR	8110225	ExpressionStatement	pcl_home_cursor ( pcs )	487:8:16560:16580	8110166	1	True				
ANR	8110226	CallExpression	pcl_home_cursor ( pcs )		8110166	0					
ANR	8110227	Callee	pcl_home_cursor		8110166	0					
ANR	8110228	Identifier	pcl_home_cursor		8110166	0					
ANR	8110229	ArgumentList	pcs		8110166	1					
ANR	8110230	Argument	pcs		8110166	0					
ANR	8110231	Identifier	pcs		8110166	0					
ANR	8110232	ReturnStatement	return 0 ;	488:4:16586:16594	8110166	5	True				
ANR	8110233	PrimaryExpression	0		8110166	0					
ANR	8110234	ReturnType	static int		8110166	1					
ANR	8110235	Identifier	set_line_spacing		8110166	2					
ANR	8110236	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8110166	3					
ANR	8110237	Parameter	pcl_args_t * pargs	477:17:16217:16234	8110166	0	True				
ANR	8110238	ParameterType	pcl_args_t *		8110166	0					
ANR	8110239	Identifier	pargs		8110166	1					
ANR	8110240	Parameter	pcl_state_t * pcs	477:37:16237:16253	8110166	1	True				
ANR	8110241	ParameterType	pcl_state_t *		8110166	0					
ANR	8110242	Identifier	pcs		8110166	1					
ANR	8110243	CFGEntryNode	ENTRY		8110166		True				
ANR	8110244	CFGExitNode	EXIT		8110166		True				
ANR	8110245	Symbol	inch2coord		8110166						
ANR	8110246	Symbol	pcs		8110166						
ANR	8110247	Symbol	lpi		8110166						
ANR	8110248	Symbol	pcl_cursor_at_home_pos		8110166						
ANR	8110249	Symbol	pargs		8110166						
ANR	8110250	Symbol	cursor_at_home		8110166						
ANR	8110251	Symbol	* pcs		8110166						
ANR	8110252	Symbol	pcs -> vmi_cp		8110166						
ANR	8110253	Symbol	uint_arg		8110166						
ANR	8110254	Function	set_line_termination	494:0:16619:16791							
ANR	8110255	FunctionDef	"set_line_termination (pcl_args_t * pargs , pcl_state_t * pcs)"		8110254	0					
ANR	8110256	CompoundStatement		496:0:16690:16791	8110254	0					
ANR	8110257	IdentifierDeclStatement	uint ui = uint_arg ( pargs ) ;	497:4:16696:16721	8110254	0	True				
ANR	8110258	IdentifierDecl	ui = uint_arg ( pargs )		8110254	0					
ANR	8110259	IdentifierDeclType	uint		8110254	0					
ANR	8110260	Identifier	ui		8110254	1					
ANR	8110261	AssignmentExpression	ui = uint_arg ( pargs )		8110254	2		=			
ANR	8110262	Identifier	ui		8110254	0					
ANR	8110263	CallExpression	uint_arg ( pargs )		8110254	1					
ANR	8110264	Callee	uint_arg		8110254	0					
ANR	8110265	Identifier	uint_arg		8110254	0					
ANR	8110266	ArgumentList	pargs		8110254	1					
ANR	8110267	Argument	pargs		8110254	0					
ANR	8110268	Identifier	pargs		8110254	0					
ANR	8110269	IfStatement	if ( ui <= 3 )		8110254	1					
ANR	8110270	Condition	ui <= 3	499:8:16732:16738	8110254	0	True				
ANR	8110271	RelationalExpression	ui <= 3		8110254	0		<=			
ANR	8110272	Identifier	ui		8110254	0					
ANR	8110273	PrimaryExpression	3		8110254	1					
ANR	8110274	ExpressionStatement	pcs -> line_termination = ui	500:8:16749:16775	8110254	1	True				
ANR	8110275	AssignmentExpression	pcs -> line_termination = ui		8110254	0		=			
ANR	8110276	PtrMemberAccess	pcs -> line_termination		8110254	0					
ANR	8110277	Identifier	pcs		8110254	0					
ANR	8110278	Identifier	line_termination		8110254	1					
ANR	8110279	Identifier	ui		8110254	1					
ANR	8110280	ReturnStatement	return 0 ;	501:4:16781:16789	8110254	2	True				
ANR	8110281	PrimaryExpression	0		8110254	0					
ANR	8110282	ReturnType	static int		8110254	1					
ANR	8110283	Identifier	set_line_termination		8110254	2					
ANR	8110284	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8110254	3					
ANR	8110285	Parameter	pcl_args_t * pargs	495:21:16651:16668	8110254	0	True				
ANR	8110286	ParameterType	pcl_args_t *		8110254	0					
ANR	8110287	Identifier	pargs		8110254	1					
ANR	8110288	Parameter	pcl_state_t * pcs	495:41:16671:16687	8110254	1	True				
ANR	8110289	ParameterType	pcl_state_t *		8110254	0					
ANR	8110290	Identifier	pcs		8110254	1					
ANR	8110291	CFGEntryNode	ENTRY		8110254		True				
ANR	8110292	CFGExitNode	EXIT		8110254		True				
ANR	8110293	Symbol	pcs		8110254						
ANR	8110294	Symbol	ui		8110254						
ANR	8110295	Symbol	pargs		8110254						
ANR	8110296	Symbol	* pcs		8110254						
ANR	8110297	Symbol	uint_arg		8110254						
ANR	8110298	Symbol	pcs -> line_termination		8110254						
ANR	8110299	Function	horiz_cursor_pos_columns	507:0:16821:16966							
ANR	8110300	FunctionDef	"horiz_cursor_pos_columns (pcl_args_t * pargs , pcl_state_t * pcs)"		8110299	0					
ANR	8110301	CompoundStatement		509:0:16896:16966	8110299	0					
ANR	8110302	ExpressionStatement	"do_horiz_motion ( pargs , pcs , pcl_hmi ( pcs ) , false )"	510:4:16902:16950	8110299	0	True				
ANR	8110303	CallExpression	"do_horiz_motion ( pargs , pcs , pcl_hmi ( pcs ) , false )"		8110299	0					
ANR	8110304	Callee	do_horiz_motion		8110299	0					
ANR	8110305	Identifier	do_horiz_motion		8110299	0					
ANR	8110306	ArgumentList	pargs		8110299	1					
ANR	8110307	Argument	pargs		8110299	0					
ANR	8110308	Identifier	pargs		8110299	0					
ANR	8110309	Argument	pcs		8110299	1					
ANR	8110310	Identifier	pcs		8110299	0					
ANR	8110311	Argument	pcl_hmi ( pcs )		8110299	2					
ANR	8110312	CallExpression	pcl_hmi ( pcs )		8110299	0					
ANR	8110313	Callee	pcl_hmi		8110299	0					
ANR	8110314	Identifier	pcl_hmi		8110299	0					
ANR	8110315	ArgumentList	pcs		8110299	1					
ANR	8110316	Argument	pcs		8110299	0					
ANR	8110317	Identifier	pcs		8110299	0					
ANR	8110318	Argument	false		8110299	3					
ANR	8110319	Identifier	false		8110299	0					
ANR	8110320	ReturnStatement	return 0 ;	511:4:16956:16964	8110299	1	True				
ANR	8110321	PrimaryExpression	0		8110299	0					
ANR	8110322	ReturnType	static int		8110299	1					
ANR	8110323	Identifier	horiz_cursor_pos_columns		8110299	2					
ANR	8110324	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8110299	3					
ANR	8110325	Parameter	pcl_args_t * pargs	508:25:16857:16874	8110299	0	True				
ANR	8110326	ParameterType	pcl_args_t *		8110299	0					
ANR	8110327	Identifier	pargs		8110299	1					
ANR	8110328	Parameter	pcl_state_t * pcs	508:45:16877:16893	8110299	1	True				
ANR	8110329	ParameterType	pcl_state_t *		8110299	0					
ANR	8110330	Identifier	pcs		8110299	1					
ANR	8110331	CFGEntryNode	ENTRY		8110299		True				
ANR	8110332	CFGExitNode	EXIT		8110299		True				
ANR	8110333	Symbol	pcs		8110299						
ANR	8110334	Symbol	pargs		8110299						
ANR	8110335	Symbol	pcl_hmi		8110299						
ANR	8110336	Symbol	false		8110299						
ANR	8110337	Function	horiz_cursor_pos_decipoints	517:0:16994:17142							
ANR	8110338	FunctionDef	"horiz_cursor_pos_decipoints (pcl_args_t * pargs , pcl_state_t * pcs)"		8110337	0					
ANR	8110339	CompoundStatement		519:0:17072:17142	8110337	0					
ANR	8110340	ExpressionStatement	"do_horiz_motion ( pargs , pcs , ( coord ) 10.0 , false )"	520:4:17078:17126	8110337	0	True				
ANR	8110341	CallExpression	"do_horiz_motion ( pargs , pcs , ( coord ) 10.0 , false )"		8110337	0					
ANR	8110342	Callee	do_horiz_motion		8110337	0					
ANR	8110343	Identifier	do_horiz_motion		8110337	0					
ANR	8110344	ArgumentList	pargs		8110337	1					
ANR	8110345	Argument	pargs		8110337	0					
ANR	8110346	Identifier	pargs		8110337	0					
ANR	8110347	Argument	pcs		8110337	1					
ANR	8110348	Identifier	pcs		8110337	0					
ANR	8110349	Argument	( coord ) 10.0		8110337	2					
ANR	8110350	CastExpression	( coord ) 10.0		8110337	0					
ANR	8110351	CastTarget	coord		8110337	0					
ANR	8110352	PrimaryExpression	10.0		8110337	1					
ANR	8110353	Argument	false		8110337	3					
ANR	8110354	Identifier	false		8110337	0					
ANR	8110355	ReturnStatement	return 0 ;	521:4:17132:17140	8110337	1	True				
ANR	8110356	PrimaryExpression	0		8110337	0					
ANR	8110357	ReturnType	static int		8110337	1					
ANR	8110358	Identifier	horiz_cursor_pos_decipoints		8110337	2					
ANR	8110359	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8110337	3					
ANR	8110360	Parameter	pcl_args_t * pargs	518:28:17033:17050	8110337	0	True				
ANR	8110361	ParameterType	pcl_args_t *		8110337	0					
ANR	8110362	Identifier	pargs		8110337	1					
ANR	8110363	Parameter	pcl_state_t * pcs	518:48:17053:17069	8110337	1	True				
ANR	8110364	ParameterType	pcl_state_t *		8110337	0					
ANR	8110365	Identifier	pcs		8110337	1					
ANR	8110366	CFGEntryNode	ENTRY		8110337		True				
ANR	8110367	CFGExitNode	EXIT		8110337		True				
ANR	8110368	Symbol	pcs		8110337						
ANR	8110369	Symbol	pargs		8110337						
ANR	8110370	Symbol	false		8110337						
ANR	8110371	Function	horiz_cursor_pos_units	527:0:17173:17314							
ANR	8110372	FunctionDef	"horiz_cursor_pos_units (pcl_args_t * pargs , pcl_state_t * pcs)"		8110371	0					
ANR	8110373	CompoundStatement		529:0:17246:17314	8110371	0					
ANR	8110374	ExpressionStatement	"do_horiz_motion ( pargs , pcs , pcs -> uom_cp , true )"	530:4:17252:17298	8110371	0	True				
ANR	8110375	CallExpression	"do_horiz_motion ( pargs , pcs , pcs -> uom_cp , true )"		8110371	0					
ANR	8110376	Callee	do_horiz_motion		8110371	0					
ANR	8110377	Identifier	do_horiz_motion		8110371	0					
ANR	8110378	ArgumentList	pargs		8110371	1					
ANR	8110379	Argument	pargs		8110371	0					
ANR	8110380	Identifier	pargs		8110371	0					
ANR	8110381	Argument	pcs		8110371	1					
ANR	8110382	Identifier	pcs		8110371	0					
ANR	8110383	Argument	pcs -> uom_cp		8110371	2					
ANR	8110384	PtrMemberAccess	pcs -> uom_cp		8110371	0					
ANR	8110385	Identifier	pcs		8110371	0					
ANR	8110386	Identifier	uom_cp		8110371	1					
ANR	8110387	Argument	true		8110371	3					
ANR	8110388	Identifier	true		8110371	0					
ANR	8110389	ReturnStatement	return 0 ;	531:4:17304:17312	8110371	1	True				
ANR	8110390	PrimaryExpression	0		8110371	0					
ANR	8110391	ReturnType	static int		8110371	1					
ANR	8110392	Identifier	horiz_cursor_pos_units		8110371	2					
ANR	8110393	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8110371	3					
ANR	8110394	Parameter	pcl_args_t * pargs	528:23:17207:17224	8110371	0	True				
ANR	8110395	ParameterType	pcl_args_t *		8110371	0					
ANR	8110396	Identifier	pargs		8110371	1					
ANR	8110397	Parameter	pcl_state_t * pcs	528:43:17227:17243	8110371	1	True				
ANR	8110398	ParameterType	pcl_state_t *		8110371	0					
ANR	8110399	Identifier	pcs		8110371	1					
ANR	8110400	CFGEntryNode	ENTRY		8110371		True				
ANR	8110401	CFGExitNode	EXIT		8110371		True				
ANR	8110402	Symbol	pcs		8110371						
ANR	8110403	Symbol	pargs		8110371						
ANR	8110404	Symbol	pcs -> uom_cp		8110371						
ANR	8110405	Symbol	true		8110371						
ANR	8110406	Symbol	* pcs		8110371						
ANR	8110407	Function	cmd_CR	537:0:17330:17503							
ANR	8110408	FunctionDef	"cmd_CR (pcl_args_t * pargs , pcl_state_t * pcs)"		8110407	0					
ANR	8110409	CompoundStatement		540:0:17413:17503	8110407	0					
ANR	8110410	ExpressionStatement	pcl_do_CR ( pcs )	541:4:17419:17433	8110407	0	True				
ANR	8110411	CallExpression	pcl_do_CR ( pcs )		8110407	0					
ANR	8110412	Callee	pcl_do_CR		8110407	0					
ANR	8110413	Identifier	pcl_do_CR		8110407	0					
ANR	8110414	ArgumentList	pcs		8110407	1					
ANR	8110415	Argument	pcs		8110407	0					
ANR	8110416	Identifier	pcs		8110407	0					
ANR	8110417	ReturnStatement	return ( ( pcs -> line_termination & 1 ) != 0 ? pcl_do_LF ( pcs ) : 0 ) ;	542:4:17439:17501	8110407	1	True				
ANR	8110418	ConditionalExpression	( pcs -> line_termination & 1 ) != 0 ? pcl_do_LF ( pcs ) : 0		8110407	0					
ANR	8110419	Condition	( pcs -> line_termination & 1 ) != 0		8110407	0					
ANR	8110420	EqualityExpression	( pcs -> line_termination & 1 ) != 0		8110407	0		!=			
ANR	8110421	BitAndExpression	pcs -> line_termination & 1		8110407	0		&			
ANR	8110422	PtrMemberAccess	pcs -> line_termination		8110407	0					
ANR	8110423	Identifier	pcs		8110407	0					
ANR	8110424	Identifier	line_termination		8110407	1					
ANR	8110425	PrimaryExpression	1		8110407	1					
ANR	8110426	PrimaryExpression	0		8110407	1					
ANR	8110427	CallExpression	pcl_do_LF ( pcs )		8110407	1					
ANR	8110428	Callee	pcl_do_LF		8110407	0					
ANR	8110429	Identifier	pcl_do_LF		8110407	0					
ANR	8110430	ArgumentList	pcs		8110407	1					
ANR	8110431	Argument	pcs		8110407	0					
ANR	8110432	Identifier	pcs		8110407	0					
ANR	8110433	PrimaryExpression	0		8110407	2					
ANR	8110434	ReturnType	static int		8110407	1					
ANR	8110435	Identifier	cmd_CR		8110407	2					
ANR	8110436	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8110407	3					
ANR	8110437	Parameter	pcl_args_t * pargs	538:7:17348:17365	8110407	0	True				
ANR	8110438	ParameterType	pcl_args_t *		8110407	0					
ANR	8110439	Identifier	pargs		8110407	1					
ANR	8110440	Parameter	pcl_state_t * pcs	539:7:17394:17410	8110407	1	True				
ANR	8110441	ParameterType	pcl_state_t *		8110407	0					
ANR	8110442	Identifier	pcs		8110407	1					
ANR	8110443	CFGEntryNode	ENTRY		8110407		True				
ANR	8110444	CFGExitNode	EXIT		8110407		True				
ANR	8110445	Symbol	pcs		8110407						
ANR	8110446	Symbol	pargs		8110407						
ANR	8110447	Symbol	* pcs		8110407						
ANR	8110448	Symbol	pcs -> line_termination		8110407						
ANR	8110449	Symbol	pcl_do_LF		8110407						
ANR	8110450	Function	cmd_BS	548:0:17519:17740							
ANR	8110451	FunctionDef	"cmd_BS (pcl_args_t * pargs , pcl_state_t * pcs)"		8110450	0					
ANR	8110452	CompoundStatement		551:0:17602:17740	8110450	0					
ANR	8110453	ExpressionStatement	"pcl_set_cap_x ( pcs , ( coord ) - pcs -> last_width , true , true )"	552:4:17608:17665	8110450	0	True				
ANR	8110454	CallExpression	"pcl_set_cap_x ( pcs , ( coord ) - pcs -> last_width , true , true )"		8110450	0					
ANR	8110455	Callee	pcl_set_cap_x		8110450	0					
ANR	8110456	Identifier	pcl_set_cap_x		8110450	0					
ANR	8110457	ArgumentList	pcs		8110450	1					
ANR	8110458	Argument	pcs		8110450	0					
ANR	8110459	Identifier	pcs		8110450	0					
ANR	8110460	Argument	( coord ) - pcs -> last_width		8110450	1					
ANR	8110461	CastExpression	( coord ) - pcs -> last_width		8110450	0					
ANR	8110462	CastTarget	coord		8110450	0					
ANR	8110463	UnaryOperationExpression	- pcs -> last_width		8110450	1					
ANR	8110464	UnaryOperator	-		8110450	0					
ANR	8110465	PtrMemberAccess	pcs -> last_width		8110450	1					
ANR	8110466	Identifier	pcs		8110450	0					
ANR	8110467	Identifier	last_width		8110450	1					
ANR	8110468	Argument	true		8110450	2					
ANR	8110469	Identifier	true		8110450	0					
ANR	8110470	Argument	true		8110450	3					
ANR	8110471	Identifier	true		8110450	0					
ANR	8110472	ExpressionStatement	pcs -> last_was_BS = true	553:4:17671:17694	8110450	1	True				
ANR	8110473	AssignmentExpression	pcs -> last_was_BS = true		8110450	0		=			
ANR	8110474	PtrMemberAccess	pcs -> last_was_BS		8110450	0					
ANR	8110475	Identifier	pcs		8110450	0					
ANR	8110476	Identifier	last_was_BS		8110450	1					
ANR	8110477	Identifier	true		8110450	1					
ANR	8110478	ExpressionStatement	pcs -> cursor_moved = true	554:4:17700:17724	8110450	2	True				
ANR	8110479	AssignmentExpression	pcs -> cursor_moved = true		8110450	0		=			
ANR	8110480	PtrMemberAccess	pcs -> cursor_moved		8110450	0					
ANR	8110481	Identifier	pcs		8110450	0					
ANR	8110482	Identifier	cursor_moved		8110450	1					
ANR	8110483	Identifier	true		8110450	1					
ANR	8110484	ReturnStatement	return 0 ;	555:4:17730:17738	8110450	3	True				
ANR	8110485	PrimaryExpression	0		8110450	0					
ANR	8110486	ReturnType	static int		8110450	1					
ANR	8110487	Identifier	cmd_BS		8110450	2					
ANR	8110488	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8110450	3					
ANR	8110489	Parameter	pcl_args_t * pargs	549:7:17537:17554	8110450	0	True				
ANR	8110490	ParameterType	pcl_args_t *		8110450	0					
ANR	8110491	Identifier	pargs		8110450	1					
ANR	8110492	Parameter	pcl_state_t * pcs	550:7:17583:17599	8110450	1	True				
ANR	8110493	ParameterType	pcl_state_t *		8110450	0					
ANR	8110494	Identifier	pcs		8110450	1					
ANR	8110495	CFGEntryNode	ENTRY		8110450		True				
ANR	8110496	CFGExitNode	EXIT		8110450		True				
ANR	8110497	Symbol	pcs		8110450						
ANR	8110498	Symbol	pcs -> cursor_moved		8110450						
ANR	8110499	Symbol	pargs		8110450						
ANR	8110500	Symbol	pcs -> last_was_BS		8110450						
ANR	8110501	Symbol	true		8110450						
ANR	8110502	Symbol	* pcs		8110450						
ANR	8110503	Symbol	pcs -> last_width		8110450						
ANR	8110504	Function	cmd_HT	563:0:17827:18185							
ANR	8110505	FunctionDef	"cmd_HT (pcl_args_t * pargs , pcl_state_t * pcs)"		8110504	0					
ANR	8110506	CompoundStatement		566:0:17910:18185	8110504	0					
ANR	8110507	IdentifierDeclStatement	coord x = pcs -> cap . x - pcs -> margins . left ;	567:4:17916:17956	8110504	0	True				
ANR	8110508	IdentifierDecl	x = pcs -> cap . x - pcs -> margins . left		8110504	0					
ANR	8110509	IdentifierDeclType	coord		8110504	0					
ANR	8110510	Identifier	x		8110504	1					
ANR	8110511	AssignmentExpression	x = pcs -> cap . x - pcs -> margins . left		8110504	2		=			
ANR	8110512	Identifier	x		8110504	0					
ANR	8110513	AdditiveExpression	pcs -> cap . x - pcs -> margins . left		8110504	1		-			
ANR	8110514	MemberAccess	pcs -> cap . x		8110504	0					
ANR	8110515	PtrMemberAccess	pcs -> cap		8110504	0					
ANR	8110516	Identifier	pcs		8110504	0					
ANR	8110517	Identifier	cap		8110504	1					
ANR	8110518	Identifier	x		8110504	1					
ANR	8110519	MemberAccess	pcs -> margins . left		8110504	1					
ANR	8110520	PtrMemberAccess	pcs -> margins		8110504	0					
ANR	8110521	Identifier	pcs		8110504	0					
ANR	8110522	Identifier	margins		8110504	1					
ANR	8110523	Identifier	left		8110504	1					
ANR	8110524	IdentifierDeclStatement	coord tab ;	568:4:17962:17971	8110504	1	True				
ANR	8110525	IdentifierDecl	tab		8110504	0					
ANR	8110526	IdentifierDeclType	coord		8110504	0					
ANR	8110527	Identifier	tab		8110504	1					
ANR	8110528	IfStatement	if ( x < 0 )		8110504	2					
ANR	8110529	Condition	x < 0	570:8:17982:17986	8110504	0	True				
ANR	8110530	RelationalExpression	x < 0		8110504	0		<			
ANR	8110531	Identifier	x		8110504	0					
ANR	8110532	PrimaryExpression	0		8110504	1					
ANR	8110533	ExpressionStatement	x = - x	571:8:17997:18003	8110504	1	True				
ANR	8110534	AssignmentExpression	x = - x		8110504	0		=			
ANR	8110535	Identifier	x		8110504	0					
ANR	8110536	UnaryOperationExpression	- x		8110504	1					
ANR	8110537	UnaryOperator	-		8110504	0					
ANR	8110538	Identifier	x		8110504	1					
ANR	8110539	ElseStatement	else		8110504	0					
ANR	8110540	IfStatement	if ( ( tab = 8 * pcl_hmi ( pcs ) ) > 0 )		8110504	0					
ANR	8110541	Condition	( tab = 8 * pcl_hmi ( pcs ) ) > 0	572:13:18018:18045	8110504	0	True				
ANR	8110542	RelationalExpression	( tab = 8 * pcl_hmi ( pcs ) ) > 0		8110504	0		>			
ANR	8110543	AssignmentExpression	tab = 8 * pcl_hmi ( pcs )		8110504	0		=			
ANR	8110544	Identifier	tab		8110504	0					
ANR	8110545	MultiplicativeExpression	8 * pcl_hmi ( pcs )		8110504	1		*			
ANR	8110546	PrimaryExpression	8		8110504	0					
ANR	8110547	CallExpression	pcl_hmi ( pcs )		8110504	1					
ANR	8110548	Callee	pcl_hmi		8110504	0					
ANR	8110549	Identifier	pcl_hmi		8110504	0					
ANR	8110550	ArgumentList	pcs		8110504	1					
ANR	8110551	Argument	pcs		8110504	0					
ANR	8110552	Identifier	pcs		8110504	0					
ANR	8110553	PrimaryExpression	0		8110504	1					
ANR	8110554	ExpressionStatement	x = tab - ( x % tab )	573:8:18056:18075	8110504	1	True				
ANR	8110555	AssignmentExpression	x = tab - ( x % tab )		8110504	0		=			
ANR	8110556	Identifier	x		8110504	0					
ANR	8110557	AdditiveExpression	tab - ( x % tab )		8110504	1		-			
ANR	8110558	Identifier	tab		8110504	0					
ANR	8110559	MultiplicativeExpression	x % tab		8110504	1		%			
ANR	8110560	Identifier	x		8110504	0					
ANR	8110561	Identifier	tab		8110504	1					
ANR	8110562	ElseStatement	else		8110504	0					
ANR	8110563	ExpressionStatement	x = 0L	575:8:18094:18100	8110504	0	True				
ANR	8110564	AssignmentExpression	x = 0L		8110504	0		=			
ANR	8110565	Identifier	x		8110504	0					
ANR	8110566	PrimaryExpression	0L		8110504	1					
ANR	8110567	ExpressionStatement	"pcl_set_cap_x ( pcs , x , true , true )"	576:4:18106:18139	8110504	3	True				
ANR	8110568	CallExpression	"pcl_set_cap_x ( pcs , x , true , true )"		8110504	0					
ANR	8110569	Callee	pcl_set_cap_x		8110504	0					
ANR	8110570	Identifier	pcl_set_cap_x		8110504	0					
ANR	8110571	ArgumentList	pcs		8110504	1					
ANR	8110572	Argument	pcs		8110504	0					
ANR	8110573	Identifier	pcs		8110504	0					
ANR	8110574	Argument	x		8110504	1					
ANR	8110575	Identifier	x		8110504	0					
ANR	8110576	Argument	true		8110504	2					
ANR	8110577	Identifier	true		8110504	0					
ANR	8110578	Argument	true		8110504	3					
ANR	8110579	Identifier	true		8110504	0					
ANR	8110580	ExpressionStatement	pcs -> cursor_moved = true	577:4:18145:18169	8110504	4	True				
ANR	8110581	AssignmentExpression	pcs -> cursor_moved = true		8110504	0		=			
ANR	8110582	PtrMemberAccess	pcs -> cursor_moved		8110504	0					
ANR	8110583	Identifier	pcs		8110504	0					
ANR	8110584	Identifier	cursor_moved		8110504	1					
ANR	8110585	Identifier	true		8110504	1					
ANR	8110586	ReturnStatement	return 0 ;	578:4:18175:18183	8110504	5	True				
ANR	8110587	PrimaryExpression	0		8110504	0					
ANR	8110588	ReturnType	static int		8110504	1					
ANR	8110589	Identifier	cmd_HT		8110504	2					
ANR	8110590	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8110504	3					
ANR	8110591	Parameter	pcl_args_t * pargs	564:7:17845:17862	8110504	0	True				
ANR	8110592	ParameterType	pcl_args_t *		8110504	0					
ANR	8110593	Identifier	pargs		8110504	1					
ANR	8110594	Parameter	pcl_state_t * pcs	565:7:17891:17907	8110504	1	True				
ANR	8110595	ParameterType	pcl_state_t *		8110504	0					
ANR	8110596	Identifier	pcs		8110504	1					
ANR	8110597	CFGEntryNode	ENTRY		8110504		True				
ANR	8110598	CFGExitNode	EXIT		8110504		True				
ANR	8110599	Symbol	pcs		8110504						
ANR	8110600	Symbol	pcs -> margins . left		8110504						
ANR	8110601	Symbol	tab		8110504						
ANR	8110602	Symbol	pcs -> cursor_moved		8110504						
ANR	8110603	Symbol	pargs		8110504						
ANR	8110604	Symbol	pcl_hmi		8110504						
ANR	8110605	Symbol	x		8110504						
ANR	8110606	Symbol	pcs -> cap . x		8110504						
ANR	8110607	Symbol	true		8110504						
ANR	8110608	Symbol	pcs -> cap		8110504						
ANR	8110609	Symbol	* pcs		8110504						
ANR	8110610	Symbol	pcs -> margins		8110504						
ANR	8110611	Function	vert_cursor_pos_rows	584:0:18215:18403							
ANR	8110612	FunctionDef	"vert_cursor_pos_rows (pcl_args_t * pargs , pcl_state_t * pcs)"		8110611	0					
ANR	8110613	CompoundStatement		586:0:18286:18403	8110611	0					
ANR	8110614	ReturnStatement	"return do_vertical_move ( pcs , pargs , ( float ) pcs -> vmi_cp , false , true , true , false ) ;"	587:4:18292:18401	8110611	0	True				
ANR	8110615	CallExpression	"do_vertical_move ( pcs , pargs , ( float ) pcs -> vmi_cp , false , true , true , false )"		8110611	0					
ANR	8110616	Callee	do_vertical_move		8110611	0					
ANR	8110617	Identifier	do_vertical_move		8110611	0					
ANR	8110618	ArgumentList	pcs		8110611	1					
ANR	8110619	Argument	pcs		8110611	0					
ANR	8110620	Identifier	pcs		8110611	0					
ANR	8110621	Argument	pargs		8110611	1					
ANR	8110622	Identifier	pargs		8110611	0					
ANR	8110623	Argument	( float ) pcs -> vmi_cp		8110611	2					
ANR	8110624	CastExpression	( float ) pcs -> vmi_cp		8110611	0					
ANR	8110625	CastTarget	float		8110611	0					
ANR	8110626	PtrMemberAccess	pcs -> vmi_cp		8110611	1					
ANR	8110627	Identifier	pcs		8110611	0					
ANR	8110628	Identifier	vmi_cp		8110611	1					
ANR	8110629	Argument	false		8110611	3					
ANR	8110630	Identifier	false		8110611	0					
ANR	8110631	Argument	true		8110611	4					
ANR	8110632	Identifier	true		8110611	0					
ANR	8110633	Argument	true		8110611	5					
ANR	8110634	Identifier	true		8110611	0					
ANR	8110635	Argument	false		8110611	6					
ANR	8110636	Identifier	false		8110611	0					
ANR	8110637	ReturnType	static int		8110611	1					
ANR	8110638	Identifier	vert_cursor_pos_rows		8110611	2					
ANR	8110639	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8110611	3					
ANR	8110640	Parameter	pcl_args_t * pargs	585:21:18247:18264	8110611	0	True				
ANR	8110641	ParameterType	pcl_args_t *		8110611	0					
ANR	8110642	Identifier	pargs		8110611	1					
ANR	8110643	Parameter	pcl_state_t * pcs	585:41:18267:18283	8110611	1	True				
ANR	8110644	ParameterType	pcl_state_t *		8110611	0					
ANR	8110645	Identifier	pcs		8110611	1					
ANR	8110646	CFGEntryNode	ENTRY		8110611		True				
ANR	8110647	CFGExitNode	EXIT		8110611		True				
ANR	8110648	Symbol	pcs		8110611						
ANR	8110649	Symbol	pargs		8110611						
ANR	8110650	Symbol	do_vertical_move		8110611						
ANR	8110651	Symbol	true		8110611						
ANR	8110652	Symbol	false		8110611						
ANR	8110653	Symbol	* pcs		8110611						
ANR	8110654	Symbol	pcs -> vmi_cp		8110611						
ANR	8110655	Function	vert_cursor_pos_decipoints	594:0:18431:18585							
ANR	8110656	FunctionDef	"vert_cursor_pos_decipoints (pcl_args_t * pargs , pcl_state_t * pcs)"		8110655	0					
ANR	8110657	CompoundStatement		596:0:18508:18585	8110655	0					
ANR	8110658	ReturnStatement	"return do_vertical_move ( pcs , pargs , 10.0 , false , false , false , false ) ;"	597:4:18514:18583	8110655	0	True				
ANR	8110659	CallExpression	"do_vertical_move ( pcs , pargs , 10.0 , false , false , false , false )"		8110655	0					
ANR	8110660	Callee	do_vertical_move		8110655	0					
ANR	8110661	Identifier	do_vertical_move		8110655	0					
ANR	8110662	ArgumentList	pcs		8110655	1					
ANR	8110663	Argument	pcs		8110655	0					
ANR	8110664	Identifier	pcs		8110655	0					
ANR	8110665	Argument	pargs		8110655	1					
ANR	8110666	Identifier	pargs		8110655	0					
ANR	8110667	Argument	10.0		8110655	2					
ANR	8110668	PrimaryExpression	10.0		8110655	0					
ANR	8110669	Argument	false		8110655	3					
ANR	8110670	Identifier	false		8110655	0					
ANR	8110671	Argument	false		8110655	4					
ANR	8110672	Identifier	false		8110655	0					
ANR	8110673	Argument	false		8110655	5					
ANR	8110674	Identifier	false		8110655	0					
ANR	8110675	Argument	false		8110655	6					
ANR	8110676	Identifier	false		8110655	0					
ANR	8110677	ReturnType	static int		8110655	1					
ANR	8110678	Identifier	vert_cursor_pos_decipoints		8110655	2					
ANR	8110679	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8110655	3					
ANR	8110680	Parameter	pcl_args_t * pargs	595:27:18469:18486	8110655	0	True				
ANR	8110681	ParameterType	pcl_args_t *		8110655	0					
ANR	8110682	Identifier	pargs		8110655	1					
ANR	8110683	Parameter	pcl_state_t * pcs	595:47:18489:18505	8110655	1	True				
ANR	8110684	ParameterType	pcl_state_t *		8110655	0					
ANR	8110685	Identifier	pcs		8110655	1					
ANR	8110686	CFGEntryNode	ENTRY		8110655		True				
ANR	8110687	CFGExitNode	EXIT		8110655		True				
ANR	8110688	Symbol	pcs		8110655						
ANR	8110689	Symbol	pargs		8110655						
ANR	8110690	Symbol	do_vertical_move		8110655						
ANR	8110691	Symbol	false		8110655						
ANR	8110692	Function	vert_cursor_pos_units	603:0:18616:18806							
ANR	8110693	FunctionDef	"vert_cursor_pos_units (pcl_args_t * pargs , pcl_state_t * pcs)"		8110692	0					
ANR	8110694	CompoundStatement		605:0:18688:18806	8110692	0					
ANR	8110695	ReturnStatement	"return do_vertical_move ( pcs , pargs , ( float ) pcs -> uom_cp , false , false , false , true ) ;"	606:4:18694:18804	8110692	0	True				
ANR	8110696	CallExpression	"do_vertical_move ( pcs , pargs , ( float ) pcs -> uom_cp , false , false , false , true )"		8110692	0					
ANR	8110697	Callee	do_vertical_move		8110692	0					
ANR	8110698	Identifier	do_vertical_move		8110692	0					
ANR	8110699	ArgumentList	pcs		8110692	1					
ANR	8110700	Argument	pcs		8110692	0					
ANR	8110701	Identifier	pcs		8110692	0					
ANR	8110702	Argument	pargs		8110692	1					
ANR	8110703	Identifier	pargs		8110692	0					
ANR	8110704	Argument	( float ) pcs -> uom_cp		8110692	2					
ANR	8110705	CastExpression	( float ) pcs -> uom_cp		8110692	0					
ANR	8110706	CastTarget	float		8110692	0					
ANR	8110707	PtrMemberAccess	pcs -> uom_cp		8110692	1					
ANR	8110708	Identifier	pcs		8110692	0					
ANR	8110709	Identifier	uom_cp		8110692	1					
ANR	8110710	Argument	false		8110692	3					
ANR	8110711	Identifier	false		8110692	0					
ANR	8110712	Argument	false		8110692	4					
ANR	8110713	Identifier	false		8110692	0					
ANR	8110714	Argument	false		8110692	5					
ANR	8110715	Identifier	false		8110692	0					
ANR	8110716	Argument	true		8110692	6					
ANR	8110717	Identifier	true		8110692	0					
ANR	8110718	ReturnType	static int		8110692	1					
ANR	8110719	Identifier	vert_cursor_pos_units		8110692	2					
ANR	8110720	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8110692	3					
ANR	8110721	Parameter	pcl_args_t * pargs	604:22:18649:18666	8110692	0	True				
ANR	8110722	ParameterType	pcl_args_t *		8110692	0					
ANR	8110723	Identifier	pargs		8110692	1					
ANR	8110724	Parameter	pcl_state_t * pcs	604:42:18669:18685	8110692	1	True				
ANR	8110725	ParameterType	pcl_state_t *		8110692	0					
ANR	8110726	Identifier	pcs		8110692	1					
ANR	8110727	CFGEntryNode	ENTRY		8110692		True				
ANR	8110728	CFGExitNode	EXIT		8110692		True				
ANR	8110729	Symbol	pcs		8110692						
ANR	8110730	Symbol	pargs		8110692						
ANR	8110731	Symbol	pcs -> uom_cp		8110692						
ANR	8110732	Symbol	do_vertical_move		8110692						
ANR	8110733	Symbol	false		8110692						
ANR	8110734	Symbol	true		8110692						
ANR	8110735	Symbol	* pcs		8110692						
ANR	8110736	Function	half_line_feed	613:0:18825:19103							
ANR	8110737	FunctionDef	"half_line_feed (pcl_args_t * pargs , pcl_state_t * pcs)"		8110736	0					
ANR	8110738	CompoundStatement		616:0:18924:19103	8110736	0					
ANR	8110739	ExpressionStatement	pcs -> cursor_moved = true	617:4:18930:18954	8110736	0	True				
ANR	8110740	AssignmentExpression	pcs -> cursor_moved = true		8110736	0		=			
ANR	8110741	PtrMemberAccess	pcs -> cursor_moved		8110736	0					
ANR	8110742	Identifier	pcs		8110736	0					
ANR	8110743	Identifier	cursor_moved		8110736	1					
ANR	8110744	Identifier	true		8110736	1					
ANR	8110745	ReturnStatement	"return pcl_set_cap_y ( pcs , pcs -> vmi_cp / 2 , true , ( pcs -> perforation_skip == 1 ) , true , false ) ;"	618:4:18960:19101	8110736	1	True				
ANR	8110746	CallExpression	"pcl_set_cap_y ( pcs , pcs -> vmi_cp / 2 , true , ( pcs -> perforation_skip == 1 ) , true , false )"		8110736	0					
ANR	8110747	Callee	pcl_set_cap_y		8110736	0					
ANR	8110748	Identifier	pcl_set_cap_y		8110736	0					
ANR	8110749	ArgumentList	pcs		8110736	1					
ANR	8110750	Argument	pcs		8110736	0					
ANR	8110751	Identifier	pcs		8110736	0					
ANR	8110752	Argument	pcs -> vmi_cp / 2		8110736	1					
ANR	8110753	MultiplicativeExpression	pcs -> vmi_cp / 2		8110736	0		/			
ANR	8110754	PtrMemberAccess	pcs -> vmi_cp		8110736	0					
ANR	8110755	Identifier	pcs		8110736	0					
ANR	8110756	Identifier	vmi_cp		8110736	1					
ANR	8110757	PrimaryExpression	2		8110736	1					
ANR	8110758	Argument	true		8110736	2					
ANR	8110759	Identifier	true		8110736	0					
ANR	8110760	Argument	pcs -> perforation_skip == 1		8110736	3					
ANR	8110761	EqualityExpression	pcs -> perforation_skip == 1		8110736	0		==			
ANR	8110762	PtrMemberAccess	pcs -> perforation_skip		8110736	0					
ANR	8110763	Identifier	pcs		8110736	0					
ANR	8110764	Identifier	perforation_skip		8110736	1					
ANR	8110765	PrimaryExpression	1		8110736	1					
ANR	8110766	Argument	true		8110736	4					
ANR	8110767	Identifier	true		8110736	0					
ANR	8110768	Argument	false		8110736	5					
ANR	8110769	Identifier	false		8110736	0					
ANR	8110770	ReturnType	static int		8110736	1					
ANR	8110771	Identifier	half_line_feed		8110736	2					
ANR	8110772	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8110736	3					
ANR	8110773	Parameter	pcl_args_t * pargs	614:15:18851:18868	8110736	0	True				
ANR	8110774	ParameterType	pcl_args_t *		8110736	0					
ANR	8110775	Identifier	pargs		8110736	1					
ANR	8110776	Parameter	pcl_state_t * pcs	615:15:18905:18921	8110736	1	True				
ANR	8110777	ParameterType	pcl_state_t *		8110736	0					
ANR	8110778	Identifier	pcs		8110736	1					
ANR	8110779	CFGEntryNode	ENTRY		8110736		True				
ANR	8110780	CFGExitNode	EXIT		8110736		True				
ANR	8110781	Symbol	pcs		8110736						
ANR	8110782	Symbol	pcs -> cursor_moved		8110736						
ANR	8110783	Symbol	pargs		8110736						
ANR	8110784	Symbol	pcs -> perforation_skip		8110736						
ANR	8110785	Symbol	true		8110736						
ANR	8110786	Symbol	false		8110736						
ANR	8110787	Symbol	* pcs		8110736						
ANR	8110788	Symbol	pcs -> vmi_cp		8110736						
ANR	8110789	Symbol	pcl_set_cap_y		8110736						
ANR	8110790	Function	cmd_LF	626:0:19119:19297							
ANR	8110791	FunctionDef	"cmd_LF (pcl_args_t * pargs , pcl_state_t * pcs)"		8110790	0					
ANR	8110792	CompoundStatement		629:0:19202:19297	8110790	0					
ANR	8110793	IfStatement	if ( ( pcs -> line_termination & 2 ) != 0 )		8110790	0					
ANR	8110794	Condition	( pcs -> line_termination & 2 ) != 0	630:8:19212:19243	8110790	0	True				
ANR	8110795	EqualityExpression	( pcs -> line_termination & 2 ) != 0		8110790	0		!=			
ANR	8110796	BitAndExpression	pcs -> line_termination & 2		8110790	0		&			
ANR	8110797	PtrMemberAccess	pcs -> line_termination		8110790	0					
ANR	8110798	Identifier	pcs		8110790	0					
ANR	8110799	Identifier	line_termination		8110790	1					
ANR	8110800	PrimaryExpression	2		8110790	1					
ANR	8110801	PrimaryExpression	0		8110790	1					
ANR	8110802	ExpressionStatement	pcl_do_CR ( pcs )	631:8:19254:19268	8110790	1	True				
ANR	8110803	CallExpression	pcl_do_CR ( pcs )		8110790	0					
ANR	8110804	Callee	pcl_do_CR		8110790	0					
ANR	8110805	Identifier	pcl_do_CR		8110790	0					
ANR	8110806	ArgumentList	pcs		8110790	1					
ANR	8110807	Argument	pcs		8110790	0					
ANR	8110808	Identifier	pcs		8110790	0					
ANR	8110809	ReturnStatement	return pcl_do_LF ( pcs ) ;	632:4:19274:19295	8110790	1	True				
ANR	8110810	CallExpression	pcl_do_LF ( pcs )		8110790	0					
ANR	8110811	Callee	pcl_do_LF		8110790	0					
ANR	8110812	Identifier	pcl_do_LF		8110790	0					
ANR	8110813	ArgumentList	pcs		8110790	1					
ANR	8110814	Argument	pcs		8110790	0					
ANR	8110815	Identifier	pcs		8110790	0					
ANR	8110816	ReturnType	static int		8110790	1					
ANR	8110817	Identifier	cmd_LF		8110790	2					
ANR	8110818	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8110790	3					
ANR	8110819	Parameter	pcl_args_t * pargs	627:7:19137:19154	8110790	0	True				
ANR	8110820	ParameterType	pcl_args_t *		8110790	0					
ANR	8110821	Identifier	pargs		8110790	1					
ANR	8110822	Parameter	pcl_state_t * pcs	628:7:19183:19199	8110790	1	True				
ANR	8110823	ParameterType	pcl_state_t *		8110790	0					
ANR	8110824	Identifier	pcs		8110790	1					
ANR	8110825	CFGEntryNode	ENTRY		8110790		True				
ANR	8110826	CFGExitNode	EXIT		8110790		True				
ANR	8110827	Symbol	pcs		8110790						
ANR	8110828	Symbol	pargs		8110790						
ANR	8110829	Symbol	* pcs		8110790						
ANR	8110830	Symbol	pcs -> line_termination		8110790						
ANR	8110831	Symbol	pcl_do_LF		8110790						
ANR	8110832	Function	cmd_FF	638:0:19313:19491							
ANR	8110833	FunctionDef	"cmd_FF (pcl_args_t * pargs , pcl_state_t * pcs)"		8110832	0					
ANR	8110834	CompoundStatement		641:0:19396:19491	8110832	0					
ANR	8110835	IfStatement	if ( ( pcs -> line_termination & 2 ) != 0 )		8110832	0					
ANR	8110836	Condition	( pcs -> line_termination & 2 ) != 0	642:8:19406:19437	8110832	0	True				
ANR	8110837	EqualityExpression	( pcs -> line_termination & 2 ) != 0		8110832	0		!=			
ANR	8110838	BitAndExpression	pcs -> line_termination & 2		8110832	0		&			
ANR	8110839	PtrMemberAccess	pcs -> line_termination		8110832	0					
ANR	8110840	Identifier	pcs		8110832	0					
ANR	8110841	Identifier	line_termination		8110832	1					
ANR	8110842	PrimaryExpression	2		8110832	1					
ANR	8110843	PrimaryExpression	0		8110832	1					
ANR	8110844	ExpressionStatement	pcl_do_CR ( pcs )	643:8:19448:19462	8110832	1	True				
ANR	8110845	CallExpression	pcl_do_CR ( pcs )		8110832	0					
ANR	8110846	Callee	pcl_do_CR		8110832	0					
ANR	8110847	Identifier	pcl_do_CR		8110832	0					
ANR	8110848	ArgumentList	pcs		8110832	1					
ANR	8110849	Argument	pcs		8110832	0					
ANR	8110850	Identifier	pcs		8110832	0					
ANR	8110851	ReturnStatement	return pcl_do_FF ( pcs ) ;	644:4:19468:19489	8110832	1	True				
ANR	8110852	CallExpression	pcl_do_FF ( pcs )		8110832	0					
ANR	8110853	Callee	pcl_do_FF		8110832	0					
ANR	8110854	Identifier	pcl_do_FF		8110832	0					
ANR	8110855	ArgumentList	pcs		8110832	1					
ANR	8110856	Argument	pcs		8110832	0					
ANR	8110857	Identifier	pcs		8110832	0					
ANR	8110858	ReturnType	static int		8110832	1					
ANR	8110859	Identifier	cmd_FF		8110832	2					
ANR	8110860	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8110832	3					
ANR	8110861	Parameter	pcl_args_t * pargs	639:7:19331:19348	8110832	0	True				
ANR	8110862	ParameterType	pcl_args_t *		8110832	0					
ANR	8110863	Identifier	pargs		8110832	1					
ANR	8110864	Parameter	pcl_state_t * pcs	640:7:19377:19393	8110832	1	True				
ANR	8110865	ParameterType	pcl_state_t *		8110832	0					
ANR	8110866	Identifier	pcs		8110832	1					
ANR	8110867	CFGEntryNode	ENTRY		8110832		True				
ANR	8110868	CFGExitNode	EXIT		8110832		True				
ANR	8110869	Symbol	pcs		8110832						
ANR	8110870	Symbol	pargs		8110832						
ANR	8110871	Symbol	pcl_do_FF		8110832						
ANR	8110872	Symbol	* pcs		8110832						
ANR	8110873	Symbol	pcs -> line_termination		8110832						
ANR	8110874	Function	push_pop_cursor	654:0:19719:20604							
ANR	8110875	FunctionDef	"push_pop_cursor (pcl_args_t * pargs , pcl_state_t * pcs)"		8110874	0					
ANR	8110876	CompoundStatement		656:0:19785:20604	8110874	0					
ANR	8110877	IdentifierDeclStatement	int type = uint_arg ( pargs ) ;	657:4:19791:19817	8110874	0	True				
ANR	8110878	IdentifierDecl	type = uint_arg ( pargs )		8110874	0					
ANR	8110879	IdentifierDeclType	int		8110874	0					
ANR	8110880	Identifier	type		8110874	1					
ANR	8110881	AssignmentExpression	type = uint_arg ( pargs )		8110874	2		=			
ANR	8110882	Identifier	type		8110874	0					
ANR	8110883	CallExpression	uint_arg ( pargs )		8110874	1					
ANR	8110884	Callee	uint_arg		8110874	0					
ANR	8110885	Identifier	uint_arg		8110874	0					
ANR	8110886	ArgumentList	pargs		8110874	1					
ANR	8110887	Argument	pargs		8110874	0					
ANR	8110888	Identifier	pargs		8110874	0					
ANR	8110889	IfStatement	if ( ( type == 0 ) && ( pcs -> cursor_stk_size < countof ( pcs -> cursor_stk ) ) )		8110874	1					
ANR	8110890	Condition	( type == 0 ) && ( pcs -> cursor_stk_size < countof ( pcs -> cursor_stk ) )	659:8:19828:19891	8110874	0	True				
ANR	8110891	AndExpression	( type == 0 ) && ( pcs -> cursor_stk_size < countof ( pcs -> cursor_stk ) )		8110874	0		&&			
ANR	8110892	EqualityExpression	type == 0		8110874	0		==			
ANR	8110893	Identifier	type		8110874	0					
ANR	8110894	PrimaryExpression	0		8110874	1					
ANR	8110895	RelationalExpression	pcs -> cursor_stk_size < countof ( pcs -> cursor_stk )		8110874	1		<			
ANR	8110896	PtrMemberAccess	pcs -> cursor_stk_size		8110874	0					
ANR	8110897	Identifier	pcs		8110874	0					
ANR	8110898	Identifier	cursor_stk_size		8110874	1					
ANR	8110899	CallExpression	countof ( pcs -> cursor_stk )		8110874	1					
ANR	8110900	Callee	countof		8110874	0					
ANR	8110901	Identifier	countof		8110874	0					
ANR	8110902	ArgumentList	pcs -> cursor_stk		8110874	1					
ANR	8110903	Argument	pcs -> cursor_stk		8110874	0					
ANR	8110904	PtrMemberAccess	pcs -> cursor_stk		8110874	0					
ANR	8110905	Identifier	pcs		8110874	0					
ANR	8110906	Identifier	cursor_stk		8110874	1					
ANR	8110907	CompoundStatement		5:8:118:176	8110874	1					
ANR	8110908	IdentifierDeclStatement	gs_point * ppt = & ( pcs -> cursor_stk [ pcs -> cursor_stk_size ++ ] ) ;	660:8:19904:19962	8110874	0	True				
ANR	8110909	IdentifierDecl	* ppt = & ( pcs -> cursor_stk [ pcs -> cursor_stk_size ++ ] )		8110874	0					
ANR	8110910	IdentifierDeclType	gs_point *		8110874	0					
ANR	8110911	Identifier	ppt		8110874	1					
ANR	8110912	AssignmentExpression	* ppt = & ( pcs -> cursor_stk [ pcs -> cursor_stk_size ++ ] )		8110874	2		=			
ANR	8110913	Identifier	ppt		8110874	0					
ANR	8110914	UnaryOperationExpression	& ( pcs -> cursor_stk [ pcs -> cursor_stk_size ++ ] )		8110874	1					
ANR	8110915	UnaryOperator	&		8110874	0					
ANR	8110916	ArrayIndexing	pcs -> cursor_stk [ pcs -> cursor_stk_size ++ ]		8110874	1					
ANR	8110917	PtrMemberAccess	pcs -> cursor_stk		8110874	0					
ANR	8110918	Identifier	pcs		8110874	0					
ANR	8110919	Identifier	cursor_stk		8110874	1					
ANR	8110920	PostIncDecOperationExpression	pcs -> cursor_stk_size ++		8110874	1					
ANR	8110921	PtrMemberAccess	pcs -> cursor_stk_size		8110874	0					
ANR	8110922	Identifier	pcs		8110874	0					
ANR	8110923	Identifier	cursor_stk_size		8110874	1					
ANR	8110924	IncDec	++		8110874	1					
ANR	8110925	ExpressionStatement	ppt -> x = ( double ) pcs -> cap . x	662:8:19973:20000	8110874	1	True				
ANR	8110926	AssignmentExpression	ppt -> x = ( double ) pcs -> cap . x		8110874	0		=			
ANR	8110927	PtrMemberAccess	ppt -> x		8110874	0					
ANR	8110928	Identifier	ppt		8110874	0					
ANR	8110929	Identifier	x		8110874	1					
ANR	8110930	CastExpression	( double ) pcs -> cap . x		8110874	1					
ANR	8110931	CastTarget	double		8110874	0					
ANR	8110932	MemberAccess	pcs -> cap . x		8110874	1					
ANR	8110933	PtrMemberAccess	pcs -> cap		8110874	0					
ANR	8110934	Identifier	pcs		8110874	0					
ANR	8110935	Identifier	cap		8110874	1					
ANR	8110936	Identifier	x		8110874	1					
ANR	8110937	ExpressionStatement	ppt -> y = ( double ) pcs -> cap . y	663:8:20010:20037	8110874	2	True				
ANR	8110938	AssignmentExpression	ppt -> y = ( double ) pcs -> cap . y		8110874	0		=			
ANR	8110939	PtrMemberAccess	ppt -> y		8110874	0					
ANR	8110940	Identifier	ppt		8110874	0					
ANR	8110941	Identifier	y		8110874	1					
ANR	8110942	CastExpression	( double ) pcs -> cap . y		8110874	1					
ANR	8110943	CastTarget	double		8110874	0					
ANR	8110944	MemberAccess	pcs -> cap . y		8110874	1					
ANR	8110945	PtrMemberAccess	pcs -> cap		8110874	0					
ANR	8110946	Identifier	pcs		8110874	0					
ANR	8110947	Identifier	cap		8110874	1					
ANR	8110948	Identifier	y		8110874	1					
ANR	8110949	ExpressionStatement	"gs_point_transform ( ppt -> x , ppt -> y , & ( pcs -> xfm_state . pd2lp_mtx ) , ppt )"	664:8:20047:20115	8110874	3	True				
ANR	8110950	CallExpression	"gs_point_transform ( ppt -> x , ppt -> y , & ( pcs -> xfm_state . pd2lp_mtx ) , ppt )"		8110874	0					
ANR	8110951	Callee	gs_point_transform		8110874	0					
ANR	8110952	Identifier	gs_point_transform		8110874	0					
ANR	8110953	ArgumentList	ppt -> x		8110874	1					
ANR	8110954	Argument	ppt -> x		8110874	0					
ANR	8110955	PtrMemberAccess	ppt -> x		8110874	0					
ANR	8110956	Identifier	ppt		8110874	0					
ANR	8110957	Identifier	x		8110874	1					
ANR	8110958	Argument	ppt -> y		8110874	1					
ANR	8110959	PtrMemberAccess	ppt -> y		8110874	0					
ANR	8110960	Identifier	ppt		8110874	0					
ANR	8110961	Identifier	y		8110874	1					
ANR	8110962	Argument	& ( pcs -> xfm_state . pd2lp_mtx )		8110874	2					
ANR	8110963	UnaryOperationExpression	& ( pcs -> xfm_state . pd2lp_mtx )		8110874	0					
ANR	8110964	UnaryOperator	&		8110874	0					
ANR	8110965	MemberAccess	pcs -> xfm_state . pd2lp_mtx		8110874	1					
ANR	8110966	PtrMemberAccess	pcs -> xfm_state		8110874	0					
ANR	8110967	Identifier	pcs		8110874	0					
ANR	8110968	Identifier	xfm_state		8110874	1					
ANR	8110969	Identifier	pd2lp_mtx		8110874	1					
ANR	8110970	Argument	ppt		8110874	3					
ANR	8110971	Identifier	ppt		8110874	0					
ANR	8110972	ElseStatement	else		8110874	0					
ANR	8110973	IfStatement	if ( ( type == 1 ) && ( pcs -> cursor_stk_size > 0 ) )		8110874	0					
ANR	8110974	Condition	( type == 1 ) && ( pcs -> cursor_stk_size > 0 )	666:15:20133:20173	8110874	0	True				
ANR	8110975	AndExpression	( type == 1 ) && ( pcs -> cursor_stk_size > 0 )		8110874	0		&&			
ANR	8110976	EqualityExpression	type == 1		8110874	0		==			
ANR	8110977	Identifier	type		8110874	0					
ANR	8110978	PrimaryExpression	1		8110874	1					
ANR	8110979	RelationalExpression	pcs -> cursor_stk_size > 0		8110874	1		>			
ANR	8110980	PtrMemberAccess	pcs -> cursor_stk_size		8110874	0					
ANR	8110981	Identifier	pcs		8110874	0					
ANR	8110982	Identifier	cursor_stk_size		8110874	1					
ANR	8110983	PrimaryExpression	0		8110874	1					
ANR	8110984	CompoundStatement		13:8:468:483	8110874	1					
ANR	8110985	IdentifierDeclStatement	gs_point * ppt = & ( pcs -> cursor_stk [ -- pcs -> cursor_stk_size ] ) ;	667:8:20186:20244	8110874	0	True				
ANR	8110986	IdentifierDecl	* ppt = & ( pcs -> cursor_stk [ -- pcs -> cursor_stk_size ] )		8110874	0					
ANR	8110987	IdentifierDeclType	gs_point *		8110874	0					
ANR	8110988	Identifier	ppt		8110874	1					
ANR	8110989	AssignmentExpression	* ppt = & ( pcs -> cursor_stk [ -- pcs -> cursor_stk_size ] )		8110874	2		=			
ANR	8110990	Identifier	ppt		8110874	0					
ANR	8110991	UnaryOperationExpression	& ( pcs -> cursor_stk [ -- pcs -> cursor_stk_size ] )		8110874	1					
ANR	8110992	UnaryOperator	&		8110874	0					
ANR	8110993	ArrayIndexing	pcs -> cursor_stk [ -- pcs -> cursor_stk_size ]		8110874	1					
ANR	8110994	PtrMemberAccess	pcs -> cursor_stk		8110874	0					
ANR	8110995	Identifier	pcs		8110874	0					
ANR	8110996	Identifier	cursor_stk		8110874	1					
ANR	8110997	UnaryExpression	-- pcs -> cursor_stk_size		8110874	1					
ANR	8110998	IncDec	--		8110874	0					
ANR	8110999	PtrMemberAccess	pcs -> cursor_stk_size		8110874	1					
ANR	8111000	Identifier	pcs		8110874	0					
ANR	8111001	Identifier	cursor_stk_size		8110874	1					
ANR	8111002	IdentifierDeclStatement	gs_matrix lp2pd ;	668:8:20254:20269	8110874	1	True				
ANR	8111003	IdentifierDecl	lp2pd		8110874	0					
ANR	8111004	IdentifierDeclType	gs_matrix		8110874	0					
ANR	8111005	Identifier	lp2pd		8110874	1					
ANR	8111006	ExpressionStatement	"pcl_invert_mtx ( & ( pcs -> xfm_state . pd2lp_mtx ) , & lp2pd )"	670:8:20280:20331	8110874	2	True				
ANR	8111007	CallExpression	"pcl_invert_mtx ( & ( pcs -> xfm_state . pd2lp_mtx ) , & lp2pd )"		8110874	0					
ANR	8111008	Callee	pcl_invert_mtx		8110874	0					
ANR	8111009	Identifier	pcl_invert_mtx		8110874	0					
ANR	8111010	ArgumentList	& ( pcs -> xfm_state . pd2lp_mtx )		8110874	1					
ANR	8111011	Argument	& ( pcs -> xfm_state . pd2lp_mtx )		8110874	0					
ANR	8111012	UnaryOperationExpression	& ( pcs -> xfm_state . pd2lp_mtx )		8110874	0					
ANR	8111013	UnaryOperator	&		8110874	0					
ANR	8111014	MemberAccess	pcs -> xfm_state . pd2lp_mtx		8110874	1					
ANR	8111015	PtrMemberAccess	pcs -> xfm_state		8110874	0					
ANR	8111016	Identifier	pcs		8110874	0					
ANR	8111017	Identifier	xfm_state		8110874	1					
ANR	8111018	Identifier	pd2lp_mtx		8110874	1					
ANR	8111019	Argument	& lp2pd		8110874	1					
ANR	8111020	UnaryOperationExpression	& lp2pd		8110874	0					
ANR	8111021	UnaryOperator	&		8110874	0					
ANR	8111022	Identifier	lp2pd		8110874	1					
ANR	8111023	ExpressionStatement	"gs_point_transform ( ppt -> x , ppt -> y , & lp2pd , ppt )"	671:8:20341:20388	8110874	3	True				
ANR	8111024	CallExpression	"gs_point_transform ( ppt -> x , ppt -> y , & lp2pd , ppt )"		8110874	0					
ANR	8111025	Callee	gs_point_transform		8110874	0					
ANR	8111026	Identifier	gs_point_transform		8110874	0					
ANR	8111027	ArgumentList	ppt -> x		8110874	1					
ANR	8111028	Argument	ppt -> x		8110874	0					
ANR	8111029	PtrMemberAccess	ppt -> x		8110874	0					
ANR	8111030	Identifier	ppt		8110874	0					
ANR	8111031	Identifier	x		8110874	1					
ANR	8111032	Argument	ppt -> y		8110874	1					
ANR	8111033	PtrMemberAccess	ppt -> y		8110874	0					
ANR	8111034	Identifier	ppt		8110874	0					
ANR	8111035	Identifier	y		8110874	1					
ANR	8111036	Argument	& lp2pd		8110874	2					
ANR	8111037	UnaryOperationExpression	& lp2pd		8110874	0					
ANR	8111038	UnaryOperator	&		8110874	0					
ANR	8111039	Identifier	lp2pd		8110874	1					
ANR	8111040	Argument	ppt		8110874	3					
ANR	8111041	Identifier	ppt		8110874	0					
ANR	8111042	ExpressionStatement	"pcl_set_cap_x ( pcs , ( coord ) ppt -> x , false , false )"	672:8:20398:20446	8110874	4	True				
ANR	8111043	CallExpression	"pcl_set_cap_x ( pcs , ( coord ) ppt -> x , false , false )"		8110874	0					
ANR	8111044	Callee	pcl_set_cap_x		8110874	0					
ANR	8111045	Identifier	pcl_set_cap_x		8110874	0					
ANR	8111046	ArgumentList	pcs		8110874	1					
ANR	8111047	Argument	pcs		8110874	0					
ANR	8111048	Identifier	pcs		8110874	0					
ANR	8111049	Argument	( coord ) ppt -> x		8110874	1					
ANR	8111050	CastExpression	( coord ) ppt -> x		8110874	0					
ANR	8111051	CastTarget	coord		8110874	0					
ANR	8111052	PtrMemberAccess	ppt -> x		8110874	1					
ANR	8111053	Identifier	ppt		8110874	0					
ANR	8111054	Identifier	x		8110874	1					
ANR	8111055	Argument	false		8110874	2					
ANR	8111056	Identifier	false		8110874	0					
ANR	8111057	Argument	false		8110874	3					
ANR	8111058	Identifier	false		8110874	0					
ANR	8111059	ExpressionStatement	"pcl_set_cap_y ( pcs , ( coord ) ppt -> y - pcs -> margins . top , false , false , false , false )"	673:8:20456:20581	8110874	5	True				
ANR	8111060	CallExpression	"pcl_set_cap_y ( pcs , ( coord ) ppt -> y - pcs -> margins . top , false , false , false , false )"		8110874	0					
ANR	8111061	Callee	pcl_set_cap_y		8110874	0					
ANR	8111062	Identifier	pcl_set_cap_y		8110874	0					
ANR	8111063	ArgumentList	pcs		8110874	1					
ANR	8111064	Argument	pcs		8110874	0					
ANR	8111065	Identifier	pcs		8110874	0					
ANR	8111066	Argument	( coord ) ppt -> y - pcs -> margins . top		8110874	1					
ANR	8111067	AdditiveExpression	( coord ) ppt -> y - pcs -> margins . top		8110874	0		-			
ANR	8111068	CastExpression	( coord ) ppt -> y		8110874	0					
ANR	8111069	CastTarget	coord		8110874	0					
ANR	8111070	PtrMemberAccess	ppt -> y		8110874	1					
ANR	8111071	Identifier	ppt		8110874	0					
ANR	8111072	Identifier	y		8110874	1					
ANR	8111073	MemberAccess	pcs -> margins . top		8110874	1					
ANR	8111074	PtrMemberAccess	pcs -> margins		8110874	0					
ANR	8111075	Identifier	pcs		8110874	0					
ANR	8111076	Identifier	margins		8110874	1					
ANR	8111077	Identifier	top		8110874	1					
ANR	8111078	Argument	false		8110874	2					
ANR	8111079	Identifier	false		8110874	0					
ANR	8111080	Argument	false		8110874	3					
ANR	8111081	Identifier	false		8110874	0					
ANR	8111082	Argument	false		8110874	4					
ANR	8111083	Identifier	false		8110874	0					
ANR	8111084	Argument	false		8110874	5					
ANR	8111085	Identifier	false		8110874	0					
ANR	8111086	ReturnStatement	return 0 ;	678:4:20594:20602	8110874	2	True				
ANR	8111087	PrimaryExpression	0		8110874	0					
ANR	8111088	ReturnType	static int		8110874	1					
ANR	8111089	Identifier	push_pop_cursor		8110874	2					
ANR	8111090	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8110874	3					
ANR	8111091	Parameter	pcl_args_t * pargs	655:16:19746:19763	8110874	0	True				
ANR	8111092	ParameterType	pcl_args_t *		8110874	0					
ANR	8111093	Identifier	pargs		8110874	1					
ANR	8111094	Parameter	pcl_state_t * pcs	655:36:19766:19782	8110874	1	True				
ANR	8111095	ParameterType	pcl_state_t *		8110874	0					
ANR	8111096	Identifier	pcs		8110874	1					
ANR	8111097	CFGEntryNode	ENTRY		8110874		True				
ANR	8111098	CFGExitNode	EXIT		8110874		True				
ANR	8111099	Symbol	pcs		8110874						
ANR	8111100	Symbol	& lp2pd		8110874						
ANR	8111101	Symbol	lp2pd		8110874						
ANR	8111102	Symbol	pcs -> cap . x		8110874						
ANR	8111103	Symbol	false		8110874						
ANR	8111104	Symbol	pcs -> cap		8110874						
ANR	8111105	Symbol	* pcs		8110874						
ANR	8111106	Symbol	& pcs -> xfm_state		8110874						
ANR	8111107	Symbol	pcs -> margins		8110874						
ANR	8111108	Symbol	pcs -> cap . y		8110874						
ANR	8111109	Symbol	type		8110874						
ANR	8111110	Symbol	uint_arg		8110874						
ANR	8111111	Symbol	countof		8110874						
ANR	8111112	Symbol	pcs -> xfm_state		8110874						
ANR	8111113	Symbol	pargs		8110874						
ANR	8111114	Symbol	pcs -> cursor_stk		8110874						
ANR	8111115	Symbol	ppt		8110874						
ANR	8111116	Symbol	& pcs -> xfm_state . pd2lp_mtx		8110874						
ANR	8111117	Symbol	pcs -> cursor_stk_size		8110874						
ANR	8111118	Symbol	ppt -> x		8110874						
ANR	8111119	Symbol	* ppt		8110874						
ANR	8111120	Symbol	ppt -> y		8110874						
ANR	8111121	Symbol	pcs -> margins . top		8110874						
ANR	8111122	Function	pcursor_do_copy	681:0:20607:21236							
ANR	8111123	FunctionDef	"pcursor_do_copy (pcl_state_t * psaved , const pcl_state_t * pcs , pcl_copy_operation_t operation)"		8111122	0					
ANR	8111124	CompoundStatement		684:0:20729:21236	8111122	0					
ANR	8111125	IdentifierDeclStatement	int i ;	685:4:20735:20740	8111122	0	True				
ANR	8111126	IdentifierDecl	i		8111122	0					
ANR	8111127	IdentifierDeclType	int		8111122	0					
ANR	8111128	Identifier	i		8111122	1					
ANR	8111129	IfStatement	if ( operation & pcl_copy_after )		8111122	1					
ANR	8111130	Condition	operation & pcl_copy_after	689:8:20833:20858	8111122	0	True				
ANR	8111131	BitAndExpression	operation & pcl_copy_after		8111122	0		&			
ANR	8111132	Identifier	operation		8111122	0					
ANR	8111133	Identifier	pcl_copy_after		8111122	1					
ANR	8111134	CompoundStatement		6:36:131:131	8111122	1					
ANR	8111135	ExpressionStatement	psaved -> cap = pcs -> cap	690:8:20871:20893	8111122	0	True				
ANR	8111136	AssignmentExpression	psaved -> cap = pcs -> cap		8111122	0		=			
ANR	8111137	PtrMemberAccess	psaved -> cap		8111122	0					
ANR	8111138	Identifier	psaved		8111122	0					
ANR	8111139	Identifier	cap		8111122	1					
ANR	8111140	PtrMemberAccess	pcs -> cap		8111122	1					
ANR	8111141	Identifier	pcs		8111122	0					
ANR	8111142	Identifier	cap		8111122	1					
ANR	8111143	ForStatement	for ( i = 0 ; i < pcs -> cursor_stk_size ; ++ i )		8111122	1					
ANR	8111144	ForInit	i = 0 ;	693:13:20968:20973	8111122	0	True				
ANR	8111145	AssignmentExpression	i = 0		8111122	0		=			
ANR	8111146	Identifier	i		8111122	0					
ANR	8111147	PrimaryExpression	0		8111122	1					
ANR	8111148	Condition	i < pcs -> cursor_stk_size	693:20:20975:20998	8111122	1	True				
ANR	8111149	RelationalExpression	i < pcs -> cursor_stk_size		8111122	0		<			
ANR	8111150	Identifier	i		8111122	0					
ANR	8111151	PtrMemberAccess	pcs -> cursor_stk_size		8111122	1					
ANR	8111152	Identifier	pcs		8111122	0					
ANR	8111153	Identifier	cursor_stk_size		8111122	1					
ANR	8111154	UnaryExpression	++ i	693:46:21001:21003	8111122	2	True				
ANR	8111155	IncDec	++		8111122	0					
ANR	8111156	Identifier	i		8111122	1					
ANR	8111157	CompoundStatement		10:51:276:276	8111122	3					
ANR	8111158	ExpressionStatement	psaved -> cursor_stk [ i ] = pcs -> cursor_stk [ i ]	694:12:21020:21062	8111122	0	True				
ANR	8111159	AssignmentExpression	psaved -> cursor_stk [ i ] = pcs -> cursor_stk [ i ]		8111122	0		=			
ANR	8111160	ArrayIndexing	psaved -> cursor_stk [ i ]		8111122	0					
ANR	8111161	PtrMemberAccess	psaved -> cursor_stk		8111122	0					
ANR	8111162	Identifier	psaved		8111122	0					
ANR	8111163	Identifier	cursor_stk		8111122	1					
ANR	8111164	Identifier	i		8111122	1					
ANR	8111165	ArrayIndexing	pcs -> cursor_stk [ i ]		8111122	1					
ANR	8111166	PtrMemberAccess	pcs -> cursor_stk		8111122	0					
ANR	8111167	Identifier	pcs		8111122	0					
ANR	8111168	Identifier	cursor_stk		8111122	1					
ANR	8111169	Identifier	i		8111122	1					
ANR	8111170	ExpressionStatement	psaved -> cursor_stk_size = pcs -> cursor_stk_size	696:8:21082:21128	8111122	2	True				
ANR	8111171	AssignmentExpression	psaved -> cursor_stk_size = pcs -> cursor_stk_size		8111122	0		=			
ANR	8111172	PtrMemberAccess	psaved -> cursor_stk_size		8111122	0					
ANR	8111173	Identifier	psaved		8111122	0					
ANR	8111174	Identifier	cursor_stk_size		8111122	1					
ANR	8111175	PtrMemberAccess	pcs -> cursor_stk_size		8111122	1					
ANR	8111176	Identifier	pcs		8111122	0					
ANR	8111177	Identifier	cursor_stk_size		8111122	1					
ANR	8111178	ExpressionStatement	psaved -> page_marked = pcs -> page_marked	699:8:21176:21214	8111122	3	True				
ANR	8111179	AssignmentExpression	psaved -> page_marked = pcs -> page_marked		8111122	0		=			
ANR	8111180	PtrMemberAccess	psaved -> page_marked		8111122	0					
ANR	8111181	Identifier	psaved		8111122	0					
ANR	8111182	Identifier	page_marked		8111122	1					
ANR	8111183	PtrMemberAccess	pcs -> page_marked		8111122	1					
ANR	8111184	Identifier	pcs		8111122	0					
ANR	8111185	Identifier	page_marked		8111122	1					
ANR	8111186	ReturnStatement	return 0 ;	701:4:21226:21234	8111122	2	True				
ANR	8111187	PrimaryExpression	0		8111122	0					
ANR	8111188	ReturnType	static int		8111122	1					
ANR	8111189	Identifier	pcursor_do_copy		8111122	2					
ANR	8111190	ParameterList	"pcl_state_t * psaved , const pcl_state_t * pcs , pcl_copy_operation_t operation"		8111122	3					
ANR	8111191	Parameter	pcl_state_t * psaved	682:16:20634:20653	8111122	0	True				
ANR	8111192	ParameterType	pcl_state_t *		8111122	0					
ANR	8111193	Identifier	psaved		8111122	1					
ANR	8111194	Parameter	const pcl_state_t * pcs	683:16:20672:20694	8111122	1	True				
ANR	8111195	ParameterType	const pcl_state_t *		8111122	0					
ANR	8111196	Identifier	pcs		8111122	1					
ANR	8111197	Parameter	pcl_copy_operation_t operation	683:41:20697:20726	8111122	2	True				
ANR	8111198	ParameterType	pcl_copy_operation_t		8111122	0					
ANR	8111199	Identifier	operation		8111122	1					
ANR	8111200	CFGEntryNode	ENTRY		8111122		True				
ANR	8111201	CFGExitNode	EXIT		8111122		True				
ANR	8111202	Symbol	psaved -> cursor_stk		8111122						
ANR	8111203	Symbol	pcs		8111122						
ANR	8111204	Symbol	i		8111122						
ANR	8111205	Symbol	pcs -> cap		8111122						
ANR	8111206	Symbol	* pcs		8111122						
ANR	8111207	Symbol	* psaved -> cursor_stk		8111122						
ANR	8111208	Symbol	* pcs -> cursor_stk		8111122						
ANR	8111209	Symbol	psaved -> cap		8111122						
ANR	8111210	Symbol	pcs -> page_marked		8111122						
ANR	8111211	Symbol	* i		8111122						
ANR	8111212	Symbol	* psaved		8111122						
ANR	8111213	Symbol	* * pcs		8111122						
ANR	8111214	Symbol	pcs -> cursor_stk		8111122						
ANR	8111215	Symbol	psaved -> page_marked		8111122						
ANR	8111216	Symbol	psaved		8111122						
ANR	8111217	Symbol	pcl_copy_after		8111122						
ANR	8111218	Symbol	* * psaved		8111122						
ANR	8111219	Symbol	operation		8111122						
ANR	8111220	Symbol	pcs -> cursor_stk_size		8111122						
ANR	8111221	Symbol	psaved -> cursor_stk_size		8111122						
ANR	8111222	Function	pcl_vmi_default	710:0:21624:22101							
ANR	8111223	FunctionDef	pcl_vmi_default (pcl_state_t * pcs)		8111222	0					
ANR	8111224	CompoundStatement		712:0:21665:22101	8111222	0					
ANR	8111225	IdentifierDeclStatement	coord vmi ;	713:4:21671:21680	8111222	0	True				
ANR	8111226	IdentifierDecl	vmi		8111222	0					
ANR	8111227	IdentifierDeclType	coord		8111222	0					
ANR	8111228	Identifier	vmi		8111222	1					
ANR	8111229	IfStatement	"if ( ! pjl_proc_compare ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""FORMLINES_SET"" ) , ""ON"" ) )"		8111222	1					
ANR	8111230	Condition	"! pjl_proc_compare ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""FORMLINES_SET"" ) , ""ON"" )"	715:8:21691:21845	8111222	0	True				
ANR	8111231	UnaryOperationExpression	"! pjl_proc_compare ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""FORMLINES_SET"" ) , ""ON"" )"		8111222	0					
ANR	8111232	UnaryOperator	!		8111222	0					
ANR	8111233	CallExpression	"pjl_proc_compare ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""FORMLINES_SET"" ) , ""ON"" )"		8111222	1					
ANR	8111234	Callee	pjl_proc_compare		8111222	0					
ANR	8111235	Identifier	pjl_proc_compare		8111222	0					
ANR	8111236	ArgumentList	pcs -> pjls		8111222	1					
ANR	8111237	Argument	pcs -> pjls		8111222	0					
ANR	8111238	PtrMemberAccess	pcs -> pjls		8111222	0					
ANR	8111239	Identifier	pcs		8111222	0					
ANR	8111240	Identifier	pjls		8111222	1					
ANR	8111241	Argument	"pjl_proc_get_envvar ( pcs -> pjls , ""FORMLINES_SET"" )"		8111222	1					
ANR	8111242	CallExpression	"pjl_proc_get_envvar ( pcs -> pjls , ""FORMLINES_SET"" )"		8111222	0					
ANR	8111243	Callee	pjl_proc_get_envvar		8111222	0					
ANR	8111244	Identifier	pjl_proc_get_envvar		8111222	0					
ANR	8111245	ArgumentList	pcs -> pjls		8111222	1					
ANR	8111246	Argument	pcs -> pjls		8111222	0					
ANR	8111247	PtrMemberAccess	pcs -> pjls		8111222	0					
ANR	8111248	Identifier	pcs		8111222	0					
ANR	8111249	Identifier	pjls		8111222	1					
ANR	8111250	Argument	"""FORMLINES_SET"""		8111222	1					
ANR	8111251	PrimaryExpression	"""FORMLINES_SET"""		8111222	0					
ANR	8111252	Argument	"""ON"""		8111222	2					
ANR	8111253	PrimaryExpression	"""ON"""		8111222	0					
ANR	8111254	CompoundStatement		7:8:192:275	8111222	1					
ANR	8111255	IdentifierDeclStatement	"int value = pjl_proc_vartoi ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""formlines"" ) ) ;"	718:8:21858:21941	8111222	0	True				
ANR	8111256	IdentifierDecl	"value = pjl_proc_vartoi ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""formlines"" ) )"		8111222	0					
ANR	8111257	IdentifierDeclType	int		8111222	0					
ANR	8111258	Identifier	value		8111222	1					
ANR	8111259	AssignmentExpression	"value = pjl_proc_vartoi ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""formlines"" ) )"		8111222	2		=			
ANR	8111260	Identifier	value		8111222	0					
ANR	8111261	CallExpression	"pjl_proc_vartoi ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""formlines"" ) )"		8111222	1					
ANR	8111262	Callee	pjl_proc_vartoi		8111222	0					
ANR	8111263	Identifier	pjl_proc_vartoi		8111222	0					
ANR	8111264	ArgumentList	pcs -> pjls		8111222	1					
ANR	8111265	Argument	pcs -> pjls		8111222	0					
ANR	8111266	PtrMemberAccess	pcs -> pjls		8111222	0					
ANR	8111267	Identifier	pcs		8111222	0					
ANR	8111268	Identifier	pjls		8111222	1					
ANR	8111269	Argument	"pjl_proc_get_envvar ( pcs -> pjls , ""formlines"" )"		8111222	1					
ANR	8111270	CallExpression	"pjl_proc_get_envvar ( pcs -> pjls , ""formlines"" )"		8111222	0					
ANR	8111271	Callee	pjl_proc_get_envvar		8111222	0					
ANR	8111272	Identifier	pjl_proc_get_envvar		8111222	0					
ANR	8111273	ArgumentList	pcs -> pjls		8111222	1					
ANR	8111274	Argument	pcs -> pjls		8111222	0					
ANR	8111275	PtrMemberAccess	pcs -> pjls		8111222	0					
ANR	8111276	Identifier	pcs		8111222	0					
ANR	8111277	Identifier	pjls		8111222	1					
ANR	8111278	Argument	"""formlines"""		8111222	1					
ANR	8111279	PrimaryExpression	"""formlines"""		8111222	0					
ANR	8111280	ExpressionStatement	vmi = ( pcs -> margins . length / ( value < 5 ? 5 : ( value > 128 ? 128 : value ) ) )	719:8:21951:22026	8111222	1	True				
ANR	8111281	AssignmentExpression	vmi = ( pcs -> margins . length / ( value < 5 ? 5 : ( value > 128 ? 128 : value ) ) )		8111222	0		=			
ANR	8111282	Identifier	vmi		8111222	0					
ANR	8111283	MultiplicativeExpression	pcs -> margins . length / ( value < 5 ? 5 : ( value > 128 ? 128 : value ) )		8111222	1		/			
ANR	8111284	MemberAccess	pcs -> margins . length		8111222	0					
ANR	8111285	PtrMemberAccess	pcs -> margins		8111222	0					
ANR	8111286	Identifier	pcs		8111222	0					
ANR	8111287	Identifier	margins		8111222	1					
ANR	8111288	Identifier	length		8111222	1					
ANR	8111289	ConditionalExpression	value < 5 ? 5 : ( value > 128 ? 128 : value )		8111222	1					
ANR	8111290	Condition	value < 5		8111222	0					
ANR	8111291	RelationalExpression	value < 5		8111222	0		<			
ANR	8111292	Identifier	value		8111222	0					
ANR	8111293	PrimaryExpression	5		8111222	1					
ANR	8111294	PrimaryExpression	5		8111222	1					
ANR	8111295	ConditionalExpression	value > 128 ? 128 : value		8111222	2					
ANR	8111296	Condition	value > 128		8111222	0					
ANR	8111297	RelationalExpression	value > 128		8111222	0		>			
ANR	8111298	Identifier	value		8111222	0					
ANR	8111299	PrimaryExpression	128		8111222	1					
ANR	8111300	PrimaryExpression	128		8111222	1					
ANR	8111301	Identifier	value		8111222	2					
ANR	8111302	ElseStatement	else		8111222	0					
ANR	8111303	CompoundStatement		9:11:373:373	8111222	0					
ANR	8111304	ExpressionStatement	vmi = inch2coord ( 8.0 / 48.0 )	721:8:22049:22077	8111222	0	True				
ANR	8111305	AssignmentExpression	vmi = inch2coord ( 8.0 / 48.0 )		8111222	0		=			
ANR	8111306	Identifier	vmi		8111222	0					
ANR	8111307	CallExpression	inch2coord ( 8.0 / 48.0 )		8111222	1					
ANR	8111308	Callee	inch2coord		8111222	0					
ANR	8111309	Identifier	inch2coord		8111222	0					
ANR	8111310	ArgumentList	8.0 / 48.0		8111222	1					
ANR	8111311	Argument	8.0 / 48.0		8111222	0					
ANR	8111312	MultiplicativeExpression	8.0 / 48.0		8111222	0		/			
ANR	8111313	PrimaryExpression	8.0		8111222	0					
ANR	8111314	PrimaryExpression	48.0		8111222	1					
ANR	8111315	ReturnStatement	return vmi ;	723:4:22089:22099	8111222	2	True				
ANR	8111316	Identifier	vmi		8111222	0					
ANR	8111317	ReturnType	coord		8111222	1					
ANR	8111318	Identifier	pcl_vmi_default		8111222	2					
ANR	8111319	ParameterList	pcl_state_t * pcs		8111222	3					
ANR	8111320	Parameter	pcl_state_t * pcs	711:16:21646:21662	8111222	0	True				
ANR	8111321	ParameterType	pcl_state_t *		8111222	0					
ANR	8111322	Identifier	pcs		8111222	1					
ANR	8111323	CFGEntryNode	ENTRY		8111222		True				
ANR	8111324	CFGExitNode	EXIT		8111222		True				
ANR	8111325	Symbol	pcs -> margins . length		8111222						
ANR	8111326	Symbol	inch2coord		8111222						
ANR	8111327	Symbol	pcs		8111222						
ANR	8111328	Symbol	pjl_proc_vartoi		8111222						
ANR	8111329	Symbol	vmi		8111222						
ANR	8111330	Symbol	pcs -> pjls		8111222						
ANR	8111331	Symbol	pjl_proc_compare		8111222						
ANR	8111332	Symbol	* pcs		8111222						
ANR	8111333	Symbol	pcs -> margins		8111222						
ANR	8111334	Symbol	pjl_proc_get_envvar		8111222						
ANR	8111335	Symbol	value		8111222						
ANR	8111336	Function	pcursor_do_registration	729:0:22129:24367							
ANR	8111337	FunctionDef	"pcursor_do_registration (pcl_parser_state_t * pcl_parser_state , gs_memory_t * pmem)"		8111336	0					
ANR	8111338	CompoundStatement		732:0:22247:24367	8111336	0					
ANR	8111339	Statement	DEFINE_CLASS	734:4:22254:22265	8111336	0	True				
ANR	8111340	Statement	(	734:16:22266:22266	8111336	1	True				
ANR	8111341	Statement	'&'	734:17:22267:22269	8111336	2	True				
ANR	8111342	Statement	)	734:20:22270:22270	8111336	3	True				
ANR	8111343	CompoundStatement		3:22:24:24	8111336	4					
ANR	8111344	Statement	'k'	735:8:22282:22284	8111336	0	True				
ANR	8111345	Statement	","	735:11:22285:22285	8111336	1	True				
ANR	8111346	Statement	'H'	735:13:22287:22289	8111336	2	True				
ANR	8111347	Statement	","	735:16:22290:22290	8111336	3	True				
ANR	8111348	Statement	PCL_COMMAND	736:12:22304:22314	8111336	4	True				
ANR	8111349	Statement	(	736:23:22315:22315	8111336	5	True				
ANR	8111350	Statement	"""Horizontal Motion Index"""	736:24:22316:22340	8111336	6	True				
ANR	8111351	Statement	","	736:49:22341:22341	8111336	7	True				
ANR	8111352	Statement	set_horiz_motion_index	737:24:22367:22388	8111336	8	True				
ANR	8111353	Statement	","	737:46:22389:22389	8111336	9	True				
ANR	8111354	Statement	pca_neg_ok	737:48:22391:22400	8111336	10	True				
ANR	8111355	Statement	|	737:59:22402:22402	8111336	11	True				
ANR	8111356	Statement	pca_big_clamp	737:61:22404:22416	8111336	12	True				
ANR	8111357	Statement	)	737:74:22417:22417	8111336	13	True				
ANR	8111358	Statement	","	738:5:22424:22424	8111336	5	True				
ANR	8111359	CompoundStatement		7:7:178:178	8111336	6					
ANR	8111360	Statement	'l'	739:8:22436:22438	8111336	0	True				
ANR	8111361	Statement	","	739:11:22439:22439	8111336	1	True				
ANR	8111362	Statement	'C'	739:13:22441:22443	8111336	2	True				
ANR	8111363	Statement	","	739:16:22444:22444	8111336	3	True				
ANR	8111364	Statement	PCL_COMMAND	740:12:22458:22468	8111336	4	True				
ANR	8111365	Statement	(	740:23:22469:22469	8111336	5	True				
ANR	8111366	Statement	"""Vertical Motion Index"""	740:24:22470:22492	8111336	6	True				
ANR	8111367	Statement	","	740:47:22493:22493	8111336	7	True				
ANR	8111368	Statement	set_vert_motion_index	741:24:22519:22539	8111336	8	True				
ANR	8111369	Statement	","	741:45:22540:22540	8111336	9	True				
ANR	8111370	Statement	pca_neg_ok	741:47:22542:22551	8111336	10	True				
ANR	8111371	Statement	|	741:58:22553:22553	8111336	11	True				
ANR	8111372	Statement	pca_big_ignore	741:60:22555:22568	8111336	12	True				
ANR	8111373	Statement	)	741:74:22569:22569	8111336	13	True				
ANR	8111374	Statement	","	742:5:22576:22576	8111336	7	True				
ANR	8111375	CompoundStatement		11:7:330:330	8111336	8					
ANR	8111376	Statement	'l'	743:8:22588:22590	8111336	0	True				
ANR	8111377	Statement	","	743:11:22591:22591	8111336	1	True				
ANR	8111378	Statement	'D'	743:13:22593:22595	8111336	2	True				
ANR	8111379	Statement	","	743:16:22596:22596	8111336	3	True				
ANR	8111380	Statement	PCL_COMMAND	744:12:22610:22620	8111336	4	True				
ANR	8111381	Statement	(	744:23:22621:22621	8111336	5	True				
ANR	8111382	Statement	"""Line Spacing"""	744:24:22622:22635	8111336	6	True				
ANR	8111383	Statement	","	744:38:22636:22636	8111336	7	True				
ANR	8111384	Statement	set_line_spacing	745:24:22662:22677	8111336	8	True				
ANR	8111385	Statement	","	745:40:22678:22678	8111336	9	True				
ANR	8111386	Statement	pca_neg_ok	745:42:22680:22689	8111336	10	True				
ANR	8111387	Statement	|	745:53:22691:22691	8111336	11	True				
ANR	8111388	Statement	pca_big_ignore	745:55:22693:22706	8111336	12	True				
ANR	8111389	Statement	)	745:69:22707:22707	8111336	13	True				
ANR	8111390	Statement	","	746:5:22714:22714	8111336	9	True				
ANR	8111391	CompoundStatement		15:7:468:468	8111336	10					
ANR	8111392	Statement	'k'	747:8:22726:22728	8111336	0	True				
ANR	8111393	Statement	","	747:11:22729:22729	8111336	1	True				
ANR	8111394	Statement	'G'	747:13:22731:22733	8111336	2	True				
ANR	8111395	Statement	","	747:16:22734:22734	8111336	3	True				
ANR	8111396	Statement	PCL_COMMAND	748:12:22748:22758	8111336	4	True				
ANR	8111397	Statement	(	748:23:22759:22759	8111336	5	True				
ANR	8111398	Statement	"""Line Termination"""	748:24:22760:22777	8111336	6	True				
ANR	8111399	Statement	","	748:42:22778:22778	8111336	7	True				
ANR	8111400	Statement	set_line_termination	749:24:22804:22823	8111336	8	True				
ANR	8111401	Statement	","	749:44:22824:22824	8111336	9	True				
ANR	8111402	Statement	pca_neg_ok	749:46:22826:22835	8111336	10	True				
ANR	8111403	Statement	|	749:57:22837:22837	8111336	11	True				
ANR	8111404	Statement	pca_big_ignore	749:59:22839:22852	8111336	12	True				
ANR	8111405	Statement	)	749:73:22853:22853	8111336	13	True				
ANR	8111406	Statement	","	750:5:22860:22860	8111336	11	True				
ANR	8111407	CompoundStatement		19:7:614:614	8111336	12					
ANR	8111408	Statement	'a'	751:8:22872:22874	8111336	0	True				
ANR	8111409	Statement	","	751:11:22875:22875	8111336	1	True				
ANR	8111410	Statement	'C'	751:13:22877:22879	8111336	2	True				
ANR	8111411	Statement	","	751:16:22880:22880	8111336	3	True				
ANR	8111412	Statement	PCL_COMMAND	752:12:22894:22904	8111336	4	True				
ANR	8111413	Statement	(	752:23:22905:22905	8111336	5	True				
ANR	8111414	Statement	"""Horizontal Cursor Position Columns"""	752:24:22906:22941	8111336	6	True				
ANR	8111415	Statement	","	752:60:22942:22942	8111336	7	True				
ANR	8111416	Statement	horiz_cursor_pos_columns	753:24:22968:22991	8111336	8	True				
ANR	8111417	Statement	","	753:48:22992:22992	8111336	9	True				
ANR	8111418	Statement	pca_neg_ok	753:50:22994:23003	8111336	10	True				
ANR	8111419	Statement	|	753:61:23005:23005	8111336	11	True				
ANR	8111420	Statement	pca_big_ok	753:63:23007:23016	8111336	12	True				
ANR	8111421	Statement	)	753:73:23017:23017	8111336	13	True				
ANR	8111422	Statement	","	754:5:23024:23024	8111336	13	True				
ANR	8111423	CompoundStatement		23:7:778:778	8111336	14					
ANR	8111424	Statement	'a'	755:8:23036:23038	8111336	0	True				
ANR	8111425	Statement	","	755:11:23039:23039	8111336	1	True				
ANR	8111426	Statement	'H'	755:13:23041:23043	8111336	2	True				
ANR	8111427	Statement	","	755:16:23044:23044	8111336	3	True				
ANR	8111428	Statement	PCL_COMMAND	756:12:23058:23068	8111336	4	True				
ANR	8111429	Statement	(	756:23:23069:23069	8111336	5	True				
ANR	8111430	Statement	"""Horizontal Cursor Position Decipoints"""	756:24:23070:23108	8111336	6	True				
ANR	8111431	Statement	","	756:63:23109:23109	8111336	7	True				
ANR	8111432	Statement	horiz_cursor_pos_decipoints	757:24:23135:23161	8111336	8	True				
ANR	8111433	Statement	","	757:51:23162:23162	8111336	9	True				
ANR	8111434	Statement	pca_neg_ok	757:53:23164:23173	8111336	10	True				
ANR	8111435	Statement	|	757:64:23175:23175	8111336	11	True				
ANR	8111436	Statement	pca_big_ok	757:66:23177:23186	8111336	12	True				
ANR	8111437	Statement	)	757:76:23187:23187	8111336	13	True				
ANR	8111438	Statement	","	758:5:23194:23194	8111336	15	True				
ANR	8111439	CompoundStatement		27:7:948:948	8111336	16					
ANR	8111440	Statement	'a'	759:8:23206:23208	8111336	0	True				
ANR	8111441	Statement	","	759:11:23209:23209	8111336	1	True				
ANR	8111442	Statement	'R'	759:13:23211:23213	8111336	2	True				
ANR	8111443	Statement	","	759:16:23214:23214	8111336	3	True				
ANR	8111444	Statement	PCL_COMMAND	760:12:23228:23238	8111336	4	True				
ANR	8111445	Statement	(	760:23:23239:23239	8111336	5	True				
ANR	8111446	Statement	"""Vertical Cursor Position Rows"""	760:24:23240:23270	8111336	6	True				
ANR	8111447	Statement	","	760:55:23271:23271	8111336	7	True				
ANR	8111448	Statement	vert_cursor_pos_rows	761:24:23297:23316	8111336	8	True				
ANR	8111449	Statement	","	761:44:23317:23317	8111336	9	True				
ANR	8111450	Statement	pca_neg_ok	761:46:23319:23328	8111336	10	True				
ANR	8111451	Statement	|	761:57:23330:23330	8111336	11	True				
ANR	8111452	Statement	pca_big_clamp	761:59:23332:23344	8111336	12	True				
ANR	8111453	Statement	)	761:72:23345:23345	8111336	13	True				
ANR	8111454	Statement	","	762:5:23352:23352	8111336	17	True				
ANR	8111455	CompoundStatement		31:7:1106:1106	8111336	18					
ANR	8111456	Statement	'a'	763:8:23364:23366	8111336	0	True				
ANR	8111457	Statement	","	763:11:23367:23367	8111336	1	True				
ANR	8111458	Statement	'V'	763:13:23369:23371	8111336	2	True				
ANR	8111459	Statement	","	763:16:23372:23372	8111336	3	True				
ANR	8111460	Statement	PCL_COMMAND	764:12:23386:23396	8111336	4	True				
ANR	8111461	Statement	(	764:23:23397:23397	8111336	5	True				
ANR	8111462	Statement	"""Vertical Cursor Position Decipoints"""	764:24:23398:23434	8111336	6	True				
ANR	8111463	Statement	","	764:61:23435:23435	8111336	7	True				
ANR	8111464	Statement	vert_cursor_pos_decipoints	765:24:23461:23486	8111336	8	True				
ANR	8111465	Statement	","	765:50:23487:23487	8111336	9	True				
ANR	8111466	Statement	pca_neg_ok	765:52:23489:23498	8111336	10	True				
ANR	8111467	Statement	|	765:63:23500:23500	8111336	11	True				
ANR	8111468	Statement	pca_big_ok	765:65:23502:23511	8111336	12	True				
ANR	8111469	Statement	)	765:75:23512:23512	8111336	13	True				
ANR	8111470	Statement	","	766:5:23519:23519	8111336	19	True				
ANR	8111471	CompoundStatement		35:7:1273:1273	8111336	20					
ANR	8111472	Statement	'f'	767:8:23531:23533	8111336	0	True				
ANR	8111473	Statement	","	767:11:23534:23534	8111336	1	True				
ANR	8111474	Statement	'S'	767:13:23536:23538	8111336	2	True				
ANR	8111475	Statement	","	767:16:23539:23539	8111336	3	True				
ANR	8111476	Statement	PCL_COMMAND	768:12:23553:23563	8111336	4	True				
ANR	8111477	Statement	(	768:23:23564:23564	8111336	5	True				
ANR	8111478	Statement	"""Push/Pop Cursor"""	768:24:23565:23581	8111336	6	True				
ANR	8111479	Statement	","	768:41:23582:23582	8111336	7	True				
ANR	8111480	Statement	push_pop_cursor	769:24:23608:23622	8111336	8	True				
ANR	8111481	Statement	","	769:39:23623:23623	8111336	9	True				
ANR	8111482	Statement	pca_neg_ok	769:41:23625:23634	8111336	10	True				
ANR	8111483	Statement	|	769:52:23636:23636	8111336	11	True				
ANR	8111484	Statement	pca_big_ignore	769:54:23638:23651	8111336	12	True				
ANR	8111485	Statement	)	769:68:23652:23652	8111336	13	True				
ANR	8111486	Statement	","	770:5:23659:23659	8111336	21	True				
ANR	8111487	Statement	END_CLASS	770:7:23661:23669	8111336	22	True				
ANR	8111488	Statement	DEFINE_CLASS	770:17:23671:23682	8111336	23	True				
ANR	8111489	Statement	(	770:29:23683:23683	8111336	24	True				
ANR	8111490	Statement	'*'	770:30:23684:23686	8111336	25	True				
ANR	8111491	Statement	)	770:33:23687:23687	8111336	26	True				
ANR	8111492	CompoundStatement		39:35:1441:1441	8111336	27					
ANR	8111493	Statement	'p'	771:8:23699:23701	8111336	0	True				
ANR	8111494	Statement	","	771:11:23702:23702	8111336	1	True				
ANR	8111495	Statement	'X'	771:13:23704:23706	8111336	2	True				
ANR	8111496	Statement	","	771:16:23707:23707	8111336	3	True				
ANR	8111497	Statement	PCL_COMMAND	772:12:23721:23731	8111336	4	True				
ANR	8111498	Statement	(	772:23:23732:23732	8111336	5	True				
ANR	8111499	Statement	"""Horizontal Cursor Position Units"""	772:24:23733:23766	8111336	6	True				
ANR	8111500	Statement	","	772:58:23767:23767	8111336	7	True				
ANR	8111501	Statement	horiz_cursor_pos_units	773:24:23793:23814	8111336	8	True				
ANR	8111502	Statement	","	773:46:23815:23815	8111336	9	True				
ANR	8111503	Statement	pca_neg_ok	774:24:23841:23850	8111336	10	True				
ANR	8111504	Statement	|	774:35:23852:23852	8111336	11	True				
ANR	8111505	Statement	pca_big_ok	774:37:23854:23863	8111336	12	True				
ANR	8111506	Statement	|	774:48:23865:23865	8111336	13	True				
ANR	8111507	Statement	pca_in_rtl	774:50:23867:23876	8111336	14	True				
ANR	8111508	Statement	)	774:60:23877:23877	8111336	15	True				
ANR	8111509	Statement	","	775:5:23884:23884	8111336	28	True				
ANR	8111510	CompoundStatement		44:7:1638:1638	8111336	29					
ANR	8111511	Statement	'p'	776:8:23896:23898	8111336	0	True				
ANR	8111512	Statement	","	776:11:23899:23899	8111336	1	True				
ANR	8111513	Statement	'Y'	776:13:23901:23903	8111336	2	True				
ANR	8111514	Statement	","	776:16:23904:23904	8111336	3	True				
ANR	8111515	Statement	PCL_COMMAND	777:12:23918:23928	8111336	4	True				
ANR	8111516	Statement	(	777:23:23929:23929	8111336	5	True				
ANR	8111517	Statement	"""Vertical Cursor Position Units"""	777:24:23930:23961	8111336	6	True				
ANR	8111518	Statement	","	777:56:23962:23962	8111336	7	True				
ANR	8111519	Statement	vert_cursor_pos_units	778:24:23988:24008	8111336	8	True				
ANR	8111520	Statement	","	778:45:24009:24009	8111336	9	True				
ANR	8111521	Statement	pca_neg_ok	779:24:24035:24044	8111336	10	True				
ANR	8111522	Statement	|	779:35:24046:24046	8111336	11	True				
ANR	8111523	Statement	pca_big_ok	779:37:24048:24057	8111336	12	True				
ANR	8111524	Statement	|	779:48:24059:24059	8111336	13	True				
ANR	8111525	Statement	pca_in_rtl	779:50:24061:24070	8111336	14	True				
ANR	8111526	Statement	)	779:60:24071:24071	8111336	15	True				
ANR	8111527	Statement	","	780:5:24078:24078	8111336	30	True				
ANR	8111528	Statement	END_CLASS	780:7:24080:24088	8111336	31	True				
ANR	8111529	Statement	DEFINE_CONTROL	780:17:24090:24103	8111336	32	True				
ANR	8111530	Statement	(	780:31:24104:24104	8111336	33	True				
ANR	8111531	Statement	CR	780:32:24105:24106	8111336	34	True				
ANR	8111532	Statement	","	780:34:24107:24107	8111336	35	True				
ANR	8111533	Statement	"""CR"""	780:36:24109:24112	8111336	36	True				
ANR	8111534	Statement	","	780:40:24113:24113	8111336	37	True				
ANR	8111535	Statement	cmd_CR	780:42:24115:24120	8111336	38	True				
ANR	8111536	Statement	)	780:48:24121:24121	8111336	39	True				
ANR	8111537	Statement	DEFINE_CONTROL	781:8:24131:24144	8111336	40	True				
ANR	8111538	Statement	(	781:22:24145:24145	8111336	41	True				
ANR	8111539	Statement	BS	781:23:24146:24147	8111336	42	True				
ANR	8111540	Statement	","	781:25:24148:24148	8111336	43	True				
ANR	8111541	Statement	"""BS"""	781:27:24150:24153	8111336	44	True				
ANR	8111542	Statement	","	781:31:24154:24154	8111336	45	True				
ANR	8111543	Statement	cmd_BS	781:33:24156:24161	8111336	46	True				
ANR	8111544	Statement	)	781:39:24162:24162	8111336	47	True				
ANR	8111545	Statement	DEFINE_CONTROL	782:8:24172:24185	8111336	48	True				
ANR	8111546	Statement	(	782:22:24186:24186	8111336	49	True				
ANR	8111547	Statement	HT	782:23:24187:24188	8111336	50	True				
ANR	8111548	Statement	","	782:25:24189:24189	8111336	51	True				
ANR	8111549	Statement	"""HT"""	782:27:24191:24194	8111336	52	True				
ANR	8111550	Statement	","	782:31:24195:24195	8111336	53	True				
ANR	8111551	Statement	cmd_HT	782:33:24197:24202	8111336	54	True				
ANR	8111552	Statement	)	782:39:24203:24203	8111336	55	True				
ANR	8111553	Statement	DEFINE_ESCAPE	783:8:24213:24225	8111336	56	True				
ANR	8111554	Statement	(	783:21:24226:24226	8111336	57	True				
ANR	8111555	Statement	'='	783:22:24227:24229	8111336	58	True				
ANR	8111556	Statement	","	783:25:24230:24230	8111336	59	True				
ANR	8111557	Statement	"""Half Line Feed"""	783:27:24232:24247	8111336	60	True				
ANR	8111558	Statement	","	783:43:24248:24248	8111336	61	True				
ANR	8111559	Statement	half_line_feed	783:45:24250:24263	8111336	62	True				
ANR	8111560	Statement	)	783:59:24264:24264	8111336	63	True				
ANR	8111561	Statement	DEFINE_CONTROL	784:8:24274:24287	8111336	64	True				
ANR	8111562	Statement	(	784:22:24288:24288	8111336	65	True				
ANR	8111563	Statement	LF	784:23:24289:24290	8111336	66	True				
ANR	8111564	Statement	","	784:25:24291:24291	8111336	67	True				
ANR	8111565	Statement	"""LF"""	784:27:24293:24296	8111336	68	True				
ANR	8111566	Statement	","	784:31:24297:24297	8111336	69	True				
ANR	8111567	Statement	cmd_LF	784:33:24299:24304	8111336	70	True				
ANR	8111568	Statement	)	784:39:24305:24305	8111336	71	True				
ANR	8111569	Statement	DEFINE_CONTROL	785:8:24315:24328	8111336	72	True				
ANR	8111570	Statement	(	785:22:24329:24329	8111336	73	True				
ANR	8111571	Statement	FF	785:23:24330:24331	8111336	74	True				
ANR	8111572	Statement	","	785:25:24332:24332	8111336	75	True				
ANR	8111573	Statement	"""FF"""	785:27:24334:24337	8111336	76	True				
ANR	8111574	Statement	","	785:31:24338:24338	8111336	77	True				
ANR	8111575	Statement	cmd_FF	785:33:24340:24345	8111336	78	True				
ANR	8111576	Statement	)	785:39:24346:24346	8111336	79	True				
ANR	8111577	ReturnStatement	return 0 ;	787:8:24357:24365	8111336	80	True				
ANR	8111578	PrimaryExpression	0		8111336	0					
ANR	8111579	ReturnType	static int		8111336	1					
ANR	8111580	Identifier	pcursor_do_registration		8111336	2					
ANR	8111581	ParameterList	"pcl_parser_state_t * pcl_parser_state , gs_memory_t * pmem"		8111336	3					
ANR	8111582	Parameter	pcl_parser_state_t * pcl_parser_state	730:24:22164:22200	8111336	0	True				
ANR	8111583	ParameterType	pcl_parser_state_t *		8111336	0					
ANR	8111584	Identifier	pcl_parser_state		8111336	1					
ANR	8111585	Parameter	gs_memory_t * pmem	731:24:22227:22244	8111336	1	True				
ANR	8111586	ParameterType	gs_memory_t *		8111336	0					
ANR	8111587	Identifier	pmem		8111336	1					
ANR	8111588	CFGEntryNode	ENTRY		8111336		True				
ANR	8111589	CFGExitNode	EXIT		8111336		True				
ANR	8111590	Symbol	pmem		8111336						
ANR	8111591	Symbol	pcl_parser_state		8111336						
ANR	8111592	Function	pcursor_do_reset	790:0:24370:25209							
ANR	8111593	FunctionDef	"pcursor_do_reset (pcl_state_t * pcs , pcl_reset_type_t type)"		8111592	0					
ANR	8111594	CompoundStatement		792:0:24440:25209	8111592	0					
ANR	8111595	Statement	static	793:4:24446:24451	8111592	0	True				
ANR	8111596	IdentifierDeclStatement	const uint mask = ( pcl_reset_initial | pcl_reset_printer | pcl_reset_overlay ) ;	793:11:24453:24560	8111592	1	True				
ANR	8111597	IdentifierDecl	mask = ( pcl_reset_initial | pcl_reset_printer | pcl_reset_overlay )		8111592	0					
ANR	8111598	IdentifierDeclType	const uint		8111592	0					
ANR	8111599	Identifier	mask		8111592	1					
ANR	8111600	AssignmentExpression	mask = ( pcl_reset_initial | pcl_reset_printer | pcl_reset_overlay )		8111592	2		=			
ANR	8111601	Identifier	mask		8111592	0					
ANR	8111602	InclusiveOrExpression	pcl_reset_initial | pcl_reset_printer | pcl_reset_overlay		8111592	1		|			
ANR	8111603	Identifier	pcl_reset_initial		8111592	0					
ANR	8111604	InclusiveOrExpression	pcl_reset_printer | pcl_reset_overlay		8111592	1		|			
ANR	8111605	Identifier	pcl_reset_printer		8111592	0					
ANR	8111606	Identifier	pcl_reset_overlay		8111592	1					
ANR	8111607	IfStatement	if ( ( type & mask ) == 0 )		8111592	2					
ANR	8111608	Condition	( type & mask ) == 0	796:8:24571:24588	8111592	0	True				
ANR	8111609	EqualityExpression	( type & mask ) == 0		8111592	0		==			
ANR	8111610	BitAndExpression	type & mask		8111592	0		&			
ANR	8111611	Identifier	type		8111592	0					
ANR	8111612	Identifier	mask		8111592	1					
ANR	8111613	PrimaryExpression	0		8111592	1					
ANR	8111614	ReturnStatement	return 0 ;	797:8:24599:24607	8111592	1	True				
ANR	8111615	PrimaryExpression	0		8111592	0					
ANR	8111616	ExpressionStatement	pcs -> line_termination = 0	799:4:24614:24639	8111592	3	True				
ANR	8111617	AssignmentExpression	pcs -> line_termination = 0		8111592	0		=			
ANR	8111618	PtrMemberAccess	pcs -> line_termination		8111592	0					
ANR	8111619	Identifier	pcs		8111592	0					
ANR	8111620	Identifier	line_termination		8111592	1					
ANR	8111621	PrimaryExpression	0		8111592	1					
ANR	8111622	ExpressionStatement	pcs -> hmi_cp = HMI_DEFAULT	800:4:24645:24670	8111592	4	True				
ANR	8111623	AssignmentExpression	pcs -> hmi_cp = HMI_DEFAULT		8111592	0		=			
ANR	8111624	PtrMemberAccess	pcs -> hmi_cp		8111592	0					
ANR	8111625	Identifier	pcs		8111592	0					
ANR	8111626	Identifier	hmi_cp		8111592	1					
ANR	8111627	Identifier	HMI_DEFAULT		8111592	1					
ANR	8111628	ExpressionStatement	pcs -> vmi_cp = VMI_DEFAULT	801:4:24676:24701	8111592	5	True				
ANR	8111629	AssignmentExpression	pcs -> vmi_cp = VMI_DEFAULT		8111592	0		=			
ANR	8111630	PtrMemberAccess	pcs -> vmi_cp		8111592	0					
ANR	8111631	Identifier	pcs		8111592	0					
ANR	8111632	Identifier	vmi_cp		8111592	1					
ANR	8111633	Identifier	VMI_DEFAULT		8111592	1					
ANR	8111634	IfStatement	if ( ( type & pcl_reset_overlay ) == 0 )		8111592	6					
ANR	8111635	Condition	( type & pcl_reset_overlay ) == 0	803:8:24712:24742	8111592	0	True				
ANR	8111636	EqualityExpression	( type & pcl_reset_overlay ) == 0		8111592	0		==			
ANR	8111637	BitAndExpression	type & pcl_reset_overlay		8111592	0		&			
ANR	8111638	Identifier	type		8111592	0					
ANR	8111639	Identifier	pcl_reset_overlay		8111592	1					
ANR	8111640	PrimaryExpression	0		8111592	1					
ANR	8111641	CompoundStatement		12:41:304:304	8111592	1					
ANR	8111642	ExpressionStatement	pcs -> cursor_stk_size = 0	804:8:24755:24779	8111592	0	True				
ANR	8111643	AssignmentExpression	pcs -> cursor_stk_size = 0		8111592	0		=			
ANR	8111644	PtrMemberAccess	pcs -> cursor_stk_size		8111592	0					
ANR	8111645	Identifier	pcs		8111592	0					
ANR	8111646	Identifier	cursor_stk_size		8111592	1					
ANR	8111647	PrimaryExpression	0		8111592	1					
ANR	8111648	IfStatement	if ( ( type & pcl_reset_initial ) != 0 )		8111592	1					
ANR	8111649	Condition	( type & pcl_reset_initial ) != 0	812:12:25033:25063	8111592	0	True				
ANR	8111650	EqualityExpression	( type & pcl_reset_initial ) != 0		8111592	0		!=			
ANR	8111651	BitAndExpression	type & pcl_reset_initial		8111592	0		&			
ANR	8111652	Identifier	type		8111592	0					
ANR	8111653	Identifier	pcl_reset_initial		8111592	1					
ANR	8111654	PrimaryExpression	0		8111592	1					
ANR	8111655	CompoundStatement		21:45:625:625	8111592	1					
ANR	8111656	ExpressionStatement	pcs -> underline_enabled = false	813:12:25080:25110	8111592	0	True				
ANR	8111657	AssignmentExpression	pcs -> underline_enabled = false		8111592	0		=			
ANR	8111658	PtrMemberAccess	pcs -> underline_enabled		8111592	0					
ANR	8111659	Identifier	pcs		8111592	0					
ANR	8111660	Identifier	underline_enabled		8111592	1					
ANR	8111661	Identifier	false		8111592	1					
ANR	8111662	ExpressionStatement	pcs -> cap . x = pcs -> cap . y = 0	814:12:25124:25151	8111592	1	True				
ANR	8111663	AssignmentExpression	pcs -> cap . x = pcs -> cap . y = 0		8111592	0		=			
ANR	8111664	MemberAccess	pcs -> cap . x		8111592	0					
ANR	8111665	PtrMemberAccess	pcs -> cap		8111592	0					
ANR	8111666	Identifier	pcs		8111592	0					
ANR	8111667	Identifier	cap		8111592	1					
ANR	8111668	Identifier	x		8111592	1					
ANR	8111669	AssignmentExpression	pcs -> cap . y = 0		8111592	1		=			
ANR	8111670	MemberAccess	pcs -> cap . y		8111592	0					
ANR	8111671	PtrMemberAccess	pcs -> cap		8111592	0					
ANR	8111672	Identifier	pcs		8111592	0					
ANR	8111673	Identifier	cap		8111592	1					
ANR	8111674	Identifier	y		8111592	1					
ANR	8111675	PrimaryExpression	0		8111592	1					
ANR	8111676	ExpressionStatement	pcl_home_cursor ( pcs )	817:4:25173:25193	8111592	7	True				
ANR	8111677	CallExpression	pcl_home_cursor ( pcs )		8111592	0					
ANR	8111678	Callee	pcl_home_cursor		8111592	0					
ANR	8111679	Identifier	pcl_home_cursor		8111592	0					
ANR	8111680	ArgumentList	pcs		8111592	1					
ANR	8111681	Argument	pcs		8111592	0					
ANR	8111682	Identifier	pcs		8111592	0					
ANR	8111683	ReturnStatement	return 0 ;	818:4:25199:25207	8111592	8	True				
ANR	8111684	PrimaryExpression	0		8111592	0					
ANR	8111685	ReturnType	static int		8111592	1					
ANR	8111686	Identifier	pcursor_do_reset		8111592	2					
ANR	8111687	ParameterList	"pcl_state_t * pcs , pcl_reset_type_t type"		8111592	3					
ANR	8111688	Parameter	pcl_state_t * pcs	791:17:24398:24414	8111592	0	True				
ANR	8111689	ParameterType	pcl_state_t *		8111592	0					
ANR	8111690	Identifier	pcs		8111592	1					
ANR	8111691	Parameter	pcl_reset_type_t type	791:36:24417:24437	8111592	1	True				
ANR	8111692	ParameterType	pcl_reset_type_t		8111592	0					
ANR	8111693	Identifier	type		8111592	1					
ANR	8111694	CFGEntryNode	ENTRY		8111592		True				
ANR	8111695	CFGExitNode	EXIT		8111592		True				
ANR	8111696	Symbol	pcs		8111592						
ANR	8111697	Symbol	pcs -> hmi_cp		8111592						
ANR	8111698	Symbol	false		8111592						
ANR	8111699	Symbol	pcs -> cap . x		8111592						
ANR	8111700	Symbol	pcl_reset_printer		8111592						
ANR	8111701	Symbol	VMI_DEFAULT		8111592						
ANR	8111702	Symbol	pcs -> cap		8111592						
ANR	8111703	Symbol	* pcs		8111592						
ANR	8111704	Symbol	pcs -> cap . y		8111592						
ANR	8111705	Symbol	type		8111592						
ANR	8111706	Symbol	pcs -> underline_enabled		8111592						
ANR	8111707	Symbol	pcl_reset_overlay		8111592						
ANR	8111708	Symbol	pcs -> vmi_cp		8111592						
ANR	8111709	Symbol	HMI_DEFAULT		8111592						
ANR	8111710	Symbol	pcs -> cursor_stk_size		8111592						
ANR	8111711	Symbol	pcl_reset_initial		8111592						
ANR	8111712	Symbol	pcs -> line_termination		8111592						
ANR	8111713	Symbol	mask		8111592						
ANR	8111714	DeclStmt									
ANR	8111715	Decl							const pcl_init_t	const pcl_init_t	pcursor_init
