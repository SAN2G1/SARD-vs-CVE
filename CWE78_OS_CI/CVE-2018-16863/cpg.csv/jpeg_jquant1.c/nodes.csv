command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6664668	File	data/converged/CVE-2018-16863_ghostpdl/jpeg_jquant1.c								
ANR	6664669	DeclStmt									
ANR	6664670	Decl							int ( * ) [ ODITHER_SIZE ]	int ( * ) [ ODITHER_SIZE ]	ODITHER_MATRIX_PTR
ANR	6664671	DeclStmt									
ANR	6664672	Decl							INT16	INT16	FSERROR
ANR	6664673	DeclStmt									
ANR	6664674	Decl							int	int	LOCFSERROR
ANR	6664675	DeclStmt									
ANR	6664676	Decl							INT32	INT32	FSERROR
ANR	6664677	DeclStmt									
ANR	6664678	Decl							INT32	INT32	LOCFSERROR
ANR	6664679	DeclStmt									
ANR	6664680	Decl							FSERROR FAR	FSERROR FAR *	FSERRPTR
ANR	6664681	ClassDef	<unnamed>	143:8:6903:7926							
ANR	6664682	DeclStmt									
ANR	6664683	Decl							struct jpeg_color_quantizer	struct jpeg_color_quantizer	pub
ANR	6664684	DeclStmt									
ANR	6664685	Decl							JSAMPARRAY	JSAMPARRAY	sv_colormap
ANR	6664686	DeclStmt									
ANR	6664687	Decl							int	int	sv_actual
ANR	6664688	DeclStmt									
ANR	6664689	Decl							JSAMPARRAY	JSAMPARRAY	colorindex
ANR	6664690	DeclStmt									
ANR	6664691	Decl							boolean	boolean	is_padded
ANR	6664692	DeclStmt									
ANR	6664693	Decl							int	int [ MAX_Q_COMPS ]	Ncolors
ANR	6664694	DeclStmt									
ANR	6664695	Decl							int	int	row_index
ANR	6664696	DeclStmt									
ANR	6664697	Decl							ODITHER_MATRIX_PTR	ODITHER_MATRIX_PTR [ MAX_Q_COMPS ]	odither
ANR	6664698	DeclStmt									
ANR	6664699	Decl							FSERRPTR	FSERRPTR [ MAX_Q_COMPS ]	fserrors
ANR	6664700	DeclStmt									
ANR	6664701	Decl							boolean	boolean	on_odd_row
ANR	6664702	DeclStmt									
ANR	6664703	Decl									my_cquantizer
ANR	6664704	DeclStmt									
ANR	6664705	Decl							my_cquantizer	my_cquantizer *	my_cquantize_ptr
ANR	6664706	Function	select_ncolors	187:0:8608:10691							
ANR	6664707	FunctionDef	"select_ncolors (j_decompress_ptr cinfo , int Ncolors [ ])"		6664706	0					
ANR	6664708	CompoundStatement		191:0:8853:10691	6664706	0					
ANR	6664709	IdentifierDeclStatement	int nc = cinfo -> out_color_components ;	192:2:8857:8893	6664706	0	True				
ANR	6664710	IdentifierDecl	nc = cinfo -> out_color_components		6664706	0					
ANR	6664711	IdentifierDeclType	int		6664706	0					
ANR	6664712	Identifier	nc		6664706	1					
ANR	6664713	AssignmentExpression	nc = cinfo -> out_color_components		6664706	2		=			
ANR	6664714	Identifier	nc		6664706	0					
ANR	6664715	PtrMemberAccess	cinfo -> out_color_components		6664706	1					
ANR	6664716	Identifier	cinfo		6664706	0					
ANR	6664717	Identifier	out_color_components		6664706	1					
ANR	6664718	IdentifierDeclStatement	int max_colors = cinfo -> desired_number_of_colors ;	193:2:8930:8978	6664706	1	True				
ANR	6664719	IdentifierDecl	max_colors = cinfo -> desired_number_of_colors		6664706	0					
ANR	6664720	IdentifierDeclType	int		6664706	0					
ANR	6664721	Identifier	max_colors		6664706	1					
ANR	6664722	AssignmentExpression	max_colors = cinfo -> desired_number_of_colors		6664706	2		=			
ANR	6664723	Identifier	max_colors		6664706	0					
ANR	6664724	PtrMemberAccess	cinfo -> desired_number_of_colors		6664706	1					
ANR	6664725	Identifier	cinfo		6664706	0					
ANR	6664726	Identifier	desired_number_of_colors		6664706	1					
ANR	6664727	IdentifierDeclStatement	"int total_colors , iroot , i , j ;"	194:2:8982:9011	6664706	2	True				
ANR	6664728	IdentifierDecl	total_colors		6664706	0					
ANR	6664729	IdentifierDeclType	int		6664706	0					
ANR	6664730	Identifier	total_colors		6664706	1					
ANR	6664731	IdentifierDecl	iroot		6664706	1					
ANR	6664732	IdentifierDeclType	int		6664706	0					
ANR	6664733	Identifier	iroot		6664706	1					
ANR	6664734	IdentifierDecl	i		6664706	2					
ANR	6664735	IdentifierDeclType	int		6664706	0					
ANR	6664736	Identifier	i		6664706	1					
ANR	6664737	IdentifierDecl	j		6664706	3					
ANR	6664738	IdentifierDeclType	int		6664706	0					
ANR	6664739	Identifier	j		6664706	1					
ANR	6664740	IdentifierDeclStatement	boolean changed ;	195:2:9015:9030	6664706	3	True				
ANR	6664741	IdentifierDecl	changed		6664706	0					
ANR	6664742	IdentifierDeclType	boolean		6664706	0					
ANR	6664743	Identifier	changed		6664706	1					
ANR	6664744	IdentifierDeclStatement	long temp ;	196:2:9034:9043	6664706	4	True				
ANR	6664745	IdentifierDecl	temp		6664706	0					
ANR	6664746	IdentifierDeclType	long		6664706	0					
ANR	6664747	Identifier	temp		6664706	1					
ANR	6664748	Statement	static	197:2:9047:9052	6664706	5	True				
ANR	6664749	IdentifierDeclStatement	"const int RGB_order [ 3 ] = { RGB_GREEN , RGB_RED , RGB_BLUE } ;"	197:9:9054:9111	6664706	6	True				
ANR	6664750	IdentifierDecl	"RGB_order [ 3 ] = { RGB_GREEN , RGB_RED , RGB_BLUE }"		6664706	0					
ANR	6664751	IdentifierDeclType	const int [ 3 ]		6664706	0					
ANR	6664752	Identifier	RGB_order		6664706	1					
ANR	6664753	PrimaryExpression	3		6664706	2					
ANR	6664754	AssignmentExpression	"RGB_order [ 3 ] = { RGB_GREEN , RGB_RED , RGB_BLUE }"		6664706	3		=			
ANR	6664755	Identifier	RGB_order		6664706	0					
ANR	6664756	InitializerList	RGB_GREEN		6664706	1					
ANR	6664757	Identifier	RGB_GREEN		6664706	0					
ANR	6664758	Identifier	RGB_RED		6664706	1					
ANR	6664759	Identifier	RGB_BLUE		6664706	2					
ANR	6664760	ExpressionStatement	iroot = 1	201:2:9242:9251	6664706	7	True				
ANR	6664761	AssignmentExpression	iroot = 1		6664706	0		=			
ANR	6664762	Identifier	iroot		6664706	0					
ANR	6664763	PrimaryExpression	1		6664706	1					
ANR	6664764	DoStatement	do		6664706	8					
ANR	6664765	CompoundStatement		12:5:404:404	6664706	0					
ANR	6664766	ExpressionStatement	iroot ++	203:4:9264:9271	6664706	0	True				
ANR	6664767	PostIncDecOperationExpression	iroot ++		6664706	0					
ANR	6664768	Identifier	iroot		6664706	0					
ANR	6664769	IncDec	++		6664706	1					
ANR	6664770	ExpressionStatement	temp = iroot	204:4:9277:9289	6664706	1	True				
ANR	6664771	AssignmentExpression	temp = iroot		6664706	0		=			
ANR	6664772	Identifier	temp		6664706	0					
ANR	6664773	Identifier	iroot		6664706	1					
ANR	6664774	ForStatement	for ( i = 1 ; i < nc ; i ++ )		6664706	2					
ANR	6664775	ForInit	i = 1 ;	205:9:9330:9335	6664706	0	True				
ANR	6664776	AssignmentExpression	i = 1		6664706	0		=			
ANR	6664777	Identifier	i		6664706	0					
ANR	6664778	PrimaryExpression	1		6664706	1					
ANR	6664779	Condition	i < nc	205:16:9337:9342	6664706	1	True				
ANR	6664780	RelationalExpression	i < nc		6664706	0		<			
ANR	6664781	Identifier	i		6664706	0					
ANR	6664782	Identifier	nc		6664706	1					
ANR	6664783	PostIncDecOperationExpression	i ++	205:24:9345:9347	6664706	2	True				
ANR	6664784	Identifier	i		6664706	0					
ANR	6664785	IncDec	++		6664706	1					
ANR	6664786	ExpressionStatement	temp *= iroot	206:6:9356:9369	6664706	3	True				
ANR	6664787	AssignmentExpression	temp *= iroot		6664706	0		*=			
ANR	6664788	Identifier	temp		6664706	0					
ANR	6664789	Identifier	iroot		6664706	1					
ANR	6664790	Condition	temp <= ( long ) max_colors	207:11:9382:9406	6664706	1	True				
ANR	6664791	RelationalExpression	temp <= ( long ) max_colors		6664706	0		<=			
ANR	6664792	Identifier	temp		6664706	0					
ANR	6664793	CastExpression	( long ) max_colors		6664706	1					
ANR	6664794	CastTarget	long		6664706	0					
ANR	6664795	Identifier	max_colors		6664706	1					
ANR	6664796	ExpressionStatement	iroot --	208:2:9449:9456	6664706	9	True				
ANR	6664797	PostIncDecOperationExpression	iroot --		6664706	0					
ANR	6664798	Identifier	iroot		6664706	0					
ANR	6664799	IncDec	--		6664706	1					
ANR	6664800	IfStatement	if ( iroot < 2 )		6664706	10					
ANR	6664801	Condition	iroot < 2	211:6:9553:9561	6664706	0	True				
ANR	6664802	RelationalExpression	iroot < 2		6664706	0		<			
ANR	6664803	Identifier	iroot		6664706	0					
ANR	6664804	PrimaryExpression	2		6664706	1					
ANR	6664805	ExpressionStatement	"ERREXIT1 ( cinfo , JERR_QUANT_FEW_COLORS , ( int ) temp )"	212:4:9568:9618	6664706	1	True				
ANR	6664806	CallExpression	"ERREXIT1 ( cinfo , JERR_QUANT_FEW_COLORS , ( int ) temp )"		6664706	0					
ANR	6664807	Callee	ERREXIT1		6664706	0					
ANR	6664808	Identifier	ERREXIT1		6664706	0					
ANR	6664809	ArgumentList	cinfo		6664706	1					
ANR	6664810	Argument	cinfo		6664706	0					
ANR	6664811	Identifier	cinfo		6664706	0					
ANR	6664812	Argument	JERR_QUANT_FEW_COLORS		6664706	1					
ANR	6664813	Identifier	JERR_QUANT_FEW_COLORS		6664706	0					
ANR	6664814	Argument	( int ) temp		6664706	2					
ANR	6664815	CastExpression	( int ) temp		6664706	0					
ANR	6664816	CastTarget	int		6664706	0					
ANR	6664817	Identifier	temp		6664706	1					
ANR	6664818	ExpressionStatement	total_colors = 1	215:2:9683:9699	6664706	11	True				
ANR	6664819	AssignmentExpression	total_colors = 1		6664706	0		=			
ANR	6664820	Identifier	total_colors		6664706	0					
ANR	6664821	PrimaryExpression	1		6664706	1					
ANR	6664822	ForStatement	for ( i = 0 ; i < nc ; i ++ )		6664706	12					
ANR	6664823	ForInit	i = 0 ;	216:7:9708:9713	6664706	0	True				
ANR	6664824	AssignmentExpression	i = 0		6664706	0		=			
ANR	6664825	Identifier	i		6664706	0					
ANR	6664826	PrimaryExpression	0		6664706	1					
ANR	6664827	Condition	i < nc	216:14:9715:9720	6664706	1	True				
ANR	6664828	RelationalExpression	i < nc		6664706	0		<			
ANR	6664829	Identifier	i		6664706	0					
ANR	6664830	Identifier	nc		6664706	1					
ANR	6664831	PostIncDecOperationExpression	i ++	216:22:9723:9725	6664706	2	True				
ANR	6664832	Identifier	i		6664706	0					
ANR	6664833	IncDec	++		6664706	1					
ANR	6664834	CompoundStatement		26:27:874:874	6664706	3					
ANR	6664835	ExpressionStatement	Ncolors [ i ] = iroot	217:4:9734:9752	6664706	0	True				
ANR	6664836	AssignmentExpression	Ncolors [ i ] = iroot		6664706	0		=			
ANR	6664837	ArrayIndexing	Ncolors [ i ]		6664706	0					
ANR	6664838	Identifier	Ncolors		6664706	0					
ANR	6664839	Identifier	i		6664706	1					
ANR	6664840	Identifier	iroot		6664706	1					
ANR	6664841	ExpressionStatement	total_colors *= iroot	218:4:9758:9779	6664706	1	True				
ANR	6664842	AssignmentExpression	total_colors *= iroot		6664706	0		*=			
ANR	6664843	Identifier	total_colors		6664706	0					
ANR	6664844	Identifier	iroot		6664706	1					
ANR	6664845	DoStatement	do		6664706	13					
ANR	6664846	CompoundStatement		36:5:1302:1302	6664706	0					
ANR	6664847	ExpressionStatement	changed = FALSE	227:4:10162:10177	6664706	0	True				
ANR	6664848	AssignmentExpression	changed = FALSE		6664706	0		=			
ANR	6664849	Identifier	changed		6664706	0					
ANR	6664850	Identifier	FALSE		6664706	1					
ANR	6664851	ForStatement	for ( i = 0 ; i < nc ; i ++ )		6664706	1					
ANR	6664852	ForInit	i = 0 ;	228:9:10188:10193	6664706	0	True				
ANR	6664853	AssignmentExpression	i = 0		6664706	0		=			
ANR	6664854	Identifier	i		6664706	0					
ANR	6664855	PrimaryExpression	0		6664706	1					
ANR	6664856	Condition	i < nc	228:16:10195:10200	6664706	1	True				
ANR	6664857	RelationalExpression	i < nc		6664706	0		<			
ANR	6664858	Identifier	i		6664706	0					
ANR	6664859	Identifier	nc		6664706	1					
ANR	6664860	PostIncDecOperationExpression	i ++	228:24:10203:10205	6664706	2	True				
ANR	6664861	Identifier	i		6664706	0					
ANR	6664862	IncDec	++		6664706	1					
ANR	6664863	CompoundStatement		38:29:1354:1354	6664706	3					
ANR	6664864	ExpressionStatement	j = ( cinfo -> out_color_space == JCS_RGB ? RGB_order [ i ] : i )	229:6:10216:10274	6664706	0	True				
ANR	6664865	AssignmentExpression	j = ( cinfo -> out_color_space == JCS_RGB ? RGB_order [ i ] : i )		6664706	0		=			
ANR	6664866	Identifier	j		6664706	0					
ANR	6664867	ConditionalExpression	cinfo -> out_color_space == JCS_RGB ? RGB_order [ i ] : i		6664706	1					
ANR	6664868	Condition	cinfo -> out_color_space == JCS_RGB		6664706	0					
ANR	6664869	EqualityExpression	cinfo -> out_color_space == JCS_RGB		6664706	0		==			
ANR	6664870	PtrMemberAccess	cinfo -> out_color_space		6664706	0					
ANR	6664871	Identifier	cinfo		6664706	0					
ANR	6664872	Identifier	out_color_space		6664706	1					
ANR	6664873	Identifier	JCS_RGB		6664706	1					
ANR	6664874	ArrayIndexing	RGB_order [ i ]		6664706	1					
ANR	6664875	Identifier	RGB_order		6664706	0					
ANR	6664876	Identifier	i		6664706	1					
ANR	6664877	Identifier	i		6664706	2					
ANR	6664878	ExpressionStatement	temp = total_colors / Ncolors [ j ]	231:6:10350:10382	6664706	1	True				
ANR	6664879	AssignmentExpression	temp = total_colors / Ncolors [ j ]		6664706	0		=			
ANR	6664880	Identifier	temp		6664706	0					
ANR	6664881	MultiplicativeExpression	total_colors / Ncolors [ j ]		6664706	1		/			
ANR	6664882	Identifier	total_colors		6664706	0					
ANR	6664883	ArrayIndexing	Ncolors [ j ]		6664706	1					
ANR	6664884	Identifier	Ncolors		6664706	0					
ANR	6664885	Identifier	j		6664706	1					
ANR	6664886	ExpressionStatement	temp *= Ncolors [ j ] + 1	232:6:10390:10410	6664706	2	True				
ANR	6664887	AssignmentExpression	temp *= Ncolors [ j ] + 1		6664706	0		*=			
ANR	6664888	Identifier	temp		6664706	0					
ANR	6664889	AdditiveExpression	Ncolors [ j ] + 1		6664706	1		+			
ANR	6664890	ArrayIndexing	Ncolors [ j ]		6664706	0					
ANR	6664891	Identifier	Ncolors		6664706	0					
ANR	6664892	Identifier	j		6664706	1					
ANR	6664893	PrimaryExpression	1		6664706	1					
ANR	6664894	IfStatement	if ( temp > ( long ) max_colors )		6664706	3					
ANR	6664895	Condition	temp > ( long ) max_colors	233:10:10461:10484	6664706	0	True				
ANR	6664896	RelationalExpression	temp > ( long ) max_colors		6664706	0		>			
ANR	6664897	Identifier	temp		6664706	0					
ANR	6664898	CastExpression	( long ) max_colors		6664706	1					
ANR	6664899	CastTarget	long		6664706	0					
ANR	6664900	Identifier	max_colors		6664706	1					
ANR	6664901	BreakStatement	break ;	234:1:10488:10493	6664706	1	True				
ANR	6664902	ExpressionStatement	Ncolors [ j ] ++	235:6:10540:10552	6664706	4	True				
ANR	6664903	PostIncDecOperationExpression	Ncolors [ j ] ++		6664706	0					
ANR	6664904	ArrayIndexing	Ncolors [ j ]		6664706	0					
ANR	6664905	Identifier	Ncolors		6664706	0					
ANR	6664906	Identifier	j		6664706	1					
ANR	6664907	IncDec	++		6664706	1					
ANR	6664908	ExpressionStatement	total_colors = ( int ) temp	236:6:10591:10616	6664706	5	True				
ANR	6664909	AssignmentExpression	total_colors = ( int ) temp		6664706	0		=			
ANR	6664910	Identifier	total_colors		6664706	0					
ANR	6664911	CastExpression	( int ) temp		6664706	1					
ANR	6664912	CastTarget	int		6664706	0					
ANR	6664913	Identifier	temp		6664706	1					
ANR	6664914	ExpressionStatement	changed = TRUE	237:6:10624:10638	6664706	6	True				
ANR	6664915	AssignmentExpression	changed = TRUE		6664706	0		=			
ANR	6664916	Identifier	changed		6664706	0					
ANR	6664917	Identifier	TRUE		6664706	1					
ANR	6664918	Condition	changed	239:11:10657:10663	6664706	1	True				
ANR	6664919	Identifier	changed		6664706	0					
ANR	6664920	ReturnStatement	return total_colors ;	241:2:10670:10689	6664706	14	True				
ANR	6664921	Identifier	total_colors		6664706	0					
ANR	6664922	Identifier	select_ncolors		6664706	1					
ANR	6664923	ParameterList	"j_decompress_ptr cinfo , int Ncolors [ ]"		6664706	2					
ANR	6664924	Parameter	j_decompress_ptr cinfo	187:16:8624:8645	6664706	0	True				
ANR	6664925	ParameterType	j_decompress_ptr		6664706	0					
ANR	6664926	Identifier	cinfo		6664706	1					
ANR	6664927	Parameter	int Ncolors [ ]	187:40:8648:8660	6664706	1	True				
ANR	6664928	ParameterType	int [ ]		6664706	0					
ANR	6664929	Identifier	Ncolors		6664706	1					
ANR	6664930	CFGEntryNode	ENTRY		6664706		True				
ANR	6664931	CFGExitNode	EXIT		6664706		True				
ANR	6664932	Symbol	total_colors		6664706						
ANR	6664933	Symbol	max_colors		6664706						
ANR	6664934	Symbol	* Ncolors		6664706						
ANR	6664935	Symbol	RGB_order		6664706						
ANR	6664936	Symbol	JERR_QUANT_FEW_COLORS		6664706						
ANR	6664937	Symbol	cinfo -> out_color_components		6664706						
ANR	6664938	Symbol	RGB_BLUE		6664706						
ANR	6664939	Symbol	Ncolors		6664706						
ANR	6664940	Symbol	* RGB_order		6664706						
ANR	6664941	Symbol	* cinfo		6664706						
ANR	6664942	Symbol	cinfo -> out_color_space		6664706						
ANR	6664943	Symbol	temp		6664706						
ANR	6664944	Symbol	i		6664706						
ANR	6664945	Symbol	TRUE		6664706						
ANR	6664946	Symbol	j		6664706						
ANR	6664947	Symbol	RGB_RED		6664706						
ANR	6664948	Symbol	cinfo -> desired_number_of_colors		6664706						
ANR	6664949	Symbol	* i		6664706						
ANR	6664950	Symbol	RGB_GREEN		6664706						
ANR	6664951	Symbol	* j		6664706						
ANR	6664952	Symbol	cinfo		6664706						
ANR	6664953	Symbol	nc		6664706						
ANR	6664954	Symbol	iroot		6664706						
ANR	6664955	Symbol	JCS_RGB		6664706						
ANR	6664956	Symbol	FALSE		6664706						
ANR	6664957	Symbol	changed		6664706						
ANR	6664958	Function	output_value	246:0:10706:11242							
ANR	6664959	FunctionDef	"output_value (j_decompress_ptr cinfo , int ci , int j , int maxj)"		6664958	0					
ANR	6664960	CompoundStatement		249:0:10906:11242	6664958	0					
ANR	6664961	ReturnStatement	return ( int ) ( ( ( INT32 ) j * MAXJSAMPLE + maxj / 2 ) / maxj ) ;	255:2:11185:11240	6664958	0	True				
ANR	6664962	CastExpression	( int ) ( ( ( INT32 ) j * MAXJSAMPLE + maxj / 2 ) / maxj )		6664958	0					
ANR	6664963	CastTarget	int		6664958	0					
ANR	6664964	MultiplicativeExpression	( ( INT32 ) j * MAXJSAMPLE + maxj / 2 ) / maxj		6664958	1		/			
ANR	6664965	AdditiveExpression	( INT32 ) j * MAXJSAMPLE + maxj / 2		6664958	0		+			
ANR	6664966	MultiplicativeExpression	( INT32 ) j * MAXJSAMPLE		6664958	0		*			
ANR	6664967	CastExpression	( INT32 ) j		6664958	0					
ANR	6664968	CastTarget	INT32		6664958	0					
ANR	6664969	Identifier	j		6664958	1					
ANR	6664970	Identifier	MAXJSAMPLE		6664958	1					
ANR	6664971	MultiplicativeExpression	maxj / 2		6664958	1		/			
ANR	6664972	Identifier	maxj		6664958	0					
ANR	6664973	PrimaryExpression	2		6664958	1					
ANR	6664974	Identifier	maxj		6664958	1					
ANR	6664975	Identifier	output_value		6664958	1					
ANR	6664976	ParameterList	"j_decompress_ptr cinfo , int ci , int j , int maxj"		6664958	2					
ANR	6664977	Parameter	j_decompress_ptr cinfo	246:14:10720:10741	6664958	0	True				
ANR	6664978	ParameterType	j_decompress_ptr		6664958	0					
ANR	6664979	Identifier	cinfo		6664958	1					
ANR	6664980	Parameter	int ci	246:38:10744:10749	6664958	1	True				
ANR	6664981	ParameterType	int		6664958	0					
ANR	6664982	Identifier	ci		6664958	1					
ANR	6664983	Parameter	int j	246:46:10752:10756	6664958	2	True				
ANR	6664984	ParameterType	int		6664958	0					
ANR	6664985	Identifier	j		6664958	1					
ANR	6664986	Parameter	int maxj	246:53:10759:10766	6664958	3	True				
ANR	6664987	ParameterType	int		6664958	0					
ANR	6664988	Identifier	maxj		6664958	1					
ANR	6664989	CFGEntryNode	ENTRY		6664958		True				
ANR	6664990	CFGExitNode	EXIT		6664958		True				
ANR	6664991	Symbol	cinfo		6664958						
ANR	6664992	Symbol	maxj		6664958						
ANR	6664993	Symbol	ci		6664958						
ANR	6664994	Symbol	MAXJSAMPLE		6664958						
ANR	6664995	Symbol	j		6664958						
ANR	6664996	Function	largest_input_value	260:0:11257:11609							
ANR	6664997	FunctionDef	"largest_input_value (j_decompress_ptr cinfo , int ci , int j , int maxj)"		6664996	0					
ANR	6664998	CompoundStatement		263:0:11466:11609	6664996	0					
ANR	6664999	ReturnStatement	return ( int ) ( ( ( INT32 ) ( 2 * j + 1 ) * MAXJSAMPLE + maxj ) / ( 2 * maxj ) ) ;	265:2:11542:11607	6664996	0	True				
ANR	6665000	CastExpression	( int ) ( ( ( INT32 ) ( 2 * j + 1 ) * MAXJSAMPLE + maxj ) / ( 2 * maxj ) )		6664996	0					
ANR	6665001	CastTarget	int		6664996	0					
ANR	6665002	MultiplicativeExpression	( ( INT32 ) ( 2 * j + 1 ) * MAXJSAMPLE + maxj ) / ( 2 * maxj )		6664996	1		/			
ANR	6665003	AdditiveExpression	( INT32 ) ( 2 * j + 1 ) * MAXJSAMPLE + maxj		6664996	0		+			
ANR	6665004	MultiplicativeExpression	( INT32 ) ( 2 * j + 1 ) * MAXJSAMPLE		6664996	0		*			
ANR	6665005	CastExpression	( INT32 ) ( 2 * j + 1 )		6664996	0					
ANR	6665006	CastTarget	INT32		6664996	0					
ANR	6665007	AdditiveExpression	2 * j + 1		6664996	1		+			
ANR	6665008	MultiplicativeExpression	2 * j		6664996	0		*			
ANR	6665009	PrimaryExpression	2		6664996	0					
ANR	6665010	Identifier	j		6664996	1					
ANR	6665011	PrimaryExpression	1		6664996	1					
ANR	6665012	Identifier	MAXJSAMPLE		6664996	1					
ANR	6665013	Identifier	maxj		6664996	1					
ANR	6665014	MultiplicativeExpression	2 * maxj		6664996	1		*			
ANR	6665015	PrimaryExpression	2		6664996	0					
ANR	6665016	Identifier	maxj		6664996	1					
ANR	6665017	Identifier	largest_input_value		6664996	1					
ANR	6665018	ParameterList	"j_decompress_ptr cinfo , int ci , int j , int maxj"		6664996	2					
ANR	6665019	Parameter	j_decompress_ptr cinfo	260:21:11278:11299	6664996	0	True				
ANR	6665020	ParameterType	j_decompress_ptr		6664996	0					
ANR	6665021	Identifier	cinfo		6664996	1					
ANR	6665022	Parameter	int ci	260:45:11302:11307	6664996	1	True				
ANR	6665023	ParameterType	int		6664996	0					
ANR	6665024	Identifier	ci		6664996	1					
ANR	6665025	Parameter	int j	260:53:11310:11314	6664996	2	True				
ANR	6665026	ParameterType	int		6664996	0					
ANR	6665027	Identifier	j		6664996	1					
ANR	6665028	Parameter	int maxj	260:60:11317:11324	6664996	3	True				
ANR	6665029	ParameterType	int		6664996	0					
ANR	6665030	Identifier	maxj		6664996	1					
ANR	6665031	CFGEntryNode	ENTRY		6664996		True				
ANR	6665032	CFGExitNode	EXIT		6664996		True				
ANR	6665033	Symbol	cinfo		6664996						
ANR	6665034	Symbol	maxj		6664996						
ANR	6665035	Symbol	ci		6664996						
ANR	6665036	Symbol	MAXJSAMPLE		6664996						
ANR	6665037	Symbol	j		6664996						
ANR	6665038	Function	create_colormap	274:0:11657:13739							
ANR	6665039	FunctionDef	create_colormap (j_decompress_ptr cinfo)		6665038	0					
ANR	6665040	CompoundStatement		275:0:11698:13739	6665038	0					
ANR	6665041	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	276:2:11702:11766	6665038	0	True				
ANR	6665042	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6665038	0					
ANR	6665043	IdentifierDeclType	my_cquantize_ptr		6665038	0					
ANR	6665044	Identifier	cquantize		6665038	1					
ANR	6665045	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6665038	2		=			
ANR	6665046	Identifier	cquantize		6665038	0					
ANR	6665047	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6665038	1					
ANR	6665048	CastTarget	my_cquantize_ptr		6665038	0					
ANR	6665049	PtrMemberAccess	cinfo -> cquantize		6665038	1					
ANR	6665050	Identifier	cinfo		6665038	0					
ANR	6665051	Identifier	cquantize		6665038	1					
ANR	6665052	IdentifierDeclStatement	JSAMPARRAY colormap ;	277:2:11770:11789	6665038	1	True				
ANR	6665053	IdentifierDecl	colormap		6665038	0					
ANR	6665054	IdentifierDeclType	JSAMPARRAY		6665038	0					
ANR	6665055	Identifier	colormap		6665038	1					
ANR	6665056	IdentifierDeclStatement	int total_colors ;	278:2:11817:11833	6665038	2	True				
ANR	6665057	IdentifierDecl	total_colors		6665038	0					
ANR	6665058	IdentifierDeclType	int		6665038	0					
ANR	6665059	Identifier	total_colors		6665038	1					
ANR	6665060	IdentifierDeclStatement	"int i , j , k , nci , blksize , blkdist , ptr , val ;"	279:2:11877:11919	6665038	3	True				
ANR	6665061	IdentifierDecl	i		6665038	0					
ANR	6665062	IdentifierDeclType	int		6665038	0					
ANR	6665063	Identifier	i		6665038	1					
ANR	6665064	IdentifierDecl	j		6665038	1					
ANR	6665065	IdentifierDeclType	int		6665038	0					
ANR	6665066	Identifier	j		6665038	1					
ANR	6665067	IdentifierDecl	k		6665038	2					
ANR	6665068	IdentifierDeclType	int		6665038	0					
ANR	6665069	Identifier	k		6665038	1					
ANR	6665070	IdentifierDecl	nci		6665038	3					
ANR	6665071	IdentifierDeclType	int		6665038	0					
ANR	6665072	Identifier	nci		6665038	1					
ANR	6665073	IdentifierDecl	blksize		6665038	4					
ANR	6665074	IdentifierDeclType	int		6665038	0					
ANR	6665075	Identifier	blksize		6665038	1					
ANR	6665076	IdentifierDecl	blkdist		6665038	5					
ANR	6665077	IdentifierDeclType	int		6665038	0					
ANR	6665078	Identifier	blkdist		6665038	1					
ANR	6665079	IdentifierDecl	ptr		6665038	6					
ANR	6665080	IdentifierDeclType	int		6665038	0					
ANR	6665081	Identifier	ptr		6665038	1					
ANR	6665082	IdentifierDecl	val		6665038	7					
ANR	6665083	IdentifierDeclType	int		6665038	0					
ANR	6665084	Identifier	val		6665038	1					
ANR	6665085	ExpressionStatement	"total_colors = select_ncolors ( cinfo , cquantize -> Ncolors )"	282:2:11975:12031	6665038	4	True				
ANR	6665086	AssignmentExpression	"total_colors = select_ncolors ( cinfo , cquantize -> Ncolors )"		6665038	0		=			
ANR	6665087	Identifier	total_colors		6665038	0					
ANR	6665088	CallExpression	"select_ncolors ( cinfo , cquantize -> Ncolors )"		6665038	1					
ANR	6665089	Callee	select_ncolors		6665038	0					
ANR	6665090	Identifier	select_ncolors		6665038	0					
ANR	6665091	ArgumentList	cinfo		6665038	1					
ANR	6665092	Argument	cinfo		6665038	0					
ANR	6665093	Identifier	cinfo		6665038	0					
ANR	6665094	Argument	cquantize -> Ncolors		6665038	1					
ANR	6665095	PtrMemberAccess	cquantize -> Ncolors		6665038	0					
ANR	6665096	Identifier	cquantize		6665038	0					
ANR	6665097	Identifier	Ncolors		6665038	1					
ANR	6665098	IfStatement	if ( cinfo -> out_color_components == 3 )		6665038	5					
ANR	6665099	Condition	cinfo -> out_color_components == 3	285:6:12077:12108	6665038	0	True				
ANR	6665100	EqualityExpression	cinfo -> out_color_components == 3		6665038	0		==			
ANR	6665101	PtrMemberAccess	cinfo -> out_color_components		6665038	0					
ANR	6665102	Identifier	cinfo		6665038	0					
ANR	6665103	Identifier	out_color_components		6665038	1					
ANR	6665104	PrimaryExpression	3		6665038	1					
ANR	6665105	ExpressionStatement	"TRACEMS4 ( cinfo , 1 , JTRC_QUANT_3_NCOLORS , total_colors , cquantize -> Ncolors [ 0 ] , cquantize -> Ncolors [ 1 ] , cquantize -> Ncolors [ 2 ] )"	286:4:12115:12250	6665038	1	True				
ANR	6665106	CallExpression	"TRACEMS4 ( cinfo , 1 , JTRC_QUANT_3_NCOLORS , total_colors , cquantize -> Ncolors [ 0 ] , cquantize -> Ncolors [ 1 ] , cquantize -> Ncolors [ 2 ] )"		6665038	0					
ANR	6665107	Callee	TRACEMS4		6665038	0					
ANR	6665108	Identifier	TRACEMS4		6665038	0					
ANR	6665109	ArgumentList	cinfo		6665038	1					
ANR	6665110	Argument	cinfo		6665038	0					
ANR	6665111	Identifier	cinfo		6665038	0					
ANR	6665112	Argument	1		6665038	1					
ANR	6665113	PrimaryExpression	1		6665038	0					
ANR	6665114	Argument	JTRC_QUANT_3_NCOLORS		6665038	2					
ANR	6665115	Identifier	JTRC_QUANT_3_NCOLORS		6665038	0					
ANR	6665116	Argument	total_colors		6665038	3					
ANR	6665117	Identifier	total_colors		6665038	0					
ANR	6665118	Argument	cquantize -> Ncolors [ 0 ]		6665038	4					
ANR	6665119	ArrayIndexing	cquantize -> Ncolors [ 0 ]		6665038	0					
ANR	6665120	PtrMemberAccess	cquantize -> Ncolors		6665038	0					
ANR	6665121	Identifier	cquantize		6665038	0					
ANR	6665122	Identifier	Ncolors		6665038	1					
ANR	6665123	PrimaryExpression	0		6665038	1					
ANR	6665124	Argument	cquantize -> Ncolors [ 1 ]		6665038	5					
ANR	6665125	ArrayIndexing	cquantize -> Ncolors [ 1 ]		6665038	0					
ANR	6665126	PtrMemberAccess	cquantize -> Ncolors		6665038	0					
ANR	6665127	Identifier	cquantize		6665038	0					
ANR	6665128	Identifier	Ncolors		6665038	1					
ANR	6665129	PrimaryExpression	1		6665038	1					
ANR	6665130	Argument	cquantize -> Ncolors [ 2 ]		6665038	6					
ANR	6665131	ArrayIndexing	cquantize -> Ncolors [ 2 ]		6665038	0					
ANR	6665132	PtrMemberAccess	cquantize -> Ncolors		6665038	0					
ANR	6665133	Identifier	cquantize		6665038	0					
ANR	6665134	Identifier	Ncolors		6665038	1					
ANR	6665135	PrimaryExpression	2		6665038	1					
ANR	6665136	ElseStatement	else		6665038	0					
ANR	6665137	ExpressionStatement	"TRACEMS1 ( cinfo , 1 , JTRC_QUANT_NCOLORS , total_colors )"	290:4:12263:12315	6665038	0	True				
ANR	6665138	CallExpression	"TRACEMS1 ( cinfo , 1 , JTRC_QUANT_NCOLORS , total_colors )"		6665038	0					
ANR	6665139	Callee	TRACEMS1		6665038	0					
ANR	6665140	Identifier	TRACEMS1		6665038	0					
ANR	6665141	ArgumentList	cinfo		6665038	1					
ANR	6665142	Argument	cinfo		6665038	0					
ANR	6665143	Identifier	cinfo		6665038	0					
ANR	6665144	Argument	1		6665038	1					
ANR	6665145	PrimaryExpression	1		6665038	0					
ANR	6665146	Argument	JTRC_QUANT_NCOLORS		6665038	2					
ANR	6665147	Identifier	JTRC_QUANT_NCOLORS		6665038	0					
ANR	6665148	Argument	total_colors		6665038	3					
ANR	6665149	Identifier	total_colors		6665038	0					
ANR	6665150	ExpressionStatement	"colormap = ( * cinfo -> mem -> alloc_sarray ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( JDIMENSION ) total_colors , ( JDIMENSION ) cinfo -> out_color_components )"	296:2:12504:12656	6665038	6	True				
ANR	6665151	AssignmentExpression	"colormap = ( * cinfo -> mem -> alloc_sarray ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( JDIMENSION ) total_colors , ( JDIMENSION ) cinfo -> out_color_components )"		6665038	0		=			
ANR	6665152	Identifier	colormap		6665038	0					
ANR	6665153	CallExpression	"( * cinfo -> mem -> alloc_sarray ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( JDIMENSION ) total_colors , ( JDIMENSION ) cinfo -> out_color_components )"		6665038	1					
ANR	6665154	Callee	* cinfo -> mem -> alloc_sarray		6665038	0					
ANR	6665155	UnaryOperationExpression	* cinfo -> mem -> alloc_sarray		6665038	0					
ANR	6665156	UnaryOperator	*		6665038	0					
ANR	6665157	PtrMemberAccess	cinfo -> mem -> alloc_sarray		6665038	1					
ANR	6665158	PtrMemberAccess	cinfo -> mem		6665038	0					
ANR	6665159	Identifier	cinfo		6665038	0					
ANR	6665160	Identifier	mem		6665038	1					
ANR	6665161	Identifier	alloc_sarray		6665038	1					
ANR	6665162	ArgumentList	( j_common_ptr ) cinfo		6665038	1					
ANR	6665163	Argument	( j_common_ptr ) cinfo		6665038	0					
ANR	6665164	CastExpression	( j_common_ptr ) cinfo		6665038	0					
ANR	6665165	CastTarget	j_common_ptr		6665038	0					
ANR	6665166	Identifier	cinfo		6665038	1					
ANR	6665167	Argument	JPOOL_IMAGE		6665038	1					
ANR	6665168	Identifier	JPOOL_IMAGE		6665038	0					
ANR	6665169	Argument	( JDIMENSION ) total_colors		6665038	2					
ANR	6665170	CastExpression	( JDIMENSION ) total_colors		6665038	0					
ANR	6665171	CastTarget	JDIMENSION		6665038	0					
ANR	6665172	Identifier	total_colors		6665038	1					
ANR	6665173	Argument	( JDIMENSION ) cinfo -> out_color_components		6665038	3					
ANR	6665174	CastExpression	( JDIMENSION ) cinfo -> out_color_components		6665038	0					
ANR	6665175	CastTarget	JDIMENSION		6665038	0					
ANR	6665176	PtrMemberAccess	cinfo -> out_color_components		6665038	1					
ANR	6665177	Identifier	cinfo		6665038	0					
ANR	6665178	Identifier	out_color_components		6665038	1					
ANR	6665179	ExpressionStatement	blkdist = total_colors	302:2:12812:12834	6665038	7	True				
ANR	6665180	AssignmentExpression	blkdist = total_colors		6665038	0		=			
ANR	6665181	Identifier	blkdist		6665038	0					
ANR	6665182	Identifier	total_colors		6665038	1					
ANR	6665183	ForStatement	for ( i = 0 ; i < cinfo -> out_color_components ; i ++ )		6665038	8					
ANR	6665184	ForInit	i = 0 ;	304:7:12844:12849	6665038	0	True				
ANR	6665185	AssignmentExpression	i = 0		6665038	0		=			
ANR	6665186	Identifier	i		6665038	0					
ANR	6665187	PrimaryExpression	0		6665038	1					
ANR	6665188	Condition	i < cinfo -> out_color_components	304:14:12851:12881	6665038	1	True				
ANR	6665189	RelationalExpression	i < cinfo -> out_color_components		6665038	0		<			
ANR	6665190	Identifier	i		6665038	0					
ANR	6665191	PtrMemberAccess	cinfo -> out_color_components		6665038	1					
ANR	6665192	Identifier	cinfo		6665038	0					
ANR	6665193	Identifier	out_color_components		6665038	1					
ANR	6665194	PostIncDecOperationExpression	i ++	304:47:12884:12886	6665038	2	True				
ANR	6665195	Identifier	i		6665038	0					
ANR	6665196	IncDec	++		6665038	1					
ANR	6665197	CompoundStatement		30:52:1190:1190	6665038	3					
ANR	6665198	ExpressionStatement	nci = cquantize -> Ncolors [ i ]	306:4:12955:12982	6665038	0	True				
ANR	6665199	AssignmentExpression	nci = cquantize -> Ncolors [ i ]		6665038	0		=			
ANR	6665200	Identifier	nci		6665038	0					
ANR	6665201	ArrayIndexing	cquantize -> Ncolors [ i ]		6665038	1					
ANR	6665202	PtrMemberAccess	cquantize -> Ncolors		6665038	0					
ANR	6665203	Identifier	cquantize		6665038	0					
ANR	6665204	Identifier	Ncolors		6665038	1					
ANR	6665205	Identifier	i		6665038	1					
ANR	6665206	ExpressionStatement	blksize = blkdist / nci	307:4:13030:13053	6665038	1	True				
ANR	6665207	AssignmentExpression	blksize = blkdist / nci		6665038	0		=			
ANR	6665208	Identifier	blksize		6665038	0					
ANR	6665209	MultiplicativeExpression	blkdist / nci		6665038	1		/			
ANR	6665210	Identifier	blkdist		6665038	0					
ANR	6665211	Identifier	nci		6665038	1					
ANR	6665212	ForStatement	for ( j = 0 ; j < nci ; j ++ )		6665038	2					
ANR	6665213	ForInit	j = 0 ;	308:9:13064:13069	6665038	0	True				
ANR	6665214	AssignmentExpression	j = 0		6665038	0		=			
ANR	6665215	Identifier	j		6665038	0					
ANR	6665216	PrimaryExpression	0		6665038	1					
ANR	6665217	Condition	j < nci	308:16:13071:13077	6665038	1	True				
ANR	6665218	RelationalExpression	j < nci		6665038	0		<			
ANR	6665219	Identifier	j		6665038	0					
ANR	6665220	Identifier	nci		6665038	1					
ANR	6665221	PostIncDecOperationExpression	j ++	308:25:13080:13082	6665038	2	True				
ANR	6665222	Identifier	j		6665038	0					
ANR	6665223	IncDec	++		6665038	1					
ANR	6665224	CompoundStatement		34:30:1386:1386	6665038	3					
ANR	6665225	ExpressionStatement	"val = output_value ( cinfo , i , j , nci - 1 )"	310:6:13158:13196	6665038	0	True				
ANR	6665226	AssignmentExpression	"val = output_value ( cinfo , i , j , nci - 1 )"		6665038	0		=			
ANR	6665227	Identifier	val		6665038	0					
ANR	6665228	CallExpression	"output_value ( cinfo , i , j , nci - 1 )"		6665038	1					
ANR	6665229	Callee	output_value		6665038	0					
ANR	6665230	Identifier	output_value		6665038	0					
ANR	6665231	ArgumentList	cinfo		6665038	1					
ANR	6665232	Argument	cinfo		6665038	0					
ANR	6665233	Identifier	cinfo		6665038	0					
ANR	6665234	Argument	i		6665038	1					
ANR	6665235	Identifier	i		6665038	0					
ANR	6665236	Argument	j		6665038	2					
ANR	6665237	Identifier	j		6665038	0					
ANR	6665238	Argument	nci - 1		6665038	3					
ANR	6665239	AdditiveExpression	nci - 1		6665038	0		-			
ANR	6665240	Identifier	nci		6665038	0					
ANR	6665241	PrimaryExpression	1		6665038	1					
ANR	6665242	ForStatement	for ( ptr = j * blksize ; ptr < total_colors ; ptr += blkdist )		6665038	1					
ANR	6665243	ForInit	ptr = j * blksize ;	312:11:13289:13306	6665038	0	True				
ANR	6665244	AssignmentExpression	ptr = j * blksize		6665038	0		=			
ANR	6665245	Identifier	ptr		6665038	0					
ANR	6665246	MultiplicativeExpression	j * blksize		6665038	1		*			
ANR	6665247	Identifier	j		6665038	0					
ANR	6665248	Identifier	blksize		6665038	1					
ANR	6665249	Condition	ptr < total_colors	312:30:13308:13325	6665038	1	True				
ANR	6665250	RelationalExpression	ptr < total_colors		6665038	0		<			
ANR	6665251	Identifier	ptr		6665038	0					
ANR	6665252	Identifier	total_colors		6665038	1					
ANR	6665253	AssignmentExpression	ptr += blkdist	312:50:13328:13341	6665038	2	True	+=			
ANR	6665254	Identifier	ptr		6665038	0					
ANR	6665255	Identifier	blkdist		6665038	1					
ANR	6665256	CompoundStatement		38:66:1645:1645	6665038	3					
ANR	6665257	ForStatement	for ( k = 0 ; k < blksize ; k ++ )		6665038	0					
ANR	6665258	ForInit	k = 0 ;	314:6:13400:13405	6665038	0	True				
ANR	6665259	AssignmentExpression	k = 0		6665038	0		=			
ANR	6665260	Identifier	k		6665038	0					
ANR	6665261	PrimaryExpression	0		6665038	1					
ANR	6665262	Condition	k < blksize	314:13:13407:13417	6665038	1	True				
ANR	6665263	RelationalExpression	k < blksize		6665038	0		<			
ANR	6665264	Identifier	k		6665038	0					
ANR	6665265	Identifier	blksize		6665038	1					
ANR	6665266	PostIncDecOperationExpression	k ++	314:26:13420:13422	6665038	2	True				
ANR	6665267	Identifier	k		6665038	0					
ANR	6665268	IncDec	++		6665038	1					
ANR	6665269	ExpressionStatement	colormap [ i ] [ ptr + k ] = ( JSAMPLE ) val	315:3:13428:13462	6665038	3	True				
ANR	6665270	AssignmentExpression	colormap [ i ] [ ptr + k ] = ( JSAMPLE ) val		6665038	0		=			
ANR	6665271	ArrayIndexing	colormap [ i ] [ ptr + k ]		6665038	0					
ANR	6665272	ArrayIndexing	colormap [ i ]		6665038	0					
ANR	6665273	Identifier	colormap		6665038	0					
ANR	6665274	Identifier	i		6665038	1					
ANR	6665275	AdditiveExpression	ptr + k		6665038	1		+			
ANR	6665276	Identifier	ptr		6665038	0					
ANR	6665277	Identifier	k		6665038	1					
ANR	6665278	CastExpression	( JSAMPLE ) val		6665038	1					
ANR	6665279	CastTarget	JSAMPLE		6665038	0					
ANR	6665280	Identifier	val		6665038	1					
ANR	6665281	ExpressionStatement	blkdist = blksize	318:4:13482:13499	6665038	3	True				
ANR	6665282	AssignmentExpression	blkdist = blksize		6665038	0		=			
ANR	6665283	Identifier	blkdist		6665038	0					
ANR	6665284	Identifier	blksize		6665038	1					
ANR	6665285	ExpressionStatement	cquantize -> sv_colormap = colormap	324:2:13665:13698	6665038	9	True				
ANR	6665286	AssignmentExpression	cquantize -> sv_colormap = colormap		6665038	0		=			
ANR	6665287	PtrMemberAccess	cquantize -> sv_colormap		6665038	0					
ANR	6665288	Identifier	cquantize		6665038	0					
ANR	6665289	Identifier	sv_colormap		6665038	1					
ANR	6665290	Identifier	colormap		6665038	1					
ANR	6665291	ExpressionStatement	cquantize -> sv_actual = total_colors	325:2:13702:13737	6665038	10	True				
ANR	6665292	AssignmentExpression	cquantize -> sv_actual = total_colors		6665038	0		=			
ANR	6665293	PtrMemberAccess	cquantize -> sv_actual		6665038	0					
ANR	6665294	Identifier	cquantize		6665038	0					
ANR	6665295	Identifier	sv_actual		6665038	1					
ANR	6665296	Identifier	total_colors		6665038	1					
ANR	6665297	Identifier	create_colormap		6665038	1					
ANR	6665298	ParameterList	j_decompress_ptr cinfo		6665038	2					
ANR	6665299	Parameter	j_decompress_ptr cinfo	274:17:11674:11695	6665038	0	True				
ANR	6665300	ParameterType	j_decompress_ptr		6665038	0					
ANR	6665301	Identifier	cinfo		6665038	1					
ANR	6665302	CFGEntryNode	ENTRY		6665038		True				
ANR	6665303	CFGExitNode	EXIT		6665038		True				
ANR	6665304	Symbol	total_colors		6665038						
ANR	6665305	Symbol	* * cinfo		6665038						
ANR	6665306	Symbol	blkdist		6665038						
ANR	6665307	Symbol	* cinfo -> mem -> alloc_sarray		6665038						
ANR	6665308	Symbol	* cquantize -> Ncolors		6665038						
ANR	6665309	Symbol	cquantize		6665038						
ANR	6665310	Symbol	* cquantize		6665038						
ANR	6665311	Symbol	* cinfo -> mem		6665038						
ANR	6665312	Symbol	* colormap		6665038						
ANR	6665313	Symbol	cquantize -> Ncolors		6665038						
ANR	6665314	Symbol	cquantize -> sv_colormap		6665038						
ANR	6665315	Symbol	nci		6665038						
ANR	6665316	Symbol	cinfo -> mem		6665038						
ANR	6665317	Symbol	cinfo -> out_color_components		6665038						
ANR	6665318	Symbol	* ptr		6665038						
ANR	6665319	Symbol	colormap		6665038						
ANR	6665320	Symbol	* cinfo		6665038						
ANR	6665321	Symbol	* * colormap		6665038						
ANR	6665322	Symbol	val		6665038						
ANR	6665323	Symbol	* * cinfo -> mem		6665038						
ANR	6665324	Symbol	* * i		6665038						
ANR	6665325	Symbol	JTRC_QUANT_NCOLORS		6665038						
ANR	6665326	Symbol	cquantize -> sv_actual		6665038						
ANR	6665327	Symbol	blksize		6665038						
ANR	6665328	Symbol	cinfo -> mem -> alloc_sarray		6665038						
ANR	6665329	Symbol	i		6665038						
ANR	6665330	Symbol	j		6665038						
ANR	6665331	Symbol	JPOOL_IMAGE		6665038						
ANR	6665332	Symbol	k		6665038						
ANR	6665333	Symbol	* * cquantize		6665038						
ANR	6665334	Symbol	ptr		6665038						
ANR	6665335	Symbol	cinfo -> cquantize		6665038						
ANR	6665336	Symbol	* i		6665038						
ANR	6665337	Symbol	cinfo		6665038						
ANR	6665338	Symbol	* k		6665038						
ANR	6665339	Symbol	* * * cinfo		6665038						
ANR	6665340	Symbol	JTRC_QUANT_3_NCOLORS		6665038						
ANR	6665341	Symbol	output_value		6665038						
ANR	6665342	Symbol	select_ncolors		6665038						
ANR	6665343	Function	create_colorindex	334:0:13796:15745							
ANR	6665344	FunctionDef	create_colorindex (j_decompress_ptr cinfo)		6665343	0					
ANR	6665345	CompoundStatement		335:0:13839:15745	6665343	0					
ANR	6665346	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	336:2:13843:13907	6665343	0	True				
ANR	6665347	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6665343	0					
ANR	6665348	IdentifierDeclType	my_cquantize_ptr		6665343	0					
ANR	6665349	Identifier	cquantize		6665343	1					
ANR	6665350	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6665343	2		=			
ANR	6665351	Identifier	cquantize		6665343	0					
ANR	6665352	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6665343	1					
ANR	6665353	CastTarget	my_cquantize_ptr		6665343	0					
ANR	6665354	PtrMemberAccess	cinfo -> cquantize		6665343	1					
ANR	6665355	Identifier	cinfo		6665343	0					
ANR	6665356	Identifier	cquantize		6665343	1					
ANR	6665357	IdentifierDeclStatement	JSAMPROW indexptr ;	337:2:13911:13928	6665343	1	True				
ANR	6665358	IdentifierDecl	indexptr		6665343	0					
ANR	6665359	IdentifierDeclType	JSAMPROW		6665343	0					
ANR	6665360	Identifier	indexptr		6665343	1					
ANR	6665361	IdentifierDeclStatement	"int i , j , k , nci , blksize , val , pad ;"	338:2:13932:13965	6665343	2	True				
ANR	6665362	IdentifierDecl	i		6665343	0					
ANR	6665363	IdentifierDeclType	int		6665343	0					
ANR	6665364	Identifier	i		6665343	1					
ANR	6665365	IdentifierDecl	j		6665343	1					
ANR	6665366	IdentifierDeclType	int		6665343	0					
ANR	6665367	Identifier	j		6665343	1					
ANR	6665368	IdentifierDecl	k		6665343	2					
ANR	6665369	IdentifierDeclType	int		6665343	0					
ANR	6665370	Identifier	k		6665343	1					
ANR	6665371	IdentifierDecl	nci		6665343	3					
ANR	6665372	IdentifierDeclType	int		6665343	0					
ANR	6665373	Identifier	nci		6665343	1					
ANR	6665374	IdentifierDecl	blksize		6665343	4					
ANR	6665375	IdentifierDeclType	int		6665343	0					
ANR	6665376	Identifier	blksize		6665343	1					
ANR	6665377	IdentifierDecl	val		6665343	5					
ANR	6665378	IdentifierDeclType	int		6665343	0					
ANR	6665379	Identifier	val		6665343	1					
ANR	6665380	IdentifierDecl	pad		6665343	6					
ANR	6665381	IdentifierDeclType	int		6665343	0					
ANR	6665382	Identifier	pad		6665343	1					
ANR	6665383	IfStatement	if ( cinfo -> dither_mode == JDITHER_ORDERED )		6665343	3					
ANR	6665384	Condition	cinfo -> dither_mode == JDITHER_ORDERED	345:6:14266:14302	6665343	0	True				
ANR	6665385	EqualityExpression	cinfo -> dither_mode == JDITHER_ORDERED		6665343	0		==			
ANR	6665386	PtrMemberAccess	cinfo -> dither_mode		6665343	0					
ANR	6665387	Identifier	cinfo		6665343	0					
ANR	6665388	Identifier	dither_mode		6665343	1					
ANR	6665389	Identifier	JDITHER_ORDERED		6665343	1					
ANR	6665390	CompoundStatement		11:45:465:465	6665343	1					
ANR	6665391	ExpressionStatement	pad = MAXJSAMPLE * 2	346:4:14311:14329	6665343	0	True				
ANR	6665392	AssignmentExpression	pad = MAXJSAMPLE * 2		6665343	0		=			
ANR	6665393	Identifier	pad		6665343	0					
ANR	6665394	MultiplicativeExpression	MAXJSAMPLE * 2		6665343	1		*			
ANR	6665395	Identifier	MAXJSAMPLE		6665343	0					
ANR	6665396	PrimaryExpression	2		6665343	1					
ANR	6665397	ExpressionStatement	cquantize -> is_padded = TRUE	347:4:14335:14362	6665343	1	True				
ANR	6665398	AssignmentExpression	cquantize -> is_padded = TRUE		6665343	0		=			
ANR	6665399	PtrMemberAccess	cquantize -> is_padded		6665343	0					
ANR	6665400	Identifier	cquantize		6665343	0					
ANR	6665401	Identifier	is_padded		6665343	1					
ANR	6665402	Identifier	TRUE		6665343	1					
ANR	6665403	ElseStatement	else		6665343	0					
ANR	6665404	CompoundStatement		14:9:533:533	6665343	0					
ANR	6665405	ExpressionStatement	pad = 0	349:4:14379:14386	6665343	0	True				
ANR	6665406	AssignmentExpression	pad = 0		6665343	0		=			
ANR	6665407	Identifier	pad		6665343	0					
ANR	6665408	PrimaryExpression	0		6665343	1					
ANR	6665409	ExpressionStatement	cquantize -> is_padded = FALSE	350:4:14392:14420	6665343	1	True				
ANR	6665410	AssignmentExpression	cquantize -> is_padded = FALSE		6665343	0		=			
ANR	6665411	PtrMemberAccess	cquantize -> is_padded		6665343	0					
ANR	6665412	Identifier	cquantize		6665343	0					
ANR	6665413	Identifier	is_padded		6665343	1					
ANR	6665414	Identifier	FALSE		6665343	1					
ANR	6665415	ExpressionStatement	"cquantize -> colorindex = ( * cinfo -> mem -> alloc_sarray ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( JDIMENSION ) ( MAXJSAMPLE + 1 + pad ) , ( JDIMENSION ) cinfo -> out_color_components )"	353:2:14429:14607	6665343	4	True				
ANR	6665416	AssignmentExpression	"cquantize -> colorindex = ( * cinfo -> mem -> alloc_sarray ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( JDIMENSION ) ( MAXJSAMPLE + 1 + pad ) , ( JDIMENSION ) cinfo -> out_color_components )"		6665343	0		=			
ANR	6665417	PtrMemberAccess	cquantize -> colorindex		6665343	0					
ANR	6665418	Identifier	cquantize		6665343	0					
ANR	6665419	Identifier	colorindex		6665343	1					
ANR	6665420	CallExpression	"( * cinfo -> mem -> alloc_sarray ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( JDIMENSION ) ( MAXJSAMPLE + 1 + pad ) , ( JDIMENSION ) cinfo -> out_color_components )"		6665343	1					
ANR	6665421	Callee	* cinfo -> mem -> alloc_sarray		6665343	0					
ANR	6665422	UnaryOperationExpression	* cinfo -> mem -> alloc_sarray		6665343	0					
ANR	6665423	UnaryOperator	*		6665343	0					
ANR	6665424	PtrMemberAccess	cinfo -> mem -> alloc_sarray		6665343	1					
ANR	6665425	PtrMemberAccess	cinfo -> mem		6665343	0					
ANR	6665426	Identifier	cinfo		6665343	0					
ANR	6665427	Identifier	mem		6665343	1					
ANR	6665428	Identifier	alloc_sarray		6665343	1					
ANR	6665429	ArgumentList	( j_common_ptr ) cinfo		6665343	1					
ANR	6665430	Argument	( j_common_ptr ) cinfo		6665343	0					
ANR	6665431	CastExpression	( j_common_ptr ) cinfo		6665343	0					
ANR	6665432	CastTarget	j_common_ptr		6665343	0					
ANR	6665433	Identifier	cinfo		6665343	1					
ANR	6665434	Argument	JPOOL_IMAGE		6665343	1					
ANR	6665435	Identifier	JPOOL_IMAGE		6665343	0					
ANR	6665436	Argument	( JDIMENSION ) ( MAXJSAMPLE + 1 + pad )		6665343	2					
ANR	6665437	CastExpression	( JDIMENSION ) ( MAXJSAMPLE + 1 + pad )		6665343	0					
ANR	6665438	CastTarget	JDIMENSION		6665343	0					
ANR	6665439	AdditiveExpression	MAXJSAMPLE + 1 + pad		6665343	1		+			
ANR	6665440	Identifier	MAXJSAMPLE		6665343	0					
ANR	6665441	AdditiveExpression	1 + pad		6665343	1		+			
ANR	6665442	PrimaryExpression	1		6665343	0					
ANR	6665443	Identifier	pad		6665343	1					
ANR	6665444	Argument	( JDIMENSION ) cinfo -> out_color_components		6665343	3					
ANR	6665445	CastExpression	( JDIMENSION ) cinfo -> out_color_components		6665343	0					
ANR	6665446	CastTarget	JDIMENSION		6665343	0					
ANR	6665447	PtrMemberAccess	cinfo -> out_color_components		6665343	1					
ANR	6665448	Identifier	cinfo		6665343	0					
ANR	6665449	Identifier	out_color_components		6665343	1					
ANR	6665450	ExpressionStatement	blksize = cquantize -> sv_actual	359:2:14683:14713	6665343	5	True				
ANR	6665451	AssignmentExpression	blksize = cquantize -> sv_actual		6665343	0		=			
ANR	6665452	Identifier	blksize		6665343	0					
ANR	6665453	PtrMemberAccess	cquantize -> sv_actual		6665343	1					
ANR	6665454	Identifier	cquantize		6665343	0					
ANR	6665455	Identifier	sv_actual		6665343	1					
ANR	6665456	ForStatement	for ( i = 0 ; i < cinfo -> out_color_components ; i ++ )		6665343	6					
ANR	6665457	ForInit	i = 0 ;	361:7:14723:14728	6665343	0	True				
ANR	6665458	AssignmentExpression	i = 0		6665343	0		=			
ANR	6665459	Identifier	i		6665343	0					
ANR	6665460	PrimaryExpression	0		6665343	1					
ANR	6665461	Condition	i < cinfo -> out_color_components	361:14:14730:14760	6665343	1	True				
ANR	6665462	RelationalExpression	i < cinfo -> out_color_components		6665343	0		<			
ANR	6665463	Identifier	i		6665343	0					
ANR	6665464	PtrMemberAccess	cinfo -> out_color_components		6665343	1					
ANR	6665465	Identifier	cinfo		6665343	0					
ANR	6665466	Identifier	out_color_components		6665343	1					
ANR	6665467	PostIncDecOperationExpression	i ++	361:47:14763:14765	6665343	2	True				
ANR	6665468	Identifier	i		6665343	0					
ANR	6665469	IncDec	++		6665343	1					
ANR	6665470	CompoundStatement		27:52:928:928	6665343	3					
ANR	6665471	ExpressionStatement	nci = cquantize -> Ncolors [ i ]	363:4:14836:14863	6665343	0	True				
ANR	6665472	AssignmentExpression	nci = cquantize -> Ncolors [ i ]		6665343	0		=			
ANR	6665473	Identifier	nci		6665343	0					
ANR	6665474	ArrayIndexing	cquantize -> Ncolors [ i ]		6665343	1					
ANR	6665475	PtrMemberAccess	cquantize -> Ncolors		6665343	0					
ANR	6665476	Identifier	cquantize		6665343	0					
ANR	6665477	Identifier	Ncolors		6665343	1					
ANR	6665478	Identifier	i		6665343	1					
ANR	6665479	ExpressionStatement	blksize = blksize / nci	364:4:14911:14934	6665343	1	True				
ANR	6665480	AssignmentExpression	blksize = blksize / nci		6665343	0		=			
ANR	6665481	Identifier	blksize		6665343	0					
ANR	6665482	MultiplicativeExpression	blksize / nci		6665343	1		/			
ANR	6665483	Identifier	blksize		6665343	0					
ANR	6665484	Identifier	nci		6665343	1					
ANR	6665485	IfStatement	if ( pad )		6665343	2					
ANR	6665486	Condition	pad	367:8:15022:15024	6665343	0	True				
ANR	6665487	Identifier	pad		6665343	0					
ANR	6665488	ExpressionStatement	cquantize -> colorindex [ i ] += MAXJSAMPLE	368:6:15033:15071	6665343	1	True				
ANR	6665489	AssignmentExpression	cquantize -> colorindex [ i ] += MAXJSAMPLE		6665343	0		+=			
ANR	6665490	ArrayIndexing	cquantize -> colorindex [ i ]		6665343	0					
ANR	6665491	PtrMemberAccess	cquantize -> colorindex		6665343	0					
ANR	6665492	Identifier	cquantize		6665343	0					
ANR	6665493	Identifier	colorindex		6665343	1					
ANR	6665494	Identifier	i		6665343	1					
ANR	6665495	Identifier	MAXJSAMPLE		6665343	1					
ANR	6665496	ExpressionStatement	indexptr = cquantize -> colorindex [ i ]	372:4:15187:15222	6665343	3	True				
ANR	6665497	AssignmentExpression	indexptr = cquantize -> colorindex [ i ]		6665343	0		=			
ANR	6665498	Identifier	indexptr		6665343	0					
ANR	6665499	ArrayIndexing	cquantize -> colorindex [ i ]		6665343	1					
ANR	6665500	PtrMemberAccess	cquantize -> colorindex		6665343	0					
ANR	6665501	Identifier	cquantize		6665343	0					
ANR	6665502	Identifier	colorindex		6665343	1					
ANR	6665503	Identifier	i		6665343	1					
ANR	6665504	ExpressionStatement	val = 0	373:4:15228:15235	6665343	4	True				
ANR	6665505	AssignmentExpression	val = 0		6665343	0		=			
ANR	6665506	Identifier	val		6665343	0					
ANR	6665507	PrimaryExpression	0		6665343	1					
ANR	6665508	ExpressionStatement	"k = largest_input_value ( cinfo , i , 0 , nci - 1 )"	374:4:15241:15284	6665343	5	True				
ANR	6665509	AssignmentExpression	"k = largest_input_value ( cinfo , i , 0 , nci - 1 )"		6665343	0		=			
ANR	6665510	Identifier	k		6665343	0					
ANR	6665511	CallExpression	"largest_input_value ( cinfo , i , 0 , nci - 1 )"		6665343	1					
ANR	6665512	Callee	largest_input_value		6665343	0					
ANR	6665513	Identifier	largest_input_value		6665343	0					
ANR	6665514	ArgumentList	cinfo		6665343	1					
ANR	6665515	Argument	cinfo		6665343	0					
ANR	6665516	Identifier	cinfo		6665343	0					
ANR	6665517	Argument	i		6665343	1					
ANR	6665518	Identifier	i		6665343	0					
ANR	6665519	Argument	0		6665343	2					
ANR	6665520	PrimaryExpression	0		6665343	0					
ANR	6665521	Argument	nci - 1		6665343	3					
ANR	6665522	AdditiveExpression	nci - 1		6665343	0		-			
ANR	6665523	Identifier	nci		6665343	0					
ANR	6665524	PrimaryExpression	1		6665343	1					
ANR	6665525	ForStatement	for ( j = 0 ; j <= MAXJSAMPLE ; j ++ )		6665343	6					
ANR	6665526	ForInit	j = 0 ;	375:9:15295:15300	6665343	0	True				
ANR	6665527	AssignmentExpression	j = 0		6665343	0		=			
ANR	6665528	Identifier	j		6665343	0					
ANR	6665529	PrimaryExpression	0		6665343	1					
ANR	6665530	Condition	j <= MAXJSAMPLE	375:16:15302:15316	6665343	1	True				
ANR	6665531	RelationalExpression	j <= MAXJSAMPLE		6665343	0		<=			
ANR	6665532	Identifier	j		6665343	0					
ANR	6665533	Identifier	MAXJSAMPLE		6665343	1					
ANR	6665534	PostIncDecOperationExpression	j ++	375:33:15319:15321	6665343	2	True				
ANR	6665535	Identifier	j		6665343	0					
ANR	6665536	IncDec	++		6665343	1					
ANR	6665537	CompoundStatement		41:38:1484:1484	6665343	3					
ANR	6665538	WhileStatement	while ( j > k )		6665343	0					
ANR	6665539	Condition	j > k	376:13:15339:15343	6665343	0	True				
ANR	6665540	RelationalExpression	j > k		6665343	0		>			
ANR	6665541	Identifier	j		6665343	0					
ANR	6665542	Identifier	k		6665343	1					
ANR	6665543	ExpressionStatement	"k = largest_input_value ( cinfo , i , ++ val , nci - 1 )"	377:1:15383:15430	6665343	1	True				
ANR	6665544	AssignmentExpression	"k = largest_input_value ( cinfo , i , ++ val , nci - 1 )"		6665343	0		=			
ANR	6665545	Identifier	k		6665343	0					
ANR	6665546	CallExpression	"largest_input_value ( cinfo , i , ++ val , nci - 1 )"		6665343	1					
ANR	6665547	Callee	largest_input_value		6665343	0					
ANR	6665548	Identifier	largest_input_value		6665343	0					
ANR	6665549	ArgumentList	cinfo		6665343	1					
ANR	6665550	Argument	cinfo		6665343	0					
ANR	6665551	Identifier	cinfo		6665343	0					
ANR	6665552	Argument	i		6665343	1					
ANR	6665553	Identifier	i		6665343	0					
ANR	6665554	Argument	++ val		6665343	2					
ANR	6665555	UnaryExpression	++ val		6665343	0					
ANR	6665556	IncDec	++		6665343	0					
ANR	6665557	Identifier	val		6665343	1					
ANR	6665558	Argument	nci - 1		6665343	3					
ANR	6665559	AdditiveExpression	nci - 1		6665343	0		-			
ANR	6665560	Identifier	nci		6665343	0					
ANR	6665561	PrimaryExpression	1		6665343	1					
ANR	6665562	ExpressionStatement	indexptr [ j ] = ( JSAMPLE ) ( val * blksize )	379:6:15514:15553	6665343	1	True				
ANR	6665563	AssignmentExpression	indexptr [ j ] = ( JSAMPLE ) ( val * blksize )		6665343	0		=			
ANR	6665564	ArrayIndexing	indexptr [ j ]		6665343	0					
ANR	6665565	Identifier	indexptr		6665343	0					
ANR	6665566	Identifier	j		6665343	1					
ANR	6665567	CastExpression	( JSAMPLE ) ( val * blksize )		6665343	1					
ANR	6665568	CastTarget	JSAMPLE		6665343	0					
ANR	6665569	MultiplicativeExpression	val * blksize		6665343	1		*			
ANR	6665570	Identifier	val		6665343	0					
ANR	6665571	Identifier	blksize		6665343	1					
ANR	6665572	IfStatement	if ( pad )		6665343	7					
ANR	6665573	Condition	pad	382:8:15609:15611	6665343	0	True				
ANR	6665574	Identifier	pad		6665343	0					
ANR	6665575	ForStatement	for ( j = 1 ; j <= MAXJSAMPLE ; j ++ )		6665343	1					
ANR	6665576	ForInit	j = 1 ;	383:11:15625:15630	6665343	0	True				
ANR	6665577	AssignmentExpression	j = 1		6665343	0		=			
ANR	6665578	Identifier	j		6665343	0					
ANR	6665579	PrimaryExpression	1		6665343	1					
ANR	6665580	Condition	j <= MAXJSAMPLE	383:18:15632:15646	6665343	1	True				
ANR	6665581	RelationalExpression	j <= MAXJSAMPLE		6665343	0		<=			
ANR	6665582	Identifier	j		6665343	0					
ANR	6665583	Identifier	MAXJSAMPLE		6665343	1					
ANR	6665584	PostIncDecOperationExpression	j ++	383:35:15649:15651	6665343	2	True				
ANR	6665585	Identifier	j		6665343	0					
ANR	6665586	IncDec	++		6665343	1					
ANR	6665587	CompoundStatement		49:40:1814:1814	6665343	3					
ANR	6665588	ExpressionStatement	indexptr [ - j ] = indexptr [ 0 ]	384:1:15657:15683	6665343	0	True				
ANR	6665589	AssignmentExpression	indexptr [ - j ] = indexptr [ 0 ]		6665343	0		=			
ANR	6665590	ArrayIndexing	indexptr [ - j ]		6665343	0					
ANR	6665591	Identifier	indexptr		6665343	0					
ANR	6665592	UnaryOperationExpression	- j		6665343	1					
ANR	6665593	UnaryOperator	-		6665343	0					
ANR	6665594	Identifier	j		6665343	1					
ANR	6665595	ArrayIndexing	indexptr [ 0 ]		6665343	1					
ANR	6665596	Identifier	indexptr		6665343	0					
ANR	6665597	PrimaryExpression	0		6665343	1					
ANR	6665598	ExpressionStatement	indexptr [ MAXJSAMPLE + j ] = indexptr [ MAXJSAMPLE ]	385:1:15686:15731	6665343	1	True				
ANR	6665599	AssignmentExpression	indexptr [ MAXJSAMPLE + j ] = indexptr [ MAXJSAMPLE ]		6665343	0		=			
ANR	6665600	ArrayIndexing	indexptr [ MAXJSAMPLE + j ]		6665343	0					
ANR	6665601	Identifier	indexptr		6665343	0					
ANR	6665602	AdditiveExpression	MAXJSAMPLE + j		6665343	1		+			
ANR	6665603	Identifier	MAXJSAMPLE		6665343	0					
ANR	6665604	Identifier	j		6665343	1					
ANR	6665605	ArrayIndexing	indexptr [ MAXJSAMPLE ]		6665343	1					
ANR	6665606	Identifier	indexptr		6665343	0					
ANR	6665607	Identifier	MAXJSAMPLE		6665343	1					
ANR	6665608	Identifier	create_colorindex		6665343	1					
ANR	6665609	ParameterList	j_decompress_ptr cinfo		6665343	2					
ANR	6665610	Parameter	j_decompress_ptr cinfo	334:19:13815:13836	6665343	0	True				
ANR	6665611	ParameterType	j_decompress_ptr		6665343	0					
ANR	6665612	Identifier	cinfo		6665343	1					
ANR	6665613	CFGEntryNode	ENTRY		6665343		True				
ANR	6665614	CFGExitNode	EXIT		6665343		True				
ANR	6665615	Symbol	* * cinfo		6665343						
ANR	6665616	Symbol	* cinfo -> mem -> alloc_sarray		6665343						
ANR	6665617	Symbol	* cquantize -> Ncolors		6665343						
ANR	6665618	Symbol	cquantize		6665343						
ANR	6665619	Symbol	* cquantize		6665343						
ANR	6665620	Symbol	* cinfo -> mem		6665343						
ANR	6665621	Symbol	JDITHER_ORDERED		6665343						
ANR	6665622	Symbol	pad		6665343						
ANR	6665623	Symbol	cquantize -> Ncolors		6665343						
ANR	6665624	Symbol	nci		6665343						
ANR	6665625	Symbol	cinfo -> mem		6665343						
ANR	6665626	Symbol	largest_input_value		6665343						
ANR	6665627	Symbol	cinfo -> out_color_components		6665343						
ANR	6665628	Symbol	cquantize -> colorindex		6665343						
ANR	6665629	Symbol	* indexptr		6665343						
ANR	6665630	Symbol	* cinfo		6665343						
ANR	6665631	Symbol	val		6665343						
ANR	6665632	Symbol	* * cinfo -> mem		6665343						
ANR	6665633	Symbol	cquantize -> sv_actual		6665343						
ANR	6665634	Symbol	blksize		6665343						
ANR	6665635	Symbol	cinfo -> mem -> alloc_sarray		6665343						
ANR	6665636	Symbol	* MAXJSAMPLE		6665343						
ANR	6665637	Symbol	indexptr		6665343						
ANR	6665638	Symbol	i		6665343						
ANR	6665639	Symbol	TRUE		6665343						
ANR	6665640	Symbol	j		6665343						
ANR	6665641	Symbol	cquantize -> is_padded		6665343						
ANR	6665642	Symbol	JPOOL_IMAGE		6665343						
ANR	6665643	Symbol	k		6665343						
ANR	6665644	Symbol	* * cquantize		6665343						
ANR	6665645	Symbol	cinfo -> dither_mode		6665343						
ANR	6665646	Symbol	cinfo -> cquantize		6665343						
ANR	6665647	Symbol	* i		6665343						
ANR	6665648	Symbol	* j		6665343						
ANR	6665649	Symbol	cinfo		6665343						
ANR	6665650	Symbol	MAXJSAMPLE		6665343						
ANR	6665651	Symbol	* * * cinfo		6665343						
ANR	6665652	Symbol	FALSE		6665343						
ANR	6665653	Symbol	* cquantize -> colorindex		6665343						
ANR	6665654	Function	make_odither_array	397:0:15875:16851							
ANR	6665655	FunctionDef	"make_odither_array (j_decompress_ptr cinfo , int ncolors)"		6665654	0					
ANR	6665656	CompoundStatement		398:0:15932:16851	6665654	0					
ANR	6665657	IdentifierDeclStatement	ODITHER_MATRIX_PTR odither ;	399:2:15936:15962	6665654	0	True				
ANR	6665658	IdentifierDecl	odither		6665654	0					
ANR	6665659	IdentifierDeclType	ODITHER_MATRIX_PTR		6665654	0					
ANR	6665660	Identifier	odither		6665654	1					
ANR	6665661	IdentifierDeclStatement	"int j , k ;"	400:2:15966:15973	6665654	1	True				
ANR	6665662	IdentifierDecl	j		6665654	0					
ANR	6665663	IdentifierDeclType	int		6665654	0					
ANR	6665664	Identifier	j		6665654	1					
ANR	6665665	IdentifierDecl	k		6665654	1					
ANR	6665666	IdentifierDeclType	int		6665654	0					
ANR	6665667	Identifier	k		6665654	1					
ANR	6665668	IdentifierDeclStatement	"INT32 num , den ;"	401:2:15977:15990	6665654	2	True				
ANR	6665669	IdentifierDecl	num		6665654	0					
ANR	6665670	IdentifierDeclType	INT32		6665654	0					
ANR	6665671	Identifier	num		6665654	1					
ANR	6665672	IdentifierDecl	den		6665654	1					
ANR	6665673	IdentifierDeclType	INT32		6665654	0					
ANR	6665674	Identifier	den		6665654	1					
ANR	6665675	ExpressionStatement	"odither = ( ODITHER_MATRIX_PTR ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , SIZEOF ( ODITHER_MATRIX ) )"	403:2:15995:16120	6665654	3	True				
ANR	6665676	AssignmentExpression	"odither = ( ODITHER_MATRIX_PTR ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , SIZEOF ( ODITHER_MATRIX ) )"		6665654	0		=			
ANR	6665677	Identifier	odither		6665654	0					
ANR	6665678	CastExpression	"( ODITHER_MATRIX_PTR ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , SIZEOF ( ODITHER_MATRIX ) )"		6665654	1					
ANR	6665679	CastTarget	ODITHER_MATRIX_PTR		6665654	0					
ANR	6665680	CallExpression	"( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , SIZEOF ( ODITHER_MATRIX ) )"		6665654	1					
ANR	6665681	Callee	* cinfo -> mem -> alloc_small		6665654	0					
ANR	6665682	UnaryOperationExpression	* cinfo -> mem -> alloc_small		6665654	0					
ANR	6665683	UnaryOperator	*		6665654	0					
ANR	6665684	PtrMemberAccess	cinfo -> mem -> alloc_small		6665654	1					
ANR	6665685	PtrMemberAccess	cinfo -> mem		6665654	0					
ANR	6665686	Identifier	cinfo		6665654	0					
ANR	6665687	Identifier	mem		6665654	1					
ANR	6665688	Identifier	alloc_small		6665654	1					
ANR	6665689	ArgumentList	( j_common_ptr ) cinfo		6665654	1					
ANR	6665690	Argument	( j_common_ptr ) cinfo		6665654	0					
ANR	6665691	CastExpression	( j_common_ptr ) cinfo		6665654	0					
ANR	6665692	CastTarget	j_common_ptr		6665654	0					
ANR	6665693	Identifier	cinfo		6665654	1					
ANR	6665694	Argument	JPOOL_IMAGE		6665654	1					
ANR	6665695	Identifier	JPOOL_IMAGE		6665654	0					
ANR	6665696	Argument	SIZEOF ( ODITHER_MATRIX )		6665654	2					
ANR	6665697	CallExpression	SIZEOF ( ODITHER_MATRIX )		6665654	0					
ANR	6665698	Callee	SIZEOF		6665654	0					
ANR	6665699	Identifier	SIZEOF		6665654	0					
ANR	6665700	ArgumentList	ODITHER_MATRIX		6665654	1					
ANR	6665701	Argument	ODITHER_MATRIX		6665654	0					
ANR	6665702	Identifier	ODITHER_MATRIX		6665654	0					
ANR	6665703	ExpressionStatement	den = 2 * ODITHER_CELLS * ( ( INT32 ) ( ncolors - 1 ) )	411:2:16394:16443	6665654	4	True				
ANR	6665704	AssignmentExpression	den = 2 * ODITHER_CELLS * ( ( INT32 ) ( ncolors - 1 ) )		6665654	0		=			
ANR	6665705	Identifier	den		6665654	0					
ANR	6665706	MultiplicativeExpression	2 * ODITHER_CELLS * ( ( INT32 ) ( ncolors - 1 ) )		6665654	1		*			
ANR	6665707	PrimaryExpression	2		6665654	0					
ANR	6665708	MultiplicativeExpression	ODITHER_CELLS * ( ( INT32 ) ( ncolors - 1 ) )		6665654	1		*			
ANR	6665709	Identifier	ODITHER_CELLS		6665654	0					
ANR	6665710	CastExpression	( INT32 ) ( ncolors - 1 )		6665654	1					
ANR	6665711	CastTarget	INT32		6665654	0					
ANR	6665712	AdditiveExpression	ncolors - 1		6665654	1		-			
ANR	6665713	Identifier	ncolors		6665654	0					
ANR	6665714	PrimaryExpression	1		6665654	1					
ANR	6665715	ForStatement	for ( j = 0 ; j < ODITHER_SIZE ; j ++ )		6665654	5					
ANR	6665716	ForInit	j = 0 ;	412:7:16452:16457	6665654	0	True				
ANR	6665717	AssignmentExpression	j = 0		6665654	0		=			
ANR	6665718	Identifier	j		6665654	0					
ANR	6665719	PrimaryExpression	0		6665654	1					
ANR	6665720	Condition	j < ODITHER_SIZE	412:14:16459:16474	6665654	1	True				
ANR	6665721	RelationalExpression	j < ODITHER_SIZE		6665654	0		<			
ANR	6665722	Identifier	j		6665654	0					
ANR	6665723	Identifier	ODITHER_SIZE		6665654	1					
ANR	6665724	PostIncDecOperationExpression	j ++	412:32:16477:16479	6665654	2	True				
ANR	6665725	Identifier	j		6665654	0					
ANR	6665726	IncDec	++		6665654	1					
ANR	6665727	CompoundStatement		15:37:549:549	6665654	3					
ANR	6665728	ForStatement	for ( k = 0 ; k < ODITHER_SIZE ; k ++ )		6665654	0					
ANR	6665729	ForInit	k = 0 ;	413:9:16493:16498	6665654	0	True				
ANR	6665730	AssignmentExpression	k = 0		6665654	0		=			
ANR	6665731	Identifier	k		6665654	0					
ANR	6665732	PrimaryExpression	0		6665654	1					
ANR	6665733	Condition	k < ODITHER_SIZE	413:16:16500:16515	6665654	1	True				
ANR	6665734	RelationalExpression	k < ODITHER_SIZE		6665654	0		<			
ANR	6665735	Identifier	k		6665654	0					
ANR	6665736	Identifier	ODITHER_SIZE		6665654	1					
ANR	6665737	PostIncDecOperationExpression	k ++	413:34:16518:16520	6665654	2	True				
ANR	6665738	Identifier	k		6665654	0					
ANR	6665739	IncDec	++		6665654	1					
ANR	6665740	CompoundStatement		16:39:590:590	6665654	3					
ANR	6665741	ExpressionStatement	num = ( ( INT32 ) ( ODITHER_CELLS - 1 - 2 * ( ( int ) base_dither_matrix [ j ] [ k ] ) ) ) * MAXJSAMPLE	414:6:16531:16618	6665654	0	True				
ANR	6665742	AssignmentExpression	num = ( ( INT32 ) ( ODITHER_CELLS - 1 - 2 * ( ( int ) base_dither_matrix [ j ] [ k ] ) ) ) * MAXJSAMPLE		6665654	0		=			
ANR	6665743	Identifier	num		6665654	0					
ANR	6665744	MultiplicativeExpression	( ( INT32 ) ( ODITHER_CELLS - 1 - 2 * ( ( int ) base_dither_matrix [ j ] [ k ] ) ) ) * MAXJSAMPLE		6665654	1		*			
ANR	6665745	CastExpression	( INT32 ) ( ODITHER_CELLS - 1 - 2 * ( ( int ) base_dither_matrix [ j ] [ k ] ) )		6665654	0					
ANR	6665746	CastTarget	INT32		6665654	0					
ANR	6665747	AdditiveExpression	ODITHER_CELLS - 1 - 2 * ( ( int ) base_dither_matrix [ j ] [ k ] )		6665654	1		-			
ANR	6665748	Identifier	ODITHER_CELLS		6665654	0					
ANR	6665749	AdditiveExpression	1 - 2 * ( ( int ) base_dither_matrix [ j ] [ k ] )		6665654	1		-			
ANR	6665750	PrimaryExpression	1		6665654	0					
ANR	6665751	MultiplicativeExpression	2 * ( ( int ) base_dither_matrix [ j ] [ k ] )		6665654	1		*			
ANR	6665752	PrimaryExpression	2		6665654	0					
ANR	6665753	CastExpression	( int ) base_dither_matrix [ j ] [ k ]		6665654	1					
ANR	6665754	CastTarget	int		6665654	0					
ANR	6665755	ArrayIndexing	base_dither_matrix [ j ] [ k ]		6665654	1					
ANR	6665756	ArrayIndexing	base_dither_matrix [ j ]		6665654	0					
ANR	6665757	Identifier	base_dither_matrix		6665654	0					
ANR	6665758	Identifier	j		6665654	1					
ANR	6665759	Identifier	k		6665654	1					
ANR	6665760	Identifier	MAXJSAMPLE		6665654	1					
ANR	6665761	ExpressionStatement	odither [ j ] [ k ] = ( int ) ( num < 0 ? - ( ( - num ) / den ) : num / den )	419:6:16766:16821	6665654	1	True				
ANR	6665762	AssignmentExpression	odither [ j ] [ k ] = ( int ) ( num < 0 ? - ( ( - num ) / den ) : num / den )		6665654	0		=			
ANR	6665763	ArrayIndexing	odither [ j ] [ k ]		6665654	0					
ANR	6665764	ArrayIndexing	odither [ j ]		6665654	0					
ANR	6665765	Identifier	odither		6665654	0					
ANR	6665766	Identifier	j		6665654	1					
ANR	6665767	Identifier	k		6665654	1					
ANR	6665768	CastExpression	( int ) ( num < 0 ? - ( ( - num ) / den ) : num / den )		6665654	1					
ANR	6665769	CastTarget	int		6665654	0					
ANR	6665770	ConditionalExpression	num < 0 ? - ( ( - num ) / den ) : num / den		6665654	1					
ANR	6665771	Condition	num < 0		6665654	0					
ANR	6665772	RelationalExpression	num < 0		6665654	0		<			
ANR	6665773	Identifier	num		6665654	0					
ANR	6665774	PrimaryExpression	0		6665654	1					
ANR	6665775	UnaryOperationExpression	- ( ( - num ) / den )		6665654	1					
ANR	6665776	UnaryOperator	-		6665654	0					
ANR	6665777	MultiplicativeExpression	( - num ) / den		6665654	1		/			
ANR	6665778	UnaryOperationExpression	- num		6665654	0					
ANR	6665779	UnaryOperator	-		6665654	0					
ANR	6665780	Identifier	num		6665654	1					
ANR	6665781	Identifier	den		6665654	1					
ANR	6665782	MultiplicativeExpression	num / den		6665654	2		/			
ANR	6665783	Identifier	num		6665654	0					
ANR	6665784	Identifier	den		6665654	1					
ANR	6665785	ReturnStatement	return odither ;	422:2:16835:16849	6665654	6	True				
ANR	6665786	Identifier	odither		6665654	0					
ANR	6665787	Identifier	make_odither_array		6665654	1					
ANR	6665788	ParameterList	"j_decompress_ptr cinfo , int ncolors"		6665654	2					
ANR	6665789	Parameter	j_decompress_ptr cinfo	397:20:15895:15916	6665654	0	True				
ANR	6665790	ParameterType	j_decompress_ptr		6665654	0					
ANR	6665791	Identifier	cinfo		6665654	1					
ANR	6665792	Parameter	int ncolors	397:44:15919:15929	6665654	1	True				
ANR	6665793	ParameterType	int		6665654	0					
ANR	6665794	Identifier	ncolors		6665654	1					
ANR	6665795	CFGEntryNode	ENTRY		6665654		True				
ANR	6665796	CFGExitNode	EXIT		6665654		True				
ANR	6665797	Symbol	* * cinfo		6665654						
ANR	6665798	Symbol	num		6665654						
ANR	6665799	Symbol	SIZEOF		6665654						
ANR	6665800	Symbol	* odither		6665654						
ANR	6665801	Symbol	den		6665654						
ANR	6665802	Symbol	* cinfo -> mem		6665654						
ANR	6665803	Symbol	cinfo -> mem		6665654						
ANR	6665804	Symbol	* cinfo -> mem -> alloc_small		6665654						
ANR	6665805	Symbol	* cinfo		6665654						
ANR	6665806	Symbol	* * odither		6665654						
ANR	6665807	Symbol	* * cinfo -> mem		6665654						
ANR	6665808	Symbol	* * j		6665654						
ANR	6665809	Symbol	odither		6665654						
ANR	6665810	Symbol	ODITHER_SIZE		6665654						
ANR	6665811	Symbol	cinfo -> mem -> alloc_small		6665654						
ANR	6665812	Symbol	j		6665654						
ANR	6665813	Symbol	JPOOL_IMAGE		6665654						
ANR	6665814	Symbol	k		6665654						
ANR	6665815	Symbol	ODITHER_CELLS		6665654						
ANR	6665816	Symbol	base_dither_matrix		6665654						
ANR	6665817	Symbol	* * base_dither_matrix		6665654						
ANR	6665818	Symbol	ncolors		6665654						
ANR	6665819	Symbol	* j		6665654						
ANR	6665820	Symbol	cinfo		6665654						
ANR	6665821	Symbol	* k		6665654						
ANR	6665822	Symbol	MAXJSAMPLE		6665654						
ANR	6665823	Symbol	* * * cinfo		6665654						
ANR	6665824	Symbol	ODITHER_MATRIX		6665654						
ANR	6665825	Symbol	* base_dither_matrix		6665654						
ANR	6665826	Function	create_odither_tables	433:0:17004:17627							
ANR	6665827	FunctionDef	create_odither_tables (j_decompress_ptr cinfo)		6665826	0					
ANR	6665828	CompoundStatement		434:0:17051:17627	6665826	0					
ANR	6665829	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	435:2:17055:17119	6665826	0	True				
ANR	6665830	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6665826	0					
ANR	6665831	IdentifierDeclType	my_cquantize_ptr		6665826	0					
ANR	6665832	Identifier	cquantize		6665826	1					
ANR	6665833	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6665826	2		=			
ANR	6665834	Identifier	cquantize		6665826	0					
ANR	6665835	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6665826	1					
ANR	6665836	CastTarget	my_cquantize_ptr		6665826	0					
ANR	6665837	PtrMemberAccess	cinfo -> cquantize		6665826	1					
ANR	6665838	Identifier	cinfo		6665826	0					
ANR	6665839	Identifier	cquantize		6665826	1					
ANR	6665840	IdentifierDeclStatement	ODITHER_MATRIX_PTR odither ;	436:2:17123:17149	6665826	1	True				
ANR	6665841	IdentifierDecl	odither		6665826	0					
ANR	6665842	IdentifierDeclType	ODITHER_MATRIX_PTR		6665826	0					
ANR	6665843	Identifier	odither		6665826	1					
ANR	6665844	IdentifierDeclStatement	"int i , j , nci ;"	437:2:17153:17166	6665826	2	True				
ANR	6665845	IdentifierDecl	i		6665826	0					
ANR	6665846	IdentifierDeclType	int		6665826	0					
ANR	6665847	Identifier	i		6665826	1					
ANR	6665848	IdentifierDecl	j		6665826	1					
ANR	6665849	IdentifierDeclType	int		6665826	0					
ANR	6665850	Identifier	j		6665826	1					
ANR	6665851	IdentifierDecl	nci		6665826	2					
ANR	6665852	IdentifierDeclType	int		6665826	0					
ANR	6665853	Identifier	nci		6665826	1					
ANR	6665854	ForStatement	for ( i = 0 ; i < cinfo -> out_color_components ; i ++ )		6665826	3					
ANR	6665855	ForInit	i = 0 ;	439:7:17176:17181	6665826	0	True				
ANR	6665856	AssignmentExpression	i = 0		6665826	0		=			
ANR	6665857	Identifier	i		6665826	0					
ANR	6665858	PrimaryExpression	0		6665826	1					
ANR	6665859	Condition	i < cinfo -> out_color_components	439:14:17183:17213	6665826	1	True				
ANR	6665860	RelationalExpression	i < cinfo -> out_color_components		6665826	0		<			
ANR	6665861	Identifier	i		6665826	0					
ANR	6665862	PtrMemberAccess	cinfo -> out_color_components		6665826	1					
ANR	6665863	Identifier	cinfo		6665826	0					
ANR	6665864	Identifier	out_color_components		6665826	1					
ANR	6665865	PostIncDecOperationExpression	i ++	439:47:17216:17218	6665826	2	True				
ANR	6665866	Identifier	i		6665826	0					
ANR	6665867	IncDec	++		6665826	1					
ANR	6665868	CompoundStatement		6:52:169:169	6665826	3					
ANR	6665869	ExpressionStatement	nci = cquantize -> Ncolors [ i ]	440:4:17227:17254	6665826	0	True				
ANR	6665870	AssignmentExpression	nci = cquantize -> Ncolors [ i ]		6665826	0		=			
ANR	6665871	Identifier	nci		6665826	0					
ANR	6665872	ArrayIndexing	cquantize -> Ncolors [ i ]		6665826	1					
ANR	6665873	PtrMemberAccess	cquantize -> Ncolors		6665826	0					
ANR	6665874	Identifier	cquantize		6665826	0					
ANR	6665875	Identifier	Ncolors		6665826	1					
ANR	6665876	Identifier	i		6665826	1					
ANR	6665877	ExpressionStatement	odither = NULL	441:4:17302:17316	6665826	1	True				
ANR	6665878	AssignmentExpression	odither = NULL		6665826	0		=			
ANR	6665879	Identifier	odither		6665826	0					
ANR	6665880	Identifier	NULL		6665826	1					
ANR	6665881	ForStatement	for ( j = 0 ; j < i ; j ++ )		6665826	2					
ANR	6665882	ForInit	j = 0 ;	442:9:17370:17375	6665826	0	True				
ANR	6665883	AssignmentExpression	j = 0		6665826	0		=			
ANR	6665884	Identifier	j		6665826	0					
ANR	6665885	PrimaryExpression	0		6665826	1					
ANR	6665886	Condition	j < i	442:16:17377:17381	6665826	1	True				
ANR	6665887	RelationalExpression	j < i		6665826	0		<			
ANR	6665888	Identifier	j		6665826	0					
ANR	6665889	Identifier	i		6665826	1					
ANR	6665890	PostIncDecOperationExpression	j ++	442:23:17384:17386	6665826	2	True				
ANR	6665891	Identifier	j		6665826	0					
ANR	6665892	IncDec	++		6665826	1					
ANR	6665893	CompoundStatement		9:28:337:337	6665826	3					
ANR	6665894	IfStatement	if ( nci == cquantize -> Ncolors [ j ] )		6665826	0					
ANR	6665895	Condition	nci == cquantize -> Ncolors [ j ]	443:10:17401:17428	6665826	0	True				
ANR	6665896	EqualityExpression	nci == cquantize -> Ncolors [ j ]		6665826	0		==			
ANR	6665897	Identifier	nci		6665826	0					
ANR	6665898	ArrayIndexing	cquantize -> Ncolors [ j ]		6665826	1					
ANR	6665899	PtrMemberAccess	cquantize -> Ncolors		6665826	0					
ANR	6665900	Identifier	cquantize		6665826	0					
ANR	6665901	Identifier	Ncolors		6665826	1					
ANR	6665902	Identifier	j		6665826	1					
ANR	6665903	CompoundStatement		10:40:379:379	6665826	1					
ANR	6665904	ExpressionStatement	odither = cquantize -> odither [ j ]	444:1:17434:17465	6665826	0	True				
ANR	6665905	AssignmentExpression	odither = cquantize -> odither [ j ]		6665826	0		=			
ANR	6665906	Identifier	odither		6665826	0					
ANR	6665907	ArrayIndexing	cquantize -> odither [ j ]		6665826	1					
ANR	6665908	PtrMemberAccess	cquantize -> odither		6665826	0					
ANR	6665909	Identifier	cquantize		6665826	0					
ANR	6665910	Identifier	odither		6665826	1					
ANR	6665911	Identifier	j		6665826	1					
ANR	6665912	BreakStatement	break ;	445:1:17468:17473	6665826	1	True				
ANR	6665913	IfStatement	if ( odither == NULL )		6665826	3					
ANR	6665914	Condition	odither == NULL	448:8:17497:17511	6665826	0	True				
ANR	6665915	EqualityExpression	odither == NULL		6665826	0		==			
ANR	6665916	Identifier	odither		6665826	0					
ANR	6665917	Identifier	NULL		6665826	1					
ANR	6665918	ExpressionStatement	"odither = make_odither_array ( cinfo , nci )"	449:6:17544:17584	6665826	1	True				
ANR	6665919	AssignmentExpression	"odither = make_odither_array ( cinfo , nci )"		6665826	0		=			
ANR	6665920	Identifier	odither		6665826	0					
ANR	6665921	CallExpression	"make_odither_array ( cinfo , nci )"		6665826	1					
ANR	6665922	Callee	make_odither_array		6665826	0					
ANR	6665923	Identifier	make_odither_array		6665826	0					
ANR	6665924	ArgumentList	cinfo		6665826	1					
ANR	6665925	Argument	cinfo		6665826	0					
ANR	6665926	Identifier	cinfo		6665826	0					
ANR	6665927	Argument	nci		6665826	1					
ANR	6665928	Identifier	nci		6665826	0					
ANR	6665929	ExpressionStatement	cquantize -> odither [ i ] = odither	450:4:17590:17621	6665826	4	True				
ANR	6665930	AssignmentExpression	cquantize -> odither [ i ] = odither		6665826	0		=			
ANR	6665931	ArrayIndexing	cquantize -> odither [ i ]		6665826	0					
ANR	6665932	PtrMemberAccess	cquantize -> odither		6665826	0					
ANR	6665933	Identifier	cquantize		6665826	0					
ANR	6665934	Identifier	odither		6665826	1					
ANR	6665935	Identifier	i		6665826	1					
ANR	6665936	Identifier	odither		6665826	1					
ANR	6665937	Identifier	create_odither_tables		6665826	1					
ANR	6665938	ParameterList	j_decompress_ptr cinfo		6665826	2					
ANR	6665939	Parameter	j_decompress_ptr cinfo	433:23:17027:17048	6665826	0	True				
ANR	6665940	ParameterType	j_decompress_ptr		6665826	0					
ANR	6665941	Identifier	cinfo		6665826	1					
ANR	6665942	CFGEntryNode	ENTRY		6665826		True				
ANR	6665943	CFGExitNode	EXIT		6665826		True				
ANR	6665944	Symbol	* cquantize -> odither		6665826						
ANR	6665945	Symbol	odither		6665826						
ANR	6665946	Symbol	NULL		6665826						
ANR	6665947	Symbol	i		6665826						
ANR	6665948	Symbol	* cquantize -> Ncolors		6665826						
ANR	6665949	Symbol	cquantize -> odither		6665826						
ANR	6665950	Symbol	j		6665826						
ANR	6665951	Symbol	cquantize		6665826						
ANR	6665952	Symbol	* cquantize		6665826						
ANR	6665953	Symbol	* * cquantize		6665826						
ANR	6665954	Symbol	cinfo -> cquantize		6665826						
ANR	6665955	Symbol	cquantize -> Ncolors		6665826						
ANR	6665956	Symbol	make_odither_array		6665826						
ANR	6665957	Symbol	* i		6665826						
ANR	6665958	Symbol	* j		6665826						
ANR	6665959	Symbol	cinfo		6665826						
ANR	6665960	Symbol	nci		6665826						
ANR	6665961	Symbol	cinfo -> out_color_components		6665826						
ANR	6665962	Symbol	* cinfo		6665826						
ANR	6665963	Function	color_quantize	460:0:17724:18472							
ANR	6665964	FunctionDef	"color_quantize (j_decompress_ptr cinfo , JSAMPARRAY input_buf , JSAMPARRAY output_buf , int num_rows)"		6665963	0					
ANR	6665965	CompoundStatement		463:0:17858:18472	6665963	0					
ANR	6665966	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	464:2:17862:17926	6665963	0	True				
ANR	6665967	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6665963	0					
ANR	6665968	IdentifierDeclType	my_cquantize_ptr		6665963	0					
ANR	6665969	Identifier	cquantize		6665963	1					
ANR	6665970	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6665963	2		=			
ANR	6665971	Identifier	cquantize		6665963	0					
ANR	6665972	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6665963	1					
ANR	6665973	CastTarget	my_cquantize_ptr		6665963	0					
ANR	6665974	PtrMemberAccess	cinfo -> cquantize		6665963	1					
ANR	6665975	Identifier	cinfo		6665963	0					
ANR	6665976	Identifier	cquantize		6665963	1					
ANR	6665977	IdentifierDeclStatement	JSAMPARRAY colorindex = cquantize -> colorindex ;	465:2:17930:17975	6665963	1	True				
ANR	6665978	IdentifierDecl	colorindex = cquantize -> colorindex		6665963	0					
ANR	6665979	IdentifierDeclType	JSAMPARRAY		6665963	0					
ANR	6665980	Identifier	colorindex		6665963	1					
ANR	6665981	AssignmentExpression	colorindex = cquantize -> colorindex		6665963	2		=			
ANR	6665982	Identifier	colorindex		6665963	0					
ANR	6665983	PtrMemberAccess	cquantize -> colorindex		6665963	1					
ANR	6665984	Identifier	cquantize		6665963	0					
ANR	6665985	Identifier	colorindex		6665963	1					
ANR	6665986	Statement	register	466:2:17979:17986	6665963	2	True				
ANR	6665987	IdentifierDeclStatement	"int pixcode , ci ;"	466:11:17988:18003	6665963	3	True				
ANR	6665988	IdentifierDecl	pixcode		6665963	0					
ANR	6665989	IdentifierDeclType	int		6665963	0					
ANR	6665990	Identifier	pixcode		6665963	1					
ANR	6665991	IdentifierDecl	ci		6665963	1					
ANR	6665992	IdentifierDeclType	int		6665963	0					
ANR	6665993	Identifier	ci		6665963	1					
ANR	6665994	Statement	register	467:2:18007:18014	6665963	4	True				
ANR	6665995	IdentifierDeclStatement	"JSAMPROW ptrin , ptrout ;"	467:11:18016:18038	6665963	5	True				
ANR	6665996	IdentifierDecl	ptrin		6665963	0					
ANR	6665997	IdentifierDeclType	JSAMPROW		6665963	0					
ANR	6665998	Identifier	ptrin		6665963	1					
ANR	6665999	IdentifierDecl	ptrout		6665963	1					
ANR	6666000	IdentifierDeclType	JSAMPROW		6665963	0					
ANR	6666001	Identifier	ptrout		6665963	1					
ANR	6666002	IdentifierDeclStatement	int row ;	468:2:18042:18049	6665963	6	True				
ANR	6666003	IdentifierDecl	row		6665963	0					
ANR	6666004	IdentifierDeclType	int		6665963	0					
ANR	6666005	Identifier	row		6665963	1					
ANR	6666006	IdentifierDeclStatement	JDIMENSION col ;	469:2:18053:18067	6665963	7	True				
ANR	6666007	IdentifierDecl	col		6665963	0					
ANR	6666008	IdentifierDeclType	JDIMENSION		6665963	0					
ANR	6666009	Identifier	col		6665963	1					
ANR	6666010	IdentifierDeclStatement	JDIMENSION width = cinfo -> output_width ;	470:2:18071:18109	6665963	8	True				
ANR	6666011	IdentifierDecl	width = cinfo -> output_width		6665963	0					
ANR	6666012	IdentifierDeclType	JDIMENSION		6665963	0					
ANR	6666013	Identifier	width		6665963	1					
ANR	6666014	AssignmentExpression	width = cinfo -> output_width		6665963	2		=			
ANR	6666015	Identifier	width		6665963	0					
ANR	6666016	PtrMemberAccess	cinfo -> output_width		6665963	1					
ANR	6666017	Identifier	cinfo		6665963	0					
ANR	6666018	Identifier	output_width		6665963	1					
ANR	6666019	Statement	register	471:2:18113:18120	6665963	9	True				
ANR	6666020	IdentifierDeclStatement	int nc = cinfo -> out_color_components ;	471:11:18122:18158	6665963	10	True				
ANR	6666021	IdentifierDecl	nc = cinfo -> out_color_components		6665963	0					
ANR	6666022	IdentifierDeclType	int		6665963	0					
ANR	6666023	Identifier	nc		6665963	1					
ANR	6666024	AssignmentExpression	nc = cinfo -> out_color_components		6665963	2		=			
ANR	6666025	Identifier	nc		6665963	0					
ANR	6666026	PtrMemberAccess	cinfo -> out_color_components		6665963	1					
ANR	6666027	Identifier	cinfo		6665963	0					
ANR	6666028	Identifier	out_color_components		6665963	1					
ANR	6666029	ForStatement	for ( row = 0 ; row < num_rows ; row ++ )		6665963	11					
ANR	6666030	ForInit	row = 0 ;	473:7:18168:18175	6665963	0	True				
ANR	6666031	AssignmentExpression	row = 0		6665963	0		=			
ANR	6666032	Identifier	row		6665963	0					
ANR	6666033	PrimaryExpression	0		6665963	1					
ANR	6666034	Condition	row < num_rows	473:16:18177:18190	6665963	1	True				
ANR	6666035	RelationalExpression	row < num_rows		6665963	0		<			
ANR	6666036	Identifier	row		6665963	0					
ANR	6666037	Identifier	num_rows		6665963	1					
ANR	6666038	PostIncDecOperationExpression	row ++	473:32:18193:18197	6665963	2	True				
ANR	6666039	Identifier	row		6665963	0					
ANR	6666040	IncDec	++		6665963	1					
ANR	6666041	CompoundStatement		11:39:341:341	6665963	3					
ANR	6666042	ExpressionStatement	ptrin = input_buf [ row ]	474:4:18206:18228	6665963	0	True				
ANR	6666043	AssignmentExpression	ptrin = input_buf [ row ]		6665963	0		=			
ANR	6666044	Identifier	ptrin		6665963	0					
ANR	6666045	ArrayIndexing	input_buf [ row ]		6665963	1					
ANR	6666046	Identifier	input_buf		6665963	0					
ANR	6666047	Identifier	row		6665963	1					
ANR	6666048	ExpressionStatement	ptrout = output_buf [ row ]	475:4:18234:18258	6665963	1	True				
ANR	6666049	AssignmentExpression	ptrout = output_buf [ row ]		6665963	0		=			
ANR	6666050	Identifier	ptrout		6665963	0					
ANR	6666051	ArrayIndexing	output_buf [ row ]		6665963	1					
ANR	6666052	Identifier	output_buf		6665963	0					
ANR	6666053	Identifier	row		6665963	1					
ANR	6666054	ForStatement	for ( col = width ; col > 0 ; col -- )		6665963	2					
ANR	6666055	ForInit	col = width ;	476:9:18269:18280	6665963	0	True				
ANR	6666056	AssignmentExpression	col = width		6665963	0		=			
ANR	6666057	Identifier	col		6665963	0					
ANR	6666058	Identifier	width		6665963	1					
ANR	6666059	Condition	col > 0	476:22:18282:18288	6665963	1	True				
ANR	6666060	RelationalExpression	col > 0		6665963	0		>			
ANR	6666061	Identifier	col		6665963	0					
ANR	6666062	PrimaryExpression	0		6665963	1					
ANR	6666063	PostIncDecOperationExpression	col --	476:31:18291:18295	6665963	2	True				
ANR	6666064	Identifier	col		6665963	0					
ANR	6666065	IncDec	--		6665963	1					
ANR	6666066	CompoundStatement		14:38:439:439	6665963	3					
ANR	6666067	ExpressionStatement	pixcode = 0	477:6:18306:18317	6665963	0	True				
ANR	6666068	AssignmentExpression	pixcode = 0		6665963	0		=			
ANR	6666069	Identifier	pixcode		6665963	0					
ANR	6666070	PrimaryExpression	0		6665963	1					
ANR	6666071	ForStatement	for ( ci = 0 ; ci < nc ; ci ++ )		6665963	1					
ANR	6666072	ForInit	ci = 0 ;	478:11:18330:18336	6665963	0	True				
ANR	6666073	AssignmentExpression	ci = 0		6665963	0		=			
ANR	6666074	Identifier	ci		6665963	0					
ANR	6666075	PrimaryExpression	0		6665963	1					
ANR	6666076	Condition	ci < nc	478:19:18338:18344	6665963	1	True				
ANR	6666077	RelationalExpression	ci < nc		6665963	0		<			
ANR	6666078	Identifier	ci		6665963	0					
ANR	6666079	Identifier	nc		6665963	1					
ANR	6666080	PostIncDecOperationExpression	ci ++	478:28:18347:18350	6665963	2	True				
ANR	6666081	Identifier	ci		6665963	0					
ANR	6666082	IncDec	++		6665963	1					
ANR	6666083	CompoundStatement		16:34:494:494	6665963	3					
ANR	6666084	ExpressionStatement	pixcode += GETJSAMPLE ( colorindex [ ci ] [ GETJSAMPLE ( * ptrin ++ ) ] )	479:1:18356:18415	6665963	0	True				
ANR	6666085	AssignmentExpression	pixcode += GETJSAMPLE ( colorindex [ ci ] [ GETJSAMPLE ( * ptrin ++ ) ] )		6665963	0		+=			
ANR	6666086	Identifier	pixcode		6665963	0					
ANR	6666087	CallExpression	GETJSAMPLE ( colorindex [ ci ] [ GETJSAMPLE ( * ptrin ++ ) ] )		6665963	1					
ANR	6666088	Callee	GETJSAMPLE		6665963	0					
ANR	6666089	Identifier	GETJSAMPLE		6665963	0					
ANR	6666090	ArgumentList	colorindex [ ci ] [ GETJSAMPLE ( * ptrin ++ ) ]		6665963	1					
ANR	6666091	Argument	colorindex [ ci ] [ GETJSAMPLE ( * ptrin ++ ) ]		6665963	0					
ANR	6666092	ArrayIndexing	colorindex [ ci ] [ GETJSAMPLE ( * ptrin ++ ) ]		6665963	0					
ANR	6666093	ArrayIndexing	colorindex [ ci ]		6665963	0					
ANR	6666094	Identifier	colorindex		6665963	0					
ANR	6666095	Identifier	ci		6665963	1					
ANR	6666096	CallExpression	GETJSAMPLE ( * ptrin ++ )		6665963	1					
ANR	6666097	Callee	GETJSAMPLE		6665963	0					
ANR	6666098	Identifier	GETJSAMPLE		6665963	0					
ANR	6666099	ArgumentList	* ptrin ++		6665963	1					
ANR	6666100	Argument	* ptrin ++		6665963	0					
ANR	6666101	UnaryOperationExpression	* ptrin ++		6665963	0					
ANR	6666102	UnaryOperator	*		6665963	0					
ANR	6666103	PostIncDecOperationExpression	ptrin ++		6665963	1					
ANR	6666104	Identifier	ptrin		6665963	0					
ANR	6666105	IncDec	++		6665963	1					
ANR	6666106	ExpressionStatement	* ptrout ++ = ( JSAMPLE ) pixcode	481:6:18431:18460	6665963	2	True				
ANR	6666107	AssignmentExpression	* ptrout ++ = ( JSAMPLE ) pixcode		6665963	0		=			
ANR	6666108	UnaryOperationExpression	* ptrout ++		6665963	0					
ANR	6666109	UnaryOperator	*		6665963	0					
ANR	6666110	PostIncDecOperationExpression	ptrout ++		6665963	1					
ANR	6666111	Identifier	ptrout		6665963	0					
ANR	6666112	IncDec	++		6665963	1					
ANR	6666113	CastExpression	( JSAMPLE ) pixcode		6665963	1					
ANR	6666114	CastTarget	JSAMPLE		6665963	0					
ANR	6666115	Identifier	pixcode		6665963	1					
ANR	6666116	Identifier	color_quantize		6665963	1					
ANR	6666117	ParameterList	"j_decompress_ptr cinfo , JSAMPARRAY input_buf , JSAMPARRAY output_buf , int num_rows"		6665963	2					
ANR	6666118	Parameter	j_decompress_ptr cinfo	460:16:17740:17761	6665963	0	True				
ANR	6666119	ParameterType	j_decompress_ptr		6665963	0					
ANR	6666120	Identifier	cinfo		6665963	1					
ANR	6666121	Parameter	JSAMPARRAY input_buf	460:40:17764:17783	6665963	1	True				
ANR	6666122	ParameterType	JSAMPARRAY		6665963	0					
ANR	6666123	Identifier	input_buf		6665963	1					
ANR	6666124	Parameter	JSAMPARRAY output_buf	461:2:17788:17808	6665963	2	True				
ANR	6666125	ParameterType	JSAMPARRAY		6665963	0					
ANR	6666126	Identifier	output_buf		6665963	1					
ANR	6666127	Parameter	int num_rows	461:25:17811:17822	6665963	3	True				
ANR	6666128	ParameterType	int		6665963	0					
ANR	6666129	Identifier	num_rows		6665963	1					
ANR	6666130	CFGEntryNode	ENTRY		6665963		True				
ANR	6666131	CFGExitNode	EXIT		6665963		True				
ANR	6666132	Symbol	col		6665963						
ANR	6666133	Symbol	* row		6665963						
ANR	6666134	Symbol	cquantize		6665963						
ANR	6666135	Symbol	* cquantize		6665963						
ANR	6666136	Symbol	cinfo -> output_width		6665963						
ANR	6666137	Symbol	* ci		6665963						
ANR	6666138	Symbol	* * ci		6665963						
ANR	6666139	Symbol	* * colorindex		6665963						
ANR	6666140	Symbol	ptrout		6665963						
ANR	6666141	Symbol	cinfo -> out_color_components		6665963						
ANR	6666142	Symbol	num_rows		6665963						
ANR	6666143	Symbol	cquantize -> colorindex		6665963						
ANR	6666144	Symbol	row		6665963						
ANR	6666145	Symbol	* cinfo		6665963						
ANR	6666146	Symbol	* colorindex		6665963						
ANR	6666147	Symbol	output_buf		6665963						
ANR	6666148	Symbol	* GETJSAMPLE		6665963						
ANR	6666149	Symbol	GETJSAMPLE		6665963						
ANR	6666150	Symbol	colorindex		6665963						
ANR	6666151	Symbol	ci		6665963						
ANR	6666152	Symbol	* ptrout ++		6665963						
ANR	6666153	Symbol	* ptrin ++		6665963						
ANR	6666154	Symbol	cinfo -> cquantize		6665963						
ANR	6666155	Symbol	ptrin		6665963						
ANR	6666156	Symbol	cinfo		6665963						
ANR	6666157	Symbol	nc		6665963						
ANR	6666158	Symbol	width		6665963						
ANR	6666159	Symbol	* output_buf		6665963						
ANR	6666160	Symbol	pixcode		6665963						
ANR	6666161	Symbol	input_buf		6665963						
ANR	6666162	Symbol	* input_buf		6665963						
ANR	6666163	Function	color_quantize3	488:0:18492:19385							
ANR	6666164	FunctionDef	"color_quantize3 (j_decompress_ptr cinfo , JSAMPARRAY input_buf , JSAMPARRAY output_buf , int num_rows)"		6666163	0					
ANR	6666165	CompoundStatement		491:0:18653:19385	6666163	0					
ANR	6666166	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	492:2:18657:18721	6666163	0	True				
ANR	6666167	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6666163	0					
ANR	6666168	IdentifierDeclType	my_cquantize_ptr		6666163	0					
ANR	6666169	Identifier	cquantize		6666163	1					
ANR	6666170	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6666163	2		=			
ANR	6666171	Identifier	cquantize		6666163	0					
ANR	6666172	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6666163	1					
ANR	6666173	CastTarget	my_cquantize_ptr		6666163	0					
ANR	6666174	PtrMemberAccess	cinfo -> cquantize		6666163	1					
ANR	6666175	Identifier	cinfo		6666163	0					
ANR	6666176	Identifier	cquantize		6666163	1					
ANR	6666177	Statement	register	493:2:18725:18732	6666163	1	True				
ANR	6666178	IdentifierDeclStatement	int pixcode ;	493:11:18734:18745	6666163	2	True				
ANR	6666179	IdentifierDecl	pixcode		6666163	0					
ANR	6666180	IdentifierDeclType	int		6666163	0					
ANR	6666181	Identifier	pixcode		6666163	1					
ANR	6666182	Statement	register	494:2:18749:18756	6666163	3	True				
ANR	6666183	IdentifierDeclStatement	"JSAMPROW ptrin , ptrout ;"	494:11:18758:18780	6666163	4	True				
ANR	6666184	IdentifierDecl	ptrin		6666163	0					
ANR	6666185	IdentifierDeclType	JSAMPROW		6666163	0					
ANR	6666186	Identifier	ptrin		6666163	1					
ANR	6666187	IdentifierDecl	ptrout		6666163	1					
ANR	6666188	IdentifierDeclType	JSAMPROW		6666163	0					
ANR	6666189	Identifier	ptrout		6666163	1					
ANR	6666190	IdentifierDeclStatement	JSAMPROW colorindex0 = cquantize -> colorindex [ 0 ] ;	495:2:18784:18831	6666163	5	True				
ANR	6666191	IdentifierDecl	colorindex0 = cquantize -> colorindex [ 0 ]		6666163	0					
ANR	6666192	IdentifierDeclType	JSAMPROW		6666163	0					
ANR	6666193	Identifier	colorindex0		6666163	1					
ANR	6666194	AssignmentExpression	colorindex0 = cquantize -> colorindex [ 0 ]		6666163	2		=			
ANR	6666195	Identifier	colorindex0		6666163	0					
ANR	6666196	ArrayIndexing	cquantize -> colorindex [ 0 ]		6666163	1					
ANR	6666197	PtrMemberAccess	cquantize -> colorindex		6666163	0					
ANR	6666198	Identifier	cquantize		6666163	0					
ANR	6666199	Identifier	colorindex		6666163	1					
ANR	6666200	PrimaryExpression	0		6666163	1					
ANR	6666201	IdentifierDeclStatement	JSAMPROW colorindex1 = cquantize -> colorindex [ 1 ] ;	496:2:18835:18882	6666163	6	True				
ANR	6666202	IdentifierDecl	colorindex1 = cquantize -> colorindex [ 1 ]		6666163	0					
ANR	6666203	IdentifierDeclType	JSAMPROW		6666163	0					
ANR	6666204	Identifier	colorindex1		6666163	1					
ANR	6666205	AssignmentExpression	colorindex1 = cquantize -> colorindex [ 1 ]		6666163	2		=			
ANR	6666206	Identifier	colorindex1		6666163	0					
ANR	6666207	ArrayIndexing	cquantize -> colorindex [ 1 ]		6666163	1					
ANR	6666208	PtrMemberAccess	cquantize -> colorindex		6666163	0					
ANR	6666209	Identifier	cquantize		6666163	0					
ANR	6666210	Identifier	colorindex		6666163	1					
ANR	6666211	PrimaryExpression	1		6666163	1					
ANR	6666212	IdentifierDeclStatement	JSAMPROW colorindex2 = cquantize -> colorindex [ 2 ] ;	497:2:18886:18933	6666163	7	True				
ANR	6666213	IdentifierDecl	colorindex2 = cquantize -> colorindex [ 2 ]		6666163	0					
ANR	6666214	IdentifierDeclType	JSAMPROW		6666163	0					
ANR	6666215	Identifier	colorindex2		6666163	1					
ANR	6666216	AssignmentExpression	colorindex2 = cquantize -> colorindex [ 2 ]		6666163	2		=			
ANR	6666217	Identifier	colorindex2		6666163	0					
ANR	6666218	ArrayIndexing	cquantize -> colorindex [ 2 ]		6666163	1					
ANR	6666219	PtrMemberAccess	cquantize -> colorindex		6666163	0					
ANR	6666220	Identifier	cquantize		6666163	0					
ANR	6666221	Identifier	colorindex		6666163	1					
ANR	6666222	PrimaryExpression	2		6666163	1					
ANR	6666223	IdentifierDeclStatement	int row ;	498:2:18937:18944	6666163	8	True				
ANR	6666224	IdentifierDecl	row		6666163	0					
ANR	6666225	IdentifierDeclType	int		6666163	0					
ANR	6666226	Identifier	row		6666163	1					
ANR	6666227	IdentifierDeclStatement	JDIMENSION col ;	499:2:18948:18962	6666163	9	True				
ANR	6666228	IdentifierDecl	col		6666163	0					
ANR	6666229	IdentifierDeclType	JDIMENSION		6666163	0					
ANR	6666230	Identifier	col		6666163	1					
ANR	6666231	IdentifierDeclStatement	JDIMENSION width = cinfo -> output_width ;	500:2:18966:19004	6666163	10	True				
ANR	6666232	IdentifierDecl	width = cinfo -> output_width		6666163	0					
ANR	6666233	IdentifierDeclType	JDIMENSION		6666163	0					
ANR	6666234	Identifier	width		6666163	1					
ANR	6666235	AssignmentExpression	width = cinfo -> output_width		6666163	2		=			
ANR	6666236	Identifier	width		6666163	0					
ANR	6666237	PtrMemberAccess	cinfo -> output_width		6666163	1					
ANR	6666238	Identifier	cinfo		6666163	0					
ANR	6666239	Identifier	output_width		6666163	1					
ANR	6666240	ForStatement	for ( row = 0 ; row < num_rows ; row ++ )		6666163	11					
ANR	6666241	ForInit	row = 0 ;	502:7:19014:19021	6666163	0	True				
ANR	6666242	AssignmentExpression	row = 0		6666163	0		=			
ANR	6666243	Identifier	row		6666163	0					
ANR	6666244	PrimaryExpression	0		6666163	1					
ANR	6666245	Condition	row < num_rows	502:16:19023:19036	6666163	1	True				
ANR	6666246	RelationalExpression	row < num_rows		6666163	0		<			
ANR	6666247	Identifier	row		6666163	0					
ANR	6666248	Identifier	num_rows		6666163	1					
ANR	6666249	PostIncDecOperationExpression	row ++	502:32:19039:19043	6666163	2	True				
ANR	6666250	Identifier	row		6666163	0					
ANR	6666251	IncDec	++		6666163	1					
ANR	6666252	CompoundStatement		12:39:392:392	6666163	3					
ANR	6666253	ExpressionStatement	ptrin = input_buf [ row ]	503:4:19052:19074	6666163	0	True				
ANR	6666254	AssignmentExpression	ptrin = input_buf [ row ]		6666163	0		=			
ANR	6666255	Identifier	ptrin		6666163	0					
ANR	6666256	ArrayIndexing	input_buf [ row ]		6666163	1					
ANR	6666257	Identifier	input_buf		6666163	0					
ANR	6666258	Identifier	row		6666163	1					
ANR	6666259	ExpressionStatement	ptrout = output_buf [ row ]	504:4:19080:19104	6666163	1	True				
ANR	6666260	AssignmentExpression	ptrout = output_buf [ row ]		6666163	0		=			
ANR	6666261	Identifier	ptrout		6666163	0					
ANR	6666262	ArrayIndexing	output_buf [ row ]		6666163	1					
ANR	6666263	Identifier	output_buf		6666163	0					
ANR	6666264	Identifier	row		6666163	1					
ANR	6666265	ForStatement	for ( col = width ; col > 0 ; col -- )		6666163	2					
ANR	6666266	ForInit	col = width ;	505:9:19115:19126	6666163	0	True				
ANR	6666267	AssignmentExpression	col = width		6666163	0		=			
ANR	6666268	Identifier	col		6666163	0					
ANR	6666269	Identifier	width		6666163	1					
ANR	6666270	Condition	col > 0	505:22:19128:19134	6666163	1	True				
ANR	6666271	RelationalExpression	col > 0		6666163	0		>			
ANR	6666272	Identifier	col		6666163	0					
ANR	6666273	PrimaryExpression	0		6666163	1					
ANR	6666274	PostIncDecOperationExpression	col --	505:31:19137:19141	6666163	2	True				
ANR	6666275	Identifier	col		6666163	0					
ANR	6666276	IncDec	--		6666163	1					
ANR	6666277	CompoundStatement		15:38:490:490	6666163	3					
ANR	6666278	ExpressionStatement	pixcode = GETJSAMPLE ( colorindex0 [ GETJSAMPLE ( * ptrin ++ ) ] )	506:6:19152:19208	6666163	0	True				
ANR	6666279	AssignmentExpression	pixcode = GETJSAMPLE ( colorindex0 [ GETJSAMPLE ( * ptrin ++ ) ] )		6666163	0		=			
ANR	6666280	Identifier	pixcode		6666163	0					
ANR	6666281	CallExpression	GETJSAMPLE ( colorindex0 [ GETJSAMPLE ( * ptrin ++ ) ] )		6666163	1					
ANR	6666282	Callee	GETJSAMPLE		6666163	0					
ANR	6666283	Identifier	GETJSAMPLE		6666163	0					
ANR	6666284	ArgumentList	colorindex0 [ GETJSAMPLE ( * ptrin ++ ) ]		6666163	1					
ANR	6666285	Argument	colorindex0 [ GETJSAMPLE ( * ptrin ++ ) ]		6666163	0					
ANR	6666286	ArrayIndexing	colorindex0 [ GETJSAMPLE ( * ptrin ++ ) ]		6666163	0					
ANR	6666287	Identifier	colorindex0		6666163	0					
ANR	6666288	CallExpression	GETJSAMPLE ( * ptrin ++ )		6666163	1					
ANR	6666289	Callee	GETJSAMPLE		6666163	0					
ANR	6666290	Identifier	GETJSAMPLE		6666163	0					
ANR	6666291	ArgumentList	* ptrin ++		6666163	1					
ANR	6666292	Argument	* ptrin ++		6666163	0					
ANR	6666293	UnaryOperationExpression	* ptrin ++		6666163	0					
ANR	6666294	UnaryOperator	*		6666163	0					
ANR	6666295	PostIncDecOperationExpression	ptrin ++		6666163	1					
ANR	6666296	Identifier	ptrin		6666163	0					
ANR	6666297	IncDec	++		6666163	1					
ANR	6666298	ExpressionStatement	pixcode += GETJSAMPLE ( colorindex1 [ GETJSAMPLE ( * ptrin ++ ) ] )	507:6:19216:19272	6666163	1	True				
ANR	6666299	AssignmentExpression	pixcode += GETJSAMPLE ( colorindex1 [ GETJSAMPLE ( * ptrin ++ ) ] )		6666163	0		+=			
ANR	6666300	Identifier	pixcode		6666163	0					
ANR	6666301	CallExpression	GETJSAMPLE ( colorindex1 [ GETJSAMPLE ( * ptrin ++ ) ] )		6666163	1					
ANR	6666302	Callee	GETJSAMPLE		6666163	0					
ANR	6666303	Identifier	GETJSAMPLE		6666163	0					
ANR	6666304	ArgumentList	colorindex1 [ GETJSAMPLE ( * ptrin ++ ) ]		6666163	1					
ANR	6666305	Argument	colorindex1 [ GETJSAMPLE ( * ptrin ++ ) ]		6666163	0					
ANR	6666306	ArrayIndexing	colorindex1 [ GETJSAMPLE ( * ptrin ++ ) ]		6666163	0					
ANR	6666307	Identifier	colorindex1		6666163	0					
ANR	6666308	CallExpression	GETJSAMPLE ( * ptrin ++ )		6666163	1					
ANR	6666309	Callee	GETJSAMPLE		6666163	0					
ANR	6666310	Identifier	GETJSAMPLE		6666163	0					
ANR	6666311	ArgumentList	* ptrin ++		6666163	1					
ANR	6666312	Argument	* ptrin ++		6666163	0					
ANR	6666313	UnaryOperationExpression	* ptrin ++		6666163	0					
ANR	6666314	UnaryOperator	*		6666163	0					
ANR	6666315	PostIncDecOperationExpression	ptrin ++		6666163	1					
ANR	6666316	Identifier	ptrin		6666163	0					
ANR	6666317	IncDec	++		6666163	1					
ANR	6666318	ExpressionStatement	pixcode += GETJSAMPLE ( colorindex2 [ GETJSAMPLE ( * ptrin ++ ) ] )	508:6:19280:19336	6666163	2	True				
ANR	6666319	AssignmentExpression	pixcode += GETJSAMPLE ( colorindex2 [ GETJSAMPLE ( * ptrin ++ ) ] )		6666163	0		+=			
ANR	6666320	Identifier	pixcode		6666163	0					
ANR	6666321	CallExpression	GETJSAMPLE ( colorindex2 [ GETJSAMPLE ( * ptrin ++ ) ] )		6666163	1					
ANR	6666322	Callee	GETJSAMPLE		6666163	0					
ANR	6666323	Identifier	GETJSAMPLE		6666163	0					
ANR	6666324	ArgumentList	colorindex2 [ GETJSAMPLE ( * ptrin ++ ) ]		6666163	1					
ANR	6666325	Argument	colorindex2 [ GETJSAMPLE ( * ptrin ++ ) ]		6666163	0					
ANR	6666326	ArrayIndexing	colorindex2 [ GETJSAMPLE ( * ptrin ++ ) ]		6666163	0					
ANR	6666327	Identifier	colorindex2		6666163	0					
ANR	6666328	CallExpression	GETJSAMPLE ( * ptrin ++ )		6666163	1					
ANR	6666329	Callee	GETJSAMPLE		6666163	0					
ANR	6666330	Identifier	GETJSAMPLE		6666163	0					
ANR	6666331	ArgumentList	* ptrin ++		6666163	1					
ANR	6666332	Argument	* ptrin ++		6666163	0					
ANR	6666333	UnaryOperationExpression	* ptrin ++		6666163	0					
ANR	6666334	UnaryOperator	*		6666163	0					
ANR	6666335	PostIncDecOperationExpression	ptrin ++		6666163	1					
ANR	6666336	Identifier	ptrin		6666163	0					
ANR	6666337	IncDec	++		6666163	1					
ANR	6666338	ExpressionStatement	* ptrout ++ = ( JSAMPLE ) pixcode	509:6:19344:19373	6666163	3	True				
ANR	6666339	AssignmentExpression	* ptrout ++ = ( JSAMPLE ) pixcode		6666163	0		=			
ANR	6666340	UnaryOperationExpression	* ptrout ++		6666163	0					
ANR	6666341	UnaryOperator	*		6666163	0					
ANR	6666342	PostIncDecOperationExpression	ptrout ++		6666163	1					
ANR	6666343	Identifier	ptrout		6666163	0					
ANR	6666344	IncDec	++		6666163	1					
ANR	6666345	CastExpression	( JSAMPLE ) pixcode		6666163	1					
ANR	6666346	CastTarget	JSAMPLE		6666163	0					
ANR	6666347	Identifier	pixcode		6666163	1					
ANR	6666348	Identifier	color_quantize3		6666163	1					
ANR	6666349	ParameterList	"j_decompress_ptr cinfo , JSAMPARRAY input_buf , JSAMPARRAY output_buf , int num_rows"		6666163	2					
ANR	6666350	Parameter	j_decompress_ptr cinfo	488:17:18509:18530	6666163	0	True				
ANR	6666351	ParameterType	j_decompress_ptr		6666163	0					
ANR	6666352	Identifier	cinfo		6666163	1					
ANR	6666353	Parameter	JSAMPARRAY input_buf	488:41:18533:18552	6666163	1	True				
ANR	6666354	ParameterType	JSAMPARRAY		6666163	0					
ANR	6666355	Identifier	input_buf		6666163	1					
ANR	6666356	Parameter	JSAMPARRAY output_buf	489:3:18558:18578	6666163	2	True				
ANR	6666357	ParameterType	JSAMPARRAY		6666163	0					
ANR	6666358	Identifier	output_buf		6666163	1					
ANR	6666359	Parameter	int num_rows	489:26:18581:18592	6666163	3	True				
ANR	6666360	ParameterType	int		6666163	0					
ANR	6666361	Identifier	num_rows		6666163	1					
ANR	6666362	CFGEntryNode	ENTRY		6666163		True				
ANR	6666363	CFGExitNode	EXIT		6666163		True				
ANR	6666364	Symbol	col		6666163						
ANR	6666365	Symbol	* row		6666163						
ANR	6666366	Symbol	cquantize		6666163						
ANR	6666367	Symbol	* cquantize		6666163						
ANR	6666368	Symbol	cinfo -> output_width		6666163						
ANR	6666369	Symbol	ptrout		6666163						
ANR	6666370	Symbol	num_rows		6666163						
ANR	6666371	Symbol	cquantize -> colorindex		6666163						
ANR	6666372	Symbol	row		6666163						
ANR	6666373	Symbol	* cinfo		6666163						
ANR	6666374	Symbol	output_buf		6666163						
ANR	6666375	Symbol	* GETJSAMPLE		6666163						
ANR	6666376	Symbol	* colorindex1		6666163						
ANR	6666377	Symbol	* colorindex2		6666163						
ANR	6666378	Symbol	GETJSAMPLE		6666163						
ANR	6666379	Symbol	* colorindex0		6666163						
ANR	6666380	Symbol	* ptrout ++		6666163						
ANR	6666381	Symbol	* * cquantize		6666163						
ANR	6666382	Symbol	* ptrin ++		6666163						
ANR	6666383	Symbol	cinfo -> cquantize		6666163						
ANR	6666384	Symbol	ptrin		6666163						
ANR	6666385	Symbol	cinfo		6666163						
ANR	6666386	Symbol	colorindex1		6666163						
ANR	6666387	Symbol	width		6666163						
ANR	6666388	Symbol	colorindex2		6666163						
ANR	6666389	Symbol	* output_buf		6666163						
ANR	6666390	Symbol	* cquantize -> colorindex		6666163						
ANR	6666391	Symbol	colorindex0		6666163						
ANR	6666392	Symbol	pixcode		6666163						
ANR	6666393	Symbol	input_buf		6666163						
ANR	6666394	Symbol	* input_buf		6666163						
ANR	6666395	Function	quantize_ord_dither	516:0:19405:21151							
ANR	6666396	FunctionDef	"quantize_ord_dither (j_decompress_ptr cinfo , JSAMPARRAY input_buf , JSAMPARRAY output_buf , int num_rows)"		6666395	0					
ANR	6666397	CompoundStatement		519:0:19559:21151	6666395	0					
ANR	6666398	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	520:2:19563:19627	6666395	0	True				
ANR	6666399	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6666395	0					
ANR	6666400	IdentifierDeclType	my_cquantize_ptr		6666395	0					
ANR	6666401	Identifier	cquantize		6666395	1					
ANR	6666402	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6666395	2		=			
ANR	6666403	Identifier	cquantize		6666395	0					
ANR	6666404	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6666395	1					
ANR	6666405	CastTarget	my_cquantize_ptr		6666395	0					
ANR	6666406	PtrMemberAccess	cinfo -> cquantize		6666395	1					
ANR	6666407	Identifier	cinfo		6666395	0					
ANR	6666408	Identifier	cquantize		6666395	1					
ANR	6666409	Statement	register	521:2:19631:19638	6666395	1	True				
ANR	6666410	IdentifierDeclStatement	JSAMPROW input_ptr ;	521:11:19640:19658	6666395	2	True				
ANR	6666411	IdentifierDecl	input_ptr		6666395	0					
ANR	6666412	IdentifierDeclType	JSAMPROW		6666395	0					
ANR	6666413	Identifier	input_ptr		6666395	1					
ANR	6666414	Statement	register	522:2:19662:19669	6666395	3	True				
ANR	6666415	IdentifierDeclStatement	JSAMPROW output_ptr ;	522:11:19671:19690	6666395	4	True				
ANR	6666416	IdentifierDecl	output_ptr		6666395	0					
ANR	6666417	IdentifierDeclType	JSAMPROW		6666395	0					
ANR	6666418	Identifier	output_ptr		6666395	1					
ANR	6666419	IdentifierDeclStatement	JSAMPROW colorindex_ci ;	523:2:19694:19716	6666395	5	True				
ANR	6666420	IdentifierDecl	colorindex_ci		6666395	0					
ANR	6666421	IdentifierDeclType	JSAMPROW		6666395	0					
ANR	6666422	Identifier	colorindex_ci		6666395	1					
ANR	6666423	IdentifierDeclStatement	int * dither ;	524:2:19720:19732	6666395	6	True				
ANR	6666424	IdentifierDecl	* dither		6666395	0					
ANR	6666425	IdentifierDeclType	int *		6666395	0					
ANR	6666426	Identifier	dither		6666395	1					
ANR	6666427	IdentifierDeclStatement	"int row_index , col_index ;"	525:2:19782:19806	6666395	7	True				
ANR	6666428	IdentifierDecl	row_index		6666395	0					
ANR	6666429	IdentifierDeclType	int		6666395	0					
ANR	6666430	Identifier	row_index		6666395	1					
ANR	6666431	IdentifierDecl	col_index		6666395	1					
ANR	6666432	IdentifierDeclType	int		6666395	0					
ANR	6666433	Identifier	col_index		6666395	1					
ANR	6666434	IdentifierDeclStatement	int nc = cinfo -> out_color_components ;	526:2:19851:19887	6666395	8	True				
ANR	6666435	IdentifierDecl	nc = cinfo -> out_color_components		6666395	0					
ANR	6666436	IdentifierDeclType	int		6666395	0					
ANR	6666437	Identifier	nc		6666395	1					
ANR	6666438	AssignmentExpression	nc = cinfo -> out_color_components		6666395	2		=			
ANR	6666439	Identifier	nc		6666395	0					
ANR	6666440	PtrMemberAccess	cinfo -> out_color_components		6666395	1					
ANR	6666441	Identifier	cinfo		6666395	0					
ANR	6666442	Identifier	out_color_components		6666395	1					
ANR	6666443	IdentifierDeclStatement	int ci ;	527:2:19891:19897	6666395	9	True				
ANR	6666444	IdentifierDecl	ci		6666395	0					
ANR	6666445	IdentifierDeclType	int		6666395	0					
ANR	6666446	Identifier	ci		6666395	1					
ANR	6666447	IdentifierDeclStatement	int row ;	528:2:19901:19908	6666395	10	True				
ANR	6666448	IdentifierDecl	row		6666395	0					
ANR	6666449	IdentifierDeclType	int		6666395	0					
ANR	6666450	Identifier	row		6666395	1					
ANR	6666451	IdentifierDeclStatement	JDIMENSION col ;	529:2:19912:19926	6666395	11	True				
ANR	6666452	IdentifierDecl	col		6666395	0					
ANR	6666453	IdentifierDeclType	JDIMENSION		6666395	0					
ANR	6666454	Identifier	col		6666395	1					
ANR	6666455	IdentifierDeclStatement	JDIMENSION width = cinfo -> output_width ;	530:2:19930:19968	6666395	12	True				
ANR	6666456	IdentifierDecl	width = cinfo -> output_width		6666395	0					
ANR	6666457	IdentifierDeclType	JDIMENSION		6666395	0					
ANR	6666458	Identifier	width		6666395	1					
ANR	6666459	AssignmentExpression	width = cinfo -> output_width		6666395	2		=			
ANR	6666460	Identifier	width		6666395	0					
ANR	6666461	PtrMemberAccess	cinfo -> output_width		6666395	1					
ANR	6666462	Identifier	cinfo		6666395	0					
ANR	6666463	Identifier	output_width		6666395	1					
ANR	6666464	ForStatement	for ( row = 0 ; row < num_rows ; row ++ )		6666395	13					
ANR	6666465	ForInit	row = 0 ;	532:7:19978:19985	6666395	0	True				
ANR	6666466	AssignmentExpression	row = 0		6666395	0		=			
ANR	6666467	Identifier	row		6666395	0					
ANR	6666468	PrimaryExpression	0		6666395	1					
ANR	6666469	Condition	row < num_rows	532:16:19987:20000	6666395	1	True				
ANR	6666470	RelationalExpression	row < num_rows		6666395	0		<			
ANR	6666471	Identifier	row		6666395	0					
ANR	6666472	Identifier	num_rows		6666395	1					
ANR	6666473	PostIncDecOperationExpression	row ++	532:32:20003:20007	6666395	2	True				
ANR	6666474	Identifier	row		6666395	0					
ANR	6666475	IncDec	++		6666395	1					
ANR	6666476	CompoundStatement		14:39:450:450	6666395	3					
ANR	6666477	ExpressionStatement	"FMEMZERO ( ( void FAR * ) output_buf [ row ] , ( size_t ) ( width * SIZEOF ( JSAMPLE ) ) )"	534:4:20093:20173	6666395	0	True				
ANR	6666478	CallExpression	"FMEMZERO ( ( void FAR * ) output_buf [ row ] , ( size_t ) ( width * SIZEOF ( JSAMPLE ) ) )"		6666395	0					
ANR	6666479	Callee	FMEMZERO		6666395	0					
ANR	6666480	Identifier	FMEMZERO		6666395	0					
ANR	6666481	ArgumentList	( void FAR * ) output_buf [ row ]		6666395	1					
ANR	6666482	Argument	( void FAR * ) output_buf [ row ]		6666395	0					
ANR	6666483	CastExpression	( void FAR * ) output_buf [ row ]		6666395	0					
ANR	6666484	CastTarget	void FAR *		6666395	0					
ANR	6666485	ArrayIndexing	output_buf [ row ]		6666395	1					
ANR	6666486	Identifier	output_buf		6666395	0					
ANR	6666487	Identifier	row		6666395	1					
ANR	6666488	Argument	( size_t ) ( width * SIZEOF ( JSAMPLE ) )		6666395	1					
ANR	6666489	CastExpression	( size_t ) ( width * SIZEOF ( JSAMPLE ) )		6666395	0					
ANR	6666490	CastTarget	size_t		6666395	0					
ANR	6666491	MultiplicativeExpression	width * SIZEOF ( JSAMPLE )		6666395	1		*			
ANR	6666492	Identifier	width		6666395	0					
ANR	6666493	CallExpression	SIZEOF ( JSAMPLE )		6666395	1					
ANR	6666494	Callee	SIZEOF		6666395	0					
ANR	6666495	Identifier	SIZEOF		6666395	0					
ANR	6666496	ArgumentList	JSAMPLE		6666395	1					
ANR	6666497	Argument	JSAMPLE		6666395	0					
ANR	6666498	Identifier	JSAMPLE		6666395	0					
ANR	6666499	ExpressionStatement	row_index = cquantize -> row_index	536:4:20179:20211	6666395	1	True				
ANR	6666500	AssignmentExpression	row_index = cquantize -> row_index		6666395	0		=			
ANR	6666501	Identifier	row_index		6666395	0					
ANR	6666502	PtrMemberAccess	cquantize -> row_index		6666395	1					
ANR	6666503	Identifier	cquantize		6666395	0					
ANR	6666504	Identifier	row_index		6666395	1					
ANR	6666505	ForStatement	for ( ci = 0 ; ci < nc ; ci ++ )		6666395	2					
ANR	6666506	ForInit	ci = 0 ;	537:9:20222:20228	6666395	0	True				
ANR	6666507	AssignmentExpression	ci = 0		6666395	0		=			
ANR	6666508	Identifier	ci		6666395	0					
ANR	6666509	PrimaryExpression	0		6666395	1					
ANR	6666510	Condition	ci < nc	537:17:20230:20236	6666395	1	True				
ANR	6666511	RelationalExpression	ci < nc		6666395	0		<			
ANR	6666512	Identifier	ci		6666395	0					
ANR	6666513	Identifier	nc		6666395	1					
ANR	6666514	PostIncDecOperationExpression	ci ++	537:26:20239:20242	6666395	2	True				
ANR	6666515	Identifier	ci		6666395	0					
ANR	6666516	IncDec	++		6666395	1					
ANR	6666517	CompoundStatement		19:32:685:685	6666395	3					
ANR	6666518	ExpressionStatement	input_ptr = input_buf [ row ] + ci	538:6:20253:20284	6666395	0	True				
ANR	6666519	AssignmentExpression	input_ptr = input_buf [ row ] + ci		6666395	0		=			
ANR	6666520	Identifier	input_ptr		6666395	0					
ANR	6666521	AdditiveExpression	input_buf [ row ] + ci		6666395	1		+			
ANR	6666522	ArrayIndexing	input_buf [ row ]		6666395	0					
ANR	6666523	Identifier	input_buf		6666395	0					
ANR	6666524	Identifier	row		6666395	1					
ANR	6666525	Identifier	ci		6666395	1					
ANR	6666526	ExpressionStatement	output_ptr = output_buf [ row ]	539:6:20292:20320	6666395	1	True				
ANR	6666527	AssignmentExpression	output_ptr = output_buf [ row ]		6666395	0		=			
ANR	6666528	Identifier	output_ptr		6666395	0					
ANR	6666529	ArrayIndexing	output_buf [ row ]		6666395	1					
ANR	6666530	Identifier	output_buf		6666395	0					
ANR	6666531	Identifier	row		6666395	1					
ANR	6666532	ExpressionStatement	colorindex_ci = cquantize -> colorindex [ ci ]	540:6:20328:20369	6666395	2	True				
ANR	6666533	AssignmentExpression	colorindex_ci = cquantize -> colorindex [ ci ]		6666395	0		=			
ANR	6666534	Identifier	colorindex_ci		6666395	0					
ANR	6666535	ArrayIndexing	cquantize -> colorindex [ ci ]		6666395	1					
ANR	6666536	PtrMemberAccess	cquantize -> colorindex		6666395	0					
ANR	6666537	Identifier	cquantize		6666395	0					
ANR	6666538	Identifier	colorindex		6666395	1					
ANR	6666539	Identifier	ci		6666395	1					
ANR	6666540	ExpressionStatement	dither = cquantize -> odither [ ci ] [ row_index ]	541:6:20377:20419	6666395	3	True				
ANR	6666541	AssignmentExpression	dither = cquantize -> odither [ ci ] [ row_index ]		6666395	0		=			
ANR	6666542	Identifier	dither		6666395	0					
ANR	6666543	ArrayIndexing	cquantize -> odither [ ci ] [ row_index ]		6666395	1					
ANR	6666544	ArrayIndexing	cquantize -> odither [ ci ]		6666395	0					
ANR	6666545	PtrMemberAccess	cquantize -> odither		6666395	0					
ANR	6666546	Identifier	cquantize		6666395	0					
ANR	6666547	Identifier	odither		6666395	1					
ANR	6666548	Identifier	ci		6666395	1					
ANR	6666549	Identifier	row_index		6666395	1					
ANR	6666550	ExpressionStatement	col_index = 0	542:6:20427:20440	6666395	4	True				
ANR	6666551	AssignmentExpression	col_index = 0		6666395	0		=			
ANR	6666552	Identifier	col_index		6666395	0					
ANR	6666553	PrimaryExpression	0		6666395	1					
ANR	6666554	ForStatement	for ( col = width ; col > 0 ; col -- )		6666395	5					
ANR	6666555	ForInit	col = width ;	544:11:20454:20465	6666395	0	True				
ANR	6666556	AssignmentExpression	col = width		6666395	0		=			
ANR	6666557	Identifier	col		6666395	0					
ANR	6666558	Identifier	width		6666395	1					
ANR	6666559	Condition	col > 0	544:24:20467:20473	6666395	1	True				
ANR	6666560	RelationalExpression	col > 0		6666395	0		>			
ANR	6666561	Identifier	col		6666395	0					
ANR	6666562	PrimaryExpression	0		6666395	1					
ANR	6666563	PostIncDecOperationExpression	col --	544:33:20476:20480	6666395	2	True				
ANR	6666564	Identifier	col		6666395	0					
ANR	6666565	IncDec	--		6666395	1					
ANR	6666566	CompoundStatement		26:40:923:923	6666395	3					
ANR	6666567	ExpressionStatement	* output_ptr += colorindex_ci [ GETJSAMPLE ( * input_ptr ) + dither [ col_index ] ]	552:1:20856:20926	6666395	0	True				
ANR	6666568	AssignmentExpression	* output_ptr += colorindex_ci [ GETJSAMPLE ( * input_ptr ) + dither [ col_index ] ]		6666395	0		+=			
ANR	6666569	UnaryOperationExpression	* output_ptr		6666395	0					
ANR	6666570	UnaryOperator	*		6666395	0					
ANR	6666571	Identifier	output_ptr		6666395	1					
ANR	6666572	ArrayIndexing	colorindex_ci [ GETJSAMPLE ( * input_ptr ) + dither [ col_index ] ]		6666395	1					
ANR	6666573	Identifier	colorindex_ci		6666395	0					
ANR	6666574	AdditiveExpression	GETJSAMPLE ( * input_ptr ) + dither [ col_index ]		6666395	1		+			
ANR	6666575	CallExpression	GETJSAMPLE ( * input_ptr )		6666395	0					
ANR	6666576	Callee	GETJSAMPLE		6666395	0					
ANR	6666577	Identifier	GETJSAMPLE		6666395	0					
ANR	6666578	ArgumentList	* input_ptr		6666395	1					
ANR	6666579	Argument	* input_ptr		6666395	0					
ANR	6666580	UnaryOperationExpression	* input_ptr		6666395	0					
ANR	6666581	UnaryOperator	*		6666395	0					
ANR	6666582	Identifier	input_ptr		6666395	1					
ANR	6666583	ArrayIndexing	dither [ col_index ]		6666395	1					
ANR	6666584	Identifier	dither		6666395	0					
ANR	6666585	Identifier	col_index		6666395	1					
ANR	6666586	ExpressionStatement	input_ptr += nc	553:1:20929:20944	6666395	1	True				
ANR	6666587	AssignmentExpression	input_ptr += nc		6666395	0		+=			
ANR	6666588	Identifier	input_ptr		6666395	0					
ANR	6666589	Identifier	nc		6666395	1					
ANR	6666590	ExpressionStatement	output_ptr ++	554:1:20947:20959	6666395	2	True				
ANR	6666591	PostIncDecOperationExpression	output_ptr ++		6666395	0					
ANR	6666592	Identifier	output_ptr		6666395	0					
ANR	6666593	IncDec	++		6666395	1					
ANR	6666594	ExpressionStatement	col_index = ( col_index + 1 ) & ODITHER_MASK	555:1:20962:21004	6666395	3	True				
ANR	6666595	AssignmentExpression	col_index = ( col_index + 1 ) & ODITHER_MASK		6666395	0		=			
ANR	6666596	Identifier	col_index		6666395	0					
ANR	6666597	BitAndExpression	( col_index + 1 ) & ODITHER_MASK		6666395	1		&			
ANR	6666598	AdditiveExpression	col_index + 1		6666395	0		+			
ANR	6666599	Identifier	col_index		6666395	0					
ANR	6666600	PrimaryExpression	1		6666395	1					
ANR	6666601	Identifier	ODITHER_MASK		6666395	1					
ANR	6666602	ExpressionStatement	row_index = ( row_index + 1 ) & ODITHER_MASK	559:4:21065:21107	6666395	3	True				
ANR	6666603	AssignmentExpression	row_index = ( row_index + 1 ) & ODITHER_MASK		6666395	0		=			
ANR	6666604	Identifier	row_index		6666395	0					
ANR	6666605	BitAndExpression	( row_index + 1 ) & ODITHER_MASK		6666395	1		&			
ANR	6666606	AdditiveExpression	row_index + 1		6666395	0		+			
ANR	6666607	Identifier	row_index		6666395	0					
ANR	6666608	PrimaryExpression	1		6666395	1					
ANR	6666609	Identifier	ODITHER_MASK		6666395	1					
ANR	6666610	ExpressionStatement	cquantize -> row_index = row_index	560:4:21113:21145	6666395	4	True				
ANR	6666611	AssignmentExpression	cquantize -> row_index = row_index		6666395	0		=			
ANR	6666612	PtrMemberAccess	cquantize -> row_index		6666395	0					
ANR	6666613	Identifier	cquantize		6666395	0					
ANR	6666614	Identifier	row_index		6666395	1					
ANR	6666615	Identifier	row_index		6666395	1					
ANR	6666616	Identifier	quantize_ord_dither		6666395	1					
ANR	6666617	ParameterList	"j_decompress_ptr cinfo , JSAMPARRAY input_buf , JSAMPARRAY output_buf , int num_rows"		6666395	2					
ANR	6666618	Parameter	j_decompress_ptr cinfo	516:21:19426:19447	6666395	0	True				
ANR	6666619	ParameterType	j_decompress_ptr		6666395	0					
ANR	6666620	Identifier	cinfo		6666395	1					
ANR	6666621	Parameter	JSAMPARRAY input_buf	516:45:19450:19469	6666395	1	True				
ANR	6666622	ParameterType	JSAMPARRAY		6666395	0					
ANR	6666623	Identifier	input_buf		6666395	1					
ANR	6666624	Parameter	JSAMPARRAY output_buf	517:7:19479:19499	6666395	2	True				
ANR	6666625	ParameterType	JSAMPARRAY		6666395	0					
ANR	6666626	Identifier	output_buf		6666395	1					
ANR	6666627	Parameter	int num_rows	517:30:19502:19513	6666395	3	True				
ANR	6666628	ParameterType	int		6666395	0					
ANR	6666629	Identifier	num_rows		6666395	1					
ANR	6666630	CFGEntryNode	ENTRY		6666395		True				
ANR	6666631	CFGExitNode	EXIT		6666395		True				
ANR	6666632	Symbol	* * cquantize -> odither		6666395						
ANR	6666633	Symbol	col		6666395						
ANR	6666634	Symbol	col_index		6666395						
ANR	6666635	Symbol	* cquantize -> odither		6666395						
ANR	6666636	Symbol	dither		6666395						
ANR	6666637	Symbol	* row		6666395						
ANR	6666638	Symbol	* dither		6666395						
ANR	6666639	Symbol	SIZEOF		6666395						
ANR	6666640	Symbol	cquantize		6666395						
ANR	6666641	Symbol	* cquantize		6666395						
ANR	6666642	Symbol	* colorindex_ci		6666395						
ANR	6666643	Symbol	cinfo -> output_width		6666395						
ANR	6666644	Symbol	* * * cquantize		6666395						
ANR	6666645	Symbol	* ci		6666395						
ANR	6666646	Symbol	* * ci		6666395						
ANR	6666647	Symbol	JSAMPLE		6666395						
ANR	6666648	Symbol	ODITHER_MASK		6666395						
ANR	6666649	Symbol	row_index		6666395						
ANR	6666650	Symbol	cinfo -> out_color_components		6666395						
ANR	6666651	Symbol	num_rows		6666395						
ANR	6666652	Symbol	* col_index		6666395						
ANR	6666653	Symbol	cquantize -> colorindex		6666395						
ANR	6666654	Symbol	row		6666395						
ANR	6666655	Symbol	* row_index		6666395						
ANR	6666656	Symbol	* cinfo		6666395						
ANR	6666657	Symbol	* * col_index		6666395						
ANR	6666658	Symbol	output_buf		6666395						
ANR	6666659	Symbol	* GETJSAMPLE		6666395						
ANR	6666660	Symbol	GETJSAMPLE		6666395						
ANR	6666661	Symbol	colorindex_ci		6666395						
ANR	6666662	Symbol	ci		6666395						
ANR	6666663	Symbol	output_ptr		6666395						
ANR	6666664	Symbol	* * dither		6666395						
ANR	6666665	Symbol	cquantize -> odither		6666395						
ANR	6666666	Symbol	* * cquantize		6666395						
ANR	6666667	Symbol	cinfo -> cquantize		6666395						
ANR	6666668	Symbol	cinfo		6666395						
ANR	6666669	Symbol	nc		6666395						
ANR	6666670	Symbol	* input_ptr		6666395						
ANR	6666671	Symbol	* output_ptr		6666395						
ANR	6666672	Symbol	width		6666395						
ANR	6666673	Symbol	* output_buf		6666395						
ANR	6666674	Symbol	cquantize -> row_index		6666395						
ANR	6666675	Symbol	input_ptr		6666395						
ANR	6666676	Symbol	* cquantize -> colorindex		6666395						
ANR	6666677	Symbol	input_buf		6666395						
ANR	6666678	Symbol	* input_buf		6666395						
ANR	6666679	Function	quantize3_ord_dither	566:0:21171:22717							
ANR	6666680	FunctionDef	"quantize3_ord_dither (j_decompress_ptr cinfo , JSAMPARRAY input_buf , JSAMPARRAY output_buf , int num_rows)"		6666679	0					
ANR	6666681	CompoundStatement		569:0:21352:22717	6666679	0					
ANR	6666682	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	570:2:21356:21420	6666679	0	True				
ANR	6666683	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6666679	0					
ANR	6666684	IdentifierDeclType	my_cquantize_ptr		6666679	0					
ANR	6666685	Identifier	cquantize		6666679	1					
ANR	6666686	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6666679	2		=			
ANR	6666687	Identifier	cquantize		6666679	0					
ANR	6666688	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6666679	1					
ANR	6666689	CastTarget	my_cquantize_ptr		6666679	0					
ANR	6666690	PtrMemberAccess	cinfo -> cquantize		6666679	1					
ANR	6666691	Identifier	cinfo		6666679	0					
ANR	6666692	Identifier	cquantize		6666679	1					
ANR	6666693	Statement	register	571:2:21424:21431	6666679	1	True				
ANR	6666694	IdentifierDeclStatement	int pixcode ;	571:11:21433:21444	6666679	2	True				
ANR	6666695	IdentifierDecl	pixcode		6666679	0					
ANR	6666696	IdentifierDeclType	int		6666679	0					
ANR	6666697	Identifier	pixcode		6666679	1					
ANR	6666698	Statement	register	572:2:21448:21455	6666679	3	True				
ANR	6666699	IdentifierDeclStatement	JSAMPROW input_ptr ;	572:11:21457:21475	6666679	4	True				
ANR	6666700	IdentifierDecl	input_ptr		6666679	0					
ANR	6666701	IdentifierDeclType	JSAMPROW		6666679	0					
ANR	6666702	Identifier	input_ptr		6666679	1					
ANR	6666703	Statement	register	573:2:21479:21486	6666679	5	True				
ANR	6666704	IdentifierDeclStatement	JSAMPROW output_ptr ;	573:11:21488:21507	6666679	6	True				
ANR	6666705	IdentifierDecl	output_ptr		6666679	0					
ANR	6666706	IdentifierDeclType	JSAMPROW		6666679	0					
ANR	6666707	Identifier	output_ptr		6666679	1					
ANR	6666708	IdentifierDeclStatement	JSAMPROW colorindex0 = cquantize -> colorindex [ 0 ] ;	574:2:21511:21558	6666679	7	True				
ANR	6666709	IdentifierDecl	colorindex0 = cquantize -> colorindex [ 0 ]		6666679	0					
ANR	6666710	IdentifierDeclType	JSAMPROW		6666679	0					
ANR	6666711	Identifier	colorindex0		6666679	1					
ANR	6666712	AssignmentExpression	colorindex0 = cquantize -> colorindex [ 0 ]		6666679	2		=			
ANR	6666713	Identifier	colorindex0		6666679	0					
ANR	6666714	ArrayIndexing	cquantize -> colorindex [ 0 ]		6666679	1					
ANR	6666715	PtrMemberAccess	cquantize -> colorindex		6666679	0					
ANR	6666716	Identifier	cquantize		6666679	0					
ANR	6666717	Identifier	colorindex		6666679	1					
ANR	6666718	PrimaryExpression	0		6666679	1					
ANR	6666719	IdentifierDeclStatement	JSAMPROW colorindex1 = cquantize -> colorindex [ 1 ] ;	575:2:21562:21609	6666679	8	True				
ANR	6666720	IdentifierDecl	colorindex1 = cquantize -> colorindex [ 1 ]		6666679	0					
ANR	6666721	IdentifierDeclType	JSAMPROW		6666679	0					
ANR	6666722	Identifier	colorindex1		6666679	1					
ANR	6666723	AssignmentExpression	colorindex1 = cquantize -> colorindex [ 1 ]		6666679	2		=			
ANR	6666724	Identifier	colorindex1		6666679	0					
ANR	6666725	ArrayIndexing	cquantize -> colorindex [ 1 ]		6666679	1					
ANR	6666726	PtrMemberAccess	cquantize -> colorindex		6666679	0					
ANR	6666727	Identifier	cquantize		6666679	0					
ANR	6666728	Identifier	colorindex		6666679	1					
ANR	6666729	PrimaryExpression	1		6666679	1					
ANR	6666730	IdentifierDeclStatement	JSAMPROW colorindex2 = cquantize -> colorindex [ 2 ] ;	576:2:21613:21660	6666679	9	True				
ANR	6666731	IdentifierDecl	colorindex2 = cquantize -> colorindex [ 2 ]		6666679	0					
ANR	6666732	IdentifierDeclType	JSAMPROW		6666679	0					
ANR	6666733	Identifier	colorindex2		6666679	1					
ANR	6666734	AssignmentExpression	colorindex2 = cquantize -> colorindex [ 2 ]		6666679	2		=			
ANR	6666735	Identifier	colorindex2		6666679	0					
ANR	6666736	ArrayIndexing	cquantize -> colorindex [ 2 ]		6666679	1					
ANR	6666737	PtrMemberAccess	cquantize -> colorindex		6666679	0					
ANR	6666738	Identifier	cquantize		6666679	0					
ANR	6666739	Identifier	colorindex		6666679	1					
ANR	6666740	PrimaryExpression	2		6666679	1					
ANR	6666741	IdentifierDeclStatement	int * dither0 ;	577:2:21664:21677	6666679	10	True				
ANR	6666742	IdentifierDecl	* dither0		6666679	0					
ANR	6666743	IdentifierDeclType	int *		6666679	0					
ANR	6666744	Identifier	dither0		6666679	1					
ANR	6666745	IdentifierDeclStatement	int * dither1 ;	578:2:21726:21739	6666679	11	True				
ANR	6666746	IdentifierDecl	* dither1		6666679	0					
ANR	6666747	IdentifierDeclType	int *		6666679	0					
ANR	6666748	Identifier	dither1		6666679	1					
ANR	6666749	IdentifierDeclStatement	int * dither2 ;	579:2:21743:21756	6666679	12	True				
ANR	6666750	IdentifierDecl	* dither2		6666679	0					
ANR	6666751	IdentifierDeclType	int *		6666679	0					
ANR	6666752	Identifier	dither2		6666679	1					
ANR	6666753	IdentifierDeclStatement	"int row_index , col_index ;"	580:2:21760:21784	6666679	13	True				
ANR	6666754	IdentifierDecl	row_index		6666679	0					
ANR	6666755	IdentifierDeclType	int		6666679	0					
ANR	6666756	Identifier	row_index		6666679	1					
ANR	6666757	IdentifierDecl	col_index		6666679	1					
ANR	6666758	IdentifierDeclType	int		6666679	0					
ANR	6666759	Identifier	col_index		6666679	1					
ANR	6666760	IdentifierDeclStatement	int row ;	581:2:21829:21836	6666679	14	True				
ANR	6666761	IdentifierDecl	row		6666679	0					
ANR	6666762	IdentifierDeclType	int		6666679	0					
ANR	6666763	Identifier	row		6666679	1					
ANR	6666764	IdentifierDeclStatement	JDIMENSION col ;	582:2:21840:21854	6666679	15	True				
ANR	6666765	IdentifierDecl	col		6666679	0					
ANR	6666766	IdentifierDeclType	JDIMENSION		6666679	0					
ANR	6666767	Identifier	col		6666679	1					
ANR	6666768	IdentifierDeclStatement	JDIMENSION width = cinfo -> output_width ;	583:2:21858:21896	6666679	16	True				
ANR	6666769	IdentifierDecl	width = cinfo -> output_width		6666679	0					
ANR	6666770	IdentifierDeclType	JDIMENSION		6666679	0					
ANR	6666771	Identifier	width		6666679	1					
ANR	6666772	AssignmentExpression	width = cinfo -> output_width		6666679	2		=			
ANR	6666773	Identifier	width		6666679	0					
ANR	6666774	PtrMemberAccess	cinfo -> output_width		6666679	1					
ANR	6666775	Identifier	cinfo		6666679	0					
ANR	6666776	Identifier	output_width		6666679	1					
ANR	6666777	ForStatement	for ( row = 0 ; row < num_rows ; row ++ )		6666679	17					
ANR	6666778	ForInit	row = 0 ;	585:7:21906:21913	6666679	0	True				
ANR	6666779	AssignmentExpression	row = 0		6666679	0		=			
ANR	6666780	Identifier	row		6666679	0					
ANR	6666781	PrimaryExpression	0		6666679	1					
ANR	6666782	Condition	row < num_rows	585:16:21915:21928	6666679	1	True				
ANR	6666783	RelationalExpression	row < num_rows		6666679	0		<			
ANR	6666784	Identifier	row		6666679	0					
ANR	6666785	Identifier	num_rows		6666679	1					
ANR	6666786	PostIncDecOperationExpression	row ++	585:32:21931:21935	6666679	2	True				
ANR	6666787	Identifier	row		6666679	0					
ANR	6666788	IncDec	++		6666679	1					
ANR	6666789	CompoundStatement		17:39:585:585	6666679	3					
ANR	6666790	ExpressionStatement	row_index = cquantize -> row_index	586:4:21944:21976	6666679	0	True				
ANR	6666791	AssignmentExpression	row_index = cquantize -> row_index		6666679	0		=			
ANR	6666792	Identifier	row_index		6666679	0					
ANR	6666793	PtrMemberAccess	cquantize -> row_index		6666679	1					
ANR	6666794	Identifier	cquantize		6666679	0					
ANR	6666795	Identifier	row_index		6666679	1					
ANR	6666796	ExpressionStatement	input_ptr = input_buf [ row ]	587:4:21982:22008	6666679	1	True				
ANR	6666797	AssignmentExpression	input_ptr = input_buf [ row ]		6666679	0		=			
ANR	6666798	Identifier	input_ptr		6666679	0					
ANR	6666799	ArrayIndexing	input_buf [ row ]		6666679	1					
ANR	6666800	Identifier	input_buf		6666679	0					
ANR	6666801	Identifier	row		6666679	1					
ANR	6666802	ExpressionStatement	output_ptr = output_buf [ row ]	588:4:22014:22042	6666679	2	True				
ANR	6666803	AssignmentExpression	output_ptr = output_buf [ row ]		6666679	0		=			
ANR	6666804	Identifier	output_ptr		6666679	0					
ANR	6666805	ArrayIndexing	output_buf [ row ]		6666679	1					
ANR	6666806	Identifier	output_buf		6666679	0					
ANR	6666807	Identifier	row		6666679	1					
ANR	6666808	ExpressionStatement	dither0 = cquantize -> odither [ 0 ] [ row_index ]	589:4:22048:22090	6666679	3	True				
ANR	6666809	AssignmentExpression	dither0 = cquantize -> odither [ 0 ] [ row_index ]		6666679	0		=			
ANR	6666810	Identifier	dither0		6666679	0					
ANR	6666811	ArrayIndexing	cquantize -> odither [ 0 ] [ row_index ]		6666679	1					
ANR	6666812	ArrayIndexing	cquantize -> odither [ 0 ]		6666679	0					
ANR	6666813	PtrMemberAccess	cquantize -> odither		6666679	0					
ANR	6666814	Identifier	cquantize		6666679	0					
ANR	6666815	Identifier	odither		6666679	1					
ANR	6666816	PrimaryExpression	0		6666679	1					
ANR	6666817	Identifier	row_index		6666679	1					
ANR	6666818	ExpressionStatement	dither1 = cquantize -> odither [ 1 ] [ row_index ]	590:4:22096:22138	6666679	4	True				
ANR	6666819	AssignmentExpression	dither1 = cquantize -> odither [ 1 ] [ row_index ]		6666679	0		=			
ANR	6666820	Identifier	dither1		6666679	0					
ANR	6666821	ArrayIndexing	cquantize -> odither [ 1 ] [ row_index ]		6666679	1					
ANR	6666822	ArrayIndexing	cquantize -> odither [ 1 ]		6666679	0					
ANR	6666823	PtrMemberAccess	cquantize -> odither		6666679	0					
ANR	6666824	Identifier	cquantize		6666679	0					
ANR	6666825	Identifier	odither		6666679	1					
ANR	6666826	PrimaryExpression	1		6666679	1					
ANR	6666827	Identifier	row_index		6666679	1					
ANR	6666828	ExpressionStatement	dither2 = cquantize -> odither [ 2 ] [ row_index ]	591:4:22144:22186	6666679	5	True				
ANR	6666829	AssignmentExpression	dither2 = cquantize -> odither [ 2 ] [ row_index ]		6666679	0		=			
ANR	6666830	Identifier	dither2		6666679	0					
ANR	6666831	ArrayIndexing	cquantize -> odither [ 2 ] [ row_index ]		6666679	1					
ANR	6666832	ArrayIndexing	cquantize -> odither [ 2 ]		6666679	0					
ANR	6666833	PtrMemberAccess	cquantize -> odither		6666679	0					
ANR	6666834	Identifier	cquantize		6666679	0					
ANR	6666835	Identifier	odither		6666679	1					
ANR	6666836	PrimaryExpression	2		6666679	1					
ANR	6666837	Identifier	row_index		6666679	1					
ANR	6666838	ExpressionStatement	col_index = 0	592:4:22192:22205	6666679	6	True				
ANR	6666839	AssignmentExpression	col_index = 0		6666679	0		=			
ANR	6666840	Identifier	col_index		6666679	0					
ANR	6666841	PrimaryExpression	0		6666679	1					
ANR	6666842	ForStatement	for ( col = width ; col > 0 ; col -- )		6666679	7					
ANR	6666843	ForInit	col = width ;	594:9:22217:22228	6666679	0	True				
ANR	6666844	AssignmentExpression	col = width		6666679	0		=			
ANR	6666845	Identifier	col		6666679	0					
ANR	6666846	Identifier	width		6666679	1					
ANR	6666847	Condition	col > 0	594:22:22230:22236	6666679	1	True				
ANR	6666848	RelationalExpression	col > 0		6666679	0		>			
ANR	6666849	Identifier	col		6666679	0					
ANR	6666850	PrimaryExpression	0		6666679	1					
ANR	6666851	PostIncDecOperationExpression	col --	594:31:22239:22243	6666679	2	True				
ANR	6666852	Identifier	col		6666679	0					
ANR	6666853	IncDec	--		6666679	1					
ANR	6666854	CompoundStatement		26:38:893:893	6666679	3					
ANR	6666855	ExpressionStatement	pixcode = GETJSAMPLE ( colorindex0 [ GETJSAMPLE ( * input_ptr ++ ) + dither0 [ col_index ] ] )	595:6:22254:22340	6666679	0	True				
ANR	6666856	AssignmentExpression	pixcode = GETJSAMPLE ( colorindex0 [ GETJSAMPLE ( * input_ptr ++ ) + dither0 [ col_index ] ] )		6666679	0		=			
ANR	6666857	Identifier	pixcode		6666679	0					
ANR	6666858	CallExpression	GETJSAMPLE ( colorindex0 [ GETJSAMPLE ( * input_ptr ++ ) + dither0 [ col_index ] ] )		6666679	1					
ANR	6666859	Callee	GETJSAMPLE		6666679	0					
ANR	6666860	Identifier	GETJSAMPLE		6666679	0					
ANR	6666861	ArgumentList	colorindex0 [ GETJSAMPLE ( * input_ptr ++ ) + dither0 [ col_index ] ]		6666679	1					
ANR	6666862	Argument	colorindex0 [ GETJSAMPLE ( * input_ptr ++ ) + dither0 [ col_index ] ]		6666679	0					
ANR	6666863	ArrayIndexing	colorindex0 [ GETJSAMPLE ( * input_ptr ++ ) + dither0 [ col_index ] ]		6666679	0					
ANR	6666864	Identifier	colorindex0		6666679	0					
ANR	6666865	AdditiveExpression	GETJSAMPLE ( * input_ptr ++ ) + dither0 [ col_index ]		6666679	1		+			
ANR	6666866	CallExpression	GETJSAMPLE ( * input_ptr ++ )		6666679	0					
ANR	6666867	Callee	GETJSAMPLE		6666679	0					
ANR	6666868	Identifier	GETJSAMPLE		6666679	0					
ANR	6666869	ArgumentList	* input_ptr ++		6666679	1					
ANR	6666870	Argument	* input_ptr ++		6666679	0					
ANR	6666871	UnaryOperationExpression	* input_ptr ++		6666679	0					
ANR	6666872	UnaryOperator	*		6666679	0					
ANR	6666873	PostIncDecOperationExpression	input_ptr ++		6666679	1					
ANR	6666874	Identifier	input_ptr		6666679	0					
ANR	6666875	IncDec	++		6666679	1					
ANR	6666876	ArrayIndexing	dither0 [ col_index ]		6666679	1					
ANR	6666877	Identifier	dither0		6666679	0					
ANR	6666878	Identifier	col_index		6666679	1					
ANR	6666879	ExpressionStatement	pixcode += GETJSAMPLE ( colorindex1 [ GETJSAMPLE ( * input_ptr ++ ) + dither1 [ col_index ] ] )	597:6:22348:22434	6666679	1	True				
ANR	6666880	AssignmentExpression	pixcode += GETJSAMPLE ( colorindex1 [ GETJSAMPLE ( * input_ptr ++ ) + dither1 [ col_index ] ] )		6666679	0		+=			
ANR	6666881	Identifier	pixcode		6666679	0					
ANR	6666882	CallExpression	GETJSAMPLE ( colorindex1 [ GETJSAMPLE ( * input_ptr ++ ) + dither1 [ col_index ] ] )		6666679	1					
ANR	6666883	Callee	GETJSAMPLE		6666679	0					
ANR	6666884	Identifier	GETJSAMPLE		6666679	0					
ANR	6666885	ArgumentList	colorindex1 [ GETJSAMPLE ( * input_ptr ++ ) + dither1 [ col_index ] ]		6666679	1					
ANR	6666886	Argument	colorindex1 [ GETJSAMPLE ( * input_ptr ++ ) + dither1 [ col_index ] ]		6666679	0					
ANR	6666887	ArrayIndexing	colorindex1 [ GETJSAMPLE ( * input_ptr ++ ) + dither1 [ col_index ] ]		6666679	0					
ANR	6666888	Identifier	colorindex1		6666679	0					
ANR	6666889	AdditiveExpression	GETJSAMPLE ( * input_ptr ++ ) + dither1 [ col_index ]		6666679	1		+			
ANR	6666890	CallExpression	GETJSAMPLE ( * input_ptr ++ )		6666679	0					
ANR	6666891	Callee	GETJSAMPLE		6666679	0					
ANR	6666892	Identifier	GETJSAMPLE		6666679	0					
ANR	6666893	ArgumentList	* input_ptr ++		6666679	1					
ANR	6666894	Argument	* input_ptr ++		6666679	0					
ANR	6666895	UnaryOperationExpression	* input_ptr ++		6666679	0					
ANR	6666896	UnaryOperator	*		6666679	0					
ANR	6666897	PostIncDecOperationExpression	input_ptr ++		6666679	1					
ANR	6666898	Identifier	input_ptr		6666679	0					
ANR	6666899	IncDec	++		6666679	1					
ANR	6666900	ArrayIndexing	dither1 [ col_index ]		6666679	1					
ANR	6666901	Identifier	dither1		6666679	0					
ANR	6666902	Identifier	col_index		6666679	1					
ANR	6666903	ExpressionStatement	pixcode += GETJSAMPLE ( colorindex2 [ GETJSAMPLE ( * input_ptr ++ ) + dither2 [ col_index ] ] )	599:6:22442:22528	6666679	2	True				
ANR	6666904	AssignmentExpression	pixcode += GETJSAMPLE ( colorindex2 [ GETJSAMPLE ( * input_ptr ++ ) + dither2 [ col_index ] ] )		6666679	0		+=			
ANR	6666905	Identifier	pixcode		6666679	0					
ANR	6666906	CallExpression	GETJSAMPLE ( colorindex2 [ GETJSAMPLE ( * input_ptr ++ ) + dither2 [ col_index ] ] )		6666679	1					
ANR	6666907	Callee	GETJSAMPLE		6666679	0					
ANR	6666908	Identifier	GETJSAMPLE		6666679	0					
ANR	6666909	ArgumentList	colorindex2 [ GETJSAMPLE ( * input_ptr ++ ) + dither2 [ col_index ] ]		6666679	1					
ANR	6666910	Argument	colorindex2 [ GETJSAMPLE ( * input_ptr ++ ) + dither2 [ col_index ] ]		6666679	0					
ANR	6666911	ArrayIndexing	colorindex2 [ GETJSAMPLE ( * input_ptr ++ ) + dither2 [ col_index ] ]		6666679	0					
ANR	6666912	Identifier	colorindex2		6666679	0					
ANR	6666913	AdditiveExpression	GETJSAMPLE ( * input_ptr ++ ) + dither2 [ col_index ]		6666679	1		+			
ANR	6666914	CallExpression	GETJSAMPLE ( * input_ptr ++ )		6666679	0					
ANR	6666915	Callee	GETJSAMPLE		6666679	0					
ANR	6666916	Identifier	GETJSAMPLE		6666679	0					
ANR	6666917	ArgumentList	* input_ptr ++		6666679	1					
ANR	6666918	Argument	* input_ptr ++		6666679	0					
ANR	6666919	UnaryOperationExpression	* input_ptr ++		6666679	0					
ANR	6666920	UnaryOperator	*		6666679	0					
ANR	6666921	PostIncDecOperationExpression	input_ptr ++		6666679	1					
ANR	6666922	Identifier	input_ptr		6666679	0					
ANR	6666923	IncDec	++		6666679	1					
ANR	6666924	ArrayIndexing	dither2 [ col_index ]		6666679	1					
ANR	6666925	Identifier	dither2		6666679	0					
ANR	6666926	Identifier	col_index		6666679	1					
ANR	6666927	ExpressionStatement	* output_ptr ++ = ( JSAMPLE ) pixcode	601:6:22536:22569	6666679	3	True				
ANR	6666928	AssignmentExpression	* output_ptr ++ = ( JSAMPLE ) pixcode		6666679	0		=			
ANR	6666929	UnaryOperationExpression	* output_ptr ++		6666679	0					
ANR	6666930	UnaryOperator	*		6666679	0					
ANR	6666931	PostIncDecOperationExpression	output_ptr ++		6666679	1					
ANR	6666932	Identifier	output_ptr		6666679	0					
ANR	6666933	IncDec	++		6666679	1					
ANR	6666934	CastExpression	( JSAMPLE ) pixcode		6666679	1					
ANR	6666935	CastTarget	JSAMPLE		6666679	0					
ANR	6666936	Identifier	pixcode		6666679	1					
ANR	6666937	ExpressionStatement	col_index = ( col_index + 1 ) & ODITHER_MASK	602:6:22577:22619	6666679	4	True				
ANR	6666938	AssignmentExpression	col_index = ( col_index + 1 ) & ODITHER_MASK		6666679	0		=			
ANR	6666939	Identifier	col_index		6666679	0					
ANR	6666940	BitAndExpression	( col_index + 1 ) & ODITHER_MASK		6666679	1		&			
ANR	6666941	AdditiveExpression	col_index + 1		6666679	0		+			
ANR	6666942	Identifier	col_index		6666679	0					
ANR	6666943	PrimaryExpression	1		6666679	1					
ANR	6666944	Identifier	ODITHER_MASK		6666679	1					
ANR	6666945	ExpressionStatement	row_index = ( row_index + 1 ) & ODITHER_MASK	604:4:22631:22673	6666679	8	True				
ANR	6666946	AssignmentExpression	row_index = ( row_index + 1 ) & ODITHER_MASK		6666679	0		=			
ANR	6666947	Identifier	row_index		6666679	0					
ANR	6666948	BitAndExpression	( row_index + 1 ) & ODITHER_MASK		6666679	1		&			
ANR	6666949	AdditiveExpression	row_index + 1		6666679	0		+			
ANR	6666950	Identifier	row_index		6666679	0					
ANR	6666951	PrimaryExpression	1		6666679	1					
ANR	6666952	Identifier	ODITHER_MASK		6666679	1					
ANR	6666953	ExpressionStatement	cquantize -> row_index = row_index	605:4:22679:22711	6666679	9	True				
ANR	6666954	AssignmentExpression	cquantize -> row_index = row_index		6666679	0		=			
ANR	6666955	PtrMemberAccess	cquantize -> row_index		6666679	0					
ANR	6666956	Identifier	cquantize		6666679	0					
ANR	6666957	Identifier	row_index		6666679	1					
ANR	6666958	Identifier	row_index		6666679	1					
ANR	6666959	Identifier	quantize3_ord_dither		6666679	1					
ANR	6666960	ParameterList	"j_decompress_ptr cinfo , JSAMPARRAY input_buf , JSAMPARRAY output_buf , int num_rows"		6666679	2					
ANR	6666961	Parameter	j_decompress_ptr cinfo	566:22:21193:21214	6666679	0	True				
ANR	6666962	ParameterType	j_decompress_ptr		6666679	0					
ANR	6666963	Identifier	cinfo		6666679	1					
ANR	6666964	Parameter	JSAMPARRAY input_buf	566:46:21217:21236	6666679	1	True				
ANR	6666965	ParameterType	JSAMPARRAY		6666679	0					
ANR	6666966	Identifier	input_buf		6666679	1					
ANR	6666967	Parameter	JSAMPARRAY output_buf	567:8:21247:21267	6666679	2	True				
ANR	6666968	ParameterType	JSAMPARRAY		6666679	0					
ANR	6666969	Identifier	output_buf		6666679	1					
ANR	6666970	Parameter	int num_rows	567:31:21270:21281	6666679	3	True				
ANR	6666971	ParameterType	int		6666679	0					
ANR	6666972	Identifier	num_rows		6666679	1					
ANR	6666973	CFGEntryNode	ENTRY		6666679		True				
ANR	6666974	CFGExitNode	EXIT		6666679		True				
ANR	6666975	Symbol	col		6666679						
ANR	6666976	Symbol	col_index		6666679						
ANR	6666977	Symbol	* cquantize -> odither		6666679						
ANR	6666978	Symbol	* row		6666679						
ANR	6666979	Symbol	* cquantize		6666679						
ANR	6666980	Symbol	ODITHER_MASK		6666679						
ANR	6666981	Symbol	row_index		6666679						
ANR	6666982	Symbol	num_rows		6666679						
ANR	6666983	Symbol	* * dither0		6666679						
ANR	6666984	Symbol	* * dither1		6666679						
ANR	6666985	Symbol	* cinfo		6666679						
ANR	6666986	Symbol	output_buf		6666679						
ANR	6666987	Symbol	* colorindex1		6666679						
ANR	6666988	Symbol	* * dither2		6666679						
ANR	6666989	Symbol	* colorindex2		6666679						
ANR	6666990	Symbol	* colorindex0		6666679						
ANR	6666991	Symbol	output_ptr		6666679						
ANR	6666992	Symbol	* output_ptr ++		6666679						
ANR	6666993	Symbol	cinfo		6666679						
ANR	6666994	Symbol	cquantize -> row_index		6666679						
ANR	6666995	Symbol	* output_buf		6666679						
ANR	6666996	Symbol	input_ptr		6666679						
ANR	6666997	Symbol	pixcode		6666679						
ANR	6666998	Symbol	input_buf		6666679						
ANR	6666999	Symbol	* * cquantize -> odither		6666679						
ANR	6667000	Symbol	cquantize		6666679						
ANR	6667001	Symbol	cinfo -> output_width		6666679						
ANR	6667002	Symbol	* * * cquantize		6666679						
ANR	6667003	Symbol	* col_index		6666679						
ANR	6667004	Symbol	* dither2		6666679						
ANR	6667005	Symbol	cquantize -> colorindex		6666679						
ANR	6667006	Symbol	* dither1		6666679						
ANR	6667007	Symbol	row		6666679						
ANR	6667008	Symbol	* row_index		6666679						
ANR	6667009	Symbol	* dither0		6666679						
ANR	6667010	Symbol	* * col_index		6666679						
ANR	6667011	Symbol	* GETJSAMPLE		6666679						
ANR	6667012	Symbol	dither2		6666679						
ANR	6667013	Symbol	dither1		6666679						
ANR	6667014	Symbol	GETJSAMPLE		6666679						
ANR	6667015	Symbol	dither0		6666679						
ANR	6667016	Symbol	* input_ptr ++		6666679						
ANR	6667017	Symbol	cquantize -> odither		6666679						
ANR	6667018	Symbol	* * cquantize		6666679						
ANR	6667019	Symbol	cinfo -> cquantize		6666679						
ANR	6667020	Symbol	colorindex1		6666679						
ANR	6667021	Symbol	width		6666679						
ANR	6667022	Symbol	colorindex2		6666679						
ANR	6667023	Symbol	* cquantize -> colorindex		6666679						
ANR	6667024	Symbol	colorindex0		6666679						
ANR	6667025	Symbol	* input_buf		6666679						
ANR	6667026	Function	quantize_fs_dither	611:0:22737:27047							
ANR	6667027	FunctionDef	"quantize_fs_dither (j_decompress_ptr cinfo , JSAMPARRAY input_buf , JSAMPARRAY output_buf , int num_rows)"		6667026	0					
ANR	6667028	CompoundStatement		614:0:22897:27047	6667026	0					
ANR	6667029	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	615:2:22901:22965	6667026	0	True				
ANR	6667030	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6667026	0					
ANR	6667031	IdentifierDeclType	my_cquantize_ptr		6667026	0					
ANR	6667032	Identifier	cquantize		6667026	1					
ANR	6667033	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6667026	2		=			
ANR	6667034	Identifier	cquantize		6667026	0					
ANR	6667035	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6667026	1					
ANR	6667036	CastTarget	my_cquantize_ptr		6667026	0					
ANR	6667037	PtrMemberAccess	cinfo -> cquantize		6667026	1					
ANR	6667038	Identifier	cinfo		6667026	0					
ANR	6667039	Identifier	cquantize		6667026	1					
ANR	6667040	Statement	register	616:2:22969:22976	6667026	1	True				
ANR	6667041	IdentifierDeclStatement	LOCFSERROR cur ;	616:11:22978:22992	6667026	2	True				
ANR	6667042	IdentifierDecl	cur		6667026	0					
ANR	6667043	IdentifierDeclType	LOCFSERROR		6667026	0					
ANR	6667044	Identifier	cur		6667026	1					
ANR	6667045	IdentifierDeclStatement	LOCFSERROR belowerr ;	617:2:23031:23050	6667026	3	True				
ANR	6667046	IdentifierDecl	belowerr		6667026	0					
ANR	6667047	IdentifierDeclType	LOCFSERROR		6667026	0					
ANR	6667048	Identifier	belowerr		6667026	1					
ANR	6667049	IdentifierDeclStatement	LOCFSERROR bpreverr ;	618:2:23087:23106	6667026	4	True				
ANR	6667050	IdentifierDecl	bpreverr		6667026	0					
ANR	6667051	IdentifierDeclType	LOCFSERROR		6667026	0					
ANR	6667052	Identifier	bpreverr		6667026	1					
ANR	6667053	IdentifierDeclStatement	LOCFSERROR bnexterr ;	619:2:23142:23161	6667026	5	True				
ANR	6667054	IdentifierDecl	bnexterr		6667026	0					
ANR	6667055	IdentifierDeclType	LOCFSERROR		6667026	0					
ANR	6667056	Identifier	bnexterr		6667026	1					
ANR	6667057	IdentifierDeclStatement	LOCFSERROR delta ;	620:2:23197:23213	6667026	6	True				
ANR	6667058	IdentifierDecl	delta		6667026	0					
ANR	6667059	IdentifierDeclType	LOCFSERROR		6667026	0					
ANR	6667060	Identifier	delta		6667026	1					
ANR	6667061	Statement	register	621:2:23217:23224	6667026	7	True				
ANR	6667062	IdentifierDeclStatement	FSERRPTR errorptr ;	621:11:23226:23243	6667026	8	True				
ANR	6667063	IdentifierDecl	errorptr		6667026	0					
ANR	6667064	IdentifierDeclType	FSERRPTR		6667026	0					
ANR	6667065	Identifier	errorptr		6667026	1					
ANR	6667066	Statement	register	622:2:23292:23299	6667026	9	True				
ANR	6667067	IdentifierDeclStatement	JSAMPROW input_ptr ;	622:11:23301:23319	6667026	10	True				
ANR	6667068	IdentifierDecl	input_ptr		6667026	0					
ANR	6667069	IdentifierDeclType	JSAMPROW		6667026	0					
ANR	6667070	Identifier	input_ptr		6667026	1					
ANR	6667071	Statement	register	623:2:23323:23330	6667026	11	True				
ANR	6667072	IdentifierDeclStatement	JSAMPROW output_ptr ;	623:11:23332:23351	6667026	12	True				
ANR	6667073	IdentifierDecl	output_ptr		6667026	0					
ANR	6667074	IdentifierDeclType	JSAMPROW		6667026	0					
ANR	6667075	Identifier	output_ptr		6667026	1					
ANR	6667076	IdentifierDeclStatement	JSAMPROW colorindex_ci ;	624:2:23355:23377	6667026	13	True				
ANR	6667077	IdentifierDecl	colorindex_ci		6667026	0					
ANR	6667078	IdentifierDeclType	JSAMPROW		6667026	0					
ANR	6667079	Identifier	colorindex_ci		6667026	1					
ANR	6667080	IdentifierDeclStatement	JSAMPROW colormap_ci ;	625:2:23381:23401	6667026	14	True				
ANR	6667081	IdentifierDecl	colormap_ci		6667026	0					
ANR	6667082	IdentifierDeclType	JSAMPROW		6667026	0					
ANR	6667083	Identifier	colormap_ci		6667026	1					
ANR	6667084	IdentifierDeclStatement	int pixcode ;	626:2:23405:23416	6667026	15	True				
ANR	6667085	IdentifierDecl	pixcode		6667026	0					
ANR	6667086	IdentifierDeclType	int		6667026	0					
ANR	6667087	Identifier	pixcode		6667026	1					
ANR	6667088	IdentifierDeclStatement	int nc = cinfo -> out_color_components ;	627:2:23420:23456	6667026	16	True				
ANR	6667089	IdentifierDecl	nc = cinfo -> out_color_components		6667026	0					
ANR	6667090	IdentifierDeclType	int		6667026	0					
ANR	6667091	Identifier	nc		6667026	1					
ANR	6667092	AssignmentExpression	nc = cinfo -> out_color_components		6667026	2		=			
ANR	6667093	Identifier	nc		6667026	0					
ANR	6667094	PtrMemberAccess	cinfo -> out_color_components		6667026	1					
ANR	6667095	Identifier	cinfo		6667026	0					
ANR	6667096	Identifier	out_color_components		6667026	1					
ANR	6667097	IdentifierDeclStatement	int dir ;	628:2:23460:23467	6667026	17	True				
ANR	6667098	IdentifierDecl	dir		6667026	0					
ANR	6667099	IdentifierDeclType	int		6667026	0					
ANR	6667100	Identifier	dir		6667026	1					
ANR	6667101	IdentifierDeclStatement	int dirnc ;	629:2:23521:23530	6667026	18	True				
ANR	6667102	IdentifierDecl	dirnc		6667026	0					
ANR	6667103	IdentifierDeclType	int		6667026	0					
ANR	6667104	Identifier	dirnc		6667026	1					
ANR	6667105	IdentifierDeclStatement	int ci ;	630:2:23551:23557	6667026	19	True				
ANR	6667106	IdentifierDecl	ci		6667026	0					
ANR	6667107	IdentifierDeclType	int		6667026	0					
ANR	6667108	Identifier	ci		6667026	1					
ANR	6667109	IdentifierDeclStatement	int row ;	631:2:23561:23568	6667026	20	True				
ANR	6667110	IdentifierDecl	row		6667026	0					
ANR	6667111	IdentifierDeclType	int		6667026	0					
ANR	6667112	Identifier	row		6667026	1					
ANR	6667113	IdentifierDeclStatement	JDIMENSION col ;	632:2:23572:23586	6667026	21	True				
ANR	6667114	IdentifierDecl	col		6667026	0					
ANR	6667115	IdentifierDeclType	JDIMENSION		6667026	0					
ANR	6667116	Identifier	col		6667026	1					
ANR	6667117	IdentifierDeclStatement	JDIMENSION width = cinfo -> output_width ;	633:2:23590:23628	6667026	22	True				
ANR	6667118	IdentifierDecl	width = cinfo -> output_width		6667026	0					
ANR	6667119	IdentifierDeclType	JDIMENSION		6667026	0					
ANR	6667120	Identifier	width		6667026	1					
ANR	6667121	AssignmentExpression	width = cinfo -> output_width		6667026	2		=			
ANR	6667122	Identifier	width		6667026	0					
ANR	6667123	PtrMemberAccess	cinfo -> output_width		6667026	1					
ANR	6667124	Identifier	cinfo		6667026	0					
ANR	6667125	Identifier	output_width		6667026	1					
ANR	6667126	IdentifierDeclStatement	JSAMPLE * range_limit = cinfo -> sample_range_limit ;	634:2:23632:23680	6667026	23	True				
ANR	6667127	IdentifierDecl	* range_limit = cinfo -> sample_range_limit		6667026	0					
ANR	6667128	IdentifierDeclType	JSAMPLE *		6667026	0					
ANR	6667129	Identifier	range_limit		6667026	1					
ANR	6667130	AssignmentExpression	* range_limit = cinfo -> sample_range_limit		6667026	2		=			
ANR	6667131	Identifier	range_limit		6667026	0					
ANR	6667132	PtrMemberAccess	cinfo -> sample_range_limit		6667026	1					
ANR	6667133	Identifier	cinfo		6667026	0					
ANR	6667134	Identifier	sample_range_limit		6667026	1					
ANR	6667135	Statement	SHIFT_TEMPS	635:2:23684:23694	6667026	24	True				
ANR	6667136	ForStatement	for ( row = 0 ; row < num_rows ; row ++ )		6667026	25					
ANR	6667137	ForInit	row = 0 ;	637:7:23704:23711	6667026	0	True				
ANR	6667138	AssignmentExpression	row = 0		6667026	0		=			
ANR	6667139	Identifier	row		6667026	0					
ANR	6667140	PrimaryExpression	0		6667026	1					
ANR	6667141	Condition	row < num_rows	637:16:23713:23726	6667026	1	True				
ANR	6667142	RelationalExpression	row < num_rows		6667026	0		<			
ANR	6667143	Identifier	row		6667026	0					
ANR	6667144	Identifier	num_rows		6667026	1					
ANR	6667145	PostIncDecOperationExpression	row ++	637:32:23729:23733	6667026	2	True				
ANR	6667146	Identifier	row		6667026	0					
ANR	6667147	IncDec	++		6667026	1					
ANR	6667148	CompoundStatement		24:39:838:838	6667026	3					
ANR	6667149	ExpressionStatement	"FMEMZERO ( ( void FAR * ) output_buf [ row ] , ( size_t ) ( width * SIZEOF ( JSAMPLE ) ) )"	639:4:23819:23899	6667026	0	True				
ANR	6667150	CallExpression	"FMEMZERO ( ( void FAR * ) output_buf [ row ] , ( size_t ) ( width * SIZEOF ( JSAMPLE ) ) )"		6667026	0					
ANR	6667151	Callee	FMEMZERO		6667026	0					
ANR	6667152	Identifier	FMEMZERO		6667026	0					
ANR	6667153	ArgumentList	( void FAR * ) output_buf [ row ]		6667026	1					
ANR	6667154	Argument	( void FAR * ) output_buf [ row ]		6667026	0					
ANR	6667155	CastExpression	( void FAR * ) output_buf [ row ]		6667026	0					
ANR	6667156	CastTarget	void FAR *		6667026	0					
ANR	6667157	ArrayIndexing	output_buf [ row ]		6667026	1					
ANR	6667158	Identifier	output_buf		6667026	0					
ANR	6667159	Identifier	row		6667026	1					
ANR	6667160	Argument	( size_t ) ( width * SIZEOF ( JSAMPLE ) )		6667026	1					
ANR	6667161	CastExpression	( size_t ) ( width * SIZEOF ( JSAMPLE ) )		6667026	0					
ANR	6667162	CastTarget	size_t		6667026	0					
ANR	6667163	MultiplicativeExpression	width * SIZEOF ( JSAMPLE )		6667026	1		*			
ANR	6667164	Identifier	width		6667026	0					
ANR	6667165	CallExpression	SIZEOF ( JSAMPLE )		6667026	1					
ANR	6667166	Callee	SIZEOF		6667026	0					
ANR	6667167	Identifier	SIZEOF		6667026	0					
ANR	6667168	ArgumentList	JSAMPLE		6667026	1					
ANR	6667169	Argument	JSAMPLE		6667026	0					
ANR	6667170	Identifier	JSAMPLE		6667026	0					
ANR	6667171	ForStatement	for ( ci = 0 ; ci < nc ; ci ++ )		6667026	1					
ANR	6667172	ForInit	ci = 0 ;	641:9:23910:23916	6667026	0	True				
ANR	6667173	AssignmentExpression	ci = 0		6667026	0		=			
ANR	6667174	Identifier	ci		6667026	0					
ANR	6667175	PrimaryExpression	0		6667026	1					
ANR	6667176	Condition	ci < nc	641:17:23918:23924	6667026	1	True				
ANR	6667177	RelationalExpression	ci < nc		6667026	0		<			
ANR	6667178	Identifier	ci		6667026	0					
ANR	6667179	Identifier	nc		6667026	1					
ANR	6667180	PostIncDecOperationExpression	ci ++	641:26:23927:23930	6667026	2	True				
ANR	6667181	Identifier	ci		6667026	0					
ANR	6667182	IncDec	++		6667026	1					
ANR	6667183	CompoundStatement		28:32:1035:1035	6667026	3					
ANR	6667184	ExpressionStatement	input_ptr = input_buf [ row ] + ci	642:6:23941:23972	6667026	0	True				
ANR	6667185	AssignmentExpression	input_ptr = input_buf [ row ] + ci		6667026	0		=			
ANR	6667186	Identifier	input_ptr		6667026	0					
ANR	6667187	AdditiveExpression	input_buf [ row ] + ci		6667026	1		+			
ANR	6667188	ArrayIndexing	input_buf [ row ]		6667026	0					
ANR	6667189	Identifier	input_buf		6667026	0					
ANR	6667190	Identifier	row		6667026	1					
ANR	6667191	Identifier	ci		6667026	1					
ANR	6667192	ExpressionStatement	output_ptr = output_buf [ row ]	643:6:23980:24008	6667026	1	True				
ANR	6667193	AssignmentExpression	output_ptr = output_buf [ row ]		6667026	0		=			
ANR	6667194	Identifier	output_ptr		6667026	0					
ANR	6667195	ArrayIndexing	output_buf [ row ]		6667026	1					
ANR	6667196	Identifier	output_buf		6667026	0					
ANR	6667197	Identifier	row		6667026	1					
ANR	6667198	IfStatement	if ( cquantize -> on_odd_row )		6667026	2					
ANR	6667199	Condition	cquantize -> on_odd_row	644:10:24020:24040	6667026	0	True				
ANR	6667200	PtrMemberAccess	cquantize -> on_odd_row		6667026	0					
ANR	6667201	Identifier	cquantize		6667026	0					
ANR	6667202	Identifier	on_odd_row		6667026	1					
ANR	6667203	CompoundStatement		31:33:1145:1145	6667026	1					
ANR	6667204	ExpressionStatement	input_ptr += ( width - 1 ) * nc	646:1:24084:24111	6667026	0	True				
ANR	6667205	AssignmentExpression	input_ptr += ( width - 1 ) * nc		6667026	0		+=			
ANR	6667206	Identifier	input_ptr		6667026	0					
ANR	6667207	MultiplicativeExpression	( width - 1 ) * nc		6667026	1		*			
ANR	6667208	AdditiveExpression	width - 1		6667026	0		-			
ANR	6667209	Identifier	width		6667026	0					
ANR	6667210	PrimaryExpression	1		6667026	1					
ANR	6667211	Identifier	nc		6667026	1					
ANR	6667212	ExpressionStatement	output_ptr += width - 1	647:1:24148:24169	6667026	1	True				
ANR	6667213	AssignmentExpression	output_ptr += width - 1		6667026	0		+=			
ANR	6667214	Identifier	output_ptr		6667026	0					
ANR	6667215	AdditiveExpression	width - 1		6667026	1		-			
ANR	6667216	Identifier	width		6667026	0					
ANR	6667217	PrimaryExpression	1		6667026	1					
ANR	6667218	ExpressionStatement	dir = - 1	648:1:24172:24180	6667026	2	True				
ANR	6667219	AssignmentExpression	dir = - 1		6667026	0		=			
ANR	6667220	Identifier	dir		6667026	0					
ANR	6667221	UnaryOperationExpression	- 1		6667026	1					
ANR	6667222	UnaryOperator	-		6667026	0					
ANR	6667223	PrimaryExpression	1		6667026	1					
ANR	6667224	ExpressionStatement	dirnc = - nc	649:1:24183:24194	6667026	3	True				
ANR	6667225	AssignmentExpression	dirnc = - nc		6667026	0		=			
ANR	6667226	Identifier	dirnc		6667026	0					
ANR	6667227	UnaryOperationExpression	- nc		6667026	1					
ANR	6667228	UnaryOperator	-		6667026	0					
ANR	6667229	Identifier	nc		6667026	1					
ANR	6667230	ExpressionStatement	errorptr = cquantize -> fserrors [ ci ] + ( width + 1 )	650:1:24197:24243	6667026	4	True				
ANR	6667231	AssignmentExpression	errorptr = cquantize -> fserrors [ ci ] + ( width + 1 )		6667026	0		=			
ANR	6667232	Identifier	errorptr		6667026	0					
ANR	6667233	AdditiveExpression	cquantize -> fserrors [ ci ] + ( width + 1 )		6667026	1		+			
ANR	6667234	ArrayIndexing	cquantize -> fserrors [ ci ]		6667026	0					
ANR	6667235	PtrMemberAccess	cquantize -> fserrors		6667026	0					
ANR	6667236	Identifier	cquantize		6667026	0					
ANR	6667237	Identifier	fserrors		6667026	1					
ANR	6667238	Identifier	ci		6667026	1					
ANR	6667239	AdditiveExpression	width + 1		6667026	1		+			
ANR	6667240	Identifier	width		6667026	0					
ANR	6667241	PrimaryExpression	1		6667026	1					
ANR	6667242	ElseStatement	else		6667026	0					
ANR	6667243	CompoundStatement		38:13:1393:1393	6667026	0					
ANR	6667244	ExpressionStatement	dir = 1	653:1:24332:24339	6667026	0	True				
ANR	6667245	AssignmentExpression	dir = 1		6667026	0		=			
ANR	6667246	Identifier	dir		6667026	0					
ANR	6667247	PrimaryExpression	1		6667026	1					
ANR	6667248	ExpressionStatement	dirnc = nc	654:1:24342:24352	6667026	1	True				
ANR	6667249	AssignmentExpression	dirnc = nc		6667026	0		=			
ANR	6667250	Identifier	dirnc		6667026	0					
ANR	6667251	Identifier	nc		6667026	1					
ANR	6667252	ExpressionStatement	errorptr = cquantize -> fserrors [ ci ]	655:1:24355:24389	6667026	2	True				
ANR	6667253	AssignmentExpression	errorptr = cquantize -> fserrors [ ci ]		6667026	0		=			
ANR	6667254	Identifier	errorptr		6667026	0					
ANR	6667255	ArrayIndexing	cquantize -> fserrors [ ci ]		6667026	1					
ANR	6667256	PtrMemberAccess	cquantize -> fserrors		6667026	0					
ANR	6667257	Identifier	cquantize		6667026	0					
ANR	6667258	Identifier	fserrors		6667026	1					
ANR	6667259	Identifier	ci		6667026	1					
ANR	6667260	ExpressionStatement	colorindex_ci = cquantize -> colorindex [ ci ]	657:6:24440:24481	6667026	3	True				
ANR	6667261	AssignmentExpression	colorindex_ci = cquantize -> colorindex [ ci ]		6667026	0		=			
ANR	6667262	Identifier	colorindex_ci		6667026	0					
ANR	6667263	ArrayIndexing	cquantize -> colorindex [ ci ]		6667026	1					
ANR	6667264	PtrMemberAccess	cquantize -> colorindex		6667026	0					
ANR	6667265	Identifier	cquantize		6667026	0					
ANR	6667266	Identifier	colorindex		6667026	1					
ANR	6667267	Identifier	ci		6667026	1					
ANR	6667268	ExpressionStatement	colormap_ci = cquantize -> sv_colormap [ ci ]	658:6:24489:24529	6667026	4	True				
ANR	6667269	AssignmentExpression	colormap_ci = cquantize -> sv_colormap [ ci ]		6667026	0		=			
ANR	6667270	Identifier	colormap_ci		6667026	0					
ANR	6667271	ArrayIndexing	cquantize -> sv_colormap [ ci ]		6667026	1					
ANR	6667272	PtrMemberAccess	cquantize -> sv_colormap		6667026	0					
ANR	6667273	Identifier	cquantize		6667026	0					
ANR	6667274	Identifier	sv_colormap		6667026	1					
ANR	6667275	Identifier	ci		6667026	1					
ANR	6667276	ExpressionStatement	cur = 0	660:6:24615:24622	6667026	5	True				
ANR	6667277	AssignmentExpression	cur = 0		6667026	0		=			
ANR	6667278	Identifier	cur		6667026	0					
ANR	6667279	PrimaryExpression	0		6667026	1					
ANR	6667280	ExpressionStatement	belowerr = bpreverr = 0	662:6:24683:24706	6667026	6	True				
ANR	6667281	AssignmentExpression	belowerr = bpreverr = 0		6667026	0		=			
ANR	6667282	Identifier	belowerr		6667026	0					
ANR	6667283	AssignmentExpression	bpreverr = 0		6667026	1		=			
ANR	6667284	Identifier	bpreverr		6667026	0					
ANR	6667285	PrimaryExpression	0		6667026	1					
ANR	6667286	ForStatement	for ( col = width ; col > 0 ; col -- )		6667026	7					
ANR	6667287	ForInit	col = width ;	664:11:24720:24731	6667026	0	True				
ANR	6667288	AssignmentExpression	col = width		6667026	0		=			
ANR	6667289	Identifier	col		6667026	0					
ANR	6667290	Identifier	width		6667026	1					
ANR	6667291	Condition	col > 0	664:24:24733:24739	6667026	1	True				
ANR	6667292	RelationalExpression	col > 0		6667026	0		>			
ANR	6667293	Identifier	col		6667026	0					
ANR	6667294	PrimaryExpression	0		6667026	1					
ANR	6667295	PostIncDecOperationExpression	col --	664:33:24742:24746	6667026	2	True				
ANR	6667296	Identifier	col		6667026	0					
ANR	6667297	IncDec	--		6667026	1					
ANR	6667298	CompoundStatement		51:40:1851:1851	6667026	3					
ANR	6667299	ExpressionStatement	"cur = RIGHT_SHIFT ( cur + errorptr [ dir ] + 8 , 4 )"	673:1:25195:25240	6667026	0	True				
ANR	6667300	AssignmentExpression	"cur = RIGHT_SHIFT ( cur + errorptr [ dir ] + 8 , 4 )"		6667026	0		=			
ANR	6667301	Identifier	cur		6667026	0					
ANR	6667302	CallExpression	"RIGHT_SHIFT ( cur + errorptr [ dir ] + 8 , 4 )"		6667026	1					
ANR	6667303	Callee	RIGHT_SHIFT		6667026	0					
ANR	6667304	Identifier	RIGHT_SHIFT		6667026	0					
ANR	6667305	ArgumentList	cur + errorptr [ dir ] + 8		6667026	1					
ANR	6667306	Argument	cur + errorptr [ dir ] + 8		6667026	0					
ANR	6667307	AdditiveExpression	cur + errorptr [ dir ] + 8		6667026	0		+			
ANR	6667308	Identifier	cur		6667026	0					
ANR	6667309	AdditiveExpression	errorptr [ dir ] + 8		6667026	1		+			
ANR	6667310	ArrayIndexing	errorptr [ dir ]		6667026	0					
ANR	6667311	Identifier	errorptr		6667026	0					
ANR	6667312	Identifier	dir		6667026	1					
ANR	6667313	PrimaryExpression	8		6667026	1					
ANR	6667314	Argument	4		6667026	1					
ANR	6667315	PrimaryExpression	4		6667026	0					
ANR	6667316	ExpressionStatement	cur += GETJSAMPLE ( * input_ptr )	678:1:25410:25439	6667026	1	True				
ANR	6667317	AssignmentExpression	cur += GETJSAMPLE ( * input_ptr )		6667026	0		+=			
ANR	6667318	Identifier	cur		6667026	0					
ANR	6667319	CallExpression	GETJSAMPLE ( * input_ptr )		6667026	1					
ANR	6667320	Callee	GETJSAMPLE		6667026	0					
ANR	6667321	Identifier	GETJSAMPLE		6667026	0					
ANR	6667322	ArgumentList	* input_ptr		6667026	1					
ANR	6667323	Argument	* input_ptr		6667026	0					
ANR	6667324	UnaryOperationExpression	* input_ptr		6667026	0					
ANR	6667325	UnaryOperator	*		6667026	0					
ANR	6667326	Identifier	input_ptr		6667026	1					
ANR	6667327	ExpressionStatement	cur = GETJSAMPLE ( range_limit [ cur ] )	679:1:25442:25476	6667026	2	True				
ANR	6667328	AssignmentExpression	cur = GETJSAMPLE ( range_limit [ cur ] )		6667026	0		=			
ANR	6667329	Identifier	cur		6667026	0					
ANR	6667330	CallExpression	GETJSAMPLE ( range_limit [ cur ] )		6667026	1					
ANR	6667331	Callee	GETJSAMPLE		6667026	0					
ANR	6667332	Identifier	GETJSAMPLE		6667026	0					
ANR	6667333	ArgumentList	range_limit [ cur ]		6667026	1					
ANR	6667334	Argument	range_limit [ cur ]		6667026	0					
ANR	6667335	ArrayIndexing	range_limit [ cur ]		6667026	0					
ANR	6667336	Identifier	range_limit		6667026	0					
ANR	6667337	Identifier	cur		6667026	1					
ANR	6667338	ExpressionStatement	pixcode = GETJSAMPLE ( colorindex_ci [ cur ] )	681:1:25550:25590	6667026	3	True				
ANR	6667339	AssignmentExpression	pixcode = GETJSAMPLE ( colorindex_ci [ cur ] )		6667026	0		=			
ANR	6667340	Identifier	pixcode		6667026	0					
ANR	6667341	CallExpression	GETJSAMPLE ( colorindex_ci [ cur ] )		6667026	1					
ANR	6667342	Callee	GETJSAMPLE		6667026	0					
ANR	6667343	Identifier	GETJSAMPLE		6667026	0					
ANR	6667344	ArgumentList	colorindex_ci [ cur ]		6667026	1					
ANR	6667345	Argument	colorindex_ci [ cur ]		6667026	0					
ANR	6667346	ArrayIndexing	colorindex_ci [ cur ]		6667026	0					
ANR	6667347	Identifier	colorindex_ci		6667026	0					
ANR	6667348	Identifier	cur		6667026	1					
ANR	6667349	ExpressionStatement	* output_ptr += ( JSAMPLE ) pixcode	682:1:25593:25625	6667026	4	True				
ANR	6667350	AssignmentExpression	* output_ptr += ( JSAMPLE ) pixcode		6667026	0		+=			
ANR	6667351	UnaryOperationExpression	* output_ptr		6667026	0					
ANR	6667352	UnaryOperator	*		6667026	0					
ANR	6667353	Identifier	output_ptr		6667026	1					
ANR	6667354	CastExpression	( JSAMPLE ) pixcode		6667026	1					
ANR	6667355	CastTarget	JSAMPLE		6667026	0					
ANR	6667356	Identifier	pixcode		6667026	1					
ANR	6667357	ExpressionStatement	cur -= GETJSAMPLE ( colormap_ci [ pixcode ] )	686:1:25804:25843	6667026	5	True				
ANR	6667358	AssignmentExpression	cur -= GETJSAMPLE ( colormap_ci [ pixcode ] )		6667026	0		-=			
ANR	6667359	Identifier	cur		6667026	0					
ANR	6667360	CallExpression	GETJSAMPLE ( colormap_ci [ pixcode ] )		6667026	1					
ANR	6667361	Callee	GETJSAMPLE		6667026	0					
ANR	6667362	Identifier	GETJSAMPLE		6667026	0					
ANR	6667363	ArgumentList	colormap_ci [ pixcode ]		6667026	1					
ANR	6667364	Argument	colormap_ci [ pixcode ]		6667026	0					
ANR	6667365	ArrayIndexing	colormap_ci [ pixcode ]		6667026	0					
ANR	6667366	Identifier	colormap_ci		6667026	0					
ANR	6667367	Identifier	pixcode		6667026	1					
ANR	6667368	ExpressionStatement	bnexterr = cur	691:1:26025:26039	6667026	6	True				
ANR	6667369	AssignmentExpression	bnexterr = cur		6667026	0		=			
ANR	6667370	Identifier	bnexterr		6667026	0					
ANR	6667371	Identifier	cur		6667026	1					
ANR	6667372	ExpressionStatement	delta = cur * 2	692:1:26042:26057	6667026	7	True				
ANR	6667373	AssignmentExpression	delta = cur * 2		6667026	0		=			
ANR	6667374	Identifier	delta		6667026	0					
ANR	6667375	MultiplicativeExpression	cur * 2		6667026	1		*			
ANR	6667376	Identifier	cur		6667026	0					
ANR	6667377	PrimaryExpression	2		6667026	1					
ANR	6667378	ExpressionStatement	cur += delta	693:1:26060:26072	6667026	8	True				
ANR	6667379	AssignmentExpression	cur += delta		6667026	0		+=			
ANR	6667380	Identifier	cur		6667026	0					
ANR	6667381	Identifier	delta		6667026	1					
ANR	6667382	ExpressionStatement	errorptr [ 0 ] = ( FSERROR ) ( bpreverr + cur )	694:1:26097:26137	6667026	9	True				
ANR	6667383	AssignmentExpression	errorptr [ 0 ] = ( FSERROR ) ( bpreverr + cur )		6667026	0		=			
ANR	6667384	ArrayIndexing	errorptr [ 0 ]		6667026	0					
ANR	6667385	Identifier	errorptr		6667026	0					
ANR	6667386	PrimaryExpression	0		6667026	1					
ANR	6667387	CastExpression	( FSERROR ) ( bpreverr + cur )		6667026	1					
ANR	6667388	CastTarget	FSERROR		6667026	0					
ANR	6667389	AdditiveExpression	bpreverr + cur		6667026	1		+			
ANR	6667390	Identifier	bpreverr		6667026	0					
ANR	6667391	Identifier	cur		6667026	1					
ANR	6667392	ExpressionStatement	cur += delta	695:1:26140:26152	6667026	10	True				
ANR	6667393	AssignmentExpression	cur += delta		6667026	0		+=			
ANR	6667394	Identifier	cur		6667026	0					
ANR	6667395	Identifier	delta		6667026	1					
ANR	6667396	ExpressionStatement	bpreverr = belowerr + cur	696:1:26177:26202	6667026	11	True				
ANR	6667397	AssignmentExpression	bpreverr = belowerr + cur		6667026	0		=			
ANR	6667398	Identifier	bpreverr		6667026	0					
ANR	6667399	AdditiveExpression	belowerr + cur		6667026	1		+			
ANR	6667400	Identifier	belowerr		6667026	0					
ANR	6667401	Identifier	cur		6667026	1					
ANR	6667402	ExpressionStatement	belowerr = bnexterr	697:1:26205:26224	6667026	12	True				
ANR	6667403	AssignmentExpression	belowerr = bnexterr		6667026	0		=			
ANR	6667404	Identifier	belowerr		6667026	0					
ANR	6667405	Identifier	bnexterr		6667026	1					
ANR	6667406	ExpressionStatement	cur += delta	698:1:26227:26239	6667026	13	True				
ANR	6667407	AssignmentExpression	cur += delta		6667026	0		+=			
ANR	6667408	Identifier	cur		6667026	0					
ANR	6667409	Identifier	delta		6667026	1					
ANR	6667410	ExpressionStatement	input_ptr += dirnc	703:1:26481:26499	6667026	14	True				
ANR	6667411	AssignmentExpression	input_ptr += dirnc		6667026	0		+=			
ANR	6667412	Identifier	input_ptr		6667026	0					
ANR	6667413	Identifier	dirnc		6667026	1					
ANR	6667414	ExpressionStatement	output_ptr += dir	704:1:26541:26558	6667026	15	True				
ANR	6667415	AssignmentExpression	output_ptr += dir		6667026	0		+=			
ANR	6667416	Identifier	output_ptr		6667026	0					
ANR	6667417	Identifier	dir		6667026	1					
ANR	6667418	ExpressionStatement	errorptr += dir	705:1:26601:26616	6667026	16	True				
ANR	6667419	AssignmentExpression	errorptr += dir		6667026	0		+=			
ANR	6667420	Identifier	errorptr		6667026	0					
ANR	6667421	Identifier	dir		6667026	1					
ANR	6667422	ExpressionStatement	errorptr [ 0 ] = ( FSERROR ) bpreverr	711:6:26902:26934	6667026	8	True				
ANR	6667423	AssignmentExpression	errorptr [ 0 ] = ( FSERROR ) bpreverr		6667026	0		=			
ANR	6667424	ArrayIndexing	errorptr [ 0 ]		6667026	0					
ANR	6667425	Identifier	errorptr		6667026	0					
ANR	6667426	PrimaryExpression	0		6667026	1					
ANR	6667427	CastExpression	( FSERROR ) bpreverr		6667026	1					
ANR	6667428	CastTarget	FSERROR		6667026	0					
ANR	6667429	Identifier	bpreverr		6667026	1					
ANR	6667430	ExpressionStatement	cquantize -> on_odd_row = ( cquantize -> on_odd_row ? FALSE : TRUE )	713:4:26979:27041	6667026	2	True				
ANR	6667431	AssignmentExpression	cquantize -> on_odd_row = ( cquantize -> on_odd_row ? FALSE : TRUE )		6667026	0		=			
ANR	6667432	PtrMemberAccess	cquantize -> on_odd_row		6667026	0					
ANR	6667433	Identifier	cquantize		6667026	0					
ANR	6667434	Identifier	on_odd_row		6667026	1					
ANR	6667435	ConditionalExpression	cquantize -> on_odd_row ? FALSE : TRUE		6667026	1					
ANR	6667436	Condition	cquantize -> on_odd_row		6667026	0					
ANR	6667437	PtrMemberAccess	cquantize -> on_odd_row		6667026	0					
ANR	6667438	Identifier	cquantize		6667026	0					
ANR	6667439	Identifier	on_odd_row		6667026	1					
ANR	6667440	Identifier	FALSE		6667026	1					
ANR	6667441	Identifier	TRUE		6667026	2					
ANR	6667442	Identifier	quantize_fs_dither		6667026	1					
ANR	6667443	ParameterList	"j_decompress_ptr cinfo , JSAMPARRAY input_buf , JSAMPARRAY output_buf , int num_rows"		6667026	2					
ANR	6667444	Parameter	j_decompress_ptr cinfo	611:20:22757:22778	6667026	0	True				
ANR	6667445	ParameterType	j_decompress_ptr		6667026	0					
ANR	6667446	Identifier	cinfo		6667026	1					
ANR	6667447	Parameter	JSAMPARRAY input_buf	611:44:22781:22800	6667026	1	True				
ANR	6667448	ParameterType	JSAMPARRAY		6667026	0					
ANR	6667449	Identifier	input_buf		6667026	1					
ANR	6667450	Parameter	JSAMPARRAY output_buf	612:6:22809:22829	6667026	2	True				
ANR	6667451	ParameterType	JSAMPARRAY		6667026	0					
ANR	6667452	Identifier	output_buf		6667026	1					
ANR	6667453	Parameter	int num_rows	612:29:22832:22843	6667026	3	True				
ANR	6667454	ParameterType	int		6667026	0					
ANR	6667455	Identifier	num_rows		6667026	1					
ANR	6667456	CFGEntryNode	ENTRY		6667026		True				
ANR	6667457	CFGExitNode	EXIT		6667026		True				
ANR	6667458	Symbol	col		6667026						
ANR	6667459	Symbol	RIGHT_SHIFT		6667026						
ANR	6667460	Symbol	* row		6667026						
ANR	6667461	Symbol	* pixcode		6667026						
ANR	6667462	Symbol	delta		6667026						
ANR	6667463	Symbol	bpreverr		6667026						
ANR	6667464	Symbol	dir		6667026						
ANR	6667465	Symbol	* cquantize		6667026						
ANR	6667466	Symbol	* colorindex_ci		6667026						
ANR	6667467	Symbol	* ci		6667026						
ANR	6667468	Symbol	colormap_ci		6667026						
ANR	6667469	Symbol	JSAMPLE		6667026						
ANR	6667470	Symbol	cquantize -> sv_colormap		6667026						
ANR	6667471	Symbol	* cur		6667026						
ANR	6667472	Symbol	cquantize -> fserrors		6667026						
ANR	6667473	Symbol	cinfo -> out_color_components		6667026						
ANR	6667474	Symbol	num_rows		6667026						
ANR	6667475	Symbol	* cinfo		6667026						
ANR	6667476	Symbol	output_buf		6667026						
ANR	6667477	Symbol	output_ptr		6667026						
ANR	6667478	Symbol	TRUE		6667026						
ANR	6667479	Symbol	dirnc		6667026						
ANR	6667480	Symbol	belowerr		6667026						
ANR	6667481	Symbol	cinfo		6667026						
ANR	6667482	Symbol	nc		6667026						
ANR	6667483	Symbol	* output_ptr		6667026						
ANR	6667484	Symbol	* range_limit		6667026						
ANR	6667485	Symbol	* output_buf		6667026						
ANR	6667486	Symbol	input_ptr		6667026						
ANR	6667487	Symbol	bnexterr		6667026						
ANR	6667488	Symbol	pixcode		6667026						
ANR	6667489	Symbol	input_buf		6667026						
ANR	6667490	Symbol	cur		6667026						
ANR	6667491	Symbol	cinfo -> sample_range_limit		6667026						
ANR	6667492	Symbol	* cquantize -> fserrors		6667026						
ANR	6667493	Symbol	* colormap_ci		6667026						
ANR	6667494	Symbol	SIZEOF		6667026						
ANR	6667495	Symbol	* dir		6667026						
ANR	6667496	Symbol	cquantize		6667026						
ANR	6667497	Symbol	cinfo -> output_width		6667026						
ANR	6667498	Symbol	* errorptr		6667026						
ANR	6667499	Symbol	errorptr		6667026						
ANR	6667500	Symbol	cquantize -> colorindex		6667026						
ANR	6667501	Symbol	row		6667026						
ANR	6667502	Symbol	GETJSAMPLE		6667026						
ANR	6667503	Symbol	colorindex_ci		6667026						
ANR	6667504	Symbol	ci		6667026						
ANR	6667505	Symbol	* * cquantize		6667026						
ANR	6667506	Symbol	cinfo -> cquantize		6667026						
ANR	6667507	Symbol	* input_ptr		6667026						
ANR	6667508	Symbol	width		6667026						
ANR	6667509	Symbol	range_limit		6667026						
ANR	6667510	Symbol	cquantize -> on_odd_row		6667026						
ANR	6667511	Symbol	* cquantize -> colorindex		6667026						
ANR	6667512	Symbol	* cquantize -> sv_colormap		6667026						
ANR	6667513	Symbol	FALSE		6667026						
ANR	6667514	Symbol	* input_buf		6667026						
ANR	6667515	Function	alloc_fs_workspace	723:0:27121:27513							
ANR	6667516	FunctionDef	alloc_fs_workspace (j_decompress_ptr cinfo)		6667515	0					
ANR	6667517	CompoundStatement		724:0:27165:27513	6667515	0					
ANR	6667518	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	725:2:27169:27233	6667515	0	True				
ANR	6667519	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6667515	0					
ANR	6667520	IdentifierDeclType	my_cquantize_ptr		6667515	0					
ANR	6667521	Identifier	cquantize		6667515	1					
ANR	6667522	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6667515	2		=			
ANR	6667523	Identifier	cquantize		6667515	0					
ANR	6667524	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6667515	1					
ANR	6667525	CastTarget	my_cquantize_ptr		6667515	0					
ANR	6667526	PtrMemberAccess	cinfo -> cquantize		6667515	1					
ANR	6667527	Identifier	cinfo		6667515	0					
ANR	6667528	Identifier	cquantize		6667515	1					
ANR	6667529	IdentifierDeclStatement	size_t arraysize ;	726:2:27237:27253	6667515	1	True				
ANR	6667530	IdentifierDecl	arraysize		6667515	0					
ANR	6667531	IdentifierDeclType	size_t		6667515	0					
ANR	6667532	Identifier	arraysize		6667515	1					
ANR	6667533	IdentifierDeclStatement	int i ;	727:2:27257:27262	6667515	2	True				
ANR	6667534	IdentifierDecl	i		6667515	0					
ANR	6667535	IdentifierDeclType	int		6667515	0					
ANR	6667536	Identifier	i		6667515	1					
ANR	6667537	ExpressionStatement	arraysize = ( size_t ) ( ( cinfo -> output_width + 2 ) * SIZEOF ( FSERROR ) )	729:2:27267:27333	6667515	3	True				
ANR	6667538	AssignmentExpression	arraysize = ( size_t ) ( ( cinfo -> output_width + 2 ) * SIZEOF ( FSERROR ) )		6667515	0		=			
ANR	6667539	Identifier	arraysize		6667515	0					
ANR	6667540	CastExpression	( size_t ) ( ( cinfo -> output_width + 2 ) * SIZEOF ( FSERROR ) )		6667515	1					
ANR	6667541	CastTarget	size_t		6667515	0					
ANR	6667542	MultiplicativeExpression	( cinfo -> output_width + 2 ) * SIZEOF ( FSERROR )		6667515	1		*			
ANR	6667543	AdditiveExpression	cinfo -> output_width + 2		6667515	0		+			
ANR	6667544	PtrMemberAccess	cinfo -> output_width		6667515	0					
ANR	6667545	Identifier	cinfo		6667515	0					
ANR	6667546	Identifier	output_width		6667515	1					
ANR	6667547	PrimaryExpression	2		6667515	1					
ANR	6667548	CallExpression	SIZEOF ( FSERROR )		6667515	1					
ANR	6667549	Callee	SIZEOF		6667515	0					
ANR	6667550	Identifier	SIZEOF		6667515	0					
ANR	6667551	ArgumentList	FSERROR		6667515	1					
ANR	6667552	Argument	FSERROR		6667515	0					
ANR	6667553	Identifier	FSERROR		6667515	0					
ANR	6667554	ForStatement	for ( i = 0 ; i < cinfo -> out_color_components ; i ++ )		6667515	4					
ANR	6667555	ForInit	i = 0 ;	730:7:27342:27347	6667515	0	True				
ANR	6667556	AssignmentExpression	i = 0		6667515	0		=			
ANR	6667557	Identifier	i		6667515	0					
ANR	6667558	PrimaryExpression	0		6667515	1					
ANR	6667559	Condition	i < cinfo -> out_color_components	730:14:27349:27379	6667515	1	True				
ANR	6667560	RelationalExpression	i < cinfo -> out_color_components		6667515	0		<			
ANR	6667561	Identifier	i		6667515	0					
ANR	6667562	PtrMemberAccess	cinfo -> out_color_components		6667515	1					
ANR	6667563	Identifier	cinfo		6667515	0					
ANR	6667564	Identifier	out_color_components		6667515	1					
ANR	6667565	PostIncDecOperationExpression	i ++	730:47:27382:27384	6667515	2	True				
ANR	6667566	Identifier	i		6667515	0					
ANR	6667567	IncDec	++		6667515	1					
ANR	6667568	CompoundStatement		7:52:221:221	6667515	3					
ANR	6667569	ExpressionStatement	"cquantize -> fserrors [ i ] = ( FSERRPTR ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , arraysize )"	731:4:27393:27507	6667515	0	True				
ANR	6667570	AssignmentExpression	"cquantize -> fserrors [ i ] = ( FSERRPTR ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , arraysize )"		6667515	0		=			
ANR	6667571	ArrayIndexing	cquantize -> fserrors [ i ]		6667515	0					
ANR	6667572	PtrMemberAccess	cquantize -> fserrors		6667515	0					
ANR	6667573	Identifier	cquantize		6667515	0					
ANR	6667574	Identifier	fserrors		6667515	1					
ANR	6667575	Identifier	i		6667515	1					
ANR	6667576	CastExpression	"( FSERRPTR ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , arraysize )"		6667515	1					
ANR	6667577	CastTarget	FSERRPTR		6667515	0					
ANR	6667578	CallExpression	"( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , arraysize )"		6667515	1					
ANR	6667579	Callee	* cinfo -> mem -> alloc_large		6667515	0					
ANR	6667580	UnaryOperationExpression	* cinfo -> mem -> alloc_large		6667515	0					
ANR	6667581	UnaryOperator	*		6667515	0					
ANR	6667582	PtrMemberAccess	cinfo -> mem -> alloc_large		6667515	1					
ANR	6667583	PtrMemberAccess	cinfo -> mem		6667515	0					
ANR	6667584	Identifier	cinfo		6667515	0					
ANR	6667585	Identifier	mem		6667515	1					
ANR	6667586	Identifier	alloc_large		6667515	1					
ANR	6667587	ArgumentList	( j_common_ptr ) cinfo		6667515	1					
ANR	6667588	Argument	( j_common_ptr ) cinfo		6667515	0					
ANR	6667589	CastExpression	( j_common_ptr ) cinfo		6667515	0					
ANR	6667590	CastTarget	j_common_ptr		6667515	0					
ANR	6667591	Identifier	cinfo		6667515	1					
ANR	6667592	Argument	JPOOL_IMAGE		6667515	1					
ANR	6667593	Identifier	JPOOL_IMAGE		6667515	0					
ANR	6667594	Argument	arraysize		6667515	2					
ANR	6667595	Identifier	arraysize		6667515	0					
ANR	6667596	Identifier	alloc_fs_workspace		6667515	1					
ANR	6667597	ParameterList	j_decompress_ptr cinfo		6667515	2					
ANR	6667598	Parameter	j_decompress_ptr cinfo	723:20:27141:27162	6667515	0	True				
ANR	6667599	ParameterType	j_decompress_ptr		6667515	0					
ANR	6667600	Identifier	cinfo		6667515	1					
ANR	6667601	CFGEntryNode	ENTRY		6667515		True				
ANR	6667602	CFGExitNode	EXIT		6667515		True				
ANR	6667603	Symbol	* * cinfo		6667515						
ANR	6667604	Symbol	* * cinfo -> mem		6667515						
ANR	6667605	Symbol	* cquantize -> fserrors		6667515						
ANR	6667606	Symbol	* cinfo -> mem -> alloc_large		6667515						
ANR	6667607	Symbol	arraysize		6667515						
ANR	6667608	Symbol	SIZEOF		6667515						
ANR	6667609	Symbol	i		6667515						
ANR	6667610	Symbol	JPOOL_IMAGE		6667515						
ANR	6667611	Symbol	cquantize		6667515						
ANR	6667612	Symbol	* cquantize		6667515						
ANR	6667613	Symbol	cinfo -> output_width		6667515						
ANR	6667614	Symbol	* * cquantize		6667515						
ANR	6667615	Symbol	* cinfo -> mem		6667515						
ANR	6667616	Symbol	cinfo -> cquantize		6667515						
ANR	6667617	Symbol	FSERROR		6667515						
ANR	6667618	Symbol	* i		6667515						
ANR	6667619	Symbol	cinfo		6667515						
ANR	6667620	Symbol	cinfo -> mem		6667515						
ANR	6667621	Symbol	cquantize -> fserrors		6667515						
ANR	6667622	Symbol	cinfo -> out_color_components		6667515						
ANR	6667623	Symbol	* * * cinfo		6667515						
ANR	6667624	Symbol	cinfo -> mem -> alloc_large		6667515						
ANR	6667625	Symbol	* cinfo		6667515						
ANR	6667626	Function	start_pass_1_quant	742:0:27588:29430							
ANR	6667627	FunctionDef	"start_pass_1_quant (j_decompress_ptr cinfo , boolean is_pre_scan)"		6667626	0					
ANR	6667628	CompoundStatement		743:0:27653:29430	6667626	0					
ANR	6667629	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	744:2:27657:27721	6667626	0	True				
ANR	6667630	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6667626	0					
ANR	6667631	IdentifierDeclType	my_cquantize_ptr		6667626	0					
ANR	6667632	Identifier	cquantize		6667626	1					
ANR	6667633	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6667626	2		=			
ANR	6667634	Identifier	cquantize		6667626	0					
ANR	6667635	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6667626	1					
ANR	6667636	CastTarget	my_cquantize_ptr		6667626	0					
ANR	6667637	PtrMemberAccess	cinfo -> cquantize		6667626	1					
ANR	6667638	Identifier	cinfo		6667626	0					
ANR	6667639	Identifier	cquantize		6667626	1					
ANR	6667640	IdentifierDeclStatement	size_t arraysize ;	745:2:27725:27741	6667626	1	True				
ANR	6667641	IdentifierDecl	arraysize		6667626	0					
ANR	6667642	IdentifierDeclType	size_t		6667626	0					
ANR	6667643	Identifier	arraysize		6667626	1					
ANR	6667644	IdentifierDeclStatement	int i ;	746:2:27745:27750	6667626	2	True				
ANR	6667645	IdentifierDecl	i		6667626	0					
ANR	6667646	IdentifierDeclType	int		6667626	0					
ANR	6667647	Identifier	i		6667626	1					
ANR	6667648	ExpressionStatement	cinfo -> colormap = cquantize -> sv_colormap	749:2:27784:27824	6667626	3	True				
ANR	6667649	AssignmentExpression	cinfo -> colormap = cquantize -> sv_colormap		6667626	0		=			
ANR	6667650	PtrMemberAccess	cinfo -> colormap		6667626	0					
ANR	6667651	Identifier	cinfo		6667626	0					
ANR	6667652	Identifier	colormap		6667626	1					
ANR	6667653	PtrMemberAccess	cquantize -> sv_colormap		6667626	1					
ANR	6667654	Identifier	cquantize		6667626	0					
ANR	6667655	Identifier	sv_colormap		6667626	1					
ANR	6667656	ExpressionStatement	cinfo -> actual_number_of_colors = cquantize -> sv_actual	750:2:27828:27881	6667626	4	True				
ANR	6667657	AssignmentExpression	cinfo -> actual_number_of_colors = cquantize -> sv_actual		6667626	0		=			
ANR	6667658	PtrMemberAccess	cinfo -> actual_number_of_colors		6667626	0					
ANR	6667659	Identifier	cinfo		6667626	0					
ANR	6667660	Identifier	actual_number_of_colors		6667626	1					
ANR	6667661	PtrMemberAccess	cquantize -> sv_actual		6667626	1					
ANR	6667662	Identifier	cquantize		6667626	0					
ANR	6667663	Identifier	sv_actual		6667626	1					
ANR	6667664	SwitchStatement	switch ( cinfo -> dither_mode )		6667626	5					
ANR	6667665	Condition	cinfo -> dither_mode	753:10:27941:27958	6667626	0	True				
ANR	6667666	PtrMemberAccess	cinfo -> dither_mode		6667626	0					
ANR	6667667	Identifier	cinfo		6667626	0					
ANR	6667668	Identifier	dither_mode		6667626	1					
ANR	6667669	CompoundStatement		11:30:307:307	6667626	1					
ANR	6667670	Label	case JDITHER_NONE :	754:2:27965:27982	6667626	0	True				
ANR	6667671	Identifier	JDITHER_NONE		6667626	0					
ANR	6667672	IfStatement	if ( cinfo -> out_color_components == 3 )		6667626	1					
ANR	6667673	Condition	cinfo -> out_color_components == 3	755:8:27992:28023	6667626	0	True				
ANR	6667674	EqualityExpression	cinfo -> out_color_components == 3		6667626	0		==			
ANR	6667675	PtrMemberAccess	cinfo -> out_color_components		6667626	0					
ANR	6667676	Identifier	cinfo		6667626	0					
ANR	6667677	Identifier	out_color_components		6667626	1					
ANR	6667678	PrimaryExpression	3		6667626	1					
ANR	6667679	ExpressionStatement	cquantize -> pub . color_quantize = color_quantize3	756:6:28032:28079	6667626	1	True				
ANR	6667680	AssignmentExpression	cquantize -> pub . color_quantize = color_quantize3		6667626	0		=			
ANR	6667681	MemberAccess	cquantize -> pub . color_quantize		6667626	0					
ANR	6667682	PtrMemberAccess	cquantize -> pub		6667626	0					
ANR	6667683	Identifier	cquantize		6667626	0					
ANR	6667684	Identifier	pub		6667626	1					
ANR	6667685	Identifier	color_quantize		6667626	1					
ANR	6667686	Identifier	color_quantize3		6667626	1					
ANR	6667687	ElseStatement	else		6667626	0					
ANR	6667688	ExpressionStatement	cquantize -> pub . color_quantize = color_quantize	758:6:28096:28142	6667626	0	True				
ANR	6667689	AssignmentExpression	cquantize -> pub . color_quantize = color_quantize		6667626	0		=			
ANR	6667690	MemberAccess	cquantize -> pub . color_quantize		6667626	0					
ANR	6667691	PtrMemberAccess	cquantize -> pub		6667626	0					
ANR	6667692	Identifier	cquantize		6667626	0					
ANR	6667693	Identifier	pub		6667626	1					
ANR	6667694	Identifier	color_quantize		6667626	1					
ANR	6667695	Identifier	color_quantize		6667626	1					
ANR	6667696	BreakStatement	break ;	759:4:28148:28153	6667626	2	True				
ANR	6667697	Label	case JDITHER_ORDERED :	760:2:28157:28177	6667626	3	True				
ANR	6667698	Identifier	JDITHER_ORDERED		6667626	0					
ANR	6667699	IfStatement	if ( cinfo -> out_color_components == 3 )		6667626	4					
ANR	6667700	Condition	cinfo -> out_color_components == 3	761:8:28187:28218	6667626	0	True				
ANR	6667701	EqualityExpression	cinfo -> out_color_components == 3		6667626	0		==			
ANR	6667702	PtrMemberAccess	cinfo -> out_color_components		6667626	0					
ANR	6667703	Identifier	cinfo		6667626	0					
ANR	6667704	Identifier	out_color_components		6667626	1					
ANR	6667705	PrimaryExpression	3		6667626	1					
ANR	6667706	ExpressionStatement	cquantize -> pub . color_quantize = quantize3_ord_dither	762:6:28227:28279	6667626	1	True				
ANR	6667707	AssignmentExpression	cquantize -> pub . color_quantize = quantize3_ord_dither		6667626	0		=			
ANR	6667708	MemberAccess	cquantize -> pub . color_quantize		6667626	0					
ANR	6667709	PtrMemberAccess	cquantize -> pub		6667626	0					
ANR	6667710	Identifier	cquantize		6667626	0					
ANR	6667711	Identifier	pub		6667626	1					
ANR	6667712	Identifier	color_quantize		6667626	1					
ANR	6667713	Identifier	quantize3_ord_dither		6667626	1					
ANR	6667714	ElseStatement	else		6667626	0					
ANR	6667715	ExpressionStatement	cquantize -> pub . color_quantize = quantize_ord_dither	764:6:28296:28347	6667626	0	True				
ANR	6667716	AssignmentExpression	cquantize -> pub . color_quantize = quantize_ord_dither		6667626	0		=			
ANR	6667717	MemberAccess	cquantize -> pub . color_quantize		6667626	0					
ANR	6667718	PtrMemberAccess	cquantize -> pub		6667626	0					
ANR	6667719	Identifier	cquantize		6667626	0					
ANR	6667720	Identifier	pub		6667626	1					
ANR	6667721	Identifier	color_quantize		6667626	1					
ANR	6667722	Identifier	quantize_ord_dither		6667626	1					
ANR	6667723	ExpressionStatement	cquantize -> row_index = 0	765:4:28353:28377	6667626	5	True				
ANR	6667724	AssignmentExpression	cquantize -> row_index = 0		6667626	0		=			
ANR	6667725	PtrMemberAccess	cquantize -> row_index		6667626	0					
ANR	6667726	Identifier	cquantize		6667626	0					
ANR	6667727	Identifier	row_index		6667626	1					
ANR	6667728	PrimaryExpression	0		6667626	1					
ANR	6667729	IfStatement	if ( ! cquantize -> is_padded )		6667626	6					
ANR	6667730	Condition	! cquantize -> is_padded	770:8:28624:28645	6667626	0	True				
ANR	6667731	UnaryOperationExpression	! cquantize -> is_padded		6667626	0					
ANR	6667732	UnaryOperator	!		6667626	0					
ANR	6667733	PtrMemberAccess	cquantize -> is_padded		6667626	1					
ANR	6667734	Identifier	cquantize		6667626	0					
ANR	6667735	Identifier	is_padded		6667626	1					
ANR	6667736	ExpressionStatement	create_colorindex ( cinfo )	771:6:28654:28678	6667626	1	True				
ANR	6667737	CallExpression	create_colorindex ( cinfo )		6667626	0					
ANR	6667738	Callee	create_colorindex		6667626	0					
ANR	6667739	Identifier	create_colorindex		6667626	0					
ANR	6667740	ArgumentList	cinfo		6667626	1					
ANR	6667741	Argument	cinfo		6667626	0					
ANR	6667742	Identifier	cinfo		6667626	0					
ANR	6667743	IfStatement	if ( cquantize -> odither [ 0 ] == NULL )		6667626	7					
ANR	6667744	Condition	cquantize -> odither [ 0 ] == NULL	773:8:28749:28777	6667626	0	True				
ANR	6667745	EqualityExpression	cquantize -> odither [ 0 ] == NULL		6667626	0		==			
ANR	6667746	ArrayIndexing	cquantize -> odither [ 0 ]		6667626	0					
ANR	6667747	PtrMemberAccess	cquantize -> odither		6667626	0					
ANR	6667748	Identifier	cquantize		6667626	0					
ANR	6667749	Identifier	odither		6667626	1					
ANR	6667750	PrimaryExpression	0		6667626	1					
ANR	6667751	Identifier	NULL		6667626	1					
ANR	6667752	ExpressionStatement	create_odither_tables ( cinfo )	774:6:28786:28814	6667626	1	True				
ANR	6667753	CallExpression	create_odither_tables ( cinfo )		6667626	0					
ANR	6667754	Callee	create_odither_tables		6667626	0					
ANR	6667755	Identifier	create_odither_tables		6667626	0					
ANR	6667756	ArgumentList	cinfo		6667626	1					
ANR	6667757	Argument	cinfo		6667626	0					
ANR	6667758	Identifier	cinfo		6667626	0					
ANR	6667759	BreakStatement	break ;	775:4:28820:28825	6667626	8	True				
ANR	6667760	Label	case JDITHER_FS :	776:2:28829:28844	6667626	9	True				
ANR	6667761	Identifier	JDITHER_FS		6667626	0					
ANR	6667762	ExpressionStatement	cquantize -> pub . color_quantize = quantize_fs_dither	777:4:28850:28900	6667626	10	True				
ANR	6667763	AssignmentExpression	cquantize -> pub . color_quantize = quantize_fs_dither		6667626	0		=			
ANR	6667764	MemberAccess	cquantize -> pub . color_quantize		6667626	0					
ANR	6667765	PtrMemberAccess	cquantize -> pub		6667626	0					
ANR	6667766	Identifier	cquantize		6667626	0					
ANR	6667767	Identifier	pub		6667626	1					
ANR	6667768	Identifier	color_quantize		6667626	1					
ANR	6667769	Identifier	quantize_fs_dither		6667626	1					
ANR	6667770	ExpressionStatement	cquantize -> on_odd_row = FALSE	778:4:28906:28935	6667626	11	True				
ANR	6667771	AssignmentExpression	cquantize -> on_odd_row = FALSE		6667626	0		=			
ANR	6667772	PtrMemberAccess	cquantize -> on_odd_row		6667626	0					
ANR	6667773	Identifier	cquantize		6667626	0					
ANR	6667774	Identifier	on_odd_row		6667626	1					
ANR	6667775	Identifier	FALSE		6667626	1					
ANR	6667776	IfStatement	if ( cquantize -> fserrors [ 0 ] == NULL )		6667626	12					
ANR	6667777	Condition	cquantize -> fserrors [ 0 ] == NULL	780:8:29047:29076	6667626	0	True				
ANR	6667778	EqualityExpression	cquantize -> fserrors [ 0 ] == NULL		6667626	0		==			
ANR	6667779	ArrayIndexing	cquantize -> fserrors [ 0 ]		6667626	0					
ANR	6667780	PtrMemberAccess	cquantize -> fserrors		6667626	0					
ANR	6667781	Identifier	cquantize		6667626	0					
ANR	6667782	Identifier	fserrors		6667626	1					
ANR	6667783	PrimaryExpression	0		6667626	1					
ANR	6667784	Identifier	NULL		6667626	1					
ANR	6667785	ExpressionStatement	alloc_fs_workspace ( cinfo )	781:6:29085:29110	6667626	1	True				
ANR	6667786	CallExpression	alloc_fs_workspace ( cinfo )		6667626	0					
ANR	6667787	Callee	alloc_fs_workspace		6667626	0					
ANR	6667788	Identifier	alloc_fs_workspace		6667626	0					
ANR	6667789	ArgumentList	cinfo		6667626	1					
ANR	6667790	Argument	cinfo		6667626	0					
ANR	6667791	Identifier	cinfo		6667626	0					
ANR	6667792	ExpressionStatement	arraysize = ( size_t ) ( ( cinfo -> output_width + 2 ) * SIZEOF ( FSERROR ) )	783:4:29168:29234	6667626	13	True				
ANR	6667793	AssignmentExpression	arraysize = ( size_t ) ( ( cinfo -> output_width + 2 ) * SIZEOF ( FSERROR ) )		6667626	0		=			
ANR	6667794	Identifier	arraysize		6667626	0					
ANR	6667795	CastExpression	( size_t ) ( ( cinfo -> output_width + 2 ) * SIZEOF ( FSERROR ) )		6667626	1					
ANR	6667796	CastTarget	size_t		6667626	0					
ANR	6667797	MultiplicativeExpression	( cinfo -> output_width + 2 ) * SIZEOF ( FSERROR )		6667626	1		*			
ANR	6667798	AdditiveExpression	cinfo -> output_width + 2		6667626	0		+			
ANR	6667799	PtrMemberAccess	cinfo -> output_width		6667626	0					
ANR	6667800	Identifier	cinfo		6667626	0					
ANR	6667801	Identifier	output_width		6667626	1					
ANR	6667802	PrimaryExpression	2		6667626	1					
ANR	6667803	CallExpression	SIZEOF ( FSERROR )		6667626	1					
ANR	6667804	Callee	SIZEOF		6667626	0					
ANR	6667805	Identifier	SIZEOF		6667626	0					
ANR	6667806	ArgumentList	FSERROR		6667626	1					
ANR	6667807	Argument	FSERROR		6667626	0					
ANR	6667808	Identifier	FSERROR		6667626	0					
ANR	6667809	ForStatement	for ( i = 0 ; i < cinfo -> out_color_components ; i ++ )		6667626	14					
ANR	6667810	ForInit	i = 0 ;	784:9:29245:29250	6667626	0	True				
ANR	6667811	AssignmentExpression	i = 0		6667626	0		=			
ANR	6667812	Identifier	i		6667626	0					
ANR	6667813	PrimaryExpression	0		6667626	1					
ANR	6667814	Condition	i < cinfo -> out_color_components	784:16:29252:29282	6667626	1	True				
ANR	6667815	RelationalExpression	i < cinfo -> out_color_components		6667626	0		<			
ANR	6667816	Identifier	i		6667626	0					
ANR	6667817	PtrMemberAccess	cinfo -> out_color_components		6667626	1					
ANR	6667818	Identifier	cinfo		6667626	0					
ANR	6667819	Identifier	out_color_components		6667626	1					
ANR	6667820	PostIncDecOperationExpression	i ++	784:49:29285:29287	6667626	2	True				
ANR	6667821	Identifier	i		6667626	0					
ANR	6667822	IncDec	++		6667626	1					
ANR	6667823	ExpressionStatement	"FMEMZERO ( ( void FAR * ) cquantize -> fserrors [ i ] , arraysize )"	785:6:29296:29352	6667626	3	True				
ANR	6667824	CallExpression	"FMEMZERO ( ( void FAR * ) cquantize -> fserrors [ i ] , arraysize )"		6667626	0					
ANR	6667825	Callee	FMEMZERO		6667626	0					
ANR	6667826	Identifier	FMEMZERO		6667626	0					
ANR	6667827	ArgumentList	( void FAR * ) cquantize -> fserrors [ i ]		6667626	1					
ANR	6667828	Argument	( void FAR * ) cquantize -> fserrors [ i ]		6667626	0					
ANR	6667829	CastExpression	( void FAR * ) cquantize -> fserrors [ i ]		6667626	0					
ANR	6667830	CastTarget	void FAR *		6667626	0					
ANR	6667831	ArrayIndexing	cquantize -> fserrors [ i ]		6667626	1					
ANR	6667832	PtrMemberAccess	cquantize -> fserrors		6667626	0					
ANR	6667833	Identifier	cquantize		6667626	0					
ANR	6667834	Identifier	fserrors		6667626	1					
ANR	6667835	Identifier	i		6667626	1					
ANR	6667836	Argument	arraysize		6667626	1					
ANR	6667837	Identifier	arraysize		6667626	0					
ANR	6667838	BreakStatement	break ;	786:4:29358:29363	6667626	15	True				
ANR	6667839	Label	default :	787:2:29367:29374	6667626	16	True				
ANR	6667840	Identifier	default		6667626	0					
ANR	6667841	ExpressionStatement	"ERREXIT ( cinfo , JERR_NOT_COMPILED )"	788:4:29380:29413	6667626	17	True				
ANR	6667842	CallExpression	"ERREXIT ( cinfo , JERR_NOT_COMPILED )"		6667626	0					
ANR	6667843	Callee	ERREXIT		6667626	0					
ANR	6667844	Identifier	ERREXIT		6667626	0					
ANR	6667845	ArgumentList	cinfo		6667626	1					
ANR	6667846	Argument	cinfo		6667626	0					
ANR	6667847	Identifier	cinfo		6667626	0					
ANR	6667848	Argument	JERR_NOT_COMPILED		6667626	1					
ANR	6667849	Identifier	JERR_NOT_COMPILED		6667626	0					
ANR	6667850	BreakStatement	break ;	789:4:29419:29424	6667626	18	True				
ANR	6667851	Identifier	start_pass_1_quant		6667626	1					
ANR	6667852	ParameterList	"j_decompress_ptr cinfo , boolean is_pre_scan"		6667626	2					
ANR	6667853	Parameter	j_decompress_ptr cinfo	742:20:27608:27629	6667626	0	True				
ANR	6667854	ParameterType	j_decompress_ptr		6667626	0					
ANR	6667855	Identifier	cinfo		6667626	1					
ANR	6667856	Parameter	boolean is_pre_scan	742:44:27632:27650	6667626	1	True				
ANR	6667857	ParameterType	boolean		6667626	0					
ANR	6667858	Identifier	is_pre_scan		6667626	1					
ANR	6667859	CFGEntryNode	ENTRY		6667626		True				
ANR	6667860	CFGExitNode	EXIT		6667626		True				
ANR	6667861	Symbol	* cquantize -> odither		6667626						
ANR	6667862	Symbol	* cquantize -> fserrors		6667626						
ANR	6667863	Symbol	cquantize -> pub		6667626						
ANR	6667864	Symbol	arraysize		6667626						
ANR	6667865	Symbol	color_quantize3		6667626						
ANR	6667866	Symbol	SIZEOF		6667626						
ANR	6667867	Symbol	is_pre_scan		6667626						
ANR	6667868	Symbol	cquantize		6667626						
ANR	6667869	Symbol	* cquantize		6667626						
ANR	6667870	Symbol	cinfo -> output_width		6667626						
ANR	6667871	Symbol	cquantize -> sv_colormap		6667626						
ANR	6667872	Symbol	cquantize -> fserrors		6667626						
ANR	6667873	Symbol	cinfo -> out_color_components		6667626						
ANR	6667874	Symbol	JERR_NOT_COMPILED		6667626						
ANR	6667875	Symbol	quantize_ord_dither		6667626						
ANR	6667876	Symbol	* cinfo		6667626						
ANR	6667877	Symbol	NULL		6667626						
ANR	6667878	Symbol	cquantize -> sv_actual		6667626						
ANR	6667879	Symbol	cinfo -> colormap		6667626						
ANR	6667880	Symbol	i		6667626						
ANR	6667881	Symbol	quantize3_ord_dither		6667626						
ANR	6667882	Symbol	cquantize -> odither		6667626						
ANR	6667883	Symbol	cquantize -> is_padded		6667626						
ANR	6667884	Symbol	* * cquantize		6667626						
ANR	6667885	Symbol	cinfo -> dither_mode		6667626						
ANR	6667886	Symbol	cinfo -> cquantize		6667626						
ANR	6667887	Symbol	cquantize -> pub . color_quantize		6667626						
ANR	6667888	Symbol	FSERROR		6667626						
ANR	6667889	Symbol	cinfo -> actual_number_of_colors		6667626						
ANR	6667890	Symbol	* i		6667626						
ANR	6667891	Symbol	cinfo		6667626						
ANR	6667892	Symbol	cquantize -> row_index		6667626						
ANR	6667893	Symbol	quantize_fs_dither		6667626						
ANR	6667894	Symbol	cquantize -> on_odd_row		6667626						
ANR	6667895	Symbol	FALSE		6667626						
ANR	6667896	Symbol	color_quantize		6667626						
ANR	6667897	Function	finish_pass_1_quant	799:0:29495:29573							
ANR	6667898	FunctionDef	finish_pass_1_quant (j_decompress_ptr cinfo)		6667897	0					
ANR	6667899	CompoundStatement		800:0:29540:29573	6667897	0					
ANR	6667900	Identifier	finish_pass_1_quant		6667897	1					
ANR	6667901	ParameterList	j_decompress_ptr cinfo		6667897	2					
ANR	6667902	Parameter	j_decompress_ptr cinfo	799:21:29516:29537	6667897	0	True				
ANR	6667903	ParameterType	j_decompress_ptr		6667897	0					
ANR	6667904	Identifier	cinfo		6667897	1					
ANR	6667905	CFGEntryNode	ENTRY		6667897		True				
ANR	6667906	CFGExitNode	EXIT		6667897		True				
ANR	6667907	Symbol	cinfo		6667897						
ANR	6667908	Function	new_color_map_1_quant	811:0:29694:29779							
ANR	6667909	FunctionDef	new_color_map_1_quant (j_decompress_ptr cinfo)		6667908	0					
ANR	6667910	CompoundStatement		812:0:29741:29779	6667908	0					
ANR	6667911	ExpressionStatement	"ERREXIT ( cinfo , JERR_MODE_CHANGE )"	813:2:29745:29777	6667908	0	True				
ANR	6667912	CallExpression	"ERREXIT ( cinfo , JERR_MODE_CHANGE )"		6667908	0					
ANR	6667913	Callee	ERREXIT		6667908	0					
ANR	6667914	Identifier	ERREXIT		6667908	0					
ANR	6667915	ArgumentList	cinfo		6667908	1					
ANR	6667916	Argument	cinfo		6667908	0					
ANR	6667917	Identifier	cinfo		6667908	0					
ANR	6667918	Argument	JERR_MODE_CHANGE		6667908	1					
ANR	6667919	Identifier	JERR_MODE_CHANGE		6667908	0					
ANR	6667920	Identifier	new_color_map_1_quant		6667908	1					
ANR	6667921	ParameterList	j_decompress_ptr cinfo		6667908	2					
ANR	6667922	Parameter	j_decompress_ptr cinfo	811:23:29717:29738	6667908	0	True				
ANR	6667923	ParameterType	j_decompress_ptr		6667908	0					
ANR	6667924	Identifier	cinfo		6667908	1					
ANR	6667925	CFGEntryNode	ENTRY		6667908		True				
ANR	6667926	CFGExitNode	EXIT		6667908		True				
ANR	6667927	Symbol	JERR_MODE_CHANGE		6667908						
ANR	6667928	Symbol	cinfo		6667908						
ANR	6667929	Function	jinit_1pass_quantizer	822:0:29868:31289							
ANR	6667930	FunctionDef	jinit_1pass_quantizer (j_decompress_ptr cinfo)		6667929	0					
ANR	6667931	CompoundStatement		823:0:29915:31289	6667929	0					
ANR	6667932	IdentifierDeclStatement	my_cquantize_ptr cquantize ;	824:2:29919:29945	6667929	0	True				
ANR	6667933	IdentifierDecl	cquantize		6667929	0					
ANR	6667934	IdentifierDeclType	my_cquantize_ptr		6667929	0					
ANR	6667935	Identifier	cquantize		6667929	1					
ANR	6667936	ExpressionStatement	"cquantize = ( my_cquantize_ptr ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , SIZEOF ( my_cquantizer ) )"	826:2:29950:30074	6667929	1	True				
ANR	6667937	AssignmentExpression	"cquantize = ( my_cquantize_ptr ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , SIZEOF ( my_cquantizer ) )"		6667929	0		=			
ANR	6667938	Identifier	cquantize		6667929	0					
ANR	6667939	CastExpression	"( my_cquantize_ptr ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , SIZEOF ( my_cquantizer ) )"		6667929	1					
ANR	6667940	CastTarget	my_cquantize_ptr		6667929	0					
ANR	6667941	CallExpression	"( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , SIZEOF ( my_cquantizer ) )"		6667929	1					
ANR	6667942	Callee	* cinfo -> mem -> alloc_small		6667929	0					
ANR	6667943	UnaryOperationExpression	* cinfo -> mem -> alloc_small		6667929	0					
ANR	6667944	UnaryOperator	*		6667929	0					
ANR	6667945	PtrMemberAccess	cinfo -> mem -> alloc_small		6667929	1					
ANR	6667946	PtrMemberAccess	cinfo -> mem		6667929	0					
ANR	6667947	Identifier	cinfo		6667929	0					
ANR	6667948	Identifier	mem		6667929	1					
ANR	6667949	Identifier	alloc_small		6667929	1					
ANR	6667950	ArgumentList	( j_common_ptr ) cinfo		6667929	1					
ANR	6667951	Argument	( j_common_ptr ) cinfo		6667929	0					
ANR	6667952	CastExpression	( j_common_ptr ) cinfo		6667929	0					
ANR	6667953	CastTarget	j_common_ptr		6667929	0					
ANR	6667954	Identifier	cinfo		6667929	1					
ANR	6667955	Argument	JPOOL_IMAGE		6667929	1					
ANR	6667956	Identifier	JPOOL_IMAGE		6667929	0					
ANR	6667957	Argument	SIZEOF ( my_cquantizer )		6667929	2					
ANR	6667958	CallExpression	SIZEOF ( my_cquantizer )		6667929	0					
ANR	6667959	Callee	SIZEOF		6667929	0					
ANR	6667960	Identifier	SIZEOF		6667929	0					
ANR	6667961	ArgumentList	my_cquantizer		6667929	1					
ANR	6667962	Argument	my_cquantizer		6667929	0					
ANR	6667963	Identifier	my_cquantizer		6667929	0					
ANR	6667964	ExpressionStatement	cinfo -> cquantize = ( struct jpeg_color_quantizer * ) cquantize	829:2:30078:30138	6667929	2	True				
ANR	6667965	AssignmentExpression	cinfo -> cquantize = ( struct jpeg_color_quantizer * ) cquantize		6667929	0		=			
ANR	6667966	PtrMemberAccess	cinfo -> cquantize		6667929	0					
ANR	6667967	Identifier	cinfo		6667929	0					
ANR	6667968	Identifier	cquantize		6667929	1					
ANR	6667969	CastExpression	( struct jpeg_color_quantizer * ) cquantize		6667929	1					
ANR	6667970	CastTarget	struct jpeg_color_quantizer *		6667929	0					
ANR	6667971	Identifier	cquantize		6667929	1					
ANR	6667972	ExpressionStatement	cquantize -> pub . start_pass = start_pass_1_quant	830:2:30142:30188	6667929	3	True				
ANR	6667973	AssignmentExpression	cquantize -> pub . start_pass = start_pass_1_quant		6667929	0		=			
ANR	6667974	MemberAccess	cquantize -> pub . start_pass		6667929	0					
ANR	6667975	PtrMemberAccess	cquantize -> pub		6667929	0					
ANR	6667976	Identifier	cquantize		6667929	0					
ANR	6667977	Identifier	pub		6667929	1					
ANR	6667978	Identifier	start_pass		6667929	1					
ANR	6667979	Identifier	start_pass_1_quant		6667929	1					
ANR	6667980	ExpressionStatement	cquantize -> pub . finish_pass = finish_pass_1_quant	831:2:30192:30240	6667929	4	True				
ANR	6667981	AssignmentExpression	cquantize -> pub . finish_pass = finish_pass_1_quant		6667929	0		=			
ANR	6667982	MemberAccess	cquantize -> pub . finish_pass		6667929	0					
ANR	6667983	PtrMemberAccess	cquantize -> pub		6667929	0					
ANR	6667984	Identifier	cquantize		6667929	0					
ANR	6667985	Identifier	pub		6667929	1					
ANR	6667986	Identifier	finish_pass		6667929	1					
ANR	6667987	Identifier	finish_pass_1_quant		6667929	1					
ANR	6667988	ExpressionStatement	cquantize -> pub . new_color_map = new_color_map_1_quant	832:2:30244:30296	6667929	5	True				
ANR	6667989	AssignmentExpression	cquantize -> pub . new_color_map = new_color_map_1_quant		6667929	0		=			
ANR	6667990	MemberAccess	cquantize -> pub . new_color_map		6667929	0					
ANR	6667991	PtrMemberAccess	cquantize -> pub		6667929	0					
ANR	6667992	Identifier	cquantize		6667929	0					
ANR	6667993	Identifier	pub		6667929	1					
ANR	6667994	Identifier	new_color_map		6667929	1					
ANR	6667995	Identifier	new_color_map_1_quant		6667929	1					
ANR	6667996	ExpressionStatement	cquantize -> fserrors [ 0 ] = NULL	833:2:30300:30329	6667929	6	True				
ANR	6667997	AssignmentExpression	cquantize -> fserrors [ 0 ] = NULL		6667929	0		=			
ANR	6667998	ArrayIndexing	cquantize -> fserrors [ 0 ]		6667929	0					
ANR	6667999	PtrMemberAccess	cquantize -> fserrors		6667929	0					
ANR	6668000	Identifier	cquantize		6667929	0					
ANR	6668001	Identifier	fserrors		6667929	1					
ANR	6668002	PrimaryExpression	0		6667929	1					
ANR	6668003	Identifier	NULL		6667929	1					
ANR	6668004	ExpressionStatement	cquantize -> odither [ 0 ] = NULL	834:2:30371:30399	6667929	7	True				
ANR	6668005	AssignmentExpression	cquantize -> odither [ 0 ] = NULL		6667929	0		=			
ANR	6668006	ArrayIndexing	cquantize -> odither [ 0 ]		6667929	0					
ANR	6668007	PtrMemberAccess	cquantize -> odither		6667929	0					
ANR	6668008	Identifier	cquantize		6667929	0					
ANR	6668009	Identifier	odither		6667929	1					
ANR	6668010	PrimaryExpression	0		6667929	1					
ANR	6668011	Identifier	NULL		6667929	1					
ANR	6668012	IfStatement	if ( cinfo -> out_color_components > MAX_Q_COMPS )		6667929	8					
ANR	6668013	Condition	cinfo -> out_color_components > MAX_Q_COMPS	837:6:30505:30545	6667929	0	True				
ANR	6668014	RelationalExpression	cinfo -> out_color_components > MAX_Q_COMPS		6667929	0		>			
ANR	6668015	PtrMemberAccess	cinfo -> out_color_components		6667929	0					
ANR	6668016	Identifier	cinfo		6667929	0					
ANR	6668017	Identifier	out_color_components		6667929	1					
ANR	6668018	Identifier	MAX_Q_COMPS		6667929	1					
ANR	6668019	ExpressionStatement	"ERREXIT1 ( cinfo , JERR_QUANT_COMPONENTS , MAX_Q_COMPS )"	838:4:30552:30603	6667929	1	True				
ANR	6668020	CallExpression	"ERREXIT1 ( cinfo , JERR_QUANT_COMPONENTS , MAX_Q_COMPS )"		6667929	0					
ANR	6668021	Callee	ERREXIT1		6667929	0					
ANR	6668022	Identifier	ERREXIT1		6667929	0					
ANR	6668023	ArgumentList	cinfo		6667929	1					
ANR	6668024	Argument	cinfo		6667929	0					
ANR	6668025	Identifier	cinfo		6667929	0					
ANR	6668026	Argument	JERR_QUANT_COMPONENTS		6667929	1					
ANR	6668027	Identifier	JERR_QUANT_COMPONENTS		6667929	0					
ANR	6668028	Argument	MAX_Q_COMPS		6667929	2					
ANR	6668029	Identifier	MAX_Q_COMPS		6667929	0					
ANR	6668030	IfStatement	if ( cinfo -> desired_number_of_colors > ( MAXJSAMPLE + 1 ) )		6667929	9					
ANR	6668031	Condition	cinfo -> desired_number_of_colors > ( MAXJSAMPLE + 1 )	840:6:30677:30724	6667929	0	True				
ANR	6668032	RelationalExpression	cinfo -> desired_number_of_colors > ( MAXJSAMPLE + 1 )		6667929	0		>			
ANR	6668033	PtrMemberAccess	cinfo -> desired_number_of_colors		6667929	0					
ANR	6668034	Identifier	cinfo		6667929	0					
ANR	6668035	Identifier	desired_number_of_colors		6667929	1					
ANR	6668036	AdditiveExpression	MAXJSAMPLE + 1		6667929	1		+			
ANR	6668037	Identifier	MAXJSAMPLE		6667929	0					
ANR	6668038	PrimaryExpression	1		6667929	1					
ANR	6668039	ExpressionStatement	"ERREXIT1 ( cinfo , JERR_QUANT_MANY_COLORS , MAXJSAMPLE + 1 )"	841:4:30731:30784	6667929	1	True				
ANR	6668040	CallExpression	"ERREXIT1 ( cinfo , JERR_QUANT_MANY_COLORS , MAXJSAMPLE + 1 )"		6667929	0					
ANR	6668041	Callee	ERREXIT1		6667929	0					
ANR	6668042	Identifier	ERREXIT1		6667929	0					
ANR	6668043	ArgumentList	cinfo		6667929	1					
ANR	6668044	Argument	cinfo		6667929	0					
ANR	6668045	Identifier	cinfo		6667929	0					
ANR	6668046	Argument	JERR_QUANT_MANY_COLORS		6667929	1					
ANR	6668047	Identifier	JERR_QUANT_MANY_COLORS		6667929	0					
ANR	6668048	Argument	MAXJSAMPLE + 1		6667929	2					
ANR	6668049	AdditiveExpression	MAXJSAMPLE + 1		6667929	0		+			
ANR	6668050	Identifier	MAXJSAMPLE		6667929	0					
ANR	6668051	PrimaryExpression	1		6667929	1					
ANR	6668052	ExpressionStatement	create_colormap ( cinfo )	844:2:30840:30862	6667929	10	True				
ANR	6668053	CallExpression	create_colormap ( cinfo )		6667929	0					
ANR	6668054	Callee	create_colormap		6667929	0					
ANR	6668055	Identifier	create_colormap		6667929	0					
ANR	6668056	ArgumentList	cinfo		6667929	1					
ANR	6668057	Argument	cinfo		6667929	0					
ANR	6668058	Identifier	cinfo		6667929	0					
ANR	6668059	ExpressionStatement	create_colorindex ( cinfo )	845:2:30866:30890	6667929	11	True				
ANR	6668060	CallExpression	create_colorindex ( cinfo )		6667929	0					
ANR	6668061	Callee	create_colorindex		6667929	0					
ANR	6668062	Identifier	create_colorindex		6667929	0					
ANR	6668063	ArgumentList	cinfo		6667929	1					
ANR	6668064	Argument	cinfo		6667929	0					
ANR	6668065	Identifier	cinfo		6667929	0					
ANR	6668066	IfStatement	if ( cinfo -> dither_mode == JDITHER_FS )		6667929	12					
ANR	6668067	Condition	cinfo -> dither_mode == JDITHER_FS	853:6:31224:31255	6667929	0	True				
ANR	6668068	EqualityExpression	cinfo -> dither_mode == JDITHER_FS		6667929	0		==			
ANR	6668069	PtrMemberAccess	cinfo -> dither_mode		6667929	0					
ANR	6668070	Identifier	cinfo		6667929	0					
ANR	6668071	Identifier	dither_mode		6667929	1					
ANR	6668072	Identifier	JDITHER_FS		6667929	1					
ANR	6668073	ExpressionStatement	alloc_fs_workspace ( cinfo )	854:4:31262:31287	6667929	1	True				
ANR	6668074	CallExpression	alloc_fs_workspace ( cinfo )		6667929	0					
ANR	6668075	Callee	alloc_fs_workspace		6667929	0					
ANR	6668076	Identifier	alloc_fs_workspace		6667929	0					
ANR	6668077	ArgumentList	cinfo		6667929	1					
ANR	6668078	Argument	cinfo		6667929	0					
ANR	6668079	Identifier	cinfo		6667929	0					
ANR	6668080	Identifier	jinit_1pass_quantizer		6667929	1					
ANR	6668081	ParameterList	j_decompress_ptr cinfo		6667929	2					
ANR	6668082	Parameter	j_decompress_ptr cinfo	822:23:29891:29912	6667929	0	True				
ANR	6668083	ParameterType	j_decompress_ptr		6667929	0					
ANR	6668084	Identifier	cinfo		6667929	1					
ANR	6668085	CFGEntryNode	ENTRY		6667929		True				
ANR	6668086	CFGExitNode	EXIT		6667929		True				
ANR	6668087	Symbol	* * cinfo		6667929						
ANR	6668088	Symbol	* cquantize -> fserrors		6667929						
ANR	6668089	Symbol	* cquantize -> odither		6667929						
ANR	6668090	Symbol	cquantize -> pub		6667929						
ANR	6668091	Symbol	JDITHER_FS		6667929						
ANR	6668092	Symbol	SIZEOF		6667929						
ANR	6668093	Symbol	cquantize		6667929						
ANR	6668094	Symbol	* cquantize		6667929						
ANR	6668095	Symbol	cquantize -> pub . start_pass		6667929						
ANR	6668096	Symbol	* cinfo -> mem		6667929						
ANR	6668097	Symbol	JERR_QUANT_MANY_COLORS		6667929						
ANR	6668098	Symbol	cinfo -> mem		6667929						
ANR	6668099	Symbol	cquantize -> fserrors		6667929						
ANR	6668100	Symbol	cinfo -> out_color_components		6667929						
ANR	6668101	Symbol	* cinfo -> mem -> alloc_small		6667929						
ANR	6668102	Symbol	* cinfo		6667929						
ANR	6668103	Symbol	* * cinfo -> mem		6667929						
ANR	6668104	Symbol	NULL		6667929						
ANR	6668105	Symbol	cinfo -> mem -> alloc_small		6667929						
ANR	6668106	Symbol	start_pass_1_quant		6667929						
ANR	6668107	Symbol	JERR_QUANT_COMPONENTS		6667929						
ANR	6668108	Symbol	cquantize -> odither		6667929						
ANR	6668109	Symbol	JPOOL_IMAGE		6667929						
ANR	6668110	Symbol	* * cquantize		6667929						
ANR	6668111	Symbol	finish_pass_1_quant		6667929						
ANR	6668112	Symbol	cinfo -> dither_mode		6667929						
ANR	6668113	Symbol	cinfo -> cquantize		6667929						
ANR	6668114	Symbol	cinfo -> desired_number_of_colors		6667929						
ANR	6668115	Symbol	cquantize -> pub . finish_pass		6667929						
ANR	6668116	Symbol	MAX_Q_COMPS		6667929						
ANR	6668117	Symbol	cinfo		6667929						
ANR	6668118	Symbol	MAXJSAMPLE		6667929						
ANR	6668119	Symbol	* * * cinfo		6667929						
ANR	6668120	Symbol	cquantize -> pub . new_color_map		6667929						
ANR	6668121	Symbol	my_cquantizer		6667929						
ANR	6668122	Symbol	new_color_map_1_quant		6667929						
