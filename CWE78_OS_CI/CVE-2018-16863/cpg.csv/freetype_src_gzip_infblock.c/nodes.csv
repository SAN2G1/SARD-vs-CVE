command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3493520	File	data/converged/CVE-2018-16863_ghostpdl/freetype_src_gzip_infblock.c								
ANR	3493521	DeclStmt									
ANR	3493522	Decl							const uInt	const uInt [ ]	border
ANR	3493523	Function	inflate_blocks_reset	67:0:3222:3741							
ANR	3493524	FunctionDef	"inflate_blocks_reset (inflate_blocks_statef * s , z_streamp z , uLongf * c)"		3493523	0					
ANR	3493525	CompoundStatement		71:0:3321:3741	3493523	0					
ANR	3493526	IfStatement	if ( c != Z_NULL )		3493523	0					
ANR	3493527	Condition	c != Z_NULL	72:6:3329:3339	3493523	0	True				
ANR	3493528	EqualityExpression	c != Z_NULL		3493523	0		!=			
ANR	3493529	Identifier	c		3493523	0					
ANR	3493530	Identifier	Z_NULL		3493523	1					
ANR	3493531	ExpressionStatement	* c = s -> check	73:4:3346:3359	3493523	1	True				
ANR	3493532	AssignmentExpression	* c = s -> check		3493523	0		=			
ANR	3493533	UnaryOperationExpression	* c		3493523	0					
ANR	3493534	UnaryOperator	*		3493523	0					
ANR	3493535	Identifier	c		3493523	1					
ANR	3493536	PtrMemberAccess	s -> check		3493523	1					
ANR	3493537	Identifier	s		3493523	0					
ANR	3493538	Identifier	check		3493523	1					
ANR	3493539	IfStatement	if ( s -> mode == BTREE || s -> mode == DTREE )		3493523	1					
ANR	3493540	Condition	s -> mode == BTREE || s -> mode == DTREE	74:6:3367:3402	3493523	0	True				
ANR	3493541	OrExpression	s -> mode == BTREE || s -> mode == DTREE		3493523	0		||			
ANR	3493542	EqualityExpression	s -> mode == BTREE		3493523	0		==			
ANR	3493543	PtrMemberAccess	s -> mode		3493523	0					
ANR	3493544	Identifier	s		3493523	0					
ANR	3493545	Identifier	mode		3493523	1					
ANR	3493546	Identifier	BTREE		3493523	1					
ANR	3493547	EqualityExpression	s -> mode == DTREE		3493523	1		==			
ANR	3493548	PtrMemberAccess	s -> mode		3493523	0					
ANR	3493549	Identifier	s		3493523	0					
ANR	3493550	Identifier	mode		3493523	1					
ANR	3493551	Identifier	DTREE		3493523	1					
ANR	3493552	ExpressionStatement	"ZFREE ( z , s -> sub . trees . blens )"	75:4:3409:3437	3493523	1	True				
ANR	3493553	CallExpression	"ZFREE ( z , s -> sub . trees . blens )"		3493523	0					
ANR	3493554	Callee	ZFREE		3493523	0					
ANR	3493555	Identifier	ZFREE		3493523	0					
ANR	3493556	ArgumentList	z		3493523	1					
ANR	3493557	Argument	z		3493523	0					
ANR	3493558	Identifier	z		3493523	0					
ANR	3493559	Argument	s -> sub . trees . blens		3493523	1					
ANR	3493560	MemberAccess	s -> sub . trees . blens		3493523	0					
ANR	3493561	MemberAccess	s -> sub . trees		3493523	0					
ANR	3493562	PtrMemberAccess	s -> sub		3493523	0					
ANR	3493563	Identifier	s		3493523	0					
ANR	3493564	Identifier	sub		3493523	1					
ANR	3493565	Identifier	trees		3493523	1					
ANR	3493566	Identifier	blens		3493523	1					
ANR	3493567	IfStatement	if ( s -> mode == CODES )		3493523	2					
ANR	3493568	Condition	s -> mode == CODES	76:6:3445:3460	3493523	0	True				
ANR	3493569	EqualityExpression	s -> mode == CODES		3493523	0		==			
ANR	3493570	PtrMemberAccess	s -> mode		3493523	0					
ANR	3493571	Identifier	s		3493523	0					
ANR	3493572	Identifier	mode		3493523	1					
ANR	3493573	Identifier	CODES		3493523	1					
ANR	3493574	ExpressionStatement	"inflate_codes_free ( s -> sub . decode . codes , z )"	77:4:3467:3509	3493523	1	True				
ANR	3493575	CallExpression	"inflate_codes_free ( s -> sub . decode . codes , z )"		3493523	0					
ANR	3493576	Callee	inflate_codes_free		3493523	0					
ANR	3493577	Identifier	inflate_codes_free		3493523	0					
ANR	3493578	ArgumentList	s -> sub . decode . codes		3493523	1					
ANR	3493579	Argument	s -> sub . decode . codes		3493523	0					
ANR	3493580	MemberAccess	s -> sub . decode . codes		3493523	0					
ANR	3493581	MemberAccess	s -> sub . decode		3493523	0					
ANR	3493582	PtrMemberAccess	s -> sub		3493523	0					
ANR	3493583	Identifier	s		3493523	0					
ANR	3493584	Identifier	sub		3493523	1					
ANR	3493585	Identifier	decode		3493523	1					
ANR	3493586	Identifier	codes		3493523	1					
ANR	3493587	Argument	z		3493523	1					
ANR	3493588	Identifier	z		3493523	0					
ANR	3493589	ExpressionStatement	s -> mode = TYPE	78:2:3513:3527	3493523	3	True				
ANR	3493590	AssignmentExpression	s -> mode = TYPE		3493523	0		=			
ANR	3493591	PtrMemberAccess	s -> mode		3493523	0					
ANR	3493592	Identifier	s		3493523	0					
ANR	3493593	Identifier	mode		3493523	1					
ANR	3493594	Identifier	TYPE		3493523	1					
ANR	3493595	ExpressionStatement	s -> bitk = 0	79:2:3531:3542	3493523	4	True				
ANR	3493596	AssignmentExpression	s -> bitk = 0		3493523	0		=			
ANR	3493597	PtrMemberAccess	s -> bitk		3493523	0					
ANR	3493598	Identifier	s		3493523	0					
ANR	3493599	Identifier	bitk		3493523	1					
ANR	3493600	PrimaryExpression	0		3493523	1					
ANR	3493601	ExpressionStatement	s -> bitb = 0	80:2:3546:3557	3493523	5	True				
ANR	3493602	AssignmentExpression	s -> bitb = 0		3493523	0		=			
ANR	3493603	PtrMemberAccess	s -> bitb		3493523	0					
ANR	3493604	Identifier	s		3493523	0					
ANR	3493605	Identifier	bitb		3493523	1					
ANR	3493606	PrimaryExpression	0		3493523	1					
ANR	3493607	ExpressionStatement	s -> read = s -> write = s -> window	81:2:3561:3591	3493523	6	True				
ANR	3493608	AssignmentExpression	s -> read = s -> write = s -> window		3493523	0		=			
ANR	3493609	PtrMemberAccess	s -> read		3493523	0					
ANR	3493610	Identifier	s		3493523	0					
ANR	3493611	Identifier	read		3493523	1					
ANR	3493612	AssignmentExpression	s -> write = s -> window		3493523	1		=			
ANR	3493613	PtrMemberAccess	s -> write		3493523	0					
ANR	3493614	Identifier	s		3493523	0					
ANR	3493615	Identifier	write		3493523	1					
ANR	3493616	PtrMemberAccess	s -> window		3493523	1					
ANR	3493617	Identifier	s		3493523	0					
ANR	3493618	Identifier	window		3493523	1					
ANR	3493619	IfStatement	if ( s -> checkfn != Z_NULL )		3493523	7					
ANR	3493620	Condition	s -> checkfn != Z_NULL	82:6:3599:3618	3493523	0	True				
ANR	3493621	EqualityExpression	s -> checkfn != Z_NULL		3493523	0		!=			
ANR	3493622	PtrMemberAccess	s -> checkfn		3493523	0					
ANR	3493623	Identifier	s		3493523	0					
ANR	3493624	Identifier	checkfn		3493523	1					
ANR	3493625	Identifier	Z_NULL		3493523	1					
ANR	3493626	ExpressionStatement	"z -> adler = s -> check = ( * s -> checkfn ) ( 0L , ( const Bytef * ) Z_NULL , 0 )"	83:4:3625:3690	3493523	1	True				
ANR	3493627	AssignmentExpression	"z -> adler = s -> check = ( * s -> checkfn ) ( 0L , ( const Bytef * ) Z_NULL , 0 )"		3493523	0		=			
ANR	3493628	PtrMemberAccess	z -> adler		3493523	0					
ANR	3493629	Identifier	z		3493523	0					
ANR	3493630	Identifier	adler		3493523	1					
ANR	3493631	AssignmentExpression	"s -> check = ( * s -> checkfn ) ( 0L , ( const Bytef * ) Z_NULL , 0 )"		3493523	1		=			
ANR	3493632	PtrMemberAccess	s -> check		3493523	0					
ANR	3493633	Identifier	s		3493523	0					
ANR	3493634	Identifier	check		3493523	1					
ANR	3493635	CallExpression	"( * s -> checkfn ) ( 0L , ( const Bytef * ) Z_NULL , 0 )"		3493523	1					
ANR	3493636	Callee	* s -> checkfn		3493523	0					
ANR	3493637	UnaryOperationExpression	* s -> checkfn		3493523	0					
ANR	3493638	UnaryOperator	*		3493523	0					
ANR	3493639	PtrMemberAccess	s -> checkfn		3493523	1					
ANR	3493640	Identifier	s		3493523	0					
ANR	3493641	Identifier	checkfn		3493523	1					
ANR	3493642	ArgumentList	0L		3493523	1					
ANR	3493643	Argument	0L		3493523	0					
ANR	3493644	PrimaryExpression	0L		3493523	0					
ANR	3493645	Argument	( const Bytef * ) Z_NULL		3493523	1					
ANR	3493646	CastExpression	( const Bytef * ) Z_NULL		3493523	0					
ANR	3493647	CastTarget	const Bytef *		3493523	0					
ANR	3493648	Identifier	Z_NULL		3493523	1					
ANR	3493649	Argument	0		3493523	2					
ANR	3493650	PrimaryExpression	0		3493523	0					
ANR	3493651	ExpressionStatement	"Tracev ( ( stderr , ""inflate:   blocks reset\\n"" ) )"	84:2:3694:3739	3493523	8	True				
ANR	3493652	CallExpression	"Tracev ( ( stderr , ""inflate:   blocks reset\\n"" ) )"		3493523	0					
ANR	3493653	Callee	Tracev		3493523	0					
ANR	3493654	Identifier	Tracev		3493523	0					
ANR	3493655	ArgumentList	"stderr , ""inflate:   blocks reset\\n"""		3493523	1					
ANR	3493656	Argument	"stderr , ""inflate:   blocks reset\\n"""		3493523	0					
ANR	3493657	Expression	"stderr , ""inflate:   blocks reset\\n"""		3493523	0					
ANR	3493658	Identifier	stderr		3493523	0					
ANR	3493659	PrimaryExpression	"""inflate:   blocks reset\\n"""		3493523	1					
ANR	3493660	ReturnType	local void		3493523	1					
ANR	3493661	Identifier	inflate_blocks_reset		3493523	2					
ANR	3493662	ParameterList	"inflate_blocks_statef * s , z_streamp z , uLongf * c"		3493523	3					
ANR	3493663	Parameter	inflate_blocks_statef * s	68:0:3270:3293	3493523	0	True				
ANR	3493664	ParameterType	inflate_blocks_statef *		3493523	0					
ANR	3493665	Identifier	s		3493523	1					
ANR	3493666	Parameter	z_streamp z	69:0:3296:3306	3493523	1	True				
ANR	3493667	ParameterType	z_streamp		3493523	0					
ANR	3493668	Identifier	z		3493523	1					
ANR	3493669	Parameter	uLongf * c	70:0:3309:3317	3493523	2	True				
ANR	3493670	ParameterType	uLongf *		3493523	0					
ANR	3493671	Identifier	c		3493523	1					
ANR	3493672	CFGEntryNode	ENTRY		3493523		True				
ANR	3493673	CFGExitNode	EXIT		3493523		True				
ANR	3493674	Symbol	* z		3493523						
ANR	3493675	Symbol	s -> check		3493523						
ANR	3493676	Symbol	DTREE		3493523						
ANR	3493677	Symbol	z -> adler		3493523						
ANR	3493678	Symbol	s -> bitb		3493523						
ANR	3493679	Symbol	CODES		3493523						
ANR	3493680	Symbol	s -> read		3493523						
ANR	3493681	Symbol	* * s		3493523						
ANR	3493682	Symbol	s -> mode		3493523						
ANR	3493683	Symbol	s -> window		3493523						
ANR	3493684	Symbol	TYPE		3493523						
ANR	3493685	Symbol	s -> sub . trees . blens		3493523						
ANR	3493686	Symbol	c		3493523						
ANR	3493687	Symbol	* s -> checkfn		3493523						
ANR	3493688	Symbol	BTREE		3493523						
ANR	3493689	Symbol	s -> sub		3493523						
ANR	3493690	Symbol	stderr		3493523						
ANR	3493691	Symbol	* c		3493523						
ANR	3493692	Symbol	s -> checkfn		3493523						
ANR	3493693	Symbol	s		3493523						
ANR	3493694	Symbol	s -> sub . decode		3493523						
ANR	3493695	Symbol	s -> sub . trees		3493523						
ANR	3493696	Symbol	s -> sub . decode . codes		3493523						
ANR	3493697	Symbol	s -> bitk		3493523						
ANR	3493698	Symbol	z		3493523						
ANR	3493699	Symbol	* s		3493523						
ANR	3493700	Symbol	s -> write		3493523						
ANR	3493701	Symbol	Z_NULL		3493523						
ANR	3493702	Function	inflate_blocks_new	88:0:3745:4418							
ANR	3493703	FunctionDef	"inflate_blocks_new (z_streamp z , check_func c , uInt w)"		3493702	0					
ANR	3493704	CompoundStatement		92:0:3845:4418	3493702	0					
ANR	3493705	IdentifierDeclStatement	inflate_blocks_statef * s ;	93:2:3849:3873	3493702	0	True				
ANR	3493706	IdentifierDecl	* s		3493702	0					
ANR	3493707	IdentifierDeclType	inflate_blocks_statef *		3493702	0					
ANR	3493708	Identifier	s		3493702	1					
ANR	3493709	IfStatement	"if ( ( s = ( inflate_blocks_statef * ) ZALLOC ( z , 1 , sizeof ( struct inflate_blocks_state ) ) ) == Z_NULL )"		3493702	1					
ANR	3493710	Condition	"( s = ( inflate_blocks_statef * ) ZALLOC ( z , 1 , sizeof ( struct inflate_blocks_state ) ) ) == Z_NULL"	95:6:3882:3977	3493702	0	True				
ANR	3493711	EqualityExpression	"( s = ( inflate_blocks_statef * ) ZALLOC ( z , 1 , sizeof ( struct inflate_blocks_state ) ) ) == Z_NULL"		3493702	0		==			
ANR	3493712	AssignmentExpression	"s = ( inflate_blocks_statef * ) ZALLOC ( z , 1 , sizeof ( struct inflate_blocks_state ) )"		3493702	0		=			
ANR	3493713	Identifier	s		3493702	0					
ANR	3493714	CastExpression	"( inflate_blocks_statef * ) ZALLOC ( z , 1 , sizeof ( struct inflate_blocks_state ) )"		3493702	1					
ANR	3493715	CastTarget	inflate_blocks_statef *		3493702	0					
ANR	3493716	CallExpression	"ZALLOC ( z , 1 , sizeof ( struct inflate_blocks_state ) )"		3493702	1					
ANR	3493717	Callee	ZALLOC		3493702	0					
ANR	3493718	Identifier	ZALLOC		3493702	0					
ANR	3493719	ArgumentList	z		3493702	1					
ANR	3493720	Argument	z		3493702	0					
ANR	3493721	Identifier	z		3493702	0					
ANR	3493722	Argument	1		3493702	1					
ANR	3493723	PrimaryExpression	1		3493702	0					
ANR	3493724	Argument	sizeof ( struct inflate_blocks_state )		3493702	2					
ANR	3493725	SizeofExpression	sizeof ( struct inflate_blocks_state )		3493702	0					
ANR	3493726	Sizeof	sizeof		3493702	0					
ANR	3493727	SizeofOperand	struct inflate_blocks_state		3493702	1					
ANR	3493728	Identifier	Z_NULL		3493702	1					
ANR	3493729	ReturnStatement	return s ;	97:4:3984:3992	3493702	1	True				
ANR	3493730	Identifier	s		3493702	0					
ANR	3493731	IfStatement	"if ( ( s -> hufts = ( inflate_huft * ) ZALLOC ( z , sizeof ( inflate_huft ) , MANY ) ) == Z_NULL )"		3493702	2					
ANR	3493732	Condition	"( s -> hufts = ( inflate_huft * ) ZALLOC ( z , sizeof ( inflate_huft ) , MANY ) ) == Z_NULL"	98:6:4000:4082	3493702	0	True				
ANR	3493733	EqualityExpression	"( s -> hufts = ( inflate_huft * ) ZALLOC ( z , sizeof ( inflate_huft ) , MANY ) ) == Z_NULL"		3493702	0		==			
ANR	3493734	AssignmentExpression	"s -> hufts = ( inflate_huft * ) ZALLOC ( z , sizeof ( inflate_huft ) , MANY )"		3493702	0		=			
ANR	3493735	PtrMemberAccess	s -> hufts		3493702	0					
ANR	3493736	Identifier	s		3493702	0					
ANR	3493737	Identifier	hufts		3493702	1					
ANR	3493738	CastExpression	"( inflate_huft * ) ZALLOC ( z , sizeof ( inflate_huft ) , MANY )"		3493702	1					
ANR	3493739	CastTarget	inflate_huft *		3493702	0					
ANR	3493740	CallExpression	"ZALLOC ( z , sizeof ( inflate_huft ) , MANY )"		3493702	1					
ANR	3493741	Callee	ZALLOC		3493702	0					
ANR	3493742	Identifier	ZALLOC		3493702	0					
ANR	3493743	ArgumentList	z		3493702	1					
ANR	3493744	Argument	z		3493702	0					
ANR	3493745	Identifier	z		3493702	0					
ANR	3493746	Argument	sizeof ( inflate_huft )		3493702	1					
ANR	3493747	SizeofExpression	sizeof ( inflate_huft )		3493702	0					
ANR	3493748	Sizeof	sizeof		3493702	0					
ANR	3493749	SizeofOperand	inflate_huft		3493702	1					
ANR	3493750	Argument	MANY		3493702	2					
ANR	3493751	Identifier	MANY		3493702	0					
ANR	3493752	Identifier	Z_NULL		3493702	1					
ANR	3493753	CompoundStatement		9:2:241:241	3493702	1					
ANR	3493754	ExpressionStatement	"ZFREE ( z , s )"	101:4:4093:4104	3493702	0	True				
ANR	3493755	CallExpression	"ZFREE ( z , s )"		3493702	0					
ANR	3493756	Callee	ZFREE		3493702	0					
ANR	3493757	Identifier	ZFREE		3493702	0					
ANR	3493758	ArgumentList	z		3493702	1					
ANR	3493759	Argument	z		3493702	0					
ANR	3493760	Identifier	z		3493702	0					
ANR	3493761	Argument	s		3493702	1					
ANR	3493762	Identifier	s		3493702	0					
ANR	3493763	ReturnStatement	return Z_NULL ;	102:4:4110:4123	3493702	1	True				
ANR	3493764	Identifier	Z_NULL		3493702	0					
ANR	3493765	IfStatement	"if ( ( s -> window = ( Bytef * ) ZALLOC ( z , 1 , w ) ) == Z_NULL )"		3493702	3					
ANR	3493766	Condition	"( s -> window = ( Bytef * ) ZALLOC ( z , 1 , w ) ) == Z_NULL"	104:6:4135:4182	3493702	0	True				
ANR	3493767	EqualityExpression	"( s -> window = ( Bytef * ) ZALLOC ( z , 1 , w ) ) == Z_NULL"		3493702	0		==			
ANR	3493768	AssignmentExpression	"s -> window = ( Bytef * ) ZALLOC ( z , 1 , w )"		3493702	0		=			
ANR	3493769	PtrMemberAccess	s -> window		3493702	0					
ANR	3493770	Identifier	s		3493702	0					
ANR	3493771	Identifier	window		3493702	1					
ANR	3493772	CastExpression	"( Bytef * ) ZALLOC ( z , 1 , w )"		3493702	1					
ANR	3493773	CastTarget	Bytef *		3493702	0					
ANR	3493774	CallExpression	"ZALLOC ( z , 1 , w )"		3493702	1					
ANR	3493775	Callee	ZALLOC		3493702	0					
ANR	3493776	Identifier	ZALLOC		3493702	0					
ANR	3493777	ArgumentList	z		3493702	1					
ANR	3493778	Argument	z		3493702	0					
ANR	3493779	Identifier	z		3493702	0					
ANR	3493780	Argument	1		3493702	1					
ANR	3493781	PrimaryExpression	1		3493702	0					
ANR	3493782	Argument	w		3493702	2					
ANR	3493783	Identifier	w		3493702	0					
ANR	3493784	Identifier	Z_NULL		3493702	1					
ANR	3493785	CompoundStatement		14:2:341:341	3493702	1					
ANR	3493786	ExpressionStatement	"ZFREE ( z , s -> hufts )"	106:4:4193:4211	3493702	0	True				
ANR	3493787	CallExpression	"ZFREE ( z , s -> hufts )"		3493702	0					
ANR	3493788	Callee	ZFREE		3493702	0					
ANR	3493789	Identifier	ZFREE		3493702	0					
ANR	3493790	ArgumentList	z		3493702	1					
ANR	3493791	Argument	z		3493702	0					
ANR	3493792	Identifier	z		3493702	0					
ANR	3493793	Argument	s -> hufts		3493702	1					
ANR	3493794	PtrMemberAccess	s -> hufts		3493702	0					
ANR	3493795	Identifier	s		3493702	0					
ANR	3493796	Identifier	hufts		3493702	1					
ANR	3493797	ExpressionStatement	"ZFREE ( z , s )"	107:4:4217:4228	3493702	1	True				
ANR	3493798	CallExpression	"ZFREE ( z , s )"		3493702	0					
ANR	3493799	Callee	ZFREE		3493702	0					
ANR	3493800	Identifier	ZFREE		3493702	0					
ANR	3493801	ArgumentList	z		3493702	1					
ANR	3493802	Argument	z		3493702	0					
ANR	3493803	Identifier	z		3493702	0					
ANR	3493804	Argument	s		3493702	1					
ANR	3493805	Identifier	s		3493702	0					
ANR	3493806	ReturnStatement	return Z_NULL ;	108:4:4234:4247	3493702	2	True				
ANR	3493807	Identifier	Z_NULL		3493702	0					
ANR	3493808	ExpressionStatement	s -> end = s -> window + w	110:2:4255:4277	3493702	4	True				
ANR	3493809	AssignmentExpression	s -> end = s -> window + w		3493702	0		=			
ANR	3493810	PtrMemberAccess	s -> end		3493702	0					
ANR	3493811	Identifier	s		3493702	0					
ANR	3493812	Identifier	end		3493702	1					
ANR	3493813	AdditiveExpression	s -> window + w		3493702	1		+			
ANR	3493814	PtrMemberAccess	s -> window		3493702	0					
ANR	3493815	Identifier	s		3493702	0					
ANR	3493816	Identifier	window		3493702	1					
ANR	3493817	Identifier	w		3493702	1					
ANR	3493818	ExpressionStatement	s -> checkfn = c	111:2:4281:4295	3493702	5	True				
ANR	3493819	AssignmentExpression	s -> checkfn = c		3493702	0		=			
ANR	3493820	PtrMemberAccess	s -> checkfn		3493702	0					
ANR	3493821	Identifier	s		3493702	0					
ANR	3493822	Identifier	checkfn		3493702	1					
ANR	3493823	Identifier	c		3493702	1					
ANR	3493824	ExpressionStatement	s -> mode = TYPE	112:2:4299:4313	3493702	6	True				
ANR	3493825	AssignmentExpression	s -> mode = TYPE		3493702	0		=			
ANR	3493826	PtrMemberAccess	s -> mode		3493702	0					
ANR	3493827	Identifier	s		3493702	0					
ANR	3493828	Identifier	mode		3493702	1					
ANR	3493829	Identifier	TYPE		3493702	1					
ANR	3493830	ExpressionStatement	"Tracev ( ( stderr , ""inflate:   blocks allocated\\n"" ) )"	113:2:4317:4366	3493702	7	True				
ANR	3493831	CallExpression	"Tracev ( ( stderr , ""inflate:   blocks allocated\\n"" ) )"		3493702	0					
ANR	3493832	Callee	Tracev		3493702	0					
ANR	3493833	Identifier	Tracev		3493702	0					
ANR	3493834	ArgumentList	"stderr , ""inflate:   blocks allocated\\n"""		3493702	1					
ANR	3493835	Argument	"stderr , ""inflate:   blocks allocated\\n"""		3493702	0					
ANR	3493836	Expression	"stderr , ""inflate:   blocks allocated\\n"""		3493702	0					
ANR	3493837	Identifier	stderr		3493702	0					
ANR	3493838	PrimaryExpression	"""inflate:   blocks allocated\\n"""		3493702	1					
ANR	3493839	ExpressionStatement	"inflate_blocks_reset ( s , z , Z_NULL )"	114:2:4370:4404	3493702	8	True				
ANR	3493840	CallExpression	"inflate_blocks_reset ( s , z , Z_NULL )"		3493702	0					
ANR	3493841	Callee	inflate_blocks_reset		3493702	0					
ANR	3493842	Identifier	inflate_blocks_reset		3493702	0					
ANR	3493843	ArgumentList	s		3493702	1					
ANR	3493844	Argument	s		3493702	0					
ANR	3493845	Identifier	s		3493702	0					
ANR	3493846	Argument	z		3493702	1					
ANR	3493847	Identifier	z		3493702	0					
ANR	3493848	Argument	Z_NULL		3493702	2					
ANR	3493849	Identifier	Z_NULL		3493702	0					
ANR	3493850	ReturnStatement	return s ;	115:2:4408:4416	3493702	9	True				
ANR	3493851	Identifier	s		3493702	0					
ANR	3493852	ReturnType	local inflate_blocks_statef *		3493702	1					
ANR	3493853	Identifier	inflate_blocks_new		3493702	2					
ANR	3493854	ParameterList	"z_streamp z , check_func c , uInt w"		3493702	3					
ANR	3493855	Parameter	z_streamp z	89:0:3809:3819	3493702	0	True				
ANR	3493856	ParameterType	z_streamp		3493702	0					
ANR	3493857	Identifier	z		3493702	1					
ANR	3493858	Parameter	check_func c	90:0:3822:3833	3493702	1	True				
ANR	3493859	ParameterType	check_func		3493702	0					
ANR	3493860	Identifier	c		3493702	1					
ANR	3493861	Parameter	uInt w	91:0:3836:3841	3493702	2	True				
ANR	3493862	ParameterType	uInt		3493702	0					
ANR	3493863	Identifier	w		3493702	1					
ANR	3493864	CFGEntryNode	ENTRY		3493702		True				
ANR	3493865	CFGExitNode	EXIT		3493702		True				
ANR	3493866	Symbol	c		3493702						
ANR	3493867	Symbol	s -> end		3493702						
ANR	3493868	Symbol	stderr		3493702						
ANR	3493869	Symbol	s -> checkfn		3493702						
ANR	3493870	Symbol	ZALLOC		3493702						
ANR	3493871	Symbol	s		3493702						
ANR	3493872	Symbol	w		3493702						
ANR	3493873	Symbol	s -> hufts		3493702						
ANR	3493874	Symbol	z		3493702						
ANR	3493875	Symbol	s -> mode		3493702						
ANR	3493876	Symbol	MANY		3493702						
ANR	3493877	Symbol	s -> window		3493702						
ANR	3493878	Symbol	* s		3493702						
ANR	3493879	Symbol	TYPE		3493702						
ANR	3493880	Symbol	Z_NULL		3493702						
ANR	3493881	Function	inflate_blocks	119:0:4422:11910							
ANR	3493882	FunctionDef	"inflate_blocks (inflate_blocks_statef * s , z_streamp z , int r)"		3493881	0					
ANR	3493883	CompoundStatement		123:0:4510:11910	3493881	0					
ANR	3493884	IdentifierDeclStatement	uInt t ;	124:2:4514:4520	3493881	0	True				
ANR	3493885	IdentifierDecl	t		3493881	0					
ANR	3493886	IdentifierDeclType	uInt		3493881	0					
ANR	3493887	Identifier	t		3493881	1					
ANR	3493888	IdentifierDeclStatement	uLong b ;	125:2:4562:4569	3493881	1	True				
ANR	3493889	IdentifierDecl	b		3493881	0					
ANR	3493890	IdentifierDeclType	uLong		3493881	0					
ANR	3493891	Identifier	b		3493881	1					
ANR	3493892	IdentifierDeclStatement	uInt k ;	126:2:4603:4609	3493881	2	True				
ANR	3493893	IdentifierDecl	k		3493881	0					
ANR	3493894	IdentifierDeclType	uInt		3493881	0					
ANR	3493895	Identifier	k		3493881	1					
ANR	3493896	IdentifierDeclStatement	Bytef * p ;	127:2:4652:4660	3493881	3	True				
ANR	3493897	IdentifierDecl	* p		3493881	0					
ANR	3493898	IdentifierDeclType	Bytef *		3493881	0					
ANR	3493899	Identifier	p		3493881	1					
ANR	3493900	IdentifierDeclStatement	uInt n ;	128:2:4701:4707	3493881	4	True				
ANR	3493901	IdentifierDecl	n		3493881	0					
ANR	3493902	IdentifierDeclType	uInt		3493881	0					
ANR	3493903	Identifier	n		3493881	1					
ANR	3493904	IdentifierDeclStatement	Bytef * q ;	129:2:4753:4761	3493881	5	True				
ANR	3493905	IdentifierDecl	* q		3493881	0					
ANR	3493906	IdentifierDeclType	Bytef *		3493881	0					
ANR	3493907	Identifier	q		3493881	1					
ANR	3493908	IdentifierDeclStatement	uInt m ;	130:2:4811:4817	3493881	6	True				
ANR	3493909	IdentifierDecl	m		3493881	0					
ANR	3493910	IdentifierDeclType	uInt		3493881	0					
ANR	3493911	Identifier	m		3493881	1					
ANR	3493912	Statement	LOAD	133:2:4953:4956	3493881	7	True				
ANR	3493913	WhileStatement	while ( 1 )		3493881	8					
ANR	3493914	Condition	1	136:9:5013:5013	3493881	0	True				
ANR	3493915	PrimaryExpression	1		3493881	0					
ANR	3493916	SwitchStatement	switch ( s -> mode )		3493881	1					
ANR	3493917	Condition	s -> mode	136:20:5024:5030	3493881	0	True				
ANR	3493918	PtrMemberAccess	s -> mode		3493881	0					
ANR	3493919	Identifier	s		3493881	0					
ANR	3493920	Identifier	mode		3493881	1					
ANR	3493921	CompoundStatement		222:6:6824:7008	3493881	1					
ANR	3493922	Label	case TYPE :	138:4:5041:5050	3493881	0	True				
ANR	3493923	Identifier	TYPE		3493881	0					
ANR	3493924	Statement	NEEDBITS	139:6:5058:5065	3493881	1	True				
ANR	3493925	Statement	(	139:14:5066:5066	3493881	2	True				
ANR	3493926	Statement	3	139:15:5067:5067	3493881	3	True				
ANR	3493927	Statement	)	139:16:5068:5068	3493881	4	True				
ANR	3493928	ExpressionStatement	t = ( uInt ) b & 7	140:6:5076:5091	3493881	5	True				
ANR	3493929	AssignmentExpression	t = ( uInt ) b & 7		3493881	0		=			
ANR	3493930	Identifier	t		3493881	0					
ANR	3493931	BitAndExpression	( uInt ) b & 7		3493881	1		&			
ANR	3493932	CastExpression	( uInt ) b		3493881	0					
ANR	3493933	CastTarget	uInt		3493881	0					
ANR	3493934	Identifier	b		3493881	1					
ANR	3493935	PrimaryExpression	7		3493881	1					
ANR	3493936	ExpressionStatement	s -> last = t & 1	141:6:5099:5114	3493881	6	True				
ANR	3493937	AssignmentExpression	s -> last = t & 1		3493881	0		=			
ANR	3493938	PtrMemberAccess	s -> last		3493881	0					
ANR	3493939	Identifier	s		3493881	0					
ANR	3493940	Identifier	last		3493881	1					
ANR	3493941	BitAndExpression	t & 1		3493881	1		&			
ANR	3493942	Identifier	t		3493881	0					
ANR	3493943	PrimaryExpression	1		3493881	1					
ANR	3493944	SwitchStatement	switch ( t >> 1 )		3493881	7					
ANR	3493945	Condition	t >> 1	142:14:5130:5135	3493881	0	True				
ANR	3493946	ShiftExpression	t >> 1		3493881	0		>>			
ANR	3493947	Identifier	t		3493881	0					
ANR	3493948	PrimaryExpression	1		3493881	1					
ANR	3493949	CompoundStatement		21:6:633:633	3493881	1					
ANR	3493950	Label	case 0 :	144:8:5154:5160	3493881	0	True				
ANR	3493951	ExpressionStatement	"Tracev ( ( stderr , ""inflate:     stored block%s\\n"" , s -> last ? "" (last)"" : """" ) )"	145:10:5209:5301	3493881	1	True				
ANR	3493952	CallExpression	"Tracev ( ( stderr , ""inflate:     stored block%s\\n"" , s -> last ? "" (last)"" : """" ) )"		3493881	0					
ANR	3493953	Callee	Tracev		3493881	0					
ANR	3493954	Identifier	Tracev		3493881	0					
ANR	3493955	ArgumentList	"stderr , ""inflate:     stored block%s\\n"" , s -> last ? "" (last)"" : """""		3493881	1					
ANR	3493956	Argument	"stderr , ""inflate:     stored block%s\\n"" , s -> last ? "" (last)"" : """""		3493881	0					
ANR	3493957	Expression	"stderr , ""inflate:     stored block%s\\n"" , s -> last ? "" (last)"" : """""		3493881	0					
ANR	3493958	Identifier	stderr		3493881	0					
ANR	3493959	Expression	"""inflate:     stored block%s\\n"" , s -> last ? "" (last)"" : """""		3493881	1					
ANR	3493960	PrimaryExpression	"""inflate:     stored block%s\\n"""		3493881	0					
ANR	3493961	ConditionalExpression	"s -> last ? "" (last)"" : """""		3493881	1					
ANR	3493962	Condition	s -> last		3493881	0					
ANR	3493963	PtrMemberAccess	s -> last		3493881	0					
ANR	3493964	Identifier	s		3493881	0					
ANR	3493965	Identifier	last		3493881	1					
ANR	3493966	PrimaryExpression	""" (last)"""		3493881	1					
ANR	3493967	PrimaryExpression	""""""		3493881	2					
ANR	3493968	Statement	DUMPBITS	147:10:5313:5320	3493881	2	True				
ANR	3493969	Statement	(	147:18:5321:5321	3493881	3	True				
ANR	3493970	Statement	3	147:19:5322:5322	3493881	4	True				
ANR	3493971	Statement	)	147:20:5323:5323	3493881	5	True				
ANR	3493972	ExpressionStatement	t = k & 7	148:10:5335:5344	3493881	6	True				
ANR	3493973	AssignmentExpression	t = k & 7		3493881	0		=			
ANR	3493974	Identifier	t		3493881	0					
ANR	3493975	BitAndExpression	k & 7		3493881	1		&			
ANR	3493976	Identifier	k		3493881	0					
ANR	3493977	PrimaryExpression	7		3493881	1					
ANR	3493978	Statement	DUMPBITS	149:10:5401:5408	3493881	7	True				
ANR	3493979	ExpressionStatement	( t ) s -> mode = LENS	149:18:5409:5437	3493881	8	True				
ANR	3493980	AssignmentExpression	( t ) s -> mode = LENS		3493881	0		=			
ANR	3493981	CastExpression	( t ) s -> mode		3493881	0					
ANR	3493982	CastTarget	t		3493881	0					
ANR	3493983	PtrMemberAccess	s -> mode		3493881	1					
ANR	3493984	Identifier	s		3493881	0					
ANR	3493985	Identifier	mode		3493881	1					
ANR	3493986	Identifier	LENS		3493881	1					
ANR	3493987	BreakStatement	break ;	151:10:5496:5501	3493881	9	True				
ANR	3493988	Label	case 1 :	152:8:5511:5517	3493881	10	True				
ANR	3493989	ExpressionStatement	"Tracev ( ( stderr , ""inflate:     fixed codes block%s\\n"" , s -> last ? "" (last)"" : """" ) )"	153:10:5565:5662	3493881	11	True				
ANR	3493990	CallExpression	"Tracev ( ( stderr , ""inflate:     fixed codes block%s\\n"" , s -> last ? "" (last)"" : """" ) )"		3493881	0					
ANR	3493991	Callee	Tracev		3493881	0					
ANR	3493992	Identifier	Tracev		3493881	0					
ANR	3493993	ArgumentList	"stderr , ""inflate:     fixed codes block%s\\n"" , s -> last ? "" (last)"" : """""		3493881	1					
ANR	3493994	Argument	"stderr , ""inflate:     fixed codes block%s\\n"" , s -> last ? "" (last)"" : """""		3493881	0					
ANR	3493995	Expression	"stderr , ""inflate:     fixed codes block%s\\n"" , s -> last ? "" (last)"" : """""		3493881	0					
ANR	3493996	Identifier	stderr		3493881	0					
ANR	3493997	Expression	"""inflate:     fixed codes block%s\\n"" , s -> last ? "" (last)"" : """""		3493881	1					
ANR	3493998	PrimaryExpression	"""inflate:     fixed codes block%s\\n"""		3493881	0					
ANR	3493999	ConditionalExpression	"s -> last ? "" (last)"" : """""		3493881	1					
ANR	3494000	Condition	s -> last		3493881	0					
ANR	3494001	PtrMemberAccess	s -> last		3493881	0					
ANR	3494002	Identifier	s		3493881	0					
ANR	3494003	Identifier	last		3493881	1					
ANR	3494004	PrimaryExpression	""" (last)"""		3493881	1					
ANR	3494005	PrimaryExpression	""""""		3493881	2					
ANR	3494006	CompoundStatement		35:12:1202:1223	3493881	12					
ANR	3494007	IdentifierDeclStatement	"uInt bl , bd ;"	156:12:5688:5699	3493881	0	True				
ANR	3494008	IdentifierDecl	bl		3493881	0					
ANR	3494009	IdentifierDeclType	uInt		3493881	0					
ANR	3494010	Identifier	bl		3493881	1					
ANR	3494011	IdentifierDecl	bd		3493881	1					
ANR	3494012	IdentifierDeclType	uInt		3493881	0					
ANR	3494013	Identifier	bd		3493881	1					
ANR	3494014	IdentifierDeclStatement	"inflate_huft * tl , * td ;"	157:12:5713:5734	3493881	1	True				
ANR	3494015	IdentifierDecl	* tl		3493881	0					
ANR	3494016	IdentifierDeclType	inflate_huft *		3493881	0					
ANR	3494017	Identifier	tl		3493881	1					
ANR	3494018	IdentifierDecl	* td		3493881	1					
ANR	3494019	IdentifierDeclType	inflate_huft *		3493881	0					
ANR	3494020	Identifier	td		3493881	1					
ANR	3494021	ExpressionStatement	"inflate_trees_fixed ( & bl , & bd , ( const inflate_huft * * ) & tl , ( const inflate_huft * * ) & td , z )"	159:12:5749:5877	3493881	2	True				
ANR	3494022	CallExpression	"inflate_trees_fixed ( & bl , & bd , ( const inflate_huft * * ) & tl , ( const inflate_huft * * ) & td , z )"		3493881	0					
ANR	3494023	Callee	inflate_trees_fixed		3493881	0					
ANR	3494024	Identifier	inflate_trees_fixed		3493881	0					
ANR	3494025	ArgumentList	& bl		3493881	1					
ANR	3494026	Argument	& bl		3493881	0					
ANR	3494027	UnaryOperationExpression	& bl		3493881	0					
ANR	3494028	UnaryOperator	&		3493881	0					
ANR	3494029	Identifier	bl		3493881	1					
ANR	3494030	Argument	& bd		3493881	1					
ANR	3494031	UnaryOperationExpression	& bd		3493881	0					
ANR	3494032	UnaryOperator	&		3493881	0					
ANR	3494033	Identifier	bd		3493881	1					
ANR	3494034	Argument	( const inflate_huft * * ) & tl		3493881	2					
ANR	3494035	CastExpression	( const inflate_huft * * ) & tl		3493881	0					
ANR	3494036	CastTarget	const inflate_huft * *		3493881	0					
ANR	3494037	UnaryOperationExpression	& tl		3493881	1					
ANR	3494038	UnaryOperator	&		3493881	0					
ANR	3494039	Identifier	tl		3493881	1					
ANR	3494040	Argument	( const inflate_huft * * ) & td		3493881	3					
ANR	3494041	CastExpression	( const inflate_huft * * ) & td		3493881	0					
ANR	3494042	CastTarget	const inflate_huft * *		3493881	0					
ANR	3494043	UnaryOperationExpression	& td		3493881	1					
ANR	3494044	UnaryOperator	&		3493881	0					
ANR	3494045	Identifier	td		3493881	1					
ANR	3494046	Argument	z		3493881	4					
ANR	3494047	Identifier	z		3493881	0					
ANR	3494048	ExpressionStatement	"s -> sub . decode . codes = inflate_codes_new ( bl , bd , tl , td , z )"	161:12:5891:5949	3493881	3	True				
ANR	3494049	AssignmentExpression	"s -> sub . decode . codes = inflate_codes_new ( bl , bd , tl , td , z )"		3493881	0		=			
ANR	3494050	MemberAccess	s -> sub . decode . codes		3493881	0					
ANR	3494051	MemberAccess	s -> sub . decode		3493881	0					
ANR	3494052	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494053	Identifier	s		3493881	0					
ANR	3494054	Identifier	sub		3493881	1					
ANR	3494055	Identifier	decode		3493881	1					
ANR	3494056	Identifier	codes		3493881	1					
ANR	3494057	CallExpression	"inflate_codes_new ( bl , bd , tl , td , z )"		3493881	1					
ANR	3494058	Callee	inflate_codes_new		3493881	0					
ANR	3494059	Identifier	inflate_codes_new		3493881	0					
ANR	3494060	ArgumentList	bl		3493881	1					
ANR	3494061	Argument	bl		3493881	0					
ANR	3494062	Identifier	bl		3493881	0					
ANR	3494063	Argument	bd		3493881	1					
ANR	3494064	Identifier	bd		3493881	0					
ANR	3494065	Argument	tl		3493881	2					
ANR	3494066	Identifier	tl		3493881	0					
ANR	3494067	Argument	td		3493881	3					
ANR	3494068	Identifier	td		3493881	0					
ANR	3494069	Argument	z		3493881	4					
ANR	3494070	Identifier	z		3493881	0					
ANR	3494071	IfStatement	if ( s -> sub . decode . codes == Z_NULL )		3493881	4					
ANR	3494072	Condition	s -> sub . decode . codes == Z_NULL	162:16:5967:5995	3493881	0	True				
ANR	3494073	EqualityExpression	s -> sub . decode . codes == Z_NULL		3493881	0		==			
ANR	3494074	MemberAccess	s -> sub . decode . codes		3493881	0					
ANR	3494075	MemberAccess	s -> sub . decode		3493881	0					
ANR	3494076	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494077	Identifier	s		3493881	0					
ANR	3494078	Identifier	sub		3493881	1					
ANR	3494079	Identifier	decode		3493881	1					
ANR	3494080	Identifier	codes		3493881	1					
ANR	3494081	Identifier	Z_NULL		3493881	1					
ANR	3494082	CompoundStatement		41:12:1499:1499	3493881	1					
ANR	3494083	ExpressionStatement	r = Z_MEM_ERROR	164:14:6026:6041	3493881	0	True				
ANR	3494084	AssignmentExpression	r = Z_MEM_ERROR		3493881	0		=			
ANR	3494085	Identifier	r		3493881	0					
ANR	3494086	Identifier	Z_MEM_ERROR		3493881	1					
ANR	3494087	Statement	LEAVE	165:14:6057:6061	3493881	1	True				
ANR	3494088	Statement	DUMPBITS	168:10:6099:6106	3493881	13	True				
ANR	3494089	Statement	(	168:18:6107:6107	3493881	14	True				
ANR	3494090	Statement	3	168:19:6108:6108	3493881	15	True				
ANR	3494091	Statement	)	168:20:6109:6109	3493881	16	True				
ANR	3494092	ExpressionStatement	s -> mode = CODES	169:10:6121:6136	3493881	17	True				
ANR	3494093	AssignmentExpression	s -> mode = CODES		3493881	0		=			
ANR	3494094	PtrMemberAccess	s -> mode		3493881	0					
ANR	3494095	Identifier	s		3493881	0					
ANR	3494096	Identifier	mode		3493881	1					
ANR	3494097	Identifier	CODES		3493881	1					
ANR	3494098	BreakStatement	break ;	170:10:6148:6153	3493881	18	True				
ANR	3494099	Label	case 2 :	171:8:6163:6169	3493881	19	True				
ANR	3494100	ExpressionStatement	"Tracev ( ( stderr , ""inflate:     dynamic codes block%s\\n"" , s -> last ? "" (last)"" : """" ) )"	172:10:6219:6318	3493881	20	True				
ANR	3494101	CallExpression	"Tracev ( ( stderr , ""inflate:     dynamic codes block%s\\n"" , s -> last ? "" (last)"" : """" ) )"		3493881	0					
ANR	3494102	Callee	Tracev		3493881	0					
ANR	3494103	Identifier	Tracev		3493881	0					
ANR	3494104	ArgumentList	"stderr , ""inflate:     dynamic codes block%s\\n"" , s -> last ? "" (last)"" : """""		3493881	1					
ANR	3494105	Argument	"stderr , ""inflate:     dynamic codes block%s\\n"" , s -> last ? "" (last)"" : """""		3493881	0					
ANR	3494106	Expression	"stderr , ""inflate:     dynamic codes block%s\\n"" , s -> last ? "" (last)"" : """""		3493881	0					
ANR	3494107	Identifier	stderr		3493881	0					
ANR	3494108	Expression	"""inflate:     dynamic codes block%s\\n"" , s -> last ? "" (last)"" : """""		3493881	1					
ANR	3494109	PrimaryExpression	"""inflate:     dynamic codes block%s\\n"""		3493881	0					
ANR	3494110	ConditionalExpression	"s -> last ? "" (last)"" : """""		3493881	1					
ANR	3494111	Condition	s -> last		3493881	0					
ANR	3494112	PtrMemberAccess	s -> last		3493881	0					
ANR	3494113	Identifier	s		3493881	0					
ANR	3494114	Identifier	last		3493881	1					
ANR	3494115	PrimaryExpression	""" (last)"""		3493881	1					
ANR	3494116	PrimaryExpression	""""""		3493881	2					
ANR	3494117	Statement	DUMPBITS	174:10:6330:6337	3493881	21	True				
ANR	3494118	Statement	(	174:18:6338:6338	3493881	22	True				
ANR	3494119	Statement	3	174:19:6339:6339	3493881	23	True				
ANR	3494120	Statement	)	174:20:6340:6340	3493881	24	True				
ANR	3494121	ExpressionStatement	s -> mode = TABLE	175:10:6352:6367	3493881	25	True				
ANR	3494122	AssignmentExpression	s -> mode = TABLE		3493881	0		=			
ANR	3494123	PtrMemberAccess	s -> mode		3493881	0					
ANR	3494124	Identifier	s		3493881	0					
ANR	3494125	Identifier	mode		3493881	1					
ANR	3494126	Identifier	TABLE		3493881	1					
ANR	3494127	BreakStatement	break ;	176:10:6379:6384	3493881	26	True				
ANR	3494128	Label	case 3 :	177:8:6394:6400	3493881	27	True				
ANR	3494129	Statement	DUMPBITS	178:10:6450:6457	3493881	28	True				
ANR	3494130	Statement	(	178:18:6458:6458	3493881	29	True				
ANR	3494131	Statement	3	178:19:6459:6459	3493881	30	True				
ANR	3494132	Statement	)	178:20:6460:6460	3493881	31	True				
ANR	3494133	ExpressionStatement	s -> mode = BAD	179:10:6472:6485	3493881	32	True				
ANR	3494134	AssignmentExpression	s -> mode = BAD		3493881	0		=			
ANR	3494135	PtrMemberAccess	s -> mode		3493881	0					
ANR	3494136	Identifier	s		3493881	0					
ANR	3494137	Identifier	mode		3493881	1					
ANR	3494138	Identifier	BAD		3493881	1					
ANR	3494139	ExpressionStatement	"z -> msg = ( char * ) ""invalid block type"""	180:10:6497:6533	3493881	33	True				
ANR	3494140	AssignmentExpression	"z -> msg = ( char * ) ""invalid block type"""		3493881	0		=			
ANR	3494141	PtrMemberAccess	z -> msg		3493881	0					
ANR	3494142	Identifier	z		3493881	0					
ANR	3494143	Identifier	msg		3493881	1					
ANR	3494144	CastExpression	"( char * ) ""invalid block type"""		3493881	1					
ANR	3494145	CastTarget	char *		3493881	0					
ANR	3494146	PrimaryExpression	"""invalid block type"""		3493881	1					
ANR	3494147	ExpressionStatement	r = Z_DATA_ERROR	181:10:6545:6561	3493881	34	True				
ANR	3494148	AssignmentExpression	r = Z_DATA_ERROR		3493881	0		=			
ANR	3494149	Identifier	r		3493881	0					
ANR	3494150	Identifier	Z_DATA_ERROR		3493881	1					
ANR	3494151	Statement	LEAVE	182:10:6573:6577	3493881	35	True				
ANR	3494152	BreakStatement	break ;	184:6:6593:6598	3493881	8	True				
ANR	3494153	Label	case LENS :	185:4:6604:6613	3493881	9	True				
ANR	3494154	Identifier	LENS		3493881	0					
ANR	3494155	Statement	NEEDBITS	186:6:6621:6628	3493881	10	True				
ANR	3494156	Statement	(	186:14:6629:6629	3493881	11	True				
ANR	3494157	Statement	32	186:15:6630:6631	3493881	12	True				
ANR	3494158	Statement	)	186:17:6632:6632	3493881	13	True				
ANR	3494159	IfStatement	if ( ( ( ( ~b ) >> 16 ) & 0xffff ) != ( b & 0xffff ) )		3493881	14					
ANR	3494160	Condition	( ( ( ~b ) >> 16 ) & 0xffff ) != ( b & 0xffff )	187:10:6644:6682	3493881	0	True				
ANR	3494161	EqualityExpression	( ( ( ~b ) >> 16 ) & 0xffff ) != ( b & 0xffff )		3493881	0		!=			
ANR	3494162	BitAndExpression	( ( ~b ) >> 16 ) & 0xffff		3493881	0		&			
ANR	3494163	ShiftExpression	( ~b ) >> 16		3493881	0		>>			
ANR	3494164	Identifier	~b		3493881	0					
ANR	3494165	PrimaryExpression	16		3493881	1					
ANR	3494166	PrimaryExpression	0xffff		3493881	1					
ANR	3494167	BitAndExpression	b & 0xffff		3493881	1		&			
ANR	3494168	Identifier	b		3493881	0					
ANR	3494169	PrimaryExpression	0xffff		3493881	1					
ANR	3494170	CompoundStatement		66:6:2180:2180	3493881	1					
ANR	3494171	ExpressionStatement	s -> mode = BAD	189:8:6701:6714	3493881	0	True				
ANR	3494172	AssignmentExpression	s -> mode = BAD		3493881	0		=			
ANR	3494173	PtrMemberAccess	s -> mode		3493881	0					
ANR	3494174	Identifier	s		3493881	0					
ANR	3494175	Identifier	mode		3493881	1					
ANR	3494176	Identifier	BAD		3493881	1					
ANR	3494177	ExpressionStatement	"z -> msg = ( char * ) ""invalid stored block lengths"""	190:8:6724:6770	3493881	1	True				
ANR	3494178	AssignmentExpression	"z -> msg = ( char * ) ""invalid stored block lengths"""		3493881	0		=			
ANR	3494179	PtrMemberAccess	z -> msg		3493881	0					
ANR	3494180	Identifier	z		3493881	0					
ANR	3494181	Identifier	msg		3493881	1					
ANR	3494182	CastExpression	"( char * ) ""invalid stored block lengths"""		3493881	1					
ANR	3494183	CastTarget	char *		3493881	0					
ANR	3494184	PrimaryExpression	"""invalid stored block lengths"""		3493881	1					
ANR	3494185	ExpressionStatement	r = Z_DATA_ERROR	191:8:6780:6796	3493881	2	True				
ANR	3494186	AssignmentExpression	r = Z_DATA_ERROR		3493881	0		=			
ANR	3494187	Identifier	r		3493881	0					
ANR	3494188	Identifier	Z_DATA_ERROR		3493881	1					
ANR	3494189	Statement	LEAVE	192:8:6806:6810	3493881	3	True				
ANR	3494190	ExpressionStatement	s -> sub . left = ( uInt ) b & 0xffff	194:6:6826:6856	3493881	15	True				
ANR	3494191	AssignmentExpression	s -> sub . left = ( uInt ) b & 0xffff		3493881	0		=			
ANR	3494192	MemberAccess	s -> sub . left		3493881	0					
ANR	3494193	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494194	Identifier	s		3493881	0					
ANR	3494195	Identifier	sub		3493881	1					
ANR	3494196	Identifier	left		3493881	1					
ANR	3494197	BitAndExpression	( uInt ) b & 0xffff		3493881	1		&			
ANR	3494198	CastExpression	( uInt ) b		3493881	0					
ANR	3494199	CastTarget	uInt		3493881	0					
ANR	3494200	Identifier	b		3493881	1					
ANR	3494201	PrimaryExpression	0xffff		3493881	1					
ANR	3494202	ExpressionStatement	b = k = 0	195:6:6864:6873	3493881	16	True				
ANR	3494203	AssignmentExpression	b = k = 0		3493881	0		=			
ANR	3494204	Identifier	b		3493881	0					
ANR	3494205	AssignmentExpression	k = 0		3493881	1		=			
ANR	3494206	Identifier	k		3493881	0					
ANR	3494207	PrimaryExpression	0		3493881	1					
ANR	3494208	ExpressionStatement	"Tracev ( ( stderr , ""inflate:       stored length %u\\n"" , s -> sub . left ) )"	196:6:6918:6984	3493881	17	True				
ANR	3494209	CallExpression	"Tracev ( ( stderr , ""inflate:       stored length %u\\n"" , s -> sub . left ) )"		3493881	0					
ANR	3494210	Callee	Tracev		3493881	0					
ANR	3494211	Identifier	Tracev		3493881	0					
ANR	3494212	ArgumentList	"stderr , ""inflate:       stored length %u\\n"" , s -> sub . left"		3493881	1					
ANR	3494213	Argument	"stderr , ""inflate:       stored length %u\\n"" , s -> sub . left"		3493881	0					
ANR	3494214	Expression	"stderr , ""inflate:       stored length %u\\n"" , s -> sub . left"		3493881	0					
ANR	3494215	Identifier	stderr		3493881	0					
ANR	3494216	Expression	"""inflate:       stored length %u\\n"" , s -> sub . left"		3493881	1					
ANR	3494217	PrimaryExpression	"""inflate:       stored length %u\\n"""		3493881	0					
ANR	3494218	MemberAccess	s -> sub . left		3493881	1					
ANR	3494219	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494220	Identifier	s		3493881	0					
ANR	3494221	Identifier	sub		3493881	1					
ANR	3494222	Identifier	left		3493881	1					
ANR	3494223	ExpressionStatement	s -> mode = s -> sub . left ? STORED : ( s -> last ? DRY : TYPE )	197:6:6992:7047	3493881	18	True				
ANR	3494224	AssignmentExpression	s -> mode = s -> sub . left ? STORED : ( s -> last ? DRY : TYPE )		3493881	0		=			
ANR	3494225	PtrMemberAccess	s -> mode		3493881	0					
ANR	3494226	Identifier	s		3493881	0					
ANR	3494227	Identifier	mode		3493881	1					
ANR	3494228	ConditionalExpression	s -> sub . left ? STORED : ( s -> last ? DRY : TYPE )		3493881	1					
ANR	3494229	Condition	s -> sub . left		3493881	0					
ANR	3494230	MemberAccess	s -> sub . left		3493881	0					
ANR	3494231	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494232	Identifier	s		3493881	0					
ANR	3494233	Identifier	sub		3493881	1					
ANR	3494234	Identifier	left		3493881	1					
ANR	3494235	Identifier	STORED		3493881	1					
ANR	3494236	ConditionalExpression	s -> last ? DRY : TYPE		3493881	2					
ANR	3494237	Condition	s -> last		3493881	0					
ANR	3494238	PtrMemberAccess	s -> last		3493881	0					
ANR	3494239	Identifier	s		3493881	0					
ANR	3494240	Identifier	last		3493881	1					
ANR	3494241	Identifier	DRY		3493881	1					
ANR	3494242	Identifier	TYPE		3493881	2					
ANR	3494243	BreakStatement	break ;	198:6:7055:7060	3493881	19	True				
ANR	3494244	Label	case STORED :	199:4:7066:7077	3493881	20	True				
ANR	3494245	Identifier	STORED		3493881	0					
ANR	3494246	IfStatement	if ( n == 0 )		3493881	21					
ANR	3494247	Condition	n == 0	200:10:7089:7094	3493881	0	True				
ANR	3494248	EqualityExpression	n == 0		3493881	0		==			
ANR	3494249	Identifier	n		3493881	0					
ANR	3494250	PrimaryExpression	0		3493881	1					
ANR	3494251	IdentifierDeclStatement	LEAVE NEEDOUT t = s -> sub . left ;	201:8:7105:7146	3493881	1	True				
ANR	3494252	IdentifierDecl	t = s -> sub . left		3493881	0					
ANR	3494253	IdentifierDeclType	LEAVE NEEDOUT		3493881	0					
ANR	3494254	Identifier	t		3493881	1					
ANR	3494255	AssignmentExpression	t = s -> sub . left		3493881	2		=			
ANR	3494256	Identifier	t		3493881	0					
ANR	3494257	MemberAccess	s -> sub . left		3493881	1					
ANR	3494258	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494259	Identifier	s		3493881	0					
ANR	3494260	Identifier	sub		3493881	1					
ANR	3494261	Identifier	left		3493881	1					
ANR	3494262	IfStatement	if ( t > n )		3493881	22					
ANR	3494263	Condition	t > n	204:10:7158:7162	3493881	0	True				
ANR	3494264	RelationalExpression	t > n		3493881	0		>			
ANR	3494265	Identifier	t		3493881	0					
ANR	3494266	Identifier	n		3493881	1					
ANR	3494267	ExpressionStatement	t = n	204:17:7165:7170	3493881	1	True				
ANR	3494268	AssignmentExpression	t = n		3493881	0		=			
ANR	3494269	Identifier	t		3493881	0					
ANR	3494270	Identifier	n		3493881	1					
ANR	3494271	IfStatement	if ( t > m )		3493881	23					
ANR	3494272	Condition	t > m	205:10:7182:7186	3493881	0	True				
ANR	3494273	RelationalExpression	t > m		3493881	0		>			
ANR	3494274	Identifier	t		3493881	0					
ANR	3494275	Identifier	m		3493881	1					
ANR	3494276	ExpressionStatement	t = m	205:17:7189:7194	3493881	1	True				
ANR	3494277	AssignmentExpression	t = m		3493881	0		=			
ANR	3494278	Identifier	t		3493881	0					
ANR	3494279	Identifier	m		3493881	1					
ANR	3494280	ExpressionStatement	"zmemcpy ( q , p , t )"	206:6:7202:7218	3493881	24	True				
ANR	3494281	CallExpression	"zmemcpy ( q , p , t )"		3493881	0					
ANR	3494282	Callee	zmemcpy		3493881	0					
ANR	3494283	Identifier	zmemcpy		3493881	0					
ANR	3494284	ArgumentList	q		3493881	1					
ANR	3494285	Argument	q		3493881	0					
ANR	3494286	Identifier	q		3493881	0					
ANR	3494287	Argument	p		3493881	1					
ANR	3494288	Identifier	p		3493881	0					
ANR	3494289	Argument	t		3493881	2					
ANR	3494290	Identifier	t		3493881	0					
ANR	3494291	ExpressionStatement	p += t	207:6:7226:7232	3493881	25	True				
ANR	3494292	AssignmentExpression	p += t		3493881	0		+=			
ANR	3494293	Identifier	p		3493881	0					
ANR	3494294	Identifier	t		3493881	1					
ANR	3494295	ExpressionStatement	n -= t	207:15:7235:7241	3493881	26	True				
ANR	3494296	AssignmentExpression	n -= t		3493881	0		-=			
ANR	3494297	Identifier	n		3493881	0					
ANR	3494298	Identifier	t		3493881	1					
ANR	3494299	ExpressionStatement	q += t	208:6:7249:7255	3493881	27	True				
ANR	3494300	AssignmentExpression	q += t		3493881	0		+=			
ANR	3494301	Identifier	q		3493881	0					
ANR	3494302	Identifier	t		3493881	1					
ANR	3494303	ExpressionStatement	m -= t	208:15:7258:7264	3493881	28	True				
ANR	3494304	AssignmentExpression	m -= t		3493881	0		-=			
ANR	3494305	Identifier	m		3493881	0					
ANR	3494306	Identifier	t		3493881	1					
ANR	3494307	IfStatement	if ( ( s -> sub . left -= t ) != 0 )		3493881	29					
ANR	3494308	Condition	( s -> sub . left -= t ) != 0	209:10:7276:7298	3493881	0	True				
ANR	3494309	EqualityExpression	( s -> sub . left -= t ) != 0		3493881	0		!=			
ANR	3494310	AssignmentExpression	s -> sub . left -= t		3493881	0		-=			
ANR	3494311	MemberAccess	s -> sub . left		3493881	0					
ANR	3494312	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494313	Identifier	s		3493881	0					
ANR	3494314	Identifier	sub		3493881	1					
ANR	3494315	Identifier	left		3493881	1					
ANR	3494316	Identifier	t		3493881	1					
ANR	3494317	PrimaryExpression	0		3493881	1					
ANR	3494318	BreakStatement	break ;	210:8:7309:7314	3493881	1	True				
ANR	3494319	ExpressionStatement	"Tracev ( ( stderr , ""inflate:       stored end, %lu total out\\n"" , z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) ) ) )"	211:6:7322:7496	3493881	30	True				
ANR	3494320	CallExpression	"Tracev ( ( stderr , ""inflate:       stored end, %lu total out\\n"" , z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) ) ) )"		3493881	0					
ANR	3494321	Callee	Tracev		3493881	0					
ANR	3494322	Identifier	Tracev		3493881	0					
ANR	3494323	ArgumentList	"stderr , ""inflate:       stored end, %lu total out\\n"" , z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) )"		3493881	1					
ANR	3494324	Argument	"stderr , ""inflate:       stored end, %lu total out\\n"" , z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) )"		3493881	0					
ANR	3494325	Expression	"stderr , ""inflate:       stored end, %lu total out\\n"" , z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) )"		3493881	0					
ANR	3494326	Identifier	stderr		3493881	0					
ANR	3494327	Expression	"""inflate:       stored end, %lu total out\\n"" , z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) )"		3493881	1					
ANR	3494328	PrimaryExpression	"""inflate:       stored end, %lu total out\\n"""		3493881	0					
ANR	3494329	AdditiveExpression	z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) )		3493881	1		+			
ANR	3494330	PtrMemberAccess	z -> total_out		3493881	0					
ANR	3494331	Identifier	z		3493881	0					
ANR	3494332	Identifier	total_out		3493881	1					
ANR	3494333	ConditionalExpression	q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window )		3493881	1					
ANR	3494334	Condition	q >= s -> read		3493881	0					
ANR	3494335	RelationalExpression	q >= s -> read		3493881	0		>=			
ANR	3494336	Identifier	q		3493881	0					
ANR	3494337	PtrMemberAccess	s -> read		3493881	1					
ANR	3494338	Identifier	s		3493881	0					
ANR	3494339	Identifier	read		3493881	1					
ANR	3494340	AdditiveExpression	q - s -> read		3493881	1		-			
ANR	3494341	Identifier	q		3493881	0					
ANR	3494342	PtrMemberAccess	s -> read		3493881	1					
ANR	3494343	Identifier	s		3493881	0					
ANR	3494344	Identifier	read		3493881	1					
ANR	3494345	AdditiveExpression	( s -> end - s -> read ) + ( q - s -> window )		3493881	2		+			
ANR	3494346	AdditiveExpression	s -> end - s -> read		3493881	0		-			
ANR	3494347	PtrMemberAccess	s -> end		3493881	0					
ANR	3494348	Identifier	s		3493881	0					
ANR	3494349	Identifier	end		3493881	1					
ANR	3494350	PtrMemberAccess	s -> read		3493881	1					
ANR	3494351	Identifier	s		3493881	0					
ANR	3494352	Identifier	read		3493881	1					
ANR	3494353	AdditiveExpression	q - s -> window		3493881	1		-			
ANR	3494354	Identifier	q		3493881	0					
ANR	3494355	PtrMemberAccess	s -> window		3493881	1					
ANR	3494356	Identifier	s		3493881	0					
ANR	3494357	Identifier	window		3493881	1					
ANR	3494358	ExpressionStatement	s -> mode = s -> last ? DRY : TYPE	214:6:7504:7534	3493881	31	True				
ANR	3494359	AssignmentExpression	s -> mode = s -> last ? DRY : TYPE		3493881	0		=			
ANR	3494360	PtrMemberAccess	s -> mode		3493881	0					
ANR	3494361	Identifier	s		3493881	0					
ANR	3494362	Identifier	mode		3493881	1					
ANR	3494363	ConditionalExpression	s -> last ? DRY : TYPE		3493881	1					
ANR	3494364	Condition	s -> last		3493881	0					
ANR	3494365	PtrMemberAccess	s -> last		3493881	0					
ANR	3494366	Identifier	s		3493881	0					
ANR	3494367	Identifier	last		3493881	1					
ANR	3494368	Identifier	DRY		3493881	1					
ANR	3494369	Identifier	TYPE		3493881	2					
ANR	3494370	BreakStatement	break ;	215:6:7542:7547	3493881	32	True				
ANR	3494371	Label	case TABLE :	216:4:7553:7563	3493881	33	True				
ANR	3494372	Identifier	TABLE		3493881	0					
ANR	3494373	Statement	NEEDBITS	217:6:7571:7578	3493881	34	True				
ANR	3494374	Statement	(	217:14:7579:7579	3493881	35	True				
ANR	3494375	Statement	14	217:15:7580:7581	3493881	36	True				
ANR	3494376	Statement	)	217:17:7582:7582	3493881	37	True				
ANR	3494377	ExpressionStatement	s -> sub . trees . table = t = ( uInt ) b & 0x3fff	218:6:7590:7631	3493881	38	True				
ANR	3494378	AssignmentExpression	s -> sub . trees . table = t = ( uInt ) b & 0x3fff		3493881	0		=			
ANR	3494379	MemberAccess	s -> sub . trees . table		3493881	0					
ANR	3494380	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494381	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494382	Identifier	s		3493881	0					
ANR	3494383	Identifier	sub		3493881	1					
ANR	3494384	Identifier	trees		3493881	1					
ANR	3494385	Identifier	table		3493881	1					
ANR	3494386	AssignmentExpression	t = ( uInt ) b & 0x3fff		3493881	1		=			
ANR	3494387	Identifier	t		3493881	0					
ANR	3494388	BitAndExpression	( uInt ) b & 0x3fff		3493881	1		&			
ANR	3494389	CastExpression	( uInt ) b		3493881	0					
ANR	3494390	CastTarget	uInt		3493881	0					
ANR	3494391	Identifier	b		3493881	1					
ANR	3494392	PrimaryExpression	0x3fff		3493881	1					
ANR	3494393	IfStatement	if ( ( t & 0x1f ) > 29 || ( ( t >> 5 ) & 0x1f ) > 29 )		3493881	39					
ANR	3494394	Condition	( t & 0x1f ) > 29 || ( ( t >> 5 ) & 0x1f ) > 29	220:10:7672:7712	3493881	0	True				
ANR	3494395	OrExpression	( t & 0x1f ) > 29 || ( ( t >> 5 ) & 0x1f ) > 29		3493881	0		||			
ANR	3494396	RelationalExpression	( t & 0x1f ) > 29		3493881	0		>			
ANR	3494397	BitAndExpression	t & 0x1f		3493881	0		&			
ANR	3494398	Identifier	t		3493881	0					
ANR	3494399	PrimaryExpression	0x1f		3493881	1					
ANR	3494400	PrimaryExpression	29		3493881	1					
ANR	3494401	RelationalExpression	( ( t >> 5 ) & 0x1f ) > 29		3493881	1		>			
ANR	3494402	BitAndExpression	( t >> 5 ) & 0x1f		3493881	0		&			
ANR	3494403	ShiftExpression	t >> 5		3493881	0		>>			
ANR	3494404	Identifier	t		3493881	0					
ANR	3494405	PrimaryExpression	5		3493881	1					
ANR	3494406	PrimaryExpression	0x1f		3493881	1					
ANR	3494407	PrimaryExpression	29		3493881	1					
ANR	3494408	CompoundStatement		99:6:3210:3210	3493881	1					
ANR	3494409	ExpressionStatement	s -> mode = BAD	222:8:7731:7744	3493881	0	True				
ANR	3494410	AssignmentExpression	s -> mode = BAD		3493881	0		=			
ANR	3494411	PtrMemberAccess	s -> mode		3493881	0					
ANR	3494412	Identifier	s		3493881	0					
ANR	3494413	Identifier	mode		3493881	1					
ANR	3494414	Identifier	BAD		3493881	1					
ANR	3494415	ExpressionStatement	"z -> msg = ( char * ) ""too many length or distance symbols"""	223:8:7754:7807	3493881	1	True				
ANR	3494416	AssignmentExpression	"z -> msg = ( char * ) ""too many length or distance symbols"""		3493881	0		=			
ANR	3494417	PtrMemberAccess	z -> msg		3493881	0					
ANR	3494418	Identifier	z		3493881	0					
ANR	3494419	Identifier	msg		3493881	1					
ANR	3494420	CastExpression	"( char * ) ""too many length or distance symbols"""		3493881	1					
ANR	3494421	CastTarget	char *		3493881	0					
ANR	3494422	PrimaryExpression	"""too many length or distance symbols"""		3493881	1					
ANR	3494423	ExpressionStatement	r = Z_DATA_ERROR	224:8:7817:7833	3493881	2	True				
ANR	3494424	AssignmentExpression	r = Z_DATA_ERROR		3493881	0		=			
ANR	3494425	Identifier	r		3493881	0					
ANR	3494426	Identifier	Z_DATA_ERROR		3493881	1					
ANR	3494427	Statement	LEAVE	225:8:7843:7847	3493881	3	True				
ANR	3494428	ExpressionStatement	t = 258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )	228:6:7870:7910	3493881	40	True				
ANR	3494429	AssignmentExpression	t = 258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )		3493881	0		=			
ANR	3494430	Identifier	t		3493881	0					
ANR	3494431	AdditiveExpression	258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )		3493881	1		+			
ANR	3494432	PrimaryExpression	258		3493881	0					
ANR	3494433	AdditiveExpression	( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )		3493881	1		+			
ANR	3494434	BitAndExpression	t & 0x1f		3493881	0		&			
ANR	3494435	Identifier	t		3493881	0					
ANR	3494436	PrimaryExpression	0x1f		3493881	1					
ANR	3494437	BitAndExpression	( t >> 5 ) & 0x1f		3493881	1		&			
ANR	3494438	ShiftExpression	t >> 5		3493881	0		>>			
ANR	3494439	Identifier	t		3493881	0					
ANR	3494440	PrimaryExpression	5		3493881	1					
ANR	3494441	PrimaryExpression	0x1f		3493881	1					
ANR	3494442	IfStatement	"if ( ( s -> sub . trees . blens = ( uIntf * ) ZALLOC ( z , t , sizeof ( uInt ) ) ) == Z_NULL )"		3493881	41					
ANR	3494443	Condition	"( s -> sub . trees . blens = ( uIntf * ) ZALLOC ( z , t , sizeof ( uInt ) ) ) == Z_NULL"	229:10:7922:7988	3493881	0	True				
ANR	3494444	EqualityExpression	"( s -> sub . trees . blens = ( uIntf * ) ZALLOC ( z , t , sizeof ( uInt ) ) ) == Z_NULL"		3493881	0		==			
ANR	3494445	AssignmentExpression	"s -> sub . trees . blens = ( uIntf * ) ZALLOC ( z , t , sizeof ( uInt ) )"		3493881	0		=			
ANR	3494446	MemberAccess	s -> sub . trees . blens		3493881	0					
ANR	3494447	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494448	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494449	Identifier	s		3493881	0					
ANR	3494450	Identifier	sub		3493881	1					
ANR	3494451	Identifier	trees		3493881	1					
ANR	3494452	Identifier	blens		3493881	1					
ANR	3494453	CastExpression	"( uIntf * ) ZALLOC ( z , t , sizeof ( uInt ) )"		3493881	1					
ANR	3494454	CastTarget	uIntf *		3493881	0					
ANR	3494455	CallExpression	"ZALLOC ( z , t , sizeof ( uInt ) )"		3493881	1					
ANR	3494456	Callee	ZALLOC		3493881	0					
ANR	3494457	Identifier	ZALLOC		3493881	0					
ANR	3494458	ArgumentList	z		3493881	1					
ANR	3494459	Argument	z		3493881	0					
ANR	3494460	Identifier	z		3493881	0					
ANR	3494461	Argument	t		3493881	1					
ANR	3494462	Identifier	t		3493881	0					
ANR	3494463	Argument	sizeof ( uInt )		3493881	2					
ANR	3494464	SizeofExpression	sizeof ( uInt )		3493881	0					
ANR	3494465	Sizeof	sizeof		3493881	0					
ANR	3494466	SizeofOperand	uInt		3493881	1					
ANR	3494467	Identifier	Z_NULL		3493881	1					
ANR	3494468	CompoundStatement		108:6:3486:3486	3493881	1					
ANR	3494469	ExpressionStatement	r = Z_MEM_ERROR	231:8:8007:8022	3493881	0	True				
ANR	3494470	AssignmentExpression	r = Z_MEM_ERROR		3493881	0		=			
ANR	3494471	Identifier	r		3493881	0					
ANR	3494472	Identifier	Z_MEM_ERROR		3493881	1					
ANR	3494473	Statement	LEAVE	232:8:8032:8036	3493881	1	True				
ANR	3494474	Statement	DUMPBITS	234:6:8052:8059	3493881	42	True				
ANR	3494475	Statement	(	234:14:8060:8060	3493881	43	True				
ANR	3494476	Statement	14	234:15:8061:8062	3493881	44	True				
ANR	3494477	Statement	)	234:17:8063:8063	3493881	45	True				
ANR	3494478	ExpressionStatement	s -> sub . trees . index = 0	235:6:8071:8093	3493881	46	True				
ANR	3494479	AssignmentExpression	s -> sub . trees . index = 0		3493881	0		=			
ANR	3494480	MemberAccess	s -> sub . trees . index		3493881	0					
ANR	3494481	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494482	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494483	Identifier	s		3493881	0					
ANR	3494484	Identifier	sub		3493881	1					
ANR	3494485	Identifier	trees		3493881	1					
ANR	3494486	Identifier	index		3493881	1					
ANR	3494487	PrimaryExpression	0		3493881	1					
ANR	3494488	ExpressionStatement	"Tracev ( ( stderr , ""inflate:       table sizes ok\\n"" ) )"	236:6:8101:8152	3493881	47	True				
ANR	3494489	CallExpression	"Tracev ( ( stderr , ""inflate:       table sizes ok\\n"" ) )"		3493881	0					
ANR	3494490	Callee	Tracev		3493881	0					
ANR	3494491	Identifier	Tracev		3493881	0					
ANR	3494492	ArgumentList	"stderr , ""inflate:       table sizes ok\\n"""		3493881	1					
ANR	3494493	Argument	"stderr , ""inflate:       table sizes ok\\n"""		3493881	0					
ANR	3494494	Expression	"stderr , ""inflate:       table sizes ok\\n"""		3493881	0					
ANR	3494495	Identifier	stderr		3493881	0					
ANR	3494496	PrimaryExpression	"""inflate:       table sizes ok\\n"""		3493881	1					
ANR	3494497	ExpressionStatement	s -> mode = BTREE	237:6:8160:8175	3493881	48	True				
ANR	3494498	AssignmentExpression	s -> mode = BTREE		3493881	0		=			
ANR	3494499	PtrMemberAccess	s -> mode		3493881	0					
ANR	3494500	Identifier	s		3493881	0					
ANR	3494501	Identifier	mode		3493881	1					
ANR	3494502	Identifier	BTREE		3493881	1					
ANR	3494503	Label	case BTREE :	238:4:8181:8191	3493881	49	True				
ANR	3494504	Identifier	BTREE		3493881	0					
ANR	3494505	WhileStatement	while ( s -> sub . trees . index < 4 + ( s -> sub . trees . table >> 10 ) )		3493881	50					
ANR	3494506	Condition	s -> sub . trees . index < 4 + ( s -> sub . trees . table >> 10 )	239:13:8206:8256	3493881	0	True				
ANR	3494507	RelationalExpression	s -> sub . trees . index < 4 + ( s -> sub . trees . table >> 10 )		3493881	0		<			
ANR	3494508	MemberAccess	s -> sub . trees . index		3493881	0					
ANR	3494509	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494510	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494511	Identifier	s		3493881	0					
ANR	3494512	Identifier	sub		3493881	1					
ANR	3494513	Identifier	trees		3493881	1					
ANR	3494514	Identifier	index		3493881	1					
ANR	3494515	AdditiveExpression	4 + ( s -> sub . trees . table >> 10 )		3493881	1		+			
ANR	3494516	PrimaryExpression	4		3493881	0					
ANR	3494517	ShiftExpression	s -> sub . trees . table >> 10		3493881	1		>>			
ANR	3494518	MemberAccess	s -> sub . trees . table		3493881	0					
ANR	3494519	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494520	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494521	Identifier	s		3493881	0					
ANR	3494522	Identifier	sub		3493881	1					
ANR	3494523	Identifier	trees		3493881	1					
ANR	3494524	Identifier	table		3493881	1					
ANR	3494525	PrimaryExpression	10		3493881	1					
ANR	3494526	CompoundStatement		118:6:3754:3754	3493881	1					
ANR	3494527	Statement	NEEDBITS	241:8:8275:8282	3493881	0	True				
ANR	3494528	Statement	(	241:16:8283:8283	3493881	1	True				
ANR	3494529	Statement	3	241:17:8284:8284	3493881	2	True				
ANR	3494530	Statement	)	241:18:8285:8285	3493881	3	True				
ANR	3494531	ExpressionStatement	s -> sub . trees . blens [ border [ s -> sub . trees . index ++ ] ] = ( uInt ) b & 7	242:8:8295:8357	3493881	4	True				
ANR	3494532	AssignmentExpression	s -> sub . trees . blens [ border [ s -> sub . trees . index ++ ] ] = ( uInt ) b & 7		3493881	0		=			
ANR	3494533	ArrayIndexing	s -> sub . trees . blens [ border [ s -> sub . trees . index ++ ] ]		3493881	0					
ANR	3494534	MemberAccess	s -> sub . trees . blens		3493881	0					
ANR	3494535	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494536	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494537	Identifier	s		3493881	0					
ANR	3494538	Identifier	sub		3493881	1					
ANR	3494539	Identifier	trees		3493881	1					
ANR	3494540	Identifier	blens		3493881	1					
ANR	3494541	ArrayIndexing	border [ s -> sub . trees . index ++ ]		3493881	1					
ANR	3494542	Identifier	border		3493881	0					
ANR	3494543	PostIncDecOperationExpression	s -> sub . trees . index ++		3493881	1					
ANR	3494544	MemberAccess	s -> sub . trees . index		3493881	0					
ANR	3494545	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494546	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494547	Identifier	s		3493881	0					
ANR	3494548	Identifier	sub		3493881	1					
ANR	3494549	Identifier	trees		3493881	1					
ANR	3494550	Identifier	index		3493881	1					
ANR	3494551	IncDec	++		3493881	1					
ANR	3494552	BitAndExpression	( uInt ) b & 7		3493881	1		&			
ANR	3494553	CastExpression	( uInt ) b		3493881	0					
ANR	3494554	CastTarget	uInt		3493881	0					
ANR	3494555	Identifier	b		3493881	1					
ANR	3494556	PrimaryExpression	7		3493881	1					
ANR	3494557	Statement	DUMPBITS	243:8:8367:8374	3493881	5	True				
ANR	3494558	Statement	(	243:16:8375:8375	3493881	6	True				
ANR	3494559	Statement	3	243:17:8376:8376	3493881	7	True				
ANR	3494560	Statement	)	243:18:8377:8377	3493881	8	True				
ANR	3494561	WhileStatement	while ( s -> sub . trees . index < 19 )		3493881	51					
ANR	3494562	Condition	s -> sub . trees . index < 19	245:13:8400:8422	3493881	0	True				
ANR	3494563	RelationalExpression	s -> sub . trees . index < 19		3493881	0		<			
ANR	3494564	MemberAccess	s -> sub . trees . index		3493881	0					
ANR	3494565	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494566	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494567	Identifier	s		3493881	0					
ANR	3494568	Identifier	sub		3493881	1					
ANR	3494569	Identifier	trees		3493881	1					
ANR	3494570	Identifier	index		3493881	1					
ANR	3494571	PrimaryExpression	19		3493881	1					
ANR	3494572	ExpressionStatement	s -> sub . trees . blens [ border [ s -> sub . trees . index ++ ] ] = 0	246:8:8433:8485	3493881	1	True				
ANR	3494573	AssignmentExpression	s -> sub . trees . blens [ border [ s -> sub . trees . index ++ ] ] = 0		3493881	0		=			
ANR	3494574	ArrayIndexing	s -> sub . trees . blens [ border [ s -> sub . trees . index ++ ] ]		3493881	0					
ANR	3494575	MemberAccess	s -> sub . trees . blens		3493881	0					
ANR	3494576	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494577	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494578	Identifier	s		3493881	0					
ANR	3494579	Identifier	sub		3493881	1					
ANR	3494580	Identifier	trees		3493881	1					
ANR	3494581	Identifier	blens		3493881	1					
ANR	3494582	ArrayIndexing	border [ s -> sub . trees . index ++ ]		3493881	1					
ANR	3494583	Identifier	border		3493881	0					
ANR	3494584	PostIncDecOperationExpression	s -> sub . trees . index ++		3493881	1					
ANR	3494585	MemberAccess	s -> sub . trees . index		3493881	0					
ANR	3494586	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494587	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494588	Identifier	s		3493881	0					
ANR	3494589	Identifier	sub		3493881	1					
ANR	3494590	Identifier	trees		3493881	1					
ANR	3494591	Identifier	index		3493881	1					
ANR	3494592	IncDec	++		3493881	1					
ANR	3494593	PrimaryExpression	0		3493881	1					
ANR	3494594	ExpressionStatement	s -> sub . trees . bb = 7	247:6:8493:8512	3493881	52	True				
ANR	3494595	AssignmentExpression	s -> sub . trees . bb = 7		3493881	0		=			
ANR	3494596	MemberAccess	s -> sub . trees . bb		3493881	0					
ANR	3494597	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494598	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494599	Identifier	s		3493881	0					
ANR	3494600	Identifier	sub		3493881	1					
ANR	3494601	Identifier	trees		3493881	1					
ANR	3494602	Identifier	bb		3493881	1					
ANR	3494603	PrimaryExpression	7		3493881	1					
ANR	3494604	ExpressionStatement	"t = inflate_trees_bits ( s -> sub . trees . blens , & s -> sub . trees . bb , & s -> sub . trees . tb , s -> hufts , z )"	248:6:8520:8640	3493881	53	True				
ANR	3494605	AssignmentExpression	"t = inflate_trees_bits ( s -> sub . trees . blens , & s -> sub . trees . bb , & s -> sub . trees . tb , s -> hufts , z )"		3493881	0		=			
ANR	3494606	Identifier	t		3493881	0					
ANR	3494607	CallExpression	"inflate_trees_bits ( s -> sub . trees . blens , & s -> sub . trees . bb , & s -> sub . trees . tb , s -> hufts , z )"		3493881	1					
ANR	3494608	Callee	inflate_trees_bits		3493881	0					
ANR	3494609	Identifier	inflate_trees_bits		3493881	0					
ANR	3494610	ArgumentList	s -> sub . trees . blens		3493881	1					
ANR	3494611	Argument	s -> sub . trees . blens		3493881	0					
ANR	3494612	MemberAccess	s -> sub . trees . blens		3493881	0					
ANR	3494613	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494614	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494615	Identifier	s		3493881	0					
ANR	3494616	Identifier	sub		3493881	1					
ANR	3494617	Identifier	trees		3493881	1					
ANR	3494618	Identifier	blens		3493881	1					
ANR	3494619	Argument	& s -> sub . trees . bb		3493881	1					
ANR	3494620	UnaryOperationExpression	& s -> sub . trees . bb		3493881	0					
ANR	3494621	UnaryOperator	&		3493881	0					
ANR	3494622	MemberAccess	s -> sub . trees . bb		3493881	1					
ANR	3494623	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494624	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494625	Identifier	s		3493881	0					
ANR	3494626	Identifier	sub		3493881	1					
ANR	3494627	Identifier	trees		3493881	1					
ANR	3494628	Identifier	bb		3493881	1					
ANR	3494629	Argument	& s -> sub . trees . tb		3493881	2					
ANR	3494630	UnaryOperationExpression	& s -> sub . trees . tb		3493881	0					
ANR	3494631	UnaryOperator	&		3493881	0					
ANR	3494632	MemberAccess	s -> sub . trees . tb		3493881	1					
ANR	3494633	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494634	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494635	Identifier	s		3493881	0					
ANR	3494636	Identifier	sub		3493881	1					
ANR	3494637	Identifier	trees		3493881	1					
ANR	3494638	Identifier	tb		3493881	1					
ANR	3494639	Argument	s -> hufts		3493881	3					
ANR	3494640	PtrMemberAccess	s -> hufts		3493881	0					
ANR	3494641	Identifier	s		3493881	0					
ANR	3494642	Identifier	hufts		3493881	1					
ANR	3494643	Argument	z		3493881	4					
ANR	3494644	Identifier	z		3493881	0					
ANR	3494645	IfStatement	if ( t != Z_OK )		3493881	54					
ANR	3494646	Condition	t != Z_OK	250:10:8652:8660	3493881	0	True				
ANR	3494647	EqualityExpression	t != Z_OK		3493881	0		!=			
ANR	3494648	Identifier	t		3493881	0					
ANR	3494649	Identifier	Z_OK		3493881	1					
ANR	3494650	CompoundStatement		129:6:4158:4158	3493881	1					
ANR	3494651	ExpressionStatement	r = t	252:8:8679:8684	3493881	0	True				
ANR	3494652	AssignmentExpression	r = t		3493881	0		=			
ANR	3494653	Identifier	r		3493881	0					
ANR	3494654	Identifier	t		3493881	1					
ANR	3494655	IfStatement	if ( r == Z_DATA_ERROR )		3493881	1					
ANR	3494656	Condition	r == Z_DATA_ERROR	253:12:8698:8714	3493881	0	True				
ANR	3494657	EqualityExpression	r == Z_DATA_ERROR		3493881	0		==			
ANR	3494658	Identifier	r		3493881	0					
ANR	3494659	Identifier	Z_DATA_ERROR		3493881	1					
ANR	3494660	CompoundStatement		132:8:4214:4214	3493881	1					
ANR	3494661	ExpressionStatement	"ZFREE ( z , s -> sub . trees . blens )"	255:10:8737:8765	3493881	0	True				
ANR	3494662	CallExpression	"ZFREE ( z , s -> sub . trees . blens )"		3493881	0					
ANR	3494663	Callee	ZFREE		3493881	0					
ANR	3494664	Identifier	ZFREE		3493881	0					
ANR	3494665	ArgumentList	z		3493881	1					
ANR	3494666	Argument	z		3493881	0					
ANR	3494667	Identifier	z		3493881	0					
ANR	3494668	Argument	s -> sub . trees . blens		3493881	1					
ANR	3494669	MemberAccess	s -> sub . trees . blens		3493881	0					
ANR	3494670	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494671	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494672	Identifier	s		3493881	0					
ANR	3494673	Identifier	sub		3493881	1					
ANR	3494674	Identifier	trees		3493881	1					
ANR	3494675	Identifier	blens		3493881	1					
ANR	3494676	ExpressionStatement	s -> mode = BAD	256:10:8777:8790	3493881	1	True				
ANR	3494677	AssignmentExpression	s -> mode = BAD		3493881	0		=			
ANR	3494678	PtrMemberAccess	s -> mode		3493881	0					
ANR	3494679	Identifier	s		3493881	0					
ANR	3494680	Identifier	mode		3493881	1					
ANR	3494681	Identifier	BAD		3493881	1					
ANR	3494682	Statement	LEAVE	258:8:8810:8814	3493881	2	True				
ANR	3494683	ExpressionStatement	s -> sub . trees . index = 0	260:6:8830:8852	3493881	55	True				
ANR	3494684	AssignmentExpression	s -> sub . trees . index = 0		3493881	0		=			
ANR	3494685	MemberAccess	s -> sub . trees . index		3493881	0					
ANR	3494686	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494687	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494688	Identifier	s		3493881	0					
ANR	3494689	Identifier	sub		3493881	1					
ANR	3494690	Identifier	trees		3493881	1					
ANR	3494691	Identifier	index		3493881	1					
ANR	3494692	PrimaryExpression	0		3493881	1					
ANR	3494693	ExpressionStatement	"Tracev ( ( stderr , ""inflate:       bits tree ok\\n"" ) )"	261:6:8860:8909	3493881	56	True				
ANR	3494694	CallExpression	"Tracev ( ( stderr , ""inflate:       bits tree ok\\n"" ) )"		3493881	0					
ANR	3494695	Callee	Tracev		3493881	0					
ANR	3494696	Identifier	Tracev		3493881	0					
ANR	3494697	ArgumentList	"stderr , ""inflate:       bits tree ok\\n"""		3493881	1					
ANR	3494698	Argument	"stderr , ""inflate:       bits tree ok\\n"""		3493881	0					
ANR	3494699	Expression	"stderr , ""inflate:       bits tree ok\\n"""		3493881	0					
ANR	3494700	Identifier	stderr		3493881	0					
ANR	3494701	PrimaryExpression	"""inflate:       bits tree ok\\n"""		3493881	1					
ANR	3494702	ExpressionStatement	s -> mode = DTREE	262:6:8917:8932	3493881	57	True				
ANR	3494703	AssignmentExpression	s -> mode = DTREE		3493881	0		=			
ANR	3494704	PtrMemberAccess	s -> mode		3493881	0					
ANR	3494705	Identifier	s		3493881	0					
ANR	3494706	Identifier	mode		3493881	1					
ANR	3494707	Identifier	DTREE		3493881	1					
ANR	3494708	Label	case DTREE :	263:4:8938:8948	3493881	58	True				
ANR	3494709	Identifier	DTREE		3493881	0					
ANR	3494710	WhileStatement	"while ( t = s -> sub . trees . table , s -> sub . trees . index < 258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f ) )"		3493881	59					
ANR	3494711	Condition	"t = s -> sub . trees . table , s -> sub . trees . index < 258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )"	264:13:8963:9056	3493881	0	True				
ANR	3494712	Expression	"t = s -> sub . trees . table , s -> sub . trees . index < 258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )"		3493881	0					
ANR	3494713	AssignmentExpression	t = s -> sub . trees . table		3493881	0		=			
ANR	3494714	Identifier	t		3493881	0					
ANR	3494715	MemberAccess	s -> sub . trees . table		3493881	1					
ANR	3494716	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494717	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494718	Identifier	s		3493881	0					
ANR	3494719	Identifier	sub		3493881	1					
ANR	3494720	Identifier	trees		3493881	1					
ANR	3494721	Identifier	table		3493881	1					
ANR	3494722	RelationalExpression	s -> sub . trees . index < 258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )		3493881	1		<			
ANR	3494723	MemberAccess	s -> sub . trees . index		3493881	0					
ANR	3494724	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494725	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494726	Identifier	s		3493881	0					
ANR	3494727	Identifier	sub		3493881	1					
ANR	3494728	Identifier	trees		3493881	1					
ANR	3494729	Identifier	index		3493881	1					
ANR	3494730	AdditiveExpression	258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )		3493881	1		+			
ANR	3494731	PrimaryExpression	258		3493881	0					
ANR	3494732	AdditiveExpression	( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )		3493881	1		+			
ANR	3494733	BitAndExpression	t & 0x1f		3493881	0		&			
ANR	3494734	Identifier	t		3493881	0					
ANR	3494735	PrimaryExpression	0x1f		3493881	1					
ANR	3494736	BitAndExpression	( t >> 5 ) & 0x1f		3493881	1		&			
ANR	3494737	ShiftExpression	t >> 5		3493881	0		>>			
ANR	3494738	Identifier	t		3493881	0					
ANR	3494739	PrimaryExpression	5		3493881	1					
ANR	3494740	PrimaryExpression	0x1f		3493881	1					
ANR	3494741	CompoundStatement		146:8:4589:4601	3493881	1					
ANR	3494742	IdentifierDeclStatement	inflate_huft * h ;	267:8:9075:9090	3493881	0	True				
ANR	3494743	IdentifierDecl	* h		3493881	0					
ANR	3494744	IdentifierDeclType	inflate_huft *		3493881	0					
ANR	3494745	Identifier	h		3493881	1					
ANR	3494746	IdentifierDeclStatement	"uInt i , j , c ;"	268:8:9100:9112	3493881	1	True				
ANR	3494747	IdentifierDecl	i		3493881	0					
ANR	3494748	IdentifierDeclType	uInt		3493881	0					
ANR	3494749	Identifier	i		3493881	1					
ANR	3494750	IdentifierDecl	j		3493881	1					
ANR	3494751	IdentifierDeclType	uInt		3493881	0					
ANR	3494752	Identifier	j		3493881	1					
ANR	3494753	IdentifierDecl	c		3493881	2					
ANR	3494754	IdentifierDeclType	uInt		3493881	0					
ANR	3494755	Identifier	c		3493881	1					
ANR	3494756	ExpressionStatement	t = s -> sub . trees . bb	270:8:9123:9142	3493881	2	True				
ANR	3494757	AssignmentExpression	t = s -> sub . trees . bb		3493881	0		=			
ANR	3494758	Identifier	t		3493881	0					
ANR	3494759	MemberAccess	s -> sub . trees . bb		3493881	1					
ANR	3494760	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494761	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494762	Identifier	s		3493881	0					
ANR	3494763	Identifier	sub		3493881	1					
ANR	3494764	Identifier	trees		3493881	1					
ANR	3494765	Identifier	bb		3493881	1					
ANR	3494766	Statement	NEEDBITS	271:8:9152:9159	3493881	3	True				
ANR	3494767	ExpressionStatement	( t ) h = s -> sub . trees . tb + ( ( uInt ) b & inflate_mask [ t ] )	271:16:9160:9221	3493881	4	True				
ANR	3494768	AssignmentExpression	( t ) h = s -> sub . trees . tb + ( ( uInt ) b & inflate_mask [ t ] )		3493881	0		=			
ANR	3494769	CastExpression	( t ) h		3493881	0					
ANR	3494770	CastTarget	t		3493881	0					
ANR	3494771	Identifier	h		3493881	1					
ANR	3494772	AdditiveExpression	s -> sub . trees . tb + ( ( uInt ) b & inflate_mask [ t ] )		3493881	1		+			
ANR	3494773	MemberAccess	s -> sub . trees . tb		3493881	0					
ANR	3494774	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494775	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494776	Identifier	s		3493881	0					
ANR	3494777	Identifier	sub		3493881	1					
ANR	3494778	Identifier	trees		3493881	1					
ANR	3494779	Identifier	tb		3493881	1					
ANR	3494780	BitAndExpression	( uInt ) b & inflate_mask [ t ]		3493881	1		&			
ANR	3494781	CastExpression	( uInt ) b		3493881	0					
ANR	3494782	CastTarget	uInt		3493881	0					
ANR	3494783	Identifier	b		3493881	1					
ANR	3494784	ArrayIndexing	inflate_mask [ t ]		3493881	1					
ANR	3494785	Identifier	inflate_mask		3493881	0					
ANR	3494786	Identifier	t		3493881	1					
ANR	3494787	ExpressionStatement	t = h -> bits	273:8:9231:9242	3493881	5	True				
ANR	3494788	AssignmentExpression	t = h -> bits		3493881	0		=			
ANR	3494789	Identifier	t		3493881	0					
ANR	3494790	PtrMemberAccess	h -> bits		3493881	1					
ANR	3494791	Identifier	h		3493881	0					
ANR	3494792	Identifier	bits		3493881	1					
ANR	3494793	ExpressionStatement	c = h -> base	274:8:9252:9263	3493881	6	True				
ANR	3494794	AssignmentExpression	c = h -> base		3493881	0		=			
ANR	3494795	Identifier	c		3493881	0					
ANR	3494796	PtrMemberAccess	h -> base		3493881	1					
ANR	3494797	Identifier	h		3493881	0					
ANR	3494798	Identifier	base		3493881	1					
ANR	3494799	IfStatement	if ( c < 16 )		3493881	7					
ANR	3494800	Condition	c < 16	275:12:9277:9282	3493881	0	True				
ANR	3494801	RelationalExpression	c < 16		3493881	0		<			
ANR	3494802	Identifier	c		3493881	0					
ANR	3494803	PrimaryExpression	16		3493881	1					
ANR	3494804	CompoundStatement		154:8:4782:4782	3493881	1					
ANR	3494805	Statement	DUMPBITS	277:10:9305:9312	3493881	0	True				
ANR	3494806	ExpressionStatement	( t ) s -> sub . trees . blens [ s -> sub . trees . index ++ ] = c	277:18:9313:9371	3493881	1	True				
ANR	3494807	AssignmentExpression	( t ) s -> sub . trees . blens [ s -> sub . trees . index ++ ] = c		3493881	0		=			
ANR	3494808	CastExpression	( t ) s -> sub . trees . blens [ s -> sub . trees . index ++ ]		3493881	0					
ANR	3494809	CastTarget	t		3493881	0					
ANR	3494810	ArrayIndexing	s -> sub . trees . blens [ s -> sub . trees . index ++ ]		3493881	1					
ANR	3494811	MemberAccess	s -> sub . trees . blens		3493881	0					
ANR	3494812	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494813	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494814	Identifier	s		3493881	0					
ANR	3494815	Identifier	sub		3493881	1					
ANR	3494816	Identifier	trees		3493881	1					
ANR	3494817	Identifier	blens		3493881	1					
ANR	3494818	PostIncDecOperationExpression	s -> sub . trees . index ++		3493881	1					
ANR	3494819	MemberAccess	s -> sub . trees . index		3493881	0					
ANR	3494820	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494821	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494822	Identifier	s		3493881	0					
ANR	3494823	Identifier	sub		3493881	1					
ANR	3494824	Identifier	trees		3493881	1					
ANR	3494825	Identifier	index		3493881	1					
ANR	3494826	IncDec	++		3493881	1					
ANR	3494827	Identifier	c		3493881	1					
ANR	3494828	ElseStatement	else		3493881	0					
ANR	3494829	CompoundStatement		159:8:4911:4911	3493881	0					
ANR	3494830	ExpressionStatement	i = c == 18 ? 7 : c - 14	282:10:9434:9458	3493881	0	True				
ANR	3494831	AssignmentExpression	i = c == 18 ? 7 : c - 14		3493881	0		=			
ANR	3494832	Identifier	i		3493881	0					
ANR	3494833	ConditionalExpression	c == 18 ? 7 : c - 14		3493881	1					
ANR	3494834	Condition	c == 18		3493881	0					
ANR	3494835	EqualityExpression	c == 18		3493881	0		==			
ANR	3494836	Identifier	c		3493881	0					
ANR	3494837	PrimaryExpression	18		3493881	1					
ANR	3494838	PrimaryExpression	7		3493881	1					
ANR	3494839	AdditiveExpression	c - 14		3493881	2		-			
ANR	3494840	Identifier	c		3493881	0					
ANR	3494841	PrimaryExpression	14		3493881	1					
ANR	3494842	ExpressionStatement	j = c == 18 ? 11 : 3	283:10:9470:9490	3493881	1	True				
ANR	3494843	AssignmentExpression	j = c == 18 ? 11 : 3		3493881	0		=			
ANR	3494844	Identifier	j		3493881	0					
ANR	3494845	ConditionalExpression	c == 18 ? 11 : 3		3493881	1					
ANR	3494846	Condition	c == 18		3493881	0					
ANR	3494847	EqualityExpression	c == 18		3493881	0		==			
ANR	3494848	Identifier	c		3493881	0					
ANR	3494849	PrimaryExpression	18		3493881	1					
ANR	3494850	PrimaryExpression	11		3493881	1					
ANR	3494851	PrimaryExpression	3		3493881	2					
ANR	3494852	Statement	NEEDBITS	284:10:9502:9509	3493881	2	True				
ANR	3494853	Statement	(	284:18:9510:9510	3493881	3	True				
ANR	3494854	Statement	t	284:19:9511:9511	3493881	4	True				
ANR	3494855	Statement	+	284:21:9513:9513	3493881	5	True				
ANR	3494856	Statement	i	284:23:9515:9515	3493881	6	True				
ANR	3494857	Statement	)	284:24:9516:9516	3493881	7	True				
ANR	3494858	Statement	DUMPBITS	285:10:9528:9535	3493881	8	True				
ANR	3494859	ExpressionStatement	( t ) j += ( uInt ) b & inflate_mask [ i ]	285:18:9536:9580	3493881	9	True				
ANR	3494860	AssignmentExpression	( t ) j += ( uInt ) b & inflate_mask [ i ]		3493881	0		+=			
ANR	3494861	CastExpression	( t ) j		3493881	0					
ANR	3494862	CastTarget	t		3493881	0					
ANR	3494863	Identifier	j		3493881	1					
ANR	3494864	BitAndExpression	( uInt ) b & inflate_mask [ i ]		3493881	1		&			
ANR	3494865	CastExpression	( uInt ) b		3493881	0					
ANR	3494866	CastTarget	uInt		3493881	0					
ANR	3494867	Identifier	b		3493881	1					
ANR	3494868	ArrayIndexing	inflate_mask [ i ]		3493881	1					
ANR	3494869	Identifier	inflate_mask		3493881	0					
ANR	3494870	Identifier	i		3493881	1					
ANR	3494871	Statement	DUMPBITS	287:10:9592:9599	3493881	10	True				
ANR	3494872	ExpressionStatement	( i ) i = s -> sub . trees . index	287:18:9600:9636	3493881	11	True				
ANR	3494873	AssignmentExpression	( i ) i = s -> sub . trees . index		3493881	0		=			
ANR	3494874	CastExpression	( i ) i		3493881	0					
ANR	3494875	CastTarget	i		3493881	0					
ANR	3494876	Identifier	i		3493881	1					
ANR	3494877	MemberAccess	s -> sub . trees . index		3493881	1					
ANR	3494878	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494879	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494880	Identifier	s		3493881	0					
ANR	3494881	Identifier	sub		3493881	1					
ANR	3494882	Identifier	trees		3493881	1					
ANR	3494883	Identifier	index		3493881	1					
ANR	3494884	ExpressionStatement	t = s -> sub . trees . table	289:10:9648:9670	3493881	12	True				
ANR	3494885	AssignmentExpression	t = s -> sub . trees . table		3493881	0		=			
ANR	3494886	Identifier	t		3493881	0					
ANR	3494887	MemberAccess	s -> sub . trees . table		3493881	1					
ANR	3494888	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494889	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494890	Identifier	s		3493881	0					
ANR	3494891	Identifier	sub		3493881	1					
ANR	3494892	Identifier	trees		3493881	1					
ANR	3494893	Identifier	table		3493881	1					
ANR	3494894	IfStatement	if ( i + j > 258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f ) || ( c == 16 && i < 1 ) )		3493881	13					
ANR	3494895	Condition	i + j > 258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f ) || ( c == 16 && i < 1 )	290:14:9686:9765	3493881	0	True				
ANR	3494896	OrExpression	i + j > 258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f ) || ( c == 16 && i < 1 )		3493881	0		||			
ANR	3494897	RelationalExpression	i + j > 258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )		3493881	0		>			
ANR	3494898	AdditiveExpression	i + j		3493881	0		+			
ANR	3494899	Identifier	i		3493881	0					
ANR	3494900	Identifier	j		3493881	1					
ANR	3494901	AdditiveExpression	258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )		3493881	1		+			
ANR	3494902	PrimaryExpression	258		3493881	0					
ANR	3494903	AdditiveExpression	( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )		3493881	1		+			
ANR	3494904	BitAndExpression	t & 0x1f		3493881	0		&			
ANR	3494905	Identifier	t		3493881	0					
ANR	3494906	PrimaryExpression	0x1f		3493881	1					
ANR	3494907	BitAndExpression	( t >> 5 ) & 0x1f		3493881	1		&			
ANR	3494908	ShiftExpression	t >> 5		3493881	0		>>			
ANR	3494909	Identifier	t		3493881	0					
ANR	3494910	PrimaryExpression	5		3493881	1					
ANR	3494911	PrimaryExpression	0x1f		3493881	1					
ANR	3494912	AndExpression	c == 16 && i < 1		3493881	1		&&			
ANR	3494913	EqualityExpression	c == 16		3493881	0		==			
ANR	3494914	Identifier	c		3493881	0					
ANR	3494915	PrimaryExpression	16		3493881	1					
ANR	3494916	RelationalExpression	i < 1		3493881	1		<			
ANR	3494917	Identifier	i		3493881	0					
ANR	3494918	PrimaryExpression	1		3493881	1					
ANR	3494919	CompoundStatement		170:10:5267:5267	3493881	1					
ANR	3494920	ExpressionStatement	"ZFREE ( z , s -> sub . trees . blens )"	293:12:9792:9820	3493881	0	True				
ANR	3494921	CallExpression	"ZFREE ( z , s -> sub . trees . blens )"		3493881	0					
ANR	3494922	Callee	ZFREE		3493881	0					
ANR	3494923	Identifier	ZFREE		3493881	0					
ANR	3494924	ArgumentList	z		3493881	1					
ANR	3494925	Argument	z		3493881	0					
ANR	3494926	Identifier	z		3493881	0					
ANR	3494927	Argument	s -> sub . trees . blens		3493881	1					
ANR	3494928	MemberAccess	s -> sub . trees . blens		3493881	0					
ANR	3494929	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494930	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494931	Identifier	s		3493881	0					
ANR	3494932	Identifier	sub		3493881	1					
ANR	3494933	Identifier	trees		3493881	1					
ANR	3494934	Identifier	blens		3493881	1					
ANR	3494935	ExpressionStatement	s -> mode = BAD	294:12:9834:9847	3493881	1	True				
ANR	3494936	AssignmentExpression	s -> mode = BAD		3493881	0		=			
ANR	3494937	PtrMemberAccess	s -> mode		3493881	0					
ANR	3494938	Identifier	s		3493881	0					
ANR	3494939	Identifier	mode		3493881	1					
ANR	3494940	Identifier	BAD		3493881	1					
ANR	3494941	ExpressionStatement	"z -> msg = ( char * ) ""invalid bit length repeat"""	295:12:9861:9904	3493881	2	True				
ANR	3494942	AssignmentExpression	"z -> msg = ( char * ) ""invalid bit length repeat"""		3493881	0		=			
ANR	3494943	PtrMemberAccess	z -> msg		3493881	0					
ANR	3494944	Identifier	z		3493881	0					
ANR	3494945	Identifier	msg		3493881	1					
ANR	3494946	CastExpression	"( char * ) ""invalid bit length repeat"""		3493881	1					
ANR	3494947	CastTarget	char *		3493881	0					
ANR	3494948	PrimaryExpression	"""invalid bit length repeat"""		3493881	1					
ANR	3494949	ExpressionStatement	r = Z_DATA_ERROR	296:12:9918:9934	3493881	3	True				
ANR	3494950	AssignmentExpression	r = Z_DATA_ERROR		3493881	0		=			
ANR	3494951	Identifier	r		3493881	0					
ANR	3494952	Identifier	Z_DATA_ERROR		3493881	1					
ANR	3494953	Statement	LEAVE	297:12:9948:9952	3493881	4	True				
ANR	3494954	ExpressionStatement	c = c == 16 ? s -> sub . trees . blens [ i - 1 ] : 0	299:10:9976:10019	3493881	14	True				
ANR	3494955	AssignmentExpression	c = c == 16 ? s -> sub . trees . blens [ i - 1 ] : 0		3493881	0		=			
ANR	3494956	Identifier	c		3493881	0					
ANR	3494957	ConditionalExpression	c == 16 ? s -> sub . trees . blens [ i - 1 ] : 0		3493881	1					
ANR	3494958	Condition	c == 16		3493881	0					
ANR	3494959	EqualityExpression	c == 16		3493881	0		==			
ANR	3494960	Identifier	c		3493881	0					
ANR	3494961	PrimaryExpression	16		3493881	1					
ANR	3494962	ArrayIndexing	s -> sub . trees . blens [ i - 1 ]		3493881	1					
ANR	3494963	MemberAccess	s -> sub . trees . blens		3493881	0					
ANR	3494964	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494965	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494966	Identifier	s		3493881	0					
ANR	3494967	Identifier	sub		3493881	1					
ANR	3494968	Identifier	trees		3493881	1					
ANR	3494969	Identifier	blens		3493881	1					
ANR	3494970	AdditiveExpression	i - 1		3493881	1		-			
ANR	3494971	Identifier	i		3493881	0					
ANR	3494972	PrimaryExpression	1		3493881	1					
ANR	3494973	PrimaryExpression	0		3493881	2					
ANR	3494974	DoStatement	do		3493881	15					
ANR	3494975	CompoundStatement		178:13:5523:5523	3493881	0					
ANR	3494976	ExpressionStatement	s -> sub . trees . blens [ i ++ ] = c	301:12:10048:10075	3493881	0	True				
ANR	3494977	AssignmentExpression	s -> sub . trees . blens [ i ++ ] = c		3493881	0		=			
ANR	3494978	ArrayIndexing	s -> sub . trees . blens [ i ++ ]		3493881	0					
ANR	3494979	MemberAccess	s -> sub . trees . blens		3493881	0					
ANR	3494980	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494981	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494982	Identifier	s		3493881	0					
ANR	3494983	Identifier	sub		3493881	1					
ANR	3494984	Identifier	trees		3493881	1					
ANR	3494985	Identifier	blens		3493881	1					
ANR	3494986	PostIncDecOperationExpression	i ++		3493881	1					
ANR	3494987	Identifier	i		3493881	0					
ANR	3494988	IncDec	++		3493881	1					
ANR	3494989	Identifier	c		3493881	1					
ANR	3494990	Condition	-- j	302:19:10096:10098	3493881	1	True				
ANR	3494991	UnaryExpression	-- j		3493881	0					
ANR	3494992	IncDec	--		3493881	0					
ANR	3494993	Identifier	j		3493881	1					
ANR	3494994	ExpressionStatement	s -> sub . trees . index = i	303:10:10112:10134	3493881	16	True				
ANR	3494995	AssignmentExpression	s -> sub . trees . index = i		3493881	0		=			
ANR	3494996	MemberAccess	s -> sub . trees . index		3493881	0					
ANR	3494997	MemberAccess	s -> sub . trees		3493881	0					
ANR	3494998	PtrMemberAccess	s -> sub		3493881	0					
ANR	3494999	Identifier	s		3493881	0					
ANR	3495000	Identifier	sub		3493881	1					
ANR	3495001	Identifier	trees		3493881	1					
ANR	3495002	Identifier	index		3493881	1					
ANR	3495003	Identifier	i		3493881	1					
ANR	3495004	ExpressionStatement	s -> sub . trees . tb = Z_NULL	306:6:10160:10184	3493881	60	True				
ANR	3495005	AssignmentExpression	s -> sub . trees . tb = Z_NULL		3493881	0		=			
ANR	3495006	MemberAccess	s -> sub . trees . tb		3493881	0					
ANR	3495007	MemberAccess	s -> sub . trees		3493881	0					
ANR	3495008	PtrMemberAccess	s -> sub		3493881	0					
ANR	3495009	Identifier	s		3493881	0					
ANR	3495010	Identifier	sub		3493881	1					
ANR	3495011	Identifier	trees		3493881	1					
ANR	3495012	Identifier	tb		3493881	1					
ANR	3495013	Identifier	Z_NULL		3493881	1					
ANR	3495014	CompoundStatement		188:8:5743:5766	3493881	61					
ANR	3495015	IdentifierDeclStatement	"uInt bl , bd ;"	308:8:10202:10213	3493881	0	True				
ANR	3495016	IdentifierDecl	bl		3493881	0					
ANR	3495017	IdentifierDeclType	uInt		3493881	0					
ANR	3495018	Identifier	bl		3493881	1					
ANR	3495019	IdentifierDecl	bd		3493881	1					
ANR	3495020	IdentifierDeclType	uInt		3493881	0					
ANR	3495021	Identifier	bd		3493881	1					
ANR	3495022	IdentifierDeclStatement	"inflate_huft * tl , * td ;"	309:8:10223:10244	3493881	1	True				
ANR	3495023	IdentifierDecl	* tl		3493881	0					
ANR	3495024	IdentifierDeclType	inflate_huft *		3493881	0					
ANR	3495025	Identifier	tl		3493881	1					
ANR	3495026	IdentifierDecl	* td		3493881	1					
ANR	3495027	IdentifierDeclType	inflate_huft *		3493881	0					
ANR	3495028	Identifier	td		3493881	1					
ANR	3495029	IdentifierDeclStatement	inflate_codes_statef * c ;	310:8:10254:10277	3493881	2	True				
ANR	3495030	IdentifierDecl	* c		3493881	0					
ANR	3495031	IdentifierDeclType	inflate_codes_statef *		3493881	0					
ANR	3495032	Identifier	c		3493881	1					
ANR	3495033	ExpressionStatement	bl = 9	312:8:10288:10294	3493881	3	True				
ANR	3495034	AssignmentExpression	bl = 9		3493881	0		=			
ANR	3495035	Identifier	bl		3493881	0					
ANR	3495036	PrimaryExpression	9		3493881	1					
ANR	3495037	ExpressionStatement	bd = 6	313:8:10357:10363	3493881	4	True				
ANR	3495038	AssignmentExpression	bd = 6		3493881	0		=			
ANR	3495039	Identifier	bd		3493881	0					
ANR	3495040	PrimaryExpression	6		3493881	1					
ANR	3495041	ExpressionStatement	t = s -> sub . trees . table	314:8:10426:10448	3493881	5	True				
ANR	3495042	AssignmentExpression	t = s -> sub . trees . table		3493881	0		=			
ANR	3495043	Identifier	t		3493881	0					
ANR	3495044	MemberAccess	s -> sub . trees . table		3493881	1					
ANR	3495045	MemberAccess	s -> sub . trees		3493881	0					
ANR	3495046	PtrMemberAccess	s -> sub		3493881	0					
ANR	3495047	Identifier	s		3493881	0					
ANR	3495048	Identifier	sub		3493881	1					
ANR	3495049	Identifier	trees		3493881	1					
ANR	3495050	Identifier	table		3493881	1					
ANR	3495051	ExpressionStatement	"t = inflate_trees_dynamic ( 257 + ( t & 0x1f ) , 1 + ( ( t >> 5 ) & 0x1f ) , s -> sub . trees . blens , & bl , & bd , & tl , & td , s -> hufts , z )"	315:8:10458:10645	3493881	6	True				
ANR	3495052	AssignmentExpression	"t = inflate_trees_dynamic ( 257 + ( t & 0x1f ) , 1 + ( ( t >> 5 ) & 0x1f ) , s -> sub . trees . blens , & bl , & bd , & tl , & td , s -> hufts , z )"		3493881	0		=			
ANR	3495053	Identifier	t		3493881	0					
ANR	3495054	CallExpression	"inflate_trees_dynamic ( 257 + ( t & 0x1f ) , 1 + ( ( t >> 5 ) & 0x1f ) , s -> sub . trees . blens , & bl , & bd , & tl , & td , s -> hufts , z )"		3493881	1					
ANR	3495055	Callee	inflate_trees_dynamic		3493881	0					
ANR	3495056	Identifier	inflate_trees_dynamic		3493881	0					
ANR	3495057	ArgumentList	257 + ( t & 0x1f )		3493881	1					
ANR	3495058	Argument	257 + ( t & 0x1f )		3493881	0					
ANR	3495059	AdditiveExpression	257 + ( t & 0x1f )		3493881	0		+			
ANR	3495060	PrimaryExpression	257		3493881	0					
ANR	3495061	BitAndExpression	t & 0x1f		3493881	1		&			
ANR	3495062	Identifier	t		3493881	0					
ANR	3495063	PrimaryExpression	0x1f		3493881	1					
ANR	3495064	Argument	1 + ( ( t >> 5 ) & 0x1f )		3493881	1					
ANR	3495065	AdditiveExpression	1 + ( ( t >> 5 ) & 0x1f )		3493881	0		+			
ANR	3495066	PrimaryExpression	1		3493881	0					
ANR	3495067	BitAndExpression	( t >> 5 ) & 0x1f		3493881	1		&			
ANR	3495068	ShiftExpression	t >> 5		3493881	0		>>			
ANR	3495069	Identifier	t		3493881	0					
ANR	3495070	PrimaryExpression	5		3493881	1					
ANR	3495071	PrimaryExpression	0x1f		3493881	1					
ANR	3495072	Argument	s -> sub . trees . blens		3493881	2					
ANR	3495073	MemberAccess	s -> sub . trees . blens		3493881	0					
ANR	3495074	MemberAccess	s -> sub . trees		3493881	0					
ANR	3495075	PtrMemberAccess	s -> sub		3493881	0					
ANR	3495076	Identifier	s		3493881	0					
ANR	3495077	Identifier	sub		3493881	1					
ANR	3495078	Identifier	trees		3493881	1					
ANR	3495079	Identifier	blens		3493881	1					
ANR	3495080	Argument	& bl		3493881	3					
ANR	3495081	UnaryOperationExpression	& bl		3493881	0					
ANR	3495082	UnaryOperator	&		3493881	0					
ANR	3495083	Identifier	bl		3493881	1					
ANR	3495084	Argument	& bd		3493881	4					
ANR	3495085	UnaryOperationExpression	& bd		3493881	0					
ANR	3495086	UnaryOperator	&		3493881	0					
ANR	3495087	Identifier	bd		3493881	1					
ANR	3495088	Argument	& tl		3493881	5					
ANR	3495089	UnaryOperationExpression	& tl		3493881	0					
ANR	3495090	UnaryOperator	&		3493881	0					
ANR	3495091	Identifier	tl		3493881	1					
ANR	3495092	Argument	& td		3493881	6					
ANR	3495093	UnaryOperationExpression	& td		3493881	0					
ANR	3495094	UnaryOperator	&		3493881	0					
ANR	3495095	Identifier	td		3493881	1					
ANR	3495096	Argument	s -> hufts		3493881	7					
ANR	3495097	PtrMemberAccess	s -> hufts		3493881	0					
ANR	3495098	Identifier	s		3493881	0					
ANR	3495099	Identifier	hufts		3493881	1					
ANR	3495100	Argument	z		3493881	8					
ANR	3495101	Identifier	z		3493881	0					
ANR	3495102	IfStatement	if ( t != Z_OK )		3493881	7					
ANR	3495103	Condition	t != Z_OK	318:12:10659:10667	3493881	0	True				
ANR	3495104	EqualityExpression	t != Z_OK		3493881	0		!=			
ANR	3495105	Identifier	t		3493881	0					
ANR	3495106	Identifier	Z_OK		3493881	1					
ANR	3495107	CompoundStatement		197:8:6167:6167	3493881	1					
ANR	3495108	IfStatement	if ( t == ( uInt ) Z_DATA_ERROR )		3493881	0					
ANR	3495109	Condition	t == ( uInt ) Z_DATA_ERROR	320:14:10694:10716	3493881	0	True				
ANR	3495110	EqualityExpression	t == ( uInt ) Z_DATA_ERROR		3493881	0		==			
ANR	3495111	Identifier	t		3493881	0					
ANR	3495112	CastExpression	( uInt ) Z_DATA_ERROR		3493881	1					
ANR	3495113	CastTarget	uInt		3493881	0					
ANR	3495114	Identifier	Z_DATA_ERROR		3493881	1					
ANR	3495115	CompoundStatement		199:10:6218:6218	3493881	1					
ANR	3495116	ExpressionStatement	"ZFREE ( z , s -> sub . trees . blens )"	322:12:10743:10771	3493881	0	True				
ANR	3495117	CallExpression	"ZFREE ( z , s -> sub . trees . blens )"		3493881	0					
ANR	3495118	Callee	ZFREE		3493881	0					
ANR	3495119	Identifier	ZFREE		3493881	0					
ANR	3495120	ArgumentList	z		3493881	1					
ANR	3495121	Argument	z		3493881	0					
ANR	3495122	Identifier	z		3493881	0					
ANR	3495123	Argument	s -> sub . trees . blens		3493881	1					
ANR	3495124	MemberAccess	s -> sub . trees . blens		3493881	0					
ANR	3495125	MemberAccess	s -> sub . trees		3493881	0					
ANR	3495126	PtrMemberAccess	s -> sub		3493881	0					
ANR	3495127	Identifier	s		3493881	0					
ANR	3495128	Identifier	sub		3493881	1					
ANR	3495129	Identifier	trees		3493881	1					
ANR	3495130	Identifier	blens		3493881	1					
ANR	3495131	ExpressionStatement	s -> mode = BAD	323:12:10785:10798	3493881	1	True				
ANR	3495132	AssignmentExpression	s -> mode = BAD		3493881	0		=			
ANR	3495133	PtrMemberAccess	s -> mode		3493881	0					
ANR	3495134	Identifier	s		3493881	0					
ANR	3495135	Identifier	mode		3493881	1					
ANR	3495136	Identifier	BAD		3493881	1					
ANR	3495137	ExpressionStatement	r = t	325:10:10822:10827	3493881	1	True				
ANR	3495138	AssignmentExpression	r = t		3493881	0		=			
ANR	3495139	Identifier	r		3493881	0					
ANR	3495140	Identifier	t		3493881	1					
ANR	3495141	Statement	LEAVE	326:10:10839:10843	3493881	2	True				
ANR	3495142	ExpressionStatement	"Tracev ( ( stderr , ""inflate:       trees ok\\n"" ) )"	328:8:10863:10908	3493881	8	True				
ANR	3495143	CallExpression	"Tracev ( ( stderr , ""inflate:       trees ok\\n"" ) )"		3493881	0					
ANR	3495144	Callee	Tracev		3493881	0					
ANR	3495145	Identifier	Tracev		3493881	0					
ANR	3495146	ArgumentList	"stderr , ""inflate:       trees ok\\n"""		3493881	1					
ANR	3495147	Argument	"stderr , ""inflate:       trees ok\\n"""		3493881	0					
ANR	3495148	Expression	"stderr , ""inflate:       trees ok\\n"""		3493881	0					
ANR	3495149	Identifier	stderr		3493881	0					
ANR	3495150	PrimaryExpression	"""inflate:       trees ok\\n"""		3493881	1					
ANR	3495151	IfStatement	"if ( ( c = inflate_codes_new ( bl , bd , tl , td , z ) ) == Z_NULL )"		3493881	9					
ANR	3495152	Condition	"( c = inflate_codes_new ( bl , bd , tl , td , z ) ) == Z_NULL"	329:12:10922:10973	3493881	0	True				
ANR	3495153	EqualityExpression	"( c = inflate_codes_new ( bl , bd , tl , td , z ) ) == Z_NULL"		3493881	0		==			
ANR	3495154	AssignmentExpression	"c = inflate_codes_new ( bl , bd , tl , td , z )"		3493881	0		=			
ANR	3495155	Identifier	c		3493881	0					
ANR	3495156	CallExpression	"inflate_codes_new ( bl , bd , tl , td , z )"		3493881	1					
ANR	3495157	Callee	inflate_codes_new		3493881	0					
ANR	3495158	Identifier	inflate_codes_new		3493881	0					
ANR	3495159	ArgumentList	bl		3493881	1					
ANR	3495160	Argument	bl		3493881	0					
ANR	3495161	Identifier	bl		3493881	0					
ANR	3495162	Argument	bd		3493881	1					
ANR	3495163	Identifier	bd		3493881	0					
ANR	3495164	Argument	tl		3493881	2					
ANR	3495165	Identifier	tl		3493881	0					
ANR	3495166	Argument	td		3493881	3					
ANR	3495167	Identifier	td		3493881	0					
ANR	3495168	Argument	z		3493881	4					
ANR	3495169	Identifier	z		3493881	0					
ANR	3495170	Identifier	Z_NULL		3493881	1					
ANR	3495171	CompoundStatement		208:8:6473:6473	3493881	1					
ANR	3495172	ExpressionStatement	r = Z_MEM_ERROR	331:10:10996:11011	3493881	0	True				
ANR	3495173	AssignmentExpression	r = Z_MEM_ERROR		3493881	0		=			
ANR	3495174	Identifier	r		3493881	0					
ANR	3495175	Identifier	Z_MEM_ERROR		3493881	1					
ANR	3495176	Statement	LEAVE	332:10:11023:11027	3493881	1	True				
ANR	3495177	ExpressionStatement	s -> sub . decode . codes = c	334:8:11047:11070	3493881	10	True				
ANR	3495178	AssignmentExpression	s -> sub . decode . codes = c		3493881	0		=			
ANR	3495179	MemberAccess	s -> sub . decode . codes		3493881	0					
ANR	3495180	MemberAccess	s -> sub . decode		3493881	0					
ANR	3495181	PtrMemberAccess	s -> sub		3493881	0					
ANR	3495182	Identifier	s		3493881	0					
ANR	3495183	Identifier	sub		3493881	1					
ANR	3495184	Identifier	decode		3493881	1					
ANR	3495185	Identifier	codes		3493881	1					
ANR	3495186	Identifier	c		3493881	1					
ANR	3495187	ExpressionStatement	"ZFREE ( z , s -> sub . trees . blens )"	336:6:11086:11114	3493881	62	True				
ANR	3495188	CallExpression	"ZFREE ( z , s -> sub . trees . blens )"		3493881	0					
ANR	3495189	Callee	ZFREE		3493881	0					
ANR	3495190	Identifier	ZFREE		3493881	0					
ANR	3495191	ArgumentList	z		3493881	1					
ANR	3495192	Argument	z		3493881	0					
ANR	3495193	Identifier	z		3493881	0					
ANR	3495194	Argument	s -> sub . trees . blens		3493881	1					
ANR	3495195	MemberAccess	s -> sub . trees . blens		3493881	0					
ANR	3495196	MemberAccess	s -> sub . trees		3493881	0					
ANR	3495197	PtrMemberAccess	s -> sub		3493881	0					
ANR	3495198	Identifier	s		3493881	0					
ANR	3495199	Identifier	sub		3493881	1					
ANR	3495200	Identifier	trees		3493881	1					
ANR	3495201	Identifier	blens		3493881	1					
ANR	3495202	ExpressionStatement	s -> mode = CODES	337:6:11122:11137	3493881	63	True				
ANR	3495203	AssignmentExpression	s -> mode = CODES		3493881	0		=			
ANR	3495204	PtrMemberAccess	s -> mode		3493881	0					
ANR	3495205	Identifier	s		3493881	0					
ANR	3495206	Identifier	mode		3493881	1					
ANR	3495207	Identifier	CODES		3493881	1					
ANR	3495208	Label	case CODES :	338:4:11143:11153	3493881	64	True				
ANR	3495209	Identifier	CODES		3493881	0					
ANR	3495210	Statement	UPDATE	339:6:11161:11166	3493881	65	True				
ANR	3495211	IfStatement	"if ( ( r = inflate_codes ( s , z , r ) ) != Z_STREAM_END )"		3493881	66					
ANR	3495212	Condition	"( r = inflate_codes ( s , z , r ) ) != Z_STREAM_END"	340:10:11178:11221	3493881	0	True				
ANR	3495213	EqualityExpression	"( r = inflate_codes ( s , z , r ) ) != Z_STREAM_END"		3493881	0		!=			
ANR	3495214	AssignmentExpression	"r = inflate_codes ( s , z , r )"		3493881	0		=			
ANR	3495215	Identifier	r		3493881	0					
ANR	3495216	CallExpression	"inflate_codes ( s , z , r )"		3493881	1					
ANR	3495217	Callee	inflate_codes		3493881	0					
ANR	3495218	Identifier	inflate_codes		3493881	0					
ANR	3495219	ArgumentList	s		3493881	1					
ANR	3495220	Argument	s		3493881	0					
ANR	3495221	Identifier	s		3493881	0					
ANR	3495222	Argument	z		3493881	1					
ANR	3495223	Identifier	z		3493881	0					
ANR	3495224	Argument	r		3493881	2					
ANR	3495225	Identifier	r		3493881	0					
ANR	3495226	Identifier	Z_STREAM_END		3493881	1					
ANR	3495227	ReturnStatement	"return inflate_flush ( s , z , r ) ;"	341:8:11232:11261	3493881	1	True				
ANR	3495228	CallExpression	"inflate_flush ( s , z , r )"		3493881	0					
ANR	3495229	Callee	inflate_flush		3493881	0					
ANR	3495230	Identifier	inflate_flush		3493881	0					
ANR	3495231	ArgumentList	s		3493881	1					
ANR	3495232	Argument	s		3493881	0					
ANR	3495233	Identifier	s		3493881	0					
ANR	3495234	Argument	z		3493881	1					
ANR	3495235	Identifier	z		3493881	0					
ANR	3495236	Argument	r		3493881	2					
ANR	3495237	Identifier	r		3493881	0					
ANR	3495238	ExpressionStatement	r = Z_OK	342:6:11269:11277	3493881	67	True				
ANR	3495239	AssignmentExpression	r = Z_OK		3493881	0		=			
ANR	3495240	Identifier	r		3493881	0					
ANR	3495241	Identifier	Z_OK		3493881	1					
ANR	3495242	ExpressionStatement	"inflate_codes_free ( s -> sub . decode . codes , z )"	343:6:11285:11327	3493881	68	True				
ANR	3495243	CallExpression	"inflate_codes_free ( s -> sub . decode . codes , z )"		3493881	0					
ANR	3495244	Callee	inflate_codes_free		3493881	0					
ANR	3495245	Identifier	inflate_codes_free		3493881	0					
ANR	3495246	ArgumentList	s -> sub . decode . codes		3493881	1					
ANR	3495247	Argument	s -> sub . decode . codes		3493881	0					
ANR	3495248	MemberAccess	s -> sub . decode . codes		3493881	0					
ANR	3495249	MemberAccess	s -> sub . decode		3493881	0					
ANR	3495250	PtrMemberAccess	s -> sub		3493881	0					
ANR	3495251	Identifier	s		3493881	0					
ANR	3495252	Identifier	sub		3493881	1					
ANR	3495253	Identifier	decode		3493881	1					
ANR	3495254	Identifier	codes		3493881	1					
ANR	3495255	Argument	z		3493881	1					
ANR	3495256	Identifier	z		3493881	0					
ANR	3495257	IdentifierDeclStatement	"LOAD Tracev ( ( stderr , ""inflate:       codes end, %lu total out\\n"" , z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) ) ) ) ;"	344:6:11335:11519	3493881	69	True				
ANR	3495258	IdentifierDecl	"Tracev ( ( stderr , ""inflate:       codes end, %lu total out\\n"" , z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) ) ) )"		3493881	0					
ANR	3495259	IdentifierDeclType	LOAD		3493881	0					
ANR	3495260	Identifier	Tracev		3493881	1					
ANR	3495261	Expression	"stderr , ""inflate:       codes end, %lu total out\\n"" , z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) )"		3493881	2					
ANR	3495262	Identifier	stderr		3493881	0					
ANR	3495263	Expression	"""inflate:       codes end, %lu total out\\n"" , z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) )"		3493881	1					
ANR	3495264	PrimaryExpression	"""inflate:       codes end, %lu total out\\n"""		3493881	0					
ANR	3495265	AdditiveExpression	z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) )		3493881	1		+			
ANR	3495266	PtrMemberAccess	z -> total_out		3493881	0					
ANR	3495267	Identifier	z		3493881	0					
ANR	3495268	Identifier	total_out		3493881	1					
ANR	3495269	ConditionalExpression	q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window )		3493881	1					
ANR	3495270	Condition	q >= s -> read		3493881	0					
ANR	3495271	RelationalExpression	q >= s -> read		3493881	0		>=			
ANR	3495272	Identifier	q		3493881	0					
ANR	3495273	PtrMemberAccess	s -> read		3493881	1					
ANR	3495274	Identifier	s		3493881	0					
ANR	3495275	Identifier	read		3493881	1					
ANR	3495276	AdditiveExpression	q - s -> read		3493881	1		-			
ANR	3495277	Identifier	q		3493881	0					
ANR	3495278	PtrMemberAccess	s -> read		3493881	1					
ANR	3495279	Identifier	s		3493881	0					
ANR	3495280	Identifier	read		3493881	1					
ANR	3495281	AdditiveExpression	( s -> end - s -> read ) + ( q - s -> window )		3493881	2		+			
ANR	3495282	AdditiveExpression	s -> end - s -> read		3493881	0		-			
ANR	3495283	PtrMemberAccess	s -> end		3493881	0					
ANR	3495284	Identifier	s		3493881	0					
ANR	3495285	Identifier	end		3493881	1					
ANR	3495286	PtrMemberAccess	s -> read		3493881	1					
ANR	3495287	Identifier	s		3493881	0					
ANR	3495288	Identifier	read		3493881	1					
ANR	3495289	AdditiveExpression	q - s -> window		3493881	1		-			
ANR	3495290	Identifier	q		3493881	0					
ANR	3495291	PtrMemberAccess	s -> window		3493881	1					
ANR	3495292	Identifier	s		3493881	0					
ANR	3495293	Identifier	window		3493881	1					
ANR	3495294	IfStatement	if ( ! s -> last )		3493881	70					
ANR	3495295	Condition	! s -> last	348:10:11531:11538	3493881	0	True				
ANR	3495296	UnaryOperationExpression	! s -> last		3493881	0					
ANR	3495297	UnaryOperator	!		3493881	0					
ANR	3495298	PtrMemberAccess	s -> last		3493881	1					
ANR	3495299	Identifier	s		3493881	0					
ANR	3495300	Identifier	last		3493881	1					
ANR	3495301	CompoundStatement		227:6:7036:7036	3493881	1					
ANR	3495302	ExpressionStatement	s -> mode = TYPE	350:8:11557:11571	3493881	0	True				
ANR	3495303	AssignmentExpression	s -> mode = TYPE		3493881	0		=			
ANR	3495304	PtrMemberAccess	s -> mode		3493881	0					
ANR	3495305	Identifier	s		3493881	0					
ANR	3495306	Identifier	mode		3493881	1					
ANR	3495307	Identifier	TYPE		3493881	1					
ANR	3495308	BreakStatement	break ;	351:8:11581:11586	3493881	1	True				
ANR	3495309	ExpressionStatement	s -> mode = DRY	353:6:11602:11615	3493881	71	True				
ANR	3495310	AssignmentExpression	s -> mode = DRY		3493881	0		=			
ANR	3495311	PtrMemberAccess	s -> mode		3493881	0					
ANR	3495312	Identifier	s		3493881	0					
ANR	3495313	Identifier	mode		3493881	1					
ANR	3495314	Identifier	DRY		3493881	1					
ANR	3495315	Label	case DRY :	354:4:11621:11629	3493881	72	True				
ANR	3495316	Identifier	DRY		3493881	0					
ANR	3495317	Statement	FLUSH	355:6:11637:11641	3493881	73	True				
ANR	3495318	IfStatement	if ( s -> read != s -> write )		3493881	74					
ANR	3495319	Condition	s -> read != s -> write	356:10:11653:11671	3493881	0	True				
ANR	3495320	EqualityExpression	s -> read != s -> write		3493881	0		!=			
ANR	3495321	PtrMemberAccess	s -> read		3493881	0					
ANR	3495322	Identifier	s		3493881	0					
ANR	3495323	Identifier	read		3493881	1					
ANR	3495324	PtrMemberAccess	s -> write		3493881	1					
ANR	3495325	Identifier	s		3493881	0					
ANR	3495326	Identifier	write		3493881	1					
ANR	3495327	Statement	LEAVE	357:8:11682:11686	3493881	1	True				
ANR	3495328	ExpressionStatement	s -> mode = DONE	358:6:11694:11708	3493881	75	True				
ANR	3495329	AssignmentExpression	s -> mode = DONE		3493881	0		=			
ANR	3495330	PtrMemberAccess	s -> mode		3493881	0					
ANR	3495331	Identifier	s		3493881	0					
ANR	3495332	Identifier	mode		3493881	1					
ANR	3495333	Identifier	DONE		3493881	1					
ANR	3495334	Label	case DONE :	359:4:11714:11723	3493881	76	True				
ANR	3495335	Identifier	DONE		3493881	0					
ANR	3495336	ExpressionStatement	r = Z_STREAM_END	360:6:11731:11747	3493881	77	True				
ANR	3495337	AssignmentExpression	r = Z_STREAM_END		3493881	0		=			
ANR	3495338	Identifier	r		3493881	0					
ANR	3495339	Identifier	Z_STREAM_END		3493881	1					
ANR	3495340	Statement	LEAVE	361:6:11755:11759	3493881	78	True				
ANR	3495341	Label	case BAD :	362:4:11765:11773	3493881	79	True				
ANR	3495342	Identifier	BAD		3493881	0					
ANR	3495343	ExpressionStatement	r = Z_DATA_ERROR	363:6:11781:11797	3493881	80	True				
ANR	3495344	AssignmentExpression	r = Z_DATA_ERROR		3493881	0		=			
ANR	3495345	Identifier	r		3493881	0					
ANR	3495346	Identifier	Z_DATA_ERROR		3493881	1					
ANR	3495347	Statement	LEAVE	364:6:11805:11809	3493881	81	True				
ANR	3495348	Label	default :	365:4:11815:11822	3493881	82	True				
ANR	3495349	Identifier	default		3493881	0					
ANR	3495350	ExpressionStatement	r = Z_STREAM_ERROR	366:6:11830:11848	3493881	83	True				
ANR	3495351	AssignmentExpression	r = Z_STREAM_ERROR		3493881	0		=			
ANR	3495352	Identifier	r		3493881	0					
ANR	3495353	Identifier	Z_STREAM_ERROR		3493881	1					
ANR	3495354	Statement	LEAVE	367:6:11856:11860	3493881	84	True				
ANR	3495355	ReturnStatement	return 0 ;	370:2:11893:11901	3493881	9	True				
ANR	3495356	PrimaryExpression	0		3493881	0					
ANR	3495357	ReturnType	local int		3493881	1					
ANR	3495358	Identifier	inflate_blocks		3493881	2					
ANR	3495359	ParameterList	"inflate_blocks_statef * s , z_streamp z , int r"		3493881	3					
ANR	3495360	Parameter	inflate_blocks_statef * s	120:0:4463:4486	3493881	0	True				
ANR	3495361	ParameterType	inflate_blocks_statef *		3493881	0					
ANR	3495362	Identifier	s		3493881	1					
ANR	3495363	Parameter	z_streamp z	121:0:4489:4499	3493881	1	True				
ANR	3495364	ParameterType	z_streamp		3493881	0					
ANR	3495365	Identifier	z		3493881	1					
ANR	3495366	Parameter	int r	122:0:4502:4506	3493881	2	True				
ANR	3495367	ParameterType	int		3493881	0					
ANR	3495368	Identifier	r		3493881	1					
ANR	3495369	CFGEntryNode	ENTRY		3493881		True				
ANR	3495370	CFGExitNode	EXIT		3493881		True				
ANR	3495371	Symbol	h -> base		3493881						
ANR	3495372	Symbol	Z_STREAM_ERROR		3493881						
ANR	3495373	Symbol	Z_DATA_ERROR		3493881						
ANR	3495374	Symbol	Z_MEM_ERROR		3493881						
ANR	3495375	Symbol	* z		3493881						
ANR	3495376	Symbol	* s -> sub . trees . blens		3493881						
ANR	3495377	Symbol	DTREE		3493881						
ANR	3495378	Symbol	DRY		3493881						
ANR	3495379	Symbol	s -> end		3493881						
ANR	3495380	Symbol	inflate_mask		3493881						
ANR	3495381	Symbol	TABLE		3493881						
ANR	3495382	Symbol	& bl		3493881						
ANR	3495383	Symbol	inflate_codes_new		3493881						
ANR	3495384	Symbol	* s -> sub . trees		3493881						
ANR	3495385	Symbol	Z_STREAM_END		3493881						
ANR	3495386	Symbol	* s -> sub		3493881						
ANR	3495387	Symbol	s -> mode		3493881						
ANR	3495388	Symbol	s -> window		3493881						
ANR	3495389	Symbol	TYPE		3493881						
ANR	3495390	Symbol	s -> sub . trees . blens		3493881						
ANR	3495391	Symbol	s -> sub . trees . bb		3493881						
ANR	3495392	Symbol	border		3493881						
ANR	3495393	Symbol	& s -> sub . trees		3493881						
ANR	3495394	Symbol	z -> msg		3493881						
ANR	3495395	Symbol	DONE		3493881						
ANR	3495396	Symbol	& tl		3493881						
ANR	3495397	Symbol	~b		3493881						
ANR	3495398	Symbol	* border		3493881						
ANR	3495399	Symbol	BTREE		3493881						
ANR	3495400	Symbol	* inflate_mask		3493881						
ANR	3495401	Symbol	inflate_flush		3493881						
ANR	3495402	Symbol	stderr		3493881						
ANR	3495403	Symbol	s -> sub		3493881						
ANR	3495404	Symbol	ZALLOC		3493881						
ANR	3495405	Symbol	s -> sub . trees . tb		3493881						
ANR	3495406	Symbol	s -> sub . decode		3493881						
ANR	3495407	Symbol	s -> sub . trees . table		3493881						
ANR	3495408	Symbol	& s -> sub . trees . bb		3493881						
ANR	3495409	Symbol	s -> sub . trees . index		3493881						
ANR	3495410	Symbol	s -> sub . trees		3493881						
ANR	3495411	Symbol	Tracev		3493881						
ANR	3495412	Symbol	& td		3493881						
ANR	3495413	Symbol	Z_NULL		3493881						
ANR	3495414	Symbol	bd		3493881						
ANR	3495415	Symbol	STORED		3493881						
ANR	3495416	Symbol	* * border		3493881						
ANR	3495417	Symbol	bl		3493881						
ANR	3495418	Symbol	Z_OK		3493881						
ANR	3495419	Symbol	inflate_codes		3493881						
ANR	3495420	Symbol	CODES		3493881						
ANR	3495421	Symbol	s -> read		3493881						
ANR	3495422	Symbol	* * s		3493881						
ANR	3495423	Symbol	s -> sub . left		3493881						
ANR	3495424	Symbol	inflate_trees_bits		3493881						
ANR	3495425	Symbol	LENS		3493881						
ANR	3495426	Symbol	b		3493881						
ANR	3495427	Symbol	c		3493881						
ANR	3495428	Symbol	s -> last		3493881						
ANR	3495429	Symbol	BAD		3493881						
ANR	3495430	Symbol	& s -> sub . trees . tb		3493881						
ANR	3495431	Symbol	h		3493881						
ANR	3495432	Symbol	i		3493881						
ANR	3495433	Symbol	j		3493881						
ANR	3495434	Symbol	k		3493881						
ANR	3495435	Symbol	m		3493881						
ANR	3495436	Symbol	& bd		3493881						
ANR	3495437	Symbol	n		3493881						
ANR	3495438	Symbol	p		3493881						
ANR	3495439	Symbol	td		3493881						
ANR	3495440	Symbol	z -> total_out		3493881						
ANR	3495441	Symbol	q		3493881						
ANR	3495442	Symbol	r		3493881						
ANR	3495443	Symbol	* h		3493881						
ANR	3495444	Symbol	s		3493881						
ANR	3495445	Symbol	* i		3493881						
ANR	3495446	Symbol	t		3493881						
ANR	3495447	Symbol	h -> bits		3493881						
ANR	3495448	Symbol	inflate_trees_dynamic		3493881						
ANR	3495449	Symbol	tl		3493881						
ANR	3495450	Symbol	s -> sub . decode . codes		3493881						
ANR	3495451	Symbol	s -> hufts		3493881						
ANR	3495452	Symbol	z		3493881						
ANR	3495453	Symbol	* s		3493881						
ANR	3495454	Symbol	s -> write		3493881						
ANR	3495455	Symbol	* t		3493881						
ANR	3495456	Symbol	& s -> sub		3493881						
ANR	3495457	Function	inflate_blocks_free	375:0:11914:12161							
ANR	3495458	FunctionDef	"inflate_blocks_free (inflate_blocks_statef * s , z_streamp z)"		3495457	0					
ANR	3495459	CompoundStatement		378:0:11997:12161	3495457	0					
ANR	3495460	ExpressionStatement	"inflate_blocks_reset ( s , z , Z_NULL )"	379:2:12001:12035	3495457	0	True				
ANR	3495461	CallExpression	"inflate_blocks_reset ( s , z , Z_NULL )"		3495457	0					
ANR	3495462	Callee	inflate_blocks_reset		3495457	0					
ANR	3495463	Identifier	inflate_blocks_reset		3495457	0					
ANR	3495464	ArgumentList	s		3495457	1					
ANR	3495465	Argument	s		3495457	0					
ANR	3495466	Identifier	s		3495457	0					
ANR	3495467	Argument	z		3495457	1					
ANR	3495468	Identifier	z		3495457	0					
ANR	3495469	Argument	Z_NULL		3495457	2					
ANR	3495470	Identifier	Z_NULL		3495457	0					
ANR	3495471	ExpressionStatement	"ZFREE ( z , s -> window )"	380:2:12039:12058	3495457	1	True				
ANR	3495472	CallExpression	"ZFREE ( z , s -> window )"		3495457	0					
ANR	3495473	Callee	ZFREE		3495457	0					
ANR	3495474	Identifier	ZFREE		3495457	0					
ANR	3495475	ArgumentList	z		3495457	1					
ANR	3495476	Argument	z		3495457	0					
ANR	3495477	Identifier	z		3495457	0					
ANR	3495478	Argument	s -> window		3495457	1					
ANR	3495479	PtrMemberAccess	s -> window		3495457	0					
ANR	3495480	Identifier	s		3495457	0					
ANR	3495481	Identifier	window		3495457	1					
ANR	3495482	ExpressionStatement	"ZFREE ( z , s -> hufts )"	381:2:12062:12080	3495457	2	True				
ANR	3495483	CallExpression	"ZFREE ( z , s -> hufts )"		3495457	0					
ANR	3495484	Callee	ZFREE		3495457	0					
ANR	3495485	Identifier	ZFREE		3495457	0					
ANR	3495486	ArgumentList	z		3495457	1					
ANR	3495487	Argument	z		3495457	0					
ANR	3495488	Identifier	z		3495457	0					
ANR	3495489	Argument	s -> hufts		3495457	1					
ANR	3495490	PtrMemberAccess	s -> hufts		3495457	0					
ANR	3495491	Identifier	s		3495457	0					
ANR	3495492	Identifier	hufts		3495457	1					
ANR	3495493	ExpressionStatement	"ZFREE ( z , s )"	382:2:12084:12095	3495457	3	True				
ANR	3495494	CallExpression	"ZFREE ( z , s )"		3495457	0					
ANR	3495495	Callee	ZFREE		3495457	0					
ANR	3495496	Identifier	ZFREE		3495457	0					
ANR	3495497	ArgumentList	z		3495457	1					
ANR	3495498	Argument	z		3495457	0					
ANR	3495499	Identifier	z		3495457	0					
ANR	3495500	Argument	s		3495457	1					
ANR	3495501	Identifier	s		3495457	0					
ANR	3495502	ExpressionStatement	"Tracev ( ( stderr , ""inflate:   blocks freed\\n"" ) )"	383:2:12099:12144	3495457	4	True				
ANR	3495503	CallExpression	"Tracev ( ( stderr , ""inflate:   blocks freed\\n"" ) )"		3495457	0					
ANR	3495504	Callee	Tracev		3495457	0					
ANR	3495505	Identifier	Tracev		3495457	0					
ANR	3495506	ArgumentList	"stderr , ""inflate:   blocks freed\\n"""		3495457	1					
ANR	3495507	Argument	"stderr , ""inflate:   blocks freed\\n"""		3495457	0					
ANR	3495508	Expression	"stderr , ""inflate:   blocks freed\\n"""		3495457	0					
ANR	3495509	Identifier	stderr		3495457	0					
ANR	3495510	PrimaryExpression	"""inflate:   blocks freed\\n"""		3495457	1					
ANR	3495511	ReturnStatement	return Z_OK ;	384:2:12148:12159	3495457	5	True				
ANR	3495512	Identifier	Z_OK		3495457	0					
ANR	3495513	ReturnType	local int		3495457	1					
ANR	3495514	Identifier	inflate_blocks_free		3495457	2					
ANR	3495515	ParameterList	"inflate_blocks_statef * s , z_streamp z"		3495457	3					
ANR	3495516	Parameter	inflate_blocks_statef * s	376:0:11957:11980	3495457	0	True				
ANR	3495517	ParameterType	inflate_blocks_statef *		3495457	0					
ANR	3495518	Identifier	s		3495457	1					
ANR	3495519	Parameter	z_streamp z	377:0:11983:11993	3495457	1	True				
ANR	3495520	ParameterType	z_streamp		3495457	0					
ANR	3495521	Identifier	z		3495457	1					
ANR	3495522	CFGEntryNode	ENTRY		3495457		True				
ANR	3495523	CFGExitNode	EXIT		3495457		True				
ANR	3495524	Symbol	s		3495457						
ANR	3495525	Symbol	s -> hufts		3495457						
ANR	3495526	Symbol	z		3495457						
ANR	3495527	Symbol	Z_OK		3495457						
ANR	3495528	Symbol	s -> window		3495457						
ANR	3495529	Symbol	stderr		3495457						
ANR	3495530	Symbol	* s		3495457						
ANR	3495531	Symbol	Z_NULL		3495457						
