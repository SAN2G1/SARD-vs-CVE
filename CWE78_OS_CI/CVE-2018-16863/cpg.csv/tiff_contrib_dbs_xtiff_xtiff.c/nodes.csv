command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10018369	File	data/converged/CVE-2018-16863_ghostpdl/tiff_contrib_dbs_xtiff_xtiff.c								
ANR	10018370	DeclStmt									
ANR	10018371	Decl							int XTiffErrorHandler	int XTiffErrorHandler	PP
ANR	10018372	DeclStmt									
ANR	10018373	Decl							int	int	xtVersion
ANR	10018374	DeclStmt									
ANR	10018375	Decl							Widget	Widget	shellWidget
ANR	10018376	Decl							Widget	Widget	formWidget
ANR	10018377	Decl							Widget	Widget	listWidget
ANR	10018378	Decl							Widget	Widget	labelWidget
ANR	10018379	Decl							Widget	Widget	imageWidget
ANR	10018380	ClassDef	<unnamed>	118:0:4183:4249							
ANR	10018381	DeclStmt									
ANR	10018382	Decl							String	String [ ]	buttonStrings
ANR	10018383	DeclStmt									
ANR	10018384	Decl							XrmOptionDescRec	XrmOptionDescRec [ ]	shellOptions
ANR	10018385	ClassDef	<unnamed>	132:8:4785:4967							
ANR	10018386	DeclStmt									
ANR	10018387	Decl							Boolean	Boolean	help
ANR	10018388	DeclStmt									
ANR	10018389	Decl							float	float	gamma
ANR	10018390	DeclStmt									
ANR	10018391	Decl							Boolean	Boolean	usePixmap
ANR	10018392	DeclStmt									
ANR	10018393	Decl							uint32	uint32	viewportWidth
ANR	10018394	DeclStmt									
ANR	10018395	Decl							uint32	uint32	viewportHeight
ANR	10018396	DeclStmt									
ANR	10018397	Decl							int	int	translate
ANR	10018398	DeclStmt									
ANR	10018399	Decl							Boolean	Boolean	verbose
ANR	10018400	DeclStmt									
ANR	10018401	Decl									AppData
ANR	10018402	Decl								 *	AppDataPtr
ANR	10018403	DeclStmt									
ANR	10018404	Decl							AppData	AppData	appData
ANR	10018405	DeclStmt									
ANR	10018406	Decl							XtResource	XtResource [ ]	clientResources
ANR	10018407	DeclStmt									
ANR	10018408	Decl							Arg	Arg [ ]	formArgs
ANR	10018409	DeclStmt									
ANR	10018410	Decl							Arg	Arg [ ]	listArgs
ANR	10018411	DeclStmt									
ANR	10018412	Decl							Arg	Arg [ ]	labelArgs
ANR	10018413	DeclStmt									
ANR	10018414	Decl							Arg	Arg [ ]	imageArgs
ANR	10018415	DeclStmt									
ANR	10018416	Decl							XtActionsRec	XtActionsRec [ ]	actionsTable
ANR	10018417	DeclStmt									
ANR	10018418	Decl							char	char [ ]	translationsTable
ANR	10018419	DeclStmt									
ANR	10018420	Decl							Colormap	Colormap	xColormap
ANR	10018421	DeclStmt									
ANR	10018422	Decl							Display	Display *	xDisplay
ANR	10018423	DeclStmt									
ANR	10018424	Decl							Pixmap	Pixmap	xImagePixmap
ANR	10018425	DeclStmt									
ANR	10018426	Decl							Visual	Visual *	xVisual
ANR	10018427	DeclStmt									
ANR	10018428	Decl							XImage	XImage *	xImage
ANR	10018429	DeclStmt									
ANR	10018430	Decl							GC	GC	xWinGc
ANR	10018431	DeclStmt									
ANR	10018432	Decl							int	int	xImageDepth
ANR	10018433	Decl							int	int	xScreen
ANR	10018434	Decl							int	int	xRedMask
ANR	10018435	Decl							int	int	xGreenMask
ANR	10018436	Decl							int	int	xBlueMask
ANR	10018437	Decl							int	int	xOffset
ANR	10018438	Decl							int	int	yOffset
ANR	10018439	Decl							int	int	grabX
ANR	10018440	Decl							int	int	grabY
ANR	10018441	DeclStmt									
ANR	10018442	Decl							unsigned char	unsigned char	basePixel
ANR	10018443	DeclStmt									
ANR	10018444	Decl							TIFF	TIFF *	tfFile
ANR	10018445	DeclStmt									
ANR	10018446	Decl							uint32	uint32	tfImageWidth
ANR	10018447	Decl							uint32	uint32	tfImageHeight
ANR	10018448	DeclStmt									
ANR	10018449	Decl							uint16	uint16	tfBitsPerSample
ANR	10018450	Decl							uint16	uint16	tfSamplesPerPixel
ANR	10018451	Decl							uint16	uint16	tfPlanarConfiguration
ANR	10018452	Decl							uint16	uint16	tfPhotometricInterpretation
ANR	10018453	Decl							uint16	uint16	tfGrayResponseUnit
ANR	10018454	Decl							uint16	uint16	tfImageDepth
ANR	10018455	Decl							uint16	uint16	tfBytesPerRow
ANR	10018456	DeclStmt									
ANR	10018457	Decl							int	int	tfDirectory
ANR	10018458	Decl							int	int	tfMultiPage
ANR	10018459	DeclStmt									
ANR	10018460	Decl							double	double	tfUnitMap
ANR	10018461	Decl							double	double [ ]	tfGrayResponseUnitMap
ANR	10018462	DeclStmt									
ANR	10018463	Decl							double	double *	dRed
ANR	10018464	Decl							double	double *	dGreen
ANR	10018465	Decl							double	double *	dBlue
ANR	10018466	DeclStmt									
ANR	10018467	Decl							uint16	uint16 *	redMap
ANR	10018468	Decl							uint16	uint16 *	greenMap
ANR	10018469	Decl							uint16	uint16 *	blueMap
ANR	10018470	Decl							uint16	uint16 *	grayMap
ANR	10018471	Decl							uint16	uint16	colormapSize
ANR	10018472	DeclStmt									
ANR	10018473	Decl							char	char *	imageMemory
ANR	10018474	DeclStmt									
ANR	10018475	Decl							char	char *	fileName
ANR	10018476	Function	main	263:0:8713:12553							
ANR	10018477	FunctionDef	"main (int argc , char * * argv)"		10018476	0					
ANR	10018478	CompoundStatement		265:0:8745:12553	10018476	0					
ANR	10018479	IdentifierDeclStatement	XSetWindowAttributes window_attributes ;	266:4:8751:8789	10018476	0	True				
ANR	10018480	IdentifierDecl	window_attributes		10018476	0					
ANR	10018481	IdentifierDeclType	XSetWindowAttributes		10018476	0					
ANR	10018482	Identifier	window_attributes		10018476	1					
ANR	10018483	IdentifierDeclStatement	Widget widget_list [ 3 ] ;	267:4:8795:8816	10018476	1	True				
ANR	10018484	IdentifierDecl	widget_list [ 3 ]		10018476	0					
ANR	10018485	IdentifierDeclType	Widget [ 3 ]		10018476	0					
ANR	10018486	Identifier	widget_list		10018476	1					
ANR	10018487	PrimaryExpression	3		10018476	2					
ANR	10018488	IdentifierDeclStatement	Arg args [ 5 ] ;	268:4:8822:8833	10018476	2	True				
ANR	10018489	IdentifierDecl	args [ 5 ]		10018476	0					
ANR	10018490	IdentifierDeclType	Arg [ 5 ]		10018476	0					
ANR	10018491	Identifier	args		10018476	1					
ANR	10018492	PrimaryExpression	5		10018476	2					
ANR	10018493	ExpressionStatement	"setbuf ( stdout , NULL )"	270:4:8840:8860	10018476	3	True				
ANR	10018494	CallExpression	"setbuf ( stdout , NULL )"		10018476	0					
ANR	10018495	Callee	setbuf		10018476	0					
ANR	10018496	Identifier	setbuf		10018476	0					
ANR	10018497	ArgumentList	stdout		10018476	1					
ANR	10018498	Argument	stdout		10018476	0					
ANR	10018499	Identifier	stdout		10018476	0					
ANR	10018500	Argument	NULL		10018476	1					
ANR	10018501	Identifier	NULL		10018476	0					
ANR	10018502	ExpressionStatement	"setbuf ( stderr , NULL )"	270:26:8862:8882	10018476	4	True				
ANR	10018503	CallExpression	"setbuf ( stderr , NULL )"		10018476	0					
ANR	10018504	Callee	setbuf		10018476	0					
ANR	10018505	Identifier	setbuf		10018476	0					
ANR	10018506	ArgumentList	stderr		10018476	1					
ANR	10018507	Argument	stderr		10018476	0					
ANR	10018508	Identifier	stderr		10018476	0					
ANR	10018509	Argument	NULL		10018476	1					
ANR	10018510	Identifier	NULL		10018476	0					
ANR	10018511	ExpressionStatement	"shellWidget = XtInitialize ( argv [ 0 ] , ""XTiff"" , shellOptions , XtNumber ( shellOptions ) , & argc , argv )"	272:4:8889:8992	10018476	5	True				
ANR	10018512	AssignmentExpression	"shellWidget = XtInitialize ( argv [ 0 ] , ""XTiff"" , shellOptions , XtNumber ( shellOptions ) , & argc , argv )"		10018476	0		=			
ANR	10018513	Identifier	shellWidget		10018476	0					
ANR	10018514	CallExpression	"XtInitialize ( argv [ 0 ] , ""XTiff"" , shellOptions , XtNumber ( shellOptions ) , & argc , argv )"		10018476	1					
ANR	10018515	Callee	XtInitialize		10018476	0					
ANR	10018516	Identifier	XtInitialize		10018476	0					
ANR	10018517	ArgumentList	argv [ 0 ]		10018476	1					
ANR	10018518	Argument	argv [ 0 ]		10018476	0					
ANR	10018519	ArrayIndexing	argv [ 0 ]		10018476	0					
ANR	10018520	Identifier	argv		10018476	0					
ANR	10018521	PrimaryExpression	0		10018476	1					
ANR	10018522	Argument	"""XTiff"""		10018476	1					
ANR	10018523	PrimaryExpression	"""XTiff"""		10018476	0					
ANR	10018524	Argument	shellOptions		10018476	2					
ANR	10018525	Identifier	shellOptions		10018476	0					
ANR	10018526	Argument	XtNumber ( shellOptions )		10018476	3					
ANR	10018527	CallExpression	XtNumber ( shellOptions )		10018476	0					
ANR	10018528	Callee	XtNumber		10018476	0					
ANR	10018529	Identifier	XtNumber		10018476	0					
ANR	10018530	ArgumentList	shellOptions		10018476	1					
ANR	10018531	Argument	shellOptions		10018476	0					
ANR	10018532	Identifier	shellOptions		10018476	0					
ANR	10018533	Argument	& argc		10018476	4					
ANR	10018534	UnaryOperationExpression	& argc		10018476	0					
ANR	10018535	UnaryOperator	&		10018476	0					
ANR	10018536	Identifier	argc		10018476	1					
ANR	10018537	Argument	argv		10018476	5					
ANR	10018538	Identifier	argv		10018476	0					
ANR	10018539	ExpressionStatement	XSetErrorHandler ( XTiffErrorHandler )	275:4:8999:9034	10018476	6	True				
ANR	10018540	CallExpression	XSetErrorHandler ( XTiffErrorHandler )		10018476	0					
ANR	10018541	Callee	XSetErrorHandler		10018476	0					
ANR	10018542	Identifier	XSetErrorHandler		10018476	0					
ANR	10018543	ArgumentList	XTiffErrorHandler		10018476	1					
ANR	10018544	Argument	XTiffErrorHandler		10018476	0					
ANR	10018545	Identifier	XTiffErrorHandler		10018476	0					
ANR	10018546	ExpressionStatement	"XtGetApplicationResources ( shellWidget , & appData , ( XtResourceList ) clientResources , ( Cardinal ) XtNumber ( clientResources ) , ( ArgList ) NULL , ( Cardinal ) 0 )"	277:4:9041:9207	10018476	7	True				
ANR	10018547	CallExpression	"XtGetApplicationResources ( shellWidget , & appData , ( XtResourceList ) clientResources , ( Cardinal ) XtNumber ( clientResources ) , ( ArgList ) NULL , ( Cardinal ) 0 )"		10018476	0					
ANR	10018548	Callee	XtGetApplicationResources		10018476	0					
ANR	10018549	Identifier	XtGetApplicationResources		10018476	0					
ANR	10018550	ArgumentList	shellWidget		10018476	1					
ANR	10018551	Argument	shellWidget		10018476	0					
ANR	10018552	Identifier	shellWidget		10018476	0					
ANR	10018553	Argument	& appData		10018476	1					
ANR	10018554	UnaryOperationExpression	& appData		10018476	0					
ANR	10018555	UnaryOperator	&		10018476	0					
ANR	10018556	Identifier	appData		10018476	1					
ANR	10018557	Argument	( XtResourceList ) clientResources		10018476	2					
ANR	10018558	CastExpression	( XtResourceList ) clientResources		10018476	0					
ANR	10018559	CastTarget	XtResourceList		10018476	0					
ANR	10018560	Identifier	clientResources		10018476	1					
ANR	10018561	Argument	( Cardinal ) XtNumber ( clientResources )		10018476	3					
ANR	10018562	CastExpression	( Cardinal ) XtNumber ( clientResources )		10018476	0					
ANR	10018563	CastTarget	Cardinal		10018476	0					
ANR	10018564	CallExpression	XtNumber ( clientResources )		10018476	1					
ANR	10018565	Callee	XtNumber		10018476	0					
ANR	10018566	Identifier	XtNumber		10018476	0					
ANR	10018567	ArgumentList	clientResources		10018476	1					
ANR	10018568	Argument	clientResources		10018476	0					
ANR	10018569	Identifier	clientResources		10018476	0					
ANR	10018570	Argument	( ArgList ) NULL		10018476	4					
ANR	10018571	CastExpression	( ArgList ) NULL		10018476	0					
ANR	10018572	CastTarget	ArgList		10018476	0					
ANR	10018573	Identifier	NULL		10018476	1					
ANR	10018574	Argument	( Cardinal ) 0		10018476	5					
ANR	10018575	CastExpression	( Cardinal ) 0		10018476	0					
ANR	10018576	CastTarget	Cardinal		10018476	0					
ANR	10018577	PrimaryExpression	0		10018476	1					
ANR	10018578	IfStatement	if ( ( argc <= 1 ) || ( argc > 2 ) || appData . help )		10018476	8					
ANR	10018579	Condition	( argc <= 1 ) || ( argc > 2 ) || appData . help	281:8:9218:9258	10018476	0	True				
ANR	10018580	OrExpression	( argc <= 1 ) || ( argc > 2 ) || appData . help		10018476	0		||			
ANR	10018581	RelationalExpression	argc <= 1		10018476	0		<=			
ANR	10018582	Identifier	argc		10018476	0					
ANR	10018583	PrimaryExpression	1		10018476	1					
ANR	10018584	OrExpression	( argc > 2 ) || appData . help		10018476	1		||			
ANR	10018585	RelationalExpression	argc > 2		10018476	0		>			
ANR	10018586	Identifier	argc		10018476	0					
ANR	10018587	PrimaryExpression	2		10018476	1					
ANR	10018588	MemberAccess	appData . help		10018476	1					
ANR	10018589	Identifier	appData		10018476	0					
ANR	10018590	Identifier	help		10018476	1					
ANR	10018591	ExpressionStatement	Usage ( )	282:8:9269:9276	10018476	1	True				
ANR	10018592	CallExpression	Usage ( )		10018476	0					
ANR	10018593	Callee	Usage		10018476	0					
ANR	10018594	Identifier	Usage		10018476	0					
ANR	10018595	ArgumentList			10018476	1					
ANR	10018596	IfStatement	if ( appData . verbose == False )		10018476	9					
ANR	10018597	Condition	appData . verbose == False	284:8:9287:9310	10018476	0	True				
ANR	10018598	EqualityExpression	appData . verbose == False		10018476	0		==			
ANR	10018599	MemberAccess	appData . verbose		10018476	0					
ANR	10018600	Identifier	appData		10018476	0					
ANR	10018601	Identifier	verbose		10018476	1					
ANR	10018602	Identifier	False		10018476	1					
ANR	10018603	CompoundStatement		20:34:567:567	10018476	1					
ANR	10018604	ExpressionStatement	TIFFSetErrorHandler ( 0 )	285:8:9323:9345	10018476	0	True				
ANR	10018605	CallExpression	TIFFSetErrorHandler ( 0 )		10018476	0					
ANR	10018606	Callee	TIFFSetErrorHandler		10018476	0					
ANR	10018607	Identifier	TIFFSetErrorHandler		10018476	0					
ANR	10018608	ArgumentList	0		10018476	1					
ANR	10018609	Argument	0		10018476	0					
ANR	10018610	PrimaryExpression	0		10018476	0					
ANR	10018611	ExpressionStatement	TIFFSetWarningHandler ( 0 )	286:8:9355:9379	10018476	1	True				
ANR	10018612	CallExpression	TIFFSetWarningHandler ( 0 )		10018476	0					
ANR	10018613	Callee	TIFFSetWarningHandler		10018476	0					
ANR	10018614	Identifier	TIFFSetWarningHandler		10018476	0					
ANR	10018615	ArgumentList	0		10018476	1					
ANR	10018616	Argument	0		10018476	0					
ANR	10018617	PrimaryExpression	0		10018476	0					
ANR	10018618	ExpressionStatement	fileName = argv [ 1 ]	289:4:9392:9410	10018476	10	True				
ANR	10018619	AssignmentExpression	fileName = argv [ 1 ]		10018476	0		=			
ANR	10018620	Identifier	fileName		10018476	0					
ANR	10018621	ArrayIndexing	argv [ 1 ]		10018476	1					
ANR	10018622	Identifier	argv		10018476	0					
ANR	10018623	PrimaryExpression	1		10018476	1					
ANR	10018624	ExpressionStatement	xDisplay = XtDisplay ( shellWidget )	291:4:9417:9450	10018476	11	True				
ANR	10018625	AssignmentExpression	xDisplay = XtDisplay ( shellWidget )		10018476	0		=			
ANR	10018626	Identifier	xDisplay		10018476	0					
ANR	10018627	CallExpression	XtDisplay ( shellWidget )		10018476	1					
ANR	10018628	Callee	XtDisplay		10018476	0					
ANR	10018629	Identifier	XtDisplay		10018476	0					
ANR	10018630	ArgumentList	shellWidget		10018476	1					
ANR	10018631	Argument	shellWidget		10018476	0					
ANR	10018632	Identifier	shellWidget		10018476	0					
ANR	10018633	ExpressionStatement	xScreen = DefaultScreen ( xDisplay )	292:4:9456:9489	10018476	12	True				
ANR	10018634	AssignmentExpression	xScreen = DefaultScreen ( xDisplay )		10018476	0		=			
ANR	10018635	Identifier	xScreen		10018476	0					
ANR	10018636	CallExpression	DefaultScreen ( xDisplay )		10018476	1					
ANR	10018637	Callee	DefaultScreen		10018476	0					
ANR	10018638	Identifier	DefaultScreen		10018476	0					
ANR	10018639	ArgumentList	xDisplay		10018476	1					
ANR	10018640	Argument	xDisplay		10018476	0					
ANR	10018641	Identifier	xDisplay		10018476	0					
ANR	10018642	ExpressionStatement	OpenTIFFFile ( )	294:4:9496:9510	10018476	13	True				
ANR	10018643	CallExpression	OpenTIFFFile ( )		10018476	0					
ANR	10018644	Callee	OpenTIFFFile		10018476	0					
ANR	10018645	Identifier	OpenTIFFFile		10018476	0					
ANR	10018646	ArgumentList			10018476	1					
ANR	10018647	ExpressionStatement	GetTIFFHeader ( )	295:4:9516:9531	10018476	14	True				
ANR	10018648	CallExpression	GetTIFFHeader ( )		10018476	0					
ANR	10018649	Callee	GetTIFFHeader		10018476	0					
ANR	10018650	Identifier	GetTIFFHeader		10018476	0					
ANR	10018651	ArgumentList			10018476	1					
ANR	10018652	ExpressionStatement	SimpleGammaCorrection ( )	296:4:9537:9560	10018476	15	True				
ANR	10018653	CallExpression	SimpleGammaCorrection ( )		10018476	0					
ANR	10018654	Callee	SimpleGammaCorrection		10018476	0					
ANR	10018655	Identifier	SimpleGammaCorrection		10018476	0					
ANR	10018656	ArgumentList			10018476	1					
ANR	10018657	ExpressionStatement	GetVisual ( )	297:4:9566:9577	10018476	16	True				
ANR	10018658	CallExpression	GetVisual ( )		10018476	0					
ANR	10018659	Callee	GetVisual		10018476	0					
ANR	10018660	Identifier	GetVisual		10018476	0					
ANR	10018661	ArgumentList			10018476	1					
ANR	10018662	ExpressionStatement	GetTIFFImage ( )	298:4:9583:9597	10018476	17	True				
ANR	10018663	CallExpression	GetTIFFImage ( )		10018476	0					
ANR	10018664	Callee	GetTIFFImage		10018476	0					
ANR	10018665	Identifier	GetTIFFImage		10018476	0					
ANR	10018666	ArgumentList			10018476	1					
ANR	10018667	ExpressionStatement	"XtSetArg ( args [ 0 ] , XtNvisual , xVisual )"	304:4:9765:9802	10018476	18	True				
ANR	10018668	CallExpression	"XtSetArg ( args [ 0 ] , XtNvisual , xVisual )"		10018476	0					
ANR	10018669	Callee	XtSetArg		10018476	0					
ANR	10018670	Identifier	XtSetArg		10018476	0					
ANR	10018671	ArgumentList	args [ 0 ]		10018476	1					
ANR	10018672	Argument	args [ 0 ]		10018476	0					
ANR	10018673	ArrayIndexing	args [ 0 ]		10018476	0					
ANR	10018674	Identifier	args		10018476	0					
ANR	10018675	PrimaryExpression	0		10018476	1					
ANR	10018676	Argument	XtNvisual		10018476	1					
ANR	10018677	Identifier	XtNvisual		10018476	0					
ANR	10018678	Argument	xVisual		10018476	2					
ANR	10018679	Identifier	xVisual		10018476	0					
ANR	10018680	ExpressionStatement	"XtSetArg ( args [ 1 ] , XtNcolormap , xColormap )"	305:4:9808:9849	10018476	19	True				
ANR	10018681	CallExpression	"XtSetArg ( args [ 1 ] , XtNcolormap , xColormap )"		10018476	0					
ANR	10018682	Callee	XtSetArg		10018476	0					
ANR	10018683	Identifier	XtSetArg		10018476	0					
ANR	10018684	ArgumentList	args [ 1 ]		10018476	1					
ANR	10018685	Argument	args [ 1 ]		10018476	0					
ANR	10018686	ArrayIndexing	args [ 1 ]		10018476	0					
ANR	10018687	Identifier	args		10018476	0					
ANR	10018688	PrimaryExpression	1		10018476	1					
ANR	10018689	Argument	XtNcolormap		10018476	1					
ANR	10018690	Identifier	XtNcolormap		10018476	0					
ANR	10018691	Argument	xColormap		10018476	2					
ANR	10018692	Identifier	xColormap		10018476	0					
ANR	10018693	ExpressionStatement	"XtSetArg ( args [ 2 ] , XtNdepth , xImageDepth == 1 ? DefaultDepth ( xDisplay , xScreen ) : xImageDepth )"	306:4:9855:9956	10018476	20	True				
ANR	10018694	CallExpression	"XtSetArg ( args [ 2 ] , XtNdepth , xImageDepth == 1 ? DefaultDepth ( xDisplay , xScreen ) : xImageDepth )"		10018476	0					
ANR	10018695	Callee	XtSetArg		10018476	0					
ANR	10018696	Identifier	XtSetArg		10018476	0					
ANR	10018697	ArgumentList	args [ 2 ]		10018476	1					
ANR	10018698	Argument	args [ 2 ]		10018476	0					
ANR	10018699	ArrayIndexing	args [ 2 ]		10018476	0					
ANR	10018700	Identifier	args		10018476	0					
ANR	10018701	PrimaryExpression	2		10018476	1					
ANR	10018702	Argument	XtNdepth		10018476	1					
ANR	10018703	Identifier	XtNdepth		10018476	0					
ANR	10018704	Argument	"xImageDepth == 1 ? DefaultDepth ( xDisplay , xScreen ) : xImageDepth"		10018476	2					
ANR	10018705	ConditionalExpression	"xImageDepth == 1 ? DefaultDepth ( xDisplay , xScreen ) : xImageDepth"		10018476	0					
ANR	10018706	Condition	xImageDepth == 1		10018476	0					
ANR	10018707	EqualityExpression	xImageDepth == 1		10018476	0		==			
ANR	10018708	Identifier	xImageDepth		10018476	0					
ANR	10018709	PrimaryExpression	1		10018476	1					
ANR	10018710	CallExpression	"DefaultDepth ( xDisplay , xScreen )"		10018476	1					
ANR	10018711	Callee	DefaultDepth		10018476	0					
ANR	10018712	Identifier	DefaultDepth		10018476	0					
ANR	10018713	ArgumentList	xDisplay		10018476	1					
ANR	10018714	Argument	xDisplay		10018476	0					
ANR	10018715	Identifier	xDisplay		10018476	0					
ANR	10018716	Argument	xScreen		10018476	1					
ANR	10018717	Identifier	xScreen		10018476	0					
ANR	10018718	Identifier	xImageDepth		10018476	2					
ANR	10018719	ExpressionStatement	"XtSetArg ( args [ 3 ] , XtNiconPixmap , XCreateBitmapFromData ( xDisplay , RootWindow ( xDisplay , xScreen ) , xtifficon_bits , xtifficon_width , xtifficon_height ) )"	308:4:9962:10129	10018476	21	True				
ANR	10018720	CallExpression	"XtSetArg ( args [ 3 ] , XtNiconPixmap , XCreateBitmapFromData ( xDisplay , RootWindow ( xDisplay , xScreen ) , xtifficon_bits , xtifficon_width , xtifficon_height ) )"		10018476	0					
ANR	10018721	Callee	XtSetArg		10018476	0					
ANR	10018722	Identifier	XtSetArg		10018476	0					
ANR	10018723	ArgumentList	args [ 3 ]		10018476	1					
ANR	10018724	Argument	args [ 3 ]		10018476	0					
ANR	10018725	ArrayIndexing	args [ 3 ]		10018476	0					
ANR	10018726	Identifier	args		10018476	0					
ANR	10018727	PrimaryExpression	3		10018476	1					
ANR	10018728	Argument	XtNiconPixmap		10018476	1					
ANR	10018729	Identifier	XtNiconPixmap		10018476	0					
ANR	10018730	Argument	"XCreateBitmapFromData ( xDisplay , RootWindow ( xDisplay , xScreen ) , xtifficon_bits , xtifficon_width , xtifficon_height )"		10018476	2					
ANR	10018731	CallExpression	"XCreateBitmapFromData ( xDisplay , RootWindow ( xDisplay , xScreen ) , xtifficon_bits , xtifficon_width , xtifficon_height )"		10018476	0					
ANR	10018732	Callee	XCreateBitmapFromData		10018476	0					
ANR	10018733	Identifier	XCreateBitmapFromData		10018476	0					
ANR	10018734	ArgumentList	xDisplay		10018476	1					
ANR	10018735	Argument	xDisplay		10018476	0					
ANR	10018736	Identifier	xDisplay		10018476	0					
ANR	10018737	Argument	"RootWindow ( xDisplay , xScreen )"		10018476	1					
ANR	10018738	CallExpression	"RootWindow ( xDisplay , xScreen )"		10018476	0					
ANR	10018739	Callee	RootWindow		10018476	0					
ANR	10018740	Identifier	RootWindow		10018476	0					
ANR	10018741	ArgumentList	xDisplay		10018476	1					
ANR	10018742	Argument	xDisplay		10018476	0					
ANR	10018743	Identifier	xDisplay		10018476	0					
ANR	10018744	Argument	xScreen		10018476	1					
ANR	10018745	Identifier	xScreen		10018476	0					
ANR	10018746	Argument	xtifficon_bits		10018476	2					
ANR	10018747	Identifier	xtifficon_bits		10018476	0					
ANR	10018748	Argument	xtifficon_width		10018476	3					
ANR	10018749	Identifier	xtifficon_width		10018476	0					
ANR	10018750	Argument	xtifficon_height		10018476	4					
ANR	10018751	Identifier	xtifficon_height		10018476	0					
ANR	10018752	ExpressionStatement	"XtSetArg ( args [ 4 ] , XtNallowShellResize , True )"	311:4:10135:10179	10018476	22	True				
ANR	10018753	CallExpression	"XtSetArg ( args [ 4 ] , XtNallowShellResize , True )"		10018476	0					
ANR	10018754	Callee	XtSetArg		10018476	0					
ANR	10018755	Identifier	XtSetArg		10018476	0					
ANR	10018756	ArgumentList	args [ 4 ]		10018476	1					
ANR	10018757	Argument	args [ 4 ]		10018476	0					
ANR	10018758	ArrayIndexing	args [ 4 ]		10018476	0					
ANR	10018759	Identifier	args		10018476	0					
ANR	10018760	PrimaryExpression	4		10018476	1					
ANR	10018761	Argument	XtNallowShellResize		10018476	1					
ANR	10018762	Identifier	XtNallowShellResize		10018476	0					
ANR	10018763	Argument	True		10018476	2					
ANR	10018764	Identifier	True		10018476	0					
ANR	10018765	ExpressionStatement	"XtSetValues ( shellWidget , args , 5 )"	312:4:10185:10218	10018476	23	True				
ANR	10018766	CallExpression	"XtSetValues ( shellWidget , args , 5 )"		10018476	0					
ANR	10018767	Callee	XtSetValues		10018476	0					
ANR	10018768	Identifier	XtSetValues		10018476	0					
ANR	10018769	ArgumentList	shellWidget		10018476	1					
ANR	10018770	Argument	shellWidget		10018476	0					
ANR	10018771	Identifier	shellWidget		10018476	0					
ANR	10018772	Argument	args		10018476	1					
ANR	10018773	Identifier	args		10018476	0					
ANR	10018774	Argument	5		10018476	2					
ANR	10018775	PrimaryExpression	5		10018476	0					
ANR	10018776	ExpressionStatement	"formWidget = XtCreateManagedWidget ( ""form"" , formWidgetClass , shellWidget , formArgs , XtNumber ( formArgs ) )"	317:4:10273:10383	10018476	24	True				
ANR	10018777	AssignmentExpression	"formWidget = XtCreateManagedWidget ( ""form"" , formWidgetClass , shellWidget , formArgs , XtNumber ( formArgs ) )"		10018476	0		=			
ANR	10018778	Identifier	formWidget		10018476	0					
ANR	10018779	CallExpression	"XtCreateManagedWidget ( ""form"" , formWidgetClass , shellWidget , formArgs , XtNumber ( formArgs ) )"		10018476	1					
ANR	10018780	Callee	XtCreateManagedWidget		10018476	0					
ANR	10018781	Identifier	XtCreateManagedWidget		10018476	0					
ANR	10018782	ArgumentList	"""form"""		10018476	1					
ANR	10018783	Argument	"""form"""		10018476	0					
ANR	10018784	PrimaryExpression	"""form"""		10018476	0					
ANR	10018785	Argument	formWidgetClass		10018476	1					
ANR	10018786	Identifier	formWidgetClass		10018476	0					
ANR	10018787	Argument	shellWidget		10018476	2					
ANR	10018788	Identifier	shellWidget		10018476	0					
ANR	10018789	Argument	formArgs		10018476	3					
ANR	10018790	Identifier	formArgs		10018476	0					
ANR	10018791	Argument	XtNumber ( formArgs )		10018476	4					
ANR	10018792	CallExpression	XtNumber ( formArgs )		10018476	0					
ANR	10018793	Callee	XtNumber		10018476	0					
ANR	10018794	Identifier	XtNumber		10018476	0					
ANR	10018795	ArgumentList	formArgs		10018476	1					
ANR	10018796	Argument	formArgs		10018476	0					
ANR	10018797	Identifier	formArgs		10018476	0					
ANR	10018798	ExpressionStatement	"widget_list [ 0 ] = listWidget = XtCreateWidget ( ""list"" , listWidgetClass , formWidget , listArgs , XtNumber ( listArgs ) )"	320:8:10394:10517	10018476	25	True				
ANR	10018799	AssignmentExpression	"widget_list [ 0 ] = listWidget = XtCreateWidget ( ""list"" , listWidgetClass , formWidget , listArgs , XtNumber ( listArgs ) )"		10018476	0		=			
ANR	10018800	ArrayIndexing	widget_list [ 0 ]		10018476	0					
ANR	10018801	Identifier	widget_list		10018476	0					
ANR	10018802	PrimaryExpression	0		10018476	1					
ANR	10018803	AssignmentExpression	"listWidget = XtCreateWidget ( ""list"" , listWidgetClass , formWidget , listArgs , XtNumber ( listArgs ) )"		10018476	1		=			
ANR	10018804	Identifier	listWidget		10018476	0					
ANR	10018805	CallExpression	"XtCreateWidget ( ""list"" , listWidgetClass , formWidget , listArgs , XtNumber ( listArgs ) )"		10018476	1					
ANR	10018806	Callee	XtCreateWidget		10018476	0					
ANR	10018807	Identifier	XtCreateWidget		10018476	0					
ANR	10018808	ArgumentList	"""list"""		10018476	1					
ANR	10018809	Argument	"""list"""		10018476	0					
ANR	10018810	PrimaryExpression	"""list"""		10018476	0					
ANR	10018811	Argument	listWidgetClass		10018476	1					
ANR	10018812	Identifier	listWidgetClass		10018476	0					
ANR	10018813	Argument	formWidget		10018476	2					
ANR	10018814	Identifier	formWidget		10018476	0					
ANR	10018815	Argument	listArgs		10018476	3					
ANR	10018816	Identifier	listArgs		10018476	0					
ANR	10018817	Argument	XtNumber ( listArgs )		10018476	4					
ANR	10018818	CallExpression	XtNumber ( listArgs )		10018476	0					
ANR	10018819	Callee	XtNumber		10018476	0					
ANR	10018820	Identifier	XtNumber		10018476	0					
ANR	10018821	ArgumentList	listArgs		10018476	1					
ANR	10018822	Argument	listArgs		10018476	0					
ANR	10018823	Identifier	listArgs		10018476	0					
ANR	10018824	ExpressionStatement	"widget_list [ 1 ] = labelWidget = XtCreateWidget ( ""label"" , labelWidgetClass , formWidget , labelArgs , XtNumber ( labelArgs ) )"	323:8:10528:10656	10018476	26	True				
ANR	10018825	AssignmentExpression	"widget_list [ 1 ] = labelWidget = XtCreateWidget ( ""label"" , labelWidgetClass , formWidget , labelArgs , XtNumber ( labelArgs ) )"		10018476	0		=			
ANR	10018826	ArrayIndexing	widget_list [ 1 ]		10018476	0					
ANR	10018827	Identifier	widget_list		10018476	0					
ANR	10018828	PrimaryExpression	1		10018476	1					
ANR	10018829	AssignmentExpression	"labelWidget = XtCreateWidget ( ""label"" , labelWidgetClass , formWidget , labelArgs , XtNumber ( labelArgs ) )"		10018476	1		=			
ANR	10018830	Identifier	labelWidget		10018476	0					
ANR	10018831	CallExpression	"XtCreateWidget ( ""label"" , labelWidgetClass , formWidget , labelArgs , XtNumber ( labelArgs ) )"		10018476	1					
ANR	10018832	Callee	XtCreateWidget		10018476	0					
ANR	10018833	Identifier	XtCreateWidget		10018476	0					
ANR	10018834	ArgumentList	"""label"""		10018476	1					
ANR	10018835	Argument	"""label"""		10018476	0					
ANR	10018836	PrimaryExpression	"""label"""		10018476	0					
ANR	10018837	Argument	labelWidgetClass		10018476	1					
ANR	10018838	Identifier	labelWidgetClass		10018476	0					
ANR	10018839	Argument	formWidget		10018476	2					
ANR	10018840	Identifier	formWidget		10018476	0					
ANR	10018841	Argument	labelArgs		10018476	3					
ANR	10018842	Identifier	labelArgs		10018476	0					
ANR	10018843	Argument	XtNumber ( labelArgs )		10018476	4					
ANR	10018844	CallExpression	XtNumber ( labelArgs )		10018476	0					
ANR	10018845	Callee	XtNumber		10018476	0					
ANR	10018846	Identifier	XtNumber		10018476	0					
ANR	10018847	ArgumentList	labelArgs		10018476	1					
ANR	10018848	Argument	labelArgs		10018476	0					
ANR	10018849	Identifier	labelArgs		10018476	0					
ANR	10018850	ExpressionStatement	"widget_list [ 2 ] = imageWidget = XtCreateWidget ( ""image"" , widgetClass , formWidget , imageArgs , XtNumber ( imageArgs ) )"	326:8:10667:10790	10018476	27	True				
ANR	10018851	AssignmentExpression	"widget_list [ 2 ] = imageWidget = XtCreateWidget ( ""image"" , widgetClass , formWidget , imageArgs , XtNumber ( imageArgs ) )"		10018476	0		=			
ANR	10018852	ArrayIndexing	widget_list [ 2 ]		10018476	0					
ANR	10018853	Identifier	widget_list		10018476	0					
ANR	10018854	PrimaryExpression	2		10018476	1					
ANR	10018855	AssignmentExpression	"imageWidget = XtCreateWidget ( ""image"" , widgetClass , formWidget , imageArgs , XtNumber ( imageArgs ) )"		10018476	1		=			
ANR	10018856	Identifier	imageWidget		10018476	0					
ANR	10018857	CallExpression	"XtCreateWidget ( ""image"" , widgetClass , formWidget , imageArgs , XtNumber ( imageArgs ) )"		10018476	1					
ANR	10018858	Callee	XtCreateWidget		10018476	0					
ANR	10018859	Identifier	XtCreateWidget		10018476	0					
ANR	10018860	ArgumentList	"""image"""		10018476	1					
ANR	10018861	Argument	"""image"""		10018476	0					
ANR	10018862	PrimaryExpression	"""image"""		10018476	0					
ANR	10018863	Argument	widgetClass		10018476	1					
ANR	10018864	Identifier	widgetClass		10018476	0					
ANR	10018865	Argument	formWidget		10018476	2					
ANR	10018866	Identifier	formWidget		10018476	0					
ANR	10018867	Argument	imageArgs		10018476	3					
ANR	10018868	Identifier	imageArgs		10018476	0					
ANR	10018869	Argument	XtNumber ( imageArgs )		10018476	4					
ANR	10018870	CallExpression	XtNumber ( imageArgs )		10018476	0					
ANR	10018871	Callee	XtNumber		10018476	0					
ANR	10018872	Identifier	XtNumber		10018476	0					
ANR	10018873	ArgumentList	imageArgs		10018476	1					
ANR	10018874	Argument	imageArgs		10018476	0					
ANR	10018875	Identifier	imageArgs		10018476	0					
ANR	10018876	ExpressionStatement	"XtManageChildren ( widget_list , XtNumber ( widget_list ) )"	329:4:10797:10849	10018476	28	True				
ANR	10018877	CallExpression	"XtManageChildren ( widget_list , XtNumber ( widget_list ) )"		10018476	0					
ANR	10018878	Callee	XtManageChildren		10018476	0					
ANR	10018879	Identifier	XtManageChildren		10018476	0					
ANR	10018880	ArgumentList	widget_list		10018476	1					
ANR	10018881	Argument	widget_list		10018476	0					
ANR	10018882	Identifier	widget_list		10018476	0					
ANR	10018883	Argument	XtNumber ( widget_list )		10018476	1					
ANR	10018884	CallExpression	XtNumber ( widget_list )		10018476	0					
ANR	10018885	Callee	XtNumber		10018476	0					
ANR	10018886	Identifier	XtNumber		10018476	0					
ANR	10018887	ArgumentList	widget_list		10018476	1					
ANR	10018888	Argument	widget_list		10018476	0					
ANR	10018889	Identifier	widget_list		10018476	0					
ANR	10018890	IfStatement	if ( tfImageWidth >= appData . viewportWidth )		10018476	29					
ANR	10018891	Condition	tfImageWidth >= appData . viewportWidth	334:8:10944:10980	10018476	0	True				
ANR	10018892	RelationalExpression	tfImageWidth >= appData . viewportWidth		10018476	0		>=			
ANR	10018893	Identifier	tfImageWidth		10018476	0					
ANR	10018894	MemberAccess	appData . viewportWidth		10018476	1					
ANR	10018895	Identifier	appData		10018476	0					
ANR	10018896	Identifier	viewportWidth		10018476	1					
ANR	10018897	CompoundStatement		70:47:2237:2237	10018476	1					
ANR	10018898	ExpressionStatement	"XtSetArg ( args [ 0 ] , XtNwidth , appData . viewportWidth )"	335:8:10993:11043	10018476	0	True				
ANR	10018899	CallExpression	"XtSetArg ( args [ 0 ] , XtNwidth , appData . viewportWidth )"		10018476	0					
ANR	10018900	Callee	XtSetArg		10018476	0					
ANR	10018901	Identifier	XtSetArg		10018476	0					
ANR	10018902	ArgumentList	args [ 0 ]		10018476	1					
ANR	10018903	Argument	args [ 0 ]		10018476	0					
ANR	10018904	ArrayIndexing	args [ 0 ]		10018476	0					
ANR	10018905	Identifier	args		10018476	0					
ANR	10018906	PrimaryExpression	0		10018476	1					
ANR	10018907	Argument	XtNwidth		10018476	1					
ANR	10018908	Identifier	XtNwidth		10018476	0					
ANR	10018909	Argument	appData . viewportWidth		10018476	2					
ANR	10018910	MemberAccess	appData . viewportWidth		10018476	0					
ANR	10018911	Identifier	appData		10018476	0					
ANR	10018912	Identifier	viewportWidth		10018476	1					
ANR	10018913	ExpressionStatement	"XtSetValues ( shellWidget , args , 1 )"	336:8:11053:11086	10018476	1	True				
ANR	10018914	CallExpression	"XtSetValues ( shellWidget , args , 1 )"		10018476	0					
ANR	10018915	Callee	XtSetValues		10018476	0					
ANR	10018916	Identifier	XtSetValues		10018476	0					
ANR	10018917	ArgumentList	shellWidget		10018476	1					
ANR	10018918	Argument	shellWidget		10018476	0					
ANR	10018919	Identifier	shellWidget		10018476	0					
ANR	10018920	Argument	args		10018476	1					
ANR	10018921	Identifier	args		10018476	0					
ANR	10018922	Argument	1		10018476	2					
ANR	10018923	PrimaryExpression	1		10018476	0					
ANR	10018924	IfStatement	if ( tfImageHeight >= appData . viewportHeight )		10018476	30					
ANR	10018925	Condition	tfImageHeight >= appData . viewportHeight	338:8:11102:11140	10018476	0	True				
ANR	10018926	RelationalExpression	tfImageHeight >= appData . viewportHeight		10018476	0		>=			
ANR	10018927	Identifier	tfImageHeight		10018476	0					
ANR	10018928	MemberAccess	appData . viewportHeight		10018476	1					
ANR	10018929	Identifier	appData		10018476	0					
ANR	10018930	Identifier	viewportHeight		10018476	1					
ANR	10018931	CompoundStatement		74:49:2397:2397	10018476	1					
ANR	10018932	ExpressionStatement	"XtSetArg ( args [ 0 ] , XtNheight , appData . viewportHeight )"	339:8:11153:11205	10018476	0	True				
ANR	10018933	CallExpression	"XtSetArg ( args [ 0 ] , XtNheight , appData . viewportHeight )"		10018476	0					
ANR	10018934	Callee	XtSetArg		10018476	0					
ANR	10018935	Identifier	XtSetArg		10018476	0					
ANR	10018936	ArgumentList	args [ 0 ]		10018476	1					
ANR	10018937	Argument	args [ 0 ]		10018476	0					
ANR	10018938	ArrayIndexing	args [ 0 ]		10018476	0					
ANR	10018939	Identifier	args		10018476	0					
ANR	10018940	PrimaryExpression	0		10018476	1					
ANR	10018941	Argument	XtNheight		10018476	1					
ANR	10018942	Identifier	XtNheight		10018476	0					
ANR	10018943	Argument	appData . viewportHeight		10018476	2					
ANR	10018944	MemberAccess	appData . viewportHeight		10018476	0					
ANR	10018945	Identifier	appData		10018476	0					
ANR	10018946	Identifier	viewportHeight		10018476	1					
ANR	10018947	ExpressionStatement	"XtSetValues ( shellWidget , args , 1 )"	340:8:11215:11248	10018476	1	True				
ANR	10018948	CallExpression	"XtSetValues ( shellWidget , args , 1 )"		10018476	0					
ANR	10018949	Callee	XtSetValues		10018476	0					
ANR	10018950	Identifier	XtSetValues		10018476	0					
ANR	10018951	ArgumentList	shellWidget		10018476	1					
ANR	10018952	Argument	shellWidget		10018476	0					
ANR	10018953	Identifier	shellWidget		10018476	0					
ANR	10018954	Argument	args		10018476	1					
ANR	10018955	Identifier	args		10018476	0					
ANR	10018956	Argument	1		10018476	2					
ANR	10018957	PrimaryExpression	1		10018476	0					
ANR	10018958	ExpressionStatement	"XtSetArg ( args [ 0 ] , XtNwidth , tfImageWidth )"	343:4:11261:11302	10018476	31	True				
ANR	10018959	CallExpression	"XtSetArg ( args [ 0 ] , XtNwidth , tfImageWidth )"		10018476	0					
ANR	10018960	Callee	XtSetArg		10018476	0					
ANR	10018961	Identifier	XtSetArg		10018476	0					
ANR	10018962	ArgumentList	args [ 0 ]		10018476	1					
ANR	10018963	Argument	args [ 0 ]		10018476	0					
ANR	10018964	ArrayIndexing	args [ 0 ]		10018476	0					
ANR	10018965	Identifier	args		10018476	0					
ANR	10018966	PrimaryExpression	0		10018476	1					
ANR	10018967	Argument	XtNwidth		10018476	1					
ANR	10018968	Identifier	XtNwidth		10018476	0					
ANR	10018969	Argument	tfImageWidth		10018476	2					
ANR	10018970	Identifier	tfImageWidth		10018476	0					
ANR	10018971	ExpressionStatement	"XtSetArg ( args [ 1 ] , XtNheight , tfImageHeight )"	344:4:11308:11351	10018476	32	True				
ANR	10018972	CallExpression	"XtSetArg ( args [ 1 ] , XtNheight , tfImageHeight )"		10018476	0					
ANR	10018973	Callee	XtSetArg		10018476	0					
ANR	10018974	Identifier	XtSetArg		10018476	0					
ANR	10018975	ArgumentList	args [ 1 ]		10018476	1					
ANR	10018976	Argument	args [ 1 ]		10018476	0					
ANR	10018977	ArrayIndexing	args [ 1 ]		10018476	0					
ANR	10018978	Identifier	args		10018476	0					
ANR	10018979	PrimaryExpression	1		10018476	1					
ANR	10018980	Argument	XtNheight		10018476	1					
ANR	10018981	Identifier	XtNheight		10018476	0					
ANR	10018982	Argument	tfImageHeight		10018476	2					
ANR	10018983	Identifier	tfImageHeight		10018476	0					
ANR	10018984	ExpressionStatement	"XtSetValues ( imageWidget , args , 2 )"	345:4:11357:11390	10018476	33	True				
ANR	10018985	CallExpression	"XtSetValues ( imageWidget , args , 2 )"		10018476	0					
ANR	10018986	Callee	XtSetValues		10018476	0					
ANR	10018987	Identifier	XtSetValues		10018476	0					
ANR	10018988	ArgumentList	imageWidget		10018476	1					
ANR	10018989	Argument	imageWidget		10018476	0					
ANR	10018990	Identifier	imageWidget		10018476	0					
ANR	10018991	Argument	args		10018476	1					
ANR	10018992	Identifier	args		10018476	0					
ANR	10018993	Argument	2		10018476	2					
ANR	10018994	PrimaryExpression	2		10018476	0					
ANR	10018995	ExpressionStatement	"XtSetArg ( args [ 0 ] , XtNfromVert , listWidget )"	350:4:11490:11532	10018476	34	True				
ANR	10018996	CallExpression	"XtSetArg ( args [ 0 ] , XtNfromVert , listWidget )"		10018476	0					
ANR	10018997	Callee	XtSetArg		10018476	0					
ANR	10018998	Identifier	XtSetArg		10018476	0					
ANR	10018999	ArgumentList	args [ 0 ]		10018476	1					
ANR	10019000	Argument	args [ 0 ]		10018476	0					
ANR	10019001	ArrayIndexing	args [ 0 ]		10018476	0					
ANR	10019002	Identifier	args		10018476	0					
ANR	10019003	PrimaryExpression	0		10018476	1					
ANR	10019004	Argument	XtNfromVert		10018476	1					
ANR	10019005	Identifier	XtNfromVert		10018476	0					
ANR	10019006	Argument	listWidget		10018476	2					
ANR	10019007	Identifier	listWidget		10018476	0					
ANR	10019008	ExpressionStatement	"XtSetValues ( imageWidget , args , 1 )"	351:4:11538:11571	10018476	35	True				
ANR	10019009	CallExpression	"XtSetValues ( imageWidget , args , 1 )"		10018476	0					
ANR	10019010	Callee	XtSetValues		10018476	0					
ANR	10019011	Identifier	XtSetValues		10018476	0					
ANR	10019012	ArgumentList	imageWidget		10018476	1					
ANR	10019013	Argument	imageWidget		10018476	0					
ANR	10019014	Identifier	imageWidget		10018476	0					
ANR	10019015	Argument	args		10018476	1					
ANR	10019016	Identifier	args		10018476	0					
ANR	10019017	Argument	1		10018476	2					
ANR	10019018	PrimaryExpression	1		10018476	0					
ANR	10019019	ExpressionStatement	"XtSetArg ( args [ 0 ] , XtNfromHoriz , listWidget )"	352:4:11577:11620	10018476	36	True				
ANR	10019020	CallExpression	"XtSetArg ( args [ 0 ] , XtNfromHoriz , listWidget )"		10018476	0					
ANR	10019021	Callee	XtSetArg		10018476	0					
ANR	10019022	Identifier	XtSetArg		10018476	0					
ANR	10019023	ArgumentList	args [ 0 ]		10018476	1					
ANR	10019024	Argument	args [ 0 ]		10018476	0					
ANR	10019025	ArrayIndexing	args [ 0 ]		10018476	0					
ANR	10019026	Identifier	args		10018476	0					
ANR	10019027	PrimaryExpression	0		10018476	1					
ANR	10019028	Argument	XtNfromHoriz		10018476	1					
ANR	10019029	Identifier	XtNfromHoriz		10018476	0					
ANR	10019030	Argument	listWidget		10018476	2					
ANR	10019031	Identifier	listWidget		10018476	0					
ANR	10019032	ExpressionStatement	"XtSetValues ( labelWidget , args , 1 )"	353:4:11626:11659	10018476	37	True				
ANR	10019033	CallExpression	"XtSetValues ( labelWidget , args , 1 )"		10018476	0					
ANR	10019034	Callee	XtSetValues		10018476	0					
ANR	10019035	Identifier	XtSetValues		10018476	0					
ANR	10019036	ArgumentList	labelWidget		10018476	1					
ANR	10019037	Argument	labelWidget		10018476	0					
ANR	10019038	Identifier	labelWidget		10018476	0					
ANR	10019039	Argument	args		10018476	1					
ANR	10019040	Identifier	args		10018476	0					
ANR	10019041	Argument	1		10018476	2					
ANR	10019042	PrimaryExpression	1		10018476	0					
ANR	10019043	ExpressionStatement	SetNameLabel ( )	355:4:11666:11680	10018476	38	True				
ANR	10019044	CallExpression	SetNameLabel ( )		10018476	0					
ANR	10019045	Callee	SetNameLabel		10018476	0					
ANR	10019046	Identifier	SetNameLabel		10018476	0					
ANR	10019047	ArgumentList			10018476	1					
ANR	10019048	ExpressionStatement	"XtAddCallback ( listWidget , XtNcallback , ( XtCallbackProc ) SelectProc , ( XtPointer ) NULL )"	357:4:11687:11780	10018476	39	True				
ANR	10019049	CallExpression	"XtAddCallback ( listWidget , XtNcallback , ( XtCallbackProc ) SelectProc , ( XtPointer ) NULL )"		10018476	0					
ANR	10019050	Callee	XtAddCallback		10018476	0					
ANR	10019051	Identifier	XtAddCallback		10018476	0					
ANR	10019052	ArgumentList	listWidget		10018476	1					
ANR	10019053	Argument	listWidget		10018476	0					
ANR	10019054	Identifier	listWidget		10018476	0					
ANR	10019055	Argument	XtNcallback		10018476	1					
ANR	10019056	Identifier	XtNcallback		10018476	0					
ANR	10019057	Argument	( XtCallbackProc ) SelectProc		10018476	2					
ANR	10019058	CastExpression	( XtCallbackProc ) SelectProc		10018476	0					
ANR	10019059	CastTarget	XtCallbackProc		10018476	0					
ANR	10019060	Identifier	SelectProc		10018476	1					
ANR	10019061	Argument	( XtPointer ) NULL		10018476	3					
ANR	10019062	CastExpression	( XtPointer ) NULL		10018476	0					
ANR	10019063	CastTarget	XtPointer		10018476	0					
ANR	10019064	Identifier	NULL		10018476	1					
ANR	10019065	ExpressionStatement	"XtAddActions ( actionsTable , XtNumber ( actionsTable ) )"	360:4:11787:11837	10018476	40	True				
ANR	10019066	CallExpression	"XtAddActions ( actionsTable , XtNumber ( actionsTable ) )"		10018476	0					
ANR	10019067	Callee	XtAddActions		10018476	0					
ANR	10019068	Identifier	XtAddActions		10018476	0					
ANR	10019069	ArgumentList	actionsTable		10018476	1					
ANR	10019070	Argument	actionsTable		10018476	0					
ANR	10019071	Identifier	actionsTable		10018476	0					
ANR	10019072	Argument	XtNumber ( actionsTable )		10018476	1					
ANR	10019073	CallExpression	XtNumber ( actionsTable )		10018476	0					
ANR	10019074	Callee	XtNumber		10018476	0					
ANR	10019075	Identifier	XtNumber		10018476	0					
ANR	10019076	ArgumentList	actionsTable		10018476	1					
ANR	10019077	Argument	actionsTable		10018476	0					
ANR	10019078	Identifier	actionsTable		10018476	0					
ANR	10019079	ExpressionStatement	"XtSetArg ( args [ 0 ] , XtNtranslations , XtParseTranslationTable ( translationsTable ) )"	361:4:11843:11929	10018476	41	True				
ANR	10019080	CallExpression	"XtSetArg ( args [ 0 ] , XtNtranslations , XtParseTranslationTable ( translationsTable ) )"		10018476	0					
ANR	10019081	Callee	XtSetArg		10018476	0					
ANR	10019082	Identifier	XtSetArg		10018476	0					
ANR	10019083	ArgumentList	args [ 0 ]		10018476	1					
ANR	10019084	Argument	args [ 0 ]		10018476	0					
ANR	10019085	ArrayIndexing	args [ 0 ]		10018476	0					
ANR	10019086	Identifier	args		10018476	0					
ANR	10019087	PrimaryExpression	0		10018476	1					
ANR	10019088	Argument	XtNtranslations		10018476	1					
ANR	10019089	Identifier	XtNtranslations		10018476	0					
ANR	10019090	Argument	XtParseTranslationTable ( translationsTable )		10018476	2					
ANR	10019091	CallExpression	XtParseTranslationTable ( translationsTable )		10018476	0					
ANR	10019092	Callee	XtParseTranslationTable		10018476	0					
ANR	10019093	Identifier	XtParseTranslationTable		10018476	0					
ANR	10019094	ArgumentList	translationsTable		10018476	1					
ANR	10019095	Argument	translationsTable		10018476	0					
ANR	10019096	Identifier	translationsTable		10018476	0					
ANR	10019097	ExpressionStatement	"XtSetValues ( formWidget , & args [ 0 ] , 1 )"	363:4:11935:11971	10018476	42	True				
ANR	10019098	CallExpression	"XtSetValues ( formWidget , & args [ 0 ] , 1 )"		10018476	0					
ANR	10019099	Callee	XtSetValues		10018476	0					
ANR	10019100	Identifier	XtSetValues		10018476	0					
ANR	10019101	ArgumentList	formWidget		10018476	1					
ANR	10019102	Argument	formWidget		10018476	0					
ANR	10019103	Identifier	formWidget		10018476	0					
ANR	10019104	Argument	& args [ 0 ]		10018476	1					
ANR	10019105	UnaryOperationExpression	& args [ 0 ]		10018476	0					
ANR	10019106	UnaryOperator	&		10018476	0					
ANR	10019107	ArrayIndexing	args [ 0 ]		10018476	1					
ANR	10019108	Identifier	args		10018476	0					
ANR	10019109	PrimaryExpression	0		10018476	1					
ANR	10019110	Argument	1		10018476	2					
ANR	10019111	PrimaryExpression	1		10018476	0					
ANR	10019112	ExpressionStatement	"XtSetValues ( imageWidget , & args [ 0 ] , 1 )"	364:4:11977:12014	10018476	43	True				
ANR	10019113	CallExpression	"XtSetValues ( imageWidget , & args [ 0 ] , 1 )"		10018476	0					
ANR	10019114	Callee	XtSetValues		10018476	0					
ANR	10019115	Identifier	XtSetValues		10018476	0					
ANR	10019116	ArgumentList	imageWidget		10018476	1					
ANR	10019117	Argument	imageWidget		10018476	0					
ANR	10019118	Identifier	imageWidget		10018476	0					
ANR	10019119	Argument	& args [ 0 ]		10018476	1					
ANR	10019120	UnaryOperationExpression	& args [ 0 ]		10018476	0					
ANR	10019121	UnaryOperator	&		10018476	0					
ANR	10019122	ArrayIndexing	args [ 0 ]		10018476	1					
ANR	10019123	Identifier	args		10018476	0					
ANR	10019124	PrimaryExpression	0		10018476	1					
ANR	10019125	Argument	1		10018476	2					
ANR	10019126	PrimaryExpression	1		10018476	0					
ANR	10019127	ExpressionStatement	"XtAddEventHandler ( imageWidget , ExposureMask | ButtonPressMask | ButtonReleaseMask | Button1MotionMask | KeyPressMask , False , EventProc , NULL )"	370:4:12133:12290	10018476	44	True				
ANR	10019128	CallExpression	"XtAddEventHandler ( imageWidget , ExposureMask | ButtonPressMask | ButtonReleaseMask | Button1MotionMask | KeyPressMask , False , EventProc , NULL )"		10018476	0					
ANR	10019129	Callee	XtAddEventHandler		10018476	0					
ANR	10019130	Identifier	XtAddEventHandler		10018476	0					
ANR	10019131	ArgumentList	imageWidget		10018476	1					
ANR	10019132	Argument	imageWidget		10018476	0					
ANR	10019133	Identifier	imageWidget		10018476	0					
ANR	10019134	Argument	ExposureMask | ButtonPressMask | ButtonReleaseMask | Button1MotionMask | KeyPressMask		10018476	1					
ANR	10019135	InclusiveOrExpression	ExposureMask | ButtonPressMask | ButtonReleaseMask | Button1MotionMask | KeyPressMask		10018476	0		|			
ANR	10019136	Identifier	ExposureMask		10018476	0					
ANR	10019137	InclusiveOrExpression	ButtonPressMask | ButtonReleaseMask | Button1MotionMask | KeyPressMask		10018476	1		|			
ANR	10019138	Identifier	ButtonPressMask		10018476	0					
ANR	10019139	InclusiveOrExpression	ButtonReleaseMask | Button1MotionMask | KeyPressMask		10018476	1		|			
ANR	10019140	Identifier	ButtonReleaseMask		10018476	0					
ANR	10019141	InclusiveOrExpression	Button1MotionMask | KeyPressMask		10018476	1		|			
ANR	10019142	Identifier	Button1MotionMask		10018476	0					
ANR	10019143	Identifier	KeyPressMask		10018476	1					
ANR	10019144	Argument	False		10018476	2					
ANR	10019145	Identifier	False		10018476	0					
ANR	10019146	Argument	EventProc		10018476	3					
ANR	10019147	Identifier	EventProc		10018476	0					
ANR	10019148	Argument	NULL		10018476	4					
ANR	10019149	Identifier	NULL		10018476	0					
ANR	10019150	ExpressionStatement	XtRealizeWidget ( shellWidget )	374:4:12297:12325	10018476	45	True				
ANR	10019151	CallExpression	XtRealizeWidget ( shellWidget )		10018476	0					
ANR	10019152	Callee	XtRealizeWidget		10018476	0					
ANR	10019153	Identifier	XtRealizeWidget		10018476	0					
ANR	10019154	ArgumentList	shellWidget		10018476	1					
ANR	10019155	Argument	shellWidget		10018476	0					
ANR	10019156	Identifier	shellWidget		10018476	0					
ANR	10019157	ExpressionStatement	"window_attributes . cursor = XCreateFontCursor ( xDisplay , XC_fleur )"	376:4:12332:12396	10018476	46	True				
ANR	10019158	AssignmentExpression	"window_attributes . cursor = XCreateFontCursor ( xDisplay , XC_fleur )"		10018476	0		=			
ANR	10019159	MemberAccess	window_attributes . cursor		10018476	0					
ANR	10019160	Identifier	window_attributes		10018476	0					
ANR	10019161	Identifier	cursor		10018476	1					
ANR	10019162	CallExpression	"XCreateFontCursor ( xDisplay , XC_fleur )"		10018476	1					
ANR	10019163	Callee	XCreateFontCursor		10018476	0					
ANR	10019164	Identifier	XCreateFontCursor		10018476	0					
ANR	10019165	ArgumentList	xDisplay		10018476	1					
ANR	10019166	Argument	xDisplay		10018476	0					
ANR	10019167	Identifier	xDisplay		10018476	0					
ANR	10019168	Argument	XC_fleur		10018476	1					
ANR	10019169	Identifier	XC_fleur		10018476	0					
ANR	10019170	ExpressionStatement	"XChangeWindowAttributes ( xDisplay , XtWindow ( imageWidget ) , CWCursor , & window_attributes )"	377:4:12402:12496	10018476	47	True				
ANR	10019171	CallExpression	"XChangeWindowAttributes ( xDisplay , XtWindow ( imageWidget ) , CWCursor , & window_attributes )"		10018476	0					
ANR	10019172	Callee	XChangeWindowAttributes		10018476	0					
ANR	10019173	Identifier	XChangeWindowAttributes		10018476	0					
ANR	10019174	ArgumentList	xDisplay		10018476	1					
ANR	10019175	Argument	xDisplay		10018476	0					
ANR	10019176	Identifier	xDisplay		10018476	0					
ANR	10019177	Argument	XtWindow ( imageWidget )		10018476	1					
ANR	10019178	CallExpression	XtWindow ( imageWidget )		10018476	0					
ANR	10019179	Callee	XtWindow		10018476	0					
ANR	10019180	Identifier	XtWindow		10018476	0					
ANR	10019181	ArgumentList	imageWidget		10018476	1					
ANR	10019182	Argument	imageWidget		10018476	0					
ANR	10019183	Identifier	imageWidget		10018476	0					
ANR	10019184	Argument	CWCursor		10018476	2					
ANR	10019185	Identifier	CWCursor		10018476	0					
ANR	10019186	Argument	& window_attributes		10018476	3					
ANR	10019187	UnaryOperationExpression	& window_attributes		10018476	0					
ANR	10019188	UnaryOperator	&		10018476	0					
ANR	10019189	Identifier	window_attributes		10018476	1					
ANR	10019190	ExpressionStatement	CreateXImage ( )	380:4:12503:12517	10018476	48	True				
ANR	10019191	CallExpression	CreateXImage ( )		10018476	0					
ANR	10019192	Callee	CreateXImage		10018476	0					
ANR	10019193	Identifier	CreateXImage		10018476	0					
ANR	10019194	ArgumentList			10018476	1					
ANR	10019195	ExpressionStatement	XtMainLoop ( )	382:4:12524:12536	10018476	49	True				
ANR	10019196	CallExpression	XtMainLoop ( )		10018476	0					
ANR	10019197	Callee	XtMainLoop		10018476	0					
ANR	10019198	Identifier	XtMainLoop		10018476	0					
ANR	10019199	ArgumentList			10018476	1					
ANR	10019200	ReturnStatement	return 0 ;	384:4:12543:12551	10018476	50	True				
ANR	10019201	PrimaryExpression	0		10018476	0					
ANR	10019202	ReturnType	int		10018476	1					
ANR	10019203	Identifier	main		10018476	2					
ANR	10019204	ParameterList	"int argc , char * * argv"		10018476	3					
ANR	10019205	Parameter	int argc	264:5:8722:8729	10018476	0	True				
ANR	10019206	ParameterType	int		10018476	0					
ANR	10019207	Identifier	argc		10018476	1					
ANR	10019208	Parameter	char * * argv	264:15:8732:8742	10018476	1	True				
ANR	10019209	ParameterType	char * *		10018476	0					
ANR	10019210	Identifier	argv		10018476	1					
ANR	10019211	CFGEntryNode	ENTRY		10018476		True				
ANR	10019212	CFGExitNode	EXIT		10018476		True				
ANR	10019213	Symbol	formWidget		10018476						
ANR	10019214	Symbol	shellOptions		10018476						
ANR	10019215	Symbol	& appData		10018476						
ANR	10019216	Symbol	fileName		10018476						
ANR	10019217	Symbol	stdout		10018476						
ANR	10019218	Symbol	XtWindow		10018476						
ANR	10019219	Symbol	XtNcolormap		10018476						
ANR	10019220	Symbol	XtNiconPixmap		10018476						
ANR	10019221	Symbol	True		10018476						
ANR	10019222	Symbol	* argv		10018476						
ANR	10019223	Symbol	shellWidget		10018476						
ANR	10019224	Symbol	RootWindow		10018476						
ANR	10019225	Symbol	False		10018476						
ANR	10019226	Symbol	tfImageHeight		10018476						
ANR	10019227	Symbol	XtNcallback		10018476						
ANR	10019228	Symbol	labelWidgetClass		10018476						
ANR	10019229	Symbol	SelectProc		10018476						
ANR	10019230	Symbol	* args		10018476						
ANR	10019231	Symbol	clientResources		10018476						
ANR	10019232	Symbol	xtifficon_bits		10018476						
ANR	10019233	Symbol	XTiffErrorHandler		10018476						
ANR	10019234	Symbol	window_attributes . cursor		10018476						
ANR	10019235	Symbol	window_attributes		10018476						
ANR	10019236	Symbol	XtNfromVert		10018476						
ANR	10019237	Symbol	NULL		10018476						
ANR	10019238	Symbol	XtInitialize		10018476						
ANR	10019239	Symbol	DefaultDepth		10018476						
ANR	10019240	Symbol	imageWidget		10018476						
ANR	10019241	Symbol	ButtonPressMask		10018476						
ANR	10019242	Symbol	& window_attributes		10018476						
ANR	10019243	Symbol	xtifficon_height		10018476						
ANR	10019244	Symbol	XtNallowShellResize		10018476						
ANR	10019245	Symbol	stderr		10018476						
ANR	10019246	Symbol	listWidgetClass		10018476						
ANR	10019247	Symbol	xScreen		10018476						
ANR	10019248	Symbol	XtNheight		10018476						
ANR	10019249	Symbol	listArgs		10018476						
ANR	10019250	Symbol	labelWidget		10018476						
ANR	10019251	Symbol	XtCreateWidget		10018476						
ANR	10019252	Symbol	EventProc		10018476						
ANR	10019253	Symbol	xDisplay		10018476						
ANR	10019254	Symbol	xColormap		10018476						
ANR	10019255	Symbol	XCreateBitmapFromData		10018476						
ANR	10019256	Symbol	ButtonReleaseMask		10018476						
ANR	10019257	Symbol	xImageDepth		10018476						
ANR	10019258	Symbol	tfImageWidth		10018476						
ANR	10019259	Symbol	XtNwidth		10018476						
ANR	10019260	Symbol	imageArgs		10018476						
ANR	10019261	Symbol	translationsTable		10018476						
ANR	10019262	Symbol	ExposureMask		10018476						
ANR	10019263	Symbol	argv		10018476						
ANR	10019264	Symbol	CWCursor		10018476						
ANR	10019265	Symbol	widget_list		10018476						
ANR	10019266	Symbol	appData		10018476						
ANR	10019267	Symbol	& argc		10018476						
ANR	10019268	Symbol	labelArgs		10018476						
ANR	10019269	Symbol	appData . viewportHeight		10018476						
ANR	10019270	Symbol	XtCreateManagedWidget		10018476						
ANR	10019271	Symbol	xtifficon_width		10018476						
ANR	10019272	Symbol	XtNdepth		10018476						
ANR	10019273	Symbol	DefaultScreen		10018476						
ANR	10019274	Symbol	XtNtranslations		10018476						
ANR	10019275	Symbol	formWidgetClass		10018476						
ANR	10019276	Symbol	XtNfromHoriz		10018476						
ANR	10019277	Symbol	appData . viewportWidth		10018476						
ANR	10019278	Symbol	XtParseTranslationTable		10018476						
ANR	10019279	Symbol	argc		10018476						
ANR	10019280	Symbol	KeyPressMask		10018476						
ANR	10019281	Symbol	Button1MotionMask		10018476						
ANR	10019282	Symbol	actionsTable		10018476						
ANR	10019283	Symbol	* widget_list		10018476						
ANR	10019284	Symbol	XtDisplay		10018476						
ANR	10019285	Symbol	XCreateFontCursor		10018476						
ANR	10019286	Symbol	args		10018476						
ANR	10019287	Symbol	listWidget		10018476						
ANR	10019288	Symbol	xVisual		10018476						
ANR	10019289	Symbol	formArgs		10018476						
ANR	10019290	Symbol	appData . verbose		10018476						
ANR	10019291	Symbol	widgetClass		10018476						
ANR	10019292	Symbol	XtNvisual		10018476						
ANR	10019293	Symbol	XtNumber		10018476						
ANR	10019294	Symbol	XC_fleur		10018476						
ANR	10019295	Symbol	appData . help		10018476						
ANR	10019296	Function	OpenTIFFFile	387:0:12556:12871							
ANR	10019297	FunctionDef	OpenTIFFFile ()		10019296	0					
ANR	10019298	CompoundStatement		389:0:12576:12871	10019296	0					
ANR	10019299	IfStatement	if ( tfFile != NULL )		10019296	0					
ANR	10019300	Condition	tfFile != NULL	390:8:12586:12599	10019296	0	True				
ANR	10019301	EqualityExpression	tfFile != NULL		10019296	0		!=			
ANR	10019302	Identifier	tfFile		10019296	0					
ANR	10019303	Identifier	NULL		10019296	1					
ANR	10019304	ExpressionStatement	TIFFClose ( tfFile )	391:8:12610:12627	10019296	1	True				
ANR	10019305	CallExpression	TIFFClose ( tfFile )		10019296	0					
ANR	10019306	Callee	TIFFClose		10019296	0					
ANR	10019307	Identifier	TIFFClose		10019296	0					
ANR	10019308	ArgumentList	tfFile		10019296	1					
ANR	10019309	Argument	tfFile		10019296	0					
ANR	10019310	Identifier	tfFile		10019296	0					
ANR	10019311	IfStatement	"if ( ( tfFile = TIFFOpen ( fileName , ""r"" ) ) == NULL )"		10019296	1					
ANR	10019312	Condition	"( tfFile = TIFFOpen ( fileName , ""r"" ) ) == NULL"	393:8:12638:12679	10019296	0	True				
ANR	10019313	EqualityExpression	"( tfFile = TIFFOpen ( fileName , ""r"" ) ) == NULL"		10019296	0		==			
ANR	10019314	AssignmentExpression	"tfFile = TIFFOpen ( fileName , ""r"" )"		10019296	0		=			
ANR	10019315	Identifier	tfFile		10019296	0					
ANR	10019316	CallExpression	"TIFFOpen ( fileName , ""r"" )"		10019296	1					
ANR	10019317	Callee	TIFFOpen		10019296	0					
ANR	10019318	Identifier	TIFFOpen		10019296	0					
ANR	10019319	ArgumentList	fileName		10019296	1					
ANR	10019320	Argument	fileName		10019296	0					
ANR	10019321	Identifier	fileName		10019296	0					
ANR	10019322	Argument	"""r"""		10019296	1					
ANR	10019323	PrimaryExpression	"""r"""		10019296	0					
ANR	10019324	Identifier	NULL		10019296	1					
ANR	10019325	CompoundStatement		5:52:105:105	10019296	1					
ANR	10019326	ExpressionStatement	"fprintf ( appData . verbose ? stderr : stdout , ""xtiff: can't open %s as a TIFF file\\n"" , fileName )"	394:1:12685:12783	10019296	0	True				
ANR	10019327	CallExpression	"fprintf ( appData . verbose ? stderr : stdout , ""xtiff: can't open %s as a TIFF file\\n"" , fileName )"		10019296	0					
ANR	10019328	Callee	fprintf		10019296	0					
ANR	10019329	Identifier	fprintf		10019296	0					
ANR	10019330	ArgumentList	appData . verbose ? stderr : stdout		10019296	1					
ANR	10019331	Argument	appData . verbose ? stderr : stdout		10019296	0					
ANR	10019332	ConditionalExpression	appData . verbose ? stderr : stdout		10019296	0					
ANR	10019333	Condition	appData . verbose		10019296	0					
ANR	10019334	MemberAccess	appData . verbose		10019296	0					
ANR	10019335	Identifier	appData		10019296	0					
ANR	10019336	Identifier	verbose		10019296	1					
ANR	10019337	Identifier	stderr		10019296	1					
ANR	10019338	Identifier	stdout		10019296	2					
ANR	10019339	Argument	"""xtiff: can't open %s as a TIFF file\\n"""		10019296	1					
ANR	10019340	PrimaryExpression	"""xtiff: can't open %s as a TIFF file\\n"""		10019296	0					
ANR	10019341	Argument	fileName		10019296	2					
ANR	10019342	Identifier	fileName		10019296	0					
ANR	10019343	ExpressionStatement	exit ( 0 )	396:8:12793:12800	10019296	1	True				
ANR	10019344	CallExpression	exit ( 0 )		10019296	0					
ANR	10019345	Callee	exit		10019296	0					
ANR	10019346	Identifier	exit		10019296	0					
ANR	10019347	ArgumentList	0		10019296	1					
ANR	10019348	Argument	0		10019296	0					
ANR	10019349	PrimaryExpression	0		10019296	0					
ANR	10019350	ExpressionStatement	tfMultiPage = ( TIFFLastDirectory ( tfFile ) ? False : True )	399:4:12813:12869	10019296	2	True				
ANR	10019351	AssignmentExpression	tfMultiPage = ( TIFFLastDirectory ( tfFile ) ? False : True )		10019296	0		=			
ANR	10019352	Identifier	tfMultiPage		10019296	0					
ANR	10019353	ConditionalExpression	TIFFLastDirectory ( tfFile ) ? False : True		10019296	1					
ANR	10019354	Condition	TIFFLastDirectory ( tfFile )		10019296	0					
ANR	10019355	CallExpression	TIFFLastDirectory ( tfFile )		10019296	0					
ANR	10019356	Callee	TIFFLastDirectory		10019296	0					
ANR	10019357	Identifier	TIFFLastDirectory		10019296	0					
ANR	10019358	ArgumentList	tfFile		10019296	1					
ANR	10019359	Argument	tfFile		10019296	0					
ANR	10019360	Identifier	tfFile		10019296	0					
ANR	10019361	Identifier	False		10019296	1					
ANR	10019362	Identifier	True		10019296	2					
ANR	10019363	ReturnType	void		10019296	1					
ANR	10019364	Identifier	OpenTIFFFile		10019296	2					
ANR	10019365	ParameterList			10019296	3					
ANR	10019366	CFGEntryNode	ENTRY		10019296		True				
ANR	10019367	CFGExitNode	EXIT		10019296		True				
ANR	10019368	Symbol	fileName		10019296						
ANR	10019369	Symbol	NULL		10019296						
ANR	10019370	Symbol	TIFFOpen		10019296						
ANR	10019371	Symbol	appData . verbose		10019296						
ANR	10019372	Symbol	stdout		10019296						
ANR	10019373	Symbol	tfMultiPage		10019296						
ANR	10019374	Symbol	TIFFLastDirectory		10019296						
ANR	10019375	Symbol	True		10019296						
ANR	10019376	Symbol	False		10019296						
ANR	10019377	Symbol	stderr		10019296						
ANR	10019378	Symbol	tfFile		10019296						
ANR	10019379	Symbol	appData		10019296						
ANR	10019380	Function	GetTIFFHeader	402:0:12874:17177							
ANR	10019381	FunctionDef	GetTIFFHeader ()		10019380	0					
ANR	10019382	CompoundStatement		404:0:12895:17177	10019380	0					
ANR	10019383	Statement	register	405:4:12901:12908	10019380	0	True				
ANR	10019384	IdentifierDeclStatement	int i ;	405:13:12910:12915	10019380	1	True				
ANR	10019385	IdentifierDecl	i		10019380	0					
ANR	10019386	IdentifierDeclType	int		10019380	0					
ANR	10019387	Identifier	i		10019380	1					
ANR	10019388	IfStatement	"if ( ! TIFFSetDirectory ( tfFile , tfDirectory ) )"		10019380	2					
ANR	10019389	Condition	"! TIFFSetDirectory ( tfFile , tfDirectory )"	407:8:12926:12963	10019380	0	True				
ANR	10019390	UnaryOperationExpression	"! TIFFSetDirectory ( tfFile , tfDirectory )"		10019380	0					
ANR	10019391	UnaryOperator	!		10019380	0					
ANR	10019392	CallExpression	"TIFFSetDirectory ( tfFile , tfDirectory )"		10019380	1					
ANR	10019393	Callee	TIFFSetDirectory		10019380	0					
ANR	10019394	Identifier	TIFFSetDirectory		10019380	0					
ANR	10019395	ArgumentList	tfFile		10019380	1					
ANR	10019396	Argument	tfFile		10019380	0					
ANR	10019397	Identifier	tfFile		10019380	0					
ANR	10019398	Argument	tfDirectory		10019380	1					
ANR	10019399	Identifier	tfDirectory		10019380	0					
ANR	10019400	CompoundStatement		4:48:70:70	10019380	1					
ANR	10019401	ExpressionStatement	"fprintf ( stderr , ""xtiff: can't seek to directory %d in %s\\n"" , tfDirectory , fileName )"	408:8:12976:13071	10019380	0	True				
ANR	10019402	CallExpression	"fprintf ( stderr , ""xtiff: can't seek to directory %d in %s\\n"" , tfDirectory , fileName )"		10019380	0					
ANR	10019403	Callee	fprintf		10019380	0					
ANR	10019404	Identifier	fprintf		10019380	0					
ANR	10019405	ArgumentList	stderr		10019380	1					
ANR	10019406	Argument	stderr		10019380	0					
ANR	10019407	Identifier	stderr		10019380	0					
ANR	10019408	Argument	"""xtiff: can't seek to directory %d in %s\\n"""		10019380	1					
ANR	10019409	PrimaryExpression	"""xtiff: can't seek to directory %d in %s\\n"""		10019380	0					
ANR	10019410	Argument	tfDirectory		10019380	2					
ANR	10019411	Identifier	tfDirectory		10019380	0					
ANR	10019412	Argument	fileName		10019380	3					
ANR	10019413	Identifier	fileName		10019380	0					
ANR	10019414	ExpressionStatement	exit ( 0 )	410:8:13081:13088	10019380	1	True				
ANR	10019415	CallExpression	exit ( 0 )		10019380	0					
ANR	10019416	Callee	exit		10019380	0					
ANR	10019417	Identifier	exit		10019380	0					
ANR	10019418	ArgumentList	0		10019380	1					
ANR	10019419	Argument	0		10019380	0					
ANR	10019420	PrimaryExpression	0		10019380	0					
ANR	10019421	ExpressionStatement	"TIFFGetField ( tfFile , TIFFTAG_IMAGEWIDTH , & tfImageWidth )"	413:4:13101:13156	10019380	3	True				
ANR	10019422	CallExpression	"TIFFGetField ( tfFile , TIFFTAG_IMAGEWIDTH , & tfImageWidth )"		10019380	0					
ANR	10019423	Callee	TIFFGetField		10019380	0					
ANR	10019424	Identifier	TIFFGetField		10019380	0					
ANR	10019425	ArgumentList	tfFile		10019380	1					
ANR	10019426	Argument	tfFile		10019380	0					
ANR	10019427	Identifier	tfFile		10019380	0					
ANR	10019428	Argument	TIFFTAG_IMAGEWIDTH		10019380	1					
ANR	10019429	Identifier	TIFFTAG_IMAGEWIDTH		10019380	0					
ANR	10019430	Argument	& tfImageWidth		10019380	2					
ANR	10019431	UnaryOperationExpression	& tfImageWidth		10019380	0					
ANR	10019432	UnaryOperator	&		10019380	0					
ANR	10019433	Identifier	tfImageWidth		10019380	1					
ANR	10019434	ExpressionStatement	"TIFFGetField ( tfFile , TIFFTAG_IMAGELENGTH , & tfImageHeight )"	414:4:13162:13219	10019380	4	True				
ANR	10019435	CallExpression	"TIFFGetField ( tfFile , TIFFTAG_IMAGELENGTH , & tfImageHeight )"		10019380	0					
ANR	10019436	Callee	TIFFGetField		10019380	0					
ANR	10019437	Identifier	TIFFGetField		10019380	0					
ANR	10019438	ArgumentList	tfFile		10019380	1					
ANR	10019439	Argument	tfFile		10019380	0					
ANR	10019440	Identifier	tfFile		10019380	0					
ANR	10019441	Argument	TIFFTAG_IMAGELENGTH		10019380	1					
ANR	10019442	Identifier	TIFFTAG_IMAGELENGTH		10019380	0					
ANR	10019443	Argument	& tfImageHeight		10019380	2					
ANR	10019444	UnaryOperationExpression	& tfImageHeight		10019380	0					
ANR	10019445	UnaryOperator	&		10019380	0					
ANR	10019446	Identifier	tfImageHeight		10019380	1					
ANR	10019447	ExpressionStatement	"TIFFGetFieldDefaulted ( tfFile , TIFFTAG_BITSPERSAMPLE , & tfBitsPerSample )"	419:4:13313:13383	10019380	5	True				
ANR	10019448	CallExpression	"TIFFGetFieldDefaulted ( tfFile , TIFFTAG_BITSPERSAMPLE , & tfBitsPerSample )"		10019380	0					
ANR	10019449	Callee	TIFFGetFieldDefaulted		10019380	0					
ANR	10019450	Identifier	TIFFGetFieldDefaulted		10019380	0					
ANR	10019451	ArgumentList	tfFile		10019380	1					
ANR	10019452	Argument	tfFile		10019380	0					
ANR	10019453	Identifier	tfFile		10019380	0					
ANR	10019454	Argument	TIFFTAG_BITSPERSAMPLE		10019380	1					
ANR	10019455	Identifier	TIFFTAG_BITSPERSAMPLE		10019380	0					
ANR	10019456	Argument	& tfBitsPerSample		10019380	2					
ANR	10019457	UnaryOperationExpression	& tfBitsPerSample		10019380	0					
ANR	10019458	UnaryOperator	&		10019380	0					
ANR	10019459	Identifier	tfBitsPerSample		10019380	1					
ANR	10019460	ExpressionStatement	"TIFFGetFieldDefaulted ( tfFile , TIFFTAG_SAMPLESPERPIXEL , & tfSamplesPerPixel )"	420:4:13389:13463	10019380	6	True				
ANR	10019461	CallExpression	"TIFFGetFieldDefaulted ( tfFile , TIFFTAG_SAMPLESPERPIXEL , & tfSamplesPerPixel )"		10019380	0					
ANR	10019462	Callee	TIFFGetFieldDefaulted		10019380	0					
ANR	10019463	Identifier	TIFFGetFieldDefaulted		10019380	0					
ANR	10019464	ArgumentList	tfFile		10019380	1					
ANR	10019465	Argument	tfFile		10019380	0					
ANR	10019466	Identifier	tfFile		10019380	0					
ANR	10019467	Argument	TIFFTAG_SAMPLESPERPIXEL		10019380	1					
ANR	10019468	Identifier	TIFFTAG_SAMPLESPERPIXEL		10019380	0					
ANR	10019469	Argument	& tfSamplesPerPixel		10019380	2					
ANR	10019470	UnaryOperationExpression	& tfSamplesPerPixel		10019380	0					
ANR	10019471	UnaryOperator	&		10019380	0					
ANR	10019472	Identifier	tfSamplesPerPixel		10019380	1					
ANR	10019473	ExpressionStatement	"TIFFGetFieldDefaulted ( tfFile , TIFFTAG_PLANARCONFIG , & tfPlanarConfiguration )"	421:4:13469:13544	10019380	7	True				
ANR	10019474	CallExpression	"TIFFGetFieldDefaulted ( tfFile , TIFFTAG_PLANARCONFIG , & tfPlanarConfiguration )"		10019380	0					
ANR	10019475	Callee	TIFFGetFieldDefaulted		10019380	0					
ANR	10019476	Identifier	TIFFGetFieldDefaulted		10019380	0					
ANR	10019477	ArgumentList	tfFile		10019380	1					
ANR	10019478	Argument	tfFile		10019380	0					
ANR	10019479	Identifier	tfFile		10019380	0					
ANR	10019480	Argument	TIFFTAG_PLANARCONFIG		10019380	1					
ANR	10019481	Identifier	TIFFTAG_PLANARCONFIG		10019380	0					
ANR	10019482	Argument	& tfPlanarConfiguration		10019380	2					
ANR	10019483	UnaryOperationExpression	& tfPlanarConfiguration		10019380	0					
ANR	10019484	UnaryOperator	&		10019380	0					
ANR	10019485	Identifier	tfPlanarConfiguration		10019380	1					
ANR	10019486	ExpressionStatement	"TIFFGetFieldDefaulted ( tfFile , TIFFTAG_GRAYRESPONSEUNIT , & tfGrayResponseUnit )"	422:4:13550:13626	10019380	8	True				
ANR	10019487	CallExpression	"TIFFGetFieldDefaulted ( tfFile , TIFFTAG_GRAYRESPONSEUNIT , & tfGrayResponseUnit )"		10019380	0					
ANR	10019488	Callee	TIFFGetFieldDefaulted		10019380	0					
ANR	10019489	Identifier	TIFFGetFieldDefaulted		10019380	0					
ANR	10019490	ArgumentList	tfFile		10019380	1					
ANR	10019491	Argument	tfFile		10019380	0					
ANR	10019492	Identifier	tfFile		10019380	0					
ANR	10019493	Argument	TIFFTAG_GRAYRESPONSEUNIT		10019380	1					
ANR	10019494	Identifier	TIFFTAG_GRAYRESPONSEUNIT		10019380	0					
ANR	10019495	Argument	& tfGrayResponseUnit		10019380	2					
ANR	10019496	UnaryOperationExpression	& tfGrayResponseUnit		10019380	0					
ANR	10019497	UnaryOperator	&		10019380	0					
ANR	10019498	Identifier	tfGrayResponseUnit		10019380	1					
ANR	10019499	ExpressionStatement	tfUnitMap = tfGrayResponseUnitMap [ tfGrayResponseUnit ]	424:4:13633:13686	10019380	9	True				
ANR	10019500	AssignmentExpression	tfUnitMap = tfGrayResponseUnitMap [ tfGrayResponseUnit ]		10019380	0		=			
ANR	10019501	Identifier	tfUnitMap		10019380	0					
ANR	10019502	ArrayIndexing	tfGrayResponseUnitMap [ tfGrayResponseUnit ]		10019380	1					
ANR	10019503	Identifier	tfGrayResponseUnitMap		10019380	0					
ANR	10019504	Identifier	tfGrayResponseUnit		10019380	1					
ANR	10019505	ExpressionStatement	colormapSize = 1 << tfBitsPerSample	425:4:13692:13727	10019380	10	True				
ANR	10019506	AssignmentExpression	colormapSize = 1 << tfBitsPerSample		10019380	0		=			
ANR	10019507	Identifier	colormapSize		10019380	0					
ANR	10019508	ShiftExpression	1 << tfBitsPerSample		10019380	1		<<			
ANR	10019509	PrimaryExpression	1		10019380	0					
ANR	10019510	Identifier	tfBitsPerSample		10019380	1					
ANR	10019511	ExpressionStatement	tfImageDepth = tfBitsPerSample * tfSamplesPerPixel	426:4:13733:13783	10019380	11	True				
ANR	10019512	AssignmentExpression	tfImageDepth = tfBitsPerSample * tfSamplesPerPixel		10019380	0		=			
ANR	10019513	Identifier	tfImageDepth		10019380	0					
ANR	10019514	MultiplicativeExpression	tfBitsPerSample * tfSamplesPerPixel		10019380	1		*			
ANR	10019515	Identifier	tfBitsPerSample		10019380	0					
ANR	10019516	Identifier	tfSamplesPerPixel		10019380	1					
ANR	10019517	ExpressionStatement	dRed = ( double * ) malloc ( colormapSize * sizeof ( double ) )	428:4:13790:13845	10019380	12	True				
ANR	10019518	AssignmentExpression	dRed = ( double * ) malloc ( colormapSize * sizeof ( double ) )		10019380	0		=			
ANR	10019519	Identifier	dRed		10019380	0					
ANR	10019520	CastExpression	( double * ) malloc ( colormapSize * sizeof ( double ) )		10019380	1					
ANR	10019521	CastTarget	double *		10019380	0					
ANR	10019522	CallExpression	malloc ( colormapSize * sizeof ( double ) )		10019380	1					
ANR	10019523	Callee	malloc		10019380	0					
ANR	10019524	Identifier	malloc		10019380	0					
ANR	10019525	ArgumentList	colormapSize * sizeof ( double )		10019380	1					
ANR	10019526	Argument	colormapSize * sizeof ( double )		10019380	0					
ANR	10019527	MultiplicativeExpression	colormapSize * sizeof ( double )		10019380	0		*			
ANR	10019528	Identifier	colormapSize		10019380	0					
ANR	10019529	SizeofExpression	sizeof ( double )		10019380	1					
ANR	10019530	Sizeof	sizeof		10019380	0					
ANR	10019531	SizeofOperand	double		10019380	1					
ANR	10019532	ExpressionStatement	dGreen = ( double * ) malloc ( colormapSize * sizeof ( double ) )	429:4:13851:13908	10019380	13	True				
ANR	10019533	AssignmentExpression	dGreen = ( double * ) malloc ( colormapSize * sizeof ( double ) )		10019380	0		=			
ANR	10019534	Identifier	dGreen		10019380	0					
ANR	10019535	CastExpression	( double * ) malloc ( colormapSize * sizeof ( double ) )		10019380	1					
ANR	10019536	CastTarget	double *		10019380	0					
ANR	10019537	CallExpression	malloc ( colormapSize * sizeof ( double ) )		10019380	1					
ANR	10019538	Callee	malloc		10019380	0					
ANR	10019539	Identifier	malloc		10019380	0					
ANR	10019540	ArgumentList	colormapSize * sizeof ( double )		10019380	1					
ANR	10019541	Argument	colormapSize * sizeof ( double )		10019380	0					
ANR	10019542	MultiplicativeExpression	colormapSize * sizeof ( double )		10019380	0		*			
ANR	10019543	Identifier	colormapSize		10019380	0					
ANR	10019544	SizeofExpression	sizeof ( double )		10019380	1					
ANR	10019545	Sizeof	sizeof		10019380	0					
ANR	10019546	SizeofOperand	double		10019380	1					
ANR	10019547	ExpressionStatement	dBlue = ( double * ) malloc ( colormapSize * sizeof ( double ) )	430:4:13914:13970	10019380	14	True				
ANR	10019548	AssignmentExpression	dBlue = ( double * ) malloc ( colormapSize * sizeof ( double ) )		10019380	0		=			
ANR	10019549	Identifier	dBlue		10019380	0					
ANR	10019550	CastExpression	( double * ) malloc ( colormapSize * sizeof ( double ) )		10019380	1					
ANR	10019551	CastTarget	double *		10019380	0					
ANR	10019552	CallExpression	malloc ( colormapSize * sizeof ( double ) )		10019380	1					
ANR	10019553	Callee	malloc		10019380	0					
ANR	10019554	Identifier	malloc		10019380	0					
ANR	10019555	ArgumentList	colormapSize * sizeof ( double )		10019380	1					
ANR	10019556	Argument	colormapSize * sizeof ( double )		10019380	0					
ANR	10019557	MultiplicativeExpression	colormapSize * sizeof ( double )		10019380	0		*			
ANR	10019558	Identifier	colormapSize		10019380	0					
ANR	10019559	SizeofExpression	sizeof ( double )		10019380	1					
ANR	10019560	Sizeof	sizeof		10019380	0					
ANR	10019561	SizeofOperand	double		10019380	1					
ANR	10019562	ExpressionStatement	MCHECK ( dRed )	431:4:13976:13988	10019380	15	True				
ANR	10019563	CallExpression	MCHECK ( dRed )		10019380	0					
ANR	10019564	Callee	MCHECK		10019380	0					
ANR	10019565	Identifier	MCHECK		10019380	0					
ANR	10019566	ArgumentList	dRed		10019380	1					
ANR	10019567	Argument	dRed		10019380	0					
ANR	10019568	Identifier	dRed		10019380	0					
ANR	10019569	ExpressionStatement	MCHECK ( dGreen )	431:18:13990:14004	10019380	16	True				
ANR	10019570	CallExpression	MCHECK ( dGreen )		10019380	0					
ANR	10019571	Callee	MCHECK		10019380	0					
ANR	10019572	Identifier	MCHECK		10019380	0					
ANR	10019573	ArgumentList	dGreen		10019380	1					
ANR	10019574	Argument	dGreen		10019380	0					
ANR	10019575	Identifier	dGreen		10019380	0					
ANR	10019576	ExpressionStatement	MCHECK ( dBlue )	431:34:14006:14019	10019380	17	True				
ANR	10019577	CallExpression	MCHECK ( dBlue )		10019380	0					
ANR	10019578	Callee	MCHECK		10019380	0					
ANR	10019579	Identifier	MCHECK		10019380	0					
ANR	10019580	ArgumentList	dBlue		10019380	1					
ANR	10019581	Argument	dBlue		10019380	0					
ANR	10019582	Identifier	dBlue		10019380	0					
ANR	10019583	IfStatement	"if ( ! TIFFGetField ( tfFile , TIFFTAG_PHOTOMETRIC , & tfPhotometricInterpretation ) )"		10019380	18					
ANR	10019584	Condition	"! TIFFGetField ( tfFile , TIFFTAG_PHOTOMETRIC , & tfPhotometricInterpretation )"	437:8:14182:14265	10019380	0	True				
ANR	10019585	UnaryOperationExpression	"! TIFFGetField ( tfFile , TIFFTAG_PHOTOMETRIC , & tfPhotometricInterpretation )"		10019380	0					
ANR	10019586	UnaryOperator	!		10019380	0					
ANR	10019587	CallExpression	"TIFFGetField ( tfFile , TIFFTAG_PHOTOMETRIC , & tfPhotometricInterpretation )"		10019380	1					
ANR	10019588	Callee	TIFFGetField		10019380	0					
ANR	10019589	Identifier	TIFFGetField		10019380	0					
ANR	10019590	ArgumentList	tfFile		10019380	1					
ANR	10019591	Argument	tfFile		10019380	0					
ANR	10019592	Identifier	tfFile		10019380	0					
ANR	10019593	Argument	TIFFTAG_PHOTOMETRIC		10019380	1					
ANR	10019594	Identifier	TIFFTAG_PHOTOMETRIC		10019380	0					
ANR	10019595	Argument	& tfPhotometricInterpretation		10019380	2					
ANR	10019596	UnaryOperationExpression	& tfPhotometricInterpretation		10019380	0					
ANR	10019597	UnaryOperator	&		10019380	0					
ANR	10019598	Identifier	tfPhotometricInterpretation		10019380	1					
ANR	10019599	CompoundStatement		35:43:1372:1372	10019380	1					
ANR	10019600	IfStatement	if ( tfSamplesPerPixel != 1 )		10019380	0					
ANR	10019601	Condition	tfSamplesPerPixel != 1	439:12:14282:14303	10019380	0	True				
ANR	10019602	EqualityExpression	tfSamplesPerPixel != 1		10019380	0		!=			
ANR	10019603	Identifier	tfSamplesPerPixel		10019380	0					
ANR	10019604	PrimaryExpression	1		10019380	1					
ANR	10019605	ExpressionStatement	tfPhotometricInterpretation = PHOTOMETRIC_RGB	440:12:14318:14363	10019380	1	True				
ANR	10019606	AssignmentExpression	tfPhotometricInterpretation = PHOTOMETRIC_RGB		10019380	0		=			
ANR	10019607	Identifier	tfPhotometricInterpretation		10019380	0					
ANR	10019608	Identifier	PHOTOMETRIC_RGB		10019380	1					
ANR	10019609	ElseStatement	else		10019380	0					
ANR	10019610	IfStatement	if ( tfBitsPerSample == 1 )		10019380	0					
ANR	10019611	Condition	tfBitsPerSample == 1	441:17:14382:14401	10019380	0	True				
ANR	10019612	EqualityExpression	tfBitsPerSample == 1		10019380	0		==			
ANR	10019613	Identifier	tfBitsPerSample		10019380	0					
ANR	10019614	PrimaryExpression	1		10019380	1					
ANR	10019615	ExpressionStatement	tfPhotometricInterpretation = PHOTOMETRIC_MINISBLACK	442:12:14416:14468	10019380	1	True				
ANR	10019616	AssignmentExpression	tfPhotometricInterpretation = PHOTOMETRIC_MINISBLACK		10019380	0		=			
ANR	10019617	Identifier	tfPhotometricInterpretation		10019380	0					
ANR	10019618	Identifier	PHOTOMETRIC_MINISBLACK		10019380	1					
ANR	10019619	ElseStatement	else		10019380	0					
ANR	10019620	IfStatement	"if ( TIFFGetField ( tfFile , TIFFTAG_COLORMAP , & redMap , & greenMap , & blueMap ) )"		10019380	0					
ANR	10019621	Condition	"TIFFGetField ( tfFile , TIFFTAG_COLORMAP , & redMap , & greenMap , & blueMap )"	443:17:14487:14570	10019380	0	True				
ANR	10019622	CallExpression	"TIFFGetField ( tfFile , TIFFTAG_COLORMAP , & redMap , & greenMap , & blueMap )"		10019380	0					
ANR	10019623	Callee	TIFFGetField		10019380	0					
ANR	10019624	Identifier	TIFFGetField		10019380	0					
ANR	10019625	ArgumentList	tfFile		10019380	1					
ANR	10019626	Argument	tfFile		10019380	0					
ANR	10019627	Identifier	tfFile		10019380	0					
ANR	10019628	Argument	TIFFTAG_COLORMAP		10019380	1					
ANR	10019629	Identifier	TIFFTAG_COLORMAP		10019380	0					
ANR	10019630	Argument	& redMap		10019380	2					
ANR	10019631	UnaryOperationExpression	& redMap		10019380	0					
ANR	10019632	UnaryOperator	&		10019380	0					
ANR	10019633	Identifier	redMap		10019380	1					
ANR	10019634	Argument	& greenMap		10019380	3					
ANR	10019635	UnaryOperationExpression	& greenMap		10019380	0					
ANR	10019636	UnaryOperator	&		10019380	0					
ANR	10019637	Identifier	greenMap		10019380	1					
ANR	10019638	Argument	& blueMap		10019380	4					
ANR	10019639	UnaryOperationExpression	& blueMap		10019380	0					
ANR	10019640	UnaryOperator	&		10019380	0					
ANR	10019641	Identifier	blueMap		10019380	1					
ANR	10019642	CompoundStatement		41:47:1677:1677	10019380	1					
ANR	10019643	ExpressionStatement	tfPhotometricInterpretation = PHOTOMETRIC_PALETTE	445:12:14587:14636	10019380	0	True				
ANR	10019644	AssignmentExpression	tfPhotometricInterpretation = PHOTOMETRIC_PALETTE		10019380	0		=			
ANR	10019645	Identifier	tfPhotometricInterpretation		10019380	0					
ANR	10019646	Identifier	PHOTOMETRIC_PALETTE		10019380	1					
ANR	10019647	ExpressionStatement	redMap = greenMap = blueMap = NULL	446:12:14650:14684	10019380	1	True				
ANR	10019648	AssignmentExpression	redMap = greenMap = blueMap = NULL		10019380	0		=			
ANR	10019649	Identifier	redMap		10019380	0					
ANR	10019650	AssignmentExpression	greenMap = blueMap = NULL		10019380	1		=			
ANR	10019651	Identifier	greenMap		10019380	0					
ANR	10019652	AssignmentExpression	blueMap = NULL		10019380	1		=			
ANR	10019653	Identifier	blueMap		10019380	0					
ANR	10019654	Identifier	NULL		10019380	1					
ANR	10019655	ElseStatement	else		10019380	0					
ANR	10019656	ExpressionStatement	tfPhotometricInterpretation = PHOTOMETRIC_MINISBLACK	448:12:14713:14765	10019380	0	True				
ANR	10019657	AssignmentExpression	tfPhotometricInterpretation = PHOTOMETRIC_MINISBLACK		10019380	0		=			
ANR	10019658	Identifier	tfPhotometricInterpretation		10019380	0					
ANR	10019659	Identifier	PHOTOMETRIC_MINISBLACK		10019380	1					
ANR	10019660	SwitchStatement	switch ( tfPhotometricInterpretation )		10019380	19					
ANR	10019661	Condition	tfPhotometricInterpretation	454:12:14873:14899	10019380	0	True				
ANR	10019662	Identifier	tfPhotometricInterpretation		10019380	0					
ANR	10019663	CompoundStatement		51:41:2006:2006	10019380	1					
ANR	10019664	Label	case PHOTOMETRIC_RGB :	455:4:14908:14928	10019380	0	True				
ANR	10019665	Identifier	PHOTOMETRIC_RGB		10019380	0					
ANR	10019666	ExpressionStatement	redMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )	456:1:14931:14988	10019380	1	True				
ANR	10019667	AssignmentExpression	redMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	0		=			
ANR	10019668	Identifier	redMap		10019380	0					
ANR	10019669	CastExpression	( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10019670	CastTarget	uint16 *		10019380	0					
ANR	10019671	CallExpression	malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10019672	Callee	malloc		10019380	0					
ANR	10019673	Identifier	malloc		10019380	0					
ANR	10019674	ArgumentList	colormapSize * sizeof ( uint16 )		10019380	1					
ANR	10019675	Argument	colormapSize * sizeof ( uint16 )		10019380	0					
ANR	10019676	MultiplicativeExpression	colormapSize * sizeof ( uint16 )		10019380	0		*			
ANR	10019677	Identifier	colormapSize		10019380	0					
ANR	10019678	SizeofExpression	sizeof ( uint16 )		10019380	1					
ANR	10019679	Sizeof	sizeof		10019380	0					
ANR	10019680	SizeofOperand	uint16		10019380	1					
ANR	10019681	ExpressionStatement	greenMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )	457:1:14991:15050	10019380	2	True				
ANR	10019682	AssignmentExpression	greenMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	0		=			
ANR	10019683	Identifier	greenMap		10019380	0					
ANR	10019684	CastExpression	( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10019685	CastTarget	uint16 *		10019380	0					
ANR	10019686	CallExpression	malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10019687	Callee	malloc		10019380	0					
ANR	10019688	Identifier	malloc		10019380	0					
ANR	10019689	ArgumentList	colormapSize * sizeof ( uint16 )		10019380	1					
ANR	10019690	Argument	colormapSize * sizeof ( uint16 )		10019380	0					
ANR	10019691	MultiplicativeExpression	colormapSize * sizeof ( uint16 )		10019380	0		*			
ANR	10019692	Identifier	colormapSize		10019380	0					
ANR	10019693	SizeofExpression	sizeof ( uint16 )		10019380	1					
ANR	10019694	Sizeof	sizeof		10019380	0					
ANR	10019695	SizeofOperand	uint16		10019380	1					
ANR	10019696	ExpressionStatement	blueMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )	458:1:15053:15111	10019380	3	True				
ANR	10019697	AssignmentExpression	blueMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	0		=			
ANR	10019698	Identifier	blueMap		10019380	0					
ANR	10019699	CastExpression	( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10019700	CastTarget	uint16 *		10019380	0					
ANR	10019701	CallExpression	malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10019702	Callee	malloc		10019380	0					
ANR	10019703	Identifier	malloc		10019380	0					
ANR	10019704	ArgumentList	colormapSize * sizeof ( uint16 )		10019380	1					
ANR	10019705	Argument	colormapSize * sizeof ( uint16 )		10019380	0					
ANR	10019706	MultiplicativeExpression	colormapSize * sizeof ( uint16 )		10019380	0		*			
ANR	10019707	Identifier	colormapSize		10019380	0					
ANR	10019708	SizeofExpression	sizeof ( uint16 )		10019380	1					
ANR	10019709	Sizeof	sizeof		10019380	0					
ANR	10019710	SizeofOperand	uint16		10019380	1					
ANR	10019711	ExpressionStatement	MCHECK ( redMap )	459:1:15114:15128	10019380	4	True				
ANR	10019712	CallExpression	MCHECK ( redMap )		10019380	0					
ANR	10019713	Callee	MCHECK		10019380	0					
ANR	10019714	Identifier	MCHECK		10019380	0					
ANR	10019715	ArgumentList	redMap		10019380	1					
ANR	10019716	Argument	redMap		10019380	0					
ANR	10019717	Identifier	redMap		10019380	0					
ANR	10019718	ExpressionStatement	MCHECK ( greenMap )	459:17:15130:15146	10019380	5	True				
ANR	10019719	CallExpression	MCHECK ( greenMap )		10019380	0					
ANR	10019720	Callee	MCHECK		10019380	0					
ANR	10019721	Identifier	MCHECK		10019380	0					
ANR	10019722	ArgumentList	greenMap		10019380	1					
ANR	10019723	Argument	greenMap		10019380	0					
ANR	10019724	Identifier	greenMap		10019380	0					
ANR	10019725	ExpressionStatement	MCHECK ( blueMap )	459:35:15148:15163	10019380	6	True				
ANR	10019726	CallExpression	MCHECK ( blueMap )		10019380	0					
ANR	10019727	Callee	MCHECK		10019380	0					
ANR	10019728	Identifier	MCHECK		10019380	0					
ANR	10019729	ArgumentList	blueMap		10019380	1					
ANR	10019730	Argument	blueMap		10019380	0					
ANR	10019731	Identifier	blueMap		10019380	0					
ANR	10019732	ForStatement	for ( i = 0 ; i < colormapSize ; i ++ )		10019380	7					
ANR	10019733	ForInit	i = 0 ;	460:6:15171:15176	10019380	0	True				
ANR	10019734	AssignmentExpression	i = 0		10019380	0		=			
ANR	10019735	Identifier	i		10019380	0					
ANR	10019736	PrimaryExpression	0		10019380	1					
ANR	10019737	Condition	i < colormapSize	460:13:15178:15193	10019380	1	True				
ANR	10019738	RelationalExpression	i < colormapSize		10019380	0		<			
ANR	10019739	Identifier	i		10019380	0					
ANR	10019740	Identifier	colormapSize		10019380	1					
ANR	10019741	PostIncDecOperationExpression	i ++	460:31:15196:15198	10019380	2	True				
ANR	10019742	Identifier	i		10019380	0					
ANR	10019743	IncDec	++		10019380	1					
ANR	10019744	ExpressionStatement	"dRed [ i ] = dGreen [ i ] = dBlue [ i ] = ( double ) SCALE ( i , colormapSize - 1 )"	461:5:15206:15276	10019380	3	True				
ANR	10019745	AssignmentExpression	"dRed [ i ] = dGreen [ i ] = dBlue [ i ] = ( double ) SCALE ( i , colormapSize - 1 )"		10019380	0		=			
ANR	10019746	ArrayIndexing	dRed [ i ]		10019380	0					
ANR	10019747	Identifier	dRed		10019380	0					
ANR	10019748	Identifier	i		10019380	1					
ANR	10019749	AssignmentExpression	"dGreen [ i ] = dBlue [ i ] = ( double ) SCALE ( i , colormapSize - 1 )"		10019380	1		=			
ANR	10019750	ArrayIndexing	dGreen [ i ]		10019380	0					
ANR	10019751	Identifier	dGreen		10019380	0					
ANR	10019752	Identifier	i		10019380	1					
ANR	10019753	AssignmentExpression	"dBlue [ i ] = ( double ) SCALE ( i , colormapSize - 1 )"		10019380	1		=			
ANR	10019754	ArrayIndexing	dBlue [ i ]		10019380	0					
ANR	10019755	Identifier	dBlue		10019380	0					
ANR	10019756	Identifier	i		10019380	1					
ANR	10019757	CastExpression	"( double ) SCALE ( i , colormapSize - 1 )"		10019380	1					
ANR	10019758	CastTarget	double		10019380	0					
ANR	10019759	CallExpression	"SCALE ( i , colormapSize - 1 )"		10019380	1					
ANR	10019760	Callee	SCALE		10019380	0					
ANR	10019761	Identifier	SCALE		10019380	0					
ANR	10019762	ArgumentList	i		10019380	1					
ANR	10019763	Argument	i		10019380	0					
ANR	10019764	Identifier	i		10019380	0					
ANR	10019765	Argument	colormapSize - 1		10019380	1					
ANR	10019766	AdditiveExpression	colormapSize - 1		10019380	0		-			
ANR	10019767	Identifier	colormapSize		10019380	0					
ANR	10019768	PrimaryExpression	1		10019380	1					
ANR	10019769	BreakStatement	break ;	463:8:15286:15291	10019380	8	True				
ANR	10019770	Label	case PHOTOMETRIC_PALETTE :	464:4:15297:15321	10019380	9	True				
ANR	10019771	Identifier	PHOTOMETRIC_PALETTE		10019380	0					
ANR	10019772	IfStatement	"if ( ! TIFFGetField ( tfFile , TIFFTAG_COLORMAP , & redMap , & greenMap , & blueMap ) )"		10019380	10					
ANR	10019773	Condition	"! TIFFGetField ( tfFile , TIFFTAG_COLORMAP , & redMap , & greenMap , & blueMap )"	465:12:15335:15419	10019380	0	True				
ANR	10019774	UnaryOperationExpression	"! TIFFGetField ( tfFile , TIFFTAG_COLORMAP , & redMap , & greenMap , & blueMap )"		10019380	0					
ANR	10019775	UnaryOperator	!		10019380	0					
ANR	10019776	CallExpression	"TIFFGetField ( tfFile , TIFFTAG_COLORMAP , & redMap , & greenMap , & blueMap )"		10019380	1					
ANR	10019777	Callee	TIFFGetField		10019380	0					
ANR	10019778	Identifier	TIFFGetField		10019380	0					
ANR	10019779	ArgumentList	tfFile		10019380	1					
ANR	10019780	Argument	tfFile		10019380	0					
ANR	10019781	Identifier	tfFile		10019380	0					
ANR	10019782	Argument	TIFFTAG_COLORMAP		10019380	1					
ANR	10019783	Identifier	TIFFTAG_COLORMAP		10019380	0					
ANR	10019784	Argument	& redMap		10019380	2					
ANR	10019785	UnaryOperationExpression	& redMap		10019380	0					
ANR	10019786	UnaryOperator	&		10019380	0					
ANR	10019787	Identifier	redMap		10019380	1					
ANR	10019788	Argument	& greenMap		10019380	3					
ANR	10019789	UnaryOperationExpression	& greenMap		10019380	0					
ANR	10019790	UnaryOperator	&		10019380	0					
ANR	10019791	Identifier	greenMap		10019380	1					
ANR	10019792	Argument	& blueMap		10019380	4					
ANR	10019793	UnaryOperationExpression	& blueMap		10019380	0					
ANR	10019794	UnaryOperator	&		10019380	0					
ANR	10019795	Identifier	blueMap		10019380	1					
ANR	10019796	CompoundStatement		63:47:2526:2526	10019380	1					
ANR	10019797	ExpressionStatement	redMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )	467:12:15436:15493	10019380	0	True				
ANR	10019798	AssignmentExpression	redMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	0		=			
ANR	10019799	Identifier	redMap		10019380	0					
ANR	10019800	CastExpression	( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10019801	CastTarget	uint16 *		10019380	0					
ANR	10019802	CallExpression	malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10019803	Callee	malloc		10019380	0					
ANR	10019804	Identifier	malloc		10019380	0					
ANR	10019805	ArgumentList	colormapSize * sizeof ( uint16 )		10019380	1					
ANR	10019806	Argument	colormapSize * sizeof ( uint16 )		10019380	0					
ANR	10019807	MultiplicativeExpression	colormapSize * sizeof ( uint16 )		10019380	0		*			
ANR	10019808	Identifier	colormapSize		10019380	0					
ANR	10019809	SizeofExpression	sizeof ( uint16 )		10019380	1					
ANR	10019810	Sizeof	sizeof		10019380	0					
ANR	10019811	SizeofOperand	uint16		10019380	1					
ANR	10019812	ExpressionStatement	greenMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )	468:12:15507:15566	10019380	1	True				
ANR	10019813	AssignmentExpression	greenMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	0		=			
ANR	10019814	Identifier	greenMap		10019380	0					
ANR	10019815	CastExpression	( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10019816	CastTarget	uint16 *		10019380	0					
ANR	10019817	CallExpression	malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10019818	Callee	malloc		10019380	0					
ANR	10019819	Identifier	malloc		10019380	0					
ANR	10019820	ArgumentList	colormapSize * sizeof ( uint16 )		10019380	1					
ANR	10019821	Argument	colormapSize * sizeof ( uint16 )		10019380	0					
ANR	10019822	MultiplicativeExpression	colormapSize * sizeof ( uint16 )		10019380	0		*			
ANR	10019823	Identifier	colormapSize		10019380	0					
ANR	10019824	SizeofExpression	sizeof ( uint16 )		10019380	1					
ANR	10019825	Sizeof	sizeof		10019380	0					
ANR	10019826	SizeofOperand	uint16		10019380	1					
ANR	10019827	ExpressionStatement	blueMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )	469:12:15580:15638	10019380	2	True				
ANR	10019828	AssignmentExpression	blueMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	0		=			
ANR	10019829	Identifier	blueMap		10019380	0					
ANR	10019830	CastExpression	( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10019831	CastTarget	uint16 *		10019380	0					
ANR	10019832	CallExpression	malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10019833	Callee	malloc		10019380	0					
ANR	10019834	Identifier	malloc		10019380	0					
ANR	10019835	ArgumentList	colormapSize * sizeof ( uint16 )		10019380	1					
ANR	10019836	Argument	colormapSize * sizeof ( uint16 )		10019380	0					
ANR	10019837	MultiplicativeExpression	colormapSize * sizeof ( uint16 )		10019380	0		*			
ANR	10019838	Identifier	colormapSize		10019380	0					
ANR	10019839	SizeofExpression	sizeof ( uint16 )		10019380	1					
ANR	10019840	Sizeof	sizeof		10019380	0					
ANR	10019841	SizeofOperand	uint16		10019380	1					
ANR	10019842	ExpressionStatement	MCHECK ( redMap )	470:12:15652:15666	10019380	3	True				
ANR	10019843	CallExpression	MCHECK ( redMap )		10019380	0					
ANR	10019844	Callee	MCHECK		10019380	0					
ANR	10019845	Identifier	MCHECK		10019380	0					
ANR	10019846	ArgumentList	redMap		10019380	1					
ANR	10019847	Argument	redMap		10019380	0					
ANR	10019848	Identifier	redMap		10019380	0					
ANR	10019849	ExpressionStatement	MCHECK ( greenMap )	470:28:15668:15684	10019380	4	True				
ANR	10019850	CallExpression	MCHECK ( greenMap )		10019380	0					
ANR	10019851	Callee	MCHECK		10019380	0					
ANR	10019852	Identifier	MCHECK		10019380	0					
ANR	10019853	ArgumentList	greenMap		10019380	1					
ANR	10019854	Argument	greenMap		10019380	0					
ANR	10019855	Identifier	greenMap		10019380	0					
ANR	10019856	ExpressionStatement	MCHECK ( blueMap )	470:46:15686:15701	10019380	5	True				
ANR	10019857	CallExpression	MCHECK ( blueMap )		10019380	0					
ANR	10019858	Callee	MCHECK		10019380	0					
ANR	10019859	Identifier	MCHECK		10019380	0					
ANR	10019860	ArgumentList	blueMap		10019380	1					
ANR	10019861	Argument	blueMap		10019380	0					
ANR	10019862	Identifier	blueMap		10019380	0					
ANR	10019863	ForStatement	for ( i = 0 ; i < colormapSize ; i ++ )		10019380	6					
ANR	10019864	ForInit	i = 0 ;	471:17:15720:15725	10019380	0	True				
ANR	10019865	AssignmentExpression	i = 0		10019380	0		=			
ANR	10019866	Identifier	i		10019380	0					
ANR	10019867	PrimaryExpression	0		10019380	1					
ANR	10019868	Condition	i < colormapSize	471:24:15727:15742	10019380	1	True				
ANR	10019869	RelationalExpression	i < colormapSize		10019380	0		<			
ANR	10019870	Identifier	i		10019380	0					
ANR	10019871	Identifier	colormapSize		10019380	1					
ANR	10019872	PostIncDecOperationExpression	i ++	471:42:15745:15747	10019380	2	True				
ANR	10019873	Identifier	i		10019380	0					
ANR	10019874	IncDec	++		10019380	1					
ANR	10019875	ExpressionStatement	"dRed [ i ] = dGreen [ i ] = dBlue [ i ] = ( double ) SCALE ( i , colormapSize - 1 )"	472:16:15766:15854	10019380	3	True				
ANR	10019876	AssignmentExpression	"dRed [ i ] = dGreen [ i ] = dBlue [ i ] = ( double ) SCALE ( i , colormapSize - 1 )"		10019380	0		=			
ANR	10019877	ArrayIndexing	dRed [ i ]		10019380	0					
ANR	10019878	Identifier	dRed		10019380	0					
ANR	10019879	Identifier	i		10019380	1					
ANR	10019880	AssignmentExpression	"dGreen [ i ] = dBlue [ i ] = ( double ) SCALE ( i , colormapSize - 1 )"		10019380	1		=			
ANR	10019881	ArrayIndexing	dGreen [ i ]		10019380	0					
ANR	10019882	Identifier	dGreen		10019380	0					
ANR	10019883	Identifier	i		10019380	1					
ANR	10019884	AssignmentExpression	"dBlue [ i ] = ( double ) SCALE ( i , colormapSize - 1 )"		10019380	1		=			
ANR	10019885	ArrayIndexing	dBlue [ i ]		10019380	0					
ANR	10019886	Identifier	dBlue		10019380	0					
ANR	10019887	Identifier	i		10019380	1					
ANR	10019888	CastExpression	"( double ) SCALE ( i , colormapSize - 1 )"		10019380	1					
ANR	10019889	CastTarget	double		10019380	0					
ANR	10019890	CallExpression	"SCALE ( i , colormapSize - 1 )"		10019380	1					
ANR	10019891	Callee	SCALE		10019380	0					
ANR	10019892	Identifier	SCALE		10019380	0					
ANR	10019893	ArgumentList	i		10019380	1					
ANR	10019894	Argument	i		10019380	0					
ANR	10019895	Identifier	i		10019380	0					
ANR	10019896	Argument	colormapSize - 1		10019380	1					
ANR	10019897	AdditiveExpression	colormapSize - 1		10019380	0		-			
ANR	10019898	Identifier	colormapSize		10019380	0					
ANR	10019899	PrimaryExpression	1		10019380	1					
ANR	10019900	ElseStatement	else		10019380	0					
ANR	10019901	CompoundStatement		71:15:2975:2975	10019380	0					
ANR	10019902	ExpressionStatement	CheckAndCorrectColormap ( )	475:12:15885:15910	10019380	0	True				
ANR	10019903	CallExpression	CheckAndCorrectColormap ( )		10019380	0					
ANR	10019904	Callee	CheckAndCorrectColormap		10019380	0					
ANR	10019905	Identifier	CheckAndCorrectColormap		10019380	0					
ANR	10019906	ArgumentList			10019380	1					
ANR	10019907	ForStatement	for ( i = 0 ; i < colormapSize ; i ++ )		10019380	1					
ANR	10019908	ForInit	i = 0 ;	476:17:15929:15934	10019380	0	True				
ANR	10019909	AssignmentExpression	i = 0		10019380	0		=			
ANR	10019910	Identifier	i		10019380	0					
ANR	10019911	PrimaryExpression	0		10019380	1					
ANR	10019912	Condition	i < colormapSize	476:24:15936:15951	10019380	1	True				
ANR	10019913	RelationalExpression	i < colormapSize		10019380	0		<			
ANR	10019914	Identifier	i		10019380	0					
ANR	10019915	Identifier	colormapSize		10019380	1					
ANR	10019916	PostIncDecOperationExpression	i ++	476:42:15954:15956	10019380	2	True				
ANR	10019917	Identifier	i		10019380	0					
ANR	10019918	IncDec	++		10019380	1					
ANR	10019919	CompoundStatement		73:47:3063:3063	10019380	3					
ANR	10019920	ExpressionStatement	dRed [ i ] = ( double ) redMap [ i ]	477:16:15977:16005	10019380	0	True				
ANR	10019921	AssignmentExpression	dRed [ i ] = ( double ) redMap [ i ]		10019380	0		=			
ANR	10019922	ArrayIndexing	dRed [ i ]		10019380	0					
ANR	10019923	Identifier	dRed		10019380	0					
ANR	10019924	Identifier	i		10019380	1					
ANR	10019925	CastExpression	( double ) redMap [ i ]		10019380	1					
ANR	10019926	CastTarget	double		10019380	0					
ANR	10019927	ArrayIndexing	redMap [ i ]		10019380	1					
ANR	10019928	Identifier	redMap		10019380	0					
ANR	10019929	Identifier	i		10019380	1					
ANR	10019930	ExpressionStatement	dGreen [ i ] = ( double ) greenMap [ i ]	478:16:16023:16055	10019380	1	True				
ANR	10019931	AssignmentExpression	dGreen [ i ] = ( double ) greenMap [ i ]		10019380	0		=			
ANR	10019932	ArrayIndexing	dGreen [ i ]		10019380	0					
ANR	10019933	Identifier	dGreen		10019380	0					
ANR	10019934	Identifier	i		10019380	1					
ANR	10019935	CastExpression	( double ) greenMap [ i ]		10019380	1					
ANR	10019936	CastTarget	double		10019380	0					
ANR	10019937	ArrayIndexing	greenMap [ i ]		10019380	1					
ANR	10019938	Identifier	greenMap		10019380	0					
ANR	10019939	Identifier	i		10019380	1					
ANR	10019940	ExpressionStatement	dBlue [ i ] = ( double ) blueMap [ i ]	479:16:16073:16103	10019380	2	True				
ANR	10019941	AssignmentExpression	dBlue [ i ] = ( double ) blueMap [ i ]		10019380	0		=			
ANR	10019942	ArrayIndexing	dBlue [ i ]		10019380	0					
ANR	10019943	Identifier	dBlue		10019380	0					
ANR	10019944	Identifier	i		10019380	1					
ANR	10019945	CastExpression	( double ) blueMap [ i ]		10019380	1					
ANR	10019946	CastTarget	double		10019380	0					
ANR	10019947	ArrayIndexing	blueMap [ i ]		10019380	1					
ANR	10019948	Identifier	blueMap		10019380	0					
ANR	10019949	Identifier	i		10019380	1					
ANR	10019950	BreakStatement	break ;	482:8:16137:16142	10019380	11	True				
ANR	10019951	Label	case PHOTOMETRIC_MINISWHITE :	483:4:16148:16175	10019380	12	True				
ANR	10019952	Identifier	PHOTOMETRIC_MINISWHITE		10019380	0					
ANR	10019953	ExpressionStatement	redMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )	484:8:16185:16242	10019380	13	True				
ANR	10019954	AssignmentExpression	redMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	0		=			
ANR	10019955	Identifier	redMap		10019380	0					
ANR	10019956	CastExpression	( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10019957	CastTarget	uint16 *		10019380	0					
ANR	10019958	CallExpression	malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10019959	Callee	malloc		10019380	0					
ANR	10019960	Identifier	malloc		10019380	0					
ANR	10019961	ArgumentList	colormapSize * sizeof ( uint16 )		10019380	1					
ANR	10019962	Argument	colormapSize * sizeof ( uint16 )		10019380	0					
ANR	10019963	MultiplicativeExpression	colormapSize * sizeof ( uint16 )		10019380	0		*			
ANR	10019964	Identifier	colormapSize		10019380	0					
ANR	10019965	SizeofExpression	sizeof ( uint16 )		10019380	1					
ANR	10019966	Sizeof	sizeof		10019380	0					
ANR	10019967	SizeofOperand	uint16		10019380	1					
ANR	10019968	ExpressionStatement	greenMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )	485:8:16252:16311	10019380	14	True				
ANR	10019969	AssignmentExpression	greenMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	0		=			
ANR	10019970	Identifier	greenMap		10019380	0					
ANR	10019971	CastExpression	( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10019972	CastTarget	uint16 *		10019380	0					
ANR	10019973	CallExpression	malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10019974	Callee	malloc		10019380	0					
ANR	10019975	Identifier	malloc		10019380	0					
ANR	10019976	ArgumentList	colormapSize * sizeof ( uint16 )		10019380	1					
ANR	10019977	Argument	colormapSize * sizeof ( uint16 )		10019380	0					
ANR	10019978	MultiplicativeExpression	colormapSize * sizeof ( uint16 )		10019380	0		*			
ANR	10019979	Identifier	colormapSize		10019380	0					
ANR	10019980	SizeofExpression	sizeof ( uint16 )		10019380	1					
ANR	10019981	Sizeof	sizeof		10019380	0					
ANR	10019982	SizeofOperand	uint16		10019380	1					
ANR	10019983	ExpressionStatement	blueMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )	486:8:16321:16379	10019380	15	True				
ANR	10019984	AssignmentExpression	blueMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	0		=			
ANR	10019985	Identifier	blueMap		10019380	0					
ANR	10019986	CastExpression	( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10019987	CastTarget	uint16 *		10019380	0					
ANR	10019988	CallExpression	malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10019989	Callee	malloc		10019380	0					
ANR	10019990	Identifier	malloc		10019380	0					
ANR	10019991	ArgumentList	colormapSize * sizeof ( uint16 )		10019380	1					
ANR	10019992	Argument	colormapSize * sizeof ( uint16 )		10019380	0					
ANR	10019993	MultiplicativeExpression	colormapSize * sizeof ( uint16 )		10019380	0		*			
ANR	10019994	Identifier	colormapSize		10019380	0					
ANR	10019995	SizeofExpression	sizeof ( uint16 )		10019380	1					
ANR	10019996	Sizeof	sizeof		10019380	0					
ANR	10019997	SizeofOperand	uint16		10019380	1					
ANR	10019998	ExpressionStatement	MCHECK ( redMap )	487:8:16389:16403	10019380	16	True				
ANR	10019999	CallExpression	MCHECK ( redMap )		10019380	0					
ANR	10020000	Callee	MCHECK		10019380	0					
ANR	10020001	Identifier	MCHECK		10019380	0					
ANR	10020002	ArgumentList	redMap		10019380	1					
ANR	10020003	Argument	redMap		10019380	0					
ANR	10020004	Identifier	redMap		10019380	0					
ANR	10020005	ExpressionStatement	MCHECK ( greenMap )	487:24:16405:16421	10019380	17	True				
ANR	10020006	CallExpression	MCHECK ( greenMap )		10019380	0					
ANR	10020007	Callee	MCHECK		10019380	0					
ANR	10020008	Identifier	MCHECK		10019380	0					
ANR	10020009	ArgumentList	greenMap		10019380	1					
ANR	10020010	Argument	greenMap		10019380	0					
ANR	10020011	Identifier	greenMap		10019380	0					
ANR	10020012	ExpressionStatement	MCHECK ( blueMap )	487:42:16423:16438	10019380	18	True				
ANR	10020013	CallExpression	MCHECK ( blueMap )		10019380	0					
ANR	10020014	Callee	MCHECK		10019380	0					
ANR	10020015	Identifier	MCHECK		10019380	0					
ANR	10020016	ArgumentList	blueMap		10019380	1					
ANR	10020017	Argument	blueMap		10019380	0					
ANR	10020018	Identifier	blueMap		10019380	0					
ANR	10020019	ForStatement	for ( i = 0 ; i < colormapSize ; i ++ )		10019380	19					
ANR	10020020	ForInit	i = 0 ;	488:6:16446:16451	10019380	0	True				
ANR	10020021	AssignmentExpression	i = 0		10019380	0		=			
ANR	10020022	Identifier	i		10019380	0					
ANR	10020023	PrimaryExpression	0		10019380	1					
ANR	10020024	Condition	i < colormapSize	488:13:16453:16468	10019380	1	True				
ANR	10020025	RelationalExpression	i < colormapSize		10019380	0		<			
ANR	10020026	Identifier	i		10019380	0					
ANR	10020027	Identifier	colormapSize		10019380	1					
ANR	10020028	PostIncDecOperationExpression	i ++	488:31:16471:16473	10019380	2	True				
ANR	10020029	Identifier	i		10019380	0					
ANR	10020030	IncDec	++		10019380	1					
ANR	10020031	ExpressionStatement	"dRed [ i ] = dGreen [ i ] = dBlue [ i ] = ( double ) SCALE ( colormapSize - 1 - i , colormapSize - 1 )"	489:5:16481:16565	10019380	3	True				
ANR	10020032	AssignmentExpression	"dRed [ i ] = dGreen [ i ] = dBlue [ i ] = ( double ) SCALE ( colormapSize - 1 - i , colormapSize - 1 )"		10019380	0		=			
ANR	10020033	ArrayIndexing	dRed [ i ]		10019380	0					
ANR	10020034	Identifier	dRed		10019380	0					
ANR	10020035	Identifier	i		10019380	1					
ANR	10020036	AssignmentExpression	"dGreen [ i ] = dBlue [ i ] = ( double ) SCALE ( colormapSize - 1 - i , colormapSize - 1 )"		10019380	1		=			
ANR	10020037	ArrayIndexing	dGreen [ i ]		10019380	0					
ANR	10020038	Identifier	dGreen		10019380	0					
ANR	10020039	Identifier	i		10019380	1					
ANR	10020040	AssignmentExpression	"dBlue [ i ] = ( double ) SCALE ( colormapSize - 1 - i , colormapSize - 1 )"		10019380	1		=			
ANR	10020041	ArrayIndexing	dBlue [ i ]		10019380	0					
ANR	10020042	Identifier	dBlue		10019380	0					
ANR	10020043	Identifier	i		10019380	1					
ANR	10020044	CastExpression	"( double ) SCALE ( colormapSize - 1 - i , colormapSize - 1 )"		10019380	1					
ANR	10020045	CastTarget	double		10019380	0					
ANR	10020046	CallExpression	"SCALE ( colormapSize - 1 - i , colormapSize - 1 )"		10019380	1					
ANR	10020047	Callee	SCALE		10019380	0					
ANR	10020048	Identifier	SCALE		10019380	0					
ANR	10020049	ArgumentList	colormapSize - 1 - i		10019380	1					
ANR	10020050	Argument	colormapSize - 1 - i		10019380	0					
ANR	10020051	AdditiveExpression	colormapSize - 1 - i		10019380	0		-			
ANR	10020052	Identifier	colormapSize		10019380	0					
ANR	10020053	AdditiveExpression	1 - i		10019380	1		-			
ANR	10020054	PrimaryExpression	1		10019380	0					
ANR	10020055	Identifier	i		10019380	1					
ANR	10020056	Argument	colormapSize - 1		10019380	1					
ANR	10020057	AdditiveExpression	colormapSize - 1		10019380	0		-			
ANR	10020058	Identifier	colormapSize		10019380	0					
ANR	10020059	PrimaryExpression	1		10019380	1					
ANR	10020060	BreakStatement	break ;	491:8:16575:16580	10019380	20	True				
ANR	10020061	Label	case PHOTOMETRIC_MINISBLACK :	492:4:16586:16613	10019380	21	True				
ANR	10020062	Identifier	PHOTOMETRIC_MINISBLACK		10019380	0					
ANR	10020063	ExpressionStatement	redMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )	493:8:16623:16680	10019380	22	True				
ANR	10020064	AssignmentExpression	redMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	0		=			
ANR	10020065	Identifier	redMap		10019380	0					
ANR	10020066	CastExpression	( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10020067	CastTarget	uint16 *		10019380	0					
ANR	10020068	CallExpression	malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10020069	Callee	malloc		10019380	0					
ANR	10020070	Identifier	malloc		10019380	0					
ANR	10020071	ArgumentList	colormapSize * sizeof ( uint16 )		10019380	1					
ANR	10020072	Argument	colormapSize * sizeof ( uint16 )		10019380	0					
ANR	10020073	MultiplicativeExpression	colormapSize * sizeof ( uint16 )		10019380	0		*			
ANR	10020074	Identifier	colormapSize		10019380	0					
ANR	10020075	SizeofExpression	sizeof ( uint16 )		10019380	1					
ANR	10020076	Sizeof	sizeof		10019380	0					
ANR	10020077	SizeofOperand	uint16		10019380	1					
ANR	10020078	ExpressionStatement	greenMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )	494:8:16690:16749	10019380	23	True				
ANR	10020079	AssignmentExpression	greenMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	0		=			
ANR	10020080	Identifier	greenMap		10019380	0					
ANR	10020081	CastExpression	( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10020082	CastTarget	uint16 *		10019380	0					
ANR	10020083	CallExpression	malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10020084	Callee	malloc		10019380	0					
ANR	10020085	Identifier	malloc		10019380	0					
ANR	10020086	ArgumentList	colormapSize * sizeof ( uint16 )		10019380	1					
ANR	10020087	Argument	colormapSize * sizeof ( uint16 )		10019380	0					
ANR	10020088	MultiplicativeExpression	colormapSize * sizeof ( uint16 )		10019380	0		*			
ANR	10020089	Identifier	colormapSize		10019380	0					
ANR	10020090	SizeofExpression	sizeof ( uint16 )		10019380	1					
ANR	10020091	Sizeof	sizeof		10019380	0					
ANR	10020092	SizeofOperand	uint16		10019380	1					
ANR	10020093	ExpressionStatement	blueMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )	495:8:16759:16817	10019380	24	True				
ANR	10020094	AssignmentExpression	blueMap = ( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	0		=			
ANR	10020095	Identifier	blueMap		10019380	0					
ANR	10020096	CastExpression	( uint16 * ) malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10020097	CastTarget	uint16 *		10019380	0					
ANR	10020098	CallExpression	malloc ( colormapSize * sizeof ( uint16 ) )		10019380	1					
ANR	10020099	Callee	malloc		10019380	0					
ANR	10020100	Identifier	malloc		10019380	0					
ANR	10020101	ArgumentList	colormapSize * sizeof ( uint16 )		10019380	1					
ANR	10020102	Argument	colormapSize * sizeof ( uint16 )		10019380	0					
ANR	10020103	MultiplicativeExpression	colormapSize * sizeof ( uint16 )		10019380	0		*			
ANR	10020104	Identifier	colormapSize		10019380	0					
ANR	10020105	SizeofExpression	sizeof ( uint16 )		10019380	1					
ANR	10020106	Sizeof	sizeof		10019380	0					
ANR	10020107	SizeofOperand	uint16		10019380	1					
ANR	10020108	ExpressionStatement	MCHECK ( redMap )	496:8:16827:16841	10019380	25	True				
ANR	10020109	CallExpression	MCHECK ( redMap )		10019380	0					
ANR	10020110	Callee	MCHECK		10019380	0					
ANR	10020111	Identifier	MCHECK		10019380	0					
ANR	10020112	ArgumentList	redMap		10019380	1					
ANR	10020113	Argument	redMap		10019380	0					
ANR	10020114	Identifier	redMap		10019380	0					
ANR	10020115	ExpressionStatement	MCHECK ( greenMap )	496:24:16843:16859	10019380	26	True				
ANR	10020116	CallExpression	MCHECK ( greenMap )		10019380	0					
ANR	10020117	Callee	MCHECK		10019380	0					
ANR	10020118	Identifier	MCHECK		10019380	0					
ANR	10020119	ArgumentList	greenMap		10019380	1					
ANR	10020120	Argument	greenMap		10019380	0					
ANR	10020121	Identifier	greenMap		10019380	0					
ANR	10020122	ExpressionStatement	MCHECK ( blueMap )	496:42:16861:16876	10019380	27	True				
ANR	10020123	CallExpression	MCHECK ( blueMap )		10019380	0					
ANR	10020124	Callee	MCHECK		10019380	0					
ANR	10020125	Identifier	MCHECK		10019380	0					
ANR	10020126	ArgumentList	blueMap		10019380	1					
ANR	10020127	Argument	blueMap		10019380	0					
ANR	10020128	Identifier	blueMap		10019380	0					
ANR	10020129	ForStatement	for ( i = 0 ; i < colormapSize ; i ++ )		10019380	28					
ANR	10020130	ForInit	i = 0 ;	497:6:16884:16889	10019380	0	True				
ANR	10020131	AssignmentExpression	i = 0		10019380	0		=			
ANR	10020132	Identifier	i		10019380	0					
ANR	10020133	PrimaryExpression	0		10019380	1					
ANR	10020134	Condition	i < colormapSize	497:13:16891:16906	10019380	1	True				
ANR	10020135	RelationalExpression	i < colormapSize		10019380	0		<			
ANR	10020136	Identifier	i		10019380	0					
ANR	10020137	Identifier	colormapSize		10019380	1					
ANR	10020138	PostIncDecOperationExpression	i ++	497:31:16909:16911	10019380	2	True				
ANR	10020139	Identifier	i		10019380	0					
ANR	10020140	IncDec	++		10019380	1					
ANR	10020141	ExpressionStatement	"dRed [ i ] = dGreen [ i ] = dBlue [ i ] = ( double ) SCALE ( i , colormapSize - 1 )"	498:5:16919:16985	10019380	3	True				
ANR	10020142	AssignmentExpression	"dRed [ i ] = dGreen [ i ] = dBlue [ i ] = ( double ) SCALE ( i , colormapSize - 1 )"		10019380	0		=			
ANR	10020143	ArrayIndexing	dRed [ i ]		10019380	0					
ANR	10020144	Identifier	dRed		10019380	0					
ANR	10020145	Identifier	i		10019380	1					
ANR	10020146	AssignmentExpression	"dGreen [ i ] = dBlue [ i ] = ( double ) SCALE ( i , colormapSize - 1 )"		10019380	1		=			
ANR	10020147	ArrayIndexing	dGreen [ i ]		10019380	0					
ANR	10020148	Identifier	dGreen		10019380	0					
ANR	10020149	Identifier	i		10019380	1					
ANR	10020150	AssignmentExpression	"dBlue [ i ] = ( double ) SCALE ( i , colormapSize - 1 )"		10019380	1		=			
ANR	10020151	ArrayIndexing	dBlue [ i ]		10019380	0					
ANR	10020152	Identifier	dBlue		10019380	0					
ANR	10020153	Identifier	i		10019380	1					
ANR	10020154	CastExpression	"( double ) SCALE ( i , colormapSize - 1 )"		10019380	1					
ANR	10020155	CastTarget	double		10019380	0					
ANR	10020156	CallExpression	"SCALE ( i , colormapSize - 1 )"		10019380	1					
ANR	10020157	Callee	SCALE		10019380	0					
ANR	10020158	Identifier	SCALE		10019380	0					
ANR	10020159	ArgumentList	i		10019380	1					
ANR	10020160	Argument	i		10019380	0					
ANR	10020161	Identifier	i		10019380	0					
ANR	10020162	Argument	colormapSize - 1		10019380	1					
ANR	10020163	AdditiveExpression	colormapSize - 1		10019380	0		-			
ANR	10020164	Identifier	colormapSize		10019380	0					
ANR	10020165	PrimaryExpression	1		10019380	1					
ANR	10020166	BreakStatement	break ;	499:8:16995:17000	10019380	29	True				
ANR	10020167	Label	default :	500:4:17006:17013	10019380	30	True				
ANR	10020168	Identifier	default		10019380	0					
ANR	10020169	ExpressionStatement	"fprintf ( stderr , ""xtiff: can't display photometric interpretation type %d\\n"" , tfPhotometricInterpretation )"	501:8:17023:17152	10019380	31	True				
ANR	10020170	CallExpression	"fprintf ( stderr , ""xtiff: can't display photometric interpretation type %d\\n"" , tfPhotometricInterpretation )"		10019380	0					
ANR	10020171	Callee	fprintf		10019380	0					
ANR	10020172	Identifier	fprintf		10019380	0					
ANR	10020173	ArgumentList	stderr		10019380	1					
ANR	10020174	Argument	stderr		10019380	0					
ANR	10020175	Identifier	stderr		10019380	0					
ANR	10020176	Argument	"""xtiff: can't display photometric interpretation type %d\\n"""		10019380	1					
ANR	10020177	PrimaryExpression	"""xtiff: can't display photometric interpretation type %d\\n"""		10019380	0					
ANR	10020178	Argument	tfPhotometricInterpretation		10019380	2					
ANR	10020179	Identifier	tfPhotometricInterpretation		10019380	0					
ANR	10020180	ExpressionStatement	exit ( 0 )	504:8:17162:17169	10019380	32	True				
ANR	10020181	CallExpression	exit ( 0 )		10019380	0					
ANR	10020182	Callee	exit		10019380	0					
ANR	10020183	Identifier	exit		10019380	0					
ANR	10020184	ArgumentList	0		10019380	1					
ANR	10020185	Argument	0		10019380	0					
ANR	10020186	PrimaryExpression	0		10019380	0					
ANR	10020187	ReturnType	void		10019380	1					
ANR	10020188	Identifier	GetTIFFHeader		10019380	2					
ANR	10020189	ParameterList			10019380	3					
ANR	10020190	CFGEntryNode	ENTRY		10019380		True				
ANR	10020191	CFGExitNode	EXIT		10019380		True				
ANR	10020192	Symbol	fileName		10019380						
ANR	10020193	Symbol	TIFFTAG_COLORMAP		10019380						
ANR	10020194	Symbol	tfGrayResponseUnit		10019380						
ANR	10020195	Symbol	TIFFTAG_PHOTOMETRIC		10019380						
ANR	10020196	Symbol	tfSamplesPerPixel		10019380						
ANR	10020197	Symbol	& tfSamplesPerPixel		10019380						
ANR	10020198	Symbol	colormapSize		10019380						
ANR	10020199	Symbol	tfBitsPerSample		10019380						
ANR	10020200	Symbol	TIFFTAG_PLANARCONFIG		10019380						
ANR	10020201	Symbol	& tfBitsPerSample		10019380						
ANR	10020202	Symbol	SCALE		10019380						
ANR	10020203	Symbol	tfGrayResponseUnitMap		10019380						
ANR	10020204	Symbol	dRed		10019380						
ANR	10020205	Symbol	& greenMap		10019380						
ANR	10020206	Symbol	NULL		10019380						
ANR	10020207	Symbol	stderr		10019380						
ANR	10020208	Symbol	blueMap		10019380						
ANR	10020209	Symbol	& tfImageWidth		10019380						
ANR	10020210	Symbol	tfPhotometricInterpretation		10019380						
ANR	10020211	Symbol	PHOTOMETRIC_PALETTE		10019380						
ANR	10020212	Symbol	& tfPhotometricInterpretation		10019380						
ANR	10020213	Symbol	tfUnitMap		10019380						
ANR	10020214	Symbol	TIFFTAG_GRAYRESPONSEUNIT		10019380						
ANR	10020215	Symbol	dGreen		10019380						
ANR	10020216	Symbol	PHOTOMETRIC_MINISBLACK		10019380						
ANR	10020217	Symbol	tfFile		10019380						
ANR	10020218	Symbol	TIFFTAG_IMAGELENGTH		10019380						
ANR	10020219	Symbol	* redMap		10019380						
ANR	10020220	Symbol	& redMap		10019380						
ANR	10020221	Symbol	* blueMap		10019380						
ANR	10020222	Symbol	TIFFTAG_SAMPLESPERPIXEL		10019380						
ANR	10020223	Symbol	TIFFGetField		10019380						
ANR	10020224	Symbol	redMap		10019380						
ANR	10020225	Symbol	* dGreen		10019380						
ANR	10020226	Symbol	TIFFSetDirectory		10019380						
ANR	10020227	Symbol	tfImageDepth		10019380						
ANR	10020228	Symbol	* greenMap		10019380						
ANR	10020229	Symbol	& tfPlanarConfiguration		10019380						
ANR	10020230	Symbol	* dRed		10019380						
ANR	10020231	Symbol	malloc		10019380						
ANR	10020232	Symbol	greenMap		10019380						
ANR	10020233	Symbol	& tfGrayResponseUnit		10019380						
ANR	10020234	Symbol	PHOTOMETRIC_RGB		10019380						
ANR	10020235	Symbol	* tfGrayResponseUnit		10019380						
ANR	10020236	Symbol	i		10019380						
ANR	10020237	Symbol	* dBlue		10019380						
ANR	10020238	Symbol	tfDirectory		10019380						
ANR	10020239	Symbol	TIFFTAG_BITSPERSAMPLE		10019380						
ANR	10020240	Symbol	& tfImageHeight		10019380						
ANR	10020241	Symbol	TIFFTAG_IMAGEWIDTH		10019380						
ANR	10020242	Symbol	& blueMap		10019380						
ANR	10020243	Symbol	* i		10019380						
ANR	10020244	Symbol	* tfGrayResponseUnitMap		10019380						
ANR	10020245	Symbol	dBlue		10019380						
ANR	10020246	Function	SetNameLabel	508:0:17180:17494							
ANR	10020247	FunctionDef	SetNameLabel ()		10020246	0					
ANR	10020248	CompoundStatement		510:0:17200:17494	10020246	0					
ANR	10020249	IdentifierDeclStatement	char buffer [ BUFSIZ ] ;	511:4:17206:17225	10020246	0	True				
ANR	10020250	IdentifierDecl	buffer [ BUFSIZ ]		10020246	0					
ANR	10020251	IdentifierDeclType	char [ BUFSIZ ]		10020246	0					
ANR	10020252	Identifier	buffer		10020246	1					
ANR	10020253	Identifier	BUFSIZ		10020246	2					
ANR	10020254	IdentifierDeclStatement	Arg args [ 1 ] ;	512:4:17231:17242	10020246	1	True				
ANR	10020255	IdentifierDecl	args [ 1 ]		10020246	0					
ANR	10020256	IdentifierDeclType	Arg [ 1 ]		10020246	0					
ANR	10020257	Identifier	args		10020246	1					
ANR	10020258	PrimaryExpression	1		10020246	2					
ANR	10020259	IfStatement	if ( tfMultiPage )		10020246	2					
ANR	10020260	Condition	tfMultiPage	514:8:17253:17263	10020246	0	True				
ANR	10020261	Identifier	tfMultiPage		10020246	0					
ANR	10020262	ExpressionStatement	"snprintf ( buffer , sizeof ( buffer ) , ""%s - page %d"" , fileName , tfDirectory )"	515:8:17274:17345	10020246	1	True				
ANR	10020263	CallExpression	"snprintf ( buffer , sizeof ( buffer ) , ""%s - page %d"" , fileName , tfDirectory )"		10020246	0					
ANR	10020264	Callee	snprintf		10020246	0					
ANR	10020265	Identifier	snprintf		10020246	0					
ANR	10020266	ArgumentList	buffer		10020246	1					
ANR	10020267	Argument	buffer		10020246	0					
ANR	10020268	Identifier	buffer		10020246	0					
ANR	10020269	Argument	sizeof ( buffer )		10020246	1					
ANR	10020270	SizeofExpression	sizeof ( buffer )		10020246	0					
ANR	10020271	Sizeof	sizeof		10020246	0					
ANR	10020272	SizeofOperand	buffer		10020246	1					
ANR	10020273	Argument	"""%s - page %d"""		10020246	2					
ANR	10020274	PrimaryExpression	"""%s - page %d"""		10020246	0					
ANR	10020275	Argument	fileName		10020246	3					
ANR	10020276	Identifier	fileName		10020246	0					
ANR	10020277	Argument	tfDirectory		10020246	4					
ANR	10020278	Identifier	tfDirectory		10020246	0					
ANR	10020279	ElseStatement	else		10020246	0					
ANR	10020280	ExpressionStatement	"snprintf ( buffer , sizeof ( buffer ) , ""%s"" , fileName )"	517:8:17364:17412	10020246	0	True				
ANR	10020281	CallExpression	"snprintf ( buffer , sizeof ( buffer ) , ""%s"" , fileName )"		10020246	0					
ANR	10020282	Callee	snprintf		10020246	0					
ANR	10020283	Identifier	snprintf		10020246	0					
ANR	10020284	ArgumentList	buffer		10020246	1					
ANR	10020285	Argument	buffer		10020246	0					
ANR	10020286	Identifier	buffer		10020246	0					
ANR	10020287	Argument	sizeof ( buffer )		10020246	1					
ANR	10020288	SizeofExpression	sizeof ( buffer )		10020246	0					
ANR	10020289	Sizeof	sizeof		10020246	0					
ANR	10020290	SizeofOperand	buffer		10020246	1					
ANR	10020291	Argument	"""%s"""		10020246	2					
ANR	10020292	PrimaryExpression	"""%s"""		10020246	0					
ANR	10020293	Argument	fileName		10020246	3					
ANR	10020294	Identifier	fileName		10020246	0					
ANR	10020295	ExpressionStatement	"XtSetArg ( args [ 0 ] , XtNlabel , buffer )"	518:4:17418:17453	10020246	3	True				
ANR	10020296	CallExpression	"XtSetArg ( args [ 0 ] , XtNlabel , buffer )"		10020246	0					
ANR	10020297	Callee	XtSetArg		10020246	0					
ANR	10020298	Identifier	XtSetArg		10020246	0					
ANR	10020299	ArgumentList	args [ 0 ]		10020246	1					
ANR	10020300	Argument	args [ 0 ]		10020246	0					
ANR	10020301	ArrayIndexing	args [ 0 ]		10020246	0					
ANR	10020302	Identifier	args		10020246	0					
ANR	10020303	PrimaryExpression	0		10020246	1					
ANR	10020304	Argument	XtNlabel		10020246	1					
ANR	10020305	Identifier	XtNlabel		10020246	0					
ANR	10020306	Argument	buffer		10020246	2					
ANR	10020307	Identifier	buffer		10020246	0					
ANR	10020308	ExpressionStatement	"XtSetValues ( labelWidget , args , 1 )"	519:4:17459:17492	10020246	4	True				
ANR	10020309	CallExpression	"XtSetValues ( labelWidget , args , 1 )"		10020246	0					
ANR	10020310	Callee	XtSetValues		10020246	0					
ANR	10020311	Identifier	XtSetValues		10020246	0					
ANR	10020312	ArgumentList	labelWidget		10020246	1					
ANR	10020313	Argument	labelWidget		10020246	0					
ANR	10020314	Identifier	labelWidget		10020246	0					
ANR	10020315	Argument	args		10020246	1					
ANR	10020316	Identifier	args		10020246	0					
ANR	10020317	Argument	1		10020246	2					
ANR	10020318	PrimaryExpression	1		10020246	0					
ANR	10020319	ReturnType	void		10020246	1					
ANR	10020320	Identifier	SetNameLabel		10020246	2					
ANR	10020321	ParameterList			10020246	3					
ANR	10020322	CFGEntryNode	ENTRY		10020246		True				
ANR	10020323	CFGExitNode	EXIT		10020246		True				
ANR	10020324	Symbol	args		10020246						
ANR	10020325	Symbol	XtNlabel		10020246						
ANR	10020326	Symbol	fileName		10020246						
ANR	10020327	Symbol	tfMultiPage		10020246						
ANR	10020328	Symbol	buffer		10020246						
ANR	10020329	Symbol	tfDirectory		10020246						
ANR	10020330	Symbol	labelWidget		10020246						
ANR	10020331	Symbol	* args		10020246						
ANR	10020332	Function	CheckAndCorrectColormap	526:0:17663:18089							
ANR	10020333	FunctionDef	CheckAndCorrectColormap ()		10020332	0					
ANR	10020334	CompoundStatement		528:0:17694:18089	10020332	0					
ANR	10020335	Statement	register	529:4:17700:17707	10020332	0	True				
ANR	10020336	IdentifierDeclStatement	int i ;	529:13:17709:17714	10020332	1	True				
ANR	10020337	IdentifierDecl	i		10020332	0					
ANR	10020338	IdentifierDeclType	int		10020332	0					
ANR	10020339	Identifier	i		10020332	1					
ANR	10020340	ForStatement	for ( i = 0 ; i < colormapSize ; i ++ )		10020332	2					
ANR	10020341	ForInit	i = 0 ;	531:9:17726:17731	10020332	0	True				
ANR	10020342	AssignmentExpression	i = 0		10020332	0		=			
ANR	10020343	Identifier	i		10020332	0					
ANR	10020344	PrimaryExpression	0		10020332	1					
ANR	10020345	Condition	i < colormapSize	531:16:17733:17748	10020332	1	True				
ANR	10020346	RelationalExpression	i < colormapSize		10020332	0		<			
ANR	10020347	Identifier	i		10020332	0					
ANR	10020348	Identifier	colormapSize		10020332	1					
ANR	10020349	PostIncDecOperationExpression	i ++	531:34:17751:17753	10020332	2	True				
ANR	10020350	Identifier	i		10020332	0					
ANR	10020351	IncDec	++		10020332	1					
ANR	10020352	IfStatement	if ( ( redMap [ i ] > 255 ) || ( greenMap [ i ] > 255 ) || ( blueMap [ i ] > 255 ) )		10020332	3					
ANR	10020353	Condition	( redMap [ i ] > 255 ) || ( greenMap [ i ] > 255 ) || ( blueMap [ i ] > 255 )	532:12:17768:17829	10020332	0	True				
ANR	10020354	OrExpression	( redMap [ i ] > 255 ) || ( greenMap [ i ] > 255 ) || ( blueMap [ i ] > 255 )		10020332	0		||			
ANR	10020355	RelationalExpression	redMap [ i ] > 255		10020332	0		>			
ANR	10020356	ArrayIndexing	redMap [ i ]		10020332	0					
ANR	10020357	Identifier	redMap		10020332	0					
ANR	10020358	Identifier	i		10020332	1					
ANR	10020359	PrimaryExpression	255		10020332	1					
ANR	10020360	OrExpression	( greenMap [ i ] > 255 ) || ( blueMap [ i ] > 255 )		10020332	1		||			
ANR	10020361	RelationalExpression	greenMap [ i ] > 255		10020332	0		>			
ANR	10020362	ArrayIndexing	greenMap [ i ]		10020332	0					
ANR	10020363	Identifier	greenMap		10020332	0					
ANR	10020364	Identifier	i		10020332	1					
ANR	10020365	PrimaryExpression	255		10020332	1					
ANR	10020366	RelationalExpression	blueMap [ i ] > 255		10020332	1		>			
ANR	10020367	ArrayIndexing	blueMap [ i ]		10020332	0					
ANR	10020368	Identifier	blueMap		10020332	0					
ANR	10020369	Identifier	i		10020332	1					
ANR	10020370	PrimaryExpression	255		10020332	1					
ANR	10020371	ReturnStatement	return ;	533:12:17844:17850	10020332	1	True				
ANR	10020372	ForStatement	for ( i = 0 ; i < colormapSize ; i ++ )		10020332	3					
ANR	10020373	ForInit	i = 0 ;	535:9:17862:17867	10020332	0	True				
ANR	10020374	AssignmentExpression	i = 0		10020332	0		=			
ANR	10020375	Identifier	i		10020332	0					
ANR	10020376	PrimaryExpression	0		10020332	1					
ANR	10020377	Condition	i < colormapSize	535:16:17869:17884	10020332	1	True				
ANR	10020378	RelationalExpression	i < colormapSize		10020332	0		<			
ANR	10020379	Identifier	i		10020332	0					
ANR	10020380	Identifier	colormapSize		10020332	1					
ANR	10020381	PostIncDecOperationExpression	i ++	535:34:17887:17889	10020332	2	True				
ANR	10020382	Identifier	i		10020332	0					
ANR	10020383	IncDec	++		10020332	1					
ANR	10020384	CompoundStatement		8:39:197:197	10020332	3					
ANR	10020385	ExpressionStatement	"redMap [ i ] = SCALE ( redMap [ i ] , 255 )"	536:8:17902:17935	10020332	0	True				
ANR	10020386	AssignmentExpression	"redMap [ i ] = SCALE ( redMap [ i ] , 255 )"		10020332	0		=			
ANR	10020387	ArrayIndexing	redMap [ i ]		10020332	0					
ANR	10020388	Identifier	redMap		10020332	0					
ANR	10020389	Identifier	i		10020332	1					
ANR	10020390	CallExpression	"SCALE ( redMap [ i ] , 255 )"		10020332	1					
ANR	10020391	Callee	SCALE		10020332	0					
ANR	10020392	Identifier	SCALE		10020332	0					
ANR	10020393	ArgumentList	redMap [ i ]		10020332	1					
ANR	10020394	Argument	redMap [ i ]		10020332	0					
ANR	10020395	ArrayIndexing	redMap [ i ]		10020332	0					
ANR	10020396	Identifier	redMap		10020332	0					
ANR	10020397	Identifier	i		10020332	1					
ANR	10020398	Argument	255		10020332	1					
ANR	10020399	PrimaryExpression	255		10020332	0					
ANR	10020400	ExpressionStatement	"greenMap [ i ] = SCALE ( greenMap [ i ] , 255 )"	537:8:17945:17982	10020332	1	True				
ANR	10020401	AssignmentExpression	"greenMap [ i ] = SCALE ( greenMap [ i ] , 255 )"		10020332	0		=			
ANR	10020402	ArrayIndexing	greenMap [ i ]		10020332	0					
ANR	10020403	Identifier	greenMap		10020332	0					
ANR	10020404	Identifier	i		10020332	1					
ANR	10020405	CallExpression	"SCALE ( greenMap [ i ] , 255 )"		10020332	1					
ANR	10020406	Callee	SCALE		10020332	0					
ANR	10020407	Identifier	SCALE		10020332	0					
ANR	10020408	ArgumentList	greenMap [ i ]		10020332	1					
ANR	10020409	Argument	greenMap [ i ]		10020332	0					
ANR	10020410	ArrayIndexing	greenMap [ i ]		10020332	0					
ANR	10020411	Identifier	greenMap		10020332	0					
ANR	10020412	Identifier	i		10020332	1					
ANR	10020413	Argument	255		10020332	1					
ANR	10020414	PrimaryExpression	255		10020332	0					
ANR	10020415	ExpressionStatement	"blueMap [ i ] = SCALE ( blueMap [ i ] , 255 )"	538:8:17992:18027	10020332	2	True				
ANR	10020416	AssignmentExpression	"blueMap [ i ] = SCALE ( blueMap [ i ] , 255 )"		10020332	0		=			
ANR	10020417	ArrayIndexing	blueMap [ i ]		10020332	0					
ANR	10020418	Identifier	blueMap		10020332	0					
ANR	10020419	Identifier	i		10020332	1					
ANR	10020420	CallExpression	"SCALE ( blueMap [ i ] , 255 )"		10020332	1					
ANR	10020421	Callee	SCALE		10020332	0					
ANR	10020422	Identifier	SCALE		10020332	0					
ANR	10020423	ArgumentList	blueMap [ i ]		10020332	1					
ANR	10020424	Argument	blueMap [ i ]		10020332	0					
ANR	10020425	ArrayIndexing	blueMap [ i ]		10020332	0					
ANR	10020426	Identifier	blueMap		10020332	0					
ANR	10020427	Identifier	i		10020332	1					
ANR	10020428	Argument	255		10020332	1					
ANR	10020429	PrimaryExpression	255		10020332	0					
ANR	10020430	ExpressionStatement	"TIFFWarning ( fileName , ""Assuming 8-bit colormap"" )"	540:4:18039:18087	10020332	4	True				
ANR	10020431	CallExpression	"TIFFWarning ( fileName , ""Assuming 8-bit colormap"" )"		10020332	0					
ANR	10020432	Callee	TIFFWarning		10020332	0					
ANR	10020433	Identifier	TIFFWarning		10020332	0					
ANR	10020434	ArgumentList	fileName		10020332	1					
ANR	10020435	Argument	fileName		10020332	0					
ANR	10020436	Identifier	fileName		10020332	0					
ANR	10020437	Argument	"""Assuming 8-bit colormap"""		10020332	1					
ANR	10020438	PrimaryExpression	"""Assuming 8-bit colormap"""		10020332	0					
ANR	10020439	ReturnType	void		10020332	1					
ANR	10020440	Identifier	CheckAndCorrectColormap		10020332	2					
ANR	10020441	ParameterList			10020332	3					
ANR	10020442	CFGEntryNode	ENTRY		10020332		True				
ANR	10020443	CFGExitNode	EXIT		10020332		True				
ANR	10020444	Symbol	* blueMap		10020332						
ANR	10020445	Symbol	greenMap		10020332						
ANR	10020446	Symbol	fileName		10020332						
ANR	10020447	Symbol	colormapSize		10020332						
ANR	10020448	Symbol	* i		10020332						
ANR	10020449	Symbol	i		10020332						
ANR	10020450	Symbol	* greenMap		10020332						
ANR	10020451	Symbol	SCALE		10020332						
ANR	10020452	Symbol	redMap		10020332						
ANR	10020453	Symbol	* redMap		10020332						
ANR	10020454	Symbol	blueMap		10020332						
ANR	10020455	Function	SimpleGammaCorrection	543:0:18092:18806							
ANR	10020456	FunctionDef	SimpleGammaCorrection ()		10020455	0					
ANR	10020457	CompoundStatement		545:0:18121:18806	10020455	0					
ANR	10020458	Statement	register	546:4:18127:18134	10020455	0	True				
ANR	10020459	IdentifierDeclStatement	int i ;	546:13:18136:18141	10020455	1	True				
ANR	10020460	IdentifierDecl	i		10020455	0					
ANR	10020461	IdentifierDeclType	int		10020455	0					
ANR	10020462	Identifier	i		10020455	1					
ANR	10020463	Statement	register	547:4:18147:18154	10020455	2	True				
ANR	10020464	IdentifierDeclStatement	double i_gamma = 1.0 / appData . gamma ;	547:13:18156:18192	10020455	3	True				
ANR	10020465	IdentifierDecl	i_gamma = 1.0 / appData . gamma		10020455	0					
ANR	10020466	IdentifierDeclType	double		10020455	0					
ANR	10020467	Identifier	i_gamma		10020455	1					
ANR	10020468	AssignmentExpression	i_gamma = 1.0 / appData . gamma		10020455	2		=			
ANR	10020469	Identifier	i_gamma		10020455	0					
ANR	10020470	MultiplicativeExpression	1.0 / appData . gamma		10020455	1		/			
ANR	10020471	PrimaryExpression	1.0		10020455	0					
ANR	10020472	MemberAccess	appData . gamma		10020455	1					
ANR	10020473	Identifier	appData		10020455	0					
ANR	10020474	Identifier	gamma		10020455	1					
ANR	10020475	ForStatement	for ( i = 0 ; i < colormapSize ; i ++ )		10020455	4					
ANR	10020476	ForInit	i = 0 ;	549:9:18204:18209	10020455	0	True				
ANR	10020477	AssignmentExpression	i = 0		10020455	0		=			
ANR	10020478	Identifier	i		10020455	0					
ANR	10020479	PrimaryExpression	0		10020455	1					
ANR	10020480	Condition	i < colormapSize	549:16:18211:18226	10020455	1	True				
ANR	10020481	RelationalExpression	i < colormapSize		10020455	0		<			
ANR	10020482	Identifier	i		10020455	0					
ANR	10020483	Identifier	colormapSize		10020455	1					
ANR	10020484	PostIncDecOperationExpression	i ++	549:34:18229:18231	10020455	2	True				
ANR	10020485	Identifier	i		10020455	0					
ANR	10020486	IncDec	++		10020455	1					
ANR	10020487	CompoundStatement		5:39:112:112	10020455	3					
ANR	10020488	IfStatement	if ( ( ( tfPhotometricInterpretation == PHOTOMETRIC_MINISWHITE ) && ( i == colormapSize - 1 ) ) || ( ( tfPhotometricInterpretation == PHOTOMETRIC_MINISBLACK ) && ( i == 0 ) ) )		10020455	0					
ANR	10020489	Condition	( ( tfPhotometricInterpretation == PHOTOMETRIC_MINISWHITE ) && ( i == colormapSize - 1 ) ) || ( ( tfPhotometricInterpretation == PHOTOMETRIC_MINISBLACK ) && ( i == 0 ) )	550:12:18248:18440	10020455	0	True				
ANR	10020490	OrExpression	( ( tfPhotometricInterpretation == PHOTOMETRIC_MINISWHITE ) && ( i == colormapSize - 1 ) ) || ( ( tfPhotometricInterpretation == PHOTOMETRIC_MINISBLACK ) && ( i == 0 ) )		10020455	0		||			
ANR	10020491	AndExpression	( tfPhotometricInterpretation == PHOTOMETRIC_MINISWHITE ) && ( i == colormapSize - 1 )		10020455	0		&&			
ANR	10020492	EqualityExpression	tfPhotometricInterpretation == PHOTOMETRIC_MINISWHITE		10020455	0		==			
ANR	10020493	Identifier	tfPhotometricInterpretation		10020455	0					
ANR	10020494	Identifier	PHOTOMETRIC_MINISWHITE		10020455	1					
ANR	10020495	EqualityExpression	i == colormapSize - 1		10020455	1		==			
ANR	10020496	Identifier	i		10020455	0					
ANR	10020497	AdditiveExpression	colormapSize - 1		10020455	1		-			
ANR	10020498	Identifier	colormapSize		10020455	0					
ANR	10020499	PrimaryExpression	1		10020455	1					
ANR	10020500	AndExpression	( tfPhotometricInterpretation == PHOTOMETRIC_MINISBLACK ) && ( i == 0 )		10020455	1		&&			
ANR	10020501	EqualityExpression	tfPhotometricInterpretation == PHOTOMETRIC_MINISBLACK		10020455	0		==			
ANR	10020502	Identifier	tfPhotometricInterpretation		10020455	0					
ANR	10020503	Identifier	PHOTOMETRIC_MINISBLACK		10020455	1					
ANR	10020504	EqualityExpression	i == 0		10020455	1		==			
ANR	10020505	Identifier	i		10020455	0					
ANR	10020506	PrimaryExpression	0		10020455	1					
ANR	10020507	ExpressionStatement	redMap [ i ] = greenMap [ i ] = blueMap [ i ] = 0	554:12:18455:18495	10020455	1	True				
ANR	10020508	AssignmentExpression	redMap [ i ] = greenMap [ i ] = blueMap [ i ] = 0		10020455	0		=			
ANR	10020509	ArrayIndexing	redMap [ i ]		10020455	0					
ANR	10020510	Identifier	redMap		10020455	0					
ANR	10020511	Identifier	i		10020455	1					
ANR	10020512	AssignmentExpression	greenMap [ i ] = blueMap [ i ] = 0		10020455	1		=			
ANR	10020513	ArrayIndexing	greenMap [ i ]		10020455	0					
ANR	10020514	Identifier	greenMap		10020455	0					
ANR	10020515	Identifier	i		10020455	1					
ANR	10020516	AssignmentExpression	blueMap [ i ] = 0		10020455	1		=			
ANR	10020517	ArrayIndexing	blueMap [ i ]		10020455	0					
ANR	10020518	Identifier	blueMap		10020455	0					
ANR	10020519	Identifier	i		10020455	1					
ANR	10020520	PrimaryExpression	0		10020455	1					
ANR	10020521	ElseStatement	else		10020455	0					
ANR	10020522	CompoundStatement		11:13:388:388	10020455	0					
ANR	10020523	ExpressionStatement	"redMap [ i ] = ROUND ( ( pow ( dRed [ i ] / 65535.0 , i_gamma ) * 65535.0 ) )"	556:12:18524:18586	10020455	0	True				
ANR	10020524	AssignmentExpression	"redMap [ i ] = ROUND ( ( pow ( dRed [ i ] / 65535.0 , i_gamma ) * 65535.0 ) )"		10020455	0		=			
ANR	10020525	ArrayIndexing	redMap [ i ]		10020455	0					
ANR	10020526	Identifier	redMap		10020455	0					
ANR	10020527	Identifier	i		10020455	1					
ANR	10020528	CallExpression	"ROUND ( ( pow ( dRed [ i ] / 65535.0 , i_gamma ) * 65535.0 ) )"		10020455	1					
ANR	10020529	Callee	ROUND		10020455	0					
ANR	10020530	Identifier	ROUND		10020455	0					
ANR	10020531	ArgumentList	"pow ( dRed [ i ] / 65535.0 , i_gamma ) * 65535.0"		10020455	1					
ANR	10020532	Argument	"pow ( dRed [ i ] / 65535.0 , i_gamma ) * 65535.0"		10020455	0					
ANR	10020533	MultiplicativeExpression	"pow ( dRed [ i ] / 65535.0 , i_gamma ) * 65535.0"		10020455	0		*			
ANR	10020534	CallExpression	"pow ( dRed [ i ] / 65535.0 , i_gamma )"		10020455	0					
ANR	10020535	Callee	pow		10020455	0					
ANR	10020536	Identifier	pow		10020455	0					
ANR	10020537	ArgumentList	dRed [ i ] / 65535.0		10020455	1					
ANR	10020538	Argument	dRed [ i ] / 65535.0		10020455	0					
ANR	10020539	MultiplicativeExpression	dRed [ i ] / 65535.0		10020455	0		/			
ANR	10020540	ArrayIndexing	dRed [ i ]		10020455	0					
ANR	10020541	Identifier	dRed		10020455	0					
ANR	10020542	Identifier	i		10020455	1					
ANR	10020543	PrimaryExpression	65535.0		10020455	1					
ANR	10020544	Argument	i_gamma		10020455	1					
ANR	10020545	Identifier	i_gamma		10020455	0					
ANR	10020546	PrimaryExpression	65535.0		10020455	1					
ANR	10020547	ExpressionStatement	"greenMap [ i ] = ROUND ( ( pow ( dGreen [ i ] / 65535.0 , i_gamma ) * 65535.0 ) )"	557:12:18600:18666	10020455	1	True				
ANR	10020548	AssignmentExpression	"greenMap [ i ] = ROUND ( ( pow ( dGreen [ i ] / 65535.0 , i_gamma ) * 65535.0 ) )"		10020455	0		=			
ANR	10020549	ArrayIndexing	greenMap [ i ]		10020455	0					
ANR	10020550	Identifier	greenMap		10020455	0					
ANR	10020551	Identifier	i		10020455	1					
ANR	10020552	CallExpression	"ROUND ( ( pow ( dGreen [ i ] / 65535.0 , i_gamma ) * 65535.0 ) )"		10020455	1					
ANR	10020553	Callee	ROUND		10020455	0					
ANR	10020554	Identifier	ROUND		10020455	0					
ANR	10020555	ArgumentList	"pow ( dGreen [ i ] / 65535.0 , i_gamma ) * 65535.0"		10020455	1					
ANR	10020556	Argument	"pow ( dGreen [ i ] / 65535.0 , i_gamma ) * 65535.0"		10020455	0					
ANR	10020557	MultiplicativeExpression	"pow ( dGreen [ i ] / 65535.0 , i_gamma ) * 65535.0"		10020455	0		*			
ANR	10020558	CallExpression	"pow ( dGreen [ i ] / 65535.0 , i_gamma )"		10020455	0					
ANR	10020559	Callee	pow		10020455	0					
ANR	10020560	Identifier	pow		10020455	0					
ANR	10020561	ArgumentList	dGreen [ i ] / 65535.0		10020455	1					
ANR	10020562	Argument	dGreen [ i ] / 65535.0		10020455	0					
ANR	10020563	MultiplicativeExpression	dGreen [ i ] / 65535.0		10020455	0		/			
ANR	10020564	ArrayIndexing	dGreen [ i ]		10020455	0					
ANR	10020565	Identifier	dGreen		10020455	0					
ANR	10020566	Identifier	i		10020455	1					
ANR	10020567	PrimaryExpression	65535.0		10020455	1					
ANR	10020568	Argument	i_gamma		10020455	1					
ANR	10020569	Identifier	i_gamma		10020455	0					
ANR	10020570	PrimaryExpression	65535.0		10020455	1					
ANR	10020571	ExpressionStatement	"blueMap [ i ] = ROUND ( ( pow ( dBlue [ i ] / 65535.0 , i_gamma ) * 65535.0 ) )"	558:12:18680:18744	10020455	2	True				
ANR	10020572	AssignmentExpression	"blueMap [ i ] = ROUND ( ( pow ( dBlue [ i ] / 65535.0 , i_gamma ) * 65535.0 ) )"		10020455	0		=			
ANR	10020573	ArrayIndexing	blueMap [ i ]		10020455	0					
ANR	10020574	Identifier	blueMap		10020455	0					
ANR	10020575	Identifier	i		10020455	1					
ANR	10020576	CallExpression	"ROUND ( ( pow ( dBlue [ i ] / 65535.0 , i_gamma ) * 65535.0 ) )"		10020455	1					
ANR	10020577	Callee	ROUND		10020455	0					
ANR	10020578	Identifier	ROUND		10020455	0					
ANR	10020579	ArgumentList	"pow ( dBlue [ i ] / 65535.0 , i_gamma ) * 65535.0"		10020455	1					
ANR	10020580	Argument	"pow ( dBlue [ i ] / 65535.0 , i_gamma ) * 65535.0"		10020455	0					
ANR	10020581	MultiplicativeExpression	"pow ( dBlue [ i ] / 65535.0 , i_gamma ) * 65535.0"		10020455	0		*			
ANR	10020582	CallExpression	"pow ( dBlue [ i ] / 65535.0 , i_gamma )"		10020455	0					
ANR	10020583	Callee	pow		10020455	0					
ANR	10020584	Identifier	pow		10020455	0					
ANR	10020585	ArgumentList	dBlue [ i ] / 65535.0		10020455	1					
ANR	10020586	Argument	dBlue [ i ] / 65535.0		10020455	0					
ANR	10020587	MultiplicativeExpression	dBlue [ i ] / 65535.0		10020455	0		/			
ANR	10020588	ArrayIndexing	dBlue [ i ]		10020455	0					
ANR	10020589	Identifier	dBlue		10020455	0					
ANR	10020590	Identifier	i		10020455	1					
ANR	10020591	PrimaryExpression	65535.0		10020455	1					
ANR	10020592	Argument	i_gamma		10020455	1					
ANR	10020593	Identifier	i_gamma		10020455	0					
ANR	10020594	PrimaryExpression	65535.0		10020455	1					
ANR	10020595	ExpressionStatement	free ( dRed )	562:4:18767:18777	10020455	5	True				
ANR	10020596	CallExpression	free ( dRed )		10020455	0					
ANR	10020597	Callee	free		10020455	0					
ANR	10020598	Identifier	free		10020455	0					
ANR	10020599	ArgumentList	dRed		10020455	1					
ANR	10020600	Argument	dRed		10020455	0					
ANR	10020601	Identifier	dRed		10020455	0					
ANR	10020602	ExpressionStatement	free ( dGreen )	562:16:18779:18791	10020455	6	True				
ANR	10020603	CallExpression	free ( dGreen )		10020455	0					
ANR	10020604	Callee	free		10020455	0					
ANR	10020605	Identifier	free		10020455	0					
ANR	10020606	ArgumentList	dGreen		10020455	1					
ANR	10020607	Argument	dGreen		10020455	0					
ANR	10020608	Identifier	dGreen		10020455	0					
ANR	10020609	ExpressionStatement	free ( dBlue )	562:30:18793:18804	10020455	7	True				
ANR	10020610	CallExpression	free ( dBlue )		10020455	0					
ANR	10020611	Callee	free		10020455	0					
ANR	10020612	Identifier	free		10020455	0					
ANR	10020613	ArgumentList	dBlue		10020455	1					
ANR	10020614	Argument	dBlue		10020455	0					
ANR	10020615	Identifier	dBlue		10020455	0					
ANR	10020616	ReturnType	void		10020455	1					
ANR	10020617	Identifier	SimpleGammaCorrection		10020455	2					
ANR	10020618	ParameterList			10020455	3					
ANR	10020619	CFGEntryNode	ENTRY		10020455		True				
ANR	10020620	CFGExitNode	EXIT		10020455		True				
ANR	10020621	Symbol	* blueMap		10020455						
ANR	10020622	Symbol	greenMap		10020455						
ANR	10020623	Symbol	appData . gamma		10020455						
ANR	10020624	Symbol	dRed		10020455						
ANR	10020625	Symbol	ROUND		10020455						
ANR	10020626	Symbol	i		10020455						
ANR	10020627	Symbol	* dBlue		10020455						
ANR	10020628	Symbol	redMap		10020455						
ANR	10020629	Symbol	appData		10020455						
ANR	10020630	Symbol	PHOTOMETRIC_MINISWHITE		10020455						
ANR	10020631	Symbol	* dGreen		10020455						
ANR	10020632	Symbol	blueMap		10020455						
ANR	10020633	Symbol	i_gamma		10020455						
ANR	10020634	Symbol	colormapSize		10020455						
ANR	10020635	Symbol	tfPhotometricInterpretation		10020455						
ANR	10020636	Symbol	* i		10020455						
ANR	10020637	Symbol	pow		10020455						
ANR	10020638	Symbol	* greenMap		10020455						
ANR	10020639	Symbol	PHOTOMETRIC_MINISBLACK		10020455						
ANR	10020640	Symbol	dGreen		10020455						
ANR	10020641	Symbol	* redMap		10020455						
ANR	10020642	Symbol	* dRed		10020455						
ANR	10020643	Symbol	dBlue		10020455						
ANR	10020644	DeclStmt									
ANR	10020645	Decl							char	char * [ ]	classNames
ANR	10020646	Function	GetVisual	578:0:19053:23100							
ANR	10020647	FunctionDef	GetVisual ()		10020646	0					
ANR	10020648	CompoundStatement		580:0:19070:23100	10020646	0					
ANR	10020649	IdentifierDeclStatement	XColor * colors = NULL ;	581:4:19076:19097	10020646	0	True				
ANR	10020650	IdentifierDecl	* colors = NULL		10020646	0					
ANR	10020651	IdentifierDeclType	XColor *		10020646	0					
ANR	10020652	Identifier	colors		10020646	1					
ANR	10020653	AssignmentExpression	* colors = NULL		10020646	2		=			
ANR	10020654	Identifier	NULL		10020646	0					
ANR	10020655	Identifier	NULL		10020646	1					
ANR	10020656	IdentifierDeclStatement	unsigned long * pixels = NULL ;	582:4:19103:19131	10020646	1	True				
ANR	10020657	IdentifierDecl	* pixels = NULL		10020646	0					
ANR	10020658	IdentifierDeclType	unsigned long *		10020646	0					
ANR	10020659	Identifier	pixels		10020646	1					
ANR	10020660	AssignmentExpression	* pixels = NULL		10020646	2		=			
ANR	10020661	Identifier	NULL		10020646	0					
ANR	10020662	Identifier	NULL		10020646	1					
ANR	10020663	IdentifierDeclStatement	unsigned long i ;	583:4:19137:19152	10020646	2	True				
ANR	10020664	IdentifierDecl	i		10020646	0					
ANR	10020665	IdentifierDeclType	unsigned long		10020646	0					
ANR	10020666	Identifier	i		10020646	1					
ANR	10020667	SwitchStatement	switch ( tfImageDepth )		10020646	3					
ANR	10020668	Condition	tfImageDepth	585:12:19167:19178	10020646	0	True				
ANR	10020669	Identifier	tfImageDepth		10020646	0					
ANR	10020670	CompoundStatement		6:26:110:110	10020646	1					
ANR	10020671	Label	case 32 :	590:4:19343:19350	10020646	0	True				
ANR	10020672	Label	case 24 :	591:4:19356:19363	10020646	1	True				
ANR	10020673	IfStatement	"if ( SearchVisualList ( 24 , DirectColor , & xVisual ) == False )"		10020646	2					
ANR	10020674	Condition	"SearchVisualList ( 24 , DirectColor , & xVisual ) == False"	592:12:19377:19428	10020646	0	True				
ANR	10020675	EqualityExpression	"SearchVisualList ( 24 , DirectColor , & xVisual ) == False"		10020646	0		==			
ANR	10020676	CallExpression	"SearchVisualList ( 24 , DirectColor , & xVisual )"		10020646	0					
ANR	10020677	Callee	SearchVisualList		10020646	0					
ANR	10020678	Identifier	SearchVisualList		10020646	0					
ANR	10020679	ArgumentList	24		10020646	1					
ANR	10020680	Argument	24		10020646	0					
ANR	10020681	PrimaryExpression	24		10020646	0					
ANR	10020682	Argument	DirectColor		10020646	1					
ANR	10020683	Identifier	DirectColor		10020646	0					
ANR	10020684	Argument	& xVisual		10020646	2					
ANR	10020685	UnaryOperationExpression	& xVisual		10020646	0					
ANR	10020686	UnaryOperator	&		10020646	0					
ANR	10020687	Identifier	xVisual		10020646	1					
ANR	10020688	Identifier	False		10020646	1					
ANR	10020689	CompoundStatement		13:66:360:360	10020646	1					
ANR	10020690	ExpressionStatement	"fprintf ( stderr , ""xtiff: 24-bit DirectColor visual not available\\n"" )"	593:12:19445:19512	10020646	0	True				
ANR	10020691	CallExpression	"fprintf ( stderr , ""xtiff: 24-bit DirectColor visual not available\\n"" )"		10020646	0					
ANR	10020692	Callee	fprintf		10020646	0					
ANR	10020693	Identifier	fprintf		10020646	0					
ANR	10020694	ArgumentList	stderr		10020646	1					
ANR	10020695	Argument	stderr		10020646	0					
ANR	10020696	Identifier	stderr		10020646	0					
ANR	10020697	Argument	"""xtiff: 24-bit DirectColor visual not available\\n"""		10020646	1					
ANR	10020698	PrimaryExpression	"""xtiff: 24-bit DirectColor visual not available\\n"""		10020646	0					
ANR	10020699	ExpressionStatement	exit ( 0 )	594:12:19526:19533	10020646	1	True				
ANR	10020700	CallExpression	exit ( 0 )		10020646	0					
ANR	10020701	Callee	exit		10020646	0					
ANR	10020702	Identifier	exit		10020646	0					
ANR	10020703	ArgumentList	0		10020646	1					
ANR	10020704	Argument	0		10020646	0					
ANR	10020705	PrimaryExpression	0		10020646	0					
ANR	10020706	ExpressionStatement	colors = ( XColor * ) malloc ( 3 * colormapSize * sizeof ( XColor ) )	597:8:19554:19615	10020646	3	True				
ANR	10020707	AssignmentExpression	colors = ( XColor * ) malloc ( 3 * colormapSize * sizeof ( XColor ) )		10020646	0		=			
ANR	10020708	Identifier	colors		10020646	0					
ANR	10020709	CastExpression	( XColor * ) malloc ( 3 * colormapSize * sizeof ( XColor ) )		10020646	1					
ANR	10020710	CastTarget	XColor *		10020646	0					
ANR	10020711	CallExpression	malloc ( 3 * colormapSize * sizeof ( XColor ) )		10020646	1					
ANR	10020712	Callee	malloc		10020646	0					
ANR	10020713	Identifier	malloc		10020646	0					
ANR	10020714	ArgumentList	3 * colormapSize * sizeof ( XColor )		10020646	1					
ANR	10020715	Argument	3 * colormapSize * sizeof ( XColor )		10020646	0					
ANR	10020716	MultiplicativeExpression	3 * colormapSize * sizeof ( XColor )		10020646	0		*			
ANR	10020717	PrimaryExpression	3		10020646	0					
ANR	10020718	MultiplicativeExpression	colormapSize * sizeof ( XColor )		10020646	1		*			
ANR	10020719	Identifier	colormapSize		10020646	0					
ANR	10020720	SizeofExpression	sizeof ( XColor )		10020646	1					
ANR	10020721	Sizeof	sizeof		10020646	0					
ANR	10020722	SizeofOperand	XColor		10020646	1					
ANR	10020723	ExpressionStatement	MCHECK ( colors )	598:8:19625:19639	10020646	4	True				
ANR	10020724	CallExpression	MCHECK ( colors )		10020646	0					
ANR	10020725	Callee	MCHECK		10020646	0					
ANR	10020726	Identifier	MCHECK		10020646	0					
ANR	10020727	ArgumentList	colors		10020646	1					
ANR	10020728	Argument	colors		10020646	0					
ANR	10020729	Identifier	colors		10020646	0					
ANR	10020730	ForStatement	for ( i = 0 ; i < colormapSize ; i ++ )		10020646	5					
ANR	10020731	ForInit	i = 0 ;	600:13:19655:19660	10020646	0	True				
ANR	10020732	AssignmentExpression	i = 0		10020646	0		=			
ANR	10020733	Identifier	i		10020646	0					
ANR	10020734	PrimaryExpression	0		10020646	1					
ANR	10020735	Condition	i < colormapSize	600:20:19662:19677	10020646	1	True				
ANR	10020736	RelationalExpression	i < colormapSize		10020646	0		<			
ANR	10020737	Identifier	i		10020646	0					
ANR	10020738	Identifier	colormapSize		10020646	1					
ANR	10020739	PostIncDecOperationExpression	i ++	600:38:19680:19682	10020646	2	True				
ANR	10020740	Identifier	i		10020646	0					
ANR	10020741	IncDec	++		10020646	1					
ANR	10020742	CompoundStatement		21:43:614:614	10020646	3					
ANR	10020743	ExpressionStatement	colors [ i ] . pixel = ( i << 16 ) + ( i << 8 ) + i	601:12:19699:19741	10020646	0	True				
ANR	10020744	AssignmentExpression	colors [ i ] . pixel = ( i << 16 ) + ( i << 8 ) + i		10020646	0		=			
ANR	10020745	MemberAccess	colors [ i ] . pixel		10020646	0					
ANR	10020746	ArrayIndexing	colors [ i ]		10020646	0					
ANR	10020747	Identifier	colors		10020646	0					
ANR	10020748	Identifier	i		10020646	1					
ANR	10020749	Identifier	pixel		10020646	1					
ANR	10020750	AdditiveExpression	( i << 16 ) + ( i << 8 ) + i		10020646	1		+			
ANR	10020751	ShiftExpression	i << 16		10020646	0		<<			
ANR	10020752	Identifier	i		10020646	0					
ANR	10020753	PrimaryExpression	16		10020646	1					
ANR	10020754	AdditiveExpression	( i << 8 ) + i		10020646	1		+			
ANR	10020755	ShiftExpression	i << 8		10020646	0		<<			
ANR	10020756	Identifier	i		10020646	0					
ANR	10020757	PrimaryExpression	8		10020646	1					
ANR	10020758	Identifier	i		10020646	1					
ANR	10020759	ExpressionStatement	colors [ i ] . red = redMap [ i ]	602:12:19755:19780	10020646	1	True				
ANR	10020760	AssignmentExpression	colors [ i ] . red = redMap [ i ]		10020646	0		=			
ANR	10020761	MemberAccess	colors [ i ] . red		10020646	0					
ANR	10020762	ArrayIndexing	colors [ i ]		10020646	0					
ANR	10020763	Identifier	colors		10020646	0					
ANR	10020764	Identifier	i		10020646	1					
ANR	10020765	Identifier	red		10020646	1					
ANR	10020766	ArrayIndexing	redMap [ i ]		10020646	1					
ANR	10020767	Identifier	redMap		10020646	0					
ANR	10020768	Identifier	i		10020646	1					
ANR	10020769	ExpressionStatement	colors [ i ] . green = greenMap [ i ]	603:12:19794:19823	10020646	2	True				
ANR	10020770	AssignmentExpression	colors [ i ] . green = greenMap [ i ]		10020646	0		=			
ANR	10020771	MemberAccess	colors [ i ] . green		10020646	0					
ANR	10020772	ArrayIndexing	colors [ i ]		10020646	0					
ANR	10020773	Identifier	colors		10020646	0					
ANR	10020774	Identifier	i		10020646	1					
ANR	10020775	Identifier	green		10020646	1					
ANR	10020776	ArrayIndexing	greenMap [ i ]		10020646	1					
ANR	10020777	Identifier	greenMap		10020646	0					
ANR	10020778	Identifier	i		10020646	1					
ANR	10020779	ExpressionStatement	colors [ i ] . blue = blueMap [ i ]	604:12:19837:19864	10020646	3	True				
ANR	10020780	AssignmentExpression	colors [ i ] . blue = blueMap [ i ]		10020646	0		=			
ANR	10020781	MemberAccess	colors [ i ] . blue		10020646	0					
ANR	10020782	ArrayIndexing	colors [ i ]		10020646	0					
ANR	10020783	Identifier	colors		10020646	0					
ANR	10020784	Identifier	i		10020646	1					
ANR	10020785	Identifier	blue		10020646	1					
ANR	10020786	ArrayIndexing	blueMap [ i ]		10020646	1					
ANR	10020787	Identifier	blueMap		10020646	0					
ANR	10020788	Identifier	i		10020646	1					
ANR	10020789	ExpressionStatement	colors [ i ] . flags = DoRed | DoGreen | DoBlue	605:12:19878:19920	10020646	4	True				
ANR	10020790	AssignmentExpression	colors [ i ] . flags = DoRed | DoGreen | DoBlue		10020646	0		=			
ANR	10020791	MemberAccess	colors [ i ] . flags		10020646	0					
ANR	10020792	ArrayIndexing	colors [ i ]		10020646	0					
ANR	10020793	Identifier	colors		10020646	0					
ANR	10020794	Identifier	i		10020646	1					
ANR	10020795	Identifier	flags		10020646	1					
ANR	10020796	InclusiveOrExpression	DoRed | DoGreen | DoBlue		10020646	1		|			
ANR	10020797	Identifier	DoRed		10020646	0					
ANR	10020798	InclusiveOrExpression	DoGreen | DoBlue		10020646	1		|			
ANR	10020799	Identifier	DoGreen		10020646	0					
ANR	10020800	Identifier	DoBlue		10020646	1					
ANR	10020801	ExpressionStatement	"xColormap = XCreateColormap ( xDisplay , RootWindow ( xDisplay , xScreen ) , xVisual , AllocAll )"	608:8:19941:20040	10020646	6	True				
ANR	10020802	AssignmentExpression	"xColormap = XCreateColormap ( xDisplay , RootWindow ( xDisplay , xScreen ) , xVisual , AllocAll )"		10020646	0		=			
ANR	10020803	Identifier	xColormap		10020646	0					
ANR	10020804	CallExpression	"XCreateColormap ( xDisplay , RootWindow ( xDisplay , xScreen ) , xVisual , AllocAll )"		10020646	1					
ANR	10020805	Callee	XCreateColormap		10020646	0					
ANR	10020806	Identifier	XCreateColormap		10020646	0					
ANR	10020807	ArgumentList	xDisplay		10020646	1					
ANR	10020808	Argument	xDisplay		10020646	0					
ANR	10020809	Identifier	xDisplay		10020646	0					
ANR	10020810	Argument	"RootWindow ( xDisplay , xScreen )"		10020646	1					
ANR	10020811	CallExpression	"RootWindow ( xDisplay , xScreen )"		10020646	0					
ANR	10020812	Callee	RootWindow		10020646	0					
ANR	10020813	Identifier	RootWindow		10020646	0					
ANR	10020814	ArgumentList	xDisplay		10020646	1					
ANR	10020815	Argument	xDisplay		10020646	0					
ANR	10020816	Identifier	xDisplay		10020646	0					
ANR	10020817	Argument	xScreen		10020646	1					
ANR	10020818	Identifier	xScreen		10020646	0					
ANR	10020819	Argument	xVisual		10020646	2					
ANR	10020820	Identifier	xVisual		10020646	0					
ANR	10020821	Argument	AllocAll		10020646	3					
ANR	10020822	Identifier	AllocAll		10020646	0					
ANR	10020823	ExpressionStatement	"XStoreColors ( xDisplay , xColormap , colors , colormapSize )"	610:8:20050:20105	10020646	7	True				
ANR	10020824	CallExpression	"XStoreColors ( xDisplay , xColormap , colors , colormapSize )"		10020646	0					
ANR	10020825	Callee	XStoreColors		10020646	0					
ANR	10020826	Identifier	XStoreColors		10020646	0					
ANR	10020827	ArgumentList	xDisplay		10020646	1					
ANR	10020828	Argument	xDisplay		10020646	0					
ANR	10020829	Identifier	xDisplay		10020646	0					
ANR	10020830	Argument	xColormap		10020646	1					
ANR	10020831	Identifier	xColormap		10020646	0					
ANR	10020832	Argument	colors		10020646	2					
ANR	10020833	Identifier	colors		10020646	0					
ANR	10020834	Argument	colormapSize		10020646	3					
ANR	10020835	Identifier	colormapSize		10020646	0					
ANR	10020836	BreakStatement	break ;	611:8:20115:20120	10020646	8	True				
ANR	10020837	Label	case 8 :	612:4:20126:20132	10020646	9	True				
ANR	10020838	Label	case 4 :	613:4:20138:20144	10020646	10	True				
ANR	10020839	Label	case 2 :	614:4:20150:20156	10020646	11	True				
ANR	10020840	SwitchStatement	switch ( tfPhotometricInterpretation )		10020646	12					
ANR	10020841	Condition	tfPhotometricInterpretation	619:16:20353:20379	10020646	0	True				
ANR	10020842	Identifier	tfPhotometricInterpretation		10020646	0					
ANR	10020843	CompoundStatement		40:45:1311:1311	10020646	1					
ANR	10020844	Label	case PHOTOMETRIC_MINISWHITE :	620:8:20392:20419	10020646	0	True				
ANR	10020845	Identifier	PHOTOMETRIC_MINISWHITE		10020646	0					
ANR	10020846	Label	case PHOTOMETRIC_MINISBLACK :	621:8:20429:20456	10020646	1	True				
ANR	10020847	Identifier	PHOTOMETRIC_MINISBLACK		10020646	0					
ANR	10020848	IfStatement	"if ( SearchVisualList ( ( int ) tfImageDepth , GrayScale , & xVisual ) == True )"		10020646	2					
ANR	10020849	Condition	"SearchVisualList ( ( int ) tfImageDepth , GrayScale , & xVisual ) == True"	622:16:20474:20538	10020646	0	True				
ANR	10020850	EqualityExpression	"SearchVisualList ( ( int ) tfImageDepth , GrayScale , & xVisual ) == True"		10020646	0		==			
ANR	10020851	CallExpression	"SearchVisualList ( ( int ) tfImageDepth , GrayScale , & xVisual )"		10020646	0					
ANR	10020852	Callee	SearchVisualList		10020646	0					
ANR	10020853	Identifier	SearchVisualList		10020646	0					
ANR	10020854	ArgumentList	( int ) tfImageDepth		10020646	1					
ANR	10020855	Argument	( int ) tfImageDepth		10020646	0					
ANR	10020856	CastExpression	( int ) tfImageDepth		10020646	0					
ANR	10020857	CastTarget	int		10020646	0					
ANR	10020858	Identifier	tfImageDepth		10020646	1					
ANR	10020859	Argument	GrayScale		10020646	1					
ANR	10020860	Identifier	GrayScale		10020646	0					
ANR	10020861	Argument	& xVisual		10020646	2					
ANR	10020862	UnaryOperationExpression	& xVisual		10020646	0					
ANR	10020863	UnaryOperator	&		10020646	0					
ANR	10020864	Identifier	xVisual		10020646	1					
ANR	10020865	Identifier	True		10020646	1					
ANR	10020866	BreakStatement	break ;	623:16:20557:20562	10020646	1	True				
ANR	10020867	Label	case PHOTOMETRIC_PALETTE :	624:8:20572:20596	10020646	3	True				
ANR	10020868	Identifier	PHOTOMETRIC_PALETTE		10020646	0					
ANR	10020869	IfStatement	"if ( SearchVisualList ( ( int ) tfImageDepth , PseudoColor , & xVisual ) == True )"		10020646	4					
ANR	10020870	Condition	"SearchVisualList ( ( int ) tfImageDepth , PseudoColor , & xVisual ) == True"	625:16:20614:20680	10020646	0	True				
ANR	10020871	EqualityExpression	"SearchVisualList ( ( int ) tfImageDepth , PseudoColor , & xVisual ) == True"		10020646	0		==			
ANR	10020872	CallExpression	"SearchVisualList ( ( int ) tfImageDepth , PseudoColor , & xVisual )"		10020646	0					
ANR	10020873	Callee	SearchVisualList		10020646	0					
ANR	10020874	Identifier	SearchVisualList		10020646	0					
ANR	10020875	ArgumentList	( int ) tfImageDepth		10020646	1					
ANR	10020876	Argument	( int ) tfImageDepth		10020646	0					
ANR	10020877	CastExpression	( int ) tfImageDepth		10020646	0					
ANR	10020878	CastTarget	int		10020646	0					
ANR	10020879	Identifier	tfImageDepth		10020646	1					
ANR	10020880	Argument	PseudoColor		10020646	1					
ANR	10020881	Identifier	PseudoColor		10020646	0					
ANR	10020882	Argument	& xVisual		10020646	2					
ANR	10020883	UnaryOperationExpression	& xVisual		10020646	0					
ANR	10020884	UnaryOperator	&		10020646	0					
ANR	10020885	Identifier	xVisual		10020646	1					
ANR	10020886	Identifier	True		10020646	1					
ANR	10020887	BreakStatement	break ;	626:16:20699:20704	10020646	1	True				
ANR	10020888	Label	default :	627:8:20714:20721	10020646	5	True				
ANR	10020889	Identifier	default		10020646	0					
ANR	10020890	ExpressionStatement	"fprintf ( stderr , ""xtiff: Unsupported TIFF/X configuration\\n"" )"	628:12:20735:20795	10020646	6	True				
ANR	10020891	CallExpression	"fprintf ( stderr , ""xtiff: Unsupported TIFF/X configuration\\n"" )"		10020646	0					
ANR	10020892	Callee	fprintf		10020646	0					
ANR	10020893	Identifier	fprintf		10020646	0					
ANR	10020894	ArgumentList	stderr		10020646	1					
ANR	10020895	Argument	stderr		10020646	0					
ANR	10020896	Identifier	stderr		10020646	0					
ANR	10020897	Argument	"""xtiff: Unsupported TIFF/X configuration\\n"""		10020646	1					
ANR	10020898	PrimaryExpression	"""xtiff: Unsupported TIFF/X configuration\\n"""		10020646	0					
ANR	10020899	ExpressionStatement	exit ( 0 )	629:12:20809:20816	10020646	7	True				
ANR	10020900	CallExpression	exit ( 0 )		10020646	0					
ANR	10020901	Callee	exit		10020646	0					
ANR	10020902	Identifier	exit		10020646	0					
ANR	10020903	ArgumentList	0		10020646	1					
ANR	10020904	Argument	0		10020646	0					
ANR	10020905	PrimaryExpression	0		10020646	0					
ANR	10020906	ExpressionStatement	colors = ( XColor * ) malloc ( colormapSize * sizeof ( XColor ) )	632:8:20837:20894	10020646	13	True				
ANR	10020907	AssignmentExpression	colors = ( XColor * ) malloc ( colormapSize * sizeof ( XColor ) )		10020646	0		=			
ANR	10020908	Identifier	colors		10020646	0					
ANR	10020909	CastExpression	( XColor * ) malloc ( colormapSize * sizeof ( XColor ) )		10020646	1					
ANR	10020910	CastTarget	XColor *		10020646	0					
ANR	10020911	CallExpression	malloc ( colormapSize * sizeof ( XColor ) )		10020646	1					
ANR	10020912	Callee	malloc		10020646	0					
ANR	10020913	Identifier	malloc		10020646	0					
ANR	10020914	ArgumentList	colormapSize * sizeof ( XColor )		10020646	1					
ANR	10020915	Argument	colormapSize * sizeof ( XColor )		10020646	0					
ANR	10020916	MultiplicativeExpression	colormapSize * sizeof ( XColor )		10020646	0		*			
ANR	10020917	Identifier	colormapSize		10020646	0					
ANR	10020918	SizeofExpression	sizeof ( XColor )		10020646	1					
ANR	10020919	Sizeof	sizeof		10020646	0					
ANR	10020920	SizeofOperand	XColor		10020646	1					
ANR	10020921	ExpressionStatement	MCHECK ( colors )	633:8:20904:20918	10020646	14	True				
ANR	10020922	CallExpression	MCHECK ( colors )		10020646	0					
ANR	10020923	Callee	MCHECK		10020646	0					
ANR	10020924	Identifier	MCHECK		10020646	0					
ANR	10020925	ArgumentList	colors		10020646	1					
ANR	10020926	Argument	colors		10020646	0					
ANR	10020927	Identifier	colors		10020646	0					
ANR	10020928	ForStatement	for ( i = 0 ; i < colormapSize ; i ++ )		10020646	15					
ANR	10020929	ForInit	i = 0 ;	635:13:20934:20939	10020646	0	True				
ANR	10020930	AssignmentExpression	i = 0		10020646	0		=			
ANR	10020931	Identifier	i		10020646	0					
ANR	10020932	PrimaryExpression	0		10020646	1					
ANR	10020933	Condition	i < colormapSize	635:20:20941:20956	10020646	1	True				
ANR	10020934	RelationalExpression	i < colormapSize		10020646	0		<			
ANR	10020935	Identifier	i		10020646	0					
ANR	10020936	Identifier	colormapSize		10020646	1					
ANR	10020937	PostIncDecOperationExpression	i ++	635:38:20959:20961	10020646	2	True				
ANR	10020938	Identifier	i		10020646	0					
ANR	10020939	IncDec	++		10020646	1					
ANR	10020940	CompoundStatement		56:43:1893:1893	10020646	3					
ANR	10020941	ExpressionStatement	colors [ i ] . pixel = i	636:12:20978:20997	10020646	0	True				
ANR	10020942	AssignmentExpression	colors [ i ] . pixel = i		10020646	0		=			
ANR	10020943	MemberAccess	colors [ i ] . pixel		10020646	0					
ANR	10020944	ArrayIndexing	colors [ i ]		10020646	0					
ANR	10020945	Identifier	colors		10020646	0					
ANR	10020946	Identifier	i		10020646	1					
ANR	10020947	Identifier	pixel		10020646	1					
ANR	10020948	Identifier	i		10020646	1					
ANR	10020949	ExpressionStatement	colors [ i ] . red = redMap [ i ]	637:12:21011:21036	10020646	1	True				
ANR	10020950	AssignmentExpression	colors [ i ] . red = redMap [ i ]		10020646	0		=			
ANR	10020951	MemberAccess	colors [ i ] . red		10020646	0					
ANR	10020952	ArrayIndexing	colors [ i ]		10020646	0					
ANR	10020953	Identifier	colors		10020646	0					
ANR	10020954	Identifier	i		10020646	1					
ANR	10020955	Identifier	red		10020646	1					
ANR	10020956	ArrayIndexing	redMap [ i ]		10020646	1					
ANR	10020957	Identifier	redMap		10020646	0					
ANR	10020958	Identifier	i		10020646	1					
ANR	10020959	ExpressionStatement	colors [ i ] . green = greenMap [ i ]	638:12:21050:21079	10020646	2	True				
ANR	10020960	AssignmentExpression	colors [ i ] . green = greenMap [ i ]		10020646	0		=			
ANR	10020961	MemberAccess	colors [ i ] . green		10020646	0					
ANR	10020962	ArrayIndexing	colors [ i ]		10020646	0					
ANR	10020963	Identifier	colors		10020646	0					
ANR	10020964	Identifier	i		10020646	1					
ANR	10020965	Identifier	green		10020646	1					
ANR	10020966	ArrayIndexing	greenMap [ i ]		10020646	1					
ANR	10020967	Identifier	greenMap		10020646	0					
ANR	10020968	Identifier	i		10020646	1					
ANR	10020969	ExpressionStatement	colors [ i ] . blue = blueMap [ i ]	639:12:21093:21120	10020646	3	True				
ANR	10020970	AssignmentExpression	colors [ i ] . blue = blueMap [ i ]		10020646	0		=			
ANR	10020971	MemberAccess	colors [ i ] . blue		10020646	0					
ANR	10020972	ArrayIndexing	colors [ i ]		10020646	0					
ANR	10020973	Identifier	colors		10020646	0					
ANR	10020974	Identifier	i		10020646	1					
ANR	10020975	Identifier	blue		10020646	1					
ANR	10020976	ArrayIndexing	blueMap [ i ]		10020646	1					
ANR	10020977	Identifier	blueMap		10020646	0					
ANR	10020978	Identifier	i		10020646	1					
ANR	10020979	ExpressionStatement	colors [ i ] . flags = DoRed | DoGreen | DoBlue	640:12:21134:21176	10020646	4	True				
ANR	10020980	AssignmentExpression	colors [ i ] . flags = DoRed | DoGreen | DoBlue		10020646	0		=			
ANR	10020981	MemberAccess	colors [ i ] . flags		10020646	0					
ANR	10020982	ArrayIndexing	colors [ i ]		10020646	0					
ANR	10020983	Identifier	colors		10020646	0					
ANR	10020984	Identifier	i		10020646	1					
ANR	10020985	Identifier	flags		10020646	1					
ANR	10020986	InclusiveOrExpression	DoRed | DoGreen | DoBlue		10020646	1		|			
ANR	10020987	Identifier	DoRed		10020646	0					
ANR	10020988	InclusiveOrExpression	DoGreen | DoBlue		10020646	1		|			
ANR	10020989	Identifier	DoGreen		10020646	0					
ANR	10020990	Identifier	DoBlue		10020646	1					
ANR	10020991	IfStatement	if ( tfImageDepth == 8 )		10020646	16					
ANR	10020992	Condition	tfImageDepth == 8	652:12:21704:21720	10020646	0	True				
ANR	10020993	EqualityExpression	tfImageDepth == 8		10020646	0		==			
ANR	10020994	Identifier	tfImageDepth		10020646	0					
ANR	10020995	PrimaryExpression	8		10020646	1					
ANR	10020996	ExpressionStatement	"xColormap = XCreateColormap ( xDisplay , RootWindow ( xDisplay , xScreen ) , xVisual , AllocAll )"	653:12:21735:21838	10020646	1	True				
ANR	10020997	AssignmentExpression	"xColormap = XCreateColormap ( xDisplay , RootWindow ( xDisplay , xScreen ) , xVisual , AllocAll )"		10020646	0		=			
ANR	10020998	Identifier	xColormap		10020646	0					
ANR	10020999	CallExpression	"XCreateColormap ( xDisplay , RootWindow ( xDisplay , xScreen ) , xVisual , AllocAll )"		10020646	1					
ANR	10021000	Callee	XCreateColormap		10020646	0					
ANR	10021001	Identifier	XCreateColormap		10020646	0					
ANR	10021002	ArgumentList	xDisplay		10020646	1					
ANR	10021003	Argument	xDisplay		10020646	0					
ANR	10021004	Identifier	xDisplay		10020646	0					
ANR	10021005	Argument	"RootWindow ( xDisplay , xScreen )"		10020646	1					
ANR	10021006	CallExpression	"RootWindow ( xDisplay , xScreen )"		10020646	0					
ANR	10021007	Callee	RootWindow		10020646	0					
ANR	10021008	Identifier	RootWindow		10020646	0					
ANR	10021009	ArgumentList	xDisplay		10020646	1					
ANR	10021010	Argument	xDisplay		10020646	0					
ANR	10021011	Identifier	xDisplay		10020646	0					
ANR	10021012	Argument	xScreen		10020646	1					
ANR	10021013	Identifier	xScreen		10020646	0					
ANR	10021014	Argument	xVisual		10020646	2					
ANR	10021015	Identifier	xVisual		10020646	0					
ANR	10021016	Argument	AllocAll		10020646	3					
ANR	10021017	Identifier	AllocAll		10020646	0					
ANR	10021018	ElseStatement	else		10020646	0					
ANR	10021019	CompoundStatement		76:13:2782:2782	10020646	0					
ANR	10021020	ExpressionStatement	"xColormap = XCreateColormap ( xDisplay , RootWindow ( xDisplay , xScreen ) , xVisual , AllocNone )"	656:12:21867:21971	10020646	0	True				
ANR	10021021	AssignmentExpression	"xColormap = XCreateColormap ( xDisplay , RootWindow ( xDisplay , xScreen ) , xVisual , AllocNone )"		10020646	0		=			
ANR	10021022	Identifier	xColormap		10020646	0					
ANR	10021023	CallExpression	"XCreateColormap ( xDisplay , RootWindow ( xDisplay , xScreen ) , xVisual , AllocNone )"		10020646	1					
ANR	10021024	Callee	XCreateColormap		10020646	0					
ANR	10021025	Identifier	XCreateColormap		10020646	0					
ANR	10021026	ArgumentList	xDisplay		10020646	1					
ANR	10021027	Argument	xDisplay		10020646	0					
ANR	10021028	Identifier	xDisplay		10020646	0					
ANR	10021029	Argument	"RootWindow ( xDisplay , xScreen )"		10020646	1					
ANR	10021030	CallExpression	"RootWindow ( xDisplay , xScreen )"		10020646	0					
ANR	10021031	Callee	RootWindow		10020646	0					
ANR	10021032	Identifier	RootWindow		10020646	0					
ANR	10021033	ArgumentList	xDisplay		10020646	1					
ANR	10021034	Argument	xDisplay		10020646	0					
ANR	10021035	Identifier	xDisplay		10020646	0					
ANR	10021036	Argument	xScreen		10020646	1					
ANR	10021037	Identifier	xScreen		10020646	0					
ANR	10021038	Argument	xVisual		10020646	2					
ANR	10021039	Identifier	xVisual		10020646	0					
ANR	10021040	Argument	AllocNone		10020646	3					
ANR	10021041	Identifier	AllocNone		10020646	0					
ANR	10021042	ExpressionStatement	pixels = ( unsigned long * ) malloc ( colormapSize * sizeof ( unsigned long ) )	658:12:21985:22072	10020646	1	True				
ANR	10021043	AssignmentExpression	pixels = ( unsigned long * ) malloc ( colormapSize * sizeof ( unsigned long ) )		10020646	0		=			
ANR	10021044	Identifier	pixels		10020646	0					
ANR	10021045	CastExpression	( unsigned long * ) malloc ( colormapSize * sizeof ( unsigned long ) )		10020646	1					
ANR	10021046	CastTarget	unsigned long *		10020646	0					
ANR	10021047	CallExpression	malloc ( colormapSize * sizeof ( unsigned long ) )		10020646	1					
ANR	10021048	Callee	malloc		10020646	0					
ANR	10021049	Identifier	malloc		10020646	0					
ANR	10021050	ArgumentList	colormapSize * sizeof ( unsigned long )		10020646	1					
ANR	10021051	Argument	colormapSize * sizeof ( unsigned long )		10020646	0					
ANR	10021052	MultiplicativeExpression	colormapSize * sizeof ( unsigned long )		10020646	0		*			
ANR	10021053	Identifier	colormapSize		10020646	0					
ANR	10021054	SizeofExpression	sizeof ( unsigned long )		10020646	1					
ANR	10021055	Sizeof	sizeof		10020646	0					
ANR	10021056	SizeofOperand	unsigned long		10020646	1					
ANR	10021057	ExpressionStatement	MCHECK ( pixels )	660:12:22086:22100	10020646	2	True				
ANR	10021058	CallExpression	MCHECK ( pixels )		10020646	0					
ANR	10021059	Callee	MCHECK		10020646	0					
ANR	10021060	Identifier	MCHECK		10020646	0					
ANR	10021061	ArgumentList	pixels		10020646	1					
ANR	10021062	Argument	pixels		10020646	0					
ANR	10021063	Identifier	pixels		10020646	0					
ANR	10021064	ExpressionStatement	"( void ) XAllocColorCells ( xDisplay , xColormap , True , NULL , 0 , pixels , colormapSize )"	661:12:22114:22211	10020646	3	True				
ANR	10021065	CastExpression	"( void ) XAllocColorCells ( xDisplay , xColormap , True , NULL , 0 , pixels , colormapSize )"		10020646	0					
ANR	10021066	CastTarget	void		10020646	0					
ANR	10021067	CallExpression	"XAllocColorCells ( xDisplay , xColormap , True , NULL , 0 , pixels , colormapSize )"		10020646	1					
ANR	10021068	Callee	XAllocColorCells		10020646	0					
ANR	10021069	Identifier	XAllocColorCells		10020646	0					
ANR	10021070	ArgumentList	xDisplay		10020646	1					
ANR	10021071	Argument	xDisplay		10020646	0					
ANR	10021072	Identifier	xDisplay		10020646	0					
ANR	10021073	Argument	xColormap		10020646	1					
ANR	10021074	Identifier	xColormap		10020646	0					
ANR	10021075	Argument	True		10020646	2					
ANR	10021076	Identifier	True		10020646	0					
ANR	10021077	Argument	NULL		10020646	3					
ANR	10021078	Identifier	NULL		10020646	0					
ANR	10021079	Argument	0		10020646	4					
ANR	10021080	PrimaryExpression	0		10020646	0					
ANR	10021081	Argument	pixels		10020646	5					
ANR	10021082	Identifier	pixels		10020646	0					
ANR	10021083	Argument	colormapSize		10020646	6					
ANR	10021084	Identifier	colormapSize		10020646	0					
ANR	10021085	ExpressionStatement	basePixel = ( unsigned char ) pixels [ 0 ]	663:12:22225:22262	10020646	4	True				
ANR	10021086	AssignmentExpression	basePixel = ( unsigned char ) pixels [ 0 ]		10020646	0		=			
ANR	10021087	Identifier	basePixel		10020646	0					
ANR	10021088	CastExpression	( unsigned char ) pixels [ 0 ]		10020646	1					
ANR	10021089	CastTarget	unsigned char		10020646	0					
ANR	10021090	ArrayIndexing	pixels [ 0 ]		10020646	1					
ANR	10021091	Identifier	pixels		10020646	0					
ANR	10021092	PrimaryExpression	0		10020646	1					
ANR	10021093	ExpressionStatement	free ( pixels )	664:12:22276:22288	10020646	5	True				
ANR	10021094	CallExpression	free ( pixels )		10020646	0					
ANR	10021095	Callee	free		10020646	0					
ANR	10021096	Identifier	free		10020646	0					
ANR	10021097	ArgumentList	pixels		10020646	1					
ANR	10021098	Argument	pixels		10020646	0					
ANR	10021099	Identifier	pixels		10020646	0					
ANR	10021100	ExpressionStatement	"XStoreColors ( xDisplay , xColormap , colors , colormapSize )"	666:8:22308:22363	10020646	17	True				
ANR	10021101	CallExpression	"XStoreColors ( xDisplay , xColormap , colors , colormapSize )"		10020646	0					
ANR	10021102	Callee	XStoreColors		10020646	0					
ANR	10021103	Identifier	XStoreColors		10020646	0					
ANR	10021104	ArgumentList	xDisplay		10020646	1					
ANR	10021105	Argument	xDisplay		10020646	0					
ANR	10021106	Identifier	xDisplay		10020646	0					
ANR	10021107	Argument	xColormap		10020646	1					
ANR	10021108	Identifier	xColormap		10020646	0					
ANR	10021109	Argument	colors		10020646	2					
ANR	10021110	Identifier	colors		10020646	0					
ANR	10021111	Argument	colormapSize		10020646	3					
ANR	10021112	Identifier	colormapSize		10020646	0					
ANR	10021113	BreakStatement	break ;	667:8:22373:22378	10020646	18	True				
ANR	10021114	Label	case 1 :	668:4:22384:22390	10020646	19	True				
ANR	10021115	ExpressionStatement	xImageDepth = 1	669:8:22400:22415	10020646	20	True				
ANR	10021116	AssignmentExpression	xImageDepth = 1		10020646	0		=			
ANR	10021117	Identifier	xImageDepth		10020646	0					
ANR	10021118	PrimaryExpression	1		10020646	1					
ANR	10021119	ExpressionStatement	"xVisual = DefaultVisual ( xDisplay , xScreen )"	670:8:22425:22467	10020646	21	True				
ANR	10021120	AssignmentExpression	"xVisual = DefaultVisual ( xDisplay , xScreen )"		10020646	0		=			
ANR	10021121	Identifier	xVisual		10020646	0					
ANR	10021122	CallExpression	"DefaultVisual ( xDisplay , xScreen )"		10020646	1					
ANR	10021123	Callee	DefaultVisual		10020646	0					
ANR	10021124	Identifier	DefaultVisual		10020646	0					
ANR	10021125	ArgumentList	xDisplay		10020646	1					
ANR	10021126	Argument	xDisplay		10020646	0					
ANR	10021127	Identifier	xDisplay		10020646	0					
ANR	10021128	Argument	xScreen		10020646	1					
ANR	10021129	Identifier	xScreen		10020646	0					
ANR	10021130	ExpressionStatement	"xColormap = DefaultColormap ( xDisplay , xScreen )"	671:8:22477:22523	10020646	22	True				
ANR	10021131	AssignmentExpression	"xColormap = DefaultColormap ( xDisplay , xScreen )"		10020646	0		=			
ANR	10021132	Identifier	xColormap		10020646	0					
ANR	10021133	CallExpression	"DefaultColormap ( xDisplay , xScreen )"		10020646	1					
ANR	10021134	Callee	DefaultColormap		10020646	0					
ANR	10021135	Identifier	DefaultColormap		10020646	0					
ANR	10021136	ArgumentList	xDisplay		10020646	1					
ANR	10021137	Argument	xDisplay		10020646	0					
ANR	10021138	Identifier	xDisplay		10020646	0					
ANR	10021139	Argument	xScreen		10020646	1					
ANR	10021140	Identifier	xScreen		10020646	0					
ANR	10021141	BreakStatement	break ;	672:8:22533:22538	10020646	23	True				
ANR	10021142	Label	default :	673:4:22544:22551	10020646	24	True				
ANR	10021143	Identifier	default		10020646	0					
ANR	10021144	ExpressionStatement	"fprintf ( stderr , ""xtiff: unsupported image depth %d\\n"" , tfImageDepth )"	674:8:22561:22629	10020646	25	True				
ANR	10021145	CallExpression	"fprintf ( stderr , ""xtiff: unsupported image depth %d\\n"" , tfImageDepth )"		10020646	0					
ANR	10021146	Callee	fprintf		10020646	0					
ANR	10021147	Identifier	fprintf		10020646	0					
ANR	10021148	ArgumentList	stderr		10020646	1					
ANR	10021149	Argument	stderr		10020646	0					
ANR	10021150	Identifier	stderr		10020646	0					
ANR	10021151	Argument	"""xtiff: unsupported image depth %d\\n"""		10020646	1					
ANR	10021152	PrimaryExpression	"""xtiff: unsupported image depth %d\\n"""		10020646	0					
ANR	10021153	Argument	tfImageDepth		10020646	2					
ANR	10021154	Identifier	tfImageDepth		10020646	0					
ANR	10021155	ExpressionStatement	exit ( 0 )	675:8:22639:22646	10020646	26	True				
ANR	10021156	CallExpression	exit ( 0 )		10020646	0					
ANR	10021157	Callee	exit		10020646	0					
ANR	10021158	Identifier	exit		10020646	0					
ANR	10021159	ArgumentList	0		10020646	1					
ANR	10021160	Argument	0		10020646	0					
ANR	10021161	PrimaryExpression	0		10020646	0					
ANR	10021162	IfStatement	if ( appData . verbose == True )		10020646	4					
ANR	10021163	Condition	appData . verbose == True	678:8:22663:22685	10020646	0	True				
ANR	10021164	EqualityExpression	appData . verbose == True		10020646	0		==			
ANR	10021165	MemberAccess	appData . verbose		10020646	0					
ANR	10021166	Identifier	appData		10020646	0					
ANR	10021167	Identifier	verbose		10020646	1					
ANR	10021168	Identifier	True		10020646	1					
ANR	10021169	Statement	fprintf	679:1:22689:22695	10020646	1	True				
ANR	10021170	Statement	(	679:8:22696:22696	10020646	5	True				
ANR	10021171	Statement	stderr	679:9:22697:22702	10020646	6	True				
ANR	10021172	Statement	","	679:15:22703:22703	10020646	7	True				
ANR	10021173	Statement	"""%s: Using %d-bit %s visual.\\n"""	679:17:22705:22735	10020646	8	True				
ANR	10021174	Statement	","	679:48:22736:22736	10020646	9	True				
ANR	10021175	Statement	fileName	680:5:22743:22750	10020646	10	True				
ANR	10021176	Statement	","	680:13:22751:22751	10020646	11	True				
ANR	10021177	Statement	xImageDepth	680:15:22753:22763	10020646	12	True				
ANR	10021178	Statement	","	680:26:22764:22764	10020646	13	True				
ANR	10021179	Statement	classNames	680:28:22766:22775	10020646	14	True				
ANR	10021180	Statement	[	680:38:22776:22776	10020646	15	True				
ANR	10021181	Statement	xVisual	680:39:22777:22783	10020646	16	True				
ANR	10021182	Statement	->	680:46:22784:22785	10020646	17	True				
ANR	10021183	Statement	class	680:48:22786:22790	10020646	18	True				
ANR	10021184	Statement	]	680:53:22791:22791	10020646	19	True				
ANR	10021185	Statement	)	680:54:22792:22792	10020646	20	True				
ANR	10021186	ExpressionStatement		680:55:22793:22793	10020646	21	True				
ANR	10021187	IfStatement	if ( colors != NULL )		10020646	22					
ANR	10021188	Condition	colors != NULL	682:8:22804:22817	10020646	0	True				
ANR	10021189	EqualityExpression	colors != NULL		10020646	0		!=			
ANR	10021190	Identifier	colors		10020646	0					
ANR	10021191	Identifier	NULL		10020646	1					
ANR	10021192	ExpressionStatement	free ( colors )	683:8:22828:22840	10020646	1	True				
ANR	10021193	CallExpression	free ( colors )		10020646	0					
ANR	10021194	Callee	free		10020646	0					
ANR	10021195	Identifier	free		10020646	0					
ANR	10021196	ArgumentList	colors		10020646	1					
ANR	10021197	Argument	colors		10020646	0					
ANR	10021198	Identifier	colors		10020646	0					
ANR	10021199	IfStatement	if ( grayMap != NULL )		10020646	23					
ANR	10021200	Condition	grayMap != NULL	684:8:22850:22864	10020646	0	True				
ANR	10021201	EqualityExpression	grayMap != NULL		10020646	0		!=			
ANR	10021202	Identifier	grayMap		10020646	0					
ANR	10021203	Identifier	NULL		10020646	1					
ANR	10021204	ExpressionStatement	free ( grayMap )	685:8:22875:22888	10020646	1	True				
ANR	10021205	CallExpression	free ( grayMap )		10020646	0					
ANR	10021206	Callee	free		10020646	0					
ANR	10021207	Identifier	free		10020646	0					
ANR	10021208	ArgumentList	grayMap		10020646	1					
ANR	10021209	Argument	grayMap		10020646	0					
ANR	10021210	Identifier	grayMap		10020646	0					
ANR	10021211	IfStatement	if ( redMap != NULL )		10020646	24					
ANR	10021212	Condition	redMap != NULL	686:8:22898:22911	10020646	0	True				
ANR	10021213	EqualityExpression	redMap != NULL		10020646	0		!=			
ANR	10021214	Identifier	redMap		10020646	0					
ANR	10021215	Identifier	NULL		10020646	1					
ANR	10021216	ExpressionStatement	free ( redMap )	687:8:22922:22934	10020646	1	True				
ANR	10021217	CallExpression	free ( redMap )		10020646	0					
ANR	10021218	Callee	free		10020646	0					
ANR	10021219	Identifier	free		10020646	0					
ANR	10021220	ArgumentList	redMap		10020646	1					
ANR	10021221	Argument	redMap		10020646	0					
ANR	10021222	Identifier	redMap		10020646	0					
ANR	10021223	IfStatement	if ( greenMap != NULL )		10020646	25					
ANR	10021224	Condition	greenMap != NULL	688:8:22944:22959	10020646	0	True				
ANR	10021225	EqualityExpression	greenMap != NULL		10020646	0		!=			
ANR	10021226	Identifier	greenMap		10020646	0					
ANR	10021227	Identifier	NULL		10020646	1					
ANR	10021228	ExpressionStatement	free ( greenMap )	689:8:22970:22984	10020646	1	True				
ANR	10021229	CallExpression	free ( greenMap )		10020646	0					
ANR	10021230	Callee	free		10020646	0					
ANR	10021231	Identifier	free		10020646	0					
ANR	10021232	ArgumentList	greenMap		10020646	1					
ANR	10021233	Argument	greenMap		10020646	0					
ANR	10021234	Identifier	greenMap		10020646	0					
ANR	10021235	IfStatement	if ( blueMap != NULL )		10020646	26					
ANR	10021236	Condition	blueMap != NULL	690:8:22994:23008	10020646	0	True				
ANR	10021237	EqualityExpression	blueMap != NULL		10020646	0		!=			
ANR	10021238	Identifier	blueMap		10020646	0					
ANR	10021239	Identifier	NULL		10020646	1					
ANR	10021240	ExpressionStatement	free ( blueMap )	691:8:23019:23032	10020646	1	True				
ANR	10021241	CallExpression	free ( blueMap )		10020646	0					
ANR	10021242	Callee	free		10020646	0					
ANR	10021243	Identifier	free		10020646	0					
ANR	10021244	ArgumentList	blueMap		10020646	1					
ANR	10021245	Argument	blueMap		10020646	0					
ANR	10021246	Identifier	blueMap		10020646	0					
ANR	10021247	ExpressionStatement	colors = NULL	693:4:23039:23052	10020646	27	True				
ANR	10021248	AssignmentExpression	colors = NULL		10020646	0		=			
ANR	10021249	Identifier	colors		10020646	0					
ANR	10021250	Identifier	NULL		10020646	1					
ANR	10021251	ExpressionStatement	grayMap = redMap = greenMap = blueMap = NULL	693:19:23054:23098	10020646	28	True				
ANR	10021252	AssignmentExpression	grayMap = redMap = greenMap = blueMap = NULL		10020646	0		=			
ANR	10021253	Identifier	grayMap		10020646	0					
ANR	10021254	AssignmentExpression	redMap = greenMap = blueMap = NULL		10020646	1		=			
ANR	10021255	Identifier	redMap		10020646	0					
ANR	10021256	AssignmentExpression	greenMap = blueMap = NULL		10020646	1		=			
ANR	10021257	Identifier	greenMap		10020646	0					
ANR	10021258	AssignmentExpression	blueMap = NULL		10020646	1		=			
ANR	10021259	Identifier	blueMap		10020646	0					
ANR	10021260	Identifier	NULL		10020646	1					
ANR	10021261	ReturnType	void		10020646	1					
ANR	10021262	Identifier	GetVisual		10020646	2					
ANR	10021263	ParameterList			10020646	3					
ANR	10021264	CFGEntryNode	ENTRY		10020646		True				
ANR	10021265	CFGExitNode	EXIT		10020646		True				
ANR	10021266	Symbol	xDisplay		10020646						
ANR	10021267	Symbol	grayMap		10020646						
ANR	10021268	Symbol	* blueMap		10020646						
ANR	10021269	Symbol	xColormap		10020646						
ANR	10021270	Symbol	xImageDepth		10020646						
ANR	10021271	Symbol	True		10020646						
ANR	10021272	Symbol	RootWindow		10020646						
ANR	10021273	Symbol	False		10020646						
ANR	10021274	Symbol	redMap		10020646						
ANR	10021275	Symbol	colors		10020646						
ANR	10021276	Symbol	appData		10020646						
ANR	10021277	Symbol	colors [ i ] . flags		10020646						
ANR	10021278	Symbol	* colors		10020646						
ANR	10021279	Symbol	colormapSize		10020646						
ANR	10021280	Symbol	DirectColor		10020646						
ANR	10021281	Symbol	basePixel		10020646						
ANR	10021282	Symbol	tfImageDepth		10020646						
ANR	10021283	Symbol	DoRed		10020646						
ANR	10021284	Symbol	XCreateColormap		10020646						
ANR	10021285	Symbol	* greenMap		10020646						
ANR	10021286	Symbol	DoBlue		10020646						
ANR	10021287	Symbol	malloc		10020646						
ANR	10021288	Symbol	greenMap		10020646						
ANR	10021289	Symbol	NULL		10020646						
ANR	10021290	Symbol	colors [ i ] . green		10020646						
ANR	10021291	Symbol	& xVisual		10020646						
ANR	10021292	Symbol	colors [ i ] . pixel		10020646						
ANR	10021293	Symbol	colors [ i ] . blue		10020646						
ANR	10021294	Symbol	i		10020646						
ANR	10021295	Symbol	colors [ i ] . red		10020646						
ANR	10021296	Symbol	DefaultColormap		10020646						
ANR	10021297	Symbol	stderr		10020646						
ANR	10021298	Symbol	AllocAll		10020646						
ANR	10021299	Symbol	blueMap		10020646						
ANR	10021300	Symbol	AllocNone		10020646						
ANR	10021301	Symbol	DefaultVisual		10020646						
ANR	10021302	Symbol	GrayScale		10020646						
ANR	10021303	Symbol	xVisual		10020646						
ANR	10021304	Symbol	xScreen		10020646						
ANR	10021305	Symbol	pixels		10020646						
ANR	10021306	Symbol	* i		10020646						
ANR	10021307	Symbol	tfPhotometricInterpretation		10020646						
ANR	10021308	Symbol	* pixels		10020646						
ANR	10021309	Symbol	appData . verbose		10020646						
ANR	10021310	Symbol	SearchVisualList		10020646						
ANR	10021311	Symbol	DoGreen		10020646						
ANR	10021312	Symbol	PseudoColor		10020646						
ANR	10021313	Symbol	* redMap		10020646						
ANR	10021314	DeclStmt									
ANR	10021315	Decl							int	int	image_depth
ANR	10021316	Decl							int	int	visual_class
ANR	10021317	DeclStmt									
ANR	10021318	Decl							Visual	Visual * *	visual
ANR	10021319	DeclStmt									
ANR	10021320	Decl							XVisualInfo	XVisualInfo	template_visual
ANR	10021321	Decl							XVisualInfo	XVisualInfo *	visual_list
ANR	10021322	Decl							XVisualInfo	XVisualInfo *	vl
ANR	10021323	DeclStmt									
ANR	10021324	Decl							int	int	i
ANR	10021325	Decl							int	int	n_visuals
ANR	10021326	Function	GetTIFFImage	736:0:24328:30214							
ANR	10021327	FunctionDef	GetTIFFImage ()		10021326	0					
ANR	10021328	CompoundStatement		738:0:24348:30214	10021326	0					
ANR	10021329	IdentifierDeclStatement	"int pixel_map [ 3 ] , red_shift , green_shift , blue_shift ;"	739:4:24354:24406	10021326	0	True				
ANR	10021330	IdentifierDecl	pixel_map [ 3 ]		10021326	0					
ANR	10021331	IdentifierDeclType	int [ 3 ]		10021326	0					
ANR	10021332	Identifier	pixel_map		10021326	1					
ANR	10021333	PrimaryExpression	3		10021326	2					
ANR	10021334	IdentifierDecl	red_shift		10021326	1					
ANR	10021335	IdentifierDeclType	int		10021326	0					
ANR	10021336	Identifier	red_shift		10021326	1					
ANR	10021337	IdentifierDecl	green_shift		10021326	2					
ANR	10021338	IdentifierDeclType	int		10021326	0					
ANR	10021339	Identifier	green_shift		10021326	1					
ANR	10021340	IdentifierDecl	blue_shift		10021326	3					
ANR	10021341	IdentifierDeclType	int		10021326	0					
ANR	10021342	Identifier	blue_shift		10021326	1					
ANR	10021343	IdentifierDeclStatement	"char * scan_line , * output_p , * input_p ;"	740:4:24412:24448	10021326	1	True				
ANR	10021344	IdentifierDecl	* scan_line		10021326	0					
ANR	10021345	IdentifierDeclType	char *		10021326	0					
ANR	10021346	Identifier	scan_line		10021326	1					
ANR	10021347	IdentifierDecl	* output_p		10021326	1					
ANR	10021348	IdentifierDeclType	char *		10021326	0					
ANR	10021349	Identifier	output_p		10021326	1					
ANR	10021350	IdentifierDecl	* input_p		10021326	2					
ANR	10021351	IdentifierDeclType	char *		10021326	0					
ANR	10021352	Identifier	input_p		10021326	1					
ANR	10021353	IdentifierDeclStatement	"uint32 i , j ;"	741:4:24454:24465	10021326	2	True				
ANR	10021354	IdentifierDecl	i		10021326	0					
ANR	10021355	IdentifierDeclType	uint32		10021326	0					
ANR	10021356	Identifier	i		10021326	1					
ANR	10021357	IdentifierDecl	j		10021326	1					
ANR	10021358	IdentifierDeclType	uint32		10021326	0					
ANR	10021359	Identifier	j		10021326	1					
ANR	10021360	IdentifierDeclStatement	uint16 s ;	742:4:24471:24479	10021326	3	True				
ANR	10021361	IdentifierDecl	s		10021326	0					
ANR	10021362	IdentifierDeclType	uint16		10021326	0					
ANR	10021363	Identifier	s		10021326	1					
ANR	10021364	ExpressionStatement	scan_line = ( char * ) malloc ( tfBytesPerRow = TIFFScanlineSize ( tfFile ) )	744:4:24486:24555	10021326	4	True				
ANR	10021365	AssignmentExpression	scan_line = ( char * ) malloc ( tfBytesPerRow = TIFFScanlineSize ( tfFile ) )		10021326	0		=			
ANR	10021366	Identifier	scan_line		10021326	0					
ANR	10021367	CastExpression	( char * ) malloc ( tfBytesPerRow = TIFFScanlineSize ( tfFile ) )		10021326	1					
ANR	10021368	CastTarget	char *		10021326	0					
ANR	10021369	CallExpression	malloc ( tfBytesPerRow = TIFFScanlineSize ( tfFile ) )		10021326	1					
ANR	10021370	Callee	malloc		10021326	0					
ANR	10021371	Identifier	malloc		10021326	0					
ANR	10021372	ArgumentList	tfBytesPerRow = TIFFScanlineSize ( tfFile )		10021326	1					
ANR	10021373	Argument	tfBytesPerRow = TIFFScanlineSize ( tfFile )		10021326	0					
ANR	10021374	AssignmentExpression	tfBytesPerRow = TIFFScanlineSize ( tfFile )		10021326	0		=			
ANR	10021375	Identifier	tfBytesPerRow		10021326	0					
ANR	10021376	CallExpression	TIFFScanlineSize ( tfFile )		10021326	1					
ANR	10021377	Callee	TIFFScanlineSize		10021326	0					
ANR	10021378	Identifier	TIFFScanlineSize		10021326	0					
ANR	10021379	ArgumentList	tfFile		10021326	1					
ANR	10021380	Argument	tfFile		10021326	0					
ANR	10021381	Identifier	tfFile		10021326	0					
ANR	10021382	ExpressionStatement	MCHECK ( scan_line )	745:4:24561:24578	10021326	5	True				
ANR	10021383	CallExpression	MCHECK ( scan_line )		10021326	0					
ANR	10021384	Callee	MCHECK		10021326	0					
ANR	10021385	Identifier	MCHECK		10021326	0					
ANR	10021386	ArgumentList	scan_line		10021326	1					
ANR	10021387	Argument	scan_line		10021326	0					
ANR	10021388	Identifier	scan_line		10021326	0					
ANR	10021389	IfStatement	if ( ( tfImageDepth == 32 ) || ( tfImageDepth == 24 ) )		10021326	6					
ANR	10021390	Condition	( tfImageDepth == 32 ) || ( tfImageDepth == 24 )	747:8:24589:24632	10021326	0	True				
ANR	10021391	OrExpression	( tfImageDepth == 32 ) || ( tfImageDepth == 24 )		10021326	0		||			
ANR	10021392	EqualityExpression	tfImageDepth == 32		10021326	0		==			
ANR	10021393	Identifier	tfImageDepth		10021326	0					
ANR	10021394	PrimaryExpression	32		10021326	1					
ANR	10021395	EqualityExpression	tfImageDepth == 24		10021326	1		==			
ANR	10021396	Identifier	tfImageDepth		10021326	0					
ANR	10021397	PrimaryExpression	24		10021326	1					
ANR	10021398	CompoundStatement		10:54:286:286	10021326	1					
ANR	10021399	ExpressionStatement	output_p = imageMemory = ( char * ) malloc ( tfImageWidth * tfImageHeight * 4 )	748:8:24645:24731	10021326	0	True				
ANR	10021400	AssignmentExpression	output_p = imageMemory = ( char * ) malloc ( tfImageWidth * tfImageHeight * 4 )		10021326	0		=			
ANR	10021401	Identifier	output_p		10021326	0					
ANR	10021402	AssignmentExpression	imageMemory = ( char * ) malloc ( tfImageWidth * tfImageHeight * 4 )		10021326	1		=			
ANR	10021403	Identifier	imageMemory		10021326	0					
ANR	10021404	CastExpression	( char * ) malloc ( tfImageWidth * tfImageHeight * 4 )		10021326	1					
ANR	10021405	CastTarget	char *		10021326	0					
ANR	10021406	CallExpression	malloc ( tfImageWidth * tfImageHeight * 4 )		10021326	1					
ANR	10021407	Callee	malloc		10021326	0					
ANR	10021408	Identifier	malloc		10021326	0					
ANR	10021409	ArgumentList	tfImageWidth * tfImageHeight * 4		10021326	1					
ANR	10021410	Argument	tfImageWidth * tfImageHeight * 4		10021326	0					
ANR	10021411	MultiplicativeExpression	tfImageWidth * tfImageHeight * 4		10021326	0		*			
ANR	10021412	Identifier	tfImageWidth		10021326	0					
ANR	10021413	MultiplicativeExpression	tfImageHeight * 4		10021326	1		*			
ANR	10021414	Identifier	tfImageHeight		10021326	0					
ANR	10021415	PrimaryExpression	4		10021326	1					
ANR	10021416	ExpressionStatement	MCHECK ( imageMemory )	750:8:24741:24760	10021326	1	True				
ANR	10021417	CallExpression	MCHECK ( imageMemory )		10021326	0					
ANR	10021418	Callee	MCHECK		10021326	0					
ANR	10021419	Identifier	MCHECK		10021326	0					
ANR	10021420	ArgumentList	imageMemory		10021326	1					
ANR	10021421	Argument	imageMemory		10021326	0					
ANR	10021422	Identifier	imageMemory		10021326	0					
ANR	10021423	IfStatement	if ( ImageByteOrder ( xDisplay ) == LSBFirst )		10021326	2					
ANR	10021424	Condition	ImageByteOrder ( xDisplay ) == LSBFirst	755:12:24867:24902	10021326	0	True				
ANR	10021425	EqualityExpression	ImageByteOrder ( xDisplay ) == LSBFirst		10021326	0		==			
ANR	10021426	CallExpression	ImageByteOrder ( xDisplay )		10021326	0					
ANR	10021427	Callee	ImageByteOrder		10021326	0					
ANR	10021428	Identifier	ImageByteOrder		10021326	0					
ANR	10021429	ArgumentList	xDisplay		10021326	1					
ANR	10021430	Argument	xDisplay		10021326	0					
ANR	10021431	Identifier	xDisplay		10021326	0					
ANR	10021432	Identifier	LSBFirst		10021326	1					
ANR	10021433	CompoundStatement		18:50:556:556	10021326	1					
ANR	10021434	ExpressionStatement	red_shift = pixel_map [ 0 ] = xRedMask == 0xFF000000 ? 3 : ( xRedMask == 0xFF0000 ? 2 : ( xRedMask == 0xFF00 ? 1 : 0 ) )	756:12:24941:25070	10021326	0	True				
ANR	10021435	AssignmentExpression	red_shift = pixel_map [ 0 ] = xRedMask == 0xFF000000 ? 3 : ( xRedMask == 0xFF0000 ? 2 : ( xRedMask == 0xFF00 ? 1 : 0 ) )		10021326	0		=			
ANR	10021436	Identifier	red_shift		10021326	0					
ANR	10021437	AssignmentExpression	pixel_map [ 0 ] = xRedMask == 0xFF000000 ? 3 : ( xRedMask == 0xFF0000 ? 2 : ( xRedMask == 0xFF00 ? 1 : 0 ) )		10021326	1		=			
ANR	10021438	ArrayIndexing	pixel_map [ 0 ]		10021326	0					
ANR	10021439	Identifier	pixel_map		10021326	0					
ANR	10021440	PrimaryExpression	0		10021326	1					
ANR	10021441	ConditionalExpression	xRedMask == 0xFF000000 ? 3 : ( xRedMask == 0xFF0000 ? 2 : ( xRedMask == 0xFF00 ? 1 : 0 ) )		10021326	1					
ANR	10021442	Condition	xRedMask == 0xFF000000		10021326	0					
ANR	10021443	EqualityExpression	xRedMask == 0xFF000000		10021326	0		==			
ANR	10021444	Identifier	xRedMask		10021326	0					
ANR	10021445	PrimaryExpression	0xFF000000		10021326	1					
ANR	10021446	PrimaryExpression	3		10021326	1					
ANR	10021447	ConditionalExpression	xRedMask == 0xFF0000 ? 2 : ( xRedMask == 0xFF00 ? 1 : 0 )		10021326	2					
ANR	10021448	Condition	xRedMask == 0xFF0000		10021326	0					
ANR	10021449	EqualityExpression	xRedMask == 0xFF0000		10021326	0		==			
ANR	10021450	Identifier	xRedMask		10021326	0					
ANR	10021451	PrimaryExpression	0xFF0000		10021326	1					
ANR	10021452	PrimaryExpression	2		10021326	1					
ANR	10021453	ConditionalExpression	xRedMask == 0xFF00 ? 1 : 0		10021326	2					
ANR	10021454	Condition	xRedMask == 0xFF00		10021326	0					
ANR	10021455	EqualityExpression	xRedMask == 0xFF00		10021326	0		==			
ANR	10021456	Identifier	xRedMask		10021326	0					
ANR	10021457	PrimaryExpression	0xFF00		10021326	1					
ANR	10021458	PrimaryExpression	1		10021326	1					
ANR	10021459	PrimaryExpression	0		10021326	2					
ANR	10021460	ExpressionStatement	green_shift = pixel_map [ 1 ] = xGreenMask == 0xFF000000 ? 3 : ( xGreenMask == 0xFF0000 ? 2 : ( xGreenMask == 0xFF00 ? 1 : 0 ) )	758:12:25084:25221	10021326	1	True				
ANR	10021461	AssignmentExpression	green_shift = pixel_map [ 1 ] = xGreenMask == 0xFF000000 ? 3 : ( xGreenMask == 0xFF0000 ? 2 : ( xGreenMask == 0xFF00 ? 1 : 0 ) )		10021326	0		=			
ANR	10021462	Identifier	green_shift		10021326	0					
ANR	10021463	AssignmentExpression	pixel_map [ 1 ] = xGreenMask == 0xFF000000 ? 3 : ( xGreenMask == 0xFF0000 ? 2 : ( xGreenMask == 0xFF00 ? 1 : 0 ) )		10021326	1		=			
ANR	10021464	ArrayIndexing	pixel_map [ 1 ]		10021326	0					
ANR	10021465	Identifier	pixel_map		10021326	0					
ANR	10021466	PrimaryExpression	1		10021326	1					
ANR	10021467	ConditionalExpression	xGreenMask == 0xFF000000 ? 3 : ( xGreenMask == 0xFF0000 ? 2 : ( xGreenMask == 0xFF00 ? 1 : 0 ) )		10021326	1					
ANR	10021468	Condition	xGreenMask == 0xFF000000		10021326	0					
ANR	10021469	EqualityExpression	xGreenMask == 0xFF000000		10021326	0		==			
ANR	10021470	Identifier	xGreenMask		10021326	0					
ANR	10021471	PrimaryExpression	0xFF000000		10021326	1					
ANR	10021472	PrimaryExpression	3		10021326	1					
ANR	10021473	ConditionalExpression	xGreenMask == 0xFF0000 ? 2 : ( xGreenMask == 0xFF00 ? 1 : 0 )		10021326	2					
ANR	10021474	Condition	xGreenMask == 0xFF0000		10021326	0					
ANR	10021475	EqualityExpression	xGreenMask == 0xFF0000		10021326	0		==			
ANR	10021476	Identifier	xGreenMask		10021326	0					
ANR	10021477	PrimaryExpression	0xFF0000		10021326	1					
ANR	10021478	PrimaryExpression	2		10021326	1					
ANR	10021479	ConditionalExpression	xGreenMask == 0xFF00 ? 1 : 0		10021326	2					
ANR	10021480	Condition	xGreenMask == 0xFF00		10021326	0					
ANR	10021481	EqualityExpression	xGreenMask == 0xFF00		10021326	0		==			
ANR	10021482	Identifier	xGreenMask		10021326	0					
ANR	10021483	PrimaryExpression	0xFF00		10021326	1					
ANR	10021484	PrimaryExpression	1		10021326	1					
ANR	10021485	PrimaryExpression	0		10021326	2					
ANR	10021486	ExpressionStatement	blue_shift = pixel_map [ 2 ] = xBlueMask == 0xFF000000 ? 3 : ( xBlueMask == 0xFF0000 ? 2 : ( xBlueMask == 0xFF00 ? 1 : 0 ) )	760:12:25235:25368	10021326	2	True				
ANR	10021487	AssignmentExpression	blue_shift = pixel_map [ 2 ] = xBlueMask == 0xFF000000 ? 3 : ( xBlueMask == 0xFF0000 ? 2 : ( xBlueMask == 0xFF00 ? 1 : 0 ) )		10021326	0		=			
ANR	10021488	Identifier	blue_shift		10021326	0					
ANR	10021489	AssignmentExpression	pixel_map [ 2 ] = xBlueMask == 0xFF000000 ? 3 : ( xBlueMask == 0xFF0000 ? 2 : ( xBlueMask == 0xFF00 ? 1 : 0 ) )		10021326	1		=			
ANR	10021490	ArrayIndexing	pixel_map [ 2 ]		10021326	0					
ANR	10021491	Identifier	pixel_map		10021326	0					
ANR	10021492	PrimaryExpression	2		10021326	1					
ANR	10021493	ConditionalExpression	xBlueMask == 0xFF000000 ? 3 : ( xBlueMask == 0xFF0000 ? 2 : ( xBlueMask == 0xFF00 ? 1 : 0 ) )		10021326	1					
ANR	10021494	Condition	xBlueMask == 0xFF000000		10021326	0					
ANR	10021495	EqualityExpression	xBlueMask == 0xFF000000		10021326	0		==			
ANR	10021496	Identifier	xBlueMask		10021326	0					
ANR	10021497	PrimaryExpression	0xFF000000		10021326	1					
ANR	10021498	PrimaryExpression	3		10021326	1					
ANR	10021499	ConditionalExpression	xBlueMask == 0xFF0000 ? 2 : ( xBlueMask == 0xFF00 ? 1 : 0 )		10021326	2					
ANR	10021500	Condition	xBlueMask == 0xFF0000		10021326	0					
ANR	10021501	EqualityExpression	xBlueMask == 0xFF0000		10021326	0		==			
ANR	10021502	Identifier	xBlueMask		10021326	0					
ANR	10021503	PrimaryExpression	0xFF0000		10021326	1					
ANR	10021504	PrimaryExpression	2		10021326	1					
ANR	10021505	ConditionalExpression	xBlueMask == 0xFF00 ? 1 : 0		10021326	2					
ANR	10021506	Condition	xBlueMask == 0xFF00		10021326	0					
ANR	10021507	EqualityExpression	xBlueMask == 0xFF00		10021326	0		==			
ANR	10021508	Identifier	xBlueMask		10021326	0					
ANR	10021509	PrimaryExpression	0xFF00		10021326	1					
ANR	10021510	PrimaryExpression	1		10021326	1					
ANR	10021511	PrimaryExpression	0		10021326	2					
ANR	10021512	ElseStatement	else		10021326	0					
ANR	10021513	CompoundStatement		25:15:1036:1036	10021326	0					
ANR	10021514	ExpressionStatement	red_shift = pixel_map [ 0 ] = xRedMask == 0xFF000000 ? 0 : ( xRedMask == 0xFF0000 ? 1 : ( xRedMask == 0xFF00 ? 2 : 3 ) )	763:12:25412:25541	10021326	0	True				
ANR	10021515	AssignmentExpression	red_shift = pixel_map [ 0 ] = xRedMask == 0xFF000000 ? 0 : ( xRedMask == 0xFF0000 ? 1 : ( xRedMask == 0xFF00 ? 2 : 3 ) )		10021326	0		=			
ANR	10021516	Identifier	red_shift		10021326	0					
ANR	10021517	AssignmentExpression	pixel_map [ 0 ] = xRedMask == 0xFF000000 ? 0 : ( xRedMask == 0xFF0000 ? 1 : ( xRedMask == 0xFF00 ? 2 : 3 ) )		10021326	1		=			
ANR	10021518	ArrayIndexing	pixel_map [ 0 ]		10021326	0					
ANR	10021519	Identifier	pixel_map		10021326	0					
ANR	10021520	PrimaryExpression	0		10021326	1					
ANR	10021521	ConditionalExpression	xRedMask == 0xFF000000 ? 0 : ( xRedMask == 0xFF0000 ? 1 : ( xRedMask == 0xFF00 ? 2 : 3 ) )		10021326	1					
ANR	10021522	Condition	xRedMask == 0xFF000000		10021326	0					
ANR	10021523	EqualityExpression	xRedMask == 0xFF000000		10021326	0		==			
ANR	10021524	Identifier	xRedMask		10021326	0					
ANR	10021525	PrimaryExpression	0xFF000000		10021326	1					
ANR	10021526	PrimaryExpression	0		10021326	1					
ANR	10021527	ConditionalExpression	xRedMask == 0xFF0000 ? 1 : ( xRedMask == 0xFF00 ? 2 : 3 )		10021326	2					
ANR	10021528	Condition	xRedMask == 0xFF0000		10021326	0					
ANR	10021529	EqualityExpression	xRedMask == 0xFF0000		10021326	0		==			
ANR	10021530	Identifier	xRedMask		10021326	0					
ANR	10021531	PrimaryExpression	0xFF0000		10021326	1					
ANR	10021532	PrimaryExpression	1		10021326	1					
ANR	10021533	ConditionalExpression	xRedMask == 0xFF00 ? 2 : 3		10021326	2					
ANR	10021534	Condition	xRedMask == 0xFF00		10021326	0					
ANR	10021535	EqualityExpression	xRedMask == 0xFF00		10021326	0		==			
ANR	10021536	Identifier	xRedMask		10021326	0					
ANR	10021537	PrimaryExpression	0xFF00		10021326	1					
ANR	10021538	PrimaryExpression	2		10021326	1					
ANR	10021539	PrimaryExpression	3		10021326	2					
ANR	10021540	ExpressionStatement	green_shift = pixel_map [ 0 ] = xGreenMask == 0xFF000000 ? 0 : ( xGreenMask == 0xFF0000 ? 1 : ( xGreenMask == 0xFF00 ? 2 : 3 ) )	765:12:25555:25692	10021326	1	True				
ANR	10021541	AssignmentExpression	green_shift = pixel_map [ 0 ] = xGreenMask == 0xFF000000 ? 0 : ( xGreenMask == 0xFF0000 ? 1 : ( xGreenMask == 0xFF00 ? 2 : 3 ) )		10021326	0		=			
ANR	10021542	Identifier	green_shift		10021326	0					
ANR	10021543	AssignmentExpression	pixel_map [ 0 ] = xGreenMask == 0xFF000000 ? 0 : ( xGreenMask == 0xFF0000 ? 1 : ( xGreenMask == 0xFF00 ? 2 : 3 ) )		10021326	1		=			
ANR	10021544	ArrayIndexing	pixel_map [ 0 ]		10021326	0					
ANR	10021545	Identifier	pixel_map		10021326	0					
ANR	10021546	PrimaryExpression	0		10021326	1					
ANR	10021547	ConditionalExpression	xGreenMask == 0xFF000000 ? 0 : ( xGreenMask == 0xFF0000 ? 1 : ( xGreenMask == 0xFF00 ? 2 : 3 ) )		10021326	1					
ANR	10021548	Condition	xGreenMask == 0xFF000000		10021326	0					
ANR	10021549	EqualityExpression	xGreenMask == 0xFF000000		10021326	0		==			
ANR	10021550	Identifier	xGreenMask		10021326	0					
ANR	10021551	PrimaryExpression	0xFF000000		10021326	1					
ANR	10021552	PrimaryExpression	0		10021326	1					
ANR	10021553	ConditionalExpression	xGreenMask == 0xFF0000 ? 1 : ( xGreenMask == 0xFF00 ? 2 : 3 )		10021326	2					
ANR	10021554	Condition	xGreenMask == 0xFF0000		10021326	0					
ANR	10021555	EqualityExpression	xGreenMask == 0xFF0000		10021326	0		==			
ANR	10021556	Identifier	xGreenMask		10021326	0					
ANR	10021557	PrimaryExpression	0xFF0000		10021326	1					
ANR	10021558	PrimaryExpression	1		10021326	1					
ANR	10021559	ConditionalExpression	xGreenMask == 0xFF00 ? 2 : 3		10021326	2					
ANR	10021560	Condition	xGreenMask == 0xFF00		10021326	0					
ANR	10021561	EqualityExpression	xGreenMask == 0xFF00		10021326	0		==			
ANR	10021562	Identifier	xGreenMask		10021326	0					
ANR	10021563	PrimaryExpression	0xFF00		10021326	1					
ANR	10021564	PrimaryExpression	2		10021326	1					
ANR	10021565	PrimaryExpression	3		10021326	2					
ANR	10021566	ExpressionStatement	blue_shift = pixel_map [ 0 ] = xBlueMask == 0xFF000000 ? 0 : ( xBlueMask == 0xFF0000 ? 1 : ( xBlueMask == 0xFF00 ? 2 : 3 ) )	767:12:25706:25839	10021326	2	True				
ANR	10021567	AssignmentExpression	blue_shift = pixel_map [ 0 ] = xBlueMask == 0xFF000000 ? 0 : ( xBlueMask == 0xFF0000 ? 1 : ( xBlueMask == 0xFF00 ? 2 : 3 ) )		10021326	0		=			
ANR	10021568	Identifier	blue_shift		10021326	0					
ANR	10021569	AssignmentExpression	pixel_map [ 0 ] = xBlueMask == 0xFF000000 ? 0 : ( xBlueMask == 0xFF0000 ? 1 : ( xBlueMask == 0xFF00 ? 2 : 3 ) )		10021326	1		=			
ANR	10021570	ArrayIndexing	pixel_map [ 0 ]		10021326	0					
ANR	10021571	Identifier	pixel_map		10021326	0					
ANR	10021572	PrimaryExpression	0		10021326	1					
ANR	10021573	ConditionalExpression	xBlueMask == 0xFF000000 ? 0 : ( xBlueMask == 0xFF0000 ? 1 : ( xBlueMask == 0xFF00 ? 2 : 3 ) )		10021326	1					
ANR	10021574	Condition	xBlueMask == 0xFF000000		10021326	0					
ANR	10021575	EqualityExpression	xBlueMask == 0xFF000000		10021326	0		==			
ANR	10021576	Identifier	xBlueMask		10021326	0					
ANR	10021577	PrimaryExpression	0xFF000000		10021326	1					
ANR	10021578	PrimaryExpression	0		10021326	1					
ANR	10021579	ConditionalExpression	xBlueMask == 0xFF0000 ? 1 : ( xBlueMask == 0xFF00 ? 2 : 3 )		10021326	2					
ANR	10021580	Condition	xBlueMask == 0xFF0000		10021326	0					
ANR	10021581	EqualityExpression	xBlueMask == 0xFF0000		10021326	0		==			
ANR	10021582	Identifier	xBlueMask		10021326	0					
ANR	10021583	PrimaryExpression	0xFF0000		10021326	1					
ANR	10021584	PrimaryExpression	1		10021326	1					
ANR	10021585	ConditionalExpression	xBlueMask == 0xFF00 ? 2 : 3		10021326	2					
ANR	10021586	Condition	xBlueMask == 0xFF00		10021326	0					
ANR	10021587	EqualityExpression	xBlueMask == 0xFF00		10021326	0		==			
ANR	10021588	Identifier	xBlueMask		10021326	0					
ANR	10021589	PrimaryExpression	0xFF00		10021326	1					
ANR	10021590	PrimaryExpression	2		10021326	1					
ANR	10021591	PrimaryExpression	3		10021326	2					
ANR	10021592	IfStatement	if ( tfPlanarConfiguration == PLANARCONFIG_CONTIG )		10021326	3					
ANR	10021593	Condition	tfPlanarConfiguration == PLANARCONFIG_CONTIG	771:12:25864:25907	10021326	0	True				
ANR	10021594	EqualityExpression	tfPlanarConfiguration == PLANARCONFIG_CONTIG		10021326	0		==			
ANR	10021595	Identifier	tfPlanarConfiguration		10021326	0					
ANR	10021596	Identifier	PLANARCONFIG_CONTIG		10021326	1					
ANR	10021597	CompoundStatement		34:58:1561:1561	10021326	1					
ANR	10021598	ForStatement	for ( i = 0 ; i < tfImageHeight ; i ++ )		10021326	0					
ANR	10021599	ForInit	i = 0 ;	772:17:25929:25934	10021326	0	True				
ANR	10021600	AssignmentExpression	i = 0		10021326	0		=			
ANR	10021601	Identifier	i		10021326	0					
ANR	10021602	PrimaryExpression	0		10021326	1					
ANR	10021603	Condition	i < tfImageHeight	772:24:25936:25952	10021326	1	True				
ANR	10021604	RelationalExpression	i < tfImageHeight		10021326	0		<			
ANR	10021605	Identifier	i		10021326	0					
ANR	10021606	Identifier	tfImageHeight		10021326	1					
ANR	10021607	PostIncDecOperationExpression	i ++	772:43:25955:25957	10021326	2	True				
ANR	10021608	Identifier	i		10021326	0					
ANR	10021609	IncDec	++		10021326	1					
ANR	10021610	CompoundStatement		35:48:1611:1611	10021326	3					
ANR	10021611	IfStatement	"if ( TIFFReadScanline ( tfFile , scan_line , i , 0 ) < 0 )"		10021326	0					
ANR	10021612	Condition	"TIFFReadScanline ( tfFile , scan_line , i , 0 ) < 0"	773:20:25982:26026	10021326	0	True				
ANR	10021613	RelationalExpression	"TIFFReadScanline ( tfFile , scan_line , i , 0 ) < 0"		10021326	0		<			
ANR	10021614	CallExpression	"TIFFReadScanline ( tfFile , scan_line , i , 0 )"		10021326	0					
ANR	10021615	Callee	TIFFReadScanline		10021326	0					
ANR	10021616	Identifier	TIFFReadScanline		10021326	0					
ANR	10021617	ArgumentList	tfFile		10021326	1					
ANR	10021618	Argument	tfFile		10021326	0					
ANR	10021619	Identifier	tfFile		10021326	0					
ANR	10021620	Argument	scan_line		10021326	1					
ANR	10021621	Identifier	scan_line		10021326	0					
ANR	10021622	Argument	i		10021326	2					
ANR	10021623	Identifier	i		10021326	0					
ANR	10021624	Argument	0		10021326	3					
ANR	10021625	PrimaryExpression	0		10021326	0					
ANR	10021626	PrimaryExpression	0		10021326	1					
ANR	10021627	BreakStatement	break ;	774:20:26049:26054	10021326	1	True				
ANR	10021628	ForStatement	"for ( input_p = scan_line , j = 0 ; j < tfImageWidth ; j ++ )"		10021326	1					
ANR	10021629	ForInit	"input_p = scan_line , j = 0 ;"	775:21:26077:26103	10021326	0	True				
ANR	10021630	Expression	"input_p = scan_line , j = 0"		10021326	0					
ANR	10021631	AssignmentExpression	input_p = scan_line		10021326	0		=			
ANR	10021632	Identifier	input_p		10021326	0					
ANR	10021633	Identifier	scan_line		10021326	1					
ANR	10021634	AssignmentExpression	j = 0		10021326	1		=			
ANR	10021635	Identifier	j		10021326	0					
ANR	10021636	PrimaryExpression	0		10021326	1					
ANR	10021637	Condition	j < tfImageWidth	775:49:26105:26120	10021326	1	True				
ANR	10021638	RelationalExpression	j < tfImageWidth		10021326	0		<			
ANR	10021639	Identifier	j		10021326	0					
ANR	10021640	Identifier	tfImageWidth		10021326	1					
ANR	10021641	PostIncDecOperationExpression	j ++	775:67:26123:26125	10021326	2	True				
ANR	10021642	Identifier	j		10021326	0					
ANR	10021643	IncDec	++		10021326	1					
ANR	10021644	CompoundStatement		38:72:1779:1779	10021326	3					
ANR	10021645	ExpressionStatement	* ( output_p + red_shift ) = * input_p ++	776:20:26150:26186	10021326	0	True				
ANR	10021646	AssignmentExpression	* ( output_p + red_shift ) = * input_p ++		10021326	0		=			
ANR	10021647	UnaryOperationExpression	* ( output_p + red_shift )		10021326	0					
ANR	10021648	UnaryOperator	*		10021326	0					
ANR	10021649	AdditiveExpression	output_p + red_shift		10021326	1		+			
ANR	10021650	Identifier	output_p		10021326	0					
ANR	10021651	Identifier	red_shift		10021326	1					
ANR	10021652	UnaryOperationExpression	* input_p ++		10021326	1					
ANR	10021653	UnaryOperator	*		10021326	0					
ANR	10021654	PostIncDecOperationExpression	input_p ++		10021326	1					
ANR	10021655	Identifier	input_p		10021326	0					
ANR	10021656	IncDec	++		10021326	1					
ANR	10021657	ExpressionStatement	* ( output_p + green_shift ) = * input_p ++	777:20:26208:26246	10021326	1	True				
ANR	10021658	AssignmentExpression	* ( output_p + green_shift ) = * input_p ++		10021326	0		=			
ANR	10021659	UnaryOperationExpression	* ( output_p + green_shift )		10021326	0					
ANR	10021660	UnaryOperator	*		10021326	0					
ANR	10021661	AdditiveExpression	output_p + green_shift		10021326	1		+			
ANR	10021662	Identifier	output_p		10021326	0					
ANR	10021663	Identifier	green_shift		10021326	1					
ANR	10021664	UnaryOperationExpression	* input_p ++		10021326	1					
ANR	10021665	UnaryOperator	*		10021326	0					
ANR	10021666	PostIncDecOperationExpression	input_p ++		10021326	1					
ANR	10021667	Identifier	input_p		10021326	0					
ANR	10021668	IncDec	++		10021326	1					
ANR	10021669	ExpressionStatement	* ( output_p + blue_shift ) = * input_p ++	778:20:26268:26305	10021326	2	True				
ANR	10021670	AssignmentExpression	* ( output_p + blue_shift ) = * input_p ++		10021326	0		=			
ANR	10021671	UnaryOperationExpression	* ( output_p + blue_shift )		10021326	0					
ANR	10021672	UnaryOperator	*		10021326	0					
ANR	10021673	AdditiveExpression	output_p + blue_shift		10021326	1		+			
ANR	10021674	Identifier	output_p		10021326	0					
ANR	10021675	Identifier	blue_shift		10021326	1					
ANR	10021676	UnaryOperationExpression	* input_p ++		10021326	1					
ANR	10021677	UnaryOperator	*		10021326	0					
ANR	10021678	PostIncDecOperationExpression	input_p ++		10021326	1					
ANR	10021679	Identifier	input_p		10021326	0					
ANR	10021680	IncDec	++		10021326	1					
ANR	10021681	ExpressionStatement	output_p += 4	779:20:26327:26340	10021326	3	True				
ANR	10021682	AssignmentExpression	output_p += 4		10021326	0		+=			
ANR	10021683	Identifier	output_p		10021326	0					
ANR	10021684	PrimaryExpression	4		10021326	1					
ANR	10021685	IfStatement	if ( tfSamplesPerPixel == 4 )		10021326	4					
ANR	10021686	Condition	tfSamplesPerPixel == 4	780:24:26366:26387	10021326	0	True				
ANR	10021687	EqualityExpression	tfSamplesPerPixel == 4		10021326	0		==			
ANR	10021688	Identifier	tfSamplesPerPixel		10021326	0					
ANR	10021689	PrimaryExpression	4		10021326	1					
ANR	10021690	ExpressionStatement	input_p ++	781:24:26444:26453	10021326	1	True				
ANR	10021691	PostIncDecOperationExpression	input_p ++		10021326	0					
ANR	10021692	Identifier	input_p		10021326	0					
ANR	10021693	IncDec	++		10021326	1					
ANR	10021694	ElseStatement	else		10021326	0					
ANR	10021695	CompoundStatement		47:15:2153:2153	10021326	0					
ANR	10021696	ForStatement	for ( s = 0 ; s < tfSamplesPerPixel ; s ++ )		10021326	0					
ANR	10021697	ForInit	s = 0 ;	785:17:26521:26526	10021326	0	True				
ANR	10021698	AssignmentExpression	s = 0		10021326	0		=			
ANR	10021699	Identifier	s		10021326	0					
ANR	10021700	PrimaryExpression	0		10021326	1					
ANR	10021701	Condition	s < tfSamplesPerPixel	785:24:26528:26548	10021326	1	True				
ANR	10021702	RelationalExpression	s < tfSamplesPerPixel		10021326	0		<			
ANR	10021703	Identifier	s		10021326	0					
ANR	10021704	Identifier	tfSamplesPerPixel		10021326	1					
ANR	10021705	PostIncDecOperationExpression	s ++	785:47:26551:26553	10021326	2	True				
ANR	10021706	Identifier	s		10021326	0					
ANR	10021707	IncDec	++		10021326	1					
ANR	10021708	CompoundStatement		48:52:2207:2207	10021326	3					
ANR	10021709	IfStatement	if ( s == 3 )		10021326	0					
ANR	10021710	Condition	s == 3	786:20:26578:26583	10021326	0	True				
ANR	10021711	EqualityExpression	s == 3		10021326	0		==			
ANR	10021712	Identifier	s		10021326	0					
ANR	10021713	PrimaryExpression	3		10021326	1					
ANR	10021714	ContinueStatement	continue ;	787:20:26648:26656	10021326	1	True				
ANR	10021715	ForStatement	for ( i = 0 ; i < tfImageHeight ; i ++ )		10021326	1					
ANR	10021716	ForInit	i = 0 ;	788:21:26679:26684	10021326	0	True				
ANR	10021717	AssignmentExpression	i = 0		10021326	0		=			
ANR	10021718	Identifier	i		10021326	0					
ANR	10021719	PrimaryExpression	0		10021326	1					
ANR	10021720	Condition	i < tfImageHeight	788:28:26686:26702	10021326	1	True				
ANR	10021721	RelationalExpression	i < tfImageHeight		10021326	0		<			
ANR	10021722	Identifier	i		10021326	0					
ANR	10021723	Identifier	tfImageHeight		10021326	1					
ANR	10021724	PostIncDecOperationExpression	i ++	788:47:26705:26707	10021326	2	True				
ANR	10021725	Identifier	i		10021326	0					
ANR	10021726	IncDec	++		10021326	1					
ANR	10021727	CompoundStatement		51:52:2361:2361	10021326	3					
ANR	10021728	IfStatement	"if ( TIFFReadScanline ( tfFile , scan_line , i , s ) < 0 )"		10021326	0					
ANR	10021729	Condition	"TIFFReadScanline ( tfFile , scan_line , i , s ) < 0"	789:24:26736:26780	10021326	0	True				
ANR	10021730	RelationalExpression	"TIFFReadScanline ( tfFile , scan_line , i , s ) < 0"		10021326	0		<			
ANR	10021731	CallExpression	"TIFFReadScanline ( tfFile , scan_line , i , s )"		10021326	0					
ANR	10021732	Callee	TIFFReadScanline		10021326	0					
ANR	10021733	Identifier	TIFFReadScanline		10021326	0					
ANR	10021734	ArgumentList	tfFile		10021326	1					
ANR	10021735	Argument	tfFile		10021326	0					
ANR	10021736	Identifier	tfFile		10021326	0					
ANR	10021737	Argument	scan_line		10021326	1					
ANR	10021738	Identifier	scan_line		10021326	0					
ANR	10021739	Argument	i		10021326	2					
ANR	10021740	Identifier	i		10021326	0					
ANR	10021741	Argument	s		10021326	3					
ANR	10021742	Identifier	s		10021326	0					
ANR	10021743	PrimaryExpression	0		10021326	1					
ANR	10021744	BreakStatement	break ;	790:24:26807:26812	10021326	1	True				
ANR	10021745	ExpressionStatement	input_p = scan_line	791:20:26834:26853	10021326	1	True				
ANR	10021746	AssignmentExpression	input_p = scan_line		10021326	0		=			
ANR	10021747	Identifier	input_p		10021326	0					
ANR	10021748	Identifier	scan_line		10021326	1					
ANR	10021749	ExpressionStatement	output_p = imageMemory + ( i * tfImageWidth * 4 ) + pixel_map [ s ]	792:20:26875:26933	10021326	2	True				
ANR	10021750	AssignmentExpression	output_p = imageMemory + ( i * tfImageWidth * 4 ) + pixel_map [ s ]		10021326	0		=			
ANR	10021751	Identifier	output_p		10021326	0					
ANR	10021752	AdditiveExpression	imageMemory + ( i * tfImageWidth * 4 ) + pixel_map [ s ]		10021326	1		+			
ANR	10021753	Identifier	imageMemory		10021326	0					
ANR	10021754	AdditiveExpression	( i * tfImageWidth * 4 ) + pixel_map [ s ]		10021326	1		+			
ANR	10021755	MultiplicativeExpression	i * tfImageWidth * 4		10021326	0		*			
ANR	10021756	Identifier	i		10021326	0					
ANR	10021757	MultiplicativeExpression	tfImageWidth * 4		10021326	1		*			
ANR	10021758	Identifier	tfImageWidth		10021326	0					
ANR	10021759	PrimaryExpression	4		10021326	1					
ANR	10021760	ArrayIndexing	pixel_map [ s ]		10021326	1					
ANR	10021761	Identifier	pixel_map		10021326	0					
ANR	10021762	Identifier	s		10021326	1					
ANR	10021763	ForStatement	"for ( j = 0 ; j < tfImageWidth ; j ++ , output_p += 4 )"		10021326	3					
ANR	10021764	ForInit	j = 0 ;	793:25:26960:26965	10021326	0	True				
ANR	10021765	AssignmentExpression	j = 0		10021326	0		=			
ANR	10021766	Identifier	j		10021326	0					
ANR	10021767	PrimaryExpression	0		10021326	1					
ANR	10021768	Condition	j < tfImageWidth	793:32:26967:26982	10021326	1	True				
ANR	10021769	RelationalExpression	j < tfImageWidth		10021326	0		<			
ANR	10021770	Identifier	j		10021326	0					
ANR	10021771	Identifier	tfImageWidth		10021326	1					
ANR	10021772	Expression	"j ++ , output_p += 4"	793:50:26985:27002	10021326	2	True				
ANR	10021773	PostIncDecOperationExpression	j ++		10021326	0					
ANR	10021774	Identifier	j		10021326	0					
ANR	10021775	IncDec	++		10021326	1					
ANR	10021776	AssignmentExpression	output_p += 4		10021326	1		+=			
ANR	10021777	Identifier	output_p		10021326	0					
ANR	10021778	PrimaryExpression	4		10021326	1					
ANR	10021779	ExpressionStatement	* output_p = * input_p ++	794:24:27029:27051	10021326	3	True				
ANR	10021780	AssignmentExpression	* output_p = * input_p ++		10021326	0		=			
ANR	10021781	UnaryOperationExpression	* output_p		10021326	0					
ANR	10021782	UnaryOperator	*		10021326	0					
ANR	10021783	Identifier	output_p		10021326	1					
ANR	10021784	UnaryOperationExpression	* input_p ++		10021326	1					
ANR	10021785	UnaryOperator	*		10021326	0					
ANR	10021786	PostIncDecOperationExpression	input_p ++		10021326	1					
ANR	10021787	Identifier	input_p		10021326	0					
ANR	10021788	IncDec	++		10021326	1					
ANR	10021789	ElseStatement	else		10021326	0					
ANR	10021790	CompoundStatement		61:11:2757:2757	10021326	0					
ANR	10021791	IfStatement	if ( xImageDepth == tfImageDepth )		10021326	0					
ANR	10021792	Condition	xImageDepth == tfImageDepth	799:12:27120:27146	10021326	0	True				
ANR	10021793	EqualityExpression	xImageDepth == tfImageDepth		10021326	0		==			
ANR	10021794	Identifier	xImageDepth		10021326	0					
ANR	10021795	Identifier	tfImageDepth		10021326	1					
ANR	10021796	CompoundStatement		62:41:2800:2800	10021326	1					
ANR	10021797	ExpressionStatement	output_p = imageMemory = ( char * ) malloc ( tfBytesPerRow * tfImageHeight )	800:12:27163:27250	10021326	0	True				
ANR	10021798	AssignmentExpression	output_p = imageMemory = ( char * ) malloc ( tfBytesPerRow * tfImageHeight )		10021326	0		=			
ANR	10021799	Identifier	output_p		10021326	0					
ANR	10021800	AssignmentExpression	imageMemory = ( char * ) malloc ( tfBytesPerRow * tfImageHeight )		10021326	1		=			
ANR	10021801	Identifier	imageMemory		10021326	0					
ANR	10021802	CastExpression	( char * ) malloc ( tfBytesPerRow * tfImageHeight )		10021326	1					
ANR	10021803	CastTarget	char *		10021326	0					
ANR	10021804	CallExpression	malloc ( tfBytesPerRow * tfImageHeight )		10021326	1					
ANR	10021805	Callee	malloc		10021326	0					
ANR	10021806	Identifier	malloc		10021326	0					
ANR	10021807	ArgumentList	tfBytesPerRow * tfImageHeight		10021326	1					
ANR	10021808	Argument	tfBytesPerRow * tfImageHeight		10021326	0					
ANR	10021809	MultiplicativeExpression	tfBytesPerRow * tfImageHeight		10021326	0		*			
ANR	10021810	Identifier	tfBytesPerRow		10021326	0					
ANR	10021811	Identifier	tfImageHeight		10021326	1					
ANR	10021812	ExpressionStatement	MCHECK ( imageMemory )	802:12:27264:27283	10021326	1	True				
ANR	10021813	CallExpression	MCHECK ( imageMemory )		10021326	0					
ANR	10021814	Callee	MCHECK		10021326	0					
ANR	10021815	Identifier	MCHECK		10021326	0					
ANR	10021816	ArgumentList	imageMemory		10021326	1					
ANR	10021817	Argument	imageMemory		10021326	0					
ANR	10021818	Identifier	imageMemory		10021326	0					
ANR	10021819	ForStatement	"for ( i = 0 ; i < tfImageHeight ; i ++ , output_p += tfBytesPerRow )"		10021326	2					
ANR	10021820	ForInit	i = 0 ;	804:17:27303:27308	10021326	0	True				
ANR	10021821	AssignmentExpression	i = 0		10021326	0		=			
ANR	10021822	Identifier	i		10021326	0					
ANR	10021823	PrimaryExpression	0		10021326	1					
ANR	10021824	Condition	i < tfImageHeight	804:24:27310:27326	10021326	1	True				
ANR	10021825	RelationalExpression	i < tfImageHeight		10021326	0		<			
ANR	10021826	Identifier	i		10021326	0					
ANR	10021827	Identifier	tfImageHeight		10021326	1					
ANR	10021828	Expression	"i ++ , output_p += tfBytesPerRow"	804:43:27329:27358	10021326	2	True				
ANR	10021829	PostIncDecOperationExpression	i ++		10021326	0					
ANR	10021830	Identifier	i		10021326	0					
ANR	10021831	IncDec	++		10021326	1					
ANR	10021832	AssignmentExpression	output_p += tfBytesPerRow		10021326	1		+=			
ANR	10021833	Identifier	output_p		10021326	0					
ANR	10021834	Identifier	tfBytesPerRow		10021326	1					
ANR	10021835	IfStatement	"if ( TIFFReadScanline ( tfFile , output_p , i , 0 ) < 0 )"		10021326	3					
ANR	10021836	Condition	"TIFFReadScanline ( tfFile , output_p , i , 0 ) < 0"	805:20:27381:27424	10021326	0	True				
ANR	10021837	RelationalExpression	"TIFFReadScanline ( tfFile , output_p , i , 0 ) < 0"		10021326	0		<			
ANR	10021838	CallExpression	"TIFFReadScanline ( tfFile , output_p , i , 0 )"		10021326	0					
ANR	10021839	Callee	TIFFReadScanline		10021326	0					
ANR	10021840	Identifier	TIFFReadScanline		10021326	0					
ANR	10021841	ArgumentList	tfFile		10021326	1					
ANR	10021842	Argument	tfFile		10021326	0					
ANR	10021843	Identifier	tfFile		10021326	0					
ANR	10021844	Argument	output_p		10021326	1					
ANR	10021845	Identifier	output_p		10021326	0					
ANR	10021846	Argument	i		10021326	2					
ANR	10021847	Identifier	i		10021326	0					
ANR	10021848	Argument	0		10021326	3					
ANR	10021849	PrimaryExpression	0		10021326	0					
ANR	10021850	PrimaryExpression	0		10021326	1					
ANR	10021851	BreakStatement	break ;	806:20:27447:27452	10021326	1	True				
ANR	10021852	ElseStatement	else		10021326	0					
ANR	10021853	IfStatement	if ( ( xImageDepth == 8 ) && ( tfImageDepth == 4 ) )		10021326	0					
ANR	10021854	Condition	( xImageDepth == 8 ) && ( tfImageDepth == 4 )	807:19:27473:27513	10021326	0	True				
ANR	10021855	AndExpression	( xImageDepth == 8 ) && ( tfImageDepth == 4 )		10021326	0		&&			
ANR	10021856	EqualityExpression	xImageDepth == 8		10021326	0		==			
ANR	10021857	Identifier	xImageDepth		10021326	0					
ANR	10021858	PrimaryExpression	8		10021326	1					
ANR	10021859	EqualityExpression	tfImageDepth == 4		10021326	1		==			
ANR	10021860	Identifier	tfImageDepth		10021326	0					
ANR	10021861	PrimaryExpression	4		10021326	1					
ANR	10021862	CompoundStatement		70:62:3167:3167	10021326	1					
ANR	10021863	ExpressionStatement	output_p = imageMemory = ( char * ) malloc ( tfBytesPerRow * 2 * tfImageHeight + 2 )	808:12:27530:27625	10021326	0	True				
ANR	10021864	AssignmentExpression	output_p = imageMemory = ( char * ) malloc ( tfBytesPerRow * 2 * tfImageHeight + 2 )		10021326	0		=			
ANR	10021865	Identifier	output_p		10021326	0					
ANR	10021866	AssignmentExpression	imageMemory = ( char * ) malloc ( tfBytesPerRow * 2 * tfImageHeight + 2 )		10021326	1		=			
ANR	10021867	Identifier	imageMemory		10021326	0					
ANR	10021868	CastExpression	( char * ) malloc ( tfBytesPerRow * 2 * tfImageHeight + 2 )		10021326	1					
ANR	10021869	CastTarget	char *		10021326	0					
ANR	10021870	CallExpression	malloc ( tfBytesPerRow * 2 * tfImageHeight + 2 )		10021326	1					
ANR	10021871	Callee	malloc		10021326	0					
ANR	10021872	Identifier	malloc		10021326	0					
ANR	10021873	ArgumentList	tfBytesPerRow * 2 * tfImageHeight + 2		10021326	1					
ANR	10021874	Argument	tfBytesPerRow * 2 * tfImageHeight + 2		10021326	0					
ANR	10021875	AdditiveExpression	tfBytesPerRow * 2 * tfImageHeight + 2		10021326	0		+			
ANR	10021876	MultiplicativeExpression	tfBytesPerRow * 2 * tfImageHeight		10021326	0		*			
ANR	10021877	Identifier	tfBytesPerRow		10021326	0					
ANR	10021878	MultiplicativeExpression	2 * tfImageHeight		10021326	1		*			
ANR	10021879	PrimaryExpression	2		10021326	0					
ANR	10021880	Identifier	tfImageHeight		10021326	1					
ANR	10021881	PrimaryExpression	2		10021326	1					
ANR	10021882	ExpressionStatement	MCHECK ( imageMemory )	810:12:27639:27658	10021326	1	True				
ANR	10021883	CallExpression	MCHECK ( imageMemory )		10021326	0					
ANR	10021884	Callee	MCHECK		10021326	0					
ANR	10021885	Identifier	MCHECK		10021326	0					
ANR	10021886	ArgumentList	imageMemory		10021326	1					
ANR	10021887	Argument	imageMemory		10021326	0					
ANR	10021888	Identifier	imageMemory		10021326	0					
ANR	10021889	ForStatement	for ( i = 0 ; i < tfImageHeight ; i ++ )		10021326	2					
ANR	10021890	ForInit	i = 0 ;	817:17:27943:27948	10021326	0	True				
ANR	10021891	AssignmentExpression	i = 0		10021326	0		=			
ANR	10021892	Identifier	i		10021326	0					
ANR	10021893	PrimaryExpression	0		10021326	1					
ANR	10021894	Condition	i < tfImageHeight	817:24:27950:27966	10021326	1	True				
ANR	10021895	RelationalExpression	i < tfImageHeight		10021326	0		<			
ANR	10021896	Identifier	i		10021326	0					
ANR	10021897	Identifier	tfImageHeight		10021326	1					
ANR	10021898	PostIncDecOperationExpression	i ++	817:43:27969:27971	10021326	2	True				
ANR	10021899	Identifier	i		10021326	0					
ANR	10021900	IncDec	++		10021326	1					
ANR	10021901	CompoundStatement		80:48:3625:3625	10021326	3					
ANR	10021902	IfStatement	"if ( TIFFReadScanline ( tfFile , scan_line , i , 0 ) < 0 )"		10021326	0					
ANR	10021903	Condition	"TIFFReadScanline ( tfFile , scan_line , i , 0 ) < 0"	818:20:27996:28040	10021326	0	True				
ANR	10021904	RelationalExpression	"TIFFReadScanline ( tfFile , scan_line , i , 0 ) < 0"		10021326	0		<			
ANR	10021905	CallExpression	"TIFFReadScanline ( tfFile , scan_line , i , 0 )"		10021326	0					
ANR	10021906	Callee	TIFFReadScanline		10021326	0					
ANR	10021907	Identifier	TIFFReadScanline		10021326	0					
ANR	10021908	ArgumentList	tfFile		10021326	1					
ANR	10021909	Argument	tfFile		10021326	0					
ANR	10021910	Identifier	tfFile		10021326	0					
ANR	10021911	Argument	scan_line		10021326	1					
ANR	10021912	Identifier	scan_line		10021326	0					
ANR	10021913	Argument	i		10021326	2					
ANR	10021914	Identifier	i		10021326	0					
ANR	10021915	Argument	0		10021326	3					
ANR	10021916	PrimaryExpression	0		10021326	0					
ANR	10021917	PrimaryExpression	0		10021326	1					
ANR	10021918	BreakStatement	break ;	819:20:28063:28068	10021326	1	True				
ANR	10021919	ExpressionStatement	output_p = & imageMemory [ i * tfImageWidth ]	820:16:28086:28127	10021326	1	True				
ANR	10021920	AssignmentExpression	output_p = & imageMemory [ i * tfImageWidth ]		10021326	0		=			
ANR	10021921	Identifier	output_p		10021326	0					
ANR	10021922	UnaryOperationExpression	& imageMemory [ i * tfImageWidth ]		10021326	1					
ANR	10021923	UnaryOperator	&		10021326	0					
ANR	10021924	ArrayIndexing	imageMemory [ i * tfImageWidth ]		10021326	1					
ANR	10021925	Identifier	imageMemory		10021326	0					
ANR	10021926	MultiplicativeExpression	i * tfImageWidth		10021326	1		*			
ANR	10021927	Identifier	i		10021326	0					
ANR	10021928	Identifier	tfImageWidth		10021326	1					
ANR	10021929	ExpressionStatement	input_p = scan_line	821:16:28145:28164	10021326	2	True				
ANR	10021930	AssignmentExpression	input_p = scan_line		10021326	0		=			
ANR	10021931	Identifier	input_p		10021326	0					
ANR	10021932	Identifier	scan_line		10021326	1					
ANR	10021933	ForStatement	"for ( j = 0 ; j < tfImageWidth ; j += 2 , input_p ++ )"		10021326	3					
ANR	10021934	ForInit	j = 0 ;	822:21:28187:28192	10021326	0	True				
ANR	10021935	AssignmentExpression	j = 0		10021326	0		=			
ANR	10021936	Identifier	j		10021326	0					
ANR	10021937	PrimaryExpression	0		10021326	1					
ANR	10021938	Condition	j < tfImageWidth	822:28:28194:28209	10021326	1	True				
ANR	10021939	RelationalExpression	j < tfImageWidth		10021326	0		<			
ANR	10021940	Identifier	j		10021326	0					
ANR	10021941	Identifier	tfImageWidth		10021326	1					
ANR	10021942	Expression	"j += 2 , input_p ++"	822:46:28212:28228	10021326	2	True				
ANR	10021943	AssignmentExpression	j += 2		10021326	0		+=			
ANR	10021944	Identifier	j		10021326	0					
ANR	10021945	PrimaryExpression	2		10021326	1					
ANR	10021946	PostIncDecOperationExpression	input_p ++		10021326	1					
ANR	10021947	Identifier	input_p		10021326	0					
ANR	10021948	IncDec	++		10021326	1					
ANR	10021949	CompoundStatement		85:65:3882:3882	10021326	3					
ANR	10021950	ExpressionStatement	* output_p ++ = ( * input_p >> 4 ) + basePixel	823:20:28253:28294	10021326	0	True				
ANR	10021951	AssignmentExpression	* output_p ++ = ( * input_p >> 4 ) + basePixel		10021326	0		=			
ANR	10021952	UnaryOperationExpression	* output_p ++		10021326	0					
ANR	10021953	UnaryOperator	*		10021326	0					
ANR	10021954	PostIncDecOperationExpression	output_p ++		10021326	1					
ANR	10021955	Identifier	output_p		10021326	0					
ANR	10021956	IncDec	++		10021326	1					
ANR	10021957	AdditiveExpression	( * input_p >> 4 ) + basePixel		10021326	1		+			
ANR	10021958	ShiftExpression	* input_p >> 4		10021326	0		>>			
ANR	10021959	UnaryOperationExpression	* input_p		10021326	0					
ANR	10021960	UnaryOperator	*		10021326	0					
ANR	10021961	Identifier	input_p		10021326	1					
ANR	10021962	PrimaryExpression	4		10021326	1					
ANR	10021963	Identifier	basePixel		10021326	1					
ANR	10021964	ExpressionStatement	* output_p ++ = ( * input_p & 0xf ) + basePixel	824:20:28316:28358	10021326	1	True				
ANR	10021965	AssignmentExpression	* output_p ++ = ( * input_p & 0xf ) + basePixel		10021326	0		=			
ANR	10021966	UnaryOperationExpression	* output_p ++		10021326	0					
ANR	10021967	UnaryOperator	*		10021326	0					
ANR	10021968	PostIncDecOperationExpression	output_p ++		10021326	1					
ANR	10021969	Identifier	output_p		10021326	0					
ANR	10021970	IncDec	++		10021326	1					
ANR	10021971	AdditiveExpression	( * input_p & 0xf ) + basePixel		10021326	1		+			
ANR	10021972	BitAndExpression	* input_p & 0xf		10021326	0		&			
ANR	10021973	UnaryOperationExpression	* input_p		10021326	0					
ANR	10021974	UnaryOperator	*		10021326	0					
ANR	10021975	Identifier	input_p		10021326	1					
ANR	10021976	PrimaryExpression	0xf		10021326	1					
ANR	10021977	Identifier	basePixel		10021326	1					
ANR	10021978	ElseStatement	else		10021326	0					
ANR	10021979	IfStatement	if ( ( xImageDepth == 8 ) && ( tfImageDepth == 2 ) )		10021326	0					
ANR	10021980	Condition	( xImageDepth == 8 ) && ( tfImageDepth == 2 )	827:19:28411:28451	10021326	0	True				
ANR	10021981	AndExpression	( xImageDepth == 8 ) && ( tfImageDepth == 2 )		10021326	0		&&			
ANR	10021982	EqualityExpression	xImageDepth == 8		10021326	0		==			
ANR	10021983	Identifier	xImageDepth		10021326	0					
ANR	10021984	PrimaryExpression	8		10021326	1					
ANR	10021985	EqualityExpression	tfImageDepth == 2		10021326	1		==			
ANR	10021986	Identifier	tfImageDepth		10021326	0					
ANR	10021987	PrimaryExpression	2		10021326	1					
ANR	10021988	CompoundStatement		90:62:4105:4105	10021326	1					
ANR	10021989	ExpressionStatement	output_p = imageMemory = ( char * ) malloc ( tfBytesPerRow * 4 * tfImageHeight + 4 )	828:12:28468:28563	10021326	0	True				
ANR	10021990	AssignmentExpression	output_p = imageMemory = ( char * ) malloc ( tfBytesPerRow * 4 * tfImageHeight + 4 )		10021326	0		=			
ANR	10021991	Identifier	output_p		10021326	0					
ANR	10021992	AssignmentExpression	imageMemory = ( char * ) malloc ( tfBytesPerRow * 4 * tfImageHeight + 4 )		10021326	1		=			
ANR	10021993	Identifier	imageMemory		10021326	0					
ANR	10021994	CastExpression	( char * ) malloc ( tfBytesPerRow * 4 * tfImageHeight + 4 )		10021326	1					
ANR	10021995	CastTarget	char *		10021326	0					
ANR	10021996	CallExpression	malloc ( tfBytesPerRow * 4 * tfImageHeight + 4 )		10021326	1					
ANR	10021997	Callee	malloc		10021326	0					
ANR	10021998	Identifier	malloc		10021326	0					
ANR	10021999	ArgumentList	tfBytesPerRow * 4 * tfImageHeight + 4		10021326	1					
ANR	10022000	Argument	tfBytesPerRow * 4 * tfImageHeight + 4		10021326	0					
ANR	10022001	AdditiveExpression	tfBytesPerRow * 4 * tfImageHeight + 4		10021326	0		+			
ANR	10022002	MultiplicativeExpression	tfBytesPerRow * 4 * tfImageHeight		10021326	0		*			
ANR	10022003	Identifier	tfBytesPerRow		10021326	0					
ANR	10022004	MultiplicativeExpression	4 * tfImageHeight		10021326	1		*			
ANR	10022005	PrimaryExpression	4		10021326	0					
ANR	10022006	Identifier	tfImageHeight		10021326	1					
ANR	10022007	PrimaryExpression	4		10021326	1					
ANR	10022008	ExpressionStatement	MCHECK ( imageMemory )	830:12:28577:28596	10021326	1	True				
ANR	10022009	CallExpression	MCHECK ( imageMemory )		10021326	0					
ANR	10022010	Callee	MCHECK		10021326	0					
ANR	10022011	Identifier	MCHECK		10021326	0					
ANR	10022012	ArgumentList	imageMemory		10021326	1					
ANR	10022013	Argument	imageMemory		10021326	0					
ANR	10022014	Identifier	imageMemory		10021326	0					
ANR	10022015	ForStatement	for ( i = 0 ; i < tfImageHeight ; i ++ )		10021326	2					
ANR	10022016	ForInit	i = 0 ;	832:17:28616:28621	10021326	0	True				
ANR	10022017	AssignmentExpression	i = 0		10021326	0		=			
ANR	10022018	Identifier	i		10021326	0					
ANR	10022019	PrimaryExpression	0		10021326	1					
ANR	10022020	Condition	i < tfImageHeight	832:24:28623:28639	10021326	1	True				
ANR	10022021	RelationalExpression	i < tfImageHeight		10021326	0		<			
ANR	10022022	Identifier	i		10021326	0					
ANR	10022023	Identifier	tfImageHeight		10021326	1					
ANR	10022024	PostIncDecOperationExpression	i ++	832:43:28642:28644	10021326	2	True				
ANR	10022025	Identifier	i		10021326	0					
ANR	10022026	IncDec	++		10021326	1					
ANR	10022027	CompoundStatement		95:48:4298:4298	10021326	3					
ANR	10022028	IfStatement	"if ( TIFFReadScanline ( tfFile , scan_line , i , 0 ) < 0 )"		10021326	0					
ANR	10022029	Condition	"TIFFReadScanline ( tfFile , scan_line , i , 0 ) < 0"	833:20:28669:28713	10021326	0	True				
ANR	10022030	RelationalExpression	"TIFFReadScanline ( tfFile , scan_line , i , 0 ) < 0"		10021326	0		<			
ANR	10022031	CallExpression	"TIFFReadScanline ( tfFile , scan_line , i , 0 )"		10021326	0					
ANR	10022032	Callee	TIFFReadScanline		10021326	0					
ANR	10022033	Identifier	TIFFReadScanline		10021326	0					
ANR	10022034	ArgumentList	tfFile		10021326	1					
ANR	10022035	Argument	tfFile		10021326	0					
ANR	10022036	Identifier	tfFile		10021326	0					
ANR	10022037	Argument	scan_line		10021326	1					
ANR	10022038	Identifier	scan_line		10021326	0					
ANR	10022039	Argument	i		10021326	2					
ANR	10022040	Identifier	i		10021326	0					
ANR	10022041	Argument	0		10021326	3					
ANR	10022042	PrimaryExpression	0		10021326	0					
ANR	10022043	PrimaryExpression	0		10021326	1					
ANR	10022044	BreakStatement	break ;	834:20:28736:28741	10021326	1	True				
ANR	10022045	ExpressionStatement	output_p = & imageMemory [ i * tfImageWidth ]	835:16:28759:28800	10021326	1	True				
ANR	10022046	AssignmentExpression	output_p = & imageMemory [ i * tfImageWidth ]		10021326	0		=			
ANR	10022047	Identifier	output_p		10021326	0					
ANR	10022048	UnaryOperationExpression	& imageMemory [ i * tfImageWidth ]		10021326	1					
ANR	10022049	UnaryOperator	&		10021326	0					
ANR	10022050	ArrayIndexing	imageMemory [ i * tfImageWidth ]		10021326	1					
ANR	10022051	Identifier	imageMemory		10021326	0					
ANR	10022052	MultiplicativeExpression	i * tfImageWidth		10021326	1		*			
ANR	10022053	Identifier	i		10021326	0					
ANR	10022054	Identifier	tfImageWidth		10021326	1					
ANR	10022055	ExpressionStatement	input_p = scan_line	836:16:28818:28837	10021326	2	True				
ANR	10022056	AssignmentExpression	input_p = scan_line		10021326	0		=			
ANR	10022057	Identifier	input_p		10021326	0					
ANR	10022058	Identifier	scan_line		10021326	1					
ANR	10022059	ForStatement	"for ( j = 0 ; j < tfImageWidth ; j += 4 , input_p ++ )"		10021326	3					
ANR	10022060	ForInit	j = 0 ;	837:21:28860:28865	10021326	0	True				
ANR	10022061	AssignmentExpression	j = 0		10021326	0		=			
ANR	10022062	Identifier	j		10021326	0					
ANR	10022063	PrimaryExpression	0		10021326	1					
ANR	10022064	Condition	j < tfImageWidth	837:28:28867:28882	10021326	1	True				
ANR	10022065	RelationalExpression	j < tfImageWidth		10021326	0		<			
ANR	10022066	Identifier	j		10021326	0					
ANR	10022067	Identifier	tfImageWidth		10021326	1					
ANR	10022068	Expression	"j += 4 , input_p ++"	837:46:28885:28901	10021326	2	True				
ANR	10022069	AssignmentExpression	j += 4		10021326	0		+=			
ANR	10022070	Identifier	j		10021326	0					
ANR	10022071	PrimaryExpression	4		10021326	1					
ANR	10022072	PostIncDecOperationExpression	input_p ++		10021326	1					
ANR	10022073	Identifier	input_p		10021326	0					
ANR	10022074	IncDec	++		10021326	1					
ANR	10022075	CompoundStatement		100:65:4555:4555	10021326	3					
ANR	10022076	ExpressionStatement	* output_p ++ = ( * input_p >> 6 ) + basePixel	838:20:28926:28967	10021326	0	True				
ANR	10022077	AssignmentExpression	* output_p ++ = ( * input_p >> 6 ) + basePixel		10021326	0		=			
ANR	10022078	UnaryOperationExpression	* output_p ++		10021326	0					
ANR	10022079	UnaryOperator	*		10021326	0					
ANR	10022080	PostIncDecOperationExpression	output_p ++		10021326	1					
ANR	10022081	Identifier	output_p		10021326	0					
ANR	10022082	IncDec	++		10021326	1					
ANR	10022083	AdditiveExpression	( * input_p >> 6 ) + basePixel		10021326	1		+			
ANR	10022084	ShiftExpression	* input_p >> 6		10021326	0		>>			
ANR	10022085	UnaryOperationExpression	* input_p		10021326	0					
ANR	10022086	UnaryOperator	*		10021326	0					
ANR	10022087	Identifier	input_p		10021326	1					
ANR	10022088	PrimaryExpression	6		10021326	1					
ANR	10022089	Identifier	basePixel		10021326	1					
ANR	10022090	ExpressionStatement	* output_p ++ = ( ( * input_p >> 4 ) & 3 ) + basePixel	839:20:28989:29036	10021326	1	True				
ANR	10022091	AssignmentExpression	* output_p ++ = ( ( * input_p >> 4 ) & 3 ) + basePixel		10021326	0		=			
ANR	10022092	UnaryOperationExpression	* output_p ++		10021326	0					
ANR	10022093	UnaryOperator	*		10021326	0					
ANR	10022094	PostIncDecOperationExpression	output_p ++		10021326	1					
ANR	10022095	Identifier	output_p		10021326	0					
ANR	10022096	IncDec	++		10021326	1					
ANR	10022097	AdditiveExpression	( ( * input_p >> 4 ) & 3 ) + basePixel		10021326	1		+			
ANR	10022098	BitAndExpression	( * input_p >> 4 ) & 3		10021326	0		&			
ANR	10022099	ShiftExpression	* input_p >> 4		10021326	0		>>			
ANR	10022100	UnaryOperationExpression	* input_p		10021326	0					
ANR	10022101	UnaryOperator	*		10021326	0					
ANR	10022102	Identifier	input_p		10021326	1					
ANR	10022103	PrimaryExpression	4		10021326	1					
ANR	10022104	PrimaryExpression	3		10021326	1					
ANR	10022105	Identifier	basePixel		10021326	1					
ANR	10022106	ExpressionStatement	* output_p ++ = ( ( * input_p >> 2 ) & 3 ) + basePixel	840:20:29058:29105	10021326	2	True				
ANR	10022107	AssignmentExpression	* output_p ++ = ( ( * input_p >> 2 ) & 3 ) + basePixel		10021326	0		=			
ANR	10022108	UnaryOperationExpression	* output_p ++		10021326	0					
ANR	10022109	UnaryOperator	*		10021326	0					
ANR	10022110	PostIncDecOperationExpression	output_p ++		10021326	1					
ANR	10022111	Identifier	output_p		10021326	0					
ANR	10022112	IncDec	++		10021326	1					
ANR	10022113	AdditiveExpression	( ( * input_p >> 2 ) & 3 ) + basePixel		10021326	1		+			
ANR	10022114	BitAndExpression	( * input_p >> 2 ) & 3		10021326	0		&			
ANR	10022115	ShiftExpression	* input_p >> 2		10021326	0		>>			
ANR	10022116	UnaryOperationExpression	* input_p		10021326	0					
ANR	10022117	UnaryOperator	*		10021326	0					
ANR	10022118	Identifier	input_p		10021326	1					
ANR	10022119	PrimaryExpression	2		10021326	1					
ANR	10022120	PrimaryExpression	3		10021326	1					
ANR	10022121	Identifier	basePixel		10021326	1					
ANR	10022122	ExpressionStatement	* output_p ++ = ( * input_p & 3 ) + basePixel	841:20:29127:29167	10021326	3	True				
ANR	10022123	AssignmentExpression	* output_p ++ = ( * input_p & 3 ) + basePixel		10021326	0		=			
ANR	10022124	UnaryOperationExpression	* output_p ++		10021326	0					
ANR	10022125	UnaryOperator	*		10021326	0					
ANR	10022126	PostIncDecOperationExpression	output_p ++		10021326	1					
ANR	10022127	Identifier	output_p		10021326	0					
ANR	10022128	IncDec	++		10021326	1					
ANR	10022129	AdditiveExpression	( * input_p & 3 ) + basePixel		10021326	1		+			
ANR	10022130	BitAndExpression	* input_p & 3		10021326	0		&			
ANR	10022131	UnaryOperationExpression	* input_p		10021326	0					
ANR	10022132	UnaryOperator	*		10021326	0					
ANR	10022133	Identifier	input_p		10021326	1					
ANR	10022134	PrimaryExpression	3		10021326	1					
ANR	10022135	Identifier	basePixel		10021326	1					
ANR	10022136	ElseStatement	else		10021326	0					
ANR	10022137	IfStatement	if ( ( xImageDepth == 4 ) && ( tfImageDepth == 2 ) )		10021326	0					
ANR	10022138	Condition	( xImageDepth == 4 ) && ( tfImageDepth == 2 )	844:19:29220:29260	10021326	0	True				
ANR	10022139	AndExpression	( xImageDepth == 4 ) && ( tfImageDepth == 2 )		10021326	0		&&			
ANR	10022140	EqualityExpression	xImageDepth == 4		10021326	0		==			
ANR	10022141	Identifier	xImageDepth		10021326	0					
ANR	10022142	PrimaryExpression	4		10021326	1					
ANR	10022143	EqualityExpression	tfImageDepth == 2		10021326	1		==			
ANR	10022144	Identifier	tfImageDepth		10021326	0					
ANR	10022145	PrimaryExpression	2		10021326	1					
ANR	10022146	CompoundStatement		107:62:4914:4914	10021326	1					
ANR	10022147	ExpressionStatement	output_p = imageMemory = ( char * ) malloc ( tfBytesPerRow * 2 * tfImageHeight + 2 )	845:12:29277:29372	10021326	0	True				
ANR	10022148	AssignmentExpression	output_p = imageMemory = ( char * ) malloc ( tfBytesPerRow * 2 * tfImageHeight + 2 )		10021326	0		=			
ANR	10022149	Identifier	output_p		10021326	0					
ANR	10022150	AssignmentExpression	imageMemory = ( char * ) malloc ( tfBytesPerRow * 2 * tfImageHeight + 2 )		10021326	1		=			
ANR	10022151	Identifier	imageMemory		10021326	0					
ANR	10022152	CastExpression	( char * ) malloc ( tfBytesPerRow * 2 * tfImageHeight + 2 )		10021326	1					
ANR	10022153	CastTarget	char *		10021326	0					
ANR	10022154	CallExpression	malloc ( tfBytesPerRow * 2 * tfImageHeight + 2 )		10021326	1					
ANR	10022155	Callee	malloc		10021326	0					
ANR	10022156	Identifier	malloc		10021326	0					
ANR	10022157	ArgumentList	tfBytesPerRow * 2 * tfImageHeight + 2		10021326	1					
ANR	10022158	Argument	tfBytesPerRow * 2 * tfImageHeight + 2		10021326	0					
ANR	10022159	AdditiveExpression	tfBytesPerRow * 2 * tfImageHeight + 2		10021326	0		+			
ANR	10022160	MultiplicativeExpression	tfBytesPerRow * 2 * tfImageHeight		10021326	0		*			
ANR	10022161	Identifier	tfBytesPerRow		10021326	0					
ANR	10022162	MultiplicativeExpression	2 * tfImageHeight		10021326	1		*			
ANR	10022163	PrimaryExpression	2		10021326	0					
ANR	10022164	Identifier	tfImageHeight		10021326	1					
ANR	10022165	PrimaryExpression	2		10021326	1					
ANR	10022166	ExpressionStatement	MCHECK ( imageMemory )	847:12:29386:29405	10021326	1	True				
ANR	10022167	CallExpression	MCHECK ( imageMemory )		10021326	0					
ANR	10022168	Callee	MCHECK		10021326	0					
ANR	10022169	Identifier	MCHECK		10021326	0					
ANR	10022170	ArgumentList	imageMemory		10021326	1					
ANR	10022171	Argument	imageMemory		10021326	0					
ANR	10022172	Identifier	imageMemory		10021326	0					
ANR	10022173	ForStatement	for ( i = 0 ; i < tfImageHeight ; i ++ )		10021326	2					
ANR	10022174	ForInit	i = 0 ;	849:17:29425:29430	10021326	0	True				
ANR	10022175	AssignmentExpression	i = 0		10021326	0		=			
ANR	10022176	Identifier	i		10021326	0					
ANR	10022177	PrimaryExpression	0		10021326	1					
ANR	10022178	Condition	i < tfImageHeight	849:24:29432:29448	10021326	1	True				
ANR	10022179	RelationalExpression	i < tfImageHeight		10021326	0		<			
ANR	10022180	Identifier	i		10021326	0					
ANR	10022181	Identifier	tfImageHeight		10021326	1					
ANR	10022182	PostIncDecOperationExpression	i ++	849:43:29451:29453	10021326	2	True				
ANR	10022183	Identifier	i		10021326	0					
ANR	10022184	IncDec	++		10021326	1					
ANR	10022185	CompoundStatement		112:48:5107:5107	10021326	3					
ANR	10022186	IfStatement	"if ( TIFFReadScanline ( tfFile , scan_line , i , 0 ) < 0 )"		10021326	0					
ANR	10022187	Condition	"TIFFReadScanline ( tfFile , scan_line , i , 0 ) < 0"	850:20:29478:29522	10021326	0	True				
ANR	10022188	RelationalExpression	"TIFFReadScanline ( tfFile , scan_line , i , 0 ) < 0"		10021326	0		<			
ANR	10022189	CallExpression	"TIFFReadScanline ( tfFile , scan_line , i , 0 )"		10021326	0					
ANR	10022190	Callee	TIFFReadScanline		10021326	0					
ANR	10022191	Identifier	TIFFReadScanline		10021326	0					
ANR	10022192	ArgumentList	tfFile		10021326	1					
ANR	10022193	Argument	tfFile		10021326	0					
ANR	10022194	Identifier	tfFile		10021326	0					
ANR	10022195	Argument	scan_line		10021326	1					
ANR	10022196	Identifier	scan_line		10021326	0					
ANR	10022197	Argument	i		10021326	2					
ANR	10022198	Identifier	i		10021326	0					
ANR	10022199	Argument	0		10021326	3					
ANR	10022200	PrimaryExpression	0		10021326	0					
ANR	10022201	PrimaryExpression	0		10021326	1					
ANR	10022202	BreakStatement	break ;	851:20:29545:29550	10021326	1	True				
ANR	10022203	ExpressionStatement	output_p = & imageMemory [ i * tfBytesPerRow * 2 ]	852:16:29568:29614	10021326	1	True				
ANR	10022204	AssignmentExpression	output_p = & imageMemory [ i * tfBytesPerRow * 2 ]		10021326	0		=			
ANR	10022205	Identifier	output_p		10021326	0					
ANR	10022206	UnaryOperationExpression	& imageMemory [ i * tfBytesPerRow * 2 ]		10021326	1					
ANR	10022207	UnaryOperator	&		10021326	0					
ANR	10022208	ArrayIndexing	imageMemory [ i * tfBytesPerRow * 2 ]		10021326	1					
ANR	10022209	Identifier	imageMemory		10021326	0					
ANR	10022210	MultiplicativeExpression	i * tfBytesPerRow * 2		10021326	1		*			
ANR	10022211	Identifier	i		10021326	0					
ANR	10022212	MultiplicativeExpression	tfBytesPerRow * 2		10021326	1		*			
ANR	10022213	Identifier	tfBytesPerRow		10021326	0					
ANR	10022214	PrimaryExpression	2		10021326	1					
ANR	10022215	ExpressionStatement	input_p = scan_line	853:16:29632:29651	10021326	2	True				
ANR	10022216	AssignmentExpression	input_p = scan_line		10021326	0		=			
ANR	10022217	Identifier	input_p		10021326	0					
ANR	10022218	Identifier	scan_line		10021326	1					
ANR	10022219	ForStatement	"for ( j = 0 ; j < tfImageWidth ; j += 4 , input_p ++ )"		10021326	3					
ANR	10022220	ForInit	j = 0 ;	854:21:29674:29679	10021326	0	True				
ANR	10022221	AssignmentExpression	j = 0		10021326	0		=			
ANR	10022222	Identifier	j		10021326	0					
ANR	10022223	PrimaryExpression	0		10021326	1					
ANR	10022224	Condition	j < tfImageWidth	854:28:29681:29696	10021326	1	True				
ANR	10022225	RelationalExpression	j < tfImageWidth		10021326	0		<			
ANR	10022226	Identifier	j		10021326	0					
ANR	10022227	Identifier	tfImageWidth		10021326	1					
ANR	10022228	Expression	"j += 4 , input_p ++"	854:46:29699:29715	10021326	2	True				
ANR	10022229	AssignmentExpression	j += 4		10021326	0		+=			
ANR	10022230	Identifier	j		10021326	0					
ANR	10022231	PrimaryExpression	4		10021326	1					
ANR	10022232	PostIncDecOperationExpression	input_p ++		10021326	1					
ANR	10022233	Identifier	input_p		10021326	0					
ANR	10022234	IncDec	++		10021326	1					
ANR	10022235	CompoundStatement		117:65:5369:5369	10021326	3					
ANR	10022236	ExpressionStatement	* output_p ++ = ( ( ( * input_p >> 6 ) << 4 ) | ( ( * input_p >> 4 ) & 3 ) ) + basePixel	855:20:29740:29836	10021326	0	True				
ANR	10022237	AssignmentExpression	* output_p ++ = ( ( ( * input_p >> 6 ) << 4 ) | ( ( * input_p >> 4 ) & 3 ) ) + basePixel		10021326	0		=			
ANR	10022238	UnaryOperationExpression	* output_p ++		10021326	0					
ANR	10022239	UnaryOperator	*		10021326	0					
ANR	10022240	PostIncDecOperationExpression	output_p ++		10021326	1					
ANR	10022241	Identifier	output_p		10021326	0					
ANR	10022242	IncDec	++		10021326	1					
ANR	10022243	AdditiveExpression	( ( ( * input_p >> 6 ) << 4 ) | ( ( * input_p >> 4 ) & 3 ) ) + basePixel		10021326	1		+			
ANR	10022244	InclusiveOrExpression	( ( * input_p >> 6 ) << 4 ) | ( ( * input_p >> 4 ) & 3 )		10021326	0		|			
ANR	10022245	ShiftExpression	( * input_p >> 6 ) << 4		10021326	0		<<			
ANR	10022246	ShiftExpression	* input_p >> 6		10021326	0		>>			
ANR	10022247	UnaryOperationExpression	* input_p		10021326	0					
ANR	10022248	UnaryOperator	*		10021326	0					
ANR	10022249	Identifier	input_p		10021326	1					
ANR	10022250	PrimaryExpression	6		10021326	1					
ANR	10022251	PrimaryExpression	4		10021326	1					
ANR	10022252	BitAndExpression	( * input_p >> 4 ) & 3		10021326	1		&			
ANR	10022253	ShiftExpression	* input_p >> 4		10021326	0		>>			
ANR	10022254	UnaryOperationExpression	* input_p		10021326	0					
ANR	10022255	UnaryOperator	*		10021326	0					
ANR	10022256	Identifier	input_p		10021326	1					
ANR	10022257	PrimaryExpression	4		10021326	1					
ANR	10022258	PrimaryExpression	3		10021326	1					
ANR	10022259	Identifier	basePixel		10021326	1					
ANR	10022260	ExpressionStatement	* output_p ++ = ( ( ( ( * input_p >> 2 ) & 3 ) << 4 ) | ( * input_p & 3 ) ) + basePixel	857:20:29858:29953	10021326	1	True				
ANR	10022261	AssignmentExpression	* output_p ++ = ( ( ( ( * input_p >> 2 ) & 3 ) << 4 ) | ( * input_p & 3 ) ) + basePixel		10021326	0		=			
ANR	10022262	UnaryOperationExpression	* output_p ++		10021326	0					
ANR	10022263	UnaryOperator	*		10021326	0					
ANR	10022264	PostIncDecOperationExpression	output_p ++		10021326	1					
ANR	10022265	Identifier	output_p		10021326	0					
ANR	10022266	IncDec	++		10021326	1					
ANR	10022267	AdditiveExpression	( ( ( ( * input_p >> 2 ) & 3 ) << 4 ) | ( * input_p & 3 ) ) + basePixel		10021326	1		+			
ANR	10022268	InclusiveOrExpression	( ( ( * input_p >> 2 ) & 3 ) << 4 ) | ( * input_p & 3 )		10021326	0		|			
ANR	10022269	ShiftExpression	( ( * input_p >> 2 ) & 3 ) << 4		10021326	0		<<			
ANR	10022270	BitAndExpression	( * input_p >> 2 ) & 3		10021326	0		&			
ANR	10022271	ShiftExpression	* input_p >> 2		10021326	0		>>			
ANR	10022272	UnaryOperationExpression	* input_p		10021326	0					
ANR	10022273	UnaryOperator	*		10021326	0					
ANR	10022274	Identifier	input_p		10021326	1					
ANR	10022275	PrimaryExpression	2		10021326	1					
ANR	10022276	PrimaryExpression	3		10021326	1					
ANR	10022277	PrimaryExpression	4		10021326	1					
ANR	10022278	BitAndExpression	* input_p & 3		10021326	1		&			
ANR	10022279	UnaryOperationExpression	* input_p		10021326	0					
ANR	10022280	UnaryOperator	*		10021326	0					
ANR	10022281	Identifier	input_p		10021326	1					
ANR	10022282	PrimaryExpression	3		10021326	1					
ANR	10022283	Identifier	basePixel		10021326	1					
ANR	10022284	ElseStatement	else		10021326	0					
ANR	10022285	CompoundStatement		124:15:5653:5653	10021326	0					
ANR	10022286	ExpressionStatement	"fprintf ( stderr , ""xtiff: can't handle %d-bit TIFF file on an %d-bit display\\n"" , tfImageDepth , xImageDepth )"	862:12:30016:30153	10021326	0	True				
ANR	10022287	CallExpression	"fprintf ( stderr , ""xtiff: can't handle %d-bit TIFF file on an %d-bit display\\n"" , tfImageDepth , xImageDepth )"		10021326	0					
ANR	10022288	Callee	fprintf		10021326	0					
ANR	10022289	Identifier	fprintf		10021326	0					
ANR	10022290	ArgumentList	stderr		10021326	1					
ANR	10022291	Argument	stderr		10021326	0					
ANR	10022292	Identifier	stderr		10021326	0					
ANR	10022293	Argument	"""xtiff: can't handle %d-bit TIFF file on an %d-bit display\\n"""		10021326	1					
ANR	10022294	PrimaryExpression	"""xtiff: can't handle %d-bit TIFF file on an %d-bit display\\n"""		10021326	0					
ANR	10022295	Argument	tfImageDepth		10021326	2					
ANR	10022296	Identifier	tfImageDepth		10021326	0					
ANR	10022297	Argument	xImageDepth		10021326	3					
ANR	10022298	Identifier	xImageDepth		10021326	0					
ANR	10022299	ExpressionStatement	exit ( 0 )	865:12:30167:30174	10021326	1	True				
ANR	10022300	CallExpression	exit ( 0 )		10021326	0					
ANR	10022301	Callee	exit		10021326	0					
ANR	10022302	Identifier	exit		10021326	0					
ANR	10022303	ArgumentList	0		10021326	1					
ANR	10022304	Argument	0		10021326	0					
ANR	10022305	PrimaryExpression	0		10021326	0					
ANR	10022306	ExpressionStatement	free ( scan_line )	869:4:30197:30212	10021326	7	True				
ANR	10022307	CallExpression	free ( scan_line )		10021326	0					
ANR	10022308	Callee	free		10021326	0					
ANR	10022309	Identifier	free		10021326	0					
ANR	10022310	ArgumentList	scan_line		10021326	1					
ANR	10022311	Argument	scan_line		10021326	0					
ANR	10022312	Identifier	scan_line		10021326	0					
ANR	10022313	ReturnType	void		10021326	1					
ANR	10022314	Identifier	GetTIFFImage		10021326	2					
ANR	10022315	ParameterList			10021326	3					
ANR	10022316	CFGEntryNode	ENTRY		10021326		True				
ANR	10022317	CFGExitNode	EXIT		10021326		True				
ANR	10022318	Symbol	xDisplay		10021326						
ANR	10022319	Symbol	blue_shift		10021326						
ANR	10022320	Symbol	* green_shift		10021326						
ANR	10022321	Symbol	xImageDepth		10021326						
ANR	10022322	Symbol	* input_p ++		10021326						
ANR	10022323	Symbol	tfImageWidth		10021326						
ANR	10022324	Symbol	scan_line		10021326						
ANR	10022325	Symbol	ImageByteOrder		10021326						
ANR	10022326	Symbol	* ( output_p + green_shift )		10021326						
ANR	10022327	Symbol	* red_shift		10021326						
ANR	10022328	Symbol	* blue_shift		10021326						
ANR	10022329	Symbol	pixel_map		10021326						
ANR	10022330	Symbol	tfImageHeight		10021326						
ANR	10022331	Symbol	tfSamplesPerPixel		10021326						
ANR	10022332	Symbol	xRedMask		10021326						
ANR	10022333	Symbol	* pixel_map		10021326						
ANR	10022334	Symbol	TIFFReadScanline		10021326						
ANR	10022335	Symbol	* output_p ++		10021326						
ANR	10022336	Symbol	basePixel		10021326						
ANR	10022337	Symbol	tfBytesPerRow		10021326						
ANR	10022338	Symbol	tfImageDepth		10021326						
ANR	10022339	Symbol	green_shift		10021326						
ANR	10022340	Symbol	output_p		10021326						
ANR	10022341	Symbol	malloc		10021326						
ANR	10022342	Symbol	* output_p		10021326						
ANR	10022343	Symbol	* input_p		10021326						
ANR	10022344	Symbol	TIFFScanlineSize		10021326						
ANR	10022345	Symbol	xBlueMask		10021326						
ANR	10022346	Symbol	PLANARCONFIG_CONTIG		10021326						
ANR	10022347	Symbol	i		10021326						
ANR	10022348	Symbol	j		10021326						
ANR	10022349	Symbol	imageMemory		10021326						
ANR	10022350	Symbol	stderr		10021326						
ANR	10022351	Symbol	tfPlanarConfiguration		10021326						
ANR	10022352	Symbol	s		10021326						
ANR	10022353	Symbol	red_shift		10021326						
ANR	10022354	Symbol	* ( output_p + blue_shift )		10021326						
ANR	10022355	Symbol	xGreenMask		10021326						
ANR	10022356	Symbol	* ( output_p + red_shift )		10021326						
ANR	10022357	Symbol	* s		10021326						
ANR	10022358	Symbol	tfFile		10021326						
ANR	10022359	Symbol	input_p		10021326						
ANR	10022360	Symbol	LSBFirst		10021326						
ANR	10022361	Function	CreateXImage	872:0:30217:32611							
ANR	10022362	FunctionDef	CreateXImage ()		10022361	0					
ANR	10022363	CompoundStatement		874:0:30237:32611	10022361	0					
ANR	10022364	IdentifierDeclStatement	XGCValues gc_values ;	875:4:30243:30262	10022361	0	True				
ANR	10022365	IdentifierDecl	gc_values		10022361	0					
ANR	10022366	IdentifierDeclType	XGCValues		10022361	0					
ANR	10022367	Identifier	gc_values		10022361	1					
ANR	10022368	IdentifierDeclStatement	GC bitmap_gc ;	876:4:30268:30280	10022361	1	True				
ANR	10022369	IdentifierDecl	bitmap_gc		10022361	0					
ANR	10022370	IdentifierDeclType	GC		10022361	0					
ANR	10022371	Identifier	bitmap_gc		10022361	1					
ANR	10022372	ExpressionStatement	xOffset = yOffset = 0	878:4:30287:30308	10022361	2	True				
ANR	10022373	AssignmentExpression	xOffset = yOffset = 0		10022361	0		=			
ANR	10022374	Identifier	xOffset		10022361	0					
ANR	10022375	AssignmentExpression	yOffset = 0		10022361	1		=			
ANR	10022376	Identifier	yOffset		10022361	0					
ANR	10022377	PrimaryExpression	0		10022361	1					
ANR	10022378	ExpressionStatement	grabX = grabY = - 1	879:4:30314:30332	10022361	3	True				
ANR	10022379	AssignmentExpression	grabX = grabY = - 1		10022361	0		=			
ANR	10022380	Identifier	grabX		10022361	0					
ANR	10022381	AssignmentExpression	grabY = - 1		10022361	1		=			
ANR	10022382	Identifier	grabY		10022361	0					
ANR	10022383	UnaryOperationExpression	- 1		10022361	1					
ANR	10022384	UnaryOperator	-		10022361	0					
ANR	10022385	PrimaryExpression	1		10022361	1					
ANR	10022386	ExpressionStatement	"xImage = XCreateImage ( xDisplay , xVisual , xImageDepth , xImageDepth == 1 ? XYBitmap : ZPixmap , 0 , ( char * ) imageMemory , tfImageWidth , tfImageHeight , 8 , 0 )"	881:4:30339:30566	10022361	4	True				
ANR	10022387	AssignmentExpression	"xImage = XCreateImage ( xDisplay , xVisual , xImageDepth , xImageDepth == 1 ? XYBitmap : ZPixmap , 0 , ( char * ) imageMemory , tfImageWidth , tfImageHeight , 8 , 0 )"		10022361	0		=			
ANR	10022388	Identifier	xImage		10022361	0					
ANR	10022389	CallExpression	"XCreateImage ( xDisplay , xVisual , xImageDepth , xImageDepth == 1 ? XYBitmap : ZPixmap , 0 , ( char * ) imageMemory , tfImageWidth , tfImageHeight , 8 , 0 )"		10022361	1					
ANR	10022390	Callee	XCreateImage		10022361	0					
ANR	10022391	Identifier	XCreateImage		10022361	0					
ANR	10022392	ArgumentList	xDisplay		10022361	1					
ANR	10022393	Argument	xDisplay		10022361	0					
ANR	10022394	Identifier	xDisplay		10022361	0					
ANR	10022395	Argument	xVisual		10022361	1					
ANR	10022396	Identifier	xVisual		10022361	0					
ANR	10022397	Argument	xImageDepth		10022361	2					
ANR	10022398	Identifier	xImageDepth		10022361	0					
ANR	10022399	Argument	xImageDepth == 1 ? XYBitmap : ZPixmap		10022361	3					
ANR	10022400	ConditionalExpression	xImageDepth == 1 ? XYBitmap : ZPixmap		10022361	0					
ANR	10022401	Condition	xImageDepth == 1		10022361	0					
ANR	10022402	EqualityExpression	xImageDepth == 1		10022361	0		==			
ANR	10022403	Identifier	xImageDepth		10022361	0					
ANR	10022404	PrimaryExpression	1		10022361	1					
ANR	10022405	Identifier	XYBitmap		10022361	1					
ANR	10022406	Identifier	ZPixmap		10022361	2					
ANR	10022407	Argument	0		10022361	4					
ANR	10022408	PrimaryExpression	0		10022361	0					
ANR	10022409	Argument	( char * ) imageMemory		10022361	5					
ANR	10022410	CastExpression	( char * ) imageMemory		10022361	0					
ANR	10022411	CastTarget	char *		10022361	0					
ANR	10022412	Identifier	imageMemory		10022361	1					
ANR	10022413	Argument	tfImageWidth		10022361	6					
ANR	10022414	Identifier	tfImageWidth		10022361	0					
ANR	10022415	Argument	tfImageHeight		10022361	7					
ANR	10022416	Identifier	tfImageHeight		10022361	0					
ANR	10022417	Argument	8		10022361	8					
ANR	10022418	PrimaryExpression	8		10022361	0					
ANR	10022419	Argument	0		10022361	9					
ANR	10022420	PrimaryExpression	0		10022361	0					
ANR	10022421	IfStatement	if ( xImageDepth == 1 )		10022361	5					
ANR	10022422	Condition	xImageDepth == 1	889:8:30672:30687	10022361	0	True				
ANR	10022423	EqualityExpression	xImageDepth == 1		10022361	0		==			
ANR	10022424	Identifier	xImageDepth		10022361	0					
ANR	10022425	PrimaryExpression	1		10022361	1					
ANR	10022426	ExpressionStatement	xImage -> bitmap_bit_order = MSBFirst	890:8:30698:30733	10022361	1	True				
ANR	10022427	AssignmentExpression	xImage -> bitmap_bit_order = MSBFirst		10022361	0		=			
ANR	10022428	PtrMemberAccess	xImage -> bitmap_bit_order		10022361	0					
ANR	10022429	Identifier	xImage		10022361	0					
ANR	10022430	Identifier	bitmap_bit_order		10022361	1					
ANR	10022431	Identifier	MSBFirst		10022361	1					
ANR	10022432	IfStatement	if ( xImageDepth <= 8 )		10022361	6					
ANR	10022433	Condition	xImageDepth <= 8	891:8:30743:30758	10022361	0	True				
ANR	10022434	RelationalExpression	xImageDepth <= 8		10022361	0		<=			
ANR	10022435	Identifier	xImageDepth		10022361	0					
ANR	10022436	PrimaryExpression	8		10022361	1					
ANR	10022437	ExpressionStatement	xImage -> byte_order = MSBFirst	892:8:30769:30798	10022361	1	True				
ANR	10022438	AssignmentExpression	xImage -> byte_order = MSBFirst		10022361	0		=			
ANR	10022439	PtrMemberAccess	xImage -> byte_order		10022361	0					
ANR	10022440	Identifier	xImage		10022361	0					
ANR	10022441	Identifier	byte_order		10022361	1					
ANR	10022442	Identifier	MSBFirst		10022361	1					
ANR	10022443	ExpressionStatement	gc_values . function = GXcopy	897:4:30852:30879	10022361	7	True				
ANR	10022444	AssignmentExpression	gc_values . function = GXcopy		10022361	0		=			
ANR	10022445	MemberAccess	gc_values . function		10022361	0					
ANR	10022446	Identifier	gc_values		10022361	0					
ANR	10022447	Identifier	function		10022361	1					
ANR	10022448	Identifier	GXcopy		10022361	1					
ANR	10022449	ExpressionStatement	gc_values . plane_mask = AllPlanes	898:4:30885:30917	10022361	8	True				
ANR	10022450	AssignmentExpression	gc_values . plane_mask = AllPlanes		10022361	0		=			
ANR	10022451	MemberAccess	gc_values . plane_mask		10022361	0					
ANR	10022452	Identifier	gc_values		10022361	0					
ANR	10022453	Identifier	plane_mask		10022361	1					
ANR	10022454	Identifier	AllPlanes		10022361	1					
ANR	10022455	IfStatement	if ( tfPhotometricInterpretation == PHOTOMETRIC_MINISBLACK )		10022361	9					
ANR	10022456	Condition	tfPhotometricInterpretation == PHOTOMETRIC_MINISBLACK	899:8:30927:30979	10022361	0	True				
ANR	10022457	EqualityExpression	tfPhotometricInterpretation == PHOTOMETRIC_MINISBLACK		10022361	0		==			
ANR	10022458	Identifier	tfPhotometricInterpretation		10022361	0					
ANR	10022459	Identifier	PHOTOMETRIC_MINISBLACK		10022361	1					
ANR	10022460	CompoundStatement		26:63:744:744	10022361	1					
ANR	10022461	ExpressionStatement	"gc_values . foreground = XWhitePixel ( xDisplay , xScreen )"	900:8:30992:31045	10022361	0	True				
ANR	10022462	AssignmentExpression	"gc_values . foreground = XWhitePixel ( xDisplay , xScreen )"		10022361	0		=			
ANR	10022463	MemberAccess	gc_values . foreground		10022361	0					
ANR	10022464	Identifier	gc_values		10022361	0					
ANR	10022465	Identifier	foreground		10022361	1					
ANR	10022466	CallExpression	"XWhitePixel ( xDisplay , xScreen )"		10022361	1					
ANR	10022467	Callee	XWhitePixel		10022361	0					
ANR	10022468	Identifier	XWhitePixel		10022361	0					
ANR	10022469	ArgumentList	xDisplay		10022361	1					
ANR	10022470	Argument	xDisplay		10022361	0					
ANR	10022471	Identifier	xDisplay		10022361	0					
ANR	10022472	Argument	xScreen		10022361	1					
ANR	10022473	Identifier	xScreen		10022361	0					
ANR	10022474	ExpressionStatement	"gc_values . background = XBlackPixel ( xDisplay , xScreen )"	901:8:31055:31108	10022361	1	True				
ANR	10022475	AssignmentExpression	"gc_values . background = XBlackPixel ( xDisplay , xScreen )"		10022361	0		=			
ANR	10022476	MemberAccess	gc_values . background		10022361	0					
ANR	10022477	Identifier	gc_values		10022361	0					
ANR	10022478	Identifier	background		10022361	1					
ANR	10022479	CallExpression	"XBlackPixel ( xDisplay , xScreen )"		10022361	1					
ANR	10022480	Callee	XBlackPixel		10022361	0					
ANR	10022481	Identifier	XBlackPixel		10022361	0					
ANR	10022482	ArgumentList	xDisplay		10022361	1					
ANR	10022483	Argument	xDisplay		10022361	0					
ANR	10022484	Identifier	xDisplay		10022361	0					
ANR	10022485	Argument	xScreen		10022361	1					
ANR	10022486	Identifier	xScreen		10022361	0					
ANR	10022487	ElseStatement	else		10022361	0					
ANR	10022488	CompoundStatement		29:11:883:883	10022361	0					
ANR	10022489	ExpressionStatement	"gc_values . foreground = XBlackPixel ( xDisplay , xScreen )"	903:8:31131:31184	10022361	0	True				
ANR	10022490	AssignmentExpression	"gc_values . foreground = XBlackPixel ( xDisplay , xScreen )"		10022361	0		=			
ANR	10022491	MemberAccess	gc_values . foreground		10022361	0					
ANR	10022492	Identifier	gc_values		10022361	0					
ANR	10022493	Identifier	foreground		10022361	1					
ANR	10022494	CallExpression	"XBlackPixel ( xDisplay , xScreen )"		10022361	1					
ANR	10022495	Callee	XBlackPixel		10022361	0					
ANR	10022496	Identifier	XBlackPixel		10022361	0					
ANR	10022497	ArgumentList	xDisplay		10022361	1					
ANR	10022498	Argument	xDisplay		10022361	0					
ANR	10022499	Identifier	xDisplay		10022361	0					
ANR	10022500	Argument	xScreen		10022361	1					
ANR	10022501	Identifier	xScreen		10022361	0					
ANR	10022502	ExpressionStatement	"gc_values . background = XWhitePixel ( xDisplay , xScreen )"	904:8:31194:31247	10022361	1	True				
ANR	10022503	AssignmentExpression	"gc_values . background = XWhitePixel ( xDisplay , xScreen )"		10022361	0		=			
ANR	10022504	MemberAccess	gc_values . background		10022361	0					
ANR	10022505	Identifier	gc_values		10022361	0					
ANR	10022506	Identifier	background		10022361	1					
ANR	10022507	CallExpression	"XWhitePixel ( xDisplay , xScreen )"		10022361	1					
ANR	10022508	Callee	XWhitePixel		10022361	0					
ANR	10022509	Identifier	XWhitePixel		10022361	0					
ANR	10022510	ArgumentList	xDisplay		10022361	1					
ANR	10022511	Argument	xDisplay		10022361	0					
ANR	10022512	Identifier	xDisplay		10022361	0					
ANR	10022513	Argument	xScreen		10022361	1					
ANR	10022514	Identifier	xScreen		10022361	0					
ANR	10022515	ExpressionStatement	"xWinGc = XCreateGC ( xDisplay , XtWindow ( shellWidget ) , GCFunction | GCPlaneMask | GCForeground | GCBackground , & gc_values )"	906:4:31259:31386	10022361	10	True				
ANR	10022516	AssignmentExpression	"xWinGc = XCreateGC ( xDisplay , XtWindow ( shellWidget ) , GCFunction | GCPlaneMask | GCForeground | GCBackground , & gc_values )"		10022361	0		=			
ANR	10022517	Identifier	xWinGc		10022361	0					
ANR	10022518	CallExpression	"XCreateGC ( xDisplay , XtWindow ( shellWidget ) , GCFunction | GCPlaneMask | GCForeground | GCBackground , & gc_values )"		10022361	1					
ANR	10022519	Callee	XCreateGC		10022361	0					
ANR	10022520	Identifier	XCreateGC		10022361	0					
ANR	10022521	ArgumentList	xDisplay		10022361	1					
ANR	10022522	Argument	xDisplay		10022361	0					
ANR	10022523	Identifier	xDisplay		10022361	0					
ANR	10022524	Argument	XtWindow ( shellWidget )		10022361	1					
ANR	10022525	CallExpression	XtWindow ( shellWidget )		10022361	0					
ANR	10022526	Callee	XtWindow		10022361	0					
ANR	10022527	Identifier	XtWindow		10022361	0					
ANR	10022528	ArgumentList	shellWidget		10022361	1					
ANR	10022529	Argument	shellWidget		10022361	0					
ANR	10022530	Identifier	shellWidget		10022361	0					
ANR	10022531	Argument	GCFunction | GCPlaneMask | GCForeground | GCBackground		10022361	2					
ANR	10022532	InclusiveOrExpression	GCFunction | GCPlaneMask | GCForeground | GCBackground		10022361	0		|			
ANR	10022533	Identifier	GCFunction		10022361	0					
ANR	10022534	InclusiveOrExpression	GCPlaneMask | GCForeground | GCBackground		10022361	1		|			
ANR	10022535	Identifier	GCPlaneMask		10022361	0					
ANR	10022536	InclusiveOrExpression	GCForeground | GCBackground		10022361	1		|			
ANR	10022537	Identifier	GCForeground		10022361	0					
ANR	10022538	Identifier	GCBackground		10022361	1					
ANR	10022539	Argument	& gc_values		10022361	3					
ANR	10022540	UnaryOperationExpression	& gc_values		10022361	0					
ANR	10022541	UnaryOperator	&		10022361	0					
ANR	10022542	Identifier	gc_values		10022361	1					
ANR	10022543	IfStatement	if ( appData . usePixmap == True )		10022361	11					
ANR	10022544	Condition	appData . usePixmap == True	912:8:31456:31480	10022361	0	True				
ANR	10022545	EqualityExpression	appData . usePixmap == True		10022361	0		==			
ANR	10022546	MemberAccess	appData . usePixmap		10022361	0					
ANR	10022547	Identifier	appData		10022361	0					
ANR	10022548	Identifier	usePixmap		10022361	1					
ANR	10022549	Identifier	True		10022361	1					
ANR	10022550	CompoundStatement		39:35:1245:1245	10022361	1					
ANR	10022551	ExpressionStatement	"xImagePixmap = XCreatePixmap ( xDisplay , RootWindow ( xDisplay , xScreen ) , xImage -> width , xImage -> height , xImageDepth )"	913:8:31493:31618	10022361	0	True				
ANR	10022552	AssignmentExpression	"xImagePixmap = XCreatePixmap ( xDisplay , RootWindow ( xDisplay , xScreen ) , xImage -> width , xImage -> height , xImageDepth )"		10022361	0		=			
ANR	10022553	Identifier	xImagePixmap		10022361	0					
ANR	10022554	CallExpression	"XCreatePixmap ( xDisplay , RootWindow ( xDisplay , xScreen ) , xImage -> width , xImage -> height , xImageDepth )"		10022361	1					
ANR	10022555	Callee	XCreatePixmap		10022361	0					
ANR	10022556	Identifier	XCreatePixmap		10022361	0					
ANR	10022557	ArgumentList	xDisplay		10022361	1					
ANR	10022558	Argument	xDisplay		10022361	0					
ANR	10022559	Identifier	xDisplay		10022361	0					
ANR	10022560	Argument	"RootWindow ( xDisplay , xScreen )"		10022361	1					
ANR	10022561	CallExpression	"RootWindow ( xDisplay , xScreen )"		10022361	0					
ANR	10022562	Callee	RootWindow		10022361	0					
ANR	10022563	Identifier	RootWindow		10022361	0					
ANR	10022564	ArgumentList	xDisplay		10022361	1					
ANR	10022565	Argument	xDisplay		10022361	0					
ANR	10022566	Identifier	xDisplay		10022361	0					
ANR	10022567	Argument	xScreen		10022361	1					
ANR	10022568	Identifier	xScreen		10022361	0					
ANR	10022569	Argument	xImage -> width		10022361	2					
ANR	10022570	PtrMemberAccess	xImage -> width		10022361	0					
ANR	10022571	Identifier	xImage		10022361	0					
ANR	10022572	Identifier	width		10022361	1					
ANR	10022573	Argument	xImage -> height		10022361	3					
ANR	10022574	PtrMemberAccess	xImage -> height		10022361	0					
ANR	10022575	Identifier	xImage		10022361	0					
ANR	10022576	Identifier	height		10022361	1					
ANR	10022577	Argument	xImageDepth		10022361	4					
ANR	10022578	Identifier	xImageDepth		10022361	0					
ANR	10022579	IfStatement	if ( xImageDepth == 1 )		10022361	1					
ANR	10022580	Condition	xImageDepth == 1	922:12:31954:31969	10022361	0	True				
ANR	10022581	EqualityExpression	xImageDepth == 1		10022361	0		==			
ANR	10022582	Identifier	xImageDepth		10022361	0					
ANR	10022583	PrimaryExpression	1		10022361	1					
ANR	10022584	CompoundStatement		49:30:1734:1734	10022361	1					
ANR	10022585	ExpressionStatement	gc_values . foreground = 1	923:12:32027:32051	10022361	0	True				
ANR	10022586	AssignmentExpression	gc_values . foreground = 1		10022361	0		=			
ANR	10022587	MemberAccess	gc_values . foreground		10022361	0					
ANR	10022588	Identifier	gc_values		10022361	0					
ANR	10022589	Identifier	foreground		10022361	1					
ANR	10022590	PrimaryExpression	1		10022361	1					
ANR	10022591	ExpressionStatement	gc_values . background = 0	924:12:32103:32127	10022361	1	True				
ANR	10022592	AssignmentExpression	gc_values . background = 0		10022361	0		=			
ANR	10022593	MemberAccess	gc_values . background		10022361	0					
ANR	10022594	Identifier	gc_values		10022361	0					
ANR	10022595	Identifier	background		10022361	1					
ANR	10022596	PrimaryExpression	0		10022361	1					
ANR	10022597	ExpressionStatement	"bitmap_gc = XCreateGC ( xDisplay , xImagePixmap , GCForeground | GCBackground , & gc_values )"	925:12:32181:32283	10022361	2	True				
ANR	10022598	AssignmentExpression	"bitmap_gc = XCreateGC ( xDisplay , xImagePixmap , GCForeground | GCBackground , & gc_values )"		10022361	0		=			
ANR	10022599	Identifier	bitmap_gc		10022361	0					
ANR	10022600	CallExpression	"XCreateGC ( xDisplay , xImagePixmap , GCForeground | GCBackground , & gc_values )"		10022361	1					
ANR	10022601	Callee	XCreateGC		10022361	0					
ANR	10022602	Identifier	XCreateGC		10022361	0					
ANR	10022603	ArgumentList	xDisplay		10022361	1					
ANR	10022604	Argument	xDisplay		10022361	0					
ANR	10022605	Identifier	xDisplay		10022361	0					
ANR	10022606	Argument	xImagePixmap		10022361	1					
ANR	10022607	Identifier	xImagePixmap		10022361	0					
ANR	10022608	Argument	GCForeground | GCBackground		10022361	2					
ANR	10022609	InclusiveOrExpression	GCForeground | GCBackground		10022361	0		|			
ANR	10022610	Identifier	GCForeground		10022361	0					
ANR	10022611	Identifier	GCBackground		10022361	1					
ANR	10022612	Argument	& gc_values		10022361	3					
ANR	10022613	UnaryOperationExpression	& gc_values		10022361	0					
ANR	10022614	UnaryOperator	&		10022361	0					
ANR	10022615	Identifier	gc_values		10022361	1					
ANR	10022616	ExpressionStatement	"XPutImage ( xDisplay , xImagePixmap , bitmap_gc , xImage , 0 , 0 , 0 , 0 , xImage -> width , xImage -> height )"	927:12:32297:32408	10022361	3	True				
ANR	10022617	CallExpression	"XPutImage ( xDisplay , xImagePixmap , bitmap_gc , xImage , 0 , 0 , 0 , 0 , xImage -> width , xImage -> height )"		10022361	0					
ANR	10022618	Callee	XPutImage		10022361	0					
ANR	10022619	Identifier	XPutImage		10022361	0					
ANR	10022620	ArgumentList	xDisplay		10022361	1					
ANR	10022621	Argument	xDisplay		10022361	0					
ANR	10022622	Identifier	xDisplay		10022361	0					
ANR	10022623	Argument	xImagePixmap		10022361	1					
ANR	10022624	Identifier	xImagePixmap		10022361	0					
ANR	10022625	Argument	bitmap_gc		10022361	2					
ANR	10022626	Identifier	bitmap_gc		10022361	0					
ANR	10022627	Argument	xImage		10022361	3					
ANR	10022628	Identifier	xImage		10022361	0					
ANR	10022629	Argument	0		10022361	4					
ANR	10022630	PrimaryExpression	0		10022361	0					
ANR	10022631	Argument	0		10022361	5					
ANR	10022632	PrimaryExpression	0		10022361	0					
ANR	10022633	Argument	0		10022361	6					
ANR	10022634	PrimaryExpression	0		10022361	0					
ANR	10022635	Argument	0		10022361	7					
ANR	10022636	PrimaryExpression	0		10022361	0					
ANR	10022637	Argument	xImage -> width		10022361	8					
ANR	10022638	PtrMemberAccess	xImage -> width		10022361	0					
ANR	10022639	Identifier	xImage		10022361	0					
ANR	10022640	Identifier	width		10022361	1					
ANR	10022641	Argument	xImage -> height		10022361	9					
ANR	10022642	PtrMemberAccess	xImage -> height		10022361	0					
ANR	10022643	Identifier	xImage		10022361	0					
ANR	10022644	Identifier	height		10022361	1					
ANR	10022645	ElseStatement	else		10022361	0					
ANR	10022646	ExpressionStatement	"XPutImage ( xDisplay , xImagePixmap , xWinGc , xImage , 0 , 0 , 0 , 0 , xImage -> width , xImage -> height )"	930:12:32437:32545	10022361	0	True				
ANR	10022647	CallExpression	"XPutImage ( xDisplay , xImagePixmap , xWinGc , xImage , 0 , 0 , 0 , 0 , xImage -> width , xImage -> height )"		10022361	0					
ANR	10022648	Callee	XPutImage		10022361	0					
ANR	10022649	Identifier	XPutImage		10022361	0					
ANR	10022650	ArgumentList	xDisplay		10022361	1					
ANR	10022651	Argument	xDisplay		10022361	0					
ANR	10022652	Identifier	xDisplay		10022361	0					
ANR	10022653	Argument	xImagePixmap		10022361	1					
ANR	10022654	Identifier	xImagePixmap		10022361	0					
ANR	10022655	Argument	xWinGc		10022361	2					
ANR	10022656	Identifier	xWinGc		10022361	0					
ANR	10022657	Argument	xImage		10022361	3					
ANR	10022658	Identifier	xImage		10022361	0					
ANR	10022659	Argument	0		10022361	4					
ANR	10022660	PrimaryExpression	0		10022361	0					
ANR	10022661	Argument	0		10022361	5					
ANR	10022662	PrimaryExpression	0		10022361	0					
ANR	10022663	Argument	0		10022361	6					
ANR	10022664	PrimaryExpression	0		10022361	0					
ANR	10022665	Argument	0		10022361	7					
ANR	10022666	PrimaryExpression	0		10022361	0					
ANR	10022667	Argument	xImage -> width		10022361	8					
ANR	10022668	PtrMemberAccess	xImage -> width		10022361	0					
ANR	10022669	Identifier	xImage		10022361	0					
ANR	10022670	Identifier	width		10022361	1					
ANR	10022671	Argument	xImage -> height		10022361	9					
ANR	10022672	PtrMemberAccess	xImage -> height		10022361	0					
ANR	10022673	Identifier	xImage		10022361	0					
ANR	10022674	Identifier	height		10022361	1					
ANR	10022675	ExpressionStatement	XDestroyImage ( xImage )	932:8:32555:32576	10022361	2	True				
ANR	10022676	CallExpression	XDestroyImage ( xImage )		10022361	0					
ANR	10022677	Callee	XDestroyImage		10022361	0					
ANR	10022678	Identifier	XDestroyImage		10022361	0					
ANR	10022679	ArgumentList	xImage		10022361	1					
ANR	10022680	Argument	xImage		10022361	0					
ANR	10022681	Identifier	xImage		10022361	0					
ANR	10022682	ExpressionStatement	free ( imageMemory )	933:8:32586:32603	10022361	3	True				
ANR	10022683	CallExpression	free ( imageMemory )		10022361	0					
ANR	10022684	Callee	free		10022361	0					
ANR	10022685	Identifier	free		10022361	0					
ANR	10022686	ArgumentList	imageMemory		10022361	1					
ANR	10022687	Argument	imageMemory		10022361	0					
ANR	10022688	Identifier	imageMemory		10022361	0					
ANR	10022689	ReturnType	void		10022361	1					
ANR	10022690	Identifier	CreateXImage		10022361	2					
ANR	10022691	ParameterList			10022361	3					
ANR	10022692	CFGEntryNode	ENTRY		10022361		True				
ANR	10022693	CFGExitNode	EXIT		10022361		True				
ANR	10022694	Symbol	bitmap_gc		10022361						
ANR	10022695	Symbol	xDisplay		10022361						
ANR	10022696	Symbol	xWinGc		10022361						
ANR	10022697	Symbol	GCPlaneMask		10022361						
ANR	10022698	Symbol	yOffset		10022361						
ANR	10022699	Symbol	xImageDepth		10022361						
ANR	10022700	Symbol	xImage -> byte_order		10022361						
ANR	10022701	Symbol	tfImageWidth		10022361						
ANR	10022702	Symbol	GCForeground		10022361						
ANR	10022703	Symbol	XtWindow		10022361						
ANR	10022704	Symbol	GXcopy		10022361						
ANR	10022705	Symbol	True		10022361						
ANR	10022706	Symbol	XBlackPixel		10022361						
ANR	10022707	Symbol	shellWidget		10022361						
ANR	10022708	Symbol	RootWindow		10022361						
ANR	10022709	Symbol	tfImageHeight		10022361						
ANR	10022710	Symbol	appData		10022361						
ANR	10022711	Symbol	* xImage		10022361						
ANR	10022712	Symbol	XCreateImage		10022361						
ANR	10022713	Symbol	XWhitePixel		10022361						
ANR	10022714	Symbol	gc_values . foreground		10022361						
ANR	10022715	Symbol	gc_values		10022361						
ANR	10022716	Symbol	XCreatePixmap		10022361						
ANR	10022717	Symbol	AllPlanes		10022361						
ANR	10022718	Symbol	XYBitmap		10022361						
ANR	10022719	Symbol	xImage -> height		10022361						
ANR	10022720	Symbol	xImagePixmap		10022361						
ANR	10022721	Symbol	xOffset		10022361						
ANR	10022722	Symbol	ZPixmap		10022361						
ANR	10022723	Symbol	GCBackground		10022361						
ANR	10022724	Symbol	GCFunction		10022361						
ANR	10022725	Symbol	appData . usePixmap		10022361						
ANR	10022726	Symbol	imageMemory		10022361						
ANR	10022727	Symbol	grabX		10022361						
ANR	10022728	Symbol	grabY		10022361						
ANR	10022729	Symbol	gc_values . function		10022361						
ANR	10022730	Symbol	gc_values . background		10022361						
ANR	10022731	Symbol	XCreateGC		10022361						
ANR	10022732	Symbol	xVisual		10022361						
ANR	10022733	Symbol	xScreen		10022361						
ANR	10022734	Symbol	tfPhotometricInterpretation		10022361						
ANR	10022735	Symbol	xImage -> bitmap_bit_order		10022361						
ANR	10022736	Symbol	& gc_values		10022361						
ANR	10022737	Symbol	xImage -> width		10022361						
ANR	10022738	Symbol	PHOTOMETRIC_MINISBLACK		10022361						
ANR	10022739	Symbol	xImage		10022361						
ANR	10022740	Symbol	MSBFirst		10022361						
ANR	10022741	Symbol	gc_values . plane_mask		10022361						
ANR	10022742	DeclStmt									
ANR	10022743	Decl							Widget	Widget	w
ANR	10022744	DeclStmt									
ANR	10022745	Decl							caddr_t	caddr_t	unused_1
ANR	10022746	DeclStmt									
ANR	10022747	Decl							caddr_t	caddr_t	unused_2
ANR	10022748	DeclStmt									
ANR	10022749	Decl							XawListReturnStruct	XawListReturnStruct *	list_return
ANR	10022750	Function	QuitProc	964:0:33143:33178							
ANR	10022751	FunctionDef	QuitProc ()		10022750	0					
ANR	10022752	CompoundStatement		966:0:33163:33178	10022750	0					
ANR	10022753	ExpressionStatement	exit ( 0 )	967:4:33169:33176	10022750	0	True				
ANR	10022754	CallExpression	exit ( 0 )		10022750	0					
ANR	10022755	Callee	exit		10022750	0					
ANR	10022756	Identifier	exit		10022750	0					
ANR	10022757	ArgumentList	0		10022750	1					
ANR	10022758	Argument	0		10022750	0					
ANR	10022759	PrimaryExpression	0		10022750	0					
ANR	10022760	ReturnType	void		10022750	1					
ANR	10022761	Identifier	QuitProc		10022750	2					
ANR	10022762	ParameterList			10022750	3					
ANR	10022763	CFGEntryNode	ENTRY		10022750		True				
ANR	10022764	CFGExitNode	EXIT		10022750		True				
ANR	10022765	Function	NextProc	970:0:33181:33229							
ANR	10022766	FunctionDef	NextProc ()		10022765	0					
ANR	10022767	CompoundStatement		972:0:33197:33229	10022765	0					
ANR	10022768	ExpressionStatement	PageProc ( ButtonNextPage )	973:4:33203:33227	10022765	0	True				
ANR	10022769	CallExpression	PageProc ( ButtonNextPage )		10022765	0					
ANR	10022770	Callee	PageProc		10022765	0					
ANR	10022771	Identifier	PageProc		10022765	0					
ANR	10022772	ArgumentList	ButtonNextPage		10022765	1					
ANR	10022773	Argument	ButtonNextPage		10022765	0					
ANR	10022774	Identifier	ButtonNextPage		10022765	0					
ANR	10022775	ReturnType	void		10022765	1					
ANR	10022776	Identifier	NextProc		10022765	2					
ANR	10022777	ParameterList			10022765	3					
ANR	10022778	CFGEntryNode	ENTRY		10022765		True				
ANR	10022779	CFGExitNode	EXIT		10022765		True				
ANR	10022780	Symbol	ButtonNextPage		10022765						
ANR	10022781	Function	PreviousProc	976:0:33232:33288							
ANR	10022782	FunctionDef	PreviousProc ()		10022781	0					
ANR	10022783	CompoundStatement		978:0:33252:33288	10022781	0					
ANR	10022784	ExpressionStatement	PageProc ( ButtonPreviousPage )	979:4:33258:33286	10022781	0	True				
ANR	10022785	CallExpression	PageProc ( ButtonPreviousPage )		10022781	0					
ANR	10022786	Callee	PageProc		10022781	0					
ANR	10022787	Identifier	PageProc		10022781	0					
ANR	10022788	ArgumentList	ButtonPreviousPage		10022781	1					
ANR	10022789	Argument	ButtonPreviousPage		10022781	0					
ANR	10022790	Identifier	ButtonPreviousPage		10022781	0					
ANR	10022791	ReturnType	void		10022781	1					
ANR	10022792	Identifier	PreviousProc		10022781	2					
ANR	10022793	ParameterList			10022781	3					
ANR	10022794	CFGEntryNode	ENTRY		10022781		True				
ANR	10022795	CFGExitNode	EXIT		10022781		True				
ANR	10022796	Symbol	ButtonPreviousPage		10022781						
ANR	10022797	DeclStmt									
ANR	10022798	Decl							int	int	direction
ANR	10022799	DeclStmt									
ANR	10022800	Decl							XEvent	XEvent	fake_event
ANR	10022801	DeclStmt									
ANR	10022802	Decl							Arg	Arg [ 4 ]	args
ANR	10022803	DeclStmt									
ANR	10022804	Decl							Widget	Widget	widget
ANR	10022805	DeclStmt									
ANR	10022806	Decl							caddr_t	caddr_t	unused
ANR	10022807	DeclStmt									
ANR	10022808	Decl							XEvent	XEvent *	event
ANR	10022809	DeclStmt									
ANR	10022810	Decl							int	int	ih
ANR	10022811	Decl							int	int	iw
ANR	10022812	Decl							int	int	ww
ANR	10022813	Decl							int	int	wh
ANR	10022814	Decl							int	int	sx
ANR	10022815	Decl							int	int	sy
ANR	10022816	Decl							int	int	w
ANR	10022817	Decl							int	int	h
ANR	10022818	Decl							int	int	dx
ANR	10022819	Decl							int	int	dy
ANR	10022820	DeclStmt									
ANR	10022821	Decl							Dimension	Dimension	w_width
ANR	10022822	Decl							Dimension	Dimension	w_height
ANR	10022823	DeclStmt									
ANR	10022824	Decl							XEvent	XEvent	next_event
ANR	10022825	DeclStmt									
ANR	10022826	Decl							Arg	Arg [ 2 ]	args
ANR	10022827	Function	ResizeProc	1207:0:39779:40831							
ANR	10022828	FunctionDef	ResizeProc ()		10022827	0					
ANR	10022829	CompoundStatement		1209:0:39797:40831	10022827	0					
ANR	10022830	IdentifierDeclStatement	"Dimension w_width , w_height ;"	1210:4:39803:39830	10022827	0	True				
ANR	10022831	IdentifierDecl	w_width		10022827	0					
ANR	10022832	IdentifierDeclType	Dimension		10022827	0					
ANR	10022833	Identifier	w_width		10022827	1					
ANR	10022834	IdentifierDecl	w_height		10022827	1					
ANR	10022835	IdentifierDeclType	Dimension		10022827	0					
ANR	10022836	Identifier	w_height		10022827	1					
ANR	10022837	IdentifierDeclStatement	"int xo , yo , ww , wh ;"	1211:4:39836:39854	10022827	1	True				
ANR	10022838	IdentifierDecl	xo		10022827	0					
ANR	10022839	IdentifierDeclType	int		10022827	0					
ANR	10022840	Identifier	xo		10022827	1					
ANR	10022841	IdentifierDecl	yo		10022827	1					
ANR	10022842	IdentifierDeclType	int		10022827	0					
ANR	10022843	Identifier	yo		10022827	1					
ANR	10022844	IdentifierDecl	ww		10022827	2					
ANR	10022845	IdentifierDeclType	int		10022827	0					
ANR	10022846	Identifier	ww		10022827	1					
ANR	10022847	IdentifierDecl	wh		10022827	3					
ANR	10022848	IdentifierDeclType	int		10022827	0					
ANR	10022849	Identifier	wh		10022827	1					
ANR	10022850	IdentifierDeclStatement	XEvent fake_event ;	1212:4:39860:39877	10022827	2	True				
ANR	10022851	IdentifierDecl	fake_event		10022827	0					
ANR	10022852	IdentifierDeclType	XEvent		10022827	0					
ANR	10022853	Identifier	fake_event		10022827	1					
ANR	10022854	IdentifierDeclStatement	Arg args [ 2 ] ;	1213:4:39883:39894	10022827	3	True				
ANR	10022855	IdentifierDecl	args [ 2 ]		10022827	0					
ANR	10022856	IdentifierDeclType	Arg [ 2 ]		10022827	0					
ANR	10022857	Identifier	args		10022827	1					
ANR	10022858	PrimaryExpression	2		10022827	2					
ANR	10022859	IfStatement	if ( ( xOffset == 0 ) && ( yOffset == 0 ) )		10022827	4					
ANR	10022860	Condition	( xOffset == 0 ) && ( yOffset == 0 )	1215:8:39905:39936	10022827	0	True				
ANR	10022861	AndExpression	( xOffset == 0 ) && ( yOffset == 0 )		10022827	0		&&			
ANR	10022862	EqualityExpression	xOffset == 0		10022827	0		==			
ANR	10022863	Identifier	xOffset		10022827	0					
ANR	10022864	PrimaryExpression	0		10022827	1					
ANR	10022865	EqualityExpression	yOffset == 0		10022827	1		==			
ANR	10022866	Identifier	yOffset		10022827	0					
ANR	10022867	PrimaryExpression	0		10022827	1					
ANR	10022868	ReturnStatement	return ;	1216:8:39947:39953	10022827	1	True				
ANR	10022869	ExpressionStatement	"XtSetArg ( args [ 0 ] , XtNwidth , & w_width )"	1218:4:39960:39997	10022827	5	True				
ANR	10022870	CallExpression	"XtSetArg ( args [ 0 ] , XtNwidth , & w_width )"		10022827	0					
ANR	10022871	Callee	XtSetArg		10022827	0					
ANR	10022872	Identifier	XtSetArg		10022827	0					
ANR	10022873	ArgumentList	args [ 0 ]		10022827	1					
ANR	10022874	Argument	args [ 0 ]		10022827	0					
ANR	10022875	ArrayIndexing	args [ 0 ]		10022827	0					
ANR	10022876	Identifier	args		10022827	0					
ANR	10022877	PrimaryExpression	0		10022827	1					
ANR	10022878	Argument	XtNwidth		10022827	1					
ANR	10022879	Identifier	XtNwidth		10022827	0					
ANR	10022880	Argument	& w_width		10022827	2					
ANR	10022881	UnaryOperationExpression	& w_width		10022827	0					
ANR	10022882	UnaryOperator	&		10022827	0					
ANR	10022883	Identifier	w_width		10022827	1					
ANR	10022884	ExpressionStatement	"XtSetArg ( args [ 1 ] , XtNheight , & w_height )"	1219:4:40003:40042	10022827	6	True				
ANR	10022885	CallExpression	"XtSetArg ( args [ 1 ] , XtNheight , & w_height )"		10022827	0					
ANR	10022886	Callee	XtSetArg		10022827	0					
ANR	10022887	Identifier	XtSetArg		10022827	0					
ANR	10022888	ArgumentList	args [ 1 ]		10022827	1					
ANR	10022889	Argument	args [ 1 ]		10022827	0					
ANR	10022890	ArrayIndexing	args [ 1 ]		10022827	0					
ANR	10022891	Identifier	args		10022827	0					
ANR	10022892	PrimaryExpression	1		10022827	1					
ANR	10022893	Argument	XtNheight		10022827	1					
ANR	10022894	Identifier	XtNheight		10022827	0					
ANR	10022895	Argument	& w_height		10022827	2					
ANR	10022896	UnaryOperationExpression	& w_height		10022827	0					
ANR	10022897	UnaryOperator	&		10022827	0					
ANR	10022898	Identifier	w_height		10022827	1					
ANR	10022899	ExpressionStatement	"XtGetValues ( shellWidget , args , 2 )"	1220:4:40048:40081	10022827	7	True				
ANR	10022900	CallExpression	"XtGetValues ( shellWidget , args , 2 )"		10022827	0					
ANR	10022901	Callee	XtGetValues		10022827	0					
ANR	10022902	Identifier	XtGetValues		10022827	0					
ANR	10022903	ArgumentList	shellWidget		10022827	1					
ANR	10022904	Argument	shellWidget		10022827	0					
ANR	10022905	Identifier	shellWidget		10022827	0					
ANR	10022906	Argument	args		10022827	1					
ANR	10022907	Identifier	args		10022827	0					
ANR	10022908	Argument	2		10022827	2					
ANR	10022909	PrimaryExpression	2		10022827	0					
ANR	10022910	ExpressionStatement	ww = w_width	1221:4:40087:40099	10022827	8	True				
ANR	10022911	AssignmentExpression	ww = w_width		10022827	0		=			
ANR	10022912	Identifier	ww		10022827	0					
ANR	10022913	Identifier	w_width		10022827	1					
ANR	10022914	ExpressionStatement	wh = w_height	1222:4:40105:40118	10022827	9	True				
ANR	10022915	AssignmentExpression	wh = w_height		10022827	0		=			
ANR	10022916	Identifier	wh		10022827	0					
ANR	10022917	Identifier	w_height		10022827	1					
ANR	10022918	ExpressionStatement	"XtGetValues ( listWidget , args , 2 )"	1223:4:40124:40156	10022827	10	True				
ANR	10022919	CallExpression	"XtGetValues ( listWidget , args , 2 )"		10022827	0					
ANR	10022920	Callee	XtGetValues		10022827	0					
ANR	10022921	Identifier	XtGetValues		10022827	0					
ANR	10022922	ArgumentList	listWidget		10022827	1					
ANR	10022923	Argument	listWidget		10022827	0					
ANR	10022924	Identifier	listWidget		10022827	0					
ANR	10022925	Argument	args		10022827	1					
ANR	10022926	Identifier	args		10022827	0					
ANR	10022927	Argument	2		10022827	2					
ANR	10022928	PrimaryExpression	2		10022827	0					
ANR	10022929	ExpressionStatement	wh -= w_height	1224:4:40162:40176	10022827	11	True				
ANR	10022930	AssignmentExpression	wh -= w_height		10022827	0		-=			
ANR	10022931	Identifier	wh		10022827	0					
ANR	10022932	Identifier	w_height		10022827	1					
ANR	10022933	ExpressionStatement	xo = xOffset	1226:4:40183:40195	10022827	12	True				
ANR	10022934	AssignmentExpression	xo = xOffset		10022827	0		=			
ANR	10022935	Identifier	xo		10022827	0					
ANR	10022936	Identifier	xOffset		10022827	1					
ANR	10022937	ExpressionStatement	yo = yOffset	1226:18:40197:40209	10022827	13	True				
ANR	10022938	AssignmentExpression	yo = yOffset		10022827	0		=			
ANR	10022939	Identifier	yo		10022827	0					
ANR	10022940	Identifier	yOffset		10022827	1					
ANR	10022941	IfStatement	if ( ( xOffset + ww ) >= tfImageWidth )		10022827	14					
ANR	10022942	Condition	( xOffset + ww ) >= tfImageWidth	1228:8:40220:40249	10022827	0	True				
ANR	10022943	RelationalExpression	( xOffset + ww ) >= tfImageWidth		10022827	0		>=			
ANR	10022944	AdditiveExpression	xOffset + ww		10022827	0		+			
ANR	10022945	Identifier	xOffset		10022827	0					
ANR	10022946	Identifier	ww		10022827	1					
ANR	10022947	Identifier	tfImageWidth		10022827	1					
ANR	10022948	ExpressionStatement	"xOffset = MAX ( ( int ) tfImageWidth - ww , 0 )"	1229:8:40260:40301	10022827	1	True				
ANR	10022949	AssignmentExpression	"xOffset = MAX ( ( int ) tfImageWidth - ww , 0 )"		10022827	0		=			
ANR	10022950	Identifier	xOffset		10022827	0					
ANR	10022951	CallExpression	"MAX ( ( int ) tfImageWidth - ww , 0 )"		10022827	1					
ANR	10022952	Callee	MAX		10022827	0					
ANR	10022953	Identifier	MAX		10022827	0					
ANR	10022954	ArgumentList	( int ) tfImageWidth - ww		10022827	1					
ANR	10022955	Argument	( int ) tfImageWidth - ww		10022827	0					
ANR	10022956	AdditiveExpression	( int ) tfImageWidth - ww		10022827	0		-			
ANR	10022957	CastExpression	( int ) tfImageWidth		10022827	0					
ANR	10022958	CastTarget	int		10022827	0					
ANR	10022959	Identifier	tfImageWidth		10022827	1					
ANR	10022960	Identifier	ww		10022827	1					
ANR	10022961	Argument	0		10022827	1					
ANR	10022962	PrimaryExpression	0		10022827	0					
ANR	10022963	IfStatement	if ( ( yOffset + wh ) >= tfImageHeight )		10022827	15					
ANR	10022964	Condition	( yOffset + wh ) >= tfImageHeight	1230:8:40311:40341	10022827	0	True				
ANR	10022965	RelationalExpression	( yOffset + wh ) >= tfImageHeight		10022827	0		>=			
ANR	10022966	AdditiveExpression	yOffset + wh		10022827	0		+			
ANR	10022967	Identifier	yOffset		10022827	0					
ANR	10022968	Identifier	wh		10022827	1					
ANR	10022969	Identifier	tfImageHeight		10022827	1					
ANR	10022970	ExpressionStatement	"yOffset = MAX ( ( int ) tfImageHeight - wh , 0 )"	1231:8:40352:40394	10022827	1	True				
ANR	10022971	AssignmentExpression	"yOffset = MAX ( ( int ) tfImageHeight - wh , 0 )"		10022827	0		=			
ANR	10022972	Identifier	yOffset		10022827	0					
ANR	10022973	CallExpression	"MAX ( ( int ) tfImageHeight - wh , 0 )"		10022827	1					
ANR	10022974	Callee	MAX		10022827	0					
ANR	10022975	Identifier	MAX		10022827	0					
ANR	10022976	ArgumentList	( int ) tfImageHeight - wh		10022827	1					
ANR	10022977	Argument	( int ) tfImageHeight - wh		10022827	0					
ANR	10022978	AdditiveExpression	( int ) tfImageHeight - wh		10022827	0		-			
ANR	10022979	CastExpression	( int ) tfImageHeight		10022827	0					
ANR	10022980	CastTarget	int		10022827	0					
ANR	10022981	Identifier	tfImageHeight		10022827	1					
ANR	10022982	Identifier	wh		10022827	1					
ANR	10022983	Argument	0		10022827	1					
ANR	10022984	PrimaryExpression	0		10022827	0					
ANR	10022985	IfStatement	if ( ( xo != xOffset ) || ( yo != yOffset ) )		10022827	16					
ANR	10022986	Condition	( xo != xOffset ) || ( yo != yOffset )	1237:8:40545:40578	10022827	0	True				
ANR	10022987	OrExpression	( xo != xOffset ) || ( yo != yOffset )		10022827	0		||			
ANR	10022988	EqualityExpression	xo != xOffset		10022827	0		!=			
ANR	10022989	Identifier	xo		10022827	0					
ANR	10022990	Identifier	xOffset		10022827	1					
ANR	10022991	EqualityExpression	yo != yOffset		10022827	1		!=			
ANR	10022992	Identifier	yo		10022827	0					
ANR	10022993	Identifier	yOffset		10022827	1					
ANR	10022994	CompoundStatement		29:44:783:783	10022827	1					
ANR	10022995	ExpressionStatement	fake_event . type = Expose	1238:8:40591:40615	10022827	0	True				
ANR	10022996	AssignmentExpression	fake_event . type = Expose		10022827	0		=			
ANR	10022997	MemberAccess	fake_event . type		10022827	0					
ANR	10022998	Identifier	fake_event		10022827	0					
ANR	10022999	Identifier	type		10022827	1					
ANR	10023000	Identifier	Expose		10022827	1					
ANR	10023001	ExpressionStatement	fake_event . xexpose . x = fake_event . xexpose . y = 0	1239:8:40625:40672	10022827	1	True				
ANR	10023002	AssignmentExpression	fake_event . xexpose . x = fake_event . xexpose . y = 0		10022827	0		=			
ANR	10023003	MemberAccess	fake_event . xexpose . x		10022827	0					
ANR	10023004	MemberAccess	fake_event . xexpose		10022827	0					
ANR	10023005	Identifier	fake_event		10022827	0					
ANR	10023006	Identifier	xexpose		10022827	1					
ANR	10023007	Identifier	x		10022827	1					
ANR	10023008	AssignmentExpression	fake_event . xexpose . y = 0		10022827	1		=			
ANR	10023009	MemberAccess	fake_event . xexpose . y		10022827	0					
ANR	10023010	MemberAccess	fake_event . xexpose		10022827	0					
ANR	10023011	Identifier	fake_event		10022827	0					
ANR	10023012	Identifier	xexpose		10022827	1					
ANR	10023013	Identifier	y		10022827	1					
ANR	10023014	PrimaryExpression	0		10022827	1					
ANR	10023015	ExpressionStatement	fake_event . xexpose . width = tfImageWidth	1240:8:40682:40721	10022827	2	True				
ANR	10023016	AssignmentExpression	fake_event . xexpose . width = tfImageWidth		10022827	0		=			
ANR	10023017	MemberAccess	fake_event . xexpose . width		10022827	0					
ANR	10023018	MemberAccess	fake_event . xexpose		10022827	0					
ANR	10023019	Identifier	fake_event		10022827	0					
ANR	10023020	Identifier	xexpose		10022827	1					
ANR	10023021	Identifier	width		10022827	1					
ANR	10023022	Identifier	tfImageWidth		10022827	1					
ANR	10023023	ExpressionStatement	fake_event . xexpose . height = tfImageHeight	1241:8:40731:40772	10022827	3	True				
ANR	10023024	AssignmentExpression	fake_event . xexpose . height = tfImageHeight		10022827	0		=			
ANR	10023025	MemberAccess	fake_event . xexpose . height		10022827	0					
ANR	10023026	MemberAccess	fake_event . xexpose		10022827	0					
ANR	10023027	Identifier	fake_event		10022827	0					
ANR	10023028	Identifier	xexpose		10022827	1					
ANR	10023029	Identifier	height		10022827	1					
ANR	10023030	Identifier	tfImageHeight		10022827	1					
ANR	10023031	ExpressionStatement	"EventProc ( imageWidget , NULL , & fake_event )"	1242:8:40782:40823	10022827	4	True				
ANR	10023032	CallExpression	"EventProc ( imageWidget , NULL , & fake_event )"		10022827	0					
ANR	10023033	Callee	EventProc		10022827	0					
ANR	10023034	Identifier	EventProc		10022827	0					
ANR	10023035	ArgumentList	imageWidget		10022827	1					
ANR	10023036	Argument	imageWidget		10022827	0					
ANR	10023037	Identifier	imageWidget		10022827	0					
ANR	10023038	Argument	NULL		10022827	1					
ANR	10023039	Identifier	NULL		10022827	0					
ANR	10023040	Argument	& fake_event		10022827	2					
ANR	10023041	UnaryOperationExpression	& fake_event		10022827	0					
ANR	10023042	UnaryOperator	&		10022827	0					
ANR	10023043	Identifier	fake_event		10022827	1					
ANR	10023044	ReturnType	void		10022827	1					
ANR	10023045	Identifier	ResizeProc		10022827	2					
ANR	10023046	ParameterList			10022827	3					
ANR	10023047	CFGEntryNode	ENTRY		10022827		True				
ANR	10023048	CFGExitNode	EXIT		10022827		True				
ANR	10023049	Symbol	yOffset		10022827						
ANR	10023050	Symbol	MAX		10022827						
ANR	10023051	Symbol	XtNwidth		10022827						
ANR	10023052	Symbol	tfImageWidth		10022827						
ANR	10023053	Symbol	fake_event . xexpose . height		10022827						
ANR	10023054	Symbol	shellWidget		10022827						
ANR	10023055	Symbol	fake_event . xexpose		10022827						
ANR	10023056	Symbol	fake_event . xexpose . width		10022827						
ANR	10023057	Symbol	tfImageHeight		10022827						
ANR	10023058	Symbol	* args		10022827						
ANR	10023059	Symbol	wh		10022827						
ANR	10023060	Symbol	& fake_event		10022827						
ANR	10023061	Symbol	yo		10022827						
ANR	10023062	Symbol	w_width		10022827						
ANR	10023063	Symbol	ww		10022827						
ANR	10023064	Symbol	& w_height		10022827						
ANR	10023065	Symbol	xOffset		10022827						
ANR	10023066	Symbol	NULL		10022827						
ANR	10023067	Symbol	imageWidget		10022827						
ANR	10023068	Symbol	Expose		10022827						
ANR	10023069	Symbol	& w_width		10022827						
ANR	10023070	Symbol	fake_event . type		10022827						
ANR	10023071	Symbol	args		10022827						
ANR	10023072	Symbol	listWidget		10022827						
ANR	10023073	Symbol	XtNheight		10022827						
ANR	10023074	Symbol	xo		10022827						
ANR	10023075	Symbol	fake_event		10022827						
ANR	10023076	Symbol	fake_event . xexpose . x		10022827						
ANR	10023077	Symbol	fake_event . xexpose . y		10022827						
ANR	10023078	Symbol	w_height		10022827						
ANR	10023079	DeclStmt									
ANR	10023080	Decl							Display	Display *	display
ANR	10023081	DeclStmt									
ANR	10023082	Decl							XErrorEvent	XErrorEvent *	error_event
ANR	10023083	DeclStmt									
ANR	10023084	Decl							char	char [ 80 ]	message
ANR	10023085	Function	Usage	1267:0:41365:41842							
ANR	10023086	FunctionDef	Usage ()		10023085	0					
ANR	10023087	CompoundStatement		1269:0:41378:41842	10023085	0					
ANR	10023088	ExpressionStatement	"fprintf ( stderr , ""Usage xtiff: [options] tiff-file\\n"" )"	1270:4:41384:41437	10023085	0	True				
ANR	10023089	CallExpression	"fprintf ( stderr , ""Usage xtiff: [options] tiff-file\\n"" )"		10023085	0					
ANR	10023090	Callee	fprintf		10023085	0					
ANR	10023091	Identifier	fprintf		10023085	0					
ANR	10023092	ArgumentList	stderr		10023085	1					
ANR	10023093	Argument	stderr		10023085	0					
ANR	10023094	Identifier	stderr		10023085	0					
ANR	10023095	Argument	"""Usage xtiff: [options] tiff-file\\n"""		10023085	1					
ANR	10023096	PrimaryExpression	"""Usage xtiff: [options] tiff-file\\n"""		10023085	0					
ANR	10023097	ExpressionStatement	"fprintf ( stderr , ""\\tstandard Xt options\\n"" )"	1271:4:41443:41485	10023085	1	True				
ANR	10023098	CallExpression	"fprintf ( stderr , ""\\tstandard Xt options\\n"" )"		10023085	0					
ANR	10023099	Callee	fprintf		10023085	0					
ANR	10023100	Identifier	fprintf		10023085	0					
ANR	10023101	ArgumentList	stderr		10023085	1					
ANR	10023102	Argument	stderr		10023085	0					
ANR	10023103	Identifier	stderr		10023085	0					
ANR	10023104	Argument	"""\\tstandard Xt options\\n"""		10023085	1					
ANR	10023105	PrimaryExpression	"""\\tstandard Xt options\\n"""		10023085	0					
ANR	10023106	ExpressionStatement	"fprintf ( stderr , ""\\t[-help]\\n"" )"	1272:4:41491:41521	10023085	2	True				
ANR	10023107	CallExpression	"fprintf ( stderr , ""\\t[-help]\\n"" )"		10023085	0					
ANR	10023108	Callee	fprintf		10023085	0					
ANR	10023109	Identifier	fprintf		10023085	0					
ANR	10023110	ArgumentList	stderr		10023085	1					
ANR	10023111	Argument	stderr		10023085	0					
ANR	10023112	Identifier	stderr		10023085	0					
ANR	10023113	Argument	"""\\t[-help]\\n"""		10023085	1					
ANR	10023114	PrimaryExpression	"""\\t[-help]\\n"""		10023085	0					
ANR	10023115	ExpressionStatement	"fprintf ( stderr , ""\\t[-gamma gamma]\\n"" )"	1273:4:41527:41564	10023085	3	True				
ANR	10023116	CallExpression	"fprintf ( stderr , ""\\t[-gamma gamma]\\n"" )"		10023085	0					
ANR	10023117	Callee	fprintf		10023085	0					
ANR	10023118	Identifier	fprintf		10023085	0					
ANR	10023119	ArgumentList	stderr		10023085	1					
ANR	10023120	Argument	stderr		10023085	0					
ANR	10023121	Identifier	stderr		10023085	0					
ANR	10023122	Argument	"""\\t[-gamma gamma]\\n"""		10023085	1					
ANR	10023123	PrimaryExpression	"""\\t[-gamma gamma]\\n"""		10023085	0					
ANR	10023124	ExpressionStatement	"fprintf ( stderr , ""\\t[-usePixmap (True | False)]\\n"" )"	1274:4:41570:41620	10023085	4	True				
ANR	10023125	CallExpression	"fprintf ( stderr , ""\\t[-usePixmap (True | False)]\\n"" )"		10023085	0					
ANR	10023126	Callee	fprintf		10023085	0					
ANR	10023127	Identifier	fprintf		10023085	0					
ANR	10023128	ArgumentList	stderr		10023085	1					
ANR	10023129	Argument	stderr		10023085	0					
ANR	10023130	Identifier	stderr		10023085	0					
ANR	10023131	Argument	"""\\t[-usePixmap (True | False)]\\n"""		10023085	1					
ANR	10023132	PrimaryExpression	"""\\t[-usePixmap (True | False)]\\n"""		10023085	0					
ANR	10023133	ExpressionStatement	"fprintf ( stderr , ""\\t[-viewportWidth pixels]\\n"" )"	1275:4:41626:41672	10023085	5	True				
ANR	10023134	CallExpression	"fprintf ( stderr , ""\\t[-viewportWidth pixels]\\n"" )"		10023085	0					
ANR	10023135	Callee	fprintf		10023085	0					
ANR	10023136	Identifier	fprintf		10023085	0					
ANR	10023137	ArgumentList	stderr		10023085	1					
ANR	10023138	Argument	stderr		10023085	0					
ANR	10023139	Identifier	stderr		10023085	0					
ANR	10023140	Argument	"""\\t[-viewportWidth pixels]\\n"""		10023085	1					
ANR	10023141	PrimaryExpression	"""\\t[-viewportWidth pixels]\\n"""		10023085	0					
ANR	10023142	ExpressionStatement	"fprintf ( stderr , ""\\t[-viewportHeight pixels]\\n"" )"	1276:4:41678:41725	10023085	6	True				
ANR	10023143	CallExpression	"fprintf ( stderr , ""\\t[-viewportHeight pixels]\\n"" )"		10023085	0					
ANR	10023144	Callee	fprintf		10023085	0					
ANR	10023145	Identifier	fprintf		10023085	0					
ANR	10023146	ArgumentList	stderr		10023085	1					
ANR	10023147	Argument	stderr		10023085	0					
ANR	10023148	Identifier	stderr		10023085	0					
ANR	10023149	Argument	"""\\t[-viewportHeight pixels]\\n"""		10023085	1					
ANR	10023150	PrimaryExpression	"""\\t[-viewportHeight pixels]\\n"""		10023085	0					
ANR	10023151	ExpressionStatement	"fprintf ( stderr , ""\\t[-translate pixels]\\n"" )"	1277:4:41731:41773	10023085	7	True				
ANR	10023152	CallExpression	"fprintf ( stderr , ""\\t[-translate pixels]\\n"" )"		10023085	0					
ANR	10023153	Callee	fprintf		10023085	0					
ANR	10023154	Identifier	fprintf		10023085	0					
ANR	10023155	ArgumentList	stderr		10023085	1					
ANR	10023156	Argument	stderr		10023085	0					
ANR	10023157	Identifier	stderr		10023085	0					
ANR	10023158	Argument	"""\\t[-translate pixels]\\n"""		10023085	1					
ANR	10023159	PrimaryExpression	"""\\t[-translate pixels]\\n"""		10023085	0					
ANR	10023160	ExpressionStatement	"fprintf ( stderr , ""\\t[-verbose (True | False)]\\n"" )"	1278:4:41779:41827	10023085	8	True				
ANR	10023161	CallExpression	"fprintf ( stderr , ""\\t[-verbose (True | False)]\\n"" )"		10023085	0					
ANR	10023162	Callee	fprintf		10023085	0					
ANR	10023163	Identifier	fprintf		10023085	0					
ANR	10023164	ArgumentList	stderr		10023085	1					
ANR	10023165	Argument	stderr		10023085	0					
ANR	10023166	Identifier	stderr		10023085	0					
ANR	10023167	Argument	"""\\t[-verbose (True | False)]\\n"""		10023085	1					
ANR	10023168	PrimaryExpression	"""\\t[-verbose (True | False)]\\n"""		10023085	0					
ANR	10023169	ExpressionStatement	exit ( 0 )	1279:4:41833:41840	10023085	9	True				
ANR	10023170	CallExpression	exit ( 0 )		10023085	0					
ANR	10023171	Callee	exit		10023085	0					
ANR	10023172	Identifier	exit		10023085	0					
ANR	10023173	ArgumentList	0		10023085	1					
ANR	10023174	Argument	0		10023085	0					
ANR	10023175	PrimaryExpression	0		10023085	0					
ANR	10023176	ReturnType	void		10023085	1					
ANR	10023177	Identifier	Usage		10023085	2					
ANR	10023178	ParameterList			10023085	3					
ANR	10023179	CFGEntryNode	ENTRY		10023085		True				
ANR	10023180	CFGExitNode	EXIT		10023085		True				
ANR	10023181	Symbol	stderr		10023085						
