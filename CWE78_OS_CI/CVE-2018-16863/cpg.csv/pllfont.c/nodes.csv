command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8455442	File	data/converged/CVE-2018-16863_ghostpdl/pllfont.c								
ANR	8455443	DeclStmt									
ANR	8455444	Decl							const char	const char	gp_file_name_list_separator
ANR	8455445	Function	get_name_from_tt_file	59:0:1707:4759							
ANR	8455446	FunctionDef	"get_name_from_tt_file (stream * tt_file , gs_memory_t * mem , char * pfontfilename , int nameoffset)"		8455445	0					
ANR	8455447	CompoundStatement		62:0:1836:4759	8455445	0					
ANR	8455448	IdentifierDeclStatement	long pos ;	64:4:1922:1930	8455445	0	True				
ANR	8455449	IdentifierDecl	pos		8455445	0					
ANR	8455450	IdentifierDeclType	long		8455445	0					
ANR	8455451	Identifier	pos		8455445	1					
ANR	8455452	IdentifierDeclStatement	unsigned long len ;	65:4:1980:1997	8455445	1	True				
ANR	8455453	IdentifierDecl	len		8455445	0					
ANR	8455454	IdentifierDeclType	unsigned long		8455445	0					
ANR	8455455	Identifier	len		8455445	1					
ANR	8455456	IdentifierDeclStatement	char * ptr = pfontfilename ;	66:4:2003:2028	8455445	2	True				
ANR	8455457	IdentifierDecl	* ptr = pfontfilename		8455445	0					
ANR	8455458	IdentifierDeclType	char *		8455445	0					
ANR	8455459	Identifier	ptr		8455445	1					
ANR	8455460	AssignmentExpression	* ptr = pfontfilename		8455445	2		=			
ANR	8455461	Identifier	pfontfilename		8455445	0					
ANR	8455462	Identifier	pfontfilename		8455445	1					
ANR	8455463	IdentifierDeclStatement	byte * ptt_font_data ;	67:4:2034:2053	8455445	3	True				
ANR	8455464	IdentifierDecl	* ptt_font_data		8455445	0					
ANR	8455465	IdentifierDeclType	byte *		8455445	0					
ANR	8455466	Identifier	ptt_font_data		8455445	1					
ANR	8455467	IfStatement	if ( ( pos = sftell ( tt_file ) ) < 0 )		8455445	4					
ANR	8455468	Condition	( pos = sftell ( tt_file ) ) < 0	69:8:2064:2090	8455445	0	True				
ANR	8455469	RelationalExpression	( pos = sftell ( tt_file ) ) < 0		8455445	0		<			
ANR	8455470	AssignmentExpression	pos = sftell ( tt_file )		8455445	0		=			
ANR	8455471	Identifier	pos		8455445	0					
ANR	8455472	CallExpression	sftell ( tt_file )		8455445	1					
ANR	8455473	Callee	sftell		8455445	0					
ANR	8455474	Identifier	sftell		8455445	0					
ANR	8455475	ArgumentList	tt_file		8455445	1					
ANR	8455476	Argument	tt_file		8455445	0					
ANR	8455477	Identifier	tt_file		8455445	0					
ANR	8455478	PrimaryExpression	0		8455445	1					
ANR	8455479	ReturnStatement	return - 1 ;	70:8:2101:2110	8455445	1	True				
ANR	8455480	UnaryOperationExpression	- 1		8455445	0					
ANR	8455481	UnaryOperator	-		8455445	0					
ANR	8455482	PrimaryExpression	1		8455445	1					
ANR	8455483	IfStatement	"if ( sfseek ( tt_file , 0L , SEEK_END ) )"		8455445	5					
ANR	8455484	Condition	"sfseek ( tt_file , 0L , SEEK_END )"	73:8:2215:2243	8455445	0	True				
ANR	8455485	CallExpression	"sfseek ( tt_file , 0L , SEEK_END )"		8455445	0					
ANR	8455486	Callee	sfseek		8455445	0					
ANR	8455487	Identifier	sfseek		8455445	0					
ANR	8455488	ArgumentList	tt_file		8455445	1					
ANR	8455489	Argument	tt_file		8455445	0					
ANR	8455490	Identifier	tt_file		8455445	0					
ANR	8455491	Argument	0L		8455445	1					
ANR	8455492	PrimaryExpression	0L		8455445	0					
ANR	8455493	Argument	SEEK_END		8455445	2					
ANR	8455494	Identifier	SEEK_END		8455445	0					
ANR	8455495	ReturnStatement	return - 1 ;	74:8:2254:2263	8455445	1	True				
ANR	8455496	UnaryOperationExpression	- 1		8455445	0					
ANR	8455497	UnaryOperator	-		8455445	0					
ANR	8455498	PrimaryExpression	1		8455445	1					
ANR	8455499	ExpressionStatement	len = sftell ( tt_file )	75:4:2269:2290	8455445	6	True				
ANR	8455500	AssignmentExpression	len = sftell ( tt_file )		8455445	0		=			
ANR	8455501	Identifier	len		8455445	0					
ANR	8455502	CallExpression	sftell ( tt_file )		8455445	1					
ANR	8455503	Callee	sftell		8455445	0					
ANR	8455504	Identifier	sftell		8455445	0					
ANR	8455505	ArgumentList	tt_file		8455445	1					
ANR	8455506	Argument	tt_file		8455445	0					
ANR	8455507	Identifier	tt_file		8455445	0					
ANR	8455508	ExpressionStatement	"ptt_font_data = gs_alloc_bytes ( mem , len , ""get_name_from_tt_file"" )"	78:4:2345:2410	8455445	7	True				
ANR	8455509	AssignmentExpression	"ptt_font_data = gs_alloc_bytes ( mem , len , ""get_name_from_tt_file"" )"		8455445	0		=			
ANR	8455510	Identifier	ptt_font_data		8455445	0					
ANR	8455511	CallExpression	"gs_alloc_bytes ( mem , len , ""get_name_from_tt_file"" )"		8455445	1					
ANR	8455512	Callee	gs_alloc_bytes		8455445	0					
ANR	8455513	Identifier	gs_alloc_bytes		8455445	0					
ANR	8455514	ArgumentList	mem		8455445	1					
ANR	8455515	Argument	mem		8455445	0					
ANR	8455516	Identifier	mem		8455445	0					
ANR	8455517	Argument	len		8455445	1					
ANR	8455518	Identifier	len		8455445	0					
ANR	8455519	Argument	"""get_name_from_tt_file"""		8455445	2					
ANR	8455520	PrimaryExpression	"""get_name_from_tt_file"""		8455445	0					
ANR	8455521	IfStatement	if ( ptt_font_data == NULL )		8455445	8					
ANR	8455522	Condition	ptt_font_data == NULL	79:8:2420:2440	8455445	0	True				
ANR	8455523	EqualityExpression	ptt_font_data == NULL		8455445	0		==			
ANR	8455524	Identifier	ptt_font_data		8455445	0					
ANR	8455525	Identifier	NULL		8455445	1					
ANR	8455526	ExpressionStatement	return_error ( gs_error_VMerror )	80:8:2451:2481	8455445	1	True				
ANR	8455527	CallExpression	return_error ( gs_error_VMerror )		8455445	0					
ANR	8455528	Callee	return_error		8455445	0					
ANR	8455529	Identifier	return_error		8455445	0					
ANR	8455530	ArgumentList	gs_error_VMerror		8455445	1					
ANR	8455531	Argument	gs_error_VMerror		8455445	0					
ANR	8455532	Identifier	gs_error_VMerror		8455445	0					
ANR	8455533	IfStatement	"if ( ( sfseek ( tt_file , 0L , SEEK_SET ) == 0 ) && ( sfread ( ptt_font_data , 1 , len , tt_file ) == len ) )"		8455445	9					
ANR	8455534	Condition	"( sfseek ( tt_file , 0L , SEEK_SET ) == 0 ) && ( sfread ( ptt_font_data , 1 , len , tt_file ) == len )"	84:8:2582:2668	8455445	0	True				
ANR	8455535	AndExpression	"( sfseek ( tt_file , 0L , SEEK_SET ) == 0 ) && ( sfread ( ptt_font_data , 1 , len , tt_file ) == len )"		8455445	0		&&			
ANR	8455536	EqualityExpression	"sfseek ( tt_file , 0L , SEEK_SET ) == 0"		8455445	0		==			
ANR	8455537	CallExpression	"sfseek ( tt_file , 0L , SEEK_SET )"		8455445	0					
ANR	8455538	Callee	sfseek		8455445	0					
ANR	8455539	Identifier	sfseek		8455445	0					
ANR	8455540	ArgumentList	tt_file		8455445	1					
ANR	8455541	Argument	tt_file		8455445	0					
ANR	8455542	Identifier	tt_file		8455445	0					
ANR	8455543	Argument	0L		8455445	1					
ANR	8455544	PrimaryExpression	0L		8455445	0					
ANR	8455545	Argument	SEEK_SET		8455445	2					
ANR	8455546	Identifier	SEEK_SET		8455445	0					
ANR	8455547	PrimaryExpression	0		8455445	1					
ANR	8455548	EqualityExpression	"sfread ( ptt_font_data , 1 , len , tt_file ) == len"		8455445	1		==			
ANR	8455549	CallExpression	"sfread ( ptt_font_data , 1 , len , tt_file )"		8455445	0					
ANR	8455550	Callee	sfread		8455445	0					
ANR	8455551	Identifier	sfread		8455445	0					
ANR	8455552	ArgumentList	ptt_font_data		8455445	1					
ANR	8455553	Argument	ptt_font_data		8455445	0					
ANR	8455554	Identifier	ptt_font_data		8455445	0					
ANR	8455555	Argument	1		8455445	1					
ANR	8455556	PrimaryExpression	1		8455445	0					
ANR	8455557	Argument	len		8455445	2					
ANR	8455558	Identifier	len		8455445	0					
ANR	8455559	Argument	tt_file		8455445	3					
ANR	8455560	Identifier	tt_file		8455445	0					
ANR	8455561	Identifier	len		8455445	1					
ANR	8455562	ExpressionStatement		84:96:2670:2670	8455445	1	True				
ANR	8455563	ElseStatement	else		8455445	0					
ANR	8455564	CompoundStatement		24:9:859:859	8455445	0					
ANR	8455565	ExpressionStatement	"gs_free_object ( mem , ptt_font_data , ""get_name_from_tt_file"" )"	86:8:2706:2765	8455445	0	True				
ANR	8455566	CallExpression	"gs_free_object ( mem , ptt_font_data , ""get_name_from_tt_file"" )"		8455445	0					
ANR	8455567	Callee	gs_free_object		8455445	0					
ANR	8455568	Identifier	gs_free_object		8455445	0					
ANR	8455569	ArgumentList	mem		8455445	1					
ANR	8455570	Argument	mem		8455445	0					
ANR	8455571	Identifier	mem		8455445	0					
ANR	8455572	Argument	ptt_font_data		8455445	1					
ANR	8455573	Identifier	ptt_font_data		8455445	0					
ANR	8455574	Argument	"""get_name_from_tt_file"""		8455445	2					
ANR	8455575	PrimaryExpression	"""get_name_from_tt_file"""		8455445	0					
ANR	8455576	ReturnStatement	return - 1 ;	87:8:2775:2784	8455445	1	True				
ANR	8455577	UnaryOperationExpression	- 1		8455445	0					
ANR	8455578	UnaryOperator	-		8455445	0					
ANR	8455579	PrimaryExpression	1		8455445	1					
ANR	8455580	CompoundStatement		33:8:1116:1125	8455445	10					
ANR	8455581	IdentifierDeclStatement	byte * pnum_tables_data = ptt_font_data + 4 ;	92:8:2843:2885	8455445	0	True				
ANR	8455582	IdentifierDecl	* pnum_tables_data = ptt_font_data + 4		8455445	0					
ANR	8455583	IdentifierDeclType	byte *		8455445	0					
ANR	8455584	Identifier	pnum_tables_data		8455445	1					
ANR	8455585	AssignmentExpression	* pnum_tables_data = ptt_font_data + 4		8455445	2		=			
ANR	8455586	Identifier	pnum_tables_data		8455445	0					
ANR	8455587	AdditiveExpression	ptt_font_data + 4		8455445	1		+			
ANR	8455588	Identifier	ptt_font_data		8455445	0					
ANR	8455589	PrimaryExpression	4		8455445	1					
ANR	8455590	IdentifierDeclStatement	byte * ptable_directory_data = ptt_font_data + 12 ;	93:8:2895:2943	8455445	1	True				
ANR	8455591	IdentifierDecl	* ptable_directory_data = ptt_font_data + 12		8455445	0					
ANR	8455592	IdentifierDeclType	byte *		8455445	0					
ANR	8455593	Identifier	ptable_directory_data		8455445	1					
ANR	8455594	AssignmentExpression	* ptable_directory_data = ptt_font_data + 12		8455445	2		=			
ANR	8455595	Identifier	ptable_directory_data		8455445	0					
ANR	8455596	AdditiveExpression	ptt_font_data + 12		8455445	1		+			
ANR	8455597	Identifier	ptt_font_data		8455445	0					
ANR	8455598	PrimaryExpression	12		8455445	1					
ANR	8455599	IdentifierDeclStatement	int table ;	94:8:2953:2962	8455445	2	True				
ANR	8455600	IdentifierDecl	table		8455445	0					
ANR	8455601	IdentifierDeclType	int		8455445	0					
ANR	8455602	Identifier	table		8455445	1					
ANR	8455603	ForStatement	for ( table = 0 ; table < pl_get_uint16 ( pnum_tables_data ) ; table ++ )		8455445	3					
ANR	8455604	ForInit	table = 0 ;	96:13:2978:2987	8455445	0	True				
ANR	8455605	AssignmentExpression	table = 0		8455445	0		=			
ANR	8455606	Identifier	table		8455445	0					
ANR	8455607	PrimaryExpression	0		8455445	1					
ANR	8455608	Condition	table < pl_get_uint16 ( pnum_tables_data )	96:24:2989:3027	8455445	1	True				
ANR	8455609	RelationalExpression	table < pl_get_uint16 ( pnum_tables_data )		8455445	0		<			
ANR	8455610	Identifier	table		8455445	0					
ANR	8455611	CallExpression	pl_get_uint16 ( pnum_tables_data )		8455445	1					
ANR	8455612	Callee	pl_get_uint16		8455445	0					
ANR	8455613	Identifier	pl_get_uint16		8455445	0					
ANR	8455614	ArgumentList	pnum_tables_data		8455445	1					
ANR	8455615	Argument	pnum_tables_data		8455445	0					
ANR	8455616	Identifier	pnum_tables_data		8455445	0					
ANR	8455617	PostIncDecOperationExpression	table ++	96:65:3030:3036	8455445	2	True				
ANR	8455618	Identifier	table		8455445	0					
ANR	8455619	IncDec	++		8455445	1					
ANR	8455620	IfStatement	"if ( ! memcmp ( ptable_directory_data + ( table * 16 ) , ""name"" , 4 ) )"		8455445	3					
ANR	8455621	Condition	"! memcmp ( ptable_directory_data + ( table * 16 ) , ""name"" , 4 )"	97:16:3055:3110	8455445	0	True				
ANR	8455622	UnaryOperationExpression	"! memcmp ( ptable_directory_data + ( table * 16 ) , ""name"" , 4 )"		8455445	0					
ANR	8455623	UnaryOperator	!		8455445	0					
ANR	8455624	CallExpression	"memcmp ( ptable_directory_data + ( table * 16 ) , ""name"" , 4 )"		8455445	1					
ANR	8455625	Callee	memcmp		8455445	0					
ANR	8455626	Identifier	memcmp		8455445	0					
ANR	8455627	ArgumentList	ptable_directory_data + ( table * 16 )		8455445	1					
ANR	8455628	Argument	ptable_directory_data + ( table * 16 )		8455445	0					
ANR	8455629	AdditiveExpression	ptable_directory_data + ( table * 16 )		8455445	0		+			
ANR	8455630	Identifier	ptable_directory_data		8455445	0					
ANR	8455631	MultiplicativeExpression	table * 16		8455445	1		*			
ANR	8455632	Identifier	table		8455445	0					
ANR	8455633	PrimaryExpression	16		8455445	1					
ANR	8455634	Argument	"""name"""		8455445	1					
ANR	8455635	PrimaryExpression	"""name"""		8455445	0					
ANR	8455636	Argument	4		8455445	2					
ANR	8455637	PrimaryExpression	4		8455445	0					
ANR	8455638	CompoundStatement		42:16:1598:1630	8455445	1					
ANR	8455639	IdentifierDeclStatement	unsigned int offset = pl_get_uint32 ( ptable_directory_data + ( table * 16 ) + 8 ) ;	98:16:3131:3228	8455445	0	True				
ANR	8455640	IdentifierDecl	offset = pl_get_uint32 ( ptable_directory_data + ( table * 16 ) + 8 )		8455445	0					
ANR	8455641	IdentifierDeclType	unsigned int		8455445	0					
ANR	8455642	Identifier	offset		8455445	1					
ANR	8455643	AssignmentExpression	offset = pl_get_uint32 ( ptable_directory_data + ( table * 16 ) + 8 )		8455445	2		=			
ANR	8455644	Identifier	offset		8455445	0					
ANR	8455645	CallExpression	pl_get_uint32 ( ptable_directory_data + ( table * 16 ) + 8 )		8455445	1					
ANR	8455646	Callee	pl_get_uint32		8455445	0					
ANR	8455647	Identifier	pl_get_uint32		8455445	0					
ANR	8455648	ArgumentList	ptable_directory_data + ( table * 16 ) + 8		8455445	1					
ANR	8455649	Argument	ptable_directory_data + ( table * 16 ) + 8		8455445	0					
ANR	8455650	AdditiveExpression	ptable_directory_data + ( table * 16 ) + 8		8455445	0		+			
ANR	8455651	Identifier	ptable_directory_data		8455445	0					
ANR	8455652	AdditiveExpression	( table * 16 ) + 8		8455445	1		+			
ANR	8455653	MultiplicativeExpression	table * 16		8455445	0		*			
ANR	8455654	Identifier	table		8455445	0					
ANR	8455655	PrimaryExpression	16		8455445	1					
ANR	8455656	PrimaryExpression	8		8455445	1					
ANR	8455657	IdentifierDeclStatement	byte * name_table = ptt_font_data + offset ;	100:16:3246:3287	8455445	1	True				
ANR	8455658	IdentifierDecl	* name_table = ptt_font_data + offset		8455445	0					
ANR	8455659	IdentifierDeclType	byte *		8455445	0					
ANR	8455660	Identifier	name_table		8455445	1					
ANR	8455661	AssignmentExpression	* name_table = ptt_font_data + offset		8455445	2		=			
ANR	8455662	Identifier	name_table		8455445	0					
ANR	8455663	AdditiveExpression	ptt_font_data + offset		8455445	1		+			
ANR	8455664	Identifier	ptt_font_data		8455445	0					
ANR	8455665	Identifier	offset		8455445	1					
ANR	8455666	IdentifierDeclStatement	unsigned short storageOffset = pl_get_uint16 ( name_table + 4 ) ;	102:16:3357:3417	8455445	2	True				
ANR	8455667	IdentifierDecl	storageOffset = pl_get_uint16 ( name_table + 4 )		8455445	0					
ANR	8455668	IdentifierDeclType	unsigned short		8455445	0					
ANR	8455669	Identifier	storageOffset		8455445	1					
ANR	8455670	AssignmentExpression	storageOffset = pl_get_uint16 ( name_table + 4 )		8455445	2		=			
ANR	8455671	Identifier	storageOffset		8455445	0					
ANR	8455672	CallExpression	pl_get_uint16 ( name_table + 4 )		8455445	1					
ANR	8455673	Callee	pl_get_uint16		8455445	0					
ANR	8455674	Identifier	pl_get_uint16		8455445	0					
ANR	8455675	ArgumentList	name_table + 4		8455445	1					
ANR	8455676	Argument	name_table + 4		8455445	0					
ANR	8455677	AdditiveExpression	name_table + 4		8455445	0		+			
ANR	8455678	Identifier	name_table		8455445	0					
ANR	8455679	PrimaryExpression	4		8455445	1					
ANR	8455680	IdentifierDeclStatement	byte * name_recs = name_table + 6 ;	103:16:3435:3467	8455445	3	True				
ANR	8455681	IdentifierDecl	* name_recs = name_table + 6		8455445	0					
ANR	8455682	IdentifierDeclType	byte *		8455445	0					
ANR	8455683	Identifier	name_recs		8455445	1					
ANR	8455684	AssignmentExpression	* name_recs = name_table + 6		8455445	2		=			
ANR	8455685	Identifier	name_recs		8455445	0					
ANR	8455686	AdditiveExpression	name_table + 6		8455445	1		+			
ANR	8455687	Identifier	name_table		8455445	0					
ANR	8455688	PrimaryExpression	6		8455445	1					
ANR	8455689	CompoundStatement		50:20:1982:1987	8455445	4					
ANR	8455690	IdentifierDeclStatement	unsigned short length = pl_get_uint16 ( name_recs + ( 12 * nameoffset ) + 8 ) ;	107:20:3582:3678	8455445	0	True				
ANR	8455691	IdentifierDecl	length = pl_get_uint16 ( name_recs + ( 12 * nameoffset ) + 8 )		8455445	0					
ANR	8455692	IdentifierDeclType	unsigned short		8455445	0					
ANR	8455693	Identifier	length		8455445	1					
ANR	8455694	AssignmentExpression	length = pl_get_uint16 ( name_recs + ( 12 * nameoffset ) + 8 )		8455445	2		=			
ANR	8455695	Identifier	length		8455445	0					
ANR	8455696	CallExpression	pl_get_uint16 ( name_recs + ( 12 * nameoffset ) + 8 )		8455445	1					
ANR	8455697	Callee	pl_get_uint16		8455445	0					
ANR	8455698	Identifier	pl_get_uint16		8455445	0					
ANR	8455699	ArgumentList	name_recs + ( 12 * nameoffset ) + 8		8455445	1					
ANR	8455700	Argument	name_recs + ( 12 * nameoffset ) + 8		8455445	0					
ANR	8455701	AdditiveExpression	name_recs + ( 12 * nameoffset ) + 8		8455445	0		+			
ANR	8455702	Identifier	name_recs		8455445	0					
ANR	8455703	AdditiveExpression	( 12 * nameoffset ) + 8		8455445	1		+			
ANR	8455704	MultiplicativeExpression	12 * nameoffset		8455445	0		*			
ANR	8455705	PrimaryExpression	12		8455445	0					
ANR	8455706	Identifier	nameoffset		8455445	1					
ANR	8455707	PrimaryExpression	8		8455445	1					
ANR	8455708	IdentifierDeclStatement	unsigned short offset = pl_get_uint16 ( name_recs + ( 12 * nameoffset ) + 10 ) ;	109:20:3700:3797	8455445	1	True				
ANR	8455709	IdentifierDecl	offset = pl_get_uint16 ( name_recs + ( 12 * nameoffset ) + 10 )		8455445	0					
ANR	8455710	IdentifierDeclType	unsigned short		8455445	0					
ANR	8455711	Identifier	offset		8455445	1					
ANR	8455712	AssignmentExpression	offset = pl_get_uint16 ( name_recs + ( 12 * nameoffset ) + 10 )		8455445	2		=			
ANR	8455713	Identifier	offset		8455445	0					
ANR	8455714	CallExpression	pl_get_uint16 ( name_recs + ( 12 * nameoffset ) + 10 )		8455445	1					
ANR	8455715	Callee	pl_get_uint16		8455445	0					
ANR	8455716	Identifier	pl_get_uint16		8455445	0					
ANR	8455717	ArgumentList	name_recs + ( 12 * nameoffset ) + 10		8455445	1					
ANR	8455718	Argument	name_recs + ( 12 * nameoffset ) + 10		8455445	0					
ANR	8455719	AdditiveExpression	name_recs + ( 12 * nameoffset ) + 10		8455445	0		+			
ANR	8455720	Identifier	name_recs		8455445	0					
ANR	8455721	AdditiveExpression	( 12 * nameoffset ) + 10		8455445	1		+			
ANR	8455722	MultiplicativeExpression	12 * nameoffset		8455445	0		*			
ANR	8455723	PrimaryExpression	12		8455445	0					
ANR	8455724	Identifier	nameoffset		8455445	1					
ANR	8455725	PrimaryExpression	10		8455445	1					
ANR	8455726	IdentifierDeclStatement	int k ;	111:20:3819:3824	8455445	2	True				
ANR	8455727	IdentifierDecl	k		8455445	0					
ANR	8455728	IdentifierDeclType	int		8455445	0					
ANR	8455729	Identifier	k		8455445	1					
ANR	8455730	ForStatement	for ( k = 0 ; k < length ; k ++ )		8455445	3					
ANR	8455731	ForInit	k = 0 ;	113:25:3852:3857	8455445	0	True				
ANR	8455732	AssignmentExpression	k = 0		8455445	0		=			
ANR	8455733	Identifier	k		8455445	0					
ANR	8455734	PrimaryExpression	0		8455445	1					
ANR	8455735	Condition	k < length	113:32:3859:3868	8455445	1	True				
ANR	8455736	RelationalExpression	k < length		8455445	0		<			
ANR	8455737	Identifier	k		8455445	0					
ANR	8455738	Identifier	length		8455445	1					
ANR	8455739	PostIncDecOperationExpression	k ++	113:44:3871:3873	8455445	2	True				
ANR	8455740	Identifier	k		8455445	0					
ANR	8455741	IncDec	++		8455445	1					
ANR	8455742	CompoundStatement		54:24:2128:2174	8455445	3					
ANR	8455743	IdentifierDeclStatement	int c = name_table [ storageOffset + offset + k ] ;	115:24:3965:4011	8455445	0	True				
ANR	8455744	IdentifierDecl	c = name_table [ storageOffset + offset + k ]		8455445	0					
ANR	8455745	IdentifierDeclType	int		8455445	0					
ANR	8455746	Identifier	c		8455445	1					
ANR	8455747	AssignmentExpression	c = name_table [ storageOffset + offset + k ]		8455445	2		=			
ANR	8455748	Identifier	c		8455445	0					
ANR	8455749	ArrayIndexing	name_table [ storageOffset + offset + k ]		8455445	1					
ANR	8455750	Identifier	name_table		8455445	0					
ANR	8455751	AdditiveExpression	storageOffset + offset + k		8455445	1		+			
ANR	8455752	Identifier	storageOffset		8455445	0					
ANR	8455753	AdditiveExpression	offset + k		8455445	1		+			
ANR	8455754	Identifier	offset		8455445	0					
ANR	8455755	Identifier	k		8455445	1					
ANR	8455756	IfStatement	if ( isprint ( c ) )		8455445	1					
ANR	8455757	Condition	isprint ( c )	117:28:4042:4051	8455445	0	True				
ANR	8455758	CallExpression	isprint ( c )		8455445	0					
ANR	8455759	Callee	isprint		8455445	0					
ANR	8455760	Identifier	isprint		8455445	0					
ANR	8455761	ArgumentList	c		8455445	1					
ANR	8455762	Argument	c		8455445	0					
ANR	8455763	Identifier	c		8455445	0					
ANR	8455764	ExpressionStatement	* ptr ++ = ( char ) c	118:28:4082:4098	8455445	1	True				
ANR	8455765	AssignmentExpression	* ptr ++ = ( char ) c		8455445	0		=			
ANR	8455766	UnaryOperationExpression	* ptr ++		8455445	0					
ANR	8455767	UnaryOperator	*		8455445	0					
ANR	8455768	PostIncDecOperationExpression	ptr ++		8455445	1					
ANR	8455769	Identifier	ptr		8455445	0					
ANR	8455770	IncDec	++		8455445	1					
ANR	8455771	CastExpression	( char ) c		8455445	1					
ANR	8455772	CastTarget	char		8455445	0					
ANR	8455773	Identifier	c		8455445	1					
ANR	8455774	BreakStatement	break ;	121:16:4156:4161	8455445	5	True				
ANR	8455775	ExpressionStatement	"gs_free_object ( mem , ptt_font_data , ""get_name_from_tt_file"" )"	125:4:4244:4303	8455445	11	True				
ANR	8455776	CallExpression	"gs_free_object ( mem , ptt_font_data , ""get_name_from_tt_file"" )"		8455445	0					
ANR	8455777	Callee	gs_free_object		8455445	0					
ANR	8455778	Identifier	gs_free_object		8455445	0					
ANR	8455779	ArgumentList	mem		8455445	1					
ANR	8455780	Argument	mem		8455445	0					
ANR	8455781	Identifier	mem		8455445	0					
ANR	8455782	Argument	ptt_font_data		8455445	1					
ANR	8455783	Identifier	ptt_font_data		8455445	0					
ANR	8455784	Argument	"""get_name_from_tt_file"""		8455445	2					
ANR	8455785	PrimaryExpression	"""get_name_from_tt_file"""		8455445	0					
ANR	8455786	IfStatement	"if ( sfseek ( tt_file , pos , SEEK_SET ) < 0 )"		8455445	12					
ANR	8455787	Condition	"sfseek ( tt_file , pos , SEEK_SET ) < 0"	126:8:4313:4346	8455445	0	True				
ANR	8455788	RelationalExpression	"sfseek ( tt_file , pos , SEEK_SET ) < 0"		8455445	0		<			
ANR	8455789	CallExpression	"sfseek ( tt_file , pos , SEEK_SET )"		8455445	0					
ANR	8455790	Callee	sfseek		8455445	0					
ANR	8455791	Identifier	sfseek		8455445	0					
ANR	8455792	ArgumentList	tt_file		8455445	1					
ANR	8455793	Argument	tt_file		8455445	0					
ANR	8455794	Identifier	tt_file		8455445	0					
ANR	8455795	Argument	pos		8455445	1					
ANR	8455796	Identifier	pos		8455445	0					
ANR	8455797	Argument	SEEK_SET		8455445	2					
ANR	8455798	Identifier	SEEK_SET		8455445	0					
ANR	8455799	PrimaryExpression	0		8455445	1					
ANR	8455800	ReturnStatement	return - 1 ;	127:8:4357:4366	8455445	1	True				
ANR	8455801	UnaryOperationExpression	- 1		8455445	0					
ANR	8455802	UnaryOperator	-		8455445	0					
ANR	8455803	PrimaryExpression	1		8455445	1					
ANR	8455804	ExpressionStatement	* ptr = '\\0'	130:4:4503:4514	8455445	13	True				
ANR	8455805	AssignmentExpression	* ptr = '\\0'		8455445	0		=			
ANR	8455806	UnaryOperationExpression	* ptr		8455445	0					
ANR	8455807	UnaryOperator	*		8455445	0					
ANR	8455808	Identifier	ptr		8455445	1					
ANR	8455809	PrimaryExpression	'\\0'		8455445	1					
ANR	8455810	CompoundStatement		73:8:2730:2759	8455445	14					
ANR	8455811	IdentifierDeclStatement	int i = strlen ( pfontfilename ) ;	134:8:4567:4596	8455445	0	True				
ANR	8455812	IdentifierDecl	i = strlen ( pfontfilename )		8455445	0					
ANR	8455813	IdentifierDeclType	int		8455445	0					
ANR	8455814	Identifier	i		8455445	1					
ANR	8455815	AssignmentExpression	i = strlen ( pfontfilename )		8455445	2		=			
ANR	8455816	Identifier	i		8455445	0					
ANR	8455817	CallExpression	strlen ( pfontfilename )		8455445	1					
ANR	8455818	Callee	strlen		8455445	0					
ANR	8455819	Identifier	strlen		8455445	0					
ANR	8455820	ArgumentList	pfontfilename		8455445	1					
ANR	8455821	Argument	pfontfilename		8455445	0					
ANR	8455822	Identifier	pfontfilename		8455445	0					
ANR	8455823	WhileStatement	while ( -- i >= 0 )		8455445	1					
ANR	8455824	Condition	-- i >= 0	136:15:4614:4621	8455445	0	True				
ANR	8455825	RelationalExpression	-- i >= 0		8455445	0		>=			
ANR	8455826	UnaryExpression	-- i		8455445	0					
ANR	8455827	IncDec	--		8455445	0					
ANR	8455828	Identifier	i		8455445	1					
ANR	8455829	PrimaryExpression	0		8455445	1					
ANR	8455830	CompoundStatement		75:25:2787:2787	8455445	1					
ANR	8455831	IfStatement	if ( ! isspace ( pfontfilename [ i ] ) )		8455445	0					
ANR	8455832	Condition	! isspace ( pfontfilename [ i ] )	137:16:4642:4667	8455445	0	True				
ANR	8455833	UnaryOperationExpression	! isspace ( pfontfilename [ i ] )		8455445	0					
ANR	8455834	UnaryOperator	!		8455445	0					
ANR	8455835	CallExpression	isspace ( pfontfilename [ i ] )		8455445	1					
ANR	8455836	Callee	isspace		8455445	0					
ANR	8455837	Identifier	isspace		8455445	0					
ANR	8455838	ArgumentList	pfontfilename [ i ]		8455445	1					
ANR	8455839	Argument	pfontfilename [ i ]		8455445	0					
ANR	8455840	ArrayIndexing	pfontfilename [ i ]		8455445	0					
ANR	8455841	Identifier	pfontfilename		8455445	0					
ANR	8455842	Identifier	i		8455445	1					
ANR	8455843	BreakStatement	break ;	138:16:4686:4691	8455445	1	True				
ANR	8455844	ExpressionStatement	pfontfilename [ ++ i ] = '\\0'	140:8:4711:4736	8455445	2	True				
ANR	8455845	AssignmentExpression	pfontfilename [ ++ i ] = '\\0'		8455445	0		=			
ANR	8455846	ArrayIndexing	pfontfilename [ ++ i ]		8455445	0					
ANR	8455847	Identifier	pfontfilename		8455445	0					
ANR	8455848	UnaryExpression	++ i		8455445	1					
ANR	8455849	IncDec	++		8455445	0					
ANR	8455850	Identifier	i		8455445	1					
ANR	8455851	PrimaryExpression	'\\0'		8455445	1					
ANR	8455852	ReturnStatement	return 0 ;	143:4:4749:4757	8455445	15	True				
ANR	8455853	PrimaryExpression	0		8455445	0					
ANR	8455854	ReturnType	static int		8455445	1					
ANR	8455855	Identifier	get_name_from_tt_file		8455445	2					
ANR	8455856	ParameterList	"stream * tt_file , gs_memory_t * mem , char * pfontfilename , int nameoffset"		8455445	3					
ANR	8455857	Parameter	stream * tt_file	60:22:1740:1755	8455445	0	True				
ANR	8455858	ParameterType	stream *		8455445	0					
ANR	8455859	Identifier	tt_file		8455445	1					
ANR	8455860	Parameter	gs_memory_t * mem	60:40:1758:1774	8455445	1	True				
ANR	8455861	ParameterType	gs_memory_t *		8455445	0					
ANR	8455862	Identifier	mem		8455445	1					
ANR	8455863	Parameter	char * pfontfilename	61:22:1799:1817	8455445	2	True				
ANR	8455864	ParameterType	char *		8455445	0					
ANR	8455865	Identifier	pfontfilename		8455445	1					
ANR	8455866	Parameter	int nameoffset	61:43:1820:1833	8455445	3	True				
ANR	8455867	ParameterType	int		8455445	0					
ANR	8455868	Identifier	nameoffset		8455445	1					
ANR	8455869	CFGEntryNode	ENTRY		8455445		True				
ANR	8455870	CFGExitNode	EXIT		8455445		True				
ANR	8455871	Symbol	name_table		8455445						
ANR	8455872	Symbol	isprint		8455445						
ANR	8455873	Symbol	ptable_directory_data		8455445						
ANR	8455874	Symbol	* name_table		8455445						
ANR	8455875	Symbol	pfontfilename		8455445						
ANR	8455876	Symbol	strlen		8455445						
ANR	8455877	Symbol	* storageOffset		8455445						
ANR	8455878	Symbol	* pfontfilename		8455445						
ANR	8455879	Symbol	memcmp		8455445						
ANR	8455880	Symbol	mem		8455445						
ANR	8455881	Symbol	len		8455445						
ANR	8455882	Symbol	sftell		8455445						
ANR	8455883	Symbol	pos		8455445						
ANR	8455884	Symbol	pnum_tables_data		8455445						
ANR	8455885	Symbol	* ptr		8455445						
ANR	8455886	Symbol	sfseek		8455445						
ANR	8455887	Symbol	name_recs		8455445						
ANR	8455888	Symbol	table		8455445						
ANR	8455889	Symbol	storageOffset		8455445						
ANR	8455890	Symbol	SEEK_SET		8455445						
ANR	8455891	Symbol	gs_alloc_bytes		8455445						
ANR	8455892	Symbol	pl_get_uint16		8455445						
ANR	8455893	Symbol	NULL		8455445						
ANR	8455894	Symbol	c		8455445						
ANR	8455895	Symbol	offset		8455445						
ANR	8455896	Symbol	* ptr ++		8455445						
ANR	8455897	Symbol	ptt_font_data		8455445						
ANR	8455898	Symbol	length		8455445						
ANR	8455899	Symbol	isspace		8455445						
ANR	8455900	Symbol	i		8455445						
ANR	8455901	Symbol	k		8455445						
ANR	8455902	Symbol	pl_get_uint32		8455445						
ANR	8455903	Symbol	ptr		8455445						
ANR	8455904	Symbol	SEEK_END		8455445						
ANR	8455905	Symbol	gs_error_VMerror		8455445						
ANR	8455906	Symbol	* i		8455445						
ANR	8455907	Symbol	tt_file		8455445						
ANR	8455908	Symbol	* k		8455445						
ANR	8455909	Symbol	nameoffset		8455445						
ANR	8455910	Symbol	sfread		8455445						
ANR	8455911	Symbol	* offset		8455445						
ANR	8455912	Function	check_resident_ufst_fonts	147:0:4775:6767							
ANR	8455913	FunctionDef	"check_resident_ufst_fonts (pl_dict_t * pfontdict , bool use_unicode_names_for_keys , gs_memory_t * mem)"		8455912	0					
ANR	8455914	CompoundStatement		150:0:4914:6767	8455912	0					
ANR	8455915	Statement	define	151:1:4917:4922	8455912	0	True				
ANR	8455916	Statement	fontnames	151:8:4924:4932	8455912	1	True				
ANR	8455917	Statement	(	151:17:4933:4933	8455912	2	True				
ANR	8455918	Statement	agfascreenfontname	151:18:4934:4951	8455912	3	True				
ANR	8455919	Statement	","	151:36:4952:4952	8455912	4	True				
ANR	8455920	Statement	agfaname	151:38:4954:4961	8455912	5	True				
ANR	8455921	Statement	","	151:46:4962:4962	8455912	6	True				
ANR	8455922	Statement	urwname	151:48:4964:4970	8455912	7	True				
ANR	8455923	Statement	)	151:55:4971:4971	8455912	8	True				
ANR	8455924	Statement	agfaname	151:57:4973:4980	8455912	9	True				
ANR	8455925	Statement	include	152:1:4983:4989	8455912	10	True				
ANR	8455926	Statement	"""plftable.h"""	152:9:4991:5002	8455912	11	True				
ANR	8455927	IdentifierDeclStatement	int j ;	153:4:5008:5013	8455912	12	True				
ANR	8455928	IdentifierDecl	j		8455912	0					
ANR	8455929	IdentifierDeclType	int		8455912	0					
ANR	8455930	Identifier	j		8455912	1					
ANR	8455931	ForStatement	for ( j = 0 ; strlen ( resident_table [ j ] . full_font_name ) != 0 && j < pl_built_in_resident_font_table_count ; j ++ )		8455912	13					
ANR	8455932	ForInit	j = 0 ;	155:9:5025:5030	8455912	0	True				
ANR	8455933	AssignmentExpression	j = 0		8455912	0		=			
ANR	8455934	Identifier	j		8455912	0					
ANR	8455935	PrimaryExpression	0		8455912	1					
ANR	8455936	Condition	strlen ( resident_table [ j ] . full_font_name ) != 0 && j < pl_built_in_resident_font_table_count	155:16:5032:5130	8455912	1	True				
ANR	8455937	AndExpression	strlen ( resident_table [ j ] . full_font_name ) != 0 && j < pl_built_in_resident_font_table_count		8455912	0		&&			
ANR	8455938	EqualityExpression	strlen ( resident_table [ j ] . full_font_name ) != 0		8455912	0		!=			
ANR	8455939	CallExpression	strlen ( resident_table [ j ] . full_font_name )		8455912	0					
ANR	8455940	Callee	strlen		8455912	0					
ANR	8455941	Identifier	strlen		8455912	0					
ANR	8455942	ArgumentList	resident_table [ j ] . full_font_name		8455912	1					
ANR	8455943	Argument	resident_table [ j ] . full_font_name		8455912	0					
ANR	8455944	MemberAccess	resident_table [ j ] . full_font_name		8455912	0					
ANR	8455945	ArrayIndexing	resident_table [ j ]		8455912	0					
ANR	8455946	Identifier	resident_table		8455912	0					
ANR	8455947	Identifier	j		8455912	1					
ANR	8455948	Identifier	full_font_name		8455912	1					
ANR	8455949	PrimaryExpression	0		8455912	1					
ANR	8455950	RelationalExpression	j < pl_built_in_resident_font_table_count		8455912	1		<			
ANR	8455951	Identifier	j		8455912	0					
ANR	8455952	Identifier	pl_built_in_resident_font_table_count		8455912	1					
ANR	8455953	PostIncDecOperationExpression	j ++	156:55:5133:5135	8455912	2	True				
ANR	8455954	Identifier	j		8455912	0					
ANR	8455955	IncDec	++		8455912	1					
ANR	8455956	CompoundStatement		8:8:233:244	8455912	3					
ANR	8455957	IdentifierDeclStatement	void * value ;	157:8:5148:5159	8455912	0	True				
ANR	8455958	IdentifierDecl	* value		8455912	0					
ANR	8455959	IdentifierDeclType	void *		8455912	0					
ANR	8455960	Identifier	value		8455912	1					
ANR	8455961	IfStatement	if ( use_unicode_names_for_keys )		8455912	1					
ANR	8455962	Condition	use_unicode_names_for_keys	160:12:5229:5254	8455912	0	True				
ANR	8455963	Identifier	use_unicode_names_for_keys		8455912	0					
ANR	8455964	CompoundStatement		11:40:342:342	8455912	1					
ANR	8455965	IfStatement	"if ( ! pl_dict_lookup ( pfontdict , ( const byte * ) resident_table [ j ] . unicode_fontname , sizeof ( resident_table [ j ] . unicode_fontname ) , & value , true , NULL ) )"		8455912	0					
ANR	8455966	Condition	"! pl_dict_lookup ( pfontdict , ( const byte * ) resident_table [ j ] . unicode_fontname , sizeof ( resident_table [ j ] . unicode_fontname ) , & value , true , NULL )"	161:16:5275:5575	8455912	0	True				
ANR	8455967	UnaryOperationExpression	"! pl_dict_lookup ( pfontdict , ( const byte * ) resident_table [ j ] . unicode_fontname , sizeof ( resident_table [ j ] . unicode_fontname ) , & value , true , NULL )"		8455912	0					
ANR	8455968	UnaryOperator	!		8455912	0					
ANR	8455969	CallExpression	"pl_dict_lookup ( pfontdict , ( const byte * ) resident_table [ j ] . unicode_fontname , sizeof ( resident_table [ j ] . unicode_fontname ) , & value , true , NULL )"		8455912	1					
ANR	8455970	Callee	pl_dict_lookup		8455912	0					
ANR	8455971	Identifier	pl_dict_lookup		8455912	0					
ANR	8455972	ArgumentList	pfontdict		8455912	1					
ANR	8455973	Argument	pfontdict		8455912	0					
ANR	8455974	Identifier	pfontdict		8455912	0					
ANR	8455975	Argument	( const byte * ) resident_table [ j ] . unicode_fontname		8455912	1					
ANR	8455976	CastExpression	( const byte * ) resident_table [ j ] . unicode_fontname		8455912	0					
ANR	8455977	CastTarget	const byte *		8455912	0					
ANR	8455978	MemberAccess	resident_table [ j ] . unicode_fontname		8455912	1					
ANR	8455979	ArrayIndexing	resident_table [ j ]		8455912	0					
ANR	8455980	Identifier	resident_table		8455912	0					
ANR	8455981	Identifier	j		8455912	1					
ANR	8455982	Identifier	unicode_fontname		8455912	1					
ANR	8455983	Argument	sizeof ( resident_table [ j ] . unicode_fontname )		8455912	2					
ANR	8455984	SizeofExpression	sizeof ( resident_table [ j ] . unicode_fontname )		8455912	0					
ANR	8455985	Sizeof	sizeof		8455912	0					
ANR	8455986	MemberAccess	resident_table [ j ] . unicode_fontname		8455912	1					
ANR	8455987	ArrayIndexing	resident_table [ j ]		8455912	0					
ANR	8455988	Identifier	resident_table		8455912	0					
ANR	8455989	Identifier	j		8455912	1					
ANR	8455990	Identifier	unicode_fontname		8455912	1					
ANR	8455991	Argument	& value		8455912	3					
ANR	8455992	UnaryOperationExpression	& value		8455912	0					
ANR	8455993	UnaryOperator	&		8455912	0					
ANR	8455994	Identifier	value		8455912	1					
ANR	8455995	Argument	true		8455912	4					
ANR	8455996	Identifier	true		8455912	0					
ANR	8455997	Argument	NULL		8455912	5					
ANR	8455998	Identifier	NULL		8455912	0					
ANR	8455999	CompoundStatement		18:16:708:713	8455912	1					
ANR	8456000	IdentifierDeclStatement	int i ;	167:16:5623:5628	8455912	0	True				
ANR	8456001	IdentifierDecl	i		8455912	0					
ANR	8456002	IdentifierDeclType	int		8455912	0					
ANR	8456003	Identifier	i		8455912	1					
ANR	8456004	ExpressionStatement	"dmprintf ( mem , ""Font with unicode key: "" )"	169:16:5647:5687	8455912	1	True				
ANR	8456005	CallExpression	"dmprintf ( mem , ""Font with unicode key: "" )"		8455912	0					
ANR	8456006	Callee	dmprintf		8455912	0					
ANR	8456007	Identifier	dmprintf		8455912	0					
ANR	8456008	ArgumentList	mem		8455912	1					
ANR	8456009	Argument	mem		8455912	0					
ANR	8456010	Identifier	mem		8455912	0					
ANR	8456011	Argument	"""Font with unicode key: """		8455912	1					
ANR	8456012	PrimaryExpression	"""Font with unicode key: """		8455912	0					
ANR	8456013	ForStatement	for ( i = 0 ; i < sizeof ( resident_table [ j ] . unicode_fontname ) / sizeof ( resident_table [ j ] . unicode_fontname [ 0 ] ) ; i ++ )		8455912	2					
ANR	8456014	ForInit	i = 0 ;	170:21:5710:5715	8455912	0	True				
ANR	8456015	AssignmentExpression	i = 0		8455912	0		=			
ANR	8456016	Identifier	i		8455912	0					
ANR	8456017	PrimaryExpression	0		8455912	1					
ANR	8456018	Condition	i < sizeof ( resident_table [ j ] . unicode_fontname ) / sizeof ( resident_table [ j ] . unicode_fontname [ 0 ] )	171:21:5738:5873	8455912	1	True				
ANR	8456019	RelationalExpression	i < sizeof ( resident_table [ j ] . unicode_fontname ) / sizeof ( resident_table [ j ] . unicode_fontname [ 0 ] )		8455912	0		<			
ANR	8456020	Identifier	i		8455912	0					
ANR	8456021	MultiplicativeExpression	sizeof ( resident_table [ j ] . unicode_fontname ) / sizeof ( resident_table [ j ] . unicode_fontname [ 0 ] )		8455912	1		/			
ANR	8456022	SizeofExpression	sizeof ( resident_table [ j ] . unicode_fontname )		8455912	0					
ANR	8456023	Sizeof	sizeof		8455912	0					
ANR	8456024	MemberAccess	resident_table [ j ] . unicode_fontname		8455912	1					
ANR	8456025	ArrayIndexing	resident_table [ j ]		8455912	0					
ANR	8456026	Identifier	resident_table		8455912	0					
ANR	8456027	Identifier	j		8455912	1					
ANR	8456028	Identifier	unicode_fontname		8455912	1					
ANR	8456029	SizeofExpression	sizeof ( resident_table [ j ] . unicode_fontname [ 0 ] )		8455912	1					
ANR	8456030	Sizeof	sizeof		8455912	0					
ANR	8456031	ArrayIndexing	resident_table [ j ] . unicode_fontname [ 0 ]		8455912	1					
ANR	8456032	MemberAccess	resident_table [ j ] . unicode_fontname		8455912	0					
ANR	8456033	ArrayIndexing	resident_table [ j ]		8455912	0					
ANR	8456034	Identifier	resident_table		8455912	0					
ANR	8456035	Identifier	j		8455912	1					
ANR	8456036	Identifier	unicode_fontname		8455912	1					
ANR	8456037	PrimaryExpression	0		8455912	1					
ANR	8456038	PostIncDecOperationExpression	i ++	173:68:5876:5878	8455912	2	True				
ANR	8456039	Identifier	i		8455912	0					
ANR	8456040	IncDec	++		8455912	1					
ANR	8456041	CompoundStatement		24:73:966:966	8455912	3					
ANR	8456042	ExpressionStatement	"dmprintf1 ( mem , ""%c"" , ( char ) resident_table [ j ] . unicode_fontname [ i ] )"	174:20:5903:5998	8455912	0	True				
ANR	8456043	CallExpression	"dmprintf1 ( mem , ""%c"" , ( char ) resident_table [ j ] . unicode_fontname [ i ] )"		8455912	0					
ANR	8456044	Callee	dmprintf1		8455912	0					
ANR	8456045	Identifier	dmprintf1		8455912	0					
ANR	8456046	ArgumentList	mem		8455912	1					
ANR	8456047	Argument	mem		8455912	0					
ANR	8456048	Identifier	mem		8455912	0					
ANR	8456049	Argument	"""%c"""		8455912	1					
ANR	8456050	PrimaryExpression	"""%c"""		8455912	0					
ANR	8456051	Argument	( char ) resident_table [ j ] . unicode_fontname [ i ]		8455912	2					
ANR	8456052	CastExpression	( char ) resident_table [ j ] . unicode_fontname [ i ]		8455912	0					
ANR	8456053	CastTarget	char		8455912	0					
ANR	8456054	ArrayIndexing	resident_table [ j ] . unicode_fontname [ i ]		8455912	1					
ANR	8456055	MemberAccess	resident_table [ j ] . unicode_fontname		8455912	0					
ANR	8456056	ArrayIndexing	resident_table [ j ]		8455912	0					
ANR	8456057	Identifier	resident_table		8455912	0					
ANR	8456058	Identifier	j		8455912	1					
ANR	8456059	Identifier	unicode_fontname		8455912	1					
ANR	8456060	Identifier	i		8455912	1					
ANR	8456061	ExpressionStatement	"dmprintf1 ( mem , "" not available in font dictionary, resident table position: %d\\n"" , j )"	177:16:6034:6171	8455912	3	True				
ANR	8456062	CallExpression	"dmprintf1 ( mem , "" not available in font dictionary, resident table position: %d\\n"" , j )"		8455912	0					
ANR	8456063	Callee	dmprintf1		8455912	0					
ANR	8456064	Identifier	dmprintf1		8455912	0					
ANR	8456065	ArgumentList	mem		8455912	1					
ANR	8456066	Argument	mem		8455912	0					
ANR	8456067	Identifier	mem		8455912	0					
ANR	8456068	Argument	""" not available in font dictionary, resident table position: %d\\n"""		8455912	1					
ANR	8456069	PrimaryExpression	""" not available in font dictionary, resident table position: %d\\n"""		8455912	0					
ANR	8456070	Argument	j		8455912	2					
ANR	8456071	Identifier	j		8455912	0					
ANR	8456072	ElseStatement	else		8455912	0					
ANR	8456073	CompoundStatement		33:12:1301:1312	8455912	0					
ANR	8456074	IdentifierDeclStatement	byte key [ 3 ] ;	182:12:6216:6227	8455912	0	True				
ANR	8456075	IdentifierDecl	key [ 3 ]		8455912	0					
ANR	8456076	IdentifierDeclType	byte [ 3 ]		8455912	0					
ANR	8456077	Identifier	key		8455912	1					
ANR	8456078	PrimaryExpression	3		8455912	2					
ANR	8456079	ExpressionStatement	key [ 2 ] = ( byte ) j	184:12:6242:6259	8455912	1	True				
ANR	8456080	AssignmentExpression	key [ 2 ] = ( byte ) j		8455912	0		=			
ANR	8456081	ArrayIndexing	key [ 2 ]		8455912	0					
ANR	8456082	Identifier	key		8455912	0					
ANR	8456083	PrimaryExpression	2		8455912	1					
ANR	8456084	CastExpression	( byte ) j		8455912	1					
ANR	8456085	CastTarget	byte		8455912	0					
ANR	8456086	Identifier	j		8455912	1					
ANR	8456087	ExpressionStatement	key [ 0 ] = key [ 1 ] = 0	185:12:6273:6292	8455912	2	True				
ANR	8456088	AssignmentExpression	key [ 0 ] = key [ 1 ] = 0		8455912	0		=			
ANR	8456089	ArrayIndexing	key [ 0 ]		8455912	0					
ANR	8456090	Identifier	key		8455912	0					
ANR	8456091	PrimaryExpression	0		8455912	1					
ANR	8456092	AssignmentExpression	key [ 1 ] = 0		8455912	1		=			
ANR	8456093	ArrayIndexing	key [ 1 ]		8455912	0					
ANR	8456094	Identifier	key		8455912	0					
ANR	8456095	PrimaryExpression	1		8455912	1					
ANR	8456096	PrimaryExpression	0		8455912	1					
ANR	8456097	IfStatement	"if ( ! pl_dict_lookup ( pfontdict , key , sizeof ( key ) , & value , true , NULL ) )"		8455912	3					
ANR	8456098	Condition	"! pl_dict_lookup ( pfontdict , key , sizeof ( key ) , & value , true , NULL )"	186:16:6310:6501	8455912	0	True				
ANR	8456099	UnaryOperationExpression	"! pl_dict_lookup ( pfontdict , key , sizeof ( key ) , & value , true , NULL )"		8455912	0					
ANR	8456100	UnaryOperator	!		8455912	0					
ANR	8456101	CallExpression	"pl_dict_lookup ( pfontdict , key , sizeof ( key ) , & value , true , NULL )"		8455912	1					
ANR	8456102	Callee	pl_dict_lookup		8455912	0					
ANR	8456103	Identifier	pl_dict_lookup		8455912	0					
ANR	8456104	ArgumentList	pfontdict		8455912	1					
ANR	8456105	Argument	pfontdict		8455912	0					
ANR	8456106	Identifier	pfontdict		8455912	0					
ANR	8456107	Argument	key		8455912	1					
ANR	8456108	Identifier	key		8455912	0					
ANR	8456109	Argument	sizeof ( key )		8455912	2					
ANR	8456110	SizeofExpression	sizeof ( key )		8455912	0					
ANR	8456111	Sizeof	sizeof		8455912	0					
ANR	8456112	SizeofOperand	key		8455912	1					
ANR	8456113	Argument	& value		8455912	3					
ANR	8456114	UnaryOperationExpression	& value		8455912	0					
ANR	8456115	UnaryOperator	&		8455912	0					
ANR	8456116	Identifier	value		8455912	1					
ANR	8456117	Argument	true		8455912	4					
ANR	8456118	Identifier	true		8455912	0					
ANR	8456119	Argument	NULL		8455912	5					
ANR	8456120	Identifier	NULL		8455912	0					
ANR	8456121	ExpressionStatement	"dmprintf2 ( mem , ""%s not available in font dictionary, resident table position: %d\\n"" , resident_table [ j ] . full_font_name , j )"	191:16:6547:6720	8455912	1	True				
ANR	8456122	CallExpression	"dmprintf2 ( mem , ""%s not available in font dictionary, resident table position: %d\\n"" , resident_table [ j ] . full_font_name , j )"		8455912	0					
ANR	8456123	Callee	dmprintf2		8455912	0					
ANR	8456124	Identifier	dmprintf2		8455912	0					
ANR	8456125	ArgumentList	mem		8455912	1					
ANR	8456126	Argument	mem		8455912	0					
ANR	8456127	Identifier	mem		8455912	0					
ANR	8456128	Argument	"""%s not available in font dictionary, resident table position: %d\\n"""		8455912	1					
ANR	8456129	PrimaryExpression	"""%s not available in font dictionary, resident table position: %d\\n"""		8455912	0					
ANR	8456130	Argument	resident_table [ j ] . full_font_name		8455912	2					
ANR	8456131	MemberAccess	resident_table [ j ] . full_font_name		8455912	0					
ANR	8456132	ArrayIndexing	resident_table [ j ]		8455912	0					
ANR	8456133	Identifier	resident_table		8455912	0					
ANR	8456134	Identifier	j		8455912	1					
ANR	8456135	Identifier	full_font_name		8455912	1					
ANR	8456136	Argument	j		8455912	3					
ANR	8456137	Identifier	j		8455912	0					
ANR	8456138	ReturnStatement	return ;	196:4:6742:6748	8455912	14	True				
ANR	8456139	Statement	undef	197:1:6751:6755	8455912	15	True				
ANR	8456140	Statement	fontnames	197:7:6757:6765	8455912	16	True				
ANR	8456141	ReturnType	static void		8455912	1					
ANR	8456142	Identifier	check_resident_ufst_fonts		8455912	2					
ANR	8456143	ParameterList	"pl_dict_t * pfontdict , bool use_unicode_names_for_keys , gs_memory_t * mem"		8455912	3					
ANR	8456144	Parameter	pl_dict_t * pfontdict	148:26:4813:4833	8455912	0	True				
ANR	8456145	ParameterType	pl_dict_t *		8455912	0					
ANR	8456146	Identifier	pfontdict		8455912	1					
ANR	8456147	Parameter	bool use_unicode_names_for_keys	149:26:4862:4892	8455912	1	True				
ANR	8456148	ParameterType	bool		8455912	0					
ANR	8456149	Identifier	use_unicode_names_for_keys		8455912	1					
ANR	8456150	Parameter	gs_memory_t * mem	149:59:4895:4911	8455912	2	True				
ANR	8456151	ParameterType	gs_memory_t *		8455912	0					
ANR	8456152	Identifier	mem		8455912	1					
ANR	8456153	CFGEntryNode	ENTRY		8455912		True				
ANR	8456154	CFGExitNode	EXIT		8455912		True				
ANR	8456155	Symbol	* * j		8455912						
ANR	8456156	Symbol	resident_table [ j ] . unicode_fontname		8455912						
ANR	8456157	Symbol	& value		8455912						
ANR	8456158	Symbol	NULL		8455912						
ANR	8456159	Symbol	* resident_table [ j ] . unicode_fontname		8455912						
ANR	8456160	Symbol	resident_table [ j ] . full_font_name		8455912						
ANR	8456161	Symbol	pl_built_in_resident_font_table_count		8455912						
ANR	8456162	Symbol	* resident_table		8455912						
ANR	8456163	Symbol	i		8455912						
ANR	8456164	Symbol	* key		8455912						
ANR	8456165	Symbol	j		8455912						
ANR	8456166	Symbol	use_unicode_names_for_keys		8455912						
ANR	8456167	Symbol	* * resident_table		8455912						
ANR	8456168	Symbol	strlen		8455912						
ANR	8456169	Symbol	* i		8455912						
ANR	8456170	Symbol	mem		8455912						
ANR	8456171	Symbol	* j		8455912						
ANR	8456172	Symbol	pfontdict		8455912						
ANR	8456173	Symbol	true		8455912						
ANR	8456174	Symbol	pl_dict_lookup		8455912						
ANR	8456175	Symbol	value		8455912						
ANR	8456176	Symbol	key		8455912						
ANR	8456177	Symbol	resident_table		8455912						
ANR	8456178	Function	check_resident_fonts	200:0:6770:7537							
ANR	8456179	FunctionDef	"check_resident_fonts (pl_dict_t * pfontdict , gs_memory_t * mem)"		8456178	0					
ANR	8456180	CompoundStatement		202:0:6845:7537	8456178	0					
ANR	8456181	Statement	define	203:1:6848:6853	8456178	0	True				
ANR	8456182	Statement	fontnames	203:8:6855:6863	8456178	1	True				
ANR	8456183	Statement	(	203:17:6864:6864	8456178	2	True				
ANR	8456184	Statement	agfascreenfontname	203:18:6865:6882	8456178	3	True				
ANR	8456185	Statement	","	203:36:6883:6883	8456178	4	True				
ANR	8456186	Statement	agfaname	203:38:6885:6892	8456178	5	True				
ANR	8456187	Statement	","	203:46:6893:6893	8456178	6	True				
ANR	8456188	Statement	urwname	203:48:6895:6901	8456178	7	True				
ANR	8456189	Statement	)	203:55:6902:6902	8456178	8	True				
ANR	8456190	Statement	urwname	203:57:6904:6910	8456178	9	True				
ANR	8456191	Statement	include	204:1:6913:6919	8456178	10	True				
ANR	8456192	Statement	"""plftable.h"""	204:9:6921:6932	8456178	11	True				
ANR	8456193	IdentifierDeclStatement	int i ;	205:4:6938:6943	8456178	12	True				
ANR	8456194	IdentifierDecl	i		8456178	0					
ANR	8456195	IdentifierDeclType	int		8456178	0					
ANR	8456196	Identifier	i		8456178	1					
ANR	8456197	ForStatement	for ( i = 0 ; strlen ( resident_table [ i ] . full_font_name ) != 0 && i < pl_built_in_resident_font_table_count ; i ++ )		8456178	13					
ANR	8456198	ForInit	i = 0 ;	207:9:6955:6960	8456178	0	True				
ANR	8456199	AssignmentExpression	i = 0		8456178	0		=			
ANR	8456200	Identifier	i		8456178	0					
ANR	8456201	PrimaryExpression	0		8456178	1					
ANR	8456202	Condition	strlen ( resident_table [ i ] . full_font_name ) != 0 && i < pl_built_in_resident_font_table_count	208:9:6971:7069	8456178	1	True				
ANR	8456203	AndExpression	strlen ( resident_table [ i ] . full_font_name ) != 0 && i < pl_built_in_resident_font_table_count		8456178	0		&&			
ANR	8456204	EqualityExpression	strlen ( resident_table [ i ] . full_font_name ) != 0		8456178	0		!=			
ANR	8456205	CallExpression	strlen ( resident_table [ i ] . full_font_name )		8456178	0					
ANR	8456206	Callee	strlen		8456178	0					
ANR	8456207	Identifier	strlen		8456178	0					
ANR	8456208	ArgumentList	resident_table [ i ] . full_font_name		8456178	1					
ANR	8456209	Argument	resident_table [ i ] . full_font_name		8456178	0					
ANR	8456210	MemberAccess	resident_table [ i ] . full_font_name		8456178	0					
ANR	8456211	ArrayIndexing	resident_table [ i ]		8456178	0					
ANR	8456212	Identifier	resident_table		8456178	0					
ANR	8456213	Identifier	i		8456178	1					
ANR	8456214	Identifier	full_font_name		8456178	1					
ANR	8456215	PrimaryExpression	0		8456178	1					
ANR	8456216	RelationalExpression	i < pl_built_in_resident_font_table_count		8456178	1		<			
ANR	8456217	Identifier	i		8456178	0					
ANR	8456218	Identifier	pl_built_in_resident_font_table_count		8456178	1					
ANR	8456219	PostIncDecOperationExpression	i ++	209:55:7072:7074	8456178	2	True				
ANR	8456220	Identifier	i		8456178	0					
ANR	8456221	IncDec	++		8456178	1					
ANR	8456222	IfStatement	"if ( ! pl_lookup_font_by_pjl_number ( pfontdict , i ) )"		8456178	3					
ANR	8456223	Condition	"! pl_lookup_font_by_pjl_number ( pfontdict , i )"	210:12:7089:7131	8456178	0	True				
ANR	8456224	UnaryOperationExpression	"! pl_lookup_font_by_pjl_number ( pfontdict , i )"		8456178	0					
ANR	8456225	UnaryOperator	!		8456178	0					
ANR	8456226	CallExpression	"pl_lookup_font_by_pjl_number ( pfontdict , i )"		8456178	1					
ANR	8456227	Callee	pl_lookup_font_by_pjl_number		8456178	0					
ANR	8456228	Identifier	pl_lookup_font_by_pjl_number		8456178	0					
ANR	8456229	ArgumentList	pfontdict		8456178	1					
ANR	8456230	Argument	pfontdict		8456178	0					
ANR	8456231	Identifier	pfontdict		8456178	0					
ANR	8456232	Argument	i		8456178	1					
ANR	8456233	Identifier	i		8456178	0					
ANR	8456234	CompoundStatement		10:12:302:307	8456178	1					
ANR	8456235	IdentifierDeclStatement	int j ;	211:12:7148:7153	8456178	0	True				
ANR	8456236	IdentifierDecl	j		8456178	0					
ANR	8456237	IdentifierDeclType	int		8456178	0					
ANR	8456238	Identifier	j		8456178	1					
ANR	8456239	ExpressionStatement	"dmprintf2 ( mem , ""%s (entry %d) not found\\n"" , resident_table [ i ] . full_font_name , i )"	213:12:7168:7270	8456178	1	True				
ANR	8456240	CallExpression	"dmprintf2 ( mem , ""%s (entry %d) not found\\n"" , resident_table [ i ] . full_font_name , i )"		8456178	0					
ANR	8456241	Callee	dmprintf2		8456178	0					
ANR	8456242	Identifier	dmprintf2		8456178	0					
ANR	8456243	ArgumentList	mem		8456178	1					
ANR	8456244	Argument	mem		8456178	0					
ANR	8456245	Identifier	mem		8456178	0					
ANR	8456246	Argument	"""%s (entry %d) not found\\n"""		8456178	1					
ANR	8456247	PrimaryExpression	"""%s (entry %d) not found\\n"""		8456178	0					
ANR	8456248	Argument	resident_table [ i ] . full_font_name		8456178	2					
ANR	8456249	MemberAccess	resident_table [ i ] . full_font_name		8456178	0					
ANR	8456250	ArrayIndexing	resident_table [ i ]		8456178	0					
ANR	8456251	Identifier	resident_table		8456178	0					
ANR	8456252	Identifier	i		8456178	1					
ANR	8456253	Identifier	full_font_name		8456178	1					
ANR	8456254	Argument	i		8456178	3					
ANR	8456255	Identifier	i		8456178	0					
ANR	8456256	ExpressionStatement	"dmprintf ( mem , ""pxl unicode name:"" )"	215:12:7284:7318	8456178	2	True				
ANR	8456257	CallExpression	"dmprintf ( mem , ""pxl unicode name:"" )"		8456178	0					
ANR	8456258	Callee	dmprintf		8456178	0					
ANR	8456259	Identifier	dmprintf		8456178	0					
ANR	8456260	ArgumentList	mem		8456178	1					
ANR	8456261	Argument	mem		8456178	0					
ANR	8456262	Identifier	mem		8456178	0					
ANR	8456263	Argument	"""pxl unicode name:"""		8456178	1					
ANR	8456264	PrimaryExpression	"""pxl unicode name:"""		8456178	0					
ANR	8456265	ForStatement	for ( j = 0 ; j < countof ( resident_table [ i ] . unicode_fontname ) ; j ++ )		8456178	3					
ANR	8456266	ForInit	j = 0 ;	216:17:7337:7342	8456178	0	True				
ANR	8456267	AssignmentExpression	j = 0		8456178	0		=			
ANR	8456268	Identifier	j		8456178	0					
ANR	8456269	PrimaryExpression	0		8456178	1					
ANR	8456270	Condition	j < countof ( resident_table [ i ] . unicode_fontname )	216:24:7344:7390	8456178	1	True				
ANR	8456271	RelationalExpression	j < countof ( resident_table [ i ] . unicode_fontname )		8456178	0		<			
ANR	8456272	Identifier	j		8456178	0					
ANR	8456273	CallExpression	countof ( resident_table [ i ] . unicode_fontname )		8456178	1					
ANR	8456274	Callee	countof		8456178	0					
ANR	8456275	Identifier	countof		8456178	0					
ANR	8456276	ArgumentList	resident_table [ i ] . unicode_fontname		8456178	1					
ANR	8456277	Argument	resident_table [ i ] . unicode_fontname		8456178	0					
ANR	8456278	MemberAccess	resident_table [ i ] . unicode_fontname		8456178	0					
ANR	8456279	ArrayIndexing	resident_table [ i ]		8456178	0					
ANR	8456280	Identifier	resident_table		8456178	0					
ANR	8456281	Identifier	i		8456178	1					
ANR	8456282	Identifier	unicode_fontname		8456178	1					
ANR	8456283	PostIncDecOperationExpression	j ++	216:73:7393:7395	8456178	2	True				
ANR	8456284	Identifier	j		8456178	0					
ANR	8456285	IncDec	++		8456178	1					
ANR	8456286	ExpressionStatement	"dmprintf1 ( mem , ""'%c'"" , resident_table [ i ] . unicode_fontname [ j ] )"	217:16:7414:7475	8456178	3	True				
ANR	8456287	CallExpression	"dmprintf1 ( mem , ""'%c'"" , resident_table [ i ] . unicode_fontname [ j ] )"		8456178	0					
ANR	8456288	Callee	dmprintf1		8456178	0					
ANR	8456289	Identifier	dmprintf1		8456178	0					
ANR	8456290	ArgumentList	mem		8456178	1					
ANR	8456291	Argument	mem		8456178	0					
ANR	8456292	Identifier	mem		8456178	0					
ANR	8456293	Argument	"""'%c'"""		8456178	1					
ANR	8456294	PrimaryExpression	"""'%c'"""		8456178	0					
ANR	8456295	Argument	resident_table [ i ] . unicode_fontname [ j ]		8456178	2					
ANR	8456296	ArrayIndexing	resident_table [ i ] . unicode_fontname [ j ]		8456178	0					
ANR	8456297	MemberAccess	resident_table [ i ] . unicode_fontname		8456178	0					
ANR	8456298	ArrayIndexing	resident_table [ i ]		8456178	0					
ANR	8456299	Identifier	resident_table		8456178	0					
ANR	8456300	Identifier	i		8456178	1					
ANR	8456301	Identifier	unicode_fontname		8456178	1					
ANR	8456302	Identifier	j		8456178	1					
ANR	8456303	ExpressionStatement	"dmprintf ( mem , ""\\n"" )"	218:12:7489:7508	8456178	4	True				
ANR	8456304	CallExpression	"dmprintf ( mem , ""\\n"" )"		8456178	0					
ANR	8456305	Callee	dmprintf		8456178	0					
ANR	8456306	Identifier	dmprintf		8456178	0					
ANR	8456307	ArgumentList	mem		8456178	1					
ANR	8456308	Argument	mem		8456178	0					
ANR	8456309	Identifier	mem		8456178	0					
ANR	8456310	Argument	"""\\n"""		8456178	1					
ANR	8456311	PrimaryExpression	"""\\n"""		8456178	0					
ANR	8456312	Statement	undef	220:1:7521:7525	8456178	14	True				
ANR	8456313	Statement	fontnames	220:7:7527:7535	8456178	15	True				
ANR	8456314	ReturnType	static void		8456178	1					
ANR	8456315	Identifier	check_resident_fonts		8456178	2					
ANR	8456316	ParameterList	"pl_dict_t * pfontdict , gs_memory_t * mem"		8456178	3					
ANR	8456317	Parameter	pl_dict_t * pfontdict	201:21:6803:6823	8456178	0	True				
ANR	8456318	ParameterType	pl_dict_t *		8456178	0					
ANR	8456319	Identifier	pfontdict		8456178	1					
ANR	8456320	Parameter	gs_memory_t * mem	201:44:6826:6842	8456178	1	True				
ANR	8456321	ParameterType	gs_memory_t *		8456178	0					
ANR	8456322	Identifier	mem		8456178	1					
ANR	8456323	CFGEntryNode	ENTRY		8456178		True				
ANR	8456324	CFGExitNode	EXIT		8456178		True				
ANR	8456325	Symbol	* * i		8456178						
ANR	8456326	Symbol	resident_table [ i ] . unicode_fontname		8456178						
ANR	8456327	Symbol	pl_built_in_resident_font_table_count		8456178						
ANR	8456328	Symbol	i		8456178						
ANR	8456329	Symbol	* resident_table		8456178						
ANR	8456330	Symbol	j		8456178						
ANR	8456331	Symbol	pl_lookup_font_by_pjl_number		8456178						
ANR	8456332	Symbol	* * resident_table		8456178						
ANR	8456333	Symbol	resident_table [ i ] . full_font_name		8456178						
ANR	8456334	Symbol	strlen		8456178						
ANR	8456335	Symbol	countof		8456178						
ANR	8456336	Symbol	* i		8456178						
ANR	8456337	Symbol	mem		8456178						
ANR	8456338	Symbol	* j		8456178						
ANR	8456339	Symbol	pfontdict		8456178						
ANR	8456340	Symbol	* resident_table [ i ] . unicode_fontname		8456178						
ANR	8456341	Symbol	resident_table		8456178						
ANR	8456342	Function	pl_fill_in_mt_font	225:0:7589:9206							
ANR	8456343	FunctionDef	"pl_fill_in_mt_font (gs_font_base * pfont , pl_font_t * plfont , ushort handle , char * fco_path , gs_font_dir * pdir , gs_memory_t * mem , long unique_id)"		8456342	0					
ANR	8456344	CompoundStatement		229:0:7785:9206	8456342	0					
ANR	8456345	IdentifierDeclStatement	int code = 0 ;	230:4:7791:7803	8456342	0	True				
ANR	8456346	IdentifierDecl	code = 0		8456342	0					
ANR	8456347	IdentifierDeclType	int		8456342	0					
ANR	8456348	Identifier	code		8456342	1					
ANR	8456349	AssignmentExpression	code = 0		8456342	2		=			
ANR	8456350	Identifier	code		8456342	0					
ANR	8456351	PrimaryExpression	0		8456342	1					
ANR	8456352	IfStatement	if ( pfont == 0 || plfont == 0 )		8456342	1					
ANR	8456353	Condition	pfont == 0 || plfont == 0	232:8:7814:7838	8456342	0	True				
ANR	8456354	OrExpression	pfont == 0 || plfont == 0		8456342	0		||			
ANR	8456355	EqualityExpression	pfont == 0		8456342	0		==			
ANR	8456356	Identifier	pfont		8456342	0					
ANR	8456357	PrimaryExpression	0		8456342	1					
ANR	8456358	EqualityExpression	plfont == 0		8456342	1		==			
ANR	8456359	Identifier	plfont		8456342	0					
ANR	8456360	PrimaryExpression	0		8456342	1					
ANR	8456361	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	233:8:7849:7887	8456342	1	True				
ANR	8456362	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		8456342	0		=			
ANR	8456363	Identifier	code		8456342	0					
ANR	8456364	CallExpression	gs_note_error ( gs_error_VMerror )		8456342	1					
ANR	8456365	Callee	gs_note_error		8456342	0					
ANR	8456366	Identifier	gs_note_error		8456342	0					
ANR	8456367	ArgumentList	gs_error_VMerror		8456342	1					
ANR	8456368	Argument	gs_error_VMerror		8456342	0					
ANR	8456369	Identifier	gs_error_VMerror		8456342	0					
ANR	8456370	ElseStatement	else		8456342	0					
ANR	8456371	CompoundStatement		6:9:112:112	8456342	0					
ANR	8456372	ExpressionStatement	"code = pl_fill_in_font ( ( gs_font * ) pfont , plfont , pdir , mem , ""illegal_font"" )"	235:8:7972:8088	8456342	0	True				
ANR	8456373	AssignmentExpression	"code = pl_fill_in_font ( ( gs_font * ) pfont , plfont , pdir , mem , ""illegal_font"" )"		8456342	0		=			
ANR	8456374	Identifier	code		8456342	0					
ANR	8456375	CallExpression	"pl_fill_in_font ( ( gs_font * ) pfont , plfont , pdir , mem , ""illegal_font"" )"		8456342	1					
ANR	8456376	Callee	pl_fill_in_font		8456342	0					
ANR	8456377	Identifier	pl_fill_in_font		8456342	0					
ANR	8456378	ArgumentList	( gs_font * ) pfont		8456342	1					
ANR	8456379	Argument	( gs_font * ) pfont		8456342	0					
ANR	8456380	CastExpression	( gs_font * ) pfont		8456342	0					
ANR	8456381	CastTarget	gs_font *		8456342	0					
ANR	8456382	Identifier	pfont		8456342	1					
ANR	8456383	Argument	plfont		8456342	1					
ANR	8456384	Identifier	plfont		8456342	0					
ANR	8456385	Argument	pdir		8456342	2					
ANR	8456386	Identifier	pdir		8456342	0					
ANR	8456387	Argument	mem		8456342	3					
ANR	8456388	Identifier	mem		8456342	0					
ANR	8456389	Argument	"""illegal_font"""		8456342	4					
ANR	8456390	PrimaryExpression	"""illegal_font"""		8456342	0					
ANR	8456391	IfStatement	if ( code >= 0 )		8456342	1					
ANR	8456392	Condition	code >= 0	238:12:8102:8110	8456342	0	True				
ANR	8456393	RelationalExpression	code >= 0		8456342	0		>=			
ANR	8456394	Identifier	code		8456342	0					
ANR	8456395	PrimaryExpression	0		8456342	1					
ANR	8456396	CompoundStatement		10:23:327:327	8456342	1					
ANR	8456397	ExpressionStatement	plfont -> header = 0	239:12:8179:8197	8456342	0	True				
ANR	8456398	AssignmentExpression	plfont -> header = 0		8456342	0		=			
ANR	8456399	PtrMemberAccess	plfont -> header		8456342	0					
ANR	8456400	Identifier	plfont		8456342	0					
ANR	8456401	Identifier	header		8456342	1					
ANR	8456402	PrimaryExpression	0		8456342	1					
ANR	8456403	ExpressionStatement	plfont -> header_size = 0	240:12:8211:8234	8456342	1	True				
ANR	8456404	AssignmentExpression	plfont -> header_size = 0		8456342	0		=			
ANR	8456405	PtrMemberAccess	plfont -> header_size		8456342	0					
ANR	8456406	Identifier	plfont		8456342	0					
ANR	8456407	Identifier	header_size		8456342	1					
ANR	8456408	PrimaryExpression	0		8456342	1					
ANR	8456409	ExpressionStatement	plfont -> scaling_technology = plfst_MicroType	241:12:8248:8292	8456342	2	True				
ANR	8456410	AssignmentExpression	plfont -> scaling_technology = plfst_MicroType		8456342	0		=			
ANR	8456411	PtrMemberAccess	plfont -> scaling_technology		8456342	0					
ANR	8456412	Identifier	plfont		8456342	0					
ANR	8456413	Identifier	scaling_technology		8456342	1					
ANR	8456414	Identifier	plfst_MicroType		8456342	1					
ANR	8456415	ExpressionStatement	plfont -> font_type = plft_Unicode	242:12:8306:8338	8456342	3	True				
ANR	8456416	AssignmentExpression	plfont -> font_type = plft_Unicode		8456342	0		=			
ANR	8456417	PtrMemberAccess	plfont -> font_type		8456342	0					
ANR	8456418	Identifier	plfont		8456342	0					
ANR	8456419	Identifier	font_type		8456342	1					
ANR	8456420	Identifier	plft_Unicode		8456342	1					
ANR	8456421	ExpressionStatement	plfont -> large_sizes = true	243:12:8352:8378	8456342	4	True				
ANR	8456422	AssignmentExpression	plfont -> large_sizes = true		8456342	0		=			
ANR	8456423	PtrMemberAccess	plfont -> large_sizes		8456342	0					
ANR	8456424	Identifier	plfont		8456342	0					
ANR	8456425	Identifier	large_sizes		8456342	1					
ANR	8456426	Identifier	true		8456342	1					
ANR	8456427	ExpressionStatement	plfont -> is_xl_format = false	244:12:8392:8420	8456342	5	True				
ANR	8456428	AssignmentExpression	plfont -> is_xl_format = false		8456342	0		=			
ANR	8456429	PtrMemberAccess	plfont -> is_xl_format		8456342	0					
ANR	8456430	Identifier	plfont		8456342	0					
ANR	8456431	Identifier	is_xl_format		8456342	1					
ANR	8456432	Identifier	false		8456342	1					
ANR	8456433	ExpressionStatement	plfont -> allow_vertical_substitutes = false	245:12:8434:8476	8456342	6	True				
ANR	8456434	AssignmentExpression	plfont -> allow_vertical_substitutes = false		8456342	0		=			
ANR	8456435	PtrMemberAccess	plfont -> allow_vertical_substitutes		8456342	0					
ANR	8456436	Identifier	plfont		8456342	0					
ANR	8456437	Identifier	allow_vertical_substitutes		8456342	1					
ANR	8456438	Identifier	false		8456342	1					
ANR	8456439	ExpressionStatement	gs_make_identity ( & pfont -> FontMatrix )	247:12:8491:8527	8456342	7	True				
ANR	8456440	CallExpression	gs_make_identity ( & pfont -> FontMatrix )		8456342	0					
ANR	8456441	Callee	gs_make_identity		8456342	0					
ANR	8456442	Identifier	gs_make_identity		8456342	0					
ANR	8456443	ArgumentList	& pfont -> FontMatrix		8456342	1					
ANR	8456444	Argument	& pfont -> FontMatrix		8456342	0					
ANR	8456445	UnaryOperationExpression	& pfont -> FontMatrix		8456342	0					
ANR	8456446	UnaryOperator	&		8456342	0					
ANR	8456447	PtrMemberAccess	pfont -> FontMatrix		8456342	1					
ANR	8456448	Identifier	pfont		8456342	0					
ANR	8456449	Identifier	FontMatrix		8456342	1					
ANR	8456450	ExpressionStatement	pfont -> FontMatrix . xx = pfont -> FontMatrix . yy = 0.001f	248:12:8541:8593	8456342	8	True				
ANR	8456451	AssignmentExpression	pfont -> FontMatrix . xx = pfont -> FontMatrix . yy = 0.001f		8456342	0		=			
ANR	8456452	MemberAccess	pfont -> FontMatrix . xx		8456342	0					
ANR	8456453	PtrMemberAccess	pfont -> FontMatrix		8456342	0					
ANR	8456454	Identifier	pfont		8456342	0					
ANR	8456455	Identifier	FontMatrix		8456342	1					
ANR	8456456	Identifier	xx		8456342	1					
ANR	8456457	AssignmentExpression	pfont -> FontMatrix . yy = 0.001f		8456342	1		=			
ANR	8456458	MemberAccess	pfont -> FontMatrix . yy		8456342	0					
ANR	8456459	PtrMemberAccess	pfont -> FontMatrix		8456342	0					
ANR	8456460	Identifier	pfont		8456342	0					
ANR	8456461	Identifier	FontMatrix		8456342	1					
ANR	8456462	Identifier	yy		8456342	1					
ANR	8456463	PrimaryExpression	0.001f		8456342	1					
ANR	8456464	ExpressionStatement	pfont -> FontType = ft_MicroType	249:12:8607:8637	8456342	9	True				
ANR	8456465	AssignmentExpression	pfont -> FontType = ft_MicroType		8456342	0		=			
ANR	8456466	PtrMemberAccess	pfont -> FontType		8456342	0					
ANR	8456467	Identifier	pfont		8456342	0					
ANR	8456468	Identifier	FontType		8456342	1					
ANR	8456469	Identifier	ft_MicroType		8456342	1					
ANR	8456470	ExpressionStatement	pfont -> BitmapWidths = true	250:12:8651:8677	8456342	10	True				
ANR	8456471	AssignmentExpression	pfont -> BitmapWidths = true		8456342	0		=			
ANR	8456472	PtrMemberAccess	pfont -> BitmapWidths		8456342	0					
ANR	8456473	Identifier	pfont		8456342	0					
ANR	8456474	Identifier	BitmapWidths		8456342	1					
ANR	8456475	Identifier	true		8456342	1					
ANR	8456476	ExpressionStatement	pfont -> ExactSize = fbit_use_outlines	251:12:8691:8727	8456342	11	True				
ANR	8456477	AssignmentExpression	pfont -> ExactSize = fbit_use_outlines		8456342	0		=			
ANR	8456478	PtrMemberAccess	pfont -> ExactSize		8456342	0					
ANR	8456479	Identifier	pfont		8456342	0					
ANR	8456480	Identifier	ExactSize		8456342	1					
ANR	8456481	Identifier	fbit_use_outlines		8456342	1					
ANR	8456482	ExpressionStatement	pfont -> InBetweenSize = fbit_use_outlines	252:12:8741:8781	8456342	12	True				
ANR	8456483	AssignmentExpression	pfont -> InBetweenSize = fbit_use_outlines		8456342	0		=			
ANR	8456484	PtrMemberAccess	pfont -> InBetweenSize		8456342	0					
ANR	8456485	Identifier	pfont		8456342	0					
ANR	8456486	Identifier	InBetweenSize		8456342	1					
ANR	8456487	Identifier	fbit_use_outlines		8456342	1					
ANR	8456488	ExpressionStatement	pfont -> TransformedChar = fbit_use_outlines	253:12:8795:8837	8456342	13	True				
ANR	8456489	AssignmentExpression	pfont -> TransformedChar = fbit_use_outlines		8456342	0		=			
ANR	8456490	PtrMemberAccess	pfont -> TransformedChar		8456342	0					
ANR	8456491	Identifier	pfont		8456342	0					
ANR	8456492	Identifier	TransformedChar		8456342	1					
ANR	8456493	Identifier	fbit_use_outlines		8456342	1					
ANR	8456494	ExpressionStatement	pfont -> FontBBox . p . x = pfont -> FontBBox . p . y = pfont -> FontBBox . q . x = pfont -> FontBBox . q . y = 0	255:12:8852:8957	8456342	14	True				
ANR	8456495	AssignmentExpression	pfont -> FontBBox . p . x = pfont -> FontBBox . p . y = pfont -> FontBBox . q . x = pfont -> FontBBox . q . y = 0		8456342	0		=			
ANR	8456496	MemberAccess	pfont -> FontBBox . p . x		8456342	0					
ANR	8456497	MemberAccess	pfont -> FontBBox . p		8456342	0					
ANR	8456498	PtrMemberAccess	pfont -> FontBBox		8456342	0					
ANR	8456499	Identifier	pfont		8456342	0					
ANR	8456500	Identifier	FontBBox		8456342	1					
ANR	8456501	Identifier	p		8456342	1					
ANR	8456502	Identifier	x		8456342	1					
ANR	8456503	AssignmentExpression	pfont -> FontBBox . p . y = pfont -> FontBBox . q . x = pfont -> FontBBox . q . y = 0		8456342	1		=			
ANR	8456504	MemberAccess	pfont -> FontBBox . p . y		8456342	0					
ANR	8456505	MemberAccess	pfont -> FontBBox . p		8456342	0					
ANR	8456506	PtrMemberAccess	pfont -> FontBBox		8456342	0					
ANR	8456507	Identifier	pfont		8456342	0					
ANR	8456508	Identifier	FontBBox		8456342	1					
ANR	8456509	Identifier	p		8456342	1					
ANR	8456510	Identifier	y		8456342	1					
ANR	8456511	AssignmentExpression	pfont -> FontBBox . q . x = pfont -> FontBBox . q . y = 0		8456342	1		=			
ANR	8456512	MemberAccess	pfont -> FontBBox . q . x		8456342	0					
ANR	8456513	MemberAccess	pfont -> FontBBox . q		8456342	0					
ANR	8456514	PtrMemberAccess	pfont -> FontBBox		8456342	0					
ANR	8456515	Identifier	pfont		8456342	0					
ANR	8456516	Identifier	FontBBox		8456342	1					
ANR	8456517	Identifier	q		8456342	1					
ANR	8456518	Identifier	x		8456342	1					
ANR	8456519	AssignmentExpression	pfont -> FontBBox . q . y = 0		8456342	1		=			
ANR	8456520	MemberAccess	pfont -> FontBBox . q . y		8456342	0					
ANR	8456521	MemberAccess	pfont -> FontBBox . q		8456342	0					
ANR	8456522	PtrMemberAccess	pfont -> FontBBox		8456342	0					
ANR	8456523	Identifier	pfont		8456342	0					
ANR	8456524	Identifier	FontBBox		8456342	1					
ANR	8456525	Identifier	q		8456342	1					
ANR	8456526	Identifier	y		8456342	1					
ANR	8456527	PrimaryExpression	0		8456342	1					
ANR	8456528	ExpressionStatement	"uid_set_UniqueID ( & pfont -> UID , unique_id | ( handle << 16 ) )"	258:12:8972:9029	8456342	15	True				
ANR	8456529	CallExpression	"uid_set_UniqueID ( & pfont -> UID , unique_id | ( handle << 16 ) )"		8456342	0					
ANR	8456530	Callee	uid_set_UniqueID		8456342	0					
ANR	8456531	Identifier	uid_set_UniqueID		8456342	0					
ANR	8456532	ArgumentList	& pfont -> UID		8456342	1					
ANR	8456533	Argument	& pfont -> UID		8456342	0					
ANR	8456534	UnaryOperationExpression	& pfont -> UID		8456342	0					
ANR	8456535	UnaryOperator	&		8456342	0					
ANR	8456536	PtrMemberAccess	pfont -> UID		8456342	1					
ANR	8456537	Identifier	pfont		8456342	0					
ANR	8456538	Identifier	UID		8456342	1					
ANR	8456539	Argument	unique_id | ( handle << 16 )		8456342	1					
ANR	8456540	InclusiveOrExpression	unique_id | ( handle << 16 )		8456342	0		|			
ANR	8456541	Identifier	unique_id		8456342	0					
ANR	8456542	ShiftExpression	handle << 16		8456342	1		<<			
ANR	8456543	Identifier	handle		8456342	0					
ANR	8456544	PrimaryExpression	16		8456342	1					
ANR	8456545	ExpressionStatement	pfont -> encoding_index = 1	259:12:9043:9068	8456342	16	True				
ANR	8456546	AssignmentExpression	pfont -> encoding_index = 1		8456342	0		=			
ANR	8456547	PtrMemberAccess	pfont -> encoding_index		8456342	0					
ANR	8456548	Identifier	pfont		8456342	0					
ANR	8456549	Identifier	encoding_index		8456342	1					
ANR	8456550	PrimaryExpression	1		8456342	1					
ANR	8456551	ExpressionStatement	pfont -> nearest_encoding_index = 1	260:12:9109:9142	8456342	17	True				
ANR	8456552	AssignmentExpression	pfont -> nearest_encoding_index = 1		8456342	0		=			
ANR	8456553	PtrMemberAccess	pfont -> nearest_encoding_index		8456342	0					
ANR	8456554	Identifier	pfont		8456342	0					
ANR	8456555	Identifier	nearest_encoding_index		8456342	1					
ANR	8456556	PrimaryExpression	1		8456342	1					
ANR	8456557	ReturnStatement	return ( code ) ;	263:4:9191:9204	8456342	2	True				
ANR	8456558	Identifier	code		8456342	0					
ANR	8456559	ReturnType	static int		8456342	1					
ANR	8456560	Identifier	pl_fill_in_mt_font		8456342	2					
ANR	8456561	ParameterList	"gs_font_base * pfont , pl_font_t * plfont , ushort handle , char * fco_path , gs_font_dir * pdir , gs_memory_t * mem , long unique_id"		8456342	3					
ANR	8456562	Parameter	gs_font_base * pfont	226:19:7619:7638	8456342	0	True				
ANR	8456563	ParameterType	gs_font_base *		8456342	0					
ANR	8456564	Identifier	pfont		8456342	1					
ANR	8456565	Parameter	pl_font_t * plfont	226:41:7641:7658	8456342	1	True				
ANR	8456566	ParameterType	pl_font_t *		8456342	0					
ANR	8456567	Identifier	plfont		8456342	1					
ANR	8456568	Parameter	ushort handle	226:61:7661:7673	8456342	2	True				
ANR	8456569	ParameterType	ushort		8456342	0					
ANR	8456570	Identifier	handle		8456342	1					
ANR	8456571	Parameter	char * fco_path	227:19:7695:7708	8456342	3	True				
ANR	8456572	ParameterType	char *		8456342	0					
ANR	8456573	Identifier	fco_path		8456342	1					
ANR	8456574	Parameter	gs_font_dir * pdir	227:35:7711:7728	8456342	4	True				
ANR	8456575	ParameterType	gs_font_dir *		8456342	0					
ANR	8456576	Identifier	pdir		8456342	1					
ANR	8456577	Parameter	gs_memory_t * mem	227:55:7731:7747	8456342	5	True				
ANR	8456578	ParameterType	gs_memory_t *		8456342	0					
ANR	8456579	Identifier	mem		8456342	1					
ANR	8456580	Parameter	long unique_id	228:19:7769:7782	8456342	6	True				
ANR	8456581	ParameterType	long		8456342	0					
ANR	8456582	Identifier	unique_id		8456342	1					
ANR	8456583	CFGEntryNode	ENTRY		8456342		True				
ANR	8456584	CFGExitNode	EXIT		8456342		True				
ANR	8456585	Symbol	plfont -> scaling_technology		8456342						
ANR	8456586	Symbol	pfont -> FontBBox . q . y		8456342						
ANR	8456587	Symbol	code		8456342						
ANR	8456588	Symbol	& pfont -> FontMatrix		8456342						
ANR	8456589	Symbol	pfont -> FontBBox . q . x		8456342						
ANR	8456590	Symbol	plfont -> header		8456342						
ANR	8456591	Symbol	pfont -> FontMatrix . yy		8456342						
ANR	8456592	Symbol	plfont		8456342						
ANR	8456593	Symbol	plfont -> large_sizes		8456342						
ANR	8456594	Symbol	& pfont -> UID		8456342						
ANR	8456595	Symbol	pfont -> nearest_encoding_index		8456342						
ANR	8456596	Symbol	pfont -> TransformedChar		8456342						
ANR	8456597	Symbol	mem		8456342						
ANR	8456598	Symbol	pfont -> FontType		8456342						
ANR	8456599	Symbol	pfont -> InBetweenSize		8456342						
ANR	8456600	Symbol	pfont -> BitmapWidths		8456342						
ANR	8456601	Symbol	pfont -> FontBBox		8456342						
ANR	8456602	Symbol	plfont -> font_type		8456342						
ANR	8456603	Symbol	fbit_use_outlines		8456342						
ANR	8456604	Symbol	plfont -> allow_vertical_substitutes		8456342						
ANR	8456605	Symbol	pfont -> encoding_index		8456342						
ANR	8456606	Symbol	unique_id		8456342						
ANR	8456607	Symbol	plfont -> header_size		8456342						
ANR	8456608	Symbol	pfont		8456342						
ANR	8456609	Symbol	pfont -> FontMatrix . xx		8456342						
ANR	8456610	Symbol	false		8456342						
ANR	8456611	Symbol	pdir		8456342						
ANR	8456612	Symbol	plfont -> is_xl_format		8456342						
ANR	8456613	Symbol	handle		8456342						
ANR	8456614	Symbol	fco_path		8456342						
ANR	8456615	Symbol	pl_fill_in_font		8456342						
ANR	8456616	Symbol	plft_Unicode		8456342						
ANR	8456617	Symbol	pfont -> FontMatrix		8456342						
ANR	8456618	Symbol	gs_error_VMerror		8456342						
ANR	8456619	Symbol	gs_note_error		8456342						
ANR	8456620	Symbol	* pfont		8456342						
ANR	8456621	Symbol	plfst_MicroType		8456342						
ANR	8456622	Symbol	pfont -> FontBBox . p . x		8456342						
ANR	8456623	Symbol	pfont -> FontBBox . p . y		8456342						
ANR	8456624	Symbol	* plfont		8456342						
ANR	8456625	Symbol	true		8456342						
ANR	8456626	Symbol	pfont -> FontBBox . p		8456342						
ANR	8456627	Symbol	pfont -> ExactSize		8456342						
ANR	8456628	Symbol	pfont -> FontBBox . q		8456342						
ANR	8456629	Symbol	ft_MicroType		8456342						
ANR	8456630	Function	pl_load_ufst_lineprinter	266:0:9209:13094							
ANR	8456631	FunctionDef	"pl_load_ufst_lineprinter (gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage , bool use_unicode_names_for_keys)"		8456630	0					
ANR	8456632	CompoundStatement		270:0:9396:13094	8456630	0					
ANR	8456633	Statement	define	271:1:9399:9404	8456630	0	True				
ANR	8456634	Statement	fontnames	271:8:9406:9414	8456630	1	True				
ANR	8456635	Statement	(	271:17:9415:9415	8456630	2	True				
ANR	8456636	Statement	agfascreenfontname	271:18:9416:9433	8456630	3	True				
ANR	8456637	Statement	","	271:36:9434:9434	8456630	4	True				
ANR	8456638	Statement	agfaname	271:38:9436:9443	8456630	5	True				
ANR	8456639	Statement	","	271:46:9444:9444	8456630	6	True				
ANR	8456640	Statement	urwname	271:48:9446:9452	8456630	7	True				
ANR	8456641	Statement	)	271:55:9453:9453	8456630	8	True				
ANR	8456642	Statement	agfaname	271:57:9455:9462	8456630	9	True				
ANR	8456643	Statement	include	272:1:9465:9471	8456630	10	True				
ANR	8456644	Statement	"""plftable.h"""	272:9:9473:9484	8456630	11	True				
ANR	8456645	IdentifierDeclStatement	int i ;	273:4:9490:9495	8456630	12	True				
ANR	8456646	IdentifierDecl	i		8456630	0					
ANR	8456647	IdentifierDeclType	int		8456630	0					
ANR	8456648	Identifier	i		8456630	1					
ANR	8456649	ForStatement	for ( i = 0 ; strlen ( resident_table [ i ] . full_font_name ) != 0 && i < pl_built_in_resident_font_table_count ; i ++ )		8456630	13					
ANR	8456650	ForInit	i = 0 ;	275:9:9507:9512	8456630	0	True				
ANR	8456651	AssignmentExpression	i = 0		8456630	0		=			
ANR	8456652	Identifier	i		8456630	0					
ANR	8456653	PrimaryExpression	0		8456630	1					
ANR	8456654	Condition	strlen ( resident_table [ i ] . full_font_name ) != 0 && i < pl_built_in_resident_font_table_count	276:9:9523:9621	8456630	1	True				
ANR	8456655	AndExpression	strlen ( resident_table [ i ] . full_font_name ) != 0 && i < pl_built_in_resident_font_table_count		8456630	0		&&			
ANR	8456656	EqualityExpression	strlen ( resident_table [ i ] . full_font_name ) != 0		8456630	0		!=			
ANR	8456657	CallExpression	strlen ( resident_table [ i ] . full_font_name )		8456630	0					
ANR	8456658	Callee	strlen		8456630	0					
ANR	8456659	Identifier	strlen		8456630	0					
ANR	8456660	ArgumentList	resident_table [ i ] . full_font_name		8456630	1					
ANR	8456661	Argument	resident_table [ i ] . full_font_name		8456630	0					
ANR	8456662	MemberAccess	resident_table [ i ] . full_font_name		8456630	0					
ANR	8456663	ArrayIndexing	resident_table [ i ]		8456630	0					
ANR	8456664	Identifier	resident_table		8456630	0					
ANR	8456665	Identifier	i		8456630	1					
ANR	8456666	Identifier	full_font_name		8456630	1					
ANR	8456667	PrimaryExpression	0		8456630	1					
ANR	8456668	RelationalExpression	i < pl_built_in_resident_font_table_count		8456630	1		<			
ANR	8456669	Identifier	i		8456630	0					
ANR	8456670	Identifier	pl_built_in_resident_font_table_count		8456630	1					
ANR	8456671	PostIncDecOperationExpression	i ++	277:55:9624:9626	8456630	2	True				
ANR	8456672	Identifier	i		8456630	0					
ANR	8456673	IncDec	++		8456630	1					
ANR	8456674	CompoundStatement		8:60:232:232	8456630	3					
ANR	8456675	IfStatement	if ( resident_table [ i ] . params . typeface_family == 0 )		8456630	0					
ANR	8456676	Condition	resident_table [ i ] . params . typeface_family == 0	278:12:9643:9687	8456630	0	True				
ANR	8456677	EqualityExpression	resident_table [ i ] . params . typeface_family == 0		8456630	0		==			
ANR	8456678	MemberAccess	resident_table [ i ] . params . typeface_family		8456630	0					
ANR	8456679	MemberAccess	resident_table [ i ] . params		8456630	0					
ANR	8456680	ArrayIndexing	resident_table [ i ]		8456630	0					
ANR	8456681	Identifier	resident_table		8456630	0					
ANR	8456682	Identifier	i		8456630	1					
ANR	8456683	Identifier	params		8456630	1					
ANR	8456684	Identifier	typeface_family		8456630	1					
ANR	8456685	PrimaryExpression	0		8456630	1					
ANR	8456686	CompoundStatement		17:12:663:671	8456630	1					
ANR	8456687	IdentifierDeclStatement	const byte * header = NULL ;	279:12:9704:9729	8456630	0	True				
ANR	8456688	IdentifierDecl	* header = NULL		8456630	0					
ANR	8456689	IdentifierDeclType	const byte *		8456630	0					
ANR	8456690	Identifier	header		8456630	1					
ANR	8456691	AssignmentExpression	* header = NULL		8456630	2		=			
ANR	8456692	Identifier	NULL		8456630	0					
ANR	8456693	Identifier	NULL		8456630	1					
ANR	8456694	IdentifierDeclStatement	const byte * char_data = NULL ;	280:12:9743:9771	8456630	1	True				
ANR	8456695	IdentifierDecl	* char_data = NULL		8456630	0					
ANR	8456696	IdentifierDeclType	const byte *		8456630	0					
ANR	8456697	Identifier	char_data		8456630	1					
ANR	8456698	AssignmentExpression	* char_data = NULL		8456630	2		=			
ANR	8456699	Identifier	NULL		8456630	0					
ANR	8456700	Identifier	NULL		8456630	1					
ANR	8456701	IdentifierDeclStatement	"pl_font_t * pplfont = pl_alloc_font ( mem , ""pl_load_ufst_lineprinter pplfont"" ) ;"	281:12:9785:9876	8456630	2	True				
ANR	8456702	IdentifierDecl	"* pplfont = pl_alloc_font ( mem , ""pl_load_ufst_lineprinter pplfont"" )"		8456630	0					
ANR	8456703	IdentifierDeclType	pl_font_t *		8456630	0					
ANR	8456704	Identifier	pplfont		8456630	1					
ANR	8456705	AssignmentExpression	"* pplfont = pl_alloc_font ( mem , ""pl_load_ufst_lineprinter pplfont"" )"		8456630	2		=			
ANR	8456706	Identifier	pplfont		8456630	0					
ANR	8456707	CallExpression	"pl_alloc_font ( mem , ""pl_load_ufst_lineprinter pplfont"" )"		8456630	1					
ANR	8456708	Callee	pl_alloc_font		8456630	0					
ANR	8456709	Identifier	pl_alloc_font		8456630	0					
ANR	8456710	ArgumentList	mem		8456630	1					
ANR	8456711	Argument	mem		8456630	0					
ANR	8456712	Identifier	mem		8456630	0					
ANR	8456713	Argument	"""pl_load_ufst_lineprinter pplfont"""		8456630	1					
ANR	8456714	PrimaryExpression	"""pl_load_ufst_lineprinter pplfont"""		8456630	0					
ANR	8456715	IdentifierDeclStatement	"gs_font_base * pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pl_load_ufst_lineprinter pfont"" ) ;"	283:12:9890:10046	8456630	3	True				
ANR	8456716	IdentifierDecl	"* pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pl_load_ufst_lineprinter pfont"" )"		8456630	0					
ANR	8456717	IdentifierDeclType	gs_font_base *		8456630	0					
ANR	8456718	Identifier	pfont		8456630	1					
ANR	8456719	AssignmentExpression	"* pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pl_load_ufst_lineprinter pfont"" )"		8456630	2		=			
ANR	8456720	Identifier	pfont		8456630	0					
ANR	8456721	CallExpression	"gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pl_load_ufst_lineprinter pfont"" )"		8456630	1					
ANR	8456722	Callee	gs_alloc_struct		8456630	0					
ANR	8456723	Identifier	gs_alloc_struct		8456630	0					
ANR	8456724	ArgumentList	mem		8456630	1					
ANR	8456725	Argument	mem		8456630	0					
ANR	8456726	Identifier	mem		8456630	0					
ANR	8456727	Argument	gs_font_base		8456630	1					
ANR	8456728	Identifier	gs_font_base		8456630	0					
ANR	8456729	Argument	& st_gs_font_base		8456630	2					
ANR	8456730	UnaryOperationExpression	& st_gs_font_base		8456630	0					
ANR	8456731	UnaryOperator	&		8456630	0					
ANR	8456732	Identifier	st_gs_font_base		8456630	1					
ANR	8456733	Argument	"""pl_load_ufst_lineprinter pfont"""		8456630	3					
ANR	8456734	PrimaryExpression	"""pl_load_ufst_lineprinter pfont"""		8456630	0					
ANR	8456735	IdentifierDeclStatement	int code ;	286:12:10060:10068	8456630	4	True				
ANR	8456736	IdentifierDecl	code		8456630	0					
ANR	8456737	IdentifierDeclType	int		8456630	0					
ANR	8456738	Identifier	code		8456630	1					
ANR	8456739	ExpressionStatement	"pl_get_ulp_character_data ( ( byte * * ) & header , ( byte * * ) & char_data )"	288:12:10083:10189	8456630	5	True				
ANR	8456740	CallExpression	"pl_get_ulp_character_data ( ( byte * * ) & header , ( byte * * ) & char_data )"		8456630	0					
ANR	8456741	Callee	pl_get_ulp_character_data		8456630	0					
ANR	8456742	Identifier	pl_get_ulp_character_data		8456630	0					
ANR	8456743	ArgumentList	( byte * * ) & header		8456630	1					
ANR	8456744	Argument	( byte * * ) & header		8456630	0					
ANR	8456745	CastExpression	( byte * * ) & header		8456630	0					
ANR	8456746	CastTarget	byte * *		8456630	0					
ANR	8456747	UnaryOperationExpression	& header		8456630	1					
ANR	8456748	UnaryOperator	&		8456630	0					
ANR	8456749	Identifier	header		8456630	1					
ANR	8456750	Argument	( byte * * ) & char_data		8456630	1					
ANR	8456751	CastExpression	( byte * * ) & char_data		8456630	0					
ANR	8456752	CastTarget	byte * *		8456630	0					
ANR	8456753	UnaryOperationExpression	& char_data		8456630	1					
ANR	8456754	UnaryOperator	&		8456630	0					
ANR	8456755	Identifier	char_data		8456630	1					
ANR	8456756	IfStatement	if ( ! header || ! char_data )		8456630	6					
ANR	8456757	Condition	! header || ! char_data	291:16:10208:10228	8456630	0	True				
ANR	8456758	OrExpression	! header || ! char_data		8456630	0		||			
ANR	8456759	UnaryOperationExpression	! header		8456630	0					
ANR	8456760	UnaryOperator	!		8456630	0					
ANR	8456761	Identifier	header		8456630	1					
ANR	8456762	UnaryOperationExpression	! char_data		8456630	1					
ANR	8456763	UnaryOperator	!		8456630	0					
ANR	8456764	Identifier	char_data		8456630	1					
ANR	8456765	CompoundStatement		22:39:834:834	8456630	1					
ANR	8456766	ReturnStatement	return - 1 ;	292:16:10249:10258	8456630	0	True				
ANR	8456767	UnaryOperationExpression	- 1		8456630	0					
ANR	8456768	UnaryOperator	-		8456630	0					
ANR	8456769	PrimaryExpression	1		8456630	1					
ANR	8456770	IfStatement	if ( pplfont == 0 || pfont == 0 )		8456630	7					
ANR	8456771	Condition	pplfont == 0 || pfont == 0	296:16:10352:10377	8456630	0	True				
ANR	8456772	OrExpression	pplfont == 0 || pfont == 0		8456630	0		||			
ANR	8456773	EqualityExpression	pplfont == 0		8456630	0		==			
ANR	8456774	Identifier	pplfont		8456630	0					
ANR	8456775	PrimaryExpression	0		8456630	1					
ANR	8456776	EqualityExpression	pfont == 0		8456630	1		==			
ANR	8456777	Identifier	pfont		8456630	0					
ANR	8456778	PrimaryExpression	0		8456630	1					
ANR	8456779	ReturnStatement	return - 1 ;	297:16:10396:10405	8456630	1	True				
ANR	8456780	UnaryOperationExpression	- 1		8456630	0					
ANR	8456781	UnaryOperator	-		8456630	0					
ANR	8456782	PrimaryExpression	1		8456630	1					
ANR	8456783	IfStatement	"if ( pl_fill_in_font ( ( gs_font * ) pfont , pplfont , pdir , mem , ""lineprinter_font"" ) < 0 )"		8456630	8					
ANR	8456784	Condition	"pl_fill_in_font ( ( gs_font * ) pfont , pplfont , pdir , mem , ""lineprinter_font"" ) < 0"	298:16:10423:10534	8456630	0	True				
ANR	8456785	RelationalExpression	"pl_fill_in_font ( ( gs_font * ) pfont , pplfont , pdir , mem , ""lineprinter_font"" ) < 0"		8456630	0		<			
ANR	8456786	CallExpression	"pl_fill_in_font ( ( gs_font * ) pfont , pplfont , pdir , mem , ""lineprinter_font"" )"		8456630	0					
ANR	8456787	Callee	pl_fill_in_font		8456630	0					
ANR	8456788	Identifier	pl_fill_in_font		8456630	0					
ANR	8456789	ArgumentList	( gs_font * ) pfont		8456630	1					
ANR	8456790	Argument	( gs_font * ) pfont		8456630	0					
ANR	8456791	CastExpression	( gs_font * ) pfont		8456630	0					
ANR	8456792	CastTarget	gs_font *		8456630	0					
ANR	8456793	Identifier	pfont		8456630	1					
ANR	8456794	Argument	pplfont		8456630	1					
ANR	8456795	Identifier	pplfont		8456630	0					
ANR	8456796	Argument	pdir		8456630	2					
ANR	8456797	Identifier	pdir		8456630	0					
ANR	8456798	Argument	mem		8456630	3					
ANR	8456799	Identifier	mem		8456630	0					
ANR	8456800	Argument	"""lineprinter_font"""		8456630	4					
ANR	8456801	PrimaryExpression	"""lineprinter_font"""		8456630	0					
ANR	8456802	PrimaryExpression	0		8456630	1					
ANR	8456803	ReturnStatement	return - 1 ;	301:16:10553:10562	8456630	1	True				
ANR	8456804	UnaryOperationExpression	- 1		8456630	0					
ANR	8456805	UnaryOperator	-		8456630	0					
ANR	8456806	PrimaryExpression	1		8456630	1					
ANR	8456807	ExpressionStatement	"pl_fill_in_bitmap_font ( pfont , gs_next_ids ( mem , 1 ) )"	303:12:10577:10627	8456630	9	True				
ANR	8456808	CallExpression	"pl_fill_in_bitmap_font ( pfont , gs_next_ids ( mem , 1 ) )"		8456630	0					
ANR	8456809	Callee	pl_fill_in_bitmap_font		8456630	0					
ANR	8456810	Identifier	pl_fill_in_bitmap_font		8456630	0					
ANR	8456811	ArgumentList	pfont		8456630	1					
ANR	8456812	Argument	pfont		8456630	0					
ANR	8456813	Identifier	pfont		8456630	0					
ANR	8456814	Argument	"gs_next_ids ( mem , 1 )"		8456630	1					
ANR	8456815	CallExpression	"gs_next_ids ( mem , 1 )"		8456630	0					
ANR	8456816	Callee	gs_next_ids		8456630	0					
ANR	8456817	Identifier	gs_next_ids		8456630	0					
ANR	8456818	ArgumentList	mem		8456630	1					
ANR	8456819	Argument	mem		8456630	0					
ANR	8456820	Identifier	mem		8456630	0					
ANR	8456821	Argument	1		8456630	1					
ANR	8456822	PrimaryExpression	1		8456630	0					
ANR	8456823	ExpressionStatement	pplfont -> params = resident_table [ i ] . params	304:12:10641:10683	8456630	10	True				
ANR	8456824	AssignmentExpression	pplfont -> params = resident_table [ i ] . params		8456630	0		=			
ANR	8456825	PtrMemberAccess	pplfont -> params		8456630	0					
ANR	8456826	Identifier	pplfont		8456630	0					
ANR	8456827	Identifier	params		8456630	1					
ANR	8456828	MemberAccess	resident_table [ i ] . params		8456630	1					
ANR	8456829	ArrayIndexing	resident_table [ i ]		8456630	0					
ANR	8456830	Identifier	resident_table		8456630	0					
ANR	8456831	Identifier	i		8456630	1					
ANR	8456832	Identifier	params		8456630	1					
ANR	8456833	ExpressionStatement	"memcpy ( pplfont -> character_complement , resident_table [ i ] . character_complement , 8 )"	305:12:10697:10796	8456630	11	True				
ANR	8456834	CallExpression	"memcpy ( pplfont -> character_complement , resident_table [ i ] . character_complement , 8 )"		8456630	0					
ANR	8456835	Callee	memcpy		8456630	0					
ANR	8456836	Identifier	memcpy		8456630	0					
ANR	8456837	ArgumentList	pplfont -> character_complement		8456630	1					
ANR	8456838	Argument	pplfont -> character_complement		8456630	0					
ANR	8456839	PtrMemberAccess	pplfont -> character_complement		8456630	0					
ANR	8456840	Identifier	pplfont		8456630	0					
ANR	8456841	Identifier	character_complement		8456630	1					
ANR	8456842	Argument	resident_table [ i ] . character_complement		8456630	1					
ANR	8456843	MemberAccess	resident_table [ i ] . character_complement		8456630	0					
ANR	8456844	ArrayIndexing	resident_table [ i ]		8456630	0					
ANR	8456845	Identifier	resident_table		8456630	0					
ANR	8456846	Identifier	i		8456630	1					
ANR	8456847	Identifier	character_complement		8456630	1					
ANR	8456848	Argument	8		8456630	2					
ANR	8456849	PrimaryExpression	8		8456630	0					
ANR	8456850	IfStatement	if ( use_unicode_names_for_keys )		8456630	12					
ANR	8456851	Condition	use_unicode_names_for_keys	308:16:10815:10840	8456630	0	True				
ANR	8456852	Identifier	use_unicode_names_for_keys		8456630	0					
ANR	8456853	ExpressionStatement	"code = pl_dict_put ( pfontdict , ( const byte * ) resident_table [ i ] . unicode_fontname , 32 , pplfont )"	309:16:10859:11007	8456630	1	True				
ANR	8456854	AssignmentExpression	"code = pl_dict_put ( pfontdict , ( const byte * ) resident_table [ i ] . unicode_fontname , 32 , pplfont )"		8456630	0		=			
ANR	8456855	Identifier	code		8456630	0					
ANR	8456856	CallExpression	"pl_dict_put ( pfontdict , ( const byte * ) resident_table [ i ] . unicode_fontname , 32 , pplfont )"		8456630	1					
ANR	8456857	Callee	pl_dict_put		8456630	0					
ANR	8456858	Identifier	pl_dict_put		8456630	0					
ANR	8456859	ArgumentList	pfontdict		8456630	1					
ANR	8456860	Argument	pfontdict		8456630	0					
ANR	8456861	Identifier	pfontdict		8456630	0					
ANR	8456862	Argument	( const byte * ) resident_table [ i ] . unicode_fontname		8456630	1					
ANR	8456863	CastExpression	( const byte * ) resident_table [ i ] . unicode_fontname		8456630	0					
ANR	8456864	CastTarget	const byte *		8456630	0					
ANR	8456865	MemberAccess	resident_table [ i ] . unicode_fontname		8456630	1					
ANR	8456866	ArrayIndexing	resident_table [ i ]		8456630	0					
ANR	8456867	Identifier	resident_table		8456630	0					
ANR	8456868	Identifier	i		8456630	1					
ANR	8456869	Identifier	unicode_fontname		8456630	1					
ANR	8456870	Argument	32		8456630	2					
ANR	8456871	PrimaryExpression	32		8456630	0					
ANR	8456872	Argument	pplfont		8456630	3					
ANR	8456873	Identifier	pplfont		8456630	0					
ANR	8456874	ElseStatement	else		8456630	0					
ANR	8456875	CompoundStatement		44:16:1647:1658	8456630	0					
ANR	8456876	IdentifierDeclStatement	byte key [ 3 ] ;	313:16:11044:11055	8456630	0	True				
ANR	8456877	IdentifierDecl	key [ 3 ]		8456630	0					
ANR	8456878	IdentifierDeclType	byte [ 3 ]		8456630	0					
ANR	8456879	Identifier	key		8456630	1					
ANR	8456880	PrimaryExpression	3		8456630	2					
ANR	8456881	ExpressionStatement	key [ 2 ] = ( byte ) i	315:16:11074:11091	8456630	1	True				
ANR	8456882	AssignmentExpression	key [ 2 ] = ( byte ) i		8456630	0		=			
ANR	8456883	ArrayIndexing	key [ 2 ]		8456630	0					
ANR	8456884	Identifier	key		8456630	0					
ANR	8456885	PrimaryExpression	2		8456630	1					
ANR	8456886	CastExpression	( byte ) i		8456630	1					
ANR	8456887	CastTarget	byte		8456630	0					
ANR	8456888	Identifier	i		8456630	1					
ANR	8456889	ExpressionStatement	key [ 0 ] = key [ 1 ] = 0	316:16:11109:11128	8456630	2	True				
ANR	8456890	AssignmentExpression	key [ 0 ] = key [ 1 ] = 0		8456630	0		=			
ANR	8456891	ArrayIndexing	key [ 0 ]		8456630	0					
ANR	8456892	Identifier	key		8456630	0					
ANR	8456893	PrimaryExpression	0		8456630	1					
ANR	8456894	AssignmentExpression	key [ 1 ] = 0		8456630	1		=			
ANR	8456895	ArrayIndexing	key [ 1 ]		8456630	0					
ANR	8456896	Identifier	key		8456630	0					
ANR	8456897	PrimaryExpression	1		8456630	1					
ANR	8456898	PrimaryExpression	0		8456630	1					
ANR	8456899	ExpressionStatement	"code = pl_dict_put ( pfontdict , key , sizeof ( key ) , pplfont )"	317:16:11146:11202	8456630	3	True				
ANR	8456900	AssignmentExpression	"code = pl_dict_put ( pfontdict , key , sizeof ( key ) , pplfont )"		8456630	0		=			
ANR	8456901	Identifier	code		8456630	0					
ANR	8456902	CallExpression	"pl_dict_put ( pfontdict , key , sizeof ( key ) , pplfont )"		8456630	1					
ANR	8456903	Callee	pl_dict_put		8456630	0					
ANR	8456904	Identifier	pl_dict_put		8456630	0					
ANR	8456905	ArgumentList	pfontdict		8456630	1					
ANR	8456906	Argument	pfontdict		8456630	0					
ANR	8456907	Identifier	pfontdict		8456630	0					
ANR	8456908	Argument	key		8456630	1					
ANR	8456909	Identifier	key		8456630	0					
ANR	8456910	Argument	sizeof ( key )		8456630	2					
ANR	8456911	SizeofExpression	sizeof ( key )		8456630	0					
ANR	8456912	Sizeof	sizeof		8456630	0					
ANR	8456913	SizeofOperand	key		8456630	1					
ANR	8456914	Argument	pplfont		8456630	3					
ANR	8456915	Identifier	pplfont		8456630	0					
ANR	8456916	IfStatement	if ( code < 0 )		8456630	13					
ANR	8456917	Condition	code < 0	319:16:11234:11241	8456630	0	True				
ANR	8456918	RelationalExpression	code < 0		8456630	0		<			
ANR	8456919	Identifier	code		8456630	0					
ANR	8456920	PrimaryExpression	0		8456630	1					
ANR	8456921	ReturnStatement	return code ;	320:16:11260:11271	8456630	1	True				
ANR	8456922	Identifier	code		8456630	0					
ANR	8456923	ExpressionStatement	pplfont -> storage = storage	321:12:11285:11311	8456630	14	True				
ANR	8456924	AssignmentExpression	pplfont -> storage = storage		8456630	0		=			
ANR	8456925	PtrMemberAccess	pplfont -> storage		8456630	0					
ANR	8456926	Identifier	pplfont		8456630	0					
ANR	8456927	Identifier	storage		8456630	1					
ANR	8456928	Identifier	storage		8456630	1					
ANR	8456929	ExpressionStatement	pplfont -> data_are_permanent = true	322:12:11358:11392	8456630	15	True				
ANR	8456930	AssignmentExpression	pplfont -> data_are_permanent = true		8456630	0		=			
ANR	8456931	PtrMemberAccess	pplfont -> data_are_permanent		8456630	0					
ANR	8456932	Identifier	pplfont		8456630	0					
ANR	8456933	Identifier	data_are_permanent		8456630	1					
ANR	8456934	Identifier	true		8456630	1					
ANR	8456935	ExpressionStatement	pplfont -> header = ( byte * ) header	323:12:11406:11439	8456630	16	True				
ANR	8456936	AssignmentExpression	pplfont -> header = ( byte * ) header		8456630	0		=			
ANR	8456937	PtrMemberAccess	pplfont -> header		8456630	0					
ANR	8456938	Identifier	pplfont		8456630	0					
ANR	8456939	Identifier	header		8456630	1					
ANR	8456940	CastExpression	( byte * ) header		8456630	1					
ANR	8456941	CastTarget	byte *		8456630	0					
ANR	8456942	Identifier	header		8456630	1					
ANR	8456943	ExpressionStatement	pplfont -> font_type = plft_8bit_printable	324:12:11453:11493	8456630	17	True				
ANR	8456944	AssignmentExpression	pplfont -> font_type = plft_8bit_printable		8456630	0		=			
ANR	8456945	PtrMemberAccess	pplfont -> font_type		8456630	0					
ANR	8456946	Identifier	pplfont		8456630	0					
ANR	8456947	Identifier	font_type		8456630	1					
ANR	8456948	Identifier	plft_8bit_printable		8456630	1					
ANR	8456949	ExpressionStatement	pplfont -> scaling_technology = plfst_bitmap	325:12:11507:11549	8456630	18	True				
ANR	8456950	AssignmentExpression	pplfont -> scaling_technology = plfst_bitmap		8456630	0		=			
ANR	8456951	PtrMemberAccess	pplfont -> scaling_technology		8456630	0					
ANR	8456952	Identifier	pplfont		8456630	0					
ANR	8456953	Identifier	scaling_technology		8456630	1					
ANR	8456954	Identifier	plfst_bitmap		8456630	1					
ANR	8456955	ExpressionStatement	pplfont -> is_xl_format = false	326:12:11563:11592	8456630	19	True				
ANR	8456956	AssignmentExpression	pplfont -> is_xl_format = false		8456630	0		=			
ANR	8456957	PtrMemberAccess	pplfont -> is_xl_format		8456630	0					
ANR	8456958	Identifier	pplfont		8456630	0					
ANR	8456959	Identifier	is_xl_format		8456630	1					
ANR	8456960	Identifier	false		8456630	1					
ANR	8456961	ExpressionStatement	pplfont -> resolution . x = pplfont -> resolution . y = 300	327:12:11606:11657	8456630	20	True				
ANR	8456962	AssignmentExpression	pplfont -> resolution . x = pplfont -> resolution . y = 300		8456630	0		=			
ANR	8456963	MemberAccess	pplfont -> resolution . x		8456630	0					
ANR	8456964	PtrMemberAccess	pplfont -> resolution		8456630	0					
ANR	8456965	Identifier	pplfont		8456630	0					
ANR	8456966	Identifier	resolution		8456630	1					
ANR	8456967	Identifier	x		8456630	1					
ANR	8456968	AssignmentExpression	pplfont -> resolution . y = 300		8456630	1		=			
ANR	8456969	MemberAccess	pplfont -> resolution . y		8456630	0					
ANR	8456970	PtrMemberAccess	pplfont -> resolution		8456630	0					
ANR	8456971	Identifier	pplfont		8456630	0					
ANR	8456972	Identifier	resolution		8456630	1					
ANR	8456973	Identifier	y		8456630	1					
ANR	8456974	PrimaryExpression	300		8456630	1					
ANR	8456975	ExpressionStatement	"code = pl_font_alloc_glyph_table ( pplfont , 256 , mem , ""pl_load_ufst_lineprinter pplfont (glyph table)"" )"	329:12:11672:11818	8456630	21	True				
ANR	8456976	AssignmentExpression	"code = pl_font_alloc_glyph_table ( pplfont , 256 , mem , ""pl_load_ufst_lineprinter pplfont (glyph table)"" )"		8456630	0		=			
ANR	8456977	Identifier	code		8456630	0					
ANR	8456978	CallExpression	"pl_font_alloc_glyph_table ( pplfont , 256 , mem , ""pl_load_ufst_lineprinter pplfont (glyph table)"" )"		8456630	1					
ANR	8456979	Callee	pl_font_alloc_glyph_table		8456630	0					
ANR	8456980	Identifier	pl_font_alloc_glyph_table		8456630	0					
ANR	8456981	ArgumentList	pplfont		8456630	1					
ANR	8456982	Argument	pplfont		8456630	0					
ANR	8456983	Identifier	pplfont		8456630	0					
ANR	8456984	Argument	256		8456630	1					
ANR	8456985	PrimaryExpression	256		8456630	0					
ANR	8456986	Argument	mem		8456630	2					
ANR	8456987	Identifier	mem		8456630	0					
ANR	8456988	Argument	"""pl_load_ufst_lineprinter pplfont (glyph table)"""		8456630	3					
ANR	8456989	PrimaryExpression	"""pl_load_ufst_lineprinter pplfont (glyph table)"""		8456630	0					
ANR	8456990	IfStatement	if ( code < 0 )		8456630	22					
ANR	8456991	Condition	code < 0	331:16:11836:11843	8456630	0	True				
ANR	8456992	RelationalExpression	code < 0		8456630	0		<			
ANR	8456993	Identifier	code		8456630	0					
ANR	8456994	PrimaryExpression	0		8456630	1					
ANR	8456995	ReturnStatement	return code ;	332:16:11862:11873	8456630	1	True				
ANR	8456996	Identifier	code		8456630	0					
ANR	8456997	WhileStatement	while ( 1 )		8456630	23					
ANR	8456998	Condition	1	334:19:11895:11895	8456630	0	True				
ANR	8456999	PrimaryExpression	1		8456630	0					
ANR	8457000	CompoundStatement		73:16:2853:2865	8456630	1					
ANR	8457001	IdentifierDeclStatement	uint width = pl_get_uint16 ( char_data + 12 ) ;	336:16:11917:11959	8456630	0	True				
ANR	8457002	IdentifierDecl	width = pl_get_uint16 ( char_data + 12 )		8456630	0					
ANR	8457003	IdentifierDeclType	uint		8456630	0					
ANR	8457004	Identifier	width		8456630	1					
ANR	8457005	AssignmentExpression	width = pl_get_uint16 ( char_data + 12 )		8456630	2		=			
ANR	8457006	Identifier	width		8456630	0					
ANR	8457007	CallExpression	pl_get_uint16 ( char_data + 12 )		8456630	1					
ANR	8457008	Callee	pl_get_uint16		8456630	0					
ANR	8457009	Identifier	pl_get_uint16		8456630	0					
ANR	8457010	ArgumentList	char_data + 12		8456630	1					
ANR	8457011	Argument	char_data + 12		8456630	0					
ANR	8457012	AdditiveExpression	char_data + 12		8456630	0		+			
ANR	8457013	Identifier	char_data		8456630	0					
ANR	8457014	PrimaryExpression	12		8456630	1					
ANR	8457015	IdentifierDeclStatement	uint height = pl_get_uint16 ( char_data + 14 ) ;	337:16:11977:12020	8456630	1	True				
ANR	8457016	IdentifierDecl	height = pl_get_uint16 ( char_data + 14 )		8456630	0					
ANR	8457017	IdentifierDeclType	uint		8456630	0					
ANR	8457018	Identifier	height		8456630	1					
ANR	8457019	AssignmentExpression	height = pl_get_uint16 ( char_data + 14 )		8456630	2		=			
ANR	8457020	Identifier	height		8456630	0					
ANR	8457021	CallExpression	pl_get_uint16 ( char_data + 14 )		8456630	1					
ANR	8457022	Callee	pl_get_uint16		8456630	0					
ANR	8457023	Identifier	pl_get_uint16		8456630	0					
ANR	8457024	ArgumentList	char_data + 14		8456630	1					
ANR	8457025	Argument	char_data + 14		8456630	0					
ANR	8457026	AdditiveExpression	char_data + 14		8456630	0		+			
ANR	8457027	Identifier	char_data		8456630	0					
ANR	8457028	PrimaryExpression	14		8456630	1					
ANR	8457029	IdentifierDeclStatement	uint ccode_plus_header_plus_data = 2 + 16 + ( ( ( width + 7 ) >> 3 ) * height ) ;	338:16:12038:12131	8456630	2	True				
ANR	8457030	IdentifierDecl	ccode_plus_header_plus_data = 2 + 16 + ( ( ( width + 7 ) >> 3 ) * height )		8456630	0					
ANR	8457031	IdentifierDeclType	uint		8456630	0					
ANR	8457032	Identifier	ccode_plus_header_plus_data		8456630	1					
ANR	8457033	AssignmentExpression	ccode_plus_header_plus_data = 2 + 16 + ( ( ( width + 7 ) >> 3 ) * height )		8456630	2		=			
ANR	8457034	Identifier	ccode_plus_header_plus_data		8456630	0					
ANR	8457035	AdditiveExpression	2 + 16 + ( ( ( width + 7 ) >> 3 ) * height )		8456630	1		+			
ANR	8457036	PrimaryExpression	2		8456630	0					
ANR	8457037	AdditiveExpression	16 + ( ( ( width + 7 ) >> 3 ) * height )		8456630	1		+			
ANR	8457038	PrimaryExpression	16		8456630	0					
ANR	8457039	MultiplicativeExpression	( ( width + 7 ) >> 3 ) * height		8456630	1		*			
ANR	8457040	ShiftExpression	( width + 7 ) >> 3		8456630	0		>>			
ANR	8457041	AdditiveExpression	width + 7		8456630	0		+			
ANR	8457042	Identifier	width		8456630	0					
ANR	8457043	PrimaryExpression	7		8456630	1					
ANR	8457044	PrimaryExpression	3		8456630	1					
ANR	8457045	Identifier	height		8456630	1					
ANR	8457046	IdentifierDeclStatement	"uint ucode = pl_map_MSL_to_Unicode ( pl_get_uint16 ( char_data ) , 0 ) ;"	340:16:12149:12232	8456630	3	True				
ANR	8457047	IdentifierDecl	"ucode = pl_map_MSL_to_Unicode ( pl_get_uint16 ( char_data ) , 0 )"		8456630	0					
ANR	8457048	IdentifierDeclType	uint		8456630	0					
ANR	8457049	Identifier	ucode		8456630	1					
ANR	8457050	AssignmentExpression	"ucode = pl_map_MSL_to_Unicode ( pl_get_uint16 ( char_data ) , 0 )"		8456630	2		=			
ANR	8457051	Identifier	ucode		8456630	0					
ANR	8457052	CallExpression	"pl_map_MSL_to_Unicode ( pl_get_uint16 ( char_data ) , 0 )"		8456630	1					
ANR	8457053	Callee	pl_map_MSL_to_Unicode		8456630	0					
ANR	8457054	Identifier	pl_map_MSL_to_Unicode		8456630	0					
ANR	8457055	ArgumentList	pl_get_uint16 ( char_data )		8456630	1					
ANR	8457056	Argument	pl_get_uint16 ( char_data )		8456630	0					
ANR	8457057	CallExpression	pl_get_uint16 ( char_data )		8456630	0					
ANR	8457058	Callee	pl_get_uint16		8456630	0					
ANR	8457059	Identifier	pl_get_uint16		8456630	0					
ANR	8457060	ArgumentList	char_data		8456630	1					
ANR	8457061	Argument	char_data		8456630	0					
ANR	8457062	Identifier	char_data		8456630	0					
ANR	8457063	Argument	0		8456630	1					
ANR	8457064	PrimaryExpression	0		8456630	0					
ANR	8457065	IdentifierDeclStatement	int code = 0 ;	342:16:12250:12262	8456630	4	True				
ANR	8457066	IdentifierDecl	code = 0		8456630	0					
ANR	8457067	IdentifierDeclType	int		8456630	0					
ANR	8457068	Identifier	code		8456630	1					
ANR	8457069	AssignmentExpression	code = 0		8456630	2		=			
ANR	8457070	Identifier	code		8456630	0					
ANR	8457071	PrimaryExpression	0		8456630	1					
ANR	8457072	IfStatement	if ( ucode != 0xffff )		8456630	5					
ANR	8457073	Condition	ucode != 0xffff	346:20:12384:12398	8456630	0	True				
ANR	8457074	EqualityExpression	ucode != 0xffff		8456630	0		!=			
ANR	8457075	Identifier	ucode		8456630	0					
ANR	8457076	PrimaryExpression	0xffff		8456630	1					
ANR	8457077	ExpressionStatement	"code = pl_font_add_glyph ( pplfont , ucode , char_data + 2 , ccode_plus_header_plus_data )"	347:20:12421:12505	8456630	1	True				
ANR	8457078	AssignmentExpression	"code = pl_font_add_glyph ( pplfont , ucode , char_data + 2 , ccode_plus_header_plus_data )"		8456630	0		=			
ANR	8457079	Identifier	code		8456630	0					
ANR	8457080	CallExpression	"pl_font_add_glyph ( pplfont , ucode , char_data + 2 , ccode_plus_header_plus_data )"		8456630	1					
ANR	8457081	Callee	pl_font_add_glyph		8456630	0					
ANR	8457082	Identifier	pl_font_add_glyph		8456630	0					
ANR	8457083	ArgumentList	pplfont		8456630	1					
ANR	8457084	Argument	pplfont		8456630	0					
ANR	8457085	Identifier	pplfont		8456630	0					
ANR	8457086	Argument	ucode		8456630	1					
ANR	8457087	Identifier	ucode		8456630	0					
ANR	8457088	Argument	char_data + 2		8456630	2					
ANR	8457089	AdditiveExpression	char_data + 2		8456630	0		+			
ANR	8457090	Identifier	char_data		8456630	0					
ANR	8457091	PrimaryExpression	2		8456630	1					
ANR	8457092	Argument	ccode_plus_header_plus_data		8456630	3					
ANR	8457093	Identifier	ccode_plus_header_plus_data		8456630	0					
ANR	8457094	IfStatement	if ( code < 0 )		8456630	6					
ANR	8457095	Condition	code < 0	349:20:12528:12535	8456630	0	True				
ANR	8457096	RelationalExpression	code < 0		8456630	0		<			
ANR	8457097	Identifier	code		8456630	0					
ANR	8457098	PrimaryExpression	0		8456630	1					
ANR	8457099	ReturnStatement	return - 1 ;	351:20:12601:12610	8456630	1	True				
ANR	8457100	UnaryOperationExpression	- 1		8456630	0					
ANR	8457101	UnaryOperator	-		8456630	0					
ANR	8457102	PrimaryExpression	1		8456630	1					
ANR	8457103	ExpressionStatement	char_data += ccode_plus_header_plus_data	353:16:12711:12751	8456630	7	True				
ANR	8457104	AssignmentExpression	char_data += ccode_plus_header_plus_data		8456630	0		+=			
ANR	8457105	Identifier	char_data		8456630	0					
ANR	8457106	Identifier	ccode_plus_header_plus_data		8456630	1					
ANR	8457107	IfStatement	if ( pl_get_uint16 ( char_data ) == 0 )		8456630	8					
ANR	8457108	Condition	pl_get_uint16 ( char_data ) == 0	356:20:12824:12852	8456630	0	True				
ANR	8457109	EqualityExpression	pl_get_uint16 ( char_data ) == 0		8456630	0		==			
ANR	8457110	CallExpression	pl_get_uint16 ( char_data )		8456630	0					
ANR	8457111	Callee	pl_get_uint16		8456630	0					
ANR	8457112	Identifier	pl_get_uint16		8456630	0					
ANR	8457113	ArgumentList	char_data		8456630	1					
ANR	8457114	Argument	char_data		8456630	0					
ANR	8457115	Identifier	char_data		8456630	0					
ANR	8457116	PrimaryExpression	0		8456630	1					
ANR	8457117	BreakStatement	break ;	357:20:12875:12880	8456630	1	True				
ANR	8457118	ExpressionStatement	"code = gs_definefont ( pdir , ( gs_font * ) pfont )"	359:12:12908:12953	8456630	24	True				
ANR	8457119	AssignmentExpression	"code = gs_definefont ( pdir , ( gs_font * ) pfont )"		8456630	0		=			
ANR	8457120	Identifier	code		8456630	0					
ANR	8457121	CallExpression	"gs_definefont ( pdir , ( gs_font * ) pfont )"		8456630	1					
ANR	8457122	Callee	gs_definefont		8456630	0					
ANR	8457123	Identifier	gs_definefont		8456630	0					
ANR	8457124	ArgumentList	pdir		8456630	1					
ANR	8457125	Argument	pdir		8456630	0					
ANR	8457126	Identifier	pdir		8456630	0					
ANR	8457127	Argument	( gs_font * ) pfont		8456630	1					
ANR	8457128	CastExpression	( gs_font * ) pfont		8456630	0					
ANR	8457129	CastTarget	gs_font *		8456630	0					
ANR	8457130	Identifier	pfont		8456630	1					
ANR	8457131	IfStatement	if ( code < 0 )		8456630	25					
ANR	8457132	Condition	code < 0	360:16:12971:12978	8456630	0	True				
ANR	8457133	RelationalExpression	code < 0		8456630	0		<			
ANR	8457134	Identifier	code		8456630	0					
ANR	8457135	PrimaryExpression	0		8456630	1					
ANR	8457136	ReturnStatement	return - 1 ;	362:16:13036:13045	8456630	1	True				
ANR	8457137	UnaryOperationExpression	- 1		8456630	0					
ANR	8457138	UnaryOperator	-		8456630	0					
ANR	8457139	PrimaryExpression	1		8456630	1					
ANR	8457140	ReturnStatement	return 0 ;	365:4:13067:13075	8456630	14	True				
ANR	8457141	PrimaryExpression	0		8456630	0					
ANR	8457142	Statement	undef	366:1:13078:13082	8456630	15	True				
ANR	8457143	Statement	fontnames	366:7:13084:13092	8456630	16	True				
ANR	8457144	ReturnType	int		8456630	1					
ANR	8457145	Identifier	pl_load_ufst_lineprinter		8456630	2					
ANR	8457146	ParameterList	"gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage , bool use_unicode_names_for_keys"		8456630	3					
ANR	8457147	Parameter	gs_memory_t * mem	267:25:9238:9254	8456630	0	True				
ANR	8457148	ParameterType	gs_memory_t *		8456630	0					
ANR	8457149	Identifier	mem		8456630	1					
ANR	8457150	Parameter	pl_dict_t * pfontdict	267:44:9257:9277	8456630	1	True				
ANR	8457151	ParameterType	pl_dict_t *		8456630	0					
ANR	8457152	Identifier	pfontdict		8456630	1					
ANR	8457153	Parameter	gs_font_dir * pdir	268:25:9305:9322	8456630	2	True				
ANR	8457154	ParameterType	gs_font_dir *		8456630	0					
ANR	8457155	Identifier	pdir		8456630	1					
ANR	8457156	Parameter	int storage	268:45:9325:9335	8456630	3	True				
ANR	8457157	ParameterType	int		8456630	0					
ANR	8457158	Identifier	storage		8456630	1					
ANR	8457159	Parameter	bool use_unicode_names_for_keys	269:25:9363:9393	8456630	4	True				
ANR	8457160	ParameterType	bool		8456630	0					
ANR	8457161	Identifier	use_unicode_names_for_keys		8456630	1					
ANR	8457162	CFGEntryNode	ENTRY		8456630		True				
ANR	8457163	CFGExitNode	EXIT		8456630		True				
ANR	8457164	Symbol	pplfont -> data_are_permanent		8456630						
ANR	8457165	Symbol	resident_table [ i ] . unicode_fontname		8456630						
ANR	8457166	Symbol	pl_built_in_resident_font_table_count		8456630						
ANR	8457167	Symbol	* resident_table		8456630						
ANR	8457168	Symbol	* key		8456630						
ANR	8457169	Symbol	gs_font_base		8456630						
ANR	8457170	Symbol	gs_next_ids		8456630						
ANR	8457171	Symbol	gs_definefont		8456630						
ANR	8457172	Symbol	strlen		8456630						
ANR	8457173	Symbol	pplfont -> is_xl_format		8456630						
ANR	8457174	Symbol	resident_table [ i ] . params		8456630						
ANR	8457175	Symbol	& st_gs_font_base		8456630						
ANR	8457176	Symbol	ccode_plus_header_plus_data		8456630						
ANR	8457177	Symbol	pplfont -> scaling_technology		8456630						
ANR	8457178	Symbol	resident_table		8456630						
ANR	8457179	Symbol	* pplfont		8456630						
ANR	8457180	Symbol	height		8456630						
ANR	8457181	Symbol	NULL		8456630						
ANR	8457182	Symbol	pplfont -> header		8456630						
ANR	8457183	Symbol	pplfont -> resolution . y		8456630						
ANR	8457184	Symbol	pplfont -> resolution . x		8456630						
ANR	8457185	Symbol	pdir		8456630						
ANR	8457186	Symbol	pplfont -> resolution		8456630						
ANR	8457187	Symbol	plft_8bit_printable		8456630						
ANR	8457188	Symbol	& header		8456630						
ANR	8457189	Symbol	pfontdict		8456630						
ANR	8457190	Symbol	pplfont -> params		8456630						
ANR	8457191	Symbol	true		8456630						
ANR	8457192	Symbol	pl_font_add_glyph		8456630						
ANR	8457193	Symbol	header		8456630						
ANR	8457194	Symbol	& char_data		8456630						
ANR	8457195	Symbol	pl_dict_put		8456630						
ANR	8457196	Symbol	pplfont -> font_type		8456630						
ANR	8457197	Symbol	pl_alloc_font		8456630						
ANR	8457198	Symbol	pplfont		8456630						
ANR	8457199	Symbol	code		8456630						
ANR	8457200	Symbol	plfst_bitmap		8456630						
ANR	8457201	Symbol	gs_alloc_struct		8456630						
ANR	8457202	Symbol	resident_table [ i ] . params . typeface_family		8456630						
ANR	8457203	Symbol	pl_map_MSL_to_Unicode		8456630						
ANR	8457204	Symbol	resident_table [ i ] . character_complement		8456630						
ANR	8457205	Symbol	storage		8456630						
ANR	8457206	Symbol	resident_table [ i ] . full_font_name		8456630						
ANR	8457207	Symbol	pplfont -> character_complement		8456630						
ANR	8457208	Symbol	mem		8456630						
ANR	8457209	Symbol	pl_font_alloc_glyph_table		8456630						
ANR	8457210	Symbol	key		8456630						
ANR	8457211	Symbol	pl_get_uint16		8456630						
ANR	8457212	Symbol	pfont		8456630						
ANR	8457213	Symbol	false		8456630						
ANR	8457214	Symbol	i		8456630						
ANR	8457215	Symbol	pplfont -> storage		8456630						
ANR	8457216	Symbol	use_unicode_names_for_keys		8456630						
ANR	8457217	Symbol	char_data		8456630						
ANR	8457218	Symbol	pl_fill_in_font		8456630						
ANR	8457219	Symbol	* i		8456630						
ANR	8457220	Symbol	width		8456630						
ANR	8457221	Symbol	ucode		8456630						
ANR	8457222	Function	pl_load_built_in_mtype_fonts	369:0:13097:21117							
ANR	8457223	FunctionDef	"pl_load_built_in_mtype_fonts (const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage , bool use_unicode_names_for_keys)"		8457222	0					
ANR	8457224	CompoundStatement		373:0:13325:21117	8457222	0					
ANR	8457225	Statement	define	374:1:13328:13333	8457222	0	True				
ANR	8457226	Statement	fontnames	374:8:13335:13343	8457222	1	True				
ANR	8457227	Statement	(	374:17:13344:13344	8457222	2	True				
ANR	8457228	Statement	agfascreenfontname	374:18:13345:13362	8457222	3	True				
ANR	8457229	Statement	","	374:36:13363:13363	8457222	4	True				
ANR	8457230	Statement	agfaname	374:38:13365:13372	8457222	5	True				
ANR	8457231	Statement	","	374:46:13373:13373	8457222	6	True				
ANR	8457232	Statement	urwname	374:48:13375:13381	8457222	7	True				
ANR	8457233	Statement	)	374:55:13382:13382	8457222	8	True				
ANR	8457234	Statement	agfaname	374:57:13384:13391	8457222	9	True				
ANR	8457235	Statement	include	375:1:13394:13400	8457222	10	True				
ANR	8457236	Statement	"""plftable.h"""	375:9:13402:13413	8457222	11	True				
ANR	8457237	IdentifierDeclStatement	"int i , k ;"	377:4:13420:13428	8457222	12	True				
ANR	8457238	IdentifierDecl	i		8457222	0					
ANR	8457239	IdentifierDeclType	int		8457222	0					
ANR	8457240	Identifier	i		8457222	1					
ANR	8457241	IdentifierDecl	k		8457222	1					
ANR	8457242	IdentifierDeclType	int		8457222	0					
ANR	8457243	Identifier	k		8457222	1					
ANR	8457244	IdentifierDeclStatement	short status = 0 ;	378:4:13434:13450	8457222	13	True				
ANR	8457245	IdentifierDecl	status = 0		8457222	0					
ANR	8457246	IdentifierDeclType	short		8457222	0					
ANR	8457247	Identifier	status		8457222	1					
ANR	8457248	AssignmentExpression	status = 0		8457222	2		=			
ANR	8457249	Identifier	status		8457222	0					
ANR	8457250	PrimaryExpression	0		8457222	1					
ANR	8457251	IdentifierDeclStatement	int bSize ;	379:4:13456:13465	8457222	14	True				
ANR	8457252	IdentifierDecl	bSize		8457222	0					
ANR	8457253	IdentifierDeclType	int		8457222	0					
ANR	8457254	Identifier	bSize		8457222	1					
ANR	8457255	IdentifierDeclStatement	byte key [ 3 ] ;	380:4:13471:13482	8457222	15	True				
ANR	8457256	IdentifierDecl	key [ 3 ]		8457222	0					
ANR	8457257	IdentifierDeclType	byte [ 3 ]		8457222	0					
ANR	8457258	Identifier	key		8457222	1					
ANR	8457259	PrimaryExpression	3		8457222	2					
ANR	8457260	IdentifierDeclStatement	char pthnm [ 1024 ] ;	381:4:13488:13504	8457222	16	True				
ANR	8457261	IdentifierDecl	pthnm [ 1024 ]		8457222	0					
ANR	8457262	IdentifierDeclType	char [ 1024 ]		8457222	0					
ANR	8457263	Identifier	pthnm		8457222	1					
ANR	8457264	PrimaryExpression	1024		8457222	2					
ANR	8457265	IdentifierDeclStatement	char * ufst_root_dir ;	382:4:13510:13529	8457222	17	True				
ANR	8457266	IdentifierDecl	* ufst_root_dir		8457222	0					
ANR	8457267	IdentifierDeclType	char *		8457222	0					
ANR	8457268	Identifier	ufst_root_dir		8457222	1					
ANR	8457269	IdentifierDeclStatement	char * fco ;	383:4:13535:13544	8457222	18	True				
ANR	8457270	IdentifierDecl	* fco		8457222	0					
ANR	8457271	IdentifierDeclType	char *		8457222	0					
ANR	8457272	Identifier	fco		8457222	1					
ANR	8457273	IdentifierDeclStatement	"char * fco_start , * fco_lim ;"	384:4:13550:13575	8457222	19	True				
ANR	8457274	IdentifierDecl	* fco_start		8457222	0					
ANR	8457275	IdentifierDeclType	char *		8457222	0					
ANR	8457276	Identifier	fco_start		8457222	1					
ANR	8457277	IdentifierDecl	* fco_lim		8457222	1					
ANR	8457278	IdentifierDeclType	char *		8457222	0					
ANR	8457279	Identifier	fco_lim		8457222	1					
ANR	8457280	IdentifierDeclStatement	pl_font_t * plfont = NULL ;	385:4:13581:13605	8457222	20	True				
ANR	8457281	IdentifierDecl	* plfont = NULL		8457222	0					
ANR	8457282	IdentifierDeclType	pl_font_t *		8457222	0					
ANR	8457283	Identifier	plfont		8457222	1					
ANR	8457284	AssignmentExpression	* plfont = NULL		8457222	2		=			
ANR	8457285	Identifier	NULL		8457222	0					
ANR	8457286	Identifier	NULL		8457222	1					
ANR	8457287	IdentifierDeclStatement	gs_font * pfont = NULL ;	386:4:13611:13632	8457222	21	True				
ANR	8457288	IdentifierDecl	* pfont = NULL		8457222	0					
ANR	8457289	IdentifierDeclType	gs_font *		8457222	0					
ANR	8457290	Identifier	pfont		8457222	1					
ANR	8457291	AssignmentExpression	* pfont = NULL		8457222	2		=			
ANR	8457292	Identifier	NULL		8457222	0					
ANR	8457293	Identifier	NULL		8457222	1					
ANR	8457294	IdentifierDeclStatement	gs_font_base * pbfont ;	387:4:13638:13658	8457222	22	True				
ANR	8457295	IdentifierDecl	* pbfont		8457222	0					
ANR	8457296	IdentifierDeclType	gs_font_base *		8457222	0					
ANR	8457297	Identifier	pbfont		8457222	1					
ANR	8457298	ExpressionStatement	( void ) pl_built_in_resident_font_table_count	389:4:13665:13708	8457222	23	True				
ANR	8457299	CastExpression	( void ) pl_built_in_resident_font_table_count		8457222	0					
ANR	8457300	CastTarget	void		8457222	0					
ANR	8457301	Identifier	pl_built_in_resident_font_table_count		8457222	1					
ANR	8457302	IfStatement	"if ( pl_dict_length ( pfontdict , true ) > 0 )"		8457222	24					
ANR	8457303	Condition	"pl_dict_length ( pfontdict , true ) > 0"	392:8:13761:13795	8457222	0	True				
ANR	8457304	RelationalExpression	"pl_dict_length ( pfontdict , true ) > 0"		8457222	0		>			
ANR	8457305	CallExpression	"pl_dict_length ( pfontdict , true )"		8457222	0					
ANR	8457306	Callee	pl_dict_length		8457222	0					
ANR	8457307	Identifier	pl_dict_length		8457222	0					
ANR	8457308	ArgumentList	pfontdict		8457222	1					
ANR	8457309	Argument	pfontdict		8457222	0					
ANR	8457310	Identifier	pfontdict		8457222	0					
ANR	8457311	Argument	true		8457222	1					
ANR	8457312	Identifier	true		8457222	0					
ANR	8457313	PrimaryExpression	0		8457222	1					
ANR	8457314	ReturnStatement	return 1 ;	393:8:13806:13814	8457222	1	True				
ANR	8457315	PrimaryExpression	1		8457222	0					
ANR	8457316	IfStatement	if ( ! pl_fapi_ufst_available ( mem ) )		8457222	25					
ANR	8457317	Condition	! pl_fapi_ufst_available ( mem )	395:8:13825:13852	8457222	0	True				
ANR	8457318	UnaryOperationExpression	! pl_fapi_ufst_available ( mem )		8457222	0					
ANR	8457319	UnaryOperator	!		8457222	0					
ANR	8457320	CallExpression	pl_fapi_ufst_available ( mem )		8457222	1					
ANR	8457321	Callee	pl_fapi_ufst_available		8457222	0					
ANR	8457322	Identifier	pl_fapi_ufst_available		8457222	0					
ANR	8457323	ArgumentList	mem		8457222	1					
ANR	8457324	Argument	mem		8457222	0					
ANR	8457325	Identifier	mem		8457222	0					
ANR	8457326	CompoundStatement		23:38:529:529	8457222	1					
ANR	8457327	ReturnStatement	return ( 0 ) ;	396:8:13865:13875	8457222	0	True				
ANR	8457328	PrimaryExpression	0		8457222	0					
ANR	8457329	ExpressionStatement	ufst_root_dir = ( char * ) pl_fapi_ufst_get_font_dir ( mem )	407:4:14131:14185	8457222	26	True				
ANR	8457330	AssignmentExpression	ufst_root_dir = ( char * ) pl_fapi_ufst_get_font_dir ( mem )		8457222	0		=			
ANR	8457331	Identifier	ufst_root_dir		8457222	0					
ANR	8457332	CastExpression	( char * ) pl_fapi_ufst_get_font_dir ( mem )		8457222	1					
ANR	8457333	CastTarget	char *		8457222	0					
ANR	8457334	CallExpression	pl_fapi_ufst_get_font_dir ( mem )		8457222	1					
ANR	8457335	Callee	pl_fapi_ufst_get_font_dir		8457222	0					
ANR	8457336	Identifier	pl_fapi_ufst_get_font_dir		8457222	0					
ANR	8457337	ArgumentList	mem		8457222	1					
ANR	8457338	Argument	mem		8457222	0					
ANR	8457339	Identifier	mem		8457222	0					
ANR	8457340	ExpressionStatement	fco_start = fco = ( char * ) pl_fapi_ufst_get_fco_list ( mem )	408:4:14191:14247	8457222	27	True				
ANR	8457341	AssignmentExpression	fco_start = fco = ( char * ) pl_fapi_ufst_get_fco_list ( mem )		8457222	0		=			
ANR	8457342	Identifier	fco_start		8457222	0					
ANR	8457343	AssignmentExpression	fco = ( char * ) pl_fapi_ufst_get_fco_list ( mem )		8457222	1		=			
ANR	8457344	Identifier	fco		8457222	0					
ANR	8457345	CastExpression	( char * ) pl_fapi_ufst_get_fco_list ( mem )		8457222	1					
ANR	8457346	CastTarget	char *		8457222	0					
ANR	8457347	CallExpression	pl_fapi_ufst_get_fco_list ( mem )		8457222	1					
ANR	8457348	Callee	pl_fapi_ufst_get_fco_list		8457222	0					
ANR	8457349	Identifier	pl_fapi_ufst_get_fco_list		8457222	0					
ANR	8457350	ArgumentList	mem		8457222	1					
ANR	8457351	Argument	mem		8457222	0					
ANR	8457352	Identifier	mem		8457222	0					
ANR	8457353	ExpressionStatement	fco_lim = fco_start + strlen ( fco_start ) + 1	409:4:14253:14296	8457222	28	True				
ANR	8457354	AssignmentExpression	fco_lim = fco_start + strlen ( fco_start ) + 1		8457222	0		=			
ANR	8457355	Identifier	fco_lim		8457222	0					
ANR	8457356	AdditiveExpression	fco_start + strlen ( fco_start ) + 1		8457222	1		+			
ANR	8457357	Identifier	fco_start		8457222	0					
ANR	8457358	AdditiveExpression	strlen ( fco_start ) + 1		8457222	1		+			
ANR	8457359	CallExpression	strlen ( fco_start )		8457222	0					
ANR	8457360	Callee	strlen		8457222	0					
ANR	8457361	Identifier	strlen		8457222	0					
ANR	8457362	ArgumentList	fco_start		8457222	1					
ANR	8457363	Argument	fco_start		8457222	0					
ANR	8457364	Identifier	fco_start		8457222	0					
ANR	8457365	PrimaryExpression	1		8457222	1					
ANR	8457366	ForStatement	for ( k = 0 ; strlen ( fco ) > 0 && fco < fco_lim ; k ++ )		8457222	29					
ANR	8457367	ForInit	k = 0 ;	411:9:14308:14313	8457222	0	True				
ANR	8457368	AssignmentExpression	k = 0		8457222	0		=			
ANR	8457369	Identifier	k		8457222	0					
ANR	8457370	PrimaryExpression	0		8457222	1					
ANR	8457371	Condition	strlen ( fco ) > 0 && fco < fco_lim	411:16:14315:14346	8457222	1	True				
ANR	8457372	AndExpression	strlen ( fco ) > 0 && fco < fco_lim		8457222	0		&&			
ANR	8457373	RelationalExpression	strlen ( fco ) > 0		8457222	0		>			
ANR	8457374	CallExpression	strlen ( fco )		8457222	0					
ANR	8457375	Callee	strlen		8457222	0					
ANR	8457376	Identifier	strlen		8457222	0					
ANR	8457377	ArgumentList	fco		8457222	1					
ANR	8457378	Argument	fco		8457222	0					
ANR	8457379	Identifier	fco		8457222	0					
ANR	8457380	PrimaryExpression	0		8457222	1					
ANR	8457381	RelationalExpression	fco < fco_lim		8457222	1		<			
ANR	8457382	Identifier	fco		8457222	0					
ANR	8457383	Identifier	fco_lim		8457222	1					
ANR	8457384	PostIncDecOperationExpression	k ++	411:50:14349:14351	8457222	2	True				
ANR	8457385	Identifier	k		8457222	0					
ANR	8457386	IncDec	++		8457222	1					
ANR	8457387	CompoundStatement		39:55:1028:1028	8457222	3					
ANR	8457388	ExpressionStatement	status = 0	412:8:14364:14374	8457222	0	True				
ANR	8457389	AssignmentExpression	status = 0		8457222	0		=			
ANR	8457390	Identifier	status		8457222	0					
ANR	8457391	PrimaryExpression	0		8457222	1					
ANR	8457392	ExpressionStatement	"gs_strlcpy ( ( char * ) pthnm , ufst_root_dir , sizeof pthnm )"	414:8:14453:14507	8457222	1	True				
ANR	8457393	CallExpression	"gs_strlcpy ( ( char * ) pthnm , ufst_root_dir , sizeof pthnm )"		8457222	0					
ANR	8457394	Callee	gs_strlcpy		8457222	0					
ANR	8457395	Identifier	gs_strlcpy		8457222	0					
ANR	8457396	ArgumentList	( char * ) pthnm		8457222	1					
ANR	8457397	Argument	( char * ) pthnm		8457222	0					
ANR	8457398	CastExpression	( char * ) pthnm		8457222	0					
ANR	8457399	CastTarget	char *		8457222	0					
ANR	8457400	Identifier	pthnm		8457222	1					
ANR	8457401	Argument	ufst_root_dir		8457222	1					
ANR	8457402	Identifier	ufst_root_dir		8457222	0					
ANR	8457403	Argument	sizeof pthnm		8457222	2					
ANR	8457404	SizeofExpression	sizeof pthnm		8457222	0					
ANR	8457405	Sizeof	sizeof		8457222	0					
ANR	8457406	Identifier	pthnm		8457222	1					
ANR	8457407	ForStatement	for ( i = 2 ; fco [ i ] != gp_file_name_list_separator && ( & fco [ i ] ) < fco_lim ; i ++ )		8457222	2					
ANR	8457408	ForInit	i = 2 ;	416:13:14523:14528	8457222	0	True				
ANR	8457409	AssignmentExpression	i = 2		8457222	0		=			
ANR	8457410	Identifier	i		8457222	0					
ANR	8457411	PrimaryExpression	2		8457222	1					
ANR	8457412	Condition	fco [ i ] != gp_file_name_list_separator && ( & fco [ i ] ) < fco_lim	416:20:14530:14589	8457222	1	True				
ANR	8457413	AndExpression	fco [ i ] != gp_file_name_list_separator && ( & fco [ i ] ) < fco_lim		8457222	0		&&			
ANR	8457414	EqualityExpression	fco [ i ] != gp_file_name_list_separator		8457222	0		!=			
ANR	8457415	ArrayIndexing	fco [ i ]		8457222	0					
ANR	8457416	Identifier	fco		8457222	0					
ANR	8457417	Identifier	i		8457222	1					
ANR	8457418	Identifier	gp_file_name_list_separator		8457222	1					
ANR	8457419	RelationalExpression	( & fco [ i ] ) < fco_lim		8457222	1		<			
ANR	8457420	UnaryOperationExpression	& fco [ i ]		8457222	0					
ANR	8457421	UnaryOperator	&		8457222	0					
ANR	8457422	ArrayIndexing	fco [ i ]		8457222	1					
ANR	8457423	Identifier	fco		8457222	0					
ANR	8457424	Identifier	i		8457222	1					
ANR	8457425	Identifier	fco_lim		8457222	1					
ANR	8457426	PostIncDecOperationExpression	i ++	416:82:14592:14594	8457222	2	True				
ANR	8457427	Identifier	i		8457222	0					
ANR	8457428	IncDec	++		8457222	1					
ANR	8457429	ExpressionStatement		416:86:14596:14596	8457222	3	True				
ANR	8457430	ExpressionStatement	"strncat ( pthnm , fco , i )"	418:8:14607:14629	8457222	3	True				
ANR	8457431	CallExpression	"strncat ( pthnm , fco , i )"		8457222	0					
ANR	8457432	Callee	strncat		8457222	0					
ANR	8457433	Identifier	strncat		8457222	0					
ANR	8457434	ArgumentList	pthnm		8457222	1					
ANR	8457435	Argument	pthnm		8457222	0					
ANR	8457436	Identifier	pthnm		8457222	0					
ANR	8457437	Argument	fco		8457222	1					
ANR	8457438	Identifier	fco		8457222	0					
ANR	8457439	Argument	i		8457222	2					
ANR	8457440	Identifier	i		8457222	0					
ANR	8457441	ExpressionStatement	fco += ( i + 1 )	419:8:14639:14653	8457222	4	True				
ANR	8457442	AssignmentExpression	fco += ( i + 1 )		8457222	0		+=			
ANR	8457443	Identifier	fco		8457222	0					
ANR	8457444	AdditiveExpression	i + 1		8457222	1		+			
ANR	8457445	Identifier	i		8457222	0					
ANR	8457446	PrimaryExpression	1		8457222	1					
ANR	8457447	ForStatement	"for ( i = 0 ; status == 0 ; i ++ , key [ 2 ] += 1 )"		8457222	5					
ANR	8457448	ForInit	i = 0 ;	422:13:14714:14719	8457222	0	True				
ANR	8457449	AssignmentExpression	i = 0		8457222	0		=			
ANR	8457450	Identifier	i		8457222	0					
ANR	8457451	PrimaryExpression	0		8457222	1					
ANR	8457452	Condition	status == 0	422:20:14721:14731	8457222	1	True				
ANR	8457453	EqualityExpression	status == 0		8457222	0		==			
ANR	8457454	Identifier	status		8457222	0					
ANR	8457455	PrimaryExpression	0		8457222	1					
ANR	8457456	Expression	"i ++ , key [ 2 ] += 1"	422:33:14734:14749	8457222	2	True				
ANR	8457457	PostIncDecOperationExpression	i ++		8457222	0					
ANR	8457458	Identifier	i		8457222	0					
ANR	8457459	IncDec	++		8457222	1					
ANR	8457460	AssignmentExpression	key [ 2 ] += 1		8457222	1		+=			
ANR	8457461	ArrayIndexing	key [ 2 ]		8457222	0					
ANR	8457462	Identifier	key		8457222	0					
ANR	8457463	PrimaryExpression	2		8457222	1					
ANR	8457464	PrimaryExpression	1		8457222	1					
ANR	8457465	CompoundStatement		51:12:1440:1458	8457222	3					
ANR	8457466	IdentifierDeclStatement	char * pname = NULL ;	423:12:14766:14784	8457222	0	True				
ANR	8457467	IdentifierDecl	* pname = NULL		8457222	0					
ANR	8457468	IdentifierDeclType	char *		8457222	0					
ANR	8457469	Identifier	pname		8457222	1					
ANR	8457470	AssignmentExpression	* pname = NULL		8457222	2		=			
ANR	8457471	Identifier	NULL		8457222	0					
ANR	8457472	Identifier	NULL		8457222	1					
ANR	8457473	IfStatement	if ( ! plfont )		8457222	1					
ANR	8457474	Condition	! plfont	428:16:14924:14930	8457222	0	True				
ANR	8457475	UnaryOperationExpression	! plfont		8457222	0					
ANR	8457476	UnaryOperator	!		8457222	0					
ANR	8457477	Identifier	plfont		8457222	1					
ANR	8457478	CompoundStatement		56:25:1607:1607	8457222	1					
ANR	8457479	ExpressionStatement	"pbfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pl_mt_load_font(gs_font_base)"" )"	430:16:14952:15102	8457222	0	True				
ANR	8457480	AssignmentExpression	"pbfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pl_mt_load_font(gs_font_base)"" )"		8457222	0		=			
ANR	8457481	Identifier	pbfont		8457222	0					
ANR	8457482	CallExpression	"gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pl_mt_load_font(gs_font_base)"" )"		8457222	1					
ANR	8457483	Callee	gs_alloc_struct		8457222	0					
ANR	8457484	Identifier	gs_alloc_struct		8457222	0					
ANR	8457485	ArgumentList	mem		8457222	1					
ANR	8457486	Argument	mem		8457222	0					
ANR	8457487	Identifier	mem		8457222	0					
ANR	8457488	Argument	gs_font_base		8457222	1					
ANR	8457489	Identifier	gs_font_base		8457222	0					
ANR	8457490	Argument	& st_gs_font_base		8457222	2					
ANR	8457491	UnaryOperationExpression	& st_gs_font_base		8457222	0					
ANR	8457492	UnaryOperator	&		8457222	0					
ANR	8457493	Identifier	st_gs_font_base		8457222	1					
ANR	8457494	Argument	"""pl_mt_load_font(gs_font_base)"""		8457222	3					
ANR	8457495	PrimaryExpression	"""pl_mt_load_font(gs_font_base)"""		8457222	0					
ANR	8457496	ExpressionStatement	"plfont = pl_alloc_font ( mem , ""pl_mt_load_font(pl_font_t)"" )"	433:16:15120:15177	8457222	1	True				
ANR	8457497	AssignmentExpression	"plfont = pl_alloc_font ( mem , ""pl_mt_load_font(pl_font_t)"" )"		8457222	0		=			
ANR	8457498	Identifier	plfont		8457222	0					
ANR	8457499	CallExpression	"pl_alloc_font ( mem , ""pl_mt_load_font(pl_font_t)"" )"		8457222	1					
ANR	8457500	Callee	pl_alloc_font		8457222	0					
ANR	8457501	Identifier	pl_alloc_font		8457222	0					
ANR	8457502	ArgumentList	mem		8457222	1					
ANR	8457503	Argument	mem		8457222	0					
ANR	8457504	Identifier	mem		8457222	0					
ANR	8457505	Argument	"""pl_mt_load_font(pl_font_t)"""		8457222	1					
ANR	8457506	PrimaryExpression	"""pl_mt_load_font(pl_font_t)"""		8457222	0					
ANR	8457507	IfStatement	if ( ! pbfont || ! plfont )		8457222	2					
ANR	8457508	Condition	! pbfont || ! plfont	434:20:15199:15216	8457222	0	True				
ANR	8457509	OrExpression	! pbfont || ! plfont		8457222	0		||			
ANR	8457510	UnaryOperationExpression	! pbfont		8457222	0					
ANR	8457511	UnaryOperator	!		8457222	0					
ANR	8457512	Identifier	pbfont		8457222	1					
ANR	8457513	UnaryOperationExpression	! plfont		8457222	1					
ANR	8457514	UnaryOperator	!		8457222	0					
ANR	8457515	Identifier	plfont		8457222	1					
ANR	8457516	CompoundStatement		62:40:1893:1893	8457222	1					
ANR	8457517	ExpressionStatement	"gs_free_object ( mem , plfont , ""pl_mt_load_font(pl_font_t)"" )"	435:20:15241:15298	8457222	0	True				
ANR	8457518	CallExpression	"gs_free_object ( mem , plfont , ""pl_mt_load_font(pl_font_t)"" )"		8457222	0					
ANR	8457519	Callee	gs_free_object		8457222	0					
ANR	8457520	Identifier	gs_free_object		8457222	0					
ANR	8457521	ArgumentList	mem		8457222	1					
ANR	8457522	Argument	mem		8457222	0					
ANR	8457523	Identifier	mem		8457222	0					
ANR	8457524	Argument	plfont		8457222	1					
ANR	8457525	Identifier	plfont		8457222	0					
ANR	8457526	Argument	"""pl_mt_load_font(pl_font_t)"""		8457222	2					
ANR	8457527	PrimaryExpression	"""pl_mt_load_font(pl_font_t)"""		8457222	0					
ANR	8457528	ExpressionStatement	"gs_free_object ( mem , pfont , ""pl_mt_load_font(gs_font_base)"" )"	436:20:15320:15414	8457222	1	True				
ANR	8457529	CallExpression	"gs_free_object ( mem , pfont , ""pl_mt_load_font(gs_font_base)"" )"		8457222	0					
ANR	8457530	Callee	gs_free_object		8457222	0					
ANR	8457531	Identifier	gs_free_object		8457222	0					
ANR	8457532	ArgumentList	mem		8457222	1					
ANR	8457533	Argument	mem		8457222	0					
ANR	8457534	Identifier	mem		8457222	0					
ANR	8457535	Argument	pfont		8457222	1					
ANR	8457536	Identifier	pfont		8457222	0					
ANR	8457537	Argument	"""pl_mt_load_font(gs_font_base)"""		8457222	2					
ANR	8457538	PrimaryExpression	"""pl_mt_load_font(gs_font_base)"""		8457222	0					
ANR	8457539	ExpressionStatement	"dmprintf1 ( mem , ""VM error for built-in font %d"" , i )"	438:20:15436:15486	8457222	2	True				
ANR	8457540	CallExpression	"dmprintf1 ( mem , ""VM error for built-in font %d"" , i )"		8457222	0					
ANR	8457541	Callee	dmprintf1		8457222	0					
ANR	8457542	Identifier	dmprintf1		8457222	0					
ANR	8457543	ArgumentList	mem		8457222	1					
ANR	8457544	Argument	mem		8457222	0					
ANR	8457545	Identifier	mem		8457222	0					
ANR	8457546	Argument	"""VM error for built-in font %d"""		8457222	1					
ANR	8457547	PrimaryExpression	"""VM error for built-in font %d"""		8457222	0					
ANR	8457548	Argument	i		8457222	2					
ANR	8457549	Identifier	i		8457222	0					
ANR	8457550	ContinueStatement	continue ;	439:20:15508:15516	8457222	3	True				
ANR	8457551	ExpressionStatement	pfont = ( gs_font * ) pbfont	442:12:15562:15588	8457222	2	True				
ANR	8457552	AssignmentExpression	pfont = ( gs_font * ) pbfont		8457222	0		=			
ANR	8457553	Identifier	pfont		8457222	0					
ANR	8457554	CastExpression	( gs_font * ) pbfont		8457222	1					
ANR	8457555	CastTarget	gs_font *		8457222	0					
ANR	8457556	Identifier	pbfont		8457222	1					
ANR	8457557	ExpressionStatement	"status = pl_fill_in_mt_font ( pbfont , plfont , i , pthnm , pdir , mem , i )"	444:12:15603:15686	8457222	3	True				
ANR	8457558	AssignmentExpression	"status = pl_fill_in_mt_font ( pbfont , plfont , i , pthnm , pdir , mem , i )"		8457222	0		=			
ANR	8457559	Identifier	status		8457222	0					
ANR	8457560	CallExpression	"pl_fill_in_mt_font ( pbfont , plfont , i , pthnm , pdir , mem , i )"		8457222	1					
ANR	8457561	Callee	pl_fill_in_mt_font		8457222	0					
ANR	8457562	Identifier	pl_fill_in_mt_font		8457222	0					
ANR	8457563	ArgumentList	pbfont		8457222	1					
ANR	8457564	Argument	pbfont		8457222	0					
ANR	8457565	Identifier	pbfont		8457222	0					
ANR	8457566	Argument	plfont		8457222	1					
ANR	8457567	Identifier	plfont		8457222	0					
ANR	8457568	Argument	i		8457222	2					
ANR	8457569	Identifier	i		8457222	0					
ANR	8457570	Argument	pthnm		8457222	3					
ANR	8457571	Identifier	pthnm		8457222	0					
ANR	8457572	Argument	pdir		8457222	4					
ANR	8457573	Identifier	pdir		8457222	0					
ANR	8457574	Argument	mem		8457222	5					
ANR	8457575	Identifier	mem		8457222	0					
ANR	8457576	Argument	i		8457222	6					
ANR	8457577	Identifier	i		8457222	0					
ANR	8457578	IfStatement	if ( status < 0 )		8457222	4					
ANR	8457579	Condition	status < 0	446:16:15704:15713	8457222	0	True				
ANR	8457580	RelationalExpression	status < 0		8457222	0		<			
ANR	8457581	Identifier	status		8457222	0					
ANR	8457582	PrimaryExpression	0		8457222	1					
ANR	8457583	CompoundStatement		74:28:2390:2390	8457222	1					
ANR	8457584	ExpressionStatement	"dmprintf2 ( mem , ""Error %d for built-in font %d"" , status , i )"	447:16:15734:15792	8457222	0	True				
ANR	8457585	CallExpression	"dmprintf2 ( mem , ""Error %d for built-in font %d"" , status , i )"		8457222	0					
ANR	8457586	Callee	dmprintf2		8457222	0					
ANR	8457587	Identifier	dmprintf2		8457222	0					
ANR	8457588	ArgumentList	mem		8457222	1					
ANR	8457589	Argument	mem		8457222	0					
ANR	8457590	Identifier	mem		8457222	0					
ANR	8457591	Argument	"""Error %d for built-in font %d"""		8457222	1					
ANR	8457592	PrimaryExpression	"""Error %d for built-in font %d"""		8457222	0					
ANR	8457593	Argument	status		8457222	2					
ANR	8457594	Identifier	status		8457222	0					
ANR	8457595	Argument	i		8457222	3					
ANR	8457596	Identifier	i		8457222	0					
ANR	8457597	ContinueStatement	continue ;	448:16:15810:15818	8457222	1	True				
ANR	8457598	ExpressionStatement	"status = pl_fapi_passfont ( plfont , i , ( char * ) ""UFST"" , pthnm , NULL , 0 )"	451:12:15847:15931	8457222	5	True				
ANR	8457599	AssignmentExpression	"status = pl_fapi_passfont ( plfont , i , ( char * ) ""UFST"" , pthnm , NULL , 0 )"		8457222	0		=			
ANR	8457600	Identifier	status		8457222	0					
ANR	8457601	CallExpression	"pl_fapi_passfont ( plfont , i , ( char * ) ""UFST"" , pthnm , NULL , 0 )"		8457222	1					
ANR	8457602	Callee	pl_fapi_passfont		8457222	0					
ANR	8457603	Identifier	pl_fapi_passfont		8457222	0					
ANR	8457604	ArgumentList	plfont		8457222	1					
ANR	8457605	Argument	plfont		8457222	0					
ANR	8457606	Identifier	plfont		8457222	0					
ANR	8457607	Argument	i		8457222	1					
ANR	8457608	Identifier	i		8457222	0					
ANR	8457609	Argument	"( char * ) ""UFST"""		8457222	2					
ANR	8457610	CastExpression	"( char * ) ""UFST"""		8457222	0					
ANR	8457611	CastTarget	char *		8457222	0					
ANR	8457612	PrimaryExpression	"""UFST"""		8457222	1					
ANR	8457613	Argument	pthnm		8457222	3					
ANR	8457614	Identifier	pthnm		8457222	0					
ANR	8457615	Argument	NULL		8457222	4					
ANR	8457616	Identifier	NULL		8457222	0					
ANR	8457617	Argument	0		8457222	5					
ANR	8457618	PrimaryExpression	0		8457222	0					
ANR	8457619	IfStatement	if ( status != 0 )		8457222	6					
ANR	8457620	Condition	status != 0	454:16:15950:15960	8457222	0	True				
ANR	8457621	EqualityExpression	status != 0		8457222	0		!=			
ANR	8457622	Identifier	status		8457222	0					
ANR	8457623	PrimaryExpression	0		8457222	1					
ANR	8457624	CompoundStatement		82:29:2637:2637	8457222	1					
ANR	8457625	ExpressionStatement	"dmprintf1 ( mem , ""CGIFfco_Access error %d\\n"" , status )"	456:16:15994:16045	8457222	0	True				
ANR	8457626	CallExpression	"dmprintf1 ( mem , ""CGIFfco_Access error %d\\n"" , status )"		8457222	0					
ANR	8457627	Callee	dmprintf1		8457222	0					
ANR	8457628	Identifier	dmprintf1		8457222	0					
ANR	8457629	ArgumentList	mem		8457222	1					
ANR	8457630	Argument	mem		8457222	0					
ANR	8457631	Identifier	mem		8457222	0					
ANR	8457632	Argument	"""CGIFfco_Access error %d\\n"""		8457222	1					
ANR	8457633	PrimaryExpression	"""CGIFfco_Access error %d\\n"""		8457222	0					
ANR	8457634	Argument	status		8457222	2					
ANR	8457635	Identifier	status		8457222	0					
ANR	8457636	ElseStatement	else		8457222	0					
ANR	8457637	CompoundStatement		95:16:3117:3129	8457222	0					
ANR	8457638	IdentifierDeclStatement	int font_number = 0 ;	459:16:16091:16110	8457222	0	True				
ANR	8457639	IdentifierDecl	font_number = 0		8457222	0					
ANR	8457640	IdentifierDeclType	int		8457222	0					
ANR	8457641	Identifier	font_number		8457222	1					
ANR	8457642	AssignmentExpression	font_number = 0		8457222	2		=			
ANR	8457643	Identifier	font_number		8457222	0					
ANR	8457644	PrimaryExpression	0		8457222	1					
ANR	8457645	IdentifierDeclStatement	"char * symname = ( char * ) ""SymbPS"" ;"	462:16:16269:16301	8457222	1	True				
ANR	8457646	IdentifierDecl	"* symname = ( char * ) ""SymbPS"""		8457222	0					
ANR	8457647	IdentifierDeclType	char *		8457222	0					
ANR	8457648	Identifier	symname		8457222	1					
ANR	8457649	AssignmentExpression	"* symname = ( char * ) ""SymbPS"""		8457222	2		=			
ANR	8457650	Identifier	symname		8457222	0					
ANR	8457651	CastExpression	"( char * ) ""SymbPS"""		8457222	1					
ANR	8457652	CastTarget	char *		8457222	0					
ANR	8457653	PrimaryExpression	"""SymbPS"""		8457222	1					
ANR	8457654	IdentifierDeclStatement	int j ;	463:16:16319:16324	8457222	2	True				
ANR	8457655	IdentifierDecl	j		8457222	0					
ANR	8457656	IdentifierDeclType	int		8457222	0					
ANR	8457657	Identifier	j		8457222	1					
ANR	8457658	IdentifierDeclStatement	uint spaceBand ;	464:16:16342:16356	8457222	3	True				
ANR	8457659	IdentifierDecl	spaceBand		8457222	0					
ANR	8457660	IdentifierDeclType	uint		8457222	0					
ANR	8457661	Identifier	spaceBand		8457222	1					
ANR	8457662	IdentifierDeclStatement	uint scaleFactor ;	465:16:16374:16390	8457222	4	True				
ANR	8457663	IdentifierDecl	scaleFactor		8457222	0					
ANR	8457664	IdentifierDeclType	uint		8457222	0					
ANR	8457665	Identifier	scaleFactor		8457222	1					
ANR	8457666	IdentifierDeclStatement	bool used = false ;	466:16:16408:16425	8457222	5	True				
ANR	8457667	IdentifierDecl	used = false		8457222	0					
ANR	8457668	IdentifierDeclType	bool		8457222	0					
ANR	8457669	Identifier	used		8457222	1					
ANR	8457670	AssignmentExpression	used = false		8457222	2		=			
ANR	8457671	Identifier	false		8457222	0					
ANR	8457672	Identifier	false		8457222	1					
ANR	8457673	IdentifierDeclStatement	int code = 0 ;	467:16:16443:16455	8457222	6	True				
ANR	8457674	IdentifierDecl	code = 0		8457222	0					
ANR	8457675	IdentifierDeclType	int		8457222	0					
ANR	8457676	Identifier	code		8457222	1					
ANR	8457677	AssignmentExpression	code = 0		8457222	2		=			
ANR	8457678	Identifier	code		8457222	0					
ANR	8457679	PrimaryExpression	0		8457222	1					
ANR	8457680	ExpressionStatement	"( void ) pl_fapi_get_mtype_font_name ( pfont , NULL , & bSize )"	473:16:16671:16725	8457222	7	True				
ANR	8457681	CastExpression	"( void ) pl_fapi_get_mtype_font_name ( pfont , NULL , & bSize )"		8457222	0					
ANR	8457682	CastTarget	void		8457222	0					
ANR	8457683	CallExpression	"pl_fapi_get_mtype_font_name ( pfont , NULL , & bSize )"		8457222	1					
ANR	8457684	Callee	pl_fapi_get_mtype_font_name		8457222	0					
ANR	8457685	Identifier	pl_fapi_get_mtype_font_name		8457222	0					
ANR	8457686	ArgumentList	pfont		8457222	1					
ANR	8457687	Argument	pfont		8457222	0					
ANR	8457688	Identifier	pfont		8457222	0					
ANR	8457689	Argument	NULL		8457222	1					
ANR	8457690	Identifier	NULL		8457222	0					
ANR	8457691	Argument	& bSize		8457222	2					
ANR	8457692	UnaryOperationExpression	& bSize		8457222	0					
ANR	8457693	UnaryOperator	&		8457222	0					
ANR	8457694	Identifier	bSize		8457222	1					
ANR	8457695	ExpressionStatement	"pname = ( char * ) gs_alloc_bytes ( mem , bSize , ""pl_mt_load_font: font name buffer"" )"	475:16:16744:16886	8457222	8	True				
ANR	8457696	AssignmentExpression	"pname = ( char * ) gs_alloc_bytes ( mem , bSize , ""pl_mt_load_font: font name buffer"" )"		8457222	0		=			
ANR	8457697	Identifier	pname		8457222	0					
ANR	8457698	CastExpression	"( char * ) gs_alloc_bytes ( mem , bSize , ""pl_mt_load_font: font name buffer"" )"		8457222	1					
ANR	8457699	CastTarget	char *		8457222	0					
ANR	8457700	CallExpression	"gs_alloc_bytes ( mem , bSize , ""pl_mt_load_font: font name buffer"" )"		8457222	1					
ANR	8457701	Callee	gs_alloc_bytes		8457222	0					
ANR	8457702	Identifier	gs_alloc_bytes		8457222	0					
ANR	8457703	ArgumentList	mem		8457222	1					
ANR	8457704	Argument	mem		8457222	0					
ANR	8457705	Identifier	mem		8457222	0					
ANR	8457706	Argument	bSize		8457222	1					
ANR	8457707	Identifier	bSize		8457222	0					
ANR	8457708	Argument	"""pl_mt_load_font: font name buffer"""		8457222	2					
ANR	8457709	PrimaryExpression	"""pl_mt_load_font: font name buffer"""		8457222	0					
ANR	8457710	IfStatement	if ( ! pname )		8457222	9					
ANR	8457711	Condition	! pname	478:20:16908:16913	8457222	0	True				
ANR	8457712	UnaryOperationExpression	! pname		8457222	0					
ANR	8457713	UnaryOperator	!		8457222	0					
ANR	8457714	Identifier	pname		8457222	1					
ANR	8457715	CompoundStatement		106:28:3590:3590	8457222	1					
ANR	8457716	ExpressionStatement	"dmprintf1 ( mem , ""VM Error for built-in font %d"" , i )"	479:20:16938:16988	8457222	0	True				
ANR	8457717	CallExpression	"dmprintf1 ( mem , ""VM Error for built-in font %d"" , i )"		8457222	0					
ANR	8457718	Callee	dmprintf1		8457222	0					
ANR	8457719	Identifier	dmprintf1		8457222	0					
ANR	8457720	ArgumentList	mem		8457222	1					
ANR	8457721	Argument	mem		8457222	0					
ANR	8457722	Identifier	mem		8457222	0					
ANR	8457723	Argument	"""VM Error for built-in font %d"""		8457222	1					
ANR	8457724	PrimaryExpression	"""VM Error for built-in font %d"""		8457222	0					
ANR	8457725	Argument	i		8457222	2					
ANR	8457726	Identifier	i		8457222	0					
ANR	8457727	ContinueStatement	continue ;	480:20:17010:17018	8457222	1	True				
ANR	8457728	ExpressionStatement	"( void ) pl_fapi_get_mtype_font_name ( pfont , ( byte * ) pname , & bSize )"	483:16:17055:17169	8457222	10	True				
ANR	8457729	CastExpression	"( void ) pl_fapi_get_mtype_font_name ( pfont , ( byte * ) pname , & bSize )"		8457222	0					
ANR	8457730	CastTarget	void		8457222	0					
ANR	8457731	CallExpression	"pl_fapi_get_mtype_font_name ( pfont , ( byte * ) pname , & bSize )"		8457222	1					
ANR	8457732	Callee	pl_fapi_get_mtype_font_name		8457222	0					
ANR	8457733	Identifier	pl_fapi_get_mtype_font_name		8457222	0					
ANR	8457734	ArgumentList	pfont		8457222	1					
ANR	8457735	Argument	pfont		8457222	0					
ANR	8457736	Identifier	pfont		8457222	0					
ANR	8457737	Argument	( byte * ) pname		8457222	1					
ANR	8457738	CastExpression	( byte * ) pname		8457222	0					
ANR	8457739	CastTarget	byte *		8457222	0					
ANR	8457740	Identifier	pname		8457222	1					
ANR	8457741	Argument	& bSize		8457222	2					
ANR	8457742	UnaryOperationExpression	& bSize		8457222	0					
ANR	8457743	UnaryOperator	&		8457222	0					
ANR	8457744	Identifier	bSize		8457222	1					
ANR	8457745	ExpressionStatement	"( void ) pl_fapi_get_mtype_font_number ( pfont , & font_number )"	486:16:17188:17244	8457222	11	True				
ANR	8457746	CastExpression	"( void ) pl_fapi_get_mtype_font_number ( pfont , & font_number )"		8457222	0					
ANR	8457747	CastTarget	void		8457222	0					
ANR	8457748	CallExpression	"pl_fapi_get_mtype_font_number ( pfont , & font_number )"		8457222	1					
ANR	8457749	Callee	pl_fapi_get_mtype_font_number		8457222	0					
ANR	8457750	Identifier	pl_fapi_get_mtype_font_number		8457222	0					
ANR	8457751	ArgumentList	pfont		8457222	1					
ANR	8457752	Argument	pfont		8457222	0					
ANR	8457753	Identifier	pfont		8457222	0					
ANR	8457754	Argument	& font_number		8457222	1					
ANR	8457755	UnaryOperationExpression	& font_number		8457222	0					
ANR	8457756	UnaryOperator	&		8457222	0					
ANR	8457757	Identifier	font_number		8457222	1					
ANR	8457758	ExpressionStatement	"( void ) pl_fapi_get_mtype_font_spaceBand ( pfont , & spaceBand )"	487:16:17262:17319	8457222	12	True				
ANR	8457759	CastExpression	"( void ) pl_fapi_get_mtype_font_spaceBand ( pfont , & spaceBand )"		8457222	0					
ANR	8457760	CastTarget	void		8457222	0					
ANR	8457761	CallExpression	"pl_fapi_get_mtype_font_spaceBand ( pfont , & spaceBand )"		8457222	1					
ANR	8457762	Callee	pl_fapi_get_mtype_font_spaceBand		8457222	0					
ANR	8457763	Identifier	pl_fapi_get_mtype_font_spaceBand		8457222	0					
ANR	8457764	ArgumentList	pfont		8457222	1					
ANR	8457765	Argument	pfont		8457222	0					
ANR	8457766	Identifier	pfont		8457222	0					
ANR	8457767	Argument	& spaceBand		8457222	1					
ANR	8457768	UnaryOperationExpression	& spaceBand		8457222	0					
ANR	8457769	UnaryOperator	&		8457222	0					
ANR	8457770	Identifier	spaceBand		8457222	1					
ANR	8457771	ExpressionStatement	"( void ) pl_fapi_get_mtype_font_scaleFactor ( pfont , & scaleFactor )"	488:16:17337:17398	8457222	13	True				
ANR	8457772	CastExpression	"( void ) pl_fapi_get_mtype_font_scaleFactor ( pfont , & scaleFactor )"		8457222	0					
ANR	8457773	CastTarget	void		8457222	0					
ANR	8457774	CallExpression	"pl_fapi_get_mtype_font_scaleFactor ( pfont , & scaleFactor )"		8457222	1					
ANR	8457775	Callee	pl_fapi_get_mtype_font_scaleFactor		8457222	0					
ANR	8457776	Identifier	pl_fapi_get_mtype_font_scaleFactor		8457222	0					
ANR	8457777	ArgumentList	pfont		8457222	1					
ANR	8457778	Argument	pfont		8457222	0					
ANR	8457779	Identifier	pfont		8457222	0					
ANR	8457780	Argument	& scaleFactor		8457222	1					
ANR	8457781	UnaryOperationExpression	& scaleFactor		8457222	0					
ANR	8457782	UnaryOperator	&		8457222	0					
ANR	8457783	Identifier	scaleFactor		8457222	1					
ANR	8457784	IfStatement	if ( font_number == 24463 )		8457222	14					
ANR	8457785	Condition	font_number == 24463	490:20:17421:17440	8457222	0	True				
ANR	8457786	EqualityExpression	font_number == 24463		8457222	0		==			
ANR	8457787	Identifier	font_number		8457222	0					
ANR	8457788	PrimaryExpression	24463		8457222	1					
ANR	8457789	CompoundStatement		118:42:4117:4117	8457222	1					
ANR	8457790	ExpressionStatement	"gs_free_object ( mem , pname , ""pl_mt_load_font: font name buffer"" )"	491:20:17465:17563	8457222	0	True				
ANR	8457791	CallExpression	"gs_free_object ( mem , pname , ""pl_mt_load_font: font name buffer"" )"		8457222	0					
ANR	8457792	Callee	gs_free_object		8457222	0					
ANR	8457793	Identifier	gs_free_object		8457222	0					
ANR	8457794	ArgumentList	mem		8457222	1					
ANR	8457795	Argument	mem		8457222	0					
ANR	8457796	Identifier	mem		8457222	0					
ANR	8457797	Argument	pname		8457222	1					
ANR	8457798	Identifier	pname		8457222	0					
ANR	8457799	Argument	"""pl_mt_load_font: font name buffer"""		8457222	2					
ANR	8457800	PrimaryExpression	"""pl_mt_load_font: font name buffer"""		8457222	0					
ANR	8457801	ExpressionStatement	pname = symname	493:20:17585:17600	8457222	1	True				
ANR	8457802	AssignmentExpression	pname = symname		8457222	0		=			
ANR	8457803	Identifier	pname		8457222	0					
ANR	8457804	Identifier	symname		8457222	1					
ANR	8457805	ForStatement	for ( j = 0 ; strlen ( resident_table [ j ] . full_font_name ) ; j ++ )		8457222	15					
ANR	8457806	ForInit	j = 0 ;	496:21:17642:17647	8457222	0	True				
ANR	8457807	AssignmentExpression	j = 0		8457222	0		=			
ANR	8457808	Identifier	j		8457222	0					
ANR	8457809	PrimaryExpression	0		8457222	1					
ANR	8457810	Condition	strlen ( resident_table [ j ] . full_font_name )	496:28:17649:17688	8457222	1	True				
ANR	8457811	CallExpression	strlen ( resident_table [ j ] . full_font_name )		8457222	0					
ANR	8457812	Callee	strlen		8457222	0					
ANR	8457813	Identifier	strlen		8457222	0					
ANR	8457814	ArgumentList	resident_table [ j ] . full_font_name		8457222	1					
ANR	8457815	Argument	resident_table [ j ] . full_font_name		8457222	0					
ANR	8457816	MemberAccess	resident_table [ j ] . full_font_name		8457222	0					
ANR	8457817	ArrayIndexing	resident_table [ j ]		8457222	0					
ANR	8457818	Identifier	resident_table		8457222	0					
ANR	8457819	Identifier	j		8457222	1					
ANR	8457820	Identifier	full_font_name		8457222	1					
ANR	8457821	PostIncDecOperationExpression	j ++	496:70:17691:17693	8457222	2	True				
ANR	8457822	Identifier	j		8457222	0					
ANR	8457823	IncDec	++		8457222	1					
ANR	8457824	CompoundStatement		124:75:4370:4370	8457222	3					
ANR	8457825	IfStatement	"if ( strcmp ( ( char * ) resident_table [ j ] . full_font_name , ( char * ) pname ) != 0 )"		8457222	0					
ANR	8457826	Condition	"strcmp ( ( char * ) resident_table [ j ] . full_font_name , ( char * ) pname ) != 0"	497:24:17722:17839	8457222	0	True				
ANR	8457827	EqualityExpression	"strcmp ( ( char * ) resident_table [ j ] . full_font_name , ( char * ) pname ) != 0"		8457222	0		!=			
ANR	8457828	CallExpression	"strcmp ( ( char * ) resident_table [ j ] . full_font_name , ( char * ) pname )"		8457222	0					
ANR	8457829	Callee	strcmp		8457222	0					
ANR	8457830	Identifier	strcmp		8457222	0					
ANR	8457831	ArgumentList	( char * ) resident_table [ j ] . full_font_name		8457222	1					
ANR	8457832	Argument	( char * ) resident_table [ j ] . full_font_name		8457222	0					
ANR	8457833	CastExpression	( char * ) resident_table [ j ] . full_font_name		8457222	0					
ANR	8457834	CastTarget	char *		8457222	0					
ANR	8457835	MemberAccess	resident_table [ j ] . full_font_name		8457222	1					
ANR	8457836	ArrayIndexing	resident_table [ j ]		8457222	0					
ANR	8457837	Identifier	resident_table		8457222	0					
ANR	8457838	Identifier	j		8457222	1					
ANR	8457839	Identifier	full_font_name		8457222	1					
ANR	8457840	Argument	( char * ) pname		8457222	1					
ANR	8457841	CastExpression	( char * ) pname		8457222	0					
ANR	8457842	CastTarget	char *		8457222	0					
ANR	8457843	Identifier	pname		8457222	1					
ANR	8457844	PrimaryExpression	0		8457222	1					
ANR	8457845	ContinueStatement	continue ;	500:24:17866:17874	8457222	1	True				
ANR	8457846	IfStatement	if ( gs_debug_c ( '=' ) )		8457222	1					
ANR	8457847	Condition	gs_debug_c ( '=' )	503:24:17914:17928	8457222	0	True				
ANR	8457848	CallExpression	gs_debug_c ( '=' )		8457222	0					
ANR	8457849	Callee	gs_debug_c		8457222	0					
ANR	8457850	Identifier	gs_debug_c		8457222	0					
ANR	8457851	ArgumentList	'='		8457222	1					
ANR	8457852	Argument	'='		8457222	0					
ANR	8457853	PrimaryExpression	'='		8457222	0					
ANR	8457854	ExpressionStatement	"dmprintf2 ( mem , ""Loading %s from fco %s\\n"" , pname , pthnm )"	504:24:17955:18045	8457222	1	True				
ANR	8457855	CallExpression	"dmprintf2 ( mem , ""Loading %s from fco %s\\n"" , pname , pthnm )"		8457222	0					
ANR	8457856	Callee	dmprintf2		8457222	0					
ANR	8457857	Identifier	dmprintf2		8457222	0					
ANR	8457858	ArgumentList	mem		8457222	1					
ANR	8457859	Argument	mem		8457222	0					
ANR	8457860	Identifier	mem		8457222	0					
ANR	8457861	Argument	"""Loading %s from fco %s\\n"""		8457222	1					
ANR	8457862	PrimaryExpression	"""Loading %s from fco %s\\n"""		8457222	0					
ANR	8457863	Argument	pname		8457222	2					
ANR	8457864	Identifier	pname		8457222	0					
ANR	8457865	Argument	pthnm		8457222	3					
ANR	8457866	Identifier	pthnm		8457222	0					
ANR	8457867	IfStatement	if ( scaleFactor == 8782 )		8457222	2					
ANR	8457868	Condition	scaleFactor == 8782	510:24:18202:18220	8457222	0	True				
ANR	8457869	EqualityExpression	scaleFactor == 8782		8457222	0		==			
ANR	8457870	Identifier	scaleFactor		8457222	0					
ANR	8457871	PrimaryExpression	8782		8457222	1					
ANR	8457872	CompoundStatement		138:45:4897:4897	8457222	1					
ANR	8457873	ExpressionStatement	plfont -> pts_per_inch = 72.307f	511:24:18249:18279	8457222	0	True				
ANR	8457874	AssignmentExpression	plfont -> pts_per_inch = 72.307f		8457222	0		=			
ANR	8457875	PtrMemberAccess	plfont -> pts_per_inch		8457222	0					
ANR	8457876	Identifier	plfont		8457222	0					
ANR	8457877	Identifier	pts_per_inch		8457222	1					
ANR	8457878	PrimaryExpression	72.307f		8457222	1					
ANR	8457879	ExpressionStatement	plfont -> font_type = resident_table [ j ] . font_type	514:20:18324:18371	8457222	3	True				
ANR	8457880	AssignmentExpression	plfont -> font_type = resident_table [ j ] . font_type		8457222	0		=			
ANR	8457881	PtrMemberAccess	plfont -> font_type		8457222	0					
ANR	8457882	Identifier	plfont		8457222	0					
ANR	8457883	Identifier	font_type		8457222	1					
ANR	8457884	MemberAccess	resident_table [ j ] . font_type		8457222	1					
ANR	8457885	ArrayIndexing	resident_table [ j ]		8457222	0					
ANR	8457886	Identifier	resident_table		8457222	0					
ANR	8457887	Identifier	j		8457222	1					
ANR	8457888	Identifier	font_type		8457222	1					
ANR	8457889	ExpressionStatement	plfont -> storage = storage	515:20:18393:18418	8457222	4	True				
ANR	8457890	AssignmentExpression	plfont -> storage = storage		8457222	0		=			
ANR	8457891	PtrMemberAccess	plfont -> storage		8457222	0					
ANR	8457892	Identifier	plfont		8457222	0					
ANR	8457893	Identifier	storage		8457222	1					
ANR	8457894	Identifier	storage		8457222	1					
ANR	8457895	ExpressionStatement	plfont -> data_are_permanent = false	516:20:18440:18474	8457222	5	True				
ANR	8457896	AssignmentExpression	plfont -> data_are_permanent = false		8457222	0		=			
ANR	8457897	PtrMemberAccess	plfont -> data_are_permanent		8457222	0					
ANR	8457898	Identifier	plfont		8457222	0					
ANR	8457899	Identifier	data_are_permanent		8457222	1					
ANR	8457900	Identifier	false		8457222	1					
ANR	8457901	ExpressionStatement	plfont -> params = resident_table [ j ] . params	517:20:18496:18537	8457222	6	True				
ANR	8457902	AssignmentExpression	plfont -> params = resident_table [ j ] . params		8457222	0		=			
ANR	8457903	PtrMemberAccess	plfont -> params		8457222	0					
ANR	8457904	Identifier	plfont		8457222	0					
ANR	8457905	Identifier	params		8457222	1					
ANR	8457906	MemberAccess	resident_table [ j ] . params		8457222	1					
ANR	8457907	ArrayIndexing	resident_table [ j ]		8457222	0					
ANR	8457908	Identifier	resident_table		8457222	0					
ANR	8457909	Identifier	j		8457222	1					
ANR	8457910	Identifier	params		8457222	1					
ANR	8457911	ExpressionStatement	"memcpy ( plfont -> character_complement , resident_table [ j ] . character_complement , 8 )"	526:20:18946:19052	8457222	7	True				
ANR	8457912	CallExpression	"memcpy ( plfont -> character_complement , resident_table [ j ] . character_complement , 8 )"		8457222	0					
ANR	8457913	Callee	memcpy		8457222	0					
ANR	8457914	Identifier	memcpy		8457222	0					
ANR	8457915	ArgumentList	plfont -> character_complement		8457222	1					
ANR	8457916	Argument	plfont -> character_complement		8457222	0					
ANR	8457917	PtrMemberAccess	plfont -> character_complement		8457222	0					
ANR	8457918	Identifier	plfont		8457222	0					
ANR	8457919	Identifier	character_complement		8457222	1					
ANR	8457920	Argument	resident_table [ j ] . character_complement		8457222	1					
ANR	8457921	MemberAccess	resident_table [ j ] . character_complement		8457222	0					
ANR	8457922	ArrayIndexing	resident_table [ j ]		8457222	0					
ANR	8457923	Identifier	resident_table		8457222	0					
ANR	8457924	Identifier	j		8457222	1					
ANR	8457925	Identifier	character_complement		8457222	1					
ANR	8457926	Argument	8		8457222	2					
ANR	8457927	PrimaryExpression	8		8457222	0					
ANR	8457928	ExpressionStatement	"status = gs_definefont ( pdir , ( gs_font * ) pfont )"	529:20:19075:19122	8457222	8	True				
ANR	8457929	AssignmentExpression	"status = gs_definefont ( pdir , ( gs_font * ) pfont )"		8457222	0		=			
ANR	8457930	Identifier	status		8457222	0					
ANR	8457931	CallExpression	"gs_definefont ( pdir , ( gs_font * ) pfont )"		8457222	1					
ANR	8457932	Callee	gs_definefont		8457222	0					
ANR	8457933	Identifier	gs_definefont		8457222	0					
ANR	8457934	ArgumentList	pdir		8457222	1					
ANR	8457935	Argument	pdir		8457222	0					
ANR	8457936	Identifier	pdir		8457222	0					
ANR	8457937	Argument	( gs_font * ) pfont		8457222	1					
ANR	8457938	CastExpression	( gs_font * ) pfont		8457222	0					
ANR	8457939	CastTarget	gs_font *		8457222	0					
ANR	8457940	Identifier	pfont		8457222	1					
ANR	8457941	IfStatement	if ( status < 0 )		8457222	9					
ANR	8457942	Condition	status < 0	530:24:19148:19157	8457222	0	True				
ANR	8457943	RelationalExpression	status < 0		8457222	0		<			
ANR	8457944	Identifier	status		8457222	0					
ANR	8457945	PrimaryExpression	0		8457222	1					
ANR	8457946	CompoundStatement		158:36:5834:5834	8457222	1					
ANR	8457947	ExpressionStatement	status = 0	531:24:19186:19196	8457222	0	True				
ANR	8457948	AssignmentExpression	status = 0		8457222	0		=			
ANR	8457949	Identifier	status		8457222	0					
ANR	8457950	PrimaryExpression	0		8457222	1					
ANR	8457951	ContinueStatement	continue ;	532:24:19222:19230	8457222	1	True				
ANR	8457952	ExpressionStatement	"status = pl_fapi_passfont ( plfont , i , ( char * ) ""UFST"" , pthnm , NULL , 0 )"	534:20:19274:19407	8457222	10	True				
ANR	8457953	AssignmentExpression	"status = pl_fapi_passfont ( plfont , i , ( char * ) ""UFST"" , pthnm , NULL , 0 )"		8457222	0		=			
ANR	8457954	Identifier	status		8457222	0					
ANR	8457955	CallExpression	"pl_fapi_passfont ( plfont , i , ( char * ) ""UFST"" , pthnm , NULL , 0 )"		8457222	1					
ANR	8457956	Callee	pl_fapi_passfont		8457222	0					
ANR	8457957	Identifier	pl_fapi_passfont		8457222	0					
ANR	8457958	ArgumentList	plfont		8457222	1					
ANR	8457959	Argument	plfont		8457222	0					
ANR	8457960	Identifier	plfont		8457222	0					
ANR	8457961	Argument	i		8457222	1					
ANR	8457962	Identifier	i		8457222	0					
ANR	8457963	Argument	"( char * ) ""UFST"""		8457222	2					
ANR	8457964	CastExpression	"( char * ) ""UFST"""		8457222	0					
ANR	8457965	CastTarget	char *		8457222	0					
ANR	8457966	PrimaryExpression	"""UFST"""		8457222	1					
ANR	8457967	Argument	pthnm		8457222	3					
ANR	8457968	Identifier	pthnm		8457222	0					
ANR	8457969	Argument	NULL		8457222	4					
ANR	8457970	Identifier	NULL		8457222	0					
ANR	8457971	Argument	0		8457222	5					
ANR	8457972	PrimaryExpression	0		8457222	0					
ANR	8457973	IfStatement	if ( status < 0 )		8457222	11					
ANR	8457974	Condition	status < 0	537:24:19433:19442	8457222	0	True				
ANR	8457975	RelationalExpression	status < 0		8457222	0		<			
ANR	8457976	Identifier	status		8457222	0					
ANR	8457977	PrimaryExpression	0		8457222	1					
ANR	8457978	CompoundStatement		165:36:6119:6119	8457222	1					
ANR	8457979	ExpressionStatement	status = 0	538:24:19471:19481	8457222	0	True				
ANR	8457980	AssignmentExpression	status = 0		8457222	0		=			
ANR	8457981	Identifier	status		8457222	0					
ANR	8457982	PrimaryExpression	0		8457222	1					
ANR	8457983	ContinueStatement	continue ;	539:24:19507:19515	8457222	1	True				
ANR	8457984	IfStatement	if ( use_unicode_names_for_keys )		8457222	12					
ANR	8457985	Condition	use_unicode_names_for_keys	541:24:19563:19588	8457222	0	True				
ANR	8457986	Identifier	use_unicode_names_for_keys		8457222	0					
ANR	8457987	ExpressionStatement	"code = pl_dict_put ( pfontdict , ( const byte * ) resident_table [ j ] . unicode_fontname , 32 , plfont )"	542:24:19615:19779	8457222	1	True				
ANR	8457988	AssignmentExpression	"code = pl_dict_put ( pfontdict , ( const byte * ) resident_table [ j ] . unicode_fontname , 32 , plfont )"		8457222	0		=			
ANR	8457989	Identifier	code		8457222	0					
ANR	8457990	CallExpression	"pl_dict_put ( pfontdict , ( const byte * ) resident_table [ j ] . unicode_fontname , 32 , plfont )"		8457222	1					
ANR	8457991	Callee	pl_dict_put		8457222	0					
ANR	8457992	Identifier	pl_dict_put		8457222	0					
ANR	8457993	ArgumentList	pfontdict		8457222	1					
ANR	8457994	Argument	pfontdict		8457222	0					
ANR	8457995	Identifier	pfontdict		8457222	0					
ANR	8457996	Argument	( const byte * ) resident_table [ j ] . unicode_fontname		8457222	1					
ANR	8457997	CastExpression	( const byte * ) resident_table [ j ] . unicode_fontname		8457222	0					
ANR	8457998	CastTarget	const byte *		8457222	0					
ANR	8457999	MemberAccess	resident_table [ j ] . unicode_fontname		8457222	1					
ANR	8458000	ArrayIndexing	resident_table [ j ]		8457222	0					
ANR	8458001	Identifier	resident_table		8457222	0					
ANR	8458002	Identifier	j		8457222	1					
ANR	8458003	Identifier	unicode_fontname		8457222	1					
ANR	8458004	Argument	32		8457222	2					
ANR	8458005	PrimaryExpression	32		8457222	0					
ANR	8458006	Argument	plfont		8457222	3					
ANR	8458007	Identifier	plfont		8457222	0					
ANR	8458008	ElseStatement	else		8457222	0					
ANR	8458009	CompoundStatement		173:25:6480:6480	8457222	0					
ANR	8458010	ExpressionStatement	key [ 2 ] = ( byte ) j	546:24:19832:19849	8457222	0	True				
ANR	8458011	AssignmentExpression	key [ 2 ] = ( byte ) j		8457222	0		=			
ANR	8458012	ArrayIndexing	key [ 2 ]		8457222	0					
ANR	8458013	Identifier	key		8457222	0					
ANR	8458014	PrimaryExpression	2		8457222	1					
ANR	8458015	CastExpression	( byte ) j		8457222	1					
ANR	8458016	CastTarget	byte		8457222	0					
ANR	8458017	Identifier	j		8457222	1					
ANR	8458018	ExpressionStatement	key [ 0 ] = key [ 1 ] = 0	547:24:19875:19894	8457222	1	True				
ANR	8458019	AssignmentExpression	key [ 0 ] = key [ 1 ] = 0		8457222	0		=			
ANR	8458020	ArrayIndexing	key [ 0 ]		8457222	0					
ANR	8458021	Identifier	key		8457222	0					
ANR	8458022	PrimaryExpression	0		8457222	1					
ANR	8458023	AssignmentExpression	key [ 1 ] = 0		8457222	1		=			
ANR	8458024	ArrayIndexing	key [ 1 ]		8457222	0					
ANR	8458025	Identifier	key		8457222	0					
ANR	8458026	PrimaryExpression	1		8457222	1					
ANR	8458027	PrimaryExpression	0		8457222	1					
ANR	8458028	ExpressionStatement	"code = pl_dict_put ( pfontdict , key , sizeof ( key ) , plfont )"	548:24:19920:19975	8457222	2	True				
ANR	8458029	AssignmentExpression	"code = pl_dict_put ( pfontdict , key , sizeof ( key ) , plfont )"		8457222	0		=			
ANR	8458030	Identifier	code		8457222	0					
ANR	8458031	CallExpression	"pl_dict_put ( pfontdict , key , sizeof ( key ) , plfont )"		8457222	1					
ANR	8458032	Callee	pl_dict_put		8457222	0					
ANR	8458033	Identifier	pl_dict_put		8457222	0					
ANR	8458034	ArgumentList	pfontdict		8457222	1					
ANR	8458035	Argument	pfontdict		8457222	0					
ANR	8458036	Identifier	pfontdict		8457222	0					
ANR	8458037	Argument	key		8457222	1					
ANR	8458038	Identifier	key		8457222	0					
ANR	8458039	Argument	sizeof ( key )		8457222	2					
ANR	8458040	SizeofExpression	sizeof ( key )		8457222	0					
ANR	8458041	Sizeof	sizeof		8457222	0					
ANR	8458042	SizeofOperand	key		8457222	1					
ANR	8458043	Argument	plfont		8457222	3					
ANR	8458044	Identifier	plfont		8457222	0					
ANR	8458045	IfStatement	if ( code < 0 )		8457222	13					
ANR	8458046	Condition	code < 0	550:24:20023:20030	8457222	0	True				
ANR	8458047	RelationalExpression	code < 0		8457222	0		<			
ANR	8458048	Identifier	code		8457222	0					
ANR	8458049	PrimaryExpression	0		8457222	1					
ANR	8458050	ReturnStatement	return code ;	551:24:20057:20068	8457222	1	True				
ANR	8458051	Identifier	code		8457222	0					
ANR	8458052	ExpressionStatement	used = true	552:20:20090:20101	8457222	14	True				
ANR	8458053	AssignmentExpression	used = true		8457222	0		=			
ANR	8458054	Identifier	used		8457222	0					
ANR	8458055	Identifier	true		8457222	1					
ANR	8458056	IfStatement	if ( used )		8457222	16					
ANR	8458057	Condition	used	555:20:20214:20217	8457222	0	True				
ANR	8458058	Identifier	used		8457222	0					
ANR	8458059	CompoundStatement		183:26:6894:6894	8457222	1					
ANR	8458060	ExpressionStatement	plfont = NULL	556:20:20242:20255	8457222	0	True				
ANR	8458061	AssignmentExpression	plfont = NULL		8457222	0		=			
ANR	8458062	Identifier	plfont		8457222	0					
ANR	8458063	Identifier	NULL		8457222	1					
ANR	8458064	ExpressionStatement	pfont = NULL	557:20:20277:20289	8457222	1	True				
ANR	8458065	AssignmentExpression	pfont = NULL		8457222	0		=			
ANR	8458066	Identifier	pfont		8457222	0					
ANR	8458067	Identifier	NULL		8457222	1					
ANR	8458068	IfStatement	if ( pname != symname )		8457222	17					
ANR	8458069	Condition	pname != symname	559:20:20329:20344	8457222	0	True				
ANR	8458070	EqualityExpression	pname != symname		8457222	0		!=			
ANR	8458071	Identifier	pname		8457222	0					
ANR	8458072	Identifier	symname		8457222	1					
ANR	8458073	ExpressionStatement	"gs_free_object ( mem , pname , ""pl_mt_load_font: font name buffer"" )"	560:20:20367:20465	8457222	1	True				
ANR	8458074	CallExpression	"gs_free_object ( mem , pname , ""pl_mt_load_font: font name buffer"" )"		8457222	0					
ANR	8458075	Callee	gs_free_object		8457222	0					
ANR	8458076	Identifier	gs_free_object		8457222	0					
ANR	8458077	ArgumentList	mem		8457222	1					
ANR	8458078	Argument	mem		8457222	0					
ANR	8458079	Identifier	mem		8457222	0					
ANR	8458080	Argument	pname		8457222	1					
ANR	8458081	Identifier	pname		8457222	0					
ANR	8458082	Argument	"""pl_mt_load_font: font name buffer"""		8457222	2					
ANR	8458083	PrimaryExpression	"""pl_mt_load_font: font name buffer"""		8457222	0					
ANR	8458084	ExpressionStatement	pname = NULL	562:16:20483:20495	8457222	18	True				
ANR	8458085	AssignmentExpression	pname = NULL		8457222	0		=			
ANR	8458086	Identifier	pname		8457222	0					
ANR	8458087	Identifier	NULL		8457222	1					
ANR	8458088	ExpressionStatement	"gs_free_object ( mem , plfont , ""pl_mt_load_font(pl_font_t)"" )"	567:4:20587:20644	8457222	30	True				
ANR	8458089	CallExpression	"gs_free_object ( mem , plfont , ""pl_mt_load_font(pl_font_t)"" )"		8457222	0					
ANR	8458090	Callee	gs_free_object		8457222	0					
ANR	8458091	Identifier	gs_free_object		8457222	0					
ANR	8458092	ArgumentList	mem		8457222	1					
ANR	8458093	Argument	mem		8457222	0					
ANR	8458094	Identifier	mem		8457222	0					
ANR	8458095	Argument	plfont		8457222	1					
ANR	8458096	Identifier	plfont		8457222	0					
ANR	8458097	Argument	"""pl_mt_load_font(pl_font_t)"""		8457222	2					
ANR	8458098	PrimaryExpression	"""pl_mt_load_font(pl_font_t)"""		8457222	0					
ANR	8458099	ExpressionStatement	"gs_free_object ( mem , pfont , ""pl_mt_load_font(gs_font_base)"" )"	568:4:20650:20709	8457222	31	True				
ANR	8458100	CallExpression	"gs_free_object ( mem , pfont , ""pl_mt_load_font(gs_font_base)"" )"		8457222	0					
ANR	8458101	Callee	gs_free_object		8457222	0					
ANR	8458102	Identifier	gs_free_object		8457222	0					
ANR	8458103	ArgumentList	mem		8457222	1					
ANR	8458104	Argument	mem		8457222	0					
ANR	8458105	Identifier	mem		8457222	0					
ANR	8458106	Argument	pfont		8457222	1					
ANR	8458107	Identifier	pfont		8457222	0					
ANR	8458108	Argument	"""pl_mt_load_font(gs_font_base)"""		8457222	2					
ANR	8458109	PrimaryExpression	"""pl_mt_load_font(gs_font_base)"""		8457222	0					
ANR	8458110	ExpressionStatement	"( void ) pl_load_ufst_lineprinter ( mem , pfontdict , pdir , storage , use_unicode_names_for_keys )"	571:4:20773:20897	8457222	32	True				
ANR	8458111	CastExpression	"( void ) pl_load_ufst_lineprinter ( mem , pfontdict , pdir , storage , use_unicode_names_for_keys )"		8457222	0					
ANR	8458112	CastTarget	void		8457222	0					
ANR	8458113	CallExpression	"pl_load_ufst_lineprinter ( mem , pfontdict , pdir , storage , use_unicode_names_for_keys )"		8457222	1					
ANR	8458114	Callee	pl_load_ufst_lineprinter		8457222	0					
ANR	8458115	Identifier	pl_load_ufst_lineprinter		8457222	0					
ANR	8458116	ArgumentList	mem		8457222	1					
ANR	8458117	Argument	mem		8457222	0					
ANR	8458118	Identifier	mem		8457222	0					
ANR	8458119	Argument	pfontdict		8457222	1					
ANR	8458120	Identifier	pfontdict		8457222	0					
ANR	8458121	Argument	pdir		8457222	2					
ANR	8458122	Identifier	pdir		8457222	0					
ANR	8458123	Argument	storage		8457222	3					
ANR	8458124	Identifier	storage		8457222	0					
ANR	8458125	Argument	use_unicode_names_for_keys		8457222	4					
ANR	8458126	Identifier	use_unicode_names_for_keys		8457222	0					
ANR	8458127	IfStatement	if ( gs_debug_c ( '=' ) )		8457222	33					
ANR	8458128	Condition	gs_debug_c ( '=' )	575:8:20921:20935	8457222	0	True				
ANR	8458129	CallExpression	gs_debug_c ( '=' )		8457222	0					
ANR	8458130	Callee	gs_debug_c		8457222	0					
ANR	8458131	Identifier	gs_debug_c		8457222	0					
ANR	8458132	ArgumentList	'='		8457222	1					
ANR	8458133	Argument	'='		8457222	0					
ANR	8458134	PrimaryExpression	'='		8457222	0					
ANR	8458135	ExpressionStatement	"check_resident_ufst_fonts ( pfontdict , use_unicode_names_for_keys , mem )"	576:8:20946:21015	8457222	1	True				
ANR	8458136	CallExpression	"check_resident_ufst_fonts ( pfontdict , use_unicode_names_for_keys , mem )"		8457222	0					
ANR	8458137	Callee	check_resident_ufst_fonts		8457222	0					
ANR	8458138	Identifier	check_resident_ufst_fonts		8457222	0					
ANR	8458139	ArgumentList	pfontdict		8457222	1					
ANR	8458140	Argument	pfontdict		8457222	0					
ANR	8458141	Identifier	pfontdict		8457222	0					
ANR	8458142	Argument	use_unicode_names_for_keys		8457222	1					
ANR	8458143	Identifier	use_unicode_names_for_keys		8457222	0					
ANR	8458144	Argument	mem		8457222	2					
ANR	8458145	Identifier	mem		8457222	0					
ANR	8458146	IfStatement	if ( status == 0 || status == - 10 )		8457222	34					
ANR	8458147	Condition	status == 0 || status == - 10	579:8:21033:21060	8457222	0	True				
ANR	8458148	OrExpression	status == 0 || status == - 10		8457222	0		||			
ANR	8458149	EqualityExpression	status == 0		8457222	0		==			
ANR	8458150	Identifier	status		8457222	0					
ANR	8458151	PrimaryExpression	0		8457222	1					
ANR	8458152	EqualityExpression	status == - 10		8457222	1		==			
ANR	8458153	Identifier	status		8457222	0					
ANR	8458154	UnaryOperationExpression	- 10		8457222	1					
ANR	8458155	UnaryOperator	-		8457222	0					
ANR	8458156	PrimaryExpression	10		8457222	1					
ANR	8458157	ReturnStatement	return ( 1 ) ;	580:8:21071:21081	8457222	1	True				
ANR	8458158	PrimaryExpression	1		8457222	0					
ANR	8458159	ReturnStatement	return ( 0 ) ;	582:4:21088:21098	8457222	35	True				
ANR	8458160	PrimaryExpression	0		8457222	0					
ANR	8458161	Statement	undef	583:1:21101:21105	8457222	36	True				
ANR	8458162	Statement	fontnames	583:7:21107:21115	8457222	37	True				
ANR	8458163	ReturnType	static int		8457222	1					
ANR	8458164	Identifier	pl_load_built_in_mtype_fonts		8457222	2					
ANR	8458165	ParameterList	"const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage , bool use_unicode_names_for_keys"		8457222	3					
ANR	8458166	Parameter	const char * pathname	370:29:13137:13156	8457222	0	True				
ANR	8458167	ParameterType	const char *		8457222	0					
ANR	8458168	Identifier	pathname		8457222	1					
ANR	8458169	Parameter	gs_memory_t * mem	370:51:13159:13175	8457222	1	True				
ANR	8458170	ParameterType	gs_memory_t *		8457222	0					
ANR	8458171	Identifier	mem		8457222	1					
ANR	8458172	Parameter	pl_dict_t * pfontdict	371:29:13207:13227	8457222	2	True				
ANR	8458173	ParameterType	pl_dict_t *		8457222	0					
ANR	8458174	Identifier	pfontdict		8457222	1					
ANR	8458175	Parameter	gs_font_dir * pdir	371:52:13230:13247	8457222	3	True				
ANR	8458176	ParameterType	gs_font_dir *		8457222	0					
ANR	8458177	Identifier	pdir		8457222	1					
ANR	8458178	Parameter	int storage	372:29:13279:13289	8457222	4	True				
ANR	8458179	ParameterType	int		8457222	0					
ANR	8458180	Identifier	storage		8457222	1					
ANR	8458181	Parameter	bool use_unicode_names_for_keys	372:42:13292:13322	8457222	5	True				
ANR	8458182	ParameterType	bool		8457222	0					
ANR	8458183	Identifier	use_unicode_names_for_keys		8457222	1					
ANR	8458184	CFGEntryNode	ENTRY		8457222		True				
ANR	8458185	CFGExitNode	EXIT		8457222		True				
ANR	8458186	Symbol	pl_fapi_passfont		8457222						
ANR	8458187	Symbol	* fco		8457222						
ANR	8458188	Symbol	resident_table [ j ] . full_font_name		8457222						
ANR	8458189	Symbol	pl_fapi_ufst_get_font_dir		8457222						
ANR	8458190	Symbol	* key		8457222						
ANR	8458191	Symbol	font_number		8457222						
ANR	8458192	Symbol	* resident_table		8457222						
ANR	8458193	Symbol	plfont		8457222						
ANR	8458194	Symbol	gs_font_base		8457222						
ANR	8458195	Symbol	used		8457222						
ANR	8458196	Symbol	plfont -> data_are_permanent		8457222						
ANR	8458197	Symbol	resident_table [ j ] . character_complement		8457222						
ANR	8458198	Symbol	bSize		8457222						
ANR	8458199	Symbol	gs_definefont		8457222						
ANR	8458200	Symbol	strlen		8457222						
ANR	8458201	Symbol	pl_fapi_ufst_get_fco_list		8457222						
ANR	8458202	Symbol	& st_gs_font_base		8457222						
ANR	8458203	Symbol	gs_debug_c		8457222						
ANR	8458204	Symbol	plfont -> font_type		8457222						
ANR	8458205	Symbol	resident_table		8457222						
ANR	8458206	Symbol	strcmp		8457222						
ANR	8458207	Symbol	NULL		8457222						
ANR	8458208	Symbol	plfont -> storage		8457222						
ANR	8458209	Symbol	pname		8457222						
ANR	8458210	Symbol	pdir		8457222						
ANR	8458211	Symbol	plfont -> character_complement		8457222						
ANR	8458212	Symbol	pathname		8457222						
ANR	8458213	Symbol	pl_fapi_ufst_available		8457222						
ANR	8458214	Symbol	resident_table [ j ] . font_type		8457222						
ANR	8458215	Symbol	pfontdict		8457222						
ANR	8458216	Symbol	ufst_root_dir		8457222						
ANR	8458217	Symbol	true		8457222						
ANR	8458218	Symbol	& scaleFactor		8457222						
ANR	8458219	Symbol	pl_dict_put		8457222						
ANR	8458220	Symbol	pl_alloc_font		8457222						
ANR	8458221	Symbol	status		8457222						
ANR	8458222	Symbol	pthnm		8457222						
ANR	8458223	Symbol	code		8457222						
ANR	8458224	Symbol	gs_alloc_struct		8457222						
ANR	8458225	Symbol	spaceBand		8457222						
ANR	8458226	Symbol	symname		8457222						
ANR	8458227	Symbol	storage		8457222						
ANR	8458228	Symbol	plfont -> pts_per_inch		8457222						
ANR	8458229	Symbol	fco		8457222						
ANR	8458230	Symbol	mem		8457222						
ANR	8458231	Symbol	pl_fill_in_mt_font		8457222						
ANR	8458232	Symbol	fco_lim		8457222						
ANR	8458233	Symbol	& spaceBand		8457222						
ANR	8458234	Symbol	& bSize		8457222						
ANR	8458235	Symbol	key		8457222						
ANR	8458236	Symbol	pl_dict_length		8457222						
ANR	8458237	Symbol	gs_alloc_bytes		8457222						
ANR	8458238	Symbol	resident_table [ j ] . unicode_fontname		8457222						
ANR	8458239	Symbol	pfont		8457222						
ANR	8458240	Symbol	fco_start		8457222						
ANR	8458241	Symbol	scaleFactor		8457222						
ANR	8458242	Symbol	false		8457222						
ANR	8458243	Symbol	& font_number		8457222						
ANR	8458244	Symbol	i		8457222						
ANR	8458245	Symbol	j		8457222						
ANR	8458246	Symbol	use_unicode_names_for_keys		8457222						
ANR	8458247	Symbol	k		8457222						
ANR	8458248	Symbol	pbfont		8457222						
ANR	8458249	Symbol	* i		8457222						
ANR	8458250	Symbol	* j		8457222						
ANR	8458251	Symbol	resident_table [ j ] . params		8457222						
ANR	8458252	Symbol	plfont -> params		8457222						
ANR	8458253	Symbol	* plfont		8457222						
ANR	8458254	Symbol	gp_file_name_list_separator		8457222						
ANR	8458255	Function	pl_load_built_in_fonts	588:0:21173:29265							
ANR	8458256	FunctionDef	"pl_load_built_in_fonts (const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage , bool use_unicode_names_for_keys)"		8458255	0					
ANR	8458257	CompoundStatement		592:0:21376:29265	8458255	0					
ANR	8458258	Statement	define	593:1:21379:21384	8458255	0	True				
ANR	8458259	Statement	fontnames	593:8:21386:21394	8458255	1	True				
ANR	8458260	Statement	(	593:17:21395:21395	8458255	2	True				
ANR	8458261	Statement	agfascreenfontname	593:18:21396:21413	8458255	3	True				
ANR	8458262	Statement	","	593:36:21414:21414	8458255	4	True				
ANR	8458263	Statement	agfaname	593:38:21416:21423	8458255	5	True				
ANR	8458264	Statement	","	593:46:21424:21424	8458255	6	True				
ANR	8458265	Statement	urwname	593:48:21426:21432	8458255	7	True				
ANR	8458266	Statement	)	593:55:21433:21433	8458255	8	True				
ANR	8458267	Statement	urwname	593:57:21435:21441	8458255	9	True				
ANR	8458268	Statement	include	594:1:21444:21450	8458255	10	True				
ANR	8458269	Statement	"""plftable.h"""	594:9:21452:21463	8458255	11	True				
ANR	8458270	IdentifierDeclStatement	const font_resident_t * residentp ;	595:4:21469:21501	8458255	12	True				
ANR	8458271	IdentifierDecl	* residentp		8458255	0					
ANR	8458272	IdentifierDeclType	const font_resident_t *		8458255	0					
ANR	8458273	Identifier	residentp		8458255	1					
ANR	8458274	IdentifierDeclStatement	byte key [ 3 ] ;	597:4:21568:21579	8458255	13	True				
ANR	8458275	IdentifierDecl	key [ 3 ]		8458255	0					
ANR	8458276	IdentifierDeclType	byte [ 3 ]		8458255	0					
ANR	8458277	Identifier	key		8458255	1					
ANR	8458278	PrimaryExpression	3		8458255	2					
ANR	8458279	IdentifierDeclStatement	char tmp_path_copy [ 1024 ] ;	599:4:21634:21658	8458255	14	True				
ANR	8458280	IdentifierDecl	tmp_path_copy [ 1024 ]		8458255	0					
ANR	8458281	IdentifierDeclType	char [ 1024 ]		8458255	0					
ANR	8458282	Identifier	tmp_path_copy		8458255	1					
ANR	8458283	PrimaryExpression	1024		8458255	2					
ANR	8458284	IdentifierDeclStatement	"char * tmp_pathp , * tplast = NULL ;"	600:4:21664:21695	8458255	15	True				
ANR	8458285	IdentifierDecl	* tmp_pathp		8458255	0					
ANR	8458286	IdentifierDeclType	char *		8458255	0					
ANR	8458287	Identifier	tmp_pathp		8458255	1					
ANR	8458288	IdentifierDecl	* tplast = NULL		8458255	1					
ANR	8458289	IdentifierDeclType	char *		8458255	0					
ANR	8458290	Identifier	tplast		8458255	1					
ANR	8458291	AssignmentExpression	* tplast = NULL		8458255	2		=			
ANR	8458292	Identifier	NULL		8458255	0					
ANR	8458293	Identifier	NULL		8458255	1					
ANR	8458294	IdentifierDeclStatement	bool found ;	601:4:21701:21711	8458255	16	True				
ANR	8458295	IdentifierDecl	found		8458255	0					
ANR	8458296	IdentifierDeclType	bool		8458255	0					
ANR	8458297	Identifier	found		8458255	1					
ANR	8458298	IdentifierDeclStatement	bool found_any = false ;	602:4:21717:21739	8458255	17	True				
ANR	8458299	IdentifierDecl	found_any = false		8458255	0					
ANR	8458300	IdentifierDeclType	bool		8458255	0					
ANR	8458301	Identifier	found_any		8458255	1					
ANR	8458302	AssignmentExpression	found_any = false		8458255	2		=			
ANR	8458303	Identifier	false		8458255	0					
ANR	8458304	Identifier	false		8458255	1					
ANR	8458305	IdentifierDeclStatement	"const char pattern [ ] = ""*"" ;"	603:4:21745:21771	8458255	18	True				
ANR	8458306	IdentifierDecl	"pattern [ ] = ""*"""		8458255	0					
ANR	8458307	IdentifierDeclType	const char [ ]		8458255	0					
ANR	8458308	Identifier	pattern		8458255	1					
ANR	8458309	AssignmentExpression	"pattern [ ] = ""*"""		8458255	2		=			
ANR	8458310	Identifier	pattern		8458255	0					
ANR	8458311	PrimaryExpression	"""*"""		8458255	1					
ANR	8458312	IdentifierDeclStatement	int code = 0 ;	604:4:21777:21789	8458255	19	True				
ANR	8458313	IdentifierDecl	code = 0		8458255	0					
ANR	8458314	IdentifierDeclType	int		8458255	0					
ANR	8458315	Identifier	code		8458255	1					
ANR	8458316	AssignmentExpression	code = 0		8458255	2		=			
ANR	8458317	Identifier	code		8458255	0					
ANR	8458318	PrimaryExpression	0		8458255	1					
ANR	8458319	ExpressionStatement	( void ) pl_built_in_resident_font_table_count	606:4:21796:21839	8458255	20	True				
ANR	8458320	CastExpression	( void ) pl_built_in_resident_font_table_count		8458255	0					
ANR	8458321	CastTarget	void		8458255	0					
ANR	8458322	Identifier	pl_built_in_resident_font_table_count		8458255	1					
ANR	8458323	IfStatement	"if ( ( code = pl_load_built_in_mtype_fonts ( pathname , mem , pfontdict , pdir , storage , use_unicode_names_for_keys ) ) )"		8458255	21					
ANR	8458324	Condition	"code = pl_load_built_in_mtype_fonts ( pathname , mem , pfontdict , pdir , storage , use_unicode_names_for_keys )"	608:8:21850:22002	8458255	0	True				
ANR	8458325	AssignmentExpression	"code = pl_load_built_in_mtype_fonts ( pathname , mem , pfontdict , pdir , storage , use_unicode_names_for_keys )"		8458255	0		=			
ANR	8458326	Identifier	code		8458255	0					
ANR	8458327	CallExpression	"pl_load_built_in_mtype_fonts ( pathname , mem , pfontdict , pdir , storage , use_unicode_names_for_keys )"		8458255	1					
ANR	8458328	Callee	pl_load_built_in_mtype_fonts		8458255	0					
ANR	8458329	Identifier	pl_load_built_in_mtype_fonts		8458255	0					
ANR	8458330	ArgumentList	pathname		8458255	1					
ANR	8458331	Argument	pathname		8458255	0					
ANR	8458332	Identifier	pathname		8458255	0					
ANR	8458333	Argument	mem		8458255	1					
ANR	8458334	Identifier	mem		8458255	0					
ANR	8458335	Argument	pfontdict		8458255	2					
ANR	8458336	Identifier	pfontdict		8458255	0					
ANR	8458337	Argument	pdir		8458255	3					
ANR	8458338	Identifier	pdir		8458255	0					
ANR	8458339	Argument	storage		8458255	4					
ANR	8458340	Identifier	storage		8458255	0					
ANR	8458341	Argument	use_unicode_names_for_keys		8458255	5					
ANR	8458342	Identifier	use_unicode_names_for_keys		8458255	0					
ANR	8458343	CompoundStatement		19:68:628:628	8458255	1					
ANR	8458344	ReturnStatement	return ( code ) ;	611:8:22015:22028	8458255	0	True				
ANR	8458345	Identifier	code		8458255	0					
ANR	8458346	IfStatement	"if ( pl_dict_length ( pfontdict , true ) > 0 )"		8458255	22					
ANR	8458347	Condition	"pl_dict_length ( pfontdict , true ) > 0"	614:8:22086:22120	8458255	0	True				
ANR	8458348	RelationalExpression	"pl_dict_length ( pfontdict , true ) > 0"		8458255	0		>			
ANR	8458349	CallExpression	"pl_dict_length ( pfontdict , true )"		8458255	0					
ANR	8458350	Callee	pl_dict_length		8458255	0					
ANR	8458351	Identifier	pl_dict_length		8458255	0					
ANR	8458352	ArgumentList	pfontdict		8458255	1					
ANR	8458353	Argument	pfontdict		8458255	0					
ANR	8458354	Identifier	pfontdict		8458255	0					
ANR	8458355	Argument	true		8458255	1					
ANR	8458356	Identifier	true		8458255	0					
ANR	8458357	PrimaryExpression	0		8458255	1					
ANR	8458358	CompoundStatement		23:45:746:746	8458255	1					
ANR	8458359	ReturnStatement	return 1 ;	615:8:22133:22141	8458255	0	True				
ANR	8458360	PrimaryExpression	1		8458255	0					
ANR	8458361	IfStatement	if ( pathname == NULL )		8458255	23					
ANR	8458362	Condition	pathname == NULL	618:8:22158:22173	8458255	0	True				
ANR	8458363	EqualityExpression	pathname == NULL		8458255	0		==			
ANR	8458364	Identifier	pathname		8458255	0					
ANR	8458365	Identifier	NULL		8458255	1					
ANR	8458366	CompoundStatement		27:26:799:799	8458255	1					
ANR	8458367	ReturnStatement	return 0 ;	620:8:22217:22225	8458255	0	True				
ANR	8458368	PrimaryExpression	0		8458255	0					
ANR	8458369	ExpressionStatement	"strcpy ( tmp_path_copy , pathname )"	625:4:22336:22367	8458255	24	True				
ANR	8458370	CallExpression	"strcpy ( tmp_path_copy , pathname )"		8458255	0					
ANR	8458371	Callee	strcpy		8458255	0					
ANR	8458372	Identifier	strcpy		8458255	0					
ANR	8458373	ArgumentList	tmp_path_copy		8458255	1					
ANR	8458374	Argument	tmp_path_copy		8458255	0					
ANR	8458375	Identifier	tmp_path_copy		8458255	0					
ANR	8458376	Argument	pathname		8458255	1					
ANR	8458377	Identifier	pathname		8458255	0					
ANR	8458378	ForStatement	"for ( tmp_pathp = tmp_path_copy ; ( tmp_pathp = gs_strtok ( tmp_pathp , "";"" , & tplast ) ) != NULL ; tmp_pathp = NULL )"		8458255	25					
ANR	8458379	ForInit	tmp_pathp = tmp_path_copy ;	626:9:22378:22403	8458255	0	True				
ANR	8458380	AssignmentExpression	tmp_pathp = tmp_path_copy		8458255	0		=			
ANR	8458381	Identifier	tmp_pathp		8458255	0					
ANR	8458382	Identifier	tmp_path_copy		8458255	1					
ANR	8458383	Condition	"( tmp_pathp = gs_strtok ( tmp_pathp , "";"" , & tplast ) ) != NULL"	626:36:22405:22460	8458255	1	True				
ANR	8458384	EqualityExpression	"( tmp_pathp = gs_strtok ( tmp_pathp , "";"" , & tplast ) ) != NULL"		8458255	0		!=			
ANR	8458385	AssignmentExpression	"tmp_pathp = gs_strtok ( tmp_pathp , "";"" , & tplast )"		8458255	0		=			
ANR	8458386	Identifier	tmp_pathp		8458255	0					
ANR	8458387	CallExpression	"gs_strtok ( tmp_pathp , "";"" , & tplast )"		8458255	1					
ANR	8458388	Callee	gs_strtok		8458255	0					
ANR	8458389	Identifier	gs_strtok		8458255	0					
ANR	8458390	ArgumentList	tmp_pathp		8458255	1					
ANR	8458391	Argument	tmp_pathp		8458255	0					
ANR	8458392	Identifier	tmp_pathp		8458255	0					
ANR	8458393	Argument	""";"""		8458255	1					
ANR	8458394	PrimaryExpression	""";"""		8458255	0					
ANR	8458395	Argument	& tplast		8458255	2					
ANR	8458396	UnaryOperationExpression	& tplast		8458255	0					
ANR	8458397	UnaryOperator	&		8458255	0					
ANR	8458398	Identifier	tplast		8458255	1					
ANR	8458399	Identifier	NULL		8458255	1					
ANR	8458400	AssignmentExpression	tmp_pathp = NULL	627:9:22472:22487	8458255	2	True	=			
ANR	8458401	Identifier	tmp_pathp		8458255	0					
ANR	8458402	Identifier	NULL		8458255	1					
ANR	8458403	CompoundStatement		43:8:1345:1394	8458255	3					
ANR	8458404	IdentifierDeclStatement	int code ;	628:8:22500:22508	8458255	0	True				
ANR	8458405	IdentifierDecl	code		8458255	0					
ANR	8458406	IdentifierDeclType	int		8458255	0					
ANR	8458407	Identifier	code		8458255	1					
ANR	8458408	IdentifierDeclStatement	file_enum * fe ;	629:8:22518:22531	8458255	1	True				
ANR	8458409	IdentifierDecl	* fe		8458255	0					
ANR	8458410	IdentifierDeclType	file_enum *		8458255	0					
ANR	8458411	Identifier	fe		8458255	1					
ANR	8458412	IdentifierDeclStatement	stream * in = NULL ;	630:8:22541:22558	8458255	2	True				
ANR	8458413	IdentifierDecl	* in = NULL		8458255	0					
ANR	8458414	IdentifierDeclType	stream *		8458255	0					
ANR	8458415	Identifier	in		8458255	1					
ANR	8458416	AssignmentExpression	* in = NULL		8458255	2		=			
ANR	8458417	Identifier	NULL		8458255	0					
ANR	8458418	Identifier	NULL		8458255	1					
ANR	8458419	IdentifierDeclStatement	bool append_separator = false ;	632:8:22608:22637	8458255	3	True				
ANR	8458420	IdentifierDecl	append_separator = false		8458255	0					
ANR	8458421	IdentifierDeclType	bool		8458255	0					
ANR	8458422	Identifier	append_separator		8458255	1					
ANR	8458423	AssignmentExpression	append_separator = false		8458255	2		=			
ANR	8458424	Identifier	false		8458255	0					
ANR	8458425	Identifier	false		8458255	1					
ANR	8458426	IdentifierDeclStatement	int separator_length = strlen ( gp_file_name_directory_separator ( ) ) ;	633:8:22647:22712	8458255	4	True				
ANR	8458427	IdentifierDecl	separator_length = strlen ( gp_file_name_directory_separator ( ) )		8458255	0					
ANR	8458428	IdentifierDeclType	int		8458255	0					
ANR	8458429	Identifier	separator_length		8458255	1					
ANR	8458430	AssignmentExpression	separator_length = strlen ( gp_file_name_directory_separator ( ) )		8458255	2		=			
ANR	8458431	Identifier	separator_length		8458255	0					
ANR	8458432	CallExpression	strlen ( gp_file_name_directory_separator ( ) )		8458255	1					
ANR	8458433	Callee	strlen		8458255	0					
ANR	8458434	Identifier	strlen		8458255	0					
ANR	8458435	ArgumentList	gp_file_name_directory_separator ( )		8458255	1					
ANR	8458436	Argument	gp_file_name_directory_separator ( )		8458255	0					
ANR	8458437	CallExpression	gp_file_name_directory_separator ( )		8458255	0					
ANR	8458438	Callee	gp_file_name_directory_separator		8458255	0					
ANR	8458439	Identifier	gp_file_name_directory_separator		8458255	0					
ANR	8458440	ArgumentList			8458255	1					
ANR	8458441	IdentifierDeclStatement	int offset = strlen ( tmp_pathp ) - separator_length ;	634:8:22722:22771	8458255	5	True				
ANR	8458442	IdentifierDecl	offset = strlen ( tmp_pathp ) - separator_length		8458255	0					
ANR	8458443	IdentifierDeclType	int		8458255	0					
ANR	8458444	Identifier	offset		8458255	1					
ANR	8458445	AssignmentExpression	offset = strlen ( tmp_pathp ) - separator_length		8458255	2		=			
ANR	8458446	Identifier	offset		8458255	0					
ANR	8458447	AdditiveExpression	strlen ( tmp_pathp ) - separator_length		8458255	1		-			
ANR	8458448	CallExpression	strlen ( tmp_pathp )		8458255	0					
ANR	8458449	Callee	strlen		8458255	0					
ANR	8458450	Identifier	strlen		8458255	0					
ANR	8458451	ArgumentList	tmp_pathp		8458255	1					
ANR	8458452	Argument	tmp_pathp		8458255	0					
ANR	8458453	Identifier	tmp_pathp		8458255	0					
ANR	8458454	Identifier	separator_length		8458255	1					
ANR	8458455	IfStatement	"if ( strcmp ( tmp_pathp + offset , gp_file_name_directory_separator ( ) ) != 0 )"		8458255	6					
ANR	8458456	Condition	"strcmp ( tmp_pathp + offset , gp_file_name_directory_separator ( ) ) != 0"	637:12:22858:22936	8458255	0	True				
ANR	8458457	EqualityExpression	"strcmp ( tmp_pathp + offset , gp_file_name_directory_separator ( ) ) != 0"		8458255	0		!=			
ANR	8458458	CallExpression	"strcmp ( tmp_pathp + offset , gp_file_name_directory_separator ( ) )"		8458255	0					
ANR	8458459	Callee	strcmp		8458255	0					
ANR	8458460	Identifier	strcmp		8458255	0					
ANR	8458461	ArgumentList	tmp_pathp + offset		8458255	1					
ANR	8458462	Argument	tmp_pathp + offset		8458255	0					
ANR	8458463	AdditiveExpression	tmp_pathp + offset		8458255	0		+			
ANR	8458464	Identifier	tmp_pathp		8458255	0					
ANR	8458465	Identifier	offset		8458255	1					
ANR	8458466	Argument	gp_file_name_directory_separator ( )		8458255	1					
ANR	8458467	CallExpression	gp_file_name_directory_separator ( )		8458255	0					
ANR	8458468	Callee	gp_file_name_directory_separator		8458255	0					
ANR	8458469	Identifier	gp_file_name_directory_separator		8458255	0					
ANR	8458470	ArgumentList			8458255	1					
ANR	8458471	PrimaryExpression	0		8458255	1					
ANR	8458472	ExpressionStatement	append_separator = true	639:12:22951:22974	8458255	1	True				
ANR	8458473	AssignmentExpression	append_separator = true		8458255	0		=			
ANR	8458474	Identifier	append_separator		8458255	0					
ANR	8458475	Identifier	true		8458255	1					
ANR	8458476	IfStatement	if ( ( strlen ( pattern ) + strlen ( tmp_pathp ) + 1 ) + ( append_separator ? separator_length : 0 ) > sizeof ( tmp_path_copy ) )		8458255	7					
ANR	8458477	Condition	( strlen ( pattern ) + strlen ( tmp_pathp ) + 1 ) + ( append_separator ? separator_length : 0 ) > sizeof ( tmp_path_copy )	642:12:23032:23177	8458255	0	True				
ANR	8458478	RelationalExpression	( strlen ( pattern ) + strlen ( tmp_pathp ) + 1 ) + ( append_separator ? separator_length : 0 ) > sizeof ( tmp_path_copy )		8458255	0		>			
ANR	8458479	AdditiveExpression	( strlen ( pattern ) + strlen ( tmp_pathp ) + 1 ) + ( append_separator ? separator_length : 0 )		8458255	0		+			
ANR	8458480	AdditiveExpression	strlen ( pattern ) + strlen ( tmp_pathp ) + 1		8458255	0		+			
ANR	8458481	CallExpression	strlen ( pattern )		8458255	0					
ANR	8458482	Callee	strlen		8458255	0					
ANR	8458483	Identifier	strlen		8458255	0					
ANR	8458484	ArgumentList	pattern		8458255	1					
ANR	8458485	Argument	pattern		8458255	0					
ANR	8458486	Identifier	pattern		8458255	0					
ANR	8458487	AdditiveExpression	strlen ( tmp_pathp ) + 1		8458255	1		+			
ANR	8458488	CallExpression	strlen ( tmp_pathp )		8458255	0					
ANR	8458489	Callee	strlen		8458255	0					
ANR	8458490	Identifier	strlen		8458255	0					
ANR	8458491	ArgumentList	tmp_pathp		8458255	1					
ANR	8458492	Argument	tmp_pathp		8458255	0					
ANR	8458493	Identifier	tmp_pathp		8458255	0					
ANR	8458494	PrimaryExpression	1		8458255	1					
ANR	8458495	ConditionalExpression	append_separator ? separator_length : 0		8458255	1					
ANR	8458496	Condition	append_separator		8458255	0					
ANR	8458497	Identifier	append_separator		8458255	0					
ANR	8458498	Identifier	separator_length		8458255	1					
ANR	8458499	PrimaryExpression	0		8458255	2					
ANR	8458500	SizeofExpression	sizeof ( tmp_path_copy )		8458255	1					
ANR	8458501	Sizeof	sizeof		8458255	0					
ANR	8458502	SizeofOperand	tmp_path_copy		8458255	1					
ANR	8458503	CompoundStatement		54:35:1803:1803	8458255	1					
ANR	8458504	ExpressionStatement	"dmprintf1 ( mem , ""path name %s too long\\n"" , tmp_pathp )"	646:12:23194:23246	8458255	0	True				
ANR	8458505	CallExpression	"dmprintf1 ( mem , ""path name %s too long\\n"" , tmp_pathp )"		8458255	0					
ANR	8458506	Callee	dmprintf1		8458255	0					
ANR	8458507	Identifier	dmprintf1		8458255	0					
ANR	8458508	ArgumentList	mem		8458255	1					
ANR	8458509	Argument	mem		8458255	0					
ANR	8458510	Identifier	mem		8458255	0					
ANR	8458511	Argument	"""path name %s too long\\n"""		8458255	1					
ANR	8458512	PrimaryExpression	"""path name %s too long\\n"""		8458255	0					
ANR	8458513	Argument	tmp_pathp		8458255	2					
ANR	8458514	Identifier	tmp_pathp		8458255	0					
ANR	8458515	ContinueStatement	continue ;	647:12:23260:23268	8458255	1	True				
ANR	8458516	ExpressionStatement	"memmove ( tmp_path_copy , tmp_pathp , strlen ( tmp_pathp ) + 1 )"	650:8:23289:23345	8458255	8	True				
ANR	8458517	CallExpression	"memmove ( tmp_path_copy , tmp_pathp , strlen ( tmp_pathp ) + 1 )"		8458255	0					
ANR	8458518	Callee	memmove		8458255	0					
ANR	8458519	Identifier	memmove		8458255	0					
ANR	8458520	ArgumentList	tmp_path_copy		8458255	1					
ANR	8458521	Argument	tmp_path_copy		8458255	0					
ANR	8458522	Identifier	tmp_path_copy		8458255	0					
ANR	8458523	Argument	tmp_pathp		8458255	1					
ANR	8458524	Identifier	tmp_pathp		8458255	0					
ANR	8458525	Argument	strlen ( tmp_pathp ) + 1		8458255	2					
ANR	8458526	AdditiveExpression	strlen ( tmp_pathp ) + 1		8458255	0		+			
ANR	8458527	CallExpression	strlen ( tmp_pathp )		8458255	0					
ANR	8458528	Callee	strlen		8458255	0					
ANR	8458529	Identifier	strlen		8458255	0					
ANR	8458530	ArgumentList	tmp_pathp		8458255	1					
ANR	8458531	Argument	tmp_pathp		8458255	0					
ANR	8458532	Identifier	tmp_pathp		8458255	0					
ANR	8458533	PrimaryExpression	1		8458255	1					
ANR	8458534	IfStatement	if ( append_separator == true )		8458255	9					
ANR	8458535	Condition	append_separator == true	652:12:23360:23383	8458255	0	True				
ANR	8458536	EqualityExpression	append_separator == true		8458255	0		==			
ANR	8458537	Identifier	append_separator		8458255	0					
ANR	8458538	Identifier	true		8458255	1					
ANR	8458539	ExpressionStatement	"strcat ( tmp_path_copy , gp_file_name_directory_separator ( ) )"	653:12:23398:23455	8458255	1	True				
ANR	8458540	CallExpression	"strcat ( tmp_path_copy , gp_file_name_directory_separator ( ) )"		8458255	0					
ANR	8458541	Callee	strcat		8458255	0					
ANR	8458542	Identifier	strcat		8458255	0					
ANR	8458543	ArgumentList	tmp_path_copy		8458255	1					
ANR	8458544	Argument	tmp_path_copy		8458255	0					
ANR	8458545	Identifier	tmp_path_copy		8458255	0					
ANR	8458546	Argument	gp_file_name_directory_separator ( )		8458255	1					
ANR	8458547	CallExpression	gp_file_name_directory_separator ( )		8458255	0					
ANR	8458548	Callee	gp_file_name_directory_separator		8458255	0					
ANR	8458549	Identifier	gp_file_name_directory_separator		8458255	0					
ANR	8458550	ArgumentList			8458255	1					
ANR	8458551	ExpressionStatement	"strcat ( tmp_path_copy , pattern )"	656:8:23536:23566	8458255	10	True				
ANR	8458552	CallExpression	"strcat ( tmp_path_copy , pattern )"		8458255	0					
ANR	8458553	Callee	strcat		8458255	0					
ANR	8458554	Identifier	strcat		8458255	0					
ANR	8458555	ArgumentList	tmp_path_copy		8458255	1					
ANR	8458556	Argument	tmp_path_copy		8458255	0					
ANR	8458557	Identifier	tmp_path_copy		8458255	0					
ANR	8458558	Argument	pattern		8458255	1					
ANR	8458559	Identifier	pattern		8458255	0					
ANR	8458560	ExpressionStatement	"fe = gs_enumerate_files_init ( tmp_path_copy , strlen ( tmp_path_copy ) , mem )"	659:8:23631:23739	8458255	11	True				
ANR	8458561	AssignmentExpression	"fe = gs_enumerate_files_init ( tmp_path_copy , strlen ( tmp_path_copy ) , mem )"		8458255	0		=			
ANR	8458562	Identifier	fe		8458255	0					
ANR	8458563	CallExpression	"gs_enumerate_files_init ( tmp_path_copy , strlen ( tmp_path_copy ) , mem )"		8458255	1					
ANR	8458564	Callee	gs_enumerate_files_init		8458255	0					
ANR	8458565	Identifier	gs_enumerate_files_init		8458255	0					
ANR	8458566	ArgumentList	tmp_path_copy		8458255	1					
ANR	8458567	Argument	tmp_path_copy		8458255	0					
ANR	8458568	Identifier	tmp_path_copy		8458255	0					
ANR	8458569	Argument	strlen ( tmp_path_copy )		8458255	1					
ANR	8458570	CallExpression	strlen ( tmp_path_copy )		8458255	0					
ANR	8458571	Callee	strlen		8458255	0					
ANR	8458572	Identifier	strlen		8458255	0					
ANR	8458573	ArgumentList	tmp_path_copy		8458255	1					
ANR	8458574	Argument	tmp_path_copy		8458255	0					
ANR	8458575	Identifier	tmp_path_copy		8458255	0					
ANR	8458576	Argument	mem		8458255	2					
ANR	8458577	Identifier	mem		8458255	0					
ANR	8458578	WhileStatement	"while ( ( code = gs_enumerate_files_next ( fe , tmp_path_copy , sizeof ( tmp_path_copy ) ) ) >= 0 )"		8458255	12					
ANR	8458579	Condition	"( code = gs_enumerate_files_next ( fe , tmp_path_copy , sizeof ( tmp_path_copy ) ) ) >= 0"	663:15:23794:23966	8458255	0	True				
ANR	8458580	RelationalExpression	"( code = gs_enumerate_files_next ( fe , tmp_path_copy , sizeof ( tmp_path_copy ) ) ) >= 0"		8458255	0		>=			
ANR	8458581	AssignmentExpression	"code = gs_enumerate_files_next ( fe , tmp_path_copy , sizeof ( tmp_path_copy ) )"		8458255	0		=			
ANR	8458582	Identifier	code		8458255	0					
ANR	8458583	CallExpression	"gs_enumerate_files_next ( fe , tmp_path_copy , sizeof ( tmp_path_copy ) )"		8458255	1					
ANR	8458584	Callee	gs_enumerate_files_next		8458255	0					
ANR	8458585	Identifier	gs_enumerate_files_next		8458255	0					
ANR	8458586	ArgumentList	fe		8458255	1					
ANR	8458587	Argument	fe		8458255	0					
ANR	8458588	Identifier	fe		8458255	0					
ANR	8458589	Argument	tmp_path_copy		8458255	1					
ANR	8458590	Identifier	tmp_path_copy		8458255	0					
ANR	8458591	Argument	sizeof ( tmp_path_copy )		8458255	2					
ANR	8458592	SizeofExpression	sizeof ( tmp_path_copy )		8458255	0					
ANR	8458593	Sizeof	sizeof		8458255	0					
ANR	8458594	SizeofOperand	tmp_path_copy		8458255	1					
ANR	8458595	PrimaryExpression	0		8458255	1					
ANR	8458596	CompoundStatement		76:12:2637:2654	8458255	1					
ANR	8458597	IdentifierDeclStatement	char buffer [ 1024 ] ;	666:12:23983:24000	8458255	0	True				
ANR	8458598	IdentifierDecl	buffer [ 1024 ]		8458255	0					
ANR	8458599	IdentifierDeclType	char [ 1024 ]		8458255	0					
ANR	8458600	Identifier	buffer		8458255	1					
ANR	8458601	PrimaryExpression	1024		8458255	2					
ANR	8458602	IdentifierDeclStatement	pl_font_t * plfont ;	667:12:24014:24031	8458255	1	True				
ANR	8458603	IdentifierDecl	* plfont		8458255	0					
ANR	8458604	IdentifierDeclType	pl_font_t *		8458255	0					
ANR	8458605	Identifier	plfont		8458255	1					
ANR	8458606	IfStatement	if ( code > sizeof ( tmp_path_copy ) )		8458255	2					
ANR	8458607	Condition	code > sizeof ( tmp_path_copy )	669:16:24050:24077	8458255	0	True				
ANR	8458608	RelationalExpression	code > sizeof ( tmp_path_copy )		8458255	0		>			
ANR	8458609	Identifier	code		8458255	0					
ANR	8458610	SizeofExpression	sizeof ( tmp_path_copy )		8458255	1					
ANR	8458611	Sizeof	sizeof		8458255	0					
ANR	8458612	SizeofOperand	tmp_path_copy		8458255	1					
ANR	8458613	CompoundStatement		78:46:2703:2703	8458255	1					
ANR	8458614	ExpressionStatement	"dmprintf ( mem , ""filename length exceeds file name storage buffer length\\n"" )"	670:16:24098:24197	8458255	0	True				
ANR	8458615	CallExpression	"dmprintf ( mem , ""filename length exceeds file name storage buffer length\\n"" )"		8458255	0					
ANR	8458616	Callee	dmprintf		8458255	0					
ANR	8458617	Identifier	dmprintf		8458255	0					
ANR	8458618	ArgumentList	mem		8458255	1					
ANR	8458619	Argument	mem		8458255	0					
ANR	8458620	Identifier	mem		8458255	0					
ANR	8458621	Argument	"""filename length exceeds file name storage buffer length\\n"""		8458255	1					
ANR	8458622	PrimaryExpression	"""filename length exceeds file name storage buffer length\\n"""		8458255	0					
ANR	8458623	ContinueStatement	continue ;	672:16:24215:24223	8458255	1	True				
ANR	8458624	ExpressionStatement	tmp_path_copy [ code ] = '\\0'	675:12:24295:24321	8458255	3	True				
ANR	8458625	AssignmentExpression	tmp_path_copy [ code ] = '\\0'		8458255	0		=			
ANR	8458626	ArrayIndexing	tmp_path_copy [ code ]		8458255	0					
ANR	8458627	Identifier	tmp_path_copy		8458255	0					
ANR	8458628	Identifier	code		8458255	1					
ANR	8458629	PrimaryExpression	'\\0'		8458255	1					
ANR	8458630	ExpressionStatement	"in = sfopen ( tmp_path_copy , ""r"" , mem )"	677:12:24336:24372	8458255	4	True				
ANR	8458631	AssignmentExpression	"in = sfopen ( tmp_path_copy , ""r"" , mem )"		8458255	0		=			
ANR	8458632	Identifier	in		8458255	0					
ANR	8458633	CallExpression	"sfopen ( tmp_path_copy , ""r"" , mem )"		8458255	1					
ANR	8458634	Callee	sfopen		8458255	0					
ANR	8458635	Identifier	sfopen		8458255	0					
ANR	8458636	ArgumentList	tmp_path_copy		8458255	1					
ANR	8458637	Argument	tmp_path_copy		8458255	0					
ANR	8458638	Identifier	tmp_path_copy		8458255	0					
ANR	8458639	Argument	"""r"""		8458255	1					
ANR	8458640	PrimaryExpression	"""r"""		8458255	0					
ANR	8458641	Argument	mem		8458255	2					
ANR	8458642	Identifier	mem		8458255	0					
ANR	8458643	IfStatement	if ( in == NULL )		8458255	5					
ANR	8458644	Condition	in == NULL	678:16:24390:24399	8458255	0	True				
ANR	8458645	EqualityExpression	in == NULL		8458255	0		==			
ANR	8458646	Identifier	in		8458255	0					
ANR	8458647	Identifier	NULL		8458255	1					
ANR	8458648	CompoundStatement		87:28:3025:3025	8458255	1					
ANR	8458649	ExpressionStatement	"dmprintf1 ( mem , ""cannot open file %s\\n"" , tmp_path_copy )"	679:16:24445:24499	8458255	0	True				
ANR	8458650	CallExpression	"dmprintf1 ( mem , ""cannot open file %s\\n"" , tmp_path_copy )"		8458255	0					
ANR	8458651	Callee	dmprintf1		8458255	0					
ANR	8458652	Identifier	dmprintf1		8458255	0					
ANR	8458653	ArgumentList	mem		8458255	1					
ANR	8458654	Argument	mem		8458255	0					
ANR	8458655	Identifier	mem		8458255	0					
ANR	8458656	Argument	"""cannot open file %s\\n"""		8458255	1					
ANR	8458657	PrimaryExpression	"""cannot open file %s\\n"""		8458255	0					
ANR	8458658	Argument	tmp_path_copy		8458255	2					
ANR	8458659	Identifier	tmp_path_copy		8458255	0					
ANR	8458660	ContinueStatement	continue ;	680:16:24517:24525	8458255	1	True				
ANR	8458661	ExpressionStatement	"code = get_name_from_tt_file ( in , mem , buffer , PSNAME )"	683:12:24554:24607	8458255	6	True				
ANR	8458662	AssignmentExpression	"code = get_name_from_tt_file ( in , mem , buffer , PSNAME )"		8458255	0		=			
ANR	8458663	Identifier	code		8458255	0					
ANR	8458664	CallExpression	"get_name_from_tt_file ( in , mem , buffer , PSNAME )"		8458255	1					
ANR	8458665	Callee	get_name_from_tt_file		8458255	0					
ANR	8458666	Identifier	get_name_from_tt_file		8458255	0					
ANR	8458667	ArgumentList	in		8458255	1					
ANR	8458668	Argument	in		8458255	0					
ANR	8458669	Identifier	in		8458255	0					
ANR	8458670	Argument	mem		8458255	1					
ANR	8458671	Identifier	mem		8458255	0					
ANR	8458672	Argument	buffer		8458255	2					
ANR	8458673	Identifier	buffer		8458255	0					
ANR	8458674	Argument	PSNAME		8458255	3					
ANR	8458675	Identifier	PSNAME		8458255	0					
ANR	8458676	IfStatement	if ( code < 0 )		8458255	7					
ANR	8458677	Condition	code < 0	684:16:24625:24632	8458255	0	True				
ANR	8458678	RelationalExpression	code < 0		8458255	0		<			
ANR	8458679	Identifier	code		8458255	0					
ANR	8458680	PrimaryExpression	0		8458255	1					
ANR	8458681	CompoundStatement		93:26:3258:3258	8458255	1					
ANR	8458682	ExpressionStatement	"dmprintf1 ( mem , ""input output failure on TrueType File %s\\n"" , tmp_path_copy )"	685:16:24653:24754	8458255	0	True				
ANR	8458683	CallExpression	"dmprintf1 ( mem , ""input output failure on TrueType File %s\\n"" , tmp_path_copy )"		8458255	0					
ANR	8458684	Callee	dmprintf1		8458255	0					
ANR	8458685	Identifier	dmprintf1		8458255	0					
ANR	8458686	ArgumentList	mem		8458255	1					
ANR	8458687	Argument	mem		8458255	0					
ANR	8458688	Identifier	mem		8458255	0					
ANR	8458689	Argument	"""input output failure on TrueType File %s\\n"""		8458255	1					
ANR	8458690	PrimaryExpression	"""input output failure on TrueType File %s\\n"""		8458255	0					
ANR	8458691	Argument	tmp_path_copy		8458255	2					
ANR	8458692	Identifier	tmp_path_copy		8458255	0					
ANR	8458693	ExpressionStatement	sfclose ( in )	687:16:24772:24783	8458255	1	True				
ANR	8458694	CallExpression	sfclose ( in )		8458255	0					
ANR	8458695	Callee	sfclose		8458255	0					
ANR	8458696	Identifier	sfclose		8458255	0					
ANR	8458697	ArgumentList	in		8458255	1					
ANR	8458698	Argument	in		8458255	0					
ANR	8458699	Identifier	in		8458255	0					
ANR	8458700	ContinueStatement	continue ;	688:16:24801:24809	8458255	2	True				
ANR	8458701	IfStatement	if ( strlen ( buffer ) == 0 )		8458255	8					
ANR	8458702	Condition	strlen ( buffer ) == 0	691:16:24842:24860	8458255	0	True				
ANR	8458703	EqualityExpression	strlen ( buffer ) == 0		8458255	0		==			
ANR	8458704	CallExpression	strlen ( buffer )		8458255	0					
ANR	8458705	Callee	strlen		8458255	0					
ANR	8458706	Identifier	strlen		8458255	0					
ANR	8458707	ArgumentList	buffer		8458255	1					
ANR	8458708	Argument	buffer		8458255	0					
ANR	8458709	Identifier	buffer		8458255	0					
ANR	8458710	PrimaryExpression	0		8458255	1					
ANR	8458711	CompoundStatement		100:37:3486:3486	8458255	1					
ANR	8458712	ExpressionStatement	"dmprintf1 ( mem , ""could not extract font file name from file %s\\n"" , tmp_path_copy )"	692:16:24881:25013	8458255	0	True				
ANR	8458713	CallExpression	"dmprintf1 ( mem , ""could not extract font file name from file %s\\n"" , tmp_path_copy )"		8458255	0					
ANR	8458714	Callee	dmprintf1		8458255	0					
ANR	8458715	Identifier	dmprintf1		8458255	0					
ANR	8458716	ArgumentList	mem		8458255	1					
ANR	8458717	Argument	mem		8458255	0					
ANR	8458718	Identifier	mem		8458255	0					
ANR	8458719	Argument	"""could not extract font file name from file %s\\n"""		8458255	1					
ANR	8458720	PrimaryExpression	"""could not extract font file name from file %s\\n"""		8458255	0					
ANR	8458721	Argument	tmp_path_copy		8458255	2					
ANR	8458722	Identifier	tmp_path_copy		8458255	0					
ANR	8458723	ExpressionStatement	sfclose ( in )	695:16:25031:25042	8458255	1	True				
ANR	8458724	CallExpression	sfclose ( in )		8458255	0					
ANR	8458725	Callee	sfclose		8458255	0					
ANR	8458726	Identifier	sfclose		8458255	0					
ANR	8458727	ArgumentList	in		8458255	1					
ANR	8458728	Argument	in		8458255	0					
ANR	8458729	Identifier	in		8458255	0					
ANR	8458730	ContinueStatement	continue ;	696:16:25060:25068	8458255	2	True				
ANR	8458731	ExpressionStatement	found = false	700:12:25163:25176	8458255	9	True				
ANR	8458732	AssignmentExpression	found = false		8458255	0		=			
ANR	8458733	Identifier	found		8458255	0					
ANR	8458734	Identifier	false		8458255	1					
ANR	8458735	ForStatement	for ( residentp = resident_table ; strlen ( residentp -> full_font_name ) ; ++ residentp )		8458255	10					
ANR	8458736	ForInit	residentp = resident_table ;	701:17:25195:25221	8458255	0	True				
ANR	8458737	AssignmentExpression	residentp = resident_table		8458255	0		=			
ANR	8458738	Identifier	residentp		8458255	0					
ANR	8458739	Identifier	resident_table		8458255	1					
ANR	8458740	Condition	strlen ( residentp -> full_font_name )	702:17:25240:25272	8458255	1	True				
ANR	8458741	CallExpression	strlen ( residentp -> full_font_name )		8458255	0					
ANR	8458742	Callee	strlen		8458255	0					
ANR	8458743	Identifier	strlen		8458255	0					
ANR	8458744	ArgumentList	residentp -> full_font_name		8458255	1					
ANR	8458745	Argument	residentp -> full_font_name		8458255	0					
ANR	8458746	PtrMemberAccess	residentp -> full_font_name		8458255	0					
ANR	8458747	Identifier	residentp		8458255	0					
ANR	8458748	Identifier	full_font_name		8458255	1					
ANR	8458749	UnaryExpression	++ residentp	702:52:25275:25285	8458255	2	True				
ANR	8458750	IncDec	++		8458255	0					
ANR	8458751	Identifier	residentp		8458255	1					
ANR	8458752	CompoundStatement		111:65:3911:3911	8458255	3					
ANR	8458753	IfStatement	"if ( strcmp ( buffer , residentp -> full_font_name ) != 0 )"		8458255	0					
ANR	8458754	Condition	"strcmp ( buffer , residentp -> full_font_name ) != 0"	703:20:25310:25355	8458255	0	True				
ANR	8458755	EqualityExpression	"strcmp ( buffer , residentp -> full_font_name ) != 0"		8458255	0		!=			
ANR	8458756	CallExpression	"strcmp ( buffer , residentp -> full_font_name )"		8458255	0					
ANR	8458757	Callee	strcmp		8458255	0					
ANR	8458758	Identifier	strcmp		8458255	0					
ANR	8458759	ArgumentList	buffer		8458255	1					
ANR	8458760	Argument	buffer		8458255	0					
ANR	8458761	Identifier	buffer		8458255	0					
ANR	8458762	Argument	residentp -> full_font_name		8458255	1					
ANR	8458763	PtrMemberAccess	residentp -> full_font_name		8458255	0					
ANR	8458764	Identifier	residentp		8458255	0					
ANR	8458765	Identifier	full_font_name		8458255	1					
ANR	8458766	PrimaryExpression	0		8458255	1					
ANR	8458767	ContinueStatement	continue ;	704:20:25378:25386	8458255	1	True				
ANR	8458768	IfStatement	"if ( pl_load_tt_font ( in , pdir , mem , gs_next_ids ( mem , 1 ) , & plfont , buffer ) < 0 )"		8458255	1					
ANR	8458769	Condition	"pl_load_tt_font ( in , pdir , mem , gs_next_ids ( mem , 1 ) , & plfont , buffer ) < 0"	706:20:25500:25643	8458255	0	True				
ANR	8458770	RelationalExpression	"pl_load_tt_font ( in , pdir , mem , gs_next_ids ( mem , 1 ) , & plfont , buffer ) < 0"		8458255	0		<			
ANR	8458771	CallExpression	"pl_load_tt_font ( in , pdir , mem , gs_next_ids ( mem , 1 ) , & plfont , buffer )"		8458255	0					
ANR	8458772	Callee	pl_load_tt_font		8458255	0					
ANR	8458773	Identifier	pl_load_tt_font		8458255	0					
ANR	8458774	ArgumentList	in		8458255	1					
ANR	8458775	Argument	in		8458255	0					
ANR	8458776	Identifier	in		8458255	0					
ANR	8458777	Argument	pdir		8458255	1					
ANR	8458778	Identifier	pdir		8458255	0					
ANR	8458779	Argument	mem		8458255	2					
ANR	8458780	Identifier	mem		8458255	0					
ANR	8458781	Argument	"gs_next_ids ( mem , 1 )"		8458255	3					
ANR	8458782	CallExpression	"gs_next_ids ( mem , 1 )"		8458255	0					
ANR	8458783	Callee	gs_next_ids		8458255	0					
ANR	8458784	Identifier	gs_next_ids		8458255	0					
ANR	8458785	ArgumentList	mem		8458255	1					
ANR	8458786	Argument	mem		8458255	0					
ANR	8458787	Identifier	mem		8458255	0					
ANR	8458788	Argument	1		8458255	1					
ANR	8458789	PrimaryExpression	1		8458255	0					
ANR	8458790	Argument	& plfont		8458255	4					
ANR	8458791	UnaryOperationExpression	& plfont		8458255	0					
ANR	8458792	UnaryOperator	&		8458255	0					
ANR	8458793	Identifier	plfont		8458255	1					
ANR	8458794	Argument	buffer		8458255	5					
ANR	8458795	Identifier	buffer		8458255	0					
ANR	8458796	PrimaryExpression	0		8458255	1					
ANR	8458797	CompoundStatement		117:49:4269:4269	8458255	1					
ANR	8458798	ExpressionStatement	gs_enumerate_files_close ( fe )	710:20:25703:25731	8458255	0	True				
ANR	8458799	CallExpression	gs_enumerate_files_close ( fe )		8458255	0					
ANR	8458800	Callee	gs_enumerate_files_close		8458255	0					
ANR	8458801	Identifier	gs_enumerate_files_close		8458255	0					
ANR	8458802	ArgumentList	fe		8458255	1					
ANR	8458803	Argument	fe		8458255	0					
ANR	8458804	Identifier	fe		8458255	0					
ANR	8458805	ReturnStatement	"return gs_throw1 ( 0 , ""An unrecoverable failure occurred while reading the resident font %s\\n"" , tmp_path_copy ) ;"	711:20:25753:25935	8458255	1	True				
ANR	8458806	CallExpression	"gs_throw1 ( 0 , ""An unrecoverable failure occurred while reading the resident font %s\\n"" , tmp_path_copy )"		8458255	0					
ANR	8458807	Callee	gs_throw1		8458255	0					
ANR	8458808	Identifier	gs_throw1		8458255	0					
ANR	8458809	ArgumentList	0		8458255	1					
ANR	8458810	Argument	0		8458255	0					
ANR	8458811	PrimaryExpression	0		8458255	0					
ANR	8458812	Argument	"""An unrecoverable failure occurred while reading the resident font %s\\n"""		8458255	1					
ANR	8458813	PrimaryExpression	"""An unrecoverable failure occurred while reading the resident font %s\\n"""		8458255	0					
ANR	8458814	Argument	tmp_path_copy		8458255	2					
ANR	8458815	Identifier	tmp_path_copy		8458255	0					
ANR	8458816	ExpressionStatement	"in = sfopen ( tmp_path_copy , ""r"" , mem )"	716:16:26009:26045	8458255	2	True				
ANR	8458817	AssignmentExpression	"in = sfopen ( tmp_path_copy , ""r"" , mem )"		8458255	0		=			
ANR	8458818	Identifier	in		8458255	0					
ANR	8458819	CallExpression	"sfopen ( tmp_path_copy , ""r"" , mem )"		8458255	1					
ANR	8458820	Callee	sfopen		8458255	0					
ANR	8458821	Identifier	sfopen		8458255	0					
ANR	8458822	ArgumentList	tmp_path_copy		8458255	1					
ANR	8458823	Argument	tmp_path_copy		8458255	0					
ANR	8458824	Identifier	tmp_path_copy		8458255	0					
ANR	8458825	Argument	"""r"""		8458255	1					
ANR	8458826	PrimaryExpression	"""r"""		8458255	0					
ANR	8458827	Argument	mem		8458255	2					
ANR	8458828	Identifier	mem		8458255	0					
ANR	8458829	IfStatement	if ( in == NULL )		8458255	3					
ANR	8458830	Condition	in == NULL	717:20:26067:26076	8458255	0	True				
ANR	8458831	EqualityExpression	in == NULL		8458255	0		==			
ANR	8458832	Identifier	in		8458255	0					
ANR	8458833	Identifier	NULL		8458255	1					
ANR	8458834	CompoundStatement		126:32:4702:4702	8458255	1					
ANR	8458835	ExpressionStatement	"gs_free_object ( mem , plfont -> pfont , ""pl_tt_load_font(gs_font_type42)"" )"	718:20:26101:26170	8458255	0	True				
ANR	8458836	CallExpression	"gs_free_object ( mem , plfont -> pfont , ""pl_tt_load_font(gs_font_type42)"" )"		8458255	0					
ANR	8458837	Callee	gs_free_object		8458255	0					
ANR	8458838	Identifier	gs_free_object		8458255	0					
ANR	8458839	ArgumentList	mem		8458255	1					
ANR	8458840	Argument	mem		8458255	0					
ANR	8458841	Identifier	mem		8458255	0					
ANR	8458842	Argument	plfont -> pfont		8458255	1					
ANR	8458843	PtrMemberAccess	plfont -> pfont		8458255	0					
ANR	8458844	Identifier	plfont		8458255	0					
ANR	8458845	Identifier	pfont		8458255	1					
ANR	8458846	Argument	"""pl_tt_load_font(gs_font_type42)"""		8458255	2					
ANR	8458847	PrimaryExpression	"""pl_tt_load_font(gs_font_type42)"""		8458255	0					
ANR	8458848	ExpressionStatement	"pl_free_tt_fontfile_buffer ( mem , plfont -> header )"	719:20:26192:26239	8458255	1	True				
ANR	8458849	CallExpression	"pl_free_tt_fontfile_buffer ( mem , plfont -> header )"		8458255	0					
ANR	8458850	Callee	pl_free_tt_fontfile_buffer		8458255	0					
ANR	8458851	Identifier	pl_free_tt_fontfile_buffer		8458255	0					
ANR	8458852	ArgumentList	mem		8458255	1					
ANR	8458853	Argument	mem		8458255	0					
ANR	8458854	Identifier	mem		8458255	0					
ANR	8458855	Argument	plfont -> header		8458255	1					
ANR	8458856	PtrMemberAccess	plfont -> header		8458255	0					
ANR	8458857	Identifier	plfont		8458255	0					
ANR	8458858	Identifier	header		8458255	1					
ANR	8458859	ExpressionStatement	"gs_free_object ( mem , plfont , ""pl_tt_load_font(pl_font_t)"" )"	720:20:26261:26318	8458255	2	True				
ANR	8458860	CallExpression	"gs_free_object ( mem , plfont , ""pl_tt_load_font(pl_font_t)"" )"		8458255	0					
ANR	8458861	Callee	gs_free_object		8458255	0					
ANR	8458862	Identifier	gs_free_object		8458255	0					
ANR	8458863	ArgumentList	mem		8458255	1					
ANR	8458864	Argument	mem		8458255	0					
ANR	8458865	Identifier	mem		8458255	0					
ANR	8458866	Argument	plfont		8458255	1					
ANR	8458867	Identifier	plfont		8458255	0					
ANR	8458868	Argument	"""pl_tt_load_font(pl_font_t)"""		8458255	2					
ANR	8458869	PrimaryExpression	"""pl_tt_load_font(pl_font_t)"""		8458255	0					
ANR	8458870	ExpressionStatement	gs_enumerate_files_close ( fe )	721:20:26340:26368	8458255	3	True				
ANR	8458871	CallExpression	gs_enumerate_files_close ( fe )		8458255	0					
ANR	8458872	Callee	gs_enumerate_files_close		8458255	0					
ANR	8458873	Identifier	gs_enumerate_files_close		8458255	0					
ANR	8458874	ArgumentList	fe		8458255	1					
ANR	8458875	Argument	fe		8458255	0					
ANR	8458876	Identifier	fe		8458255	0					
ANR	8458877	ReturnStatement	"return gs_throw1 ( 0 , ""An unrecoverable failure occurred while reading the resident font %s\\n"" , tmp_path_copy ) ;"	722:20:26390:26572	8458255	4	True				
ANR	8458878	CallExpression	"gs_throw1 ( 0 , ""An unrecoverable failure occurred while reading the resident font %s\\n"" , tmp_path_copy )"		8458255	0					
ANR	8458879	Callee	gs_throw1		8458255	0					
ANR	8458880	Identifier	gs_throw1		8458255	0					
ANR	8458881	ArgumentList	0		8458255	1					
ANR	8458882	Argument	0		8458255	0					
ANR	8458883	PrimaryExpression	0		8458255	0					
ANR	8458884	Argument	"""An unrecoverable failure occurred while reading the resident font %s\\n"""		8458255	1					
ANR	8458885	PrimaryExpression	"""An unrecoverable failure occurred while reading the resident font %s\\n"""		8458255	0					
ANR	8458886	Argument	tmp_path_copy		8458255	2					
ANR	8458887	Identifier	tmp_path_copy		8458255	0					
ANR	8458888	ExpressionStatement	plfont -> storage = storage	727:16:26609:26634	8458255	4	True				
ANR	8458889	AssignmentExpression	plfont -> storage = storage		8458255	0		=			
ANR	8458890	PtrMemberAccess	plfont -> storage		8458255	0					
ANR	8458891	Identifier	plfont		8458255	0					
ANR	8458892	Identifier	storage		8458255	1					
ANR	8458893	Identifier	storage		8458255	1					
ANR	8458894	ExpressionStatement	plfont -> data_are_permanent = false	728:16:26652:26686	8458255	5	True				
ANR	8458895	AssignmentExpression	plfont -> data_are_permanent = false		8458255	0		=			
ANR	8458896	PtrMemberAccess	plfont -> data_are_permanent		8458255	0					
ANR	8458897	Identifier	plfont		8458255	0					
ANR	8458898	Identifier	data_are_permanent		8458255	1					
ANR	8458899	Identifier	false		8458255	1					
ANR	8458900	ExpressionStatement	plfont -> font_type = residentp -> font_type	733:16:26907:26947	8458255	6	True				
ANR	8458901	AssignmentExpression	plfont -> font_type = residentp -> font_type		8458255	0		=			
ANR	8458902	PtrMemberAccess	plfont -> font_type		8458255	0					
ANR	8458903	Identifier	plfont		8458255	0					
ANR	8458904	Identifier	font_type		8458255	1					
ANR	8458905	PtrMemberAccess	residentp -> font_type		8458255	1					
ANR	8458906	Identifier	residentp		8458255	0					
ANR	8458907	Identifier	font_type		8458255	1					
ANR	8458908	ExpressionStatement	plfont -> params = residentp -> params	734:16:26965:26999	8458255	7	True				
ANR	8458909	AssignmentExpression	plfont -> params = residentp -> params		8458255	0		=			
ANR	8458910	PtrMemberAccess	plfont -> params		8458255	0					
ANR	8458911	Identifier	plfont		8458255	0					
ANR	8458912	Identifier	params		8458255	1					
ANR	8458913	PtrMemberAccess	residentp -> params		8458255	1					
ANR	8458914	Identifier	residentp		8458255	0					
ANR	8458915	Identifier	params		8458255	1					
ANR	8458916	ExpressionStatement	"memcpy ( plfont -> character_complement , residentp -> character_complement , 8 )"	735:16:27017:27112	8458255	8	True				
ANR	8458917	CallExpression	"memcpy ( plfont -> character_complement , residentp -> character_complement , 8 )"		8458255	0					
ANR	8458918	Callee	memcpy		8458255	0					
ANR	8458919	Identifier	memcpy		8458255	0					
ANR	8458920	ArgumentList	plfont -> character_complement		8458255	1					
ANR	8458921	Argument	plfont -> character_complement		8458255	0					
ANR	8458922	PtrMemberAccess	plfont -> character_complement		8458255	0					
ANR	8458923	Identifier	plfont		8458255	0					
ANR	8458924	Identifier	character_complement		8458255	1					
ANR	8458925	Argument	residentp -> character_complement		8458255	1					
ANR	8458926	PtrMemberAccess	residentp -> character_complement		8458255	0					
ANR	8458927	Identifier	residentp		8458255	0					
ANR	8458928	Identifier	character_complement		8458255	1					
ANR	8458929	Argument	8		8458255	2					
ANR	8458930	PrimaryExpression	8		8458255	0					
ANR	8458931	IfStatement	if ( use_unicode_names_for_keys )		8458255	9					
ANR	8458932	Condition	use_unicode_names_for_keys	737:20:27134:27159	8458255	0	True				
ANR	8458933	Identifier	use_unicode_names_for_keys		8458255	0					
ANR	8458934	ExpressionStatement	"code = pl_dict_put ( pfontdict , ( const byte * ) residentp -> unicode_fontname , 32 , plfont )"	738:20:27182:27330	8458255	1	True				
ANR	8458935	AssignmentExpression	"code = pl_dict_put ( pfontdict , ( const byte * ) residentp -> unicode_fontname , 32 , plfont )"		8458255	0		=			
ANR	8458936	Identifier	code		8458255	0					
ANR	8458937	CallExpression	"pl_dict_put ( pfontdict , ( const byte * ) residentp -> unicode_fontname , 32 , plfont )"		8458255	1					
ANR	8458938	Callee	pl_dict_put		8458255	0					
ANR	8458939	Identifier	pl_dict_put		8458255	0					
ANR	8458940	ArgumentList	pfontdict		8458255	1					
ANR	8458941	Argument	pfontdict		8458255	0					
ANR	8458942	Identifier	pfontdict		8458255	0					
ANR	8458943	Argument	( const byte * ) residentp -> unicode_fontname		8458255	1					
ANR	8458944	CastExpression	( const byte * ) residentp -> unicode_fontname		8458255	0					
ANR	8458945	CastTarget	const byte *		8458255	0					
ANR	8458946	PtrMemberAccess	residentp -> unicode_fontname		8458255	1					
ANR	8458947	Identifier	residentp		8458255	0					
ANR	8458948	Identifier	unicode_fontname		8458255	1					
ANR	8458949	Argument	32		8458255	2					
ANR	8458950	PrimaryExpression	32		8458255	0					
ANR	8458951	Argument	plfont		8458255	3					
ANR	8458952	Identifier	plfont		8458255	0					
ANR	8458953	ElseStatement	else		8458255	0					
ANR	8458954	CompoundStatement		150:21:5976:5976	8458255	0					
ANR	8458955	ExpressionStatement	key [ 2 ] = ( byte ) ( residentp - resident_table )	742:20:27375:27419	8458255	0	True				
ANR	8458956	AssignmentExpression	key [ 2 ] = ( byte ) ( residentp - resident_table )		8458255	0		=			
ANR	8458957	ArrayIndexing	key [ 2 ]		8458255	0					
ANR	8458958	Identifier	key		8458255	0					
ANR	8458959	PrimaryExpression	2		8458255	1					
ANR	8458960	CastExpression	( byte ) ( residentp - resident_table )		8458255	1					
ANR	8458961	CastTarget	byte		8458255	0					
ANR	8458962	AdditiveExpression	residentp - resident_table		8458255	1		-			
ANR	8458963	Identifier	residentp		8458255	0					
ANR	8458964	Identifier	resident_table		8458255	1					
ANR	8458965	ExpressionStatement	key [ 0 ] = key [ 1 ] = 0	743:20:27441:27460	8458255	1	True				
ANR	8458966	AssignmentExpression	key [ 0 ] = key [ 1 ] = 0		8458255	0		=			
ANR	8458967	ArrayIndexing	key [ 0 ]		8458255	0					
ANR	8458968	Identifier	key		8458255	0					
ANR	8458969	PrimaryExpression	0		8458255	1					
ANR	8458970	AssignmentExpression	key [ 1 ] = 0		8458255	1		=			
ANR	8458971	ArrayIndexing	key [ 1 ]		8458255	0					
ANR	8458972	Identifier	key		8458255	0					
ANR	8458973	PrimaryExpression	1		8458255	1					
ANR	8458974	PrimaryExpression	0		8458255	1					
ANR	8458975	ExpressionStatement	"code = pl_dict_put ( pfontdict , key , sizeof ( key ) , plfont )"	744:20:27482:27537	8458255	2	True				
ANR	8458976	AssignmentExpression	"code = pl_dict_put ( pfontdict , key , sizeof ( key ) , plfont )"		8458255	0		=			
ANR	8458977	Identifier	code		8458255	0					
ANR	8458978	CallExpression	"pl_dict_put ( pfontdict , key , sizeof ( key ) , plfont )"		8458255	1					
ANR	8458979	Callee	pl_dict_put		8458255	0					
ANR	8458980	Identifier	pl_dict_put		8458255	0					
ANR	8458981	ArgumentList	pfontdict		8458255	1					
ANR	8458982	Argument	pfontdict		8458255	0					
ANR	8458983	Identifier	pfontdict		8458255	0					
ANR	8458984	Argument	key		8458255	1					
ANR	8458985	Identifier	key		8458255	0					
ANR	8458986	Argument	sizeof ( key )		8458255	2					
ANR	8458987	SizeofExpression	sizeof ( key )		8458255	0					
ANR	8458988	Sizeof	sizeof		8458255	0					
ANR	8458989	SizeofOperand	key		8458255	1					
ANR	8458990	Argument	plfont		8458255	3					
ANR	8458991	Identifier	plfont		8458255	0					
ANR	8458992	IfStatement	"if ( ( code >= 0 ) && pl_store_resident_font_data_in_file ( tmp_path_copy , mem , plfont ) < 0 )"		8458255	3					
ANR	8458993	Condition	"( code >= 0 ) && pl_store_resident_font_data_in_file ( tmp_path_copy , mem , plfont ) < 0"	746:24:27659:27765	8458255	0	True				
ANR	8458994	AndExpression	"( code >= 0 ) && pl_store_resident_font_data_in_file ( tmp_path_copy , mem , plfont ) < 0"		8458255	0		&&			
ANR	8458995	RelationalExpression	code >= 0		8458255	0		>=			
ANR	8458996	Identifier	code		8458255	0					
ANR	8458997	PrimaryExpression	0		8458255	1					
ANR	8458998	RelationalExpression	"pl_store_resident_font_data_in_file ( tmp_path_copy , mem , plfont ) < 0"		8458255	1		<			
ANR	8458999	CallExpression	"pl_store_resident_font_data_in_file ( tmp_path_copy , mem , plfont )"		8458255	0					
ANR	8459000	Callee	pl_store_resident_font_data_in_file		8458255	0					
ANR	8459001	Identifier	pl_store_resident_font_data_in_file		8458255	0					
ANR	8459002	ArgumentList	tmp_path_copy		8458255	1					
ANR	8459003	Argument	tmp_path_copy		8458255	0					
ANR	8459004	Identifier	tmp_path_copy		8458255	0					
ANR	8459005	Argument	mem		8458255	1					
ANR	8459006	Identifier	mem		8458255	0					
ANR	8459007	Argument	plfont		8458255	2					
ANR	8459008	Identifier	plfont		8458255	0					
ANR	8459009	PrimaryExpression	0		8458255	1					
ANR	8459010	CompoundStatement		156:58:6391:6391	8458255	1					
ANR	8459011	ExpressionStatement	"dmprintf1 ( mem , ""%s could not store data"" , tmp_path_copy )"	748:24:27794:27884	8458255	0	True				
ANR	8459012	CallExpression	"dmprintf1 ( mem , ""%s could not store data"" , tmp_path_copy )"		8458255	0					
ANR	8459013	Callee	dmprintf1		8458255	0					
ANR	8459014	Identifier	dmprintf1		8458255	0					
ANR	8459015	ArgumentList	mem		8458255	1					
ANR	8459016	Argument	mem		8458255	0					
ANR	8459017	Identifier	mem		8458255	0					
ANR	8459018	Argument	"""%s could not store data"""		8458255	1					
ANR	8459019	PrimaryExpression	"""%s could not store data"""		8458255	0					
ANR	8459020	Argument	tmp_path_copy		8458255	2					
ANR	8459021	Identifier	tmp_path_copy		8458255	0					
ANR	8459022	ContinueStatement	continue ;	750:24:27910:27918	8458255	1	True				
ANR	8459023	IfStatement	if ( code < 0 )		8458255	10					
ANR	8459024	Condition	code < 0	753:20:27980:27987	8458255	0	True				
ANR	8459025	RelationalExpression	code < 0		8458255	0		<			
ANR	8459026	Identifier	code		8458255	0					
ANR	8459027	PrimaryExpression	0		8458255	1					
ANR	8459028	CompoundStatement		162:30:6613:6613	8458255	1					
ANR	8459029	ExpressionStatement	"gs_free_object ( mem , plfont -> pfont , ""pl_tt_load_font(gs_font_type42)"" )"	754:20:28012:28081	8458255	0	True				
ANR	8459030	CallExpression	"gs_free_object ( mem , plfont -> pfont , ""pl_tt_load_font(gs_font_type42)"" )"		8458255	0					
ANR	8459031	Callee	gs_free_object		8458255	0					
ANR	8459032	Identifier	gs_free_object		8458255	0					
ANR	8459033	ArgumentList	mem		8458255	1					
ANR	8459034	Argument	mem		8458255	0					
ANR	8459035	Identifier	mem		8458255	0					
ANR	8459036	Argument	plfont -> pfont		8458255	1					
ANR	8459037	PtrMemberAccess	plfont -> pfont		8458255	0					
ANR	8459038	Identifier	plfont		8458255	0					
ANR	8459039	Identifier	pfont		8458255	1					
ANR	8459040	Argument	"""pl_tt_load_font(gs_font_type42)"""		8458255	2					
ANR	8459041	PrimaryExpression	"""pl_tt_load_font(gs_font_type42)"""		8458255	0					
ANR	8459042	ExpressionStatement	"pl_free_tt_fontfile_buffer ( mem , plfont -> header )"	755:20:28103:28150	8458255	1	True				
ANR	8459043	CallExpression	"pl_free_tt_fontfile_buffer ( mem , plfont -> header )"		8458255	0					
ANR	8459044	Callee	pl_free_tt_fontfile_buffer		8458255	0					
ANR	8459045	Identifier	pl_free_tt_fontfile_buffer		8458255	0					
ANR	8459046	ArgumentList	mem		8458255	1					
ANR	8459047	Argument	mem		8458255	0					
ANR	8459048	Identifier	mem		8458255	0					
ANR	8459049	Argument	plfont -> header		8458255	1					
ANR	8459050	PtrMemberAccess	plfont -> header		8458255	0					
ANR	8459051	Identifier	plfont		8458255	0					
ANR	8459052	Identifier	header		8458255	1					
ANR	8459053	ExpressionStatement	"gs_free_object ( mem , plfont , ""pl_tt_load_font(pl_font_t)"" )"	756:20:28172:28229	8458255	2	True				
ANR	8459054	CallExpression	"gs_free_object ( mem , plfont , ""pl_tt_load_font(pl_font_t)"" )"		8458255	0					
ANR	8459055	Callee	gs_free_object		8458255	0					
ANR	8459056	Identifier	gs_free_object		8458255	0					
ANR	8459057	ArgumentList	mem		8458255	1					
ANR	8459058	Argument	mem		8458255	0					
ANR	8459059	Identifier	mem		8458255	0					
ANR	8459060	Argument	plfont		8458255	1					
ANR	8459061	Identifier	plfont		8458255	0					
ANR	8459062	Argument	"""pl_tt_load_font(pl_font_t)"""		8458255	2					
ANR	8459063	PrimaryExpression	"""pl_tt_load_font(pl_font_t)"""		8458255	0					
ANR	8459064	ContinueStatement	continue ;	757:20:28251:28259	8458255	3	True				
ANR	8459065	ExpressionStatement	found = true	759:16:28295:28307	8458255	11	True				
ANR	8459066	AssignmentExpression	found = true		8458255	0		=			
ANR	8459067	Identifier	found		8458255	0					
ANR	8459068	Identifier	true		8458255	1					
ANR	8459069	ExpressionStatement	found_any = true	760:16:28325:28341	8458255	12	True				
ANR	8459070	AssignmentExpression	found_any = true		8458255	0		=			
ANR	8459071	Identifier	found_any		8458255	0					
ANR	8459072	Identifier	true		8458255	1					
ANR	8459073	ExpressionStatement	sfclose ( in )	762:12:28369:28380	8458255	11	True				
ANR	8459074	CallExpression	sfclose ( in )		8458255	0					
ANR	8459075	Callee	sfclose		8458255	0					
ANR	8459076	Identifier	sfclose		8458255	0					
ANR	8459077	ArgumentList	in		8458255	1					
ANR	8459078	Argument	in		8458255	0					
ANR	8459079	Identifier	in		8458255	0					
ANR	8459080	IfStatement	if ( ! found )		8458255	12					
ANR	8459081	Condition	! found	765:16:28431:28436	8458255	0	True				
ANR	8459082	UnaryOperationExpression	! found		8458255	0					
ANR	8459083	UnaryOperator	!		8458255	0					
ANR	8459084	Identifier	found		8458255	1					
ANR	8459085	CompoundStatement		174:24:7062:7062	8458255	1					
ANR	8459086	IfStatement	if ( gs_debug_c ( '=' ) )		8458255	0					
ANR	8459087	Condition	gs_debug_c ( '=' )	767:20:28474:28488	8458255	0	True				
ANR	8459088	CallExpression	gs_debug_c ( '=' )		8458255	0					
ANR	8459089	Callee	gs_debug_c		8458255	0					
ANR	8459090	Identifier	gs_debug_c		8458255	0					
ANR	8459091	ArgumentList	'='		8458255	1					
ANR	8459092	Argument	'='		8458255	0					
ANR	8459093	PrimaryExpression	'='		8458255	0					
ANR	8459094	CompoundStatement		176:37:7114:7114	8458255	1					
ANR	8459095	ExpressionStatement	"dmprintf2 ( mem , ""TrueType font %s in file %s not found in table\\n"" , buffer , tmp_path_copy )"	768:20:28513:28662	8458255	0	True				
ANR	8459096	CallExpression	"dmprintf2 ( mem , ""TrueType font %s in file %s not found in table\\n"" , buffer , tmp_path_copy )"		8458255	0					
ANR	8459097	Callee	dmprintf2		8458255	0					
ANR	8459098	Identifier	dmprintf2		8458255	0					
ANR	8459099	ArgumentList	mem		8458255	1					
ANR	8459100	Argument	mem		8458255	0					
ANR	8459101	Identifier	mem		8458255	0					
ANR	8459102	Argument	"""TrueType font %s in file %s not found in table\\n"""		8458255	1					
ANR	8459103	PrimaryExpression	"""TrueType font %s in file %s not found in table\\n"""		8458255	0					
ANR	8459104	Argument	buffer		8458255	2					
ANR	8459105	Identifier	buffer		8458255	0					
ANR	8459106	Argument	tmp_path_copy		8458255	3					
ANR	8459107	Identifier	tmp_path_copy		8458255	0					
ANR	8459108	ExpressionStatement	"in = sfopen ( tmp_path_copy , ""r"" , mem )"	771:20:28684:28720	8458255	1	True				
ANR	8459109	AssignmentExpression	"in = sfopen ( tmp_path_copy , ""r"" , mem )"		8458255	0		=			
ANR	8459110	Identifier	in		8458255	0					
ANR	8459111	CallExpression	"sfopen ( tmp_path_copy , ""r"" , mem )"		8458255	1					
ANR	8459112	Callee	sfopen		8458255	0					
ANR	8459113	Identifier	sfopen		8458255	0					
ANR	8459114	ArgumentList	tmp_path_copy		8458255	1					
ANR	8459115	Argument	tmp_path_copy		8458255	0					
ANR	8459116	Identifier	tmp_path_copy		8458255	0					
ANR	8459117	Argument	"""r"""		8458255	1					
ANR	8459118	PrimaryExpression	"""r"""		8458255	0					
ANR	8459119	Argument	mem		8458255	2					
ANR	8459120	Identifier	mem		8458255	0					
ANR	8459121	ExpressionStatement	"code = get_name_from_tt_file ( in , mem , buffer , WINDOWSNAME )"	772:20:28742:28824	8458255	2	True				
ANR	8459122	AssignmentExpression	"code = get_name_from_tt_file ( in , mem , buffer , WINDOWSNAME )"		8458255	0		=			
ANR	8459123	Identifier	code		8458255	0					
ANR	8459124	CallExpression	"get_name_from_tt_file ( in , mem , buffer , WINDOWSNAME )"		8458255	1					
ANR	8459125	Callee	get_name_from_tt_file		8458255	0					
ANR	8459126	Identifier	get_name_from_tt_file		8458255	0					
ANR	8459127	ArgumentList	in		8458255	1					
ANR	8459128	Argument	in		8458255	0					
ANR	8459129	Identifier	in		8458255	0					
ANR	8459130	Argument	mem		8458255	1					
ANR	8459131	Identifier	mem		8458255	0					
ANR	8459132	Argument	buffer		8458255	2					
ANR	8459133	Identifier	buffer		8458255	0					
ANR	8459134	Argument	WINDOWSNAME		8458255	3					
ANR	8459135	Identifier	WINDOWSNAME		8458255	0					
ANR	8459136	ExpressionStatement	sfclose ( in )	774:20:28846:28857	8458255	3	True				
ANR	8459137	CallExpression	sfclose ( in )		8458255	0					
ANR	8459138	Callee	sfclose		8458255	0					
ANR	8459139	Identifier	sfclose		8458255	0					
ANR	8459140	ArgumentList	in		8458255	1					
ANR	8459141	Argument	in		8458255	0					
ANR	8459142	Identifier	in		8458255	0					
ANR	8459143	ExpressionStatement	"dmprintf1 ( mem , ""Windows name %s\\n"" , buffer )"	775:20:28879:28922	8458255	4	True				
ANR	8459144	CallExpression	"dmprintf1 ( mem , ""Windows name %s\\n"" , buffer )"		8458255	0					
ANR	8459145	Callee	dmprintf1		8458255	0					
ANR	8459146	Identifier	dmprintf1		8458255	0					
ANR	8459147	ArgumentList	mem		8458255	1					
ANR	8459148	Argument	mem		8458255	0					
ANR	8459149	Identifier	mem		8458255	0					
ANR	8459150	Argument	"""Windows name %s\\n"""		8458255	1					
ANR	8459151	PrimaryExpression	"""Windows name %s\\n"""		8458255	0					
ANR	8459152	Argument	buffer		8458255	2					
ANR	8459153	Identifier	buffer		8458255	0					
ANR	8459154	IfStatement	if ( code < 0 )		8458255	5					
ANR	8459155	Condition	code < 0	776:24:28948:28955	8458255	0	True				
ANR	8459156	RelationalExpression	code < 0		8458255	0		<			
ANR	8459157	Identifier	code		8458255	0					
ANR	8459158	PrimaryExpression	0		8458255	1					
ANR	8459159	ReturnStatement	return code ;	777:24:28982:28993	8458255	1	True				
ANR	8459160	Identifier	code		8458255	0					
ANR	8459161	IfStatement	if ( gs_debug_c ( '=' ) )		8458255	26					
ANR	8459162	Condition	gs_debug_c ( '=' )	784:8:29156:29170	8458255	0	True				
ANR	8459163	CallExpression	gs_debug_c ( '=' )		8458255	0					
ANR	8459164	Callee	gs_debug_c		8458255	0					
ANR	8459165	Identifier	gs_debug_c		8458255	0					
ANR	8459166	ArgumentList	'='		8458255	1					
ANR	8459167	Argument	'='		8458255	0					
ANR	8459168	PrimaryExpression	'='		8458255	0					
ANR	8459169	ExpressionStatement	"check_resident_fonts ( pfontdict , mem )"	785:8:29181:29217	8458255	1	True				
ANR	8459170	CallExpression	"check_resident_fonts ( pfontdict , mem )"		8458255	0					
ANR	8459171	Callee	check_resident_fonts		8458255	0					
ANR	8459172	Identifier	check_resident_fonts		8458255	0					
ANR	8459173	ArgumentList	pfontdict		8458255	1					
ANR	8459174	Argument	pfontdict		8458255	0					
ANR	8459175	Identifier	pfontdict		8458255	0					
ANR	8459176	Argument	mem		8458255	1					
ANR	8459177	Identifier	mem		8458255	0					
ANR	8459178	ReturnStatement	return found_any ;	787:4:29230:29246	8458255	27	True				
ANR	8459179	Identifier	found_any		8458255	0					
ANR	8459180	Statement	undef	788:1:29249:29253	8458255	28	True				
ANR	8459181	Statement	fontnames	788:7:29255:29263	8458255	29	True				
ANR	8459182	ReturnType	int		8458255	1					
ANR	8459183	Identifier	pl_load_built_in_fonts		8458255	2					
ANR	8459184	ParameterList	"const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage , bool use_unicode_names_for_keys"		8458255	3					
ANR	8459185	Parameter	const char * pathname	589:23:21200:21219	8458255	0	True				
ANR	8459186	ParameterType	const char *		8458255	0					
ANR	8459187	Identifier	pathname		8458255	1					
ANR	8459188	Parameter	gs_memory_t * mem	589:45:21222:21238	8458255	1	True				
ANR	8459189	ParameterType	gs_memory_t *		8458255	0					
ANR	8459190	Identifier	mem		8458255	1					
ANR	8459191	Parameter	pl_dict_t * pfontdict	590:23:21264:21284	8458255	2	True				
ANR	8459192	ParameterType	pl_dict_t *		8458255	0					
ANR	8459193	Identifier	pfontdict		8458255	1					
ANR	8459194	Parameter	gs_font_dir * pdir	590:46:21287:21304	8458255	3	True				
ANR	8459195	ParameterType	gs_font_dir *		8458255	0					
ANR	8459196	Identifier	pdir		8458255	1					
ANR	8459197	Parameter	int storage	591:23:21330:21340	8458255	4	True				
ANR	8459198	ParameterType	int		8458255	0					
ANR	8459199	Identifier	storage		8458255	1					
ANR	8459200	Parameter	bool use_unicode_names_for_keys	591:36:21343:21373	8458255	5	True				
ANR	8459201	ParameterType	bool		8458255	0					
ANR	8459202	Identifier	use_unicode_names_for_keys		8458255	1					
ANR	8459203	CFGEntryNode	ENTRY		8458255		True				
ANR	8459204	CFGExitNode	EXIT		8458255		True				
ANR	8459205	Symbol	residentp -> params		8458255						
ANR	8459206	Symbol	plfont -> header		8458255						
ANR	8459207	Symbol	* key		8458255						
ANR	8459208	Symbol	plfont		8458255						
ANR	8459209	Symbol	plfont -> data_are_permanent		8458255						
ANR	8459210	Symbol	gs_next_ids		8458255						
ANR	8459211	Symbol	strlen		8458255						
ANR	8459212	Symbol	sfopen		8458255						
ANR	8459213	Symbol	pl_load_built_in_mtype_fonts		8458255						
ANR	8459214	Symbol	gs_debug_c		8458255						
ANR	8459215	Symbol	buffer		8458255						
ANR	8459216	Symbol	plfont -> font_type		8458255						
ANR	8459217	Symbol	resident_table		8458255						
ANR	8459218	Symbol	strcmp		8458255						
ANR	8459219	Symbol	pl_load_tt_font		8458255						
ANR	8459220	Symbol	NULL		8458255						
ANR	8459221	Symbol	offset		8458255						
ANR	8459222	Symbol	gs_enumerate_files_next		8458255						
ANR	8459223	Symbol	plfont -> storage		8458255						
ANR	8459224	Symbol	in		8458255						
ANR	8459225	Symbol	pdir		8458255						
ANR	8459226	Symbol	plfont -> character_complement		8458255						
ANR	8459227	Symbol	found_any		8458255						
ANR	8459228	Symbol	pathname		8458255						
ANR	8459229	Symbol	* tmp_path_copy		8458255						
ANR	8459230	Symbol	append_separator		8458255						
ANR	8459231	Symbol	get_name_from_tt_file		8458255						
ANR	8459232	Symbol	pfontdict		8458255						
ANR	8459233	Symbol	PSNAME		8458255						
ANR	8459234	Symbol	true		8458255						
ANR	8459235	Symbol	residentp		8458255						
ANR	8459236	Symbol	pl_dict_put		8458255						
ANR	8459237	Symbol	* code		8458255						
ANR	8459238	Symbol	fe		8458255						
ANR	8459239	Symbol	gs_throw1		8458255						
ANR	8459240	Symbol	separator_length		8458255						
ANR	8459241	Symbol	code		8458255						
ANR	8459242	Symbol	residentp -> unicode_fontname		8458255						
ANR	8459243	Symbol	gs_strtok		8458255						
ANR	8459244	Symbol	pattern		8458255						
ANR	8459245	Symbol	storage		8458255						
ANR	8459246	Symbol	gs_enumerate_files_init		8458255						
ANR	8459247	Symbol	residentp -> character_complement		8458255						
ANR	8459248	Symbol	& tplast		8458255						
ANR	8459249	Symbol	tmp_pathp		8458255						
ANR	8459250	Symbol	found		8458255						
ANR	8459251	Symbol	mem		8458255						
ANR	8459252	Symbol	tplast		8458255						
ANR	8459253	Symbol	key		8458255						
ANR	8459254	Symbol	pl_dict_length		8458255						
ANR	8459255	Symbol	gp_file_name_directory_separator		8458255						
ANR	8459256	Symbol	WINDOWSNAME		8458255						
ANR	8459257	Symbol	* residentp		8458255						
ANR	8459258	Symbol	false		8458255						
ANR	8459259	Symbol	use_unicode_names_for_keys		8458255						
ANR	8459260	Symbol	tmp_path_copy		8458255						
ANR	8459261	Symbol	& plfont		8458255						
ANR	8459262	Symbol	plfont -> pfont		8458255						
ANR	8459263	Symbol	plfont -> params		8458255						
ANR	8459264	Symbol	* plfont		8458255						
ANR	8459265	Symbol	pl_store_resident_font_data_in_file		8458255						
ANR	8459266	Symbol	residentp -> font_type		8458255						
ANR	8459267	Symbol	residentp -> full_font_name		8458255						
ANR	8459268	Function	pl_load_simm_fonts	794:0:29336:29517							
ANR	8459269	FunctionDef	"pl_load_simm_fonts (const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage)"		8459268	0					
ANR	8459270	CompoundStatement		797:0:29475:29517	8459268	0					
ANR	8459271	ReturnStatement	return 0 ;	799:4:29507:29515	8459268	0	True				
ANR	8459272	PrimaryExpression	0		8459268	0					
ANR	8459273	ReturnType	int		8459268	1					
ANR	8459274	Identifier	pl_load_simm_fonts		8459268	2					
ANR	8459275	ParameterList	"const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage"		8459268	3					
ANR	8459276	Parameter	const char * pathname	795:19:29359:29378	8459268	0	True				
ANR	8459277	ParameterType	const char *		8459268	0					
ANR	8459278	Identifier	pathname		8459268	1					
ANR	8459279	Parameter	gs_memory_t * mem	795:41:29381:29397	8459268	1	True				
ANR	8459280	ParameterType	gs_memory_t *		8459268	0					
ANR	8459281	Identifier	mem		8459268	1					
ANR	8459282	Parameter	pl_dict_t * pfontdict	796:19:29419:29439	8459268	2	True				
ANR	8459283	ParameterType	pl_dict_t *		8459268	0					
ANR	8459284	Identifier	pfontdict		8459268	1					
ANR	8459285	Parameter	gs_font_dir * pdir	796:42:29442:29459	8459268	3	True				
ANR	8459286	ParameterType	gs_font_dir *		8459268	0					
ANR	8459287	Identifier	pdir		8459268	1					
ANR	8459288	Parameter	int storage	796:62:29462:29472	8459268	4	True				
ANR	8459289	ParameterType	int		8459268	0					
ANR	8459290	Identifier	storage		8459268	1					
ANR	8459291	CFGEntryNode	ENTRY		8459268		True				
ANR	8459292	CFGExitNode	EXIT		8459268		True				
ANR	8459293	Symbol	mem		8459268						
ANR	8459294	Symbol	pfontdict		8459268						
ANR	8459295	Symbol	pdir		8459268						
ANR	8459296	Symbol	storage		8459268						
ANR	8459297	Symbol	pathname		8459268						
ANR	8459298	Function	pl_load_cartridge_fonts	803:0:29555:29770							
ANR	8459299	FunctionDef	"pl_load_cartridge_fonts (const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage)"		8459298	0					
ANR	8459300	CompoundStatement		807:0:29728:29770	8459298	0					
ANR	8459301	ReturnStatement	return 0 ;	809:4:29760:29768	8459298	0	True				
ANR	8459302	PrimaryExpression	0		8459298	0					
ANR	8459303	ReturnType	int		8459298	1					
ANR	8459304	Identifier	pl_load_cartridge_fonts		8459298	2					
ANR	8459305	ParameterList	"const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage"		8459298	3					
ANR	8459306	Parameter	const char * pathname	804:24:29583:29602	8459298	0	True				
ANR	8459307	ParameterType	const char *		8459298	0					
ANR	8459308	Identifier	pathname		8459298	1					
ANR	8459309	Parameter	gs_memory_t * mem	804:46:29605:29621	8459298	1	True				
ANR	8459310	ParameterType	gs_memory_t *		8459298	0					
ANR	8459311	Identifier	mem		8459298	1					
ANR	8459312	Parameter	pl_dict_t * pfontdict	805:24:29648:29668	8459298	2	True				
ANR	8459313	ParameterType	pl_dict_t *		8459298	0					
ANR	8459314	Identifier	pfontdict		8459298	1					
ANR	8459315	Parameter	gs_font_dir * pdir	805:47:29671:29688	8459298	3	True				
ANR	8459316	ParameterType	gs_font_dir *		8459298	0					
ANR	8459317	Identifier	pdir		8459298	1					
ANR	8459318	Parameter	int storage	806:24:29715:29725	8459298	4	True				
ANR	8459319	ParameterType	int		8459298	0					
ANR	8459320	Identifier	storage		8459298	1					
ANR	8459321	CFGEntryNode	ENTRY		8459298		True				
ANR	8459322	CFGExitNode	EXIT		8459298		True				
ANR	8459323	Symbol	mem		8459298						
ANR	8459324	Symbol	pfontdict		8459298						
ANR	8459325	Symbol	pdir		8459298						
ANR	8459326	Symbol	storage		8459298						
ANR	8459327	Symbol	pathname		8459298						
