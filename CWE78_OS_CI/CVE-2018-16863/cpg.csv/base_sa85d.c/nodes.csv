command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1348732	File	data/converged/CVE-2018-16863_ghostpdl/base_sa85d.c								
ANR	1348733	Function	s_A85D_init	28:0:774:921							
ANR	1348734	FunctionDef	s_A85D_init (stream_state * st)		1348733	0					
ANR	1348735	CompoundStatement		30:0:816:921	1348733	0					
ANR	1348736	Statement	stream_A85D_state	31:4:822:838	1348733	0	True				
ANR	1348737	Statement	*	31:22:840:840	1348733	1	True				
ANR	1348738	Statement	const	31:23:841:845	1348733	2	True				
ANR	1348739	ExpressionStatement	ss = ( stream_A85D_state * ) st	31:29:847:876	1348733	3	True				
ANR	1348740	AssignmentExpression	ss = ( stream_A85D_state * ) st		1348733	0		=			
ANR	1348741	Identifier	ss		1348733	0					
ANR	1348742	CastExpression	( stream_A85D_state * ) st		1348733	1					
ANR	1348743	CastTarget	stream_A85D_state *		1348733	0					
ANR	1348744	Identifier	st		1348733	1					
ANR	1348745	ExpressionStatement	s_A85D_init_inline ( ss )	33:4:883:905	1348733	4	True				
ANR	1348746	CallExpression	s_A85D_init_inline ( ss )		1348733	0					
ANR	1348747	Callee	s_A85D_init_inline		1348733	0					
ANR	1348748	Identifier	s_A85D_init_inline		1348733	0					
ANR	1348749	ArgumentList	ss		1348733	1					
ANR	1348750	Argument	ss		1348733	0					
ANR	1348751	Identifier	ss		1348733	0					
ANR	1348752	ReturnStatement	return 0 ;	34:4:911:919	1348733	5	True				
ANR	1348753	PrimaryExpression	0		1348733	0					
ANR	1348754	ReturnType	static int		1348733	1					
ANR	1348755	Identifier	s_A85D_init		1348733	2					
ANR	1348756	ParameterList	stream_state * st		1348733	3					
ANR	1348757	Parameter	stream_state * st	29:12:797:813	1348733	0	True				
ANR	1348758	ParameterType	stream_state *		1348733	0					
ANR	1348759	Identifier	st		1348733	1					
ANR	1348760	CFGEntryNode	ENTRY		1348733		True				
ANR	1348761	CFGExitNode	EXIT		1348733		True				
ANR	1348762	Symbol	ss		1348733						
ANR	1348763	Symbol	st		1348733						
ANR	1348764	DeclStmt									
ANR	1348765	Decl							int	"int ( int , ulong , stream_cursor_write * )"	a85d_finish
ANR	1348766	Function	s_A85D_process	39:0:1006:5924							
ANR	1348767	FunctionDef	"s_A85D_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last)"		1348766	0					
ANR	1348768	CompoundStatement		42:0:1128:5924	1348766	0					
ANR	1348769	Statement	stream_A85D_state	43:4:1134:1150	1348766	0	True				
ANR	1348770	Statement	*	43:22:1152:1152	1348766	1	True				
ANR	1348771	Statement	const	43:23:1153:1157	1348766	2	True				
ANR	1348772	ExpressionStatement	ss = ( stream_A85D_state * ) st	43:29:1159:1188	1348766	3	True				
ANR	1348773	AssignmentExpression	ss = ( stream_A85D_state * ) st		1348766	0		=			
ANR	1348774	Identifier	ss		1348766	0					
ANR	1348775	CastExpression	( stream_A85D_state * ) st		1348766	1					
ANR	1348776	CastTarget	stream_A85D_state *		1348766	0					
ANR	1348777	Identifier	st		1348766	1					
ANR	1348778	Statement	register	44:4:1194:1201	1348766	4	True				
ANR	1348779	IdentifierDeclStatement	const byte * p = pr -> ptr ;	44:13:1203:1226	1348766	5	True				
ANR	1348780	IdentifierDecl	* p = pr -> ptr		1348766	0					
ANR	1348781	IdentifierDeclType	const byte *		1348766	0					
ANR	1348782	Identifier	p		1348766	1					
ANR	1348783	AssignmentExpression	* p = pr -> ptr		1348766	2		=			
ANR	1348784	Identifier	p		1348766	0					
ANR	1348785	PtrMemberAccess	pr -> ptr		1348766	1					
ANR	1348786	Identifier	pr		1348766	0					
ANR	1348787	Identifier	ptr		1348766	1					
ANR	1348788	Statement	register	45:4:1232:1239	1348766	6	True				
ANR	1348789	IdentifierDeclStatement	byte * q = pw -> ptr ;	45:13:1241:1258	1348766	7	True				
ANR	1348790	IdentifierDecl	* q = pw -> ptr		1348766	0					
ANR	1348791	IdentifierDeclType	byte *		1348766	0					
ANR	1348792	Identifier	q		1348766	1					
ANR	1348793	AssignmentExpression	* q = pw -> ptr		1348766	2		=			
ANR	1348794	Identifier	q		1348766	0					
ANR	1348795	PtrMemberAccess	pw -> ptr		1348766	1					
ANR	1348796	Identifier	pw		1348766	0					
ANR	1348797	Identifier	ptr		1348766	1					
ANR	1348798	IdentifierDeclStatement	const byte * rlimit = pr -> limit - ( last ? 0 : 7 ) ;	50:4:1564:1611	1348766	8	True				
ANR	1348799	IdentifierDecl	* rlimit = pr -> limit - ( last ? 0 : 7 )		1348766	0					
ANR	1348800	IdentifierDeclType	const byte *		1348766	0					
ANR	1348801	Identifier	rlimit		1348766	1					
ANR	1348802	AssignmentExpression	* rlimit = pr -> limit - ( last ? 0 : 7 )		1348766	2		=			
ANR	1348803	Identifier	rlimit		1348766	0					
ANR	1348804	AdditiveExpression	pr -> limit - ( last ? 0 : 7 )		1348766	1		-			
ANR	1348805	PtrMemberAccess	pr -> limit		1348766	0					
ANR	1348806	Identifier	pr		1348766	0					
ANR	1348807	Identifier	limit		1348766	1					
ANR	1348808	ConditionalExpression	last ? 0 : 7		1348766	1					
ANR	1348809	Condition	last		1348766	0					
ANR	1348810	Identifier	last		1348766	0					
ANR	1348811	PrimaryExpression	0		1348766	1					
ANR	1348812	PrimaryExpression	7		1348766	2					
ANR	1348813	IdentifierDeclStatement	"const byte * r = max ( p , rlimit ) ;"	51:4:1639:1669	1348766	9	True				
ANR	1348814	IdentifierDecl	"* r = max ( p , rlimit )"		1348766	0					
ANR	1348815	IdentifierDeclType	const byte *		1348766	0					
ANR	1348816	Identifier	r		1348766	1					
ANR	1348817	AssignmentExpression	"* r = max ( p , rlimit )"		1348766	2		=			
ANR	1348818	Identifier	r		1348766	0					
ANR	1348819	CallExpression	"max ( p , rlimit )"		1348766	1					
ANR	1348820	Callee	max		1348766	0					
ANR	1348821	Identifier	max		1348766	0					
ANR	1348822	ArgumentList	p		1348766	1					
ANR	1348823	Argument	p		1348766	0					
ANR	1348824	Identifier	p		1348766	0					
ANR	1348825	Argument	rlimit		1348766	1					
ANR	1348826	Identifier	rlimit		1348766	0					
ANR	1348827	IdentifierDeclStatement	byte * wlimit = pw -> limit ;	52:4:1675:1699	1348766	10	True				
ANR	1348828	IdentifierDecl	* wlimit = pw -> limit		1348766	0					
ANR	1348829	IdentifierDeclType	byte *		1348766	0					
ANR	1348830	Identifier	wlimit		1348766	1					
ANR	1348831	AssignmentExpression	* wlimit = pw -> limit		1348766	2		=			
ANR	1348832	Identifier	wlimit		1348766	0					
ANR	1348833	PtrMemberAccess	pw -> limit		1348766	1					
ANR	1348834	Identifier	pw		1348766	0					
ANR	1348835	Identifier	limit		1348766	1					
ANR	1348836	IdentifierDeclStatement	int ccount = ss -> odd ;	53:4:1705:1725	1348766	11	True				
ANR	1348837	IdentifierDecl	ccount = ss -> odd		1348766	0					
ANR	1348838	IdentifierDeclType	int		1348766	0					
ANR	1348839	Identifier	ccount		1348766	1					
ANR	1348840	AssignmentExpression	ccount = ss -> odd		1348766	2		=			
ANR	1348841	Identifier	ccount		1348766	0					
ANR	1348842	PtrMemberAccess	ss -> odd		1348766	1					
ANR	1348843	Identifier	ss		1348766	0					
ANR	1348844	Identifier	odd		1348766	1					
ANR	1348845	IdentifierDeclStatement	ulong word = ss -> word ;	54:4:1731:1752	1348766	12	True				
ANR	1348846	IdentifierDecl	word = ss -> word		1348766	0					
ANR	1348847	IdentifierDeclType	ulong		1348766	0					
ANR	1348848	Identifier	word		1348766	1					
ANR	1348849	AssignmentExpression	word = ss -> word		1348766	2		=			
ANR	1348850	Identifier	word		1348766	0					
ANR	1348851	PtrMemberAccess	ss -> word		1348766	1					
ANR	1348852	Identifier	ss		1348766	0					
ANR	1348853	Identifier	word		1348766	1					
ANR	1348854	IdentifierDeclStatement	int status = 0 ;	55:4:1758:1772	1348766	13	True				
ANR	1348855	IdentifierDecl	status = 0		1348766	0					
ANR	1348856	IdentifierDeclType	int		1348766	0					
ANR	1348857	Identifier	status		1348766	1					
ANR	1348858	AssignmentExpression	status = 0		1348766	2		=			
ANR	1348859	Identifier	status		1348766	0					
ANR	1348860	PrimaryExpression	0		1348766	1					
ANR	1348861	WhileStatement	while ( r < pr -> limit )		1348766	14					
ANR	1348862	Condition	r < pr -> limit	59:11:1924:1936	1348766	0	True				
ANR	1348863	RelationalExpression	r < pr -> limit		1348766	0		<			
ANR	1348864	Identifier	r		1348766	0					
ANR	1348865	PtrMemberAccess	pr -> limit		1348766	1					
ANR	1348866	Identifier	pr		1348766	0					
ANR	1348867	Identifier	limit		1348766	1					
ANR	1348868	CompoundStatement		18:26:810:810	1348766	1					
ANR	1348869	IfStatement	if ( * ++ r == '~' )		1348766	0					
ANR	1348870	Condition	* ++ r == '~'	60:12:1953:1963	1348766	0	True				
ANR	1348871	EqualityExpression	* ++ r == '~'		1348766	0		==			
ANR	1348872	UnaryOperationExpression	* ++ r		1348766	0					
ANR	1348873	UnaryOperator	*		1348766	0					
ANR	1348874	UnaryExpression	++ r		1348766	1					
ANR	1348875	IncDec	++		1348766	0					
ANR	1348876	Identifier	r		1348766	1					
ANR	1348877	PrimaryExpression	'~'		1348766	1					
ANR	1348878	WhileStatement	while ( r < pr -> limit )		1348766	1					
ANR	1348879	Condition	r < pr -> limit	61:19:1985:1997	1348766	0	True				
ANR	1348880	RelationalExpression	r < pr -> limit		1348766	0		<			
ANR	1348881	Identifier	r		1348766	0					
ANR	1348882	PtrMemberAccess	pr -> limit		1348766	1					
ANR	1348883	Identifier	pr		1348766	0					
ANR	1348884	Identifier	limit		1348766	1					
ANR	1348885	IfStatement	if ( * ++ r == '>' )		1348766	1					
ANR	1348886	Condition	* ++ r == '>'	62:20:2020:2030	1348766	0	True				
ANR	1348887	EqualityExpression	* ++ r == '>'		1348766	0		==			
ANR	1348888	UnaryOperationExpression	* ++ r		1348766	0					
ANR	1348889	UnaryOperator	*		1348766	0					
ANR	1348890	UnaryExpression	++ r		1348766	1					
ANR	1348891	IncDec	++		1348766	0					
ANR	1348892	Identifier	r		1348766	1					
ANR	1348893	PrimaryExpression	'>'		1348766	1					
ANR	1348894	CompoundStatement		21:33:904:904	1348766	1					
ANR	1348895	ExpressionStatement	rlimit = pr -> limit	64:20:2124:2142	1348766	0	True				
ANR	1348896	AssignmentExpression	rlimit = pr -> limit		1348766	0		=			
ANR	1348897	Identifier	rlimit		1348766	0					
ANR	1348898	PtrMemberAccess	pr -> limit		1348766	1					
ANR	1348899	Identifier	pr		1348766	0					
ANR	1348900	Identifier	limit		1348766	1					
ANR	1348901	ExpressionStatement	r = rlimit	65:20:2202:2212	1348766	1	True				
ANR	1348902	AssignmentExpression	r = rlimit		1348766	0		=			
ANR	1348903	Identifier	r		1348766	0					
ANR	1348904	Identifier	rlimit		1348766	1					
ANR	1348905	BreakStatement	break ;	66:20:2270:2275	1348766	2	True				
ANR	1348906	WhileStatement	while ( p < rlimit )		1348766	15					
ANR	1348907	Condition	p < rlimit	69:11:2312:2321	1348766	0	True				
ANR	1348908	RelationalExpression	p < rlimit		1348766	0		<			
ANR	1348909	Identifier	p		1348766	0					
ANR	1348910	Identifier	rlimit		1348766	1					
ANR	1348911	CompoundStatement		30:8:1228:1249	1348766	1					
ANR	1348912	IdentifierDeclStatement	int ch = * ++ p ;	70:8:2334:2347	1348766	0	True				
ANR	1348913	IdentifierDecl	ch = * ++ p		1348766	0					
ANR	1348914	IdentifierDeclType	int		1348766	0					
ANR	1348915	Identifier	ch		1348766	1					
ANR	1348916	AssignmentExpression	ch = * ++ p		1348766	2		=			
ANR	1348917	Identifier	ch		1348766	0					
ANR	1348918	UnaryOperationExpression	* ++ p		1348766	1					
ANR	1348919	UnaryOperator	*		1348766	0					
ANR	1348920	UnaryExpression	++ p		1348766	1					
ANR	1348921	IncDec	++		1348766	0					
ANR	1348922	Identifier	p		1348766	1					
ANR	1348923	IdentifierDeclStatement	uint ccode = ch - '!' ;	71:8:2357:2378	1348766	1	True				
ANR	1348924	IdentifierDecl	ccode = ch - '!'		1348766	0					
ANR	1348925	IdentifierDeclType	uint		1348766	0					
ANR	1348926	Identifier	ccode		1348766	1					
ANR	1348927	AssignmentExpression	ccode = ch - '!'		1348766	2		=			
ANR	1348928	Identifier	ccode		1348766	0					
ANR	1348929	AdditiveExpression	ch - '!'		1348766	1		-			
ANR	1348930	Identifier	ch		1348766	0					
ANR	1348931	PrimaryExpression	'!'		1348766	1					
ANR	1348932	IfStatement	if ( ccode < 85 )		1348766	2					
ANR	1348933	Condition	ccode < 85	73:12:2393:2402	1348766	0	True				
ANR	1348934	RelationalExpression	ccode < 85		1348766	0		<			
ANR	1348935	Identifier	ccode		1348766	0					
ANR	1348936	PrimaryExpression	85		1348766	1					
ANR	1348937	CompoundStatement		32:24:1276:1276	1348766	1					
ANR	1348938	IfStatement	if ( ccount == 4 )		1348766	0					
ANR	1348939	Condition	ccount == 4	74:16:2454:2464	1348766	0	True				
ANR	1348940	EqualityExpression	ccount == 4		1348766	0		==			
ANR	1348941	Identifier	ccount		1348766	0					
ANR	1348942	PrimaryExpression	4		1348766	1					
ANR	1348943	CompoundStatement		33:29:1338:1338	1348766	1					
ANR	1348944	IfStatement	if ( wlimit - q < 4 )		1348766	0					
ANR	1348945	Condition	wlimit - q < 4	79:20:2644:2657	1348766	0	True				
ANR	1348946	RelationalExpression	wlimit - q < 4		1348766	0		<			
ANR	1348947	AdditiveExpression	wlimit - q		1348766	0		-			
ANR	1348948	Identifier	wlimit		1348766	0					
ANR	1348949	Identifier	q		1348766	1					
ANR	1348950	PrimaryExpression	4		1348766	1					
ANR	1348951	CompoundStatement		38:36:1531:1531	1348766	1					
ANR	1348952	ExpressionStatement	p --	80:20:2682:2685	1348766	0	True				
ANR	1348953	PostIncDecOperationExpression	p --		1348766	0					
ANR	1348954	Identifier	p		1348766	0					
ANR	1348955	IncDec	--		1348766	1					
ANR	1348956	ExpressionStatement	status = 1	81:20:2707:2717	1348766	1	True				
ANR	1348957	AssignmentExpression	status = 1		1348766	0		=			
ANR	1348958	Identifier	status		1348766	0					
ANR	1348959	PrimaryExpression	1		1348766	1					
ANR	1348960	BreakStatement	break ;	82:20:2739:2744	1348766	2	True				
ANR	1348961	IfStatement	if ( word >= 0x03030303 && ccode > 0 )		1348766	1					
ANR	1348962	Condition	word >= 0x03030303 && ccode > 0	85:20:2856:2886	1348766	0	True				
ANR	1348963	AndExpression	word >= 0x03030303 && ccode > 0		1348766	0		&&			
ANR	1348964	RelationalExpression	word >= 0x03030303		1348766	0		>=			
ANR	1348965	Identifier	word		1348766	0					
ANR	1348966	PrimaryExpression	0x03030303		1348766	1					
ANR	1348967	RelationalExpression	ccode > 0		1348766	1		>			
ANR	1348968	Identifier	ccode		1348766	0					
ANR	1348969	PrimaryExpression	0		1348766	1					
ANR	1348970	CompoundStatement		44:53:1760:1760	1348766	1					
ANR	1348971	ExpressionStatement	status = ERRC	86:20:2911:2924	1348766	0	True				
ANR	1348972	AssignmentExpression	status = ERRC		1348766	0		=			
ANR	1348973	Identifier	status		1348766	0					
ANR	1348974	Identifier	ERRC		1348766	1					
ANR	1348975	BreakStatement	break ;	87:20:2946:2951	1348766	1	True				
ANR	1348976	ExpressionStatement	word = word * 85 + ccode	89:16:2987:3011	1348766	2	True				
ANR	1348977	AssignmentExpression	word = word * 85 + ccode		1348766	0		=			
ANR	1348978	Identifier	word		1348766	0					
ANR	1348979	AdditiveExpression	word * 85 + ccode		1348766	1		+			
ANR	1348980	MultiplicativeExpression	word * 85		1348766	0		*			
ANR	1348981	Identifier	word		1348766	0					
ANR	1348982	PrimaryExpression	85		1348766	1					
ANR	1348983	Identifier	ccode		1348766	1					
ANR	1348984	ExpressionStatement	q [ 1 ] = ( byte ) ( word >> 24 )	90:16:3029:3055	1348766	3	True				
ANR	1348985	AssignmentExpression	q [ 1 ] = ( byte ) ( word >> 24 )		1348766	0		=			
ANR	1348986	ArrayIndexing	q [ 1 ]		1348766	0					
ANR	1348987	Identifier	q		1348766	0					
ANR	1348988	PrimaryExpression	1		1348766	1					
ANR	1348989	CastExpression	( byte ) ( word >> 24 )		1348766	1					
ANR	1348990	CastTarget	byte		1348766	0					
ANR	1348991	ShiftExpression	word >> 24		1348766	1		>>			
ANR	1348992	Identifier	word		1348766	0					
ANR	1348993	PrimaryExpression	24		1348766	1					
ANR	1348994	ExpressionStatement	q [ 2 ] = ( byte ) ( word >> 16 )	91:16:3073:3099	1348766	4	True				
ANR	1348995	AssignmentExpression	q [ 2 ] = ( byte ) ( word >> 16 )		1348766	0		=			
ANR	1348996	ArrayIndexing	q [ 2 ]		1348766	0					
ANR	1348997	Identifier	q		1348766	0					
ANR	1348998	PrimaryExpression	2		1348766	1					
ANR	1348999	CastExpression	( byte ) ( word >> 16 )		1348766	1					
ANR	1349000	CastTarget	byte		1348766	0					
ANR	1349001	ShiftExpression	word >> 16		1348766	1		>>			
ANR	1349002	Identifier	word		1348766	0					
ANR	1349003	PrimaryExpression	16		1348766	1					
ANR	1349004	ExpressionStatement	q [ 3 ] = ( byte ) ( ( uint ) word >> 8 )	92:16:3117:3149	1348766	5	True				
ANR	1349005	AssignmentExpression	q [ 3 ] = ( byte ) ( ( uint ) word >> 8 )		1348766	0		=			
ANR	1349006	ArrayIndexing	q [ 3 ]		1348766	0					
ANR	1349007	Identifier	q		1348766	0					
ANR	1349008	PrimaryExpression	3		1348766	1					
ANR	1349009	CastExpression	( byte ) ( ( uint ) word >> 8 )		1348766	1					
ANR	1349010	CastTarget	byte		1348766	0					
ANR	1349011	ShiftExpression	( uint ) word >> 8		1348766	1		>>			
ANR	1349012	CastExpression	( uint ) word		1348766	0					
ANR	1349013	CastTarget	uint		1348766	0					
ANR	1349014	Identifier	word		1348766	1					
ANR	1349015	PrimaryExpression	8		1348766	1					
ANR	1349016	ExpressionStatement	q [ 4 ] = ( byte ) word	93:16:3167:3185	1348766	6	True				
ANR	1349017	AssignmentExpression	q [ 4 ] = ( byte ) word		1348766	0		=			
ANR	1349018	ArrayIndexing	q [ 4 ]		1348766	0					
ANR	1349019	Identifier	q		1348766	0					
ANR	1349020	PrimaryExpression	4		1348766	1					
ANR	1349021	CastExpression	( byte ) word		1348766	1					
ANR	1349022	CastTarget	byte		1348766	0					
ANR	1349023	Identifier	word		1348766	1					
ANR	1349024	ExpressionStatement	q += 4	94:16:3203:3209	1348766	7	True				
ANR	1349025	AssignmentExpression	q += 4		1348766	0		+=			
ANR	1349026	Identifier	q		1348766	0					
ANR	1349027	PrimaryExpression	4		1348766	1					
ANR	1349028	ExpressionStatement	word = 0	95:16:3227:3235	1348766	8	True				
ANR	1349029	AssignmentExpression	word = 0		1348766	0		=			
ANR	1349030	Identifier	word		1348766	0					
ANR	1349031	PrimaryExpression	0		1348766	1					
ANR	1349032	ExpressionStatement	ccount = 0	96:16:3253:3263	1348766	9	True				
ANR	1349033	AssignmentExpression	ccount = 0		1348766	0		=			
ANR	1349034	Identifier	ccount		1348766	0					
ANR	1349035	PrimaryExpression	0		1348766	1					
ANR	1349036	ElseStatement	else		1348766	0					
ANR	1349037	CompoundStatement		56:19:2155:2155	1348766	0					
ANR	1349038	ExpressionStatement	word = word * 85 + ccode	98:16:3302:3326	1348766	0	True				
ANR	1349039	AssignmentExpression	word = word * 85 + ccode		1348766	0		=			
ANR	1349040	Identifier	word		1348766	0					
ANR	1349041	AdditiveExpression	word * 85 + ccode		1348766	1		+			
ANR	1349042	MultiplicativeExpression	word * 85		1348766	0		*			
ANR	1349043	Identifier	word		1348766	0					
ANR	1349044	PrimaryExpression	85		1348766	1					
ANR	1349045	Identifier	ccode		1348766	1					
ANR	1349046	ExpressionStatement	++ ccount	99:16:3344:3352	1348766	1	True				
ANR	1349047	UnaryExpression	++ ccount		1348766	0					
ANR	1349048	IncDec	++		1348766	0					
ANR	1349049	Identifier	ccount		1348766	1					
ANR	1349050	ElseStatement	else		1348766	0					
ANR	1349051	IfStatement	if ( ch == 'z' && ccount == 0 )		1348766	0					
ANR	1349052	Condition	ch == 'z' && ccount == 0	101:19:3387:3410	1348766	0	True				
ANR	1349053	AndExpression	ch == 'z' && ccount == 0		1348766	0		&&			
ANR	1349054	EqualityExpression	ch == 'z'		1348766	0		==			
ANR	1349055	Identifier	ch		1348766	0					
ANR	1349056	PrimaryExpression	'z'		1348766	1					
ANR	1349057	EqualityExpression	ccount == 0		1348766	1		==			
ANR	1349058	Identifier	ccount		1348766	0					
ANR	1349059	PrimaryExpression	0		1348766	1					
ANR	1349060	CompoundStatement		60:45:2284:2284	1348766	1					
ANR	1349061	IfStatement	if ( wlimit - q < 4 )		1348766	0					
ANR	1349062	Condition	wlimit - q < 4	102:16:3431:3444	1348766	0	True				
ANR	1349063	RelationalExpression	wlimit - q < 4		1348766	0		<			
ANR	1349064	AdditiveExpression	wlimit - q		1348766	0		-			
ANR	1349065	Identifier	wlimit		1348766	0					
ANR	1349066	Identifier	q		1348766	1					
ANR	1349067	PrimaryExpression	4		1348766	1					
ANR	1349068	CompoundStatement		61:32:2318:2318	1348766	1					
ANR	1349069	ExpressionStatement	p --	103:16:3465:3468	1348766	0	True				
ANR	1349070	PostIncDecOperationExpression	p --		1348766	0					
ANR	1349071	Identifier	p		1348766	0					
ANR	1349072	IncDec	--		1348766	1					
ANR	1349073	ExpressionStatement	status = 1	104:16:3486:3496	1348766	1	True				
ANR	1349074	AssignmentExpression	status = 1		1348766	0		=			
ANR	1349075	Identifier	status		1348766	0					
ANR	1349076	PrimaryExpression	1		1348766	1					
ANR	1349077	BreakStatement	break ;	105:16:3514:3519	1348766	2	True				
ANR	1349078	ExpressionStatement	"q [ 1 ] = q [ 2 ] = q [ 3 ] = q [ 4 ] = 0 , q += 4"	107:12:3547:3600	1348766	1	True				
ANR	1349079	Expression	"q [ 1 ] = q [ 2 ] = q [ 3 ] = q [ 4 ] = 0 , q += 4"		1348766	0					
ANR	1349080	AssignmentExpression	q [ 1 ] = q [ 2 ] = q [ 3 ] = q [ 4 ] = 0		1348766	0		=			
ANR	1349081	ArrayIndexing	q [ 1 ]		1348766	0					
ANR	1349082	Identifier	q		1348766	0					
ANR	1349083	PrimaryExpression	1		1348766	1					
ANR	1349084	AssignmentExpression	q [ 2 ] = q [ 3 ] = q [ 4 ] = 0		1348766	1		=			
ANR	1349085	ArrayIndexing	q [ 2 ]		1348766	0					
ANR	1349086	Identifier	q		1348766	0					
ANR	1349087	PrimaryExpression	2		1348766	1					
ANR	1349088	AssignmentExpression	q [ 3 ] = q [ 4 ] = 0		1348766	1		=			
ANR	1349089	ArrayIndexing	q [ 3 ]		1348766	0					
ANR	1349090	Identifier	q		1348766	0					
ANR	1349091	PrimaryExpression	3		1348766	1					
ANR	1349092	AssignmentExpression	q [ 4 ] = 0		1348766	1		=			
ANR	1349093	ArrayIndexing	q [ 4 ]		1348766	0					
ANR	1349094	Identifier	q		1348766	0					
ANR	1349095	PrimaryExpression	4		1348766	1					
ANR	1349096	PrimaryExpression	0		1348766	1					
ANR	1349097	AssignmentExpression	q += 4		1348766	1		+=			
ANR	1349098	Identifier	q		1348766	0					
ANR	1349099	PrimaryExpression	4		1348766	1					
ANR	1349100	ElseStatement	else		1348766	0					
ANR	1349101	IfStatement	if ( scan_char_decoder [ ch ] == ctype_space )		1348766	0					
ANR	1349102	Condition	scan_char_decoder [ ch ] == ctype_space	109:19:3621:3656	1348766	0	True				
ANR	1349103	EqualityExpression	scan_char_decoder [ ch ] == ctype_space		1348766	0		==			
ANR	1349104	ArrayIndexing	scan_char_decoder [ ch ]		1348766	0					
ANR	1349105	Identifier	scan_char_decoder		1348766	0					
ANR	1349106	Identifier	ch		1348766	1					
ANR	1349107	Identifier	ctype_space		1348766	1					
ANR	1349108	ExpressionStatement	DO_NOTHING	110:12:3671:3681	1348766	1	True				
ANR	1349109	Identifier	DO_NOTHING		1348766	0					
ANR	1349110	ElseStatement	else		1348766	0					
ANR	1349111	IfStatement	if ( ch == '~' )		1348766	0					
ANR	1349112	Condition	ch == '~'	111:17:3700:3708	1348766	0	True				
ANR	1349113	EqualityExpression	ch == '~'		1348766	0		==			
ANR	1349114	Identifier	ch		1348766	0					
ANR	1349115	PrimaryExpression	'~'		1348766	1					
ANR	1349116	CompoundStatement		71:12:2596:2605	1348766	1					
ANR	1349117	IdentifierDeclStatement	int i = 1 ;	112:12:3725:3734	1348766	0	True				
ANR	1349118	IdentifierDecl	i = 1		1348766	0					
ANR	1349119	IdentifierDeclType	int		1348766	0					
ANR	1349120	Identifier	i		1348766	1					
ANR	1349121	AssignmentExpression	i = 1		1348766	2		=			
ANR	1349122	Identifier	i		1348766	0					
ANR	1349123	PrimaryExpression	1		1348766	1					
ANR	1349124	ExpressionStatement	rlimit = pr -> limit	114:12:3749:3767	1348766	1	True				
ANR	1349125	AssignmentExpression	rlimit = pr -> limit		1348766	0		=			
ANR	1349126	Identifier	rlimit		1348766	0					
ANR	1349127	PtrMemberAccess	pr -> limit		1348766	1					
ANR	1349128	Identifier	pr		1348766	0					
ANR	1349129	Identifier	limit		1348766	1					
ANR	1349130	IfStatement	if ( p == rlimit )		1348766	2					
ANR	1349131	Condition	p == rlimit	116:16:3857:3867	1348766	0	True				
ANR	1349132	EqualityExpression	p == rlimit		1348766	0		==			
ANR	1349133	Identifier	p		1348766	0					
ANR	1349134	Identifier	rlimit		1348766	1					
ANR	1349135	CompoundStatement		75:29:2741:2741	1348766	1					
ANR	1349136	IfStatement	if ( ! last )		1348766	0					
ANR	1349137	Condition	! last	117:20:3892:3896	1348766	0	True				
ANR	1349138	UnaryOperationExpression	! last		1348766	0					
ANR	1349139	UnaryOperator	!		1348766	0					
ANR	1349140	Identifier	last		1348766	1					
ANR	1349141	ExpressionStatement	p --	118:17:3916:3919	1348766	1	True				
ANR	1349142	PostIncDecOperationExpression	p --		1348766	0					
ANR	1349143	Identifier	p		1348766	0					
ANR	1349144	IncDec	--		1348766	1					
ANR	1349145	ElseStatement	else		1348766	0					
ANR	1349146	IfStatement	if ( ss -> pdf_rules )		1348766	0					
ANR	1349147	Condition	ss -> pdf_rules	119:25:3946:3958	1348766	0	True				
ANR	1349148	PtrMemberAccess	ss -> pdf_rules		1348766	0					
ANR	1349149	Identifier	ss		1348766	0					
ANR	1349150	Identifier	pdf_rules		1348766	1					
ANR	1349151	GotoStatement	goto finish ;	120:17:3978:3989	1348766	1	True				
ANR	1349152	Identifier	finish		1348766	0					
ANR	1349153	ElseStatement	else		1348766	0					
ANR	1349154	ExpressionStatement	status = ERRC	122:20:4032:4045	1348766	0	True				
ANR	1349155	AssignmentExpression	status = ERRC		1348766	0		=			
ANR	1349156	Identifier	status		1348766	0					
ANR	1349157	Identifier	ERRC		1348766	1					
ANR	1349158	BreakStatement	break ;	123:16:4063:4068	1348766	1	True				
ANR	1349159	IfStatement	if ( ( int ) ( wlimit - q ) < ccount - 1 )		1348766	3					
ANR	1349160	Condition	( int ) ( wlimit - q ) < ccount - 1	125:16:4100:4129	1348766	0	True				
ANR	1349161	RelationalExpression	( int ) ( wlimit - q ) < ccount - 1		1348766	0		<			
ANR	1349162	CastExpression	( int ) ( wlimit - q )		1348766	0					
ANR	1349163	CastTarget	int		1348766	0					
ANR	1349164	AdditiveExpression	wlimit - q		1348766	1		-			
ANR	1349165	Identifier	wlimit		1348766	0					
ANR	1349166	Identifier	q		1348766	1					
ANR	1349167	AdditiveExpression	ccount - 1		1348766	1		-			
ANR	1349168	Identifier	ccount		1348766	0					
ANR	1349169	PrimaryExpression	1		1348766	1					
ANR	1349170	CompoundStatement		84:48:3003:3003	1348766	1					
ANR	1349171	ExpressionStatement	status = 1	126:16:4150:4160	1348766	0	True				
ANR	1349172	AssignmentExpression	status = 1		1348766	0		=			
ANR	1349173	Identifier	status		1348766	0					
ANR	1349174	PrimaryExpression	1		1348766	1					
ANR	1349175	ExpressionStatement	p --	127:16:4178:4181	1348766	1	True				
ANR	1349176	PostIncDecOperationExpression	p --		1348766	0					
ANR	1349177	Identifier	p		1348766	0					
ANR	1349178	IncDec	--		1348766	1					
ANR	1349179	BreakStatement	break ;	128:16:4199:4204	1348766	2	True				
ANR	1349180	WhileStatement	while ( ( p [ i ] == 13 || p [ i ] == 10 ) && ( p + i <= rlimit ) )		1348766	4					
ANR	1349181	Condition	( p [ i ] == 13 || p [ i ] == 10 ) && ( p + i <= rlimit )	138:19:4627:4671	1348766	0	True				
ANR	1349182	AndExpression	( p [ i ] == 13 || p [ i ] == 10 ) && ( p + i <= rlimit )		1348766	0		&&			
ANR	1349183	OrExpression	p [ i ] == 13 || p [ i ] == 10		1348766	0		||			
ANR	1349184	EqualityExpression	p [ i ] == 13		1348766	0		==			
ANR	1349185	ArrayIndexing	p [ i ]		1348766	0					
ANR	1349186	Identifier	p		1348766	0					
ANR	1349187	Identifier	i		1348766	1					
ANR	1349188	PrimaryExpression	13		1348766	1					
ANR	1349189	EqualityExpression	p [ i ] == 10		1348766	1		==			
ANR	1349190	ArrayIndexing	p [ i ]		1348766	0					
ANR	1349191	Identifier	p		1348766	0					
ANR	1349192	Identifier	i		1348766	1					
ANR	1349193	PrimaryExpression	10		1348766	1					
ANR	1349194	RelationalExpression	p + i <= rlimit		1348766	1		<=			
ANR	1349195	AdditiveExpression	p + i		1348766	0		+			
ANR	1349196	Identifier	p		1348766	0					
ANR	1349197	Identifier	i		1348766	1					
ANR	1349198	Identifier	rlimit		1348766	1					
ANR	1349199	ExpressionStatement	i ++	139:16:4690:4693	1348766	1	True				
ANR	1349200	PostIncDecOperationExpression	i ++		1348766	0					
ANR	1349201	Identifier	i		1348766	0					
ANR	1349202	IncDec	++		1348766	1					
ANR	1349203	IfStatement	if ( p [ i ] != '>' )		1348766	5					
ANR	1349204	Condition	p [ i ] != '>'	140:16:4711:4721	1348766	0	True				
ANR	1349205	EqualityExpression	p [ i ] != '>'		1348766	0		!=			
ANR	1349206	ArrayIndexing	p [ i ]		1348766	0					
ANR	1349207	Identifier	p		1348766	0					
ANR	1349208	Identifier	i		1348766	1					
ANR	1349209	PrimaryExpression	'>'		1348766	1					
ANR	1349210	CompoundStatement		99:29:3595:3595	1348766	1					
ANR	1349211	IfStatement	if ( ss -> pdf_rules )		1348766	0					
ANR	1349212	Condition	ss -> pdf_rules	141:20:4746:4758	1348766	0	True				
ANR	1349213	PtrMemberAccess	ss -> pdf_rules		1348766	0					
ANR	1349214	Identifier	ss		1348766	0					
ANR	1349215	Identifier	pdf_rules		1348766	1					
ANR	1349216	CompoundStatement		100:35:3632:3632	1348766	1					
ANR	1349217	IfStatement	if ( p [ i ] == 13 || p [ i ] == 10 )		1348766	0					
ANR	1349218	Condition	p [ i ] == 13 || p [ i ] == 10	142:24:4787:4810	1348766	0	True				
ANR	1349219	OrExpression	p [ i ] == 13 || p [ i ] == 10		1348766	0		||			
ANR	1349220	EqualityExpression	p [ i ] == 13		1348766	0		==			
ANR	1349221	ArrayIndexing	p [ i ]		1348766	0					
ANR	1349222	Identifier	p		1348766	0					
ANR	1349223	Identifier	i		1348766	1					
ANR	1349224	PrimaryExpression	13		1348766	1					
ANR	1349225	EqualityExpression	p [ i ] == 10		1348766	1		==			
ANR	1349226	ArrayIndexing	p [ i ]		1348766	0					
ANR	1349227	Identifier	p		1348766	0					
ANR	1349228	Identifier	i		1348766	1					
ANR	1349229	PrimaryExpression	10		1348766	1					
ANR	1349230	CompoundStatement		101:50:3684:3684	1348766	1					
ANR	1349231	IfStatement	if ( ! last )		1348766	0					
ANR	1349232	Condition	! last	143:28:4843:4847	1348766	0	True				
ANR	1349233	UnaryOperationExpression	! last		1348766	0					
ANR	1349234	UnaryOperator	!		1348766	0					
ANR	1349235	Identifier	last		1348766	1					
ANR	1349236	BreakStatement	break ;	144:28:4878:4883	1348766	1	True				
ANR	1349237	ElseStatement	else		1348766	0					
ANR	1349238	CompoundStatement		104:27:3783:3783	1348766	0					
ANR	1349239	ExpressionStatement	p --	146:24:4938:4941	1348766	0	True				
ANR	1349240	PostIncDecOperationExpression	p --		1348766	0					
ANR	1349241	Identifier	p		1348766	0					
ANR	1349242	IncDec	--		1348766	1					
ANR	1349243	ElseStatement	else		1348766	0					
ANR	1349244	CompoundStatement		107:23:3859:3859	1348766	0					
ANR	1349245	IfStatement	if ( p + i == rlimit )		1348766	0					
ANR	1349246	Condition	p + i == rlimit	149:24:5014:5026	1348766	0	True				
ANR	1349247	EqualityExpression	p + i == rlimit		1348766	0		==			
ANR	1349248	AdditiveExpression	p + i		1348766	0		+			
ANR	1349249	Identifier	p		1348766	0					
ANR	1349250	Identifier	i		1348766	1					
ANR	1349251	Identifier	rlimit		1348766	1					
ANR	1349252	CompoundStatement		108:39:3900:3900	1348766	1					
ANR	1349253	IfStatement	if ( last )		1348766	0					
ANR	1349254	Condition	last	150:28:5059:5062	1348766	0	True				
ANR	1349255	Identifier	last		1348766	0					
ANR	1349256	ExpressionStatement	status = ERRC	151:28:5093:5106	1348766	1	True				
ANR	1349257	AssignmentExpression	status = ERRC		1348766	0		=			
ANR	1349258	Identifier	status		1348766	0					
ANR	1349259	Identifier	ERRC		1348766	1					
ANR	1349260	ElseStatement	else		1348766	0					
ANR	1349261	ExpressionStatement	p --	153:28:5165:5168	1348766	0	True				
ANR	1349262	PostIncDecOperationExpression	p --		1348766	0					
ANR	1349263	Identifier	p		1348766	0					
ANR	1349264	IncDec	--		1348766	1					
ANR	1349265	BreakStatement	break ;	155:20:5261:5266	1348766	1	True				
ANR	1349266	Label	finish :	158:10:5310:5316	1348766	6	True				
ANR	1349267	Identifier	finish		1348766	0					
ANR	1349268	ExpressionStatement	p += i	159:12:5330:5336	1348766	7	True				
ANR	1349269	AssignmentExpression	p += i		1348766	0		+=			
ANR	1349270	Identifier	p		1348766	0					
ANR	1349271	Identifier	i		1348766	1					
ANR	1349272	ExpressionStatement	pw -> ptr = q	160:12:5376:5387	1348766	8	True				
ANR	1349273	AssignmentExpression	pw -> ptr = q		1348766	0		=			
ANR	1349274	PtrMemberAccess	pw -> ptr		1348766	0					
ANR	1349275	Identifier	pw		1348766	0					
ANR	1349276	Identifier	ptr		1348766	1					
ANR	1349277	Identifier	q		1348766	1					
ANR	1349278	ExpressionStatement	"status = a85d_finish ( ccount , word , pw )"	161:12:5401:5439	1348766	9	True				
ANR	1349279	AssignmentExpression	"status = a85d_finish ( ccount , word , pw )"		1348766	0		=			
ANR	1349280	Identifier	status		1348766	0					
ANR	1349281	CallExpression	"a85d_finish ( ccount , word , pw )"		1348766	1					
ANR	1349282	Callee	a85d_finish		1348766	0					
ANR	1349283	Identifier	a85d_finish		1348766	0					
ANR	1349284	ArgumentList	ccount		1348766	1					
ANR	1349285	Argument	ccount		1348766	0					
ANR	1349286	Identifier	ccount		1348766	0					
ANR	1349287	Argument	word		1348766	1					
ANR	1349288	Identifier	word		1348766	0					
ANR	1349289	Argument	pw		1348766	2					
ANR	1349290	Identifier	pw		1348766	0					
ANR	1349291	ExpressionStatement	q = pw -> ptr	162:12:5453:5464	1348766	10	True				
ANR	1349292	AssignmentExpression	q = pw -> ptr		1348766	0		=			
ANR	1349293	Identifier	q		1348766	0					
ANR	1349294	PtrMemberAccess	pw -> ptr		1348766	1					
ANR	1349295	Identifier	pw		1348766	0					
ANR	1349296	Identifier	ptr		1348766	1					
ANR	1349297	BreakStatement	break ;	163:12:5478:5483	1348766	11	True				
ANR	1349298	ElseStatement	else		1348766	0					
ANR	1349299	CompoundStatement		123:15:4371:4371	1348766	0					
ANR	1349300	ExpressionStatement	status = ERRC	165:12:5547:5560	1348766	0	True				
ANR	1349301	AssignmentExpression	status = ERRC		1348766	0		=			
ANR	1349302	Identifier	status		1348766	0					
ANR	1349303	Identifier	ERRC		1348766	1					
ANR	1349304	BreakStatement	break ;	166:12:5574:5579	1348766	1	True				
ANR	1349305	ExpressionStatement	pw -> ptr = q	169:4:5601:5612	1348766	16	True				
ANR	1349306	AssignmentExpression	pw -> ptr = q		1348766	0		=			
ANR	1349307	PtrMemberAccess	pw -> ptr		1348766	0					
ANR	1349308	Identifier	pw		1348766	0					
ANR	1349309	Identifier	ptr		1348766	1					
ANR	1349310	Identifier	q		1348766	1					
ANR	1349311	IfStatement	if ( status == 0 && last )		1348766	17					
ANR	1349312	Condition	status == 0 && last	170:8:5622:5640	1348766	0	True				
ANR	1349313	AndExpression	status == 0 && last		1348766	0		&&			
ANR	1349314	EqualityExpression	status == 0		1348766	0		==			
ANR	1349315	Identifier	status		1348766	0					
ANR	1349316	PrimaryExpression	0		1348766	1					
ANR	1349317	Identifier	last		1348766	1					
ANR	1349318	CompoundStatement		129:29:4514:4514	1348766	1					
ANR	1349319	IfStatement	if ( ( int ) ( wlimit - q ) < ccount - 1 )		1348766	0					
ANR	1349320	Condition	( int ) ( wlimit - q ) < ccount - 1	171:12:5657:5686	1348766	0	True				
ANR	1349321	RelationalExpression	( int ) ( wlimit - q ) < ccount - 1		1348766	0		<			
ANR	1349322	CastExpression	( int ) ( wlimit - q )		1348766	0					
ANR	1349323	CastTarget	int		1348766	0					
ANR	1349324	AdditiveExpression	wlimit - q		1348766	1		-			
ANR	1349325	Identifier	wlimit		1348766	0					
ANR	1349326	Identifier	q		1348766	1					
ANR	1349327	AdditiveExpression	ccount - 1		1348766	1		-			
ANR	1349328	Identifier	ccount		1348766	0					
ANR	1349329	PrimaryExpression	1		1348766	1					
ANR	1349330	ExpressionStatement	status = 1	172:12:5701:5711	1348766	1	True				
ANR	1349331	AssignmentExpression	status = 1		1348766	0		=			
ANR	1349332	Identifier	status		1348766	0					
ANR	1349333	PrimaryExpression	1		1348766	1					
ANR	1349334	ElseStatement	else		1348766	0					
ANR	1349335	IfStatement	if ( ss -> require_eod )		1348766	0					
ANR	1349336	Condition	ss -> require_eod	173:17:5730:5744	1348766	0	True				
ANR	1349337	PtrMemberAccess	ss -> require_eod		1348766	0					
ANR	1349338	Identifier	ss		1348766	0					
ANR	1349339	Identifier	require_eod		1348766	1					
ANR	1349340	ExpressionStatement	status = ERRC	174:12:5759:5772	1348766	1	True				
ANR	1349341	AssignmentExpression	status = ERRC		1348766	0		=			
ANR	1349342	Identifier	status		1348766	0					
ANR	1349343	Identifier	ERRC		1348766	1					
ANR	1349344	ElseStatement	else		1348766	0					
ANR	1349345	ExpressionStatement	"status = a85d_finish ( ccount , word , pw )"	176:12:5799:5837	1348766	0	True				
ANR	1349346	AssignmentExpression	"status = a85d_finish ( ccount , word , pw )"		1348766	0		=			
ANR	1349347	Identifier	status		1348766	0					
ANR	1349348	CallExpression	"a85d_finish ( ccount , word , pw )"		1348766	1					
ANR	1349349	Callee	a85d_finish		1348766	0					
ANR	1349350	Identifier	a85d_finish		1348766	0					
ANR	1349351	ArgumentList	ccount		1348766	1					
ANR	1349352	Argument	ccount		1348766	0					
ANR	1349353	Identifier	ccount		1348766	0					
ANR	1349354	Argument	word		1348766	1					
ANR	1349355	Identifier	word		1348766	0					
ANR	1349356	Argument	pw		1348766	2					
ANR	1349357	Identifier	pw		1348766	0					
ANR	1349358	ExpressionStatement	pr -> ptr = p	178:4:5849:5860	1348766	18	True				
ANR	1349359	AssignmentExpression	pr -> ptr = p		1348766	0		=			
ANR	1349360	PtrMemberAccess	pr -> ptr		1348766	0					
ANR	1349361	Identifier	pr		1348766	0					
ANR	1349362	Identifier	ptr		1348766	1					
ANR	1349363	Identifier	p		1348766	1					
ANR	1349364	ExpressionStatement	ss -> odd = ccount	179:4:5866:5882	1348766	19	True				
ANR	1349365	AssignmentExpression	ss -> odd = ccount		1348766	0		=			
ANR	1349366	PtrMemberAccess	ss -> odd		1348766	0					
ANR	1349367	Identifier	ss		1348766	0					
ANR	1349368	Identifier	odd		1348766	1					
ANR	1349369	Identifier	ccount		1348766	1					
ANR	1349370	ExpressionStatement	ss -> word = word	180:4:5888:5903	1348766	20	True				
ANR	1349371	AssignmentExpression	ss -> word = word		1348766	0		=			
ANR	1349372	PtrMemberAccess	ss -> word		1348766	0					
ANR	1349373	Identifier	ss		1348766	0					
ANR	1349374	Identifier	word		1348766	1					
ANR	1349375	Identifier	word		1348766	1					
ANR	1349376	ReturnStatement	return status ;	181:4:5909:5922	1348766	21	True				
ANR	1349377	Identifier	status		1348766	0					
ANR	1349378	ReturnType	static int		1348766	1					
ANR	1349379	Identifier	s_A85D_process		1348766	2					
ANR	1349380	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last"		1348766	3					
ANR	1349381	Parameter	stream_state * st	40:15:1032:1048	1348766	0	True				
ANR	1349382	ParameterType	stream_state *		1348766	0					
ANR	1349383	Identifier	st		1348766	1					
ANR	1349384	Parameter	stream_cursor_read * pr	40:34:1051:1073	1348766	1	True				
ANR	1349385	ParameterType	stream_cursor_read *		1348766	0					
ANR	1349386	Identifier	pr		1348766	1					
ANR	1349387	Parameter	stream_cursor_write * pw	41:15:1091:1114	1348766	2	True				
ANR	1349388	ParameterType	stream_cursor_write *		1348766	0					
ANR	1349389	Identifier	pw		1348766	1					
ANR	1349390	Parameter	bool last	41:41:1117:1125	1348766	3	True				
ANR	1349391	ParameterType	bool		1348766	0					
ANR	1349392	Identifier	last		1348766	1					
ANR	1349393	CFGEntryNode	ENTRY		1348766		True				
ANR	1349394	CFGExitNode	EXIT		1348766		True				
ANR	1349395	Symbol	pr		1348766						
ANR	1349396	Symbol	* ss		1348766						
ANR	1349397	Symbol	pw		1348766						
ANR	1349398	Symbol	* ch		1348766						
ANR	1349399	Symbol	pr -> limit		1348766						
ANR	1349400	Symbol	pw -> limit		1348766						
ANR	1349401	Symbol	wlimit		1348766						
ANR	1349402	Symbol	ccount		1348766						
ANR	1349403	Symbol	pr -> ptr		1348766						
ANR	1349404	Symbol	pw -> ptr		1348766						
ANR	1349405	Symbol	ss		1348766						
ANR	1349406	Symbol	ss -> require_eod		1348766						
ANR	1349407	Symbol	st		1348766						
ANR	1349408	Symbol	rlimit		1348766						
ANR	1349409	Symbol	ss -> pdf_rules		1348766						
ANR	1349410	Symbol	last		1348766						
ANR	1349411	Symbol	* ++ p		1348766						
ANR	1349412	Symbol	max		1348766						
ANR	1349413	Symbol	ch		1348766						
ANR	1349414	Symbol	i		1348766						
ANR	1349415	Symbol	* ++ r		1348766						
ANR	1349416	Symbol	* pr		1348766						
ANR	1349417	Symbol	ctype_space		1348766						
ANR	1349418	Symbol	* pw		1348766						
ANR	1349419	Symbol	p		1348766						
ANR	1349420	Symbol	ss -> odd		1348766						
ANR	1349421	Symbol	q		1348766						
ANR	1349422	Symbol	ccode		1348766						
ANR	1349423	Symbol	r		1348766						
ANR	1349424	Symbol	scan_char_decoder		1348766						
ANR	1349425	Symbol	* i		1348766						
ANR	1349426	Symbol	* scan_char_decoder		1348766						
ANR	1349427	Symbol	ss -> word		1348766						
ANR	1349428	Symbol	* p		1348766						
ANR	1349429	Symbol	* q		1348766						
ANR	1349430	Symbol	* r		1348766						
ANR	1349431	Symbol	word		1348766						
ANR	1349432	Symbol	ERRC		1348766						
ANR	1349433	Symbol	a85d_finish		1348766						
ANR	1349434	Symbol	status		1348766						
ANR	1349435	Function	a85d_finish	184:0:5962:6775							
ANR	1349436	FunctionDef	"a85d_finish (int ccount , ulong word , stream_cursor_write * pw)"		1349435	0					
ANR	1349437	CompoundStatement		186:0:6035:6775	1349435	0					
ANR	1349438	IdentifierDeclStatement	byte * q = pw -> ptr ;	188:4:6101:6118	1349435	0	True				
ANR	1349439	IdentifierDecl	* q = pw -> ptr		1349435	0					
ANR	1349440	IdentifierDeclType	byte *		1349435	0					
ANR	1349441	Identifier	q		1349435	1					
ANR	1349442	AssignmentExpression	* q = pw -> ptr		1349435	2		=			
ANR	1349443	Identifier	q		1349435	0					
ANR	1349444	PtrMemberAccess	pw -> ptr		1349435	1					
ANR	1349445	Identifier	pw		1349435	0					
ANR	1349446	Identifier	ptr		1349435	1					
ANR	1349447	IdentifierDeclStatement	int status = EOFC ;	189:4:6124:6141	1349435	1	True				
ANR	1349448	IdentifierDecl	status = EOFC		1349435	0					
ANR	1349449	IdentifierDeclType	int		1349435	0					
ANR	1349450	Identifier	status		1349435	1					
ANR	1349451	AssignmentExpression	status = EOFC		1349435	2		=			
ANR	1349452	Identifier	EOFC		1349435	0					
ANR	1349453	Identifier	EOFC		1349435	1					
ANR	1349454	SwitchStatement	switch ( ccount )		1349435	2					
ANR	1349455	Condition	ccount	191:12:6156:6161	1349435	0	True				
ANR	1349456	Identifier	ccount		1349435	0					
ANR	1349457	CompoundStatement		6:20:128:128	1349435	1					
ANR	1349458	Label	case 0 :	192:8:6174:6180	1349435	0	True				
ANR	1349459	BreakStatement	break ;	193:12:6194:6199	1349435	1	True				
ANR	1349460	Label	case 1 :	194:8:6209:6215	1349435	2	True				
ANR	1349461	ExpressionStatement	status = ERRC	195:12:6249:6262	1349435	3	True				
ANR	1349462	AssignmentExpression	status = ERRC		1349435	0		=			
ANR	1349463	Identifier	status		1349435	0					
ANR	1349464	Identifier	ERRC		1349435	1					
ANR	1349465	BreakStatement	break ;	196:12:6276:6281	1349435	4	True				
ANR	1349466	Label	case 2 :	197:8:6291:6297	1349435	5	True				
ANR	1349467	ExpressionStatement	word = word * ( 85L * 85 * 85 ) + 85L * 85 * 85 - 1L	198:12:6329:6379	1349435	6	True				
ANR	1349468	AssignmentExpression	word = word * ( 85L * 85 * 85 ) + 85L * 85 * 85 - 1L		1349435	0		=			
ANR	1349469	Identifier	word		1349435	0					
ANR	1349470	AdditiveExpression	word * ( 85L * 85 * 85 ) + 85L * 85 * 85 - 1L		1349435	1		+			
ANR	1349471	MultiplicativeExpression	word * ( 85L * 85 * 85 )		1349435	0		*			
ANR	1349472	Identifier	word		1349435	0					
ANR	1349473	MultiplicativeExpression	85L * 85 * 85		1349435	1		*			
ANR	1349474	PrimaryExpression	85L		1349435	0					
ANR	1349475	MultiplicativeExpression	85 * 85		1349435	1		*			
ANR	1349476	PrimaryExpression	85		1349435	0					
ANR	1349477	PrimaryExpression	85		1349435	1					
ANR	1349478	AdditiveExpression	85L * 85 * 85 - 1L		1349435	1		-			
ANR	1349479	MultiplicativeExpression	85L * 85 * 85		1349435	0		*			
ANR	1349480	PrimaryExpression	85L		1349435	0					
ANR	1349481	MultiplicativeExpression	85 * 85		1349435	1		*			
ANR	1349482	PrimaryExpression	85		1349435	0					
ANR	1349483	PrimaryExpression	85		1349435	1					
ANR	1349484	PrimaryExpression	1L		1349435	1					
ANR	1349485	GotoStatement	goto o1 ;	199:12:6393:6400	1349435	7	True				
ANR	1349486	Identifier	o1		1349435	0					
ANR	1349487	Label	case 3 :	200:8:6410:6416	1349435	8	True				
ANR	1349488	ExpressionStatement	word = word * ( 85L * 85 ) + 85L * 85L - 1L	201:12:6449:6490	1349435	9	True				
ANR	1349489	AssignmentExpression	word = word * ( 85L * 85 ) + 85L * 85L - 1L		1349435	0		=			
ANR	1349490	Identifier	word		1349435	0					
ANR	1349491	AdditiveExpression	word * ( 85L * 85 ) + 85L * 85L - 1L		1349435	1		+			
ANR	1349492	MultiplicativeExpression	word * ( 85L * 85 )		1349435	0		*			
ANR	1349493	Identifier	word		1349435	0					
ANR	1349494	MultiplicativeExpression	85L * 85		1349435	1		*			
ANR	1349495	PrimaryExpression	85L		1349435	0					
ANR	1349496	PrimaryExpression	85		1349435	1					
ANR	1349497	AdditiveExpression	85L * 85L - 1L		1349435	1		-			
ANR	1349498	MultiplicativeExpression	85L * 85L		1349435	0		*			
ANR	1349499	PrimaryExpression	85L		1349435	0					
ANR	1349500	PrimaryExpression	85L		1349435	1					
ANR	1349501	PrimaryExpression	1L		1349435	1					
ANR	1349502	GotoStatement	goto o2 ;	202:12:6504:6511	1349435	10	True				
ANR	1349503	Identifier	o2		1349435	0					
ANR	1349504	Label	case 4 :	203:8:6521:6527	1349435	11	True				
ANR	1349505	ExpressionStatement	word = word * 85L + 84L	204:12:6560:6583	1349435	12	True				
ANR	1349506	AssignmentExpression	word = word * 85L + 84L		1349435	0		=			
ANR	1349507	Identifier	word		1349435	0					
ANR	1349508	AdditiveExpression	word * 85L + 84L		1349435	1		+			
ANR	1349509	MultiplicativeExpression	word * 85L		1349435	0		*			
ANR	1349510	Identifier	word		1349435	0					
ANR	1349511	PrimaryExpression	85L		1349435	1					
ANR	1349512	PrimaryExpression	84L		1349435	1					
ANR	1349513	ExpressionStatement	q [ 3 ] = ( byte ) ( word >> 8 )	205:12:6597:6622	1349435	13	True				
ANR	1349514	AssignmentExpression	q [ 3 ] = ( byte ) ( word >> 8 )		1349435	0		=			
ANR	1349515	ArrayIndexing	q [ 3 ]		1349435	0					
ANR	1349516	Identifier	q		1349435	0					
ANR	1349517	PrimaryExpression	3		1349435	1					
ANR	1349518	CastExpression	( byte ) ( word >> 8 )		1349435	1					
ANR	1349519	CastTarget	byte		1349435	0					
ANR	1349520	ShiftExpression	word >> 8		1349435	1		>>			
ANR	1349521	Identifier	word		1349435	0					
ANR	1349522	PrimaryExpression	8		1349435	1					
ANR	1349523	Label	o2 :	206:0:6624:6626	1349435	14	True				
ANR	1349524	Identifier	o2		1349435	0					
ANR	1349525	ExpressionStatement	q [ 2 ] = ( byte ) ( word >> 16 )	206:8:6632:6658	1349435	15	True				
ANR	1349526	AssignmentExpression	q [ 2 ] = ( byte ) ( word >> 16 )		1349435	0		=			
ANR	1349527	ArrayIndexing	q [ 2 ]		1349435	0					
ANR	1349528	Identifier	q		1349435	0					
ANR	1349529	PrimaryExpression	2		1349435	1					
ANR	1349530	CastExpression	( byte ) ( word >> 16 )		1349435	1					
ANR	1349531	CastTarget	byte		1349435	0					
ANR	1349532	ShiftExpression	word >> 16		1349435	1		>>			
ANR	1349533	Identifier	word		1349435	0					
ANR	1349534	PrimaryExpression	16		1349435	1					
ANR	1349535	Label	o1 :	207:0:6660:6662	1349435	16	True				
ANR	1349536	Identifier	o1		1349435	0					
ANR	1349537	ExpressionStatement	q [ 1 ] = ( byte ) ( word >> 24 )	207:8:6668:6694	1349435	17	True				
ANR	1349538	AssignmentExpression	q [ 1 ] = ( byte ) ( word >> 24 )		1349435	0		=			
ANR	1349539	ArrayIndexing	q [ 1 ]		1349435	0					
ANR	1349540	Identifier	q		1349435	0					
ANR	1349541	PrimaryExpression	1		1349435	1					
ANR	1349542	CastExpression	( byte ) ( word >> 24 )		1349435	1					
ANR	1349543	CastTarget	byte		1349435	0					
ANR	1349544	ShiftExpression	word >> 24		1349435	1		>>			
ANR	1349545	Identifier	word		1349435	0					
ANR	1349546	PrimaryExpression	24		1349435	1					
ANR	1349547	ExpressionStatement	q += ccount - 1	208:12:6708:6723	1349435	18	True				
ANR	1349548	AssignmentExpression	q += ccount - 1		1349435	0		+=			
ANR	1349549	Identifier	q		1349435	0					
ANR	1349550	AdditiveExpression	ccount - 1		1349435	1		-			
ANR	1349551	Identifier	ccount		1349435	0					
ANR	1349552	PrimaryExpression	1		1349435	1					
ANR	1349553	ExpressionStatement	pw -> ptr = q	209:12:6737:6748	1349435	19	True				
ANR	1349554	AssignmentExpression	pw -> ptr = q		1349435	0		=			
ANR	1349555	PtrMemberAccess	pw -> ptr		1349435	0					
ANR	1349556	Identifier	pw		1349435	0					
ANR	1349557	Identifier	ptr		1349435	1					
ANR	1349558	Identifier	q		1349435	1					
ANR	1349559	ReturnStatement	return status ;	211:4:6760:6773	1349435	3	True				
ANR	1349560	Identifier	status		1349435	0					
ANR	1349561	ReturnType	static int		1349435	1					
ANR	1349562	Identifier	a85d_finish		1349435	2					
ANR	1349563	ParameterList	"int ccount , ulong word , stream_cursor_write * pw"		1349435	3					
ANR	1349564	Parameter	int ccount	185:12:5985:5994	1349435	0	True				
ANR	1349565	ParameterType	int		1349435	0					
ANR	1349566	Identifier	ccount		1349435	1					
ANR	1349567	Parameter	ulong word	185:24:5997:6006	1349435	1	True				
ANR	1349568	ParameterType	ulong		1349435	0					
ANR	1349569	Identifier	word		1349435	1					
ANR	1349570	Parameter	stream_cursor_write * pw	185:36:6009:6032	1349435	2	True				
ANR	1349571	ParameterType	stream_cursor_write *		1349435	0					
ANR	1349572	Identifier	pw		1349435	1					
ANR	1349573	CFGEntryNode	ENTRY		1349435		True				
ANR	1349574	CFGExitNode	EXIT		1349435		True				
ANR	1349575	Symbol	q		1349435						
ANR	1349576	Symbol	pw		1349435						
ANR	1349577	Symbol	EOFC		1349435						
ANR	1349578	Symbol	ccount		1349435						
ANR	1349579	Symbol	* q		1349435						
ANR	1349580	Symbol	word		1349435						
ANR	1349581	Symbol	* pw		1349435						
ANR	1349582	Symbol	ERRC		1349435						
ANR	1349583	Symbol	pw -> ptr		1349435						
ANR	1349584	Symbol	status		1349435						
ANR	1349585	DeclStmt									
ANR	1349586	Decl							const stream_template	const stream_template	s_A85D_template
