command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	834493	File	data/converged/CVE-2018-16863_ghostpdl/base_gxccache.c								
ANR	834494	DeclStmt									
ANR	834495	Decl							byte	"byte * ( const cached_char * , gs_memory_t * )"	compress_alpha_bits
ANR	834496	DeclStmt									
ANR	834497	Decl							const gs_log2_scale_point	const gs_log2_scale_point	scale_log2_1
ANR	834498	Function	gx_compute_char_matrix	48:0:1367:1727							
ANR	834499	FunctionDef	"gx_compute_char_matrix (const gs_matrix * char_tm , const gs_log2_scale_point * log2_scale , float * mxx , float * mxy , float * myx , float * myy)"		834498	0					
ANR	834500	CompoundStatement		51:0:1512:1727	834498	0					
ANR	834501	IdentifierDeclStatement	int scale_x = 1 << log2_scale -> x ;	52:4:1518:1550	834498	0	True				
ANR	834502	IdentifierDecl	scale_x = 1 << log2_scale -> x		834498	0					
ANR	834503	IdentifierDeclType	int		834498	0					
ANR	834504	Identifier	scale_x		834498	1					
ANR	834505	AssignmentExpression	scale_x = 1 << log2_scale -> x		834498	2		=			
ANR	834506	Identifier	scale_x		834498	0					
ANR	834507	ShiftExpression	1 << log2_scale -> x		834498	1		<<			
ANR	834508	PrimaryExpression	1		834498	0					
ANR	834509	PtrMemberAccess	log2_scale -> x		834498	1					
ANR	834510	Identifier	log2_scale		834498	0					
ANR	834511	Identifier	x		834498	1					
ANR	834512	IdentifierDeclStatement	int scale_y = 1 << log2_scale -> y ;	53:4:1556:1588	834498	1	True				
ANR	834513	IdentifierDecl	scale_y = 1 << log2_scale -> y		834498	0					
ANR	834514	IdentifierDeclType	int		834498	0					
ANR	834515	Identifier	scale_y		834498	1					
ANR	834516	AssignmentExpression	scale_y = 1 << log2_scale -> y		834498	2		=			
ANR	834517	Identifier	scale_y		834498	0					
ANR	834518	ShiftExpression	1 << log2_scale -> y		834498	1		<<			
ANR	834519	PrimaryExpression	1		834498	0					
ANR	834520	PtrMemberAccess	log2_scale -> y		834498	1					
ANR	834521	Identifier	log2_scale		834498	0					
ANR	834522	Identifier	y		834498	1					
ANR	834523	ExpressionStatement	* mxx = char_tm -> xx * scale_x	55:4:1595:1623	834498	2	True				
ANR	834524	AssignmentExpression	* mxx = char_tm -> xx * scale_x		834498	0		=			
ANR	834525	UnaryOperationExpression	* mxx		834498	0					
ANR	834526	UnaryOperator	*		834498	0					
ANR	834527	Identifier	mxx		834498	1					
ANR	834528	MultiplicativeExpression	char_tm -> xx * scale_x		834498	1		*			
ANR	834529	PtrMemberAccess	char_tm -> xx		834498	0					
ANR	834530	Identifier	char_tm		834498	0					
ANR	834531	Identifier	xx		834498	1					
ANR	834532	Identifier	scale_x		834498	1					
ANR	834533	ExpressionStatement	* mxy = char_tm -> xy * scale_x	56:4:1629:1657	834498	3	True				
ANR	834534	AssignmentExpression	* mxy = char_tm -> xy * scale_x		834498	0		=			
ANR	834535	UnaryOperationExpression	* mxy		834498	0					
ANR	834536	UnaryOperator	*		834498	0					
ANR	834537	Identifier	mxy		834498	1					
ANR	834538	MultiplicativeExpression	char_tm -> xy * scale_x		834498	1		*			
ANR	834539	PtrMemberAccess	char_tm -> xy		834498	0					
ANR	834540	Identifier	char_tm		834498	0					
ANR	834541	Identifier	xy		834498	1					
ANR	834542	Identifier	scale_x		834498	1					
ANR	834543	ExpressionStatement	* myx = char_tm -> yx * scale_y	57:4:1663:1691	834498	4	True				
ANR	834544	AssignmentExpression	* myx = char_tm -> yx * scale_y		834498	0		=			
ANR	834545	UnaryOperationExpression	* myx		834498	0					
ANR	834546	UnaryOperator	*		834498	0					
ANR	834547	Identifier	myx		834498	1					
ANR	834548	MultiplicativeExpression	char_tm -> yx * scale_y		834498	1		*			
ANR	834549	PtrMemberAccess	char_tm -> yx		834498	0					
ANR	834550	Identifier	char_tm		834498	0					
ANR	834551	Identifier	yx		834498	1					
ANR	834552	Identifier	scale_y		834498	1					
ANR	834553	ExpressionStatement	* myy = char_tm -> yy * scale_y	58:4:1697:1725	834498	5	True				
ANR	834554	AssignmentExpression	* myy = char_tm -> yy * scale_y		834498	0		=			
ANR	834555	UnaryOperationExpression	* myy		834498	0					
ANR	834556	UnaryOperator	*		834498	0					
ANR	834557	Identifier	myy		834498	1					
ANR	834558	MultiplicativeExpression	char_tm -> yy * scale_y		834498	1		*			
ANR	834559	PtrMemberAccess	char_tm -> yy		834498	0					
ANR	834560	Identifier	char_tm		834498	0					
ANR	834561	Identifier	yy		834498	1					
ANR	834562	Identifier	scale_y		834498	1					
ANR	834563	ReturnType	void		834498	1					
ANR	834564	Identifier	gx_compute_char_matrix		834498	2					
ANR	834565	ParameterList	"const gs_matrix * char_tm , const gs_log2_scale_point * log2_scale , float * mxx , float * mxy , float * myx , float * myy"		834498	3					
ANR	834566	Parameter	const gs_matrix * char_tm	49:23:1395:1418	834498	0	True				
ANR	834567	ParameterType	const gs_matrix *		834498	0					
ANR	834568	Identifier	char_tm		834498	1					
ANR	834569	Parameter	const gs_log2_scale_point * log2_scale	49:49:1421:1457	834498	1	True				
ANR	834570	ParameterType	const gs_log2_scale_point *		834498	0					
ANR	834571	Identifier	log2_scale		834498	1					
ANR	834572	Parameter	float * mxx	50:4:1464:1473	834498	2	True				
ANR	834573	ParameterType	float *		834498	0					
ANR	834574	Identifier	mxx		834498	1					
ANR	834575	Parameter	float * mxy	50:16:1476:1485	834498	3	True				
ANR	834576	ParameterType	float *		834498	0					
ANR	834577	Identifier	mxy		834498	1					
ANR	834578	Parameter	float * myx	50:28:1488:1497	834498	4	True				
ANR	834579	ParameterType	float *		834498	0					
ANR	834580	Identifier	myx		834498	1					
ANR	834581	Parameter	float * myy	50:40:1500:1509	834498	5	True				
ANR	834582	ParameterType	float *		834498	0					
ANR	834583	Identifier	myy		834498	1					
ANR	834584	CFGEntryNode	ENTRY		834498		True				
ANR	834585	CFGExitNode	EXIT		834498		True				
ANR	834586	Symbol	* char_tm		834498						
ANR	834587	Symbol	scale_y		834498						
ANR	834588	Symbol	scale_x		834498						
ANR	834589	Symbol	char_tm -> xx		834498						
ANR	834590	Symbol	char_tm -> yy		834498						
ANR	834591	Symbol	char_tm -> yx		834498						
ANR	834592	Symbol	char_tm -> xy		834498						
ANR	834593	Symbol	mxx		834498						
ANR	834594	Symbol	myy		834498						
ANR	834595	Symbol	log2_scale -> y		834498						
ANR	834596	Symbol	myx		834498						
ANR	834597	Symbol	log2_scale -> x		834498						
ANR	834598	Symbol	log2_scale		834498						
ANR	834599	Symbol	char_tm		834498						
ANR	834600	Symbol	mxy		834498						
ANR	834601	Symbol	* myx		834498						
ANR	834602	Symbol	* mxx		834498						
ANR	834603	Symbol	* myy		834498						
ANR	834604	Symbol	* mxy		834498						
ANR	834605	Symbol	* log2_scale		834498						
ANR	834606	Function	gx_compute_ccache_key	61:0:1730:2543							
ANR	834607	FunctionDef	"gx_compute_ccache_key (gs_font * pfont , const gs_matrix * char_tm , const gs_log2_scale_point * log2_scale , bool design_grid , float * mxx , float * mxy , float * myx , float * myy)"		834606	0					
ANR	834608	CompoundStatement		65:0:1913:2543	834606	0					
ANR	834609	IfStatement	if ( design_grid && ( pfont -> FontType == ft_TrueType || pfont -> FontType == ft_CID_TrueType ) )		834606	0					
ANR	834610	Condition	design_grid && ( pfont -> FontType == ft_TrueType || pfont -> FontType == ft_CID_TrueType )	66:8:1923:2019	834606	0	True				
ANR	834611	AndExpression	design_grid && ( pfont -> FontType == ft_TrueType || pfont -> FontType == ft_CID_TrueType )		834606	0		&&			
ANR	834612	Identifier	design_grid		834606	0					
ANR	834613	OrExpression	pfont -> FontType == ft_TrueType || pfont -> FontType == ft_CID_TrueType		834606	1		||			
ANR	834614	EqualityExpression	pfont -> FontType == ft_TrueType		834606	0		==			
ANR	834615	PtrMemberAccess	pfont -> FontType		834606	0					
ANR	834616	Identifier	pfont		834606	0					
ANR	834617	Identifier	FontType		834606	1					
ANR	834618	Identifier	ft_TrueType		834606	1					
ANR	834619	EqualityExpression	pfont -> FontType == ft_CID_TrueType		834606	1		==			
ANR	834620	PtrMemberAccess	pfont -> FontType		834606	0					
ANR	834621	Identifier	pfont		834606	0					
ANR	834622	Identifier	FontType		834606	1					
ANR	834623	Identifier	ft_CID_TrueType		834606	1					
ANR	834624	CompoundStatement		3:84:108:108	834606	1					
ANR	834625	ExpressionStatement	* mxx = * mxy = * myx = * myy = 0	76:8:2428:2457	834606	0	True				
ANR	834626	AssignmentExpression	* mxx = * mxy = * myx = * myy = 0		834606	0		=			
ANR	834627	UnaryOperationExpression	* mxx		834606	0					
ANR	834628	UnaryOperator	*		834606	0					
ANR	834629	Identifier	mxx		834606	1					
ANR	834630	AssignmentExpression	* mxy = * myx = * myy = 0		834606	1		=			
ANR	834631	UnaryOperationExpression	* mxy		834606	0					
ANR	834632	UnaryOperator	*		834606	0					
ANR	834633	Identifier	mxy		834606	1					
ANR	834634	AssignmentExpression	* myx = * myy = 0		834606	1		=			
ANR	834635	UnaryOperationExpression	* myx		834606	0					
ANR	834636	UnaryOperator	*		834606	0					
ANR	834637	Identifier	myx		834606	1					
ANR	834638	AssignmentExpression	* myy = 0		834606	1		=			
ANR	834639	UnaryOperationExpression	* myy		834606	0					
ANR	834640	UnaryOperator	*		834606	0					
ANR	834641	Identifier	myy		834606	1					
ANR	834642	PrimaryExpression	0		834606	1					
ANR	834643	ElseStatement	else		834606	0					
ANR	834644	ExpressionStatement	"gx_compute_char_matrix ( char_tm , log2_scale , mxx , mxy , myx , myy )"	78:8:2478:2541	834606	0	True				
ANR	834645	CallExpression	"gx_compute_char_matrix ( char_tm , log2_scale , mxx , mxy , myx , myy )"		834606	0					
ANR	834646	Callee	gx_compute_char_matrix		834606	0					
ANR	834647	Identifier	gx_compute_char_matrix		834606	0					
ANR	834648	ArgumentList	char_tm		834606	1					
ANR	834649	Argument	char_tm		834606	0					
ANR	834650	Identifier	char_tm		834606	0					
ANR	834651	Argument	log2_scale		834606	1					
ANR	834652	Identifier	log2_scale		834606	0					
ANR	834653	Argument	mxx		834606	2					
ANR	834654	Identifier	mxx		834606	0					
ANR	834655	Argument	mxy		834606	3					
ANR	834656	Identifier	mxy		834606	0					
ANR	834657	Argument	myx		834606	4					
ANR	834658	Identifier	myx		834606	0					
ANR	834659	Argument	myy		834606	5					
ANR	834660	Identifier	myy		834606	0					
ANR	834661	ReturnType	void		834606	1					
ANR	834662	Identifier	gx_compute_ccache_key		834606	2					
ANR	834663	ParameterList	"gs_font * pfont , const gs_matrix * char_tm , const gs_log2_scale_point * log2_scale , bool design_grid , float * mxx , float * mxy , float * myx , float * myy"		834606	3					
ANR	834664	Parameter	gs_font * pfont	62:22:1757:1771	834606	0	True				
ANR	834665	ParameterType	gs_font *		834606	0					
ANR	834666	Identifier	pfont		834606	1					
ANR	834667	Parameter	const gs_matrix * char_tm	62:39:1774:1797	834606	1	True				
ANR	834668	ParameterType	const gs_matrix *		834606	0					
ANR	834669	Identifier	char_tm		834606	1					
ANR	834670	Parameter	const gs_log2_scale_point * log2_scale	63:4:1804:1840	834606	2	True				
ANR	834671	ParameterType	const gs_log2_scale_point *		834606	0					
ANR	834672	Identifier	log2_scale		834606	1					
ANR	834673	Parameter	bool design_grid	63:43:1843:1858	834606	3	True				
ANR	834674	ParameterType	bool		834606	0					
ANR	834675	Identifier	design_grid		834606	1					
ANR	834676	Parameter	float * mxx	64:4:1865:1874	834606	4	True				
ANR	834677	ParameterType	float *		834606	0					
ANR	834678	Identifier	mxx		834606	1					
ANR	834679	Parameter	float * mxy	64:16:1877:1886	834606	5	True				
ANR	834680	ParameterType	float *		834606	0					
ANR	834681	Identifier	mxy		834606	1					
ANR	834682	Parameter	float * myx	64:28:1889:1898	834606	6	True				
ANR	834683	ParameterType	float *		834606	0					
ANR	834684	Identifier	myx		834606	1					
ANR	834685	Parameter	float * myy	64:40:1901:1910	834606	7	True				
ANR	834686	ParameterType	float *		834606	0					
ANR	834687	Identifier	myy		834606	1					
ANR	834688	CFGEntryNode	ENTRY		834606		True				
ANR	834689	CFGExitNode	EXIT		834606		True				
ANR	834690	Symbol	pfont		834606						
ANR	834691	Symbol	ft_TrueType		834606						
ANR	834692	Symbol	mxx		834606						
ANR	834693	Symbol	myy		834606						
ANR	834694	Symbol	design_grid		834606						
ANR	834695	Symbol	myx		834606						
ANR	834696	Symbol	log2_scale		834606						
ANR	834697	Symbol	char_tm		834606						
ANR	834698	Symbol	mxy		834606						
ANR	834699	Symbol	* pfont		834606						
ANR	834700	Symbol	pfont -> FontType		834606						
ANR	834701	Symbol	ft_CID_TrueType		834606						
ANR	834702	Symbol	* myx		834606						
ANR	834703	Symbol	* mxx		834606						
ANR	834704	Symbol	* myy		834606						
ANR	834705	Symbol	* mxy		834606						
ANR	834706	Function	gx_lookup_fm_pair	82:0:2615:4910							
ANR	834707	FunctionDef	"gx_lookup_fm_pair (gs_font * pfont , const gs_matrix * char_tm , const gs_log2_scale_point * log2_scale , bool design_grid , cached_fm_pair * * ppair)"		834706	0					
ANR	834708	CompoundStatement		85:0:2765:4910	834706	0					
ANR	834709	IdentifierDeclStatement	"float mxx , mxy , myx , myy ;"	86:4:2771:2795	834706	0	True				
ANR	834710	IdentifierDecl	mxx		834706	0					
ANR	834711	IdentifierDeclType	float		834706	0					
ANR	834712	Identifier	mxx		834706	1					
ANR	834713	IdentifierDecl	mxy		834706	1					
ANR	834714	IdentifierDeclType	float		834706	0					
ANR	834715	Identifier	mxy		834706	1					
ANR	834716	IdentifierDecl	myx		834706	2					
ANR	834717	IdentifierDeclType	float		834706	0					
ANR	834718	Identifier	myx		834706	1					
ANR	834719	IdentifierDecl	myy		834706	3					
ANR	834720	IdentifierDeclType	float		834706	0					
ANR	834721	Identifier	myy		834706	1					
ANR	834722	IdentifierDeclStatement	gs_font * font = pfont ;	87:4:2801:2822	834706	1	True				
ANR	834723	IdentifierDecl	* font = pfont		834706	0					
ANR	834724	IdentifierDeclType	gs_font *		834706	0					
ANR	834725	Identifier	font		834706	1					
ANR	834726	AssignmentExpression	* font = pfont		834706	2		=			
ANR	834727	Identifier	pfont		834706	0					
ANR	834728	Identifier	pfont		834706	1					
ANR	834729	Statement	register	88:4:2828:2835	834706	2	True				
ANR	834730	IdentifierDeclStatement	gs_font_dir * dir = font -> dir ;	88:13:2837:2865	834706	3	True				
ANR	834731	IdentifierDecl	* dir = font -> dir		834706	0					
ANR	834732	IdentifierDeclType	gs_font_dir *		834706	0					
ANR	834733	Identifier	dir		834706	1					
ANR	834734	AssignmentExpression	* dir = font -> dir		834706	2		=			
ANR	834735	Identifier	dir		834706	0					
ANR	834736	PtrMemberAccess	font -> dir		834706	1					
ANR	834737	Identifier	font		834706	0					
ANR	834738	Identifier	dir		834706	1					
ANR	834739	Statement	register	89:4:2871:2878	834706	4	True				
ANR	834740	IdentifierDeclStatement	cached_fm_pair * pair = dir -> fmcache . mdata + dir -> fmcache . used ;	89:13:2880:2941	834706	5	True				
ANR	834741	IdentifierDecl	* pair = dir -> fmcache . mdata + dir -> fmcache . used		834706	0					
ANR	834742	IdentifierDeclType	cached_fm_pair *		834706	0					
ANR	834743	Identifier	pair		834706	1					
ANR	834744	AssignmentExpression	* pair = dir -> fmcache . mdata + dir -> fmcache . used		834706	2		=			
ANR	834745	Identifier	pair		834706	0					
ANR	834746	AdditiveExpression	dir -> fmcache . mdata + dir -> fmcache . used		834706	1		+			
ANR	834747	MemberAccess	dir -> fmcache . mdata		834706	0					
ANR	834748	PtrMemberAccess	dir -> fmcache		834706	0					
ANR	834749	Identifier	dir		834706	0					
ANR	834750	Identifier	fmcache		834706	1					
ANR	834751	Identifier	mdata		834706	1					
ANR	834752	MemberAccess	dir -> fmcache . used		834706	1					
ANR	834753	PtrMemberAccess	dir -> fmcache		834706	0					
ANR	834754	Identifier	dir		834706	0					
ANR	834755	Identifier	fmcache		834706	1					
ANR	834756	Identifier	used		834706	1					
ANR	834757	IdentifierDeclStatement	int count = dir -> fmcache . msize ;	90:4:2947:2977	834706	6	True				
ANR	834758	IdentifierDecl	count = dir -> fmcache . msize		834706	0					
ANR	834759	IdentifierDeclType	int		834706	0					
ANR	834760	Identifier	count		834706	1					
ANR	834761	AssignmentExpression	count = dir -> fmcache . msize		834706	2		=			
ANR	834762	Identifier	count		834706	0					
ANR	834763	MemberAccess	dir -> fmcache . msize		834706	1					
ANR	834764	PtrMemberAccess	dir -> fmcache		834706	0					
ANR	834765	Identifier	dir		834706	0					
ANR	834766	Identifier	fmcache		834706	1					
ANR	834767	Identifier	msize		834706	1					
ANR	834768	IdentifierDeclStatement	gs_uid uid ;	91:4:2983:2993	834706	7	True				
ANR	834769	IdentifierDecl	uid		834706	0					
ANR	834770	IdentifierDeclType	gs_uid		834706	0					
ANR	834771	Identifier	uid		834706	1					
ANR	834772	ExpressionStatement	"gx_compute_ccache_key ( pfont , char_tm , log2_scale , design_grid , & mxx , & mxy , & myx , & myy )"	93:4:3000:3114	834706	8	True				
ANR	834773	CallExpression	"gx_compute_ccache_key ( pfont , char_tm , log2_scale , design_grid , & mxx , & mxy , & myx , & myy )"		834706	0					
ANR	834774	Callee	gx_compute_ccache_key		834706	0					
ANR	834775	Identifier	gx_compute_ccache_key		834706	0					
ANR	834776	ArgumentList	pfont		834706	1					
ANR	834777	Argument	pfont		834706	0					
ANR	834778	Identifier	pfont		834706	0					
ANR	834779	Argument	char_tm		834706	1					
ANR	834780	Identifier	char_tm		834706	0					
ANR	834781	Argument	log2_scale		834706	2					
ANR	834782	Identifier	log2_scale		834706	0					
ANR	834783	Argument	design_grid		834706	3					
ANR	834784	Identifier	design_grid		834706	0					
ANR	834785	Argument	& mxx		834706	4					
ANR	834786	UnaryOperationExpression	& mxx		834706	0					
ANR	834787	UnaryOperator	&		834706	0					
ANR	834788	Identifier	mxx		834706	1					
ANR	834789	Argument	& mxy		834706	5					
ANR	834790	UnaryOperationExpression	& mxy		834706	0					
ANR	834791	UnaryOperator	&		834706	0					
ANR	834792	Identifier	mxy		834706	1					
ANR	834793	Argument	& myx		834706	6					
ANR	834794	UnaryOperationExpression	& myx		834706	0					
ANR	834795	UnaryOperator	&		834706	0					
ANR	834796	Identifier	myx		834706	1					
ANR	834797	Argument	& myy		834706	7					
ANR	834798	UnaryOperationExpression	& myy		834706	0					
ANR	834799	UnaryOperator	&		834706	0					
ANR	834800	Identifier	myy		834706	1					
ANR	834801	IfStatement	if ( font -> FontType == ft_composite || font -> PaintType != 0 )		834706	9					
ANR	834802	Condition	font -> FontType == ft_composite || font -> PaintType != 0	95:8:3124:3177	834706	0	True				
ANR	834803	OrExpression	font -> FontType == ft_composite || font -> PaintType != 0		834706	0		||			
ANR	834804	EqualityExpression	font -> FontType == ft_composite		834706	0		==			
ANR	834805	PtrMemberAccess	font -> FontType		834706	0					
ANR	834806	Identifier	font		834706	0					
ANR	834807	Identifier	FontType		834706	1					
ANR	834808	Identifier	ft_composite		834706	1					
ANR	834809	EqualityExpression	font -> PaintType != 0		834706	1		!=			
ANR	834810	PtrMemberAccess	font -> PaintType		834706	0					
ANR	834811	Identifier	font		834706	0					
ANR	834812	Identifier	PaintType		834706	1					
ANR	834813	PrimaryExpression	0		834706	1					
ANR	834814	CompoundStatement		11:64:414:414	834706	1					
ANR	834815	ExpressionStatement	uid_set_invalid ( & uid )	96:8:3225:3246	834706	0	True				
ANR	834816	CallExpression	uid_set_invalid ( & uid )		834706	0					
ANR	834817	Callee	uid_set_invalid		834706	0					
ANR	834818	Identifier	uid_set_invalid		834706	0					
ANR	834819	ArgumentList	& uid		834706	1					
ANR	834820	Argument	& uid		834706	0					
ANR	834821	UnaryOperationExpression	& uid		834706	0					
ANR	834822	UnaryOperator	&		834706	0					
ANR	834823	Identifier	uid		834706	1					
ANR	834824	ElseStatement	else		834706	0					
ANR	834825	CompoundStatement		13:11:493:493	834706	0					
ANR	834826	ExpressionStatement	uid = ( ( gs_font_base * ) font ) -> UID	98:8:3269:3303	834706	0	True				
ANR	834827	AssignmentExpression	uid = ( ( gs_font_base * ) font ) -> UID		834706	0		=			
ANR	834828	Identifier	uid		834706	0					
ANR	834829	PtrMemberAccess	( ( gs_font_base * ) font ) -> UID		834706	1					
ANR	834830	CastExpression	( gs_font_base * ) font		834706	0					
ANR	834831	CastTarget	gs_font_base *		834706	0					
ANR	834832	Identifier	font		834706	1					
ANR	834833	Identifier	UID		834706	1					
ANR	834834	IfStatement	if ( uid_is_valid ( & uid ) )		834706	1					
ANR	834835	Condition	uid_is_valid ( & uid )	99:12:3317:3334	834706	0	True				
ANR	834836	CallExpression	uid_is_valid ( & uid )		834706	0					
ANR	834837	Callee	uid_is_valid		834706	0					
ANR	834838	Identifier	uid_is_valid		834706	0					
ANR	834839	ArgumentList	& uid		834706	1					
ANR	834840	Argument	& uid		834706	0					
ANR	834841	UnaryOperationExpression	& uid		834706	0					
ANR	834842	UnaryOperator	&		834706	0					
ANR	834843	Identifier	uid		834706	1					
ANR	834844	ExpressionStatement	font = 0	100:12:3349:3357	834706	1	True				
ANR	834845	AssignmentExpression	font = 0		834706	0		=			
ANR	834846	Identifier	font		834706	0					
ANR	834847	PrimaryExpression	0		834706	1					
ANR	834848	ForStatement	for ( ; count -- ; pair = dir -> fmcache . mdata + pair -> next )		834706	10					
ANR	834849	Condition	count --	102:10:3375:3381	834706	0	True				
ANR	834850	PostIncDecOperationExpression	count --		834706	0					
ANR	834851	Identifier	count		834706	0					
ANR	834852	IncDec	--		834706	1					
ANR	834853	AssignmentExpression	pair = dir -> fmcache . mdata + pair -> next	102:19:3384:3421	834706	1	True	=			
ANR	834854	Identifier	pair		834706	0					
ANR	834855	AdditiveExpression	dir -> fmcache . mdata + pair -> next		834706	1		+			
ANR	834856	MemberAccess	dir -> fmcache . mdata		834706	0					
ANR	834857	PtrMemberAccess	dir -> fmcache		834706	0					
ANR	834858	Identifier	dir		834706	0					
ANR	834859	Identifier	fmcache		834706	1					
ANR	834860	Identifier	mdata		834706	1					
ANR	834861	PtrMemberAccess	pair -> next		834706	1					
ANR	834862	Identifier	pair		834706	0					
ANR	834863	Identifier	next		834706	1					
ANR	834864	CompoundStatement		18:59:658:658	834706	2					
ANR	834865	IfStatement	if ( font != 0 )		834706	0					
ANR	834866	Condition	font != 0	107:12:3648:3656	834706	0	True				
ANR	834867	EqualityExpression	font != 0		834706	0		!=			
ANR	834868	Identifier	font		834706	0					
ANR	834869	PrimaryExpression	0		834706	1					
ANR	834870	CompoundStatement		23:23:893:893	834706	1					
ANR	834871	IfStatement	if ( pair -> font != font )		834706	0					
ANR	834872	Condition	pair -> font != font	108:16:3677:3694	834706	0	True				
ANR	834873	EqualityExpression	pair -> font != font		834706	0		!=			
ANR	834874	PtrMemberAccess	pair -> font		834706	0					
ANR	834875	Identifier	pair		834706	0					
ANR	834876	Identifier	font		834706	1					
ANR	834877	Identifier	font		834706	1					
ANR	834878	ContinueStatement	continue ;	109:16:3713:3721	834706	1	True				
ANR	834879	ElseStatement	else		834706	0					
ANR	834880	CompoundStatement		26:15:972:972	834706	0					
ANR	834881	IfStatement	"if ( ! uid_equal ( & pair -> UID , & uid ) || pair -> FontType != pfont -> FontType )"		834706	0					
ANR	834882	Condition	"! uid_equal ( & pair -> UID , & uid ) || pair -> FontType != pfont -> FontType"	111:16:3756:3836	834706	0	True				
ANR	834883	OrExpression	"! uid_equal ( & pair -> UID , & uid ) || pair -> FontType != pfont -> FontType"		834706	0		||			
ANR	834884	UnaryOperationExpression	"! uid_equal ( & pair -> UID , & uid )"		834706	0					
ANR	834885	UnaryOperator	!		834706	0					
ANR	834886	CallExpression	"uid_equal ( & pair -> UID , & uid )"		834706	1					
ANR	834887	Callee	uid_equal		834706	0					
ANR	834888	Identifier	uid_equal		834706	0					
ANR	834889	ArgumentList	& pair -> UID		834706	1					
ANR	834890	Argument	& pair -> UID		834706	0					
ANR	834891	UnaryOperationExpression	& pair -> UID		834706	0					
ANR	834892	UnaryOperator	&		834706	0					
ANR	834893	PtrMemberAccess	pair -> UID		834706	1					
ANR	834894	Identifier	pair		834706	0					
ANR	834895	Identifier	UID		834706	1					
ANR	834896	Argument	& uid		834706	1					
ANR	834897	UnaryOperationExpression	& uid		834706	0					
ANR	834898	UnaryOperator	&		834706	0					
ANR	834899	Identifier	uid		834706	1					
ANR	834900	EqualityExpression	pair -> FontType != pfont -> FontType		834706	1		!=			
ANR	834901	PtrMemberAccess	pair -> FontType		834706	0					
ANR	834902	Identifier	pair		834706	0					
ANR	834903	Identifier	FontType		834706	1					
ANR	834904	PtrMemberAccess	pfont -> FontType		834706	1					
ANR	834905	Identifier	pfont		834706	0					
ANR	834906	Identifier	FontType		834706	1					
ANR	834907	ContinueStatement	continue ;	114:16:3872:3880	834706	1	True				
ANR	834908	IfStatement	if ( pair -> mxx == mxx && pair -> mxy == mxy && pair -> myx == myx && pair -> myy == myy && pair -> design_grid == design_grid )		834706	1					
ANR	834909	Condition	pair -> mxx == mxx && pair -> mxy == mxy && pair -> myx == myx && pair -> myy == myy && pair -> design_grid == design_grid	116:12:3904:4039	834706	0	True				
ANR	834910	AndExpression	pair -> mxx == mxx && pair -> mxy == mxy && pair -> myx == myx && pair -> myy == myy && pair -> design_grid == design_grid		834706	0		&&			
ANR	834911	EqualityExpression	pair -> mxx == mxx		834706	0		==			
ANR	834912	PtrMemberAccess	pair -> mxx		834706	0					
ANR	834913	Identifier	pair		834706	0					
ANR	834914	Identifier	mxx		834706	1					
ANR	834915	Identifier	mxx		834706	1					
ANR	834916	AndExpression	pair -> mxy == mxy && pair -> myx == myx && pair -> myy == myy && pair -> design_grid == design_grid		834706	1		&&			
ANR	834917	EqualityExpression	pair -> mxy == mxy		834706	0		==			
ANR	834918	PtrMemberAccess	pair -> mxy		834706	0					
ANR	834919	Identifier	pair		834706	0					
ANR	834920	Identifier	mxy		834706	1					
ANR	834921	Identifier	mxy		834706	1					
ANR	834922	AndExpression	pair -> myx == myx && pair -> myy == myy && pair -> design_grid == design_grid		834706	1		&&			
ANR	834923	EqualityExpression	pair -> myx == myx		834706	0		==			
ANR	834924	PtrMemberAccess	pair -> myx		834706	0					
ANR	834925	Identifier	pair		834706	0					
ANR	834926	Identifier	myx		834706	1					
ANR	834927	Identifier	myx		834706	1					
ANR	834928	AndExpression	pair -> myy == myy && pair -> design_grid == design_grid		834706	1		&&			
ANR	834929	EqualityExpression	pair -> myy == myy		834706	0		==			
ANR	834930	PtrMemberAccess	pair -> myy		834706	0					
ANR	834931	Identifier	pair		834706	0					
ANR	834932	Identifier	myy		834706	1					
ANR	834933	Identifier	myy		834706	1					
ANR	834934	EqualityExpression	pair -> design_grid == design_grid		834706	1		==			
ANR	834935	PtrMemberAccess	pair -> design_grid		834706	0					
ANR	834936	Identifier	pair		834706	0					
ANR	834937	Identifier	design_grid		834706	1					
ANR	834938	Identifier	design_grid		834706	1					
ANR	834939	CompoundStatement		35:12:1290:1298	834706	1					
ANR	834940	IdentifierDeclStatement	int code ;	119:12:4056:4064	834706	0	True				
ANR	834941	IdentifierDecl	code		834706	0					
ANR	834942	IdentifierDeclType	int		834706	0					
ANR	834943	Identifier	code		834706	1					
ANR	834944	IfStatement	if ( pair -> font == 0 )		834706	1					
ANR	834945	Condition	pair -> font == 0	121:16:4083:4097	834706	0	True				
ANR	834946	EqualityExpression	pair -> font == 0		834706	0		==			
ANR	834947	PtrMemberAccess	pair -> font		834706	0					
ANR	834948	Identifier	pair		834706	0					
ANR	834949	Identifier	font		834706	1					
ANR	834950	PrimaryExpression	0		834706	1					
ANR	834951	CompoundStatement		37:33:1334:1334	834706	1					
ANR	834952	ExpressionStatement	pair -> font = pfont	122:16:4118:4136	834706	0	True				
ANR	834953	AssignmentExpression	pair -> font = pfont		834706	0		=			
ANR	834954	PtrMemberAccess	pair -> font		834706	0					
ANR	834955	Identifier	pair		834706	0					
ANR	834956	Identifier	font		834706	1					
ANR	834957	Identifier	pfont		834706	1					
ANR	834958	ExpressionStatement	"if_debug2m ( 'k' , pfont -> memory , ""[k]updating pair 0x%lx with font 0x%lx\\n"" , ( ulong ) pair , ( ulong ) pfont )"	123:16:4154:4284	834706	1	True				
ANR	834959	CallExpression	"if_debug2m ( 'k' , pfont -> memory , ""[k]updating pair 0x%lx with font 0x%lx\\n"" , ( ulong ) pair , ( ulong ) pfont )"		834706	0					
ANR	834960	Callee	if_debug2m		834706	0					
ANR	834961	Identifier	if_debug2m		834706	0					
ANR	834962	ArgumentList	'k'		834706	1					
ANR	834963	Argument	'k'		834706	0					
ANR	834964	PrimaryExpression	'k'		834706	0					
ANR	834965	Argument	pfont -> memory		834706	1					
ANR	834966	PtrMemberAccess	pfont -> memory		834706	0					
ANR	834967	Identifier	pfont		834706	0					
ANR	834968	Identifier	memory		834706	1					
ANR	834969	Argument	"""[k]updating pair 0x%lx with font 0x%lx\\n"""		834706	2					
ANR	834970	PrimaryExpression	"""[k]updating pair 0x%lx with font 0x%lx\\n"""		834706	0					
ANR	834971	Argument	( ulong ) pair		834706	3					
ANR	834972	CastExpression	( ulong ) pair		834706	0					
ANR	834973	CastTarget	ulong		834706	0					
ANR	834974	Identifier	pair		834706	1					
ANR	834975	Argument	( ulong ) pfont		834706	4					
ANR	834976	CastExpression	( ulong ) pfont		834706	0					
ANR	834977	CastTarget	ulong		834706	0					
ANR	834978	Identifier	pfont		834706	1					
ANR	834979	ElseStatement	else		834706	0					
ANR	834980	CompoundStatement		41:19:1539:1539	834706	0					
ANR	834981	ExpressionStatement	"if_debug2m ( 'k' , pfont -> memory , ""[k]found pair 0x%lx: font=0x%lx\\n"" , ( ulong ) pair , ( ulong ) pair -> font )"	126:16:4323:4451	834706	0	True				
ANR	834982	CallExpression	"if_debug2m ( 'k' , pfont -> memory , ""[k]found pair 0x%lx: font=0x%lx\\n"" , ( ulong ) pair , ( ulong ) pair -> font )"		834706	0					
ANR	834983	Callee	if_debug2m		834706	0					
ANR	834984	Identifier	if_debug2m		834706	0					
ANR	834985	ArgumentList	'k'		834706	1					
ANR	834986	Argument	'k'		834706	0					
ANR	834987	PrimaryExpression	'k'		834706	0					
ANR	834988	Argument	pfont -> memory		834706	1					
ANR	834989	PtrMemberAccess	pfont -> memory		834706	0					
ANR	834990	Identifier	pfont		834706	0					
ANR	834991	Identifier	memory		834706	1					
ANR	834992	Argument	"""[k]found pair 0x%lx: font=0x%lx\\n"""		834706	2					
ANR	834993	PrimaryExpression	"""[k]found pair 0x%lx: font=0x%lx\\n"""		834706	0					
ANR	834994	Argument	( ulong ) pair		834706	3					
ANR	834995	CastExpression	( ulong ) pair		834706	0					
ANR	834996	CastTarget	ulong		834706	0					
ANR	834997	Identifier	pair		834706	1					
ANR	834998	Argument	( ulong ) pair -> font		834706	4					
ANR	834999	CastExpression	( ulong ) pair -> font		834706	0					
ANR	835000	CastTarget	ulong		834706	0					
ANR	835001	PtrMemberAccess	pair -> font		834706	1					
ANR	835002	Identifier	pair		834706	0					
ANR	835003	Identifier	font		834706	1					
ANR	835004	ExpressionStatement	"code = gx_touch_fm_pair ( dir , pair )"	129:12:4479:4513	834706	2	True				
ANR	835005	AssignmentExpression	"code = gx_touch_fm_pair ( dir , pair )"		834706	0		=			
ANR	835006	Identifier	code		834706	0					
ANR	835007	CallExpression	"gx_touch_fm_pair ( dir , pair )"		834706	1					
ANR	835008	Callee	gx_touch_fm_pair		834706	0					
ANR	835009	Identifier	gx_touch_fm_pair		834706	0					
ANR	835010	ArgumentList	dir		834706	1					
ANR	835011	Argument	dir		834706	0					
ANR	835012	Identifier	dir		834706	0					
ANR	835013	Argument	pair		834706	1					
ANR	835014	Identifier	pair		834706	0					
ANR	835015	IfStatement	if ( code < 0 )		834706	3					
ANR	835016	Condition	code < 0	130:16:4531:4538	834706	0	True				
ANR	835017	RelationalExpression	code < 0		834706	0		<			
ANR	835018	Identifier	code		834706	0					
ANR	835019	PrimaryExpression	0		834706	1					
ANR	835020	ReturnStatement	return code ;	131:16:4557:4568	834706	1	True				
ANR	835021	Identifier	code		834706	0					
ANR	835022	ExpressionStatement	"code = gx_provide_fm_pair_attributes ( dir , pfont , pair , char_tm , log2_scale , design_grid )"	132:12:4582:4702	834706	4	True				
ANR	835023	AssignmentExpression	"code = gx_provide_fm_pair_attributes ( dir , pfont , pair , char_tm , log2_scale , design_grid )"		834706	0		=			
ANR	835024	Identifier	code		834706	0					
ANR	835025	CallExpression	"gx_provide_fm_pair_attributes ( dir , pfont , pair , char_tm , log2_scale , design_grid )"		834706	1					
ANR	835026	Callee	gx_provide_fm_pair_attributes		834706	0					
ANR	835027	Identifier	gx_provide_fm_pair_attributes		834706	0					
ANR	835028	ArgumentList	dir		834706	1					
ANR	835029	Argument	dir		834706	0					
ANR	835030	Identifier	dir		834706	0					
ANR	835031	Argument	pfont		834706	1					
ANR	835032	Identifier	pfont		834706	0					
ANR	835033	Argument	pair		834706	2					
ANR	835034	Identifier	pair		834706	0					
ANR	835035	Argument	char_tm		834706	3					
ANR	835036	Identifier	char_tm		834706	0					
ANR	835037	Argument	log2_scale		834706	4					
ANR	835038	Identifier	log2_scale		834706	0					
ANR	835039	Argument	design_grid		834706	5					
ANR	835040	Identifier	design_grid		834706	0					
ANR	835041	IfStatement	if ( code < 0 )		834706	5					
ANR	835042	Condition	code < 0	134:16:4720:4727	834706	0	True				
ANR	835043	RelationalExpression	code < 0		834706	0		<			
ANR	835044	Identifier	code		834706	0					
ANR	835045	PrimaryExpression	0		834706	1					
ANR	835046	ReturnStatement	return code ;	135:16:4746:4757	834706	1	True				
ANR	835047	Identifier	code		834706	0					
ANR	835048	ExpressionStatement	* ppair = pair	136:12:4771:4784	834706	6	True				
ANR	835049	AssignmentExpression	* ppair = pair		834706	0		=			
ANR	835050	UnaryOperationExpression	* ppair		834706	0					
ANR	835051	UnaryOperator	*		834706	0					
ANR	835052	Identifier	ppair		834706	1					
ANR	835053	Identifier	pair		834706	1					
ANR	835054	ReturnStatement	return 0 ;	137:12:4798:4806	834706	7	True				
ANR	835055	PrimaryExpression	0		834706	0					
ANR	835056	ReturnStatement	"return gx_add_fm_pair ( dir , pfont , & uid , char_tm , log2_scale , design_grid , ppair ) ;"	140:4:4828:4908	834706	11	True				
ANR	835057	CallExpression	"gx_add_fm_pair ( dir , pfont , & uid , char_tm , log2_scale , design_grid , ppair )"		834706	0					
ANR	835058	Callee	gx_add_fm_pair		834706	0					
ANR	835059	Identifier	gx_add_fm_pair		834706	0					
ANR	835060	ArgumentList	dir		834706	1					
ANR	835061	Argument	dir		834706	0					
ANR	835062	Identifier	dir		834706	0					
ANR	835063	Argument	pfont		834706	1					
ANR	835064	Identifier	pfont		834706	0					
ANR	835065	Argument	& uid		834706	2					
ANR	835066	UnaryOperationExpression	& uid		834706	0					
ANR	835067	UnaryOperator	&		834706	0					
ANR	835068	Identifier	uid		834706	1					
ANR	835069	Argument	char_tm		834706	3					
ANR	835070	Identifier	char_tm		834706	0					
ANR	835071	Argument	log2_scale		834706	4					
ANR	835072	Identifier	log2_scale		834706	0					
ANR	835073	Argument	design_grid		834706	5					
ANR	835074	Identifier	design_grid		834706	0					
ANR	835075	Argument	ppair		834706	6					
ANR	835076	Identifier	ppair		834706	0					
ANR	835077	ReturnType	int		834706	1					
ANR	835078	Identifier	gx_lookup_fm_pair		834706	2					
ANR	835079	ParameterList	"gs_font * pfont , const gs_matrix * char_tm , const gs_log2_scale_point * log2_scale , bool design_grid , cached_fm_pair * * ppair"		834706	3					
ANR	835080	Parameter	gs_font * pfont	83:18:2637:2651	834706	0	True				
ANR	835081	ParameterType	gs_font *		834706	0					
ANR	835082	Identifier	pfont		834706	1					
ANR	835083	Parameter	const gs_matrix * char_tm	83:35:2654:2677	834706	1	True				
ANR	835084	ParameterType	const gs_matrix *		834706	0					
ANR	835085	Identifier	char_tm		834706	1					
ANR	835086	Parameter	const gs_log2_scale_point * log2_scale	84:4:2684:2720	834706	2	True				
ANR	835087	ParameterType	const gs_log2_scale_point *		834706	0					
ANR	835088	Identifier	log2_scale		834706	1					
ANR	835089	Parameter	bool design_grid	84:43:2723:2738	834706	3	True				
ANR	835090	ParameterType	bool		834706	0					
ANR	835091	Identifier	design_grid		834706	1					
ANR	835092	Parameter	cached_fm_pair * * ppair	84:61:2741:2762	834706	4	True				
ANR	835093	ParameterType	cached_fm_pair * *		834706	0					
ANR	835094	Identifier	ppair		834706	1					
ANR	835095	CFGEntryNode	ENTRY		834706		True				
ANR	835096	CFGExitNode	EXIT		834706		True				
ANR	835097	Symbol	pair -> mxx		834706						
ANR	835098	Symbol	( ( gs_font_base * ) font ) -> UID		834706						
ANR	835099	Symbol	pair -> mxy		834706						
ANR	835100	Symbol	gx_add_fm_pair		834706						
ANR	835101	Symbol	dir		834706						
ANR	835102	Symbol	design_grid		834706						
ANR	835103	Symbol	char_tm		834706						
ANR	835104	Symbol	dir -> fmcache		834706						
ANR	835105	Symbol	uid_is_valid		834706						
ANR	835106	Symbol	& mxy		834706						
ANR	835107	Symbol	ppair		834706						
ANR	835108	Symbol	& mxx		834706						
ANR	835109	Symbol	* font		834706						
ANR	835110	Symbol	pair -> myy		834706						
ANR	835111	Symbol	& pair -> UID		834706						
ANR	835112	Symbol	pair -> myx		834706						
ANR	835113	Symbol	count		834706						
ANR	835114	Symbol	mxx		834706						
ANR	835115	Symbol	mxy		834706						
ANR	835116	Symbol	* pair		834706						
ANR	835117	Symbol	gx_touch_fm_pair		834706						
ANR	835118	Symbol	dir -> fmcache . msize		834706						
ANR	835119	Symbol	dir -> fmcache . used		834706						
ANR	835120	Symbol	pair -> FontType		834706						
ANR	835121	Symbol	code		834706						
ANR	835122	Symbol	pfont -> memory		834706						
ANR	835123	Symbol	* dir		834706						
ANR	835124	Symbol	pair -> design_grid		834706						
ANR	835125	Symbol	myy		834706						
ANR	835126	Symbol	myx		834706						
ANR	835127	Symbol	pair -> font		834706						
ANR	835128	Symbol	uid		834706						
ANR	835129	Symbol	pfont -> FontType		834706						
ANR	835130	Symbol	font -> FontType		834706						
ANR	835131	Symbol	gx_provide_fm_pair_attributes		834706						
ANR	835132	Symbol	font -> PaintType		834706						
ANR	835133	Symbol	dir -> fmcache . mdata		834706						
ANR	835134	Symbol	pfont		834706						
ANR	835135	Symbol	pair -> next		834706						
ANR	835136	Symbol	* ppair		834706						
ANR	835137	Symbol	ft_composite		834706						
ANR	835138	Symbol	log2_scale		834706						
ANR	835139	Symbol	pair		834706						
ANR	835140	Symbol	& uid		834706						
ANR	835141	Symbol	* pfont		834706						
ANR	835142	Symbol	& myy		834706						
ANR	835143	Symbol	& myx		834706						
ANR	835144	Symbol	uid_equal		834706						
ANR	835145	Symbol	font -> dir		834706						
ANR	835146	Symbol	font		834706						
ANR	835147	Function	gx_lookup_cached_char	145:0:5005:6025							
ANR	835148	FunctionDef	"gx_lookup_cached_char (const gs_font * pfont , const cached_fm_pair * pair , gs_glyph glyph , int wmode , int depth , gs_fixed_point * subpix_origin)"		835147	0					
ANR	835149	CompoundStatement		149:0:5206:6025	835147	0					
ANR	835150	IdentifierDeclStatement	gs_font_dir * dir = pfont -> dir ;	150:4:5212:5241	835147	0	True				
ANR	835151	IdentifierDecl	* dir = pfont -> dir		835147	0					
ANR	835152	IdentifierDeclType	gs_font_dir *		835147	0					
ANR	835153	Identifier	dir		835147	1					
ANR	835154	AssignmentExpression	* dir = pfont -> dir		835147	2		=			
ANR	835155	Identifier	dir		835147	0					
ANR	835156	PtrMemberAccess	pfont -> dir		835147	1					
ANR	835157	Identifier	pfont		835147	0					
ANR	835158	Identifier	dir		835147	1					
ANR	835159	IdentifierDeclStatement	"uint chi = chars_head_index ( glyph , pair ) ;"	151:4:5247:5287	835147	1	True				
ANR	835160	IdentifierDecl	"chi = chars_head_index ( glyph , pair )"		835147	0					
ANR	835161	IdentifierDeclType	uint		835147	0					
ANR	835162	Identifier	chi		835147	1					
ANR	835163	AssignmentExpression	"chi = chars_head_index ( glyph , pair )"		835147	2		=			
ANR	835164	Identifier	chi		835147	0					
ANR	835165	CallExpression	"chars_head_index ( glyph , pair )"		835147	1					
ANR	835166	Callee	chars_head_index		835147	0					
ANR	835167	Identifier	chars_head_index		835147	0					
ANR	835168	ArgumentList	glyph		835147	1					
ANR	835169	Argument	glyph		835147	0					
ANR	835170	Identifier	glyph		835147	0					
ANR	835171	Argument	pair		835147	1					
ANR	835172	Identifier	pair		835147	0					
ANR	835173	Statement	register	152:4:5293:5300	835147	2	True				
ANR	835174	IdentifierDeclStatement	cached_char * cc ;	152:13:5302:5317	835147	3	True				
ANR	835175	IdentifierDecl	* cc		835147	0					
ANR	835176	IdentifierDeclType	cached_char *		835147	0					
ANR	835177	Identifier	cc		835147	1					
ANR	835178	WhileStatement	while ( ( cc = dir -> ccache . table [ chi & dir -> ccache . table_mask ] ) != 0 )		835147	4					
ANR	835179	Condition	( cc = dir -> ccache . table [ chi & dir -> ccache . table_mask ] ) != 0	154:11:5331:5389	835147	0	True				
ANR	835180	EqualityExpression	( cc = dir -> ccache . table [ chi & dir -> ccache . table_mask ] ) != 0		835147	0		!=			
ANR	835181	AssignmentExpression	cc = dir -> ccache . table [ chi & dir -> ccache . table_mask ]		835147	0		=			
ANR	835182	Identifier	cc		835147	0					
ANR	835183	ArrayIndexing	dir -> ccache . table [ chi & dir -> ccache . table_mask ]		835147	1					
ANR	835184	MemberAccess	dir -> ccache . table		835147	0					
ANR	835185	PtrMemberAccess	dir -> ccache		835147	0					
ANR	835186	Identifier	dir		835147	0					
ANR	835187	Identifier	ccache		835147	1					
ANR	835188	Identifier	table		835147	1					
ANR	835189	BitAndExpression	chi & dir -> ccache . table_mask		835147	1		&			
ANR	835190	Identifier	chi		835147	0					
ANR	835191	MemberAccess	dir -> ccache . table_mask		835147	1					
ANR	835192	PtrMemberAccess	dir -> ccache		835147	0					
ANR	835193	Identifier	dir		835147	0					
ANR	835194	Identifier	ccache		835147	1					
ANR	835195	Identifier	table_mask		835147	1					
ANR	835196	PrimaryExpression	0		835147	1					
ANR	835197	CompoundStatement		6:72:185:185	835147	1					
ANR	835198	IfStatement	if ( cc -> code == glyph && cc_pair ( cc ) == pair && cc -> subpix_origin . x == subpix_origin -> x && cc -> subpix_origin . y == subpix_origin -> y && cc -> wmode == wmode && cc_depth ( cc ) == depth )		835147	0					
ANR	835199	Condition	cc -> code == glyph && cc_pair ( cc ) == pair && cc -> subpix_origin . x == subpix_origin -> x && cc -> subpix_origin . y == subpix_origin -> y && cc -> wmode == wmode && cc_depth ( cc ) == depth	155:12:5406:5614	835147	0	True				
ANR	835200	AndExpression	cc -> code == glyph && cc_pair ( cc ) == pair && cc -> subpix_origin . x == subpix_origin -> x && cc -> subpix_origin . y == subpix_origin -> y && cc -> wmode == wmode && cc_depth ( cc ) == depth		835147	0		&&			
ANR	835201	EqualityExpression	cc -> code == glyph		835147	0		==			
ANR	835202	PtrMemberAccess	cc -> code		835147	0					
ANR	835203	Identifier	cc		835147	0					
ANR	835204	Identifier	code		835147	1					
ANR	835205	Identifier	glyph		835147	1					
ANR	835206	AndExpression	cc_pair ( cc ) == pair && cc -> subpix_origin . x == subpix_origin -> x && cc -> subpix_origin . y == subpix_origin -> y && cc -> wmode == wmode && cc_depth ( cc ) == depth		835147	1		&&			
ANR	835207	EqualityExpression	cc_pair ( cc ) == pair		835147	0		==			
ANR	835208	CallExpression	cc_pair ( cc )		835147	0					
ANR	835209	Callee	cc_pair		835147	0					
ANR	835210	Identifier	cc_pair		835147	0					
ANR	835211	ArgumentList	cc		835147	1					
ANR	835212	Argument	cc		835147	0					
ANR	835213	Identifier	cc		835147	0					
ANR	835214	Identifier	pair		835147	1					
ANR	835215	AndExpression	cc -> subpix_origin . x == subpix_origin -> x && cc -> subpix_origin . y == subpix_origin -> y && cc -> wmode == wmode && cc_depth ( cc ) == depth		835147	1		&&			
ANR	835216	EqualityExpression	cc -> subpix_origin . x == subpix_origin -> x		835147	0		==			
ANR	835217	MemberAccess	cc -> subpix_origin . x		835147	0					
ANR	835218	PtrMemberAccess	cc -> subpix_origin		835147	0					
ANR	835219	Identifier	cc		835147	0					
ANR	835220	Identifier	subpix_origin		835147	1					
ANR	835221	Identifier	x		835147	1					
ANR	835222	PtrMemberAccess	subpix_origin -> x		835147	1					
ANR	835223	Identifier	subpix_origin		835147	0					
ANR	835224	Identifier	x		835147	1					
ANR	835225	AndExpression	cc -> subpix_origin . y == subpix_origin -> y && cc -> wmode == wmode && cc_depth ( cc ) == depth		835147	1		&&			
ANR	835226	EqualityExpression	cc -> subpix_origin . y == subpix_origin -> y		835147	0		==			
ANR	835227	MemberAccess	cc -> subpix_origin . y		835147	0					
ANR	835228	PtrMemberAccess	cc -> subpix_origin		835147	0					
ANR	835229	Identifier	cc		835147	0					
ANR	835230	Identifier	subpix_origin		835147	1					
ANR	835231	Identifier	y		835147	1					
ANR	835232	PtrMemberAccess	subpix_origin -> y		835147	1					
ANR	835233	Identifier	subpix_origin		835147	0					
ANR	835234	Identifier	y		835147	1					
ANR	835235	AndExpression	cc -> wmode == wmode && cc_depth ( cc ) == depth		835147	1		&&			
ANR	835236	EqualityExpression	cc -> wmode == wmode		835147	0		==			
ANR	835237	PtrMemberAccess	cc -> wmode		835147	0					
ANR	835238	Identifier	cc		835147	0					
ANR	835239	Identifier	wmode		835147	1					
ANR	835240	Identifier	wmode		835147	1					
ANR	835241	EqualityExpression	cc_depth ( cc ) == depth		835147	1		==			
ANR	835242	CallExpression	cc_depth ( cc )		835147	0					
ANR	835243	Callee	cc_depth		835147	0					
ANR	835244	Identifier	cc_depth		835147	0					
ANR	835245	ArgumentList	cc		835147	1					
ANR	835246	Argument	cc		835147	0					
ANR	835247	Identifier	cc		835147	0					
ANR	835248	Identifier	depth		835147	1					
ANR	835249	CompoundStatement		11:14:423:423	835147	1					
ANR	835250	ExpressionStatement	"if_debug4m ( 'K' , pfont -> memory , ""[K]found 0x%lx (depth=%d) for glyph=0x%lx, wmode=%d\\n"" , ( ulong ) cc , cc_depth ( cc ) , ( ulong ) glyph , wmode )"	160:12:5644:5825	835147	0	True				
ANR	835251	CallExpression	"if_debug4m ( 'K' , pfont -> memory , ""[K]found 0x%lx (depth=%d) for glyph=0x%lx, wmode=%d\\n"" , ( ulong ) cc , cc_depth ( cc ) , ( ulong ) glyph , wmode )"		835147	0					
ANR	835252	Callee	if_debug4m		835147	0					
ANR	835253	Identifier	if_debug4m		835147	0					
ANR	835254	ArgumentList	'K'		835147	1					
ANR	835255	Argument	'K'		835147	0					
ANR	835256	PrimaryExpression	'K'		835147	0					
ANR	835257	Argument	pfont -> memory		835147	1					
ANR	835258	PtrMemberAccess	pfont -> memory		835147	0					
ANR	835259	Identifier	pfont		835147	0					
ANR	835260	Identifier	memory		835147	1					
ANR	835261	Argument	"""[K]found 0x%lx (depth=%d) for glyph=0x%lx, wmode=%d\\n"""		835147	2					
ANR	835262	PrimaryExpression	"""[K]found 0x%lx (depth=%d) for glyph=0x%lx, wmode=%d\\n"""		835147	0					
ANR	835263	Argument	( ulong ) cc		835147	3					
ANR	835264	CastExpression	( ulong ) cc		835147	0					
ANR	835265	CastTarget	ulong		835147	0					
ANR	835266	Identifier	cc		835147	1					
ANR	835267	Argument	cc_depth ( cc )		835147	4					
ANR	835268	CallExpression	cc_depth ( cc )		835147	0					
ANR	835269	Callee	cc_depth		835147	0					
ANR	835270	Identifier	cc_depth		835147	0					
ANR	835271	ArgumentList	cc		835147	1					
ANR	835272	Argument	cc		835147	0					
ANR	835273	Identifier	cc		835147	0					
ANR	835274	Argument	( ulong ) glyph		835147	5					
ANR	835275	CastExpression	( ulong ) glyph		835147	0					
ANR	835276	CastTarget	ulong		835147	0					
ANR	835277	Identifier	glyph		835147	1					
ANR	835278	Argument	wmode		835147	6					
ANR	835279	Identifier	wmode		835147	0					
ANR	835280	ReturnStatement	return cc ;	163:12:5839:5848	835147	1	True				
ANR	835281	Identifier	cc		835147	0					
ANR	835282	ExpressionStatement	chi ++	165:8:5868:5873	835147	1	True				
ANR	835283	PostIncDecOperationExpression	chi ++		835147	0					
ANR	835284	Identifier	chi		835147	0					
ANR	835285	IncDec	++		835147	1					
ANR	835286	ExpressionStatement	"if_debug3m ( 'K' , pfont -> memory , ""[K]not found: glyph=0x%lx, wmode=%d, depth=%d\\n"" , ( ulong ) glyph , wmode , depth )"	167:4:5885:6009	835147	5	True				
ANR	835287	CallExpression	"if_debug3m ( 'K' , pfont -> memory , ""[K]not found: glyph=0x%lx, wmode=%d, depth=%d\\n"" , ( ulong ) glyph , wmode , depth )"		835147	0					
ANR	835288	Callee	if_debug3m		835147	0					
ANR	835289	Identifier	if_debug3m		835147	0					
ANR	835290	ArgumentList	'K'		835147	1					
ANR	835291	Argument	'K'		835147	0					
ANR	835292	PrimaryExpression	'K'		835147	0					
ANR	835293	Argument	pfont -> memory		835147	1					
ANR	835294	PtrMemberAccess	pfont -> memory		835147	0					
ANR	835295	Identifier	pfont		835147	0					
ANR	835296	Identifier	memory		835147	1					
ANR	835297	Argument	"""[K]not found: glyph=0x%lx, wmode=%d, depth=%d\\n"""		835147	2					
ANR	835298	PrimaryExpression	"""[K]not found: glyph=0x%lx, wmode=%d, depth=%d\\n"""		835147	0					
ANR	835299	Argument	( ulong ) glyph		835147	3					
ANR	835300	CastExpression	( ulong ) glyph		835147	0					
ANR	835301	CastTarget	ulong		835147	0					
ANR	835302	Identifier	glyph		835147	1					
ANR	835303	Argument	wmode		835147	4					
ANR	835304	Identifier	wmode		835147	0					
ANR	835305	Argument	depth		835147	5					
ANR	835306	Identifier	depth		835147	0					
ANR	835307	ReturnStatement	return 0 ;	169:4:6015:6023	835147	6	True				
ANR	835308	PrimaryExpression	0		835147	0					
ANR	835309	ReturnType	cached_char *		835147	1					
ANR	835310	Identifier	gx_lookup_cached_char		835147	2					
ANR	835311	ParameterList	"const gs_font * pfont , const cached_fm_pair * pair , gs_glyph glyph , int wmode , int depth , gs_fixed_point * subpix_origin"		835147	3					
ANR	835312	Parameter	const gs_font * pfont	146:22:5041:5061	835147	0	True				
ANR	835313	ParameterType	const gs_font *		835147	0					
ANR	835314	Identifier	pfont		835147	1					
ANR	835315	Parameter	const cached_fm_pair * pair	146:45:5064:5090	835147	1	True				
ANR	835316	ParameterType	const cached_fm_pair *		835147	0					
ANR	835317	Identifier	pair		835147	1					
ANR	835318	Parameter	gs_glyph glyph	147:22:5115:5128	835147	2	True				
ANR	835319	ParameterType	gs_glyph		835147	0					
ANR	835320	Identifier	glyph		835147	1					
ANR	835321	Parameter	int wmode	147:38:5131:5139	835147	3	True				
ANR	835322	ParameterType	int		835147	0					
ANR	835323	Identifier	wmode		835147	1					
ANR	835324	Parameter	int depth	147:49:5142:5150	835147	4	True				
ANR	835325	ParameterType	int		835147	0					
ANR	835326	Identifier	depth		835147	1					
ANR	835327	Parameter	gs_fixed_point * subpix_origin	148:22:5175:5203	835147	5	True				
ANR	835328	ParameterType	gs_fixed_point *		835147	0					
ANR	835329	Identifier	subpix_origin		835147	1					
ANR	835330	CFGEntryNode	ENTRY		835147		True				
ANR	835331	CFGExitNode	EXIT		835147		True				
ANR	835332	Symbol	dir -> ccache		835147						
ANR	835333	Symbol	pfont -> memory		835147						
ANR	835334	Symbol	* cc		835147						
ANR	835335	Symbol	cc -> code		835147						
ANR	835336	Symbol	* dir		835147						
ANR	835337	Symbol	dir		835147						
ANR	835338	Symbol	cc -> subpix_origin . x		835147						
ANR	835339	Symbol	cc_depth		835147						
ANR	835340	Symbol	cc -> subpix_origin . y		835147						
ANR	835341	Symbol	* dir -> ccache . table_mask		835147						
ANR	835342	Symbol	wmode		835147						
ANR	835343	Symbol	chars_head_index		835147						
ANR	835344	Symbol	cc		835147						
ANR	835345	Symbol	* * dir		835147						
ANR	835346	Symbol	cc -> subpix_origin		835147						
ANR	835347	Symbol	pfont		835147						
ANR	835348	Symbol	chi		835147						
ANR	835349	Symbol	dir -> ccache . table		835147						
ANR	835350	Symbol	* dir -> ccache . table		835147						
ANR	835351	Symbol	subpix_origin		835147						
ANR	835352	Symbol	pair		835147						
ANR	835353	Symbol	subpix_origin -> x		835147						
ANR	835354	Symbol	* chi		835147						
ANR	835355	Symbol	glyph		835147						
ANR	835356	Symbol	* pfont		835147						
ANR	835357	Symbol	depth		835147						
ANR	835358	Symbol	* subpix_origin		835147						
ANR	835359	Symbol	cc -> wmode		835147						
ANR	835360	Symbol	* dir -> ccache		835147						
ANR	835361	Symbol	pfont -> dir		835147						
ANR	835362	Symbol	subpix_origin -> y		835147						
ANR	835363	Symbol	dir -> ccache . table_mask		835147						
ANR	835364	Symbol	cc_pair		835147						
ANR	835365	Function	gx_image_cached_char	176:0:6251:15106							
ANR	835366	FunctionDef	"gx_image_cached_char (register gs_show_enum * penum , register cached_char * cc)"		835365	0					
ANR	835367	CompoundStatement		178:0:6334:15106	835365	0					
ANR	835368	Statement	register	179:4:6340:6347	835365	0	True				
ANR	835369	IdentifierDeclStatement	gs_gstate * pgs = penum -> pgs ;	179:13:6349:6376	835365	1	True				
ANR	835370	IdentifierDecl	* pgs = penum -> pgs		835365	0					
ANR	835371	IdentifierDeclType	gs_gstate *		835365	0					
ANR	835372	Identifier	pgs		835365	1					
ANR	835373	AssignmentExpression	* pgs = penum -> pgs		835365	2		=			
ANR	835374	Identifier	pgs		835365	0					
ANR	835375	PtrMemberAccess	penum -> pgs		835365	1					
ANR	835376	Identifier	penum		835365	0					
ANR	835377	Identifier	pgs		835365	1					
ANR	835378	IdentifierDeclStatement	gx_device_color * pdevc = gs_currentdevicecolor_inline ( pgs ) ;	180:4:6382:6440	835365	2	True				
ANR	835379	IdentifierDecl	* pdevc = gs_currentdevicecolor_inline ( pgs )		835365	0					
ANR	835380	IdentifierDeclType	gx_device_color *		835365	0					
ANR	835381	Identifier	pdevc		835365	1					
ANR	835382	AssignmentExpression	* pdevc = gs_currentdevicecolor_inline ( pgs )		835365	2		=			
ANR	835383	Identifier	pdevc		835365	0					
ANR	835384	CallExpression	gs_currentdevicecolor_inline ( pgs )		835365	1					
ANR	835385	Callee	gs_currentdevicecolor_inline		835365	0					
ANR	835386	Identifier	gs_currentdevicecolor_inline		835365	0					
ANR	835387	ArgumentList	pgs		835365	1					
ANR	835388	Argument	pgs		835365	0					
ANR	835389	Identifier	pgs		835365	0					
ANR	835390	IdentifierDeclStatement	"int x , y , w , h , depth ;"	181:4:6446:6467	835365	3	True				
ANR	835391	IdentifierDecl	x		835365	0					
ANR	835392	IdentifierDeclType	int		835365	0					
ANR	835393	Identifier	x		835365	1					
ANR	835394	IdentifierDecl	y		835365	1					
ANR	835395	IdentifierDeclType	int		835365	0					
ANR	835396	Identifier	y		835365	1					
ANR	835397	IdentifierDecl	w		835365	2					
ANR	835398	IdentifierDeclType	int		835365	0					
ANR	835399	Identifier	w		835365	1					
ANR	835400	IdentifierDecl	h		835365	3					
ANR	835401	IdentifierDeclType	int		835365	0					
ANR	835402	Identifier	h		835365	1					
ANR	835403	IdentifierDecl	depth		835365	4					
ANR	835404	IdentifierDeclType	int		835365	0					
ANR	835405	Identifier	depth		835365	1					
ANR	835406	IdentifierDeclStatement	int code ;	182:4:6473:6481	835365	4	True				
ANR	835407	IdentifierDecl	code		835365	0					
ANR	835408	IdentifierDeclType	int		835365	0					
ANR	835409	Identifier	code		835365	1					
ANR	835410	IdentifierDeclStatement	gs_fixed_point pt ;	183:4:6487:6504	835365	5	True				
ANR	835411	IdentifierDecl	pt		835365	0					
ANR	835412	IdentifierDeclType	gs_fixed_point		835365	0					
ANR	835413	Identifier	pt		835365	1					
ANR	835414	IdentifierDeclStatement	gx_device * dev = penum -> dev ;	184:4:6510:6537	835365	6	True				
ANR	835415	IdentifierDecl	* dev = penum -> dev		835365	0					
ANR	835416	IdentifierDeclType	gx_device *		835365	0					
ANR	835417	Identifier	dev		835365	1					
ANR	835418	AssignmentExpression	* dev = penum -> dev		835365	2		=			
ANR	835419	Identifier	dev		835365	0					
ANR	835420	PtrMemberAccess	penum -> dev		835365	1					
ANR	835421	Identifier	penum		835365	0					
ANR	835422	Identifier	dev		835365	1					
ANR	835423	IdentifierDeclStatement	gx_device * imaging_dev = penum -> imaging_dev ? penum -> imaging_dev : dev ;	185:4:6543:6613	835365	7	True				
ANR	835424	IdentifierDecl	* imaging_dev = penum -> imaging_dev ? penum -> imaging_dev : dev		835365	0					
ANR	835425	IdentifierDeclType	gx_device *		835365	0					
ANR	835426	Identifier	imaging_dev		835365	1					
ANR	835427	AssignmentExpression	* imaging_dev = penum -> imaging_dev ? penum -> imaging_dev : dev		835365	2		=			
ANR	835428	Identifier	imaging_dev		835365	0					
ANR	835429	ConditionalExpression	penum -> imaging_dev ? penum -> imaging_dev : dev		835365	1					
ANR	835430	Condition	penum -> imaging_dev		835365	0					
ANR	835431	PtrMemberAccess	penum -> imaging_dev		835365	0					
ANR	835432	Identifier	penum		835365	0					
ANR	835433	Identifier	imaging_dev		835365	1					
ANR	835434	PtrMemberAccess	penum -> imaging_dev		835365	1					
ANR	835435	Identifier	penum		835365	0					
ANR	835436	Identifier	imaging_dev		835365	1					
ANR	835437	Identifier	dev		835365	2					
ANR	835438	IdentifierDeclStatement	gx_device * orig_dev = imaging_dev ;	186:4:6619:6652	835365	8	True				
ANR	835439	IdentifierDecl	* orig_dev = imaging_dev		835365	0					
ANR	835440	IdentifierDeclType	gx_device *		835365	0					
ANR	835441	Identifier	orig_dev		835365	1					
ANR	835442	AssignmentExpression	* orig_dev = imaging_dev		835365	2		=			
ANR	835443	Identifier	imaging_dev		835365	0					
ANR	835444	Identifier	imaging_dev		835365	1					
ANR	835445	IdentifierDeclStatement	gx_device_clip cdev ;	187:4:6658:6677	835365	9	True				
ANR	835446	IdentifierDecl	cdev		835365	0					
ANR	835447	IdentifierDeclType	gx_device_clip		835365	0					
ANR	835448	Identifier	cdev		835365	1					
ANR	835449	IdentifierDeclStatement	gx_xglyph xg = cc -> xglyph ;	188:4:6683:6708	835365	10	True				
ANR	835450	IdentifierDecl	xg = cc -> xglyph		835365	0					
ANR	835451	IdentifierDeclType	gx_xglyph		835365	0					
ANR	835452	Identifier	xg		835365	1					
ANR	835453	AssignmentExpression	xg = cc -> xglyph		835365	2		=			
ANR	835454	Identifier	xg		835365	0					
ANR	835455	PtrMemberAccess	cc -> xglyph		835365	1					
ANR	835456	Identifier	cc		835365	0					
ANR	835457	Identifier	xglyph		835365	1					
ANR	835458	IdentifierDeclStatement	gx_xfont * xf ;	189:4:6714:6726	835365	11	True				
ANR	835459	IdentifierDecl	* xf		835365	0					
ANR	835460	IdentifierDeclType	gx_xfont *		835365	0					
ANR	835461	Identifier	xf		835365	1					
ANR	835462	IdentifierDeclStatement	byte * bits ;	190:4:6732:6742	835365	12	True				
ANR	835463	IdentifierDecl	* bits		835365	0					
ANR	835464	IdentifierDeclType	byte *		835365	0					
ANR	835465	Identifier	bits		835365	1					
ANR	835466	Label	top :	192:2:6747:6750	835365	13	True				
ANR	835467	Identifier	top		835365	0					
ANR	835468	ExpressionStatement	"code = gx_path_current_point_inline ( pgs , & pt )"	192:6:6751:6796	835365	14	True				
ANR	835469	AssignmentExpression	"code = gx_path_current_point_inline ( pgs , & pt )"		835365	0		=			
ANR	835470	Identifier	code		835365	0					
ANR	835471	CallExpression	"gx_path_current_point_inline ( pgs , & pt )"		835365	1					
ANR	835472	Callee	gx_path_current_point_inline		835365	0					
ANR	835473	Identifier	gx_path_current_point_inline		835365	0					
ANR	835474	ArgumentList	pgs		835365	1					
ANR	835475	Argument	pgs		835365	0					
ANR	835476	Identifier	pgs		835365	0					
ANR	835477	Argument	& pt		835365	1					
ANR	835478	UnaryOperationExpression	& pt		835365	0					
ANR	835479	UnaryOperator	&		835365	0					
ANR	835480	Identifier	pt		835365	1					
ANR	835481	IfStatement	if ( code < 0 )		835365	15					
ANR	835482	Condition	code < 0	193:8:6806:6813	835365	0	True				
ANR	835483	RelationalExpression	code < 0		835365	0		<			
ANR	835484	Identifier	code		835365	0					
ANR	835485	PrimaryExpression	0		835365	1					
ANR	835486	ReturnStatement	return code ;	194:8:6824:6835	835365	1	True				
ANR	835487	Identifier	code		835365	0					
ANR	835488	ExpressionStatement	pt . x -= cc -> offset . x + cc -> subpix_origin . x	201:4:7104:7146	835365	16	True				
ANR	835489	AssignmentExpression	pt . x -= cc -> offset . x + cc -> subpix_origin . x		835365	0		-=			
ANR	835490	MemberAccess	pt . x		835365	0					
ANR	835491	Identifier	pt		835365	0					
ANR	835492	Identifier	x		835365	1					
ANR	835493	AdditiveExpression	cc -> offset . x + cc -> subpix_origin . x		835365	1		+			
ANR	835494	MemberAccess	cc -> offset . x		835365	0					
ANR	835495	PtrMemberAccess	cc -> offset		835365	0					
ANR	835496	Identifier	cc		835365	0					
ANR	835497	Identifier	offset		835365	1					
ANR	835498	Identifier	x		835365	1					
ANR	835499	MemberAccess	cc -> subpix_origin . x		835365	1					
ANR	835500	PtrMemberAccess	cc -> subpix_origin		835365	0					
ANR	835501	Identifier	cc		835365	0					
ANR	835502	Identifier	subpix_origin		835365	1					
ANR	835503	Identifier	x		835365	1					
ANR	835504	ExpressionStatement	x = fixed2int_var_rounded ( pt . x ) + penum -> ftx	202:4:7152:7196	835365	17	True				
ANR	835505	AssignmentExpression	x = fixed2int_var_rounded ( pt . x ) + penum -> ftx		835365	0		=			
ANR	835506	Identifier	x		835365	0					
ANR	835507	AdditiveExpression	fixed2int_var_rounded ( pt . x ) + penum -> ftx		835365	1		+			
ANR	835508	CallExpression	fixed2int_var_rounded ( pt . x )		835365	0					
ANR	835509	Callee	fixed2int_var_rounded		835365	0					
ANR	835510	Identifier	fixed2int_var_rounded		835365	0					
ANR	835511	ArgumentList	pt . x		835365	1					
ANR	835512	Argument	pt . x		835365	0					
ANR	835513	MemberAccess	pt . x		835365	0					
ANR	835514	Identifier	pt		835365	0					
ANR	835515	Identifier	x		835365	1					
ANR	835516	PtrMemberAccess	penum -> ftx		835365	1					
ANR	835517	Identifier	penum		835365	0					
ANR	835518	Identifier	ftx		835365	1					
ANR	835519	ExpressionStatement	pt . y -= cc -> offset . y + cc -> subpix_origin . y	203:4:7202:7244	835365	18	True				
ANR	835520	AssignmentExpression	pt . y -= cc -> offset . y + cc -> subpix_origin . y		835365	0		-=			
ANR	835521	MemberAccess	pt . y		835365	0					
ANR	835522	Identifier	pt		835365	0					
ANR	835523	Identifier	y		835365	1					
ANR	835524	AdditiveExpression	cc -> offset . y + cc -> subpix_origin . y		835365	1		+			
ANR	835525	MemberAccess	cc -> offset . y		835365	0					
ANR	835526	PtrMemberAccess	cc -> offset		835365	0					
ANR	835527	Identifier	cc		835365	0					
ANR	835528	Identifier	offset		835365	1					
ANR	835529	Identifier	y		835365	1					
ANR	835530	MemberAccess	cc -> subpix_origin . y		835365	1					
ANR	835531	PtrMemberAccess	cc -> subpix_origin		835365	0					
ANR	835532	Identifier	cc		835365	0					
ANR	835533	Identifier	subpix_origin		835365	1					
ANR	835534	Identifier	y		835365	1					
ANR	835535	ExpressionStatement	y = fixed2int_var_rounded ( pt . y ) + penum -> fty	204:4:7250:7294	835365	19	True				
ANR	835536	AssignmentExpression	y = fixed2int_var_rounded ( pt . y ) + penum -> fty		835365	0		=			
ANR	835537	Identifier	y		835365	0					
ANR	835538	AdditiveExpression	fixed2int_var_rounded ( pt . y ) + penum -> fty		835365	1		+			
ANR	835539	CallExpression	fixed2int_var_rounded ( pt . y )		835365	0					
ANR	835540	Callee	fixed2int_var_rounded		835365	0					
ANR	835541	Identifier	fixed2int_var_rounded		835365	0					
ANR	835542	ArgumentList	pt . y		835365	1					
ANR	835543	Argument	pt . y		835365	0					
ANR	835544	MemberAccess	pt . y		835365	0					
ANR	835545	Identifier	pt		835365	0					
ANR	835546	Identifier	y		835365	1					
ANR	835547	PtrMemberAccess	penum -> fty		835365	1					
ANR	835548	Identifier	penum		835365	0					
ANR	835549	Identifier	fty		835365	1					
ANR	835550	ExpressionStatement	w = cc -> width	205:4:7300:7313	835365	20	True				
ANR	835551	AssignmentExpression	w = cc -> width		835365	0		=			
ANR	835552	Identifier	w		835365	0					
ANR	835553	PtrMemberAccess	cc -> width		835365	1					
ANR	835554	Identifier	cc		835365	0					
ANR	835555	Identifier	width		835365	1					
ANR	835556	ExpressionStatement	h = cc -> height	206:4:7319:7333	835365	21	True				
ANR	835557	AssignmentExpression	h = cc -> height		835365	0		=			
ANR	835558	Identifier	h		835365	0					
ANR	835559	PtrMemberAccess	cc -> height		835365	1					
ANR	835560	Identifier	cc		835365	0					
ANR	835561	Identifier	height		835365	1					
ANR	835562	IfStatement	if ( gs_debug_c ( 'K' ) )		835365	22					
ANR	835563	Condition	gs_debug_c ( 'K' )	208:8:7356:7370	835365	0	True				
ANR	835564	CallExpression	gs_debug_c ( 'K' )		835365	0					
ANR	835565	Callee	gs_debug_c		835365	0					
ANR	835566	Identifier	gs_debug_c		835365	0					
ANR	835567	ArgumentList	'K'		835365	1					
ANR	835568	Argument	'K'		835365	0					
ANR	835569	PrimaryExpression	'K'		835365	0					
ANR	835570	CompoundStatement		31:25:1038:1038	835365	1					
ANR	835571	IfStatement	if ( cc_has_bits ( cc ) )		835365	0					
ANR	835572	Condition	cc_has_bits ( cc )	209:12:7387:7401	835365	0	True				
ANR	835573	CallExpression	cc_has_bits ( cc )		835365	0					
ANR	835574	Callee	cc_has_bits		835365	0					
ANR	835575	Identifier	cc_has_bits		835365	0					
ANR	835576	ArgumentList	cc		835365	1					
ANR	835577	Argument	cc		835365	0					
ANR	835578	Identifier	cc		835365	0					
ANR	835579	ExpressionStatement	"debug_dump_bitmap ( penum -> memory , cc_bits ( cc ) , cc_raster ( cc ) , h , ""[K]bits"" )"	210:12:7416:7520	835365	1	True				
ANR	835580	CallExpression	"debug_dump_bitmap ( penum -> memory , cc_bits ( cc ) , cc_raster ( cc ) , h , ""[K]bits"" )"		835365	0					
ANR	835581	Callee	debug_dump_bitmap		835365	0					
ANR	835582	Identifier	debug_dump_bitmap		835365	0					
ANR	835583	ArgumentList	penum -> memory		835365	1					
ANR	835584	Argument	penum -> memory		835365	0					
ANR	835585	PtrMemberAccess	penum -> memory		835365	0					
ANR	835586	Identifier	penum		835365	0					
ANR	835587	Identifier	memory		835365	1					
ANR	835588	Argument	cc_bits ( cc )		835365	1					
ANR	835589	CallExpression	cc_bits ( cc )		835365	0					
ANR	835590	Callee	cc_bits		835365	0					
ANR	835591	Identifier	cc_bits		835365	0					
ANR	835592	ArgumentList	cc		835365	1					
ANR	835593	Argument	cc		835365	0					
ANR	835594	Identifier	cc		835365	0					
ANR	835595	Argument	cc_raster ( cc )		835365	2					
ANR	835596	CallExpression	cc_raster ( cc )		835365	0					
ANR	835597	Callee	cc_raster		835365	0					
ANR	835598	Identifier	cc_raster		835365	0					
ANR	835599	ArgumentList	cc		835365	1					
ANR	835600	Argument	cc		835365	0					
ANR	835601	Identifier	cc		835365	0					
ANR	835602	Argument	h		835365	3					
ANR	835603	Identifier	h		835365	0					
ANR	835604	Argument	"""[K]bits"""		835365	4					
ANR	835605	PrimaryExpression	"""[K]bits"""		835365	0					
ANR	835606	ElseStatement	else		835365	0					
ANR	835607	ExpressionStatement	"dmputs ( penum -> memory , ""[K]no bits\\n"" )"	213:12:7547:7584	835365	0	True				
ANR	835608	CallExpression	"dmputs ( penum -> memory , ""[K]no bits\\n"" )"		835365	0					
ANR	835609	Callee	dmputs		835365	0					
ANR	835610	Identifier	dmputs		835365	0					
ANR	835611	ArgumentList	penum -> memory		835365	1					
ANR	835612	Argument	penum -> memory		835365	0					
ANR	835613	PtrMemberAccess	penum -> memory		835365	0					
ANR	835614	Identifier	penum		835365	0					
ANR	835615	Identifier	memory		835365	1					
ANR	835616	Argument	"""[K]no bits\\n"""		835365	1					
ANR	835617	PrimaryExpression	"""[K]no bits\\n"""		835365	0					
ANR	835618	ExpressionStatement	"dmlprintf3 ( penum -> memory , ""[K]copying 0x%lx, offset=(%g,%g)\\n"" , ( ulong ) cc , fixed2float ( - cc -> offset . x ) , fixed2float ( - cc -> offset . y ) )"	214:8:7594:7763	835365	1	True				
ANR	835619	CallExpression	"dmlprintf3 ( penum -> memory , ""[K]copying 0x%lx, offset=(%g,%g)\\n"" , ( ulong ) cc , fixed2float ( - cc -> offset . x ) , fixed2float ( - cc -> offset . y ) )"		835365	0					
ANR	835620	Callee	dmlprintf3		835365	0					
ANR	835621	Identifier	dmlprintf3		835365	0					
ANR	835622	ArgumentList	penum -> memory		835365	1					
ANR	835623	Argument	penum -> memory		835365	0					
ANR	835624	PtrMemberAccess	penum -> memory		835365	0					
ANR	835625	Identifier	penum		835365	0					
ANR	835626	Identifier	memory		835365	1					
ANR	835627	Argument	"""[K]copying 0x%lx, offset=(%g,%g)\\n"""		835365	1					
ANR	835628	PrimaryExpression	"""[K]copying 0x%lx, offset=(%g,%g)\\n"""		835365	0					
ANR	835629	Argument	( ulong ) cc		835365	2					
ANR	835630	CastExpression	( ulong ) cc		835365	0					
ANR	835631	CastTarget	ulong		835365	0					
ANR	835632	Identifier	cc		835365	1					
ANR	835633	Argument	fixed2float ( - cc -> offset . x )		835365	3					
ANR	835634	CallExpression	fixed2float ( - cc -> offset . x )		835365	0					
ANR	835635	Callee	fixed2float		835365	0					
ANR	835636	Identifier	fixed2float		835365	0					
ANR	835637	ArgumentList	- cc -> offset . x		835365	1					
ANR	835638	Argument	- cc -> offset . x		835365	0					
ANR	835639	UnaryOperationExpression	- cc -> offset . x		835365	0					
ANR	835640	UnaryOperator	-		835365	0					
ANR	835641	MemberAccess	cc -> offset . x		835365	1					
ANR	835642	PtrMemberAccess	cc -> offset		835365	0					
ANR	835643	Identifier	cc		835365	0					
ANR	835644	Identifier	offset		835365	1					
ANR	835645	Identifier	x		835365	1					
ANR	835646	Argument	fixed2float ( - cc -> offset . y )		835365	4					
ANR	835647	CallExpression	fixed2float ( - cc -> offset . y )		835365	0					
ANR	835648	Callee	fixed2float		835365	0					
ANR	835649	Identifier	fixed2float		835365	0					
ANR	835650	ArgumentList	- cc -> offset . y		835365	1					
ANR	835651	Argument	- cc -> offset . y		835365	0					
ANR	835652	UnaryOperationExpression	- cc -> offset . y		835365	0					
ANR	835653	UnaryOperator	-		835365	0					
ANR	835654	MemberAccess	cc -> offset . y		835365	1					
ANR	835655	PtrMemberAccess	cc -> offset		835365	0					
ANR	835656	Identifier	cc		835365	0					
ANR	835657	Identifier	offset		835365	1					
ANR	835658	Identifier	y		835365	1					
ANR	835659	ExpressionStatement	"dmlprintf6 ( penum -> memory , ""   at (%g,%g)+(%d,%d)->(%d,%d)\\n"" , fixed2float ( pt . x ) , fixed2float ( pt . y ) , penum -> ftx , penum -> fty , x , y )"	217:8:7773:7940	835365	2	True				
ANR	835660	CallExpression	"dmlprintf6 ( penum -> memory , ""   at (%g,%g)+(%d,%d)->(%d,%d)\\n"" , fixed2float ( pt . x ) , fixed2float ( pt . y ) , penum -> ftx , penum -> fty , x , y )"		835365	0					
ANR	835661	Callee	dmlprintf6		835365	0					
ANR	835662	Identifier	dmlprintf6		835365	0					
ANR	835663	ArgumentList	penum -> memory		835365	1					
ANR	835664	Argument	penum -> memory		835365	0					
ANR	835665	PtrMemberAccess	penum -> memory		835365	0					
ANR	835666	Identifier	penum		835365	0					
ANR	835667	Identifier	memory		835365	1					
ANR	835668	Argument	"""   at (%g,%g)+(%d,%d)->(%d,%d)\\n"""		835365	1					
ANR	835669	PrimaryExpression	"""   at (%g,%g)+(%d,%d)->(%d,%d)\\n"""		835365	0					
ANR	835670	Argument	fixed2float ( pt . x )		835365	2					
ANR	835671	CallExpression	fixed2float ( pt . x )		835365	0					
ANR	835672	Callee	fixed2float		835365	0					
ANR	835673	Identifier	fixed2float		835365	0					
ANR	835674	ArgumentList	pt . x		835365	1					
ANR	835675	Argument	pt . x		835365	0					
ANR	835676	MemberAccess	pt . x		835365	0					
ANR	835677	Identifier	pt		835365	0					
ANR	835678	Identifier	x		835365	1					
ANR	835679	Argument	fixed2float ( pt . y )		835365	3					
ANR	835680	CallExpression	fixed2float ( pt . y )		835365	0					
ANR	835681	Callee	fixed2float		835365	0					
ANR	835682	Identifier	fixed2float		835365	0					
ANR	835683	ArgumentList	pt . y		835365	1					
ANR	835684	Argument	pt . y		835365	0					
ANR	835685	MemberAccess	pt . y		835365	0					
ANR	835686	Identifier	pt		835365	0					
ANR	835687	Identifier	y		835365	1					
ANR	835688	Argument	penum -> ftx		835365	4					
ANR	835689	PtrMemberAccess	penum -> ftx		835365	0					
ANR	835690	Identifier	penum		835365	0					
ANR	835691	Identifier	ftx		835365	1					
ANR	835692	Argument	penum -> fty		835365	5					
ANR	835693	PtrMemberAccess	penum -> fty		835365	0					
ANR	835694	Identifier	penum		835365	0					
ANR	835695	Identifier	fty		835365	1					
ANR	835696	Argument	x		835365	6					
ANR	835697	Identifier	x		835365	0					
ANR	835698	Argument	y		835365	7					
ANR	835699	Identifier	y		835365	0					
ANR	835700	IfStatement	if ( ( x < penum -> ibox . p . x || x + w > penum -> ibox . q . x || y < penum -> ibox . p . y || y + h > penum -> ibox . q . y ) && imaging_dev != ( gx_device * ) & cdev )		835365	23					
ANR	835701	Condition	( x < penum -> ibox . p . x || x + w > penum -> ibox . q . x || y < penum -> ibox . p . y || y + h > penum -> ibox . q . y ) && imaging_dev != ( gx_device * ) & cdev	222:8:7963:8116	835365	0	True				
ANR	835702	AndExpression	( x < penum -> ibox . p . x || x + w > penum -> ibox . q . x || y < penum -> ibox . p . y || y + h > penum -> ibox . q . y ) && imaging_dev != ( gx_device * ) & cdev		835365	0		&&			
ANR	835703	OrExpression	x < penum -> ibox . p . x || x + w > penum -> ibox . q . x || y < penum -> ibox . p . y || y + h > penum -> ibox . q . y		835365	0		||			
ANR	835704	RelationalExpression	x < penum -> ibox . p . x		835365	0		<			
ANR	835705	Identifier	x		835365	0					
ANR	835706	MemberAccess	penum -> ibox . p . x		835365	1					
ANR	835707	MemberAccess	penum -> ibox . p		835365	0					
ANR	835708	PtrMemberAccess	penum -> ibox		835365	0					
ANR	835709	Identifier	penum		835365	0					
ANR	835710	Identifier	ibox		835365	1					
ANR	835711	Identifier	p		835365	1					
ANR	835712	Identifier	x		835365	1					
ANR	835713	OrExpression	x + w > penum -> ibox . q . x || y < penum -> ibox . p . y || y + h > penum -> ibox . q . y		835365	1		||			
ANR	835714	RelationalExpression	x + w > penum -> ibox . q . x		835365	0		>			
ANR	835715	AdditiveExpression	x + w		835365	0		+			
ANR	835716	Identifier	x		835365	0					
ANR	835717	Identifier	w		835365	1					
ANR	835718	MemberAccess	penum -> ibox . q . x		835365	1					
ANR	835719	MemberAccess	penum -> ibox . q		835365	0					
ANR	835720	PtrMemberAccess	penum -> ibox		835365	0					
ANR	835721	Identifier	penum		835365	0					
ANR	835722	Identifier	ibox		835365	1					
ANR	835723	Identifier	q		835365	1					
ANR	835724	Identifier	x		835365	1					
ANR	835725	OrExpression	y < penum -> ibox . p . y || y + h > penum -> ibox . q . y		835365	1		||			
ANR	835726	RelationalExpression	y < penum -> ibox . p . y		835365	0		<			
ANR	835727	Identifier	y		835365	0					
ANR	835728	MemberAccess	penum -> ibox . p . y		835365	1					
ANR	835729	MemberAccess	penum -> ibox . p		835365	0					
ANR	835730	PtrMemberAccess	penum -> ibox		835365	0					
ANR	835731	Identifier	penum		835365	0					
ANR	835732	Identifier	ibox		835365	1					
ANR	835733	Identifier	p		835365	1					
ANR	835734	Identifier	y		835365	1					
ANR	835735	RelationalExpression	y + h > penum -> ibox . q . y		835365	1		>			
ANR	835736	AdditiveExpression	y + h		835365	0		+			
ANR	835737	Identifier	y		835365	0					
ANR	835738	Identifier	h		835365	1					
ANR	835739	MemberAccess	penum -> ibox . q . y		835365	1					
ANR	835740	MemberAccess	penum -> ibox . q		835365	0					
ANR	835741	PtrMemberAccess	penum -> ibox		835365	0					
ANR	835742	Identifier	penum		835365	0					
ANR	835743	Identifier	ibox		835365	1					
ANR	835744	Identifier	q		835365	1					
ANR	835745	Identifier	y		835365	1					
ANR	835746	EqualityExpression	imaging_dev != ( gx_device * ) & cdev		835365	1		!=			
ANR	835747	Identifier	imaging_dev		835365	0					
ANR	835748	CastExpression	( gx_device * ) & cdev		835365	1					
ANR	835749	CastTarget	gx_device *		835365	0					
ANR	835750	UnaryOperationExpression	& cdev		835365	1					
ANR	835751	UnaryOperator	&		835365	0					
ANR	835752	Identifier	cdev		835365	1					
ANR	835753	CompoundStatement		50:8:1926:1946	835365	1					
ANR	835754	IdentifierDeclStatement	gx_clip_path * pcpath ;	227:8:8261:8281	835365	0	True				
ANR	835755	IdentifierDecl	* pcpath		835365	0					
ANR	835756	IdentifierDeclType	gx_clip_path *		835365	0					
ANR	835757	Identifier	pcpath		835365	1					
ANR	835758	IfStatement	if ( x >= penum -> obox . q . x || x + w <= penum -> obox . p . x || y >= penum -> obox . q . y || y + h <= penum -> obox . p . y )		835365	1					
ANR	835759	Condition	x >= penum -> obox . q . x || x + w <= penum -> obox . p . x || y >= penum -> obox . q . y || y + h <= penum -> obox . p . y	229:12:8296:8407	835365	0	True				
ANR	835760	OrExpression	x >= penum -> obox . q . x || x + w <= penum -> obox . p . x || y >= penum -> obox . q . y || y + h <= penum -> obox . p . y		835365	0		||			
ANR	835761	RelationalExpression	x >= penum -> obox . q . x		835365	0		>=			
ANR	835762	Identifier	x		835365	0					
ANR	835763	MemberAccess	penum -> obox . q . x		835365	1					
ANR	835764	MemberAccess	penum -> obox . q		835365	0					
ANR	835765	PtrMemberAccess	penum -> obox		835365	0					
ANR	835766	Identifier	penum		835365	0					
ANR	835767	Identifier	obox		835365	1					
ANR	835768	Identifier	q		835365	1					
ANR	835769	Identifier	x		835365	1					
ANR	835770	OrExpression	x + w <= penum -> obox . p . x || y >= penum -> obox . q . y || y + h <= penum -> obox . p . y		835365	1		||			
ANR	835771	RelationalExpression	x + w <= penum -> obox . p . x		835365	0		<=			
ANR	835772	AdditiveExpression	x + w		835365	0		+			
ANR	835773	Identifier	x		835365	0					
ANR	835774	Identifier	w		835365	1					
ANR	835775	MemberAccess	penum -> obox . p . x		835365	1					
ANR	835776	MemberAccess	penum -> obox . p		835365	0					
ANR	835777	PtrMemberAccess	penum -> obox		835365	0					
ANR	835778	Identifier	penum		835365	0					
ANR	835779	Identifier	obox		835365	1					
ANR	835780	Identifier	p		835365	1					
ANR	835781	Identifier	x		835365	1					
ANR	835782	OrExpression	y >= penum -> obox . q . y || y + h <= penum -> obox . p . y		835365	1		||			
ANR	835783	RelationalExpression	y >= penum -> obox . q . y		835365	0		>=			
ANR	835784	Identifier	y		835365	0					
ANR	835785	MemberAccess	penum -> obox . q . y		835365	1					
ANR	835786	MemberAccess	penum -> obox . q		835365	0					
ANR	835787	PtrMemberAccess	penum -> obox		835365	0					
ANR	835788	Identifier	penum		835365	0					
ANR	835789	Identifier	obox		835365	1					
ANR	835790	Identifier	q		835365	1					
ANR	835791	Identifier	y		835365	1					
ANR	835792	RelationalExpression	y + h <= penum -> obox . p . y		835365	1		<=			
ANR	835793	AdditiveExpression	y + h		835365	0		+			
ANR	835794	Identifier	y		835365	0					
ANR	835795	Identifier	h		835365	1					
ANR	835796	MemberAccess	penum -> obox . p . y		835365	1					
ANR	835797	MemberAccess	penum -> obox . p		835365	0					
ANR	835798	PtrMemberAccess	penum -> obox		835365	0					
ANR	835799	Identifier	penum		835365	0					
ANR	835800	Identifier	obox		835365	1					
ANR	835801	Identifier	p		835365	1					
ANR	835802	Identifier	y		835365	1					
ANR	835803	ReturnStatement	return 0 ;	232:12:8435:8443	835365	1	True				
ANR	835804	PrimaryExpression	0		835365	0					
ANR	835805	ExpressionStatement	"code = gx_effective_clip_path ( pgs , & pcpath )"	233:8:8474:8517	835365	2	True				
ANR	835806	AssignmentExpression	"code = gx_effective_clip_path ( pgs , & pcpath )"		835365	0		=			
ANR	835807	Identifier	code		835365	0					
ANR	835808	CallExpression	"gx_effective_clip_path ( pgs , & pcpath )"		835365	1					
ANR	835809	Callee	gx_effective_clip_path		835365	0					
ANR	835810	Identifier	gx_effective_clip_path		835365	0					
ANR	835811	ArgumentList	pgs		835365	1					
ANR	835812	Argument	pgs		835365	0					
ANR	835813	Identifier	pgs		835365	0					
ANR	835814	Argument	& pcpath		835365	1					
ANR	835815	UnaryOperationExpression	& pcpath		835365	0					
ANR	835816	UnaryOperator	&		835365	0					
ANR	835817	Identifier	pcpath		835365	1					
ANR	835818	IfStatement	if ( code < 0 )		835365	3					
ANR	835819	Condition	code < 0	234:12:8531:8538	835365	0	True				
ANR	835820	RelationalExpression	code < 0		835365	0		<			
ANR	835821	Identifier	code		835365	0					
ANR	835822	PrimaryExpression	0		835365	1					
ANR	835823	ReturnStatement	return code ;	235:12:8553:8564	835365	1	True				
ANR	835824	Identifier	code		835365	0					
ANR	835825	ExpressionStatement	"gx_make_clip_device_on_stack ( & cdev , pcpath , imaging_dev )"	236:8:8574:8630	835365	4	True				
ANR	835826	CallExpression	"gx_make_clip_device_on_stack ( & cdev , pcpath , imaging_dev )"		835365	0					
ANR	835827	Callee	gx_make_clip_device_on_stack		835365	0					
ANR	835828	Identifier	gx_make_clip_device_on_stack		835365	0					
ANR	835829	ArgumentList	& cdev		835365	1					
ANR	835830	Argument	& cdev		835365	0					
ANR	835831	UnaryOperationExpression	& cdev		835365	0					
ANR	835832	UnaryOperator	&		835365	0					
ANR	835833	Identifier	cdev		835365	1					
ANR	835834	Argument	pcpath		835365	1					
ANR	835835	Identifier	pcpath		835365	0					
ANR	835836	Argument	imaging_dev		835365	2					
ANR	835837	Identifier	imaging_dev		835365	0					
ANR	835838	ExpressionStatement	imaging_dev = ( gx_device * ) & cdev	237:8:8640:8674	835365	5	True				
ANR	835839	AssignmentExpression	imaging_dev = ( gx_device * ) & cdev		835365	0		=			
ANR	835840	Identifier	imaging_dev		835365	0					
ANR	835841	CastExpression	( gx_device * ) & cdev		835365	1					
ANR	835842	CastTarget	gx_device *		835365	0					
ANR	835843	UnaryOperationExpression	& cdev		835365	1					
ANR	835844	UnaryOperator	&		835365	0					
ANR	835845	Identifier	cdev		835365	1					
ANR	835846	ExpressionStatement	"if_debug0m ( 'K' , penum -> memory , ""[K](clipping)\\n"" )"	238:8:8684:8733	835365	6	True				
ANR	835847	CallExpression	"if_debug0m ( 'K' , penum -> memory , ""[K](clipping)\\n"" )"		835365	0					
ANR	835848	Callee	if_debug0m		835365	0					
ANR	835849	Identifier	if_debug0m		835365	0					
ANR	835850	ArgumentList	'K'		835365	1					
ANR	835851	Argument	'K'		835365	0					
ANR	835852	PrimaryExpression	'K'		835365	0					
ANR	835853	Argument	penum -> memory		835365	1					
ANR	835854	PtrMemberAccess	penum -> memory		835365	0					
ANR	835855	Identifier	penum		835365	0					
ANR	835856	Identifier	memory		835365	1					
ANR	835857	Argument	"""[K](clipping)\\n"""		835365	2					
ANR	835858	PrimaryExpression	"""[K](clipping)\\n"""		835365	0					
ANR	835859	ExpressionStatement	code = gx_set_dev_color ( pgs )	240:4:8745:8773	835365	24	True				
ANR	835860	AssignmentExpression	code = gx_set_dev_color ( pgs )		835365	0		=			
ANR	835861	Identifier	code		835365	0					
ANR	835862	CallExpression	gx_set_dev_color ( pgs )		835365	1					
ANR	835863	Callee	gx_set_dev_color		835365	0					
ANR	835864	Identifier	gx_set_dev_color		835365	0					
ANR	835865	ArgumentList	pgs		835365	1					
ANR	835866	Argument	pgs		835365	0					
ANR	835867	Identifier	pgs		835365	0					
ANR	835868	IfStatement	if ( code != 0 )		835365	25					
ANR	835869	Condition	code != 0	241:8:8783:8791	835365	0	True				
ANR	835870	EqualityExpression	code != 0		835365	0		!=			
ANR	835871	Identifier	code		835365	0					
ANR	835872	PrimaryExpression	0		835365	1					
ANR	835873	ReturnStatement	return code ;	242:8:8802:8813	835365	1	True				
ANR	835874	Identifier	code		835365	0					
ANR	835875	IfStatement	if ( xg != gx_no_xglyph && ( xf = cc_pair ( cc ) -> xfont ) != 0 )		835365	26					
ANR	835876	Condition	xg != gx_no_xglyph && ( xf = cc_pair ( cc ) -> xfont ) != 0	244:8:8880:8931	835365	0	True				
ANR	835877	AndExpression	xg != gx_no_xglyph && ( xf = cc_pair ( cc ) -> xfont ) != 0		835365	0		&&			
ANR	835878	EqualityExpression	xg != gx_no_xglyph		835365	0		!=			
ANR	835879	Identifier	xg		835365	0					
ANR	835880	Identifier	gx_no_xglyph		835365	1					
ANR	835881	EqualityExpression	( xf = cc_pair ( cc ) -> xfont ) != 0		835365	1		!=			
ANR	835882	AssignmentExpression	xf = cc_pair ( cc ) -> xfont		835365	0		=			
ANR	835883	Identifier	xf		835365	0					
ANR	835884	PtrMemberAccess	cc_pair ( cc ) -> xfont		835365	1					
ANR	835885	CallExpression	cc_pair ( cc )		835365	0					
ANR	835886	Callee	cc_pair		835365	0					
ANR	835887	Identifier	cc_pair		835365	0					
ANR	835888	ArgumentList	cc		835365	1					
ANR	835889	Argument	cc		835365	0					
ANR	835890	Identifier	cc		835365	0					
ANR	835891	Identifier	xfont		835365	1					
ANR	835892	PrimaryExpression	0		835365	1					
ANR	835893	CompoundStatement		69:8:2655:2691	835365	1					
ANR	835894	IdentifierDeclStatement	int cx = x + fixed2int ( cc -> offset . x ) ;	245:8:8944:8980	835365	0	True				
ANR	835895	IdentifierDecl	cx = x + fixed2int ( cc -> offset . x )		835365	0					
ANR	835896	IdentifierDeclType	int		835365	0					
ANR	835897	Identifier	cx		835365	1					
ANR	835898	AssignmentExpression	cx = x + fixed2int ( cc -> offset . x )		835365	2		=			
ANR	835899	Identifier	cx		835365	0					
ANR	835900	AdditiveExpression	x + fixed2int ( cc -> offset . x )		835365	1		+			
ANR	835901	Identifier	x		835365	0					
ANR	835902	CallExpression	fixed2int ( cc -> offset . x )		835365	1					
ANR	835903	Callee	fixed2int		835365	0					
ANR	835904	Identifier	fixed2int		835365	0					
ANR	835905	ArgumentList	cc -> offset . x		835365	1					
ANR	835906	Argument	cc -> offset . x		835365	0					
ANR	835907	MemberAccess	cc -> offset . x		835365	0					
ANR	835908	PtrMemberAccess	cc -> offset		835365	0					
ANR	835909	Identifier	cc		835365	0					
ANR	835910	Identifier	offset		835365	1					
ANR	835911	Identifier	x		835365	1					
ANR	835912	IdentifierDeclStatement	int cy = y + fixed2int ( cc -> offset . y ) ;	246:8:8990:9026	835365	1	True				
ANR	835913	IdentifierDecl	cy = y + fixed2int ( cc -> offset . y )		835365	0					
ANR	835914	IdentifierDeclType	int		835365	0					
ANR	835915	Identifier	cy		835365	1					
ANR	835916	AssignmentExpression	cy = y + fixed2int ( cc -> offset . y )		835365	2		=			
ANR	835917	Identifier	cy		835365	0					
ANR	835918	AdditiveExpression	y + fixed2int ( cc -> offset . y )		835365	1		+			
ANR	835919	Identifier	y		835365	0					
ANR	835920	CallExpression	fixed2int ( cc -> offset . y )		835365	1					
ANR	835921	Callee	fixed2int		835365	0					
ANR	835922	Identifier	fixed2int		835365	0					
ANR	835923	ArgumentList	cc -> offset . y		835365	1					
ANR	835924	Argument	cc -> offset . y		835365	0					
ANR	835925	MemberAccess	cc -> offset . y		835365	0					
ANR	835926	PtrMemberAccess	cc -> offset		835365	0					
ANR	835927	Identifier	cc		835365	0					
ANR	835928	Identifier	offset		835365	1					
ANR	835929	Identifier	y		835365	1					
ANR	835930	IfStatement	if ( gs_color_writes_pure ( pgs ) )		835365	2					
ANR	835931	Condition	gs_color_writes_pure ( pgs )	254:12:9318:9342	835365	0	True				
ANR	835932	CallExpression	gs_color_writes_pure ( pgs )		835365	0					
ANR	835933	Callee	gs_color_writes_pure		835365	0					
ANR	835934	Identifier	gs_color_writes_pure		835365	0					
ANR	835935	ArgumentList	pgs		835365	1					
ANR	835936	Argument	pgs		835365	0					
ANR	835937	Identifier	pgs		835365	0					
ANR	835938	CompoundStatement		77:39:3010:3010	835365	1					
ANR	835939	ExpressionStatement	"code = ( * xf -> common . procs -> render_char ) ( xf , xg , imaging_dev , cx , cy , pdevc -> colors . pure , 0 )"	255:12:9359:9531	835365	0	True				
ANR	835940	AssignmentExpression	"code = ( * xf -> common . procs -> render_char ) ( xf , xg , imaging_dev , cx , cy , pdevc -> colors . pure , 0 )"		835365	0		=			
ANR	835941	Identifier	code		835365	0					
ANR	835942	CallExpression	"( * xf -> common . procs -> render_char ) ( xf , xg , imaging_dev , cx , cy , pdevc -> colors . pure , 0 )"		835365	1					
ANR	835943	Callee	* xf -> common . procs -> render_char		835365	0					
ANR	835944	UnaryOperationExpression	* xf -> common . procs -> render_char		835365	0					
ANR	835945	UnaryOperator	*		835365	0					
ANR	835946	PtrMemberAccess	xf -> common . procs -> render_char		835365	1					
ANR	835947	MemberAccess	xf -> common . procs		835365	0					
ANR	835948	PtrMemberAccess	xf -> common		835365	0					
ANR	835949	Identifier	xf		835365	0					
ANR	835950	Identifier	common		835365	1					
ANR	835951	Identifier	procs		835365	1					
ANR	835952	Identifier	render_char		835365	1					
ANR	835953	ArgumentList	xf		835365	1					
ANR	835954	Argument	xf		835365	0					
ANR	835955	Identifier	xf		835365	0					
ANR	835956	Argument	xg		835365	1					
ANR	835957	Identifier	xg		835365	0					
ANR	835958	Argument	imaging_dev		835365	2					
ANR	835959	Identifier	imaging_dev		835365	0					
ANR	835960	Argument	cx		835365	3					
ANR	835961	Identifier	cx		835365	0					
ANR	835962	Argument	cy		835365	4					
ANR	835963	Identifier	cy		835365	0					
ANR	835964	Argument	pdevc -> colors . pure		835365	5					
ANR	835965	MemberAccess	pdevc -> colors . pure		835365	0					
ANR	835966	PtrMemberAccess	pdevc -> colors		835365	0					
ANR	835967	Identifier	pdevc		835365	0					
ANR	835968	Identifier	colors		835365	1					
ANR	835969	Identifier	pure		835365	1					
ANR	835970	Argument	0		835365	6					
ANR	835971	PrimaryExpression	0		835365	0					
ANR	835972	ExpressionStatement	"if_debug8m ( 'K' , penum -> memory , ""[K]render_char display: xfont=0x%lx, glyph=0x%lx\\n\\tdev=0x%lx(%s) x,y=%d,%d, color=0x%lx => %d\\n"" , ( ulong ) xf , ( ulong ) xg , ( ulong ) imaging_dev , imaging_dev -> dname , cx , cy , ( ulong ) pdevc -> colors . pure , code )"	258:12:9545:9874	835365	1	True				
ANR	835973	CallExpression	"if_debug8m ( 'K' , penum -> memory , ""[K]render_char display: xfont=0x%lx, glyph=0x%lx\\n\\tdev=0x%lx(%s) x,y=%d,%d, color=0x%lx => %d\\n"" , ( ulong ) xf , ( ulong ) xg , ( ulong ) imaging_dev , imaging_dev -> dname , cx , cy , ( ulong ) pdevc -> colors . pure , code )"		835365	0					
ANR	835974	Callee	if_debug8m		835365	0					
ANR	835975	Identifier	if_debug8m		835365	0					
ANR	835976	ArgumentList	'K'		835365	1					
ANR	835977	Argument	'K'		835365	0					
ANR	835978	PrimaryExpression	'K'		835365	0					
ANR	835979	Argument	penum -> memory		835365	1					
ANR	835980	PtrMemberAccess	penum -> memory		835365	0					
ANR	835981	Identifier	penum		835365	0					
ANR	835982	Identifier	memory		835365	1					
ANR	835983	Argument	"""[K]render_char display: xfont=0x%lx, glyph=0x%lx\\n\\tdev=0x%lx(%s) x,y=%d,%d, color=0x%lx => %d\\n"""		835365	2					
ANR	835984	PrimaryExpression	"""[K]render_char display: xfont=0x%lx, glyph=0x%lx\\n\\tdev=0x%lx(%s) x,y=%d,%d, color=0x%lx => %d\\n"""		835365	0					
ANR	835985	Argument	( ulong ) xf		835365	3					
ANR	835986	CastExpression	( ulong ) xf		835365	0					
ANR	835987	CastTarget	ulong		835365	0					
ANR	835988	Identifier	xf		835365	1					
ANR	835989	Argument	( ulong ) xg		835365	4					
ANR	835990	CastExpression	( ulong ) xg		835365	0					
ANR	835991	CastTarget	ulong		835365	0					
ANR	835992	Identifier	xg		835365	1					
ANR	835993	Argument	( ulong ) imaging_dev		835365	5					
ANR	835994	CastExpression	( ulong ) imaging_dev		835365	0					
ANR	835995	CastTarget	ulong		835365	0					
ANR	835996	Identifier	imaging_dev		835365	1					
ANR	835997	Argument	imaging_dev -> dname		835365	6					
ANR	835998	PtrMemberAccess	imaging_dev -> dname		835365	0					
ANR	835999	Identifier	imaging_dev		835365	0					
ANR	836000	Identifier	dname		835365	1					
ANR	836001	Argument	cx		835365	7					
ANR	836002	Identifier	cx		835365	0					
ANR	836003	Argument	cy		835365	8					
ANR	836004	Identifier	cy		835365	0					
ANR	836005	Argument	( ulong ) pdevc -> colors . pure		835365	9					
ANR	836006	CastExpression	( ulong ) pdevc -> colors . pure		835365	0					
ANR	836007	CastTarget	ulong		835365	0					
ANR	836008	MemberAccess	pdevc -> colors . pure		835365	1					
ANR	836009	PtrMemberAccess	pdevc -> colors		835365	0					
ANR	836010	Identifier	pdevc		835365	0					
ANR	836011	Identifier	colors		835365	1					
ANR	836012	Identifier	pure		835365	1					
ANR	836013	Argument	code		835365	10					
ANR	836014	Identifier	code		835365	0					
ANR	836015	IfStatement	if ( code == 0 )		835365	2					
ANR	836016	Condition	code == 0	263:16:9892:9900	835365	0	True				
ANR	836017	EqualityExpression	code == 0		835365	0		==			
ANR	836018	Identifier	code		835365	0					
ANR	836019	PrimaryExpression	0		835365	1					
ANR	836020	ExpressionStatement	"return_check_interrupt ( penum -> memory , 0 )"	264:16:9919:9959	835365	1	True				
ANR	836021	CallExpression	"return_check_interrupt ( penum -> memory , 0 )"		835365	0					
ANR	836022	Callee	return_check_interrupt		835365	0					
ANR	836023	Identifier	return_check_interrupt		835365	0					
ANR	836024	ArgumentList	penum -> memory		835365	1					
ANR	836025	Argument	penum -> memory		835365	0					
ANR	836026	PtrMemberAccess	penum -> memory		835365	0					
ANR	836027	Identifier	penum		835365	0					
ANR	836028	Identifier	memory		835365	1					
ANR	836029	Argument	0		835365	1					
ANR	836030	PrimaryExpression	0		835365	0					
ANR	836031	IfStatement	if ( ! cc_has_bits ( cc ) )		835365	3					
ANR	836032	Condition	! cc_has_bits ( cc )	268:12:10093:10108	835365	0	True				
ANR	836033	UnaryOperationExpression	! cc_has_bits ( cc )		835365	0					
ANR	836034	UnaryOperator	!		835365	0					
ANR	836035	CallExpression	cc_has_bits ( cc )		835365	1					
ANR	836036	Callee	cc_has_bits		835365	0					
ANR	836037	Identifier	cc_has_bits		835365	0					
ANR	836038	ArgumentList	cc		835365	1					
ANR	836039	Argument	cc		835365	0					
ANR	836040	Identifier	cc		835365	0					
ANR	836041	CompoundStatement		92:12:3790:3811	835365	1					
ANR	836042	IdentifierDeclStatement	gx_device_memory mdev ;	269:12:10125:10146	835365	0	True				
ANR	836043	IdentifierDecl	mdev		835365	0					
ANR	836044	IdentifierDeclType	gx_device_memory		835365	0					
ANR	836045	Identifier	mdev		835365	1					
ANR	836046	ExpressionStatement	"gs_make_mem_mono_device ( & mdev , dev -> memory , imaging_dev )"	271:12:10161:10217	835365	1	True				
ANR	836047	CallExpression	"gs_make_mem_mono_device ( & mdev , dev -> memory , imaging_dev )"		835365	0					
ANR	836048	Callee	gs_make_mem_mono_device		835365	0					
ANR	836049	Identifier	gs_make_mem_mono_device		835365	0					
ANR	836050	ArgumentList	& mdev		835365	1					
ANR	836051	Argument	& mdev		835365	0					
ANR	836052	UnaryOperationExpression	& mdev		835365	0					
ANR	836053	UnaryOperator	&		835365	0					
ANR	836054	Identifier	mdev		835365	1					
ANR	836055	Argument	dev -> memory		835365	1					
ANR	836056	PtrMemberAccess	dev -> memory		835365	0					
ANR	836057	Identifier	dev		835365	0					
ANR	836058	Identifier	memory		835365	1					
ANR	836059	Argument	imaging_dev		835365	2					
ANR	836060	Identifier	imaging_dev		835365	0					
ANR	836061	ExpressionStatement	"gx_open_cache_device ( & mdev , cc )"	272:12:10231:10262	835365	2	True				
ANR	836062	CallExpression	"gx_open_cache_device ( & mdev , cc )"		835365	0					
ANR	836063	Callee	gx_open_cache_device		835365	0					
ANR	836064	Identifier	gx_open_cache_device		835365	0					
ANR	836065	ArgumentList	& mdev		835365	1					
ANR	836066	Argument	& mdev		835365	0					
ANR	836067	UnaryOperationExpression	& mdev		835365	0					
ANR	836068	UnaryOperator	&		835365	0					
ANR	836069	Identifier	mdev		835365	1					
ANR	836070	Argument	cc		835365	1					
ANR	836071	Identifier	cc		835365	0					
ANR	836072	ExpressionStatement	"code = ( * xf -> common . procs -> render_char ) ( xf , xg , ( gx_device * ) & mdev , cx - x , cy - y , ( gx_color_index ) 1 , 1 )"	273:12:10276:10477	835365	3	True				
ANR	836073	AssignmentExpression	"code = ( * xf -> common . procs -> render_char ) ( xf , xg , ( gx_device * ) & mdev , cx - x , cy - y , ( gx_color_index ) 1 , 1 )"		835365	0		=			
ANR	836074	Identifier	code		835365	0					
ANR	836075	CallExpression	"( * xf -> common . procs -> render_char ) ( xf , xg , ( gx_device * ) & mdev , cx - x , cy - y , ( gx_color_index ) 1 , 1 )"		835365	1					
ANR	836076	Callee	* xf -> common . procs -> render_char		835365	0					
ANR	836077	UnaryOperationExpression	* xf -> common . procs -> render_char		835365	0					
ANR	836078	UnaryOperator	*		835365	0					
ANR	836079	PtrMemberAccess	xf -> common . procs -> render_char		835365	1					
ANR	836080	MemberAccess	xf -> common . procs		835365	0					
ANR	836081	PtrMemberAccess	xf -> common		835365	0					
ANR	836082	Identifier	xf		835365	0					
ANR	836083	Identifier	common		835365	1					
ANR	836084	Identifier	procs		835365	1					
ANR	836085	Identifier	render_char		835365	1					
ANR	836086	ArgumentList	xf		835365	1					
ANR	836087	Argument	xf		835365	0					
ANR	836088	Identifier	xf		835365	0					
ANR	836089	Argument	xg		835365	1					
ANR	836090	Identifier	xg		835365	0					
ANR	836091	Argument	( gx_device * ) & mdev		835365	2					
ANR	836092	CastExpression	( gx_device * ) & mdev		835365	0					
ANR	836093	CastTarget	gx_device *		835365	0					
ANR	836094	UnaryOperationExpression	& mdev		835365	1					
ANR	836095	UnaryOperator	&		835365	0					
ANR	836096	Identifier	mdev		835365	1					
ANR	836097	Argument	cx - x		835365	3					
ANR	836098	AdditiveExpression	cx - x		835365	0		-			
ANR	836099	Identifier	cx		835365	0					
ANR	836100	Identifier	x		835365	1					
ANR	836101	Argument	cy - y		835365	4					
ANR	836102	AdditiveExpression	cy - y		835365	0		-			
ANR	836103	Identifier	cy		835365	0					
ANR	836104	Identifier	y		835365	1					
ANR	836105	Argument	( gx_color_index ) 1		835365	5					
ANR	836106	CastExpression	( gx_color_index ) 1		835365	0					
ANR	836107	CastTarget	gx_color_index		835365	0					
ANR	836108	PrimaryExpression	1		835365	1					
ANR	836109	Argument	1		835365	6					
ANR	836110	PrimaryExpression	1		835365	0					
ANR	836111	ExpressionStatement	"if_debug7m ( 'K' , penum -> memory , ""[K]render_char to bits: xfont=0x%lx, glyph=0x%lx\\n\\tdev=0x%lx(%s) x,y=%d,%d => %d\\n"" , ( ulong ) xf , ( ulong ) xg , ( ulong ) & mdev , mdev . dname , cx - x , cy - y , code )"	276:12:10491:10749	835365	4	True				
ANR	836112	CallExpression	"if_debug7m ( 'K' , penum -> memory , ""[K]render_char to bits: xfont=0x%lx, glyph=0x%lx\\n\\tdev=0x%lx(%s) x,y=%d,%d => %d\\n"" , ( ulong ) xf , ( ulong ) xg , ( ulong ) & mdev , mdev . dname , cx - x , cy - y , code )"		835365	0					
ANR	836113	Callee	if_debug7m		835365	0					
ANR	836114	Identifier	if_debug7m		835365	0					
ANR	836115	ArgumentList	'K'		835365	1					
ANR	836116	Argument	'K'		835365	0					
ANR	836117	PrimaryExpression	'K'		835365	0					
ANR	836118	Argument	penum -> memory		835365	1					
ANR	836119	PtrMemberAccess	penum -> memory		835365	0					
ANR	836120	Identifier	penum		835365	0					
ANR	836121	Identifier	memory		835365	1					
ANR	836122	Argument	"""[K]render_char to bits: xfont=0x%lx, glyph=0x%lx\\n\\tdev=0x%lx(%s) x,y=%d,%d => %d\\n"""		835365	2					
ANR	836123	PrimaryExpression	"""[K]render_char to bits: xfont=0x%lx, glyph=0x%lx\\n\\tdev=0x%lx(%s) x,y=%d,%d => %d\\n"""		835365	0					
ANR	836124	Argument	( ulong ) xf		835365	3					
ANR	836125	CastExpression	( ulong ) xf		835365	0					
ANR	836126	CastTarget	ulong		835365	0					
ANR	836127	Identifier	xf		835365	1					
ANR	836128	Argument	( ulong ) xg		835365	4					
ANR	836129	CastExpression	( ulong ) xg		835365	0					
ANR	836130	CastTarget	ulong		835365	0					
ANR	836131	Identifier	xg		835365	1					
ANR	836132	Argument	( ulong ) & mdev		835365	5					
ANR	836133	CastExpression	( ulong ) & mdev		835365	0					
ANR	836134	CastTarget	ulong		835365	0					
ANR	836135	UnaryOperationExpression	& mdev		835365	1					
ANR	836136	UnaryOperator	&		835365	0					
ANR	836137	Identifier	mdev		835365	1					
ANR	836138	Argument	mdev . dname		835365	6					
ANR	836139	MemberAccess	mdev . dname		835365	0					
ANR	836140	Identifier	mdev		835365	0					
ANR	836141	Identifier	dname		835365	1					
ANR	836142	Argument	cx - x		835365	7					
ANR	836143	AdditiveExpression	cx - x		835365	0		-			
ANR	836144	Identifier	cx		835365	0					
ANR	836145	Identifier	x		835365	1					
ANR	836146	Argument	cy - y		835365	8					
ANR	836147	AdditiveExpression	cy - y		835365	0		-			
ANR	836148	Identifier	cy		835365	0					
ANR	836149	Identifier	y		835365	1					
ANR	836150	Argument	code		835365	9					
ANR	836151	Identifier	code		835365	0					
ANR	836152	IfStatement	if ( code != 0 )		835365	5					
ANR	836153	Condition	code != 0	280:16:10767:10775	835365	0	True				
ANR	836154	EqualityExpression	code != 0		835365	0		!=			
ANR	836155	Identifier	code		835365	0					
ANR	836156	PrimaryExpression	0		835365	1					
ANR	836157	ExpressionStatement	"return_check_interrupt ( penum -> memory , 1 )"	281:16:10794:10834	835365	1	True				
ANR	836158	CallExpression	"return_check_interrupt ( penum -> memory , 1 )"		835365	0					
ANR	836159	Callee	return_check_interrupt		835365	0					
ANR	836160	Identifier	return_check_interrupt		835365	0					
ANR	836161	ArgumentList	penum -> memory		835365	1					
ANR	836162	Argument	penum -> memory		835365	0					
ANR	836163	PtrMemberAccess	penum -> memory		835365	0					
ANR	836164	Identifier	penum		835365	0					
ANR	836165	Identifier	memory		835365	1					
ANR	836166	Argument	1		835365	1					
ANR	836167	PrimaryExpression	1		835365	0					
ANR	836168	ExpressionStatement	"gx_add_char_bits ( cc_pair ( cc ) -> font -> dir , cc , & scale_log2_1 )"	282:12:10848:10936	835365	6	True				
ANR	836169	CallExpression	"gx_add_char_bits ( cc_pair ( cc ) -> font -> dir , cc , & scale_log2_1 )"		835365	0					
ANR	836170	Callee	gx_add_char_bits		835365	0					
ANR	836171	Identifier	gx_add_char_bits		835365	0					
ANR	836172	ArgumentList	cc_pair ( cc ) -> font -> dir		835365	1					
ANR	836173	Argument	cc_pair ( cc ) -> font -> dir		835365	0					
ANR	836174	PtrMemberAccess	cc_pair ( cc ) -> font -> dir		835365	0					
ANR	836175	PtrMemberAccess	cc_pair ( cc ) -> font		835365	0					
ANR	836176	CallExpression	cc_pair ( cc )		835365	0					
ANR	836177	Callee	cc_pair		835365	0					
ANR	836178	Identifier	cc_pair		835365	0					
ANR	836179	ArgumentList	cc		835365	1					
ANR	836180	Argument	cc		835365	0					
ANR	836181	Identifier	cc		835365	0					
ANR	836182	Identifier	font		835365	1					
ANR	836183	Identifier	dir		835365	1					
ANR	836184	Argument	cc		835365	1					
ANR	836185	Identifier	cc		835365	0					
ANR	836186	Argument	& scale_log2_1		835365	2					
ANR	836187	UnaryOperationExpression	& scale_log2_1		835365	0					
ANR	836188	UnaryOperator	&		835365	0					
ANR	836189	Identifier	scale_log2_1		835365	1					
ANR	836190	ExpressionStatement	xg = gx_no_xglyph	288:12:11194:11211	835365	7	True				
ANR	836191	AssignmentExpression	xg = gx_no_xglyph		835365	0		=			
ANR	836192	Identifier	xg		835365	0					
ANR	836193	Identifier	gx_no_xglyph		835365	1					
ANR	836194	GotoStatement	goto top ;	289:12:11225:11233	835365	8	True				
ANR	836195	Identifier	top		835365	0					
ANR	836196	ExpressionStatement	bits = cc_bits ( cc )	298:4:11513:11531	835365	27	True				
ANR	836197	AssignmentExpression	bits = cc_bits ( cc )		835365	0		=			
ANR	836198	Identifier	bits		835365	0					
ANR	836199	CallExpression	cc_bits ( cc )		835365	1					
ANR	836200	Callee	cc_bits		835365	0					
ANR	836201	Identifier	cc_bits		835365	0					
ANR	836202	ArgumentList	cc		835365	1					
ANR	836203	Argument	cc		835365	0					
ANR	836204	Identifier	cc		835365	0					
ANR	836205	ExpressionStatement	depth = ( cc_depth ( cc ) == 3 ? 2 : cc_depth ( cc ) )	303:4:11700:11746	835365	28	True				
ANR	836206	AssignmentExpression	depth = ( cc_depth ( cc ) == 3 ? 2 : cc_depth ( cc ) )		835365	0		=			
ANR	836207	Identifier	depth		835365	0					
ANR	836208	ConditionalExpression	cc_depth ( cc ) == 3 ? 2 : cc_depth ( cc )		835365	1					
ANR	836209	Condition	cc_depth ( cc ) == 3		835365	0					
ANR	836210	EqualityExpression	cc_depth ( cc ) == 3		835365	0		==			
ANR	836211	CallExpression	cc_depth ( cc )		835365	0					
ANR	836212	Callee	cc_depth		835365	0					
ANR	836213	Identifier	cc_depth		835365	0					
ANR	836214	ArgumentList	cc		835365	1					
ANR	836215	Argument	cc		835365	0					
ANR	836216	Identifier	cc		835365	0					
ANR	836217	PrimaryExpression	3		835365	1					
ANR	836218	PrimaryExpression	2		835365	1					
ANR	836219	CallExpression	cc_depth ( cc )		835365	2					
ANR	836220	Callee	cc_depth		835365	0					
ANR	836221	Identifier	cc_depth		835365	0					
ANR	836222	ArgumentList	cc		835365	1					
ANR	836223	Argument	cc		835365	0					
ANR	836224	Identifier	cc		835365	0					
ANR	836225	IfStatement	"if ( ( dev_proc ( orig_dev , fill_mask ) != gx_default_fill_mask || ! lop_no_S_is_T ( pgs -> log_op ) ) )"		835365	29					
ANR	836226	Condition	"dev_proc ( orig_dev , fill_mask ) != gx_default_fill_mask || ! lop_no_S_is_T ( pgs -> log_op )"	304:8:11756:11849	835365	0	True				
ANR	836227	OrExpression	"dev_proc ( orig_dev , fill_mask ) != gx_default_fill_mask || ! lop_no_S_is_T ( pgs -> log_op )"		835365	0		||			
ANR	836228	EqualityExpression	"dev_proc ( orig_dev , fill_mask ) != gx_default_fill_mask"		835365	0		!=			
ANR	836229	CallExpression	"dev_proc ( orig_dev , fill_mask )"		835365	0					
ANR	836230	Callee	dev_proc		835365	0					
ANR	836231	Identifier	dev_proc		835365	0					
ANR	836232	ArgumentList	orig_dev		835365	1					
ANR	836233	Argument	orig_dev		835365	0					
ANR	836234	Identifier	orig_dev		835365	0					
ANR	836235	Argument	fill_mask		835365	1					
ANR	836236	Identifier	fill_mask		835365	0					
ANR	836237	Identifier	gx_default_fill_mask		835365	1					
ANR	836238	UnaryOperationExpression	! lop_no_S_is_T ( pgs -> log_op )		835365	1					
ANR	836239	UnaryOperator	!		835365	0					
ANR	836240	CallExpression	lop_no_S_is_T ( pgs -> log_op )		835365	1					
ANR	836241	Callee	lop_no_S_is_T		835365	0					
ANR	836242	Identifier	lop_no_S_is_T		835365	0					
ANR	836243	ArgumentList	pgs -> log_op		835365	1					
ANR	836244	Argument	pgs -> log_op		835365	0					
ANR	836245	PtrMemberAccess	pgs -> log_op		835365	0					
ANR	836246	Identifier	pgs		835365	0					
ANR	836247	Identifier	log_op		835365	1					
ANR	836248	CompoundStatement		130:8:5528:5548	835365	1					
ANR	836249	IdentifierDeclStatement	gx_clip_path * pcpath ;	307:8:11863:11883	835365	0	True				
ANR	836250	IdentifierDecl	* pcpath		835365	0					
ANR	836251	IdentifierDeclType	gx_clip_path *		835365	0					
ANR	836252	Identifier	pcpath		835365	1					
ANR	836253	ExpressionStatement	penum -> use_wxy_float = false	309:8:11894:11922	835365	1	True				
ANR	836254	AssignmentExpression	penum -> use_wxy_float = false		835365	0		=			
ANR	836255	PtrMemberAccess	penum -> use_wxy_float		835365	0					
ANR	836256	Identifier	penum		835365	0					
ANR	836257	Identifier	use_wxy_float		835365	1					
ANR	836258	Identifier	false		835365	1					
ANR	836259	ExpressionStatement	penum -> wxy_float . x = penum -> wxy_float . y = 0.0	310:8:11932:11977	835365	2	True				
ANR	836260	AssignmentExpression	penum -> wxy_float . x = penum -> wxy_float . y = 0.0		835365	0		=			
ANR	836261	MemberAccess	penum -> wxy_float . x		835365	0					
ANR	836262	PtrMemberAccess	penum -> wxy_float		835365	0					
ANR	836263	Identifier	penum		835365	0					
ANR	836264	Identifier	wxy_float		835365	1					
ANR	836265	Identifier	x		835365	1					
ANR	836266	AssignmentExpression	penum -> wxy_float . y = 0.0		835365	1		=			
ANR	836267	MemberAccess	penum -> wxy_float . y		835365	0					
ANR	836268	PtrMemberAccess	penum -> wxy_float		835365	0					
ANR	836269	Identifier	penum		835365	0					
ANR	836270	Identifier	wxy_float		835365	1					
ANR	836271	Identifier	y		835365	1					
ANR	836272	PrimaryExpression	0.0		835365	1					
ANR	836273	ExpressionStatement	penum -> wxy = cc -> wxy	311:8:11987:12007	835365	3	True				
ANR	836274	AssignmentExpression	penum -> wxy = cc -> wxy		835365	0		=			
ANR	836275	PtrMemberAccess	penum -> wxy		835365	0					
ANR	836276	Identifier	penum		835365	0					
ANR	836277	Identifier	wxy		835365	1					
ANR	836278	PtrMemberAccess	cc -> wxy		835365	1					
ANR	836279	Identifier	cc		835365	0					
ANR	836280	Identifier	wxy		835365	1					
ANR	836281	ExpressionStatement	"code = gx_effective_clip_path ( pgs , & pcpath )"	313:8:12018:12061	835365	4	True				
ANR	836282	AssignmentExpression	"code = gx_effective_clip_path ( pgs , & pcpath )"		835365	0		=			
ANR	836283	Identifier	code		835365	0					
ANR	836284	CallExpression	"gx_effective_clip_path ( pgs , & pcpath )"		835365	1					
ANR	836285	Callee	gx_effective_clip_path		835365	0					
ANR	836286	Identifier	gx_effective_clip_path		835365	0					
ANR	836287	ArgumentList	pgs		835365	1					
ANR	836288	Argument	pgs		835365	0					
ANR	836289	Identifier	pgs		835365	0					
ANR	836290	Argument	& pcpath		835365	1					
ANR	836291	UnaryOperationExpression	& pcpath		835365	0					
ANR	836292	UnaryOperator	&		835365	0					
ANR	836293	Identifier	pcpath		835365	1					
ANR	836294	IfStatement	if ( code >= 0 )		835365	5					
ANR	836295	Condition	code >= 0	314:12:12075:12083	835365	0	True				
ANR	836296	RelationalExpression	code >= 0		835365	0		>=			
ANR	836297	Identifier	code		835365	0					
ANR	836298	PrimaryExpression	0		835365	1					
ANR	836299	CompoundStatement		137:23:5751:5751	835365	1					
ANR	836300	ExpressionStatement	"code = gx_image_fill_masked ( orig_dev , bits , 0 , cc_raster ( cc ) , cc -> id , x , y , w , h , pdevc , depth , pgs -> log_op , pcpath )"	315:12:12100:12250	835365	0	True				
ANR	836301	AssignmentExpression	"code = gx_image_fill_masked ( orig_dev , bits , 0 , cc_raster ( cc ) , cc -> id , x , y , w , h , pdevc , depth , pgs -> log_op , pcpath )"		835365	0		=			
ANR	836302	Identifier	code		835365	0					
ANR	836303	CallExpression	"gx_image_fill_masked ( orig_dev , bits , 0 , cc_raster ( cc ) , cc -> id , x , y , w , h , pdevc , depth , pgs -> log_op , pcpath )"		835365	1					
ANR	836304	Callee	gx_image_fill_masked		835365	0					
ANR	836305	Identifier	gx_image_fill_masked		835365	0					
ANR	836306	ArgumentList	orig_dev		835365	1					
ANR	836307	Argument	orig_dev		835365	0					
ANR	836308	Identifier	orig_dev		835365	0					
ANR	836309	Argument	bits		835365	1					
ANR	836310	Identifier	bits		835365	0					
ANR	836311	Argument	0		835365	2					
ANR	836312	PrimaryExpression	0		835365	0					
ANR	836313	Argument	cc_raster ( cc )		835365	3					
ANR	836314	CallExpression	cc_raster ( cc )		835365	0					
ANR	836315	Callee	cc_raster		835365	0					
ANR	836316	Identifier	cc_raster		835365	0					
ANR	836317	ArgumentList	cc		835365	1					
ANR	836318	Argument	cc		835365	0					
ANR	836319	Identifier	cc		835365	0					
ANR	836320	Argument	cc -> id		835365	4					
ANR	836321	PtrMemberAccess	cc -> id		835365	0					
ANR	836322	Identifier	cc		835365	0					
ANR	836323	Identifier	id		835365	1					
ANR	836324	Argument	x		835365	5					
ANR	836325	Identifier	x		835365	0					
ANR	836326	Argument	y		835365	6					
ANR	836327	Identifier	y		835365	0					
ANR	836328	Argument	w		835365	7					
ANR	836329	Identifier	w		835365	0					
ANR	836330	Argument	h		835365	8					
ANR	836331	Identifier	h		835365	0					
ANR	836332	Argument	pdevc		835365	9					
ANR	836333	Identifier	pdevc		835365	0					
ANR	836334	Argument	depth		835365	10					
ANR	836335	Identifier	depth		835365	0					
ANR	836336	Argument	pgs -> log_op		835365	11					
ANR	836337	PtrMemberAccess	pgs -> log_op		835365	0					
ANR	836338	Identifier	pgs		835365	0					
ANR	836339	Identifier	log_op		835365	1					
ANR	836340	Argument	pcpath		835365	12					
ANR	836341	Identifier	pcpath		835365	0					
ANR	836342	IfStatement	if ( code >= 0 )		835365	1					
ANR	836343	Condition	code >= 0	318:16:12268:12276	835365	0	True				
ANR	836344	RelationalExpression	code >= 0		835365	0		>=			
ANR	836345	Identifier	code		835365	0					
ANR	836346	PrimaryExpression	0		835365	1					
ANR	836347	GotoStatement	goto done ;	319:16:12295:12304	835365	1	True				
ANR	836348	Identifier	done		835365	0					
ANR	836349	ElseStatement	else		835365	0					
ANR	836350	IfStatement	if ( gs_color_writes_pure ( pgs ) )		835365	0					
ANR	836351	Condition	gs_color_writes_pure ( pgs )	321:15:12331:12355	835365	0	True				
ANR	836352	CallExpression	gs_color_writes_pure ( pgs )		835365	0					
ANR	836353	Callee	gs_color_writes_pure		835365	0					
ANR	836354	Identifier	gs_color_writes_pure		835365	0					
ANR	836355	ArgumentList	pgs		835365	1					
ANR	836356	Argument	pgs		835365	0					
ANR	836357	Identifier	pgs		835365	0					
ANR	836358	CompoundStatement		145:8:6033:6074	835365	1					
ANR	836359	IdentifierDeclStatement	gx_color_index color = pdevc -> colors . pure ;	322:8:12368:12409	835365	0	True				
ANR	836360	IdentifierDecl	color = pdevc -> colors . pure		835365	0					
ANR	836361	IdentifierDeclType	gx_color_index		835365	0					
ANR	836362	Identifier	color		835365	1					
ANR	836363	AssignmentExpression	color = pdevc -> colors . pure		835365	2		=			
ANR	836364	Identifier	color		835365	0					
ANR	836365	MemberAccess	pdevc -> colors . pure		835365	1					
ANR	836366	PtrMemberAccess	pdevc -> colors		835365	0					
ANR	836367	Identifier	pdevc		835365	0					
ANR	836368	Identifier	colors		835365	1					
ANR	836369	Identifier	pure		835365	1					
ANR	836370	IfStatement	if ( depth > 1 )		835365	1					
ANR	836371	Condition	depth > 1	324:12:12424:12432	835365	0	True				
ANR	836372	RelationalExpression	depth > 1		835365	0		>			
ANR	836373	Identifier	depth		835365	0					
ANR	836374	PrimaryExpression	1		835365	1					
ANR	836375	CompoundStatement		147:23:6100:6100	835365	1					
ANR	836376	ExpressionStatement	"code = ( * dev_proc ( imaging_dev , copy_alpha ) ) ( imaging_dev , bits , 0 , cc_raster ( cc ) , cc -> id , x , y , w , h , color , depth )"	325:12:12449:12597	835365	0	True				
ANR	836377	AssignmentExpression	"code = ( * dev_proc ( imaging_dev , copy_alpha ) ) ( imaging_dev , bits , 0 , cc_raster ( cc ) , cc -> id , x , y , w , h , color , depth )"		835365	0		=			
ANR	836378	Identifier	code		835365	0					
ANR	836379	CallExpression	"( * dev_proc ( imaging_dev , copy_alpha ) ) ( imaging_dev , bits , 0 , cc_raster ( cc ) , cc -> id , x , y , w , h , color , depth )"		835365	1					
ANR	836380	Callee	"* dev_proc ( imaging_dev , copy_alpha )"		835365	0					
ANR	836381	UnaryOperationExpression	"* dev_proc ( imaging_dev , copy_alpha )"		835365	0					
ANR	836382	UnaryOperator	*		835365	0					
ANR	836383	CallExpression	"dev_proc ( imaging_dev , copy_alpha )"		835365	1					
ANR	836384	Callee	dev_proc		835365	0					
ANR	836385	Identifier	dev_proc		835365	0					
ANR	836386	ArgumentList	imaging_dev		835365	1					
ANR	836387	Argument	imaging_dev		835365	0					
ANR	836388	Identifier	imaging_dev		835365	0					
ANR	836389	Argument	copy_alpha		835365	1					
ANR	836390	Identifier	copy_alpha		835365	0					
ANR	836391	ArgumentList	imaging_dev		835365	1					
ANR	836392	Argument	imaging_dev		835365	0					
ANR	836393	Identifier	imaging_dev		835365	0					
ANR	836394	Argument	bits		835365	1					
ANR	836395	Identifier	bits		835365	0					
ANR	836396	Argument	0		835365	2					
ANR	836397	PrimaryExpression	0		835365	0					
ANR	836398	Argument	cc_raster ( cc )		835365	3					
ANR	836399	CallExpression	cc_raster ( cc )		835365	0					
ANR	836400	Callee	cc_raster		835365	0					
ANR	836401	Identifier	cc_raster		835365	0					
ANR	836402	ArgumentList	cc		835365	1					
ANR	836403	Argument	cc		835365	0					
ANR	836404	Identifier	cc		835365	0					
ANR	836405	Argument	cc -> id		835365	4					
ANR	836406	PtrMemberAccess	cc -> id		835365	0					
ANR	836407	Identifier	cc		835365	0					
ANR	836408	Identifier	id		835365	1					
ANR	836409	Argument	x		835365	5					
ANR	836410	Identifier	x		835365	0					
ANR	836411	Argument	y		835365	6					
ANR	836412	Identifier	y		835365	0					
ANR	836413	Argument	w		835365	7					
ANR	836414	Identifier	w		835365	0					
ANR	836415	Argument	h		835365	8					
ANR	836416	Identifier	h		835365	0					
ANR	836417	Argument	color		835365	9					
ANR	836418	Identifier	color		835365	0					
ANR	836419	Argument	depth		835365	10					
ANR	836420	Identifier	depth		835365	0					
ANR	836421	IfStatement	if ( code >= 0 )		835365	1					
ANR	836422	Condition	code >= 0	328:16:12615:12623	835365	0	True				
ANR	836423	RelationalExpression	code >= 0		835365	0		>=			
ANR	836424	Identifier	code		835365	0					
ANR	836425	PrimaryExpression	0		835365	1					
ANR	836426	ExpressionStatement	"return_check_interrupt ( penum -> memory , 0 )"	329:16:12642:12682	835365	1	True				
ANR	836427	CallExpression	"return_check_interrupt ( penum -> memory , 0 )"		835365	0					
ANR	836428	Callee	return_check_interrupt		835365	0					
ANR	836429	Identifier	return_check_interrupt		835365	0					
ANR	836430	ArgumentList	penum -> memory		835365	1					
ANR	836431	Argument	penum -> memory		835365	0					
ANR	836432	PtrMemberAccess	penum -> memory		835365	0					
ANR	836433	Identifier	penum		835365	0					
ANR	836434	Identifier	memory		835365	1					
ANR	836435	Argument	0		835365	1					
ANR	836436	PrimaryExpression	0		835365	0					
ANR	836437	ExpressionStatement	"bits = compress_alpha_bits ( cc , penum -> memory -> non_gc_memory )"	331:12:12759:12819	835365	2	True				
ANR	836438	AssignmentExpression	"bits = compress_alpha_bits ( cc , penum -> memory -> non_gc_memory )"		835365	0		=			
ANR	836439	Identifier	bits		835365	0					
ANR	836440	CallExpression	"compress_alpha_bits ( cc , penum -> memory -> non_gc_memory )"		835365	1					
ANR	836441	Callee	compress_alpha_bits		835365	0					
ANR	836442	Identifier	compress_alpha_bits		835365	0					
ANR	836443	ArgumentList	cc		835365	1					
ANR	836444	Argument	cc		835365	0					
ANR	836445	Identifier	cc		835365	0					
ANR	836446	Argument	penum -> memory -> non_gc_memory		835365	1					
ANR	836447	PtrMemberAccess	penum -> memory -> non_gc_memory		835365	0					
ANR	836448	PtrMemberAccess	penum -> memory		835365	0					
ANR	836449	Identifier	penum		835365	0					
ANR	836450	Identifier	memory		835365	1					
ANR	836451	Identifier	non_gc_memory		835365	1					
ANR	836452	IfStatement	if ( bits == 0 )		835365	3					
ANR	836453	Condition	bits == 0	332:16:12837:12845	835365	0	True				
ANR	836454	EqualityExpression	bits == 0		835365	0		==			
ANR	836455	Identifier	bits		835365	0					
ANR	836456	PrimaryExpression	0		835365	1					
ANR	836457	ReturnStatement	return 1 ;	333:16:12864:12872	835365	1	True				
ANR	836458	PrimaryExpression	1		835365	0					
ANR	836459	ExpressionStatement	"code = ( * dev_proc ( imaging_dev , copy_mono ) ) ( imaging_dev , bits , 0 , bitmap_raster ( w ) , gs_no_id , x , y , w , h , gx_no_color_index , color )"	335:8:12923:13079	835365	2	True				
ANR	836460	AssignmentExpression	"code = ( * dev_proc ( imaging_dev , copy_mono ) ) ( imaging_dev , bits , 0 , bitmap_raster ( w ) , gs_no_id , x , y , w , h , gx_no_color_index , color )"		835365	0		=			
ANR	836461	Identifier	code		835365	0					
ANR	836462	CallExpression	"( * dev_proc ( imaging_dev , copy_mono ) ) ( imaging_dev , bits , 0 , bitmap_raster ( w ) , gs_no_id , x , y , w , h , gx_no_color_index , color )"		835365	1					
ANR	836463	Callee	"* dev_proc ( imaging_dev , copy_mono )"		835365	0					
ANR	836464	UnaryOperationExpression	"* dev_proc ( imaging_dev , copy_mono )"		835365	0					
ANR	836465	UnaryOperator	*		835365	0					
ANR	836466	CallExpression	"dev_proc ( imaging_dev , copy_mono )"		835365	1					
ANR	836467	Callee	dev_proc		835365	0					
ANR	836468	Identifier	dev_proc		835365	0					
ANR	836469	ArgumentList	imaging_dev		835365	1					
ANR	836470	Argument	imaging_dev		835365	0					
ANR	836471	Identifier	imaging_dev		835365	0					
ANR	836472	Argument	copy_mono		835365	1					
ANR	836473	Identifier	copy_mono		835365	0					
ANR	836474	ArgumentList	imaging_dev		835365	1					
ANR	836475	Argument	imaging_dev		835365	0					
ANR	836476	Identifier	imaging_dev		835365	0					
ANR	836477	Argument	bits		835365	1					
ANR	836478	Identifier	bits		835365	0					
ANR	836479	Argument	0		835365	2					
ANR	836480	PrimaryExpression	0		835365	0					
ANR	836481	Argument	bitmap_raster ( w )		835365	3					
ANR	836482	CallExpression	bitmap_raster ( w )		835365	0					
ANR	836483	Callee	bitmap_raster		835365	0					
ANR	836484	Identifier	bitmap_raster		835365	0					
ANR	836485	ArgumentList	w		835365	1					
ANR	836486	Argument	w		835365	0					
ANR	836487	Identifier	w		835365	0					
ANR	836488	Argument	gs_no_id		835365	4					
ANR	836489	Identifier	gs_no_id		835365	0					
ANR	836490	Argument	x		835365	5					
ANR	836491	Identifier	x		835365	0					
ANR	836492	Argument	y		835365	6					
ANR	836493	Identifier	y		835365	0					
ANR	836494	Argument	w		835365	7					
ANR	836495	Identifier	w		835365	0					
ANR	836496	Argument	h		835365	8					
ANR	836497	Identifier	h		835365	0					
ANR	836498	Argument	gx_no_color_index		835365	9					
ANR	836499	Identifier	gx_no_color_index		835365	0					
ANR	836500	Argument	color		835365	10					
ANR	836501	Identifier	color		835365	0					
ANR	836502	GotoStatement	goto done ;	338:8:13089:13098	835365	3	True				
ANR	836503	Identifier	done		835365	0					
ANR	836504	IfStatement	if ( depth > 1 )		835365	30					
ANR	836505	Condition	depth > 1	340:8:13114:13122	835365	0	True				
ANR	836506	RelationalExpression	depth > 1		835365	0		>			
ANR	836507	Identifier	depth		835365	0					
ANR	836508	PrimaryExpression	1		835365	1					
ANR	836509	CompoundStatement		163:19:6790:6790	835365	1					
ANR	836510	ExpressionStatement	"bits = compress_alpha_bits ( cc , penum -> memory -> non_gc_memory )"	342:8:13230:13290	835365	0	True				
ANR	836511	AssignmentExpression	"bits = compress_alpha_bits ( cc , penum -> memory -> non_gc_memory )"		835365	0		=			
ANR	836512	Identifier	bits		835365	0					
ANR	836513	CallExpression	"compress_alpha_bits ( cc , penum -> memory -> non_gc_memory )"		835365	1					
ANR	836514	Callee	compress_alpha_bits		835365	0					
ANR	836515	Identifier	compress_alpha_bits		835365	0					
ANR	836516	ArgumentList	cc		835365	1					
ANR	836517	Argument	cc		835365	0					
ANR	836518	Identifier	cc		835365	0					
ANR	836519	Argument	penum -> memory -> non_gc_memory		835365	1					
ANR	836520	PtrMemberAccess	penum -> memory -> non_gc_memory		835365	0					
ANR	836521	PtrMemberAccess	penum -> memory		835365	0					
ANR	836522	Identifier	penum		835365	0					
ANR	836523	Identifier	memory		835365	1					
ANR	836524	Identifier	non_gc_memory		835365	1					
ANR	836525	IfStatement	if ( bits == 0 )		835365	1					
ANR	836526	Condition	bits == 0	343:12:13304:13312	835365	0	True				
ANR	836527	EqualityExpression	bits == 0		835365	0		==			
ANR	836528	Identifier	bits		835365	0					
ANR	836529	PrimaryExpression	0		835365	1					
ANR	836530	ReturnStatement	return 1 ;	344:12:13327:13335	835365	1	True				
ANR	836531	PrimaryExpression	1		835365	0					
ANR	836532	CompoundStatement		177:8:7415:7424	835365	31					
ANR	836533	IdentifierDeclStatement	gs_memory_t * mem = penum -> memory -> non_gc_memory ;	347:8:13434:13481	835365	0	True				
ANR	836534	IdentifierDecl	* mem = penum -> memory -> non_gc_memory		835365	0					
ANR	836535	IdentifierDeclType	gs_memory_t *		835365	0					
ANR	836536	Identifier	mem		835365	1					
ANR	836537	AssignmentExpression	* mem = penum -> memory -> non_gc_memory		835365	2		=			
ANR	836538	Identifier	mem		835365	0					
ANR	836539	PtrMemberAccess	penum -> memory -> non_gc_memory		835365	1					
ANR	836540	PtrMemberAccess	penum -> memory		835365	0					
ANR	836541	Identifier	penum		835365	0					
ANR	836542	Identifier	memory		835365	1					
ANR	836543	Identifier	non_gc_memory		835365	1					
ANR	836544	IdentifierDeclStatement	"gs_image_enum * pie = gs_image_enum_alloc ( mem , ""image_char(image_enum)"" ) ;"	348:8:13491:13574	835365	1	True				
ANR	836545	IdentifierDecl	"* pie = gs_image_enum_alloc ( mem , ""image_char(image_enum)"" )"		835365	0					
ANR	836546	IdentifierDeclType	gs_image_enum *		835365	0					
ANR	836547	Identifier	pie		835365	1					
ANR	836548	AssignmentExpression	"* pie = gs_image_enum_alloc ( mem , ""image_char(image_enum)"" )"		835365	2		=			
ANR	836549	Identifier	pie		835365	0					
ANR	836550	CallExpression	"gs_image_enum_alloc ( mem , ""image_char(image_enum)"" )"		835365	1					
ANR	836551	Callee	gs_image_enum_alloc		835365	0					
ANR	836552	Identifier	gs_image_enum_alloc		835365	0					
ANR	836553	ArgumentList	mem		835365	1					
ANR	836554	Argument	mem		835365	0					
ANR	836555	Identifier	mem		835365	0					
ANR	836556	Argument	"""image_char(image_enum)"""		835365	1					
ANR	836557	PrimaryExpression	"""image_char(image_enum)"""		835365	0					
ANR	836558	IdentifierDeclStatement	gs_image_t image ;	350:8:13584:13600	835365	2	True				
ANR	836559	IdentifierDecl	image		835365	0					
ANR	836560	IdentifierDeclType	gs_image_t		835365	0					
ANR	836561	Identifier	image		835365	1					
ANR	836562	IdentifierDeclStatement	int iy ;	351:8:13610:13616	835365	3	True				
ANR	836563	IdentifierDecl	iy		835365	0					
ANR	836564	IdentifierDeclType	int		835365	0					
ANR	836565	Identifier	iy		835365	1					
ANR	836566	IdentifierDeclStatement	"uint used , raster = ( bits == cc_bits ( cc ) ? cc_raster ( cc ) : bitmap_raster ( cc -> width ) ) ;"	352:8:13626:13740	835365	4	True				
ANR	836567	IdentifierDecl	used		835365	0					
ANR	836568	IdentifierDeclType	uint		835365	0					
ANR	836569	Identifier	used		835365	1					
ANR	836570	IdentifierDecl	raster = ( bits == cc_bits ( cc ) ? cc_raster ( cc ) : bitmap_raster ( cc -> width ) )		835365	1					
ANR	836571	IdentifierDeclType	uint		835365	0					
ANR	836572	Identifier	raster		835365	1					
ANR	836573	AssignmentExpression	raster = ( bits == cc_bits ( cc ) ? cc_raster ( cc ) : bitmap_raster ( cc -> width ) )		835365	2		=			
ANR	836574	Identifier	raster		835365	0					
ANR	836575	ConditionalExpression	bits == cc_bits ( cc ) ? cc_raster ( cc ) : bitmap_raster ( cc -> width )		835365	1					
ANR	836576	Condition	bits == cc_bits ( cc )		835365	0					
ANR	836577	EqualityExpression	bits == cc_bits ( cc )		835365	0		==			
ANR	836578	Identifier	bits		835365	0					
ANR	836579	CallExpression	cc_bits ( cc )		835365	1					
ANR	836580	Callee	cc_bits		835365	0					
ANR	836581	Identifier	cc_bits		835365	0					
ANR	836582	ArgumentList	cc		835365	1					
ANR	836583	Argument	cc		835365	0					
ANR	836584	Identifier	cc		835365	0					
ANR	836585	CallExpression	cc_raster ( cc )		835365	1					
ANR	836586	Callee	cc_raster		835365	0					
ANR	836587	Identifier	cc_raster		835365	0					
ANR	836588	ArgumentList	cc		835365	1					
ANR	836589	Argument	cc		835365	0					
ANR	836590	Identifier	cc		835365	0					
ANR	836591	CallExpression	bitmap_raster ( cc -> width )		835365	2					
ANR	836592	Callee	bitmap_raster		835365	0					
ANR	836593	Identifier	bitmap_raster		835365	0					
ANR	836594	ArgumentList	cc -> width		835365	1					
ANR	836595	Argument	cc -> width		835365	0					
ANR	836596	PtrMemberAccess	cc -> width		835365	0					
ANR	836597	Identifier	cc		835365	0					
ANR	836598	Identifier	width		835365	1					
ANR	836599	IdentifierDeclStatement	int code1 ;	354:8:13750:13759	835365	5	True				
ANR	836600	IdentifierDecl	code1		835365	0					
ANR	836601	IdentifierDeclType	int		835365	0					
ANR	836602	Identifier	code1		835365	1					
ANR	836603	IfStatement	if ( pie == 0 )		835365	6					
ANR	836604	Condition	pie == 0	356:12:13774:13781	835365	0	True				
ANR	836605	EqualityExpression	pie == 0		835365	0		==			
ANR	836606	Identifier	pie		835365	0					
ANR	836607	PrimaryExpression	0		835365	1					
ANR	836608	CompoundStatement		179:22:7449:7449	835365	1					
ANR	836609	IfStatement	if ( bits != cc_bits ( cc ) )		835365	0					
ANR	836610	Condition	bits != cc_bits ( cc )	357:16:13802:13820	835365	0	True				
ANR	836611	EqualityExpression	bits != cc_bits ( cc )		835365	0		!=			
ANR	836612	Identifier	bits		835365	0					
ANR	836613	CallExpression	cc_bits ( cc )		835365	1					
ANR	836614	Callee	cc_bits		835365	0					
ANR	836615	Identifier	cc_bits		835365	0					
ANR	836616	ArgumentList	cc		835365	1					
ANR	836617	Argument	cc		835365	0					
ANR	836618	Identifier	cc		835365	0					
ANR	836619	ExpressionStatement	"gs_free_object ( mem , bits , ""compress_alpha_bits"" )"	358:16:13839:13918	835365	1	True				
ANR	836620	CallExpression	"gs_free_object ( mem , bits , ""compress_alpha_bits"" )"		835365	0					
ANR	836621	Callee	gs_free_object		835365	0					
ANR	836622	Identifier	gs_free_object		835365	0					
ANR	836623	ArgumentList	mem		835365	1					
ANR	836624	Argument	mem		835365	0					
ANR	836625	Identifier	mem		835365	0					
ANR	836626	Argument	bits		835365	1					
ANR	836627	Identifier	bits		835365	0					
ANR	836628	Argument	"""compress_alpha_bits"""		835365	2					
ANR	836629	PrimaryExpression	"""compress_alpha_bits"""		835365	0					
ANR	836630	ReturnStatement	return 1 ;	360:12:13932:13940	835365	1	True				
ANR	836631	PrimaryExpression	1		835365	0					
ANR	836632	ExpressionStatement	"gs_image_t_init_mask ( & image , true )"	364:8:14093:14127	835365	7	True				
ANR	836633	CallExpression	"gs_image_t_init_mask ( & image , true )"		835365	0					
ANR	836634	Callee	gs_image_t_init_mask		835365	0					
ANR	836635	Identifier	gs_image_t_init_mask		835365	0					
ANR	836636	ArgumentList	& image		835365	1					
ANR	836637	Argument	& image		835365	0					
ANR	836638	UnaryOperationExpression	& image		835365	0					
ANR	836639	UnaryOperator	&		835365	0					
ANR	836640	Identifier	image		835365	1					
ANR	836641	Argument	true		835365	1					
ANR	836642	Identifier	true		835365	0					
ANR	836643	ExpressionStatement	"gs_make_translation ( ( double ) - x , ( double ) - y , & image . ImageMatrix )"	365:8:14137:14204	835365	8	True				
ANR	836644	CallExpression	"gs_make_translation ( ( double ) - x , ( double ) - y , & image . ImageMatrix )"		835365	0					
ANR	836645	Callee	gs_make_translation		835365	0					
ANR	836646	Identifier	gs_make_translation		835365	0					
ANR	836647	ArgumentList	( double ) - x		835365	1					
ANR	836648	Argument	( double ) - x		835365	0					
ANR	836649	CastExpression	( double ) - x		835365	0					
ANR	836650	CastTarget	double		835365	0					
ANR	836651	UnaryOperationExpression	- x		835365	1					
ANR	836652	UnaryOperator	-		835365	0					
ANR	836653	Identifier	x		835365	1					
ANR	836654	Argument	( double ) - y		835365	1					
ANR	836655	CastExpression	( double ) - y		835365	0					
ANR	836656	CastTarget	double		835365	0					
ANR	836657	UnaryOperationExpression	- y		835365	1					
ANR	836658	UnaryOperator	-		835365	0					
ANR	836659	Identifier	y		835365	1					
ANR	836660	Argument	& image . ImageMatrix		835365	2					
ANR	836661	UnaryOperationExpression	& image . ImageMatrix		835365	0					
ANR	836662	UnaryOperator	&		835365	0					
ANR	836663	MemberAccess	image . ImageMatrix		835365	1					
ANR	836664	Identifier	image		835365	0					
ANR	836665	Identifier	ImageMatrix		835365	1					
ANR	836666	ExpressionStatement	"gs_matrix_multiply ( & ctm_only ( pgs ) , & image . ImageMatrix , & image . ImageMatrix )"	366:8:14214:14288	835365	9	True				
ANR	836667	CallExpression	"gs_matrix_multiply ( & ctm_only ( pgs ) , & image . ImageMatrix , & image . ImageMatrix )"		835365	0					
ANR	836668	Callee	gs_matrix_multiply		835365	0					
ANR	836669	Identifier	gs_matrix_multiply		835365	0					
ANR	836670	ArgumentList	& ctm_only ( pgs )		835365	1					
ANR	836671	Argument	& ctm_only ( pgs )		835365	0					
ANR	836672	UnaryOperationExpression	& ctm_only ( pgs )		835365	0					
ANR	836673	UnaryOperator	&		835365	0					
ANR	836674	CallExpression	ctm_only ( pgs )		835365	1					
ANR	836675	Callee	ctm_only		835365	0					
ANR	836676	Identifier	ctm_only		835365	0					
ANR	836677	ArgumentList	pgs		835365	1					
ANR	836678	Argument	pgs		835365	0					
ANR	836679	Identifier	pgs		835365	0					
ANR	836680	Argument	& image . ImageMatrix		835365	1					
ANR	836681	UnaryOperationExpression	& image . ImageMatrix		835365	0					
ANR	836682	UnaryOperator	&		835365	0					
ANR	836683	MemberAccess	image . ImageMatrix		835365	1					
ANR	836684	Identifier	image		835365	0					
ANR	836685	Identifier	ImageMatrix		835365	1					
ANR	836686	Argument	& image . ImageMatrix		835365	2					
ANR	836687	UnaryOperationExpression	& image . ImageMatrix		835365	0					
ANR	836688	UnaryOperator	&		835365	0					
ANR	836689	MemberAccess	image . ImageMatrix		835365	1					
ANR	836690	Identifier	image		835365	0					
ANR	836691	Identifier	ImageMatrix		835365	1					
ANR	836692	ExpressionStatement	image . Width = w	367:8:14298:14313	835365	10	True				
ANR	836693	AssignmentExpression	image . Width = w		835365	0		=			
ANR	836694	MemberAccess	image . Width		835365	0					
ANR	836695	Identifier	image		835365	0					
ANR	836696	Identifier	Width		835365	1					
ANR	836697	Identifier	w		835365	1					
ANR	836698	ExpressionStatement	image . Height = h	368:8:14323:14339	835365	11	True				
ANR	836699	AssignmentExpression	image . Height = h		835365	0		=			
ANR	836700	MemberAccess	image . Height		835365	0					
ANR	836701	Identifier	image		835365	0					
ANR	836702	Identifier	Height		835365	1					
ANR	836703	Identifier	h		835365	1					
ANR	836704	ExpressionStatement	image . adjust = false	369:8:14349:14369	835365	12	True				
ANR	836705	AssignmentExpression	image . adjust = false		835365	0		=			
ANR	836706	MemberAccess	image . adjust		835365	0					
ANR	836707	Identifier	image		835365	0					
ANR	836708	Identifier	adjust		835365	1					
ANR	836709	Identifier	false		835365	1					
ANR	836710	ExpressionStatement	"code = gs_image_init ( pie , & image , false , true , pgs )"	370:8:14379:14430	835365	13	True				
ANR	836711	AssignmentExpression	"code = gs_image_init ( pie , & image , false , true , pgs )"		835365	0		=			
ANR	836712	Identifier	code		835365	0					
ANR	836713	CallExpression	"gs_image_init ( pie , & image , false , true , pgs )"		835365	1					
ANR	836714	Callee	gs_image_init		835365	0					
ANR	836715	Identifier	gs_image_init		835365	0					
ANR	836716	ArgumentList	pie		835365	1					
ANR	836717	Argument	pie		835365	0					
ANR	836718	Identifier	pie		835365	0					
ANR	836719	Argument	& image		835365	1					
ANR	836720	UnaryOperationExpression	& image		835365	0					
ANR	836721	UnaryOperator	&		835365	0					
ANR	836722	Identifier	image		835365	1					
ANR	836723	Argument	false		835365	2					
ANR	836724	Identifier	false		835365	0					
ANR	836725	Argument	true		835365	3					
ANR	836726	Identifier	true		835365	0					
ANR	836727	Argument	pgs		835365	4					
ANR	836728	Identifier	pgs		835365	0					
ANR	836729	SwitchStatement	switch ( code )		835365	14					
ANR	836730	Condition	code	371:16:14448:14451	835365	0	True				
ANR	836731	Identifier	code		835365	0					
ANR	836732	CompoundStatement		194:22:8119:8119	835365	1					
ANR	836733	Label	case 1 :	372:12:14468:14474	835365	0	True				
ANR	836734	ExpressionStatement	code = 0	373:16:14511:14519	835365	1	True				
ANR	836735	AssignmentExpression	code = 0		835365	0		=			
ANR	836736	Identifier	code		835365	0					
ANR	836737	PrimaryExpression	0		835365	1					
ANR	836738	Label	default :	374:12:14533:14540	835365	2	True				
ANR	836739	Identifier	default		835365	0					
ANR	836740	BreakStatement	break ;	375:16:14558:14563	835365	3	True				
ANR	836741	Label	case 0 :	376:12:14577:14583	835365	4	True				
ANR	836742	ForStatement	for ( iy = 0 ; iy < h && code >= 0 ; iy ++ )		835365	5					
ANR	836743	ForInit	iy = 0 ;	377:21:14606:14612	835365	0	True				
ANR	836744	AssignmentExpression	iy = 0		835365	0		=			
ANR	836745	Identifier	iy		835365	0					
ANR	836746	PrimaryExpression	0		835365	1					
ANR	836747	Condition	iy < h && code >= 0	377:29:14614:14632	835365	1	True				
ANR	836748	AndExpression	iy < h && code >= 0		835365	0		&&			
ANR	836749	RelationalExpression	iy < h		835365	0		<			
ANR	836750	Identifier	iy		835365	0					
ANR	836751	Identifier	h		835365	1					
ANR	836752	RelationalExpression	code >= 0		835365	1		>=			
ANR	836753	Identifier	code		835365	0					
ANR	836754	PrimaryExpression	0		835365	1					
ANR	836755	PostIncDecOperationExpression	iy ++	377:50:14635:14638	835365	2	True				
ANR	836756	Identifier	iy		835365	0					
ANR	836757	IncDec	++		835365	1					
ANR	836758	ExpressionStatement	"code = gs_image_next ( pie , bits + iy * raster , ( w + 7 ) >> 3 , & used )"	378:20:14661:14768	835365	3	True				
ANR	836759	AssignmentExpression	"code = gs_image_next ( pie , bits + iy * raster , ( w + 7 ) >> 3 , & used )"		835365	0		=			
ANR	836760	Identifier	code		835365	0					
ANR	836761	CallExpression	"gs_image_next ( pie , bits + iy * raster , ( w + 7 ) >> 3 , & used )"		835365	1					
ANR	836762	Callee	gs_image_next		835365	0					
ANR	836763	Identifier	gs_image_next		835365	0					
ANR	836764	ArgumentList	pie		835365	1					
ANR	836765	Argument	pie		835365	0					
ANR	836766	Identifier	pie		835365	0					
ANR	836767	Argument	bits + iy * raster		835365	1					
ANR	836768	AdditiveExpression	bits + iy * raster		835365	0		+			
ANR	836769	Identifier	bits		835365	0					
ANR	836770	MultiplicativeExpression	iy * raster		835365	1		*			
ANR	836771	Identifier	iy		835365	0					
ANR	836772	Identifier	raster		835365	1					
ANR	836773	Argument	( w + 7 ) >> 3		835365	2					
ANR	836774	ShiftExpression	( w + 7 ) >> 3		835365	0		>>			
ANR	836775	AdditiveExpression	w + 7		835365	0		+			
ANR	836776	Identifier	w		835365	0					
ANR	836777	PrimaryExpression	7		835365	1					
ANR	836778	PrimaryExpression	3		835365	1					
ANR	836779	Argument	& used		835365	3					
ANR	836780	UnaryOperationExpression	& used		835365	0					
ANR	836781	UnaryOperator	&		835365	0					
ANR	836782	Identifier	used		835365	1					
ANR	836783	ExpressionStatement	"code1 = gs_image_cleanup_and_free_enum ( pie , pgs )"	381:8:14788:14836	835365	15	True				
ANR	836784	AssignmentExpression	"code1 = gs_image_cleanup_and_free_enum ( pie , pgs )"		835365	0		=			
ANR	836785	Identifier	code1		835365	0					
ANR	836786	CallExpression	"gs_image_cleanup_and_free_enum ( pie , pgs )"		835365	1					
ANR	836787	Callee	gs_image_cleanup_and_free_enum		835365	0					
ANR	836788	Identifier	gs_image_cleanup_and_free_enum		835365	0					
ANR	836789	ArgumentList	pie		835365	1					
ANR	836790	Argument	pie		835365	0					
ANR	836791	Identifier	pie		835365	0					
ANR	836792	Argument	pgs		835365	1					
ANR	836793	Identifier	pgs		835365	0					
ANR	836794	IfStatement	if ( code >= 0 && code1 < 0 )		835365	16					
ANR	836795	Condition	code >= 0 && code1 < 0	382:12:14850:14871	835365	0	True				
ANR	836796	AndExpression	code >= 0 && code1 < 0		835365	0		&&			
ANR	836797	RelationalExpression	code >= 0		835365	0		>=			
ANR	836798	Identifier	code		835365	0					
ANR	836799	PrimaryExpression	0		835365	1					
ANR	836800	RelationalExpression	code1 < 0		835365	1		<			
ANR	836801	Identifier	code1		835365	0					
ANR	836802	PrimaryExpression	0		835365	1					
ANR	836803	ExpressionStatement	code = code1	383:12:14886:14898	835365	1	True				
ANR	836804	AssignmentExpression	code = code1		835365	0		=			
ANR	836805	Identifier	code		835365	0					
ANR	836806	Identifier	code1		835365	1					
ANR	836807	Label	done :	385:2:14908:14912	835365	32	True				
ANR	836808	Identifier	done		835365	0					
ANR	836809	IfStatement	if ( bits != cc_bits ( cc ) )		835365	33					
ANR	836810	Condition	bits != cc_bits ( cc )	385:11:14917:14935	835365	0	True				
ANR	836811	EqualityExpression	bits != cc_bits ( cc )		835365	0		!=			
ANR	836812	Identifier	bits		835365	0					
ANR	836813	CallExpression	cc_bits ( cc )		835365	1					
ANR	836814	Callee	cc_bits		835365	0					
ANR	836815	Identifier	cc_bits		835365	0					
ANR	836816	ArgumentList	cc		835365	1					
ANR	836817	Argument	cc		835365	0					
ANR	836818	Identifier	cc		835365	0					
ANR	836819	ExpressionStatement	"gs_free_object ( penum -> memory -> non_gc_memory , bits , ""compress_alpha_bits"" )"	386:8:14946:15019	835365	1	True				
ANR	836820	CallExpression	"gs_free_object ( penum -> memory -> non_gc_memory , bits , ""compress_alpha_bits"" )"		835365	0					
ANR	836821	Callee	gs_free_object		835365	0					
ANR	836822	Identifier	gs_free_object		835365	0					
ANR	836823	ArgumentList	penum -> memory -> non_gc_memory		835365	1					
ANR	836824	Argument	penum -> memory -> non_gc_memory		835365	0					
ANR	836825	PtrMemberAccess	penum -> memory -> non_gc_memory		835365	0					
ANR	836826	PtrMemberAccess	penum -> memory		835365	0					
ANR	836827	Identifier	penum		835365	0					
ANR	836828	Identifier	memory		835365	1					
ANR	836829	Identifier	non_gc_memory		835365	1					
ANR	836830	Argument	bits		835365	1					
ANR	836831	Identifier	bits		835365	0					
ANR	836832	Argument	"""compress_alpha_bits"""		835365	2					
ANR	836833	PrimaryExpression	"""compress_alpha_bits"""		835365	0					
ANR	836834	IfStatement	if ( code > 0 )		835365	34					
ANR	836835	Condition	code > 0	387:8:15029:15036	835365	0	True				
ANR	836836	RelationalExpression	code > 0		835365	0		>			
ANR	836837	Identifier	code		835365	0					
ANR	836838	PrimaryExpression	0		835365	1					
ANR	836839	ExpressionStatement	code = 0	388:8:15047:15055	835365	1	True				
ANR	836840	AssignmentExpression	code = 0		835365	0		=			
ANR	836841	Identifier	code		835365	0					
ANR	836842	PrimaryExpression	0		835365	1					
ANR	836843	ExpressionStatement	"return_check_interrupt ( penum -> memory , code )"	389:4:15061:15104	835365	35	True				
ANR	836844	CallExpression	"return_check_interrupt ( penum -> memory , code )"		835365	0					
ANR	836845	Callee	return_check_interrupt		835365	0					
ANR	836846	Identifier	return_check_interrupt		835365	0					
ANR	836847	ArgumentList	penum -> memory		835365	1					
ANR	836848	Argument	penum -> memory		835365	0					
ANR	836849	PtrMemberAccess	penum -> memory		835365	0					
ANR	836850	Identifier	penum		835365	0					
ANR	836851	Identifier	memory		835365	1					
ANR	836852	Argument	code		835365	1					
ANR	836853	Identifier	code		835365	0					
ANR	836854	ReturnType	int		835365	1					
ANR	836855	Identifier	gx_image_cached_char		835365	2					
ANR	836856	ParameterList	"register gs_show_enum * penum , register cached_char * cc"		835365	3					
ANR	836857	Parameter	register gs_show_enum * penum	177:21:6276:6304	835365	0	True				
ANR	836858	ParameterType	register gs_show_enum *		835365	0					
ANR	836859	Identifier	penum		835365	1					
ANR	836860	Parameter	register cached_char * cc	177:52:6307:6331	835365	1	True				
ANR	836861	ParameterType	register cached_char *		835365	0					
ANR	836862	Identifier	cc		835365	1					
ANR	836863	CFGEntryNode	ENTRY		835365		True				
ANR	836864	CFGExitNode	EXIT		835365		True				
ANR	836865	Symbol	pdevc -> colors . pure		835365						
ANR	836866	Symbol	pt		835365						
ANR	836867	Symbol	* cc		835365						
ANR	836868	Symbol	penum -> dev		835365						
ANR	836869	Symbol	* pgs		835365						
ANR	836870	Symbol	pdevc		835365						
ANR	836871	Symbol	cc -> xglyph		835365						
ANR	836872	Symbol	gs_image_cleanup_and_free_enum		835365						
ANR	836873	Symbol	* cc_pair ( cc ) -> font		835365						
ANR	836874	Symbol	cc_has_bits		835365						
ANR	836875	Symbol	gx_no_color_index		835365						
ANR	836876	Symbol	dev		835365						
ANR	836877	Symbol	pdevc -> colors		835365						
ANR	836878	Symbol	copy_alpha		835365						
ANR	836879	Symbol	cc -> wxy		835365						
ANR	836880	Symbol	* * penum		835365						
ANR	836881	Symbol	cc -> subpix_origin		835365						
ANR	836882	Symbol	gs_no_id		835365						
ANR	836883	Symbol	& image		835365						
ANR	836884	Symbol	penum		835365						
ANR	836885	Symbol	bits		835365						
ANR	836886	Symbol	& pcpath		835365						
ANR	836887	Symbol	gx_no_xglyph		835365						
ANR	836888	Symbol	penum -> imaging_dev		835365						
ANR	836889	Symbol	cc_raster		835365						
ANR	836890	Symbol	gs_color_writes_pure		835365						
ANR	836891	Symbol	& pt		835365						
ANR	836892	Symbol	iy		835365						
ANR	836893	Symbol	penum -> wxy_float		835365						
ANR	836894	Symbol	orig_dev		835365						
ANR	836895	Symbol	& image . ImageMatrix		835365						
ANR	836896	Symbol	imaging_dev		835365						
ANR	836897	Symbol	xf -> common . procs		835365						
ANR	836898	Symbol	cc_pair ( cc ) -> font		835365						
ANR	836899	Symbol	* * xf -> common		835365						
ANR	836900	Symbol	cc_pair		835365						
ANR	836901	Symbol	* dev		835365						
ANR	836902	Symbol	* penum		835365						
ANR	836903	Symbol	cc -> width		835365						
ANR	836904	Symbol	code1		835365						
ANR	836905	Symbol	& cdev		835365						
ANR	836906	Symbol	* dev_proc		835365						
ANR	836907	Symbol	fixed2int_var_rounded		835365						
ANR	836908	Symbol	penum -> pgs		835365						
ANR	836909	Symbol	fill_mask		835365						
ANR	836910	Symbol	gs_currentdevicecolor_inline		835365						
ANR	836911	Symbol	* pdevc		835365						
ANR	836912	Symbol	* xf -> common		835365						
ANR	836913	Symbol	cc -> height		835365						
ANR	836914	Symbol	* * xf		835365						
ANR	836915	Symbol	pgs		835365						
ANR	836916	Symbol	pcpath		835365						
ANR	836917	Symbol	cc		835365						
ANR	836918	Symbol	gx_path_current_point_inline		835365						
ANR	836919	Symbol	penum -> obox . q . y		835365						
ANR	836920	Symbol	cc -> id		835365						
ANR	836921	Symbol	penum -> obox . q . x		835365						
ANR	836922	Symbol	h		835365						
ANR	836923	Symbol	penum -> ibox . p . x		835365						
ANR	836924	Symbol	raster		835365						
ANR	836925	Symbol	penum -> ibox . p . y		835365						
ANR	836926	Symbol	gx_set_dev_color		835365						
ANR	836927	Symbol	bitmap_raster		835365						
ANR	836928	Symbol	cc_pair ( cc ) -> xfont		835365						
ANR	836929	Symbol	"* dev_proc ( imaging_dev , copy_mono )"		835365						
ANR	836930	Symbol	depth		835365						
ANR	836931	Symbol	cx		835365						
ANR	836932	Symbol	cy		835365						
ANR	836933	Symbol	gx_default_fill_mask		835365						
ANR	836934	Symbol	w		835365						
ANR	836935	Symbol	x		835365						
ANR	836936	Symbol	y		835365						
ANR	836937	Symbol	pt . x		835365						
ANR	836938	Symbol	pt . y		835365						
ANR	836939	Symbol	* xf -> common . procs -> render_char		835365						
ANR	836940	Symbol	"* dev_proc ( imaging_dev , copy_alpha )"		835365						
ANR	836941	Symbol	used		835365						
ANR	836942	Symbol	cc -> subpix_origin . x		835365						
ANR	836943	Symbol	& mdev		835365						
ANR	836944	Symbol	pie		835365						
ANR	836945	Symbol	cc -> subpix_origin . y		835365						
ANR	836946	Symbol	fixed2int		835365						
ANR	836947	Symbol	lop_no_S_is_T		835365						
ANR	836948	Symbol	penum -> obox . p . y		835365						
ANR	836949	Symbol	* * cc_pair		835365						
ANR	836950	Symbol	penum -> obox . p . x		835365						
ANR	836951	Symbol	gs_debug_c		835365						
ANR	836952	Symbol	penum -> ibox . q		835365						
ANR	836953	Symbol	penum -> ibox . p		835365						
ANR	836954	Symbol	penum -> use_wxy_float		835365						
ANR	836955	Symbol	penum -> obox		835365						
ANR	836956	Symbol	xf -> common		835365						
ANR	836957	Symbol	image		835365						
ANR	836958	Symbol	cc -> offset . x		835365						
ANR	836959	Symbol	* cc_pair		835365						
ANR	836960	Symbol	cc -> offset . y		835365						
ANR	836961	Symbol	& used		835365						
ANR	836962	Symbol	penum -> wxy_float . x		835365						
ANR	836963	Symbol	* * * xf		835365						
ANR	836964	Symbol	penum -> wxy_float . y		835365						
ANR	836965	Symbol	* xf		835365						
ANR	836966	Symbol	mdev . dname		835365						
ANR	836967	Symbol	penum -> fty		835365						
ANR	836968	Symbol	true		835365						
ANR	836969	Symbol	penum -> ftx		835365						
ANR	836970	Symbol	mdev		835365						
ANR	836971	Symbol	image . Width		835365						
ANR	836972	Symbol	imaging_dev -> dname		835365						
ANR	836973	Symbol	code		835365						
ANR	836974	Symbol	cc -> offset		835365						
ANR	836975	Symbol	gs_image_enum_alloc		835365						
ANR	836976	Symbol	penum -> memory		835365						
ANR	836977	Symbol	gx_effective_clip_path		835365						
ANR	836978	Symbol	color		835365						
ANR	836979	Symbol	penum -> memory -> non_gc_memory		835365						
ANR	836980	Symbol	* * xf -> common . procs		835365						
ANR	836981	Symbol	cc_depth		835365						
ANR	836982	Symbol	cc_pair ( cc ) -> font -> dir		835365						
ANR	836983	Symbol	* penum -> memory		835365						
ANR	836984	Symbol	mem		835365						
ANR	836985	Symbol	dev_proc		835365						
ANR	836986	Symbol	copy_mono		835365						
ANR	836987	Symbol	penum -> obox . p		835365						
ANR	836988	Symbol	penum -> obox . q		835365						
ANR	836989	Symbol	pgs -> log_op		835365						
ANR	836990	Symbol	penum -> ibox		835365						
ANR	836991	Symbol	& ctm_only		835365						
ANR	836992	Symbol	cc_bits		835365						
ANR	836993	Symbol	fixed2float		835365						
ANR	836994	Symbol	false		835365						
ANR	836995	Symbol	gx_image_fill_masked		835365						
ANR	836996	Symbol	image . Height		835365						
ANR	836997	Symbol	penum -> wxy		835365						
ANR	836998	Symbol	gs_image_next		835365						
ANR	836999	Symbol	xf		835365						
ANR	837000	Symbol	xg		835365						
ANR	837001	Symbol	* imaging_dev		835365						
ANR	837002	Symbol	compress_alpha_bits		835365						
ANR	837003	Symbol	dev -> memory		835365						
ANR	837004	Symbol	penum -> ibox . q . y		835365						
ANR	837005	Symbol	& scale_log2_1		835365						
ANR	837006	Symbol	image . adjust		835365						
ANR	837007	Symbol	* xf -> common . procs		835365						
ANR	837008	Symbol	xf -> common . procs -> render_char		835365						
ANR	837009	Symbol	gs_image_init		835365						
ANR	837010	Symbol	penum -> ibox . q . x		835365						
ANR	837011	Symbol	cdev		835365						
ANR	837012	Function	compress_alpha_bits	398:0:15276:16674							
ANR	837013	FunctionDef	"compress_alpha_bits (const cached_char * cc , gs_memory_t * mem)"		837012	0					
ANR	837014	CompoundStatement		400:0:15353:16674	837012	0					
ANR	837015	IdentifierDeclStatement	const byte * data = cc_const_bits ( cc ) ;	401:4:15359:15395	837012	0	True				
ANR	837016	IdentifierDecl	* data = cc_const_bits ( cc )		837012	0					
ANR	837017	IdentifierDeclType	const byte *		837012	0					
ANR	837018	Identifier	data		837012	1					
ANR	837019	AssignmentExpression	* data = cc_const_bits ( cc )		837012	2		=			
ANR	837020	Identifier	data		837012	0					
ANR	837021	CallExpression	cc_const_bits ( cc )		837012	1					
ANR	837022	Callee	cc_const_bits		837012	0					
ANR	837023	Identifier	cc_const_bits		837012	0					
ANR	837024	ArgumentList	cc		837012	1					
ANR	837025	Argument	cc		837012	0					
ANR	837026	Identifier	cc		837012	0					
ANR	837027	IdentifierDeclStatement	uint width = cc -> width ;	402:4:15401:15423	837012	1	True				
ANR	837028	IdentifierDecl	width = cc -> width		837012	0					
ANR	837029	IdentifierDeclType	uint		837012	0					
ANR	837030	Identifier	width		837012	1					
ANR	837031	AssignmentExpression	width = cc -> width		837012	2		=			
ANR	837032	Identifier	width		837012	0					
ANR	837033	PtrMemberAccess	cc -> width		837012	1					
ANR	837034	Identifier	cc		837012	0					
ANR	837035	Identifier	width		837012	1					
ANR	837036	IdentifierDeclStatement	uint height = cc -> height ;	403:4:15429:15453	837012	2	True				
ANR	837037	IdentifierDecl	height = cc -> height		837012	0					
ANR	837038	IdentifierDeclType	uint		837012	0					
ANR	837039	Identifier	height		837012	1					
ANR	837040	AssignmentExpression	height = cc -> height		837012	2		=			
ANR	837041	Identifier	height		837012	0					
ANR	837042	PtrMemberAccess	cc -> height		837012	1					
ANR	837043	Identifier	cc		837012	0					
ANR	837044	Identifier	height		837012	1					
ANR	837045	IdentifierDeclStatement	int depth = ( cc_depth ( cc ) == 3 ? 2 : cc_depth ( cc ) ) ;	408:4:15622:15672	837012	3	True				
ANR	837046	IdentifierDecl	depth = ( cc_depth ( cc ) == 3 ? 2 : cc_depth ( cc ) )		837012	0					
ANR	837047	IdentifierDeclType	int		837012	0					
ANR	837048	Identifier	depth		837012	1					
ANR	837049	AssignmentExpression	depth = ( cc_depth ( cc ) == 3 ? 2 : cc_depth ( cc ) )		837012	2		=			
ANR	837050	Identifier	depth		837012	0					
ANR	837051	ConditionalExpression	cc_depth ( cc ) == 3 ? 2 : cc_depth ( cc )		837012	1					
ANR	837052	Condition	cc_depth ( cc ) == 3		837012	0					
ANR	837053	EqualityExpression	cc_depth ( cc ) == 3		837012	0		==			
ANR	837054	CallExpression	cc_depth ( cc )		837012	0					
ANR	837055	Callee	cc_depth		837012	0					
ANR	837056	Identifier	cc_depth		837012	0					
ANR	837057	ArgumentList	cc		837012	1					
ANR	837058	Argument	cc		837012	0					
ANR	837059	Identifier	cc		837012	0					
ANR	837060	PrimaryExpression	3		837012	1					
ANR	837061	PrimaryExpression	2		837012	1					
ANR	837062	CallExpression	cc_depth ( cc )		837012	2					
ANR	837063	Callee	cc_depth		837012	0					
ANR	837064	Identifier	cc_depth		837012	0					
ANR	837065	ArgumentList	cc		837012	1					
ANR	837066	Argument	cc		837012	0					
ANR	837067	Identifier	cc		837012	0					
ANR	837068	IdentifierDeclStatement	uint sraster = cc_raster ( cc ) ;	409:4:15678:15706	837012	4	True				
ANR	837069	IdentifierDecl	sraster = cc_raster ( cc )		837012	0					
ANR	837070	IdentifierDeclType	uint		837012	0					
ANR	837071	Identifier	sraster		837012	1					
ANR	837072	AssignmentExpression	sraster = cc_raster ( cc )		837012	2		=			
ANR	837073	Identifier	sraster		837012	0					
ANR	837074	CallExpression	cc_raster ( cc )		837012	1					
ANR	837075	Callee	cc_raster		837012	0					
ANR	837076	Identifier	cc_raster		837012	0					
ANR	837077	ArgumentList	cc		837012	1					
ANR	837078	Argument	cc		837012	0					
ANR	837079	Identifier	cc		837012	0					
ANR	837080	IdentifierDeclStatement	uint sskip = sraster - ( ( width * depth + 7 ) >> 3 ) ;	410:4:15712:15761	837012	5	True				
ANR	837081	IdentifierDecl	sskip = sraster - ( ( width * depth + 7 ) >> 3 )		837012	0					
ANR	837082	IdentifierDeclType	uint		837012	0					
ANR	837083	Identifier	sskip		837012	1					
ANR	837084	AssignmentExpression	sskip = sraster - ( ( width * depth + 7 ) >> 3 )		837012	2		=			
ANR	837085	Identifier	sskip		837012	0					
ANR	837086	AdditiveExpression	sraster - ( ( width * depth + 7 ) >> 3 )		837012	1		-			
ANR	837087	Identifier	sraster		837012	0					
ANR	837088	ShiftExpression	( width * depth + 7 ) >> 3		837012	1		>>			
ANR	837089	AdditiveExpression	width * depth + 7		837012	0		+			
ANR	837090	MultiplicativeExpression	width * depth		837012	0		*			
ANR	837091	Identifier	width		837012	0					
ANR	837092	Identifier	depth		837012	1					
ANR	837093	PrimaryExpression	7		837012	1					
ANR	837094	PrimaryExpression	3		837012	1					
ANR	837095	IdentifierDeclStatement	uint draster = bitmap_raster ( width ) ;	411:4:15767:15802	837012	6	True				
ANR	837096	IdentifierDecl	draster = bitmap_raster ( width )		837012	0					
ANR	837097	IdentifierDeclType	uint		837012	0					
ANR	837098	Identifier	draster		837012	1					
ANR	837099	AssignmentExpression	draster = bitmap_raster ( width )		837012	2		=			
ANR	837100	Identifier	draster		837012	0					
ANR	837101	CallExpression	bitmap_raster ( width )		837012	1					
ANR	837102	Callee	bitmap_raster		837012	0					
ANR	837103	Identifier	bitmap_raster		837012	0					
ANR	837104	ArgumentList	width		837012	1					
ANR	837105	Argument	width		837012	0					
ANR	837106	Identifier	width		837012	0					
ANR	837107	IdentifierDeclStatement	uint dskip = draster - ( ( width + 7 ) >> 3 ) ;	412:4:15808:15849	837012	7	True				
ANR	837108	IdentifierDecl	dskip = draster - ( ( width + 7 ) >> 3 )		837012	0					
ANR	837109	IdentifierDeclType	uint		837012	0					
ANR	837110	Identifier	dskip		837012	1					
ANR	837111	AssignmentExpression	dskip = draster - ( ( width + 7 ) >> 3 )		837012	2		=			
ANR	837112	Identifier	dskip		837012	0					
ANR	837113	AdditiveExpression	draster - ( ( width + 7 ) >> 3 )		837012	1		-			
ANR	837114	Identifier	draster		837012	0					
ANR	837115	ShiftExpression	( width + 7 ) >> 3		837012	1		>>			
ANR	837116	AdditiveExpression	width + 7		837012	0		+			
ANR	837117	Identifier	width		837012	0					
ANR	837118	PrimaryExpression	7		837012	1					
ANR	837119	PrimaryExpression	3		837012	1					
ANR	837120	IdentifierDeclStatement	"byte * mask = gs_alloc_bytes ( mem , draster * height , ""compress_alpha_bits"" ) ;"	413:4:15855:15960	837012	8	True				
ANR	837121	IdentifierDecl	"* mask = gs_alloc_bytes ( mem , draster * height , ""compress_alpha_bits"" )"		837012	0					
ANR	837122	IdentifierDeclType	byte *		837012	0					
ANR	837123	Identifier	mask		837012	1					
ANR	837124	AssignmentExpression	"* mask = gs_alloc_bytes ( mem , draster * height , ""compress_alpha_bits"" )"		837012	2		=			
ANR	837125	Identifier	mask		837012	0					
ANR	837126	CallExpression	"gs_alloc_bytes ( mem , draster * height , ""compress_alpha_bits"" )"		837012	1					
ANR	837127	Callee	gs_alloc_bytes		837012	0					
ANR	837128	Identifier	gs_alloc_bytes		837012	0					
ANR	837129	ArgumentList	mem		837012	1					
ANR	837130	Argument	mem		837012	0					
ANR	837131	Identifier	mem		837012	0					
ANR	837132	Argument	draster * height		837012	1					
ANR	837133	MultiplicativeExpression	draster * height		837012	0		*			
ANR	837134	Identifier	draster		837012	0					
ANR	837135	Identifier	height		837012	1					
ANR	837136	Argument	"""compress_alpha_bits"""		837012	2					
ANR	837137	PrimaryExpression	"""compress_alpha_bits"""		837012	0					
ANR	837138	IdentifierDeclStatement	const byte * sptr = data ;	415:4:15966:15989	837012	9	True				
ANR	837139	IdentifierDecl	* sptr = data		837012	0					
ANR	837140	IdentifierDeclType	const byte *		837012	0					
ANR	837141	Identifier	sptr		837012	1					
ANR	837142	AssignmentExpression	* sptr = data		837012	2		=			
ANR	837143	Identifier	data		837012	0					
ANR	837144	Identifier	data		837012	1					
ANR	837145	IdentifierDeclStatement	byte * dptr = mask ;	416:4:15995:16012	837012	10	True				
ANR	837146	IdentifierDecl	* dptr = mask		837012	0					
ANR	837147	IdentifierDeclType	byte *		837012	0					
ANR	837148	Identifier	dptr		837012	1					
ANR	837149	AssignmentExpression	* dptr = mask		837012	2		=			
ANR	837150	Identifier	mask		837012	0					
ANR	837151	Identifier	mask		837012	1					
ANR	837152	IdentifierDeclStatement	uint h ;	417:4:16018:16024	837012	11	True				
ANR	837153	IdentifierDecl	h		837012	0					
ANR	837154	IdentifierDeclType	uint		837012	0					
ANR	837155	Identifier	h		837012	1					
ANR	837156	IfStatement	if ( mask == 0 )		837012	12					
ANR	837157	Condition	mask == 0	419:8:16035:16043	837012	0	True				
ANR	837158	EqualityExpression	mask == 0		837012	0		==			
ANR	837159	Identifier	mask		837012	0					
ANR	837160	PrimaryExpression	0		837012	1					
ANR	837161	ReturnStatement	return 0 ;	420:8:16054:16062	837012	1	True				
ANR	837162	PrimaryExpression	0		837012	0					
ANR	837163	ForStatement	for ( h = height ; h ; -- h )		837012	13					
ANR	837164	ForInit	h = height ;	421:9:16073:16083	837012	0	True				
ANR	837165	AssignmentExpression	h = height		837012	0		=			
ANR	837166	Identifier	h		837012	0					
ANR	837167	Identifier	height		837012	1					
ANR	837168	Condition	h	421:21:16085:16085	837012	1	True				
ANR	837169	Identifier	h		837012	0					
ANR	837170	UnaryExpression	-- h	421:24:16088:16090	837012	2	True				
ANR	837171	IncDec	--		837012	0					
ANR	837172	Identifier	h		837012	1					
ANR	837173	CompoundStatement		26:8:821:827	837012	3					
ANR	837174	IdentifierDeclStatement	byte sbit = 0x80 ;	422:8:16103:16119	837012	0	True				
ANR	837175	IdentifierDecl	sbit = 0x80		837012	0					
ANR	837176	IdentifierDeclType	byte		837012	0					
ANR	837177	Identifier	sbit		837012	1					
ANR	837178	AssignmentExpression	sbit = 0x80		837012	2		=			
ANR	837179	Identifier	sbit		837012	0					
ANR	837180	PrimaryExpression	0x80		837012	1					
ANR	837181	IdentifierDeclStatement	byte d = 0 ;	423:8:16129:16139	837012	1	True				
ANR	837182	IdentifierDecl	d = 0		837012	0					
ANR	837183	IdentifierDeclType	byte		837012	0					
ANR	837184	Identifier	d		837012	1					
ANR	837185	AssignmentExpression	d = 0		837012	2		=			
ANR	837186	Identifier	d		837012	0					
ANR	837187	PrimaryExpression	0		837012	1					
ANR	837188	IdentifierDeclStatement	byte dbit = 0x80 ;	424:8:16149:16165	837012	2	True				
ANR	837189	IdentifierDecl	dbit = 0x80		837012	0					
ANR	837190	IdentifierDeclType	byte		837012	0					
ANR	837191	Identifier	dbit		837012	1					
ANR	837192	AssignmentExpression	dbit = 0x80		837012	2		=			
ANR	837193	Identifier	dbit		837012	0					
ANR	837194	PrimaryExpression	0x80		837012	1					
ANR	837195	IdentifierDeclStatement	uint w ;	425:8:16175:16181	837012	3	True				
ANR	837196	IdentifierDecl	w		837012	0					
ANR	837197	IdentifierDeclType	uint		837012	0					
ANR	837198	Identifier	w		837012	1					
ANR	837199	ForStatement	for ( w = width ; w ; -- w )		837012	4					
ANR	837200	ForInit	w = width ;	427:13:16197:16206	837012	0	True				
ANR	837201	AssignmentExpression	w = width		837012	0		=			
ANR	837202	Identifier	w		837012	0					
ANR	837203	Identifier	width		837012	1					
ANR	837204	Condition	w	427:24:16208:16208	837012	1	True				
ANR	837205	Identifier	w		837012	0					
ANR	837206	UnaryExpression	-- w	427:27:16211:16213	837012	2	True				
ANR	837207	IncDec	--		837012	0					
ANR	837208	Identifier	w		837012	1					
ANR	837209	CompoundStatement		28:32:862:862	837012	3					
ANR	837210	IfStatement	if ( * sptr & sbit )		837012	0					
ANR	837211	Condition	* sptr & sbit	428:16:16234:16245	837012	0	True				
ANR	837212	BitAndExpression	* sptr & sbit		837012	0		&			
ANR	837213	UnaryOperationExpression	* sptr		837012	0					
ANR	837214	UnaryOperator	*		837012	0					
ANR	837215	Identifier	sptr		837012	1					
ANR	837216	Identifier	sbit		837012	1					
ANR	837217	ExpressionStatement	d += dbit	429:16:16264:16273	837012	1	True				
ANR	837218	AssignmentExpression	d += dbit		837012	0		+=			
ANR	837219	Identifier	d		837012	0					
ANR	837220	Identifier	dbit		837012	1					
ANR	837221	IfStatement	if ( ! ( sbit >>= depth ) )		837012	1					
ANR	837222	Condition	! ( sbit >>= depth )	430:16:16291:16307	837012	0	True				
ANR	837223	UnaryOperationExpression	! ( sbit >>= depth )		837012	0					
ANR	837224	UnaryOperator	!		837012	0					
ANR	837225	AssignmentExpression	sbit >>= depth		837012	1		>>=			
ANR	837226	Identifier	sbit		837012	0					
ANR	837227	Identifier	depth		837012	1					
ANR	837228	ExpressionStatement	"sbit = 0x80 , sptr ++"	431:16:16326:16345	837012	1	True				
ANR	837229	Expression	"sbit = 0x80 , sptr ++"		837012	0					
ANR	837230	AssignmentExpression	sbit = 0x80		837012	0		=			
ANR	837231	Identifier	sbit		837012	0					
ANR	837232	PrimaryExpression	0x80		837012	1					
ANR	837233	PostIncDecOperationExpression	sptr ++		837012	1					
ANR	837234	Identifier	sptr		837012	0					
ANR	837235	IncDec	++		837012	1					
ANR	837236	IfStatement	if ( ! ( dbit >>= 1 ) )		837012	2					
ANR	837237	Condition	! ( dbit >>= 1 )	432:16:16363:16375	837012	0	True				
ANR	837238	UnaryOperationExpression	! ( dbit >>= 1 )		837012	0					
ANR	837239	UnaryOperator	!		837012	0					
ANR	837240	AssignmentExpression	dbit >>= 1		837012	1		>>=			
ANR	837241	Identifier	dbit		837012	0					
ANR	837242	PrimaryExpression	1		837012	1					
ANR	837243	CompoundStatement		33:31:1024:1024	837012	1					
ANR	837244	ExpressionStatement	* dptr ++ = d	433:16:16396:16407	837012	0	True				
ANR	837245	AssignmentExpression	* dptr ++ = d		837012	0		=			
ANR	837246	UnaryOperationExpression	* dptr ++		837012	0					
ANR	837247	UnaryOperator	*		837012	0					
ANR	837248	PostIncDecOperationExpression	dptr ++		837012	1					
ANR	837249	Identifier	dptr		837012	0					
ANR	837250	IncDec	++		837012	1					
ANR	837251	Identifier	d		837012	1					
ANR	837252	ExpressionStatement	"dbit = 0x80 , d = 0"	434:16:16425:16443	837012	1	True				
ANR	837253	Expression	"dbit = 0x80 , d = 0"		837012	0					
ANR	837254	AssignmentExpression	dbit = 0x80		837012	0		=			
ANR	837255	Identifier	dbit		837012	0					
ANR	837256	PrimaryExpression	0x80		837012	1					
ANR	837257	AssignmentExpression	d = 0		837012	1		=			
ANR	837258	Identifier	d		837012	0					
ANR	837259	PrimaryExpression	0		837012	1					
ANR	837260	IfStatement	if ( dbit != 0x80 )		837012	5					
ANR	837261	Condition	dbit != 0x80	437:12:16481:16492	837012	0	True				
ANR	837262	EqualityExpression	dbit != 0x80		837012	0		!=			
ANR	837263	Identifier	dbit		837012	0					
ANR	837264	PrimaryExpression	0x80		837012	1					
ANR	837265	ExpressionStatement	* dptr ++ = d	438:12:16507:16518	837012	1	True				
ANR	837266	AssignmentExpression	* dptr ++ = d		837012	0		=			
ANR	837267	UnaryOperationExpression	* dptr ++		837012	0					
ANR	837268	UnaryOperator	*		837012	0					
ANR	837269	PostIncDecOperationExpression	dptr ++		837012	1					
ANR	837270	Identifier	dptr		837012	0					
ANR	837271	IncDec	++		837012	1					
ANR	837272	Identifier	d		837012	1					
ANR	837273	ForStatement	for ( w = dskip ; w != 0 ; -- w )		837012	6					
ANR	837274	ForInit	w = dskip ;	439:13:16533:16542	837012	0	True				
ANR	837275	AssignmentExpression	w = dskip		837012	0		=			
ANR	837276	Identifier	w		837012	0					
ANR	837277	Identifier	dskip		837012	1					
ANR	837278	Condition	w != 0	439:24:16544:16549	837012	1	True				
ANR	837279	EqualityExpression	w != 0		837012	0		!=			
ANR	837280	Identifier	w		837012	0					
ANR	837281	PrimaryExpression	0		837012	1					
ANR	837282	UnaryExpression	-- w	439:32:16552:16554	837012	2	True				
ANR	837283	IncDec	--		837012	0					
ANR	837284	Identifier	w		837012	1					
ANR	837285	ExpressionStatement	* dptr ++ = 0	440:12:16569:16580	837012	3	True				
ANR	837286	AssignmentExpression	* dptr ++ = 0		837012	0		=			
ANR	837287	UnaryOperationExpression	* dptr ++		837012	0					
ANR	837288	UnaryOperator	*		837012	0					
ANR	837289	PostIncDecOperationExpression	dptr ++		837012	1					
ANR	837290	Identifier	dptr		837012	0					
ANR	837291	IncDec	++		837012	1					
ANR	837292	PrimaryExpression	0		837012	1					
ANR	837293	IfStatement	if ( sbit != 0x80 )		837012	7					
ANR	837294	Condition	sbit != 0x80	441:12:16594:16605	837012	0	True				
ANR	837295	EqualityExpression	sbit != 0x80		837012	0		!=			
ANR	837296	Identifier	sbit		837012	0					
ANR	837297	PrimaryExpression	0x80		837012	1					
ANR	837298	ExpressionStatement	++ sptr	442:12:16620:16626	837012	1	True				
ANR	837299	UnaryExpression	++ sptr		837012	0					
ANR	837300	IncDec	++		837012	0					
ANR	837301	Identifier	sptr		837012	1					
ANR	837302	ExpressionStatement	sptr += sskip	443:8:16636:16649	837012	8	True				
ANR	837303	AssignmentExpression	sptr += sskip		837012	0		+=			
ANR	837304	Identifier	sptr		837012	0					
ANR	837305	Identifier	sskip		837012	1					
ANR	837306	ReturnStatement	return mask ;	445:4:16661:16672	837012	14	True				
ANR	837307	Identifier	mask		837012	0					
ANR	837308	ReturnType	static byte *		837012	1					
ANR	837309	Identifier	compress_alpha_bits		837012	2					
ANR	837310	ParameterList	"const cached_char * cc , gs_memory_t * mem"		837012	3					
ANR	837311	Parameter	const cached_char * cc	399:20:15310:15331	837012	0	True				
ANR	837312	ParameterType	const cached_char *		837012	0					
ANR	837313	Identifier	cc		837012	1					
ANR	837314	Parameter	gs_memory_t * mem	399:44:15334:15350	837012	1	True				
ANR	837315	ParameterType	gs_memory_t *		837012	0					
ANR	837316	Identifier	mem		837012	1					
ANR	837317	CFGEntryNode	ENTRY		837012		True				
ANR	837318	CFGExitNode	EXIT		837012		True				
ANR	837319	Symbol	cc -> width		837012						
ANR	837320	Symbol	data		837012						
ANR	837321	Symbol	* dptr ++		837012						
ANR	837322	Symbol	* cc		837012						
ANR	837323	Symbol	dbit		837012						
ANR	837324	Symbol	cc_depth		837012						
ANR	837325	Symbol	sbit		837012						
ANR	837326	Symbol	mem		837012						
ANR	837327	Symbol	cc -> height		837012						
ANR	837328	Symbol	dskip		837012						
ANR	837329	Symbol	height		837012						
ANR	837330	Symbol	mask		837012						
ANR	837331	Symbol	cc		837012						
ANR	837332	Symbol	gs_alloc_bytes		837012						
ANR	837333	Symbol	d		837012						
ANR	837334	Symbol	draster		837012						
ANR	837335	Symbol	dptr		837012						
ANR	837336	Symbol	h		837012						
ANR	837337	Symbol	cc_raster		837012						
ANR	837338	Symbol	sptr		837012						
ANR	837339	Symbol	bitmap_raster		837012						
ANR	837340	Symbol	sraster		837012						
ANR	837341	Symbol	depth		837012						
ANR	837342	Symbol	* sptr		837012						
ANR	837343	Symbol	w		837012						
ANR	837344	Symbol	width		837012						
ANR	837345	Symbol	sskip		837012						
ANR	837346	Symbol	cc_const_bits		837012						
