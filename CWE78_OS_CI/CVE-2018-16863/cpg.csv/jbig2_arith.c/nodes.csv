command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6209857	File	data/converged/CVE-2018-16863_ghostpdl/jbig2_arith.c								
ANR	6209858	ClassDef	_Jbig2ArithState	32:0:778:936							
ANR	6209859	DeclStmt									
ANR	6209860	Decl							uint32_t	uint32_t	C
ANR	6209861	DeclStmt									
ANR	6209862	Decl							int	int	A
ANR	6209863	DeclStmt									
ANR	6209864	Decl							int	int	CT
ANR	6209865	DeclStmt									
ANR	6209866	Decl							uint32_t	uint32_t	next_word
ANR	6209867	DeclStmt									
ANR	6209868	Decl							int	int	next_word_bytes
ANR	6209869	DeclStmt									
ANR	6209870	Decl							Jbig2WordStream	Jbig2WordStream *	ws
ANR	6209871	DeclStmt									
ANR	6209872	Decl							int	int	offset
ANR	6209873	Function	jbig2_arith_bytein	61:0:1445:3819							
ANR	6209874	FunctionDef	jbig2_arith_bytein (Jbig2ArithState * as)		6209873	0					
ANR	6209875	CompoundStatement		63:0:1497:3819	6209873	0					
ANR	6209876	IdentifierDeclStatement	int new_bytes ;	64:4:1503:1516	6209873	0	True				
ANR	6209877	IdentifierDecl	new_bytes		6209873	0					
ANR	6209878	IdentifierDeclType	int		6209873	0					
ANR	6209879	Identifier	new_bytes		6209873	1					
ANR	6209880	IdentifierDeclStatement	byte B ;	65:4:1522:1528	6209873	1	True				
ANR	6209881	IdentifierDecl	B		6209873	0					
ANR	6209882	IdentifierDeclType	byte		6209873	0					
ANR	6209883	Identifier	B		6209873	1					
ANR	6209884	ExpressionStatement	B = ( byte ) ( ( as -> next_word >> 24 ) & 0xFF )	70:4:1602:1642	6209873	2	True				
ANR	6209885	AssignmentExpression	B = ( byte ) ( ( as -> next_word >> 24 ) & 0xFF )		6209873	0		=			
ANR	6209886	Identifier	B		6209873	0					
ANR	6209887	CastExpression	( byte ) ( ( as -> next_word >> 24 ) & 0xFF )		6209873	1					
ANR	6209888	CastTarget	byte		6209873	0					
ANR	6209889	BitAndExpression	( as -> next_word >> 24 ) & 0xFF		6209873	1		&			
ANR	6209890	ShiftExpression	as -> next_word >> 24		6209873	0		>>			
ANR	6209891	PtrMemberAccess	as -> next_word		6209873	0					
ANR	6209892	Identifier	as		6209873	0					
ANR	6209893	Identifier	next_word		6209873	1					
ANR	6209894	PrimaryExpression	24		6209873	1					
ANR	6209895	PrimaryExpression	0xFF		6209873	1					
ANR	6209896	IfStatement	if ( B == 0xFF )		6209873	3					
ANR	6209897	Condition	B == 0xFF	71:8:1652:1660	6209873	0	True				
ANR	6209898	EqualityExpression	B == 0xFF		6209873	0		==			
ANR	6209899	Identifier	B		6209873	0					
ANR	6209900	PrimaryExpression	0xFF		6209873	1					
ANR	6209901	CompoundStatement		10:8:175:182	6209873	1					
ANR	6209902	IdentifierDeclStatement	byte B1 ;	72:8:1673:1680	6209873	0	True				
ANR	6209903	IdentifierDecl	B1		6209873	0					
ANR	6209904	IdentifierDeclType	byte		6209873	0					
ANR	6209905	Identifier	B1		6209873	1					
ANR	6209906	IfStatement	if ( as -> next_word_bytes == 1 )		6209873	1					
ANR	6209907	Condition	as -> next_word_bytes == 1	74:12:1695:1718	6209873	0	True				
ANR	6209908	EqualityExpression	as -> next_word_bytes == 1		6209873	0		==			
ANR	6209909	PtrMemberAccess	as -> next_word_bytes		6209873	0					
ANR	6209910	Identifier	as		6209873	0					
ANR	6209911	Identifier	next_word_bytes		6209873	1					
ANR	6209912	PrimaryExpression	1		6209873	1					
ANR	6209913	CompoundStatement		13:12:237:265	6209873	1					
ANR	6209914	IdentifierDeclStatement	Jbig2WordStream * ws = as -> ws ;	75:12:1735:1763	6209873	0	True				
ANR	6209915	IdentifierDecl	* ws = as -> ws		6209873	0					
ANR	6209916	IdentifierDeclType	Jbig2WordStream *		6209873	0					
ANR	6209917	Identifier	ws		6209873	1					
ANR	6209918	AssignmentExpression	* ws = as -> ws		6209873	2		=			
ANR	6209919	Identifier	ws		6209873	0					
ANR	6209920	PtrMemberAccess	as -> ws		6209873	1					
ANR	6209921	Identifier	as		6209873	0					
ANR	6209922	Identifier	ws		6209873	1					
ANR	6209923	ExpressionStatement	"new_bytes = ws -> get_next_word ( ws , as -> offset , & as -> next_word )"	77:12:1778:1839	6209873	1	True				
ANR	6209924	AssignmentExpression	"new_bytes = ws -> get_next_word ( ws , as -> offset , & as -> next_word )"		6209873	0		=			
ANR	6209925	Identifier	new_bytes		6209873	0					
ANR	6209926	CallExpression	"ws -> get_next_word ( ws , as -> offset , & as -> next_word )"		6209873	1					
ANR	6209927	Callee	ws -> get_next_word		6209873	0					
ANR	6209928	PtrMemberAccess	ws -> get_next_word		6209873	0					
ANR	6209929	Identifier	ws		6209873	0					
ANR	6209930	Identifier	get_next_word		6209873	1					
ANR	6209931	ArgumentList	ws		6209873	1					
ANR	6209932	Argument	ws		6209873	0					
ANR	6209933	Identifier	ws		6209873	0					
ANR	6209934	Argument	as -> offset		6209873	1					
ANR	6209935	PtrMemberAccess	as -> offset		6209873	0					
ANR	6209936	Identifier	as		6209873	0					
ANR	6209937	Identifier	offset		6209873	1					
ANR	6209938	Argument	& as -> next_word		6209873	2					
ANR	6209939	UnaryOperationExpression	& as -> next_word		6209873	0					
ANR	6209940	UnaryOperator	&		6209873	0					
ANR	6209941	PtrMemberAccess	as -> next_word		6209873	1					
ANR	6209942	Identifier	as		6209873	0					
ANR	6209943	Identifier	next_word		6209873	1					
ANR	6209944	ExpressionStatement	as -> next_word_bytes = new_bytes	78:12:1853:1884	6209873	2	True				
ANR	6209945	AssignmentExpression	as -> next_word_bytes = new_bytes		6209873	0		=			
ANR	6209946	PtrMemberAccess	as -> next_word_bytes		6209873	0					
ANR	6209947	Identifier	as		6209873	0					
ANR	6209948	Identifier	next_word_bytes		6209873	1					
ANR	6209949	Identifier	new_bytes		6209873	1					
ANR	6209950	ExpressionStatement	as -> offset += new_bytes	79:12:1898:1921	6209873	3	True				
ANR	6209951	AssignmentExpression	as -> offset += new_bytes		6209873	0		+=			
ANR	6209952	PtrMemberAccess	as -> offset		6209873	0					
ANR	6209953	Identifier	as		6209873	0					
ANR	6209954	Identifier	offset		6209873	1					
ANR	6209955	Identifier	new_bytes		6209873	1					
ANR	6209956	ExpressionStatement	B1 = ( byte ) ( ( as -> next_word >> 24 ) & 0xFF )	81:12:1936:1977	6209873	4	True				
ANR	6209957	AssignmentExpression	B1 = ( byte ) ( ( as -> next_word >> 24 ) & 0xFF )		6209873	0		=			
ANR	6209958	Identifier	B1		6209873	0					
ANR	6209959	CastExpression	( byte ) ( ( as -> next_word >> 24 ) & 0xFF )		6209873	1					
ANR	6209960	CastTarget	byte		6209873	0					
ANR	6209961	BitAndExpression	( as -> next_word >> 24 ) & 0xFF		6209873	1		&			
ANR	6209962	ShiftExpression	as -> next_word >> 24		6209873	0		>>			
ANR	6209963	PtrMemberAccess	as -> next_word		6209873	0					
ANR	6209964	Identifier	as		6209873	0					
ANR	6209965	Identifier	next_word		6209873	1					
ANR	6209966	PrimaryExpression	24		6209873	1					
ANR	6209967	PrimaryExpression	0xFF		6209873	1					
ANR	6209968	IfStatement	if ( B1 > 0x8F )		6209873	5					
ANR	6209969	Condition	B1 > 0x8F	82:16:1995:2003	6209873	0	True				
ANR	6209970	RelationalExpression	B1 > 0x8F		6209873	0		>			
ANR	6209971	Identifier	B1		6209873	0					
ANR	6209972	PrimaryExpression	0x8F		6209873	1					
ANR	6209973	CompoundStatement		20:27:508:508	6209873	1					
ANR	6209974	ExpressionStatement	"fprintf ( stderr , ""read %02x (aa)\\n"" , B )"	84:16:2049:2087	6209873	0	True				
ANR	6209975	CallExpression	"fprintf ( stderr , ""read %02x (aa)\\n"" , B )"		6209873	0					
ANR	6209976	Callee	fprintf		6209873	0					
ANR	6209977	Identifier	fprintf		6209873	0					
ANR	6209978	ArgumentList	stderr		6209873	1					
ANR	6209979	Argument	stderr		6209873	0					
ANR	6209980	Identifier	stderr		6209873	0					
ANR	6209981	Argument	"""read %02x (aa)\\n"""		6209873	1					
ANR	6209982	PrimaryExpression	"""read %02x (aa)\\n"""		6209873	0					
ANR	6209983	Argument	B		6209873	2					
ANR	6209984	Identifier	B		6209873	0					
ANR	6209985	ExpressionStatement	as -> C += 0xFF00	87:16:2140:2155	6209873	1	True				
ANR	6209986	AssignmentExpression	as -> C += 0xFF00		6209873	0		+=			
ANR	6209987	PtrMemberAccess	as -> C		6209873	0					
ANR	6209988	Identifier	as		6209873	0					
ANR	6209989	Identifier	C		6209873	1					
ANR	6209990	PrimaryExpression	0xFF00		6209873	1					
ANR	6209991	ExpressionStatement	as -> CT = 8	89:16:2180:2190	6209873	2	True				
ANR	6209992	AssignmentExpression	as -> CT = 8		6209873	0		=			
ANR	6209993	PtrMemberAccess	as -> CT		6209873	0					
ANR	6209994	Identifier	as		6209873	0					
ANR	6209995	Identifier	CT		6209873	1					
ANR	6209996	PrimaryExpression	8		6209873	1					
ANR	6209997	ExpressionStatement	as -> next_word = 0xFF000000 | ( as -> next_word >> 8 )	90:16:2208:2257	6209873	3	True				
ANR	6209998	AssignmentExpression	as -> next_word = 0xFF000000 | ( as -> next_word >> 8 )		6209873	0		=			
ANR	6209999	PtrMemberAccess	as -> next_word		6209873	0					
ANR	6210000	Identifier	as		6209873	0					
ANR	6210001	Identifier	next_word		6209873	1					
ANR	6210002	InclusiveOrExpression	0xFF000000 | ( as -> next_word >> 8 )		6209873	1		|			
ANR	6210003	PrimaryExpression	0xFF000000		6209873	0					
ANR	6210004	ShiftExpression	as -> next_word >> 8		6209873	1		>>			
ANR	6210005	PtrMemberAccess	as -> next_word		6209873	0					
ANR	6210006	Identifier	as		6209873	0					
ANR	6210007	Identifier	next_word		6209873	1					
ANR	6210008	PrimaryExpression	8		6209873	1					
ANR	6210009	ExpressionStatement	as -> next_word_bytes = 4	91:16:2275:2298	6209873	4	True				
ANR	6210010	AssignmentExpression	as -> next_word_bytes = 4		6209873	0		=			
ANR	6210011	PtrMemberAccess	as -> next_word_bytes		6209873	0					
ANR	6210012	Identifier	as		6209873	0					
ANR	6210013	Identifier	next_word_bytes		6209873	1					
ANR	6210014	PrimaryExpression	4		6209873	1					
ANR	6210015	ExpressionStatement	as -> offset --	92:16:2316:2328	6209873	5	True				
ANR	6210016	PostIncDecOperationExpression	as -> offset --		6209873	0					
ANR	6210017	PtrMemberAccess	as -> offset		6209873	0					
ANR	6210018	Identifier	as		6209873	0					
ANR	6210019	Identifier	offset		6209873	1					
ANR	6210020	IncDec	--		6209873	1					
ANR	6210021	ElseStatement	else		6209873	0					
ANR	6210022	CompoundStatement		31:19:851:851	6209873	0					
ANR	6210023	ExpressionStatement	"fprintf ( stderr , ""read %02x (a)\\n"" , B )"	95:16:2392:2429	6209873	0	True				
ANR	6210024	CallExpression	"fprintf ( stderr , ""read %02x (a)\\n"" , B )"		6209873	0					
ANR	6210025	Callee	fprintf		6209873	0					
ANR	6210026	Identifier	fprintf		6209873	0					
ANR	6210027	ArgumentList	stderr		6209873	1					
ANR	6210028	Argument	stderr		6209873	0					
ANR	6210029	Identifier	stderr		6209873	0					
ANR	6210030	Argument	"""read %02x (a)\\n"""		6209873	1					
ANR	6210031	PrimaryExpression	"""read %02x (a)\\n"""		6209873	0					
ANR	6210032	Argument	B		6209873	2					
ANR	6210033	Identifier	B		6209873	0					
ANR	6210034	ExpressionStatement	as -> C += 0xFE00 - ( B1 << 9 )	98:16:2481:2508	6209873	1	True				
ANR	6210035	AssignmentExpression	as -> C += 0xFE00 - ( B1 << 9 )		6209873	0		+=			
ANR	6210036	PtrMemberAccess	as -> C		6209873	0					
ANR	6210037	Identifier	as		6209873	0					
ANR	6210038	Identifier	C		6209873	1					
ANR	6210039	AdditiveExpression	0xFE00 - ( B1 << 9 )		6209873	1		-			
ANR	6210040	PrimaryExpression	0xFE00		6209873	0					
ANR	6210041	ShiftExpression	B1 << 9		6209873	1		<<			
ANR	6210042	Identifier	B1		6209873	0					
ANR	6210043	PrimaryExpression	9		6209873	1					
ANR	6210044	ExpressionStatement	as -> CT = 7	102:16:2573:2583	6209873	2	True				
ANR	6210045	AssignmentExpression	as -> CT = 7		6209873	0		=			
ANR	6210046	PtrMemberAccess	as -> CT		6209873	0					
ANR	6210047	Identifier	as		6209873	0					
ANR	6210048	Identifier	CT		6209873	1					
ANR	6210049	PrimaryExpression	7		6209873	1					
ANR	6210050	ElseStatement	else		6209873	0					
ANR	6210051	CompoundStatement		42:15:1116:1116	6209873	0					
ANR	6210052	ExpressionStatement	B1 = ( byte ) ( ( as -> next_word >> 16 ) & 0xFF )	105:12:2628:2669	6209873	0	True				
ANR	6210053	AssignmentExpression	B1 = ( byte ) ( ( as -> next_word >> 16 ) & 0xFF )		6209873	0		=			
ANR	6210054	Identifier	B1		6209873	0					
ANR	6210055	CastExpression	( byte ) ( ( as -> next_word >> 16 ) & 0xFF )		6209873	1					
ANR	6210056	CastTarget	byte		6209873	0					
ANR	6210057	BitAndExpression	( as -> next_word >> 16 ) & 0xFF		6209873	1		&			
ANR	6210058	ShiftExpression	as -> next_word >> 16		6209873	0		>>			
ANR	6210059	PtrMemberAccess	as -> next_word		6209873	0					
ANR	6210060	Identifier	as		6209873	0					
ANR	6210061	Identifier	next_word		6209873	1					
ANR	6210062	PrimaryExpression	16		6209873	1					
ANR	6210063	PrimaryExpression	0xFF		6209873	1					
ANR	6210064	IfStatement	if ( B1 > 0x8F )		6209873	1					
ANR	6210065	Condition	B1 > 0x8F	106:16:2687:2695	6209873	0	True				
ANR	6210066	RelationalExpression	B1 > 0x8F		6209873	0		>			
ANR	6210067	Identifier	B1		6209873	0					
ANR	6210068	PrimaryExpression	0x8F		6209873	1					
ANR	6210069	CompoundStatement		44:27:1200:1200	6209873	1					
ANR	6210070	ExpressionStatement	"fprintf ( stderr , ""read %02x (ba)\\n"" , B )"	108:16:2741:2779	6209873	0	True				
ANR	6210071	CallExpression	"fprintf ( stderr , ""read %02x (ba)\\n"" , B )"		6209873	0					
ANR	6210072	Callee	fprintf		6209873	0					
ANR	6210073	Identifier	fprintf		6209873	0					
ANR	6210074	ArgumentList	stderr		6209873	1					
ANR	6210075	Argument	stderr		6209873	0					
ANR	6210076	Identifier	stderr		6209873	0					
ANR	6210077	Argument	"""read %02x (ba)\\n"""		6209873	1					
ANR	6210078	PrimaryExpression	"""read %02x (ba)\\n"""		6209873	0					
ANR	6210079	Argument	B		6209873	2					
ANR	6210080	Identifier	B		6209873	0					
ANR	6210081	ExpressionStatement	as -> C += 0xFF00	111:16:2832:2847	6209873	1	True				
ANR	6210082	AssignmentExpression	as -> C += 0xFF00		6209873	0		+=			
ANR	6210083	PtrMemberAccess	as -> C		6209873	0					
ANR	6210084	Identifier	as		6209873	0					
ANR	6210085	Identifier	C		6209873	1					
ANR	6210086	PrimaryExpression	0xFF00		6209873	1					
ANR	6210087	ExpressionStatement	as -> CT = 8	113:16:2872:2882	6209873	2	True				
ANR	6210088	AssignmentExpression	as -> CT = 8		6209873	0		=			
ANR	6210089	PtrMemberAccess	as -> CT		6209873	0					
ANR	6210090	Identifier	as		6209873	0					
ANR	6210091	Identifier	CT		6209873	1					
ANR	6210092	PrimaryExpression	8		6209873	1					
ANR	6210093	ElseStatement	else		6209873	0					
ANR	6210094	CompoundStatement		52:19:1405:1405	6209873	0					
ANR	6210095	ExpressionStatement	as -> next_word_bytes --	115:16:2921:2942	6209873	0	True				
ANR	6210096	PostIncDecOperationExpression	as -> next_word_bytes --		6209873	0					
ANR	6210097	PtrMemberAccess	as -> next_word_bytes		6209873	0					
ANR	6210098	Identifier	as		6209873	0					
ANR	6210099	Identifier	next_word_bytes		6209873	1					
ANR	6210100	IncDec	--		6209873	1					
ANR	6210101	ExpressionStatement	as -> next_word <<= 8	116:16:2960:2979	6209873	1	True				
ANR	6210102	AssignmentExpression	as -> next_word <<= 8		6209873	0		<<=			
ANR	6210103	PtrMemberAccess	as -> next_word		6209873	0					
ANR	6210104	Identifier	as		6209873	0					
ANR	6210105	Identifier	next_word		6209873	1					
ANR	6210106	PrimaryExpression	8		6209873	1					
ANR	6210107	ExpressionStatement	"fprintf ( stderr , ""read %02x (b)\\n"" , B )"	118:16:3022:3059	6209873	2	True				
ANR	6210108	CallExpression	"fprintf ( stderr , ""read %02x (b)\\n"" , B )"		6209873	0					
ANR	6210109	Callee	fprintf		6209873	0					
ANR	6210110	Identifier	fprintf		6209873	0					
ANR	6210111	ArgumentList	stderr		6209873	1					
ANR	6210112	Argument	stderr		6209873	0					
ANR	6210113	Identifier	stderr		6209873	0					
ANR	6210114	Argument	"""read %02x (b)\\n"""		6209873	1					
ANR	6210115	PrimaryExpression	"""read %02x (b)\\n"""		6209873	0					
ANR	6210116	Argument	B		6209873	2					
ANR	6210117	Identifier	B		6209873	0					
ANR	6210118	ExpressionStatement	as -> C += 0xFE00 - ( B1 << 9 )	122:16:3112:3139	6209873	3	True				
ANR	6210119	AssignmentExpression	as -> C += 0xFE00 - ( B1 << 9 )		6209873	0		+=			
ANR	6210120	PtrMemberAccess	as -> C		6209873	0					
ANR	6210121	Identifier	as		6209873	0					
ANR	6210122	Identifier	C		6209873	1					
ANR	6210123	AdditiveExpression	0xFE00 - ( B1 << 9 )		6209873	1		-			
ANR	6210124	PrimaryExpression	0xFE00		6209873	0					
ANR	6210125	ShiftExpression	B1 << 9		6209873	1		<<			
ANR	6210126	Identifier	B1		6209873	0					
ANR	6210127	PrimaryExpression	9		6209873	1					
ANR	6210128	ExpressionStatement	as -> CT = 7	126:16:3206:3216	6209873	4	True				
ANR	6210129	AssignmentExpression	as -> CT = 7		6209873	0		=			
ANR	6210130	PtrMemberAccess	as -> CT		6209873	0					
ANR	6210131	Identifier	as		6209873	0					
ANR	6210132	Identifier	CT		6209873	1					
ANR	6210133	PrimaryExpression	7		6209873	1					
ANR	6210134	ElseStatement	else		6209873	0					
ANR	6210135	CompoundStatement		67:11:1755:1755	6209873	0					
ANR	6210136	ExpressionStatement	"fprintf ( stderr , ""read %02x\\n"" , B )"	131:8:3288:3321	6209873	0	True				
ANR	6210137	CallExpression	"fprintf ( stderr , ""read %02x\\n"" , B )"		6209873	0					
ANR	6210138	Callee	fprintf		6209873	0					
ANR	6210139	Identifier	fprintf		6209873	0					
ANR	6210140	ArgumentList	stderr		6209873	1					
ANR	6210141	Argument	stderr		6209873	0					
ANR	6210142	Identifier	stderr		6209873	0					
ANR	6210143	Argument	"""read %02x\\n"""		6209873	1					
ANR	6210144	PrimaryExpression	"""read %02x\\n"""		6209873	0					
ANR	6210145	Argument	B		6209873	2					
ANR	6210146	Identifier	B		6209873	0					
ANR	6210147	ExpressionStatement	as -> CT = 8	133:8:3338:3348	6209873	1	True				
ANR	6210148	AssignmentExpression	as -> CT = 8		6209873	0		=			
ANR	6210149	PtrMemberAccess	as -> CT		6209873	0					
ANR	6210150	Identifier	as		6209873	0					
ANR	6210151	Identifier	CT		6209873	1					
ANR	6210152	PrimaryExpression	8		6209873	1					
ANR	6210153	ExpressionStatement	as -> next_word <<= 8	134:8:3358:3377	6209873	2	True				
ANR	6210154	AssignmentExpression	as -> next_word <<= 8		6209873	0		<<=			
ANR	6210155	PtrMemberAccess	as -> next_word		6209873	0					
ANR	6210156	Identifier	as		6209873	0					
ANR	6210157	Identifier	next_word		6209873	1					
ANR	6210158	PrimaryExpression	8		6209873	1					
ANR	6210159	ExpressionStatement	as -> next_word_bytes --	135:8:3387:3408	6209873	3	True				
ANR	6210160	PostIncDecOperationExpression	as -> next_word_bytes --		6209873	0					
ANR	6210161	PtrMemberAccess	as -> next_word_bytes		6209873	0					
ANR	6210162	Identifier	as		6209873	0					
ANR	6210163	Identifier	next_word_bytes		6209873	1					
ANR	6210164	IncDec	--		6209873	1					
ANR	6210165	IfStatement	if ( as -> next_word_bytes == 0 )		6209873	4					
ANR	6210166	Condition	as -> next_word_bytes == 0	136:12:3422:3445	6209873	0	True				
ANR	6210167	EqualityExpression	as -> next_word_bytes == 0		6209873	0		==			
ANR	6210168	PtrMemberAccess	as -> next_word_bytes		6209873	0					
ANR	6210169	Identifier	as		6209873	0					
ANR	6210170	Identifier	next_word_bytes		6209873	1					
ANR	6210171	PrimaryExpression	0		6209873	1					
ANR	6210172	CompoundStatement		75:12:1964:1992	6209873	1					
ANR	6210173	IdentifierDeclStatement	Jbig2WordStream * ws = as -> ws ;	137:12:3462:3490	6209873	0	True				
ANR	6210174	IdentifierDecl	* ws = as -> ws		6209873	0					
ANR	6210175	IdentifierDeclType	Jbig2WordStream *		6209873	0					
ANR	6210176	Identifier	ws		6209873	1					
ANR	6210177	AssignmentExpression	* ws = as -> ws		6209873	2		=			
ANR	6210178	Identifier	ws		6209873	0					
ANR	6210179	PtrMemberAccess	as -> ws		6209873	1					
ANR	6210180	Identifier	as		6209873	0					
ANR	6210181	Identifier	ws		6209873	1					
ANR	6210182	ExpressionStatement	"new_bytes = ws -> get_next_word ( ws , as -> offset , & as -> next_word )"	139:12:3505:3566	6209873	1	True				
ANR	6210183	AssignmentExpression	"new_bytes = ws -> get_next_word ( ws , as -> offset , & as -> next_word )"		6209873	0		=			
ANR	6210184	Identifier	new_bytes		6209873	0					
ANR	6210185	CallExpression	"ws -> get_next_word ( ws , as -> offset , & as -> next_word )"		6209873	1					
ANR	6210186	Callee	ws -> get_next_word		6209873	0					
ANR	6210187	PtrMemberAccess	ws -> get_next_word		6209873	0					
ANR	6210188	Identifier	ws		6209873	0					
ANR	6210189	Identifier	get_next_word		6209873	1					
ANR	6210190	ArgumentList	ws		6209873	1					
ANR	6210191	Argument	ws		6209873	0					
ANR	6210192	Identifier	ws		6209873	0					
ANR	6210193	Argument	as -> offset		6209873	1					
ANR	6210194	PtrMemberAccess	as -> offset		6209873	0					
ANR	6210195	Identifier	as		6209873	0					
ANR	6210196	Identifier	offset		6209873	1					
ANR	6210197	Argument	& as -> next_word		6209873	2					
ANR	6210198	UnaryOperationExpression	& as -> next_word		6209873	0					
ANR	6210199	UnaryOperator	&		6209873	0					
ANR	6210200	PtrMemberAccess	as -> next_word		6209873	1					
ANR	6210201	Identifier	as		6209873	0					
ANR	6210202	Identifier	next_word		6209873	1					
ANR	6210203	ExpressionStatement	as -> offset += new_bytes	140:12:3580:3603	6209873	2	True				
ANR	6210204	AssignmentExpression	as -> offset += new_bytes		6209873	0		+=			
ANR	6210205	PtrMemberAccess	as -> offset		6209873	0					
ANR	6210206	Identifier	as		6209873	0					
ANR	6210207	Identifier	offset		6209873	1					
ANR	6210208	Identifier	new_bytes		6209873	1					
ANR	6210209	ExpressionStatement	as -> next_word_bytes = new_bytes	141:12:3617:3648	6209873	3	True				
ANR	6210210	AssignmentExpression	as -> next_word_bytes = new_bytes		6209873	0		=			
ANR	6210211	PtrMemberAccess	as -> next_word_bytes		6209873	0					
ANR	6210212	Identifier	as		6209873	0					
ANR	6210213	Identifier	next_word_bytes		6209873	1					
ANR	6210214	Identifier	new_bytes		6209873	1					
ANR	6210215	ExpressionStatement	B = ( byte ) ( ( as -> next_word >> 24 ) & 0xFF )	143:8:3668:3708	6209873	5	True				
ANR	6210216	AssignmentExpression	B = ( byte ) ( ( as -> next_word >> 24 ) & 0xFF )		6209873	0		=			
ANR	6210217	Identifier	B		6209873	0					
ANR	6210218	CastExpression	( byte ) ( ( as -> next_word >> 24 ) & 0xFF )		6209873	1					
ANR	6210219	CastTarget	byte		6209873	0					
ANR	6210220	BitAndExpression	( as -> next_word >> 24 ) & 0xFF		6209873	1		&			
ANR	6210221	ShiftExpression	as -> next_word >> 24		6209873	0		>>			
ANR	6210222	PtrMemberAccess	as -> next_word		6209873	0					
ANR	6210223	Identifier	as		6209873	0					
ANR	6210224	Identifier	next_word		6209873	1					
ANR	6210225	PrimaryExpression	24		6209873	1					
ANR	6210226	PrimaryExpression	0xFF		6209873	1					
ANR	6210227	ExpressionStatement	as -> C += 0xFF00 - ( B << 8 )	145:8:3745:3771	6209873	6	True				
ANR	6210228	AssignmentExpression	as -> C += 0xFF00 - ( B << 8 )		6209873	0		+=			
ANR	6210229	PtrMemberAccess	as -> C		6209873	0					
ANR	6210230	Identifier	as		6209873	0					
ANR	6210231	Identifier	C		6209873	1					
ANR	6210232	AdditiveExpression	0xFF00 - ( B << 8 )		6209873	1		-			
ANR	6210233	PrimaryExpression	0xFF00		6209873	0					
ANR	6210234	ShiftExpression	B << 8		6209873	1		<<			
ANR	6210235	Identifier	B		6209873	0					
ANR	6210236	PrimaryExpression	8		6209873	1					
ANR	6210237	ReturnType	static void		6209873	1					
ANR	6210238	Identifier	jbig2_arith_bytein		6209873	2					
ANR	6210239	ParameterList	Jbig2ArithState * as		6209873	3					
ANR	6210240	Parameter	Jbig2ArithState * as	62:19:1476:1494	6209873	0	True				
ANR	6210241	ParameterType	Jbig2ArithState *		6209873	0					
ANR	6210242	Identifier	as		6209873	1					
ANR	6210243	CFGEntryNode	ENTRY		6209873		True				
ANR	6210244	CFGExitNode	EXIT		6209873		True				
ANR	6210245	Symbol	* ws		6209873						
ANR	6210246	Symbol	B		6209873						
ANR	6210247	Symbol	as -> CT		6209873						
ANR	6210248	Symbol	as -> next_word_bytes		6209873						
ANR	6210249	Symbol	& as -> next_word		6209873						
ANR	6210250	Symbol	as -> next_word		6209873						
ANR	6210251	Symbol	stderr		6209873						
ANR	6210252	Symbol	as -> ws		6209873						
ANR	6210253	Symbol	B1		6209873						
ANR	6210254	Symbol	as -> C		6209873						
ANR	6210255	Symbol	as		6209873						
ANR	6210256	Symbol	new_bytes		6209873						
ANR	6210257	Symbol	ws -> get_next_word		6209873						
ANR	6210258	Symbol	* as		6209873						
ANR	6210259	Symbol	ws		6209873						
ANR	6210260	Symbol	as -> offset		6209873						
ANR	6210261	Function	jbig2_arith_new	156:0:3987:4757							
ANR	6210262	FunctionDef	"jbig2_arith_new (Jbig2Ctx * ctx , Jbig2WordStream * ws)"		6210261	0					
ANR	6210263	CompoundStatement		158:0:4057:4757	6210261	0					
ANR	6210264	IdentifierDeclStatement	Jbig2ArithState * result ;	159:4:4063:4086	6210261	0	True				
ANR	6210265	IdentifierDecl	* result		6210261	0					
ANR	6210266	IdentifierDeclType	Jbig2ArithState *		6210261	0					
ANR	6210267	Identifier	result		6210261	1					
ANR	6210268	IdentifierDeclStatement	int new_bytes ;	160:4:4092:4105	6210261	1	True				
ANR	6210269	IdentifierDecl	new_bytes		6210261	0					
ANR	6210270	IdentifierDeclType	int		6210261	0					
ANR	6210271	Identifier	new_bytes		6210261	1					
ANR	6210272	ExpressionStatement	"result = jbig2_new ( ctx , Jbig2ArithState , 1 )"	162:4:4112:4155	6210261	2	True				
ANR	6210273	AssignmentExpression	"result = jbig2_new ( ctx , Jbig2ArithState , 1 )"		6210261	0		=			
ANR	6210274	Identifier	result		6210261	0					
ANR	6210275	CallExpression	"jbig2_new ( ctx , Jbig2ArithState , 1 )"		6210261	1					
ANR	6210276	Callee	jbig2_new		6210261	0					
ANR	6210277	Identifier	jbig2_new		6210261	0					
ANR	6210278	ArgumentList	ctx		6210261	1					
ANR	6210279	Argument	ctx		6210261	0					
ANR	6210280	Identifier	ctx		6210261	0					
ANR	6210281	Argument	Jbig2ArithState		6210261	1					
ANR	6210282	Identifier	Jbig2ArithState		6210261	0					
ANR	6210283	Argument	1		6210261	2					
ANR	6210284	PrimaryExpression	1		6210261	0					
ANR	6210285	IfStatement	if ( result == NULL )		6210261	3					
ANR	6210286	Condition	result == NULL	163:8:4165:4178	6210261	0	True				
ANR	6210287	EqualityExpression	result == NULL		6210261	0		==			
ANR	6210288	Identifier	result		6210261	0					
ANR	6210289	Identifier	NULL		6210261	1					
ANR	6210290	CompoundStatement		6:24:123:123	6210261	1					
ANR	6210291	ExpressionStatement	"jbig2_error ( ctx , JBIG2_SEVERITY_FATAL , - 1 , ""failed to allocate arithmetic coding state"" )"	164:8:4191:4279	6210261	0	True				
ANR	6210292	CallExpression	"jbig2_error ( ctx , JBIG2_SEVERITY_FATAL , - 1 , ""failed to allocate arithmetic coding state"" )"		6210261	0					
ANR	6210293	Callee	jbig2_error		6210261	0					
ANR	6210294	Identifier	jbig2_error		6210261	0					
ANR	6210295	ArgumentList	ctx		6210261	1					
ANR	6210296	Argument	ctx		6210261	0					
ANR	6210297	Identifier	ctx		6210261	0					
ANR	6210298	Argument	JBIG2_SEVERITY_FATAL		6210261	1					
ANR	6210299	Identifier	JBIG2_SEVERITY_FATAL		6210261	0					
ANR	6210300	Argument	- 1		6210261	2					
ANR	6210301	UnaryOperationExpression	- 1		6210261	0					
ANR	6210302	UnaryOperator	-		6210261	0					
ANR	6210303	PrimaryExpression	1		6210261	1					
ANR	6210304	Argument	"""failed to allocate arithmetic coding state"""		6210261	3					
ANR	6210305	PrimaryExpression	"""failed to allocate arithmetic coding state"""		6210261	0					
ANR	6210306	ReturnStatement	return NULL ;	165:8:4289:4300	6210261	1	True				
ANR	6210307	Identifier	NULL		6210261	0					
ANR	6210308	ExpressionStatement	result -> ws = ws	168:4:4313:4328	6210261	4	True				
ANR	6210309	AssignmentExpression	result -> ws = ws		6210261	0		=			
ANR	6210310	PtrMemberAccess	result -> ws		6210261	0					
ANR	6210311	Identifier	result		6210261	0					
ANR	6210312	Identifier	ws		6210261	1					
ANR	6210313	Identifier	ws		6210261	1					
ANR	6210314	ExpressionStatement	"new_bytes = ws -> get_next_word ( ws , 0 , & result -> next_word )"	170:4:4335:4391	6210261	5	True				
ANR	6210315	AssignmentExpression	"new_bytes = ws -> get_next_word ( ws , 0 , & result -> next_word )"		6210261	0		=			
ANR	6210316	Identifier	new_bytes		6210261	0					
ANR	6210317	CallExpression	"ws -> get_next_word ( ws , 0 , & result -> next_word )"		6210261	1					
ANR	6210318	Callee	ws -> get_next_word		6210261	0					
ANR	6210319	PtrMemberAccess	ws -> get_next_word		6210261	0					
ANR	6210320	Identifier	ws		6210261	0					
ANR	6210321	Identifier	get_next_word		6210261	1					
ANR	6210322	ArgumentList	ws		6210261	1					
ANR	6210323	Argument	ws		6210261	0					
ANR	6210324	Identifier	ws		6210261	0					
ANR	6210325	Argument	0		6210261	1					
ANR	6210326	PrimaryExpression	0		6210261	0					
ANR	6210327	Argument	& result -> next_word		6210261	2					
ANR	6210328	UnaryOperationExpression	& result -> next_word		6210261	0					
ANR	6210329	UnaryOperator	&		6210261	0					
ANR	6210330	PtrMemberAccess	result -> next_word		6210261	1					
ANR	6210331	Identifier	result		6210261	0					
ANR	6210332	Identifier	next_word		6210261	1					
ANR	6210333	ExpressionStatement	result -> next_word_bytes = new_bytes	171:4:4397:4432	6210261	6	True				
ANR	6210334	AssignmentExpression	result -> next_word_bytes = new_bytes		6210261	0		=			
ANR	6210335	PtrMemberAccess	result -> next_word_bytes		6210261	0					
ANR	6210336	Identifier	result		6210261	0					
ANR	6210337	Identifier	next_word_bytes		6210261	1					
ANR	6210338	Identifier	new_bytes		6210261	1					
ANR	6210339	ExpressionStatement	result -> offset = new_bytes	172:4:4438:4464	6210261	7	True				
ANR	6210340	AssignmentExpression	result -> offset = new_bytes		6210261	0		=			
ANR	6210341	PtrMemberAccess	result -> offset		6210261	0					
ANR	6210342	Identifier	result		6210261	0					
ANR	6210343	Identifier	offset		6210261	1					
ANR	6210344	Identifier	new_bytes		6210261	1					
ANR	6210345	ExpressionStatement	result -> C = ( ~ ( result -> next_word >> 8 ) ) & 0xFF0000	176:4:4520:4570	6210261	8	True				
ANR	6210346	AssignmentExpression	result -> C = ( ~ ( result -> next_word >> 8 ) ) & 0xFF0000		6210261	0		=			
ANR	6210347	PtrMemberAccess	result -> C		6210261	0					
ANR	6210348	Identifier	result		6210261	0					
ANR	6210349	Identifier	C		6210261	1					
ANR	6210350	BitAndExpression	( ~ ( result -> next_word >> 8 ) ) & 0xFF0000		6210261	1		&			
ANR	6210351	UnaryOperationExpression	~ ( result -> next_word >> 8 )		6210261	0					
ANR	6210352	UnaryOperator	~		6210261	0					
ANR	6210353	ShiftExpression	result -> next_word >> 8		6210261	1		>>			
ANR	6210354	PtrMemberAccess	result -> next_word		6210261	0					
ANR	6210355	Identifier	result		6210261	0					
ANR	6210356	Identifier	next_word		6210261	1					
ANR	6210357	PrimaryExpression	8		6210261	1					
ANR	6210358	PrimaryExpression	0xFF0000		6210261	1					
ANR	6210359	ExpressionStatement	jbig2_arith_bytein ( result )	181:4:4643:4669	6210261	9	True				
ANR	6210360	CallExpression	jbig2_arith_bytein ( result )		6210261	0					
ANR	6210361	Callee	jbig2_arith_bytein		6210261	0					
ANR	6210362	Identifier	jbig2_arith_bytein		6210261	0					
ANR	6210363	ArgumentList	result		6210261	1					
ANR	6210364	Argument	result		6210261	0					
ANR	6210365	Identifier	result		6210261	0					
ANR	6210366	ExpressionStatement	result -> C <<= 7	182:4:4675:4690	6210261	10	True				
ANR	6210367	AssignmentExpression	result -> C <<= 7		6210261	0		<<=			
ANR	6210368	PtrMemberAccess	result -> C		6210261	0					
ANR	6210369	Identifier	result		6210261	0					
ANR	6210370	Identifier	C		6210261	1					
ANR	6210371	PrimaryExpression	7		6210261	1					
ANR	6210372	ExpressionStatement	result -> CT -= 7	183:4:4696:4711	6210261	11	True				
ANR	6210373	AssignmentExpression	result -> CT -= 7		6210261	0		-=			
ANR	6210374	PtrMemberAccess	result -> CT		6210261	0					
ANR	6210375	Identifier	result		6210261	0					
ANR	6210376	Identifier	CT		6210261	1					
ANR	6210377	PrimaryExpression	7		6210261	1					
ANR	6210378	ExpressionStatement	result -> A = 0x8000	184:4:4717:4735	6210261	12	True				
ANR	6210379	AssignmentExpression	result -> A = 0x8000		6210261	0		=			
ANR	6210380	PtrMemberAccess	result -> A		6210261	0					
ANR	6210381	Identifier	result		6210261	0					
ANR	6210382	Identifier	A		6210261	1					
ANR	6210383	PrimaryExpression	0x8000		6210261	1					
ANR	6210384	ReturnStatement	return result ;	186:4:4742:4755	6210261	13	True				
ANR	6210385	Identifier	result		6210261	0					
ANR	6210386	ReturnType	Jbig2ArithState *		6210261	1					
ANR	6210387	Identifier	jbig2_arith_new		6210261	2					
ANR	6210388	ParameterList	"Jbig2Ctx * ctx , Jbig2WordStream * ws"		6210261	3					
ANR	6210389	Parameter	Jbig2Ctx * ctx	157:16:4021:4033	6210261	0	True				
ANR	6210390	ParameterType	Jbig2Ctx *		6210261	0					
ANR	6210391	Identifier	ctx		6210261	1					
ANR	6210392	Parameter	Jbig2WordStream * ws	157:31:4036:4054	6210261	1	True				
ANR	6210393	ParameterType	Jbig2WordStream *		6210261	0					
ANR	6210394	Identifier	ws		6210261	1					
ANR	6210395	CFGEntryNode	ENTRY		6210261		True				
ANR	6210396	CFGExitNode	EXIT		6210261		True				
ANR	6210397	Symbol	* ws		6210261						
ANR	6210398	Symbol	Jbig2ArithState		6210261						
ANR	6210399	Symbol	NULL		6210261						
ANR	6210400	Symbol	result -> CT		6210261						
ANR	6210401	Symbol	ctx		6210261						
ANR	6210402	Symbol	result -> offset		6210261						
ANR	6210403	Symbol	JBIG2_SEVERITY_FATAL		6210261						
ANR	6210404	Symbol	result		6210261						
ANR	6210405	Symbol	& result -> next_word		6210261						
ANR	6210406	Symbol	result -> A		6210261						
ANR	6210407	Symbol	new_bytes		6210261						
ANR	6210408	Symbol	result -> C		6210261						
ANR	6210409	Symbol	result -> next_word_bytes		6210261						
ANR	6210410	Symbol	jbig2_new		6210261						
ANR	6210411	Symbol	* result		6210261						
ANR	6210412	Symbol	ws -> get_next_word		6210261						
ANR	6210413	Symbol	result -> ws		6210261						
ANR	6210414	Symbol	result -> next_word		6210261						
ANR	6210415	Symbol	ws		6210261						
ANR	6210416	ClassDef	<unnamed>	192:8:4853:5037							
ANR	6210417	DeclStmt									
ANR	6210418	Decl							unsigned short	unsigned short	Qe
ANR	6210419	DeclStmt									
ANR	6210420	Decl							byte	byte	mps_xor
ANR	6210421	DeclStmt									
ANR	6210422	Decl							byte	byte	lps_xor
ANR	6210423	DeclStmt									
ANR	6210424	Decl									Jbig2ArithQe
ANR	6210425	DeclStmt									
ANR	6210426	Decl							const Jbig2ArithQe	const Jbig2ArithQe [ MAX_QE_ARRAY_SIZE ]	jbig2_arith_Qe
ANR	6210427	Function	jbig2_arith_renormd	248:0:6593:6837							
ANR	6210428	FunctionDef	jbig2_arith_renormd (Jbig2ArithState * as)		6210427	0					
ANR	6210429	CompoundStatement		250:0:6646:6837	6210427	0					
ANR	6210430	DoStatement	do		6210427	0					
ANR	6210431	CompoundStatement		3:7:30:30	6210427	0					
ANR	6210432	IfStatement	if ( as -> CT == 0 )		6210427	0					
ANR	6210433	Condition	as -> CT == 0	253:12:6691:6701	6210427	0	True				
ANR	6210434	EqualityExpression	as -> CT == 0		6210427	0		==			
ANR	6210435	PtrMemberAccess	as -> CT		6210427	0					
ANR	6210436	Identifier	as		6210427	0					
ANR	6210437	Identifier	CT		6210427	1					
ANR	6210438	PrimaryExpression	0		6210427	1					
ANR	6210439	ExpressionStatement	jbig2_arith_bytein ( as )	254:12:6716:6738	6210427	1	True				
ANR	6210440	CallExpression	jbig2_arith_bytein ( as )		6210427	0					
ANR	6210441	Callee	jbig2_arith_bytein		6210427	0					
ANR	6210442	Identifier	jbig2_arith_bytein		6210427	0					
ANR	6210443	ArgumentList	as		6210427	1					
ANR	6210444	Argument	as		6210427	0					
ANR	6210445	Identifier	as		6210427	0					
ANR	6210446	ExpressionStatement	as -> A <<= 1	255:8:6748:6759	6210427	1	True				
ANR	6210447	AssignmentExpression	as -> A <<= 1		6210427	0		<<=			
ANR	6210448	PtrMemberAccess	as -> A		6210427	0					
ANR	6210449	Identifier	as		6210427	0					
ANR	6210450	Identifier	A		6210427	1					
ANR	6210451	PrimaryExpression	1		6210427	1					
ANR	6210452	ExpressionStatement	as -> C <<= 1	256:8:6769:6780	6210427	2	True				
ANR	6210453	AssignmentExpression	as -> C <<= 1		6210427	0		<<=			
ANR	6210454	PtrMemberAccess	as -> C		6210427	0					
ANR	6210455	Identifier	as		6210427	0					
ANR	6210456	Identifier	C		6210427	1					
ANR	6210457	PrimaryExpression	1		6210427	1					
ANR	6210458	ExpressionStatement	as -> CT --	257:8:6790:6798	6210427	3	True				
ANR	6210459	PostIncDecOperationExpression	as -> CT --		6210427	0					
ANR	6210460	PtrMemberAccess	as -> CT		6210427	0					
ANR	6210461	Identifier	as		6210427	0					
ANR	6210462	Identifier	CT		6210427	1					
ANR	6210463	IncDec	--		6210427	1					
ANR	6210464	Condition	( as -> A & 0x8000 ) == 0	258:13:6813:6833	6210427	1	True				
ANR	6210465	EqualityExpression	( as -> A & 0x8000 ) == 0		6210427	0		==			
ANR	6210466	BitAndExpression	as -> A & 0x8000		6210427	0		&			
ANR	6210467	PtrMemberAccess	as -> A		6210427	0					
ANR	6210468	Identifier	as		6210427	0					
ANR	6210469	Identifier	A		6210427	1					
ANR	6210470	PrimaryExpression	0x8000		6210427	1					
ANR	6210471	PrimaryExpression	0		6210427	1					
ANR	6210472	ReturnType	static void		6210427	1					
ANR	6210473	Identifier	jbig2_arith_renormd		6210427	2					
ANR	6210474	ParameterList	Jbig2ArithState * as		6210427	3					
ANR	6210475	Parameter	Jbig2ArithState * as	249:20:6625:6643	6210427	0	True				
ANR	6210476	ParameterType	Jbig2ArithState *		6210427	0					
ANR	6210477	Identifier	as		6210427	1					
ANR	6210478	CFGEntryNode	ENTRY		6210427		True				
ANR	6210479	CFGExitNode	EXIT		6210427		True				
ANR	6210480	Symbol	as -> C		6210427						
ANR	6210481	Symbol	as		6210427						
ANR	6210482	Symbol	as -> A		6210427						
ANR	6210483	Symbol	as -> CT		6210427						
ANR	6210484	Symbol	* as		6210427						
ANR	6210485	Function	jbig2_arith_decode	261:0:6840:8304							
ANR	6210486	FunctionDef	"jbig2_arith_decode (Jbig2ArithState * as , Jbig2ArithCx * pcx , int * code)"		6210485	0					
ANR	6210487	CompoundStatement		263:0:6915:8304	6210485	0					
ANR	6210488	IdentifierDeclStatement	Jbig2ArithCx cx = * pcx ;	264:4:6921:6943	6210485	0	True				
ANR	6210489	IdentifierDecl	cx = * pcx		6210485	0					
ANR	6210490	IdentifierDeclType	Jbig2ArithCx		6210485	0					
ANR	6210491	Identifier	cx		6210485	1					
ANR	6210492	AssignmentExpression	cx = * pcx		6210485	2		=			
ANR	6210493	Identifier	cx		6210485	0					
ANR	6210494	UnaryOperationExpression	* pcx		6210485	1					
ANR	6210495	UnaryOperator	*		6210485	0					
ANR	6210496	Identifier	pcx		6210485	1					
ANR	6210497	IdentifierDeclStatement	const Jbig2ArithQe * pqe ;	265:4:6949:6972	6210485	1	True				
ANR	6210498	IdentifierDecl	* pqe		6210485	0					
ANR	6210499	IdentifierDeclType	const Jbig2ArithQe *		6210485	0					
ANR	6210500	Identifier	pqe		6210485	1					
ANR	6210501	IdentifierDeclStatement	unsigned int index = cx & 0x7f ;	266:4:6978:7008	6210485	2	True				
ANR	6210502	IdentifierDecl	index = cx & 0x7f		6210485	0					
ANR	6210503	IdentifierDeclType	unsigned int		6210485	0					
ANR	6210504	Identifier	index		6210485	1					
ANR	6210505	AssignmentExpression	index = cx & 0x7f		6210485	2		=			
ANR	6210506	Identifier	index		6210485	0					
ANR	6210507	BitAndExpression	cx & 0x7f		6210485	1		&			
ANR	6210508	Identifier	cx		6210485	0					
ANR	6210509	PrimaryExpression	0x7f		6210485	1					
ANR	6210510	IdentifierDeclStatement	bool D ;	267:4:7014:7020	6210485	3	True				
ANR	6210511	IdentifierDecl	D		6210485	0					
ANR	6210512	IdentifierDeclType	bool		6210485	0					
ANR	6210513	Identifier	D		6210485	1					
ANR	6210514	IfStatement	if ( index >= MAX_QE_ARRAY_SIZE )		6210485	4					
ANR	6210515	Condition	index >= MAX_QE_ARRAY_SIZE	269:8:7031:7056	6210485	0	True				
ANR	6210516	RelationalExpression	index >= MAX_QE_ARRAY_SIZE		6210485	0		>=			
ANR	6210517	Identifier	index		6210485	0					
ANR	6210518	Identifier	MAX_QE_ARRAY_SIZE		6210485	1					
ANR	6210519	CompoundStatement		7:36:143:143	6210485	1					
ANR	6210520	ExpressionStatement	* code = - 1	270:8:7069:7079	6210485	0	True				
ANR	6210521	AssignmentExpression	* code = - 1		6210485	0		=			
ANR	6210522	UnaryOperationExpression	* code		6210485	0					
ANR	6210523	UnaryOperator	*		6210485	0					
ANR	6210524	Identifier	code		6210485	1					
ANR	6210525	UnaryOperationExpression	- 1		6210485	1					
ANR	6210526	UnaryOperator	-		6210485	0					
ANR	6210527	PrimaryExpression	1		6210485	1					
ANR	6210528	ReturnStatement	return 0 ;	271:8:7089:7097	6210485	1	True				
ANR	6210529	PrimaryExpression	0		6210485	0					
ANR	6210530	ElseStatement	else		6210485	0					
ANR	6210531	CompoundStatement		10:11:194:194	6210485	0					
ANR	6210532	ExpressionStatement	pqe = & jbig2_arith_Qe [ index ]	273:8:7120:7148	6210485	0	True				
ANR	6210533	AssignmentExpression	pqe = & jbig2_arith_Qe [ index ]		6210485	0		=			
ANR	6210534	Identifier	pqe		6210485	0					
ANR	6210535	UnaryOperationExpression	& jbig2_arith_Qe [ index ]		6210485	1					
ANR	6210536	UnaryOperator	&		6210485	0					
ANR	6210537	ArrayIndexing	jbig2_arith_Qe [ index ]		6210485	1					
ANR	6210538	Identifier	jbig2_arith_Qe		6210485	0					
ANR	6210539	Identifier	index		6210485	1					
ANR	6210540	ExpressionStatement	as -> A -= pqe -> Qe	277:4:7183:7199	6210485	5	True				
ANR	6210541	AssignmentExpression	as -> A -= pqe -> Qe		6210485	0		-=			
ANR	6210542	PtrMemberAccess	as -> A		6210485	0					
ANR	6210543	Identifier	as		6210485	0					
ANR	6210544	Identifier	A		6210485	1					
ANR	6210545	PtrMemberAccess	pqe -> Qe		6210485	1					
ANR	6210546	Identifier	pqe		6210485	0					
ANR	6210547	Identifier	Qe		6210485	1					
ANR	6210548	Statement	if	278:4:7205:7206	6210485	6	True				
ANR	6210549	Statement	(	278:7:7208:7208	6210485	7	True				
ANR	6210550	Statement	(	281:8:7308:7308	6210485	8	True				
ANR	6210551	Statement	as	281:9:7309:7310	6210485	9	True				
ANR	6210552	Statement	->	281:11:7311:7312	6210485	10	True				
ANR	6210553	Statement	C	281:13:7313:7313	6210485	11	True				
ANR	6210554	Statement	>>	281:15:7315:7316	6210485	12	True				
ANR	6210555	Statement	16	281:18:7318:7319	6210485	13	True				
ANR	6210556	Statement	)	281:20:7320:7320	6210485	14	True				
ANR	6210557	Statement	<	281:22:7322:7322	6210485	15	True				
ANR	6210558	Statement	as	281:24:7324:7325	6210485	16	True				
ANR	6210559	Statement	->	281:26:7326:7327	6210485	17	True				
ANR	6210560	Statement	A	281:28:7328:7328	6210485	18	True				
ANR	6210561	Statement	)	285:4:7382:7382	6210485	19	True				
ANR	6210562	CompoundStatement		23:6:468:468	6210485	20					
ANR	6210563	ExpressionStatement	as -> C -= pqe -> Qe << 16	287:8:7422:7444	6210485	0	True				
ANR	6210564	AssignmentExpression	as -> C -= pqe -> Qe << 16		6210485	0		-=			
ANR	6210565	PtrMemberAccess	as -> C		6210485	0					
ANR	6210566	Identifier	as		6210485	0					
ANR	6210567	Identifier	C		6210485	1					
ANR	6210568	ShiftExpression	pqe -> Qe << 16		6210485	1		<<			
ANR	6210569	PtrMemberAccess	pqe -> Qe		6210485	0					
ANR	6210570	Identifier	pqe		6210485	0					
ANR	6210571	Identifier	Qe		6210485	1					
ANR	6210572	PrimaryExpression	16		6210485	1					
ANR	6210573	IfStatement	if ( ( as -> A & 0x8000 ) == 0 )		6210485	1					
ANR	6210574	Condition	( as -> A & 0x8000 ) == 0	289:12:7465:7485	6210485	0	True				
ANR	6210575	EqualityExpression	( as -> A & 0x8000 ) == 0		6210485	0		==			
ANR	6210576	BitAndExpression	as -> A & 0x8000		6210485	0		&			
ANR	6210577	PtrMemberAccess	as -> A		6210485	0					
ANR	6210578	Identifier	as		6210485	0					
ANR	6210579	Identifier	A		6210485	1					
ANR	6210580	PrimaryExpression	0x8000		6210485	1					
ANR	6210581	PrimaryExpression	0		6210485	1					
ANR	6210582	CompoundStatement		27:35:572:572	6210485	1					
ANR	6210583	IfStatement	if ( as -> A < pqe -> Qe )		6210485	0					
ANR	6210584	Condition	as -> A < pqe -> Qe	291:16:7550:7564	6210485	0	True				
ANR	6210585	RelationalExpression	as -> A < pqe -> Qe		6210485	0		<			
ANR	6210586	PtrMemberAccess	as -> A		6210485	0					
ANR	6210587	Identifier	as		6210485	0					
ANR	6210588	Identifier	A		6210485	1					
ANR	6210589	PtrMemberAccess	pqe -> Qe		6210485	1					
ANR	6210590	Identifier	pqe		6210485	0					
ANR	6210591	Identifier	Qe		6210485	1					
ANR	6210592	CompoundStatement		29:33:651:651	6210485	1					
ANR	6210593	ExpressionStatement	D = 1 - ( cx >> 7 )	292:16:7585:7602	6210485	0	True				
ANR	6210594	AssignmentExpression	D = 1 - ( cx >> 7 )		6210485	0		=			
ANR	6210595	Identifier	D		6210485	0					
ANR	6210596	AdditiveExpression	1 - ( cx >> 7 )		6210485	1		-			
ANR	6210597	PrimaryExpression	1		6210485	0					
ANR	6210598	ShiftExpression	cx >> 7		6210485	1		>>			
ANR	6210599	Identifier	cx		6210485	0					
ANR	6210600	PrimaryExpression	7		6210485	1					
ANR	6210601	ExpressionStatement	* pcx ^= pqe -> lps_xor	293:16:7620:7640	6210485	1	True				
ANR	6210602	AssignmentExpression	* pcx ^= pqe -> lps_xor		6210485	0		^=			
ANR	6210603	UnaryOperationExpression	* pcx		6210485	0					
ANR	6210604	UnaryOperator	*		6210485	0					
ANR	6210605	Identifier	pcx		6210485	1					
ANR	6210606	PtrMemberAccess	pqe -> lps_xor		6210485	1					
ANR	6210607	Identifier	pqe		6210485	0					
ANR	6210608	Identifier	lps_xor		6210485	1					
ANR	6210609	ElseStatement	else		6210485	0					
ANR	6210610	CompoundStatement		32:19:745:745	6210485	0					
ANR	6210611	ExpressionStatement	D = cx >> 7	295:16:7679:7690	6210485	0	True				
ANR	6210612	AssignmentExpression	D = cx >> 7		6210485	0		=			
ANR	6210613	Identifier	D		6210485	0					
ANR	6210614	ShiftExpression	cx >> 7		6210485	1		>>			
ANR	6210615	Identifier	cx		6210485	0					
ANR	6210616	PrimaryExpression	7		6210485	1					
ANR	6210617	ExpressionStatement	* pcx ^= pqe -> mps_xor	296:16:7708:7728	6210485	1	True				
ANR	6210618	AssignmentExpression	* pcx ^= pqe -> mps_xor		6210485	0		^=			
ANR	6210619	UnaryOperationExpression	* pcx		6210485	0					
ANR	6210620	UnaryOperator	*		6210485	0					
ANR	6210621	Identifier	pcx		6210485	1					
ANR	6210622	PtrMemberAccess	pqe -> mps_xor		6210485	1					
ANR	6210623	Identifier	pqe		6210485	0					
ANR	6210624	Identifier	mps_xor		6210485	1					
ANR	6210625	ExpressionStatement	jbig2_arith_renormd ( as )	298:12:7756:7779	6210485	1	True				
ANR	6210626	CallExpression	jbig2_arith_renormd ( as )		6210485	0					
ANR	6210627	Callee	jbig2_arith_renormd		6210485	0					
ANR	6210628	Identifier	jbig2_arith_renormd		6210485	0					
ANR	6210629	ArgumentList	as		6210485	1					
ANR	6210630	Argument	as		6210485	0					
ANR	6210631	Identifier	as		6210485	0					
ANR	6210632	ExpressionStatement	* code = 0	299:12:7793:7802	6210485	2	True				
ANR	6210633	AssignmentExpression	* code = 0		6210485	0		=			
ANR	6210634	UnaryOperationExpression	* code		6210485	0					
ANR	6210635	UnaryOperator	*		6210485	0					
ANR	6210636	Identifier	code		6210485	1					
ANR	6210637	PrimaryExpression	0		6210485	1					
ANR	6210638	ReturnStatement	return D ;	300:12:7816:7824	6210485	3	True				
ANR	6210639	Identifier	D		6210485	0					
ANR	6210640	ElseStatement	else		6210485	0					
ANR	6210641	ReturnStatement	return cx >> 7 ;	302:12:7853:7867	6210485	0	True				
ANR	6210642	ShiftExpression	cx >> 7		6210485	0		>>			
ANR	6210643	Identifier	cx		6210485	0					
ANR	6210644	PrimaryExpression	7		6210485	1					
ANR	6210645	ReturnType	bool		6210485	1					
ANR	6210646	Identifier	jbig2_arith_decode		6210485	2					
ANR	6210647	ParameterList	"Jbig2ArithState * as , Jbig2ArithCx * pcx , int * code"		6210485	3					
ANR	6210648	Parameter	Jbig2ArithState * as	262:19:6864:6882	6210485	0	True				
ANR	6210649	ParameterType	Jbig2ArithState *		6210485	0					
ANR	6210650	Identifier	as		6210485	1					
ANR	6210651	Parameter	Jbig2ArithCx * pcx	262:40:6885:6901	6210485	1	True				
ANR	6210652	ParameterType	Jbig2ArithCx *		6210485	0					
ANR	6210653	Identifier	pcx		6210485	1					
ANR	6210654	Parameter	int * code	262:59:6904:6912	6210485	2	True				
ANR	6210655	ParameterType	int *		6210485	0					
ANR	6210656	Identifier	code		6210485	1					
ANR	6210657	CFGEntryNode	ENTRY		6210485		True				
ANR	6210658	CFGExitNode	EXIT		6210485		True				
ANR	6210659	Symbol	MAX_QE_ARRAY_SIZE		6210485						
ANR	6210660	Symbol	code		6210485						
ANR	6210661	Symbol	pcx		6210485						
ANR	6210662	Symbol	D		6210485						
ANR	6210663	Symbol	pqe		6210485						
ANR	6210664	Symbol	index		6210485						
ANR	6210665	Symbol	pqe -> mps_xor		6210485						
ANR	6210666	Symbol	* pqe		6210485						
ANR	6210667	Symbol	* pcx		6210485						
ANR	6210668	Symbol	as -> C		6210485						
ANR	6210669	Symbol	as		6210485						
ANR	6210670	Symbol	as -> A		6210485						
ANR	6210671	Symbol	cx		6210485						
ANR	6210672	Symbol	pqe -> lps_xor		6210485						
ANR	6210673	Symbol	* as		6210485						
ANR	6210674	Symbol	pqe -> Qe		6210485						
ANR	6210675	Symbol	* code		6210485						
ANR	6210676	Symbol	jbig2_arith_Qe		6210485						
ANR	6210677	DeclStmt									
ANR	6210678	Decl							const byte	const byte [ ]	test_stream
ANR	6210679	Function	jbig2_arith_trace	333:0:8622:8808							
ANR	6210680	FunctionDef	"jbig2_arith_trace (Jbig2ArithState * as , Jbig2ArithCx cx)"		6210679	0					
ANR	6210681	CompoundStatement		335:0:8690:8808	6210679	0					
ANR	6210682	ExpressionStatement	"fprintf ( stderr , ""I = %2d, MPS = %d, A = %04x, CT = %2d, C = %08x\\n"" , cx & 0x7f , cx >> 7 , as -> A , as -> CT , as -> C )"	336:4:8696:8806	6210679	0	True				
ANR	6210683	CallExpression	"fprintf ( stderr , ""I = %2d, MPS = %d, A = %04x, CT = %2d, C = %08x\\n"" , cx & 0x7f , cx >> 7 , as -> A , as -> CT , as -> C )"		6210679	0					
ANR	6210684	Callee	fprintf		6210679	0					
ANR	6210685	Identifier	fprintf		6210679	0					
ANR	6210686	ArgumentList	stderr		6210679	1					
ANR	6210687	Argument	stderr		6210679	0					
ANR	6210688	Identifier	stderr		6210679	0					
ANR	6210689	Argument	"""I = %2d, MPS = %d, A = %04x, CT = %2d, C = %08x\\n"""		6210679	1					
ANR	6210690	PrimaryExpression	"""I = %2d, MPS = %d, A = %04x, CT = %2d, C = %08x\\n"""		6210679	0					
ANR	6210691	Argument	cx & 0x7f		6210679	2					
ANR	6210692	BitAndExpression	cx & 0x7f		6210679	0		&			
ANR	6210693	Identifier	cx		6210679	0					
ANR	6210694	PrimaryExpression	0x7f		6210679	1					
ANR	6210695	Argument	cx >> 7		6210679	3					
ANR	6210696	ShiftExpression	cx >> 7		6210679	0		>>			
ANR	6210697	Identifier	cx		6210679	0					
ANR	6210698	PrimaryExpression	7		6210679	1					
ANR	6210699	Argument	as -> A		6210679	4					
ANR	6210700	PtrMemberAccess	as -> A		6210679	0					
ANR	6210701	Identifier	as		6210679	0					
ANR	6210702	Identifier	A		6210679	1					
ANR	6210703	Argument	as -> CT		6210679	5					
ANR	6210704	PtrMemberAccess	as -> CT		6210679	0					
ANR	6210705	Identifier	as		6210679	0					
ANR	6210706	Identifier	CT		6210679	1					
ANR	6210707	Argument	as -> C		6210679	6					
ANR	6210708	PtrMemberAccess	as -> C		6210679	0					
ANR	6210709	Identifier	as		6210679	0					
ANR	6210710	Identifier	C		6210679	1					
ANR	6210711	ReturnType	static void		6210679	1					
ANR	6210712	Identifier	jbig2_arith_trace		6210679	2					
ANR	6210713	ParameterList	"Jbig2ArithState * as , Jbig2ArithCx cx"		6210679	3					
ANR	6210714	Parameter	Jbig2ArithState * as	334:18:8652:8670	6210679	0	True				
ANR	6210715	ParameterType	Jbig2ArithState *		6210679	0					
ANR	6210716	Identifier	as		6210679	1					
ANR	6210717	Parameter	Jbig2ArithCx cx	334:39:8673:8687	6210679	1	True				
ANR	6210718	ParameterType	Jbig2ArithCx		6210679	0					
ANR	6210719	Identifier	cx		6210679	1					
ANR	6210720	CFGEntryNode	ENTRY		6210679		True				
ANR	6210721	CFGExitNode	EXIT		6210679		True				
ANR	6210722	Symbol	as -> C		6210679						
ANR	6210723	Symbol	as		6210679						
ANR	6210724	Symbol	as -> A		6210679						
ANR	6210725	Symbol	as -> CT		6210679						
ANR	6210726	Symbol	cx		6210679						
ANR	6210727	Symbol	* as		6210679						
ANR	6210728	Symbol	stderr		6210679						
ANR	6210729	Function	test_get_word	340:0:8818:9517							
ANR	6210730	FunctionDef	"test_get_word (Jbig2WordStream * self , size_t offset , uint32_t * word)"		6210729	0					
ANR	6210731	CompoundStatement		342:0:8897:9517	6210729	0					
ANR	6210732	IdentifierDeclStatement	uint32_t val = 0 ;	343:4:8903:8919	6210729	0	True				
ANR	6210733	IdentifierDecl	val = 0		6210729	0					
ANR	6210734	IdentifierDeclType	uint32_t		6210729	0					
ANR	6210735	Identifier	val		6210729	1					
ANR	6210736	AssignmentExpression	val = 0		6210729	2		=			
ANR	6210737	Identifier	val		6210729	0					
ANR	6210738	PrimaryExpression	0		6210729	1					
ANR	6210739	IdentifierDeclStatement	int ret = 0 ;	344:4:8925:8936	6210729	1	True				
ANR	6210740	IdentifierDecl	ret = 0		6210729	0					
ANR	6210741	IdentifierDeclType	int		6210729	0					
ANR	6210742	Identifier	ret		6210729	1					
ANR	6210743	AssignmentExpression	ret = 0		6210729	2		=			
ANR	6210744	Identifier	ret		6210729	0					
ANR	6210745	PrimaryExpression	0		6210729	1					
ANR	6210746	IfStatement	if ( self == NULL || word == NULL )		6210729	2					
ANR	6210747	Condition	self == NULL || word == NULL	346:8:8947:8974	6210729	0	True				
ANR	6210748	OrExpression	self == NULL || word == NULL		6210729	0		||			
ANR	6210749	EqualityExpression	self == NULL		6210729	0		==			
ANR	6210750	Identifier	self		6210729	0					
ANR	6210751	Identifier	NULL		6210729	1					
ANR	6210752	EqualityExpression	word == NULL		6210729	1		==			
ANR	6210753	Identifier	word		6210729	0					
ANR	6210754	Identifier	NULL		6210729	1					
ANR	6210755	ReturnStatement	return - 1 ;	347:8:8985:8994	6210729	1	True				
ANR	6210756	UnaryOperationExpression	- 1		6210729	0					
ANR	6210757	UnaryOperator	-		6210729	0					
ANR	6210758	PrimaryExpression	1		6210729	1					
ANR	6210759	IfStatement	if ( offset >= sizeof ( test_stream ) )		6210729	3					
ANR	6210760	Condition	offset >= sizeof ( test_stream )	348:8:9004:9033	6210729	0	True				
ANR	6210761	RelationalExpression	offset >= sizeof ( test_stream )		6210729	0		>=			
ANR	6210762	Identifier	offset		6210729	0					
ANR	6210763	SizeofExpression	sizeof ( test_stream )		6210729	1					
ANR	6210764	Sizeof	sizeof		6210729	0					
ANR	6210765	SizeofOperand	test_stream		6210729	1					
ANR	6210766	ReturnStatement	return 0 ;	349:8:9044:9052	6210729	1	True				
ANR	6210767	PrimaryExpression	0		6210729	0					
ANR	6210768	IfStatement	if ( offset < sizeof ( test_stream ) )		6210729	4					
ANR	6210769	Condition	offset < sizeof ( test_stream )	351:8:9063:9090	6210729	0	True				
ANR	6210770	RelationalExpression	offset < sizeof ( test_stream )		6210729	0		<			
ANR	6210771	Identifier	offset		6210729	0					
ANR	6210772	SizeofExpression	sizeof ( test_stream )		6210729	1					
ANR	6210773	Sizeof	sizeof		6210729	0					
ANR	6210774	SizeofOperand	test_stream		6210729	1					
ANR	6210775	CompoundStatement		10:38:195:195	6210729	1					
ANR	6210776	ExpressionStatement	val |= test_stream [ offset ] << 24	352:8:9103:9135	6210729	0	True				
ANR	6210777	AssignmentExpression	val |= test_stream [ offset ] << 24		6210729	0		|=			
ANR	6210778	Identifier	val		6210729	0					
ANR	6210779	ShiftExpression	test_stream [ offset ] << 24		6210729	1		<<			
ANR	6210780	ArrayIndexing	test_stream [ offset ]		6210729	0					
ANR	6210781	Identifier	test_stream		6210729	0					
ANR	6210782	Identifier	offset		6210729	1					
ANR	6210783	PrimaryExpression	24		6210729	1					
ANR	6210784	ExpressionStatement	ret ++	353:8:9145:9150	6210729	1	True				
ANR	6210785	PostIncDecOperationExpression	ret ++		6210729	0					
ANR	6210786	Identifier	ret		6210729	0					
ANR	6210787	IncDec	++		6210729	1					
ANR	6210788	IfStatement	if ( offset + 1 < sizeof ( test_stream ) )		6210729	5					
ANR	6210789	Condition	offset + 1 < sizeof ( test_stream )	355:8:9166:9197	6210729	0	True				
ANR	6210790	RelationalExpression	offset + 1 < sizeof ( test_stream )		6210729	0		<			
ANR	6210791	AdditiveExpression	offset + 1		6210729	0		+			
ANR	6210792	Identifier	offset		6210729	0					
ANR	6210793	PrimaryExpression	1		6210729	1					
ANR	6210794	SizeofExpression	sizeof ( test_stream )		6210729	1					
ANR	6210795	Sizeof	sizeof		6210729	0					
ANR	6210796	SizeofOperand	test_stream		6210729	1					
ANR	6210797	CompoundStatement		14:42:302:302	6210729	1					
ANR	6210798	ExpressionStatement	val |= test_stream [ offset + 1 ] << 16	356:8:9210:9246	6210729	0	True				
ANR	6210799	AssignmentExpression	val |= test_stream [ offset + 1 ] << 16		6210729	0		|=			
ANR	6210800	Identifier	val		6210729	0					
ANR	6210801	ShiftExpression	test_stream [ offset + 1 ] << 16		6210729	1		<<			
ANR	6210802	ArrayIndexing	test_stream [ offset + 1 ]		6210729	0					
ANR	6210803	Identifier	test_stream		6210729	0					
ANR	6210804	AdditiveExpression	offset + 1		6210729	1		+			
ANR	6210805	Identifier	offset		6210729	0					
ANR	6210806	PrimaryExpression	1		6210729	1					
ANR	6210807	PrimaryExpression	16		6210729	1					
ANR	6210808	ExpressionStatement	ret ++	357:8:9256:9261	6210729	1	True				
ANR	6210809	PostIncDecOperationExpression	ret ++		6210729	0					
ANR	6210810	Identifier	ret		6210729	0					
ANR	6210811	IncDec	++		6210729	1					
ANR	6210812	IfStatement	if ( offset + 2 < sizeof ( test_stream ) )		6210729	6					
ANR	6210813	Condition	offset + 2 < sizeof ( test_stream )	359:8:9277:9308	6210729	0	True				
ANR	6210814	RelationalExpression	offset + 2 < sizeof ( test_stream )		6210729	0		<			
ANR	6210815	AdditiveExpression	offset + 2		6210729	0		+			
ANR	6210816	Identifier	offset		6210729	0					
ANR	6210817	PrimaryExpression	2		6210729	1					
ANR	6210818	SizeofExpression	sizeof ( test_stream )		6210729	1					
ANR	6210819	Sizeof	sizeof		6210729	0					
ANR	6210820	SizeofOperand	test_stream		6210729	1					
ANR	6210821	CompoundStatement		18:42:413:413	6210729	1					
ANR	6210822	ExpressionStatement	val |= test_stream [ offset + 2 ] << 8	360:8:9321:9356	6210729	0	True				
ANR	6210823	AssignmentExpression	val |= test_stream [ offset + 2 ] << 8		6210729	0		|=			
ANR	6210824	Identifier	val		6210729	0					
ANR	6210825	ShiftExpression	test_stream [ offset + 2 ] << 8		6210729	1		<<			
ANR	6210826	ArrayIndexing	test_stream [ offset + 2 ]		6210729	0					
ANR	6210827	Identifier	test_stream		6210729	0					
ANR	6210828	AdditiveExpression	offset + 2		6210729	1		+			
ANR	6210829	Identifier	offset		6210729	0					
ANR	6210830	PrimaryExpression	2		6210729	1					
ANR	6210831	PrimaryExpression	8		6210729	1					
ANR	6210832	ExpressionStatement	ret ++	361:8:9366:9371	6210729	1	True				
ANR	6210833	PostIncDecOperationExpression	ret ++		6210729	0					
ANR	6210834	Identifier	ret		6210729	0					
ANR	6210835	IncDec	++		6210729	1					
ANR	6210836	IfStatement	if ( offset + 3 < sizeof ( test_stream ) )		6210729	7					
ANR	6210837	Condition	offset + 3 < sizeof ( test_stream )	363:8:9387:9418	6210729	0	True				
ANR	6210838	RelationalExpression	offset + 3 < sizeof ( test_stream )		6210729	0		<			
ANR	6210839	AdditiveExpression	offset + 3		6210729	0		+			
ANR	6210840	Identifier	offset		6210729	0					
ANR	6210841	PrimaryExpression	3		6210729	1					
ANR	6210842	SizeofExpression	sizeof ( test_stream )		6210729	1					
ANR	6210843	Sizeof	sizeof		6210729	0					
ANR	6210844	SizeofOperand	test_stream		6210729	1					
ANR	6210845	CompoundStatement		22:42:523:523	6210729	1					
ANR	6210846	ExpressionStatement	val |= test_stream [ offset + 3 ]	364:8:9431:9461	6210729	0	True				
ANR	6210847	AssignmentExpression	val |= test_stream [ offset + 3 ]		6210729	0		|=			
ANR	6210848	Identifier	val		6210729	0					
ANR	6210849	ArrayIndexing	test_stream [ offset + 3 ]		6210729	1					
ANR	6210850	Identifier	test_stream		6210729	0					
ANR	6210851	AdditiveExpression	offset + 3		6210729	1		+			
ANR	6210852	Identifier	offset		6210729	0					
ANR	6210853	PrimaryExpression	3		6210729	1					
ANR	6210854	ExpressionStatement	ret ++	365:8:9471:9476	6210729	1	True				
ANR	6210855	PostIncDecOperationExpression	ret ++		6210729	0					
ANR	6210856	Identifier	ret		6210729	0					
ANR	6210857	IncDec	++		6210729	1					
ANR	6210858	ExpressionStatement	* word = val	367:4:9488:9499	6210729	8	True				
ANR	6210859	AssignmentExpression	* word = val		6210729	0		=			
ANR	6210860	UnaryOperationExpression	* word		6210729	0					
ANR	6210861	UnaryOperator	*		6210729	0					
ANR	6210862	Identifier	word		6210729	1					
ANR	6210863	Identifier	val		6210729	1					
ANR	6210864	ReturnStatement	return ret ;	368:4:9505:9515	6210729	9	True				
ANR	6210865	Identifier	ret		6210729	0					
ANR	6210866	ReturnType	static int		6210729	1					
ANR	6210867	Identifier	test_get_word		6210729	2					
ANR	6210868	ParameterList	"Jbig2WordStream * self , size_t offset , uint32_t * word"		6210729	3					
ANR	6210869	Parameter	Jbig2WordStream * self	341:14:8843:8863	6210729	0	True				
ANR	6210870	ParameterType	Jbig2WordStream *		6210729	0					
ANR	6210871	Identifier	self		6210729	1					
ANR	6210872	Parameter	size_t offset	341:37:8866:8878	6210729	1	True				
ANR	6210873	ParameterType	size_t		6210729	0					
ANR	6210874	Identifier	offset		6210729	1					
ANR	6210875	Parameter	uint32_t * word	341:52:8881:8894	6210729	2	True				
ANR	6210876	ParameterType	uint32_t *		6210729	0					
ANR	6210877	Identifier	word		6210729	1					
ANR	6210878	CFGEntryNode	ENTRY		6210729		True				
ANR	6210879	CFGExitNode	EXIT		6210729		True				
ANR	6210880	Symbol	val		6210729						
ANR	6210881	Symbol	ret		6210729						
ANR	6210882	Symbol	NULL		6210729						
ANR	6210883	Symbol	offset		6210729						
ANR	6210884	Symbol	* word		6210729						
ANR	6210885	Symbol	self		6210729						
ANR	6210886	Symbol	* offset		6210729						
ANR	6210887	Symbol	test_stream		6210729						
ANR	6210888	Symbol	word		6210729						
ANR	6210889	Symbol	* test_stream		6210729						
ANR	6210890	Function	main	371:0:9520:10214							
ANR	6210891	FunctionDef	"main (int argc , char * * argv)"		6210890	0					
ANR	6210892	CompoundStatement		373:0:9552:10214	6210890	0					
ANR	6210893	IdentifierDeclStatement	Jbig2Ctx * ctx ;	374:4:9558:9571	6210890	0	True				
ANR	6210894	IdentifierDecl	* ctx		6210890	0					
ANR	6210895	IdentifierDeclType	Jbig2Ctx *		6210890	0					
ANR	6210896	Identifier	ctx		6210890	1					
ANR	6210897	IdentifierDeclStatement	Jbig2WordStream ws ;	375:4:9577:9595	6210890	1	True				
ANR	6210898	IdentifierDecl	ws		6210890	0					
ANR	6210899	IdentifierDeclType	Jbig2WordStream		6210890	0					
ANR	6210900	Identifier	ws		6210890	1					
ANR	6210901	IdentifierDeclStatement	Jbig2ArithState * as ;	376:4:9601:9620	6210890	2	True				
ANR	6210902	IdentifierDecl	* as		6210890	0					
ANR	6210903	IdentifierDeclType	Jbig2ArithState *		6210890	0					
ANR	6210904	Identifier	as		6210890	1					
ANR	6210905	IdentifierDeclStatement	int i ;	377:4:9626:9631	6210890	3	True				
ANR	6210906	IdentifierDecl	i		6210890	0					
ANR	6210907	IdentifierDeclType	int		6210890	0					
ANR	6210908	Identifier	i		6210890	1					
ANR	6210909	IdentifierDeclStatement	Jbig2ArithCx cx = 0 ;	378:4:9637:9656	6210890	4	True				
ANR	6210910	IdentifierDecl	cx = 0		6210890	0					
ANR	6210911	IdentifierDeclType	Jbig2ArithCx		6210890	0					
ANR	6210912	Identifier	cx		6210890	1					
ANR	6210913	AssignmentExpression	cx = 0		6210890	2		=			
ANR	6210914	Identifier	cx		6210890	0					
ANR	6210915	PrimaryExpression	0		6210890	1					
ANR	6210916	IdentifierDeclStatement	int code ;	379:4:9662:9670	6210890	5	True				
ANR	6210917	IdentifierDecl	code		6210890	0					
ANR	6210918	IdentifierDeclType	int		6210890	0					
ANR	6210919	Identifier	code		6210890	1					
ANR	6210920	ExpressionStatement	"ctx = jbig2_ctx_new ( NULL , 0 , NULL , NULL , NULL )"	381:4:9677:9723	6210890	6	True				
ANR	6210921	AssignmentExpression	"ctx = jbig2_ctx_new ( NULL , 0 , NULL , NULL , NULL )"		6210890	0		=			
ANR	6210922	Identifier	ctx		6210890	0					
ANR	6210923	CallExpression	"jbig2_ctx_new ( NULL , 0 , NULL , NULL , NULL )"		6210890	1					
ANR	6210924	Callee	jbig2_ctx_new		6210890	0					
ANR	6210925	Identifier	jbig2_ctx_new		6210890	0					
ANR	6210926	ArgumentList	NULL		6210890	1					
ANR	6210927	Argument	NULL		6210890	0					
ANR	6210928	Identifier	NULL		6210890	0					
ANR	6210929	Argument	0		6210890	1					
ANR	6210930	PrimaryExpression	0		6210890	0					
ANR	6210931	Argument	NULL		6210890	2					
ANR	6210932	Identifier	NULL		6210890	0					
ANR	6210933	Argument	NULL		6210890	3					
ANR	6210934	Identifier	NULL		6210890	0					
ANR	6210935	Argument	NULL		6210890	4					
ANR	6210936	Identifier	NULL		6210890	0					
ANR	6210937	ExpressionStatement	ws . get_next_word = test_get_word	383:4:9730:9762	6210890	7	True				
ANR	6210938	AssignmentExpression	ws . get_next_word = test_get_word		6210890	0		=			
ANR	6210939	MemberAccess	ws . get_next_word		6210890	0					
ANR	6210940	Identifier	ws		6210890	0					
ANR	6210941	Identifier	get_next_word		6210890	1					
ANR	6210942	Identifier	test_get_word		6210890	1					
ANR	6210943	ExpressionStatement	"as = jbig2_arith_new ( ctx , & ws )"	384:4:9768:9798	6210890	8	True				
ANR	6210944	AssignmentExpression	"as = jbig2_arith_new ( ctx , & ws )"		6210890	0		=			
ANR	6210945	Identifier	as		6210890	0					
ANR	6210946	CallExpression	"jbig2_arith_new ( ctx , & ws )"		6210890	1					
ANR	6210947	Callee	jbig2_arith_new		6210890	0					
ANR	6210948	Identifier	jbig2_arith_new		6210890	0					
ANR	6210949	ArgumentList	ctx		6210890	1					
ANR	6210950	Argument	ctx		6210890	0					
ANR	6210951	Identifier	ctx		6210890	0					
ANR	6210952	Argument	& ws		6210890	1					
ANR	6210953	UnaryOperationExpression	& ws		6210890	0					
ANR	6210954	UnaryOperator	&		6210890	0					
ANR	6210955	Identifier	ws		6210890	1					
ANR	6210956	ExpressionStatement	"jbig2_arith_trace ( as , cx )"	386:4:9829:9854	6210890	9	True				
ANR	6210957	CallExpression	"jbig2_arith_trace ( as , cx )"		6210890	0					
ANR	6210958	Callee	jbig2_arith_trace		6210890	0					
ANR	6210959	Identifier	jbig2_arith_trace		6210890	0					
ANR	6210960	ArgumentList	as		6210890	1					
ANR	6210961	Argument	as		6210890	0					
ANR	6210962	Identifier	as		6210890	0					
ANR	6210963	Argument	cx		6210890	1					
ANR	6210964	Identifier	cx		6210890	0					
ANR	6210965	ForStatement	for ( i = 0 ; i < 256 ; i ++ )		6210890	10					
ANR	6210966	ForInit	i = 0 ;	389:9:9873:9878	6210890	0	True				
ANR	6210967	AssignmentExpression	i = 0		6210890	0		=			
ANR	6210968	Identifier	i		6210890	0					
ANR	6210969	PrimaryExpression	0		6210890	1					
ANR	6210970	Condition	i < 256	389:16:9880:9886	6210890	1	True				
ANR	6210971	RelationalExpression	i < 256		6210890	0		<			
ANR	6210972	Identifier	i		6210890	0					
ANR	6210973	PrimaryExpression	256		6210890	1					
ANR	6210974	PostIncDecOperationExpression	i ++	389:25:9889:9891	6210890	2	True				
ANR	6210975	Identifier	i		6210890	0					
ANR	6210976	IncDec	++		6210890	1					
ANR	6210977	CompoundStatement		17:30:341:341	6210890	3					
ANR	6210978	Statement	bool	391:8:9929:9932	6210890	0	True				
ANR	6210979	Statement	D	391:13:9934:9934	6210890	1	True				
ANR	6210980	Statement	=	391:15:9936:9936	6210890	2	True				
ANR	6210981	ExpressionStatement	"jbig2_arith_decode ( as , & cx , & code )"	395:12:9978:10012	6210890	3	True				
ANR	6210982	CallExpression	"jbig2_arith_decode ( as , & cx , & code )"		6210890	0					
ANR	6210983	Callee	jbig2_arith_decode		6210890	0					
ANR	6210984	Identifier	jbig2_arith_decode		6210890	0					
ANR	6210985	ArgumentList	as		6210890	1					
ANR	6210986	Argument	as		6210890	0					
ANR	6210987	Identifier	as		6210890	0					
ANR	6210988	Argument	& cx		6210890	1					
ANR	6210989	UnaryOperationExpression	& cx		6210890	0					
ANR	6210990	UnaryOperator	&		6210890	0					
ANR	6210991	Identifier	cx		6210890	1					
ANR	6210992	Argument	& code		6210890	2					
ANR	6210993	UnaryOperationExpression	& code		6210890	0					
ANR	6210994	UnaryOperator	&		6210890	0					
ANR	6210995	Identifier	code		6210890	1					
ANR	6210996	ExpressionStatement	"fprintf ( stderr , ""%3d: D = %d, "" , i , D )"	398:8:10048:10086	6210890	4	True				
ANR	6210997	CallExpression	"fprintf ( stderr , ""%3d: D = %d, "" , i , D )"		6210890	0					
ANR	6210998	Callee	fprintf		6210890	0					
ANR	6210999	Identifier	fprintf		6210890	0					
ANR	6211000	ArgumentList	stderr		6210890	1					
ANR	6211001	Argument	stderr		6210890	0					
ANR	6211002	Identifier	stderr		6210890	0					
ANR	6211003	Argument	"""%3d: D = %d, """		6210890	1					
ANR	6211004	PrimaryExpression	"""%3d: D = %d, """		6210890	0					
ANR	6211005	Argument	i		6210890	2					
ANR	6211006	Identifier	i		6210890	0					
ANR	6211007	Argument	D		6210890	3					
ANR	6211008	Identifier	D		6210890	0					
ANR	6211009	ExpressionStatement	"jbig2_arith_trace ( as , cx )"	399:8:10096:10121	6210890	5	True				
ANR	6211010	CallExpression	"jbig2_arith_trace ( as , cx )"		6210890	0					
ANR	6211011	Callee	jbig2_arith_trace		6210890	0					
ANR	6211012	Identifier	jbig2_arith_trace		6210890	0					
ANR	6211013	ArgumentList	as		6210890	1					
ANR	6211014	Argument	as		6210890	0					
ANR	6211015	Identifier	as		6210890	0					
ANR	6211016	Argument	cx		6210890	1					
ANR	6211017	Identifier	cx		6210890	0					
ANR	6211018	ExpressionStatement	"jbig2_free ( ctx -> allocator , as )"	403:4:10141:10171	6210890	11	True				
ANR	6211019	CallExpression	"jbig2_free ( ctx -> allocator , as )"		6210890	0					
ANR	6211020	Callee	jbig2_free		6210890	0					
ANR	6211021	Identifier	jbig2_free		6210890	0					
ANR	6211022	ArgumentList	ctx -> allocator		6210890	1					
ANR	6211023	Argument	ctx -> allocator		6210890	0					
ANR	6211024	PtrMemberAccess	ctx -> allocator		6210890	0					
ANR	6211025	Identifier	ctx		6210890	0					
ANR	6211026	Identifier	allocator		6210890	1					
ANR	6211027	Argument	as		6210890	1					
ANR	6211028	Identifier	as		6210890	0					
ANR	6211029	ExpressionStatement	jbig2_ctx_free ( ctx )	405:4:10178:10197	6210890	12	True				
ANR	6211030	CallExpression	jbig2_ctx_free ( ctx )		6210890	0					
ANR	6211031	Callee	jbig2_ctx_free		6210890	0					
ANR	6211032	Identifier	jbig2_ctx_free		6210890	0					
ANR	6211033	ArgumentList	ctx		6210890	1					
ANR	6211034	Argument	ctx		6210890	0					
ANR	6211035	Identifier	ctx		6210890	0					
ANR	6211036	ReturnStatement	return 0 ;	407:4:10204:10212	6210890	13	True				
ANR	6211037	PrimaryExpression	0		6210890	0					
ANR	6211038	ReturnType	int		6210890	1					
ANR	6211039	Identifier	main		6210890	2					
ANR	6211040	ParameterList	"int argc , char * * argv"		6210890	3					
ANR	6211041	Parameter	int argc	372:5:9529:9536	6210890	0	True				
ANR	6211042	ParameterType	int		6210890	0					
ANR	6211043	Identifier	argc		6210890	1					
ANR	6211044	Parameter	char * * argv	372:15:9539:9549	6210890	1	True				
ANR	6211045	ParameterType	char * *		6210890	0					
ANR	6211046	Identifier	argv		6210890	1					
ANR	6211047	CFGEntryNode	ENTRY		6210890		True				
ANR	6211048	CFGExitNode	EXIT		6210890		True				
ANR	6211049	Symbol	argc		6210890						
ANR	6211050	Symbol	code		6210890						
ANR	6211051	Symbol	NULL		6210890						
ANR	6211052	Symbol	D		6210890						
ANR	6211053	Symbol	ctx -> allocator		6210890						
ANR	6211054	Symbol	ctx		6210890						
ANR	6211055	Symbol	& ws		6210890						
ANR	6211056	Symbol	ws . get_next_word		6210890						
ANR	6211057	Symbol	i		6210890						
ANR	6211058	Symbol	jbig2_ctx_new		6210890						
ANR	6211059	Symbol	stderr		6210890						
ANR	6211060	Symbol	argv		6210890						
ANR	6211061	Symbol	& code		6210890						
ANR	6211062	Symbol	* ctx		6210890						
ANR	6211063	Symbol	test_get_word		6210890						
ANR	6211064	Symbol	as		6210890						
ANR	6211065	Symbol	cx		6210890						
ANR	6211066	Symbol	jbig2_arith_new		6210890						
ANR	6211067	Symbol	ws		6210890						
ANR	6211068	Symbol	& cx		6210890						
