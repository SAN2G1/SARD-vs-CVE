command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3255961	File	data/converged/CVE-2018-16863_ghostpdl/fitblk.c								
ANR	3255962	Function	quit	59:14:2912:3042							
ANR	3255963	FunctionDef	quit (char * why)		3255962	0					
ANR	3255964	CompoundStatement		63:0:2979:3042	3255962	0					
ANR	3255965	ExpressionStatement	"fprintf ( stderr , ""fitblk abort: %s\\n"" , why )"	64:4:2985:3027	3255962	0	True				
ANR	3255966	CallExpression	"fprintf ( stderr , ""fitblk abort: %s\\n"" , why )"		3255962	0					
ANR	3255967	Callee	fprintf		3255962	0					
ANR	3255968	Identifier	fprintf		3255962	0					
ANR	3255969	ArgumentList	stderr		3255962	1					
ANR	3255970	Argument	stderr		3255962	0					
ANR	3255971	Identifier	stderr		3255962	0					
ANR	3255972	Argument	"""fitblk abort: %s\\n"""		3255962	1					
ANR	3255973	PrimaryExpression	"""fitblk abort: %s\\n"""		3255962	0					
ANR	3255974	Argument	why		3255962	2					
ANR	3255975	Identifier	why		3255962	0					
ANR	3255976	ExpressionStatement	exit ( 1 )	65:4:3033:3040	3255962	1	True				
ANR	3255977	CallExpression	exit ( 1 )		3255962	0					
ANR	3255978	Callee	exit		3255962	0					
ANR	3255979	Identifier	exit		3255962	0					
ANR	3255980	ArgumentList	1		3255962	1					
ANR	3255981	Argument	1		3255962	0					
ANR	3255982	PrimaryExpression	1		3255962	0					
ANR	3255983	ReturnType	static local void		3255962	1					
ANR	3255984	Identifier	quit		3255962	2					
ANR	3255985	ParameterList	char * why		3255962	3					
ANR	3255986	Parameter	char * why	62:16:2968:2976	3255962	0	True				
ANR	3255987	ParameterType	char *		3255962	0					
ANR	3255988	Identifier	why		3255962	1					
ANR	3255989	CFGEntryNode	ENTRY		3255962		True				
ANR	3255990	CFGExitNode	EXIT		3255962		True				
ANR	3255991	Symbol	why		3255962						
ANR	3255992	Symbol	stderr		3255962						
ANR	3255993	Function	partcompress	73:0:3289:3755							
ANR	3255994	FunctionDef	"partcompress (FILE * in , z_streamp def)"		3255993	0					
ANR	3255995	CompoundStatement		74:0:3337:3755	3255993	0					
ANR	3255996	IdentifierDeclStatement	"int ret , flush ;"	75:4:3343:3357	3255993	0	True				
ANR	3255997	IdentifierDecl	ret		3255993	0					
ANR	3255998	IdentifierDeclType	int		3255993	0					
ANR	3255999	Identifier	ret		3255993	1					
ANR	3256000	IdentifierDecl	flush		3255993	1					
ANR	3256001	IdentifierDeclType	int		3255993	0					
ANR	3256002	Identifier	flush		3255993	1					
ANR	3256003	IdentifierDeclStatement	unsigned char raw [ RAWLEN ] ;	76:4:3363:3388	3255993	1	True				
ANR	3256004	IdentifierDecl	raw [ RAWLEN ]		3255993	0					
ANR	3256005	IdentifierDeclType	unsigned char [ RAWLEN ]		3255993	0					
ANR	3256006	Identifier	raw		3255993	1					
ANR	3256007	Identifier	RAWLEN		3255993	2					
ANR	3256008	ExpressionStatement	flush = Z_NO_FLUSH	78:4:3395:3413	3255993	2	True				
ANR	3256009	AssignmentExpression	flush = Z_NO_FLUSH		3255993	0		=			
ANR	3256010	Identifier	flush		3255993	0					
ANR	3256011	Identifier	Z_NO_FLUSH		3255993	1					
ANR	3256012	DoStatement	do		3255993	3					
ANR	3256013	CompoundStatement		6:7:84:84	3255993	0					
ANR	3256014	ExpressionStatement	"def -> avail_in = fread ( raw , 1 , RAWLEN , in )"	80:8:3432:3473	3255993	0	True				
ANR	3256015	AssignmentExpression	"def -> avail_in = fread ( raw , 1 , RAWLEN , in )"		3255993	0		=			
ANR	3256016	PtrMemberAccess	def -> avail_in		3255993	0					
ANR	3256017	Identifier	def		3255993	0					
ANR	3256018	Identifier	avail_in		3255993	1					
ANR	3256019	CallExpression	"fread ( raw , 1 , RAWLEN , in )"		3255993	1					
ANR	3256020	Callee	fread		3255993	0					
ANR	3256021	Identifier	fread		3255993	0					
ANR	3256022	ArgumentList	raw		3255993	1					
ANR	3256023	Argument	raw		3255993	0					
ANR	3256024	Identifier	raw		3255993	0					
ANR	3256025	Argument	1		3255993	1					
ANR	3256026	PrimaryExpression	1		3255993	0					
ANR	3256027	Argument	RAWLEN		3255993	2					
ANR	3256028	Identifier	RAWLEN		3255993	0					
ANR	3256029	Argument	in		3255993	3					
ANR	3256030	Identifier	in		3255993	0					
ANR	3256031	IfStatement	if ( ferror ( in ) )		3255993	1					
ANR	3256032	Condition	ferror ( in )	81:12:3487:3496	3255993	0	True				
ANR	3256033	CallExpression	ferror ( in )		3255993	0					
ANR	3256034	Callee	ferror		3255993	0					
ANR	3256035	Identifier	ferror		3255993	0					
ANR	3256036	ArgumentList	in		3255993	1					
ANR	3256037	Argument	in		3255993	0					
ANR	3256038	Identifier	in		3255993	0					
ANR	3256039	ReturnStatement	return Z_ERRNO ;	82:12:3511:3525	3255993	1	True				
ANR	3256040	Identifier	Z_ERRNO		3255993	0					
ANR	3256041	ExpressionStatement	def -> next_in = raw	83:8:3535:3553	3255993	2	True				
ANR	3256042	AssignmentExpression	def -> next_in = raw		3255993	0		=			
ANR	3256043	PtrMemberAccess	def -> next_in		3255993	0					
ANR	3256044	Identifier	def		3255993	0					
ANR	3256045	Identifier	next_in		3255993	1					
ANR	3256046	Identifier	raw		3255993	1					
ANR	3256047	IfStatement	if ( feof ( in ) )		3255993	3					
ANR	3256048	Condition	feof ( in )	84:12:3567:3574	3255993	0	True				
ANR	3256049	CallExpression	feof ( in )		3255993	0					
ANR	3256050	Callee	feof		3255993	0					
ANR	3256051	Identifier	feof		3255993	0					
ANR	3256052	ArgumentList	in		3255993	1					
ANR	3256053	Argument	in		3255993	0					
ANR	3256054	Identifier	in		3255993	0					
ANR	3256055	ExpressionStatement	flush = Z_FINISH	85:12:3589:3605	3255993	1	True				
ANR	3256056	AssignmentExpression	flush = Z_FINISH		3255993	0		=			
ANR	3256057	Identifier	flush		3255993	0					
ANR	3256058	Identifier	Z_FINISH		3255993	1					
ANR	3256059	ExpressionStatement	"ret = deflate ( def , flush )"	86:8:3615:3640	3255993	4	True				
ANR	3256060	AssignmentExpression	"ret = deflate ( def , flush )"		3255993	0		=			
ANR	3256061	Identifier	ret		3255993	0					
ANR	3256062	CallExpression	"deflate ( def , flush )"		3255993	1					
ANR	3256063	Callee	deflate		3255993	0					
ANR	3256064	Identifier	deflate		3255993	0					
ANR	3256065	ArgumentList	def		3255993	1					
ANR	3256066	Argument	def		3255993	0					
ANR	3256067	Identifier	def		3255993	0					
ANR	3256068	Argument	flush		3255993	1					
ANR	3256069	Identifier	flush		3255993	0					
ANR	3256070	ExpressionStatement	assert ( ret != Z_STREAM_ERROR )	87:8:3650:3679	3255993	5	True				
ANR	3256071	CallExpression	assert ( ret != Z_STREAM_ERROR )		3255993	0					
ANR	3256072	Callee	assert		3255993	0					
ANR	3256073	Identifier	assert		3255993	0					
ANR	3256074	ArgumentList	ret != Z_STREAM_ERROR		3255993	1					
ANR	3256075	Argument	ret != Z_STREAM_ERROR		3255993	0					
ANR	3256076	EqualityExpression	ret != Z_STREAM_ERROR		3255993	0		!=			
ANR	3256077	Identifier	ret		3255993	0					
ANR	3256078	Identifier	Z_STREAM_ERROR		3255993	1					
ANR	3256079	Condition	def -> avail_out != 0 && flush == Z_NO_FLUSH	88:13:3694:3735	3255993	1	True				
ANR	3256080	AndExpression	def -> avail_out != 0 && flush == Z_NO_FLUSH		3255993	0		&&			
ANR	3256081	EqualityExpression	def -> avail_out != 0		3255993	0		!=			
ANR	3256082	PtrMemberAccess	def -> avail_out		3255993	0					
ANR	3256083	Identifier	def		3255993	0					
ANR	3256084	Identifier	avail_out		3255993	1					
ANR	3256085	PrimaryExpression	0		3255993	1					
ANR	3256086	EqualityExpression	flush == Z_NO_FLUSH		3255993	1		==			
ANR	3256087	Identifier	flush		3255993	0					
ANR	3256088	Identifier	Z_NO_FLUSH		3255993	1					
ANR	3256089	ReturnStatement	return ret ;	89:4:3743:3753	3255993	4	True				
ANR	3256090	Identifier	ret		3255993	0					
ANR	3256091	ReturnType	local int		3255993	1					
ANR	3256092	Identifier	partcompress		3255993	2					
ANR	3256093	ParameterList	"FILE * in , z_streamp def"		3255993	3					
ANR	3256094	Parameter	FILE * in	73:23:3312:3319	3255993	0	True				
ANR	3256095	ParameterType	FILE *		3255993	0					
ANR	3256096	Identifier	in		3255993	1					
ANR	3256097	Parameter	z_streamp def	73:33:3322:3334	3255993	1	True				
ANR	3256098	ParameterType	z_streamp		3255993	0					
ANR	3256099	Identifier	def		3255993	1					
ANR	3256100	CFGEntryNode	ENTRY		3255993		True				
ANR	3256101	CFGExitNode	EXIT		3255993		True				
ANR	3256102	Symbol	ret		3255993						
ANR	3256103	Symbol	Z_ERRNO		3255993						
ANR	3256104	Symbol	Z_STREAM_ERROR		3255993						
ANR	3256105	Symbol	def		3255993						
ANR	3256106	Symbol	in		3255993						
ANR	3256107	Symbol	RAWLEN		3255993						
ANR	3256108	Symbol	raw		3255993						
ANR	3256109	Symbol	fread		3255993						
ANR	3256110	Symbol	Z_FINISH		3255993						
ANR	3256111	Symbol	* def		3255993						
ANR	3256112	Symbol	ferror		3255993						
ANR	3256113	Symbol	def -> next_in		3255993						
ANR	3256114	Symbol	Z_NO_FLUSH		3255993						
ANR	3256115	Symbol	def -> avail_in		3255993						
ANR	3256116	Symbol	deflate		3255993						
ANR	3256117	Symbol	flush		3255993						
ANR	3256118	Symbol	feof		3255993						
ANR	3256119	Symbol	def -> avail_out		3255993						
ANR	3256120	Function	recompress	96:0:4024:4799							
ANR	3256121	FunctionDef	"recompress (z_streamp inf , z_streamp def)"		3256120	0					
ANR	3256122	CompoundStatement		97:0:4075:4799	3256120	0					
ANR	3256123	IdentifierDeclStatement	"int ret , flush ;"	98:4:4081:4095	3256120	0	True				
ANR	3256124	IdentifierDecl	ret		3256120	0					
ANR	3256125	IdentifierDeclType	int		3256120	0					
ANR	3256126	Identifier	ret		3256120	1					
ANR	3256127	IdentifierDecl	flush		3256120	1					
ANR	3256128	IdentifierDeclType	int		3256120	0					
ANR	3256129	Identifier	flush		3256120	1					
ANR	3256130	IdentifierDeclStatement	unsigned char raw [ RAWLEN ] ;	99:4:4101:4126	3256120	1	True				
ANR	3256131	IdentifierDecl	raw [ RAWLEN ]		3256120	0					
ANR	3256132	IdentifierDeclType	unsigned char [ RAWLEN ]		3256120	0					
ANR	3256133	Identifier	raw		3256120	1					
ANR	3256134	Identifier	RAWLEN		3256120	2					
ANR	3256135	ExpressionStatement	flush = Z_NO_FLUSH	101:4:4133:4151	3256120	2	True				
ANR	3256136	AssignmentExpression	flush = Z_NO_FLUSH		3256120	0		=			
ANR	3256137	Identifier	flush		3256120	0					
ANR	3256138	Identifier	Z_NO_FLUSH		3256120	1					
ANR	3256139	DoStatement	do		3256120	3					
ANR	3256140	CompoundStatement		6:7:84:84	3256120	0					
ANR	3256141	ExpressionStatement	inf -> avail_out = RAWLEN	104:8:4195:4218	3256120	0	True				
ANR	3256142	AssignmentExpression	inf -> avail_out = RAWLEN		3256120	0		=			
ANR	3256143	PtrMemberAccess	inf -> avail_out		3256120	0					
ANR	3256144	Identifier	inf		3256120	0					
ANR	3256145	Identifier	avail_out		3256120	1					
ANR	3256146	Identifier	RAWLEN		3256120	1					
ANR	3256147	ExpressionStatement	inf -> next_out = raw	105:8:4228:4247	3256120	1	True				
ANR	3256148	AssignmentExpression	inf -> next_out = raw		3256120	0		=			
ANR	3256149	PtrMemberAccess	inf -> next_out		3256120	0					
ANR	3256150	Identifier	inf		3256120	0					
ANR	3256151	Identifier	next_out		3256120	1					
ANR	3256152	Identifier	raw		3256120	1					
ANR	3256153	ExpressionStatement	"ret = inflate ( inf , Z_NO_FLUSH )"	106:8:4257:4287	3256120	2	True				
ANR	3256154	AssignmentExpression	"ret = inflate ( inf , Z_NO_FLUSH )"		3256120	0		=			
ANR	3256155	Identifier	ret		3256120	0					
ANR	3256156	CallExpression	"inflate ( inf , Z_NO_FLUSH )"		3256120	1					
ANR	3256157	Callee	inflate		3256120	0					
ANR	3256158	Identifier	inflate		3256120	0					
ANR	3256159	ArgumentList	inf		3256120	1					
ANR	3256160	Argument	inf		3256120	0					
ANR	3256161	Identifier	inf		3256120	0					
ANR	3256162	Argument	Z_NO_FLUSH		3256120	1					
ANR	3256163	Identifier	Z_NO_FLUSH		3256120	0					
ANR	3256164	ExpressionStatement	assert ( ret != Z_STREAM_ERROR && ret != Z_DATA_ERROR && ret != Z_NEED_DICT )	107:8:4297:4386	3256120	3	True				
ANR	3256165	CallExpression	assert ( ret != Z_STREAM_ERROR && ret != Z_DATA_ERROR && ret != Z_NEED_DICT )		3256120	0					
ANR	3256166	Callee	assert		3256120	0					
ANR	3256167	Identifier	assert		3256120	0					
ANR	3256168	ArgumentList	ret != Z_STREAM_ERROR && ret != Z_DATA_ERROR && ret != Z_NEED_DICT		3256120	1					
ANR	3256169	Argument	ret != Z_STREAM_ERROR && ret != Z_DATA_ERROR && ret != Z_NEED_DICT		3256120	0					
ANR	3256170	AndExpression	ret != Z_STREAM_ERROR && ret != Z_DATA_ERROR && ret != Z_NEED_DICT		3256120	0		&&			
ANR	3256171	EqualityExpression	ret != Z_STREAM_ERROR		3256120	0		!=			
ANR	3256172	Identifier	ret		3256120	0					
ANR	3256173	Identifier	Z_STREAM_ERROR		3256120	1					
ANR	3256174	AndExpression	ret != Z_DATA_ERROR && ret != Z_NEED_DICT		3256120	1		&&			
ANR	3256175	EqualityExpression	ret != Z_DATA_ERROR		3256120	0		!=			
ANR	3256176	Identifier	ret		3256120	0					
ANR	3256177	Identifier	Z_DATA_ERROR		3256120	1					
ANR	3256178	EqualityExpression	ret != Z_NEED_DICT		3256120	1		!=			
ANR	3256179	Identifier	ret		3256120	0					
ANR	3256180	Identifier	Z_NEED_DICT		3256120	1					
ANR	3256181	IfStatement	if ( ret == Z_MEM_ERROR )		3256120	4					
ANR	3256182	Condition	ret == Z_MEM_ERROR	109:12:4400:4417	3256120	0	True				
ANR	3256183	EqualityExpression	ret == Z_MEM_ERROR		3256120	0		==			
ANR	3256184	Identifier	ret		3256120	0					
ANR	3256185	Identifier	Z_MEM_ERROR		3256120	1					
ANR	3256186	ReturnStatement	return ret ;	110:12:4432:4442	3256120	1	True				
ANR	3256187	Identifier	ret		3256120	0					
ANR	3256188	ExpressionStatement	def -> avail_in = RAWLEN - inf -> avail_out	113:8:4519:4558	3256120	5	True				
ANR	3256189	AssignmentExpression	def -> avail_in = RAWLEN - inf -> avail_out		3256120	0		=			
ANR	3256190	PtrMemberAccess	def -> avail_in		3256120	0					
ANR	3256191	Identifier	def		3256120	0					
ANR	3256192	Identifier	avail_in		3256120	1					
ANR	3256193	AdditiveExpression	RAWLEN - inf -> avail_out		3256120	1		-			
ANR	3256194	Identifier	RAWLEN		3256120	0					
ANR	3256195	PtrMemberAccess	inf -> avail_out		3256120	1					
ANR	3256196	Identifier	inf		3256120	0					
ANR	3256197	Identifier	avail_out		3256120	1					
ANR	3256198	ExpressionStatement	def -> next_in = raw	114:8:4568:4586	3256120	6	True				
ANR	3256199	AssignmentExpression	def -> next_in = raw		3256120	0		=			
ANR	3256200	PtrMemberAccess	def -> next_in		3256120	0					
ANR	3256201	Identifier	def		3256120	0					
ANR	3256202	Identifier	next_in		3256120	1					
ANR	3256203	Identifier	raw		3256120	1					
ANR	3256204	IfStatement	if ( inf -> avail_out != 0 )		3256120	7					
ANR	3256205	Condition	inf -> avail_out != 0	115:12:4600:4618	3256120	0	True				
ANR	3256206	EqualityExpression	inf -> avail_out != 0		3256120	0		!=			
ANR	3256207	PtrMemberAccess	inf -> avail_out		3256120	0					
ANR	3256208	Identifier	inf		3256120	0					
ANR	3256209	Identifier	avail_out		3256120	1					
ANR	3256210	PrimaryExpression	0		3256120	1					
ANR	3256211	ExpressionStatement	flush = Z_FINISH	116:12:4633:4649	3256120	1	True				
ANR	3256212	AssignmentExpression	flush = Z_FINISH		3256120	0		=			
ANR	3256213	Identifier	flush		3256120	0					
ANR	3256214	Identifier	Z_FINISH		3256120	1					
ANR	3256215	ExpressionStatement	"ret = deflate ( def , flush )"	117:8:4659:4684	3256120	8	True				
ANR	3256216	AssignmentExpression	"ret = deflate ( def , flush )"		3256120	0		=			
ANR	3256217	Identifier	ret		3256120	0					
ANR	3256218	CallExpression	"deflate ( def , flush )"		3256120	1					
ANR	3256219	Callee	deflate		3256120	0					
ANR	3256220	Identifier	deflate		3256120	0					
ANR	3256221	ArgumentList	def		3256120	1					
ANR	3256222	Argument	def		3256120	0					
ANR	3256223	Identifier	def		3256120	0					
ANR	3256224	Argument	flush		3256120	1					
ANR	3256225	Identifier	flush		3256120	0					
ANR	3256226	ExpressionStatement	assert ( ret != Z_STREAM_ERROR )	118:8:4694:4723	3256120	9	True				
ANR	3256227	CallExpression	assert ( ret != Z_STREAM_ERROR )		3256120	0					
ANR	3256228	Callee	assert		3256120	0					
ANR	3256229	Identifier	assert		3256120	0					
ANR	3256230	ArgumentList	ret != Z_STREAM_ERROR		3256120	1					
ANR	3256231	Argument	ret != Z_STREAM_ERROR		3256120	0					
ANR	3256232	EqualityExpression	ret != Z_STREAM_ERROR		3256120	0		!=			
ANR	3256233	Identifier	ret		3256120	0					
ANR	3256234	Identifier	Z_STREAM_ERROR		3256120	1					
ANR	3256235	Condition	ret != Z_STREAM_END && def -> avail_out != 0	119:13:4738:4779	3256120	1	True				
ANR	3256236	AndExpression	ret != Z_STREAM_END && def -> avail_out != 0		3256120	0		&&			
ANR	3256237	EqualityExpression	ret != Z_STREAM_END		3256120	0		!=			
ANR	3256238	Identifier	ret		3256120	0					
ANR	3256239	Identifier	Z_STREAM_END		3256120	1					
ANR	3256240	EqualityExpression	def -> avail_out != 0		3256120	1		!=			
ANR	3256241	PtrMemberAccess	def -> avail_out		3256120	0					
ANR	3256242	Identifier	def		3256120	0					
ANR	3256243	Identifier	avail_out		3256120	1					
ANR	3256244	PrimaryExpression	0		3256120	1					
ANR	3256245	ReturnStatement	return ret ;	120:4:4787:4797	3256120	4	True				
ANR	3256246	Identifier	ret		3256120	0					
ANR	3256247	ReturnType	local int		3256120	1					
ANR	3256248	Identifier	recompress		3256120	2					
ANR	3256249	ParameterList	"z_streamp inf , z_streamp def"		3256120	3					
ANR	3256250	Parameter	z_streamp inf	96:21:4045:4057	3256120	0	True				
ANR	3256251	ParameterType	z_streamp		3256120	0					
ANR	3256252	Identifier	inf		3256120	1					
ANR	3256253	Parameter	z_streamp def	96:36:4060:4072	3256120	1	True				
ANR	3256254	ParameterType	z_streamp		3256120	0					
ANR	3256255	Identifier	def		3256120	1					
ANR	3256256	CFGEntryNode	ENTRY		3256120		True				
ANR	3256257	CFGExitNode	EXIT		3256120		True				
ANR	3256258	Symbol	inf		3256120						
ANR	3256259	Symbol	ret		3256120						
ANR	3256260	Symbol	Z_STREAM_ERROR		3256120						
ANR	3256261	Symbol	Z_DATA_ERROR		3256120						
ANR	3256262	Symbol	def		3256120						
ANR	3256263	Symbol	Z_MEM_ERROR		3256120						
ANR	3256264	Symbol	RAWLEN		3256120						
ANR	3256265	Symbol	raw		3256120						
ANR	3256266	Symbol	inf -> avail_out		3256120						
ANR	3256267	Symbol	Z_FINISH		3256120						
ANR	3256268	Symbol	* def		3256120						
ANR	3256269	Symbol	def -> next_in		3256120						
ANR	3256270	Symbol	Z_NO_FLUSH		3256120						
ANR	3256271	Symbol	def -> avail_in		3256120						
ANR	3256272	Symbol	deflate		3256120						
ANR	3256273	Symbol	flush		3256120						
ANR	3256274	Symbol	* inf		3256120						
ANR	3256275	Symbol	inflate		3256120						
ANR	3256276	Symbol	Z_STREAM_END		3256120						
ANR	3256277	Symbol	inf -> next_out		3256120						
ANR	3256278	Symbol	def -> avail_out		3256120						
ANR	3256279	Symbol	Z_NEED_DICT		3256120						
ANR	3256280	Function	main	127:0:4991:8592							
ANR	3256281	FunctionDef	"main (int argc , char * * argv)"		3256280	0					
ANR	3256282	CompoundStatement		128:0:5023:8592	3256280	0					
ANR	3256283	IdentifierDeclStatement	int ret ;	129:4:5029:5036	3256280	0	True				
ANR	3256284	IdentifierDecl	ret		3256280	0					
ANR	3256285	IdentifierDeclType	int		3256280	0					
ANR	3256286	Identifier	ret		3256280	1					
ANR	3256287	IdentifierDeclStatement	unsigned size ;	130:4:5075:5088	3256280	1	True				
ANR	3256288	IdentifierDecl	size		3256280	0					
ANR	3256289	IdentifierDeclType	unsigned		3256280	0					
ANR	3256290	Identifier	size		3256280	1					
ANR	3256291	IdentifierDeclStatement	unsigned have ;	131:4:5143:5156	3256280	2	True				
ANR	3256292	IdentifierDecl	have		3256280	0					
ANR	3256293	IdentifierDeclType	unsigned		3256280	0					
ANR	3256294	Identifier	have		3256280	1					
ANR	3256295	IdentifierDeclStatement	unsigned char * blk ;	132:4:5209:5227	3256280	3	True				
ANR	3256296	IdentifierDecl	* blk		3256280	0					
ANR	3256297	IdentifierDeclType	unsigned char *		3256280	0					
ANR	3256298	Identifier	blk		3256280	1					
ANR	3256299	IdentifierDeclStatement	unsigned char * tmp ;	133:4:5273:5291	3256280	4	True				
ANR	3256300	IdentifierDecl	* tmp		3256280	0					
ANR	3256301	IdentifierDeclType	unsigned char *		3256280	0					
ANR	3256302	Identifier	tmp		3256280	1					
ANR	3256303	IdentifierDeclStatement	"z_stream def , inf ;"	134:4:5336:5353	3256280	5	True				
ANR	3256304	IdentifierDecl	def		3256280	0					
ANR	3256305	IdentifierDeclType	z_stream		3256280	0					
ANR	3256306	Identifier	def		3256280	1					
ANR	3256307	IdentifierDecl	inf		3256280	1					
ANR	3256308	IdentifierDeclType	z_stream		3256280	0					
ANR	3256309	Identifier	inf		3256280	1					
ANR	3256310	IfStatement	if ( argc != 2 )		3256280	6					
ANR	3256311	Condition	argc != 2	137:8:5443:5451	3256280	0	True				
ANR	3256312	EqualityExpression	argc != 2		3256280	0		!=			
ANR	3256313	Identifier	argc		3256280	0					
ANR	3256314	PrimaryExpression	2		3256280	1					
ANR	3256315	ExpressionStatement	"quit ( ""need one argument: size of output block"" )"	138:8:5462:5509	3256280	1	True				
ANR	3256316	CallExpression	"quit ( ""need one argument: size of output block"" )"		3256280	0					
ANR	3256317	Callee	quit		3256280	0					
ANR	3256318	Identifier	quit		3256280	0					
ANR	3256319	ArgumentList	"""need one argument: size of output block"""		3256280	1					
ANR	3256320	Argument	"""need one argument: size of output block"""		3256280	0					
ANR	3256321	PrimaryExpression	"""need one argument: size of output block"""		3256280	0					
ANR	3256322	ExpressionStatement	"ret = strtol ( argv [ 1 ] , argv + 1 , 10 )"	139:4:5515:5550	3256280	7	True				
ANR	3256323	AssignmentExpression	"ret = strtol ( argv [ 1 ] , argv + 1 , 10 )"		3256280	0		=			
ANR	3256324	Identifier	ret		3256280	0					
ANR	3256325	CallExpression	"strtol ( argv [ 1 ] , argv + 1 , 10 )"		3256280	1					
ANR	3256326	Callee	strtol		3256280	0					
ANR	3256327	Identifier	strtol		3256280	0					
ANR	3256328	ArgumentList	argv [ 1 ]		3256280	1					
ANR	3256329	Argument	argv [ 1 ]		3256280	0					
ANR	3256330	ArrayIndexing	argv [ 1 ]		3256280	0					
ANR	3256331	Identifier	argv		3256280	0					
ANR	3256332	PrimaryExpression	1		3256280	1					
ANR	3256333	Argument	argv + 1		3256280	1					
ANR	3256334	AdditiveExpression	argv + 1		3256280	0		+			
ANR	3256335	Identifier	argv		3256280	0					
ANR	3256336	PrimaryExpression	1		3256280	1					
ANR	3256337	Argument	10		3256280	2					
ANR	3256338	PrimaryExpression	10		3256280	0					
ANR	3256339	IfStatement	if ( argv [ 1 ] [ 0 ] != 0 )		3256280	8					
ANR	3256340	Condition	argv [ 1 ] [ 0 ] != 0	140:8:5560:5574	3256280	0	True				
ANR	3256341	EqualityExpression	argv [ 1 ] [ 0 ] != 0		3256280	0		!=			
ANR	3256342	ArrayIndexing	argv [ 1 ] [ 0 ]		3256280	0					
ANR	3256343	ArrayIndexing	argv [ 1 ]		3256280	0					
ANR	3256344	Identifier	argv		3256280	0					
ANR	3256345	PrimaryExpression	1		3256280	1					
ANR	3256346	PrimaryExpression	0		3256280	1					
ANR	3256347	PrimaryExpression	0		3256280	1					
ANR	3256348	ExpressionStatement	"quit ( ""argument must be a number"" )"	141:8:5585:5618	3256280	1	True				
ANR	3256349	CallExpression	"quit ( ""argument must be a number"" )"		3256280	0					
ANR	3256350	Callee	quit		3256280	0					
ANR	3256351	Identifier	quit		3256280	0					
ANR	3256352	ArgumentList	"""argument must be a number"""		3256280	1					
ANR	3256353	Argument	"""argument must be a number"""		3256280	0					
ANR	3256354	PrimaryExpression	"""argument must be a number"""		3256280	0					
ANR	3256355	IfStatement	if ( ret < 8 )		3256280	9					
ANR	3256356	Condition	ret < 8	142:8:5628:5634	3256280	0	True				
ANR	3256357	RelationalExpression	ret < 8		3256280	0		<			
ANR	3256358	Identifier	ret		3256280	0					
ANR	3256359	PrimaryExpression	8		3256280	1					
ANR	3256360	ExpressionStatement	"quit ( ""need positive size of 8 or greater"" )"	143:8:5692:5734	3256280	1	True				
ANR	3256361	CallExpression	"quit ( ""need positive size of 8 or greater"" )"		3256280	0					
ANR	3256362	Callee	quit		3256280	0					
ANR	3256363	Identifier	quit		3256280	0					
ANR	3256364	ArgumentList	"""need positive size of 8 or greater"""		3256280	1					
ANR	3256365	Argument	"""need positive size of 8 or greater"""		3256280	0					
ANR	3256366	PrimaryExpression	"""need positive size of 8 or greater"""		3256280	0					
ANR	3256367	ExpressionStatement	size = ( unsigned ) ret	144:4:5740:5760	3256280	10	True				
ANR	3256368	AssignmentExpression	size = ( unsigned ) ret		3256280	0		=			
ANR	3256369	Identifier	size		3256280	0					
ANR	3256370	CastExpression	( unsigned ) ret		3256280	1					
ANR	3256371	CastTarget	unsigned		3256280	0					
ANR	3256372	Identifier	ret		3256280	1					
ANR	3256373	ExpressionStatement	blk = malloc ( size + EXCESS )	147:4:5828:5855	3256280	11	True				
ANR	3256374	AssignmentExpression	blk = malloc ( size + EXCESS )		3256280	0		=			
ANR	3256375	Identifier	blk		3256280	0					
ANR	3256376	CallExpression	malloc ( size + EXCESS )		3256280	1					
ANR	3256377	Callee	malloc		3256280	0					
ANR	3256378	Identifier	malloc		3256280	0					
ANR	3256379	ArgumentList	size + EXCESS		3256280	1					
ANR	3256380	Argument	size + EXCESS		3256280	0					
ANR	3256381	AdditiveExpression	size + EXCESS		3256280	0		+			
ANR	3256382	Identifier	size		3256280	0					
ANR	3256383	Identifier	EXCESS		3256280	1					
ANR	3256384	ExpressionStatement	def . zalloc = Z_NULL	148:4:5861:5880	3256280	12	True				
ANR	3256385	AssignmentExpression	def . zalloc = Z_NULL		3256280	0		=			
ANR	3256386	MemberAccess	def . zalloc		3256280	0					
ANR	3256387	Identifier	def		3256280	0					
ANR	3256388	Identifier	zalloc		3256280	1					
ANR	3256389	Identifier	Z_NULL		3256280	1					
ANR	3256390	ExpressionStatement	def . zfree = Z_NULL	149:4:5886:5904	3256280	13	True				
ANR	3256391	AssignmentExpression	def . zfree = Z_NULL		3256280	0		=			
ANR	3256392	MemberAccess	def . zfree		3256280	0					
ANR	3256393	Identifier	def		3256280	0					
ANR	3256394	Identifier	zfree		3256280	1					
ANR	3256395	Identifier	Z_NULL		3256280	1					
ANR	3256396	ExpressionStatement	def . opaque = Z_NULL	150:4:5910:5929	3256280	14	True				
ANR	3256397	AssignmentExpression	def . opaque = Z_NULL		3256280	0		=			
ANR	3256398	MemberAccess	def . opaque		3256280	0					
ANR	3256399	Identifier	def		3256280	0					
ANR	3256400	Identifier	opaque		3256280	1					
ANR	3256401	Identifier	Z_NULL		3256280	1					
ANR	3256402	ExpressionStatement	"ret = deflateInit ( & def , Z_DEFAULT_COMPRESSION )"	151:4:5935:5981	3256280	15	True				
ANR	3256403	AssignmentExpression	"ret = deflateInit ( & def , Z_DEFAULT_COMPRESSION )"		3256280	0		=			
ANR	3256404	Identifier	ret		3256280	0					
ANR	3256405	CallExpression	"deflateInit ( & def , Z_DEFAULT_COMPRESSION )"		3256280	1					
ANR	3256406	Callee	deflateInit		3256280	0					
ANR	3256407	Identifier	deflateInit		3256280	0					
ANR	3256408	ArgumentList	& def		3256280	1					
ANR	3256409	Argument	& def		3256280	0					
ANR	3256410	UnaryOperationExpression	& def		3256280	0					
ANR	3256411	UnaryOperator	&		3256280	0					
ANR	3256412	Identifier	def		3256280	1					
ANR	3256413	Argument	Z_DEFAULT_COMPRESSION		3256280	1					
ANR	3256414	Identifier	Z_DEFAULT_COMPRESSION		3256280	0					
ANR	3256415	IfStatement	if ( ret != Z_OK || blk == NULL )		3256280	16					
ANR	3256416	Condition	ret != Z_OK || blk == NULL	152:8:5991:6016	3256280	0	True				
ANR	3256417	OrExpression	ret != Z_OK || blk == NULL		3256280	0		||			
ANR	3256418	EqualityExpression	ret != Z_OK		3256280	0		!=			
ANR	3256419	Identifier	ret		3256280	0					
ANR	3256420	Identifier	Z_OK		3256280	1					
ANR	3256421	EqualityExpression	blk == NULL		3256280	1		==			
ANR	3256422	Identifier	blk		3256280	0					
ANR	3256423	Identifier	NULL		3256280	1					
ANR	3256424	ExpressionStatement	"quit ( ""out of memory"" )"	153:8:6027:6048	3256280	1	True				
ANR	3256425	CallExpression	"quit ( ""out of memory"" )"		3256280	0					
ANR	3256426	Callee	quit		3256280	0					
ANR	3256427	Identifier	quit		3256280	0					
ANR	3256428	ArgumentList	"""out of memory"""		3256280	1					
ANR	3256429	Argument	"""out of memory"""		3256280	0					
ANR	3256430	PrimaryExpression	"""out of memory"""		3256280	0					
ANR	3256431	ExpressionStatement	def . avail_out = size + EXCESS	156:4:6121:6150	3256280	17	True				
ANR	3256432	AssignmentExpression	def . avail_out = size + EXCESS		3256280	0		=			
ANR	3256433	MemberAccess	def . avail_out		3256280	0					
ANR	3256434	Identifier	def		3256280	0					
ANR	3256435	Identifier	avail_out		3256280	1					
ANR	3256436	AdditiveExpression	size + EXCESS		3256280	1		+			
ANR	3256437	Identifier	size		3256280	0					
ANR	3256438	Identifier	EXCESS		3256280	1					
ANR	3256439	ExpressionStatement	def . next_out = blk	157:4:6156:6174	3256280	18	True				
ANR	3256440	AssignmentExpression	def . next_out = blk		3256280	0		=			
ANR	3256441	MemberAccess	def . next_out		3256280	0					
ANR	3256442	Identifier	def		3256280	0					
ANR	3256443	Identifier	next_out		3256280	1					
ANR	3256444	Identifier	blk		3256280	1					
ANR	3256445	ExpressionStatement	"ret = partcompress ( stdin , & def )"	158:4:6180:6211	3256280	19	True				
ANR	3256446	AssignmentExpression	"ret = partcompress ( stdin , & def )"		3256280	0		=			
ANR	3256447	Identifier	ret		3256280	0					
ANR	3256448	CallExpression	"partcompress ( stdin , & def )"		3256280	1					
ANR	3256449	Callee	partcompress		3256280	0					
ANR	3256450	Identifier	partcompress		3256280	0					
ANR	3256451	ArgumentList	stdin		3256280	1					
ANR	3256452	Argument	stdin		3256280	0					
ANR	3256453	Identifier	stdin		3256280	0					
ANR	3256454	Argument	& def		3256280	1					
ANR	3256455	UnaryOperationExpression	& def		3256280	0					
ANR	3256456	UnaryOperator	&		3256280	0					
ANR	3256457	Identifier	def		3256280	1					
ANR	3256458	IfStatement	if ( ret == Z_ERRNO )		3256280	20					
ANR	3256459	Condition	ret == Z_ERRNO	159:8:6221:6234	3256280	0	True				
ANR	3256460	EqualityExpression	ret == Z_ERRNO		3256280	0		==			
ANR	3256461	Identifier	ret		3256280	0					
ANR	3256462	Identifier	Z_ERRNO		3256280	1					
ANR	3256463	ExpressionStatement	"quit ( ""error reading input"" )"	160:8:6245:6272	3256280	1	True				
ANR	3256464	CallExpression	"quit ( ""error reading input"" )"		3256280	0					
ANR	3256465	Callee	quit		3256280	0					
ANR	3256466	Identifier	quit		3256280	0					
ANR	3256467	ArgumentList	"""error reading input"""		3256280	1					
ANR	3256468	Argument	"""error reading input"""		3256280	0					
ANR	3256469	PrimaryExpression	"""error reading input"""		3256280	0					
ANR	3256470	IfStatement	if ( ret == Z_STREAM_END && def . avail_out >= EXCESS )		3256280	21					
ANR	3256471	Condition	ret == Z_STREAM_END && def . avail_out >= EXCESS	163:8:6347:6392	3256280	0	True				
ANR	3256472	AndExpression	ret == Z_STREAM_END && def . avail_out >= EXCESS		3256280	0		&&			
ANR	3256473	EqualityExpression	ret == Z_STREAM_END		3256280	0		==			
ANR	3256474	Identifier	ret		3256280	0					
ANR	3256475	Identifier	Z_STREAM_END		3256280	1					
ANR	3256476	RelationalExpression	def . avail_out >= EXCESS		3256280	1		>=			
ANR	3256477	MemberAccess	def . avail_out		3256280	0					
ANR	3256478	Identifier	def		3256280	0					
ANR	3256479	Identifier	avail_out		3256280	1					
ANR	3256480	Identifier	EXCESS		3256280	1					
ANR	3256481	CompoundStatement		36:56:1371:1371	3256280	1					
ANR	3256482	ExpressionStatement	have = size + EXCESS - def . avail_out	165:8:6441:6477	3256280	0	True				
ANR	3256483	AssignmentExpression	have = size + EXCESS - def . avail_out		3256280	0		=			
ANR	3256484	Identifier	have		3256280	0					
ANR	3256485	AdditiveExpression	size + EXCESS - def . avail_out		3256280	1		+			
ANR	3256486	Identifier	size		3256280	0					
ANR	3256487	AdditiveExpression	EXCESS - def . avail_out		3256280	1		-			
ANR	3256488	Identifier	EXCESS		3256280	0					
ANR	3256489	MemberAccess	def . avail_out		3256280	1					
ANR	3256490	Identifier	def		3256280	0					
ANR	3256491	Identifier	avail_out		3256280	1					
ANR	3256492	IfStatement	"if ( fwrite ( blk , 1 , have , stdout ) != have || ferror ( stdout ) )"		3256280	1					
ANR	3256493	Condition	"fwrite ( blk , 1 , have , stdout ) != have || ferror ( stdout )"	166:12:6491:6544	3256280	0	True				
ANR	3256494	OrExpression	"fwrite ( blk , 1 , have , stdout ) != have || ferror ( stdout )"		3256280	0		||			
ANR	3256495	EqualityExpression	"fwrite ( blk , 1 , have , stdout ) != have"		3256280	0		!=			
ANR	3256496	CallExpression	"fwrite ( blk , 1 , have , stdout )"		3256280	0					
ANR	3256497	Callee	fwrite		3256280	0					
ANR	3256498	Identifier	fwrite		3256280	0					
ANR	3256499	ArgumentList	blk		3256280	1					
ANR	3256500	Argument	blk		3256280	0					
ANR	3256501	Identifier	blk		3256280	0					
ANR	3256502	Argument	1		3256280	1					
ANR	3256503	PrimaryExpression	1		3256280	0					
ANR	3256504	Argument	have		3256280	2					
ANR	3256505	Identifier	have		3256280	0					
ANR	3256506	Argument	stdout		3256280	3					
ANR	3256507	Identifier	stdout		3256280	0					
ANR	3256508	Identifier	have		3256280	1					
ANR	3256509	CallExpression	ferror ( stdout )		3256280	1					
ANR	3256510	Callee	ferror		3256280	0					
ANR	3256511	Identifier	ferror		3256280	0					
ANR	3256512	ArgumentList	stdout		3256280	1					
ANR	3256513	Argument	stdout		3256280	0					
ANR	3256514	Identifier	stdout		3256280	0					
ANR	3256515	ExpressionStatement	"quit ( ""error writing output"" )"	167:12:6559:6587	3256280	1	True				
ANR	3256516	CallExpression	"quit ( ""error writing output"" )"		3256280	0					
ANR	3256517	Callee	quit		3256280	0					
ANR	3256518	Identifier	quit		3256280	0					
ANR	3256519	ArgumentList	"""error writing output"""		3256280	1					
ANR	3256520	Argument	"""error writing output"""		3256280	0					
ANR	3256521	PrimaryExpression	"""error writing output"""		3256280	0					
ANR	3256522	ExpressionStatement	ret = deflateEnd ( & def )	170:8:6649:6671	3256280	2	True				
ANR	3256523	AssignmentExpression	ret = deflateEnd ( & def )		3256280	0		=			
ANR	3256524	Identifier	ret		3256280	0					
ANR	3256525	CallExpression	deflateEnd ( & def )		3256280	1					
ANR	3256526	Callee	deflateEnd		3256280	0					
ANR	3256527	Identifier	deflateEnd		3256280	0					
ANR	3256528	ArgumentList	& def		3256280	1					
ANR	3256529	Argument	& def		3256280	0					
ANR	3256530	UnaryOperationExpression	& def		3256280	0					
ANR	3256531	UnaryOperator	&		3256280	0					
ANR	3256532	Identifier	def		3256280	1					
ANR	3256533	ExpressionStatement	assert ( ret != Z_STREAM_ERROR )	171:8:6681:6710	3256280	3	True				
ANR	3256534	CallExpression	assert ( ret != Z_STREAM_ERROR )		3256280	0					
ANR	3256535	Callee	assert		3256280	0					
ANR	3256536	Identifier	assert		3256280	0					
ANR	3256537	ArgumentList	ret != Z_STREAM_ERROR		3256280	1					
ANR	3256538	Argument	ret != Z_STREAM_ERROR		3256280	0					
ANR	3256539	EqualityExpression	ret != Z_STREAM_ERROR		3256280	0		!=			
ANR	3256540	Identifier	ret		3256280	0					
ANR	3256541	Identifier	Z_STREAM_ERROR		3256280	1					
ANR	3256542	ExpressionStatement	free ( blk )	172:8:6720:6729	3256280	4	True				
ANR	3256543	CallExpression	free ( blk )		3256280	0					
ANR	3256544	Callee	free		3256280	0					
ANR	3256545	Identifier	free		3256280	0					
ANR	3256546	ArgumentList	blk		3256280	1					
ANR	3256547	Argument	blk		3256280	0					
ANR	3256548	Identifier	blk		3256280	0					
ANR	3256549	ExpressionStatement	"fprintf ( stderr , ""%u bytes unused out of %u requested (all input)\\n"" , size - have , size )"	173:8:6739:6858	3256280	5	True				
ANR	3256550	CallExpression	"fprintf ( stderr , ""%u bytes unused out of %u requested (all input)\\n"" , size - have , size )"		3256280	0					
ANR	3256551	Callee	fprintf		3256280	0					
ANR	3256552	Identifier	fprintf		3256280	0					
ANR	3256553	ArgumentList	stderr		3256280	1					
ANR	3256554	Argument	stderr		3256280	0					
ANR	3256555	Identifier	stderr		3256280	0					
ANR	3256556	Argument	"""%u bytes unused out of %u requested (all input)\\n"""		3256280	1					
ANR	3256557	PrimaryExpression	"""%u bytes unused out of %u requested (all input)\\n"""		3256280	0					
ANR	3256558	Argument	size - have		3256280	2					
ANR	3256559	AdditiveExpression	size - have		3256280	0		-			
ANR	3256560	Identifier	size		3256280	0					
ANR	3256561	Identifier	have		3256280	1					
ANR	3256562	Argument	size		3256280	3					
ANR	3256563	Identifier	size		3256280	0					
ANR	3256564	ReturnStatement	return 0 ;	176:8:6868:6876	3256280	6	True				
ANR	3256565	PrimaryExpression	0		3256280	0					
ANR	3256566	ExpressionStatement	inf . zalloc = Z_NULL	180:4:6945:6964	3256280	22	True				
ANR	3256567	AssignmentExpression	inf . zalloc = Z_NULL		3256280	0		=			
ANR	3256568	MemberAccess	inf . zalloc		3256280	0					
ANR	3256569	Identifier	inf		3256280	0					
ANR	3256570	Identifier	zalloc		3256280	1					
ANR	3256571	Identifier	Z_NULL		3256280	1					
ANR	3256572	ExpressionStatement	inf . zfree = Z_NULL	181:4:6970:6988	3256280	23	True				
ANR	3256573	AssignmentExpression	inf . zfree = Z_NULL		3256280	0		=			
ANR	3256574	MemberAccess	inf . zfree		3256280	0					
ANR	3256575	Identifier	inf		3256280	0					
ANR	3256576	Identifier	zfree		3256280	1					
ANR	3256577	Identifier	Z_NULL		3256280	1					
ANR	3256578	ExpressionStatement	inf . opaque = Z_NULL	182:4:6994:7013	3256280	24	True				
ANR	3256579	AssignmentExpression	inf . opaque = Z_NULL		3256280	0		=			
ANR	3256580	MemberAccess	inf . opaque		3256280	0					
ANR	3256581	Identifier	inf		3256280	0					
ANR	3256582	Identifier	opaque		3256280	1					
ANR	3256583	Identifier	Z_NULL		3256280	1					
ANR	3256584	ExpressionStatement	inf . avail_in = 0	183:4:7019:7035	3256280	25	True				
ANR	3256585	AssignmentExpression	inf . avail_in = 0		3256280	0		=			
ANR	3256586	MemberAccess	inf . avail_in		3256280	0					
ANR	3256587	Identifier	inf		3256280	0					
ANR	3256588	Identifier	avail_in		3256280	1					
ANR	3256589	PrimaryExpression	0		3256280	1					
ANR	3256590	ExpressionStatement	inf . next_in = Z_NULL	184:4:7041:7061	3256280	26	True				
ANR	3256591	AssignmentExpression	inf . next_in = Z_NULL		3256280	0		=			
ANR	3256592	MemberAccess	inf . next_in		3256280	0					
ANR	3256593	Identifier	inf		3256280	0					
ANR	3256594	Identifier	next_in		3256280	1					
ANR	3256595	Identifier	Z_NULL		3256280	1					
ANR	3256596	ExpressionStatement	ret = inflateInit ( & inf )	185:4:7067:7090	3256280	27	True				
ANR	3256597	AssignmentExpression	ret = inflateInit ( & inf )		3256280	0		=			
ANR	3256598	Identifier	ret		3256280	0					
ANR	3256599	CallExpression	inflateInit ( & inf )		3256280	1					
ANR	3256600	Callee	inflateInit		3256280	0					
ANR	3256601	Identifier	inflateInit		3256280	0					
ANR	3256602	ArgumentList	& inf		3256280	1					
ANR	3256603	Argument	& inf		3256280	0					
ANR	3256604	UnaryOperationExpression	& inf		3256280	0					
ANR	3256605	UnaryOperator	&		3256280	0					
ANR	3256606	Identifier	inf		3256280	1					
ANR	3256607	ExpressionStatement	tmp = malloc ( size + EXCESS )	186:4:7096:7123	3256280	28	True				
ANR	3256608	AssignmentExpression	tmp = malloc ( size + EXCESS )		3256280	0		=			
ANR	3256609	Identifier	tmp		3256280	0					
ANR	3256610	CallExpression	malloc ( size + EXCESS )		3256280	1					
ANR	3256611	Callee	malloc		3256280	0					
ANR	3256612	Identifier	malloc		3256280	0					
ANR	3256613	ArgumentList	size + EXCESS		3256280	1					
ANR	3256614	Argument	size + EXCESS		3256280	0					
ANR	3256615	AdditiveExpression	size + EXCESS		3256280	0		+			
ANR	3256616	Identifier	size		3256280	0					
ANR	3256617	Identifier	EXCESS		3256280	1					
ANR	3256618	IfStatement	if ( ret != Z_OK || tmp == NULL )		3256280	29					
ANR	3256619	Condition	ret != Z_OK || tmp == NULL	187:8:7133:7158	3256280	0	True				
ANR	3256620	OrExpression	ret != Z_OK || tmp == NULL		3256280	0		||			
ANR	3256621	EqualityExpression	ret != Z_OK		3256280	0		!=			
ANR	3256622	Identifier	ret		3256280	0					
ANR	3256623	Identifier	Z_OK		3256280	1					
ANR	3256624	EqualityExpression	tmp == NULL		3256280	1		==			
ANR	3256625	Identifier	tmp		3256280	0					
ANR	3256626	Identifier	NULL		3256280	1					
ANR	3256627	ExpressionStatement	"quit ( ""out of memory"" )"	188:8:7169:7190	3256280	1	True				
ANR	3256628	CallExpression	"quit ( ""out of memory"" )"		3256280	0					
ANR	3256629	Callee	quit		3256280	0					
ANR	3256630	Identifier	quit		3256280	0					
ANR	3256631	ArgumentList	"""out of memory"""		3256280	1					
ANR	3256632	Argument	"""out of memory"""		3256280	0					
ANR	3256633	PrimaryExpression	"""out of memory"""		3256280	0					
ANR	3256634	ExpressionStatement	ret = deflateReset ( & def )	189:4:7196:7220	3256280	30	True				
ANR	3256635	AssignmentExpression	ret = deflateReset ( & def )		3256280	0		=			
ANR	3256636	Identifier	ret		3256280	0					
ANR	3256637	CallExpression	deflateReset ( & def )		3256280	1					
ANR	3256638	Callee	deflateReset		3256280	0					
ANR	3256639	Identifier	deflateReset		3256280	0					
ANR	3256640	ArgumentList	& def		3256280	1					
ANR	3256641	Argument	& def		3256280	0					
ANR	3256642	UnaryOperationExpression	& def		3256280	0					
ANR	3256643	UnaryOperator	&		3256280	0					
ANR	3256644	Identifier	def		3256280	1					
ANR	3256645	ExpressionStatement	assert ( ret != Z_STREAM_ERROR )	190:4:7226:7255	3256280	31	True				
ANR	3256646	CallExpression	assert ( ret != Z_STREAM_ERROR )		3256280	0					
ANR	3256647	Callee	assert		3256280	0					
ANR	3256648	Identifier	assert		3256280	0					
ANR	3256649	ArgumentList	ret != Z_STREAM_ERROR		3256280	1					
ANR	3256650	Argument	ret != Z_STREAM_ERROR		3256280	0					
ANR	3256651	EqualityExpression	ret != Z_STREAM_ERROR		3256280	0		!=			
ANR	3256652	Identifier	ret		3256280	0					
ANR	3256653	Identifier	Z_STREAM_ERROR		3256280	1					
ANR	3256654	ExpressionStatement	inf . avail_in = size + EXCESS	193:4:7321:7349	3256280	32	True				
ANR	3256655	AssignmentExpression	inf . avail_in = size + EXCESS		3256280	0		=			
ANR	3256656	MemberAccess	inf . avail_in		3256280	0					
ANR	3256657	Identifier	inf		3256280	0					
ANR	3256658	Identifier	avail_in		3256280	1					
ANR	3256659	AdditiveExpression	size + EXCESS		3256280	1		+			
ANR	3256660	Identifier	size		3256280	0					
ANR	3256661	Identifier	EXCESS		3256280	1					
ANR	3256662	ExpressionStatement	inf . next_in = blk	194:4:7355:7372	3256280	33	True				
ANR	3256663	AssignmentExpression	inf . next_in = blk		3256280	0		=			
ANR	3256664	MemberAccess	inf . next_in		3256280	0					
ANR	3256665	Identifier	inf		3256280	0					
ANR	3256666	Identifier	next_in		3256280	1					
ANR	3256667	Identifier	blk		3256280	1					
ANR	3256668	ExpressionStatement	def . avail_out = size + EXCESS	195:4:7378:7407	3256280	34	True				
ANR	3256669	AssignmentExpression	def . avail_out = size + EXCESS		3256280	0		=			
ANR	3256670	MemberAccess	def . avail_out		3256280	0					
ANR	3256671	Identifier	def		3256280	0					
ANR	3256672	Identifier	avail_out		3256280	1					
ANR	3256673	AdditiveExpression	size + EXCESS		3256280	1		+			
ANR	3256674	Identifier	size		3256280	0					
ANR	3256675	Identifier	EXCESS		3256280	1					
ANR	3256676	ExpressionStatement	def . next_out = tmp	196:4:7413:7431	3256280	35	True				
ANR	3256677	AssignmentExpression	def . next_out = tmp		3256280	0		=			
ANR	3256678	MemberAccess	def . next_out		3256280	0					
ANR	3256679	Identifier	def		3256280	0					
ANR	3256680	Identifier	next_out		3256280	1					
ANR	3256681	Identifier	tmp		3256280	1					
ANR	3256682	ExpressionStatement	"ret = recompress ( & inf , & def )"	197:4:7437:7465	3256280	36	True				
ANR	3256683	AssignmentExpression	"ret = recompress ( & inf , & def )"		3256280	0		=			
ANR	3256684	Identifier	ret		3256280	0					
ANR	3256685	CallExpression	"recompress ( & inf , & def )"		3256280	1					
ANR	3256686	Callee	recompress		3256280	0					
ANR	3256687	Identifier	recompress		3256280	0					
ANR	3256688	ArgumentList	& inf		3256280	1					
ANR	3256689	Argument	& inf		3256280	0					
ANR	3256690	UnaryOperationExpression	& inf		3256280	0					
ANR	3256691	UnaryOperator	&		3256280	0					
ANR	3256692	Identifier	inf		3256280	1					
ANR	3256693	Argument	& def		3256280	1					
ANR	3256694	UnaryOperationExpression	& def		3256280	0					
ANR	3256695	UnaryOperator	&		3256280	0					
ANR	3256696	Identifier	def		3256280	1					
ANR	3256697	IfStatement	if ( ret == Z_MEM_ERROR )		3256280	37					
ANR	3256698	Condition	ret == Z_MEM_ERROR	198:8:7475:7492	3256280	0	True				
ANR	3256699	EqualityExpression	ret == Z_MEM_ERROR		3256280	0		==			
ANR	3256700	Identifier	ret		3256280	0					
ANR	3256701	Identifier	Z_MEM_ERROR		3256280	1					
ANR	3256702	ExpressionStatement	"quit ( ""out of memory"" )"	199:8:7503:7524	3256280	1	True				
ANR	3256703	CallExpression	"quit ( ""out of memory"" )"		3256280	0					
ANR	3256704	Callee	quit		3256280	0					
ANR	3256705	Identifier	quit		3256280	0					
ANR	3256706	ArgumentList	"""out of memory"""		3256280	1					
ANR	3256707	Argument	"""out of memory"""		3256280	0					
ANR	3256708	PrimaryExpression	"""out of memory"""		3256280	0					
ANR	3256709	ExpressionStatement	ret = inflateReset ( & inf )	202:4:7571:7595	3256280	38	True				
ANR	3256710	AssignmentExpression	ret = inflateReset ( & inf )		3256280	0		=			
ANR	3256711	Identifier	ret		3256280	0					
ANR	3256712	CallExpression	inflateReset ( & inf )		3256280	1					
ANR	3256713	Callee	inflateReset		3256280	0					
ANR	3256714	Identifier	inflateReset		3256280	0					
ANR	3256715	ArgumentList	& inf		3256280	1					
ANR	3256716	Argument	& inf		3256280	0					
ANR	3256717	UnaryOperationExpression	& inf		3256280	0					
ANR	3256718	UnaryOperator	&		3256280	0					
ANR	3256719	Identifier	inf		3256280	1					
ANR	3256720	ExpressionStatement	assert ( ret != Z_STREAM_ERROR )	203:4:7601:7630	3256280	39	True				
ANR	3256721	CallExpression	assert ( ret != Z_STREAM_ERROR )		3256280	0					
ANR	3256722	Callee	assert		3256280	0					
ANR	3256723	Identifier	assert		3256280	0					
ANR	3256724	ArgumentList	ret != Z_STREAM_ERROR		3256280	1					
ANR	3256725	Argument	ret != Z_STREAM_ERROR		3256280	0					
ANR	3256726	EqualityExpression	ret != Z_STREAM_ERROR		3256280	0		!=			
ANR	3256727	Identifier	ret		3256280	0					
ANR	3256728	Identifier	Z_STREAM_ERROR		3256280	1					
ANR	3256729	ExpressionStatement	ret = deflateReset ( & def )	204:4:7636:7660	3256280	40	True				
ANR	3256730	AssignmentExpression	ret = deflateReset ( & def )		3256280	0		=			
ANR	3256731	Identifier	ret		3256280	0					
ANR	3256732	CallExpression	deflateReset ( & def )		3256280	1					
ANR	3256733	Callee	deflateReset		3256280	0					
ANR	3256734	Identifier	deflateReset		3256280	0					
ANR	3256735	ArgumentList	& def		3256280	1					
ANR	3256736	Argument	& def		3256280	0					
ANR	3256737	UnaryOperationExpression	& def		3256280	0					
ANR	3256738	UnaryOperator	&		3256280	0					
ANR	3256739	Identifier	def		3256280	1					
ANR	3256740	ExpressionStatement	assert ( ret != Z_STREAM_ERROR )	205:4:7666:7695	3256280	41	True				
ANR	3256741	CallExpression	assert ( ret != Z_STREAM_ERROR )		3256280	0					
ANR	3256742	Callee	assert		3256280	0					
ANR	3256743	Identifier	assert		3256280	0					
ANR	3256744	ArgumentList	ret != Z_STREAM_ERROR		3256280	1					
ANR	3256745	Argument	ret != Z_STREAM_ERROR		3256280	0					
ANR	3256746	EqualityExpression	ret != Z_STREAM_ERROR		3256280	0		!=			
ANR	3256747	Identifier	ret		3256280	0					
ANR	3256748	Identifier	Z_STREAM_ERROR		3256280	1					
ANR	3256749	ExpressionStatement	inf . avail_in = size - MARGIN	208:4:7766:7794	3256280	42	True				
ANR	3256750	AssignmentExpression	inf . avail_in = size - MARGIN		3256280	0		=			
ANR	3256751	MemberAccess	inf . avail_in		3256280	0					
ANR	3256752	Identifier	inf		3256280	0					
ANR	3256753	Identifier	avail_in		3256280	1					
ANR	3256754	AdditiveExpression	size - MARGIN		3256280	1		-			
ANR	3256755	Identifier	size		3256280	0					
ANR	3256756	Identifier	MARGIN		3256280	1					
ANR	3256757	ExpressionStatement	inf . next_in = tmp	209:4:7836:7853	3256280	43	True				
ANR	3256758	AssignmentExpression	inf . next_in = tmp		3256280	0		=			
ANR	3256759	MemberAccess	inf . next_in		3256280	0					
ANR	3256760	Identifier	inf		3256280	0					
ANR	3256761	Identifier	next_in		3256280	1					
ANR	3256762	Identifier	tmp		3256280	1					
ANR	3256763	ExpressionStatement	def . avail_out = size	210:4:7859:7879	3256280	44	True				
ANR	3256764	AssignmentExpression	def . avail_out = size		3256280	0		=			
ANR	3256765	MemberAccess	def . avail_out		3256280	0					
ANR	3256766	Identifier	def		3256280	0					
ANR	3256767	Identifier	avail_out		3256280	1					
ANR	3256768	Identifier	size		3256280	1					
ANR	3256769	ExpressionStatement	def . next_out = blk	211:4:7885:7903	3256280	45	True				
ANR	3256770	AssignmentExpression	def . next_out = blk		3256280	0		=			
ANR	3256771	MemberAccess	def . next_out		3256280	0					
ANR	3256772	Identifier	def		3256280	0					
ANR	3256773	Identifier	next_out		3256280	1					
ANR	3256774	Identifier	blk		3256280	1					
ANR	3256775	ExpressionStatement	"ret = recompress ( & inf , & def )"	212:4:7909:7937	3256280	46	True				
ANR	3256776	AssignmentExpression	"ret = recompress ( & inf , & def )"		3256280	0		=			
ANR	3256777	Identifier	ret		3256280	0					
ANR	3256778	CallExpression	"recompress ( & inf , & def )"		3256280	1					
ANR	3256779	Callee	recompress		3256280	0					
ANR	3256780	Identifier	recompress		3256280	0					
ANR	3256781	ArgumentList	& inf		3256280	1					
ANR	3256782	Argument	& inf		3256280	0					
ANR	3256783	UnaryOperationExpression	& inf		3256280	0					
ANR	3256784	UnaryOperator	&		3256280	0					
ANR	3256785	Identifier	inf		3256280	1					
ANR	3256786	Argument	& def		3256280	1					
ANR	3256787	UnaryOperationExpression	& def		3256280	0					
ANR	3256788	UnaryOperator	&		3256280	0					
ANR	3256789	Identifier	def		3256280	1					
ANR	3256790	IfStatement	if ( ret == Z_MEM_ERROR )		3256280	47					
ANR	3256791	Condition	ret == Z_MEM_ERROR	213:8:7947:7964	3256280	0	True				
ANR	3256792	EqualityExpression	ret == Z_MEM_ERROR		3256280	0		==			
ANR	3256793	Identifier	ret		3256280	0					
ANR	3256794	Identifier	Z_MEM_ERROR		3256280	1					
ANR	3256795	ExpressionStatement	"quit ( ""out of memory"" )"	214:8:7975:7996	3256280	1	True				
ANR	3256796	CallExpression	"quit ( ""out of memory"" )"		3256280	0					
ANR	3256797	Callee	quit		3256280	0					
ANR	3256798	Identifier	quit		3256280	0					
ANR	3256799	ArgumentList	"""out of memory"""		3256280	1					
ANR	3256800	Argument	"""out of memory"""		3256280	0					
ANR	3256801	PrimaryExpression	"""out of memory"""		3256280	0					
ANR	3256802	ExpressionStatement	assert ( ret == Z_STREAM_END )	215:4:8002:8029	3256280	48	True				
ANR	3256803	CallExpression	assert ( ret == Z_STREAM_END )		3256280	0					
ANR	3256804	Callee	assert		3256280	0					
ANR	3256805	Identifier	assert		3256280	0					
ANR	3256806	ArgumentList	ret == Z_STREAM_END		3256280	1					
ANR	3256807	Argument	ret == Z_STREAM_END		3256280	0					
ANR	3256808	EqualityExpression	ret == Z_STREAM_END		3256280	0		==			
ANR	3256809	Identifier	ret		3256280	0					
ANR	3256810	Identifier	Z_STREAM_END		3256280	1					
ANR	3256811	ExpressionStatement	have = size - def . avail_out	218:4:8112:8139	3256280	49	True				
ANR	3256812	AssignmentExpression	have = size - def . avail_out		3256280	0		=			
ANR	3256813	Identifier	have		3256280	0					
ANR	3256814	AdditiveExpression	size - def . avail_out		3256280	1		-			
ANR	3256815	Identifier	size		3256280	0					
ANR	3256816	MemberAccess	def . avail_out		3256280	1					
ANR	3256817	Identifier	def		3256280	0					
ANR	3256818	Identifier	avail_out		3256280	1					
ANR	3256819	IfStatement	"if ( fwrite ( blk , 1 , have , stdout ) != have || ferror ( stdout ) )"		3256280	50					
ANR	3256820	Condition	"fwrite ( blk , 1 , have , stdout ) != have || ferror ( stdout )"	219:8:8149:8202	3256280	0	True				
ANR	3256821	OrExpression	"fwrite ( blk , 1 , have , stdout ) != have || ferror ( stdout )"		3256280	0		||			
ANR	3256822	EqualityExpression	"fwrite ( blk , 1 , have , stdout ) != have"		3256280	0		!=			
ANR	3256823	CallExpression	"fwrite ( blk , 1 , have , stdout )"		3256280	0					
ANR	3256824	Callee	fwrite		3256280	0					
ANR	3256825	Identifier	fwrite		3256280	0					
ANR	3256826	ArgumentList	blk		3256280	1					
ANR	3256827	Argument	blk		3256280	0					
ANR	3256828	Identifier	blk		3256280	0					
ANR	3256829	Argument	1		3256280	1					
ANR	3256830	PrimaryExpression	1		3256280	0					
ANR	3256831	Argument	have		3256280	2					
ANR	3256832	Identifier	have		3256280	0					
ANR	3256833	Argument	stdout		3256280	3					
ANR	3256834	Identifier	stdout		3256280	0					
ANR	3256835	Identifier	have		3256280	1					
ANR	3256836	CallExpression	ferror ( stdout )		3256280	1					
ANR	3256837	Callee	ferror		3256280	0					
ANR	3256838	Identifier	ferror		3256280	0					
ANR	3256839	ArgumentList	stdout		3256280	1					
ANR	3256840	Argument	stdout		3256280	0					
ANR	3256841	Identifier	stdout		3256280	0					
ANR	3256842	ExpressionStatement	"quit ( ""error writing output"" )"	220:8:8213:8241	3256280	1	True				
ANR	3256843	CallExpression	"quit ( ""error writing output"" )"		3256280	0					
ANR	3256844	Callee	quit		3256280	0					
ANR	3256845	Identifier	quit		3256280	0					
ANR	3256846	ArgumentList	"""error writing output"""		3256280	1					
ANR	3256847	Argument	"""error writing output"""		3256280	0					
ANR	3256848	PrimaryExpression	"""error writing output"""		3256280	0					
ANR	3256849	ExpressionStatement	free ( tmp )	223:4:8295:8304	3256280	51	True				
ANR	3256850	CallExpression	free ( tmp )		3256280	0					
ANR	3256851	Callee	free		3256280	0					
ANR	3256852	Identifier	free		3256280	0					
ANR	3256853	ArgumentList	tmp		3256280	1					
ANR	3256854	Argument	tmp		3256280	0					
ANR	3256855	Identifier	tmp		3256280	0					
ANR	3256856	ExpressionStatement	ret = inflateEnd ( & inf )	224:4:8310:8332	3256280	52	True				
ANR	3256857	AssignmentExpression	ret = inflateEnd ( & inf )		3256280	0		=			
ANR	3256858	Identifier	ret		3256280	0					
ANR	3256859	CallExpression	inflateEnd ( & inf )		3256280	1					
ANR	3256860	Callee	inflateEnd		3256280	0					
ANR	3256861	Identifier	inflateEnd		3256280	0					
ANR	3256862	ArgumentList	& inf		3256280	1					
ANR	3256863	Argument	& inf		3256280	0					
ANR	3256864	UnaryOperationExpression	& inf		3256280	0					
ANR	3256865	UnaryOperator	&		3256280	0					
ANR	3256866	Identifier	inf		3256280	1					
ANR	3256867	ExpressionStatement	assert ( ret != Z_STREAM_ERROR )	225:4:8338:8367	3256280	53	True				
ANR	3256868	CallExpression	assert ( ret != Z_STREAM_ERROR )		3256280	0					
ANR	3256869	Callee	assert		3256280	0					
ANR	3256870	Identifier	assert		3256280	0					
ANR	3256871	ArgumentList	ret != Z_STREAM_ERROR		3256280	1					
ANR	3256872	Argument	ret != Z_STREAM_ERROR		3256280	0					
ANR	3256873	EqualityExpression	ret != Z_STREAM_ERROR		3256280	0		!=			
ANR	3256874	Identifier	ret		3256280	0					
ANR	3256875	Identifier	Z_STREAM_ERROR		3256280	1					
ANR	3256876	ExpressionStatement	ret = deflateEnd ( & def )	226:4:8373:8395	3256280	54	True				
ANR	3256877	AssignmentExpression	ret = deflateEnd ( & def )		3256280	0		=			
ANR	3256878	Identifier	ret		3256280	0					
ANR	3256879	CallExpression	deflateEnd ( & def )		3256280	1					
ANR	3256880	Callee	deflateEnd		3256280	0					
ANR	3256881	Identifier	deflateEnd		3256280	0					
ANR	3256882	ArgumentList	& def		3256280	1					
ANR	3256883	Argument	& def		3256280	0					
ANR	3256884	UnaryOperationExpression	& def		3256280	0					
ANR	3256885	UnaryOperator	&		3256280	0					
ANR	3256886	Identifier	def		3256280	1					
ANR	3256887	ExpressionStatement	assert ( ret != Z_STREAM_ERROR )	227:4:8401:8430	3256280	55	True				
ANR	3256888	CallExpression	assert ( ret != Z_STREAM_ERROR )		3256280	0					
ANR	3256889	Callee	assert		3256280	0					
ANR	3256890	Identifier	assert		3256280	0					
ANR	3256891	ArgumentList	ret != Z_STREAM_ERROR		3256280	1					
ANR	3256892	Argument	ret != Z_STREAM_ERROR		3256280	0					
ANR	3256893	EqualityExpression	ret != Z_STREAM_ERROR		3256280	0		!=			
ANR	3256894	Identifier	ret		3256280	0					
ANR	3256895	Identifier	Z_STREAM_ERROR		3256280	1					
ANR	3256896	ExpressionStatement	free ( blk )	228:4:8436:8445	3256280	56	True				
ANR	3256897	CallExpression	free ( blk )		3256280	0					
ANR	3256898	Callee	free		3256280	0					
ANR	3256899	Identifier	free		3256280	0					
ANR	3256900	ArgumentList	blk		3256280	1					
ANR	3256901	Argument	blk		3256280	0					
ANR	3256902	Identifier	blk		3256280	0					
ANR	3256903	ExpressionStatement	"fprintf ( stderr , ""%u bytes unused out of %u requested (%lu input)\\n"" , size - have , size , def . total_in )"	229:4:8451:8576	3256280	57	True				
ANR	3256904	CallExpression	"fprintf ( stderr , ""%u bytes unused out of %u requested (%lu input)\\n"" , size - have , size , def . total_in )"		3256280	0					
ANR	3256905	Callee	fprintf		3256280	0					
ANR	3256906	Identifier	fprintf		3256280	0					
ANR	3256907	ArgumentList	stderr		3256280	1					
ANR	3256908	Argument	stderr		3256280	0					
ANR	3256909	Identifier	stderr		3256280	0					
ANR	3256910	Argument	"""%u bytes unused out of %u requested (%lu input)\\n"""		3256280	1					
ANR	3256911	PrimaryExpression	"""%u bytes unused out of %u requested (%lu input)\\n"""		3256280	0					
ANR	3256912	Argument	size - have		3256280	2					
ANR	3256913	AdditiveExpression	size - have		3256280	0		-			
ANR	3256914	Identifier	size		3256280	0					
ANR	3256915	Identifier	have		3256280	1					
ANR	3256916	Argument	size		3256280	3					
ANR	3256917	Identifier	size		3256280	0					
ANR	3256918	Argument	def . total_in		3256280	4					
ANR	3256919	MemberAccess	def . total_in		3256280	0					
ANR	3256920	Identifier	def		3256280	0					
ANR	3256921	Identifier	total_in		3256280	1					
ANR	3256922	ReturnStatement	return 0 ;	232:4:8582:8590	3256280	58	True				
ANR	3256923	PrimaryExpression	0		3256280	0					
ANR	3256924	ReturnType	int		3256280	1					
ANR	3256925	Identifier	main		3256280	2					
ANR	3256926	ParameterList	"int argc , char * * argv"		3256280	3					
ANR	3256927	Parameter	int argc	127:9:5000:5007	3256280	0	True				
ANR	3256928	ParameterType	int		3256280	0					
ANR	3256929	Identifier	argc		3256280	1					
ANR	3256930	Parameter	char * * argv	127:19:5010:5020	3256280	1	True				
ANR	3256931	ParameterType	char * *		3256280	0					
ANR	3256932	Identifier	argv		3256280	1					
ANR	3256933	CFGEntryNode	ENTRY		3256280		True				
ANR	3256934	CFGExitNode	EXIT		3256280		True				
ANR	3256935	Symbol	Z_STREAM_ERROR		3256280						
ANR	3256936	Symbol	stdin		3256280						
ANR	3256937	Symbol	def		3256280						
ANR	3256938	Symbol	stdout		3256280						
ANR	3256939	Symbol	Z_MEM_ERROR		3256280						
ANR	3256940	Symbol	* argv		3256280						
ANR	3256941	Symbol	partcompress		3256280						
ANR	3256942	Symbol	def . zalloc		3256280						
ANR	3256943	Symbol	deflateEnd		3256280						
ANR	3256944	Symbol	inf . avail_in		3256280						
ANR	3256945	Symbol	inf . zfree		3256280						
ANR	3256946	Symbol	tmp		3256280						
ANR	3256947	Symbol	deflateReset		3256280						
ANR	3256948	Symbol	Z_STREAM_END		3256280						
ANR	3256949	Symbol	* * argv		3256280						
ANR	3256950	Symbol	ret		3256280						
ANR	3256951	Symbol	Z_ERRNO		3256280						
ANR	3256952	Symbol	NULL		3256280						
ANR	3256953	Symbol	inflateEnd		3256280						
ANR	3256954	Symbol	deflateInit		3256280						
ANR	3256955	Symbol	& def		3256280						
ANR	3256956	Symbol	stderr		3256280						
ANR	3256957	Symbol	ferror		3256280						
ANR	3256958	Symbol	MARGIN		3256280						
ANR	3256959	Symbol	size		3256280						
ANR	3256960	Symbol	Z_NULL		3256280						
ANR	3256961	Symbol	EXCESS		3256280						
ANR	3256962	Symbol	inf . opaque		3256280						
ANR	3256963	Symbol	& inf		3256280						
ANR	3256964	Symbol	def . zfree		3256280						
ANR	3256965	Symbol	inflateInit		3256280						
ANR	3256966	Symbol	Z_OK		3256280						
ANR	3256967	Symbol	argv		3256280						
ANR	3256968	Symbol	strtol		3256280						
ANR	3256969	Symbol	def . avail_out		3256280						
ANR	3256970	Symbol	have		3256280						
ANR	3256971	Symbol	argc		3256280						
ANR	3256972	Symbol	blk		3256280						
ANR	3256973	Symbol	inf		3256280						
ANR	3256974	Symbol	malloc		3256280						
ANR	3256975	Symbol	def . opaque		3256280						
ANR	3256976	Symbol	inf . zalloc		3256280						
ANR	3256977	Symbol	def . total_in		3256280						
ANR	3256978	Symbol	fwrite		3256280						
ANR	3256979	Symbol	inf . next_in		3256280						
ANR	3256980	Symbol	recompress		3256280						
ANR	3256981	Symbol	Z_DEFAULT_COMPRESSION		3256280						
ANR	3256982	Symbol	def . next_out		3256280						
ANR	3256983	Symbol	inflateReset		3256280						
