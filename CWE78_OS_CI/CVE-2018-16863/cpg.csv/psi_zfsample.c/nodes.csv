command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9119580	File	data/converged/CVE-2018-16863_ghostpdl/psi_zfsample.c								
ANR	9119581	ClassDef	gs_sampled_data_enum_s	55:0:1446:1602							
ANR	9119582	DeclStmt									
ANR	9119583	Decl							int	int [ MAX_NUM_INPUTS ]	indexes
ANR	9119584	DeclStmt									
ANR	9119585	Decl							int	int	o_stack_depth
ANR	9119586	DeclStmt									
ANR	9119587	Decl							gs_function_t	gs_function_t *	pfn
ANR	9119588	DeclStmt									
ANR	9119589	Decl							struct gs_sampled_data_enum_s	struct gs_sampled_data_enum_s	gs_sampled_data_enum
ANR	9119590	DeclStmt									
ANR	9119591	Decl							int	"int ( const ref * pdict , gs_function_Sd_params_t * params , gs_memory_t * mem )"	cube_build_func0
ANR	9119592	DeclStmt									
ANR	9119593	Decl							int	"int ( i_ctx_t * i_ctx_p , gs_function_t * pfn , const ref * pproc , int ( * finish_proc ) ( i_ctx_t * ) , gs_memory_t * mem )"	sampled_data_setup
ANR	9119594	DeclStmt									
ANR	9119595	Decl							int	int ( i_ctx_t * i_ctx_p )	sampled_data_sample
ANR	9119596	DeclStmt									
ANR	9119597	Decl							int	int ( i_ctx_t * i_ctx_p )	sampled_data_continue
ANR	9119598	DeclStmt									
ANR	9119599	Decl							int	int ( i_ctx_t * i_ctx_p )	sampled_data_finish
ANR	9119600	DeclStmt									
ANR	9119601	Decl							gs_sampled_data_enum	"gs_sampled_data_enum * ( gs_memory_t * mem , client_name_t cname )"	gs_sampled_data_enum_alloc
ANR	9119602	Function	zbuildsampledfunction	94:0:2886:4115							
ANR	9119603	FunctionDef	zbuildsampledfunction (i_ctx_t * i_ctx_p)		9119602	0					
ANR	9119604	CompoundStatement		96:0:2937:4115	9119602	0					
ANR	9119605	IdentifierDeclStatement	os_ptr op = osp ;	97:4:2943:2958	9119602	0	True				
ANR	9119606	IdentifierDecl	op = osp		9119602	0					
ANR	9119607	IdentifierDeclType	os_ptr		9119602	0					
ANR	9119608	Identifier	op		9119602	1					
ANR	9119609	AssignmentExpression	op = osp		9119602	2		=			
ANR	9119610	Identifier	osp		9119602	0					
ANR	9119611	Identifier	osp		9119602	1					
ANR	9119612	IdentifierDeclStatement	const ref * pdict = op ;	98:4:2964:2986	9119602	1	True				
ANR	9119613	IdentifierDecl	* pdict = op		9119602	0					
ANR	9119614	IdentifierDeclType	const ref *		9119602	0					
ANR	9119615	Identifier	pdict		9119602	1					
ANR	9119616	AssignmentExpression	* pdict = op		9119602	2		=			
ANR	9119617	Identifier	op		9119602	0					
ANR	9119618	Identifier	op		9119602	1					
ANR	9119619	IdentifierDeclStatement	ref * pfunc ;	99:4:2992:3003	9119602	2	True				
ANR	9119620	IdentifierDecl	* pfunc		9119602	0					
ANR	9119621	IdentifierDeclType	ref *		9119602	0					
ANR	9119622	Identifier	pfunc		9119602	1					
ANR	9119623	IdentifierDeclStatement	int code = 0 ;	100:4:3009:3021	9119602	3	True				
ANR	9119624	IdentifierDecl	code = 0		9119602	0					
ANR	9119625	IdentifierDeclType	int		9119602	0					
ANR	9119626	Identifier	code		9119602	1					
ANR	9119627	AssignmentExpression	code = 0		9119602	2		=			
ANR	9119628	Identifier	code		9119602	0					
ANR	9119629	PrimaryExpression	0		9119602	1					
ANR	9119630	IdentifierDeclStatement	gs_function_t * pfn ;	101:4:3027:3045	9119602	4	True				
ANR	9119631	IdentifierDecl	* pfn		9119602	0					
ANR	9119632	IdentifierDeclType	gs_function_t *		9119602	0					
ANR	9119633	Identifier	pfn		9119602	1					
ANR	9119634	IdentifierDeclStatement	gs_function_Sd_params_t params = { 0 } ;	102:4:3051:3087	9119602	5	True				
ANR	9119635	IdentifierDecl	params = { 0 }		9119602	0					
ANR	9119636	IdentifierDeclType	gs_function_Sd_params_t		9119602	0					
ANR	9119637	Identifier	params		9119602	1					
ANR	9119638	AssignmentExpression	params = { 0 }		9119602	2		=			
ANR	9119639	Identifier	params		9119602	0					
ANR	9119640	InitializerList	0		9119602	1					
ANR	9119641	PrimaryExpression	0		9119602	0					
ANR	9119642	ExpressionStatement	"check_type ( * pdict , t_dictionary )"	104:4:3094:3126	9119602	6	True				
ANR	9119643	CallExpression	"check_type ( * pdict , t_dictionary )"		9119602	0					
ANR	9119644	Callee	check_type		9119602	0					
ANR	9119645	Identifier	check_type		9119602	0					
ANR	9119646	ArgumentList	* pdict		9119602	1					
ANR	9119647	Argument	* pdict		9119602	0					
ANR	9119648	UnaryOperationExpression	* pdict		9119602	0					
ANR	9119649	UnaryOperator	*		9119602	0					
ANR	9119650	Identifier	pdict		9119602	1					
ANR	9119651	Argument	t_dictionary		9119602	1					
ANR	9119652	Identifier	t_dictionary		9119602	0					
ANR	9119653	IfStatement	"if ( dict_find_string ( pdict , ""Function"" , & pfunc ) <= 0 )"		9119602	7					
ANR	9119654	Condition	"dict_find_string ( pdict , ""Function"" , & pfunc ) <= 0"	108:8:3189:3236	9119602	0	True				
ANR	9119655	RelationalExpression	"dict_find_string ( pdict , ""Function"" , & pfunc ) <= 0"		9119602	0		<=			
ANR	9119656	CallExpression	"dict_find_string ( pdict , ""Function"" , & pfunc )"		9119602	0					
ANR	9119657	Callee	dict_find_string		9119602	0					
ANR	9119658	Identifier	dict_find_string		9119602	0					
ANR	9119659	ArgumentList	pdict		9119602	1					
ANR	9119660	Argument	pdict		9119602	0					
ANR	9119661	Identifier	pdict		9119602	0					
ANR	9119662	Argument	"""Function"""		9119602	1					
ANR	9119663	PrimaryExpression	"""Function"""		9119602	0					
ANR	9119664	Argument	& pfunc		9119602	2					
ANR	9119665	UnaryOperationExpression	& pfunc		9119602	0					
ANR	9119666	UnaryOperator	&		9119602	0					
ANR	9119667	Identifier	pfunc		9119602	1					
ANR	9119668	PrimaryExpression	0		9119602	1					
ANR	9119669	ExpressionStatement	return_error ( gs_error_rangecheck )	109:8:3247:3280	9119602	1	True				
ANR	9119670	CallExpression	return_error ( gs_error_rangecheck )		9119602	0					
ANR	9119671	Callee	return_error		9119602	0					
ANR	9119672	Identifier	return_error		9119602	0					
ANR	9119673	ArgumentList	gs_error_rangecheck		9119602	1					
ANR	9119674	Argument	gs_error_rangecheck		9119602	0					
ANR	9119675	Identifier	gs_error_rangecheck		9119602	0					
ANR	9119676	ExpressionStatement	check_proc ( * pfunc )	110:4:3286:3304	9119602	8	True				
ANR	9119677	CallExpression	check_proc ( * pfunc )		9119602	0					
ANR	9119678	Callee	check_proc		9119602	0					
ANR	9119679	Identifier	check_proc		9119602	0					
ANR	9119680	ArgumentList	* pfunc		9119602	1					
ANR	9119681	Argument	* pfunc		9119602	0					
ANR	9119682	UnaryOperationExpression	* pfunc		9119602	0					
ANR	9119683	UnaryOperator	*		9119602	0					
ANR	9119684	Identifier	pfunc		9119602	1					
ANR	9119685	ExpressionStatement	"code = cube_build_func0 ( pdict , & params , imemory )"	114:4:3379:3427	9119602	9	True				
ANR	9119686	AssignmentExpression	"code = cube_build_func0 ( pdict , & params , imemory )"		9119602	0		=			
ANR	9119687	Identifier	code		9119602	0					
ANR	9119688	CallExpression	"cube_build_func0 ( pdict , & params , imemory )"		9119602	1					
ANR	9119689	Callee	cube_build_func0		9119602	0					
ANR	9119690	Identifier	cube_build_func0		9119602	0					
ANR	9119691	ArgumentList	pdict		9119602	1					
ANR	9119692	Argument	pdict		9119602	0					
ANR	9119693	Identifier	pdict		9119602	0					
ANR	9119694	Argument	& params		9119602	1					
ANR	9119695	UnaryOperationExpression	& params		9119602	0					
ANR	9119696	UnaryOperator	&		9119602	0					
ANR	9119697	Identifier	params		9119602	1					
ANR	9119698	Argument	imemory		9119602	2					
ANR	9119699	Identifier	imemory		9119602	0					
ANR	9119700	IfStatement	if ( code < 0 )		9119602	10					
ANR	9119701	Condition	code < 0	115:8:3437:3444	9119602	0	True				
ANR	9119702	RelationalExpression	code < 0		9119602	0		<			
ANR	9119703	Identifier	code		9119602	0					
ANR	9119704	PrimaryExpression	0		9119602	1					
ANR	9119705	ReturnStatement	return code ;	116:8:3455:3466	9119602	1	True				
ANR	9119706	Identifier	code		9119602	0					
ANR	9119707	ExpressionStatement	"code = gs_function_Sd_init ( & pfn , & params , imemory )"	125:4:3882:3932	9119602	11	True				
ANR	9119708	AssignmentExpression	"code = gs_function_Sd_init ( & pfn , & params , imemory )"		9119602	0		=			
ANR	9119709	Identifier	code		9119602	0					
ANR	9119710	CallExpression	"gs_function_Sd_init ( & pfn , & params , imemory )"		9119602	1					
ANR	9119711	Callee	gs_function_Sd_init		9119602	0					
ANR	9119712	Identifier	gs_function_Sd_init		9119602	0					
ANR	9119713	ArgumentList	& pfn		9119602	1					
ANR	9119714	Argument	& pfn		9119602	0					
ANR	9119715	UnaryOperationExpression	& pfn		9119602	0					
ANR	9119716	UnaryOperator	&		9119602	0					
ANR	9119717	Identifier	pfn		9119602	1					
ANR	9119718	Argument	& params		9119602	1					
ANR	9119719	UnaryOperationExpression	& params		9119602	0					
ANR	9119720	UnaryOperator	&		9119602	0					
ANR	9119721	Identifier	params		9119602	1					
ANR	9119722	Argument	imemory		9119602	2					
ANR	9119723	Identifier	imemory		9119602	0					
ANR	9119724	IfStatement	if ( code < 0 )		9119602	12					
ANR	9119725	Condition	code < 0	126:8:3942:3949	9119602	0	True				
ANR	9119726	RelationalExpression	code < 0		9119602	0		<			
ANR	9119727	Identifier	code		9119602	0					
ANR	9119728	PrimaryExpression	0		9119602	1					
ANR	9119729	ReturnStatement	return code ;	127:8:3960:3971	9119602	1	True				
ANR	9119730	Identifier	code		9119602	0					
ANR	9119731	ReturnStatement	"return sampled_data_setup ( i_ctx_p , pfn , pfunc , sampled_data_finish , imemory ) ;"	131:4:4037:4113	9119602	13	True				
ANR	9119732	CallExpression	"sampled_data_setup ( i_ctx_p , pfn , pfunc , sampled_data_finish , imemory )"		9119602	0					
ANR	9119733	Callee	sampled_data_setup		9119602	0					
ANR	9119734	Identifier	sampled_data_setup		9119602	0					
ANR	9119735	ArgumentList	i_ctx_p		9119602	1					
ANR	9119736	Argument	i_ctx_p		9119602	0					
ANR	9119737	Identifier	i_ctx_p		9119602	0					
ANR	9119738	Argument	pfn		9119602	1					
ANR	9119739	Identifier	pfn		9119602	0					
ANR	9119740	Argument	pfunc		9119602	2					
ANR	9119741	Identifier	pfunc		9119602	0					
ANR	9119742	Argument	sampled_data_finish		9119602	3					
ANR	9119743	Identifier	sampled_data_finish		9119602	0					
ANR	9119744	Argument	imemory		9119602	4					
ANR	9119745	Identifier	imemory		9119602	0					
ANR	9119746	ReturnType	static int		9119602	1					
ANR	9119747	Identifier	zbuildsampledfunction		9119602	2					
ANR	9119748	ParameterList	i_ctx_t * i_ctx_p		9119602	3					
ANR	9119749	Parameter	i_ctx_t * i_ctx_p	95:22:2919:2934	9119602	0	True				
ANR	9119750	ParameterType	i_ctx_t *		9119602	0					
ANR	9119751	Identifier	i_ctx_p		9119602	1					
ANR	9119752	CFGEntryNode	ENTRY		9119602		True				
ANR	9119753	CFGExitNode	EXIT		9119602		True				
ANR	9119754	Symbol	op		9119602						
ANR	9119755	Symbol	code		9119602						
ANR	9119756	Symbol	t_dictionary		9119602						
ANR	9119757	Symbol	dict_find_string		9119602						
ANR	9119758	Symbol	gs_error_rangecheck		9119602						
ANR	9119759	Symbol	gs_function_Sd_init		9119602						
ANR	9119760	Symbol	* pfunc		9119602						
ANR	9119761	Symbol	sampled_data_setup		9119602						
ANR	9119762	Symbol	* pdict		9119602						
ANR	9119763	Symbol	params		9119602						
ANR	9119764	Symbol	osp		9119602						
ANR	9119765	Symbol	pfunc		9119602						
ANR	9119766	Symbol	cube_build_func0		9119602						
ANR	9119767	Symbol	i_ctx_p		9119602						
ANR	9119768	Symbol	& pfunc		9119602						
ANR	9119769	Symbol	pfn		9119602						
ANR	9119770	Symbol	& pfn		9119602						
ANR	9119771	Symbol	imemory		9119602						
ANR	9119772	Symbol	sampled_data_finish		9119602						
ANR	9119773	Symbol	pdict		9119602						
ANR	9119774	Symbol	& params		9119602						
ANR	9119775	Function	valid_cube_size	142:0:4390:4725							
ANR	9119776	FunctionDef	"valid_cube_size (int num_inputs , int num_outputs , int sample_size , const int Size [ ])"		9119775	0					
ANR	9119777	CompoundStatement		144:0:4486:4725	9119775	0					
ANR	9119778	IdentifierDeclStatement	"int i , total_size = num_outputs * sample_size ;"	145:4:4492:4537	9119775	0	True				
ANR	9119779	IdentifierDecl	i		9119775	0					
ANR	9119780	IdentifierDeclType	int		9119775	0					
ANR	9119781	Identifier	i		9119775	1					
ANR	9119782	IdentifierDecl	total_size = num_outputs * sample_size		9119775	1					
ANR	9119783	IdentifierDeclType	int		9119775	0					
ANR	9119784	Identifier	total_size		9119775	1					
ANR	9119785	AssignmentExpression	total_size = num_outputs * sample_size		9119775	2		=			
ANR	9119786	Identifier	total_size		9119775	0					
ANR	9119787	MultiplicativeExpression	num_outputs * sample_size		9119775	1		*			
ANR	9119788	Identifier	num_outputs		9119775	0					
ANR	9119789	Identifier	sample_size		9119775	1					
ANR	9119790	ForStatement	for ( i = 0 ; i < num_inputs ; i ++ )		9119775	1					
ANR	9119791	ForInit	i = 0 ;	147:9:4549:4554	9119775	0	True				
ANR	9119792	AssignmentExpression	i = 0		9119775	0		=			
ANR	9119793	Identifier	i		9119775	0					
ANR	9119794	PrimaryExpression	0		9119775	1					
ANR	9119795	Condition	i < num_inputs	147:16:4556:4569	9119775	1	True				
ANR	9119796	RelationalExpression	i < num_inputs		9119775	0		<			
ANR	9119797	Identifier	i		9119775	0					
ANR	9119798	Identifier	num_inputs		9119775	1					
ANR	9119799	PostIncDecOperationExpression	i ++	147:32:4572:4574	9119775	2	True				
ANR	9119800	Identifier	i		9119775	0					
ANR	9119801	IncDec	++		9119775	1					
ANR	9119802	CompoundStatement		4:37:90:90	9119775	3					
ANR	9119803	IfStatement	if ( Size [ i ] <= 0 || Size [ i ] > MAX_DATA_SIZE / total_size )		9119775	0					
ANR	9119804	Condition	Size [ i ] <= 0 || Size [ i ] > MAX_DATA_SIZE / total_size	148:12:4591:4642	9119775	0	True				
ANR	9119805	OrExpression	Size [ i ] <= 0 || Size [ i ] > MAX_DATA_SIZE / total_size		9119775	0		||			
ANR	9119806	RelationalExpression	Size [ i ] <= 0		9119775	0		<=			
ANR	9119807	ArrayIndexing	Size [ i ]		9119775	0					
ANR	9119808	Identifier	Size		9119775	0					
ANR	9119809	Identifier	i		9119775	1					
ANR	9119810	PrimaryExpression	0		9119775	1					
ANR	9119811	RelationalExpression	Size [ i ] > MAX_DATA_SIZE / total_size		9119775	1		>			
ANR	9119812	ArrayIndexing	Size [ i ]		9119775	0					
ANR	9119813	Identifier	Size		9119775	0					
ANR	9119814	Identifier	i		9119775	1					
ANR	9119815	MultiplicativeExpression	MAX_DATA_SIZE / total_size		9119775	1		/			
ANR	9119816	Identifier	MAX_DATA_SIZE		9119775	0					
ANR	9119817	Identifier	total_size		9119775	1					
ANR	9119818	ReturnStatement	return false ;	149:12:4657:4669	9119775	1	True				
ANR	9119819	Identifier	false		9119775	0					
ANR	9119820	ExpressionStatement	total_size *= Size [ i ]	150:8:4679:4700	9119775	1	True				
ANR	9119821	AssignmentExpression	total_size *= Size [ i ]		9119775	0		*=			
ANR	9119822	Identifier	total_size		9119775	0					
ANR	9119823	ArrayIndexing	Size [ i ]		9119775	1					
ANR	9119824	Identifier	Size		9119775	0					
ANR	9119825	Identifier	i		9119775	1					
ANR	9119826	ReturnStatement	return true ;	152:4:4712:4723	9119775	2	True				
ANR	9119827	Identifier	true		9119775	0					
ANR	9119828	ReturnType	static bool		9119775	1					
ANR	9119829	Identifier	valid_cube_size		9119775	2					
ANR	9119830	ParameterList	"int num_inputs , int num_outputs , int sample_size , const int Size [ ]"		9119775	3					
ANR	9119831	Parameter	int num_inputs	143:16:4418:4431	9119775	0	True				
ANR	9119832	ParameterType	int		9119775	0					
ANR	9119833	Identifier	num_inputs		9119775	1					
ANR	9119834	Parameter	int num_outputs	143:32:4434:4448	9119775	1	True				
ANR	9119835	ParameterType	int		9119775	0					
ANR	9119836	Identifier	num_outputs		9119775	1					
ANR	9119837	Parameter	int sample_size	143:49:4451:4465	9119775	2	True				
ANR	9119838	ParameterType	int		9119775	0					
ANR	9119839	Identifier	sample_size		9119775	1					
ANR	9119840	Parameter	const int Size [ ]	143:66:4468:4483	9119775	3	True				
ANR	9119841	ParameterType	const int [ ]		9119775	0					
ANR	9119842	Identifier	Size		9119775	1					
ANR	9119843	CFGEntryNode	ENTRY		9119775		True				
ANR	9119844	CFGExitNode	EXIT		9119775		True				
ANR	9119845	Symbol	* Size		9119775						
ANR	9119846	Symbol	num_outputs		9119775						
ANR	9119847	Symbol	* i		9119775						
ANR	9119848	Symbol	sample_size		9119775						
ANR	9119849	Symbol	Size		9119775						
ANR	9119850	Symbol	num_inputs		9119775						
ANR	9119851	Symbol	total_size		9119775						
ANR	9119852	Symbol	false		9119775						
ANR	9119853	Symbol	true		9119775						
ANR	9119854	Symbol	i		9119775						
ANR	9119855	Symbol	MAX_DATA_SIZE		9119775						
ANR	9119856	Function	determine_sampled_data_size	169:0:5561:6595							
ANR	9119857	FunctionDef	"determine_sampled_data_size (int num_inputs , int num_outputs , int sample_size , int Size [ ])"		9119856	0					
ANR	9119858	CompoundStatement		172:0:5694:6595	9119856	0					
ANR	9119859	Statement	static	173:4:5700:5705	9119856	0	True				
ANR	9119860	IdentifierDeclStatement	"const int size_list [ ] = { 512 , 50 , 20 , 10 , 7 , 5 , 4 , 3 } ;"	173:11:5707:5760	9119856	1	True				
ANR	9119861	IdentifierDecl	"size_list [ ] = { 512 , 50 , 20 , 10 , 7 , 5 , 4 , 3 }"		9119856	0					
ANR	9119862	IdentifierDeclType	const int [ ]		9119856	0					
ANR	9119863	Identifier	size_list		9119856	1					
ANR	9119864	AssignmentExpression	"size_list [ ] = { 512 , 50 , 20 , 10 , 7 , 5 , 4 , 3 }"		9119856	2		=			
ANR	9119865	Identifier	size_list		9119856	0					
ANR	9119866	InitializerList	512		9119856	1					
ANR	9119867	PrimaryExpression	512		9119856	0					
ANR	9119868	PrimaryExpression	50		9119856	1					
ANR	9119869	PrimaryExpression	20		9119856	2					
ANR	9119870	PrimaryExpression	10		9119856	3					
ANR	9119871	PrimaryExpression	7		9119856	4					
ANR	9119872	PrimaryExpression	5		9119856	5					
ANR	9119873	PrimaryExpression	4		9119856	6					
ANR	9119874	PrimaryExpression	3		9119856	7					
ANR	9119875	IdentifierDeclStatement	"int i , size ;"	174:4:5766:5777	9119856	2	True				
ANR	9119876	IdentifierDecl	i		9119856	0					
ANR	9119877	IdentifierDeclType	int		9119856	0					
ANR	9119878	Identifier	i		9119856	1					
ANR	9119879	IdentifierDecl	size		9119856	1					
ANR	9119880	IdentifierDeclType	int		9119856	0					
ANR	9119881	Identifier	size		9119856	1					
ANR	9119882	IfStatement	if ( num_inputs > 0 && num_inputs <= 8 )		9119856	3					
ANR	9119883	Condition	num_inputs > 0 && num_inputs <= 8	177:8:5836:5868	9119856	0	True				
ANR	9119884	AndExpression	num_inputs > 0 && num_inputs <= 8		9119856	0		&&			
ANR	9119885	RelationalExpression	num_inputs > 0		9119856	0		>			
ANR	9119886	Identifier	num_inputs		9119856	0					
ANR	9119887	PrimaryExpression	0		9119856	1					
ANR	9119888	RelationalExpression	num_inputs <= 8		9119856	1		<=			
ANR	9119889	Identifier	num_inputs		9119856	0					
ANR	9119890	PrimaryExpression	8		9119856	1					
ANR	9119891	ExpressionStatement	size = size_list [ num_inputs - 1 ]	178:8:5879:5911	9119856	1	True				
ANR	9119892	AssignmentExpression	size = size_list [ num_inputs - 1 ]		9119856	0		=			
ANR	9119893	Identifier	size		9119856	0					
ANR	9119894	ArrayIndexing	size_list [ num_inputs - 1 ]		9119856	1					
ANR	9119895	Identifier	size_list		9119856	0					
ANR	9119896	AdditiveExpression	num_inputs - 1		9119856	1		-			
ANR	9119897	Identifier	num_inputs		9119856	0					
ANR	9119898	PrimaryExpression	1		9119856	1					
ANR	9119899	ElseStatement	else		9119856	0					
ANR	9119900	ExpressionStatement	size = 2	180:8:5930:5938	9119856	0	True				
ANR	9119901	AssignmentExpression	size = 2		9119856	0		=			
ANR	9119902	Identifier	size		9119856	0					
ANR	9119903	PrimaryExpression	2		9119856	1					
ANR	9119904	WhileStatement	while ( true )		9119856	4					
ANR	9119905	Condition	true	185:11:6086:6089	9119856	0	True				
ANR	9119906	Identifier	true		9119856	0					
ANR	9119907	CompoundStatement		14:17:397:397	9119856	1					
ANR	9119908	ForStatement	for ( i = 0 ; i < num_inputs ; i ++ )		9119856	0					
ANR	9119909	ForInit	i = 0 ;	187:13:6149:6154	9119856	0	True				
ANR	9119910	AssignmentExpression	i = 0		9119856	0		=			
ANR	9119911	Identifier	i		9119856	0					
ANR	9119912	PrimaryExpression	0		9119856	1					
ANR	9119913	Condition	i < num_inputs	187:20:6156:6169	9119856	1	True				
ANR	9119914	RelationalExpression	i < num_inputs		9119856	0		<			
ANR	9119915	Identifier	i		9119856	0					
ANR	9119916	Identifier	num_inputs		9119856	1					
ANR	9119917	PostIncDecOperationExpression	i ++	187:36:6172:6174	9119856	2	True				
ANR	9119918	Identifier	i		9119856	0					
ANR	9119919	IncDec	++		9119856	1					
ANR	9119920	ExpressionStatement	Size [ i ] = size	188:12:6189:6203	9119856	3	True				
ANR	9119921	AssignmentExpression	Size [ i ] = size		9119856	0		=			
ANR	9119922	ArrayIndexing	Size [ i ]		9119856	0					
ANR	9119923	Identifier	Size		9119856	0					
ANR	9119924	Identifier	i		9119856	1					
ANR	9119925	Identifier	size		9119856	1					
ANR	9119926	IfStatement	if ( size > 2 )		9119856	1					
ANR	9119927	Condition	size > 2	193:12:6377:6384	9119856	0	True				
ANR	9119928	RelationalExpression	size > 2		9119856	0		>			
ANR	9119929	Identifier	size		9119856	0					
ANR	9119930	PrimaryExpression	2		9119856	1					
ANR	9119931	CompoundStatement		22:22:692:692	9119856	1					
ANR	9119932	IfStatement	"if ( valid_cube_size ( num_inputs , num_outputs , sample_size , Size ) )"		9119856	0					
ANR	9119933	Condition	"valid_cube_size ( num_inputs , num_outputs , sample_size , Size )"	194:16:6405:6463	9119856	0	True				
ANR	9119934	CallExpression	"valid_cube_size ( num_inputs , num_outputs , sample_size , Size )"		9119856	0					
ANR	9119935	Callee	valid_cube_size		9119856	0					
ANR	9119936	Identifier	valid_cube_size		9119856	0					
ANR	9119937	ArgumentList	num_inputs		9119856	1					
ANR	9119938	Argument	num_inputs		9119856	0					
ANR	9119939	Identifier	num_inputs		9119856	0					
ANR	9119940	Argument	num_outputs		9119856	1					
ANR	9119941	Identifier	num_outputs		9119856	0					
ANR	9119942	Argument	sample_size		9119856	2					
ANR	9119943	Identifier	sample_size		9119856	0					
ANR	9119944	Argument	Size		9119856	3					
ANR	9119945	Identifier	Size		9119856	0					
ANR	9119946	ReturnStatement	return 0 ;	195:16:6482:6490	9119856	1	True				
ANR	9119947	PrimaryExpression	0		9119856	0					
ANR	9119948	ExpressionStatement	size --	196:12:6532:6538	9119856	1	True				
ANR	9119949	PostIncDecOperationExpression	size --		9119856	0					
ANR	9119950	Identifier	size		9119856	0					
ANR	9119951	IncDec	--		9119856	1					
ANR	9119952	ElseStatement	else		9119856	0					
ANR	9119953	CompoundStatement		26:15:860:860	9119856	0					
ANR	9119954	ReturnStatement	return 0 ;	198:12:6569:6577	9119856	0	True				
ANR	9119955	PrimaryExpression	0		9119856	0					
ANR	9119956	ReturnType	static int		9119856	1					
ANR	9119957	Identifier	determine_sampled_data_size		9119856	2					
ANR	9119958	ParameterList	"int num_inputs , int num_outputs , int sample_size , int Size [ ]"		9119856	3					
ANR	9119959	Parameter	int num_inputs	170:28:5600:5613	9119856	0	True				
ANR	9119960	ParameterType	int		9119856	0					
ANR	9119961	Identifier	num_inputs		9119856	1					
ANR	9119962	Parameter	int num_outputs	170:44:5616:5630	9119856	1	True				
ANR	9119963	ParameterType	int		9119856	0					
ANR	9119964	Identifier	num_outputs		9119856	1					
ANR	9119965	Parameter	int sample_size	171:32:5665:5679	9119856	2	True				
ANR	9119966	ParameterType	int		9119856	0					
ANR	9119967	Identifier	sample_size		9119856	1					
ANR	9119968	Parameter	int Size [ ]	171:49:5682:5691	9119856	3	True				
ANR	9119969	ParameterType	int [ ]		9119856	0					
ANR	9119970	Identifier	Size		9119856	1					
ANR	9119971	CFGEntryNode	ENTRY		9119856		True				
ANR	9119972	CFGExitNode	EXIT		9119856		True				
ANR	9119973	Symbol	* Size		9119856						
ANR	9119974	Symbol	num_outputs		9119856						
ANR	9119975	Symbol	size_list		9119856						
ANR	9119976	Symbol	Size		9119856						
ANR	9119977	Symbol	* num_inputs		9119856						
ANR	9119978	Symbol	i		9119856						
ANR	9119979	Symbol	* size_list		9119856						
ANR	9119980	Symbol	* i		9119856						
ANR	9119981	Symbol	sample_size		9119856						
ANR	9119982	Symbol	size		9119856						
ANR	9119983	Symbol	num_inputs		9119856						
ANR	9119984	Symbol	true		9119856						
ANR	9119985	Symbol	valid_cube_size		9119856						
ANR	9119986	Function	gs_sampled_data_enum_alloc	207:0:6752:6971							
ANR	9119987	FunctionDef	"gs_sampled_data_enum_alloc (gs_memory_t * mem , client_name_t cname)"		9119986	0					
ANR	9119988	CompoundStatement		209:0:6849:6971	9119986	0					
ANR	9119989	ReturnStatement	"return gs_alloc_struct ( mem , gs_sampled_data_enum , & st_gs_sampled_data_enum , cname ) ;"	210:4:6855:6969	9119986	0	True				
ANR	9119990	CallExpression	"gs_alloc_struct ( mem , gs_sampled_data_enum , & st_gs_sampled_data_enum , cname )"		9119986	0					
ANR	9119991	Callee	gs_alloc_struct		9119986	0					
ANR	9119992	Identifier	gs_alloc_struct		9119986	0					
ANR	9119993	ArgumentList	mem		9119986	1					
ANR	9119994	Argument	mem		9119986	0					
ANR	9119995	Identifier	mem		9119986	0					
ANR	9119996	Argument	gs_sampled_data_enum		9119986	1					
ANR	9119997	Identifier	gs_sampled_data_enum		9119986	0					
ANR	9119998	Argument	& st_gs_sampled_data_enum		9119986	2					
ANR	9119999	UnaryOperationExpression	& st_gs_sampled_data_enum		9119986	0					
ANR	9120000	UnaryOperator	&		9119986	0					
ANR	9120001	Identifier	st_gs_sampled_data_enum		9119986	1					
ANR	9120002	Argument	cname		9119986	3					
ANR	9120003	Identifier	cname		9119986	0					
ANR	9120004	ReturnType	static gs_sampled_data_enum *		9119986	1					
ANR	9120005	Identifier	gs_sampled_data_enum_alloc		9119986	2					
ANR	9120006	ParameterList	"gs_memory_t * mem , client_name_t cname"		9119986	3					
ANR	9120007	Parameter	gs_memory_t * mem	208:27:6809:6825	9119986	0	True				
ANR	9120008	ParameterType	gs_memory_t *		9119986	0					
ANR	9120009	Identifier	mem		9119986	1					
ANR	9120010	Parameter	client_name_t cname	208:46:6828:6846	9119986	1	True				
ANR	9120011	ParameterType	client_name_t		9119986	0					
ANR	9120012	Identifier	cname		9119986	1					
ANR	9120013	CFGEntryNode	ENTRY		9119986		True				
ANR	9120014	CFGExitNode	EXIT		9119986		True				
ANR	9120015	Symbol	mem		9119986						
ANR	9120016	Symbol	& st_gs_sampled_data_enum		9119986						
ANR	9120017	Symbol	gs_alloc_struct		9119986						
ANR	9120018	Symbol	cname		9119986						
ANR	9120019	Symbol	gs_sampled_data_enum		9119986						
ANR	9120020	Function	cube_ptr_from_index	219:0:7138:7490							
ANR	9120021	FunctionDef	"cube_ptr_from_index (gs_function_Sd_params_t * params , int indexes [ ])"		9120020	0					
ANR	9120022	CompoundStatement		221:0:7221:7490	9120020	0					
ANR	9120023	IdentifierDeclStatement	"int i , sum = indexes [ params -> m - 1 ] ;"	222:4:7227:7262	9120020	0	True				
ANR	9120024	IdentifierDecl	i		9120020	0					
ANR	9120025	IdentifierDeclType	int		9120020	0					
ANR	9120026	Identifier	i		9120020	1					
ANR	9120027	IdentifierDecl	sum = indexes [ params -> m - 1 ]		9120020	1					
ANR	9120028	IdentifierDeclType	int		9120020	0					
ANR	9120029	Identifier	sum		9120020	1					
ANR	9120030	AssignmentExpression	sum = indexes [ params -> m - 1 ]		9120020	2		=			
ANR	9120031	Identifier	sum		9120020	0					
ANR	9120032	ArrayIndexing	indexes [ params -> m - 1 ]		9120020	1					
ANR	9120033	Identifier	indexes		9120020	0					
ANR	9120034	AdditiveExpression	params -> m - 1		9120020	1		-			
ANR	9120035	PtrMemberAccess	params -> m		9120020	0					
ANR	9120036	Identifier	params		9120020	0					
ANR	9120037	Identifier	m		9120020	1					
ANR	9120038	PrimaryExpression	1		9120020	1					
ANR	9120039	ForStatement	for ( i = params -> m - 2 ; i >= 0 ; i -- )		9120020	1					
ANR	9120040	ForInit	i = params -> m - 2 ;	224:9:7274:7291	9120020	0	True				
ANR	9120041	AssignmentExpression	i = params -> m - 2		9120020	0		=			
ANR	9120042	Identifier	i		9120020	0					
ANR	9120043	AdditiveExpression	params -> m - 2		9120020	1		-			
ANR	9120044	PtrMemberAccess	params -> m		9120020	0					
ANR	9120045	Identifier	params		9120020	0					
ANR	9120046	Identifier	m		9120020	1					
ANR	9120047	PrimaryExpression	2		9120020	1					
ANR	9120048	Condition	i >= 0	224:28:7293:7298	9120020	1	True				
ANR	9120049	RelationalExpression	i >= 0		9120020	0		>=			
ANR	9120050	Identifier	i		9120020	0					
ANR	9120051	PrimaryExpression	0		9120020	1					
ANR	9120052	PostIncDecOperationExpression	i --	224:36:7301:7303	9120020	2	True				
ANR	9120053	Identifier	i		9120020	0					
ANR	9120054	IncDec	--		9120020	1					
ANR	9120055	CompoundStatement		4:41:84:84	9120020	3					
ANR	9120056	ExpressionStatement	sum *= params -> Size [ i ]	225:8:7316:7338	9120020	0	True				
ANR	9120057	AssignmentExpression	sum *= params -> Size [ i ]		9120020	0		*=			
ANR	9120058	Identifier	sum		9120020	0					
ANR	9120059	ArrayIndexing	params -> Size [ i ]		9120020	1					
ANR	9120060	PtrMemberAccess	params -> Size		9120020	0					
ANR	9120061	Identifier	params		9120020	0					
ANR	9120062	Identifier	Size		9120020	1					
ANR	9120063	Identifier	i		9120020	1					
ANR	9120064	ExpressionStatement	sum += indexes [ i ]	226:8:7348:7365	9120020	1	True				
ANR	9120065	AssignmentExpression	sum += indexes [ i ]		9120020	0		+=			
ANR	9120066	Identifier	sum		9120020	0					
ANR	9120067	ArrayIndexing	indexes [ i ]		9120020	1					
ANR	9120068	Identifier	indexes		9120020	0					
ANR	9120069	Identifier	i		9120020	1					
ANR	9120070	ReturnStatement	return ( byte * ) ( params -> DataSource . data . str . data ) + sum * params -> n * bits2bytes ( params -> BitsPerSample ) ;	228:4:7377:7488	9120020	2	True				
ANR	9120071	AdditiveExpression	( byte * ) ( params -> DataSource . data . str . data ) + sum * params -> n * bits2bytes ( params -> BitsPerSample )		9120020	0		+			
ANR	9120072	CastExpression	( byte * ) ( params -> DataSource . data . str . data )		9120020	0					
ANR	9120073	CastTarget	byte *		9120020	0					
ANR	9120074	MemberAccess	params -> DataSource . data . str . data		9120020	1					
ANR	9120075	MemberAccess	params -> DataSource . data . str		9120020	0					
ANR	9120076	MemberAccess	params -> DataSource . data		9120020	0					
ANR	9120077	PtrMemberAccess	params -> DataSource		9120020	0					
ANR	9120078	Identifier	params		9120020	0					
ANR	9120079	Identifier	DataSource		9120020	1					
ANR	9120080	Identifier	data		9120020	1					
ANR	9120081	Identifier	str		9120020	1					
ANR	9120082	Identifier	data		9120020	1					
ANR	9120083	MultiplicativeExpression	sum * params -> n * bits2bytes ( params -> BitsPerSample )		9120020	1		*			
ANR	9120084	Identifier	sum		9120020	0					
ANR	9120085	MultiplicativeExpression	params -> n * bits2bytes ( params -> BitsPerSample )		9120020	1		*			
ANR	9120086	PtrMemberAccess	params -> n		9120020	0					
ANR	9120087	Identifier	params		9120020	0					
ANR	9120088	Identifier	n		9120020	1					
ANR	9120089	CallExpression	bits2bytes ( params -> BitsPerSample )		9120020	1					
ANR	9120090	Callee	bits2bytes		9120020	0					
ANR	9120091	Identifier	bits2bytes		9120020	0					
ANR	9120092	ArgumentList	params -> BitsPerSample		9120020	1					
ANR	9120093	Argument	params -> BitsPerSample		9120020	0					
ANR	9120094	PtrMemberAccess	params -> BitsPerSample		9120020	0					
ANR	9120095	Identifier	params		9120020	0					
ANR	9120096	Identifier	BitsPerSample		9120020	1					
ANR	9120097	ReturnType	static byte *		9120020	1					
ANR	9120098	Identifier	cube_ptr_from_index		9120020	2					
ANR	9120099	ParameterList	"gs_function_Sd_params_t * params , int indexes [ ]"		9120020	3					
ANR	9120100	Parameter	gs_function_Sd_params_t * params	220:20:7172:7203	9120020	0	True				
ANR	9120101	ParameterType	gs_function_Sd_params_t *		9120020	0					
ANR	9120102	Identifier	params		9120020	1					
ANR	9120103	Parameter	int indexes [ ]	220:54:7206:7218	9120020	1	True				
ANR	9120104	ParameterType	int [ ]		9120020	0					
ANR	9120105	Identifier	indexes		9120020	1					
ANR	9120106	CFGEntryNode	ENTRY		9120020		True				
ANR	9120107	CFGExitNode	EXIT		9120020		True				
ANR	9120108	Symbol	params -> BitsPerSample		9120020						
ANR	9120109	Symbol	params -> DataSource . data		9120020						
ANR	9120110	Symbol	* params -> Size		9120020						
ANR	9120111	Symbol	params -> DataSource . data . str		9120020						
ANR	9120112	Symbol	i		9120020						
ANR	9120113	Symbol	sum		9120020						
ANR	9120114	Symbol	params		9120020						
ANR	9120115	Symbol	* * params		9120020						
ANR	9120116	Symbol	bits2bytes		9120020						
ANR	9120117	Symbol	params -> m		9120020						
ANR	9120118	Symbol	* i		9120020						
ANR	9120119	Symbol	params -> n		9120020						
ANR	9120120	Symbol	indexes		9120020						
ANR	9120121	Symbol	params -> DataSource . data . str . data		9120020						
ANR	9120122	Symbol	* params -> m		9120020						
ANR	9120123	Symbol	* indexes		9120020						
ANR	9120124	Symbol	params -> Size		9120020						
ANR	9120125	Symbol	params -> DataSource		9120020						
ANR	9120126	Symbol	* params		9120020						
ANR	9120127	Function	increment_cube_indexes	237:0:7708:8582							
ANR	9120128	FunctionDef	"increment_cube_indexes (gs_function_Sd_params_t * params , int indexes [ ])"		9120127	0					
ANR	9120129	CompoundStatement		239:0:7792:8582	9120127	0					
ANR	9120130	IdentifierDeclStatement	int i = 0 ;	240:4:7798:7807	9120127	0	True				
ANR	9120131	IdentifierDecl	i = 0		9120127	0					
ANR	9120132	IdentifierDeclType	int		9120127	0					
ANR	9120133	Identifier	i		9120127	1					
ANR	9120134	AssignmentExpression	i = 0		9120127	2		=			
ANR	9120135	Identifier	i		9120127	0					
ANR	9120136	PrimaryExpression	0		9120127	1					
ANR	9120137	WhileStatement	while ( true )		9120127	1					
ANR	9120138	Condition	true	242:11:7821:7824	9120127	0	True				
ANR	9120139	Identifier	true		9120127	0					
ANR	9120140	CompoundStatement		4:17:34:34	9120127	1					
ANR	9120141	ExpressionStatement	indexes [ i ] ++	247:8:7979:7991	9120127	0	True				
ANR	9120142	PostIncDecOperationExpression	indexes [ i ] ++		9120127	0					
ANR	9120143	ArrayIndexing	indexes [ i ]		9120127	0					
ANR	9120144	Identifier	indexes		9120127	0					
ANR	9120145	Identifier	i		9120127	1					
ANR	9120146	IncDec	++		9120127	1					
ANR	9120147	IfStatement	if ( indexes [ i ] < params -> Size [ i ] )		9120127	1					
ANR	9120148	Condition	indexes [ i ] < params -> Size [ i ]	248:12:8005:8032	9120127	0	True				
ANR	9120149	RelationalExpression	indexes [ i ] < params -> Size [ i ]		9120127	0		<			
ANR	9120150	ArrayIndexing	indexes [ i ]		9120127	0					
ANR	9120151	Identifier	indexes		9120127	0					
ANR	9120152	Identifier	i		9120127	1					
ANR	9120153	ArrayIndexing	params -> Size [ i ]		9120127	1					
ANR	9120154	PtrMemberAccess	params -> Size		9120127	0					
ANR	9120155	Identifier	params		9120127	0					
ANR	9120156	Identifier	Size		9120127	1					
ANR	9120157	Identifier	i		9120127	1					
ANR	9120158	ReturnStatement	return false ;	253:12:8209:8221	9120127	1	True				
ANR	9120159	Identifier	false		9120127	0					
ANR	9120160	ExpressionStatement	indexes [ i ] = 0	258:8:8370:8384	9120127	2	True				
ANR	9120161	AssignmentExpression	indexes [ i ] = 0		9120127	0		=			
ANR	9120162	ArrayIndexing	indexes [ i ]		9120127	0					
ANR	9120163	Identifier	indexes		9120127	0					
ANR	9120164	Identifier	i		9120127	1					
ANR	9120165	PrimaryExpression	0		9120127	1					
ANR	9120166	ExpressionStatement	i ++	259:8:8394:8397	9120127	3	True				
ANR	9120167	PostIncDecOperationExpression	i ++		9120127	0					
ANR	9120168	Identifier	i		9120127	0					
ANR	9120169	IncDec	++		9120127	1					
ANR	9120170	IfStatement	if ( i == params -> m )		9120127	4					
ANR	9120171	Condition	i == params -> m	260:12:8411:8424	9120127	0	True				
ANR	9120172	EqualityExpression	i == params -> m		9120127	0		==			
ANR	9120173	Identifier	i		9120127	0					
ANR	9120174	PtrMemberAccess	params -> m		9120127	1					
ANR	9120175	Identifier	params		9120127	0					
ANR	9120176	Identifier	m		9120127	1					
ANR	9120177	ReturnStatement	return true ;	265:12:8563:8574	9120127	1	True				
ANR	9120178	Identifier	true		9120127	0					
ANR	9120179	ReturnType	static bool		9120127	1					
ANR	9120180	Identifier	increment_cube_indexes		9120127	2					
ANR	9120181	ParameterList	"gs_function_Sd_params_t * params , int indexes [ ]"		9120127	3					
ANR	9120182	Parameter	gs_function_Sd_params_t * params	238:23:7743:7774	9120127	0	True				
ANR	9120183	ParameterType	gs_function_Sd_params_t *		9120127	0					
ANR	9120184	Identifier	params		9120127	1					
ANR	9120185	Parameter	int indexes [ ]	238:57:7777:7789	9120127	1	True				
ANR	9120186	ParameterType	int [ ]		9120127	0					
ANR	9120187	Identifier	indexes		9120127	1					
ANR	9120188	CFGEntryNode	ENTRY		9120127		True				
ANR	9120189	CFGExitNode	EXIT		9120127		True				
ANR	9120190	Symbol	params -> m		9120127						
ANR	9120191	Symbol	* i		9120127						
ANR	9120192	Symbol	indexes		9120127						
ANR	9120193	Symbol	true		9120127						
ANR	9120194	Symbol	* params -> Size		9120127						
ANR	9120195	Symbol	false		9120127						
ANR	9120196	Symbol	i		9120127						
ANR	9120197	Symbol	params		9120127						
ANR	9120198	Symbol	* * params		9120127						
ANR	9120199	Symbol	* indexes		9120127						
ANR	9120200	Symbol	params -> Size		9120127						
ANR	9120201	Symbol	* params		9120127						
ANR	9120202	Function	cube_build_func0	275:0:8859:11982							
ANR	9120203	FunctionDef	"cube_build_func0 (const ref * pdict , gs_function_Sd_params_t * params , gs_memory_t * mem)"		9120202	0					
ANR	9120204	CompoundStatement		278:0:9014:11982	9120202	0					
ANR	9120205	IdentifierDeclStatement	byte * bytes = 0 ;	279:4:9020:9036	9120202	0	True				
ANR	9120206	IdentifierDecl	* bytes = 0		9120202	0					
ANR	9120207	IdentifierDeclType	byte *		9120202	0					
ANR	9120208	Identifier	bytes		9120202	1					
ANR	9120209	AssignmentExpression	* bytes = 0		9120202	2		=			
ANR	9120210	Identifier	bytes		9120202	0					
ANR	9120211	PrimaryExpression	0		9120202	1					
ANR	9120212	IdentifierDeclStatement	"int code , i ;"	280:4:9042:9053	9120202	1	True				
ANR	9120213	IdentifierDecl	code		9120202	0					
ANR	9120214	IdentifierDeclType	int		9120202	0					
ANR	9120215	Identifier	code		9120202	1					
ANR	9120216	IdentifierDecl	i		9120202	1					
ANR	9120217	IdentifierDeclType	int		9120202	0					
ANR	9120218	Identifier	i		9120202	1					
ANR	9120219	IdentifierDeclStatement	int total_size ;	281:4:9059:9073	9120202	2	True				
ANR	9120220	IdentifierDecl	total_size		9120202	0					
ANR	9120221	IdentifierDeclType	int		9120202	0					
ANR	9120222	Identifier	total_size		9120202	1					
ANR	9120223	IfStatement	"if ( ( code = dict_int_param ( pdict , ""Order"" , 1 , 3 , 1 , & params -> Order ) ) < 0 || ( code = dict_int_param ( pdict , ""BitsPerSample"" , 1 , 32 , 0 , & params -> BitsPerSample ) ) < 0 || ( ( code = params -> m = fn_build_float_array ( pdict , ""Domain"" , false , true , & params -> Domain , mem ) ) < 0 ) || ( ( code = params -> n = fn_build_float_array ( pdict , ""Range"" , false , true , & params -> Range , mem ) ) < 0 ) )"		9120202	3					
ANR	9120224	Condition	"( code = dict_int_param ( pdict , ""Order"" , 1 , 3 , 1 , & params -> Order ) ) < 0 || ( code = dict_int_param ( pdict , ""BitsPerSample"" , 1 , 32 , 0 , & params -> BitsPerSample ) ) < 0 || ( ( code = params -> m = fn_build_float_array ( pdict , ""Domain"" , false , true , & params -> Domain , mem ) ) < 0 ) || ( ( code = params -> n = fn_build_float_array ( pdict , ""Range"" , false , true , & params -> Range , mem ) ) < 0 )"	283:8:9084:9604	9120202	0	True				
ANR	9120225	OrExpression	"( code = dict_int_param ( pdict , ""Order"" , 1 , 3 , 1 , & params -> Order ) ) < 0 || ( code = dict_int_param ( pdict , ""BitsPerSample"" , 1 , 32 , 0 , & params -> BitsPerSample ) ) < 0 || ( ( code = params -> m = fn_build_float_array ( pdict , ""Domain"" , false , true , & params -> Domain , mem ) ) < 0 ) || ( ( code = params -> n = fn_build_float_array ( pdict , ""Range"" , false , true , & params -> Range , mem ) ) < 0 )"		9120202	0		||			
ANR	9120226	RelationalExpression	"( code = dict_int_param ( pdict , ""Order"" , 1 , 3 , 1 , & params -> Order ) ) < 0"		9120202	0		<			
ANR	9120227	AssignmentExpression	"code = dict_int_param ( pdict , ""Order"" , 1 , 3 , 1 , & params -> Order )"		9120202	0		=			
ANR	9120228	Identifier	code		9120202	0					
ANR	9120229	CallExpression	"dict_int_param ( pdict , ""Order"" , 1 , 3 , 1 , & params -> Order )"		9120202	1					
ANR	9120230	Callee	dict_int_param		9120202	0					
ANR	9120231	Identifier	dict_int_param		9120202	0					
ANR	9120232	ArgumentList	pdict		9120202	1					
ANR	9120233	Argument	pdict		9120202	0					
ANR	9120234	Identifier	pdict		9120202	0					
ANR	9120235	Argument	"""Order"""		9120202	1					
ANR	9120236	PrimaryExpression	"""Order"""		9120202	0					
ANR	9120237	Argument	1		9120202	2					
ANR	9120238	PrimaryExpression	1		9120202	0					
ANR	9120239	Argument	3		9120202	3					
ANR	9120240	PrimaryExpression	3		9120202	0					
ANR	9120241	Argument	1		9120202	4					
ANR	9120242	PrimaryExpression	1		9120202	0					
ANR	9120243	Argument	& params -> Order		9120202	5					
ANR	9120244	UnaryOperationExpression	& params -> Order		9120202	0					
ANR	9120245	UnaryOperator	&		9120202	0					
ANR	9120246	PtrMemberAccess	params -> Order		9120202	1					
ANR	9120247	Identifier	params		9120202	0					
ANR	9120248	Identifier	Order		9120202	1					
ANR	9120249	PrimaryExpression	0		9120202	1					
ANR	9120250	OrExpression	"( code = dict_int_param ( pdict , ""BitsPerSample"" , 1 , 32 , 0 , & params -> BitsPerSample ) ) < 0 || ( ( code = params -> m = fn_build_float_array ( pdict , ""Domain"" , false , true , & params -> Domain , mem ) ) < 0 ) || ( ( code = params -> n = fn_build_float_array ( pdict , ""Range"" , false , true , & params -> Range , mem ) ) < 0 )"		9120202	1		||			
ANR	9120251	RelationalExpression	"( code = dict_int_param ( pdict , ""BitsPerSample"" , 1 , 32 , 0 , & params -> BitsPerSample ) ) < 0"		9120202	0		<			
ANR	9120252	AssignmentExpression	"code = dict_int_param ( pdict , ""BitsPerSample"" , 1 , 32 , 0 , & params -> BitsPerSample )"		9120202	0		=			
ANR	9120253	Identifier	code		9120202	0					
ANR	9120254	CallExpression	"dict_int_param ( pdict , ""BitsPerSample"" , 1 , 32 , 0 , & params -> BitsPerSample )"		9120202	1					
ANR	9120255	Callee	dict_int_param		9120202	0					
ANR	9120256	Identifier	dict_int_param		9120202	0					
ANR	9120257	ArgumentList	pdict		9120202	1					
ANR	9120258	Argument	pdict		9120202	0					
ANR	9120259	Identifier	pdict		9120202	0					
ANR	9120260	Argument	"""BitsPerSample"""		9120202	1					
ANR	9120261	PrimaryExpression	"""BitsPerSample"""		9120202	0					
ANR	9120262	Argument	1		9120202	2					
ANR	9120263	PrimaryExpression	1		9120202	0					
ANR	9120264	Argument	32		9120202	3					
ANR	9120265	PrimaryExpression	32		9120202	0					
ANR	9120266	Argument	0		9120202	4					
ANR	9120267	PrimaryExpression	0		9120202	0					
ANR	9120268	Argument	& params -> BitsPerSample		9120202	5					
ANR	9120269	UnaryOperationExpression	& params -> BitsPerSample		9120202	0					
ANR	9120270	UnaryOperator	&		9120202	0					
ANR	9120271	PtrMemberAccess	params -> BitsPerSample		9120202	1					
ANR	9120272	Identifier	params		9120202	0					
ANR	9120273	Identifier	BitsPerSample		9120202	1					
ANR	9120274	PrimaryExpression	0		9120202	1					
ANR	9120275	OrExpression	"( ( code = params -> m = fn_build_float_array ( pdict , ""Domain"" , false , true , & params -> Domain , mem ) ) < 0 ) || ( ( code = params -> n = fn_build_float_array ( pdict , ""Range"" , false , true , & params -> Range , mem ) ) < 0 )"		9120202	1		||			
ANR	9120276	RelationalExpression	"( code = params -> m = fn_build_float_array ( pdict , ""Domain"" , false , true , & params -> Domain , mem ) ) < 0"		9120202	0		<			
ANR	9120277	AssignmentExpression	"code = params -> m = fn_build_float_array ( pdict , ""Domain"" , false , true , & params -> Domain , mem )"		9120202	0		=			
ANR	9120278	Identifier	code		9120202	0					
ANR	9120279	AssignmentExpression	"params -> m = fn_build_float_array ( pdict , ""Domain"" , false , true , & params -> Domain , mem )"		9120202	1		=			
ANR	9120280	PtrMemberAccess	params -> m		9120202	0					
ANR	9120281	Identifier	params		9120202	0					
ANR	9120282	Identifier	m		9120202	1					
ANR	9120283	CallExpression	"fn_build_float_array ( pdict , ""Domain"" , false , true , & params -> Domain , mem )"		9120202	1					
ANR	9120284	Callee	fn_build_float_array		9120202	0					
ANR	9120285	Identifier	fn_build_float_array		9120202	0					
ANR	9120286	ArgumentList	pdict		9120202	1					
ANR	9120287	Argument	pdict		9120202	0					
ANR	9120288	Identifier	pdict		9120202	0					
ANR	9120289	Argument	"""Domain"""		9120202	1					
ANR	9120290	PrimaryExpression	"""Domain"""		9120202	0					
ANR	9120291	Argument	false		9120202	2					
ANR	9120292	Identifier	false		9120202	0					
ANR	9120293	Argument	true		9120202	3					
ANR	9120294	Identifier	true		9120202	0					
ANR	9120295	Argument	& params -> Domain		9120202	4					
ANR	9120296	UnaryOperationExpression	& params -> Domain		9120202	0					
ANR	9120297	UnaryOperator	&		9120202	0					
ANR	9120298	PtrMemberAccess	params -> Domain		9120202	1					
ANR	9120299	Identifier	params		9120202	0					
ANR	9120300	Identifier	Domain		9120202	1					
ANR	9120301	Argument	mem		9120202	5					
ANR	9120302	Identifier	mem		9120202	0					
ANR	9120303	PrimaryExpression	0		9120202	1					
ANR	9120304	RelationalExpression	"( code = params -> n = fn_build_float_array ( pdict , ""Range"" , false , true , & params -> Range , mem ) ) < 0"		9120202	1		<			
ANR	9120305	AssignmentExpression	"code = params -> n = fn_build_float_array ( pdict , ""Range"" , false , true , & params -> Range , mem )"		9120202	0		=			
ANR	9120306	Identifier	code		9120202	0					
ANR	9120307	AssignmentExpression	"params -> n = fn_build_float_array ( pdict , ""Range"" , false , true , & params -> Range , mem )"		9120202	1		=			
ANR	9120308	PtrMemberAccess	params -> n		9120202	0					
ANR	9120309	Identifier	params		9120202	0					
ANR	9120310	Identifier	n		9120202	1					
ANR	9120311	CallExpression	"fn_build_float_array ( pdict , ""Range"" , false , true , & params -> Range , mem )"		9120202	1					
ANR	9120312	Callee	fn_build_float_array		9120202	0					
ANR	9120313	Identifier	fn_build_float_array		9120202	0					
ANR	9120314	ArgumentList	pdict		9120202	1					
ANR	9120315	Argument	pdict		9120202	0					
ANR	9120316	Identifier	pdict		9120202	0					
ANR	9120317	Argument	"""Range"""		9120202	1					
ANR	9120318	PrimaryExpression	"""Range"""		9120202	0					
ANR	9120319	Argument	false		9120202	2					
ANR	9120320	Identifier	false		9120202	0					
ANR	9120321	Argument	true		9120202	3					
ANR	9120322	Identifier	true		9120202	0					
ANR	9120323	Argument	& params -> Range		9120202	4					
ANR	9120324	UnaryOperationExpression	& params -> Range		9120202	0					
ANR	9120325	UnaryOperator	&		9120202	0					
ANR	9120326	PtrMemberAccess	params -> Range		9120202	1					
ANR	9120327	Identifier	params		9120202	0					
ANR	9120328	Identifier	Range		9120202	1					
ANR	9120329	Argument	mem		9120202	5					
ANR	9120330	Identifier	mem		9120202	0					
ANR	9120331	PrimaryExpression	0		9120202	1					
ANR	9120332	CompoundStatement		15:10:601:601	9120202	1					
ANR	9120333	GotoStatement	goto fail ;	293:8:9626:9635	9120202	0	True				
ANR	9120334	Identifier	fail		9120202	0					
ANR	9120335	ExpressionStatement	params -> m >>= 1	300:4:9844:9859	9120202	4	True				
ANR	9120336	AssignmentExpression	params -> m >>= 1		9120202	0		>>=			
ANR	9120337	PtrMemberAccess	params -> m		9120202	0					
ANR	9120338	Identifier	params		9120202	0					
ANR	9120339	Identifier	m		9120202	1					
ANR	9120340	PrimaryExpression	1		9120202	1					
ANR	9120341	ExpressionStatement	params -> n >>= 1	301:4:9865:9880	9120202	5	True				
ANR	9120342	AssignmentExpression	params -> n >>= 1		9120202	0		>>=			
ANR	9120343	PtrMemberAccess	params -> n		9120202	0					
ANR	9120344	Identifier	params		9120202	0					
ANR	9120345	Identifier	n		9120202	1					
ANR	9120346	PrimaryExpression	1		9120202	1					
ANR	9120347	IfStatement	if ( params -> m == 0 || params -> n == 0 || params -> m > MAX_NUM_INPUTS || params -> n > MAX_NUM_OUTPUTS )		9120202	6					
ANR	9120348	Condition	params -> m == 0 || params -> n == 0 || params -> m > MAX_NUM_INPUTS || params -> n > MAX_NUM_OUTPUTS	302:8:9890:9990	9120202	0	True				
ANR	9120349	OrExpression	params -> m == 0 || params -> n == 0 || params -> m > MAX_NUM_INPUTS || params -> n > MAX_NUM_OUTPUTS		9120202	0		||			
ANR	9120350	EqualityExpression	params -> m == 0		9120202	0		==			
ANR	9120351	PtrMemberAccess	params -> m		9120202	0					
ANR	9120352	Identifier	params		9120202	0					
ANR	9120353	Identifier	m		9120202	1					
ANR	9120354	PrimaryExpression	0		9120202	1					
ANR	9120355	OrExpression	params -> n == 0 || params -> m > MAX_NUM_INPUTS || params -> n > MAX_NUM_OUTPUTS		9120202	1		||			
ANR	9120356	EqualityExpression	params -> n == 0		9120202	0		==			
ANR	9120357	PtrMemberAccess	params -> n		9120202	0					
ANR	9120358	Identifier	params		9120202	0					
ANR	9120359	Identifier	n		9120202	1					
ANR	9120360	PrimaryExpression	0		9120202	1					
ANR	9120361	OrExpression	params -> m > MAX_NUM_INPUTS || params -> n > MAX_NUM_OUTPUTS		9120202	1		||			
ANR	9120362	RelationalExpression	params -> m > MAX_NUM_INPUTS		9120202	0		>			
ANR	9120363	PtrMemberAccess	params -> m		9120202	0					
ANR	9120364	Identifier	params		9120202	0					
ANR	9120365	Identifier	m		9120202	1					
ANR	9120366	Identifier	MAX_NUM_INPUTS		9120202	1					
ANR	9120367	RelationalExpression	params -> n > MAX_NUM_OUTPUTS		9120202	1		>			
ANR	9120368	PtrMemberAccess	params -> n		9120202	0					
ANR	9120369	Identifier	params		9120202	0					
ANR	9120370	Identifier	n		9120202	1					
ANR	9120371	Identifier	MAX_NUM_OUTPUTS		9120202	1					
ANR	9120372	CompoundStatement		26:67:978:978	9120202	1					
ANR	9120373	ExpressionStatement	code = gs_note_error ( gs_error_rangecheck )	304:8:10003:10044	9120202	0	True				
ANR	9120374	AssignmentExpression	code = gs_note_error ( gs_error_rangecheck )		9120202	0		=			
ANR	9120375	Identifier	code		9120202	0					
ANR	9120376	CallExpression	gs_note_error ( gs_error_rangecheck )		9120202	1					
ANR	9120377	Callee	gs_note_error		9120202	0					
ANR	9120378	Identifier	gs_note_error		9120202	0					
ANR	9120379	ArgumentList	gs_error_rangecheck		9120202	1					
ANR	9120380	Argument	gs_error_rangecheck		9120202	0					
ANR	9120381	Identifier	gs_error_rangecheck		9120202	0					
ANR	9120382	GotoStatement	goto fail ;	305:8:10054:10063	9120202	1	True				
ANR	9120383	Identifier	fail		9120202	0					
ANR	9120384	CompoundStatement		35:8:1233:1320	9120202	7					
ANR	9120385	IdentifierDeclStatement	"int * ptr = ( int * ) gs_alloc_byte_array ( mem , params -> m , sizeof ( int ) , ""Size"" ) ;"	312:8:10248:10335	9120202	0	True				
ANR	9120386	IdentifierDecl	"* ptr = ( int * ) gs_alloc_byte_array ( mem , params -> m , sizeof ( int ) , ""Size"" )"		9120202	0					
ANR	9120387	IdentifierDeclType	int *		9120202	0					
ANR	9120388	Identifier	ptr		9120202	1					
ANR	9120389	AssignmentExpression	"* ptr = ( int * ) gs_alloc_byte_array ( mem , params -> m , sizeof ( int ) , ""Size"" )"		9120202	2		=			
ANR	9120390	Identifier	ptr		9120202	0					
ANR	9120391	CastExpression	"( int * ) gs_alloc_byte_array ( mem , params -> m , sizeof ( int ) , ""Size"" )"		9120202	1					
ANR	9120392	CastTarget	int *		9120202	0					
ANR	9120393	CallExpression	"gs_alloc_byte_array ( mem , params -> m , sizeof ( int ) , ""Size"" )"		9120202	1					
ANR	9120394	Callee	gs_alloc_byte_array		9120202	0					
ANR	9120395	Identifier	gs_alloc_byte_array		9120202	0					
ANR	9120396	ArgumentList	mem		9120202	1					
ANR	9120397	Argument	mem		9120202	0					
ANR	9120398	Identifier	mem		9120202	0					
ANR	9120399	Argument	params -> m		9120202	1					
ANR	9120400	PtrMemberAccess	params -> m		9120202	0					
ANR	9120401	Identifier	params		9120202	0					
ANR	9120402	Identifier	m		9120202	1					
ANR	9120403	Argument	sizeof ( int )		9120202	2					
ANR	9120404	SizeofExpression	sizeof ( int )		9120202	0					
ANR	9120405	Sizeof	sizeof		9120202	0					
ANR	9120406	SizeofOperand	int		9120202	1					
ANR	9120407	Argument	"""Size"""		9120202	3					
ANR	9120408	PrimaryExpression	"""Size"""		9120202	0					
ANR	9120409	IfStatement	if ( ptr == NULL )		9120202	1					
ANR	9120410	Condition	ptr == NULL	315:12:10350:10360	9120202	0	True				
ANR	9120411	EqualityExpression	ptr == NULL		9120202	0		==			
ANR	9120412	Identifier	ptr		9120202	0					
ANR	9120413	Identifier	NULL		9120202	1					
ANR	9120414	CompoundStatement		38:25:1348:1348	9120202	1					
ANR	9120415	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	316:12:10377:10415	9120202	0	True				
ANR	9120416	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		9120202	0		=			
ANR	9120417	Identifier	code		9120202	0					
ANR	9120418	CallExpression	gs_note_error ( gs_error_VMerror )		9120202	1					
ANR	9120419	Callee	gs_note_error		9120202	0					
ANR	9120420	Identifier	gs_note_error		9120202	0					
ANR	9120421	ArgumentList	gs_error_VMerror		9120202	1					
ANR	9120422	Argument	gs_error_VMerror		9120202	0					
ANR	9120423	Identifier	gs_error_VMerror		9120202	0					
ANR	9120424	GotoStatement	goto fail ;	317:12:10429:10438	9120202	1	True				
ANR	9120425	Identifier	fail		9120202	0					
ANR	9120426	ExpressionStatement	params -> Size = ptr	319:8:10458:10476	9120202	2	True				
ANR	9120427	AssignmentExpression	params -> Size = ptr		9120202	0		=			
ANR	9120428	PtrMemberAccess	params -> Size		9120202	0					
ANR	9120429	Identifier	params		9120202	0					
ANR	9120430	Identifier	Size		9120202	1					
ANR	9120431	Identifier	ptr		9120202	1					
ANR	9120432	ExpressionStatement	"code = dict_ints_param ( mem , pdict , ""Size"" , params -> m , ptr )"	320:8:10486:10544	9120202	3	True				
ANR	9120433	AssignmentExpression	"code = dict_ints_param ( mem , pdict , ""Size"" , params -> m , ptr )"		9120202	0		=			
ANR	9120434	Identifier	code		9120202	0					
ANR	9120435	CallExpression	"dict_ints_param ( mem , pdict , ""Size"" , params -> m , ptr )"		9120202	1					
ANR	9120436	Callee	dict_ints_param		9120202	0					
ANR	9120437	Identifier	dict_ints_param		9120202	0					
ANR	9120438	ArgumentList	mem		9120202	1					
ANR	9120439	Argument	mem		9120202	0					
ANR	9120440	Identifier	mem		9120202	0					
ANR	9120441	Argument	pdict		9120202	1					
ANR	9120442	Identifier	pdict		9120202	0					
ANR	9120443	Argument	"""Size"""		9120202	2					
ANR	9120444	PrimaryExpression	"""Size"""		9120202	0					
ANR	9120445	Argument	params -> m		9120202	3					
ANR	9120446	PtrMemberAccess	params -> m		9120202	0					
ANR	9120447	Identifier	params		9120202	0					
ANR	9120448	Identifier	m		9120202	1					
ANR	9120449	Argument	ptr		9120202	4					
ANR	9120450	Identifier	ptr		9120202	0					
ANR	9120451	IfStatement	if ( code < 0 )		9120202	4					
ANR	9120452	Condition	code < 0	321:12:10558:10565	9120202	0	True				
ANR	9120453	RelationalExpression	code < 0		9120202	0		<			
ANR	9120454	Identifier	code		9120202	0					
ANR	9120455	PrimaryExpression	0		9120202	1					
ANR	9120456	GotoStatement	goto fail ;	322:12:10580:10589	9120202	1	True				
ANR	9120457	Identifier	fail		9120202	0					
ANR	9120458	IfStatement	if ( code == 0 )		9120202	5					
ANR	9120459	Condition	code == 0	323:12:10603:10611	9120202	0	True				
ANR	9120460	EqualityExpression	code == 0		9120202	0		==			
ANR	9120461	Identifier	code		9120202	0					
ANR	9120462	PrimaryExpression	0		9120202	1					
ANR	9120463	CompoundStatement		46:23:1599:1599	9120202	1					
ANR	9120464	ExpressionStatement	"code = determine_sampled_data_size ( params -> m , params -> n , params -> BitsPerSample , ( int * ) params -> Size )"	328:12:10764:10896	9120202	0	True				
ANR	9120465	AssignmentExpression	"code = determine_sampled_data_size ( params -> m , params -> n , params -> BitsPerSample , ( int * ) params -> Size )"		9120202	0		=			
ANR	9120466	Identifier	code		9120202	0					
ANR	9120467	CallExpression	"determine_sampled_data_size ( params -> m , params -> n , params -> BitsPerSample , ( int * ) params -> Size )"		9120202	1					
ANR	9120468	Callee	determine_sampled_data_size		9120202	0					
ANR	9120469	Identifier	determine_sampled_data_size		9120202	0					
ANR	9120470	ArgumentList	params -> m		9120202	1					
ANR	9120471	Argument	params -> m		9120202	0					
ANR	9120472	PtrMemberAccess	params -> m		9120202	0					
ANR	9120473	Identifier	params		9120202	0					
ANR	9120474	Identifier	m		9120202	1					
ANR	9120475	Argument	params -> n		9120202	1					
ANR	9120476	PtrMemberAccess	params -> n		9120202	0					
ANR	9120477	Identifier	params		9120202	0					
ANR	9120478	Identifier	n		9120202	1					
ANR	9120479	Argument	params -> BitsPerSample		9120202	2					
ANR	9120480	PtrMemberAccess	params -> BitsPerSample		9120202	0					
ANR	9120481	Identifier	params		9120202	0					
ANR	9120482	Identifier	BitsPerSample		9120202	1					
ANR	9120483	Argument	( int * ) params -> Size		9120202	3					
ANR	9120484	CastExpression	( int * ) params -> Size		9120202	0					
ANR	9120485	CastTarget	int *		9120202	0					
ANR	9120486	PtrMemberAccess	params -> Size		9120202	1					
ANR	9120487	Identifier	params		9120202	0					
ANR	9120488	Identifier	Size		9120202	1					
ANR	9120489	IfStatement	if ( code < 0 )		9120202	1					
ANR	9120490	Condition	code < 0	330:16:10914:10921	9120202	0	True				
ANR	9120491	RelationalExpression	code < 0		9120202	0		<			
ANR	9120492	Identifier	code		9120202	0					
ANR	9120493	PrimaryExpression	0		9120202	1					
ANR	9120494	GotoStatement	goto fail ;	331:16:10940:10949	9120202	1	True				
ANR	9120495	Identifier	fail		9120202	0					
ANR	9120496	ElseStatement	else		9120202	0					
ANR	9120497	CompoundStatement		56:13:1959:1959	9120202	0					
ANR	9120498	IfStatement	"if ( code != params -> m || ! valid_cube_size ( params -> m , params -> n , params -> BitsPerSample , params -> Size ) )"		9120202	0					
ANR	9120499	Condition	"code != params -> m || ! valid_cube_size ( params -> m , params -> n , params -> BitsPerSample , params -> Size )"	334:16:11036:11147	9120202	0	True				
ANR	9120500	OrExpression	"code != params -> m || ! valid_cube_size ( params -> m , params -> n , params -> BitsPerSample , params -> Size )"		9120202	0		||			
ANR	9120501	EqualityExpression	code != params -> m		9120202	0		!=			
ANR	9120502	Identifier	code		9120202	0					
ANR	9120503	PtrMemberAccess	params -> m		9120202	1					
ANR	9120504	Identifier	params		9120202	0					
ANR	9120505	Identifier	m		9120202	1					
ANR	9120506	UnaryOperationExpression	"! valid_cube_size ( params -> m , params -> n , params -> BitsPerSample , params -> Size )"		9120202	1					
ANR	9120507	UnaryOperator	!		9120202	0					
ANR	9120508	CallExpression	"valid_cube_size ( params -> m , params -> n , params -> BitsPerSample , params -> Size )"		9120202	1					
ANR	9120509	Callee	valid_cube_size		9120202	0					
ANR	9120510	Identifier	valid_cube_size		9120202	0					
ANR	9120511	ArgumentList	params -> m		9120202	1					
ANR	9120512	Argument	params -> m		9120202	0					
ANR	9120513	PtrMemberAccess	params -> m		9120202	0					
ANR	9120514	Identifier	params		9120202	0					
ANR	9120515	Identifier	m		9120202	1					
ANR	9120516	Argument	params -> n		9120202	1					
ANR	9120517	PtrMemberAccess	params -> n		9120202	0					
ANR	9120518	Identifier	params		9120202	0					
ANR	9120519	Identifier	n		9120202	1					
ANR	9120520	Argument	params -> BitsPerSample		9120202	2					
ANR	9120521	PtrMemberAccess	params -> BitsPerSample		9120202	0					
ANR	9120522	Identifier	params		9120202	0					
ANR	9120523	Identifier	BitsPerSample		9120202	1					
ANR	9120524	Argument	params -> Size		9120202	3					
ANR	9120525	PtrMemberAccess	params -> Size		9120202	0					
ANR	9120526	Identifier	params		9120202	0					
ANR	9120527	Identifier	Size		9120202	1					
ANR	9120528	CompoundStatement		58:54:2135:2135	9120202	1					
ANR	9120529	ExpressionStatement	code = gs_note_error ( gs_error_rangecheck )	336:20:11172:11213	9120202	0	True				
ANR	9120530	AssignmentExpression	code = gs_note_error ( gs_error_rangecheck )		9120202	0		=			
ANR	9120531	Identifier	code		9120202	0					
ANR	9120532	CallExpression	gs_note_error ( gs_error_rangecheck )		9120202	1					
ANR	9120533	Callee	gs_note_error		9120202	0					
ANR	9120534	Identifier	gs_note_error		9120202	0					
ANR	9120535	ArgumentList	gs_error_rangecheck		9120202	1					
ANR	9120536	Argument	gs_error_rangecheck		9120202	0					
ANR	9120537	Identifier	gs_error_rangecheck		9120202	0					
ANR	9120538	GotoStatement	goto fail ;	337:20:11235:11244	9120202	1	True				
ANR	9120539	Identifier	fail		9120202	0					
ANR	9120540	ExpressionStatement	total_size = params -> n * bits2bytes ( params -> BitsPerSample )	344:4:11356:11414	9120202	8	True				
ANR	9120541	AssignmentExpression	total_size = params -> n * bits2bytes ( params -> BitsPerSample )		9120202	0		=			
ANR	9120542	Identifier	total_size		9120202	0					
ANR	9120543	MultiplicativeExpression	params -> n * bits2bytes ( params -> BitsPerSample )		9120202	1		*			
ANR	9120544	PtrMemberAccess	params -> n		9120202	0					
ANR	9120545	Identifier	params		9120202	0					
ANR	9120546	Identifier	n		9120202	1					
ANR	9120547	CallExpression	bits2bytes ( params -> BitsPerSample )		9120202	1					
ANR	9120548	Callee	bits2bytes		9120202	0					
ANR	9120549	Identifier	bits2bytes		9120202	0					
ANR	9120550	ArgumentList	params -> BitsPerSample		9120202	1					
ANR	9120551	Argument	params -> BitsPerSample		9120202	0					
ANR	9120552	PtrMemberAccess	params -> BitsPerSample		9120202	0					
ANR	9120553	Identifier	params		9120202	0					
ANR	9120554	Identifier	BitsPerSample		9120202	1					
ANR	9120555	ForStatement	for ( i = 0 ; i < params -> m ; i ++ )		9120202	9					
ANR	9120556	ForInit	i = 0 ;	345:9:11425:11430	9120202	0	True				
ANR	9120557	AssignmentExpression	i = 0		9120202	0		=			
ANR	9120558	Identifier	i		9120202	0					
ANR	9120559	PrimaryExpression	0		9120202	1					
ANR	9120560	Condition	i < params -> m	345:16:11432:11444	9120202	1	True				
ANR	9120561	RelationalExpression	i < params -> m		9120202	0		<			
ANR	9120562	Identifier	i		9120202	0					
ANR	9120563	PtrMemberAccess	params -> m		9120202	1					
ANR	9120564	Identifier	params		9120202	0					
ANR	9120565	Identifier	m		9120202	1					
ANR	9120566	PostIncDecOperationExpression	i ++	345:31:11447:11449	9120202	2	True				
ANR	9120567	Identifier	i		9120202	0					
ANR	9120568	IncDec	++		9120202	1					
ANR	9120569	ExpressionStatement	total_size *= params -> Size [ i ]	346:8:11460:11489	9120202	3	True				
ANR	9120570	AssignmentExpression	total_size *= params -> Size [ i ]		9120202	0		*=			
ANR	9120571	Identifier	total_size		9120202	0					
ANR	9120572	ArrayIndexing	params -> Size [ i ]		9120202	1					
ANR	9120573	PtrMemberAccess	params -> Size		9120202	0					
ANR	9120574	Identifier	params		9120202	0					
ANR	9120575	Identifier	Size		9120202	1					
ANR	9120576	Identifier	i		9120202	1					
ANR	9120577	ExpressionStatement	"bytes = gs_alloc_byte_array ( mem , total_size , 1 , ""cube_build_func0(bytes)"" )"	350:4:11558:11632	9120202	10	True				
ANR	9120578	AssignmentExpression	"bytes = gs_alloc_byte_array ( mem , total_size , 1 , ""cube_build_func0(bytes)"" )"		9120202	0		=			
ANR	9120579	Identifier	bytes		9120202	0					
ANR	9120580	CallExpression	"gs_alloc_byte_array ( mem , total_size , 1 , ""cube_build_func0(bytes)"" )"		9120202	1					
ANR	9120581	Callee	gs_alloc_byte_array		9120202	0					
ANR	9120582	Identifier	gs_alloc_byte_array		9120202	0					
ANR	9120583	ArgumentList	mem		9120202	1					
ANR	9120584	Argument	mem		9120202	0					
ANR	9120585	Identifier	mem		9120202	0					
ANR	9120586	Argument	total_size		9120202	1					
ANR	9120587	Identifier	total_size		9120202	0					
ANR	9120588	Argument	1		9120202	2					
ANR	9120589	PrimaryExpression	1		9120202	0					
ANR	9120590	Argument	"""cube_build_func0(bytes)"""		9120202	3					
ANR	9120591	PrimaryExpression	"""cube_build_func0(bytes)"""		9120202	0					
ANR	9120592	IfStatement	if ( ! bytes )		9120202	11					
ANR	9120593	Condition	! bytes	351:8:11642:11647	9120202	0	True				
ANR	9120594	UnaryOperationExpression	! bytes		9120202	0					
ANR	9120595	UnaryOperator	!		9120202	0					
ANR	9120596	Identifier	bytes		9120202	1					
ANR	9120597	CompoundStatement		74:16:2635:2635	9120202	1					
ANR	9120598	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	352:8:11660:11698	9120202	0	True				
ANR	9120599	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		9120202	0		=			
ANR	9120600	Identifier	code		9120202	0					
ANR	9120601	CallExpression	gs_note_error ( gs_error_VMerror )		9120202	1					
ANR	9120602	Callee	gs_note_error		9120202	0					
ANR	9120603	Identifier	gs_note_error		9120202	0					
ANR	9120604	ArgumentList	gs_error_VMerror		9120202	1					
ANR	9120605	Argument	gs_error_VMerror		9120202	0					
ANR	9120606	Identifier	gs_error_VMerror		9120202	0					
ANR	9120607	GotoStatement	goto fail ;	353:8:11708:11717	9120202	1	True				
ANR	9120608	Identifier	fail		9120202	0					
ANR	9120609	ExpressionStatement	"data_source_init_bytes ( & params -> DataSource , ( const unsigned char * ) bytes , total_size )"	355:4:11729:11846	9120202	12	True				
ANR	9120610	CallExpression	"data_source_init_bytes ( & params -> DataSource , ( const unsigned char * ) bytes , total_size )"		9120202	0					
ANR	9120611	Callee	data_source_init_bytes		9120202	0					
ANR	9120612	Identifier	data_source_init_bytes		9120202	0					
ANR	9120613	ArgumentList	& params -> DataSource		9120202	1					
ANR	9120614	Argument	& params -> DataSource		9120202	0					
ANR	9120615	UnaryOperationExpression	& params -> DataSource		9120202	0					
ANR	9120616	UnaryOperator	&		9120202	0					
ANR	9120617	PtrMemberAccess	params -> DataSource		9120202	1					
ANR	9120618	Identifier	params		9120202	0					
ANR	9120619	Identifier	DataSource		9120202	1					
ANR	9120620	Argument	( const unsigned char * ) bytes		9120202	1					
ANR	9120621	CastExpression	( const unsigned char * ) bytes		9120202	0					
ANR	9120622	CastTarget	const unsigned char *		9120202	0					
ANR	9120623	Identifier	bytes		9120202	1					
ANR	9120624	Argument	total_size		9120202	2					
ANR	9120625	Identifier	total_size		9120202	0					
ANR	9120626	ReturnStatement	return 0 ;	358:4:11853:11861	9120202	13	True				
ANR	9120627	PrimaryExpression	0		9120202	0					
ANR	9120628	Label	fail :	360:0:11864:11868	9120202	14	True				
ANR	9120629	Identifier	fail		9120202	0					
ANR	9120630	ExpressionStatement	"gs_function_Sd_free_params ( params , mem )"	361:4:11874:11913	9120202	15	True				
ANR	9120631	CallExpression	"gs_function_Sd_free_params ( params , mem )"		9120202	0					
ANR	9120632	Callee	gs_function_Sd_free_params		9120202	0					
ANR	9120633	Identifier	gs_function_Sd_free_params		9120202	0					
ANR	9120634	ArgumentList	params		9120202	1					
ANR	9120635	Argument	params		9120202	0					
ANR	9120636	Identifier	params		9120202	0					
ANR	9120637	Argument	mem		9120202	1					
ANR	9120638	Identifier	mem		9120202	0					
ANR	9120639	ReturnStatement	return ( code < 0 ? code : gs_note_error ( gs_error_rangecheck ) ) ;	362:4:11919:11980	9120202	16	True				
ANR	9120640	ConditionalExpression	code < 0 ? code : gs_note_error ( gs_error_rangecheck )		9120202	0					
ANR	9120641	Condition	code < 0		9120202	0					
ANR	9120642	RelationalExpression	code < 0		9120202	0		<			
ANR	9120643	Identifier	code		9120202	0					
ANR	9120644	PrimaryExpression	0		9120202	1					
ANR	9120645	Identifier	code		9120202	1					
ANR	9120646	CallExpression	gs_note_error ( gs_error_rangecheck )		9120202	2					
ANR	9120647	Callee	gs_note_error		9120202	0					
ANR	9120648	Identifier	gs_note_error		9120202	0					
ANR	9120649	ArgumentList	gs_error_rangecheck		9120202	1					
ANR	9120650	Argument	gs_error_rangecheck		9120202	0					
ANR	9120651	Identifier	gs_error_rangecheck		9120202	0					
ANR	9120652	ReturnType	static int		9120202	1					
ANR	9120653	Identifier	cube_build_func0		9120202	2					
ANR	9120654	ParameterList	"const ref * pdict , gs_function_Sd_params_t * params , gs_memory_t * mem"		9120202	3					
ANR	9120655	Parameter	const ref * pdict	276:17:8887:8903	9120202	0	True				
ANR	9120656	ParameterType	const ref *		9120202	0					
ANR	9120657	Identifier	pdict		9120202	1					
ANR	9120658	Parameter	gs_function_Sd_params_t * params	276:36:8906:8937	9120202	1	True				
ANR	9120659	ParameterType	gs_function_Sd_params_t *		9120202	0					
ANR	9120660	Identifier	params		9120202	1					
ANR	9120661	Parameter	gs_memory_t * mem	277:56:8996:9011	9120202	2	True				
ANR	9120662	ParameterType	gs_memory_t *		9120202	0					
ANR	9120663	Identifier	mem		9120202	1					
ANR	9120664	CFGEntryNode	ENTRY		9120202		True				
ANR	9120665	CFGExitNode	EXIT		9120202		True				
ANR	9120666	Symbol	params -> BitsPerSample		9120202						
ANR	9120667	Symbol	code		9120202						
ANR	9120668	Symbol	gs_error_rangecheck		9120202						
ANR	9120669	Symbol	MAX_NUM_OUTPUTS		9120202						
ANR	9120670	Symbol	* * params		9120202						
ANR	9120671	Symbol	& params -> Order		9120202						
ANR	9120672	Symbol	params -> m		9120202						
ANR	9120673	Symbol	MAX_NUM_INPUTS		9120202						
ANR	9120674	Symbol	params -> n		9120202						
ANR	9120675	Symbol	mem		9120202						
ANR	9120676	Symbol	params -> Size		9120202						
ANR	9120677	Symbol	* params		9120202						
ANR	9120678	Symbol	determine_sampled_data_size		9120202						
ANR	9120679	Symbol	NULL		9120202						
ANR	9120680	Symbol	total_size		9120202						
ANR	9120681	Symbol	false		9120202						
ANR	9120682	Symbol	* params -> Size		9120202						
ANR	9120683	Symbol	i		9120202						
ANR	9120684	Symbol	& params -> DataSource		9120202						
ANR	9120685	Symbol	fn_build_float_array		9120202						
ANR	9120686	Symbol	params		9120202						
ANR	9120687	Symbol	& params -> Domain		9120202						
ANR	9120688	Symbol	bits2bytes		9120202						
ANR	9120689	Symbol	ptr		9120202						
ANR	9120690	Symbol	gs_error_VMerror		9120202						
ANR	9120691	Symbol	gs_note_error		9120202						
ANR	9120692	Symbol	* i		9120202						
ANR	9120693	Symbol	bytes		9120202						
ANR	9120694	Symbol	true		9120202						
ANR	9120695	Symbol	& params -> BitsPerSample		9120202						
ANR	9120696	Symbol	dict_int_param		9120202						
ANR	9120697	Symbol	valid_cube_size		9120202						
ANR	9120698	Symbol	& params -> Range		9120202						
ANR	9120699	Symbol	gs_alloc_byte_array		9120202						
ANR	9120700	Symbol	dict_ints_param		9120202						
ANR	9120701	Symbol	pdict		9120202						
ANR	9120702	Function	sampled_data_setup	393:0:13002:14882							
ANR	9120703	FunctionDef	"sampled_data_setup (i_ctx_t * i_ctx_p , gs_function_t * pfn , const ref * pproc , int ( * finish_proc ) ( i_ctx_t * ) , gs_memory_t * mem)"		9120702	0					
ANR	9120704	CompoundStatement		396:0:13147:14882	9120702	0					
ANR	9120705	IdentifierDeclStatement	os_ptr op = osp ;	397:4:13153:13168	9120702	0	True				
ANR	9120706	IdentifierDecl	op = osp		9120702	0					
ANR	9120707	IdentifierDeclType	os_ptr		9120702	0					
ANR	9120708	Identifier	op		9120702	1					
ANR	9120709	AssignmentExpression	op = osp		9120702	2		=			
ANR	9120710	Identifier	osp		9120702	0					
ANR	9120711	Identifier	osp		9120702	1					
ANR	9120712	IdentifierDeclStatement	gs_sampled_data_enum * penum ;	398:4:13174:13201	9120702	1	True				
ANR	9120713	IdentifierDecl	* penum		9120702	0					
ANR	9120714	IdentifierDeclType	gs_sampled_data_enum *		9120702	0					
ANR	9120715	Identifier	penum		9120702	1					
ANR	9120716	IdentifierDeclStatement	int i ;	399:4:13207:13212	9120702	2	True				
ANR	9120717	IdentifierDecl	i		9120702	0					
ANR	9120718	IdentifierDeclType	int		9120702	0					
ANR	9120719	Identifier	i		9120702	1					
ANR	9120720	IdentifierDeclStatement	gs_function_Sd_params_t * params = ( gs_function_Sd_params_t * ) & pfn -> params ;	400:4:13218:13292	9120702	3	True				
ANR	9120721	IdentifierDecl	* params = ( gs_function_Sd_params_t * ) & pfn -> params		9120702	0					
ANR	9120722	IdentifierDeclType	gs_function_Sd_params_t *		9120702	0					
ANR	9120723	Identifier	params		9120702	1					
ANR	9120724	AssignmentExpression	* params = ( gs_function_Sd_params_t * ) & pfn -> params		9120702	2		=			
ANR	9120725	Identifier	params		9120702	0					
ANR	9120726	CastExpression	( gs_function_Sd_params_t * ) & pfn -> params		9120702	1					
ANR	9120727	CastTarget	gs_function_Sd_params_t *		9120702	0					
ANR	9120728	UnaryOperationExpression	& pfn -> params		9120702	1					
ANR	9120729	UnaryOperator	&		9120702	0					
ANR	9120730	PtrMemberAccess	pfn -> params		9120702	1					
ANR	9120731	Identifier	pfn		9120702	0					
ANR	9120732	Identifier	params		9120702	1					
ANR	9120733	ExpressionStatement	check_estack ( estack_storage + 1 )	402:4:13299:13331	9120702	4	True				
ANR	9120734	CallExpression	check_estack ( estack_storage + 1 )		9120702	0					
ANR	9120735	Callee	check_estack		9120702	0					
ANR	9120736	Identifier	check_estack		9120702	0					
ANR	9120737	ArgumentList	estack_storage + 1		9120702	1					
ANR	9120738	Argument	estack_storage + 1		9120702	0					
ANR	9120739	AdditiveExpression	estack_storage + 1		9120702	0		+			
ANR	9120740	Identifier	estack_storage		9120702	0					
ANR	9120741	PrimaryExpression	1		9120702	1					
ANR	9120742	ExpressionStatement	check_ostack ( params -> m + O_STACK_PAD )	403:4:13367:13404	9120702	5	True				
ANR	9120743	CallExpression	check_ostack ( params -> m + O_STACK_PAD )		9120702	0					
ANR	9120744	Callee	check_ostack		9120702	0					
ANR	9120745	Identifier	check_ostack		9120702	0					
ANR	9120746	ArgumentList	params -> m + O_STACK_PAD		9120702	1					
ANR	9120747	Argument	params -> m + O_STACK_PAD		9120702	0					
ANR	9120748	AdditiveExpression	params -> m + O_STACK_PAD		9120702	0		+			
ANR	9120749	PtrMemberAccess	params -> m		9120702	0					
ANR	9120750	Identifier	params		9120702	0					
ANR	9120751	Identifier	m		9120702	1					
ANR	9120752	Identifier	O_STACK_PAD		9120702	1					
ANR	9120753	ExpressionStatement	check_ostack ( params -> n + O_STACK_PAD )	404:4:13438:13475	9120702	6	True				
ANR	9120754	CallExpression	check_ostack ( params -> n + O_STACK_PAD )		9120702	0					
ANR	9120755	Callee	check_ostack		9120702	0					
ANR	9120756	Identifier	check_ostack		9120702	0					
ANR	9120757	ArgumentList	params -> n + O_STACK_PAD		9120702	1					
ANR	9120758	Argument	params -> n + O_STACK_PAD		9120702	0					
ANR	9120759	AdditiveExpression	params -> n + O_STACK_PAD		9120702	0		+			
ANR	9120760	PtrMemberAccess	params -> n		9120702	0					
ANR	9120761	Identifier	params		9120702	0					
ANR	9120762	Identifier	n		9120702	1					
ANR	9120763	Identifier	O_STACK_PAD		9120702	1					
ANR	9120764	ExpressionStatement	"penum = gs_sampled_data_enum_alloc ( imemory , ""zbuildsampledfuntion(params)"" )"	409:4:13554:13629	9120702	7	True				
ANR	9120765	AssignmentExpression	"penum = gs_sampled_data_enum_alloc ( imemory , ""zbuildsampledfuntion(params)"" )"		9120702	0		=			
ANR	9120766	Identifier	penum		9120702	0					
ANR	9120767	CallExpression	"gs_sampled_data_enum_alloc ( imemory , ""zbuildsampledfuntion(params)"" )"		9120702	1					
ANR	9120768	Callee	gs_sampled_data_enum_alloc		9120702	0					
ANR	9120769	Identifier	gs_sampled_data_enum_alloc		9120702	0					
ANR	9120770	ArgumentList	imemory		9120702	1					
ANR	9120771	Argument	imemory		9120702	0					
ANR	9120772	Identifier	imemory		9120702	0					
ANR	9120773	Argument	"""zbuildsampledfuntion(params)"""		9120702	1					
ANR	9120774	PrimaryExpression	"""zbuildsampledfuntion(params)"""		9120702	0					
ANR	9120775	IfStatement	if ( penum == NULL )		9120702	8					
ANR	9120776	Condition	penum == NULL	410:8:13639:13651	9120702	0	True				
ANR	9120777	EqualityExpression	penum == NULL		9120702	0		==			
ANR	9120778	Identifier	penum		9120702	0					
ANR	9120779	Identifier	NULL		9120702	1					
ANR	9120780	ExpressionStatement	return_error ( gs_error_VMerror )	411:8:13662:13692	9120702	1	True				
ANR	9120781	CallExpression	return_error ( gs_error_VMerror )		9120702	0					
ANR	9120782	Callee	return_error		9120702	0					
ANR	9120783	Identifier	return_error		9120702	0					
ANR	9120784	ArgumentList	gs_error_VMerror		9120702	1					
ANR	9120785	Argument	gs_error_VMerror		9120702	0					
ANR	9120786	Identifier	gs_error_VMerror		9120702	0					
ANR	9120787	ExpressionStatement	penum -> pfn = pfn	415:4:13755:13771	9120702	9	True				
ANR	9120788	AssignmentExpression	penum -> pfn = pfn		9120702	0		=			
ANR	9120789	PtrMemberAccess	penum -> pfn		9120702	0					
ANR	9120790	Identifier	penum		9120702	0					
ANR	9120791	Identifier	pfn		9120702	1					
ANR	9120792	Identifier	pfn		9120702	1					
ANR	9120793	ForStatement	for ( i = 0 ; i < params -> m ; i ++ )		9120702	10					
ANR	9120794	ForInit	i = 0 ;	416:8:13781:13784	9120702	0	True				
ANR	9120795	AssignmentExpression	i = 0		9120702	0		=			
ANR	9120796	Identifier	i		9120702	0					
ANR	9120797	PrimaryExpression	0		9120702	1					
ANR	9120798	Condition	i < params -> m	416:13:13786:13797	9120702	1	True				
ANR	9120799	RelationalExpression	i < params -> m		9120702	0		<			
ANR	9120800	Identifier	i		9120702	0					
ANR	9120801	PtrMemberAccess	params -> m		9120702	1					
ANR	9120802	Identifier	params		9120702	0					
ANR	9120803	Identifier	m		9120702	1					
ANR	9120804	PostIncDecOperationExpression	i ++	416:27:13800:13802	9120702	2	True				
ANR	9120805	Identifier	i		9120702	0					
ANR	9120806	IncDec	++		9120702	1					
ANR	9120807	ExpressionStatement	penum -> indexes [ i ] = 0	417:8:13813:13834	9120702	3	True				
ANR	9120808	AssignmentExpression	penum -> indexes [ i ] = 0		9120702	0		=			
ANR	9120809	ArrayIndexing	penum -> indexes [ i ]		9120702	0					
ANR	9120810	PtrMemberAccess	penum -> indexes		9120702	0					
ANR	9120811	Identifier	penum		9120702	0					
ANR	9120812	Identifier	indexes		9120702	1					
ANR	9120813	Identifier	i		9120702	1					
ANR	9120814	PrimaryExpression	0		9120702	1					
ANR	9120815	ExpressionStatement	penum -> o_stack_depth = ref_stack_count ( & o_stack )	422:4:13992:14040	9120702	11	True				
ANR	9120816	AssignmentExpression	penum -> o_stack_depth = ref_stack_count ( & o_stack )		9120702	0		=			
ANR	9120817	PtrMemberAccess	penum -> o_stack_depth		9120702	0					
ANR	9120818	Identifier	penum		9120702	0					
ANR	9120819	Identifier	o_stack_depth		9120702	1					
ANR	9120820	CallExpression	ref_stack_count ( & o_stack )		9120702	1					
ANR	9120821	Callee	ref_stack_count		9120702	0					
ANR	9120822	Identifier	ref_stack_count		9120702	0					
ANR	9120823	ArgumentList	& o_stack		9120702	1					
ANR	9120824	Argument	& o_stack		9120702	0					
ANR	9120825	UnaryOperationExpression	& o_stack		9120702	0					
ANR	9120826	UnaryOperator	&		9120702	0					
ANR	9120827	Identifier	o_stack		9120702	1					
ANR	9120828	ExpressionStatement	push ( O_STACK_PAD )	430:4:14404:14421	9120702	12	True				
ANR	9120829	CallExpression	push ( O_STACK_PAD )		9120702	0					
ANR	9120830	Callee	push		9120702	0					
ANR	9120831	Identifier	push		9120702	0					
ANR	9120832	ArgumentList	O_STACK_PAD		9120702	1					
ANR	9120833	Argument	O_STACK_PAD		9120702	0					
ANR	9120834	Identifier	O_STACK_PAD		9120702	0					
ANR	9120835	ForStatement	for ( i = 0 ; i < O_STACK_PAD ; i ++ )		9120702	13					
ANR	9120836	ForInit	i = 0 ;	431:9:14432:14437	9120702	0	True				
ANR	9120837	AssignmentExpression	i = 0		9120702	0		=			
ANR	9120838	Identifier	i		9120702	0					
ANR	9120839	PrimaryExpression	0		9120702	1					
ANR	9120840	Condition	i < O_STACK_PAD	431:16:14439:14453	9120702	1	True				
ANR	9120841	RelationalExpression	i < O_STACK_PAD		9120702	0		<			
ANR	9120842	Identifier	i		9120702	0					
ANR	9120843	Identifier	O_STACK_PAD		9120702	1					
ANR	9120844	PostIncDecOperationExpression	i ++	431:33:14456:14458	9120702	2	True				
ANR	9120845	Identifier	i		9120702	0					
ANR	9120846	IncDec	++		9120702	1					
ANR	9120847	ExpressionStatement	make_null ( op - i )	432:8:14494:14511	9120702	3	True				
ANR	9120848	CallExpression	make_null ( op - i )		9120702	0					
ANR	9120849	Callee	make_null		9120702	0					
ANR	9120850	Identifier	make_null		9120702	0					
ANR	9120851	ArgumentList	op - i		9120702	1					
ANR	9120852	Argument	op - i		9120702	0					
ANR	9120853	AdditiveExpression	op - i		9120702	0		-			
ANR	9120854	Identifier	op		9120702	0					
ANR	9120855	Identifier	i		9120702	1					
ANR	9120856	ExpressionStatement	esp += estack_storage	436:4:14559:14580	9120702	14	True				
ANR	9120857	AssignmentExpression	esp += estack_storage		9120702	0		+=			
ANR	9120858	Identifier	esp		9120702	0					
ANR	9120859	Identifier	estack_storage		9120702	1					
ANR	9120860	ExpressionStatement	"make_op_estack ( esp - 2 , finish_proc )"	437:4:14586:14622	9120702	15	True				
ANR	9120861	CallExpression	"make_op_estack ( esp - 2 , finish_proc )"		9120702	0					
ANR	9120862	Callee	make_op_estack		9120702	0					
ANR	9120863	Identifier	make_op_estack		9120702	0					
ANR	9120864	ArgumentList	esp - 2		9120702	1					
ANR	9120865	Argument	esp - 2		9120702	0					
ANR	9120866	AdditiveExpression	esp - 2		9120702	0		-			
ANR	9120867	Identifier	esp		9120702	0					
ANR	9120868	PrimaryExpression	2		9120702	1					
ANR	9120869	Argument	finish_proc		9120702	1					
ANR	9120870	Identifier	finish_proc		9120702	0					
ANR	9120871	ExpressionStatement	sample_proc = * pproc	438:4:14658:14678	9120702	16	True				
ANR	9120872	AssignmentExpression	sample_proc = * pproc		9120702	0		=			
ANR	9120873	Identifier	sample_proc		9120702	0					
ANR	9120874	UnaryOperationExpression	* pproc		9120702	1					
ANR	9120875	UnaryOperator	*		9120702	0					
ANR	9120876	Identifier	pproc		9120702	1					
ANR	9120877	ExpressionStatement	"make_istruct ( esp , 0 , penum )"	439:4:14720:14747	9120702	17	True				
ANR	9120878	CallExpression	"make_istruct ( esp , 0 , penum )"		9120702	0					
ANR	9120879	Callee	make_istruct		9120702	0					
ANR	9120880	Identifier	make_istruct		9120702	0					
ANR	9120881	ArgumentList	esp		9120702	1					
ANR	9120882	Argument	esp		9120702	0					
ANR	9120883	Identifier	esp		9120702	0					
ANR	9120884	Argument	0		9120702	1					
ANR	9120885	PrimaryExpression	0		9120702	0					
ANR	9120886	Argument	penum		9120702	2					
ANR	9120887	Identifier	penum		9120702	0					
ANR	9120888	ExpressionStatement	push_op_estack ( sampled_data_sample )	440:4:14793:14828	9120702	18	True				
ANR	9120889	CallExpression	push_op_estack ( sampled_data_sample )		9120702	0					
ANR	9120890	Callee	push_op_estack		9120702	0					
ANR	9120891	Identifier	push_op_estack		9120702	0					
ANR	9120892	ArgumentList	sampled_data_sample		9120702	1					
ANR	9120893	Argument	sampled_data_sample		9120702	0					
ANR	9120894	Identifier	sampled_data_sample		9120702	0					
ANR	9120895	ReturnStatement	return o_push_estack ;	441:4:14860:14880	9120702	19	True				
ANR	9120896	Identifier	o_push_estack		9120702	0					
ANR	9120897	ReturnType	static int		9120702	1					
ANR	9120898	Identifier	sampled_data_setup		9120702	2					
ANR	9120899	ParameterList	"i_ctx_t * i_ctx_p , gs_function_t * pfn , const ref * pproc , int ( * finish_proc ) ( i_ctx_t * ) , gs_memory_t * mem"		9120702	3					
ANR	9120900	Parameter	i_ctx_t * i_ctx_p	394:19:13032:13047	9120702	0	True				
ANR	9120901	ParameterType	i_ctx_t *		9120702	0					
ANR	9120902	Identifier	i_ctx_p		9120702	1					
ANR	9120903	Parameter	gs_function_t * pfn	394:37:13050:13067	9120702	1	True				
ANR	9120904	ParameterType	gs_function_t *		9120702	0					
ANR	9120905	Identifier	pfn		9120702	1					
ANR	9120906	Parameter	const ref * pproc	395:8:13078:13094	9120702	2	True				
ANR	9120907	ParameterType	const ref *		9120702	0					
ANR	9120908	Identifier	pproc		9120702	1					
ANR	9120909	Parameter	int ( * finish_proc ) ( i_ctx_t * )	395:27:13097:13125	9120702	3	True				
ANR	9120910	ParameterType	(( i_ctx_t * ) int) *		9120702	0					
ANR	9120911	Identifier	finish_proc		9120702	1					
ANR	9120912	Parameter	gs_memory_t * mem	395:58:13128:13144	9120702	4	True				
ANR	9120913	ParameterType	gs_memory_t *		9120702	0					
ANR	9120914	Identifier	mem		9120702	1					
ANR	9120915	CFGEntryNode	ENTRY		9120702		True				
ANR	9120916	CFGExitNode	EXIT		9120702		True				
ANR	9120917	Symbol	* penum		9120702						
ANR	9120918	Symbol	esp		9120702						
ANR	9120919	Symbol	sampled_data_sample		9120702						
ANR	9120920	Symbol	osp		9120702						
ANR	9120921	Symbol	O_STACK_PAD		9120702						
ANR	9120922	Symbol	params -> m		9120702						
ANR	9120923	Symbol	params -> n		9120702						
ANR	9120924	Symbol	mem		9120702						
ANR	9120925	Symbol	finish_proc		9120702						
ANR	9120926	Symbol	pproc		9120702						
ANR	9120927	Symbol	imemory		9120702						
ANR	9120928	Symbol	gs_sampled_data_enum_alloc		9120702						
ANR	9120929	Symbol	* params		9120702						
ANR	9120930	Symbol	* * penum		9120702						
ANR	9120931	Symbol	o_push_estack		9120702						
ANR	9120932	Symbol	penum -> indexes		9120702						
ANR	9120933	Symbol	op		9120702						
ANR	9120934	Symbol	NULL		9120702						
ANR	9120935	Symbol	penum		9120702						
ANR	9120936	Symbol	& pfn -> params		9120702						
ANR	9120937	Symbol	i		9120702						
ANR	9120938	Symbol	penum -> pfn		9120702						
ANR	9120939	Symbol	sample_proc		9120702						
ANR	9120940	Symbol	params		9120702						
ANR	9120941	Symbol	* pproc		9120702						
ANR	9120942	Symbol	gs_error_VMerror		9120702						
ANR	9120943	Symbol	* i		9120702						
ANR	9120944	Symbol	i_ctx_p		9120702						
ANR	9120945	Symbol	& o_stack		9120702						
ANR	9120946	Symbol	ref_stack_count		9120702						
ANR	9120947	Symbol	pfn		9120702						
ANR	9120948	Symbol	estack_storage		9120702						
ANR	9120949	Symbol	penum -> o_stack_depth		9120702						
ANR	9120950	Symbol	* penum -> indexes		9120702						
ANR	9120951	Function	sampled_data_sample	447:0:14942:15815							
ANR	9120952	FunctionDef	sampled_data_sample (i_ctx_t * i_ctx_p)		9120951	0					
ANR	9120953	CompoundStatement		449:0:14991:15815	9120951	0					
ANR	9120954	IdentifierDeclStatement	os_ptr op = osp ;	450:4:14997:15012	9120951	0	True				
ANR	9120955	IdentifierDecl	op = osp		9120951	0					
ANR	9120956	IdentifierDeclType	os_ptr		9120951	0					
ANR	9120957	Identifier	op		9120951	1					
ANR	9120958	AssignmentExpression	op = osp		9120951	2		=			
ANR	9120959	Identifier	osp		9120951	0					
ANR	9120960	Identifier	osp		9120951	1					
ANR	9120961	IdentifierDeclStatement	gs_sampled_data_enum * penum = senum ;	451:4:15018:15053	9120951	1	True				
ANR	9120962	IdentifierDecl	* penum = senum		9120951	0					
ANR	9120963	IdentifierDeclType	gs_sampled_data_enum *		9120951	0					
ANR	9120964	Identifier	penum		9120951	1					
ANR	9120965	AssignmentExpression	* penum = senum		9120951	2		=			
ANR	9120966	Identifier	senum		9120951	0					
ANR	9120967	Identifier	senum		9120951	1					
ANR	9120968	IdentifierDeclStatement	ref proc ;	452:4:15059:15067	9120951	2	True				
ANR	9120969	IdentifierDecl	proc		9120951	0					
ANR	9120970	IdentifierDeclType	ref		9120951	0					
ANR	9120971	Identifier	proc		9120951	1					
ANR	9120972	IdentifierDeclStatement	gs_function_Sd_params_t * params = ( gs_function_Sd_params_t * ) & penum -> pfn -> params ;	453:4:15073:15178	9120951	3	True				
ANR	9120973	IdentifierDecl	* params = ( gs_function_Sd_params_t * ) & penum -> pfn -> params		9120951	0					
ANR	9120974	IdentifierDeclType	gs_function_Sd_params_t *		9120951	0					
ANR	9120975	Identifier	params		9120951	1					
ANR	9120976	AssignmentExpression	* params = ( gs_function_Sd_params_t * ) & penum -> pfn -> params		9120951	2		=			
ANR	9120977	Identifier	params		9120951	0					
ANR	9120978	CastExpression	( gs_function_Sd_params_t * ) & penum -> pfn -> params		9120951	1					
ANR	9120979	CastTarget	gs_function_Sd_params_t *		9120951	0					
ANR	9120980	UnaryOperationExpression	& penum -> pfn -> params		9120951	1					
ANR	9120981	UnaryOperator	&		9120951	0					
ANR	9120982	PtrMemberAccess	penum -> pfn -> params		9120951	1					
ANR	9120983	PtrMemberAccess	penum -> pfn		9120951	0					
ANR	9120984	Identifier	penum		9120951	0					
ANR	9120985	Identifier	pfn		9120951	1					
ANR	9120986	Identifier	params		9120951	1					
ANR	9120987	IdentifierDeclStatement	int num_inputs = params -> m ;	455:4:15184:15210	9120951	4	True				
ANR	9120988	IdentifierDecl	num_inputs = params -> m		9120951	0					
ANR	9120989	IdentifierDeclType	int		9120951	0					
ANR	9120990	Identifier	num_inputs		9120951	1					
ANR	9120991	AssignmentExpression	num_inputs = params -> m		9120951	2		=			
ANR	9120992	Identifier	num_inputs		9120951	0					
ANR	9120993	PtrMemberAccess	params -> m		9120951	1					
ANR	9120994	Identifier	params		9120951	0					
ANR	9120995	Identifier	m		9120951	1					
ANR	9120996	IdentifierDeclStatement	int i ;	456:4:15216:15221	9120951	5	True				
ANR	9120997	IdentifierDecl	i		9120951	0					
ANR	9120998	IdentifierDeclType	int		9120951	0					
ANR	9120999	Identifier	i		9120951	1					
ANR	9121000	ExpressionStatement	push ( num_inputs )	459:4:15278:15294	9120951	6	True				
ANR	9121001	CallExpression	push ( num_inputs )		9120951	0					
ANR	9121002	Callee	push		9120951	0					
ANR	9121003	Identifier	push		9120951	0					
ANR	9121004	ArgumentList	num_inputs		9120951	1					
ANR	9121005	Argument	num_inputs		9120951	0					
ANR	9121006	Identifier	num_inputs		9120951	0					
ANR	9121007	ForStatement	for ( i = 0 ; i < num_inputs ; i ++ )		9120951	7					
ANR	9121008	ForInit	i = 0 ;	460:9:15305:15310	9120951	0	True				
ANR	9121009	AssignmentExpression	i = 0		9120951	0		=			
ANR	9121010	Identifier	i		9120951	0					
ANR	9121011	PrimaryExpression	0		9120951	1					
ANR	9121012	Condition	i < num_inputs	460:16:15312:15325	9120951	1	True				
ANR	9121013	RelationalExpression	i < num_inputs		9120951	0		<			
ANR	9121014	Identifier	i		9120951	0					
ANR	9121015	Identifier	num_inputs		9120951	1					
ANR	9121016	PostIncDecOperationExpression	i ++	460:32:15328:15330	9120951	2	True				
ANR	9121017	Identifier	i		9120951	0					
ANR	9121018	IncDec	++		9120951	1					
ANR	9121019	CompoundStatement		14:8:396:435	9120951	3					
ANR	9121020	IdentifierDeclStatement	double dmin = params -> Domain [ 2 * i ] ;	461:8:15343:15378	9120951	0	True				
ANR	9121021	IdentifierDecl	dmin = params -> Domain [ 2 * i ]		9120951	0					
ANR	9121022	IdentifierDeclType	double		9120951	0					
ANR	9121023	Identifier	dmin		9120951	1					
ANR	9121024	AssignmentExpression	dmin = params -> Domain [ 2 * i ]		9120951	2		=			
ANR	9121025	Identifier	dmin		9120951	0					
ANR	9121026	ArrayIndexing	params -> Domain [ 2 * i ]		9120951	1					
ANR	9121027	PtrMemberAccess	params -> Domain		9120951	0					
ANR	9121028	Identifier	params		9120951	0					
ANR	9121029	Identifier	Domain		9120951	1					
ANR	9121030	MultiplicativeExpression	2 * i		9120951	1		*			
ANR	9121031	PrimaryExpression	2		9120951	0					
ANR	9121032	Identifier	i		9120951	1					
ANR	9121033	IdentifierDeclStatement	double dmax = params -> Domain [ 2 * i + 1 ] ;	462:8:15388:15427	9120951	1	True				
ANR	9121034	IdentifierDecl	dmax = params -> Domain [ 2 * i + 1 ]		9120951	0					
ANR	9121035	IdentifierDeclType	double		9120951	0					
ANR	9121036	Identifier	dmax		9120951	1					
ANR	9121037	AssignmentExpression	dmax = params -> Domain [ 2 * i + 1 ]		9120951	2		=			
ANR	9121038	Identifier	dmax		9120951	0					
ANR	9121039	ArrayIndexing	params -> Domain [ 2 * i + 1 ]		9120951	1					
ANR	9121040	PtrMemberAccess	params -> Domain		9120951	0					
ANR	9121041	Identifier	params		9120951	0					
ANR	9121042	Identifier	Domain		9120951	1					
ANR	9121043	AdditiveExpression	2 * i + 1		9120951	1		+			
ANR	9121044	MultiplicativeExpression	2 * i		9120951	0		*			
ANR	9121045	PrimaryExpression	2		9120951	0					
ANR	9121046	Identifier	i		9120951	1					
ANR	9121047	PrimaryExpression	1		9120951	1					
ANR	9121048	ExpressionStatement	"make_real ( op - num_inputs + i + 1 , ( float ) ( penum -> indexes [ i ] * ( dmax - dmin ) / ( params -> Size [ i ] - 1 ) + dmin ) )"	464:8:15438:15559	9120951	2	True				
ANR	9121049	CallExpression	"make_real ( op - num_inputs + i + 1 , ( float ) ( penum -> indexes [ i ] * ( dmax - dmin ) / ( params -> Size [ i ] - 1 ) + dmin ) )"		9120951	0					
ANR	9121050	Callee	make_real		9120951	0					
ANR	9121051	Identifier	make_real		9120951	0					
ANR	9121052	ArgumentList	op - num_inputs + i + 1		9120951	1					
ANR	9121053	Argument	op - num_inputs + i + 1		9120951	0					
ANR	9121054	AdditiveExpression	op - num_inputs + i + 1		9120951	0		-			
ANR	9121055	Identifier	op		9120951	0					
ANR	9121056	AdditiveExpression	num_inputs + i + 1		9120951	1		+			
ANR	9121057	Identifier	num_inputs		9120951	0					
ANR	9121058	AdditiveExpression	i + 1		9120951	1		+			
ANR	9121059	Identifier	i		9120951	0					
ANR	9121060	PrimaryExpression	1		9120951	1					
ANR	9121061	Argument	( float ) ( penum -> indexes [ i ] * ( dmax - dmin ) / ( params -> Size [ i ] - 1 ) + dmin )		9120951	1					
ANR	9121062	CastExpression	( float ) ( penum -> indexes [ i ] * ( dmax - dmin ) / ( params -> Size [ i ] - 1 ) + dmin )		9120951	0					
ANR	9121063	CastTarget	float		9120951	0					
ANR	9121064	AdditiveExpression	penum -> indexes [ i ] * ( dmax - dmin ) / ( params -> Size [ i ] - 1 ) + dmin		9120951	1		+			
ANR	9121065	MultiplicativeExpression	penum -> indexes [ i ] * ( dmax - dmin ) / ( params -> Size [ i ] - 1 )		9120951	0		*			
ANR	9121066	ArrayIndexing	penum -> indexes [ i ]		9120951	0					
ANR	9121067	PtrMemberAccess	penum -> indexes		9120951	0					
ANR	9121068	Identifier	penum		9120951	0					
ANR	9121069	Identifier	indexes		9120951	1					
ANR	9121070	Identifier	i		9120951	1					
ANR	9121071	MultiplicativeExpression	( dmax - dmin ) / ( params -> Size [ i ] - 1 )		9120951	1		/			
ANR	9121072	AdditiveExpression	dmax - dmin		9120951	0		-			
ANR	9121073	Identifier	dmax		9120951	0					
ANR	9121074	Identifier	dmin		9120951	1					
ANR	9121075	AdditiveExpression	params -> Size [ i ] - 1		9120951	1		-			
ANR	9121076	ArrayIndexing	params -> Size [ i ]		9120951	0					
ANR	9121077	PtrMemberAccess	params -> Size		9120951	0					
ANR	9121078	Identifier	params		9120951	0					
ANR	9121079	Identifier	Size		9120951	1					
ANR	9121080	Identifier	i		9120951	1					
ANR	9121081	PrimaryExpression	1		9120951	1					
ANR	9121082	Identifier	dmin		9120951	1					
ANR	9121083	ExpressionStatement	proc = sample_proc	468:4:15572:15590	9120951	8	True				
ANR	9121084	AssignmentExpression	proc = sample_proc		9120951	0		=			
ANR	9121085	Identifier	proc		9120951	0					
ANR	9121086	Identifier	sample_proc		9120951	1					
ANR	9121087	ExpressionStatement	push_op_estack ( sampled_data_continue )	469:4:15635:15672	9120951	9	True				
ANR	9121088	CallExpression	push_op_estack ( sampled_data_continue )		9120951	0					
ANR	9121089	Callee	push_op_estack		9120951	0					
ANR	9121090	Identifier	push_op_estack		9120951	0					
ANR	9121091	ArgumentList	sampled_data_continue		9120951	1					
ANR	9121092	Argument	sampled_data_continue		9120951	0					
ANR	9121093	Identifier	sampled_data_continue		9120951	0					
ANR	9121094	ExpressionStatement	* ++ esp = proc	470:4:15733:15746	9120951	10	True				
ANR	9121095	AssignmentExpression	* ++ esp = proc		9120951	0		=			
ANR	9121096	UnaryOperationExpression	* ++ esp		9120951	0					
ANR	9121097	UnaryOperator	*		9120951	0					
ANR	9121098	UnaryExpression	++ esp		9120951	1					
ANR	9121099	IncDec	++		9120951	0					
ANR	9121100	Identifier	esp		9120951	1					
ANR	9121101	Identifier	proc		9120951	1					
ANR	9121102	ReturnStatement	return o_push_estack ;	471:4:15793:15813	9120951	11	True				
ANR	9121103	Identifier	o_push_estack		9120951	0					
ANR	9121104	ReturnType	static int		9120951	1					
ANR	9121105	Identifier	sampled_data_sample		9120951	2					
ANR	9121106	ParameterList	i_ctx_t * i_ctx_p		9120951	3					
ANR	9121107	Parameter	i_ctx_t * i_ctx_p	448:20:14973:14988	9120951	0	True				
ANR	9121108	ParameterType	i_ctx_t *		9120951	0					
ANR	9121109	Identifier	i_ctx_p		9120951	1					
ANR	9121110	CFGEntryNode	ENTRY		9120951		True				
ANR	9121111	CFGExitNode	EXIT		9120951		True				
ANR	9121112	Symbol	* penum		9120951						
ANR	9121113	Symbol	dmin		9120951						
ANR	9121114	Symbol	params -> Domain		9120951						
ANR	9121115	Symbol	esp		9120951						
ANR	9121116	Symbol	* params -> Domain		9120951						
ANR	9121117	Symbol	* * params		9120951						
ANR	9121118	Symbol	osp		9120951						
ANR	9121119	Symbol	params -> m		9120951						
ANR	9121120	Symbol	* esp		9120951						
ANR	9121121	Symbol	num_inputs		9120951						
ANR	9121122	Symbol	& penum -> pfn -> params		9120951						
ANR	9121123	Symbol	params -> Size		9120951						
ANR	9121124	Symbol	* params		9120951						
ANR	9121125	Symbol	* * penum		9120951						
ANR	9121126	Symbol	o_push_estack		9120951						
ANR	9121127	Symbol	penum -> indexes		9120951						
ANR	9121128	Symbol	op		9120951						
ANR	9121129	Symbol	proc		9120951						
ANR	9121130	Symbol	penum		9120951						
ANR	9121131	Symbol	* params -> Size		9120951						
ANR	9121132	Symbol	i		9120951						
ANR	9121133	Symbol	penum -> pfn		9120951						
ANR	9121134	Symbol	sample_proc		9120951						
ANR	9121135	Symbol	params		9120951						
ANR	9121136	Symbol	dmax		9120951						
ANR	9121137	Symbol	senum		9120951						
ANR	9121138	Symbol	* i		9120951						
ANR	9121139	Symbol	i_ctx_p		9120951						
ANR	9121140	Symbol	* penum -> indexes		9120951						
ANR	9121141	Symbol	sampled_data_continue		9120951						
ANR	9121142	Symbol	* ++ esp		9120951						
ANR	9121143	Function	sampled_data_continue	477:0:15882:19049							
ANR	9121144	FunctionDef	sampled_data_continue (i_ctx_t * i_ctx_p)		9121143	0					
ANR	9121145	CompoundStatement		479:0:15933:19049	9121143	0					
ANR	9121146	IdentifierDeclStatement	os_ptr op = osp ;	480:4:15939:15954	9121143	0	True				
ANR	9121147	IdentifierDecl	op = osp		9121143	0					
ANR	9121148	IdentifierDeclType	os_ptr		9121143	0					
ANR	9121149	Identifier	op		9121143	1					
ANR	9121150	AssignmentExpression	op = osp		9121143	2		=			
ANR	9121151	Identifier	osp		9121143	0					
ANR	9121152	Identifier	osp		9121143	1					
ANR	9121153	IdentifierDeclStatement	gs_sampled_data_enum * penum = senum ;	481:4:15960:15995	9121143	1	True				
ANR	9121154	IdentifierDecl	* penum = senum		9121143	0					
ANR	9121155	IdentifierDeclType	gs_sampled_data_enum *		9121143	0					
ANR	9121156	Identifier	penum		9121143	1					
ANR	9121157	AssignmentExpression	* penum = senum		9121143	2		=			
ANR	9121158	Identifier	senum		9121143	0					
ANR	9121159	Identifier	senum		9121143	1					
ANR	9121160	IdentifierDeclStatement	gs_function_Sd_params_t * params = ( gs_function_Sd_params_t * ) & penum -> pfn -> params ;	482:4:16001:16094	9121143	2	True				
ANR	9121161	IdentifierDecl	* params = ( gs_function_Sd_params_t * ) & penum -> pfn -> params		9121143	0					
ANR	9121162	IdentifierDeclType	gs_function_Sd_params_t *		9121143	0					
ANR	9121163	Identifier	params		9121143	1					
ANR	9121164	AssignmentExpression	* params = ( gs_function_Sd_params_t * ) & penum -> pfn -> params		9121143	2		=			
ANR	9121165	Identifier	params		9121143	0					
ANR	9121166	CastExpression	( gs_function_Sd_params_t * ) & penum -> pfn -> params		9121143	1					
ANR	9121167	CastTarget	gs_function_Sd_params_t *		9121143	0					
ANR	9121168	UnaryOperationExpression	& penum -> pfn -> params		9121143	1					
ANR	9121169	UnaryOperator	&		9121143	0					
ANR	9121170	PtrMemberAccess	penum -> pfn -> params		9121143	1					
ANR	9121171	PtrMemberAccess	penum -> pfn		9121143	0					
ANR	9121172	Identifier	penum		9121143	0					
ANR	9121173	Identifier	pfn		9121143	1					
ANR	9121174	Identifier	params		9121143	1					
ANR	9121175	IdentifierDeclStatement	"int i , j , num_out = params -> n ;"	484:4:16100:16129	9121143	3	True				
ANR	9121176	IdentifierDecl	i		9121143	0					
ANR	9121177	IdentifierDeclType	int		9121143	0					
ANR	9121178	Identifier	i		9121143	1					
ANR	9121179	IdentifierDecl	j		9121143	1					
ANR	9121180	IdentifierDeclType	int		9121143	0					
ANR	9121181	Identifier	j		9121143	1					
ANR	9121182	IdentifierDecl	num_out = params -> n		9121143	2					
ANR	9121183	IdentifierDeclType	int		9121143	0					
ANR	9121184	Identifier	num_out		9121143	1					
ANR	9121185	AssignmentExpression	num_out = params -> n		9121143	2		=			
ANR	9121186	Identifier	num_out		9121143	0					
ANR	9121187	PtrMemberAccess	params -> n		9121143	1					
ANR	9121188	Identifier	params		9121143	0					
ANR	9121189	Identifier	n		9121143	1					
ANR	9121190	IdentifierDeclStatement	int code = 0 ;	485:4:16135:16147	9121143	4	True				
ANR	9121191	IdentifierDecl	code = 0		9121143	0					
ANR	9121192	IdentifierDeclType	int		9121143	0					
ANR	9121193	Identifier	code		9121143	1					
ANR	9121194	AssignmentExpression	code = 0		9121143	2		=			
ANR	9121195	Identifier	code		9121143	0					
ANR	9121196	PrimaryExpression	0		9121143	1					
ANR	9121197	IdentifierDeclStatement	byte * data_ptr ;	486:4:16153:16168	9121143	5	True				
ANR	9121198	IdentifierDecl	* data_ptr		9121143	0					
ANR	9121199	IdentifierDeclType	byte *		9121143	0					
ANR	9121200	Identifier	data_ptr		9121143	1					
ANR	9121201	IdentifierDeclStatement	double sampled_data_value_max = ( double ) ( ( 1 << params -> BitsPerSample ) - 1 ) ;	487:4:16174:16248	9121143	6	True				
ANR	9121202	IdentifierDecl	sampled_data_value_max = ( double ) ( ( 1 << params -> BitsPerSample ) - 1 )		9121143	0					
ANR	9121203	IdentifierDeclType	double		9121143	0					
ANR	9121204	Identifier	sampled_data_value_max		9121143	1					
ANR	9121205	AssignmentExpression	sampled_data_value_max = ( double ) ( ( 1 << params -> BitsPerSample ) - 1 )		9121143	2		=			
ANR	9121206	Identifier	sampled_data_value_max		9121143	0					
ANR	9121207	CastExpression	( double ) ( ( 1 << params -> BitsPerSample ) - 1 )		9121143	1					
ANR	9121208	CastTarget	double		9121143	0					
ANR	9121209	AdditiveExpression	( 1 << params -> BitsPerSample ) - 1		9121143	1		-			
ANR	9121210	ShiftExpression	1 << params -> BitsPerSample		9121143	0		<<			
ANR	9121211	PrimaryExpression	1		9121143	0					
ANR	9121212	PtrMemberAccess	params -> BitsPerSample		9121143	1					
ANR	9121213	Identifier	params		9121143	0					
ANR	9121214	Identifier	BitsPerSample		9121143	1					
ANR	9121215	PrimaryExpression	1		9121143	1					
ANR	9121216	IdentifierDeclStatement	"int bps = bits2bytes ( params -> BitsPerSample ) , stack_depth_adjust = 0 ;"	488:4:16254:16321	9121143	7	True				
ANR	9121217	IdentifierDecl	bps = bits2bytes ( params -> BitsPerSample )		9121143	0					
ANR	9121218	IdentifierDeclType	int		9121143	0					
ANR	9121219	Identifier	bps		9121143	1					
ANR	9121220	AssignmentExpression	bps = bits2bytes ( params -> BitsPerSample )		9121143	2		=			
ANR	9121221	Identifier	bps		9121143	0					
ANR	9121222	CallExpression	bits2bytes ( params -> BitsPerSample )		9121143	1					
ANR	9121223	Callee	bits2bytes		9121143	0					
ANR	9121224	Identifier	bits2bytes		9121143	0					
ANR	9121225	ArgumentList	params -> BitsPerSample		9121143	1					
ANR	9121226	Argument	params -> BitsPerSample		9121143	0					
ANR	9121227	PtrMemberAccess	params -> BitsPerSample		9121143	0					
ANR	9121228	Identifier	params		9121143	0					
ANR	9121229	Identifier	BitsPerSample		9121143	1					
ANR	9121230	IdentifierDecl	stack_depth_adjust = 0		9121143	1					
ANR	9121231	IdentifierDeclType	int		9121143	0					
ANR	9121232	Identifier	stack_depth_adjust		9121143	1					
ANR	9121233	AssignmentExpression	stack_depth_adjust = 0		9121143	2		=			
ANR	9121234	Identifier	stack_depth_adjust		9121143	0					
ANR	9121235	PrimaryExpression	0		9121143	1					
ANR	9121236	IfStatement	if ( num_out + O_STACK_PAD + penum -> o_stack_depth != ref_stack_count ( & o_stack ) )		9121143	8					
ANR	9121237	Condition	num_out + O_STACK_PAD + penum -> o_stack_depth != ref_stack_count ( & o_stack )	494:8:16497:16569	9121143	0	True				
ANR	9121238	EqualityExpression	num_out + O_STACK_PAD + penum -> o_stack_depth != ref_stack_count ( & o_stack )		9121143	0		!=			
ANR	9121239	AdditiveExpression	num_out + O_STACK_PAD + penum -> o_stack_depth		9121143	0		+			
ANR	9121240	Identifier	num_out		9121143	0					
ANR	9121241	AdditiveExpression	O_STACK_PAD + penum -> o_stack_depth		9121143	1		+			
ANR	9121242	Identifier	O_STACK_PAD		9121143	0					
ANR	9121243	PtrMemberAccess	penum -> o_stack_depth		9121143	1					
ANR	9121244	Identifier	penum		9121143	0					
ANR	9121245	Identifier	o_stack_depth		9121143	1					
ANR	9121246	CallExpression	ref_stack_count ( & o_stack )		9121143	1					
ANR	9121247	Callee	ref_stack_count		9121143	0					
ANR	9121248	Identifier	ref_stack_count		9121143	0					
ANR	9121249	ArgumentList	& o_stack		9121143	1					
ANR	9121250	Argument	& o_stack		9121143	0					
ANR	9121251	UnaryOperationExpression	& o_stack		9121143	0					
ANR	9121252	UnaryOperator	&		9121143	0					
ANR	9121253	Identifier	o_stack		9121143	1					
ANR	9121254	CompoundStatement		16:83:638:638	9121143	1					
ANR	9121255	ExpressionStatement	stack_depth_adjust = ref_stack_count ( & o_stack ) - penum -> o_stack_depth	495:8:16582:16651	9121143	0	True				
ANR	9121256	AssignmentExpression	stack_depth_adjust = ref_stack_count ( & o_stack ) - penum -> o_stack_depth		9121143	0		=			
ANR	9121257	Identifier	stack_depth_adjust		9121143	0					
ANR	9121258	AdditiveExpression	ref_stack_count ( & o_stack ) - penum -> o_stack_depth		9121143	1		-			
ANR	9121259	CallExpression	ref_stack_count ( & o_stack )		9121143	0					
ANR	9121260	Callee	ref_stack_count		9121143	0					
ANR	9121261	Identifier	ref_stack_count		9121143	0					
ANR	9121262	ArgumentList	& o_stack		9121143	1					
ANR	9121263	Argument	& o_stack		9121143	0					
ANR	9121264	UnaryOperationExpression	& o_stack		9121143	0					
ANR	9121265	UnaryOperator	&		9121143	0					
ANR	9121266	Identifier	o_stack		9121143	1					
ANR	9121267	PtrMemberAccess	penum -> o_stack_depth		9121143	1					
ANR	9121268	Identifier	penum		9121143	0					
ANR	9121269	Identifier	o_stack_depth		9121143	1					
ANR	9121270	IfStatement	if ( stack_depth_adjust < 0 )		9121143	1					
ANR	9121271	Condition	stack_depth_adjust < 0	497:12:16666:16687	9121143	0	True				
ANR	9121272	RelationalExpression	stack_depth_adjust < 0		9121143	0		<			
ANR	9121273	Identifier	stack_depth_adjust		9121143	0					
ANR	9121274	PrimaryExpression	0		9121143	1					
ANR	9121275	CompoundStatement		19:36:756:756	9121143	1					
ANR	9121276	ExpressionStatement	push ( - stack_depth_adjust )	507:12:17224:17249	9121143	0	True				
ANR	9121277	CallExpression	push ( - stack_depth_adjust )		9121143	0					
ANR	9121278	Callee	push		9121143	0					
ANR	9121279	Identifier	push		9121143	0					
ANR	9121280	ArgumentList	- stack_depth_adjust		9121143	1					
ANR	9121281	Argument	- stack_depth_adjust		9121143	0					
ANR	9121282	UnaryOperationExpression	- stack_depth_adjust		9121143	0					
ANR	9121283	UnaryOperator	-		9121143	0					
ANR	9121284	Identifier	stack_depth_adjust		9121143	1					
ANR	9121285	ExpressionStatement	"ifree_object ( penum -> pfn , ""sampled_data_continue(pfn)"" )"	508:12:17263:17317	9121143	1	True				
ANR	9121286	CallExpression	"ifree_object ( penum -> pfn , ""sampled_data_continue(pfn)"" )"		9121143	0					
ANR	9121287	Callee	ifree_object		9121143	0					
ANR	9121288	Identifier	ifree_object		9121143	0					
ANR	9121289	ArgumentList	penum -> pfn		9121143	1					
ANR	9121290	Argument	penum -> pfn		9121143	0					
ANR	9121291	PtrMemberAccess	penum -> pfn		9121143	0					
ANR	9121292	Identifier	penum		9121143	0					
ANR	9121293	Identifier	pfn		9121143	1					
ANR	9121294	Argument	"""sampled_data_continue(pfn)"""		9121143	1					
ANR	9121295	PrimaryExpression	"""sampled_data_continue(pfn)"""		9121143	0					
ANR	9121296	ExpressionStatement	"ifree_object ( penum , ""sampled_data_continue((enum)"" )"	509:12:17331:17382	9121143	2	True				
ANR	9121297	CallExpression	"ifree_object ( penum , ""sampled_data_continue((enum)"" )"		9121143	0					
ANR	9121298	Callee	ifree_object		9121143	0					
ANR	9121299	Identifier	ifree_object		9121143	0					
ANR	9121300	ArgumentList	penum		9121143	1					
ANR	9121301	Argument	penum		9121143	0					
ANR	9121302	Identifier	penum		9121143	0					
ANR	9121303	Argument	"""sampled_data_continue((enum)"""		9121143	1					
ANR	9121304	PrimaryExpression	"""sampled_data_continue((enum)"""		9121143	0					
ANR	9121305	ExpressionStatement	return_error ( gs_error_undefinedresult )	510:12:17396:17434	9121143	3	True				
ANR	9121306	CallExpression	return_error ( gs_error_undefinedresult )		9121143	0					
ANR	9121307	Callee	return_error		9121143	0					
ANR	9121308	Identifier	return_error		9121143	0					
ANR	9121309	ArgumentList	gs_error_undefinedresult		9121143	1					
ANR	9121310	Argument	gs_error_undefinedresult		9121143	0					
ANR	9121311	Identifier	gs_error_undefinedresult		9121143	0					
ANR	9121312	ExpressionStatement	"data_ptr = cube_ptr_from_index ( params , penum -> indexes )"	515:4:17501:17555	9121143	9	True				
ANR	9121313	AssignmentExpression	"data_ptr = cube_ptr_from_index ( params , penum -> indexes )"		9121143	0		=			
ANR	9121314	Identifier	data_ptr		9121143	0					
ANR	9121315	CallExpression	"cube_ptr_from_index ( params , penum -> indexes )"		9121143	1					
ANR	9121316	Callee	cube_ptr_from_index		9121143	0					
ANR	9121317	Identifier	cube_ptr_from_index		9121143	0					
ANR	9121318	ArgumentList	params		9121143	1					
ANR	9121319	Argument	params		9121143	0					
ANR	9121320	Identifier	params		9121143	0					
ANR	9121321	Argument	penum -> indexes		9121143	1					
ANR	9121322	PtrMemberAccess	penum -> indexes		9121143	0					
ANR	9121323	Identifier	penum		9121143	0					
ANR	9121324	Identifier	indexes		9121143	1					
ANR	9121325	ForStatement	for ( i = 0 ; i < num_out ; i ++ )		9121143	10					
ANR	9121326	ForInit	i = 0 ;	516:9:17566:17569	9121143	0	True				
ANR	9121327	AssignmentExpression	i = 0		9121143	0		=			
ANR	9121328	Identifier	i		9121143	0					
ANR	9121329	PrimaryExpression	0		9121143	1					
ANR	9121330	Condition	i < num_out	516:14:17571:17581	9121143	1	True				
ANR	9121331	RelationalExpression	i < num_out		9121143	0		<			
ANR	9121332	Identifier	i		9121143	0					
ANR	9121333	Identifier	num_out		9121143	1					
ANR	9121334	PostIncDecOperationExpression	i ++	516:27:17584:17586	9121143	2	True				
ANR	9121335	Identifier	i		9121143	0					
ANR	9121336	IncDec	++		9121143	1					
ANR	9121337	CompoundStatement		42:8:1749:1787	9121143	3					
ANR	9121338	IdentifierDeclStatement	ulong cv ;	517:8:17599:17607	9121143	0	True				
ANR	9121339	IdentifierDecl	cv		9121143	0					
ANR	9121340	IdentifierDeclType	ulong		9121143	0					
ANR	9121341	Identifier	cv		9121143	1					
ANR	9121342	IdentifierDeclStatement	double value ;	518:8:17617:17629	9121143	1	True				
ANR	9121343	IdentifierDecl	value		9121143	0					
ANR	9121344	IdentifierDeclType	double		9121143	0					
ANR	9121345	Identifier	value		9121143	1					
ANR	9121346	IdentifierDeclStatement	double rmin = params -> Range [ 2 * i ] ;	519:8:17639:17673	9121143	2	True				
ANR	9121347	IdentifierDecl	rmin = params -> Range [ 2 * i ]		9121143	0					
ANR	9121348	IdentifierDeclType	double		9121143	0					
ANR	9121349	Identifier	rmin		9121143	1					
ANR	9121350	AssignmentExpression	rmin = params -> Range [ 2 * i ]		9121143	2		=			
ANR	9121351	Identifier	rmin		9121143	0					
ANR	9121352	ArrayIndexing	params -> Range [ 2 * i ]		9121143	1					
ANR	9121353	PtrMemberAccess	params -> Range		9121143	0					
ANR	9121354	Identifier	params		9121143	0					
ANR	9121355	Identifier	Range		9121143	1					
ANR	9121356	MultiplicativeExpression	2 * i		9121143	1		*			
ANR	9121357	PrimaryExpression	2		9121143	0					
ANR	9121358	Identifier	i		9121143	1					
ANR	9121359	IdentifierDeclStatement	double rmax = params -> Range [ 2 * i + 1 ] ;	520:8:17683:17721	9121143	3	True				
ANR	9121360	IdentifierDecl	rmax = params -> Range [ 2 * i + 1 ]		9121143	0					
ANR	9121361	IdentifierDeclType	double		9121143	0					
ANR	9121362	Identifier	rmax		9121143	1					
ANR	9121363	AssignmentExpression	rmax = params -> Range [ 2 * i + 1 ]		9121143	2		=			
ANR	9121364	Identifier	rmax		9121143	0					
ANR	9121365	ArrayIndexing	params -> Range [ 2 * i + 1 ]		9121143	1					
ANR	9121366	PtrMemberAccess	params -> Range		9121143	0					
ANR	9121367	Identifier	params		9121143	0					
ANR	9121368	Identifier	Range		9121143	1					
ANR	9121369	AdditiveExpression	2 * i + 1		9121143	1		+			
ANR	9121370	MultiplicativeExpression	2 * i		9121143	0		*			
ANR	9121371	PrimaryExpression	2		9121143	0					
ANR	9121372	Identifier	i		9121143	1					
ANR	9121373	PrimaryExpression	1		9121143	1					
ANR	9121374	ExpressionStatement	"code = real_param ( op + i - num_out + 1 , & value )"	522:8:17732:17779	9121143	4	True				
ANR	9121375	AssignmentExpression	"code = real_param ( op + i - num_out + 1 , & value )"		9121143	0		=			
ANR	9121376	Identifier	code		9121143	0					
ANR	9121377	CallExpression	"real_param ( op + i - num_out + 1 , & value )"		9121143	1					
ANR	9121378	Callee	real_param		9121143	0					
ANR	9121379	Identifier	real_param		9121143	0					
ANR	9121380	ArgumentList	op + i - num_out + 1		9121143	1					
ANR	9121381	Argument	op + i - num_out + 1		9121143	0					
ANR	9121382	AdditiveExpression	op + i - num_out + 1		9121143	0		+			
ANR	9121383	Identifier	op		9121143	0					
ANR	9121384	AdditiveExpression	i - num_out + 1		9121143	1		-			
ANR	9121385	Identifier	i		9121143	0					
ANR	9121386	AdditiveExpression	num_out + 1		9121143	1		+			
ANR	9121387	Identifier	num_out		9121143	0					
ANR	9121388	PrimaryExpression	1		9121143	1					
ANR	9121389	Argument	& value		9121143	1					
ANR	9121390	UnaryOperationExpression	& value		9121143	0					
ANR	9121391	UnaryOperator	&		9121143	0					
ANR	9121392	Identifier	value		9121143	1					
ANR	9121393	IfStatement	if ( code < 0 )		9121143	5					
ANR	9121394	Condition	code < 0	523:12:17793:17800	9121143	0	True				
ANR	9121395	RelationalExpression	code < 0		9121143	0		<			
ANR	9121396	Identifier	code		9121143	0					
ANR	9121397	PrimaryExpression	0		9121143	1					
ANR	9121398	ReturnStatement	return code ;	524:12:17815:17826	9121143	1	True				
ANR	9121399	Identifier	code		9121143	0					
ANR	9121400	IfStatement	if ( value < rmin )		9121143	6					
ANR	9121401	Condition	value < rmin	525:12:17840:17851	9121143	0	True				
ANR	9121402	RelationalExpression	value < rmin		9121143	0		<			
ANR	9121403	Identifier	value		9121143	0					
ANR	9121404	Identifier	rmin		9121143	1					
ANR	9121405	ExpressionStatement	value = rmin	526:12:17866:17878	9121143	1	True				
ANR	9121406	AssignmentExpression	value = rmin		9121143	0		=			
ANR	9121407	Identifier	value		9121143	0					
ANR	9121408	Identifier	rmin		9121143	1					
ANR	9121409	ElseStatement	else		9121143	0					
ANR	9121410	IfStatement	if ( value > rmax )		9121143	0					
ANR	9121411	Condition	value > rmax	527:17:17897:17908	9121143	0	True				
ANR	9121412	RelationalExpression	value > rmax		9121143	0		>			
ANR	9121413	Identifier	value		9121143	0					
ANR	9121414	Identifier	rmax		9121143	1					
ANR	9121415	ExpressionStatement	value = rmax	528:12:17923:17935	9121143	1	True				
ANR	9121416	AssignmentExpression	value = rmax		9121143	0		=			
ANR	9121417	Identifier	value		9121143	0					
ANR	9121418	Identifier	rmax		9121143	1					
ANR	9121419	ExpressionStatement	value = ( value - rmin ) / ( rmax - rmin )	529:8:17945:17983	9121143	7	True				
ANR	9121420	AssignmentExpression	value = ( value - rmin ) / ( rmax - rmin )		9121143	0		=			
ANR	9121421	Identifier	value		9121143	0					
ANR	9121422	MultiplicativeExpression	( value - rmin ) / ( rmax - rmin )		9121143	1		/			
ANR	9121423	AdditiveExpression	value - rmin		9121143	0		-			
ANR	9121424	Identifier	value		9121143	0					
ANR	9121425	Identifier	rmin		9121143	1					
ANR	9121426	AdditiveExpression	rmax - rmin		9121143	1		-			
ANR	9121427	Identifier	rmax		9121143	0					
ANR	9121428	Identifier	rmin		9121143	1					
ANR	9121429	ExpressionStatement	cv = ( int ) ( value * sampled_data_value_max + 0.5 )	530:8:18020:18069	9121143	8	True				
ANR	9121430	AssignmentExpression	cv = ( int ) ( value * sampled_data_value_max + 0.5 )		9121143	0		=			
ANR	9121431	Identifier	cv		9121143	0					
ANR	9121432	CastExpression	( int ) ( value * sampled_data_value_max + 0.5 )		9121143	1					
ANR	9121433	CastTarget	int		9121143	0					
ANR	9121434	AdditiveExpression	value * sampled_data_value_max + 0.5		9121143	1		+			
ANR	9121435	MultiplicativeExpression	value * sampled_data_value_max		9121143	0		*			
ANR	9121436	Identifier	value		9121143	0					
ANR	9121437	Identifier	sampled_data_value_max		9121143	1					
ANR	9121438	PrimaryExpression	0.5		9121143	1					
ANR	9121439	ForStatement	for ( j = 0 ; j < bps ; j ++ )		9121143	9					
ANR	9121440	ForInit	j = 0 ;	531:13:18084:18089	9121143	0	True				
ANR	9121441	AssignmentExpression	j = 0		9121143	0		=			
ANR	9121442	Identifier	j		9121143	0					
ANR	9121443	PrimaryExpression	0		9121143	1					
ANR	9121444	Condition	j < bps	531:20:18091:18097	9121143	1	True				
ANR	9121445	RelationalExpression	j < bps		9121143	0		<			
ANR	9121446	Identifier	j		9121143	0					
ANR	9121447	Identifier	bps		9121143	1					
ANR	9121448	PostIncDecOperationExpression	j ++	531:29:18100:18102	9121143	2	True				
ANR	9121449	Identifier	j		9121143	0					
ANR	9121450	IncDec	++		9121143	1					
ANR	9121451	ExpressionStatement	data_ptr [ bps * i + j ] = ( byte ) ( cv >> ( ( bps - 1 - j ) * 8 ) )	532:12:18117:18174	9121143	3	True				
ANR	9121452	AssignmentExpression	data_ptr [ bps * i + j ] = ( byte ) ( cv >> ( ( bps - 1 - j ) * 8 ) )		9121143	0		=			
ANR	9121453	ArrayIndexing	data_ptr [ bps * i + j ]		9121143	0					
ANR	9121454	Identifier	data_ptr		9121143	0					
ANR	9121455	AdditiveExpression	bps * i + j		9121143	1		+			
ANR	9121456	MultiplicativeExpression	bps * i		9121143	0		*			
ANR	9121457	Identifier	bps		9121143	0					
ANR	9121458	Identifier	i		9121143	1					
ANR	9121459	Identifier	j		9121143	1					
ANR	9121460	CastExpression	( byte ) ( cv >> ( ( bps - 1 - j ) * 8 ) )		9121143	1					
ANR	9121461	CastTarget	byte		9121143	0					
ANR	9121462	ShiftExpression	cv >> ( ( bps - 1 - j ) * 8 )		9121143	1		>>			
ANR	9121463	Identifier	cv		9121143	0					
ANR	9121464	MultiplicativeExpression	( bps - 1 - j ) * 8		9121143	1		*			
ANR	9121465	AdditiveExpression	bps - 1 - j		9121143	0		-			
ANR	9121466	Identifier	bps		9121143	0					
ANR	9121467	AdditiveExpression	1 - j		9121143	1		-			
ANR	9121468	PrimaryExpression	1		9121143	0					
ANR	9121469	Identifier	j		9121143	1					
ANR	9121470	PrimaryExpression	8		9121143	1					
ANR	9121471	ExpressionStatement	pop ( num_out )	534:4:18202:18214	9121143	11	True				
ANR	9121472	CallExpression	pop ( num_out )		9121143	0					
ANR	9121473	Callee	pop		9121143	0					
ANR	9121474	Identifier	pop		9121143	0					
ANR	9121475	ArgumentList	num_out		9121143	1					
ANR	9121476	Argument	num_out		9121143	0					
ANR	9121477	Identifier	num_out		9121143	0					
ANR	9121478	IfStatement	"if ( increment_cube_indexes ( params , penum -> indexes ) )"		9121143	12					
ANR	9121479	Condition	"increment_cube_indexes ( params , penum -> indexes )"	538:8:18318:18363	9121143	0	True				
ANR	9121480	CallExpression	"increment_cube_indexes ( params , penum -> indexes )"		9121143	0					
ANR	9121481	Callee	increment_cube_indexes		9121143	0					
ANR	9121482	Identifier	increment_cube_indexes		9121143	0					
ANR	9121483	ArgumentList	params		9121143	1					
ANR	9121484	Argument	params		9121143	0					
ANR	9121485	Identifier	params		9121143	0					
ANR	9121486	Argument	penum -> indexes		9121143	1					
ANR	9121487	PtrMemberAccess	penum -> indexes		9121143	0					
ANR	9121488	Identifier	penum		9121143	0					
ANR	9121489	Identifier	indexes		9121143	1					
ANR	9121490	CompoundStatement		60:56:2432:2432	9121143	1					
ANR	9121491	IfStatement	if ( stack_depth_adjust == 0 )		9121143	0					
ANR	9121492	Condition	stack_depth_adjust == 0	539:12:18380:18402	9121143	0	True				
ANR	9121493	EqualityExpression	stack_depth_adjust == 0		9121143	0		==			
ANR	9121494	Identifier	stack_depth_adjust		9121143	0					
ANR	9121495	PrimaryExpression	0		9121143	1					
ANR	9121496	ExpressionStatement	pop ( O_STACK_PAD )	540:12:18417:18433	9121143	1	True				
ANR	9121497	CallExpression	pop ( O_STACK_PAD )		9121143	0					
ANR	9121498	Callee	pop		9121143	0					
ANR	9121499	Identifier	pop		9121143	0					
ANR	9121500	ArgumentList	O_STACK_PAD		9121143	1					
ANR	9121501	Argument	O_STACK_PAD		9121143	0					
ANR	9121502	Identifier	O_STACK_PAD		9121143	0					
ANR	9121503	ElseStatement	else		9121143	0					
ANR	9121504	ExpressionStatement	pop ( stack_depth_adjust - num_out )	542:12:18495:18528	9121143	0	True				
ANR	9121505	CallExpression	pop ( stack_depth_adjust - num_out )		9121143	0					
ANR	9121506	Callee	pop		9121143	0					
ANR	9121507	Identifier	pop		9121143	0					
ANR	9121508	ArgumentList	stack_depth_adjust - num_out		9121143	1					
ANR	9121509	Argument	stack_depth_adjust - num_out		9121143	0					
ANR	9121510	AdditiveExpression	stack_depth_adjust - num_out		9121143	0		-			
ANR	9121511	Identifier	stack_depth_adjust		9121143	0					
ANR	9121512	Identifier	num_out		9121143	1					
ANR	9121513	ExpressionStatement	code = 0	544:8:18592:18600	9121143	1	True				
ANR	9121514	AssignmentExpression	code = 0		9121143	0		=			
ANR	9121515	Identifier	code		9121143	0					
ANR	9121516	PrimaryExpression	0		9121143	1					
ANR	9121517	IfStatement	if ( esp_finish_proc != 0 )		9121143	2					
ANR	9121518	Condition	esp_finish_proc != 0	545:12:18614:18633	9121143	0	True				
ANR	9121519	EqualityExpression	esp_finish_proc != 0		9121143	0		!=			
ANR	9121520	Identifier	esp_finish_proc		9121143	0					
ANR	9121521	PrimaryExpression	0		9121143	1					
ANR	9121522	ExpressionStatement	code = esp_finish_proc ( i_ctx_p )	546:12:18648:18679	9121143	1	True				
ANR	9121523	AssignmentExpression	code = esp_finish_proc ( i_ctx_p )		9121143	0		=			
ANR	9121524	Identifier	code		9121143	0					
ANR	9121525	CallExpression	esp_finish_proc ( i_ctx_p )		9121143	1					
ANR	9121526	Callee	esp_finish_proc		9121143	0					
ANR	9121527	Identifier	esp_finish_proc		9121143	0					
ANR	9121528	ArgumentList	i_ctx_p		9121143	1					
ANR	9121529	Argument	i_ctx_p		9121143	0					
ANR	9121530	Identifier	i_ctx_p		9121143	0					
ANR	9121531	ReturnStatement	return code ;	548:8:18690:18701	9121143	3	True				
ANR	9121532	Identifier	code		9121143	0					
ANR	9121533	ElseStatement	else		9121143	0					
ANR	9121534	CompoundStatement		71:11:2780:2780	9121143	0					
ANR	9121535	IfStatement	if ( stack_depth_adjust )		9121143	0					
ANR	9121536	Condition	stack_depth_adjust	550:12:18728:18745	9121143	0	True				
ANR	9121537	Identifier	stack_depth_adjust		9121143	0					
ANR	9121538	CompoundStatement		72:32:2814:2814	9121143	1					
ANR	9121539	ExpressionStatement	stack_depth_adjust -= num_out	551:12:18762:18791	9121143	0	True				
ANR	9121540	AssignmentExpression	stack_depth_adjust -= num_out		9121143	0		-=			
ANR	9121541	Identifier	stack_depth_adjust		9121143	0					
ANR	9121542	Identifier	num_out		9121143	1					
ANR	9121543	ExpressionStatement	push ( O_STACK_PAD - stack_depth_adjust )	552:12:18805:18843	9121143	1	True				
ANR	9121544	CallExpression	push ( O_STACK_PAD - stack_depth_adjust )		9121143	0					
ANR	9121545	Callee	push		9121143	0					
ANR	9121546	Identifier	push		9121143	0					
ANR	9121547	ArgumentList	O_STACK_PAD - stack_depth_adjust		9121143	1					
ANR	9121548	Argument	O_STACK_PAD - stack_depth_adjust		9121143	0					
ANR	9121549	AdditiveExpression	O_STACK_PAD - stack_depth_adjust		9121143	0		-			
ANR	9121550	Identifier	O_STACK_PAD		9121143	0					
ANR	9121551	Identifier	stack_depth_adjust		9121143	1					
ANR	9121552	ForStatement	for ( i = 0 ; i < O_STACK_PAD - stack_depth_adjust ; i ++ )		9121143	2					
ANR	9121553	ForInit	i = 0 ;	553:17:18862:18865	9121143	0	True				
ANR	9121554	AssignmentExpression	i = 0		9121143	0		=			
ANR	9121555	Identifier	i		9121143	0					
ANR	9121556	PrimaryExpression	0		9121143	1					
ANR	9121557	Condition	i < O_STACK_PAD - stack_depth_adjust	553:21:18866:18899	9121143	1	True				
ANR	9121558	RelationalExpression	i < O_STACK_PAD - stack_depth_adjust		9121143	0		<			
ANR	9121559	Identifier	i		9121143	0					
ANR	9121560	AdditiveExpression	O_STACK_PAD - stack_depth_adjust		9121143	1		-			
ANR	9121561	Identifier	O_STACK_PAD		9121143	0					
ANR	9121562	Identifier	stack_depth_adjust		9121143	1					
ANR	9121563	PostIncDecOperationExpression	i ++	553:56:18901:18903	9121143	2	True				
ANR	9121564	Identifier	i		9121143	0					
ANR	9121565	IncDec	++		9121143	1					
ANR	9121566	ExpressionStatement	make_null ( op - i )	554:16:18922:18939	9121143	3	True				
ANR	9121567	CallExpression	make_null ( op - i )		9121143	0					
ANR	9121568	Callee	make_null		9121143	0					
ANR	9121569	Identifier	make_null		9121143	0					
ANR	9121570	ArgumentList	op - i		9121143	1					
ANR	9121571	Argument	op - i		9121143	0					
ANR	9121572	AdditiveExpression	op - i		9121143	0		-			
ANR	9121573	Identifier	op		9121143	0					
ANR	9121574	Identifier	i		9121143	1					
ANR	9121575	ReturnStatement	return sampled_data_sample ( i_ctx_p ) ;	560:4:19012:19047	9121143	13	True				
ANR	9121576	CallExpression	sampled_data_sample ( i_ctx_p )		9121143	0					
ANR	9121577	Callee	sampled_data_sample		9121143	0					
ANR	9121578	Identifier	sampled_data_sample		9121143	0					
ANR	9121579	ArgumentList	i_ctx_p		9121143	1					
ANR	9121580	Argument	i_ctx_p		9121143	0					
ANR	9121581	Identifier	i_ctx_p		9121143	0					
ANR	9121582	ReturnType	static int		9121143	1					
ANR	9121583	Identifier	sampled_data_continue		9121143	2					
ANR	9121584	ParameterList	i_ctx_t * i_ctx_p		9121143	3					
ANR	9121585	Parameter	i_ctx_t * i_ctx_p	478:22:15915:15930	9121143	0	True				
ANR	9121586	ParameterType	i_ctx_t *		9121143	0					
ANR	9121587	Identifier	i_ctx_p		9121143	1					
ANR	9121588	CFGEntryNode	ENTRY		9121143		True				
ANR	9121589	CFGExitNode	EXIT		9121143		True				
ANR	9121590	Symbol	* penum		9121143						
ANR	9121591	Symbol	params -> BitsPerSample		9121143						
ANR	9121592	Symbol	esp_finish_proc		9121143						
ANR	9121593	Symbol	code		9121143						
ANR	9121594	Symbol	& value		9121143						
ANR	9121595	Symbol	rmax		9121143						
ANR	9121596	Symbol	* params -> Range		9121143						
ANR	9121597	Symbol	* * params		9121143						
ANR	9121598	Symbol	sampled_data_sample		9121143						
ANR	9121599	Symbol	osp		9121143						
ANR	9121600	Symbol	* data_ptr		9121143						
ANR	9121601	Symbol	gs_error_undefinedresult		9121143						
ANR	9121602	Symbol	increment_cube_indexes		9121143						
ANR	9121603	Symbol	O_STACK_PAD		9121143						
ANR	9121604	Symbol	params -> n		9121143						
ANR	9121605	Symbol	num_out		9121143						
ANR	9121606	Symbol	rmin		9121143						
ANR	9121607	Symbol	cube_ptr_from_index		9121143						
ANR	9121608	Symbol	& penum -> pfn -> params		9121143						
ANR	9121609	Symbol	value		9121143						
ANR	9121610	Symbol	* params		9121143						
ANR	9121611	Symbol	penum -> indexes		9121143						
ANR	9121612	Symbol	op		9121143						
ANR	9121613	Symbol	bps		9121143						
ANR	9121614	Symbol	sampled_data_value_max		9121143						
ANR	9121615	Symbol	penum		9121143						
ANR	9121616	Symbol	i		9121143						
ANR	9121617	Symbol	j		9121143						
ANR	9121618	Symbol	penum -> pfn		9121143						
ANR	9121619	Symbol	params		9121143						
ANR	9121620	Symbol	bits2bytes		9121143						
ANR	9121621	Symbol	senum		9121143						
ANR	9121622	Symbol	* bps		9121143						
ANR	9121623	Symbol	cv		9121143						
ANR	9121624	Symbol	* i		9121143						
ANR	9121625	Symbol	* j		9121143						
ANR	9121626	Symbol	i_ctx_p		9121143						
ANR	9121627	Symbol	& o_stack		9121143						
ANR	9121628	Symbol	ref_stack_count		9121143						
ANR	9121629	Symbol	params -> Range		9121143						
ANR	9121630	Symbol	real_param		9121143						
ANR	9121631	Symbol	stack_depth_adjust		9121143						
ANR	9121632	Symbol	penum -> o_stack_depth		9121143						
ANR	9121633	Symbol	data_ptr		9121143						
ANR	9121634	Function	sampled_data_finish	566:0:19140:20046							
ANR	9121635	FunctionDef	sampled_data_finish (i_ctx_t * i_ctx_p)		9121634	0					
ANR	9121636	CompoundStatement		568:0:19189:20046	9121634	0					
ANR	9121637	IdentifierDeclStatement	os_ptr op = osp ;	569:4:19195:19210	9121634	0	True				
ANR	9121638	IdentifierDecl	op = osp		9121634	0					
ANR	9121639	IdentifierDeclType	os_ptr		9121634	0					
ANR	9121640	Identifier	op		9121634	1					
ANR	9121641	AssignmentExpression	op = osp		9121634	2		=			
ANR	9121642	Identifier	osp		9121634	0					
ANR	9121643	Identifier	osp		9121634	1					
ANR	9121644	IdentifierDeclStatement	gs_sampled_data_enum * penum = senum ;	570:4:19216:19251	9121634	1	True				
ANR	9121645	IdentifierDecl	* penum = senum		9121634	0					
ANR	9121646	IdentifierDeclType	gs_sampled_data_enum *		9121634	0					
ANR	9121647	Identifier	penum		9121634	1					
ANR	9121648	AssignmentExpression	* penum = senum		9121634	2		=			
ANR	9121649	Identifier	senum		9121634	0					
ANR	9121650	Identifier	senum		9121634	1					
ANR	9121651	IdentifierDeclStatement	gs_function_Sd_params_t * params = ( gs_function_Sd_params_t * ) & penum -> pfn -> params ;	572:4:19318:19407	9121634	2	True				
ANR	9121652	IdentifierDecl	* params = ( gs_function_Sd_params_t * ) & penum -> pfn -> params		9121634	0					
ANR	9121653	IdentifierDeclType	gs_function_Sd_params_t *		9121634	0					
ANR	9121654	Identifier	params		9121634	1					
ANR	9121655	AssignmentExpression	* params = ( gs_function_Sd_params_t * ) & penum -> pfn -> params		9121634	2		=			
ANR	9121656	Identifier	params		9121634	0					
ANR	9121657	CastExpression	( gs_function_Sd_params_t * ) & penum -> pfn -> params		9121634	1					
ANR	9121658	CastTarget	gs_function_Sd_params_t *		9121634	0					
ANR	9121659	UnaryOperationExpression	& penum -> pfn -> params		9121634	1					
ANR	9121660	UnaryOperator	&		9121634	0					
ANR	9121661	PtrMemberAccess	penum -> pfn -> params		9121634	1					
ANR	9121662	PtrMemberAccess	penum -> pfn		9121634	0					
ANR	9121663	Identifier	penum		9121634	0					
ANR	9121664	Identifier	pfn		9121634	1					
ANR	9121665	Identifier	params		9121634	1					
ANR	9121666	IdentifierDeclStatement	gs_function_t * pfn ;	574:4:19413:19432	9121634	3	True				
ANR	9121667	IdentifierDecl	* pfn		9121634	0					
ANR	9121668	IdentifierDeclType	gs_function_t *		9121634	0					
ANR	9121669	Identifier	pfn		9121634	1					
ANR	9121670	IdentifierDeclStatement	ref cref ;	575:4:19438:19446	9121634	4	True				
ANR	9121671	IdentifierDecl	cref		9121634	0					
ANR	9121672	IdentifierDeclType	ref		9121634	0					
ANR	9121673	Identifier	cref		9121634	1					
ANR	9121674	IdentifierDeclStatement	"int code = gs_function_Sd_init ( & pfn , params , imemory ) ;"	576:4:19468:19521	9121634	5	True				
ANR	9121675	IdentifierDecl	"code = gs_function_Sd_init ( & pfn , params , imemory )"		9121634	0					
ANR	9121676	IdentifierDeclType	int		9121634	0					
ANR	9121677	Identifier	code		9121634	1					
ANR	9121678	AssignmentExpression	"code = gs_function_Sd_init ( & pfn , params , imemory )"		9121634	2		=			
ANR	9121679	Identifier	code		9121634	0					
ANR	9121680	CallExpression	"gs_function_Sd_init ( & pfn , params , imemory )"		9121634	1					
ANR	9121681	Callee	gs_function_Sd_init		9121634	0					
ANR	9121682	Identifier	gs_function_Sd_init		9121634	0					
ANR	9121683	ArgumentList	& pfn		9121634	1					
ANR	9121684	Argument	& pfn		9121634	0					
ANR	9121685	UnaryOperationExpression	& pfn		9121634	0					
ANR	9121686	UnaryOperator	&		9121634	0					
ANR	9121687	Identifier	pfn		9121634	1					
ANR	9121688	Argument	params		9121634	1					
ANR	9121689	Identifier	params		9121634	0					
ANR	9121690	Argument	imemory		9121634	2					
ANR	9121691	Identifier	imemory		9121634	0					
ANR	9121692	IfStatement	if ( code < 0 )		9121634	6					
ANR	9121693	Condition	code < 0	578:8:19532:19539	9121634	0	True				
ANR	9121694	RelationalExpression	code < 0		9121634	0		<			
ANR	9121695	Identifier	code		9121634	0					
ANR	9121696	PrimaryExpression	0		9121634	1					
ANR	9121697	ReturnStatement	return code ;	579:8:19550:19561	9121634	1	True				
ANR	9121698	Identifier	code		9121634	0					
ANR	9121699	ExpressionStatement	"code = ialloc_ref_array ( & cref , a_executable | a_execute , 2 , ""sampled_data_finish(cref)"" )"	581:4:19568:19684	9121634	7	True				
ANR	9121700	AssignmentExpression	"code = ialloc_ref_array ( & cref , a_executable | a_execute , 2 , ""sampled_data_finish(cref)"" )"		9121634	0		=			
ANR	9121701	Identifier	code		9121634	0					
ANR	9121702	CallExpression	"ialloc_ref_array ( & cref , a_executable | a_execute , 2 , ""sampled_data_finish(cref)"" )"		9121634	1					
ANR	9121703	Callee	ialloc_ref_array		9121634	0					
ANR	9121704	Identifier	ialloc_ref_array		9121634	0					
ANR	9121705	ArgumentList	& cref		9121634	1					
ANR	9121706	Argument	& cref		9121634	0					
ANR	9121707	UnaryOperationExpression	& cref		9121634	0					
ANR	9121708	UnaryOperator	&		9121634	0					
ANR	9121709	Identifier	cref		9121634	1					
ANR	9121710	Argument	a_executable | a_execute		9121634	1					
ANR	9121711	InclusiveOrExpression	a_executable | a_execute		9121634	0		|			
ANR	9121712	Identifier	a_executable		9121634	0					
ANR	9121713	Identifier	a_execute		9121634	1					
ANR	9121714	Argument	2		9121634	2					
ANR	9121715	PrimaryExpression	2		9121634	0					
ANR	9121716	Argument	"""sampled_data_finish(cref)"""		9121634	3					
ANR	9121717	PrimaryExpression	"""sampled_data_finish(cref)"""		9121634	0					
ANR	9121718	IfStatement	if ( code < 0 )		9121634	8					
ANR	9121719	Condition	code < 0	583:8:19694:19701	9121634	0	True				
ANR	9121720	RelationalExpression	code < 0		9121634	0		<			
ANR	9121721	Identifier	code		9121634	0					
ANR	9121722	PrimaryExpression	0		9121634	1					
ANR	9121723	ReturnStatement	return code ;	584:8:19712:19723	9121634	1	True				
ANR	9121724	Identifier	code		9121634	0					
ANR	9121725	ExpressionStatement	"make_istruct_new ( cref . value . refs , a_executable | a_execute , pfn )"	586:4:19730:19794	9121634	9	True				
ANR	9121726	CallExpression	"make_istruct_new ( cref . value . refs , a_executable | a_execute , pfn )"		9121634	0					
ANR	9121727	Callee	make_istruct_new		9121634	0					
ANR	9121728	Identifier	make_istruct_new		9121634	0					
ANR	9121729	ArgumentList	cref . value . refs		9121634	1					
ANR	9121730	Argument	cref . value . refs		9121634	0					
ANR	9121731	MemberAccess	cref . value . refs		9121634	0					
ANR	9121732	MemberAccess	cref . value		9121634	0					
ANR	9121733	Identifier	cref		9121634	0					
ANR	9121734	Identifier	value		9121634	1					
ANR	9121735	Identifier	refs		9121634	1					
ANR	9121736	Argument	a_executable | a_execute		9121634	1					
ANR	9121737	InclusiveOrExpression	a_executable | a_execute		9121634	0		|			
ANR	9121738	Identifier	a_executable		9121634	0					
ANR	9121739	Identifier	a_execute		9121634	1					
ANR	9121740	Argument	pfn		9121634	2					
ANR	9121741	Identifier	pfn		9121634	0					
ANR	9121742	ExpressionStatement	"make_oper_new ( cref . value . refs + 1 , 0 , zexecfunction )"	587:4:19800:19852	9121634	10	True				
ANR	9121743	CallExpression	"make_oper_new ( cref . value . refs + 1 , 0 , zexecfunction )"		9121634	0					
ANR	9121744	Callee	make_oper_new		9121634	0					
ANR	9121745	Identifier	make_oper_new		9121634	0					
ANR	9121746	ArgumentList	cref . value . refs + 1		9121634	1					
ANR	9121747	Argument	cref . value . refs + 1		9121634	0					
ANR	9121748	AdditiveExpression	cref . value . refs + 1		9121634	0		+			
ANR	9121749	MemberAccess	cref . value . refs		9121634	0					
ANR	9121750	MemberAccess	cref . value		9121634	0					
ANR	9121751	Identifier	cref		9121634	0					
ANR	9121752	Identifier	value		9121634	1					
ANR	9121753	Identifier	refs		9121634	1					
ANR	9121754	PrimaryExpression	1		9121634	1					
ANR	9121755	Argument	0		9121634	1					
ANR	9121756	PrimaryExpression	0		9121634	0					
ANR	9121757	Argument	zexecfunction		9121634	2					
ANR	9121758	Identifier	zexecfunction		9121634	0					
ANR	9121759	ExpressionStatement	"ref_assign ( op , & cref )"	588:4:19858:19879	9121634	11	True				
ANR	9121760	CallExpression	"ref_assign ( op , & cref )"		9121634	0					
ANR	9121761	Callee	ref_assign		9121634	0					
ANR	9121762	Identifier	ref_assign		9121634	0					
ANR	9121763	ArgumentList	op		9121634	1					
ANR	9121764	Argument	op		9121634	0					
ANR	9121765	Identifier	op		9121634	0					
ANR	9121766	Argument	& cref		9121634	1					
ANR	9121767	UnaryOperationExpression	& cref		9121634	0					
ANR	9121768	UnaryOperator	&		9121634	0					
ANR	9121769	Identifier	cref		9121634	1					
ANR	9121770	ExpressionStatement	esp -= estack_storage	590:4:19886:19907	9121634	12	True				
ANR	9121771	AssignmentExpression	esp -= estack_storage		9121634	0		-=			
ANR	9121772	Identifier	esp		9121634	0					
ANR	9121773	Identifier	estack_storage		9121634	1					
ANR	9121774	ExpressionStatement	"ifree_object ( penum -> pfn , ""sampled_data_finish(pfn)"" )"	591:4:19913:19965	9121634	13	True				
ANR	9121775	CallExpression	"ifree_object ( penum -> pfn , ""sampled_data_finish(pfn)"" )"		9121634	0					
ANR	9121776	Callee	ifree_object		9121634	0					
ANR	9121777	Identifier	ifree_object		9121634	0					
ANR	9121778	ArgumentList	penum -> pfn		9121634	1					
ANR	9121779	Argument	penum -> pfn		9121634	0					
ANR	9121780	PtrMemberAccess	penum -> pfn		9121634	0					
ANR	9121781	Identifier	penum		9121634	0					
ANR	9121782	Identifier	pfn		9121634	1					
ANR	9121783	Argument	"""sampled_data_finish(pfn)"""		9121634	1					
ANR	9121784	PrimaryExpression	"""sampled_data_finish(pfn)"""		9121634	0					
ANR	9121785	ExpressionStatement	"ifree_object ( penum , ""sampled_data_finish(enum)"" )"	592:4:19971:20019	9121634	14	True				
ANR	9121786	CallExpression	"ifree_object ( penum , ""sampled_data_finish(enum)"" )"		9121634	0					
ANR	9121787	Callee	ifree_object		9121634	0					
ANR	9121788	Identifier	ifree_object		9121634	0					
ANR	9121789	ArgumentList	penum		9121634	1					
ANR	9121790	Argument	penum		9121634	0					
ANR	9121791	Identifier	penum		9121634	0					
ANR	9121792	Argument	"""sampled_data_finish(enum)"""		9121634	1					
ANR	9121793	PrimaryExpression	"""sampled_data_finish(enum)"""		9121634	0					
ANR	9121794	ReturnStatement	return o_pop_estack ;	593:4:20025:20044	9121634	15	True				
ANR	9121795	Identifier	o_pop_estack		9121634	0					
ANR	9121796	ReturnType	static int		9121634	1					
ANR	9121797	Identifier	sampled_data_finish		9121634	2					
ANR	9121798	ParameterList	i_ctx_t * i_ctx_p		9121634	3					
ANR	9121799	Parameter	i_ctx_t * i_ctx_p	567:20:19171:19186	9121634	0	True				
ANR	9121800	ParameterType	i_ctx_t *		9121634	0					
ANR	9121801	Identifier	i_ctx_p		9121634	1					
ANR	9121802	CFGEntryNode	ENTRY		9121634		True				
ANR	9121803	CFGExitNode	EXIT		9121634		True				
ANR	9121804	Symbol	* penum		9121634						
ANR	9121805	Symbol	a_execute		9121634						
ANR	9121806	Symbol	code		9121634						
ANR	9121807	Symbol	& cref		9121634						
ANR	9121808	Symbol	esp		9121634						
ANR	9121809	Symbol	cref . value . refs		9121634						
ANR	9121810	Symbol	o_pop_estack		9121634						
ANR	9121811	Symbol	osp		9121634						
ANR	9121812	Symbol	zexecfunction		9121634						
ANR	9121813	Symbol	& pfn		9121634						
ANR	9121814	Symbol	& penum -> pfn -> params		9121634						
ANR	9121815	Symbol	imemory		9121634						
ANR	9121816	Symbol	op		9121634						
ANR	9121817	Symbol	gs_function_Sd_init		9121634						
ANR	9121818	Symbol	ialloc_ref_array		9121634						
ANR	9121819	Symbol	penum		9121634						
ANR	9121820	Symbol	penum -> pfn		9121634						
ANR	9121821	Symbol	params		9121634						
ANR	9121822	Symbol	senum		9121634						
ANR	9121823	Symbol	i_ctx_p		9121634						
ANR	9121824	Symbol	pfn		9121634						
ANR	9121825	Symbol	a_executable		9121634						
ANR	9121826	Symbol	cref . value		9121634						
ANR	9121827	Symbol	estack_storage		9121634						
ANR	9121828	Symbol	cref		9121634						
ANR	9121829	Function	make_sampled_function	596:0:20049:24146							
ANR	9121830	FunctionDef	"make_sampled_function (i_ctx_t * i_ctx_p , ref * arr , ref * pproc , gs_function_t * * func)"		9121829	0					
ANR	9121831	CompoundStatement		597:0:20138:24146	9121829	0					
ANR	9121832	IdentifierDeclStatement	"int code = 0 , * ptr , i , total_size , num_components , CIESubst ;"	598:4:20144:20203	9121829	0	True				
ANR	9121833	IdentifierDecl	code = 0		9121829	0					
ANR	9121834	IdentifierDeclType	int		9121829	0					
ANR	9121835	Identifier	code		9121829	1					
ANR	9121836	AssignmentExpression	code = 0		9121829	2		=			
ANR	9121837	Identifier	code		9121829	0					
ANR	9121838	PrimaryExpression	0		9121829	1					
ANR	9121839	IdentifierDecl	* ptr		9121829	1					
ANR	9121840	IdentifierDeclType	int *		9121829	0					
ANR	9121841	Identifier	ptr		9121829	1					
ANR	9121842	IdentifierDecl	i		9121829	2					
ANR	9121843	IdentifierDeclType	int		9121829	0					
ANR	9121844	Identifier	i		9121829	1					
ANR	9121845	IdentifierDecl	total_size		9121829	3					
ANR	9121846	IdentifierDeclType	int		9121829	0					
ANR	9121847	Identifier	total_size		9121829	1					
ANR	9121848	IdentifierDecl	num_components		9121829	4					
ANR	9121849	IdentifierDeclType	int		9121829	0					
ANR	9121850	Identifier	num_components		9121829	1					
ANR	9121851	IdentifierDecl	CIESubst		9121829	5					
ANR	9121852	IdentifierDeclType	int		9121829	0					
ANR	9121853	Identifier	CIESubst		9121829	1					
ANR	9121854	IdentifierDeclStatement	byte * bytes = 0 ;	599:4:20209:20225	9121829	1	True				
ANR	9121855	IdentifierDecl	* bytes = 0		9121829	0					
ANR	9121856	IdentifierDeclType	byte *		9121829	0					
ANR	9121857	Identifier	bytes		9121829	1					
ANR	9121858	AssignmentExpression	* bytes = 0		9121829	2		=			
ANR	9121859	Identifier	bytes		9121829	0					
ANR	9121860	PrimaryExpression	0		9121829	1					
ANR	9121861	IdentifierDeclStatement	float * fptr ;	600:4:20231:20242	9121829	2	True				
ANR	9121862	IdentifierDecl	* fptr		9121829	0					
ANR	9121863	IdentifierDeclType	float *		9121829	0					
ANR	9121864	Identifier	fptr		9121829	1					
ANR	9121865	IdentifierDeclStatement	gs_function_t * pfn = * func ;	601:4:20248:20274	9121829	3	True				
ANR	9121866	IdentifierDecl	* pfn = * func		9121829	0					
ANR	9121867	IdentifierDeclType	gs_function_t *		9121829	0					
ANR	9121868	Identifier	pfn		9121829	1					
ANR	9121869	AssignmentExpression	* pfn = * func		9121829	2		=			
ANR	9121870	Identifier	pfn		9121829	0					
ANR	9121871	UnaryOperationExpression	* func		9121829	1					
ANR	9121872	UnaryOperator	*		9121829	0					
ANR	9121873	Identifier	func		9121829	1					
ANR	9121874	IdentifierDeclStatement	gs_function_Sd_params_t params = { 0 } ;	602:4:20280:20316	9121829	4	True				
ANR	9121875	IdentifierDecl	params = { 0 }		9121829	0					
ANR	9121876	IdentifierDeclType	gs_function_Sd_params_t		9121829	0					
ANR	9121877	Identifier	params		9121829	1					
ANR	9121878	AssignmentExpression	params = { 0 }		9121829	2		=			
ANR	9121879	Identifier	params		9121829	0					
ANR	9121880	InitializerList	0		9121829	1					
ANR	9121881	PrimaryExpression	0		9121829	0					
ANR	9121882	IdentifierDeclStatement	"ref alternatespace , * palternatespace = & alternatespace ;"	603:4:20322:20376	9121829	5	True				
ANR	9121883	IdentifierDecl	alternatespace		9121829	0					
ANR	9121884	IdentifierDeclType	ref		9121829	0					
ANR	9121885	Identifier	alternatespace		9121829	1					
ANR	9121886	IdentifierDecl	* palternatespace = & alternatespace		9121829	1					
ANR	9121887	IdentifierDeclType	ref *		9121829	0					
ANR	9121888	Identifier	palternatespace		9121829	1					
ANR	9121889	AssignmentExpression	* palternatespace = & alternatespace		9121829	2		=			
ANR	9121890	Identifier	palternatespace		9121829	0					
ANR	9121891	UnaryOperationExpression	& alternatespace		9121829	1					
ANR	9121892	UnaryOperator	&		9121829	0					
ANR	9121893	Identifier	alternatespace		9121829	1					
ANR	9121894	IdentifierDeclStatement	"PS_colour_space_t * space , * altspace ;"	604:4:20382:20417	9121829	6	True				
ANR	9121895	IdentifierDecl	* space		9121829	0					
ANR	9121896	IdentifierDeclType	PS_colour_space_t *		9121829	0					
ANR	9121897	Identifier	space		9121829	1					
ANR	9121898	IdentifierDecl	* altspace		9121829	1					
ANR	9121899	IdentifierDeclType	PS_colour_space_t *		9121829	0					
ANR	9121900	Identifier	altspace		9121829	1					
ANR	9121901	ExpressionStatement	"code = get_space_object ( i_ctx_p , arr , & space )"	606:4:20424:20469	9121829	7	True				
ANR	9121902	AssignmentExpression	"code = get_space_object ( i_ctx_p , arr , & space )"		9121829	0		=			
ANR	9121903	Identifier	code		9121829	0					
ANR	9121904	CallExpression	"get_space_object ( i_ctx_p , arr , & space )"		9121829	1					
ANR	9121905	Callee	get_space_object		9121829	0					
ANR	9121906	Identifier	get_space_object		9121829	0					
ANR	9121907	ArgumentList	i_ctx_p		9121829	1					
ANR	9121908	Argument	i_ctx_p		9121829	0					
ANR	9121909	Identifier	i_ctx_p		9121829	0					
ANR	9121910	Argument	arr		9121829	1					
ANR	9121911	Identifier	arr		9121829	0					
ANR	9121912	Argument	& space		9121829	2					
ANR	9121913	UnaryOperationExpression	& space		9121829	0					
ANR	9121914	UnaryOperator	&		9121829	0					
ANR	9121915	Identifier	space		9121829	1					
ANR	9121916	IfStatement	if ( code < 0 )		9121829	8					
ANR	9121917	Condition	code < 0	607:8:20479:20486	9121829	0	True				
ANR	9121918	RelationalExpression	code < 0		9121829	0		<			
ANR	9121919	Identifier	code		9121829	0					
ANR	9121920	PrimaryExpression	0		9121829	1					
ANR	9121921	ReturnStatement	return code ;	608:8:20497:20508	9121829	1	True				
ANR	9121922	Identifier	code		9121829	0					
ANR	9121923	IfStatement	if ( ! space -> alternateproc )		9121829	9					
ANR	9121924	Condition	! space -> alternateproc	609:8:20518:20538	9121829	0	True				
ANR	9121925	UnaryOperationExpression	! space -> alternateproc		9121829	0					
ANR	9121926	UnaryOperator	!		9121829	0					
ANR	9121927	PtrMemberAccess	space -> alternateproc		9121829	1					
ANR	9121928	Identifier	space		9121829	0					
ANR	9121929	Identifier	alternateproc		9121829	1					
ANR	9121930	ReturnStatement	return gs_error_typecheck ;	610:8:20549:20574	9121829	1	True				
ANR	9121931	Identifier	gs_error_typecheck		9121829	0					
ANR	9121932	ExpressionStatement	"code = space -> alternateproc ( i_ctx_p , arr , & palternatespace , & CIESubst )"	611:4:20580:20650	9121829	10	True				
ANR	9121933	AssignmentExpression	"code = space -> alternateproc ( i_ctx_p , arr , & palternatespace , & CIESubst )"		9121829	0		=			
ANR	9121934	Identifier	code		9121829	0					
ANR	9121935	CallExpression	"space -> alternateproc ( i_ctx_p , arr , & palternatespace , & CIESubst )"		9121829	1					
ANR	9121936	Callee	space -> alternateproc		9121829	0					
ANR	9121937	PtrMemberAccess	space -> alternateproc		9121829	0					
ANR	9121938	Identifier	space		9121829	0					
ANR	9121939	Identifier	alternateproc		9121829	1					
ANR	9121940	ArgumentList	i_ctx_p		9121829	1					
ANR	9121941	Argument	i_ctx_p		9121829	0					
ANR	9121942	Identifier	i_ctx_p		9121829	0					
ANR	9121943	Argument	arr		9121829	1					
ANR	9121944	Identifier	arr		9121829	0					
ANR	9121945	Argument	& palternatespace		9121829	2					
ANR	9121946	UnaryOperationExpression	& palternatespace		9121829	0					
ANR	9121947	UnaryOperator	&		9121829	0					
ANR	9121948	Identifier	palternatespace		9121829	1					
ANR	9121949	Argument	& CIESubst		9121829	3					
ANR	9121950	UnaryOperationExpression	& CIESubst		9121829	0					
ANR	9121951	UnaryOperator	&		9121829	0					
ANR	9121952	Identifier	CIESubst		9121829	1					
ANR	9121953	IfStatement	if ( code < 0 )		9121829	11					
ANR	9121954	Condition	code < 0	612:8:20660:20667	9121829	0	True				
ANR	9121955	RelationalExpression	code < 0		9121829	0		<			
ANR	9121956	Identifier	code		9121829	0					
ANR	9121957	PrimaryExpression	0		9121829	1					
ANR	9121958	ReturnStatement	return code ;	613:8:20678:20689	9121829	1	True				
ANR	9121959	Identifier	code		9121829	0					
ANR	9121960	ExpressionStatement	"code = get_space_object ( i_ctx_p , palternatespace , & altspace )"	614:4:20695:20755	9121829	12	True				
ANR	9121961	AssignmentExpression	"code = get_space_object ( i_ctx_p , palternatespace , & altspace )"		9121829	0		=			
ANR	9121962	Identifier	code		9121829	0					
ANR	9121963	CallExpression	"get_space_object ( i_ctx_p , palternatespace , & altspace )"		9121829	1					
ANR	9121964	Callee	get_space_object		9121829	0					
ANR	9121965	Identifier	get_space_object		9121829	0					
ANR	9121966	ArgumentList	i_ctx_p		9121829	1					
ANR	9121967	Argument	i_ctx_p		9121829	0					
ANR	9121968	Identifier	i_ctx_p		9121829	0					
ANR	9121969	Argument	palternatespace		9121829	1					
ANR	9121970	Identifier	palternatespace		9121829	0					
ANR	9121971	Argument	& altspace		9121829	2					
ANR	9121972	UnaryOperationExpression	& altspace		9121829	0					
ANR	9121973	UnaryOperator	&		9121829	0					
ANR	9121974	Identifier	altspace		9121829	1					
ANR	9121975	IfStatement	if ( code < 0 )		9121829	13					
ANR	9121976	Condition	code < 0	615:8:20765:20772	9121829	0	True				
ANR	9121977	RelationalExpression	code < 0		9121829	0		<			
ANR	9121978	Identifier	code		9121829	0					
ANR	9121979	PrimaryExpression	0		9121829	1					
ANR	9121980	ReturnStatement	return code ;	616:8:20783:20794	9121829	1	True				
ANR	9121981	Identifier	code		9121829	0					
ANR	9121982	ExpressionStatement	params . Order = 3	620:4:20869:20885	9121829	14	True				
ANR	9121983	AssignmentExpression	params . Order = 3		9121829	0		=			
ANR	9121984	MemberAccess	params . Order		9121829	0					
ANR	9121985	Identifier	params		9121829	0					
ANR	9121986	Identifier	Order		9121829	1					
ANR	9121987	PrimaryExpression	3		9121829	1					
ANR	9121988	ExpressionStatement	params . BitsPerSample = 16	621:4:20891:20916	9121829	15	True				
ANR	9121989	AssignmentExpression	params . BitsPerSample = 16		9121829	0		=			
ANR	9121990	MemberAccess	params . BitsPerSample		9121829	0					
ANR	9121991	Identifier	params		9121829	0					
ANR	9121992	Identifier	BitsPerSample		9121829	1					
ANR	9121993	PrimaryExpression	16		9121829	1					
ANR	9121994	ExpressionStatement	"code = space -> numcomponents ( i_ctx_p , arr , & num_components )"	623:4:20923:20981	9121829	16	True				
ANR	9121995	AssignmentExpression	"code = space -> numcomponents ( i_ctx_p , arr , & num_components )"		9121829	0		=			
ANR	9121996	Identifier	code		9121829	0					
ANR	9121997	CallExpression	"space -> numcomponents ( i_ctx_p , arr , & num_components )"		9121829	1					
ANR	9121998	Callee	space -> numcomponents		9121829	0					
ANR	9121999	PtrMemberAccess	space -> numcomponents		9121829	0					
ANR	9122000	Identifier	space		9121829	0					
ANR	9122001	Identifier	numcomponents		9121829	1					
ANR	9122002	ArgumentList	i_ctx_p		9121829	1					
ANR	9122003	Argument	i_ctx_p		9121829	0					
ANR	9122004	Identifier	i_ctx_p		9121829	0					
ANR	9122005	Argument	arr		9121829	1					
ANR	9122006	Identifier	arr		9121829	0					
ANR	9122007	Argument	& num_components		9121829	2					
ANR	9122008	UnaryOperationExpression	& num_components		9121829	0					
ANR	9122009	UnaryOperator	&		9121829	0					
ANR	9122010	Identifier	num_components		9121829	1					
ANR	9122011	IfStatement	if ( code < 0 )		9121829	17					
ANR	9122012	Condition	code < 0	624:8:20991:20998	9121829	0	True				
ANR	9122013	RelationalExpression	code < 0		9121829	0		<			
ANR	9122014	Identifier	code		9121829	0					
ANR	9122015	PrimaryExpression	0		9121829	1					
ANR	9122016	ReturnStatement	return code ;	625:8:21009:21020	9121829	1	True				
ANR	9122017	Identifier	code		9121829	0					
ANR	9122018	ExpressionStatement	"fptr = ( float * ) gs_alloc_byte_array ( imemory , num_components * 2 , sizeof ( float ) , ""make_sampled_function(Domain)"" )"	626:4:21026:21138	9121829	18	True				
ANR	9122019	AssignmentExpression	"fptr = ( float * ) gs_alloc_byte_array ( imemory , num_components * 2 , sizeof ( float ) , ""make_sampled_function(Domain)"" )"		9121829	0		=			
ANR	9122020	Identifier	fptr		9121829	0					
ANR	9122021	CastExpression	"( float * ) gs_alloc_byte_array ( imemory , num_components * 2 , sizeof ( float ) , ""make_sampled_function(Domain)"" )"		9121829	1					
ANR	9122022	CastTarget	float *		9121829	0					
ANR	9122023	CallExpression	"gs_alloc_byte_array ( imemory , num_components * 2 , sizeof ( float ) , ""make_sampled_function(Domain)"" )"		9121829	1					
ANR	9122024	Callee	gs_alloc_byte_array		9121829	0					
ANR	9122025	Identifier	gs_alloc_byte_array		9121829	0					
ANR	9122026	ArgumentList	imemory		9121829	1					
ANR	9122027	Argument	imemory		9121829	0					
ANR	9122028	Identifier	imemory		9121829	0					
ANR	9122029	Argument	num_components * 2		9121829	1					
ANR	9122030	MultiplicativeExpression	num_components * 2		9121829	0		*			
ANR	9122031	Identifier	num_components		9121829	0					
ANR	9122032	PrimaryExpression	2		9121829	1					
ANR	9122033	Argument	sizeof ( float )		9121829	2					
ANR	9122034	SizeofExpression	sizeof ( float )		9121829	0					
ANR	9122035	Sizeof	sizeof		9121829	0					
ANR	9122036	SizeofOperand	float		9121829	1					
ANR	9122037	Argument	"""make_sampled_function(Domain)"""		9121829	3					
ANR	9122038	PrimaryExpression	"""make_sampled_function(Domain)"""		9121829	0					
ANR	9122039	IfStatement	if ( ! fptr )		9121829	19					
ANR	9122040	Condition	! fptr	627:8:21148:21152	9121829	0	True				
ANR	9122041	UnaryOperationExpression	! fptr		9121829	0					
ANR	9122042	UnaryOperator	!		9121829	0					
ANR	9122043	Identifier	fptr		9121829	1					
ANR	9122044	ReturnStatement	return gs_error_VMerror ;	628:8:21163:21186	9121829	1	True				
ANR	9122045	Identifier	gs_error_VMerror		9121829	0					
ANR	9122046	ExpressionStatement	"code = space -> domain ( i_ctx_p , arr , fptr )"	629:4:21192:21232	9121829	20	True				
ANR	9122047	AssignmentExpression	"code = space -> domain ( i_ctx_p , arr , fptr )"		9121829	0		=			
ANR	9122048	Identifier	code		9121829	0					
ANR	9122049	CallExpression	"space -> domain ( i_ctx_p , arr , fptr )"		9121829	1					
ANR	9122050	Callee	space -> domain		9121829	0					
ANR	9122051	PtrMemberAccess	space -> domain		9121829	0					
ANR	9122052	Identifier	space		9121829	0					
ANR	9122053	Identifier	domain		9121829	1					
ANR	9122054	ArgumentList	i_ctx_p		9121829	1					
ANR	9122055	Argument	i_ctx_p		9121829	0					
ANR	9122056	Identifier	i_ctx_p		9121829	0					
ANR	9122057	Argument	arr		9121829	1					
ANR	9122058	Identifier	arr		9121829	0					
ANR	9122059	Argument	fptr		9121829	2					
ANR	9122060	Identifier	fptr		9121829	0					
ANR	9122061	IfStatement	if ( code < 0 )		9121829	21					
ANR	9122062	Condition	code < 0	630:8:21242:21249	9121829	0	True				
ANR	9122063	RelationalExpression	code < 0		9121829	0		<			
ANR	9122064	Identifier	code		9121829	0					
ANR	9122065	PrimaryExpression	0		9121829	1					
ANR	9122066	CompoundStatement		34:18:1113:1113	9121829	1					
ANR	9122067	ExpressionStatement	"gs_free_const_object ( imemory , fptr , ""make_sampled_function(Domain)"" )"	631:8:21262:21330	9121829	0	True				
ANR	9122068	CallExpression	"gs_free_const_object ( imemory , fptr , ""make_sampled_function(Domain)"" )"		9121829	0					
ANR	9122069	Callee	gs_free_const_object		9121829	0					
ANR	9122070	Identifier	gs_free_const_object		9121829	0					
ANR	9122071	ArgumentList	imemory		9121829	1					
ANR	9122072	Argument	imemory		9121829	0					
ANR	9122073	Identifier	imemory		9121829	0					
ANR	9122074	Argument	fptr		9121829	1					
ANR	9122075	Identifier	fptr		9121829	0					
ANR	9122076	Argument	"""make_sampled_function(Domain)"""		9121829	2					
ANR	9122077	PrimaryExpression	"""make_sampled_function(Domain)"""		9121829	0					
ANR	9122078	ReturnStatement	return code ;	632:8:21340:21351	9121829	1	True				
ANR	9122079	Identifier	code		9121829	0					
ANR	9122080	ExpressionStatement	params . Domain = fptr	634:4:21363:21383	9121829	22	True				
ANR	9122081	AssignmentExpression	params . Domain = fptr		9121829	0		=			
ANR	9122082	MemberAccess	params . Domain		9121829	0					
ANR	9122083	Identifier	params		9121829	0					
ANR	9122084	Identifier	Domain		9121829	1					
ANR	9122085	Identifier	fptr		9121829	1					
ANR	9122086	ExpressionStatement	params . m = num_components	635:4:21389:21414	9121829	23	True				
ANR	9122087	AssignmentExpression	params . m = num_components		9121829	0		=			
ANR	9122088	MemberAccess	params . m		9121829	0					
ANR	9122089	Identifier	params		9121829	0					
ANR	9122090	Identifier	m		9121829	1					
ANR	9122091	Identifier	num_components		9121829	1					
ANR	9122092	ExpressionStatement	"code = altspace -> numcomponents ( i_ctx_p , palternatespace , & num_components )"	637:4:21421:21494	9121829	24	True				
ANR	9122093	AssignmentExpression	"code = altspace -> numcomponents ( i_ctx_p , palternatespace , & num_components )"		9121829	0		=			
ANR	9122094	Identifier	code		9121829	0					
ANR	9122095	CallExpression	"altspace -> numcomponents ( i_ctx_p , palternatespace , & num_components )"		9121829	1					
ANR	9122096	Callee	altspace -> numcomponents		9121829	0					
ANR	9122097	PtrMemberAccess	altspace -> numcomponents		9121829	0					
ANR	9122098	Identifier	altspace		9121829	0					
ANR	9122099	Identifier	numcomponents		9121829	1					
ANR	9122100	ArgumentList	i_ctx_p		9121829	1					
ANR	9122101	Argument	i_ctx_p		9121829	0					
ANR	9122102	Identifier	i_ctx_p		9121829	0					
ANR	9122103	Argument	palternatespace		9121829	1					
ANR	9122104	Identifier	palternatespace		9121829	0					
ANR	9122105	Argument	& num_components		9121829	2					
ANR	9122106	UnaryOperationExpression	& num_components		9121829	0					
ANR	9122107	UnaryOperator	&		9121829	0					
ANR	9122108	Identifier	num_components		9121829	1					
ANR	9122109	IfStatement	if ( code < 0 )		9121829	25					
ANR	9122110	Condition	code < 0	638:8:21504:21511	9121829	0	True				
ANR	9122111	RelationalExpression	code < 0		9121829	0		<			
ANR	9122112	Identifier	code		9121829	0					
ANR	9122113	PrimaryExpression	0		9121829	1					
ANR	9122114	CompoundStatement		42:18:1375:1375	9121829	1					
ANR	9122115	ExpressionStatement	"gs_free_const_object ( imemory , params . Domain , ""make_type4_function(Domain)"" )"	639:8:21524:21599	9121829	0	True				
ANR	9122116	CallExpression	"gs_free_const_object ( imemory , params . Domain , ""make_type4_function(Domain)"" )"		9121829	0					
ANR	9122117	Callee	gs_free_const_object		9121829	0					
ANR	9122118	Identifier	gs_free_const_object		9121829	0					
ANR	9122119	ArgumentList	imemory		9121829	1					
ANR	9122120	Argument	imemory		9121829	0					
ANR	9122121	Identifier	imemory		9121829	0					
ANR	9122122	Argument	params . Domain		9121829	1					
ANR	9122123	MemberAccess	params . Domain		9121829	0					
ANR	9122124	Identifier	params		9121829	0					
ANR	9122125	Identifier	Domain		9121829	1					
ANR	9122126	Argument	"""make_type4_function(Domain)"""		9121829	2					
ANR	9122127	PrimaryExpression	"""make_type4_function(Domain)"""		9121829	0					
ANR	9122128	ReturnStatement	return code ;	640:8:21609:21620	9121829	1	True				
ANR	9122129	Identifier	code		9121829	0					
ANR	9122130	ExpressionStatement	"fptr = ( float * ) gs_alloc_byte_array ( imemory , num_components * 2 , sizeof ( float ) , ""make_sampled_function(Range)"" )"	642:4:21632:21743	9121829	26	True				
ANR	9122131	AssignmentExpression	"fptr = ( float * ) gs_alloc_byte_array ( imemory , num_components * 2 , sizeof ( float ) , ""make_sampled_function(Range)"" )"		9121829	0		=			
ANR	9122132	Identifier	fptr		9121829	0					
ANR	9122133	CastExpression	"( float * ) gs_alloc_byte_array ( imemory , num_components * 2 , sizeof ( float ) , ""make_sampled_function(Range)"" )"		9121829	1					
ANR	9122134	CastTarget	float *		9121829	0					
ANR	9122135	CallExpression	"gs_alloc_byte_array ( imemory , num_components * 2 , sizeof ( float ) , ""make_sampled_function(Range)"" )"		9121829	1					
ANR	9122136	Callee	gs_alloc_byte_array		9121829	0					
ANR	9122137	Identifier	gs_alloc_byte_array		9121829	0					
ANR	9122138	ArgumentList	imemory		9121829	1					
ANR	9122139	Argument	imemory		9121829	0					
ANR	9122140	Identifier	imemory		9121829	0					
ANR	9122141	Argument	num_components * 2		9121829	1					
ANR	9122142	MultiplicativeExpression	num_components * 2		9121829	0		*			
ANR	9122143	Identifier	num_components		9121829	0					
ANR	9122144	PrimaryExpression	2		9121829	1					
ANR	9122145	Argument	sizeof ( float )		9121829	2					
ANR	9122146	SizeofExpression	sizeof ( float )		9121829	0					
ANR	9122147	Sizeof	sizeof		9121829	0					
ANR	9122148	SizeofOperand	float		9121829	1					
ANR	9122149	Argument	"""make_sampled_function(Range)"""		9121829	3					
ANR	9122150	PrimaryExpression	"""make_sampled_function(Range)"""		9121829	0					
ANR	9122151	IfStatement	if ( ! fptr )		9121829	27					
ANR	9122152	Condition	! fptr	643:8:21753:21757	9121829	0	True				
ANR	9122153	UnaryOperationExpression	! fptr		9121829	0					
ANR	9122154	UnaryOperator	!		9121829	0					
ANR	9122155	Identifier	fptr		9121829	1					
ANR	9122156	CompoundStatement		47:15:1621:1621	9121829	1					
ANR	9122157	ExpressionStatement	"gs_free_const_object ( imemory , params . Domain , ""make_sampled_function(Domain)"" )"	644:8:21770:21847	9121829	0	True				
ANR	9122158	CallExpression	"gs_free_const_object ( imemory , params . Domain , ""make_sampled_function(Domain)"" )"		9121829	0					
ANR	9122159	Callee	gs_free_const_object		9121829	0					
ANR	9122160	Identifier	gs_free_const_object		9121829	0					
ANR	9122161	ArgumentList	imemory		9121829	1					
ANR	9122162	Argument	imemory		9121829	0					
ANR	9122163	Identifier	imemory		9121829	0					
ANR	9122164	Argument	params . Domain		9121829	1					
ANR	9122165	MemberAccess	params . Domain		9121829	0					
ANR	9122166	Identifier	params		9121829	0					
ANR	9122167	Identifier	Domain		9121829	1					
ANR	9122168	Argument	"""make_sampled_function(Domain)"""		9121829	2					
ANR	9122169	PrimaryExpression	"""make_sampled_function(Domain)"""		9121829	0					
ANR	9122170	ReturnStatement	return gs_error_VMerror ;	645:8:21857:21880	9121829	1	True				
ANR	9122171	Identifier	gs_error_VMerror		9121829	0					
ANR	9122172	ExpressionStatement	"code = altspace -> range ( i_ctx_p , palternatespace , fptr )"	647:4:21892:21946	9121829	28	True				
ANR	9122173	AssignmentExpression	"code = altspace -> range ( i_ctx_p , palternatespace , fptr )"		9121829	0		=			
ANR	9122174	Identifier	code		9121829	0					
ANR	9122175	CallExpression	"altspace -> range ( i_ctx_p , palternatespace , fptr )"		9121829	1					
ANR	9122176	Callee	altspace -> range		9121829	0					
ANR	9122177	PtrMemberAccess	altspace -> range		9121829	0					
ANR	9122178	Identifier	altspace		9121829	0					
ANR	9122179	Identifier	range		9121829	1					
ANR	9122180	ArgumentList	i_ctx_p		9121829	1					
ANR	9122181	Argument	i_ctx_p		9121829	0					
ANR	9122182	Identifier	i_ctx_p		9121829	0					
ANR	9122183	Argument	palternatespace		9121829	1					
ANR	9122184	Identifier	palternatespace		9121829	0					
ANR	9122185	Argument	fptr		9121829	2					
ANR	9122186	Identifier	fptr		9121829	0					
ANR	9122187	IfStatement	if ( code < 0 )		9121829	29					
ANR	9122188	Condition	code < 0	648:8:21956:21963	9121829	0	True				
ANR	9122189	RelationalExpression	code < 0		9121829	0		<			
ANR	9122190	Identifier	code		9121829	0					
ANR	9122191	PrimaryExpression	0		9121829	1					
ANR	9122192	CompoundStatement		52:18:1827:1827	9121829	1					
ANR	9122193	ExpressionStatement	"gs_free_const_object ( imemory , params . Domain , ""make_sampled_function(Domain)"" )"	649:8:21976:22053	9121829	0	True				
ANR	9122194	CallExpression	"gs_free_const_object ( imemory , params . Domain , ""make_sampled_function(Domain)"" )"		9121829	0					
ANR	9122195	Callee	gs_free_const_object		9121829	0					
ANR	9122196	Identifier	gs_free_const_object		9121829	0					
ANR	9122197	ArgumentList	imemory		9121829	1					
ANR	9122198	Argument	imemory		9121829	0					
ANR	9122199	Identifier	imemory		9121829	0					
ANR	9122200	Argument	params . Domain		9121829	1					
ANR	9122201	MemberAccess	params . Domain		9121829	0					
ANR	9122202	Identifier	params		9121829	0					
ANR	9122203	Identifier	Domain		9121829	1					
ANR	9122204	Argument	"""make_sampled_function(Domain)"""		9121829	2					
ANR	9122205	PrimaryExpression	"""make_sampled_function(Domain)"""		9121829	0					
ANR	9122206	ExpressionStatement	"gs_free_const_object ( imemory , fptr , ""make_sampled_function(Range)"" )"	650:8:22063:22130	9121829	1	True				
ANR	9122207	CallExpression	"gs_free_const_object ( imemory , fptr , ""make_sampled_function(Range)"" )"		9121829	0					
ANR	9122208	Callee	gs_free_const_object		9121829	0					
ANR	9122209	Identifier	gs_free_const_object		9121829	0					
ANR	9122210	ArgumentList	imemory		9121829	1					
ANR	9122211	Argument	imemory		9121829	0					
ANR	9122212	Identifier	imemory		9121829	0					
ANR	9122213	Argument	fptr		9121829	1					
ANR	9122214	Identifier	fptr		9121829	0					
ANR	9122215	Argument	"""make_sampled_function(Range)"""		9121829	2					
ANR	9122216	PrimaryExpression	"""make_sampled_function(Range)"""		9121829	0					
ANR	9122217	ReturnStatement	return code ;	651:8:22140:22151	9121829	2	True				
ANR	9122218	Identifier	code		9121829	0					
ANR	9122219	ExpressionStatement	params . Range = fptr	653:4:22163:22182	9121829	30	True				
ANR	9122220	AssignmentExpression	params . Range = fptr		9121829	0		=			
ANR	9122221	MemberAccess	params . Range		9121829	0					
ANR	9122222	Identifier	params		9121829	0					
ANR	9122223	Identifier	Range		9121829	1					
ANR	9122224	Identifier	fptr		9121829	1					
ANR	9122225	ExpressionStatement	params . n = num_components	654:4:22188:22213	9121829	31	True				
ANR	9122226	AssignmentExpression	params . n = num_components		9121829	0		=			
ANR	9122227	MemberAccess	params . n		9121829	0					
ANR	9122228	Identifier	params		9121829	0					
ANR	9122229	Identifier	n		9121829	1					
ANR	9122230	Identifier	num_components		9121829	1					
ANR	9122231	ExpressionStatement	"ptr = ( int * ) gs_alloc_byte_array ( imemory , params . m , sizeof ( int ) , ""Size"" )"	660:4:22383:22455	9121829	32	True				
ANR	9122232	AssignmentExpression	"ptr = ( int * ) gs_alloc_byte_array ( imemory , params . m , sizeof ( int ) , ""Size"" )"		9121829	0		=			
ANR	9122233	Identifier	ptr		9121829	0					
ANR	9122234	CastExpression	"( int * ) gs_alloc_byte_array ( imemory , params . m , sizeof ( int ) , ""Size"" )"		9121829	1					
ANR	9122235	CastTarget	int *		9121829	0					
ANR	9122236	CallExpression	"gs_alloc_byte_array ( imemory , params . m , sizeof ( int ) , ""Size"" )"		9121829	1					
ANR	9122237	Callee	gs_alloc_byte_array		9121829	0					
ANR	9122238	Identifier	gs_alloc_byte_array		9121829	0					
ANR	9122239	ArgumentList	imemory		9121829	1					
ANR	9122240	Argument	imemory		9121829	0					
ANR	9122241	Identifier	imemory		9121829	0					
ANR	9122242	Argument	params . m		9121829	1					
ANR	9122243	MemberAccess	params . m		9121829	0					
ANR	9122244	Identifier	params		9121829	0					
ANR	9122245	Identifier	m		9121829	1					
ANR	9122246	Argument	sizeof ( int )		9121829	2					
ANR	9122247	SizeofExpression	sizeof ( int )		9121829	0					
ANR	9122248	Sizeof	sizeof		9121829	0					
ANR	9122249	SizeofOperand	int		9121829	1					
ANR	9122250	Argument	"""Size"""		9121829	3					
ANR	9122251	PrimaryExpression	"""Size"""		9121829	0					
ANR	9122252	IfStatement	if ( ptr == NULL )		9121829	33					
ANR	9122253	Condition	ptr == NULL	661:8:22465:22475	9121829	0	True				
ANR	9122254	EqualityExpression	ptr == NULL		9121829	0		==			
ANR	9122255	Identifier	ptr		9121829	0					
ANR	9122256	Identifier	NULL		9121829	1					
ANR	9122257	CompoundStatement		65:21:2339:2339	9121829	1					
ANR	9122258	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	662:8:22488:22526	9121829	0	True				
ANR	9122259	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		9121829	0		=			
ANR	9122260	Identifier	code		9121829	0					
ANR	9122261	CallExpression	gs_note_error ( gs_error_VMerror )		9121829	1					
ANR	9122262	Callee	gs_note_error		9121829	0					
ANR	9122263	Identifier	gs_note_error		9121829	0					
ANR	9122264	ArgumentList	gs_error_VMerror		9121829	1					
ANR	9122265	Argument	gs_error_VMerror		9121829	0					
ANR	9122266	Identifier	gs_error_VMerror		9121829	0					
ANR	9122267	GotoStatement	goto fail ;	663:8:22536:22545	9121829	1	True				
ANR	9122268	Identifier	fail		9121829	0					
ANR	9122269	ExpressionStatement	params . Size = ptr	665:4:22557:22574	9121829	34	True				
ANR	9122270	AssignmentExpression	params . Size = ptr		9121829	0		=			
ANR	9122271	MemberAccess	params . Size		9121829	0					
ANR	9122272	Identifier	params		9121829	0					
ANR	9122273	Identifier	Size		9121829	1					
ANR	9122274	Identifier	ptr		9121829	1					
ANR	9122275	ExpressionStatement	"code = determine_sampled_data_size ( params . m , params . n , params . BitsPerSample , ( int * ) params . Size )"	670:4:22644:22764	9121829	35	True				
ANR	9122276	AssignmentExpression	"code = determine_sampled_data_size ( params . m , params . n , params . BitsPerSample , ( int * ) params . Size )"		9121829	0		=			
ANR	9122277	Identifier	code		9121829	0					
ANR	9122278	CallExpression	"determine_sampled_data_size ( params . m , params . n , params . BitsPerSample , ( int * ) params . Size )"		9121829	1					
ANR	9122279	Callee	determine_sampled_data_size		9121829	0					
ANR	9122280	Identifier	determine_sampled_data_size		9121829	0					
ANR	9122281	ArgumentList	params . m		9121829	1					
ANR	9122282	Argument	params . m		9121829	0					
ANR	9122283	MemberAccess	params . m		9121829	0					
ANR	9122284	Identifier	params		9121829	0					
ANR	9122285	Identifier	m		9121829	1					
ANR	9122286	Argument	params . n		9121829	1					
ANR	9122287	MemberAccess	params . n		9121829	0					
ANR	9122288	Identifier	params		9121829	0					
ANR	9122289	Identifier	n		9121829	1					
ANR	9122290	Argument	params . BitsPerSample		9121829	2					
ANR	9122291	MemberAccess	params . BitsPerSample		9121829	0					
ANR	9122292	Identifier	params		9121829	0					
ANR	9122293	Identifier	BitsPerSample		9121829	1					
ANR	9122294	Argument	( int * ) params . Size		9121829	3					
ANR	9122295	CastExpression	( int * ) params . Size		9121829	0					
ANR	9122296	CastTarget	int *		9121829	0					
ANR	9122297	MemberAccess	params . Size		9121829	1					
ANR	9122298	Identifier	params		9121829	0					
ANR	9122299	Identifier	Size		9121829	1					
ANR	9122300	IfStatement	if ( code < 0 )		9121829	36					
ANR	9122301	Condition	code < 0	672:8:22774:22781	9121829	0	True				
ANR	9122302	RelationalExpression	code < 0		9121829	0		<			
ANR	9122303	Identifier	code		9121829	0					
ANR	9122304	PrimaryExpression	0		9121829	1					
ANR	9122305	GotoStatement	goto fail ;	673:8:22792:22801	9121829	1	True				
ANR	9122306	Identifier	fail		9121829	0					
ANR	9122307	ExpressionStatement	total_size = params . n * bits2bytes ( params . BitsPerSample )	677:4:22883:22939	9121829	37	True				
ANR	9122308	AssignmentExpression	total_size = params . n * bits2bytes ( params . BitsPerSample )		9121829	0		=			
ANR	9122309	Identifier	total_size		9121829	0					
ANR	9122310	MultiplicativeExpression	params . n * bits2bytes ( params . BitsPerSample )		9121829	1		*			
ANR	9122311	MemberAccess	params . n		9121829	0					
ANR	9122312	Identifier	params		9121829	0					
ANR	9122313	Identifier	n		9121829	1					
ANR	9122314	CallExpression	bits2bytes ( params . BitsPerSample )		9121829	1					
ANR	9122315	Callee	bits2bytes		9121829	0					
ANR	9122316	Identifier	bits2bytes		9121829	0					
ANR	9122317	ArgumentList	params . BitsPerSample		9121829	1					
ANR	9122318	Argument	params . BitsPerSample		9121829	0					
ANR	9122319	MemberAccess	params . BitsPerSample		9121829	0					
ANR	9122320	Identifier	params		9121829	0					
ANR	9122321	Identifier	BitsPerSample		9121829	1					
ANR	9122322	ForStatement	for ( i = 0 ; i < params . m ; i ++ )		9121829	38					
ANR	9122323	ForInit	i = 0 ;	678:9:22950:22955	9121829	0	True				
ANR	9122324	AssignmentExpression	i = 0		9121829	0		=			
ANR	9122325	Identifier	i		9121829	0					
ANR	9122326	PrimaryExpression	0		9121829	1					
ANR	9122327	Condition	i < params . m	678:16:22957:22968	9121829	1	True				
ANR	9122328	RelationalExpression	i < params . m		9121829	0		<			
ANR	9122329	Identifier	i		9121829	0					
ANR	9122330	MemberAccess	params . m		9121829	1					
ANR	9122331	Identifier	params		9121829	0					
ANR	9122332	Identifier	m		9121829	1					
ANR	9122333	PostIncDecOperationExpression	i ++	678:30:22971:22973	9121829	2	True				
ANR	9122334	Identifier	i		9121829	0					
ANR	9122335	IncDec	++		9121829	1					
ANR	9122336	ExpressionStatement	total_size *= params . Size [ i ]	679:8:22984:23012	9121829	3	True				
ANR	9122337	AssignmentExpression	total_size *= params . Size [ i ]		9121829	0		*=			
ANR	9122338	Identifier	total_size		9121829	0					
ANR	9122339	ArrayIndexing	params . Size [ i ]		9121829	1					
ANR	9122340	MemberAccess	params . Size		9121829	0					
ANR	9122341	Identifier	params		9121829	0					
ANR	9122342	Identifier	Size		9121829	1					
ANR	9122343	Identifier	i		9121829	1					
ANR	9122344	ExpressionStatement	"bytes = gs_alloc_byte_array ( imemory , total_size , 1 , ""cube_build_func0(bytes)"" )"	683:4:23081:23159	9121829	39	True				
ANR	9122345	AssignmentExpression	"bytes = gs_alloc_byte_array ( imemory , total_size , 1 , ""cube_build_func0(bytes)"" )"		9121829	0		=			
ANR	9122346	Identifier	bytes		9121829	0					
ANR	9122347	CallExpression	"gs_alloc_byte_array ( imemory , total_size , 1 , ""cube_build_func0(bytes)"" )"		9121829	1					
ANR	9122348	Callee	gs_alloc_byte_array		9121829	0					
ANR	9122349	Identifier	gs_alloc_byte_array		9121829	0					
ANR	9122350	ArgumentList	imemory		9121829	1					
ANR	9122351	Argument	imemory		9121829	0					
ANR	9122352	Identifier	imemory		9121829	0					
ANR	9122353	Argument	total_size		9121829	1					
ANR	9122354	Identifier	total_size		9121829	0					
ANR	9122355	Argument	1		9121829	2					
ANR	9122356	PrimaryExpression	1		9121829	0					
ANR	9122357	Argument	"""cube_build_func0(bytes)"""		9121829	3					
ANR	9122358	PrimaryExpression	"""cube_build_func0(bytes)"""		9121829	0					
ANR	9122359	IfStatement	if ( ! bytes )		9121829	40					
ANR	9122360	Condition	! bytes	684:8:23169:23174	9121829	0	True				
ANR	9122361	UnaryOperationExpression	! bytes		9121829	0					
ANR	9122362	UnaryOperator	!		9121829	0					
ANR	9122363	Identifier	bytes		9121829	1					
ANR	9122364	CompoundStatement		88:16:3038:3038	9121829	1					
ANR	9122365	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	685:8:23187:23225	9121829	0	True				
ANR	9122366	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		9121829	0		=			
ANR	9122367	Identifier	code		9121829	0					
ANR	9122368	CallExpression	gs_note_error ( gs_error_VMerror )		9121829	1					
ANR	9122369	Callee	gs_note_error		9121829	0					
ANR	9122370	Identifier	gs_note_error		9121829	0					
ANR	9122371	ArgumentList	gs_error_VMerror		9121829	1					
ANR	9122372	Argument	gs_error_VMerror		9121829	0					
ANR	9122373	Identifier	gs_error_VMerror		9121829	0					
ANR	9122374	GotoStatement	goto fail ;	686:8:23235:23244	9121829	1	True				
ANR	9122375	Identifier	fail		9121829	0					
ANR	9122376	ExpressionStatement	"data_source_init_bytes ( & params . DataSource , ( const unsigned char * ) bytes , total_size )"	688:4:23256:23372	9121829	41	True				
ANR	9122377	CallExpression	"data_source_init_bytes ( & params . DataSource , ( const unsigned char * ) bytes , total_size )"		9121829	0					
ANR	9122378	Callee	data_source_init_bytes		9121829	0					
ANR	9122379	Identifier	data_source_init_bytes		9121829	0					
ANR	9122380	ArgumentList	& params . DataSource		9121829	1					
ANR	9122381	Argument	& params . DataSource		9121829	0					
ANR	9122382	UnaryOperationExpression	& params . DataSource		9121829	0					
ANR	9122383	UnaryOperator	&		9121829	0					
ANR	9122384	MemberAccess	params . DataSource		9121829	1					
ANR	9122385	Identifier	params		9121829	0					
ANR	9122386	Identifier	DataSource		9121829	1					
ANR	9122387	Argument	( const unsigned char * ) bytes		9121829	1					
ANR	9122388	CastExpression	( const unsigned char * ) bytes		9121829	0					
ANR	9122389	CastTarget	const unsigned char *		9121829	0					
ANR	9122390	Identifier	bytes		9121829	1					
ANR	9122391	Argument	total_size		9121829	2					
ANR	9122392	Identifier	total_size		9121829	0					
ANR	9122393	ExpressionStatement	"code = gs_function_Sd_init ( & pfn , & params , imemory )"	699:4:23789:23839	9121829	42	True				
ANR	9122394	AssignmentExpression	"code = gs_function_Sd_init ( & pfn , & params , imemory )"		9121829	0		=			
ANR	9122395	Identifier	code		9121829	0					
ANR	9122396	CallExpression	"gs_function_Sd_init ( & pfn , & params , imemory )"		9121829	1					
ANR	9122397	Callee	gs_function_Sd_init		9121829	0					
ANR	9122398	Identifier	gs_function_Sd_init		9121829	0					
ANR	9122399	ArgumentList	& pfn		9121829	1					
ANR	9122400	Argument	& pfn		9121829	0					
ANR	9122401	UnaryOperationExpression	& pfn		9121829	0					
ANR	9122402	UnaryOperator	&		9121829	0					
ANR	9122403	Identifier	pfn		9121829	1					
ANR	9122404	Argument	& params		9121829	1					
ANR	9122405	UnaryOperationExpression	& params		9121829	0					
ANR	9122406	UnaryOperator	&		9121829	0					
ANR	9122407	Identifier	params		9121829	1					
ANR	9122408	Argument	imemory		9121829	2					
ANR	9122409	Identifier	imemory		9121829	0					
ANR	9122410	IfStatement	if ( code < 0 )		9121829	43					
ANR	9122411	Condition	code < 0	700:8:23849:23856	9121829	0	True				
ANR	9122412	RelationalExpression	code < 0		9121829	0		<			
ANR	9122413	Identifier	code		9121829	0					
ANR	9122414	PrimaryExpression	0		9121829	1					
ANR	9122415	ReturnStatement	return code ;	701:8:23867:23878	9121829	1	True				
ANR	9122416	Identifier	code		9121829	0					
ANR	9122417	ReturnStatement	"return sampled_data_setup ( i_ctx_p , pfn , pproc , sampled_data_finish , imemory ) ;"	705:4:23944:24020	9121829	44	True				
ANR	9122418	CallExpression	"sampled_data_setup ( i_ctx_p , pfn , pproc , sampled_data_finish , imemory )"		9121829	0					
ANR	9122419	Callee	sampled_data_setup		9121829	0					
ANR	9122420	Identifier	sampled_data_setup		9121829	0					
ANR	9122421	ArgumentList	i_ctx_p		9121829	1					
ANR	9122422	Argument	i_ctx_p		9121829	0					
ANR	9122423	Identifier	i_ctx_p		9121829	0					
ANR	9122424	Argument	pfn		9121829	1					
ANR	9122425	Identifier	pfn		9121829	0					
ANR	9122426	Argument	pproc		9121829	2					
ANR	9122427	Identifier	pproc		9121829	0					
ANR	9122428	Argument	sampled_data_finish		9121829	3					
ANR	9122429	Identifier	sampled_data_finish		9121829	0					
ANR	9122430	Argument	imemory		9121829	4					
ANR	9122431	Identifier	imemory		9121829	0					
ANR	9122432	Label	fail :	707:0:24023:24027	9121829	45	True				
ANR	9122433	Identifier	fail		9121829	0					
ANR	9122434	ExpressionStatement	"gs_function_Sd_free_params ( & params , imemory )"	708:4:24033:24077	9121829	46	True				
ANR	9122435	CallExpression	"gs_function_Sd_free_params ( & params , imemory )"		9121829	0					
ANR	9122436	Callee	gs_function_Sd_free_params		9121829	0					
ANR	9122437	Identifier	gs_function_Sd_free_params		9121829	0					
ANR	9122438	ArgumentList	& params		9121829	1					
ANR	9122439	Argument	& params		9121829	0					
ANR	9122440	UnaryOperationExpression	& params		9121829	0					
ANR	9122441	UnaryOperator	&		9121829	0					
ANR	9122442	Identifier	params		9121829	1					
ANR	9122443	Argument	imemory		9121829	1					
ANR	9122444	Identifier	imemory		9121829	0					
ANR	9122445	ReturnStatement	return ( code < 0 ? code : gs_note_error ( gs_error_rangecheck ) ) ;	709:4:24083:24144	9121829	47	True				
ANR	9122446	ConditionalExpression	code < 0 ? code : gs_note_error ( gs_error_rangecheck )		9121829	0					
ANR	9122447	Condition	code < 0		9121829	0					
ANR	9122448	RelationalExpression	code < 0		9121829	0		<			
ANR	9122449	Identifier	code		9121829	0					
ANR	9122450	PrimaryExpression	0		9121829	1					
ANR	9122451	Identifier	code		9121829	1					
ANR	9122452	CallExpression	gs_note_error ( gs_error_rangecheck )		9121829	2					
ANR	9122453	Callee	gs_note_error		9121829	0					
ANR	9122454	Identifier	gs_note_error		9121829	0					
ANR	9122455	ArgumentList	gs_error_rangecheck		9121829	1					
ANR	9122456	Argument	gs_error_rangecheck		9121829	0					
ANR	9122457	Identifier	gs_error_rangecheck		9121829	0					
ANR	9122458	ReturnType	int		9121829	1					
ANR	9122459	Identifier	make_sampled_function		9121829	2					
ANR	9122460	ParameterList	"i_ctx_t * i_ctx_p , ref * arr , ref * pproc , gs_function_t * * func"		9121829	3					
ANR	9122461	Parameter	i_ctx_t * i_ctx_p	596:26:20075:20091	9121829	0	True				
ANR	9122462	ParameterType	i_ctx_t *		9121829	0					
ANR	9122463	Identifier	i_ctx_p		9121829	1					
ANR	9122464	Parameter	ref * arr	596:45:20094:20101	9121829	1	True				
ANR	9122465	ParameterType	ref *		9121829	0					
ANR	9122466	Identifier	arr		9121829	1					
ANR	9122467	Parameter	ref * pproc	596:55:20104:20113	9121829	2	True				
ANR	9122468	ParameterType	ref *		9121829	0					
ANR	9122469	Identifier	pproc		9121829	1					
ANR	9122470	Parameter	gs_function_t * * func	596:67:20116:20135	9121829	3	True				
ANR	9122471	ParameterType	gs_function_t * *		9121829	0					
ANR	9122472	Identifier	func		9121829	1					
ANR	9122473	CFGEntryNode	ENTRY		9121829		True				
ANR	9122474	CFGExitNode	EXIT		9121829		True				
ANR	9122475	Symbol	params . Order		9121829						
ANR	9122476	Symbol	params . BitsPerSample		9121829						
ANR	9122477	Symbol	gs_error_rangecheck		9121829						
ANR	9122478	Symbol	sampled_data_setup		9121829						
ANR	9122479	Symbol	space		9121829						
ANR	9122480	Symbol	altspace -> numcomponents		9121829						
ANR	9122481	Symbol	altspace		9121829						
ANR	9122482	Symbol	params . n		9121829						
ANR	9122483	Symbol	palternatespace		9121829						
ANR	9122484	Symbol	params . m		9121829						
ANR	9122485	Symbol	pproc		9121829						
ANR	9122486	Symbol	& pfn		9121829						
ANR	9122487	Symbol	imemory		9121829						
ANR	9122488	Symbol	sampled_data_finish		9121829						
ANR	9122489	Symbol	& params		9121829						
ANR	9122490	Symbol	NULL		9121829						
ANR	9122491	Symbol	space -> alternateproc		9121829						
ANR	9122492	Symbol	altspace -> range		9121829						
ANR	9122493	Symbol	params		9121829						
ANR	9122494	Symbol	get_space_object		9121829						
ANR	9122495	Symbol	& num_components		9121829						
ANR	9122496	Symbol	i_ctx_p		9121829						
ANR	9122497	Symbol	* params . Size		9121829						
ANR	9122498	Symbol	pfn		9121829						
ANR	9122499	Symbol	* altspace		9121829						
ANR	9122500	Symbol	params . Domain		9121829						
ANR	9122501	Symbol	code		9121829						
ANR	9122502	Symbol	& alternatespace		9121829						
ANR	9122503	Symbol	gs_error_typecheck		9121829						
ANR	9122504	Symbol	& params . DataSource		9121829						
ANR	9122505	Symbol	& altspace		9121829						
ANR	9122506	Symbol	params . Range		9121829						
ANR	9122507	Symbol	& space		9121829						
ANR	9122508	Symbol	& palternatespace		9121829						
ANR	9122509	Symbol	space -> domain		9121829						
ANR	9122510	Symbol	CIESubst		9121829						
ANR	9122511	Symbol	* params		9121829						
ANR	9122512	Symbol	arr		9121829						
ANR	9122513	Symbol	alternatespace		9121829						
ANR	9122514	Symbol	determine_sampled_data_size		9121829						
ANR	9122515	Symbol	* func		9121829						
ANR	9122516	Symbol	gs_function_Sd_init		9121829						
ANR	9122517	Symbol	params . Size		9121829						
ANR	9122518	Symbol	total_size		9121829						
ANR	9122519	Symbol	i		9121829						
ANR	9122520	Symbol	num_components		9121829						
ANR	9122521	Symbol	& CIESubst		9121829						
ANR	9122522	Symbol	bits2bytes		9121829						
ANR	9122523	Symbol	ptr		9121829						
ANR	9122524	Symbol	gs_error_VMerror		9121829						
ANR	9122525	Symbol	gs_note_error		9121829						
ANR	9122526	Symbol	* i		9121829						
ANR	9122527	Symbol	func		9121829						
ANR	9122528	Symbol	bytes		9121829						
ANR	9122529	Symbol	space -> numcomponents		9121829						
ANR	9122530	Symbol	fptr		9121829						
ANR	9122531	Symbol	* space		9121829						
ANR	9122532	Symbol	gs_alloc_byte_array		9121829						
ANR	9122533	DeclStmt									
ANR	9122534	Decl							const op_def	const op_def [ ]	zfsample_op_defs
