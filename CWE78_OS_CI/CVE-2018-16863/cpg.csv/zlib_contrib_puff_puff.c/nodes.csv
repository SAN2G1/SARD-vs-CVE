command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11208964	File	data/converged/CVE-2018-16863_ghostpdl/zlib_contrib_puff_puff.c								
ANR	11208965	ClassDef	state	98:0:5188:5794							
ANR	11208966	DeclStmt									
ANR	11208967	Decl							unsigned char	unsigned char *	out
ANR	11208968	DeclStmt									
ANR	11208969	Decl							unsigned long	unsigned long	outlen
ANR	11208970	DeclStmt									
ANR	11208971	Decl							unsigned long	unsigned long	outcnt
ANR	11208972	DeclStmt									
ANR	11208973	Decl							const unsigned char	const unsigned char *	in
ANR	11208974	DeclStmt									
ANR	11208975	Decl							unsigned long	unsigned long	inlen
ANR	11208976	DeclStmt									
ANR	11208977	Decl							unsigned long	unsigned long	incnt
ANR	11208978	DeclStmt									
ANR	11208979	Decl							int	int	bitbuf
ANR	11208980	DeclStmt									
ANR	11208981	Decl							int	int	bitcnt
ANR	11208982	DeclStmt									
ANR	11208983	Decl							jmp_buf	jmp_buf	env
ANR	11208984	Function	bits	126:0:6230:6877							
ANR	11208985	FunctionDef	"bits (struct state * s , int need)"		11208984	0					
ANR	11208986	CompoundStatement		127:0:6272:6877	11208984	0					
ANR	11208987	IdentifierDeclStatement	long val ;	128:4:6278:6286	11208984	0	True				
ANR	11208988	IdentifierDecl	val		11208984	0					
ANR	11208989	IdentifierDeclType	long		11208984	0					
ANR	11208990	Identifier	val		11208984	1					
ANR	11208991	ExpressionStatement	val = s -> bitbuf	131:4:6392:6407	11208984	1	True				
ANR	11208992	AssignmentExpression	val = s -> bitbuf		11208984	0		=			
ANR	11208993	Identifier	val		11208984	0					
ANR	11208994	PtrMemberAccess	s -> bitbuf		11208984	1					
ANR	11208995	Identifier	s		11208984	0					
ANR	11208996	Identifier	bitbuf		11208984	1					
ANR	11208997	WhileStatement	while ( s -> bitcnt < need )		11208984	2					
ANR	11208998	Condition	s -> bitcnt < need	132:11:6420:6435	11208984	0	True				
ANR	11208999	RelationalExpression	s -> bitcnt < need		11208984	0		<			
ANR	11209000	PtrMemberAccess	s -> bitcnt		11208984	0					
ANR	11209001	Identifier	s		11208984	0					
ANR	11209002	Identifier	bitcnt		11208984	1					
ANR	11209003	Identifier	need		11208984	1					
ANR	11209004	CompoundStatement		6:29:165:165	11208984	1					
ANR	11209005	IfStatement	if ( s -> incnt == s -> inlen )		11208984	0					
ANR	11209006	Condition	s -> incnt == s -> inlen	133:12:6452:6471	11208984	0	True				
ANR	11209007	EqualityExpression	s -> incnt == s -> inlen		11208984	0		==			
ANR	11209008	PtrMemberAccess	s -> incnt		11208984	0					
ANR	11209009	Identifier	s		11208984	0					
ANR	11209010	Identifier	incnt		11208984	1					
ANR	11209011	PtrMemberAccess	s -> inlen		11208984	1					
ANR	11209012	Identifier	s		11208984	0					
ANR	11209013	Identifier	inlen		11208984	1					
ANR	11209014	ExpressionStatement	"longjmp ( s -> env , 1 )"	134:12:6486:6504	11208984	1	True				
ANR	11209015	CallExpression	"longjmp ( s -> env , 1 )"		11208984	0					
ANR	11209016	Callee	longjmp		11208984	0					
ANR	11209017	Identifier	longjmp		11208984	0					
ANR	11209018	ArgumentList	s -> env		11208984	1					
ANR	11209019	Argument	s -> env		11208984	0					
ANR	11209020	PtrMemberAccess	s -> env		11208984	0					
ANR	11209021	Identifier	s		11208984	0					
ANR	11209022	Identifier	env		11208984	1					
ANR	11209023	Argument	1		11208984	1					
ANR	11209024	PrimaryExpression	1		11208984	0					
ANR	11209025	ExpressionStatement	val |= ( long ) ( s -> in [ s -> incnt ++ ] ) << s -> bitcnt	135:8:6541:6586	11208984	1	True				
ANR	11209026	AssignmentExpression	val |= ( long ) ( s -> in [ s -> incnt ++ ] ) << s -> bitcnt		11208984	0		|=			
ANR	11209027	Identifier	val		11208984	0					
ANR	11209028	ShiftExpression	( long ) ( s -> in [ s -> incnt ++ ] ) << s -> bitcnt		11208984	1		<<			
ANR	11209029	CastExpression	( long ) ( s -> in [ s -> incnt ++ ] )		11208984	0					
ANR	11209030	CastTarget	long		11208984	0					
ANR	11209031	ArrayIndexing	s -> in [ s -> incnt ++ ]		11208984	1					
ANR	11209032	PtrMemberAccess	s -> in		11208984	0					
ANR	11209033	Identifier	s		11208984	0					
ANR	11209034	Identifier	in		11208984	1					
ANR	11209035	PostIncDecOperationExpression	s -> incnt ++		11208984	1					
ANR	11209036	PtrMemberAccess	s -> incnt		11208984	0					
ANR	11209037	Identifier	s		11208984	0					
ANR	11209038	Identifier	incnt		11208984	1					
ANR	11209039	IncDec	++		11208984	1					
ANR	11209040	PtrMemberAccess	s -> bitcnt		11208984	1					
ANR	11209041	Identifier	s		11208984	0					
ANR	11209042	Identifier	bitcnt		11208984	1					
ANR	11209043	ExpressionStatement	s -> bitcnt += 8	136:8:6619:6633	11208984	2	True				
ANR	11209044	AssignmentExpression	s -> bitcnt += 8		11208984	0		+=			
ANR	11209045	PtrMemberAccess	s -> bitcnt		11208984	0					
ANR	11209046	Identifier	s		11208984	0					
ANR	11209047	Identifier	bitcnt		11208984	1					
ANR	11209048	PrimaryExpression	8		11208984	1					
ANR	11209049	ExpressionStatement	s -> bitbuf = ( int ) ( val >> need )	140:4:6721:6751	11208984	3	True				
ANR	11209050	AssignmentExpression	s -> bitbuf = ( int ) ( val >> need )		11208984	0		=			
ANR	11209051	PtrMemberAccess	s -> bitbuf		11208984	0					
ANR	11209052	Identifier	s		11208984	0					
ANR	11209053	Identifier	bitbuf		11208984	1					
ANR	11209054	CastExpression	( int ) ( val >> need )		11208984	1					
ANR	11209055	CastTarget	int		11208984	0					
ANR	11209056	ShiftExpression	val >> need		11208984	1		>>			
ANR	11209057	Identifier	val		11208984	0					
ANR	11209058	Identifier	need		11208984	1					
ANR	11209059	ExpressionStatement	s -> bitcnt -= need	141:4:6757:6774	11208984	4	True				
ANR	11209060	AssignmentExpression	s -> bitcnt -= need		11208984	0		-=			
ANR	11209061	PtrMemberAccess	s -> bitcnt		11208984	0					
ANR	11209062	Identifier	s		11208984	0					
ANR	11209063	Identifier	bitcnt		11208984	1					
ANR	11209064	Identifier	need		11208984	1					
ANR	11209065	ReturnStatement	return ( int ) ( val & ( ( 1L << need ) - 1 ) ) ;	144:4:6837:6875	11208984	5	True				
ANR	11209066	CastExpression	( int ) ( val & ( ( 1L << need ) - 1 ) )		11208984	0					
ANR	11209067	CastTarget	int		11208984	0					
ANR	11209068	BitAndExpression	val & ( ( 1L << need ) - 1 )		11208984	1		&			
ANR	11209069	Identifier	val		11208984	0					
ANR	11209070	AdditiveExpression	( 1L << need ) - 1		11208984	1		-			
ANR	11209071	ShiftExpression	1L << need		11208984	0		<<			
ANR	11209072	PrimaryExpression	1L		11208984	0					
ANR	11209073	Identifier	need		11208984	1					
ANR	11209074	PrimaryExpression	1		11208984	1					
ANR	11209075	ReturnType	local int		11208984	1					
ANR	11209076	Identifier	bits		11208984	2					
ANR	11209077	ParameterList	"struct state * s , int need"		11208984	3					
ANR	11209078	Parameter	struct state * s	126:15:6245:6259	11208984	0	True				
ANR	11209079	ParameterType	struct state *		11208984	0					
ANR	11209080	Identifier	s		11208984	1					
ANR	11209081	Parameter	int need	126:32:6262:6269	11208984	1	True				
ANR	11209082	ParameterType	int		11208984	0					
ANR	11209083	Identifier	need		11208984	1					
ANR	11209084	CFGEntryNode	ENTRY		11208984		True				
ANR	11209085	CFGExitNode	EXIT		11208984		True				
ANR	11209086	Symbol	val		11208984						
ANR	11209087	Symbol	s		11208984						
ANR	11209088	Symbol	s -> bitbuf		11208984						
ANR	11209089	Symbol	need		11208984						
ANR	11209090	Symbol	s -> bitcnt		11208984						
ANR	11209091	Symbol	s -> inlen		11208984						
ANR	11209092	Symbol	* * s		11208984						
ANR	11209093	Symbol	s -> env		11208984						
ANR	11209094	Symbol	s -> in		11208984						
ANR	11209095	Symbol	s -> incnt		11208984						
ANR	11209096	Symbol	* s		11208984						
ANR	11209097	Symbol	* s -> in		11208984						
ANR	11209098	Function	stored	164:0:7588:8748							
ANR	11209099	FunctionDef	stored (struct state * s)		11209098	0					
ANR	11209100	CompoundStatement		165:0:7622:8748	11209098	0					
ANR	11209101	IdentifierDeclStatement	unsigned len ;	166:4:7628:7640	11209098	0	True				
ANR	11209102	IdentifierDecl	len		11209098	0					
ANR	11209103	IdentifierDeclType	unsigned		11209098	0					
ANR	11209104	Identifier	len		11209098	1					
ANR	11209105	ExpressionStatement	s -> bitbuf = 0	169:4:7756:7769	11209098	1	True				
ANR	11209106	AssignmentExpression	s -> bitbuf = 0		11209098	0		=			
ANR	11209107	PtrMemberAccess	s -> bitbuf		11209098	0					
ANR	11209108	Identifier	s		11209098	0					
ANR	11209109	Identifier	bitbuf		11209098	1					
ANR	11209110	PrimaryExpression	0		11209098	1					
ANR	11209111	ExpressionStatement	s -> bitcnt = 0	170:4:7775:7788	11209098	2	True				
ANR	11209112	AssignmentExpression	s -> bitcnt = 0		11209098	0		=			
ANR	11209113	PtrMemberAccess	s -> bitcnt		11209098	0					
ANR	11209114	Identifier	s		11209098	0					
ANR	11209115	Identifier	bitcnt		11209098	1					
ANR	11209116	PrimaryExpression	0		11209098	1					
ANR	11209117	IfStatement	if ( s -> incnt + 4 > s -> inlen )		11209098	3					
ANR	11209118	Condition	s -> incnt + 4 > s -> inlen	173:8:7859:7881	11209098	0	True				
ANR	11209119	RelationalExpression	s -> incnt + 4 > s -> inlen		11209098	0		>			
ANR	11209120	AdditiveExpression	s -> incnt + 4		11209098	0		+			
ANR	11209121	PtrMemberAccess	s -> incnt		11209098	0					
ANR	11209122	Identifier	s		11209098	0					
ANR	11209123	Identifier	incnt		11209098	1					
ANR	11209124	PrimaryExpression	4		11209098	1					
ANR	11209125	PtrMemberAccess	s -> inlen		11209098	1					
ANR	11209126	Identifier	s		11209098	0					
ANR	11209127	Identifier	inlen		11209098	1					
ANR	11209128	ReturnStatement	return 2 ;	174:8:7892:7900	11209098	1	True				
ANR	11209129	PrimaryExpression	2		11209098	0					
ANR	11209130	ExpressionStatement	len = s -> in [ s -> incnt ++ ]	175:4:7959:7982	11209098	4	True				
ANR	11209131	AssignmentExpression	len = s -> in [ s -> incnt ++ ]		11209098	0		=			
ANR	11209132	Identifier	len		11209098	0					
ANR	11209133	ArrayIndexing	s -> in [ s -> incnt ++ ]		11209098	1					
ANR	11209134	PtrMemberAccess	s -> in		11209098	0					
ANR	11209135	Identifier	s		11209098	0					
ANR	11209136	Identifier	in		11209098	1					
ANR	11209137	PostIncDecOperationExpression	s -> incnt ++		11209098	1					
ANR	11209138	PtrMemberAccess	s -> incnt		11209098	0					
ANR	11209139	Identifier	s		11209098	0					
ANR	11209140	Identifier	incnt		11209098	1					
ANR	11209141	IncDec	++		11209098	1					
ANR	11209142	ExpressionStatement	len |= s -> in [ s -> incnt ++ ] << 8	176:4:7988:8017	11209098	5	True				
ANR	11209143	AssignmentExpression	len |= s -> in [ s -> incnt ++ ] << 8		11209098	0		|=			
ANR	11209144	Identifier	len		11209098	0					
ANR	11209145	ShiftExpression	s -> in [ s -> incnt ++ ] << 8		11209098	1		<<			
ANR	11209146	ArrayIndexing	s -> in [ s -> incnt ++ ]		11209098	0					
ANR	11209147	PtrMemberAccess	s -> in		11209098	0					
ANR	11209148	Identifier	s		11209098	0					
ANR	11209149	Identifier	in		11209098	1					
ANR	11209150	PostIncDecOperationExpression	s -> incnt ++		11209098	1					
ANR	11209151	PtrMemberAccess	s -> incnt		11209098	0					
ANR	11209152	Identifier	s		11209098	0					
ANR	11209153	Identifier	incnt		11209098	1					
ANR	11209154	IncDec	++		11209098	1					
ANR	11209155	PrimaryExpression	8		11209098	1					
ANR	11209156	IfStatement	if ( s -> in [ s -> incnt ++ ] != ( ~len & 0xff ) || s -> in [ s -> incnt ++ ] != ( ( ~len >> 8 ) & 0xff ) )		11209098	6					
ANR	11209157	Condition	s -> in [ s -> incnt ++ ] != ( ~len & 0xff ) || s -> in [ s -> incnt ++ ] != ( ( ~len >> 8 ) & 0xff )	177:8:8027:8113	11209098	0	True				
ANR	11209158	OrExpression	s -> in [ s -> incnt ++ ] != ( ~len & 0xff ) || s -> in [ s -> incnt ++ ] != ( ( ~len >> 8 ) & 0xff )		11209098	0		||			
ANR	11209159	EqualityExpression	s -> in [ s -> incnt ++ ] != ( ~len & 0xff )		11209098	0		!=			
ANR	11209160	ArrayIndexing	s -> in [ s -> incnt ++ ]		11209098	0					
ANR	11209161	PtrMemberAccess	s -> in		11209098	0					
ANR	11209162	Identifier	s		11209098	0					
ANR	11209163	Identifier	in		11209098	1					
ANR	11209164	PostIncDecOperationExpression	s -> incnt ++		11209098	1					
ANR	11209165	PtrMemberAccess	s -> incnt		11209098	0					
ANR	11209166	Identifier	s		11209098	0					
ANR	11209167	Identifier	incnt		11209098	1					
ANR	11209168	IncDec	++		11209098	1					
ANR	11209169	BitAndExpression	~len & 0xff		11209098	1		&			
ANR	11209170	Identifier	~len		11209098	0					
ANR	11209171	PrimaryExpression	0xff		11209098	1					
ANR	11209172	EqualityExpression	s -> in [ s -> incnt ++ ] != ( ( ~len >> 8 ) & 0xff )		11209098	1		!=			
ANR	11209173	ArrayIndexing	s -> in [ s -> incnt ++ ]		11209098	0					
ANR	11209174	PtrMemberAccess	s -> in		11209098	0					
ANR	11209175	Identifier	s		11209098	0					
ANR	11209176	Identifier	in		11209098	1					
ANR	11209177	PostIncDecOperationExpression	s -> incnt ++		11209098	1					
ANR	11209178	PtrMemberAccess	s -> incnt		11209098	0					
ANR	11209179	Identifier	s		11209098	0					
ANR	11209180	Identifier	incnt		11209098	1					
ANR	11209181	IncDec	++		11209098	1					
ANR	11209182	BitAndExpression	( ~len >> 8 ) & 0xff		11209098	1		&			
ANR	11209183	ShiftExpression	~len >> 8		11209098	0		>>			
ANR	11209184	Identifier	~len		11209098	0					
ANR	11209185	PrimaryExpression	8		11209098	1					
ANR	11209186	PrimaryExpression	0xff		11209098	1					
ANR	11209187	ReturnStatement	return - 2 ;	179:8:8124:8133	11209098	1	True				
ANR	11209188	UnaryOperationExpression	- 2		11209098	0					
ANR	11209189	UnaryOperator	-		11209098	0					
ANR	11209190	PrimaryExpression	2		11209098	1					
ANR	11209191	IfStatement	if ( s -> incnt + len > s -> inlen )		11209098	7					
ANR	11209192	Condition	s -> incnt + len > s -> inlen	182:8:8244:8268	11209098	0	True				
ANR	11209193	RelationalExpression	s -> incnt + len > s -> inlen		11209098	0		>			
ANR	11209194	AdditiveExpression	s -> incnt + len		11209098	0		+			
ANR	11209195	PtrMemberAccess	s -> incnt		11209098	0					
ANR	11209196	Identifier	s		11209098	0					
ANR	11209197	Identifier	incnt		11209098	1					
ANR	11209198	Identifier	len		11209098	1					
ANR	11209199	PtrMemberAccess	s -> inlen		11209098	1					
ANR	11209200	Identifier	s		11209098	0					
ANR	11209201	Identifier	inlen		11209098	1					
ANR	11209202	ReturnStatement	return 2 ;	183:8:8279:8287	11209098	1	True				
ANR	11209203	PrimaryExpression	2		11209098	0					
ANR	11209204	IfStatement	if ( s -> out != NIL )		11209098	8					
ANR	11209205	Condition	s -> out != NIL	184:8:8350:8362	11209098	0	True				
ANR	11209206	EqualityExpression	s -> out != NIL		11209098	0		!=			
ANR	11209207	PtrMemberAccess	s -> out		11209098	0					
ANR	11209208	Identifier	s		11209098	0					
ANR	11209209	Identifier	out		11209098	1					
ANR	11209210	Identifier	NIL		11209098	1					
ANR	11209211	CompoundStatement		20:23:742:742	11209098	1					
ANR	11209212	IfStatement	if ( s -> outcnt + len > s -> outlen )		11209098	0					
ANR	11209213	Condition	s -> outcnt + len > s -> outlen	185:12:8379:8405	11209098	0	True				
ANR	11209214	RelationalExpression	s -> outcnt + len > s -> outlen		11209098	0		>			
ANR	11209215	AdditiveExpression	s -> outcnt + len		11209098	0		+			
ANR	11209216	PtrMemberAccess	s -> outcnt		11209098	0					
ANR	11209217	Identifier	s		11209098	0					
ANR	11209218	Identifier	outcnt		11209098	1					
ANR	11209219	Identifier	len		11209098	1					
ANR	11209220	PtrMemberAccess	s -> outlen		11209098	1					
ANR	11209221	Identifier	s		11209098	0					
ANR	11209222	Identifier	outlen		11209098	1					
ANR	11209223	ReturnStatement	return 1 ;	186:12:8420:8428	11209098	1	True				
ANR	11209224	PrimaryExpression	1		11209098	0					
ANR	11209225	WhileStatement	while ( len -- )		11209098	1					
ANR	11209226	Condition	len --	187:15:8501:8505	11209098	0	True				
ANR	11209227	PostIncDecOperationExpression	len --		11209098	0					
ANR	11209228	Identifier	len		11209098	0					
ANR	11209229	IncDec	--		11209098	1					
ANR	11209230	ExpressionStatement	s -> out [ s -> outcnt ++ ] = s -> in [ s -> incnt ++ ]	188:12:8520:8559	11209098	1	True				
ANR	11209231	AssignmentExpression	s -> out [ s -> outcnt ++ ] = s -> in [ s -> incnt ++ ]		11209098	0		=			
ANR	11209232	ArrayIndexing	s -> out [ s -> outcnt ++ ]		11209098	0					
ANR	11209233	PtrMemberAccess	s -> out		11209098	0					
ANR	11209234	Identifier	s		11209098	0					
ANR	11209235	Identifier	out		11209098	1					
ANR	11209236	PostIncDecOperationExpression	s -> outcnt ++		11209098	1					
ANR	11209237	PtrMemberAccess	s -> outcnt		11209098	0					
ANR	11209238	Identifier	s		11209098	0					
ANR	11209239	Identifier	outcnt		11209098	1					
ANR	11209240	IncDec	++		11209098	1					
ANR	11209241	ArrayIndexing	s -> in [ s -> incnt ++ ]		11209098	1					
ANR	11209242	PtrMemberAccess	s -> in		11209098	0					
ANR	11209243	Identifier	s		11209098	0					
ANR	11209244	Identifier	in		11209098	1					
ANR	11209245	PostIncDecOperationExpression	s -> incnt ++		11209098	1					
ANR	11209246	PtrMemberAccess	s -> incnt		11209098	0					
ANR	11209247	Identifier	s		11209098	0					
ANR	11209248	Identifier	incnt		11209098	1					
ANR	11209249	IncDec	++		11209098	1					
ANR	11209250	ElseStatement	else		11209098	0					
ANR	11209251	CompoundStatement		26:9:953:953	11209098	0					
ANR	11209252	ExpressionStatement	s -> outcnt += len	191:8:8643:8659	11209098	0	True				
ANR	11209253	AssignmentExpression	s -> outcnt += len		11209098	0		+=			
ANR	11209254	PtrMemberAccess	s -> outcnt		11209098	0					
ANR	11209255	Identifier	s		11209098	0					
ANR	11209256	Identifier	outcnt		11209098	1					
ANR	11209257	Identifier	len		11209098	1					
ANR	11209258	ExpressionStatement	s -> incnt += len	192:8:8669:8684	11209098	1	True				
ANR	11209259	AssignmentExpression	s -> incnt += len		11209098	0		+=			
ANR	11209260	PtrMemberAccess	s -> incnt		11209098	0					
ANR	11209261	Identifier	s		11209098	0					
ANR	11209262	Identifier	incnt		11209098	1					
ANR	11209263	Identifier	len		11209098	1					
ANR	11209264	ReturnStatement	return 0 ;	196:4:8738:8746	11209098	9	True				
ANR	11209265	PrimaryExpression	0		11209098	0					
ANR	11209266	ReturnType	local int		11209098	1					
ANR	11209267	Identifier	stored		11209098	2					
ANR	11209268	ParameterList	struct state * s		11209098	3					
ANR	11209269	Parameter	struct state * s	164:17:7605:7619	11209098	0	True				
ANR	11209270	ParameterType	struct state *		11209098	0					
ANR	11209271	Identifier	s		11209098	1					
ANR	11209272	CFGEntryNode	ENTRY		11209098		True				
ANR	11209273	CFGExitNode	EXIT		11209098		True				
ANR	11209274	Symbol	s -> bitcnt		11209098						
ANR	11209275	Symbol	~len		11209098						
ANR	11209276	Symbol	s -> outcnt		11209098						
ANR	11209277	Symbol	* s -> out		11209098						
ANR	11209278	Symbol	* s -> in		11209098						
ANR	11209279	Symbol	NIL		11209098						
ANR	11209280	Symbol	s		11209098						
ANR	11209281	Symbol	s -> bitbuf		11209098						
ANR	11209282	Symbol	len		11209098						
ANR	11209283	Symbol	s -> inlen		11209098						
ANR	11209284	Symbol	* * s		11209098						
ANR	11209285	Symbol	s -> in		11209098						
ANR	11209286	Symbol	s -> outlen		11209098						
ANR	11209287	Symbol	s -> incnt		11209098						
ANR	11209288	Symbol	* s		11209098						
ANR	11209289	Symbol	s -> out		11209098						
ANR	11209290	ClassDef	huffman	206:0:9102:9240							
ANR	11209291	DeclStmt									
ANR	11209292	Decl							short	short *	count
ANR	11209293	DeclStmt									
ANR	11209294	Decl							short	short *	symbol
ANR	11209295	Function	decode	235:0:10480:11351							
ANR	11209296	FunctionDef	"decode (struct state * s , const struct huffman * h)"		11209295	0					
ANR	11209297	CompoundStatement		236:0:10539:11351	11209295	0					
ANR	11209298	IdentifierDeclStatement	int len ;	237:4:10545:10552	11209295	0	True				
ANR	11209299	IdentifierDecl	len		11209295	0					
ANR	11209300	IdentifierDeclType	int		11209295	0					
ANR	11209301	Identifier	len		11209295	1					
ANR	11209302	IdentifierDeclStatement	int code ;	238:4:10606:10614	11209295	1	True				
ANR	11209303	IdentifierDecl	code		11209295	0					
ANR	11209304	IdentifierDeclType	int		11209295	0					
ANR	11209305	Identifier	code		11209295	1					
ANR	11209306	IdentifierDeclStatement	int first ;	239:4:10659:10668	11209295	2	True				
ANR	11209307	IdentifierDecl	first		11209295	0					
ANR	11209308	IdentifierDeclType	int		11209295	0					
ANR	11209309	Identifier	first		11209295	1					
ANR	11209310	IdentifierDeclStatement	int count ;	240:4:10714:10723	11209295	3	True				
ANR	11209311	IdentifierDecl	count		11209295	0					
ANR	11209312	IdentifierDeclType	int		11209295	0					
ANR	11209313	Identifier	count		11209295	1					
ANR	11209314	IdentifierDeclStatement	int index ;	241:4:10774:10783	11209295	4	True				
ANR	11209315	IdentifierDecl	index		11209295	0					
ANR	11209316	IdentifierDeclType	int		11209295	0					
ANR	11209317	Identifier	index		11209295	1					
ANR	11209318	ExpressionStatement	code = first = index = 0	243:4:10855:10879	11209295	5	True				
ANR	11209319	AssignmentExpression	code = first = index = 0		11209295	0		=			
ANR	11209320	Identifier	code		11209295	0					
ANR	11209321	AssignmentExpression	first = index = 0		11209295	1		=			
ANR	11209322	Identifier	first		11209295	0					
ANR	11209323	AssignmentExpression	index = 0		11209295	1		=			
ANR	11209324	Identifier	index		11209295	0					
ANR	11209325	PrimaryExpression	0		11209295	1					
ANR	11209326	ForStatement	for ( len = 1 ; len <= MAXBITS ; len ++ )		11209295	6					
ANR	11209327	ForInit	len = 1 ;	244:9:10890:10897	11209295	0	True				
ANR	11209328	AssignmentExpression	len = 1		11209295	0		=			
ANR	11209329	Identifier	len		11209295	0					
ANR	11209330	PrimaryExpression	1		11209295	1					
ANR	11209331	Condition	len <= MAXBITS	244:18:10899:10912	11209295	1	True				
ANR	11209332	RelationalExpression	len <= MAXBITS		11209295	0		<=			
ANR	11209333	Identifier	len		11209295	0					
ANR	11209334	Identifier	MAXBITS		11209295	1					
ANR	11209335	PostIncDecOperationExpression	len ++	244:34:10915:10919	11209295	2	True				
ANR	11209336	Identifier	len		11209295	0					
ANR	11209337	IncDec	++		11209295	1					
ANR	11209338	CompoundStatement		9:41:382:382	11209295	3					
ANR	11209339	ExpressionStatement	"code |= bits ( s , 1 )"	245:8:10932:10950	11209295	0	True				
ANR	11209340	AssignmentExpression	"code |= bits ( s , 1 )"		11209295	0		|=			
ANR	11209341	Identifier	code		11209295	0					
ANR	11209342	CallExpression	"bits ( s , 1 )"		11209295	1					
ANR	11209343	Callee	bits		11209295	0					
ANR	11209344	Identifier	bits		11209295	0					
ANR	11209345	ArgumentList	s		11209295	1					
ANR	11209346	Argument	s		11209295	0					
ANR	11209347	Identifier	s		11209295	0					
ANR	11209348	Argument	1		11209295	1					
ANR	11209349	PrimaryExpression	1		11209295	0					
ANR	11209350	ExpressionStatement	count = h -> count [ len ]	246:8:10991:11012	11209295	1	True				
ANR	11209351	AssignmentExpression	count = h -> count [ len ]		11209295	0		=			
ANR	11209352	Identifier	count		11209295	0					
ANR	11209353	ArrayIndexing	h -> count [ len ]		11209295	1					
ANR	11209354	PtrMemberAccess	h -> count		11209295	0					
ANR	11209355	Identifier	h		11209295	0					
ANR	11209356	Identifier	count		11209295	1					
ANR	11209357	Identifier	len		11209295	1					
ANR	11209358	IfStatement	if ( code - count < first )		11209295	2					
ANR	11209359	Condition	code - count < first	247:12:11026:11045	11209295	0	True				
ANR	11209360	RelationalExpression	code - count < first		11209295	0		<			
ANR	11209361	AdditiveExpression	code - count		11209295	0		-			
ANR	11209362	Identifier	code		11209295	0					
ANR	11209363	Identifier	count		11209295	1					
ANR	11209364	Identifier	first		11209295	1					
ANR	11209365	ReturnStatement	return h -> symbol [ index + ( code - first ) ] ;	248:12:11101:11141	11209295	1	True				
ANR	11209366	ArrayIndexing	h -> symbol [ index + ( code - first ) ]		11209295	0					
ANR	11209367	PtrMemberAccess	h -> symbol		11209295	0					
ANR	11209368	Identifier	h		11209295	0					
ANR	11209369	Identifier	symbol		11209295	1					
ANR	11209370	AdditiveExpression	index + ( code - first )		11209295	1		+			
ANR	11209371	Identifier	index		11209295	0					
ANR	11209372	AdditiveExpression	code - first		11209295	1		-			
ANR	11209373	Identifier	code		11209295	0					
ANR	11209374	Identifier	first		11209295	1					
ANR	11209375	ExpressionStatement	index += count	249:8:11151:11165	11209295	3	True				
ANR	11209376	AssignmentExpression	index += count		11209295	0		+=			
ANR	11209377	Identifier	index		11209295	0					
ANR	11209378	Identifier	count		11209295	1					
ANR	11209379	ExpressionStatement	first += count	250:8:11225:11239	11209295	4	True				
ANR	11209380	AssignmentExpression	first += count		11209295	0		+=			
ANR	11209381	Identifier	first		11209295	0					
ANR	11209382	Identifier	count		11209295	1					
ANR	11209383	ExpressionStatement	first <<= 1	251:8:11249:11260	11209295	5	True				
ANR	11209384	AssignmentExpression	first <<= 1		11209295	0		<<=			
ANR	11209385	Identifier	first		11209295	0					
ANR	11209386	PrimaryExpression	1		11209295	1					
ANR	11209387	ExpressionStatement	code <<= 1	252:8:11270:11280	11209295	6	True				
ANR	11209388	AssignmentExpression	code <<= 1		11209295	0		<<=			
ANR	11209389	Identifier	code		11209295	0					
ANR	11209390	PrimaryExpression	1		11209295	1					
ANR	11209391	ReturnStatement	return - 10 ;	254:4:11292:11302	11209295	7	True				
ANR	11209392	UnaryOperationExpression	- 10		11209295	0					
ANR	11209393	UnaryOperator	-		11209295	0					
ANR	11209394	PrimaryExpression	10		11209295	1					
ANR	11209395	ReturnType	local int		11209295	1					
ANR	11209396	Identifier	decode		11209295	2					
ANR	11209397	ParameterList	"struct state * s , const struct huffman * h"		11209295	3					
ANR	11209398	Parameter	struct state * s	235:17:10497:10511	11209295	0	True				
ANR	11209399	ParameterType	struct state *		11209295	0					
ANR	11209400	Identifier	s		11209295	1					
ANR	11209401	Parameter	const struct huffman * h	235:34:10514:10536	11209295	1	True				
ANR	11209402	ParameterType	const struct huffman *		11209295	0					
ANR	11209403	Identifier	h		11209295	1					
ANR	11209404	CFGEntryNode	ENTRY		11209295		True				
ANR	11209405	CFGExitNode	EXIT		11209295		True				
ANR	11209406	Symbol	* h -> symbol		11209295						
ANR	11209407	Symbol	code		11209295						
ANR	11209408	Symbol	* * h		11209295						
ANR	11209409	Symbol	h -> count		11209295						
ANR	11209410	Symbol	* index		11209295						
ANR	11209411	Symbol	h -> symbol		11209295						
ANR	11209412	Symbol	h		11209295						
ANR	11209413	Symbol	count		11209295						
ANR	11209414	Symbol	MAXBITS		11209295						
ANR	11209415	Symbol	bits		11209295						
ANR	11209416	Symbol	index		11209295						
ANR	11209417	Symbol	* h		11209295						
ANR	11209418	Symbol	s		11209295						
ANR	11209419	Symbol	len		11209295						
ANR	11209420	Symbol	* first		11209295						
ANR	11209421	Symbol	* h -> count		11209295						
ANR	11209422	Symbol	first		11209295						
ANR	11209423	Symbol	* code		11209295						
ANR	11209424	Symbol	* len		11209295						
ANR	11209425	Function	decode	263:0:11562:13072							
ANR	11209426	FunctionDef	"decode (struct state * s , const struct huffman * h)"		11209425	0					
ANR	11209427	CompoundStatement		264:0:11621:13072	11209425	0					
ANR	11209428	IdentifierDeclStatement	int len ;	265:4:11627:11634	11209425	0	True				
ANR	11209429	IdentifierDecl	len		11209425	0					
ANR	11209430	IdentifierDeclType	int		11209425	0					
ANR	11209431	Identifier	len		11209425	1					
ANR	11209432	IdentifierDeclStatement	int code ;	266:4:11688:11696	11209425	1	True				
ANR	11209433	IdentifierDecl	code		11209425	0					
ANR	11209434	IdentifierDeclType	int		11209425	0					
ANR	11209435	Identifier	code		11209425	1					
ANR	11209436	IdentifierDeclStatement	int first ;	267:4:11741:11750	11209425	2	True				
ANR	11209437	IdentifierDecl	first		11209425	0					
ANR	11209438	IdentifierDeclType	int		11209425	0					
ANR	11209439	Identifier	first		11209425	1					
ANR	11209440	IdentifierDeclStatement	int count ;	268:4:11796:11805	11209425	3	True				
ANR	11209441	IdentifierDecl	count		11209425	0					
ANR	11209442	IdentifierDeclType	int		11209425	0					
ANR	11209443	Identifier	count		11209425	1					
ANR	11209444	IdentifierDeclStatement	int index ;	269:4:11856:11865	11209425	4	True				
ANR	11209445	IdentifierDecl	index		11209425	0					
ANR	11209446	IdentifierDeclType	int		11209425	0					
ANR	11209447	Identifier	index		11209425	1					
ANR	11209448	IdentifierDeclStatement	int bitbuf ;	270:4:11936:11946	11209425	5	True				
ANR	11209449	IdentifierDecl	bitbuf		11209425	0					
ANR	11209450	IdentifierDeclType	int		11209425	0					
ANR	11209451	Identifier	bitbuf		11209425	1					
ANR	11209452	IdentifierDeclStatement	int left ;	271:4:11983:11991	11209425	6	True				
ANR	11209453	IdentifierDecl	left		11209425	0					
ANR	11209454	IdentifierDeclType	int		11209425	0					
ANR	11209455	Identifier	left		11209425	1					
ANR	11209456	IdentifierDeclStatement	short * next ;	272:4:12050:12061	11209425	7	True				
ANR	11209457	IdentifierDecl	* next		11209425	0					
ANR	11209458	IdentifierDeclType	short *		11209425	0					
ANR	11209459	Identifier	next		11209425	1					
ANR	11209460	ExpressionStatement	bitbuf = s -> bitbuf	274:4:12102:12120	11209425	8	True				
ANR	11209461	AssignmentExpression	bitbuf = s -> bitbuf		11209425	0		=			
ANR	11209462	Identifier	bitbuf		11209425	0					
ANR	11209463	PtrMemberAccess	s -> bitbuf		11209425	1					
ANR	11209464	Identifier	s		11209425	0					
ANR	11209465	Identifier	bitbuf		11209425	1					
ANR	11209466	ExpressionStatement	left = s -> bitcnt	275:4:12126:12142	11209425	9	True				
ANR	11209467	AssignmentExpression	left = s -> bitcnt		11209425	0		=			
ANR	11209468	Identifier	left		11209425	0					
ANR	11209469	PtrMemberAccess	s -> bitcnt		11209425	1					
ANR	11209470	Identifier	s		11209425	0					
ANR	11209471	Identifier	bitcnt		11209425	1					
ANR	11209472	ExpressionStatement	code = first = index = 0	276:4:12148:12172	11209425	10	True				
ANR	11209473	AssignmentExpression	code = first = index = 0		11209425	0		=			
ANR	11209474	Identifier	code		11209425	0					
ANR	11209475	AssignmentExpression	first = index = 0		11209425	1		=			
ANR	11209476	Identifier	first		11209425	0					
ANR	11209477	AssignmentExpression	index = 0		11209425	1		=			
ANR	11209478	Identifier	index		11209425	0					
ANR	11209479	PrimaryExpression	0		11209425	1					
ANR	11209480	ExpressionStatement	len = 1	277:4:12178:12185	11209425	11	True				
ANR	11209481	AssignmentExpression	len = 1		11209425	0		=			
ANR	11209482	Identifier	len		11209425	0					
ANR	11209483	PrimaryExpression	1		11209425	1					
ANR	11209484	ExpressionStatement	next = h -> count + 1	278:4:12191:12210	11209425	12	True				
ANR	11209485	AssignmentExpression	next = h -> count + 1		11209425	0		=			
ANR	11209486	Identifier	next		11209425	0					
ANR	11209487	AdditiveExpression	h -> count + 1		11209425	1		+			
ANR	11209488	PtrMemberAccess	h -> count		11209425	0					
ANR	11209489	Identifier	h		11209425	0					
ANR	11209490	Identifier	count		11209425	1					
ANR	11209491	PrimaryExpression	1		11209425	1					
ANR	11209492	WhileStatement	while ( 1 )		11209425	13					
ANR	11209493	Condition	1	279:11:12223:12223	11209425	0	True				
ANR	11209494	PrimaryExpression	1		11209425	0					
ANR	11209495	CompoundStatement		16:14:604:604	11209425	1					
ANR	11209496	WhileStatement	while ( left -- )		11209425	0					
ANR	11209497	Condition	left --	280:15:12243:12248	11209425	0	True				
ANR	11209498	PostIncDecOperationExpression	left --		11209425	0					
ANR	11209499	Identifier	left		11209425	0					
ANR	11209500	IncDec	--		11209425	1					
ANR	11209501	CompoundStatement		17:23:629:629	11209425	1					
ANR	11209502	ExpressionStatement	code |= bitbuf & 1	281:12:12265:12283	11209425	0	True				
ANR	11209503	AssignmentExpression	code |= bitbuf & 1		11209425	0		|=			
ANR	11209504	Identifier	code		11209425	0					
ANR	11209505	BitAndExpression	bitbuf & 1		11209425	1		&			
ANR	11209506	Identifier	bitbuf		11209425	0					
ANR	11209507	PrimaryExpression	1		11209425	1					
ANR	11209508	ExpressionStatement	bitbuf >>= 1	282:12:12297:12309	11209425	1	True				
ANR	11209509	AssignmentExpression	bitbuf >>= 1		11209425	0		>>=			
ANR	11209510	Identifier	bitbuf		11209425	0					
ANR	11209511	PrimaryExpression	1		11209425	1					
ANR	11209512	ExpressionStatement	count = * next ++	283:12:12323:12338	11209425	2	True				
ANR	11209513	AssignmentExpression	count = * next ++		11209425	0		=			
ANR	11209514	Identifier	count		11209425	0					
ANR	11209515	UnaryOperationExpression	* next ++		11209425	1					
ANR	11209516	UnaryOperator	*		11209425	0					
ANR	11209517	PostIncDecOperationExpression	next ++		11209425	1					
ANR	11209518	Identifier	next		11209425	0					
ANR	11209519	IncDec	++		11209425	1					
ANR	11209520	IfStatement	if ( code - count < first )		11209425	3					
ANR	11209521	Condition	code - count < first	284:16:12356:12375	11209425	0	True				
ANR	11209522	RelationalExpression	code - count < first		11209425	0		<			
ANR	11209523	AdditiveExpression	code - count		11209425	0		-			
ANR	11209524	Identifier	code		11209425	0					
ANR	11209525	Identifier	count		11209425	1					
ANR	11209526	Identifier	first		11209425	1					
ANR	11209527	CompoundStatement		21:38:756:756	11209425	1					
ANR	11209528	ExpressionStatement	s -> bitbuf = bitbuf	285:16:12431:12449	11209425	0	True				
ANR	11209529	AssignmentExpression	s -> bitbuf = bitbuf		11209425	0		=			
ANR	11209530	PtrMemberAccess	s -> bitbuf		11209425	0					
ANR	11209531	Identifier	s		11209425	0					
ANR	11209532	Identifier	bitbuf		11209425	1					
ANR	11209533	Identifier	bitbuf		11209425	1					
ANR	11209534	ExpressionStatement	s -> bitcnt = ( s -> bitcnt - len ) & 7	286:16:12467:12500	11209425	1	True				
ANR	11209535	AssignmentExpression	s -> bitcnt = ( s -> bitcnt - len ) & 7		11209425	0		=			
ANR	11209536	PtrMemberAccess	s -> bitcnt		11209425	0					
ANR	11209537	Identifier	s		11209425	0					
ANR	11209538	Identifier	bitcnt		11209425	1					
ANR	11209539	BitAndExpression	( s -> bitcnt - len ) & 7		11209425	1		&			
ANR	11209540	AdditiveExpression	s -> bitcnt - len		11209425	0		-			
ANR	11209541	PtrMemberAccess	s -> bitcnt		11209425	0					
ANR	11209542	Identifier	s		11209425	0					
ANR	11209543	Identifier	bitcnt		11209425	1					
ANR	11209544	Identifier	len		11209425	1					
ANR	11209545	PrimaryExpression	7		11209425	1					
ANR	11209546	ReturnStatement	return h -> symbol [ index + ( code - first ) ] ;	287:16:12518:12558	11209425	2	True				
ANR	11209547	ArrayIndexing	h -> symbol [ index + ( code - first ) ]		11209425	0					
ANR	11209548	PtrMemberAccess	h -> symbol		11209425	0					
ANR	11209549	Identifier	h		11209425	0					
ANR	11209550	Identifier	symbol		11209425	1					
ANR	11209551	AdditiveExpression	index + ( code - first )		11209425	1		+			
ANR	11209552	Identifier	index		11209425	0					
ANR	11209553	AdditiveExpression	code - first		11209425	1		-			
ANR	11209554	Identifier	code		11209425	0					
ANR	11209555	Identifier	first		11209425	1					
ANR	11209556	ExpressionStatement	index += count	289:12:12586:12600	11209425	4	True				
ANR	11209557	AssignmentExpression	index += count		11209425	0		+=			
ANR	11209558	Identifier	index		11209425	0					
ANR	11209559	Identifier	count		11209425	1					
ANR	11209560	ExpressionStatement	first += count	290:12:12660:12674	11209425	5	True				
ANR	11209561	AssignmentExpression	first += count		11209425	0		+=			
ANR	11209562	Identifier	first		11209425	0					
ANR	11209563	Identifier	count		11209425	1					
ANR	11209564	ExpressionStatement	first <<= 1	291:12:12688:12699	11209425	6	True				
ANR	11209565	AssignmentExpression	first <<= 1		11209425	0		<<=			
ANR	11209566	Identifier	first		11209425	0					
ANR	11209567	PrimaryExpression	1		11209425	1					
ANR	11209568	ExpressionStatement	code <<= 1	292:12:12713:12723	11209425	7	True				
ANR	11209569	AssignmentExpression	code <<= 1		11209425	0		<<=			
ANR	11209570	Identifier	code		11209425	0					
ANR	11209571	PrimaryExpression	1		11209425	1					
ANR	11209572	ExpressionStatement	len ++	293:12:12737:12742	11209425	8	True				
ANR	11209573	PostIncDecOperationExpression	len ++		11209425	0					
ANR	11209574	Identifier	len		11209425	0					
ANR	11209575	IncDec	++		11209425	1					
ANR	11209576	ExpressionStatement	left = ( MAXBITS + 1 ) - len	295:8:12762:12786	11209425	1	True				
ANR	11209577	AssignmentExpression	left = ( MAXBITS + 1 ) - len		11209425	0		=			
ANR	11209578	Identifier	left		11209425	0					
ANR	11209579	AdditiveExpression	( MAXBITS + 1 ) - len		11209425	1		-			
ANR	11209580	AdditiveExpression	MAXBITS + 1		11209425	0		+			
ANR	11209581	Identifier	MAXBITS		11209425	0					
ANR	11209582	PrimaryExpression	1		11209425	1					
ANR	11209583	Identifier	len		11209425	1					
ANR	11209584	IfStatement	if ( left == 0 )		11209425	2					
ANR	11209585	Condition	left == 0	296:12:12800:12808	11209425	0	True				
ANR	11209586	EqualityExpression	left == 0		11209425	0		==			
ANR	11209587	Identifier	left		11209425	0					
ANR	11209588	PrimaryExpression	0		11209425	1					
ANR	11209589	BreakStatement	break ;	297:12:12823:12828	11209425	1	True				
ANR	11209590	IfStatement	if ( s -> incnt == s -> inlen )		11209425	3					
ANR	11209591	Condition	s -> incnt == s -> inlen	298:12:12842:12861	11209425	0	True				
ANR	11209592	EqualityExpression	s -> incnt == s -> inlen		11209425	0		==			
ANR	11209593	PtrMemberAccess	s -> incnt		11209425	0					
ANR	11209594	Identifier	s		11209425	0					
ANR	11209595	Identifier	incnt		11209425	1					
ANR	11209596	PtrMemberAccess	s -> inlen		11209425	1					
ANR	11209597	Identifier	s		11209425	0					
ANR	11209598	Identifier	inlen		11209425	1					
ANR	11209599	ExpressionStatement	"longjmp ( s -> env , 1 )"	299:12:12876:12894	11209425	1	True				
ANR	11209600	CallExpression	"longjmp ( s -> env , 1 )"		11209425	0					
ANR	11209601	Callee	longjmp		11209425	0					
ANR	11209602	Identifier	longjmp		11209425	0					
ANR	11209603	ArgumentList	s -> env		11209425	1					
ANR	11209604	Argument	s -> env		11209425	0					
ANR	11209605	PtrMemberAccess	s -> env		11209425	0					
ANR	11209606	Identifier	s		11209425	0					
ANR	11209607	Identifier	env		11209425	1					
ANR	11209608	Argument	1		11209425	1					
ANR	11209609	PrimaryExpression	1		11209425	0					
ANR	11209610	ExpressionStatement	bitbuf = s -> in [ s -> incnt ++ ]	300:8:12931:12957	11209425	4	True				
ANR	11209611	AssignmentExpression	bitbuf = s -> in [ s -> incnt ++ ]		11209425	0		=			
ANR	11209612	Identifier	bitbuf		11209425	0					
ANR	11209613	ArrayIndexing	s -> in [ s -> incnt ++ ]		11209425	1					
ANR	11209614	PtrMemberAccess	s -> in		11209425	0					
ANR	11209615	Identifier	s		11209425	0					
ANR	11209616	Identifier	in		11209425	1					
ANR	11209617	PostIncDecOperationExpression	s -> incnt ++		11209425	1					
ANR	11209618	PtrMemberAccess	s -> incnt		11209425	0					
ANR	11209619	Identifier	s		11209425	0					
ANR	11209620	Identifier	incnt		11209425	1					
ANR	11209621	IncDec	++		11209425	1					
ANR	11209622	IfStatement	if ( left > 8 )		11209425	5					
ANR	11209623	Condition	left > 8	301:12:12971:12978	11209425	0	True				
ANR	11209624	RelationalExpression	left > 8		11209425	0		>			
ANR	11209625	Identifier	left		11209425	0					
ANR	11209626	PrimaryExpression	8		11209425	1					
ANR	11209627	ExpressionStatement	left = 8	302:12:12993:13001	11209425	1	True				
ANR	11209628	AssignmentExpression	left = 8		11209425	0		=			
ANR	11209629	Identifier	left		11209425	0					
ANR	11209630	PrimaryExpression	8		11209425	1					
ANR	11209631	ReturnStatement	return - 10 ;	304:4:13013:13023	11209425	14	True				
ANR	11209632	UnaryOperationExpression	- 10		11209425	0					
ANR	11209633	UnaryOperator	-		11209425	0					
ANR	11209634	PrimaryExpression	10		11209425	1					
ANR	11209635	ReturnType	local int		11209425	1					
ANR	11209636	Identifier	decode		11209425	2					
ANR	11209637	ParameterList	"struct state * s , const struct huffman * h"		11209425	3					
ANR	11209638	Parameter	struct state * s	263:17:11579:11593	11209425	0	True				
ANR	11209639	ParameterType	struct state *		11209425	0					
ANR	11209640	Identifier	s		11209425	1					
ANR	11209641	Parameter	const struct huffman * h	263:34:11596:11618	11209425	1	True				
ANR	11209642	ParameterType	const struct huffman *		11209425	0					
ANR	11209643	Identifier	h		11209425	1					
ANR	11209644	CFGEntryNode	ENTRY		11209425		True				
ANR	11209645	CFGExitNode	EXIT		11209425		True				
ANR	11209646	Symbol	next		11209425						
ANR	11209647	Symbol	* next ++		11209425						
ANR	11209648	Symbol	* h -> symbol		11209425						
ANR	11209649	Symbol	code		11209425						
ANR	11209650	Symbol	* index		11209425						
ANR	11209651	Symbol	s -> bitbuf		11209425						
ANR	11209652	Symbol	len		11209425						
ANR	11209653	Symbol	* first		11209425						
ANR	11209654	Symbol	s -> inlen		11209425						
ANR	11209655	Symbol	* * s		11209425						
ANR	11209656	Symbol	s -> in		11209425						
ANR	11209657	Symbol	* * h		11209425						
ANR	11209658	Symbol	s -> bitcnt		11209425						
ANR	11209659	Symbol	h -> count		11209425						
ANR	11209660	Symbol	h -> symbol		11209425						
ANR	11209661	Symbol	h		11209425						
ANR	11209662	Symbol	count		11209425						
ANR	11209663	Symbol	MAXBITS		11209425						
ANR	11209664	Symbol	index		11209425						
ANR	11209665	Symbol	* s -> in		11209425						
ANR	11209666	Symbol	* h		11209425						
ANR	11209667	Symbol	s		11209425						
ANR	11209668	Symbol	left		11209425						
ANR	11209669	Symbol	s -> env		11209425						
ANR	11209670	Symbol	s -> incnt		11209425						
ANR	11209671	Symbol	* s		11209425						
ANR	11209672	Symbol	first		11209425						
ANR	11209673	Symbol	bitbuf		11209425						
ANR	11209674	Symbol	* code		11209425						
ANR	11209675	Function	construct	340:0:14846:16624							
ANR	11209676	FunctionDef	"construct (struct huffman * h , const short * length , int n)"		11209675	0					
ANR	11209677	CompoundStatement		341:0:14913:16624	11209675	0					
ANR	11209678	IdentifierDeclStatement	int symbol ;	342:4:14919:14929	11209675	0	True				
ANR	11209679	IdentifierDecl	symbol		11209675	0					
ANR	11209680	IdentifierDeclType	int		11209675	0					
ANR	11209681	Identifier	symbol		11209675	1					
ANR	11209682	IdentifierDeclStatement	int len ;	343:4:14995:15002	11209675	1	True				
ANR	11209683	IdentifierDecl	len		11209675	0					
ANR	11209684	IdentifierDeclType	int		11209675	0					
ANR	11209685	Identifier	len		11209675	1					
ANR	11209686	IdentifierDeclStatement	int left ;	344:4:15073:15081	11209675	2	True				
ANR	11209687	IdentifierDecl	left		11209675	0					
ANR	11209688	IdentifierDeclType	int		11209675	0					
ANR	11209689	Identifier	left		11209675	1					
ANR	11209690	IdentifierDeclStatement	short offs [ MAXBITS + 1 ] ;	345:4:15151:15172	11209675	3	True				
ANR	11209691	IdentifierDecl	offs [ MAXBITS + 1 ]		11209675	0					
ANR	11209692	IdentifierDeclType	short [ MAXBITS + 1 ]		11209675	0					
ANR	11209693	Identifier	offs		11209675	1					
ANR	11209694	AdditiveExpression	MAXBITS + 1		11209675	2		+			
ANR	11209695	Identifier	MAXBITS		11209675	0					
ANR	11209696	PrimaryExpression	1		11209675	1					
ANR	11209697	ForStatement	for ( len = 0 ; len <= MAXBITS ; len ++ )		11209675	4					
ANR	11209698	ForInit	len = 0 ;	348:9:15282:15289	11209675	0	True				
ANR	11209699	AssignmentExpression	len = 0		11209675	0		=			
ANR	11209700	Identifier	len		11209675	0					
ANR	11209701	PrimaryExpression	0		11209675	1					
ANR	11209702	Condition	len <= MAXBITS	348:18:15291:15304	11209675	1	True				
ANR	11209703	RelationalExpression	len <= MAXBITS		11209675	0		<=			
ANR	11209704	Identifier	len		11209675	0					
ANR	11209705	Identifier	MAXBITS		11209675	1					
ANR	11209706	PostIncDecOperationExpression	len ++	348:34:15307:15311	11209675	2	True				
ANR	11209707	Identifier	len		11209675	0					
ANR	11209708	IncDec	++		11209675	1					
ANR	11209709	ExpressionStatement	h -> count [ len ] = 0	349:8:15322:15339	11209675	3	True				
ANR	11209710	AssignmentExpression	h -> count [ len ] = 0		11209675	0		=			
ANR	11209711	ArrayIndexing	h -> count [ len ]		11209675	0					
ANR	11209712	PtrMemberAccess	h -> count		11209675	0					
ANR	11209713	Identifier	h		11209675	0					
ANR	11209714	Identifier	count		11209675	1					
ANR	11209715	Identifier	len		11209675	1					
ANR	11209716	PrimaryExpression	0		11209675	1					
ANR	11209717	ForStatement	for ( symbol = 0 ; symbol < n ; symbol ++ )		11209675	5					
ANR	11209718	ForInit	symbol = 0 ;	350:9:15350:15360	11209675	0	True				
ANR	11209719	AssignmentExpression	symbol = 0		11209675	0		=			
ANR	11209720	Identifier	symbol		11209675	0					
ANR	11209721	PrimaryExpression	0		11209675	1					
ANR	11209722	Condition	symbol < n	350:21:15362:15371	11209675	1	True				
ANR	11209723	RelationalExpression	symbol < n		11209675	0		<			
ANR	11209724	Identifier	symbol		11209675	0					
ANR	11209725	Identifier	n		11209675	1					
ANR	11209726	PostIncDecOperationExpression	symbol ++	350:33:15374:15381	11209675	2	True				
ANR	11209727	Identifier	symbol		11209675	0					
ANR	11209728	IncDec	++		11209675	1					
ANR	11209729	ExpressionStatement	( h -> count [ length [ symbol ] ] ) ++	351:8:15392:15420	11209675	3	True				
ANR	11209730	PostIncDecOperationExpression	( h -> count [ length [ symbol ] ] ) ++		11209675	0					
ANR	11209731	ArrayIndexing	h -> count [ length [ symbol ] ]		11209675	0					
ANR	11209732	PtrMemberAccess	h -> count		11209675	0					
ANR	11209733	Identifier	h		11209675	0					
ANR	11209734	Identifier	count		11209675	1					
ANR	11209735	ArrayIndexing	length [ symbol ]		11209675	1					
ANR	11209736	Identifier	length		11209675	0					
ANR	11209737	Identifier	symbol		11209675	1					
ANR	11209738	IncDec	++		11209675	1					
ANR	11209739	IfStatement	if ( h -> count [ 0 ] == n )		11209675	6					
ANR	11209740	Condition	h -> count [ 0 ] == n	352:8:15472:15487	11209675	0	True				
ANR	11209741	EqualityExpression	h -> count [ 0 ] == n		11209675	0		==			
ANR	11209742	ArrayIndexing	h -> count [ 0 ]		11209675	0					
ANR	11209743	PtrMemberAccess	h -> count		11209675	0					
ANR	11209744	Identifier	h		11209675	0					
ANR	11209745	Identifier	count		11209675	1					
ANR	11209746	PrimaryExpression	0		11209675	1					
ANR	11209747	Identifier	n		11209675	1					
ANR	11209748	ReturnStatement	return 0 ;	353:8:15528:15536	11209675	1	True				
ANR	11209749	PrimaryExpression	0		11209675	0					
ANR	11209750	ExpressionStatement	left = 1	356:4:15672:15680	11209675	7	True				
ANR	11209751	AssignmentExpression	left = 1		11209675	0		=			
ANR	11209752	Identifier	left		11209675	0					
ANR	11209753	PrimaryExpression	1		11209675	1					
ANR	11209754	ForStatement	for ( len = 1 ; len <= MAXBITS ; len ++ )		11209675	8					
ANR	11209755	ForInit	len = 1 ;	357:9:15756:15763	11209675	0	True				
ANR	11209756	AssignmentExpression	len = 1		11209675	0		=			
ANR	11209757	Identifier	len		11209675	0					
ANR	11209758	PrimaryExpression	1		11209675	1					
ANR	11209759	Condition	len <= MAXBITS	357:18:15765:15778	11209675	1	True				
ANR	11209760	RelationalExpression	len <= MAXBITS		11209675	0		<=			
ANR	11209761	Identifier	len		11209675	0					
ANR	11209762	Identifier	MAXBITS		11209675	1					
ANR	11209763	PostIncDecOperationExpression	len ++	357:34:15781:15785	11209675	2	True				
ANR	11209764	Identifier	len		11209675	0					
ANR	11209765	IncDec	++		11209675	1					
ANR	11209766	CompoundStatement		17:41:874:874	11209675	3					
ANR	11209767	ExpressionStatement	left <<= 1	358:8:15798:15808	11209675	0	True				
ANR	11209768	AssignmentExpression	left <<= 1		11209675	0		<<=			
ANR	11209769	Identifier	left		11209675	0					
ANR	11209770	PrimaryExpression	1		11209675	1					
ANR	11209771	ExpressionStatement	left -= h -> count [ len ]	359:8:15876:15897	11209675	1	True				
ANR	11209772	AssignmentExpression	left -= h -> count [ len ]		11209675	0		-=			
ANR	11209773	Identifier	left		11209675	0					
ANR	11209774	ArrayIndexing	h -> count [ len ]		11209675	1					
ANR	11209775	PtrMemberAccess	h -> count		11209675	0					
ANR	11209776	Identifier	h		11209675	0					
ANR	11209777	Identifier	count		11209675	1					
ANR	11209778	Identifier	len		11209675	1					
ANR	11209779	IfStatement	if ( left < 0 )		11209675	2					
ANR	11209780	Condition	left < 0	360:12:15959:15966	11209675	0	True				
ANR	11209781	RelationalExpression	left < 0		11209675	0		<			
ANR	11209782	Identifier	left		11209675	0					
ANR	11209783	PrimaryExpression	0		11209675	1					
ANR	11209784	ReturnStatement	return left ;	361:12:15981:15992	11209675	1	True				
ANR	11209785	Identifier	left		11209675	0					
ANR	11209786	ExpressionStatement	offs [ 1 ] = 0	365:4:16198:16209	11209675	9	True				
ANR	11209787	AssignmentExpression	offs [ 1 ] = 0		11209675	0		=			
ANR	11209788	ArrayIndexing	offs [ 1 ]		11209675	0					
ANR	11209789	Identifier	offs		11209675	0					
ANR	11209790	PrimaryExpression	1		11209675	1					
ANR	11209791	PrimaryExpression	0		11209675	1					
ANR	11209792	ForStatement	for ( len = 1 ; len < MAXBITS ; len ++ )		11209675	10					
ANR	11209793	ForInit	len = 1 ;	366:9:16220:16227	11209675	0	True				
ANR	11209794	AssignmentExpression	len = 1		11209675	0		=			
ANR	11209795	Identifier	len		11209675	0					
ANR	11209796	PrimaryExpression	1		11209675	1					
ANR	11209797	Condition	len < MAXBITS	366:18:16229:16241	11209675	1	True				
ANR	11209798	RelationalExpression	len < MAXBITS		11209675	0		<			
ANR	11209799	Identifier	len		11209675	0					
ANR	11209800	Identifier	MAXBITS		11209675	1					
ANR	11209801	PostIncDecOperationExpression	len ++	366:33:16244:16248	11209675	2	True				
ANR	11209802	Identifier	len		11209675	0					
ANR	11209803	IncDec	++		11209675	1					
ANR	11209804	ExpressionStatement	offs [ len + 1 ] = offs [ len ] + h -> count [ len ]	367:8:16259:16300	11209675	3	True				
ANR	11209805	AssignmentExpression	offs [ len + 1 ] = offs [ len ] + h -> count [ len ]		11209675	0		=			
ANR	11209806	ArrayIndexing	offs [ len + 1 ]		11209675	0					
ANR	11209807	Identifier	offs		11209675	0					
ANR	11209808	AdditiveExpression	len + 1		11209675	1		+			
ANR	11209809	Identifier	len		11209675	0					
ANR	11209810	PrimaryExpression	1		11209675	1					
ANR	11209811	AdditiveExpression	offs [ len ] + h -> count [ len ]		11209675	1		+			
ANR	11209812	ArrayIndexing	offs [ len ]		11209675	0					
ANR	11209813	Identifier	offs		11209675	0					
ANR	11209814	Identifier	len		11209675	1					
ANR	11209815	ArrayIndexing	h -> count [ len ]		11209675	1					
ANR	11209816	PtrMemberAccess	h -> count		11209675	0					
ANR	11209817	Identifier	h		11209675	0					
ANR	11209818	Identifier	count		11209675	1					
ANR	11209819	Identifier	len		11209675	1					
ANR	11209820	ForStatement	for ( symbol = 0 ; symbol < n ; symbol ++ )		11209675	11					
ANR	11209821	ForInit	symbol = 0 ;	373:9:16415:16425	11209675	0	True				
ANR	11209822	AssignmentExpression	symbol = 0		11209675	0		=			
ANR	11209823	Identifier	symbol		11209675	0					
ANR	11209824	PrimaryExpression	0		11209675	1					
ANR	11209825	Condition	symbol < n	373:21:16427:16436	11209675	1	True				
ANR	11209826	RelationalExpression	symbol < n		11209675	0		<			
ANR	11209827	Identifier	symbol		11209675	0					
ANR	11209828	Identifier	n		11209675	1					
ANR	11209829	PostIncDecOperationExpression	symbol ++	373:33:16439:16446	11209675	2	True				
ANR	11209830	Identifier	symbol		11209675	0					
ANR	11209831	IncDec	++		11209675	1					
ANR	11209832	IfStatement	if ( length [ symbol ] != 0 )		11209675	3					
ANR	11209833	Condition	length [ symbol ] != 0	374:12:16461:16479	11209675	0	True				
ANR	11209834	EqualityExpression	length [ symbol ] != 0		11209675	0		!=			
ANR	11209835	ArrayIndexing	length [ symbol ]		11209675	0					
ANR	11209836	Identifier	length		11209675	0					
ANR	11209837	Identifier	symbol		11209675	1					
ANR	11209838	PrimaryExpression	0		11209675	1					
ANR	11209839	ExpressionStatement	h -> symbol [ offs [ length [ symbol ] ] ++ ] = symbol	375:12:16494:16536	11209675	1	True				
ANR	11209840	AssignmentExpression	h -> symbol [ offs [ length [ symbol ] ] ++ ] = symbol		11209675	0		=			
ANR	11209841	ArrayIndexing	h -> symbol [ offs [ length [ symbol ] ] ++ ]		11209675	0					
ANR	11209842	PtrMemberAccess	h -> symbol		11209675	0					
ANR	11209843	Identifier	h		11209675	0					
ANR	11209844	Identifier	symbol		11209675	1					
ANR	11209845	PostIncDecOperationExpression	offs [ length [ symbol ] ] ++		11209675	1					
ANR	11209846	ArrayIndexing	offs [ length [ symbol ] ]		11209675	0					
ANR	11209847	Identifier	offs		11209675	0					
ANR	11209848	ArrayIndexing	length [ symbol ]		11209675	1					
ANR	11209849	Identifier	length		11209675	0					
ANR	11209850	Identifier	symbol		11209675	1					
ANR	11209851	IncDec	++		11209675	1					
ANR	11209852	Identifier	symbol		11209675	1					
ANR	11209853	ReturnStatement	return left ;	378:4:16611:16622	11209675	12	True				
ANR	11209854	Identifier	left		11209675	0					
ANR	11209855	ReturnType	local int		11209675	1					
ANR	11209856	Identifier	construct		11209675	2					
ANR	11209857	ParameterList	"struct huffman * h , const short * length , int n"		11209675	3					
ANR	11209858	Parameter	struct huffman * h	340:20:14866:14882	11209675	0	True				
ANR	11209859	ParameterType	struct huffman *		11209675	0					
ANR	11209860	Identifier	h		11209675	1					
ANR	11209861	Parameter	const short * length	340:39:14885:14903	11209675	1	True				
ANR	11209862	ParameterType	const short *		11209675	0					
ANR	11209863	Identifier	length		11209675	1					
ANR	11209864	Parameter	int n	340:60:14906:14910	11209675	2	True				
ANR	11209865	ParameterType	int		11209675	0					
ANR	11209866	Identifier	n		11209675	1					
ANR	11209867	CFGEntryNode	ENTRY		11209675		True				
ANR	11209868	CFGExitNode	EXIT		11209675		True				
ANR	11209869	Symbol	symbol		11209675						
ANR	11209870	Symbol	* h -> symbol		11209675						
ANR	11209871	Symbol	* * h		11209675						
ANR	11209872	Symbol	h -> count		11209675						
ANR	11209873	Symbol	h -> symbol		11209675						
ANR	11209874	Symbol	h		11209675						
ANR	11209875	Symbol	length		11209675						
ANR	11209876	Symbol	MAXBITS		11209675						
ANR	11209877	Symbol	* * symbol		11209675						
ANR	11209878	Symbol	n		11209675						
ANR	11209879	Symbol	offs		11209675						
ANR	11209880	Symbol	* h		11209675						
ANR	11209881	Symbol	* * length		11209675						
ANR	11209882	Symbol	len		11209675						
ANR	11209883	Symbol	left		11209675						
ANR	11209884	Symbol	* h -> count		11209675						
ANR	11209885	Symbol	* offs		11209675						
ANR	11209886	Symbol	* length		11209675						
ANR	11209887	Symbol	* symbol		11209675						
ANR	11209888	Symbol	* len		11209675						
ANR	11209889	Function	codes	436:0:19737:22690							
ANR	11209890	FunctionDef	"codes (struct state * s , const struct huffman * lencode , const struct huffman * distcode)"		11209889	0					
ANR	11209891	CompoundStatement		439:0:19865:22690	11209889	0					
ANR	11209892	IdentifierDeclStatement	int symbol ;	440:4:19871:19881	11209889	0	True				
ANR	11209893	IdentifierDecl	symbol		11209889	0					
ANR	11209894	IdentifierDeclType	int		11209889	0					
ANR	11209895	Identifier	symbol		11209889	1					
ANR	11209896	IdentifierDeclStatement	int len ;	441:4:19916:19923	11209889	1	True				
ANR	11209897	IdentifierDecl	len		11209889	0					
ANR	11209898	IdentifierDeclType	int		11209889	0					
ANR	11209899	Identifier	len		11209889	1					
ANR	11209900	IdentifierDeclStatement	unsigned dist ;	442:4:19962:19975	11209889	2	True				
ANR	11209901	IdentifierDecl	dist		11209889	0					
ANR	11209902	IdentifierDeclType	unsigned		11209889	0					
ANR	11209903	Identifier	dist		11209889	1					
ANR	11209904	Statement	static	443:4:20010:20015	11209889	3	True				
ANR	11209905	IdentifierDeclStatement	"const short lens [ 29 ] = { 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 13 , 15 , 17 , 19 , 23 , 27 , 31 , 35 , 43 , 51 , 59 , 67 , 83 , 99 , 115 , 131 , 163 , 195 , 227 , 258 } ;"	443:11:20017:20214	11209889	4	True				
ANR	11209906	IdentifierDecl	"lens [ 29 ] = { 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 13 , 15 , 17 , 19 , 23 , 27 , 31 , 35 , 43 , 51 , 59 , 67 , 83 , 99 , 115 , 131 , 163 , 195 , 227 , 258 }"		11209889	0					
ANR	11209907	IdentifierDeclType	const short [ 29 ]		11209889	0					
ANR	11209908	Identifier	lens		11209889	1					
ANR	11209909	PrimaryExpression	29		11209889	2					
ANR	11209910	AssignmentExpression	"lens [ 29 ] = { 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 13 , 15 , 17 , 19 , 23 , 27 , 31 , 35 , 43 , 51 , 59 , 67 , 83 , 99 , 115 , 131 , 163 , 195 , 227 , 258 }"		11209889	3		=			
ANR	11209911	Identifier	lens		11209889	0					
ANR	11209912	InitializerList	3		11209889	1					
ANR	11209913	PrimaryExpression	3		11209889	0					
ANR	11209914	PrimaryExpression	4		11209889	1					
ANR	11209915	PrimaryExpression	5		11209889	2					
ANR	11209916	PrimaryExpression	6		11209889	3					
ANR	11209917	PrimaryExpression	7		11209889	4					
ANR	11209918	PrimaryExpression	8		11209889	5					
ANR	11209919	PrimaryExpression	9		11209889	6					
ANR	11209920	PrimaryExpression	10		11209889	7					
ANR	11209921	PrimaryExpression	11		11209889	8					
ANR	11209922	PrimaryExpression	13		11209889	9					
ANR	11209923	PrimaryExpression	15		11209889	10					
ANR	11209924	PrimaryExpression	17		11209889	11					
ANR	11209925	PrimaryExpression	19		11209889	12					
ANR	11209926	PrimaryExpression	23		11209889	13					
ANR	11209927	PrimaryExpression	27		11209889	14					
ANR	11209928	PrimaryExpression	31		11209889	15					
ANR	11209929	PrimaryExpression	35		11209889	16					
ANR	11209930	PrimaryExpression	43		11209889	17					
ANR	11209931	PrimaryExpression	51		11209889	18					
ANR	11209932	PrimaryExpression	59		11209889	19					
ANR	11209933	PrimaryExpression	67		11209889	20					
ANR	11209934	PrimaryExpression	83		11209889	21					
ANR	11209935	PrimaryExpression	99		11209889	22					
ANR	11209936	PrimaryExpression	115		11209889	23					
ANR	11209937	PrimaryExpression	131		11209889	24					
ANR	11209938	PrimaryExpression	163		11209889	25					
ANR	11209939	PrimaryExpression	195		11209889	26					
ANR	11209940	PrimaryExpression	227		11209889	27					
ANR	11209941	PrimaryExpression	258		11209889	28					
ANR	11209942	Statement	static	446:4:20220:20225	11209889	5	True				
ANR	11209943	IdentifierDeclStatement	"const short lext [ 29 ] = { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 3 , 3 , 3 , 3 , 4 , 4 , 4 , 4 , 5 , 5 , 5 , 5 , 0 } ;"	446:11:20227:20397	11209889	6	True				
ANR	11209944	IdentifierDecl	"lext [ 29 ] = { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 3 , 3 , 3 , 3 , 4 , 4 , 4 , 4 , 5 , 5 , 5 , 5 , 0 }"		11209889	0					
ANR	11209945	IdentifierDeclType	const short [ 29 ]		11209889	0					
ANR	11209946	Identifier	lext		11209889	1					
ANR	11209947	PrimaryExpression	29		11209889	2					
ANR	11209948	AssignmentExpression	"lext [ 29 ] = { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 3 , 3 , 3 , 3 , 4 , 4 , 4 , 4 , 5 , 5 , 5 , 5 , 0 }"		11209889	3		=			
ANR	11209949	Identifier	lext		11209889	0					
ANR	11209950	InitializerList	0		11209889	1					
ANR	11209951	PrimaryExpression	0		11209889	0					
ANR	11209952	PrimaryExpression	0		11209889	1					
ANR	11209953	PrimaryExpression	0		11209889	2					
ANR	11209954	PrimaryExpression	0		11209889	3					
ANR	11209955	PrimaryExpression	0		11209889	4					
ANR	11209956	PrimaryExpression	0		11209889	5					
ANR	11209957	PrimaryExpression	0		11209889	6					
ANR	11209958	PrimaryExpression	0		11209889	7					
ANR	11209959	PrimaryExpression	1		11209889	8					
ANR	11209960	PrimaryExpression	1		11209889	9					
ANR	11209961	PrimaryExpression	1		11209889	10					
ANR	11209962	PrimaryExpression	1		11209889	11					
ANR	11209963	PrimaryExpression	2		11209889	12					
ANR	11209964	PrimaryExpression	2		11209889	13					
ANR	11209965	PrimaryExpression	2		11209889	14					
ANR	11209966	PrimaryExpression	2		11209889	15					
ANR	11209967	PrimaryExpression	3		11209889	16					
ANR	11209968	PrimaryExpression	3		11209889	17					
ANR	11209969	PrimaryExpression	3		11209889	18					
ANR	11209970	PrimaryExpression	3		11209889	19					
ANR	11209971	PrimaryExpression	4		11209889	20					
ANR	11209972	PrimaryExpression	4		11209889	21					
ANR	11209973	PrimaryExpression	4		11209889	22					
ANR	11209974	PrimaryExpression	4		11209889	23					
ANR	11209975	PrimaryExpression	5		11209889	24					
ANR	11209976	PrimaryExpression	5		11209889	25					
ANR	11209977	PrimaryExpression	5		11209889	26					
ANR	11209978	PrimaryExpression	5		11209889	27					
ANR	11209979	PrimaryExpression	0		11209889	28					
ANR	11209980	Statement	static	449:4:20403:20408	11209889	7	True				
ANR	11209981	IdentifierDeclStatement	"const short dists [ 30 ] = { 1 , 2 , 3 , 4 , 5 , 7 , 9 , 13 , 17 , 25 , 33 , 49 , 65 , 97 , 129 , 193 , 257 , 385 , 513 , 769 , 1025 , 1537 , 2049 , 3073 , 4097 , 6145 , 8193 , 12289 , 16385 , 24577 } ;"	449:11:20410:20644	11209889	8	True				
ANR	11209982	IdentifierDecl	"dists [ 30 ] = { 1 , 2 , 3 , 4 , 5 , 7 , 9 , 13 , 17 , 25 , 33 , 49 , 65 , 97 , 129 , 193 , 257 , 385 , 513 , 769 , 1025 , 1537 , 2049 , 3073 , 4097 , 6145 , 8193 , 12289 , 16385 , 24577 }"		11209889	0					
ANR	11209983	IdentifierDeclType	const short [ 30 ]		11209889	0					
ANR	11209984	Identifier	dists		11209889	1					
ANR	11209985	PrimaryExpression	30		11209889	2					
ANR	11209986	AssignmentExpression	"dists [ 30 ] = { 1 , 2 , 3 , 4 , 5 , 7 , 9 , 13 , 17 , 25 , 33 , 49 , 65 , 97 , 129 , 193 , 257 , 385 , 513 , 769 , 1025 , 1537 , 2049 , 3073 , 4097 , 6145 , 8193 , 12289 , 16385 , 24577 }"		11209889	3		=			
ANR	11209987	Identifier	dists		11209889	0					
ANR	11209988	InitializerList	1		11209889	1					
ANR	11209989	PrimaryExpression	1		11209889	0					
ANR	11209990	PrimaryExpression	2		11209889	1					
ANR	11209991	PrimaryExpression	3		11209889	2					
ANR	11209992	PrimaryExpression	4		11209889	3					
ANR	11209993	PrimaryExpression	5		11209889	4					
ANR	11209994	PrimaryExpression	7		11209889	5					
ANR	11209995	PrimaryExpression	9		11209889	6					
ANR	11209996	PrimaryExpression	13		11209889	7					
ANR	11209997	PrimaryExpression	17		11209889	8					
ANR	11209998	PrimaryExpression	25		11209889	9					
ANR	11209999	PrimaryExpression	33		11209889	10					
ANR	11210000	PrimaryExpression	49		11209889	11					
ANR	11210001	PrimaryExpression	65		11209889	12					
ANR	11210002	PrimaryExpression	97		11209889	13					
ANR	11210003	PrimaryExpression	129		11209889	14					
ANR	11210004	PrimaryExpression	193		11209889	15					
ANR	11210005	PrimaryExpression	257		11209889	16					
ANR	11210006	PrimaryExpression	385		11209889	17					
ANR	11210007	PrimaryExpression	513		11209889	18					
ANR	11210008	PrimaryExpression	769		11209889	19					
ANR	11210009	PrimaryExpression	1025		11209889	20					
ANR	11210010	PrimaryExpression	1537		11209889	21					
ANR	11210011	PrimaryExpression	2049		11209889	22					
ANR	11210012	PrimaryExpression	3073		11209889	23					
ANR	11210013	PrimaryExpression	4097		11209889	24					
ANR	11210014	PrimaryExpression	6145		11209889	25					
ANR	11210015	PrimaryExpression	8193		11209889	26					
ANR	11210016	PrimaryExpression	12289		11209889	27					
ANR	11210017	PrimaryExpression	16385		11209889	28					
ANR	11210018	PrimaryExpression	24577		11209889	29					
ANR	11210019	Statement	static	453:4:20650:20655	11209889	9	True				
ANR	11210020	IdentifierDeclStatement	"const short dext [ 30 ] = { 0 , 0 , 0 , 0 , 1 , 1 , 2 , 2 , 3 , 3 , 4 , 4 , 5 , 5 , 6 , 6 , 7 , 7 , 8 , 8 , 9 , 9 , 10 , 10 , 11 , 11 , 12 , 12 , 13 , 13 } ;"	453:11:20657:20845	11209889	10	True				
ANR	11210021	IdentifierDecl	"dext [ 30 ] = { 0 , 0 , 0 , 0 , 1 , 1 , 2 , 2 , 3 , 3 , 4 , 4 , 5 , 5 , 6 , 6 , 7 , 7 , 8 , 8 , 9 , 9 , 10 , 10 , 11 , 11 , 12 , 12 , 13 , 13 }"		11209889	0					
ANR	11210022	IdentifierDeclType	const short [ 30 ]		11209889	0					
ANR	11210023	Identifier	dext		11209889	1					
ANR	11210024	PrimaryExpression	30		11209889	2					
ANR	11210025	AssignmentExpression	"dext [ 30 ] = { 0 , 0 , 0 , 0 , 1 , 1 , 2 , 2 , 3 , 3 , 4 , 4 , 5 , 5 , 6 , 6 , 7 , 7 , 8 , 8 , 9 , 9 , 10 , 10 , 11 , 11 , 12 , 12 , 13 , 13 }"		11209889	3		=			
ANR	11210026	Identifier	dext		11209889	0					
ANR	11210027	InitializerList	0		11209889	1					
ANR	11210028	PrimaryExpression	0		11209889	0					
ANR	11210029	PrimaryExpression	0		11209889	1					
ANR	11210030	PrimaryExpression	0		11209889	2					
ANR	11210031	PrimaryExpression	0		11209889	3					
ANR	11210032	PrimaryExpression	1		11209889	4					
ANR	11210033	PrimaryExpression	1		11209889	5					
ANR	11210034	PrimaryExpression	2		11209889	6					
ANR	11210035	PrimaryExpression	2		11209889	7					
ANR	11210036	PrimaryExpression	3		11209889	8					
ANR	11210037	PrimaryExpression	3		11209889	9					
ANR	11210038	PrimaryExpression	4		11209889	10					
ANR	11210039	PrimaryExpression	4		11209889	11					
ANR	11210040	PrimaryExpression	5		11209889	12					
ANR	11210041	PrimaryExpression	5		11209889	13					
ANR	11210042	PrimaryExpression	6		11209889	14					
ANR	11210043	PrimaryExpression	6		11209889	15					
ANR	11210044	PrimaryExpression	7		11209889	16					
ANR	11210045	PrimaryExpression	7		11209889	17					
ANR	11210046	PrimaryExpression	8		11209889	18					
ANR	11210047	PrimaryExpression	8		11209889	19					
ANR	11210048	PrimaryExpression	9		11209889	20					
ANR	11210049	PrimaryExpression	9		11209889	21					
ANR	11210050	PrimaryExpression	10		11209889	22					
ANR	11210051	PrimaryExpression	10		11209889	23					
ANR	11210052	PrimaryExpression	11		11209889	24					
ANR	11210053	PrimaryExpression	11		11209889	25					
ANR	11210054	PrimaryExpression	12		11209889	26					
ANR	11210055	PrimaryExpression	12		11209889	27					
ANR	11210056	PrimaryExpression	13		11209889	28					
ANR	11210057	PrimaryExpression	13		11209889	29					
ANR	11210058	DoStatement	do		11209889	11					
ANR	11210059	CompoundStatement		21:7:1041:1041	11209889	0					
ANR	11210060	ExpressionStatement	"symbol = decode ( s , lencode )"	460:8:20917:20944	11209889	0	True				
ANR	11210061	AssignmentExpression	"symbol = decode ( s , lencode )"		11209889	0		=			
ANR	11210062	Identifier	symbol		11209889	0					
ANR	11210063	CallExpression	"decode ( s , lencode )"		11209889	1					
ANR	11210064	Callee	decode		11209889	0					
ANR	11210065	Identifier	decode		11209889	0					
ANR	11210066	ArgumentList	s		11209889	1					
ANR	11210067	Argument	s		11209889	0					
ANR	11210068	Identifier	s		11209889	0					
ANR	11210069	Argument	lencode		11209889	1					
ANR	11210070	Identifier	lencode		11209889	0					
ANR	11210071	IfStatement	if ( symbol < 0 )		11209889	1					
ANR	11210072	Condition	symbol < 0	461:12:20958:20967	11209889	0	True				
ANR	11210073	RelationalExpression	symbol < 0		11209889	0		<			
ANR	11210074	Identifier	symbol		11209889	0					
ANR	11210075	PrimaryExpression	0		11209889	1					
ANR	11210076	ReturnStatement	return symbol ;	462:12:20982:20995	11209889	1	True				
ANR	11210077	Identifier	symbol		11209889	0					
ANR	11210078	IfStatement	if ( symbol < 256 )		11209889	2					
ANR	11210079	Condition	symbol < 256	463:12:21043:21054	11209889	0	True				
ANR	11210080	RelationalExpression	symbol < 256		11209889	0		<			
ANR	11210081	Identifier	symbol		11209889	0					
ANR	11210082	PrimaryExpression	256		11209889	1					
ANR	11210083	CompoundStatement		25:26:1191:1191	11209889	1					
ANR	11210084	IfStatement	if ( s -> out != NIL )		11209889	0					
ANR	11210085	Condition	s -> out != NIL	465:16:21161:21173	11209889	0	True				
ANR	11210086	EqualityExpression	s -> out != NIL		11209889	0		!=			
ANR	11210087	PtrMemberAccess	s -> out		11209889	0					
ANR	11210088	Identifier	s		11209889	0					
ANR	11210089	Identifier	out		11209889	1					
ANR	11210090	Identifier	NIL		11209889	1					
ANR	11210091	CompoundStatement		27:31:1310:1310	11209889	1					
ANR	11210092	IfStatement	if ( s -> outcnt == s -> outlen )		11209889	0					
ANR	11210093	Condition	s -> outcnt == s -> outlen	466:20:21198:21219	11209889	0	True				
ANR	11210094	EqualityExpression	s -> outcnt == s -> outlen		11209889	0		==			
ANR	11210095	PtrMemberAccess	s -> outcnt		11209889	0					
ANR	11210096	Identifier	s		11209889	0					
ANR	11210097	Identifier	outcnt		11209889	1					
ANR	11210098	PtrMemberAccess	s -> outlen		11209889	1					
ANR	11210099	Identifier	s		11209889	0					
ANR	11210100	Identifier	outlen		11209889	1					
ANR	11210101	ReturnStatement	return 1 ;	467:20:21242:21250	11209889	1	True				
ANR	11210102	PrimaryExpression	1		11209889	0					
ANR	11210103	ExpressionStatement	s -> out [ s -> outcnt ] = symbol	468:16:21268:21294	11209889	1	True				
ANR	11210104	AssignmentExpression	s -> out [ s -> outcnt ] = symbol		11209889	0		=			
ANR	11210105	ArrayIndexing	s -> out [ s -> outcnt ]		11209889	0					
ANR	11210106	PtrMemberAccess	s -> out		11209889	0					
ANR	11210107	Identifier	s		11209889	0					
ANR	11210108	Identifier	out		11209889	1					
ANR	11210109	PtrMemberAccess	s -> outcnt		11209889	1					
ANR	11210110	Identifier	s		11209889	0					
ANR	11210111	Identifier	outcnt		11209889	1					
ANR	11210112	Identifier	symbol		11209889	1					
ANR	11210113	ExpressionStatement	s -> outcnt ++	470:12:21322:21333	11209889	1	True				
ANR	11210114	PostIncDecOperationExpression	s -> outcnt ++		11209889	0					
ANR	11210115	PtrMemberAccess	s -> outcnt		11209889	0					
ANR	11210116	Identifier	s		11209889	0					
ANR	11210117	Identifier	outcnt		11209889	1					
ANR	11210118	IncDec	++		11209889	1					
ANR	11210119	ElseStatement	else		11209889	0					
ANR	11210120	IfStatement	if ( symbol > 256 )		11209889	0					
ANR	11210121	Condition	symbol > 256	472:17:21362:21373	11209889	0	True				
ANR	11210122	RelationalExpression	symbol > 256		11209889	0		>			
ANR	11210123	Identifier	symbol		11209889	0					
ANR	11210124	PrimaryExpression	256		11209889	1					
ANR	11210125	CompoundStatement		34:31:1510:1510	11209889	1					
ANR	11210126	ExpressionStatement	symbol -= 257	474:12:21451:21464	11209889	0	True				
ANR	11210127	AssignmentExpression	symbol -= 257		11209889	0		-=			
ANR	11210128	Identifier	symbol		11209889	0					
ANR	11210129	PrimaryExpression	257		11209889	1					
ANR	11210130	IfStatement	if ( symbol >= 29 )		11209889	1					
ANR	11210131	Condition	symbol >= 29	475:16:21482:21493	11209889	0	True				
ANR	11210132	RelationalExpression	symbol >= 29		11209889	0		>=			
ANR	11210133	Identifier	symbol		11209889	0					
ANR	11210134	PrimaryExpression	29		11209889	1					
ANR	11210135	ReturnStatement	return - 10 ;	476:16:21512:21522	11209889	1	True				
ANR	11210136	UnaryOperationExpression	- 10		11209889	0					
ANR	11210137	UnaryOperator	-		11209889	0					
ANR	11210138	PrimaryExpression	10		11209889	1					
ANR	11210139	ExpressionStatement	"len = lens [ symbol ] + bits ( s , lext [ symbol ] )"	477:12:21573:21615	11209889	2	True				
ANR	11210140	AssignmentExpression	"len = lens [ symbol ] + bits ( s , lext [ symbol ] )"		11209889	0		=			
ANR	11210141	Identifier	len		11209889	0					
ANR	11210142	AdditiveExpression	"lens [ symbol ] + bits ( s , lext [ symbol ] )"		11209889	1		+			
ANR	11210143	ArrayIndexing	lens [ symbol ]		11209889	0					
ANR	11210144	Identifier	lens		11209889	0					
ANR	11210145	Identifier	symbol		11209889	1					
ANR	11210146	CallExpression	"bits ( s , lext [ symbol ] )"		11209889	1					
ANR	11210147	Callee	bits		11209889	0					
ANR	11210148	Identifier	bits		11209889	0					
ANR	11210149	ArgumentList	s		11209889	1					
ANR	11210150	Argument	s		11209889	0					
ANR	11210151	Identifier	s		11209889	0					
ANR	11210152	Argument	lext [ symbol ]		11209889	1					
ANR	11210153	ArrayIndexing	lext [ symbol ]		11209889	0					
ANR	11210154	Identifier	lext		11209889	0					
ANR	11210155	Identifier	symbol		11209889	1					
ANR	11210156	ExpressionStatement	"symbol = decode ( s , distcode )"	480:12:21671:21699	11209889	3	True				
ANR	11210157	AssignmentExpression	"symbol = decode ( s , distcode )"		11209889	0		=			
ANR	11210158	Identifier	symbol		11209889	0					
ANR	11210159	CallExpression	"decode ( s , distcode )"		11209889	1					
ANR	11210160	Callee	decode		11209889	0					
ANR	11210161	Identifier	decode		11209889	0					
ANR	11210162	ArgumentList	s		11209889	1					
ANR	11210163	Argument	s		11209889	0					
ANR	11210164	Identifier	s		11209889	0					
ANR	11210165	Argument	distcode		11209889	1					
ANR	11210166	Identifier	distcode		11209889	0					
ANR	11210167	IfStatement	if ( symbol < 0 )		11209889	4					
ANR	11210168	Condition	symbol < 0	481:16:21717:21726	11209889	0	True				
ANR	11210169	RelationalExpression	symbol < 0		11209889	0		<			
ANR	11210170	Identifier	symbol		11209889	0					
ANR	11210171	PrimaryExpression	0		11209889	1					
ANR	11210172	ReturnStatement	return symbol ;	482:16:21745:21758	11209889	1	True				
ANR	11210173	Identifier	symbol		11209889	0					
ANR	11210174	ExpressionStatement	"dist = dists [ symbol ] + bits ( s , dext [ symbol ] )"	483:12:21802:21846	11209889	5	True				
ANR	11210175	AssignmentExpression	"dist = dists [ symbol ] + bits ( s , dext [ symbol ] )"		11209889	0		=			
ANR	11210176	Identifier	dist		11209889	0					
ANR	11210177	AdditiveExpression	"dists [ symbol ] + bits ( s , dext [ symbol ] )"		11209889	1		+			
ANR	11210178	ArrayIndexing	dists [ symbol ]		11209889	0					
ANR	11210179	Identifier	dists		11209889	0					
ANR	11210180	Identifier	symbol		11209889	1					
ANR	11210181	CallExpression	"bits ( s , dext [ symbol ] )"		11209889	1					
ANR	11210182	Callee	bits		11209889	0					
ANR	11210183	Identifier	bits		11209889	0					
ANR	11210184	ArgumentList	s		11209889	1					
ANR	11210185	Argument	s		11209889	0					
ANR	11210186	Identifier	s		11209889	0					
ANR	11210187	Argument	dext [ symbol ]		11209889	1					
ANR	11210188	ArrayIndexing	dext [ symbol ]		11209889	0					
ANR	11210189	Identifier	dext		11209889	0					
ANR	11210190	Identifier	symbol		11209889	1					
ANR	11210191	IfStatement	if ( dist > s -> outcnt )		11209889	6					
ANR	11210192	Condition	dist > s -> outcnt	485:16:21915:21930	11209889	0	True				
ANR	11210193	RelationalExpression	dist > s -> outcnt		11209889	0		>			
ANR	11210194	Identifier	dist		11209889	0					
ANR	11210195	PtrMemberAccess	s -> outcnt		11209889	1					
ANR	11210196	Identifier	s		11209889	0					
ANR	11210197	Identifier	outcnt		11209889	1					
ANR	11210198	ReturnStatement	return - 11 ;	486:16:21949:21959	11209889	1	True				
ANR	11210199	UnaryOperationExpression	- 11		11209889	0					
ANR	11210200	UnaryOperator	-		11209889	0					
ANR	11210201	PrimaryExpression	11		11209889	1					
ANR	11210202	IfStatement	if ( s -> out != NIL )		11209889	7					
ANR	11210203	Condition	s -> out != NIL	490:16:22078:22090	11209889	0	True				
ANR	11210204	EqualityExpression	s -> out != NIL		11209889	0		!=			
ANR	11210205	PtrMemberAccess	s -> out		11209889	0					
ANR	11210206	Identifier	s		11209889	0					
ANR	11210207	Identifier	out		11209889	1					
ANR	11210208	Identifier	NIL		11209889	1					
ANR	11210209	CompoundStatement		52:31:2227:2227	11209889	1					
ANR	11210210	IfStatement	if ( s -> outcnt + len > s -> outlen )		11209889	0					
ANR	11210211	Condition	s -> outcnt + len > s -> outlen	491:20:22115:22141	11209889	0	True				
ANR	11210212	RelationalExpression	s -> outcnt + len > s -> outlen		11209889	0		>			
ANR	11210213	AdditiveExpression	s -> outcnt + len		11209889	0		+			
ANR	11210214	PtrMemberAccess	s -> outcnt		11209889	0					
ANR	11210215	Identifier	s		11209889	0					
ANR	11210216	Identifier	outcnt		11209889	1					
ANR	11210217	Identifier	len		11209889	1					
ANR	11210218	PtrMemberAccess	s -> outlen		11209889	1					
ANR	11210219	Identifier	s		11209889	0					
ANR	11210220	Identifier	outlen		11209889	1					
ANR	11210221	ReturnStatement	return 1 ;	492:20:22164:22172	11209889	1	True				
ANR	11210222	PrimaryExpression	1		11209889	0					
ANR	11210223	WhileStatement	while ( len -- )		11209889	1					
ANR	11210224	Condition	len --	493:23:22197:22201	11209889	0	True				
ANR	11210225	PostIncDecOperationExpression	len --		11209889	0					
ANR	11210226	Identifier	len		11209889	0					
ANR	11210227	IncDec	--		11209889	1					
ANR	11210228	CompoundStatement		55:30:2338:2338	11209889	1					
ANR	11210229	Statement	s	494:20:22226:22226	11209889	0	True				
ANR	11210230	Statement	->	494:21:22227:22228	11209889	1	True				
ANR	11210231	Statement	out	494:23:22229:22231	11209889	2	True				
ANR	11210232	Statement	[	494:26:22232:22232	11209889	3	True				
ANR	11210233	Statement	s	494:27:22233:22233	11209889	4	True				
ANR	11210234	Statement	->	494:28:22234:22235	11209889	5	True				
ANR	11210235	Statement	outcnt	494:30:22236:22241	11209889	6	True				
ANR	11210236	Statement	]	494:36:22242:22242	11209889	7	True				
ANR	11210237	Statement	=	494:38:22244:22244	11209889	8	True				
ANR	11210238	Statement	dist	496:24:22320:22323	11209889	9	True				
ANR	11210239	Statement	>	496:29:22325:22325	11209889	10	True				
ANR	11210240	Statement	s	496:31:22327:22327	11209889	11	True				
ANR	11210241	Statement	->	496:32:22328:22329	11209889	12	True				
ANR	11210242	Statement	outcnt	496:34:22330:22335	11209889	13	True				
ANR	11210243	Statement	?	496:41:22337:22337	11209889	14	True				
ANR	11210244	Label	0 :	497:28:22367:22369	11209889	15	True				
ANR	11210245	ExpressionStatement	s -> out [ s -> outcnt - dist ]	499:28:22406:22430	11209889	16	True				
ANR	11210246	ArrayIndexing	s -> out [ s -> outcnt - dist ]		11209889	0					
ANR	11210247	PtrMemberAccess	s -> out		11209889	0					
ANR	11210248	Identifier	s		11209889	0					
ANR	11210249	Identifier	out		11209889	1					
ANR	11210250	AdditiveExpression	s -> outcnt - dist		11209889	1		-			
ANR	11210251	PtrMemberAccess	s -> outcnt		11209889	0					
ANR	11210252	Identifier	s		11209889	0					
ANR	11210253	Identifier	outcnt		11209889	1					
ANR	11210254	Identifier	dist		11209889	1					
ANR	11210255	ExpressionStatement	s -> outcnt ++	500:20:22452:22463	11209889	17	True				
ANR	11210256	PostIncDecOperationExpression	s -> outcnt ++		11209889	0					
ANR	11210257	PtrMemberAccess	s -> outcnt		11209889	0					
ANR	11210258	Identifier	s		11209889	0					
ANR	11210259	Identifier	outcnt		11209889	1					
ANR	11210260	IncDec	++		11209889	1					
ANR	11210261	ElseStatement	else		11209889	0					
ANR	11210262	ExpressionStatement	s -> outcnt += len	504:16:22530:22546	11209889	0	True				
ANR	11210263	AssignmentExpression	s -> outcnt += len		11209889	0		+=			
ANR	11210264	PtrMemberAccess	s -> outcnt		11209889	0					
ANR	11210265	Identifier	s		11209889	0					
ANR	11210266	Identifier	outcnt		11209889	1					
ANR	11210267	Identifier	len		11209889	1					
ANR	11210268	Condition	symbol != 256	506:13:22571:22583	11209889	1	True				
ANR	11210269	EqualityExpression	symbol != 256		11209889	0		!=			
ANR	11210270	Identifier	symbol		11209889	0					
ANR	11210271	PrimaryExpression	256		11209889	1					
ANR	11210272	ReturnStatement	return 0 ;	509:4:22680:22688	11209889	12	True				
ANR	11210273	PrimaryExpression	0		11209889	0					
ANR	11210274	ReturnType	local int		11209889	1					
ANR	11210275	Identifier	codes		11209889	2					
ANR	11210276	ParameterList	"struct state * s , const struct huffman * lencode , const struct huffman * distcode"		11209889	3					
ANR	11210277	Parameter	struct state * s	436:16:19753:19767	11209889	0	True				
ANR	11210278	ParameterType	struct state *		11209889	0					
ANR	11210279	Identifier	s		11209889	1					
ANR	11210280	Parameter	const struct huffman * lencode	437:16:19786:19814	11209889	1	True				
ANR	11210281	ParameterType	const struct huffman *		11209889	0					
ANR	11210282	Identifier	lencode		11209889	1					
ANR	11210283	Parameter	const struct huffman * distcode	438:16:19833:19862	11209889	2	True				
ANR	11210284	ParameterType	const struct huffman *		11209889	0					
ANR	11210285	Identifier	distcode		11209889	1					
ANR	11210286	CFGEntryNode	ENTRY		11209889		True				
ANR	11210287	CFGExitNode	EXIT		11209889		True				
ANR	11210288	Symbol	symbol		11209889						
ANR	11210289	Symbol	* s -> outcnt		11209889						
ANR	11210290	Symbol	* dists		11209889						
ANR	11210291	Symbol	lext		11209889						
ANR	11210292	Symbol	dist		11209889						
ANR	11210293	Symbol	* lext		11209889						
ANR	11210294	Symbol	lens		11209889						
ANR	11210295	Symbol	decode		11209889						
ANR	11210296	Symbol	dext		11209889						
ANR	11210297	Symbol	len		11209889						
ANR	11210298	Symbol	* lens		11209889						
ANR	11210299	Symbol	* * s		11209889						
ANR	11210300	Symbol	* symbol		11209889						
ANR	11210301	Symbol	s -> out		11209889						
ANR	11210302	Symbol	distcode		11209889						
ANR	11210303	Symbol	bits		11209889						
ANR	11210304	Symbol	s -> outcnt		11209889						
ANR	11210305	Symbol	* s -> out		11209889						
ANR	11210306	Symbol	* dext		11209889						
ANR	11210307	Symbol	NIL		11209889						
ANR	11210308	Symbol	s		11209889						
ANR	11210309	Symbol	lencode		11209889						
ANR	11210310	Symbol	s -> outlen		11209889						
ANR	11210311	Symbol	* s		11209889						
ANR	11210312	Symbol	dists		11209889						
ANR	11210313	Function	fixed	536:0:23917:25170							
ANR	11210314	FunctionDef	fixed (struct state * s)		11210313	0					
ANR	11210315	CompoundStatement		537:0:23950:25170	11210313	0					
ANR	11210316	Statement	static	538:4:23956:23961	11210313	0	True				
ANR	11210317	IdentifierDeclStatement	int virgin = 1 ;	538:11:23963:23977	11210313	1	True				
ANR	11210318	IdentifierDecl	virgin = 1		11210313	0					
ANR	11210319	IdentifierDeclType	int		11210313	0					
ANR	11210320	Identifier	virgin		11210313	1					
ANR	11210321	AssignmentExpression	virgin = 1		11210313	2		=			
ANR	11210322	Identifier	virgin		11210313	0					
ANR	11210323	PrimaryExpression	1		11210313	1					
ANR	11210324	Statement	static	539:4:23983:23988	11210313	2	True				
ANR	11210325	IdentifierDeclStatement	"short lencnt [ MAXBITS + 1 ] , lensym [ FIXLCODES ] ;"	539:11:23990:24032	11210313	3	True				
ANR	11210326	IdentifierDecl	lencnt [ MAXBITS + 1 ]		11210313	0					
ANR	11210327	IdentifierDeclType	short [ MAXBITS + 1 ]		11210313	0					
ANR	11210328	Identifier	lencnt		11210313	1					
ANR	11210329	AdditiveExpression	MAXBITS + 1		11210313	2		+			
ANR	11210330	Identifier	MAXBITS		11210313	0					
ANR	11210331	PrimaryExpression	1		11210313	1					
ANR	11210332	IdentifierDecl	lensym [ FIXLCODES ]		11210313	1					
ANR	11210333	IdentifierDeclType	short [ FIXLCODES ]		11210313	0					
ANR	11210334	Identifier	lensym		11210313	1					
ANR	11210335	Identifier	FIXLCODES		11210313	2					
ANR	11210336	Statement	static	540:4:24038:24043	11210313	4	True				
ANR	11210337	IdentifierDeclStatement	"short distcnt [ MAXBITS + 1 ] , distsym [ MAXDCODES ] ;"	540:11:24045:24089	11210313	5	True				
ANR	11210338	IdentifierDecl	distcnt [ MAXBITS + 1 ]		11210313	0					
ANR	11210339	IdentifierDeclType	short [ MAXBITS + 1 ]		11210313	0					
ANR	11210340	Identifier	distcnt		11210313	1					
ANR	11210341	AdditiveExpression	MAXBITS + 1		11210313	2		+			
ANR	11210342	Identifier	MAXBITS		11210313	0					
ANR	11210343	PrimaryExpression	1		11210313	1					
ANR	11210344	IdentifierDecl	distsym [ MAXDCODES ]		11210313	1					
ANR	11210345	IdentifierDeclType	short [ MAXDCODES ]		11210313	0					
ANR	11210346	Identifier	distsym		11210313	1					
ANR	11210347	Identifier	MAXDCODES		11210313	2					
ANR	11210348	Statement	static	541:4:24095:24100	11210313	6	True				
ANR	11210349	IdentifierDeclStatement	"struct huffman lencode , distcode ;"	541:11:24102:24134	11210313	7	True				
ANR	11210350	IdentifierDecl	lencode		11210313	0					
ANR	11210351	IdentifierDeclType	struct huffman		11210313	0					
ANR	11210352	Identifier	lencode		11210313	1					
ANR	11210353	IdentifierDecl	distcode		11210313	1					
ANR	11210354	IdentifierDeclType	struct huffman		11210313	0					
ANR	11210355	Identifier	distcode		11210313	1					
ANR	11210356	IfStatement	if ( virgin )		11210313	8					
ANR	11210357	Condition	virgin	544:8:24221:24226	11210313	0	True				
ANR	11210358	Identifier	virgin		11210313	0					
ANR	11210359	CompoundStatement		10:8:308:332	11210313	1					
ANR	11210360	IdentifierDeclStatement	int symbol ;	545:8:24239:24249	11210313	0	True				
ANR	11210361	IdentifierDecl	symbol		11210313	0					
ANR	11210362	IdentifierDeclType	int		11210313	0					
ANR	11210363	Identifier	symbol		11210313	1					
ANR	11210364	IdentifierDeclStatement	short lengths [ FIXLCODES ] ;	546:8:24259:24283	11210313	1	True				
ANR	11210365	IdentifierDecl	lengths [ FIXLCODES ]		11210313	0					
ANR	11210366	IdentifierDeclType	short [ FIXLCODES ]		11210313	0					
ANR	11210367	Identifier	lengths		11210313	1					
ANR	11210368	Identifier	FIXLCODES		11210313	2					
ANR	11210369	ExpressionStatement	lencode . count = lencnt	549:8:24339:24361	11210313	2	True				
ANR	11210370	AssignmentExpression	lencode . count = lencnt		11210313	0		=			
ANR	11210371	MemberAccess	lencode . count		11210313	0					
ANR	11210372	Identifier	lencode		11210313	0					
ANR	11210373	Identifier	count		11210313	1					
ANR	11210374	Identifier	lencnt		11210313	1					
ANR	11210375	ExpressionStatement	lencode . symbol = lensym	550:8:24371:24394	11210313	3	True				
ANR	11210376	AssignmentExpression	lencode . symbol = lensym		11210313	0		=			
ANR	11210377	MemberAccess	lencode . symbol		11210313	0					
ANR	11210378	Identifier	lencode		11210313	0					
ANR	11210379	Identifier	symbol		11210313	1					
ANR	11210380	Identifier	lensym		11210313	1					
ANR	11210381	ExpressionStatement	distcode . count = distcnt	551:8:24404:24428	11210313	4	True				
ANR	11210382	AssignmentExpression	distcode . count = distcnt		11210313	0		=			
ANR	11210383	MemberAccess	distcode . count		11210313	0					
ANR	11210384	Identifier	distcode		11210313	0					
ANR	11210385	Identifier	count		11210313	1					
ANR	11210386	Identifier	distcnt		11210313	1					
ANR	11210387	ExpressionStatement	distcode . symbol = distsym	552:8:24438:24463	11210313	5	True				
ANR	11210388	AssignmentExpression	distcode . symbol = distsym		11210313	0		=			
ANR	11210389	MemberAccess	distcode . symbol		11210313	0					
ANR	11210390	Identifier	distcode		11210313	0					
ANR	11210391	Identifier	symbol		11210313	1					
ANR	11210392	Identifier	distsym		11210313	1					
ANR	11210393	ForStatement	for ( symbol = 0 ; symbol < 144 ; symbol ++ )		11210313	6					
ANR	11210394	ForInit	symbol = 0 ;	555:13:24514:24524	11210313	0	True				
ANR	11210395	AssignmentExpression	symbol = 0		11210313	0		=			
ANR	11210396	Identifier	symbol		11210313	0					
ANR	11210397	PrimaryExpression	0		11210313	1					
ANR	11210398	Condition	symbol < 144	555:25:24526:24537	11210313	1	True				
ANR	11210399	RelationalExpression	symbol < 144		11210313	0		<			
ANR	11210400	Identifier	symbol		11210313	0					
ANR	11210401	PrimaryExpression	144		11210313	1					
ANR	11210402	PostIncDecOperationExpression	symbol ++	555:39:24540:24547	11210313	2	True				
ANR	11210403	Identifier	symbol		11210313	0					
ANR	11210404	IncDec	++		11210313	1					
ANR	11210405	ExpressionStatement	lengths [ symbol ] = 8	556:12:24562:24581	11210313	3	True				
ANR	11210406	AssignmentExpression	lengths [ symbol ] = 8		11210313	0		=			
ANR	11210407	ArrayIndexing	lengths [ symbol ]		11210313	0					
ANR	11210408	Identifier	lengths		11210313	0					
ANR	11210409	Identifier	symbol		11210313	1					
ANR	11210410	PrimaryExpression	8		11210313	1					
ANR	11210411	ForStatement	for ( ; symbol < 256 ; symbol ++ )		11210313	7					
ANR	11210412	Condition	symbol < 256	557:15:24598:24609	11210313	0	True				
ANR	11210413	RelationalExpression	symbol < 256		11210313	0		<			
ANR	11210414	Identifier	symbol		11210313	0					
ANR	11210415	PrimaryExpression	256		11210313	1					
ANR	11210416	PostIncDecOperationExpression	symbol ++	557:29:24612:24619	11210313	1	True				
ANR	11210417	Identifier	symbol		11210313	0					
ANR	11210418	IncDec	++		11210313	1					
ANR	11210419	ExpressionStatement	lengths [ symbol ] = 9	558:12:24634:24653	11210313	2	True				
ANR	11210420	AssignmentExpression	lengths [ symbol ] = 9		11210313	0		=			
ANR	11210421	ArrayIndexing	lengths [ symbol ]		11210313	0					
ANR	11210422	Identifier	lengths		11210313	0					
ANR	11210423	Identifier	symbol		11210313	1					
ANR	11210424	PrimaryExpression	9		11210313	1					
ANR	11210425	ForStatement	for ( ; symbol < 280 ; symbol ++ )		11210313	8					
ANR	11210426	Condition	symbol < 280	559:15:24670:24681	11210313	0	True				
ANR	11210427	RelationalExpression	symbol < 280		11210313	0		<			
ANR	11210428	Identifier	symbol		11210313	0					
ANR	11210429	PrimaryExpression	280		11210313	1					
ANR	11210430	PostIncDecOperationExpression	symbol ++	559:29:24684:24691	11210313	1	True				
ANR	11210431	Identifier	symbol		11210313	0					
ANR	11210432	IncDec	++		11210313	1					
ANR	11210433	ExpressionStatement	lengths [ symbol ] = 7	560:12:24706:24725	11210313	2	True				
ANR	11210434	AssignmentExpression	lengths [ symbol ] = 7		11210313	0		=			
ANR	11210435	ArrayIndexing	lengths [ symbol ]		11210313	0					
ANR	11210436	Identifier	lengths		11210313	0					
ANR	11210437	Identifier	symbol		11210313	1					
ANR	11210438	PrimaryExpression	7		11210313	1					
ANR	11210439	ForStatement	for ( ; symbol < FIXLCODES ; symbol ++ )		11210313	9					
ANR	11210440	Condition	symbol < FIXLCODES	561:15:24742:24759	11210313	0	True				
ANR	11210441	RelationalExpression	symbol < FIXLCODES		11210313	0		<			
ANR	11210442	Identifier	symbol		11210313	0					
ANR	11210443	Identifier	FIXLCODES		11210313	1					
ANR	11210444	PostIncDecOperationExpression	symbol ++	561:35:24762:24769	11210313	1	True				
ANR	11210445	Identifier	symbol		11210313	0					
ANR	11210446	IncDec	++		11210313	1					
ANR	11210447	ExpressionStatement	lengths [ symbol ] = 8	562:12:24784:24803	11210313	2	True				
ANR	11210448	AssignmentExpression	lengths [ symbol ] = 8		11210313	0		=			
ANR	11210449	ArrayIndexing	lengths [ symbol ]		11210313	0					
ANR	11210450	Identifier	lengths		11210313	0					
ANR	11210451	Identifier	symbol		11210313	1					
ANR	11210452	PrimaryExpression	8		11210313	1					
ANR	11210453	ExpressionStatement	"construct ( & lencode , lengths , FIXLCODES )"	563:8:24813:24852	11210313	10	True				
ANR	11210454	CallExpression	"construct ( & lencode , lengths , FIXLCODES )"		11210313	0					
ANR	11210455	Callee	construct		11210313	0					
ANR	11210456	Identifier	construct		11210313	0					
ANR	11210457	ArgumentList	& lencode		11210313	1					
ANR	11210458	Argument	& lencode		11210313	0					
ANR	11210459	UnaryOperationExpression	& lencode		11210313	0					
ANR	11210460	UnaryOperator	&		11210313	0					
ANR	11210461	Identifier	lencode		11210313	1					
ANR	11210462	Argument	lengths		11210313	1					
ANR	11210463	Identifier	lengths		11210313	0					
ANR	11210464	Argument	FIXLCODES		11210313	2					
ANR	11210465	Identifier	FIXLCODES		11210313	0					
ANR	11210466	ForStatement	for ( symbol = 0 ; symbol < MAXDCODES ; symbol ++ )		11210313	11					
ANR	11210467	ForInit	symbol = 0 ;	566:13:24897:24907	11210313	0	True				
ANR	11210468	AssignmentExpression	symbol = 0		11210313	0		=			
ANR	11210469	Identifier	symbol		11210313	0					
ANR	11210470	PrimaryExpression	0		11210313	1					
ANR	11210471	Condition	symbol < MAXDCODES	566:25:24909:24926	11210313	1	True				
ANR	11210472	RelationalExpression	symbol < MAXDCODES		11210313	0		<			
ANR	11210473	Identifier	symbol		11210313	0					
ANR	11210474	Identifier	MAXDCODES		11210313	1					
ANR	11210475	PostIncDecOperationExpression	symbol ++	566:45:24929:24936	11210313	2	True				
ANR	11210476	Identifier	symbol		11210313	0					
ANR	11210477	IncDec	++		11210313	1					
ANR	11210478	ExpressionStatement	lengths [ symbol ] = 5	567:12:24951:24970	11210313	3	True				
ANR	11210479	AssignmentExpression	lengths [ symbol ] = 5		11210313	0		=			
ANR	11210480	ArrayIndexing	lengths [ symbol ]		11210313	0					
ANR	11210481	Identifier	lengths		11210313	0					
ANR	11210482	Identifier	symbol		11210313	1					
ANR	11210483	PrimaryExpression	5		11210313	1					
ANR	11210484	ExpressionStatement	"construct ( & distcode , lengths , MAXDCODES )"	568:8:24980:25020	11210313	12	True				
ANR	11210485	CallExpression	"construct ( & distcode , lengths , MAXDCODES )"		11210313	0					
ANR	11210486	Callee	construct		11210313	0					
ANR	11210487	Identifier	construct		11210313	0					
ANR	11210488	ArgumentList	& distcode		11210313	1					
ANR	11210489	Argument	& distcode		11210313	0					
ANR	11210490	UnaryOperationExpression	& distcode		11210313	0					
ANR	11210491	UnaryOperator	&		11210313	0					
ANR	11210492	Identifier	distcode		11210313	1					
ANR	11210493	Argument	lengths		11210313	1					
ANR	11210494	Identifier	lengths		11210313	0					
ANR	11210495	Argument	MAXDCODES		11210313	2					
ANR	11210496	Identifier	MAXDCODES		11210313	0					
ANR	11210497	ExpressionStatement	virgin = 0	571:8:25063:25073	11210313	13	True				
ANR	11210498	AssignmentExpression	virgin = 0		11210313	0		=			
ANR	11210499	Identifier	virgin		11210313	0					
ANR	11210500	PrimaryExpression	0		11210313	1					
ANR	11210501	ReturnStatement	"return codes ( s , & lencode , & distcode ) ;"	575:4:25132:25168	11210313	9	True				
ANR	11210502	CallExpression	"codes ( s , & lencode , & distcode )"		11210313	0					
ANR	11210503	Callee	codes		11210313	0					
ANR	11210504	Identifier	codes		11210313	0					
ANR	11210505	ArgumentList	s		11210313	1					
ANR	11210506	Argument	s		11210313	0					
ANR	11210507	Identifier	s		11210313	0					
ANR	11210508	Argument	& lencode		11210313	1					
ANR	11210509	UnaryOperationExpression	& lencode		11210313	0					
ANR	11210510	UnaryOperator	&		11210313	0					
ANR	11210511	Identifier	lencode		11210313	1					
ANR	11210512	Argument	& distcode		11210313	2					
ANR	11210513	UnaryOperationExpression	& distcode		11210313	0					
ANR	11210514	UnaryOperator	&		11210313	0					
ANR	11210515	Identifier	distcode		11210313	1					
ANR	11210516	ReturnType	local int		11210313	1					
ANR	11210517	Identifier	fixed		11210313	2					
ANR	11210518	ParameterList	struct state * s		11210313	3					
ANR	11210519	Parameter	struct state * s	536:16:23933:23947	11210313	0	True				
ANR	11210520	ParameterType	struct state *		11210313	0					
ANR	11210521	Identifier	s		11210313	1					
ANR	11210522	CFGEntryNode	ENTRY		11210313		True				
ANR	11210523	CFGExitNode	EXIT		11210313		True				
ANR	11210524	Symbol	distcode		11210313						
ANR	11210525	Symbol	symbol		11210313						
ANR	11210526	Symbol	codes		11210313						
ANR	11210527	Symbol	MAXDCODES		11210313						
ANR	11210528	Symbol	distcnt		11210313						
ANR	11210529	Symbol	lencode . symbol		11210313						
ANR	11210530	Symbol	distsym		11210313						
ANR	11210531	Symbol	& distcode		11210313						
ANR	11210532	Symbol	& lencode		11210313						
ANR	11210533	Symbol	lencode . count		11210313						
ANR	11210534	Symbol	* lengths		11210313						
ANR	11210535	Symbol	distcode . symbol		11210313						
ANR	11210536	Symbol	s		11210313						
ANR	11210537	Symbol	lengths		11210313						
ANR	11210538	Symbol	virgin		11210313						
ANR	11210539	Symbol	lencode		11210313						
ANR	11210540	Symbol	lencnt		11210313						
ANR	11210541	Symbol	FIXLCODES		11210313						
ANR	11210542	Symbol	lensym		11210313						
ANR	11210543	Symbol	distcode . count		11210313						
ANR	11210544	Symbol	* symbol		11210313						
ANR	11210545	Function	dynamic	665:0:30186:33804							
ANR	11210546	FunctionDef	dynamic (struct state * s)		11210545	0					
ANR	11210547	CompoundStatement		666:0:30221:33804	11210545	0					
ANR	11210548	IdentifierDeclStatement	"int nlen , ndist , ncode ;"	667:4:30227:30249	11210545	0	True				
ANR	11210549	IdentifierDecl	nlen		11210545	0					
ANR	11210550	IdentifierDeclType	int		11210545	0					
ANR	11210551	Identifier	nlen		11210545	1					
ANR	11210552	IdentifierDecl	ndist		11210545	1					
ANR	11210553	IdentifierDeclType	int		11210545	0					
ANR	11210554	Identifier	ndist		11210545	1					
ANR	11210555	IdentifierDecl	ncode		11210545	2					
ANR	11210556	IdentifierDeclType	int		11210545	0					
ANR	11210557	Identifier	ncode		11210545	1					
ANR	11210558	IdentifierDeclStatement	int index ;	668:4:30305:30314	11210545	1	True				
ANR	11210559	IdentifierDecl	index		11210545	0					
ANR	11210560	IdentifierDeclType	int		11210545	0					
ANR	11210561	Identifier	index		11210545	1					
ANR	11210562	IdentifierDeclStatement	int err ;	669:4:30370:30377	11210545	2	True				
ANR	11210563	IdentifierDecl	err		11210545	0					
ANR	11210564	IdentifierDeclType	int		11210545	0					
ANR	11210565	Identifier	err		11210545	1					
ANR	11210566	IdentifierDeclStatement	short lengths [ MAXCODES ] ;	670:4:30441:30464	11210545	3	True				
ANR	11210567	IdentifierDecl	lengths [ MAXCODES ]		11210545	0					
ANR	11210568	IdentifierDeclType	short [ MAXCODES ]		11210545	0					
ANR	11210569	Identifier	lengths		11210545	1					
ANR	11210570	Identifier	MAXCODES		11210545	2					
ANR	11210571	IdentifierDeclStatement	"short lencnt [ MAXBITS + 1 ] , lensym [ MAXLCODES ] ;"	671:4:30511:30553	11210545	4	True				
ANR	11210572	IdentifierDecl	lencnt [ MAXBITS + 1 ]		11210545	0					
ANR	11210573	IdentifierDeclType	short [ MAXBITS + 1 ]		11210545	0					
ANR	11210574	Identifier	lencnt		11210545	1					
ANR	11210575	AdditiveExpression	MAXBITS + 1		11210545	2		+			
ANR	11210576	Identifier	MAXBITS		11210545	0					
ANR	11210577	PrimaryExpression	1		11210545	1					
ANR	11210578	IdentifierDecl	lensym [ MAXLCODES ]		11210545	1					
ANR	11210579	IdentifierDeclType	short [ MAXLCODES ]		11210545	0					
ANR	11210580	Identifier	lensym		11210545	1					
ANR	11210581	Identifier	MAXLCODES		11210545	2					
ANR	11210582	IdentifierDeclStatement	"short distcnt [ MAXBITS + 1 ] , distsym [ MAXDCODES ] ;"	672:4:30588:30632	11210545	5	True				
ANR	11210583	IdentifierDecl	distcnt [ MAXBITS + 1 ]		11210545	0					
ANR	11210584	IdentifierDeclType	short [ MAXBITS + 1 ]		11210545	0					
ANR	11210585	Identifier	distcnt		11210545	1					
ANR	11210586	AdditiveExpression	MAXBITS + 1		11210545	2		+			
ANR	11210587	Identifier	MAXBITS		11210545	0					
ANR	11210588	PrimaryExpression	1		11210545	1					
ANR	11210589	IdentifierDecl	distsym [ MAXDCODES ]		11210545	1					
ANR	11210590	IdentifierDeclType	short [ MAXDCODES ]		11210545	0					
ANR	11210591	Identifier	distsym		11210545	1					
ANR	11210592	Identifier	MAXDCODES		11210545	2					
ANR	11210593	IdentifierDeclStatement	"struct huffman lencode , distcode ;"	673:4:30666:30698	11210545	6	True				
ANR	11210594	IdentifierDecl	lencode		11210545	0					
ANR	11210595	IdentifierDeclType	struct huffman		11210545	0					
ANR	11210596	Identifier	lencode		11210545	1					
ANR	11210597	IdentifierDecl	distcode		11210545	1					
ANR	11210598	IdentifierDeclType	struct huffman		11210545	0					
ANR	11210599	Identifier	distcode		11210545	1					
ANR	11210600	Statement	static	674:4:30738:30743	11210545	7	True				
ANR	11210601	IdentifierDeclStatement	"const short order [ 19 ] = { 16 , 17 , 18 , 0 , 8 , 7 , 9 , 6 , 10 , 5 , 11 , 4 , 12 , 3 , 13 , 2 , 14 , 1 , 15 } ;"	674:11:30745:30887	11210545	8	True				
ANR	11210602	IdentifierDecl	"order [ 19 ] = { 16 , 17 , 18 , 0 , 8 , 7 , 9 , 6 , 10 , 5 , 11 , 4 , 12 , 3 , 13 , 2 , 14 , 1 , 15 }"		11210545	0					
ANR	11210603	IdentifierDeclType	const short [ 19 ]		11210545	0					
ANR	11210604	Identifier	order		11210545	1					
ANR	11210605	PrimaryExpression	19		11210545	2					
ANR	11210606	AssignmentExpression	"order [ 19 ] = { 16 , 17 , 18 , 0 , 8 , 7 , 9 , 6 , 10 , 5 , 11 , 4 , 12 , 3 , 13 , 2 , 14 , 1 , 15 }"		11210545	3		=			
ANR	11210607	Identifier	order		11210545	0					
ANR	11210608	InitializerList	16		11210545	1					
ANR	11210609	PrimaryExpression	16		11210545	0					
ANR	11210610	PrimaryExpression	17		11210545	1					
ANR	11210611	PrimaryExpression	18		11210545	2					
ANR	11210612	PrimaryExpression	0		11210545	3					
ANR	11210613	PrimaryExpression	8		11210545	4					
ANR	11210614	PrimaryExpression	7		11210545	5					
ANR	11210615	PrimaryExpression	9		11210545	6					
ANR	11210616	PrimaryExpression	6		11210545	7					
ANR	11210617	PrimaryExpression	10		11210545	8					
ANR	11210618	PrimaryExpression	5		11210545	9					
ANR	11210619	PrimaryExpression	11		11210545	10					
ANR	11210620	PrimaryExpression	4		11210545	11					
ANR	11210621	PrimaryExpression	12		11210545	12					
ANR	11210622	PrimaryExpression	3		11210545	13					
ANR	11210623	PrimaryExpression	13		11210545	14					
ANR	11210624	PrimaryExpression	2		11210545	15					
ANR	11210625	PrimaryExpression	14		11210545	16					
ANR	11210626	PrimaryExpression	1		11210545	17					
ANR	11210627	PrimaryExpression	15		11210545	18					
ANR	11210628	ExpressionStatement	lencode . count = lencnt	678:4:30935:30957	11210545	9	True				
ANR	11210629	AssignmentExpression	lencode . count = lencnt		11210545	0		=			
ANR	11210630	MemberAccess	lencode . count		11210545	0					
ANR	11210631	Identifier	lencode		11210545	0					
ANR	11210632	Identifier	count		11210545	1					
ANR	11210633	Identifier	lencnt		11210545	1					
ANR	11210634	ExpressionStatement	lencode . symbol = lensym	679:4:30963:30986	11210545	10	True				
ANR	11210635	AssignmentExpression	lencode . symbol = lensym		11210545	0		=			
ANR	11210636	MemberAccess	lencode . symbol		11210545	0					
ANR	11210637	Identifier	lencode		11210545	0					
ANR	11210638	Identifier	symbol		11210545	1					
ANR	11210639	Identifier	lensym		11210545	1					
ANR	11210640	ExpressionStatement	distcode . count = distcnt	680:4:30992:31016	11210545	11	True				
ANR	11210641	AssignmentExpression	distcode . count = distcnt		11210545	0		=			
ANR	11210642	MemberAccess	distcode . count		11210545	0					
ANR	11210643	Identifier	distcode		11210545	0					
ANR	11210644	Identifier	count		11210545	1					
ANR	11210645	Identifier	distcnt		11210545	1					
ANR	11210646	ExpressionStatement	distcode . symbol = distsym	681:4:31022:31047	11210545	12	True				
ANR	11210647	AssignmentExpression	distcode . symbol = distsym		11210545	0		=			
ANR	11210648	MemberAccess	distcode . symbol		11210545	0					
ANR	11210649	Identifier	distcode		11210545	0					
ANR	11210650	Identifier	symbol		11210545	1					
ANR	11210651	Identifier	distsym		11210545	1					
ANR	11210652	ExpressionStatement	"nlen = bits ( s , 5 ) + 257"	684:4:31115:31138	11210545	13	True				
ANR	11210653	AssignmentExpression	"nlen = bits ( s , 5 ) + 257"		11210545	0		=			
ANR	11210654	Identifier	nlen		11210545	0					
ANR	11210655	AdditiveExpression	"bits ( s , 5 ) + 257"		11210545	1		+			
ANR	11210656	CallExpression	"bits ( s , 5 )"		11210545	0					
ANR	11210657	Callee	bits		11210545	0					
ANR	11210658	Identifier	bits		11210545	0					
ANR	11210659	ArgumentList	s		11210545	1					
ANR	11210660	Argument	s		11210545	0					
ANR	11210661	Identifier	s		11210545	0					
ANR	11210662	Argument	5		11210545	1					
ANR	11210663	PrimaryExpression	5		11210545	0					
ANR	11210664	PrimaryExpression	257		11210545	1					
ANR	11210665	ExpressionStatement	"ndist = bits ( s , 5 ) + 1"	685:4:31144:31166	11210545	14	True				
ANR	11210666	AssignmentExpression	"ndist = bits ( s , 5 ) + 1"		11210545	0		=			
ANR	11210667	Identifier	ndist		11210545	0					
ANR	11210668	AdditiveExpression	"bits ( s , 5 ) + 1"		11210545	1		+			
ANR	11210669	CallExpression	"bits ( s , 5 )"		11210545	0					
ANR	11210670	Callee	bits		11210545	0					
ANR	11210671	Identifier	bits		11210545	0					
ANR	11210672	ArgumentList	s		11210545	1					
ANR	11210673	Argument	s		11210545	0					
ANR	11210674	Identifier	s		11210545	0					
ANR	11210675	Argument	5		11210545	1					
ANR	11210676	PrimaryExpression	5		11210545	0					
ANR	11210677	PrimaryExpression	1		11210545	1					
ANR	11210678	ExpressionStatement	"ncode = bits ( s , 4 ) + 4"	686:4:31172:31194	11210545	15	True				
ANR	11210679	AssignmentExpression	"ncode = bits ( s , 4 ) + 4"		11210545	0		=			
ANR	11210680	Identifier	ncode		11210545	0					
ANR	11210681	AdditiveExpression	"bits ( s , 4 ) + 4"		11210545	1		+			
ANR	11210682	CallExpression	"bits ( s , 4 )"		11210545	0					
ANR	11210683	Callee	bits		11210545	0					
ANR	11210684	Identifier	bits		11210545	0					
ANR	11210685	ArgumentList	s		11210545	1					
ANR	11210686	Argument	s		11210545	0					
ANR	11210687	Identifier	s		11210545	0					
ANR	11210688	Argument	4		11210545	1					
ANR	11210689	PrimaryExpression	4		11210545	0					
ANR	11210690	PrimaryExpression	4		11210545	1					
ANR	11210691	IfStatement	if ( nlen > MAXLCODES || ndist > MAXDCODES )		11210545	16					
ANR	11210692	Condition	nlen > MAXLCODES || ndist > MAXDCODES	687:8:31204:31240	11210545	0	True				
ANR	11210693	OrExpression	nlen > MAXLCODES || ndist > MAXDCODES		11210545	0		||			
ANR	11210694	RelationalExpression	nlen > MAXLCODES		11210545	0		>			
ANR	11210695	Identifier	nlen		11210545	0					
ANR	11210696	Identifier	MAXLCODES		11210545	1					
ANR	11210697	RelationalExpression	ndist > MAXDCODES		11210545	1		>			
ANR	11210698	Identifier	ndist		11210545	0					
ANR	11210699	Identifier	MAXDCODES		11210545	1					
ANR	11210700	ReturnStatement	return - 3 ;	688:8:31251:31260	11210545	1	True				
ANR	11210701	UnaryOperationExpression	- 3		11210545	0					
ANR	11210702	UnaryOperator	-		11210545	0					
ANR	11210703	PrimaryExpression	3		11210545	1					
ANR	11210704	ForStatement	for ( index = 0 ; index < ncode ; index ++ )		11210545	17					
ANR	11210705	ForInit	index = 0 ;	691:9:31385:31394	11210545	0	True				
ANR	11210706	AssignmentExpression	index = 0		11210545	0		=			
ANR	11210707	Identifier	index		11210545	0					
ANR	11210708	PrimaryExpression	0		11210545	1					
ANR	11210709	Condition	index < ncode	691:20:31396:31408	11210545	1	True				
ANR	11210710	RelationalExpression	index < ncode		11210545	0		<			
ANR	11210711	Identifier	index		11210545	0					
ANR	11210712	Identifier	ncode		11210545	1					
ANR	11210713	PostIncDecOperationExpression	index ++	691:35:31411:31417	11210545	2	True				
ANR	11210714	Identifier	index		11210545	0					
ANR	11210715	IncDec	++		11210545	1					
ANR	11210716	ExpressionStatement	"lengths [ order [ index ] ] = bits ( s , 3 )"	692:8:31428:31462	11210545	3	True				
ANR	11210717	AssignmentExpression	"lengths [ order [ index ] ] = bits ( s , 3 )"		11210545	0		=			
ANR	11210718	ArrayIndexing	lengths [ order [ index ] ]		11210545	0					
ANR	11210719	Identifier	lengths		11210545	0					
ANR	11210720	ArrayIndexing	order [ index ]		11210545	1					
ANR	11210721	Identifier	order		11210545	0					
ANR	11210722	Identifier	index		11210545	1					
ANR	11210723	CallExpression	"bits ( s , 3 )"		11210545	1					
ANR	11210724	Callee	bits		11210545	0					
ANR	11210725	Identifier	bits		11210545	0					
ANR	11210726	ArgumentList	s		11210545	1					
ANR	11210727	Argument	s		11210545	0					
ANR	11210728	Identifier	s		11210545	0					
ANR	11210729	Argument	3		11210545	1					
ANR	11210730	PrimaryExpression	3		11210545	0					
ANR	11210731	ForStatement	for ( ; index < 19 ; index ++ )		11210545	18					
ANR	11210732	Condition	index < 19	693:11:31475:31484	11210545	0	True				
ANR	11210733	RelationalExpression	index < 19		11210545	0		<			
ANR	11210734	Identifier	index		11210545	0					
ANR	11210735	PrimaryExpression	19		11210545	1					
ANR	11210736	PostIncDecOperationExpression	index ++	693:23:31487:31493	11210545	1	True				
ANR	11210737	Identifier	index		11210545	0					
ANR	11210738	IncDec	++		11210545	1					
ANR	11210739	ExpressionStatement	lengths [ order [ index ] ] = 0	694:8:31504:31529	11210545	2	True				
ANR	11210740	AssignmentExpression	lengths [ order [ index ] ] = 0		11210545	0		=			
ANR	11210741	ArrayIndexing	lengths [ order [ index ] ]		11210545	0					
ANR	11210742	Identifier	lengths		11210545	0					
ANR	11210743	ArrayIndexing	order [ index ]		11210545	1					
ANR	11210744	Identifier	order		11210545	0					
ANR	11210745	Identifier	index		11210545	1					
ANR	11210746	PrimaryExpression	0		11210545	1					
ANR	11210747	ExpressionStatement	"err = construct ( & lencode , lengths , 19 )"	697:4:31615:31653	11210545	19	True				
ANR	11210748	AssignmentExpression	"err = construct ( & lencode , lengths , 19 )"		11210545	0		=			
ANR	11210749	Identifier	err		11210545	0					
ANR	11210750	CallExpression	"construct ( & lencode , lengths , 19 )"		11210545	1					
ANR	11210751	Callee	construct		11210545	0					
ANR	11210752	Identifier	construct		11210545	0					
ANR	11210753	ArgumentList	& lencode		11210545	1					
ANR	11210754	Argument	& lencode		11210545	0					
ANR	11210755	UnaryOperationExpression	& lencode		11210545	0					
ANR	11210756	UnaryOperator	&		11210545	0					
ANR	11210757	Identifier	lencode		11210545	1					
ANR	11210758	Argument	lengths		11210545	1					
ANR	11210759	Identifier	lengths		11210545	0					
ANR	11210760	Argument	19		11210545	2					
ANR	11210761	PrimaryExpression	19		11210545	0					
ANR	11210762	IfStatement	if ( err != 0 )		11210545	20					
ANR	11210763	Condition	err != 0	698:8:31663:31670	11210545	0	True				
ANR	11210764	EqualityExpression	err != 0		11210545	0		!=			
ANR	11210765	Identifier	err		11210545	0					
ANR	11210766	PrimaryExpression	0		11210545	1					
ANR	11210767	ReturnStatement	return - 4 ;	699:8:31732:31741	11210545	1	True				
ANR	11210768	UnaryOperationExpression	- 4		11210545	0					
ANR	11210769	UnaryOperator	-		11210545	0					
ANR	11210770	PrimaryExpression	4		11210545	1					
ANR	11210771	ExpressionStatement	index = 0	702:4:31810:31819	11210545	21	True				
ANR	11210772	AssignmentExpression	index = 0		11210545	0		=			
ANR	11210773	Identifier	index		11210545	0					
ANR	11210774	PrimaryExpression	0		11210545	1					
ANR	11210775	WhileStatement	while ( index < nlen + ndist )		11210545	22					
ANR	11210776	Condition	index < nlen + ndist	703:11:31832:31851	11210545	0	True				
ANR	11210777	RelationalExpression	index < nlen + ndist		11210545	0		<			
ANR	11210778	Identifier	index		11210545	0					
ANR	11210779	AdditiveExpression	nlen + ndist		11210545	1		+			
ANR	11210780	Identifier	nlen		11210545	0					
ANR	11210781	Identifier	ndist		11210545	1					
ANR	11210782	CompoundStatement		40:8:1694:1701	11210545	1					
ANR	11210783	IdentifierDeclStatement	int symbol ;	704:8:31864:31874	11210545	0	True				
ANR	11210784	IdentifierDecl	symbol		11210545	0					
ANR	11210785	IdentifierDeclType	int		11210545	0					
ANR	11210786	Identifier	symbol		11210545	1					
ANR	11210787	IdentifierDeclStatement	int len ;	705:8:31916:31923	11210545	1	True				
ANR	11210788	IdentifierDecl	len		11210545	0					
ANR	11210789	IdentifierDeclType	int		11210545	0					
ANR	11210790	Identifier	len		11210545	1					
ANR	11210791	ExpressionStatement	"symbol = decode ( s , & lencode )"	707:8:31977:32005	11210545	2	True				
ANR	11210792	AssignmentExpression	"symbol = decode ( s , & lencode )"		11210545	0		=			
ANR	11210793	Identifier	symbol		11210545	0					
ANR	11210794	CallExpression	"decode ( s , & lencode )"		11210545	1					
ANR	11210795	Callee	decode		11210545	0					
ANR	11210796	Identifier	decode		11210545	0					
ANR	11210797	ArgumentList	s		11210545	1					
ANR	11210798	Argument	s		11210545	0					
ANR	11210799	Identifier	s		11210545	0					
ANR	11210800	Argument	& lencode		11210545	1					
ANR	11210801	UnaryOperationExpression	& lencode		11210545	0					
ANR	11210802	UnaryOperator	&		11210545	0					
ANR	11210803	Identifier	lencode		11210545	1					
ANR	11210804	IfStatement	if ( symbol < 0 )		11210545	3					
ANR	11210805	Condition	symbol < 0	708:12:32019:32028	11210545	0	True				
ANR	11210806	RelationalExpression	symbol < 0		11210545	0		<			
ANR	11210807	Identifier	symbol		11210545	0					
ANR	11210808	PrimaryExpression	0		11210545	1					
ANR	11210809	ReturnStatement	return symbol ;	709:12:32043:32056	11210545	1	True				
ANR	11210810	Identifier	symbol		11210545	0					
ANR	11210811	IfStatement	if ( symbol < 16 )		11210545	4					
ANR	11210812	Condition	symbol < 16	710:12:32100:32110	11210545	0	True				
ANR	11210813	RelationalExpression	symbol < 16		11210545	0		<			
ANR	11210814	Identifier	symbol		11210545	0					
ANR	11210815	PrimaryExpression	16		11210545	1					
ANR	11210816	ExpressionStatement	lengths [ index ++ ] = symbol	711:12:32162:32187	11210545	1	True				
ANR	11210817	AssignmentExpression	lengths [ index ++ ] = symbol		11210545	0		=			
ANR	11210818	ArrayIndexing	lengths [ index ++ ]		11210545	0					
ANR	11210819	Identifier	lengths		11210545	0					
ANR	11210820	PostIncDecOperationExpression	index ++		11210545	1					
ANR	11210821	Identifier	index		11210545	0					
ANR	11210822	IncDec	++		11210545	1					
ANR	11210823	Identifier	symbol		11210545	1					
ANR	11210824	ElseStatement	else		11210545	0					
ANR	11210825	CompoundStatement		47:13:1980:1980	11210545	0					
ANR	11210826	ExpressionStatement	len = 0	713:12:32266:32273	11210545	0	True				
ANR	11210827	AssignmentExpression	len = 0		11210545	0		=			
ANR	11210828	Identifier	len		11210545	0					
ANR	11210829	PrimaryExpression	0		11210545	1					
ANR	11210830	IfStatement	if ( symbol == 16 )		11210545	1					
ANR	11210831	Condition	symbol == 16	714:16:32339:32350	11210545	0	True				
ANR	11210832	EqualityExpression	symbol == 16		11210545	0		==			
ANR	11210833	Identifier	symbol		11210545	0					
ANR	11210834	PrimaryExpression	16		11210545	1					
ANR	11210835	CompoundStatement		49:30:2131:2131	11210545	1					
ANR	11210836	IfStatement	if ( index == 0 )		11210545	0					
ANR	11210837	Condition	index == 0	715:20:32419:32428	11210545	0	True				
ANR	11210838	EqualityExpression	index == 0		11210545	0		==			
ANR	11210839	Identifier	index		11210545	0					
ANR	11210840	PrimaryExpression	0		11210545	1					
ANR	11210841	ReturnStatement	return - 5 ;	716:20:32451:32460	11210545	1	True				
ANR	11210842	UnaryOperationExpression	- 5		11210545	0					
ANR	11210843	UnaryOperator	-		11210545	0					
ANR	11210844	PrimaryExpression	5		11210545	1					
ANR	11210845	ExpressionStatement	len = lengths [ index - 1 ]	717:16:32509:32533	11210545	1	True				
ANR	11210846	AssignmentExpression	len = lengths [ index - 1 ]		11210545	0		=			
ANR	11210847	Identifier	len		11210545	0					
ANR	11210848	ArrayIndexing	lengths [ index - 1 ]		11210545	1					
ANR	11210849	Identifier	lengths		11210545	0					
ANR	11210850	AdditiveExpression	index - 1		11210545	1		-			
ANR	11210851	Identifier	index		11210545	0					
ANR	11210852	PrimaryExpression	1		11210545	1					
ANR	11210853	ExpressionStatement	"symbol = 3 + bits ( s , 2 )"	718:16:32575:32598	11210545	2	True				
ANR	11210854	AssignmentExpression	"symbol = 3 + bits ( s , 2 )"		11210545	0		=			
ANR	11210855	Identifier	symbol		11210545	0					
ANR	11210856	AdditiveExpression	"3 + bits ( s , 2 )"		11210545	1		+			
ANR	11210857	PrimaryExpression	3		11210545	0					
ANR	11210858	CallExpression	"bits ( s , 2 )"		11210545	1					
ANR	11210859	Callee	bits		11210545	0					
ANR	11210860	Identifier	bits		11210545	0					
ANR	11210861	ArgumentList	s		11210545	1					
ANR	11210862	Argument	s		11210545	0					
ANR	11210863	Identifier	s		11210545	0					
ANR	11210864	Argument	2		11210545	1					
ANR	11210865	PrimaryExpression	2		11210545	0					
ANR	11210866	ElseStatement	else		11210545	0					
ANR	11210867	IfStatement	if ( symbol == 17 )		11210545	0					
ANR	11210868	Condition	symbol == 17	720:21:32635:32646	11210545	0	True				
ANR	11210869	EqualityExpression	symbol == 17		11210545	0		==			
ANR	11210870	Identifier	symbol		11210545	0					
ANR	11210871	PrimaryExpression	17		11210545	1					
ANR	11210872	ExpressionStatement	"symbol = 3 + bits ( s , 3 )"	721:16:32700:32723	11210545	1	True				
ANR	11210873	AssignmentExpression	"symbol = 3 + bits ( s , 3 )"		11210545	0		=			
ANR	11210874	Identifier	symbol		11210545	0					
ANR	11210875	AdditiveExpression	"3 + bits ( s , 3 )"		11210545	1		+			
ANR	11210876	PrimaryExpression	3		11210545	0					
ANR	11210877	CallExpression	"bits ( s , 3 )"		11210545	1					
ANR	11210878	Callee	bits		11210545	0					
ANR	11210879	Identifier	bits		11210545	0					
ANR	11210880	ArgumentList	s		11210545	1					
ANR	11210881	Argument	s		11210545	0					
ANR	11210882	Identifier	s		11210545	0					
ANR	11210883	Argument	3		11210545	1					
ANR	11210884	PrimaryExpression	3		11210545	0					
ANR	11210885	ElseStatement	else		11210545	0					
ANR	11210886	ExpressionStatement	"symbol = 11 + bits ( s , 7 )"	723:16:32820:32844	11210545	0	True				
ANR	11210887	AssignmentExpression	"symbol = 11 + bits ( s , 7 )"		11210545	0		=			
ANR	11210888	Identifier	symbol		11210545	0					
ANR	11210889	AdditiveExpression	"11 + bits ( s , 7 )"		11210545	1		+			
ANR	11210890	PrimaryExpression	11		11210545	0					
ANR	11210891	CallExpression	"bits ( s , 7 )"		11210545	1					
ANR	11210892	Callee	bits		11210545	0					
ANR	11210893	Identifier	bits		11210545	0					
ANR	11210894	ArgumentList	s		11210545	1					
ANR	11210895	Argument	s		11210545	0					
ANR	11210896	Identifier	s		11210545	0					
ANR	11210897	Argument	7		11210545	1					
ANR	11210898	PrimaryExpression	7		11210545	0					
ANR	11210899	IfStatement	if ( index + symbol > nlen + ndist )		11210545	2					
ANR	11210900	Condition	index + symbol > nlen + ndist	724:16:32862:32890	11210545	0	True				
ANR	11210901	RelationalExpression	index + symbol > nlen + ndist		11210545	0		>			
ANR	11210902	AdditiveExpression	index + symbol		11210545	0		+			
ANR	11210903	Identifier	index		11210545	0					
ANR	11210904	Identifier	symbol		11210545	1					
ANR	11210905	AdditiveExpression	nlen + ndist		11210545	1		+			
ANR	11210906	Identifier	nlen		11210545	0					
ANR	11210907	Identifier	ndist		11210545	1					
ANR	11210908	ReturnStatement	return - 6 ;	725:16:32909:32918	11210545	1	True				
ANR	11210909	UnaryOperationExpression	- 6		11210545	0					
ANR	11210910	UnaryOperator	-		11210545	0					
ANR	11210911	PrimaryExpression	6		11210545	1					
ANR	11210912	WhileStatement	while ( symbol -- )		11210545	3					
ANR	11210913	Condition	symbol --	726:19:32976:32983	11210545	0	True				
ANR	11210914	PostIncDecOperationExpression	symbol --		11210545	0					
ANR	11210915	Identifier	symbol		11210545	0					
ANR	11210916	IncDec	--		11210545	1					
ANR	11210917	ExpressionStatement	lengths [ index ++ ] = len	727:16:33052:33074	11210545	1	True				
ANR	11210918	AssignmentExpression	lengths [ index ++ ] = len		11210545	0		=			
ANR	11210919	ArrayIndexing	lengths [ index ++ ]		11210545	0					
ANR	11210920	Identifier	lengths		11210545	0					
ANR	11210921	PostIncDecOperationExpression	index ++		11210545	1					
ANR	11210922	Identifier	index		11210545	0					
ANR	11210923	IncDec	++		11210545	1					
ANR	11210924	Identifier	len		11210545	1					
ANR	11210925	IfStatement	if ( lengths [ 256 ] == 0 )		11210545	23					
ANR	11210926	Condition	lengths [ 256 ] == 0	732:8:33163:33179	11210545	0	True				
ANR	11210927	EqualityExpression	lengths [ 256 ] == 0		11210545	0		==			
ANR	11210928	ArrayIndexing	lengths [ 256 ]		11210545	0					
ANR	11210929	Identifier	lengths		11210545	0					
ANR	11210930	PrimaryExpression	256		11210545	1					
ANR	11210931	PrimaryExpression	0		11210545	1					
ANR	11210932	ReturnStatement	return - 9 ;	733:8:33190:33199	11210545	1	True				
ANR	11210933	UnaryOperationExpression	- 9		11210545	0					
ANR	11210934	UnaryOperator	-		11210545	0					
ANR	11210935	PrimaryExpression	9		11210545	1					
ANR	11210936	ExpressionStatement	"err = construct ( & lencode , lengths , nlen )"	736:4:33261:33301	11210545	24	True				
ANR	11210937	AssignmentExpression	"err = construct ( & lencode , lengths , nlen )"		11210545	0		=			
ANR	11210938	Identifier	err		11210545	0					
ANR	11210939	CallExpression	"construct ( & lencode , lengths , nlen )"		11210545	1					
ANR	11210940	Callee	construct		11210545	0					
ANR	11210941	Identifier	construct		11210545	0					
ANR	11210942	ArgumentList	& lencode		11210545	1					
ANR	11210943	Argument	& lencode		11210545	0					
ANR	11210944	UnaryOperationExpression	& lencode		11210545	0					
ANR	11210945	UnaryOperator	&		11210545	0					
ANR	11210946	Identifier	lencode		11210545	1					
ANR	11210947	Argument	lengths		11210545	1					
ANR	11210948	Identifier	lengths		11210545	0					
ANR	11210949	Argument	nlen		11210545	2					
ANR	11210950	Identifier	nlen		11210545	0					
ANR	11210951	IfStatement	if ( err && ( err < 0 || nlen != lencode . count [ 0 ] + lencode . count [ 1 ] ) )		11210545	25					
ANR	11210952	Condition	err && ( err < 0 || nlen != lencode . count [ 0 ] + lencode . count [ 1 ] )	737:8:33311:33373	11210545	0	True				
ANR	11210953	AndExpression	err && ( err < 0 || nlen != lencode . count [ 0 ] + lencode . count [ 1 ] )		11210545	0		&&			
ANR	11210954	Identifier	err		11210545	0					
ANR	11210955	OrExpression	err < 0 || nlen != lencode . count [ 0 ] + lencode . count [ 1 ]		11210545	1		||			
ANR	11210956	RelationalExpression	err < 0		11210545	0		<			
ANR	11210957	Identifier	err		11210545	0					
ANR	11210958	PrimaryExpression	0		11210545	1					
ANR	11210959	EqualityExpression	nlen != lencode . count [ 0 ] + lencode . count [ 1 ]		11210545	1		!=			
ANR	11210960	Identifier	nlen		11210545	0					
ANR	11210961	AdditiveExpression	lencode . count [ 0 ] + lencode . count [ 1 ]		11210545	1		+			
ANR	11210962	ArrayIndexing	lencode . count [ 0 ]		11210545	0					
ANR	11210963	MemberAccess	lencode . count		11210545	0					
ANR	11210964	Identifier	lencode		11210545	0					
ANR	11210965	Identifier	count		11210545	1					
ANR	11210966	PrimaryExpression	0		11210545	1					
ANR	11210967	ArrayIndexing	lencode . count [ 1 ]		11210545	1					
ANR	11210968	MemberAccess	lencode . count		11210545	0					
ANR	11210969	Identifier	lencode		11210545	0					
ANR	11210970	Identifier	count		11210545	1					
ANR	11210971	PrimaryExpression	1		11210545	1					
ANR	11210972	ReturnStatement	return - 7 ;	738:8:33384:33393	11210545	1	True				
ANR	11210973	UnaryOperationExpression	- 7		11210545	0					
ANR	11210974	UnaryOperator	-		11210545	0					
ANR	11210975	PrimaryExpression	7		11210545	1					
ANR	11210976	ExpressionStatement	"err = construct ( & distcode , lengths + nlen , ndist )"	741:4:33509:33558	11210545	26	True				
ANR	11210977	AssignmentExpression	"err = construct ( & distcode , lengths + nlen , ndist )"		11210545	0		=			
ANR	11210978	Identifier	err		11210545	0					
ANR	11210979	CallExpression	"construct ( & distcode , lengths + nlen , ndist )"		11210545	1					
ANR	11210980	Callee	construct		11210545	0					
ANR	11210981	Identifier	construct		11210545	0					
ANR	11210982	ArgumentList	& distcode		11210545	1					
ANR	11210983	Argument	& distcode		11210545	0					
ANR	11210984	UnaryOperationExpression	& distcode		11210545	0					
ANR	11210985	UnaryOperator	&		11210545	0					
ANR	11210986	Identifier	distcode		11210545	1					
ANR	11210987	Argument	lengths + nlen		11210545	1					
ANR	11210988	AdditiveExpression	lengths + nlen		11210545	0		+			
ANR	11210989	Identifier	lengths		11210545	0					
ANR	11210990	Identifier	nlen		11210545	1					
ANR	11210991	Argument	ndist		11210545	2					
ANR	11210992	Identifier	ndist		11210545	0					
ANR	11210993	IfStatement	if ( err && ( err < 0 || ndist != distcode . count [ 0 ] + distcode . count [ 1 ] ) )		11210545	27					
ANR	11210994	Condition	err && ( err < 0 || ndist != distcode . count [ 0 ] + distcode . count [ 1 ] )	742:8:33568:33633	11210545	0	True				
ANR	11210995	AndExpression	err && ( err < 0 || ndist != distcode . count [ 0 ] + distcode . count [ 1 ] )		11210545	0		&&			
ANR	11210996	Identifier	err		11210545	0					
ANR	11210997	OrExpression	err < 0 || ndist != distcode . count [ 0 ] + distcode . count [ 1 ]		11210545	1		||			
ANR	11210998	RelationalExpression	err < 0		11210545	0		<			
ANR	11210999	Identifier	err		11210545	0					
ANR	11211000	PrimaryExpression	0		11210545	1					
ANR	11211001	EqualityExpression	ndist != distcode . count [ 0 ] + distcode . count [ 1 ]		11210545	1		!=			
ANR	11211002	Identifier	ndist		11210545	0					
ANR	11211003	AdditiveExpression	distcode . count [ 0 ] + distcode . count [ 1 ]		11210545	1		+			
ANR	11211004	ArrayIndexing	distcode . count [ 0 ]		11210545	0					
ANR	11211005	MemberAccess	distcode . count		11210545	0					
ANR	11211006	Identifier	distcode		11210545	0					
ANR	11211007	Identifier	count		11210545	1					
ANR	11211008	PrimaryExpression	0		11210545	1					
ANR	11211009	ArrayIndexing	distcode . count [ 1 ]		11210545	1					
ANR	11211010	MemberAccess	distcode . count		11210545	0					
ANR	11211011	Identifier	distcode		11210545	0					
ANR	11211012	Identifier	count		11210545	1					
ANR	11211013	PrimaryExpression	1		11210545	1					
ANR	11211014	ReturnStatement	return - 8 ;	743:8:33644:33653	11210545	1	True				
ANR	11211015	UnaryOperationExpression	- 8		11210545	0					
ANR	11211016	UnaryOperator	-		11210545	0					
ANR	11211017	PrimaryExpression	8		11210545	1					
ANR	11211018	ReturnStatement	"return codes ( s , & lencode , & distcode ) ;"	746:4:33766:33802	11210545	28	True				
ANR	11211019	CallExpression	"codes ( s , & lencode , & distcode )"		11210545	0					
ANR	11211020	Callee	codes		11210545	0					
ANR	11211021	Identifier	codes		11210545	0					
ANR	11211022	ArgumentList	s		11210545	1					
ANR	11211023	Argument	s		11210545	0					
ANR	11211024	Identifier	s		11210545	0					
ANR	11211025	Argument	& lencode		11210545	1					
ANR	11211026	UnaryOperationExpression	& lencode		11210545	0					
ANR	11211027	UnaryOperator	&		11210545	0					
ANR	11211028	Identifier	lencode		11210545	1					
ANR	11211029	Argument	& distcode		11210545	2					
ANR	11211030	UnaryOperationExpression	& distcode		11210545	0					
ANR	11211031	UnaryOperator	&		11210545	0					
ANR	11211032	Identifier	distcode		11210545	1					
ANR	11211033	ReturnType	local int		11210545	1					
ANR	11211034	Identifier	dynamic		11210545	2					
ANR	11211035	ParameterList	struct state * s		11210545	3					
ANR	11211036	Parameter	struct state * s	665:18:30204:30218	11210545	0	True				
ANR	11211037	ParameterType	struct state *		11210545	0					
ANR	11211038	Identifier	s		11210545	1					
ANR	11211039	CFGEntryNode	ENTRY		11210545		True				
ANR	11211040	CFGExitNode	EXIT		11210545		True				
ANR	11211041	Symbol	symbol		11210545						
ANR	11211042	Symbol	codes		11210545						
ANR	11211043	Symbol	MAXDCODES		11210545						
ANR	11211044	Symbol	* lencode . count		11210545						
ANR	11211045	Symbol	* distcode		11210545						
ANR	11211046	Symbol	distsym		11210545						
ANR	11211047	Symbol	* index		11210545						
ANR	11211048	Symbol	construct		11210545						
ANR	11211049	Symbol	decode		11210545						
ANR	11211050	Symbol	& lencode		11210545						
ANR	11211051	Symbol	lencode . count		11210545						
ANR	11211052	Symbol	* lengths		11210545						
ANR	11211053	Symbol	distcode . symbol		11210545						
ANR	11211054	Symbol	nlen		11210545						
ANR	11211055	Symbol	len		11210545						
ANR	11211056	Symbol	MAXLCODES		11210545						
ANR	11211057	Symbol	* lencode		11210545						
ANR	11211058	Symbol	lensym		11210545						
ANR	11211059	Symbol	distcode . count		11210545						
ANR	11211060	Symbol	* * index		11210545						
ANR	11211061	Symbol	order		11210545						
ANR	11211062	Symbol	distcode		11210545						
ANR	11211063	Symbol	err		11210545						
ANR	11211064	Symbol	distcnt		11210545						
ANR	11211065	Symbol	lencode . symbol		11210545						
ANR	11211066	Symbol	ncode		11210545						
ANR	11211067	Symbol	bits		11210545						
ANR	11211068	Symbol	ndist		11210545						
ANR	11211069	Symbol	index		11210545						
ANR	11211070	Symbol	* order		11210545						
ANR	11211071	Symbol	& distcode		11210545						
ANR	11211072	Symbol	* * order		11210545						
ANR	11211073	Symbol	* distcode . count		11210545						
ANR	11211074	Symbol	s		11210545						
ANR	11211075	Symbol	lengths		11210545						
ANR	11211076	Symbol	lencode		11210545						
ANR	11211077	Symbol	lencnt		11210545						
ANR	11211078	Function	puff	793:0:36173:37881							
ANR	11211079	FunctionDef	"puff (unsigned char * dest , unsigned long * destlen , const unsigned char * source , unsigned long * sourcelen)"		11211078	0					
ANR	11211080	CompoundStatement		797:0:36468:37881	11211078	0					
ANR	11211081	IdentifierDeclStatement	struct state s ;	798:4:36474:36488	11211078	0	True				
ANR	11211082	IdentifierDecl	s		11211078	0					
ANR	11211083	IdentifierDeclType	struct state		11211078	0					
ANR	11211084	Identifier	s		11211078	1					
ANR	11211085	IdentifierDeclStatement	"int last , type ;"	799:4:36531:36545	11211078	1	True				
ANR	11211086	IdentifierDecl	last		11211078	0					
ANR	11211087	IdentifierDeclType	int		11211078	0					
ANR	11211088	Identifier	last		11211078	1					
ANR	11211089	IdentifierDecl	type		11211078	1					
ANR	11211090	IdentifierDeclType	int		11211078	0					
ANR	11211091	Identifier	type		11211078	1					
ANR	11211092	IdentifierDeclStatement	int err ;	800:4:36587:36594	11211078	2	True				
ANR	11211093	IdentifierDecl	err		11211078	0					
ANR	11211094	IdentifierDeclType	int		11211078	0					
ANR	11211095	Identifier	err		11211078	1					
ANR	11211096	ExpressionStatement	s . out = dest	803:4:36673:36685	11211078	3	True				
ANR	11211097	AssignmentExpression	s . out = dest		11211078	0		=			
ANR	11211098	MemberAccess	s . out		11211078	0					
ANR	11211099	Identifier	s		11211078	0					
ANR	11211100	Identifier	out		11211078	1					
ANR	11211101	Identifier	dest		11211078	1					
ANR	11211102	ExpressionStatement	s . outlen = * destlen	804:4:36691:36710	11211078	4	True				
ANR	11211103	AssignmentExpression	s . outlen = * destlen		11211078	0		=			
ANR	11211104	MemberAccess	s . outlen		11211078	0					
ANR	11211105	Identifier	s		11211078	0					
ANR	11211106	Identifier	outlen		11211078	1					
ANR	11211107	UnaryOperationExpression	* destlen		11211078	1					
ANR	11211108	UnaryOperator	*		11211078	0					
ANR	11211109	Identifier	destlen		11211078	1					
ANR	11211110	ExpressionStatement	s . outcnt = 0	805:4:36760:36772	11211078	5	True				
ANR	11211111	AssignmentExpression	s . outcnt = 0		11211078	0		=			
ANR	11211112	MemberAccess	s . outcnt		11211078	0					
ANR	11211113	Identifier	s		11211078	0					
ANR	11211114	Identifier	outcnt		11211078	1					
ANR	11211115	PrimaryExpression	0		11211078	1					
ANR	11211116	ExpressionStatement	s . in = source	808:4:36812:36825	11211078	6	True				
ANR	11211117	AssignmentExpression	s . in = source		11211078	0		=			
ANR	11211118	MemberAccess	s . in		11211078	0					
ANR	11211119	Identifier	s		11211078	0					
ANR	11211120	Identifier	in		11211078	1					
ANR	11211121	Identifier	source		11211078	1					
ANR	11211122	ExpressionStatement	s . inlen = * sourcelen	809:4:36831:36851	11211078	7	True				
ANR	11211123	AssignmentExpression	s . inlen = * sourcelen		11211078	0		=			
ANR	11211124	MemberAccess	s . inlen		11211078	0					
ANR	11211125	Identifier	s		11211078	0					
ANR	11211126	Identifier	inlen		11211078	1					
ANR	11211127	UnaryOperationExpression	* sourcelen		11211078	1					
ANR	11211128	UnaryOperator	*		11211078	0					
ANR	11211129	Identifier	sourcelen		11211078	1					
ANR	11211130	ExpressionStatement	s . incnt = 0	810:4:36857:36868	11211078	8	True				
ANR	11211131	AssignmentExpression	s . incnt = 0		11211078	0		=			
ANR	11211132	MemberAccess	s . incnt		11211078	0					
ANR	11211133	Identifier	s		11211078	0					
ANR	11211134	Identifier	incnt		11211078	1					
ANR	11211135	PrimaryExpression	0		11211078	1					
ANR	11211136	ExpressionStatement	s . bitbuf = 0	811:4:36874:36886	11211078	9	True				
ANR	11211137	AssignmentExpression	s . bitbuf = 0		11211078	0		=			
ANR	11211138	MemberAccess	s . bitbuf		11211078	0					
ANR	11211139	Identifier	s		11211078	0					
ANR	11211140	Identifier	bitbuf		11211078	1					
ANR	11211141	PrimaryExpression	0		11211078	1					
ANR	11211142	ExpressionStatement	s . bitcnt = 0	812:4:36892:36904	11211078	10	True				
ANR	11211143	AssignmentExpression	s . bitcnt = 0		11211078	0		=			
ANR	11211144	MemberAccess	s . bitcnt		11211078	0					
ANR	11211145	Identifier	s		11211078	0					
ANR	11211146	Identifier	bitcnt		11211078	1					
ANR	11211147	PrimaryExpression	0		11211078	1					
ANR	11211148	IfStatement	if ( setjmp ( s . env ) != 0 )		11211078	11					
ANR	11211149	Condition	setjmp ( s . env ) != 0	815:8:36989:37006	11211078	0	True				
ANR	11211150	EqualityExpression	setjmp ( s . env ) != 0		11211078	0		!=			
ANR	11211151	CallExpression	setjmp ( s . env )		11211078	0					
ANR	11211152	Callee	setjmp		11211078	0					
ANR	11211153	Identifier	setjmp		11211078	0					
ANR	11211154	ArgumentList	s . env		11211078	1					
ANR	11211155	Argument	s . env		11211078	0					
ANR	11211156	MemberAccess	s . env		11211078	0					
ANR	11211157	Identifier	s		11211078	0					
ANR	11211158	Identifier	env		11211078	1					
ANR	11211159	PrimaryExpression	0		11211078	1					
ANR	11211160	ExpressionStatement	err = 2	816:8:37067:37074	11211078	1	True				
ANR	11211161	AssignmentExpression	err = 2		11211078	0		=			
ANR	11211162	Identifier	err		11211078	0					
ANR	11211163	PrimaryExpression	2		11211078	1					
ANR	11211164	ElseStatement	else		11211078	0					
ANR	11211165	CompoundStatement		21:9:677:677	11211078	0					
ANR	11211166	DoStatement	do		11211078	0					
ANR	11211167	CompoundStatement		23:11:745:745	11211078	0					
ANR	11211168	ExpressionStatement	"last = bits ( & s , 1 )"	820:12:37228:37246	11211078	0	True				
ANR	11211169	AssignmentExpression	"last = bits ( & s , 1 )"		11211078	0		=			
ANR	11211170	Identifier	last		11211078	0					
ANR	11211171	CallExpression	"bits ( & s , 1 )"		11211078	1					
ANR	11211172	Callee	bits		11211078	0					
ANR	11211173	Identifier	bits		11211078	0					
ANR	11211174	ArgumentList	& s		11211078	1					
ANR	11211175	Argument	& s		11211078	0					
ANR	11211176	UnaryOperationExpression	& s		11211078	0					
ANR	11211177	UnaryOperator	&		11211078	0					
ANR	11211178	Identifier	s		11211078	1					
ANR	11211179	Argument	1		11211078	1					
ANR	11211180	PrimaryExpression	1		11211078	0					
ANR	11211181	ExpressionStatement	"type = bits ( & s , 2 )"	821:12:37292:37310	11211078	1	True				
ANR	11211182	AssignmentExpression	"type = bits ( & s , 2 )"		11211078	0		=			
ANR	11211183	Identifier	type		11211078	0					
ANR	11211184	CallExpression	"bits ( & s , 2 )"		11211078	1					
ANR	11211185	Callee	bits		11211078	0					
ANR	11211186	Identifier	bits		11211078	0					
ANR	11211187	ArgumentList	& s		11211078	1					
ANR	11211188	Argument	& s		11211078	0					
ANR	11211189	UnaryOperationExpression	& s		11211078	0					
ANR	11211190	UnaryOperator	&		11211078	0					
ANR	11211191	Identifier	s		11211078	1					
ANR	11211192	Argument	2		11211078	1					
ANR	11211193	PrimaryExpression	2		11211078	0					
ANR	11211194	ExpressionStatement	err = type == 0 ? stored ( & s ) : ( type == 1 ? fixed ( & s ) : ( type == 2 ? dynamic ( & s ) : - 1 ) )	822:12:37354:37585	11211078	2	True				
ANR	11211195	AssignmentExpression	err = type == 0 ? stored ( & s ) : ( type == 1 ? fixed ( & s ) : ( type == 2 ? dynamic ( & s ) : - 1 ) )		11211078	0		=			
ANR	11211196	Identifier	err		11211078	0					
ANR	11211197	ConditionalExpression	type == 0 ? stored ( & s ) : ( type == 1 ? fixed ( & s ) : ( type == 2 ? dynamic ( & s ) : - 1 ) )		11211078	1					
ANR	11211198	Condition	type == 0		11211078	0					
ANR	11211199	EqualityExpression	type == 0		11211078	0		==			
ANR	11211200	Identifier	type		11211078	0					
ANR	11211201	PrimaryExpression	0		11211078	1					
ANR	11211202	CallExpression	stored ( & s )		11211078	1					
ANR	11211203	Callee	stored		11211078	0					
ANR	11211204	Identifier	stored		11211078	0					
ANR	11211205	ArgumentList	& s		11211078	1					
ANR	11211206	Argument	& s		11211078	0					
ANR	11211207	UnaryOperationExpression	& s		11211078	0					
ANR	11211208	UnaryOperator	&		11211078	0					
ANR	11211209	Identifier	s		11211078	1					
ANR	11211210	ConditionalExpression	type == 1 ? fixed ( & s ) : ( type == 2 ? dynamic ( & s ) : - 1 )		11211078	2					
ANR	11211211	Condition	type == 1		11211078	0					
ANR	11211212	EqualityExpression	type == 1		11211078	0		==			
ANR	11211213	Identifier	type		11211078	0					
ANR	11211214	PrimaryExpression	1		11211078	1					
ANR	11211215	CallExpression	fixed ( & s )		11211078	1					
ANR	11211216	Callee	fixed		11211078	0					
ANR	11211217	Identifier	fixed		11211078	0					
ANR	11211218	ArgumentList	& s		11211078	1					
ANR	11211219	Argument	& s		11211078	0					
ANR	11211220	UnaryOperationExpression	& s		11211078	0					
ANR	11211221	UnaryOperator	&		11211078	0					
ANR	11211222	Identifier	s		11211078	1					
ANR	11211223	ConditionalExpression	type == 2 ? dynamic ( & s ) : - 1		11211078	2					
ANR	11211224	Condition	type == 2		11211078	0					
ANR	11211225	EqualityExpression	type == 2		11211078	0		==			
ANR	11211226	Identifier	type		11211078	0					
ANR	11211227	PrimaryExpression	2		11211078	1					
ANR	11211228	CallExpression	dynamic ( & s )		11211078	1					
ANR	11211229	Callee	dynamic		11211078	0					
ANR	11211230	Identifier	dynamic		11211078	0					
ANR	11211231	ArgumentList	& s		11211078	1					
ANR	11211232	Argument	& s		11211078	0					
ANR	11211233	UnaryOperationExpression	& s		11211078	0					
ANR	11211234	UnaryOperator	&		11211078	0					
ANR	11211235	Identifier	s		11211078	1					
ANR	11211236	UnaryOperationExpression	- 1		11211078	2					
ANR	11211237	UnaryOperator	-		11211078	0					
ANR	11211238	PrimaryExpression	1		11211078	1					
ANR	11211239	IfStatement	if ( err != 0 )		11211078	3					
ANR	11211240	Condition	err != 0	829:16:37634:37641	11211078	0	True				
ANR	11211241	EqualityExpression	err != 0		11211078	0		!=			
ANR	11211242	Identifier	err		11211078	0					
ANR	11211243	PrimaryExpression	0		11211078	1					
ANR	11211244	BreakStatement	break ;	830:16:37660:37665	11211078	1	True				
ANR	11211245	Condition	! last	831:17:37725:37729	11211078	1	True				
ANR	11211246	UnaryOperationExpression	! last		11211078	0					
ANR	11211247	UnaryOperator	!		11211078	0					
ANR	11211248	Identifier	last		11211078	1					
ANR	11211249	IfStatement	if ( err <= 0 )		11211078	12					
ANR	11211250	Condition	err <= 0	835:8:37788:37795	11211078	0	True				
ANR	11211251	RelationalExpression	err <= 0		11211078	0		<=			
ANR	11211252	Identifier	err		11211078	0					
ANR	11211253	PrimaryExpression	0		11211078	1					
ANR	11211254	CompoundStatement		39:18:1329:1329	11211078	1					
ANR	11211255	ExpressionStatement	* destlen = s . outcnt	836:8:37808:37827	11211078	0	True				
ANR	11211256	AssignmentExpression	* destlen = s . outcnt		11211078	0		=			
ANR	11211257	UnaryOperationExpression	* destlen		11211078	0					
ANR	11211258	UnaryOperator	*		11211078	0					
ANR	11211259	Identifier	destlen		11211078	1					
ANR	11211260	MemberAccess	s . outcnt		11211078	1					
ANR	11211261	Identifier	s		11211078	0					
ANR	11211262	Identifier	outcnt		11211078	1					
ANR	11211263	ExpressionStatement	* sourcelen = s . incnt	837:8:37837:37857	11211078	1	True				
ANR	11211264	AssignmentExpression	* sourcelen = s . incnt		11211078	0		=			
ANR	11211265	UnaryOperationExpression	* sourcelen		11211078	0					
ANR	11211266	UnaryOperator	*		11211078	0					
ANR	11211267	Identifier	sourcelen		11211078	1					
ANR	11211268	MemberAccess	s . incnt		11211078	1					
ANR	11211269	Identifier	s		11211078	0					
ANR	11211270	Identifier	incnt		11211078	1					
ANR	11211271	ReturnStatement	return err ;	839:4:37869:37879	11211078	13	True				
ANR	11211272	Identifier	err		11211078	0					
ANR	11211273	ReturnType	int		11211078	1					
ANR	11211274	Identifier	puff		11211078	2					
ANR	11211275	ParameterList	"unsigned char * dest , unsigned long * destlen , const unsigned char * source , unsigned long * sourcelen"		11211078	3					
ANR	11211276	Parameter	unsigned char * dest	793:9:36182:36200	11211078	0	True				
ANR	11211277	ParameterType	unsigned char *		11211078	0					
ANR	11211278	Identifier	dest		11211078	1					
ANR	11211279	Parameter	unsigned long * destlen	794:9:36259:36280	11211078	1	True				
ANR	11211280	ParameterType	unsigned long *		11211078	0					
ANR	11211281	Identifier	destlen		11211078	1					
ANR	11211282	Parameter	const unsigned char * source	795:9:36328:36354	11211078	2	True				
ANR	11211283	ParameterType	const unsigned char *		11211078	0					
ANR	11211284	Identifier	source		11211078	1					
ANR	11211285	Parameter	unsigned long * sourcelen	796:9:36405:36428	11211078	3	True				
ANR	11211286	ParameterType	unsigned long *		11211078	0					
ANR	11211287	Identifier	sourcelen		11211078	1					
ANR	11211288	CFGEntryNode	ENTRY		11211078		True				
ANR	11211289	CFGExitNode	EXIT		11211078		True				
ANR	11211290	Symbol	s . outcnt		11211078						
ANR	11211291	Symbol	s . bitbuf		11211078						
ANR	11211292	Symbol	source		11211078						
ANR	11211293	Symbol	dest		11211078						
ANR	11211294	Symbol	type		11211078						
ANR	11211295	Symbol	* destlen		11211078						
ANR	11211296	Symbol	s . out		11211078						
ANR	11211297	Symbol	* sourcelen		11211078						
ANR	11211298	Symbol	dynamic		11211078						
ANR	11211299	Symbol	s . outlen		11211078						
ANR	11211300	Symbol	s . incnt		11211078						
ANR	11211301	Symbol	sourcelen		11211078						
ANR	11211302	Symbol	destlen		11211078						
ANR	11211303	Symbol	last		11211078						
ANR	11211304	Symbol	err		11211078						
ANR	11211305	Symbol	bits		11211078						
ANR	11211306	Symbol	s . inlen		11211078						
ANR	11211307	Symbol	setjmp		11211078						
ANR	11211308	Symbol	s . env		11211078						
ANR	11211309	Symbol	s . in		11211078						
ANR	11211310	Symbol	s		11211078						
ANR	11211311	Symbol	stored		11211078						
ANR	11211312	Symbol	& s		11211078						
ANR	11211313	Symbol	s . bitcnt		11211078						
ANR	11211314	Symbol	fixed		11211078						
