command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7306139	File	data/converged/CVE-2018-16863_ghostpdl/libpng_contrib_libtests_tarith.c								
ANR	7306140	Function	png_warning	34:1:949:1092							
ANR	7306141	FunctionDef	"png_warning (png_const_structrp png_ptr , png_const_charp msg)"		7306140	0					
ANR	7306142	CompoundStatement		37:0:1045:1092	7306140	0					
ANR	7306143	ExpressionStatement	"fprintf ( stderr , ""validation: %s\\n"" , msg )"	38:3:1050:1090	7306140	0	True				
ANR	7306144	CallExpression	"fprintf ( stderr , ""validation: %s\\n"" , msg )"		7306140	0					
ANR	7306145	Callee	fprintf		7306140	0					
ANR	7306146	Identifier	fprintf		7306140	0					
ANR	7306147	ArgumentList	stderr		7306140	1					
ANR	7306148	Argument	stderr		7306140	0					
ANR	7306149	Identifier	stderr		7306140	0					
ANR	7306150	Argument	"""validation: %s\\n"""		7306140	1					
ANR	7306151	PrimaryExpression	"""validation: %s\\n"""		7306140	0					
ANR	7306152	Argument	msg		7306140	2					
ANR	7306153	Identifier	msg		7306140	0					
ANR	7306154	ReturnType	define png_error png_warning void		7306140	1					
ANR	7306155	Identifier	png_warning		7306140	2					
ANR	7306156	ParameterList	"png_const_structrp png_ptr , png_const_charp msg"		7306140	3					
ANR	7306157	Parameter	png_const_structrp png_ptr	36:17:996:1021	7306140	0	True				
ANR	7306158	ParameterType	png_const_structrp		7306140	0					
ANR	7306159	Identifier	png_ptr		7306140	1					
ANR	7306160	Parameter	png_const_charp msg	36:45:1024:1042	7306140	1	True				
ANR	7306161	ParameterType	png_const_charp		7306140	0					
ANR	7306162	Identifier	msg		7306140	1					
ANR	7306163	CFGEntryNode	ENTRY		7306140		True				
ANR	7306164	CFGExitNode	EXIT		7306140		True				
ANR	7306165	Symbol	msg		7306140						
ANR	7306166	Symbol	stderr		7306140						
ANR	7306167	Symbol	png_ptr		7306140						
ANR	7306168	Function	png_fixed_warning	41:1:1096:1258							
ANR	7306169	FunctionDef	"png_fixed_warning (png_const_structrp png_ptr , png_const_charp msg)"		7306168	0					
ANR	7306170	CompoundStatement		44:0:1210:1258	7306168	0					
ANR	7306171	ExpressionStatement	"fprintf ( stderr , ""overflow in: %s\\n"" , msg )"	45:3:1215:1256	7306168	0	True				
ANR	7306172	CallExpression	"fprintf ( stderr , ""overflow in: %s\\n"" , msg )"		7306168	0					
ANR	7306173	Callee	fprintf		7306168	0					
ANR	7306174	Identifier	fprintf		7306168	0					
ANR	7306175	ArgumentList	stderr		7306168	1					
ANR	7306176	Argument	stderr		7306168	0					
ANR	7306177	Identifier	stderr		7306168	0					
ANR	7306178	Argument	"""overflow in: %s\\n"""		7306168	1					
ANR	7306179	PrimaryExpression	"""overflow in: %s\\n"""		7306168	0					
ANR	7306180	Argument	msg		7306168	2					
ANR	7306181	Identifier	msg		7306168	0					
ANR	7306182	ReturnType	define png_fixed_error png_fixed_warning void		7306168	1					
ANR	7306183	Identifier	png_fixed_warning		7306168	2					
ANR	7306184	ParameterList	"png_const_structrp png_ptr , png_const_charp msg"		7306168	3					
ANR	7306185	Parameter	png_const_structrp png_ptr	43:23:1161:1186	7306168	0	True				
ANR	7306186	ParameterType	png_const_structrp		7306168	0					
ANR	7306187	Identifier	png_ptr		7306168	1					
ANR	7306188	Parameter	png_const_charp msg	43:51:1189:1207	7306168	1	True				
ANR	7306189	ParameterType	png_const_charp		7306168	0					
ANR	7306190	Identifier	msg		7306168	1					
ANR	7306191	CFGEntryNode	ENTRY		7306168		True				
ANR	7306192	CFGExitNode	EXIT		7306168		True				
ANR	7306193	Symbol	msg		7306168						
ANR	7306194	Symbol	stderr		7306168						
ANR	7306195	Symbol	png_ptr		7306168						
ANR	7306196	DeclStmt									
ANR	7306197	Decl							int	int	verbose
ANR	7306198	Function	validation_ascii_to_fp	75:0:2040:8018							
ANR	7306199	FunctionDef	"validation_ascii_to_fp (int count , int argc , char * * argv)"		7306198	0					
ANR	7306200	CompoundStatement		76:0:2101:8018	7306198	0					
ANR	7306201	IdentifierDeclStatement	int showall = 0 ;	77:3:2106:2124	7306198	0	True				
ANR	7306202	IdentifierDecl	showall = 0		7306198	0					
ANR	7306203	IdentifierDeclType	int		7306198	0					
ANR	7306204	Identifier	showall		7306198	1					
ANR	7306205	AssignmentExpression	showall = 0		7306198	2		=			
ANR	7306206	Identifier	showall		7306198	0					
ANR	7306207	PrimaryExpression	0		7306198	1					
ANR	7306208	IdentifierDeclStatement	double max_error = 2 ;	78:3:2129:2147	7306198	1	True				
ANR	7306209	IdentifierDecl	max_error = 2		7306198	0					
ANR	7306210	IdentifierDeclType	double		7306198	0					
ANR	7306211	Identifier	max_error		7306198	1					
ANR	7306212	AssignmentExpression	max_error = 2		7306198	2		=			
ANR	7306213	Identifier	max_error		7306198	0					
ANR	7306214	PrimaryExpression	2		7306198	1					
ANR	7306215	IdentifierDeclStatement	double max_error_abs = 17 ;	79:3:2202:2225	7306198	2	True				
ANR	7306216	IdentifierDecl	max_error_abs = 17		7306198	0					
ANR	7306217	IdentifierDeclType	double		7306198	0					
ANR	7306218	Identifier	max_error_abs		7306198	1					
ANR	7306219	AssignmentExpression	max_error_abs = 17		7306198	2		=			
ANR	7306220	Identifier	max_error_abs		7306198	0					
ANR	7306221	PrimaryExpression	17		7306198	1					
ANR	7306222	IdentifierDeclStatement	double max = 0 ;	80:3:2267:2281	7306198	3	True				
ANR	7306223	IdentifierDecl	max = 0		7306198	0					
ANR	7306224	IdentifierDeclType	double		7306198	0					
ANR	7306225	Identifier	max		7306198	1					
ANR	7306226	AssignmentExpression	max = 0		7306198	2		=			
ANR	7306227	Identifier	max		7306198	0					
ANR	7306228	PrimaryExpression	0		7306198	1					
ANR	7306229	IdentifierDeclStatement	double max_abs = 0 ;	81:3:2286:2304	7306198	4	True				
ANR	7306230	IdentifierDecl	max_abs = 0		7306198	0					
ANR	7306231	IdentifierDeclType	double		7306198	0					
ANR	7306232	Identifier	max_abs		7306198	1					
ANR	7306233	AssignmentExpression	max_abs = 0		7306198	2		=			
ANR	7306234	Identifier	max_abs		7306198	0					
ANR	7306235	PrimaryExpression	0		7306198	1					
ANR	7306236	IdentifierDeclStatement	double test = 0 ;	82:3:2309:2324	7306198	5	True				
ANR	7306237	IdentifierDecl	test = 0		7306198	0					
ANR	7306238	IdentifierDeclType	double		7306198	0					
ANR	7306239	Identifier	test		7306198	1					
ANR	7306240	AssignmentExpression	test = 0		7306198	2		=			
ANR	7306241	Identifier	test		7306198	0					
ANR	7306242	PrimaryExpression	0		7306198	1					
ANR	7306243	IdentifierDeclStatement	int precision = 5 ;	83:3:2359:2379	7306198	6	True				
ANR	7306244	IdentifierDecl	precision = 5		7306198	0					
ANR	7306245	IdentifierDeclType	int		7306198	0					
ANR	7306246	Identifier	precision		7306198	1					
ANR	7306247	AssignmentExpression	precision = 5		7306198	2		=			
ANR	7306248	Identifier	precision		7306198	0					
ANR	7306249	PrimaryExpression	5		7306198	1					
ANR	7306250	IdentifierDeclStatement	int nonfinite = 0 ;	84:3:2384:2404	7306198	7	True				
ANR	7306251	IdentifierDecl	nonfinite = 0		7306198	0					
ANR	7306252	IdentifierDeclType	int		7306198	0					
ANR	7306253	Identifier	nonfinite		7306198	1					
ANR	7306254	AssignmentExpression	nonfinite = 0		7306198	2		=			
ANR	7306255	Identifier	nonfinite		7306198	0					
ANR	7306256	PrimaryExpression	0		7306198	1					
ANR	7306257	IdentifierDeclStatement	int finite = 0 ;	85:3:2409:2426	7306198	8	True				
ANR	7306258	IdentifierDecl	finite = 0		7306198	0					
ANR	7306259	IdentifierDeclType	int		7306198	0					
ANR	7306260	Identifier	finite		7306198	1					
ANR	7306261	AssignmentExpression	finite = 0		7306198	2		=			
ANR	7306262	Identifier	finite		7306198	0					
ANR	7306263	PrimaryExpression	0		7306198	1					
ANR	7306264	IdentifierDeclStatement	int ok = 0 ;	86:3:2431:2444	7306198	9	True				
ANR	7306265	IdentifierDecl	ok = 0		7306198	0					
ANR	7306266	IdentifierDeclType	int		7306198	0					
ANR	7306267	Identifier	ok		7306198	1					
ANR	7306268	AssignmentExpression	ok = 0		7306198	2		=			
ANR	7306269	Identifier	ok		7306198	0					
ANR	7306270	PrimaryExpression	0		7306198	1					
ANR	7306271	IdentifierDeclStatement	int failcount = 0 ;	87:3:2449:2469	7306198	10	True				
ANR	7306272	IdentifierDecl	failcount = 0		7306198	0					
ANR	7306273	IdentifierDeclType	int		7306198	0					
ANR	7306274	Identifier	failcount		7306198	1					
ANR	7306275	AssignmentExpression	failcount = 0		7306198	2		=			
ANR	7306276	Identifier	failcount		7306198	0					
ANR	7306277	PrimaryExpression	0		7306198	1					
ANR	7306278	IdentifierDeclStatement	int minorarith = 0 ;	88:3:2474:2495	7306198	11	True				
ANR	7306279	IdentifierDecl	minorarith = 0		7306198	0					
ANR	7306280	IdentifierDeclType	int		7306198	0					
ANR	7306281	Identifier	minorarith		7306198	1					
ANR	7306282	AssignmentExpression	minorarith = 0		7306198	2		=			
ANR	7306283	Identifier	minorarith		7306198	0					
ANR	7306284	PrimaryExpression	0		7306198	1					
ANR	7306285	WhileStatement	while ( -- argc > 0 )		7306198	12					
ANR	7306286	Condition	-- argc > 0	90:10:2508:2517	7306198	0	True				
ANR	7306287	RelationalExpression	-- argc > 0		7306198	0		>			
ANR	7306288	UnaryExpression	-- argc		7306198	0					
ANR	7306289	IncDec	--		7306198	0					
ANR	7306290	Identifier	argc		7306198	1					
ANR	7306291	PrimaryExpression	0		7306198	1					
ANR	7306292	IfStatement	"if ( strcmp ( * ++ argv , ""-a"" ) == 0 )"		7306198	1					
ANR	7306293	Condition	"strcmp ( * ++ argv , ""-a"" ) == 0"	91:10:2530:2555	7306198	0	True				
ANR	7306294	EqualityExpression	"strcmp ( * ++ argv , ""-a"" ) == 0"		7306198	0		==			
ANR	7306295	CallExpression	"strcmp ( * ++ argv , ""-a"" )"		7306198	0					
ANR	7306296	Callee	strcmp		7306198	0					
ANR	7306297	Identifier	strcmp		7306198	0					
ANR	7306298	ArgumentList	* ++ argv		7306198	1					
ANR	7306299	Argument	* ++ argv		7306198	0					
ANR	7306300	UnaryOperationExpression	* ++ argv		7306198	0					
ANR	7306301	UnaryOperator	*		7306198	0					
ANR	7306302	UnaryExpression	++ argv		7306198	1					
ANR	7306303	IncDec	++		7306198	0					
ANR	7306304	Identifier	argv		7306198	1					
ANR	7306305	Argument	"""-a"""		7306198	1					
ANR	7306306	PrimaryExpression	"""-a"""		7306198	0					
ANR	7306307	PrimaryExpression	0		7306198	1					
ANR	7306308	ExpressionStatement	showall = 1	92:9:2567:2578	7306198	1	True				
ANR	7306309	AssignmentExpression	showall = 1		7306198	0		=			
ANR	7306310	Identifier	showall		7306198	0					
ANR	7306311	PrimaryExpression	1		7306198	1					
ANR	7306312	ElseStatement	else		7306198	0					
ANR	7306313	IfStatement	"if ( strcmp ( * argv , ""-e"" ) == 0 && argc > 0 )"		7306198	0					
ANR	7306314	Condition	"strcmp ( * argv , ""-e"" ) == 0 && argc > 0"	93:15:2595:2630	7306198	0	True				
ANR	7306315	AndExpression	"strcmp ( * argv , ""-e"" ) == 0 && argc > 0"		7306198	0		&&			
ANR	7306316	EqualityExpression	"strcmp ( * argv , ""-e"" ) == 0"		7306198	0		==			
ANR	7306317	CallExpression	"strcmp ( * argv , ""-e"" )"		7306198	0					
ANR	7306318	Callee	strcmp		7306198	0					
ANR	7306319	Identifier	strcmp		7306198	0					
ANR	7306320	ArgumentList	* argv		7306198	1					
ANR	7306321	Argument	* argv		7306198	0					
ANR	7306322	UnaryOperationExpression	* argv		7306198	0					
ANR	7306323	UnaryOperator	*		7306198	0					
ANR	7306324	Identifier	argv		7306198	1					
ANR	7306325	Argument	"""-e"""		7306198	1					
ANR	7306326	PrimaryExpression	"""-e"""		7306198	0					
ANR	7306327	PrimaryExpression	0		7306198	1					
ANR	7306328	RelationalExpression	argc > 0		7306198	1		>			
ANR	7306329	Identifier	argc		7306198	0					
ANR	7306330	PrimaryExpression	0		7306198	1					
ANR	7306331	CompoundStatement		19:6:537:537	7306198	1					
ANR	7306332	ExpressionStatement	-- argc	95:9:2650:2656	7306198	0	True				
ANR	7306333	UnaryExpression	-- argc		7306198	0					
ANR	7306334	IncDec	--		7306198	0					
ANR	7306335	Identifier	argc		7306198	1					
ANR	7306336	ExpressionStatement	max_error = atof ( * ++ argv )	96:9:2667:2692	7306198	1	True				
ANR	7306337	AssignmentExpression	max_error = atof ( * ++ argv )		7306198	0		=			
ANR	7306338	Identifier	max_error		7306198	0					
ANR	7306339	CallExpression	atof ( * ++ argv )		7306198	1					
ANR	7306340	Callee	atof		7306198	0					
ANR	7306341	Identifier	atof		7306198	0					
ANR	7306342	ArgumentList	* ++ argv		7306198	1					
ANR	7306343	Argument	* ++ argv		7306198	0					
ANR	7306344	UnaryOperationExpression	* ++ argv		7306198	0					
ANR	7306345	UnaryOperator	*		7306198	0					
ANR	7306346	UnaryExpression	++ argv		7306198	1					
ANR	7306347	IncDec	++		7306198	0					
ANR	7306348	Identifier	argv		7306198	1					
ANR	7306349	ElseStatement	else		7306198	0					
ANR	7306350	IfStatement	"if ( strcmp ( * argv , ""-E"" ) == 0 && argc > 0 )"		7306198	0					
ANR	7306351	Condition	"strcmp ( * argv , ""-E"" ) == 0 && argc > 0"	98:15:2717:2752	7306198	0	True				
ANR	7306352	AndExpression	"strcmp ( * argv , ""-E"" ) == 0 && argc > 0"		7306198	0		&&			
ANR	7306353	EqualityExpression	"strcmp ( * argv , ""-E"" ) == 0"		7306198	0		==			
ANR	7306354	CallExpression	"strcmp ( * argv , ""-E"" )"		7306198	0					
ANR	7306355	Callee	strcmp		7306198	0					
ANR	7306356	Identifier	strcmp		7306198	0					
ANR	7306357	ArgumentList	* argv		7306198	1					
ANR	7306358	Argument	* argv		7306198	0					
ANR	7306359	UnaryOperationExpression	* argv		7306198	0					
ANR	7306360	UnaryOperator	*		7306198	0					
ANR	7306361	Identifier	argv		7306198	1					
ANR	7306362	Argument	"""-E"""		7306198	1					
ANR	7306363	PrimaryExpression	"""-E"""		7306198	0					
ANR	7306364	PrimaryExpression	0		7306198	1					
ANR	7306365	RelationalExpression	argc > 0		7306198	1		>			
ANR	7306366	Identifier	argc		7306198	0					
ANR	7306367	PrimaryExpression	0		7306198	1					
ANR	7306368	CompoundStatement		24:6:659:659	7306198	1					
ANR	7306369	ExpressionStatement	-- argc	100:9:2772:2778	7306198	0	True				
ANR	7306370	UnaryExpression	-- argc		7306198	0					
ANR	7306371	IncDec	--		7306198	0					
ANR	7306372	Identifier	argc		7306198	1					
ANR	7306373	ExpressionStatement	max_error_abs = atof ( * ++ argv )	101:9:2789:2818	7306198	1	True				
ANR	7306374	AssignmentExpression	max_error_abs = atof ( * ++ argv )		7306198	0		=			
ANR	7306375	Identifier	max_error_abs		7306198	0					
ANR	7306376	CallExpression	atof ( * ++ argv )		7306198	1					
ANR	7306377	Callee	atof		7306198	0					
ANR	7306378	Identifier	atof		7306198	0					
ANR	7306379	ArgumentList	* ++ argv		7306198	1					
ANR	7306380	Argument	* ++ argv		7306198	0					
ANR	7306381	UnaryOperationExpression	* ++ argv		7306198	0					
ANR	7306382	UnaryOperator	*		7306198	0					
ANR	7306383	UnaryExpression	++ argv		7306198	1					
ANR	7306384	IncDec	++		7306198	0					
ANR	7306385	Identifier	argv		7306198	1					
ANR	7306386	ElseStatement	else		7306198	0					
ANR	7306387	CompoundStatement		29:6:743:743	7306198	0					
ANR	7306388	ExpressionStatement	"fprintf ( stderr , ""unknown argument %s\\n"" , * argv )"	105:9:2856:2903	7306198	0	True				
ANR	7306389	CallExpression	"fprintf ( stderr , ""unknown argument %s\\n"" , * argv )"		7306198	0					
ANR	7306390	Callee	fprintf		7306198	0					
ANR	7306391	Identifier	fprintf		7306198	0					
ANR	7306392	ArgumentList	stderr		7306198	1					
ANR	7306393	Argument	stderr		7306198	0					
ANR	7306394	Identifier	stderr		7306198	0					
ANR	7306395	Argument	"""unknown argument %s\\n"""		7306198	1					
ANR	7306396	PrimaryExpression	"""unknown argument %s\\n"""		7306198	0					
ANR	7306397	Argument	* argv		7306198	2					
ANR	7306398	UnaryOperationExpression	* argv		7306198	0					
ANR	7306399	UnaryOperator	*		7306198	0					
ANR	7306400	Identifier	argv		7306198	1					
ANR	7306401	ReturnStatement	return 1 ;	106:9:2914:2922	7306198	1	True				
ANR	7306402	PrimaryExpression	1		7306198	0					
ANR	7306403	DoStatement	do		7306198	13					
ANR	7306404	CompoundStatement		38:6:901:916	7306198	0					
ANR	7306405	IdentifierDeclStatement	png_size_t index ;	111:6:2950:2966	7306198	0	True				
ANR	7306406	IdentifierDecl	index		7306198	0					
ANR	7306407	IdentifierDeclType	png_size_t		7306198	0					
ANR	7306408	Identifier	index		7306198	1					
ANR	7306409	IdentifierDeclStatement	"int state , failed = 0 ;"	112:6:2974:2995	7306198	1	True				
ANR	7306410	IdentifierDecl	state		7306198	0					
ANR	7306411	IdentifierDeclType	int		7306198	0					
ANR	7306412	Identifier	state		7306198	1					
ANR	7306413	IdentifierDecl	failed = 0		7306198	1					
ANR	7306414	IdentifierDeclType	int		7306198	0					
ANR	7306415	Identifier	failed		7306198	1					
ANR	7306416	AssignmentExpression	failed = 0		7306198	2		=			
ANR	7306417	Identifier	failed		7306198	0					
ANR	7306418	PrimaryExpression	0		7306198	1					
ANR	7306419	IdentifierDeclStatement	char buffer [ 64 ] ;	113:6:3003:3018	7306198	2	True				
ANR	7306420	IdentifierDecl	buffer [ 64 ]		7306198	0					
ANR	7306421	IdentifierDeclType	char [ 64 ]		7306198	0					
ANR	7306422	Identifier	buffer		7306198	1					
ANR	7306423	PrimaryExpression	64		7306198	2					
ANR	7306424	IfStatement	if ( isfinite ( test ) )		7306198	3					
ANR	7306425	Condition	isfinite ( test )	115:10:3031:3044	7306198	0	True				
ANR	7306426	CallExpression	isfinite ( test )		7306198	0					
ANR	7306427	Callee	isfinite		7306198	0					
ANR	7306428	Identifier	isfinite		7306198	0					
ANR	7306429	ArgumentList	test		7306198	1					
ANR	7306430	Argument	test		7306198	0					
ANR	7306431	Identifier	test		7306198	0					
ANR	7306432	ExpressionStatement	++ finite	116:9:3056:3064	7306198	1	True				
ANR	7306433	UnaryExpression	++ finite		7306198	0					
ANR	7306434	IncDec	++		7306198	0					
ANR	7306435	Identifier	finite		7306198	1					
ANR	7306436	ElseStatement	else		7306198	0					
ANR	7306437	ExpressionStatement	++ nonfinite	118:9:3086:3097	7306198	0	True				
ANR	7306438	UnaryExpression	++ nonfinite		7306198	0					
ANR	7306439	IncDec	++		7306198	0					
ANR	7306440	Identifier	nonfinite		7306198	1					
ANR	7306441	IfStatement	if ( verbose )		7306198	4					
ANR	7306442	Condition	verbose	120:10:3110:3116	7306198	0	True				
ANR	7306443	Identifier	verbose		7306198	0					
ANR	7306444	ExpressionStatement	"fprintf ( stderr , ""%.*g %d\\n"" , DBL_DIG , test , precision )"	121:9:3128:3182	7306198	1	True				
ANR	7306445	CallExpression	"fprintf ( stderr , ""%.*g %d\\n"" , DBL_DIG , test , precision )"		7306198	0					
ANR	7306446	Callee	fprintf		7306198	0					
ANR	7306447	Identifier	fprintf		7306198	0					
ANR	7306448	ArgumentList	stderr		7306198	1					
ANR	7306449	Argument	stderr		7306198	0					
ANR	7306450	Identifier	stderr		7306198	0					
ANR	7306451	Argument	"""%.*g %d\\n"""		7306198	1					
ANR	7306452	PrimaryExpression	"""%.*g %d\\n"""		7306198	0					
ANR	7306453	Argument	DBL_DIG		7306198	2					
ANR	7306454	Identifier	DBL_DIG		7306198	0					
ANR	7306455	Argument	test		7306198	3					
ANR	7306456	Identifier	test		7306198	0					
ANR	7306457	Argument	precision		7306198	4					
ANR	7306458	Identifier	precision		7306198	0					
ANR	7306459	ExpressionStatement	"memset ( buffer , 71 , sizeof buffer )"	124:6:3257:3290	7306198	5	True				
ANR	7306460	CallExpression	"memset ( buffer , 71 , sizeof buffer )"		7306198	0					
ANR	7306461	Callee	memset		7306198	0					
ANR	7306462	Identifier	memset		7306198	0					
ANR	7306463	ArgumentList	buffer		7306198	1					
ANR	7306464	Argument	buffer		7306198	0					
ANR	7306465	Identifier	buffer		7306198	0					
ANR	7306466	Argument	71		7306198	1					
ANR	7306467	PrimaryExpression	71		7306198	0					
ANR	7306468	Argument	sizeof buffer		7306198	2					
ANR	7306469	SizeofExpression	sizeof buffer		7306198	0					
ANR	7306470	Sizeof	sizeof		7306198	0					
ANR	7306471	Identifier	buffer		7306198	1					
ANR	7306472	ExpressionStatement	"png_ascii_from_fp ( 0 , buffer , precision + 10 , test , precision )"	126:6:3299:3358	7306198	6	True				
ANR	7306473	CallExpression	"png_ascii_from_fp ( 0 , buffer , precision + 10 , test , precision )"		7306198	0					
ANR	7306474	Callee	png_ascii_from_fp		7306198	0					
ANR	7306475	Identifier	png_ascii_from_fp		7306198	0					
ANR	7306476	ArgumentList	0		7306198	1					
ANR	7306477	Argument	0		7306198	0					
ANR	7306478	PrimaryExpression	0		7306198	0					
ANR	7306479	Argument	buffer		7306198	1					
ANR	7306480	Identifier	buffer		7306198	0					
ANR	7306481	Argument	precision + 10		7306198	2					
ANR	7306482	AdditiveExpression	precision + 10		7306198	0		+			
ANR	7306483	Identifier	precision		7306198	0					
ANR	7306484	PrimaryExpression	10		7306198	1					
ANR	7306485	Argument	test		7306198	3					
ANR	7306486	Identifier	test		7306198	0					
ANR	7306487	Argument	precision		7306198	4					
ANR	7306488	Identifier	precision		7306198	0					
ANR	7306489	IfStatement	if ( buffer [ precision + 7 ] != 71 )		7306198	7					
ANR	7306490	Condition	buffer [ precision + 7 ] != 71	131:10:3491:3515	7306198	0	True				
ANR	7306491	EqualityExpression	buffer [ precision + 7 ] != 71		7306198	0		!=			
ANR	7306492	ArrayIndexing	buffer [ precision + 7 ]		7306198	0					
ANR	7306493	Identifier	buffer		7306198	0					
ANR	7306494	AdditiveExpression	precision + 7		7306198	1		+			
ANR	7306495	Identifier	precision		7306198	0					
ANR	7306496	PrimaryExpression	7		7306198	1					
ANR	7306497	PrimaryExpression	71		7306198	1					
ANR	7306498	CompoundStatement		57:6:1422:1422	7306198	1					
ANR	7306499	ExpressionStatement	"fprintf ( stderr , ""%g[%d] -> '%s'[%lu] buffer overflow\\n"" , test , precision , buffer , ( unsigned long ) strlen ( buffer ) )"	133:9:3535:3659	7306198	0	True				
ANR	7306500	CallExpression	"fprintf ( stderr , ""%g[%d] -> '%s'[%lu] buffer overflow\\n"" , test , precision , buffer , ( unsigned long ) strlen ( buffer ) )"		7306198	0					
ANR	7306501	Callee	fprintf		7306198	0					
ANR	7306502	Identifier	fprintf		7306198	0					
ANR	7306503	ArgumentList	stderr		7306198	1					
ANR	7306504	Argument	stderr		7306198	0					
ANR	7306505	Identifier	stderr		7306198	0					
ANR	7306506	Argument	"""%g[%d] -> '%s'[%lu] buffer overflow\\n"""		7306198	1					
ANR	7306507	PrimaryExpression	"""%g[%d] -> '%s'[%lu] buffer overflow\\n"""		7306198	0					
ANR	7306508	Argument	test		7306198	2					
ANR	7306509	Identifier	test		7306198	0					
ANR	7306510	Argument	precision		7306198	3					
ANR	7306511	Identifier	precision		7306198	0					
ANR	7306512	Argument	buffer		7306198	4					
ANR	7306513	Identifier	buffer		7306198	0					
ANR	7306514	Argument	( unsigned long ) strlen ( buffer )		7306198	5					
ANR	7306515	CastExpression	( unsigned long ) strlen ( buffer )		7306198	0					
ANR	7306516	CastTarget	unsigned long		7306198	0					
ANR	7306517	CallExpression	strlen ( buffer )		7306198	1					
ANR	7306518	Callee	strlen		7306198	0					
ANR	7306519	Identifier	strlen		7306198	0					
ANR	7306520	ArgumentList	buffer		7306198	1					
ANR	7306521	Argument	buffer		7306198	0					
ANR	7306522	Identifier	buffer		7306198	0					
ANR	7306523	ExpressionStatement	failed = 1	135:9:3670:3680	7306198	1	True				
ANR	7306524	AssignmentExpression	failed = 1		7306198	0		=			
ANR	7306525	Identifier	failed		7306198	0					
ANR	7306526	PrimaryExpression	1		7306198	1					
ANR	7306527	ExpressionStatement	state = 0	141:6:3805:3814	7306198	8	True				
ANR	7306528	AssignmentExpression	state = 0		7306198	0		=			
ANR	7306529	Identifier	state		7306198	0					
ANR	7306530	PrimaryExpression	0		7306198	1					
ANR	7306531	ExpressionStatement	index = 0	142:6:3822:3831	7306198	9	True				
ANR	7306532	AssignmentExpression	index = 0		7306198	0		=			
ANR	7306533	Identifier	index		7306198	0					
ANR	7306534	PrimaryExpression	0		7306198	1					
ANR	7306535	IfStatement	if ( ! isfinite ( test ) )		7306198	10					
ANR	7306536	Condition	! isfinite ( test )	143:10:3843:3857	7306198	0	True				
ANR	7306537	UnaryOperationExpression	! isfinite ( test )		7306198	0					
ANR	7306538	UnaryOperator	!		7306198	0					
ANR	7306539	CallExpression	isfinite ( test )		7306198	1					
ANR	7306540	Callee	isfinite		7306198	0					
ANR	7306541	Identifier	isfinite		7306198	0					
ANR	7306542	ArgumentList	test		7306198	1					
ANR	7306543	Argument	test		7306198	0					
ANR	7306544	Identifier	test		7306198	0					
ANR	7306545	CompoundStatement		69:6:1764:1764	7306198	1					
ANR	7306546	IfStatement	"if ( test >= 0 && strcmp ( buffer , ""inf"" ) || test < 0 && strcmp ( buffer , ""-inf"" ) )"		7306198	0					
ANR	7306547	Condition	"test >= 0 && strcmp ( buffer , ""inf"" ) || test < 0 && strcmp ( buffer , ""-inf"" )"	146:13:3909:3994	7306198	0	True				
ANR	7306548	OrExpression	"test >= 0 && strcmp ( buffer , ""inf"" ) || test < 0 && strcmp ( buffer , ""-inf"" )"		7306198	0		||			
ANR	7306549	AndExpression	"test >= 0 && strcmp ( buffer , ""inf"" )"		7306198	0		&&			
ANR	7306550	RelationalExpression	test >= 0		7306198	0		>=			
ANR	7306551	Identifier	test		7306198	0					
ANR	7306552	PrimaryExpression	0		7306198	1					
ANR	7306553	CallExpression	"strcmp ( buffer , ""inf"" )"		7306198	1					
ANR	7306554	Callee	strcmp		7306198	0					
ANR	7306555	Identifier	strcmp		7306198	0					
ANR	7306556	ArgumentList	buffer		7306198	1					
ANR	7306557	Argument	buffer		7306198	0					
ANR	7306558	Identifier	buffer		7306198	0					
ANR	7306559	Argument	"""inf"""		7306198	1					
ANR	7306560	PrimaryExpression	"""inf"""		7306198	0					
ANR	7306561	AndExpression	"test < 0 && strcmp ( buffer , ""-inf"" )"		7306198	1		&&			
ANR	7306562	RelationalExpression	test < 0		7306198	0		<			
ANR	7306563	Identifier	test		7306198	0					
ANR	7306564	PrimaryExpression	0		7306198	1					
ANR	7306565	CallExpression	"strcmp ( buffer , ""-inf"" )"		7306198	1					
ANR	7306566	Callee	strcmp		7306198	0					
ANR	7306567	Identifier	strcmp		7306198	0					
ANR	7306568	ArgumentList	buffer		7306198	1					
ANR	7306569	Argument	buffer		7306198	0					
ANR	7306570	Identifier	buffer		7306198	0					
ANR	7306571	Argument	"""-inf"""		7306198	1					
ANR	7306572	PrimaryExpression	"""-inf"""		7306198	0					
ANR	7306573	CompoundStatement		73:9:1904:1904	7306198	1					
ANR	7306574	ExpressionStatement	"fprintf ( stderr , ""%g[%d] -> '%s' but expected 'inf'\\n"" , test , precision , buffer )"	149:12:4020:4114	7306198	0	True				
ANR	7306575	CallExpression	"fprintf ( stderr , ""%g[%d] -> '%s' but expected 'inf'\\n"" , test , precision , buffer )"		7306198	0					
ANR	7306576	Callee	fprintf		7306198	0					
ANR	7306577	Identifier	fprintf		7306198	0					
ANR	7306578	ArgumentList	stderr		7306198	1					
ANR	7306579	Argument	stderr		7306198	0					
ANR	7306580	Identifier	stderr		7306198	0					
ANR	7306581	Argument	"""%g[%d] -> '%s' but expected 'inf'\\n"""		7306198	1					
ANR	7306582	PrimaryExpression	"""%g[%d] -> '%s' but expected 'inf'\\n"""		7306198	0					
ANR	7306583	Argument	test		7306198	2					
ANR	7306584	Identifier	test		7306198	0					
ANR	7306585	Argument	precision		7306198	3					
ANR	7306586	Identifier	precision		7306198	0					
ANR	7306587	Argument	buffer		7306198	4					
ANR	7306588	Identifier	buffer		7306198	0					
ANR	7306589	ExpressionStatement	failed = 1	151:12:4128:4138	7306198	1	True				
ANR	7306590	AssignmentExpression	failed = 1		7306198	0		=			
ANR	7306591	Identifier	failed		7306198	0					
ANR	7306592	PrimaryExpression	1		7306198	1					
ANR	7306593	ElseStatement	else		7306198	0					
ANR	7306594	IfStatement	"if ( ! png_check_fp_number ( buffer , precision + 10 , & state , & index ) || buffer [ index ] != 0 )"		7306198	0					
ANR	7306595	Condition	"! png_check_fp_number ( buffer , precision + 10 , & state , & index ) || buffer [ index ] != 0"	154:15:4174:4263	7306198	0	True				
ANR	7306596	OrExpression	"! png_check_fp_number ( buffer , precision + 10 , & state , & index ) || buffer [ index ] != 0"		7306198	0		||			
ANR	7306597	UnaryOperationExpression	"! png_check_fp_number ( buffer , precision + 10 , & state , & index )"		7306198	0					
ANR	7306598	UnaryOperator	!		7306198	0					
ANR	7306599	CallExpression	"png_check_fp_number ( buffer , precision + 10 , & state , & index )"		7306198	1					
ANR	7306600	Callee	png_check_fp_number		7306198	0					
ANR	7306601	Identifier	png_check_fp_number		7306198	0					
ANR	7306602	ArgumentList	buffer		7306198	1					
ANR	7306603	Argument	buffer		7306198	0					
ANR	7306604	Identifier	buffer		7306198	0					
ANR	7306605	Argument	precision + 10		7306198	1					
ANR	7306606	AdditiveExpression	precision + 10		7306198	0		+			
ANR	7306607	Identifier	precision		7306198	0					
ANR	7306608	PrimaryExpression	10		7306198	1					
ANR	7306609	Argument	& state		7306198	2					
ANR	7306610	UnaryOperationExpression	& state		7306198	0					
ANR	7306611	UnaryOperator	&		7306198	0					
ANR	7306612	Identifier	state		7306198	1					
ANR	7306613	Argument	& index		7306198	3					
ANR	7306614	UnaryOperationExpression	& index		7306198	0					
ANR	7306615	UnaryOperator	&		7306198	0					
ANR	7306616	Identifier	index		7306198	1					
ANR	7306617	EqualityExpression	buffer [ index ] != 0		7306198	1		!=			
ANR	7306618	ArrayIndexing	buffer [ index ]		7306198	0					
ANR	7306619	Identifier	buffer		7306198	0					
ANR	7306620	Identifier	index		7306198	1					
ANR	7306621	PrimaryExpression	0		7306198	1					
ANR	7306622	CompoundStatement		81:6:2170:2170	7306198	1					
ANR	7306623	ExpressionStatement	"fprintf ( stderr , ""%g[%d] -> '%s' but has bad format ('%c')\\n"" , test , precision , buffer , buffer [ index ] )"	157:9:4283:4393	7306198	0	True				
ANR	7306624	CallExpression	"fprintf ( stderr , ""%g[%d] -> '%s' but has bad format ('%c')\\n"" , test , precision , buffer , buffer [ index ] )"		7306198	0					
ANR	7306625	Callee	fprintf		7306198	0					
ANR	7306626	Identifier	fprintf		7306198	0					
ANR	7306627	ArgumentList	stderr		7306198	1					
ANR	7306628	Argument	stderr		7306198	0					
ANR	7306629	Identifier	stderr		7306198	0					
ANR	7306630	Argument	"""%g[%d] -> '%s' but has bad format ('%c')\\n"""		7306198	1					
ANR	7306631	PrimaryExpression	"""%g[%d] -> '%s' but has bad format ('%c')\\n"""		7306198	0					
ANR	7306632	Argument	test		7306198	2					
ANR	7306633	Identifier	test		7306198	0					
ANR	7306634	Argument	precision		7306198	3					
ANR	7306635	Identifier	precision		7306198	0					
ANR	7306636	Argument	buffer		7306198	4					
ANR	7306637	Identifier	buffer		7306198	0					
ANR	7306638	Argument	buffer [ index ]		7306198	5					
ANR	7306639	ArrayIndexing	buffer [ index ]		7306198	0					
ANR	7306640	Identifier	buffer		7306198	0					
ANR	7306641	Identifier	index		7306198	1					
ANR	7306642	ExpressionStatement	failed = 1	159:9:4404:4414	7306198	1	True				
ANR	7306643	AssignmentExpression	failed = 1		7306198	0		=			
ANR	7306644	Identifier	failed		7306198	0					
ANR	7306645	PrimaryExpression	1		7306198	1					
ANR	7306646	ElseStatement	else		7306198	0					
ANR	7306647	IfStatement	if ( PNG_FP_IS_NEGATIVE ( state ) && ! ( test < 0 ) )		7306198	0					
ANR	7306648	Condition	PNG_FP_IS_NEGATIVE ( state ) && ! ( test < 0 )	161:15:4439:4478	7306198	0	True				
ANR	7306649	AndExpression	PNG_FP_IS_NEGATIVE ( state ) && ! ( test < 0 )		7306198	0		&&			
ANR	7306650	CallExpression	PNG_FP_IS_NEGATIVE ( state )		7306198	0					
ANR	7306651	Callee	PNG_FP_IS_NEGATIVE		7306198	0					
ANR	7306652	Identifier	PNG_FP_IS_NEGATIVE		7306198	0					
ANR	7306653	ArgumentList	state		7306198	1					
ANR	7306654	Argument	state		7306198	0					
ANR	7306655	Identifier	state		7306198	0					
ANR	7306656	UnaryOperationExpression	! ( test < 0 )		7306198	1					
ANR	7306657	UnaryOperator	!		7306198	0					
ANR	7306658	RelationalExpression	test < 0		7306198	1		<			
ANR	7306659	Identifier	test		7306198	0					
ANR	7306660	PrimaryExpression	0		7306198	1					
ANR	7306661	CompoundStatement		87:6:2385:2385	7306198	1					
ANR	7306662	ExpressionStatement	"fprintf ( stderr , ""%g[%d] -> '%s' but negative value not so reported\\n"" , test , precision , buffer )"	163:9:4498:4605	7306198	0	True				
ANR	7306663	CallExpression	"fprintf ( stderr , ""%g[%d] -> '%s' but negative value not so reported\\n"" , test , precision , buffer )"		7306198	0					
ANR	7306664	Callee	fprintf		7306198	0					
ANR	7306665	Identifier	fprintf		7306198	0					
ANR	7306666	ArgumentList	stderr		7306198	1					
ANR	7306667	Argument	stderr		7306198	0					
ANR	7306668	Identifier	stderr		7306198	0					
ANR	7306669	Argument	"""%g[%d] -> '%s' but negative value not so reported\\n"""		7306198	1					
ANR	7306670	PrimaryExpression	"""%g[%d] -> '%s' but negative value not so reported\\n"""		7306198	0					
ANR	7306671	Argument	test		7306198	2					
ANR	7306672	Identifier	test		7306198	0					
ANR	7306673	Argument	precision		7306198	3					
ANR	7306674	Identifier	precision		7306198	0					
ANR	7306675	Argument	buffer		7306198	4					
ANR	7306676	Identifier	buffer		7306198	0					
ANR	7306677	ExpressionStatement	failed = 1	165:9:4616:4626	7306198	1	True				
ANR	7306678	AssignmentExpression	failed = 1		7306198	0		=			
ANR	7306679	Identifier	failed		7306198	0					
ANR	7306680	PrimaryExpression	1		7306198	1					
ANR	7306681	ExpressionStatement	assert ( ! PNG_FP_IS_ZERO ( state ) )	166:9:4637:4667	7306198	2	True				
ANR	7306682	CallExpression	assert ( ! PNG_FP_IS_ZERO ( state ) )		7306198	0					
ANR	7306683	Callee	assert		7306198	0					
ANR	7306684	Identifier	assert		7306198	0					
ANR	7306685	ArgumentList	! PNG_FP_IS_ZERO ( state )		7306198	1					
ANR	7306686	Argument	! PNG_FP_IS_ZERO ( state )		7306198	0					
ANR	7306687	UnaryOperationExpression	! PNG_FP_IS_ZERO ( state )		7306198	0					
ANR	7306688	UnaryOperator	!		7306198	0					
ANR	7306689	CallExpression	PNG_FP_IS_ZERO ( state )		7306198	1					
ANR	7306690	Callee	PNG_FP_IS_ZERO		7306198	0					
ANR	7306691	Identifier	PNG_FP_IS_ZERO		7306198	0					
ANR	7306692	ArgumentList	state		7306198	1					
ANR	7306693	Argument	state		7306198	0					
ANR	7306694	Identifier	state		7306198	0					
ANR	7306695	ExpressionStatement	assert ( ! PNG_FP_IS_POSITIVE ( state ) )	167:9:4678:4712	7306198	3	True				
ANR	7306696	CallExpression	assert ( ! PNG_FP_IS_POSITIVE ( state ) )		7306198	0					
ANR	7306697	Callee	assert		7306198	0					
ANR	7306698	Identifier	assert		7306198	0					
ANR	7306699	ArgumentList	! PNG_FP_IS_POSITIVE ( state )		7306198	1					
ANR	7306700	Argument	! PNG_FP_IS_POSITIVE ( state )		7306198	0					
ANR	7306701	UnaryOperationExpression	! PNG_FP_IS_POSITIVE ( state )		7306198	0					
ANR	7306702	UnaryOperator	!		7306198	0					
ANR	7306703	CallExpression	PNG_FP_IS_POSITIVE ( state )		7306198	1					
ANR	7306704	Callee	PNG_FP_IS_POSITIVE		7306198	0					
ANR	7306705	Identifier	PNG_FP_IS_POSITIVE		7306198	0					
ANR	7306706	ArgumentList	state		7306198	1					
ANR	7306707	Argument	state		7306198	0					
ANR	7306708	Identifier	state		7306198	0					
ANR	7306709	ElseStatement	else		7306198	0					
ANR	7306710	IfStatement	if ( PNG_FP_IS_ZERO ( state ) && ! ( test == 0 ) )		7306198	0					
ANR	7306711	Condition	PNG_FP_IS_ZERO ( state ) && ! ( test == 0 )	169:15:4737:4773	7306198	0	True				
ANR	7306712	AndExpression	PNG_FP_IS_ZERO ( state ) && ! ( test == 0 )		7306198	0		&&			
ANR	7306713	CallExpression	PNG_FP_IS_ZERO ( state )		7306198	0					
ANR	7306714	Callee	PNG_FP_IS_ZERO		7306198	0					
ANR	7306715	Identifier	PNG_FP_IS_ZERO		7306198	0					
ANR	7306716	ArgumentList	state		7306198	1					
ANR	7306717	Argument	state		7306198	0					
ANR	7306718	Identifier	state		7306198	0					
ANR	7306719	UnaryOperationExpression	! ( test == 0 )		7306198	1					
ANR	7306720	UnaryOperator	!		7306198	0					
ANR	7306721	EqualityExpression	test == 0		7306198	1		==			
ANR	7306722	Identifier	test		7306198	0					
ANR	7306723	PrimaryExpression	0		7306198	1					
ANR	7306724	CompoundStatement		95:6:2680:2680	7306198	1					
ANR	7306725	ExpressionStatement	"fprintf ( stderr , ""%g[%d] -> '%s' but zero value not so reported\\n"" , test , precision , buffer )"	171:9:4793:4896	7306198	0	True				
ANR	7306726	CallExpression	"fprintf ( stderr , ""%g[%d] -> '%s' but zero value not so reported\\n"" , test , precision , buffer )"		7306198	0					
ANR	7306727	Callee	fprintf		7306198	0					
ANR	7306728	Identifier	fprintf		7306198	0					
ANR	7306729	ArgumentList	stderr		7306198	1					
ANR	7306730	Argument	stderr		7306198	0					
ANR	7306731	Identifier	stderr		7306198	0					
ANR	7306732	Argument	"""%g[%d] -> '%s' but zero value not so reported\\n"""		7306198	1					
ANR	7306733	PrimaryExpression	"""%g[%d] -> '%s' but zero value not so reported\\n"""		7306198	0					
ANR	7306734	Argument	test		7306198	2					
ANR	7306735	Identifier	test		7306198	0					
ANR	7306736	Argument	precision		7306198	3					
ANR	7306737	Identifier	precision		7306198	0					
ANR	7306738	Argument	buffer		7306198	4					
ANR	7306739	Identifier	buffer		7306198	0					
ANR	7306740	ExpressionStatement	failed = 1	173:9:4907:4917	7306198	1	True				
ANR	7306741	AssignmentExpression	failed = 1		7306198	0		=			
ANR	7306742	Identifier	failed		7306198	0					
ANR	7306743	PrimaryExpression	1		7306198	1					
ANR	7306744	ExpressionStatement	assert ( ! PNG_FP_IS_NEGATIVE ( state ) )	174:9:4928:4962	7306198	2	True				
ANR	7306745	CallExpression	assert ( ! PNG_FP_IS_NEGATIVE ( state ) )		7306198	0					
ANR	7306746	Callee	assert		7306198	0					
ANR	7306747	Identifier	assert		7306198	0					
ANR	7306748	ArgumentList	! PNG_FP_IS_NEGATIVE ( state )		7306198	1					
ANR	7306749	Argument	! PNG_FP_IS_NEGATIVE ( state )		7306198	0					
ANR	7306750	UnaryOperationExpression	! PNG_FP_IS_NEGATIVE ( state )		7306198	0					
ANR	7306751	UnaryOperator	!		7306198	0					
ANR	7306752	CallExpression	PNG_FP_IS_NEGATIVE ( state )		7306198	1					
ANR	7306753	Callee	PNG_FP_IS_NEGATIVE		7306198	0					
ANR	7306754	Identifier	PNG_FP_IS_NEGATIVE		7306198	0					
ANR	7306755	ArgumentList	state		7306198	1					
ANR	7306756	Argument	state		7306198	0					
ANR	7306757	Identifier	state		7306198	0					
ANR	7306758	ExpressionStatement	assert ( ! PNG_FP_IS_POSITIVE ( state ) )	175:9:4973:5007	7306198	3	True				
ANR	7306759	CallExpression	assert ( ! PNG_FP_IS_POSITIVE ( state ) )		7306198	0					
ANR	7306760	Callee	assert		7306198	0					
ANR	7306761	Identifier	assert		7306198	0					
ANR	7306762	ArgumentList	! PNG_FP_IS_POSITIVE ( state )		7306198	1					
ANR	7306763	Argument	! PNG_FP_IS_POSITIVE ( state )		7306198	0					
ANR	7306764	UnaryOperationExpression	! PNG_FP_IS_POSITIVE ( state )		7306198	0					
ANR	7306765	UnaryOperator	!		7306198	0					
ANR	7306766	CallExpression	PNG_FP_IS_POSITIVE ( state )		7306198	1					
ANR	7306767	Callee	PNG_FP_IS_POSITIVE		7306198	0					
ANR	7306768	Identifier	PNG_FP_IS_POSITIVE		7306198	0					
ANR	7306769	ArgumentList	state		7306198	1					
ANR	7306770	Argument	state		7306198	0					
ANR	7306771	Identifier	state		7306198	0					
ANR	7306772	ElseStatement	else		7306198	0					
ANR	7306773	IfStatement	if ( PNG_FP_IS_POSITIVE ( state ) && ! ( test > 0 ) )		7306198	0					
ANR	7306774	Condition	PNG_FP_IS_POSITIVE ( state ) && ! ( test > 0 )	177:15:5032:5071	7306198	0	True				
ANR	7306775	AndExpression	PNG_FP_IS_POSITIVE ( state ) && ! ( test > 0 )		7306198	0		&&			
ANR	7306776	CallExpression	PNG_FP_IS_POSITIVE ( state )		7306198	0					
ANR	7306777	Callee	PNG_FP_IS_POSITIVE		7306198	0					
ANR	7306778	Identifier	PNG_FP_IS_POSITIVE		7306198	0					
ANR	7306779	ArgumentList	state		7306198	1					
ANR	7306780	Argument	state		7306198	0					
ANR	7306781	Identifier	state		7306198	0					
ANR	7306782	UnaryOperationExpression	! ( test > 0 )		7306198	1					
ANR	7306783	UnaryOperator	!		7306198	0					
ANR	7306784	RelationalExpression	test > 0		7306198	1		>			
ANR	7306785	Identifier	test		7306198	0					
ANR	7306786	PrimaryExpression	0		7306198	1					
ANR	7306787	CompoundStatement		103:6:2978:2978	7306198	1					
ANR	7306788	ExpressionStatement	"fprintf ( stderr , ""%g[%d] -> '%s' but postive value not so reported\\n"" , test , precision , buffer )"	179:9:5091:5197	7306198	0	True				
ANR	7306789	CallExpression	"fprintf ( stderr , ""%g[%d] -> '%s' but postive value not so reported\\n"" , test , precision , buffer )"		7306198	0					
ANR	7306790	Callee	fprintf		7306198	0					
ANR	7306791	Identifier	fprintf		7306198	0					
ANR	7306792	ArgumentList	stderr		7306198	1					
ANR	7306793	Argument	stderr		7306198	0					
ANR	7306794	Identifier	stderr		7306198	0					
ANR	7306795	Argument	"""%g[%d] -> '%s' but postive value not so reported\\n"""		7306198	1					
ANR	7306796	PrimaryExpression	"""%g[%d] -> '%s' but postive value not so reported\\n"""		7306198	0					
ANR	7306797	Argument	test		7306198	2					
ANR	7306798	Identifier	test		7306198	0					
ANR	7306799	Argument	precision		7306198	3					
ANR	7306800	Identifier	precision		7306198	0					
ANR	7306801	Argument	buffer		7306198	4					
ANR	7306802	Identifier	buffer		7306198	0					
ANR	7306803	ExpressionStatement	failed = 1	181:9:5208:5218	7306198	1	True				
ANR	7306804	AssignmentExpression	failed = 1		7306198	0		=			
ANR	7306805	Identifier	failed		7306198	0					
ANR	7306806	PrimaryExpression	1		7306198	1					
ANR	7306807	ExpressionStatement	assert ( ! PNG_FP_IS_NEGATIVE ( state ) )	182:9:5229:5263	7306198	2	True				
ANR	7306808	CallExpression	assert ( ! PNG_FP_IS_NEGATIVE ( state ) )		7306198	0					
ANR	7306809	Callee	assert		7306198	0					
ANR	7306810	Identifier	assert		7306198	0					
ANR	7306811	ArgumentList	! PNG_FP_IS_NEGATIVE ( state )		7306198	1					
ANR	7306812	Argument	! PNG_FP_IS_NEGATIVE ( state )		7306198	0					
ANR	7306813	UnaryOperationExpression	! PNG_FP_IS_NEGATIVE ( state )		7306198	0					
ANR	7306814	UnaryOperator	!		7306198	0					
ANR	7306815	CallExpression	PNG_FP_IS_NEGATIVE ( state )		7306198	1					
ANR	7306816	Callee	PNG_FP_IS_NEGATIVE		7306198	0					
ANR	7306817	Identifier	PNG_FP_IS_NEGATIVE		7306198	0					
ANR	7306818	ArgumentList	state		7306198	1					
ANR	7306819	Argument	state		7306198	0					
ANR	7306820	Identifier	state		7306198	0					
ANR	7306821	ExpressionStatement	assert ( ! PNG_FP_IS_ZERO ( state ) )	183:9:5274:5304	7306198	3	True				
ANR	7306822	CallExpression	assert ( ! PNG_FP_IS_ZERO ( state ) )		7306198	0					
ANR	7306823	Callee	assert		7306198	0					
ANR	7306824	Identifier	assert		7306198	0					
ANR	7306825	ArgumentList	! PNG_FP_IS_ZERO ( state )		7306198	1					
ANR	7306826	Argument	! PNG_FP_IS_ZERO ( state )		7306198	0					
ANR	7306827	UnaryOperationExpression	! PNG_FP_IS_ZERO ( state )		7306198	0					
ANR	7306828	UnaryOperator	!		7306198	0					
ANR	7306829	CallExpression	PNG_FP_IS_ZERO ( state )		7306198	1					
ANR	7306830	Callee	PNG_FP_IS_ZERO		7306198	0					
ANR	7306831	Identifier	PNG_FP_IS_ZERO		7306198	0					
ANR	7306832	ArgumentList	state		7306198	1					
ANR	7306833	Argument	state		7306198	0					
ANR	7306834	Identifier	state		7306198	0					
ANR	7306835	ElseStatement	else		7306198	0					
ANR	7306836	CompoundStatement		115:9:3380:3467	7306198	0					
ANR	7306837	IdentifierDeclStatement	double out = atof ( buffer ) ;	188:9:5396:5421	7306198	0	True				
ANR	7306838	IdentifierDecl	out = atof ( buffer )		7306198	0					
ANR	7306839	IdentifierDeclType	double		7306198	0					
ANR	7306840	Identifier	out		7306198	1					
ANR	7306841	AssignmentExpression	out = atof ( buffer )		7306198	2		=			
ANR	7306842	Identifier	out		7306198	0					
ANR	7306843	CallExpression	atof ( buffer )		7306198	1					
ANR	7306844	Callee	atof		7306198	0					
ANR	7306845	Identifier	atof		7306198	0					
ANR	7306846	ArgumentList	buffer		7306198	1					
ANR	7306847	Argument	buffer		7306198	0					
ANR	7306848	Identifier	buffer		7306198	0					
ANR	7306849	IdentifierDeclStatement	double change = fabs ( ( out - test ) / test ) ;	189:9:5432:5471	7306198	1	True				
ANR	7306850	IdentifierDecl	change = fabs ( ( out - test ) / test )		7306198	0					
ANR	7306851	IdentifierDeclType	double		7306198	0					
ANR	7306852	Identifier	change		7306198	1					
ANR	7306853	AssignmentExpression	change = fabs ( ( out - test ) / test )		7306198	2		=			
ANR	7306854	Identifier	change		7306198	0					
ANR	7306855	CallExpression	fabs ( ( out - test ) / test )		7306198	1					
ANR	7306856	Callee	fabs		7306198	0					
ANR	7306857	Identifier	fabs		7306198	0					
ANR	7306858	ArgumentList	( out - test ) / test		7306198	1					
ANR	7306859	Argument	( out - test ) / test		7306198	0					
ANR	7306860	MultiplicativeExpression	( out - test ) / test		7306198	0		/			
ANR	7306861	AdditiveExpression	out - test		7306198	0		-			
ANR	7306862	Identifier	out		7306198	0					
ANR	7306863	Identifier	test		7306198	1					
ANR	7306864	Identifier	test		7306198	1					
ANR	7306865	IdentifierDeclStatement	"double allow = .5 / pow ( 10 , ( precision >= DBL_DIG ) ? DBL_DIG - 1 : precision - 1 ) ;"	190:9:5482:5569	7306198	2	True				
ANR	7306866	IdentifierDecl	"allow = .5 / pow ( 10 , ( precision >= DBL_DIG ) ? DBL_DIG - 1 : precision - 1 )"		7306198	0					
ANR	7306867	IdentifierDeclType	double		7306198	0					
ANR	7306868	Identifier	allow		7306198	1					
ANR	7306869	AssignmentExpression	"allow = .5 / pow ( 10 , ( precision >= DBL_DIG ) ? DBL_DIG - 1 : precision - 1 )"		7306198	2		=			
ANR	7306870	Identifier	allow		7306198	0					
ANR	7306871	MultiplicativeExpression	".5 / pow ( 10 , ( precision >= DBL_DIG ) ? DBL_DIG - 1 : precision - 1 )"		7306198	1		/			
ANR	7306872	PrimaryExpression	.5		7306198	0					
ANR	7306873	CallExpression	"pow ( 10 , ( precision >= DBL_DIG ) ? DBL_DIG - 1 : precision - 1 )"		7306198	1					
ANR	7306874	Callee	pow		7306198	0					
ANR	7306875	Identifier	pow		7306198	0					
ANR	7306876	ArgumentList	10		7306198	1					
ANR	7306877	Argument	10		7306198	0					
ANR	7306878	PrimaryExpression	10		7306198	0					
ANR	7306879	Argument	( precision >= DBL_DIG ) ? DBL_DIG - 1 : precision - 1		7306198	1					
ANR	7306880	ConditionalExpression	( precision >= DBL_DIG ) ? DBL_DIG - 1 : precision - 1		7306198	0					
ANR	7306881	Condition	precision >= DBL_DIG		7306198	0					
ANR	7306882	RelationalExpression	precision >= DBL_DIG		7306198	0		>=			
ANR	7306883	Identifier	precision		7306198	0					
ANR	7306884	Identifier	DBL_DIG		7306198	1					
ANR	7306885	AdditiveExpression	DBL_DIG - 1		7306198	1		-			
ANR	7306886	Identifier	DBL_DIG		7306198	0					
ANR	7306887	PrimaryExpression	1		7306198	1					
ANR	7306888	AdditiveExpression	precision - 1		7306198	2		-			
ANR	7306889	Identifier	precision		7306198	0					
ANR	7306890	PrimaryExpression	1		7306198	1					
ANR	7306891	IfStatement	if ( change >= allow && ( isfinite ( out ) || fabs ( test / DBL_MAX ) <= 1 - allow ) )		7306198	3					
ANR	7306892	Condition	change >= allow && ( isfinite ( out ) || fabs ( test / DBL_MAX ) <= 1 - allow )	200:13:6021:6100	7306198	0	True				
ANR	7306893	AndExpression	change >= allow && ( isfinite ( out ) || fabs ( test / DBL_MAX ) <= 1 - allow )		7306198	0		&&			
ANR	7306894	RelationalExpression	change >= allow		7306198	0		>=			
ANR	7306895	Identifier	change		7306198	0					
ANR	7306896	Identifier	allow		7306198	1					
ANR	7306897	OrExpression	isfinite ( out ) || fabs ( test / DBL_MAX ) <= 1 - allow		7306198	1		||			
ANR	7306898	CallExpression	isfinite ( out )		7306198	0					
ANR	7306899	Callee	isfinite		7306198	0					
ANR	7306900	Identifier	isfinite		7306198	0					
ANR	7306901	ArgumentList	out		7306198	1					
ANR	7306902	Argument	out		7306198	0					
ANR	7306903	Identifier	out		7306198	0					
ANR	7306904	RelationalExpression	fabs ( test / DBL_MAX ) <= 1 - allow		7306198	1		<=			
ANR	7306905	CallExpression	fabs ( test / DBL_MAX )		7306198	0					
ANR	7306906	Callee	fabs		7306198	0					
ANR	7306907	Identifier	fabs		7306198	0					
ANR	7306908	ArgumentList	test / DBL_MAX		7306198	1					
ANR	7306909	Argument	test / DBL_MAX		7306198	0					
ANR	7306910	MultiplicativeExpression	test / DBL_MAX		7306198	0		/			
ANR	7306911	Identifier	test		7306198	0					
ANR	7306912	Identifier	DBL_MAX		7306198	1					
ANR	7306913	AdditiveExpression	1 - allow		7306198	1		-			
ANR	7306914	PrimaryExpression	1		7306198	0					
ANR	7306915	Identifier	allow		7306198	1					
ANR	7306916	CompoundStatement		129:12:4105:4145	7306198	1					
ANR	7306917	IdentifierDeclStatement	double percent = ( precision >= DBL_DIG ) ? max_error_abs : max_error ;	203:12:6126:6193	7306198	0	True				
ANR	7306918	IdentifierDecl	percent = ( precision >= DBL_DIG ) ? max_error_abs : max_error		7306198	0					
ANR	7306919	IdentifierDeclType	double		7306198	0					
ANR	7306920	Identifier	percent		7306198	1					
ANR	7306921	AssignmentExpression	percent = ( precision >= DBL_DIG ) ? max_error_abs : max_error		7306198	2		=			
ANR	7306922	Identifier	percent		7306198	0					
ANR	7306923	ConditionalExpression	( precision >= DBL_DIG ) ? max_error_abs : max_error		7306198	1					
ANR	7306924	Condition	precision >= DBL_DIG		7306198	0					
ANR	7306925	RelationalExpression	precision >= DBL_DIG		7306198	0		>=			
ANR	7306926	Identifier	precision		7306198	0					
ANR	7306927	Identifier	DBL_DIG		7306198	1					
ANR	7306928	Identifier	max_error_abs		7306198	1					
ANR	7306929	Identifier	max_error		7306198	2					
ANR	7306930	IdentifierDeclStatement	double allowp = ( change - allow ) * 100 / allow ;	204:12:6207:6247	7306198	1	True				
ANR	7306931	IdentifierDecl	allowp = ( change - allow ) * 100 / allow		7306198	0					
ANR	7306932	IdentifierDeclType	double		7306198	0					
ANR	7306933	Identifier	allowp		7306198	1					
ANR	7306934	AssignmentExpression	allowp = ( change - allow ) * 100 / allow		7306198	2		=			
ANR	7306935	Identifier	allowp		7306198	0					
ANR	7306936	MultiplicativeExpression	( change - allow ) * 100 / allow		7306198	1		*			
ANR	7306937	AdditiveExpression	change - allow		7306198	0		-			
ANR	7306938	Identifier	change		7306198	0					
ANR	7306939	Identifier	allow		7306198	1					
ANR	7306940	MultiplicativeExpression	100 / allow		7306198	1		/			
ANR	7306941	PrimaryExpression	100		7306198	0					
ANR	7306942	Identifier	allow		7306198	1					
ANR	7306943	IfStatement	if ( precision >= DBL_DIG )		7306198	2					
ANR	7306944	Condition	precision >= DBL_DIG	206:16:6266:6285	7306198	0	True				
ANR	7306945	RelationalExpression	precision >= DBL_DIG		7306198	0		>=			
ANR	7306946	Identifier	precision		7306198	0					
ANR	7306947	Identifier	DBL_DIG		7306198	1					
ANR	7306948	CompoundStatement		132:12:4198:4198	7306198	1					
ANR	7306949	IfStatement	if ( max_abs < allowp )		7306198	0					
ANR	7306950	Condition	max_abs < allowp	208:19:6321:6336	7306198	0	True				
ANR	7306951	RelationalExpression	max_abs < allowp		7306198	0		<			
ANR	7306952	Identifier	max_abs		7306198	0					
ANR	7306953	Identifier	allowp		7306198	1					
ANR	7306954	ExpressionStatement	max_abs = allowp	208:37:6339:6355	7306198	1	True				
ANR	7306955	AssignmentExpression	max_abs = allowp		7306198	0		=			
ANR	7306956	Identifier	max_abs		7306198	0					
ANR	7306957	Identifier	allowp		7306198	1					
ANR	7306958	ElseStatement	else		7306198	0					
ANR	7306959	CompoundStatement		137:12:4299:4299	7306198	0					
ANR	7306960	IfStatement	if ( max < allowp )		7306198	0					
ANR	7306961	Condition	max < allowp	213:19:6422:6433	7306198	0	True				
ANR	7306962	RelationalExpression	max < allowp		7306198	0		<			
ANR	7306963	Identifier	max		7306198	0					
ANR	7306964	Identifier	allowp		7306198	1					
ANR	7306965	ExpressionStatement	max = allowp	213:33:6436:6448	7306198	1	True				
ANR	7306966	AssignmentExpression	max = allowp		7306198	0		=			
ANR	7306967	Identifier	max		7306198	0					
ANR	7306968	Identifier	allowp		7306198	1					
ANR	7306969	IfStatement	if ( showall || allowp >= percent )		7306198	3					
ANR	7306970	Condition	showall || allowp >= percent	216:16:6481:6508	7306198	0	True				
ANR	7306971	OrExpression	showall || allowp >= percent		7306198	0		||			
ANR	7306972	Identifier	showall		7306198	0					
ANR	7306973	RelationalExpression	allowp >= percent		7306198	1		>=			
ANR	7306974	Identifier	allowp		7306198	0					
ANR	7306975	Identifier	percent		7306198	1					
ANR	7306976	CompoundStatement		142:12:4421:4421	7306198	1					
ANR	7306977	ExpressionStatement	"fprintf ( stderr , ""%.*g[%d] -> '%s' -> %.*g number changed (%g > %g (%d%%))\\n"" , DBL_DIG , test , precision , buffer , DBL_DIG , out , change , allow , ( int ) round ( allowp ) )"	218:15:6540:6754	7306198	0	True				
ANR	7306978	CallExpression	"fprintf ( stderr , ""%.*g[%d] -> '%s' -> %.*g number changed (%g > %g (%d%%))\\n"" , DBL_DIG , test , precision , buffer , DBL_DIG , out , change , allow , ( int ) round ( allowp ) )"		7306198	0					
ANR	7306979	Callee	fprintf		7306198	0					
ANR	7306980	Identifier	fprintf		7306198	0					
ANR	7306981	ArgumentList	stderr		7306198	1					
ANR	7306982	Argument	stderr		7306198	0					
ANR	7306983	Identifier	stderr		7306198	0					
ANR	7306984	Argument	"""%.*g[%d] -> '%s' -> %.*g number changed (%g > %g (%d%%))\\n"""		7306198	1					
ANR	7306985	PrimaryExpression	"""%.*g[%d] -> '%s' -> %.*g number changed (%g > %g (%d%%))\\n"""		7306198	0					
ANR	7306986	Argument	DBL_DIG		7306198	2					
ANR	7306987	Identifier	DBL_DIG		7306198	0					
ANR	7306988	Argument	test		7306198	3					
ANR	7306989	Identifier	test		7306198	0					
ANR	7306990	Argument	precision		7306198	4					
ANR	7306991	Identifier	precision		7306198	0					
ANR	7306992	Argument	buffer		7306198	5					
ANR	7306993	Identifier	buffer		7306198	0					
ANR	7306994	Argument	DBL_DIG		7306198	6					
ANR	7306995	Identifier	DBL_DIG		7306198	0					
ANR	7306996	Argument	out		7306198	7					
ANR	7306997	Identifier	out		7306198	0					
ANR	7306998	Argument	change		7306198	8					
ANR	7306999	Identifier	change		7306198	0					
ANR	7307000	Argument	allow		7306198	9					
ANR	7307001	Identifier	allow		7306198	0					
ANR	7307002	Argument	( int ) round ( allowp )		7306198	10					
ANR	7307003	CastExpression	( int ) round ( allowp )		7306198	0					
ANR	7307004	CastTarget	int		7306198	0					
ANR	7307005	CallExpression	round ( allowp )		7306198	1					
ANR	7307006	Callee	round		7306198	0					
ANR	7307007	Identifier	round		7306198	0					
ANR	7307008	ArgumentList	allowp		7306198	1					
ANR	7307009	Argument	allowp		7306198	0					
ANR	7307010	Identifier	allowp		7306198	0					
ANR	7307011	ExpressionStatement	failed = 1	222:15:6771:6781	7306198	1	True				
ANR	7307012	AssignmentExpression	failed = 1		7306198	0		=			
ANR	7307013	Identifier	failed		7306198	0					
ANR	7307014	PrimaryExpression	1		7306198	1					
ANR	7307015	ElseStatement	else		7306198	0					
ANR	7307016	ExpressionStatement	++ minorarith	225:15:6829:6841	7306198	0	True				
ANR	7307017	UnaryExpression	++ minorarith		7306198	0					
ANR	7307018	IncDec	++		7306198	0					
ANR	7307019	Identifier	minorarith		7306198	1					
ANR	7307020	IfStatement	if ( failed )		7306198	11					
ANR	7307021	Condition	failed	229:10:6873:6878	7306198	0	True				
ANR	7307022	Identifier	failed		7306198	0					
ANR	7307023	ExpressionStatement	++ failcount	230:9:6890:6901	7306198	1	True				
ANR	7307024	UnaryExpression	++ failcount		7306198	0					
ANR	7307025	IncDec	++		7306198	0					
ANR	7307026	Identifier	failcount		7306198	1					
ANR	7307027	ElseStatement	else		7306198	0					
ANR	7307028	ExpressionStatement	++ ok	232:9:6923:6927	7306198	0	True				
ANR	7307029	UnaryExpression	++ ok		7306198	0					
ANR	7307030	IncDec	++		7306198	0					
ANR	7307031	Identifier	ok		7306198	1					
ANR	7307032	Label	skip :	234:0:6930:6934	7306198	12	True				
ANR	7307033	Identifier	skip		7306198	0					
ANR	7307034	ExpressionStatement	precision = rand ( )	236:6:6991:7009	7306198	13	True				
ANR	7307035	AssignmentExpression	precision = rand ( )		7306198	0		=			
ANR	7307036	Identifier	precision		7306198	0					
ANR	7307037	CallExpression	rand ( )		7306198	1					
ANR	7307038	Callee	rand		7306198	0					
ANR	7307039	Identifier	rand		7306198	0					
ANR	7307040	ArgumentList			7306198	1					
ANR	7307041	IfStatement	if ( precision & 1 )		7306198	14					
ANR	7307042	Condition	precision & 1	237:10:7021:7033	7306198	0	True				
ANR	7307043	BitAndExpression	precision & 1		7306198	0		&			
ANR	7307044	Identifier	precision		7306198	0					
ANR	7307045	PrimaryExpression	1		7306198	1					
ANR	7307046	ExpressionStatement	test = - test	237:25:7036:7048	7306198	1	True				
ANR	7307047	AssignmentExpression	test = - test		7306198	0		=			
ANR	7307048	Identifier	test		7306198	0					
ANR	7307049	UnaryOperationExpression	- test		7306198	1					
ANR	7307050	UnaryOperator	-		7306198	0					
ANR	7307051	Identifier	test		7306198	1					
ANR	7307052	ExpressionStatement	precision >>= 1	238:6:7056:7071	7306198	15	True				
ANR	7307053	AssignmentExpression	precision >>= 1		7306198	0		>>=			
ANR	7307054	Identifier	precision		7306198	0					
ANR	7307055	PrimaryExpression	1		7306198	1					
ANR	7307056	IfStatement	if ( test == 0 || ! isfinite ( test ) )		7306198	16					
ANR	7307057	Condition	test == 0 || ! isfinite ( test )	241:10:7121:7148	7306198	0	True				
ANR	7307058	OrExpression	test == 0 || ! isfinite ( test )		7306198	0		||			
ANR	7307059	EqualityExpression	test == 0		7306198	0		==			
ANR	7307060	Identifier	test		7306198	0					
ANR	7307061	PrimaryExpression	0		7306198	1					
ANR	7307062	UnaryOperationExpression	! isfinite ( test )		7306198	1					
ANR	7307063	UnaryOperator	!		7306198	0					
ANR	7307064	CallExpression	isfinite ( test )		7306198	1					
ANR	7307065	Callee	isfinite		7306198	0					
ANR	7307066	Identifier	isfinite		7306198	0					
ANR	7307067	ArgumentList	test		7306198	1					
ANR	7307068	Argument	test		7306198	0					
ANR	7307069	Identifier	test		7306198	0					
ANR	7307070	ExpressionStatement	test = precision + 1	242:9:7160:7178	7306198	1	True				
ANR	7307071	AssignmentExpression	test = precision + 1		7306198	0		=			
ANR	7307072	Identifier	test		7306198	0					
ANR	7307073	AdditiveExpression	precision + 1		7306198	1		+			
ANR	7307074	Identifier	precision		7306198	0					
ANR	7307075	PrimaryExpression	1		7306198	1					
ANR	7307076	ElseStatement	else		7306198	0					
ANR	7307077	CompoundStatement		172:9:5252:5259	7306198	0					
ANR	7307078	IdentifierDeclStatement	int exponent = precision % ( DBL_MAX_EXP - DBL_MIN_EXP ) + DBL_MIN_EXP ;	246:9:7275:7343	7306198	0	True				
ANR	7307079	IdentifierDecl	exponent = precision % ( DBL_MAX_EXP - DBL_MIN_EXP ) + DBL_MIN_EXP		7306198	0					
ANR	7307080	IdentifierDeclType	int		7306198	0					
ANR	7307081	Identifier	exponent		7306198	1					
ANR	7307082	AssignmentExpression	exponent = precision % ( DBL_MAX_EXP - DBL_MIN_EXP ) + DBL_MIN_EXP		7306198	2		=			
ANR	7307083	Identifier	exponent		7306198	0					
ANR	7307084	AdditiveExpression	precision % ( DBL_MAX_EXP - DBL_MIN_EXP ) + DBL_MIN_EXP		7306198	1		+			
ANR	7307085	MultiplicativeExpression	precision % ( DBL_MAX_EXP - DBL_MIN_EXP )		7306198	0		%			
ANR	7307086	Identifier	precision		7306198	0					
ANR	7307087	AdditiveExpression	DBL_MAX_EXP - DBL_MIN_EXP		7306198	1		-			
ANR	7307088	Identifier	DBL_MAX_EXP		7306198	0					
ANR	7307089	Identifier	DBL_MIN_EXP		7306198	1					
ANR	7307090	Identifier	DBL_MIN_EXP		7306198	1					
ANR	7307091	IdentifierDeclStatement	int tmp ;	247:9:7354:7361	7306198	1	True				
ANR	7307092	IdentifierDecl	tmp		7306198	0					
ANR	7307093	IdentifierDeclType	int		7306198	0					
ANR	7307094	Identifier	tmp		7306198	1					
ANR	7307095	ExpressionStatement	"test = frexp ( test * rand ( ) , & tmp )"	248:9:7372:7405	7306198	2	True				
ANR	7307096	AssignmentExpression	"test = frexp ( test * rand ( ) , & tmp )"		7306198	0		=			
ANR	7307097	Identifier	test		7306198	0					
ANR	7307098	CallExpression	"frexp ( test * rand ( ) , & tmp )"		7306198	1					
ANR	7307099	Callee	frexp		7306198	0					
ANR	7307100	Identifier	frexp		7306198	0					
ANR	7307101	ArgumentList	test * rand ( )		7306198	1					
ANR	7307102	Argument	test * rand ( )		7306198	0					
ANR	7307103	MultiplicativeExpression	test * rand ( )		7306198	0		*			
ANR	7307104	Identifier	test		7306198	0					
ANR	7307105	CallExpression	rand ( )		7306198	1					
ANR	7307106	Callee	rand		7306198	0					
ANR	7307107	Identifier	rand		7306198	0					
ANR	7307108	ArgumentList			7306198	1					
ANR	7307109	Argument	& tmp		7306198	1					
ANR	7307110	UnaryOperationExpression	& tmp		7306198	0					
ANR	7307111	UnaryOperator	&		7306198	0					
ANR	7307112	Identifier	tmp		7306198	1					
ANR	7307113	ExpressionStatement	"test = ldexp ( test , exponent )"	249:9:7416:7444	7306198	3	True				
ANR	7307114	AssignmentExpression	"test = ldexp ( test , exponent )"		7306198	0		=			
ANR	7307115	Identifier	test		7306198	0					
ANR	7307116	CallExpression	"ldexp ( test , exponent )"		7306198	1					
ANR	7307117	Callee	ldexp		7306198	0					
ANR	7307118	Identifier	ldexp		7306198	0					
ANR	7307119	ArgumentList	test		7306198	1					
ANR	7307120	Argument	test		7306198	0					
ANR	7307121	Identifier	test		7306198	0					
ANR	7307122	Argument	exponent		7306198	1					
ANR	7307123	Identifier	exponent		7306198	0					
ANR	7307124	ExpressionStatement	precision >>= 8	250:9:7455:7470	7306198	4	True				
ANR	7307125	AssignmentExpression	precision >>= 8		7306198	0		>>=			
ANR	7307126	Identifier	precision		7306198	0					
ANR	7307127	PrimaryExpression	8		7306198	1					
ANR	7307128	ExpressionStatement	precision = ( precision & 0x1f ) + 1	256:6:7642:7676	7306198	17	True				
ANR	7307129	AssignmentExpression	precision = ( precision & 0x1f ) + 1		7306198	0		=			
ANR	7307130	Identifier	precision		7306198	0					
ANR	7307131	AdditiveExpression	( precision & 0x1f ) + 1		7306198	1		+			
ANR	7307132	BitAndExpression	precision & 0x1f		7306198	0		&			
ANR	7307133	Identifier	precision		7306198	0					
ANR	7307134	PrimaryExpression	0x1f		7306198	1					
ANR	7307135	PrimaryExpression	1		7306198	1					
ANR	7307136	Condition	-- count	258:10:7693:7699	7306198	1	True				
ANR	7307137	UnaryExpression	-- count		7306198	0					
ANR	7307138	IncDec	--		7306198	0					
ANR	7307139	Identifier	count		7306198	1					
ANR	7307140	Statement	printf	260:3:7707:7712	7306198	14	True				
ANR	7307141	Statement	(	260:9:7713:7713	7306198	15	True				
ANR	7307142	Statement	"""Tested %d finite values, %d non-finite, %d OK (%d failed) %d minor """	260:10:7714:7782	7306198	16	True				
ANR	7307143	Statement	"""arithmetic errors\\n"""	261:6:7790:7810	7306198	17	True				
ANR	7307144	Statement	","	261:27:7811:7811	7306198	18	True				
ANR	7307145	Statement	finite	261:29:7813:7818	7306198	19	True				
ANR	7307146	Statement	","	261:35:7819:7819	7306198	20	True				
ANR	7307147	Statement	nonfinite	261:37:7821:7829	7306198	21	True				
ANR	7307148	Statement	","	261:46:7830:7830	7306198	22	True				
ANR	7307149	Statement	ok	261:48:7832:7833	7306198	23	True				
ANR	7307150	Statement	","	261:50:7834:7834	7306198	24	True				
ANR	7307151	Statement	failcount	261:52:7836:7844	7306198	25	True				
ANR	7307152	Statement	","	261:61:7845:7845	7306198	26	True				
ANR	7307153	Statement	minorarith	261:63:7847:7856	7306198	27	True				
ANR	7307154	Statement	)	261:73:7857:7857	7306198	28	True				
ANR	7307155	ExpressionStatement		261:74:7858:7858	7306198	29	True				
ANR	7307156	ExpressionStatement	"printf ( "" Error with >=%d digit precision %.2f%%\\n"" , DBL_DIG , max_abs )"	262:3:7863:7932	7306198	30	True				
ANR	7307157	CallExpression	"printf ( "" Error with >=%d digit precision %.2f%%\\n"" , DBL_DIG , max_abs )"		7306198	0					
ANR	7307158	Callee	printf		7306198	0					
ANR	7307159	Identifier	printf		7306198	0					
ANR	7307160	ArgumentList	""" Error with >=%d digit precision %.2f%%\\n"""		7306198	1					
ANR	7307161	Argument	""" Error with >=%d digit precision %.2f%%\\n"""		7306198	0					
ANR	7307162	PrimaryExpression	""" Error with >=%d digit precision %.2f%%\\n"""		7306198	0					
ANR	7307163	Argument	DBL_DIG		7306198	1					
ANR	7307164	Identifier	DBL_DIG		7306198	0					
ANR	7307165	Argument	max_abs		7306198	2					
ANR	7307166	Identifier	max_abs		7306198	0					
ANR	7307167	ExpressionStatement	"printf ( "" Error with < %d digit precision %.2f%%\\n"" , DBL_DIG , max )"	263:3:7937:8002	7306198	31	True				
ANR	7307168	CallExpression	"printf ( "" Error with < %d digit precision %.2f%%\\n"" , DBL_DIG , max )"		7306198	0					
ANR	7307169	Callee	printf		7306198	0					
ANR	7307170	Identifier	printf		7306198	0					
ANR	7307171	ArgumentList	""" Error with < %d digit precision %.2f%%\\n"""		7306198	1					
ANR	7307172	Argument	""" Error with < %d digit precision %.2f%%\\n"""		7306198	0					
ANR	7307173	PrimaryExpression	""" Error with < %d digit precision %.2f%%\\n"""		7306198	0					
ANR	7307174	Argument	DBL_DIG		7306198	1					
ANR	7307175	Identifier	DBL_DIG		7306198	0					
ANR	7307176	Argument	max		7306198	2					
ANR	7307177	Identifier	max		7306198	0					
ANR	7307178	ReturnStatement	return 0 ;	265:3:8008:8016	7306198	32	True				
ANR	7307179	PrimaryExpression	0		7306198	0					
ANR	7307180	ReturnType	int		7306198	1					
ANR	7307181	Identifier	validation_ascii_to_fp		7306198	2					
ANR	7307182	ParameterList	"int count , int argc , char * * argv"		7306198	3					
ANR	7307183	Parameter	int count	75:27:2067:2075	7306198	0	True				
ANR	7307184	ParameterType	int		7306198	0					
ANR	7307185	Identifier	count		7306198	1					
ANR	7307186	Parameter	int argc	75:38:2078:2085	7306198	1	True				
ANR	7307187	ParameterType	int		7306198	0					
ANR	7307188	Identifier	argc		7306198	1					
ANR	7307189	Parameter	char * * argv	75:48:2088:2098	7306198	2	True				
ANR	7307190	ParameterType	char * *		7306198	0					
ANR	7307191	Identifier	argv		7306198	1					
ANR	7307192	CFGEntryNode	ENTRY		7306198		True				
ANR	7307193	CFGExitNode	EXIT		7306198		True				
ANR	7307194	Symbol	frexp		7306198						
ANR	7307195	Symbol	ldexp		7306198						
ANR	7307196	Symbol	precision		7306198						
ANR	7307197	Symbol	* index		7306198						
ANR	7307198	Symbol	isfinite		7306198						
ANR	7307199	Symbol	* argv		7306198						
ANR	7307200	Symbol	PNG_FP_IS_ZERO		7306198						
ANR	7307201	Symbol	PNG_FP_IS_POSITIVE		7306198						
ANR	7307202	Symbol	rand		7306198						
ANR	7307203	Symbol	strlen		7306198						
ANR	7307204	Symbol	DBL_DIG		7306198						
ANR	7307205	Symbol	tmp		7306198						
ANR	7307206	Symbol	max_error_abs		7306198						
ANR	7307207	Symbol	state		7306198						
ANR	7307208	Symbol	buffer		7306198						
ANR	7307209	Symbol	& index		7306198						
ANR	7307210	Symbol	PNG_FP_IS_NEGATIVE		7306198						
ANR	7307211	Symbol	exponent		7306198						
ANR	7307212	Symbol	strcmp		7306198						
ANR	7307213	Symbol	test		7306198						
ANR	7307214	Symbol	* precision		7306198						
ANR	7307215	Symbol	png_check_fp_number		7306198						
ANR	7307216	Symbol	finite		7306198						
ANR	7307217	Symbol	count		7306198						
ANR	7307218	Symbol	index		7306198						
ANR	7307219	Symbol	failed		7306198						
ANR	7307220	Symbol	stderr		7306198						
ANR	7307221	Symbol	max_error		7306198						
ANR	7307222	Symbol	DBL_MAX		7306198						
ANR	7307223	Symbol	minorarith		7306198						
ANR	7307224	Symbol	& tmp		7306198						
ANR	7307225	Symbol	showall		7306198						
ANR	7307226	Symbol	nonfinite		7306198						
ANR	7307227	Symbol	allow		7306198						
ANR	7307228	Symbol	max_abs		7306198						
ANR	7307229	Symbol	& state		7306198						
ANR	7307230	Symbol	failcount		7306198						
ANR	7307231	Symbol	argv		7306198						
ANR	7307232	Symbol	percent		7306198						
ANR	7307233	Symbol	out		7306198						
ANR	7307234	Symbol	pow		7306198						
ANR	7307235	Symbol	ok		7306198						
ANR	7307236	Symbol	argc		7306198						
ANR	7307237	Symbol	* buffer		7306198						
ANR	7307238	Symbol	fabs		7306198						
ANR	7307239	Symbol	max		7306198						
ANR	7307240	Symbol	atof		7306198						
ANR	7307241	Symbol	change		7306198						
ANR	7307242	Symbol	DBL_MIN_EXP		7306198						
ANR	7307243	Symbol	allowp		7306198						
ANR	7307244	Symbol	verbose		7306198						
ANR	7307245	Symbol	DBL_MAX_EXP		7306198						
ANR	7307246	Symbol	round		7306198						
ANR	7307247	Symbol	* ++ argv		7306198						
ANR	7307248	ClassDef	checkfp_state	275:8:8254:8327							
ANR	7307249	DeclStmt									
ANR	7307250	Decl							checkfp_state	checkfp_state	checkfp_state
ANR	7307251	DeclStmt									
ANR	7307252	Decl							const char	const char [ ]	none
ANR	7307253	DeclStmt									
ANR	7307254	Decl							const char	const char [ 16 ]	hexdigits
ANR	7307255	ClassDef	<unnamed>	284:13:8500:8878							
ANR	7307256	DeclStmt									
ANR	7307257	Decl							const char	const char *	start
ANR	7307258	DeclStmt									
ANR	7307259	Decl							const char	const char *	end
ANR	7307260	DeclStmt									
ANR	7307261	Decl							const char	const char *	tests
ANR	7307262	DeclStmt									
ANR	7307263	Decl								 [ states ]	state_characters
ANR	7307264	ClassDef	<unnamed>	297:8:8889:9294							
ANR	7307265	DeclStmt									
ANR	7307266	Decl							char	char [ 1024 ]	number
ANR	7307267	DeclStmt									
ANR	7307268	Decl							int	int	limit
ANR	7307269	DeclStmt									
ANR	7307270	Decl							int	int	verbose
ANR	7307271	DeclStmt									
ANR	7307272	Decl							int	int	ctimes
ANR	7307273	DeclStmt									
ANR	7307274	Decl							int	int	cmillions
ANR	7307275	DeclStmt									
ANR	7307276	Decl							int	int	cinvalid
ANR	7307277	DeclStmt									
ANR	7307278	Decl							int	int	cnoaccept
ANR	7307279	DeclStmt									
ANR	7307280	Decl									checkfp_command
ANR	7307281	ClassDef	<unnamed>	309:8:9305:9936							
ANR	7307282	DeclStmt									
ANR	7307283	Decl							int	int	cnumber
ANR	7307284	DeclStmt									
ANR	7307285	Decl							checkfp_state	checkfp_state	check_state
ANR	7307286	DeclStmt									
ANR	7307287	Decl							int	int	at_start
ANR	7307288	DeclStmt									
ANR	7307289	Decl							int	int	cdigits_in_state
ANR	7307290	DeclStmt									
ANR	7307291	Decl							int	int	limit
ANR	7307292	DeclStmt									
ANR	7307293	Decl							int	int	state
ANR	7307294	DeclStmt									
ANR	7307295	Decl							int	int	is_negative
ANR	7307296	DeclStmt									
ANR	7307297	Decl							int	int	is_zero
ANR	7307298	DeclStmt									
ANR	7307299	Decl							int	int	number_was_valid
ANR	7307300	DeclStmt									
ANR	7307301	Decl									checkfp_control
ANR	7307302	DeclStmt									
ANR	7307303	Decl							int	"int ( checkfp_command * co , checkfp_control c )"	check_all_characters
ANR	7307304	DeclStmt									
ANR	7307305	Decl							int	"int ( checkfp_command * co , checkfp_control c , const char * tests )"	check_some_characters
ANR	7307306	Function	check_one_character	328:0:10110:15369							
ANR	7307307	FunctionDef	"check_one_character (checkfp_command * co , checkfp_control c , int ch)"		7307306	0					
ANR	7307308	CompoundStatement		329:0:10189:15369	7307306	0					
ANR	7307309	IdentifierDeclStatement	png_size_t index = 0 ;	332:3:10277:10297	7307306	0	True				
ANR	7307310	IdentifierDecl	index = 0		7307306	0					
ANR	7307311	IdentifierDeclType	png_size_t		7307306	0					
ANR	7307312	Identifier	index		7307306	1					
ANR	7307313	AssignmentExpression	index = 0		7307306	2		=			
ANR	7307314	Identifier	index		7307306	0					
ANR	7307315	PrimaryExpression	0		7307306	1					
ANR	7307316	IdentifierDeclStatement	const char test = ( char ) ch ;	333:3:10302:10328	7307306	1	True				
ANR	7307317	IdentifierDecl	test = ( char ) ch		7307306	0					
ANR	7307318	IdentifierDeclType	const char		7307306	0					
ANR	7307319	Identifier	test		7307306	1					
ANR	7307320	AssignmentExpression	test = ( char ) ch		7307306	2		=			
ANR	7307321	Identifier	test		7307306	0					
ANR	7307322	CastExpression	( char ) ch		7307306	1					
ANR	7307323	CastTarget	char		7307306	0					
ANR	7307324	Identifier	ch		7307306	1					
ANR	7307325	IdentifierDeclStatement	"const int number_is_valid = png_check_fp_number ( & test , 1 , & c . state , & index ) ;"	334:3:10333:10408	7307306	2	True				
ANR	7307326	IdentifierDecl	"number_is_valid = png_check_fp_number ( & test , 1 , & c . state , & index )"		7307306	0					
ANR	7307327	IdentifierDeclType	const int		7307306	0					
ANR	7307328	Identifier	number_is_valid		7307306	1					
ANR	7307329	AssignmentExpression	"number_is_valid = png_check_fp_number ( & test , 1 , & c . state , & index )"		7307306	2		=			
ANR	7307330	Identifier	number_is_valid		7307306	0					
ANR	7307331	CallExpression	"png_check_fp_number ( & test , 1 , & c . state , & index )"		7307306	1					
ANR	7307332	Callee	png_check_fp_number		7307306	0					
ANR	7307333	Identifier	png_check_fp_number		7307306	0					
ANR	7307334	ArgumentList	& test		7307306	1					
ANR	7307335	Argument	& test		7307306	0					
ANR	7307336	UnaryOperationExpression	& test		7307306	0					
ANR	7307337	UnaryOperator	&		7307306	0					
ANR	7307338	Identifier	test		7307306	1					
ANR	7307339	Argument	1		7307306	1					
ANR	7307340	PrimaryExpression	1		7307306	0					
ANR	7307341	Argument	& c . state		7307306	2					
ANR	7307342	UnaryOperationExpression	& c . state		7307306	0					
ANR	7307343	UnaryOperator	&		7307306	0					
ANR	7307344	MemberAccess	c . state		7307306	1					
ANR	7307345	Identifier	c		7307306	0					
ANR	7307346	Identifier	state		7307306	1					
ANR	7307347	Argument	& index		7307306	3					
ANR	7307348	UnaryOperationExpression	& index		7307306	0					
ANR	7307349	UnaryOperator	&		7307306	0					
ANR	7307350	Identifier	index		7307306	1					
ANR	7307351	IdentifierDeclStatement	const int character_accepted = ( index == 1 ) ;	335:3:10413:10456	7307306	3	True				
ANR	7307352	IdentifierDecl	character_accepted = ( index == 1 )		7307306	0					
ANR	7307353	IdentifierDeclType	const int		7307306	0					
ANR	7307354	Identifier	character_accepted		7307306	1					
ANR	7307355	AssignmentExpression	character_accepted = ( index == 1 )		7307306	2		=			
ANR	7307356	Identifier	character_accepted		7307306	0					
ANR	7307357	EqualityExpression	index == 1		7307306	1		==			
ANR	7307358	Identifier	index		7307306	0					
ANR	7307359	PrimaryExpression	1		7307306	1					
ANR	7307360	IfStatement	if ( c . check_state != exponent && isdigit ( ch ) && ch != '0' )		7307306	4					
ANR	7307361	Condition	c . check_state != exponent && isdigit ( ch ) && ch != '0'	337:7:10466:10518	7307306	0	True				
ANR	7307362	AndExpression	c . check_state != exponent && isdigit ( ch ) && ch != '0'		7307306	0		&&			
ANR	7307363	EqualityExpression	c . check_state != exponent		7307306	0		!=			
ANR	7307364	MemberAccess	c . check_state		7307306	0					
ANR	7307365	Identifier	c		7307306	0					
ANR	7307366	Identifier	check_state		7307306	1					
ANR	7307367	Identifier	exponent		7307306	1					
ANR	7307368	AndExpression	isdigit ( ch ) && ch != '0'		7307306	1		&&			
ANR	7307369	CallExpression	isdigit ( ch )		7307306	0					
ANR	7307370	Callee	isdigit		7307306	0					
ANR	7307371	Identifier	isdigit		7307306	0					
ANR	7307372	ArgumentList	ch		7307306	1					
ANR	7307373	Argument	ch		7307306	0					
ANR	7307374	Identifier	ch		7307306	0					
ANR	7307375	EqualityExpression	ch != '0'		7307306	1		!=			
ANR	7307376	Identifier	ch		7307306	0					
ANR	7307377	PrimaryExpression	'0'		7307306	1					
ANR	7307378	ExpressionStatement	c . is_zero = 0	338:6:10527:10540	7307306	1	True				
ANR	7307379	AssignmentExpression	c . is_zero = 0		7307306	0		=			
ANR	7307380	MemberAccess	c . is_zero		7307306	0					
ANR	7307381	Identifier	c		7307306	0					
ANR	7307382	Identifier	is_zero		7307306	1					
ANR	7307383	PrimaryExpression	0		7307306	1					
ANR	7307384	IfStatement	if ( c . check_state == start && c . at_start && ch == '-' )		7307306	5					
ANR	7307385	Condition	c . check_state == start && c . at_start && ch == '-'	340:7:10550:10598	7307306	0	True				
ANR	7307386	AndExpression	c . check_state == start && c . at_start && ch == '-'		7307306	0		&&			
ANR	7307387	EqualityExpression	c . check_state == start		7307306	0		==			
ANR	7307388	MemberAccess	c . check_state		7307306	0					
ANR	7307389	Identifier	c		7307306	0					
ANR	7307390	Identifier	check_state		7307306	1					
ANR	7307391	Identifier	start		7307306	1					
ANR	7307392	AndExpression	c . at_start && ch == '-'		7307306	1		&&			
ANR	7307393	MemberAccess	c . at_start		7307306	0					
ANR	7307394	Identifier	c		7307306	0					
ANR	7307395	Identifier	at_start		7307306	1					
ANR	7307396	EqualityExpression	ch == '-'		7307306	1		==			
ANR	7307397	Identifier	ch		7307306	0					
ANR	7307398	PrimaryExpression	'-'		7307306	1					
ANR	7307399	ExpressionStatement	c . is_negative = 1	341:6:10607:10624	7307306	1	True				
ANR	7307400	AssignmentExpression	c . is_negative = 1		7307306	0		=			
ANR	7307401	MemberAccess	c . is_negative		7307306	0					
ANR	7307402	Identifier	c		7307306	0					
ANR	7307403	Identifier	is_negative		7307306	1					
ANR	7307404	PrimaryExpression	1		7307306	1					
ANR	7307405	IfStatement	if ( isprint ( ch ) )		7307306	6					
ANR	7307406	Condition	isprint ( ch )	343:7:10634:10644	7307306	0	True				
ANR	7307407	CallExpression	isprint ( ch )		7307306	0					
ANR	7307408	Callee	isprint		7307306	0					
ANR	7307409	Identifier	isprint		7307306	0					
ANR	7307410	ArgumentList	ch		7307306	1					
ANR	7307411	Argument	ch		7307306	0					
ANR	7307412	Identifier	ch		7307306	0					
ANR	7307413	ExpressionStatement	co -> number [ c . cnumber ++ ] = ( char ) ch	344:6:10653:10687	7307306	1	True				
ANR	7307414	AssignmentExpression	co -> number [ c . cnumber ++ ] = ( char ) ch		7307306	0		=			
ANR	7307415	ArrayIndexing	co -> number [ c . cnumber ++ ]		7307306	0					
ANR	7307416	PtrMemberAccess	co -> number		7307306	0					
ANR	7307417	Identifier	co		7307306	0					
ANR	7307418	Identifier	number		7307306	1					
ANR	7307419	PostIncDecOperationExpression	c . cnumber ++		7307306	1					
ANR	7307420	MemberAccess	c . cnumber		7307306	0					
ANR	7307421	Identifier	c		7307306	0					
ANR	7307422	Identifier	cnumber		7307306	1					
ANR	7307423	IncDec	++		7307306	1					
ANR	7307424	CastExpression	( char ) ch		7307306	1					
ANR	7307425	CastTarget	char		7307306	0					
ANR	7307426	Identifier	ch		7307306	1					
ANR	7307427	ElseStatement	else		7307306	0					
ANR	7307428	CompoundStatement		18:3:510:510	7307306	0					
ANR	7307429	ExpressionStatement	co -> number [ c . cnumber ++ ] = '<'	347:6:10708:10737	7307306	0	True				
ANR	7307430	AssignmentExpression	co -> number [ c . cnumber ++ ] = '<'		7307306	0		=			
ANR	7307431	ArrayIndexing	co -> number [ c . cnumber ++ ]		7307306	0					
ANR	7307432	PtrMemberAccess	co -> number		7307306	0					
ANR	7307433	Identifier	co		7307306	0					
ANR	7307434	Identifier	number		7307306	1					
ANR	7307435	PostIncDecOperationExpression	c . cnumber ++		7307306	1					
ANR	7307436	MemberAccess	c . cnumber		7307306	0					
ANR	7307437	Identifier	c		7307306	0					
ANR	7307438	Identifier	cnumber		7307306	1					
ANR	7307439	IncDec	++		7307306	1					
ANR	7307440	PrimaryExpression	'<'		7307306	1					
ANR	7307441	ExpressionStatement	co -> number [ c . cnumber ++ ] = hexdigits [ ( ch >> 4 ) & 0xf ]	348:6:10745:10797	7307306	1	True				
ANR	7307442	AssignmentExpression	co -> number [ c . cnumber ++ ] = hexdigits [ ( ch >> 4 ) & 0xf ]		7307306	0		=			
ANR	7307443	ArrayIndexing	co -> number [ c . cnumber ++ ]		7307306	0					
ANR	7307444	PtrMemberAccess	co -> number		7307306	0					
ANR	7307445	Identifier	co		7307306	0					
ANR	7307446	Identifier	number		7307306	1					
ANR	7307447	PostIncDecOperationExpression	c . cnumber ++		7307306	1					
ANR	7307448	MemberAccess	c . cnumber		7307306	0					
ANR	7307449	Identifier	c		7307306	0					
ANR	7307450	Identifier	cnumber		7307306	1					
ANR	7307451	IncDec	++		7307306	1					
ANR	7307452	ArrayIndexing	hexdigits [ ( ch >> 4 ) & 0xf ]		7307306	1					
ANR	7307453	Identifier	hexdigits		7307306	0					
ANR	7307454	BitAndExpression	( ch >> 4 ) & 0xf		7307306	1		&			
ANR	7307455	ShiftExpression	ch >> 4		7307306	0		>>			
ANR	7307456	Identifier	ch		7307306	0					
ANR	7307457	PrimaryExpression	4		7307306	1					
ANR	7307458	PrimaryExpression	0xf		7307306	1					
ANR	7307459	ExpressionStatement	co -> number [ c . cnumber ++ ] = hexdigits [ ch & 0xf ]	349:6:10805:10850	7307306	2	True				
ANR	7307460	AssignmentExpression	co -> number [ c . cnumber ++ ] = hexdigits [ ch & 0xf ]		7307306	0		=			
ANR	7307461	ArrayIndexing	co -> number [ c . cnumber ++ ]		7307306	0					
ANR	7307462	PtrMemberAccess	co -> number		7307306	0					
ANR	7307463	Identifier	co		7307306	0					
ANR	7307464	Identifier	number		7307306	1					
ANR	7307465	PostIncDecOperationExpression	c . cnumber ++		7307306	1					
ANR	7307466	MemberAccess	c . cnumber		7307306	0					
ANR	7307467	Identifier	c		7307306	0					
ANR	7307468	Identifier	cnumber		7307306	1					
ANR	7307469	IncDec	++		7307306	1					
ANR	7307470	ArrayIndexing	hexdigits [ ch & 0xf ]		7307306	1					
ANR	7307471	Identifier	hexdigits		7307306	0					
ANR	7307472	BitAndExpression	ch & 0xf		7307306	1		&			
ANR	7307473	Identifier	ch		7307306	0					
ANR	7307474	PrimaryExpression	0xf		7307306	1					
ANR	7307475	ExpressionStatement	co -> number [ c . cnumber ++ ] = '>'	350:6:10858:10887	7307306	3	True				
ANR	7307476	AssignmentExpression	co -> number [ c . cnumber ++ ] = '>'		7307306	0		=			
ANR	7307477	ArrayIndexing	co -> number [ c . cnumber ++ ]		7307306	0					
ANR	7307478	PtrMemberAccess	co -> number		7307306	0					
ANR	7307479	Identifier	co		7307306	0					
ANR	7307480	Identifier	number		7307306	1					
ANR	7307481	PostIncDecOperationExpression	c . cnumber ++		7307306	1					
ANR	7307482	MemberAccess	c . cnumber		7307306	0					
ANR	7307483	Identifier	c		7307306	0					
ANR	7307484	Identifier	cnumber		7307306	1					
ANR	7307485	IncDec	++		7307306	1					
ANR	7307486	PrimaryExpression	'>'		7307306	1					
ANR	7307487	ExpressionStatement	co -> number [ c . cnumber ] = 0	352:3:10897:10922	7307306	7	True				
ANR	7307488	AssignmentExpression	co -> number [ c . cnumber ] = 0		7307306	0		=			
ANR	7307489	ArrayIndexing	co -> number [ c . cnumber ]		7307306	0					
ANR	7307490	PtrMemberAccess	co -> number		7307306	0					
ANR	7307491	Identifier	co		7307306	0					
ANR	7307492	Identifier	number		7307306	1					
ANR	7307493	MemberAccess	c . cnumber		7307306	1					
ANR	7307494	Identifier	c		7307306	0					
ANR	7307495	Identifier	cnumber		7307306	1					
ANR	7307496	PrimaryExpression	0		7307306	1					
ANR	7307497	IfStatement	if ( co -> verbose > 1 )		7307306	8					
ANR	7307498	Condition	co -> verbose > 1	354:7:10932:10946	7307306	0	True				
ANR	7307499	RelationalExpression	co -> verbose > 1		7307306	0		>			
ANR	7307500	PtrMemberAccess	co -> verbose		7307306	0					
ANR	7307501	Identifier	co		7307306	0					
ANR	7307502	Identifier	verbose		7307306	1					
ANR	7307503	PrimaryExpression	1		7307306	1					
ANR	7307504	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , co -> number )"	355:6:10955:10990	7307306	1	True				
ANR	7307505	CallExpression	"fprintf ( stderr , ""%s\\n"" , co -> number )"		7307306	0					
ANR	7307506	Callee	fprintf		7307306	0					
ANR	7307507	Identifier	fprintf		7307306	0					
ANR	7307508	ArgumentList	stderr		7307306	1					
ANR	7307509	Argument	stderr		7307306	0					
ANR	7307510	Identifier	stderr		7307306	0					
ANR	7307511	Argument	"""%s\\n"""		7307306	1					
ANR	7307512	PrimaryExpression	"""%s\\n"""		7307306	0					
ANR	7307513	Argument	co -> number		7307306	2					
ANR	7307514	PtrMemberAccess	co -> number		7307306	0					
ANR	7307515	Identifier	co		7307306	0					
ANR	7307516	Identifier	number		7307306	1					
ANR	7307517	IfStatement	if ( ++ ( co -> ctimes ) == 1000000 )		7307306	9					
ANR	7307518	Condition	++ ( co -> ctimes ) == 1000000	357:7:11000:11024	7307306	0	True				
ANR	7307519	EqualityExpression	++ ( co -> ctimes ) == 1000000		7307306	0		==			
ANR	7307520	UnaryExpression	++ ( co -> ctimes )		7307306	0					
ANR	7307521	IncDec	++		7307306	0					
ANR	7307522	PtrMemberAccess	co -> ctimes		7307306	1					
ANR	7307523	Identifier	co		7307306	0					
ANR	7307524	Identifier	ctimes		7307306	1					
ANR	7307525	PrimaryExpression	1000000		7307306	1					
ANR	7307526	CompoundStatement		30:3:840:840	7307306	1					
ANR	7307527	IfStatement	if ( co -> verbose == 1 )		7307306	0					
ANR	7307528	Condition	co -> verbose == 1	359:10:11042:11057	7307306	0	True				
ANR	7307529	EqualityExpression	co -> verbose == 1		7307306	0		==			
ANR	7307530	PtrMemberAccess	co -> verbose		7307306	0					
ANR	7307531	Identifier	co		7307306	0					
ANR	7307532	Identifier	verbose		7307306	1					
ANR	7307533	PrimaryExpression	1		7307306	1					
ANR	7307534	ExpressionStatement	"fputc ( '.' , stderr )"	360:9:11069:11087	7307306	1	True				
ANR	7307535	CallExpression	"fputc ( '.' , stderr )"		7307306	0					
ANR	7307536	Callee	fputc		7307306	0					
ANR	7307537	Identifier	fputc		7307306	0					
ANR	7307538	ArgumentList	'.'		7307306	1					
ANR	7307539	Argument	'.'		7307306	0					
ANR	7307540	PrimaryExpression	'.'		7307306	0					
ANR	7307541	Argument	stderr		7307306	1					
ANR	7307542	Identifier	stderr		7307306	0					
ANR	7307543	ExpressionStatement	co -> ctimes = 0	361:6:11095:11109	7307306	1	True				
ANR	7307544	AssignmentExpression	co -> ctimes = 0		7307306	0		=			
ANR	7307545	PtrMemberAccess	co -> ctimes		7307306	0					
ANR	7307546	Identifier	co		7307306	0					
ANR	7307547	Identifier	ctimes		7307306	1					
ANR	7307548	PrimaryExpression	0		7307306	1					
ANR	7307549	ExpressionStatement	++ ( co -> cmillions )	362:6:11117:11134	7307306	2	True				
ANR	7307550	UnaryExpression	++ ( co -> cmillions )		7307306	0					
ANR	7307551	IncDec	++		7307306	0					
ANR	7307552	PtrMemberAccess	co -> cmillions		7307306	1					
ANR	7307553	Identifier	co		7307306	0					
ANR	7307554	Identifier	cmillions		7307306	1					
ANR	7307555	IfStatement	if ( ! number_is_valid )		7307306	10					
ANR	7307556	Condition	! number_is_valid	365:7:11149:11164	7307306	0	True				
ANR	7307557	UnaryOperationExpression	! number_is_valid		7307306	0					
ANR	7307558	UnaryOperator	!		7307306	0					
ANR	7307559	Identifier	number_is_valid		7307306	1					
ANR	7307560	ExpressionStatement	++ ( co -> cinvalid )	366:6:11173:11189	7307306	1	True				
ANR	7307561	UnaryExpression	++ ( co -> cinvalid )		7307306	0					
ANR	7307562	IncDec	++		7307306	0					
ANR	7307563	PtrMemberAccess	co -> cinvalid		7307306	1					
ANR	7307564	Identifier	co		7307306	0					
ANR	7307565	Identifier	cinvalid		7307306	1					
ANR	7307566	IfStatement	if ( ! character_accepted )		7307306	11					
ANR	7307567	Condition	! character_accepted	368:7:11199:11217	7307306	0	True				
ANR	7307568	UnaryOperationExpression	! character_accepted		7307306	0					
ANR	7307569	UnaryOperator	!		7307306	0					
ANR	7307570	Identifier	character_accepted		7307306	1					
ANR	7307571	ExpressionStatement	++ ( co -> cnoaccept )	369:6:11226:11243	7307306	1	True				
ANR	7307572	UnaryExpression	++ ( co -> cnoaccept )		7307306	0					
ANR	7307573	IncDec	++		7307306	0					
ANR	7307574	PtrMemberAccess	co -> cnoaccept		7307306	1					
ANR	7307575	Identifier	co		7307306	0					
ANR	7307576	Identifier	cnoaccept		7307306	1					
ANR	7307577	IfStatement	if ( index != 0 && index != 1 )		7307306	12					
ANR	7307578	Condition	index != 0 && index != 1	372:7:11318:11341	7307306	0	True				
ANR	7307579	AndExpression	index != 0 && index != 1		7307306	0		&&			
ANR	7307580	EqualityExpression	index != 0		7307306	0		!=			
ANR	7307581	Identifier	index		7307306	0					
ANR	7307582	PrimaryExpression	0		7307306	1					
ANR	7307583	EqualityExpression	index != 1		7307306	1		!=			
ANR	7307584	Identifier	index		7307306	0					
ANR	7307585	PrimaryExpression	1		7307306	1					
ANR	7307586	CompoundStatement		45:3:1157:1157	7307306	1					
ANR	7307587	ExpressionStatement	"fprintf ( stderr , ""%s: read beyond end of string (%lu)\\n"" , co -> number , ( unsigned long ) index )"	374:6:11355:11454	7307306	0	True				
ANR	7307588	CallExpression	"fprintf ( stderr , ""%s: read beyond end of string (%lu)\\n"" , co -> number , ( unsigned long ) index )"		7307306	0					
ANR	7307589	Callee	fprintf		7307306	0					
ANR	7307590	Identifier	fprintf		7307306	0					
ANR	7307591	ArgumentList	stderr		7307306	1					
ANR	7307592	Argument	stderr		7307306	0					
ANR	7307593	Identifier	stderr		7307306	0					
ANR	7307594	Argument	"""%s: read beyond end of string (%lu)\\n"""		7307306	1					
ANR	7307595	PrimaryExpression	"""%s: read beyond end of string (%lu)\\n"""		7307306	0					
ANR	7307596	Argument	co -> number		7307306	2					
ANR	7307597	PtrMemberAccess	co -> number		7307306	0					
ANR	7307598	Identifier	co		7307306	0					
ANR	7307599	Identifier	number		7307306	1					
ANR	7307600	Argument	( unsigned long ) index		7307306	3					
ANR	7307601	CastExpression	( unsigned long ) index		7307306	0					
ANR	7307602	CastTarget	unsigned long		7307306	0					
ANR	7307603	Identifier	index		7307306	1					
ANR	7307604	ReturnStatement	return 0 ;	376:6:11462:11470	7307306	1	True				
ANR	7307605	PrimaryExpression	0		7307306	0					
ANR	7307606	IfStatement	if ( PNG_FP_IS_NEGATIVE ( c . state ) != ( number_is_valid && ! c . is_zero && c . is_negative ) )		7307306	13					
ANR	7307607	Condition	PNG_FP_IS_NEGATIVE ( c . state ) != ( number_is_valid && ! c . is_zero && c . is_negative )	382:7:11605:11689	7307306	0	True				
ANR	7307608	EqualityExpression	PNG_FP_IS_NEGATIVE ( c . state ) != ( number_is_valid && ! c . is_zero && c . is_negative )		7307306	0		!=			
ANR	7307609	CallExpression	PNG_FP_IS_NEGATIVE ( c . state )		7307306	0					
ANR	7307610	Callee	PNG_FP_IS_NEGATIVE		7307306	0					
ANR	7307611	Identifier	PNG_FP_IS_NEGATIVE		7307306	0					
ANR	7307612	ArgumentList	c . state		7307306	1					
ANR	7307613	Argument	c . state		7307306	0					
ANR	7307614	MemberAccess	c . state		7307306	0					
ANR	7307615	Identifier	c		7307306	0					
ANR	7307616	Identifier	state		7307306	1					
ANR	7307617	AndExpression	number_is_valid && ! c . is_zero && c . is_negative		7307306	1		&&			
ANR	7307618	Identifier	number_is_valid		7307306	0					
ANR	7307619	AndExpression	! c . is_zero && c . is_negative		7307306	1		&&			
ANR	7307620	UnaryOperationExpression	! c . is_zero		7307306	0					
ANR	7307621	UnaryOperator	!		7307306	0					
ANR	7307622	MemberAccess	c . is_zero		7307306	1					
ANR	7307623	Identifier	c		7307306	0					
ANR	7307624	Identifier	is_zero		7307306	1					
ANR	7307625	MemberAccess	c . is_negative		7307306	1					
ANR	7307626	Identifier	c		7307306	0					
ANR	7307627	Identifier	is_negative		7307306	1					
ANR	7307628	CompoundStatement		56:3:1505:1505	7307306	1					
ANR	7307629	ExpressionStatement	"fprintf ( stderr , ""%s: negative when it is not\\n"" , co -> number )"	385:6:11703:11763	7307306	0	True				
ANR	7307630	CallExpression	"fprintf ( stderr , ""%s: negative when it is not\\n"" , co -> number )"		7307306	0					
ANR	7307631	Callee	fprintf		7307306	0					
ANR	7307632	Identifier	fprintf		7307306	0					
ANR	7307633	ArgumentList	stderr		7307306	1					
ANR	7307634	Argument	stderr		7307306	0					
ANR	7307635	Identifier	stderr		7307306	0					
ANR	7307636	Argument	"""%s: negative when it is not\\n"""		7307306	1					
ANR	7307637	PrimaryExpression	"""%s: negative when it is not\\n"""		7307306	0					
ANR	7307638	Argument	co -> number		7307306	2					
ANR	7307639	PtrMemberAccess	co -> number		7307306	0					
ANR	7307640	Identifier	co		7307306	0					
ANR	7307641	Identifier	number		7307306	1					
ANR	7307642	ReturnStatement	return 0 ;	386:6:11771:11779	7307306	1	True				
ANR	7307643	PrimaryExpression	0		7307306	0					
ANR	7307644	IfStatement	if ( PNG_FP_IS_ZERO ( c . state ) != ( number_is_valid && c . is_zero ) )		7307306	14					
ANR	7307645	Condition	PNG_FP_IS_ZERO ( c . state ) != ( number_is_valid && c . is_zero )	389:7:11794:11850	7307306	0	True				
ANR	7307646	EqualityExpression	PNG_FP_IS_ZERO ( c . state ) != ( number_is_valid && c . is_zero )		7307306	0		!=			
ANR	7307647	CallExpression	PNG_FP_IS_ZERO ( c . state )		7307306	0					
ANR	7307648	Callee	PNG_FP_IS_ZERO		7307306	0					
ANR	7307649	Identifier	PNG_FP_IS_ZERO		7307306	0					
ANR	7307650	ArgumentList	c . state		7307306	1					
ANR	7307651	Argument	c . state		7307306	0					
ANR	7307652	MemberAccess	c . state		7307306	0					
ANR	7307653	Identifier	c		7307306	0					
ANR	7307654	Identifier	state		7307306	1					
ANR	7307655	AndExpression	number_is_valid && c . is_zero		7307306	1		&&			
ANR	7307656	Identifier	number_is_valid		7307306	0					
ANR	7307657	MemberAccess	c . is_zero		7307306	1					
ANR	7307658	Identifier	c		7307306	0					
ANR	7307659	Identifier	is_zero		7307306	1					
ANR	7307660	CompoundStatement		62:3:1666:1666	7307306	1					
ANR	7307661	ExpressionStatement	"fprintf ( stderr , ""%s: zero when it is not\\n"" , co -> number )"	391:6:11864:11920	7307306	0	True				
ANR	7307662	CallExpression	"fprintf ( stderr , ""%s: zero when it is not\\n"" , co -> number )"		7307306	0					
ANR	7307663	Callee	fprintf		7307306	0					
ANR	7307664	Identifier	fprintf		7307306	0					
ANR	7307665	ArgumentList	stderr		7307306	1					
ANR	7307666	Argument	stderr		7307306	0					
ANR	7307667	Identifier	stderr		7307306	0					
ANR	7307668	Argument	"""%s: zero when it is not\\n"""		7307306	1					
ANR	7307669	PrimaryExpression	"""%s: zero when it is not\\n"""		7307306	0					
ANR	7307670	Argument	co -> number		7307306	2					
ANR	7307671	PtrMemberAccess	co -> number		7307306	0					
ANR	7307672	Identifier	co		7307306	0					
ANR	7307673	Identifier	number		7307306	1					
ANR	7307674	ReturnStatement	return 0 ;	392:6:11928:11936	7307306	1	True				
ANR	7307675	PrimaryExpression	0		7307306	0					
ANR	7307676	IfStatement	if ( PNG_FP_IS_POSITIVE ( c . state ) != ( number_is_valid && ! c . is_zero && ! c . is_negative ) )		7307306	15					
ANR	7307677	Condition	PNG_FP_IS_POSITIVE ( c . state ) != ( number_is_valid && ! c . is_zero && ! c . is_negative )	395:7:11951:12036	7307306	0	True				
ANR	7307678	EqualityExpression	PNG_FP_IS_POSITIVE ( c . state ) != ( number_is_valid && ! c . is_zero && ! c . is_negative )		7307306	0		!=			
ANR	7307679	CallExpression	PNG_FP_IS_POSITIVE ( c . state )		7307306	0					
ANR	7307680	Callee	PNG_FP_IS_POSITIVE		7307306	0					
ANR	7307681	Identifier	PNG_FP_IS_POSITIVE		7307306	0					
ANR	7307682	ArgumentList	c . state		7307306	1					
ANR	7307683	Argument	c . state		7307306	0					
ANR	7307684	MemberAccess	c . state		7307306	0					
ANR	7307685	Identifier	c		7307306	0					
ANR	7307686	Identifier	state		7307306	1					
ANR	7307687	AndExpression	number_is_valid && ! c . is_zero && ! c . is_negative		7307306	1		&&			
ANR	7307688	Identifier	number_is_valid		7307306	0					
ANR	7307689	AndExpression	! c . is_zero && ! c . is_negative		7307306	1		&&			
ANR	7307690	UnaryOperationExpression	! c . is_zero		7307306	0					
ANR	7307691	UnaryOperator	!		7307306	0					
ANR	7307692	MemberAccess	c . is_zero		7307306	1					
ANR	7307693	Identifier	c		7307306	0					
ANR	7307694	Identifier	is_zero		7307306	1					
ANR	7307695	UnaryOperationExpression	! c . is_negative		7307306	1					
ANR	7307696	UnaryOperator	!		7307306	0					
ANR	7307697	MemberAccess	c . is_negative		7307306	1					
ANR	7307698	Identifier	c		7307306	0					
ANR	7307699	Identifier	is_negative		7307306	1					
ANR	7307700	CompoundStatement		69:3:1852:1852	7307306	1					
ANR	7307701	ExpressionStatement	"fprintf ( stderr , ""%s: positive when it is not\\n"" , co -> number )"	398:6:12050:12110	7307306	0	True				
ANR	7307702	CallExpression	"fprintf ( stderr , ""%s: positive when it is not\\n"" , co -> number )"		7307306	0					
ANR	7307703	Callee	fprintf		7307306	0					
ANR	7307704	Identifier	fprintf		7307306	0					
ANR	7307705	ArgumentList	stderr		7307306	1					
ANR	7307706	Argument	stderr		7307306	0					
ANR	7307707	Identifier	stderr		7307306	0					
ANR	7307708	Argument	"""%s: positive when it is not\\n"""		7307306	1					
ANR	7307709	PrimaryExpression	"""%s: positive when it is not\\n"""		7307306	0					
ANR	7307710	Argument	co -> number		7307306	2					
ANR	7307711	PtrMemberAccess	co -> number		7307306	0					
ANR	7307712	Identifier	co		7307306	0					
ANR	7307713	Identifier	number		7307306	1					
ANR	7307714	ReturnStatement	return 0 ;	399:6:12118:12126	7307306	1	True				
ANR	7307715	PrimaryExpression	0		7307306	0					
ANR	7307716	IfStatement	if ( isdigit ( ch ) )		7307306	16					
ANR	7307717	Condition	isdigit ( ch )	403:7:12166:12176	7307306	0	True				
ANR	7307718	CallExpression	isdigit ( ch )		7307306	0					
ANR	7307719	Callee	isdigit		7307306	0					
ANR	7307720	Identifier	isdigit		7307306	0					
ANR	7307721	ArgumentList	ch		7307306	1					
ANR	7307722	Argument	ch		7307306	0					
ANR	7307723	Identifier	ch		7307306	0					
ANR	7307724	CompoundStatement		76:3:1992:1992	7307306	1					
ANR	7307725	IfStatement	if ( ! character_accepted )		7307306	0					
ANR	7307726	Condition	! character_accepted	405:10:12194:12212	7307306	0	True				
ANR	7307727	UnaryOperationExpression	! character_accepted		7307306	0					
ANR	7307728	UnaryOperator	!		7307306	0					
ANR	7307729	Identifier	character_accepted		7307306	1					
ANR	7307730	CompoundStatement		78:6:2031:2031	7307306	1					
ANR	7307731	ExpressionStatement	"fprintf ( stderr , ""%s: digit '%c' not accepted\\n"" , co -> number , ch )"	407:9:12232:12296	7307306	0	True				
ANR	7307732	CallExpression	"fprintf ( stderr , ""%s: digit '%c' not accepted\\n"" , co -> number , ch )"		7307306	0					
ANR	7307733	Callee	fprintf		7307306	0					
ANR	7307734	Identifier	fprintf		7307306	0					
ANR	7307735	ArgumentList	stderr		7307306	1					
ANR	7307736	Argument	stderr		7307306	0					
ANR	7307737	Identifier	stderr		7307306	0					
ANR	7307738	Argument	"""%s: digit '%c' not accepted\\n"""		7307306	1					
ANR	7307739	PrimaryExpression	"""%s: digit '%c' not accepted\\n"""		7307306	0					
ANR	7307740	Argument	co -> number		7307306	2					
ANR	7307741	PtrMemberAccess	co -> number		7307306	0					
ANR	7307742	Identifier	co		7307306	0					
ANR	7307743	Identifier	number		7307306	1					
ANR	7307744	Argument	ch		7307306	3					
ANR	7307745	Identifier	ch		7307306	0					
ANR	7307746	ReturnStatement	return 0 ;	408:9:12307:12315	7307306	1	True				
ANR	7307747	PrimaryExpression	0		7307306	0					
ANR	7307748	IfStatement	if ( ! number_is_valid )		7307306	1					
ANR	7307749	Condition	! number_is_valid	411:10:12336:12351	7307306	0	True				
ANR	7307750	UnaryOperationExpression	! number_is_valid		7307306	0					
ANR	7307751	UnaryOperator	!		7307306	0					
ANR	7307752	Identifier	number_is_valid		7307306	1					
ANR	7307753	CompoundStatement		84:6:2170:2170	7307306	1					
ANR	7307754	ExpressionStatement	"fprintf ( stderr , ""%s: saw a digit (%c) but number not valid\\n"" , co -> number , ch )"	413:9:12371:12461	7307306	0	True				
ANR	7307755	CallExpression	"fprintf ( stderr , ""%s: saw a digit (%c) but number not valid\\n"" , co -> number , ch )"		7307306	0					
ANR	7307756	Callee	fprintf		7307306	0					
ANR	7307757	Identifier	fprintf		7307306	0					
ANR	7307758	ArgumentList	stderr		7307306	1					
ANR	7307759	Argument	stderr		7307306	0					
ANR	7307760	Identifier	stderr		7307306	0					
ANR	7307761	Argument	"""%s: saw a digit (%c) but number not valid\\n"""		7307306	1					
ANR	7307762	PrimaryExpression	"""%s: saw a digit (%c) but number not valid\\n"""		7307306	0					
ANR	7307763	Argument	co -> number		7307306	2					
ANR	7307764	PtrMemberAccess	co -> number		7307306	0					
ANR	7307765	Identifier	co		7307306	0					
ANR	7307766	Identifier	number		7307306	1					
ANR	7307767	Argument	ch		7307306	3					
ANR	7307768	Identifier	ch		7307306	0					
ANR	7307769	ReturnStatement	return 0 ;	415:9:12472:12480	7307306	1	True				
ANR	7307770	PrimaryExpression	0		7307306	0					
ANR	7307771	ExpressionStatement	++ c . cdigits_in_state	418:6:12497:12517	7307306	2	True				
ANR	7307772	UnaryExpression	++ c . cdigits_in_state		7307306	0					
ANR	7307773	IncDec	++		7307306	0					
ANR	7307774	MemberAccess	c . cdigits_in_state		7307306	1					
ANR	7307775	Identifier	c		7307306	0					
ANR	7307776	Identifier	cdigits_in_state		7307306	1					
ANR	7307777	ExpressionStatement	c . at_start = 0	419:6:12525:12539	7307306	3	True				
ANR	7307778	AssignmentExpression	c . at_start = 0		7307306	0		=			
ANR	7307779	MemberAccess	c . at_start		7307306	0					
ANR	7307780	Identifier	c		7307306	0					
ANR	7307781	Identifier	at_start		7307306	1					
ANR	7307782	PrimaryExpression	0		7307306	1					
ANR	7307783	ExpressionStatement	c . number_was_valid = 1	420:6:12547:12569	7307306	4	True				
ANR	7307784	AssignmentExpression	c . number_was_valid = 1		7307306	0		=			
ANR	7307785	MemberAccess	c . number_was_valid		7307306	0					
ANR	7307786	Identifier	c		7307306	0					
ANR	7307787	Identifier	number_was_valid		7307306	1					
ANR	7307788	PrimaryExpression	1		7307306	1					
ANR	7307789	IfStatement	if ( c . cdigits_in_state < 1 )		7307306	5					
ANR	7307790	Condition	c . cdigits_in_state < 1	426:10:12765:12786	7307306	0	True				
ANR	7307791	RelationalExpression	c . cdigits_in_state < 1		7307306	0		<			
ANR	7307792	MemberAccess	c . cdigits_in_state		7307306	0					
ANR	7307793	Identifier	c		7307306	0					
ANR	7307794	Identifier	cdigits_in_state		7307306	1					
ANR	7307795	PrimaryExpression	1		7307306	1					
ANR	7307796	ReturnStatement	"return check_all_characters ( co , c ) ;"	427:9:12798:12832	7307306	1	True				
ANR	7307797	CallExpression	"check_all_characters ( co , c )"		7307306	0					
ANR	7307798	Callee	check_all_characters		7307306	0					
ANR	7307799	Identifier	check_all_characters		7307306	0					
ANR	7307800	ArgumentList	co		7307306	1					
ANR	7307801	Argument	co		7307306	0					
ANR	7307802	Identifier	co		7307306	0					
ANR	7307803	Argument	c		7307306	1					
ANR	7307804	Identifier	c		7307306	0					
ANR	7307805	ElseStatement	else		7307306	0					
ANR	7307806	ReturnStatement	"return check_some_characters ( co , c , state_characters [ c . check_state ] . tests ) ;"	430:9:12855:12941	7307306	0	True				
ANR	7307807	CallExpression	"check_some_characters ( co , c , state_characters [ c . check_state ] . tests )"		7307306	0					
ANR	7307808	Callee	check_some_characters		7307306	0					
ANR	7307809	Identifier	check_some_characters		7307306	0					
ANR	7307810	ArgumentList	co		7307306	1					
ANR	7307811	Argument	co		7307306	0					
ANR	7307812	Identifier	co		7307306	0					
ANR	7307813	Argument	c		7307306	1					
ANR	7307814	Identifier	c		7307306	0					
ANR	7307815	Argument	state_characters [ c . check_state ] . tests		7307306	2					
ANR	7307816	MemberAccess	state_characters [ c . check_state ] . tests		7307306	0					
ANR	7307817	ArrayIndexing	state_characters [ c . check_state ]		7307306	0					
ANR	7307818	Identifier	state_characters		7307306	0					
ANR	7307819	MemberAccess	c . check_state		7307306	1					
ANR	7307820	Identifier	c		7307306	0					
ANR	7307821	Identifier	check_state		7307306	1					
ANR	7307822	Identifier	tests		7307306	1					
ANR	7307823	ElseStatement	else		7307306	0					
ANR	7307824	IfStatement	if ( ( ( ch == '+' || ch == '-' ) && c . check_state != fraction && c . at_start ) || ( ch == '.' && c . check_state == start ) || ( ( ch == 'e' || ch == 'E' ) && c . number_was_valid && c . check_state != exponent ) )		7307306	0					
ANR	7307825	Condition	( ( ch == '+' || ch == '-' ) && c . check_state != fraction && c . at_start ) || ( ch == '.' && c . check_state == start ) || ( ( ch == 'e' || ch == 'E' ) && c . number_was_valid && c . check_state != exponent )	435:12:13003:13247	7307306	0	True				
ANR	7307826	OrExpression	( ( ch == '+' || ch == '-' ) && c . check_state != fraction && c . at_start ) || ( ch == '.' && c . check_state == start ) || ( ( ch == 'e' || ch == 'E' ) && c . number_was_valid && c . check_state != exponent )		7307306	0		||			
ANR	7307827	AndExpression	( ch == '+' || ch == '-' ) && c . check_state != fraction && c . at_start		7307306	0		&&			
ANR	7307828	OrExpression	ch == '+' || ch == '-'		7307306	0		||			
ANR	7307829	EqualityExpression	ch == '+'		7307306	0		==			
ANR	7307830	Identifier	ch		7307306	0					
ANR	7307831	PrimaryExpression	'+'		7307306	1					
ANR	7307832	EqualityExpression	ch == '-'		7307306	1		==			
ANR	7307833	Identifier	ch		7307306	0					
ANR	7307834	PrimaryExpression	'-'		7307306	1					
ANR	7307835	AndExpression	c . check_state != fraction && c . at_start		7307306	1		&&			
ANR	7307836	EqualityExpression	c . check_state != fraction		7307306	0		!=			
ANR	7307837	MemberAccess	c . check_state		7307306	0					
ANR	7307838	Identifier	c		7307306	0					
ANR	7307839	Identifier	check_state		7307306	1					
ANR	7307840	Identifier	fraction		7307306	1					
ANR	7307841	MemberAccess	c . at_start		7307306	1					
ANR	7307842	Identifier	c		7307306	0					
ANR	7307843	Identifier	at_start		7307306	1					
ANR	7307844	OrExpression	( ch == '.' && c . check_state == start ) || ( ( ch == 'e' || ch == 'E' ) && c . number_was_valid && c . check_state != exponent )		7307306	1		||			
ANR	7307845	AndExpression	ch == '.' && c . check_state == start		7307306	0		&&			
ANR	7307846	EqualityExpression	ch == '.'		7307306	0		==			
ANR	7307847	Identifier	ch		7307306	0					
ANR	7307848	PrimaryExpression	'.'		7307306	1					
ANR	7307849	EqualityExpression	c . check_state == start		7307306	1		==			
ANR	7307850	MemberAccess	c . check_state		7307306	0					
ANR	7307851	Identifier	c		7307306	0					
ANR	7307852	Identifier	check_state		7307306	1					
ANR	7307853	Identifier	start		7307306	1					
ANR	7307854	AndExpression	( ch == 'e' || ch == 'E' ) && c . number_was_valid && c . check_state != exponent		7307306	1		&&			
ANR	7307855	OrExpression	ch == 'e' || ch == 'E'		7307306	0		||			
ANR	7307856	EqualityExpression	ch == 'e'		7307306	0		==			
ANR	7307857	Identifier	ch		7307306	0					
ANR	7307858	PrimaryExpression	'e'		7307306	1					
ANR	7307859	EqualityExpression	ch == 'E'		7307306	1		==			
ANR	7307860	Identifier	ch		7307306	0					
ANR	7307861	PrimaryExpression	'E'		7307306	1					
ANR	7307862	AndExpression	c . number_was_valid && c . check_state != exponent		7307306	1		&&			
ANR	7307863	MemberAccess	c . number_was_valid		7307306	0					
ANR	7307864	Identifier	c		7307306	0					
ANR	7307865	Identifier	number_was_valid		7307306	1					
ANR	7307866	EqualityExpression	c . check_state != exponent		7307306	1		!=			
ANR	7307867	MemberAccess	c . check_state		7307306	0					
ANR	7307868	Identifier	c		7307306	0					
ANR	7307869	Identifier	check_state		7307306	1					
ANR	7307870	Identifier	exponent		7307306	1					
ANR	7307871	CompoundStatement		112:3:3063:3063	7307306	1					
ANR	7307872	IfStatement	if ( ! character_accepted )		7307306	0					
ANR	7307873	Condition	! character_accepted	441:10:13265:13283	7307306	0	True				
ANR	7307874	UnaryOperationExpression	! character_accepted		7307306	0					
ANR	7307875	UnaryOperator	!		7307306	0					
ANR	7307876	Identifier	character_accepted		7307306	1					
ANR	7307877	CompoundStatement		114:6:3102:3102	7307306	1					
ANR	7307878	ExpressionStatement	"fprintf ( stderr , ""%s: character '%c' not accepted\\n"" , co -> number , ch )"	443:9:13303:13371	7307306	0	True				
ANR	7307879	CallExpression	"fprintf ( stderr , ""%s: character '%c' not accepted\\n"" , co -> number , ch )"		7307306	0					
ANR	7307880	Callee	fprintf		7307306	0					
ANR	7307881	Identifier	fprintf		7307306	0					
ANR	7307882	ArgumentList	stderr		7307306	1					
ANR	7307883	Argument	stderr		7307306	0					
ANR	7307884	Identifier	stderr		7307306	0					
ANR	7307885	Argument	"""%s: character '%c' not accepted\\n"""		7307306	1					
ANR	7307886	PrimaryExpression	"""%s: character '%c' not accepted\\n"""		7307306	0					
ANR	7307887	Argument	co -> number		7307306	2					
ANR	7307888	PtrMemberAccess	co -> number		7307306	0					
ANR	7307889	Identifier	co		7307306	0					
ANR	7307890	Identifier	number		7307306	1					
ANR	7307891	Argument	ch		7307306	3					
ANR	7307892	Identifier	ch		7307306	0					
ANR	7307893	ReturnStatement	return 0 ;	444:9:13382:13390	7307306	1	True				
ANR	7307894	PrimaryExpression	0		7307306	0					
ANR	7307895	IfStatement	if ( number_is_valid && ( c . check_state != start || ch != '.' ) )		7307306	1					
ANR	7307896	Condition	number_is_valid && ( c . check_state != start || ch != '.' )	448:10:13490:13545	7307306	0	True				
ANR	7307897	AndExpression	number_is_valid && ( c . check_state != start || ch != '.' )		7307306	0		&&			
ANR	7307898	Identifier	number_is_valid		7307306	0					
ANR	7307899	OrExpression	c . check_state != start || ch != '.'		7307306	1		||			
ANR	7307900	EqualityExpression	c . check_state != start		7307306	0		!=			
ANR	7307901	MemberAccess	c . check_state		7307306	0					
ANR	7307902	Identifier	c		7307306	0					
ANR	7307903	Identifier	check_state		7307306	1					
ANR	7307904	Identifier	start		7307306	1					
ANR	7307905	EqualityExpression	ch != '.'		7307306	1		!=			
ANR	7307906	Identifier	ch		7307306	0					
ANR	7307907	PrimaryExpression	'.'		7307306	1					
ANR	7307908	CompoundStatement		121:6:3364:3364	7307306	1					
ANR	7307909	ExpressionStatement	"fprintf ( stderr , ""%s: saw a non-digit (%c) but number valid\\n"" , co -> number , ch )"	450:9:13565:13655	7307306	0	True				
ANR	7307910	CallExpression	"fprintf ( stderr , ""%s: saw a non-digit (%c) but number valid\\n"" , co -> number , ch )"		7307306	0					
ANR	7307911	Callee	fprintf		7307306	0					
ANR	7307912	Identifier	fprintf		7307306	0					
ANR	7307913	ArgumentList	stderr		7307306	1					
ANR	7307914	Argument	stderr		7307306	0					
ANR	7307915	Identifier	stderr		7307306	0					
ANR	7307916	Argument	"""%s: saw a non-digit (%c) but number valid\\n"""		7307306	1					
ANR	7307917	PrimaryExpression	"""%s: saw a non-digit (%c) but number valid\\n"""		7307306	0					
ANR	7307918	Argument	co -> number		7307306	2					
ANR	7307919	PtrMemberAccess	co -> number		7307306	0					
ANR	7307920	Identifier	co		7307306	0					
ANR	7307921	Identifier	number		7307306	1					
ANR	7307922	Argument	ch		7307306	3					
ANR	7307923	Identifier	ch		7307306	0					
ANR	7307924	ReturnStatement	return 0 ;	452:9:13666:13674	7307306	1	True				
ANR	7307925	PrimaryExpression	0		7307306	0					
ANR	7307926	ExpressionStatement	c . number_was_valid = number_is_valid	455:6:13691:13727	7307306	2	True				
ANR	7307927	AssignmentExpression	c . number_was_valid = number_is_valid		7307306	0		=			
ANR	7307928	MemberAccess	c . number_was_valid		7307306	0					
ANR	7307929	Identifier	c		7307306	0					
ANR	7307930	Identifier	number_was_valid		7307306	1					
ANR	7307931	Identifier	number_is_valid		7307306	1					
ANR	7307932	IfStatement	if ( c . check_state == start && ch == '.' )		7307306	3					
ANR	7307933	Condition	c . check_state == start && ch == '.'	461:10:13934:13968	7307306	0	True				
ANR	7307934	AndExpression	c . check_state == start && ch == '.'		7307306	0		&&			
ANR	7307935	EqualityExpression	c . check_state == start		7307306	0		==			
ANR	7307936	MemberAccess	c . check_state		7307306	0					
ANR	7307937	Identifier	c		7307306	0					
ANR	7307938	Identifier	check_state		7307306	1					
ANR	7307939	Identifier	start		7307306	1					
ANR	7307940	EqualityExpression	ch == '.'		7307306	1		==			
ANR	7307941	Identifier	ch		7307306	0					
ANR	7307942	PrimaryExpression	'.'		7307306	1					
ANR	7307943	CompoundStatement		134:6:3787:3787	7307306	1					
ANR	7307944	ExpressionStatement	c . check_state = fraction	463:9:13988:14012	7307306	0	True				
ANR	7307945	AssignmentExpression	c . check_state = fraction		7307306	0		=			
ANR	7307946	MemberAccess	c . check_state		7307306	0					
ANR	7307947	Identifier	c		7307306	0					
ANR	7307948	Identifier	check_state		7307306	1					
ANR	7307949	Identifier	fraction		7307306	1					
ANR	7307950	ExpressionStatement	c . at_start = ! number_is_valid	464:9:14023:14052	7307306	1	True				
ANR	7307951	AssignmentExpression	c . at_start = ! number_is_valid		7307306	0		=			
ANR	7307952	MemberAccess	c . at_start		7307306	0					
ANR	7307953	Identifier	c		7307306	0					
ANR	7307954	Identifier	at_start		7307306	1					
ANR	7307955	UnaryOperationExpression	! number_is_valid		7307306	1					
ANR	7307956	UnaryOperator	!		7307306	0					
ANR	7307957	Identifier	number_is_valid		7307306	1					
ANR	7307958	ExpressionStatement	c . cdigits_in_state = 0	465:9:14063:14085	7307306	2	True				
ANR	7307959	AssignmentExpression	c . cdigits_in_state = 0		7307306	0		=			
ANR	7307960	MemberAccess	c . cdigits_in_state		7307306	0					
ANR	7307961	Identifier	c		7307306	0					
ANR	7307962	Identifier	cdigits_in_state		7307306	1					
ANR	7307963	PrimaryExpression	0		7307306	1					
ANR	7307964	ExpressionStatement	c . limit = co -> limit	466:9:14096:14115	7307306	3	True				
ANR	7307965	AssignmentExpression	c . limit = co -> limit		7307306	0		=			
ANR	7307966	MemberAccess	c . limit		7307306	0					
ANR	7307967	Identifier	c		7307306	0					
ANR	7307968	Identifier	limit		7307306	1					
ANR	7307969	PtrMemberAccess	co -> limit		7307306	1					
ANR	7307970	Identifier	co		7307306	0					
ANR	7307971	Identifier	limit		7307306	1					
ANR	7307972	ReturnStatement	"return check_all_characters ( co , c ) ;"	467:9:14126:14160	7307306	4	True				
ANR	7307973	CallExpression	"check_all_characters ( co , c )"		7307306	0					
ANR	7307974	Callee	check_all_characters		7307306	0					
ANR	7307975	Identifier	check_all_characters		7307306	0					
ANR	7307976	ArgumentList	co		7307306	1					
ANR	7307977	Argument	co		7307306	0					
ANR	7307978	Identifier	co		7307306	0					
ANR	7307979	Argument	c		7307306	1					
ANR	7307980	Identifier	c		7307306	0					
ANR	7307981	ElseStatement	else		7307306	0					
ANR	7307982	IfStatement	if ( c . check_state < exponent && ( ch == 'e' || ch == 'E' ) )		7307306	0					
ANR	7307983	Condition	c . check_state < exponent && ( ch == 'e' || ch == 'E' )	470:15:14186:14237	7307306	0	True				
ANR	7307984	AndExpression	c . check_state < exponent && ( ch == 'e' || ch == 'E' )		7307306	0		&&			
ANR	7307985	RelationalExpression	c . check_state < exponent		7307306	0		<			
ANR	7307986	MemberAccess	c . check_state		7307306	0					
ANR	7307987	Identifier	c		7307306	0					
ANR	7307988	Identifier	check_state		7307306	1					
ANR	7307989	Identifier	exponent		7307306	1					
ANR	7307990	OrExpression	ch == 'e' || ch == 'E'		7307306	1		||			
ANR	7307991	EqualityExpression	ch == 'e'		7307306	0		==			
ANR	7307992	Identifier	ch		7307306	0					
ANR	7307993	PrimaryExpression	'e'		7307306	1					
ANR	7307994	EqualityExpression	ch == 'E'		7307306	1		==			
ANR	7307995	Identifier	ch		7307306	0					
ANR	7307996	PrimaryExpression	'E'		7307306	1					
ANR	7307997	CompoundStatement		143:6:4056:4056	7307306	1					
ANR	7307998	ExpressionStatement	c . check_state = exponent	472:9:14257:14281	7307306	0	True				
ANR	7307999	AssignmentExpression	c . check_state = exponent		7307306	0		=			
ANR	7308000	MemberAccess	c . check_state		7307306	0					
ANR	7308001	Identifier	c		7307306	0					
ANR	7308002	Identifier	check_state		7307306	1					
ANR	7308003	Identifier	exponent		7307306	1					
ANR	7308004	ExpressionStatement	c . at_start = 1	473:9:14292:14306	7307306	1	True				
ANR	7308005	AssignmentExpression	c . at_start = 1		7307306	0		=			
ANR	7308006	MemberAccess	c . at_start		7307306	0					
ANR	7308007	Identifier	c		7307306	0					
ANR	7308008	Identifier	at_start		7307306	1					
ANR	7308009	PrimaryExpression	1		7307306	1					
ANR	7308010	ExpressionStatement	c . cdigits_in_state = 0	474:9:14317:14339	7307306	2	True				
ANR	7308011	AssignmentExpression	c . cdigits_in_state = 0		7307306	0		=			
ANR	7308012	MemberAccess	c . cdigits_in_state		7307306	0					
ANR	7308013	Identifier	c		7307306	0					
ANR	7308014	Identifier	cdigits_in_state		7307306	1					
ANR	7308015	PrimaryExpression	0		7307306	1					
ANR	7308016	ExpressionStatement	c . limit = co -> limit	475:9:14350:14369	7307306	3	True				
ANR	7308017	AssignmentExpression	c . limit = co -> limit		7307306	0		=			
ANR	7308018	MemberAccess	c . limit		7307306	0					
ANR	7308019	Identifier	c		7307306	0					
ANR	7308020	Identifier	limit		7307306	1					
ANR	7308021	PtrMemberAccess	co -> limit		7307306	1					
ANR	7308022	Identifier	co		7307306	0					
ANR	7308023	Identifier	limit		7307306	1					
ANR	7308024	ReturnStatement	"return check_all_characters ( co , c ) ;"	476:9:14380:14414	7307306	4	True				
ANR	7308025	CallExpression	"check_all_characters ( co , c )"		7307306	0					
ANR	7308026	Callee	check_all_characters		7307306	0					
ANR	7308027	Identifier	check_all_characters		7307306	0					
ANR	7308028	ArgumentList	co		7307306	1					
ANR	7308029	Argument	co		7307306	0					
ANR	7308030	Identifier	co		7307306	0					
ANR	7308031	Argument	c		7307306	1					
ANR	7308032	Identifier	c		7307306	0					
ANR	7308033	ElseStatement	else		7307306	0					
ANR	7308034	CompoundStatement		153:6:4314:4314	7307306	0					
ANR	7308035	IfStatement	if ( ch != '-' && ch != '+' )		7307306	0					
ANR	7308036	Condition	ch != '-' && ch != '+'	482:13:14519:14540	7307306	0	True				
ANR	7308037	AndExpression	ch != '-' && ch != '+'		7307306	0		&&			
ANR	7308038	EqualityExpression	ch != '-'		7307306	0		!=			
ANR	7308039	Identifier	ch		7307306	0					
ANR	7308040	PrimaryExpression	'-'		7307306	1					
ANR	7308041	EqualityExpression	ch != '+'		7307306	1		!=			
ANR	7308042	Identifier	ch		7307306	0					
ANR	7308043	PrimaryExpression	'+'		7307306	1					
ANR	7308044	CompoundStatement		155:9:4362:4362	7307306	1					
ANR	7308045	ExpressionStatement	"fprintf ( stderr , ""checkfp: internal error (1)\\n"" )"	484:12:14566:14614	7307306	0	True				
ANR	7308046	CallExpression	"fprintf ( stderr , ""checkfp: internal error (1)\\n"" )"		7307306	0					
ANR	7308047	Callee	fprintf		7307306	0					
ANR	7308048	Identifier	fprintf		7307306	0					
ANR	7308049	ArgumentList	stderr		7307306	1					
ANR	7308050	Argument	stderr		7307306	0					
ANR	7308051	Identifier	stderr		7307306	0					
ANR	7308052	Argument	"""checkfp: internal error (1)\\n"""		7307306	1					
ANR	7308053	PrimaryExpression	"""checkfp: internal error (1)\\n"""		7307306	0					
ANR	7308054	ReturnStatement	return 0 ;	485:12:14628:14636	7307306	1	True				
ANR	7308055	PrimaryExpression	0		7307306	0					
ANR	7308056	ExpressionStatement	c . at_start = 0	488:9:14659:14673	7307306	1	True				
ANR	7308057	AssignmentExpression	c . at_start = 0		7307306	0		=			
ANR	7308058	MemberAccess	c . at_start		7307306	0					
ANR	7308059	Identifier	c		7307306	0					
ANR	7308060	Identifier	at_start		7307306	1					
ANR	7308061	PrimaryExpression	0		7307306	1					
ANR	7308062	ReturnStatement	"return check_all_characters ( co , c ) ;"	489:9:14684:14718	7307306	2	True				
ANR	7308063	CallExpression	"check_all_characters ( co , c )"		7307306	0					
ANR	7308064	Callee	check_all_characters		7307306	0					
ANR	7308065	Identifier	check_all_characters		7307306	0					
ANR	7308066	ArgumentList	co		7307306	1					
ANR	7308067	Argument	co		7307306	0					
ANR	7308068	Identifier	co		7307306	0					
ANR	7308069	Argument	c		7307306	1					
ANR	7308070	Identifier	c		7307306	0					
ANR	7308071	ElseStatement	else		7307306	0					
ANR	7308072	CompoundStatement		167:3:4593:4593	7307306	0					
ANR	7308073	IfStatement	if ( character_accepted )		7307306	0					
ANR	7308074	Condition	character_accepted	496:10:14795:14812	7307306	0	True				
ANR	7308075	Identifier	character_accepted		7307306	0					
ANR	7308076	CompoundStatement		169:6:4631:4631	7307306	1					
ANR	7308077	ExpressionStatement	"fprintf ( stderr , ""%s: character '%c' [0x%.2x] accepted\\n"" , co -> number , ch , ch )"	498:9:14832:14921	7307306	0	True				
ANR	7308078	CallExpression	"fprintf ( stderr , ""%s: character '%c' [0x%.2x] accepted\\n"" , co -> number , ch , ch )"		7307306	0					
ANR	7308079	Callee	fprintf		7307306	0					
ANR	7308080	Identifier	fprintf		7307306	0					
ANR	7308081	ArgumentList	stderr		7307306	1					
ANR	7308082	Argument	stderr		7307306	0					
ANR	7308083	Identifier	stderr		7307306	0					
ANR	7308084	Argument	"""%s: character '%c' [0x%.2x] accepted\\n"""		7307306	1					
ANR	7308085	PrimaryExpression	"""%s: character '%c' [0x%.2x] accepted\\n"""		7307306	0					
ANR	7308086	Argument	co -> number		7307306	2					
ANR	7308087	PtrMemberAccess	co -> number		7307306	0					
ANR	7308088	Identifier	co		7307306	0					
ANR	7308089	Identifier	number		7307306	1					
ANR	7308090	Argument	ch		7307306	3					
ANR	7308091	Identifier	ch		7307306	0					
ANR	7308092	Argument	ch		7307306	4					
ANR	7308093	Identifier	ch		7307306	0					
ANR	7308094	ReturnStatement	return 0 ;	500:9:14932:14940	7307306	1	True				
ANR	7308095	PrimaryExpression	0		7307306	0					
ANR	7308096	IfStatement	if ( number_is_valid != c . number_was_valid )		7307306	1					
ANR	7308097	Condition	number_is_valid != c . number_was_valid	503:10:14961:14997	7307306	0	True				
ANR	7308098	EqualityExpression	number_is_valid != c . number_was_valid		7307306	0		!=			
ANR	7308099	Identifier	number_is_valid		7307306	0					
ANR	7308100	MemberAccess	c . number_was_valid		7307306	1					
ANR	7308101	Identifier	c		7307306	0					
ANR	7308102	Identifier	number_was_valid		7307306	1					
ANR	7308103	CompoundStatement		176:6:4816:4816	7307306	1					
ANR	7308104	ExpressionStatement	"fprintf ( stderr , ""%s: character '%c' [0x%.2x] changed number validity\\n"" , co -> number , ch , ch )"	505:9:15017:15133	7307306	0	True				
ANR	7308105	CallExpression	"fprintf ( stderr , ""%s: character '%c' [0x%.2x] changed number validity\\n"" , co -> number , ch , ch )"		7307306	0					
ANR	7308106	Callee	fprintf		7307306	0					
ANR	7308107	Identifier	fprintf		7307306	0					
ANR	7308108	ArgumentList	stderr		7307306	1					
ANR	7308109	Argument	stderr		7307306	0					
ANR	7308110	Identifier	stderr		7307306	0					
ANR	7308111	Argument	"""%s: character '%c' [0x%.2x] changed number validity\\n"""		7307306	1					
ANR	7308112	PrimaryExpression	"""%s: character '%c' [0x%.2x] changed number validity\\n"""		7307306	0					
ANR	7308113	Argument	co -> number		7307306	2					
ANR	7308114	PtrMemberAccess	co -> number		7307306	0					
ANR	7308115	Identifier	co		7307306	0					
ANR	7308116	Identifier	number		7307306	1					
ANR	7308117	Argument	ch		7307306	3					
ANR	7308118	Identifier	ch		7307306	0					
ANR	7308119	Argument	ch		7307306	4					
ANR	7308120	Identifier	ch		7307306	0					
ANR	7308121	ReturnStatement	return 0 ;	508:9:15144:15152	7307306	1	True				
ANR	7308122	PrimaryExpression	0		7307306	0					
ANR	7308123	ReturnStatement	return 1 ;	517:3:15359:15367	7307306	17	True				
ANR	7308124	PrimaryExpression	1		7307306	0					
ANR	7308125	ReturnType	static int		7307306	1					
ANR	7308126	Identifier	check_one_character		7307306	2					
ANR	7308127	ParameterList	"checkfp_command * co , checkfp_control c , int ch"		7307306	3					
ANR	7308128	Parameter	checkfp_command * co	328:31:10141:10159	7307306	0	True				
ANR	7308129	ParameterType	checkfp_command *		7307306	0					
ANR	7308130	Identifier	co		7307306	1					
ANR	7308131	Parameter	checkfp_control c	328:52:10162:10178	7307306	1	True				
ANR	7308132	ParameterType	checkfp_control		7307306	0					
ANR	7308133	Identifier	c		7307306	1					
ANR	7308134	Parameter	int ch	328:71:10181:10186	7307306	2	True				
ANR	7308135	ParameterType	int		7307306	0					
ANR	7308136	Identifier	ch		7307306	1					
ANR	7308137	CFGEntryNode	ENTRY		7307306		True				
ANR	7308138	CFGExitNode	EXIT		7307306		True				
ANR	7308139	Symbol	character_accepted		7307306						
ANR	7308140	Symbol	check_some_characters		7307306						
ANR	7308141	Symbol	c . state		7307306						
ANR	7308142	Symbol	isprint		7307306						
ANR	7308143	Symbol	* ch		7307306						
ANR	7308144	Symbol	number_is_valid		7307306						
ANR	7308145	Symbol	PNG_FP_IS_ZERO		7307306						
ANR	7308146	Symbol	PNG_FP_IS_POSITIVE		7307306						
ANR	7308147	Symbol	c . cdigits_in_state		7307306						
ANR	7308148	Symbol	c . cnumber		7307306						
ANR	7308149	Symbol	co -> verbose		7307306						
ANR	7308150	Symbol	c . is_negative		7307306						
ANR	7308151	Symbol	check_all_characters		7307306						
ANR	7308152	Symbol	state_characters		7307306						
ANR	7308153	Symbol	* hexdigits		7307306						
ANR	7308154	Symbol	c . number_was_valid		7307306						
ANR	7308155	Symbol	* * co		7307306						
ANR	7308156	Symbol	& index		7307306						
ANR	7308157	Symbol	state_characters [ c . check_state ] . tests		7307306						
ANR	7308158	Symbol	& test		7307306						
ANR	7308159	Symbol	isdigit		7307306						
ANR	7308160	Symbol	c . is_zero		7307306						
ANR	7308161	Symbol	PNG_FP_IS_NEGATIVE		7307306						
ANR	7308162	Symbol	exponent		7307306						
ANR	7308163	Symbol	co -> number		7307306						
ANR	7308164	Symbol	* c . check_state		7307306						
ANR	7308165	Symbol	* c . cnumber		7307306						
ANR	7308166	Symbol	c		7307306						
ANR	7308167	Symbol	test		7307306						
ANR	7308168	Symbol	ch		7307306						
ANR	7308169	Symbol	png_check_fp_number		7307306						
ANR	7308170	Symbol	* co -> number		7307306						
ANR	7308171	Symbol	start		7307306						
ANR	7308172	Symbol	index		7307306						
ANR	7308173	Symbol	& c		7307306						
ANR	7308174	Symbol	& c . state		7307306						
ANR	7308175	Symbol	co		7307306						
ANR	7308176	Symbol	stderr		7307306						
ANR	7308177	Symbol	co -> limit		7307306						
ANR	7308178	Symbol	hexdigits		7307306						
ANR	7308179	Symbol	* c		7307306						
ANR	7308180	Symbol	fraction		7307306						
ANR	7308181	Symbol	c . at_start		7307306						
ANR	7308182	Symbol	* co		7307306						
ANR	7308183	Symbol	c . limit		7307306						
ANR	7308184	Symbol	co -> ctimes		7307306						
ANR	7308185	Symbol	* state_characters		7307306						
ANR	7308186	Symbol	c . check_state		7307306						
ANR	7308187	Function	check_all_characters	520:0:15372:15609							
ANR	7308188	FunctionDef	"check_all_characters (checkfp_command * co , checkfp_control c)"		7308187	0					
ANR	7308189	CompoundStatement		521:0:15444:15609	7308187	0					
ANR	7308190	IdentifierDeclStatement	int ch ;	522:3:15449:15455	7308187	0	True				
ANR	7308191	IdentifierDecl	ch		7308187	0					
ANR	7308192	IdentifierDeclType	int		7308187	0					
ANR	7308193	Identifier	ch		7308187	1					
ANR	7308194	IfStatement	if ( c . cnumber + 4 < sizeof co -> number )		7308187	1					
ANR	7308195	Condition	c . cnumber + 4 < sizeof co -> number	524:7:15465:15495	7308187	0	True				
ANR	7308196	RelationalExpression	c . cnumber + 4 < sizeof co -> number		7308187	0		<			
ANR	7308197	AdditiveExpression	c . cnumber + 4		7308187	0		+			
ANR	7308198	MemberAccess	c . cnumber		7308187	0					
ANR	7308199	Identifier	c		7308187	0					
ANR	7308200	Identifier	cnumber		7308187	1					
ANR	7308201	PrimaryExpression	4		7308187	1					
ANR	7308202	SizeofExpression	sizeof co -> number		7308187	1					
ANR	7308203	Sizeof	sizeof		7308187	0					
ANR	7308204	PtrMemberAccess	co -> number		7308187	1					
ANR	7308205	Identifier	co		7308187	0					
ANR	7308206	Identifier	number		7308187	1					
ANR	7308207	ForStatement	for ( ch = 0 ; ch < 256 ; ++ ch )		7308187	1					
ANR	7308208	ForInit	ch = 0 ;	524:45:15503:15507	7308187	0	True				
ANR	7308209	AssignmentExpression	ch = 0		7308187	0		=			
ANR	7308210	Identifier	ch		7308187	0					
ANR	7308211	PrimaryExpression	0		7308187	1					
ANR	7308212	Condition	ch < 256	524:51:15509:15514	7308187	1	True				
ANR	7308213	RelationalExpression	ch < 256		7308187	0		<			
ANR	7308214	Identifier	ch		7308187	0					
ANR	7308215	PrimaryExpression	256		7308187	1					
ANR	7308216	UnaryExpression	++ ch	524:59:15517:15520	7308187	2	True				
ANR	7308217	IncDec	++		7308187	0					
ANR	7308218	Identifier	ch		7308187	1					
ANR	7308219	CompoundStatement		5:3:81:81	7308187	3					
ANR	7308220	IfStatement	"if ( ! check_one_character ( co , c , ch ) )"		7308187	0					
ANR	7308221	Condition	"! check_one_character ( co , c , ch )"	526:10:15538:15568	7308187	0	True				
ANR	7308222	UnaryOperationExpression	"! check_one_character ( co , c , ch )"		7308187	0					
ANR	7308223	UnaryOperator	!		7308187	0					
ANR	7308224	CallExpression	"check_one_character ( co , c , ch )"		7308187	1					
ANR	7308225	Callee	check_one_character		7308187	0					
ANR	7308226	Identifier	check_one_character		7308187	0					
ANR	7308227	ArgumentList	co		7308187	1					
ANR	7308228	Argument	co		7308187	0					
ANR	7308229	Identifier	co		7308187	0					
ANR	7308230	Argument	c		7308187	1					
ANR	7308231	Identifier	c		7308187	0					
ANR	7308232	Argument	ch		7308187	2					
ANR	7308233	Identifier	ch		7308187	0					
ANR	7308234	ReturnStatement	return 0 ;	527:9:15580:15588	7308187	1	True				
ANR	7308235	PrimaryExpression	0		7308187	0					
ANR	7308236	ReturnStatement	return 1 ;	530:3:15599:15607	7308187	2	True				
ANR	7308237	PrimaryExpression	1		7308187	0					
ANR	7308238	ReturnType	static int		7308187	1					
ANR	7308239	Identifier	check_all_characters		7308187	2					
ANR	7308240	ParameterList	"checkfp_command * co , checkfp_control c"		7308187	3					
ANR	7308241	Parameter	checkfp_command * co	520:32:15404:15422	7308187	0	True				
ANR	7308242	ParameterType	checkfp_command *		7308187	0					
ANR	7308243	Identifier	co		7308187	1					
ANR	7308244	Parameter	checkfp_control c	520:53:15425:15441	7308187	1	True				
ANR	7308245	ParameterType	checkfp_control		7308187	0					
ANR	7308246	Identifier	c		7308187	1					
ANR	7308247	CFGEntryNode	ENTRY		7308187		True				
ANR	7308248	CFGExitNode	EXIT		7308187		True				
ANR	7308249	Symbol	* co		7308187						
ANR	7308250	Symbol	c		7308187						
ANR	7308251	Symbol	ch		7308187						
ANR	7308252	Symbol	co		7308187						
ANR	7308253	Symbol	check_one_character		7308187						
ANR	7308254	Symbol	c . cnumber		7308187						
ANR	7308255	Symbol	co -> number		7308187						
ANR	7308256	Function	check_some_characters	533:0:15612:16064							
ANR	7308257	FunctionDef	"check_some_characters (checkfp_command * co , checkfp_control c , const char * tests)"		7308256	0					
ANR	7308258	CompoundStatement		535:0:15707:16064	7308256	0					
ANR	7308259	IdentifierDeclStatement	int i ;	536:3:15712:15717	7308256	0	True				
ANR	7308260	IdentifierDecl	i		7308256	0					
ANR	7308261	IdentifierDeclType	int		7308256	0					
ANR	7308262	Identifier	i		7308256	1					
ANR	7308263	ExpressionStatement	-- ( c . limit )	538:3:15723:15734	7308256	1	True				
ANR	7308264	UnaryExpression	-- ( c . limit )		7308256	0					
ANR	7308265	IncDec	--		7308256	0					
ANR	7308266	MemberAccess	c . limit		7308256	1					
ANR	7308267	Identifier	c		7308256	0					
ANR	7308268	Identifier	limit		7308256	1					
ANR	7308269	IfStatement	if ( c . cnumber + 4 < sizeof co -> number && c . limit >= 0 )		7308256	2					
ANR	7308270	Condition	c . cnumber + 4 < sizeof co -> number && c . limit >= 0	540:7:15744:15790	7308256	0	True				
ANR	7308271	AndExpression	c . cnumber + 4 < sizeof co -> number && c . limit >= 0		7308256	0		&&			
ANR	7308272	RelationalExpression	c . cnumber + 4 < sizeof co -> number		7308256	0		<			
ANR	7308273	AdditiveExpression	c . cnumber + 4		7308256	0		+			
ANR	7308274	MemberAccess	c . cnumber		7308256	0					
ANR	7308275	Identifier	c		7308256	0					
ANR	7308276	Identifier	cnumber		7308256	1					
ANR	7308277	PrimaryExpression	4		7308256	1					
ANR	7308278	SizeofExpression	sizeof co -> number		7308256	1					
ANR	7308279	Sizeof	sizeof		7308256	0					
ANR	7308280	PtrMemberAccess	co -> number		7308256	1					
ANR	7308281	Identifier	co		7308256	0					
ANR	7308282	Identifier	number		7308256	1					
ANR	7308283	RelationalExpression	c . limit >= 0		7308256	1		>=			
ANR	7308284	MemberAccess	c . limit		7308256	0					
ANR	7308285	Identifier	c		7308256	0					
ANR	7308286	Identifier	limit		7308256	1					
ANR	7308287	PrimaryExpression	0		7308256	1					
ANR	7308288	CompoundStatement		7:3:88:88	7308256	1					
ANR	7308289	IfStatement	if ( c . limit > 0 )		7308256	0					
ANR	7308290	Condition	c . limit > 0	542:10:15808:15818	7308256	0	True				
ANR	7308291	RelationalExpression	c . limit > 0		7308256	0		>			
ANR	7308292	MemberAccess	c . limit		7308256	0					
ANR	7308293	Identifier	c		7308256	0					
ANR	7308294	Identifier	limit		7308256	1					
ANR	7308295	PrimaryExpression	0		7308256	1					
ANR	7308296	ForStatement	for ( i = 0 ; tests [ i ] ; ++ i )		7308256	1					
ANR	7308297	ForInit	i = 0 ;	542:28:15826:15829	7308256	0	True				
ANR	7308298	AssignmentExpression	i = 0		7308256	0		=			
ANR	7308299	Identifier	i		7308256	0					
ANR	7308300	PrimaryExpression	0		7308256	1					
ANR	7308301	Condition	tests [ i ]	542:33:15831:15838	7308256	1	True				
ANR	7308302	ArrayIndexing	tests [ i ]		7308256	0					
ANR	7308303	Identifier	tests		7308256	0					
ANR	7308304	Identifier	i		7308256	1					
ANR	7308305	UnaryExpression	++ i	542:43:15841:15843	7308256	2	True				
ANR	7308306	IncDec	++		7308256	0					
ANR	7308307	Identifier	i		7308256	1					
ANR	7308308	CompoundStatement		9:6:144:144	7308256	3					
ANR	7308309	IfStatement	"if ( ! check_one_character ( co , c , tests [ i ] ) )"		7308256	0					
ANR	7308310	Condition	"! check_one_character ( co , c , tests [ i ] )"	544:13:15867:15903	7308256	0	True				
ANR	7308311	UnaryOperationExpression	"! check_one_character ( co , c , tests [ i ] )"		7308256	0					
ANR	7308312	UnaryOperator	!		7308256	0					
ANR	7308313	CallExpression	"check_one_character ( co , c , tests [ i ] )"		7308256	1					
ANR	7308314	Callee	check_one_character		7308256	0					
ANR	7308315	Identifier	check_one_character		7308256	0					
ANR	7308316	ArgumentList	co		7308256	1					
ANR	7308317	Argument	co		7308256	0					
ANR	7308318	Identifier	co		7308256	0					
ANR	7308319	Argument	c		7308256	1					
ANR	7308320	Identifier	c		7308256	0					
ANR	7308321	Argument	tests [ i ]		7308256	2					
ANR	7308322	ArrayIndexing	tests [ i ]		7308256	0					
ANR	7308323	Identifier	tests		7308256	0					
ANR	7308324	Identifier	i		7308256	1					
ANR	7308325	ReturnStatement	return 0 ;	545:15:15921:15929	7308256	1	True				
ANR	7308326	PrimaryExpression	0		7308256	0					
ANR	7308327	ElseStatement	else		7308256	0					
ANR	7308328	ReturnStatement	"return check_all_characters ( co , c ) ;"	550:9:16009:16043	7308256	0	True				
ANR	7308329	CallExpression	"check_all_characters ( co , c )"		7308256	0					
ANR	7308330	Callee	check_all_characters		7308256	0					
ANR	7308331	Identifier	check_all_characters		7308256	0					
ANR	7308332	ArgumentList	co		7308256	1					
ANR	7308333	Argument	co		7308256	0					
ANR	7308334	Identifier	co		7308256	0					
ANR	7308335	Argument	c		7308256	1					
ANR	7308336	Identifier	c		7308256	0					
ANR	7308337	ReturnStatement	return 1 ;	553:3:16054:16062	7308256	3	True				
ANR	7308338	PrimaryExpression	1		7308256	0					
ANR	7308339	ReturnType	static int		7308256	1					
ANR	7308340	Identifier	check_some_characters		7308256	2					
ANR	7308341	ParameterList	"checkfp_command * co , checkfp_control c , const char * tests"		7308256	3					
ANR	7308342	Parameter	checkfp_command * co	533:33:15645:15663	7308256	0	True				
ANR	7308343	ParameterType	checkfp_command *		7308256	0					
ANR	7308344	Identifier	co		7308256	1					
ANR	7308345	Parameter	checkfp_control c	533:54:15666:15682	7308256	1	True				
ANR	7308346	ParameterType	checkfp_control		7308256	0					
ANR	7308347	Identifier	c		7308256	1					
ANR	7308348	Parameter	const char * tests	534:3:15688:15704	7308256	2	True				
ANR	7308349	ParameterType	const char *		7308256	0					
ANR	7308350	Identifier	tests		7308256	1					
ANR	7308351	CFGEntryNode	ENTRY		7308256		True				
ANR	7308352	CFGExitNode	EXIT		7308256		True				
ANR	7308353	Symbol	* co		7308256						
ANR	7308354	Symbol	c		7308256						
ANR	7308355	Symbol	tests		7308256						
ANR	7308356	Symbol	* i		7308256						
ANR	7308357	Symbol	check_all_characters		7308256						
ANR	7308358	Symbol	c . limit		7308256						
ANR	7308359	Symbol	* tests		7308256						
ANR	7308360	Symbol	i		7308256						
ANR	7308361	Symbol	co		7308256						
ANR	7308362	Symbol	check_one_character		7308256						
ANR	7308363	Symbol	c . cnumber		7308256						
ANR	7308364	Symbol	co -> number		7308256						
ANR	7308365	Function	validation_checkfp	556:0:16067:17215							
ANR	7308366	FunctionDef	"validation_checkfp (int count , int argc , char * * argv)"		7308365	0					
ANR	7308367	CompoundStatement		557:0:16124:17215	7308365	0					
ANR	7308368	IdentifierDeclStatement	int result ;	558:3:16129:16139	7308365	0	True				
ANR	7308369	IdentifierDecl	result		7308365	0					
ANR	7308370	IdentifierDeclType	int		7308365	0					
ANR	7308371	Identifier	result		7308365	1					
ANR	7308372	IdentifierDeclStatement	checkfp_command command ;	559:3:16144:16167	7308365	1	True				
ANR	7308373	IdentifierDecl	command		7308365	0					
ANR	7308374	IdentifierDeclType	checkfp_command		7308365	0					
ANR	7308375	Identifier	command		7308365	1					
ANR	7308376	IdentifierDeclStatement	checkfp_control control ;	560:3:16172:16195	7308365	2	True				
ANR	7308377	IdentifierDecl	control		7308365	0					
ANR	7308378	IdentifierDeclType	checkfp_control		7308365	0					
ANR	7308379	Identifier	control		7308365	1					
ANR	7308380	ExpressionStatement	command . number [ 0 ] = 0	562:3:16201:16222	7308365	3	True				
ANR	7308381	AssignmentExpression	command . number [ 0 ] = 0		7308365	0		=			
ANR	7308382	ArrayIndexing	command . number [ 0 ]		7308365	0					
ANR	7308383	MemberAccess	command . number		7308365	0					
ANR	7308384	Identifier	command		7308365	0					
ANR	7308385	Identifier	number		7308365	1					
ANR	7308386	PrimaryExpression	0		7308365	1					
ANR	7308387	PrimaryExpression	0		7308365	1					
ANR	7308388	ExpressionStatement	command . limit = 3	563:3:16227:16244	7308365	4	True				
ANR	7308389	AssignmentExpression	command . limit = 3		7308365	0		=			
ANR	7308390	MemberAccess	command . limit		7308365	0					
ANR	7308391	Identifier	command		7308365	0					
ANR	7308392	Identifier	limit		7308365	1					
ANR	7308393	PrimaryExpression	3		7308365	1					
ANR	7308394	ExpressionStatement	command . verbose = verbose	564:3:16249:16274	7308365	5	True				
ANR	7308395	AssignmentExpression	command . verbose = verbose		7308365	0		=			
ANR	7308396	MemberAccess	command . verbose		7308365	0					
ANR	7308397	Identifier	command		7308365	0					
ANR	7308398	Identifier	verbose		7308365	1					
ANR	7308399	Identifier	verbose		7308365	1					
ANR	7308400	ExpressionStatement	command . ctimes = 0	565:3:16279:16297	7308365	6	True				
ANR	7308401	AssignmentExpression	command . ctimes = 0		7308365	0		=			
ANR	7308402	MemberAccess	command . ctimes		7308365	0					
ANR	7308403	Identifier	command		7308365	0					
ANR	7308404	Identifier	ctimes		7308365	1					
ANR	7308405	PrimaryExpression	0		7308365	1					
ANR	7308406	ExpressionStatement	command . cmillions = 0	566:3:16302:16323	7308365	7	True				
ANR	7308407	AssignmentExpression	command . cmillions = 0		7308365	0		=			
ANR	7308408	MemberAccess	command . cmillions		7308365	0					
ANR	7308409	Identifier	command		7308365	0					
ANR	7308410	Identifier	cmillions		7308365	1					
ANR	7308411	PrimaryExpression	0		7308365	1					
ANR	7308412	ExpressionStatement	command . cinvalid = 0	567:3:16328:16348	7308365	8	True				
ANR	7308413	AssignmentExpression	command . cinvalid = 0		7308365	0		=			
ANR	7308414	MemberAccess	command . cinvalid		7308365	0					
ANR	7308415	Identifier	command		7308365	0					
ANR	7308416	Identifier	cinvalid		7308365	1					
ANR	7308417	PrimaryExpression	0		7308365	1					
ANR	7308418	ExpressionStatement	command . cnoaccept = 0	568:3:16353:16374	7308365	9	True				
ANR	7308419	AssignmentExpression	command . cnoaccept = 0		7308365	0		=			
ANR	7308420	MemberAccess	command . cnoaccept		7308365	0					
ANR	7308421	Identifier	command		7308365	0					
ANR	7308422	Identifier	cnoaccept		7308365	1					
ANR	7308423	PrimaryExpression	0		7308365	1					
ANR	7308424	WhileStatement	while ( -- argc > 0 )		7308365	10					
ANR	7308425	Condition	-- argc > 0	570:10:16387:16396	7308365	0	True				
ANR	7308426	RelationalExpression	-- argc > 0		7308365	0		>			
ANR	7308427	UnaryExpression	-- argc		7308365	0					
ANR	7308428	IncDec	--		7308365	0					
ANR	7308429	Identifier	argc		7308365	1					
ANR	7308430	PrimaryExpression	0		7308365	1					
ANR	7308431	CompoundStatement		15:3:277:277	7308365	1					
ANR	7308432	ExpressionStatement	++ argv	572:6:16410:16416	7308365	0	True				
ANR	7308433	UnaryExpression	++ argv		7308365	0					
ANR	7308434	IncDec	++		7308365	0					
ANR	7308435	Identifier	argv		7308365	1					
ANR	7308436	IfStatement	"if ( argc > 1 && strcmp ( * argv , ""-l"" ) == 0 )"		7308365	1					
ANR	7308437	Condition	"argc > 1 && strcmp ( * argv , ""-l"" ) == 0"	573:10:16428:16463	7308365	0	True				
ANR	7308438	AndExpression	"argc > 1 && strcmp ( * argv , ""-l"" ) == 0"		7308365	0		&&			
ANR	7308439	RelationalExpression	argc > 1		7308365	0		>			
ANR	7308440	Identifier	argc		7308365	0					
ANR	7308441	PrimaryExpression	1		7308365	1					
ANR	7308442	EqualityExpression	"strcmp ( * argv , ""-l"" ) == 0"		7308365	1		==			
ANR	7308443	CallExpression	"strcmp ( * argv , ""-l"" )"		7308365	0					
ANR	7308444	Callee	strcmp		7308365	0					
ANR	7308445	Identifier	strcmp		7308365	0					
ANR	7308446	ArgumentList	* argv		7308365	1					
ANR	7308447	Argument	* argv		7308365	0					
ANR	7308448	UnaryOperationExpression	* argv		7308365	0					
ANR	7308449	UnaryOperator	*		7308365	0					
ANR	7308450	Identifier	argv		7308365	1					
ANR	7308451	Argument	"""-l"""		7308365	1					
ANR	7308452	PrimaryExpression	"""-l"""		7308365	0					
ANR	7308453	PrimaryExpression	0		7308365	1					
ANR	7308454	CompoundStatement		18:6:347:347	7308365	1					
ANR	7308455	ExpressionStatement	-- argc	575:9:16483:16489	7308365	0	True				
ANR	7308456	UnaryExpression	-- argc		7308365	0					
ANR	7308457	IncDec	--		7308365	0					
ANR	7308458	Identifier	argc		7308365	1					
ANR	7308459	ExpressionStatement	command . limit = atoi ( * ++ argv )	576:9:16500:16529	7308365	1	True				
ANR	7308460	AssignmentExpression	command . limit = atoi ( * ++ argv )		7308365	0		=			
ANR	7308461	MemberAccess	command . limit		7308365	0					
ANR	7308462	Identifier	command		7308365	0					
ANR	7308463	Identifier	limit		7308365	1					
ANR	7308464	CallExpression	atoi ( * ++ argv )		7308365	1					
ANR	7308465	Callee	atoi		7308365	0					
ANR	7308466	Identifier	atoi		7308365	0					
ANR	7308467	ArgumentList	* ++ argv		7308365	1					
ANR	7308468	Argument	* ++ argv		7308365	0					
ANR	7308469	UnaryOperationExpression	* ++ argv		7308365	0					
ANR	7308470	UnaryOperator	*		7308365	0					
ANR	7308471	UnaryExpression	++ argv		7308365	1					
ANR	7308472	IncDec	++		7308365	0					
ANR	7308473	Identifier	argv		7308365	1					
ANR	7308474	ElseStatement	else		7308365	0					
ANR	7308475	CompoundStatement		24:6:432:432	7308365	0					
ANR	7308476	ExpressionStatement	"fprintf ( stderr , ""unknown argument %s\\n"" , * argv )"	581:9:16568:16615	7308365	0	True				
ANR	7308477	CallExpression	"fprintf ( stderr , ""unknown argument %s\\n"" , * argv )"		7308365	0					
ANR	7308478	Callee	fprintf		7308365	0					
ANR	7308479	Identifier	fprintf		7308365	0					
ANR	7308480	ArgumentList	stderr		7308365	1					
ANR	7308481	Argument	stderr		7308365	0					
ANR	7308482	Identifier	stderr		7308365	0					
ANR	7308483	Argument	"""unknown argument %s\\n"""		7308365	1					
ANR	7308484	PrimaryExpression	"""unknown argument %s\\n"""		7308365	0					
ANR	7308485	Argument	* argv		7308365	2					
ANR	7308486	UnaryOperationExpression	* argv		7308365	0					
ANR	7308487	UnaryOperator	*		7308365	0					
ANR	7308488	Identifier	argv		7308365	1					
ANR	7308489	ReturnStatement	return 1 ;	582:9:16626:16634	7308365	1	True				
ANR	7308490	PrimaryExpression	1		7308365	0					
ANR	7308491	ExpressionStatement	control . cnumber = 0	586:3:16653:16672	7308365	11	True				
ANR	7308492	AssignmentExpression	control . cnumber = 0		7308365	0		=			
ANR	7308493	MemberAccess	control . cnumber		7308365	0					
ANR	7308494	Identifier	control		7308365	0					
ANR	7308495	Identifier	cnumber		7308365	1					
ANR	7308496	PrimaryExpression	0		7308365	1					
ANR	7308497	ExpressionStatement	control . check_state = start	587:3:16677:16704	7308365	12	True				
ANR	7308498	AssignmentExpression	control . check_state = start		7308365	0		=			
ANR	7308499	MemberAccess	control . check_state		7308365	0					
ANR	7308500	Identifier	control		7308365	0					
ANR	7308501	Identifier	check_state		7308365	1					
ANR	7308502	Identifier	start		7308365	1					
ANR	7308503	ExpressionStatement	control . at_start = 1	588:3:16709:16729	7308365	13	True				
ANR	7308504	AssignmentExpression	control . at_start = 1		7308365	0		=			
ANR	7308505	MemberAccess	control . at_start		7308365	0					
ANR	7308506	Identifier	control		7308365	0					
ANR	7308507	Identifier	at_start		7308365	1					
ANR	7308508	PrimaryExpression	1		7308365	1					
ANR	7308509	ExpressionStatement	control . cdigits_in_state = 0	589:3:16734:16762	7308365	14	True				
ANR	7308510	AssignmentExpression	control . cdigits_in_state = 0		7308365	0		=			
ANR	7308511	MemberAccess	control . cdigits_in_state		7308365	0					
ANR	7308512	Identifier	control		7308365	0					
ANR	7308513	Identifier	cdigits_in_state		7308365	1					
ANR	7308514	PrimaryExpression	0		7308365	1					
ANR	7308515	ExpressionStatement	control . limit = command . limit	590:3:16767:16796	7308365	15	True				
ANR	7308516	AssignmentExpression	control . limit = command . limit		7308365	0		=			
ANR	7308517	MemberAccess	control . limit		7308365	0					
ANR	7308518	Identifier	control		7308365	0					
ANR	7308519	Identifier	limit		7308365	1					
ANR	7308520	MemberAccess	command . limit		7308365	1					
ANR	7308521	Identifier	command		7308365	0					
ANR	7308522	Identifier	limit		7308365	1					
ANR	7308523	ExpressionStatement	control . state = 0	591:3:16801:16818	7308365	16	True				
ANR	7308524	AssignmentExpression	control . state = 0		7308365	0		=			
ANR	7308525	MemberAccess	control . state		7308365	0					
ANR	7308526	Identifier	control		7308365	0					
ANR	7308527	Identifier	state		7308365	1					
ANR	7308528	PrimaryExpression	0		7308365	1					
ANR	7308529	ExpressionStatement	control . is_negative = 0	592:3:16823:16846	7308365	17	True				
ANR	7308530	AssignmentExpression	control . is_negative = 0		7308365	0		=			
ANR	7308531	MemberAccess	control . is_negative		7308365	0					
ANR	7308532	Identifier	control		7308365	0					
ANR	7308533	Identifier	is_negative		7308365	1					
ANR	7308534	PrimaryExpression	0		7308365	1					
ANR	7308535	ExpressionStatement	control . is_zero = 1	593:3:16851:16870	7308365	18	True				
ANR	7308536	AssignmentExpression	control . is_zero = 1		7308365	0		=			
ANR	7308537	MemberAccess	control . is_zero		7308365	0					
ANR	7308538	Identifier	control		7308365	0					
ANR	7308539	Identifier	is_zero		7308365	1					
ANR	7308540	PrimaryExpression	1		7308365	1					
ANR	7308541	ExpressionStatement	control . number_was_valid = 0	594:3:16875:16903	7308365	19	True				
ANR	7308542	AssignmentExpression	control . number_was_valid = 0		7308365	0		=			
ANR	7308543	MemberAccess	control . number_was_valid		7308365	0					
ANR	7308544	Identifier	control		7308365	0					
ANR	7308545	Identifier	number_was_valid		7308365	1					
ANR	7308546	PrimaryExpression	0		7308365	1					
ANR	7308547	ExpressionStatement	"result = check_all_characters ( & command , control )"	596:3:16909:16957	7308365	20	True				
ANR	7308548	AssignmentExpression	"result = check_all_characters ( & command , control )"		7308365	0		=			
ANR	7308549	Identifier	result		7308365	0					
ANR	7308550	CallExpression	"check_all_characters ( & command , control )"		7308365	1					
ANR	7308551	Callee	check_all_characters		7308365	0					
ANR	7308552	Identifier	check_all_characters		7308365	0					
ANR	7308553	ArgumentList	& command		7308365	1					
ANR	7308554	Argument	& command		7308365	0					
ANR	7308555	UnaryOperationExpression	& command		7308365	0					
ANR	7308556	UnaryOperator	&		7308365	0					
ANR	7308557	Identifier	command		7308365	1					
ANR	7308558	Argument	control		7308365	1					
ANR	7308559	Identifier	control		7308365	0					
ANR	7308560	ExpressionStatement	"printf ( ""checkfp: %s: checked %d,%.3d,%.3d,%.3d strings (%d invalid)\\n"" , result ? ""pass"" : ""FAIL"" , command . cmillions / 1000 , command . cmillions % 1000 , command . ctimes / 1000 , command . ctimes % 1000 , command . cinvalid )"	598:3:16963:17194	7308365	21	True				
ANR	7308561	CallExpression	"printf ( ""checkfp: %s: checked %d,%.3d,%.3d,%.3d strings (%d invalid)\\n"" , result ? ""pass"" : ""FAIL"" , command . cmillions / 1000 , command . cmillions % 1000 , command . ctimes / 1000 , command . ctimes % 1000 , command . cinvalid )"		7308365	0					
ANR	7308562	Callee	printf		7308365	0					
ANR	7308563	Identifier	printf		7308365	0					
ANR	7308564	ArgumentList	"""checkfp: %s: checked %d,%.3d,%.3d,%.3d strings (%d invalid)\\n"""		7308365	1					
ANR	7308565	Argument	"""checkfp: %s: checked %d,%.3d,%.3d,%.3d strings (%d invalid)\\n"""		7308365	0					
ANR	7308566	PrimaryExpression	"""checkfp: %s: checked %d,%.3d,%.3d,%.3d strings (%d invalid)\\n"""		7308365	0					
ANR	7308567	Argument	"result ? ""pass"" : ""FAIL"""		7308365	1					
ANR	7308568	ConditionalExpression	"result ? ""pass"" : ""FAIL"""		7308365	0					
ANR	7308569	Condition	result		7308365	0					
ANR	7308570	Identifier	result		7308365	0					
ANR	7308571	PrimaryExpression	"""pass"""		7308365	1					
ANR	7308572	PrimaryExpression	"""FAIL"""		7308365	2					
ANR	7308573	Argument	command . cmillions / 1000		7308365	2					
ANR	7308574	MultiplicativeExpression	command . cmillions / 1000		7308365	0		/			
ANR	7308575	MemberAccess	command . cmillions		7308365	0					
ANR	7308576	Identifier	command		7308365	0					
ANR	7308577	Identifier	cmillions		7308365	1					
ANR	7308578	PrimaryExpression	1000		7308365	1					
ANR	7308579	Argument	command . cmillions % 1000		7308365	3					
ANR	7308580	MultiplicativeExpression	command . cmillions % 1000		7308365	0		%			
ANR	7308581	MemberAccess	command . cmillions		7308365	0					
ANR	7308582	Identifier	command		7308365	0					
ANR	7308583	Identifier	cmillions		7308365	1					
ANR	7308584	PrimaryExpression	1000		7308365	1					
ANR	7308585	Argument	command . ctimes / 1000		7308365	4					
ANR	7308586	MultiplicativeExpression	command . ctimes / 1000		7308365	0		/			
ANR	7308587	MemberAccess	command . ctimes		7308365	0					
ANR	7308588	Identifier	command		7308365	0					
ANR	7308589	Identifier	ctimes		7308365	1					
ANR	7308590	PrimaryExpression	1000		7308365	1					
ANR	7308591	Argument	command . ctimes % 1000		7308365	5					
ANR	7308592	MultiplicativeExpression	command . ctimes % 1000		7308365	0		%			
ANR	7308593	MemberAccess	command . ctimes		7308365	0					
ANR	7308594	Identifier	command		7308365	0					
ANR	7308595	Identifier	ctimes		7308365	1					
ANR	7308596	PrimaryExpression	1000		7308365	1					
ANR	7308597	Argument	command . cinvalid		7308365	6					
ANR	7308598	MemberAccess	command . cinvalid		7308365	0					
ANR	7308599	Identifier	command		7308365	0					
ANR	7308600	Identifier	cinvalid		7308365	1					
ANR	7308601	ReturnStatement	return result ;	603:3:17200:17213	7308365	22	True				
ANR	7308602	Identifier	result		7308365	0					
ANR	7308603	ReturnType	int		7308365	1					
ANR	7308604	Identifier	validation_checkfp		7308365	2					
ANR	7308605	ParameterList	"int count , int argc , char * * argv"		7308365	3					
ANR	7308606	Parameter	int count	556:23:16090:16098	7308365	0	True				
ANR	7308607	ParameterType	int		7308365	0					
ANR	7308608	Identifier	count		7308365	1					
ANR	7308609	Parameter	int argc	556:34:16101:16108	7308365	1	True				
ANR	7308610	ParameterType	int		7308365	0					
ANR	7308611	Identifier	argc		7308365	1					
ANR	7308612	Parameter	char * * argv	556:44:16111:16121	7308365	2	True				
ANR	7308613	ParameterType	char * *		7308365	0					
ANR	7308614	Identifier	argv		7308365	1					
ANR	7308615	CFGEntryNode	ENTRY		7308365		True				
ANR	7308616	CFGExitNode	EXIT		7308365		True				
ANR	7308617	Symbol	command . cmillions		7308365						
ANR	7308618	Symbol	command . cnoaccept		7308365						
ANR	7308619	Symbol	* argv		7308365						
ANR	7308620	Symbol	argv		7308365						
ANR	7308621	Symbol	result		7308365						
ANR	7308622	Symbol	* command		7308365						
ANR	7308623	Symbol	command . limit		7308365						
ANR	7308624	Symbol	command . verbose		7308365						
ANR	7308625	Symbol	check_all_characters		7308365						
ANR	7308626	Symbol	command . cinvalid		7308365						
ANR	7308627	Symbol	control . state		7308365						
ANR	7308628	Symbol	command . number		7308365						
ANR	7308629	Symbol	control . is_negative		7308365						
ANR	7308630	Symbol	control . number_was_valid		7308365						
ANR	7308631	Symbol	argc		7308365						
ANR	7308632	Symbol	strcmp		7308365						
ANR	7308633	Symbol	atoi		7308365						
ANR	7308634	Symbol	& command		7308365						
ANR	7308635	Symbol	control . cnumber		7308365						
ANR	7308636	Symbol	control . cdigits_in_state		7308365						
ANR	7308637	Symbol	control . limit		7308365						
ANR	7308638	Symbol	count		7308365						
ANR	7308639	Symbol	start		7308365						
ANR	7308640	Symbol	control		7308365						
ANR	7308641	Symbol	control . check_state		7308365						
ANR	7308642	Symbol	stderr		7308365						
ANR	7308643	Symbol	command		7308365						
ANR	7308644	Symbol	verbose		7308365						
ANR	7308645	Symbol	command . ctimes		7308365						
ANR	7308646	Symbol	* ++ argv		7308365						
ANR	7308647	Symbol	control . at_start		7308365						
ANR	7308648	Symbol	control . is_zero		7308365						
ANR	7308649	Symbol	* command . number		7308365						
ANR	7308650	Function	validation_muldiv	606:0:17218:20591							
ANR	7308651	FunctionDef	"validation_muldiv (int count , int argc , char * * argv)"		7308650	0					
ANR	7308652	CompoundStatement		607:0:17274:20591	7308650	0					
ANR	7308653	IdentifierDeclStatement	int tested = 0 ;	608:3:17279:17293	7308650	0	True				
ANR	7308654	IdentifierDecl	tested = 0		7308650	0					
ANR	7308655	IdentifierDeclType	int		7308650	0					
ANR	7308656	Identifier	tested		7308650	1					
ANR	7308657	AssignmentExpression	tested = 0		7308650	2		=			
ANR	7308658	Identifier	tested		7308650	0					
ANR	7308659	PrimaryExpression	0		7308650	1					
ANR	7308660	IdentifierDeclStatement	int overflow = 0 ;	609:3:17298:17314	7308650	1	True				
ANR	7308661	IdentifierDecl	overflow = 0		7308650	0					
ANR	7308662	IdentifierDeclType	int		7308650	0					
ANR	7308663	Identifier	overflow		7308650	1					
ANR	7308664	AssignmentExpression	overflow = 0		7308650	2		=			
ANR	7308665	Identifier	overflow		7308650	0					
ANR	7308666	PrimaryExpression	0		7308650	1					
ANR	7308667	IdentifierDeclStatement	int error = 0 ;	610:3:17319:17332	7308650	2	True				
ANR	7308668	IdentifierDecl	error = 0		7308650	0					
ANR	7308669	IdentifierDeclType	int		7308650	0					
ANR	7308670	Identifier	error		7308650	1					
ANR	7308671	AssignmentExpression	error = 0		7308650	2		=			
ANR	7308672	Identifier	error		7308650	0					
ANR	7308673	PrimaryExpression	0		7308650	1					
ANR	7308674	IdentifierDeclStatement	int error64 = 0 ;	611:3:17337:17352	7308650	3	True				
ANR	7308675	IdentifierDecl	error64 = 0		7308650	0					
ANR	7308676	IdentifierDeclType	int		7308650	0					
ANR	7308677	Identifier	error64		7308650	1					
ANR	7308678	AssignmentExpression	error64 = 0		7308650	2		=			
ANR	7308679	Identifier	error64		7308650	0					
ANR	7308680	PrimaryExpression	0		7308650	1					
ANR	7308681	IdentifierDeclStatement	int passed = 0 ;	612:3:17357:17371	7308650	4	True				
ANR	7308682	IdentifierDecl	passed = 0		7308650	0					
ANR	7308683	IdentifierDeclType	int		7308650	0					
ANR	7308684	Identifier	passed		7308650	1					
ANR	7308685	AssignmentExpression	passed = 0		7308650	2		=			
ANR	7308686	Identifier	passed		7308650	0					
ANR	7308687	PrimaryExpression	0		7308650	1					
ANR	7308688	IdentifierDeclStatement	int randbits = 0 ;	613:3:17376:17392	7308650	5	True				
ANR	7308689	IdentifierDecl	randbits = 0		7308650	0					
ANR	7308690	IdentifierDeclType	int		7308650	0					
ANR	7308691	Identifier	randbits		7308650	1					
ANR	7308692	AssignmentExpression	randbits = 0		7308650	2		=			
ANR	7308693	Identifier	randbits		7308650	0					
ANR	7308694	PrimaryExpression	0		7308650	1					
ANR	7308695	IdentifierDeclStatement	png_uint_32 randbuffer ;	614:3:17397:17419	7308650	6	True				
ANR	7308696	IdentifierDecl	randbuffer		7308650	0					
ANR	7308697	IdentifierDeclType	png_uint_32		7308650	0					
ANR	7308698	Identifier	randbuffer		7308650	1					
ANR	7308699	IdentifierDeclStatement	png_fixed_point a ;	615:3:17424:17441	7308650	7	True				
ANR	7308700	IdentifierDecl	a		7308650	0					
ANR	7308701	IdentifierDeclType	png_fixed_point		7308650	0					
ANR	7308702	Identifier	a		7308650	1					
ANR	7308703	IdentifierDeclStatement	"png_int_32 times , div ;"	616:3:17446:17467	7308650	8	True				
ANR	7308704	IdentifierDecl	times		7308650	0					
ANR	7308705	IdentifierDeclType	png_int_32		7308650	0					
ANR	7308706	Identifier	times		7308650	1					
ANR	7308707	IdentifierDecl	div		7308650	1					
ANR	7308708	IdentifierDeclType	png_int_32		7308650	0					
ANR	7308709	Identifier	div		7308650	1					
ANR	7308710	WhileStatement	while ( -- argc > 0 )		7308650	9					
ANR	7308711	Condition	-- argc > 0	618:10:17480:17489	7308650	0	True				
ANR	7308712	RelationalExpression	-- argc > 0		7308650	0		>			
ANR	7308713	UnaryExpression	-- argc		7308650	0					
ANR	7308714	IncDec	--		7308650	0					
ANR	7308715	Identifier	argc		7308650	1					
ANR	7308716	PrimaryExpression	0		7308650	1					
ANR	7308717	CompoundStatement		13:6:223:223	7308650	1					
ANR	7308718	ExpressionStatement	"fprintf ( stderr , ""unknown argument %s\\n"" , * ++ argv )"	620:9:17509:17558	7308650	0	True				
ANR	7308719	CallExpression	"fprintf ( stderr , ""unknown argument %s\\n"" , * ++ argv )"		7308650	0					
ANR	7308720	Callee	fprintf		7308650	0					
ANR	7308721	Identifier	fprintf		7308650	0					
ANR	7308722	ArgumentList	stderr		7308650	1					
ANR	7308723	Argument	stderr		7308650	0					
ANR	7308724	Identifier	stderr		7308650	0					
ANR	7308725	Argument	"""unknown argument %s\\n"""		7308650	1					
ANR	7308726	PrimaryExpression	"""unknown argument %s\\n"""		7308650	0					
ANR	7308727	Argument	* ++ argv		7308650	2					
ANR	7308728	UnaryOperationExpression	* ++ argv		7308650	0					
ANR	7308729	UnaryOperator	*		7308650	0					
ANR	7308730	UnaryExpression	++ argv		7308650	1					
ANR	7308731	IncDec	++		7308650	0					
ANR	7308732	Identifier	argv		7308650	1					
ANR	7308733	ReturnStatement	return 1 ;	621:9:17569:17577	7308650	1	True				
ANR	7308734	PrimaryExpression	1		7308650	0					
ANR	7308735	ExpressionStatement	randbuffer = RAND_MAX	625:3:17644:17665	7308650	10	True				
ANR	7308736	AssignmentExpression	randbuffer = RAND_MAX		7308650	0		=			
ANR	7308737	Identifier	randbuffer		7308650	0					
ANR	7308738	Identifier	RAND_MAX		7308650	1					
ANR	7308739	WhileStatement	while ( randbuffer != 0 )		7308650	11					
ANR	7308740	Condition	randbuffer != 0	626:10:17677:17691	7308650	0	True				
ANR	7308741	EqualityExpression	randbuffer != 0		7308650	0		!=			
ANR	7308742	Identifier	randbuffer		7308650	0					
ANR	7308743	PrimaryExpression	0		7308650	1					
ANR	7308744	ExpressionStatement	"++ randbits , randbuffer >>= 1"	626:27:17694:17722	7308650	1	True				
ANR	7308745	Expression	"++ randbits , randbuffer >>= 1"		7308650	0					
ANR	7308746	UnaryExpression	++ randbits		7308650	0					
ANR	7308747	IncDec	++		7308650	0					
ANR	7308748	Identifier	randbits		7308650	1					
ANR	7308749	AssignmentExpression	randbuffer >>= 1		7308650	1		>>=			
ANR	7308750	Identifier	randbuffer		7308650	0					
ANR	7308751	PrimaryExpression	1		7308650	1					
ANR	7308752	ExpressionStatement	"printf ( ""Using random number generator that makes %d bits\\n"" , randbits )"	627:3:17727:17797	7308650	12	True				
ANR	7308753	CallExpression	"printf ( ""Using random number generator that makes %d bits\\n"" , randbits )"		7308650	0					
ANR	7308754	Callee	printf		7308650	0					
ANR	7308755	Identifier	printf		7308650	0					
ANR	7308756	ArgumentList	"""Using random number generator that makes %d bits\\n"""		7308650	1					
ANR	7308757	Argument	"""Using random number generator that makes %d bits\\n"""		7308650	0					
ANR	7308758	PrimaryExpression	"""Using random number generator that makes %d bits\\n"""		7308650	0					
ANR	7308759	Argument	randbits		7308650	1					
ANR	7308760	Identifier	randbits		7308650	0					
ANR	7308761	ForStatement	for ( div = 0 ; div < 32 ; div += randbits )		7308650	13					
ANR	7308762	ForInit	div = 0 ;	628:8:17807:17812	7308650	0	True				
ANR	7308763	AssignmentExpression	div = 0		7308650	0		=			
ANR	7308764	Identifier	div		7308650	0					
ANR	7308765	PrimaryExpression	0		7308650	1					
ANR	7308766	Condition	div < 32	628:15:17814:17819	7308650	1	True				
ANR	7308767	RelationalExpression	div < 32		7308650	0		<			
ANR	7308768	Identifier	div		7308650	0					
ANR	7308769	PrimaryExpression	32		7308650	1					
ANR	7308770	AssignmentExpression	div += randbits	628:23:17822:17836	7308650	2	True	+=			
ANR	7308771	Identifier	div		7308650	0					
ANR	7308772	Identifier	randbits		7308650	1					
ANR	7308773	ExpressionStatement	randbuffer = ( randbuffer << randbits ) ^ rand ( )	629:6:17845:17891	7308650	3	True				
ANR	7308774	AssignmentExpression	randbuffer = ( randbuffer << randbits ) ^ rand ( )		7308650	0		=			
ANR	7308775	Identifier	randbuffer		7308650	0					
ANR	7308776	ExclusiveOrExpression	( randbuffer << randbits ) ^ rand ( )		7308650	1		^			
ANR	7308777	ShiftExpression	randbuffer << randbits		7308650	0		<<			
ANR	7308778	Identifier	randbuffer		7308650	0					
ANR	7308779	Identifier	randbits		7308650	1					
ANR	7308780	CallExpression	rand ( )		7308650	1					
ANR	7308781	Callee	rand		7308650	0					
ANR	7308782	Identifier	rand		7308650	0					
ANR	7308783	ArgumentList			7308650	1					
ANR	7308784	ExpressionStatement	a = 0	631:3:17897:17902	7308650	14	True				
ANR	7308785	AssignmentExpression	a = 0		7308650	0		=			
ANR	7308786	Identifier	a		7308650	0					
ANR	7308787	PrimaryExpression	0		7308650	1					
ANR	7308788	ExpressionStatement	times = div = 0	632:3:17907:17922	7308650	15	True				
ANR	7308789	AssignmentExpression	times = div = 0		7308650	0		=			
ANR	7308790	Identifier	times		7308650	0					
ANR	7308791	AssignmentExpression	div = 0		7308650	1		=			
ANR	7308792	Identifier	div		7308650	0					
ANR	7308793	PrimaryExpression	0		7308650	1					
ANR	7308794	DoStatement	do		7308650	16					
ANR	7308795	CompoundStatement		36:6:946:952	7308650	0					
ANR	7308796	IdentifierDeclStatement	png_fixed_point result ;	635:6:17941:17963	7308650	0	True				
ANR	7308797	IdentifierDecl	result		7308650	0					
ANR	7308798	IdentifierDeclType	png_fixed_point		7308650	0					
ANR	7308799	Identifier	result		7308650	1					
ANR	7308800	IdentifierDeclStatement	"long long int fp , fpround ;"	640:6:18160:18185	7308650	1	True				
ANR	7308801	IdentifierDecl	fp		7308650	0					
ANR	7308802	IdentifierDeclType	long long int		7308650	0					
ANR	7308803	Identifier	fp		7308650	1					
ANR	7308804	IdentifierDecl	fpround		7308650	1					
ANR	7308805	IdentifierDeclType	long long int		7308650	0					
ANR	7308806	Identifier	fpround		7308650	1					
ANR	7308807	IdentifierDeclStatement	"unsigned long hi , lo ;"	641:6:18193:18213	7308650	2	True				
ANR	7308808	IdentifierDecl	hi		7308650	0					
ANR	7308809	IdentifierDeclType	unsigned long		7308650	0					
ANR	7308810	Identifier	hi		7308650	1					
ANR	7308811	IdentifierDecl	lo		7308650	1					
ANR	7308812	IdentifierDeclType	unsigned long		7308650	0					
ANR	7308813	Identifier	lo		7308650	1					
ANR	7308814	IdentifierDeclStatement	int ok ;	642:6:18221:18227	7308650	3	True				
ANR	7308815	IdentifierDecl	ok		7308650	0					
ANR	7308816	IdentifierDeclType	int		7308650	0					
ANR	7308817	Identifier	ok		7308650	1					
ANR	7308818	CompoundStatement		43:9:1118:1127	7308650	4					
ANR	7308819	IdentifierDeclStatement	"long u1 , u2 ;"	648:9:18371:18382	7308650	0	True				
ANR	7308820	IdentifierDecl	u1		7308650	0					
ANR	7308821	IdentifierDeclType	long		7308650	0					
ANR	7308822	Identifier	u1		7308650	1					
ANR	7308823	IdentifierDecl	u2		7308650	1					
ANR	7308824	IdentifierDeclType	long		7308650	0					
ANR	7308825	Identifier	u2		7308650	1					
ANR	7308826	IdentifierDeclStatement	int n = 0 ;	649:9:18393:18402	7308650	1	True				
ANR	7308827	IdentifierDecl	n = 0		7308650	0					
ANR	7308828	IdentifierDeclType	int		7308650	0					
ANR	7308829	Identifier	n		7308650	1					
ANR	7308830	AssignmentExpression	n = 0		7308650	2		=			
ANR	7308831	Identifier	n		7308650	0					
ANR	7308832	PrimaryExpression	0		7308650	1					
ANR	7308833	IfStatement	if ( a < 0 )		7308650	2					
ANR	7308834	Condition	a < 0	650:13:18417:18421	7308650	0	True				
ANR	7308835	RelationalExpression	a < 0		7308650	0		<			
ANR	7308836	Identifier	a		7308650	0					
ANR	7308837	PrimaryExpression	0		7308650	1					
ANR	7308838	ExpressionStatement	"u1 = - a , n = 1"	650:20:18424:18438	7308650	1	True				
ANR	7308839	Expression	"u1 = - a , n = 1"		7308650	0					
ANR	7308840	AssignmentExpression	u1 = - a		7308650	0		=			
ANR	7308841	Identifier	u1		7308650	0					
ANR	7308842	UnaryOperationExpression	- a		7308650	1					
ANR	7308843	UnaryOperator	-		7308650	0					
ANR	7308844	Identifier	a		7308650	1					
ANR	7308845	AssignmentExpression	n = 1		7308650	1		=			
ANR	7308846	Identifier	n		7308650	0					
ANR	7308847	PrimaryExpression	1		7308650	1					
ANR	7308848	ElseStatement	else		7308650	0					
ANR	7308849	ExpressionStatement	u1 = a	650:41:18445:18451	7308650	0	True				
ANR	7308850	AssignmentExpression	u1 = a		7308650	0		=			
ANR	7308851	Identifier	u1		7308650	0					
ANR	7308852	Identifier	a		7308650	1					
ANR	7308853	IfStatement	if ( times < 0 )		7308650	3					
ANR	7308854	Condition	times < 0	651:13:18466:18474	7308650	0	True				
ANR	7308855	RelationalExpression	times < 0		7308650	0		<			
ANR	7308856	Identifier	times		7308650	0					
ANR	7308857	PrimaryExpression	0		7308650	1					
ANR	7308858	ExpressionStatement	"u2 = - times , n = ! n"	651:24:18477:18496	7308650	1	True				
ANR	7308859	Expression	"u2 = - times , n = ! n"		7308650	0					
ANR	7308860	AssignmentExpression	u2 = - times		7308650	0		=			
ANR	7308861	Identifier	u2		7308650	0					
ANR	7308862	UnaryOperationExpression	- times		7308650	1					
ANR	7308863	UnaryOperator	-		7308650	0					
ANR	7308864	Identifier	times		7308650	1					
ANR	7308865	AssignmentExpression	n = ! n		7308650	1		=			
ANR	7308866	Identifier	n		7308650	0					
ANR	7308867	UnaryOperationExpression	! n		7308650	1					
ANR	7308868	UnaryOperator	!		7308650	0					
ANR	7308869	Identifier	n		7308650	1					
ANR	7308870	ElseStatement	else		7308650	0					
ANR	7308871	ExpressionStatement	u2 = times	651:50:18503:18513	7308650	0	True				
ANR	7308872	AssignmentExpression	u2 = times		7308650	0		=			
ANR	7308873	Identifier	u2		7308650	0					
ANR	7308874	Identifier	times		7308650	1					
ANR	7308875	ExpressionStatement	"png_64bit_product ( u1 , u2 , & hi , & lo )"	652:9:18524:18559	7308650	4	True				
ANR	7308876	CallExpression	"png_64bit_product ( u1 , u2 , & hi , & lo )"		7308650	0					
ANR	7308877	Callee	png_64bit_product		7308650	0					
ANR	7308878	Identifier	png_64bit_product		7308650	0					
ANR	7308879	ArgumentList	u1		7308650	1					
ANR	7308880	Argument	u1		7308650	0					
ANR	7308881	Identifier	u1		7308650	0					
ANR	7308882	Argument	u2		7308650	1					
ANR	7308883	Identifier	u2		7308650	0					
ANR	7308884	Argument	& hi		7308650	2					
ANR	7308885	UnaryOperationExpression	& hi		7308650	0					
ANR	7308886	UnaryOperator	&		7308650	0					
ANR	7308887	Identifier	hi		7308650	1					
ANR	7308888	Argument	& lo		7308650	3					
ANR	7308889	UnaryOperationExpression	& lo		7308650	0					
ANR	7308890	UnaryOperator	&		7308650	0					
ANR	7308891	Identifier	lo		7308650	1					
ANR	7308892	IfStatement	if ( n )		7308650	5					
ANR	7308893	Condition	n	653:13:18574:18574	7308650	0	True				
ANR	7308894	Identifier	n		7308650	0					
ANR	7308895	CompoundStatement		48:9:1311:1311	7308650	1					
ANR	7308896	ExpressionStatement	lo = ( ( ~lo ) + 1 ) & 0xffffffff	656:12:18628:18657	7308650	0	True				
ANR	7308897	AssignmentExpression	lo = ( ( ~lo ) + 1 ) & 0xffffffff		7308650	0		=			
ANR	7308898	Identifier	lo		7308650	0					
ANR	7308899	BitAndExpression	( ( ~lo ) + 1 ) & 0xffffffff		7308650	1		&			
ANR	7308900	CastExpression	( ~lo ) + 1		7308650	0					
ANR	7308901	CastTarget	~lo		7308650	0					
ANR	7308902	UnaryOperationExpression	+ 1		7308650	1					
ANR	7308903	UnaryOperator	+		7308650	0					
ANR	7308904	PrimaryExpression	1		7308650	1					
ANR	7308905	PrimaryExpression	0xffffffff		7308650	1					
ANR	7308906	ExpressionStatement	hi = ~hi	657:12:18671:18679	7308650	1	True				
ANR	7308907	AssignmentExpression	hi = ~hi		7308650	0		=			
ANR	7308908	Identifier	hi		7308650	0					
ANR	7308909	Identifier	~hi		7308650	1					
ANR	7308910	IfStatement	if ( lo == 0 )		7308650	2					
ANR	7308911	Condition	lo == 0	658:16:18697:18703	7308650	0	True				
ANR	7308912	EqualityExpression	lo == 0		7308650	0		==			
ANR	7308913	Identifier	lo		7308650	0					
ANR	7308914	PrimaryExpression	0		7308650	1					
ANR	7308915	ExpressionStatement	++ hi	658:25:18706:18710	7308650	1	True				
ANR	7308916	UnaryExpression	++ hi		7308650	0					
ANR	7308917	IncDec	++		7308650	0					
ANR	7308918	Identifier	hi		7308650	1					
ANR	7308919	ExpressionStatement	fp = a	662:6:18738:18744	7308650	5	True				
ANR	7308920	AssignmentExpression	fp = a		7308650	0		=			
ANR	7308921	Identifier	fp		7308650	0					
ANR	7308922	Identifier	a		7308650	1					
ANR	7308923	ExpressionStatement	fp *= times	663:6:18752:18763	7308650	6	True				
ANR	7308924	AssignmentExpression	fp *= times		7308650	0		*=			
ANR	7308925	Identifier	fp		7308650	0					
ANR	7308926	Identifier	times		7308650	1					
ANR	7308927	IfStatement	if ( ( fp & 0xffffffff ) != lo || ( ( fp >> 32 ) & 0xffffffff ) != hi )		7308650	7					
ANR	7308928	Condition	( fp & 0xffffffff ) != lo || ( ( fp >> 32 ) & 0xffffffff ) != hi	664:10:18775:18832	7308650	0	True				
ANR	7308929	OrExpression	( fp & 0xffffffff ) != lo || ( ( fp >> 32 ) & 0xffffffff ) != hi		7308650	0		||			
ANR	7308930	EqualityExpression	( fp & 0xffffffff ) != lo		7308650	0		!=			
ANR	7308931	BitAndExpression	fp & 0xffffffff		7308650	0		&			
ANR	7308932	Identifier	fp		7308650	0					
ANR	7308933	PrimaryExpression	0xffffffff		7308650	1					
ANR	7308934	Identifier	lo		7308650	1					
ANR	7308935	EqualityExpression	( ( fp >> 32 ) & 0xffffffff ) != hi		7308650	1		!=			
ANR	7308936	BitAndExpression	( fp >> 32 ) & 0xffffffff		7308650	0		&			
ANR	7308937	ShiftExpression	fp >> 32		7308650	0		>>			
ANR	7308938	Identifier	fp		7308650	0					
ANR	7308939	PrimaryExpression	32		7308650	1					
ANR	7308940	PrimaryExpression	0xffffffff		7308650	1					
ANR	7308941	Identifier	hi		7308650	1					
ANR	7308942	CompoundStatement		59:6:1566:1566	7308650	1					
ANR	7308943	ExpressionStatement	"fprintf ( stderr , ""png_64bit_product %d * %d -> %lx|%.8lx not %llx\\n"" , a , times , hi , lo , fp )"	666:9:18852:18954	7308650	0	True				
ANR	7308944	CallExpression	"fprintf ( stderr , ""png_64bit_product %d * %d -> %lx|%.8lx not %llx\\n"" , a , times , hi , lo , fp )"		7308650	0					
ANR	7308945	Callee	fprintf		7308650	0					
ANR	7308946	Identifier	fprintf		7308650	0					
ANR	7308947	ArgumentList	stderr		7308650	1					
ANR	7308948	Argument	stderr		7308650	0					
ANR	7308949	Identifier	stderr		7308650	0					
ANR	7308950	Argument	"""png_64bit_product %d * %d -> %lx|%.8lx not %llx\\n"""		7308650	1					
ANR	7308951	PrimaryExpression	"""png_64bit_product %d * %d -> %lx|%.8lx not %llx\\n"""		7308650	0					
ANR	7308952	Argument	a		7308650	2					
ANR	7308953	Identifier	a		7308650	0					
ANR	7308954	Argument	times		7308650	3					
ANR	7308955	Identifier	times		7308650	0					
ANR	7308956	Argument	hi		7308650	4					
ANR	7308957	Identifier	hi		7308650	0					
ANR	7308958	Argument	lo		7308650	5					
ANR	7308959	Identifier	lo		7308650	0					
ANR	7308960	Argument	fp		7308650	6					
ANR	7308961	Identifier	fp		7308650	0					
ANR	7308962	ExpressionStatement	++ error64	668:9:18965:18974	7308650	1	True				
ANR	7308963	UnaryExpression	++ error64		7308650	0					
ANR	7308964	IncDec	++		7308650	0					
ANR	7308965	Identifier	error64		7308650	1					
ANR	7308966	IfStatement	if ( div != 0 )		7308650	8					
ANR	7308967	Condition	div != 0	671:10:18995:19002	7308650	0	True				
ANR	7308968	EqualityExpression	div != 0		7308650	0		!=			
ANR	7308969	Identifier	div		7308650	0					
ANR	7308970	PrimaryExpression	0		7308650	1					
ANR	7308971	CompoundStatement		66:6:1736:1736	7308650	1					
ANR	7308972	IfStatement	if ( ( fp < 0 ) != ( div < 0 ) )		7308650	0					
ANR	7308973	Condition	( fp < 0 ) != ( div < 0 )	674:13:19074:19094	7308650	0	True				
ANR	7308974	EqualityExpression	( fp < 0 ) != ( div < 0 )		7308650	0		!=			
ANR	7308975	RelationalExpression	fp < 0		7308650	0		<			
ANR	7308976	Identifier	fp		7308650	0					
ANR	7308977	PrimaryExpression	0		7308650	1					
ANR	7308978	RelationalExpression	div < 0		7308650	1		<			
ANR	7308979	Identifier	div		7308650	0					
ANR	7308980	PrimaryExpression	0		7308650	1					
ANR	7308981	ExpressionStatement	fp -= div / 2	675:11:19108:19119	7308650	1	True				
ANR	7308982	AssignmentExpression	fp -= div / 2		7308650	0		-=			
ANR	7308983	Identifier	fp		7308650	0					
ANR	7308984	MultiplicativeExpression	div / 2		7308650	1		/			
ANR	7308985	Identifier	div		7308650	0					
ANR	7308986	PrimaryExpression	2		7308650	1					
ANR	7308987	ElseStatement	else		7308650	0					
ANR	7308988	ExpressionStatement	fp += div / 2	677:11:19146:19157	7308650	0	True				
ANR	7308989	AssignmentExpression	fp += div / 2		7308650	0		+=			
ANR	7308990	Identifier	fp		7308650	0					
ANR	7308991	MultiplicativeExpression	div / 2		7308650	1		/			
ANR	7308992	Identifier	div		7308650	0					
ANR	7308993	PrimaryExpression	2		7308650	1					
ANR	7308994	ExpressionStatement	fp /= div	679:9:19169:19178	7308650	1	True				
ANR	7308995	AssignmentExpression	fp /= div		7308650	0		/=			
ANR	7308996	Identifier	fp		7308650	0					
ANR	7308997	Identifier	div		7308650	1					
ANR	7308998	ExpressionStatement	fpround = fp	680:9:19189:19201	7308650	2	True				
ANR	7308999	AssignmentExpression	fpround = fp		7308650	0		=			
ANR	7309000	Identifier	fpround		7308650	0					
ANR	7309001	Identifier	fp		7308650	1					
ANR	7309002	ExpressionStatement	ok = fpround <= PNG_UINT_31_MAX && fpround >= - 1 - ( long long int ) PNG_UINT_31_MAX	682:9:19255:19348	7308650	3	True				
ANR	7309003	AssignmentExpression	ok = fpround <= PNG_UINT_31_MAX && fpround >= - 1 - ( long long int ) PNG_UINT_31_MAX		7308650	0		=			
ANR	7309004	Identifier	ok		7308650	0					
ANR	7309005	AndExpression	fpround <= PNG_UINT_31_MAX && fpround >= - 1 - ( long long int ) PNG_UINT_31_MAX		7308650	1		&&			
ANR	7309006	RelationalExpression	fpround <= PNG_UINT_31_MAX		7308650	0		<=			
ANR	7309007	Identifier	fpround		7308650	0					
ANR	7309008	Identifier	PNG_UINT_31_MAX		7308650	1					
ANR	7309009	RelationalExpression	fpround >= - 1 - ( long long int ) PNG_UINT_31_MAX		7308650	1		>=			
ANR	7309010	Identifier	fpround		7308650	0					
ANR	7309011	AdditiveExpression	- 1 - ( long long int ) PNG_UINT_31_MAX		7308650	1		-			
ANR	7309012	UnaryOperationExpression	- 1		7308650	0					
ANR	7309013	UnaryOperator	-		7308650	0					
ANR	7309014	PrimaryExpression	1		7308650	1					
ANR	7309015	CastExpression	( long long int ) PNG_UINT_31_MAX		7308650	1					
ANR	7309016	CastTarget	long long int		7308650	0					
ANR	7309017	Identifier	PNG_UINT_31_MAX		7308650	1					
ANR	7309018	IfStatement	if ( ! ok )		7308650	4					
ANR	7309019	Condition	! ok	684:13:19363:19365	7308650	0	True				
ANR	7309020	UnaryOperationExpression	! ok		7308650	0					
ANR	7309021	UnaryOperator	!		7308650	0					
ANR	7309022	Identifier	ok		7308650	1					
ANR	7309023	ExpressionStatement	++ overflow	684:18:19368:19378	7308650	1	True				
ANR	7309024	UnaryExpression	++ overflow		7308650	0					
ANR	7309025	IncDec	++		7308650	0					
ANR	7309026	Identifier	overflow		7308650	1					
ANR	7309027	ElseStatement	else		7308650	0					
ANR	7309028	ExpressionStatement	"ok = 0 , ++ overflow , fpround = fp"	687:8:19407:19453	7308650	0	True				
ANR	7309029	Expression	"ok = 0 , ++ overflow , fpround = fp"		7308650	0					
ANR	7309030	AssignmentExpression	ok = 0		7308650	0		=			
ANR	7309031	Identifier	ok		7308650	0					
ANR	7309032	PrimaryExpression	0		7308650	1					
ANR	7309033	Expression	"++ overflow , fpround = fp"		7308650	1					
ANR	7309034	UnaryExpression	++ overflow		7308650	0					
ANR	7309035	IncDec	++		7308650	0					
ANR	7309036	Identifier	overflow		7308650	1					
ANR	7309037	AssignmentExpression	fpround = fp		7308650	1		=			
ANR	7309038	Identifier	fpround		7308650	0					
ANR	7309039	Identifier	fp		7308650	1					
ANR	7309040	IfStatement	if ( verbose )		7308650	9					
ANR	7309041	Condition	verbose	689:10:19466:19472	7308650	0	True				
ANR	7309042	Identifier	verbose		7308650	0					
ANR	7309043	ExpressionStatement	"fprintf ( stderr , ""TEST %d * %d / %d -> %lld (%s)\\n"" , a , times , div , fp , ok ? ""ok"" : ""overflow"" )"	690:9:19484:19590	7308650	1	True				
ANR	7309044	CallExpression	"fprintf ( stderr , ""TEST %d * %d / %d -> %lld (%s)\\n"" , a , times , div , fp , ok ? ""ok"" : ""overflow"" )"		7308650	0					
ANR	7309045	Callee	fprintf		7308650	0					
ANR	7309046	Identifier	fprintf		7308650	0					
ANR	7309047	ArgumentList	stderr		7308650	1					
ANR	7309048	Argument	stderr		7308650	0					
ANR	7309049	Identifier	stderr		7308650	0					
ANR	7309050	Argument	"""TEST %d * %d / %d -> %lld (%s)\\n"""		7308650	1					
ANR	7309051	PrimaryExpression	"""TEST %d * %d / %d -> %lld (%s)\\n"""		7308650	0					
ANR	7309052	Argument	a		7308650	2					
ANR	7309053	Identifier	a		7308650	0					
ANR	7309054	Argument	times		7308650	3					
ANR	7309055	Identifier	times		7308650	0					
ANR	7309056	Argument	div		7308650	4					
ANR	7309057	Identifier	div		7308650	0					
ANR	7309058	Argument	fp		7308650	5					
ANR	7309059	Identifier	fp		7308650	0					
ANR	7309060	Argument	"ok ? ""ok"" : ""overflow"""		7308650	6					
ANR	7309061	ConditionalExpression	"ok ? ""ok"" : ""overflow"""		7308650	0					
ANR	7309062	Condition	ok		7308650	0					
ANR	7309063	Identifier	ok		7308650	0					
ANR	7309064	PrimaryExpression	"""ok"""		7308650	1					
ANR	7309065	PrimaryExpression	"""overflow"""		7308650	2					
ANR	7309066	ExpressionStatement	++ tested	693:6:19599:19607	7308650	10	True				
ANR	7309067	UnaryExpression	++ tested		7308650	0					
ANR	7309068	IncDec	++		7308650	0					
ANR	7309069	Identifier	tested		7308650	1					
ANR	7309070	IfStatement	"if ( png_muldiv ( & result , a , times , div ) != ok )"		7308650	11					
ANR	7309071	Condition	"png_muldiv ( & result , a , times , div ) != ok"	694:10:19619:19658	7308650	0	True				
ANR	7309072	EqualityExpression	"png_muldiv ( & result , a , times , div ) != ok"		7308650	0		!=			
ANR	7309073	CallExpression	"png_muldiv ( & result , a , times , div )"		7308650	0					
ANR	7309074	Callee	png_muldiv		7308650	0					
ANR	7309075	Identifier	png_muldiv		7308650	0					
ANR	7309076	ArgumentList	& result		7308650	1					
ANR	7309077	Argument	& result		7308650	0					
ANR	7309078	UnaryOperationExpression	& result		7308650	0					
ANR	7309079	UnaryOperator	&		7308650	0					
ANR	7309080	Identifier	result		7308650	1					
ANR	7309081	Argument	a		7308650	1					
ANR	7309082	Identifier	a		7308650	0					
ANR	7309083	Argument	times		7308650	2					
ANR	7309084	Identifier	times		7308650	0					
ANR	7309085	Argument	div		7308650	3					
ANR	7309086	Identifier	div		7308650	0					
ANR	7309087	Identifier	ok		7308650	1					
ANR	7309088	CompoundStatement		89:6:2392:2392	7308650	1					
ANR	7309089	ExpressionStatement	++ error	696:9:19678:19685	7308650	0	True				
ANR	7309090	UnaryExpression	++ error		7308650	0					
ANR	7309091	IncDec	++		7308650	0					
ANR	7309092	Identifier	error		7308650	1					
ANR	7309093	IfStatement	if ( ok )		7308650	1					
ANR	7309094	Condition	ok	697:13:19700:19701	7308650	0	True				
ANR	7309095	Identifier	ok		7308650	0					
ANR	7309096	ExpressionStatement	"fprintf ( stderr , ""%d * %d / %d -> overflow (expected %lld)\\n"" , a , times , div , fp )"	698:13:19717:19813	7308650	1	True				
ANR	7309097	CallExpression	"fprintf ( stderr , ""%d * %d / %d -> overflow (expected %lld)\\n"" , a , times , div , fp )"		7308650	0					
ANR	7309098	Callee	fprintf		7308650	0					
ANR	7309099	Identifier	fprintf		7308650	0					
ANR	7309100	ArgumentList	stderr		7308650	1					
ANR	7309101	Argument	stderr		7308650	0					
ANR	7309102	Identifier	stderr		7308650	0					
ANR	7309103	Argument	"""%d * %d / %d -> overflow (expected %lld)\\n"""		7308650	1					
ANR	7309104	PrimaryExpression	"""%d * %d / %d -> overflow (expected %lld)\\n"""		7308650	0					
ANR	7309105	Argument	a		7308650	2					
ANR	7309106	Identifier	a		7308650	0					
ANR	7309107	Argument	times		7308650	3					
ANR	7309108	Identifier	times		7308650	0					
ANR	7309109	Argument	div		7308650	4					
ANR	7309110	Identifier	div		7308650	0					
ANR	7309111	Argument	fp		7308650	5					
ANR	7309112	Identifier	fp		7308650	0					
ANR	7309113	ElseStatement	else		7308650	0					
ANR	7309114	ExpressionStatement	"fprintf ( stderr , ""%d * %d / %d -> %d (expected overflow %lld)\\n"" , a , times , div , result , fp )"	701:13:19842:19949	7308650	0	True				
ANR	7309115	CallExpression	"fprintf ( stderr , ""%d * %d / %d -> %d (expected overflow %lld)\\n"" , a , times , div , result , fp )"		7308650	0					
ANR	7309116	Callee	fprintf		7308650	0					
ANR	7309117	Identifier	fprintf		7308650	0					
ANR	7309118	ArgumentList	stderr		7308650	1					
ANR	7309119	Argument	stderr		7308650	0					
ANR	7309120	Identifier	stderr		7308650	0					
ANR	7309121	Argument	"""%d * %d / %d -> %d (expected overflow %lld)\\n"""		7308650	1					
ANR	7309122	PrimaryExpression	"""%d * %d / %d -> %d (expected overflow %lld)\\n"""		7308650	0					
ANR	7309123	Argument	a		7308650	2					
ANR	7309124	Identifier	a		7308650	0					
ANR	7309125	Argument	times		7308650	3					
ANR	7309126	Identifier	times		7308650	0					
ANR	7309127	Argument	div		7308650	4					
ANR	7309128	Identifier	div		7308650	0					
ANR	7309129	Argument	result		7308650	5					
ANR	7309130	Identifier	result		7308650	0					
ANR	7309131	Argument	fp		7308650	6					
ANR	7309132	Identifier	fp		7308650	0					
ANR	7309133	ElseStatement	else		7308650	0					
ANR	7309134	IfStatement	if ( ok && result != fpround )		7308650	0					
ANR	7309135	Condition	ok && result != fpround	704:15:19974:19996	7308650	0	True				
ANR	7309136	AndExpression	ok && result != fpround		7308650	0		&&			
ANR	7309137	Identifier	ok		7308650	0					
ANR	7309138	EqualityExpression	result != fpround		7308650	1		!=			
ANR	7309139	Identifier	result		7308650	0					
ANR	7309140	Identifier	fpround		7308650	1					
ANR	7309141	CompoundStatement		99:6:2730:2730	7308650	1					
ANR	7309142	ExpressionStatement	++ error	706:9:20016:20023	7308650	0	True				
ANR	7309143	UnaryExpression	++ error		7308650	0					
ANR	7309144	IncDec	++		7308650	0					
ANR	7309145	Identifier	error		7308650	1					
ANR	7309146	ExpressionStatement	"fprintf ( stderr , ""%d * %d / %d -> %d not %lld\\n"" , a , times , div , result , fp )"	707:9:20034:20121	7308650	1	True				
ANR	7309147	CallExpression	"fprintf ( stderr , ""%d * %d / %d -> %d not %lld\\n"" , a , times , div , result , fp )"		7308650	0					
ANR	7309148	Callee	fprintf		7308650	0					
ANR	7309149	Identifier	fprintf		7308650	0					
ANR	7309150	ArgumentList	stderr		7308650	1					
ANR	7309151	Argument	stderr		7308650	0					
ANR	7309152	Identifier	stderr		7308650	0					
ANR	7309153	Argument	"""%d * %d / %d -> %d not %lld\\n"""		7308650	1					
ANR	7309154	PrimaryExpression	"""%d * %d / %d -> %d not %lld\\n"""		7308650	0					
ANR	7309155	Argument	a		7308650	2					
ANR	7309156	Identifier	a		7308650	0					
ANR	7309157	Argument	times		7308650	3					
ANR	7309158	Identifier	times		7308650	0					
ANR	7309159	Argument	div		7308650	4					
ANR	7309160	Identifier	div		7308650	0					
ANR	7309161	Argument	result		7308650	5					
ANR	7309162	Identifier	result		7308650	0					
ANR	7309163	Argument	fp		7308650	6					
ANR	7309164	Identifier	fp		7308650	0					
ANR	7309165	ElseStatement	else		7308650	0					
ANR	7309166	ExpressionStatement	++ passed	711:9:20151:20159	7308650	0	True				
ANR	7309167	UnaryExpression	++ passed		7308650	0					
ANR	7309168	IncDec	++		7308650	0					
ANR	7309169	Identifier	passed		7308650	1					
ANR	7309170	ExpressionStatement	a += times	717:6:20298:20308	7308650	12	True				
ANR	7309171	AssignmentExpression	a += times		7308650	0		+=			
ANR	7309172	Identifier	a		7308650	0					
ANR	7309173	Identifier	times		7308650	1					
ANR	7309174	ExpressionStatement	times += div	718:6:20316:20328	7308650	13	True				
ANR	7309175	AssignmentExpression	times += div		7308650	0		+=			
ANR	7309176	Identifier	times		7308650	0					
ANR	7309177	Identifier	div		7308650	1					
ANR	7309178	ExpressionStatement	div = randbuffer	719:6:20336:20352	7308650	14	True				
ANR	7309179	AssignmentExpression	div = randbuffer		7308650	0		=			
ANR	7309180	Identifier	div		7308650	0					
ANR	7309181	Identifier	randbuffer		7308650	1					
ANR	7309182	ExpressionStatement	randbuffer = ( randbuffer << randbits ) ^ rand ( )	720:6:20360:20406	7308650	15	True				
ANR	7309183	AssignmentExpression	randbuffer = ( randbuffer << randbits ) ^ rand ( )		7308650	0		=			
ANR	7309184	Identifier	randbuffer		7308650	0					
ANR	7309185	ExclusiveOrExpression	( randbuffer << randbits ) ^ rand ( )		7308650	1		^			
ANR	7309186	ShiftExpression	randbuffer << randbits		7308650	0		<<			
ANR	7309187	Identifier	randbuffer		7308650	0					
ANR	7309188	Identifier	randbits		7308650	1					
ANR	7309189	CallExpression	rand ( )		7308650	1					
ANR	7309190	Callee	rand		7308650	0					
ANR	7309191	Identifier	rand		7308650	0					
ANR	7309192	ArgumentList			7308650	1					
ANR	7309193	Condition	-- count > 0	722:10:20423:20433	7308650	1	True				
ANR	7309194	RelationalExpression	-- count > 0		7308650	0		>			
ANR	7309195	UnaryExpression	-- count		7308650	0					
ANR	7309196	IncDec	--		7308650	0					
ANR	7309197	Identifier	count		7308650	1					
ANR	7309198	PrimaryExpression	0		7308650	1					
ANR	7309199	Statement	printf	724:3:20441:20446	7308650	17	True				
ANR	7309200	Statement	(	724:9:20447:20447	7308650	18	True				
ANR	7309201	Statement	"""%d tests including %d overflows, %d passed, %d failed (%d 64-bit """	724:10:20448:20514	7308650	19	True				
ANR	7309202	Statement	"""errors)\\n"""	725:6:20522:20532	7308650	20	True				
ANR	7309203	Statement	","	725:17:20533:20533	7308650	21	True				
ANR	7309204	Statement	tested	725:19:20535:20540	7308650	22	True				
ANR	7309205	Statement	","	725:25:20541:20541	7308650	23	True				
ANR	7309206	Statement	overflow	725:27:20543:20550	7308650	24	True				
ANR	7309207	Statement	","	725:35:20551:20551	7308650	25	True				
ANR	7309208	Statement	passed	725:37:20553:20558	7308650	26	True				
ANR	7309209	Statement	","	725:43:20559:20559	7308650	27	True				
ANR	7309210	Statement	error	725:45:20561:20565	7308650	28	True				
ANR	7309211	Statement	","	725:50:20566:20566	7308650	29	True				
ANR	7309212	Statement	error64	725:52:20568:20574	7308650	30	True				
ANR	7309213	Statement	)	725:59:20575:20575	7308650	31	True				
ANR	7309214	ExpressionStatement		725:60:20576:20576	7308650	32	True				
ANR	7309215	ReturnStatement	return 0 ;	726:3:20581:20589	7308650	33	True				
ANR	7309216	PrimaryExpression	0		7308650	0					
ANR	7309217	ReturnType	int		7308650	1					
ANR	7309218	Identifier	validation_muldiv		7308650	2					
ANR	7309219	ParameterList	"int count , int argc , char * * argv"		7308650	3					
ANR	7309220	Parameter	int count	606:22:17240:17248	7308650	0	True				
ANR	7309221	ParameterType	int		7308650	0					
ANR	7309222	Identifier	count		7308650	1					
ANR	7309223	Parameter	int argc	606:33:17251:17258	7308650	1	True				
ANR	7309224	ParameterType	int		7308650	0					
ANR	7309225	Identifier	argc		7308650	1					
ANR	7309226	Parameter	char * * argv	606:43:17261:17271	7308650	2	True				
ANR	7309227	ParameterType	char * *		7308650	0					
ANR	7309228	Identifier	argv		7308650	1					
ANR	7309229	CFGEntryNode	ENTRY		7308650		True				
ANR	7309230	CFGExitNode	EXIT		7308650		True				
ANR	7309231	Symbol	hi		7308650						
ANR	7309232	Symbol	lo		7308650						
ANR	7309233	Symbol	tested		7308650						
ANR	7309234	Symbol	* argv		7308650						
ANR	7309235	Symbol	fp		7308650						
ANR	7309236	Symbol	randbuffer		7308650						
ANR	7309237	Symbol	error		7308650						
ANR	7309238	Symbol	argv		7308650						
ANR	7309239	Symbol	randbits		7308650						
ANR	7309240	Symbol	div		7308650						
ANR	7309241	Symbol	rand		7308650						
ANR	7309242	Symbol	result		7308650						
ANR	7309243	Symbol	fpround		7308650						
ANR	7309244	Symbol	times		7308650						
ANR	7309245	Symbol	overflow		7308650						
ANR	7309246	Symbol	png_muldiv		7308650						
ANR	7309247	Symbol	& result		7308650						
ANR	7309248	Symbol	passed		7308650						
ANR	7309249	Symbol	ok		7308650						
ANR	7309250	Symbol	u1		7308650						
ANR	7309251	Symbol	u2		7308650						
ANR	7309252	Symbol	error64		7308650						
ANR	7309253	Symbol	argc		7308650						
ANR	7309254	Symbol	a		7308650						
ANR	7309255	Symbol	count		7308650						
ANR	7309256	Symbol	PNG_UINT_31_MAX		7308650						
ANR	7309257	Symbol	& hi		7308650						
ANR	7309258	Symbol	stderr		7308650						
ANR	7309259	Symbol	& lo		7308650						
ANR	7309260	Symbol	n		7308650						
ANR	7309261	Symbol	verbose		7308650						
ANR	7309262	Symbol	RAND_MAX		7308650						
ANR	7309263	Symbol	* ++ argv		7308650						
ANR	7309264	Symbol	~hi		7308650						
ANR	7309265	Function	png_log8bit	737:0:20920:21057							
ANR	7309266	FunctionDef	png_log8bit (unsigned x)		7309265	0					
ANR	7309267	CompoundStatement		738:0:20963:21057	7309265	0					
ANR	7309268	IfStatement	if ( x > 0 )		7309265	0					
ANR	7309269	Condition	x > 0	739:7:20972:20976	7309265	0	True				
ANR	7309270	RelationalExpression	x > 0		7309265	0		>			
ANR	7309271	Identifier	x		7309265	0					
ANR	7309272	PrimaryExpression	0		7309265	1					
ANR	7309273	ReturnStatement	return ( png_uint_32 ) floor ( .5 - log ( x / 255. ) * L2INV ) ;	740:6:20985:21032	7309265	1	True				
ANR	7309274	CastExpression	( png_uint_32 ) floor ( .5 - log ( x / 255. ) * L2INV )		7309265	0					
ANR	7309275	CastTarget	png_uint_32		7309265	0					
ANR	7309276	CallExpression	floor ( .5 - log ( x / 255. ) * L2INV )		7309265	1					
ANR	7309277	Callee	floor		7309265	0					
ANR	7309278	Identifier	floor		7309265	0					
ANR	7309279	ArgumentList	.5 - log ( x / 255. ) * L2INV		7309265	1					
ANR	7309280	Argument	.5 - log ( x / 255. ) * L2INV		7309265	0					
ANR	7309281	AdditiveExpression	.5 - log ( x / 255. ) * L2INV		7309265	0		-			
ANR	7309282	PrimaryExpression	.5		7309265	0					
ANR	7309283	MultiplicativeExpression	log ( x / 255. ) * L2INV		7309265	1		*			
ANR	7309284	CallExpression	log ( x / 255. )		7309265	0					
ANR	7309285	Callee	log		7309265	0					
ANR	7309286	Identifier	log		7309265	0					
ANR	7309287	ArgumentList	x / 255.		7309265	1					
ANR	7309288	Argument	x / 255.		7309265	0					
ANR	7309289	MultiplicativeExpression	x / 255.		7309265	0		/			
ANR	7309290	Identifier	x		7309265	0					
ANR	7309291	PrimaryExpression	255.		7309265	1					
ANR	7309292	Identifier	L2INV		7309265	1					
ANR	7309293	ReturnStatement	return 0xffffffff ;	742:3:21038:21055	7309265	1	True				
ANR	7309294	PrimaryExpression	0xffffffff		7309265	0					
ANR	7309295	ReturnType	static png_uint_32		7309265	1					
ANR	7309296	Identifier	png_log8bit		7309265	2					
ANR	7309297	ParameterList	unsigned x		7309265	3					
ANR	7309298	Parameter	unsigned x	737:31:20951:20960	7309265	0	True				
ANR	7309299	ParameterType	unsigned		7309265	0					
ANR	7309300	Identifier	x		7309265	1					
ANR	7309301	CFGEntryNode	ENTRY		7309265		True				
ANR	7309302	CFGExitNode	EXIT		7309265		True				
ANR	7309303	Symbol	log		7309265						
ANR	7309304	Symbol	x		7309265						
ANR	7309305	Symbol	floor		7309265						
ANR	7309306	Symbol	L2INV		7309265						
ANR	7309307	Function	png_log16bit	745:0:21060:21203							
ANR	7309308	FunctionDef	png_log16bit (png_uint_32 x)		7309307	0					
ANR	7309309	CompoundStatement		746:0:21107:21203	7309307	0					
ANR	7309310	IfStatement	if ( x > 0 )		7309307	0					
ANR	7309311	Condition	x > 0	747:7:21116:21120	7309307	0	True				
ANR	7309312	RelationalExpression	x > 0		7309307	0		>			
ANR	7309313	Identifier	x		7309307	0					
ANR	7309314	PrimaryExpression	0		7309307	1					
ANR	7309315	ReturnStatement	return ( png_uint_32 ) floor ( .5 - log ( x / 65535. ) * L2INV ) ;	748:6:21129:21178	7309307	1	True				
ANR	7309316	CastExpression	( png_uint_32 ) floor ( .5 - log ( x / 65535. ) * L2INV )		7309307	0					
ANR	7309317	CastTarget	png_uint_32		7309307	0					
ANR	7309318	CallExpression	floor ( .5 - log ( x / 65535. ) * L2INV )		7309307	1					
ANR	7309319	Callee	floor		7309307	0					
ANR	7309320	Identifier	floor		7309307	0					
ANR	7309321	ArgumentList	.5 - log ( x / 65535. ) * L2INV		7309307	1					
ANR	7309322	Argument	.5 - log ( x / 65535. ) * L2INV		7309307	0					
ANR	7309323	AdditiveExpression	.5 - log ( x / 65535. ) * L2INV		7309307	0		-			
ANR	7309324	PrimaryExpression	.5		7309307	0					
ANR	7309325	MultiplicativeExpression	log ( x / 65535. ) * L2INV		7309307	1		*			
ANR	7309326	CallExpression	log ( x / 65535. )		7309307	0					
ANR	7309327	Callee	log		7309307	0					
ANR	7309328	Identifier	log		7309307	0					
ANR	7309329	ArgumentList	x / 65535.		7309307	1					
ANR	7309330	Argument	x / 65535.		7309307	0					
ANR	7309331	MultiplicativeExpression	x / 65535.		7309307	0		/			
ANR	7309332	Identifier	x		7309307	0					
ANR	7309333	PrimaryExpression	65535.		7309307	1					
ANR	7309334	Identifier	L2INV		7309307	1					
ANR	7309335	ReturnStatement	return 0xffffffff ;	750:3:21184:21201	7309307	1	True				
ANR	7309336	PrimaryExpression	0xffffffff		7309307	0					
ANR	7309337	ReturnType	static png_uint_32		7309307	1					
ANR	7309338	Identifier	png_log16bit		7309307	2					
ANR	7309339	ParameterList	png_uint_32 x		7309307	3					
ANR	7309340	Parameter	png_uint_32 x	745:32:21092:21104	7309307	0	True				
ANR	7309341	ParameterType	png_uint_32		7309307	0					
ANR	7309342	Identifier	x		7309307	1					
ANR	7309343	CFGEntryNode	ENTRY		7309307		True				
ANR	7309344	CFGExitNode	EXIT		7309307		True				
ANR	7309345	Symbol	log		7309307						
ANR	7309346	Symbol	x		7309307						
ANR	7309347	Symbol	floor		7309307						
ANR	7309348	Symbol	L2INV		7309307						
ANR	7309349	Function	png_exp	753:0:21206:21314							
ANR	7309350	FunctionDef	png_exp (png_uint_32 x)		7309349	0					
ANR	7309351	CompoundStatement		754:0:21248:21314	7309349	0					
ANR	7309352	ReturnStatement	return ( png_uint_32 ) floor ( .5 + exp ( x * - LN2 ) * 0xffffffffU ) ;	755:3:21253:21312	7309349	0	True				
ANR	7309353	CastExpression	( png_uint_32 ) floor ( .5 + exp ( x * - LN2 ) * 0xffffffffU )		7309349	0					
ANR	7309354	CastTarget	png_uint_32		7309349	0					
ANR	7309355	CallExpression	floor ( .5 + exp ( x * - LN2 ) * 0xffffffffU )		7309349	1					
ANR	7309356	Callee	floor		7309349	0					
ANR	7309357	Identifier	floor		7309349	0					
ANR	7309358	ArgumentList	.5 + exp ( x * - LN2 ) * 0xffffffffU		7309349	1					
ANR	7309359	Argument	.5 + exp ( x * - LN2 ) * 0xffffffffU		7309349	0					
ANR	7309360	AdditiveExpression	.5 + exp ( x * - LN2 ) * 0xffffffffU		7309349	0		+			
ANR	7309361	PrimaryExpression	.5		7309349	0					
ANR	7309362	MultiplicativeExpression	exp ( x * - LN2 ) * 0xffffffffU		7309349	1		*			
ANR	7309363	CallExpression	exp ( x * - LN2 )		7309349	0					
ANR	7309364	Callee	exp		7309349	0					
ANR	7309365	Identifier	exp		7309349	0					
ANR	7309366	ArgumentList	x * - LN2		7309349	1					
ANR	7309367	Argument	x * - LN2		7309349	0					
ANR	7309368	MultiplicativeExpression	x * - LN2		7309349	0		*			
ANR	7309369	Identifier	x		7309349	0					
ANR	7309370	UnaryOperationExpression	- LN2		7309349	1					
ANR	7309371	UnaryOperator	-		7309349	0					
ANR	7309372	Identifier	LN2		7309349	1					
ANR	7309373	PrimaryExpression	0xffffffffU		7309349	1					
ANR	7309374	ReturnType	static png_uint_32		7309349	1					
ANR	7309375	Identifier	png_exp		7309349	2					
ANR	7309376	ParameterList	png_uint_32 x		7309349	3					
ANR	7309377	Parameter	png_uint_32 x	753:27:21233:21245	7309349	0	True				
ANR	7309378	ParameterType	png_uint_32		7309349	0					
ANR	7309379	Identifier	x		7309349	1					
ANR	7309380	CFGEntryNode	ENTRY		7309349		True				
ANR	7309381	CFGExitNode	EXIT		7309349		True				
ANR	7309382	Symbol	LN2		7309349						
ANR	7309383	Symbol	x		7309349						
ANR	7309384	Symbol	floor		7309349						
ANR	7309385	Symbol	exp		7309349						
ANR	7309386	Function	png_exp8bit	758:0:21317:21419							
ANR	7309387	FunctionDef	png_exp8bit (png_uint_32 log)		7309386	0					
ANR	7309388	CompoundStatement		759:0:21362:21419	7309386	0					
ANR	7309389	ReturnStatement	return ( png_byte ) floor ( .5 + exp ( log * - LN2 ) * 255 ) ;	760:3:21367:21417	7309386	0	True				
ANR	7309390	CastExpression	( png_byte ) floor ( .5 + exp ( log * - LN2 ) * 255 )		7309386	0					
ANR	7309391	CastTarget	png_byte		7309386	0					
ANR	7309392	CallExpression	floor ( .5 + exp ( log * - LN2 ) * 255 )		7309386	1					
ANR	7309393	Callee	floor		7309386	0					
ANR	7309394	Identifier	floor		7309386	0					
ANR	7309395	ArgumentList	.5 + exp ( log * - LN2 ) * 255		7309386	1					
ANR	7309396	Argument	.5 + exp ( log * - LN2 ) * 255		7309386	0					
ANR	7309397	AdditiveExpression	.5 + exp ( log * - LN2 ) * 255		7309386	0		+			
ANR	7309398	PrimaryExpression	.5		7309386	0					
ANR	7309399	MultiplicativeExpression	exp ( log * - LN2 ) * 255		7309386	1		*			
ANR	7309400	CallExpression	exp ( log * - LN2 )		7309386	0					
ANR	7309401	Callee	exp		7309386	0					
ANR	7309402	Identifier	exp		7309386	0					
ANR	7309403	ArgumentList	log * - LN2		7309386	1					
ANR	7309404	Argument	log * - LN2		7309386	0					
ANR	7309405	MultiplicativeExpression	log * - LN2		7309386	0		*			
ANR	7309406	Identifier	log		7309386	0					
ANR	7309407	UnaryOperationExpression	- LN2		7309386	1					
ANR	7309408	UnaryOperator	-		7309386	0					
ANR	7309409	Identifier	LN2		7309386	1					
ANR	7309410	PrimaryExpression	255		7309386	1					
ANR	7309411	ReturnType	static png_byte		7309386	1					
ANR	7309412	Identifier	png_exp8bit		7309386	2					
ANR	7309413	ParameterList	png_uint_32 log		7309386	3					
ANR	7309414	Parameter	png_uint_32 log	758:28:21345:21359	7309386	0	True				
ANR	7309415	ParameterType	png_uint_32		7309386	0					
ANR	7309416	Identifier	log		7309386	1					
ANR	7309417	CFGEntryNode	ENTRY		7309386		True				
ANR	7309418	CFGExitNode	EXIT		7309386		True				
ANR	7309419	Symbol	LN2		7309386						
ANR	7309420	Symbol	log		7309386						
ANR	7309421	Symbol	floor		7309386						
ANR	7309422	Symbol	exp		7309386						
ANR	7309423	Function	png_exp16bit	763:0:21422:21533							
ANR	7309424	FunctionDef	png_exp16bit (png_uint_32 log)		7309423	0					
ANR	7309425	CompoundStatement		764:0:21471:21533	7309423	0					
ANR	7309426	ReturnStatement	return ( png_uint_16 ) floor ( .5 + exp ( log * - LN2 ) * 65535 ) ;	765:3:21476:21531	7309423	0	True				
ANR	7309427	CastExpression	( png_uint_16 ) floor ( .5 + exp ( log * - LN2 ) * 65535 )		7309423	0					
ANR	7309428	CastTarget	png_uint_16		7309423	0					
ANR	7309429	CallExpression	floor ( .5 + exp ( log * - LN2 ) * 65535 )		7309423	1					
ANR	7309430	Callee	floor		7309423	0					
ANR	7309431	Identifier	floor		7309423	0					
ANR	7309432	ArgumentList	.5 + exp ( log * - LN2 ) * 65535		7309423	1					
ANR	7309433	Argument	.5 + exp ( log * - LN2 ) * 65535		7309423	0					
ANR	7309434	AdditiveExpression	.5 + exp ( log * - LN2 ) * 65535		7309423	0		+			
ANR	7309435	PrimaryExpression	.5		7309423	0					
ANR	7309436	MultiplicativeExpression	exp ( log * - LN2 ) * 65535		7309423	1		*			
ANR	7309437	CallExpression	exp ( log * - LN2 )		7309423	0					
ANR	7309438	Callee	exp		7309423	0					
ANR	7309439	Identifier	exp		7309423	0					
ANR	7309440	ArgumentList	log * - LN2		7309423	1					
ANR	7309441	Argument	log * - LN2		7309423	0					
ANR	7309442	MultiplicativeExpression	log * - LN2		7309423	0		*			
ANR	7309443	Identifier	log		7309423	0					
ANR	7309444	UnaryOperationExpression	- LN2		7309423	1					
ANR	7309445	UnaryOperator	-		7309423	0					
ANR	7309446	Identifier	LN2		7309423	1					
ANR	7309447	PrimaryExpression	65535		7309423	1					
ANR	7309448	ReturnType	static png_uint_16		7309423	1					
ANR	7309449	Identifier	png_exp16bit		7309423	2					
ANR	7309450	ParameterList	png_uint_32 log		7309423	3					
ANR	7309451	Parameter	png_uint_32 log	763:32:21454:21468	7309423	0	True				
ANR	7309452	ParameterType	png_uint_32		7309423	0					
ANR	7309453	Identifier	log		7309423	1					
ANR	7309454	CFGEntryNode	ENTRY		7309423		True				
ANR	7309455	CFGExitNode	EXIT		7309423		True				
ANR	7309456	Symbol	LN2		7309423						
ANR	7309457	Symbol	log		7309423						
ANR	7309458	Symbol	exp		7309423						
ANR	7309459	Symbol	floor		7309423						
ANR	7309460	Function	validation_gamma	769:0:21569:26476							
ANR	7309461	FunctionDef	"validation_gamma (int argc , char * * argv)"		7309460	0					
ANR	7309462	CompoundStatement		770:0:21613:26476	7309460	0					
ANR	7309463	IdentifierDeclStatement	"double gamma [ 9 ] = { 2.2 , 1.8 , 1.52 , 1.45 , 1. , 1 / 1.45 , 1 / 1.52 , 1 / 1.8 , 1 / 2.2 } ;"	771:3:21618:21694	7309460	0	True				
ANR	7309464	IdentifierDecl	"gamma [ 9 ] = { 2.2 , 1.8 , 1.52 , 1.45 , 1. , 1 / 1.45 , 1 / 1.52 , 1 / 1.8 , 1 / 2.2 }"		7309460	0					
ANR	7309465	IdentifierDeclType	double [ 9 ]		7309460	0					
ANR	7309466	Identifier	gamma		7309460	1					
ANR	7309467	PrimaryExpression	9		7309460	2					
ANR	7309468	AssignmentExpression	"gamma [ 9 ] = { 2.2 , 1.8 , 1.52 , 1.45 , 1. , 1 / 1.45 , 1 / 1.52 , 1 / 1.8 , 1 / 2.2 }"		7309460	3		=			
ANR	7309469	Identifier	gamma		7309460	0					
ANR	7309470	InitializerList	2.2		7309460	1					
ANR	7309471	PrimaryExpression	2.2		7309460	0					
ANR	7309472	PrimaryExpression	1.8		7309460	1					
ANR	7309473	PrimaryExpression	1.52		7309460	2					
ANR	7309474	PrimaryExpression	1.45		7309460	3					
ANR	7309475	PrimaryExpression	1.		7309460	4					
ANR	7309476	MultiplicativeExpression	1 / 1.45		7309460	5		/			
ANR	7309477	PrimaryExpression	1		7309460	0					
ANR	7309478	PrimaryExpression	1.45		7309460	1					
ANR	7309479	MultiplicativeExpression	1 / 1.52		7309460	6		/			
ANR	7309480	PrimaryExpression	1		7309460	0					
ANR	7309481	PrimaryExpression	1.52		7309460	1					
ANR	7309482	MultiplicativeExpression	1 / 1.8		7309460	7		/			
ANR	7309483	PrimaryExpression	1		7309460	0					
ANR	7309484	PrimaryExpression	1.8		7309460	1					
ANR	7309485	MultiplicativeExpression	1 / 2.2		7309460	8		/			
ANR	7309486	PrimaryExpression	1		7309460	0					
ANR	7309487	PrimaryExpression	2.2		7309460	1					
ANR	7309488	IdentifierDeclStatement	double maxerr ;	772:3:21699:21712	7309460	1	True				
ANR	7309489	IdentifierDecl	maxerr		7309460	0					
ANR	7309490	IdentifierDeclType	double		7309460	0					
ANR	7309491	Identifier	maxerr		7309460	1					
ANR	7309492	IdentifierDeclStatement	"int i , silent = 0 , onlygamma = 0 ;"	773:3:21717:21745	7309460	2	True				
ANR	7309493	IdentifierDecl	i		7309460	0					
ANR	7309494	IdentifierDeclType	int		7309460	0					
ANR	7309495	Identifier	i		7309460	1					
ANR	7309496	IdentifierDecl	silent = 0		7309460	1					
ANR	7309497	IdentifierDeclType	int		7309460	0					
ANR	7309498	Identifier	silent		7309460	1					
ANR	7309499	AssignmentExpression	silent = 0		7309460	2		=			
ANR	7309500	Identifier	silent		7309460	0					
ANR	7309501	PrimaryExpression	0		7309460	1					
ANR	7309502	IdentifierDecl	onlygamma = 0		7309460	2					
ANR	7309503	IdentifierDeclType	int		7309460	0					
ANR	7309504	Identifier	onlygamma		7309460	1					
ANR	7309505	AssignmentExpression	onlygamma = 0		7309460	2		=			
ANR	7309506	Identifier	onlygamma		7309460	0					
ANR	7309507	PrimaryExpression	0		7309460	1					
ANR	7309508	WhileStatement	while ( -- argc > 0 )		7309460	3					
ANR	7309509	Condition	-- argc > 0	776:10:21834:21843	7309460	0	True				
ANR	7309510	RelationalExpression	-- argc > 0		7309460	0		>			
ANR	7309511	UnaryExpression	-- argc		7309460	0					
ANR	7309512	IncDec	--		7309460	0					
ANR	7309513	Identifier	argc		7309460	1					
ANR	7309514	PrimaryExpression	0		7309460	1					
ANR	7309515	IfStatement	"if ( strcmp ( * ++ argv , ""-s"" ) == 0 )"		7309460	1					
ANR	7309516	Condition	"strcmp ( * ++ argv , ""-s"" ) == 0"	777:10:21856:21881	7309460	0	True				
ANR	7309517	EqualityExpression	"strcmp ( * ++ argv , ""-s"" ) == 0"		7309460	0		==			
ANR	7309518	CallExpression	"strcmp ( * ++ argv , ""-s"" )"		7309460	0					
ANR	7309519	Callee	strcmp		7309460	0					
ANR	7309520	Identifier	strcmp		7309460	0					
ANR	7309521	ArgumentList	* ++ argv		7309460	1					
ANR	7309522	Argument	* ++ argv		7309460	0					
ANR	7309523	UnaryOperationExpression	* ++ argv		7309460	0					
ANR	7309524	UnaryOperator	*		7309460	0					
ANR	7309525	UnaryExpression	++ argv		7309460	1					
ANR	7309526	IncDec	++		7309460	0					
ANR	7309527	Identifier	argv		7309460	1					
ANR	7309528	Argument	"""-s"""		7309460	1					
ANR	7309529	PrimaryExpression	"""-s"""		7309460	0					
ANR	7309530	PrimaryExpression	0		7309460	1					
ANR	7309531	ExpressionStatement	silent = 1	778:9:21893:21903	7309460	1	True				
ANR	7309532	AssignmentExpression	silent = 1		7309460	0		=			
ANR	7309533	Identifier	silent		7309460	0					
ANR	7309534	PrimaryExpression	1		7309460	1					
ANR	7309535	ElseStatement	else		7309460	0					
ANR	7309536	IfStatement	"if ( strcmp ( * argv , ""-g"" ) == 0 )"		7309460	0					
ANR	7309537	Condition	"strcmp ( * argv , ""-g"" ) == 0"	779:15:21920:21943	7309460	0	True				
ANR	7309538	EqualityExpression	"strcmp ( * argv , ""-g"" ) == 0"		7309460	0		==			
ANR	7309539	CallExpression	"strcmp ( * argv , ""-g"" )"		7309460	0					
ANR	7309540	Callee	strcmp		7309460	0					
ANR	7309541	Identifier	strcmp		7309460	0					
ANR	7309542	ArgumentList	* argv		7309460	1					
ANR	7309543	Argument	* argv		7309460	0					
ANR	7309544	UnaryOperationExpression	* argv		7309460	0					
ANR	7309545	UnaryOperator	*		7309460	0					
ANR	7309546	Identifier	argv		7309460	1					
ANR	7309547	Argument	"""-g"""		7309460	1					
ANR	7309548	PrimaryExpression	"""-g"""		7309460	0					
ANR	7309549	PrimaryExpression	0		7309460	1					
ANR	7309550	ExpressionStatement	onlygamma = 1	780:9:21955:21968	7309460	1	True				
ANR	7309551	AssignmentExpression	onlygamma = 1		7309460	0		=			
ANR	7309552	Identifier	onlygamma		7309460	0					
ANR	7309553	PrimaryExpression	1		7309460	1					
ANR	7309554	ElseStatement	else		7309460	0					
ANR	7309555	CompoundStatement		13:6:373:373	7309460	0					
ANR	7309556	ExpressionStatement	"fprintf ( stderr , ""unknown argument %s\\n"" , * argv )"	783:9:21998:22045	7309460	0	True				
ANR	7309557	CallExpression	"fprintf ( stderr , ""unknown argument %s\\n"" , * argv )"		7309460	0					
ANR	7309558	Callee	fprintf		7309460	0					
ANR	7309559	Identifier	fprintf		7309460	0					
ANR	7309560	ArgumentList	stderr		7309460	1					
ANR	7309561	Argument	stderr		7309460	0					
ANR	7309562	Identifier	stderr		7309460	0					
ANR	7309563	Argument	"""unknown argument %s\\n"""		7309460	1					
ANR	7309564	PrimaryExpression	"""unknown argument %s\\n"""		7309460	0					
ANR	7309565	Argument	* argv		7309460	2					
ANR	7309566	UnaryOperationExpression	* argv		7309460	0					
ANR	7309567	UnaryOperator	*		7309460	0					
ANR	7309568	Identifier	argv		7309460	1					
ANR	7309569	ReturnStatement	return 1 ;	784:9:22056:22064	7309460	1	True				
ANR	7309570	PrimaryExpression	1		7309460	0					
ANR	7309571	IfStatement	if ( ! onlygamma )		7309460	4					
ANR	7309572	Condition	! onlygamma	787:7:22082:22091	7309460	0	True				
ANR	7309573	UnaryOperationExpression	! onlygamma		7309460	0					
ANR	7309574	UnaryOperator	!		7309460	0					
ANR	7309575	Identifier	onlygamma		7309460	1					
ANR	7309576	CompoundStatement		19:3:483:483	7309460	1					
ANR	7309577	ExpressionStatement	maxerr = 0	790:6:22151:22161	7309460	0	True				
ANR	7309578	AssignmentExpression	maxerr = 0		7309460	0		=			
ANR	7309579	Identifier	maxerr		7309460	0					
ANR	7309580	PrimaryExpression	0		7309460	1					
ANR	7309581	ForStatement	for ( i = 0 ; i < 256 ; ++ i )		7309460	1					
ANR	7309582	ForInit	i = 0 ;	791:11:22174:22177	7309460	0	True				
ANR	7309583	AssignmentExpression	i = 0		7309460	0		=			
ANR	7309584	Identifier	i		7309460	0					
ANR	7309585	PrimaryExpression	0		7309460	1					
ANR	7309586	Condition	i < 256	791:16:22179:22183	7309460	1	True				
ANR	7309587	RelationalExpression	i < 256		7309460	0		<			
ANR	7309588	Identifier	i		7309460	0					
ANR	7309589	PrimaryExpression	256		7309460	1					
ANR	7309590	UnaryExpression	++ i	791:23:22186:22188	7309460	2	True				
ANR	7309591	IncDec	++		7309460	0					
ANR	7309592	Identifier	i		7309460	1					
ANR	7309593	CompoundStatement		25:9:648:687	7309460	3					
ANR	7309594	IdentifierDeclStatement	double correct = - log ( i / 255. ) / log ( 2. ) * 65536 ;	793:9:22208:22251	7309460	0	True				
ANR	7309595	IdentifierDecl	correct = - log ( i / 255. ) / log ( 2. ) * 65536		7309460	0					
ANR	7309596	IdentifierDeclType	double		7309460	0					
ANR	7309597	Identifier	correct		7309460	1					
ANR	7309598	AssignmentExpression	correct = - log ( i / 255. ) / log ( 2. ) * 65536		7309460	2		=			
ANR	7309599	Identifier	correct		7309460	0					
ANR	7309600	MultiplicativeExpression	- log ( i / 255. ) / log ( 2. ) * 65536		7309460	1		/			
ANR	7309601	UnaryOperationExpression	- log ( i / 255. )		7309460	0					
ANR	7309602	UnaryOperator	-		7309460	0					
ANR	7309603	CallExpression	log ( i / 255. )		7309460	1					
ANR	7309604	Callee	log		7309460	0					
ANR	7309605	Identifier	log		7309460	0					
ANR	7309606	ArgumentList	i / 255.		7309460	1					
ANR	7309607	Argument	i / 255.		7309460	0					
ANR	7309608	MultiplicativeExpression	i / 255.		7309460	0		/			
ANR	7309609	Identifier	i		7309460	0					
ANR	7309610	PrimaryExpression	255.		7309460	1					
ANR	7309611	MultiplicativeExpression	log ( 2. ) * 65536		7309460	1		*			
ANR	7309612	CallExpression	log ( 2. )		7309460	0					
ANR	7309613	Callee	log		7309460	0					
ANR	7309614	Identifier	log		7309460	0					
ANR	7309615	ArgumentList	2.		7309460	1					
ANR	7309616	Argument	2.		7309460	0					
ANR	7309617	PrimaryExpression	2.		7309460	0					
ANR	7309618	PrimaryExpression	65536		7309460	1					
ANR	7309619	IdentifierDeclStatement	double error = png_log8bit ( i ) - correct ;	794:9:22262:22301	7309460	1	True				
ANR	7309620	IdentifierDecl	error = png_log8bit ( i ) - correct		7309460	0					
ANR	7309621	IdentifierDeclType	double		7309460	0					
ANR	7309622	Identifier	error		7309460	1					
ANR	7309623	AssignmentExpression	error = png_log8bit ( i ) - correct		7309460	2		=			
ANR	7309624	Identifier	error		7309460	0					
ANR	7309625	AdditiveExpression	png_log8bit ( i ) - correct		7309460	1		-			
ANR	7309626	CallExpression	png_log8bit ( i )		7309460	0					
ANR	7309627	Callee	png_log8bit		7309460	0					
ANR	7309628	Identifier	png_log8bit		7309460	0					
ANR	7309629	ArgumentList	i		7309460	1					
ANR	7309630	Argument	i		7309460	0					
ANR	7309631	Identifier	i		7309460	0					
ANR	7309632	Identifier	correct		7309460	1					
ANR	7309633	IfStatement	if ( i != 0 && fabs ( error ) > maxerr )		7309460	2					
ANR	7309634	Condition	i != 0 && fabs ( error ) > maxerr	796:13:22317:22346	7309460	0	True				
ANR	7309635	AndExpression	i != 0 && fabs ( error ) > maxerr		7309460	0		&&			
ANR	7309636	EqualityExpression	i != 0		7309460	0		!=			
ANR	7309637	Identifier	i		7309460	0					
ANR	7309638	PrimaryExpression	0		7309460	1					
ANR	7309639	RelationalExpression	fabs ( error ) > maxerr		7309460	1		>			
ANR	7309640	CallExpression	fabs ( error )		7309460	0					
ANR	7309641	Callee	fabs		7309460	0					
ANR	7309642	Identifier	fabs		7309460	0					
ANR	7309643	ArgumentList	error		7309460	1					
ANR	7309644	Argument	error		7309460	0					
ANR	7309645	Identifier	error		7309460	0					
ANR	7309646	Identifier	maxerr		7309460	1					
ANR	7309647	ExpressionStatement	maxerr = fabs ( error )	797:12:22361:22381	7309460	1	True				
ANR	7309648	AssignmentExpression	maxerr = fabs ( error )		7309460	0		=			
ANR	7309649	Identifier	maxerr		7309460	0					
ANR	7309650	CallExpression	fabs ( error )		7309460	1					
ANR	7309651	Callee	fabs		7309460	0					
ANR	7309652	Identifier	fabs		7309460	0					
ANR	7309653	ArgumentList	error		7309460	1					
ANR	7309654	Argument	error		7309460	0					
ANR	7309655	Identifier	error		7309460	0					
ANR	7309656	IfStatement	if ( i == 0 && png_log8bit ( i ) != 0xffffffff || i != 0 && png_log8bit ( i ) != floor ( correct + .5 ) )		7309460	3					
ANR	7309657	Condition	i == 0 && png_log8bit ( i ) != 0xffffffff || i != 0 && png_log8bit ( i ) != floor ( correct + .5 )	799:13:22397:22496	7309460	0	True				
ANR	7309658	OrExpression	i == 0 && png_log8bit ( i ) != 0xffffffff || i != 0 && png_log8bit ( i ) != floor ( correct + .5 )		7309460	0		||			
ANR	7309659	AndExpression	i == 0 && png_log8bit ( i ) != 0xffffffff		7309460	0		&&			
ANR	7309660	EqualityExpression	i == 0		7309460	0		==			
ANR	7309661	Identifier	i		7309460	0					
ANR	7309662	PrimaryExpression	0		7309460	1					
ANR	7309663	EqualityExpression	png_log8bit ( i ) != 0xffffffff		7309460	1		!=			
ANR	7309664	CallExpression	png_log8bit ( i )		7309460	0					
ANR	7309665	Callee	png_log8bit		7309460	0					
ANR	7309666	Identifier	png_log8bit		7309460	0					
ANR	7309667	ArgumentList	i		7309460	1					
ANR	7309668	Argument	i		7309460	0					
ANR	7309669	Identifier	i		7309460	0					
ANR	7309670	PrimaryExpression	0xffffffff		7309460	1					
ANR	7309671	AndExpression	i != 0 && png_log8bit ( i ) != floor ( correct + .5 )		7309460	1		&&			
ANR	7309672	EqualityExpression	i != 0		7309460	0		!=			
ANR	7309673	Identifier	i		7309460	0					
ANR	7309674	PrimaryExpression	0		7309460	1					
ANR	7309675	EqualityExpression	png_log8bit ( i ) != floor ( correct + .5 )		7309460	1		!=			
ANR	7309676	CallExpression	png_log8bit ( i )		7309460	0					
ANR	7309677	Callee	png_log8bit		7309460	0					
ANR	7309678	Identifier	png_log8bit		7309460	0					
ANR	7309679	ArgumentList	i		7309460	1					
ANR	7309680	Argument	i		7309460	0					
ANR	7309681	Identifier	i		7309460	0					
ANR	7309682	CallExpression	floor ( correct + .5 )		7309460	1					
ANR	7309683	Callee	floor		7309460	0					
ANR	7309684	Identifier	floor		7309460	0					
ANR	7309685	ArgumentList	correct + .5		7309460	1					
ANR	7309686	Argument	correct + .5		7309460	0					
ANR	7309687	AdditiveExpression	correct + .5		7309460	0		+			
ANR	7309688	Identifier	correct		7309460	0					
ANR	7309689	PrimaryExpression	.5		7309460	1					
ANR	7309690	CompoundStatement		32:9:894:894	7309460	1					
ANR	7309691	ExpressionStatement	"fprintf ( stderr , ""8-bit log error: %d: got %u, expected %f\\n"" , i , png_log8bit ( i ) , correct )"	802:12:22522:22626	7309460	0	True				
ANR	7309692	CallExpression	"fprintf ( stderr , ""8-bit log error: %d: got %u, expected %f\\n"" , i , png_log8bit ( i ) , correct )"		7309460	0					
ANR	7309693	Callee	fprintf		7309460	0					
ANR	7309694	Identifier	fprintf		7309460	0					
ANR	7309695	ArgumentList	stderr		7309460	1					
ANR	7309696	Argument	stderr		7309460	0					
ANR	7309697	Identifier	stderr		7309460	0					
ANR	7309698	Argument	"""8-bit log error: %d: got %u, expected %f\\n"""		7309460	1					
ANR	7309699	PrimaryExpression	"""8-bit log error: %d: got %u, expected %f\\n"""		7309460	0					
ANR	7309700	Argument	i		7309460	2					
ANR	7309701	Identifier	i		7309460	0					
ANR	7309702	Argument	png_log8bit ( i )		7309460	3					
ANR	7309703	CallExpression	png_log8bit ( i )		7309460	0					
ANR	7309704	Callee	png_log8bit		7309460	0					
ANR	7309705	Identifier	png_log8bit		7309460	0					
ANR	7309706	ArgumentList	i		7309460	1					
ANR	7309707	Argument	i		7309460	0					
ANR	7309708	Identifier	i		7309460	0					
ANR	7309709	Argument	correct		7309460	4					
ANR	7309710	Identifier	correct		7309460	0					
ANR	7309711	IfStatement	if ( ! silent )		7309460	2					
ANR	7309712	Condition	! silent	807:10:22658:22664	7309460	0	True				
ANR	7309713	UnaryOperationExpression	! silent		7309460	0					
ANR	7309714	UnaryOperator	!		7309460	0					
ANR	7309715	Identifier	silent		7309460	1					
ANR	7309716	ExpressionStatement	"printf ( ""maximum 8-bit log error = %f\\n"" , maxerr )"	808:9:22676:22724	7309460	1	True				
ANR	7309717	CallExpression	"printf ( ""maximum 8-bit log error = %f\\n"" , maxerr )"		7309460	0					
ANR	7309718	Callee	printf		7309460	0					
ANR	7309719	Identifier	printf		7309460	0					
ANR	7309720	ArgumentList	"""maximum 8-bit log error = %f\\n"""		7309460	1					
ANR	7309721	Argument	"""maximum 8-bit log error = %f\\n"""		7309460	0					
ANR	7309722	PrimaryExpression	"""maximum 8-bit log error = %f\\n"""		7309460	0					
ANR	7309723	Argument	maxerr		7309460	1					
ANR	7309724	Identifier	maxerr		7309460	0					
ANR	7309725	ExpressionStatement	maxerr = 0	810:6:22733:22743	7309460	3	True				
ANR	7309726	AssignmentExpression	maxerr = 0		7309460	0		=			
ANR	7309727	Identifier	maxerr		7309460	0					
ANR	7309728	PrimaryExpression	0		7309460	1					
ANR	7309729	ForStatement	for ( i = 0 ; i < 65536 ; ++ i )		7309460	4					
ANR	7309730	ForInit	i = 0 ;	811:11:22756:22759	7309460	0	True				
ANR	7309731	AssignmentExpression	i = 0		7309460	0		=			
ANR	7309732	Identifier	i		7309460	0					
ANR	7309733	PrimaryExpression	0		7309460	1					
ANR	7309734	Condition	i < 65536	811:16:22761:22767	7309460	1	True				
ANR	7309735	RelationalExpression	i < 65536		7309460	0		<			
ANR	7309736	Identifier	i		7309460	0					
ANR	7309737	PrimaryExpression	65536		7309460	1					
ANR	7309738	UnaryExpression	++ i	811:25:22770:22772	7309460	2	True				
ANR	7309739	IncDec	++		7309460	0					
ANR	7309740	Identifier	i		7309460	1					
ANR	7309741	CompoundStatement		45:9:1234:1274	7309460	3					
ANR	7309742	IdentifierDeclStatement	double correct = - log ( i / 65535. ) / log ( 2. ) * 65536 ;	813:9:22792:22837	7309460	0	True				
ANR	7309743	IdentifierDecl	correct = - log ( i / 65535. ) / log ( 2. ) * 65536		7309460	0					
ANR	7309744	IdentifierDeclType	double		7309460	0					
ANR	7309745	Identifier	correct		7309460	1					
ANR	7309746	AssignmentExpression	correct = - log ( i / 65535. ) / log ( 2. ) * 65536		7309460	2		=			
ANR	7309747	Identifier	correct		7309460	0					
ANR	7309748	MultiplicativeExpression	- log ( i / 65535. ) / log ( 2. ) * 65536		7309460	1		/			
ANR	7309749	UnaryOperationExpression	- log ( i / 65535. )		7309460	0					
ANR	7309750	UnaryOperator	-		7309460	0					
ANR	7309751	CallExpression	log ( i / 65535. )		7309460	1					
ANR	7309752	Callee	log		7309460	0					
ANR	7309753	Identifier	log		7309460	0					
ANR	7309754	ArgumentList	i / 65535.		7309460	1					
ANR	7309755	Argument	i / 65535.		7309460	0					
ANR	7309756	MultiplicativeExpression	i / 65535.		7309460	0		/			
ANR	7309757	Identifier	i		7309460	0					
ANR	7309758	PrimaryExpression	65535.		7309460	1					
ANR	7309759	MultiplicativeExpression	log ( 2. ) * 65536		7309460	1		*			
ANR	7309760	CallExpression	log ( 2. )		7309460	0					
ANR	7309761	Callee	log		7309460	0					
ANR	7309762	Identifier	log		7309460	0					
ANR	7309763	ArgumentList	2.		7309460	1					
ANR	7309764	Argument	2.		7309460	0					
ANR	7309765	PrimaryExpression	2.		7309460	0					
ANR	7309766	PrimaryExpression	65536		7309460	1					
ANR	7309767	IdentifierDeclStatement	double error = png_log16bit ( i ) - correct ;	814:9:22848:22888	7309460	1	True				
ANR	7309768	IdentifierDecl	error = png_log16bit ( i ) - correct		7309460	0					
ANR	7309769	IdentifierDeclType	double		7309460	0					
ANR	7309770	Identifier	error		7309460	1					
ANR	7309771	AssignmentExpression	error = png_log16bit ( i ) - correct		7309460	2		=			
ANR	7309772	Identifier	error		7309460	0					
ANR	7309773	AdditiveExpression	png_log16bit ( i ) - correct		7309460	1		-			
ANR	7309774	CallExpression	png_log16bit ( i )		7309460	0					
ANR	7309775	Callee	png_log16bit		7309460	0					
ANR	7309776	Identifier	png_log16bit		7309460	0					
ANR	7309777	ArgumentList	i		7309460	1					
ANR	7309778	Argument	i		7309460	0					
ANR	7309779	Identifier	i		7309460	0					
ANR	7309780	Identifier	correct		7309460	1					
ANR	7309781	IfStatement	if ( i != 0 && fabs ( error ) > maxerr )		7309460	2					
ANR	7309782	Condition	i != 0 && fabs ( error ) > maxerr	816:13:22904:22933	7309460	0	True				
ANR	7309783	AndExpression	i != 0 && fabs ( error ) > maxerr		7309460	0		&&			
ANR	7309784	EqualityExpression	i != 0		7309460	0		!=			
ANR	7309785	Identifier	i		7309460	0					
ANR	7309786	PrimaryExpression	0		7309460	1					
ANR	7309787	RelationalExpression	fabs ( error ) > maxerr		7309460	1		>			
ANR	7309788	CallExpression	fabs ( error )		7309460	0					
ANR	7309789	Callee	fabs		7309460	0					
ANR	7309790	Identifier	fabs		7309460	0					
ANR	7309791	ArgumentList	error		7309460	1					
ANR	7309792	Argument	error		7309460	0					
ANR	7309793	Identifier	error		7309460	0					
ANR	7309794	Identifier	maxerr		7309460	1					
ANR	7309795	ExpressionStatement	maxerr = fabs ( error )	817:12:22948:22968	7309460	1	True				
ANR	7309796	AssignmentExpression	maxerr = fabs ( error )		7309460	0		=			
ANR	7309797	Identifier	maxerr		7309460	0					
ANR	7309798	CallExpression	fabs ( error )		7309460	1					
ANR	7309799	Callee	fabs		7309460	0					
ANR	7309800	Identifier	fabs		7309460	0					
ANR	7309801	ArgumentList	error		7309460	1					
ANR	7309802	Argument	error		7309460	0					
ANR	7309803	Identifier	error		7309460	0					
ANR	7309804	IfStatement	if ( i == 0 && png_log16bit ( i ) != 0xffffffff || i != 0 && png_log16bit ( i ) != floor ( correct + .5 ) )		7309460	3					
ANR	7309805	Condition	i == 0 && png_log16bit ( i ) != 0xffffffff || i != 0 && png_log16bit ( i ) != floor ( correct + .5 )	819:13:22984:23085	7309460	0	True				
ANR	7309806	OrExpression	i == 0 && png_log16bit ( i ) != 0xffffffff || i != 0 && png_log16bit ( i ) != floor ( correct + .5 )		7309460	0		||			
ANR	7309807	AndExpression	i == 0 && png_log16bit ( i ) != 0xffffffff		7309460	0		&&			
ANR	7309808	EqualityExpression	i == 0		7309460	0		==			
ANR	7309809	Identifier	i		7309460	0					
ANR	7309810	PrimaryExpression	0		7309460	1					
ANR	7309811	EqualityExpression	png_log16bit ( i ) != 0xffffffff		7309460	1		!=			
ANR	7309812	CallExpression	png_log16bit ( i )		7309460	0					
ANR	7309813	Callee	png_log16bit		7309460	0					
ANR	7309814	Identifier	png_log16bit		7309460	0					
ANR	7309815	ArgumentList	i		7309460	1					
ANR	7309816	Argument	i		7309460	0					
ANR	7309817	Identifier	i		7309460	0					
ANR	7309818	PrimaryExpression	0xffffffff		7309460	1					
ANR	7309819	AndExpression	i != 0 && png_log16bit ( i ) != floor ( correct + .5 )		7309460	1		&&			
ANR	7309820	EqualityExpression	i != 0		7309460	0		!=			
ANR	7309821	Identifier	i		7309460	0					
ANR	7309822	PrimaryExpression	0		7309460	1					
ANR	7309823	EqualityExpression	png_log16bit ( i ) != floor ( correct + .5 )		7309460	1		!=			
ANR	7309824	CallExpression	png_log16bit ( i )		7309460	0					
ANR	7309825	Callee	png_log16bit		7309460	0					
ANR	7309826	Identifier	png_log16bit		7309460	0					
ANR	7309827	ArgumentList	i		7309460	1					
ANR	7309828	Argument	i		7309460	0					
ANR	7309829	Identifier	i		7309460	0					
ANR	7309830	CallExpression	floor ( correct + .5 )		7309460	1					
ANR	7309831	Callee	floor		7309460	0					
ANR	7309832	Identifier	floor		7309460	0					
ANR	7309833	ArgumentList	correct + .5		7309460	1					
ANR	7309834	Argument	correct + .5		7309460	0					
ANR	7309835	AdditiveExpression	correct + .5		7309460	0		+			
ANR	7309836	Identifier	correct		7309460	0					
ANR	7309837	PrimaryExpression	.5		7309460	1					
ANR	7309838	CompoundStatement		52:9:1483:1483	7309460	1					
ANR	7309839	IfStatement	if ( error > .68 )		7309460	0					
ANR	7309840	Condition	error > .68	822:16:23115:23125	7309460	0	True				
ANR	7309841	RelationalExpression	error > .68		7309460	0		>			
ANR	7309842	Identifier	error		7309460	0					
ANR	7309843	PrimaryExpression	.68		7309460	1					
ANR	7309844	CompoundStatement		54:12:1569:1569	7309460	1					
ANR	7309845	Statement	fprintf	824:15:23200:23206	7309460	0	True				
ANR	7309846	Statement	(	824:22:23207:23207	7309460	1	True				
ANR	7309847	Statement	stderr	824:23:23208:23213	7309460	2	True				
ANR	7309848	Statement	","	824:29:23214:23214	7309460	3	True				
ANR	7309849	Statement	"""16-bit log error: %d: got %u, expected %f"""	824:31:23216:23258	7309460	4	True				
ANR	7309850	Statement	""" error: %f\\n"""	825:18:23278:23291	7309460	5	True				
ANR	7309851	Statement	","	825:32:23292:23292	7309460	6	True				
ANR	7309852	Statement	i	825:34:23294:23294	7309460	7	True				
ANR	7309853	Statement	","	825:35:23295:23295	7309460	8	True				
ANR	7309854	Statement	png_log16bit	825:37:23297:23308	7309460	9	True				
ANR	7309855	Statement	(	825:49:23309:23309	7309460	10	True				
ANR	7309856	Statement	i	825:50:23310:23310	7309460	11	True				
ANR	7309857	Statement	)	825:51:23311:23311	7309460	12	True				
ANR	7309858	Statement	","	825:52:23312:23312	7309460	13	True				
ANR	7309859	Statement	correct	825:54:23314:23320	7309460	14	True				
ANR	7309860	Statement	","	825:61:23321:23321	7309460	15	True				
ANR	7309861	Statement	error	825:63:23323:23327	7309460	16	True				
ANR	7309862	Statement	)	825:68:23328:23328	7309460	17	True				
ANR	7309863	ExpressionStatement		825:69:23329:23329	7309460	18	True				
ANR	7309864	IfStatement	if ( ! silent )		7309460	5					
ANR	7309865	Condition	! silent	830:10:23375:23381	7309460	0	True				
ANR	7309866	UnaryOperationExpression	! silent		7309460	0					
ANR	7309867	UnaryOperator	!		7309460	0					
ANR	7309868	Identifier	silent		7309460	1					
ANR	7309869	ExpressionStatement	"printf ( ""maximum 16-bit log error = %f\\n"" , maxerr )"	831:9:23393:23442	7309460	1	True				
ANR	7309870	CallExpression	"printf ( ""maximum 16-bit log error = %f\\n"" , maxerr )"		7309460	0					
ANR	7309871	Callee	printf		7309460	0					
ANR	7309872	Identifier	printf		7309460	0					
ANR	7309873	ArgumentList	"""maximum 16-bit log error = %f\\n"""		7309460	1					
ANR	7309874	Argument	"""maximum 16-bit log error = %f\\n"""		7309460	0					
ANR	7309875	PrimaryExpression	"""maximum 16-bit log error = %f\\n"""		7309460	0					
ANR	7309876	Argument	maxerr		7309460	1					
ANR	7309877	Identifier	maxerr		7309460	0					
ANR	7309878	ExpressionStatement	maxerr = 0	834:6:23484:23494	7309460	6	True				
ANR	7309879	AssignmentExpression	maxerr = 0		7309460	0		=			
ANR	7309880	Identifier	maxerr		7309460	0					
ANR	7309881	PrimaryExpression	0		7309460	1					
ANR	7309882	ForStatement	for ( i = 0 ; i <= 0xfffff ; ++ i )		7309460	7					
ANR	7309883	ForInit	i = 0 ;	835:11:23507:23510	7309460	0	True				
ANR	7309884	AssignmentExpression	i = 0		7309460	0		=			
ANR	7309885	Identifier	i		7309460	0					
ANR	7309886	PrimaryExpression	0		7309460	1					
ANR	7309887	Condition	i <= 0xfffff	835:16:23512:23521	7309460	1	True				
ANR	7309888	RelationalExpression	i <= 0xfffff		7309460	0		<=			
ANR	7309889	Identifier	i		7309460	0					
ANR	7309890	PrimaryExpression	0xfffff		7309460	1					
ANR	7309891	UnaryExpression	++ i	835:28:23524:23526	7309460	2	True				
ANR	7309892	IncDec	++		7309460	0					
ANR	7309893	Identifier	i		7309460	1					
ANR	7309894	CompoundStatement		69:9:2003:2038	7309460	3					
ANR	7309895	IdentifierDeclStatement	double correct = exp ( - i / 65536. * log ( 2. ) ) * ( 65536. * 65536 ) ;	837:9:23546:23606	7309460	0	True				
ANR	7309896	IdentifierDecl	correct = exp ( - i / 65536. * log ( 2. ) ) * ( 65536. * 65536 )		7309460	0					
ANR	7309897	IdentifierDeclType	double		7309460	0					
ANR	7309898	Identifier	correct		7309460	1					
ANR	7309899	AssignmentExpression	correct = exp ( - i / 65536. * log ( 2. ) ) * ( 65536. * 65536 )		7309460	2		=			
ANR	7309900	Identifier	correct		7309460	0					
ANR	7309901	MultiplicativeExpression	exp ( - i / 65536. * log ( 2. ) ) * ( 65536. * 65536 )		7309460	1		*			
ANR	7309902	CallExpression	exp ( - i / 65536. * log ( 2. ) )		7309460	0					
ANR	7309903	Callee	exp		7309460	0					
ANR	7309904	Identifier	exp		7309460	0					
ANR	7309905	ArgumentList	- i / 65536. * log ( 2. )		7309460	1					
ANR	7309906	Argument	- i / 65536. * log ( 2. )		7309460	0					
ANR	7309907	MultiplicativeExpression	- i / 65536. * log ( 2. )		7309460	0		/			
ANR	7309908	UnaryOperationExpression	- i		7309460	0					
ANR	7309909	UnaryOperator	-		7309460	0					
ANR	7309910	Identifier	i		7309460	1					
ANR	7309911	MultiplicativeExpression	65536. * log ( 2. )		7309460	1		*			
ANR	7309912	PrimaryExpression	65536.		7309460	0					
ANR	7309913	CallExpression	log ( 2. )		7309460	1					
ANR	7309914	Callee	log		7309460	0					
ANR	7309915	Identifier	log		7309460	0					
ANR	7309916	ArgumentList	2.		7309460	1					
ANR	7309917	Argument	2.		7309460	0					
ANR	7309918	PrimaryExpression	2.		7309460	0					
ANR	7309919	MultiplicativeExpression	65536. * 65536		7309460	1		*			
ANR	7309920	PrimaryExpression	65536.		7309460	0					
ANR	7309921	PrimaryExpression	65536		7309460	1					
ANR	7309922	IdentifierDeclStatement	double error = png_exp ( i ) - correct ;	838:9:23617:23652	7309460	1	True				
ANR	7309923	IdentifierDecl	error = png_exp ( i ) - correct		7309460	0					
ANR	7309924	IdentifierDeclType	double		7309460	0					
ANR	7309925	Identifier	error		7309460	1					
ANR	7309926	AssignmentExpression	error = png_exp ( i ) - correct		7309460	2		=			
ANR	7309927	Identifier	error		7309460	0					
ANR	7309928	AdditiveExpression	png_exp ( i ) - correct		7309460	1		-			
ANR	7309929	CallExpression	png_exp ( i )		7309460	0					
ANR	7309930	Callee	png_exp		7309460	0					
ANR	7309931	Identifier	png_exp		7309460	0					
ANR	7309932	ArgumentList	i		7309460	1					
ANR	7309933	Argument	i		7309460	0					
ANR	7309934	Identifier	i		7309460	0					
ANR	7309935	Identifier	correct		7309460	1					
ANR	7309936	IfStatement	if ( fabs ( error ) > maxerr )		7309460	2					
ANR	7309937	Condition	fabs ( error ) > maxerr	840:13:23668:23687	7309460	0	True				
ANR	7309938	RelationalExpression	fabs ( error ) > maxerr		7309460	0		>			
ANR	7309939	CallExpression	fabs ( error )		7309460	0					
ANR	7309940	Callee	fabs		7309460	0					
ANR	7309941	Identifier	fabs		7309460	0					
ANR	7309942	ArgumentList	error		7309460	1					
ANR	7309943	Argument	error		7309460	0					
ANR	7309944	Identifier	error		7309460	0					
ANR	7309945	Identifier	maxerr		7309460	1					
ANR	7309946	ExpressionStatement	maxerr = fabs ( error )	841:12:23702:23722	7309460	1	True				
ANR	7309947	AssignmentExpression	maxerr = fabs ( error )		7309460	0		=			
ANR	7309948	Identifier	maxerr		7309460	0					
ANR	7309949	CallExpression	fabs ( error )		7309460	1					
ANR	7309950	Callee	fabs		7309460	0					
ANR	7309951	Identifier	fabs		7309460	0					
ANR	7309952	ArgumentList	error		7309460	1					
ANR	7309953	Argument	error		7309460	0					
ANR	7309954	Identifier	error		7309460	0					
ANR	7309955	IfStatement	if ( fabs ( error ) > 1883 )		7309460	3					
ANR	7309956	Condition	fabs ( error ) > 1883	842:13:23737:23754	7309460	0	True				
ANR	7309957	RelationalExpression	fabs ( error ) > 1883		7309460	0		>			
ANR	7309958	CallExpression	fabs ( error )		7309460	0					
ANR	7309959	Callee	fabs		7309460	0					
ANR	7309960	Identifier	fabs		7309460	0					
ANR	7309961	ArgumentList	error		7309460	1					
ANR	7309962	Argument	error		7309460	0					
ANR	7309963	Identifier	error		7309460	0					
ANR	7309964	PrimaryExpression	1883		7309460	1					
ANR	7309965	CompoundStatement		74:9:2173:2173	7309460	1					
ANR	7309966	Statement	fprintf	844:12:23801:23807	7309460	0	True				
ANR	7309967	Statement	(	844:19:23808:23808	7309460	1	True				
ANR	7309968	Statement	stderr	844:20:23809:23814	7309460	2	True				
ANR	7309969	Statement	","	844:26:23815:23815	7309460	3	True				
ANR	7309970	Statement	"""32-bit exp error: %d: got %u, expected %f"""	844:28:23817:23859	7309460	4	True				
ANR	7309971	Statement	""" error: %f\\n"""	845:18:23879:23892	7309460	5	True				
ANR	7309972	Statement	","	845:32:23893:23893	7309460	6	True				
ANR	7309973	Statement	i	845:34:23895:23895	7309460	7	True				
ANR	7309974	Statement	","	845:35:23896:23896	7309460	8	True				
ANR	7309975	Statement	png_exp	845:37:23898:23904	7309460	9	True				
ANR	7309976	Statement	(	845:44:23905:23905	7309460	10	True				
ANR	7309977	Statement	i	845:45:23906:23906	7309460	11	True				
ANR	7309978	Statement	)	845:46:23907:23907	7309460	12	True				
ANR	7309979	Statement	","	845:47:23908:23908	7309460	13	True				
ANR	7309980	Statement	correct	845:49:23910:23916	7309460	14	True				
ANR	7309981	Statement	","	845:56:23917:23917	7309460	15	True				
ANR	7309982	Statement	error	845:58:23919:23923	7309460	16	True				
ANR	7309983	Statement	)	845:63:23924:23924	7309460	17	True				
ANR	7309984	ExpressionStatement		845:64:23925:23925	7309460	18	True				
ANR	7309985	IfStatement	if ( ! silent )		7309460	8					
ANR	7309986	Condition	! silent	849:10:23957:23963	7309460	0	True				
ANR	7309987	UnaryOperationExpression	! silent		7309460	0					
ANR	7309988	UnaryOperator	!		7309460	0					
ANR	7309989	Identifier	silent		7309460	1					
ANR	7309990	ExpressionStatement	"printf ( ""maximum 32-bit exp error = %f\\n"" , maxerr )"	850:9:23975:24024	7309460	1	True				
ANR	7309991	CallExpression	"printf ( ""maximum 32-bit exp error = %f\\n"" , maxerr )"		7309460	0					
ANR	7309992	Callee	printf		7309460	0					
ANR	7309993	Identifier	printf		7309460	0					
ANR	7309994	ArgumentList	"""maximum 32-bit exp error = %f\\n"""		7309460	1					
ANR	7309995	Argument	"""maximum 32-bit exp error = %f\\n"""		7309460	0					
ANR	7309996	PrimaryExpression	"""maximum 32-bit exp error = %f\\n"""		7309460	0					
ANR	7309997	Argument	maxerr		7309460	1					
ANR	7309998	Identifier	maxerr		7309460	0					
ANR	7309999	ExpressionStatement	maxerr = 0	852:6:24033:24043	7309460	9	True				
ANR	7310000	AssignmentExpression	maxerr = 0		7309460	0		=			
ANR	7310001	Identifier	maxerr		7309460	0					
ANR	7310002	PrimaryExpression	0		7309460	1					
ANR	7310003	ForStatement	for ( i = 0 ; i <= 0xfffff ; ++ i )		7309460	10					
ANR	7310004	ForInit	i = 0 ;	853:11:24056:24059	7309460	0	True				
ANR	7310005	AssignmentExpression	i = 0		7309460	0		=			
ANR	7310006	Identifier	i		7309460	0					
ANR	7310007	PrimaryExpression	0		7309460	1					
ANR	7310008	Condition	i <= 0xfffff	853:16:24061:24070	7309460	1	True				
ANR	7310009	RelationalExpression	i <= 0xfffff		7309460	0		<=			
ANR	7310010	Identifier	i		7309460	0					
ANR	7310011	PrimaryExpression	0xfffff		7309460	1					
ANR	7310012	UnaryExpression	++ i	853:28:24073:24075	7309460	2	True				
ANR	7310013	IncDec	++		7309460	0					
ANR	7310014	Identifier	i		7309460	1					
ANR	7310015	CompoundStatement		87:9:2539:2578	7309460	3					
ANR	7310016	IdentifierDeclStatement	double correct = exp ( - i / 65536. * log ( 2. ) ) * 255 ;	855:9:24095:24142	7309460	0	True				
ANR	7310017	IdentifierDecl	correct = exp ( - i / 65536. * log ( 2. ) ) * 255		7309460	0					
ANR	7310018	IdentifierDeclType	double		7309460	0					
ANR	7310019	Identifier	correct		7309460	1					
ANR	7310020	AssignmentExpression	correct = exp ( - i / 65536. * log ( 2. ) ) * 255		7309460	2		=			
ANR	7310021	Identifier	correct		7309460	0					
ANR	7310022	MultiplicativeExpression	exp ( - i / 65536. * log ( 2. ) ) * 255		7309460	1		*			
ANR	7310023	CallExpression	exp ( - i / 65536. * log ( 2. ) )		7309460	0					
ANR	7310024	Callee	exp		7309460	0					
ANR	7310025	Identifier	exp		7309460	0					
ANR	7310026	ArgumentList	- i / 65536. * log ( 2. )		7309460	1					
ANR	7310027	Argument	- i / 65536. * log ( 2. )		7309460	0					
ANR	7310028	MultiplicativeExpression	- i / 65536. * log ( 2. )		7309460	0		/			
ANR	7310029	UnaryOperationExpression	- i		7309460	0					
ANR	7310030	UnaryOperator	-		7309460	0					
ANR	7310031	Identifier	i		7309460	1					
ANR	7310032	MultiplicativeExpression	65536. * log ( 2. )		7309460	1		*			
ANR	7310033	PrimaryExpression	65536.		7309460	0					
ANR	7310034	CallExpression	log ( 2. )		7309460	1					
ANR	7310035	Callee	log		7309460	0					
ANR	7310036	Identifier	log		7309460	0					
ANR	7310037	ArgumentList	2.		7309460	1					
ANR	7310038	Argument	2.		7309460	0					
ANR	7310039	PrimaryExpression	2.		7309460	0					
ANR	7310040	PrimaryExpression	255		7309460	1					
ANR	7310041	IdentifierDeclStatement	double error = png_exp8bit ( i ) - correct ;	856:9:24153:24192	7309460	1	True				
ANR	7310042	IdentifierDecl	error = png_exp8bit ( i ) - correct		7309460	0					
ANR	7310043	IdentifierDeclType	double		7309460	0					
ANR	7310044	Identifier	error		7309460	1					
ANR	7310045	AssignmentExpression	error = png_exp8bit ( i ) - correct		7309460	2		=			
ANR	7310046	Identifier	error		7309460	0					
ANR	7310047	AdditiveExpression	png_exp8bit ( i ) - correct		7309460	1		-			
ANR	7310048	CallExpression	png_exp8bit ( i )		7309460	0					
ANR	7310049	Callee	png_exp8bit		7309460	0					
ANR	7310050	Identifier	png_exp8bit		7309460	0					
ANR	7310051	ArgumentList	i		7309460	1					
ANR	7310052	Argument	i		7309460	0					
ANR	7310053	Identifier	i		7309460	0					
ANR	7310054	Identifier	correct		7309460	1					
ANR	7310055	IfStatement	if ( fabs ( error ) > maxerr )		7309460	2					
ANR	7310056	Condition	fabs ( error ) > maxerr	858:13:24208:24227	7309460	0	True				
ANR	7310057	RelationalExpression	fabs ( error ) > maxerr		7309460	0		>			
ANR	7310058	CallExpression	fabs ( error )		7309460	0					
ANR	7310059	Callee	fabs		7309460	0					
ANR	7310060	Identifier	fabs		7309460	0					
ANR	7310061	ArgumentList	error		7309460	1					
ANR	7310062	Argument	error		7309460	0					
ANR	7310063	Identifier	error		7309460	0					
ANR	7310064	Identifier	maxerr		7309460	1					
ANR	7310065	ExpressionStatement	maxerr = fabs ( error )	859:12:24242:24262	7309460	1	True				
ANR	7310066	AssignmentExpression	maxerr = fabs ( error )		7309460	0		=			
ANR	7310067	Identifier	maxerr		7309460	0					
ANR	7310068	CallExpression	fabs ( error )		7309460	1					
ANR	7310069	Callee	fabs		7309460	0					
ANR	7310070	Identifier	fabs		7309460	0					
ANR	7310071	ArgumentList	error		7309460	1					
ANR	7310072	Argument	error		7309460	0					
ANR	7310073	Identifier	error		7309460	0					
ANR	7310074	IfStatement	if ( fabs ( error ) > .50002 )		7309460	3					
ANR	7310075	Condition	fabs ( error ) > .50002	860:13:24277:24296	7309460	0	True				
ANR	7310076	RelationalExpression	fabs ( error ) > .50002		7309460	0		>			
ANR	7310077	CallExpression	fabs ( error )		7309460	0					
ANR	7310078	Callee	fabs		7309460	0					
ANR	7310079	Identifier	fabs		7309460	0					
ANR	7310080	ArgumentList	error		7309460	1					
ANR	7310081	Argument	error		7309460	0					
ANR	7310082	Identifier	error		7309460	0					
ANR	7310083	PrimaryExpression	.50002		7309460	1					
ANR	7310084	CompoundStatement		92:9:2714:2714	7309460	1					
ANR	7310085	Statement	fprintf	862:12:24342:24348	7309460	0	True				
ANR	7310086	Statement	(	862:19:24349:24349	7309460	1	True				
ANR	7310087	Statement	stderr	862:20:24350:24355	7309460	2	True				
ANR	7310088	Statement	","	862:26:24356:24356	7309460	3	True				
ANR	7310089	Statement	"""8-bit exp error: %d: got %u, expected %f"""	862:28:24358:24399	7309460	4	True				
ANR	7310090	Statement	""" error: %f\\n"""	863:18:24419:24432	7309460	5	True				
ANR	7310091	Statement	","	863:32:24433:24433	7309460	6	True				
ANR	7310092	Statement	i	863:34:24435:24435	7309460	7	True				
ANR	7310093	Statement	","	863:35:24436:24436	7309460	8	True				
ANR	7310094	Statement	png_exp8bit	863:37:24438:24448	7309460	9	True				
ANR	7310095	Statement	(	863:48:24449:24449	7309460	10	True				
ANR	7310096	Statement	i	863:49:24450:24450	7309460	11	True				
ANR	7310097	Statement	)	863:50:24451:24451	7309460	12	True				
ANR	7310098	Statement	","	863:51:24452:24452	7309460	13	True				
ANR	7310099	Statement	correct	863:53:24454:24460	7309460	14	True				
ANR	7310100	Statement	","	863:60:24461:24461	7309460	15	True				
ANR	7310101	Statement	error	863:62:24463:24467	7309460	16	True				
ANR	7310102	Statement	)	863:67:24468:24468	7309460	17	True				
ANR	7310103	ExpressionStatement		863:68:24469:24469	7309460	18	True				
ANR	7310104	IfStatement	if ( ! silent )		7309460	11					
ANR	7310105	Condition	! silent	867:10:24501:24507	7309460	0	True				
ANR	7310106	UnaryOperationExpression	! silent		7309460	0					
ANR	7310107	UnaryOperator	!		7309460	0					
ANR	7310108	Identifier	silent		7309460	1					
ANR	7310109	ExpressionStatement	"printf ( ""maximum 8-bit exp error = %f\\n"" , maxerr )"	868:9:24519:24567	7309460	1	True				
ANR	7310110	CallExpression	"printf ( ""maximum 8-bit exp error = %f\\n"" , maxerr )"		7309460	0					
ANR	7310111	Callee	printf		7309460	0					
ANR	7310112	Identifier	printf		7309460	0					
ANR	7310113	ArgumentList	"""maximum 8-bit exp error = %f\\n"""		7309460	1					
ANR	7310114	Argument	"""maximum 8-bit exp error = %f\\n"""		7309460	0					
ANR	7310115	PrimaryExpression	"""maximum 8-bit exp error = %f\\n"""		7309460	0					
ANR	7310116	Argument	maxerr		7309460	1					
ANR	7310117	Identifier	maxerr		7309460	0					
ANR	7310118	ExpressionStatement	maxerr = 0	870:6:24576:24586	7309460	12	True				
ANR	7310119	AssignmentExpression	maxerr = 0		7309460	0		=			
ANR	7310120	Identifier	maxerr		7309460	0					
ANR	7310121	PrimaryExpression	0		7309460	1					
ANR	7310122	ForStatement	for ( i = 0 ; i <= 0xfffff ; ++ i )		7309460	13					
ANR	7310123	ForInit	i = 0 ;	871:11:24599:24602	7309460	0	True				
ANR	7310124	AssignmentExpression	i = 0		7309460	0		=			
ANR	7310125	Identifier	i		7309460	0					
ANR	7310126	PrimaryExpression	0		7309460	1					
ANR	7310127	Condition	i <= 0xfffff	871:16:24604:24613	7309460	1	True				
ANR	7310128	RelationalExpression	i <= 0xfffff		7309460	0		<=			
ANR	7310129	Identifier	i		7309460	0					
ANR	7310130	PrimaryExpression	0xfffff		7309460	1					
ANR	7310131	UnaryExpression	++ i	871:28:24616:24618	7309460	2	True				
ANR	7310132	IncDec	++		7309460	0					
ANR	7310133	Identifier	i		7309460	1					
ANR	7310134	CompoundStatement		105:9:3084:3124	7309460	3					
ANR	7310135	IdentifierDeclStatement	double correct = exp ( - i / 65536. * log ( 2. ) ) * 65535 ;	873:9:24638:24687	7309460	0	True				
ANR	7310136	IdentifierDecl	correct = exp ( - i / 65536. * log ( 2. ) ) * 65535		7309460	0					
ANR	7310137	IdentifierDeclType	double		7309460	0					
ANR	7310138	Identifier	correct		7309460	1					
ANR	7310139	AssignmentExpression	correct = exp ( - i / 65536. * log ( 2. ) ) * 65535		7309460	2		=			
ANR	7310140	Identifier	correct		7309460	0					
ANR	7310141	MultiplicativeExpression	exp ( - i / 65536. * log ( 2. ) ) * 65535		7309460	1		*			
ANR	7310142	CallExpression	exp ( - i / 65536. * log ( 2. ) )		7309460	0					
ANR	7310143	Callee	exp		7309460	0					
ANR	7310144	Identifier	exp		7309460	0					
ANR	7310145	ArgumentList	- i / 65536. * log ( 2. )		7309460	1					
ANR	7310146	Argument	- i / 65536. * log ( 2. )		7309460	0					
ANR	7310147	MultiplicativeExpression	- i / 65536. * log ( 2. )		7309460	0		/			
ANR	7310148	UnaryOperationExpression	- i		7309460	0					
ANR	7310149	UnaryOperator	-		7309460	0					
ANR	7310150	Identifier	i		7309460	1					
ANR	7310151	MultiplicativeExpression	65536. * log ( 2. )		7309460	1		*			
ANR	7310152	PrimaryExpression	65536.		7309460	0					
ANR	7310153	CallExpression	log ( 2. )		7309460	1					
ANR	7310154	Callee	log		7309460	0					
ANR	7310155	Identifier	log		7309460	0					
ANR	7310156	ArgumentList	2.		7309460	1					
ANR	7310157	Argument	2.		7309460	0					
ANR	7310158	PrimaryExpression	2.		7309460	0					
ANR	7310159	PrimaryExpression	65535		7309460	1					
ANR	7310160	IdentifierDeclStatement	double error = png_exp16bit ( i ) - correct ;	874:9:24698:24738	7309460	1	True				
ANR	7310161	IdentifierDecl	error = png_exp16bit ( i ) - correct		7309460	0					
ANR	7310162	IdentifierDeclType	double		7309460	0					
ANR	7310163	Identifier	error		7309460	1					
ANR	7310164	AssignmentExpression	error = png_exp16bit ( i ) - correct		7309460	2		=			
ANR	7310165	Identifier	error		7309460	0					
ANR	7310166	AdditiveExpression	png_exp16bit ( i ) - correct		7309460	1		-			
ANR	7310167	CallExpression	png_exp16bit ( i )		7309460	0					
ANR	7310168	Callee	png_exp16bit		7309460	0					
ANR	7310169	Identifier	png_exp16bit		7309460	0					
ANR	7310170	ArgumentList	i		7309460	1					
ANR	7310171	Argument	i		7309460	0					
ANR	7310172	Identifier	i		7309460	0					
ANR	7310173	Identifier	correct		7309460	1					
ANR	7310174	IfStatement	if ( fabs ( error ) > maxerr )		7309460	2					
ANR	7310175	Condition	fabs ( error ) > maxerr	876:13:24754:24773	7309460	0	True				
ANR	7310176	RelationalExpression	fabs ( error ) > maxerr		7309460	0		>			
ANR	7310177	CallExpression	fabs ( error )		7309460	0					
ANR	7310178	Callee	fabs		7309460	0					
ANR	7310179	Identifier	fabs		7309460	0					
ANR	7310180	ArgumentList	error		7309460	1					
ANR	7310181	Argument	error		7309460	0					
ANR	7310182	Identifier	error		7309460	0					
ANR	7310183	Identifier	maxerr		7309460	1					
ANR	7310184	ExpressionStatement	maxerr = fabs ( error )	877:12:24788:24808	7309460	1	True				
ANR	7310185	AssignmentExpression	maxerr = fabs ( error )		7309460	0		=			
ANR	7310186	Identifier	maxerr		7309460	0					
ANR	7310187	CallExpression	fabs ( error )		7309460	1					
ANR	7310188	Callee	fabs		7309460	0					
ANR	7310189	Identifier	fabs		7309460	0					
ANR	7310190	ArgumentList	error		7309460	1					
ANR	7310191	Argument	error		7309460	0					
ANR	7310192	Identifier	error		7309460	0					
ANR	7310193	IfStatement	if ( fabs ( error ) > .524 )		7309460	3					
ANR	7310194	Condition	fabs ( error ) > .524	878:13:24823:24840	7309460	0	True				
ANR	7310195	RelationalExpression	fabs ( error ) > .524		7309460	0		>			
ANR	7310196	CallExpression	fabs ( error )		7309460	0					
ANR	7310197	Callee	fabs		7309460	0					
ANR	7310198	Identifier	fabs		7309460	0					
ANR	7310199	ArgumentList	error		7309460	1					
ANR	7310200	Argument	error		7309460	0					
ANR	7310201	Identifier	error		7309460	0					
ANR	7310202	PrimaryExpression	.524		7309460	1					
ANR	7310203	CompoundStatement		110:9:3258:3258	7309460	1					
ANR	7310204	Statement	fprintf	880:12:24886:24892	7309460	0	True				
ANR	7310205	Statement	(	880:19:24893:24893	7309460	1	True				
ANR	7310206	Statement	stderr	880:20:24894:24899	7309460	2	True				
ANR	7310207	Statement	","	880:26:24900:24900	7309460	3	True				
ANR	7310208	Statement	"""16-bit exp error: %d: got %u, expected %f"""	880:28:24902:24944	7309460	4	True				
ANR	7310209	Statement	""" error: %f\\n"""	881:18:24964:24977	7309460	5	True				
ANR	7310210	Statement	","	881:32:24978:24978	7309460	6	True				
ANR	7310211	Statement	i	881:34:24980:24980	7309460	7	True				
ANR	7310212	Statement	","	881:35:24981:24981	7309460	8	True				
ANR	7310213	Statement	png_exp16bit	881:37:24983:24994	7309460	9	True				
ANR	7310214	Statement	(	881:49:24995:24995	7309460	10	True				
ANR	7310215	Statement	i	881:50:24996:24996	7309460	11	True				
ANR	7310216	Statement	)	881:51:24997:24997	7309460	12	True				
ANR	7310217	Statement	","	881:52:24998:24998	7309460	13	True				
ANR	7310218	Statement	correct	881:54:25000:25006	7309460	14	True				
ANR	7310219	Statement	","	881:61:25007:25007	7309460	15	True				
ANR	7310220	Statement	error	881:63:25009:25013	7309460	16	True				
ANR	7310221	Statement	)	881:68:25014:25014	7309460	17	True				
ANR	7310222	ExpressionStatement		881:69:25015:25015	7309460	18	True				
ANR	7310223	IfStatement	if ( ! silent )		7309460	14					
ANR	7310224	Condition	! silent	885:10:25047:25053	7309460	0	True				
ANR	7310225	UnaryOperationExpression	! silent		7309460	0					
ANR	7310226	UnaryOperator	!		7309460	0					
ANR	7310227	Identifier	silent		7309460	1					
ANR	7310228	ExpressionStatement	"printf ( ""maximum 16-bit exp error = %f\\n"" , maxerr )"	886:9:25065:25114	7309460	1	True				
ANR	7310229	CallExpression	"printf ( ""maximum 16-bit exp error = %f\\n"" , maxerr )"		7309460	0					
ANR	7310230	Callee	printf		7309460	0					
ANR	7310231	Identifier	printf		7309460	0					
ANR	7310232	ArgumentList	"""maximum 16-bit exp error = %f\\n"""		7309460	1					
ANR	7310233	Argument	"""maximum 16-bit exp error = %f\\n"""		7309460	0					
ANR	7310234	PrimaryExpression	"""maximum 16-bit exp error = %f\\n"""		7309460	0					
ANR	7310235	Argument	maxerr		7309460	1					
ANR	7310236	Identifier	maxerr		7309460	0					
ANR	7310237	ForStatement	for ( i = 0 ; i < 9 ; ++ i )		7309460	5					
ANR	7310238	ForInit	i = 0 ;	890:8:25191:25194	7309460	0	True				
ANR	7310239	AssignmentExpression	i = 0		7309460	0		=			
ANR	7310240	Identifier	i		7309460	0					
ANR	7310241	PrimaryExpression	0		7309460	1					
ANR	7310242	Condition	i < 9	890:13:25196:25198	7309460	1	True				
ANR	7310243	RelationalExpression	i < 9		7309460	0		<			
ANR	7310244	Identifier	i		7309460	0					
ANR	7310245	PrimaryExpression	9		7309460	1					
ANR	7310246	UnaryExpression	++ i	890:18:25201:25203	7309460	2	True				
ANR	7310247	IncDec	++		7309460	0					
ANR	7310248	Identifier	i		7309460	1					
ANR	7310249	CompoundStatement		125:6:3648:3694	7309460	3					
ANR	7310250	IdentifierDeclStatement	unsigned j ;	892:6:25217:25227	7309460	0	True				
ANR	7310251	IdentifierDecl	j		7309460	0					
ANR	7310252	IdentifierDeclType	unsigned		7309460	0					
ANR	7310253	Identifier	j		7309460	1					
ANR	7310254	IdentifierDeclStatement	double g = gamma [ i ] ;	893:6:25235:25254	7309460	1	True				
ANR	7310255	IdentifierDecl	g = gamma [ i ]		7309460	0					
ANR	7310256	IdentifierDeclType	double		7309460	0					
ANR	7310257	Identifier	g		7309460	1					
ANR	7310258	AssignmentExpression	g = gamma [ i ]		7309460	2		=			
ANR	7310259	Identifier	g		7309460	0					
ANR	7310260	ArrayIndexing	gamma [ i ]		7309460	1					
ANR	7310261	Identifier	gamma		7309460	0					
ANR	7310262	Identifier	i		7309460	1					
ANR	7310263	IdentifierDeclStatement	png_fixed_point gfp = floor ( g * PNG_FP_1 + .5 ) ;	894:6:25262:25308	7309460	2	True				
ANR	7310264	IdentifierDecl	gfp = floor ( g * PNG_FP_1 + .5 )		7309460	0					
ANR	7310265	IdentifierDeclType	png_fixed_point		7309460	0					
ANR	7310266	Identifier	gfp		7309460	1					
ANR	7310267	AssignmentExpression	gfp = floor ( g * PNG_FP_1 + .5 )		7309460	2		=			
ANR	7310268	Identifier	gfp		7309460	0					
ANR	7310269	CallExpression	floor ( g * PNG_FP_1 + .5 )		7309460	1					
ANR	7310270	Callee	floor		7309460	0					
ANR	7310271	Identifier	floor		7309460	0					
ANR	7310272	ArgumentList	g * PNG_FP_1 + .5		7309460	1					
ANR	7310273	Argument	g * PNG_FP_1 + .5		7309460	0					
ANR	7310274	AdditiveExpression	g * PNG_FP_1 + .5		7309460	0		+			
ANR	7310275	MultiplicativeExpression	g * PNG_FP_1		7309460	0		*			
ANR	7310276	Identifier	g		7309460	0					
ANR	7310277	Identifier	PNG_FP_1		7309460	1					
ANR	7310278	PrimaryExpression	.5		7309460	1					
ANR	7310279	IfStatement	if ( ! silent )		7309460	3					
ANR	7310280	Condition	! silent	896:10:25321:25327	7309460	0	True				
ANR	7310281	UnaryOperationExpression	! silent		7309460	0					
ANR	7310282	UnaryOperator	!		7309460	0					
ANR	7310283	Identifier	silent		7309460	1					
ANR	7310284	ExpressionStatement	"printf ( ""Test gamma %f\\n"" , g )"	897:9:25339:25367	7309460	1	True				
ANR	7310285	CallExpression	"printf ( ""Test gamma %f\\n"" , g )"		7309460	0					
ANR	7310286	Callee	printf		7309460	0					
ANR	7310287	Identifier	printf		7309460	0					
ANR	7310288	ArgumentList	"""Test gamma %f\\n"""		7309460	1					
ANR	7310289	Argument	"""Test gamma %f\\n"""		7309460	0					
ANR	7310290	PrimaryExpression	"""Test gamma %f\\n"""		7309460	0					
ANR	7310291	Argument	g		7309460	1					
ANR	7310292	Identifier	g		7309460	0					
ANR	7310293	ExpressionStatement	maxerr = 0	899:6:25376:25386	7309460	4	True				
ANR	7310294	AssignmentExpression	maxerr = 0		7309460	0		=			
ANR	7310295	Identifier	maxerr		7309460	0					
ANR	7310296	PrimaryExpression	0		7309460	1					
ANR	7310297	ForStatement	for ( j = 0 ; j < 256 ; ++ j )		7309460	5					
ANR	7310298	ForInit	j = 0 ;	900:11:25399:25402	7309460	0	True				
ANR	7310299	AssignmentExpression	j = 0		7309460	0		=			
ANR	7310300	Identifier	j		7309460	0					
ANR	7310301	PrimaryExpression	0		7309460	1					
ANR	7310302	Condition	j < 256	900:16:25404:25408	7309460	1	True				
ANR	7310303	RelationalExpression	j < 256		7309460	0		<			
ANR	7310304	Identifier	j		7309460	0					
ANR	7310305	PrimaryExpression	256		7309460	1					
ANR	7310306	UnaryExpression	++ j	900:23:25411:25413	7309460	2	True				
ANR	7310307	IncDec	++		7309460	0					
ANR	7310308	Identifier	j		7309460	1					
ANR	7310309	CompoundStatement		135:9:3923:3951	7309460	3					
ANR	7310310	IdentifierDeclStatement	"double correct = pow ( j / 255. , g ) * 255 ;"	902:9:25433:25470	7309460	0	True				
ANR	7310311	IdentifierDecl	"correct = pow ( j / 255. , g ) * 255"		7309460	0					
ANR	7310312	IdentifierDeclType	double		7309460	0					
ANR	7310313	Identifier	correct		7309460	1					
ANR	7310314	AssignmentExpression	"correct = pow ( j / 255. , g ) * 255"		7309460	2		=			
ANR	7310315	Identifier	correct		7309460	0					
ANR	7310316	MultiplicativeExpression	"pow ( j / 255. , g ) * 255"		7309460	1		*			
ANR	7310317	CallExpression	"pow ( j / 255. , g )"		7309460	0					
ANR	7310318	Callee	pow		7309460	0					
ANR	7310319	Identifier	pow		7309460	0					
ANR	7310320	ArgumentList	j / 255.		7309460	1					
ANR	7310321	Argument	j / 255.		7309460	0					
ANR	7310322	MultiplicativeExpression	j / 255.		7309460	0		/			
ANR	7310323	Identifier	j		7309460	0					
ANR	7310324	PrimaryExpression	255.		7309460	1					
ANR	7310325	Argument	g		7309460	1					
ANR	7310326	Identifier	g		7309460	0					
ANR	7310327	PrimaryExpression	255		7309460	1					
ANR	7310328	IdentifierDeclStatement	"png_byte out = png_gamma_8bit_correct ( j , gfp ) ;"	903:9:25481:25526	7309460	1	True				
ANR	7310329	IdentifierDecl	"out = png_gamma_8bit_correct ( j , gfp )"		7309460	0					
ANR	7310330	IdentifierDeclType	png_byte		7309460	0					
ANR	7310331	Identifier	out		7309460	1					
ANR	7310332	AssignmentExpression	"out = png_gamma_8bit_correct ( j , gfp )"		7309460	2		=			
ANR	7310333	Identifier	out		7309460	0					
ANR	7310334	CallExpression	"png_gamma_8bit_correct ( j , gfp )"		7309460	1					
ANR	7310335	Callee	png_gamma_8bit_correct		7309460	0					
ANR	7310336	Identifier	png_gamma_8bit_correct		7309460	0					
ANR	7310337	ArgumentList	j		7309460	1					
ANR	7310338	Argument	j		7309460	0					
ANR	7310339	Identifier	j		7309460	0					
ANR	7310340	Argument	gfp		7309460	1					
ANR	7310341	Identifier	gfp		7309460	0					
ANR	7310342	IdentifierDeclStatement	double error = out - correct ;	904:9:25537:25565	7309460	2	True				
ANR	7310343	IdentifierDecl	error = out - correct		7309460	0					
ANR	7310344	IdentifierDeclType	double		7309460	0					
ANR	7310345	Identifier	error		7309460	1					
ANR	7310346	AssignmentExpression	error = out - correct		7309460	2		=			
ANR	7310347	Identifier	error		7309460	0					
ANR	7310348	AdditiveExpression	out - correct		7309460	1		-			
ANR	7310349	Identifier	out		7309460	0					
ANR	7310350	Identifier	correct		7309460	1					
ANR	7310351	IfStatement	if ( fabs ( error ) > maxerr )		7309460	3					
ANR	7310352	Condition	fabs ( error ) > maxerr	906:13:25581:25600	7309460	0	True				
ANR	7310353	RelationalExpression	fabs ( error ) > maxerr		7309460	0		>			
ANR	7310354	CallExpression	fabs ( error )		7309460	0					
ANR	7310355	Callee	fabs		7309460	0					
ANR	7310356	Identifier	fabs		7309460	0					
ANR	7310357	ArgumentList	error		7309460	1					
ANR	7310358	Argument	error		7309460	0					
ANR	7310359	Identifier	error		7309460	0					
ANR	7310360	Identifier	maxerr		7309460	1					
ANR	7310361	ExpressionStatement	maxerr = fabs ( error )	907:12:25615:25635	7309460	1	True				
ANR	7310362	AssignmentExpression	maxerr = fabs ( error )		7309460	0		=			
ANR	7310363	Identifier	maxerr		7309460	0					
ANR	7310364	CallExpression	fabs ( error )		7309460	1					
ANR	7310365	Callee	fabs		7309460	0					
ANR	7310366	Identifier	fabs		7309460	0					
ANR	7310367	ArgumentList	error		7309460	1					
ANR	7310368	Argument	error		7309460	0					
ANR	7310369	Identifier	error		7309460	0					
ANR	7310370	IfStatement	if ( out != floor ( correct + .5 ) )		7309460	4					
ANR	7310371	Condition	out != floor ( correct + .5 )	908:13:25650:25673	7309460	0	True				
ANR	7310372	EqualityExpression	out != floor ( correct + .5 )		7309460	0		!=			
ANR	7310373	Identifier	out		7309460	0					
ANR	7310374	CallExpression	floor ( correct + .5 )		7309460	1					
ANR	7310375	Callee	floor		7309460	0					
ANR	7310376	Identifier	floor		7309460	0					
ANR	7310377	ArgumentList	correct + .5		7309460	1					
ANR	7310378	Argument	correct + .5		7309460	0					
ANR	7310379	AdditiveExpression	correct + .5		7309460	0		+			
ANR	7310380	Identifier	correct		7309460	0					
ANR	7310381	PrimaryExpression	.5		7309460	1					
ANR	7310382	CompoundStatement		140:9:4071:4071	7309460	1					
ANR	7310383	ExpressionStatement	"fprintf ( stderr , ""8bit %d ^ %f: got %d expected %f error %f\\n"" , j , g , out , correct , error )"	910:12:25699:25803	7309460	0	True				
ANR	7310384	CallExpression	"fprintf ( stderr , ""8bit %d ^ %f: got %d expected %f error %f\\n"" , j , g , out , correct , error )"		7309460	0					
ANR	7310385	Callee	fprintf		7309460	0					
ANR	7310386	Identifier	fprintf		7309460	0					
ANR	7310387	ArgumentList	stderr		7309460	1					
ANR	7310388	Argument	stderr		7309460	0					
ANR	7310389	Identifier	stderr		7309460	0					
ANR	7310390	Argument	"""8bit %d ^ %f: got %d expected %f error %f\\n"""		7309460	1					
ANR	7310391	PrimaryExpression	"""8bit %d ^ %f: got %d expected %f error %f\\n"""		7309460	0					
ANR	7310392	Argument	j		7309460	2					
ANR	7310393	Identifier	j		7309460	0					
ANR	7310394	Argument	g		7309460	3					
ANR	7310395	Identifier	g		7309460	0					
ANR	7310396	Argument	out		7309460	4					
ANR	7310397	Identifier	out		7309460	0					
ANR	7310398	Argument	correct		7309460	5					
ANR	7310399	Identifier	correct		7309460	0					
ANR	7310400	Argument	error		7309460	6					
ANR	7310401	Identifier	error		7309460	0					
ANR	7310402	IfStatement	if ( ! silent )		7309460	6					
ANR	7310403	Condition	! silent	915:10:25835:25841	7309460	0	True				
ANR	7310404	UnaryOperationExpression	! silent		7309460	0					
ANR	7310405	UnaryOperator	!		7309460	0					
ANR	7310406	Identifier	silent		7309460	1					
ANR	7310407	ExpressionStatement	"printf ( ""gamma %f: maximum 8-bit error %f\\n"" , g , maxerr )"	916:9:25853:25908	7309460	1	True				
ANR	7310408	CallExpression	"printf ( ""gamma %f: maximum 8-bit error %f\\n"" , g , maxerr )"		7309460	0					
ANR	7310409	Callee	printf		7309460	0					
ANR	7310410	Identifier	printf		7309460	0					
ANR	7310411	ArgumentList	"""gamma %f: maximum 8-bit error %f\\n"""		7309460	1					
ANR	7310412	Argument	"""gamma %f: maximum 8-bit error %f\\n"""		7309460	0					
ANR	7310413	PrimaryExpression	"""gamma %f: maximum 8-bit error %f\\n"""		7309460	0					
ANR	7310414	Argument	g		7309460	1					
ANR	7310415	Identifier	g		7309460	0					
ANR	7310416	Argument	maxerr		7309460	2					
ANR	7310417	Identifier	maxerr		7309460	0					
ANR	7310418	ExpressionStatement	maxerr = 0	918:6:25917:25927	7309460	7	True				
ANR	7310419	AssignmentExpression	maxerr = 0		7309460	0		=			
ANR	7310420	Identifier	maxerr		7309460	0					
ANR	7310421	PrimaryExpression	0		7309460	1					
ANR	7310422	ForStatement	for ( j = 0 ; j < 65536 ; ++ j )		7309460	8					
ANR	7310423	ForInit	j = 0 ;	919:11:25940:25943	7309460	0	True				
ANR	7310424	AssignmentExpression	j = 0		7309460	0		=			
ANR	7310425	Identifier	j		7309460	0					
ANR	7310426	PrimaryExpression	0		7309460	1					
ANR	7310427	Condition	j < 65536	919:16:25945:25951	7309460	1	True				
ANR	7310428	RelationalExpression	j < 65536		7309460	0		<			
ANR	7310429	Identifier	j		7309460	0					
ANR	7310430	PrimaryExpression	65536		7309460	1					
ANR	7310431	UnaryExpression	++ j	919:25:25954:25956	7309460	2	True				
ANR	7310432	IncDec	++		7309460	0					
ANR	7310433	Identifier	j		7309460	1					
ANR	7310434	CompoundStatement		154:9:4474:4502	7309460	3					
ANR	7310435	IdentifierDeclStatement	"double correct = pow ( j / 65535. , g ) * 65535 ;"	921:9:25976:26017	7309460	0	True				
ANR	7310436	IdentifierDecl	"correct = pow ( j / 65535. , g ) * 65535"		7309460	0					
ANR	7310437	IdentifierDeclType	double		7309460	0					
ANR	7310438	Identifier	correct		7309460	1					
ANR	7310439	AssignmentExpression	"correct = pow ( j / 65535. , g ) * 65535"		7309460	2		=			
ANR	7310440	Identifier	correct		7309460	0					
ANR	7310441	MultiplicativeExpression	"pow ( j / 65535. , g ) * 65535"		7309460	1		*			
ANR	7310442	CallExpression	"pow ( j / 65535. , g )"		7309460	0					
ANR	7310443	Callee	pow		7309460	0					
ANR	7310444	Identifier	pow		7309460	0					
ANR	7310445	ArgumentList	j / 65535.		7309460	1					
ANR	7310446	Argument	j / 65535.		7309460	0					
ANR	7310447	MultiplicativeExpression	j / 65535.		7309460	0		/			
ANR	7310448	Identifier	j		7309460	0					
ANR	7310449	PrimaryExpression	65535.		7309460	1					
ANR	7310450	Argument	g		7309460	1					
ANR	7310451	Identifier	g		7309460	0					
ANR	7310452	PrimaryExpression	65535		7309460	1					
ANR	7310453	IdentifierDeclStatement	"png_uint_16 out = png_gamma_16bit_correct ( j , gfp ) ;"	922:9:26028:26077	7309460	1	True				
ANR	7310454	IdentifierDecl	"out = png_gamma_16bit_correct ( j , gfp )"		7309460	0					
ANR	7310455	IdentifierDeclType	png_uint_16		7309460	0					
ANR	7310456	Identifier	out		7309460	1					
ANR	7310457	AssignmentExpression	"out = png_gamma_16bit_correct ( j , gfp )"		7309460	2		=			
ANR	7310458	Identifier	out		7309460	0					
ANR	7310459	CallExpression	"png_gamma_16bit_correct ( j , gfp )"		7309460	1					
ANR	7310460	Callee	png_gamma_16bit_correct		7309460	0					
ANR	7310461	Identifier	png_gamma_16bit_correct		7309460	0					
ANR	7310462	ArgumentList	j		7309460	1					
ANR	7310463	Argument	j		7309460	0					
ANR	7310464	Identifier	j		7309460	0					
ANR	7310465	Argument	gfp		7309460	1					
ANR	7310466	Identifier	gfp		7309460	0					
ANR	7310467	IdentifierDeclStatement	double error = out - correct ;	923:9:26088:26116	7309460	2	True				
ANR	7310468	IdentifierDecl	error = out - correct		7309460	0					
ANR	7310469	IdentifierDeclType	double		7309460	0					
ANR	7310470	Identifier	error		7309460	1					
ANR	7310471	AssignmentExpression	error = out - correct		7309460	2		=			
ANR	7310472	Identifier	error		7309460	0					
ANR	7310473	AdditiveExpression	out - correct		7309460	1		-			
ANR	7310474	Identifier	out		7309460	0					
ANR	7310475	Identifier	correct		7309460	1					
ANR	7310476	IfStatement	if ( fabs ( error ) > maxerr )		7309460	3					
ANR	7310477	Condition	fabs ( error ) > maxerr	925:13:26132:26151	7309460	0	True				
ANR	7310478	RelationalExpression	fabs ( error ) > maxerr		7309460	0		>			
ANR	7310479	CallExpression	fabs ( error )		7309460	0					
ANR	7310480	Callee	fabs		7309460	0					
ANR	7310481	Identifier	fabs		7309460	0					
ANR	7310482	ArgumentList	error		7309460	1					
ANR	7310483	Argument	error		7309460	0					
ANR	7310484	Identifier	error		7309460	0					
ANR	7310485	Identifier	maxerr		7309460	1					
ANR	7310486	ExpressionStatement	maxerr = fabs ( error )	926:12:26166:26186	7309460	1	True				
ANR	7310487	AssignmentExpression	maxerr = fabs ( error )		7309460	0		=			
ANR	7310488	Identifier	maxerr		7309460	0					
ANR	7310489	CallExpression	fabs ( error )		7309460	1					
ANR	7310490	Callee	fabs		7309460	0					
ANR	7310491	Identifier	fabs		7309460	0					
ANR	7310492	ArgumentList	error		7309460	1					
ANR	7310493	Argument	error		7309460	0					
ANR	7310494	Identifier	error		7309460	0					
ANR	7310495	IfStatement	if ( fabs ( error ) > 1.62 )		7309460	4					
ANR	7310496	Condition	fabs ( error ) > 1.62	927:13:26201:26218	7309460	0	True				
ANR	7310497	RelationalExpression	fabs ( error ) > 1.62		7309460	0		>			
ANR	7310498	CallExpression	fabs ( error )		7309460	0					
ANR	7310499	Callee	fabs		7309460	0					
ANR	7310500	Identifier	fabs		7309460	0					
ANR	7310501	ArgumentList	error		7309460	1					
ANR	7310502	Argument	error		7309460	0					
ANR	7310503	Identifier	error		7309460	0					
ANR	7310504	PrimaryExpression	1.62		7309460	1					
ANR	7310505	CompoundStatement		159:9:4616:4616	7309460	1					
ANR	7310506	ExpressionStatement	"fprintf ( stderr , ""16bit %d ^ %f: got %d expected %f error %f\\n"" , j , g , out , correct , error )"	929:12:26244:26349	7309460	0	True				
ANR	7310507	CallExpression	"fprintf ( stderr , ""16bit %d ^ %f: got %d expected %f error %f\\n"" , j , g , out , correct , error )"		7309460	0					
ANR	7310508	Callee	fprintf		7309460	0					
ANR	7310509	Identifier	fprintf		7309460	0					
ANR	7310510	ArgumentList	stderr		7309460	1					
ANR	7310511	Argument	stderr		7309460	0					
ANR	7310512	Identifier	stderr		7309460	0					
ANR	7310513	Argument	"""16bit %d ^ %f: got %d expected %f error %f\\n"""		7309460	1					
ANR	7310514	PrimaryExpression	"""16bit %d ^ %f: got %d expected %f error %f\\n"""		7309460	0					
ANR	7310515	Argument	j		7309460	2					
ANR	7310516	Identifier	j		7309460	0					
ANR	7310517	Argument	g		7309460	3					
ANR	7310518	Identifier	g		7309460	0					
ANR	7310519	Argument	out		7309460	4					
ANR	7310520	Identifier	out		7309460	0					
ANR	7310521	Argument	correct		7309460	5					
ANR	7310522	Identifier	correct		7309460	0					
ANR	7310523	Argument	error		7309460	6					
ANR	7310524	Identifier	error		7309460	0					
ANR	7310525	IfStatement	if ( ! silent )		7309460	9					
ANR	7310526	Condition	! silent	934:10:26381:26387	7309460	0	True				
ANR	7310527	UnaryOperationExpression	! silent		7309460	0					
ANR	7310528	UnaryOperator	!		7309460	0					
ANR	7310529	Identifier	silent		7309460	1					
ANR	7310530	ExpressionStatement	"printf ( ""gamma %f: maximum 16-bit error %f\\n"" , g , maxerr )"	935:9:26399:26455	7309460	1	True				
ANR	7310531	CallExpression	"printf ( ""gamma %f: maximum 16-bit error %f\\n"" , g , maxerr )"		7309460	0					
ANR	7310532	Callee	printf		7309460	0					
ANR	7310533	Identifier	printf		7309460	0					
ANR	7310534	ArgumentList	"""gamma %f: maximum 16-bit error %f\\n"""		7309460	1					
ANR	7310535	Argument	"""gamma %f: maximum 16-bit error %f\\n"""		7309460	0					
ANR	7310536	PrimaryExpression	"""gamma %f: maximum 16-bit error %f\\n"""		7309460	0					
ANR	7310537	Argument	g		7309460	1					
ANR	7310538	Identifier	g		7309460	0					
ANR	7310539	Argument	maxerr		7309460	2					
ANR	7310540	Identifier	maxerr		7309460	0					
ANR	7310541	ReturnStatement	return 0 ;	938:3:26466:26474	7309460	6	True				
ANR	7310542	PrimaryExpression	0		7309460	0					
ANR	7310543	ReturnType	int		7309460	1					
ANR	7310544	Identifier	validation_gamma		7309460	2					
ANR	7310545	ParameterList	"int argc , char * * argv"		7309460	3					
ANR	7310546	Parameter	int argc	769:21:21590:21597	7309460	0	True				
ANR	7310547	ParameterType	int		7309460	0					
ANR	7310548	Identifier	argc		7309460	1					
ANR	7310549	Parameter	char * * argv	769:31:21600:21610	7309460	1	True				
ANR	7310550	ParameterType	char * *		7309460	0					
ANR	7310551	Identifier	argv		7309460	1					
ANR	7310552	CFGEntryNode	ENTRY		7309460		True				
ANR	7310553	CFGExitNode	EXIT		7309460		True				
ANR	7310554	Symbol	png_exp		7309460						
ANR	7310555	Symbol	correct		7309460						
ANR	7310556	Symbol	log		7309460						
ANR	7310557	Symbol	png_log8bit		7309460						
ANR	7310558	Symbol	png_exp8bit		7309460						
ANR	7310559	Symbol	* argv		7309460						
ANR	7310560	Symbol	png_log16bit		7309460						
ANR	7310561	Symbol	* gamma		7309460						
ANR	7310562	Symbol	error		7309460						
ANR	7310563	Symbol	argv		7309460						
ANR	7310564	Symbol	maxerr		7309460						
ANR	7310565	Symbol	out		7309460						
ANR	7310566	Symbol	pow		7309460						
ANR	7310567	Symbol	onlygamma		7309460						
ANR	7310568	Symbol	floor		7309460						
ANR	7310569	Symbol	exp		7309460						
ANR	7310570	Symbol	argc		7309460						
ANR	7310571	Symbol	strcmp		7309460						
ANR	7310572	Symbol	silent		7309460						
ANR	7310573	Symbol	fabs		7309460						
ANR	7310574	Symbol	g		7309460						
ANR	7310575	Symbol	i		7309460						
ANR	7310576	Symbol	j		7309460						
ANR	7310577	Symbol	stderr		7309460						
ANR	7310578	Symbol	gfp		7309460						
ANR	7310579	Symbol	* i		7309460						
ANR	7310580	Symbol	png_gamma_8bit_correct		7309460						
ANR	7310581	Symbol	PNG_FP_1		7309460						
ANR	7310582	Symbol	png_gamma_16bit_correct		7309460						
ANR	7310583	Symbol	* ++ argv		7309460						
ANR	7310584	Symbol	png_exp16bit		7309460						
ANR	7310585	Symbol	gamma		7309460						
ANR	7310586	Function	main	955:0:26952:28163							
ANR	7310587	FunctionDef	"main (int argc , char * * argv)"		7310586	0					
ANR	7310588	CompoundStatement		956:0:26984:28163	7310586	0					
ANR	7310589	IdentifierDeclStatement	int count = COUNT ;	957:3:26989:27006	7310586	0	True				
ANR	7310590	IdentifierDecl	count = COUNT		7310586	0					
ANR	7310591	IdentifierDeclType	int		7310586	0					
ANR	7310592	Identifier	count		7310586	1					
ANR	7310593	AssignmentExpression	count = COUNT		7310586	2		=			
ANR	7310594	Identifier	COUNT		7310586	0					
ANR	7310595	Identifier	COUNT		7310586	1					
ANR	7310596	WhileStatement	while ( argc > 1 )		7310586	1					
ANR	7310597	Condition	argc > 1	959:10:27019:27026	7310586	0	True				
ANR	7310598	RelationalExpression	argc > 1		7310586	0		>			
ANR	7310599	Identifier	argc		7310586	0					
ANR	7310600	PrimaryExpression	1		7310586	1					
ANR	7310601	CompoundStatement		5:3:47:47	7310586	1					
ANR	7310602	IfStatement	"if ( argc > 2 && strcmp ( argv [ 1 ] , ""-c"" ) == 0 )"		7310586	0					
ANR	7310603	Condition	"argc > 2 && strcmp ( argv [ 1 ] , ""-c"" ) == 0"	961:10:27044:27081	7310586	0	True				
ANR	7310604	AndExpression	"argc > 2 && strcmp ( argv [ 1 ] , ""-c"" ) == 0"		7310586	0		&&			
ANR	7310605	RelationalExpression	argc > 2		7310586	0		>			
ANR	7310606	Identifier	argc		7310586	0					
ANR	7310607	PrimaryExpression	2		7310586	1					
ANR	7310608	EqualityExpression	"strcmp ( argv [ 1 ] , ""-c"" ) == 0"		7310586	1		==			
ANR	7310609	CallExpression	"strcmp ( argv [ 1 ] , ""-c"" )"		7310586	0					
ANR	7310610	Callee	strcmp		7310586	0					
ANR	7310611	Identifier	strcmp		7310586	0					
ANR	7310612	ArgumentList	argv [ 1 ]		7310586	1					
ANR	7310613	Argument	argv [ 1 ]		7310586	0					
ANR	7310614	ArrayIndexing	argv [ 1 ]		7310586	0					
ANR	7310615	Identifier	argv		7310586	0					
ANR	7310616	PrimaryExpression	1		7310586	1					
ANR	7310617	Argument	"""-c"""		7310586	1					
ANR	7310618	PrimaryExpression	"""-c"""		7310586	0					
ANR	7310619	PrimaryExpression	0		7310586	1					
ANR	7310620	CompoundStatement		7:6:105:105	7310586	1					
ANR	7310621	ExpressionStatement	count = atoi ( argv [ 2 ] )	963:9:27101:27122	7310586	0	True				
ANR	7310622	AssignmentExpression	count = atoi ( argv [ 2 ] )		7310586	0		=			
ANR	7310623	Identifier	count		7310586	0					
ANR	7310624	CallExpression	atoi ( argv [ 2 ] )		7310586	1					
ANR	7310625	Callee	atoi		7310586	0					
ANR	7310626	Identifier	atoi		7310586	0					
ANR	7310627	ArgumentList	argv [ 2 ]		7310586	1					
ANR	7310628	Argument	argv [ 2 ]		7310586	0					
ANR	7310629	ArrayIndexing	argv [ 2 ]		7310586	0					
ANR	7310630	Identifier	argv		7310586	0					
ANR	7310631	PrimaryExpression	2		7310586	1					
ANR	7310632	ExpressionStatement	argc -= 2	964:9:27133:27142	7310586	1	True				
ANR	7310633	AssignmentExpression	argc -= 2		7310586	0		-=			
ANR	7310634	Identifier	argc		7310586	0					
ANR	7310635	PrimaryExpression	2		7310586	1					
ANR	7310636	ExpressionStatement	argv += 2	965:9:27153:27162	7310586	2	True				
ANR	7310637	AssignmentExpression	argv += 2		7310586	0		+=			
ANR	7310638	Identifier	argv		7310586	0					
ANR	7310639	PrimaryExpression	2		7310586	1					
ANR	7310640	ElseStatement	else		7310586	0					
ANR	7310641	IfStatement	"if ( strcmp ( argv [ 1 ] , ""-v"" ) == 0 )"		7310586	0					
ANR	7310642	Condition	"strcmp ( argv [ 1 ] , ""-v"" ) == 0"	968:15:27188:27213	7310586	0	True				
ANR	7310643	EqualityExpression	"strcmp ( argv [ 1 ] , ""-v"" ) == 0"		7310586	0		==			
ANR	7310644	CallExpression	"strcmp ( argv [ 1 ] , ""-v"" )"		7310586	0					
ANR	7310645	Callee	strcmp		7310586	0					
ANR	7310646	Identifier	strcmp		7310586	0					
ANR	7310647	ArgumentList	argv [ 1 ]		7310586	1					
ANR	7310648	Argument	argv [ 1 ]		7310586	0					
ANR	7310649	ArrayIndexing	argv [ 1 ]		7310586	0					
ANR	7310650	Identifier	argv		7310586	0					
ANR	7310651	PrimaryExpression	1		7310586	1					
ANR	7310652	Argument	"""-v"""		7310586	1					
ANR	7310653	PrimaryExpression	"""-v"""		7310586	0					
ANR	7310654	PrimaryExpression	0		7310586	1					
ANR	7310655	CompoundStatement		14:6:237:237	7310586	1					
ANR	7310656	ExpressionStatement	++ verbose	970:9:27233:27242	7310586	0	True				
ANR	7310657	UnaryExpression	++ verbose		7310586	0					
ANR	7310658	IncDec	++		7310586	0					
ANR	7310659	Identifier	verbose		7310586	1					
ANR	7310660	ExpressionStatement	-- argc	971:9:27253:27259	7310586	1	True				
ANR	7310661	UnaryExpression	-- argc		7310586	0					
ANR	7310662	IncDec	--		7310586	0					
ANR	7310663	Identifier	argc		7310586	1					
ANR	7310664	ExpressionStatement	++ argv	972:9:27270:27276	7310586	2	True				
ANR	7310665	UnaryExpression	++ argv		7310586	0					
ANR	7310666	IncDec	++		7310586	0					
ANR	7310667	Identifier	argv		7310586	1					
ANR	7310668	ElseStatement	else		7310586	0					
ANR	7310669	BreakStatement	break ;	976:9:27307:27312	7310586	0	True				
ANR	7310670	IfStatement	if ( count > 0 && argc > 1 )		7310586	2					
ANR	7310671	Condition	count > 0 && argc > 1	979:7:27327:27347	7310586	0	True				
ANR	7310672	AndExpression	count > 0 && argc > 1		7310586	0		&&			
ANR	7310673	RelationalExpression	count > 0		7310586	0		>			
ANR	7310674	Identifier	count		7310586	0					
ANR	7310675	PrimaryExpression	0		7310586	1					
ANR	7310676	RelationalExpression	argc > 1		7310586	1		>			
ANR	7310677	Identifier	argc		7310586	0					
ANR	7310678	PrimaryExpression	1		7310586	1					
ANR	7310679	CompoundStatement		25:3:368:368	7310586	1					
ANR	7310680	IfStatement	"if ( strcmp ( argv [ 1 ] , ""ascii"" ) == 0 )"		7310586	0					
ANR	7310681	Condition	"strcmp ( argv [ 1 ] , ""ascii"" ) == 0"	981:10:27365:27393	7310586	0	True				
ANR	7310682	EqualityExpression	"strcmp ( argv [ 1 ] , ""ascii"" ) == 0"		7310586	0		==			
ANR	7310683	CallExpression	"strcmp ( argv [ 1 ] , ""ascii"" )"		7310586	0					
ANR	7310684	Callee	strcmp		7310586	0					
ANR	7310685	Identifier	strcmp		7310586	0					
ANR	7310686	ArgumentList	argv [ 1 ]		7310586	1					
ANR	7310687	Argument	argv [ 1 ]		7310586	0					
ANR	7310688	ArrayIndexing	argv [ 1 ]		7310586	0					
ANR	7310689	Identifier	argv		7310586	0					
ANR	7310690	PrimaryExpression	1		7310586	1					
ANR	7310691	Argument	"""ascii"""		7310586	1					
ANR	7310692	PrimaryExpression	"""ascii"""		7310586	0					
ANR	7310693	PrimaryExpression	0		7310586	1					
ANR	7310694	ReturnStatement	"return validation_ascii_to_fp ( count , argc - 1 , argv + 1 ) ;"	982:9:27405:27457	7310586	1	True				
ANR	7310695	CallExpression	"validation_ascii_to_fp ( count , argc - 1 , argv + 1 )"		7310586	0					
ANR	7310696	Callee	validation_ascii_to_fp		7310586	0					
ANR	7310697	Identifier	validation_ascii_to_fp		7310586	0					
ANR	7310698	ArgumentList	count		7310586	1					
ANR	7310699	Argument	count		7310586	0					
ANR	7310700	Identifier	count		7310586	0					
ANR	7310701	Argument	argc - 1		7310586	1					
ANR	7310702	AdditiveExpression	argc - 1		7310586	0		-			
ANR	7310703	Identifier	argc		7310586	0					
ANR	7310704	PrimaryExpression	1		7310586	1					
ANR	7310705	Argument	argv + 1		7310586	2					
ANR	7310706	AdditiveExpression	argv + 1		7310586	0		+			
ANR	7310707	Identifier	argv		7310586	0					
ANR	7310708	PrimaryExpression	1		7310586	1					
ANR	7310709	ElseStatement	else		7310586	0					
ANR	7310710	IfStatement	"if ( strcmp ( argv [ 1 ] , ""checkfp"" ) == 0 )"		7310586	0					
ANR	7310711	Condition	"strcmp ( argv [ 1 ] , ""checkfp"" ) == 0"	983:15:27474:27504	7310586	0	True				
ANR	7310712	EqualityExpression	"strcmp ( argv [ 1 ] , ""checkfp"" ) == 0"		7310586	0		==			
ANR	7310713	CallExpression	"strcmp ( argv [ 1 ] , ""checkfp"" )"		7310586	0					
ANR	7310714	Callee	strcmp		7310586	0					
ANR	7310715	Identifier	strcmp		7310586	0					
ANR	7310716	ArgumentList	argv [ 1 ]		7310586	1					
ANR	7310717	Argument	argv [ 1 ]		7310586	0					
ANR	7310718	ArrayIndexing	argv [ 1 ]		7310586	0					
ANR	7310719	Identifier	argv		7310586	0					
ANR	7310720	PrimaryExpression	1		7310586	1					
ANR	7310721	Argument	"""checkfp"""		7310586	1					
ANR	7310722	PrimaryExpression	"""checkfp"""		7310586	0					
ANR	7310723	PrimaryExpression	0		7310586	1					
ANR	7310724	ReturnStatement	"return validation_checkfp ( count , argc - 1 , argv + 1 ) ;"	984:9:27516:27564	7310586	1	True				
ANR	7310725	CallExpression	"validation_checkfp ( count , argc - 1 , argv + 1 )"		7310586	0					
ANR	7310726	Callee	validation_checkfp		7310586	0					
ANR	7310727	Identifier	validation_checkfp		7310586	0					
ANR	7310728	ArgumentList	count		7310586	1					
ANR	7310729	Argument	count		7310586	0					
ANR	7310730	Identifier	count		7310586	0					
ANR	7310731	Argument	argc - 1		7310586	1					
ANR	7310732	AdditiveExpression	argc - 1		7310586	0		-			
ANR	7310733	Identifier	argc		7310586	0					
ANR	7310734	PrimaryExpression	1		7310586	1					
ANR	7310735	Argument	argv + 1		7310586	2					
ANR	7310736	AdditiveExpression	argv + 1		7310586	0		+			
ANR	7310737	Identifier	argv		7310586	0					
ANR	7310738	PrimaryExpression	1		7310586	1					
ANR	7310739	ElseStatement	else		7310586	0					
ANR	7310740	IfStatement	"if ( strcmp ( argv [ 1 ] , ""muldiv"" ) == 0 )"		7310586	0					
ANR	7310741	Condition	"strcmp ( argv [ 1 ] , ""muldiv"" ) == 0"	985:15:27581:27610	7310586	0	True				
ANR	7310742	EqualityExpression	"strcmp ( argv [ 1 ] , ""muldiv"" ) == 0"		7310586	0		==			
ANR	7310743	CallExpression	"strcmp ( argv [ 1 ] , ""muldiv"" )"		7310586	0					
ANR	7310744	Callee	strcmp		7310586	0					
ANR	7310745	Identifier	strcmp		7310586	0					
ANR	7310746	ArgumentList	argv [ 1 ]		7310586	1					
ANR	7310747	Argument	argv [ 1 ]		7310586	0					
ANR	7310748	ArrayIndexing	argv [ 1 ]		7310586	0					
ANR	7310749	Identifier	argv		7310586	0					
ANR	7310750	PrimaryExpression	1		7310586	1					
ANR	7310751	Argument	"""muldiv"""		7310586	1					
ANR	7310752	PrimaryExpression	"""muldiv"""		7310586	0					
ANR	7310753	PrimaryExpression	0		7310586	1					
ANR	7310754	ReturnStatement	"return validation_muldiv ( count , argc - 1 , argv + 1 ) ;"	986:9:27622:27669	7310586	1	True				
ANR	7310755	CallExpression	"validation_muldiv ( count , argc - 1 , argv + 1 )"		7310586	0					
ANR	7310756	Callee	validation_muldiv		7310586	0					
ANR	7310757	Identifier	validation_muldiv		7310586	0					
ANR	7310758	ArgumentList	count		7310586	1					
ANR	7310759	Argument	count		7310586	0					
ANR	7310760	Identifier	count		7310586	0					
ANR	7310761	Argument	argc - 1		7310586	1					
ANR	7310762	AdditiveExpression	argc - 1		7310586	0		-			
ANR	7310763	Identifier	argc		7310586	0					
ANR	7310764	PrimaryExpression	1		7310586	1					
ANR	7310765	Argument	argv + 1		7310586	2					
ANR	7310766	AdditiveExpression	argv + 1		7310586	0		+			
ANR	7310767	Identifier	argv		7310586	0					
ANR	7310768	PrimaryExpression	1		7310586	1					
ANR	7310769	ElseStatement	else		7310586	0					
ANR	7310770	IfStatement	"if ( strcmp ( argv [ 1 ] , ""gamma"" ) == 0 )"		7310586	0					
ANR	7310771	Condition	"strcmp ( argv [ 1 ] , ""gamma"" ) == 0"	987:15:27686:27714	7310586	0	True				
ANR	7310772	EqualityExpression	"strcmp ( argv [ 1 ] , ""gamma"" ) == 0"		7310586	0		==			
ANR	7310773	CallExpression	"strcmp ( argv [ 1 ] , ""gamma"" )"		7310586	0					
ANR	7310774	Callee	strcmp		7310586	0					
ANR	7310775	Identifier	strcmp		7310586	0					
ANR	7310776	ArgumentList	argv [ 1 ]		7310586	1					
ANR	7310777	Argument	argv [ 1 ]		7310586	0					
ANR	7310778	ArrayIndexing	argv [ 1 ]		7310586	0					
ANR	7310779	Identifier	argv		7310586	0					
ANR	7310780	PrimaryExpression	1		7310586	1					
ANR	7310781	Argument	"""gamma"""		7310586	1					
ANR	7310782	PrimaryExpression	"""gamma"""		7310586	0					
ANR	7310783	PrimaryExpression	0		7310586	1					
ANR	7310784	ReturnStatement	"return validation_gamma ( argc - 1 , argv + 1 ) ;"	988:9:27726:27765	7310586	1	True				
ANR	7310785	CallExpression	"validation_gamma ( argc - 1 , argv + 1 )"		7310586	0					
ANR	7310786	Callee	validation_gamma		7310586	0					
ANR	7310787	Identifier	validation_gamma		7310586	0					
ANR	7310788	ArgumentList	argc - 1		7310586	1					
ANR	7310789	Argument	argc - 1		7310586	0					
ANR	7310790	AdditiveExpression	argc - 1		7310586	0		-			
ANR	7310791	Identifier	argc		7310586	0					
ANR	7310792	PrimaryExpression	1		7310586	1					
ANR	7310793	Argument	argv + 1		7310586	1					
ANR	7310794	AdditiveExpression	argv + 1		7310586	0		+			
ANR	7310795	Identifier	argv		7310586	0					
ANR	7310796	PrimaryExpression	1		7310586	1					
ANR	7310797	ExpressionStatement	"fprintf ( stderr , ""usage: tarith [-v] [-c count] {ascii,muldiv,gamma} [args]\\n"" )"	992:3:27799:27883	7310586	3	True				
ANR	7310798	CallExpression	"fprintf ( stderr , ""usage: tarith [-v] [-c count] {ascii,muldiv,gamma} [args]\\n"" )"		7310586	0					
ANR	7310799	Callee	fprintf		7310586	0					
ANR	7310800	Identifier	fprintf		7310586	0					
ANR	7310801	ArgumentList	stderr		7310586	1					
ANR	7310802	Argument	stderr		7310586	0					
ANR	7310803	Identifier	stderr		7310586	0					
ANR	7310804	Argument	"""usage: tarith [-v] [-c count] {ascii,muldiv,gamma} [args]\\n"""		7310586	1					
ANR	7310805	PrimaryExpression	"""usage: tarith [-v] [-c count] {ascii,muldiv,gamma} [args]\\n"""		7310586	0					
ANR	7310806	ExpressionStatement	"fprintf ( stderr , "" arguments: ascii [-a (all results)] [-e error%%]\\n"" )"	994:3:27888:27958	7310586	4	True				
ANR	7310807	CallExpression	"fprintf ( stderr , "" arguments: ascii [-a (all results)] [-e error%%]\\n"" )"		7310586	0					
ANR	7310808	Callee	fprintf		7310586	0					
ANR	7310809	Identifier	fprintf		7310586	0					
ANR	7310810	ArgumentList	stderr		7310586	1					
ANR	7310811	Argument	stderr		7310586	0					
ANR	7310812	Identifier	stderr		7310586	0					
ANR	7310813	Argument	""" arguments: ascii [-a (all results)] [-e error%%]\\n"""		7310586	1					
ANR	7310814	PrimaryExpression	""" arguments: ascii [-a (all results)] [-e error%%]\\n"""		7310586	0					
ANR	7310815	ExpressionStatement	"fprintf ( stderr , ""            checkfp [-l max-number-chars]\\n"" )"	995:3:27963:28025	7310586	5	True				
ANR	7310816	CallExpression	"fprintf ( stderr , ""            checkfp [-l max-number-chars]\\n"" )"		7310586	0					
ANR	7310817	Callee	fprintf		7310586	0					
ANR	7310818	Identifier	fprintf		7310586	0					
ANR	7310819	ArgumentList	stderr		7310586	1					
ANR	7310820	Argument	stderr		7310586	0					
ANR	7310821	Identifier	stderr		7310586	0					
ANR	7310822	Argument	"""            checkfp [-l max-number-chars]\\n"""		7310586	1					
ANR	7310823	PrimaryExpression	"""            checkfp [-l max-number-chars]\\n"""		7310586	0					
ANR	7310824	ExpressionStatement	"fprintf ( stderr , ""            muldiv\\n"" )"	996:3:28030:28069	7310586	6	True				
ANR	7310825	CallExpression	"fprintf ( stderr , ""            muldiv\\n"" )"		7310586	0					
ANR	7310826	Callee	fprintf		7310586	0					
ANR	7310827	Identifier	fprintf		7310586	0					
ANR	7310828	ArgumentList	stderr		7310586	1					
ANR	7310829	Argument	stderr		7310586	0					
ANR	7310830	Identifier	stderr		7310586	0					
ANR	7310831	Argument	"""            muldiv\\n"""		7310586	1					
ANR	7310832	PrimaryExpression	"""            muldiv\\n"""		7310586	0					
ANR	7310833	ExpressionStatement	"fprintf ( stderr , ""            gamma -s (silent) -g (only gamma; no log)\\n"" )"	997:3:28074:28148	7310586	7	True				
ANR	7310834	CallExpression	"fprintf ( stderr , ""            gamma -s (silent) -g (only gamma; no log)\\n"" )"		7310586	0					
ANR	7310835	Callee	fprintf		7310586	0					
ANR	7310836	Identifier	fprintf		7310586	0					
ANR	7310837	ArgumentList	stderr		7310586	1					
ANR	7310838	Argument	stderr		7310586	0					
ANR	7310839	Identifier	stderr		7310586	0					
ANR	7310840	Argument	"""            gamma -s (silent) -g (only gamma; no log)\\n"""		7310586	1					
ANR	7310841	PrimaryExpression	"""            gamma -s (silent) -g (only gamma; no log)\\n"""		7310586	0					
ANR	7310842	ReturnStatement	return 1 ;	998:3:28153:28161	7310586	8	True				
ANR	7310843	PrimaryExpression	1		7310586	0					
ANR	7310844	ReturnType	int		7310586	1					
ANR	7310845	Identifier	main		7310586	2					
ANR	7310846	ParameterList	"int argc , char * * argv"		7310586	3					
ANR	7310847	Parameter	int argc	955:9:26961:26968	7310586	0	True				
ANR	7310848	ParameterType	int		7310586	0					
ANR	7310849	Identifier	argc		7310586	1					
ANR	7310850	Parameter	char * * argv	955:19:26971:26981	7310586	1	True				
ANR	7310851	ParameterType	char * *		7310586	0					
ANR	7310852	Identifier	argv		7310586	1					
ANR	7310853	CFGEntryNode	ENTRY		7310586		True				
ANR	7310854	CFGExitNode	EXIT		7310586		True				
ANR	7310855	Symbol	argc		7310586						
ANR	7310856	Symbol	strcmp		7310586						
ANR	7310857	Symbol	atoi		7310586						
ANR	7310858	Symbol	validation_ascii_to_fp		7310586						
ANR	7310859	Symbol	count		7310586						
ANR	7310860	Symbol	validation_gamma		7310586						
ANR	7310861	Symbol	COUNT		7310586						
ANR	7310862	Symbol	* argv		7310586						
ANR	7310863	Symbol	validation_checkfp		7310586						
ANR	7310864	Symbol	validation_muldiv		7310586						
ANR	7310865	Symbol	stderr		7310586						
ANR	7310866	Symbol	argv		7310586						
