command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10499122	File	data/converged/CVE-2018-16863_ghostpdl/toolbin_jpxtopdf.c								
ANR	10499123	DeclStmt									
ANR	10499124	Decl							int	int [ 8000 ]	pages
ANR	10499125	DeclStmt									
ANR	10499126	Decl							int	int	npages
ANR	10499127	DeclStmt									
ANR	10499128	Decl							int	int [ 8000 * 3 + 100 ]	xref
ANR	10499129	DeclStmt									
ANR	10499130	Decl							int	int	nxref
ANR	10499131	ClassDef	<unnamed>	33:8:911:1379							
ANR	10499132	DeclStmt									
ANR	10499133	Decl							char	char *	filename
ANR	10499134	DeclStmt									
ANR	10499135	Decl							int	int	filesize
ANR	10499136	DeclStmt									
ANR	10499137	Decl							int	int	width
ANR	10499138	DeclStmt									
ANR	10499139	Decl							int	int	height
ANR	10499140	DeclStmt									
ANR	10499141	Decl							int	int	numcmpts
ANR	10499142	DeclStmt									
ANR	10499143	Decl							int	int	depth
ANR	10499144	DeclStmt									
ANR	10499145	Decl							double	double	dpi
ANR	10499146	DeclStmt									
ANR	10499147	Decl									imagedata
ANR	10499148	ClassDef	<unnamed>	48:0:1464:1483							
ANR	10499149	ClassDef	box_s	50:8:1495:1787							
ANR	10499150	DeclStmt									
ANR	10499151	Decl							unsigned int	unsigned int	length
ANR	10499152	DeclStmt									
ANR	10499153	Decl							char	char [ 5 ]	type
ANR	10499154	DeclStmt									
ANR	10499155	Decl							const unsigned char	const unsigned char *	data
ANR	10499156	DeclStmt									
ANR	10499157	Decl							unsigned int	unsigned int	size
ANR	10499158	DeclStmt									
ANR	10499159	Decl							void	void *	rez
ANR	10499160	DeclStmt									
ANR	10499161	Decl							struct box_s	struct box_s *	next
ANR	10499162	DeclStmt									
ANR	10499163	Decl							box_s	box_s	box_t
ANR	10499164	ClassDef	<unnamed>	59:8:1798:1860							
ANR	10499165	DeclStmt									
ANR	10499166	Decl							char	char [ 5 ]	brand
ANR	10499167	DeclStmt									
ANR	10499168	Decl							unsigned int	unsigned int	version
ANR	10499169	DeclStmt									
ANR	10499170	Decl									box_ftyp_t
ANR	10499171	ClassDef	<unnamed>	64:8:1871:2199							
ANR	10499172	DeclStmt									
ANR	10499173	Decl							unsigned int	unsigned int	width
ANR	10499174	Decl							unsigned int	unsigned int	height
ANR	10499175	DeclStmt									
ANR	10499176	Decl							unsigned int	unsigned int	nc
ANR	10499177	DeclStmt									
ANR	10499178	Decl							int	int	bpc
ANR	10499179	DeclStmt									
ANR	10499180	Decl							int	int	sign
ANR	10499181	DeclStmt									
ANR	10499182	Decl							int	int	C
ANR	10499183	DeclStmt									
ANR	10499184	Decl							int	int	UnkC
ANR	10499185	DeclStmt									
ANR	10499186	Decl							int	int	IPR
ANR	10499187	DeclStmt									
ANR	10499188	Decl									box_ihdr_t
ANR	10499189	Function	read_uint32	74:0:2202:2319							
ANR	10499190	FunctionDef	read_uint32 (const unsigned char * p)		10499189	0					
ANR	10499191	CompoundStatement		75:0:2258:2319	10499189	0					
ANR	10499192	ReturnStatement	return ( p [ 0 ] << 24 ) | ( p [ 1 ] << 16 ) | ( p [ 2 ] << 8 ) | p [ 3 ] ;	76:2:2262:2317	10499189	0	True				
ANR	10499193	InclusiveOrExpression	( p [ 0 ] << 24 ) | ( p [ 1 ] << 16 ) | ( p [ 2 ] << 8 ) | p [ 3 ]		10499189	0		|			
ANR	10499194	ShiftExpression	p [ 0 ] << 24		10499189	0		<<			
ANR	10499195	ArrayIndexing	p [ 0 ]		10499189	0					
ANR	10499196	Identifier	p		10499189	0					
ANR	10499197	PrimaryExpression	0		10499189	1					
ANR	10499198	PrimaryExpression	24		10499189	1					
ANR	10499199	InclusiveOrExpression	( p [ 1 ] << 16 ) | ( p [ 2 ] << 8 ) | p [ 3 ]		10499189	1		|			
ANR	10499200	ShiftExpression	p [ 1 ] << 16		10499189	0		<<			
ANR	10499201	ArrayIndexing	p [ 1 ]		10499189	0					
ANR	10499202	Identifier	p		10499189	0					
ANR	10499203	PrimaryExpression	1		10499189	1					
ANR	10499204	PrimaryExpression	16		10499189	1					
ANR	10499205	InclusiveOrExpression	( p [ 2 ] << 8 ) | p [ 3 ]		10499189	1		|			
ANR	10499206	ShiftExpression	p [ 2 ] << 8		10499189	0		<<			
ANR	10499207	ArrayIndexing	p [ 2 ]		10499189	0					
ANR	10499208	Identifier	p		10499189	0					
ANR	10499209	PrimaryExpression	2		10499189	1					
ANR	10499210	PrimaryExpression	8		10499189	1					
ANR	10499211	ArrayIndexing	p [ 3 ]		10499189	1					
ANR	10499212	Identifier	p		10499189	0					
ANR	10499213	PrimaryExpression	3		10499189	1					
ANR	10499214	ReturnType	static unsigned int		10499189	1					
ANR	10499215	Identifier	read_uint32		10499189	2					
ANR	10499216	ParameterList	const unsigned char * p		10499189	3					
ANR	10499217	Parameter	const unsigned char * p	74:32:2234:2255	10499189	0	True				
ANR	10499218	ParameterType	const unsigned char *		10499189	0					
ANR	10499219	Identifier	p		10499189	1					
ANR	10499220	CFGEntryNode	ENTRY		10499189		True				
ANR	10499221	CFGExitNode	EXIT		10499189		True				
ANR	10499222	Symbol	p		10499189						
ANR	10499223	Symbol	* p		10499189						
ANR	10499224	Function	read_uint16	79:0:2322:2409							
ANR	10499225	FunctionDef	read_uint16 (const unsigned char * p)		10499224	0					
ANR	10499226	CompoundStatement		80:0:2378:2409	10499224	0					
ANR	10499227	ReturnStatement	return ( p [ 0 ] << 8 ) | p [ 1 ] ;	81:2:2382:2407	10499224	0	True				
ANR	10499228	InclusiveOrExpression	( p [ 0 ] << 8 ) | p [ 1 ]		10499224	0		|			
ANR	10499229	ShiftExpression	p [ 0 ] << 8		10499224	0		<<			
ANR	10499230	ArrayIndexing	p [ 0 ]		10499224	0					
ANR	10499231	Identifier	p		10499224	0					
ANR	10499232	PrimaryExpression	0		10499224	1					
ANR	10499233	PrimaryExpression	8		10499224	1					
ANR	10499234	ArrayIndexing	p [ 1 ]		10499224	1					
ANR	10499235	Identifier	p		10499224	0					
ANR	10499236	PrimaryExpression	1		10499224	1					
ANR	10499237	ReturnType	static unsigned int		10499224	1					
ANR	10499238	Identifier	read_uint16		10499224	2					
ANR	10499239	ParameterList	const unsigned char * p		10499224	3					
ANR	10499240	Parameter	const unsigned char * p	79:32:2354:2375	10499224	0	True				
ANR	10499241	ParameterType	const unsigned char *		10499224	0					
ANR	10499242	Identifier	p		10499224	1					
ANR	10499243	CFGEntryNode	ENTRY		10499224		True				
ANR	10499244	CFGExitNode	EXIT		10499224		True				
ANR	10499245	Symbol	p		10499224						
ANR	10499246	Symbol	* p		10499224						
ANR	10499247	Function	box_free	84:0:2412:2506							
ANR	10499248	FunctionDef	box_free (box_t * box)		10499247	0					
ANR	10499249	CompoundStatement		85:0:2438:2506	10499247	0					
ANR	10499250	IfStatement	if ( box )		10499247	0					
ANR	10499251	Condition	box	86:6:2446:2448	10499247	0	True				
ANR	10499252	Identifier	box		10499247	0					
ANR	10499253	CompoundStatement		2:11:12:12	10499247	1					
ANR	10499254	IfStatement	if ( box -> rez )		10499247	0					
ANR	10499255	Condition	box -> rez	87:8:2461:2468	10499247	0	True				
ANR	10499256	PtrMemberAccess	box -> rez		10499247	0					
ANR	10499257	Identifier	box		10499247	0					
ANR	10499258	Identifier	rez		10499247	1					
ANR	10499259	ExpressionStatement	free ( box -> rez )	87:18:2471:2485	10499247	1	True				
ANR	10499260	CallExpression	free ( box -> rez )		10499247	0					
ANR	10499261	Callee	free		10499247	0					
ANR	10499262	Identifier	free		10499247	0					
ANR	10499263	ArgumentList	box -> rez		10499247	1					
ANR	10499264	Argument	box -> rez		10499247	0					
ANR	10499265	PtrMemberAccess	box -> rez		10499247	0					
ANR	10499266	Identifier	box		10499247	0					
ANR	10499267	Identifier	rez		10499247	1					
ANR	10499268	ExpressionStatement	free ( box )	88:4:2491:2500	10499247	1	True				
ANR	10499269	CallExpression	free ( box )		10499247	0					
ANR	10499270	Callee	free		10499247	0					
ANR	10499271	Identifier	free		10499247	0					
ANR	10499272	ArgumentList	box		10499247	1					
ANR	10499273	Argument	box		10499247	0					
ANR	10499274	Identifier	box		10499247	0					
ANR	10499275	ReturnType	void		10499247	1					
ANR	10499276	Identifier	box_free		10499247	2					
ANR	10499277	ParameterList	box_t * box		10499247	3					
ANR	10499278	Parameter	box_t * box	84:14:2426:2435	10499247	0	True				
ANR	10499279	ParameterType	box_t *		10499247	0					
ANR	10499280	Identifier	box		10499247	1					
ANR	10499281	CFGEntryNode	ENTRY		10499247		True				
ANR	10499282	CFGExitNode	EXIT		10499247		True				
ANR	10499283	Symbol	box		10499247						
ANR	10499284	Symbol	* box		10499247						
ANR	10499285	Symbol	box -> rez		10499247						
ANR	10499286	Function	box_read	92:0:2509:3690							
ANR	10499287	FunctionDef	"box_read (const unsigned char * buf , const long size)"		10499286	0					
ANR	10499288	CompoundStatement		93:0:2568:3690	10499286	0					
ANR	10499289	IdentifierDeclStatement	box_t * box ;	94:2:2572:2582	10499286	0	True				
ANR	10499290	IdentifierDecl	* box		10499286	0					
ANR	10499291	IdentifierDeclType	box_t *		10499286	0					
ANR	10499292	Identifier	box		10499286	1					
ANR	10499293	IfStatement	if ( size < 8 )		10499286	1					
ANR	10499294	Condition	size < 8	96:6:2591:2598	10499286	0	True				
ANR	10499295	RelationalExpression	size < 8		10499286	0		<			
ANR	10499296	Identifier	size		10499286	0					
ANR	10499297	PrimaryExpression	8		10499286	1					
ANR	10499298	ReturnStatement	return NULL ;	96:16:2601:2612	10499286	1	True				
ANR	10499299	Identifier	NULL		10499286	0					
ANR	10499300	ExpressionStatement	box = malloc ( sizeof ( * box ) )	98:2:2617:2643	10499286	2	True				
ANR	10499301	AssignmentExpression	box = malloc ( sizeof ( * box ) )		10499286	0		=			
ANR	10499302	Identifier	box		10499286	0					
ANR	10499303	CallExpression	malloc ( sizeof ( * box ) )		10499286	1					
ANR	10499304	Callee	malloc		10499286	0					
ANR	10499305	Identifier	malloc		10499286	0					
ANR	10499306	ArgumentList	sizeof ( * box )		10499286	1					
ANR	10499307	Argument	sizeof ( * box )		10499286	0					
ANR	10499308	SizeofExpression	sizeof ( * box )		10499286	0					
ANR	10499309	Sizeof	sizeof		10499286	0					
ANR	10499310	UnaryOperationExpression	* box		10499286	1					
ANR	10499311	UnaryOperator	*		10499286	0					
ANR	10499312	Identifier	box		10499286	1					
ANR	10499313	IfStatement	if ( box )		10499286	3					
ANR	10499314	Condition	box	99:6:2651:2653	10499286	0	True				
ANR	10499315	Identifier	box		10499286	0					
ANR	10499316	CompoundStatement		7:11:87:87	10499286	1					
ANR	10499317	ExpressionStatement	box -> length = read_uint32 ( buf )	100:4:2662:2692	10499286	0	True				
ANR	10499318	AssignmentExpression	box -> length = read_uint32 ( buf )		10499286	0		=			
ANR	10499319	PtrMemberAccess	box -> length		10499286	0					
ANR	10499320	Identifier	box		10499286	0					
ANR	10499321	Identifier	length		10499286	1					
ANR	10499322	CallExpression	read_uint32 ( buf )		10499286	1					
ANR	10499323	Callee	read_uint32		10499286	0					
ANR	10499324	Identifier	read_uint32		10499286	0					
ANR	10499325	ArgumentList	buf		10499286	1					
ANR	10499326	Argument	buf		10499286	0					
ANR	10499327	Identifier	buf		10499286	0					
ANR	10499328	ExpressionStatement	"memcpy ( box -> type , buf + 4 , 4 )"	101:4:2698:2727	10499286	1	True				
ANR	10499329	CallExpression	"memcpy ( box -> type , buf + 4 , 4 )"		10499286	0					
ANR	10499330	Callee	memcpy		10499286	0					
ANR	10499331	Identifier	memcpy		10499286	0					
ANR	10499332	ArgumentList	box -> type		10499286	1					
ANR	10499333	Argument	box -> type		10499286	0					
ANR	10499334	PtrMemberAccess	box -> type		10499286	0					
ANR	10499335	Identifier	box		10499286	0					
ANR	10499336	Identifier	type		10499286	1					
ANR	10499337	Argument	buf + 4		10499286	1					
ANR	10499338	AdditiveExpression	buf + 4		10499286	0		+			
ANR	10499339	Identifier	buf		10499286	0					
ANR	10499340	PrimaryExpression	4		10499286	1					
ANR	10499341	Argument	4		10499286	2					
ANR	10499342	PrimaryExpression	4		10499286	0					
ANR	10499343	ExpressionStatement	box -> type [ 4 ] = '\\0'	102:4:2733:2752	10499286	2	True				
ANR	10499344	AssignmentExpression	box -> type [ 4 ] = '\\0'		10499286	0		=			
ANR	10499345	ArrayIndexing	box -> type [ 4 ]		10499286	0					
ANR	10499346	PtrMemberAccess	box -> type		10499286	0					
ANR	10499347	Identifier	box		10499286	0					
ANR	10499348	Identifier	type		10499286	1					
ANR	10499349	PrimaryExpression	4		10499286	1					
ANR	10499350	PrimaryExpression	'\\0'		10499286	1					
ANR	10499351	ExpressionStatement	box -> data = buf + 8	103:4:2758:2777	10499286	3	True				
ANR	10499352	AssignmentExpression	box -> data = buf + 8		10499286	0		=			
ANR	10499353	PtrMemberAccess	box -> data		10499286	0					
ANR	10499354	Identifier	box		10499286	0					
ANR	10499355	Identifier	data		10499286	1					
ANR	10499356	AdditiveExpression	buf + 8		10499286	1		+			
ANR	10499357	Identifier	buf		10499286	0					
ANR	10499358	PrimaryExpression	8		10499286	1					
ANR	10499359	ExpressionStatement	"box -> size = MIN ( box -> length , size )"	104:4:2783:2817	10499286	4	True				
ANR	10499360	AssignmentExpression	"box -> size = MIN ( box -> length , size )"		10499286	0		=			
ANR	10499361	PtrMemberAccess	box -> size		10499286	0					
ANR	10499362	Identifier	box		10499286	0					
ANR	10499363	Identifier	size		10499286	1					
ANR	10499364	CallExpression	"MIN ( box -> length , size )"		10499286	1					
ANR	10499365	Callee	MIN		10499286	0					
ANR	10499366	Identifier	MIN		10499286	0					
ANR	10499367	ArgumentList	box -> length		10499286	1					
ANR	10499368	Argument	box -> length		10499286	0					
ANR	10499369	PtrMemberAccess	box -> length		10499286	0					
ANR	10499370	Identifier	box		10499286	0					
ANR	10499371	Identifier	length		10499286	1					
ANR	10499372	Argument	size		10499286	1					
ANR	10499373	Identifier	size		10499286	0					
ANR	10499374	ExpressionStatement	box -> rez = NULL	105:4:2823:2838	10499286	5	True				
ANR	10499375	AssignmentExpression	box -> rez = NULL		10499286	0		=			
ANR	10499376	PtrMemberAccess	box -> rez		10499286	0					
ANR	10499377	Identifier	box		10499286	0					
ANR	10499378	Identifier	rez		10499286	1					
ANR	10499379	Identifier	NULL		10499286	1					
ANR	10499380	ExpressionStatement	box -> next = NULL	106:4:2844:2860	10499286	6	True				
ANR	10499381	AssignmentExpression	box -> next = NULL		10499286	0		=			
ANR	10499382	PtrMemberAccess	box -> next		10499286	0					
ANR	10499383	Identifier	box		10499286	0					
ANR	10499384	Identifier	next		10499286	1					
ANR	10499385	Identifier	NULL		10499286	1					
ANR	10499386	IfStatement	"if ( ! memcmp ( box -> type , ""ftyp"" , 4 ) )"		10499286	7					
ANR	10499387	Condition	"! memcmp ( box -> type , ""ftyp"" , 4 )"	108:8:2871:2899	10499286	0	True				
ANR	10499388	UnaryOperationExpression	"! memcmp ( box -> type , ""ftyp"" , 4 )"		10499286	0					
ANR	10499389	UnaryOperator	!		10499286	0					
ANR	10499390	CallExpression	"memcmp ( box -> type , ""ftyp"" , 4 )"		10499286	1					
ANR	10499391	Callee	memcmp		10499286	0					
ANR	10499392	Identifier	memcmp		10499286	0					
ANR	10499393	ArgumentList	box -> type		10499286	1					
ANR	10499394	Argument	box -> type		10499286	0					
ANR	10499395	PtrMemberAccess	box -> type		10499286	0					
ANR	10499396	Identifier	box		10499286	0					
ANR	10499397	Identifier	type		10499286	1					
ANR	10499398	Argument	"""ftyp"""		10499286	1					
ANR	10499399	PrimaryExpression	"""ftyp"""		10499286	0					
ANR	10499400	Argument	4		10499286	2					
ANR	10499401	PrimaryExpression	4		10499286	0					
ANR	10499402	CompoundStatement		18:6:367:407	10499286	1					
ANR	10499403	IdentifierDeclStatement	box_ftyp_t * ftyp = malloc ( sizeof ( * ftyp ) ) ;	110:6:2936:2976	10499286	0	True				
ANR	10499404	IdentifierDecl	* ftyp = malloc ( sizeof ( * ftyp ) )		10499286	0					
ANR	10499405	IdentifierDeclType	box_ftyp_t *		10499286	0					
ANR	10499406	Identifier	ftyp		10499286	1					
ANR	10499407	AssignmentExpression	* ftyp = malloc ( sizeof ( * ftyp ) )		10499286	2		=			
ANR	10499408	Identifier	ftyp		10499286	0					
ANR	10499409	CallExpression	malloc ( sizeof ( * ftyp ) )		10499286	1					
ANR	10499410	Callee	malloc		10499286	0					
ANR	10499411	Identifier	malloc		10499286	0					
ANR	10499412	ArgumentList	sizeof ( * ftyp )		10499286	1					
ANR	10499413	Argument	sizeof ( * ftyp )		10499286	0					
ANR	10499414	SizeofExpression	sizeof ( * ftyp )		10499286	0					
ANR	10499415	Sizeof	sizeof		10499286	0					
ANR	10499416	UnaryOperationExpression	* ftyp		10499286	1					
ANR	10499417	UnaryOperator	*		10499286	0					
ANR	10499418	Identifier	ftyp		10499286	1					
ANR	10499419	IfStatement	if ( ftyp )		10499286	1					
ANR	10499420	Condition	ftyp	111:10:2988:2991	10499286	0	True				
ANR	10499421	Identifier	ftyp		10499286	0					
ANR	10499422	CompoundStatement		19:16:425:425	10499286	1					
ANR	10499423	ExpressionStatement	"memcpy ( ftyp -> brand , box -> data , 4 )"	112:8:3004:3037	10499286	0	True				
ANR	10499424	CallExpression	"memcpy ( ftyp -> brand , box -> data , 4 )"		10499286	0					
ANR	10499425	Callee	memcpy		10499286	0					
ANR	10499426	Identifier	memcpy		10499286	0					
ANR	10499427	ArgumentList	ftyp -> brand		10499286	1					
ANR	10499428	Argument	ftyp -> brand		10499286	0					
ANR	10499429	PtrMemberAccess	ftyp -> brand		10499286	0					
ANR	10499430	Identifier	ftyp		10499286	0					
ANR	10499431	Identifier	brand		10499286	1					
ANR	10499432	Argument	box -> data		10499286	1					
ANR	10499433	PtrMemberAccess	box -> data		10499286	0					
ANR	10499434	Identifier	box		10499286	0					
ANR	10499435	Identifier	data		10499286	1					
ANR	10499436	Argument	4		10499286	2					
ANR	10499437	PrimaryExpression	4		10499286	0					
ANR	10499438	ExpressionStatement	ftyp -> brand [ 4 ] = '\\0'	113:8:3047:3068	10499286	1	True				
ANR	10499439	AssignmentExpression	ftyp -> brand [ 4 ] = '\\0'		10499286	0		=			
ANR	10499440	ArrayIndexing	ftyp -> brand [ 4 ]		10499286	0					
ANR	10499441	PtrMemberAccess	ftyp -> brand		10499286	0					
ANR	10499442	Identifier	ftyp		10499286	0					
ANR	10499443	Identifier	brand		10499286	1					
ANR	10499444	PrimaryExpression	4		10499286	1					
ANR	10499445	PrimaryExpression	'\\0'		10499286	1					
ANR	10499446	ExpressionStatement	ftyp -> version = read_uint32 ( box -> data + 4 )	114:8:3078:3120	10499286	2	True				
ANR	10499447	AssignmentExpression	ftyp -> version = read_uint32 ( box -> data + 4 )		10499286	0		=			
ANR	10499448	PtrMemberAccess	ftyp -> version		10499286	0					
ANR	10499449	Identifier	ftyp		10499286	0					
ANR	10499450	Identifier	version		10499286	1					
ANR	10499451	CallExpression	read_uint32 ( box -> data + 4 )		10499286	1					
ANR	10499452	Callee	read_uint32		10499286	0					
ANR	10499453	Identifier	read_uint32		10499286	0					
ANR	10499454	ArgumentList	box -> data + 4		10499286	1					
ANR	10499455	Argument	box -> data + 4		10499286	0					
ANR	10499456	AdditiveExpression	box -> data + 4		10499286	0		+			
ANR	10499457	PtrMemberAccess	box -> data		10499286	0					
ANR	10499458	Identifier	box		10499286	0					
ANR	10499459	Identifier	data		10499286	1					
ANR	10499460	PrimaryExpression	4		10499286	1					
ANR	10499461	ExpressionStatement	box -> rez = ftyp	116:6:3136:3151	10499286	2	True				
ANR	10499462	AssignmentExpression	box -> rez = ftyp		10499286	0		=			
ANR	10499463	PtrMemberAccess	box -> rez		10499286	0					
ANR	10499464	Identifier	box		10499286	0					
ANR	10499465	Identifier	rez		10499286	1					
ANR	10499466	Identifier	ftyp		10499286	1					
ANR	10499467	ElseStatement	else		10499286	0					
ANR	10499468	IfStatement	"if ( ! memcmp ( box -> type , ""ihdr"" , 4 ) )"		10499286	0					
ANR	10499469	Condition	"! memcmp ( box -> type , ""ihdr"" , 4 )"	117:15:3168:3196	10499286	0	True				
ANR	10499470	UnaryOperationExpression	"! memcmp ( box -> type , ""ihdr"" , 4 )"		10499286	0					
ANR	10499471	UnaryOperator	!		10499286	0					
ANR	10499472	CallExpression	"memcmp ( box -> type , ""ihdr"" , 4 )"		10499286	1					
ANR	10499473	Callee	memcmp		10499286	0					
ANR	10499474	Identifier	memcmp		10499286	0					
ANR	10499475	ArgumentList	box -> type		10499286	1					
ANR	10499476	Argument	box -> type		10499286	0					
ANR	10499477	PtrMemberAccess	box -> type		10499286	0					
ANR	10499478	Identifier	box		10499286	0					
ANR	10499479	Identifier	type		10499286	1					
ANR	10499480	Argument	"""ihdr"""		10499286	1					
ANR	10499481	PrimaryExpression	"""ihdr"""		10499286	0					
ANR	10499482	Argument	4		10499286	2					
ANR	10499483	PrimaryExpression	4		10499286	0					
ANR	10499484	CompoundStatement		27:6:667:707	10499286	1					
ANR	10499485	IdentifierDeclStatement	box_ihdr_t * ihdr = malloc ( sizeof ( * ihdr ) ) ;	119:6:3236:3276	10499286	0	True				
ANR	10499486	IdentifierDecl	* ihdr = malloc ( sizeof ( * ihdr ) )		10499286	0					
ANR	10499487	IdentifierDeclType	box_ihdr_t *		10499286	0					
ANR	10499488	Identifier	ihdr		10499286	1					
ANR	10499489	AssignmentExpression	* ihdr = malloc ( sizeof ( * ihdr ) )		10499286	2		=			
ANR	10499490	Identifier	ihdr		10499286	0					
ANR	10499491	CallExpression	malloc ( sizeof ( * ihdr ) )		10499286	1					
ANR	10499492	Callee	malloc		10499286	0					
ANR	10499493	Identifier	malloc		10499286	0					
ANR	10499494	ArgumentList	sizeof ( * ihdr )		10499286	1					
ANR	10499495	Argument	sizeof ( * ihdr )		10499286	0					
ANR	10499496	SizeofExpression	sizeof ( * ihdr )		10499286	0					
ANR	10499497	Sizeof	sizeof		10499286	0					
ANR	10499498	UnaryOperationExpression	* ihdr		10499286	1					
ANR	10499499	UnaryOperator	*		10499286	0					
ANR	10499500	Identifier	ihdr		10499286	1					
ANR	10499501	IfStatement	if ( ihdr )		10499286	1					
ANR	10499502	Condition	ihdr	120:10:3288:3291	10499286	0	True				
ANR	10499503	Identifier	ihdr		10499286	0					
ANR	10499504	CompoundStatement		28:16:725:725	10499286	1					
ANR	10499505	ExpressionStatement	ihdr -> height = read_uint32 ( box -> data )	121:8:3304:3341	10499286	0	True				
ANR	10499506	AssignmentExpression	ihdr -> height = read_uint32 ( box -> data )		10499286	0		=			
ANR	10499507	PtrMemberAccess	ihdr -> height		10499286	0					
ANR	10499508	Identifier	ihdr		10499286	0					
ANR	10499509	Identifier	height		10499286	1					
ANR	10499510	CallExpression	read_uint32 ( box -> data )		10499286	1					
ANR	10499511	Callee	read_uint32		10499286	0					
ANR	10499512	Identifier	read_uint32		10499286	0					
ANR	10499513	ArgumentList	box -> data		10499286	1					
ANR	10499514	Argument	box -> data		10499286	0					
ANR	10499515	PtrMemberAccess	box -> data		10499286	0					
ANR	10499516	Identifier	box		10499286	0					
ANR	10499517	Identifier	data		10499286	1					
ANR	10499518	ExpressionStatement	ihdr -> width = read_uint32 ( box -> data + 4 )	122:8:3351:3391	10499286	1	True				
ANR	10499519	AssignmentExpression	ihdr -> width = read_uint32 ( box -> data + 4 )		10499286	0		=			
ANR	10499520	PtrMemberAccess	ihdr -> width		10499286	0					
ANR	10499521	Identifier	ihdr		10499286	0					
ANR	10499522	Identifier	width		10499286	1					
ANR	10499523	CallExpression	read_uint32 ( box -> data + 4 )		10499286	1					
ANR	10499524	Callee	read_uint32		10499286	0					
ANR	10499525	Identifier	read_uint32		10499286	0					
ANR	10499526	ArgumentList	box -> data + 4		10499286	1					
ANR	10499527	Argument	box -> data + 4		10499286	0					
ANR	10499528	AdditiveExpression	box -> data + 4		10499286	0		+			
ANR	10499529	PtrMemberAccess	box -> data		10499286	0					
ANR	10499530	Identifier	box		10499286	0					
ANR	10499531	Identifier	data		10499286	1					
ANR	10499532	PrimaryExpression	4		10499286	1					
ANR	10499533	ExpressionStatement	ihdr -> nc = read_uint16 ( box -> data + 8 )	123:8:3401:3438	10499286	2	True				
ANR	10499534	AssignmentExpression	ihdr -> nc = read_uint16 ( box -> data + 8 )		10499286	0		=			
ANR	10499535	PtrMemberAccess	ihdr -> nc		10499286	0					
ANR	10499536	Identifier	ihdr		10499286	0					
ANR	10499537	Identifier	nc		10499286	1					
ANR	10499538	CallExpression	read_uint16 ( box -> data + 8 )		10499286	1					
ANR	10499539	Callee	read_uint16		10499286	0					
ANR	10499540	Identifier	read_uint16		10499286	0					
ANR	10499541	ArgumentList	box -> data + 8		10499286	1					
ANR	10499542	Argument	box -> data + 8		10499286	0					
ANR	10499543	AdditiveExpression	box -> data + 8		10499286	0		+			
ANR	10499544	PtrMemberAccess	box -> data		10499286	0					
ANR	10499545	Identifier	box		10499286	0					
ANR	10499546	Identifier	data		10499286	1					
ANR	10499547	PrimaryExpression	8		10499286	1					
ANR	10499548	ExpressionStatement	ihdr -> bpc = ( box -> data [ 10 ] & 0x7f ) + 1	124:8:3448:3486	10499286	3	True				
ANR	10499549	AssignmentExpression	ihdr -> bpc = ( box -> data [ 10 ] & 0x7f ) + 1		10499286	0		=			
ANR	10499550	PtrMemberAccess	ihdr -> bpc		10499286	0					
ANR	10499551	Identifier	ihdr		10499286	0					
ANR	10499552	Identifier	bpc		10499286	1					
ANR	10499553	AdditiveExpression	( box -> data [ 10 ] & 0x7f ) + 1		10499286	1		+			
ANR	10499554	BitAndExpression	box -> data [ 10 ] & 0x7f		10499286	0		&			
ANR	10499555	ArrayIndexing	box -> data [ 10 ]		10499286	0					
ANR	10499556	PtrMemberAccess	box -> data		10499286	0					
ANR	10499557	Identifier	box		10499286	0					
ANR	10499558	Identifier	data		10499286	1					
ANR	10499559	PrimaryExpression	10		10499286	1					
ANR	10499560	PrimaryExpression	0x7f		10499286	1					
ANR	10499561	PrimaryExpression	1		10499286	1					
ANR	10499562	ExpressionStatement	ihdr -> sign = box -> data [ 10 ] >> 7	125:8:3496:3527	10499286	4	True				
ANR	10499563	AssignmentExpression	ihdr -> sign = box -> data [ 10 ] >> 7		10499286	0		=			
ANR	10499564	PtrMemberAccess	ihdr -> sign		10499286	0					
ANR	10499565	Identifier	ihdr		10499286	0					
ANR	10499566	Identifier	sign		10499286	1					
ANR	10499567	ShiftExpression	box -> data [ 10 ] >> 7		10499286	1		>>			
ANR	10499568	ArrayIndexing	box -> data [ 10 ]		10499286	0					
ANR	10499569	PtrMemberAccess	box -> data		10499286	0					
ANR	10499570	Identifier	box		10499286	0					
ANR	10499571	Identifier	data		10499286	1					
ANR	10499572	PrimaryExpression	10		10499286	1					
ANR	10499573	PrimaryExpression	7		10499286	1					
ANR	10499574	ExpressionStatement	ihdr -> C = box -> data [ 11 ]	126:8:3537:3560	10499286	5	True				
ANR	10499575	AssignmentExpression	ihdr -> C = box -> data [ 11 ]		10499286	0		=			
ANR	10499576	PtrMemberAccess	ihdr -> C		10499286	0					
ANR	10499577	Identifier	ihdr		10499286	0					
ANR	10499578	Identifier	C		10499286	1					
ANR	10499579	ArrayIndexing	box -> data [ 11 ]		10499286	1					
ANR	10499580	PtrMemberAccess	box -> data		10499286	0					
ANR	10499581	Identifier	box		10499286	0					
ANR	10499582	Identifier	data		10499286	1					
ANR	10499583	PrimaryExpression	11		10499286	1					
ANR	10499584	ExpressionStatement	ihdr -> UnkC = box -> data [ 12 ]	127:8:3570:3596	10499286	6	True				
ANR	10499585	AssignmentExpression	ihdr -> UnkC = box -> data [ 12 ]		10499286	0		=			
ANR	10499586	PtrMemberAccess	ihdr -> UnkC		10499286	0					
ANR	10499587	Identifier	ihdr		10499286	0					
ANR	10499588	Identifier	UnkC		10499286	1					
ANR	10499589	ArrayIndexing	box -> data [ 12 ]		10499286	1					
ANR	10499590	PtrMemberAccess	box -> data		10499286	0					
ANR	10499591	Identifier	box		10499286	0					
ANR	10499592	Identifier	data		10499286	1					
ANR	10499593	PrimaryExpression	12		10499286	1					
ANR	10499594	ExpressionStatement	ihdr -> IPR = box -> data [ 13 ]	128:8:3606:3631	10499286	7	True				
ANR	10499595	AssignmentExpression	ihdr -> IPR = box -> data [ 13 ]		10499286	0		=			
ANR	10499596	PtrMemberAccess	ihdr -> IPR		10499286	0					
ANR	10499597	Identifier	ihdr		10499286	0					
ANR	10499598	Identifier	IPR		10499286	1					
ANR	10499599	ArrayIndexing	box -> data [ 13 ]		10499286	1					
ANR	10499600	PtrMemberAccess	box -> data		10499286	0					
ANR	10499601	Identifier	box		10499286	0					
ANR	10499602	Identifier	data		10499286	1					
ANR	10499603	PrimaryExpression	13		10499286	1					
ANR	10499604	ExpressionStatement	box -> rez = ihdr	130:6:3647:3662	10499286	2	True				
ANR	10499605	AssignmentExpression	box -> rez = ihdr		10499286	0		=			
ANR	10499606	PtrMemberAccess	box -> rez		10499286	0					
ANR	10499607	Identifier	box		10499286	0					
ANR	10499608	Identifier	rez		10499286	1					
ANR	10499609	Identifier	ihdr		10499286	1					
ANR	10499610	ReturnStatement	return box ;	135:2:3678:3688	10499286	4	True				
ANR	10499611	Identifier	box		10499286	0					
ANR	10499612	ReturnType	box_t *		10499286	1					
ANR	10499613	Identifier	box_read		10499286	2					
ANR	10499614	ParameterList	"const unsigned char * buf , const long size"		10499286	3					
ANR	10499615	Parameter	const unsigned char * buf	92:16:2525:2548	10499286	0	True				
ANR	10499616	ParameterType	const unsigned char *		10499286	0					
ANR	10499617	Identifier	buf		10499286	1					
ANR	10499618	Parameter	const long size	92:42:2551:2565	10499286	1	True				
ANR	10499619	ParameterType	const long		10499286	0					
ANR	10499620	Identifier	size		10499286	1					
ANR	10499621	CFGEntryNode	ENTRY		10499286		True				
ANR	10499622	CFGExitNode	EXIT		10499286		True				
ANR	10499623	Symbol	ihdr -> IPR		10499286						
ANR	10499624	Symbol	read_uint32		10499286						
ANR	10499625	Symbol	* ftyp		10499286						
ANR	10499626	Symbol	* * ftyp		10499286						
ANR	10499627	Symbol	ihdr -> UnkC		10499286						
ANR	10499628	Symbol	box		10499286						
ANR	10499629	Symbol	* box		10499286						
ANR	10499630	Symbol	ihdr -> nc		10499286						
ANR	10499631	Symbol	ihdr -> sign		10499286						
ANR	10499632	Symbol	box -> rez		10499286						
ANR	10499633	Symbol	read_uint16		10499286						
ANR	10499634	Symbol	memcmp		10499286						
ANR	10499635	Symbol	ftyp		10499286						
ANR	10499636	Symbol	ihdr -> bpc		10499286						
ANR	10499637	Symbol	box -> length		10499286						
ANR	10499638	Symbol	ihdr -> width		10499286						
ANR	10499639	Symbol	ihdr		10499286						
ANR	10499640	Symbol	* * box		10499286						
ANR	10499641	Symbol	box -> size		10499286						
ANR	10499642	Symbol	malloc		10499286						
ANR	10499643	Symbol	NULL		10499286						
ANR	10499644	Symbol	* box -> data		10499286						
ANR	10499645	Symbol	box -> type		10499286						
ANR	10499646	Symbol	* box -> type		10499286						
ANR	10499647	Symbol	ihdr -> height		10499286						
ANR	10499648	Symbol	box -> data		10499286						
ANR	10499649	Symbol	buf		10499286						
ANR	10499650	Symbol	MIN		10499286						
ANR	10499651	Symbol	size		10499286						
ANR	10499652	Symbol	box -> next		10499286						
ANR	10499653	Symbol	ftyp -> brand		10499286						
ANR	10499654	Symbol	ftyp -> version		10499286						
ANR	10499655	Symbol	* ihdr		10499286						
ANR	10499656	Symbol	ihdr -> C		10499286						
ANR	10499657	Symbol	* ftyp -> brand		10499286						
ANR	10499658	Function	box_print	139:0:3706:4504							
ANR	10499659	FunctionDef	box_print (box_t * box)		10499658	0					
ANR	10499660	CompoundStatement		140:0:3733:4504	10499658	0					
ANR	10499661	IfStatement	if ( box -> length )		10499658	0					
ANR	10499662	Condition	box -> length	141:6:3741:3751	10499658	0	True				
ANR	10499663	PtrMemberAccess	box -> length		10499658	0					
ANR	10499664	Identifier	box		10499658	0					
ANR	10499665	Identifier	length		10499658	1					
ANR	10499666	ExpressionStatement	"fprintf ( stderr , ""box '%s' (%u bytes)"" , box -> type , box -> length )"	142:4:3758:3820	10499658	1	True				
ANR	10499667	CallExpression	"fprintf ( stderr , ""box '%s' (%u bytes)"" , box -> type , box -> length )"		10499658	0					
ANR	10499668	Callee	fprintf		10499658	0					
ANR	10499669	Identifier	fprintf		10499658	0					
ANR	10499670	ArgumentList	stderr		10499658	1					
ANR	10499671	Argument	stderr		10499658	0					
ANR	10499672	Identifier	stderr		10499658	0					
ANR	10499673	Argument	"""box '%s' (%u bytes)"""		10499658	1					
ANR	10499674	PrimaryExpression	"""box '%s' (%u bytes)"""		10499658	0					
ANR	10499675	Argument	box -> type		10499658	2					
ANR	10499676	PtrMemberAccess	box -> type		10499658	0					
ANR	10499677	Identifier	box		10499658	0					
ANR	10499678	Identifier	type		10499658	1					
ANR	10499679	Argument	box -> length		10499658	3					
ANR	10499680	PtrMemberAccess	box -> length		10499658	0					
ANR	10499681	Identifier	box		10499658	0					
ANR	10499682	Identifier	length		10499658	1					
ANR	10499683	ElseStatement	else		10499658	0					
ANR	10499684	ExpressionStatement	"fprintf ( stderr , ""box '%s' EOF"" , box -> type )"	144:4:3833:3875	10499658	0	True				
ANR	10499685	CallExpression	"fprintf ( stderr , ""box '%s' EOF"" , box -> type )"		10499658	0					
ANR	10499686	Callee	fprintf		10499658	0					
ANR	10499687	Identifier	fprintf		10499658	0					
ANR	10499688	ArgumentList	stderr		10499658	1					
ANR	10499689	Argument	stderr		10499658	0					
ANR	10499690	Identifier	stderr		10499658	0					
ANR	10499691	Argument	"""box '%s' EOF"""		10499658	1					
ANR	10499692	PrimaryExpression	"""box '%s' EOF"""		10499658	0					
ANR	10499693	Argument	box -> type		10499658	2					
ANR	10499694	PtrMemberAccess	box -> type		10499658	0					
ANR	10499695	Identifier	box		10499658	0					
ANR	10499696	Identifier	type		10499658	1					
ANR	10499697	IfStatement	"if ( ! memcmp ( box -> type , ""ftyp"" , 4 ) )"		10499658	1					
ANR	10499698	Condition	"! memcmp ( box -> type , ""ftyp"" , 4 )"	146:6:3884:3912	10499658	0	True				
ANR	10499699	UnaryOperationExpression	"! memcmp ( box -> type , ""ftyp"" , 4 )"		10499658	0					
ANR	10499700	UnaryOperator	!		10499658	0					
ANR	10499701	CallExpression	"memcmp ( box -> type , ""ftyp"" , 4 )"		10499658	1					
ANR	10499702	Callee	memcmp		10499658	0					
ANR	10499703	Identifier	memcmp		10499658	0					
ANR	10499704	ArgumentList	box -> type		10499658	1					
ANR	10499705	Argument	box -> type		10499658	0					
ANR	10499706	PtrMemberAccess	box -> type		10499658	0					
ANR	10499707	Identifier	box		10499658	0					
ANR	10499708	Identifier	type		10499658	1					
ANR	10499709	Argument	"""ftyp"""		10499658	1					
ANR	10499710	PrimaryExpression	"""ftyp"""		10499658	0					
ANR	10499711	Argument	4		10499658	2					
ANR	10499712	PrimaryExpression	4		10499658	0					
ANR	10499713	CompoundStatement		9:4:211:238	10499658	1					
ANR	10499714	IdentifierDeclStatement	box_ftyp_t * ftyp = box -> rez ;	148:4:3945:3972	10499658	0	True				
ANR	10499715	IdentifierDecl	* ftyp = box -> rez		10499658	0					
ANR	10499716	IdentifierDeclType	box_ftyp_t *		10499658	0					
ANR	10499717	Identifier	ftyp		10499658	1					
ANR	10499718	AssignmentExpression	* ftyp = box -> rez		10499658	2		=			
ANR	10499719	Identifier	ftyp		10499658	0					
ANR	10499720	PtrMemberAccess	box -> rez		10499658	1					
ANR	10499721	Identifier	box		10499658	0					
ANR	10499722	Identifier	rez		10499658	1					
ANR	10499723	IfStatement	if ( ftyp )		10499658	1					
ANR	10499724	Condition	ftyp	149:8:3982:3985	10499658	0	True				
ANR	10499725	Identifier	ftyp		10499658	0					
ANR	10499726	ExpressionStatement	"fprintf ( stderr , "" brand '%s' version %u"" , ftyp -> brand , ftyp -> version )"	150:6:3994:4071	10499658	1	True				
ANR	10499727	CallExpression	"fprintf ( stderr , "" brand '%s' version %u"" , ftyp -> brand , ftyp -> version )"		10499658	0					
ANR	10499728	Callee	fprintf		10499658	0					
ANR	10499729	Identifier	fprintf		10499658	0					
ANR	10499730	ArgumentList	stderr		10499658	1					
ANR	10499731	Argument	stderr		10499658	0					
ANR	10499732	Identifier	stderr		10499658	0					
ANR	10499733	Argument	""" brand '%s' version %u"""		10499658	1					
ANR	10499734	PrimaryExpression	""" brand '%s' version %u"""		10499658	0					
ANR	10499735	Argument	ftyp -> brand		10499658	2					
ANR	10499736	PtrMemberAccess	ftyp -> brand		10499658	0					
ANR	10499737	Identifier	ftyp		10499658	0					
ANR	10499738	Identifier	brand		10499658	1					
ANR	10499739	Argument	ftyp -> version		10499658	3					
ANR	10499740	PtrMemberAccess	ftyp -> version		10499658	0					
ANR	10499741	Identifier	ftyp		10499658	0					
ANR	10499742	Identifier	version		10499658	1					
ANR	10499743	ElseStatement	else		10499658	0					
ANR	10499744	ExpressionStatement	"fprintf ( stderr , "" no parse result"" )"	153:6:4088:4123	10499658	0	True				
ANR	10499745	CallExpression	"fprintf ( stderr , "" no parse result"" )"		10499658	0					
ANR	10499746	Callee	fprintf		10499658	0					
ANR	10499747	Identifier	fprintf		10499658	0					
ANR	10499748	ArgumentList	stderr		10499658	1					
ANR	10499749	Argument	stderr		10499658	0					
ANR	10499750	Identifier	stderr		10499658	0					
ANR	10499751	Argument	""" no parse result"""		10499658	1					
ANR	10499752	PrimaryExpression	""" no parse result"""		10499658	0					
ANR	10499753	ElseStatement	else		10499658	0					
ANR	10499754	IfStatement	"if ( ! memcmp ( box -> type , ""ihdr"" , 4 ) )"		10499658	0					
ANR	10499755	Condition	"! memcmp ( box -> type , ""ihdr"" , 4 )"	154:13:4138:4166	10499658	0	True				
ANR	10499756	UnaryOperationExpression	"! memcmp ( box -> type , ""ihdr"" , 4 )"		10499658	0					
ANR	10499757	UnaryOperator	!		10499658	0					
ANR	10499758	CallExpression	"memcmp ( box -> type , ""ihdr"" , 4 )"		10499658	1					
ANR	10499759	Callee	memcmp		10499658	0					
ANR	10499760	Identifier	memcmp		10499658	0					
ANR	10499761	ArgumentList	box -> type		10499658	1					
ANR	10499762	Argument	box -> type		10499658	0					
ANR	10499763	PtrMemberAccess	box -> type		10499658	0					
ANR	10499764	Identifier	box		10499658	0					
ANR	10499765	Identifier	type		10499658	1					
ANR	10499766	Argument	"""ihdr"""		10499658	1					
ANR	10499767	PrimaryExpression	"""ihdr"""		10499658	0					
ANR	10499768	Argument	4		10499658	2					
ANR	10499769	PrimaryExpression	4		10499658	0					
ANR	10499770	CompoundStatement		17:4:468:495	10499658	1					
ANR	10499771	IdentifierDeclStatement	box_ihdr_t * ihdr = box -> rez ;	156:4:4202:4229	10499658	0	True				
ANR	10499772	IdentifierDecl	* ihdr = box -> rez		10499658	0					
ANR	10499773	IdentifierDeclType	box_ihdr_t *		10499658	0					
ANR	10499774	Identifier	ihdr		10499658	1					
ANR	10499775	AssignmentExpression	* ihdr = box -> rez		10499658	2		=			
ANR	10499776	Identifier	ihdr		10499658	0					
ANR	10499777	PtrMemberAccess	box -> rez		10499658	1					
ANR	10499778	Identifier	box		10499658	0					
ANR	10499779	Identifier	rez		10499658	1					
ANR	10499780	IfStatement	if ( ihdr )		10499658	1					
ANR	10499781	Condition	ihdr	157:8:4239:4242	10499658	0	True				
ANR	10499782	Identifier	ihdr		10499658	0					
ANR	10499783	ExpressionStatement	"fprintf ( stderr , "" %ux%u %u component image with %d bit %s samples"" , ihdr -> width , ihdr -> height , ihdr -> nc , ihdr -> bpc , ihdr -> sign ? ""signed"" : ""unsigned"" )"	158:8:4253:4420	10499658	1	True				
ANR	10499784	CallExpression	"fprintf ( stderr , "" %ux%u %u component image with %d bit %s samples"" , ihdr -> width , ihdr -> height , ihdr -> nc , ihdr -> bpc , ihdr -> sign ? ""signed"" : ""unsigned"" )"		10499658	0					
ANR	10499785	Callee	fprintf		10499658	0					
ANR	10499786	Identifier	fprintf		10499658	0					
ANR	10499787	ArgumentList	stderr		10499658	1					
ANR	10499788	Argument	stderr		10499658	0					
ANR	10499789	Identifier	stderr		10499658	0					
ANR	10499790	Argument	""" %ux%u %u component image with %d bit %s samples"""		10499658	1					
ANR	10499791	PrimaryExpression	""" %ux%u %u component image with %d bit %s samples"""		10499658	0					
ANR	10499792	Argument	ihdr -> width		10499658	2					
ANR	10499793	PtrMemberAccess	ihdr -> width		10499658	0					
ANR	10499794	Identifier	ihdr		10499658	0					
ANR	10499795	Identifier	width		10499658	1					
ANR	10499796	Argument	ihdr -> height		10499658	3					
ANR	10499797	PtrMemberAccess	ihdr -> height		10499658	0					
ANR	10499798	Identifier	ihdr		10499658	0					
ANR	10499799	Identifier	height		10499658	1					
ANR	10499800	Argument	ihdr -> nc		10499658	4					
ANR	10499801	PtrMemberAccess	ihdr -> nc		10499658	0					
ANR	10499802	Identifier	ihdr		10499658	0					
ANR	10499803	Identifier	nc		10499658	1					
ANR	10499804	Argument	ihdr -> bpc		10499658	5					
ANR	10499805	PtrMemberAccess	ihdr -> bpc		10499658	0					
ANR	10499806	Identifier	ihdr		10499658	0					
ANR	10499807	Identifier	bpc		10499658	1					
ANR	10499808	Argument	"ihdr -> sign ? ""signed"" : ""unsigned"""		10499658	6					
ANR	10499809	ConditionalExpression	"ihdr -> sign ? ""signed"" : ""unsigned"""		10499658	0					
ANR	10499810	Condition	ihdr -> sign		10499658	0					
ANR	10499811	PtrMemberAccess	ihdr -> sign		10499658	0					
ANR	10499812	Identifier	ihdr		10499658	0					
ANR	10499813	Identifier	sign		10499658	1					
ANR	10499814	PrimaryExpression	"""signed"""		10499658	1					
ANR	10499815	PrimaryExpression	"""unsigned"""		10499658	2					
ANR	10499816	ElseStatement	else		10499658	0					
ANR	10499817	ExpressionStatement	"fprintf ( stderr , "" no parse result"" )"	162:6:4437:4472	10499658	0	True				
ANR	10499818	CallExpression	"fprintf ( stderr , "" no parse result"" )"		10499658	0					
ANR	10499819	Callee	fprintf		10499658	0					
ANR	10499820	Identifier	fprintf		10499658	0					
ANR	10499821	ArgumentList	stderr		10499658	1					
ANR	10499822	Argument	stderr		10499658	0					
ANR	10499823	Identifier	stderr		10499658	0					
ANR	10499824	Argument	""" no parse result"""		10499658	1					
ANR	10499825	PrimaryExpression	""" no parse result"""		10499658	0					
ANR	10499826	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	165:2:4481:4502	10499658	2	True				
ANR	10499827	CallExpression	"fprintf ( stderr , ""\\n"" )"		10499658	0					
ANR	10499828	Callee	fprintf		10499658	0					
ANR	10499829	Identifier	fprintf		10499658	0					
ANR	10499830	ArgumentList	stderr		10499658	1					
ANR	10499831	Argument	stderr		10499658	0					
ANR	10499832	Identifier	stderr		10499658	0					
ANR	10499833	Argument	"""\\n"""		10499658	1					
ANR	10499834	PrimaryExpression	"""\\n"""		10499658	0					
ANR	10499835	ReturnType	void		10499658	1					
ANR	10499836	Identifier	box_print		10499658	2					
ANR	10499837	ParameterList	box_t * box		10499658	3					
ANR	10499838	Parameter	box_t * box	139:15:3721:3730	10499658	0	True				
ANR	10499839	ParameterType	box_t *		10499658	0					
ANR	10499840	Identifier	box		10499658	1					
ANR	10499841	CFGEntryNode	ENTRY		10499658		True				
ANR	10499842	CFGExitNode	EXIT		10499658		True				
ANR	10499843	Symbol	* ftyp		10499658						
ANR	10499844	Symbol	box -> type		10499658						
ANR	10499845	Symbol	box		10499658						
ANR	10499846	Symbol	* box		10499658						
ANR	10499847	Symbol	ihdr -> nc		10499658						
ANR	10499848	Symbol	ihdr -> sign		10499658						
ANR	10499849	Symbol	stderr		10499658						
ANR	10499850	Symbol	box -> rez		10499658						
ANR	10499851	Symbol	ihdr -> height		10499658						
ANR	10499852	Symbol	memcmp		10499658						
ANR	10499853	Symbol	ftyp -> brand		10499658						
ANR	10499854	Symbol	ftyp		10499658						
ANR	10499855	Symbol	ihdr -> bpc		10499658						
ANR	10499856	Symbol	box -> length		10499658						
ANR	10499857	Symbol	ftyp -> version		10499658						
ANR	10499858	Symbol	ihdr -> width		10499658						
ANR	10499859	Symbol	ihdr		10499658						
ANR	10499860	Symbol	* ihdr		10499658						
ANR	10499861	Function	jpx_read_imagedata	170:0:4599:6496							
ANR	10499862	FunctionDef	jpx_read_imagedata (imagedata * jpx)		10499861	0					
ANR	10499863	CompoundStatement		171:0:4646:6496	10499861	0					
ANR	10499864	IdentifierDeclStatement	FILE * in ;	172:2:4650:4658	10499861	0	True				
ANR	10499865	IdentifierDecl	* in		10499861	0					
ANR	10499866	IdentifierDeclType	FILE *		10499861	0					
ANR	10499867	Identifier	in		10499861	1					
ANR	10499868	IdentifierDeclStatement	unsigned char buf [ BUFSIZE ] ;	173:2:4662:4688	10499861	1	True				
ANR	10499869	IdentifierDecl	buf [ BUFSIZE ]		10499861	0					
ANR	10499870	IdentifierDeclType	unsigned char [ BUFSIZE ]		10499861	0					
ANR	10499871	Identifier	buf		10499861	1					
ANR	10499872	Identifier	BUFSIZE		10499861	2					
ANR	10499873	IdentifierDeclStatement	"int n , offset ;"	174:2:4692:4705	10499861	2	True				
ANR	10499874	IdentifierDecl	n		10499861	0					
ANR	10499875	IdentifierDeclType	int		10499861	0					
ANR	10499876	Identifier	n		10499861	1					
ANR	10499877	IdentifierDecl	offset		10499861	1					
ANR	10499878	IdentifierDeclType	int		10499861	0					
ANR	10499879	Identifier	offset		10499861	1					
ANR	10499880	IdentifierDeclStatement	int header = FALSE ;	175:2:4709:4727	10499861	3	True				
ANR	10499881	IdentifierDecl	header = FALSE		10499861	0					
ANR	10499882	IdentifierDeclType	int		10499861	0					
ANR	10499883	Identifier	header		10499861	1					
ANR	10499884	AssignmentExpression	header = FALSE		10499861	2		=			
ANR	10499885	Identifier	FALSE		10499861	0					
ANR	10499886	Identifier	FALSE		10499861	1					
ANR	10499887	ExpressionStatement	"in = fopen ( jpx -> filename , ""rb"" )"	178:2:4766:4797	10499861	4	True				
ANR	10499888	AssignmentExpression	"in = fopen ( jpx -> filename , ""rb"" )"		10499861	0		=			
ANR	10499889	Identifier	in		10499861	0					
ANR	10499890	CallExpression	"fopen ( jpx -> filename , ""rb"" )"		10499861	1					
ANR	10499891	Callee	fopen		10499861	0					
ANR	10499892	Identifier	fopen		10499861	0					
ANR	10499893	ArgumentList	jpx -> filename		10499861	1					
ANR	10499894	Argument	jpx -> filename		10499861	0					
ANR	10499895	PtrMemberAccess	jpx -> filename		10499861	0					
ANR	10499896	Identifier	jpx		10499861	0					
ANR	10499897	Identifier	filename		10499861	1					
ANR	10499898	Argument	"""rb"""		10499861	1					
ANR	10499899	PrimaryExpression	"""rb"""		10499861	0					
ANR	10499900	IfStatement	if ( in == NULL )		10499861	5					
ANR	10499901	Condition	in == NULL	179:6:4805:4814	10499861	0	True				
ANR	10499902	EqualityExpression	in == NULL		10499861	0		==			
ANR	10499903	Identifier	in		10499861	0					
ANR	10499904	Identifier	NULL		10499861	1					
ANR	10499905	CompoundStatement		9:18:170:170	10499861	1					
ANR	10499906	ExpressionStatement	"fprintf ( stderr , ""Error: could not open input file '%s'\\n"" , jpx -> filename )"	180:4:4823:4904	10499861	0	True				
ANR	10499907	CallExpression	"fprintf ( stderr , ""Error: could not open input file '%s'\\n"" , jpx -> filename )"		10499861	0					
ANR	10499908	Callee	fprintf		10499861	0					
ANR	10499909	Identifier	fprintf		10499861	0					
ANR	10499910	ArgumentList	stderr		10499861	1					
ANR	10499911	Argument	stderr		10499861	0					
ANR	10499912	Identifier	stderr		10499861	0					
ANR	10499913	Argument	"""Error: could not open input file '%s'\\n"""		10499861	1					
ANR	10499914	PrimaryExpression	"""Error: could not open input file '%s'\\n"""		10499861	0					
ANR	10499915	Argument	jpx -> filename		10499861	2					
ANR	10499916	PtrMemberAccess	jpx -> filename		10499861	0					
ANR	10499917	Identifier	jpx		10499861	0					
ANR	10499918	Identifier	filename		10499861	1					
ANR	10499919	ReturnStatement	return FALSE ;	182:4:4910:4922	10499861	1	True				
ANR	10499920	Identifier	FALSE		10499861	0					
ANR	10499921	ExpressionStatement	"n = fread ( buf , 1 , BUFSIZE , in )"	185:2:4931:4961	10499861	6	True				
ANR	10499922	AssignmentExpression	"n = fread ( buf , 1 , BUFSIZE , in )"		10499861	0		=			
ANR	10499923	Identifier	n		10499861	0					
ANR	10499924	CallExpression	"fread ( buf , 1 , BUFSIZE , in )"		10499861	1					
ANR	10499925	Callee	fread		10499861	0					
ANR	10499926	Identifier	fread		10499861	0					
ANR	10499927	ArgumentList	buf		10499861	1					
ANR	10499928	Argument	buf		10499861	0					
ANR	10499929	Identifier	buf		10499861	0					
ANR	10499930	Argument	1		10499861	1					
ANR	10499931	PrimaryExpression	1		10499861	0					
ANR	10499932	Argument	BUFSIZE		10499861	2					
ANR	10499933	Identifier	BUFSIZE		10499861	0					
ANR	10499934	Argument	in		10499861	3					
ANR	10499935	Identifier	in		10499861	0					
ANR	10499936	IfStatement	if ( n < 12 )		10499861	7					
ANR	10499937	Condition	n < 12	188:6:5003:5008	10499861	0	True				
ANR	10499938	RelationalExpression	n < 12		10499861	0		<			
ANR	10499939	Identifier	n		10499861	0					
ANR	10499940	PrimaryExpression	12		10499861	1					
ANR	10499941	CompoundStatement		18:14:364:364	10499861	1					
ANR	10499942	ExpressionStatement	"fprintf ( stderr , ""Error: file too short\\n"" )"	189:4:5017:5059	10499861	0	True				
ANR	10499943	CallExpression	"fprintf ( stderr , ""Error: file too short\\n"" )"		10499861	0					
ANR	10499944	Callee	fprintf		10499861	0					
ANR	10499945	Identifier	fprintf		10499861	0					
ANR	10499946	ArgumentList	stderr		10499861	1					
ANR	10499947	Argument	stderr		10499861	0					
ANR	10499948	Identifier	stderr		10499861	0					
ANR	10499949	Argument	"""Error: file too short\\n"""		10499861	1					
ANR	10499950	PrimaryExpression	"""Error: file too short\\n"""		10499861	0					
ANR	10499951	ReturnStatement	return FALSE ;	190:4:5065:5077	10499861	1	True				
ANR	10499952	Identifier	FALSE		10499861	0					
ANR	10499953	IfStatement	"if ( memcmp ( buf , ""\\x00\\x00\\x00\\x0CjP  \\x0D\\x0A\\x87\\x0A"" , 12 ) )"		10499861	8					
ANR	10499954	Condition	"memcmp ( buf , ""\\x00\\x00\\x00\\x0CjP  \\x0D\\x0A\\x87\\x0A"" , 12 )"	192:6:5089:5143	10499861	0	True				
ANR	10499955	CallExpression	"memcmp ( buf , ""\\x00\\x00\\x00\\x0CjP  \\x0D\\x0A\\x87\\x0A"" , 12 )"		10499861	0					
ANR	10499956	Callee	memcmp		10499861	0					
ANR	10499957	Identifier	memcmp		10499861	0					
ANR	10499958	ArgumentList	buf		10499861	1					
ANR	10499959	Argument	buf		10499861	0					
ANR	10499960	Identifier	buf		10499861	0					
ANR	10499961	Argument	"""\\x00\\x00\\x00\\x0CjP  \\x0D\\x0A\\x87\\x0A"""		10499861	1					
ANR	10499962	PrimaryExpression	"""\\x00\\x00\\x00\\x0CjP  \\x0D\\x0A\\x87\\x0A"""		10499861	0					
ANR	10499963	Argument	12		10499861	2					
ANR	10499964	PrimaryExpression	12		10499861	0					
ANR	10499965	CompoundStatement		22:63:499:499	10499861	1					
ANR	10499966	ExpressionStatement	"fprintf ( stderr , ""Skipping '%s': not a JPX file\\n"" , jpx -> filename )"	193:4:5152:5217	10499861	0	True				
ANR	10499967	CallExpression	"fprintf ( stderr , ""Skipping '%s': not a JPX file\\n"" , jpx -> filename )"		10499861	0					
ANR	10499968	Callee	fprintf		10499861	0					
ANR	10499969	Identifier	fprintf		10499861	0					
ANR	10499970	ArgumentList	stderr		10499861	1					
ANR	10499971	Argument	stderr		10499861	0					
ANR	10499972	Identifier	stderr		10499861	0					
ANR	10499973	Argument	"""Skipping '%s': not a JPX file\\n"""		10499861	1					
ANR	10499974	PrimaryExpression	"""Skipping '%s': not a JPX file\\n"""		10499861	0					
ANR	10499975	Argument	jpx -> filename		10499861	2					
ANR	10499976	PtrMemberAccess	jpx -> filename		10499861	0					
ANR	10499977	Identifier	jpx		10499861	0					
ANR	10499978	Identifier	filename		10499861	1					
ANR	10499979	ReturnStatement	return FALSE ;	194:4:5223:5235	10499861	1	True				
ANR	10499980	Identifier	FALSE		10499861	0					
ANR	10499981	ExpressionStatement	jpx -> dpi = 0.0	198:2:5309:5323	10499861	9	True				
ANR	10499982	AssignmentExpression	jpx -> dpi = 0.0		10499861	0		=			
ANR	10499983	PtrMemberAccess	jpx -> dpi		10499861	0					
ANR	10499984	Identifier	jpx		10499861	0					
ANR	10499985	Identifier	dpi		10499861	1					
ANR	10499986	PrimaryExpression	0.0		10499861	1					
ANR	10499987	ExpressionStatement	offset = 0	201:2:5372:5382	10499861	10	True				
ANR	10499988	AssignmentExpression	offset = 0		10499861	0		=			
ANR	10499989	Identifier	offset		10499861	0					
ANR	10499990	PrimaryExpression	0		10499861	1					
ANR	10499991	WhileStatement	while ( n - offset >= 8 )		10499861	11					
ANR	10499992	Condition	n - offset >= 8	202:9:5393:5407	10499861	0	True				
ANR	10499993	RelationalExpression	n - offset >= 8		10499861	0		>=			
ANR	10499994	AdditiveExpression	n - offset		10499861	0		-			
ANR	10499995	Identifier	n		10499861	0					
ANR	10499996	Identifier	offset		10499861	1					
ANR	10499997	PrimaryExpression	8		10499861	1					
ANR	10499998	CompoundStatement		33:4:769:816	10499861	1					
ANR	10499999	IdentifierDeclStatement	"box_t * box = box_read ( buf + offset , n - offset ) ;"	203:4:5416:5463	10499861	0	True				
ANR	10500000	IdentifierDecl	"* box = box_read ( buf + offset , n - offset )"		10499861	0					
ANR	10500001	IdentifierDeclType	box_t *		10499861	0					
ANR	10500002	Identifier	box		10499861	1					
ANR	10500003	AssignmentExpression	"* box = box_read ( buf + offset , n - offset )"		10499861	2		=			
ANR	10500004	Identifier	box		10499861	0					
ANR	10500005	CallExpression	"box_read ( buf + offset , n - offset )"		10499861	1					
ANR	10500006	Callee	box_read		10499861	0					
ANR	10500007	Identifier	box_read		10499861	0					
ANR	10500008	ArgumentList	buf + offset		10499861	1					
ANR	10500009	Argument	buf + offset		10499861	0					
ANR	10500010	AdditiveExpression	buf + offset		10499861	0		+			
ANR	10500011	Identifier	buf		10499861	0					
ANR	10500012	Identifier	offset		10499861	1					
ANR	10500013	Argument	n - offset		10499861	1					
ANR	10500014	AdditiveExpression	n - offset		10499861	0		-			
ANR	10500015	Identifier	n		10499861	0					
ANR	10500016	Identifier	offset		10499861	1					
ANR	10500017	IfStatement	if ( box )		10499861	1					
ANR	10500018	Condition	box	204:8:5473:5475	10499861	0	True				
ANR	10500019	Identifier	box		10499861	0					
ANR	10500020	CompoundStatement		34:13:831:831	10499861	1					
ANR	10500021	ExpressionStatement	box_print ( box )	206:6:5499:5513	10499861	0	True				
ANR	10500022	CallExpression	box_print ( box )		10499861	0					
ANR	10500023	Callee	box_print		10499861	0					
ANR	10500024	Identifier	box_print		10499861	0					
ANR	10500025	ArgumentList	box		10499861	1					
ANR	10500026	Argument	box		10499861	0					
ANR	10500027	Identifier	box		10499861	0					
ANR	10500028	IfStatement	"if ( ! memcmp ( box -> type , ""jp2h"" , 4 ) )"		10499861	1					
ANR	10500029	Condition	"! memcmp ( box -> type , ""jp2h"" , 4 )"	208:10:5532:5560	10499861	0	True				
ANR	10500030	UnaryOperationExpression	"! memcmp ( box -> type , ""jp2h"" , 4 )"		10499861	0					
ANR	10500031	UnaryOperator	!		10499861	0					
ANR	10500032	CallExpression	"memcmp ( box -> type , ""jp2h"" , 4 )"		10499861	1					
ANR	10500033	Callee	memcmp		10499861	0					
ANR	10500034	Identifier	memcmp		10499861	0					
ANR	10500035	ArgumentList	box -> type		10499861	1					
ANR	10500036	Argument	box -> type		10499861	0					
ANR	10500037	PtrMemberAccess	box -> type		10499861	0					
ANR	10500038	Identifier	box		10499861	0					
ANR	10500039	Identifier	type		10499861	1					
ANR	10500040	Argument	"""jp2h"""		10499861	1					
ANR	10500041	PrimaryExpression	"""jp2h"""		10499861	0					
ANR	10500042	Argument	4		10499861	2					
ANR	10500043	PrimaryExpression	4		10499861	0					
ANR	10500044	CompoundStatement		38:41:916:916	10499861	1					
ANR	10500045	ExpressionStatement	"box -> next = box_read ( buf + offset + 8 , box -> size )"	209:8:5573:5622	10499861	0	True				
ANR	10500046	AssignmentExpression	"box -> next = box_read ( buf + offset + 8 , box -> size )"		10499861	0		=			
ANR	10500047	PtrMemberAccess	box -> next		10499861	0					
ANR	10500048	Identifier	box		10499861	0					
ANR	10500049	Identifier	next		10499861	1					
ANR	10500050	CallExpression	"box_read ( buf + offset + 8 , box -> size )"		10499861	1					
ANR	10500051	Callee	box_read		10499861	0					
ANR	10500052	Identifier	box_read		10499861	0					
ANR	10500053	ArgumentList	buf + offset + 8		10499861	1					
ANR	10500054	Argument	buf + offset + 8		10499861	0					
ANR	10500055	AdditiveExpression	buf + offset + 8		10499861	0		+			
ANR	10500056	Identifier	buf		10499861	0					
ANR	10500057	AdditiveExpression	offset + 8		10499861	1		+			
ANR	10500058	Identifier	offset		10499861	0					
ANR	10500059	PrimaryExpression	8		10499861	1					
ANR	10500060	Argument	box -> size		10499861	1					
ANR	10500061	PtrMemberAccess	box -> size		10499861	0					
ANR	10500062	Identifier	box		10499861	0					
ANR	10500063	Identifier	size		10499861	1					
ANR	10500064	IfStatement	if ( box -> next )		10499861	1					
ANR	10500065	Condition	box -> next	210:12:5636:5644	10499861	0	True				
ANR	10500066	PtrMemberAccess	box -> next		10499861	0					
ANR	10500067	Identifier	box		10499861	0					
ANR	10500068	Identifier	next		10499861	1					
ANR	10500069	CompoundStatement		41:10:1012:1045	10499861	1					
ANR	10500070	IdentifierDeclStatement	box_ihdr_t * ihdr = box -> next -> rez ;	211:10:5659:5692	10499861	0	True				
ANR	10500071	IdentifierDecl	* ihdr = box -> next -> rez		10499861	0					
ANR	10500072	IdentifierDeclType	box_ihdr_t *		10499861	0					
ANR	10500073	Identifier	ihdr		10499861	1					
ANR	10500074	AssignmentExpression	* ihdr = box -> next -> rez		10499861	2		=			
ANR	10500075	Identifier	ihdr		10499861	0					
ANR	10500076	PtrMemberAccess	box -> next -> rez		10499861	1					
ANR	10500077	PtrMemberAccess	box -> next		10499861	0					
ANR	10500078	Identifier	box		10499861	0					
ANR	10500079	Identifier	next		10499861	1					
ANR	10500080	Identifier	rez		10499861	1					
ANR	10500081	ExpressionStatement	box_print ( box -> next )	213:10:5717:5737	10499861	1	True				
ANR	10500082	CallExpression	box_print ( box -> next )		10499861	0					
ANR	10500083	Callee	box_print		10499861	0					
ANR	10500084	Identifier	box_print		10499861	0					
ANR	10500085	ArgumentList	box -> next		10499861	1					
ANR	10500086	Argument	box -> next		10499861	0					
ANR	10500087	PtrMemberAccess	box -> next		10499861	0					
ANR	10500088	Identifier	box		10499861	0					
ANR	10500089	Identifier	next		10499861	1					
ANR	10500090	ExpressionStatement	jpx -> width = ihdr -> width	215:10:5756:5780	10499861	2	True				
ANR	10500091	AssignmentExpression	jpx -> width = ihdr -> width		10499861	0		=			
ANR	10500092	PtrMemberAccess	jpx -> width		10499861	0					
ANR	10500093	Identifier	jpx		10499861	0					
ANR	10500094	Identifier	width		10499861	1					
ANR	10500095	PtrMemberAccess	ihdr -> width		10499861	1					
ANR	10500096	Identifier	ihdr		10499861	0					
ANR	10500097	Identifier	width		10499861	1					
ANR	10500098	ExpressionStatement	jpx -> height = ihdr -> height	216:10:5792:5818	10499861	3	True				
ANR	10500099	AssignmentExpression	jpx -> height = ihdr -> height		10499861	0		=			
ANR	10500100	PtrMemberAccess	jpx -> height		10499861	0					
ANR	10500101	Identifier	jpx		10499861	0					
ANR	10500102	Identifier	height		10499861	1					
ANR	10500103	PtrMemberAccess	ihdr -> height		10499861	1					
ANR	10500104	Identifier	ihdr		10499861	0					
ANR	10500105	Identifier	height		10499861	1					
ANR	10500106	ExpressionStatement	jpx -> numcmpts = ihdr -> nc	217:10:5830:5854	10499861	4	True				
ANR	10500107	AssignmentExpression	jpx -> numcmpts = ihdr -> nc		10499861	0		=			
ANR	10500108	PtrMemberAccess	jpx -> numcmpts		10499861	0					
ANR	10500109	Identifier	jpx		10499861	0					
ANR	10500110	Identifier	numcmpts		10499861	1					
ANR	10500111	PtrMemberAccess	ihdr -> nc		10499861	1					
ANR	10500112	Identifier	ihdr		10499861	0					
ANR	10500113	Identifier	nc		10499861	1					
ANR	10500114	ExpressionStatement	jpx -> depth = ihdr -> bpc	218:10:5866:5888	10499861	5	True				
ANR	10500115	AssignmentExpression	jpx -> depth = ihdr -> bpc		10499861	0		=			
ANR	10500116	PtrMemberAccess	jpx -> depth		10499861	0					
ANR	10500117	Identifier	jpx		10499861	0					
ANR	10500118	Identifier	depth		10499861	1					
ANR	10500119	PtrMemberAccess	ihdr -> bpc		10499861	1					
ANR	10500120	Identifier	ihdr		10499861	0					
ANR	10500121	Identifier	bpc		10499861	1					
ANR	10500122	ExpressionStatement	box_free ( box -> next )	219:10:5900:5919	10499861	6	True				
ANR	10500123	CallExpression	box_free ( box -> next )		10499861	0					
ANR	10500124	Callee	box_free		10499861	0					
ANR	10500125	Identifier	box_free		10499861	0					
ANR	10500126	ArgumentList	box -> next		10499861	1					
ANR	10500127	Argument	box -> next		10499861	0					
ANR	10500128	PtrMemberAccess	box -> next		10499861	0					
ANR	10500129	Identifier	box		10499861	0					
ANR	10500130	Identifier	next		10499861	1					
ANR	10500131	ExpressionStatement	header = TRUE	220:10:5931:5944	10499861	7	True				
ANR	10500132	AssignmentExpression	header = TRUE		10499861	0		=			
ANR	10500133	Identifier	header		10499861	0					
ANR	10500134	Identifier	TRUE		10499861	1					
ANR	10500135	IfStatement	if ( box -> length <= 0 )		10499861	2					
ANR	10500136	Condition	box -> length <= 0	223:10:5974:5989	10499861	0	True				
ANR	10500137	RelationalExpression	box -> length <= 0		10499861	0		<=			
ANR	10500138	PtrMemberAccess	box -> length		10499861	0					
ANR	10500139	Identifier	box		10499861	0					
ANR	10500140	Identifier	length		10499861	1					
ANR	10500141	PrimaryExpression	0		10499861	1					
ANR	10500142	BreakStatement	break ;	223:28:5992:5997	10499861	1	True				
ANR	10500143	ExpressionStatement	offset += box -> length	224:6:6005:6026	10499861	3	True				
ANR	10500144	AssignmentExpression	offset += box -> length		10499861	0		+=			
ANR	10500145	Identifier	offset		10499861	0					
ANR	10500146	PtrMemberAccess	box -> length		10499861	1					
ANR	10500147	Identifier	box		10499861	0					
ANR	10500148	Identifier	length		10499861	1					
ANR	10500149	ExpressionStatement	box_free ( box )	225:6:6034:6047	10499861	4	True				
ANR	10500150	CallExpression	box_free ( box )		10499861	0					
ANR	10500151	Callee	box_free		10499861	0					
ANR	10500152	Identifier	box_free		10499861	0					
ANR	10500153	ArgumentList	box		10499861	1					
ANR	10500154	Argument	box		10499861	0					
ANR	10500155	Identifier	box		10499861	0					
ANR	10500156	IfStatement	if ( ! header )		10499861	12					
ANR	10500157	Condition	! header	229:6:6066:6072	10499861	0	True				
ANR	10500158	UnaryOperationExpression	! header		10499861	0					
ANR	10500159	UnaryOperator	!		10499861	0					
ANR	10500160	Identifier	header		10499861	1					
ANR	10500161	CompoundStatement		59:15:1428:1428	10499861	1					
ANR	10500162	ExpressionStatement	"fprintf ( stderr , ""Skipping '%s': couldn't parse image header\\n"" , jpx -> filename )"	230:4:6081:6165	10499861	0	True				
ANR	10500163	CallExpression	"fprintf ( stderr , ""Skipping '%s': couldn't parse image header\\n"" , jpx -> filename )"		10499861	0					
ANR	10500164	Callee	fprintf		10499861	0					
ANR	10500165	Identifier	fprintf		10499861	0					
ANR	10500166	ArgumentList	stderr		10499861	1					
ANR	10500167	Argument	stderr		10499861	0					
ANR	10500168	Identifier	stderr		10499861	0					
ANR	10500169	Argument	"""Skipping '%s': couldn't parse image header\\n"""		10499861	1					
ANR	10500170	PrimaryExpression	"""Skipping '%s': couldn't parse image header\\n"""		10499861	0					
ANR	10500171	Argument	jpx -> filename		10499861	2					
ANR	10500172	PtrMemberAccess	jpx -> filename		10499861	0					
ANR	10500173	Identifier	jpx		10499861	0					
ANR	10500174	Identifier	filename		10499861	1					
ANR	10500175	ReturnStatement	return FALSE ;	232:4:6171:6183	10499861	1	True				
ANR	10500176	Identifier	FALSE		10499861	0					
ANR	10500177	ExpressionStatement	"fprintf ( stderr , ""Note on file '%s': %dx%d pixel, %d color component%s, dpi %lf\\n"" , jpx -> filename , jpx -> width , jpx -> height , jpx -> numcmpts , ( jpx -> numcmpts == 1 ? """" : ""s"" ) , jpx -> dpi )"	235:2:6192:6428	10499861	13	True				
ANR	10500178	CallExpression	"fprintf ( stderr , ""Note on file '%s': %dx%d pixel, %d color component%s, dpi %lf\\n"" , jpx -> filename , jpx -> width , jpx -> height , jpx -> numcmpts , ( jpx -> numcmpts == 1 ? """" : ""s"" ) , jpx -> dpi )"		10499861	0					
ANR	10500179	Callee	fprintf		10499861	0					
ANR	10500180	Identifier	fprintf		10499861	0					
ANR	10500181	ArgumentList	stderr		10499861	1					
ANR	10500182	Argument	stderr		10499861	0					
ANR	10500183	Identifier	stderr		10499861	0					
ANR	10500184	Argument	"""Note on file '%s': %dx%d pixel, %d color component%s, dpi %lf\\n"""		10499861	1					
ANR	10500185	PrimaryExpression	"""Note on file '%s': %dx%d pixel, %d color component%s, dpi %lf\\n"""		10499861	0					
ANR	10500186	Argument	jpx -> filename		10499861	2					
ANR	10500187	PtrMemberAccess	jpx -> filename		10499861	0					
ANR	10500188	Identifier	jpx		10499861	0					
ANR	10500189	Identifier	filename		10499861	1					
ANR	10500190	Argument	jpx -> width		10499861	3					
ANR	10500191	PtrMemberAccess	jpx -> width		10499861	0					
ANR	10500192	Identifier	jpx		10499861	0					
ANR	10500193	Identifier	width		10499861	1					
ANR	10500194	Argument	jpx -> height		10499861	4					
ANR	10500195	PtrMemberAccess	jpx -> height		10499861	0					
ANR	10500196	Identifier	jpx		10499861	0					
ANR	10500197	Identifier	height		10499861	1					
ANR	10500198	Argument	jpx -> numcmpts		10499861	5					
ANR	10500199	PtrMemberAccess	jpx -> numcmpts		10499861	0					
ANR	10500200	Identifier	jpx		10499861	0					
ANR	10500201	Identifier	numcmpts		10499861	1					
ANR	10500202	Argument	"jpx -> numcmpts == 1 ? """" : ""s"""		10499861	6					
ANR	10500203	ConditionalExpression	"jpx -> numcmpts == 1 ? """" : ""s"""		10499861	0					
ANR	10500204	Condition	jpx -> numcmpts == 1		10499861	0					
ANR	10500205	EqualityExpression	jpx -> numcmpts == 1		10499861	0		==			
ANR	10500206	PtrMemberAccess	jpx -> numcmpts		10499861	0					
ANR	10500207	Identifier	jpx		10499861	0					
ANR	10500208	Identifier	numcmpts		10499861	1					
ANR	10500209	PrimaryExpression	1		10499861	1					
ANR	10500210	PrimaryExpression	""""""		10499861	1					
ANR	10500211	PrimaryExpression	"""s"""		10499861	2					
ANR	10500212	Argument	jpx -> dpi		10499861	7					
ANR	10500213	PtrMemberAccess	jpx -> dpi		10499861	0					
ANR	10500214	Identifier	jpx		10499861	0					
ANR	10500215	Identifier	dpi		10499861	1					
ANR	10500216	IfStatement	if ( jpx -> dpi == 0.0 )		10499861	14					
ANR	10500217	Condition	jpx -> dpi == 0.0	241:6:6437:6451	10499861	0	True				
ANR	10500218	EqualityExpression	jpx -> dpi == 0.0		10499861	0		==			
ANR	10500219	PtrMemberAccess	jpx -> dpi		10499861	0					
ANR	10500220	Identifier	jpx		10499861	0					
ANR	10500221	Identifier	dpi		10499861	1					
ANR	10500222	PrimaryExpression	0.0		10499861	1					
ANR	10500223	ExpressionStatement	jpx -> dpi = 100.0	242:8:6462:6478	10499861	1	True				
ANR	10500224	AssignmentExpression	jpx -> dpi = 100.0		10499861	0		=			
ANR	10500225	PtrMemberAccess	jpx -> dpi		10499861	0					
ANR	10500226	Identifier	jpx		10499861	0					
ANR	10500227	Identifier	dpi		10499861	1					
ANR	10500228	PrimaryExpression	100.0		10499861	1					
ANR	10500229	ReturnStatement	return TRUE ;	244:2:6483:6494	10499861	15	True				
ANR	10500230	Identifier	TRUE		10499861	0					
ANR	10500231	ReturnType	static int		10499861	1					
ANR	10500232	Identifier	jpx_read_imagedata		10499861	2					
ANR	10500233	ParameterList	imagedata * jpx		10499861	3					
ANR	10500234	Parameter	imagedata * jpx	170:30:4629:4643	10499861	0	True				
ANR	10500235	ParameterType	imagedata *		10499861	0					
ANR	10500236	Identifier	jpx		10499861	1					
ANR	10500237	CFGEntryNode	ENTRY		10499861		True				
ANR	10500238	CFGExitNode	EXIT		10499861		True				
ANR	10500239	Symbol	box		10499861						
ANR	10500240	Symbol	* box		10499861						
ANR	10500241	Symbol	ihdr -> nc		10499861						
ANR	10500242	Symbol	jpx -> width		10499861						
ANR	10500243	Symbol	jpx -> numcmpts		10499861						
ANR	10500244	Symbol	memcmp		10499861						
ANR	10500245	Symbol	ihdr -> bpc		10499861						
ANR	10500246	Symbol	box -> length		10499861						
ANR	10500247	Symbol	ihdr -> width		10499861						
ANR	10500248	Symbol	* jpx		10499861						
ANR	10500249	Symbol	ihdr		10499861						
ANR	10500250	Symbol	* * box		10499861						
ANR	10500251	Symbol	box -> size		10499861						
ANR	10500252	Symbol	fopen		10499861						
ANR	10500253	Symbol	NULL		10499861						
ANR	10500254	Symbol	jpx -> height		10499861						
ANR	10500255	Symbol	offset		10499861						
ANR	10500256	Symbol	in		10499861						
ANR	10500257	Symbol	jpx -> filename		10499861						
ANR	10500258	Symbol	box -> type		10499861						
ANR	10500259	Symbol	TRUE		10499861						
ANR	10500260	Symbol	box -> next -> rez		10499861						
ANR	10500261	Symbol	stderr		10499861						
ANR	10500262	Symbol	jpx -> dpi		10499861						
ANR	10500263	Symbol	n		10499861						
ANR	10500264	Symbol	fread		10499861						
ANR	10500265	Symbol	ihdr -> height		10499861						
ANR	10500266	Symbol	buf		10499861						
ANR	10500267	Symbol	jpx		10499861						
ANR	10500268	Symbol	box -> next		10499861						
ANR	10500269	Symbol	box_read		10499861						
ANR	10500270	Symbol	jpx -> depth		10499861						
ANR	10500271	Symbol	header		10499861						
ANR	10500272	Symbol	FALSE		10499861						
ANR	10500273	Symbol	* box -> next		10499861						
ANR	10500274	Symbol	BUFSIZE		10499861						
ANR	10500275	Symbol	* ihdr		10499861						
ANR	10500276	Function	jpx_pdf	247:0:6499:8828							
ANR	10500277	FunctionDef	"jpx_pdf (imagedata * jpx , FILE * out)"		10500276	0					
ANR	10500278	CompoundStatement		248:0:6547:8828	10500276	0					
ANR	10500279	IdentifierDeclStatement	FILE * in ;	249:8:6557:6565	10500276	0	True				
ANR	10500280	IdentifierDecl	* in		10500276	0					
ANR	10500281	IdentifierDeclType	FILE *		10500276	0					
ANR	10500282	Identifier	in		10500276	1					
ANR	10500283	IdentifierDeclStatement	unsigned char buf [ BUFSIZE ] ;	250:8:6575:6601	10500276	1	True				
ANR	10500284	IdentifierDecl	buf [ BUFSIZE ]		10500276	0					
ANR	10500285	IdentifierDeclType	unsigned char [ BUFSIZE ]		10500276	0					
ANR	10500286	Identifier	buf		10500276	1					
ANR	10500287	Identifier	BUFSIZE		10500276	2					
ANR	10500288	IdentifierDeclStatement	int n ;	251:8:6611:6616	10500276	2	True				
ANR	10500289	IdentifierDecl	n		10500276	0					
ANR	10500290	IdentifierDeclType	int		10500276	0					
ANR	10500291	Identifier	n		10500276	1					
ANR	10500292	IdentifierDeclStatement	double scale ;	252:8:6626:6638	10500276	3	True				
ANR	10500293	IdentifierDecl	scale		10500276	0					
ANR	10500294	IdentifierDeclType	double		10500276	0					
ANR	10500295	Identifier	scale		10500276	1					
ANR	10500296	IfStatement	if ( ! jpx_read_imagedata ( jpx ) )		10500276	4					
ANR	10500297	Condition	! jpx_read_imagedata ( jpx )	254:13:6654:6677	10500276	0	True				
ANR	10500298	UnaryOperationExpression	! jpx_read_imagedata ( jpx )		10500276	0					
ANR	10500299	UnaryOperator	!		10500276	0					
ANR	10500300	CallExpression	jpx_read_imagedata ( jpx )		10500276	1					
ANR	10500301	Callee	jpx_read_imagedata		10500276	0					
ANR	10500302	Identifier	jpx_read_imagedata		10500276	0					
ANR	10500303	ArgumentList	jpx		10500276	1					
ANR	10500304	Argument	jpx		10500276	0					
ANR	10500305	Identifier	jpx		10500276	0					
ANR	10500306	ReturnStatement	return - 1 ;	254:40:6681:6690	10500276	1	True				
ANR	10500307	UnaryOperationExpression	- 1		10500276	0					
ANR	10500308	UnaryOperator	-		10500276	0					
ANR	10500309	PrimaryExpression	1		10500276	1					
ANR	10500310	ExpressionStatement	"in = fopen ( jpx -> filename , ""rb"" )"	256:8:6701:6732	10500276	5	True				
ANR	10500311	AssignmentExpression	"in = fopen ( jpx -> filename , ""rb"" )"		10500276	0		=			
ANR	10500312	Identifier	in		10500276	0					
ANR	10500313	CallExpression	"fopen ( jpx -> filename , ""rb"" )"		10500276	1					
ANR	10500314	Callee	fopen		10500276	0					
ANR	10500315	Identifier	fopen		10500276	0					
ANR	10500316	ArgumentList	jpx -> filename		10500276	1					
ANR	10500317	Argument	jpx -> filename		10500276	0					
ANR	10500318	PtrMemberAccess	jpx -> filename		10500276	0					
ANR	10500319	Identifier	jpx		10500276	0					
ANR	10500320	Identifier	filename		10500276	1					
ANR	10500321	Argument	"""rb"""		10500276	1					
ANR	10500322	PrimaryExpression	"""rb"""		10500276	0					
ANR	10500323	IfStatement	if ( in == NULL )		10500276	6					
ANR	10500324	Condition	in == NULL	257:12:6746:6755	10500276	0	True				
ANR	10500325	EqualityExpression	in == NULL		10500276	0		==			
ANR	10500326	Identifier	in		10500276	0					
ANR	10500327	Identifier	NULL		10500276	1					
ANR	10500328	CompoundStatement		10:24:210:210	10500276	1					
ANR	10500329	ExpressionStatement	"fprintf ( stderr , ""Error: unable to open input file '%s'\\n"" , jpx -> filename )"	258:16:6776:6849	10500276	0	True				
ANR	10500330	CallExpression	"fprintf ( stderr , ""Error: unable to open input file '%s'\\n"" , jpx -> filename )"		10500276	0					
ANR	10500331	Callee	fprintf		10500276	0					
ANR	10500332	Identifier	fprintf		10500276	0					
ANR	10500333	ArgumentList	stderr		10500276	1					
ANR	10500334	Argument	stderr		10500276	0					
ANR	10500335	Identifier	stderr		10500276	0					
ANR	10500336	Argument	"""Error: unable to open input file '%s'\\n"""		10500276	1					
ANR	10500337	PrimaryExpression	"""Error: unable to open input file '%s'\\n"""		10500276	0					
ANR	10500338	Argument	jpx -> filename		10500276	2					
ANR	10500339	PtrMemberAccess	jpx -> filename		10500276	0					
ANR	10500340	Identifier	jpx		10500276	0					
ANR	10500341	Identifier	filename		10500276	1					
ANR	10500342	ReturnStatement	return - 1 ;	259:16:6867:6876	10500276	1	True				
ANR	10500343	UnaryOperationExpression	- 1		10500276	0					
ANR	10500344	UnaryOperator	-		10500276	0					
ANR	10500345	PrimaryExpression	1		10500276	1					
ANR	10500346	ExpressionStatement	"fseek ( in , 0 , SEEK_END )"	261:8:6896:6918	10500276	7	True				
ANR	10500347	CallExpression	"fseek ( in , 0 , SEEK_END )"		10500276	0					
ANR	10500348	Callee	fseek		10500276	0					
ANR	10500349	Identifier	fseek		10500276	0					
ANR	10500350	ArgumentList	in		10500276	1					
ANR	10500351	Argument	in		10500276	0					
ANR	10500352	Identifier	in		10500276	0					
ANR	10500353	Argument	0		10500276	1					
ANR	10500354	PrimaryExpression	0		10500276	0					
ANR	10500355	Argument	SEEK_END		10500276	2					
ANR	10500356	Identifier	SEEK_END		10500276	0					
ANR	10500357	ExpressionStatement	jpx -> filesize = ftell ( in )	262:8:6928:6953	10500276	8	True				
ANR	10500358	AssignmentExpression	jpx -> filesize = ftell ( in )		10500276	0		=			
ANR	10500359	PtrMemberAccess	jpx -> filesize		10500276	0					
ANR	10500360	Identifier	jpx		10500276	0					
ANR	10500361	Identifier	filesize		10500276	1					
ANR	10500362	CallExpression	ftell ( in )		10500276	1					
ANR	10500363	Callee	ftell		10500276	0					
ANR	10500364	Identifier	ftell		10500276	0					
ANR	10500365	ArgumentList	in		10500276	1					
ANR	10500366	Argument	in		10500276	0					
ANR	10500367	Identifier	in		10500276	0					
ANR	10500368	ExpressionStatement	"fseek ( in , 0 , SEEK_SET )"	263:8:6963:6985	10500276	9	True				
ANR	10500369	CallExpression	"fseek ( in , 0 , SEEK_SET )"		10500276	0					
ANR	10500370	Callee	fseek		10500276	0					
ANR	10500371	Identifier	fseek		10500276	0					
ANR	10500372	ArgumentList	in		10500276	1					
ANR	10500373	Argument	in		10500276	0					
ANR	10500374	Identifier	in		10500276	0					
ANR	10500375	Argument	0		10500276	1					
ANR	10500376	PrimaryExpression	0		10500276	0					
ANR	10500377	Argument	SEEK_SET		10500276	2					
ANR	10500378	Identifier	SEEK_SET		10500276	0					
ANR	10500379	ExpressionStatement	xref [ nxref ++ ] = ftell ( out )	265:8:6996:7022	10500276	10	True				
ANR	10500380	AssignmentExpression	xref [ nxref ++ ] = ftell ( out )		10500276	0		=			
ANR	10500381	ArrayIndexing	xref [ nxref ++ ]		10500276	0					
ANR	10500382	Identifier	xref		10500276	0					
ANR	10500383	PostIncDecOperationExpression	nxref ++		10500276	1					
ANR	10500384	Identifier	nxref		10500276	0					
ANR	10500385	IncDec	++		10500276	1					
ANR	10500386	CallExpression	ftell ( out )		10500276	1					
ANR	10500387	Callee	ftell		10500276	0					
ANR	10500388	Identifier	ftell		10500276	0					
ANR	10500389	ArgumentList	out		10500276	1					
ANR	10500390	Argument	out		10500276	0					
ANR	10500391	Identifier	out		10500276	0					
ANR	10500392	ExpressionStatement	"fprintf ( out , ""%d 0 obj\\n"" , nxref )"	266:8:7032:7065	10500276	11	True				
ANR	10500393	CallExpression	"fprintf ( out , ""%d 0 obj\\n"" , nxref )"		10500276	0					
ANR	10500394	Callee	fprintf		10500276	0					
ANR	10500395	Identifier	fprintf		10500276	0					
ANR	10500396	ArgumentList	out		10500276	1					
ANR	10500397	Argument	out		10500276	0					
ANR	10500398	Identifier	out		10500276	0					
ANR	10500399	Argument	"""%d 0 obj\\n"""		10500276	1					
ANR	10500400	PrimaryExpression	"""%d 0 obj\\n"""		10500276	0					
ANR	10500401	Argument	nxref		10500276	2					
ANR	10500402	Identifier	nxref		10500276	0					
ANR	10500403	ExpressionStatement	"fprintf ( out , ""<</Type/XObject/Subtype/Image\\n"" )"	267:8:7075:7122	10500276	12	True				
ANR	10500404	CallExpression	"fprintf ( out , ""<</Type/XObject/Subtype/Image\\n"" )"		10500276	0					
ANR	10500405	Callee	fprintf		10500276	0					
ANR	10500406	Identifier	fprintf		10500276	0					
ANR	10500407	ArgumentList	out		10500276	1					
ANR	10500408	Argument	out		10500276	0					
ANR	10500409	Identifier	out		10500276	0					
ANR	10500410	Argument	"""<</Type/XObject/Subtype/Image\\n"""		10500276	1					
ANR	10500411	PrimaryExpression	"""<</Type/XObject/Subtype/Image\\n"""		10500276	0					
ANR	10500412	ExpressionStatement	"fprintf ( out , ""/Width %d /Height %d\\n"" , jpx -> width , jpx -> height )"	268:8:7132:7195	10500276	13	True				
ANR	10500413	CallExpression	"fprintf ( out , ""/Width %d /Height %d\\n"" , jpx -> width , jpx -> height )"		10500276	0					
ANR	10500414	Callee	fprintf		10500276	0					
ANR	10500415	Identifier	fprintf		10500276	0					
ANR	10500416	ArgumentList	out		10500276	1					
ANR	10500417	Argument	out		10500276	0					
ANR	10500418	Identifier	out		10500276	0					
ANR	10500419	Argument	"""/Width %d /Height %d\\n"""		10500276	1					
ANR	10500420	PrimaryExpression	"""/Width %d /Height %d\\n"""		10500276	0					
ANR	10500421	Argument	jpx -> width		10500276	2					
ANR	10500422	PtrMemberAccess	jpx -> width		10500276	0					
ANR	10500423	Identifier	jpx		10500276	0					
ANR	10500424	Identifier	width		10500276	1					
ANR	10500425	Argument	jpx -> height		10500276	3					
ANR	10500426	PtrMemberAccess	jpx -> height		10500276	0					
ANR	10500427	Identifier	jpx		10500276	0					
ANR	10500428	Identifier	height		10500276	1					
ANR	10500429	ExpressionStatement	"fprintf ( out , ""/ColorSpace/%s\\n"" , jpx -> numcmpts == 1 ? ""DeviceGray"" : ""DeviceRGB"" )"	269:8:7205:7286	10500276	14	True				
ANR	10500430	CallExpression	"fprintf ( out , ""/ColorSpace/%s\\n"" , jpx -> numcmpts == 1 ? ""DeviceGray"" : ""DeviceRGB"" )"		10500276	0					
ANR	10500431	Callee	fprintf		10500276	0					
ANR	10500432	Identifier	fprintf		10500276	0					
ANR	10500433	ArgumentList	out		10500276	1					
ANR	10500434	Argument	out		10500276	0					
ANR	10500435	Identifier	out		10500276	0					
ANR	10500436	Argument	"""/ColorSpace/%s\\n"""		10500276	1					
ANR	10500437	PrimaryExpression	"""/ColorSpace/%s\\n"""		10500276	0					
ANR	10500438	Argument	"jpx -> numcmpts == 1 ? ""DeviceGray"" : ""DeviceRGB"""		10500276	2					
ANR	10500439	ConditionalExpression	"jpx -> numcmpts == 1 ? ""DeviceGray"" : ""DeviceRGB"""		10500276	0					
ANR	10500440	Condition	jpx -> numcmpts == 1		10500276	0					
ANR	10500441	EqualityExpression	jpx -> numcmpts == 1		10500276	0		==			
ANR	10500442	PtrMemberAccess	jpx -> numcmpts		10500276	0					
ANR	10500443	Identifier	jpx		10500276	0					
ANR	10500444	Identifier	numcmpts		10500276	1					
ANR	10500445	PrimaryExpression	1		10500276	1					
ANR	10500446	PrimaryExpression	"""DeviceGray"""		10500276	1					
ANR	10500447	PrimaryExpression	"""DeviceRGB"""		10500276	2					
ANR	10500448	ExpressionStatement	"fprintf ( out , ""/BitsPerComponent %d\\n"" , jpx -> depth )"	270:8:7296:7346	10500276	15	True				
ANR	10500449	CallExpression	"fprintf ( out , ""/BitsPerComponent %d\\n"" , jpx -> depth )"		10500276	0					
ANR	10500450	Callee	fprintf		10500276	0					
ANR	10500451	Identifier	fprintf		10500276	0					
ANR	10500452	ArgumentList	out		10500276	1					
ANR	10500453	Argument	out		10500276	0					
ANR	10500454	Identifier	out		10500276	0					
ANR	10500455	Argument	"""/BitsPerComponent %d\\n"""		10500276	1					
ANR	10500456	PrimaryExpression	"""/BitsPerComponent %d\\n"""		10500276	0					
ANR	10500457	Argument	jpx -> depth		10500276	2					
ANR	10500458	PtrMemberAccess	jpx -> depth		10500276	0					
ANR	10500459	Identifier	jpx		10500276	0					
ANR	10500460	Identifier	depth		10500276	1					
ANR	10500461	ExpressionStatement	"fprintf ( out , ""/Length %d\\n"" , jpx -> filesize )"	271:8:7356:7399	10500276	16	True				
ANR	10500462	CallExpression	"fprintf ( out , ""/Length %d\\n"" , jpx -> filesize )"		10500276	0					
ANR	10500463	Callee	fprintf		10500276	0					
ANR	10500464	Identifier	fprintf		10500276	0					
ANR	10500465	ArgumentList	out		10500276	1					
ANR	10500466	Argument	out		10500276	0					
ANR	10500467	Identifier	out		10500276	0					
ANR	10500468	Argument	"""/Length %d\\n"""		10500276	1					
ANR	10500469	PrimaryExpression	"""/Length %d\\n"""		10500276	0					
ANR	10500470	Argument	jpx -> filesize		10500276	2					
ANR	10500471	PtrMemberAccess	jpx -> filesize		10500276	0					
ANR	10500472	Identifier	jpx		10500276	0					
ANR	10500473	Identifier	filesize		10500276	1					
ANR	10500474	ExpressionStatement	"fprintf ( out , ""/Filter/JPXDecode\\n"" )"	272:8:7409:7444	10500276	17	True				
ANR	10500475	CallExpression	"fprintf ( out , ""/Filter/JPXDecode\\n"" )"		10500276	0					
ANR	10500476	Callee	fprintf		10500276	0					
ANR	10500477	Identifier	fprintf		10500276	0					
ANR	10500478	ArgumentList	out		10500276	1					
ANR	10500479	Argument	out		10500276	0					
ANR	10500480	Identifier	out		10500276	0					
ANR	10500481	Argument	"""/Filter/JPXDecode\\n"""		10500276	1					
ANR	10500482	PrimaryExpression	"""/Filter/JPXDecode\\n"""		10500276	0					
ANR	10500483	ExpressionStatement	"fprintf ( out , "">>\\n"" )"	273:8:7454:7474	10500276	18	True				
ANR	10500484	CallExpression	"fprintf ( out , "">>\\n"" )"		10500276	0					
ANR	10500485	Callee	fprintf		10500276	0					
ANR	10500486	Identifier	fprintf		10500276	0					
ANR	10500487	ArgumentList	out		10500276	1					
ANR	10500488	Argument	out		10500276	0					
ANR	10500489	Identifier	out		10500276	0					
ANR	10500490	Argument	""">>\\n"""		10500276	1					
ANR	10500491	PrimaryExpression	""">>\\n"""		10500276	0					
ANR	10500492	ExpressionStatement	"fprintf ( out , ""stream\\n"" )"	274:8:7484:7508	10500276	19	True				
ANR	10500493	CallExpression	"fprintf ( out , ""stream\\n"" )"		10500276	0					
ANR	10500494	Callee	fprintf		10500276	0					
ANR	10500495	Identifier	fprintf		10500276	0					
ANR	10500496	ArgumentList	out		10500276	1					
ANR	10500497	Argument	out		10500276	0					
ANR	10500498	Identifier	out		10500276	0					
ANR	10500499	Argument	"""stream\\n"""		10500276	1					
ANR	10500500	PrimaryExpression	"""stream\\n"""		10500276	0					
ANR	10500501	WhileStatement	"while ( ( n = fread ( buf , 1 , sizeof ( buf ) , in ) ) != 0 )"		10500276	20					
ANR	10500502	Condition	"( n = fread ( buf , 1 , sizeof ( buf ) , in ) ) != 0"	277:15:7564:7604	10500276	0	True				
ANR	10500503	EqualityExpression	"( n = fread ( buf , 1 , sizeof ( buf ) , in ) ) != 0"		10500276	0		!=			
ANR	10500504	AssignmentExpression	"n = fread ( buf , 1 , sizeof ( buf ) , in )"		10500276	0		=			
ANR	10500505	Identifier	n		10500276	0					
ANR	10500506	CallExpression	"fread ( buf , 1 , sizeof ( buf ) , in )"		10500276	1					
ANR	10500507	Callee	fread		10500276	0					
ANR	10500508	Identifier	fread		10500276	0					
ANR	10500509	ArgumentList	buf		10500276	1					
ANR	10500510	Argument	buf		10500276	0					
ANR	10500511	Identifier	buf		10500276	0					
ANR	10500512	Argument	1		10500276	1					
ANR	10500513	PrimaryExpression	1		10500276	0					
ANR	10500514	Argument	sizeof ( buf )		10500276	2					
ANR	10500515	SizeofExpression	sizeof ( buf )		10500276	0					
ANR	10500516	Sizeof	sizeof		10500276	0					
ANR	10500517	SizeofOperand	buf		10500276	1					
ANR	10500518	Argument	in		10500276	3					
ANR	10500519	Identifier	in		10500276	0					
ANR	10500520	PrimaryExpression	0		10500276	1					
ANR	10500521	ExpressionStatement	"fwrite ( buf , 1 , n , out )"	278:16:7623:7645	10500276	1	True				
ANR	10500522	CallExpression	"fwrite ( buf , 1 , n , out )"		10500276	0					
ANR	10500523	Callee	fwrite		10500276	0					
ANR	10500524	Identifier	fwrite		10500276	0					
ANR	10500525	ArgumentList	buf		10500276	1					
ANR	10500526	Argument	buf		10500276	0					
ANR	10500527	Identifier	buf		10500276	0					
ANR	10500528	Argument	1		10500276	1					
ANR	10500529	PrimaryExpression	1		10500276	0					
ANR	10500530	Argument	n		10500276	2					
ANR	10500531	Identifier	n		10500276	0					
ANR	10500532	Argument	out		10500276	3					
ANR	10500533	Identifier	out		10500276	0					
ANR	10500534	ExpressionStatement	"fprintf ( out , ""endstream\\n"" )"	280:8:7656:7683	10500276	21	True				
ANR	10500535	CallExpression	"fprintf ( out , ""endstream\\n"" )"		10500276	0					
ANR	10500536	Callee	fprintf		10500276	0					
ANR	10500537	Identifier	fprintf		10500276	0					
ANR	10500538	ArgumentList	out		10500276	1					
ANR	10500539	Argument	out		10500276	0					
ANR	10500540	Identifier	out		10500276	0					
ANR	10500541	Argument	"""endstream\\n"""		10500276	1					
ANR	10500542	PrimaryExpression	"""endstream\\n"""		10500276	0					
ANR	10500543	ExpressionStatement	"fprintf ( out , ""endobj\\n"" )"	281:8:7693:7717	10500276	22	True				
ANR	10500544	CallExpression	"fprintf ( out , ""endobj\\n"" )"		10500276	0					
ANR	10500545	Callee	fprintf		10500276	0					
ANR	10500546	Identifier	fprintf		10500276	0					
ANR	10500547	ArgumentList	out		10500276	1					
ANR	10500548	Argument	out		10500276	0					
ANR	10500549	Identifier	out		10500276	0					
ANR	10500550	Argument	"""endobj\\n"""		10500276	1					
ANR	10500551	PrimaryExpression	"""endobj\\n"""		10500276	0					
ANR	10500552	ExpressionStatement	"fprintf ( out , ""\\n"" )"	282:8:7727:7745	10500276	23	True				
ANR	10500553	CallExpression	"fprintf ( out , ""\\n"" )"		10500276	0					
ANR	10500554	Callee	fprintf		10500276	0					
ANR	10500555	Identifier	fprintf		10500276	0					
ANR	10500556	ArgumentList	out		10500276	1					
ANR	10500557	Argument	out		10500276	0					
ANR	10500558	Identifier	out		10500276	0					
ANR	10500559	Argument	"""\\n"""		10500276	1					
ANR	10500560	PrimaryExpression	"""\\n"""		10500276	0					
ANR	10500561	ExpressionStatement	fclose ( in )	284:8:7756:7766	10500276	24	True				
ANR	10500562	CallExpression	fclose ( in )		10500276	0					
ANR	10500563	Callee	fclose		10500276	0					
ANR	10500564	Identifier	fclose		10500276	0					
ANR	10500565	ArgumentList	in		10500276	1					
ANR	10500566	Argument	in		10500276	0					
ANR	10500567	Identifier	in		10500276	0					
ANR	10500568	ExpressionStatement	scale = 72.0 / jpx -> dpi	286:8:7777:7800	10500276	25	True				
ANR	10500569	AssignmentExpression	scale = 72.0 / jpx -> dpi		10500276	0		=			
ANR	10500570	Identifier	scale		10500276	0					
ANR	10500571	MultiplicativeExpression	72.0 / jpx -> dpi		10500276	1		/			
ANR	10500572	PrimaryExpression	72.0		10500276	0					
ANR	10500573	PtrMemberAccess	jpx -> dpi		10500276	1					
ANR	10500574	Identifier	jpx		10500276	0					
ANR	10500575	Identifier	dpi		10500276	1					
ANR	10500576	ExpressionStatement	"sprintf ( ( char * ) buf , ""%d 0 0 %d 0 0 cm /x%d Do\\n"" , ( int ) ceil ( jpx -> width * scale ) , ( int ) ceil ( jpx -> height * scale ) , nxref )"	287:8:7810:7978	10500276	26	True				
ANR	10500577	CallExpression	"sprintf ( ( char * ) buf , ""%d 0 0 %d 0 0 cm /x%d Do\\n"" , ( int ) ceil ( jpx -> width * scale ) , ( int ) ceil ( jpx -> height * scale ) , nxref )"		10500276	0					
ANR	10500578	Callee	sprintf		10500276	0					
ANR	10500579	Identifier	sprintf		10500276	0					
ANR	10500580	ArgumentList	( char * ) buf		10500276	1					
ANR	10500581	Argument	( char * ) buf		10500276	0					
ANR	10500582	CastExpression	( char * ) buf		10500276	0					
ANR	10500583	CastTarget	char *		10500276	0					
ANR	10500584	Identifier	buf		10500276	1					
ANR	10500585	Argument	"""%d 0 0 %d 0 0 cm /x%d Do\\n"""		10500276	1					
ANR	10500586	PrimaryExpression	"""%d 0 0 %d 0 0 cm /x%d Do\\n"""		10500276	0					
ANR	10500587	Argument	( int ) ceil ( jpx -> width * scale )		10500276	2					
ANR	10500588	CastExpression	( int ) ceil ( jpx -> width * scale )		10500276	0					
ANR	10500589	CastTarget	int		10500276	0					
ANR	10500590	CallExpression	ceil ( jpx -> width * scale )		10500276	1					
ANR	10500591	Callee	ceil		10500276	0					
ANR	10500592	Identifier	ceil		10500276	0					
ANR	10500593	ArgumentList	jpx -> width * scale		10500276	1					
ANR	10500594	Argument	jpx -> width * scale		10500276	0					
ANR	10500595	MultiplicativeExpression	jpx -> width * scale		10500276	0		*			
ANR	10500596	PtrMemberAccess	jpx -> width		10500276	0					
ANR	10500597	Identifier	jpx		10500276	0					
ANR	10500598	Identifier	width		10500276	1					
ANR	10500599	Identifier	scale		10500276	1					
ANR	10500600	Argument	( int ) ceil ( jpx -> height * scale )		10500276	3					
ANR	10500601	CastExpression	( int ) ceil ( jpx -> height * scale )		10500276	0					
ANR	10500602	CastTarget	int		10500276	0					
ANR	10500603	CallExpression	ceil ( jpx -> height * scale )		10500276	1					
ANR	10500604	Callee	ceil		10500276	0					
ANR	10500605	Identifier	ceil		10500276	0					
ANR	10500606	ArgumentList	jpx -> height * scale		10500276	1					
ANR	10500607	Argument	jpx -> height * scale		10500276	0					
ANR	10500608	MultiplicativeExpression	jpx -> height * scale		10500276	0		*			
ANR	10500609	PtrMemberAccess	jpx -> height		10500276	0					
ANR	10500610	Identifier	jpx		10500276	0					
ANR	10500611	Identifier	height		10500276	1					
ANR	10500612	Identifier	scale		10500276	1					
ANR	10500613	Argument	nxref		10500276	4					
ANR	10500614	Identifier	nxref		10500276	0					
ANR	10500615	ExpressionStatement	xref [ nxref ++ ] = ftell ( out )	292:8:7989:8015	10500276	27	True				
ANR	10500616	AssignmentExpression	xref [ nxref ++ ] = ftell ( out )		10500276	0		=			
ANR	10500617	ArrayIndexing	xref [ nxref ++ ]		10500276	0					
ANR	10500618	Identifier	xref		10500276	0					
ANR	10500619	PostIncDecOperationExpression	nxref ++		10500276	1					
ANR	10500620	Identifier	nxref		10500276	0					
ANR	10500621	IncDec	++		10500276	1					
ANR	10500622	CallExpression	ftell ( out )		10500276	1					
ANR	10500623	Callee	ftell		10500276	0					
ANR	10500624	Identifier	ftell		10500276	0					
ANR	10500625	ArgumentList	out		10500276	1					
ANR	10500626	Argument	out		10500276	0					
ANR	10500627	Identifier	out		10500276	0					
ANR	10500628	ExpressionStatement	"fprintf ( out , ""%d 0 obj\\n<</Length %lu>>\\n"" , nxref , ( unsigned long ) strlen ( ( char * ) buf ) )"	293:8:8025:8126	10500276	28	True				
ANR	10500629	CallExpression	"fprintf ( out , ""%d 0 obj\\n<</Length %lu>>\\n"" , nxref , ( unsigned long ) strlen ( ( char * ) buf ) )"		10500276	0					
ANR	10500630	Callee	fprintf		10500276	0					
ANR	10500631	Identifier	fprintf		10500276	0					
ANR	10500632	ArgumentList	out		10500276	1					
ANR	10500633	Argument	out		10500276	0					
ANR	10500634	Identifier	out		10500276	0					
ANR	10500635	Argument	"""%d 0 obj\\n<</Length %lu>>\\n"""		10500276	1					
ANR	10500636	PrimaryExpression	"""%d 0 obj\\n<</Length %lu>>\\n"""		10500276	0					
ANR	10500637	Argument	nxref		10500276	2					
ANR	10500638	Identifier	nxref		10500276	0					
ANR	10500639	Argument	( unsigned long ) strlen ( ( char * ) buf )		10500276	3					
ANR	10500640	CastExpression	( unsigned long ) strlen ( ( char * ) buf )		10500276	0					
ANR	10500641	CastTarget	unsigned long		10500276	0					
ANR	10500642	CallExpression	strlen ( ( char * ) buf )		10500276	1					
ANR	10500643	Callee	strlen		10500276	0					
ANR	10500644	Identifier	strlen		10500276	0					
ANR	10500645	ArgumentList	( char * ) buf		10500276	1					
ANR	10500646	Argument	( char * ) buf		10500276	0					
ANR	10500647	CastExpression	( char * ) buf		10500276	0					
ANR	10500648	CastTarget	char *		10500276	0					
ANR	10500649	Identifier	buf		10500276	1					
ANR	10500650	ExpressionStatement	"fprintf ( out , ""stream\\n"" )"	295:8:8136:8160	10500276	29	True				
ANR	10500651	CallExpression	"fprintf ( out , ""stream\\n"" )"		10500276	0					
ANR	10500652	Callee	fprintf		10500276	0					
ANR	10500653	Identifier	fprintf		10500276	0					
ANR	10500654	ArgumentList	out		10500276	1					
ANR	10500655	Argument	out		10500276	0					
ANR	10500656	Identifier	out		10500276	0					
ANR	10500657	Argument	"""stream\\n"""		10500276	1					
ANR	10500658	PrimaryExpression	"""stream\\n"""		10500276	0					
ANR	10500659	ExpressionStatement	"fprintf ( out , ""%s"" , buf )"	296:8:8170:8193	10500276	30	True				
ANR	10500660	CallExpression	"fprintf ( out , ""%s"" , buf )"		10500276	0					
ANR	10500661	Callee	fprintf		10500276	0					
ANR	10500662	Identifier	fprintf		10500276	0					
ANR	10500663	ArgumentList	out		10500276	1					
ANR	10500664	Argument	out		10500276	0					
ANR	10500665	Identifier	out		10500276	0					
ANR	10500666	Argument	"""%s"""		10500276	1					
ANR	10500667	PrimaryExpression	"""%s"""		10500276	0					
ANR	10500668	Argument	buf		10500276	2					
ANR	10500669	Identifier	buf		10500276	0					
ANR	10500670	ExpressionStatement	"fprintf ( out , ""endstream\\n"" )"	297:8:8203:8230	10500276	31	True				
ANR	10500671	CallExpression	"fprintf ( out , ""endstream\\n"" )"		10500276	0					
ANR	10500672	Callee	fprintf		10500276	0					
ANR	10500673	Identifier	fprintf		10500276	0					
ANR	10500674	ArgumentList	out		10500276	1					
ANR	10500675	Argument	out		10500276	0					
ANR	10500676	Identifier	out		10500276	0					
ANR	10500677	Argument	"""endstream\\n"""		10500276	1					
ANR	10500678	PrimaryExpression	"""endstream\\n"""		10500276	0					
ANR	10500679	ExpressionStatement	"fprintf ( out , ""endobj\\n"" )"	298:8:8240:8264	10500276	32	True				
ANR	10500680	CallExpression	"fprintf ( out , ""endobj\\n"" )"		10500276	0					
ANR	10500681	Callee	fprintf		10500276	0					
ANR	10500682	Identifier	fprintf		10500276	0					
ANR	10500683	ArgumentList	out		10500276	1					
ANR	10500684	Argument	out		10500276	0					
ANR	10500685	Identifier	out		10500276	0					
ANR	10500686	Argument	"""endobj\\n"""		10500276	1					
ANR	10500687	PrimaryExpression	"""endobj\\n"""		10500276	0					
ANR	10500688	ExpressionStatement	"fprintf ( out , ""\\n"" )"	299:8:8274:8292	10500276	33	True				
ANR	10500689	CallExpression	"fprintf ( out , ""\\n"" )"		10500276	0					
ANR	10500690	Callee	fprintf		10500276	0					
ANR	10500691	Identifier	fprintf		10500276	0					
ANR	10500692	ArgumentList	out		10500276	1					
ANR	10500693	Argument	out		10500276	0					
ANR	10500694	Identifier	out		10500276	0					
ANR	10500695	Argument	"""\\n"""		10500276	1					
ANR	10500696	PrimaryExpression	"""\\n"""		10500276	0					
ANR	10500697	ExpressionStatement	xref [ nxref ++ ] = ftell ( out )	301:8:8303:8329	10500276	34	True				
ANR	10500698	AssignmentExpression	xref [ nxref ++ ] = ftell ( out )		10500276	0		=			
ANR	10500699	ArrayIndexing	xref [ nxref ++ ]		10500276	0					
ANR	10500700	Identifier	xref		10500276	0					
ANR	10500701	PostIncDecOperationExpression	nxref ++		10500276	1					
ANR	10500702	Identifier	nxref		10500276	0					
ANR	10500703	IncDec	++		10500276	1					
ANR	10500704	CallExpression	ftell ( out )		10500276	1					
ANR	10500705	Callee	ftell		10500276	0					
ANR	10500706	Identifier	ftell		10500276	0					
ANR	10500707	ArgumentList	out		10500276	1					
ANR	10500708	Argument	out		10500276	0					
ANR	10500709	Identifier	out		10500276	0					
ANR	10500710	ExpressionStatement	"fprintf ( out , ""%d 0 obj\\n"" , nxref )"	302:8:8339:8372	10500276	35	True				
ANR	10500711	CallExpression	"fprintf ( out , ""%d 0 obj\\n"" , nxref )"		10500276	0					
ANR	10500712	Callee	fprintf		10500276	0					
ANR	10500713	Identifier	fprintf		10500276	0					
ANR	10500714	ArgumentList	out		10500276	1					
ANR	10500715	Argument	out		10500276	0					
ANR	10500716	Identifier	out		10500276	0					
ANR	10500717	Argument	"""%d 0 obj\\n"""		10500276	1					
ANR	10500718	PrimaryExpression	"""%d 0 obj\\n"""		10500276	0					
ANR	10500719	Argument	nxref		10500276	2					
ANR	10500720	Identifier	nxref		10500276	0					
ANR	10500721	ExpressionStatement	"fprintf ( out , ""<</Type/Page/Parent 3 0 R\\n"" )"	303:8:8382:8425	10500276	36	True				
ANR	10500722	CallExpression	"fprintf ( out , ""<</Type/Page/Parent 3 0 R\\n"" )"		10500276	0					
ANR	10500723	Callee	fprintf		10500276	0					
ANR	10500724	Identifier	fprintf		10500276	0					
ANR	10500725	ArgumentList	out		10500276	1					
ANR	10500726	Argument	out		10500276	0					
ANR	10500727	Identifier	out		10500276	0					
ANR	10500728	Argument	"""<</Type/Page/Parent 3 0 R\\n"""		10500276	1					
ANR	10500729	PrimaryExpression	"""<</Type/Page/Parent 3 0 R\\n"""		10500276	0					
ANR	10500730	ExpressionStatement	"fprintf ( out , ""/Resources << /XObject << /x%d %d 0 R >> >>\\n"" , nxref - 2 , nxref - 2 )"	304:8:8435:8514	10500276	37	True				
ANR	10500731	CallExpression	"fprintf ( out , ""/Resources << /XObject << /x%d %d 0 R >> >>\\n"" , nxref - 2 , nxref - 2 )"		10500276	0					
ANR	10500732	Callee	fprintf		10500276	0					
ANR	10500733	Identifier	fprintf		10500276	0					
ANR	10500734	ArgumentList	out		10500276	1					
ANR	10500735	Argument	out		10500276	0					
ANR	10500736	Identifier	out		10500276	0					
ANR	10500737	Argument	"""/Resources << /XObject << /x%d %d 0 R >> >>\\n"""		10500276	1					
ANR	10500738	PrimaryExpression	"""/Resources << /XObject << /x%d %d 0 R >> >>\\n"""		10500276	0					
ANR	10500739	Argument	nxref - 2		10500276	2					
ANR	10500740	AdditiveExpression	nxref - 2		10500276	0		-			
ANR	10500741	Identifier	nxref		10500276	0					
ANR	10500742	PrimaryExpression	2		10500276	1					
ANR	10500743	Argument	nxref - 2		10500276	3					
ANR	10500744	AdditiveExpression	nxref - 2		10500276	0		-			
ANR	10500745	Identifier	nxref		10500276	0					
ANR	10500746	PrimaryExpression	2		10500276	1					
ANR	10500747	ExpressionStatement	"fprintf ( out , ""/MediaBox [0 0 %d %d]\\n"" , ( int ) ceil ( jpx -> width * scale ) , ( int ) ceil ( jpx -> height * scale ) )"	305:8:8524:8658	10500276	38	True				
ANR	10500748	CallExpression	"fprintf ( out , ""/MediaBox [0 0 %d %d]\\n"" , ( int ) ceil ( jpx -> width * scale ) , ( int ) ceil ( jpx -> height * scale ) )"		10500276	0					
ANR	10500749	Callee	fprintf		10500276	0					
ANR	10500750	Identifier	fprintf		10500276	0					
ANR	10500751	ArgumentList	out		10500276	1					
ANR	10500752	Argument	out		10500276	0					
ANR	10500753	Identifier	out		10500276	0					
ANR	10500754	Argument	"""/MediaBox [0 0 %d %d]\\n"""		10500276	1					
ANR	10500755	PrimaryExpression	"""/MediaBox [0 0 %d %d]\\n"""		10500276	0					
ANR	10500756	Argument	( int ) ceil ( jpx -> width * scale )		10500276	2					
ANR	10500757	CastExpression	( int ) ceil ( jpx -> width * scale )		10500276	0					
ANR	10500758	CastTarget	int		10500276	0					
ANR	10500759	CallExpression	ceil ( jpx -> width * scale )		10500276	1					
ANR	10500760	Callee	ceil		10500276	0					
ANR	10500761	Identifier	ceil		10500276	0					
ANR	10500762	ArgumentList	jpx -> width * scale		10500276	1					
ANR	10500763	Argument	jpx -> width * scale		10500276	0					
ANR	10500764	MultiplicativeExpression	jpx -> width * scale		10500276	0		*			
ANR	10500765	PtrMemberAccess	jpx -> width		10500276	0					
ANR	10500766	Identifier	jpx		10500276	0					
ANR	10500767	Identifier	width		10500276	1					
ANR	10500768	Identifier	scale		10500276	1					
ANR	10500769	Argument	( int ) ceil ( jpx -> height * scale )		10500276	3					
ANR	10500770	CastExpression	( int ) ceil ( jpx -> height * scale )		10500276	0					
ANR	10500771	CastTarget	int		10500276	0					
ANR	10500772	CallExpression	ceil ( jpx -> height * scale )		10500276	1					
ANR	10500773	Callee	ceil		10500276	0					
ANR	10500774	Identifier	ceil		10500276	0					
ANR	10500775	ArgumentList	jpx -> height * scale		10500276	1					
ANR	10500776	Argument	jpx -> height * scale		10500276	0					
ANR	10500777	MultiplicativeExpression	jpx -> height * scale		10500276	0		*			
ANR	10500778	PtrMemberAccess	jpx -> height		10500276	0					
ANR	10500779	Identifier	jpx		10500276	0					
ANR	10500780	Identifier	height		10500276	1					
ANR	10500781	Identifier	scale		10500276	1					
ANR	10500782	ExpressionStatement	"fprintf ( out , ""/Contents %d 0 R\\n"" , nxref - 1 )"	308:8:8668:8711	10500276	39	True				
ANR	10500783	CallExpression	"fprintf ( out , ""/Contents %d 0 R\\n"" , nxref - 1 )"		10500276	0					
ANR	10500784	Callee	fprintf		10500276	0					
ANR	10500785	Identifier	fprintf		10500276	0					
ANR	10500786	ArgumentList	out		10500276	1					
ANR	10500787	Argument	out		10500276	0					
ANR	10500788	Identifier	out		10500276	0					
ANR	10500789	Argument	"""/Contents %d 0 R\\n"""		10500276	1					
ANR	10500790	PrimaryExpression	"""/Contents %d 0 R\\n"""		10500276	0					
ANR	10500791	Argument	nxref - 1		10500276	2					
ANR	10500792	AdditiveExpression	nxref - 1		10500276	0		-			
ANR	10500793	Identifier	nxref		10500276	0					
ANR	10500794	PrimaryExpression	1		10500276	1					
ANR	10500795	ExpressionStatement	"fprintf ( out , "">>\\n"" )"	309:8:8721:8741	10500276	40	True				
ANR	10500796	CallExpression	"fprintf ( out , "">>\\n"" )"		10500276	0					
ANR	10500797	Callee	fprintf		10500276	0					
ANR	10500798	Identifier	fprintf		10500276	0					
ANR	10500799	ArgumentList	out		10500276	1					
ANR	10500800	Argument	out		10500276	0					
ANR	10500801	Identifier	out		10500276	0					
ANR	10500802	Argument	""">>\\n"""		10500276	1					
ANR	10500803	PrimaryExpression	""">>\\n"""		10500276	0					
ANR	10500804	ExpressionStatement	"fprintf ( out , ""endobj\\n"" )"	310:8:8751:8775	10500276	41	True				
ANR	10500805	CallExpression	"fprintf ( out , ""endobj\\n"" )"		10500276	0					
ANR	10500806	Callee	fprintf		10500276	0					
ANR	10500807	Identifier	fprintf		10500276	0					
ANR	10500808	ArgumentList	out		10500276	1					
ANR	10500809	Argument	out		10500276	0					
ANR	10500810	Identifier	out		10500276	0					
ANR	10500811	Argument	"""endobj\\n"""		10500276	1					
ANR	10500812	PrimaryExpression	"""endobj\\n"""		10500276	0					
ANR	10500813	ExpressionStatement	"fprintf ( out , ""\\n"" )"	311:8:8785:8803	10500276	42	True				
ANR	10500814	CallExpression	"fprintf ( out , ""\\n"" )"		10500276	0					
ANR	10500815	Callee	fprintf		10500276	0					
ANR	10500816	Identifier	fprintf		10500276	0					
ANR	10500817	ArgumentList	out		10500276	1					
ANR	10500818	Argument	out		10500276	0					
ANR	10500819	Identifier	out		10500276	0					
ANR	10500820	Argument	"""\\n"""		10500276	1					
ANR	10500821	PrimaryExpression	"""\\n"""		10500276	0					
ANR	10500822	ReturnStatement	return nxref ;	313:8:8814:8826	10500276	43	True				
ANR	10500823	Identifier	nxref		10500276	0					
ANR	10500824	ReturnType	static int		10500276	1					
ANR	10500825	Identifier	jpx_pdf		10500276	2					
ANR	10500826	ParameterList	"imagedata * jpx , FILE * out"		10500276	3					
ANR	10500827	Parameter	imagedata * jpx	247:19:6518:6532	10500276	0	True				
ANR	10500828	ParameterType	imagedata *		10500276	0					
ANR	10500829	Identifier	jpx		10500276	1					
ANR	10500830	Parameter	FILE * out	247:36:6535:6544	10500276	1	True				
ANR	10500831	ParameterType	FILE *		10500276	0					
ANR	10500832	Identifier	out		10500276	1					
ANR	10500833	CFGEntryNode	ENTRY		10500276		True				
ANR	10500834	CFGExitNode	EXIT		10500276		True				
ANR	10500835	Symbol	ftell		10500276						
ANR	10500836	Symbol	scale		10500276						
ANR	10500837	Symbol	jpx -> width		10500276						
ANR	10500838	Symbol	jpx -> numcmpts		10500276						
ANR	10500839	Symbol	out		10500276						
ANR	10500840	Symbol	nxref		10500276						
ANR	10500841	Symbol	strlen		10500276						
ANR	10500842	Symbol	jpx_read_imagedata		10500276						
ANR	10500843	Symbol	* jpx		10500276						
ANR	10500844	Symbol	jpx -> filesize		10500276						
ANR	10500845	Symbol	SEEK_SET		10500276						
ANR	10500846	Symbol	fopen		10500276						
ANR	10500847	Symbol	NULL		10500276						
ANR	10500848	Symbol	xref		10500276						
ANR	10500849	Symbol	jpx -> height		10500276						
ANR	10500850	Symbol	in		10500276						
ANR	10500851	Symbol	jpx -> filename		10500276						
ANR	10500852	Symbol	ceil		10500276						
ANR	10500853	Symbol	stderr		10500276						
ANR	10500854	Symbol	jpx -> dpi		10500276						
ANR	10500855	Symbol	n		10500276						
ANR	10500856	Symbol	fread		10500276						
ANR	10500857	Symbol	SEEK_END		10500276						
ANR	10500858	Symbol	buf		10500276						
ANR	10500859	Symbol	jpx		10500276						
ANR	10500860	Symbol	* xref		10500276						
ANR	10500861	Symbol	jpx -> depth		10500276						
ANR	10500862	Function	main	316:0:8831:10435							
ANR	10500863	FunctionDef	"main (int argc , char * * argv)"		10500862	0					
ANR	10500864	CompoundStatement		317:0:8863:10435	10500862	0					
ANR	10500865	IdentifierDeclStatement	imagedata image ;	318:8:8873:8888	10500862	0	True				
ANR	10500866	IdentifierDecl	image		10500862	0					
ANR	10500867	IdentifierDeclType	imagedata		10500862	0					
ANR	10500868	Identifier	image		10500862	1					
ANR	10500869	IdentifierDeclStatement	FILE * outfile ;	319:8:8898:8911	10500862	1	True				
ANR	10500870	IdentifierDecl	* outfile		10500862	0					
ANR	10500871	IdentifierDeclType	FILE *		10500862	0					
ANR	10500872	Identifier	outfile		10500862	1					
ANR	10500873	IdentifierDeclStatement	int i ;	320:8:8921:8926	10500862	2	True				
ANR	10500874	IdentifierDecl	i		10500862	0					
ANR	10500875	IdentifierDeclType	int		10500862	0					
ANR	10500876	Identifier	i		10500862	1					
ANR	10500877	IdentifierDeclStatement	int startxref ;	321:8:8936:8949	10500862	3	True				
ANR	10500878	IdentifierDecl	startxref		10500862	0					
ANR	10500879	IdentifierDeclType	int		10500862	0					
ANR	10500880	Identifier	startxref		10500862	1					
ANR	10500881	ExpressionStatement	image . filename = NULL	323:8:8960:8981	10500862	4	True				
ANR	10500882	AssignmentExpression	image . filename = NULL		10500862	0		=			
ANR	10500883	MemberAccess	image . filename		10500862	0					
ANR	10500884	Identifier	image		10500862	0					
ANR	10500885	Identifier	filename		10500862	1					
ANR	10500886	Identifier	NULL		10500862	1					
ANR	10500887	ExpressionStatement	"outfile = fopen ( ""out.pdf"" , ""w"" )"	325:8:8992:9023	10500862	5	True				
ANR	10500888	AssignmentExpression	"outfile = fopen ( ""out.pdf"" , ""w"" )"		10500862	0		=			
ANR	10500889	Identifier	outfile		10500862	0					
ANR	10500890	CallExpression	"fopen ( ""out.pdf"" , ""w"" )"		10500862	1					
ANR	10500891	Callee	fopen		10500862	0					
ANR	10500892	Identifier	fopen		10500862	0					
ANR	10500893	ArgumentList	"""out.pdf"""		10500862	1					
ANR	10500894	Argument	"""out.pdf"""		10500862	0					
ANR	10500895	PrimaryExpression	"""out.pdf"""		10500862	0					
ANR	10500896	Argument	"""w"""		10500862	1					
ANR	10500897	PrimaryExpression	"""w"""		10500862	0					
ANR	10500898	ExpressionStatement	"fprintf ( outfile , ""%%PDF-1.5\\n\\n"" )"	327:8:9034:9067	10500862	6	True				
ANR	10500899	CallExpression	"fprintf ( outfile , ""%%PDF-1.5\\n\\n"" )"		10500862	0					
ANR	10500900	Callee	fprintf		10500862	0					
ANR	10500901	Identifier	fprintf		10500862	0					
ANR	10500902	ArgumentList	outfile		10500862	1					
ANR	10500903	Argument	outfile		10500862	0					
ANR	10500904	Identifier	outfile		10500862	0					
ANR	10500905	Argument	"""%%PDF-1.5\\n\\n"""		10500862	1					
ANR	10500906	PrimaryExpression	"""%%PDF-1.5\\n\\n"""		10500862	0					
ANR	10500907	ExpressionStatement	xref [ nxref ++ ] = ftell ( outfile )	329:8:9078:9108	10500862	7	True				
ANR	10500908	AssignmentExpression	xref [ nxref ++ ] = ftell ( outfile )		10500862	0		=			
ANR	10500909	ArrayIndexing	xref [ nxref ++ ]		10500862	0					
ANR	10500910	Identifier	xref		10500862	0					
ANR	10500911	PostIncDecOperationExpression	nxref ++		10500862	1					
ANR	10500912	Identifier	nxref		10500862	0					
ANR	10500913	IncDec	++		10500862	1					
ANR	10500914	CallExpression	ftell ( outfile )		10500862	1					
ANR	10500915	Callee	ftell		10500862	0					
ANR	10500916	Identifier	ftell		10500862	0					
ANR	10500917	ArgumentList	outfile		10500862	1					
ANR	10500918	Argument	outfile		10500862	0					
ANR	10500919	Identifier	outfile		10500862	0					
ANR	10500920	ExpressionStatement	"fprintf ( outfile , ""1 0 obj\\n"" )"	330:8:9118:9147	10500862	8	True				
ANR	10500921	CallExpression	"fprintf ( outfile , ""1 0 obj\\n"" )"		10500862	0					
ANR	10500922	Callee	fprintf		10500862	0					
ANR	10500923	Identifier	fprintf		10500862	0					
ANR	10500924	ArgumentList	outfile		10500862	1					
ANR	10500925	Argument	outfile		10500862	0					
ANR	10500926	Identifier	outfile		10500862	0					
ANR	10500927	Argument	"""1 0 obj\\n"""		10500862	1					
ANR	10500928	PrimaryExpression	"""1 0 obj\\n"""		10500862	0					
ANR	10500929	ExpressionStatement	"fprintf ( outfile , ""<</Type/Catalog/Pages 3 0 R>>\\n"" )"	331:8:9157:9208	10500862	9	True				
ANR	10500930	CallExpression	"fprintf ( outfile , ""<</Type/Catalog/Pages 3 0 R>>\\n"" )"		10500862	0					
ANR	10500931	Callee	fprintf		10500862	0					
ANR	10500932	Identifier	fprintf		10500862	0					
ANR	10500933	ArgumentList	outfile		10500862	1					
ANR	10500934	Argument	outfile		10500862	0					
ANR	10500935	Identifier	outfile		10500862	0					
ANR	10500936	Argument	"""<</Type/Catalog/Pages 3 0 R>>\\n"""		10500862	1					
ANR	10500937	PrimaryExpression	"""<</Type/Catalog/Pages 3 0 R>>\\n"""		10500862	0					
ANR	10500938	ExpressionStatement	"fprintf ( outfile , ""endobj\\n\\n"" )"	332:8:9218:9248	10500862	10	True				
ANR	10500939	CallExpression	"fprintf ( outfile , ""endobj\\n\\n"" )"		10500862	0					
ANR	10500940	Callee	fprintf		10500862	0					
ANR	10500941	Identifier	fprintf		10500862	0					
ANR	10500942	ArgumentList	outfile		10500862	1					
ANR	10500943	Argument	outfile		10500862	0					
ANR	10500944	Identifier	outfile		10500862	0					
ANR	10500945	Argument	"""endobj\\n\\n"""		10500862	1					
ANR	10500946	PrimaryExpression	"""endobj\\n\\n"""		10500862	0					
ANR	10500947	ExpressionStatement	xref [ nxref ++ ] = ftell ( outfile )	334:8:9259:9289	10500862	11	True				
ANR	10500948	AssignmentExpression	xref [ nxref ++ ] = ftell ( outfile )		10500862	0		=			
ANR	10500949	ArrayIndexing	xref [ nxref ++ ]		10500862	0					
ANR	10500950	Identifier	xref		10500862	0					
ANR	10500951	PostIncDecOperationExpression	nxref ++		10500862	1					
ANR	10500952	Identifier	nxref		10500862	0					
ANR	10500953	IncDec	++		10500862	1					
ANR	10500954	CallExpression	ftell ( outfile )		10500862	1					
ANR	10500955	Callee	ftell		10500862	0					
ANR	10500956	Identifier	ftell		10500862	0					
ANR	10500957	ArgumentList	outfile		10500862	1					
ANR	10500958	Argument	outfile		10500862	0					
ANR	10500959	Identifier	outfile		10500862	0					
ANR	10500960	ExpressionStatement	"fprintf ( outfile , ""2 0 obj\\n"" )"	335:8:9299:9328	10500862	12	True				
ANR	10500961	CallExpression	"fprintf ( outfile , ""2 0 obj\\n"" )"		10500862	0					
ANR	10500962	Callee	fprintf		10500862	0					
ANR	10500963	Identifier	fprintf		10500862	0					
ANR	10500964	ArgumentList	outfile		10500862	1					
ANR	10500965	Argument	outfile		10500862	0					
ANR	10500966	Identifier	outfile		10500862	0					
ANR	10500967	Argument	"""2 0 obj\\n"""		10500862	1					
ANR	10500968	PrimaryExpression	"""2 0 obj\\n"""		10500862	0					
ANR	10500969	ExpressionStatement	"fprintf ( outfile , ""<</Creator(jpxtopdf)/Title(%s)>>\\n"" , getenv ( ""TITLE"" ) )"	336:8:9338:9409	10500862	13	True				
ANR	10500970	CallExpression	"fprintf ( outfile , ""<</Creator(jpxtopdf)/Title(%s)>>\\n"" , getenv ( ""TITLE"" ) )"		10500862	0					
ANR	10500971	Callee	fprintf		10500862	0					
ANR	10500972	Identifier	fprintf		10500862	0					
ANR	10500973	ArgumentList	outfile		10500862	1					
ANR	10500974	Argument	outfile		10500862	0					
ANR	10500975	Identifier	outfile		10500862	0					
ANR	10500976	Argument	"""<</Creator(jpxtopdf)/Title(%s)>>\\n"""		10500862	1					
ANR	10500977	PrimaryExpression	"""<</Creator(jpxtopdf)/Title(%s)>>\\n"""		10500862	0					
ANR	10500978	Argument	"getenv ( ""TITLE"" )"		10500862	2					
ANR	10500979	CallExpression	"getenv ( ""TITLE"" )"		10500862	0					
ANR	10500980	Callee	getenv		10500862	0					
ANR	10500981	Identifier	getenv		10500862	0					
ANR	10500982	ArgumentList	"""TITLE"""		10500862	1					
ANR	10500983	Argument	"""TITLE"""		10500862	0					
ANR	10500984	PrimaryExpression	"""TITLE"""		10500862	0					
ANR	10500985	ExpressionStatement	"fprintf ( outfile , ""endobj\\n\\n"" )"	337:8:9419:9449	10500862	14	True				
ANR	10500986	CallExpression	"fprintf ( outfile , ""endobj\\n\\n"" )"		10500862	0					
ANR	10500987	Callee	fprintf		10500862	0					
ANR	10500988	Identifier	fprintf		10500862	0					
ANR	10500989	ArgumentList	outfile		10500862	1					
ANR	10500990	Argument	outfile		10500862	0					
ANR	10500991	Identifier	outfile		10500862	0					
ANR	10500992	Argument	"""endobj\\n\\n"""		10500862	1					
ANR	10500993	PrimaryExpression	"""endobj\\n\\n"""		10500862	0					
ANR	10500994	ExpressionStatement	nxref ++	340:8:9507:9514	10500862	15	True				
ANR	10500995	PostIncDecOperationExpression	nxref ++		10500862	0					
ANR	10500996	Identifier	nxref		10500862	0					
ANR	10500997	IncDec	++		10500862	1					
ANR	10500998	ForStatement	for ( i = 1 ; i < argc ; i ++ )		10500862	16					
ANR	10500999	ForInit	i = 1 ;	342:13:9530:9535	10500862	0	True				
ANR	10501000	AssignmentExpression	i = 1		10500862	0		=			
ANR	10501001	Identifier	i		10500862	0					
ANR	10501002	PrimaryExpression	1		10500862	1					
ANR	10501003	Condition	i < argc	342:20:9537:9544	10500862	1	True				
ANR	10501004	RelationalExpression	i < argc		10500862	0		<			
ANR	10501005	Identifier	i		10500862	0					
ANR	10501006	Identifier	argc		10500862	1					
ANR	10501007	PostIncDecOperationExpression	i ++	342:30:9547:9549	10500862	2	True				
ANR	10501008	Identifier	i		10500862	0					
ANR	10501009	IncDec	++		10500862	1					
ANR	10501010	CompoundStatement		26:35:688:688	10500862	3					
ANR	10501011	ExpressionStatement	image . filename = argv [ i ]	343:10:9564:9588	10500862	0	True				
ANR	10501012	AssignmentExpression	image . filename = argv [ i ]		10500862	0		=			
ANR	10501013	MemberAccess	image . filename		10500862	0					
ANR	10501014	Identifier	image		10500862	0					
ANR	10501015	Identifier	filename		10500862	1					
ANR	10501016	ArrayIndexing	argv [ i ]		10500862	1					
ANR	10501017	Identifier	argv		10500862	0					
ANR	10501018	Identifier	i		10500862	1					
ANR	10501019	ExpressionStatement	"pages [ npages ++ ] = jpx_pdf ( & image , outfile )"	346:10:9661:9703	10500862	1	True				
ANR	10501020	AssignmentExpression	"pages [ npages ++ ] = jpx_pdf ( & image , outfile )"		10500862	0		=			
ANR	10501021	ArrayIndexing	pages [ npages ++ ]		10500862	0					
ANR	10501022	Identifier	pages		10500862	0					
ANR	10501023	PostIncDecOperationExpression	npages ++		10500862	1					
ANR	10501024	Identifier	npages		10500862	0					
ANR	10501025	IncDec	++		10500862	1					
ANR	10501026	CallExpression	"jpx_pdf ( & image , outfile )"		10500862	1					
ANR	10501027	Callee	jpx_pdf		10500862	0					
ANR	10501028	Identifier	jpx_pdf		10500862	0					
ANR	10501029	ArgumentList	& image		10500862	1					
ANR	10501030	Argument	& image		10500862	0					
ANR	10501031	UnaryOperationExpression	& image		10500862	0					
ANR	10501032	UnaryOperator	&		10500862	0					
ANR	10501033	Identifier	image		10500862	1					
ANR	10501034	Argument	outfile		10500862	1					
ANR	10501035	Identifier	outfile		10500862	0					
ANR	10501036	ExpressionStatement	xref [ 2 ] = ftell ( outfile )	349:8:9724:9748	10500862	17	True				
ANR	10501037	AssignmentExpression	xref [ 2 ] = ftell ( outfile )		10500862	0		=			
ANR	10501038	ArrayIndexing	xref [ 2 ]		10500862	0					
ANR	10501039	Identifier	xref		10500862	0					
ANR	10501040	PrimaryExpression	2		10500862	1					
ANR	10501041	CallExpression	ftell ( outfile )		10500862	1					
ANR	10501042	Callee	ftell		10500862	0					
ANR	10501043	Identifier	ftell		10500862	0					
ANR	10501044	ArgumentList	outfile		10500862	1					
ANR	10501045	Argument	outfile		10500862	0					
ANR	10501046	Identifier	outfile		10500862	0					
ANR	10501047	ExpressionStatement	"fprintf ( outfile , ""3 0 obj\\n"" )"	350:8:9758:9787	10500862	18	True				
ANR	10501048	CallExpression	"fprintf ( outfile , ""3 0 obj\\n"" )"		10500862	0					
ANR	10501049	Callee	fprintf		10500862	0					
ANR	10501050	Identifier	fprintf		10500862	0					
ANR	10501051	ArgumentList	outfile		10500862	1					
ANR	10501052	Argument	outfile		10500862	0					
ANR	10501053	Identifier	outfile		10500862	0					
ANR	10501054	Argument	"""3 0 obj\\n"""		10500862	1					
ANR	10501055	PrimaryExpression	"""3 0 obj\\n"""		10500862	0					
ANR	10501056	ExpressionStatement	"fprintf ( outfile , ""<</Type/Pages/Count %d/Kids[\\n"" , npages )"	351:8:9797:9855	10500862	19	True				
ANR	10501057	CallExpression	"fprintf ( outfile , ""<</Type/Pages/Count %d/Kids[\\n"" , npages )"		10500862	0					
ANR	10501058	Callee	fprintf		10500862	0					
ANR	10501059	Identifier	fprintf		10500862	0					
ANR	10501060	ArgumentList	outfile		10500862	1					
ANR	10501061	Argument	outfile		10500862	0					
ANR	10501062	Identifier	outfile		10500862	0					
ANR	10501063	Argument	"""<</Type/Pages/Count %d/Kids[\\n"""		10500862	1					
ANR	10501064	PrimaryExpression	"""<</Type/Pages/Count %d/Kids[\\n"""		10500862	0					
ANR	10501065	Argument	npages		10500862	2					
ANR	10501066	Identifier	npages		10500862	0					
ANR	10501067	ForStatement	for ( i = 0 ; i < npages ; i ++ )		10500862	20					
ANR	10501068	ForInit	i = 0 ;	352:13:9870:9875	10500862	0	True				
ANR	10501069	AssignmentExpression	i = 0		10500862	0		=			
ANR	10501070	Identifier	i		10500862	0					
ANR	10501071	PrimaryExpression	0		10500862	1					
ANR	10501072	Condition	i < npages	352:20:9877:9886	10500862	1	True				
ANR	10501073	RelationalExpression	i < npages		10500862	0		<			
ANR	10501074	Identifier	i		10500862	0					
ANR	10501075	Identifier	npages		10500862	1					
ANR	10501076	PostIncDecOperationExpression	i ++	352:32:9889:9891	10500862	2	True				
ANR	10501077	Identifier	i		10500862	0					
ANR	10501078	IncDec	++		10500862	1					
ANR	10501079	ExpressionStatement	"fprintf ( outfile , ""%d 0 R\\n"" , pages [ i ] )"	353:16:9910:9948	10500862	3	True				
ANR	10501080	CallExpression	"fprintf ( outfile , ""%d 0 R\\n"" , pages [ i ] )"		10500862	0					
ANR	10501081	Callee	fprintf		10500862	0					
ANR	10501082	Identifier	fprintf		10500862	0					
ANR	10501083	ArgumentList	outfile		10500862	1					
ANR	10501084	Argument	outfile		10500862	0					
ANR	10501085	Identifier	outfile		10500862	0					
ANR	10501086	Argument	"""%d 0 R\\n"""		10500862	1					
ANR	10501087	PrimaryExpression	"""%d 0 R\\n"""		10500862	0					
ANR	10501088	Argument	pages [ i ]		10500862	2					
ANR	10501089	ArrayIndexing	pages [ i ]		10500862	0					
ANR	10501090	Identifier	pages		10500862	0					
ANR	10501091	Identifier	i		10500862	1					
ANR	10501092	ExpressionStatement	"fprintf ( outfile , ""]>>\\nendobj\\n\\n"" )"	354:8:9958:9993	10500862	21	True				
ANR	10501093	CallExpression	"fprintf ( outfile , ""]>>\\nendobj\\n\\n"" )"		10500862	0					
ANR	10501094	Callee	fprintf		10500862	0					
ANR	10501095	Identifier	fprintf		10500862	0					
ANR	10501096	ArgumentList	outfile		10500862	1					
ANR	10501097	Argument	outfile		10500862	0					
ANR	10501098	Identifier	outfile		10500862	0					
ANR	10501099	Argument	"""]>>\\nendobj\\n\\n"""		10500862	1					
ANR	10501100	PrimaryExpression	"""]>>\\nendobj\\n\\n"""		10500862	0					
ANR	10501101	ExpressionStatement	startxref = ftell ( outfile )	356:8:10004:10030	10500862	22	True				
ANR	10501102	AssignmentExpression	startxref = ftell ( outfile )		10500862	0		=			
ANR	10501103	Identifier	startxref		10500862	0					
ANR	10501104	CallExpression	ftell ( outfile )		10500862	1					
ANR	10501105	Callee	ftell		10500862	0					
ANR	10501106	Identifier	ftell		10500862	0					
ANR	10501107	ArgumentList	outfile		10500862	1					
ANR	10501108	Argument	outfile		10500862	0					
ANR	10501109	Identifier	outfile		10500862	0					
ANR	10501110	ExpressionStatement	"fprintf ( outfile , ""xref\\n0 %d\\n"" , nxref + 1 )"	357:8:10040:10083	10500862	23	True				
ANR	10501111	CallExpression	"fprintf ( outfile , ""xref\\n0 %d\\n"" , nxref + 1 )"		10500862	0					
ANR	10501112	Callee	fprintf		10500862	0					
ANR	10501113	Identifier	fprintf		10500862	0					
ANR	10501114	ArgumentList	outfile		10500862	1					
ANR	10501115	Argument	outfile		10500862	0					
ANR	10501116	Identifier	outfile		10500862	0					
ANR	10501117	Argument	"""xref\\n0 %d\\n"""		10500862	1					
ANR	10501118	PrimaryExpression	"""xref\\n0 %d\\n"""		10500862	0					
ANR	10501119	Argument	nxref + 1		10500862	2					
ANR	10501120	AdditiveExpression	nxref + 1		10500862	0		+			
ANR	10501121	Identifier	nxref		10500862	0					
ANR	10501122	PrimaryExpression	1		10500862	1					
ANR	10501123	ExpressionStatement	"fprintf ( outfile , ""0000000000 65535 f \\n"" )"	358:8:10093:10134	10500862	24	True				
ANR	10501124	CallExpression	"fprintf ( outfile , ""0000000000 65535 f \\n"" )"		10500862	0					
ANR	10501125	Callee	fprintf		10500862	0					
ANR	10501126	Identifier	fprintf		10500862	0					
ANR	10501127	ArgumentList	outfile		10500862	1					
ANR	10501128	Argument	outfile		10500862	0					
ANR	10501129	Identifier	outfile		10500862	0					
ANR	10501130	Argument	"""0000000000 65535 f \\n"""		10500862	1					
ANR	10501131	PrimaryExpression	"""0000000000 65535 f \\n"""		10500862	0					
ANR	10501132	ForStatement	for ( i = 0 ; i < nxref ; i ++ )		10500862	25					
ANR	10501133	ForInit	i = 0 ;	359:13:10149:10154	10500862	0	True				
ANR	10501134	AssignmentExpression	i = 0		10500862	0		=			
ANR	10501135	Identifier	i		10500862	0					
ANR	10501136	PrimaryExpression	0		10500862	1					
ANR	10501137	Condition	i < nxref	359:20:10156:10164	10500862	1	True				
ANR	10501138	RelationalExpression	i < nxref		10500862	0		<			
ANR	10501139	Identifier	i		10500862	0					
ANR	10501140	Identifier	nxref		10500862	1					
ANR	10501141	PostIncDecOperationExpression	i ++	359:31:10167:10169	10500862	2	True				
ANR	10501142	Identifier	i		10500862	0					
ANR	10501143	IncDec	++		10500862	1					
ANR	10501144	ExpressionStatement	"fprintf ( outfile , ""%010d 00000 n \\n"" , xref [ i ] )"	360:16:10188:10233	10500862	3	True				
ANR	10501145	CallExpression	"fprintf ( outfile , ""%010d 00000 n \\n"" , xref [ i ] )"		10500862	0					
ANR	10501146	Callee	fprintf		10500862	0					
ANR	10501147	Identifier	fprintf		10500862	0					
ANR	10501148	ArgumentList	outfile		10500862	1					
ANR	10501149	Argument	outfile		10500862	0					
ANR	10501150	Identifier	outfile		10500862	0					
ANR	10501151	Argument	"""%010d 00000 n \\n"""		10500862	1					
ANR	10501152	PrimaryExpression	"""%010d 00000 n \\n"""		10500862	0					
ANR	10501153	Argument	xref [ i ]		10500862	2					
ANR	10501154	ArrayIndexing	xref [ i ]		10500862	0					
ANR	10501155	Identifier	xref		10500862	0					
ANR	10501156	Identifier	i		10500862	1					
ANR	10501157	ExpressionStatement	"fprintf ( outfile , ""trailer\\n<< /Size %d /Root 1 0 R /Info 2 0 R >>\\n"" , nxref + 1 )"	361:8:10243:10323	10500862	26	True				
ANR	10501158	CallExpression	"fprintf ( outfile , ""trailer\\n<< /Size %d /Root 1 0 R /Info 2 0 R >>\\n"" , nxref + 1 )"		10500862	0					
ANR	10501159	Callee	fprintf		10500862	0					
ANR	10501160	Identifier	fprintf		10500862	0					
ANR	10501161	ArgumentList	outfile		10500862	1					
ANR	10501162	Argument	outfile		10500862	0					
ANR	10501163	Identifier	outfile		10500862	0					
ANR	10501164	Argument	"""trailer\\n<< /Size %d /Root 1 0 R /Info 2 0 R >>\\n"""		10500862	1					
ANR	10501165	PrimaryExpression	"""trailer\\n<< /Size %d /Root 1 0 R /Info 2 0 R >>\\n"""		10500862	0					
ANR	10501166	Argument	nxref + 1		10500862	2					
ANR	10501167	AdditiveExpression	nxref + 1		10500862	0		+			
ANR	10501168	Identifier	nxref		10500862	0					
ANR	10501169	PrimaryExpression	1		10500862	1					
ANR	10501170	ExpressionStatement	"fprintf ( outfile , ""startxref\\n%d\\n%%%%EOF\\n"" , startxref )"	362:8:10333:10388	10500862	27	True				
ANR	10501171	CallExpression	"fprintf ( outfile , ""startxref\\n%d\\n%%%%EOF\\n"" , startxref )"		10500862	0					
ANR	10501172	Callee	fprintf		10500862	0					
ANR	10501173	Identifier	fprintf		10500862	0					
ANR	10501174	ArgumentList	outfile		10500862	1					
ANR	10501175	Argument	outfile		10500862	0					
ANR	10501176	Identifier	outfile		10500862	0					
ANR	10501177	Argument	"""startxref\\n%d\\n%%%%EOF\\n"""		10500862	1					
ANR	10501178	PrimaryExpression	"""startxref\\n%d\\n%%%%EOF\\n"""		10500862	0					
ANR	10501179	Argument	startxref		10500862	2					
ANR	10501180	Identifier	startxref		10500862	0					
ANR	10501181	ExpressionStatement	fclose ( outfile )	364:8:10399:10414	10500862	28	True				
ANR	10501182	CallExpression	fclose ( outfile )		10500862	0					
ANR	10501183	Callee	fclose		10500862	0					
ANR	10501184	Identifier	fclose		10500862	0					
ANR	10501185	ArgumentList	outfile		10500862	1					
ANR	10501186	Argument	outfile		10500862	0					
ANR	10501187	Identifier	outfile		10500862	0					
ANR	10501188	ReturnStatement	return 0 ;	366:8:10425:10433	10500862	29	True				
ANR	10501189	PrimaryExpression	0		10500862	0					
ANR	10501190	ReturnType	int		10500862	1					
ANR	10501191	Identifier	main		10500862	2					
ANR	10501192	ParameterList	"int argc , char * * argv"		10500862	3					
ANR	10501193	Parameter	int argc	316:9:8840:8847	10500862	0	True				
ANR	10501194	ParameterType	int		10500862	0					
ANR	10501195	Identifier	argc		10500862	1					
ANR	10501196	Parameter	char * * argv	316:19:8850:8860	10500862	1	True				
ANR	10501197	ParameterType	char * *		10500862	0					
ANR	10501198	Identifier	argv		10500862	1					
ANR	10501199	CFGEntryNode	ENTRY		10500862		True				
ANR	10501200	CFGExitNode	EXIT		10500862		True				
ANR	10501201	Symbol	argc		10500862						
ANR	10501202	Symbol	image		10500862						
ANR	10501203	Symbol	fopen		10500862						
ANR	10501204	Symbol	NULL		10500862						
ANR	10501205	Symbol	xref		10500862						
ANR	10501206	Symbol	& image		10500862						
ANR	10501207	Symbol	ftell		10500862						
ANR	10501208	Symbol	outfile		10500862						
ANR	10501209	Symbol	i		10500862						
ANR	10501210	Symbol	* argv		10500862						
ANR	10501211	Symbol	argv		10500862						
ANR	10501212	Symbol	nxref		10500862						
ANR	10501213	Symbol	* i		10500862						
ANR	10501214	Symbol	pages		10500862						
ANR	10501215	Symbol	* pages		10500862						
ANR	10501216	Symbol	* xref		10500862						
ANR	10501217	Symbol	startxref		10500862						
ANR	10501218	Symbol	npages		10500862						
ANR	10501219	Symbol	image . filename		10500862						
ANR	10501220	Symbol	jpx_pdf		10500862						
ANR	10501221	Symbol	getenv		10500862						
