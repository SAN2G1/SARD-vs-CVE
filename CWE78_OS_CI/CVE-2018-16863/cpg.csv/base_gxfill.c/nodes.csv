command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1040458	File	data/converged/CVE-2018-16863_ghostpdl/base_gxfill.c								
ANR	1040459	DeclStmt									
ANR	1040460	Decl							stats_fill_t	stats_fill_t	stats_fill
ANR	1040461	Function	x_order	107:0:3787:5251							
ANR	1040462	FunctionDef	"x_order (const active_line * lp1 , const active_line * lp2)"		1040461	0					
ANR	1040463	CompoundStatement		109:0:3854:5251	1040461	0					
ANR	1040464	IdentifierDeclStatement	bool s1 ;	110:4:3860:3867	1040461	0	True				
ANR	1040465	IdentifierDecl	s1		1040461	0					
ANR	1040466	IdentifierDeclType	bool		1040461	0					
ANR	1040467	Identifier	s1		1040461	1					
ANR	1040468	ExpressionStatement	INCR ( order )	112:4:3874:3885	1040461	1	True				
ANR	1040469	CallExpression	INCR ( order )		1040461	0					
ANR	1040470	Callee	INCR		1040461	0					
ANR	1040471	Identifier	INCR		1040461	0					
ANR	1040472	ArgumentList	order		1040461	1					
ANR	1040473	Argument	order		1040461	0					
ANR	1040474	Identifier	order		1040461	0					
ANR	1040475	IfStatement	if ( ! lp1 || ! lp2 || lp1 -> x_current < lp2 -> x_current )		1040461	2					
ANR	1040476	Condition	! lp1 || ! lp2 || lp1 -> x_current < lp2 -> x_current	113:8:3895:3941	1040461	0	True				
ANR	1040477	OrExpression	! lp1 || ! lp2 || lp1 -> x_current < lp2 -> x_current		1040461	0		||			
ANR	1040478	UnaryOperationExpression	! lp1		1040461	0					
ANR	1040479	UnaryOperator	!		1040461	0					
ANR	1040480	Identifier	lp1		1040461	1					
ANR	1040481	OrExpression	! lp2 || lp1 -> x_current < lp2 -> x_current		1040461	1		||			
ANR	1040482	UnaryOperationExpression	! lp2		1040461	0					
ANR	1040483	UnaryOperator	!		1040461	0					
ANR	1040484	Identifier	lp2		1040461	1					
ANR	1040485	RelationalExpression	lp1 -> x_current < lp2 -> x_current		1040461	1		<			
ANR	1040486	PtrMemberAccess	lp1 -> x_current		1040461	0					
ANR	1040487	Identifier	lp1		1040461	0					
ANR	1040488	Identifier	x_current		1040461	1					
ANR	1040489	PtrMemberAccess	lp2 -> x_current		1040461	1					
ANR	1040490	Identifier	lp2		1040461	0					
ANR	1040491	Identifier	x_current		1040461	1					
ANR	1040492	ReturnStatement	return - 1 ;	114:8:3952:3961	1040461	1	True				
ANR	1040493	UnaryOperationExpression	- 1		1040461	0					
ANR	1040494	UnaryOperator	-		1040461	0					
ANR	1040495	PrimaryExpression	1		1040461	1					
ANR	1040496	ElseStatement	else		1040461	0					
ANR	1040497	IfStatement	if ( lp1 -> x_current > lp2 -> x_current )		1040461	0					
ANR	1040498	Condition	lp1 -> x_current > lp2 -> x_current	115:13:3976:4006	1040461	0	True				
ANR	1040499	RelationalExpression	lp1 -> x_current > lp2 -> x_current		1040461	0		>			
ANR	1040500	PtrMemberAccess	lp1 -> x_current		1040461	0					
ANR	1040501	Identifier	lp1		1040461	0					
ANR	1040502	Identifier	x_current		1040461	1					
ANR	1040503	PtrMemberAccess	lp2 -> x_current		1040461	1					
ANR	1040504	Identifier	lp2		1040461	0					
ANR	1040505	Identifier	x_current		1040461	1					
ANR	1040506	ReturnStatement	return 1 ;	116:8:4017:4025	1040461	1	True				
ANR	1040507	PrimaryExpression	1		1040461	0					
ANR	1040508	IfStatement	if ( ( s1 = lp1 -> start . x < lp1 -> end . x ) != ( lp2 -> start . x < lp2 -> end . x ) )		1040461	3					
ANR	1040509	Condition	( s1 = lp1 -> start . x < lp1 -> end . x ) != ( lp2 -> start . x < lp2 -> end . x )	121:8:4180:4242	1040461	0	True				
ANR	1040510	EqualityExpression	( s1 = lp1 -> start . x < lp1 -> end . x ) != ( lp2 -> start . x < lp2 -> end . x )		1040461	0		!=			
ANR	1040511	AssignmentExpression	s1 = lp1 -> start . x < lp1 -> end . x		1040461	0		=			
ANR	1040512	Identifier	s1		1040461	0					
ANR	1040513	RelationalExpression	lp1 -> start . x < lp1 -> end . x		1040461	1		<			
ANR	1040514	MemberAccess	lp1 -> start . x		1040461	0					
ANR	1040515	PtrMemberAccess	lp1 -> start		1040461	0					
ANR	1040516	Identifier	lp1		1040461	0					
ANR	1040517	Identifier	start		1040461	1					
ANR	1040518	Identifier	x		1040461	1					
ANR	1040519	MemberAccess	lp1 -> end . x		1040461	1					
ANR	1040520	PtrMemberAccess	lp1 -> end		1040461	0					
ANR	1040521	Identifier	lp1		1040461	0					
ANR	1040522	Identifier	end		1040461	1					
ANR	1040523	Identifier	x		1040461	1					
ANR	1040524	RelationalExpression	lp2 -> start . x < lp2 -> end . x		1040461	1		<			
ANR	1040525	MemberAccess	lp2 -> start . x		1040461	0					
ANR	1040526	PtrMemberAccess	lp2 -> start		1040461	0					
ANR	1040527	Identifier	lp2		1040461	0					
ANR	1040528	Identifier	start		1040461	1					
ANR	1040529	Identifier	x		1040461	1					
ANR	1040530	MemberAccess	lp2 -> end . x		1040461	1					
ANR	1040531	PtrMemberAccess	lp2 -> end		1040461	0					
ANR	1040532	Identifier	lp2		1040461	0					
ANR	1040533	Identifier	end		1040461	1					
ANR	1040534	Identifier	x		1040461	1					
ANR	1040535	ReturnStatement	return ( s1 ? 1 : - 1 ) ;	122:8:4253:4273	1040461	1	True				
ANR	1040536	ConditionalExpression	s1 ? 1 : - 1		1040461	0					
ANR	1040537	Condition	s1		1040461	0					
ANR	1040538	Identifier	s1		1040461	0					
ANR	1040539	PrimaryExpression	1		1040461	1					
ANR	1040540	UnaryOperationExpression	- 1		1040461	2					
ANR	1040541	UnaryOperator	-		1040461	0					
ANR	1040542	PrimaryExpression	1		1040461	1					
ANR	1040543	ExpressionStatement	INCR ( slow_order )	134:4:4924:4940	1040461	4	True				
ANR	1040544	CallExpression	INCR ( slow_order )		1040461	0					
ANR	1040545	Callee	INCR		1040461	0					
ANR	1040546	Identifier	INCR		1040461	0					
ANR	1040547	ArgumentList	slow_order		1040461	1					
ANR	1040548	Argument	slow_order		1040461	0					
ANR	1040549	Identifier	slow_order		1040461	0					
ANR	1040550	CompoundStatement		32:8:1285:1336	1040461	5					
ANR	1040551	IdentifierDeclStatement	"fixed dx1 = lp1 -> end . x - lp1 -> start . x , dy1 = lp1 -> end . y - lp1 -> start . y ;"	136:8:4956:5038	1040461	0	True				
ANR	1040552	IdentifierDecl	dx1 = lp1 -> end . x - lp1 -> start . x		1040461	0					
ANR	1040553	IdentifierDeclType	fixed		1040461	0					
ANR	1040554	Identifier	dx1		1040461	1					
ANR	1040555	AssignmentExpression	dx1 = lp1 -> end . x - lp1 -> start . x		1040461	2		=			
ANR	1040556	Identifier	dx1		1040461	0					
ANR	1040557	AdditiveExpression	lp1 -> end . x - lp1 -> start . x		1040461	1		-			
ANR	1040558	MemberAccess	lp1 -> end . x		1040461	0					
ANR	1040559	PtrMemberAccess	lp1 -> end		1040461	0					
ANR	1040560	Identifier	lp1		1040461	0					
ANR	1040561	Identifier	end		1040461	1					
ANR	1040562	Identifier	x		1040461	1					
ANR	1040563	MemberAccess	lp1 -> start . x		1040461	1					
ANR	1040564	PtrMemberAccess	lp1 -> start		1040461	0					
ANR	1040565	Identifier	lp1		1040461	0					
ANR	1040566	Identifier	start		1040461	1					
ANR	1040567	Identifier	x		1040461	1					
ANR	1040568	IdentifierDecl	dy1 = lp1 -> end . y - lp1 -> start . y		1040461	1					
ANR	1040569	IdentifierDeclType	fixed		1040461	0					
ANR	1040570	Identifier	dy1		1040461	1					
ANR	1040571	AssignmentExpression	dy1 = lp1 -> end . y - lp1 -> start . y		1040461	2		=			
ANR	1040572	Identifier	dy1		1040461	0					
ANR	1040573	AdditiveExpression	lp1 -> end . y - lp1 -> start . y		1040461	1		-			
ANR	1040574	MemberAccess	lp1 -> end . y		1040461	0					
ANR	1040575	PtrMemberAccess	lp1 -> end		1040461	0					
ANR	1040576	Identifier	lp1		1040461	0					
ANR	1040577	Identifier	end		1040461	1					
ANR	1040578	Identifier	y		1040461	1					
ANR	1040579	MemberAccess	lp1 -> start . y		1040461	1					
ANR	1040580	PtrMemberAccess	lp1 -> start		1040461	0					
ANR	1040581	Identifier	lp1		1040461	0					
ANR	1040582	Identifier	start		1040461	1					
ANR	1040583	Identifier	y		1040461	1					
ANR	1040584	IdentifierDeclStatement	"fixed dx2 = lp2 -> end . x - lp2 -> start . x , dy2 = lp2 -> end . y - lp2 -> start . y ;"	138:8:5048:5130	1040461	1	True				
ANR	1040585	IdentifierDecl	dx2 = lp2 -> end . x - lp2 -> start . x		1040461	0					
ANR	1040586	IdentifierDeclType	fixed		1040461	0					
ANR	1040587	Identifier	dx2		1040461	1					
ANR	1040588	AssignmentExpression	dx2 = lp2 -> end . x - lp2 -> start . x		1040461	2		=			
ANR	1040589	Identifier	dx2		1040461	0					
ANR	1040590	AdditiveExpression	lp2 -> end . x - lp2 -> start . x		1040461	1		-			
ANR	1040591	MemberAccess	lp2 -> end . x		1040461	0					
ANR	1040592	PtrMemberAccess	lp2 -> end		1040461	0					
ANR	1040593	Identifier	lp2		1040461	0					
ANR	1040594	Identifier	end		1040461	1					
ANR	1040595	Identifier	x		1040461	1					
ANR	1040596	MemberAccess	lp2 -> start . x		1040461	1					
ANR	1040597	PtrMemberAccess	lp2 -> start		1040461	0					
ANR	1040598	Identifier	lp2		1040461	0					
ANR	1040599	Identifier	start		1040461	1					
ANR	1040600	Identifier	x		1040461	1					
ANR	1040601	IdentifierDecl	dy2 = lp2 -> end . y - lp2 -> start . y		1040461	1					
ANR	1040602	IdentifierDeclType	fixed		1040461	0					
ANR	1040603	Identifier	dy2		1040461	1					
ANR	1040604	AssignmentExpression	dy2 = lp2 -> end . y - lp2 -> start . y		1040461	2		=			
ANR	1040605	Identifier	dy2		1040461	0					
ANR	1040606	AdditiveExpression	lp2 -> end . y - lp2 -> start . y		1040461	1		-			
ANR	1040607	MemberAccess	lp2 -> end . y		1040461	0					
ANR	1040608	PtrMemberAccess	lp2 -> end		1040461	0					
ANR	1040609	Identifier	lp2		1040461	0					
ANR	1040610	Identifier	end		1040461	1					
ANR	1040611	Identifier	y		1040461	1					
ANR	1040612	MemberAccess	lp2 -> start . y		1040461	1					
ANR	1040613	PtrMemberAccess	lp2 -> start		1040461	0					
ANR	1040614	Identifier	lp2		1040461	0					
ANR	1040615	Identifier	start		1040461	1					
ANR	1040616	Identifier	y		1040461	1					
ANR	1040617	IdentifierDeclStatement	double diff = ( double ) dx1 * dy2 - ( double ) dx2 * dy1 ;	140:8:5140:5191	1040461	2	True				
ANR	1040618	IdentifierDecl	diff = ( double ) dx1 * dy2 - ( double ) dx2 * dy1		1040461	0					
ANR	1040619	IdentifierDeclType	double		1040461	0					
ANR	1040620	Identifier	diff		1040461	1					
ANR	1040621	AssignmentExpression	diff = ( double ) dx1 * dy2 - ( double ) dx2 * dy1		1040461	2		=			
ANR	1040622	Identifier	diff		1040461	0					
ANR	1040623	AdditiveExpression	( double ) dx1 * dy2 - ( double ) dx2 * dy1		1040461	1		-			
ANR	1040624	MultiplicativeExpression	( double ) dx1 * dy2		1040461	0		*			
ANR	1040625	CastExpression	( double ) dx1		1040461	0					
ANR	1040626	CastTarget	double		1040461	0					
ANR	1040627	Identifier	dx1		1040461	1					
ANR	1040628	Identifier	dy2		1040461	1					
ANR	1040629	MultiplicativeExpression	( double ) dx2 * dy1		1040461	1		*			
ANR	1040630	CastExpression	( double ) dx2		1040461	0					
ANR	1040631	CastTarget	double		1040461	0					
ANR	1040632	Identifier	dx2		1040461	1					
ANR	1040633	Identifier	dy1		1040461	1					
ANR	1040634	ReturnStatement	return ( diff < 0 ? - 1 : diff > 0 ? 1 : 0 ) ;	142:8:5202:5243	1040461	3	True				
ANR	1040635	ConditionalExpression	diff < 0 ? - 1 : diff > 0 ? 1 : 0		1040461	0					
ANR	1040636	Condition	diff < 0		1040461	0					
ANR	1040637	RelationalExpression	diff < 0		1040461	0		<			
ANR	1040638	Identifier	diff		1040461	0					
ANR	1040639	PrimaryExpression	0		1040461	1					
ANR	1040640	UnaryOperationExpression	- 1		1040461	1					
ANR	1040641	UnaryOperator	-		1040461	0					
ANR	1040642	PrimaryExpression	1		1040461	1					
ANR	1040643	ConditionalExpression	diff > 0 ? 1 : 0		1040461	2					
ANR	1040644	Condition	diff > 0		1040461	0					
ANR	1040645	RelationalExpression	diff > 0		1040461	0		>			
ANR	1040646	Identifier	diff		1040461	0					
ANR	1040647	PrimaryExpression	0		1040461	1					
ANR	1040648	PrimaryExpression	1		1040461	1					
ANR	1040649	PrimaryExpression	0		1040461	2					
ANR	1040650	ReturnType	static int		1040461	1					
ANR	1040651	Identifier	x_order		1040461	2					
ANR	1040652	ParameterList	"const active_line * lp1 , const active_line * lp2"		1040461	3					
ANR	1040653	Parameter	const active_line * lp1	108:8:3806:3827	1040461	0	True				
ANR	1040654	ParameterType	const active_line *		1040461	0					
ANR	1040655	Identifier	lp1		1040461	1					
ANR	1040656	Parameter	const active_line * lp2	108:32:3830:3851	1040461	1	True				
ANR	1040657	ParameterType	const active_line *		1040461	0					
ANR	1040658	Identifier	lp2		1040461	1					
ANR	1040659	CFGEntryNode	ENTRY		1040461		True				
ANR	1040660	CFGExitNode	EXIT		1040461		True				
ANR	1040661	Symbol	lp2 -> start		1040461						
ANR	1040662	Symbol	lp1 -> start . x		1040461						
ANR	1040663	Symbol	lp2 -> start . x		1040461						
ANR	1040664	Symbol	lp1 -> start . y		1040461						
ANR	1040665	Symbol	lp2 -> start . y		1040461						
ANR	1040666	Symbol	lp1 -> end . y		1040461						
ANR	1040667	Symbol	lp1 -> end . x		1040461						
ANR	1040668	Symbol	* lp1		1040461						
ANR	1040669	Symbol	* lp2		1040461						
ANR	1040670	Symbol	dx1		1040461						
ANR	1040671	Symbol	s1		1040461						
ANR	1040672	Symbol	order		1040461						
ANR	1040673	Symbol	lp1 -> start		1040461						
ANR	1040674	Symbol	dx2		1040461						
ANR	1040675	Symbol	lp2 -> x_current		1040461						
ANR	1040676	Symbol	lp1 -> x_current		1040461						
ANR	1040677	Symbol	slow_order		1040461						
ANR	1040678	Symbol	diff		1040461						
ANR	1040679	Symbol	lp1		1040461						
ANR	1040680	Symbol	lp2 -> end		1040461						
ANR	1040681	Symbol	lp2 -> end . x		1040461						
ANR	1040682	Symbol	lp2 -> end . y		1040461						
ANR	1040683	Symbol	lp1 -> end		1040461						
ANR	1040684	Symbol	lp2		1040461						
ANR	1040685	Symbol	dy2		1040461						
ANR	1040686	Symbol	dy1		1040461						
ANR	1040687	Function	print_active_line	155:0:5596:6220							
ANR	1040688	FunctionDef	"print_active_line (const gs_memory_t * mem , const char * label , const active_line * alp)"		1040687	0					
ANR	1040689	CompoundStatement		157:0:5694:6220	1040687	0					
ANR	1040690	ExpressionStatement	"dmlprintf5 ( mem , ""[f]%s 0x%lx(%d): x_current=%f x_next=%f\\n"" , label , ( ulong ) alp , alp -> direction , fixed2float ( alp -> x_current ) , fixed2float ( alp -> x_next ) )"	158:4:5700:5881	1040687	0	True				
ANR	1040691	CallExpression	"dmlprintf5 ( mem , ""[f]%s 0x%lx(%d): x_current=%f x_next=%f\\n"" , label , ( ulong ) alp , alp -> direction , fixed2float ( alp -> x_current ) , fixed2float ( alp -> x_next ) )"		1040687	0					
ANR	1040692	Callee	dmlprintf5		1040687	0					
ANR	1040693	Identifier	dmlprintf5		1040687	0					
ANR	1040694	ArgumentList	mem		1040687	1					
ANR	1040695	Argument	mem		1040687	0					
ANR	1040696	Identifier	mem		1040687	0					
ANR	1040697	Argument	"""[f]%s 0x%lx(%d): x_current=%f x_next=%f\\n"""		1040687	1					
ANR	1040698	PrimaryExpression	"""[f]%s 0x%lx(%d): x_current=%f x_next=%f\\n"""		1040687	0					
ANR	1040699	Argument	label		1040687	2					
ANR	1040700	Identifier	label		1040687	0					
ANR	1040701	Argument	( ulong ) alp		1040687	3					
ANR	1040702	CastExpression	( ulong ) alp		1040687	0					
ANR	1040703	CastTarget	ulong		1040687	0					
ANR	1040704	Identifier	alp		1040687	1					
ANR	1040705	Argument	alp -> direction		1040687	4					
ANR	1040706	PtrMemberAccess	alp -> direction		1040687	0					
ANR	1040707	Identifier	alp		1040687	0					
ANR	1040708	Identifier	direction		1040687	1					
ANR	1040709	Argument	fixed2float ( alp -> x_current )		1040687	5					
ANR	1040710	CallExpression	fixed2float ( alp -> x_current )		1040687	0					
ANR	1040711	Callee	fixed2float		1040687	0					
ANR	1040712	Identifier	fixed2float		1040687	0					
ANR	1040713	ArgumentList	alp -> x_current		1040687	1					
ANR	1040714	Argument	alp -> x_current		1040687	0					
ANR	1040715	PtrMemberAccess	alp -> x_current		1040687	0					
ANR	1040716	Identifier	alp		1040687	0					
ANR	1040717	Identifier	x_current		1040687	1					
ANR	1040718	Argument	fixed2float ( alp -> x_next )		1040687	6					
ANR	1040719	CallExpression	fixed2float ( alp -> x_next )		1040687	0					
ANR	1040720	Callee	fixed2float		1040687	0					
ANR	1040721	Identifier	fixed2float		1040687	0					
ANR	1040722	ArgumentList	alp -> x_next		1040687	1					
ANR	1040723	Argument	alp -> x_next		1040687	0					
ANR	1040724	PtrMemberAccess	alp -> x_next		1040687	0					
ANR	1040725	Identifier	alp		1040687	0					
ANR	1040726	Identifier	x_next		1040687	1					
ANR	1040727	ExpressionStatement	"dmlprintf5 ( mem , ""    start=(%f,%f) pt_end=0x%lx(%f,%f)\\n"" , fixed2float ( alp -> start . x ) , fixed2float ( alp -> start . y ) , ( ulong ) alp -> pseg , fixed2float ( alp -> end . x ) , fixed2float ( alp -> end . y ) )"	161:4:5887:6113	1040687	1	True				
ANR	1040728	CallExpression	"dmlprintf5 ( mem , ""    start=(%f,%f) pt_end=0x%lx(%f,%f)\\n"" , fixed2float ( alp -> start . x ) , fixed2float ( alp -> start . y ) , ( ulong ) alp -> pseg , fixed2float ( alp -> end . x ) , fixed2float ( alp -> end . y ) )"		1040687	0					
ANR	1040729	Callee	dmlprintf5		1040687	0					
ANR	1040730	Identifier	dmlprintf5		1040687	0					
ANR	1040731	ArgumentList	mem		1040687	1					
ANR	1040732	Argument	mem		1040687	0					
ANR	1040733	Identifier	mem		1040687	0					
ANR	1040734	Argument	"""    start=(%f,%f) pt_end=0x%lx(%f,%f)\\n"""		1040687	1					
ANR	1040735	PrimaryExpression	"""    start=(%f,%f) pt_end=0x%lx(%f,%f)\\n"""		1040687	0					
ANR	1040736	Argument	fixed2float ( alp -> start . x )		1040687	2					
ANR	1040737	CallExpression	fixed2float ( alp -> start . x )		1040687	0					
ANR	1040738	Callee	fixed2float		1040687	0					
ANR	1040739	Identifier	fixed2float		1040687	0					
ANR	1040740	ArgumentList	alp -> start . x		1040687	1					
ANR	1040741	Argument	alp -> start . x		1040687	0					
ANR	1040742	MemberAccess	alp -> start . x		1040687	0					
ANR	1040743	PtrMemberAccess	alp -> start		1040687	0					
ANR	1040744	Identifier	alp		1040687	0					
ANR	1040745	Identifier	start		1040687	1					
ANR	1040746	Identifier	x		1040687	1					
ANR	1040747	Argument	fixed2float ( alp -> start . y )		1040687	3					
ANR	1040748	CallExpression	fixed2float ( alp -> start . y )		1040687	0					
ANR	1040749	Callee	fixed2float		1040687	0					
ANR	1040750	Identifier	fixed2float		1040687	0					
ANR	1040751	ArgumentList	alp -> start . y		1040687	1					
ANR	1040752	Argument	alp -> start . y		1040687	0					
ANR	1040753	MemberAccess	alp -> start . y		1040687	0					
ANR	1040754	PtrMemberAccess	alp -> start		1040687	0					
ANR	1040755	Identifier	alp		1040687	0					
ANR	1040756	Identifier	start		1040687	1					
ANR	1040757	Identifier	y		1040687	1					
ANR	1040758	Argument	( ulong ) alp -> pseg		1040687	4					
ANR	1040759	CastExpression	( ulong ) alp -> pseg		1040687	0					
ANR	1040760	CastTarget	ulong		1040687	0					
ANR	1040761	PtrMemberAccess	alp -> pseg		1040687	1					
ANR	1040762	Identifier	alp		1040687	0					
ANR	1040763	Identifier	pseg		1040687	1					
ANR	1040764	Argument	fixed2float ( alp -> end . x )		1040687	5					
ANR	1040765	CallExpression	fixed2float ( alp -> end . x )		1040687	0					
ANR	1040766	Callee	fixed2float		1040687	0					
ANR	1040767	Identifier	fixed2float		1040687	0					
ANR	1040768	ArgumentList	alp -> end . x		1040687	1					
ANR	1040769	Argument	alp -> end . x		1040687	0					
ANR	1040770	MemberAccess	alp -> end . x		1040687	0					
ANR	1040771	PtrMemberAccess	alp -> end		1040687	0					
ANR	1040772	Identifier	alp		1040687	0					
ANR	1040773	Identifier	end		1040687	1					
ANR	1040774	Identifier	x		1040687	1					
ANR	1040775	Argument	fixed2float ( alp -> end . y )		1040687	6					
ANR	1040776	CallExpression	fixed2float ( alp -> end . y )		1040687	0					
ANR	1040777	Callee	fixed2float		1040687	0					
ANR	1040778	Identifier	fixed2float		1040687	0					
ANR	1040779	ArgumentList	alp -> end . y		1040687	1					
ANR	1040780	Argument	alp -> end . y		1040687	0					
ANR	1040781	MemberAccess	alp -> end . y		1040687	0					
ANR	1040782	PtrMemberAccess	alp -> end		1040687	0					
ANR	1040783	Identifier	alp		1040687	0					
ANR	1040784	Identifier	end		1040687	1					
ANR	1040785	Identifier	y		1040687	1					
ANR	1040786	ExpressionStatement	"dmlprintf2 ( mem , ""    prev=0x%lx next=0x%lx\\n"" , ( ulong ) alp -> prev , ( ulong ) alp -> next )"	165:4:6119:6218	1040687	2	True				
ANR	1040787	CallExpression	"dmlprintf2 ( mem , ""    prev=0x%lx next=0x%lx\\n"" , ( ulong ) alp -> prev , ( ulong ) alp -> next )"		1040687	0					
ANR	1040788	Callee	dmlprintf2		1040687	0					
ANR	1040789	Identifier	dmlprintf2		1040687	0					
ANR	1040790	ArgumentList	mem		1040687	1					
ANR	1040791	Argument	mem		1040687	0					
ANR	1040792	Identifier	mem		1040687	0					
ANR	1040793	Argument	"""    prev=0x%lx next=0x%lx\\n"""		1040687	1					
ANR	1040794	PrimaryExpression	"""    prev=0x%lx next=0x%lx\\n"""		1040687	0					
ANR	1040795	Argument	( ulong ) alp -> prev		1040687	2					
ANR	1040796	CastExpression	( ulong ) alp -> prev		1040687	0					
ANR	1040797	CastTarget	ulong		1040687	0					
ANR	1040798	PtrMemberAccess	alp -> prev		1040687	1					
ANR	1040799	Identifier	alp		1040687	0					
ANR	1040800	Identifier	prev		1040687	1					
ANR	1040801	Argument	( ulong ) alp -> next		1040687	3					
ANR	1040802	CastExpression	( ulong ) alp -> next		1040687	0					
ANR	1040803	CastTarget	ulong		1040687	0					
ANR	1040804	PtrMemberAccess	alp -> next		1040687	1					
ANR	1040805	Identifier	alp		1040687	0					
ANR	1040806	Identifier	next		1040687	1					
ANR	1040807	ReturnType	static void		1040687	1					
ANR	1040808	Identifier	print_active_line		1040687	2					
ANR	1040809	ParameterList	"const gs_memory_t * mem , const char * label , const active_line * alp"		1040687	3					
ANR	1040810	Parameter	const gs_memory_t * mem	156:18:5626:5647	1040687	0	True				
ANR	1040811	ParameterType	const gs_memory_t *		1040687	0					
ANR	1040812	Identifier	mem		1040687	1					
ANR	1040813	Parameter	const char * label	156:42:5650:5666	1040687	1	True				
ANR	1040814	ParameterType	const char *		1040687	0					
ANR	1040815	Identifier	label		1040687	1					
ANR	1040816	Parameter	const active_line * alp	156:61:5669:5691	1040687	2	True				
ANR	1040817	ParameterType	const active_line *		1040687	0					
ANR	1040818	Identifier	alp		1040687	1					
ANR	1040819	CFGEntryNode	ENTRY		1040687		True				
ANR	1040820	CFGExitNode	EXIT		1040687		True				
ANR	1040821	Symbol	alp -> direction		1040687						
ANR	1040822	Symbol	alp		1040687						
ANR	1040823	Symbol	fixed2float		1040687						
ANR	1040824	Symbol	alp -> end		1040687						
ANR	1040825	Symbol	alp -> x_current		1040687						
ANR	1040826	Symbol	label		1040687						
ANR	1040827	Symbol	alp -> pseg		1040687						
ANR	1040828	Symbol	* alp		1040687						
ANR	1040829	Symbol	alp -> x_next		1040687						
ANR	1040830	Symbol	alp -> prev		1040687						
ANR	1040831	Symbol	alp -> start . y		1040687						
ANR	1040832	Symbol	alp -> start . x		1040687						
ANR	1040833	Symbol	alp -> next		1040687						
ANR	1040834	Symbol	mem		1040687						
ANR	1040835	Symbol	alp -> end . y		1040687						
ANR	1040836	Symbol	alp -> end . x		1040687						
ANR	1040837	Symbol	alp -> start		1040687						
ANR	1040838	Function	print_line_list	168:0:6222:6673							
ANR	1040839	FunctionDef	"print_line_list (const gs_memory_t * mem , const active_line * flp)"		1040838	0					
ANR	1040840	CompoundStatement		170:0:6299:6673	1040838	0					
ANR	1040841	IdentifierDeclStatement	const active_line * lp ;	171:4:6305:6326	1040838	0	True				
ANR	1040842	IdentifierDecl	* lp		1040838	0					
ANR	1040843	IdentifierDeclType	const active_line *		1040838	0					
ANR	1040844	Identifier	lp		1040838	1					
ANR	1040845	ForStatement	for ( lp = flp ; lp != 0 ; lp = lp -> next )		1040838	1					
ANR	1040846	ForInit	lp = flp ;	173:9:6338:6346	1040838	0	True				
ANR	1040847	AssignmentExpression	lp = flp		1040838	0		=			
ANR	1040848	Identifier	lp		1040838	0					
ANR	1040849	Identifier	flp		1040838	1					
ANR	1040850	Condition	lp != 0	173:19:6348:6354	1040838	1	True				
ANR	1040851	EqualityExpression	lp != 0		1040838	0		!=			
ANR	1040852	Identifier	lp		1040838	0					
ANR	1040853	PrimaryExpression	0		1040838	1					
ANR	1040854	AssignmentExpression	lp = lp -> next	173:28:6357:6369	1040838	2	True	=			
ANR	1040855	Identifier	lp		1040838	0					
ANR	1040856	PtrMemberAccess	lp -> next		1040838	1					
ANR	1040857	Identifier	lp		1040838	0					
ANR	1040858	Identifier	next		1040838	1					
ANR	1040859	CompoundStatement		5:8:82:123	1040838	3					
ANR	1040860	IdentifierDeclStatement	"fixed xc = lp -> x_current , xn = lp -> x_next ;"	174:8:6382:6423	1040838	0	True				
ANR	1040861	IdentifierDecl	xc = lp -> x_current		1040838	0					
ANR	1040862	IdentifierDeclType	fixed		1040838	0					
ANR	1040863	Identifier	xc		1040838	1					
ANR	1040864	AssignmentExpression	xc = lp -> x_current		1040838	2		=			
ANR	1040865	Identifier	xc		1040838	0					
ANR	1040866	PtrMemberAccess	lp -> x_current		1040838	1					
ANR	1040867	Identifier	lp		1040838	0					
ANR	1040868	Identifier	x_current		1040838	1					
ANR	1040869	IdentifierDecl	xn = lp -> x_next		1040838	1					
ANR	1040870	IdentifierDeclType	fixed		1040838	0					
ANR	1040871	Identifier	xn		1040838	1					
ANR	1040872	AssignmentExpression	xn = lp -> x_next		1040838	2		=			
ANR	1040873	Identifier	xn		1040838	0					
ANR	1040874	PtrMemberAccess	lp -> x_next		1040838	1					
ANR	1040875	Identifier	lp		1040838	0					
ANR	1040876	Identifier	x_next		1040838	1					
ANR	1040877	ExpressionStatement	"dmlprintf3 ( mem , ""[f]0x%lx(%d): x_current/next=%g"" , ( ulong ) lp , lp -> direction , fixed2float ( xc ) )"	176:8:6434:6564	1040838	1	True				
ANR	1040878	CallExpression	"dmlprintf3 ( mem , ""[f]0x%lx(%d): x_current/next=%g"" , ( ulong ) lp , lp -> direction , fixed2float ( xc ) )"		1040838	0					
ANR	1040879	Callee	dmlprintf3		1040838	0					
ANR	1040880	Identifier	dmlprintf3		1040838	0					
ANR	1040881	ArgumentList	mem		1040838	1					
ANR	1040882	Argument	mem		1040838	0					
ANR	1040883	Identifier	mem		1040838	0					
ANR	1040884	Argument	"""[f]0x%lx(%d): x_current/next=%g"""		1040838	1					
ANR	1040885	PrimaryExpression	"""[f]0x%lx(%d): x_current/next=%g"""		1040838	0					
ANR	1040886	Argument	( ulong ) lp		1040838	2					
ANR	1040887	CastExpression	( ulong ) lp		1040838	0					
ANR	1040888	CastTarget	ulong		1040838	0					
ANR	1040889	Identifier	lp		1040838	1					
ANR	1040890	Argument	lp -> direction		1040838	3					
ANR	1040891	PtrMemberAccess	lp -> direction		1040838	0					
ANR	1040892	Identifier	lp		1040838	0					
ANR	1040893	Identifier	direction		1040838	1					
ANR	1040894	Argument	fixed2float ( xc )		1040838	4					
ANR	1040895	CallExpression	fixed2float ( xc )		1040838	0					
ANR	1040896	Callee	fixed2float		1040838	0					
ANR	1040897	Identifier	fixed2float		1040838	0					
ANR	1040898	ArgumentList	xc		1040838	1					
ANR	1040899	Argument	xc		1040838	0					
ANR	1040900	Identifier	xc		1040838	0					
ANR	1040901	IfStatement	if ( xn != xc )		1040838	2					
ANR	1040902	Condition	xn != xc	179:12:6578:6585	1040838	0	True				
ANR	1040903	EqualityExpression	xn != xc		1040838	0		!=			
ANR	1040904	Identifier	xn		1040838	0					
ANR	1040905	Identifier	xc		1040838	1					
ANR	1040906	ExpressionStatement	"dmprintf1 ( mem , ""/%g"" , fixed2float ( xn ) )"	180:12:6600:6638	1040838	1	True				
ANR	1040907	CallExpression	"dmprintf1 ( mem , ""/%g"" , fixed2float ( xn ) )"		1040838	0					
ANR	1040908	Callee	dmprintf1		1040838	0					
ANR	1040909	Identifier	dmprintf1		1040838	0					
ANR	1040910	ArgumentList	mem		1040838	1					
ANR	1040911	Argument	mem		1040838	0					
ANR	1040912	Identifier	mem		1040838	0					
ANR	1040913	Argument	"""/%g"""		1040838	1					
ANR	1040914	PrimaryExpression	"""/%g"""		1040838	0					
ANR	1040915	Argument	fixed2float ( xn )		1040838	2					
ANR	1040916	CallExpression	fixed2float ( xn )		1040838	0					
ANR	1040917	Callee	fixed2float		1040838	0					
ANR	1040918	Identifier	fixed2float		1040838	0					
ANR	1040919	ArgumentList	xn		1040838	1					
ANR	1040920	Argument	xn		1040838	0					
ANR	1040921	Identifier	xn		1040838	0					
ANR	1040922	ExpressionStatement	"dmputc ( mem , '\\n' )"	181:8:6648:6665	1040838	3	True				
ANR	1040923	CallExpression	"dmputc ( mem , '\\n' )"		1040838	0					
ANR	1040924	Callee	dmputc		1040838	0					
ANR	1040925	Identifier	dmputc		1040838	0					
ANR	1040926	ArgumentList	mem		1040838	1					
ANR	1040927	Argument	mem		1040838	0					
ANR	1040928	Identifier	mem		1040838	0					
ANR	1040929	Argument	'\\n'		1040838	1					
ANR	1040930	PrimaryExpression	'\\n'		1040838	0					
ANR	1040931	ReturnType	static void		1040838	1					
ANR	1040932	Identifier	print_line_list		1040838	2					
ANR	1040933	ParameterList	"const gs_memory_t * mem , const active_line * flp"		1040838	3					
ANR	1040934	Parameter	const gs_memory_t * mem	169:16:6250:6271	1040838	0	True				
ANR	1040935	ParameterType	const gs_memory_t *		1040838	0					
ANR	1040936	Identifier	mem		1040838	1					
ANR	1040937	Parameter	const active_line * flp	169:40:6274:6296	1040838	1	True				
ANR	1040938	ParameterType	const active_line *		1040838	0					
ANR	1040939	Identifier	flp		1040838	1					
ANR	1040940	CFGEntryNode	ENTRY		1040838		True				
ANR	1040941	CFGExitNode	EXIT		1040838		True				
ANR	1040942	Symbol	mem		1040838						
ANR	1040943	Symbol	lp		1040838						
ANR	1040944	Symbol	lp -> x_next		1040838						
ANR	1040945	Symbol	fixed2float		1040838						
ANR	1040946	Symbol	xn		1040838						
ANR	1040947	Symbol	* lp		1040838						
ANR	1040948	Symbol	lp -> direction		1040838						
ANR	1040949	Symbol	flp		1040838						
ANR	1040950	Symbol	lp -> next		1040838						
ANR	1040951	Symbol	lp -> x_current		1040838						
ANR	1040952	Symbol	xc		1040838						
ANR	1040953	Function	print_al	184:0:6675:6842							
ANR	1040954	FunctionDef	"print_al (const gs_memory_t * mem , const char * label , const active_line * alp)"		1040953	0					
ANR	1040955	CompoundStatement		186:0:6771:6842	1040953	0					
ANR	1040956	IfStatement	if ( gs_debug_c ( 'F' ) )		1040953	0					
ANR	1040957	Condition	gs_debug_c ( 'F' )	187:8:6781:6795	1040953	0	True				
ANR	1040958	CallExpression	gs_debug_c ( 'F' )		1040953	0					
ANR	1040959	Callee	gs_debug_c		1040953	0					
ANR	1040960	Identifier	gs_debug_c		1040953	0					
ANR	1040961	ArgumentList	'F'		1040953	1					
ANR	1040962	Argument	'F'		1040953	0					
ANR	1040963	PrimaryExpression	'F'		1040953	0					
ANR	1040964	ExpressionStatement	"print_active_line ( mem , label , alp )"	188:8:6806:6840	1040953	1	True				
ANR	1040965	CallExpression	"print_active_line ( mem , label , alp )"		1040953	0					
ANR	1040966	Callee	print_active_line		1040953	0					
ANR	1040967	Identifier	print_active_line		1040953	0					
ANR	1040968	ArgumentList	mem		1040953	1					
ANR	1040969	Argument	mem		1040953	0					
ANR	1040970	Identifier	mem		1040953	0					
ANR	1040971	Argument	label		1040953	1					
ANR	1040972	Identifier	label		1040953	0					
ANR	1040973	Argument	alp		1040953	2					
ANR	1040974	Identifier	alp		1040953	0					
ANR	1040975	ReturnType	static inline void		1040953	1					
ANR	1040976	Identifier	print_al		1040953	2					
ANR	1040977	ParameterList	"const gs_memory_t * mem , const char * label , const active_line * alp"		1040953	3					
ANR	1040978	Parameter	const gs_memory_t * mem	185:9:6703:6724	1040953	0	True				
ANR	1040979	ParameterType	const gs_memory_t *		1040953	0					
ANR	1040980	Identifier	mem		1040953	1					
ANR	1040981	Parameter	const char * label	185:33:6727:6743	1040953	1	True				
ANR	1040982	ParameterType	const char *		1040953	0					
ANR	1040983	Identifier	label		1040953	1					
ANR	1040984	Parameter	const active_line * alp	185:52:6746:6768	1040953	2	True				
ANR	1040985	ParameterType	const active_line *		1040953	0					
ANR	1040986	Identifier	alp		1040953	1					
ANR	1040987	CFGEntryNode	ENTRY		1040953		True				
ANR	1040988	CFGExitNode	EXIT		1040953		True				
ANR	1040989	Symbol	mem		1040953						
ANR	1040990	Symbol	alp		1040953						
ANR	1040991	Symbol	gs_debug_c		1040953						
ANR	1040992	Symbol	label		1040953						
ANR	1040993	Function	is_spotan_device	194:0:6901:7298							
ANR	1040994	FunctionDef	is_spotan_device (gx_device * dev)		1040993	0					
ANR	1040995	CompoundStatement		196:0:6954:7298	1040993	0					
ANR	1040996	ReturnStatement	"return dev_proc ( dev , open_device ) == san_open ;"	202:4:7251:7296	1040993	0	True				
ANR	1040997	EqualityExpression	"dev_proc ( dev , open_device ) == san_open"		1040993	0		==			
ANR	1040998	CallExpression	"dev_proc ( dev , open_device )"		1040993	0					
ANR	1040999	Callee	dev_proc		1040993	0					
ANR	1041000	Identifier	dev_proc		1040993	0					
ANR	1041001	ArgumentList	dev		1040993	1					
ANR	1041002	Argument	dev		1040993	0					
ANR	1041003	Identifier	dev		1040993	0					
ANR	1041004	Argument	open_device		1040993	1					
ANR	1041005	Identifier	open_device		1040993	0					
ANR	1041006	Identifier	san_open		1040993	1					
ANR	1041007	ReturnType	static inline bool		1040993	1					
ANR	1041008	Identifier	is_spotan_device		1040993	2					
ANR	1041009	ParameterList	gx_device * dev		1040993	3					
ANR	1041010	Parameter	gx_device * dev	195:17:6937:6951	1040993	0	True				
ANR	1041011	ParameterType	gx_device *		1040993	0					
ANR	1041012	Identifier	dev		1040993	1					
ANR	1041013	CFGEntryNode	ENTRY		1040993		True				
ANR	1041014	CFGExitNode	EXIT		1040993		True				
ANR	1041015	Symbol	dev		1040993						
ANR	1041016	Symbol	dev_proc		1040993						
ANR	1041017	Symbol	open_device		1040993						
ANR	1041018	Symbol	san_open		1040993						
ANR	1041019	DeclStmt									
ANR	1041020	Decl							void	void ( line_list * )	free_line_list
ANR	1041021	DeclStmt									
ANR	1041022	Decl							int	"int ( gx_path * , line_list * )"	add_y_list
ANR	1041023	DeclStmt									
ANR	1041024	Decl							int	"int ( const segment * prev_lp , const segment * lp , const gs_fixed_point * curr , const gs_fixed_point * prev , int dir , line_list * ll )"	add_y_line_aux
ANR	1041025	DeclStmt									
ANR	1041026	Decl							void	"void ( active_line * , line_list * )"	insert_x_new
ANR	1041027	DeclStmt									
ANR	1041028	Decl							int	"int ( active_line * , const line_list * , bool )"	end_x_line
ANR	1041029	DeclStmt									
ANR	1041030	Decl							int	"int ( active_line * alp , bool move_iterator )"	step_al
ANR	1041031	Function	init_line_list	234:0:8639:9254							
ANR	1041032	FunctionDef	"init_line_list (line_list * ll , gs_memory_t * mem)"		1041031	0					
ANR	1041033	CompoundStatement		236:0:8707:9254	1041031	0					
ANR	1041034	ExpressionStatement	ll -> memory = mem	237:4:8713:8729	1041031	0	True				
ANR	1041035	AssignmentExpression	ll -> memory = mem		1041031	0		=			
ANR	1041036	PtrMemberAccess	ll -> memory		1041031	0					
ANR	1041037	Identifier	ll		1041031	0					
ANR	1041038	Identifier	memory		1041031	1					
ANR	1041039	Identifier	mem		1041031	1					
ANR	1041040	ExpressionStatement	ll -> active_area = 0	238:4:8735:8754	1041031	1	True				
ANR	1041041	AssignmentExpression	ll -> active_area = 0		1041031	0		=			
ANR	1041042	PtrMemberAccess	ll -> active_area		1041031	0					
ANR	1041043	Identifier	ll		1041031	0					
ANR	1041044	Identifier	active_area		1041031	1					
ANR	1041045	PrimaryExpression	0		1041031	1					
ANR	1041046	ExpressionStatement	ll -> next_active = ll -> local_active	239:4:8760:8794	1041031	2	True				
ANR	1041047	AssignmentExpression	ll -> next_active = ll -> local_active		1041031	0		=			
ANR	1041048	PtrMemberAccess	ll -> next_active		1041031	0					
ANR	1041049	Identifier	ll		1041031	0					
ANR	1041050	Identifier	next_active		1041031	1					
ANR	1041051	PtrMemberAccess	ll -> local_active		1041031	1					
ANR	1041052	Identifier	ll		1041031	0					
ANR	1041053	Identifier	local_active		1041031	1					
ANR	1041054	ExpressionStatement	ll -> limit = ll -> next_active + MAX_LOCAL_ACTIVE	240:4:8800:8846	1041031	3	True				
ANR	1041055	AssignmentExpression	ll -> limit = ll -> next_active + MAX_LOCAL_ACTIVE		1041031	0		=			
ANR	1041056	PtrMemberAccess	ll -> limit		1041031	0					
ANR	1041057	Identifier	ll		1041031	0					
ANR	1041058	Identifier	limit		1041031	1					
ANR	1041059	AdditiveExpression	ll -> next_active + MAX_LOCAL_ACTIVE		1041031	1		+			
ANR	1041060	PtrMemberAccess	ll -> next_active		1041031	0					
ANR	1041061	Identifier	ll		1041031	0					
ANR	1041062	Identifier	next_active		1041031	1					
ANR	1041063	Identifier	MAX_LOCAL_ACTIVE		1041031	1					
ANR	1041064	ExpressionStatement	ll -> close_count = 0	241:4:8852:8871	1041031	4	True				
ANR	1041065	AssignmentExpression	ll -> close_count = 0		1041031	0		=			
ANR	1041066	PtrMemberAccess	ll -> close_count		1041031	0					
ANR	1041067	Identifier	ll		1041031	0					
ANR	1041068	Identifier	close_count		1041031	1					
ANR	1041069	PrimaryExpression	0		1041031	1					
ANR	1041070	ExpressionStatement	ll -> y_list = 0	242:4:8877:8891	1041031	5	True				
ANR	1041071	AssignmentExpression	ll -> y_list = 0		1041031	0		=			
ANR	1041072	PtrMemberAccess	ll -> y_list		1041031	0					
ANR	1041073	Identifier	ll		1041031	0					
ANR	1041074	Identifier	y_list		1041031	1					
ANR	1041075	PrimaryExpression	0		1041031	1					
ANR	1041076	ExpressionStatement	ll -> y_line = 0	243:4:8897:8911	1041031	6	True				
ANR	1041077	AssignmentExpression	ll -> y_line = 0		1041031	0		=			
ANR	1041078	PtrMemberAccess	ll -> y_line		1041031	0					
ANR	1041079	Identifier	ll		1041031	0					
ANR	1041080	Identifier	y_line		1041031	1					
ANR	1041081	PrimaryExpression	0		1041031	1					
ANR	1041082	ExpressionStatement	ll -> h_list0 = ll -> h_list1 = 0	244:4:8917:8946	1041031	7	True				
ANR	1041083	AssignmentExpression	ll -> h_list0 = ll -> h_list1 = 0		1041031	0		=			
ANR	1041084	PtrMemberAccess	ll -> h_list0		1041031	0					
ANR	1041085	Identifier	ll		1041031	0					
ANR	1041086	Identifier	h_list0		1041031	1					
ANR	1041087	AssignmentExpression	ll -> h_list1 = 0		1041031	1		=			
ANR	1041088	PtrMemberAccess	ll -> h_list1		1041031	0					
ANR	1041089	Identifier	ll		1041031	0					
ANR	1041090	Identifier	h_list1		1041031	1					
ANR	1041091	PrimaryExpression	0		1041031	1					
ANR	1041092	ExpressionStatement	ll -> x_head . prev = NULL	246:4:8953:8975	1041031	8	True				
ANR	1041093	AssignmentExpression	ll -> x_head . prev = NULL		1041031	0		=			
ANR	1041094	MemberAccess	ll -> x_head . prev		1041031	0					
ANR	1041095	PtrMemberAccess	ll -> x_head		1041031	0					
ANR	1041096	Identifier	ll		1041031	0					
ANR	1041097	Identifier	x_head		1041031	1					
ANR	1041098	Identifier	prev		1041031	1					
ANR	1041099	Identifier	NULL		1041031	1					
ANR	1041100	ExpressionStatement	ll -> x_head . start . x = 0	248:4:9047:9069	1041031	9	True				
ANR	1041101	AssignmentExpression	ll -> x_head . start . x = 0		1041031	0		=			
ANR	1041102	MemberAccess	ll -> x_head . start . x		1041031	0					
ANR	1041103	MemberAccess	ll -> x_head . start		1041031	0					
ANR	1041104	PtrMemberAccess	ll -> x_head		1041031	0					
ANR	1041105	Identifier	ll		1041031	0					
ANR	1041106	Identifier	x_head		1041031	1					
ANR	1041107	Identifier	start		1041031	1					
ANR	1041108	Identifier	x		1041031	1					
ANR	1041109	PrimaryExpression	0		1041031	1					
ANR	1041110	ExpressionStatement	ll -> x_head . start . y = 0	249:4:9075:9097	1041031	10	True				
ANR	1041111	AssignmentExpression	ll -> x_head . start . y = 0		1041031	0		=			
ANR	1041112	MemberAccess	ll -> x_head . start . y		1041031	0					
ANR	1041113	MemberAccess	ll -> x_head . start		1041031	0					
ANR	1041114	PtrMemberAccess	ll -> x_head		1041031	0					
ANR	1041115	Identifier	ll		1041031	0					
ANR	1041116	Identifier	x_head		1041031	1					
ANR	1041117	Identifier	start		1041031	1					
ANR	1041118	Identifier	y		1041031	1					
ANR	1041119	PrimaryExpression	0		1041031	1					
ANR	1041120	ExpressionStatement	ll -> x_head . end . x = 0	250:4:9103:9123	1041031	11	True				
ANR	1041121	AssignmentExpression	ll -> x_head . end . x = 0		1041031	0		=			
ANR	1041122	MemberAccess	ll -> x_head . end . x		1041031	0					
ANR	1041123	MemberAccess	ll -> x_head . end		1041031	0					
ANR	1041124	PtrMemberAccess	ll -> x_head		1041031	0					
ANR	1041125	Identifier	ll		1041031	0					
ANR	1041126	Identifier	x_head		1041031	1					
ANR	1041127	Identifier	end		1041031	1					
ANR	1041128	Identifier	x		1041031	1					
ANR	1041129	PrimaryExpression	0		1041031	1					
ANR	1041130	ExpressionStatement	ll -> x_head . end . y = 0	251:4:9129:9149	1041031	12	True				
ANR	1041131	AssignmentExpression	ll -> x_head . end . y = 0		1041031	0		=			
ANR	1041132	MemberAccess	ll -> x_head . end . y		1041031	0					
ANR	1041133	MemberAccess	ll -> x_head . end		1041031	0					
ANR	1041134	PtrMemberAccess	ll -> x_head		1041031	0					
ANR	1041135	Identifier	ll		1041031	0					
ANR	1041136	Identifier	x_head		1041031	1					
ANR	1041137	Identifier	end		1041031	1					
ANR	1041138	Identifier	y		1041031	1					
ANR	1041139	PrimaryExpression	0		1041031	1					
ANR	1041140	ExpressionStatement	INCR ( fill )	254:4:9242:9252	1041031	13	True				
ANR	1041141	CallExpression	INCR ( fill )		1041031	0					
ANR	1041142	Callee	INCR		1041031	0					
ANR	1041143	Identifier	INCR		1041031	0					
ANR	1041144	ArgumentList	fill		1041031	1					
ANR	1041145	Argument	fill		1041031	0					
ANR	1041146	Identifier	fill		1041031	0					
ANR	1041147	ReturnType	static inline void		1041031	1					
ANR	1041148	Identifier	init_line_list		1041031	2					
ANR	1041149	ParameterList	"line_list * ll , gs_memory_t * mem"		1041031	3					
ANR	1041150	Parameter	line_list * ll	235:15:8673:8685	1041031	0	True				
ANR	1041151	ParameterType	line_list *		1041031	0					
ANR	1041152	Identifier	ll		1041031	1					
ANR	1041153	Parameter	gs_memory_t * mem	235:30:8688:8704	1041031	1	True				
ANR	1041154	ParameterType	gs_memory_t *		1041031	0					
ANR	1041155	Identifier	mem		1041031	1					
ANR	1041156	CFGEntryNode	ENTRY		1041031		True				
ANR	1041157	CFGExitNode	EXIT		1041031		True				
ANR	1041158	Symbol	ll		1041031						
ANR	1041159	Symbol	ll -> local_active		1041031						
ANR	1041160	Symbol	NULL		1041031						
ANR	1041161	Symbol	ll -> next_active		1041031						
ANR	1041162	Symbol	ll -> memory		1041031						
ANR	1041163	Symbol	* ll		1041031						
ANR	1041164	Symbol	ll -> y_list		1041031						
ANR	1041165	Symbol	ll -> x_head . prev		1041031						
ANR	1041166	Symbol	fill		1041031						
ANR	1041167	Symbol	ll -> active_area		1041031						
ANR	1041168	Symbol	ll -> x_head . end . x		1041031						
ANR	1041169	Symbol	ll -> x_head . end . y		1041031						
ANR	1041170	Symbol	MAX_LOCAL_ACTIVE		1041031						
ANR	1041171	Symbol	ll -> x_head		1041031						
ANR	1041172	Symbol	ll -> y_line		1041031						
ANR	1041173	Symbol	ll -> x_head . start		1041031						
ANR	1041174	Symbol	mem		1041031						
ANR	1041175	Symbol	ll -> h_list0		1041031						
ANR	1041176	Symbol	ll -> h_list1		1041031						
ANR	1041177	Symbol	ll -> limit		1041031						
ANR	1041178	Symbol	ll -> x_head . start . y		1041031						
ANR	1041179	Symbol	ll -> x_head . start . x		1041031						
ANR	1041180	Symbol	ll -> x_head . end		1041031						
ANR	1041181	Symbol	ll -> close_count		1041031						
ANR	1041182	Function	unclose_path	258:0:9313:9781							
ANR	1041183	FunctionDef	"unclose_path (gx_path * ppath , int count)"		1041182	0					
ANR	1041184	CompoundStatement		260:0:9373:9781	1041182	0					
ANR	1041185	IdentifierDeclStatement	subpath * psub ;	261:4:9379:9392	1041182	0	True				
ANR	1041186	IdentifierDecl	* psub		1041182	0					
ANR	1041187	IdentifierDeclType	subpath *		1041182	0					
ANR	1041188	Identifier	psub		1041182	1					
ANR	1041189	ForStatement	for ( psub = ppath -> first_subpath ; count != 0 ; psub = ( subpath * ) psub -> last -> next )		1041182	1					
ANR	1041190	ForInit	psub = ppath -> first_subpath ;	263:9:9404:9431	1041182	0	True				
ANR	1041191	AssignmentExpression	psub = ppath -> first_subpath		1041182	0		=			
ANR	1041192	Identifier	psub		1041182	0					
ANR	1041193	PtrMemberAccess	ppath -> first_subpath		1041182	1					
ANR	1041194	Identifier	ppath		1041182	0					
ANR	1041195	Identifier	first_subpath		1041182	1					
ANR	1041196	Condition	count != 0	263:38:9433:9442	1041182	1	True				
ANR	1041197	EqualityExpression	count != 0		1041182	0		!=			
ANR	1041198	Identifier	count		1041182	0					
ANR	1041199	PrimaryExpression	0		1041182	1					
ANR	1041200	AssignmentExpression	psub = ( subpath * ) psub -> last -> next	264:9:9454:9488	1041182	2	True	=			
ANR	1041201	Identifier	psub		1041182	0					
ANR	1041202	CastExpression	( subpath * ) psub -> last -> next		1041182	1					
ANR	1041203	CastTarget	subpath *		1041182	0					
ANR	1041204	PtrMemberAccess	psub -> last -> next		1041182	1					
ANR	1041205	PtrMemberAccess	psub -> last		1041182	0					
ANR	1041206	Identifier	psub		1041182	0					
ANR	1041207	Identifier	last		1041182	1					
ANR	1041208	Identifier	next		1041182	1					
ANR	1041209	IfStatement	if ( psub -> last == ( segment * ) & psub -> closer )		1041182	3					
ANR	1041210	Condition	psub -> last == ( segment * ) & psub -> closer	266:12:9512:9551	1041182	0	True				
ANR	1041211	EqualityExpression	psub -> last == ( segment * ) & psub -> closer		1041182	0		==			
ANR	1041212	PtrMemberAccess	psub -> last		1041182	0					
ANR	1041213	Identifier	psub		1041182	0					
ANR	1041214	Identifier	last		1041182	1					
ANR	1041215	CastExpression	( segment * ) & psub -> closer		1041182	1					
ANR	1041216	CastTarget	segment *		1041182	0					
ANR	1041217	UnaryOperationExpression	& psub -> closer		1041182	1					
ANR	1041218	UnaryOperator	&		1041182	0					
ANR	1041219	PtrMemberAccess	psub -> closer		1041182	1					
ANR	1041220	Identifier	psub		1041182	0					
ANR	1041221	Identifier	closer		1041182	1					
ANR	1041222	CompoundStatement		8:12:194:254	1041182	1					
ANR	1041223	IdentifierDeclStatement	"segment * prev = psub -> closer . prev , * next = psub -> closer . next ;"	267:12:9568:9628	1041182	0	True				
ANR	1041224	IdentifierDecl	* prev = psub -> closer . prev		1041182	0					
ANR	1041225	IdentifierDeclType	segment *		1041182	0					
ANR	1041226	Identifier	prev		1041182	1					
ANR	1041227	AssignmentExpression	* prev = psub -> closer . prev		1041182	2		=			
ANR	1041228	Identifier	prev		1041182	0					
ANR	1041229	MemberAccess	psub -> closer . prev		1041182	1					
ANR	1041230	PtrMemberAccess	psub -> closer		1041182	0					
ANR	1041231	Identifier	psub		1041182	0					
ANR	1041232	Identifier	closer		1041182	1					
ANR	1041233	Identifier	prev		1041182	1					
ANR	1041234	IdentifierDecl	* next = psub -> closer . next		1041182	1					
ANR	1041235	IdentifierDeclType	segment *		1041182	0					
ANR	1041236	Identifier	next		1041182	1					
ANR	1041237	AssignmentExpression	* next = psub -> closer . next		1041182	2		=			
ANR	1041238	Identifier	next		1041182	0					
ANR	1041239	MemberAccess	psub -> closer . next		1041182	1					
ANR	1041240	PtrMemberAccess	psub -> closer		1041182	0					
ANR	1041241	Identifier	psub		1041182	0					
ANR	1041242	Identifier	closer		1041182	1					
ANR	1041243	Identifier	next		1041182	1					
ANR	1041244	ExpressionStatement	prev -> next = next	269:12:9643:9660	1041182	1	True				
ANR	1041245	AssignmentExpression	prev -> next = next		1041182	0		=			
ANR	1041246	PtrMemberAccess	prev -> next		1041182	0					
ANR	1041247	Identifier	prev		1041182	0					
ANR	1041248	Identifier	next		1041182	1					
ANR	1041249	Identifier	next		1041182	1					
ANR	1041250	IfStatement	if ( next )		1041182	2					
ANR	1041251	Condition	next	270:16:9678:9681	1041182	0	True				
ANR	1041252	Identifier	next		1041182	0					
ANR	1041253	ExpressionStatement	next -> prev = prev	271:16:9700:9717	1041182	1	True				
ANR	1041254	AssignmentExpression	next -> prev = prev		1041182	0		=			
ANR	1041255	PtrMemberAccess	next -> prev		1041182	0					
ANR	1041256	Identifier	next		1041182	0					
ANR	1041257	Identifier	prev		1041182	1					
ANR	1041258	Identifier	prev		1041182	1					
ANR	1041259	ExpressionStatement	psub -> last = prev	272:12:9731:9748	1041182	3	True				
ANR	1041260	AssignmentExpression	psub -> last = prev		1041182	0		=			
ANR	1041261	PtrMemberAccess	psub -> last		1041182	0					
ANR	1041262	Identifier	psub		1041182	0					
ANR	1041263	Identifier	last		1041182	1					
ANR	1041264	Identifier	prev		1041182	1					
ANR	1041265	ExpressionStatement	count --	273:12:9762:9769	1041182	4	True				
ANR	1041266	PostIncDecOperationExpression	count --		1041182	0					
ANR	1041267	Identifier	count		1041182	0					
ANR	1041268	IncDec	--		1041182	1					
ANR	1041269	ReturnType	static inline void		1041182	1					
ANR	1041270	Identifier	unclose_path		1041182	2					
ANR	1041271	ParameterList	"gx_path * ppath , int count"		1041182	3					
ANR	1041272	Parameter	gx_path * ppath	259:13:9345:9359	1041182	0	True				
ANR	1041273	ParameterType	gx_path *		1041182	0					
ANR	1041274	Identifier	ppath		1041182	1					
ANR	1041275	Parameter	int count	259:30:9362:9370	1041182	1	True				
ANR	1041276	ParameterType	int		1041182	0					
ANR	1041277	Identifier	count		1041182	1					
ANR	1041278	CFGEntryNode	ENTRY		1041182		True				
ANR	1041279	CFGExitNode	EXIT		1041182		True				
ANR	1041280	Symbol	* ppath		1041182						
ANR	1041281	Symbol	next		1041182						
ANR	1041282	Symbol	prev -> next		1041182						
ANR	1041283	Symbol	psub -> last		1041182						
ANR	1041284	Symbol	& psub -> closer		1041182						
ANR	1041285	Symbol	psub		1041182						
ANR	1041286	Symbol	* psub		1041182						
ANR	1041287	Symbol	psub -> closer		1041182						
ANR	1041288	Symbol	* * psub		1041182						
ANR	1041289	Symbol	prev		1041182						
ANR	1041290	Symbol	count		1041182						
ANR	1041291	Symbol	* prev		1041182						
ANR	1041292	Symbol	ppath		1041182						
ANR	1041293	Symbol	ppath -> first_subpath		1041182						
ANR	1041294	Symbol	* next		1041182						
ANR	1041295	Symbol	* psub -> last		1041182						
ANR	1041296	Symbol	psub -> closer . next		1041182						
ANR	1041297	Symbol	next -> prev		1041182						
ANR	1041298	Symbol	psub -> closer . prev		1041182						
ANR	1041299	Symbol	psub -> last -> next		1041182						
ANR	1041300	Function	gx_general_fill_path	280:0:9828:24076							
ANR	1041301	FunctionDef	"gx_general_fill_path (gx_device * pdev , const gs_gstate * pgs , gx_path * ppath , const gx_fill_params * params , const gx_device_color * pdevc , const gx_clip_path * pcpath)"		1041300	0					
ANR	1041302	CompoundStatement		284:0:10047:24076	1041300	0					
ANR	1041303	IdentifierDeclStatement	gs_fixed_point adjust ;	285:4:10053:10074	1041300	0	True				
ANR	1041304	IdentifierDecl	adjust		1041300	0					
ANR	1041305	IdentifierDeclType	gs_fixed_point		1041300	0					
ANR	1041306	Identifier	adjust		1041300	1					
ANR	1041307	IdentifierDeclStatement	gs_logical_operation_t lop = pgs -> log_op ;	286:4:10080:10120	1041300	1	True				
ANR	1041308	IdentifierDecl	lop = pgs -> log_op		1041300	0					
ANR	1041309	IdentifierDeclType	gs_logical_operation_t		1041300	0					
ANR	1041310	Identifier	lop		1041300	1					
ANR	1041311	AssignmentExpression	lop = pgs -> log_op		1041300	2		=			
ANR	1041312	Identifier	lop		1041300	0					
ANR	1041313	PtrMemberAccess	pgs -> log_op		1041300	1					
ANR	1041314	Identifier	pgs		1041300	0					
ANR	1041315	Identifier	log_op		1041300	1					
ANR	1041316	IdentifierDeclStatement	"gs_fixed_rect ibox , bbox , sbox ;"	287:4:10126:10156	1041300	2	True				
ANR	1041317	IdentifierDecl	ibox		1041300	0					
ANR	1041318	IdentifierDeclType	gs_fixed_rect		1041300	0					
ANR	1041319	Identifier	ibox		1041300	1					
ANR	1041320	IdentifierDecl	bbox		1041300	1					
ANR	1041321	IdentifierDeclType	gs_fixed_rect		1041300	0					
ANR	1041322	Identifier	bbox		1041300	1					
ANR	1041323	IdentifierDecl	sbox		1041300	2					
ANR	1041324	IdentifierDeclType	gs_fixed_rect		1041300	0					
ANR	1041325	Identifier	sbox		1041300	1					
ANR	1041326	IdentifierDeclStatement	gx_device_clip cdev ;	288:4:10162:10181	1041300	3	True				
ANR	1041327	IdentifierDecl	cdev		1041300	0					
ANR	1041328	IdentifierDeclType	gx_device_clip		1041300	0					
ANR	1041329	Identifier	cdev		1041300	1					
ANR	1041330	IdentifierDeclStatement	gx_device * dev = pdev ;	289:4:10187:10208	1041300	4	True				
ANR	1041331	IdentifierDecl	* dev = pdev		1041300	0					
ANR	1041332	IdentifierDeclType	gx_device *		1041300	0					
ANR	1041333	Identifier	dev		1041300	1					
ANR	1041334	AssignmentExpression	* dev = pdev		1041300	2		=			
ANR	1041335	Identifier	pdev		1041300	0					
ANR	1041336	Identifier	pdev		1041300	1					
ANR	1041337	IdentifierDeclStatement	gx_device * save_dev = dev ;	290:4:10214:10239	1041300	5	True				
ANR	1041338	IdentifierDecl	* save_dev = dev		1041300	0					
ANR	1041339	IdentifierDeclType	gx_device *		1041300	0					
ANR	1041340	Identifier	save_dev		1041300	1					
ANR	1041341	AssignmentExpression	* save_dev = dev		1041300	2		=			
ANR	1041342	Identifier	dev		1041300	0					
ANR	1041343	Identifier	dev		1041300	1					
ANR	1041344	IdentifierDeclStatement	gx_path ffpath ;	291:4:10245:10259	1041300	6	True				
ANR	1041345	IdentifierDecl	ffpath		1041300	0					
ANR	1041346	IdentifierDeclType	gx_path		1041300	0					
ANR	1041347	Identifier	ffpath		1041300	1					
ANR	1041348	IdentifierDeclStatement	gx_path * pfpath ;	292:4:10265:10280	1041300	7	True				
ANR	1041349	IdentifierDecl	* pfpath		1041300	0					
ANR	1041350	IdentifierDeclType	gx_path *		1041300	0					
ANR	1041351	Identifier	pfpath		1041300	1					
ANR	1041352	IdentifierDeclStatement	int code ;	293:4:10286:10294	1041300	8	True				
ANR	1041353	IdentifierDecl	code		1041300	0					
ANR	1041354	IdentifierDeclType	int		1041300	0					
ANR	1041355	Identifier	code		1041300	1					
ANR	1041356	IdentifierDeclStatement	int max_fill_band = dev -> max_fill_band ;	294:4:10300:10338	1041300	9	True				
ANR	1041357	IdentifierDecl	max_fill_band = dev -> max_fill_band		1041300	0					
ANR	1041358	IdentifierDeclType	int		1041300	0					
ANR	1041359	Identifier	max_fill_band		1041300	1					
ANR	1041360	AssignmentExpression	max_fill_band = dev -> max_fill_band		1041300	2		=			
ANR	1041361	Identifier	max_fill_band		1041300	0					
ANR	1041362	PtrMemberAccess	dev -> max_fill_band		1041300	1					
ANR	1041363	Identifier	dev		1041300	0					
ANR	1041364	Identifier	max_fill_band		1041300	1					
ANR	1041365	Statement	define	295:1:10341:10346	1041300	10	True				
ANR	1041366	Statement	NO_BAND_MASK	295:8:10348:10359	1041300	11	True				
ANR	1041367	Statement	(	295:21:10361:10361	1041300	12	True				
ANR	1041368	Statement	(	295:22:10362:10362	1041300	13	True				
ANR	1041369	Statement	fixed	295:23:10363:10367	1041300	14	True				
ANR	1041370	Statement	)	295:28:10368:10368	1041300	15	True				
ANR	1041371	Statement	(	295:29:10369:10369	1041300	16	True				
ANR	1041372	Statement	-	295:30:10370:10370	1041300	17	True				
ANR	1041373	Statement	1	295:31:10371:10371	1041300	18	True				
ANR	1041374	Statement	)	295:32:10372:10372	1041300	19	True				
ANR	1041375	Statement	<<	295:34:10374:10375	1041300	20	True				
ANR	1041376	Statement	(	295:37:10377:10377	1041300	21	True				
ANR	1041377	Statement	sizeof	295:38:10378:10383	1041300	22	True				
ANR	1041378	Statement	(	295:44:10384:10384	1041300	23	True				
ANR	1041379	Statement	fixed	295:45:10385:10389	1041300	24	True				
ANR	1041380	Statement	)	295:50:10390:10390	1041300	25	True				
ANR	1041381	Statement	*	295:52:10392:10392	1041300	26	True				
ANR	1041382	Statement	8	295:54:10394:10394	1041300	27	True				
ANR	1041383	Statement	-	295:56:10396:10396	1041300	28	True				
ANR	1041384	Statement	1	295:58:10398:10398	1041300	29	True				
ANR	1041385	Statement	)	295:59:10399:10399	1041300	30	True				
ANR	1041386	Statement	)	295:60:10400:10400	1041300	31	True				
ANR	1041387	IdentifierDeclStatement	const bool is_character = params -> adjust . x == - 1 ;	296:4:10406:10454	1041300	32	True				
ANR	1041388	IdentifierDecl	is_character = params -> adjust . x == - 1		1041300	0					
ANR	1041389	IdentifierDeclType	const bool		1041300	0					
ANR	1041390	Identifier	is_character		1041300	1					
ANR	1041391	AssignmentExpression	is_character = params -> adjust . x == - 1		1041300	2		=			
ANR	1041392	Identifier	is_character		1041300	0					
ANR	1041393	EqualityExpression	params -> adjust . x == - 1		1041300	1		==			
ANR	1041394	MemberAccess	params -> adjust . x		1041300	0					
ANR	1041395	PtrMemberAccess	params -> adjust		1041300	0					
ANR	1041396	Identifier	params		1041300	0					
ANR	1041397	Identifier	adjust		1041300	1					
ANR	1041398	Identifier	x		1041300	1					
ANR	1041399	UnaryOperationExpression	- 1		1041300	1					
ANR	1041400	UnaryOperator	-		1041300	0					
ANR	1041401	PrimaryExpression	1		1041300	1					
ANR	1041402	IdentifierDeclStatement	bool fill_by_trapezoids ;	297:4:10481:10504	1041300	33	True				
ANR	1041403	IdentifierDecl	fill_by_trapezoids		1041300	0					
ANR	1041404	IdentifierDeclType	bool		1041300	0					
ANR	1041405	Identifier	fill_by_trapezoids		1041300	1					
ANR	1041406	IdentifierDeclStatement	bool big_path = ppath -> subpath_count > 50 ;	298:4:10510:10551	1041300	34	True				
ANR	1041407	IdentifierDecl	big_path = ppath -> subpath_count > 50		1041300	0					
ANR	1041408	IdentifierDeclType	bool		1041300	0					
ANR	1041409	Identifier	big_path		1041300	1					
ANR	1041410	AssignmentExpression	big_path = ppath -> subpath_count > 50		1041300	2		=			
ANR	1041411	Identifier	big_path		1041300	0					
ANR	1041412	RelationalExpression	ppath -> subpath_count > 50		1041300	1		>			
ANR	1041413	PtrMemberAccess	ppath -> subpath_count		1041300	0					
ANR	1041414	Identifier	ppath		1041300	0					
ANR	1041415	Identifier	subpath_count		1041300	1					
ANR	1041416	PrimaryExpression	50		1041300	1					
ANR	1041417	IdentifierDeclStatement	fill_options fo ;	299:4:10557:10572	1041300	35	True				
ANR	1041418	IdentifierDecl	fo		1041300	0					
ANR	1041419	IdentifierDeclType	fill_options		1041300	0					
ANR	1041420	Identifier	fo		1041300	1					
ANR	1041421	IdentifierDeclStatement	line_list lst ;	300:4:10578:10591	1041300	36	True				
ANR	1041422	IdentifierDecl	lst		1041300	0					
ANR	1041423	IdentifierDeclType	line_list		1041300	0					
ANR	1041424	Identifier	lst		1041300	1					
ANR	1041425	IdentifierDeclStatement	int clipping = 0 ;	301:4:10597:10613	1041300	37	True				
ANR	1041426	IdentifierDecl	clipping = 0		1041300	0					
ANR	1041427	IdentifierDeclType	int		1041300	0					
ANR	1041428	Identifier	clipping		1041300	1					
ANR	1041429	AssignmentExpression	clipping = 0		1041300	2		=			
ANR	1041430	Identifier	clipping		1041300	0					
ANR	1041431	PrimaryExpression	0		1041300	1					
ANR	1041432	IdentifierDeclStatement	int scanconverter ;	302:4:10619:10636	1041300	38	True				
ANR	1041433	IdentifierDecl	scanconverter		1041300	0					
ANR	1041434	IdentifierDeclType	int		1041300	0					
ANR	1041435	Identifier	scanconverter		1041300	1					
ANR	1041436	ExpressionStatement	* ( const fill_options * * ) & lst . fo = & fo	304:4:10643:10680	1041300	39	True				
ANR	1041437	AssignmentExpression	* ( const fill_options * * ) & lst . fo = & fo		1041300	0		=			
ANR	1041438	UnaryOperationExpression	* ( const fill_options * * ) & lst . fo		1041300	0					
ANR	1041439	UnaryOperator	*		1041300	0					
ANR	1041440	CastExpression	( const fill_options * * ) & lst . fo		1041300	1					
ANR	1041441	CastTarget	const fill_options * *		1041300	0					
ANR	1041442	UnaryOperationExpression	& lst . fo		1041300	1					
ANR	1041443	UnaryOperator	&		1041300	0					
ANR	1041444	MemberAccess	lst . fo		1041300	1					
ANR	1041445	Identifier	lst		1041300	0					
ANR	1041446	Identifier	fo		1041300	1					
ANR	1041447	UnaryOperationExpression	& fo		1041300	1					
ANR	1041448	UnaryOperator	&		1041300	0					
ANR	1041449	Identifier	fo		1041300	1					
ANR	1041450	ExpressionStatement	"gx_path_bbox ( ppath , & ibox )"	313:4:11066:11092	1041300	40	True				
ANR	1041451	CallExpression	"gx_path_bbox ( ppath , & ibox )"		1041300	0					
ANR	1041452	Callee	gx_path_bbox		1041300	0					
ANR	1041453	Identifier	gx_path_bbox		1041300	0					
ANR	1041454	ArgumentList	ppath		1041300	1					
ANR	1041455	Argument	ppath		1041300	0					
ANR	1041456	Identifier	ppath		1041300	0					
ANR	1041457	Argument	& ibox		1041300	1					
ANR	1041458	UnaryOperationExpression	& ibox		1041300	0					
ANR	1041459	UnaryOperator	&		1041300	0					
ANR	1041460	Identifier	ibox		1041300	1					
ANR	1041461	IfStatement	if ( is_character )		1041300	41					
ANR	1041462	Condition	is_character	314:8:11102:11113	1041300	0	True				
ANR	1041463	Identifier	is_character		1041300	0					
ANR	1041464	ExpressionStatement	adjust . x = adjust . y = 0	315:8:11124:11147	1041300	1	True				
ANR	1041465	AssignmentExpression	adjust . x = adjust . y = 0		1041300	0		=			
ANR	1041466	MemberAccess	adjust . x		1041300	0					
ANR	1041467	Identifier	adjust		1041300	0					
ANR	1041468	Identifier	x		1041300	1					
ANR	1041469	AssignmentExpression	adjust . y = 0		1041300	1		=			
ANR	1041470	MemberAccess	adjust . y		1041300	0					
ANR	1041471	Identifier	adjust		1041300	0					
ANR	1041472	Identifier	y		1041300	1					
ANR	1041473	PrimaryExpression	0		1041300	1					
ANR	1041474	ElseStatement	else		1041300	0					
ANR	1041475	ExpressionStatement	adjust = params -> adjust	317:8:11166:11189	1041300	0	True				
ANR	1041476	AssignmentExpression	adjust = params -> adjust		1041300	0		=			
ANR	1041477	Identifier	adjust		1041300	0					
ANR	1041478	PtrMemberAccess	params -> adjust		1041300	1					
ANR	1041479	Identifier	params		1041300	0					
ANR	1041480	Identifier	adjust		1041300	1					
ANR	1041481	ExpressionStatement	lst . contour_count = 0	318:4:11195:11216	1041300	42	True				
ANR	1041482	AssignmentExpression	lst . contour_count = 0		1041300	0		=			
ANR	1041483	MemberAccess	lst . contour_count		1041300	0					
ANR	1041484	Identifier	lst		1041300	0					
ANR	1041485	Identifier	contour_count		1041300	1					
ANR	1041486	PrimaryExpression	0		1041300	1					
ANR	1041487	ExpressionStatement	lst . windings = NULL	319:4:11222:11241	1041300	43	True				
ANR	1041488	AssignmentExpression	lst . windings = NULL		1041300	0		=			
ANR	1041489	MemberAccess	lst . windings		1041300	0					
ANR	1041490	Identifier	lst		1041300	0					
ANR	1041491	Identifier	windings		1041300	1					
ANR	1041492	Identifier	NULL		1041300	1					
ANR	1041493	ExpressionStatement	lst . bbox_left = fixed2int ( ibox . p . x - adjust . x - fixed_epsilon )	320:4:11247:11309	1041300	44	True				
ANR	1041494	AssignmentExpression	lst . bbox_left = fixed2int ( ibox . p . x - adjust . x - fixed_epsilon )		1041300	0		=			
ANR	1041495	MemberAccess	lst . bbox_left		1041300	0					
ANR	1041496	Identifier	lst		1041300	0					
ANR	1041497	Identifier	bbox_left		1041300	1					
ANR	1041498	CallExpression	fixed2int ( ibox . p . x - adjust . x - fixed_epsilon )		1041300	1					
ANR	1041499	Callee	fixed2int		1041300	0					
ANR	1041500	Identifier	fixed2int		1041300	0					
ANR	1041501	ArgumentList	ibox . p . x - adjust . x - fixed_epsilon		1041300	1					
ANR	1041502	Argument	ibox . p . x - adjust . x - fixed_epsilon		1041300	0					
ANR	1041503	AdditiveExpression	ibox . p . x - adjust . x - fixed_epsilon		1041300	0		-			
ANR	1041504	MemberAccess	ibox . p . x		1041300	0					
ANR	1041505	MemberAccess	ibox . p		1041300	0					
ANR	1041506	Identifier	ibox		1041300	0					
ANR	1041507	Identifier	p		1041300	1					
ANR	1041508	Identifier	x		1041300	1					
ANR	1041509	AdditiveExpression	adjust . x - fixed_epsilon		1041300	1		-			
ANR	1041510	MemberAccess	adjust . x		1041300	0					
ANR	1041511	Identifier	adjust		1041300	0					
ANR	1041512	Identifier	x		1041300	1					
ANR	1041513	Identifier	fixed_epsilon		1041300	1					
ANR	1041514	ExpressionStatement	lst . bbox_width = fixed2int ( fixed_ceiling ( ibox . q . x + adjust . x ) ) - lst . bbox_left	321:4:11315:11393	1041300	45	True				
ANR	1041515	AssignmentExpression	lst . bbox_width = fixed2int ( fixed_ceiling ( ibox . q . x + adjust . x ) ) - lst . bbox_left		1041300	0		=			
ANR	1041516	MemberAccess	lst . bbox_width		1041300	0					
ANR	1041517	Identifier	lst		1041300	0					
ANR	1041518	Identifier	bbox_width		1041300	1					
ANR	1041519	AdditiveExpression	fixed2int ( fixed_ceiling ( ibox . q . x + adjust . x ) ) - lst . bbox_left		1041300	1		-			
ANR	1041520	CallExpression	fixed2int ( fixed_ceiling ( ibox . q . x + adjust . x ) )		1041300	0					
ANR	1041521	Callee	fixed2int		1041300	0					
ANR	1041522	Identifier	fixed2int		1041300	0					
ANR	1041523	ArgumentList	fixed_ceiling ( ibox . q . x + adjust . x )		1041300	1					
ANR	1041524	Argument	fixed_ceiling ( ibox . q . x + adjust . x )		1041300	0					
ANR	1041525	CallExpression	fixed_ceiling ( ibox . q . x + adjust . x )		1041300	0					
ANR	1041526	Callee	fixed_ceiling		1041300	0					
ANR	1041527	Identifier	fixed_ceiling		1041300	0					
ANR	1041528	ArgumentList	ibox . q . x + adjust . x		1041300	1					
ANR	1041529	Argument	ibox . q . x + adjust . x		1041300	0					
ANR	1041530	AdditiveExpression	ibox . q . x + adjust . x		1041300	0		+			
ANR	1041531	MemberAccess	ibox . q . x		1041300	0					
ANR	1041532	MemberAccess	ibox . q		1041300	0					
ANR	1041533	Identifier	ibox		1041300	0					
ANR	1041534	Identifier	q		1041300	1					
ANR	1041535	Identifier	x		1041300	1					
ANR	1041536	MemberAccess	adjust . x		1041300	1					
ANR	1041537	Identifier	adjust		1041300	0					
ANR	1041538	Identifier	x		1041300	1					
ANR	1041539	MemberAccess	lst . bbox_left		1041300	1					
ANR	1041540	Identifier	lst		1041300	0					
ANR	1041541	Identifier	bbox_left		1041300	1					
ANR	1041542	ExpressionStatement	"if_debug6m ( 'f' , pdev -> memory , ""[f]adjust=%g,%g bbox=(%g,%g),(%g,%g)\\n"" , fixed2float ( adjust . x ) , fixed2float ( adjust . y ) , fixed2float ( ibox . p . x ) , fixed2float ( ibox . p . y ) , fixed2float ( ibox . q . x ) , fixed2float ( ibox . q . y ) )"	323:4:11435:11689	1041300	46	True				
ANR	1041543	CallExpression	"if_debug6m ( 'f' , pdev -> memory , ""[f]adjust=%g,%g bbox=(%g,%g),(%g,%g)\\n"" , fixed2float ( adjust . x ) , fixed2float ( adjust . y ) , fixed2float ( ibox . p . x ) , fixed2float ( ibox . p . y ) , fixed2float ( ibox . q . x ) , fixed2float ( ibox . q . y ) )"		1041300	0					
ANR	1041544	Callee	if_debug6m		1041300	0					
ANR	1041545	Identifier	if_debug6m		1041300	0					
ANR	1041546	ArgumentList	'f'		1041300	1					
ANR	1041547	Argument	'f'		1041300	0					
ANR	1041548	PrimaryExpression	'f'		1041300	0					
ANR	1041549	Argument	pdev -> memory		1041300	1					
ANR	1041550	PtrMemberAccess	pdev -> memory		1041300	0					
ANR	1041551	Identifier	pdev		1041300	0					
ANR	1041552	Identifier	memory		1041300	1					
ANR	1041553	Argument	"""[f]adjust=%g,%g bbox=(%g,%g),(%g,%g)\\n"""		1041300	2					
ANR	1041554	PrimaryExpression	"""[f]adjust=%g,%g bbox=(%g,%g),(%g,%g)\\n"""		1041300	0					
ANR	1041555	Argument	fixed2float ( adjust . x )		1041300	3					
ANR	1041556	CallExpression	fixed2float ( adjust . x )		1041300	0					
ANR	1041557	Callee	fixed2float		1041300	0					
ANR	1041558	Identifier	fixed2float		1041300	0					
ANR	1041559	ArgumentList	adjust . x		1041300	1					
ANR	1041560	Argument	adjust . x		1041300	0					
ANR	1041561	MemberAccess	adjust . x		1041300	0					
ANR	1041562	Identifier	adjust		1041300	0					
ANR	1041563	Identifier	x		1041300	1					
ANR	1041564	Argument	fixed2float ( adjust . y )		1041300	4					
ANR	1041565	CallExpression	fixed2float ( adjust . y )		1041300	0					
ANR	1041566	Callee	fixed2float		1041300	0					
ANR	1041567	Identifier	fixed2float		1041300	0					
ANR	1041568	ArgumentList	adjust . y		1041300	1					
ANR	1041569	Argument	adjust . y		1041300	0					
ANR	1041570	MemberAccess	adjust . y		1041300	0					
ANR	1041571	Identifier	adjust		1041300	0					
ANR	1041572	Identifier	y		1041300	1					
ANR	1041573	Argument	fixed2float ( ibox . p . x )		1041300	5					
ANR	1041574	CallExpression	fixed2float ( ibox . p . x )		1041300	0					
ANR	1041575	Callee	fixed2float		1041300	0					
ANR	1041576	Identifier	fixed2float		1041300	0					
ANR	1041577	ArgumentList	ibox . p . x		1041300	1					
ANR	1041578	Argument	ibox . p . x		1041300	0					
ANR	1041579	MemberAccess	ibox . p . x		1041300	0					
ANR	1041580	MemberAccess	ibox . p		1041300	0					
ANR	1041581	Identifier	ibox		1041300	0					
ANR	1041582	Identifier	p		1041300	1					
ANR	1041583	Identifier	x		1041300	1					
ANR	1041584	Argument	fixed2float ( ibox . p . y )		1041300	6					
ANR	1041585	CallExpression	fixed2float ( ibox . p . y )		1041300	0					
ANR	1041586	Callee	fixed2float		1041300	0					
ANR	1041587	Identifier	fixed2float		1041300	0					
ANR	1041588	ArgumentList	ibox . p . y		1041300	1					
ANR	1041589	Argument	ibox . p . y		1041300	0					
ANR	1041590	MemberAccess	ibox . p . y		1041300	0					
ANR	1041591	MemberAccess	ibox . p		1041300	0					
ANR	1041592	Identifier	ibox		1041300	0					
ANR	1041593	Identifier	p		1041300	1					
ANR	1041594	Identifier	y		1041300	1					
ANR	1041595	Argument	fixed2float ( ibox . q . x )		1041300	7					
ANR	1041596	CallExpression	fixed2float ( ibox . q . x )		1041300	0					
ANR	1041597	Callee	fixed2float		1041300	0					
ANR	1041598	Identifier	fixed2float		1041300	0					
ANR	1041599	ArgumentList	ibox . q . x		1041300	1					
ANR	1041600	Argument	ibox . q . x		1041300	0					
ANR	1041601	MemberAccess	ibox . q . x		1041300	0					
ANR	1041602	MemberAccess	ibox . q		1041300	0					
ANR	1041603	Identifier	ibox		1041300	0					
ANR	1041604	Identifier	q		1041300	1					
ANR	1041605	Identifier	x		1041300	1					
ANR	1041606	Argument	fixed2float ( ibox . q . y )		1041300	8					
ANR	1041607	CallExpression	fixed2float ( ibox . q . y )		1041300	0					
ANR	1041608	Callee	fixed2float		1041300	0					
ANR	1041609	Identifier	fixed2float		1041300	0					
ANR	1041610	ArgumentList	ibox . q . y		1041300	1					
ANR	1041611	Argument	ibox . q . y		1041300	0					
ANR	1041612	MemberAccess	ibox . q . y		1041300	0					
ANR	1041613	MemberAccess	ibox . q		1041300	0					
ANR	1041614	Identifier	ibox		1041300	0					
ANR	1041615	Identifier	q		1041300	1					
ANR	1041616	Identifier	y		1041300	1					
ANR	1041617	IfStatement	if ( pcpath )		1041300	47					
ANR	1041618	Condition	pcpath	327:8:11699:11704	1041300	0	True				
ANR	1041619	Identifier	pcpath		1041300	0					
ANR	1041620	ExpressionStatement	"gx_cpath_inner_box ( pcpath , & bbox )"	328:8:11715:11748	1041300	1	True				
ANR	1041621	CallExpression	"gx_cpath_inner_box ( pcpath , & bbox )"		1041300	0					
ANR	1041622	Callee	gx_cpath_inner_box		1041300	0					
ANR	1041623	Identifier	gx_cpath_inner_box		1041300	0					
ANR	1041624	ArgumentList	pcpath		1041300	1					
ANR	1041625	Argument	pcpath		1041300	0					
ANR	1041626	Identifier	pcpath		1041300	0					
ANR	1041627	Argument	& bbox		1041300	1					
ANR	1041628	UnaryOperationExpression	& bbox		1041300	0					
ANR	1041629	UnaryOperator	&		1041300	0					
ANR	1041630	Identifier	bbox		1041300	1					
ANR	1041631	ElseStatement	else		1041300	0					
ANR	1041632	ExpressionStatement	"( * dev_proc ( dev , get_clipping_box ) ) ( dev , & bbox )"	330:8:11767:11814	1041300	0	True				
ANR	1041633	CallExpression	"( * dev_proc ( dev , get_clipping_box ) ) ( dev , & bbox )"		1041300	0					
ANR	1041634	Callee	"* dev_proc ( dev , get_clipping_box )"		1041300	0					
ANR	1041635	UnaryOperationExpression	"* dev_proc ( dev , get_clipping_box )"		1041300	0					
ANR	1041636	UnaryOperator	*		1041300	0					
ANR	1041637	CallExpression	"dev_proc ( dev , get_clipping_box )"		1041300	1					
ANR	1041638	Callee	dev_proc		1041300	0					
ANR	1041639	Identifier	dev_proc		1041300	0					
ANR	1041640	ArgumentList	dev		1041300	1					
ANR	1041641	Argument	dev		1041300	0					
ANR	1041642	Identifier	dev		1041300	0					
ANR	1041643	Argument	get_clipping_box		1041300	1					
ANR	1041644	Identifier	get_clipping_box		1041300	0					
ANR	1041645	ArgumentList	dev		1041300	1					
ANR	1041646	Argument	dev		1041300	0					
ANR	1041647	Identifier	dev		1041300	0					
ANR	1041648	Argument	& bbox		1041300	1					
ANR	1041649	UnaryOperationExpression	& bbox		1041300	0					
ANR	1041650	UnaryOperator	&		1041300	0					
ANR	1041651	Identifier	bbox		1041300	1					
ANR	1041652	IfStatement	"if ( ! rect_within ( ibox , bbox ) )"		1041300	48					
ANR	1041653	Condition	"! rect_within ( ibox , bbox )"	331:8:11824:11847	1041300	0	True				
ANR	1041654	UnaryOperationExpression	"! rect_within ( ibox , bbox )"		1041300	0					
ANR	1041655	UnaryOperator	!		1041300	0					
ANR	1041656	CallExpression	"rect_within ( ibox , bbox )"		1041300	1					
ANR	1041657	Callee	rect_within		1041300	0					
ANR	1041658	Identifier	rect_within		1041300	0					
ANR	1041659	ArgumentList	ibox		1041300	1					
ANR	1041660	Argument	ibox		1041300	0					
ANR	1041661	Identifier	ibox		1041300	0					
ANR	1041662	Argument	bbox		1041300	1					
ANR	1041663	Identifier	bbox		1041300	0					
ANR	1041664	CompoundStatement		48:34:1802:1802	1041300	1					
ANR	1041665	IfStatement	if ( pcpath )		1041300	0					
ANR	1041666	Condition	pcpath	336:12:12011:12016	1041300	0	True				
ANR	1041667	Identifier	pcpath		1041300	0					
ANR	1041668	ExpressionStatement	"gx_cpath_outer_box ( pcpath , & bbox )"	337:12:12031:12064	1041300	1	True				
ANR	1041669	CallExpression	"gx_cpath_outer_box ( pcpath , & bbox )"		1041300	0					
ANR	1041670	Callee	gx_cpath_outer_box		1041300	0					
ANR	1041671	Identifier	gx_cpath_outer_box		1041300	0					
ANR	1041672	ArgumentList	pcpath		1041300	1					
ANR	1041673	Argument	pcpath		1041300	0					
ANR	1041674	Identifier	pcpath		1041300	0					
ANR	1041675	Argument	& bbox		1041300	1					
ANR	1041676	UnaryOperationExpression	& bbox		1041300	0					
ANR	1041677	UnaryOperator	&		1041300	0					
ANR	1041678	Identifier	bbox		1041300	1					
ANR	1041679	ExpressionStatement	"if_debug4m ( 'f' , pdev -> memory , ""   outer_box=(%g,%g),(%g,%g)\\n"" , fixed2float ( bbox . p . x ) , fixed2float ( bbox . p . y ) , fixed2float ( bbox . q . x ) , fixed2float ( bbox . q . y ) )"	338:8:12074:12267	1041300	1	True				
ANR	1041680	CallExpression	"if_debug4m ( 'f' , pdev -> memory , ""   outer_box=(%g,%g),(%g,%g)\\n"" , fixed2float ( bbox . p . x ) , fixed2float ( bbox . p . y ) , fixed2float ( bbox . q . x ) , fixed2float ( bbox . q . y ) )"		1041300	0					
ANR	1041681	Callee	if_debug4m		1041300	0					
ANR	1041682	Identifier	if_debug4m		1041300	0					
ANR	1041683	ArgumentList	'f'		1041300	1					
ANR	1041684	Argument	'f'		1041300	0					
ANR	1041685	PrimaryExpression	'f'		1041300	0					
ANR	1041686	Argument	pdev -> memory		1041300	1					
ANR	1041687	PtrMemberAccess	pdev -> memory		1041300	0					
ANR	1041688	Identifier	pdev		1041300	0					
ANR	1041689	Identifier	memory		1041300	1					
ANR	1041690	Argument	"""   outer_box=(%g,%g),(%g,%g)\\n"""		1041300	2					
ANR	1041691	PrimaryExpression	"""   outer_box=(%g,%g),(%g,%g)\\n"""		1041300	0					
ANR	1041692	Argument	fixed2float ( bbox . p . x )		1041300	3					
ANR	1041693	CallExpression	fixed2float ( bbox . p . x )		1041300	0					
ANR	1041694	Callee	fixed2float		1041300	0					
ANR	1041695	Identifier	fixed2float		1041300	0					
ANR	1041696	ArgumentList	bbox . p . x		1041300	1					
ANR	1041697	Argument	bbox . p . x		1041300	0					
ANR	1041698	MemberAccess	bbox . p . x		1041300	0					
ANR	1041699	MemberAccess	bbox . p		1041300	0					
ANR	1041700	Identifier	bbox		1041300	0					
ANR	1041701	Identifier	p		1041300	1					
ANR	1041702	Identifier	x		1041300	1					
ANR	1041703	Argument	fixed2float ( bbox . p . y )		1041300	4					
ANR	1041704	CallExpression	fixed2float ( bbox . p . y )		1041300	0					
ANR	1041705	Callee	fixed2float		1041300	0					
ANR	1041706	Identifier	fixed2float		1041300	0					
ANR	1041707	ArgumentList	bbox . p . y		1041300	1					
ANR	1041708	Argument	bbox . p . y		1041300	0					
ANR	1041709	MemberAccess	bbox . p . y		1041300	0					
ANR	1041710	MemberAccess	bbox . p		1041300	0					
ANR	1041711	Identifier	bbox		1041300	0					
ANR	1041712	Identifier	p		1041300	1					
ANR	1041713	Identifier	y		1041300	1					
ANR	1041714	Argument	fixed2float ( bbox . q . x )		1041300	5					
ANR	1041715	CallExpression	fixed2float ( bbox . q . x )		1041300	0					
ANR	1041716	Callee	fixed2float		1041300	0					
ANR	1041717	Identifier	fixed2float		1041300	0					
ANR	1041718	ArgumentList	bbox . q . x		1041300	1					
ANR	1041719	Argument	bbox . q . x		1041300	0					
ANR	1041720	MemberAccess	bbox . q . x		1041300	0					
ANR	1041721	MemberAccess	bbox . q		1041300	0					
ANR	1041722	Identifier	bbox		1041300	0					
ANR	1041723	Identifier	q		1041300	1					
ANR	1041724	Identifier	x		1041300	1					
ANR	1041725	Argument	fixed2float ( bbox . q . y )		1041300	6					
ANR	1041726	CallExpression	fixed2float ( bbox . q . y )		1041300	0					
ANR	1041727	Callee	fixed2float		1041300	0					
ANR	1041728	Identifier	fixed2float		1041300	0					
ANR	1041729	ArgumentList	bbox . q . y		1041300	1					
ANR	1041730	Argument	bbox . q . y		1041300	0					
ANR	1041731	MemberAccess	bbox . q . y		1041300	0					
ANR	1041732	MemberAccess	bbox . q		1041300	0					
ANR	1041733	Identifier	bbox		1041300	0					
ANR	1041734	Identifier	q		1041300	1					
ANR	1041735	Identifier	y		1041300	1					
ANR	1041736	ExpressionStatement	"rect_intersect ( ibox , bbox )"	341:8:12277:12303	1041300	2	True				
ANR	1041737	CallExpression	"rect_intersect ( ibox , bbox )"		1041300	0					
ANR	1041738	Callee	rect_intersect		1041300	0					
ANR	1041739	Identifier	rect_intersect		1041300	0					
ANR	1041740	ArgumentList	ibox		1041300	1					
ANR	1041741	Argument	ibox		1041300	0					
ANR	1041742	Identifier	ibox		1041300	0					
ANR	1041743	Argument	bbox		1041300	1					
ANR	1041744	Identifier	bbox		1041300	0					
ANR	1041745	IfStatement	if ( ibox . p . x - adjust . x >= ibox . q . x + adjust . x || ibox . p . y - adjust . y >= ibox . q . y + adjust . y )		1041300	3					
ANR	1041746	Condition	ibox . p . x - adjust . x >= ibox . q . x + adjust . x || ibox . p . y - adjust . y >= ibox . q . y + adjust . y	342:12:12317:12416	1041300	0	True				
ANR	1041747	OrExpression	ibox . p . x - adjust . x >= ibox . q . x + adjust . x || ibox . p . y - adjust . y >= ibox . q . y + adjust . y		1041300	0		||			
ANR	1041748	RelationalExpression	ibox . p . x - adjust . x >= ibox . q . x + adjust . x		1041300	0		>=			
ANR	1041749	AdditiveExpression	ibox . p . x - adjust . x		1041300	0		-			
ANR	1041750	MemberAccess	ibox . p . x		1041300	0					
ANR	1041751	MemberAccess	ibox . p		1041300	0					
ANR	1041752	Identifier	ibox		1041300	0					
ANR	1041753	Identifier	p		1041300	1					
ANR	1041754	Identifier	x		1041300	1					
ANR	1041755	MemberAccess	adjust . x		1041300	1					
ANR	1041756	Identifier	adjust		1041300	0					
ANR	1041757	Identifier	x		1041300	1					
ANR	1041758	AdditiveExpression	ibox . q . x + adjust . x		1041300	1		+			
ANR	1041759	MemberAccess	ibox . q . x		1041300	0					
ANR	1041760	MemberAccess	ibox . q		1041300	0					
ANR	1041761	Identifier	ibox		1041300	0					
ANR	1041762	Identifier	q		1041300	1					
ANR	1041763	Identifier	x		1041300	1					
ANR	1041764	MemberAccess	adjust . x		1041300	1					
ANR	1041765	Identifier	adjust		1041300	0					
ANR	1041766	Identifier	x		1041300	1					
ANR	1041767	RelationalExpression	ibox . p . y - adjust . y >= ibox . q . y + adjust . y		1041300	1		>=			
ANR	1041768	AdditiveExpression	ibox . p . y - adjust . y		1041300	0		-			
ANR	1041769	MemberAccess	ibox . p . y		1041300	0					
ANR	1041770	MemberAccess	ibox . p		1041300	0					
ANR	1041771	Identifier	ibox		1041300	0					
ANR	1041772	Identifier	p		1041300	1					
ANR	1041773	Identifier	y		1041300	1					
ANR	1041774	MemberAccess	adjust . y		1041300	1					
ANR	1041775	Identifier	adjust		1041300	0					
ANR	1041776	Identifier	y		1041300	1					
ANR	1041777	AdditiveExpression	ibox . q . y + adjust . y		1041300	1		+			
ANR	1041778	MemberAccess	ibox . q . y		1041300	0					
ANR	1041779	MemberAccess	ibox . q		1041300	0					
ANR	1041780	Identifier	ibox		1041300	0					
ANR	1041781	Identifier	q		1041300	1					
ANR	1041782	Identifier	y		1041300	1					
ANR	1041783	MemberAccess	adjust . y		1041300	1					
ANR	1041784	Identifier	adjust		1041300	0					
ANR	1041785	Identifier	y		1041300	1					
ANR	1041786	CompoundStatement		61:14:2384:2384	1041300	1					
ANR	1041787	ReturnStatement	return 0 ;	345:12:12500:12508	1041300	0	True				
ANR	1041788	PrimaryExpression	0		1041300	0					
ANR	1041789	IfStatement	if ( pcpath )		1041300	4					
ANR	1041790	Condition	pcpath	356:12:12913:12918	1041300	0	True				
ANR	1041791	Identifier	pcpath		1041300	0					
ANR	1041792	CompoundStatement		73:20:2873:2873	1041300	1					
ANR	1041793	ExpressionStatement	dev = ( gx_device * ) & cdev	357:12:12935:12961	1041300	0	True				
ANR	1041794	AssignmentExpression	dev = ( gx_device * ) & cdev		1041300	0		=			
ANR	1041795	Identifier	dev		1041300	0					
ANR	1041796	CastExpression	( gx_device * ) & cdev		1041300	1					
ANR	1041797	CastTarget	gx_device *		1041300	0					
ANR	1041798	UnaryOperationExpression	& cdev		1041300	1					
ANR	1041799	UnaryOperator	&		1041300	0					
ANR	1041800	Identifier	cdev		1041300	1					
ANR	1041801	ExpressionStatement	"gx_make_clip_device_on_stack ( & cdev , pcpath , save_dev )"	358:12:12975:13028	1041300	1	True				
ANR	1041802	CallExpression	"gx_make_clip_device_on_stack ( & cdev , pcpath , save_dev )"		1041300	0					
ANR	1041803	Callee	gx_make_clip_device_on_stack		1041300	0					
ANR	1041804	Identifier	gx_make_clip_device_on_stack		1041300	0					
ANR	1041805	ArgumentList	& cdev		1041300	1					
ANR	1041806	Argument	& cdev		1041300	0					
ANR	1041807	UnaryOperationExpression	& cdev		1041300	0					
ANR	1041808	UnaryOperator	&		1041300	0					
ANR	1041809	Identifier	cdev		1041300	1					
ANR	1041810	Argument	pcpath		1041300	1					
ANR	1041811	Identifier	pcpath		1041300	0					
ANR	1041812	Argument	save_dev		1041300	2					
ANR	1041813	Identifier	save_dev		1041300	0					
ANR	1041814	ExpressionStatement	cdev . max_fill_band = save_dev -> max_fill_band	359:12:13042:13086	1041300	2	True				
ANR	1041815	AssignmentExpression	cdev . max_fill_band = save_dev -> max_fill_band		1041300	0		=			
ANR	1041816	MemberAccess	cdev . max_fill_band		1041300	0					
ANR	1041817	Identifier	cdev		1041300	0					
ANR	1041818	Identifier	max_fill_band		1041300	1					
ANR	1041819	PtrMemberAccess	save_dev -> max_fill_band		1041300	1					
ANR	1041820	Identifier	save_dev		1041300	0					
ANR	1041821	Identifier	max_fill_band		1041300	1					
ANR	1041822	ExpressionStatement	clipping = 1	360:12:13100:13112	1041300	3	True				
ANR	1041823	AssignmentExpression	clipping = 1		1041300	0		=			
ANR	1041824	Identifier	clipping		1041300	0					
ANR	1041825	PrimaryExpression	1		1041300	1					
ANR	1041826	IfStatement	if ( adjust . x == fixed_half )		1041300	49					
ANR	1041827	Condition	adjust . x == fixed_half	374:8:13689:13710	1041300	0	True				
ANR	1041828	EqualityExpression	adjust . x == fixed_half		1041300	0		==			
ANR	1041829	MemberAccess	adjust . x		1041300	0					
ANR	1041830	Identifier	adjust		1041300	0					
ANR	1041831	Identifier	x		1041300	1					
ANR	1041832	Identifier	fixed_half		1041300	1					
ANR	1041833	ExpressionStatement	"fo . adjust_left = fixed_half - fixed_epsilon , fo . adjust_right = fixed_half"	375:8:13721:13829	1041300	1	True				
ANR	1041834	Expression	"fo . adjust_left = fixed_half - fixed_epsilon , fo . adjust_right = fixed_half"		1041300	0					
ANR	1041835	AssignmentExpression	fo . adjust_left = fixed_half - fixed_epsilon		1041300	0		=			
ANR	1041836	MemberAccess	fo . adjust_left		1041300	0					
ANR	1041837	Identifier	fo		1041300	0					
ANR	1041838	Identifier	adjust_left		1041300	1					
ANR	1041839	AdditiveExpression	fixed_half - fixed_epsilon		1041300	1		-			
ANR	1041840	Identifier	fixed_half		1041300	0					
ANR	1041841	Identifier	fixed_epsilon		1041300	1					
ANR	1041842	AssignmentExpression	fo . adjust_right = fixed_half		1041300	1		=			
ANR	1041843	MemberAccess	fo . adjust_right		1041300	0					
ANR	1041844	Identifier	fo		1041300	0					
ANR	1041845	Identifier	adjust_right		1041300	1					
ANR	1041846	Identifier	fixed_half		1041300	1					
ANR	1041847	ElseStatement	else		1041300	0					
ANR	1041848	ExpressionStatement	fo . adjust_left = fo . adjust_right = adjust . x	378:8:13871:13914	1041300	0	True				
ANR	1041849	AssignmentExpression	fo . adjust_left = fo . adjust_right = adjust . x		1041300	0		=			
ANR	1041850	MemberAccess	fo . adjust_left		1041300	0					
ANR	1041851	Identifier	fo		1041300	0					
ANR	1041852	Identifier	adjust_left		1041300	1					
ANR	1041853	AssignmentExpression	fo . adjust_right = adjust . x		1041300	1		=			
ANR	1041854	MemberAccess	fo . adjust_right		1041300	0					
ANR	1041855	Identifier	fo		1041300	0					
ANR	1041856	Identifier	adjust_right		1041300	1					
ANR	1041857	MemberAccess	adjust . x		1041300	1					
ANR	1041858	Identifier	adjust		1041300	0					
ANR	1041859	Identifier	x		1041300	1					
ANR	1041860	IfStatement	if ( adjust . y == fixed_half )		1041300	50					
ANR	1041861	Condition	adjust . y == fixed_half	379:8:13924:13945	1041300	0	True				
ANR	1041862	EqualityExpression	adjust . y == fixed_half		1041300	0		==			
ANR	1041863	MemberAccess	adjust . y		1041300	0					
ANR	1041864	Identifier	adjust		1041300	0					
ANR	1041865	Identifier	y		1041300	1					
ANR	1041866	Identifier	fixed_half		1041300	1					
ANR	1041867	ExpressionStatement	"fo . adjust_below = fixed_half - fixed_epsilon , fo . adjust_above = fixed_half"	380:8:13956:14065	1041300	1	True				
ANR	1041868	Expression	"fo . adjust_below = fixed_half - fixed_epsilon , fo . adjust_above = fixed_half"		1041300	0					
ANR	1041869	AssignmentExpression	fo . adjust_below = fixed_half - fixed_epsilon		1041300	0		=			
ANR	1041870	MemberAccess	fo . adjust_below		1041300	0					
ANR	1041871	Identifier	fo		1041300	0					
ANR	1041872	Identifier	adjust_below		1041300	1					
ANR	1041873	AdditiveExpression	fixed_half - fixed_epsilon		1041300	1		-			
ANR	1041874	Identifier	fixed_half		1041300	0					
ANR	1041875	Identifier	fixed_epsilon		1041300	1					
ANR	1041876	AssignmentExpression	fo . adjust_above = fixed_half		1041300	1		=			
ANR	1041877	MemberAccess	fo . adjust_above		1041300	0					
ANR	1041878	Identifier	fo		1041300	0					
ANR	1041879	Identifier	adjust_above		1041300	1					
ANR	1041880	Identifier	fixed_half		1041300	1					
ANR	1041881	ElseStatement	else		1041300	0					
ANR	1041882	ExpressionStatement	fo . adjust_below = fo . adjust_above = adjust . y	383:8:14107:14151	1041300	0	True				
ANR	1041883	AssignmentExpression	fo . adjust_below = fo . adjust_above = adjust . y		1041300	0		=			
ANR	1041884	MemberAccess	fo . adjust_below		1041300	0					
ANR	1041885	Identifier	fo		1041300	0					
ANR	1041886	Identifier	adjust_below		1041300	1					
ANR	1041887	AssignmentExpression	fo . adjust_above = adjust . y		1041300	1		=			
ANR	1041888	MemberAccess	fo . adjust_above		1041300	0					
ANR	1041889	Identifier	fo		1041300	0					
ANR	1041890	Identifier	adjust_above		1041300	1					
ANR	1041891	MemberAccess	adjust . y		1041300	1					
ANR	1041892	Identifier	adjust		1041300	0					
ANR	1041893	Identifier	y		1041300	1					
ANR	1041894	ExpressionStatement	sbox . p . x = ibox . p . x - adjust . x	384:4:14157:14187	1041300	51	True				
ANR	1041895	AssignmentExpression	sbox . p . x = ibox . p . x - adjust . x		1041300	0		=			
ANR	1041896	MemberAccess	sbox . p . x		1041300	0					
ANR	1041897	MemberAccess	sbox . p		1041300	0					
ANR	1041898	Identifier	sbox		1041300	0					
ANR	1041899	Identifier	p		1041300	1					
ANR	1041900	Identifier	x		1041300	1					
ANR	1041901	AdditiveExpression	ibox . p . x - adjust . x		1041300	1		-			
ANR	1041902	MemberAccess	ibox . p . x		1041300	0					
ANR	1041903	MemberAccess	ibox . p		1041300	0					
ANR	1041904	Identifier	ibox		1041300	0					
ANR	1041905	Identifier	p		1041300	1					
ANR	1041906	Identifier	x		1041300	1					
ANR	1041907	MemberAccess	adjust . x		1041300	1					
ANR	1041908	Identifier	adjust		1041300	0					
ANR	1041909	Identifier	x		1041300	1					
ANR	1041910	ExpressionStatement	sbox . p . y = ibox . p . y - adjust . y	385:4:14193:14223	1041300	52	True				
ANR	1041911	AssignmentExpression	sbox . p . y = ibox . p . y - adjust . y		1041300	0		=			
ANR	1041912	MemberAccess	sbox . p . y		1041300	0					
ANR	1041913	MemberAccess	sbox . p		1041300	0					
ANR	1041914	Identifier	sbox		1041300	0					
ANR	1041915	Identifier	p		1041300	1					
ANR	1041916	Identifier	y		1041300	1					
ANR	1041917	AdditiveExpression	ibox . p . y - adjust . y		1041300	1		-			
ANR	1041918	MemberAccess	ibox . p . y		1041300	0					
ANR	1041919	MemberAccess	ibox . p		1041300	0					
ANR	1041920	Identifier	ibox		1041300	0					
ANR	1041921	Identifier	p		1041300	1					
ANR	1041922	Identifier	y		1041300	1					
ANR	1041923	MemberAccess	adjust . y		1041300	1					
ANR	1041924	Identifier	adjust		1041300	0					
ANR	1041925	Identifier	y		1041300	1					
ANR	1041926	ExpressionStatement	sbox . q . x = ibox . q . x + adjust . x	386:4:14229:14259	1041300	53	True				
ANR	1041927	AssignmentExpression	sbox . q . x = ibox . q . x + adjust . x		1041300	0		=			
ANR	1041928	MemberAccess	sbox . q . x		1041300	0					
ANR	1041929	MemberAccess	sbox . q		1041300	0					
ANR	1041930	Identifier	sbox		1041300	0					
ANR	1041931	Identifier	q		1041300	1					
ANR	1041932	Identifier	x		1041300	1					
ANR	1041933	AdditiveExpression	ibox . q . x + adjust . x		1041300	1		+			
ANR	1041934	MemberAccess	ibox . q . x		1041300	0					
ANR	1041935	MemberAccess	ibox . q		1041300	0					
ANR	1041936	Identifier	ibox		1041300	0					
ANR	1041937	Identifier	q		1041300	1					
ANR	1041938	Identifier	x		1041300	1					
ANR	1041939	MemberAccess	adjust . x		1041300	1					
ANR	1041940	Identifier	adjust		1041300	0					
ANR	1041941	Identifier	x		1041300	1					
ANR	1041942	ExpressionStatement	sbox . q . y = ibox . q . y + adjust . y	387:4:14265:14295	1041300	54	True				
ANR	1041943	AssignmentExpression	sbox . q . y = ibox . q . y + adjust . y		1041300	0		=			
ANR	1041944	MemberAccess	sbox . q . y		1041300	0					
ANR	1041945	MemberAccess	sbox . q		1041300	0					
ANR	1041946	Identifier	sbox		1041300	0					
ANR	1041947	Identifier	q		1041300	1					
ANR	1041948	Identifier	y		1041300	1					
ANR	1041949	AdditiveExpression	ibox . q . y + adjust . y		1041300	1		+			
ANR	1041950	MemberAccess	ibox . q . y		1041300	0					
ANR	1041951	MemberAccess	ibox . q		1041300	0					
ANR	1041952	Identifier	ibox		1041300	0					
ANR	1041953	Identifier	q		1041300	1					
ANR	1041954	Identifier	y		1041300	1					
ANR	1041955	MemberAccess	adjust . y		1041300	1					
ANR	1041956	Identifier	adjust		1041300	0					
ANR	1041957	Identifier	y		1041300	1					
ANR	1041958	ExpressionStatement	fo . pdevc = pdevc	388:4:14301:14317	1041300	55	True				
ANR	1041959	AssignmentExpression	fo . pdevc = pdevc		1041300	0		=			
ANR	1041960	MemberAccess	fo . pdevc		1041300	0					
ANR	1041961	Identifier	fo		1041300	0					
ANR	1041962	Identifier	pdevc		1041300	1					
ANR	1041963	Identifier	pdevc		1041300	1					
ANR	1041964	ExpressionStatement	fo . lop = lop	389:4:14323:14335	1041300	56	True				
ANR	1041965	AssignmentExpression	fo . lop = lop		1041300	0		=			
ANR	1041966	MemberAccess	fo . lop		1041300	0					
ANR	1041967	Identifier	fo		1041300	0					
ANR	1041968	Identifier	lop		1041300	1					
ANR	1041969	Identifier	lop		1041300	1					
ANR	1041970	ExpressionStatement	fo . fixed_flat = float2fixed ( params -> flatness )	390:4:14341:14386	1041300	57	True				
ANR	1041971	AssignmentExpression	fo . fixed_flat = float2fixed ( params -> flatness )		1041300	0		=			
ANR	1041972	MemberAccess	fo . fixed_flat		1041300	0					
ANR	1041973	Identifier	fo		1041300	0					
ANR	1041974	Identifier	fixed_flat		1041300	1					
ANR	1041975	CallExpression	float2fixed ( params -> flatness )		1041300	1					
ANR	1041976	Callee	float2fixed		1041300	0					
ANR	1041977	Identifier	float2fixed		1041300	0					
ANR	1041978	ArgumentList	params -> flatness		1041300	1					
ANR	1041979	Argument	params -> flatness		1041300	0					
ANR	1041980	PtrMemberAccess	params -> flatness		1041300	0					
ANR	1041981	Identifier	params		1041300	0					
ANR	1041982	Identifier	flatness		1041300	1					
ANR	1041983	ExpressionStatement	fo . ymin = ibox . p . y	391:4:14392:14410	1041300	58	True				
ANR	1041984	AssignmentExpression	fo . ymin = ibox . p . y		1041300	0		=			
ANR	1041985	MemberAccess	fo . ymin		1041300	0					
ANR	1041986	Identifier	fo		1041300	0					
ANR	1041987	Identifier	ymin		1041300	1					
ANR	1041988	MemberAccess	ibox . p . y		1041300	1					
ANR	1041989	MemberAccess	ibox . p		1041300	0					
ANR	1041990	Identifier	ibox		1041300	0					
ANR	1041991	Identifier	p		1041300	1					
ANR	1041992	Identifier	y		1041300	1					
ANR	1041993	ExpressionStatement	fo . ymax = ibox . q . y	392:4:14416:14434	1041300	59	True				
ANR	1041994	AssignmentExpression	fo . ymax = ibox . q . y		1041300	0		=			
ANR	1041995	MemberAccess	fo . ymax		1041300	0					
ANR	1041996	Identifier	fo		1041300	0					
ANR	1041997	Identifier	ymax		1041300	1					
ANR	1041998	MemberAccess	ibox . q . y		1041300	1					
ANR	1041999	MemberAccess	ibox . q		1041300	0					
ANR	1042000	Identifier	ibox		1041300	0					
ANR	1042001	Identifier	q		1041300	1					
ANR	1042002	Identifier	y		1041300	1					
ANR	1042003	ExpressionStatement	fo . dev = dev	393:4:14440:14452	1041300	60	True				
ANR	1042004	AssignmentExpression	fo . dev = dev		1041300	0		=			
ANR	1042005	MemberAccess	fo . dev		1041300	0					
ANR	1042006	Identifier	fo		1041300	0					
ANR	1042007	Identifier	dev		1041300	1					
ANR	1042008	Identifier	dev		1041300	1					
ANR	1042009	ExpressionStatement	fo . pbox = & sbox	394:4:14458:14473	1041300	61	True				
ANR	1042010	AssignmentExpression	fo . pbox = & sbox		1041300	0		=			
ANR	1042011	MemberAccess	fo . pbox		1041300	0					
ANR	1042012	Identifier	fo		1041300	0					
ANR	1042013	Identifier	pbox		1041300	1					
ANR	1042014	UnaryOperationExpression	& sbox		1041300	1					
ANR	1042015	UnaryOperator	&		1041300	0					
ANR	1042016	Identifier	sbox		1041300	1					
ANR	1042017	ExpressionStatement	fo . rule = params -> rule	395:4:14479:14501	1041300	62	True				
ANR	1042018	AssignmentExpression	fo . rule = params -> rule		1041300	0		=			
ANR	1042019	MemberAccess	fo . rule		1041300	0					
ANR	1042020	Identifier	fo		1041300	0					
ANR	1042021	Identifier	rule		1041300	1					
ANR	1042022	PtrMemberAccess	params -> rule		1041300	1					
ANR	1042023	Identifier	params		1041300	0					
ANR	1042024	Identifier	rule		1041300	1					
ANR	1042025	ExpressionStatement	fo . is_spotan = is_spotan_device ( dev )	396:4:14507:14543	1041300	63	True				
ANR	1042026	AssignmentExpression	fo . is_spotan = is_spotan_device ( dev )		1041300	0		=			
ANR	1042027	MemberAccess	fo . is_spotan		1041300	0					
ANR	1042028	Identifier	fo		1041300	0					
ANR	1042029	Identifier	is_spotan		1041300	1					
ANR	1042030	CallExpression	is_spotan_device ( dev )		1041300	1					
ANR	1042031	Callee	is_spotan_device		1041300	0					
ANR	1042032	Identifier	is_spotan_device		1041300	0					
ANR	1042033	ArgumentList	dev		1041300	1					
ANR	1042034	Argument	dev		1041300	0					
ANR	1042035	Identifier	dev		1041300	0					
ANR	1042036	ExpressionStatement	"fo . fill_direct = color_writes_pure ( pdevc , lop )"	397:4:14549:14595	1041300	64	True				
ANR	1042037	AssignmentExpression	"fo . fill_direct = color_writes_pure ( pdevc , lop )"		1041300	0		=			
ANR	1042038	MemberAccess	fo . fill_direct		1041300	0					
ANR	1042039	Identifier	fo		1041300	0					
ANR	1042040	Identifier	fill_direct		1041300	1					
ANR	1042041	CallExpression	"color_writes_pure ( pdevc , lop )"		1041300	1					
ANR	1042042	Callee	color_writes_pure		1041300	0					
ANR	1042043	Identifier	color_writes_pure		1041300	0					
ANR	1042044	ArgumentList	pdevc		1041300	1					
ANR	1042045	Argument	pdevc		1041300	0					
ANR	1042046	Identifier	pdevc		1041300	0					
ANR	1042047	Argument	lop		1041300	1					
ANR	1042048	Identifier	lop		1041300	0					
ANR	1042049	ExpressionStatement	"fo . fill_rect = ( fo . fill_direct ? dev_proc ( dev , fill_rectangle ) : NULL )"	398:4:14601:14671	1041300	65	True				
ANR	1042050	AssignmentExpression	"fo . fill_rect = ( fo . fill_direct ? dev_proc ( dev , fill_rectangle ) : NULL )"		1041300	0		=			
ANR	1042051	MemberAccess	fo . fill_rect		1041300	0					
ANR	1042052	Identifier	fo		1041300	0					
ANR	1042053	Identifier	fill_rect		1041300	1					
ANR	1042054	ConditionalExpression	"fo . fill_direct ? dev_proc ( dev , fill_rectangle ) : NULL"		1041300	1					
ANR	1042055	Condition	fo . fill_direct		1041300	0					
ANR	1042056	MemberAccess	fo . fill_direct		1041300	0					
ANR	1042057	Identifier	fo		1041300	0					
ANR	1042058	Identifier	fill_direct		1041300	1					
ANR	1042059	CallExpression	"dev_proc ( dev , fill_rectangle )"		1041300	1					
ANR	1042060	Callee	dev_proc		1041300	0					
ANR	1042061	Identifier	dev_proc		1041300	0					
ANR	1042062	ArgumentList	dev		1041300	1					
ANR	1042063	Argument	dev		1041300	0					
ANR	1042064	Identifier	dev		1041300	0					
ANR	1042065	Argument	fill_rectangle		1041300	1					
ANR	1042066	Identifier	fill_rectangle		1041300	0					
ANR	1042067	Identifier	NULL		1041300	2					
ANR	1042068	ExpressionStatement	"fo . fill_trap = dev_proc ( dev , fill_trapezoid )"	399:4:14677:14721	1041300	66	True				
ANR	1042069	AssignmentExpression	"fo . fill_trap = dev_proc ( dev , fill_trapezoid )"		1041300	0		=			
ANR	1042070	MemberAccess	fo . fill_trap		1041300	0					
ANR	1042071	Identifier	fo		1041300	0					
ANR	1042072	Identifier	fill_trap		1041300	1					
ANR	1042073	CallExpression	"dev_proc ( dev , fill_trapezoid )"		1041300	1					
ANR	1042074	Callee	dev_proc		1041300	0					
ANR	1042075	Identifier	dev_proc		1041300	0					
ANR	1042076	ArgumentList	dev		1041300	1					
ANR	1042077	Argument	dev		1041300	0					
ANR	1042078	Identifier	dev		1041300	0					
ANR	1042079	Argument	fill_trapezoid		1041300	1					
ANR	1042080	Identifier	fill_trapezoid		1041300	0					
ANR	1042081	ExpressionStatement	fill_by_trapezoids = ( ! gx_path_has_curves ( ppath ) || params -> flatness >= 1.0 || fo . is_spotan )	417:4:15433:15551	1041300	67	True				
ANR	1042082	AssignmentExpression	fill_by_trapezoids = ( ! gx_path_has_curves ( ppath ) || params -> flatness >= 1.0 || fo . is_spotan )		1041300	0		=			
ANR	1042083	Identifier	fill_by_trapezoids		1041300	0					
ANR	1042084	OrExpression	! gx_path_has_curves ( ppath ) || params -> flatness >= 1.0 || fo . is_spotan		1041300	1		||			
ANR	1042085	UnaryOperationExpression	! gx_path_has_curves ( ppath )		1041300	0					
ANR	1042086	UnaryOperator	!		1041300	0					
ANR	1042087	CallExpression	gx_path_has_curves ( ppath )		1041300	1					
ANR	1042088	Callee	gx_path_has_curves		1041300	0					
ANR	1042089	Identifier	gx_path_has_curves		1041300	0					
ANR	1042090	ArgumentList	ppath		1041300	1					
ANR	1042091	Argument	ppath		1041300	0					
ANR	1042092	Identifier	ppath		1041300	0					
ANR	1042093	OrExpression	params -> flatness >= 1.0 || fo . is_spotan		1041300	1		||			
ANR	1042094	RelationalExpression	params -> flatness >= 1.0		1041300	0		>=			
ANR	1042095	PtrMemberAccess	params -> flatness		1041300	0					
ANR	1042096	Identifier	params		1041300	0					
ANR	1042097	Identifier	flatness		1041300	1					
ANR	1042098	PrimaryExpression	1.0		1041300	1					
ANR	1042099	MemberAccess	fo . is_spotan		1041300	1					
ANR	1042100	Identifier	fo		1041300	0					
ANR	1042101	Identifier	is_spotan		1041300	1					
ANR	1042102	IfStatement	if ( fill_by_trapezoids && ! fo . is_spotan && ! lop_is_idempotent ( lop ) )		1041300	68					
ANR	1042103	Condition	fill_by_trapezoids && ! fo . is_spotan && ! lop_is_idempotent ( lop )	420:8:15562:15623	1041300	0	True				
ANR	1042104	AndExpression	fill_by_trapezoids && ! fo . is_spotan && ! lop_is_idempotent ( lop )		1041300	0		&&			
ANR	1042105	Identifier	fill_by_trapezoids		1041300	0					
ANR	1042106	AndExpression	! fo . is_spotan && ! lop_is_idempotent ( lop )		1041300	1		&&			
ANR	1042107	UnaryOperationExpression	! fo . is_spotan		1041300	0					
ANR	1042108	UnaryOperator	!		1041300	0					
ANR	1042109	MemberAccess	fo . is_spotan		1041300	1					
ANR	1042110	Identifier	fo		1041300	0					
ANR	1042111	Identifier	is_spotan		1041300	1					
ANR	1042112	UnaryOperationExpression	! lop_is_idempotent ( lop )		1041300	1					
ANR	1042113	UnaryOperator	!		1041300	0					
ANR	1042114	CallExpression	lop_is_idempotent ( lop )		1041300	1					
ANR	1042115	Callee	lop_is_idempotent		1041300	0					
ANR	1042116	Identifier	lop_is_idempotent		1041300	0					
ANR	1042117	ArgumentList	lop		1041300	1					
ANR	1042118	Argument	lop		1041300	0					
ANR	1042119	Identifier	lop		1041300	0					
ANR	1042120	CompoundStatement		138:8:5588:5606	1041300	1					
ANR	1042121	IdentifierDeclStatement	gs_fixed_rect rbox ;	421:8:15636:15654	1041300	0	True				
ANR	1042122	IdentifierDecl	rbox		1041300	0					
ANR	1042123	IdentifierDeclType	gs_fixed_rect		1041300	0					
ANR	1042124	Identifier	rbox		1041300	1					
ANR	1042125	IfStatement	"if ( gx_path_is_rectangular ( ppath , & rbox ) )"		1041300	1					
ANR	1042126	Condition	"gx_path_is_rectangular ( ppath , & rbox )"	423:12:15669:15704	1041300	0	True				
ANR	1042127	CallExpression	"gx_path_is_rectangular ( ppath , & rbox )"		1041300	0					
ANR	1042128	Callee	gx_path_is_rectangular		1041300	0					
ANR	1042129	Identifier	gx_path_is_rectangular		1041300	0					
ANR	1042130	ArgumentList	ppath		1041300	1					
ANR	1042131	Argument	ppath		1041300	0					
ANR	1042132	Identifier	ppath		1041300	0					
ANR	1042133	Argument	& rbox		1041300	1					
ANR	1042134	UnaryOperationExpression	& rbox		1041300	0					
ANR	1042135	UnaryOperator	&		1041300	0					
ANR	1042136	Identifier	rbox		1041300	1					
ANR	1042137	CompoundStatement		144:12:5879:5934	1041300	1					
ANR	1042138	IdentifierDeclStatement	int x0 = fixed2int_pixround ( rbox . p . x - fo . adjust_left ) ;	424:12:15721:15775	1041300	0	True				
ANR	1042139	IdentifierDecl	x0 = fixed2int_pixround ( rbox . p . x - fo . adjust_left )		1041300	0					
ANR	1042140	IdentifierDeclType	int		1041300	0					
ANR	1042141	Identifier	x0		1041300	1					
ANR	1042142	AssignmentExpression	x0 = fixed2int_pixround ( rbox . p . x - fo . adjust_left )		1041300	2		=			
ANR	1042143	Identifier	x0		1041300	0					
ANR	1042144	CallExpression	fixed2int_pixround ( rbox . p . x - fo . adjust_left )		1041300	1					
ANR	1042145	Callee	fixed2int_pixround		1041300	0					
ANR	1042146	Identifier	fixed2int_pixround		1041300	0					
ANR	1042147	ArgumentList	rbox . p . x - fo . adjust_left		1041300	1					
ANR	1042148	Argument	rbox . p . x - fo . adjust_left		1041300	0					
ANR	1042149	AdditiveExpression	rbox . p . x - fo . adjust_left		1041300	0		-			
ANR	1042150	MemberAccess	rbox . p . x		1041300	0					
ANR	1042151	MemberAccess	rbox . p		1041300	0					
ANR	1042152	Identifier	rbox		1041300	0					
ANR	1042153	Identifier	p		1041300	1					
ANR	1042154	Identifier	x		1041300	1					
ANR	1042155	MemberAccess	fo . adjust_left		1041300	1					
ANR	1042156	Identifier	fo		1041300	0					
ANR	1042157	Identifier	adjust_left		1041300	1					
ANR	1042158	IdentifierDeclStatement	int y0 = fixed2int_pixround ( rbox . p . y - fo . adjust_below ) ;	425:12:15789:15844	1041300	1	True				
ANR	1042159	IdentifierDecl	y0 = fixed2int_pixround ( rbox . p . y - fo . adjust_below )		1041300	0					
ANR	1042160	IdentifierDeclType	int		1041300	0					
ANR	1042161	Identifier	y0		1041300	1					
ANR	1042162	AssignmentExpression	y0 = fixed2int_pixround ( rbox . p . y - fo . adjust_below )		1041300	2		=			
ANR	1042163	Identifier	y0		1041300	0					
ANR	1042164	CallExpression	fixed2int_pixround ( rbox . p . y - fo . adjust_below )		1041300	1					
ANR	1042165	Callee	fixed2int_pixround		1041300	0					
ANR	1042166	Identifier	fixed2int_pixround		1041300	0					
ANR	1042167	ArgumentList	rbox . p . y - fo . adjust_below		1041300	1					
ANR	1042168	Argument	rbox . p . y - fo . adjust_below		1041300	0					
ANR	1042169	AdditiveExpression	rbox . p . y - fo . adjust_below		1041300	0		-			
ANR	1042170	MemberAccess	rbox . p . y		1041300	0					
ANR	1042171	MemberAccess	rbox . p		1041300	0					
ANR	1042172	Identifier	rbox		1041300	0					
ANR	1042173	Identifier	p		1041300	1					
ANR	1042174	Identifier	y		1041300	1					
ANR	1042175	MemberAccess	fo . adjust_below		1041300	1					
ANR	1042176	Identifier	fo		1041300	0					
ANR	1042177	Identifier	adjust_below		1041300	1					
ANR	1042178	IdentifierDeclStatement	int x1 = fixed2int_pixround ( rbox . q . x + fo . adjust_right ) ;	426:12:15858:15913	1041300	2	True				
ANR	1042179	IdentifierDecl	x1 = fixed2int_pixround ( rbox . q . x + fo . adjust_right )		1041300	0					
ANR	1042180	IdentifierDeclType	int		1041300	0					
ANR	1042181	Identifier	x1		1041300	1					
ANR	1042182	AssignmentExpression	x1 = fixed2int_pixround ( rbox . q . x + fo . adjust_right )		1041300	2		=			
ANR	1042183	Identifier	x1		1041300	0					
ANR	1042184	CallExpression	fixed2int_pixround ( rbox . q . x + fo . adjust_right )		1041300	1					
ANR	1042185	Callee	fixed2int_pixround		1041300	0					
ANR	1042186	Identifier	fixed2int_pixround		1041300	0					
ANR	1042187	ArgumentList	rbox . q . x + fo . adjust_right		1041300	1					
ANR	1042188	Argument	rbox . q . x + fo . adjust_right		1041300	0					
ANR	1042189	AdditiveExpression	rbox . q . x + fo . adjust_right		1041300	0		+			
ANR	1042190	MemberAccess	rbox . q . x		1041300	0					
ANR	1042191	MemberAccess	rbox . q		1041300	0					
ANR	1042192	Identifier	rbox		1041300	0					
ANR	1042193	Identifier	q		1041300	1					
ANR	1042194	Identifier	x		1041300	1					
ANR	1042195	MemberAccess	fo . adjust_right		1041300	1					
ANR	1042196	Identifier	fo		1041300	0					
ANR	1042197	Identifier	adjust_right		1041300	1					
ANR	1042198	IdentifierDeclStatement	int y1 = fixed2int_pixround ( rbox . q . y + fo . adjust_above ) ;	427:12:15927:15982	1041300	3	True				
ANR	1042199	IdentifierDecl	y1 = fixed2int_pixround ( rbox . q . y + fo . adjust_above )		1041300	0					
ANR	1042200	IdentifierDeclType	int		1041300	0					
ANR	1042201	Identifier	y1		1041300	1					
ANR	1042202	AssignmentExpression	y1 = fixed2int_pixround ( rbox . q . y + fo . adjust_above )		1041300	2		=			
ANR	1042203	Identifier	y1		1041300	0					
ANR	1042204	CallExpression	fixed2int_pixround ( rbox . q . y + fo . adjust_above )		1041300	1					
ANR	1042205	Callee	fixed2int_pixround		1041300	0					
ANR	1042206	Identifier	fixed2int_pixround		1041300	0					
ANR	1042207	ArgumentList	rbox . q . y + fo . adjust_above		1041300	1					
ANR	1042208	Argument	rbox . q . y + fo . adjust_above		1041300	0					
ANR	1042209	AdditiveExpression	rbox . q . y + fo . adjust_above		1041300	0		+			
ANR	1042210	MemberAccess	rbox . q . y		1041300	0					
ANR	1042211	MemberAccess	rbox . q		1041300	0					
ANR	1042212	Identifier	rbox		1041300	0					
ANR	1042213	Identifier	q		1041300	1					
ANR	1042214	Identifier	y		1041300	1					
ANR	1042215	MemberAccess	fo . adjust_above		1041300	1					
ANR	1042216	Identifier	fo		1041300	0					
ANR	1042217	Identifier	adjust_above		1041300	1					
ANR	1042218	ReturnStatement	"return gx_fill_rectangle_device_rop ( x0 , y0 , x1 - x0 , y1 - y0 , pdevc , dev , lop ) ;"	429:12:15997:16123	1041300	4	True				
ANR	1042219	CallExpression	"gx_fill_rectangle_device_rop ( x0 , y0 , x1 - x0 , y1 - y0 , pdevc , dev , lop )"		1041300	0					
ANR	1042220	Callee	gx_fill_rectangle_device_rop		1041300	0					
ANR	1042221	Identifier	gx_fill_rectangle_device_rop		1041300	0					
ANR	1042222	ArgumentList	x0		1041300	1					
ANR	1042223	Argument	x0		1041300	0					
ANR	1042224	Identifier	x0		1041300	0					
ANR	1042225	Argument	y0		1041300	1					
ANR	1042226	Identifier	y0		1041300	0					
ANR	1042227	Argument	x1 - x0		1041300	2					
ANR	1042228	AdditiveExpression	x1 - x0		1041300	0		-			
ANR	1042229	Identifier	x1		1041300	0					
ANR	1042230	Identifier	x0		1041300	1					
ANR	1042231	Argument	y1 - y0		1041300	3					
ANR	1042232	AdditiveExpression	y1 - y0		1041300	0		-			
ANR	1042233	Identifier	y1		1041300	0					
ANR	1042234	Identifier	y0		1041300	1					
ANR	1042235	Argument	pdevc		1041300	4					
ANR	1042236	Identifier	pdevc		1041300	0					
ANR	1042237	Argument	dev		1041300	5					
ANR	1042238	Identifier	dev		1041300	0					
ANR	1042239	Argument	lop		1041300	6					
ANR	1042240	Identifier	lop		1041300	0					
ANR	1042241	IfStatement	if ( fo . adjust_left | fo . adjust_right | fo . adjust_below | fo . adjust_above )		1041300	2					
ANR	1042242	Condition	fo . adjust_left | fo . adjust_right | fo . adjust_below | fo . adjust_above	432:12:16147:16214	1041300	0	True				
ANR	1042243	InclusiveOrExpression	fo . adjust_left | fo . adjust_right | fo . adjust_below | fo . adjust_above		1041300	0		|			
ANR	1042244	MemberAccess	fo . adjust_left		1041300	0					
ANR	1042245	Identifier	fo		1041300	0					
ANR	1042246	Identifier	adjust_left		1041300	1					
ANR	1042247	InclusiveOrExpression	fo . adjust_right | fo . adjust_below | fo . adjust_above		1041300	1		|			
ANR	1042248	MemberAccess	fo . adjust_right		1041300	0					
ANR	1042249	Identifier	fo		1041300	0					
ANR	1042250	Identifier	adjust_right		1041300	1					
ANR	1042251	InclusiveOrExpression	fo . adjust_below | fo . adjust_above		1041300	1		|			
ANR	1042252	MemberAccess	fo . adjust_below		1041300	0					
ANR	1042253	Identifier	fo		1041300	0					
ANR	1042254	Identifier	adjust_below		1041300	1					
ANR	1042255	MemberAccess	fo . adjust_above		1041300	1					
ANR	1042256	Identifier	fo		1041300	0					
ANR	1042257	Identifier	adjust_above		1041300	1					
ANR	1042258	ExpressionStatement	fill_by_trapezoids = false	433:12:16229:16255	1041300	1	True				
ANR	1042259	AssignmentExpression	fill_by_trapezoids = false		1041300	0		=			
ANR	1042260	Identifier	fill_by_trapezoids		1041300	0					
ANR	1042261	Identifier	false		1041300	1					
ANR	1042262	IfStatement	if ( ! fo . is_spotan && ( ( scanconverter = gs_getscanconverter ( pdev -> memory ) ) >= GS_SCANCONVERTER_EDGEBUFFER || ( scanconverter == GS_SCANCONVERTER_DEFAULT && GS_SCANCONVERTER_DEFAULT_IS_EDGEBUFFER ) ) )		1041300	69					
ANR	1042263	Condition	! fo . is_spotan && ( ( scanconverter = gs_getscanconverter ( pdev -> memory ) ) >= GS_SCANCONVERTER_EDGEBUFFER || ( scanconverter == GS_SCANCONVERTER_DEFAULT && GS_SCANCONVERTER_DEFAULT_IS_EDGEBUFFER ) )	436:8:16306:16521	1041300	0	True				
ANR	1042264	AndExpression	! fo . is_spotan && ( ( scanconverter = gs_getscanconverter ( pdev -> memory ) ) >= GS_SCANCONVERTER_EDGEBUFFER || ( scanconverter == GS_SCANCONVERTER_DEFAULT && GS_SCANCONVERTER_DEFAULT_IS_EDGEBUFFER ) )		1041300	0		&&			
ANR	1042265	UnaryOperationExpression	! fo . is_spotan		1041300	0					
ANR	1042266	UnaryOperator	!		1041300	0					
ANR	1042267	MemberAccess	fo . is_spotan		1041300	1					
ANR	1042268	Identifier	fo		1041300	0					
ANR	1042269	Identifier	is_spotan		1041300	1					
ANR	1042270	OrExpression	( scanconverter = gs_getscanconverter ( pdev -> memory ) ) >= GS_SCANCONVERTER_EDGEBUFFER || ( scanconverter == GS_SCANCONVERTER_DEFAULT && GS_SCANCONVERTER_DEFAULT_IS_EDGEBUFFER )		1041300	1		||			
ANR	1042271	RelationalExpression	( scanconverter = gs_getscanconverter ( pdev -> memory ) ) >= GS_SCANCONVERTER_EDGEBUFFER		1041300	0		>=			
ANR	1042272	AssignmentExpression	scanconverter = gs_getscanconverter ( pdev -> memory )		1041300	0		=			
ANR	1042273	Identifier	scanconverter		1041300	0					
ANR	1042274	CallExpression	gs_getscanconverter ( pdev -> memory )		1041300	1					
ANR	1042275	Callee	gs_getscanconverter		1041300	0					
ANR	1042276	Identifier	gs_getscanconverter		1041300	0					
ANR	1042277	ArgumentList	pdev -> memory		1041300	1					
ANR	1042278	Argument	pdev -> memory		1041300	0					
ANR	1042279	PtrMemberAccess	pdev -> memory		1041300	0					
ANR	1042280	Identifier	pdev		1041300	0					
ANR	1042281	Identifier	memory		1041300	1					
ANR	1042282	Identifier	GS_SCANCONVERTER_EDGEBUFFER		1041300	1					
ANR	1042283	AndExpression	scanconverter == GS_SCANCONVERTER_DEFAULT && GS_SCANCONVERTER_DEFAULT_IS_EDGEBUFFER		1041300	1		&&			
ANR	1042284	EqualityExpression	scanconverter == GS_SCANCONVERTER_DEFAULT		1041300	0		==			
ANR	1042285	Identifier	scanconverter		1041300	0					
ANR	1042286	Identifier	GS_SCANCONVERTER_DEFAULT		1041300	1					
ANR	1042287	Identifier	GS_SCANCONVERTER_DEFAULT_IS_EDGEBUFFER		1041300	1					
ANR	1042288	CompoundStatement		155:8:6486:6510	1041300	1					
ANR	1042289	IdentifierDeclStatement	gx_edgebuffer eb = { 0 } ;	438:8:16534:16558	1041300	0	True				
ANR	1042290	IdentifierDecl	eb = { 0 }		1041300	0					
ANR	1042291	IdentifierDeclType	gx_edgebuffer		1041300	0					
ANR	1042292	Identifier	eb		1041300	1					
ANR	1042293	AssignmentExpression	eb = { 0 }		1041300	2		=			
ANR	1042294	Identifier	eb		1041300	0					
ANR	1042295	InitializerList	0		1041300	1					
ANR	1042296	PrimaryExpression	0		1041300	0					
ANR	1042297	IfStatement	if ( ! big_path && pgs -> accurate_curves && gx_path_has_curves ( ppath ) )		1041300	1					
ANR	1042298	Condition	! big_path && pgs -> accurate_curves && gx_path_has_curves ( ppath )	441:12:16694:16755	1041300	0	True				
ANR	1042299	AndExpression	! big_path && pgs -> accurate_curves && gx_path_has_curves ( ppath )		1041300	0		&&			
ANR	1042300	UnaryOperationExpression	! big_path		1041300	0					
ANR	1042301	UnaryOperator	!		1041300	0					
ANR	1042302	Identifier	big_path		1041300	1					
ANR	1042303	AndExpression	pgs -> accurate_curves && gx_path_has_curves ( ppath )		1041300	1		&&			
ANR	1042304	PtrMemberAccess	pgs -> accurate_curves		1041300	0					
ANR	1042305	Identifier	pgs		1041300	0					
ANR	1042306	Identifier	accurate_curves		1041300	1					
ANR	1042307	CallExpression	gx_path_has_curves ( ppath )		1041300	1					
ANR	1042308	Callee	gx_path_has_curves		1041300	0					
ANR	1042309	Identifier	gx_path_has_curves		1041300	0					
ANR	1042310	ArgumentList	ppath		1041300	1					
ANR	1042311	Argument	ppath		1041300	0					
ANR	1042312	Identifier	ppath		1041300	0					
ANR	1042313	CompoundStatement		159:8:6718:6718	1041300	1					
ANR	1042314	ExpressionStatement	"gx_path_init_local ( & ffpath , ppath -> memory )"	443:12:16780:16822	1041300	0	True				
ANR	1042315	CallExpression	"gx_path_init_local ( & ffpath , ppath -> memory )"		1041300	0					
ANR	1042316	Callee	gx_path_init_local		1041300	0					
ANR	1042317	Identifier	gx_path_init_local		1041300	0					
ANR	1042318	ArgumentList	& ffpath		1041300	1					
ANR	1042319	Argument	& ffpath		1041300	0					
ANR	1042320	UnaryOperationExpression	& ffpath		1041300	0					
ANR	1042321	UnaryOperator	&		1041300	0					
ANR	1042322	Identifier	ffpath		1041300	1					
ANR	1042323	Argument	ppath -> memory		1041300	1					
ANR	1042324	PtrMemberAccess	ppath -> memory		1041300	0					
ANR	1042325	Identifier	ppath		1041300	0					
ANR	1042326	Identifier	memory		1041300	1					
ANR	1042327	ExpressionStatement	"code = gx_path_copy_reducing ( ppath , & ffpath , fo . fixed_flat , NULL , pco_small_curves | pco_accurate )"	444:12:16836:16975	1041300	1	True				
ANR	1042328	AssignmentExpression	"code = gx_path_copy_reducing ( ppath , & ffpath , fo . fixed_flat , NULL , pco_small_curves | pco_accurate )"		1041300	0		=			
ANR	1042329	Identifier	code		1041300	0					
ANR	1042330	CallExpression	"gx_path_copy_reducing ( ppath , & ffpath , fo . fixed_flat , NULL , pco_small_curves | pco_accurate )"		1041300	1					
ANR	1042331	Callee	gx_path_copy_reducing		1041300	0					
ANR	1042332	Identifier	gx_path_copy_reducing		1041300	0					
ANR	1042333	ArgumentList	ppath		1041300	1					
ANR	1042334	Argument	ppath		1041300	0					
ANR	1042335	Identifier	ppath		1041300	0					
ANR	1042336	Argument	& ffpath		1041300	1					
ANR	1042337	UnaryOperationExpression	& ffpath		1041300	0					
ANR	1042338	UnaryOperator	&		1041300	0					
ANR	1042339	Identifier	ffpath		1041300	1					
ANR	1042340	Argument	fo . fixed_flat		1041300	2					
ANR	1042341	MemberAccess	fo . fixed_flat		1041300	0					
ANR	1042342	Identifier	fo		1041300	0					
ANR	1042343	Identifier	fixed_flat		1041300	1					
ANR	1042344	Argument	NULL		1041300	3					
ANR	1042345	Identifier	NULL		1041300	0					
ANR	1042346	Argument	pco_small_curves | pco_accurate		1041300	4					
ANR	1042347	InclusiveOrExpression	pco_small_curves | pco_accurate		1041300	0		|			
ANR	1042348	Identifier	pco_small_curves		1041300	0					
ANR	1042349	Identifier	pco_accurate		1041300	1					
ANR	1042350	IfStatement	if ( code < 0 )		1041300	2					
ANR	1042351	Condition	code < 0	446:16:16993:17000	1041300	0	True				
ANR	1042352	RelationalExpression	code < 0		1041300	0		<			
ANR	1042353	Identifier	code		1041300	0					
ANR	1042354	PrimaryExpression	0		1041300	1					
ANR	1042355	ReturnStatement	return code ;	447:16:17019:17030	1041300	1	True				
ANR	1042356	Identifier	code		1041300	0					
ANR	1042357	ExpressionStatement	ppath = & ffpath	448:12:17044:17059	1041300	3	True				
ANR	1042358	AssignmentExpression	ppath = & ffpath		1041300	0		=			
ANR	1042359	Identifier	ppath		1041300	0					
ANR	1042360	UnaryOperationExpression	& ffpath		1041300	1					
ANR	1042361	UnaryOperator	&		1041300	0					
ANR	1042362	Identifier	ffpath		1041300	1					
ANR	1042363	IfStatement	if ( fill_by_trapezoids && ! lop_is_idempotent ( lop ) )		1041300	2					
ANR	1042364	Condition	fill_by_trapezoids && ! lop_is_idempotent ( lop )	451:12:17084:17128	1041300	0	True				
ANR	1042365	AndExpression	fill_by_trapezoids && ! lop_is_idempotent ( lop )		1041300	0		&&			
ANR	1042366	Identifier	fill_by_trapezoids		1041300	0					
ANR	1042367	UnaryOperationExpression	! lop_is_idempotent ( lop )		1041300	1					
ANR	1042368	UnaryOperator	!		1041300	0					
ANR	1042369	CallExpression	lop_is_idempotent ( lop )		1041300	1					
ANR	1042370	Callee	lop_is_idempotent		1041300	0					
ANR	1042371	Identifier	lop_is_idempotent		1041300	0					
ANR	1042372	ArgumentList	lop		1041300	1					
ANR	1042373	Argument	lop		1041300	0					
ANR	1042374	Identifier	lop		1041300	0					
ANR	1042375	ExpressionStatement	fill_by_trapezoids = 0	452:12:17143:17165	1041300	1	True				
ANR	1042376	AssignmentExpression	fill_by_trapezoids = 0		1041300	0		=			
ANR	1042377	Identifier	fill_by_trapezoids		1041300	0					
ANR	1042378	PrimaryExpression	0		1041300	1					
ANR	1042379	IfStatement	if ( ! fill_by_trapezoids )		1041300	3					
ANR	1042380	Condition	! fill_by_trapezoids	453:12:17179:17197	1041300	0	True				
ANR	1042381	UnaryOperationExpression	! fill_by_trapezoids		1041300	0					
ANR	1042382	UnaryOperator	!		1041300	0					
ANR	1042383	Identifier	fill_by_trapezoids		1041300	1					
ANR	1042384	CompoundStatement		171:8:7160:7160	1041300	1					
ANR	1042385	IfStatement	if ( adjust . x == 0 && adjust . y == 0 )		1041300	0					
ANR	1042386	Condition	adjust . x == 0 && adjust . y == 0	455:16:17226:17255	1041300	0	True				
ANR	1042387	AndExpression	adjust . x == 0 && adjust . y == 0		1041300	0		&&			
ANR	1042388	EqualityExpression	adjust . x == 0		1041300	0		==			
ANR	1042389	MemberAccess	adjust . x		1041300	0					
ANR	1042390	Identifier	adjust		1041300	0					
ANR	1042391	Identifier	x		1041300	1					
ANR	1042392	PrimaryExpression	0		1041300	1					
ANR	1042393	EqualityExpression	adjust . y == 0		1041300	1		==			
ANR	1042394	MemberAccess	adjust . y		1041300	0					
ANR	1042395	Identifier	adjust		1041300	0					
ANR	1042396	Identifier	y		1041300	1					
ANR	1042397	PrimaryExpression	0		1041300	1					
ANR	1042398	CompoundStatement		172:48:7210:7210	1041300	1					
ANR	1042399	ExpressionStatement	"code = gx_scan_convert ( dev , ppath , & ibox , & eb , fo . fixed_flat )"	456:16:17276:17493	1041300	0	True				
ANR	1042400	AssignmentExpression	"code = gx_scan_convert ( dev , ppath , & ibox , & eb , fo . fixed_flat )"		1041300	0		=			
ANR	1042401	Identifier	code		1041300	0					
ANR	1042402	CallExpression	"gx_scan_convert ( dev , ppath , & ibox , & eb , fo . fixed_flat )"		1041300	1					
ANR	1042403	Callee	gx_scan_convert		1041300	0					
ANR	1042404	Identifier	gx_scan_convert		1041300	0					
ANR	1042405	ArgumentList	dev		1041300	1					
ANR	1042406	Argument	dev		1041300	0					
ANR	1042407	Identifier	dev		1041300	0					
ANR	1042408	Argument	ppath		1041300	1					
ANR	1042409	Identifier	ppath		1041300	0					
ANR	1042410	Argument	& ibox		1041300	2					
ANR	1042411	UnaryOperationExpression	& ibox		1041300	0					
ANR	1042412	UnaryOperator	&		1041300	0					
ANR	1042413	Identifier	ibox		1041300	1					
ANR	1042414	Argument	& eb		1041300	3					
ANR	1042415	UnaryOperationExpression	& eb		1041300	0					
ANR	1042416	UnaryOperator	&		1041300	0					
ANR	1042417	Identifier	eb		1041300	1					
ANR	1042418	Argument	fo . fixed_flat		1041300	4					
ANR	1042419	MemberAccess	fo . fixed_flat		1041300	0					
ANR	1042420	Identifier	fo		1041300	0					
ANR	1042421	Identifier	fixed_flat		1041300	1					
ANR	1042422	IfStatement	if ( code >= 0 )		1041300	1					
ANR	1042423	Condition	code >= 0	461:20:17515:17523	1041300	0	True				
ANR	1042424	RelationalExpression	code >= 0		1041300	0		>=			
ANR	1042425	Identifier	code		1041300	0					
ANR	1042426	PrimaryExpression	0		1041300	1					
ANR	1042427	CompoundStatement		178:31:7478:7478	1041300	1					
ANR	1042428	ExpressionStatement	"code = gx_filter_edgebuffer ( dev , & eb , params -> rule )"	462:20:17548:17695	1041300	0	True				
ANR	1042429	AssignmentExpression	"code = gx_filter_edgebuffer ( dev , & eb , params -> rule )"		1041300	0		=			
ANR	1042430	Identifier	code		1041300	0					
ANR	1042431	CallExpression	"gx_filter_edgebuffer ( dev , & eb , params -> rule )"		1041300	1					
ANR	1042432	Callee	gx_filter_edgebuffer		1041300	0					
ANR	1042433	Identifier	gx_filter_edgebuffer		1041300	0					
ANR	1042434	ArgumentList	dev		1041300	1					
ANR	1042435	Argument	dev		1041300	0					
ANR	1042436	Identifier	dev		1041300	0					
ANR	1042437	Argument	& eb		1041300	1					
ANR	1042438	UnaryOperationExpression	& eb		1041300	0					
ANR	1042439	UnaryOperator	&		1041300	0					
ANR	1042440	Identifier	eb		1041300	1					
ANR	1042441	Argument	params -> rule		1041300	2					
ANR	1042442	PtrMemberAccess	params -> rule		1041300	0					
ANR	1042443	Identifier	params		1041300	0					
ANR	1042444	Identifier	rule		1041300	1					
ANR	1042445	IfStatement	if ( code >= 0 )		1041300	2					
ANR	1042446	Condition	code >= 0	466:20:17735:17743	1041300	0	True				
ANR	1042447	RelationalExpression	code >= 0		1041300	0		>=			
ANR	1042448	Identifier	code		1041300	0					
ANR	1042449	PrimaryExpression	0		1041300	1					
ANR	1042450	CompoundStatement		183:31:7698:7698	1041300	1					
ANR	1042451	ExpressionStatement	"code = gx_fill_edgebuffer ( dev , pdevc , & eb , fo . fill_direct ? - 1 : ( int ) pgs -> log_op )"	467:20:17768:17988	1041300	0	True				
ANR	1042452	AssignmentExpression	"code = gx_fill_edgebuffer ( dev , pdevc , & eb , fo . fill_direct ? - 1 : ( int ) pgs -> log_op )"		1041300	0		=			
ANR	1042453	Identifier	code		1041300	0					
ANR	1042454	CallExpression	"gx_fill_edgebuffer ( dev , pdevc , & eb , fo . fill_direct ? - 1 : ( int ) pgs -> log_op )"		1041300	1					
ANR	1042455	Callee	gx_fill_edgebuffer		1041300	0					
ANR	1042456	Identifier	gx_fill_edgebuffer		1041300	0					
ANR	1042457	ArgumentList	dev		1041300	1					
ANR	1042458	Argument	dev		1041300	0					
ANR	1042459	Identifier	dev		1041300	0					
ANR	1042460	Argument	pdevc		1041300	1					
ANR	1042461	Identifier	pdevc		1041300	0					
ANR	1042462	Argument	& eb		1041300	2					
ANR	1042463	UnaryOperationExpression	& eb		1041300	0					
ANR	1042464	UnaryOperator	&		1041300	0					
ANR	1042465	Identifier	eb		1041300	1					
ANR	1042466	Argument	fo . fill_direct ? - 1 : ( int ) pgs -> log_op		1041300	3					
ANR	1042467	ConditionalExpression	fo . fill_direct ? - 1 : ( int ) pgs -> log_op		1041300	0					
ANR	1042468	Condition	fo . fill_direct		1041300	0					
ANR	1042469	MemberAccess	fo . fill_direct		1041300	0					
ANR	1042470	Identifier	fo		1041300	0					
ANR	1042471	Identifier	fill_direct		1041300	1					
ANR	1042472	UnaryOperationExpression	- 1		1041300	1					
ANR	1042473	UnaryOperator	-		1041300	0					
ANR	1042474	PrimaryExpression	1		1041300	1					
ANR	1042475	CastExpression	( int ) pgs -> log_op		1041300	2					
ANR	1042476	CastTarget	int		1041300	0					
ANR	1042477	PtrMemberAccess	pgs -> log_op		1041300	1					
ANR	1042478	Identifier	pgs		1041300	0					
ANR	1042479	Identifier	log_op		1041300	1					
ANR	1042480	ElseStatement	else		1041300	0					
ANR	1042481	CompoundStatement		189:19:7979:7979	1041300	0					
ANR	1042482	ExpressionStatement	"code = gx_scan_convert_app ( dev , ppath , & ibox , & eb , fo . fixed_flat )"	473:16:18045:18282	1041300	0	True				
ANR	1042483	AssignmentExpression	"code = gx_scan_convert_app ( dev , ppath , & ibox , & eb , fo . fixed_flat )"		1041300	0		=			
ANR	1042484	Identifier	code		1041300	0					
ANR	1042485	CallExpression	"gx_scan_convert_app ( dev , ppath , & ibox , & eb , fo . fixed_flat )"		1041300	1					
ANR	1042486	Callee	gx_scan_convert_app		1041300	0					
ANR	1042487	Identifier	gx_scan_convert_app		1041300	0					
ANR	1042488	ArgumentList	dev		1041300	1					
ANR	1042489	Argument	dev		1041300	0					
ANR	1042490	Identifier	dev		1041300	0					
ANR	1042491	Argument	ppath		1041300	1					
ANR	1042492	Identifier	ppath		1041300	0					
ANR	1042493	Argument	& ibox		1041300	2					
ANR	1042494	UnaryOperationExpression	& ibox		1041300	0					
ANR	1042495	UnaryOperator	&		1041300	0					
ANR	1042496	Identifier	ibox		1041300	1					
ANR	1042497	Argument	& eb		1041300	3					
ANR	1042498	UnaryOperationExpression	& eb		1041300	0					
ANR	1042499	UnaryOperator	&		1041300	0					
ANR	1042500	Identifier	eb		1041300	1					
ANR	1042501	Argument	fo . fixed_flat		1041300	4					
ANR	1042502	MemberAccess	fo . fixed_flat		1041300	0					
ANR	1042503	Identifier	fo		1041300	0					
ANR	1042504	Identifier	fixed_flat		1041300	1					
ANR	1042505	IfStatement	if ( code >= 0 )		1041300	1					
ANR	1042506	Condition	code >= 0	478:20:18304:18312	1041300	0	True				
ANR	1042507	RelationalExpression	code >= 0		1041300	0		>=			
ANR	1042508	Identifier	code		1041300	0					
ANR	1042509	PrimaryExpression	0		1041300	1					
ANR	1042510	CompoundStatement		195:31:8267:8267	1041300	1					
ANR	1042511	ExpressionStatement	"code = gx_filter_edgebuffer_app ( dev , & eb , params -> rule )"	479:20:18337:18496	1041300	0	True				
ANR	1042512	AssignmentExpression	"code = gx_filter_edgebuffer_app ( dev , & eb , params -> rule )"		1041300	0		=			
ANR	1042513	Identifier	code		1041300	0					
ANR	1042514	CallExpression	"gx_filter_edgebuffer_app ( dev , & eb , params -> rule )"		1041300	1					
ANR	1042515	Callee	gx_filter_edgebuffer_app		1041300	0					
ANR	1042516	Identifier	gx_filter_edgebuffer_app		1041300	0					
ANR	1042517	ArgumentList	dev		1041300	1					
ANR	1042518	Argument	dev		1041300	0					
ANR	1042519	Identifier	dev		1041300	0					
ANR	1042520	Argument	& eb		1041300	1					
ANR	1042521	UnaryOperationExpression	& eb		1041300	0					
ANR	1042522	UnaryOperator	&		1041300	0					
ANR	1042523	Identifier	eb		1041300	1					
ANR	1042524	Argument	params -> rule		1041300	2					
ANR	1042525	PtrMemberAccess	params -> rule		1041300	0					
ANR	1042526	Identifier	params		1041300	0					
ANR	1042527	Identifier	rule		1041300	1					
ANR	1042528	IfStatement	if ( code >= 0 )		1041300	2					
ANR	1042529	Condition	code >= 0	483:20:18536:18544	1041300	0	True				
ANR	1042530	RelationalExpression	code >= 0		1041300	0		>=			
ANR	1042531	Identifier	code		1041300	0					
ANR	1042532	PrimaryExpression	0		1041300	1					
ANR	1042533	CompoundStatement		200:31:8499:8499	1041300	1					
ANR	1042534	ExpressionStatement	"code = gx_fill_edgebuffer_app ( dev , pdevc , & eb , fo . fill_direct ? - 1 : ( int ) pgs -> log_op )"	484:20:18569:18805	1041300	0	True				
ANR	1042535	AssignmentExpression	"code = gx_fill_edgebuffer_app ( dev , pdevc , & eb , fo . fill_direct ? - 1 : ( int ) pgs -> log_op )"		1041300	0		=			
ANR	1042536	Identifier	code		1041300	0					
ANR	1042537	CallExpression	"gx_fill_edgebuffer_app ( dev , pdevc , & eb , fo . fill_direct ? - 1 : ( int ) pgs -> log_op )"		1041300	1					
ANR	1042538	Callee	gx_fill_edgebuffer_app		1041300	0					
ANR	1042539	Identifier	gx_fill_edgebuffer_app		1041300	0					
ANR	1042540	ArgumentList	dev		1041300	1					
ANR	1042541	Argument	dev		1041300	0					
ANR	1042542	Identifier	dev		1041300	0					
ANR	1042543	Argument	pdevc		1041300	1					
ANR	1042544	Identifier	pdevc		1041300	0					
ANR	1042545	Argument	& eb		1041300	2					
ANR	1042546	UnaryOperationExpression	& eb		1041300	0					
ANR	1042547	UnaryOperator	&		1041300	0					
ANR	1042548	Identifier	eb		1041300	1					
ANR	1042549	Argument	fo . fill_direct ? - 1 : ( int ) pgs -> log_op		1041300	3					
ANR	1042550	ConditionalExpression	fo . fill_direct ? - 1 : ( int ) pgs -> log_op		1041300	0					
ANR	1042551	Condition	fo . fill_direct		1041300	0					
ANR	1042552	MemberAccess	fo . fill_direct		1041300	0					
ANR	1042553	Identifier	fo		1041300	0					
ANR	1042554	Identifier	fill_direct		1041300	1					
ANR	1042555	UnaryOperationExpression	- 1		1041300	1					
ANR	1042556	UnaryOperator	-		1041300	0					
ANR	1042557	PrimaryExpression	1		1041300	1					
ANR	1042558	CastExpression	( int ) pgs -> log_op		1041300	2					
ANR	1042559	CastTarget	int		1041300	0					
ANR	1042560	PtrMemberAccess	pgs -> log_op		1041300	1					
ANR	1042561	Identifier	pgs		1041300	0					
ANR	1042562	Identifier	log_op		1041300	1					
ANR	1042563	ElseStatement	else		1041300	0					
ANR	1042564	CompoundStatement		207:15:8806:8806	1041300	0					
ANR	1042565	IfStatement	if ( adjust . x == 0 && adjust . y == 0 )		1041300	0					
ANR	1042566	Condition	adjust . x == 0 && adjust . y == 0	491:16:18872:18901	1041300	0	True				
ANR	1042567	AndExpression	adjust . x == 0 && adjust . y == 0		1041300	0		&&			
ANR	1042568	EqualityExpression	adjust . x == 0		1041300	0		==			
ANR	1042569	MemberAccess	adjust . x		1041300	0					
ANR	1042570	Identifier	adjust		1041300	0					
ANR	1042571	Identifier	x		1041300	1					
ANR	1042572	PrimaryExpression	0		1041300	1					
ANR	1042573	EqualityExpression	adjust . y == 0		1041300	1		==			
ANR	1042574	MemberAccess	adjust . y		1041300	0					
ANR	1042575	Identifier	adjust		1041300	0					
ANR	1042576	Identifier	y		1041300	1					
ANR	1042577	PrimaryExpression	0		1041300	1					
ANR	1042578	CompoundStatement		208:48:8856:8856	1041300	1					
ANR	1042579	ExpressionStatement	"code = gx_scan_convert_tr ( dev , ppath , & ibox , & eb , fo . fixed_flat )"	492:16:18922:19154	1041300	0	True				
ANR	1042580	AssignmentExpression	"code = gx_scan_convert_tr ( dev , ppath , & ibox , & eb , fo . fixed_flat )"		1041300	0		=			
ANR	1042581	Identifier	code		1041300	0					
ANR	1042582	CallExpression	"gx_scan_convert_tr ( dev , ppath , & ibox , & eb , fo . fixed_flat )"		1041300	1					
ANR	1042583	Callee	gx_scan_convert_tr		1041300	0					
ANR	1042584	Identifier	gx_scan_convert_tr		1041300	0					
ANR	1042585	ArgumentList	dev		1041300	1					
ANR	1042586	Argument	dev		1041300	0					
ANR	1042587	Identifier	dev		1041300	0					
ANR	1042588	Argument	ppath		1041300	1					
ANR	1042589	Identifier	ppath		1041300	0					
ANR	1042590	Argument	& ibox		1041300	2					
ANR	1042591	UnaryOperationExpression	& ibox		1041300	0					
ANR	1042592	UnaryOperator	&		1041300	0					
ANR	1042593	Identifier	ibox		1041300	1					
ANR	1042594	Argument	& eb		1041300	3					
ANR	1042595	UnaryOperationExpression	& eb		1041300	0					
ANR	1042596	UnaryOperator	&		1041300	0					
ANR	1042597	Identifier	eb		1041300	1					
ANR	1042598	Argument	fo . fixed_flat		1041300	4					
ANR	1042599	MemberAccess	fo . fixed_flat		1041300	0					
ANR	1042600	Identifier	fo		1041300	0					
ANR	1042601	Identifier	fixed_flat		1041300	1					
ANR	1042602	IfStatement	if ( code >= 0 )		1041300	1					
ANR	1042603	Condition	code >= 0	497:20:19176:19184	1041300	0	True				
ANR	1042604	RelationalExpression	code >= 0		1041300	0		>=			
ANR	1042605	Identifier	code		1041300	0					
ANR	1042606	PrimaryExpression	0		1041300	1					
ANR	1042607	CompoundStatement		214:31:9139:9139	1041300	1					
ANR	1042608	ExpressionStatement	"code = gx_filter_edgebuffer_tr ( dev , & eb , params -> rule )"	498:20:19209:19366	1041300	0	True				
ANR	1042609	AssignmentExpression	"code = gx_filter_edgebuffer_tr ( dev , & eb , params -> rule )"		1041300	0		=			
ANR	1042610	Identifier	code		1041300	0					
ANR	1042611	CallExpression	"gx_filter_edgebuffer_tr ( dev , & eb , params -> rule )"		1041300	1					
ANR	1042612	Callee	gx_filter_edgebuffer_tr		1041300	0					
ANR	1042613	Identifier	gx_filter_edgebuffer_tr		1041300	0					
ANR	1042614	ArgumentList	dev		1041300	1					
ANR	1042615	Argument	dev		1041300	0					
ANR	1042616	Identifier	dev		1041300	0					
ANR	1042617	Argument	& eb		1041300	1					
ANR	1042618	UnaryOperationExpression	& eb		1041300	0					
ANR	1042619	UnaryOperator	&		1041300	0					
ANR	1042620	Identifier	eb		1041300	1					
ANR	1042621	Argument	params -> rule		1041300	2					
ANR	1042622	PtrMemberAccess	params -> rule		1041300	0					
ANR	1042623	Identifier	params		1041300	0					
ANR	1042624	Identifier	rule		1041300	1					
ANR	1042625	IfStatement	if ( code >= 0 )		1041300	2					
ANR	1042626	Condition	code >= 0	502:20:19406:19414	1041300	0	True				
ANR	1042627	RelationalExpression	code >= 0		1041300	0		>=			
ANR	1042628	Identifier	code		1041300	0					
ANR	1042629	PrimaryExpression	0		1041300	1					
ANR	1042630	CompoundStatement		219:31:9369:9369	1041300	1					
ANR	1042631	ExpressionStatement	"code = gx_fill_edgebuffer_tr ( dev , pdevc , & eb , ( int ) pgs -> log_op )"	503:20:19439:19649	1041300	0	True				
ANR	1042632	AssignmentExpression	"code = gx_fill_edgebuffer_tr ( dev , pdevc , & eb , ( int ) pgs -> log_op )"		1041300	0		=			
ANR	1042633	Identifier	code		1041300	0					
ANR	1042634	CallExpression	"gx_fill_edgebuffer_tr ( dev , pdevc , & eb , ( int ) pgs -> log_op )"		1041300	1					
ANR	1042635	Callee	gx_fill_edgebuffer_tr		1041300	0					
ANR	1042636	Identifier	gx_fill_edgebuffer_tr		1041300	0					
ANR	1042637	ArgumentList	dev		1041300	1					
ANR	1042638	Argument	dev		1041300	0					
ANR	1042639	Identifier	dev		1041300	0					
ANR	1042640	Argument	pdevc		1041300	1					
ANR	1042641	Identifier	pdevc		1041300	0					
ANR	1042642	Argument	& eb		1041300	2					
ANR	1042643	UnaryOperationExpression	& eb		1041300	0					
ANR	1042644	UnaryOperator	&		1041300	0					
ANR	1042645	Identifier	eb		1041300	1					
ANR	1042646	Argument	( int ) pgs -> log_op		1041300	3					
ANR	1042647	CastExpression	( int ) pgs -> log_op		1041300	0					
ANR	1042648	CastTarget	int		1041300	0					
ANR	1042649	PtrMemberAccess	pgs -> log_op		1041300	1					
ANR	1042650	Identifier	pgs		1041300	0					
ANR	1042651	Identifier	log_op		1041300	1					
ANR	1042652	ElseStatement	else		1041300	0					
ANR	1042653	CompoundStatement		225:19:9640:9640	1041300	0					
ANR	1042654	ExpressionStatement	"code = gx_scan_convert_tr_app ( dev , ppath , & ibox , & eb , fo . fixed_flat )"	509:16:19706:19958	1041300	0	True				
ANR	1042655	AssignmentExpression	"code = gx_scan_convert_tr_app ( dev , ppath , & ibox , & eb , fo . fixed_flat )"		1041300	0		=			
ANR	1042656	Identifier	code		1041300	0					
ANR	1042657	CallExpression	"gx_scan_convert_tr_app ( dev , ppath , & ibox , & eb , fo . fixed_flat )"		1041300	1					
ANR	1042658	Callee	gx_scan_convert_tr_app		1041300	0					
ANR	1042659	Identifier	gx_scan_convert_tr_app		1041300	0					
ANR	1042660	ArgumentList	dev		1041300	1					
ANR	1042661	Argument	dev		1041300	0					
ANR	1042662	Identifier	dev		1041300	0					
ANR	1042663	Argument	ppath		1041300	1					
ANR	1042664	Identifier	ppath		1041300	0					
ANR	1042665	Argument	& ibox		1041300	2					
ANR	1042666	UnaryOperationExpression	& ibox		1041300	0					
ANR	1042667	UnaryOperator	&		1041300	0					
ANR	1042668	Identifier	ibox		1041300	1					
ANR	1042669	Argument	& eb		1041300	3					
ANR	1042670	UnaryOperationExpression	& eb		1041300	0					
ANR	1042671	UnaryOperator	&		1041300	0					
ANR	1042672	Identifier	eb		1041300	1					
ANR	1042673	Argument	fo . fixed_flat		1041300	4					
ANR	1042674	MemberAccess	fo . fixed_flat		1041300	0					
ANR	1042675	Identifier	fo		1041300	0					
ANR	1042676	Identifier	fixed_flat		1041300	1					
ANR	1042677	IfStatement	if ( code >= 0 )		1041300	1					
ANR	1042678	Condition	code >= 0	514:20:19980:19988	1041300	0	True				
ANR	1042679	RelationalExpression	code >= 0		1041300	0		>=			
ANR	1042680	Identifier	code		1041300	0					
ANR	1042681	PrimaryExpression	0		1041300	1					
ANR	1042682	CompoundStatement		231:31:9943:9943	1041300	1					
ANR	1042683	ExpressionStatement	"code = gx_filter_edgebuffer_tr_app ( dev , & eb , params -> rule )"	515:20:20013:20181	1041300	0	True				
ANR	1042684	AssignmentExpression	"code = gx_filter_edgebuffer_tr_app ( dev , & eb , params -> rule )"		1041300	0		=			
ANR	1042685	Identifier	code		1041300	0					
ANR	1042686	CallExpression	"gx_filter_edgebuffer_tr_app ( dev , & eb , params -> rule )"		1041300	1					
ANR	1042687	Callee	gx_filter_edgebuffer_tr_app		1041300	0					
ANR	1042688	Identifier	gx_filter_edgebuffer_tr_app		1041300	0					
ANR	1042689	ArgumentList	dev		1041300	1					
ANR	1042690	Argument	dev		1041300	0					
ANR	1042691	Identifier	dev		1041300	0					
ANR	1042692	Argument	& eb		1041300	1					
ANR	1042693	UnaryOperationExpression	& eb		1041300	0					
ANR	1042694	UnaryOperator	&		1041300	0					
ANR	1042695	Identifier	eb		1041300	1					
ANR	1042696	Argument	params -> rule		1041300	2					
ANR	1042697	PtrMemberAccess	params -> rule		1041300	0					
ANR	1042698	Identifier	params		1041300	0					
ANR	1042699	Identifier	rule		1041300	1					
ANR	1042700	IfStatement	if ( code >= 0 )		1041300	2					
ANR	1042701	Condition	code >= 0	519:20:20221:20229	1041300	0	True				
ANR	1042702	RelationalExpression	code >= 0		1041300	0		>=			
ANR	1042703	Identifier	code		1041300	0					
ANR	1042704	PrimaryExpression	0		1041300	1					
ANR	1042705	CompoundStatement		236:31:10184:10184	1041300	1					
ANR	1042706	ExpressionStatement	"code = gx_fill_edgebuffer_tr_app ( dev , pdevc , & eb , ( int ) pgs -> log_op )"	520:20:20254:20480	1041300	0	True				
ANR	1042707	AssignmentExpression	"code = gx_fill_edgebuffer_tr_app ( dev , pdevc , & eb , ( int ) pgs -> log_op )"		1041300	0		=			
ANR	1042708	Identifier	code		1041300	0					
ANR	1042709	CallExpression	"gx_fill_edgebuffer_tr_app ( dev , pdevc , & eb , ( int ) pgs -> log_op )"		1041300	1					
ANR	1042710	Callee	gx_fill_edgebuffer_tr_app		1041300	0					
ANR	1042711	Identifier	gx_fill_edgebuffer_tr_app		1041300	0					
ANR	1042712	ArgumentList	dev		1041300	1					
ANR	1042713	Argument	dev		1041300	0					
ANR	1042714	Identifier	dev		1041300	0					
ANR	1042715	Argument	pdevc		1041300	1					
ANR	1042716	Identifier	pdevc		1041300	0					
ANR	1042717	Argument	& eb		1041300	2					
ANR	1042718	UnaryOperationExpression	& eb		1041300	0					
ANR	1042719	UnaryOperator	&		1041300	0					
ANR	1042720	Identifier	eb		1041300	1					
ANR	1042721	Argument	( int ) pgs -> log_op		1041300	3					
ANR	1042722	CastExpression	( int ) pgs -> log_op		1041300	0					
ANR	1042723	CastTarget	int		1041300	0					
ANR	1042724	PtrMemberAccess	pgs -> log_op		1041300	1					
ANR	1042725	Identifier	pgs		1041300	0					
ANR	1042726	Identifier	log_op		1041300	1					
ANR	1042727	IfStatement	if ( ppath == & ffpath )		1041300	4					
ANR	1042728	Condition	ppath == & ffpath	527:12:20536:20551	1041300	0	True				
ANR	1042729	EqualityExpression	ppath == & ffpath		1041300	0		==			
ANR	1042730	Identifier	ppath		1041300	0					
ANR	1042731	UnaryOperationExpression	& ffpath		1041300	1					
ANR	1042732	UnaryOperator	&		1041300	0					
ANR	1042733	Identifier	ffpath		1041300	1					
ANR	1042734	ExpressionStatement	"gx_path_free ( ppath , ""gx_general_fill_path"" )"	528:12:20566:20609	1041300	1	True				
ANR	1042735	CallExpression	"gx_path_free ( ppath , ""gx_general_fill_path"" )"		1041300	0					
ANR	1042736	Callee	gx_path_free		1041300	0					
ANR	1042737	Identifier	gx_path_free		1041300	0					
ANR	1042738	ArgumentList	ppath		1041300	1					
ANR	1042739	Argument	ppath		1041300	0					
ANR	1042740	Identifier	ppath		1041300	0					
ANR	1042741	Argument	"""gx_general_fill_path"""		1041300	1					
ANR	1042742	PrimaryExpression	"""gx_general_fill_path"""		1041300	0					
ANR	1042743	ExpressionStatement	"gx_edgebuffer_fin ( dev , & eb )"	529:8:20619:20645	1041300	5	True				
ANR	1042744	CallExpression	"gx_edgebuffer_fin ( dev , & eb )"		1041300	0					
ANR	1042745	Callee	gx_edgebuffer_fin		1041300	0					
ANR	1042746	Identifier	gx_edgebuffer_fin		1041300	0					
ANR	1042747	ArgumentList	dev		1041300	1					
ANR	1042748	Argument	dev		1041300	0					
ANR	1042749	Identifier	dev		1041300	0					
ANR	1042750	Argument	& eb		1041300	1					
ANR	1042751	UnaryOperationExpression	& eb		1041300	0					
ANR	1042752	UnaryOperator	&		1041300	0					
ANR	1042753	Identifier	eb		1041300	1					
ANR	1042754	ReturnStatement	return code ;	530:8:20655:20666	1041300	6	True				
ANR	1042755	Identifier	code		1041300	0					
ANR	1042756	ExpressionStatement	"gx_path_init_local ( & ffpath , ppath -> memory )"	533:4:20679:20721	1041300	70	True				
ANR	1042757	CallExpression	"gx_path_init_local ( & ffpath , ppath -> memory )"		1041300	0					
ANR	1042758	Callee	gx_path_init_local		1041300	0					
ANR	1042759	Identifier	gx_path_init_local		1041300	0					
ANR	1042760	ArgumentList	& ffpath		1041300	1					
ANR	1042761	Argument	& ffpath		1041300	0					
ANR	1042762	UnaryOperationExpression	& ffpath		1041300	0					
ANR	1042763	UnaryOperator	&		1041300	0					
ANR	1042764	Identifier	ffpath		1041300	1					
ANR	1042765	Argument	ppath -> memory		1041300	1					
ANR	1042766	PtrMemberAccess	ppath -> memory		1041300	0					
ANR	1042767	Identifier	ppath		1041300	0					
ANR	1042768	Identifier	memory		1041300	1					
ANR	1042769	IfStatement	if ( ! big_path && ! gx_path_has_curves ( ppath ) )		1041300	71					
ANR	1042770	Condition	! big_path && ! gx_path_has_curves ( ppath )	534:8:20731:20769	1041300	0	True				
ANR	1042771	AndExpression	! big_path && ! gx_path_has_curves ( ppath )		1041300	0		&&			
ANR	1042772	UnaryOperationExpression	! big_path		1041300	0					
ANR	1042773	UnaryOperator	!		1041300	0					
ANR	1042774	Identifier	big_path		1041300	1					
ANR	1042775	UnaryOperationExpression	! gx_path_has_curves ( ppath )		1041300	1					
ANR	1042776	UnaryOperator	!		1041300	0					
ANR	1042777	CallExpression	gx_path_has_curves ( ppath )		1041300	1					
ANR	1042778	Callee	gx_path_has_curves		1041300	0					
ANR	1042779	Identifier	gx_path_has_curves		1041300	0					
ANR	1042780	ArgumentList	ppath		1041300	1					
ANR	1042781	Argument	ppath		1041300	0					
ANR	1042782	Identifier	ppath		1041300	0					
ANR	1042783	ExpressionStatement	pfpath = ppath	535:8:20815:20829	1041300	1	True				
ANR	1042784	AssignmentExpression	pfpath = ppath		1041300	0		=			
ANR	1042785	Identifier	pfpath		1041300	0					
ANR	1042786	Identifier	ppath		1041300	1					
ANR	1042787	ElseStatement	else		1041300	0					
ANR	1042788	IfStatement	if ( is_spotan_device ( dev ) )		1041300	0					
ANR	1042789	Condition	is_spotan_device ( dev )	536:13:20844:20864	1041300	0	True				
ANR	1042790	CallExpression	is_spotan_device ( dev )		1041300	0					
ANR	1042791	Callee	is_spotan_device		1041300	0					
ANR	1042792	Identifier	is_spotan_device		1041300	0					
ANR	1042793	ArgumentList	dev		1041300	1					
ANR	1042794	Argument	dev		1041300	0					
ANR	1042795	Identifier	dev		1041300	0					
ANR	1042796	ExpressionStatement	pfpath = ppath	537:8:20875:20889	1041300	1	True				
ANR	1042797	AssignmentExpression	pfpath = ppath		1041300	0		=			
ANR	1042798	Identifier	pfpath		1041300	0					
ANR	1042799	Identifier	ppath		1041300	1					
ANR	1042800	ElseStatement	else		1041300	0					
ANR	1042801	IfStatement	"if ( ! big_path && ! pgs -> accurate_curves && gx_path__check_curves ( ppath , pco_small_curves , fo . fixed_flat ) )"		1041300	0					
ANR	1042802	Condition	"! big_path && ! pgs -> accurate_curves && gx_path__check_curves ( ppath , pco_small_curves , fo . fixed_flat )"	538:13:20904:21002	1041300	0	True				
ANR	1042803	AndExpression	"! big_path && ! pgs -> accurate_curves && gx_path__check_curves ( ppath , pco_small_curves , fo . fixed_flat )"		1041300	0		&&			
ANR	1042804	UnaryOperationExpression	! big_path		1041300	0					
ANR	1042805	UnaryOperator	!		1041300	0					
ANR	1042806	Identifier	big_path		1041300	1					
ANR	1042807	AndExpression	"! pgs -> accurate_curves && gx_path__check_curves ( ppath , pco_small_curves , fo . fixed_flat )"		1041300	1		&&			
ANR	1042808	UnaryOperationExpression	! pgs -> accurate_curves		1041300	0					
ANR	1042809	UnaryOperator	!		1041300	0					
ANR	1042810	PtrMemberAccess	pgs -> accurate_curves		1041300	1					
ANR	1042811	Identifier	pgs		1041300	0					
ANR	1042812	Identifier	accurate_curves		1041300	1					
ANR	1042813	CallExpression	"gx_path__check_curves ( ppath , pco_small_curves , fo . fixed_flat )"		1041300	1					
ANR	1042814	Callee	gx_path__check_curves		1041300	0					
ANR	1042815	Identifier	gx_path__check_curves		1041300	0					
ANR	1042816	ArgumentList	ppath		1041300	1					
ANR	1042817	Argument	ppath		1041300	0					
ANR	1042818	Identifier	ppath		1041300	0					
ANR	1042819	Argument	pco_small_curves		1041300	1					
ANR	1042820	Identifier	pco_small_curves		1041300	0					
ANR	1042821	Argument	fo . fixed_flat		1041300	2					
ANR	1042822	MemberAccess	fo . fixed_flat		1041300	0					
ANR	1042823	Identifier	fo		1041300	0					
ANR	1042824	Identifier	fixed_flat		1041300	1					
ANR	1042825	ExpressionStatement	pfpath = ppath	539:8:21013:21027	1041300	1	True				
ANR	1042826	AssignmentExpression	pfpath = ppath		1041300	0		=			
ANR	1042827	Identifier	pfpath		1041300	0					
ANR	1042828	Identifier	ppath		1041300	1					
ANR	1042829	ElseStatement	else		1041300	0					
ANR	1042830	CompoundStatement		257:9:10990:10990	1041300	0					
ANR	1042831	ExpressionStatement	"code = gx_path_copy_reducing ( ppath , & ffpath , fo . fixed_flat , NULL , pco_small_curves | ( pgs -> accurate_curves ? pco_accurate : 0 ) )"	541:8:21048:21212	1041300	0	True				
ANR	1042832	AssignmentExpression	"code = gx_path_copy_reducing ( ppath , & ffpath , fo . fixed_flat , NULL , pco_small_curves | ( pgs -> accurate_curves ? pco_accurate : 0 ) )"		1041300	0		=			
ANR	1042833	Identifier	code		1041300	0					
ANR	1042834	CallExpression	"gx_path_copy_reducing ( ppath , & ffpath , fo . fixed_flat , NULL , pco_small_curves | ( pgs -> accurate_curves ? pco_accurate : 0 ) )"		1041300	1					
ANR	1042835	Callee	gx_path_copy_reducing		1041300	0					
ANR	1042836	Identifier	gx_path_copy_reducing		1041300	0					
ANR	1042837	ArgumentList	ppath		1041300	1					
ANR	1042838	Argument	ppath		1041300	0					
ANR	1042839	Identifier	ppath		1041300	0					
ANR	1042840	Argument	& ffpath		1041300	1					
ANR	1042841	UnaryOperationExpression	& ffpath		1041300	0					
ANR	1042842	UnaryOperator	&		1041300	0					
ANR	1042843	Identifier	ffpath		1041300	1					
ANR	1042844	Argument	fo . fixed_flat		1041300	2					
ANR	1042845	MemberAccess	fo . fixed_flat		1041300	0					
ANR	1042846	Identifier	fo		1041300	0					
ANR	1042847	Identifier	fixed_flat		1041300	1					
ANR	1042848	Argument	NULL		1041300	3					
ANR	1042849	Identifier	NULL		1041300	0					
ANR	1042850	Argument	pco_small_curves | ( pgs -> accurate_curves ? pco_accurate : 0 )		1041300	4					
ANR	1042851	InclusiveOrExpression	pco_small_curves | ( pgs -> accurate_curves ? pco_accurate : 0 )		1041300	0		|			
ANR	1042852	Identifier	pco_small_curves		1041300	0					
ANR	1042853	ConditionalExpression	pgs -> accurate_curves ? pco_accurate : 0		1041300	1					
ANR	1042854	Condition	pgs -> accurate_curves		1041300	0					
ANR	1042855	PtrMemberAccess	pgs -> accurate_curves		1041300	0					
ANR	1042856	Identifier	pgs		1041300	0					
ANR	1042857	Identifier	accurate_curves		1041300	1					
ANR	1042858	Identifier	pco_accurate		1041300	1					
ANR	1042859	PrimaryExpression	0		1041300	2					
ANR	1042860	IfStatement	if ( code < 0 )		1041300	1					
ANR	1042861	Condition	code < 0	543:12:21226:21233	1041300	0	True				
ANR	1042862	RelationalExpression	code < 0		1041300	0		<			
ANR	1042863	Identifier	code		1041300	0					
ANR	1042864	PrimaryExpression	0		1041300	1					
ANR	1042865	ReturnStatement	return code ;	544:12:21248:21259	1041300	1	True				
ANR	1042866	Identifier	code		1041300	0					
ANR	1042867	ExpressionStatement	pfpath = & ffpath	545:8:21269:21285	1041300	2	True				
ANR	1042868	AssignmentExpression	pfpath = & ffpath		1041300	0		=			
ANR	1042869	Identifier	pfpath		1041300	0					
ANR	1042870	UnaryOperationExpression	& ffpath		1041300	1					
ANR	1042871	UnaryOperator	&		1041300	0					
ANR	1042872	Identifier	ffpath		1041300	1					
ANR	1042873	IfStatement	if ( big_path )		1041300	3					
ANR	1042874	Condition	big_path	546:12:21299:21306	1041300	0	True				
ANR	1042875	Identifier	big_path		1041300	0					
ANR	1042876	CompoundStatement		263:22:11261:11261	1041300	1					
ANR	1042877	ExpressionStatement	code = gx_path_merge_contacting_contours ( pfpath )	547:12:21323:21371	1041300	0	True				
ANR	1042878	AssignmentExpression	code = gx_path_merge_contacting_contours ( pfpath )		1041300	0		=			
ANR	1042879	Identifier	code		1041300	0					
ANR	1042880	CallExpression	gx_path_merge_contacting_contours ( pfpath )		1041300	1					
ANR	1042881	Callee	gx_path_merge_contacting_contours		1041300	0					
ANR	1042882	Identifier	gx_path_merge_contacting_contours		1041300	0					
ANR	1042883	ArgumentList	pfpath		1041300	1					
ANR	1042884	Argument	pfpath		1041300	0					
ANR	1042885	Identifier	pfpath		1041300	0					
ANR	1042886	IfStatement	if ( code < 0 )		1041300	1					
ANR	1042887	Condition	code < 0	548:16:21389:21396	1041300	0	True				
ANR	1042888	RelationalExpression	code < 0		1041300	0		<			
ANR	1042889	Identifier	code		1041300	0					
ANR	1042890	PrimaryExpression	0		1041300	1					
ANR	1042891	ReturnStatement	return code ;	549:16:21415:21426	1041300	1	True				
ANR	1042892	Identifier	code		1041300	0					
ANR	1042893	ExpressionStatement	fo . fill_by_trapezoids = fill_by_trapezoids	552:4:21448:21490	1041300	72	True				
ANR	1042894	AssignmentExpression	fo . fill_by_trapezoids = fill_by_trapezoids		1041300	0		=			
ANR	1042895	MemberAccess	fo . fill_by_trapezoids		1041300	0					
ANR	1042896	Identifier	fo		1041300	0					
ANR	1042897	Identifier	fill_by_trapezoids		1041300	1					
ANR	1042898	Identifier	fill_by_trapezoids		1041300	1					
ANR	1042899	ExpressionStatement	"init_line_list ( & lst , ppath -> memory )"	554:4:21539:21574	1041300	73	True				
ANR	1042900	CallExpression	"init_line_list ( & lst , ppath -> memory )"		1041300	0					
ANR	1042901	Callee	init_line_list		1041300	0					
ANR	1042902	Identifier	init_line_list		1041300	0					
ANR	1042903	ArgumentList	& lst		1041300	1					
ANR	1042904	Argument	& lst		1041300	0					
ANR	1042905	UnaryOperationExpression	& lst		1041300	0					
ANR	1042906	UnaryOperator	&		1041300	0					
ANR	1042907	Identifier	lst		1041300	1					
ANR	1042908	Argument	ppath -> memory		1041300	1					
ANR	1042909	PtrMemberAccess	ppath -> memory		1041300	0					
ANR	1042910	Identifier	ppath		1041300	0					
ANR	1042911	Identifier	memory		1041300	1					
ANR	1042912	IfStatement	"if ( ( code = add_y_list ( pfpath , & lst ) ) < 0 )"		1041300	74					
ANR	1042913	Condition	"( code = add_y_list ( pfpath , & lst ) ) < 0"	555:8:21584:21620	1041300	0	True				
ANR	1042914	RelationalExpression	"( code = add_y_list ( pfpath , & lst ) ) < 0"		1041300	0		<			
ANR	1042915	AssignmentExpression	"code = add_y_list ( pfpath , & lst )"		1041300	0		=			
ANR	1042916	Identifier	code		1041300	0					
ANR	1042917	CallExpression	"add_y_list ( pfpath , & lst )"		1041300	1					
ANR	1042918	Callee	add_y_list		1041300	0					
ANR	1042919	Identifier	add_y_list		1041300	0					
ANR	1042920	ArgumentList	pfpath		1041300	1					
ANR	1042921	Argument	pfpath		1041300	0					
ANR	1042922	Identifier	pfpath		1041300	0					
ANR	1042923	Argument	& lst		1041300	1					
ANR	1042924	UnaryOperationExpression	& lst		1041300	0					
ANR	1042925	UnaryOperator	&		1041300	0					
ANR	1042926	Identifier	lst		1041300	1					
ANR	1042927	PrimaryExpression	0		1041300	1					
ANR	1042928	GotoStatement	goto nope ;	556:8:21631:21640	1041300	1	True				
ANR	1042929	Identifier	nope		1041300	0					
ANR	1042930	CompoundStatement		274:4:11598:11598	1041300	75					
ANR	1042931	ExpressionStatement	FILL_LOOP_PROC ( ( * fill_loop ) )	558:8:21656:21684	1041300	0	True				
ANR	1042932	CallExpression	FILL_LOOP_PROC ( ( * fill_loop ) )		1041300	0					
ANR	1042933	Callee	FILL_LOOP_PROC		1041300	0					
ANR	1042934	Identifier	FILL_LOOP_PROC		1041300	0					
ANR	1042935	ArgumentList	* fill_loop		1041300	1					
ANR	1042936	Argument	* fill_loop		1041300	0					
ANR	1042937	UnaryOperationExpression	* fill_loop		1041300	0					
ANR	1042938	UnaryOperator	*		1041300	0					
ANR	1042939	Identifier	fill_loop		1041300	1					
ANR	1042940	IfStatement	if ( fill_by_trapezoids )		1041300	1					
ANR	1042941	Condition	fill_by_trapezoids	561:12:21777:21794	1041300	0	True				
ANR	1042942	Identifier	fill_by_trapezoids		1041300	0					
ANR	1042943	ExpressionStatement	fill_loop = spot_into_trapezoids	562:12:21809:21841	1041300	1	True				
ANR	1042944	AssignmentExpression	fill_loop = spot_into_trapezoids		1041300	0		=			
ANR	1042945	Identifier	fill_loop		1041300	0					
ANR	1042946	Identifier	spot_into_trapezoids		1041300	1					
ANR	1042947	ElseStatement	else		1041300	0					
ANR	1042948	ExpressionStatement	fill_loop = spot_into_scan_lines	564:12:21868:21900	1041300	0	True				
ANR	1042949	AssignmentExpression	fill_loop = spot_into_scan_lines		1041300	0		=			
ANR	1042950	Identifier	fill_loop		1041300	0					
ANR	1042951	Identifier	spot_into_scan_lines		1041300	1					
ANR	1042952	IfStatement	if ( gs_currentcpsimode ( pgs -> memory ) && is_character )		1041300	2					
ANR	1042953	Condition	gs_currentcpsimode ( pgs -> memory ) && is_character	565:12:21914:21960	1041300	0	True				
ANR	1042954	AndExpression	gs_currentcpsimode ( pgs -> memory ) && is_character		1041300	0		&&			
ANR	1042955	CallExpression	gs_currentcpsimode ( pgs -> memory )		1041300	0					
ANR	1042956	Callee	gs_currentcpsimode		1041300	0					
ANR	1042957	Identifier	gs_currentcpsimode		1041300	0					
ANR	1042958	ArgumentList	pgs -> memory		1041300	1					
ANR	1042959	Argument	pgs -> memory		1041300	0					
ANR	1042960	PtrMemberAccess	pgs -> memory		1041300	0					
ANR	1042961	Identifier	pgs		1041300	0					
ANR	1042962	Identifier	memory		1041300	1					
ANR	1042963	Identifier	is_character		1041300	1					
ANR	1042964	CompoundStatement		282:61:11915:11915	1041300	1					
ANR	1042965	IfStatement	if ( lst . contour_count > countof ( lst . local_windings ) )		1041300	0					
ANR	1042966	Condition	lst . contour_count > countof ( lst . local_windings )	566:16:21981:22027	1041300	0	True				
ANR	1042967	RelationalExpression	lst . contour_count > countof ( lst . local_windings )		1041300	0		>			
ANR	1042968	MemberAccess	lst . contour_count		1041300	0					
ANR	1042969	Identifier	lst		1041300	0					
ANR	1042970	Identifier	contour_count		1041300	1					
ANR	1042971	CallExpression	countof ( lst . local_windings )		1041300	1					
ANR	1042972	Callee	countof		1041300	0					
ANR	1042973	Identifier	countof		1041300	0					
ANR	1042974	ArgumentList	lst . local_windings		1041300	1					
ANR	1042975	Argument	lst . local_windings		1041300	0					
ANR	1042976	MemberAccess	lst . local_windings		1041300	0					
ANR	1042977	Identifier	lst		1041300	0					
ANR	1042978	Identifier	local_windings		1041300	1					
ANR	1042979	CompoundStatement		283:65:11982:11982	1041300	1					
ANR	1042980	ExpressionStatement	"lst . windings = ( int * ) gs_alloc_byte_array ( pdev -> memory , lst . contour_count , sizeof ( int ) , ""gx_general_fill_path"" )"	567:16:22048:22191	1041300	0	True				
ANR	1042981	AssignmentExpression	"lst . windings = ( int * ) gs_alloc_byte_array ( pdev -> memory , lst . contour_count , sizeof ( int ) , ""gx_general_fill_path"" )"		1041300	0		=			
ANR	1042982	MemberAccess	lst . windings		1041300	0					
ANR	1042983	Identifier	lst		1041300	0					
ANR	1042984	Identifier	windings		1041300	1					
ANR	1042985	CastExpression	"( int * ) gs_alloc_byte_array ( pdev -> memory , lst . contour_count , sizeof ( int ) , ""gx_general_fill_path"" )"		1041300	1					
ANR	1042986	CastTarget	int *		1041300	0					
ANR	1042987	CallExpression	"gs_alloc_byte_array ( pdev -> memory , lst . contour_count , sizeof ( int ) , ""gx_general_fill_path"" )"		1041300	1					
ANR	1042988	Callee	gs_alloc_byte_array		1041300	0					
ANR	1042989	Identifier	gs_alloc_byte_array		1041300	0					
ANR	1042990	ArgumentList	pdev -> memory		1041300	1					
ANR	1042991	Argument	pdev -> memory		1041300	0					
ANR	1042992	PtrMemberAccess	pdev -> memory		1041300	0					
ANR	1042993	Identifier	pdev		1041300	0					
ANR	1042994	Identifier	memory		1041300	1					
ANR	1042995	Argument	lst . contour_count		1041300	1					
ANR	1042996	MemberAccess	lst . contour_count		1041300	0					
ANR	1042997	Identifier	lst		1041300	0					
ANR	1042998	Identifier	contour_count		1041300	1					
ANR	1042999	Argument	sizeof ( int )		1041300	2					
ANR	1043000	SizeofExpression	sizeof ( int )		1041300	0					
ANR	1043001	Sizeof	sizeof		1041300	0					
ANR	1043002	SizeofOperand	int		1041300	1					
ANR	1043003	Argument	"""gx_general_fill_path"""		1041300	3					
ANR	1043004	PrimaryExpression	"""gx_general_fill_path"""		1041300	0					
ANR	1043005	ElseStatement	else		1041300	0					
ANR	1043006	ExpressionStatement	lst . windings = lst . local_windings	570:16:22228:22261	1041300	0	True				
ANR	1043007	AssignmentExpression	lst . windings = lst . local_windings		1041300	0		=			
ANR	1043008	MemberAccess	lst . windings		1041300	0					
ANR	1043009	Identifier	lst		1041300	0					
ANR	1043010	Identifier	windings		1041300	1					
ANR	1043011	MemberAccess	lst . local_windings		1041300	1					
ANR	1043012	Identifier	lst		1041300	0					
ANR	1043013	Identifier	local_windings		1041300	1					
ANR	1043014	ExpressionStatement	"memset ( lst . windings , 0 , sizeof ( lst . windings [ 0 ] ) * lst . contour_count )"	571:12:22275:22343	1041300	1	True				
ANR	1043015	CallExpression	"memset ( lst . windings , 0 , sizeof ( lst . windings [ 0 ] ) * lst . contour_count )"		1041300	0					
ANR	1043016	Callee	memset		1041300	0					
ANR	1043017	Identifier	memset		1041300	0					
ANR	1043018	ArgumentList	lst . windings		1041300	1					
ANR	1043019	Argument	lst . windings		1041300	0					
ANR	1043020	MemberAccess	lst . windings		1041300	0					
ANR	1043021	Identifier	lst		1041300	0					
ANR	1043022	Identifier	windings		1041300	1					
ANR	1043023	Argument	0		1041300	1					
ANR	1043024	PrimaryExpression	0		1041300	0					
ANR	1043025	Argument	sizeof ( lst . windings [ 0 ] ) * lst . contour_count		1041300	2					
ANR	1043026	MultiplicativeExpression	sizeof ( lst . windings [ 0 ] ) * lst . contour_count		1041300	0		*			
ANR	1043027	SizeofExpression	sizeof ( lst . windings [ 0 ] )		1041300	0					
ANR	1043028	Sizeof	sizeof		1041300	0					
ANR	1043029	ArrayIndexing	lst . windings [ 0 ]		1041300	1					
ANR	1043030	MemberAccess	lst . windings		1041300	0					
ANR	1043031	Identifier	lst		1041300	0					
ANR	1043032	Identifier	windings		1041300	1					
ANR	1043033	PrimaryExpression	0		1041300	1					
ANR	1043034	MemberAccess	lst . contour_count		1041300	1					
ANR	1043035	Identifier	lst		1041300	0					
ANR	1043036	Identifier	contour_count		1041300	1					
ANR	1043037	ExpressionStatement	"code = ( * fill_loop ) ( & lst , ( max_fill_band == 0 ? NO_BAND_MASK : int2fixed ( - max_fill_band ) ) )"	573:8:22363:22466	1041300	3	True				
ANR	1043038	AssignmentExpression	"code = ( * fill_loop ) ( & lst , ( max_fill_band == 0 ? NO_BAND_MASK : int2fixed ( - max_fill_band ) ) )"		1041300	0		=			
ANR	1043039	Identifier	code		1041300	0					
ANR	1043040	CallExpression	"( * fill_loop ) ( & lst , ( max_fill_band == 0 ? NO_BAND_MASK : int2fixed ( - max_fill_band ) ) )"		1041300	1					
ANR	1043041	Callee	* fill_loop		1041300	0					
ANR	1043042	UnaryOperationExpression	* fill_loop		1041300	0					
ANR	1043043	UnaryOperator	*		1041300	0					
ANR	1043044	Identifier	fill_loop		1041300	1					
ANR	1043045	ArgumentList	& lst		1041300	1					
ANR	1043046	Argument	& lst		1041300	0					
ANR	1043047	UnaryOperationExpression	& lst		1041300	0					
ANR	1043048	UnaryOperator	&		1041300	0					
ANR	1043049	Identifier	lst		1041300	1					
ANR	1043050	Argument	max_fill_band == 0 ? NO_BAND_MASK : int2fixed ( - max_fill_band )		1041300	1					
ANR	1043051	ConditionalExpression	max_fill_band == 0 ? NO_BAND_MASK : int2fixed ( - max_fill_band )		1041300	0					
ANR	1043052	Condition	max_fill_band == 0		1041300	0					
ANR	1043053	EqualityExpression	max_fill_band == 0		1041300	0		==			
ANR	1043054	Identifier	max_fill_band		1041300	0					
ANR	1043055	PrimaryExpression	0		1041300	1					
ANR	1043056	Identifier	NO_BAND_MASK		1041300	1					
ANR	1043057	CallExpression	int2fixed ( - max_fill_band )		1041300	2					
ANR	1043058	Callee	int2fixed		1041300	0					
ANR	1043059	Identifier	int2fixed		1041300	0					
ANR	1043060	ArgumentList	- max_fill_band		1041300	1					
ANR	1043061	Argument	- max_fill_band		1041300	0					
ANR	1043062	UnaryOperationExpression	- max_fill_band		1041300	0					
ANR	1043063	UnaryOperator	-		1041300	0					
ANR	1043064	Identifier	max_fill_band		1041300	1					
ANR	1043065	IfStatement	if ( lst . windings != NULL && lst . windings != lst . local_windings )		1041300	4					
ANR	1043066	Condition	lst . windings != NULL && lst . windings != lst . local_windings	575:12:22480:22537	1041300	0	True				
ANR	1043067	AndExpression	lst . windings != NULL && lst . windings != lst . local_windings		1041300	0		&&			
ANR	1043068	EqualityExpression	lst . windings != NULL		1041300	0		!=			
ANR	1043069	MemberAccess	lst . windings		1041300	0					
ANR	1043070	Identifier	lst		1041300	0					
ANR	1043071	Identifier	windings		1041300	1					
ANR	1043072	Identifier	NULL		1041300	1					
ANR	1043073	EqualityExpression	lst . windings != lst . local_windings		1041300	1		!=			
ANR	1043074	MemberAccess	lst . windings		1041300	0					
ANR	1043075	Identifier	lst		1041300	0					
ANR	1043076	Identifier	windings		1041300	1					
ANR	1043077	MemberAccess	lst . local_windings		1041300	1					
ANR	1043078	Identifier	lst		1041300	0					
ANR	1043079	Identifier	local_windings		1041300	1					
ANR	1043080	ExpressionStatement	"gs_free_object ( pdev -> memory , lst . windings , ""gx_general_fill_path"" )"	576:12:22552:22618	1041300	1	True				
ANR	1043081	CallExpression	"gs_free_object ( pdev -> memory , lst . windings , ""gx_general_fill_path"" )"		1041300	0					
ANR	1043082	Callee	gs_free_object		1041300	0					
ANR	1043083	Identifier	gs_free_object		1041300	0					
ANR	1043084	ArgumentList	pdev -> memory		1041300	1					
ANR	1043085	Argument	pdev -> memory		1041300	0					
ANR	1043086	PtrMemberAccess	pdev -> memory		1041300	0					
ANR	1043087	Identifier	pdev		1041300	0					
ANR	1043088	Identifier	memory		1041300	1					
ANR	1043089	Argument	lst . windings		1041300	1					
ANR	1043090	MemberAccess	lst . windings		1041300	0					
ANR	1043091	Identifier	lst		1041300	0					
ANR	1043092	Identifier	windings		1041300	1					
ANR	1043093	Argument	"""gx_general_fill_path"""		1041300	2					
ANR	1043094	PrimaryExpression	"""gx_general_fill_path"""		1041300	0					
ANR	1043095	Label	nope :	578:2:22628:22632	1041300	76	True				
ANR	1043096	Identifier	nope		1041300	0					
ANR	1043097	IfStatement	if ( lst . close_count != 0 )		1041300	77					
ANR	1043098	Condition	lst . close_count != 0	578:11:22637:22656	1041300	0	True				
ANR	1043099	EqualityExpression	lst . close_count != 0		1041300	0		!=			
ANR	1043100	MemberAccess	lst . close_count		1041300	0					
ANR	1043101	Identifier	lst		1041300	0					
ANR	1043102	Identifier	close_count		1041300	1					
ANR	1043103	PrimaryExpression	0		1041300	1					
ANR	1043104	ExpressionStatement	"unclose_path ( pfpath , lst . close_count )"	579:8:22667:22704	1041300	1	True				
ANR	1043105	CallExpression	"unclose_path ( pfpath , lst . close_count )"		1041300	0					
ANR	1043106	Callee	unclose_path		1041300	0					
ANR	1043107	Identifier	unclose_path		1041300	0					
ANR	1043108	ArgumentList	pfpath		1041300	1					
ANR	1043109	Argument	pfpath		1041300	0					
ANR	1043110	Identifier	pfpath		1041300	0					
ANR	1043111	Argument	lst . close_count		1041300	1					
ANR	1043112	MemberAccess	lst . close_count		1041300	0					
ANR	1043113	Identifier	lst		1041300	0					
ANR	1043114	Identifier	close_count		1041300	1					
ANR	1043115	ExpressionStatement	free_line_list ( & lst )	580:4:22710:22730	1041300	78	True				
ANR	1043116	CallExpression	free_line_list ( & lst )		1041300	0					
ANR	1043117	Callee	free_line_list		1041300	0					
ANR	1043118	Identifier	free_line_list		1041300	0					
ANR	1043119	ArgumentList	& lst		1041300	1					
ANR	1043120	Argument	& lst		1041300	0					
ANR	1043121	UnaryOperationExpression	& lst		1041300	0					
ANR	1043122	UnaryOperator	&		1041300	0					
ANR	1043123	Identifier	lst		1041300	1					
ANR	1043124	IfStatement	if ( pfpath != ppath )		1041300	79					
ANR	1043125	Condition	pfpath != ppath	581:8:22740:22754	1041300	0	True				
ANR	1043126	EqualityExpression	pfpath != ppath		1041300	0		!=			
ANR	1043127	Identifier	pfpath		1041300	0					
ANR	1043128	Identifier	ppath		1041300	1					
ANR	1043129	ExpressionStatement	"gx_path_free ( pfpath , ""gx_general_fill_path"" )"	582:8:22793:22837	1041300	1	True				
ANR	1043130	CallExpression	"gx_path_free ( pfpath , ""gx_general_fill_path"" )"		1041300	0					
ANR	1043131	Callee	gx_path_free		1041300	0					
ANR	1043132	Identifier	gx_path_free		1041300	0					
ANR	1043133	ArgumentList	pfpath		1041300	1					
ANR	1043134	Argument	pfpath		1041300	0					
ANR	1043135	Identifier	pfpath		1041300	0					
ANR	1043136	Argument	"""gx_general_fill_path"""		1041300	1					
ANR	1043137	PrimaryExpression	"""gx_general_fill_path"""		1041300	0					
ANR	1043138	IfStatement	if ( gs_debug_c ( 'f' ) )		1041300	80					
ANR	1043139	Condition	gs_debug_c ( 'f' )	584:8:22893:22907	1041300	0	True				
ANR	1043140	CallExpression	gs_debug_c ( 'f' )		1041300	0					
ANR	1043141	Callee	gs_debug_c		1041300	0					
ANR	1043142	Identifier	gs_debug_c		1041300	0					
ANR	1043143	ArgumentList	'f'		1041300	1					
ANR	1043144	Argument	'f'		1041300	0					
ANR	1043145	PrimaryExpression	'f'		1041300	0					
ANR	1043146	CompoundStatement		301:25:12862:12862	1041300	1					
ANR	1043147	ExpressionStatement	"dmlputs ( ppath -> memory , ""[f]  # alloc    up  down horiz step slowx  iter  find  band bstep bfill\\n"" )"	585:8:22920:23035	1041300	0	True				
ANR	1043148	CallExpression	"dmlputs ( ppath -> memory , ""[f]  # alloc    up  down horiz step slowx  iter  find  band bstep bfill\\n"" )"		1041300	0					
ANR	1043149	Callee	dmlputs		1041300	0					
ANR	1043150	Identifier	dmlputs		1041300	0					
ANR	1043151	ArgumentList	ppath -> memory		1041300	1					
ANR	1043152	Argument	ppath -> memory		1041300	0					
ANR	1043153	PtrMemberAccess	ppath -> memory		1041300	0					
ANR	1043154	Identifier	ppath		1041300	0					
ANR	1043155	Identifier	memory		1041300	1					
ANR	1043156	Argument	"""[f]  # alloc    up  down horiz step slowx  iter  find  band bstep bfill\\n"""		1041300	1					
ANR	1043157	PrimaryExpression	"""[f]  # alloc    up  down horiz step slowx  iter  find  band bstep bfill\\n"""		1041300	0					
ANR	1043158	ExpressionStatement	"dmlprintf5 ( ppath -> memory , "" %5ld %5ld %5ld %5ld %5ld"" , stats_fill . fill , stats_fill . fill_alloc , stats_fill . y_up , stats_fill . y_down , stats_fill . horiz )"	587:8:23045:23250	1041300	1	True				
ANR	1043159	CallExpression	"dmlprintf5 ( ppath -> memory , "" %5ld %5ld %5ld %5ld %5ld"" , stats_fill . fill , stats_fill . fill_alloc , stats_fill . y_up , stats_fill . y_down , stats_fill . horiz )"		1041300	0					
ANR	1043160	Callee	dmlprintf5		1041300	0					
ANR	1043161	Identifier	dmlprintf5		1041300	0					
ANR	1043162	ArgumentList	ppath -> memory		1041300	1					
ANR	1043163	Argument	ppath -> memory		1041300	0					
ANR	1043164	PtrMemberAccess	ppath -> memory		1041300	0					
ANR	1043165	Identifier	ppath		1041300	0					
ANR	1043166	Identifier	memory		1041300	1					
ANR	1043167	Argument	""" %5ld %5ld %5ld %5ld %5ld"""		1041300	1					
ANR	1043168	PrimaryExpression	""" %5ld %5ld %5ld %5ld %5ld"""		1041300	0					
ANR	1043169	Argument	stats_fill . fill		1041300	2					
ANR	1043170	MemberAccess	stats_fill . fill		1041300	0					
ANR	1043171	Identifier	stats_fill		1041300	0					
ANR	1043172	Identifier	fill		1041300	1					
ANR	1043173	Argument	stats_fill . fill_alloc		1041300	3					
ANR	1043174	MemberAccess	stats_fill . fill_alloc		1041300	0					
ANR	1043175	Identifier	stats_fill		1041300	0					
ANR	1043176	Identifier	fill_alloc		1041300	1					
ANR	1043177	Argument	stats_fill . y_up		1041300	4					
ANR	1043178	MemberAccess	stats_fill . y_up		1041300	0					
ANR	1043179	Identifier	stats_fill		1041300	0					
ANR	1043180	Identifier	y_up		1041300	1					
ANR	1043181	Argument	stats_fill . y_down		1041300	5					
ANR	1043182	MemberAccess	stats_fill . y_down		1041300	0					
ANR	1043183	Identifier	stats_fill		1041300	0					
ANR	1043184	Identifier	y_down		1041300	1					
ANR	1043185	Argument	stats_fill . horiz		1041300	6					
ANR	1043186	MemberAccess	stats_fill . horiz		1041300	0					
ANR	1043187	Identifier	stats_fill		1041300	0					
ANR	1043188	Identifier	horiz		1041300	1					
ANR	1043189	ExpressionStatement	"dmlprintf4 ( ppath -> memory , "" %5ld %5ld %5ld %5ld"" , stats_fill . x_step , stats_fill . slow_x , stats_fill . iter , stats_fill . find_y )"	591:8:23260:23421	1041300	2	True				
ANR	1043190	CallExpression	"dmlprintf4 ( ppath -> memory , "" %5ld %5ld %5ld %5ld"" , stats_fill . x_step , stats_fill . slow_x , stats_fill . iter , stats_fill . find_y )"		1041300	0					
ANR	1043191	Callee	dmlprintf4		1041300	0					
ANR	1043192	Identifier	dmlprintf4		1041300	0					
ANR	1043193	ArgumentList	ppath -> memory		1041300	1					
ANR	1043194	Argument	ppath -> memory		1041300	0					
ANR	1043195	PtrMemberAccess	ppath -> memory		1041300	0					
ANR	1043196	Identifier	ppath		1041300	0					
ANR	1043197	Identifier	memory		1041300	1					
ANR	1043198	Argument	""" %5ld %5ld %5ld %5ld"""		1041300	1					
ANR	1043199	PrimaryExpression	""" %5ld %5ld %5ld %5ld"""		1041300	0					
ANR	1043200	Argument	stats_fill . x_step		1041300	2					
ANR	1043201	MemberAccess	stats_fill . x_step		1041300	0					
ANR	1043202	Identifier	stats_fill		1041300	0					
ANR	1043203	Identifier	x_step		1041300	1					
ANR	1043204	Argument	stats_fill . slow_x		1041300	3					
ANR	1043205	MemberAccess	stats_fill . slow_x		1041300	0					
ANR	1043206	Identifier	stats_fill		1041300	0					
ANR	1043207	Identifier	slow_x		1041300	1					
ANR	1043208	Argument	stats_fill . iter		1041300	4					
ANR	1043209	MemberAccess	stats_fill . iter		1041300	0					
ANR	1043210	Identifier	stats_fill		1041300	0					
ANR	1043211	Identifier	iter		1041300	1					
ANR	1043212	Argument	stats_fill . find_y		1041300	5					
ANR	1043213	MemberAccess	stats_fill . find_y		1041300	0					
ANR	1043214	Identifier	stats_fill		1041300	0					
ANR	1043215	Identifier	find_y		1041300	1					
ANR	1043216	ExpressionStatement	"dmlprintf3 ( ppath -> memory , "" %5ld %5ld %5ld\\n"" , stats_fill . band , stats_fill . band_step , stats_fill . band_fill )"	594:8:23431:23576	1041300	3	True				
ANR	1043217	CallExpression	"dmlprintf3 ( ppath -> memory , "" %5ld %5ld %5ld\\n"" , stats_fill . band , stats_fill . band_step , stats_fill . band_fill )"		1041300	0					
ANR	1043218	Callee	dmlprintf3		1041300	0					
ANR	1043219	Identifier	dmlprintf3		1041300	0					
ANR	1043220	ArgumentList	ppath -> memory		1041300	1					
ANR	1043221	Argument	ppath -> memory		1041300	0					
ANR	1043222	PtrMemberAccess	ppath -> memory		1041300	0					
ANR	1043223	Identifier	ppath		1041300	0					
ANR	1043224	Identifier	memory		1041300	1					
ANR	1043225	Argument	""" %5ld %5ld %5ld\\n"""		1041300	1					
ANR	1043226	PrimaryExpression	""" %5ld %5ld %5ld\\n"""		1041300	0					
ANR	1043227	Argument	stats_fill . band		1041300	2					
ANR	1043228	MemberAccess	stats_fill . band		1041300	0					
ANR	1043229	Identifier	stats_fill		1041300	0					
ANR	1043230	Identifier	band		1041300	1					
ANR	1043231	Argument	stats_fill . band_step		1041300	3					
ANR	1043232	MemberAccess	stats_fill . band_step		1041300	0					
ANR	1043233	Identifier	stats_fill		1041300	0					
ANR	1043234	Identifier	band_step		1041300	1					
ANR	1043235	Argument	stats_fill . band_fill		1041300	4					
ANR	1043236	MemberAccess	stats_fill . band_fill		1041300	0					
ANR	1043237	Identifier	stats_fill		1041300	0					
ANR	1043238	Identifier	band_fill		1041300	1					
ANR	1043239	ExpressionStatement	"dmlputs ( ppath -> memory , ""[f]    afill slant shall sfill mqcrs order slowo\\n"" )"	597:8:23586:23678	1041300	4	True				
ANR	1043240	CallExpression	"dmlputs ( ppath -> memory , ""[f]    afill slant shall sfill mqcrs order slowo\\n"" )"		1041300	0					
ANR	1043241	Callee	dmlputs		1041300	0					
ANR	1043242	Identifier	dmlputs		1041300	0					
ANR	1043243	ArgumentList	ppath -> memory		1041300	1					
ANR	1043244	Argument	ppath -> memory		1041300	0					
ANR	1043245	PtrMemberAccess	ppath -> memory		1041300	0					
ANR	1043246	Identifier	ppath		1041300	0					
ANR	1043247	Identifier	memory		1041300	1					
ANR	1043248	Argument	"""[f]    afill slant shall sfill mqcrs order slowo\\n"""		1041300	1					
ANR	1043249	PrimaryExpression	"""[f]    afill slant shall sfill mqcrs order slowo\\n"""		1041300	0					
ANR	1043250	ExpressionStatement	"dmlprintf7 ( ppath -> memory , ""       %5ld %5ld %5ld %5ld %5ld %5ld %5ld\\n"" , stats_fill . afill , stats_fill . slant , stats_fill . slant_shallow , stats_fill . sfill , stats_fill . mq_cross , stats_fill . order , stats_fill . slow_order )"	599:8:23688:23978	1041300	5	True				
ANR	1043251	CallExpression	"dmlprintf7 ( ppath -> memory , ""       %5ld %5ld %5ld %5ld %5ld %5ld %5ld\\n"" , stats_fill . afill , stats_fill . slant , stats_fill . slant_shallow , stats_fill . sfill , stats_fill . mq_cross , stats_fill . order , stats_fill . slow_order )"		1041300	0					
ANR	1043252	Callee	dmlprintf7		1041300	0					
ANR	1043253	Identifier	dmlprintf7		1041300	0					
ANR	1043254	ArgumentList	ppath -> memory		1041300	1					
ANR	1043255	Argument	ppath -> memory		1041300	0					
ANR	1043256	PtrMemberAccess	ppath -> memory		1041300	0					
ANR	1043257	Identifier	ppath		1041300	0					
ANR	1043258	Identifier	memory		1041300	1					
ANR	1043259	Argument	"""       %5ld %5ld %5ld %5ld %5ld %5ld %5ld\\n"""		1041300	1					
ANR	1043260	PrimaryExpression	"""       %5ld %5ld %5ld %5ld %5ld %5ld %5ld\\n"""		1041300	0					
ANR	1043261	Argument	stats_fill . afill		1041300	2					
ANR	1043262	MemberAccess	stats_fill . afill		1041300	0					
ANR	1043263	Identifier	stats_fill		1041300	0					
ANR	1043264	Identifier	afill		1041300	1					
ANR	1043265	Argument	stats_fill . slant		1041300	3					
ANR	1043266	MemberAccess	stats_fill . slant		1041300	0					
ANR	1043267	Identifier	stats_fill		1041300	0					
ANR	1043268	Identifier	slant		1041300	1					
ANR	1043269	Argument	stats_fill . slant_shallow		1041300	4					
ANR	1043270	MemberAccess	stats_fill . slant_shallow		1041300	0					
ANR	1043271	Identifier	stats_fill		1041300	0					
ANR	1043272	Identifier	slant_shallow		1041300	1					
ANR	1043273	Argument	stats_fill . sfill		1041300	5					
ANR	1043274	MemberAccess	stats_fill . sfill		1041300	0					
ANR	1043275	Identifier	stats_fill		1041300	0					
ANR	1043276	Identifier	sfill		1041300	1					
ANR	1043277	Argument	stats_fill . mq_cross		1041300	6					
ANR	1043278	MemberAccess	stats_fill . mq_cross		1041300	0					
ANR	1043279	Identifier	stats_fill		1041300	0					
ANR	1043280	Identifier	mq_cross		1041300	1					
ANR	1043281	Argument	stats_fill . order		1041300	7					
ANR	1043282	MemberAccess	stats_fill . order		1041300	0					
ANR	1043283	Identifier	stats_fill		1041300	0					
ANR	1043284	Identifier	order		1041300	1					
ANR	1043285	Argument	stats_fill . slow_order		1041300	8					
ANR	1043286	MemberAccess	stats_fill . slow_order		1041300	0					
ANR	1043287	Identifier	stats_fill		1041300	0					
ANR	1043288	Identifier	slow_order		1041300	1					
ANR	1043289	IfStatement	if ( clipping )		1041300	81					
ANR	1043290	Condition	clipping	606:8:24001:24008	1041300	0	True				
ANR	1043291	Identifier	clipping		1041300	0					
ANR	1043292	ExpressionStatement	gx_destroy_clip_device_on_stack ( & cdev )	607:8:24019:24057	1041300	1	True				
ANR	1043293	CallExpression	gx_destroy_clip_device_on_stack ( & cdev )		1041300	0					
ANR	1043294	Callee	gx_destroy_clip_device_on_stack		1041300	0					
ANR	1043295	Identifier	gx_destroy_clip_device_on_stack		1041300	0					
ANR	1043296	ArgumentList	& cdev		1041300	1					
ANR	1043297	Argument	& cdev		1041300	0					
ANR	1043298	UnaryOperationExpression	& cdev		1041300	0					
ANR	1043299	UnaryOperator	&		1041300	0					
ANR	1043300	Identifier	cdev		1041300	1					
ANR	1043301	ReturnStatement	return code ;	608:4:24063:24074	1041300	82	True				
ANR	1043302	Identifier	code		1041300	0					
ANR	1043303	ReturnType	static int		1041300	1					
ANR	1043304	Identifier	gx_general_fill_path		1041300	2					
ANR	1043305	ParameterList	"gx_device * pdev , const gs_gstate * pgs , gx_path * ppath , const gx_fill_params * params , const gx_device_color * pdevc , const gx_clip_path * pcpath"		1041300	3					
ANR	1043306	Parameter	gx_device * pdev	281:21:9860:9875	1041300	0	True				
ANR	1043307	ParameterType	gx_device *		1041300	0					
ANR	1043308	Identifier	pdev		1041300	1					
ANR	1043309	Parameter	const gs_gstate * pgs	281:39:9878:9898	1041300	1	True				
ANR	1043310	ParameterType	const gs_gstate *		1041300	0					
ANR	1043311	Identifier	pgs		1041300	1					
ANR	1043312	Parameter	gx_path * ppath	282:21:9922:9936	1041300	2	True				
ANR	1043313	ParameterType	gx_path *		1041300	0					
ANR	1043314	Identifier	ppath		1041300	1					
ANR	1043315	Parameter	const gx_fill_params * params	282:38:9939:9967	1041300	3	True				
ANR	1043316	ParameterType	const gx_fill_params *		1041300	0					
ANR	1043317	Identifier	params		1041300	1					
ANR	1043318	Parameter	const gx_device_color * pdevc	283:17:9987:10015	1041300	4	True				
ANR	1043319	ParameterType	const gx_device_color *		1041300	0					
ANR	1043320	Identifier	pdevc		1041300	1					
ANR	1043321	Parameter	const gx_clip_path * pcpath	283:48:10018:10044	1041300	5	True				
ANR	1043322	ParameterType	const gx_clip_path *		1041300	0					
ANR	1043323	Identifier	pcpath		1041300	1					
ANR	1043324	CFGEntryNode	ENTRY		1041300		True				
ANR	1043325	CFGExitNode	EXIT		1041300		True				
ANR	1043326	Symbol	clipping		1041300						
ANR	1043327	Symbol	params -> flatness		1041300						
ANR	1043328	Symbol	& rbox		1041300						
ANR	1043329	Symbol	rbox . q		1041300						
ANR	1043330	Symbol	ffpath		1041300						
ANR	1043331	Symbol	* pgs		1041300						
ANR	1043332	Symbol	fo . fill_trap		1041300						
ANR	1043333	Symbol	pdevc		1041300						
ANR	1043334	Symbol	bbox		1041300						
ANR	1043335	Symbol	stats_fill . y_down		1041300						
ANR	1043336	Symbol	sbox . p		1041300						
ANR	1043337	Symbol	sbox . q		1041300						
ANR	1043338	Symbol	get_clipping_box		1041300						
ANR	1043339	Symbol	fo . ymin		1041300						
ANR	1043340	Symbol	rbox . p		1041300						
ANR	1043341	Symbol	& ffpath		1041300						
ANR	1043342	Symbol	gx_fill_edgebuffer_tr_app		1041300						
ANR	1043343	Symbol	sbox . q . x		1041300						
ANR	1043344	Symbol	& fo		1041300						
ANR	1043345	Symbol	sbox . q . y		1041300						
ANR	1043346	Symbol	dev		1041300						
ANR	1043347	Symbol	fixed_ceiling		1041300						
ANR	1043348	Symbol	gx_path_is_rectangular		1041300						
ANR	1043349	Symbol	GS_SCANCONVERTER_DEFAULT_IS_EDGEBUFFER		1041300						
ANR	1043350	Symbol	fill_trapezoid		1041300						
ANR	1043351	Symbol	fo . ymax		1041300						
ANR	1043352	Symbol	save_dev		1041300						
ANR	1043353	Symbol	ibox . p . x		1041300						
ANR	1043354	Symbol	ibox . p . y		1041300						
ANR	1043355	Symbol	& bbox		1041300						
ANR	1043356	Symbol	fixed2int_pixround		1041300						
ANR	1043357	Symbol	params		1041300						
ANR	1043358	Symbol	fill_rectangle		1041300						
ANR	1043359	Symbol	rbox		1041300						
ANR	1043360	Symbol	scanconverter		1041300						
ANR	1043361	Symbol	rbox . p . x		1041300						
ANR	1043362	Symbol	countof		1041300						
ANR	1043363	Symbol	ibox . p		1041300						
ANR	1043364	Symbol	ibox . q		1041300						
ANR	1043365	Symbol	rbox . p . y		1041300						
ANR	1043366	Symbol	lop_is_idempotent		1041300						
ANR	1043367	Symbol	stats_fill . band_fill		1041300						
ANR	1043368	Symbol	stats_fill . slant_shallow		1041300						
ANR	1043369	Symbol	gx_path_copy_reducing		1041300						
ANR	1043370	Symbol	lst . local_windings		1041300						
ANR	1043371	Symbol	bbox . p . y		1041300						
ANR	1043372	Symbol	gx_filter_edgebuffer_tr_app		1041300						
ANR	1043373	Symbol	bbox . p . x		1041300						
ANR	1043374	Symbol	gx_scan_convert_tr_app		1041300						
ANR	1043375	Symbol	* dev		1041300						
ANR	1043376	Symbol	stats_fill . y_up		1041300						
ANR	1043377	Symbol	stats_fill . x_step		1041300						
ANR	1043378	Symbol	is_character		1041300						
ANR	1043379	Symbol	ppath -> subpath_count		1041300						
ANR	1043380	Symbol	adjust . x		1041300						
ANR	1043381	Symbol	adjust . y		1041300						
ANR	1043382	Symbol	& cdev		1041300						
ANR	1043383	Symbol	pco_small_curves		1041300						
ANR	1043384	Symbol	* fill_loop		1041300						
ANR	1043385	Symbol	lst . contour_count		1041300						
ANR	1043386	Symbol	lop		1041300						
ANR	1043387	Symbol	sbox		1041300						
ANR	1043388	Symbol	save_dev -> max_fill_band		1041300						
ANR	1043389	Symbol	stats_fill . iter		1041300						
ANR	1043390	Symbol	gx_filter_edgebuffer_tr		1041300						
ANR	1043391	Symbol	float2fixed		1041300						
ANR	1043392	Symbol	gs_currentcpsimode		1041300						
ANR	1043393	Symbol	max_fill_band		1041300						
ANR	1043394	Symbol	gx_scan_convert_tr		1041300						
ANR	1043395	Symbol	stats_fill . find_y		1041300						
ANR	1043396	Symbol	lst . fo		1041300						
ANR	1043397	Symbol	pgs		1041300						
ANR	1043398	Symbol	pgs -> memory		1041300						
ANR	1043399	Symbol	pcpath		1041300						
ANR	1043400	Symbol	* params		1041300						
ANR	1043401	Symbol	lst . bbox_left		1041300						
ANR	1043402	Symbol	fo . pbox		1041300						
ANR	1043403	Symbol	gx_path_has_curves		1041300						
ANR	1043404	Symbol	fo . fill_by_trapezoids		1041300						
ANR	1043405	Symbol	gx_scan_convert_app		1041300						
ANR	1043406	Symbol	* lst . windings		1041300						
ANR	1043407	Symbol	stats_fill		1041300						
ANR	1043408	Symbol	int2fixed		1041300						
ANR	1043409	Symbol	* pdev		1041300						
ANR	1043410	Symbol	lst . windings		1041300						
ANR	1043411	Symbol	GS_SCANCONVERTER_DEFAULT		1041300						
ANR	1043412	Symbol	gs_alloc_byte_array		1041300						
ANR	1043413	Symbol	stats_fill . afill		1041300						
ANR	1043414	Symbol	fo . adjust_below		1041300						
ANR	1043415	Symbol	stats_fill . sfill		1041300						
ANR	1043416	Symbol	& lst . fo		1041300						
ANR	1043417	Symbol	gx_fill_edgebuffer_tr		1041300						
ANR	1043418	Symbol	color_writes_pure		1041300						
ANR	1043419	Symbol	stats_fill . order		1041300						
ANR	1043420	Symbol	bbox . q . x		1041300						
ANR	1043421	Symbol	fixed2int		1041300						
ANR	1043422	Symbol	bbox . q . y		1041300						
ANR	1043423	Symbol	gx_path_merge_contacting_contours		1041300						
ANR	1043424	Symbol	pdev		1041300						
ANR	1043425	Symbol	pdev -> memory		1041300						
ANR	1043426	Symbol	fill_loop		1041300						
ANR	1043427	Symbol	gs_debug_c		1041300						
ANR	1043428	Symbol	fixed_epsilon		1041300						
ANR	1043429	Symbol	* save_dev		1041300						
ANR	1043430	Symbol	eb		1041300						
ANR	1043431	Symbol	* ppath		1041300						
ANR	1043432	Symbol	pco_accurate		1041300						
ANR	1043433	Symbol	stats_fill . band		1041300						
ANR	1043434	Symbol	sbox . p . x		1041300						
ANR	1043435	Symbol	NULL		1041300						
ANR	1043436	Symbol	sbox . p . y		1041300						
ANR	1043437	Symbol	spot_into_scan_lines		1041300						
ANR	1043438	Symbol	rbox . q . y		1041300						
ANR	1043439	Symbol	rbox . q . x		1041300						
ANR	1043440	Symbol	params -> rule		1041300						
ANR	1043441	Symbol	gx_fill_rectangle_device_rop		1041300						
ANR	1043442	Symbol	fo . adjust_right		1041300						
ANR	1043443	Symbol	& ibox		1041300						
ANR	1043444	Symbol	fo . adjust_left		1041300						
ANR	1043445	Symbol	fo . fixed_flat		1041300						
ANR	1043446	Symbol	fo . dev		1041300						
ANR	1043447	Symbol	ibox . q . y		1041300						
ANR	1043448	Symbol	spot_into_trapezoids		1041300						
ANR	1043449	Symbol	adjust		1041300						
ANR	1043450	Symbol	* lst		1041300						
ANR	1043451	Symbol	params -> adjust		1041300						
ANR	1043452	Symbol	x0		1041300						
ANR	1043453	Symbol	x1		1041300						
ANR	1043454	Symbol	ibox . q . x		1041300						
ANR	1043455	Symbol	pgs -> accurate_curves		1041300						
ANR	1043456	Symbol	dev -> max_fill_band		1041300						
ANR	1043457	Symbol	stats_fill . horiz		1041300						
ANR	1043458	Symbol	fo . rule		1041300						
ANR	1043459	Symbol	code		1041300						
ANR	1043460	Symbol	params -> adjust . x		1041300						
ANR	1043461	Symbol	gx_filter_edgebuffer_app		1041300						
ANR	1043462	Symbol	& eb		1041300						
ANR	1043463	Symbol	gx_fill_edgebuffer		1041300						
ANR	1043464	Symbol	fo		1041300						
ANR	1043465	Symbol	ppath		1041300						
ANR	1043466	Symbol	lst		1041300						
ANR	1043467	Symbol	* ( const fill_options * * ) & lst . fo		1041300						
ANR	1043468	Symbol	gx_filter_edgebuffer		1041300						
ANR	1043469	Symbol	stats_fill . slow_order		1041300						
ANR	1043470	Symbol	fo . adjust_above		1041300						
ANR	1043471	Symbol	is_spotan_device		1041300						
ANR	1043472	Symbol	dev_proc		1041300						
ANR	1043473	Symbol	stats_fill . band_step		1041300						
ANR	1043474	Symbol	big_path		1041300						
ANR	1043475	Symbol	y0		1041300						
ANR	1043476	Symbol	y1		1041300						
ANR	1043477	Symbol	fixed_half		1041300						
ANR	1043478	Symbol	ppath -> memory		1041300						
ANR	1043479	Symbol	add_y_list		1041300						
ANR	1043480	Symbol	lst . bbox_width		1041300						
ANR	1043481	Symbol	gx_scan_convert		1041300						
ANR	1043482	Symbol	pgs -> log_op		1041300						
ANR	1043483	Symbol	bbox . q		1041300						
ANR	1043484	Symbol	& sbox		1041300						
ANR	1043485	Symbol	gx_fill_edgebuffer_app		1041300						
ANR	1043486	Symbol	fixed2float		1041300						
ANR	1043487	Symbol	gx_path__check_curves		1041300						
ANR	1043488	Symbol	stats_fill . slow_x		1041300						
ANR	1043489	Symbol	false		1041300						
ANR	1043490	Symbol	rect_within		1041300						
ANR	1043491	Symbol	stats_fill . mq_cross		1041300						
ANR	1043492	Symbol	pfpath		1041300						
ANR	1043493	Symbol	NO_BAND_MASK		1041300						
ANR	1043494	Symbol	gs_getscanconverter		1041300						
ANR	1043495	Symbol	bbox . p		1041300						
ANR	1043496	Symbol	lst . close_count		1041300						
ANR	1043497	Symbol	stats_fill . fill_alloc		1041300						
ANR	1043498	Symbol	fo . pdevc		1041300						
ANR	1043499	Symbol	fo . fill_rect		1041300						
ANR	1043500	Symbol	ibox		1041300						
ANR	1043501	Symbol	fill_by_trapezoids		1041300						
ANR	1043502	Symbol	& lst		1041300						
ANR	1043503	Symbol	fo . fill_direct		1041300						
ANR	1043504	Symbol	cdev . max_fill_band		1041300						
ANR	1043505	Symbol	stats_fill . fill		1041300						
ANR	1043506	Symbol	fo . is_spotan		1041300						
ANR	1043507	Symbol	GS_SCANCONVERTER_EDGEBUFFER		1041300						
ANR	1043508	Symbol	stats_fill . slant		1041300						
ANR	1043509	Symbol	fo . lop		1041300						
ANR	1043510	Symbol	cdev		1041300						
ANR	1043511	Function	pass_shading_area_through_clip_path_device	611:0:24079:24666							
ANR	1043512	FunctionDef	"pass_shading_area_through_clip_path_device (gx_device * pdev , const gs_gstate * pgs , gx_path * ppath , const gx_fill_params * params , const gx_device_color * pdevc , const gx_clip_path * pcpath)"		1043511	0					
ANR	1043513	CompoundStatement		615:0:24320:24666	1043511	0					
ANR	1043514	IfStatement	if ( pdevc == NULL )		1043511	0					
ANR	1043515	Condition	pdevc == NULL	616:8:24330:24342	1043511	0	True				
ANR	1043516	EqualityExpression	pdevc == NULL		1043511	0		==			
ANR	1043517	Identifier	pdevc		1043511	0					
ANR	1043518	Identifier	NULL		1043511	1					
ANR	1043519	CompoundStatement		3:8:34:79	1043511	1					
ANR	1043520	IdentifierDeclStatement	gx_device_clip * cdev = ( gx_device_clip * ) pdev ;	617:8:24355:24400	1043511	0	True				
ANR	1043521	IdentifierDecl	* cdev = ( gx_device_clip * ) pdev		1043511	0					
ANR	1043522	IdentifierDeclType	gx_device_clip *		1043511	0					
ANR	1043523	Identifier	cdev		1043511	1					
ANR	1043524	AssignmentExpression	* cdev = ( gx_device_clip * ) pdev		1043511	2		=			
ANR	1043525	Identifier	cdev		1043511	0					
ANR	1043526	CastExpression	( gx_device_clip * ) pdev		1043511	1					
ANR	1043527	CastTarget	gx_device_clip *		1043511	0					
ANR	1043528	Identifier	pdev		1043511	1					
ANR	1043529	ReturnStatement	"return dev_proc ( cdev -> target , fill_path ) ( cdev -> target , pgs , ppath , params , pdevc , pcpath ) ;"	619:8:24411:24500	1043511	1	True				
ANR	1043530	CallExpression	"dev_proc ( cdev -> target , fill_path ) ( cdev -> target , pgs , ppath , params , pdevc , pcpath )"		1043511	0					
ANR	1043531	Callee	"dev_proc ( cdev -> target , fill_path )"		1043511	0					
ANR	1043532	CallExpression	"dev_proc ( cdev -> target , fill_path )"		1043511	0					
ANR	1043533	Callee	dev_proc		1043511	0					
ANR	1043534	Identifier	dev_proc		1043511	0					
ANR	1043535	ArgumentList	cdev -> target		1043511	1					
ANR	1043536	Argument	cdev -> target		1043511	0					
ANR	1043537	PtrMemberAccess	cdev -> target		1043511	0					
ANR	1043538	Identifier	cdev		1043511	0					
ANR	1043539	Identifier	target		1043511	1					
ANR	1043540	Argument	fill_path		1043511	1					
ANR	1043541	Identifier	fill_path		1043511	0					
ANR	1043542	ArgumentList	cdev -> target		1043511	1					
ANR	1043543	Argument	cdev -> target		1043511	0					
ANR	1043544	PtrMemberAccess	cdev -> target		1043511	0					
ANR	1043545	Identifier	cdev		1043511	0					
ANR	1043546	Identifier	target		1043511	1					
ANR	1043547	Argument	pgs		1043511	1					
ANR	1043548	Identifier	pgs		1043511	0					
ANR	1043549	Argument	ppath		1043511	2					
ANR	1043550	Identifier	ppath		1043511	0					
ANR	1043551	Argument	params		1043511	3					
ANR	1043552	Identifier	params		1043511	0					
ANR	1043553	Argument	pdevc		1043511	4					
ANR	1043554	Identifier	pdevc		1043511	0					
ANR	1043555	Argument	pcpath		1043511	5					
ANR	1043556	Identifier	pcpath		1043511	0					
ANR	1043557	ReturnStatement	"return gx_default_fill_path ( pdev , pgs , ppath , params , pdevc , pcpath ) ;"	622:4:24596:24664	1043511	1	True				
ANR	1043558	CallExpression	"gx_default_fill_path ( pdev , pgs , ppath , params , pdevc , pcpath )"		1043511	0					
ANR	1043559	Callee	gx_default_fill_path		1043511	0					
ANR	1043560	Identifier	gx_default_fill_path		1043511	0					
ANR	1043561	ArgumentList	pdev		1043511	1					
ANR	1043562	Argument	pdev		1043511	0					
ANR	1043563	Identifier	pdev		1043511	0					
ANR	1043564	Argument	pgs		1043511	1					
ANR	1043565	Identifier	pgs		1043511	0					
ANR	1043566	Argument	ppath		1043511	2					
ANR	1043567	Identifier	ppath		1043511	0					
ANR	1043568	Argument	params		1043511	3					
ANR	1043569	Identifier	params		1043511	0					
ANR	1043570	Argument	pdevc		1043511	4					
ANR	1043571	Identifier	pdevc		1043511	0					
ANR	1043572	Argument	pcpath		1043511	5					
ANR	1043573	Identifier	pcpath		1043511	0					
ANR	1043574	ReturnType	static int		1043511	1					
ANR	1043575	Identifier	pass_shading_area_through_clip_path_device		1043511	2					
ANR	1043576	ParameterList	"gx_device * pdev , const gs_gstate * pgs , gx_path * ppath , const gx_fill_params * params , const gx_device_color * pdevc , const gx_clip_path * pcpath"		1043511	3					
ANR	1043577	Parameter	gx_device * pdev	612:43:24133:24148	1043511	0	True				
ANR	1043578	ParameterType	gx_device *		1043511	0					
ANR	1043579	Identifier	pdev		1043511	1					
ANR	1043580	Parameter	const gs_gstate * pgs	612:61:24151:24171	1043511	1	True				
ANR	1043581	ParameterType	const gs_gstate *		1043511	0					
ANR	1043582	Identifier	pgs		1043511	1					
ANR	1043583	Parameter	gx_path * ppath	613:21:24195:24209	1043511	2	True				
ANR	1043584	ParameterType	gx_path *		1043511	0					
ANR	1043585	Identifier	ppath		1043511	1					
ANR	1043586	Parameter	const gx_fill_params * params	613:38:24212:24240	1043511	3	True				
ANR	1043587	ParameterType	const gx_fill_params *		1043511	0					
ANR	1043588	Identifier	params		1043511	1					
ANR	1043589	Parameter	const gx_device_color * pdevc	614:17:24260:24288	1043511	4	True				
ANR	1043590	ParameterType	const gx_device_color *		1043511	0					
ANR	1043591	Identifier	pdevc		1043511	1					
ANR	1043592	Parameter	const gx_clip_path * pcpath	614:48:24291:24317	1043511	5	True				
ANR	1043593	ParameterType	const gx_clip_path *		1043511	0					
ANR	1043594	Identifier	pcpath		1043511	1					
ANR	1043595	CFGEntryNode	ENTRY		1043511		True				
ANR	1043596	CFGExitNode	EXIT		1043511		True				
ANR	1043597	Symbol	NULL		1043511						
ANR	1043598	Symbol	pdevc		1043511						
ANR	1043599	Symbol	cdev -> target		1043511						
ANR	1043600	Symbol	ppath		1043511						
ANR	1043601	Symbol	params		1043511						
ANR	1043602	Symbol	pdev		1043511						
ANR	1043603	Symbol	* cdev		1043511						
ANR	1043604	Symbol	dev_proc		1043511						
ANR	1043605	Symbol	fill_path		1043511						
ANR	1043606	Symbol	cdev		1043511						
ANR	1043607	Symbol	pgs		1043511						
ANR	1043608	Symbol	pcpath		1043511						
ANR	1043609	Symbol	gx_default_fill_path		1043511						
ANR	1043610	Function	gx_default_fill_path	629:0:24766:29089							
ANR	1043611	FunctionDef	"gx_default_fill_path (gx_device * pdev , const gs_gstate * pgs , gx_path * ppath , const gx_fill_params * params , const gx_device_color * pdevc , const gx_clip_path * pcpath)"		1043610	0					
ANR	1043612	CompoundStatement		633:0:24978:29089	1043610	0					
ANR	1043613	IdentifierDeclStatement	int code = 0 ;	634:4:24984:24996	1043610	0	True				
ANR	1043614	IdentifierDecl	code = 0		1043610	0					
ANR	1043615	IdentifierDeclType	int		1043610	0					
ANR	1043616	Identifier	code		1043610	1					
ANR	1043617	AssignmentExpression	code = 0		1043610	2		=			
ANR	1043618	Identifier	code		1043610	0					
ANR	1043619	PrimaryExpression	0		1043610	1					
ANR	1043620	IfStatement	if ( gx_dc_is_pattern2_color ( pdevc ) || pdevc -> type == & gx_dc_type_data_ht_colored || ( gx_dc_is_pattern1_color ( pdevc ) && gx_pattern_tile_is_clist ( pdevc -> colors . pattern . p_tile ) ) )		1043610	1					
ANR	1043621	Condition	gx_dc_is_pattern2_color ( pdevc ) || pdevc -> type == & gx_dc_type_data_ht_colored || ( gx_dc_is_pattern1_color ( pdevc ) && gx_pattern_tile_is_clist ( pdevc -> colors . pattern . p_tile ) )	636:8:25007:25192	1043610	0	True				
ANR	1043622	OrExpression	gx_dc_is_pattern2_color ( pdevc ) || pdevc -> type == & gx_dc_type_data_ht_colored || ( gx_dc_is_pattern1_color ( pdevc ) && gx_pattern_tile_is_clist ( pdevc -> colors . pattern . p_tile ) )		1043610	0		||			
ANR	1043623	CallExpression	gx_dc_is_pattern2_color ( pdevc )		1043610	0					
ANR	1043624	Callee	gx_dc_is_pattern2_color		1043610	0					
ANR	1043625	Identifier	gx_dc_is_pattern2_color		1043610	0					
ANR	1043626	ArgumentList	pdevc		1043610	1					
ANR	1043627	Argument	pdevc		1043610	0					
ANR	1043628	Identifier	pdevc		1043610	0					
ANR	1043629	OrExpression	pdevc -> type == & gx_dc_type_data_ht_colored || ( gx_dc_is_pattern1_color ( pdevc ) && gx_pattern_tile_is_clist ( pdevc -> colors . pattern . p_tile ) )		1043610	1		||			
ANR	1043630	EqualityExpression	pdevc -> type == & gx_dc_type_data_ht_colored		1043610	0		==			
ANR	1043631	PtrMemberAccess	pdevc -> type		1043610	0					
ANR	1043632	Identifier	pdevc		1043610	0					
ANR	1043633	Identifier	type		1043610	1					
ANR	1043634	UnaryOperationExpression	& gx_dc_type_data_ht_colored		1043610	1					
ANR	1043635	UnaryOperator	&		1043610	0					
ANR	1043636	Identifier	gx_dc_type_data_ht_colored		1043610	1					
ANR	1043637	AndExpression	gx_dc_is_pattern1_color ( pdevc ) && gx_pattern_tile_is_clist ( pdevc -> colors . pattern . p_tile )		1043610	1		&&			
ANR	1043638	CallExpression	gx_dc_is_pattern1_color ( pdevc )		1043610	0					
ANR	1043639	Callee	gx_dc_is_pattern1_color		1043610	0					
ANR	1043640	Identifier	gx_dc_is_pattern1_color		1043610	0					
ANR	1043641	ArgumentList	pdevc		1043610	1					
ANR	1043642	Argument	pdevc		1043610	0					
ANR	1043643	Identifier	pdevc		1043610	0					
ANR	1043644	CallExpression	gx_pattern_tile_is_clist ( pdevc -> colors . pattern . p_tile )		1043610	1					
ANR	1043645	Callee	gx_pattern_tile_is_clist		1043610	0					
ANR	1043646	Identifier	gx_pattern_tile_is_clist		1043610	0					
ANR	1043647	ArgumentList	pdevc -> colors . pattern . p_tile		1043610	1					
ANR	1043648	Argument	pdevc -> colors . pattern . p_tile		1043610	0					
ANR	1043649	MemberAccess	pdevc -> colors . pattern . p_tile		1043610	0					
ANR	1043650	MemberAccess	pdevc -> colors . pattern		1043610	0					
ANR	1043651	PtrMemberAccess	pdevc -> colors		1043610	0					
ANR	1043652	Identifier	pdevc		1043610	0					
ANR	1043653	Identifier	colors		1043610	1					
ANR	1043654	Identifier	pattern		1043610	1					
ANR	1043655	Identifier	p_tile		1043610	1					
ANR	1043656	CompoundStatement		24:8:1262:1303	1043610	1					
ANR	1043657	IdentifierDeclStatement	"gx_clip_path cpath_intersection , cpath_with_shading_bbox ;"	654:8:26128:26184	1043610	0	True				
ANR	1043658	IdentifierDecl	cpath_intersection		1043610	0					
ANR	1043659	IdentifierDeclType	gx_clip_path		1043610	0					
ANR	1043660	Identifier	cpath_intersection		1043610	1					
ANR	1043661	IdentifierDecl	cpath_with_shading_bbox		1043610	1					
ANR	1043662	IdentifierDeclType	gx_clip_path		1043610	0					
ANR	1043663	Identifier	cpath_with_shading_bbox		1043610	1					
ANR	1043664	IdentifierDeclStatement	"const gx_clip_path * pcpath1 , * pcpath2 ;"	655:8:26194:26231	1043610	1	True				
ANR	1043665	IdentifierDecl	* pcpath1		1043610	0					
ANR	1043666	IdentifierDeclType	const gx_clip_path *		1043610	0					
ANR	1043667	Identifier	pcpath1		1043610	1					
ANR	1043668	IdentifierDecl	* pcpath2		1043610	1					
ANR	1043669	IdentifierDeclType	const gx_clip_path *		1043610	0					
ANR	1043670	Identifier	pcpath2		1043610	1					
ANR	1043671	IdentifierDeclStatement	gs_gstate * pgs_noconst = ( gs_gstate * ) pgs ;	656:8:26241:26282	1043610	2	True				
ANR	1043672	IdentifierDecl	* pgs_noconst = ( gs_gstate * ) pgs		1043610	0					
ANR	1043673	IdentifierDeclType	gs_gstate *		1043610	0					
ANR	1043674	Identifier	pgs_noconst		1043610	1					
ANR	1043675	AssignmentExpression	* pgs_noconst = ( gs_gstate * ) pgs		1043610	2		=			
ANR	1043676	Identifier	pgs_noconst		1043610	0					
ANR	1043677	CastExpression	( gs_gstate * ) pgs		1043610	1					
ANR	1043678	CastTarget	gs_gstate *		1043610	0					
ANR	1043679	Identifier	pgs		1043610	1					
ANR	1043680	IfStatement	if ( ppath != NULL )		1043610	3					
ANR	1043681	Condition	ppath != NULL	658:12:26316:26328	1043610	0	True				
ANR	1043682	EqualityExpression	ppath != NULL		1043610	0		!=			
ANR	1043683	Identifier	ppath		1043610	0					
ANR	1043684	Identifier	NULL		1043610	1					
ANR	1043685	CompoundStatement		26:27:1352:1352	1043610	1					
ANR	1043686	ExpressionStatement	"code = gx_cpath_init_local_shared_nested ( & cpath_intersection , pcpath , pdev -> memory , 1 )"	659:12:26345:26431	1043610	0	True				
ANR	1043687	AssignmentExpression	"code = gx_cpath_init_local_shared_nested ( & cpath_intersection , pcpath , pdev -> memory , 1 )"		1043610	0		=			
ANR	1043688	Identifier	code		1043610	0					
ANR	1043689	CallExpression	"gx_cpath_init_local_shared_nested ( & cpath_intersection , pcpath , pdev -> memory , 1 )"		1043610	1					
ANR	1043690	Callee	gx_cpath_init_local_shared_nested		1043610	0					
ANR	1043691	Identifier	gx_cpath_init_local_shared_nested		1043610	0					
ANR	1043692	ArgumentList	& cpath_intersection		1043610	1					
ANR	1043693	Argument	& cpath_intersection		1043610	0					
ANR	1043694	UnaryOperationExpression	& cpath_intersection		1043610	0					
ANR	1043695	UnaryOperator	&		1043610	0					
ANR	1043696	Identifier	cpath_intersection		1043610	1					
ANR	1043697	Argument	pcpath		1043610	1					
ANR	1043698	Identifier	pcpath		1043610	0					
ANR	1043699	Argument	pdev -> memory		1043610	2					
ANR	1043700	PtrMemberAccess	pdev -> memory		1043610	0					
ANR	1043701	Identifier	pdev		1043610	0					
ANR	1043702	Identifier	memory		1043610	1					
ANR	1043703	Argument	1		1043610	3					
ANR	1043704	PrimaryExpression	1		1043610	0					
ANR	1043705	IfStatement	if ( code < 0 )		1043610	1					
ANR	1043706	Condition	code < 0	660:16:26449:26456	1043610	0	True				
ANR	1043707	RelationalExpression	code < 0		1043610	0		<			
ANR	1043708	Identifier	code		1043610	0					
ANR	1043709	PrimaryExpression	0		1043610	1					
ANR	1043710	ReturnStatement	return code ;	661:16:26475:26486	1043610	1	True				
ANR	1043711	Identifier	code		1043610	0					
ANR	1043712	IfStatement	if ( pcpath == NULL )		1043610	2					
ANR	1043713	Condition	pcpath == NULL	662:16:26504:26517	1043610	0	True				
ANR	1043714	EqualityExpression	pcpath == NULL		1043610	0		==			
ANR	1043715	Identifier	pcpath		1043610	0					
ANR	1043716	Identifier	NULL		1043610	1					
ANR	1043717	CompoundStatement		31:16:1559:1582	1043610	1					
ANR	1043718	IdentifierDeclStatement	gs_fixed_rect clip_box1 ;	663:16:26538:26561	1043610	0	True				
ANR	1043719	IdentifierDecl	clip_box1		1043610	0					
ANR	1043720	IdentifierDeclType	gs_fixed_rect		1043610	0					
ANR	1043721	Identifier	clip_box1		1043610	1					
ANR	1043722	ExpressionStatement	"( * dev_proc ( pdev , get_clipping_box ) ) ( pdev , & clip_box1 )"	665:16:26580:26634	1043610	1	True				
ANR	1043723	CallExpression	"( * dev_proc ( pdev , get_clipping_box ) ) ( pdev , & clip_box1 )"		1043610	0					
ANR	1043724	Callee	"* dev_proc ( pdev , get_clipping_box )"		1043610	0					
ANR	1043725	UnaryOperationExpression	"* dev_proc ( pdev , get_clipping_box )"		1043610	0					
ANR	1043726	UnaryOperator	*		1043610	0					
ANR	1043727	CallExpression	"dev_proc ( pdev , get_clipping_box )"		1043610	1					
ANR	1043728	Callee	dev_proc		1043610	0					
ANR	1043729	Identifier	dev_proc		1043610	0					
ANR	1043730	ArgumentList	pdev		1043610	1					
ANR	1043731	Argument	pdev		1043610	0					
ANR	1043732	Identifier	pdev		1043610	0					
ANR	1043733	Argument	get_clipping_box		1043610	1					
ANR	1043734	Identifier	get_clipping_box		1043610	0					
ANR	1043735	ArgumentList	pdev		1043610	1					
ANR	1043736	Argument	pdev		1043610	0					
ANR	1043737	Identifier	pdev		1043610	0					
ANR	1043738	Argument	& clip_box1		1043610	1					
ANR	1043739	UnaryOperationExpression	& clip_box1		1043610	0					
ANR	1043740	UnaryOperator	&		1043610	0					
ANR	1043741	Identifier	clip_box1		1043610	1					
ANR	1043742	ExpressionStatement	"code = gx_cpath_from_rectangle ( & cpath_intersection , & clip_box1 )"	666:16:26652:26715	1043610	2	True				
ANR	1043743	AssignmentExpression	"code = gx_cpath_from_rectangle ( & cpath_intersection , & clip_box1 )"		1043610	0		=			
ANR	1043744	Identifier	code		1043610	0					
ANR	1043745	CallExpression	"gx_cpath_from_rectangle ( & cpath_intersection , & clip_box1 )"		1043610	1					
ANR	1043746	Callee	gx_cpath_from_rectangle		1043610	0					
ANR	1043747	Identifier	gx_cpath_from_rectangle		1043610	0					
ANR	1043748	ArgumentList	& cpath_intersection		1043610	1					
ANR	1043749	Argument	& cpath_intersection		1043610	0					
ANR	1043750	UnaryOperationExpression	& cpath_intersection		1043610	0					
ANR	1043751	UnaryOperator	&		1043610	0					
ANR	1043752	Identifier	cpath_intersection		1043610	1					
ANR	1043753	Argument	& clip_box1		1043610	1					
ANR	1043754	UnaryOperationExpression	& clip_box1		1043610	0					
ANR	1043755	UnaryOperator	&		1043610	0					
ANR	1043756	Identifier	clip_box1		1043610	1					
ANR	1043757	IfStatement	if ( code >= 0 )		1043610	3					
ANR	1043758	Condition	code >= 0	668:16:26747:26755	1043610	0	True				
ANR	1043759	RelationalExpression	code >= 0		1043610	0		>=			
ANR	1043760	Identifier	code		1043610	0					
ANR	1043761	PrimaryExpression	0		1043610	1					
ANR	1043762	ExpressionStatement	"code = gx_cpath_intersect_with_params ( & cpath_intersection , ppath , params -> rule , pgs_noconst , params )"	669:16:26774:26898	1043610	1	True				
ANR	1043763	AssignmentExpression	"code = gx_cpath_intersect_with_params ( & cpath_intersection , ppath , params -> rule , pgs_noconst , params )"		1043610	0		=			
ANR	1043764	Identifier	code		1043610	0					
ANR	1043765	CallExpression	"gx_cpath_intersect_with_params ( & cpath_intersection , ppath , params -> rule , pgs_noconst , params )"		1043610	1					
ANR	1043766	Callee	gx_cpath_intersect_with_params		1043610	0					
ANR	1043767	Identifier	gx_cpath_intersect_with_params		1043610	0					
ANR	1043768	ArgumentList	& cpath_intersection		1043610	1					
ANR	1043769	Argument	& cpath_intersection		1043610	0					
ANR	1043770	UnaryOperationExpression	& cpath_intersection		1043610	0					
ANR	1043771	UnaryOperator	&		1043610	0					
ANR	1043772	Identifier	cpath_intersection		1043610	1					
ANR	1043773	Argument	ppath		1043610	1					
ANR	1043774	Identifier	ppath		1043610	0					
ANR	1043775	Argument	params -> rule		1043610	2					
ANR	1043776	PtrMemberAccess	params -> rule		1043610	0					
ANR	1043777	Identifier	params		1043610	0					
ANR	1043778	Identifier	rule		1043610	1					
ANR	1043779	Argument	pgs_noconst		1043610	3					
ANR	1043780	Identifier	pgs_noconst		1043610	0					
ANR	1043781	Argument	params		1043610	4					
ANR	1043782	Identifier	params		1043610	0					
ANR	1043783	ExpressionStatement	pcpath1 = & cpath_intersection	671:12:26912:26941	1043610	4	True				
ANR	1043784	AssignmentExpression	pcpath1 = & cpath_intersection		1043610	0		=			
ANR	1043785	Identifier	pcpath1		1043610	0					
ANR	1043786	UnaryOperationExpression	& cpath_intersection		1043610	1					
ANR	1043787	UnaryOperator	&		1043610	0					
ANR	1043788	Identifier	cpath_intersection		1043610	1					
ANR	1043789	ElseStatement	else		1043610	0					
ANR	1043790	ExpressionStatement	pcpath1 = pcpath	673:12:26970:26986	1043610	0	True				
ANR	1043791	AssignmentExpression	pcpath1 = pcpath		1043610	0		=			
ANR	1043792	Identifier	pcpath1		1043610	0					
ANR	1043793	Identifier	pcpath		1043610	1					
ANR	1043794	ExpressionStatement	pcpath2 = pcpath1	674:8:26996:27013	1043610	4	True				
ANR	1043795	AssignmentExpression	pcpath2 = pcpath1		1043610	0		=			
ANR	1043796	Identifier	pcpath2		1043610	0					
ANR	1043797	Identifier	pcpath1		1043610	1					
ANR	1043798	IfStatement	if ( code >= 0 )		1043610	5					
ANR	1043799	Condition	code >= 0	675:12:27027:27035	1043610	0	True				
ANR	1043800	RelationalExpression	code >= 0		1043610	0		>=			
ANR	1043801	Identifier	code		1043610	0					
ANR	1043802	PrimaryExpression	0		1043610	1					
ANR	1043803	ExpressionStatement	"code = gx_dc_pattern2_clip_with_bbox ( pdevc , pdev , & cpath_with_shading_bbox , & pcpath1 )"	676:12:27050:27135	1043610	1	True				
ANR	1043804	AssignmentExpression	"code = gx_dc_pattern2_clip_with_bbox ( pdevc , pdev , & cpath_with_shading_bbox , & pcpath1 )"		1043610	0		=			
ANR	1043805	Identifier	code		1043610	0					
ANR	1043806	CallExpression	"gx_dc_pattern2_clip_with_bbox ( pdevc , pdev , & cpath_with_shading_bbox , & pcpath1 )"		1043610	1					
ANR	1043807	Callee	gx_dc_pattern2_clip_with_bbox		1043610	0					
ANR	1043808	Identifier	gx_dc_pattern2_clip_with_bbox		1043610	0					
ANR	1043809	ArgumentList	pdevc		1043610	1					
ANR	1043810	Argument	pdevc		1043610	0					
ANR	1043811	Identifier	pdevc		1043610	0					
ANR	1043812	Argument	pdev		1043610	1					
ANR	1043813	Identifier	pdev		1043610	0					
ANR	1043814	Argument	& cpath_with_shading_bbox		1043610	2					
ANR	1043815	UnaryOperationExpression	& cpath_with_shading_bbox		1043610	0					
ANR	1043816	UnaryOperator	&		1043610	0					
ANR	1043817	Identifier	cpath_with_shading_bbox		1043610	1					
ANR	1043818	Argument	& pcpath1		1043610	3					
ANR	1043819	UnaryOperationExpression	& pcpath1		1043610	0					
ANR	1043820	UnaryOperator	&		1043610	0					
ANR	1043821	Identifier	pcpath1		1043610	1					
ANR	1043822	IfStatement	if ( code >= 0 )		1043610	6					
ANR	1043823	Condition	code >= 0	678:12:27173:27181	1043610	0	True				
ANR	1043824	RelationalExpression	code >= 0		1043610	0		>=			
ANR	1043825	Identifier	code		1043610	0					
ANR	1043826	PrimaryExpression	0		1043610	1					
ANR	1043827	CompoundStatement		51:12:2357:2376	1043610	1					
ANR	1043828	IdentifierDeclStatement	gs_fixed_rect clip_box ;	679:12:27198:27220	1043610	0	True				
ANR	1043829	IdentifierDecl	clip_box		1043610	0					
ANR	1043830	IdentifierDeclType	gs_fixed_rect		1043610	0					
ANR	1043831	Identifier	clip_box		1043610	1					
ANR	1043832	IdentifierDeclStatement	gs_int_rect cb ;	680:12:27234:27248	1043610	1	True				
ANR	1043833	IdentifierDecl	cb		1043610	0					
ANR	1043834	IdentifierDeclType	gs_int_rect		1043610	0					
ANR	1043835	Identifier	cb		1043610	1					
ANR	1043836	IdentifierDeclStatement	const gx_rop_source_t * rs = NULL ;	681:12:27262:27294	1043610	2	True				
ANR	1043837	IdentifierDecl	* rs = NULL		1043610	0					
ANR	1043838	IdentifierDeclType	const gx_rop_source_t *		1043610	0					
ANR	1043839	Identifier	rs		1043610	1					
ANR	1043840	AssignmentExpression	* rs = NULL		1043610	2		=			
ANR	1043841	Identifier	NULL		1043610	0					
ANR	1043842	Identifier	NULL		1043610	1					
ANR	1043843	IdentifierDeclStatement	gx_device * dev ;	682:12:27308:27322	1043610	3	True				
ANR	1043844	IdentifierDecl	* dev		1043610	0					
ANR	1043845	IdentifierDeclType	gx_device *		1043610	0					
ANR	1043846	Identifier	dev		1043610	1					
ANR	1043847	IdentifierDeclStatement	gx_device_clip cdev ;	683:12:27336:27355	1043610	4	True				
ANR	1043848	IdentifierDecl	cdev		1043610	0					
ANR	1043849	IdentifierDeclType	gx_device_clip		1043610	0					
ANR	1043850	Identifier	cdev		1043610	1					
ANR	1043851	ExpressionStatement	"gx_cpath_outer_box ( pcpath1 , & clip_box )"	685:12:27370:27408	1043610	5	True				
ANR	1043852	CallExpression	"gx_cpath_outer_box ( pcpath1 , & clip_box )"		1043610	0					
ANR	1043853	Callee	gx_cpath_outer_box		1043610	0					
ANR	1043854	Identifier	gx_cpath_outer_box		1043610	0					
ANR	1043855	ArgumentList	pcpath1		1043610	1					
ANR	1043856	Argument	pcpath1		1043610	0					
ANR	1043857	Identifier	pcpath1		1043610	0					
ANR	1043858	Argument	& clip_box		1043610	1					
ANR	1043859	UnaryOperationExpression	& clip_box		1043610	0					
ANR	1043860	UnaryOperator	&		1043610	0					
ANR	1043861	Identifier	clip_box		1043610	1					
ANR	1043862	ExpressionStatement	cb . p . x = fixed2int_pixround ( clip_box . p . x )	686:12:27422:27463	1043610	6	True				
ANR	1043863	AssignmentExpression	cb . p . x = fixed2int_pixround ( clip_box . p . x )		1043610	0		=			
ANR	1043864	MemberAccess	cb . p . x		1043610	0					
ANR	1043865	MemberAccess	cb . p		1043610	0					
ANR	1043866	Identifier	cb		1043610	0					
ANR	1043867	Identifier	p		1043610	1					
ANR	1043868	Identifier	x		1043610	1					
ANR	1043869	CallExpression	fixed2int_pixround ( clip_box . p . x )		1043610	1					
ANR	1043870	Callee	fixed2int_pixround		1043610	0					
ANR	1043871	Identifier	fixed2int_pixround		1043610	0					
ANR	1043872	ArgumentList	clip_box . p . x		1043610	1					
ANR	1043873	Argument	clip_box . p . x		1043610	0					
ANR	1043874	MemberAccess	clip_box . p . x		1043610	0					
ANR	1043875	MemberAccess	clip_box . p		1043610	0					
ANR	1043876	Identifier	clip_box		1043610	0					
ANR	1043877	Identifier	p		1043610	1					
ANR	1043878	Identifier	x		1043610	1					
ANR	1043879	ExpressionStatement	cb . p . y = fixed2int_pixround ( clip_box . p . y )	687:12:27477:27518	1043610	7	True				
ANR	1043880	AssignmentExpression	cb . p . y = fixed2int_pixround ( clip_box . p . y )		1043610	0		=			
ANR	1043881	MemberAccess	cb . p . y		1043610	0					
ANR	1043882	MemberAccess	cb . p		1043610	0					
ANR	1043883	Identifier	cb		1043610	0					
ANR	1043884	Identifier	p		1043610	1					
ANR	1043885	Identifier	y		1043610	1					
ANR	1043886	CallExpression	fixed2int_pixround ( clip_box . p . y )		1043610	1					
ANR	1043887	Callee	fixed2int_pixround		1043610	0					
ANR	1043888	Identifier	fixed2int_pixround		1043610	0					
ANR	1043889	ArgumentList	clip_box . p . y		1043610	1					
ANR	1043890	Argument	clip_box . p . y		1043610	0					
ANR	1043891	MemberAccess	clip_box . p . y		1043610	0					
ANR	1043892	MemberAccess	clip_box . p		1043610	0					
ANR	1043893	Identifier	clip_box		1043610	0					
ANR	1043894	Identifier	p		1043610	1					
ANR	1043895	Identifier	y		1043610	1					
ANR	1043896	ExpressionStatement	cb . q . x = fixed2int_pixround ( clip_box . q . x )	688:12:27532:27573	1043610	8	True				
ANR	1043897	AssignmentExpression	cb . q . x = fixed2int_pixround ( clip_box . q . x )		1043610	0		=			
ANR	1043898	MemberAccess	cb . q . x		1043610	0					
ANR	1043899	MemberAccess	cb . q		1043610	0					
ANR	1043900	Identifier	cb		1043610	0					
ANR	1043901	Identifier	q		1043610	1					
ANR	1043902	Identifier	x		1043610	1					
ANR	1043903	CallExpression	fixed2int_pixround ( clip_box . q . x )		1043610	1					
ANR	1043904	Callee	fixed2int_pixround		1043610	0					
ANR	1043905	Identifier	fixed2int_pixround		1043610	0					
ANR	1043906	ArgumentList	clip_box . q . x		1043610	1					
ANR	1043907	Argument	clip_box . q . x		1043610	0					
ANR	1043908	MemberAccess	clip_box . q . x		1043610	0					
ANR	1043909	MemberAccess	clip_box . q		1043610	0					
ANR	1043910	Identifier	clip_box		1043610	0					
ANR	1043911	Identifier	q		1043610	1					
ANR	1043912	Identifier	x		1043610	1					
ANR	1043913	ExpressionStatement	cb . q . y = fixed2int_pixround ( clip_box . q . y )	689:12:27587:27628	1043610	9	True				
ANR	1043914	AssignmentExpression	cb . q . y = fixed2int_pixround ( clip_box . q . y )		1043610	0		=			
ANR	1043915	MemberAccess	cb . q . y		1043610	0					
ANR	1043916	MemberAccess	cb . q		1043610	0					
ANR	1043917	Identifier	cb		1043610	0					
ANR	1043918	Identifier	q		1043610	1					
ANR	1043919	Identifier	y		1043610	1					
ANR	1043920	CallExpression	fixed2int_pixround ( clip_box . q . y )		1043610	1					
ANR	1043921	Callee	fixed2int_pixround		1043610	0					
ANR	1043922	Identifier	fixed2int_pixround		1043610	0					
ANR	1043923	ArgumentList	clip_box . q . y		1043610	1					
ANR	1043924	Argument	clip_box . q . y		1043610	0					
ANR	1043925	MemberAccess	clip_box . q . y		1043610	0					
ANR	1043926	MemberAccess	clip_box . q		1043610	0					
ANR	1043927	Identifier	clip_box		1043610	0					
ANR	1043928	Identifier	q		1043610	1					
ANR	1043929	Identifier	y		1043610	1					
ANR	1043930	IfStatement	"if ( gx_dc_is_pattern2_color ( pdevc ) && ( * dev_proc ( pdev , dev_spec_op ) ) ( pdev , gxdso_pattern_handles_clip_path , NULL , 0 ) > 0 )"		1043610	10					
ANR	1043931	Condition	"gx_dc_is_pattern2_color ( pdevc ) && ( * dev_proc ( pdev , dev_spec_op ) ) ( pdev , gxdso_pattern_handles_clip_path , NULL , 0 ) > 0"	690:16:27646:27806	1043610	0	True				
ANR	1043932	AndExpression	"gx_dc_is_pattern2_color ( pdevc ) && ( * dev_proc ( pdev , dev_spec_op ) ) ( pdev , gxdso_pattern_handles_clip_path , NULL , 0 ) > 0"		1043610	0		&&			
ANR	1043933	CallExpression	gx_dc_is_pattern2_color ( pdevc )		1043610	0					
ANR	1043934	Callee	gx_dc_is_pattern2_color		1043610	0					
ANR	1043935	Identifier	gx_dc_is_pattern2_color		1043610	0					
ANR	1043936	ArgumentList	pdevc		1043610	1					
ANR	1043937	Argument	pdevc		1043610	0					
ANR	1043938	Identifier	pdevc		1043610	0					
ANR	1043939	RelationalExpression	"( * dev_proc ( pdev , dev_spec_op ) ) ( pdev , gxdso_pattern_handles_clip_path , NULL , 0 ) > 0"		1043610	1		>			
ANR	1043940	CallExpression	"( * dev_proc ( pdev , dev_spec_op ) ) ( pdev , gxdso_pattern_handles_clip_path , NULL , 0 )"		1043610	0					
ANR	1043941	Callee	"* dev_proc ( pdev , dev_spec_op )"		1043610	0					
ANR	1043942	UnaryOperationExpression	"* dev_proc ( pdev , dev_spec_op )"		1043610	0					
ANR	1043943	UnaryOperator	*		1043610	0					
ANR	1043944	CallExpression	"dev_proc ( pdev , dev_spec_op )"		1043610	1					
ANR	1043945	Callee	dev_proc		1043610	0					
ANR	1043946	Identifier	dev_proc		1043610	0					
ANR	1043947	ArgumentList	pdev		1043610	1					
ANR	1043948	Argument	pdev		1043610	0					
ANR	1043949	Identifier	pdev		1043610	0					
ANR	1043950	Argument	dev_spec_op		1043610	1					
ANR	1043951	Identifier	dev_spec_op		1043610	0					
ANR	1043952	ArgumentList	pdev		1043610	1					
ANR	1043953	Argument	pdev		1043610	0					
ANR	1043954	Identifier	pdev		1043610	0					
ANR	1043955	Argument	gxdso_pattern_handles_clip_path		1043610	1					
ANR	1043956	Identifier	gxdso_pattern_handles_clip_path		1043610	0					
ANR	1043957	Argument	NULL		1043610	2					
ANR	1043958	Identifier	NULL		1043610	0					
ANR	1043959	Argument	0		1043610	3					
ANR	1043960	PrimaryExpression	0		1043610	0					
ANR	1043961	PrimaryExpression	0		1043610	1					
ANR	1043962	CompoundStatement		60:72:2830:2830	1043610	1					
ANR	1043963	ExpressionStatement	"code = ( * dev_proc ( pdev , fill_path ) ) ( pdev , pgs , ppath , params , NULL , pcpath1 )"	696:16:28033:28109	1043610	0	True				
ANR	1043964	AssignmentExpression	"code = ( * dev_proc ( pdev , fill_path ) ) ( pdev , pgs , ppath , params , NULL , pcpath1 )"		1043610	0		=			
ANR	1043965	Identifier	code		1043610	0					
ANR	1043966	CallExpression	"( * dev_proc ( pdev , fill_path ) ) ( pdev , pgs , ppath , params , NULL , pcpath1 )"		1043610	1					
ANR	1043967	Callee	"* dev_proc ( pdev , fill_path )"		1043610	0					
ANR	1043968	UnaryOperationExpression	"* dev_proc ( pdev , fill_path )"		1043610	0					
ANR	1043969	UnaryOperator	*		1043610	0					
ANR	1043970	CallExpression	"dev_proc ( pdev , fill_path )"		1043610	1					
ANR	1043971	Callee	dev_proc		1043610	0					
ANR	1043972	Identifier	dev_proc		1043610	0					
ANR	1043973	ArgumentList	pdev		1043610	1					
ANR	1043974	Argument	pdev		1043610	0					
ANR	1043975	Identifier	pdev		1043610	0					
ANR	1043976	Argument	fill_path		1043610	1					
ANR	1043977	Identifier	fill_path		1043610	0					
ANR	1043978	ArgumentList	pdev		1043610	1					
ANR	1043979	Argument	pdev		1043610	0					
ANR	1043980	Identifier	pdev		1043610	0					
ANR	1043981	Argument	pgs		1043610	1					
ANR	1043982	Identifier	pgs		1043610	0					
ANR	1043983	Argument	ppath		1043610	2					
ANR	1043984	Identifier	ppath		1043610	0					
ANR	1043985	Argument	params		1043610	3					
ANR	1043986	Identifier	params		1043610	0					
ANR	1043987	Argument	NULL		1043610	4					
ANR	1043988	Identifier	NULL		1043610	0					
ANR	1043989	Argument	pcpath1		1043610	5					
ANR	1043990	Identifier	pcpath1		1043610	0					
ANR	1043991	ExpressionStatement	dev = pdev	697:16:28127:28137	1043610	1	True				
ANR	1043992	AssignmentExpression	dev = pdev		1043610	0		=			
ANR	1043993	Identifier	dev		1043610	0					
ANR	1043994	Identifier	pdev		1043610	1					
ANR	1043995	ElseStatement	else		1043610	0					
ANR	1043996	CompoundStatement		66:19:3179:3179	1043610	0					
ANR	1043997	ExpressionStatement	"gx_make_clip_device_on_stack ( & cdev , pcpath1 , pdev )"	699:16:28176:28226	1043610	0	True				
ANR	1043998	CallExpression	"gx_make_clip_device_on_stack ( & cdev , pcpath1 , pdev )"		1043610	0					
ANR	1043999	Callee	gx_make_clip_device_on_stack		1043610	0					
ANR	1044000	Identifier	gx_make_clip_device_on_stack		1043610	0					
ANR	1044001	ArgumentList	& cdev		1043610	1					
ANR	1044002	Argument	& cdev		1043610	0					
ANR	1044003	UnaryOperationExpression	& cdev		1043610	0					
ANR	1044004	UnaryOperator	&		1043610	0					
ANR	1044005	Identifier	cdev		1043610	1					
ANR	1044006	Argument	pcpath1		1043610	1					
ANR	1044007	Identifier	pcpath1		1043610	0					
ANR	1044008	Argument	pdev		1043610	2					
ANR	1044009	Identifier	pdev		1043610	0					
ANR	1044010	ExpressionStatement	dev = ( gx_device * ) & cdev	700:16:28244:28268	1043610	1	True				
ANR	1044011	AssignmentExpression	dev = ( gx_device * ) & cdev		1043610	0		=			
ANR	1044012	Identifier	dev		1043610	0					
ANR	1044013	CastExpression	( gx_device * ) & cdev		1043610	1					
ANR	1044014	CastTarget	gx_device *		1043610	0					
ANR	1044015	UnaryOperationExpression	& cdev		1043610	1					
ANR	1044016	UnaryOperator	&		1043610	0					
ANR	1044017	Identifier	cdev		1043610	1					
ANR	1044018	IfStatement	"if ( ( * dev_proc ( pdev , dev_spec_op ) ) ( pdev , gxdso_pattern_shading_area , NULL , 0 ) > 0 )"		1043610	2					
ANR	1044019	Condition	"( * dev_proc ( pdev , dev_spec_op ) ) ( pdev , gxdso_pattern_shading_area , NULL , 0 ) > 0"	701:20:28290:28390	1043610	0	True				
ANR	1044020	RelationalExpression	"( * dev_proc ( pdev , dev_spec_op ) ) ( pdev , gxdso_pattern_shading_area , NULL , 0 ) > 0"		1043610	0		>			
ANR	1044021	CallExpression	"( * dev_proc ( pdev , dev_spec_op ) ) ( pdev , gxdso_pattern_shading_area , NULL , 0 )"		1043610	0					
ANR	1044022	Callee	"* dev_proc ( pdev , dev_spec_op )"		1043610	0					
ANR	1044023	UnaryOperationExpression	"* dev_proc ( pdev , dev_spec_op )"		1043610	0					
ANR	1044024	UnaryOperator	*		1043610	0					
ANR	1044025	CallExpression	"dev_proc ( pdev , dev_spec_op )"		1043610	1					
ANR	1044026	Callee	dev_proc		1043610	0					
ANR	1044027	Identifier	dev_proc		1043610	0					
ANR	1044028	ArgumentList	pdev		1043610	1					
ANR	1044029	Argument	pdev		1043610	0					
ANR	1044030	Identifier	pdev		1043610	0					
ANR	1044031	Argument	dev_spec_op		1043610	1					
ANR	1044032	Identifier	dev_spec_op		1043610	0					
ANR	1044033	ArgumentList	pdev		1043610	1					
ANR	1044034	Argument	pdev		1043610	0					
ANR	1044035	Identifier	pdev		1043610	0					
ANR	1044036	Argument	gxdso_pattern_shading_area		1043610	1					
ANR	1044037	Identifier	gxdso_pattern_shading_area		1043610	0					
ANR	1044038	Argument	NULL		1043610	2					
ANR	1044039	Identifier	NULL		1043610	0					
ANR	1044040	Argument	0		1043610	3					
ANR	1044041	PrimaryExpression	0		1043610	0					
ANR	1044042	PrimaryExpression	0		1043610	1					
ANR	1044043	ExpressionStatement	"set_dev_proc ( & cdev , fill_path , pass_shading_area_through_clip_path_device )"	703:20:28413:28487	1043610	1	True				
ANR	1044044	CallExpression	"set_dev_proc ( & cdev , fill_path , pass_shading_area_through_clip_path_device )"		1043610	0					
ANR	1044045	Callee	set_dev_proc		1043610	0					
ANR	1044046	Identifier	set_dev_proc		1043610	0					
ANR	1044047	ArgumentList	& cdev		1043610	1					
ANR	1044048	Argument	& cdev		1043610	0					
ANR	1044049	UnaryOperationExpression	& cdev		1043610	0					
ANR	1044050	UnaryOperator	&		1043610	0					
ANR	1044051	Identifier	cdev		1043610	1					
ANR	1044052	Argument	fill_path		1043610	1					
ANR	1044053	Identifier	fill_path		1043610	0					
ANR	1044054	Argument	pass_shading_area_through_clip_path_device		1043610	2					
ANR	1044055	Identifier	pass_shading_area_through_clip_path_device		1043610	0					
ANR	1044056	ExpressionStatement	code = 0	704:16:28505:28513	1043610	3	True				
ANR	1044057	AssignmentExpression	code = 0		1043610	0		=			
ANR	1044058	Identifier	code		1043610	0					
ANR	1044059	PrimaryExpression	0		1043610	1					
ANR	1044060	IfStatement	if ( code >= 0 )		1043610	11					
ANR	1044061	Condition	code >= 0	706:16:28545:28553	1043610	0	True				
ANR	1044062	RelationalExpression	code >= 0		1043610	0		>=			
ANR	1044063	Identifier	code		1043610	0					
ANR	1044064	PrimaryExpression	0		1043610	1					
ANR	1044065	ExpressionStatement	"code = pdevc -> type -> fill_rectangle ( pdevc , cb . p . x , cb . p . y , cb . q . x - cb . p . x , cb . q . y - cb . p . y , dev , pgs -> log_op , rs )"	707:16:28572:28733	1043610	1	True				
ANR	1044066	AssignmentExpression	"code = pdevc -> type -> fill_rectangle ( pdevc , cb . p . x , cb . p . y , cb . q . x - cb . p . x , cb . q . y - cb . p . y , dev , pgs -> log_op , rs )"		1043610	0		=			
ANR	1044067	Identifier	code		1043610	0					
ANR	1044068	CallExpression	"pdevc -> type -> fill_rectangle ( pdevc , cb . p . x , cb . p . y , cb . q . x - cb . p . x , cb . q . y - cb . p . y , dev , pgs -> log_op , rs )"		1043610	1					
ANR	1044069	Callee	pdevc -> type -> fill_rectangle		1043610	0					
ANR	1044070	PtrMemberAccess	pdevc -> type -> fill_rectangle		1043610	0					
ANR	1044071	PtrMemberAccess	pdevc -> type		1043610	0					
ANR	1044072	Identifier	pdevc		1043610	0					
ANR	1044073	Identifier	type		1043610	1					
ANR	1044074	Identifier	fill_rectangle		1043610	1					
ANR	1044075	ArgumentList	pdevc		1043610	1					
ANR	1044076	Argument	pdevc		1043610	0					
ANR	1044077	Identifier	pdevc		1043610	0					
ANR	1044078	Argument	cb . p . x		1043610	1					
ANR	1044079	MemberAccess	cb . p . x		1043610	0					
ANR	1044080	MemberAccess	cb . p		1043610	0					
ANR	1044081	Identifier	cb		1043610	0					
ANR	1044082	Identifier	p		1043610	1					
ANR	1044083	Identifier	x		1043610	1					
ANR	1044084	Argument	cb . p . y		1043610	2					
ANR	1044085	MemberAccess	cb . p . y		1043610	0					
ANR	1044086	MemberAccess	cb . p		1043610	0					
ANR	1044087	Identifier	cb		1043610	0					
ANR	1044088	Identifier	p		1043610	1					
ANR	1044089	Identifier	y		1043610	1					
ANR	1044090	Argument	cb . q . x - cb . p . x		1043610	3					
ANR	1044091	AdditiveExpression	cb . q . x - cb . p . x		1043610	0		-			
ANR	1044092	MemberAccess	cb . q . x		1043610	0					
ANR	1044093	MemberAccess	cb . q		1043610	0					
ANR	1044094	Identifier	cb		1043610	0					
ANR	1044095	Identifier	q		1043610	1					
ANR	1044096	Identifier	x		1043610	1					
ANR	1044097	MemberAccess	cb . p . x		1043610	1					
ANR	1044098	MemberAccess	cb . p		1043610	0					
ANR	1044099	Identifier	cb		1043610	0					
ANR	1044100	Identifier	p		1043610	1					
ANR	1044101	Identifier	x		1043610	1					
ANR	1044102	Argument	cb . q . y - cb . p . y		1043610	4					
ANR	1044103	AdditiveExpression	cb . q . y - cb . p . y		1043610	0		-			
ANR	1044104	MemberAccess	cb . q . y		1043610	0					
ANR	1044105	MemberAccess	cb . q		1043610	0					
ANR	1044106	Identifier	cb		1043610	0					
ANR	1044107	Identifier	q		1043610	1					
ANR	1044108	Identifier	y		1043610	1					
ANR	1044109	MemberAccess	cb . p . y		1043610	1					
ANR	1044110	MemberAccess	cb . p		1043610	0					
ANR	1044111	Identifier	cb		1043610	0					
ANR	1044112	Identifier	p		1043610	1					
ANR	1044113	Identifier	y		1043610	1					
ANR	1044114	Argument	dev		1043610	5					
ANR	1044115	Identifier	dev		1043610	0					
ANR	1044116	Argument	pgs -> log_op		1043610	6					
ANR	1044117	PtrMemberAccess	pgs -> log_op		1043610	0					
ANR	1044118	Identifier	pgs		1043610	0					
ANR	1044119	Identifier	log_op		1043610	1					
ANR	1044120	Argument	rs		1043610	7					
ANR	1044121	Identifier	rs		1043610	0					
ANR	1044122	IfStatement	if ( ppath != NULL )		1043610	7					
ANR	1044123	Condition	ppath != NULL	711:12:28757:28769	1043610	0	True				
ANR	1044124	EqualityExpression	ppath != NULL		1043610	0		!=			
ANR	1044125	Identifier	ppath		1043610	0					
ANR	1044126	Identifier	NULL		1043610	1					
ANR	1044127	ExpressionStatement	"gx_cpath_free ( & cpath_intersection , ""shading_fill_cpath_intersection"" )"	712:12:28784:28853	1043610	1	True				
ANR	1044128	CallExpression	"gx_cpath_free ( & cpath_intersection , ""shading_fill_cpath_intersection"" )"		1043610	0					
ANR	1044129	Callee	gx_cpath_free		1043610	0					
ANR	1044130	Identifier	gx_cpath_free		1043610	0					
ANR	1044131	ArgumentList	& cpath_intersection		1043610	1					
ANR	1044132	Argument	& cpath_intersection		1043610	0					
ANR	1044133	UnaryOperationExpression	& cpath_intersection		1043610	0					
ANR	1044134	UnaryOperator	&		1043610	0					
ANR	1044135	Identifier	cpath_intersection		1043610	1					
ANR	1044136	Argument	"""shading_fill_cpath_intersection"""		1043610	1					
ANR	1044137	PrimaryExpression	"""shading_fill_cpath_intersection"""		1043610	0					
ANR	1044138	IfStatement	if ( pcpath1 != pcpath2 )		1043610	8					
ANR	1044139	Condition	pcpath1 != pcpath2	713:12:28867:28884	1043610	0	True				
ANR	1044140	EqualityExpression	pcpath1 != pcpath2		1043610	0		!=			
ANR	1044141	Identifier	pcpath1		1043610	0					
ANR	1044142	Identifier	pcpath2		1043610	1					
ANR	1044143	ExpressionStatement	"gx_cpath_free ( & cpath_with_shading_bbox , ""shading_fill_cpath_intersection"" )"	714:12:28899:28973	1043610	1	True				
ANR	1044144	CallExpression	"gx_cpath_free ( & cpath_with_shading_bbox , ""shading_fill_cpath_intersection"" )"		1043610	0					
ANR	1044145	Callee	gx_cpath_free		1043610	0					
ANR	1044146	Identifier	gx_cpath_free		1043610	0					
ANR	1044147	ArgumentList	& cpath_with_shading_bbox		1043610	1					
ANR	1044148	Argument	& cpath_with_shading_bbox		1043610	0					
ANR	1044149	UnaryOperationExpression	& cpath_with_shading_bbox		1043610	0					
ANR	1044150	UnaryOperator	&		1043610	0					
ANR	1044151	Identifier	cpath_with_shading_bbox		1043610	1					
ANR	1044152	Argument	"""shading_fill_cpath_intersection"""		1043610	1					
ANR	1044153	PrimaryExpression	"""shading_fill_cpath_intersection"""		1043610	0					
ANR	1044154	ElseStatement	else		1043610	0					
ANR	1044155	CompoundStatement		83:11:4007:4007	1043610	0					
ANR	1044156	ExpressionStatement	"code = gx_general_fill_path ( pdev , pgs , ppath , params , pdevc , pcpath )"	716:8:28996:29064	1043610	0	True				
ANR	1044157	AssignmentExpression	"code = gx_general_fill_path ( pdev , pgs , ppath , params , pdevc , pcpath )"		1043610	0		=			
ANR	1044158	Identifier	code		1043610	0					
ANR	1044159	CallExpression	"gx_general_fill_path ( pdev , pgs , ppath , params , pdevc , pcpath )"		1043610	1					
ANR	1044160	Callee	gx_general_fill_path		1043610	0					
ANR	1044161	Identifier	gx_general_fill_path		1043610	0					
ANR	1044162	ArgumentList	pdev		1043610	1					
ANR	1044163	Argument	pdev		1043610	0					
ANR	1044164	Identifier	pdev		1043610	0					
ANR	1044165	Argument	pgs		1043610	1					
ANR	1044166	Identifier	pgs		1043610	0					
ANR	1044167	Argument	ppath		1043610	2					
ANR	1044168	Identifier	ppath		1043610	0					
ANR	1044169	Argument	params		1043610	3					
ANR	1044170	Identifier	params		1043610	0					
ANR	1044171	Argument	pdevc		1043610	4					
ANR	1044172	Identifier	pdevc		1043610	0					
ANR	1044173	Argument	pcpath		1043610	5					
ANR	1044174	Identifier	pcpath		1043610	0					
ANR	1044175	ReturnStatement	return code ;	718:4:29076:29087	1043610	2	True				
ANR	1044176	Identifier	code		1043610	0					
ANR	1044177	ReturnType	int		1043610	1					
ANR	1044178	Identifier	gx_default_fill_path		1043610	2					
ANR	1044179	ParameterList	"gx_device * pdev , const gs_gstate * pgs , gx_path * ppath , const gx_fill_params * params , const gx_device_color * pdevc , const gx_clip_path * pcpath"		1043610	3					
ANR	1044180	Parameter	gx_device * pdev	630:21:24791:24806	1043610	0	True				
ANR	1044181	ParameterType	gx_device *		1043610	0					
ANR	1044182	Identifier	pdev		1043610	1					
ANR	1044183	Parameter	const gs_gstate * pgs	630:39:24809:24829	1043610	1	True				
ANR	1044184	ParameterType	const gs_gstate *		1043610	0					
ANR	1044185	Identifier	pgs		1043610	1					
ANR	1044186	Parameter	gx_path * ppath	631:21:24853:24867	1043610	2	True				
ANR	1044187	ParameterType	gx_path *		1043610	0					
ANR	1044188	Identifier	ppath		1043610	1					
ANR	1044189	Parameter	const gx_fill_params * params	631:38:24870:24898	1043610	3	True				
ANR	1044190	ParameterType	const gx_fill_params *		1043610	0					
ANR	1044191	Identifier	params		1043610	1					
ANR	1044192	Parameter	const gx_device_color * pdevc	632:17:24918:24946	1043610	4	True				
ANR	1044193	ParameterType	const gx_device_color *		1043610	0					
ANR	1044194	Identifier	pdevc		1043610	1					
ANR	1044195	Parameter	const gx_clip_path * pcpath	632:48:24949:24975	1043610	5	True				
ANR	1044196	ParameterType	const gx_clip_path *		1043610	0					
ANR	1044197	Identifier	pcpath		1043610	1					
ANR	1044198	CFGEntryNode	ENTRY		1043610		True				
ANR	1044199	CFGExitNode	EXIT		1043610		True				
ANR	1044200	Symbol	* pgs		1043610						
ANR	1044201	Symbol	pdevc		1043610						
ANR	1044202	Symbol	gx_dc_is_pattern2_color		1043610						
ANR	1044203	Symbol	dev_spec_op		1043610						
ANR	1044204	Symbol	get_clipping_box		1043610						
ANR	1044205	Symbol	pdevc -> type -> fill_rectangle		1043610						
ANR	1044206	Symbol	& cpath_intersection		1043610						
ANR	1044207	Symbol	pdev		1043610						
ANR	1044208	Symbol	dev		1043610						
ANR	1044209	Symbol	pdev -> memory		1043610						
ANR	1044210	Symbol	gx_cpath_from_rectangle		1043610						
ANR	1044211	Symbol	pdevc -> colors		1043610						
ANR	1044212	Symbol	pcpath1		1043610						
ANR	1044213	Symbol	fill_path		1043610						
ANR	1044214	Symbol	pcpath2		1043610						
ANR	1044215	Symbol	pdevc -> type		1043610						
ANR	1044216	Symbol	clip_box . p . y		1043610						
ANR	1044217	Symbol	clip_box . p . x		1043610						
ANR	1044218	Symbol	NULL		1043610						
ANR	1044219	Symbol	cpath_intersection		1043610						
ANR	1044220	Symbol	cb . q . x		1043610						
ANR	1044221	Symbol	& gx_dc_type_data_ht_colored		1043610						
ANR	1044222	Symbol	cb . q . y		1043610						
ANR	1044223	Symbol	params -> rule		1043610						
ANR	1044224	Symbol	gx_cpath_intersect_with_params		1043610						
ANR	1044225	Symbol	fixed2int_pixround		1043610						
ANR	1044226	Symbol	params		1043610						
ANR	1044227	Symbol	clip_box . q . y		1043610						
ANR	1044228	Symbol	pdevc -> colors . pattern		1043610						
ANR	1044229	Symbol	clip_box . q . x		1043610						
ANR	1044230	Symbol	pgs_noconst		1043610						
ANR	1044231	Symbol	& clip_box		1043610						
ANR	1044232	Symbol	clip_box1		1043610						
ANR	1044233	Symbol	clip_box . p		1043610						
ANR	1044234	Symbol	clip_box . q		1043610						
ANR	1044235	Symbol	rs		1043610						
ANR	1044236	Symbol	code		1043610						
ANR	1044237	Symbol	& cdev		1043610						
ANR	1044238	Symbol	* dev_proc		1043610						
ANR	1044239	Symbol	pass_shading_area_through_clip_path_device		1043610						
ANR	1044240	Symbol	ppath		1043610						
ANR	1044241	Symbol	gxdso_pattern_handles_clip_path		1043610						
ANR	1044242	Symbol	* pdevc -> type		1043610						
ANR	1044243	Symbol	& pcpath1		1043610						
ANR	1044244	Symbol	cb . p . x		1043610						
ANR	1044245	Symbol	* pdevc		1043610						
ANR	1044246	Symbol	gx_dc_is_pattern1_color		1043610						
ANR	1044247	Symbol	gx_dc_pattern2_clip_with_bbox		1043610						
ANR	1044248	Symbol	dev_proc		1043610						
ANR	1044249	Symbol	cb . p . y		1043610						
ANR	1044250	Symbol	& clip_box1		1043610						
ANR	1044251	Symbol	gx_general_fill_path		1043610						
ANR	1044252	Symbol	cb . p		1043610						
ANR	1044253	Symbol	cb . q		1043610						
ANR	1044254	Symbol	gx_pattern_tile_is_clist		1043610						
ANR	1044255	Symbol	pgs		1043610						
ANR	1044256	Symbol	& cpath_with_shading_bbox		1043610						
ANR	1044257	Symbol	pcpath		1043610						
ANR	1044258	Symbol	pdevc -> colors . pattern . p_tile		1043610						
ANR	1044259	Symbol	* params		1043610						
ANR	1044260	Symbol	cb		1043610						
ANR	1044261	Symbol	"* dev_proc ( pdev , dev_spec_op )"		1043610						
ANR	1044262	Symbol	pgs -> log_op		1043610						
ANR	1044263	Symbol	gx_cpath_init_local_shared_nested		1043610						
ANR	1044264	Symbol	"* dev_proc ( pdev , fill_path )"		1043610						
ANR	1044265	Symbol	clip_box		1043610						
ANR	1044266	Symbol	* * pdevc		1043610						
ANR	1044267	Symbol	gxdso_pattern_shading_area		1043610						
ANR	1044268	Symbol	* pdev		1043610						
ANR	1044269	Symbol	cdev		1043610						
ANR	1044270	Symbol	cpath_with_shading_bbox		1043610						
ANR	1044271	Function	free_line_list	722:0:29118:29452							
ANR	1044272	FunctionDef	free_line_list (line_list * ll)		1044271	0					
ANR	1044273	CompoundStatement		724:0:29160:29452	1044271	0					
ANR	1044274	IdentifierDeclStatement	gs_memory_t * mem = ll -> memory ;	726:4:29222:29251	1044271	0	True				
ANR	1044275	IdentifierDecl	* mem = ll -> memory		1044271	0					
ANR	1044276	IdentifierDeclType	gs_memory_t *		1044271	0					
ANR	1044277	Identifier	mem		1044271	1					
ANR	1044278	AssignmentExpression	* mem = ll -> memory		1044271	2		=			
ANR	1044279	Identifier	mem		1044271	0					
ANR	1044280	PtrMemberAccess	ll -> memory		1044271	1					
ANR	1044281	Identifier	ll		1044271	0					
ANR	1044282	Identifier	memory		1044271	1					
ANR	1044283	IdentifierDeclStatement	active_line * alp ;	727:4:29257:29273	1044271	1	True				
ANR	1044284	IdentifierDecl	* alp		1044271	0					
ANR	1044285	IdentifierDeclType	active_line *		1044271	0					
ANR	1044286	Identifier	alp		1044271	1					
ANR	1044287	WhileStatement	while ( ( alp = ll -> active_area ) != 0 )		1044271	2					
ANR	1044288	Condition	( alp = ll -> active_area ) != 0	729:11:29287:29314	1044271	0	True				
ANR	1044289	EqualityExpression	( alp = ll -> active_area ) != 0		1044271	0		!=			
ANR	1044290	AssignmentExpression	alp = ll -> active_area		1044271	0		=			
ANR	1044291	Identifier	alp		1044271	0					
ANR	1044292	PtrMemberAccess	ll -> active_area		1044271	1					
ANR	1044293	Identifier	ll		1044271	0					
ANR	1044294	Identifier	active_area		1044271	1					
ANR	1044295	PrimaryExpression	0		1044271	1					
ANR	1044296	CompoundStatement		7:8:166:201	1044271	1					
ANR	1044297	IdentifierDeclStatement	active_line * next = alp -> alloc_next ;	730:8:29327:29362	1044271	0	True				
ANR	1044298	IdentifierDecl	* next = alp -> alloc_next		1044271	0					
ANR	1044299	IdentifierDeclType	active_line *		1044271	0					
ANR	1044300	Identifier	next		1044271	1					
ANR	1044301	AssignmentExpression	* next = alp -> alloc_next		1044271	2		=			
ANR	1044302	Identifier	next		1044271	0					
ANR	1044303	PtrMemberAccess	alp -> alloc_next		1044271	1					
ANR	1044304	Identifier	alp		1044271	0					
ANR	1044305	Identifier	alloc_next		1044271	1					
ANR	1044306	ExpressionStatement	"gs_free_object ( mem , alp , ""active line"" )"	732:8:29373:29412	1044271	1	True				
ANR	1044307	CallExpression	"gs_free_object ( mem , alp , ""active line"" )"		1044271	0					
ANR	1044308	Callee	gs_free_object		1044271	0					
ANR	1044309	Identifier	gs_free_object		1044271	0					
ANR	1044310	ArgumentList	mem		1044271	1					
ANR	1044311	Argument	mem		1044271	0					
ANR	1044312	Identifier	mem		1044271	0					
ANR	1044313	Argument	alp		1044271	1					
ANR	1044314	Identifier	alp		1044271	0					
ANR	1044315	Argument	"""active line"""		1044271	2					
ANR	1044316	PrimaryExpression	"""active line"""		1044271	0					
ANR	1044317	ExpressionStatement	ll -> active_area = next	733:8:29422:29444	1044271	2	True				
ANR	1044318	AssignmentExpression	ll -> active_area = next		1044271	0		=			
ANR	1044319	PtrMemberAccess	ll -> active_area		1044271	0					
ANR	1044320	Identifier	ll		1044271	0					
ANR	1044321	Identifier	active_area		1044271	1					
ANR	1044322	Identifier	next		1044271	1					
ANR	1044323	ReturnType	static void		1044271	1					
ANR	1044324	Identifier	free_line_list		1044271	2					
ANR	1044325	ParameterList	line_list * ll		1044271	3					
ANR	1044326	Parameter	line_list * ll	723:15:29145:29157	1044271	0	True				
ANR	1044327	ParameterType	line_list *		1044271	0					
ANR	1044328	Identifier	ll		1044271	1					
ANR	1044329	CFGEntryNode	ENTRY		1044271		True				
ANR	1044330	CFGExitNode	EXIT		1044271		True				
ANR	1044331	Symbol	ll		1044271						
ANR	1044332	Symbol	next		1044271						
ANR	1044333	Symbol	* alp		1044271						
ANR	1044334	Symbol	mem		1044271						
ANR	1044335	Symbol	alp		1044271						
ANR	1044336	Symbol	ll -> memory		1044271						
ANR	1044337	Symbol	* ll		1044271						
ANR	1044338	Symbol	alp -> alloc_next		1044271						
ANR	1044339	Symbol	ll -> active_area		1044271						
ANR	1044340	Function	make_al	737:0:29455:29970							
ANR	1044341	FunctionDef	make_al (line_list * ll)		1044340	0					
ANR	1044342	CompoundStatement		739:0:29506:29970	1044340	0					
ANR	1044343	IdentifierDeclStatement	active_line * alp = ll -> next_active ;	740:4:29512:29546	1044340	0	True				
ANR	1044344	IdentifierDecl	* alp = ll -> next_active		1044340	0					
ANR	1044345	IdentifierDeclType	active_line *		1044340	0					
ANR	1044346	Identifier	alp		1044340	1					
ANR	1044347	AssignmentExpression	* alp = ll -> next_active		1044340	2		=			
ANR	1044348	Identifier	alp		1044340	0					
ANR	1044349	PtrMemberAccess	ll -> next_active		1044340	1					
ANR	1044350	Identifier	ll		1044340	0					
ANR	1044351	Identifier	next_active		1044340	1					
ANR	1044352	IfStatement	if ( alp == ll -> limit )		1044340	1					
ANR	1044353	Condition	alp == ll -> limit	742:8:29557:29572	1044340	0	True				
ANR	1044354	EqualityExpression	alp == ll -> limit		1044340	0		==			
ANR	1044355	Identifier	alp		1044340	0					
ANR	1044356	PtrMemberAccess	ll -> limit		1044340	1					
ANR	1044357	Identifier	ll		1044340	0					
ANR	1044358	Identifier	limit		1044340	1					
ANR	1044359	CompoundStatement		4:26:68:68	1044340	1					
ANR	1044360	ExpressionStatement	"alp = gs_alloc_struct ( ll -> memory , active_line , & st_active_line , ""active line"" )"	743:8:29615:29723	1044340	0	True				
ANR	1044361	AssignmentExpression	"alp = gs_alloc_struct ( ll -> memory , active_line , & st_active_line , ""active line"" )"		1044340	0		=			
ANR	1044362	Identifier	alp		1044340	0					
ANR	1044363	CallExpression	"gs_alloc_struct ( ll -> memory , active_line , & st_active_line , ""active line"" )"		1044340	1					
ANR	1044364	Callee	gs_alloc_struct		1044340	0					
ANR	1044365	Identifier	gs_alloc_struct		1044340	0					
ANR	1044366	ArgumentList	ll -> memory		1044340	1					
ANR	1044367	Argument	ll -> memory		1044340	0					
ANR	1044368	PtrMemberAccess	ll -> memory		1044340	0					
ANR	1044369	Identifier	ll		1044340	0					
ANR	1044370	Identifier	memory		1044340	1					
ANR	1044371	Argument	active_line		1044340	1					
ANR	1044372	Identifier	active_line		1044340	0					
ANR	1044373	Argument	& st_active_line		1044340	2					
ANR	1044374	UnaryOperationExpression	& st_active_line		1044340	0					
ANR	1044375	UnaryOperator	&		1044340	0					
ANR	1044376	Identifier	st_active_line		1044340	1					
ANR	1044377	Argument	"""active line"""		1044340	3					
ANR	1044378	PrimaryExpression	"""active line"""		1044340	0					
ANR	1044379	IfStatement	if ( alp == 0 )		1044340	1					
ANR	1044380	Condition	alp == 0	745:12:29737:29744	1044340	0	True				
ANR	1044381	EqualityExpression	alp == 0		1044340	0		==			
ANR	1044382	Identifier	alp		1044340	0					
ANR	1044383	PrimaryExpression	0		1044340	1					
ANR	1044384	ReturnStatement	return NULL ;	746:12:29759:29770	1044340	1	True				
ANR	1044385	Identifier	NULL		1044340	0					
ANR	1044386	ExpressionStatement	alp -> alloc_next = ll -> active_area	747:8:29780:29813	1044340	2	True				
ANR	1044387	AssignmentExpression	alp -> alloc_next = ll -> active_area		1044340	0		=			
ANR	1044388	PtrMemberAccess	alp -> alloc_next		1044340	0					
ANR	1044389	Identifier	alp		1044340	0					
ANR	1044390	Identifier	alloc_next		1044340	1					
ANR	1044391	PtrMemberAccess	ll -> active_area		1044340	1					
ANR	1044392	Identifier	ll		1044340	0					
ANR	1044393	Identifier	active_area		1044340	1					
ANR	1044394	ExpressionStatement	ll -> active_area = alp	748:8:29823:29844	1044340	3	True				
ANR	1044395	AssignmentExpression	ll -> active_area = alp		1044340	0		=			
ANR	1044396	PtrMemberAccess	ll -> active_area		1044340	0					
ANR	1044397	Identifier	ll		1044340	0					
ANR	1044398	Identifier	active_area		1044340	1					
ANR	1044399	Identifier	alp		1044340	1					
ANR	1044400	ExpressionStatement	INCR ( fill_alloc )	749:8:29854:29870	1044340	4	True				
ANR	1044401	CallExpression	INCR ( fill_alloc )		1044340	0					
ANR	1044402	Callee	INCR		1044340	0					
ANR	1044403	Identifier	INCR		1044340	0					
ANR	1044404	ArgumentList	fill_alloc		1044340	1					
ANR	1044405	Argument	fill_alloc		1044340	0					
ANR	1044406	Identifier	fill_alloc		1044340	0					
ANR	1044407	ElseStatement	else		1044340	0					
ANR	1044408	ExpressionStatement	ll -> next_active ++	751:8:29891:29908	1044340	0	True				
ANR	1044409	PostIncDecOperationExpression	ll -> next_active ++		1044340	0					
ANR	1044410	PtrMemberAccess	ll -> next_active		1044340	0					
ANR	1044411	Identifier	ll		1044340	0					
ANR	1044412	Identifier	next_active		1044340	1					
ANR	1044413	IncDec	++		1044340	1					
ANR	1044414	ExpressionStatement	alp -> contour_count = ll -> contour_count	752:4:29914:29952	1044340	2	True				
ANR	1044415	AssignmentExpression	alp -> contour_count = ll -> contour_count		1044340	0		=			
ANR	1044416	PtrMemberAccess	alp -> contour_count		1044340	0					
ANR	1044417	Identifier	alp		1044340	0					
ANR	1044418	Identifier	contour_count		1044340	1					
ANR	1044419	PtrMemberAccess	ll -> contour_count		1044340	1					
ANR	1044420	Identifier	ll		1044340	0					
ANR	1044421	Identifier	contour_count		1044340	1					
ANR	1044422	ReturnStatement	return alp ;	753:4:29958:29968	1044340	3	True				
ANR	1044423	Identifier	alp		1044340	0					
ANR	1044424	ReturnType	static inline active_line *		1044340	1					
ANR	1044425	Identifier	make_al		1044340	2					
ANR	1044426	ParameterList	line_list * ll		1044340	3					
ANR	1044427	Parameter	line_list * ll	738:8:29491:29503	1044340	0	True				
ANR	1044428	ParameterType	line_list *		1044340	0					
ANR	1044429	Identifier	ll		1044340	1					
ANR	1044430	CFGEntryNode	ENTRY		1044340		True				
ANR	1044431	CFGExitNode	EXIT		1044340		True				
ANR	1044432	Symbol	ll		1044340						
ANR	1044433	Symbol	NULL		1044340						
ANR	1044434	Symbol	fill_alloc		1044340						
ANR	1044435	Symbol	alp		1044340						
ANR	1044436	Symbol	ll -> next_active		1044340						
ANR	1044437	Symbol	* ll		1044340						
ANR	1044438	Symbol	ll -> memory		1044340						
ANR	1044439	Symbol	gs_alloc_struct		1044340						
ANR	1044440	Symbol	ll -> active_area		1044340						
ANR	1044441	Symbol	* alp		1044340						
ANR	1044442	Symbol	ll -> limit		1044340						
ANR	1044443	Symbol	alp -> alloc_next		1044340						
ANR	1044444	Symbol	alp -> contour_count		1044340						
ANR	1044445	Symbol	& st_active_line		1044340						
ANR	1044446	Symbol	ll -> contour_count		1044340						
ANR	1044447	Symbol	active_line		1044340						
ANR	1044448	Function	insert_y_line	757:0:30017:31054							
ANR	1044449	FunctionDef	"insert_y_line (line_list * ll , active_line * alp)"		1044448	0					
ANR	1044450	CompoundStatement		759:0:30076:31054	1044448	0					
ANR	1044451	IdentifierDeclStatement	active_line * yp = ll -> y_line ;	760:4:30082:30110	1044448	0	True				
ANR	1044452	IdentifierDecl	* yp = ll -> y_line		1044448	0					
ANR	1044453	IdentifierDeclType	active_line *		1044448	0					
ANR	1044454	Identifier	yp		1044448	1					
ANR	1044455	AssignmentExpression	* yp = ll -> y_line		1044448	2		=			
ANR	1044456	Identifier	yp		1044448	0					
ANR	1044457	PtrMemberAccess	ll -> y_line		1044448	1					
ANR	1044458	Identifier	ll		1044448	0					
ANR	1044459	Identifier	y_line		1044448	1					
ANR	1044460	IdentifierDeclStatement	active_line * nyp ;	761:4:30116:30132	1044448	1	True				
ANR	1044461	IdentifierDecl	* nyp		1044448	0					
ANR	1044462	IdentifierDeclType	active_line *		1044448	0					
ANR	1044463	Identifier	nyp		1044448	1					
ANR	1044464	IdentifierDeclStatement	fixed y_start = alp -> start . y ;	762:4:30138:30166	1044448	2	True				
ANR	1044465	IdentifierDecl	y_start = alp -> start . y		1044448	0					
ANR	1044466	IdentifierDeclType	fixed		1044448	0					
ANR	1044467	Identifier	y_start		1044448	1					
ANR	1044468	AssignmentExpression	y_start = alp -> start . y		1044448	2		=			
ANR	1044469	Identifier	y_start		1044448	0					
ANR	1044470	MemberAccess	alp -> start . y		1044448	1					
ANR	1044471	PtrMemberAccess	alp -> start		1044448	0					
ANR	1044472	Identifier	alp		1044448	0					
ANR	1044473	Identifier	start		1044448	1					
ANR	1044474	Identifier	y		1044448	1					
ANR	1044475	IfStatement	if ( yp == 0 )		1044448	3					
ANR	1044476	Condition	yp == 0	764:8:30177:30183	1044448	0	True				
ANR	1044477	EqualityExpression	yp == 0		1044448	0		==			
ANR	1044478	Identifier	yp		1044448	0					
ANR	1044479	PrimaryExpression	0		1044448	1					
ANR	1044480	CompoundStatement		6:17:109:109	1044448	1					
ANR	1044481	ExpressionStatement	alp -> next = alp -> prev = 0	765:8:30196:30221	1044448	0	True				
ANR	1044482	AssignmentExpression	alp -> next = alp -> prev = 0		1044448	0		=			
ANR	1044483	PtrMemberAccess	alp -> next		1044448	0					
ANR	1044484	Identifier	alp		1044448	0					
ANR	1044485	Identifier	next		1044448	1					
ANR	1044486	AssignmentExpression	alp -> prev = 0		1044448	1		=			
ANR	1044487	PtrMemberAccess	alp -> prev		1044448	0					
ANR	1044488	Identifier	alp		1044448	0					
ANR	1044489	Identifier	prev		1044448	1					
ANR	1044490	PrimaryExpression	0		1044448	1					
ANR	1044491	ExpressionStatement	ll -> y_list = alp	766:8:30231:30247	1044448	1	True				
ANR	1044492	AssignmentExpression	ll -> y_list = alp		1044448	0		=			
ANR	1044493	PtrMemberAccess	ll -> y_list		1044448	0					
ANR	1044494	Identifier	ll		1044448	0					
ANR	1044495	Identifier	y_list		1044448	1					
ANR	1044496	Identifier	alp		1044448	1					
ANR	1044497	ElseStatement	else		1044448	0					
ANR	1044498	IfStatement	if ( y_start >= yp -> start . y )		1044448	0					
ANR	1044499	Condition	y_start >= yp -> start . y	767:15:30264:30285	1044448	0	True				
ANR	1044500	RelationalExpression	y_start >= yp -> start . y		1044448	0		>=			
ANR	1044501	Identifier	y_start		1044448	0					
ANR	1044502	MemberAccess	yp -> start . y		1044448	1					
ANR	1044503	PtrMemberAccess	yp -> start		1044448	0					
ANR	1044504	Identifier	yp		1044448	0					
ANR	1044505	Identifier	start		1044448	1					
ANR	1044506	Identifier	y		1044448	1					
ANR	1044507	CompoundStatement		9:39:211:211	1044448	1					
ANR	1044508	WhileStatement	"while ( INCR_EXPR ( y_up ) , ( ( nyp = yp -> next ) != NULL && y_start > nyp -> start . y ) )"		1044448	0					
ANR	1044509	Condition	"INCR_EXPR ( y_up ) , ( ( nyp = yp -> next ) != NULL && y_start > nyp -> start . y )"	768:15:30351:30450	1044448	0	True				
ANR	1044510	Expression	"INCR_EXPR ( y_up ) , ( ( nyp = yp -> next ) != NULL && y_start > nyp -> start . y )"		1044448	0					
ANR	1044511	CallExpression	INCR_EXPR ( y_up )		1044448	0					
ANR	1044512	Callee	INCR_EXPR		1044448	0					
ANR	1044513	Identifier	INCR_EXPR		1044448	0					
ANR	1044514	ArgumentList	y_up		1044448	1					
ANR	1044515	Argument	y_up		1044448	0					
ANR	1044516	Identifier	y_up		1044448	0					
ANR	1044517	AndExpression	( nyp = yp -> next ) != NULL && y_start > nyp -> start . y		1044448	1		&&			
ANR	1044518	EqualityExpression	( nyp = yp -> next ) != NULL		1044448	0		!=			
ANR	1044519	AssignmentExpression	nyp = yp -> next		1044448	0		=			
ANR	1044520	Identifier	nyp		1044448	0					
ANR	1044521	PtrMemberAccess	yp -> next		1044448	1					
ANR	1044522	Identifier	yp		1044448	0					
ANR	1044523	Identifier	next		1044448	1					
ANR	1044524	Identifier	NULL		1044448	1					
ANR	1044525	RelationalExpression	y_start > nyp -> start . y		1044448	1		>			
ANR	1044526	Identifier	y_start		1044448	0					
ANR	1044527	MemberAccess	nyp -> start . y		1044448	1					
ANR	1044528	PtrMemberAccess	nyp -> start		1044448	0					
ANR	1044529	Identifier	nyp		1044448	0					
ANR	1044530	Identifier	start		1044448	1					
ANR	1044531	Identifier	y		1044448	1					
ANR	1044532	ExpressionStatement	yp = nyp	772:12:30478:30486	1044448	1	True				
ANR	1044533	AssignmentExpression	yp = nyp		1044448	0		=			
ANR	1044534	Identifier	yp		1044448	0					
ANR	1044535	Identifier	nyp		1044448	1					
ANR	1044536	ExpressionStatement	alp -> next = nyp	773:8:30496:30511	1044448	1	True				
ANR	1044537	AssignmentExpression	alp -> next = nyp		1044448	0		=			
ANR	1044538	PtrMemberAccess	alp -> next		1044448	0					
ANR	1044539	Identifier	alp		1044448	0					
ANR	1044540	Identifier	next		1044448	1					
ANR	1044541	Identifier	nyp		1044448	1					
ANR	1044542	ExpressionStatement	alp -> prev = yp	774:8:30521:30535	1044448	2	True				
ANR	1044543	AssignmentExpression	alp -> prev = yp		1044448	0		=			
ANR	1044544	PtrMemberAccess	alp -> prev		1044448	0					
ANR	1044545	Identifier	alp		1044448	0					
ANR	1044546	Identifier	prev		1044448	1					
ANR	1044547	Identifier	yp		1044448	1					
ANR	1044548	ExpressionStatement	yp -> next = alp	775:8:30545:30559	1044448	3	True				
ANR	1044549	AssignmentExpression	yp -> next = alp		1044448	0		=			
ANR	1044550	PtrMemberAccess	yp -> next		1044448	0					
ANR	1044551	Identifier	yp		1044448	0					
ANR	1044552	Identifier	next		1044448	1					
ANR	1044553	Identifier	alp		1044448	1					
ANR	1044554	IfStatement	if ( nyp )		1044448	4					
ANR	1044555	Condition	nyp	776:12:30573:30575	1044448	0	True				
ANR	1044556	Identifier	nyp		1044448	0					
ANR	1044557	ExpressionStatement	nyp -> prev = alp	777:12:30590:30605	1044448	1	True				
ANR	1044558	AssignmentExpression	nyp -> prev = alp		1044448	0		=			
ANR	1044559	PtrMemberAccess	nyp -> prev		1044448	0					
ANR	1044560	Identifier	nyp		1044448	0					
ANR	1044561	Identifier	prev		1044448	1					
ANR	1044562	Identifier	alp		1044448	1					
ANR	1044563	ElseStatement	else		1044448	0					
ANR	1044564	CompoundStatement		20:11:541:541	1044448	0					
ANR	1044565	WhileStatement	"while ( INCR_EXPR ( y_down ) , ( ( nyp = yp -> prev ) != NULL && y_start < nyp -> start . y ) )"		1044448	0					
ANR	1044566	Condition	"INCR_EXPR ( y_down ) , ( ( nyp = yp -> prev ) != NULL && y_start < nyp -> start . y )"	779:15:30686:30787	1044448	0	True				
ANR	1044567	Expression	"INCR_EXPR ( y_down ) , ( ( nyp = yp -> prev ) != NULL && y_start < nyp -> start . y )"		1044448	0					
ANR	1044568	CallExpression	INCR_EXPR ( y_down )		1044448	0					
ANR	1044569	Callee	INCR_EXPR		1044448	0					
ANR	1044570	Identifier	INCR_EXPR		1044448	0					
ANR	1044571	ArgumentList	y_down		1044448	1					
ANR	1044572	Argument	y_down		1044448	0					
ANR	1044573	Identifier	y_down		1044448	0					
ANR	1044574	AndExpression	( nyp = yp -> prev ) != NULL && y_start < nyp -> start . y		1044448	1		&&			
ANR	1044575	EqualityExpression	( nyp = yp -> prev ) != NULL		1044448	0		!=			
ANR	1044576	AssignmentExpression	nyp = yp -> prev		1044448	0		=			
ANR	1044577	Identifier	nyp		1044448	0					
ANR	1044578	PtrMemberAccess	yp -> prev		1044448	1					
ANR	1044579	Identifier	yp		1044448	0					
ANR	1044580	Identifier	prev		1044448	1					
ANR	1044581	Identifier	NULL		1044448	1					
ANR	1044582	RelationalExpression	y_start < nyp -> start . y		1044448	1		<			
ANR	1044583	Identifier	y_start		1044448	0					
ANR	1044584	MemberAccess	nyp -> start . y		1044448	1					
ANR	1044585	PtrMemberAccess	nyp -> start		1044448	0					
ANR	1044586	Identifier	nyp		1044448	0					
ANR	1044587	Identifier	start		1044448	1					
ANR	1044588	Identifier	y		1044448	1					
ANR	1044589	ExpressionStatement	yp = nyp	783:12:30815:30823	1044448	1	True				
ANR	1044590	AssignmentExpression	yp = nyp		1044448	0		=			
ANR	1044591	Identifier	yp		1044448	0					
ANR	1044592	Identifier	nyp		1044448	1					
ANR	1044593	ExpressionStatement	alp -> prev = nyp	784:8:30833:30848	1044448	1	True				
ANR	1044594	AssignmentExpression	alp -> prev = nyp		1044448	0		=			
ANR	1044595	PtrMemberAccess	alp -> prev		1044448	0					
ANR	1044596	Identifier	alp		1044448	0					
ANR	1044597	Identifier	prev		1044448	1					
ANR	1044598	Identifier	nyp		1044448	1					
ANR	1044599	ExpressionStatement	alp -> next = yp	785:8:30858:30872	1044448	2	True				
ANR	1044600	AssignmentExpression	alp -> next = yp		1044448	0		=			
ANR	1044601	PtrMemberAccess	alp -> next		1044448	0					
ANR	1044602	Identifier	alp		1044448	0					
ANR	1044603	Identifier	next		1044448	1					
ANR	1044604	Identifier	yp		1044448	1					
ANR	1044605	ExpressionStatement	yp -> prev = alp	786:8:30882:30896	1044448	3	True				
ANR	1044606	AssignmentExpression	yp -> prev = alp		1044448	0		=			
ANR	1044607	PtrMemberAccess	yp -> prev		1044448	0					
ANR	1044608	Identifier	yp		1044448	0					
ANR	1044609	Identifier	prev		1044448	1					
ANR	1044610	Identifier	alp		1044448	1					
ANR	1044611	IfStatement	if ( nyp )		1044448	4					
ANR	1044612	Condition	nyp	787:12:30910:30912	1044448	0	True				
ANR	1044613	Identifier	nyp		1044448	0					
ANR	1044614	ExpressionStatement	nyp -> next = alp	788:12:30927:30942	1044448	1	True				
ANR	1044615	AssignmentExpression	nyp -> next = alp		1044448	0		=			
ANR	1044616	PtrMemberAccess	nyp -> next		1044448	0					
ANR	1044617	Identifier	nyp		1044448	0					
ANR	1044618	Identifier	next		1044448	1					
ANR	1044619	Identifier	alp		1044448	1					
ANR	1044620	ElseStatement	else		1044448	0					
ANR	1044621	ExpressionStatement	ll -> y_list = alp	790:12:30969:30985	1044448	0	True				
ANR	1044622	AssignmentExpression	ll -> y_list = alp		1044448	0		=			
ANR	1044623	PtrMemberAccess	ll -> y_list		1044448	0					
ANR	1044624	Identifier	ll		1044448	0					
ANR	1044625	Identifier	y_list		1044448	1					
ANR	1044626	Identifier	alp		1044448	1					
ANR	1044627	ExpressionStatement	ll -> y_line = alp	792:4:30997:31013	1044448	4	True				
ANR	1044628	AssignmentExpression	ll -> y_line = alp		1044448	0		=			
ANR	1044629	PtrMemberAccess	ll -> y_line		1044448	0					
ANR	1044630	Identifier	ll		1044448	0					
ANR	1044631	Identifier	y_line		1044448	1					
ANR	1044632	Identifier	alp		1044448	1					
ANR	1044633	ExpressionStatement	"print_al ( ll -> memory , ""add "" , alp )"	793:4:31019:31052	1044448	5	True				
ANR	1044634	CallExpression	"print_al ( ll -> memory , ""add "" , alp )"		1044448	0					
ANR	1044635	Callee	print_al		1044448	0					
ANR	1044636	Identifier	print_al		1044448	0					
ANR	1044637	ArgumentList	ll -> memory		1044448	1					
ANR	1044638	Argument	ll -> memory		1044448	0					
ANR	1044639	PtrMemberAccess	ll -> memory		1044448	0					
ANR	1044640	Identifier	ll		1044448	0					
ANR	1044641	Identifier	memory		1044448	1					
ANR	1044642	Argument	"""add """		1044448	1					
ANR	1044643	PrimaryExpression	"""add """		1044448	0					
ANR	1044644	Argument	alp		1044448	2					
ANR	1044645	Identifier	alp		1044448	0					
ANR	1044646	ReturnType	static void		1044448	1					
ANR	1044647	Identifier	insert_y_line		1044448	2					
ANR	1044648	ParameterList	"line_list * ll , active_line * alp"		1044448	3					
ANR	1044649	Parameter	line_list * ll	758:14:30043:30055	1044448	0	True				
ANR	1044650	ParameterType	line_list *		1044448	0					
ANR	1044651	Identifier	ll		1044448	1					
ANR	1044652	Parameter	active_line * alp	758:29:30058:30073	1044448	1	True				
ANR	1044653	ParameterType	active_line *		1044448	0					
ANR	1044654	Identifier	alp		1044448	1					
ANR	1044655	CFGEntryNode	ENTRY		1044448		True				
ANR	1044656	CFGExitNode	EXIT		1044448		True				
ANR	1044657	Symbol	ll		1044448						
ANR	1044658	Symbol	nyp -> start . y		1044448						
ANR	1044659	Symbol	nyp		1044448						
ANR	1044660	Symbol	ll -> memory		1044448						
ANR	1044661	Symbol	ll -> y_list		1044448						
ANR	1044662	Symbol	y_down		1044448						
ANR	1044663	Symbol	yp		1044448						
ANR	1044664	Symbol	yp -> start		1044448						
ANR	1044665	Symbol	y_up		1044448						
ANR	1044666	Symbol	* yp		1044448						
ANR	1044667	Symbol	NULL		1044448						
ANR	1044668	Symbol	alp		1044448						
ANR	1044669	Symbol	* ll		1044448						
ANR	1044670	Symbol	y_start		1044448						
ANR	1044671	Symbol	yp -> start . y		1044448						
ANR	1044672	Symbol	INCR_EXPR		1044448						
ANR	1044673	Symbol	nyp -> prev		1044448						
ANR	1044674	Symbol	nyp -> next		1044448						
ANR	1044675	Symbol	* nyp		1044448						
ANR	1044676	Symbol	* alp		1044448						
ANR	1044677	Symbol	yp -> prev		1044448						
ANR	1044678	Symbol	alp -> prev		1044448						
ANR	1044679	Symbol	alp -> start . y		1044448						
ANR	1044680	Symbol	ll -> y_line		1044448						
ANR	1044681	Symbol	alp -> next		1044448						
ANR	1044682	Symbol	nyp -> start		1044448						
ANR	1044683	Symbol	alp -> start		1044448						
ANR	1044684	Symbol	yp -> next		1044448						
ANR	1044685	ClassDef	contour_cursor_s	796:8:31065:31307							
ANR	1044686	DeclStmt									
ANR	1044687	Decl							segment	segment *	prev
ANR	1044688	Decl							segment	segment *	pseg
ANR	1044689	Decl							segment	segment *	pfirst
ANR	1044690	Decl							segment	segment *	plast
ANR	1044691	DeclStmt									
ANR	1044692	Decl							gx_flattened_iterator	gx_flattened_iterator	fi
ANR	1044693	DeclStmt									
ANR	1044694	Decl							bool	bool	more_flattened
ANR	1044695	DeclStmt									
ANR	1044696	Decl							bool	bool	first_flattened
ANR	1044697	DeclStmt									
ANR	1044698	Decl							int	int	dir
ANR	1044699	DeclStmt									
ANR	1044700	Decl							bool	bool	monotonic_y
ANR	1044701	DeclStmt									
ANR	1044702	Decl							bool	bool	monotonic_x
ANR	1044703	DeclStmt									
ANR	1044704	Decl							bool	bool	crossing
ANR	1044705	DeclStmt									
ANR	1044706	Decl							contour_cursor_s	contour_cursor_s	contour_cursor
ANR	1044707	Function	compute_dir	807:0:31310:31601							
ANR	1044708	FunctionDef	"compute_dir (const fill_options * fo , fixed y0 , fixed y1)"		1044707	0					
ANR	1044709	CompoundStatement		809:0:31384:31601	1044707	0					
ANR	1044710	IfStatement	"if ( max ( y0 , y1 ) < fo -> ymin )"		1044707	0					
ANR	1044711	Condition	"max ( y0 , y1 ) < fo -> ymin"	810:8:31394:31415	1044707	0	True				
ANR	1044712	RelationalExpression	"max ( y0 , y1 ) < fo -> ymin"		1044707	0		<			
ANR	1044713	CallExpression	"max ( y0 , y1 )"		1044707	0					
ANR	1044714	Callee	max		1044707	0					
ANR	1044715	Identifier	max		1044707	0					
ANR	1044716	ArgumentList	y0		1044707	1					
ANR	1044717	Argument	y0		1044707	0					
ANR	1044718	Identifier	y0		1044707	0					
ANR	1044719	Argument	y1		1044707	1					
ANR	1044720	Identifier	y1		1044707	0					
ANR	1044721	PtrMemberAccess	fo -> ymin		1044707	1					
ANR	1044722	Identifier	fo		1044707	0					
ANR	1044723	Identifier	ymin		1044707	1					
ANR	1044724	ReturnStatement	return DIR_OUT_OF_Y_RANGE ;	811:8:31426:31451	1044707	1	True				
ANR	1044725	Identifier	DIR_OUT_OF_Y_RANGE		1044707	0					
ANR	1044726	IfStatement	"if ( min ( y0 , y1 ) > fo -> ymax )"		1044707	1					
ANR	1044727	Condition	"min ( y0 , y1 ) > fo -> ymax"	812:8:31461:31482	1044707	0	True				
ANR	1044728	RelationalExpression	"min ( y0 , y1 ) > fo -> ymax"		1044707	0		>			
ANR	1044729	CallExpression	"min ( y0 , y1 )"		1044707	0					
ANR	1044730	Callee	min		1044707	0					
ANR	1044731	Identifier	min		1044707	0					
ANR	1044732	ArgumentList	y0		1044707	1					
ANR	1044733	Argument	y0		1044707	0					
ANR	1044734	Identifier	y0		1044707	0					
ANR	1044735	Argument	y1		1044707	1					
ANR	1044736	Identifier	y1		1044707	0					
ANR	1044737	PtrMemberAccess	fo -> ymax		1044707	1					
ANR	1044738	Identifier	fo		1044707	0					
ANR	1044739	Identifier	ymax		1044707	1					
ANR	1044740	ReturnStatement	return DIR_OUT_OF_Y_RANGE ;	813:8:31493:31518	1044707	1	True				
ANR	1044741	Identifier	DIR_OUT_OF_Y_RANGE		1044707	0					
ANR	1044742	ReturnStatement	return ( y0 < y1 ? DIR_UP : y0 > y1 ? DIR_DOWN : DIR_HORIZONTAL ) ;	814:4:31524:31599	1044707	2	True				
ANR	1044743	ConditionalExpression	y0 < y1 ? DIR_UP : y0 > y1 ? DIR_DOWN : DIR_HORIZONTAL		1044707	0					
ANR	1044744	Condition	y0 < y1		1044707	0					
ANR	1044745	RelationalExpression	y0 < y1		1044707	0		<			
ANR	1044746	Identifier	y0		1044707	0					
ANR	1044747	Identifier	y1		1044707	1					
ANR	1044748	Identifier	DIR_UP		1044707	1					
ANR	1044749	ConditionalExpression	y0 > y1 ? DIR_DOWN : DIR_HORIZONTAL		1044707	2					
ANR	1044750	Condition	y0 > y1		1044707	0					
ANR	1044751	RelationalExpression	y0 > y1		1044707	0		>			
ANR	1044752	Identifier	y0		1044707	0					
ANR	1044753	Identifier	y1		1044707	1					
ANR	1044754	Identifier	DIR_DOWN		1044707	1					
ANR	1044755	Identifier	DIR_HORIZONTAL		1044707	2					
ANR	1044756	ReturnType	static inline int		1044707	1					
ANR	1044757	Identifier	compute_dir		1044707	2					
ANR	1044758	ParameterList	"const fill_options * fo , fixed y0 , fixed y1"		1044707	3					
ANR	1044759	Parameter	const fill_options * fo	808:12:31340:31361	1044707	0	True				
ANR	1044760	ParameterType	const fill_options *		1044707	0					
ANR	1044761	Identifier	fo		1044707	1					
ANR	1044762	Parameter	fixed y0	808:36:31364:31371	1044707	1	True				
ANR	1044763	ParameterType	fixed		1044707	0					
ANR	1044764	Identifier	y0		1044707	1					
ANR	1044765	Parameter	fixed y1	808:46:31374:31381	1044707	2	True				
ANR	1044766	ParameterType	fixed		1044707	0					
ANR	1044767	Identifier	y1		1044707	1					
ANR	1044768	CFGEntryNode	ENTRY		1044707		True				
ANR	1044769	CFGExitNode	EXIT		1044707		True				
ANR	1044770	Symbol	min		1044707						
ANR	1044771	Symbol	fo -> ymin		1044707						
ANR	1044772	Symbol	max		1044707						
ANR	1044773	Symbol	fo -> ymax		1044707						
ANR	1044774	Symbol	y0		1044707						
ANR	1044775	Symbol	y1		1044707						
ANR	1044776	Symbol	fo		1044707						
ANR	1044777	Symbol	DIR_UP		1044707						
ANR	1044778	Symbol	DIR_OUT_OF_Y_RANGE		1044707						
ANR	1044779	Symbol	DIR_DOWN		1044707						
ANR	1044780	Symbol	* fo		1044707						
ANR	1044781	Symbol	DIR_HORIZONTAL		1044707						
ANR	1044782	Function	add_y_curve_part	818:0:31604:32603							
ANR	1044783	FunctionDef	"add_y_curve_part (line_list * ll , segment * s0 , segment * s1 , int dir , gx_flattened_iterator * fi , bool more1 , bool step_back , bool monotonic_x)"		1044782	0					
ANR	1044784	CompoundStatement		821:0:31766:32603	1044782	0					
ANR	1044785	IdentifierDeclStatement	active_line * alp = make_al ( ll ) ;	822:4:31772:31802	1044782	0	True				
ANR	1044786	IdentifierDecl	* alp = make_al ( ll )		1044782	0					
ANR	1044787	IdentifierDeclType	active_line *		1044782	0					
ANR	1044788	Identifier	alp		1044782	1					
ANR	1044789	AssignmentExpression	* alp = make_al ( ll )		1044782	2		=			
ANR	1044790	Identifier	alp		1044782	0					
ANR	1044791	CallExpression	make_al ( ll )		1044782	1					
ANR	1044792	Callee	make_al		1044782	0					
ANR	1044793	Identifier	make_al		1044782	0					
ANR	1044794	ArgumentList	ll		1044782	1					
ANR	1044795	Argument	ll		1044782	0					
ANR	1044796	Identifier	ll		1044782	0					
ANR	1044797	IdentifierDeclStatement	int code ;	823:4:31808:31816	1044782	1	True				
ANR	1044798	IdentifierDecl	code		1044782	0					
ANR	1044799	IdentifierDeclType	int		1044782	0					
ANR	1044800	Identifier	code		1044782	1					
ANR	1044801	IfStatement	if ( alp == NULL )		1044782	2					
ANR	1044802	Condition	alp == NULL	825:8:31827:31837	1044782	0	True				
ANR	1044803	EqualityExpression	alp == NULL		1044782	0		==			
ANR	1044804	Identifier	alp		1044782	0					
ANR	1044805	Identifier	NULL		1044782	1					
ANR	1044806	ExpressionStatement	return_error ( gs_error_VMerror )	826:8:31848:31878	1044782	1	True				
ANR	1044807	CallExpression	return_error ( gs_error_VMerror )		1044782	0					
ANR	1044808	Callee	return_error		1044782	0					
ANR	1044809	Identifier	return_error		1044782	0					
ANR	1044810	ArgumentList	gs_error_VMerror		1044782	1					
ANR	1044811	Argument	gs_error_VMerror		1044782	0					
ANR	1044812	Identifier	gs_error_VMerror		1044782	0					
ANR	1044813	ExpressionStatement	alp -> pseg = ( dir == DIR_UP ? s1 : s0 )	827:4:31884:31921	1044782	3	True				
ANR	1044814	AssignmentExpression	alp -> pseg = ( dir == DIR_UP ? s1 : s0 )		1044782	0		=			
ANR	1044815	PtrMemberAccess	alp -> pseg		1044782	0					
ANR	1044816	Identifier	alp		1044782	0					
ANR	1044817	Identifier	pseg		1044782	1					
ANR	1044818	ConditionalExpression	dir == DIR_UP ? s1 : s0		1044782	1					
ANR	1044819	Condition	dir == DIR_UP		1044782	0					
ANR	1044820	EqualityExpression	dir == DIR_UP		1044782	0		==			
ANR	1044821	Identifier	dir		1044782	0					
ANR	1044822	Identifier	DIR_UP		1044782	1					
ANR	1044823	Identifier	s1		1044782	1					
ANR	1044824	Identifier	s0		1044782	2					
ANR	1044825	ExpressionStatement	alp -> direction = dir	828:4:31927:31947	1044782	4	True				
ANR	1044826	AssignmentExpression	alp -> direction = dir		1044782	0		=			
ANR	1044827	PtrMemberAccess	alp -> direction		1044782	0					
ANR	1044828	Identifier	alp		1044782	0					
ANR	1044829	Identifier	direction		1044782	1					
ANR	1044830	Identifier	dir		1044782	1					
ANR	1044831	ExpressionStatement	alp -> fi = * fi	829:4:31953:31966	1044782	5	True				
ANR	1044832	AssignmentExpression	alp -> fi = * fi		1044782	0		=			
ANR	1044833	PtrMemberAccess	alp -> fi		1044782	0					
ANR	1044834	Identifier	alp		1044782	0					
ANR	1044835	Identifier	fi		1044782	1					
ANR	1044836	UnaryOperationExpression	* fi		1044782	1					
ANR	1044837	UnaryOperator	*		1044782	0					
ANR	1044838	Identifier	fi		1044782	1					
ANR	1044839	ExpressionStatement	alp -> more_flattened = more1	830:4:31972:31999	1044782	6	True				
ANR	1044840	AssignmentExpression	alp -> more_flattened = more1		1044782	0		=			
ANR	1044841	PtrMemberAccess	alp -> more_flattened		1044782	0					
ANR	1044842	Identifier	alp		1044782	0					
ANR	1044843	Identifier	more_flattened		1044782	1					
ANR	1044844	Identifier	more1		1044782	1					
ANR	1044845	IfStatement	if ( dir != DIR_UP && more1 )		1044782	7					
ANR	1044846	Condition	dir != DIR_UP && more1	831:8:32009:32030	1044782	0	True				
ANR	1044847	AndExpression	dir != DIR_UP && more1		1044782	0		&&			
ANR	1044848	EqualityExpression	dir != DIR_UP		1044782	0		!=			
ANR	1044849	Identifier	dir		1044782	0					
ANR	1044850	Identifier	DIR_UP		1044782	1					
ANR	1044851	Identifier	more1		1044782	1					
ANR	1044852	ExpressionStatement	"gx_flattened_iterator__switch_to_backscan ( & alp -> fi , more1 )"	832:8:32041:32099	1044782	1	True				
ANR	1044853	CallExpression	"gx_flattened_iterator__switch_to_backscan ( & alp -> fi , more1 )"		1044782	0					
ANR	1044854	Callee	gx_flattened_iterator__switch_to_backscan		1044782	0					
ANR	1044855	Identifier	gx_flattened_iterator__switch_to_backscan		1044782	0					
ANR	1044856	ArgumentList	& alp -> fi		1044782	1					
ANR	1044857	Argument	& alp -> fi		1044782	0					
ANR	1044858	UnaryOperationExpression	& alp -> fi		1044782	0					
ANR	1044859	UnaryOperator	&		1044782	0					
ANR	1044860	PtrMemberAccess	alp -> fi		1044782	1					
ANR	1044861	Identifier	alp		1044782	0					
ANR	1044862	Identifier	fi		1044782	1					
ANR	1044863	Argument	more1		1044782	1					
ANR	1044864	Identifier	more1		1044782	0					
ANR	1044865	IfStatement	if ( step_back )		1044782	8					
ANR	1044866	Condition	step_back	833:8:32109:32117	1044782	0	True				
ANR	1044867	Identifier	step_back		1044782	0					
ANR	1044868	CompoundStatement		13:19:353:353	1044782	1					
ANR	1044869	DoStatement	do		1044782	0					
ANR	1044870	CompoundStatement		14:11:366:366	1044782	0					
ANR	1044871	ExpressionStatement	code = gx_flattened_iterator__prev ( & alp -> fi )	835:12:32147:32191	1044782	0	True				
ANR	1044872	AssignmentExpression	code = gx_flattened_iterator__prev ( & alp -> fi )		1044782	0		=			
ANR	1044873	Identifier	code		1044782	0					
ANR	1044874	CallExpression	gx_flattened_iterator__prev ( & alp -> fi )		1044782	1					
ANR	1044875	Callee	gx_flattened_iterator__prev		1044782	0					
ANR	1044876	Identifier	gx_flattened_iterator__prev		1044782	0					
ANR	1044877	ArgumentList	& alp -> fi		1044782	1					
ANR	1044878	Argument	& alp -> fi		1044782	0					
ANR	1044879	UnaryOperationExpression	& alp -> fi		1044782	0					
ANR	1044880	UnaryOperator	&		1044782	0					
ANR	1044881	PtrMemberAccess	alp -> fi		1044782	1					
ANR	1044882	Identifier	alp		1044782	0					
ANR	1044883	Identifier	fi		1044782	1					
ANR	1044884	IfStatement	if ( code < 0 )		1044782	1					
ANR	1044885	Condition	code < 0	836:16:32209:32216	1044782	0	True				
ANR	1044886	RelationalExpression	code < 0		1044782	0		<			
ANR	1044887	Identifier	code		1044782	0					
ANR	1044888	PrimaryExpression	0		1044782	1					
ANR	1044889	ReturnStatement	return code ;	837:16:32235:32246	1044782	1	True				
ANR	1044890	Identifier	code		1044782	0					
ANR	1044891	ExpressionStatement	alp -> more_flattened = code	838:12:32260:32286	1044782	2	True				
ANR	1044892	AssignmentExpression	alp -> more_flattened = code		1044782	0		=			
ANR	1044893	PtrMemberAccess	alp -> more_flattened		1044782	0					
ANR	1044894	Identifier	alp		1044782	0					
ANR	1044895	Identifier	more_flattened		1044782	1					
ANR	1044896	Identifier	code		1044782	1					
ANR	1044897	IfStatement	"if ( compute_dir ( ll -> fo , alp -> fi . ly0 , alp -> fi . ly1 ) != 2 )"		1044782	3					
ANR	1044898	Condition	"compute_dir ( ll -> fo , alp -> fi . ly0 , alp -> fi . ly1 ) != 2"	839:16:32304:32353	1044782	0	True				
ANR	1044899	EqualityExpression	"compute_dir ( ll -> fo , alp -> fi . ly0 , alp -> fi . ly1 ) != 2"		1044782	0		!=			
ANR	1044900	CallExpression	"compute_dir ( ll -> fo , alp -> fi . ly0 , alp -> fi . ly1 )"		1044782	0					
ANR	1044901	Callee	compute_dir		1044782	0					
ANR	1044902	Identifier	compute_dir		1044782	0					
ANR	1044903	ArgumentList	ll -> fo		1044782	1					
ANR	1044904	Argument	ll -> fo		1044782	0					
ANR	1044905	PtrMemberAccess	ll -> fo		1044782	0					
ANR	1044906	Identifier	ll		1044782	0					
ANR	1044907	Identifier	fo		1044782	1					
ANR	1044908	Argument	alp -> fi . ly0		1044782	1					
ANR	1044909	MemberAccess	alp -> fi . ly0		1044782	0					
ANR	1044910	PtrMemberAccess	alp -> fi		1044782	0					
ANR	1044911	Identifier	alp		1044782	0					
ANR	1044912	Identifier	fi		1044782	1					
ANR	1044913	Identifier	ly0		1044782	1					
ANR	1044914	Argument	alp -> fi . ly1		1044782	2					
ANR	1044915	MemberAccess	alp -> fi . ly1		1044782	0					
ANR	1044916	PtrMemberAccess	alp -> fi		1044782	0					
ANR	1044917	Identifier	alp		1044782	0					
ANR	1044918	Identifier	fi		1044782	1					
ANR	1044919	Identifier	ly1		1044782	1					
ANR	1044920	PrimaryExpression	2		1044782	1					
ANR	1044921	BreakStatement	break ;	840:16:32372:32377	1044782	1	True				
ANR	1044922	Condition	alp -> more_flattened	841:17:32396:32414	1044782	1	True				
ANR	1044923	PtrMemberAccess	alp -> more_flattened		1044782	0					
ANR	1044924	Identifier	alp		1044782	0					
ANR	1044925	Identifier	more_flattened		1044782	1					
ANR	1044926	ExpressionStatement	"code = step_al ( alp , false )"	843:4:32428:32454	1044782	9	True				
ANR	1044927	AssignmentExpression	"code = step_al ( alp , false )"		1044782	0		=			
ANR	1044928	Identifier	code		1044782	0					
ANR	1044929	CallExpression	"step_al ( alp , false )"		1044782	1					
ANR	1044930	Callee	step_al		1044782	0					
ANR	1044931	Identifier	step_al		1044782	0					
ANR	1044932	ArgumentList	alp		1044782	1					
ANR	1044933	Argument	alp		1044782	0					
ANR	1044934	Identifier	alp		1044782	0					
ANR	1044935	Argument	false		1044782	1					
ANR	1044936	Identifier	false		1044782	0					
ANR	1044937	IfStatement	if ( code < 0 )		1044782	10					
ANR	1044938	Condition	code < 0	844:8:32464:32471	1044782	0	True				
ANR	1044939	RelationalExpression	code < 0		1044782	0		<			
ANR	1044940	Identifier	code		1044782	0					
ANR	1044941	PrimaryExpression	0		1044782	1					
ANR	1044942	ReturnStatement	return code ;	845:8:32482:32493	1044782	1	True				
ANR	1044943	Identifier	code		1044782	0					
ANR	1044944	ExpressionStatement	alp -> monotonic_y = false	846:4:32499:32523	1044782	11	True				
ANR	1044945	AssignmentExpression	alp -> monotonic_y = false		1044782	0		=			
ANR	1044946	PtrMemberAccess	alp -> monotonic_y		1044782	0					
ANR	1044947	Identifier	alp		1044782	0					
ANR	1044948	Identifier	monotonic_y		1044782	1					
ANR	1044949	Identifier	false		1044782	1					
ANR	1044950	ExpressionStatement	alp -> monotonic_x = monotonic_x	847:4:32529:32559	1044782	12	True				
ANR	1044951	AssignmentExpression	alp -> monotonic_x = monotonic_x		1044782	0		=			
ANR	1044952	PtrMemberAccess	alp -> monotonic_x		1044782	0					
ANR	1044953	Identifier	alp		1044782	0					
ANR	1044954	Identifier	monotonic_x		1044782	1					
ANR	1044955	Identifier	monotonic_x		1044782	1					
ANR	1044956	ExpressionStatement	"insert_y_line ( ll , alp )"	848:4:32565:32587	1044782	13	True				
ANR	1044957	CallExpression	"insert_y_line ( ll , alp )"		1044782	0					
ANR	1044958	Callee	insert_y_line		1044782	0					
ANR	1044959	Identifier	insert_y_line		1044782	0					
ANR	1044960	ArgumentList	ll		1044782	1					
ANR	1044961	Argument	ll		1044782	0					
ANR	1044962	Identifier	ll		1044782	0					
ANR	1044963	Argument	alp		1044782	1					
ANR	1044964	Identifier	alp		1044782	0					
ANR	1044965	ReturnStatement	return 0 ;	849:4:32593:32601	1044782	14	True				
ANR	1044966	PrimaryExpression	0		1044782	0					
ANR	1044967	ReturnType	static inline int		1044782	1					
ANR	1044968	Identifier	add_y_curve_part		1044782	2					
ANR	1044969	ParameterList	"line_list * ll , segment * s0 , segment * s1 , int dir , gx_flattened_iterator * fi , bool more1 , bool step_back , bool monotonic_x"		1044782	3					
ANR	1044970	Parameter	line_list * ll	819:17:31639:31651	1044782	0	True				
ANR	1044971	ParameterType	line_list *		1044782	0					
ANR	1044972	Identifier	ll		1044782	1					
ANR	1044973	Parameter	segment * s0	819:32:31654:31664	1044782	1	True				
ANR	1044974	ParameterType	segment *		1044782	0					
ANR	1044975	Identifier	s0		1044782	1					
ANR	1044976	Parameter	segment * s1	819:45:31667:31677	1044782	2	True				
ANR	1044977	ParameterType	segment *		1044782	0					
ANR	1044978	Identifier	s1		1044782	1					
ANR	1044979	Parameter	int dir	819:58:31680:31686	1044782	3	True				
ANR	1044980	ParameterType	int		1044782	0					
ANR	1044981	Identifier	dir		1044782	1					
ANR	1044982	Parameter	gx_flattened_iterator * fi	820:4:31693:31717	1044782	4	True				
ANR	1044983	ParameterType	gx_flattened_iterator *		1044782	0					
ANR	1044984	Identifier	fi		1044782	1					
ANR	1044985	Parameter	bool more1	820:31:31720:31729	1044782	5	True				
ANR	1044986	ParameterType	bool		1044782	0					
ANR	1044987	Identifier	more1		1044782	1					
ANR	1044988	Parameter	bool step_back	820:43:31732:31745	1044782	6	True				
ANR	1044989	ParameterType	bool		1044782	0					
ANR	1044990	Identifier	step_back		1044782	1					
ANR	1044991	Parameter	bool monotonic_x	820:59:31748:31763	1044782	7	True				
ANR	1044992	ParameterType	bool		1044782	0					
ANR	1044993	Identifier	monotonic_x		1044782	1					
ANR	1044994	CFGEntryNode	ENTRY		1044782		True				
ANR	1044995	CFGExitNode	EXIT		1044782		True				
ANR	1044996	Symbol	ll		1044782						
ANR	1044997	Symbol	alp -> direction		1044782						
ANR	1044998	Symbol	fi		1044782						
ANR	1044999	Symbol	code		1044782						
ANR	1045000	Symbol	more1		1044782						
ANR	1045001	Symbol	alp -> monotonic_y		1044782						
ANR	1045002	Symbol	dir		1044782						
ANR	1045003	Symbol	gx_flattened_iterator__prev		1044782						
ANR	1045004	Symbol	alp -> pseg		1044782						
ANR	1045005	Symbol	alp -> fi		1044782						
ANR	1045006	Symbol	compute_dir		1044782						
ANR	1045007	Symbol	alp -> monotonic_x		1044782						
ANR	1045008	Symbol	step_back		1044782						
ANR	1045009	Symbol	DIR_UP		1044782						
ANR	1045010	Symbol	step_al		1044782						
ANR	1045011	Symbol	s0		1044782						
ANR	1045012	Symbol	monotonic_x		1044782						
ANR	1045013	Symbol	s1		1044782						
ANR	1045014	Symbol	NULL		1044782						
ANR	1045015	Symbol	alp		1044782						
ANR	1045016	Symbol	& alp -> fi		1044782						
ANR	1045017	Symbol	* ll		1044782						
ANR	1045018	Symbol	alp -> fi . ly0		1044782						
ANR	1045019	Symbol	false		1044782						
ANR	1045020	Symbol	alp -> fi . ly1		1044782						
ANR	1045021	Symbol	ll -> fo		1044782						
ANR	1045022	Symbol	* fi		1044782						
ANR	1045023	Symbol	* alp		1044782						
ANR	1045024	Symbol	gs_error_VMerror		1044782						
ANR	1045025	Symbol	alp -> more_flattened		1044782						
ANR	1045026	Symbol	make_al		1044782						
ANR	1045027	Function	add_y_line	852:0:32606:32778							
ANR	1045028	FunctionDef	"add_y_line (const segment * prev_lp , const segment * lp , int dir , line_list * ll)"		1045027	0					
ANR	1045029	CompoundStatement		854:0:32704:32778	1045027	0					
ANR	1045030	ReturnStatement	"return add_y_line_aux ( prev_lp , lp , & lp -> pt , & prev_lp -> pt , dir , ll ) ;"	855:4:32710:32776	1045027	0	True				
ANR	1045031	CallExpression	"add_y_line_aux ( prev_lp , lp , & lp -> pt , & prev_lp -> pt , dir , ll )"		1045027	0					
ANR	1045032	Callee	add_y_line_aux		1045027	0					
ANR	1045033	Identifier	add_y_line_aux		1045027	0					
ANR	1045034	ArgumentList	prev_lp		1045027	1					
ANR	1045035	Argument	prev_lp		1045027	0					
ANR	1045036	Identifier	prev_lp		1045027	0					
ANR	1045037	Argument	lp		1045027	1					
ANR	1045038	Identifier	lp		1045027	0					
ANR	1045039	Argument	& lp -> pt		1045027	2					
ANR	1045040	UnaryOperationExpression	& lp -> pt		1045027	0					
ANR	1045041	UnaryOperator	&		1045027	0					
ANR	1045042	PtrMemberAccess	lp -> pt		1045027	1					
ANR	1045043	Identifier	lp		1045027	0					
ANR	1045044	Identifier	pt		1045027	1					
ANR	1045045	Argument	& prev_lp -> pt		1045027	3					
ANR	1045046	UnaryOperationExpression	& prev_lp -> pt		1045027	0					
ANR	1045047	UnaryOperator	&		1045027	0					
ANR	1045048	PtrMemberAccess	prev_lp -> pt		1045027	1					
ANR	1045049	Identifier	prev_lp		1045027	0					
ANR	1045050	Identifier	pt		1045027	1					
ANR	1045051	Argument	dir		1045027	4					
ANR	1045052	Identifier	dir		1045027	0					
ANR	1045053	Argument	ll		1045027	5					
ANR	1045054	Identifier	ll		1045027	0					
ANR	1045055	ReturnType	static inline int		1045027	1					
ANR	1045056	Identifier	add_y_line		1045027	2					
ANR	1045057	ParameterList	"const segment * prev_lp , const segment * lp , int dir , line_list * ll"		1045027	3					
ANR	1045058	Parameter	const segment * prev_lp	853:11:32635:32657	1045027	0	True				
ANR	1045059	ParameterType	const segment *		1045027	0					
ANR	1045060	Identifier	prev_lp		1045027	1					
ANR	1045061	Parameter	const segment * lp	853:36:32660:32677	1045027	1	True				
ANR	1045062	ParameterType	const segment *		1045027	0					
ANR	1045063	Identifier	lp		1045027	1					
ANR	1045064	Parameter	int dir	853:56:32680:32686	1045027	2	True				
ANR	1045065	ParameterType	int		1045027	0					
ANR	1045066	Identifier	dir		1045027	1					
ANR	1045067	Parameter	line_list * ll	853:65:32689:32701	1045027	3	True				
ANR	1045068	ParameterType	line_list *		1045027	0					
ANR	1045069	Identifier	ll		1045027	1					
ANR	1045070	CFGEntryNode	ENTRY		1045027		True				
ANR	1045071	CFGExitNode	EXIT		1045027		True				
ANR	1045072	Symbol	ll		1045027						
ANR	1045073	Symbol	lp		1045027						
ANR	1045074	Symbol	& prev_lp -> pt		1045027						
ANR	1045075	Symbol	prev_lp		1045027						
ANR	1045076	Symbol	add_y_line_aux		1045027						
ANR	1045077	Symbol	dir		1045027						
ANR	1045078	Symbol	& lp -> pt		1045027						
ANR	1045079	Function	start_al_pair	858:0:32781:33407							
ANR	1045080	FunctionDef	"start_al_pair (line_list * ll , contour_cursor * q , contour_cursor * p)"		1045079	0					
ANR	1045081	CompoundStatement		860:0:32866:33407	1045079	0					
ANR	1045082	IdentifierDeclStatement	int code ;	861:4:32872:32880	1045079	0	True				
ANR	1045083	IdentifierDecl	code		1045079	0					
ANR	1045084	IdentifierDeclType	int		1045079	0					
ANR	1045085	Identifier	code		1045079	1					
ANR	1045086	IfStatement	if ( q -> monotonic_y )		1045079	1					
ANR	1045087	Condition	q -> monotonic_y	863:8:32891:32904	1045079	0	True				
ANR	1045088	PtrMemberAccess	q -> monotonic_y		1045079	0					
ANR	1045089	Identifier	q		1045079	0					
ANR	1045090	Identifier	monotonic_y		1045079	1					
ANR	1045091	ExpressionStatement	"code = add_y_line ( q -> prev , q -> pseg , DIR_DOWN , ll )"	864:8:32915:32964	1045079	1	True				
ANR	1045092	AssignmentExpression	"code = add_y_line ( q -> prev , q -> pseg , DIR_DOWN , ll )"		1045079	0		=			
ANR	1045093	Identifier	code		1045079	0					
ANR	1045094	CallExpression	"add_y_line ( q -> prev , q -> pseg , DIR_DOWN , ll )"		1045079	1					
ANR	1045095	Callee	add_y_line		1045079	0					
ANR	1045096	Identifier	add_y_line		1045079	0					
ANR	1045097	ArgumentList	q -> prev		1045079	1					
ANR	1045098	Argument	q -> prev		1045079	0					
ANR	1045099	PtrMemberAccess	q -> prev		1045079	0					
ANR	1045100	Identifier	q		1045079	0					
ANR	1045101	Identifier	prev		1045079	1					
ANR	1045102	Argument	q -> pseg		1045079	1					
ANR	1045103	PtrMemberAccess	q -> pseg		1045079	0					
ANR	1045104	Identifier	q		1045079	0					
ANR	1045105	Identifier	pseg		1045079	1					
ANR	1045106	Argument	DIR_DOWN		1045079	2					
ANR	1045107	Identifier	DIR_DOWN		1045079	0					
ANR	1045108	Argument	ll		1045079	3					
ANR	1045109	Identifier	ll		1045079	0					
ANR	1045110	ElseStatement	else		1045079	0					
ANR	1045111	ExpressionStatement	"code = add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_DOWN , & q -> fi , ! q -> first_flattened , false , q -> monotonic_x )"	866:8:32983:33118	1045079	0	True				
ANR	1045112	AssignmentExpression	"code = add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_DOWN , & q -> fi , ! q -> first_flattened , false , q -> monotonic_x )"		1045079	0		=			
ANR	1045113	Identifier	code		1045079	0					
ANR	1045114	CallExpression	"add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_DOWN , & q -> fi , ! q -> first_flattened , false , q -> monotonic_x )"		1045079	1					
ANR	1045115	Callee	add_y_curve_part		1045079	0					
ANR	1045116	Identifier	add_y_curve_part		1045079	0					
ANR	1045117	ArgumentList	ll		1045079	1					
ANR	1045118	Argument	ll		1045079	0					
ANR	1045119	Identifier	ll		1045079	0					
ANR	1045120	Argument	q -> prev		1045079	1					
ANR	1045121	PtrMemberAccess	q -> prev		1045079	0					
ANR	1045122	Identifier	q		1045079	0					
ANR	1045123	Identifier	prev		1045079	1					
ANR	1045124	Argument	q -> pseg		1045079	2					
ANR	1045125	PtrMemberAccess	q -> pseg		1045079	0					
ANR	1045126	Identifier	q		1045079	0					
ANR	1045127	Identifier	pseg		1045079	1					
ANR	1045128	Argument	DIR_DOWN		1045079	3					
ANR	1045129	Identifier	DIR_DOWN		1045079	0					
ANR	1045130	Argument	& q -> fi		1045079	4					
ANR	1045131	UnaryOperationExpression	& q -> fi		1045079	0					
ANR	1045132	UnaryOperator	&		1045079	0					
ANR	1045133	PtrMemberAccess	q -> fi		1045079	1					
ANR	1045134	Identifier	q		1045079	0					
ANR	1045135	Identifier	fi		1045079	1					
ANR	1045136	Argument	! q -> first_flattened		1045079	5					
ANR	1045137	UnaryOperationExpression	! q -> first_flattened		1045079	0					
ANR	1045138	UnaryOperator	!		1045079	0					
ANR	1045139	PtrMemberAccess	q -> first_flattened		1045079	1					
ANR	1045140	Identifier	q		1045079	0					
ANR	1045141	Identifier	first_flattened		1045079	1					
ANR	1045142	Argument	false		1045079	6					
ANR	1045143	Identifier	false		1045079	0					
ANR	1045144	Argument	q -> monotonic_x		1045079	7					
ANR	1045145	PtrMemberAccess	q -> monotonic_x		1045079	0					
ANR	1045146	Identifier	q		1045079	0					
ANR	1045147	Identifier	monotonic_x		1045079	1					
ANR	1045148	IfStatement	if ( code < 0 )		1045079	2					
ANR	1045149	Condition	code < 0	868:8:33128:33135	1045079	0	True				
ANR	1045150	RelationalExpression	code < 0		1045079	0		<			
ANR	1045151	Identifier	code		1045079	0					
ANR	1045152	PrimaryExpression	0		1045079	1					
ANR	1045153	ReturnStatement	return code ;	869:8:33146:33157	1045079	1	True				
ANR	1045154	Identifier	code		1045079	0					
ANR	1045155	IfStatement	if ( p -> monotonic_y )		1045079	3					
ANR	1045156	Condition	p -> monotonic_y	870:8:33167:33180	1045079	0	True				
ANR	1045157	PtrMemberAccess	p -> monotonic_y		1045079	0					
ANR	1045158	Identifier	p		1045079	0					
ANR	1045159	Identifier	monotonic_y		1045079	1					
ANR	1045160	ExpressionStatement	"code = add_y_line ( p -> prev , p -> pseg , DIR_UP , ll )"	871:8:33191:33238	1045079	1	True				
ANR	1045161	AssignmentExpression	"code = add_y_line ( p -> prev , p -> pseg , DIR_UP , ll )"		1045079	0		=			
ANR	1045162	Identifier	code		1045079	0					
ANR	1045163	CallExpression	"add_y_line ( p -> prev , p -> pseg , DIR_UP , ll )"		1045079	1					
ANR	1045164	Callee	add_y_line		1045079	0					
ANR	1045165	Identifier	add_y_line		1045079	0					
ANR	1045166	ArgumentList	p -> prev		1045079	1					
ANR	1045167	Argument	p -> prev		1045079	0					
ANR	1045168	PtrMemberAccess	p -> prev		1045079	0					
ANR	1045169	Identifier	p		1045079	0					
ANR	1045170	Identifier	prev		1045079	1					
ANR	1045171	Argument	p -> pseg		1045079	1					
ANR	1045172	PtrMemberAccess	p -> pseg		1045079	0					
ANR	1045173	Identifier	p		1045079	0					
ANR	1045174	Identifier	pseg		1045079	1					
ANR	1045175	Argument	DIR_UP		1045079	2					
ANR	1045176	Identifier	DIR_UP		1045079	0					
ANR	1045177	Argument	ll		1045079	3					
ANR	1045178	Identifier	ll		1045079	0					
ANR	1045179	ElseStatement	else		1045079	0					
ANR	1045180	ExpressionStatement	"code = add_y_curve_part ( ll , p -> prev , p -> pseg , DIR_UP , & p -> fi , p -> more_flattened , false , p -> monotonic_x )"	873:8:33257:33388	1045079	0	True				
ANR	1045181	AssignmentExpression	"code = add_y_curve_part ( ll , p -> prev , p -> pseg , DIR_UP , & p -> fi , p -> more_flattened , false , p -> monotonic_x )"		1045079	0		=			
ANR	1045182	Identifier	code		1045079	0					
ANR	1045183	CallExpression	"add_y_curve_part ( ll , p -> prev , p -> pseg , DIR_UP , & p -> fi , p -> more_flattened , false , p -> monotonic_x )"		1045079	1					
ANR	1045184	Callee	add_y_curve_part		1045079	0					
ANR	1045185	Identifier	add_y_curve_part		1045079	0					
ANR	1045186	ArgumentList	ll		1045079	1					
ANR	1045187	Argument	ll		1045079	0					
ANR	1045188	Identifier	ll		1045079	0					
ANR	1045189	Argument	p -> prev		1045079	1					
ANR	1045190	PtrMemberAccess	p -> prev		1045079	0					
ANR	1045191	Identifier	p		1045079	0					
ANR	1045192	Identifier	prev		1045079	1					
ANR	1045193	Argument	p -> pseg		1045079	2					
ANR	1045194	PtrMemberAccess	p -> pseg		1045079	0					
ANR	1045195	Identifier	p		1045079	0					
ANR	1045196	Identifier	pseg		1045079	1					
ANR	1045197	Argument	DIR_UP		1045079	3					
ANR	1045198	Identifier	DIR_UP		1045079	0					
ANR	1045199	Argument	& p -> fi		1045079	4					
ANR	1045200	UnaryOperationExpression	& p -> fi		1045079	0					
ANR	1045201	UnaryOperator	&		1045079	0					
ANR	1045202	PtrMemberAccess	p -> fi		1045079	1					
ANR	1045203	Identifier	p		1045079	0					
ANR	1045204	Identifier	fi		1045079	1					
ANR	1045205	Argument	p -> more_flattened		1045079	5					
ANR	1045206	PtrMemberAccess	p -> more_flattened		1045079	0					
ANR	1045207	Identifier	p		1045079	0					
ANR	1045208	Identifier	more_flattened		1045079	1					
ANR	1045209	Argument	false		1045079	6					
ANR	1045210	Identifier	false		1045079	0					
ANR	1045211	Argument	p -> monotonic_x		1045079	7					
ANR	1045212	PtrMemberAccess	p -> monotonic_x		1045079	0					
ANR	1045213	Identifier	p		1045079	0					
ANR	1045214	Identifier	monotonic_x		1045079	1					
ANR	1045215	ReturnStatement	return code ;	875:4:33394:33405	1045079	4	True				
ANR	1045216	Identifier	code		1045079	0					
ANR	1045217	ReturnType	static inline int		1045079	1					
ANR	1045218	Identifier	start_al_pair		1045079	2					
ANR	1045219	ParameterList	"line_list * ll , contour_cursor * q , contour_cursor * p"		1045079	3					
ANR	1045220	Parameter	line_list * ll	859:14:32813:32825	1045079	0	True				
ANR	1045221	ParameterType	line_list *		1045079	0					
ANR	1045222	Identifier	ll		1045079	1					
ANR	1045223	Parameter	contour_cursor * q	859:29:32828:32844	1045079	1	True				
ANR	1045224	ParameterType	contour_cursor *		1045079	0					
ANR	1045225	Identifier	q		1045079	1					
ANR	1045226	Parameter	contour_cursor * p	859:48:32847:32863	1045079	2	True				
ANR	1045227	ParameterType	contour_cursor *		1045079	0					
ANR	1045228	Identifier	p		1045079	1					
ANR	1045229	CFGEntryNode	ENTRY		1045079		True				
ANR	1045230	CFGExitNode	EXIT		1045079		True				
ANR	1045231	Symbol	ll		1045079						
ANR	1045232	Symbol	p -> prev		1045079						
ANR	1045233	Symbol	code		1045079						
ANR	1045234	Symbol	add_y_line		1045079						
ANR	1045235	Symbol	q -> prev		1045079						
ANR	1045236	Symbol	q -> first_flattened		1045079						
ANR	1045237	Symbol	p -> more_flattened		1045079						
ANR	1045238	Symbol	false		1045079						
ANR	1045239	Symbol	& q -> fi		1045079						
ANR	1045240	Symbol	add_y_curve_part		1045079						
ANR	1045241	Symbol	DIR_DOWN		1045079						
ANR	1045242	Symbol	p -> monotonic_y		1045079						
ANR	1045243	Symbol	p -> monotonic_x		1045079						
ANR	1045244	Symbol	p		1045079						
ANR	1045245	Symbol	q		1045079						
ANR	1045246	Symbol	& p -> fi		1045079						
ANR	1045247	Symbol	q -> pseg		1045079						
ANR	1045248	Symbol	p -> pseg		1045079						
ANR	1045249	Symbol	q -> monotonic_x		1045079						
ANR	1045250	Symbol	DIR_UP		1045079						
ANR	1045251	Symbol	* p		1045079						
ANR	1045252	Symbol	* q		1045079						
ANR	1045253	Symbol	q -> monotonic_y		1045079						
ANR	1045254	Function	start_al_pair_from_min	879:0:33485:35476							
ANR	1045255	FunctionDef	"start_al_pair_from_min (line_list * ll , contour_cursor * q)"		1045254	0					
ANR	1045256	CompoundStatement		881:0:33553:35476	1045254	0					
ANR	1045257	IdentifierDeclStatement	"int dir , code ;"	882:4:33559:33572	1045254	0	True				
ANR	1045258	IdentifierDecl	dir		1045254	0					
ANR	1045259	IdentifierDeclType	int		1045254	0					
ANR	1045260	Identifier	dir		1045254	1					
ANR	1045261	IdentifierDecl	code		1045254	1					
ANR	1045262	IdentifierDeclType	int		1045254	0					
ANR	1045263	Identifier	code		1045254	1					
ANR	1045264	Statement	const	883:4:33578:33582	1045254	1	True				
ANR	1045265	Statement	fill_options	883:10:33584:33595	1045254	2	True				
ANR	1045266	Statement	*	883:23:33597:33597	1045254	3	True				
ANR	1045267	Statement	const	883:25:33599:33603	1045254	4	True				
ANR	1045268	ExpressionStatement	fo = ll -> fo	883:31:33605:33616	1045254	5	True				
ANR	1045269	AssignmentExpression	fo = ll -> fo		1045254	0		=			
ANR	1045270	Identifier	fo		1045254	0					
ANR	1045271	PtrMemberAccess	ll -> fo		1045254	1					
ANR	1045272	Identifier	ll		1045254	0					
ANR	1045273	Identifier	fo		1045254	1					
ANR	1045274	DoStatement	do		1045254	6					
ANR	1045275	CompoundStatement		6:7:131:131	1045254	0					
ANR	1045276	ExpressionStatement	code = gx_flattened_iterator__next ( & q -> fi )	887:8:33695:33737	1045254	0	True				
ANR	1045277	AssignmentExpression	code = gx_flattened_iterator__next ( & q -> fi )		1045254	0		=			
ANR	1045278	Identifier	code		1045254	0					
ANR	1045279	CallExpression	gx_flattened_iterator__next ( & q -> fi )		1045254	1					
ANR	1045280	Callee	gx_flattened_iterator__next		1045254	0					
ANR	1045281	Identifier	gx_flattened_iterator__next		1045254	0					
ANR	1045282	ArgumentList	& q -> fi		1045254	1					
ANR	1045283	Argument	& q -> fi		1045254	0					
ANR	1045284	UnaryOperationExpression	& q -> fi		1045254	0					
ANR	1045285	UnaryOperator	&		1045254	0					
ANR	1045286	PtrMemberAccess	q -> fi		1045254	1					
ANR	1045287	Identifier	q		1045254	0					
ANR	1045288	Identifier	fi		1045254	1					
ANR	1045289	IfStatement	if ( code < 0 )		1045254	1					
ANR	1045290	Condition	code < 0	888:12:33751:33758	1045254	0	True				
ANR	1045291	RelationalExpression	code < 0		1045254	0		<			
ANR	1045292	Identifier	code		1045254	0					
ANR	1045293	PrimaryExpression	0		1045254	1					
ANR	1045294	ReturnStatement	return code ;	889:12:33773:33784	1045254	1	True				
ANR	1045295	Identifier	code		1045254	0					
ANR	1045296	ExpressionStatement	q -> more_flattened = code	890:8:33794:33818	1045254	2	True				
ANR	1045297	AssignmentExpression	q -> more_flattened = code		1045254	0		=			
ANR	1045298	PtrMemberAccess	q -> more_flattened		1045254	0					
ANR	1045299	Identifier	q		1045254	0					
ANR	1045300	Identifier	more_flattened		1045254	1					
ANR	1045301	Identifier	code		1045254	1					
ANR	1045302	ExpressionStatement	"dir = compute_dir ( fo , q -> fi . ly0 , q -> fi . ly1 )"	891:8:33828:33871	1045254	3	True				
ANR	1045303	AssignmentExpression	"dir = compute_dir ( fo , q -> fi . ly0 , q -> fi . ly1 )"		1045254	0		=			
ANR	1045304	Identifier	dir		1045254	0					
ANR	1045305	CallExpression	"compute_dir ( fo , q -> fi . ly0 , q -> fi . ly1 )"		1045254	1					
ANR	1045306	Callee	compute_dir		1045254	0					
ANR	1045307	Identifier	compute_dir		1045254	0					
ANR	1045308	ArgumentList	fo		1045254	1					
ANR	1045309	Argument	fo		1045254	0					
ANR	1045310	Identifier	fo		1045254	0					
ANR	1045311	Argument	q -> fi . ly0		1045254	1					
ANR	1045312	MemberAccess	q -> fi . ly0		1045254	0					
ANR	1045313	PtrMemberAccess	q -> fi		1045254	0					
ANR	1045314	Identifier	q		1045254	0					
ANR	1045315	Identifier	fi		1045254	1					
ANR	1045316	Identifier	ly0		1045254	1					
ANR	1045317	Argument	q -> fi . ly1		1045254	2					
ANR	1045318	MemberAccess	q -> fi . ly1		1045254	0					
ANR	1045319	PtrMemberAccess	q -> fi		1045254	0					
ANR	1045320	Identifier	q		1045254	0					
ANR	1045321	Identifier	fi		1045254	1					
ANR	1045322	Identifier	ly1		1045254	1					
ANR	1045323	IfStatement	if ( q -> fi . ly0 > fo -> ymax && ll -> y_break > q -> fi . y0 )		1045254	4					
ANR	1045324	Condition	q -> fi . ly0 > fo -> ymax && ll -> y_break > q -> fi . y0	892:12:33885:33930	1045254	0	True				
ANR	1045325	AndExpression	q -> fi . ly0 > fo -> ymax && ll -> y_break > q -> fi . y0		1045254	0		&&			
ANR	1045326	RelationalExpression	q -> fi . ly0 > fo -> ymax		1045254	0		>			
ANR	1045327	MemberAccess	q -> fi . ly0		1045254	0					
ANR	1045328	PtrMemberAccess	q -> fi		1045254	0					
ANR	1045329	Identifier	q		1045254	0					
ANR	1045330	Identifier	fi		1045254	1					
ANR	1045331	Identifier	ly0		1045254	1					
ANR	1045332	PtrMemberAccess	fo -> ymax		1045254	1					
ANR	1045333	Identifier	fo		1045254	0					
ANR	1045334	Identifier	ymax		1045254	1					
ANR	1045335	RelationalExpression	ll -> y_break > q -> fi . y0		1045254	1		>			
ANR	1045336	PtrMemberAccess	ll -> y_break		1045254	0					
ANR	1045337	Identifier	ll		1045254	0					
ANR	1045338	Identifier	y_break		1045254	1					
ANR	1045339	MemberAccess	q -> fi . y0		1045254	1					
ANR	1045340	PtrMemberAccess	q -> fi		1045254	0					
ANR	1045341	Identifier	q		1045254	0					
ANR	1045342	Identifier	fi		1045254	1					
ANR	1045343	Identifier	y0		1045254	1					
ANR	1045344	ExpressionStatement	ll -> y_break = q -> fi . ly0	893:12:33945:33968	1045254	1	True				
ANR	1045345	AssignmentExpression	ll -> y_break = q -> fi . ly0		1045254	0		=			
ANR	1045346	PtrMemberAccess	ll -> y_break		1045254	0					
ANR	1045347	Identifier	ll		1045254	0					
ANR	1045348	Identifier	y_break		1045254	1					
ANR	1045349	MemberAccess	q -> fi . ly0		1045254	1					
ANR	1045350	PtrMemberAccess	q -> fi		1045254	0					
ANR	1045351	Identifier	q		1045254	0					
ANR	1045352	Identifier	fi		1045254	1					
ANR	1045353	Identifier	ly0		1045254	1					
ANR	1045354	IfStatement	if ( q -> fi . ly1 > fo -> ymax && ll -> y_break > q -> fi . ly1 )		1045254	5					
ANR	1045355	Condition	q -> fi . ly1 > fo -> ymax && ll -> y_break > q -> fi . ly1	894:12:33982:34028	1045254	0	True				
ANR	1045356	AndExpression	q -> fi . ly1 > fo -> ymax && ll -> y_break > q -> fi . ly1		1045254	0		&&			
ANR	1045357	RelationalExpression	q -> fi . ly1 > fo -> ymax		1045254	0		>			
ANR	1045358	MemberAccess	q -> fi . ly1		1045254	0					
ANR	1045359	PtrMemberAccess	q -> fi		1045254	0					
ANR	1045360	Identifier	q		1045254	0					
ANR	1045361	Identifier	fi		1045254	1					
ANR	1045362	Identifier	ly1		1045254	1					
ANR	1045363	PtrMemberAccess	fo -> ymax		1045254	1					
ANR	1045364	Identifier	fo		1045254	0					
ANR	1045365	Identifier	ymax		1045254	1					
ANR	1045366	RelationalExpression	ll -> y_break > q -> fi . ly1		1045254	1		>			
ANR	1045367	PtrMemberAccess	ll -> y_break		1045254	0					
ANR	1045368	Identifier	ll		1045254	0					
ANR	1045369	Identifier	y_break		1045254	1					
ANR	1045370	MemberAccess	q -> fi . ly1		1045254	1					
ANR	1045371	PtrMemberAccess	q -> fi		1045254	0					
ANR	1045372	Identifier	q		1045254	0					
ANR	1045373	Identifier	fi		1045254	1					
ANR	1045374	Identifier	ly1		1045254	1					
ANR	1045375	ExpressionStatement	ll -> y_break = q -> fi . ly1	895:12:34043:34066	1045254	1	True				
ANR	1045376	AssignmentExpression	ll -> y_break = q -> fi . ly1		1045254	0		=			
ANR	1045377	PtrMemberAccess	ll -> y_break		1045254	0					
ANR	1045378	Identifier	ll		1045254	0					
ANR	1045379	Identifier	y_break		1045254	1					
ANR	1045380	MemberAccess	q -> fi . ly1		1045254	1					
ANR	1045381	PtrMemberAccess	q -> fi		1045254	0					
ANR	1045382	Identifier	q		1045254	0					
ANR	1045383	Identifier	fi		1045254	1					
ANR	1045384	Identifier	ly1		1045254	1					
ANR	1045385	IfStatement	if ( q -> fi . ly0 >= fo -> ymin )		1045254	6					
ANR	1045386	Condition	q -> fi . ly0 >= fo -> ymin	896:12:34080:34100	1045254	0	True				
ANR	1045387	RelationalExpression	q -> fi . ly0 >= fo -> ymin		1045254	0		>=			
ANR	1045388	MemberAccess	q -> fi . ly0		1045254	0					
ANR	1045389	PtrMemberAccess	q -> fi		1045254	0					
ANR	1045390	Identifier	q		1045254	0					
ANR	1045391	Identifier	fi		1045254	1					
ANR	1045392	Identifier	ly0		1045254	1					
ANR	1045393	PtrMemberAccess	fo -> ymin		1045254	1					
ANR	1045394	Identifier	fo		1045254	0					
ANR	1045395	Identifier	ymin		1045254	1					
ANR	1045396	CompoundStatement		16:35:549:549	1045254	1					
ANR	1045397	IfStatement	if ( dir == DIR_UP && ll -> main_dir == DIR_DOWN )		1045254	0					
ANR	1045398	Condition	dir == DIR_UP && ll -> main_dir == DIR_DOWN	897:16:34121:34161	1045254	0	True				
ANR	1045399	AndExpression	dir == DIR_UP && ll -> main_dir == DIR_DOWN		1045254	0		&&			
ANR	1045400	EqualityExpression	dir == DIR_UP		1045254	0		==			
ANR	1045401	Identifier	dir		1045254	0					
ANR	1045402	Identifier	DIR_UP		1045254	1					
ANR	1045403	EqualityExpression	ll -> main_dir == DIR_DOWN		1045254	1		==			
ANR	1045404	PtrMemberAccess	ll -> main_dir		1045254	0					
ANR	1045405	Identifier	ll		1045254	0					
ANR	1045406	Identifier	main_dir		1045254	1					
ANR	1045407	Identifier	DIR_DOWN		1045254	1					
ANR	1045408	CompoundStatement		17:59:610:610	1045254	1					
ANR	1045409	ExpressionStatement	"code = add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_DOWN , & q -> fi , true , true , q -> monotonic_x )"	898:16:34182:34313	1045254	0	True				
ANR	1045410	AssignmentExpression	"code = add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_DOWN , & q -> fi , true , true , q -> monotonic_x )"		1045254	0		=			
ANR	1045411	Identifier	code		1045254	0					
ANR	1045412	CallExpression	"add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_DOWN , & q -> fi , true , true , q -> monotonic_x )"		1045254	1					
ANR	1045413	Callee	add_y_curve_part		1045254	0					
ANR	1045414	Identifier	add_y_curve_part		1045254	0					
ANR	1045415	ArgumentList	ll		1045254	1					
ANR	1045416	Argument	ll		1045254	0					
ANR	1045417	Identifier	ll		1045254	0					
ANR	1045418	Argument	q -> prev		1045254	1					
ANR	1045419	PtrMemberAccess	q -> prev		1045254	0					
ANR	1045420	Identifier	q		1045254	0					
ANR	1045421	Identifier	prev		1045254	1					
ANR	1045422	Argument	q -> pseg		1045254	2					
ANR	1045423	PtrMemberAccess	q -> pseg		1045254	0					
ANR	1045424	Identifier	q		1045254	0					
ANR	1045425	Identifier	pseg		1045254	1					
ANR	1045426	Argument	DIR_DOWN		1045254	3					
ANR	1045427	Identifier	DIR_DOWN		1045254	0					
ANR	1045428	Argument	& q -> fi		1045254	4					
ANR	1045429	UnaryOperationExpression	& q -> fi		1045254	0					
ANR	1045430	UnaryOperator	&		1045254	0					
ANR	1045431	PtrMemberAccess	q -> fi		1045254	1					
ANR	1045432	Identifier	q		1045254	0					
ANR	1045433	Identifier	fi		1045254	1					
ANR	1045434	Argument	true		1045254	5					
ANR	1045435	Identifier	true		1045254	0					
ANR	1045436	Argument	true		1045254	6					
ANR	1045437	Identifier	true		1045254	0					
ANR	1045438	Argument	q -> monotonic_x		1045254	7					
ANR	1045439	PtrMemberAccess	q -> monotonic_x		1045254	0					
ANR	1045440	Identifier	q		1045254	0					
ANR	1045441	Identifier	monotonic_x		1045254	1					
ANR	1045442	IfStatement	if ( code < 0 )		1045254	1					
ANR	1045443	Condition	code < 0	900:20:34335:34342	1045254	0	True				
ANR	1045444	RelationalExpression	code < 0		1045254	0		<			
ANR	1045445	Identifier	code		1045254	0					
ANR	1045446	PrimaryExpression	0		1045254	1					
ANR	1045447	ReturnStatement	return code ;	901:20:34365:34376	1045254	1	True				
ANR	1045448	Identifier	code		1045254	0					
ANR	1045449	ExpressionStatement	"code = add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_UP , & q -> fi , q -> more_flattened , false , q -> monotonic_x )"	902:16:34394:34537	1045254	2	True				
ANR	1045450	AssignmentExpression	"code = add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_UP , & q -> fi , q -> more_flattened , false , q -> monotonic_x )"		1045254	0		=			
ANR	1045451	Identifier	code		1045254	0					
ANR	1045452	CallExpression	"add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_UP , & q -> fi , q -> more_flattened , false , q -> monotonic_x )"		1045254	1					
ANR	1045453	Callee	add_y_curve_part		1045254	0					
ANR	1045454	Identifier	add_y_curve_part		1045254	0					
ANR	1045455	ArgumentList	ll		1045254	1					
ANR	1045456	Argument	ll		1045254	0					
ANR	1045457	Identifier	ll		1045254	0					
ANR	1045458	Argument	q -> prev		1045254	1					
ANR	1045459	PtrMemberAccess	q -> prev		1045254	0					
ANR	1045460	Identifier	q		1045254	0					
ANR	1045461	Identifier	prev		1045254	1					
ANR	1045462	Argument	q -> pseg		1045254	2					
ANR	1045463	PtrMemberAccess	q -> pseg		1045254	0					
ANR	1045464	Identifier	q		1045254	0					
ANR	1045465	Identifier	pseg		1045254	1					
ANR	1045466	Argument	DIR_UP		1045254	3					
ANR	1045467	Identifier	DIR_UP		1045254	0					
ANR	1045468	Argument	& q -> fi		1045254	4					
ANR	1045469	UnaryOperationExpression	& q -> fi		1045254	0					
ANR	1045470	UnaryOperator	&		1045254	0					
ANR	1045471	PtrMemberAccess	q -> fi		1045254	1					
ANR	1045472	Identifier	q		1045254	0					
ANR	1045473	Identifier	fi		1045254	1					
ANR	1045474	Argument	q -> more_flattened		1045254	5					
ANR	1045475	PtrMemberAccess	q -> more_flattened		1045254	0					
ANR	1045476	Identifier	q		1045254	0					
ANR	1045477	Identifier	more_flattened		1045254	1					
ANR	1045478	Argument	false		1045254	6					
ANR	1045479	Identifier	false		1045254	0					
ANR	1045480	Argument	q -> monotonic_x		1045254	7					
ANR	1045481	PtrMemberAccess	q -> monotonic_x		1045254	0					
ANR	1045482	Identifier	q		1045254	0					
ANR	1045483	Identifier	monotonic_x		1045254	1					
ANR	1045484	IfStatement	if ( code < 0 )		1045254	3					
ANR	1045485	Condition	code < 0	904:20:34559:34566	1045254	0	True				
ANR	1045486	RelationalExpression	code < 0		1045254	0		<			
ANR	1045487	Identifier	code		1045254	0					
ANR	1045488	PrimaryExpression	0		1045254	1					
ANR	1045489	ReturnStatement	return code ;	905:20:34589:34600	1045254	1	True				
ANR	1045490	Identifier	code		1045254	0					
ANR	1045491	ElseStatement	else		1045254	0					
ANR	1045492	IfStatement	if ( q -> fi . ly1 < fo -> ymin )		1045254	0					
ANR	1045493	Condition	q -> fi . ly1 < fo -> ymin	906:23:34625:34644	1045254	0	True				
ANR	1045494	RelationalExpression	q -> fi . ly1 < fo -> ymin		1045254	0		<			
ANR	1045495	MemberAccess	q -> fi . ly1		1045254	0					
ANR	1045496	PtrMemberAccess	q -> fi		1045254	0					
ANR	1045497	Identifier	q		1045254	0					
ANR	1045498	Identifier	fi		1045254	1					
ANR	1045499	Identifier	ly1		1045254	1					
ANR	1045500	PtrMemberAccess	fo -> ymin		1045254	1					
ANR	1045501	Identifier	fo		1045254	0					
ANR	1045502	Identifier	ymin		1045254	1					
ANR	1045503	CompoundStatement		26:45:1093:1093	1045254	1					
ANR	1045504	ExpressionStatement	"code = add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_DOWN , & q -> fi , true , false , q -> monotonic_x )"	907:16:34665:34797	1045254	0	True				
ANR	1045505	AssignmentExpression	"code = add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_DOWN , & q -> fi , true , false , q -> monotonic_x )"		1045254	0		=			
ANR	1045506	Identifier	code		1045254	0					
ANR	1045507	CallExpression	"add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_DOWN , & q -> fi , true , false , q -> monotonic_x )"		1045254	1					
ANR	1045508	Callee	add_y_curve_part		1045254	0					
ANR	1045509	Identifier	add_y_curve_part		1045254	0					
ANR	1045510	ArgumentList	ll		1045254	1					
ANR	1045511	Argument	ll		1045254	0					
ANR	1045512	Identifier	ll		1045254	0					
ANR	1045513	Argument	q -> prev		1045254	1					
ANR	1045514	PtrMemberAccess	q -> prev		1045254	0					
ANR	1045515	Identifier	q		1045254	0					
ANR	1045516	Identifier	prev		1045254	1					
ANR	1045517	Argument	q -> pseg		1045254	2					
ANR	1045518	PtrMemberAccess	q -> pseg		1045254	0					
ANR	1045519	Identifier	q		1045254	0					
ANR	1045520	Identifier	pseg		1045254	1					
ANR	1045521	Argument	DIR_DOWN		1045254	3					
ANR	1045522	Identifier	DIR_DOWN		1045254	0					
ANR	1045523	Argument	& q -> fi		1045254	4					
ANR	1045524	UnaryOperationExpression	& q -> fi		1045254	0					
ANR	1045525	UnaryOperator	&		1045254	0					
ANR	1045526	PtrMemberAccess	q -> fi		1045254	1					
ANR	1045527	Identifier	q		1045254	0					
ANR	1045528	Identifier	fi		1045254	1					
ANR	1045529	Argument	true		1045254	5					
ANR	1045530	Identifier	true		1045254	0					
ANR	1045531	Argument	false		1045254	6					
ANR	1045532	Identifier	false		1045254	0					
ANR	1045533	Argument	q -> monotonic_x		1045254	7					
ANR	1045534	PtrMemberAccess	q -> monotonic_x		1045254	0					
ANR	1045535	Identifier	q		1045254	0					
ANR	1045536	Identifier	monotonic_x		1045254	1					
ANR	1045537	IfStatement	if ( code < 0 )		1045254	1					
ANR	1045538	Condition	code < 0	909:20:34819:34826	1045254	0	True				
ANR	1045539	RelationalExpression	code < 0		1045254	0		<			
ANR	1045540	Identifier	code		1045254	0					
ANR	1045541	PrimaryExpression	0		1045254	1					
ANR	1045542	ReturnStatement	return code ;	910:20:34849:34860	1045254	1	True				
ANR	1045543	Identifier	code		1045254	0					
ANR	1045544	ElseStatement	else		1045254	0					
ANR	1045545	IfStatement	if ( q -> fi . ly1 >= fo -> ymin )		1045254	0					
ANR	1045546	Condition	q -> fi . ly1 >= fo -> ymin	912:19:34895:34915	1045254	0	True				
ANR	1045547	RelationalExpression	q -> fi . ly1 >= fo -> ymin		1045254	0		>=			
ANR	1045548	MemberAccess	q -> fi . ly1		1045254	0					
ANR	1045549	PtrMemberAccess	q -> fi		1045254	0					
ANR	1045550	Identifier	q		1045254	0					
ANR	1045551	Identifier	fi		1045254	1					
ANR	1045552	Identifier	ly1		1045254	1					
ANR	1045553	PtrMemberAccess	fo -> ymin		1045254	1					
ANR	1045554	Identifier	fo		1045254	0					
ANR	1045555	Identifier	ymin		1045254	1					
ANR	1045556	CompoundStatement		32:42:1364:1364	1045254	1					
ANR	1045557	ExpressionStatement	"code = add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_UP , & q -> fi , q -> more_flattened , false , q -> monotonic_x )"	913:12:34932:35071	1045254	0	True				
ANR	1045558	AssignmentExpression	"code = add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_UP , & q -> fi , q -> more_flattened , false , q -> monotonic_x )"		1045254	0		=			
ANR	1045559	Identifier	code		1045254	0					
ANR	1045560	CallExpression	"add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_UP , & q -> fi , q -> more_flattened , false , q -> monotonic_x )"		1045254	1					
ANR	1045561	Callee	add_y_curve_part		1045254	0					
ANR	1045562	Identifier	add_y_curve_part		1045254	0					
ANR	1045563	ArgumentList	ll		1045254	1					
ANR	1045564	Argument	ll		1045254	0					
ANR	1045565	Identifier	ll		1045254	0					
ANR	1045566	Argument	q -> prev		1045254	1					
ANR	1045567	PtrMemberAccess	q -> prev		1045254	0					
ANR	1045568	Identifier	q		1045254	0					
ANR	1045569	Identifier	prev		1045254	1					
ANR	1045570	Argument	q -> pseg		1045254	2					
ANR	1045571	PtrMemberAccess	q -> pseg		1045254	0					
ANR	1045572	Identifier	q		1045254	0					
ANR	1045573	Identifier	pseg		1045254	1					
ANR	1045574	Argument	DIR_UP		1045254	3					
ANR	1045575	Identifier	DIR_UP		1045254	0					
ANR	1045576	Argument	& q -> fi		1045254	4					
ANR	1045577	UnaryOperationExpression	& q -> fi		1045254	0					
ANR	1045578	UnaryOperator	&		1045254	0					
ANR	1045579	PtrMemberAccess	q -> fi		1045254	1					
ANR	1045580	Identifier	q		1045254	0					
ANR	1045581	Identifier	fi		1045254	1					
ANR	1045582	Argument	q -> more_flattened		1045254	5					
ANR	1045583	PtrMemberAccess	q -> more_flattened		1045254	0					
ANR	1045584	Identifier	q		1045254	0					
ANR	1045585	Identifier	more_flattened		1045254	1					
ANR	1045586	Argument	false		1045254	6					
ANR	1045587	Identifier	false		1045254	0					
ANR	1045588	Argument	q -> monotonic_x		1045254	7					
ANR	1045589	PtrMemberAccess	q -> monotonic_x		1045254	0					
ANR	1045590	Identifier	q		1045254	0					
ANR	1045591	Identifier	monotonic_x		1045254	1					
ANR	1045592	IfStatement	if ( code < 0 )		1045254	1					
ANR	1045593	Condition	code < 0	915:16:35089:35096	1045254	0	True				
ANR	1045594	RelationalExpression	code < 0		1045254	0		<			
ANR	1045595	Identifier	code		1045254	0					
ANR	1045596	PrimaryExpression	0		1045254	1					
ANR	1045597	ReturnStatement	return code ;	916:16:35115:35126	1045254	1	True				
ANR	1045598	Identifier	code		1045254	0					
ANR	1045599	ExpressionStatement	q -> first_flattened = false	918:8:35146:35172	1045254	7	True				
ANR	1045600	AssignmentExpression	q -> first_flattened = false		1045254	0		=			
ANR	1045601	PtrMemberAccess	q -> first_flattened		1045254	0					
ANR	1045602	Identifier	q		1045254	0					
ANR	1045603	Identifier	first_flattened		1045254	1					
ANR	1045604	Identifier	false		1045254	1					
ANR	1045605	ExpressionStatement	q -> dir = dir	919:8:35182:35194	1045254	8	True				
ANR	1045606	AssignmentExpression	q -> dir = dir		1045254	0		=			
ANR	1045607	PtrMemberAccess	q -> dir		1045254	0					
ANR	1045608	Identifier	q		1045254	0					
ANR	1045609	Identifier	dir		1045254	1					
ANR	1045610	Identifier	dir		1045254	1					
ANR	1045611	IfStatement	if ( dir == DIR_DOWN || dir == DIR_UP )		1045254	9					
ANR	1045612	Condition	dir == DIR_DOWN || dir == DIR_UP	920:12:35208:35239	1045254	0	True				
ANR	1045613	OrExpression	dir == DIR_DOWN || dir == DIR_UP		1045254	0		||			
ANR	1045614	EqualityExpression	dir == DIR_DOWN		1045254	0		==			
ANR	1045615	Identifier	dir		1045254	0					
ANR	1045616	Identifier	DIR_DOWN		1045254	1					
ANR	1045617	EqualityExpression	dir == DIR_UP		1045254	1		==			
ANR	1045618	Identifier	dir		1045254	0					
ANR	1045619	Identifier	DIR_UP		1045254	1					
ANR	1045620	ExpressionStatement	ll -> main_dir = dir	921:12:35254:35272	1045254	1	True				
ANR	1045621	AssignmentExpression	ll -> main_dir = dir		1045254	0		=			
ANR	1045622	PtrMemberAccess	ll -> main_dir		1045254	0					
ANR	1045623	Identifier	ll		1045254	0					
ANR	1045624	Identifier	main_dir		1045254	1					
ANR	1045625	Identifier	dir		1045254	1					
ANR	1045626	Condition	q -> more_flattened	922:12:35286:35302	1045254	1	True				
ANR	1045627	PtrMemberAccess	q -> more_flattened		1045254	0					
ANR	1045628	Identifier	q		1045254	0					
ANR	1045629	Identifier	more_flattened		1045254	1					
ANR	1045630	ReturnStatement	return 0 ;	924:4:35350:35358	1045254	7	True				
ANR	1045631	PrimaryExpression	0		1045254	0					
ANR	1045632	ReturnType	static int		1045254	1					
ANR	1045633	Identifier	start_al_pair_from_min		1045254	2					
ANR	1045634	ParameterList	"line_list * ll , contour_cursor * q"		1045254	3					
ANR	1045635	Parameter	line_list * ll	880:23:33519:33531	1045254	0	True				
ANR	1045636	ParameterType	line_list *		1045254	0					
ANR	1045637	Identifier	ll		1045254	1					
ANR	1045638	Parameter	contour_cursor * q	880:38:33534:33550	1045254	1	True				
ANR	1045639	ParameterType	contour_cursor *		1045254	0					
ANR	1045640	Identifier	q		1045254	1					
ANR	1045641	CFGEntryNode	ENTRY		1045254		True				
ANR	1045642	CFGExitNode	EXIT		1045254		True				
ANR	1045643	Symbol	ll		1045254						
ANR	1045644	Symbol	code		1045254						
ANR	1045645	Symbol	q -> fi . y0		1045254						
ANR	1045646	Symbol	q -> prev		1045254						
ANR	1045647	Symbol	q -> first_flattened		1045254						
ANR	1045648	Symbol	fo		1045254						
ANR	1045649	Symbol	& q -> fi		1045254						
ANR	1045650	Symbol	add_y_curve_part		1045254						
ANR	1045651	Symbol	DIR_DOWN		1045254						
ANR	1045652	Symbol	dir		1045254						
ANR	1045653	Symbol	gx_flattened_iterator__next		1045254						
ANR	1045654	Symbol	compute_dir		1045254						
ANR	1045655	Symbol	ll -> y_break		1045254						
ANR	1045656	Symbol	q -> pseg		1045254						
ANR	1045657	Symbol	fo -> ymax		1045254						
ANR	1045658	Symbol	DIR_UP		1045254						
ANR	1045659	Symbol	q -> dir		1045254						
ANR	1045660	Symbol	fo -> ymin		1045254						
ANR	1045661	Symbol	* ll		1045254						
ANR	1045662	Symbol	false		1045254						
ANR	1045663	Symbol	ll -> fo		1045254						
ANR	1045664	Symbol	* fo		1045254						
ANR	1045665	Symbol	ll -> main_dir		1045254						
ANR	1045666	Symbol	q		1045254						
ANR	1045667	Symbol	q -> more_flattened		1045254						
ANR	1045668	Symbol	q -> fi		1045254						
ANR	1045669	Symbol	q -> monotonic_x		1045254						
ANR	1045670	Symbol	true		1045254						
ANR	1045671	Symbol	q -> fi . ly0		1045254						
ANR	1045672	Symbol	* q		1045254						
ANR	1045673	Symbol	q -> fi . ly1		1045254						
ANR	1045674	DeclStmt									
ANR	1045675	Decl							curve_segment	curve_segment *	s
ANR	1045676	DeclStmt									
ANR	1045677	Decl							fixed	fixed	ymin
ANR	1045678	DeclStmt									
ANR	1045679	Decl							fixed	fixed	ymax
ANR	1045680	DeclStmt									
ANR	1045681	Decl							bool	bool	in_band
ANR	1045682	DeclStmt									
ANR	1045683	Decl							curve_segment	curve_segment *	s
ANR	1045684	DeclStmt									
ANR	1045685	Decl							int	int	k
ANR	1045686	Function	scan_contour	962:0:36992:44782							
ANR	1045687	FunctionDef	"scan_contour (line_list * ll , segment * pfirst , segment * plast , segment * prev)"		1045686	0					
ANR	1045688	CompoundStatement		964:0:37079:44782	1045686	0					
ANR	1045689	IdentifierDeclStatement	"contour_cursor p , q ;"	965:4:37085:37104	1045686	0	True				
ANR	1045690	IdentifierDecl	p		1045686	0					
ANR	1045691	IdentifierDeclType	contour_cursor		1045686	0					
ANR	1045692	Identifier	p		1045686	1					
ANR	1045693	IdentifierDecl	q		1045686	1					
ANR	1045694	IdentifierDeclType	contour_cursor		1045686	0					
ANR	1045695	Identifier	q		1045686	1					
ANR	1045696	IdentifierDeclStatement	int code ;	966:4:37110:37118	1045686	1	True				
ANR	1045697	IdentifierDecl	code		1045686	0					
ANR	1045698	IdentifierDeclType	int		1045686	0					
ANR	1045699	Identifier	code		1045686	1					
ANR	1045700	IdentifierDeclStatement	"bool only_horizontal = true , saved = false ;"	967:4:37124:37166	1045686	2	True				
ANR	1045701	IdentifierDecl	only_horizontal = true		1045686	0					
ANR	1045702	IdentifierDeclType	bool		1045686	0					
ANR	1045703	Identifier	only_horizontal		1045686	1					
ANR	1045704	AssignmentExpression	only_horizontal = true		1045686	2		=			
ANR	1045705	Identifier	true		1045686	0					
ANR	1045706	Identifier	true		1045686	1					
ANR	1045707	IdentifierDecl	saved = false		1045686	1					
ANR	1045708	IdentifierDeclType	bool		1045686	0					
ANR	1045709	Identifier	saved		1045686	1					
ANR	1045710	AssignmentExpression	saved = false		1045686	2		=			
ANR	1045711	Identifier	false		1045686	0					
ANR	1045712	Identifier	false		1045686	1					
ANR	1045713	Statement	const	968:4:37172:37176	1045686	3	True				
ANR	1045714	Statement	fill_options	968:10:37178:37189	1045686	4	True				
ANR	1045715	Statement	*	968:23:37191:37191	1045686	5	True				
ANR	1045716	Statement	const	968:25:37193:37197	1045686	6	True				
ANR	1045717	ExpressionStatement	fo = ll -> fo	968:31:37199:37210	1045686	7	True				
ANR	1045718	AssignmentExpression	fo = ll -> fo		1045686	0		=			
ANR	1045719	Identifier	fo		1045686	0					
ANR	1045720	PtrMemberAccess	ll -> fo		1045686	1					
ANR	1045721	Identifier	ll		1045686	0					
ANR	1045722	Identifier	fo		1045686	1					
ANR	1045723	IdentifierDeclStatement	contour_cursor save_q ;	969:4:37216:37237	1045686	8	True				
ANR	1045724	IdentifierDecl	save_q		1045686	0					
ANR	1045725	IdentifierDeclType	contour_cursor		1045686	0					
ANR	1045726	Identifier	save_q		1045686	1					
ANR	1045727	ExpressionStatement	q . prev = prev	971:4:37244:37257	1045686	9	True				
ANR	1045728	AssignmentExpression	q . prev = prev		1045686	0		=			
ANR	1045729	MemberAccess	q . prev		1045686	0					
ANR	1045730	Identifier	q		1045686	0					
ANR	1045731	Identifier	prev		1045686	1					
ANR	1045732	Identifier	prev		1045686	1					
ANR	1045733	ExpressionStatement	q . pseg = plast	972:4:37263:37277	1045686	10	True				
ANR	1045734	AssignmentExpression	q . pseg = plast		1045686	0		=			
ANR	1045735	MemberAccess	q . pseg		1045686	0					
ANR	1045736	Identifier	q		1045686	0					
ANR	1045737	Identifier	pseg		1045686	1					
ANR	1045738	Identifier	plast		1045686	1					
ANR	1045739	ExpressionStatement	q . pfirst = pfirst	973:4:37283:37300	1045686	11	True				
ANR	1045740	AssignmentExpression	q . pfirst = pfirst		1045686	0		=			
ANR	1045741	MemberAccess	q . pfirst		1045686	0					
ANR	1045742	Identifier	q		1045686	0					
ANR	1045743	Identifier	pfirst		1045686	1					
ANR	1045744	Identifier	pfirst		1045686	1					
ANR	1045745	ExpressionStatement	q . plast = plast	974:4:37306:37321	1045686	12	True				
ANR	1045746	AssignmentExpression	q . plast = plast		1045686	0		=			
ANR	1045747	MemberAccess	q . plast		1045686	0					
ANR	1045748	Identifier	q		1045686	0					
ANR	1045749	Identifier	plast		1045686	1					
ANR	1045750	Identifier	plast		1045686	1					
ANR	1045751	ExpressionStatement	"memset ( & save_q , 0 , sizeof ( save_q ) )"	976:4:37328:37362	1045686	13	True				
ANR	1045752	CallExpression	"memset ( & save_q , 0 , sizeof ( save_q ) )"		1045686	0					
ANR	1045753	Callee	memset		1045686	0					
ANR	1045754	Identifier	memset		1045686	0					
ANR	1045755	ArgumentList	& save_q		1045686	1					
ANR	1045756	Argument	& save_q		1045686	0					
ANR	1045757	UnaryOperationExpression	& save_q		1045686	0					
ANR	1045758	UnaryOperator	&		1045686	0					
ANR	1045759	Identifier	save_q		1045686	1					
ANR	1045760	Argument	0		1045686	1					
ANR	1045761	PrimaryExpression	0		1045686	0					
ANR	1045762	Argument	sizeof ( save_q )		1045686	2					
ANR	1045763	SizeofExpression	sizeof ( save_q )		1045686	0					
ANR	1045764	Sizeof	sizeof		1045686	0					
ANR	1045765	SizeofOperand	save_q		1045686	1					
ANR	1045766	ExpressionStatement	p . monotonic_x = false	977:4:37393:37414	1045686	14	True				
ANR	1045767	AssignmentExpression	p . monotonic_x = false		1045686	0		=			
ANR	1045768	MemberAccess	p . monotonic_x		1045686	0					
ANR	1045769	Identifier	p		1045686	0					
ANR	1045770	Identifier	monotonic_x		1045686	1					
ANR	1045771	Identifier	false		1045686	1					
ANR	1045772	ExpressionStatement	q . monotonic_x = false	978:4:37445:37466	1045686	15	True				
ANR	1045773	AssignmentExpression	q . monotonic_x = false		1045686	0		=			
ANR	1045774	MemberAccess	q . monotonic_x		1045686	0					
ANR	1045775	Identifier	q		1045686	0					
ANR	1045776	Identifier	monotonic_x		1045686	1					
ANR	1045777	Identifier	false		1045686	1					
ANR	1045778	ExpressionStatement	save_q . dir = DIR_OUT_OF_Y_RANGE	985:4:37880:37911	1045686	16	True				
ANR	1045779	AssignmentExpression	save_q . dir = DIR_OUT_OF_Y_RANGE		1045686	0		=			
ANR	1045780	MemberAccess	save_q . dir		1045686	0					
ANR	1045781	Identifier	save_q		1045686	0					
ANR	1045782	Identifier	dir		1045686	1					
ANR	1045783	Identifier	DIR_OUT_OF_Y_RANGE		1045686	1					
ANR	1045784	ExpressionStatement	ll -> main_dir = DIR_HORIZONTAL	986:4:37917:37946	1045686	17	True				
ANR	1045785	AssignmentExpression	ll -> main_dir = DIR_HORIZONTAL		1045686	0		=			
ANR	1045786	PtrMemberAccess	ll -> main_dir		1045686	0					
ANR	1045787	Identifier	ll		1045686	0					
ANR	1045788	Identifier	main_dir		1045686	1					
ANR	1045789	Identifier	DIR_HORIZONTAL		1045686	1					
ANR	1045790	ForStatement	"for ( ; ; q . pseg = q . prev , q . prev = q . prev -> prev )"		1045686	18					
ANR	1045791	Expression	"q . pseg = q . prev , q . prev = q . prev -> prev"	987:13:37961:37998	1045686	0	True				
ANR	1045792	AssignmentExpression	q . pseg = q . prev		1045686	0		=			
ANR	1045793	MemberAccess	q . pseg		1045686	0					
ANR	1045794	Identifier	q		1045686	0					
ANR	1045795	Identifier	pseg		1045686	1					
ANR	1045796	MemberAccess	q . prev		1045686	1					
ANR	1045797	Identifier	q		1045686	0					
ANR	1045798	Identifier	prev		1045686	1					
ANR	1045799	AssignmentExpression	q . prev = q . prev -> prev		1045686	1		=			
ANR	1045800	MemberAccess	q . prev		1045686	0					
ANR	1045801	Identifier	q		1045686	0					
ANR	1045802	Identifier	prev		1045686	1					
ANR	1045803	PtrMemberAccess	q . prev -> prev		1045686	1					
ANR	1045804	MemberAccess	q . prev		1045686	0					
ANR	1045805	Identifier	q		1045686	0					
ANR	1045806	Identifier	prev		1045686	1					
ANR	1045807	Identifier	prev		1045686	1					
ANR	1045808	CompoundStatement		24:53:921:921	1045686	1					
ANR	1045809	ExpressionStatement	"code = init_contour_cursor ( fo , & q )"	989:8:38089:38123	1045686	0	True				
ANR	1045810	AssignmentExpression	"code = init_contour_cursor ( fo , & q )"		1045686	0		=			
ANR	1045811	Identifier	code		1045686	0					
ANR	1045812	CallExpression	"init_contour_cursor ( fo , & q )"		1045686	1					
ANR	1045813	Callee	init_contour_cursor		1045686	0					
ANR	1045814	Identifier	init_contour_cursor		1045686	0					
ANR	1045815	ArgumentList	fo		1045686	1					
ANR	1045816	Argument	fo		1045686	0					
ANR	1045817	Identifier	fo		1045686	0					
ANR	1045818	Argument	& q		1045686	1					
ANR	1045819	UnaryOperationExpression	& q		1045686	0					
ANR	1045820	UnaryOperator	&		1045686	0					
ANR	1045821	Identifier	q		1045686	1					
ANR	1045822	IfStatement	if ( code < 0 )		1045686	1					
ANR	1045823	Condition	code < 0	990:12:38137:38144	1045686	0	True				
ANR	1045824	RelationalExpression	code < 0		1045686	0		<			
ANR	1045825	Identifier	code		1045686	0					
ANR	1045826	PrimaryExpression	0		1045686	1					
ANR	1045827	ReturnStatement	return code ;	991:12:38159:38170	1045686	1	True				
ANR	1045828	Identifier	code		1045686	0					
ANR	1045829	ForStatement	for ( ; ; )		1045686	2					
ANR	1045830	CompoundStatement		29:17:1109:1109	1045686	0					
ANR	1045831	ExpressionStatement	code = gx_flattened_iterator__next ( & q . fi )	993:12:38203:38244	1045686	0	True				
ANR	1045832	AssignmentExpression	code = gx_flattened_iterator__next ( & q . fi )		1045686	0		=			
ANR	1045833	Identifier	code		1045686	0					
ANR	1045834	CallExpression	gx_flattened_iterator__next ( & q . fi )		1045686	1					
ANR	1045835	Callee	gx_flattened_iterator__next		1045686	0					
ANR	1045836	Identifier	gx_flattened_iterator__next		1045686	0					
ANR	1045837	ArgumentList	& q . fi		1045686	1					
ANR	1045838	Argument	& q . fi		1045686	0					
ANR	1045839	UnaryOperationExpression	& q . fi		1045686	0					
ANR	1045840	UnaryOperator	&		1045686	0					
ANR	1045841	MemberAccess	q . fi		1045686	1					
ANR	1045842	Identifier	q		1045686	0					
ANR	1045843	Identifier	fi		1045686	1					
ANR	1045844	ExpressionStatement	assert ( code >= 0 )	994:12:38258:38275	1045686	1	True				
ANR	1045845	CallExpression	assert ( code >= 0 )		1045686	0					
ANR	1045846	Callee	assert		1045686	0					
ANR	1045847	Identifier	assert		1045686	0					
ANR	1045848	ArgumentList	code >= 0		1045686	1					
ANR	1045849	Argument	code >= 0		1045686	0					
ANR	1045850	RelationalExpression	code >= 0		1045686	0		>=			
ANR	1045851	Identifier	code		1045686	0					
ANR	1045852	PrimaryExpression	0		1045686	1					
ANR	1045853	IfStatement	if ( code < 0 )		1045686	2					
ANR	1045854	Condition	code < 0	995:16:38327:38334	1045686	0	True				
ANR	1045855	RelationalExpression	code < 0		1045686	0		<			
ANR	1045856	Identifier	code		1045686	0					
ANR	1045857	PrimaryExpression	0		1045686	1					
ANR	1045858	ReturnStatement	return code ;	996:16:38353:38364	1045686	1	True				
ANR	1045859	Identifier	code		1045686	0					
ANR	1045860	ExpressionStatement	"q . dir = compute_dir ( fo , q . fi . ly0 , q . fi . ly1 )"	997:12:38378:38421	1045686	3	True				
ANR	1045861	AssignmentExpression	"q . dir = compute_dir ( fo , q . fi . ly0 , q . fi . ly1 )"		1045686	0		=			
ANR	1045862	MemberAccess	q . dir		1045686	0					
ANR	1045863	Identifier	q		1045686	0					
ANR	1045864	Identifier	dir		1045686	1					
ANR	1045865	CallExpression	"compute_dir ( fo , q . fi . ly0 , q . fi . ly1 )"		1045686	1					
ANR	1045866	Callee	compute_dir		1045686	0					
ANR	1045867	Identifier	compute_dir		1045686	0					
ANR	1045868	ArgumentList	fo		1045686	1					
ANR	1045869	Argument	fo		1045686	0					
ANR	1045870	Identifier	fo		1045686	0					
ANR	1045871	Argument	q . fi . ly0		1045686	1					
ANR	1045872	MemberAccess	q . fi . ly0		1045686	0					
ANR	1045873	MemberAccess	q . fi		1045686	0					
ANR	1045874	Identifier	q		1045686	0					
ANR	1045875	Identifier	fi		1045686	1					
ANR	1045876	Identifier	ly0		1045686	1					
ANR	1045877	Argument	q . fi . ly1		1045686	2					
ANR	1045878	MemberAccess	q . fi . ly1		1045686	0					
ANR	1045879	MemberAccess	q . fi		1045686	0					
ANR	1045880	Identifier	q		1045686	0					
ANR	1045881	Identifier	fi		1045686	1					
ANR	1045882	Identifier	ly1		1045686	1					
ANR	1045883	IfStatement	if ( q . dir == DIR_DOWN || q . dir == DIR_UP )		1045686	4					
ANR	1045884	Condition	q . dir == DIR_DOWN || q . dir == DIR_UP	998:16:38439:38474	1045686	0	True				
ANR	1045885	OrExpression	q . dir == DIR_DOWN || q . dir == DIR_UP		1045686	0		||			
ANR	1045886	EqualityExpression	q . dir == DIR_DOWN		1045686	0		==			
ANR	1045887	MemberAccess	q . dir		1045686	0					
ANR	1045888	Identifier	q		1045686	0					
ANR	1045889	Identifier	dir		1045686	1					
ANR	1045890	Identifier	DIR_DOWN		1045686	1					
ANR	1045891	EqualityExpression	q . dir == DIR_UP		1045686	1		==			
ANR	1045892	MemberAccess	q . dir		1045686	0					
ANR	1045893	Identifier	q		1045686	0					
ANR	1045894	Identifier	dir		1045686	1					
ANR	1045895	Identifier	DIR_UP		1045686	1					
ANR	1045896	ExpressionStatement	ll -> main_dir = q . dir	999:16:38493:38513	1045686	1	True				
ANR	1045897	AssignmentExpression	ll -> main_dir = q . dir		1045686	0		=			
ANR	1045898	PtrMemberAccess	ll -> main_dir		1045686	0					
ANR	1045899	Identifier	ll		1045686	0					
ANR	1045900	Identifier	main_dir		1045686	1					
ANR	1045901	MemberAccess	q . dir		1045686	1					
ANR	1045902	Identifier	q		1045686	0					
ANR	1045903	Identifier	dir		1045686	1					
ANR	1045904	IfStatement	if ( ! code )		1045686	5					
ANR	1045905	Condition	! code	1001:16:38611:38615	1045686	0	True				
ANR	1045906	UnaryOperationExpression	! code		1045686	0					
ANR	1045907	UnaryOperator	!		1045686	0					
ANR	1045908	Identifier	code		1045686	1					
ANR	1045909	BreakStatement	break ;	1002:16:38634:38639	1045686	1	True				
ANR	1045910	ExpressionStatement	q . first_flattened = false	1003:12:38653:38678	1045686	6	True				
ANR	1045911	AssignmentExpression	q . first_flattened = false		1045686	0		=			
ANR	1045912	MemberAccess	q . first_flattened		1045686	0					
ANR	1045913	Identifier	q		1045686	0					
ANR	1045914	Identifier	first_flattened		1045686	1					
ANR	1045915	Identifier	false		1045686	1					
ANR	1045916	ExpressionStatement	q . more_flattened = false	1006:8:38779:38803	1045686	3	True				
ANR	1045917	AssignmentExpression	q . more_flattened = false		1045686	0		=			
ANR	1045918	MemberAccess	q . more_flattened		1045686	0					
ANR	1045919	Identifier	q		1045686	0					
ANR	1045920	Identifier	more_flattened		1045686	1					
ANR	1045921	Identifier	false		1045686	1					
ANR	1045922	IfStatement	if ( ll -> main_dir != DIR_HORIZONTAL )		1045686	4					
ANR	1045923	Condition	ll -> main_dir != DIR_HORIZONTAL	1010:12:39019:39048	1045686	0	True				
ANR	1045924	EqualityExpression	ll -> main_dir != DIR_HORIZONTAL		1045686	0		!=			
ANR	1045925	PtrMemberAccess	ll -> main_dir		1045686	0					
ANR	1045926	Identifier	ll		1045686	0					
ANR	1045927	Identifier	main_dir		1045686	1					
ANR	1045928	Identifier	DIR_HORIZONTAL		1045686	1					
ANR	1045929	CompoundStatement		47:44:1971:1971	1045686	1					
ANR	1045930	ExpressionStatement	only_horizontal = false	1011:12:39065:39088	1045686	0	True				
ANR	1045931	AssignmentExpression	only_horizontal = false		1045686	0		=			
ANR	1045932	Identifier	only_horizontal		1045686	0					
ANR	1045933	Identifier	false		1045686	1					
ANR	1045934	BreakStatement	break ;	1013:12:39186:39191	1045686	1	True				
ANR	1045935	IfStatement	if ( ! saved && q . dir != DIR_OUT_OF_Y_RANGE )		1045686	5					
ANR	1045936	Condition	! saved && q . dir != DIR_OUT_OF_Y_RANGE	1018:12:39446:39482	1045686	0	True				
ANR	1045937	AndExpression	! saved && q . dir != DIR_OUT_OF_Y_RANGE		1045686	0		&&			
ANR	1045938	UnaryOperationExpression	! saved		1045686	0					
ANR	1045939	UnaryOperator	!		1045686	0					
ANR	1045940	Identifier	saved		1045686	1					
ANR	1045941	EqualityExpression	q . dir != DIR_OUT_OF_Y_RANGE		1045686	1		!=			
ANR	1045942	MemberAccess	q . dir		1045686	0					
ANR	1045943	Identifier	q		1045686	0					
ANR	1045944	Identifier	dir		1045686	1					
ANR	1045945	Identifier	DIR_OUT_OF_Y_RANGE		1045686	1					
ANR	1045946	CompoundStatement		55:51:2405:2405	1045686	1					
ANR	1045947	ExpressionStatement	save_q = q	1019:12:39499:39509	1045686	0	True				
ANR	1045948	AssignmentExpression	save_q = q		1045686	0		=			
ANR	1045949	Identifier	save_q		1045686	0					
ANR	1045950	Identifier	q		1045686	1					
ANR	1045951	ExpressionStatement	saved = true	1020:12:39523:39535	1045686	1	True				
ANR	1045952	AssignmentExpression	saved = true		1045686	0		=			
ANR	1045953	Identifier	saved		1045686	0					
ANR	1045954	Identifier	true		1045686	1					
ANR	1045955	IfStatement	if ( q . prev == q . pfirst )		1045686	6					
ANR	1045956	Condition	q . prev == q . pfirst	1022:12:39559:39576	1045686	0	True				
ANR	1045957	EqualityExpression	q . prev == q . pfirst		1045686	0		==			
ANR	1045958	MemberAccess	q . prev		1045686	0					
ANR	1045959	Identifier	q		1045686	0					
ANR	1045960	Identifier	prev		1045686	1					
ANR	1045961	MemberAccess	q . pfirst		1045686	1					
ANR	1045962	Identifier	q		1045686	0					
ANR	1045963	Identifier	pfirst		1045686	1					
ANR	1045964	BreakStatement	break ;	1023:12:39591:39596	1045686	1	True				
ANR	1045965	IfStatement	if ( saved )		1045686	19					
ANR	1045966	Condition	saved	1028:8:39781:39785	1045686	0	True				
ANR	1045967	Identifier	saved		1045686	0					
ANR	1045968	CompoundStatement		65:15:2708:2708	1045686	1					
ANR	1045969	ExpressionStatement	q = save_q	1029:8:39798:39808	1045686	0	True				
ANR	1045970	AssignmentExpression	q = save_q		1045686	0		=			
ANR	1045971	Identifier	q		1045686	0					
ANR	1045972	Identifier	save_q		1045686	1					
ANR	1045973	ForStatement	for ( p . prev = q . pfirst ; p . prev != q . plast ; p . prev = p . pseg )		1045686	20					
ANR	1045974	ForInit	p . prev = q . pfirst ;	1034:9:39978:39995	1045686	0	True				
ANR	1045975	AssignmentExpression	p . prev = q . pfirst		1045686	0		=			
ANR	1045976	MemberAccess	p . prev		1045686	0					
ANR	1045977	Identifier	p		1045686	0					
ANR	1045978	Identifier	prev		1045686	1					
ANR	1045979	MemberAccess	q . pfirst		1045686	1					
ANR	1045980	Identifier	q		1045686	0					
ANR	1045981	Identifier	pfirst		1045686	1					
ANR	1045982	Condition	p . prev != q . plast	1034:28:39997:40013	1045686	1	True				
ANR	1045983	EqualityExpression	p . prev != q . plast		1045686	0		!=			
ANR	1045984	MemberAccess	p . prev		1045686	0					
ANR	1045985	Identifier	p		1045686	0					
ANR	1045986	Identifier	prev		1045686	1					
ANR	1045987	MemberAccess	q . plast		1045686	1					
ANR	1045988	Identifier	q		1045686	0					
ANR	1045989	Identifier	plast		1045686	1					
ANR	1045990	AssignmentExpression	p . prev = p . pseg	1034:47:40016:40030	1045686	2	True	=			
ANR	1045991	MemberAccess	p . prev		1045686	0					
ANR	1045992	Identifier	p		1045686	0					
ANR	1045993	Identifier	prev		1045686	1					
ANR	1045994	MemberAccess	p . pseg		1045686	1					
ANR	1045995	Identifier	p		1045686	0					
ANR	1045996	Identifier	pseg		1045686	1					
ANR	1045997	CompoundStatement		72:8:2963:2973	1045686	3					
ANR	1045998	IdentifierDeclStatement	bool added ;	1035:8:40043:40053	1045686	0	True				
ANR	1045999	IdentifierDecl	added		1045686	0					
ANR	1046000	IdentifierDeclType	bool		1045686	0					
ANR	1046001	Identifier	added		1045686	1					
ANR	1046002	ExpressionStatement	p . pseg = p . prev -> next	1036:8:40063:40084	1045686	1	True				
ANR	1046003	AssignmentExpression	p . pseg = p . prev -> next		1045686	0		=			
ANR	1046004	MemberAccess	p . pseg		1045686	0					
ANR	1046005	Identifier	p		1045686	0					
ANR	1046006	Identifier	pseg		1045686	1					
ANR	1046007	PtrMemberAccess	p . prev -> next		1045686	1					
ANR	1046008	MemberAccess	p . prev		1045686	0					
ANR	1046009	Identifier	p		1045686	0					
ANR	1046010	Identifier	prev		1045686	1					
ANR	1046011	Identifier	next		1045686	1					
ANR	1046012	IfStatement	if ( ! only_horizontal && p . pseg -> type != s_curve && p . prev -> pt . x == p . pseg -> pt . x && p . prev -> pt . y == p . pseg -> pt . y )		1045686	2					
ANR	1046013	Condition	! only_horizontal && p . pseg -> type != s_curve && p . prev -> pt . x == p . pseg -> pt . x && p . prev -> pt . y == p . pseg -> pt . y	1038:12:40149:40267	1045686	0	True				
ANR	1046014	AndExpression	! only_horizontal && p . pseg -> type != s_curve && p . prev -> pt . x == p . pseg -> pt . x && p . prev -> pt . y == p . pseg -> pt . y		1045686	0		&&			
ANR	1046015	UnaryOperationExpression	! only_horizontal		1045686	0					
ANR	1046016	UnaryOperator	!		1045686	0					
ANR	1046017	Identifier	only_horizontal		1045686	1					
ANR	1046018	AndExpression	p . pseg -> type != s_curve && p . prev -> pt . x == p . pseg -> pt . x && p . prev -> pt . y == p . pseg -> pt . y		1045686	1		&&			
ANR	1046019	EqualityExpression	p . pseg -> type != s_curve		1045686	0		!=			
ANR	1046020	PtrMemberAccess	p . pseg -> type		1045686	0					
ANR	1046021	MemberAccess	p . pseg		1045686	0					
ANR	1046022	Identifier	p		1045686	0					
ANR	1046023	Identifier	pseg		1045686	1					
ANR	1046024	Identifier	type		1045686	1					
ANR	1046025	Identifier	s_curve		1045686	1					
ANR	1046026	AndExpression	p . prev -> pt . x == p . pseg -> pt . x && p . prev -> pt . y == p . pseg -> pt . y		1045686	1		&&			
ANR	1046027	EqualityExpression	p . prev -> pt . x == p . pseg -> pt . x		1045686	0		==			
ANR	1046028	MemberAccess	p . prev -> pt . x		1045686	0					
ANR	1046029	PtrMemberAccess	p . prev -> pt		1045686	0					
ANR	1046030	MemberAccess	p . prev		1045686	0					
ANR	1046031	Identifier	p		1045686	0					
ANR	1046032	Identifier	prev		1045686	1					
ANR	1046033	Identifier	pt		1045686	1					
ANR	1046034	Identifier	x		1045686	1					
ANR	1046035	MemberAccess	p . pseg -> pt . x		1045686	1					
ANR	1046036	PtrMemberAccess	p . pseg -> pt		1045686	0					
ANR	1046037	MemberAccess	p . pseg		1045686	0					
ANR	1046038	Identifier	p		1045686	0					
ANR	1046039	Identifier	pseg		1045686	1					
ANR	1046040	Identifier	pt		1045686	1					
ANR	1046041	Identifier	x		1045686	1					
ANR	1046042	EqualityExpression	p . prev -> pt . y == p . pseg -> pt . y		1045686	1		==			
ANR	1046043	MemberAccess	p . prev -> pt . y		1045686	0					
ANR	1046044	PtrMemberAccess	p . prev -> pt		1045686	0					
ANR	1046045	MemberAccess	p . prev		1045686	0					
ANR	1046046	Identifier	p		1045686	0					
ANR	1046047	Identifier	prev		1045686	1					
ANR	1046048	Identifier	pt		1045686	1					
ANR	1046049	Identifier	y		1045686	1					
ANR	1046050	MemberAccess	p . pseg -> pt . y		1045686	1					
ANR	1046051	PtrMemberAccess	p . pseg -> pt		1045686	0					
ANR	1046052	MemberAccess	p . pseg		1045686	0					
ANR	1046053	Identifier	p		1045686	0					
ANR	1046054	Identifier	pseg		1045686	1					
ANR	1046055	Identifier	pt		1045686	1					
ANR	1046056	Identifier	y		1045686	1					
ANR	1046057	ContinueStatement	continue ;	1040:12:40282:40290	1045686	1	True				
ANR	1046058	ExpressionStatement	"code = init_contour_cursor ( fo , & p )"	1043:8:40340:40374	1045686	3	True				
ANR	1046059	AssignmentExpression	"code = init_contour_cursor ( fo , & p )"		1045686	0		=			
ANR	1046060	Identifier	code		1045686	0					
ANR	1046061	CallExpression	"init_contour_cursor ( fo , & p )"		1045686	1					
ANR	1046062	Callee	init_contour_cursor		1045686	0					
ANR	1046063	Identifier	init_contour_cursor		1045686	0					
ANR	1046064	ArgumentList	fo		1045686	1					
ANR	1046065	Argument	fo		1045686	0					
ANR	1046066	Identifier	fo		1045686	0					
ANR	1046067	Argument	& p		1045686	1					
ANR	1046068	UnaryOperationExpression	& p		1045686	0					
ANR	1046069	UnaryOperator	&		1045686	0					
ANR	1046070	Identifier	p		1045686	1					
ANR	1046071	IfStatement	if ( code < 0 )		1045686	4					
ANR	1046072	Condition	code < 0	1044:12:40388:40395	1045686	0	True				
ANR	1046073	RelationalExpression	code < 0		1045686	0		<			
ANR	1046074	Identifier	code		1045686	0					
ANR	1046075	PrimaryExpression	0		1045686	1					
ANR	1046076	ReturnStatement	return code ;	1045:12:40410:40421	1045686	1	True				
ANR	1046077	Identifier	code		1045686	0					
ANR	1046078	DoStatement	do		1045686	5					
ANR	1046079	CompoundStatement		84:11:3355:3355	1045686	0					
ANR	1046080	DoStatement	do		1045686	0					
ANR	1046081	CompoundStatement		86:15:3443:3443	1045686	0					
ANR	1046082	ExpressionStatement	code = gx_flattened_iterator__next ( & p . fi )	1050:16:40541:40582	1045686	0	True				
ANR	1046083	AssignmentExpression	code = gx_flattened_iterator__next ( & p . fi )		1045686	0		=			
ANR	1046084	Identifier	code		1045686	0					
ANR	1046085	CallExpression	gx_flattened_iterator__next ( & p . fi )		1045686	1					
ANR	1046086	Callee	gx_flattened_iterator__next		1045686	0					
ANR	1046087	Identifier	gx_flattened_iterator__next		1045686	0					
ANR	1046088	ArgumentList	& p . fi		1045686	1					
ANR	1046089	Argument	& p . fi		1045686	0					
ANR	1046090	UnaryOperationExpression	& p . fi		1045686	0					
ANR	1046091	UnaryOperator	&		1045686	0					
ANR	1046092	MemberAccess	p . fi		1045686	1					
ANR	1046093	Identifier	p		1045686	0					
ANR	1046094	Identifier	fi		1045686	1					
ANR	1046095	ExpressionStatement	assert ( code >= 0 )	1051:16:40600:40617	1045686	1	True				
ANR	1046096	CallExpression	assert ( code >= 0 )		1045686	0					
ANR	1046097	Callee	assert		1045686	0					
ANR	1046098	Identifier	assert		1045686	0					
ANR	1046099	ArgumentList	code >= 0		1045686	1					
ANR	1046100	Argument	code >= 0		1045686	0					
ANR	1046101	RelationalExpression	code >= 0		1045686	0		>=			
ANR	1046102	Identifier	code		1045686	0					
ANR	1046103	PrimaryExpression	0		1045686	1					
ANR	1046104	IfStatement	if ( code < 0 )		1045686	2					
ANR	1046105	Condition	code < 0	1052:20:40673:40680	1045686	0	True				
ANR	1046106	RelationalExpression	code < 0		1045686	0		<			
ANR	1046107	Identifier	code		1045686	0					
ANR	1046108	PrimaryExpression	0		1045686	1					
ANR	1046109	ReturnStatement	return code ;	1053:20:40703:40714	1045686	1	True				
ANR	1046110	Identifier	code		1045686	0					
ANR	1046111	ExpressionStatement	p . more_flattened = code	1054:16:40732:40755	1045686	3	True				
ANR	1046112	AssignmentExpression	p . more_flattened = code		1045686	0		=			
ANR	1046113	MemberAccess	p . more_flattened		1045686	0					
ANR	1046114	Identifier	p		1045686	0					
ANR	1046115	Identifier	more_flattened		1045686	1					
ANR	1046116	Identifier	code		1045686	1					
ANR	1046117	ExpressionStatement	"p . dir = compute_dir ( fo , p . fi . ly0 , p . fi . ly1 )"	1055:16:40773:40816	1045686	4	True				
ANR	1046118	AssignmentExpression	"p . dir = compute_dir ( fo , p . fi . ly0 , p . fi . ly1 )"		1045686	0		=			
ANR	1046119	MemberAccess	p . dir		1045686	0					
ANR	1046120	Identifier	p		1045686	0					
ANR	1046121	Identifier	dir		1045686	1					
ANR	1046122	CallExpression	"compute_dir ( fo , p . fi . ly0 , p . fi . ly1 )"		1045686	1					
ANR	1046123	Callee	compute_dir		1045686	0					
ANR	1046124	Identifier	compute_dir		1045686	0					
ANR	1046125	ArgumentList	fo		1045686	1					
ANR	1046126	Argument	fo		1045686	0					
ANR	1046127	Identifier	fo		1045686	0					
ANR	1046128	Argument	p . fi . ly0		1045686	1					
ANR	1046129	MemberAccess	p . fi . ly0		1045686	0					
ANR	1046130	MemberAccess	p . fi		1045686	0					
ANR	1046131	Identifier	p		1045686	0					
ANR	1046132	Identifier	fi		1045686	1					
ANR	1046133	Identifier	ly0		1045686	1					
ANR	1046134	Argument	p . fi . ly1		1045686	2					
ANR	1046135	MemberAccess	p . fi . ly1		1045686	0					
ANR	1046136	MemberAccess	p . fi		1045686	0					
ANR	1046137	Identifier	p		1045686	0					
ANR	1046138	Identifier	fi		1045686	1					
ANR	1046139	Identifier	ly1		1045686	1					
ANR	1046140	Condition	p . more_flattened && p . dir == DIR_OUT_OF_Y_RANGE	1056:21:40839:40885	1045686	1	True				
ANR	1046141	AndExpression	p . more_flattened && p . dir == DIR_OUT_OF_Y_RANGE		1045686	0		&&			
ANR	1046142	MemberAccess	p . more_flattened		1045686	0					
ANR	1046143	Identifier	p		1045686	0					
ANR	1046144	Identifier	more_flattened		1045686	1					
ANR	1046145	EqualityExpression	p . dir == DIR_OUT_OF_Y_RANGE		1045686	1		==			
ANR	1046146	MemberAccess	p . dir		1045686	0					
ANR	1046147	Identifier	p		1045686	0					
ANR	1046148	Identifier	dir		1045686	1					
ANR	1046149	Identifier	DIR_OUT_OF_Y_RANGE		1045686	1					
ANR	1046150	IfStatement	if ( p . fi . ly0 > fo -> ymax && ll -> y_break > p . fi . ly0 )		1045686	1					
ANR	1046151	Condition	p . fi . ly0 > fo -> ymax && ll -> y_break > p . fi . ly0	1062:16:41158:41202	1045686	0	True				
ANR	1046152	AndExpression	p . fi . ly0 > fo -> ymax && ll -> y_break > p . fi . ly0		1045686	0		&&			
ANR	1046153	RelationalExpression	p . fi . ly0 > fo -> ymax		1045686	0		>			
ANR	1046154	MemberAccess	p . fi . ly0		1045686	0					
ANR	1046155	MemberAccess	p . fi		1045686	0					
ANR	1046156	Identifier	p		1045686	0					
ANR	1046157	Identifier	fi		1045686	1					
ANR	1046158	Identifier	ly0		1045686	1					
ANR	1046159	PtrMemberAccess	fo -> ymax		1045686	1					
ANR	1046160	Identifier	fo		1045686	0					
ANR	1046161	Identifier	ymax		1045686	1					
ANR	1046162	RelationalExpression	ll -> y_break > p . fi . ly0		1045686	1		>			
ANR	1046163	PtrMemberAccess	ll -> y_break		1045686	0					
ANR	1046164	Identifier	ll		1045686	0					
ANR	1046165	Identifier	y_break		1045686	1					
ANR	1046166	MemberAccess	p . fi . ly0		1045686	1					
ANR	1046167	MemberAccess	p . fi		1045686	0					
ANR	1046168	Identifier	p		1045686	0					
ANR	1046169	Identifier	fi		1045686	1					
ANR	1046170	Identifier	ly0		1045686	1					
ANR	1046171	ExpressionStatement	ll -> y_break = p . fi . ly0	1063:16:41221:41243	1045686	1	True				
ANR	1046172	AssignmentExpression	ll -> y_break = p . fi . ly0		1045686	0		=			
ANR	1046173	PtrMemberAccess	ll -> y_break		1045686	0					
ANR	1046174	Identifier	ll		1045686	0					
ANR	1046175	Identifier	y_break		1045686	1					
ANR	1046176	MemberAccess	p . fi . ly0		1045686	1					
ANR	1046177	MemberAccess	p . fi		1045686	0					
ANR	1046178	Identifier	p		1045686	0					
ANR	1046179	Identifier	fi		1045686	1					
ANR	1046180	Identifier	ly0		1045686	1					
ANR	1046181	IfStatement	if ( p . fi . ly1 > fo -> ymax && ll -> y_break > p . fi . ly1 )		1045686	2					
ANR	1046182	Condition	p . fi . ly1 > fo -> ymax && ll -> y_break > p . fi . ly1	1064:16:41261:41305	1045686	0	True				
ANR	1046183	AndExpression	p . fi . ly1 > fo -> ymax && ll -> y_break > p . fi . ly1		1045686	0		&&			
ANR	1046184	RelationalExpression	p . fi . ly1 > fo -> ymax		1045686	0		>			
ANR	1046185	MemberAccess	p . fi . ly1		1045686	0					
ANR	1046186	MemberAccess	p . fi		1045686	0					
ANR	1046187	Identifier	p		1045686	0					
ANR	1046188	Identifier	fi		1045686	1					
ANR	1046189	Identifier	ly1		1045686	1					
ANR	1046190	PtrMemberAccess	fo -> ymax		1045686	1					
ANR	1046191	Identifier	fo		1045686	0					
ANR	1046192	Identifier	ymax		1045686	1					
ANR	1046193	RelationalExpression	ll -> y_break > p . fi . ly1		1045686	1		>			
ANR	1046194	PtrMemberAccess	ll -> y_break		1045686	0					
ANR	1046195	Identifier	ll		1045686	0					
ANR	1046196	Identifier	y_break		1045686	1					
ANR	1046197	MemberAccess	p . fi . ly1		1045686	1					
ANR	1046198	MemberAccess	p . fi		1045686	0					
ANR	1046199	Identifier	p		1045686	0					
ANR	1046200	Identifier	fi		1045686	1					
ANR	1046201	Identifier	ly1		1045686	1					
ANR	1046202	ExpressionStatement	ll -> y_break = p . fi . ly1	1065:16:41324:41346	1045686	1	True				
ANR	1046203	AssignmentExpression	ll -> y_break = p . fi . ly1		1045686	0		=			
ANR	1046204	PtrMemberAccess	ll -> y_break		1045686	0					
ANR	1046205	Identifier	ll		1045686	0					
ANR	1046206	Identifier	y_break		1045686	1					
ANR	1046207	MemberAccess	p . fi . ly1		1045686	1					
ANR	1046208	MemberAccess	p . fi		1045686	0					
ANR	1046209	Identifier	p		1045686	0					
ANR	1046210	Identifier	fi		1045686	1					
ANR	1046211	Identifier	ly1		1045686	1					
ANR	1046212	ExpressionStatement	added = 0	1067:12:41361:41370	1045686	3	True				
ANR	1046213	AssignmentExpression	added = 0		1045686	0		=			
ANR	1046214	Identifier	added		1045686	0					
ANR	1046215	PrimaryExpression	0		1045686	1					
ANR	1046216	IfStatement	if ( p . dir == DIR_HORIZONTAL )		1045686	4					
ANR	1046217	Condition	p . dir == DIR_HORIZONTAL	1068:16:41388:41410	1045686	0	True				
ANR	1046218	EqualityExpression	p . dir == DIR_HORIZONTAL		1045686	0		==			
ANR	1046219	MemberAccess	p . dir		1045686	0					
ANR	1046220	Identifier	p		1045686	0					
ANR	1046221	Identifier	dir		1045686	1					
ANR	1046222	Identifier	DIR_HORIZONTAL		1045686	1					
ANR	1046223	CompoundStatement		105:41:4333:4333	1045686	1					
ANR	1046224	IfStatement	if ( p . monotonic_y )		1045686	0					
ANR	1046225	Condition	p . monotonic_y	1069:20:41435:41447	1045686	0	True				
ANR	1046226	MemberAccess	p . monotonic_y		1045686	0					
ANR	1046227	Identifier	p		1045686	0					
ANR	1046228	Identifier	monotonic_y		1045686	1					
ANR	1046229	CompoundStatement		106:35:4370:4370	1045686	1					
ANR	1046230	Statement	if	1070:20:41472:41473	1045686	0	True				
ANR	1046231	Statement	(	1070:23:41475:41475	1045686	1	True				
ANR	1046232	Statement	(	1072:24:41524:41524	1045686	2	True				
ANR	1046233	Statement	fo	1072:25:41525:41526	1045686	3	True				
ANR	1046234	Statement	->	1072:27:41527:41528	1045686	4	True				
ANR	1046235	Statement	adjust_below	1072:29:41529:41540	1045686	5	True				
ANR	1046236	Statement	|	1072:42:41542:41542	1045686	6	True				
ANR	1046237	Statement	fo	1072:44:41544:41545	1045686	7	True				
ANR	1046238	Statement	->	1072:46:41546:41547	1045686	8	True				
ANR	1046239	Statement	adjust_above	1072:48:41548:41559	1045686	9	True				
ANR	1046240	Statement	)	1072:60:41560:41560	1045686	10	True				
ANR	1046241	Statement	!=	1072:62:41562:41563	1045686	11	True				
ANR	1046242	Statement	0	1072:65:41565:41565	1045686	12	True				
ANR	1046243	Statement	)	1072:66:41566:41566	1045686	13	True				
ANR	1046244	CompoundStatement		109:68:4488:4488	1045686	14					
ANR	1046245	ExpressionStatement	"code = add_y_line ( p . prev , p . pseg , DIR_HORIZONTAL , ll )"	1079:24:41952:42005	1045686	0	True				
ANR	1046246	AssignmentExpression	"code = add_y_line ( p . prev , p . pseg , DIR_HORIZONTAL , ll )"		1045686	0		=			
ANR	1046247	Identifier	code		1045686	0					
ANR	1046248	CallExpression	"add_y_line ( p . prev , p . pseg , DIR_HORIZONTAL , ll )"		1045686	1					
ANR	1046249	Callee	add_y_line		1045686	0					
ANR	1046250	Identifier	add_y_line		1045686	0					
ANR	1046251	ArgumentList	p . prev		1045686	1					
ANR	1046252	Argument	p . prev		1045686	0					
ANR	1046253	MemberAccess	p . prev		1045686	0					
ANR	1046254	Identifier	p		1045686	0					
ANR	1046255	Identifier	prev		1045686	1					
ANR	1046256	Argument	p . pseg		1045686	1					
ANR	1046257	MemberAccess	p . pseg		1045686	0					
ANR	1046258	Identifier	p		1045686	0					
ANR	1046259	Identifier	pseg		1045686	1					
ANR	1046260	Argument	DIR_HORIZONTAL		1045686	2					
ANR	1046261	Identifier	DIR_HORIZONTAL		1045686	0					
ANR	1046262	Argument	ll		1045686	3					
ANR	1046263	Identifier	ll		1045686	0					
ANR	1046264	IfStatement	if ( code < 0 )		1045686	1					
ANR	1046265	Condition	code < 0	1080:28:42035:42042	1045686	0	True				
ANR	1046266	RelationalExpression	code < 0		1045686	0		<			
ANR	1046267	Identifier	code		1045686	0					
ANR	1046268	PrimaryExpression	0		1045686	1					
ANR	1046269	ReturnStatement	return code ;	1081:28:42073:42084	1045686	1	True				
ANR	1046270	Identifier	code		1045686	0					
ANR	1046271	ExpressionStatement	added = 1	1082:24:42110:42119	1045686	2	True				
ANR	1046272	AssignmentExpression	added = 1		1045686	0		=			
ANR	1046273	Identifier	added		1045686	0					
ANR	1046274	PrimaryExpression	1		1045686	1					
ANR	1046275	ElseStatement	else		1045686	0					
ANR	1046276	CompoundStatement		122:19:5100:5100	1045686	0					
ANR	1046277	IfStatement	if ( p . fi . ly0 >= fo -> ymin )		1045686	0					
ANR	1046278	Condition	p . fi . ly0 >= fo -> ymin	1086:20:42202:42221	1045686	0	True				
ANR	1046279	RelationalExpression	p . fi . ly0 >= fo -> ymin		1045686	0		>=			
ANR	1046280	MemberAccess	p . fi . ly0		1045686	0					
ANR	1046281	MemberAccess	p . fi		1045686	0					
ANR	1046282	Identifier	p		1045686	0					
ANR	1046283	Identifier	fi		1045686	1					
ANR	1046284	Identifier	ly0		1045686	1					
ANR	1046285	PtrMemberAccess	fo -> ymin		1045686	1					
ANR	1046286	Identifier	fo		1045686	0					
ANR	1046287	Identifier	ymin		1045686	1					
ANR	1046288	CompoundStatement		124:16:5160:5160	1045686	1					
ANR	1046289	IfStatement	if ( p . dir == DIR_UP && ll -> main_dir == DIR_DOWN )		1045686	0					
ANR	1046290	Condition	p . dir == DIR_UP && ll -> main_dir == DIR_DOWN	1088:24:42266:42308	1045686	0	True				
ANR	1046291	AndExpression	p . dir == DIR_UP && ll -> main_dir == DIR_DOWN		1045686	0		&&			
ANR	1046292	EqualityExpression	p . dir == DIR_UP		1045686	0		==			
ANR	1046293	MemberAccess	p . dir		1045686	0					
ANR	1046294	Identifier	p		1045686	0					
ANR	1046295	Identifier	dir		1045686	1					
ANR	1046296	Identifier	DIR_UP		1045686	1					
ANR	1046297	EqualityExpression	ll -> main_dir == DIR_DOWN		1045686	1		==			
ANR	1046298	PtrMemberAccess	ll -> main_dir		1045686	0					
ANR	1046299	Identifier	ll		1045686	0					
ANR	1046300	Identifier	main_dir		1045686	1					
ANR	1046301	Identifier	DIR_DOWN		1045686	1					
ANR	1046302	CompoundStatement		125:69:5231:5231	1045686	1					
ANR	1046303	ExpressionStatement	"code = start_al_pair ( ll , & q , & p )"	1091:24:42530:42562	1045686	0	True				
ANR	1046304	AssignmentExpression	"code = start_al_pair ( ll , & q , & p )"		1045686	0		=			
ANR	1046305	Identifier	code		1045686	0					
ANR	1046306	CallExpression	"start_al_pair ( ll , & q , & p )"		1045686	1					
ANR	1046307	Callee	start_al_pair		1045686	0					
ANR	1046308	Identifier	start_al_pair		1045686	0					
ANR	1046309	ArgumentList	ll		1045686	1					
ANR	1046310	Argument	ll		1045686	0					
ANR	1046311	Identifier	ll		1045686	0					
ANR	1046312	Argument	& q		1045686	1					
ANR	1046313	UnaryOperationExpression	& q		1045686	0					
ANR	1046314	UnaryOperator	&		1045686	0					
ANR	1046315	Identifier	q		1045686	1					
ANR	1046316	Argument	& p		1045686	2					
ANR	1046317	UnaryOperationExpression	& p		1045686	0					
ANR	1046318	UnaryOperator	&		1045686	0					
ANR	1046319	Identifier	p		1045686	1					
ANR	1046320	IfStatement	if ( code < 0 )		1045686	1					
ANR	1046321	Condition	code < 0	1092:28:42592:42599	1045686	0	True				
ANR	1046322	RelationalExpression	code < 0		1045686	0		<			
ANR	1046323	Identifier	code		1045686	0					
ANR	1046324	PrimaryExpression	0		1045686	1					
ANR	1046325	ReturnStatement	return code ;	1093:28:42630:42641	1045686	1	True				
ANR	1046326	Identifier	code		1045686	0					
ANR	1046327	ExpressionStatement	added = 1	1094:24:42667:42676	1045686	2	True				
ANR	1046328	AssignmentExpression	added = 1		1045686	0		=			
ANR	1046329	Identifier	added		1045686	0					
ANR	1046330	PrimaryExpression	1		1045686	1					
ANR	1046331	ElseStatement	else		1045686	0					
ANR	1046332	IfStatement	if ( p . fi . ly1 < fo -> ymin )		1045686	0					
ANR	1046333	Condition	p . fi . ly1 < fo -> ymin	1095:31:42709:42727	1045686	0	True				
ANR	1046334	RelationalExpression	p . fi . ly1 < fo -> ymin		1045686	0		<			
ANR	1046335	MemberAccess	p . fi . ly1		1045686	0					
ANR	1046336	MemberAccess	p . fi		1045686	0					
ANR	1046337	Identifier	p		1045686	0					
ANR	1046338	Identifier	fi		1045686	1					
ANR	1046339	Identifier	ly1		1045686	1					
ANR	1046340	PtrMemberAccess	fo -> ymin		1045686	1					
ANR	1046341	Identifier	fo		1045686	0					
ANR	1046342	Identifier	ymin		1045686	1					
ANR	1046343	CompoundStatement		132:52:5650:5650	1045686	1					
ANR	1046344	IfStatement	if ( p . monotonic_y )		1045686	0					
ANR	1046345	Condition	p . monotonic_y	1097:28:42810:42822	1045686	0	True				
ANR	1046346	MemberAccess	p . monotonic_y		1045686	0					
ANR	1046347	Identifier	p		1045686	0					
ANR	1046348	Identifier	monotonic_y		1045686	1					
ANR	1046349	ExpressionStatement	"code = add_y_line ( p . prev , p . pseg , DIR_DOWN , ll )"	1098:28:42853:42900	1045686	1	True				
ANR	1046350	AssignmentExpression	"code = add_y_line ( p . prev , p . pseg , DIR_DOWN , ll )"		1045686	0		=			
ANR	1046351	Identifier	code		1045686	0					
ANR	1046352	CallExpression	"add_y_line ( p . prev , p . pseg , DIR_DOWN , ll )"		1045686	1					
ANR	1046353	Callee	add_y_line		1045686	0					
ANR	1046354	Identifier	add_y_line		1045686	0					
ANR	1046355	ArgumentList	p . prev		1045686	1					
ANR	1046356	Argument	p . prev		1045686	0					
ANR	1046357	MemberAccess	p . prev		1045686	0					
ANR	1046358	Identifier	p		1045686	0					
ANR	1046359	Identifier	prev		1045686	1					
ANR	1046360	Argument	p . pseg		1045686	1					
ANR	1046361	MemberAccess	p . pseg		1045686	0					
ANR	1046362	Identifier	p		1045686	0					
ANR	1046363	Identifier	pseg		1045686	1					
ANR	1046364	Argument	DIR_DOWN		1045686	2					
ANR	1046365	Identifier	DIR_DOWN		1045686	0					
ANR	1046366	Argument	ll		1045686	3					
ANR	1046367	Identifier	ll		1045686	0					
ANR	1046368	ElseStatement	else		1045686	0					
ANR	1046369	ExpressionStatement	"code = add_y_curve_part ( ll , p . prev , p . pseg , DIR_DOWN , & p . fi , ! p . first_flattened , false , p . monotonic_x )"	1100:28:42959:43113	1045686	0	True				
ANR	1046370	AssignmentExpression	"code = add_y_curve_part ( ll , p . prev , p . pseg , DIR_DOWN , & p . fi , ! p . first_flattened , false , p . monotonic_x )"		1045686	0		=			
ANR	1046371	Identifier	code		1045686	0					
ANR	1046372	CallExpression	"add_y_curve_part ( ll , p . prev , p . pseg , DIR_DOWN , & p . fi , ! p . first_flattened , false , p . monotonic_x )"		1045686	1					
ANR	1046373	Callee	add_y_curve_part		1045686	0					
ANR	1046374	Identifier	add_y_curve_part		1045686	0					
ANR	1046375	ArgumentList	ll		1045686	1					
ANR	1046376	Argument	ll		1045686	0					
ANR	1046377	Identifier	ll		1045686	0					
ANR	1046378	Argument	p . prev		1045686	1					
ANR	1046379	MemberAccess	p . prev		1045686	0					
ANR	1046380	Identifier	p		1045686	0					
ANR	1046381	Identifier	prev		1045686	1					
ANR	1046382	Argument	p . pseg		1045686	2					
ANR	1046383	MemberAccess	p . pseg		1045686	0					
ANR	1046384	Identifier	p		1045686	0					
ANR	1046385	Identifier	pseg		1045686	1					
ANR	1046386	Argument	DIR_DOWN		1045686	3					
ANR	1046387	Identifier	DIR_DOWN		1045686	0					
ANR	1046388	Argument	& p . fi		1045686	4					
ANR	1046389	UnaryOperationExpression	& p . fi		1045686	0					
ANR	1046390	UnaryOperator	&		1045686	0					
ANR	1046391	MemberAccess	p . fi		1045686	1					
ANR	1046392	Identifier	p		1045686	0					
ANR	1046393	Identifier	fi		1045686	1					
ANR	1046394	Argument	! p . first_flattened		1045686	5					
ANR	1046395	UnaryOperationExpression	! p . first_flattened		1045686	0					
ANR	1046396	UnaryOperator	!		1045686	0					
ANR	1046397	MemberAccess	p . first_flattened		1045686	1					
ANR	1046398	Identifier	p		1045686	0					
ANR	1046399	Identifier	first_flattened		1045686	1					
ANR	1046400	Argument	false		1045686	6					
ANR	1046401	Identifier	false		1045686	0					
ANR	1046402	Argument	p . monotonic_x		1045686	7					
ANR	1046403	MemberAccess	p . monotonic_x		1045686	0					
ANR	1046404	Identifier	p		1045686	0					
ANR	1046405	Identifier	monotonic_x		1045686	1					
ANR	1046406	IfStatement	if ( code < 0 )		1045686	1					
ANR	1046407	Condition	code < 0	1102:28:43143:43150	1045686	0	True				
ANR	1046408	RelationalExpression	code < 0		1045686	0		<			
ANR	1046409	Identifier	code		1045686	0					
ANR	1046410	PrimaryExpression	0		1045686	1					
ANR	1046411	ReturnStatement	return code ;	1103:28:43181:43192	1045686	1	True				
ANR	1046412	Identifier	code		1045686	0					
ANR	1046413	ExpressionStatement	added = 1	1104:24:43218:43227	1045686	2	True				
ANR	1046414	AssignmentExpression	added = 1		1045686	0		=			
ANR	1046415	Identifier	added		1045686	0					
ANR	1046416	PrimaryExpression	1		1045686	1					
ANR	1046417	ElseStatement	else		1045686	0					
ANR	1046418	IfStatement	if ( p . fi . ly1 >= fo -> ymin )		1045686	0					
ANR	1046419	Condition	p . fi . ly1 >= fo -> ymin	1106:27:43278:43297	1045686	0	True				
ANR	1046420	RelationalExpression	p . fi . ly1 >= fo -> ymin		1045686	0		>=			
ANR	1046421	MemberAccess	p . fi . ly1		1045686	0					
ANR	1046422	MemberAccess	p . fi		1045686	0					
ANR	1046423	Identifier	p		1045686	0					
ANR	1046424	Identifier	fi		1045686	1					
ANR	1046425	Identifier	ly1		1045686	1					
ANR	1046426	PtrMemberAccess	fo -> ymin		1045686	1					
ANR	1046427	Identifier	fo		1045686	0					
ANR	1046428	Identifier	ymin		1045686	1					
ANR	1046429	CompoundStatement		143:49:6220:6220	1045686	1					
ANR	1046430	IfStatement	if ( p . monotonic_y )		1045686	0					
ANR	1046431	Condition	p . monotonic_y	1108:24:43370:43382	1045686	0	True				
ANR	1046432	MemberAccess	p . monotonic_y		1045686	0					
ANR	1046433	Identifier	p		1045686	0					
ANR	1046434	Identifier	monotonic_y		1045686	1					
ANR	1046435	ExpressionStatement	"code = add_y_line ( p . prev , p . pseg , DIR_UP , ll )"	1109:24:43409:43454	1045686	1	True				
ANR	1046436	AssignmentExpression	"code = add_y_line ( p . prev , p . pseg , DIR_UP , ll )"		1045686	0		=			
ANR	1046437	Identifier	code		1045686	0					
ANR	1046438	CallExpression	"add_y_line ( p . prev , p . pseg , DIR_UP , ll )"		1045686	1					
ANR	1046439	Callee	add_y_line		1045686	0					
ANR	1046440	Identifier	add_y_line		1045686	0					
ANR	1046441	ArgumentList	p . prev		1045686	1					
ANR	1046442	Argument	p . prev		1045686	0					
ANR	1046443	MemberAccess	p . prev		1045686	0					
ANR	1046444	Identifier	p		1045686	0					
ANR	1046445	Identifier	prev		1045686	1					
ANR	1046446	Argument	p . pseg		1045686	1					
ANR	1046447	MemberAccess	p . pseg		1045686	0					
ANR	1046448	Identifier	p		1045686	0					
ANR	1046449	Identifier	pseg		1045686	1					
ANR	1046450	Argument	DIR_UP		1045686	2					
ANR	1046451	Identifier	DIR_UP		1045686	0					
ANR	1046452	Argument	ll		1045686	3					
ANR	1046453	Identifier	ll		1045686	0					
ANR	1046454	ElseStatement	else		1045686	0					
ANR	1046455	ExpressionStatement	"code = add_y_curve_part ( ll , p . prev , p . pseg , DIR_UP , & p . fi , p . more_flattened , false , p . monotonic_x )"	1111:24:43505:43651	1045686	0	True				
ANR	1046456	AssignmentExpression	"code = add_y_curve_part ( ll , p . prev , p . pseg , DIR_UP , & p . fi , p . more_flattened , false , p . monotonic_x )"		1045686	0		=			
ANR	1046457	Identifier	code		1045686	0					
ANR	1046458	CallExpression	"add_y_curve_part ( ll , p . prev , p . pseg , DIR_UP , & p . fi , p . more_flattened , false , p . monotonic_x )"		1045686	1					
ANR	1046459	Callee	add_y_curve_part		1045686	0					
ANR	1046460	Identifier	add_y_curve_part		1045686	0					
ANR	1046461	ArgumentList	ll		1045686	1					
ANR	1046462	Argument	ll		1045686	0					
ANR	1046463	Identifier	ll		1045686	0					
ANR	1046464	Argument	p . prev		1045686	1					
ANR	1046465	MemberAccess	p . prev		1045686	0					
ANR	1046466	Identifier	p		1045686	0					
ANR	1046467	Identifier	prev		1045686	1					
ANR	1046468	Argument	p . pseg		1045686	2					
ANR	1046469	MemberAccess	p . pseg		1045686	0					
ANR	1046470	Identifier	p		1045686	0					
ANR	1046471	Identifier	pseg		1045686	1					
ANR	1046472	Argument	DIR_UP		1045686	3					
ANR	1046473	Identifier	DIR_UP		1045686	0					
ANR	1046474	Argument	& p . fi		1045686	4					
ANR	1046475	UnaryOperationExpression	& p . fi		1045686	0					
ANR	1046476	UnaryOperator	&		1045686	0					
ANR	1046477	MemberAccess	p . fi		1045686	1					
ANR	1046478	Identifier	p		1045686	0					
ANR	1046479	Identifier	fi		1045686	1					
ANR	1046480	Argument	p . more_flattened		1045686	5					
ANR	1046481	MemberAccess	p . more_flattened		1045686	0					
ANR	1046482	Identifier	p		1045686	0					
ANR	1046483	Identifier	more_flattened		1045686	1					
ANR	1046484	Argument	false		1045686	6					
ANR	1046485	Identifier	false		1045686	0					
ANR	1046486	Argument	p . monotonic_x		1045686	7					
ANR	1046487	MemberAccess	p . monotonic_x		1045686	0					
ANR	1046488	Identifier	p		1045686	0					
ANR	1046489	Identifier	monotonic_x		1045686	1					
ANR	1046490	IfStatement	if ( code < 0 )		1045686	1					
ANR	1046491	Condition	code < 0	1113:24:43677:43684	1045686	0	True				
ANR	1046492	RelationalExpression	code < 0		1045686	0		<			
ANR	1046493	Identifier	code		1045686	0					
ANR	1046494	PrimaryExpression	0		1045686	1					
ANR	1046495	ReturnStatement	return code ;	1114:24:43711:43722	1045686	1	True				
ANR	1046496	Identifier	code		1045686	0					
ANR	1046497	ExpressionStatement	added = 1	1115:20:43744:43753	1045686	2	True				
ANR	1046498	AssignmentExpression	added = 1		1045686	0		=			
ANR	1046499	Identifier	added		1045686	0					
ANR	1046500	PrimaryExpression	1		1045686	1					
ANR	1046501	IfStatement	if ( p . dir == DIR_DOWN || p . dir == DIR_UP )		1045686	1					
ANR	1046502	Condition	p . dir == DIR_DOWN || p . dir == DIR_UP	1117:20:43793:43828	1045686	0	True				
ANR	1046503	OrExpression	p . dir == DIR_DOWN || p . dir == DIR_UP		1045686	0		||			
ANR	1046504	EqualityExpression	p . dir == DIR_DOWN		1045686	0		==			
ANR	1046505	MemberAccess	p . dir		1045686	0					
ANR	1046506	Identifier	p		1045686	0					
ANR	1046507	Identifier	dir		1045686	1					
ANR	1046508	Identifier	DIR_DOWN		1045686	1					
ANR	1046509	EqualityExpression	p . dir == DIR_UP		1045686	1		==			
ANR	1046510	MemberAccess	p . dir		1045686	0					
ANR	1046511	Identifier	p		1045686	0					
ANR	1046512	Identifier	dir		1045686	1					
ANR	1046513	Identifier	DIR_UP		1045686	1					
ANR	1046514	ExpressionStatement	ll -> main_dir = p . dir	1118:20:43851:43871	1045686	1	True				
ANR	1046515	AssignmentExpression	ll -> main_dir = p . dir		1045686	0		=			
ANR	1046516	PtrMemberAccess	ll -> main_dir		1045686	0					
ANR	1046517	Identifier	ll		1045686	0					
ANR	1046518	Identifier	main_dir		1045686	1					
ANR	1046519	MemberAccess	p . dir		1045686	1					
ANR	1046520	Identifier	p		1045686	0					
ANR	1046521	Identifier	dir		1045686	1					
ANR	1046522	IfStatement	if ( ! p . monotonic_y && p . more_flattened )		1045686	5					
ANR	1046523	Condition	! p . monotonic_y && p . more_flattened	1120:16:43903:43936	1045686	0	True				
ANR	1046524	AndExpression	! p . monotonic_y && p . more_flattened		1045686	0		&&			
ANR	1046525	UnaryOperationExpression	! p . monotonic_y		1045686	0					
ANR	1046526	UnaryOperator	!		1045686	0					
ANR	1046527	MemberAccess	p . monotonic_y		1045686	1					
ANR	1046528	Identifier	p		1045686	0					
ANR	1046529	Identifier	monotonic_y		1045686	1					
ANR	1046530	MemberAccess	p . more_flattened		1045686	1					
ANR	1046531	Identifier	p		1045686	0					
ANR	1046532	Identifier	more_flattened		1045686	1					
ANR	1046533	CompoundStatement		157:52:6859:6859	1045686	1					
ANR	1046534	ExpressionStatement	"code = start_al_pair_from_min ( ll , & p )"	1121:16:43957:43994	1045686	0	True				
ANR	1046535	AssignmentExpression	"code = start_al_pair_from_min ( ll , & p )"		1045686	0		=			
ANR	1046536	Identifier	code		1045686	0					
ANR	1046537	CallExpression	"start_al_pair_from_min ( ll , & p )"		1045686	1					
ANR	1046538	Callee	start_al_pair_from_min		1045686	0					
ANR	1046539	Identifier	start_al_pair_from_min		1045686	0					
ANR	1046540	ArgumentList	ll		1045686	1					
ANR	1046541	Argument	ll		1045686	0					
ANR	1046542	Identifier	ll		1045686	0					
ANR	1046543	Argument	& p		1045686	1					
ANR	1046544	UnaryOperationExpression	& p		1045686	0					
ANR	1046545	UnaryOperator	&		1045686	0					
ANR	1046546	Identifier	p		1045686	1					
ANR	1046547	IfStatement	if ( code < 0 )		1045686	1					
ANR	1046548	Condition	code < 0	1122:20:44016:44023	1045686	0	True				
ANR	1046549	RelationalExpression	code < 0		1045686	0		<			
ANR	1046550	Identifier	code		1045686	0					
ANR	1046551	PrimaryExpression	0		1045686	1					
ANR	1046552	ReturnStatement	return code ;	1123:20:44046:44057	1045686	1	True				
ANR	1046553	Identifier	code		1045686	0					
ANR	1046554	ExpressionStatement	added = 1	1124:16:44075:44084	1045686	2	True				
ANR	1046555	AssignmentExpression	added = 1		1045686	0		=			
ANR	1046556	Identifier	added		1045686	0					
ANR	1046557	PrimaryExpression	1		1045686	1					
ANR	1046558	IfStatement	if ( p . dir == DIR_DOWN || p . dir == DIR_HORIZONTAL )		1045686	6					
ANR	1046559	Condition	p . dir == DIR_DOWN || p . dir == DIR_HORIZONTAL	1126:16:44116:44159	1045686	0	True				
ANR	1046560	OrExpression	p . dir == DIR_DOWN || p . dir == DIR_HORIZONTAL		1045686	0		||			
ANR	1046561	EqualityExpression	p . dir == DIR_DOWN		1045686	0		==			
ANR	1046562	MemberAccess	p . dir		1045686	0					
ANR	1046563	Identifier	p		1045686	0					
ANR	1046564	Identifier	dir		1045686	1					
ANR	1046565	Identifier	DIR_DOWN		1045686	1					
ANR	1046566	EqualityExpression	p . dir == DIR_HORIZONTAL		1045686	1		==			
ANR	1046567	MemberAccess	p . dir		1045686	0					
ANR	1046568	Identifier	p		1045686	0					
ANR	1046569	Identifier	dir		1045686	1					
ANR	1046570	Identifier	DIR_HORIZONTAL		1045686	1					
ANR	1046571	CompoundStatement		163:62:7082:7082	1045686	1					
ANR	1046572	ExpressionStatement	q . prev = p . prev	1127:16:44180:44195	1045686	0	True				
ANR	1046573	AssignmentExpression	q . prev = p . prev		1045686	0		=			
ANR	1046574	MemberAccess	q . prev		1045686	0					
ANR	1046575	Identifier	q		1045686	0					
ANR	1046576	Identifier	prev		1045686	1					
ANR	1046577	MemberAccess	p . prev		1045686	1					
ANR	1046578	Identifier	p		1045686	0					
ANR	1046579	Identifier	prev		1045686	1					
ANR	1046580	ExpressionStatement	q . pseg = p . pseg	1128:16:44213:44228	1045686	1	True				
ANR	1046581	AssignmentExpression	q . pseg = p . pseg		1045686	0		=			
ANR	1046582	MemberAccess	q . pseg		1045686	0					
ANR	1046583	Identifier	q		1045686	0					
ANR	1046584	Identifier	pseg		1045686	1					
ANR	1046585	MemberAccess	p . pseg		1045686	1					
ANR	1046586	Identifier	p		1045686	0					
ANR	1046587	Identifier	pseg		1045686	1					
ANR	1046588	ExpressionStatement	q . monotonic_y = p . monotonic_y	1129:16:44246:44275	1045686	2	True				
ANR	1046589	AssignmentExpression	q . monotonic_y = p . monotonic_y		1045686	0		=			
ANR	1046590	MemberAccess	q . monotonic_y		1045686	0					
ANR	1046591	Identifier	q		1045686	0					
ANR	1046592	Identifier	monotonic_y		1045686	1					
ANR	1046593	MemberAccess	p . monotonic_y		1045686	1					
ANR	1046594	Identifier	p		1045686	0					
ANR	1046595	Identifier	monotonic_y		1045686	1					
ANR	1046596	ExpressionStatement	q . more_flattened = p . more_flattened	1130:16:44293:44328	1045686	3	True				
ANR	1046597	AssignmentExpression	q . more_flattened = p . more_flattened		1045686	0		=			
ANR	1046598	MemberAccess	q . more_flattened		1045686	0					
ANR	1046599	Identifier	q		1045686	0					
ANR	1046600	Identifier	more_flattened		1045686	1					
ANR	1046601	MemberAccess	p . more_flattened		1045686	1					
ANR	1046602	Identifier	p		1045686	0					
ANR	1046603	Identifier	more_flattened		1045686	1					
ANR	1046604	ExpressionStatement	q . first_flattened = p . first_flattened	1131:16:44346:44383	1045686	4	True				
ANR	1046605	AssignmentExpression	q . first_flattened = p . first_flattened		1045686	0		=			
ANR	1046606	MemberAccess	q . first_flattened		1045686	0					
ANR	1046607	Identifier	q		1045686	0					
ANR	1046608	Identifier	first_flattened		1045686	1					
ANR	1046609	MemberAccess	p . first_flattened		1045686	1					
ANR	1046610	Identifier	p		1045686	0					
ANR	1046611	Identifier	first_flattened		1045686	1					
ANR	1046612	ExpressionStatement	q . fi = p . fi	1132:16:44401:44412	1045686	5	True				
ANR	1046613	AssignmentExpression	q . fi = p . fi		1045686	0		=			
ANR	1046614	MemberAccess	q . fi		1045686	0					
ANR	1046615	Identifier	q		1045686	0					
ANR	1046616	Identifier	fi		1045686	1					
ANR	1046617	MemberAccess	p . fi		1045686	1					
ANR	1046618	Identifier	p		1045686	0					
ANR	1046619	Identifier	fi		1045686	1					
ANR	1046620	ExpressionStatement	q . dir = p . dir	1133:16:44430:44443	1045686	6	True				
ANR	1046621	AssignmentExpression	q . dir = p . dir		1045686	0		=			
ANR	1046622	MemberAccess	q . dir		1045686	0					
ANR	1046623	Identifier	q		1045686	0					
ANR	1046624	Identifier	dir		1045686	1					
ANR	1046625	MemberAccess	p . dir		1045686	1					
ANR	1046626	Identifier	p		1045686	0					
ANR	1046627	Identifier	dir		1045686	1					
ANR	1046628	Condition	! added && p . more_flattened	1139:17:44733:44758	1045686	1	True				
ANR	1046629	AndExpression	! added && p . more_flattened		1045686	0		&&			
ANR	1046630	UnaryOperationExpression	! added		1045686	0					
ANR	1046631	UnaryOperator	!		1045686	0					
ANR	1046632	Identifier	added		1045686	1					
ANR	1046633	MemberAccess	p . more_flattened		1045686	1					
ANR	1046634	Identifier	p		1045686	0					
ANR	1046635	Identifier	more_flattened		1045686	1					
ANR	1046636	ReturnStatement	return 0 ;	1141:4:44772:44780	1045686	21	True				
ANR	1046637	PrimaryExpression	0		1045686	0					
ANR	1046638	ReturnType	static int		1045686	1					
ANR	1046639	Identifier	scan_contour		1045686	2					
ANR	1046640	ParameterList	"line_list * ll , segment * pfirst , segment * plast , segment * prev"		1045686	3					
ANR	1046641	Parameter	line_list * ll	963:13:37016:37028	1045686	0	True				
ANR	1046642	ParameterType	line_list *		1045686	0					
ANR	1046643	Identifier	ll		1045686	1					
ANR	1046644	Parameter	segment * pfirst	963:28:37031:37045	1045686	1	True				
ANR	1046645	ParameterType	segment *		1045686	0					
ANR	1046646	Identifier	pfirst		1045686	1					
ANR	1046647	Parameter	segment * plast	963:45:37048:37061	1045686	2	True				
ANR	1046648	ParameterType	segment *		1045686	0					
ANR	1046649	Identifier	plast		1045686	1					
ANR	1046650	Parameter	segment * prev	963:61:37064:37076	1045686	3	True				
ANR	1046651	ParameterType	segment *		1045686	0					
ANR	1046652	Identifier	prev		1045686	1					
ANR	1046653	CFGEntryNode	ENTRY		1045686		True				
ANR	1046654	CFGExitNode	EXIT		1045686		True				
ANR	1046655	InfiniteForNode	true		1045686		True				
ANR	1046656	InfiniteForNode	true		1045686		True				
ANR	1046657	Symbol	ll		1045686						
ANR	1046658	Symbol	q . pseg		1045686						
ANR	1046659	Symbol	add_y_line		1045686						
ANR	1046660	Symbol	saved		1045686						
ANR	1046661	Symbol	added		1045686						
ANR	1046662	Symbol	p . pseg		1045686						
ANR	1046663	Symbol	p . dir		1045686						
ANR	1046664	Symbol	prev		1045686						
ANR	1046665	Symbol	DIR_DOWN		1045686						
ANR	1046666	Symbol	gx_flattened_iterator__next		1045686						
ANR	1046667	Symbol	* p . prev		1045686						
ANR	1046668	Symbol	s_curve		1045686						
ANR	1046669	Symbol	p . more_flattened		1045686						
ANR	1046670	Symbol	ll -> y_break		1045686						
ANR	1046671	Symbol	start_al_pair_from_min		1045686						
ANR	1046672	Symbol	q . prev -> prev		1045686						
ANR	1046673	Symbol	& save_q		1045686						
ANR	1046674	Symbol	* q . prev		1045686						
ANR	1046675	Symbol	p . prev -> next		1045686						
ANR	1046676	Symbol	DIR_UP		1045686						
ANR	1046677	Symbol	DIR_HORIZONTAL		1045686						
ANR	1046678	Symbol	& q . fi		1045686						
ANR	1046679	Symbol	p . pseg -> type		1045686						
ANR	1046680	Symbol	fo -> ymin		1045686						
ANR	1046681	Symbol	* ll		1045686						
ANR	1046682	Symbol	p . prev -> pt		1045686						
ANR	1046683	Symbol	* p . pseg		1045686						
ANR	1046684	Symbol	q . more_flattened		1045686						
ANR	1046685	Symbol	ll -> fo		1045686						
ANR	1046686	Symbol	pfirst		1045686						
ANR	1046687	Symbol	start_al_pair		1045686						
ANR	1046688	Symbol	p . monotonic_x		1045686						
ANR	1046689	Symbol	p . monotonic_y		1045686						
ANR	1046690	Symbol	true		1045686						
ANR	1046691	Symbol	DIR_OUT_OF_Y_RANGE		1045686						
ANR	1046692	Symbol	code		1045686						
ANR	1046693	Symbol	p . prev -> pt . x		1045686						
ANR	1046694	Symbol	p . prev -> pt . y		1045686						
ANR	1046695	Symbol	fo		1045686						
ANR	1046696	Symbol	p . first_flattened		1045686						
ANR	1046697	Symbol	add_y_curve_part		1045686						
ANR	1046698	Symbol	p . pseg -> pt		1045686						
ANR	1046699	Symbol	q . first_flattened		1045686						
ANR	1046700	Symbol	compute_dir		1045686						
ANR	1046701	Symbol	p . fi		1045686						
ANR	1046702	Symbol	q . monotonic_y		1045686						
ANR	1046703	Symbol	q . monotonic_x		1045686						
ANR	1046704	Symbol	q . plast		1045686						
ANR	1046705	Symbol	p . prev		1045686						
ANR	1046706	Symbol	only_horizontal		1045686						
ANR	1046707	Symbol	q . prev		1045686						
ANR	1046708	Symbol	fo -> ymax		1045686						
ANR	1046709	Symbol	save_q . dir		1045686						
ANR	1046710	Symbol	plast		1045686						
ANR	1046711	Symbol	init_contour_cursor		1045686						
ANR	1046712	Symbol	q . pfirst		1045686						
ANR	1046713	Symbol	save_q		1045686						
ANR	1046714	Symbol	p . pseg -> pt . x		1045686						
ANR	1046715	Symbol	p . pseg -> pt . y		1045686						
ANR	1046716	Symbol	false		1045686						
ANR	1046717	Symbol	q . fi . ly1		1045686						
ANR	1046718	Symbol	* fo		1045686						
ANR	1046719	Symbol	ll -> main_dir		1045686						
ANR	1046720	Symbol	q . fi . ly0		1045686						
ANR	1046721	Symbol	q . fi		1045686						
ANR	1046722	Symbol	p		1045686						
ANR	1046723	Symbol	q		1045686						
ANR	1046724	Symbol	& p . fi		1045686						
ANR	1046725	Symbol	& p		1045686						
ANR	1046726	Symbol	& q		1045686						
ANR	1046727	Symbol	* p		1045686						
ANR	1046728	Symbol	* q		1045686						
ANR	1046729	Symbol	p . fi . ly0		1045686						
ANR	1046730	Symbol	q . dir		1045686						
ANR	1046731	Symbol	p . fi . ly1		1045686						
ANR	1046732	Function	add_y_list	1150:0:45068:46170							
ANR	1046733	FunctionDef	"add_y_list (gx_path * ppath , line_list * ll)"		1046732	0					
ANR	1046734	CompoundStatement		1152:0:45122:46170	1046732	0					
ANR	1046735	IdentifierDeclStatement	subpath * psub = ppath -> first_subpath ;	1153:4:45128:45164	1046732	0	True				
ANR	1046736	IdentifierDecl	* psub = ppath -> first_subpath		1046732	0					
ANR	1046737	IdentifierDeclType	subpath *		1046732	0					
ANR	1046738	Identifier	psub		1046732	1					
ANR	1046739	AssignmentExpression	* psub = ppath -> first_subpath		1046732	2		=			
ANR	1046740	Identifier	psub		1046732	0					
ANR	1046741	PtrMemberAccess	ppath -> first_subpath		1046732	1					
ANR	1046742	Identifier	ppath		1046732	0					
ANR	1046743	Identifier	first_subpath		1046732	1					
ANR	1046744	IdentifierDeclStatement	int close_count = 0 ;	1154:4:45170:45189	1046732	1	True				
ANR	1046745	IdentifierDecl	close_count = 0		1046732	0					
ANR	1046746	IdentifierDeclType	int		1046732	0					
ANR	1046747	Identifier	close_count		1046732	1					
ANR	1046748	AssignmentExpression	close_count = 0		1046732	2		=			
ANR	1046749	Identifier	close_count		1046732	0					
ANR	1046750	PrimaryExpression	0		1046732	1					
ANR	1046751	IdentifierDeclStatement	int code ;	1155:4:45195:45203	1046732	2	True				
ANR	1046752	IdentifierDecl	code		1046732	0					
ANR	1046753	IdentifierDeclType	int		1046732	0					
ANR	1046754	Identifier	code		1046732	1					
ANR	1046755	ExpressionStatement	ll -> y_break = max_fixed	1157:4:45210:45233	1046732	3	True				
ANR	1046756	AssignmentExpression	ll -> y_break = max_fixed		1046732	0		=			
ANR	1046757	PtrMemberAccess	ll -> y_break		1046732	0					
ANR	1046758	Identifier	ll		1046732	0					
ANR	1046759	Identifier	y_break		1046732	1					
ANR	1046760	Identifier	max_fixed		1046732	1					
ANR	1046761	ForStatement	for ( ; psub ; psub = ( subpath * ) psub -> last -> next )		1046732	4					
ANR	1046762	Condition	psub	1159:10:45246:45249	1046732	0	True				
ANR	1046763	Identifier	psub		1046732	0					
ANR	1046764	AssignmentExpression	psub = ( subpath * ) psub -> last -> next	1159:16:45252:45285	1046732	1	True	=			
ANR	1046765	Identifier	psub		1046732	0					
ANR	1046766	CastExpression	( subpath * ) psub -> last -> next		1046732	1					
ANR	1046767	CastTarget	subpath *		1046732	0					
ANR	1046768	PtrMemberAccess	psub -> last -> next		1046732	1					
ANR	1046769	PtrMemberAccess	psub -> last		1046732	0					
ANR	1046770	Identifier	psub		1046732	0					
ANR	1046771	Identifier	last		1046732	1					
ANR	1046772	Identifier	next		1046732	1					
ANR	1046773	CompoundStatement		11:8:286:320	1046732	2					
ANR	1046774	IdentifierDeclStatement	segment * pfirst = ( segment * ) psub ;	1161:8:45366:45399	1046732	0	True				
ANR	1046775	IdentifierDecl	* pfirst = ( segment * ) psub		1046732	0					
ANR	1046776	IdentifierDeclType	segment *		1046732	0					
ANR	1046777	Identifier	pfirst		1046732	1					
ANR	1046778	AssignmentExpression	* pfirst = ( segment * ) psub		1046732	2		=			
ANR	1046779	Identifier	pfirst		1046732	0					
ANR	1046780	CastExpression	( segment * ) psub		1046732	1					
ANR	1046781	CastTarget	segment *		1046732	0					
ANR	1046782	Identifier	psub		1046732	1					
ANR	1046783	IdentifierDeclStatement	"segment * plast = psub -> last , * prev ;"	1162:8:45409:45443	1046732	1	True				
ANR	1046784	IdentifierDecl	* plast = psub -> last		1046732	0					
ANR	1046785	IdentifierDeclType	segment *		1046732	0					
ANR	1046786	Identifier	plast		1046732	1					
ANR	1046787	AssignmentExpression	* plast = psub -> last		1046732	2		=			
ANR	1046788	Identifier	plast		1046732	0					
ANR	1046789	PtrMemberAccess	psub -> last		1046732	1					
ANR	1046790	Identifier	psub		1046732	0					
ANR	1046791	Identifier	last		1046732	1					
ANR	1046792	IdentifierDecl	* prev		1046732	1					
ANR	1046793	IdentifierDeclType	segment *		1046732	0					
ANR	1046794	Identifier	prev		1046732	1					
ANR	1046795	IfStatement	if ( plast -> type != s_line_close )		1046732	2					
ANR	1046796	Condition	plast -> type != s_line_close	1164:12:45458:45484	1046732	0	True				
ANR	1046797	EqualityExpression	plast -> type != s_line_close		1046732	0		!=			
ANR	1046798	PtrMemberAccess	plast -> type		1046732	0					
ANR	1046799	Identifier	plast		1046732	0					
ANR	1046800	Identifier	type		1046732	1					
ANR	1046801	Identifier	s_line_close		1046732	1					
ANR	1046802	CompoundStatement		16:12:475:502	1046732	1					
ANR	1046803	IdentifierDeclStatement	line_close_segment * lp = & psub -> closer ;	1166:12:45546:45584	1046732	0	True				
ANR	1046804	IdentifierDecl	* lp = & psub -> closer		1046732	0					
ANR	1046805	IdentifierDeclType	line_close_segment *		1046732	0					
ANR	1046806	Identifier	lp		1046732	1					
ANR	1046807	AssignmentExpression	* lp = & psub -> closer		1046732	2		=			
ANR	1046808	Identifier	lp		1046732	0					
ANR	1046809	UnaryOperationExpression	& psub -> closer		1046732	1					
ANR	1046810	UnaryOperator	&		1046732	0					
ANR	1046811	PtrMemberAccess	psub -> closer		1046732	1					
ANR	1046812	Identifier	psub		1046732	0					
ANR	1046813	Identifier	closer		1046732	1					
ANR	1046814	IdentifierDeclStatement	segment * next = plast -> next ;	1167:12:45598:45625	1046732	1	True				
ANR	1046815	IdentifierDecl	* next = plast -> next		1046732	0					
ANR	1046816	IdentifierDeclType	segment *		1046732	0					
ANR	1046817	Identifier	next		1046732	1					
ANR	1046818	AssignmentExpression	* next = plast -> next		1046732	2		=			
ANR	1046819	Identifier	next		1046732	0					
ANR	1046820	PtrMemberAccess	plast -> next		1046732	1					
ANR	1046821	Identifier	plast		1046732	0					
ANR	1046822	Identifier	next		1046732	1					
ANR	1046823	ExpressionStatement	lp -> next = next	1169:12:45640:45655	1046732	2	True				
ANR	1046824	AssignmentExpression	lp -> next = next		1046732	0		=			
ANR	1046825	PtrMemberAccess	lp -> next		1046732	0					
ANR	1046826	Identifier	lp		1046732	0					
ANR	1046827	Identifier	next		1046732	1					
ANR	1046828	Identifier	next		1046732	1					
ANR	1046829	ExpressionStatement	lp -> prev = plast	1170:12:45669:45685	1046732	3	True				
ANR	1046830	AssignmentExpression	lp -> prev = plast		1046732	0		=			
ANR	1046831	PtrMemberAccess	lp -> prev		1046732	0					
ANR	1046832	Identifier	lp		1046732	0					
ANR	1046833	Identifier	prev		1046732	1					
ANR	1046834	Identifier	plast		1046732	1					
ANR	1046835	ExpressionStatement	plast -> next = ( segment * ) lp	1171:12:45699:45727	1046732	4	True				
ANR	1046836	AssignmentExpression	plast -> next = ( segment * ) lp		1046732	0		=			
ANR	1046837	PtrMemberAccess	plast -> next		1046732	0					
ANR	1046838	Identifier	plast		1046732	0					
ANR	1046839	Identifier	next		1046732	1					
ANR	1046840	CastExpression	( segment * ) lp		1046732	1					
ANR	1046841	CastTarget	segment *		1046732	0					
ANR	1046842	Identifier	lp		1046732	1					
ANR	1046843	IfStatement	if ( next )		1046732	5					
ANR	1046844	Condition	next	1172:16:45745:45748	1046732	0	True				
ANR	1046845	Identifier	next		1046732	0					
ANR	1046846	ExpressionStatement	next -> prev = ( segment * ) lp	1173:16:45767:45794	1046732	1	True				
ANR	1046847	AssignmentExpression	next -> prev = ( segment * ) lp		1046732	0		=			
ANR	1046848	PtrMemberAccess	next -> prev		1046732	0					
ANR	1046849	Identifier	next		1046732	0					
ANR	1046850	Identifier	prev		1046732	1					
ANR	1046851	CastExpression	( segment * ) lp		1046732	1					
ANR	1046852	CastTarget	segment *		1046732	0					
ANR	1046853	Identifier	lp		1046732	1					
ANR	1046854	ExpressionStatement	lp -> type = s_line_close	1174:12:45808:45831	1046732	6	True				
ANR	1046855	AssignmentExpression	lp -> type = s_line_close		1046732	0		=			
ANR	1046856	PtrMemberAccess	lp -> type		1046732	0					
ANR	1046857	Identifier	lp		1046732	0					
ANR	1046858	Identifier	type		1046732	1					
ANR	1046859	Identifier	s_line_close		1046732	1					
ANR	1046860	ExpressionStatement	lp -> pt = psub -> pt	1175:12:45845:45862	1046732	7	True				
ANR	1046861	AssignmentExpression	lp -> pt = psub -> pt		1046732	0		=			
ANR	1046862	PtrMemberAccess	lp -> pt		1046732	0					
ANR	1046863	Identifier	lp		1046732	0					
ANR	1046864	Identifier	pt		1046732	1					
ANR	1046865	PtrMemberAccess	psub -> pt		1046732	1					
ANR	1046866	Identifier	psub		1046732	0					
ANR	1046867	Identifier	pt		1046732	1					
ANR	1046868	ExpressionStatement	lp -> sub = psub	1176:12:45876:45890	1046732	8	True				
ANR	1046869	AssignmentExpression	lp -> sub = psub		1046732	0		=			
ANR	1046870	PtrMemberAccess	lp -> sub		1046732	0					
ANR	1046871	Identifier	lp		1046732	0					
ANR	1046872	Identifier	sub		1046732	1					
ANR	1046873	Identifier	psub		1046732	1					
ANR	1046874	ExpressionStatement	psub -> last = plast = ( segment * ) lp	1177:12:45904:45939	1046732	9	True				
ANR	1046875	AssignmentExpression	psub -> last = plast = ( segment * ) lp		1046732	0		=			
ANR	1046876	PtrMemberAccess	psub -> last		1046732	0					
ANR	1046877	Identifier	psub		1046732	0					
ANR	1046878	Identifier	last		1046732	1					
ANR	1046879	AssignmentExpression	plast = ( segment * ) lp		1046732	1		=			
ANR	1046880	Identifier	plast		1046732	0					
ANR	1046881	CastExpression	( segment * ) lp		1046732	1					
ANR	1046882	CastTarget	segment *		1046732	0					
ANR	1046883	Identifier	lp		1046732	1					
ANR	1046884	ExpressionStatement	ll -> close_count ++	1178:12:45953:45970	1046732	10	True				
ANR	1046885	PostIncDecOperationExpression	ll -> close_count ++		1046732	0					
ANR	1046886	PtrMemberAccess	ll -> close_count		1046732	0					
ANR	1046887	Identifier	ll		1046732	0					
ANR	1046888	Identifier	close_count		1046732	1					
ANR	1046889	IncDec	++		1046732	1					
ANR	1046890	ExpressionStatement	prev = plast -> prev	1180:8:45990:46008	1046732	3	True				
ANR	1046891	AssignmentExpression	prev = plast -> prev		1046732	0		=			
ANR	1046892	Identifier	prev		1046732	0					
ANR	1046893	PtrMemberAccess	plast -> prev		1046732	1					
ANR	1046894	Identifier	plast		1046732	0					
ANR	1046895	Identifier	prev		1046732	1					
ANR	1046896	ExpressionStatement	"code = scan_contour ( ll , pfirst , plast , prev )"	1181:8:46018:46062	1046732	4	True				
ANR	1046897	AssignmentExpression	"code = scan_contour ( ll , pfirst , plast , prev )"		1046732	0		=			
ANR	1046898	Identifier	code		1046732	0					
ANR	1046899	CallExpression	"scan_contour ( ll , pfirst , plast , prev )"		1046732	1					
ANR	1046900	Callee	scan_contour		1046732	0					
ANR	1046901	Identifier	scan_contour		1046732	0					
ANR	1046902	ArgumentList	ll		1046732	1					
ANR	1046903	Argument	ll		1046732	0					
ANR	1046904	Identifier	ll		1046732	0					
ANR	1046905	Argument	pfirst		1046732	1					
ANR	1046906	Identifier	pfirst		1046732	0					
ANR	1046907	Argument	plast		1046732	2					
ANR	1046908	Identifier	plast		1046732	0					
ANR	1046909	Argument	prev		1046732	3					
ANR	1046910	Identifier	prev		1046732	0					
ANR	1046911	IfStatement	if ( code < 0 )		1046732	5					
ANR	1046912	Condition	code < 0	1182:12:46076:46083	1046732	0	True				
ANR	1046913	RelationalExpression	code < 0		1046732	0		<			
ANR	1046914	Identifier	code		1046732	0					
ANR	1046915	PrimaryExpression	0		1046732	1					
ANR	1046916	ReturnStatement	return code ;	1183:12:46098:46109	1046732	1	True				
ANR	1046917	Identifier	code		1046732	0					
ANR	1046918	ExpressionStatement	ll -> contour_count ++	1184:8:46119:46138	1046732	6	True				
ANR	1046919	PostIncDecOperationExpression	ll -> contour_count ++		1046732	0					
ANR	1046920	PtrMemberAccess	ll -> contour_count		1046732	0					
ANR	1046921	Identifier	ll		1046732	0					
ANR	1046922	Identifier	contour_count		1046732	1					
ANR	1046923	IncDec	++		1046732	1					
ANR	1046924	ReturnStatement	return close_count ;	1186:4:46150:46168	1046732	5	True				
ANR	1046925	Identifier	close_count		1046732	0					
ANR	1046926	ReturnType	static int		1046732	1					
ANR	1046927	Identifier	add_y_list		1046732	2					
ANR	1046928	ParameterList	"gx_path * ppath , line_list * ll"		1046732	3					
ANR	1046929	Parameter	gx_path * ppath	1151:11:45090:45104	1046732	0	True				
ANR	1046930	ParameterType	gx_path *		1046732	0					
ANR	1046931	Identifier	ppath		1046732	1					
ANR	1046932	Parameter	line_list * ll	1151:28:45107:45119	1046732	1	True				
ANR	1046933	ParameterType	line_list *		1046732	0					
ANR	1046934	Identifier	ll		1046732	1					
ANR	1046935	CFGEntryNode	ENTRY		1046732		True				
ANR	1046936	CFGExitNode	EXIT		1046732		True				
ANR	1046937	Symbol	ll		1046732						
ANR	1046938	Symbol	next		1046732						
ANR	1046939	Symbol	lp -> sub		1046732						
ANR	1046940	Symbol	psub -> last		1046732						
ANR	1046941	Symbol	code		1046732						
ANR	1046942	Symbol	lp		1046732						
ANR	1046943	Symbol	prev		1046732						
ANR	1046944	Symbol	ppath		1046732						
ANR	1046945	Symbol	ppath -> first_subpath		1046732						
ANR	1046946	Symbol	* next		1046732						
ANR	1046947	Symbol	* psub -> last		1046732						
ANR	1046948	Symbol	close_count		1046732						
ANR	1046949	Symbol	ll -> y_break		1046732						
ANR	1046950	Symbol	max_fixed		1046732						
ANR	1046951	Symbol	scan_contour		1046732						
ANR	1046952	Symbol	plast		1046732						
ANR	1046953	Symbol	ll -> contour_count		1046732						
ANR	1046954	Symbol	psub -> last -> next		1046732						
ANR	1046955	Symbol	lp -> pt		1046732						
ANR	1046956	Symbol	psub -> pt		1046732						
ANR	1046957	Symbol	ll -> close_count		1046732						
ANR	1046958	Symbol	* ppath		1046732						
ANR	1046959	Symbol	& psub -> closer		1046732						
ANR	1046960	Symbol	psub		1046732						
ANR	1046961	Symbol	* ll		1046732						
ANR	1046962	Symbol	* psub		1046732						
ANR	1046963	Symbol	plast -> next		1046732						
ANR	1046964	Symbol	plast -> prev		1046732						
ANR	1046965	Symbol	* * psub		1046732						
ANR	1046966	Symbol	s_line_close		1046732						
ANR	1046967	Symbol	lp -> prev		1046732						
ANR	1046968	Symbol	* lp		1046732						
ANR	1046969	Symbol	lp -> next		1046732						
ANR	1046970	Symbol	pfirst		1046732						
ANR	1046971	Symbol	* plast		1046732						
ANR	1046972	Symbol	next -> prev		1046732						
ANR	1046973	Symbol	lp -> type		1046732						
ANR	1046974	Symbol	plast -> type		1046732						
ANR	1046975	Function	step_al	1189:0:46173:47155							
ANR	1046976	FunctionDef	"step_al (active_line * alp , bool move_iterator)"		1046975	0					
ANR	1046977	CompoundStatement		1191:0:46230:47155	1046975	0					
ANR	1046978	IdentifierDeclStatement	bool forth = ( alp -> direction == DIR_UP || ! alp -> fi . curve ) ;	1192:4:46236:46293	1046975	0	True				
ANR	1046979	IdentifierDecl	forth = ( alp -> direction == DIR_UP || ! alp -> fi . curve )		1046975	0					
ANR	1046980	IdentifierDeclType	bool		1046975	0					
ANR	1046981	Identifier	forth		1046975	1					
ANR	1046982	AssignmentExpression	forth = ( alp -> direction == DIR_UP || ! alp -> fi . curve )		1046975	2		=			
ANR	1046983	Identifier	forth		1046975	0					
ANR	1046984	OrExpression	alp -> direction == DIR_UP || ! alp -> fi . curve		1046975	1		||			
ANR	1046985	EqualityExpression	alp -> direction == DIR_UP		1046975	0		==			
ANR	1046986	PtrMemberAccess	alp -> direction		1046975	0					
ANR	1046987	Identifier	alp		1046975	0					
ANR	1046988	Identifier	direction		1046975	1					
ANR	1046989	Identifier	DIR_UP		1046975	1					
ANR	1046990	UnaryOperationExpression	! alp -> fi . curve		1046975	1					
ANR	1046991	UnaryOperator	!		1046975	0					
ANR	1046992	MemberAccess	alp -> fi . curve		1046975	1					
ANR	1046993	PtrMemberAccess	alp -> fi		1046975	0					
ANR	1046994	Identifier	alp		1046975	0					
ANR	1046995	Identifier	fi		1046975	1					
ANR	1046996	Identifier	curve		1046975	1					
ANR	1046997	IfStatement	if ( move_iterator )		1046975	1					
ANR	1046998	Condition	move_iterator	1194:8:46304:46316	1046975	0	True				
ANR	1046999	Identifier	move_iterator		1046975	0					
ANR	1047000	CompoundStatement		5:8:98:106	1046975	1					
ANR	1047001	IdentifierDeclStatement	int code ;	1195:8:46329:46337	1046975	0	True				
ANR	1047002	IdentifierDecl	code		1046975	0					
ANR	1047003	IdentifierDeclType	int		1046975	0					
ANR	1047004	Identifier	code		1046975	1					
ANR	1047005	IfStatement	if ( forth )		1046975	1					
ANR	1047006	Condition	forth	1197:12:46352:46356	1046975	0	True				
ANR	1047007	Identifier	forth		1046975	0					
ANR	1047008	ExpressionStatement	code = gx_flattened_iterator__next ( & alp -> fi )	1198:12:46371:46415	1046975	1	True				
ANR	1047009	AssignmentExpression	code = gx_flattened_iterator__next ( & alp -> fi )		1046975	0		=			
ANR	1047010	Identifier	code		1046975	0					
ANR	1047011	CallExpression	gx_flattened_iterator__next ( & alp -> fi )		1046975	1					
ANR	1047012	Callee	gx_flattened_iterator__next		1046975	0					
ANR	1047013	Identifier	gx_flattened_iterator__next		1046975	0					
ANR	1047014	ArgumentList	& alp -> fi		1046975	1					
ANR	1047015	Argument	& alp -> fi		1046975	0					
ANR	1047016	UnaryOperationExpression	& alp -> fi		1046975	0					
ANR	1047017	UnaryOperator	&		1046975	0					
ANR	1047018	PtrMemberAccess	alp -> fi		1046975	1					
ANR	1047019	Identifier	alp		1046975	0					
ANR	1047020	Identifier	fi		1046975	1					
ANR	1047021	ElseStatement	else		1046975	0					
ANR	1047022	ExpressionStatement	code = gx_flattened_iterator__prev ( & alp -> fi )	1200:12:46442:46486	1046975	0	True				
ANR	1047023	AssignmentExpression	code = gx_flattened_iterator__prev ( & alp -> fi )		1046975	0		=			
ANR	1047024	Identifier	code		1046975	0					
ANR	1047025	CallExpression	gx_flattened_iterator__prev ( & alp -> fi )		1046975	1					
ANR	1047026	Callee	gx_flattened_iterator__prev		1046975	0					
ANR	1047027	Identifier	gx_flattened_iterator__prev		1046975	0					
ANR	1047028	ArgumentList	& alp -> fi		1046975	1					
ANR	1047029	Argument	& alp -> fi		1046975	0					
ANR	1047030	UnaryOperationExpression	& alp -> fi		1046975	0					
ANR	1047031	UnaryOperator	&		1046975	0					
ANR	1047032	PtrMemberAccess	alp -> fi		1046975	1					
ANR	1047033	Identifier	alp		1046975	0					
ANR	1047034	Identifier	fi		1046975	1					
ANR	1047035	IfStatement	if ( code < 0 )		1046975	2					
ANR	1047036	Condition	code < 0	1201:12:46500:46507	1046975	0	True				
ANR	1047037	RelationalExpression	code < 0		1046975	0		<			
ANR	1047038	Identifier	code		1046975	0					
ANR	1047039	PrimaryExpression	0		1046975	1					
ANR	1047040	ReturnStatement	return code ;	1202:12:46522:46533	1046975	1	True				
ANR	1047041	Identifier	code		1046975	0					
ANR	1047042	ExpressionStatement	alp -> more_flattened = code	1203:8:46543:46569	1046975	3	True				
ANR	1047043	AssignmentExpression	alp -> more_flattened = code		1046975	0		=			
ANR	1047044	PtrMemberAccess	alp -> more_flattened		1046975	0					
ANR	1047045	Identifier	alp		1046975	0					
ANR	1047046	Identifier	more_flattened		1046975	1					
ANR	1047047	Identifier	code		1046975	1					
ANR	1047048	ExpressionStatement	alp -> start . x = ( forth ? alp -> fi . lx0 : alp -> fi . lx1 )	1207:4:46682:46732	1046975	2	True				
ANR	1047049	AssignmentExpression	alp -> start . x = ( forth ? alp -> fi . lx0 : alp -> fi . lx1 )		1046975	0		=			
ANR	1047050	MemberAccess	alp -> start . x		1046975	0					
ANR	1047051	PtrMemberAccess	alp -> start		1046975	0					
ANR	1047052	Identifier	alp		1046975	0					
ANR	1047053	Identifier	start		1046975	1					
ANR	1047054	Identifier	x		1046975	1					
ANR	1047055	ConditionalExpression	forth ? alp -> fi . lx0 : alp -> fi . lx1		1046975	1					
ANR	1047056	Condition	forth		1046975	0					
ANR	1047057	Identifier	forth		1046975	0					
ANR	1047058	MemberAccess	alp -> fi . lx0		1046975	1					
ANR	1047059	PtrMemberAccess	alp -> fi		1046975	0					
ANR	1047060	Identifier	alp		1046975	0					
ANR	1047061	Identifier	fi		1046975	1					
ANR	1047062	Identifier	lx0		1046975	1					
ANR	1047063	MemberAccess	alp -> fi . lx1		1046975	2					
ANR	1047064	PtrMemberAccess	alp -> fi		1046975	0					
ANR	1047065	Identifier	alp		1046975	0					
ANR	1047066	Identifier	fi		1046975	1					
ANR	1047067	Identifier	lx1		1046975	1					
ANR	1047068	ExpressionStatement	alp -> start . y = ( forth ? alp -> fi . ly0 : alp -> fi . ly1 )	1208:4:46738:46788	1046975	3	True				
ANR	1047069	AssignmentExpression	alp -> start . y = ( forth ? alp -> fi . ly0 : alp -> fi . ly1 )		1046975	0		=			
ANR	1047070	MemberAccess	alp -> start . y		1046975	0					
ANR	1047071	PtrMemberAccess	alp -> start		1046975	0					
ANR	1047072	Identifier	alp		1046975	0					
ANR	1047073	Identifier	start		1046975	1					
ANR	1047074	Identifier	y		1046975	1					
ANR	1047075	ConditionalExpression	forth ? alp -> fi . ly0 : alp -> fi . ly1		1046975	1					
ANR	1047076	Condition	forth		1046975	0					
ANR	1047077	Identifier	forth		1046975	0					
ANR	1047078	MemberAccess	alp -> fi . ly0		1046975	1					
ANR	1047079	PtrMemberAccess	alp -> fi		1046975	0					
ANR	1047080	Identifier	alp		1046975	0					
ANR	1047081	Identifier	fi		1046975	1					
ANR	1047082	Identifier	ly0		1046975	1					
ANR	1047083	MemberAccess	alp -> fi . ly1		1046975	2					
ANR	1047084	PtrMemberAccess	alp -> fi		1046975	0					
ANR	1047085	Identifier	alp		1046975	0					
ANR	1047086	Identifier	fi		1046975	1					
ANR	1047087	Identifier	ly1		1046975	1					
ANR	1047088	ExpressionStatement	alp -> end . x = ( forth ? alp -> fi . lx1 : alp -> fi . lx0 )	1209:4:46794:46842	1046975	4	True				
ANR	1047089	AssignmentExpression	alp -> end . x = ( forth ? alp -> fi . lx1 : alp -> fi . lx0 )		1046975	0		=			
ANR	1047090	MemberAccess	alp -> end . x		1046975	0					
ANR	1047091	PtrMemberAccess	alp -> end		1046975	0					
ANR	1047092	Identifier	alp		1046975	0					
ANR	1047093	Identifier	end		1046975	1					
ANR	1047094	Identifier	x		1046975	1					
ANR	1047095	ConditionalExpression	forth ? alp -> fi . lx1 : alp -> fi . lx0		1046975	1					
ANR	1047096	Condition	forth		1046975	0					
ANR	1047097	Identifier	forth		1046975	0					
ANR	1047098	MemberAccess	alp -> fi . lx1		1046975	1					
ANR	1047099	PtrMemberAccess	alp -> fi		1046975	0					
ANR	1047100	Identifier	alp		1046975	0					
ANR	1047101	Identifier	fi		1046975	1					
ANR	1047102	Identifier	lx1		1046975	1					
ANR	1047103	MemberAccess	alp -> fi . lx0		1046975	2					
ANR	1047104	PtrMemberAccess	alp -> fi		1046975	0					
ANR	1047105	Identifier	alp		1046975	0					
ANR	1047106	Identifier	fi		1046975	1					
ANR	1047107	Identifier	lx0		1046975	1					
ANR	1047108	ExpressionStatement	alp -> end . y = ( forth ? alp -> fi . ly1 : alp -> fi . ly0 )	1210:4:46848:46896	1046975	5	True				
ANR	1047109	AssignmentExpression	alp -> end . y = ( forth ? alp -> fi . ly1 : alp -> fi . ly0 )		1046975	0		=			
ANR	1047110	MemberAccess	alp -> end . y		1046975	0					
ANR	1047111	PtrMemberAccess	alp -> end		1046975	0					
ANR	1047112	Identifier	alp		1046975	0					
ANR	1047113	Identifier	end		1046975	1					
ANR	1047114	Identifier	y		1046975	1					
ANR	1047115	ConditionalExpression	forth ? alp -> fi . ly1 : alp -> fi . ly0		1046975	1					
ANR	1047116	Condition	forth		1046975	0					
ANR	1047117	Identifier	forth		1046975	0					
ANR	1047118	MemberAccess	alp -> fi . ly1		1046975	1					
ANR	1047119	PtrMemberAccess	alp -> fi		1046975	0					
ANR	1047120	Identifier	alp		1046975	0					
ANR	1047121	Identifier	fi		1046975	1					
ANR	1047122	Identifier	ly1		1046975	1					
ANR	1047123	MemberAccess	alp -> fi . ly0		1046975	2					
ANR	1047124	PtrMemberAccess	alp -> fi		1046975	0					
ANR	1047125	Identifier	alp		1046975	0					
ANR	1047126	Identifier	fi		1046975	1					
ANR	1047127	Identifier	ly0		1046975	1					
ANR	1047128	ExpressionStatement	alp -> diff . x = alp -> end . x - alp -> start . x	1211:4:46902:46941	1046975	6	True				
ANR	1047129	AssignmentExpression	alp -> diff . x = alp -> end . x - alp -> start . x		1046975	0		=			
ANR	1047130	MemberAccess	alp -> diff . x		1046975	0					
ANR	1047131	PtrMemberAccess	alp -> diff		1046975	0					
ANR	1047132	Identifier	alp		1046975	0					
ANR	1047133	Identifier	diff		1046975	1					
ANR	1047134	Identifier	x		1046975	1					
ANR	1047135	AdditiveExpression	alp -> end . x - alp -> start . x		1046975	1		-			
ANR	1047136	MemberAccess	alp -> end . x		1046975	0					
ANR	1047137	PtrMemberAccess	alp -> end		1046975	0					
ANR	1047138	Identifier	alp		1046975	0					
ANR	1047139	Identifier	end		1046975	1					
ANR	1047140	Identifier	x		1046975	1					
ANR	1047141	MemberAccess	alp -> start . x		1046975	1					
ANR	1047142	PtrMemberAccess	alp -> start		1046975	0					
ANR	1047143	Identifier	alp		1046975	0					
ANR	1047144	Identifier	start		1046975	1					
ANR	1047145	Identifier	x		1046975	1					
ANR	1047146	ExpressionStatement	alp -> diff . y = alp -> end . y - alp -> start . y	1212:4:46947:46986	1046975	7	True				
ANR	1047147	AssignmentExpression	alp -> diff . y = alp -> end . y - alp -> start . y		1046975	0		=			
ANR	1047148	MemberAccess	alp -> diff . y		1046975	0					
ANR	1047149	PtrMemberAccess	alp -> diff		1046975	0					
ANR	1047150	Identifier	alp		1046975	0					
ANR	1047151	Identifier	diff		1046975	1					
ANR	1047152	Identifier	y		1046975	1					
ANR	1047153	AdditiveExpression	alp -> end . y - alp -> start . y		1046975	1		-			
ANR	1047154	MemberAccess	alp -> end . y		1046975	0					
ANR	1047155	PtrMemberAccess	alp -> end		1046975	0					
ANR	1047156	Identifier	alp		1046975	0					
ANR	1047157	Identifier	end		1046975	1					
ANR	1047158	Identifier	y		1046975	1					
ANR	1047159	MemberAccess	alp -> start . y		1046975	1					
ANR	1047160	PtrMemberAccess	alp -> start		1046975	0					
ANR	1047161	Identifier	alp		1046975	0					
ANR	1047162	Identifier	start		1046975	1					
ANR	1047163	Identifier	y		1046975	1					
ANR	1047164	ExpressionStatement	SET_NUM_ADJUST ( alp )	1213:4:46992:47011	1046975	8	True				
ANR	1047165	CallExpression	SET_NUM_ADJUST ( alp )		1046975	0					
ANR	1047166	Callee	SET_NUM_ADJUST		1046975	0					
ANR	1047167	Identifier	SET_NUM_ADJUST		1046975	0					
ANR	1047168	ArgumentList	alp		1046975	1					
ANR	1047169	Argument	alp		1046975	0					
ANR	1047170	Identifier	alp		1046975	0					
ANR	1047171	ExpressionStatement	( alp ) -> y_fast_max = MAX_MINUS_NUM_ADJUST ( alp ) / ( ( alp -> diff . x >= 0 ? alp -> diff . x : - alp -> diff . x ) | 1 ) + alp -> start . y	1214:4:47017:47139	1046975	9	True				
ANR	1047172	AssignmentExpression	( alp ) -> y_fast_max = MAX_MINUS_NUM_ADJUST ( alp ) / ( ( alp -> diff . x >= 0 ? alp -> diff . x : - alp -> diff . x ) | 1 ) + alp -> start . y		1046975	0		=			
ANR	1047173	PtrMemberAccess	( alp ) -> y_fast_max		1046975	0					
ANR	1047174	Identifier	alp		1046975	0					
ANR	1047175	Identifier	y_fast_max		1046975	1					
ANR	1047176	AdditiveExpression	MAX_MINUS_NUM_ADJUST ( alp ) / ( ( alp -> diff . x >= 0 ? alp -> diff . x : - alp -> diff . x ) | 1 ) + alp -> start . y		1046975	1		+			
ANR	1047177	MultiplicativeExpression	MAX_MINUS_NUM_ADJUST ( alp ) / ( ( alp -> diff . x >= 0 ? alp -> diff . x : - alp -> diff . x ) | 1 )		1046975	0		/			
ANR	1047178	CallExpression	MAX_MINUS_NUM_ADJUST ( alp )		1046975	0					
ANR	1047179	Callee	MAX_MINUS_NUM_ADJUST		1046975	0					
ANR	1047180	Identifier	MAX_MINUS_NUM_ADJUST		1046975	0					
ANR	1047181	ArgumentList	alp		1046975	1					
ANR	1047182	Argument	alp		1046975	0					
ANR	1047183	Identifier	alp		1046975	0					
ANR	1047184	InclusiveOrExpression	( alp -> diff . x >= 0 ? alp -> diff . x : - alp -> diff . x ) | 1		1046975	1		|			
ANR	1047185	ConditionalExpression	alp -> diff . x >= 0 ? alp -> diff . x : - alp -> diff . x		1046975	0					
ANR	1047186	Condition	alp -> diff . x >= 0		1046975	0					
ANR	1047187	RelationalExpression	alp -> diff . x >= 0		1046975	0		>=			
ANR	1047188	MemberAccess	alp -> diff . x		1046975	0					
ANR	1047189	PtrMemberAccess	alp -> diff		1046975	0					
ANR	1047190	Identifier	alp		1046975	0					
ANR	1047191	Identifier	diff		1046975	1					
ANR	1047192	Identifier	x		1046975	1					
ANR	1047193	PrimaryExpression	0		1046975	1					
ANR	1047194	MemberAccess	alp -> diff . x		1046975	1					
ANR	1047195	PtrMemberAccess	alp -> diff		1046975	0					
ANR	1047196	Identifier	alp		1046975	0					
ANR	1047197	Identifier	diff		1046975	1					
ANR	1047198	Identifier	x		1046975	1					
ANR	1047199	UnaryOperationExpression	- alp -> diff . x		1046975	2					
ANR	1047200	UnaryOperator	-		1046975	0					
ANR	1047201	MemberAccess	alp -> diff . x		1046975	1					
ANR	1047202	PtrMemberAccess	alp -> diff		1046975	0					
ANR	1047203	Identifier	alp		1046975	0					
ANR	1047204	Identifier	diff		1046975	1					
ANR	1047205	Identifier	x		1046975	1					
ANR	1047206	PrimaryExpression	1		1046975	1					
ANR	1047207	MemberAccess	alp -> start . y		1046975	1					
ANR	1047208	PtrMemberAccess	alp -> start		1046975	0					
ANR	1047209	Identifier	alp		1046975	0					
ANR	1047210	Identifier	start		1046975	1					
ANR	1047211	Identifier	y		1046975	1					
ANR	1047212	ReturnStatement	return 0 ;	1216:4:47145:47153	1046975	10	True				
ANR	1047213	PrimaryExpression	0		1046975	0					
ANR	1047214	ReturnType	static int		1046975	1					
ANR	1047215	Identifier	step_al		1046975	2					
ANR	1047216	ParameterList	"active_line * alp , bool move_iterator"		1046975	3					
ANR	1047217	Parameter	active_line * alp	1190:8:46192:46207	1046975	0	True				
ANR	1047218	ParameterType	active_line *		1046975	0					
ANR	1047219	Identifier	alp		1046975	1					
ANR	1047220	Parameter	bool move_iterator	1190:26:46210:46227	1046975	1	True				
ANR	1047221	ParameterType	bool		1046975	0					
ANR	1047222	Identifier	move_iterator		1046975	1					
ANR	1047223	CFGEntryNode	ENTRY		1046975		True				
ANR	1047224	CFGExitNode	EXIT		1046975		True				
ANR	1047225	Symbol	alp -> direction		1046975						
ANR	1047226	Symbol	code		1046975						
ANR	1047227	Symbol	alp -> end		1046975						
ANR	1047228	Symbol	move_iterator		1046975						
ANR	1047229	Symbol	alp -> fi . lx0		1046975						
ANR	1047230	Symbol	alp -> fi . lx1		1046975						
ANR	1047231	Symbol	( alp ) -> y_fast_max		1046975						
ANR	1047232	Symbol	gx_flattened_iterator__prev		1046975						
ANR	1047233	Symbol	gx_flattened_iterator__next		1046975						
ANR	1047234	Symbol	alp -> fi		1046975						
ANR	1047235	Symbol	alp -> fi . curve		1046975						
ANR	1047236	Symbol	DIR_UP		1046975						
ANR	1047237	Symbol	MAX_MINUS_NUM_ADJUST		1046975						
ANR	1047238	Symbol	alp -> diff . x		1046975						
ANR	1047239	Symbol	alp		1046975						
ANR	1047240	Symbol	& alp -> fi		1046975						
ANR	1047241	Symbol	alp -> diff . y		1046975						
ANR	1047242	Symbol	alp -> fi . ly0		1046975						
ANR	1047243	Symbol	alp -> fi . ly1		1046975						
ANR	1047244	Symbol	alp -> diff		1046975						
ANR	1047245	Symbol	forth		1046975						
ANR	1047246	Symbol	* alp		1046975						
ANR	1047247	Symbol	alp -> start . y		1046975						
ANR	1047248	Symbol	alp -> start . x		1046975						
ANR	1047249	Symbol	alp -> more_flattened		1046975						
ANR	1047250	Symbol	alp -> end . y		1046975						
ANR	1047251	Symbol	alp -> end . x		1046975						
ANR	1047252	Symbol	alp -> start		1046975						
ANR	1047253	Function	init_al	1219:0:47158:49706							
ANR	1047254	FunctionDef	"init_al (active_line * alp , const segment * s0 , const segment * s1 , const line_list * ll)"		1047253	0					
ANR	1047255	CompoundStatement		1221:0:47254:49706	1047253	0					
ANR	1047256	IdentifierDeclStatement	const segment * ss = ( alp -> direction == DIR_UP ? s1 : s0 ) ;	1222:4:47260:47316	1047253	0	True				
ANR	1047257	IdentifierDecl	* ss = ( alp -> direction == DIR_UP ? s1 : s0 )		1047253	0					
ANR	1047258	IdentifierDeclType	const segment *		1047253	0					
ANR	1047259	Identifier	ss		1047253	1					
ANR	1047260	AssignmentExpression	* ss = ( alp -> direction == DIR_UP ? s1 : s0 )		1047253	2		=			
ANR	1047261	Identifier	ss		1047253	0					
ANR	1047262	ConditionalExpression	alp -> direction == DIR_UP ? s1 : s0		1047253	1					
ANR	1047263	Condition	alp -> direction == DIR_UP		1047253	0					
ANR	1047264	EqualityExpression	alp -> direction == DIR_UP		1047253	0		==			
ANR	1047265	PtrMemberAccess	alp -> direction		1047253	0					
ANR	1047266	Identifier	alp		1047253	0					
ANR	1047267	Identifier	direction		1047253	1					
ANR	1047268	Identifier	DIR_UP		1047253	1					
ANR	1047269	Identifier	s1		1047253	1					
ANR	1047270	Identifier	s0		1047253	2					
ANR	1047271	IdentifierDeclStatement	bool curve = ( ss != NULL && ss -> type == s_curve ) ;	1224:4:47372:47420	1047253	1	True				
ANR	1047272	IdentifierDecl	curve = ( ss != NULL && ss -> type == s_curve )		1047253	0					
ANR	1047273	IdentifierDeclType	bool		1047253	0					
ANR	1047274	Identifier	curve		1047253	1					
ANR	1047275	AssignmentExpression	curve = ( ss != NULL && ss -> type == s_curve )		1047253	2		=			
ANR	1047276	Identifier	curve		1047253	0					
ANR	1047277	AndExpression	ss != NULL && ss -> type == s_curve		1047253	1		&&			
ANR	1047278	EqualityExpression	ss != NULL		1047253	0		!=			
ANR	1047279	Identifier	ss		1047253	0					
ANR	1047280	Identifier	NULL		1047253	1					
ANR	1047281	EqualityExpression	ss -> type == s_curve		1047253	1		==			
ANR	1047282	PtrMemberAccess	ss -> type		1047253	0					
ANR	1047283	Identifier	ss		1047253	0					
ANR	1047284	Identifier	type		1047253	1					
ANR	1047285	Identifier	s_curve		1047253	1					
ANR	1047286	IdentifierDeclStatement	int code ;	1225:4:47426:47434	1047253	2	True				
ANR	1047287	IdentifierDecl	code		1047253	0					
ANR	1047288	IdentifierDeclType	int		1047253	0					
ANR	1047289	Identifier	code		1047253	1					
ANR	1047290	IfStatement	if ( curve )		1047253	3					
ANR	1047291	Condition	curve	1227:8:47445:47449	1047253	0	True				
ANR	1047292	Identifier	curve		1047253	0					
ANR	1047293	CompoundStatement		7:15:197:197	1047253	1					
ANR	1047294	IfStatement	if ( alp -> direction == DIR_UP )		1047253	0					
ANR	1047295	Condition	alp -> direction == DIR_UP	1228:12:47466:47489	1047253	0	True				
ANR	1047296	EqualityExpression	alp -> direction == DIR_UP		1047253	0		==			
ANR	1047297	PtrMemberAccess	alp -> direction		1047253	0					
ANR	1047298	Identifier	alp		1047253	0					
ANR	1047299	Identifier	direction		1047253	1					
ANR	1047300	Identifier	DIR_UP		1047253	1					
ANR	1047301	CompoundStatement		10:12:316:389	1047253	1					
ANR	1047302	IdentifierDeclStatement	const curve_segment * cs = ( const curve_segment * ) s1 ;	1229:12:47506:47557	1047253	0	True				
ANR	1047303	IdentifierDecl	* cs = ( const curve_segment * ) s1		1047253	0					
ANR	1047304	IdentifierDeclType	const curve_segment *		1047253	0					
ANR	1047305	Identifier	cs		1047253	1					
ANR	1047306	AssignmentExpression	* cs = ( const curve_segment * ) s1		1047253	2		=			
ANR	1047307	Identifier	cs		1047253	0					
ANR	1047308	CastExpression	( const curve_segment * ) s1		1047253	1					
ANR	1047309	CastTarget	const curve_segment *		1047253	0					
ANR	1047310	Identifier	s1		1047253	1					
ANR	1047311	IdentifierDeclStatement	"int k = gx_curve_log2_samples ( s0 -> pt . x , s0 -> pt . y , cs , ll -> fo -> fixed_flat ) ;"	1230:12:47571:47644	1047253	1	True				
ANR	1047312	IdentifierDecl	"k = gx_curve_log2_samples ( s0 -> pt . x , s0 -> pt . y , cs , ll -> fo -> fixed_flat )"		1047253	0					
ANR	1047313	IdentifierDeclType	int		1047253	0					
ANR	1047314	Identifier	k		1047253	1					
ANR	1047315	AssignmentExpression	"k = gx_curve_log2_samples ( s0 -> pt . x , s0 -> pt . y , cs , ll -> fo -> fixed_flat )"		1047253	2		=			
ANR	1047316	Identifier	k		1047253	0					
ANR	1047317	CallExpression	"gx_curve_log2_samples ( s0 -> pt . x , s0 -> pt . y , cs , ll -> fo -> fixed_flat )"		1047253	1					
ANR	1047318	Callee	gx_curve_log2_samples		1047253	0					
ANR	1047319	Identifier	gx_curve_log2_samples		1047253	0					
ANR	1047320	ArgumentList	s0 -> pt . x		1047253	1					
ANR	1047321	Argument	s0 -> pt . x		1047253	0					
ANR	1047322	MemberAccess	s0 -> pt . x		1047253	0					
ANR	1047323	PtrMemberAccess	s0 -> pt		1047253	0					
ANR	1047324	Identifier	s0		1047253	0					
ANR	1047325	Identifier	pt		1047253	1					
ANR	1047326	Identifier	x		1047253	1					
ANR	1047327	Argument	s0 -> pt . y		1047253	1					
ANR	1047328	MemberAccess	s0 -> pt . y		1047253	0					
ANR	1047329	PtrMemberAccess	s0 -> pt		1047253	0					
ANR	1047330	Identifier	s0		1047253	0					
ANR	1047331	Identifier	pt		1047253	1					
ANR	1047332	Identifier	y		1047253	1					
ANR	1047333	Argument	cs		1047253	2					
ANR	1047334	Identifier	cs		1047253	0					
ANR	1047335	Argument	ll -> fo -> fixed_flat		1047253	3					
ANR	1047336	PtrMemberAccess	ll -> fo -> fixed_flat		1047253	0					
ANR	1047337	PtrMemberAccess	ll -> fo		1047253	0					
ANR	1047338	Identifier	ll		1047253	0					
ANR	1047339	Identifier	fo		1047253	1					
ANR	1047340	Identifier	fixed_flat		1047253	1					
ANR	1047341	ExpressionStatement	"gx_flattened_iterator__init ( & alp -> fi , s0 -> pt . x , s0 -> pt . y , ( const curve_segment * ) s1 , k )"	1232:12:47659:47762	1047253	2	True				
ANR	1047342	CallExpression	"gx_flattened_iterator__init ( & alp -> fi , s0 -> pt . x , s0 -> pt . y , ( const curve_segment * ) s1 , k )"		1047253	0					
ANR	1047343	Callee	gx_flattened_iterator__init		1047253	0					
ANR	1047344	Identifier	gx_flattened_iterator__init		1047253	0					
ANR	1047345	ArgumentList	& alp -> fi		1047253	1					
ANR	1047346	Argument	& alp -> fi		1047253	0					
ANR	1047347	UnaryOperationExpression	& alp -> fi		1047253	0					
ANR	1047348	UnaryOperator	&		1047253	0					
ANR	1047349	PtrMemberAccess	alp -> fi		1047253	1					
ANR	1047350	Identifier	alp		1047253	0					
ANR	1047351	Identifier	fi		1047253	1					
ANR	1047352	Argument	s0 -> pt . x		1047253	1					
ANR	1047353	MemberAccess	s0 -> pt . x		1047253	0					
ANR	1047354	PtrMemberAccess	s0 -> pt		1047253	0					
ANR	1047355	Identifier	s0		1047253	0					
ANR	1047356	Identifier	pt		1047253	1					
ANR	1047357	Identifier	x		1047253	1					
ANR	1047358	Argument	s0 -> pt . y		1047253	2					
ANR	1047359	MemberAccess	s0 -> pt . y		1047253	0					
ANR	1047360	PtrMemberAccess	s0 -> pt		1047253	0					
ANR	1047361	Identifier	s0		1047253	0					
ANR	1047362	Identifier	pt		1047253	1					
ANR	1047363	Identifier	y		1047253	1					
ANR	1047364	Argument	( const curve_segment * ) s1		1047253	3					
ANR	1047365	CastExpression	( const curve_segment * ) s1		1047253	0					
ANR	1047366	CastTarget	const curve_segment *		1047253	0					
ANR	1047367	Identifier	s1		1047253	1					
ANR	1047368	Argument	k		1047253	4					
ANR	1047369	Identifier	k		1047253	0					
ANR	1047370	ExpressionStatement	"code = step_al ( alp , true )"	1234:12:47776:47801	1047253	3	True				
ANR	1047371	AssignmentExpression	"code = step_al ( alp , true )"		1047253	0		=			
ANR	1047372	Identifier	code		1047253	0					
ANR	1047373	CallExpression	"step_al ( alp , true )"		1047253	1					
ANR	1047374	Callee	step_al		1047253	0					
ANR	1047375	Identifier	step_al		1047253	0					
ANR	1047376	ArgumentList	alp		1047253	1					
ANR	1047377	Argument	alp		1047253	0					
ANR	1047378	Identifier	alp		1047253	0					
ANR	1047379	Argument	true		1047253	1					
ANR	1047380	Identifier	true		1047253	0					
ANR	1047381	IfStatement	if ( code < 0 )		1047253	4					
ANR	1047382	Condition	code < 0	1235:16:47819:47826	1047253	0	True				
ANR	1047383	RelationalExpression	code < 0		1047253	0		<			
ANR	1047384	Identifier	code		1047253	0					
ANR	1047385	PrimaryExpression	0		1047253	1					
ANR	1047386	ReturnStatement	return code ;	1236:16:47845:47856	1047253	1	True				
ANR	1047387	Identifier	code		1047253	0					
ANR	1047388	IfStatement	if ( ! ll -> fo -> fill_by_trapezoids )		1047253	5					
ANR	1047389	Condition	! ll -> fo -> fill_by_trapezoids	1237:16:47874:47900	1047253	0	True				
ANR	1047390	UnaryOperationExpression	! ll -> fo -> fill_by_trapezoids		1047253	0					
ANR	1047391	UnaryOperator	!		1047253	0					
ANR	1047392	PtrMemberAccess	ll -> fo -> fill_by_trapezoids		1047253	1					
ANR	1047393	PtrMemberAccess	ll -> fo		1047253	0					
ANR	1047394	Identifier	ll		1047253	0					
ANR	1047395	Identifier	fo		1047253	1					
ANR	1047396	Identifier	fill_by_trapezoids		1047253	1					
ANR	1047397	CompoundStatement		17:45:648:648	1047253	1					
ANR	1047398	ExpressionStatement	alp -> monotonic_y = ( s0 -> pt . y <= cs -> p1 . y && cs -> p1 . y <= cs -> p2 . y && cs -> p2 . y <= cs -> pt . y )	1238:16:47921:48010	1047253	0	True				
ANR	1047399	AssignmentExpression	alp -> monotonic_y = ( s0 -> pt . y <= cs -> p1 . y && cs -> p1 . y <= cs -> p2 . y && cs -> p2 . y <= cs -> pt . y )		1047253	0		=			
ANR	1047400	PtrMemberAccess	alp -> monotonic_y		1047253	0					
ANR	1047401	Identifier	alp		1047253	0					
ANR	1047402	Identifier	monotonic_y		1047253	1					
ANR	1047403	AndExpression	s0 -> pt . y <= cs -> p1 . y && cs -> p1 . y <= cs -> p2 . y && cs -> p2 . y <= cs -> pt . y		1047253	1		&&			
ANR	1047404	RelationalExpression	s0 -> pt . y <= cs -> p1 . y		1047253	0		<=			
ANR	1047405	MemberAccess	s0 -> pt . y		1047253	0					
ANR	1047406	PtrMemberAccess	s0 -> pt		1047253	0					
ANR	1047407	Identifier	s0		1047253	0					
ANR	1047408	Identifier	pt		1047253	1					
ANR	1047409	Identifier	y		1047253	1					
ANR	1047410	MemberAccess	cs -> p1 . y		1047253	1					
ANR	1047411	PtrMemberAccess	cs -> p1		1047253	0					
ANR	1047412	Identifier	cs		1047253	0					
ANR	1047413	Identifier	p1		1047253	1					
ANR	1047414	Identifier	y		1047253	1					
ANR	1047415	AndExpression	cs -> p1 . y <= cs -> p2 . y && cs -> p2 . y <= cs -> pt . y		1047253	1		&&			
ANR	1047416	RelationalExpression	cs -> p1 . y <= cs -> p2 . y		1047253	0		<=			
ANR	1047417	MemberAccess	cs -> p1 . y		1047253	0					
ANR	1047418	PtrMemberAccess	cs -> p1		1047253	0					
ANR	1047419	Identifier	cs		1047253	0					
ANR	1047420	Identifier	p1		1047253	1					
ANR	1047421	Identifier	y		1047253	1					
ANR	1047422	MemberAccess	cs -> p2 . y		1047253	1					
ANR	1047423	PtrMemberAccess	cs -> p2		1047253	0					
ANR	1047424	Identifier	cs		1047253	0					
ANR	1047425	Identifier	p2		1047253	1					
ANR	1047426	Identifier	y		1047253	1					
ANR	1047427	RelationalExpression	cs -> p2 . y <= cs -> pt . y		1047253	1		<=			
ANR	1047428	MemberAccess	cs -> p2 . y		1047253	0					
ANR	1047429	PtrMemberAccess	cs -> p2		1047253	0					
ANR	1047430	Identifier	cs		1047253	0					
ANR	1047431	Identifier	p2		1047253	1					
ANR	1047432	Identifier	y		1047253	1					
ANR	1047433	MemberAccess	cs -> pt . y		1047253	1					
ANR	1047434	PtrMemberAccess	cs -> pt		1047253	0					
ANR	1047435	Identifier	cs		1047253	0					
ANR	1047436	Identifier	pt		1047253	1					
ANR	1047437	Identifier	y		1047253	1					
ANR	1047438	ExpressionStatement	alp -> monotonic_x = ( s0 -> pt . x <= cs -> p1 . x && cs -> p1 . x <= cs -> p2 . x && cs -> p2 . x <= cs -> pt . x ) || ( s0 -> pt . x >= cs -> p1 . x && cs -> p1 . x >= cs -> p2 . x && cs -> p2 . x >= cs -> pt . x )	1239:16:48028:48226	1047253	1	True				
ANR	1047439	AssignmentExpression	alp -> monotonic_x = ( s0 -> pt . x <= cs -> p1 . x && cs -> p1 . x <= cs -> p2 . x && cs -> p2 . x <= cs -> pt . x ) || ( s0 -> pt . x >= cs -> p1 . x && cs -> p1 . x >= cs -> p2 . x && cs -> p2 . x >= cs -> pt . x )		1047253	0		=			
ANR	1047440	PtrMemberAccess	alp -> monotonic_x		1047253	0					
ANR	1047441	Identifier	alp		1047253	0					
ANR	1047442	Identifier	monotonic_x		1047253	1					
ANR	1047443	OrExpression	( s0 -> pt . x <= cs -> p1 . x && cs -> p1 . x <= cs -> p2 . x && cs -> p2 . x <= cs -> pt . x ) || ( s0 -> pt . x >= cs -> p1 . x && cs -> p1 . x >= cs -> p2 . x && cs -> p2 . x >= cs -> pt . x )		1047253	1		||			
ANR	1047444	AndExpression	s0 -> pt . x <= cs -> p1 . x && cs -> p1 . x <= cs -> p2 . x && cs -> p2 . x <= cs -> pt . x		1047253	0		&&			
ANR	1047445	RelationalExpression	s0 -> pt . x <= cs -> p1 . x		1047253	0		<=			
ANR	1047446	MemberAccess	s0 -> pt . x		1047253	0					
ANR	1047447	PtrMemberAccess	s0 -> pt		1047253	0					
ANR	1047448	Identifier	s0		1047253	0					
ANR	1047449	Identifier	pt		1047253	1					
ANR	1047450	Identifier	x		1047253	1					
ANR	1047451	MemberAccess	cs -> p1 . x		1047253	1					
ANR	1047452	PtrMemberAccess	cs -> p1		1047253	0					
ANR	1047453	Identifier	cs		1047253	0					
ANR	1047454	Identifier	p1		1047253	1					
ANR	1047455	Identifier	x		1047253	1					
ANR	1047456	AndExpression	cs -> p1 . x <= cs -> p2 . x && cs -> p2 . x <= cs -> pt . x		1047253	1		&&			
ANR	1047457	RelationalExpression	cs -> p1 . x <= cs -> p2 . x		1047253	0		<=			
ANR	1047458	MemberAccess	cs -> p1 . x		1047253	0					
ANR	1047459	PtrMemberAccess	cs -> p1		1047253	0					
ANR	1047460	Identifier	cs		1047253	0					
ANR	1047461	Identifier	p1		1047253	1					
ANR	1047462	Identifier	x		1047253	1					
ANR	1047463	MemberAccess	cs -> p2 . x		1047253	1					
ANR	1047464	PtrMemberAccess	cs -> p2		1047253	0					
ANR	1047465	Identifier	cs		1047253	0					
ANR	1047466	Identifier	p2		1047253	1					
ANR	1047467	Identifier	x		1047253	1					
ANR	1047468	RelationalExpression	cs -> p2 . x <= cs -> pt . x		1047253	1		<=			
ANR	1047469	MemberAccess	cs -> p2 . x		1047253	0					
ANR	1047470	PtrMemberAccess	cs -> p2		1047253	0					
ANR	1047471	Identifier	cs		1047253	0					
ANR	1047472	Identifier	p2		1047253	1					
ANR	1047473	Identifier	x		1047253	1					
ANR	1047474	MemberAccess	cs -> pt . x		1047253	1					
ANR	1047475	PtrMemberAccess	cs -> pt		1047253	0					
ANR	1047476	Identifier	cs		1047253	0					
ANR	1047477	Identifier	pt		1047253	1					
ANR	1047478	Identifier	x		1047253	1					
ANR	1047479	AndExpression	s0 -> pt . x >= cs -> p1 . x && cs -> p1 . x >= cs -> p2 . x && cs -> p2 . x >= cs -> pt . x		1047253	1		&&			
ANR	1047480	RelationalExpression	s0 -> pt . x >= cs -> p1 . x		1047253	0		>=			
ANR	1047481	MemberAccess	s0 -> pt . x		1047253	0					
ANR	1047482	PtrMemberAccess	s0 -> pt		1047253	0					
ANR	1047483	Identifier	s0		1047253	0					
ANR	1047484	Identifier	pt		1047253	1					
ANR	1047485	Identifier	x		1047253	1					
ANR	1047486	MemberAccess	cs -> p1 . x		1047253	1					
ANR	1047487	PtrMemberAccess	cs -> p1		1047253	0					
ANR	1047488	Identifier	cs		1047253	0					
ANR	1047489	Identifier	p1		1047253	1					
ANR	1047490	Identifier	x		1047253	1					
ANR	1047491	AndExpression	cs -> p1 . x >= cs -> p2 . x && cs -> p2 . x >= cs -> pt . x		1047253	1		&&			
ANR	1047492	RelationalExpression	cs -> p1 . x >= cs -> p2 . x		1047253	0		>=			
ANR	1047493	MemberAccess	cs -> p1 . x		1047253	0					
ANR	1047494	PtrMemberAccess	cs -> p1		1047253	0					
ANR	1047495	Identifier	cs		1047253	0					
ANR	1047496	Identifier	p1		1047253	1					
ANR	1047497	Identifier	x		1047253	1					
ANR	1047498	MemberAccess	cs -> p2 . x		1047253	1					
ANR	1047499	PtrMemberAccess	cs -> p2		1047253	0					
ANR	1047500	Identifier	cs		1047253	0					
ANR	1047501	Identifier	p2		1047253	1					
ANR	1047502	Identifier	x		1047253	1					
ANR	1047503	RelationalExpression	cs -> p2 . x >= cs -> pt . x		1047253	1		>=			
ANR	1047504	MemberAccess	cs -> p2 . x		1047253	0					
ANR	1047505	PtrMemberAccess	cs -> p2		1047253	0					
ANR	1047506	Identifier	cs		1047253	0					
ANR	1047507	Identifier	p2		1047253	1					
ANR	1047508	Identifier	x		1047253	1					
ANR	1047509	MemberAccess	cs -> pt . x		1047253	1					
ANR	1047510	PtrMemberAccess	cs -> pt		1047253	0					
ANR	1047511	Identifier	cs		1047253	0					
ANR	1047512	Identifier	pt		1047253	1					
ANR	1047513	Identifier	x		1047253	1					
ANR	1047514	ElseStatement	else		1047253	0					
ANR	1047515	CompoundStatement		25:12:1168:1177	1047253	0					
ANR	1047516	IdentifierDeclStatement	const curve_segment * cs = ( const curve_segment * ) s0 ;	1243:12:48271:48322	1047253	0	True				
ANR	1047517	IdentifierDecl	* cs = ( const curve_segment * ) s0		1047253	0					
ANR	1047518	IdentifierDeclType	const curve_segment *		1047253	0					
ANR	1047519	Identifier	cs		1047253	1					
ANR	1047520	AssignmentExpression	* cs = ( const curve_segment * ) s0		1047253	2		=			
ANR	1047521	Identifier	cs		1047253	0					
ANR	1047522	CastExpression	( const curve_segment * ) s0		1047253	1					
ANR	1047523	CastTarget	const curve_segment *		1047253	0					
ANR	1047524	Identifier	s0		1047253	1					
ANR	1047525	IdentifierDeclStatement	"int k = gx_curve_log2_samples ( s1 -> pt . x , s1 -> pt . y , cs , ll -> fo -> fixed_flat ) ;"	1244:12:48336:48409	1047253	1	True				
ANR	1047526	IdentifierDecl	"k = gx_curve_log2_samples ( s1 -> pt . x , s1 -> pt . y , cs , ll -> fo -> fixed_flat )"		1047253	0					
ANR	1047527	IdentifierDeclType	int		1047253	0					
ANR	1047528	Identifier	k		1047253	1					
ANR	1047529	AssignmentExpression	"k = gx_curve_log2_samples ( s1 -> pt . x , s1 -> pt . y , cs , ll -> fo -> fixed_flat )"		1047253	2		=			
ANR	1047530	Identifier	k		1047253	0					
ANR	1047531	CallExpression	"gx_curve_log2_samples ( s1 -> pt . x , s1 -> pt . y , cs , ll -> fo -> fixed_flat )"		1047253	1					
ANR	1047532	Callee	gx_curve_log2_samples		1047253	0					
ANR	1047533	Identifier	gx_curve_log2_samples		1047253	0					
ANR	1047534	ArgumentList	s1 -> pt . x		1047253	1					
ANR	1047535	Argument	s1 -> pt . x		1047253	0					
ANR	1047536	MemberAccess	s1 -> pt . x		1047253	0					
ANR	1047537	PtrMemberAccess	s1 -> pt		1047253	0					
ANR	1047538	Identifier	s1		1047253	0					
ANR	1047539	Identifier	pt		1047253	1					
ANR	1047540	Identifier	x		1047253	1					
ANR	1047541	Argument	s1 -> pt . y		1047253	1					
ANR	1047542	MemberAccess	s1 -> pt . y		1047253	0					
ANR	1047543	PtrMemberAccess	s1 -> pt		1047253	0					
ANR	1047544	Identifier	s1		1047253	0					
ANR	1047545	Identifier	pt		1047253	1					
ANR	1047546	Identifier	y		1047253	1					
ANR	1047547	Argument	cs		1047253	2					
ANR	1047548	Identifier	cs		1047253	0					
ANR	1047549	Argument	ll -> fo -> fixed_flat		1047253	3					
ANR	1047550	PtrMemberAccess	ll -> fo -> fixed_flat		1047253	0					
ANR	1047551	PtrMemberAccess	ll -> fo		1047253	0					
ANR	1047552	Identifier	ll		1047253	0					
ANR	1047553	Identifier	fo		1047253	1					
ANR	1047554	Identifier	fixed_flat		1047253	1					
ANR	1047555	IdentifierDeclStatement	bool more ;	1245:12:48423:48432	1047253	2	True				
ANR	1047556	IdentifierDecl	more		1047253	0					
ANR	1047557	IdentifierDeclType	bool		1047253	0					
ANR	1047558	Identifier	more		1047253	1					
ANR	1047559	ExpressionStatement	"gx_flattened_iterator__init ( & alp -> fi , s1 -> pt . x , s1 -> pt . y , ( const curve_segment * ) s0 , k )"	1247:12:48447:48550	1047253	3	True				
ANR	1047560	CallExpression	"gx_flattened_iterator__init ( & alp -> fi , s1 -> pt . x , s1 -> pt . y , ( const curve_segment * ) s0 , k )"		1047253	0					
ANR	1047561	Callee	gx_flattened_iterator__init		1047253	0					
ANR	1047562	Identifier	gx_flattened_iterator__init		1047253	0					
ANR	1047563	ArgumentList	& alp -> fi		1047253	1					
ANR	1047564	Argument	& alp -> fi		1047253	0					
ANR	1047565	UnaryOperationExpression	& alp -> fi		1047253	0					
ANR	1047566	UnaryOperator	&		1047253	0					
ANR	1047567	PtrMemberAccess	alp -> fi		1047253	1					
ANR	1047568	Identifier	alp		1047253	0					
ANR	1047569	Identifier	fi		1047253	1					
ANR	1047570	Argument	s1 -> pt . x		1047253	1					
ANR	1047571	MemberAccess	s1 -> pt . x		1047253	0					
ANR	1047572	PtrMemberAccess	s1 -> pt		1047253	0					
ANR	1047573	Identifier	s1		1047253	0					
ANR	1047574	Identifier	pt		1047253	1					
ANR	1047575	Identifier	x		1047253	1					
ANR	1047576	Argument	s1 -> pt . y		1047253	2					
ANR	1047577	MemberAccess	s1 -> pt . y		1047253	0					
ANR	1047578	PtrMemberAccess	s1 -> pt		1047253	0					
ANR	1047579	Identifier	s1		1047253	0					
ANR	1047580	Identifier	pt		1047253	1					
ANR	1047581	Identifier	y		1047253	1					
ANR	1047582	Argument	( const curve_segment * ) s0		1047253	3					
ANR	1047583	CastExpression	( const curve_segment * ) s0		1047253	0					
ANR	1047584	CastTarget	const curve_segment *		1047253	0					
ANR	1047585	Identifier	s0		1047253	1					
ANR	1047586	Argument	k		1047253	4					
ANR	1047587	Identifier	k		1047253	0					
ANR	1047588	ExpressionStatement	alp -> more_flattened = false	1249:12:48564:48591	1047253	4	True				
ANR	1047589	AssignmentExpression	alp -> more_flattened = false		1047253	0		=			
ANR	1047590	PtrMemberAccess	alp -> more_flattened		1047253	0					
ANR	1047591	Identifier	alp		1047253	0					
ANR	1047592	Identifier	more_flattened		1047253	1					
ANR	1047593	Identifier	false		1047253	1					
ANR	1047594	DoStatement	do		1047253	5					
ANR	1047595	CompoundStatement		30:15:1353:1353	1047253	0					
ANR	1047596	ExpressionStatement	code = gx_flattened_iterator__next ( & alp -> fi )	1251:16:48626:48670	1047253	0	True				
ANR	1047597	AssignmentExpression	code = gx_flattened_iterator__next ( & alp -> fi )		1047253	0		=			
ANR	1047598	Identifier	code		1047253	0					
ANR	1047599	CallExpression	gx_flattened_iterator__next ( & alp -> fi )		1047253	1					
ANR	1047600	Callee	gx_flattened_iterator__next		1047253	0					
ANR	1047601	Identifier	gx_flattened_iterator__next		1047253	0					
ANR	1047602	ArgumentList	& alp -> fi		1047253	1					
ANR	1047603	Argument	& alp -> fi		1047253	0					
ANR	1047604	UnaryOperationExpression	& alp -> fi		1047253	0					
ANR	1047605	UnaryOperator	&		1047253	0					
ANR	1047606	PtrMemberAccess	alp -> fi		1047253	1					
ANR	1047607	Identifier	alp		1047253	0					
ANR	1047608	Identifier	fi		1047253	1					
ANR	1047609	IfStatement	if ( code < 0 )		1047253	1					
ANR	1047610	Condition	code < 0	1252:20:48692:48699	1047253	0	True				
ANR	1047611	RelationalExpression	code < 0		1047253	0		<			
ANR	1047612	Identifier	code		1047253	0					
ANR	1047613	PrimaryExpression	0		1047253	1					
ANR	1047614	ReturnStatement	return code ;	1253:20:48722:48733	1047253	1	True				
ANR	1047615	Identifier	code		1047253	0					
ANR	1047616	ExpressionStatement	more = code	1254:16:48751:48762	1047253	2	True				
ANR	1047617	AssignmentExpression	more = code		1047253	0		=			
ANR	1047618	Identifier	more		1047253	0					
ANR	1047619	Identifier	code		1047253	1					
ANR	1047620	ExpressionStatement	alp -> more_flattened |= more	1255:16:48780:48807	1047253	3	True				
ANR	1047621	AssignmentExpression	alp -> more_flattened |= more		1047253	0		|=			
ANR	1047622	PtrMemberAccess	alp -> more_flattened		1047253	0					
ANR	1047623	Identifier	alp		1047253	0					
ANR	1047624	Identifier	more_flattened		1047253	1					
ANR	1047625	Identifier	more		1047253	1					
ANR	1047626	Condition	more	1256:20:48829:48832	1047253	1	True				
ANR	1047627	Identifier	more		1047253	0					
ANR	1047628	ExpressionStatement	"gx_flattened_iterator__switch_to_backscan ( & alp -> fi , alp -> more_flattened )"	1257:12:48848:48920	1047253	6	True				
ANR	1047629	CallExpression	"gx_flattened_iterator__switch_to_backscan ( & alp -> fi , alp -> more_flattened )"		1047253	0					
ANR	1047630	Callee	gx_flattened_iterator__switch_to_backscan		1047253	0					
ANR	1047631	Identifier	gx_flattened_iterator__switch_to_backscan		1047253	0					
ANR	1047632	ArgumentList	& alp -> fi		1047253	1					
ANR	1047633	Argument	& alp -> fi		1047253	0					
ANR	1047634	UnaryOperationExpression	& alp -> fi		1047253	0					
ANR	1047635	UnaryOperator	&		1047253	0					
ANR	1047636	PtrMemberAccess	alp -> fi		1047253	1					
ANR	1047637	Identifier	alp		1047253	0					
ANR	1047638	Identifier	fi		1047253	1					
ANR	1047639	Argument	alp -> more_flattened		1047253	1					
ANR	1047640	PtrMemberAccess	alp -> more_flattened		1047253	0					
ANR	1047641	Identifier	alp		1047253	0					
ANR	1047642	Identifier	more_flattened		1047253	1					
ANR	1047643	ExpressionStatement	"code = step_al ( alp , false )"	1258:12:48934:48960	1047253	7	True				
ANR	1047644	AssignmentExpression	"code = step_al ( alp , false )"		1047253	0		=			
ANR	1047645	Identifier	code		1047253	0					
ANR	1047646	CallExpression	"step_al ( alp , false )"		1047253	1					
ANR	1047647	Callee	step_al		1047253	0					
ANR	1047648	Identifier	step_al		1047253	0					
ANR	1047649	ArgumentList	alp		1047253	1					
ANR	1047650	Argument	alp		1047253	0					
ANR	1047651	Identifier	alp		1047253	0					
ANR	1047652	Argument	false		1047253	1					
ANR	1047653	Identifier	false		1047253	0					
ANR	1047654	IfStatement	if ( code < 0 )		1047253	8					
ANR	1047655	Condition	code < 0	1259:16:48978:48985	1047253	0	True				
ANR	1047656	RelationalExpression	code < 0		1047253	0		<			
ANR	1047657	Identifier	code		1047253	0					
ANR	1047658	PrimaryExpression	0		1047253	1					
ANR	1047659	ReturnStatement	return code ;	1260:16:49004:49015	1047253	1	True				
ANR	1047660	Identifier	code		1047253	0					
ANR	1047661	IfStatement	if ( ! ll -> fo -> fill_by_trapezoids )		1047253	9					
ANR	1047662	Condition	! ll -> fo -> fill_by_trapezoids	1261:16:49033:49059	1047253	0	True				
ANR	1047663	UnaryOperationExpression	! ll -> fo -> fill_by_trapezoids		1047253	0					
ANR	1047664	UnaryOperator	!		1047253	0					
ANR	1047665	PtrMemberAccess	ll -> fo -> fill_by_trapezoids		1047253	1					
ANR	1047666	PtrMemberAccess	ll -> fo		1047253	0					
ANR	1047667	Identifier	ll		1047253	0					
ANR	1047668	Identifier	fo		1047253	1					
ANR	1047669	Identifier	fill_by_trapezoids		1047253	1					
ANR	1047670	CompoundStatement		41:45:1807:1807	1047253	1					
ANR	1047671	ExpressionStatement	alp -> monotonic_y = ( s0 -> pt . y >= cs -> p1 . y && cs -> p1 . y >= cs -> p2 . y && cs -> p2 . y >= cs -> pt . y )	1262:16:49080:49169	1047253	0	True				
ANR	1047672	AssignmentExpression	alp -> monotonic_y = ( s0 -> pt . y >= cs -> p1 . y && cs -> p1 . y >= cs -> p2 . y && cs -> p2 . y >= cs -> pt . y )		1047253	0		=			
ANR	1047673	PtrMemberAccess	alp -> monotonic_y		1047253	0					
ANR	1047674	Identifier	alp		1047253	0					
ANR	1047675	Identifier	monotonic_y		1047253	1					
ANR	1047676	AndExpression	s0 -> pt . y >= cs -> p1 . y && cs -> p1 . y >= cs -> p2 . y && cs -> p2 . y >= cs -> pt . y		1047253	1		&&			
ANR	1047677	RelationalExpression	s0 -> pt . y >= cs -> p1 . y		1047253	0		>=			
ANR	1047678	MemberAccess	s0 -> pt . y		1047253	0					
ANR	1047679	PtrMemberAccess	s0 -> pt		1047253	0					
ANR	1047680	Identifier	s0		1047253	0					
ANR	1047681	Identifier	pt		1047253	1					
ANR	1047682	Identifier	y		1047253	1					
ANR	1047683	MemberAccess	cs -> p1 . y		1047253	1					
ANR	1047684	PtrMemberAccess	cs -> p1		1047253	0					
ANR	1047685	Identifier	cs		1047253	0					
ANR	1047686	Identifier	p1		1047253	1					
ANR	1047687	Identifier	y		1047253	1					
ANR	1047688	AndExpression	cs -> p1 . y >= cs -> p2 . y && cs -> p2 . y >= cs -> pt . y		1047253	1		&&			
ANR	1047689	RelationalExpression	cs -> p1 . y >= cs -> p2 . y		1047253	0		>=			
ANR	1047690	MemberAccess	cs -> p1 . y		1047253	0					
ANR	1047691	PtrMemberAccess	cs -> p1		1047253	0					
ANR	1047692	Identifier	cs		1047253	0					
ANR	1047693	Identifier	p1		1047253	1					
ANR	1047694	Identifier	y		1047253	1					
ANR	1047695	MemberAccess	cs -> p2 . y		1047253	1					
ANR	1047696	PtrMemberAccess	cs -> p2		1047253	0					
ANR	1047697	Identifier	cs		1047253	0					
ANR	1047698	Identifier	p2		1047253	1					
ANR	1047699	Identifier	y		1047253	1					
ANR	1047700	RelationalExpression	cs -> p2 . y >= cs -> pt . y		1047253	1		>=			
ANR	1047701	MemberAccess	cs -> p2 . y		1047253	0					
ANR	1047702	PtrMemberAccess	cs -> p2		1047253	0					
ANR	1047703	Identifier	cs		1047253	0					
ANR	1047704	Identifier	p2		1047253	1					
ANR	1047705	Identifier	y		1047253	1					
ANR	1047706	MemberAccess	cs -> pt . y		1047253	1					
ANR	1047707	PtrMemberAccess	cs -> pt		1047253	0					
ANR	1047708	Identifier	cs		1047253	0					
ANR	1047709	Identifier	pt		1047253	1					
ANR	1047710	Identifier	y		1047253	1					
ANR	1047711	ExpressionStatement	alp -> monotonic_x = ( s0 -> pt . x <= cs -> p1 . x && cs -> p1 . x <= cs -> p2 . x && cs -> p2 . x <= cs -> pt . x ) || ( s0 -> pt . x >= cs -> p1 . x && cs -> p1 . x >= cs -> p2 . x && cs -> p2 . x >= cs -> pt . x )	1263:16:49187:49385	1047253	1	True				
ANR	1047712	AssignmentExpression	alp -> monotonic_x = ( s0 -> pt . x <= cs -> p1 . x && cs -> p1 . x <= cs -> p2 . x && cs -> p2 . x <= cs -> pt . x ) || ( s0 -> pt . x >= cs -> p1 . x && cs -> p1 . x >= cs -> p2 . x && cs -> p2 . x >= cs -> pt . x )		1047253	0		=			
ANR	1047713	PtrMemberAccess	alp -> monotonic_x		1047253	0					
ANR	1047714	Identifier	alp		1047253	0					
ANR	1047715	Identifier	monotonic_x		1047253	1					
ANR	1047716	OrExpression	( s0 -> pt . x <= cs -> p1 . x && cs -> p1 . x <= cs -> p2 . x && cs -> p2 . x <= cs -> pt . x ) || ( s0 -> pt . x >= cs -> p1 . x && cs -> p1 . x >= cs -> p2 . x && cs -> p2 . x >= cs -> pt . x )		1047253	1		||			
ANR	1047717	AndExpression	s0 -> pt . x <= cs -> p1 . x && cs -> p1 . x <= cs -> p2 . x && cs -> p2 . x <= cs -> pt . x		1047253	0		&&			
ANR	1047718	RelationalExpression	s0 -> pt . x <= cs -> p1 . x		1047253	0		<=			
ANR	1047719	MemberAccess	s0 -> pt . x		1047253	0					
ANR	1047720	PtrMemberAccess	s0 -> pt		1047253	0					
ANR	1047721	Identifier	s0		1047253	0					
ANR	1047722	Identifier	pt		1047253	1					
ANR	1047723	Identifier	x		1047253	1					
ANR	1047724	MemberAccess	cs -> p1 . x		1047253	1					
ANR	1047725	PtrMemberAccess	cs -> p1		1047253	0					
ANR	1047726	Identifier	cs		1047253	0					
ANR	1047727	Identifier	p1		1047253	1					
ANR	1047728	Identifier	x		1047253	1					
ANR	1047729	AndExpression	cs -> p1 . x <= cs -> p2 . x && cs -> p2 . x <= cs -> pt . x		1047253	1		&&			
ANR	1047730	RelationalExpression	cs -> p1 . x <= cs -> p2 . x		1047253	0		<=			
ANR	1047731	MemberAccess	cs -> p1 . x		1047253	0					
ANR	1047732	PtrMemberAccess	cs -> p1		1047253	0					
ANR	1047733	Identifier	cs		1047253	0					
ANR	1047734	Identifier	p1		1047253	1					
ANR	1047735	Identifier	x		1047253	1					
ANR	1047736	MemberAccess	cs -> p2 . x		1047253	1					
ANR	1047737	PtrMemberAccess	cs -> p2		1047253	0					
ANR	1047738	Identifier	cs		1047253	0					
ANR	1047739	Identifier	p2		1047253	1					
ANR	1047740	Identifier	x		1047253	1					
ANR	1047741	RelationalExpression	cs -> p2 . x <= cs -> pt . x		1047253	1		<=			
ANR	1047742	MemberAccess	cs -> p2 . x		1047253	0					
ANR	1047743	PtrMemberAccess	cs -> p2		1047253	0					
ANR	1047744	Identifier	cs		1047253	0					
ANR	1047745	Identifier	p2		1047253	1					
ANR	1047746	Identifier	x		1047253	1					
ANR	1047747	MemberAccess	cs -> pt . x		1047253	1					
ANR	1047748	PtrMemberAccess	cs -> pt		1047253	0					
ANR	1047749	Identifier	cs		1047253	0					
ANR	1047750	Identifier	pt		1047253	1					
ANR	1047751	Identifier	x		1047253	1					
ANR	1047752	AndExpression	s0 -> pt . x >= cs -> p1 . x && cs -> p1 . x >= cs -> p2 . x && cs -> p2 . x >= cs -> pt . x		1047253	1		&&			
ANR	1047753	RelationalExpression	s0 -> pt . x >= cs -> p1 . x		1047253	0		>=			
ANR	1047754	MemberAccess	s0 -> pt . x		1047253	0					
ANR	1047755	PtrMemberAccess	s0 -> pt		1047253	0					
ANR	1047756	Identifier	s0		1047253	0					
ANR	1047757	Identifier	pt		1047253	1					
ANR	1047758	Identifier	x		1047253	1					
ANR	1047759	MemberAccess	cs -> p1 . x		1047253	1					
ANR	1047760	PtrMemberAccess	cs -> p1		1047253	0					
ANR	1047761	Identifier	cs		1047253	0					
ANR	1047762	Identifier	p1		1047253	1					
ANR	1047763	Identifier	x		1047253	1					
ANR	1047764	AndExpression	cs -> p1 . x >= cs -> p2 . x && cs -> p2 . x >= cs -> pt . x		1047253	1		&&			
ANR	1047765	RelationalExpression	cs -> p1 . x >= cs -> p2 . x		1047253	0		>=			
ANR	1047766	MemberAccess	cs -> p1 . x		1047253	0					
ANR	1047767	PtrMemberAccess	cs -> p1		1047253	0					
ANR	1047768	Identifier	cs		1047253	0					
ANR	1047769	Identifier	p1		1047253	1					
ANR	1047770	Identifier	x		1047253	1					
ANR	1047771	MemberAccess	cs -> p2 . x		1047253	1					
ANR	1047772	PtrMemberAccess	cs -> p2		1047253	0					
ANR	1047773	Identifier	cs		1047253	0					
ANR	1047774	Identifier	p2		1047253	1					
ANR	1047775	Identifier	x		1047253	1					
ANR	1047776	RelationalExpression	cs -> p2 . x >= cs -> pt . x		1047253	1		>=			
ANR	1047777	MemberAccess	cs -> p2 . x		1047253	0					
ANR	1047778	PtrMemberAccess	cs -> p2		1047253	0					
ANR	1047779	Identifier	cs		1047253	0					
ANR	1047780	Identifier	p2		1047253	1					
ANR	1047781	Identifier	x		1047253	1					
ANR	1047782	MemberAccess	cs -> pt . x		1047253	1					
ANR	1047783	PtrMemberAccess	cs -> pt		1047253	0					
ANR	1047784	Identifier	cs		1047253	0					
ANR	1047785	Identifier	pt		1047253	1					
ANR	1047786	Identifier	x		1047253	1					
ANR	1047787	ElseStatement	else		1047253	0					
ANR	1047788	CompoundStatement		47:11:2167:2167	1047253	0					
ANR	1047789	ExpressionStatement	"gx_flattened_iterator__init_line ( & alp -> fi , s0 -> pt . x , s0 -> pt . y , s1 -> pt . x , s1 -> pt . y )"	1268:8:49432:49530	1047253	0	True				
ANR	1047790	CallExpression	"gx_flattened_iterator__init_line ( & alp -> fi , s0 -> pt . x , s0 -> pt . y , s1 -> pt . x , s1 -> pt . y )"		1047253	0					
ANR	1047791	Callee	gx_flattened_iterator__init_line		1047253	0					
ANR	1047792	Identifier	gx_flattened_iterator__init_line		1047253	0					
ANR	1047793	ArgumentList	& alp -> fi		1047253	1					
ANR	1047794	Argument	& alp -> fi		1047253	0					
ANR	1047795	UnaryOperationExpression	& alp -> fi		1047253	0					
ANR	1047796	UnaryOperator	&		1047253	0					
ANR	1047797	PtrMemberAccess	alp -> fi		1047253	1					
ANR	1047798	Identifier	alp		1047253	0					
ANR	1047799	Identifier	fi		1047253	1					
ANR	1047800	Argument	s0 -> pt . x		1047253	1					
ANR	1047801	MemberAccess	s0 -> pt . x		1047253	0					
ANR	1047802	PtrMemberAccess	s0 -> pt		1047253	0					
ANR	1047803	Identifier	s0		1047253	0					
ANR	1047804	Identifier	pt		1047253	1					
ANR	1047805	Identifier	x		1047253	1					
ANR	1047806	Argument	s0 -> pt . y		1047253	2					
ANR	1047807	MemberAccess	s0 -> pt . y		1047253	0					
ANR	1047808	PtrMemberAccess	s0 -> pt		1047253	0					
ANR	1047809	Identifier	s0		1047253	0					
ANR	1047810	Identifier	pt		1047253	1					
ANR	1047811	Identifier	y		1047253	1					
ANR	1047812	Argument	s1 -> pt . x		1047253	3					
ANR	1047813	MemberAccess	s1 -> pt . x		1047253	0					
ANR	1047814	PtrMemberAccess	s1 -> pt		1047253	0					
ANR	1047815	Identifier	s1		1047253	0					
ANR	1047816	Identifier	pt		1047253	1					
ANR	1047817	Identifier	x		1047253	1					
ANR	1047818	Argument	s1 -> pt . y		1047253	4					
ANR	1047819	MemberAccess	s1 -> pt . y		1047253	0					
ANR	1047820	PtrMemberAccess	s1 -> pt		1047253	0					
ANR	1047821	Identifier	s1		1047253	0					
ANR	1047822	Identifier	pt		1047253	1					
ANR	1047823	Identifier	y		1047253	1					
ANR	1047824	ExpressionStatement	"code = step_al ( alp , true )"	1270:8:49540:49565	1047253	1	True				
ANR	1047825	AssignmentExpression	"code = step_al ( alp , true )"		1047253	0		=			
ANR	1047826	Identifier	code		1047253	0					
ANR	1047827	CallExpression	"step_al ( alp , true )"		1047253	1					
ANR	1047828	Callee	step_al		1047253	0					
ANR	1047829	Identifier	step_al		1047253	0					
ANR	1047830	ArgumentList	alp		1047253	1					
ANR	1047831	Argument	alp		1047253	0					
ANR	1047832	Identifier	alp		1047253	0					
ANR	1047833	Argument	true		1047253	1					
ANR	1047834	Identifier	true		1047253	0					
ANR	1047835	IfStatement	if ( code < 0 )		1047253	2					
ANR	1047836	Condition	code < 0	1271:12:49579:49586	1047253	0	True				
ANR	1047837	RelationalExpression	code < 0		1047253	0		<			
ANR	1047838	Identifier	code		1047253	0					
ANR	1047839	PrimaryExpression	0		1047253	1					
ANR	1047840	ReturnStatement	return code ;	1272:12:49601:49612	1047253	1	True				
ANR	1047841	Identifier	code		1047253	0					
ANR	1047842	ExpressionStatement	alp -> monotonic_x = alp -> monotonic_y = true	1273:8:49622:49664	1047253	3	True				
ANR	1047843	AssignmentExpression	alp -> monotonic_x = alp -> monotonic_y = true		1047253	0		=			
ANR	1047844	PtrMemberAccess	alp -> monotonic_x		1047253	0					
ANR	1047845	Identifier	alp		1047253	0					
ANR	1047846	Identifier	monotonic_x		1047253	1					
ANR	1047847	AssignmentExpression	alp -> monotonic_y = true		1047253	1		=			
ANR	1047848	PtrMemberAccess	alp -> monotonic_y		1047253	0					
ANR	1047849	Identifier	alp		1047253	0					
ANR	1047850	Identifier	monotonic_y		1047253	1					
ANR	1047851	Identifier	true		1047253	1					
ANR	1047852	ExpressionStatement	alp -> pseg = s1	1275:4:49676:49690	1047253	4	True				
ANR	1047853	AssignmentExpression	alp -> pseg = s1		1047253	0		=			
ANR	1047854	PtrMemberAccess	alp -> pseg		1047253	0					
ANR	1047855	Identifier	alp		1047253	0					
ANR	1047856	Identifier	pseg		1047253	1					
ANR	1047857	Identifier	s1		1047253	1					
ANR	1047858	ReturnStatement	return 0 ;	1276:4:49696:49704	1047253	5	True				
ANR	1047859	PrimaryExpression	0		1047253	0					
ANR	1047860	ReturnType	static int		1047253	1					
ANR	1047861	Identifier	init_al		1047253	2					
ANR	1047862	ParameterList	"active_line * alp , const segment * s0 , const segment * s1 , const line_list * ll"		1047253	3					
ANR	1047863	Parameter	active_line * alp	1220:8:47177:47192	1047253	0	True				
ANR	1047864	ParameterType	active_line *		1047253	0					
ANR	1047865	Identifier	alp		1047253	1					
ANR	1047866	Parameter	const segment * s0	1220:26:47195:47211	1047253	1	True				
ANR	1047867	ParameterType	const segment *		1047253	0					
ANR	1047868	Identifier	s0		1047253	1					
ANR	1047869	Parameter	const segment * s1	1220:45:47214:47230	1047253	2	True				
ANR	1047870	ParameterType	const segment *		1047253	0					
ANR	1047871	Identifier	s1		1047253	1					
ANR	1047872	Parameter	const line_list * ll	1220:64:47233:47251	1047253	3	True				
ANR	1047873	ParameterType	const line_list *		1047253	0					
ANR	1047874	Identifier	ll		1047253	1					
ANR	1047875	CFGEntryNode	ENTRY		1047253		True				
ANR	1047876	CFGExitNode	EXIT		1047253		True				
ANR	1047877	Symbol	ll		1047253						
ANR	1047878	Symbol	* ss		1047253						
ANR	1047879	Symbol	cs -> pt . x		1047253						
ANR	1047880	Symbol	gx_flattened_iterator__next		1047253						
ANR	1047881	Symbol	cs -> pt . y		1047253						
ANR	1047882	Symbol	alp -> pseg		1047253						
ANR	1047883	Symbol	s_curve		1047253						
ANR	1047884	Symbol	cs -> pt		1047253						
ANR	1047885	Symbol	cs -> p1 . y		1047253						
ANR	1047886	Symbol	s1 -> pt . y		1047253						
ANR	1047887	Symbol	cs -> p1 . x		1047253						
ANR	1047888	Symbol	s0 -> pt		1047253						
ANR	1047889	Symbol	ss -> type		1047253						
ANR	1047890	Symbol	DIR_UP		1047253						
ANR	1047891	Symbol	s0		1047253						
ANR	1047892	Symbol	ll -> fo -> fixed_flat		1047253						
ANR	1047893	Symbol	s1 -> pt . x		1047253						
ANR	1047894	Symbol	s1		1047253						
ANR	1047895	Symbol	NULL		1047253						
ANR	1047896	Symbol	alp		1047253						
ANR	1047897	Symbol	& alp -> fi		1047253						
ANR	1047898	Symbol	cs -> p2 . x		1047253						
ANR	1047899	Symbol	* ll		1047253						
ANR	1047900	Symbol	ll -> fo		1047253						
ANR	1047901	Symbol	cs -> p2 . y		1047253						
ANR	1047902	Symbol	s0 -> pt . y		1047253						
ANR	1047903	Symbol	s0 -> pt . x		1047253						
ANR	1047904	Symbol	gx_curve_log2_samples		1047253						
ANR	1047905	Symbol	alp -> more_flattened		1047253						
ANR	1047906	Symbol	* cs		1047253						
ANR	1047907	Symbol	true		1047253						
ANR	1047908	Symbol	s1 -> pt		1047253						
ANR	1047909	Symbol	* s0		1047253						
ANR	1047910	Symbol	alp -> direction		1047253						
ANR	1047911	Symbol	* ll -> fo		1047253						
ANR	1047912	Symbol	code		1047253						
ANR	1047913	Symbol	curve		1047253						
ANR	1047914	Symbol	* s1		1047253						
ANR	1047915	Symbol	ll -> fo -> fill_by_trapezoids		1047253						
ANR	1047916	Symbol	alp -> monotonic_y		1047253						
ANR	1047917	Symbol	cs -> p1		1047253						
ANR	1047918	Symbol	cs -> p2		1047253						
ANR	1047919	Symbol	alp -> monotonic_x		1047253						
ANR	1047920	Symbol	step_al		1047253						
ANR	1047921	Symbol	ss		1047253						
ANR	1047922	Symbol	more		1047253						
ANR	1047923	Symbol	false		1047253						
ANR	1047924	Symbol	k		1047253						
ANR	1047925	Symbol	* * ll		1047253						
ANR	1047926	Symbol	* alp		1047253						
ANR	1047927	Symbol	cs		1047253						
ANR	1047928	Function	add_y_line_aux	1282:0:49803:50825							
ANR	1047929	FunctionDef	"add_y_line_aux (const segment * prev_lp , const segment * lp , const gs_fixed_point * curr , const gs_fixed_point * prev , int dir , line_list * ll)"		1047928	0					
ANR	1047930	CompoundStatement		1285:0:49966:50825	1047928	0					
ANR	1047931	IdentifierDeclStatement	int code ;	1286:4:49972:49980	1047928	0	True				
ANR	1047932	IdentifierDecl	code		1047928	0					
ANR	1047933	IdentifierDeclType	int		1047928	0					
ANR	1047934	Identifier	code		1047928	1					
ANR	1047935	IdentifierDeclStatement	active_line * alp = make_al ( ll ) ;	1288:4:49987:50017	1047928	1	True				
ANR	1047936	IdentifierDecl	* alp = make_al ( ll )		1047928	0					
ANR	1047937	IdentifierDeclType	active_line *		1047928	0					
ANR	1047938	Identifier	alp		1047928	1					
ANR	1047939	AssignmentExpression	* alp = make_al ( ll )		1047928	2		=			
ANR	1047940	Identifier	alp		1047928	0					
ANR	1047941	CallExpression	make_al ( ll )		1047928	1					
ANR	1047942	Callee	make_al		1047928	0					
ANR	1047943	Identifier	make_al		1047928	0					
ANR	1047944	ArgumentList	ll		1047928	1					
ANR	1047945	Argument	ll		1047928	0					
ANR	1047946	Identifier	ll		1047928	0					
ANR	1047947	IfStatement	if ( alp == NULL )		1047928	2					
ANR	1047948	Condition	alp == NULL	1289:8:50027:50037	1047928	0	True				
ANR	1047949	EqualityExpression	alp == NULL		1047928	0		==			
ANR	1047950	Identifier	alp		1047928	0					
ANR	1047951	Identifier	NULL		1047928	1					
ANR	1047952	ExpressionStatement	return_error ( gs_error_VMerror )	1290:8:50048:50078	1047928	1	True				
ANR	1047953	CallExpression	return_error ( gs_error_VMerror )		1047928	0					
ANR	1047954	Callee	return_error		1047928	0					
ANR	1047955	Identifier	return_error		1047928	0					
ANR	1047956	ArgumentList	gs_error_VMerror		1047928	1					
ANR	1047957	Argument	gs_error_VMerror		1047928	0					
ANR	1047958	Identifier	gs_error_VMerror		1047928	0					
ANR	1047959	ExpressionStatement	alp -> more_flattened = false	1291:4:50084:50111	1047928	3	True				
ANR	1047960	AssignmentExpression	alp -> more_flattened = false		1047928	0		=			
ANR	1047961	PtrMemberAccess	alp -> more_flattened		1047928	0					
ANR	1047962	Identifier	alp		1047928	0					
ANR	1047963	Identifier	more_flattened		1047928	1					
ANR	1047964	Identifier	false		1047928	1					
ANR	1047965	SwitchStatement	switch ( ( alp -> direction = dir ) )		1047928	4					
ANR	1047966	Condition	alp -> direction = dir	1292:12:50125:50146	1047928	0	True				
ANR	1047967	AssignmentExpression	alp -> direction = dir		1047928	0		=			
ANR	1047968	PtrMemberAccess	alp -> direction		1047928	0					
ANR	1047969	Identifier	alp		1047928	0					
ANR	1047970	Identifier	direction		1047928	1					
ANR	1047971	Identifier	dir		1047928	1					
ANR	1047972	CompoundStatement		8:36:182:182	1047928	1					
ANR	1047973	Label	case DIR_UP :	1293:8:50159:50170	1047928	0	True				
ANR	1047974	Identifier	DIR_UP		1047928	0					
ANR	1047975	ExpressionStatement	"code = init_al ( alp , prev_lp , lp , ll )"	1294:12:50184:50220	1047928	1	True				
ANR	1047976	AssignmentExpression	"code = init_al ( alp , prev_lp , lp , ll )"		1047928	0		=			
ANR	1047977	Identifier	code		1047928	0					
ANR	1047978	CallExpression	"init_al ( alp , prev_lp , lp , ll )"		1047928	1					
ANR	1047979	Callee	init_al		1047928	0					
ANR	1047980	Identifier	init_al		1047928	0					
ANR	1047981	ArgumentList	alp		1047928	1					
ANR	1047982	Argument	alp		1047928	0					
ANR	1047983	Identifier	alp		1047928	0					
ANR	1047984	Argument	prev_lp		1047928	1					
ANR	1047985	Identifier	prev_lp		1047928	0					
ANR	1047986	Argument	lp		1047928	2					
ANR	1047987	Identifier	lp		1047928	0					
ANR	1047988	Argument	ll		1047928	3					
ANR	1047989	Identifier	ll		1047928	0					
ANR	1047990	IfStatement	if ( code < 0 )		1047928	2					
ANR	1047991	Condition	code < 0	1295:16:50238:50245	1047928	0	True				
ANR	1047992	RelationalExpression	code < 0		1047928	0		<			
ANR	1047993	Identifier	code		1047928	0					
ANR	1047994	PrimaryExpression	0		1047928	1					
ANR	1047995	ReturnStatement	return code ;	1296:16:50264:50275	1047928	1	True				
ANR	1047996	Identifier	code		1047928	0					
ANR	1047997	BreakStatement	break ;	1297:12:50289:50294	1047928	3	True				
ANR	1047998	Label	case DIR_DOWN :	1298:8:50304:50317	1047928	4	True				
ANR	1047999	Identifier	DIR_DOWN		1047928	0					
ANR	1048000	ExpressionStatement	"code = init_al ( alp , lp , prev_lp , ll )"	1299:12:50331:50367	1047928	5	True				
ANR	1048001	AssignmentExpression	"code = init_al ( alp , lp , prev_lp , ll )"		1047928	0		=			
ANR	1048002	Identifier	code		1047928	0					
ANR	1048003	CallExpression	"init_al ( alp , lp , prev_lp , ll )"		1047928	1					
ANR	1048004	Callee	init_al		1047928	0					
ANR	1048005	Identifier	init_al		1047928	0					
ANR	1048006	ArgumentList	alp		1047928	1					
ANR	1048007	Argument	alp		1047928	0					
ANR	1048008	Identifier	alp		1047928	0					
ANR	1048009	Argument	lp		1047928	1					
ANR	1048010	Identifier	lp		1047928	0					
ANR	1048011	Argument	prev_lp		1047928	2					
ANR	1048012	Identifier	prev_lp		1047928	0					
ANR	1048013	Argument	ll		1047928	3					
ANR	1048014	Identifier	ll		1047928	0					
ANR	1048015	IfStatement	if ( code < 0 )		1047928	6					
ANR	1048016	Condition	code < 0	1300:16:50385:50392	1047928	0	True				
ANR	1048017	RelationalExpression	code < 0		1047928	0		<			
ANR	1048018	Identifier	code		1047928	0					
ANR	1048019	PrimaryExpression	0		1047928	1					
ANR	1048020	ReturnStatement	return code ;	1301:16:50411:50422	1047928	1	True				
ANR	1048021	Identifier	code		1047928	0					
ANR	1048022	BreakStatement	break ;	1302:12:50436:50441	1047928	7	True				
ANR	1048023	Label	case DIR_HORIZONTAL :	1303:8:50451:50470	1047928	8	True				
ANR	1048024	Identifier	DIR_HORIZONTAL		1047928	0					
ANR	1048025	ExpressionStatement	alp -> start = * prev	1304:12:50484:50502	1047928	9	True				
ANR	1048026	AssignmentExpression	alp -> start = * prev		1047928	0		=			
ANR	1048027	PtrMemberAccess	alp -> start		1047928	0					
ANR	1048028	Identifier	alp		1047928	0					
ANR	1048029	Identifier	start		1047928	1					
ANR	1048030	UnaryOperationExpression	* prev		1047928	1					
ANR	1048031	UnaryOperator	*		1047928	0					
ANR	1048032	Identifier	prev		1047928	1					
ANR	1048033	ExpressionStatement	alp -> end = * curr	1305:12:50516:50532	1047928	10	True				
ANR	1048034	AssignmentExpression	alp -> end = * curr		1047928	0		=			
ANR	1048035	PtrMemberAccess	alp -> end		1047928	0					
ANR	1048036	Identifier	alp		1047928	0					
ANR	1048037	Identifier	end		1047928	1					
ANR	1048038	UnaryOperationExpression	* curr		1047928	1					
ANR	1048039	UnaryOperator	*		1047928	0					
ANR	1048040	Identifier	curr		1047928	1					
ANR	1048041	ExpressionStatement	alp -> pseg = prev_lp	1307:12:50599:50618	1047928	11	True				
ANR	1048042	AssignmentExpression	alp -> pseg = prev_lp		1047928	0		=			
ANR	1048043	PtrMemberAccess	alp -> pseg		1047928	0					
ANR	1048044	Identifier	alp		1047928	0					
ANR	1048045	Identifier	pseg		1047928	1					
ANR	1048046	Identifier	prev_lp		1047928	1					
ANR	1048047	BreakStatement	break ;	1308:12:50670:50675	1047928	12	True				
ANR	1048048	Label	default :	1309:8:50685:50692	1047928	13	True				
ANR	1048049	Identifier	default		1047928	0					
ANR	1048050	ExpressionStatement	return_error ( gs_error_unregistered )	1310:12:50740:50775	1047928	14	True				
ANR	1048051	CallExpression	return_error ( gs_error_unregistered )		1047928	0					
ANR	1048052	Callee	return_error		1047928	0					
ANR	1048053	Identifier	return_error		1047928	0					
ANR	1048054	ArgumentList	gs_error_unregistered		1047928	1					
ANR	1048055	Argument	gs_error_unregistered		1047928	0					
ANR	1048056	Identifier	gs_error_unregistered		1047928	0					
ANR	1048057	ExpressionStatement	"insert_y_line ( ll , alp )"	1312:4:50787:50809	1047928	5	True				
ANR	1048058	CallExpression	"insert_y_line ( ll , alp )"		1047928	0					
ANR	1048059	Callee	insert_y_line		1047928	0					
ANR	1048060	Identifier	insert_y_line		1047928	0					
ANR	1048061	ArgumentList	ll		1047928	1					
ANR	1048062	Argument	ll		1047928	0					
ANR	1048063	Identifier	ll		1047928	0					
ANR	1048064	Argument	alp		1047928	1					
ANR	1048065	Identifier	alp		1047928	0					
ANR	1048066	ReturnStatement	return 0 ;	1313:4:50815:50823	1047928	6	True				
ANR	1048067	PrimaryExpression	0		1047928	0					
ANR	1048068	ReturnType	static int		1047928	1					
ANR	1048069	Identifier	add_y_line_aux		1047928	2					
ANR	1048070	ParameterList	"const segment * prev_lp , const segment * lp , const gs_fixed_point * curr , const gs_fixed_point * prev , int dir , line_list * ll"		1047928	3					
ANR	1048071	Parameter	const segment * prev_lp	1283:15:49829:49851	1047928	0	True				
ANR	1048072	ParameterType	const segment *		1047928	0					
ANR	1048073	Identifier	prev_lp		1047928	1					
ANR	1048074	Parameter	const segment * lp	1283:40:49854:49871	1047928	1	True				
ANR	1048075	ParameterType	const segment *		1047928	0					
ANR	1048076	Identifier	lp		1047928	1					
ANR	1048077	Parameter	const gs_fixed_point * curr	1284:12:49886:49911	1047928	2	True				
ANR	1048078	ParameterType	const gs_fixed_point *		1047928	0					
ANR	1048079	Identifier	curr		1047928	1					
ANR	1048080	Parameter	const gs_fixed_point * prev	1284:40:49914:49939	1047928	3	True				
ANR	1048081	ParameterType	const gs_fixed_point *		1047928	0					
ANR	1048082	Identifier	prev		1047928	1					
ANR	1048083	Parameter	int dir	1284:68:49942:49948	1047928	4	True				
ANR	1048084	ParameterType	int		1047928	0					
ANR	1048085	Identifier	dir		1047928	1					
ANR	1048086	Parameter	line_list * ll	1284:77:49951:49963	1047928	5	True				
ANR	1048087	ParameterType	line_list *		1047928	0					
ANR	1048088	Identifier	ll		1047928	1					
ANR	1048089	CFGEntryNode	ENTRY		1047928		True				
ANR	1048090	CFGExitNode	EXIT		1047928		True				
ANR	1048091	Symbol	ll		1047928						
ANR	1048092	Symbol	alp -> direction		1047928						
ANR	1048093	Symbol	gs_error_unregistered		1047928						
ANR	1048094	Symbol	code		1047928						
ANR	1048095	Symbol	NULL		1047928						
ANR	1048096	Symbol	lp		1047928						
ANR	1048097	Symbol	alp		1047928						
ANR	1048098	Symbol	alp -> end		1047928						
ANR	1048099	Symbol	prev		1047928						
ANR	1048100	Symbol	false		1047928						
ANR	1048101	Symbol	* prev		1047928						
ANR	1048102	Symbol	dir		1047928						
ANR	1048103	Symbol	alp -> pseg		1047928						
ANR	1048104	Symbol	* alp		1047928						
ANR	1048105	Symbol	gs_error_VMerror		1047928						
ANR	1048106	Symbol	alp -> more_flattened		1047928						
ANR	1048107	Symbol	* curr		1047928						
ANR	1048108	Symbol	prev_lp		1047928						
ANR	1048109	Symbol	alp -> start		1047928						
ANR	1048110	Symbol	init_al		1047928						
ANR	1048111	Symbol	curr		1047928						
ANR	1048112	Symbol	make_al		1047928						
ANR	1048113	Function	insert_x_new	1319:0:50944:51558							
ANR	1048114	FunctionDef	"insert_x_new (active_line * alp , line_list * ll)"		1048113	0					
ANR	1048115	CompoundStatement		1321:0:51003:51558	1048113	0					
ANR	1048116	IdentifierDeclStatement	active_line * next ;	1322:4:51009:51026	1048113	0	True				
ANR	1048117	IdentifierDecl	* next		1048113	0					
ANR	1048118	IdentifierDeclType	active_line *		1048113	0					
ANR	1048119	Identifier	next		1048113	1					
ANR	1048120	IdentifierDeclStatement	active_line * prev = & ll -> x_head ;	1323:4:51032:51063	1048113	1	True				
ANR	1048121	IdentifierDecl	* prev = & ll -> x_head		1048113	0					
ANR	1048122	IdentifierDeclType	active_line *		1048113	0					
ANR	1048123	Identifier	prev		1048113	1					
ANR	1048124	AssignmentExpression	* prev = & ll -> x_head		1048113	2		=			
ANR	1048125	Identifier	prev		1048113	0					
ANR	1048126	UnaryOperationExpression	& ll -> x_head		1048113	1					
ANR	1048127	UnaryOperator	&		1048113	0					
ANR	1048128	PtrMemberAccess	ll -> x_head		1048113	1					
ANR	1048129	Identifier	ll		1048113	0					
ANR	1048130	Identifier	x_head		1048113	1					
ANR	1048131	ExpressionStatement	alp -> x_current = alp -> start . x	1325:4:51070:51099	1048113	2	True				
ANR	1048132	AssignmentExpression	alp -> x_current = alp -> start . x		1048113	0		=			
ANR	1048133	PtrMemberAccess	alp -> x_current		1048113	0					
ANR	1048134	Identifier	alp		1048113	0					
ANR	1048135	Identifier	x_current		1048113	1					
ANR	1048136	MemberAccess	alp -> start . x		1048113	1					
ANR	1048137	PtrMemberAccess	alp -> start		1048113	0					
ANR	1048138	Identifier	alp		1048113	0					
ANR	1048139	Identifier	start		1048113	1					
ANR	1048140	Identifier	x		1048113	1					
ANR	1048141	ExpressionStatement	alp -> x_next = alp -> start . x	1326:4:51105:51131	1048113	3	True				
ANR	1048142	AssignmentExpression	alp -> x_next = alp -> start . x		1048113	0		=			
ANR	1048143	PtrMemberAccess	alp -> x_next		1048113	0					
ANR	1048144	Identifier	alp		1048113	0					
ANR	1048145	Identifier	x_next		1048113	1					
ANR	1048146	MemberAccess	alp -> start . x		1048113	1					
ANR	1048147	PtrMemberAccess	alp -> start		1048113	0					
ANR	1048148	Identifier	alp		1048113	0					
ANR	1048149	Identifier	start		1048113	1					
ANR	1048150	Identifier	x		1048113	1					
ANR	1048151	WhileStatement	"while ( INCR_EXPR ( x_step ) , ( next = prev -> next ) != 0 && x_order ( next , alp ) < 0 )"		1048113	4					
ANR	1048152	Condition	"INCR_EXPR ( x_step ) , ( next = prev -> next ) != 0 && x_order ( next , alp ) < 0"	1329:11:51335:51414	1048113	0	True				
ANR	1048153	Expression	"INCR_EXPR ( x_step ) , ( next = prev -> next ) != 0 && x_order ( next , alp ) < 0"		1048113	0					
ANR	1048154	CallExpression	INCR_EXPR ( x_step )		1048113	0					
ANR	1048155	Callee	INCR_EXPR		1048113	0					
ANR	1048156	Identifier	INCR_EXPR		1048113	0					
ANR	1048157	ArgumentList	x_step		1048113	1					
ANR	1048158	Argument	x_step		1048113	0					
ANR	1048159	Identifier	x_step		1048113	0					
ANR	1048160	AndExpression	"( next = prev -> next ) != 0 && x_order ( next , alp ) < 0"		1048113	1		&&			
ANR	1048161	EqualityExpression	( next = prev -> next ) != 0		1048113	0		!=			
ANR	1048162	AssignmentExpression	next = prev -> next		1048113	0		=			
ANR	1048163	Identifier	next		1048113	0					
ANR	1048164	PtrMemberAccess	prev -> next		1048113	1					
ANR	1048165	Identifier	prev		1048113	0					
ANR	1048166	Identifier	next		1048113	1					
ANR	1048167	PrimaryExpression	0		1048113	1					
ANR	1048168	RelationalExpression	"x_order ( next , alp ) < 0"		1048113	1		<			
ANR	1048169	CallExpression	"x_order ( next , alp )"		1048113	0					
ANR	1048170	Callee	x_order		1048113	0					
ANR	1048171	Identifier	x_order		1048113	0					
ANR	1048172	ArgumentList	next		1048113	1					
ANR	1048173	Argument	next		1048113	0					
ANR	1048174	Identifier	next		1048113	0					
ANR	1048175	Argument	alp		1048113	1					
ANR	1048176	Identifier	alp		1048113	0					
ANR	1048177	PrimaryExpression	0		1048113	1					
ANR	1048178	ExpressionStatement	prev = next	1332:8:51434:51445	1048113	1	True				
ANR	1048179	AssignmentExpression	prev = next		1048113	0		=			
ANR	1048180	Identifier	prev		1048113	0					
ANR	1048181	Identifier	next		1048113	1					
ANR	1048182	ExpressionStatement	alp -> next = next	1333:4:51451:51467	1048113	5	True				
ANR	1048183	AssignmentExpression	alp -> next = next		1048113	0		=			
ANR	1048184	PtrMemberAccess	alp -> next		1048113	0					
ANR	1048185	Identifier	alp		1048113	0					
ANR	1048186	Identifier	next		1048113	1					
ANR	1048187	Identifier	next		1048113	1					
ANR	1048188	ExpressionStatement	alp -> prev = prev	1334:4:51473:51489	1048113	6	True				
ANR	1048189	AssignmentExpression	alp -> prev = prev		1048113	0		=			
ANR	1048190	PtrMemberAccess	alp -> prev		1048113	0					
ANR	1048191	Identifier	alp		1048113	0					
ANR	1048192	Identifier	prev		1048113	1					
ANR	1048193	Identifier	prev		1048113	1					
ANR	1048194	IfStatement	if ( next != 0 )		1048113	7					
ANR	1048195	Condition	next != 0	1335:8:51499:51507	1048113	0	True				
ANR	1048196	EqualityExpression	next != 0		1048113	0		!=			
ANR	1048197	Identifier	next		1048113	0					
ANR	1048198	PrimaryExpression	0		1048113	1					
ANR	1048199	ExpressionStatement	next -> prev = alp	1336:8:51518:51534	1048113	1	True				
ANR	1048200	AssignmentExpression	next -> prev = alp		1048113	0		=			
ANR	1048201	PtrMemberAccess	next -> prev		1048113	0					
ANR	1048202	Identifier	next		1048113	0					
ANR	1048203	Identifier	prev		1048113	1					
ANR	1048204	Identifier	alp		1048113	1					
ANR	1048205	ExpressionStatement	prev -> next = alp	1337:4:51540:51556	1048113	8	True				
ANR	1048206	AssignmentExpression	prev -> next = alp		1048113	0		=			
ANR	1048207	PtrMemberAccess	prev -> next		1048113	0					
ANR	1048208	Identifier	prev		1048113	0					
ANR	1048209	Identifier	next		1048113	1					
ANR	1048210	Identifier	alp		1048113	1					
ANR	1048211	ReturnType	static void		1048113	1					
ANR	1048212	Identifier	insert_x_new		1048113	2					
ANR	1048213	ParameterList	"active_line * alp , line_list * ll"		1048113	3					
ANR	1048214	Parameter	active_line * alp	1320:13:50969:50985	1048113	0	True				
ANR	1048215	ParameterType	active_line *		1048113	0					
ANR	1048216	Identifier	alp		1048113	1					
ANR	1048217	Parameter	line_list * ll	1320:32:50988:51000	1048113	1	True				
ANR	1048218	ParameterType	line_list *		1048113	0					
ANR	1048219	Identifier	ll		1048113	1					
ANR	1048220	CFGEntryNode	ENTRY		1048113		True				
ANR	1048221	CFGExitNode	EXIT		1048113		True				
ANR	1048222	Symbol	ll		1048113						
ANR	1048223	Symbol	next		1048113						
ANR	1048224	Symbol	& ll -> x_head		1048113						
ANR	1048225	Symbol	prev -> next		1048113						
ANR	1048226	Symbol	alp		1048113						
ANR	1048227	Symbol	x_step		1048113						
ANR	1048228	Symbol	prev		1048113						
ANR	1048229	Symbol	alp -> x_current		1048113						
ANR	1048230	Symbol	INCR_EXPR		1048113						
ANR	1048231	Symbol	* prev		1048113						
ANR	1048232	Symbol	* next		1048113						
ANR	1048233	Symbol	* alp		1048113						
ANR	1048234	Symbol	alp -> x_next		1048113						
ANR	1048235	Symbol	alp -> prev		1048113						
ANR	1048236	Symbol	alp -> start . x		1048113						
ANR	1048237	Symbol	alp -> next		1048113						
ANR	1048238	Symbol	next -> prev		1048113						
ANR	1048239	Symbol	alp -> start		1048113						
ANR	1048240	Symbol	x_order		1048113						
ANR	1048241	Function	insert_h_new	1345:0:51789:52375							
ANR	1048242	FunctionDef	"insert_h_new (active_line * alp , line_list * ll)"		1048241	0					
ANR	1048243	CompoundStatement		1347:0:51855:52375	1048241	0					
ANR	1048244	ExpressionStatement	alp -> next = ll -> h_list0	1348:4:51861:51884	1048241	0	True				
ANR	1048245	AssignmentExpression	alp -> next = ll -> h_list0		1048241	0		=			
ANR	1048246	PtrMemberAccess	alp -> next		1048241	0					
ANR	1048247	Identifier	alp		1048241	0					
ANR	1048248	Identifier	next		1048241	1					
ANR	1048249	PtrMemberAccess	ll -> h_list0		1048241	1					
ANR	1048250	Identifier	ll		1048241	0					
ANR	1048251	Identifier	h_list0		1048241	1					
ANR	1048252	ExpressionStatement	alp -> prev = 0	1349:4:51890:51903	1048241	1	True				
ANR	1048253	AssignmentExpression	alp -> prev = 0		1048241	0		=			
ANR	1048254	PtrMemberAccess	alp -> prev		1048241	0					
ANR	1048255	Identifier	alp		1048241	0					
ANR	1048256	Identifier	prev		1048241	1					
ANR	1048257	PrimaryExpression	0		1048241	1					
ANR	1048258	IfStatement	if ( ll -> h_list0 != 0 )		1048241	2					
ANR	1048259	Condition	ll -> h_list0 != 0	1350:8:51913:51928	1048241	0	True				
ANR	1048260	EqualityExpression	ll -> h_list0 != 0		1048241	0		!=			
ANR	1048261	PtrMemberAccess	ll -> h_list0		1048241	0					
ANR	1048262	Identifier	ll		1048241	0					
ANR	1048263	Identifier	h_list0		1048241	1					
ANR	1048264	PrimaryExpression	0		1048241	1					
ANR	1048265	ExpressionStatement	ll -> h_list0 -> prev = alp	1351:8:51939:51962	1048241	1	True				
ANR	1048266	AssignmentExpression	ll -> h_list0 -> prev = alp		1048241	0		=			
ANR	1048267	PtrMemberAccess	ll -> h_list0 -> prev		1048241	0					
ANR	1048268	PtrMemberAccess	ll -> h_list0		1048241	0					
ANR	1048269	Identifier	ll		1048241	0					
ANR	1048270	Identifier	h_list0		1048241	1					
ANR	1048271	Identifier	prev		1048241	1					
ANR	1048272	Identifier	alp		1048241	1					
ANR	1048273	ExpressionStatement	ll -> h_list0 = alp	1352:4:51968:51985	1048241	3	True				
ANR	1048274	AssignmentExpression	ll -> h_list0 = alp		1048241	0		=			
ANR	1048275	PtrMemberAccess	ll -> h_list0		1048241	0					
ANR	1048276	Identifier	ll		1048241	0					
ANR	1048277	Identifier	h_list0		1048241	1					
ANR	1048278	Identifier	alp		1048241	1					
ANR	1048279	ReturnType	static inline void		1048241	1					
ANR	1048280	Identifier	insert_h_new		1048241	2					
ANR	1048281	ParameterList	"active_line * alp , line_list * ll"		1048241	3					
ANR	1048282	Parameter	active_line * alp	1346:13:51821:51837	1048241	0	True				
ANR	1048283	ParameterType	active_line *		1048241	0					
ANR	1048284	Identifier	alp		1048241	1					
ANR	1048285	Parameter	line_list * ll	1346:32:51840:51852	1048241	1	True				
ANR	1048286	ParameterType	line_list *		1048241	0					
ANR	1048287	Identifier	ll		1048241	1					
ANR	1048288	CFGEntryNode	ENTRY		1048241		True				
ANR	1048289	CFGExitNode	EXIT		1048241		True				
ANR	1048290	Symbol	ll		1048241						
ANR	1048291	Symbol	* alp		1048241						
ANR	1048292	Symbol	alp -> prev		1048241						
ANR	1048293	Symbol	alp -> next		1048241						
ANR	1048294	Symbol	ll -> h_list0 -> prev		1048241						
ANR	1048295	Symbol	alp		1048241						
ANR	1048296	Symbol	ll -> h_list0		1048241						
ANR	1048297	Symbol	* ll		1048241						
ANR	1048298	Symbol	* ll -> h_list0		1048241						
ANR	1048299	Symbol	* * ll		1048241						
ANR	1048300	Function	remove_al	1363:0:52378:52619							
ANR	1048301	FunctionDef	"remove_al (const line_list * ll , active_line * alp)"		1048300	0					
ANR	1048302	CompoundStatement		1365:0:52446:52619	1048300	0					
ANR	1048303	IdentifierDeclStatement	active_line * nlp = alp -> next ;	1366:4:52452:52480	1048300	0	True				
ANR	1048304	IdentifierDecl	* nlp = alp -> next		1048300	0					
ANR	1048305	IdentifierDeclType	active_line *		1048300	0					
ANR	1048306	Identifier	nlp		1048300	1					
ANR	1048307	AssignmentExpression	* nlp = alp -> next		1048300	2		=			
ANR	1048308	Identifier	nlp		1048300	0					
ANR	1048309	PtrMemberAccess	alp -> next		1048300	1					
ANR	1048310	Identifier	alp		1048300	0					
ANR	1048311	Identifier	next		1048300	1					
ANR	1048312	ExpressionStatement	alp -> prev -> next = nlp	1368:4:52487:52508	1048300	1	True				
ANR	1048313	AssignmentExpression	alp -> prev -> next = nlp		1048300	0		=			
ANR	1048314	PtrMemberAccess	alp -> prev -> next		1048300	0					
ANR	1048315	PtrMemberAccess	alp -> prev		1048300	0					
ANR	1048316	Identifier	alp		1048300	0					
ANR	1048317	Identifier	prev		1048300	1					
ANR	1048318	Identifier	next		1048300	1					
ANR	1048319	Identifier	nlp		1048300	1					
ANR	1048320	IfStatement	if ( nlp )		1048300	2					
ANR	1048321	Condition	nlp	1369:8:52518:52520	1048300	0	True				
ANR	1048322	Identifier	nlp		1048300	0					
ANR	1048323	ExpressionStatement	nlp -> prev = alp -> prev	1370:8:52531:52552	1048300	1	True				
ANR	1048324	AssignmentExpression	nlp -> prev = alp -> prev		1048300	0		=			
ANR	1048325	PtrMemberAccess	nlp -> prev		1048300	0					
ANR	1048326	Identifier	nlp		1048300	0					
ANR	1048327	Identifier	prev		1048300	1					
ANR	1048328	PtrMemberAccess	alp -> prev		1048300	1					
ANR	1048329	Identifier	alp		1048300	0					
ANR	1048330	Identifier	prev		1048300	1					
ANR	1048331	ExpressionStatement	"if_debug1m ( 'F' , ll -> memory , ""[F]drop 0x%lx\\n"" , ( ulong ) alp )"	1371:4:52558:52617	1048300	3	True				
ANR	1048332	CallExpression	"if_debug1m ( 'F' , ll -> memory , ""[F]drop 0x%lx\\n"" , ( ulong ) alp )"		1048300	0					
ANR	1048333	Callee	if_debug1m		1048300	0					
ANR	1048334	Identifier	if_debug1m		1048300	0					
ANR	1048335	ArgumentList	'F'		1048300	1					
ANR	1048336	Argument	'F'		1048300	0					
ANR	1048337	PrimaryExpression	'F'		1048300	0					
ANR	1048338	Argument	ll -> memory		1048300	1					
ANR	1048339	PtrMemberAccess	ll -> memory		1048300	0					
ANR	1048340	Identifier	ll		1048300	0					
ANR	1048341	Identifier	memory		1048300	1					
ANR	1048342	Argument	"""[F]drop 0x%lx\\n"""		1048300	2					
ANR	1048343	PrimaryExpression	"""[F]drop 0x%lx\\n"""		1048300	0					
ANR	1048344	Argument	( ulong ) alp		1048300	3					
ANR	1048345	CastExpression	( ulong ) alp		1048300	0					
ANR	1048346	CastTarget	ulong		1048300	0					
ANR	1048347	Identifier	alp		1048300	1					
ANR	1048348	ReturnType	static inline void		1048300	1					
ANR	1048349	Identifier	remove_al		1048300	2					
ANR	1048350	ParameterList	"const line_list * ll , active_line * alp"		1048300	3					
ANR	1048351	Parameter	const line_list * ll	1364:10:52407:52425	1048300	0	True				
ANR	1048352	ParameterType	const line_list *		1048300	0					
ANR	1048353	Identifier	ll		1048300	1					
ANR	1048354	Parameter	active_line * alp	1364:31:52428:52443	1048300	1	True				
ANR	1048355	ParameterType	active_line *		1048300	0					
ANR	1048356	Identifier	alp		1048300	1					
ANR	1048357	CFGEntryNode	ENTRY		1048300		True				
ANR	1048358	CFGExitNode	EXIT		1048300		True				
ANR	1048359	Symbol	ll		1048300						
ANR	1048360	Symbol	alp		1048300						
ANR	1048361	Symbol	* ll		1048300						
ANR	1048362	Symbol	ll -> memory		1048300						
ANR	1048363	Symbol	nlp -> prev		1048300						
ANR	1048364	Symbol	alp -> prev -> next		1048300						
ANR	1048365	Symbol	* alp		1048300						
ANR	1048366	Symbol	alp -> prev		1048300						
ANR	1048367	Symbol	alp -> next		1048300						
ANR	1048368	Symbol	nlp		1048300						
ANR	1048369	Symbol	* alp -> prev		1048300						
ANR	1048370	Symbol	* * alp		1048300						
ANR	1048371	Symbol	* nlp		1048300						
ANR	1048372	Function	end_x_line	1378:0:52728:54557							
ANR	1048373	FunctionDef	"end_x_line (active_line * alp , const line_list * ll , bool update)"		1048372	0					
ANR	1048374	CompoundStatement		1380:0:52802:54557	1048372	0					
ANR	1048375	IdentifierDeclStatement	const segment * pseg = alp -> pseg ;	1381:4:52808:52839	1048372	0	True				
ANR	1048376	IdentifierDecl	* pseg = alp -> pseg		1048372	0					
ANR	1048377	IdentifierDeclType	const segment *		1048372	0					
ANR	1048378	Identifier	pseg		1048372	1					
ANR	1048379	AssignmentExpression	* pseg = alp -> pseg		1048372	2		=			
ANR	1048380	Identifier	pseg		1048372	0					
ANR	1048381	PtrMemberAccess	alp -> pseg		1048372	1					
ANR	1048382	Identifier	alp		1048372	0					
ANR	1048383	Identifier	pseg		1048372	1					
ANR	1048384	IdentifierDeclStatement	const segment * next = ( alp -> direction == DIR_UP ? ( pseg -> type == s_line_close ? ( ( const line_close_segment * ) pseg ) -> sub -> next : pseg -> next ) : ( pseg -> type == s_start ? ( ( const subpath * ) pseg ) -> last -> prev : pseg -> prev ) ) ;	1388:4:53078:53572	1048372	1	True				
ANR	1048385	IdentifierDecl	* next = ( alp -> direction == DIR_UP ? ( pseg -> type == s_line_close ? ( ( const line_close_segment * ) pseg ) -> sub -> next : pseg -> next ) : ( pseg -> type == s_start ? ( ( const subpath * ) pseg ) -> last -> prev : pseg -> prev ) )		1048372	0					
ANR	1048386	IdentifierDeclType	const segment *		1048372	0					
ANR	1048387	Identifier	next		1048372	1					
ANR	1048388	AssignmentExpression	* next = ( alp -> direction == DIR_UP ? ( pseg -> type == s_line_close ? ( ( const line_close_segment * ) pseg ) -> sub -> next : pseg -> next ) : ( pseg -> type == s_start ? ( ( const subpath * ) pseg ) -> last -> prev : pseg -> prev ) )		1048372	2		=			
ANR	1048389	Identifier	next		1048372	0					
ANR	1048390	ConditionalExpression	alp -> direction == DIR_UP ? ( pseg -> type == s_line_close ? ( ( const line_close_segment * ) pseg ) -> sub -> next : pseg -> next ) : ( pseg -> type == s_start ? ( ( const subpath * ) pseg ) -> last -> prev : pseg -> prev )		1048372	1					
ANR	1048391	Condition	alp -> direction == DIR_UP		1048372	0					
ANR	1048392	EqualityExpression	alp -> direction == DIR_UP		1048372	0		==			
ANR	1048393	PtrMemberAccess	alp -> direction		1048372	0					
ANR	1048394	Identifier	alp		1048372	0					
ANR	1048395	Identifier	direction		1048372	1					
ANR	1048396	Identifier	DIR_UP		1048372	1					
ANR	1048397	ConditionalExpression	pseg -> type == s_line_close ? ( ( const line_close_segment * ) pseg ) -> sub -> next : pseg -> next		1048372	1					
ANR	1048398	Condition	pseg -> type == s_line_close		1048372	0					
ANR	1048399	EqualityExpression	pseg -> type == s_line_close		1048372	0		==			
ANR	1048400	PtrMemberAccess	pseg -> type		1048372	0					
ANR	1048401	Identifier	pseg		1048372	0					
ANR	1048402	Identifier	type		1048372	1					
ANR	1048403	Identifier	s_line_close		1048372	1					
ANR	1048404	PtrMemberAccess	( ( const line_close_segment * ) pseg ) -> sub -> next		1048372	1					
ANR	1048405	PtrMemberAccess	( ( const line_close_segment * ) pseg ) -> sub		1048372	0					
ANR	1048406	CastExpression	( const line_close_segment * ) pseg		1048372	0					
ANR	1048407	CastTarget	const line_close_segment *		1048372	0					
ANR	1048408	Identifier	pseg		1048372	1					
ANR	1048409	Identifier	sub		1048372	1					
ANR	1048410	Identifier	next		1048372	1					
ANR	1048411	PtrMemberAccess	pseg -> next		1048372	2					
ANR	1048412	Identifier	pseg		1048372	0					
ANR	1048413	Identifier	next		1048372	1					
ANR	1048414	ConditionalExpression	pseg -> type == s_start ? ( ( const subpath * ) pseg ) -> last -> prev : pseg -> prev		1048372	2					
ANR	1048415	Condition	pseg -> type == s_start		1048372	0					
ANR	1048416	EqualityExpression	pseg -> type == s_start		1048372	0		==			
ANR	1048417	PtrMemberAccess	pseg -> type		1048372	0					
ANR	1048418	Identifier	pseg		1048372	0					
ANR	1048419	Identifier	type		1048372	1					
ANR	1048420	Identifier	s_start		1048372	1					
ANR	1048421	PtrMemberAccess	( ( const subpath * ) pseg ) -> last -> prev		1048372	1					
ANR	1048422	PtrMemberAccess	( ( const subpath * ) pseg ) -> last		1048372	0					
ANR	1048423	CastExpression	( const subpath * ) pseg		1048372	0					
ANR	1048424	CastTarget	const subpath *		1048372	0					
ANR	1048425	Identifier	pseg		1048372	1					
ANR	1048426	Identifier	last		1048372	1					
ANR	1048427	Identifier	prev		1048372	1					
ANR	1048428	PtrMemberAccess	pseg -> prev		1048372	2					
ANR	1048429	Identifier	pseg		1048372	0					
ANR	1048430	Identifier	prev		1048372	1					
ANR	1048431	IdentifierDeclStatement	int code ;	1399:4:53578:53586	1048372	2	True				
ANR	1048432	IdentifierDecl	code		1048372	0					
ANR	1048433	IdentifierDeclType	int		1048372	0					
ANR	1048434	Identifier	code		1048372	1					
ANR	1048435	IfStatement	if ( alp -> end . y < alp -> start . y )		1048372	3					
ANR	1048436	Condition	alp -> end . y < alp -> start . y	1401:8:53597:53621	1048372	0	True				
ANR	1048437	RelationalExpression	alp -> end . y < alp -> start . y		1048372	0		<			
ANR	1048438	MemberAccess	alp -> end . y		1048372	0					
ANR	1048439	PtrMemberAccess	alp -> end		1048372	0					
ANR	1048440	Identifier	alp		1048372	0					
ANR	1048441	Identifier	end		1048372	1					
ANR	1048442	Identifier	y		1048372	1					
ANR	1048443	MemberAccess	alp -> start . y		1048372	1					
ANR	1048444	PtrMemberAccess	alp -> start		1048372	0					
ANR	1048445	Identifier	alp		1048372	0					
ANR	1048446	Identifier	start		1048372	1					
ANR	1048447	Identifier	y		1048372	1					
ANR	1048448	CompoundStatement		22:35:821:821	1048372	1					
ANR	1048449	ExpressionStatement	"remove_al ( ll , alp )"	1411:8:54147:54165	1048372	0	True				
ANR	1048450	CallExpression	"remove_al ( ll , alp )"		1048372	0					
ANR	1048451	Callee	remove_al		1048372	0					
ANR	1048452	Identifier	remove_al		1048372	0					
ANR	1048453	ArgumentList	ll		1048372	1					
ANR	1048454	Argument	ll		1048372	0					
ANR	1048455	Identifier	ll		1048372	0					
ANR	1048456	Argument	alp		1048372	1					
ANR	1048457	Identifier	alp		1048372	0					
ANR	1048458	ReturnStatement	return true ;	1412:8:54175:54186	1048372	1	True				
ANR	1048459	Identifier	true		1048372	0					
ANR	1048460	ElseStatement	else		1048372	0					
ANR	1048461	IfStatement	if ( alp -> more_flattened )		1048372	0					
ANR	1048462	Condition	alp -> more_flattened	1413:15:54203:54221	1048372	0	True				
ANR	1048463	PtrMemberAccess	alp -> more_flattened		1048372	0					
ANR	1048464	Identifier	alp		1048372	0					
ANR	1048465	Identifier	more_flattened		1048372	1					
ANR	1048466	ReturnStatement	return false ;	1414:8:54232:54244	1048372	1	True				
ANR	1048467	Identifier	false		1048372	0					
ANR	1048468	ExpressionStatement	"code = init_al ( alp , pseg , next , ll )"	1415:4:54250:54285	1048372	4	True				
ANR	1048469	AssignmentExpression	"code = init_al ( alp , pseg , next , ll )"		1048372	0		=			
ANR	1048470	Identifier	code		1048372	0					
ANR	1048471	CallExpression	"init_al ( alp , pseg , next , ll )"		1048372	1					
ANR	1048472	Callee	init_al		1048372	0					
ANR	1048473	Identifier	init_al		1048372	0					
ANR	1048474	ArgumentList	alp		1048372	1					
ANR	1048475	Argument	alp		1048372	0					
ANR	1048476	Identifier	alp		1048372	0					
ANR	1048477	Argument	pseg		1048372	1					
ANR	1048478	Identifier	pseg		1048372	0					
ANR	1048479	Argument	next		1048372	2					
ANR	1048480	Identifier	next		1048372	0					
ANR	1048481	Argument	ll		1048372	3					
ANR	1048482	Identifier	ll		1048372	0					
ANR	1048483	IfStatement	if ( code < 0 )		1048372	5					
ANR	1048484	Condition	code < 0	1416:8:54295:54302	1048372	0	True				
ANR	1048485	RelationalExpression	code < 0		1048372	0		<			
ANR	1048486	Identifier	code		1048372	0					
ANR	1048487	PrimaryExpression	0		1048372	1					
ANR	1048488	ReturnStatement	return code ;	1417:8:54313:54324	1048372	1	True				
ANR	1048489	Identifier	code		1048372	0					
ANR	1048490	IfStatement	if ( alp -> start . y > alp -> end . y )		1048372	6					
ANR	1048491	Condition	alp -> start . y > alp -> end . y	1418:8:54334:54358	1048372	0	True				
ANR	1048492	RelationalExpression	alp -> start . y > alp -> end . y		1048372	0		>			
ANR	1048493	MemberAccess	alp -> start . y		1048372	0					
ANR	1048494	PtrMemberAccess	alp -> start		1048372	0					
ANR	1048495	Identifier	alp		1048372	0					
ANR	1048496	Identifier	start		1048372	1					
ANR	1048497	Identifier	y		1048372	1					
ANR	1048498	MemberAccess	alp -> end . y		1048372	1					
ANR	1048499	PtrMemberAccess	alp -> end		1048372	0					
ANR	1048500	Identifier	alp		1048372	0					
ANR	1048501	Identifier	end		1048372	1					
ANR	1048502	Identifier	y		1048372	1					
ANR	1048503	CompoundStatement		39:35:1558:1558	1048372	1					
ANR	1048504	ExpressionStatement	"remove_al ( ll , alp )"	1420:8:54404:54422	1048372	0	True				
ANR	1048505	CallExpression	"remove_al ( ll , alp )"		1048372	0					
ANR	1048506	Callee	remove_al		1048372	0					
ANR	1048507	Identifier	remove_al		1048372	0					
ANR	1048508	ArgumentList	ll		1048372	1					
ANR	1048509	Argument	ll		1048372	0					
ANR	1048510	Identifier	ll		1048372	0					
ANR	1048511	Argument	alp		1048372	1					
ANR	1048512	Identifier	alp		1048372	0					
ANR	1048513	ReturnStatement	return true ;	1421:8:54432:54443	1048372	1	True				
ANR	1048514	Identifier	true		1048372	0					
ANR	1048515	ExpressionStatement	alp -> x_current = alp -> x_next = alp -> start . x	1423:4:54455:54498	1048372	7	True				
ANR	1048516	AssignmentExpression	alp -> x_current = alp -> x_next = alp -> start . x		1048372	0		=			
ANR	1048517	PtrMemberAccess	alp -> x_current		1048372	0					
ANR	1048518	Identifier	alp		1048372	0					
ANR	1048519	Identifier	x_current		1048372	1					
ANR	1048520	AssignmentExpression	alp -> x_next = alp -> start . x		1048372	1		=			
ANR	1048521	PtrMemberAccess	alp -> x_next		1048372	0					
ANR	1048522	Identifier	alp		1048372	0					
ANR	1048523	Identifier	x_next		1048372	1					
ANR	1048524	MemberAccess	alp -> start . x		1048372	1					
ANR	1048525	PtrMemberAccess	alp -> start		1048372	0					
ANR	1048526	Identifier	alp		1048372	0					
ANR	1048527	Identifier	start		1048372	1					
ANR	1048528	Identifier	x		1048372	1					
ANR	1048529	ExpressionStatement	"print_al ( ll -> memory , ""repl"" , alp )"	1424:4:54504:54537	1048372	8	True				
ANR	1048530	CallExpression	"print_al ( ll -> memory , ""repl"" , alp )"		1048372	0					
ANR	1048531	Callee	print_al		1048372	0					
ANR	1048532	Identifier	print_al		1048372	0					
ANR	1048533	ArgumentList	ll -> memory		1048372	1					
ANR	1048534	Argument	ll -> memory		1048372	0					
ANR	1048535	PtrMemberAccess	ll -> memory		1048372	0					
ANR	1048536	Identifier	ll		1048372	0					
ANR	1048537	Identifier	memory		1048372	1					
ANR	1048538	Argument	"""repl"""		1048372	1					
ANR	1048539	PrimaryExpression	"""repl"""		1048372	0					
ANR	1048540	Argument	alp		1048372	2					
ANR	1048541	Identifier	alp		1048372	0					
ANR	1048542	ReturnStatement	return false ;	1425:4:54543:54555	1048372	9	True				
ANR	1048543	Identifier	false		1048372	0					
ANR	1048544	ReturnType	static int		1048372	1					
ANR	1048545	Identifier	end_x_line		1048372	2					
ANR	1048546	ParameterList	"active_line * alp , const line_list * ll , bool update"		1048372	3					
ANR	1048547	Parameter	active_line * alp	1379:11:52750:52765	1048372	0	True				
ANR	1048548	ParameterType	active_line *		1048372	0					
ANR	1048549	Identifier	alp		1048372	1					
ANR	1048550	Parameter	const line_list * ll	1379:29:52768:52786	1048372	1	True				
ANR	1048551	ParameterType	const line_list *		1048372	0					
ANR	1048552	Identifier	ll		1048372	1					
ANR	1048553	Parameter	bool update	1379:50:52789:52799	1048372	2	True				
ANR	1048554	ParameterType	bool		1048372	0					
ANR	1048555	Identifier	update		1048372	1					
ANR	1048556	CFGEntryNode	ENTRY		1048372		True				
ANR	1048557	CFGExitNode	EXIT		1048372		True				
ANR	1048558	Symbol	ll		1048372						
ANR	1048559	Symbol	next		1048372						
ANR	1048560	Symbol	( ( const subpath * ) pseg ) -> last		1048372						
ANR	1048561	Symbol	alp -> direction		1048372						
ANR	1048562	Symbol	code		1048372						
ANR	1048563	Symbol	s_start		1048372						
ANR	1048564	Symbol	ll -> memory		1048372						
ANR	1048565	Symbol	alp -> end		1048372						
ANR	1048566	Symbol	alp -> x_current		1048372						
ANR	1048567	Symbol	update		1048372						
ANR	1048568	Symbol	* * pseg		1048372						
ANR	1048569	Symbol	( ( const subpath * ) pseg ) -> last -> prev		1048372						
ANR	1048570	Symbol	alp -> pseg		1048372						
ANR	1048571	Symbol	pseg -> next		1048372						
ANR	1048572	Symbol	pseg		1048372						
ANR	1048573	Symbol	pseg -> type		1048372						
ANR	1048574	Symbol	* ( ( const line_close_segment * ) pseg ) -> sub		1048372						
ANR	1048575	Symbol	DIR_UP		1048372						
ANR	1048576	Symbol	init_al		1048372						
ANR	1048577	Symbol	pseg -> prev		1048372						
ANR	1048578	Symbol	( ( const line_close_segment * ) pseg ) -> sub -> next		1048372						
ANR	1048579	Symbol	alp		1048372						
ANR	1048580	Symbol	* ll		1048372						
ANR	1048581	Symbol	s_line_close		1048372						
ANR	1048582	Symbol	false		1048372						
ANR	1048583	Symbol	( ( const line_close_segment * ) pseg ) -> sub		1048372						
ANR	1048584	Symbol	* ( ( const subpath * ) pseg ) -> last		1048372						
ANR	1048585	Symbol	* alp		1048372						
ANR	1048586	Symbol	alp -> x_next		1048372						
ANR	1048587	Symbol	alp -> start . y		1048372						
ANR	1048588	Symbol	alp -> start . x		1048372						
ANR	1048589	Symbol	alp -> more_flattened		1048372						
ANR	1048590	Symbol	alp -> end . y		1048372						
ANR	1048591	Symbol	* pseg		1048372						
ANR	1048592	Symbol	true		1048372						
ANR	1048593	Symbol	alp -> start		1048372						
ANR	1048594	Function	fill_slant_adjust	1433:0:54748:63783							
ANR	1048595	FunctionDef	"fill_slant_adjust (const line_list * ll , const active_line * flp , const active_line * alp , fixed y , fixed y1)"		1048594	0					
ANR	1048596	CompoundStatement		1436:0:54873:63783	1048594	0					
ANR	1048597	Statement	const	1437:4:54879:54883	1048594	0	True				
ANR	1048598	Statement	fill_options	1437:10:54885:54896	1048594	1	True				
ANR	1048599	Statement	*	1437:23:54898:54898	1048594	2	True				
ANR	1048600	Statement	const	1437:25:54900:54904	1048594	3	True				
ANR	1048601	ExpressionStatement	fo = ll -> fo	1437:31:54906:54917	1048594	4	True				
ANR	1048602	AssignmentExpression	fo = ll -> fo		1048594	0		=			
ANR	1048603	Identifier	fo		1048594	0					
ANR	1048604	PtrMemberAccess	ll -> fo		1048594	1					
ANR	1048605	Identifier	ll		1048594	0					
ANR	1048606	Identifier	fo		1048594	1					
ANR	1048607	IdentifierDeclStatement	const fixed Yb = y - fo -> adjust_below ;	1438:4:54923:54960	1048594	5	True				
ANR	1048608	IdentifierDecl	Yb = y - fo -> adjust_below		1048594	0					
ANR	1048609	IdentifierDeclType	const fixed		1048594	0					
ANR	1048610	Identifier	Yb		1048594	1					
ANR	1048611	AssignmentExpression	Yb = y - fo -> adjust_below		1048594	2		=			
ANR	1048612	Identifier	Yb		1048594	0					
ANR	1048613	AdditiveExpression	y - fo -> adjust_below		1048594	1		-			
ANR	1048614	Identifier	y		1048594	0					
ANR	1048615	PtrMemberAccess	fo -> adjust_below		1048594	1					
ANR	1048616	Identifier	fo		1048594	0					
ANR	1048617	Identifier	adjust_below		1048594	1					
ANR	1048618	IdentifierDeclStatement	fixed Ya = y + fo -> adjust_above ;	1439:4:54966:54997	1048594	6	True				
ANR	1048619	IdentifierDecl	Ya = y + fo -> adjust_above		1048594	0					
ANR	1048620	IdentifierDeclType	fixed		1048594	0					
ANR	1048621	Identifier	Ya		1048594	1					
ANR	1048622	AssignmentExpression	Ya = y + fo -> adjust_above		1048594	2		=			
ANR	1048623	Identifier	Ya		1048594	0					
ANR	1048624	AdditiveExpression	y + fo -> adjust_above		1048594	1		+			
ANR	1048625	Identifier	y		1048594	0					
ANR	1048626	PtrMemberAccess	fo -> adjust_above		1048594	1					
ANR	1048627	Identifier	fo		1048594	0					
ANR	1048628	Identifier	adjust_above		1048594	1					
ANR	1048629	IdentifierDeclStatement	fixed Y1b = y1 - fo -> adjust_below ;	1440:4:55003:55036	1048594	7	True				
ANR	1048630	IdentifierDecl	Y1b = y1 - fo -> adjust_below		1048594	0					
ANR	1048631	IdentifierDeclType	fixed		1048594	0					
ANR	1048632	Identifier	Y1b		1048594	1					
ANR	1048633	AssignmentExpression	Y1b = y1 - fo -> adjust_below		1048594	2		=			
ANR	1048634	Identifier	Y1b		1048594	0					
ANR	1048635	AdditiveExpression	y1 - fo -> adjust_below		1048594	1		-			
ANR	1048636	Identifier	y1		1048594	0					
ANR	1048637	PtrMemberAccess	fo -> adjust_below		1048594	1					
ANR	1048638	Identifier	fo		1048594	0					
ANR	1048639	Identifier	adjust_below		1048594	1					
ANR	1048640	IdentifierDeclStatement	const fixed Y1a = y1 + fo -> adjust_above ;	1441:4:55042:55081	1048594	8	True				
ANR	1048641	IdentifierDecl	Y1a = y1 + fo -> adjust_above		1048594	0					
ANR	1048642	IdentifierDeclType	const fixed		1048594	0					
ANR	1048643	Identifier	Y1a		1048594	1					
ANR	1048644	AssignmentExpression	Y1a = y1 + fo -> adjust_above		1048594	2		=			
ANR	1048645	Identifier	Y1a		1048594	0					
ANR	1048646	AdditiveExpression	y1 + fo -> adjust_above		1048594	1		+			
ANR	1048647	Identifier	y1		1048594	0					
ANR	1048648	PtrMemberAccess	fo -> adjust_above		1048594	1					
ANR	1048649	Identifier	fo		1048594	0					
ANR	1048650	Identifier	adjust_above		1048594	1					
ANR	1048651	IdentifierDeclStatement	"const gs_fixed_edge * plbot , * prbot , * pltop , * prtop ;"	1442:4:55087:55137	1048594	9	True				
ANR	1048652	IdentifierDecl	* plbot		1048594	0					
ANR	1048653	IdentifierDeclType	const gs_fixed_edge *		1048594	0					
ANR	1048654	Identifier	plbot		1048594	1					
ANR	1048655	IdentifierDecl	* prbot		1048594	1					
ANR	1048656	IdentifierDeclType	const gs_fixed_edge *		1048594	0					
ANR	1048657	Identifier	prbot		1048594	1					
ANR	1048658	IdentifierDecl	* pltop		1048594	2					
ANR	1048659	IdentifierDeclType	const gs_fixed_edge *		1048594	0					
ANR	1048660	Identifier	pltop		1048594	1					
ANR	1048661	IdentifierDecl	* prtop		1048594	3					
ANR	1048662	IdentifierDeclType	const gs_fixed_edge *		1048594	0					
ANR	1048663	Identifier	prtop		1048594	1					
ANR	1048664	IdentifierDeclStatement	"gs_fixed_edge vert_left , slant_left , vert_right , slant_right ;"	1443:4:55143:55203	1048594	10	True				
ANR	1048665	IdentifierDecl	vert_left		1048594	0					
ANR	1048666	IdentifierDeclType	gs_fixed_edge		1048594	0					
ANR	1048667	Identifier	vert_left		1048594	1					
ANR	1048668	IdentifierDecl	slant_left		1048594	1					
ANR	1048669	IdentifierDeclType	gs_fixed_edge		1048594	0					
ANR	1048670	Identifier	slant_left		1048594	1					
ANR	1048671	IdentifierDecl	vert_right		1048594	2					
ANR	1048672	IdentifierDeclType	gs_fixed_edge		1048594	0					
ANR	1048673	Identifier	vert_right		1048594	1					
ANR	1048674	IdentifierDecl	slant_right		1048594	3					
ANR	1048675	IdentifierDeclType	gs_fixed_edge		1048594	0					
ANR	1048676	Identifier	slant_right		1048594	1					
ANR	1048677	IdentifierDeclStatement	int code ;	1444:4:55209:55217	1048594	11	True				
ANR	1048678	IdentifierDecl	code		1048594	0					
ANR	1048679	IdentifierDeclType	int		1048594	0					
ANR	1048680	Identifier	code		1048594	1					
ANR	1048681	ExpressionStatement	INCR ( slant )	1446:4:55224:55235	1048594	12	True				
ANR	1048682	CallExpression	INCR ( slant )		1048594	0					
ANR	1048683	Callee	INCR		1048594	0					
ANR	1048684	Identifier	INCR		1048594	0					
ANR	1048685	ArgumentList	slant		1048594	1					
ANR	1048686	Argument	slant		1048594	0					
ANR	1048687	Identifier	slant		1048594	0					
ANR	1048688	ExpressionStatement	slant_left . start . x = flp -> start . x - fo -> adjust_left	1450:4:55313:55364	1048594	13	True				
ANR	1048689	AssignmentExpression	slant_left . start . x = flp -> start . x - fo -> adjust_left		1048594	0		=			
ANR	1048690	MemberAccess	slant_left . start . x		1048594	0					
ANR	1048691	MemberAccess	slant_left . start		1048594	0					
ANR	1048692	Identifier	slant_left		1048594	0					
ANR	1048693	Identifier	start		1048594	1					
ANR	1048694	Identifier	x		1048594	1					
ANR	1048695	AdditiveExpression	flp -> start . x - fo -> adjust_left		1048594	1		-			
ANR	1048696	MemberAccess	flp -> start . x		1048594	0					
ANR	1048697	PtrMemberAccess	flp -> start		1048594	0					
ANR	1048698	Identifier	flp		1048594	0					
ANR	1048699	Identifier	start		1048594	1					
ANR	1048700	Identifier	x		1048594	1					
ANR	1048701	PtrMemberAccess	fo -> adjust_left		1048594	1					
ANR	1048702	Identifier	fo		1048594	0					
ANR	1048703	Identifier	adjust_left		1048594	1					
ANR	1048704	ExpressionStatement	slant_left . end . x = flp -> end . x - fo -> adjust_left	1451:4:55370:55417	1048594	14	True				
ANR	1048705	AssignmentExpression	slant_left . end . x = flp -> end . x - fo -> adjust_left		1048594	0		=			
ANR	1048706	MemberAccess	slant_left . end . x		1048594	0					
ANR	1048707	MemberAccess	slant_left . end		1048594	0					
ANR	1048708	Identifier	slant_left		1048594	0					
ANR	1048709	Identifier	end		1048594	1					
ANR	1048710	Identifier	x		1048594	1					
ANR	1048711	AdditiveExpression	flp -> end . x - fo -> adjust_left		1048594	1		-			
ANR	1048712	MemberAccess	flp -> end . x		1048594	0					
ANR	1048713	PtrMemberAccess	flp -> end		1048594	0					
ANR	1048714	Identifier	flp		1048594	0					
ANR	1048715	Identifier	end		1048594	1					
ANR	1048716	Identifier	x		1048594	1					
ANR	1048717	PtrMemberAccess	fo -> adjust_left		1048594	1					
ANR	1048718	Identifier	fo		1048594	0					
ANR	1048719	Identifier	adjust_left		1048594	1					
ANR	1048720	ExpressionStatement	slant_right . start . x = alp -> start . x + fo -> adjust_right	1452:4:55423:55476	1048594	15	True				
ANR	1048721	AssignmentExpression	slant_right . start . x = alp -> start . x + fo -> adjust_right		1048594	0		=			
ANR	1048722	MemberAccess	slant_right . start . x		1048594	0					
ANR	1048723	MemberAccess	slant_right . start		1048594	0					
ANR	1048724	Identifier	slant_right		1048594	0					
ANR	1048725	Identifier	start		1048594	1					
ANR	1048726	Identifier	x		1048594	1					
ANR	1048727	AdditiveExpression	alp -> start . x + fo -> adjust_right		1048594	1		+			
ANR	1048728	MemberAccess	alp -> start . x		1048594	0					
ANR	1048729	PtrMemberAccess	alp -> start		1048594	0					
ANR	1048730	Identifier	alp		1048594	0					
ANR	1048731	Identifier	start		1048594	1					
ANR	1048732	Identifier	x		1048594	1					
ANR	1048733	PtrMemberAccess	fo -> adjust_right		1048594	1					
ANR	1048734	Identifier	fo		1048594	0					
ANR	1048735	Identifier	adjust_right		1048594	1					
ANR	1048736	ExpressionStatement	slant_right . end . x = alp -> end . x + fo -> adjust_right	1453:4:55482:55531	1048594	16	True				
ANR	1048737	AssignmentExpression	slant_right . end . x = alp -> end . x + fo -> adjust_right		1048594	0		=			
ANR	1048738	MemberAccess	slant_right . end . x		1048594	0					
ANR	1048739	MemberAccess	slant_right . end		1048594	0					
ANR	1048740	Identifier	slant_right		1048594	0					
ANR	1048741	Identifier	end		1048594	1					
ANR	1048742	Identifier	x		1048594	1					
ANR	1048743	AdditiveExpression	alp -> end . x + fo -> adjust_right		1048594	1		+			
ANR	1048744	MemberAccess	alp -> end . x		1048594	0					
ANR	1048745	PtrMemberAccess	alp -> end		1048594	0					
ANR	1048746	Identifier	alp		1048594	0					
ANR	1048747	Identifier	end		1048594	1					
ANR	1048748	Identifier	x		1048594	1					
ANR	1048749	PtrMemberAccess	fo -> adjust_right		1048594	1					
ANR	1048750	Identifier	fo		1048594	0					
ANR	1048751	Identifier	adjust_right		1048594	1					
ANR	1048752	IfStatement	if ( flp -> start . x < flp -> end . x )		1048594	17					
ANR	1048753	Condition	flp -> start . x < flp -> end . x	1454:8:55541:55565	1048594	0	True				
ANR	1048754	RelationalExpression	flp -> start . x < flp -> end . x		1048594	0		<			
ANR	1048755	MemberAccess	flp -> start . x		1048594	0					
ANR	1048756	PtrMemberAccess	flp -> start		1048594	0					
ANR	1048757	Identifier	flp		1048594	0					
ANR	1048758	Identifier	start		1048594	1					
ANR	1048759	Identifier	x		1048594	1					
ANR	1048760	MemberAccess	flp -> end . x		1048594	1					
ANR	1048761	PtrMemberAccess	flp -> end		1048594	0					
ANR	1048762	Identifier	flp		1048594	0					
ANR	1048763	Identifier	end		1048594	1					
ANR	1048764	Identifier	x		1048594	1					
ANR	1048765	CompoundStatement		19:35:694:694	1048594	1					
ANR	1048766	ExpressionStatement	vert_left . start . x = vert_left . end . x = flp -> x_current - fo -> adjust_left	1455:8:55578:55648	1048594	0	True				
ANR	1048767	AssignmentExpression	vert_left . start . x = vert_left . end . x = flp -> x_current - fo -> adjust_left		1048594	0		=			
ANR	1048768	MemberAccess	vert_left . start . x		1048594	0					
ANR	1048769	MemberAccess	vert_left . start		1048594	0					
ANR	1048770	Identifier	vert_left		1048594	0					
ANR	1048771	Identifier	start		1048594	1					
ANR	1048772	Identifier	x		1048594	1					
ANR	1048773	AssignmentExpression	vert_left . end . x = flp -> x_current - fo -> adjust_left		1048594	1		=			
ANR	1048774	MemberAccess	vert_left . end . x		1048594	0					
ANR	1048775	MemberAccess	vert_left . end		1048594	0					
ANR	1048776	Identifier	vert_left		1048594	0					
ANR	1048777	Identifier	end		1048594	1					
ANR	1048778	Identifier	x		1048594	1					
ANR	1048779	AdditiveExpression	flp -> x_current - fo -> adjust_left		1048594	1		-			
ANR	1048780	PtrMemberAccess	flp -> x_current		1048594	0					
ANR	1048781	Identifier	flp		1048594	0					
ANR	1048782	Identifier	x_current		1048594	1					
ANR	1048783	PtrMemberAccess	fo -> adjust_left		1048594	1					
ANR	1048784	Identifier	fo		1048594	0					
ANR	1048785	Identifier	adjust_left		1048594	1					
ANR	1048786	ExpressionStatement	"vert_left . start . y = Yb , vert_left . end . y = Ya"	1456:8:55658:55702	1048594	1	True				
ANR	1048787	Expression	"vert_left . start . y = Yb , vert_left . end . y = Ya"		1048594	0					
ANR	1048788	AssignmentExpression	vert_left . start . y = Yb		1048594	0		=			
ANR	1048789	MemberAccess	vert_left . start . y		1048594	0					
ANR	1048790	MemberAccess	vert_left . start		1048594	0					
ANR	1048791	Identifier	vert_left		1048594	0					
ANR	1048792	Identifier	start		1048594	1					
ANR	1048793	Identifier	y		1048594	1					
ANR	1048794	Identifier	Yb		1048594	1					
ANR	1048795	AssignmentExpression	vert_left . end . y = Ya		1048594	1		=			
ANR	1048796	MemberAccess	vert_left . end . y		1048594	0					
ANR	1048797	MemberAccess	vert_left . end		1048594	0					
ANR	1048798	Identifier	vert_left		1048594	0					
ANR	1048799	Identifier	end		1048594	1					
ANR	1048800	Identifier	y		1048594	1					
ANR	1048801	Identifier	Ya		1048594	1					
ANR	1048802	ExpressionStatement	vert_right . start . x = vert_right . end . x = alp -> x_next + fo -> adjust_right	1457:8:55712:55782	1048594	2	True				
ANR	1048803	AssignmentExpression	vert_right . start . x = vert_right . end . x = alp -> x_next + fo -> adjust_right		1048594	0		=			
ANR	1048804	MemberAccess	vert_right . start . x		1048594	0					
ANR	1048805	MemberAccess	vert_right . start		1048594	0					
ANR	1048806	Identifier	vert_right		1048594	0					
ANR	1048807	Identifier	start		1048594	1					
ANR	1048808	Identifier	x		1048594	1					
ANR	1048809	AssignmentExpression	vert_right . end . x = alp -> x_next + fo -> adjust_right		1048594	1		=			
ANR	1048810	MemberAccess	vert_right . end . x		1048594	0					
ANR	1048811	MemberAccess	vert_right . end		1048594	0					
ANR	1048812	Identifier	vert_right		1048594	0					
ANR	1048813	Identifier	end		1048594	1					
ANR	1048814	Identifier	x		1048594	1					
ANR	1048815	AdditiveExpression	alp -> x_next + fo -> adjust_right		1048594	1		+			
ANR	1048816	PtrMemberAccess	alp -> x_next		1048594	0					
ANR	1048817	Identifier	alp		1048594	0					
ANR	1048818	Identifier	x_next		1048594	1					
ANR	1048819	PtrMemberAccess	fo -> adjust_right		1048594	1					
ANR	1048820	Identifier	fo		1048594	0					
ANR	1048821	Identifier	adjust_right		1048594	1					
ANR	1048822	ExpressionStatement	"vert_right . start . y = Y1b , vert_right . end . y = Y1a"	1458:8:55792:55840	1048594	3	True				
ANR	1048823	Expression	"vert_right . start . y = Y1b , vert_right . end . y = Y1a"		1048594	0					
ANR	1048824	AssignmentExpression	vert_right . start . y = Y1b		1048594	0		=			
ANR	1048825	MemberAccess	vert_right . start . y		1048594	0					
ANR	1048826	MemberAccess	vert_right . start		1048594	0					
ANR	1048827	Identifier	vert_right		1048594	0					
ANR	1048828	Identifier	start		1048594	1					
ANR	1048829	Identifier	y		1048594	1					
ANR	1048830	Identifier	Y1b		1048594	1					
ANR	1048831	AssignmentExpression	vert_right . end . y = Y1a		1048594	1		=			
ANR	1048832	MemberAccess	vert_right . end . y		1048594	0					
ANR	1048833	MemberAccess	vert_right . end		1048594	0					
ANR	1048834	Identifier	vert_right		1048594	0					
ANR	1048835	Identifier	end		1048594	1					
ANR	1048836	Identifier	y		1048594	1					
ANR	1048837	Identifier	Y1a		1048594	1					
ANR	1048838	ExpressionStatement	slant_left . start . y = flp -> start . y + fo -> adjust_above	1459:8:55850:55902	1048594	4	True				
ANR	1048839	AssignmentExpression	slant_left . start . y = flp -> start . y + fo -> adjust_above		1048594	0		=			
ANR	1048840	MemberAccess	slant_left . start . y		1048594	0					
ANR	1048841	MemberAccess	slant_left . start		1048594	0					
ANR	1048842	Identifier	slant_left		1048594	0					
ANR	1048843	Identifier	start		1048594	1					
ANR	1048844	Identifier	y		1048594	1					
ANR	1048845	AdditiveExpression	flp -> start . y + fo -> adjust_above		1048594	1		+			
ANR	1048846	MemberAccess	flp -> start . y		1048594	0					
ANR	1048847	PtrMemberAccess	flp -> start		1048594	0					
ANR	1048848	Identifier	flp		1048594	0					
ANR	1048849	Identifier	start		1048594	1					
ANR	1048850	Identifier	y		1048594	1					
ANR	1048851	PtrMemberAccess	fo -> adjust_above		1048594	1					
ANR	1048852	Identifier	fo		1048594	0					
ANR	1048853	Identifier	adjust_above		1048594	1					
ANR	1048854	ExpressionStatement	slant_left . end . y = flp -> end . y + fo -> adjust_above	1460:8:55912:55960	1048594	5	True				
ANR	1048855	AssignmentExpression	slant_left . end . y = flp -> end . y + fo -> adjust_above		1048594	0		=			
ANR	1048856	MemberAccess	slant_left . end . y		1048594	0					
ANR	1048857	MemberAccess	slant_left . end		1048594	0					
ANR	1048858	Identifier	slant_left		1048594	0					
ANR	1048859	Identifier	end		1048594	1					
ANR	1048860	Identifier	y		1048594	1					
ANR	1048861	AdditiveExpression	flp -> end . y + fo -> adjust_above		1048594	1		+			
ANR	1048862	MemberAccess	flp -> end . y		1048594	0					
ANR	1048863	PtrMemberAccess	flp -> end		1048594	0					
ANR	1048864	Identifier	flp		1048594	0					
ANR	1048865	Identifier	end		1048594	1					
ANR	1048866	Identifier	y		1048594	1					
ANR	1048867	PtrMemberAccess	fo -> adjust_above		1048594	1					
ANR	1048868	Identifier	fo		1048594	0					
ANR	1048869	Identifier	adjust_above		1048594	1					
ANR	1048870	ExpressionStatement	slant_right . start . y = alp -> start . y - fo -> adjust_below	1461:8:55970:56023	1048594	6	True				
ANR	1048871	AssignmentExpression	slant_right . start . y = alp -> start . y - fo -> adjust_below		1048594	0		=			
ANR	1048872	MemberAccess	slant_right . start . y		1048594	0					
ANR	1048873	MemberAccess	slant_right . start		1048594	0					
ANR	1048874	Identifier	slant_right		1048594	0					
ANR	1048875	Identifier	start		1048594	1					
ANR	1048876	Identifier	y		1048594	1					
ANR	1048877	AdditiveExpression	alp -> start . y - fo -> adjust_below		1048594	1		-			
ANR	1048878	MemberAccess	alp -> start . y		1048594	0					
ANR	1048879	PtrMemberAccess	alp -> start		1048594	0					
ANR	1048880	Identifier	alp		1048594	0					
ANR	1048881	Identifier	start		1048594	1					
ANR	1048882	Identifier	y		1048594	1					
ANR	1048883	PtrMemberAccess	fo -> adjust_below		1048594	1					
ANR	1048884	Identifier	fo		1048594	0					
ANR	1048885	Identifier	adjust_below		1048594	1					
ANR	1048886	ExpressionStatement	slant_right . end . y = alp -> end . y - fo -> adjust_below	1462:8:56033:56082	1048594	7	True				
ANR	1048887	AssignmentExpression	slant_right . end . y = alp -> end . y - fo -> adjust_below		1048594	0		=			
ANR	1048888	MemberAccess	slant_right . end . y		1048594	0					
ANR	1048889	MemberAccess	slant_right . end		1048594	0					
ANR	1048890	Identifier	slant_right		1048594	0					
ANR	1048891	Identifier	end		1048594	1					
ANR	1048892	Identifier	y		1048594	1					
ANR	1048893	AdditiveExpression	alp -> end . y - fo -> adjust_below		1048594	1		-			
ANR	1048894	MemberAccess	alp -> end . y		1048594	0					
ANR	1048895	PtrMemberAccess	alp -> end		1048594	0					
ANR	1048896	Identifier	alp		1048594	0					
ANR	1048897	Identifier	end		1048594	1					
ANR	1048898	Identifier	y		1048594	1					
ANR	1048899	PtrMemberAccess	fo -> adjust_below		1048594	1					
ANR	1048900	Identifier	fo		1048594	0					
ANR	1048901	Identifier	adjust_below		1048594	1					
ANR	1048902	ExpressionStatement	"plbot = & vert_left , prbot = & slant_right"	1463:8:56092:56132	1048594	8	True				
ANR	1048903	Expression	"plbot = & vert_left , prbot = & slant_right"		1048594	0					
ANR	1048904	AssignmentExpression	plbot = & vert_left		1048594	0		=			
ANR	1048905	Identifier	plbot		1048594	0					
ANR	1048906	UnaryOperationExpression	& vert_left		1048594	1					
ANR	1048907	UnaryOperator	&		1048594	0					
ANR	1048908	Identifier	vert_left		1048594	1					
ANR	1048909	AssignmentExpression	prbot = & slant_right		1048594	1		=			
ANR	1048910	Identifier	prbot		1048594	0					
ANR	1048911	UnaryOperationExpression	& slant_right		1048594	1					
ANR	1048912	UnaryOperator	&		1048594	0					
ANR	1048913	Identifier	slant_right		1048594	1					
ANR	1048914	ExpressionStatement	"pltop = & slant_left , prtop = & vert_right"	1464:8:56142:56182	1048594	9	True				
ANR	1048915	Expression	"pltop = & slant_left , prtop = & vert_right"		1048594	0					
ANR	1048916	AssignmentExpression	pltop = & slant_left		1048594	0		=			
ANR	1048917	Identifier	pltop		1048594	0					
ANR	1048918	UnaryOperationExpression	& slant_left		1048594	1					
ANR	1048919	UnaryOperator	&		1048594	0					
ANR	1048920	Identifier	slant_left		1048594	1					
ANR	1048921	AssignmentExpression	prtop = & vert_right		1048594	1		=			
ANR	1048922	Identifier	prtop		1048594	0					
ANR	1048923	UnaryOperationExpression	& vert_right		1048594	1					
ANR	1048924	UnaryOperator	&		1048594	0					
ANR	1048925	Identifier	vert_right		1048594	1					
ANR	1048926	IfStatement	if ( TRY_TO_EXTEND_TRAP )		1048594	10					
ANR	1048927	Condition	TRY_TO_EXTEND_TRAP	1465:12:56196:56213	1048594	0	True				
ANR	1048928	Identifier	TRY_TO_EXTEND_TRAP		1048594	0					
ANR	1048929	CompoundStatement		32:12:1364:1381	1048594	1					
ANR	1048930	IdentifierDeclStatement	"int x , cx , cy , dy ;"	1467:12:56238:56255	1048594	0	True				
ANR	1048931	IdentifierDecl	x		1048594	0					
ANR	1048932	IdentifierDeclType	int		1048594	0					
ANR	1048933	Identifier	x		1048594	1					
ANR	1048934	IdentifierDecl	cx		1048594	1					
ANR	1048935	IdentifierDeclType	int		1048594	0					
ANR	1048936	Identifier	cx		1048594	1					
ANR	1048937	IdentifierDecl	cy		1048594	2					
ANR	1048938	IdentifierDeclType	int		1048594	0					
ANR	1048939	Identifier	cy		1048594	1					
ANR	1048940	IdentifierDecl	dy		1048594	3					
ANR	1048941	IdentifierDeclType	int		1048594	0					
ANR	1048942	Identifier	dy		1048594	1					
ANR	1048943	WhileStatement	while ( slant_right . end . y < Y1a )		1048594	1					
ANR	1048944	Condition	slant_right . end . y < Y1a	1471:19:56443:56465	1048594	0	True				
ANR	1048945	RelationalExpression	slant_right . end . y < Y1a		1048594	0		<			
ANR	1048946	MemberAccess	slant_right . end . y		1048594	0					
ANR	1048947	MemberAccess	slant_right . end		1048594	0					
ANR	1048948	Identifier	slant_right		1048594	0					
ANR	1048949	Identifier	end		1048594	1					
ANR	1048950	Identifier	y		1048594	1					
ANR	1048951	Identifier	Y1a		1048594	1					
ANR	1048952	CompoundStatement		37:12:1606:1606	1048594	1					
ANR	1048953	ExpressionStatement	slant_right . end . x += slant_right . end . x - slant_right . start . x	1473:16:56498:56558	1048594	0	True				
ANR	1048954	AssignmentExpression	slant_right . end . x += slant_right . end . x - slant_right . start . x		1048594	0		+=			
ANR	1048955	MemberAccess	slant_right . end . x		1048594	0					
ANR	1048956	MemberAccess	slant_right . end		1048594	0					
ANR	1048957	Identifier	slant_right		1048594	0					
ANR	1048958	Identifier	end		1048594	1					
ANR	1048959	Identifier	x		1048594	1					
ANR	1048960	AdditiveExpression	slant_right . end . x - slant_right . start . x		1048594	1		-			
ANR	1048961	MemberAccess	slant_right . end . x		1048594	0					
ANR	1048962	MemberAccess	slant_right . end		1048594	0					
ANR	1048963	Identifier	slant_right		1048594	0					
ANR	1048964	Identifier	end		1048594	1					
ANR	1048965	Identifier	x		1048594	1					
ANR	1048966	MemberAccess	slant_right . start . x		1048594	1					
ANR	1048967	MemberAccess	slant_right . start		1048594	0					
ANR	1048968	Identifier	slant_right		1048594	0					
ANR	1048969	Identifier	start		1048594	1					
ANR	1048970	Identifier	x		1048594	1					
ANR	1048971	ExpressionStatement	slant_right . end . y += slant_right . end . y - slant_right . start . y	1474:16:56576:56636	1048594	1	True				
ANR	1048972	AssignmentExpression	slant_right . end . y += slant_right . end . y - slant_right . start . y		1048594	0		+=			
ANR	1048973	MemberAccess	slant_right . end . y		1048594	0					
ANR	1048974	MemberAccess	slant_right . end		1048594	0					
ANR	1048975	Identifier	slant_right		1048594	0					
ANR	1048976	Identifier	end		1048594	1					
ANR	1048977	Identifier	y		1048594	1					
ANR	1048978	AdditiveExpression	slant_right . end . y - slant_right . start . y		1048594	1		-			
ANR	1048979	MemberAccess	slant_right . end . y		1048594	0					
ANR	1048980	MemberAccess	slant_right . end		1048594	0					
ANR	1048981	Identifier	slant_right		1048594	0					
ANR	1048982	Identifier	end		1048594	1					
ANR	1048983	Identifier	y		1048594	1					
ANR	1048984	MemberAccess	slant_right . start . y		1048594	1					
ANR	1048985	MemberAccess	slant_right . start		1048594	0					
ANR	1048986	Identifier	slant_right		1048594	0					
ANR	1048987	Identifier	start		1048594	1					
ANR	1048988	Identifier	y		1048594	1					
ANR	1048989	WhileStatement	while ( slant_left . start . y > Yb )		1048594	2					
ANR	1048990	Condition	slant_left . start . y > Yb	1476:19:56671:56693	1048594	0	True				
ANR	1048991	RelationalExpression	slant_left . start . y > Yb		1048594	0		>			
ANR	1048992	MemberAccess	slant_left . start . y		1048594	0					
ANR	1048993	MemberAccess	slant_left . start		1048594	0					
ANR	1048994	Identifier	slant_left		1048594	0					
ANR	1048995	Identifier	start		1048594	1					
ANR	1048996	Identifier	y		1048594	1					
ANR	1048997	Identifier	Yb		1048594	1					
ANR	1048998	CompoundStatement		42:12:1834:1834	1048594	1					
ANR	1048999	ExpressionStatement	slant_left . start . x -= slant_left . end . x - slant_left . start . x	1478:16:56726:56785	1048594	0	True				
ANR	1049000	AssignmentExpression	slant_left . start . x -= slant_left . end . x - slant_left . start . x		1048594	0		-=			
ANR	1049001	MemberAccess	slant_left . start . x		1048594	0					
ANR	1049002	MemberAccess	slant_left . start		1048594	0					
ANR	1049003	Identifier	slant_left		1048594	0					
ANR	1049004	Identifier	start		1048594	1					
ANR	1049005	Identifier	x		1048594	1					
ANR	1049006	AdditiveExpression	slant_left . end . x - slant_left . start . x		1048594	1		-			
ANR	1049007	MemberAccess	slant_left . end . x		1048594	0					
ANR	1049008	MemberAccess	slant_left . end		1048594	0					
ANR	1049009	Identifier	slant_left		1048594	0					
ANR	1049010	Identifier	end		1048594	1					
ANR	1049011	Identifier	x		1048594	1					
ANR	1049012	MemberAccess	slant_left . start . x		1048594	1					
ANR	1049013	MemberAccess	slant_left . start		1048594	0					
ANR	1049014	Identifier	slant_left		1048594	0					
ANR	1049015	Identifier	start		1048594	1					
ANR	1049016	Identifier	x		1048594	1					
ANR	1049017	ExpressionStatement	slant_left . start . y -= slant_left . end . y - slant_left . start . y	1479:16:56803:56862	1048594	1	True				
ANR	1049018	AssignmentExpression	slant_left . start . y -= slant_left . end . y - slant_left . start . y		1048594	0		-=			
ANR	1049019	MemberAccess	slant_left . start . y		1048594	0					
ANR	1049020	MemberAccess	slant_left . start		1048594	0					
ANR	1049021	Identifier	slant_left		1048594	0					
ANR	1049022	Identifier	start		1048594	1					
ANR	1049023	Identifier	y		1048594	1					
ANR	1049024	AdditiveExpression	slant_left . end . y - slant_left . start . y		1048594	1		-			
ANR	1049025	MemberAccess	slant_left . end . y		1048594	0					
ANR	1049026	MemberAccess	slant_left . end		1048594	0					
ANR	1049027	Identifier	slant_left		1048594	0					
ANR	1049028	Identifier	end		1048594	1					
ANR	1049029	Identifier	y		1048594	1					
ANR	1049030	MemberAccess	slant_left . start . y		1048594	1					
ANR	1049031	MemberAccess	slant_left . start		1048594	0					
ANR	1049032	Identifier	slant_left		1048594	0					
ANR	1049033	Identifier	start		1048594	1					
ANR	1049034	Identifier	y		1048594	1					
ANR	1049035	ExpressionStatement	cy = fixed_pixround ( vert_right . start . y ) + fixed_half	1485:12:57144:57194	1048594	3	True				
ANR	1049036	AssignmentExpression	cy = fixed_pixround ( vert_right . start . y ) + fixed_half		1048594	0		=			
ANR	1049037	Identifier	cy		1048594	0					
ANR	1049038	AdditiveExpression	fixed_pixround ( vert_right . start . y ) + fixed_half		1048594	1		+			
ANR	1049039	CallExpression	fixed_pixround ( vert_right . start . y )		1048594	0					
ANR	1049040	Callee	fixed_pixround		1048594	0					
ANR	1049041	Identifier	fixed_pixround		1048594	0					
ANR	1049042	ArgumentList	vert_right . start . y		1048594	1					
ANR	1049043	Argument	vert_right . start . y		1048594	0					
ANR	1049044	MemberAccess	vert_right . start . y		1048594	0					
ANR	1049045	MemberAccess	vert_right . start		1048594	0					
ANR	1049046	Identifier	vert_right		1048594	0					
ANR	1049047	Identifier	start		1048594	1					
ANR	1049048	Identifier	y		1048594	1					
ANR	1049049	Identifier	fixed_half		1048594	1					
ANR	1049050	ExpressionStatement	cx = fixed_pixround ( vert_right . start . x ) + fixed_half	1486:12:57208:57258	1048594	4	True				
ANR	1049051	AssignmentExpression	cx = fixed_pixround ( vert_right . start . x ) + fixed_half		1048594	0		=			
ANR	1049052	Identifier	cx		1048594	0					
ANR	1049053	AdditiveExpression	fixed_pixround ( vert_right . start . x ) + fixed_half		1048594	1		+			
ANR	1049054	CallExpression	fixed_pixround ( vert_right . start . x )		1048594	0					
ANR	1049055	Callee	fixed_pixround		1048594	0					
ANR	1049056	Identifier	fixed_pixround		1048594	0					
ANR	1049057	ArgumentList	vert_right . start . x		1048594	1					
ANR	1049058	Argument	vert_right . start . x		1048594	0					
ANR	1049059	MemberAccess	vert_right . start . x		1048594	0					
ANR	1049060	MemberAccess	vert_right . start		1048594	0					
ANR	1049061	Identifier	vert_right		1048594	0					
ANR	1049062	Identifier	start		1048594	1					
ANR	1049063	Identifier	x		1048594	1					
ANR	1049064	Identifier	fixed_half		1048594	1					
ANR	1049065	ExpressionStatement	dy = slant_right . end . y - slant_right . start . y	1487:12:57272:57314	1048594	5	True				
ANR	1049066	AssignmentExpression	dy = slant_right . end . y - slant_right . start . y		1048594	0		=			
ANR	1049067	Identifier	dy		1048594	0					
ANR	1049068	AdditiveExpression	slant_right . end . y - slant_right . start . y		1048594	1		-			
ANR	1049069	MemberAccess	slant_right . end . y		1048594	0					
ANR	1049070	MemberAccess	slant_right . end		1048594	0					
ANR	1049071	Identifier	slant_right		1048594	0					
ANR	1049072	Identifier	end		1048594	1					
ANR	1049073	Identifier	y		1048594	1					
ANR	1049074	MemberAccess	slant_right . start . y		1048594	1					
ANR	1049075	MemberAccess	slant_right . start		1048594	0					
ANR	1049076	Identifier	slant_right		1048594	0					
ANR	1049077	Identifier	start		1048594	1					
ANR	1049078	Identifier	y		1048594	1					
ANR	1049079	ExpressionStatement	x = vert_right . start . x + ( fixed ) ( ( ( ( int64_t ) ( slant_right . end . x - slant_right . start . x ) ) * ( ( int64_t ) ( cy - vert_right . start . y ) ) + dy - 1 ) / ( ( int64_t ) dy ) )	1488:12:57328:57541	1048594	6	True				
ANR	1049080	AssignmentExpression	x = vert_right . start . x + ( fixed ) ( ( ( ( int64_t ) ( slant_right . end . x - slant_right . start . x ) ) * ( ( int64_t ) ( cy - vert_right . start . y ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		1048594	0		=			
ANR	1049081	Identifier	x		1048594	0					
ANR	1049082	AdditiveExpression	vert_right . start . x + ( fixed ) ( ( ( ( int64_t ) ( slant_right . end . x - slant_right . start . x ) ) * ( ( int64_t ) ( cy - vert_right . start . y ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		1048594	1		+			
ANR	1049083	MemberAccess	vert_right . start . x		1048594	0					
ANR	1049084	MemberAccess	vert_right . start		1048594	0					
ANR	1049085	Identifier	vert_right		1048594	0					
ANR	1049086	Identifier	start		1048594	1					
ANR	1049087	Identifier	x		1048594	1					
ANR	1049088	CastExpression	( fixed ) ( ( ( ( int64_t ) ( slant_right . end . x - slant_right . start . x ) ) * ( ( int64_t ) ( cy - vert_right . start . y ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		1048594	1					
ANR	1049089	CastTarget	fixed		1048594	0					
ANR	1049090	MultiplicativeExpression	( ( ( int64_t ) ( slant_right . end . x - slant_right . start . x ) ) * ( ( int64_t ) ( cy - vert_right . start . y ) ) + dy - 1 ) / ( ( int64_t ) dy )		1048594	1		/			
ANR	1049091	AdditiveExpression	( ( int64_t ) ( slant_right . end . x - slant_right . start . x ) ) * ( ( int64_t ) ( cy - vert_right . start . y ) ) + dy - 1		1048594	0		+			
ANR	1049092	MultiplicativeExpression	( ( int64_t ) ( slant_right . end . x - slant_right . start . x ) ) * ( ( int64_t ) ( cy - vert_right . start . y ) )		1048594	0		*			
ANR	1049093	CastExpression	( int64_t ) ( slant_right . end . x - slant_right . start . x )		1048594	0					
ANR	1049094	CastTarget	int64_t		1048594	0					
ANR	1049095	AdditiveExpression	slant_right . end . x - slant_right . start . x		1048594	1		-			
ANR	1049096	MemberAccess	slant_right . end . x		1048594	0					
ANR	1049097	MemberAccess	slant_right . end		1048594	0					
ANR	1049098	Identifier	slant_right		1048594	0					
ANR	1049099	Identifier	end		1048594	1					
ANR	1049100	Identifier	x		1048594	1					
ANR	1049101	MemberAccess	slant_right . start . x		1048594	1					
ANR	1049102	MemberAccess	slant_right . start		1048594	0					
ANR	1049103	Identifier	slant_right		1048594	0					
ANR	1049104	Identifier	start		1048594	1					
ANR	1049105	Identifier	x		1048594	1					
ANR	1049106	CastExpression	( int64_t ) ( cy - vert_right . start . y )		1048594	1					
ANR	1049107	CastTarget	int64_t		1048594	0					
ANR	1049108	AdditiveExpression	cy - vert_right . start . y		1048594	1		-			
ANR	1049109	Identifier	cy		1048594	0					
ANR	1049110	MemberAccess	vert_right . start . y		1048594	1					
ANR	1049111	MemberAccess	vert_right . start		1048594	0					
ANR	1049112	Identifier	vert_right		1048594	0					
ANR	1049113	Identifier	start		1048594	1					
ANR	1049114	Identifier	y		1048594	1					
ANR	1049115	AdditiveExpression	dy - 1		1048594	1		-			
ANR	1049116	Identifier	dy		1048594	0					
ANR	1049117	PrimaryExpression	1		1048594	1					
ANR	1049118	CastExpression	( int64_t ) dy		1048594	1					
ANR	1049119	CastTarget	int64_t		1048594	0					
ANR	1049120	Identifier	dy		1048594	1					
ANR	1049121	IfStatement	if ( ( cy >= Y1a ) || ( x < cx ) )		1048594	7					
ANR	1049122	Condition	( cy >= Y1a ) || ( x < cx )	1492:16:57559:57581	1048594	0	True				
ANR	1049123	OrExpression	( cy >= Y1a ) || ( x < cx )		1048594	0		||			
ANR	1049124	RelationalExpression	cy >= Y1a		1048594	0		>=			
ANR	1049125	Identifier	cy		1048594	0					
ANR	1049126	Identifier	Y1a		1048594	1					
ANR	1049127	RelationalExpression	x < cx		1048594	1		<			
ANR	1049128	Identifier	x		1048594	0					
ANR	1049129	Identifier	cx		1048594	1					
ANR	1049130	CompoundStatement		58:12:2722:2722	1048594	1					
ANR	1049131	ExpressionStatement	Y1b = Y1a	1495:16:57675:57684	1048594	0	True				
ANR	1049132	AssignmentExpression	Y1b = Y1a		1048594	0		=			
ANR	1049133	Identifier	Y1b		1048594	0					
ANR	1049134	Identifier	Y1a		1048594	1					
ANR	1049135	ExpressionStatement	cy = fixed_pixround ( vert_left . end . y ) - fixed_half	1501:12:57962:58009	1048594	8	True				
ANR	1049136	AssignmentExpression	cy = fixed_pixround ( vert_left . end . y ) - fixed_half		1048594	0		=			
ANR	1049137	Identifier	cy		1048594	0					
ANR	1049138	AdditiveExpression	fixed_pixround ( vert_left . end . y ) - fixed_half		1048594	1		-			
ANR	1049139	CallExpression	fixed_pixround ( vert_left . end . y )		1048594	0					
ANR	1049140	Callee	fixed_pixround		1048594	0					
ANR	1049141	Identifier	fixed_pixround		1048594	0					
ANR	1049142	ArgumentList	vert_left . end . y		1048594	1					
ANR	1049143	Argument	vert_left . end . y		1048594	0					
ANR	1049144	MemberAccess	vert_left . end . y		1048594	0					
ANR	1049145	MemberAccess	vert_left . end		1048594	0					
ANR	1049146	Identifier	vert_left		1048594	0					
ANR	1049147	Identifier	end		1048594	1					
ANR	1049148	Identifier	y		1048594	1					
ANR	1049149	Identifier	fixed_half		1048594	1					
ANR	1049150	ExpressionStatement	cx = fixed_pixround ( vert_left . end . x ) - fixed_half	1502:12:58023:58070	1048594	9	True				
ANR	1049151	AssignmentExpression	cx = fixed_pixround ( vert_left . end . x ) - fixed_half		1048594	0		=			
ANR	1049152	Identifier	cx		1048594	0					
ANR	1049153	AdditiveExpression	fixed_pixround ( vert_left . end . x ) - fixed_half		1048594	1		-			
ANR	1049154	CallExpression	fixed_pixround ( vert_left . end . x )		1048594	0					
ANR	1049155	Callee	fixed_pixround		1048594	0					
ANR	1049156	Identifier	fixed_pixround		1048594	0					
ANR	1049157	ArgumentList	vert_left . end . x		1048594	1					
ANR	1049158	Argument	vert_left . end . x		1048594	0					
ANR	1049159	MemberAccess	vert_left . end . x		1048594	0					
ANR	1049160	MemberAccess	vert_left . end		1048594	0					
ANR	1049161	Identifier	vert_left		1048594	0					
ANR	1049162	Identifier	end		1048594	1					
ANR	1049163	Identifier	x		1048594	1					
ANR	1049164	Identifier	fixed_half		1048594	1					
ANR	1049165	ExpressionStatement	dy = slant_left . end . y - slant_left . start . y	1503:12:58084:58124	1048594	10	True				
ANR	1049166	AssignmentExpression	dy = slant_left . end . y - slant_left . start . y		1048594	0		=			
ANR	1049167	Identifier	dy		1048594	0					
ANR	1049168	AdditiveExpression	slant_left . end . y - slant_left . start . y		1048594	1		-			
ANR	1049169	MemberAccess	slant_left . end . y		1048594	0					
ANR	1049170	MemberAccess	slant_left . end		1048594	0					
ANR	1049171	Identifier	slant_left		1048594	0					
ANR	1049172	Identifier	end		1048594	1					
ANR	1049173	Identifier	y		1048594	1					
ANR	1049174	MemberAccess	slant_left . start . y		1048594	1					
ANR	1049175	MemberAccess	slant_left . start		1048594	0					
ANR	1049176	Identifier	slant_left		1048594	0					
ANR	1049177	Identifier	start		1048594	1					
ANR	1049178	Identifier	y		1048594	1					
ANR	1049179	ExpressionStatement	x = vert_left . end . x - ( fixed ) ( ( ( ( int64_t ) ( slant_left . end . x - slant_left . start . x ) ) * ( ( int64_t ) ( vert_left . end . y - cy ) ) + dy - 1 ) / ( ( int64_t ) dy ) )	1504:12:58138:58343	1048594	11	True				
ANR	1049180	AssignmentExpression	x = vert_left . end . x - ( fixed ) ( ( ( ( int64_t ) ( slant_left . end . x - slant_left . start . x ) ) * ( ( int64_t ) ( vert_left . end . y - cy ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		1048594	0		=			
ANR	1049181	Identifier	x		1048594	0					
ANR	1049182	AdditiveExpression	vert_left . end . x - ( fixed ) ( ( ( ( int64_t ) ( slant_left . end . x - slant_left . start . x ) ) * ( ( int64_t ) ( vert_left . end . y - cy ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		1048594	1		-			
ANR	1049183	MemberAccess	vert_left . end . x		1048594	0					
ANR	1049184	MemberAccess	vert_left . end		1048594	0					
ANR	1049185	Identifier	vert_left		1048594	0					
ANR	1049186	Identifier	end		1048594	1					
ANR	1049187	Identifier	x		1048594	1					
ANR	1049188	CastExpression	( fixed ) ( ( ( ( int64_t ) ( slant_left . end . x - slant_left . start . x ) ) * ( ( int64_t ) ( vert_left . end . y - cy ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		1048594	1					
ANR	1049189	CastTarget	fixed		1048594	0					
ANR	1049190	MultiplicativeExpression	( ( ( int64_t ) ( slant_left . end . x - slant_left . start . x ) ) * ( ( int64_t ) ( vert_left . end . y - cy ) ) + dy - 1 ) / ( ( int64_t ) dy )		1048594	1		/			
ANR	1049191	AdditiveExpression	( ( int64_t ) ( slant_left . end . x - slant_left . start . x ) ) * ( ( int64_t ) ( vert_left . end . y - cy ) ) + dy - 1		1048594	0		+			
ANR	1049192	MultiplicativeExpression	( ( int64_t ) ( slant_left . end . x - slant_left . start . x ) ) * ( ( int64_t ) ( vert_left . end . y - cy ) )		1048594	0		*			
ANR	1049193	CastExpression	( int64_t ) ( slant_left . end . x - slant_left . start . x )		1048594	0					
ANR	1049194	CastTarget	int64_t		1048594	0					
ANR	1049195	AdditiveExpression	slant_left . end . x - slant_left . start . x		1048594	1		-			
ANR	1049196	MemberAccess	slant_left . end . x		1048594	0					
ANR	1049197	MemberAccess	slant_left . end		1048594	0					
ANR	1049198	Identifier	slant_left		1048594	0					
ANR	1049199	Identifier	end		1048594	1					
ANR	1049200	Identifier	x		1048594	1					
ANR	1049201	MemberAccess	slant_left . start . x		1048594	1					
ANR	1049202	MemberAccess	slant_left . start		1048594	0					
ANR	1049203	Identifier	slant_left		1048594	0					
ANR	1049204	Identifier	start		1048594	1					
ANR	1049205	Identifier	x		1048594	1					
ANR	1049206	CastExpression	( int64_t ) ( vert_left . end . y - cy )		1048594	1					
ANR	1049207	CastTarget	int64_t		1048594	0					
ANR	1049208	AdditiveExpression	vert_left . end . y - cy		1048594	1		-			
ANR	1049209	MemberAccess	vert_left . end . y		1048594	0					
ANR	1049210	MemberAccess	vert_left . end		1048594	0					
ANR	1049211	Identifier	vert_left		1048594	0					
ANR	1049212	Identifier	end		1048594	1					
ANR	1049213	Identifier	y		1048594	1					
ANR	1049214	Identifier	cy		1048594	1					
ANR	1049215	AdditiveExpression	dy - 1		1048594	1		-			
ANR	1049216	Identifier	dy		1048594	0					
ANR	1049217	PrimaryExpression	1		1048594	1					
ANR	1049218	CastExpression	( int64_t ) dy		1048594	1					
ANR	1049219	CastTarget	int64_t		1048594	0					
ANR	1049220	Identifier	dy		1048594	1					
ANR	1049221	IfStatement	if ( ( cy < Yb ) || ( x > cx ) )		1048594	12					
ANR	1049222	Condition	( cy < Yb ) || ( x > cx )	1508:16:58361:58381	1048594	0	True				
ANR	1049223	OrExpression	( cy < Yb ) || ( x > cx )		1048594	0		||			
ANR	1049224	RelationalExpression	cy < Yb		1048594	0		<			
ANR	1049225	Identifier	cy		1048594	0					
ANR	1049226	Identifier	Yb		1048594	1					
ANR	1049227	RelationalExpression	x > cx		1048594	1		>			
ANR	1049228	Identifier	x		1048594	0					
ANR	1049229	Identifier	cx		1048594	1					
ANR	1049230	CompoundStatement		74:12:3522:3522	1048594	1					
ANR	1049231	ExpressionStatement	Ya = Yb	1511:16:58477:58484	1048594	0	True				
ANR	1049232	AssignmentExpression	Ya = Yb		1048594	0		=			
ANR	1049233	Identifier	Ya		1048594	0					
ANR	1049234	Identifier	Yb		1048594	1					
ANR	1049235	ElseStatement	else		1048594	0					
ANR	1049236	CompoundStatement		79:11:3647:3647	1048594	0					
ANR	1049237	ExpressionStatement	vert_left . start . x = vert_left . end . x = flp -> x_next - fo -> adjust_left	1515:8:58531:58598	1048594	0	True				
ANR	1049238	AssignmentExpression	vert_left . start . x = vert_left . end . x = flp -> x_next - fo -> adjust_left		1048594	0		=			
ANR	1049239	MemberAccess	vert_left . start . x		1048594	0					
ANR	1049240	MemberAccess	vert_left . start		1048594	0					
ANR	1049241	Identifier	vert_left		1048594	0					
ANR	1049242	Identifier	start		1048594	1					
ANR	1049243	Identifier	x		1048594	1					
ANR	1049244	AssignmentExpression	vert_left . end . x = flp -> x_next - fo -> adjust_left		1048594	1		=			
ANR	1049245	MemberAccess	vert_left . end . x		1048594	0					
ANR	1049246	MemberAccess	vert_left . end		1048594	0					
ANR	1049247	Identifier	vert_left		1048594	0					
ANR	1049248	Identifier	end		1048594	1					
ANR	1049249	Identifier	x		1048594	1					
ANR	1049250	AdditiveExpression	flp -> x_next - fo -> adjust_left		1048594	1		-			
ANR	1049251	PtrMemberAccess	flp -> x_next		1048594	0					
ANR	1049252	Identifier	flp		1048594	0					
ANR	1049253	Identifier	x_next		1048594	1					
ANR	1049254	PtrMemberAccess	fo -> adjust_left		1048594	1					
ANR	1049255	Identifier	fo		1048594	0					
ANR	1049256	Identifier	adjust_left		1048594	1					
ANR	1049257	ExpressionStatement	"vert_left . start . y = Y1b , vert_left . end . y = Y1a"	1516:8:58608:58654	1048594	1	True				
ANR	1049258	Expression	"vert_left . start . y = Y1b , vert_left . end . y = Y1a"		1048594	0					
ANR	1049259	AssignmentExpression	vert_left . start . y = Y1b		1048594	0		=			
ANR	1049260	MemberAccess	vert_left . start . y		1048594	0					
ANR	1049261	MemberAccess	vert_left . start		1048594	0					
ANR	1049262	Identifier	vert_left		1048594	0					
ANR	1049263	Identifier	start		1048594	1					
ANR	1049264	Identifier	y		1048594	1					
ANR	1049265	Identifier	Y1b		1048594	1					
ANR	1049266	AssignmentExpression	vert_left . end . y = Y1a		1048594	1		=			
ANR	1049267	MemberAccess	vert_left . end . y		1048594	0					
ANR	1049268	MemberAccess	vert_left . end		1048594	0					
ANR	1049269	Identifier	vert_left		1048594	0					
ANR	1049270	Identifier	end		1048594	1					
ANR	1049271	Identifier	y		1048594	1					
ANR	1049272	Identifier	Y1a		1048594	1					
ANR	1049273	ExpressionStatement	vert_right . start . x = vert_right . end . x = alp -> x_current + fo -> adjust_right	1517:8:58664:58737	1048594	2	True				
ANR	1049274	AssignmentExpression	vert_right . start . x = vert_right . end . x = alp -> x_current + fo -> adjust_right		1048594	0		=			
ANR	1049275	MemberAccess	vert_right . start . x		1048594	0					
ANR	1049276	MemberAccess	vert_right . start		1048594	0					
ANR	1049277	Identifier	vert_right		1048594	0					
ANR	1049278	Identifier	start		1048594	1					
ANR	1049279	Identifier	x		1048594	1					
ANR	1049280	AssignmentExpression	vert_right . end . x = alp -> x_current + fo -> adjust_right		1048594	1		=			
ANR	1049281	MemberAccess	vert_right . end . x		1048594	0					
ANR	1049282	MemberAccess	vert_right . end		1048594	0					
ANR	1049283	Identifier	vert_right		1048594	0					
ANR	1049284	Identifier	end		1048594	1					
ANR	1049285	Identifier	x		1048594	1					
ANR	1049286	AdditiveExpression	alp -> x_current + fo -> adjust_right		1048594	1		+			
ANR	1049287	PtrMemberAccess	alp -> x_current		1048594	0					
ANR	1049288	Identifier	alp		1048594	0					
ANR	1049289	Identifier	x_current		1048594	1					
ANR	1049290	PtrMemberAccess	fo -> adjust_right		1048594	1					
ANR	1049291	Identifier	fo		1048594	0					
ANR	1049292	Identifier	adjust_right		1048594	1					
ANR	1049293	ExpressionStatement	"vert_right . start . y = Yb , vert_right . end . y = Ya"	1518:8:58747:58793	1048594	3	True				
ANR	1049294	Expression	"vert_right . start . y = Yb , vert_right . end . y = Ya"		1048594	0					
ANR	1049295	AssignmentExpression	vert_right . start . y = Yb		1048594	0		=			
ANR	1049296	MemberAccess	vert_right . start . y		1048594	0					
ANR	1049297	MemberAccess	vert_right . start		1048594	0					
ANR	1049298	Identifier	vert_right		1048594	0					
ANR	1049299	Identifier	start		1048594	1					
ANR	1049300	Identifier	y		1048594	1					
ANR	1049301	Identifier	Yb		1048594	1					
ANR	1049302	AssignmentExpression	vert_right . end . y = Ya		1048594	1		=			
ANR	1049303	MemberAccess	vert_right . end . y		1048594	0					
ANR	1049304	MemberAccess	vert_right . end		1048594	0					
ANR	1049305	Identifier	vert_right		1048594	0					
ANR	1049306	Identifier	end		1048594	1					
ANR	1049307	Identifier	y		1048594	1					
ANR	1049308	Identifier	Ya		1048594	1					
ANR	1049309	ExpressionStatement	slant_left . start . y = flp -> start . y - fo -> adjust_below	1519:8:58803:58855	1048594	4	True				
ANR	1049310	AssignmentExpression	slant_left . start . y = flp -> start . y - fo -> adjust_below		1048594	0		=			
ANR	1049311	MemberAccess	slant_left . start . y		1048594	0					
ANR	1049312	MemberAccess	slant_left . start		1048594	0					
ANR	1049313	Identifier	slant_left		1048594	0					
ANR	1049314	Identifier	start		1048594	1					
ANR	1049315	Identifier	y		1048594	1					
ANR	1049316	AdditiveExpression	flp -> start . y - fo -> adjust_below		1048594	1		-			
ANR	1049317	MemberAccess	flp -> start . y		1048594	0					
ANR	1049318	PtrMemberAccess	flp -> start		1048594	0					
ANR	1049319	Identifier	flp		1048594	0					
ANR	1049320	Identifier	start		1048594	1					
ANR	1049321	Identifier	y		1048594	1					
ANR	1049322	PtrMemberAccess	fo -> adjust_below		1048594	1					
ANR	1049323	Identifier	fo		1048594	0					
ANR	1049324	Identifier	adjust_below		1048594	1					
ANR	1049325	ExpressionStatement	slant_left . end . y = flp -> end . y - fo -> adjust_below	1520:8:58865:58913	1048594	5	True				
ANR	1049326	AssignmentExpression	slant_left . end . y = flp -> end . y - fo -> adjust_below		1048594	0		=			
ANR	1049327	MemberAccess	slant_left . end . y		1048594	0					
ANR	1049328	MemberAccess	slant_left . end		1048594	0					
ANR	1049329	Identifier	slant_left		1048594	0					
ANR	1049330	Identifier	end		1048594	1					
ANR	1049331	Identifier	y		1048594	1					
ANR	1049332	AdditiveExpression	flp -> end . y - fo -> adjust_below		1048594	1		-			
ANR	1049333	MemberAccess	flp -> end . y		1048594	0					
ANR	1049334	PtrMemberAccess	flp -> end		1048594	0					
ANR	1049335	Identifier	flp		1048594	0					
ANR	1049336	Identifier	end		1048594	1					
ANR	1049337	Identifier	y		1048594	1					
ANR	1049338	PtrMemberAccess	fo -> adjust_below		1048594	1					
ANR	1049339	Identifier	fo		1048594	0					
ANR	1049340	Identifier	adjust_below		1048594	1					
ANR	1049341	ExpressionStatement	slant_right . start . y = alp -> start . y + fo -> adjust_above	1521:8:58923:58976	1048594	6	True				
ANR	1049342	AssignmentExpression	slant_right . start . y = alp -> start . y + fo -> adjust_above		1048594	0		=			
ANR	1049343	MemberAccess	slant_right . start . y		1048594	0					
ANR	1049344	MemberAccess	slant_right . start		1048594	0					
ANR	1049345	Identifier	slant_right		1048594	0					
ANR	1049346	Identifier	start		1048594	1					
ANR	1049347	Identifier	y		1048594	1					
ANR	1049348	AdditiveExpression	alp -> start . y + fo -> adjust_above		1048594	1		+			
ANR	1049349	MemberAccess	alp -> start . y		1048594	0					
ANR	1049350	PtrMemberAccess	alp -> start		1048594	0					
ANR	1049351	Identifier	alp		1048594	0					
ANR	1049352	Identifier	start		1048594	1					
ANR	1049353	Identifier	y		1048594	1					
ANR	1049354	PtrMemberAccess	fo -> adjust_above		1048594	1					
ANR	1049355	Identifier	fo		1048594	0					
ANR	1049356	Identifier	adjust_above		1048594	1					
ANR	1049357	ExpressionStatement	slant_right . end . y = alp -> end . y + fo -> adjust_above	1522:8:58986:59035	1048594	7	True				
ANR	1049358	AssignmentExpression	slant_right . end . y = alp -> end . y + fo -> adjust_above		1048594	0		=			
ANR	1049359	MemberAccess	slant_right . end . y		1048594	0					
ANR	1049360	MemberAccess	slant_right . end		1048594	0					
ANR	1049361	Identifier	slant_right		1048594	0					
ANR	1049362	Identifier	end		1048594	1					
ANR	1049363	Identifier	y		1048594	1					
ANR	1049364	AdditiveExpression	alp -> end . y + fo -> adjust_above		1048594	1		+			
ANR	1049365	MemberAccess	alp -> end . y		1048594	0					
ANR	1049366	PtrMemberAccess	alp -> end		1048594	0					
ANR	1049367	Identifier	alp		1048594	0					
ANR	1049368	Identifier	end		1048594	1					
ANR	1049369	Identifier	y		1048594	1					
ANR	1049370	PtrMemberAccess	fo -> adjust_above		1048594	1					
ANR	1049371	Identifier	fo		1048594	0					
ANR	1049372	Identifier	adjust_above		1048594	1					
ANR	1049373	ExpressionStatement	"plbot = & slant_left , prbot = & vert_right"	1523:8:59045:59085	1048594	8	True				
ANR	1049374	Expression	"plbot = & slant_left , prbot = & vert_right"		1048594	0					
ANR	1049375	AssignmentExpression	plbot = & slant_left		1048594	0		=			
ANR	1049376	Identifier	plbot		1048594	0					
ANR	1049377	UnaryOperationExpression	& slant_left		1048594	1					
ANR	1049378	UnaryOperator	&		1048594	0					
ANR	1049379	Identifier	slant_left		1048594	1					
ANR	1049380	AssignmentExpression	prbot = & vert_right		1048594	1		=			
ANR	1049381	Identifier	prbot		1048594	0					
ANR	1049382	UnaryOperationExpression	& vert_right		1048594	1					
ANR	1049383	UnaryOperator	&		1048594	0					
ANR	1049384	Identifier	vert_right		1048594	1					
ANR	1049385	ExpressionStatement	"pltop = & vert_left , prtop = & slant_right"	1524:8:59095:59135	1048594	9	True				
ANR	1049386	Expression	"pltop = & vert_left , prtop = & slant_right"		1048594	0					
ANR	1049387	AssignmentExpression	pltop = & vert_left		1048594	0		=			
ANR	1049388	Identifier	pltop		1048594	0					
ANR	1049389	UnaryOperationExpression	& vert_left		1048594	1					
ANR	1049390	UnaryOperator	&		1048594	0					
ANR	1049391	Identifier	vert_left		1048594	1					
ANR	1049392	AssignmentExpression	prtop = & slant_right		1048594	1		=			
ANR	1049393	Identifier	prtop		1048594	0					
ANR	1049394	UnaryOperationExpression	& slant_right		1048594	1					
ANR	1049395	UnaryOperator	&		1048594	0					
ANR	1049396	Identifier	slant_right		1048594	1					
ANR	1049397	IfStatement	if ( TRY_TO_EXTEND_TRAP )		1048594	10					
ANR	1049398	Condition	TRY_TO_EXTEND_TRAP	1525:12:59149:59166	1048594	0	True				
ANR	1049399	Identifier	TRY_TO_EXTEND_TRAP		1048594	0					
ANR	1049400	CompoundStatement		92:12:4317:4334	1048594	1					
ANR	1049401	IdentifierDeclStatement	"int x , cx , cy , dy ;"	1527:12:59191:59208	1048594	0	True				
ANR	1049402	IdentifierDecl	x		1048594	0					
ANR	1049403	IdentifierDeclType	int		1048594	0					
ANR	1049404	Identifier	x		1048594	1					
ANR	1049405	IdentifierDecl	cx		1048594	1					
ANR	1049406	IdentifierDeclType	int		1048594	0					
ANR	1049407	Identifier	cx		1048594	1					
ANR	1049408	IdentifierDecl	cy		1048594	2					
ANR	1049409	IdentifierDeclType	int		1048594	0					
ANR	1049410	Identifier	cy		1048594	1					
ANR	1049411	IdentifierDecl	dy		1048594	3					
ANR	1049412	IdentifierDeclType	int		1048594	0					
ANR	1049413	Identifier	dy		1048594	1					
ANR	1049414	WhileStatement	while ( slant_left . end . y < Y1a )		1048594	1					
ANR	1049415	Condition	slant_left . end . y < Y1a	1531:19:59396:59417	1048594	0	True				
ANR	1049416	RelationalExpression	slant_left . end . y < Y1a		1048594	0		<			
ANR	1049417	MemberAccess	slant_left . end . y		1048594	0					
ANR	1049418	MemberAccess	slant_left . end		1048594	0					
ANR	1049419	Identifier	slant_left		1048594	0					
ANR	1049420	Identifier	end		1048594	1					
ANR	1049421	Identifier	y		1048594	1					
ANR	1049422	Identifier	Y1a		1048594	1					
ANR	1049423	CompoundStatement		97:12:4558:4558	1048594	1					
ANR	1049424	ExpressionStatement	slant_left . end . x += slant_left . end . x - slant_left . start . x	1533:16:59450:59507	1048594	0	True				
ANR	1049425	AssignmentExpression	slant_left . end . x += slant_left . end . x - slant_left . start . x		1048594	0		+=			
ANR	1049426	MemberAccess	slant_left . end . x		1048594	0					
ANR	1049427	MemberAccess	slant_left . end		1048594	0					
ANR	1049428	Identifier	slant_left		1048594	0					
ANR	1049429	Identifier	end		1048594	1					
ANR	1049430	Identifier	x		1048594	1					
ANR	1049431	AdditiveExpression	slant_left . end . x - slant_left . start . x		1048594	1		-			
ANR	1049432	MemberAccess	slant_left . end . x		1048594	0					
ANR	1049433	MemberAccess	slant_left . end		1048594	0					
ANR	1049434	Identifier	slant_left		1048594	0					
ANR	1049435	Identifier	end		1048594	1					
ANR	1049436	Identifier	x		1048594	1					
ANR	1049437	MemberAccess	slant_left . start . x		1048594	1					
ANR	1049438	MemberAccess	slant_left . start		1048594	0					
ANR	1049439	Identifier	slant_left		1048594	0					
ANR	1049440	Identifier	start		1048594	1					
ANR	1049441	Identifier	x		1048594	1					
ANR	1049442	ExpressionStatement	slant_left . end . y += slant_left . end . y - slant_left . start . y	1534:16:59525:59582	1048594	1	True				
ANR	1049443	AssignmentExpression	slant_left . end . y += slant_left . end . y - slant_left . start . y		1048594	0		+=			
ANR	1049444	MemberAccess	slant_left . end . y		1048594	0					
ANR	1049445	MemberAccess	slant_left . end		1048594	0					
ANR	1049446	Identifier	slant_left		1048594	0					
ANR	1049447	Identifier	end		1048594	1					
ANR	1049448	Identifier	y		1048594	1					
ANR	1049449	AdditiveExpression	slant_left . end . y - slant_left . start . y		1048594	1		-			
ANR	1049450	MemberAccess	slant_left . end . y		1048594	0					
ANR	1049451	MemberAccess	slant_left . end		1048594	0					
ANR	1049452	Identifier	slant_left		1048594	0					
ANR	1049453	Identifier	end		1048594	1					
ANR	1049454	Identifier	y		1048594	1					
ANR	1049455	MemberAccess	slant_left . start . y		1048594	1					
ANR	1049456	MemberAccess	slant_left . start		1048594	0					
ANR	1049457	Identifier	slant_left		1048594	0					
ANR	1049458	Identifier	start		1048594	1					
ANR	1049459	Identifier	y		1048594	1					
ANR	1049460	WhileStatement	while ( slant_right . start . y > Yb )		1048594	2					
ANR	1049461	Condition	slant_right . start . y > Yb	1536:19:59617:59640	1048594	0	True				
ANR	1049462	RelationalExpression	slant_right . start . y > Yb		1048594	0		>			
ANR	1049463	MemberAccess	slant_right . start . y		1048594	0					
ANR	1049464	MemberAccess	slant_right . start		1048594	0					
ANR	1049465	Identifier	slant_right		1048594	0					
ANR	1049466	Identifier	start		1048594	1					
ANR	1049467	Identifier	y		1048594	1					
ANR	1049468	Identifier	Yb		1048594	1					
ANR	1049469	CompoundStatement		102:12:4781:4781	1048594	1					
ANR	1049470	ExpressionStatement	slant_right . start . x -= slant_right . end . x - slant_right . start . x	1538:16:59673:59733	1048594	0	True				
ANR	1049471	AssignmentExpression	slant_right . start . x -= slant_right . end . x - slant_right . start . x		1048594	0		-=			
ANR	1049472	MemberAccess	slant_right . start . x		1048594	0					
ANR	1049473	MemberAccess	slant_right . start		1048594	0					
ANR	1049474	Identifier	slant_right		1048594	0					
ANR	1049475	Identifier	start		1048594	1					
ANR	1049476	Identifier	x		1048594	1					
ANR	1049477	AdditiveExpression	slant_right . end . x - slant_right . start . x		1048594	1		-			
ANR	1049478	MemberAccess	slant_right . end . x		1048594	0					
ANR	1049479	MemberAccess	slant_right . end		1048594	0					
ANR	1049480	Identifier	slant_right		1048594	0					
ANR	1049481	Identifier	end		1048594	1					
ANR	1049482	Identifier	x		1048594	1					
ANR	1049483	MemberAccess	slant_right . start . x		1048594	1					
ANR	1049484	MemberAccess	slant_right . start		1048594	0					
ANR	1049485	Identifier	slant_right		1048594	0					
ANR	1049486	Identifier	start		1048594	1					
ANR	1049487	Identifier	x		1048594	1					
ANR	1049488	ExpressionStatement	slant_right . start . y -= slant_right . end . y - slant_right . start . y	1539:16:59751:59811	1048594	1	True				
ANR	1049489	AssignmentExpression	slant_right . start . y -= slant_right . end . y - slant_right . start . y		1048594	0		-=			
ANR	1049490	MemberAccess	slant_right . start . y		1048594	0					
ANR	1049491	MemberAccess	slant_right . start		1048594	0					
ANR	1049492	Identifier	slant_right		1048594	0					
ANR	1049493	Identifier	start		1048594	1					
ANR	1049494	Identifier	y		1048594	1					
ANR	1049495	AdditiveExpression	slant_right . end . y - slant_right . start . y		1048594	1		-			
ANR	1049496	MemberAccess	slant_right . end . y		1048594	0					
ANR	1049497	MemberAccess	slant_right . end		1048594	0					
ANR	1049498	Identifier	slant_right		1048594	0					
ANR	1049499	Identifier	end		1048594	1					
ANR	1049500	Identifier	y		1048594	1					
ANR	1049501	MemberAccess	slant_right . start . y		1048594	1					
ANR	1049502	MemberAccess	slant_right . start		1048594	0					
ANR	1049503	Identifier	slant_right		1048594	0					
ANR	1049504	Identifier	start		1048594	1					
ANR	1049505	Identifier	y		1048594	1					
ANR	1049506	ExpressionStatement	cy = fixed_pixround ( vert_left . start . y ) + fixed_half	1545:12:60091:60140	1048594	3	True				
ANR	1049507	AssignmentExpression	cy = fixed_pixround ( vert_left . start . y ) + fixed_half		1048594	0		=			
ANR	1049508	Identifier	cy		1048594	0					
ANR	1049509	AdditiveExpression	fixed_pixround ( vert_left . start . y ) + fixed_half		1048594	1		+			
ANR	1049510	CallExpression	fixed_pixround ( vert_left . start . y )		1048594	0					
ANR	1049511	Callee	fixed_pixround		1048594	0					
ANR	1049512	Identifier	fixed_pixround		1048594	0					
ANR	1049513	ArgumentList	vert_left . start . y		1048594	1					
ANR	1049514	Argument	vert_left . start . y		1048594	0					
ANR	1049515	MemberAccess	vert_left . start . y		1048594	0					
ANR	1049516	MemberAccess	vert_left . start		1048594	0					
ANR	1049517	Identifier	vert_left		1048594	0					
ANR	1049518	Identifier	start		1048594	1					
ANR	1049519	Identifier	y		1048594	1					
ANR	1049520	Identifier	fixed_half		1048594	1					
ANR	1049521	ExpressionStatement	cx = fixed_pixround ( vert_left . start . x ) - fixed_half	1546:12:60154:60203	1048594	4	True				
ANR	1049522	AssignmentExpression	cx = fixed_pixround ( vert_left . start . x ) - fixed_half		1048594	0		=			
ANR	1049523	Identifier	cx		1048594	0					
ANR	1049524	AdditiveExpression	fixed_pixround ( vert_left . start . x ) - fixed_half		1048594	1		-			
ANR	1049525	CallExpression	fixed_pixround ( vert_left . start . x )		1048594	0					
ANR	1049526	Callee	fixed_pixround		1048594	0					
ANR	1049527	Identifier	fixed_pixround		1048594	0					
ANR	1049528	ArgumentList	vert_left . start . x		1048594	1					
ANR	1049529	Argument	vert_left . start . x		1048594	0					
ANR	1049530	MemberAccess	vert_left . start . x		1048594	0					
ANR	1049531	MemberAccess	vert_left . start		1048594	0					
ANR	1049532	Identifier	vert_left		1048594	0					
ANR	1049533	Identifier	start		1048594	1					
ANR	1049534	Identifier	x		1048594	1					
ANR	1049535	Identifier	fixed_half		1048594	1					
ANR	1049536	ExpressionStatement	dy = slant_left . end . y - slant_left . start . y	1547:12:60217:60257	1048594	5	True				
ANR	1049537	AssignmentExpression	dy = slant_left . end . y - slant_left . start . y		1048594	0		=			
ANR	1049538	Identifier	dy		1048594	0					
ANR	1049539	AdditiveExpression	slant_left . end . y - slant_left . start . y		1048594	1		-			
ANR	1049540	MemberAccess	slant_left . end . y		1048594	0					
ANR	1049541	MemberAccess	slant_left . end		1048594	0					
ANR	1049542	Identifier	slant_left		1048594	0					
ANR	1049543	Identifier	end		1048594	1					
ANR	1049544	Identifier	y		1048594	1					
ANR	1049545	MemberAccess	slant_left . start . y		1048594	1					
ANR	1049546	MemberAccess	slant_left . start		1048594	0					
ANR	1049547	Identifier	slant_left		1048594	0					
ANR	1049548	Identifier	start		1048594	1					
ANR	1049549	Identifier	y		1048594	1					
ANR	1049550	ExpressionStatement	x = vert_left . start . x - ( fixed ) ( ( ( ( int64_t ) ( slant_left . start . x - slant_left . end . x ) ) * ( ( int64_t ) ( cy - vert_left . start . y ) ) + dy - 1 ) / ( ( int64_t ) dy ) )	1548:12:60271:60480	1048594	6	True				
ANR	1049551	AssignmentExpression	x = vert_left . start . x - ( fixed ) ( ( ( ( int64_t ) ( slant_left . start . x - slant_left . end . x ) ) * ( ( int64_t ) ( cy - vert_left . start . y ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		1048594	0		=			
ANR	1049552	Identifier	x		1048594	0					
ANR	1049553	AdditiveExpression	vert_left . start . x - ( fixed ) ( ( ( ( int64_t ) ( slant_left . start . x - slant_left . end . x ) ) * ( ( int64_t ) ( cy - vert_left . start . y ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		1048594	1		-			
ANR	1049554	MemberAccess	vert_left . start . x		1048594	0					
ANR	1049555	MemberAccess	vert_left . start		1048594	0					
ANR	1049556	Identifier	vert_left		1048594	0					
ANR	1049557	Identifier	start		1048594	1					
ANR	1049558	Identifier	x		1048594	1					
ANR	1049559	CastExpression	( fixed ) ( ( ( ( int64_t ) ( slant_left . start . x - slant_left . end . x ) ) * ( ( int64_t ) ( cy - vert_left . start . y ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		1048594	1					
ANR	1049560	CastTarget	fixed		1048594	0					
ANR	1049561	MultiplicativeExpression	( ( ( int64_t ) ( slant_left . start . x - slant_left . end . x ) ) * ( ( int64_t ) ( cy - vert_left . start . y ) ) + dy - 1 ) / ( ( int64_t ) dy )		1048594	1		/			
ANR	1049562	AdditiveExpression	( ( int64_t ) ( slant_left . start . x - slant_left . end . x ) ) * ( ( int64_t ) ( cy - vert_left . start . y ) ) + dy - 1		1048594	0		+			
ANR	1049563	MultiplicativeExpression	( ( int64_t ) ( slant_left . start . x - slant_left . end . x ) ) * ( ( int64_t ) ( cy - vert_left . start . y ) )		1048594	0		*			
ANR	1049564	CastExpression	( int64_t ) ( slant_left . start . x - slant_left . end . x )		1048594	0					
ANR	1049565	CastTarget	int64_t		1048594	0					
ANR	1049566	AdditiveExpression	slant_left . start . x - slant_left . end . x		1048594	1		-			
ANR	1049567	MemberAccess	slant_left . start . x		1048594	0					
ANR	1049568	MemberAccess	slant_left . start		1048594	0					
ANR	1049569	Identifier	slant_left		1048594	0					
ANR	1049570	Identifier	start		1048594	1					
ANR	1049571	Identifier	x		1048594	1					
ANR	1049572	MemberAccess	slant_left . end . x		1048594	1					
ANR	1049573	MemberAccess	slant_left . end		1048594	0					
ANR	1049574	Identifier	slant_left		1048594	0					
ANR	1049575	Identifier	end		1048594	1					
ANR	1049576	Identifier	x		1048594	1					
ANR	1049577	CastExpression	( int64_t ) ( cy - vert_left . start . y )		1048594	1					
ANR	1049578	CastTarget	int64_t		1048594	0					
ANR	1049579	AdditiveExpression	cy - vert_left . start . y		1048594	1		-			
ANR	1049580	Identifier	cy		1048594	0					
ANR	1049581	MemberAccess	vert_left . start . y		1048594	1					
ANR	1049582	MemberAccess	vert_left . start		1048594	0					
ANR	1049583	Identifier	vert_left		1048594	0					
ANR	1049584	Identifier	start		1048594	1					
ANR	1049585	Identifier	y		1048594	1					
ANR	1049586	AdditiveExpression	dy - 1		1048594	1		-			
ANR	1049587	Identifier	dy		1048594	0					
ANR	1049588	PrimaryExpression	1		1048594	1					
ANR	1049589	CastExpression	( int64_t ) dy		1048594	1					
ANR	1049590	CastTarget	int64_t		1048594	0					
ANR	1049591	Identifier	dy		1048594	1					
ANR	1049592	IfStatement	if ( ( cy >= Y1a ) || ( x > cx ) )		1048594	7					
ANR	1049593	Condition	( cy >= Y1a ) || ( x > cx )	1552:16:60498:60520	1048594	0	True				
ANR	1049594	OrExpression	( cy >= Y1a ) || ( x > cx )		1048594	0		||			
ANR	1049595	RelationalExpression	cy >= Y1a		1048594	0		>=			
ANR	1049596	Identifier	cy		1048594	0					
ANR	1049597	Identifier	Y1a		1048594	1					
ANR	1049598	RelationalExpression	x > cx		1048594	1		>			
ANR	1049599	Identifier	x		1048594	0					
ANR	1049600	Identifier	cx		1048594	1					
ANR	1049601	CompoundStatement		118:12:5661:5661	1048594	1					
ANR	1049602	ExpressionStatement	Y1b = Y1a	1555:16:60614:60623	1048594	0	True				
ANR	1049603	AssignmentExpression	Y1b = Y1a		1048594	0		=			
ANR	1049604	Identifier	Y1b		1048594	0					
ANR	1049605	Identifier	Y1a		1048594	1					
ANR	1049606	ExpressionStatement	cy = fixed_pixround ( vert_right . end . y ) - fixed_half	1561:12:60901:60949	1048594	8	True				
ANR	1049607	AssignmentExpression	cy = fixed_pixround ( vert_right . end . y ) - fixed_half		1048594	0		=			
ANR	1049608	Identifier	cy		1048594	0					
ANR	1049609	AdditiveExpression	fixed_pixround ( vert_right . end . y ) - fixed_half		1048594	1		-			
ANR	1049610	CallExpression	fixed_pixround ( vert_right . end . y )		1048594	0					
ANR	1049611	Callee	fixed_pixround		1048594	0					
ANR	1049612	Identifier	fixed_pixround		1048594	0					
ANR	1049613	ArgumentList	vert_right . end . y		1048594	1					
ANR	1049614	Argument	vert_right . end . y		1048594	0					
ANR	1049615	MemberAccess	vert_right . end . y		1048594	0					
ANR	1049616	MemberAccess	vert_right . end		1048594	0					
ANR	1049617	Identifier	vert_right		1048594	0					
ANR	1049618	Identifier	end		1048594	1					
ANR	1049619	Identifier	y		1048594	1					
ANR	1049620	Identifier	fixed_half		1048594	1					
ANR	1049621	ExpressionStatement	cx = fixed_pixround ( vert_right . end . x ) - fixed_half	1562:12:60963:61011	1048594	9	True				
ANR	1049622	AssignmentExpression	cx = fixed_pixround ( vert_right . end . x ) - fixed_half		1048594	0		=			
ANR	1049623	Identifier	cx		1048594	0					
ANR	1049624	AdditiveExpression	fixed_pixround ( vert_right . end . x ) - fixed_half		1048594	1		-			
ANR	1049625	CallExpression	fixed_pixround ( vert_right . end . x )		1048594	0					
ANR	1049626	Callee	fixed_pixround		1048594	0					
ANR	1049627	Identifier	fixed_pixround		1048594	0					
ANR	1049628	ArgumentList	vert_right . end . x		1048594	1					
ANR	1049629	Argument	vert_right . end . x		1048594	0					
ANR	1049630	MemberAccess	vert_right . end . x		1048594	0					
ANR	1049631	MemberAccess	vert_right . end		1048594	0					
ANR	1049632	Identifier	vert_right		1048594	0					
ANR	1049633	Identifier	end		1048594	1					
ANR	1049634	Identifier	x		1048594	1					
ANR	1049635	Identifier	fixed_half		1048594	1					
ANR	1049636	ExpressionStatement	dy = slant_right . end . y - slant_right . start . y	1563:12:61025:61067	1048594	10	True				
ANR	1049637	AssignmentExpression	dy = slant_right . end . y - slant_right . start . y		1048594	0		=			
ANR	1049638	Identifier	dy		1048594	0					
ANR	1049639	AdditiveExpression	slant_right . end . y - slant_right . start . y		1048594	1		-			
ANR	1049640	MemberAccess	slant_right . end . y		1048594	0					
ANR	1049641	MemberAccess	slant_right . end		1048594	0					
ANR	1049642	Identifier	slant_right		1048594	0					
ANR	1049643	Identifier	end		1048594	1					
ANR	1049644	Identifier	y		1048594	1					
ANR	1049645	MemberAccess	slant_right . start . y		1048594	1					
ANR	1049646	MemberAccess	slant_right . start		1048594	0					
ANR	1049647	Identifier	slant_right		1048594	0					
ANR	1049648	Identifier	start		1048594	1					
ANR	1049649	Identifier	y		1048594	1					
ANR	1049650	ExpressionStatement	x = vert_right . end . x + ( fixed ) ( ( ( ( int64_t ) ( slant_right . start . x - slant_right . end . x ) ) * ( ( int64_t ) ( vert_right . end . y - cy ) ) + dy - 1 ) / ( ( int64_t ) dy ) )	1564:12:61081:61290	1048594	11	True				
ANR	1049651	AssignmentExpression	x = vert_right . end . x + ( fixed ) ( ( ( ( int64_t ) ( slant_right . start . x - slant_right . end . x ) ) * ( ( int64_t ) ( vert_right . end . y - cy ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		1048594	0		=			
ANR	1049652	Identifier	x		1048594	0					
ANR	1049653	AdditiveExpression	vert_right . end . x + ( fixed ) ( ( ( ( int64_t ) ( slant_right . start . x - slant_right . end . x ) ) * ( ( int64_t ) ( vert_right . end . y - cy ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		1048594	1		+			
ANR	1049654	MemberAccess	vert_right . end . x		1048594	0					
ANR	1049655	MemberAccess	vert_right . end		1048594	0					
ANR	1049656	Identifier	vert_right		1048594	0					
ANR	1049657	Identifier	end		1048594	1					
ANR	1049658	Identifier	x		1048594	1					
ANR	1049659	CastExpression	( fixed ) ( ( ( ( int64_t ) ( slant_right . start . x - slant_right . end . x ) ) * ( ( int64_t ) ( vert_right . end . y - cy ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		1048594	1					
ANR	1049660	CastTarget	fixed		1048594	0					
ANR	1049661	MultiplicativeExpression	( ( ( int64_t ) ( slant_right . start . x - slant_right . end . x ) ) * ( ( int64_t ) ( vert_right . end . y - cy ) ) + dy - 1 ) / ( ( int64_t ) dy )		1048594	1		/			
ANR	1049662	AdditiveExpression	( ( int64_t ) ( slant_right . start . x - slant_right . end . x ) ) * ( ( int64_t ) ( vert_right . end . y - cy ) ) + dy - 1		1048594	0		+			
ANR	1049663	MultiplicativeExpression	( ( int64_t ) ( slant_right . start . x - slant_right . end . x ) ) * ( ( int64_t ) ( vert_right . end . y - cy ) )		1048594	0		*			
ANR	1049664	CastExpression	( int64_t ) ( slant_right . start . x - slant_right . end . x )		1048594	0					
ANR	1049665	CastTarget	int64_t		1048594	0					
ANR	1049666	AdditiveExpression	slant_right . start . x - slant_right . end . x		1048594	1		-			
ANR	1049667	MemberAccess	slant_right . start . x		1048594	0					
ANR	1049668	MemberAccess	slant_right . start		1048594	0					
ANR	1049669	Identifier	slant_right		1048594	0					
ANR	1049670	Identifier	start		1048594	1					
ANR	1049671	Identifier	x		1048594	1					
ANR	1049672	MemberAccess	slant_right . end . x		1048594	1					
ANR	1049673	MemberAccess	slant_right . end		1048594	0					
ANR	1049674	Identifier	slant_right		1048594	0					
ANR	1049675	Identifier	end		1048594	1					
ANR	1049676	Identifier	x		1048594	1					
ANR	1049677	CastExpression	( int64_t ) ( vert_right . end . y - cy )		1048594	1					
ANR	1049678	CastTarget	int64_t		1048594	0					
ANR	1049679	AdditiveExpression	vert_right . end . y - cy		1048594	1		-			
ANR	1049680	MemberAccess	vert_right . end . y		1048594	0					
ANR	1049681	MemberAccess	vert_right . end		1048594	0					
ANR	1049682	Identifier	vert_right		1048594	0					
ANR	1049683	Identifier	end		1048594	1					
ANR	1049684	Identifier	y		1048594	1					
ANR	1049685	Identifier	cy		1048594	1					
ANR	1049686	AdditiveExpression	dy - 1		1048594	1		-			
ANR	1049687	Identifier	dy		1048594	0					
ANR	1049688	PrimaryExpression	1		1048594	1					
ANR	1049689	CastExpression	( int64_t ) dy		1048594	1					
ANR	1049690	CastTarget	int64_t		1048594	0					
ANR	1049691	Identifier	dy		1048594	1					
ANR	1049692	IfStatement	if ( ( cy < Yb ) || ( x < cx ) )		1048594	12					
ANR	1049693	Condition	( cy < Yb ) || ( x < cx )	1568:16:61308:61328	1048594	0	True				
ANR	1049694	OrExpression	( cy < Yb ) || ( x < cx )		1048594	0		||			
ANR	1049695	RelationalExpression	cy < Yb		1048594	0		<			
ANR	1049696	Identifier	cy		1048594	0					
ANR	1049697	Identifier	Yb		1048594	1					
ANR	1049698	RelationalExpression	x < cx		1048594	1		<			
ANR	1049699	Identifier	x		1048594	0					
ANR	1049700	Identifier	cx		1048594	1					
ANR	1049701	CompoundStatement		134:12:6469:6469	1048594	1					
ANR	1049702	ExpressionStatement	Ya = Yb	1571:16:61424:61431	1048594	0	True				
ANR	1049703	AssignmentExpression	Ya = Yb		1048594	0		=			
ANR	1049704	Identifier	Ya		1048594	0					
ANR	1049705	Identifier	Yb		1048594	1					
ANR	1049706	IfStatement	if ( Ya >= Y1b )		1048594	18					
ANR	1049707	Condition	Ya >= Y1b	1576:8:61472:61480	1048594	0	True				
ANR	1049708	RelationalExpression	Ya >= Y1b		1048594	0		>=			
ANR	1049709	Identifier	Ya		1048594	0					
ANR	1049710	Identifier	Y1b		1048594	1					
ANR	1049711	CompoundStatement		152:8:7068:7106	1048594	1					
ANR	1049712	IdentifierDeclStatement	int iYb = fixed2int_var_pixround ( Yb ) ;	1584:8:61802:61838	1048594	0	True				
ANR	1049713	IdentifierDecl	iYb = fixed2int_var_pixround ( Yb )		1048594	0					
ANR	1049714	IdentifierDeclType	int		1048594	0					
ANR	1049715	Identifier	iYb		1048594	1					
ANR	1049716	AssignmentExpression	iYb = fixed2int_var_pixround ( Yb )		1048594	2		=			
ANR	1049717	Identifier	iYb		1048594	0					
ANR	1049718	CallExpression	fixed2int_var_pixround ( Yb )		1048594	1					
ANR	1049719	Callee	fixed2int_var_pixround		1048594	0					
ANR	1049720	Identifier	fixed2int_var_pixround		1048594	0					
ANR	1049721	ArgumentList	Yb		1048594	1					
ANR	1049722	Argument	Yb		1048594	0					
ANR	1049723	Identifier	Yb		1048594	0					
ANR	1049724	IdentifierDeclStatement	int iYa = fixed2int_var_pixround ( Ya ) ;	1585:8:61848:61884	1048594	1	True				
ANR	1049725	IdentifierDecl	iYa = fixed2int_var_pixround ( Ya )		1048594	0					
ANR	1049726	IdentifierDeclType	int		1048594	0					
ANR	1049727	Identifier	iYa		1048594	1					
ANR	1049728	AssignmentExpression	iYa = fixed2int_var_pixround ( Ya )		1048594	2		=			
ANR	1049729	Identifier	iYa		1048594	0					
ANR	1049730	CallExpression	fixed2int_var_pixround ( Ya )		1048594	1					
ANR	1049731	Callee	fixed2int_var_pixround		1048594	0					
ANR	1049732	Identifier	fixed2int_var_pixround		1048594	0					
ANR	1049733	ArgumentList	Ya		1048594	1					
ANR	1049734	Argument	Ya		1048594	0					
ANR	1049735	Identifier	Ya		1048594	0					
ANR	1049736	IdentifierDeclStatement	int iY1b = fixed2int_var_pixround ( Y1b ) ;	1586:8:61894:61932	1048594	2	True				
ANR	1049737	IdentifierDecl	iY1b = fixed2int_var_pixround ( Y1b )		1048594	0					
ANR	1049738	IdentifierDeclType	int		1048594	0					
ANR	1049739	Identifier	iY1b		1048594	1					
ANR	1049740	AssignmentExpression	iY1b = fixed2int_var_pixround ( Y1b )		1048594	2		=			
ANR	1049741	Identifier	iY1b		1048594	0					
ANR	1049742	CallExpression	fixed2int_var_pixround ( Y1b )		1048594	1					
ANR	1049743	Callee	fixed2int_var_pixround		1048594	0					
ANR	1049744	Identifier	fixed2int_var_pixround		1048594	0					
ANR	1049745	ArgumentList	Y1b		1048594	1					
ANR	1049746	Argument	Y1b		1048594	0					
ANR	1049747	Identifier	Y1b		1048594	0					
ANR	1049748	IdentifierDeclStatement	int iY1a = fixed2int_var_pixround ( Y1a ) ;	1587:8:61942:61980	1048594	3	True				
ANR	1049749	IdentifierDecl	iY1a = fixed2int_var_pixround ( Y1a )		1048594	0					
ANR	1049750	IdentifierDeclType	int		1048594	0					
ANR	1049751	Identifier	iY1a		1048594	1					
ANR	1049752	AssignmentExpression	iY1a = fixed2int_var_pixround ( Y1a )		1048594	2		=			
ANR	1049753	Identifier	iY1a		1048594	0					
ANR	1049754	CallExpression	fixed2int_var_pixround ( Y1a )		1048594	1					
ANR	1049755	Callee	fixed2int_var_pixround		1048594	0					
ANR	1049756	Identifier	fixed2int_var_pixround		1048594	0					
ANR	1049757	ArgumentList	Y1a		1048594	1					
ANR	1049758	Argument	Y1a		1048594	0					
ANR	1049759	Identifier	Y1a		1048594	0					
ANR	1049760	ExpressionStatement	INCR ( slant_shallow )	1589:8:61991:62010	1048594	4	True				
ANR	1049761	CallExpression	INCR ( slant_shallow )		1048594	0					
ANR	1049762	Callee	INCR		1048594	0					
ANR	1049763	Identifier	INCR		1048594	0					
ANR	1049764	ArgumentList	slant_shallow		1048594	1					
ANR	1049765	Argument	slant_shallow		1048594	0					
ANR	1049766	Identifier	slant_shallow		1048594	0					
ANR	1049767	IfStatement	if ( iY1b > iYb )		1048594	5					
ANR	1049768	Condition	iY1b > iYb	1590:12:62024:62033	1048594	0	True				
ANR	1049769	RelationalExpression	iY1b > iYb		1048594	0		>			
ANR	1049770	Identifier	iY1b		1048594	0					
ANR	1049771	Identifier	iYb		1048594	1					
ANR	1049772	CompoundStatement		155:24:7162:7162	1048594	1					
ANR	1049773	ExpressionStatement	"code = fo -> fill_trap ( fo -> dev , plbot , prbot , Yb , Y1b , false , fo -> pdevc , fo -> lop )"	1591:12:62050:62162	1048594	0	True				
ANR	1049774	AssignmentExpression	"code = fo -> fill_trap ( fo -> dev , plbot , prbot , Yb , Y1b , false , fo -> pdevc , fo -> lop )"		1048594	0		=			
ANR	1049775	Identifier	code		1048594	0					
ANR	1049776	CallExpression	"fo -> fill_trap ( fo -> dev , plbot , prbot , Yb , Y1b , false , fo -> pdevc , fo -> lop )"		1048594	1					
ANR	1049777	Callee	fo -> fill_trap		1048594	0					
ANR	1049778	PtrMemberAccess	fo -> fill_trap		1048594	0					
ANR	1049779	Identifier	fo		1048594	0					
ANR	1049780	Identifier	fill_trap		1048594	1					
ANR	1049781	ArgumentList	fo -> dev		1048594	1					
ANR	1049782	Argument	fo -> dev		1048594	0					
ANR	1049783	PtrMemberAccess	fo -> dev		1048594	0					
ANR	1049784	Identifier	fo		1048594	0					
ANR	1049785	Identifier	dev		1048594	1					
ANR	1049786	Argument	plbot		1048594	1					
ANR	1049787	Identifier	plbot		1048594	0					
ANR	1049788	Argument	prbot		1048594	2					
ANR	1049789	Identifier	prbot		1048594	0					
ANR	1049790	Argument	Yb		1048594	3					
ANR	1049791	Identifier	Yb		1048594	0					
ANR	1049792	Argument	Y1b		1048594	4					
ANR	1049793	Identifier	Y1b		1048594	0					
ANR	1049794	Argument	false		1048594	5					
ANR	1049795	Identifier	false		1048594	0					
ANR	1049796	Argument	fo -> pdevc		1048594	6					
ANR	1049797	PtrMemberAccess	fo -> pdevc		1048594	0					
ANR	1049798	Identifier	fo		1048594	0					
ANR	1049799	Identifier	pdevc		1048594	1					
ANR	1049800	Argument	fo -> lop		1048594	7					
ANR	1049801	PtrMemberAccess	fo -> lop		1048594	0					
ANR	1049802	Identifier	fo		1048594	0					
ANR	1049803	Identifier	lop		1048594	1					
ANR	1049804	IfStatement	if ( code < 0 )		1048594	1					
ANR	1049805	Condition	code < 0	1593:16:62180:62187	1048594	0	True				
ANR	1049806	RelationalExpression	code < 0		1048594	0		<			
ANR	1049807	Identifier	code		1048594	0					
ANR	1049808	PrimaryExpression	0		1048594	1					
ANR	1049809	ReturnStatement	return code ;	1594:16:62206:62217	1048594	1	True				
ANR	1049810	Identifier	code		1048594	0					
ANR	1049811	IfStatement	if ( iYa > iY1b )		1048594	6					
ANR	1049812	Condition	iYa > iY1b	1596:12:62241:62250	1048594	0	True				
ANR	1049813	RelationalExpression	iYa > iY1b		1048594	0		>			
ANR	1049814	Identifier	iYa		1048594	0					
ANR	1049815	Identifier	iY1b		1048594	1					
ANR	1049816	CompoundStatement		163:12:7457:7513	1048594	1					
ANR	1049817	IdentifierDeclStatement	int ix = fixed2int_var_pixround ( vert_left . start . x ) ;	1597:12:62267:62317	1048594	0	True				
ANR	1049818	IdentifierDecl	ix = fixed2int_var_pixround ( vert_left . start . x )		1048594	0					
ANR	1049819	IdentifierDeclType	int		1048594	0					
ANR	1049820	Identifier	ix		1048594	1					
ANR	1049821	AssignmentExpression	ix = fixed2int_var_pixround ( vert_left . start . x )		1048594	2		=			
ANR	1049822	Identifier	ix		1048594	0					
ANR	1049823	CallExpression	fixed2int_var_pixround ( vert_left . start . x )		1048594	1					
ANR	1049824	Callee	fixed2int_var_pixround		1048594	0					
ANR	1049825	Identifier	fixed2int_var_pixround		1048594	0					
ANR	1049826	ArgumentList	vert_left . start . x		1048594	1					
ANR	1049827	Argument	vert_left . start . x		1048594	0					
ANR	1049828	MemberAccess	vert_left . start . x		1048594	0					
ANR	1049829	MemberAccess	vert_left . start		1048594	0					
ANR	1049830	Identifier	vert_left		1048594	0					
ANR	1049831	Identifier	start		1048594	1					
ANR	1049832	Identifier	x		1048594	1					
ANR	1049833	IdentifierDeclStatement	int iw = fixed2int_var_pixround ( vert_right . start . x ) - ix ;	1598:12:62331:62387	1048594	1	True				
ANR	1049834	IdentifierDecl	iw = fixed2int_var_pixround ( vert_right . start . x ) - ix		1048594	0					
ANR	1049835	IdentifierDeclType	int		1048594	0					
ANR	1049836	Identifier	iw		1048594	1					
ANR	1049837	AssignmentExpression	iw = fixed2int_var_pixround ( vert_right . start . x ) - ix		1048594	2		=			
ANR	1049838	Identifier	iw		1048594	0					
ANR	1049839	AdditiveExpression	fixed2int_var_pixround ( vert_right . start . x ) - ix		1048594	1		-			
ANR	1049840	CallExpression	fixed2int_var_pixround ( vert_right . start . x )		1048594	0					
ANR	1049841	Callee	fixed2int_var_pixround		1048594	0					
ANR	1049842	Identifier	fixed2int_var_pixround		1048594	0					
ANR	1049843	ArgumentList	vert_right . start . x		1048594	1					
ANR	1049844	Argument	vert_right . start . x		1048594	0					
ANR	1049845	MemberAccess	vert_right . start . x		1048594	0					
ANR	1049846	MemberAccess	vert_right . start		1048594	0					
ANR	1049847	Identifier	vert_right		1048594	0					
ANR	1049848	Identifier	start		1048594	1					
ANR	1049849	Identifier	x		1048594	1					
ANR	1049850	Identifier	ix		1048594	1					
ANR	1049851	ExpressionStatement	"code = gx_fill_rectangle_device_rop ( ix , iY1b , iw , iYa - iY1b , fo -> pdevc , fo -> dev , fo -> lop )"	1600:12:62402:62516	1048594	2	True				
ANR	1049852	AssignmentExpression	"code = gx_fill_rectangle_device_rop ( ix , iY1b , iw , iYa - iY1b , fo -> pdevc , fo -> dev , fo -> lop )"		1048594	0		=			
ANR	1049853	Identifier	code		1048594	0					
ANR	1049854	CallExpression	"gx_fill_rectangle_device_rop ( ix , iY1b , iw , iYa - iY1b , fo -> pdevc , fo -> dev , fo -> lop )"		1048594	1					
ANR	1049855	Callee	gx_fill_rectangle_device_rop		1048594	0					
ANR	1049856	Identifier	gx_fill_rectangle_device_rop		1048594	0					
ANR	1049857	ArgumentList	ix		1048594	1					
ANR	1049858	Argument	ix		1048594	0					
ANR	1049859	Identifier	ix		1048594	0					
ANR	1049860	Argument	iY1b		1048594	1					
ANR	1049861	Identifier	iY1b		1048594	0					
ANR	1049862	Argument	iw		1048594	2					
ANR	1049863	Identifier	iw		1048594	0					
ANR	1049864	Argument	iYa - iY1b		1048594	3					
ANR	1049865	AdditiveExpression	iYa - iY1b		1048594	0		-			
ANR	1049866	Identifier	iYa		1048594	0					
ANR	1049867	Identifier	iY1b		1048594	1					
ANR	1049868	Argument	fo -> pdevc		1048594	4					
ANR	1049869	PtrMemberAccess	fo -> pdevc		1048594	0					
ANR	1049870	Identifier	fo		1048594	0					
ANR	1049871	Identifier	pdevc		1048594	1					
ANR	1049872	Argument	fo -> dev		1048594	5					
ANR	1049873	PtrMemberAccess	fo -> dev		1048594	0					
ANR	1049874	Identifier	fo		1048594	0					
ANR	1049875	Identifier	dev		1048594	1					
ANR	1049876	Argument	fo -> lop		1048594	6					
ANR	1049877	PtrMemberAccess	fo -> lop		1048594	0					
ANR	1049878	Identifier	fo		1048594	0					
ANR	1049879	Identifier	lop		1048594	1					
ANR	1049880	IfStatement	if ( code < 0 )		1048594	3					
ANR	1049881	Condition	code < 0	1602:16:62534:62541	1048594	0	True				
ANR	1049882	RelationalExpression	code < 0		1048594	0		<			
ANR	1049883	Identifier	code		1048594	0					
ANR	1049884	PrimaryExpression	0		1048594	1					
ANR	1049885	ReturnStatement	return code ;	1603:16:62560:62571	1048594	1	True				
ANR	1049886	Identifier	code		1048594	0					
ANR	1049887	IfStatement	if ( iY1a > iYa )		1048594	7					
ANR	1049888	Condition	iY1a > iYa	1605:12:62595:62604	1048594	0	True				
ANR	1049889	RelationalExpression	iY1a > iYa		1048594	0		>			
ANR	1049890	Identifier	iY1a		1048594	0					
ANR	1049891	Identifier	iYa		1048594	1					
ANR	1049892	ExpressionStatement	"code = fo -> fill_trap ( fo -> dev , pltop , prtop , Ya , Y1a , false , fo -> pdevc , fo -> lop )"	1606:12:62619:62731	1048594	1	True				
ANR	1049893	AssignmentExpression	"code = fo -> fill_trap ( fo -> dev , pltop , prtop , Ya , Y1a , false , fo -> pdevc , fo -> lop )"		1048594	0		=			
ANR	1049894	Identifier	code		1048594	0					
ANR	1049895	CallExpression	"fo -> fill_trap ( fo -> dev , pltop , prtop , Ya , Y1a , false , fo -> pdevc , fo -> lop )"		1048594	1					
ANR	1049896	Callee	fo -> fill_trap		1048594	0					
ANR	1049897	PtrMemberAccess	fo -> fill_trap		1048594	0					
ANR	1049898	Identifier	fo		1048594	0					
ANR	1049899	Identifier	fill_trap		1048594	1					
ANR	1049900	ArgumentList	fo -> dev		1048594	1					
ANR	1049901	Argument	fo -> dev		1048594	0					
ANR	1049902	PtrMemberAccess	fo -> dev		1048594	0					
ANR	1049903	Identifier	fo		1048594	0					
ANR	1049904	Identifier	dev		1048594	1					
ANR	1049905	Argument	pltop		1048594	1					
ANR	1049906	Identifier	pltop		1048594	0					
ANR	1049907	Argument	prtop		1048594	2					
ANR	1049908	Identifier	prtop		1048594	0					
ANR	1049909	Argument	Ya		1048594	3					
ANR	1049910	Identifier	Ya		1048594	0					
ANR	1049911	Argument	Y1a		1048594	4					
ANR	1049912	Identifier	Y1a		1048594	0					
ANR	1049913	Argument	false		1048594	5					
ANR	1049914	Identifier	false		1048594	0					
ANR	1049915	Argument	fo -> pdevc		1048594	6					
ANR	1049916	PtrMemberAccess	fo -> pdevc		1048594	0					
ANR	1049917	Identifier	fo		1048594	0					
ANR	1049918	Identifier	pdevc		1048594	1					
ANR	1049919	Argument	fo -> lop		1048594	7					
ANR	1049920	PtrMemberAccess	fo -> lop		1048594	0					
ANR	1049921	Identifier	fo		1048594	0					
ANR	1049922	Identifier	lop		1048594	1					
ANR	1049923	ElseStatement	else		1048594	0					
ANR	1049924	ExpressionStatement	code = 0	1609:12:62758:62766	1048594	0	True				
ANR	1049925	AssignmentExpression	code = 0		1048594	0		=			
ANR	1049926	Identifier	code		1048594	0					
ANR	1049927	PrimaryExpression	0		1048594	1					
ANR	1049928	ElseStatement	else		1048594	0					
ANR	1049929	CompoundStatement		180:8:8068:8077	1048594	0					
ANR	1049930	IdentifierDeclStatement	fixed Yac ;	1615:8:62942:62951	1048594	0	True				
ANR	1049931	IdentifierDecl	Yac		1048594	0					
ANR	1049932	IdentifierDeclType	fixed		1048594	0					
ANR	1049933	Identifier	Yac		1048594	1					
ANR	1049934	IfStatement	if ( fo -> pbox -> p . y < Ya )		1048594	1					
ANR	1049935	Condition	fo -> pbox -> p . y < Ya	1617:12:62966:62983	1048594	0	True				
ANR	1049936	RelationalExpression	fo -> pbox -> p . y < Ya		1048594	0		<			
ANR	1049937	MemberAccess	fo -> pbox -> p . y		1048594	0					
ANR	1049938	PtrMemberAccess	fo -> pbox -> p		1048594	0					
ANR	1049939	PtrMemberAccess	fo -> pbox		1048594	0					
ANR	1049940	Identifier	fo		1048594	0					
ANR	1049941	Identifier	pbox		1048594	1					
ANR	1049942	Identifier	p		1048594	1					
ANR	1049943	Identifier	y		1048594	1					
ANR	1049944	Identifier	Ya		1048594	1					
ANR	1049945	CompoundStatement		182:32:8112:8112	1048594	1					
ANR	1049946	ExpressionStatement	"code = fo -> fill_trap ( fo -> dev , plbot , prbot , Yb , Ya , false , fo -> pdevc , fo -> lop )"	1618:12:63000:63111	1048594	0	True				
ANR	1049947	AssignmentExpression	"code = fo -> fill_trap ( fo -> dev , plbot , prbot , Yb , Ya , false , fo -> pdevc , fo -> lop )"		1048594	0		=			
ANR	1049948	Identifier	code		1048594	0					
ANR	1049949	CallExpression	"fo -> fill_trap ( fo -> dev , plbot , prbot , Yb , Ya , false , fo -> pdevc , fo -> lop )"		1048594	1					
ANR	1049950	Callee	fo -> fill_trap		1048594	0					
ANR	1049951	PtrMemberAccess	fo -> fill_trap		1048594	0					
ANR	1049952	Identifier	fo		1048594	0					
ANR	1049953	Identifier	fill_trap		1048594	1					
ANR	1049954	ArgumentList	fo -> dev		1048594	1					
ANR	1049955	Argument	fo -> dev		1048594	0					
ANR	1049956	PtrMemberAccess	fo -> dev		1048594	0					
ANR	1049957	Identifier	fo		1048594	0					
ANR	1049958	Identifier	dev		1048594	1					
ANR	1049959	Argument	plbot		1048594	1					
ANR	1049960	Identifier	plbot		1048594	0					
ANR	1049961	Argument	prbot		1048594	2					
ANR	1049962	Identifier	prbot		1048594	0					
ANR	1049963	Argument	Yb		1048594	3					
ANR	1049964	Identifier	Yb		1048594	0					
ANR	1049965	Argument	Ya		1048594	4					
ANR	1049966	Identifier	Ya		1048594	0					
ANR	1049967	Argument	false		1048594	5					
ANR	1049968	Identifier	false		1048594	0					
ANR	1049969	Argument	fo -> pdevc		1048594	6					
ANR	1049970	PtrMemberAccess	fo -> pdevc		1048594	0					
ANR	1049971	Identifier	fo		1048594	0					
ANR	1049972	Identifier	pdevc		1048594	1					
ANR	1049973	Argument	fo -> lop		1048594	7					
ANR	1049974	PtrMemberAccess	fo -> lop		1048594	0					
ANR	1049975	Identifier	fo		1048594	0					
ANR	1049976	Identifier	lop		1048594	1					
ANR	1049977	IfStatement	if ( code < 0 )		1048594	1					
ANR	1049978	Condition	code < 0	1620:16:63129:63136	1048594	0	True				
ANR	1049979	RelationalExpression	code < 0		1048594	0		<			
ANR	1049980	Identifier	code		1048594	0					
ANR	1049981	PrimaryExpression	0		1048594	1					
ANR	1049982	ReturnStatement	return code ;	1621:16:63155:63166	1048594	1	True				
ANR	1049983	Identifier	code		1048594	0					
ANR	1049984	ExpressionStatement	Yac = Ya	1622:12:63180:63188	1048594	2	True				
ANR	1049985	AssignmentExpression	Yac = Ya		1048594	0		=			
ANR	1049986	Identifier	Yac		1048594	0					
ANR	1049987	Identifier	Ya		1048594	1					
ANR	1049988	ElseStatement	else		1048594	0					
ANR	1049989	ExpressionStatement	Yac = fo -> pbox -> p . y	1624:12:63217:63236	1048594	0	True				
ANR	1049990	AssignmentExpression	Yac = fo -> pbox -> p . y		1048594	0		=			
ANR	1049991	Identifier	Yac		1048594	0					
ANR	1049992	MemberAccess	fo -> pbox -> p . y		1048594	1					
ANR	1049993	PtrMemberAccess	fo -> pbox -> p		1048594	0					
ANR	1049994	PtrMemberAccess	fo -> pbox		1048594	0					
ANR	1049995	Identifier	fo		1048594	0					
ANR	1049996	Identifier	pbox		1048594	1					
ANR	1049997	Identifier	p		1048594	1					
ANR	1049998	Identifier	y		1048594	1					
ANR	1049999	IfStatement	if ( fo -> pbox -> q . y > Y1b )		1048594	2					
ANR	1050000	Condition	fo -> pbox -> q . y > Y1b	1625:12:63250:63268	1048594	0	True				
ANR	1050001	RelationalExpression	fo -> pbox -> q . y > Y1b		1048594	0		>			
ANR	1050002	MemberAccess	fo -> pbox -> q . y		1048594	0					
ANR	1050003	PtrMemberAccess	fo -> pbox -> q		1048594	0					
ANR	1050004	PtrMemberAccess	fo -> pbox		1048594	0					
ANR	1050005	Identifier	fo		1048594	0					
ANR	1050006	Identifier	pbox		1048594	1					
ANR	1050007	Identifier	q		1048594	1					
ANR	1050008	Identifier	y		1048594	1					
ANR	1050009	Identifier	Y1b		1048594	1					
ANR	1050010	CompoundStatement		190:33:8397:8397	1048594	1					
ANR	1050011	ExpressionStatement	"code = fo -> fill_trap ( fo -> dev , & slant_left , & slant_right , Yac , Y1b , false , fo -> pdevc , fo -> lop )"	1626:12:63285:63411	1048594	0	True				
ANR	1050012	AssignmentExpression	"code = fo -> fill_trap ( fo -> dev , & slant_left , & slant_right , Yac , Y1b , false , fo -> pdevc , fo -> lop )"		1048594	0		=			
ANR	1050013	Identifier	code		1048594	0					
ANR	1050014	CallExpression	"fo -> fill_trap ( fo -> dev , & slant_left , & slant_right , Yac , Y1b , false , fo -> pdevc , fo -> lop )"		1048594	1					
ANR	1050015	Callee	fo -> fill_trap		1048594	0					
ANR	1050016	PtrMemberAccess	fo -> fill_trap		1048594	0					
ANR	1050017	Identifier	fo		1048594	0					
ANR	1050018	Identifier	fill_trap		1048594	1					
ANR	1050019	ArgumentList	fo -> dev		1048594	1					
ANR	1050020	Argument	fo -> dev		1048594	0					
ANR	1050021	PtrMemberAccess	fo -> dev		1048594	0					
ANR	1050022	Identifier	fo		1048594	0					
ANR	1050023	Identifier	dev		1048594	1					
ANR	1050024	Argument	& slant_left		1048594	1					
ANR	1050025	UnaryOperationExpression	& slant_left		1048594	0					
ANR	1050026	UnaryOperator	&		1048594	0					
ANR	1050027	Identifier	slant_left		1048594	1					
ANR	1050028	Argument	& slant_right		1048594	2					
ANR	1050029	UnaryOperationExpression	& slant_right		1048594	0					
ANR	1050030	UnaryOperator	&		1048594	0					
ANR	1050031	Identifier	slant_right		1048594	1					
ANR	1050032	Argument	Yac		1048594	3					
ANR	1050033	Identifier	Yac		1048594	0					
ANR	1050034	Argument	Y1b		1048594	4					
ANR	1050035	Identifier	Y1b		1048594	0					
ANR	1050036	Argument	false		1048594	5					
ANR	1050037	Identifier	false		1048594	0					
ANR	1050038	Argument	fo -> pdevc		1048594	6					
ANR	1050039	PtrMemberAccess	fo -> pdevc		1048594	0					
ANR	1050040	Identifier	fo		1048594	0					
ANR	1050041	Identifier	pdevc		1048594	1					
ANR	1050042	Argument	fo -> lop		1048594	7					
ANR	1050043	PtrMemberAccess	fo -> lop		1048594	0					
ANR	1050044	Identifier	fo		1048594	0					
ANR	1050045	Identifier	lop		1048594	1					
ANR	1050046	IfStatement	if ( code < 0 )		1048594	1					
ANR	1050047	Condition	code < 0	1628:16:63429:63436	1048594	0	True				
ANR	1050048	RelationalExpression	code < 0		1048594	0		<			
ANR	1050049	Identifier	code		1048594	0					
ANR	1050050	PrimaryExpression	0		1048594	1					
ANR	1050051	ReturnStatement	return code ;	1629:16:63455:63466	1048594	1	True				
ANR	1050052	Identifier	code		1048594	0					
ANR	1050053	ExpressionStatement	"code = fo -> fill_trap ( fo -> dev , pltop , prtop , Y1b , Y1a , false , fo -> pdevc , fo -> lop )"	1630:12:63480:63593	1048594	2	True				
ANR	1050054	AssignmentExpression	"code = fo -> fill_trap ( fo -> dev , pltop , prtop , Y1b , Y1a , false , fo -> pdevc , fo -> lop )"		1048594	0		=			
ANR	1050055	Identifier	code		1048594	0					
ANR	1050056	CallExpression	"fo -> fill_trap ( fo -> dev , pltop , prtop , Y1b , Y1a , false , fo -> pdevc , fo -> lop )"		1048594	1					
ANR	1050057	Callee	fo -> fill_trap		1048594	0					
ANR	1050058	PtrMemberAccess	fo -> fill_trap		1048594	0					
ANR	1050059	Identifier	fo		1048594	0					
ANR	1050060	Identifier	fill_trap		1048594	1					
ANR	1050061	ArgumentList	fo -> dev		1048594	1					
ANR	1050062	Argument	fo -> dev		1048594	0					
ANR	1050063	PtrMemberAccess	fo -> dev		1048594	0					
ANR	1050064	Identifier	fo		1048594	0					
ANR	1050065	Identifier	dev		1048594	1					
ANR	1050066	Argument	pltop		1048594	1					
ANR	1050067	Identifier	pltop		1048594	0					
ANR	1050068	Argument	prtop		1048594	2					
ANR	1050069	Identifier	prtop		1048594	0					
ANR	1050070	Argument	Y1b		1048594	3					
ANR	1050071	Identifier	Y1b		1048594	0					
ANR	1050072	Argument	Y1a		1048594	4					
ANR	1050073	Identifier	Y1a		1048594	0					
ANR	1050074	Argument	false		1048594	5					
ANR	1050075	Identifier	false		1048594	0					
ANR	1050076	Argument	fo -> pdevc		1048594	6					
ANR	1050077	PtrMemberAccess	fo -> pdevc		1048594	0					
ANR	1050078	Identifier	fo		1048594	0					
ANR	1050079	Identifier	pdevc		1048594	1					
ANR	1050080	Argument	fo -> lop		1048594	7					
ANR	1050081	PtrMemberAccess	fo -> lop		1048594	0					
ANR	1050082	Identifier	fo		1048594	0					
ANR	1050083	Identifier	lop		1048594	1					
ANR	1050084	ElseStatement	else		1048594	0					
ANR	1050085	ExpressionStatement	"code = fo -> fill_trap ( fo -> dev , & slant_left , & slant_right , Yac , fo -> pbox -> q . y , false , fo -> pdevc , fo -> lop )"	1633:12:63622:63758	1048594	0	True				
ANR	1050086	AssignmentExpression	"code = fo -> fill_trap ( fo -> dev , & slant_left , & slant_right , Yac , fo -> pbox -> q . y , false , fo -> pdevc , fo -> lop )"		1048594	0		=			
ANR	1050087	Identifier	code		1048594	0					
ANR	1050088	CallExpression	"fo -> fill_trap ( fo -> dev , & slant_left , & slant_right , Yac , fo -> pbox -> q . y , false , fo -> pdevc , fo -> lop )"		1048594	1					
ANR	1050089	Callee	fo -> fill_trap		1048594	0					
ANR	1050090	PtrMemberAccess	fo -> fill_trap		1048594	0					
ANR	1050091	Identifier	fo		1048594	0					
ANR	1050092	Identifier	fill_trap		1048594	1					
ANR	1050093	ArgumentList	fo -> dev		1048594	1					
ANR	1050094	Argument	fo -> dev		1048594	0					
ANR	1050095	PtrMemberAccess	fo -> dev		1048594	0					
ANR	1050096	Identifier	fo		1048594	0					
ANR	1050097	Identifier	dev		1048594	1					
ANR	1050098	Argument	& slant_left		1048594	1					
ANR	1050099	UnaryOperationExpression	& slant_left		1048594	0					
ANR	1050100	UnaryOperator	&		1048594	0					
ANR	1050101	Identifier	slant_left		1048594	1					
ANR	1050102	Argument	& slant_right		1048594	2					
ANR	1050103	UnaryOperationExpression	& slant_right		1048594	0					
ANR	1050104	UnaryOperator	&		1048594	0					
ANR	1050105	Identifier	slant_right		1048594	1					
ANR	1050106	Argument	Yac		1048594	3					
ANR	1050107	Identifier	Yac		1048594	0					
ANR	1050108	Argument	fo -> pbox -> q . y		1048594	4					
ANR	1050109	MemberAccess	fo -> pbox -> q . y		1048594	0					
ANR	1050110	PtrMemberAccess	fo -> pbox -> q		1048594	0					
ANR	1050111	PtrMemberAccess	fo -> pbox		1048594	0					
ANR	1050112	Identifier	fo		1048594	0					
ANR	1050113	Identifier	pbox		1048594	1					
ANR	1050114	Identifier	q		1048594	1					
ANR	1050115	Identifier	y		1048594	1					
ANR	1050116	Argument	false		1048594	5					
ANR	1050117	Identifier	false		1048594	0					
ANR	1050118	Argument	fo -> pdevc		1048594	6					
ANR	1050119	PtrMemberAccess	fo -> pdevc		1048594	0					
ANR	1050120	Identifier	fo		1048594	0					
ANR	1050121	Identifier	pdevc		1048594	1					
ANR	1050122	Argument	fo -> lop		1048594	7					
ANR	1050123	PtrMemberAccess	fo -> lop		1048594	0					
ANR	1050124	Identifier	fo		1048594	0					
ANR	1050125	Identifier	lop		1048594	1					
ANR	1050126	ReturnStatement	return code ;	1636:4:63770:63781	1048594	19	True				
ANR	1050127	Identifier	code		1048594	0					
ANR	1050128	ReturnType	static int		1048594	1					
ANR	1050129	Identifier	fill_slant_adjust		1048594	2					
ANR	1050130	ParameterList	"const line_list * ll , const active_line * flp , const active_line * alp , fixed y , fixed y1"		1048594	3					
ANR	1050131	Parameter	const line_list * ll	1434:18:54777:54795	1048594	0	True				
ANR	1050132	ParameterType	const line_list *		1048594	0					
ANR	1050133	Identifier	ll		1048594	1					
ANR	1050134	Parameter	const active_line * flp	1435:8:54806:54827	1048594	1	True				
ANR	1050135	ParameterType	const active_line *		1048594	0					
ANR	1050136	Identifier	flp		1048594	1					
ANR	1050137	Parameter	const active_line * alp	1435:32:54830:54851	1048594	2	True				
ANR	1050138	ParameterType	const active_line *		1048594	0					
ANR	1050139	Identifier	alp		1048594	1					
ANR	1050140	Parameter	fixed y	1435:56:54854:54860	1048594	3	True				
ANR	1050141	ParameterType	fixed		1048594	0					
ANR	1050142	Identifier	y		1048594	1					
ANR	1050143	Parameter	fixed y1	1435:65:54863:54870	1048594	4	True				
ANR	1050144	ParameterType	fixed		1048594	0					
ANR	1050145	Identifier	y1		1048594	1					
ANR	1050146	CFGEntryNode	ENTRY		1048594		True				
ANR	1050147	CFGExitNode	EXIT		1048594		True				
ANR	1050148	Symbol	slant_right . end		1048594						
ANR	1050149	Symbol	fo -> pbox -> p . y		1048594						
ANR	1050150	Symbol	vert_left		1048594						
ANR	1050151	Symbol	fo -> adjust_below		1048594						
ANR	1050152	Symbol	plbot		1048594						
ANR	1050153	Symbol	vert_left . start . y		1048594						
ANR	1050154	Symbol	slant_left . end . x		1048594						
ANR	1050155	Symbol	* ll		1048594						
ANR	1050156	Symbol	vert_left . start . x		1048594						
ANR	1050157	Symbol	Ya		1048594						
ANR	1050158	Symbol	Yb		1048594						
ANR	1050159	Symbol	* flp		1048594						
ANR	1050160	Symbol	fo -> adjust_right		1048594						
ANR	1050161	Symbol	slant_left . end . y		1048594						
ANR	1050162	Symbol	iw		1048594						
ANR	1050163	Symbol	ix		1048594						
ANR	1050164	Symbol	alp -> start . y		1048594						
ANR	1050165	Symbol	alp -> start . x		1048594						
ANR	1050166	Symbol	& vert_right		1048594						
ANR	1050167	Symbol	* * fo		1048594						
ANR	1050168	Symbol	Yac		1048594						
ANR	1050169	Symbol	fo -> pbox		1048594						
ANR	1050170	Symbol	flp -> start		1048594						
ANR	1050171	Symbol	alp -> x_current		1048594						
ANR	1050172	Symbol	flp -> x_current		1048594						
ANR	1050173	Symbol	prtop		1048594						
ANR	1050174	Symbol	iYa		1048594						
ANR	1050175	Symbol	iY1b		1048594						
ANR	1050176	Symbol	iY1a		1048594						
ANR	1050177	Symbol	vert_right . start . x		1048594						
ANR	1050178	Symbol	vert_right . start . y		1048594						
ANR	1050179	Symbol	iYb		1048594						
ANR	1050180	Symbol	fo -> adjust_left		1048594						
ANR	1050181	Symbol	fixed_pixround		1048594						
ANR	1050182	Symbol	& slant_right		1048594						
ANR	1050183	Symbol	fo -> lop		1048594						
ANR	1050184	Symbol	Y1a		1048594						
ANR	1050185	Symbol	slant		1048594						
ANR	1050186	Symbol	flp		1048594						
ANR	1050187	Symbol	Y1b		1048594						
ANR	1050188	Symbol	* fo		1048594						
ANR	1050189	Symbol	flp -> start . x		1048594						
ANR	1050190	Symbol	flp -> start . y		1048594						
ANR	1050191	Symbol	slant_left . start		1048594						
ANR	1050192	Symbol	alp -> end . y		1048594						
ANR	1050193	Symbol	cx		1048594						
ANR	1050194	Symbol	alp -> end . x		1048594						
ANR	1050195	Symbol	cy		1048594						
ANR	1050196	Symbol	fo -> pdevc		1048594						
ANR	1050197	Symbol	x		1048594						
ANR	1050198	Symbol	y		1048594						
ANR	1050199	Symbol	ll		1048594						
ANR	1050200	Symbol	& slant_left		1048594						
ANR	1050201	Symbol	pltop		1048594						
ANR	1050202	Symbol	slant_left . end		1048594						
ANR	1050203	Symbol	fo -> pbox -> q . y		1048594						
ANR	1050204	Symbol	alp -> end		1048594						
ANR	1050205	Symbol	vert_right		1048594						
ANR	1050206	Symbol	vert_right . end		1048594						
ANR	1050207	Symbol	dy		1048594						
ANR	1050208	Symbol	flp -> x_next		1048594						
ANR	1050209	Symbol	alp		1048594						
ANR	1050210	Symbol	fixed2int_var_pixround		1048594						
ANR	1050211	Symbol	ll -> fo		1048594						
ANR	1050212	Symbol	gx_fill_rectangle_device_rop		1048594						
ANR	1050213	Symbol	fo -> dev		1048594						
ANR	1050214	Symbol	alp -> x_next		1048594						
ANR	1050215	Symbol	& vert_left		1048594						
ANR	1050216	Symbol	TRY_TO_EXTEND_TRAP		1048594						
ANR	1050217	Symbol	fo -> adjust_above		1048594						
ANR	1050218	Symbol	alp -> start		1048594						
ANR	1050219	Symbol	slant_right . end . x		1048594						
ANR	1050220	Symbol	slant_right . end . y		1048594						
ANR	1050221	Symbol	slant_left		1048594						
ANR	1050222	Symbol	code		1048594						
ANR	1050223	Symbol	slant_right		1048594						
ANR	1050224	Symbol	* fo -> pbox		1048594						
ANR	1050225	Symbol	slant_shallow		1048594						
ANR	1050226	Symbol	fo		1048594						
ANR	1050227	Symbol	vert_left . end		1048594						
ANR	1050228	Symbol	slant_right . start		1048594						
ANR	1050229	Symbol	flp -> end		1048594						
ANR	1050230	Symbol	y1		1048594						
ANR	1050231	Symbol	fixed_half		1048594						
ANR	1050232	Symbol	prbot		1048594						
ANR	1050233	Symbol	vert_left . end . y		1048594						
ANR	1050234	Symbol	vert_left . end . x		1048594						
ANR	1050235	Symbol	false		1048594						
ANR	1050236	Symbol	vert_left . start		1048594						
ANR	1050237	Symbol	* alp		1048594						
ANR	1050238	Symbol	vert_right . end . x		1048594						
ANR	1050239	Symbol	fo -> fill_trap		1048594						
ANR	1050240	Symbol	vert_right . start		1048594						
ANR	1050241	Symbol	vert_right . end . y		1048594						
ANR	1050242	Symbol	fo -> pbox -> p		1048594						
ANR	1050243	Symbol	fo -> pbox -> q		1048594						
ANR	1050244	Symbol	slant_left . start . x		1048594						
ANR	1050245	Symbol	flp -> end . x		1048594						
ANR	1050246	Symbol	slant_right . start . y		1048594						
ANR	1050247	Symbol	slant_left . start . y		1048594						
ANR	1050248	Symbol	flp -> end . y		1048594						
ANR	1050249	Symbol	slant_right . start . x		1048594						
ANR	1050250	Function	resort_x_line	1640:0:63854:64506							
ANR	1050251	FunctionDef	resort_x_line (active_line * alp)		1050250	0					
ANR	1050252	CompoundStatement		1642:0:63906:64506	1050250	0					
ANR	1050253	IdentifierDeclStatement	active_line * prev = alp -> prev ;	1643:4:63912:63941	1050250	0	True				
ANR	1050254	IdentifierDecl	* prev = alp -> prev		1050250	0					
ANR	1050255	IdentifierDeclType	active_line *		1050250	0					
ANR	1050256	Identifier	prev		1050250	1					
ANR	1050257	AssignmentExpression	* prev = alp -> prev		1050250	2		=			
ANR	1050258	Identifier	prev		1050250	0					
ANR	1050259	PtrMemberAccess	alp -> prev		1050250	1					
ANR	1050260	Identifier	alp		1050250	0					
ANR	1050261	Identifier	prev		1050250	1					
ANR	1050262	IdentifierDeclStatement	active_line * next = alp -> next ;	1644:4:63947:63976	1050250	1	True				
ANR	1050263	IdentifierDecl	* next = alp -> next		1050250	0					
ANR	1050264	IdentifierDeclType	active_line *		1050250	0					
ANR	1050265	Identifier	next		1050250	1					
ANR	1050266	AssignmentExpression	* next = alp -> next		1050250	2		=			
ANR	1050267	Identifier	next		1050250	0					
ANR	1050268	PtrMemberAccess	alp -> next		1050250	1					
ANR	1050269	Identifier	alp		1050250	0					
ANR	1050270	Identifier	next		1050250	1					
ANR	1050271	ExpressionStatement	prev -> next = next	1646:4:63983:64000	1050250	2	True				
ANR	1050272	AssignmentExpression	prev -> next = next		1050250	0		=			
ANR	1050273	PtrMemberAccess	prev -> next		1050250	0					
ANR	1050274	Identifier	prev		1050250	0					
ANR	1050275	Identifier	next		1050250	1					
ANR	1050276	Identifier	next		1050250	1					
ANR	1050277	IfStatement	if ( next )		1050250	3					
ANR	1050278	Condition	next	1647:8:64010:64013	1050250	0	True				
ANR	1050279	Identifier	next		1050250	0					
ANR	1050280	ExpressionStatement	next -> prev = prev	1648:8:64024:64041	1050250	1	True				
ANR	1050281	AssignmentExpression	next -> prev = prev		1050250	0		=			
ANR	1050282	PtrMemberAccess	next -> prev		1050250	0					
ANR	1050283	Identifier	next		1050250	0					
ANR	1050284	Identifier	prev		1050250	1					
ANR	1050285	Identifier	prev		1050250	1					
ANR	1050286	WhileStatement	"while ( x_order ( prev , alp ) > 0 )"		1050250	4					
ANR	1050287	Condition	"x_order ( prev , alp ) > 0"	1649:11:64054:64075	1050250	0	True				
ANR	1050288	RelationalExpression	"x_order ( prev , alp ) > 0"		1050250	0		>			
ANR	1050289	CallExpression	"x_order ( prev , alp )"		1050250	0					
ANR	1050290	Callee	x_order		1050250	0					
ANR	1050291	Identifier	x_order		1050250	0					
ANR	1050292	ArgumentList	prev		1050250	1					
ANR	1050293	Argument	prev		1050250	0					
ANR	1050294	Identifier	prev		1050250	0					
ANR	1050295	Argument	alp		1050250	1					
ANR	1050296	Identifier	alp		1050250	0					
ANR	1050297	PrimaryExpression	0		1050250	1					
ANR	1050298	CompoundStatement		8:35:171:171	1050250	1					
ANR	1050299	ExpressionStatement	"if_debug2 ( 'F' , ""[F]swap 0x%lx,0x%lx\\n"" , ( ulong ) alp , ( ulong ) prev )"	1650:8:64088:64173	1050250	0	True				
ANR	1050300	CallExpression	"if_debug2 ( 'F' , ""[F]swap 0x%lx,0x%lx\\n"" , ( ulong ) alp , ( ulong ) prev )"		1050250	0					
ANR	1050301	Callee	if_debug2		1050250	0					
ANR	1050302	Identifier	if_debug2		1050250	0					
ANR	1050303	ArgumentList	'F'		1050250	1					
ANR	1050304	Argument	'F'		1050250	0					
ANR	1050305	PrimaryExpression	'F'		1050250	0					
ANR	1050306	Argument	"""[F]swap 0x%lx,0x%lx\\n"""		1050250	1					
ANR	1050307	PrimaryExpression	"""[F]swap 0x%lx,0x%lx\\n"""		1050250	0					
ANR	1050308	Argument	( ulong ) alp		1050250	2					
ANR	1050309	CastExpression	( ulong ) alp		1050250	0					
ANR	1050310	CastTarget	ulong		1050250	0					
ANR	1050311	Identifier	alp		1050250	1					
ANR	1050312	Argument	( ulong ) prev		1050250	3					
ANR	1050313	CastExpression	( ulong ) prev		1050250	0					
ANR	1050314	CastTarget	ulong		1050250	0					
ANR	1050315	Identifier	prev		1050250	1					
ANR	1050316	ExpressionStatement	"next = prev , prev = prev -> prev"	1652:8:64183:64213	1050250	1	True				
ANR	1050317	Expression	"next = prev , prev = prev -> prev"		1050250	0					
ANR	1050318	AssignmentExpression	next = prev		1050250	0		=			
ANR	1050319	Identifier	next		1050250	0					
ANR	1050320	Identifier	prev		1050250	1					
ANR	1050321	AssignmentExpression	prev = prev -> prev		1050250	1		=			
ANR	1050322	Identifier	prev		1050250	0					
ANR	1050323	PtrMemberAccess	prev -> prev		1050250	1					
ANR	1050324	Identifier	prev		1050250	0					
ANR	1050325	Identifier	prev		1050250	1					
ANR	1050326	ExpressionStatement	alp -> next = next	1654:4:64225:64241	1050250	5	True				
ANR	1050327	AssignmentExpression	alp -> next = next		1050250	0		=			
ANR	1050328	PtrMemberAccess	alp -> next		1050250	0					
ANR	1050329	Identifier	alp		1050250	0					
ANR	1050330	Identifier	next		1050250	1					
ANR	1050331	Identifier	next		1050250	1					
ANR	1050332	ExpressionStatement	alp -> prev = prev	1655:4:64247:64263	1050250	6	True				
ANR	1050333	AssignmentExpression	alp -> prev = prev		1050250	0		=			
ANR	1050334	PtrMemberAccess	alp -> prev		1050250	0					
ANR	1050335	Identifier	alp		1050250	0					
ANR	1050336	Identifier	prev		1050250	1					
ANR	1050337	Identifier	prev		1050250	1					
ANR	1050338	IfStatement	if ( next )		1050250	7					
ANR	1050339	Condition	next	1657:8:64343:64346	1050250	0	True				
ANR	1050340	Identifier	next		1050250	0					
ANR	1050341	ExpressionStatement	next -> prev = alp	1658:8:64357:64373	1050250	1	True				
ANR	1050342	AssignmentExpression	next -> prev = alp		1050250	0		=			
ANR	1050343	PtrMemberAccess	next -> prev		1050250	0					
ANR	1050344	Identifier	next		1050250	0					
ANR	1050345	Identifier	prev		1050250	1					
ANR	1050346	Identifier	alp		1050250	1					
ANR	1050347	IfStatement	if ( prev )		1050250	8					
ANR	1050348	Condition	prev	1660:8:64474:64477	1050250	0	True				
ANR	1050349	Identifier	prev		1050250	0					
ANR	1050350	ExpressionStatement	prev -> next = alp	1661:8:64488:64504	1050250	1	True				
ANR	1050351	AssignmentExpression	prev -> next = alp		1050250	0		=			
ANR	1050352	PtrMemberAccess	prev -> next		1050250	0					
ANR	1050353	Identifier	prev		1050250	0					
ANR	1050354	Identifier	next		1050250	1					
ANR	1050355	Identifier	alp		1050250	1					
ANR	1050356	ReturnType	static inline void		1050250	1					
ANR	1050357	Identifier	resort_x_line		1050250	2					
ANR	1050358	ParameterList	active_line * alp		1050250	3					
ANR	1050359	Parameter	active_line * alp	1641:14:63887:63903	1050250	0	True				
ANR	1050360	ParameterType	active_line *		1050250	0					
ANR	1050361	Identifier	alp		1050250	1					
ANR	1050362	CFGEntryNode	ENTRY		1050250		True				
ANR	1050363	CFGExitNode	EXIT		1050250		True				
ANR	1050364	Symbol	* alp		1050250						
ANR	1050365	Symbol	next		1050250						
ANR	1050366	Symbol	prev -> next		1050250						
ANR	1050367	Symbol	alp -> prev		1050250						
ANR	1050368	Symbol	alp -> next		1050250						
ANR	1050369	Symbol	prev -> prev		1050250						
ANR	1050370	Symbol	alp		1050250						
ANR	1050371	Symbol	next -> prev		1050250						
ANR	1050372	Symbol	prev		1050250						
ANR	1050373	Symbol	* prev		1050250						
ANR	1050374	Symbol	* next		1050250						
ANR	1050375	Symbol	x_order		1050250						
ANR	1050376	Function	move_al_by_y	1665:0:64539:65562							
ANR	1050377	FunctionDef	"move_al_by_y (line_list * ll , fixed y1)"		1050376	0					
ANR	1050378	CompoundStatement		1667:0:64595:65562	1050376	0					
ANR	1050379	IdentifierDeclStatement	fixed x ;	1668:4:64601:64608	1050376	0	True				
ANR	1050380	IdentifierDecl	x		1050376	0					
ANR	1050381	IdentifierDeclType	fixed		1050376	0					
ANR	1050382	Identifier	x		1050376	1					
ANR	1050383	IdentifierDeclStatement	"active_line * alp , * nlp ;"	1669:4:64614:64636	1050376	1	True				
ANR	1050384	IdentifierDecl	* alp		1050376	0					
ANR	1050385	IdentifierDeclType	active_line *		1050376	0					
ANR	1050386	Identifier	alp		1050376	1					
ANR	1050387	IdentifierDecl	* nlp		1050376	1					
ANR	1050388	IdentifierDeclType	active_line *		1050376	0					
ANR	1050389	Identifier	nlp		1050376	1					
ANR	1050390	IdentifierDeclStatement	int code ;	1670:4:64642:64650	1050376	2	True				
ANR	1050391	IdentifierDecl	code		1050376	0					
ANR	1050392	IdentifierDeclType	int		1050376	0					
ANR	1050393	Identifier	code		1050376	1					
ANR	1050394	ForStatement	"for ( x = min_fixed , alp = ll -> x_list ; alp != 0 ; alp = nlp )"		1050376	3					
ANR	1050395	ForInit	"x = min_fixed , alp = ll -> x_list ;"	1672:9:64662:64693	1050376	0	True				
ANR	1050396	Expression	"x = min_fixed , alp = ll -> x_list"		1050376	0					
ANR	1050397	AssignmentExpression	x = min_fixed		1050376	0		=			
ANR	1050398	Identifier	x		1050376	0					
ANR	1050399	Identifier	min_fixed		1050376	1					
ANR	1050400	AssignmentExpression	alp = ll -> x_list		1050376	1		=			
ANR	1050401	Identifier	alp		1050376	0					
ANR	1050402	PtrMemberAccess	ll -> x_list		1050376	1					
ANR	1050403	Identifier	ll		1050376	0					
ANR	1050404	Identifier	x_list		1050376	1					
ANR	1050405	Condition	alp != 0	1672:42:64695:64702	1050376	1	True				
ANR	1050406	EqualityExpression	alp != 0		1050376	0		!=			
ANR	1050407	Identifier	alp		1050376	0					
ANR	1050408	PrimaryExpression	0		1050376	1					
ANR	1050409	AssignmentExpression	alp = nlp	1672:52:64705:64713	1050376	2	True	=			
ANR	1050410	Identifier	alp		1050376	0					
ANR	1050411	Identifier	nlp		1050376	1					
ANR	1050412	CompoundStatement		7:8:130:149	1050376	3					
ANR	1050413	IdentifierDeclStatement	bool notend = false ;	1673:8:64726:64745	1050376	0	True				
ANR	1050414	IdentifierDecl	notend = false		1050376	0					
ANR	1050415	IdentifierDeclType	bool		1050376	0					
ANR	1050416	Identifier	notend		1050376	1					
ANR	1050417	AssignmentExpression	notend = false		1050376	2		=			
ANR	1050418	Identifier	false		1050376	0					
ANR	1050419	Identifier	false		1050376	1					
ANR	1050420	ExpressionStatement	alp -> x_current = alp -> x_next	1674:8:64755:64783	1050376	1	True				
ANR	1050421	AssignmentExpression	alp -> x_current = alp -> x_next		1050376	0		=			
ANR	1050422	PtrMemberAccess	alp -> x_current		1050376	0					
ANR	1050423	Identifier	alp		1050376	0					
ANR	1050424	Identifier	x_current		1050376	1					
ANR	1050425	PtrMemberAccess	alp -> x_next		1050376	1					
ANR	1050426	Identifier	alp		1050376	0					
ANR	1050427	Identifier	x_next		1050376	1					
ANR	1050428	ExpressionStatement	nlp = alp -> next	1676:8:64794:64809	1050376	2	True				
ANR	1050429	AssignmentExpression	nlp = alp -> next		1050376	0		=			
ANR	1050430	Identifier	nlp		1050376	0					
ANR	1050431	PtrMemberAccess	alp -> next		1050376	1					
ANR	1050432	Identifier	alp		1050376	0					
ANR	1050433	Identifier	next		1050376	1					
ANR	1050434	IfStatement	if ( alp -> end . y == y1 && alp -> more_flattened )		1050376	3					
ANR	1050435	Condition	alp -> end . y == y1 && alp -> more_flattened	1677:12:64823:64861	1050376	0	True				
ANR	1050436	AndExpression	alp -> end . y == y1 && alp -> more_flattened		1050376	0		&&			
ANR	1050437	EqualityExpression	alp -> end . y == y1		1050376	0		==			
ANR	1050438	MemberAccess	alp -> end . y		1050376	0					
ANR	1050439	PtrMemberAccess	alp -> end		1050376	0					
ANR	1050440	Identifier	alp		1050376	0					
ANR	1050441	Identifier	end		1050376	1					
ANR	1050442	Identifier	y		1050376	1					
ANR	1050443	Identifier	y1		1050376	1					
ANR	1050444	PtrMemberAccess	alp -> more_flattened		1050376	1					
ANR	1050445	Identifier	alp		1050376	0					
ANR	1050446	Identifier	more_flattened		1050376	1					
ANR	1050447	CompoundStatement		11:53:268:268	1050376	1					
ANR	1050448	ExpressionStatement	"code = step_al ( alp , true )"	1678:12:64878:64903	1050376	0	True				
ANR	1050449	AssignmentExpression	"code = step_al ( alp , true )"		1050376	0		=			
ANR	1050450	Identifier	code		1050376	0					
ANR	1050451	CallExpression	"step_al ( alp , true )"		1050376	1					
ANR	1050452	Callee	step_al		1050376	0					
ANR	1050453	Identifier	step_al		1050376	0					
ANR	1050454	ArgumentList	alp		1050376	1					
ANR	1050455	Argument	alp		1050376	0					
ANR	1050456	Identifier	alp		1050376	0					
ANR	1050457	Argument	true		1050376	1					
ANR	1050458	Identifier	true		1050376	0					
ANR	1050459	IfStatement	if ( code < 0 )		1050376	1					
ANR	1050460	Condition	code < 0	1679:16:64921:64928	1050376	0	True				
ANR	1050461	RelationalExpression	code < 0		1050376	0		<			
ANR	1050462	Identifier	code		1050376	0					
ANR	1050463	PrimaryExpression	0		1050376	1					
ANR	1050464	ReturnStatement	return code ;	1680:16:64947:64958	1050376	1	True				
ANR	1050465	Identifier	code		1050376	0					
ANR	1050466	ExpressionStatement	alp -> x_current = alp -> x_next = alp -> start . x	1681:12:64972:65015	1050376	2	True				
ANR	1050467	AssignmentExpression	alp -> x_current = alp -> x_next = alp -> start . x		1050376	0		=			
ANR	1050468	PtrMemberAccess	alp -> x_current		1050376	0					
ANR	1050469	Identifier	alp		1050376	0					
ANR	1050470	Identifier	x_current		1050376	1					
ANR	1050471	AssignmentExpression	alp -> x_next = alp -> start . x		1050376	1		=			
ANR	1050472	PtrMemberAccess	alp -> x_next		1050376	0					
ANR	1050473	Identifier	alp		1050376	0					
ANR	1050474	Identifier	x_next		1050376	1					
ANR	1050475	MemberAccess	alp -> start . x		1050376	1					
ANR	1050476	PtrMemberAccess	alp -> start		1050376	0					
ANR	1050477	Identifier	alp		1050376	0					
ANR	1050478	Identifier	start		1050376	1					
ANR	1050479	Identifier	x		1050376	1					
ANR	1050480	ExpressionStatement	notend = ( alp -> end . y >= alp -> start . y )	1682:12:65029:65066	1050376	3	True				
ANR	1050481	AssignmentExpression	notend = ( alp -> end . y >= alp -> start . y )		1050376	0		=			
ANR	1050482	Identifier	notend		1050376	0					
ANR	1050483	RelationalExpression	alp -> end . y >= alp -> start . y		1050376	1		>=			
ANR	1050484	MemberAccess	alp -> end . y		1050376	0					
ANR	1050485	PtrMemberAccess	alp -> end		1050376	0					
ANR	1050486	Identifier	alp		1050376	0					
ANR	1050487	Identifier	end		1050376	1					
ANR	1050488	Identifier	y		1050376	1					
ANR	1050489	MemberAccess	alp -> start . y		1050376	1					
ANR	1050490	PtrMemberAccess	alp -> start		1050376	0					
ANR	1050491	Identifier	alp		1050376	0					
ANR	1050492	Identifier	start		1050376	1					
ANR	1050493	Identifier	y		1050376	1					
ANR	1050494	IfStatement	if ( alp -> end . y > y1 || notend )		1050376	4					
ANR	1050495	Condition	alp -> end . y > y1 || notend	1684:12:65090:65114	1050376	0	True				
ANR	1050496	OrExpression	alp -> end . y > y1 || notend		1050376	0		||			
ANR	1050497	RelationalExpression	alp -> end . y > y1		1050376	0		>			
ANR	1050498	MemberAccess	alp -> end . y		1050376	0					
ANR	1050499	PtrMemberAccess	alp -> end		1050376	0					
ANR	1050500	Identifier	alp		1050376	0					
ANR	1050501	Identifier	end		1050376	1					
ANR	1050502	Identifier	y		1050376	1					
ANR	1050503	Identifier	y1		1050376	1					
ANR	1050504	Identifier	notend		1050376	1					
ANR	1050505	CompoundStatement		18:39:521:521	1050376	1					
ANR	1050506	IfStatement	if ( alp -> x_next <= x )		1050376	0					
ANR	1050507	Condition	alp -> x_next <= x	1685:16:65135:65150	1050376	0	True				
ANR	1050508	RelationalExpression	alp -> x_next <= x		1050376	0		<=			
ANR	1050509	PtrMemberAccess	alp -> x_next		1050376	0					
ANR	1050510	Identifier	alp		1050376	0					
ANR	1050511	Identifier	x_next		1050376	1					
ANR	1050512	Identifier	x		1050376	1					
ANR	1050513	ExpressionStatement	resort_x_line ( alp )	1686:16:65169:65187	1050376	1	True				
ANR	1050514	CallExpression	resort_x_line ( alp )		1050376	0					
ANR	1050515	Callee	resort_x_line		1050376	0					
ANR	1050516	Identifier	resort_x_line		1050376	0					
ANR	1050517	ArgumentList	alp		1050376	1					
ANR	1050518	Argument	alp		1050376	0					
ANR	1050519	Identifier	alp		1050376	0					
ANR	1050520	ElseStatement	else		1050376	0					
ANR	1050521	ExpressionStatement	x = alp -> x_next	1688:16:65222:65237	1050376	0	True				
ANR	1050522	AssignmentExpression	x = alp -> x_next		1050376	0		=			
ANR	1050523	Identifier	x		1050376	0					
ANR	1050524	PtrMemberAccess	alp -> x_next		1050376	1					
ANR	1050525	Identifier	alp		1050376	0					
ANR	1050526	Identifier	x_next		1050376	1					
ANR	1050527	ElseStatement	else		1050376	0					
ANR	1050528	CompoundStatement		23:15:658:658	1050376	0					
ANR	1050529	ExpressionStatement	"code = end_x_line ( alp , ll , true )"	1690:12:65268:65300	1050376	0	True				
ANR	1050530	AssignmentExpression	"code = end_x_line ( alp , ll , true )"		1050376	0		=			
ANR	1050531	Identifier	code		1050376	0					
ANR	1050532	CallExpression	"end_x_line ( alp , ll , true )"		1050376	1					
ANR	1050533	Callee	end_x_line		1050376	0					
ANR	1050534	Identifier	end_x_line		1050376	0					
ANR	1050535	ArgumentList	alp		1050376	1					
ANR	1050536	Argument	alp		1050376	0					
ANR	1050537	Identifier	alp		1050376	0					
ANR	1050538	Argument	ll		1050376	1					
ANR	1050539	Identifier	ll		1050376	0					
ANR	1050540	Argument	true		1050376	2					
ANR	1050541	Identifier	true		1050376	0					
ANR	1050542	IfStatement	if ( code < 0 )		1050376	1					
ANR	1050543	Condition	code < 0	1691:16:65318:65325	1050376	0	True				
ANR	1050544	RelationalExpression	code < 0		1050376	0		<			
ANR	1050545	Identifier	code		1050376	0					
ANR	1050546	PrimaryExpression	0		1050376	1					
ANR	1050547	ReturnStatement	return code ;	1692:16:65344:65355	1050376	1	True				
ANR	1050548	Identifier	code		1050376	0					
ANR	1050549	IfStatement	if ( ! code )		1050376	2					
ANR	1050550	Condition	! code	1693:16:65373:65377	1050376	0	True				
ANR	1050551	UnaryOperationExpression	! code		1050376	0					
ANR	1050552	UnaryOperator	!		1050376	0					
ANR	1050553	Identifier	code		1050376	1					
ANR	1050554	CompoundStatement		27:23:784:784	1050376	1					
ANR	1050555	IfStatement	if ( alp -> x_next <= x )		1050376	0					
ANR	1050556	Condition	alp -> x_next <= x	1694:20:65402:65417	1050376	0	True				
ANR	1050557	RelationalExpression	alp -> x_next <= x		1050376	0		<=			
ANR	1050558	PtrMemberAccess	alp -> x_next		1050376	0					
ANR	1050559	Identifier	alp		1050376	0					
ANR	1050560	Identifier	x_next		1050376	1					
ANR	1050561	Identifier	x		1050376	1					
ANR	1050562	ExpressionStatement	resort_x_line ( alp )	1695:20:65440:65458	1050376	1	True				
ANR	1050563	CallExpression	resort_x_line ( alp )		1050376	0					
ANR	1050564	Callee	resort_x_line		1050376	0					
ANR	1050565	Identifier	resort_x_line		1050376	0					
ANR	1050566	ArgumentList	alp		1050376	1					
ANR	1050567	Argument	alp		1050376	0					
ANR	1050568	Identifier	alp		1050376	0					
ANR	1050569	ElseStatement	else		1050376	0					
ANR	1050570	ExpressionStatement	x = alp -> x_next	1697:20:65501:65516	1050376	0	True				
ANR	1050571	AssignmentExpression	x = alp -> x_next		1050376	0		=			
ANR	1050572	Identifier	x		1050376	0					
ANR	1050573	PtrMemberAccess	alp -> x_next		1050376	1					
ANR	1050574	Identifier	alp		1050376	0					
ANR	1050575	Identifier	x_next		1050376	1					
ANR	1050576	ReturnStatement	return 0 ;	1701:4:65552:65560	1050376	4	True				
ANR	1050577	PrimaryExpression	0		1050376	0					
ANR	1050578	ReturnType	static inline int		1050376	1					
ANR	1050579	Identifier	move_al_by_y		1050376	2					
ANR	1050580	ParameterList	"line_list * ll , fixed y1"		1050376	3					
ANR	1050581	Parameter	line_list * ll	1666:13:64570:64582	1050376	0	True				
ANR	1050582	ParameterType	line_list *		1050376	0					
ANR	1050583	Identifier	ll		1050376	1					
ANR	1050584	Parameter	fixed y1	1666:28:64585:64592	1050376	1	True				
ANR	1050585	ParameterType	fixed		1050376	0					
ANR	1050586	Identifier	y1		1050376	1					
ANR	1050587	CFGEntryNode	ENTRY		1050376		True				
ANR	1050588	CFGExitNode	EXIT		1050376		True				
ANR	1050589	Symbol	ll		1050376						
ANR	1050590	Symbol	code		1050376						
ANR	1050591	Symbol	alp		1050376						
ANR	1050592	Symbol	* ll		1050376						
ANR	1050593	Symbol	alp -> end		1050376						
ANR	1050594	Symbol	end_x_line		1050376						
ANR	1050595	Symbol	alp -> x_current		1050376						
ANR	1050596	Symbol	false		1050376						
ANR	1050597	Symbol	notend		1050376						
ANR	1050598	Symbol	min_fixed		1050376						
ANR	1050599	Symbol	* alp		1050376						
ANR	1050600	Symbol	alp -> x_next		1050376						
ANR	1050601	Symbol	ll -> x_list		1050376						
ANR	1050602	Symbol	alp -> start . y		1050376						
ANR	1050603	Symbol	nlp		1050376						
ANR	1050604	Symbol	alp -> next		1050376						
ANR	1050605	Symbol	alp -> start . x		1050376						
ANR	1050606	Symbol	alp -> more_flattened		1050376						
ANR	1050607	Symbol	alp -> end . y		1050376						
ANR	1050608	Symbol	y1		1050376						
ANR	1050609	Symbol	x		1050376						
ANR	1050610	Symbol	true		1050376						
ANR	1050611	Symbol	alp -> start		1050376						
ANR	1050612	Symbol	step_al		1050376						
ANR	1050613	Function	process_h_segments	1705:0:65609:65986							
ANR	1050614	FunctionDef	"process_h_segments (line_list * ll , fixed y)"		1050613	0					
ANR	1050615	CompoundStatement		1707:0:65670:65986	1050613	0					
ANR	1050616	IdentifierDeclStatement	"active_line * alp , * nlp ;"	1708:4:65676:65698	1050613	0	True				
ANR	1050617	IdentifierDecl	* alp		1050613	0					
ANR	1050618	IdentifierDeclType	active_line *		1050613	0					
ANR	1050619	Identifier	alp		1050613	1					
ANR	1050620	IdentifierDecl	* nlp		1050613	1					
ANR	1050621	IdentifierDeclType	active_line *		1050613	0					
ANR	1050622	Identifier	nlp		1050613	1					
ANR	1050623	IdentifierDeclStatement	int inserted = 0 ;	1709:4:65704:65720	1050613	1	True				
ANR	1050624	IdentifierDecl	inserted = 0		1050613	0					
ANR	1050625	IdentifierDeclType	int		1050613	0					
ANR	1050626	Identifier	inserted		1050613	1					
ANR	1050627	AssignmentExpression	inserted = 0		1050613	2		=			
ANR	1050628	Identifier	inserted		1050613	0					
ANR	1050629	PrimaryExpression	0		1050613	1					
ANR	1050630	ForStatement	for ( alp = ll -> x_list ; alp != 0 ; alp = nlp )		1050613	2					
ANR	1050631	ForInit	alp = ll -> x_list ;	1711:9:65732:65748	1050613	0	True				
ANR	1050632	AssignmentExpression	alp = ll -> x_list		1050613	0		=			
ANR	1050633	Identifier	alp		1050613	0					
ANR	1050634	PtrMemberAccess	ll -> x_list		1050613	1					
ANR	1050635	Identifier	ll		1050613	0					
ANR	1050636	Identifier	x_list		1050613	1					
ANR	1050637	Condition	alp != 0	1711:27:65750:65757	1050613	1	True				
ANR	1050638	EqualityExpression	alp != 0		1050613	0		!=			
ANR	1050639	Identifier	alp		1050613	0					
ANR	1050640	PrimaryExpression	0		1050613	1					
ANR	1050641	AssignmentExpression	alp = nlp	1711:37:65760:65768	1050613	2	True	=			
ANR	1050642	Identifier	alp		1050613	0					
ANR	1050643	Identifier	nlp		1050613	1					
ANR	1050644	CompoundStatement		5:48:100:100	1050613	3					
ANR	1050645	ExpressionStatement	nlp = alp -> next	1712:8:65781:65796	1050613	0	True				
ANR	1050646	AssignmentExpression	nlp = alp -> next		1050613	0		=			
ANR	1050647	Identifier	nlp		1050613	0					
ANR	1050648	PtrMemberAccess	alp -> next		1050613	1					
ANR	1050649	Identifier	alp		1050613	0					
ANR	1050650	Identifier	next		1050613	1					
ANR	1050651	IfStatement	if ( alp -> start . y == y && alp -> end . y == y )		1050613	1					
ANR	1050652	Condition	alp -> start . y == y && alp -> end . y == y	1713:12:65810:65845	1050613	0	True				
ANR	1050653	AndExpression	alp -> start . y == y && alp -> end . y == y		1050613	0		&&			
ANR	1050654	EqualityExpression	alp -> start . y == y		1050613	0		==			
ANR	1050655	MemberAccess	alp -> start . y		1050613	0					
ANR	1050656	PtrMemberAccess	alp -> start		1050613	0					
ANR	1050657	Identifier	alp		1050613	0					
ANR	1050658	Identifier	start		1050613	1					
ANR	1050659	Identifier	y		1050613	1					
ANR	1050660	Identifier	y		1050613	1					
ANR	1050661	EqualityExpression	alp -> end . y == y		1050613	1		==			
ANR	1050662	MemberAccess	alp -> end . y		1050613	0					
ANR	1050663	PtrMemberAccess	alp -> end		1050613	0					
ANR	1050664	Identifier	alp		1050613	0					
ANR	1050665	Identifier	end		1050613	1					
ANR	1050666	Identifier	y		1050613	1					
ANR	1050667	Identifier	y		1050613	1					
ANR	1050668	CompoundStatement		7:50:177:177	1050613	1					
ANR	1050669	ExpressionStatement	inserted = 1	1714:12:65862:65874	1050613	0	True				
ANR	1050670	AssignmentExpression	inserted = 1		1050613	0		=			
ANR	1050671	Identifier	inserted		1050613	0					
ANR	1050672	PrimaryExpression	1		1050613	1					
ANR	1050673	ReturnStatement	return inserted ;	1717:4:65896:65911	1050613	3	True				
ANR	1050674	Identifier	inserted		1050613	0					
ANR	1050675	ReturnType	static inline int		1050613	1					
ANR	1050676	Identifier	process_h_segments		1050613	2					
ANR	1050677	ParameterList	"line_list * ll , fixed y"		1050613	3					
ANR	1050678	Parameter	line_list * ll	1706:19:65646:65658	1050613	0	True				
ANR	1050679	ParameterType	line_list *		1050613	0					
ANR	1050680	Identifier	ll		1050613	1					
ANR	1050681	Parameter	fixed y	1706:34:65661:65667	1050613	1	True				
ANR	1050682	ParameterType	fixed		1050613	0					
ANR	1050683	Identifier	y		1050613	1					
ANR	1050684	CFGEntryNode	ENTRY		1050613		True				
ANR	1050685	CFGExitNode	EXIT		1050613		True				
ANR	1050686	Symbol	ll		1050613						
ANR	1050687	Symbol	alp		1050613						
ANR	1050688	Symbol	* ll		1050613						
ANR	1050689	Symbol	alp -> end		1050613						
ANR	1050690	Symbol	* alp		1050613						
ANR	1050691	Symbol	ll -> x_list		1050613						
ANR	1050692	Symbol	alp -> start . y		1050613						
ANR	1050693	Symbol	nlp		1050613						
ANR	1050694	Symbol	inserted		1050613						
ANR	1050695	Symbol	alp -> next		1050613						
ANR	1050696	Symbol	alp -> end . y		1050613						
ANR	1050697	Symbol	y		1050613						
ANR	1050698	Symbol	alp -> start		1050613						
ANR	1050699	Function	loop_fill_trap_np	1721:0:65989:66377							
ANR	1050700	FunctionDef	"loop_fill_trap_np (const line_list * ll , const gs_fixed_edge * le , const gs_fixed_edge * re , fixed y , fixed y1)"		1050699	0					
ANR	1050701	CompoundStatement		1723:0:66115:66377	1050699	0					
ANR	1050702	Statement	const	1724:4:66121:66125	1050699	0	True				
ANR	1050703	Statement	fill_options	1724:10:66127:66138	1050699	1	True				
ANR	1050704	Statement	*	1724:23:66140:66140	1050699	2	True				
ANR	1050705	Statement	const	1724:25:66142:66146	1050699	3	True				
ANR	1050706	ExpressionStatement	fo = ll -> fo	1724:31:66148:66159	1050699	4	True				
ANR	1050707	AssignmentExpression	fo = ll -> fo		1050699	0		=			
ANR	1050708	Identifier	fo		1050699	0					
ANR	1050709	PtrMemberAccess	ll -> fo		1050699	1					
ANR	1050710	Identifier	ll		1050699	0					
ANR	1050711	Identifier	fo		1050699	1					
ANR	1050712	IdentifierDeclStatement	"fixed ybot = max ( y , fo -> pbox -> p . y ) ;"	1725:4:66165:66199	1050699	5	True				
ANR	1050713	IdentifierDecl	"ybot = max ( y , fo -> pbox -> p . y )"		1050699	0					
ANR	1050714	IdentifierDeclType	fixed		1050699	0					
ANR	1050715	Identifier	ybot		1050699	1					
ANR	1050716	AssignmentExpression	"ybot = max ( y , fo -> pbox -> p . y )"		1050699	2		=			
ANR	1050717	Identifier	ybot		1050699	0					
ANR	1050718	CallExpression	"max ( y , fo -> pbox -> p . y )"		1050699	1					
ANR	1050719	Callee	max		1050699	0					
ANR	1050720	Identifier	max		1050699	0					
ANR	1050721	ArgumentList	y		1050699	1					
ANR	1050722	Argument	y		1050699	0					
ANR	1050723	Identifier	y		1050699	0					
ANR	1050724	Argument	fo -> pbox -> p . y		1050699	1					
ANR	1050725	MemberAccess	fo -> pbox -> p . y		1050699	0					
ANR	1050726	PtrMemberAccess	fo -> pbox -> p		1050699	0					
ANR	1050727	PtrMemberAccess	fo -> pbox		1050699	0					
ANR	1050728	Identifier	fo		1050699	0					
ANR	1050729	Identifier	pbox		1050699	1					
ANR	1050730	Identifier	p		1050699	1					
ANR	1050731	Identifier	y		1050699	1					
ANR	1050732	IdentifierDeclStatement	"fixed ytop = min ( y1 , fo -> pbox -> q . y ) ;"	1726:4:66205:66240	1050699	6	True				
ANR	1050733	IdentifierDecl	"ytop = min ( y1 , fo -> pbox -> q . y )"		1050699	0					
ANR	1050734	IdentifierDeclType	fixed		1050699	0					
ANR	1050735	Identifier	ytop		1050699	1					
ANR	1050736	AssignmentExpression	"ytop = min ( y1 , fo -> pbox -> q . y )"		1050699	2		=			
ANR	1050737	Identifier	ytop		1050699	0					
ANR	1050738	CallExpression	"min ( y1 , fo -> pbox -> q . y )"		1050699	1					
ANR	1050739	Callee	min		1050699	0					
ANR	1050740	Identifier	min		1050699	0					
ANR	1050741	ArgumentList	y1		1050699	1					
ANR	1050742	Argument	y1		1050699	0					
ANR	1050743	Identifier	y1		1050699	0					
ANR	1050744	Argument	fo -> pbox -> q . y		1050699	1					
ANR	1050745	MemberAccess	fo -> pbox -> q . y		1050699	0					
ANR	1050746	PtrMemberAccess	fo -> pbox -> q		1050699	0					
ANR	1050747	PtrMemberAccess	fo -> pbox		1050699	0					
ANR	1050748	Identifier	fo		1050699	0					
ANR	1050749	Identifier	pbox		1050699	1					
ANR	1050750	Identifier	q		1050699	1					
ANR	1050751	Identifier	y		1050699	1					
ANR	1050752	IfStatement	if ( ybot >= ytop )		1050699	7					
ANR	1050753	Condition	ybot >= ytop	1728:8:66251:66262	1050699	0	True				
ANR	1050754	RelationalExpression	ybot >= ytop		1050699	0		>=			
ANR	1050755	Identifier	ybot		1050699	0					
ANR	1050756	Identifier	ytop		1050699	1					
ANR	1050757	ReturnStatement	return 0 ;	1729:8:66273:66281	1050699	1	True				
ANR	1050758	PrimaryExpression	0		1050699	0					
ANR	1050759	ReturnStatement	"return ( * fo -> fill_trap ) ( fo -> dev , le , re , ybot , ytop , false , fo -> pdevc , fo -> lop ) ;"	1730:4:66287:66375	1050699	8	True				
ANR	1050760	CallExpression	"( * fo -> fill_trap ) ( fo -> dev , le , re , ybot , ytop , false , fo -> pdevc , fo -> lop )"		1050699	0					
ANR	1050761	Callee	* fo -> fill_trap		1050699	0					
ANR	1050762	UnaryOperationExpression	* fo -> fill_trap		1050699	0					
ANR	1050763	UnaryOperator	*		1050699	0					
ANR	1050764	PtrMemberAccess	fo -> fill_trap		1050699	1					
ANR	1050765	Identifier	fo		1050699	0					
ANR	1050766	Identifier	fill_trap		1050699	1					
ANR	1050767	ArgumentList	fo -> dev		1050699	1					
ANR	1050768	Argument	fo -> dev		1050699	0					
ANR	1050769	PtrMemberAccess	fo -> dev		1050699	0					
ANR	1050770	Identifier	fo		1050699	0					
ANR	1050771	Identifier	dev		1050699	1					
ANR	1050772	Argument	le		1050699	1					
ANR	1050773	Identifier	le		1050699	0					
ANR	1050774	Argument	re		1050699	2					
ANR	1050775	Identifier	re		1050699	0					
ANR	1050776	Argument	ybot		1050699	3					
ANR	1050777	Identifier	ybot		1050699	0					
ANR	1050778	Argument	ytop		1050699	4					
ANR	1050779	Identifier	ytop		1050699	0					
ANR	1050780	Argument	false		1050699	5					
ANR	1050781	Identifier	false		1050699	0					
ANR	1050782	Argument	fo -> pdevc		1050699	6					
ANR	1050783	PtrMemberAccess	fo -> pdevc		1050699	0					
ANR	1050784	Identifier	fo		1050699	0					
ANR	1050785	Identifier	pdevc		1050699	1					
ANR	1050786	Argument	fo -> lop		1050699	7					
ANR	1050787	PtrMemberAccess	fo -> lop		1050699	0					
ANR	1050788	Identifier	fo		1050699	0					
ANR	1050789	Identifier	lop		1050699	1					
ANR	1050790	ReturnType	static inline int		1050699	1					
ANR	1050791	Identifier	loop_fill_trap_np		1050699	2					
ANR	1050792	ParameterList	"const line_list * ll , const gs_fixed_edge * le , const gs_fixed_edge * re , fixed y , fixed y1"		1050699	3					
ANR	1050793	Parameter	const line_list * ll	1722:18:66025:66043	1050699	0	True				
ANR	1050794	ParameterType	const line_list *		1050699	0					
ANR	1050795	Identifier	ll		1050699	1					
ANR	1050796	Parameter	const gs_fixed_edge * le	1722:39:66046:66068	1050699	1	True				
ANR	1050797	ParameterType	const gs_fixed_edge *		1050699	0					
ANR	1050798	Identifier	le		1050699	1					
ANR	1050799	Parameter	const gs_fixed_edge * re	1722:64:66071:66093	1050699	2	True				
ANR	1050800	ParameterType	const gs_fixed_edge *		1050699	0					
ANR	1050801	Identifier	re		1050699	1					
ANR	1050802	Parameter	fixed y	1722:89:66096:66102	1050699	3	True				
ANR	1050803	ParameterType	fixed		1050699	0					
ANR	1050804	Identifier	y		1050699	1					
ANR	1050805	Parameter	fixed y1	1722:98:66105:66112	1050699	4	True				
ANR	1050806	ParameterType	fixed		1050699	0					
ANR	1050807	Identifier	y1		1050699	1					
ANR	1050808	CFGEntryNode	ENTRY		1050699		True				
ANR	1050809	CFGExitNode	EXIT		1050699		True				
ANR	1050810	Symbol	ll		1050699						
ANR	1050811	Symbol	fo -> pbox		1050699						
ANR	1050812	Symbol	ytop		1050699						
ANR	1050813	Symbol	* fo -> pbox		1050699						
ANR	1050814	Symbol	fo -> pbox -> q . y		1050699						
ANR	1050815	Symbol	fo		1050699						
ANR	1050816	Symbol	fo -> pbox -> p . y		1050699						
ANR	1050817	Symbol	min		1050699						
ANR	1050818	Symbol	ybot		1050699						
ANR	1050819	Symbol	y1		1050699						
ANR	1050820	Symbol	* fo -> fill_trap		1050699						
ANR	1050821	Symbol	* ll		1050699						
ANR	1050822	Symbol	max		1050699						
ANR	1050823	Symbol	fo -> lop		1050699						
ANR	1050824	Symbol	false		1050699						
ANR	1050825	Symbol	ll -> fo		1050699						
ANR	1050826	Symbol	* fo		1050699						
ANR	1050827	Symbol	fo -> dev		1050699						
ANR	1050828	Symbol	fo -> fill_trap		1050699						
ANR	1050829	Symbol	re		1050699						
ANR	1050830	Symbol	fo -> pbox -> p		1050699						
ANR	1050831	Symbol	fo -> pdevc		1050699						
ANR	1050832	Symbol	* * fo		1050699						
ANR	1050833	Symbol	fo -> pbox -> q		1050699						
ANR	1050834	Symbol	le		1050699						
ANR	1050835	Symbol	y		1050699						
ANR	1050836	Function	intersect	1752:0:67025:69480							
ANR	1050837	FunctionDef	"intersect (active_line * endp , active_line * alp , fixed y , fixed y1 , fixed * p_y_new)"		1050836	0					
ANR	1050838	CompoundStatement		1754:0:67119:69480	1050836	0					
ANR	1050839	IdentifierDeclStatement	"fixed y_new , dy ;"	1755:4:67125:67140	1050836	0	True				
ANR	1050840	IdentifierDecl	y_new		1050836	0					
ANR	1050841	IdentifierDeclType	fixed		1050836	0					
ANR	1050842	Identifier	y_new		1050836	1					
ANR	1050843	IdentifierDecl	dy		1050836	1					
ANR	1050844	IdentifierDeclType	fixed		1050836	0					
ANR	1050845	Identifier	dy		1050836	1					
ANR	1050846	IdentifierDeclStatement	fixed dx_old = alp -> x_current - endp -> x_current ;	1756:4:67146:67193	1050836	1	True				
ANR	1050847	IdentifierDecl	dx_old = alp -> x_current - endp -> x_current		1050836	0					
ANR	1050848	IdentifierDeclType	fixed		1050836	0					
ANR	1050849	Identifier	dx_old		1050836	1					
ANR	1050850	AssignmentExpression	dx_old = alp -> x_current - endp -> x_current		1050836	2		=			
ANR	1050851	Identifier	dx_old		1050836	0					
ANR	1050852	AdditiveExpression	alp -> x_current - endp -> x_current		1050836	1		-			
ANR	1050853	PtrMemberAccess	alp -> x_current		1050836	0					
ANR	1050854	Identifier	alp		1050836	0					
ANR	1050855	Identifier	x_current		1050836	1					
ANR	1050856	PtrMemberAccess	endp -> x_current		1050836	1					
ANR	1050857	Identifier	endp		1050836	0					
ANR	1050858	Identifier	x_current		1050836	1					
ANR	1050859	IdentifierDeclStatement	fixed dx_den = dx_old + endp -> x_next - alp -> x_next ;	1757:4:67199:67249	1050836	2	True				
ANR	1050860	IdentifierDecl	dx_den = dx_old + endp -> x_next - alp -> x_next		1050836	0					
ANR	1050861	IdentifierDeclType	fixed		1050836	0					
ANR	1050862	Identifier	dx_den		1050836	1					
ANR	1050863	AssignmentExpression	dx_den = dx_old + endp -> x_next - alp -> x_next		1050836	2		=			
ANR	1050864	Identifier	dx_den		1050836	0					
ANR	1050865	AdditiveExpression	dx_old + endp -> x_next - alp -> x_next		1050836	1		+			
ANR	1050866	Identifier	dx_old		1050836	0					
ANR	1050867	AdditiveExpression	endp -> x_next - alp -> x_next		1050836	1		-			
ANR	1050868	PtrMemberAccess	endp -> x_next		1050836	0					
ANR	1050869	Identifier	endp		1050836	0					
ANR	1050870	Identifier	x_next		1050836	1					
ANR	1050871	PtrMemberAccess	alp -> x_next		1050836	1					
ANR	1050872	Identifier	alp		1050836	0					
ANR	1050873	Identifier	x_next		1050836	1					
ANR	1050874	IfStatement	if ( dx_den <= dx_old || dx_den == 0 )		1050836	3					
ANR	1050875	Condition	dx_den <= dx_old || dx_den == 0	1759:8:67260:67290	1050836	0	True				
ANR	1050876	OrExpression	dx_den <= dx_old || dx_den == 0		1050836	0		||			
ANR	1050877	RelationalExpression	dx_den <= dx_old		1050836	0		<=			
ANR	1050878	Identifier	dx_den		1050836	0					
ANR	1050879	Identifier	dx_old		1050836	1					
ANR	1050880	EqualityExpression	dx_den == 0		1050836	1		==			
ANR	1050881	Identifier	dx_den		1050836	0					
ANR	1050882	PrimaryExpression	0		1050836	1					
ANR	1050883	ReturnStatement	return false ;	1760:8:67301:67313	1050836	1	True				
ANR	1050884	Identifier	false		1050836	0					
ANR	1050885	ExpressionStatement	dy = y1 - y	1761:4:67354:67365	1050836	4	True				
ANR	1050886	AssignmentExpression	dy = y1 - y		1050836	0		=			
ANR	1050887	Identifier	dy		1050836	0					
ANR	1050888	AdditiveExpression	y1 - y		1050836	1		-			
ANR	1050889	Identifier	y1		1050836	0					
ANR	1050890	Identifier	y		1050836	1					
ANR	1050891	ExpressionStatement	"if_debug3 ( 'F' , ""[F]cross: dy=%g, dx_old=%g, dx_new=%g\\n"" , fixed2float ( dy ) , fixed2float ( dx_old ) , fixed2float ( dx_den - dx_old ) )"	1762:4:67371:67524	1050836	5	True				
ANR	1050892	CallExpression	"if_debug3 ( 'F' , ""[F]cross: dy=%g, dx_old=%g, dx_new=%g\\n"" , fixed2float ( dy ) , fixed2float ( dx_old ) , fixed2float ( dx_den - dx_old ) )"		1050836	0					
ANR	1050893	Callee	if_debug3		1050836	0					
ANR	1050894	Identifier	if_debug3		1050836	0					
ANR	1050895	ArgumentList	'F'		1050836	1					
ANR	1050896	Argument	'F'		1050836	0					
ANR	1050897	PrimaryExpression	'F'		1050836	0					
ANR	1050898	Argument	"""[F]cross: dy=%g, dx_old=%g, dx_new=%g\\n"""		1050836	1					
ANR	1050899	PrimaryExpression	"""[F]cross: dy=%g, dx_old=%g, dx_new=%g\\n"""		1050836	0					
ANR	1050900	Argument	fixed2float ( dy )		1050836	2					
ANR	1050901	CallExpression	fixed2float ( dy )		1050836	0					
ANR	1050902	Callee	fixed2float		1050836	0					
ANR	1050903	Identifier	fixed2float		1050836	0					
ANR	1050904	ArgumentList	dy		1050836	1					
ANR	1050905	Argument	dy		1050836	0					
ANR	1050906	Identifier	dy		1050836	0					
ANR	1050907	Argument	fixed2float ( dx_old )		1050836	3					
ANR	1050908	CallExpression	fixed2float ( dx_old )		1050836	0					
ANR	1050909	Callee	fixed2float		1050836	0					
ANR	1050910	Identifier	fixed2float		1050836	0					
ANR	1050911	ArgumentList	dx_old		1050836	1					
ANR	1050912	Argument	dx_old		1050836	0					
ANR	1050913	Identifier	dx_old		1050836	0					
ANR	1050914	Argument	fixed2float ( dx_den - dx_old )		1050836	4					
ANR	1050915	CallExpression	fixed2float ( dx_den - dx_old )		1050836	0					
ANR	1050916	Callee	fixed2float		1050836	0					
ANR	1050917	Identifier	fixed2float		1050836	0					
ANR	1050918	ArgumentList	dx_den - dx_old		1050836	1					
ANR	1050919	Argument	dx_den - dx_old		1050836	0					
ANR	1050920	AdditiveExpression	dx_den - dx_old		1050836	0		-			
ANR	1050921	Identifier	dx_den		1050836	0					
ANR	1050922	Identifier	dx_old		1050836	1					
ANR	1050923	ExpressionStatement	"y_new = ( ( ( ufixed ) ( dy | dx_old ) ) < ( 1L << ( size_of ( fixed ) * 4 - 1 ) ) ? dy * dx_old / dx_den : ( INCR_EXPR ( mq_cross ) , fixed_mult_quo ( dy , dx_old , dx_den ) ) ) + y"	1767:4:67621:67810	1050836	6	True				
ANR	1050924	AssignmentExpression	"y_new = ( ( ( ufixed ) ( dy | dx_old ) ) < ( 1L << ( size_of ( fixed ) * 4 - 1 ) ) ? dy * dx_old / dx_den : ( INCR_EXPR ( mq_cross ) , fixed_mult_quo ( dy , dx_old , dx_den ) ) ) + y"		1050836	0		=			
ANR	1050925	Identifier	y_new		1050836	0					
ANR	1050926	AdditiveExpression	"( ( ( ufixed ) ( dy | dx_old ) ) < ( 1L << ( size_of ( fixed ) * 4 - 1 ) ) ? dy * dx_old / dx_den : ( INCR_EXPR ( mq_cross ) , fixed_mult_quo ( dy , dx_old , dx_den ) ) ) + y"		1050836	1		+			
ANR	1050927	ConditionalExpression	"( ( ufixed ) ( dy | dx_old ) ) < ( 1L << ( size_of ( fixed ) * 4 - 1 ) ) ? dy * dx_old / dx_den : ( INCR_EXPR ( mq_cross ) , fixed_mult_quo ( dy , dx_old , dx_den ) )"		1050836	0					
ANR	1050928	Condition	( ( ufixed ) ( dy | dx_old ) ) < ( 1L << ( size_of ( fixed ) * 4 - 1 ) )		1050836	0					
ANR	1050929	RelationalExpression	( ( ufixed ) ( dy | dx_old ) ) < ( 1L << ( size_of ( fixed ) * 4 - 1 ) )		1050836	0		<			
ANR	1050930	CastExpression	( ufixed ) ( dy | dx_old )		1050836	0					
ANR	1050931	CastTarget	ufixed		1050836	0					
ANR	1050932	InclusiveOrExpression	dy | dx_old		1050836	1		|			
ANR	1050933	Identifier	dy		1050836	0					
ANR	1050934	Identifier	dx_old		1050836	1					
ANR	1050935	ShiftExpression	1L << ( size_of ( fixed ) * 4 - 1 )		1050836	1		<<			
ANR	1050936	PrimaryExpression	1L		1050836	0					
ANR	1050937	AdditiveExpression	size_of ( fixed ) * 4 - 1		1050836	1		-			
ANR	1050938	MultiplicativeExpression	size_of ( fixed ) * 4		1050836	0		*			
ANR	1050939	CallExpression	size_of ( fixed )		1050836	0					
ANR	1050940	Callee	size_of		1050836	0					
ANR	1050941	Identifier	size_of		1050836	0					
ANR	1050942	ArgumentList	fixed		1050836	1					
ANR	1050943	Argument	fixed		1050836	0					
ANR	1050944	Identifier	fixed		1050836	0					
ANR	1050945	PrimaryExpression	4		1050836	1					
ANR	1050946	PrimaryExpression	1		1050836	1					
ANR	1050947	MultiplicativeExpression	dy * dx_old / dx_den		1050836	1		*			
ANR	1050948	Identifier	dy		1050836	0					
ANR	1050949	MultiplicativeExpression	dx_old / dx_den		1050836	1		/			
ANR	1050950	Identifier	dx_old		1050836	0					
ANR	1050951	Identifier	dx_den		1050836	1					
ANR	1050952	Expression	"INCR_EXPR ( mq_cross ) , fixed_mult_quo ( dy , dx_old , dx_den )"		1050836	2					
ANR	1050953	CallExpression	INCR_EXPR ( mq_cross )		1050836	0					
ANR	1050954	Callee	INCR_EXPR		1050836	0					
ANR	1050955	Identifier	INCR_EXPR		1050836	0					
ANR	1050956	ArgumentList	mq_cross		1050836	1					
ANR	1050957	Argument	mq_cross		1050836	0					
ANR	1050958	Identifier	mq_cross		1050836	0					
ANR	1050959	CallExpression	"fixed_mult_quo ( dy , dx_old , dx_den )"		1050836	1					
ANR	1050960	Callee	fixed_mult_quo		1050836	0					
ANR	1050961	Identifier	fixed_mult_quo		1050836	0					
ANR	1050962	ArgumentList	dy		1050836	1					
ANR	1050963	Argument	dy		1050836	0					
ANR	1050964	Identifier	dy		1050836	0					
ANR	1050965	Argument	dx_old		1050836	1					
ANR	1050966	Identifier	dx_old		1050836	0					
ANR	1050967	Argument	dx_den		1050836	2					
ANR	1050968	Identifier	dx_den		1050836	0					
ANR	1050969	Identifier	y		1050836	1					
ANR	1050970	ExpressionStatement	"if_debug3 ( 'F' , ""[F]cross y=%g, y_new=%g, y1=%g\\n"" , fixed2float ( y ) , fixed2float ( y_new ) , fixed2float ( y1 ) )"	1775:4:67955:68086	1050836	7	True				
ANR	1050971	CallExpression	"if_debug3 ( 'F' , ""[F]cross y=%g, y_new=%g, y1=%g\\n"" , fixed2float ( y ) , fixed2float ( y_new ) , fixed2float ( y1 ) )"		1050836	0					
ANR	1050972	Callee	if_debug3		1050836	0					
ANR	1050973	Identifier	if_debug3		1050836	0					
ANR	1050974	ArgumentList	'F'		1050836	1					
ANR	1050975	Argument	'F'		1050836	0					
ANR	1050976	PrimaryExpression	'F'		1050836	0					
ANR	1050977	Argument	"""[F]cross y=%g, y_new=%g, y1=%g\\n"""		1050836	1					
ANR	1050978	PrimaryExpression	"""[F]cross y=%g, y_new=%g, y1=%g\\n"""		1050836	0					
ANR	1050979	Argument	fixed2float ( y )		1050836	2					
ANR	1050980	CallExpression	fixed2float ( y )		1050836	0					
ANR	1050981	Callee	fixed2float		1050836	0					
ANR	1050982	Identifier	fixed2float		1050836	0					
ANR	1050983	ArgumentList	y		1050836	1					
ANR	1050984	Argument	y		1050836	0					
ANR	1050985	Identifier	y		1050836	0					
ANR	1050986	Argument	fixed2float ( y_new )		1050836	3					
ANR	1050987	CallExpression	fixed2float ( y_new )		1050836	0					
ANR	1050988	Callee	fixed2float		1050836	0					
ANR	1050989	Identifier	fixed2float		1050836	0					
ANR	1050990	ArgumentList	y_new		1050836	1					
ANR	1050991	Argument	y_new		1050836	0					
ANR	1050992	Identifier	y_new		1050836	0					
ANR	1050993	Argument	fixed2float ( y1 )		1050836	4					
ANR	1050994	CallExpression	fixed2float ( y1 )		1050836	0					
ANR	1050995	Callee	fixed2float		1050836	0					
ANR	1050996	Identifier	fixed2float		1050836	0					
ANR	1050997	ArgumentList	y1		1050836	1					
ANR	1050998	Argument	y1		1050836	0					
ANR	1050999	Identifier	y1		1050836	0					
ANR	1051000	IfStatement	if ( y_new <= y )		1050836	8					
ANR	1051001	Condition	y_new <= y	1778:8:68096:68105	1050836	0	True				
ANR	1051002	RelationalExpression	y_new <= y		1050836	0		<=			
ANR	1051003	Identifier	y_new		1050836	0					
ANR	1051004	Identifier	y		1050836	1					
ANR	1051005	CompoundStatement		30:8:1104:1150	1050836	1					
ANR	1051006	IdentifierDeclStatement	"fixed ys , xs0 , xs1 , ye , xe0 , xe1 , dy , dx0 , dx1 ;"	1783:8:68224:68270	1050836	0	True				
ANR	1051007	IdentifierDecl	ys		1050836	0					
ANR	1051008	IdentifierDeclType	fixed		1050836	0					
ANR	1051009	Identifier	ys		1050836	1					
ANR	1051010	IdentifierDecl	xs0		1050836	1					
ANR	1051011	IdentifierDeclType	fixed		1050836	0					
ANR	1051012	Identifier	xs0		1050836	1					
ANR	1051013	IdentifierDecl	xs1		1050836	2					
ANR	1051014	IdentifierDeclType	fixed		1050836	0					
ANR	1051015	Identifier	xs1		1050836	1					
ANR	1051016	IdentifierDecl	ye		1050836	3					
ANR	1051017	IdentifierDeclType	fixed		1050836	0					
ANR	1051018	Identifier	ye		1050836	1					
ANR	1051019	IdentifierDecl	xe0		1050836	4					
ANR	1051020	IdentifierDeclType	fixed		1050836	0					
ANR	1051021	Identifier	xe0		1050836	1					
ANR	1051022	IdentifierDecl	xe1		1050836	5					
ANR	1051023	IdentifierDeclType	fixed		1050836	0					
ANR	1051024	Identifier	xe1		1050836	1					
ANR	1051025	IdentifierDecl	dy		1050836	6					
ANR	1051026	IdentifierDeclType	fixed		1050836	0					
ANR	1051027	Identifier	dy		1050836	1					
ANR	1051028	IdentifierDecl	dx0		1050836	7					
ANR	1051029	IdentifierDeclType	fixed		1050836	0					
ANR	1051030	Identifier	dx0		1050836	1					
ANR	1051031	IdentifierDecl	dx1		1050836	8					
ANR	1051032	IdentifierDeclType	fixed		1050836	0					
ANR	1051033	Identifier	dx1		1050836	1					
ANR	1051034	ExpressionStatement	INCR ( cross_slow )	1785:8:68281:68297	1050836	1	True				
ANR	1051035	CallExpression	INCR ( cross_slow )		1050836	0					
ANR	1051036	Callee	INCR		1050836	0					
ANR	1051037	Identifier	INCR		1050836	0					
ANR	1051038	ArgumentList	cross_slow		1050836	1					
ANR	1051039	Argument	cross_slow		1050836	0					
ANR	1051040	Identifier	cross_slow		1050836	0					
ANR	1051041	IfStatement	if ( endp -> start . y < alp -> start . y )		1050836	2					
ANR	1051042	Condition	endp -> start . y < alp -> start . y	1786:12:68311:68338	1050836	0	True				
ANR	1051043	RelationalExpression	endp -> start . y < alp -> start . y		1050836	0		<			
ANR	1051044	MemberAccess	endp -> start . y		1050836	0					
ANR	1051045	PtrMemberAccess	endp -> start		1050836	0					
ANR	1051046	Identifier	endp		1050836	0					
ANR	1051047	Identifier	start		1050836	1					
ANR	1051048	Identifier	y		1050836	1					
ANR	1051049	MemberAccess	alp -> start . y		1050836	1					
ANR	1051050	PtrMemberAccess	alp -> start		1050836	0					
ANR	1051051	Identifier	alp		1050836	0					
ANR	1051052	Identifier	start		1050836	1					
ANR	1051053	Identifier	y		1050836	1					
ANR	1051054	ExpressionStatement	"ys = alp -> start . y , xs0 = AL_X_AT_Y ( endp , ys ) , xs1 = alp -> start . x"	1787:12:68353:68433	1050836	1	True				
ANR	1051055	Expression	"ys = alp -> start . y , xs0 = AL_X_AT_Y ( endp , ys ) , xs1 = alp -> start . x"		1050836	0					
ANR	1051056	AssignmentExpression	ys = alp -> start . y		1050836	0		=			
ANR	1051057	Identifier	ys		1050836	0					
ANR	1051058	MemberAccess	alp -> start . y		1050836	1					
ANR	1051059	PtrMemberAccess	alp -> start		1050836	0					
ANR	1051060	Identifier	alp		1050836	0					
ANR	1051061	Identifier	start		1050836	1					
ANR	1051062	Identifier	y		1050836	1					
ANR	1051063	Expression	"xs0 = AL_X_AT_Y ( endp , ys ) , xs1 = alp -> start . x"		1050836	1					
ANR	1051064	AssignmentExpression	"xs0 = AL_X_AT_Y ( endp , ys )"		1050836	0		=			
ANR	1051065	Identifier	xs0		1050836	0					
ANR	1051066	CallExpression	"AL_X_AT_Y ( endp , ys )"		1050836	1					
ANR	1051067	Callee	AL_X_AT_Y		1050836	0					
ANR	1051068	Identifier	AL_X_AT_Y		1050836	0					
ANR	1051069	ArgumentList	endp		1050836	1					
ANR	1051070	Argument	endp		1050836	0					
ANR	1051071	Identifier	endp		1050836	0					
ANR	1051072	Argument	ys		1050836	1					
ANR	1051073	Identifier	ys		1050836	0					
ANR	1051074	AssignmentExpression	xs1 = alp -> start . x		1050836	1		=			
ANR	1051075	Identifier	xs1		1050836	0					
ANR	1051076	MemberAccess	alp -> start . x		1050836	1					
ANR	1051077	PtrMemberAccess	alp -> start		1050836	0					
ANR	1051078	Identifier	alp		1050836	0					
ANR	1051079	Identifier	start		1050836	1					
ANR	1051080	Identifier	x		1050836	1					
ANR	1051081	ElseStatement	else		1050836	0					
ANR	1051082	ExpressionStatement	"ys = endp -> start . y , xs0 = endp -> start . x , xs1 = AL_X_AT_Y ( alp , ys )"	1790:12:68460:68541	1050836	0	True				
ANR	1051083	Expression	"ys = endp -> start . y , xs0 = endp -> start . x , xs1 = AL_X_AT_Y ( alp , ys )"		1050836	0					
ANR	1051084	AssignmentExpression	ys = endp -> start . y		1050836	0		=			
ANR	1051085	Identifier	ys		1050836	0					
ANR	1051086	MemberAccess	endp -> start . y		1050836	1					
ANR	1051087	PtrMemberAccess	endp -> start		1050836	0					
ANR	1051088	Identifier	endp		1050836	0					
ANR	1051089	Identifier	start		1050836	1					
ANR	1051090	Identifier	y		1050836	1					
ANR	1051091	Expression	"xs0 = endp -> start . x , xs1 = AL_X_AT_Y ( alp , ys )"		1050836	1					
ANR	1051092	AssignmentExpression	xs0 = endp -> start . x		1050836	0		=			
ANR	1051093	Identifier	xs0		1050836	0					
ANR	1051094	MemberAccess	endp -> start . x		1050836	1					
ANR	1051095	PtrMemberAccess	endp -> start		1050836	0					
ANR	1051096	Identifier	endp		1050836	0					
ANR	1051097	Identifier	start		1050836	1					
ANR	1051098	Identifier	x		1050836	1					
ANR	1051099	AssignmentExpression	"xs1 = AL_X_AT_Y ( alp , ys )"		1050836	1		=			
ANR	1051100	Identifier	xs1		1050836	0					
ANR	1051101	CallExpression	"AL_X_AT_Y ( alp , ys )"		1050836	1					
ANR	1051102	Callee	AL_X_AT_Y		1050836	0					
ANR	1051103	Identifier	AL_X_AT_Y		1050836	0					
ANR	1051104	ArgumentList	alp		1050836	1					
ANR	1051105	Argument	alp		1050836	0					
ANR	1051106	Identifier	alp		1050836	0					
ANR	1051107	Argument	ys		1050836	1					
ANR	1051108	Identifier	ys		1050836	0					
ANR	1051109	IfStatement	if ( endp -> end . y > alp -> end . y )		1050836	3					
ANR	1051110	Condition	endp -> end . y > alp -> end . y	1792:12:68555:68578	1050836	0	True				
ANR	1051111	RelationalExpression	endp -> end . y > alp -> end . y		1050836	0		>			
ANR	1051112	MemberAccess	endp -> end . y		1050836	0					
ANR	1051113	PtrMemberAccess	endp -> end		1050836	0					
ANR	1051114	Identifier	endp		1050836	0					
ANR	1051115	Identifier	end		1050836	1					
ANR	1051116	Identifier	y		1050836	1					
ANR	1051117	MemberAccess	alp -> end . y		1050836	1					
ANR	1051118	PtrMemberAccess	alp -> end		1050836	0					
ANR	1051119	Identifier	alp		1050836	0					
ANR	1051120	Identifier	end		1050836	1					
ANR	1051121	Identifier	y		1050836	1					
ANR	1051122	ExpressionStatement	"ye = alp -> end . y , xe0 = AL_X_AT_Y ( endp , ye ) , xe1 = alp -> end . x"	1793:12:68593:68669	1050836	1	True				
ANR	1051123	Expression	"ye = alp -> end . y , xe0 = AL_X_AT_Y ( endp , ye ) , xe1 = alp -> end . x"		1050836	0					
ANR	1051124	AssignmentExpression	ye = alp -> end . y		1050836	0		=			
ANR	1051125	Identifier	ye		1050836	0					
ANR	1051126	MemberAccess	alp -> end . y		1050836	1					
ANR	1051127	PtrMemberAccess	alp -> end		1050836	0					
ANR	1051128	Identifier	alp		1050836	0					
ANR	1051129	Identifier	end		1050836	1					
ANR	1051130	Identifier	y		1050836	1					
ANR	1051131	Expression	"xe0 = AL_X_AT_Y ( endp , ye ) , xe1 = alp -> end . x"		1050836	1					
ANR	1051132	AssignmentExpression	"xe0 = AL_X_AT_Y ( endp , ye )"		1050836	0		=			
ANR	1051133	Identifier	xe0		1050836	0					
ANR	1051134	CallExpression	"AL_X_AT_Y ( endp , ye )"		1050836	1					
ANR	1051135	Callee	AL_X_AT_Y		1050836	0					
ANR	1051136	Identifier	AL_X_AT_Y		1050836	0					
ANR	1051137	ArgumentList	endp		1050836	1					
ANR	1051138	Argument	endp		1050836	0					
ANR	1051139	Identifier	endp		1050836	0					
ANR	1051140	Argument	ye		1050836	1					
ANR	1051141	Identifier	ye		1050836	0					
ANR	1051142	AssignmentExpression	xe1 = alp -> end . x		1050836	1		=			
ANR	1051143	Identifier	xe1		1050836	0					
ANR	1051144	MemberAccess	alp -> end . x		1050836	1					
ANR	1051145	PtrMemberAccess	alp -> end		1050836	0					
ANR	1051146	Identifier	alp		1050836	0					
ANR	1051147	Identifier	end		1050836	1					
ANR	1051148	Identifier	x		1050836	1					
ANR	1051149	ElseStatement	else		1050836	0					
ANR	1051150	ExpressionStatement	"ye = endp -> end . y , xe0 = endp -> end . x , xe1 = AL_X_AT_Y ( alp , ye )"	1796:12:68696:68773	1050836	0	True				
ANR	1051151	Expression	"ye = endp -> end . y , xe0 = endp -> end . x , xe1 = AL_X_AT_Y ( alp , ye )"		1050836	0					
ANR	1051152	AssignmentExpression	ye = endp -> end . y		1050836	0		=			
ANR	1051153	Identifier	ye		1050836	0					
ANR	1051154	MemberAccess	endp -> end . y		1050836	1					
ANR	1051155	PtrMemberAccess	endp -> end		1050836	0					
ANR	1051156	Identifier	endp		1050836	0					
ANR	1051157	Identifier	end		1050836	1					
ANR	1051158	Identifier	y		1050836	1					
ANR	1051159	Expression	"xe0 = endp -> end . x , xe1 = AL_X_AT_Y ( alp , ye )"		1050836	1					
ANR	1051160	AssignmentExpression	xe0 = endp -> end . x		1050836	0		=			
ANR	1051161	Identifier	xe0		1050836	0					
ANR	1051162	MemberAccess	endp -> end . x		1050836	1					
ANR	1051163	PtrMemberAccess	endp -> end		1050836	0					
ANR	1051164	Identifier	endp		1050836	0					
ANR	1051165	Identifier	end		1050836	1					
ANR	1051166	Identifier	x		1050836	1					
ANR	1051167	AssignmentExpression	"xe1 = AL_X_AT_Y ( alp , ye )"		1050836	1		=			
ANR	1051168	Identifier	xe1		1050836	0					
ANR	1051169	CallExpression	"AL_X_AT_Y ( alp , ye )"		1050836	1					
ANR	1051170	Callee	AL_X_AT_Y		1050836	0					
ANR	1051171	Identifier	AL_X_AT_Y		1050836	0					
ANR	1051172	ArgumentList	alp		1050836	1					
ANR	1051173	Argument	alp		1050836	0					
ANR	1051174	Identifier	alp		1050836	0					
ANR	1051175	Argument	ye		1050836	1					
ANR	1051176	Identifier	ye		1050836	0					
ANR	1051177	ExpressionStatement	dy = ye - ys	1798:8:68783:68795	1050836	4	True				
ANR	1051178	AssignmentExpression	dy = ye - ys		1050836	0		=			
ANR	1051179	Identifier	dy		1050836	0					
ANR	1051180	AdditiveExpression	ye - ys		1050836	1		-			
ANR	1051181	Identifier	ye		1050836	0					
ANR	1051182	Identifier	ys		1050836	1					
ANR	1051183	ExpressionStatement	dx0 = xe0 - xs0	1799:8:68805:68820	1050836	5	True				
ANR	1051184	AssignmentExpression	dx0 = xe0 - xs0		1050836	0		=			
ANR	1051185	Identifier	dx0		1050836	0					
ANR	1051186	AdditiveExpression	xe0 - xs0		1050836	1		-			
ANR	1051187	Identifier	xe0		1050836	0					
ANR	1051188	Identifier	xs0		1050836	1					
ANR	1051189	ExpressionStatement	dx1 = xe1 - xs1	1800:8:68830:68845	1050836	6	True				
ANR	1051190	AssignmentExpression	dx1 = xe1 - xs1		1050836	0		=			
ANR	1051191	Identifier	dx1		1050836	0					
ANR	1051192	AdditiveExpression	xe1 - xs1		1050836	1		-			
ANR	1051193	Identifier	xe1		1050836	0					
ANR	1051194	Identifier	xs1		1050836	1					
ANR	1051195	IfStatement	if ( dx0 == dx1 )		1050836	7					
ANR	1051196	Condition	dx0 == dx1	1802:12:68921:68930	1050836	0	True				
ANR	1051197	EqualityExpression	dx0 == dx1		1050836	0		==			
ANR	1051198	Identifier	dx0		1050836	0					
ANR	1051199	Identifier	dx1		1050836	1					
ANR	1051200	CompoundStatement		49:24:1813:1813	1050836	1					
ANR	1051201	ExpressionStatement	y_new = y1	1804:12:69008:69018	1050836	0	True				
ANR	1051202	AssignmentExpression	y_new = y1		1050836	0		=			
ANR	1051203	Identifier	y_new		1050836	0					
ANR	1051204	Identifier	y1		1050836	1					
ANR	1051205	ElseStatement	else		1050836	0					
ANR	1051206	CompoundStatement		53:12:1929:1977	1050836	0					
ANR	1051207	IdentifierDeclStatement	double cross = ( double ) ( xs0 - xs1 ) / ( dx1 - dx0 ) ;	1806:12:69049:69097	1050836	0	True				
ANR	1051208	IdentifierDecl	cross = ( double ) ( xs0 - xs1 ) / ( dx1 - dx0 )		1050836	0					
ANR	1051209	IdentifierDeclType	double		1050836	0					
ANR	1051210	Identifier	cross		1050836	1					
ANR	1051211	AssignmentExpression	cross = ( double ) ( xs0 - xs1 ) / ( dx1 - dx0 )		1050836	2		=			
ANR	1051212	Identifier	cross		1050836	0					
ANR	1051213	MultiplicativeExpression	( double ) ( xs0 - xs1 ) / ( dx1 - dx0 )		1050836	1		/			
ANR	1051214	CastExpression	( double ) ( xs0 - xs1 )		1050836	0					
ANR	1051215	CastTarget	double		1050836	0					
ANR	1051216	AdditiveExpression	xs0 - xs1		1050836	1		-			
ANR	1051217	Identifier	xs0		1050836	0					
ANR	1051218	Identifier	xs1		1050836	1					
ANR	1051219	AdditiveExpression	dx1 - dx0		1050836	1		-			
ANR	1051220	Identifier	dx1		1050836	0					
ANR	1051221	Identifier	dx0		1050836	1					
ANR	1051222	ExpressionStatement	y_new = ( fixed ) ( ys + cross * dy )	1808:12:69112:69144	1050836	1	True				
ANR	1051223	AssignmentExpression	y_new = ( fixed ) ( ys + cross * dy )		1050836	0		=			
ANR	1051224	Identifier	y_new		1050836	0					
ANR	1051225	CastExpression	( fixed ) ( ys + cross * dy )		1050836	1					
ANR	1051226	CastTarget	fixed		1050836	0					
ANR	1051227	AdditiveExpression	ys + cross * dy		1050836	1		+			
ANR	1051228	Identifier	ys		1050836	0					
ANR	1051229	MultiplicativeExpression	cross * dy		1050836	1		*			
ANR	1051230	Identifier	cross		1050836	0					
ANR	1051231	Identifier	dy		1050836	1					
ANR	1051232	IfStatement	if ( y_new <= y )		1050836	2					
ANR	1051233	Condition	y_new <= y	1809:16:69162:69171	1050836	0	True				
ANR	1051234	RelationalExpression	y_new <= y		1050836	0		<=			
ANR	1051235	Identifier	y_new		1050836	0					
ANR	1051236	Identifier	y		1050836	1					
ANR	1051237	CompoundStatement		56:28:2054:2054	1050836	1					
ANR	1051238	ExpressionStatement	INCR ( cross_low )	1814:16:69351:69366	1050836	0	True				
ANR	1051239	CallExpression	INCR ( cross_low )		1050836	0					
ANR	1051240	Callee	INCR		1050836	0					
ANR	1051241	Identifier	INCR		1050836	0					
ANR	1051242	ArgumentList	cross_low		1050836	1					
ANR	1051243	Argument	cross_low		1050836	0					
ANR	1051244	Identifier	cross_low		1050836	0					
ANR	1051245	ExpressionStatement	y_new = y + fixed_epsilon	1815:16:69384:69409	1050836	1	True				
ANR	1051246	AssignmentExpression	y_new = y + fixed_epsilon		1050836	0		=			
ANR	1051247	Identifier	y_new		1050836	0					
ANR	1051248	AdditiveExpression	y + fixed_epsilon		1050836	1		+			
ANR	1051249	Identifier	y		1050836	0					
ANR	1051250	Identifier	fixed_epsilon		1050836	1					
ANR	1051251	ExpressionStatement	* p_y_new = y_new	1819:4:69445:69461	1050836	9	True				
ANR	1051252	AssignmentExpression	* p_y_new = y_new		1050836	0		=			
ANR	1051253	UnaryOperationExpression	* p_y_new		1050836	0					
ANR	1051254	UnaryOperator	*		1050836	0					
ANR	1051255	Identifier	p_y_new		1050836	1					
ANR	1051256	Identifier	y_new		1050836	1					
ANR	1051257	ReturnStatement	return true ;	1820:4:69467:69478	1050836	10	True				
ANR	1051258	Identifier	true		1050836	0					
ANR	1051259	ReturnType	static bool		1050836	1					
ANR	1051260	Identifier	intersect		1050836	2					
ANR	1051261	ParameterList	"active_line * endp , active_line * alp , fixed y , fixed y1 , fixed * p_y_new"		1050836	3					
ANR	1051262	Parameter	active_line * endp	1753:10:67047:67063	1050836	0	True				
ANR	1051263	ParameterType	active_line *		1050836	0					
ANR	1051264	Identifier	endp		1050836	1					
ANR	1051265	Parameter	active_line * alp	1753:29:67066:67081	1050836	1	True				
ANR	1051266	ParameterType	active_line *		1050836	0					
ANR	1051267	Identifier	alp		1050836	1					
ANR	1051268	Parameter	fixed y	1753:47:67084:67090	1050836	2	True				
ANR	1051269	ParameterType	fixed		1050836	0					
ANR	1051270	Identifier	y		1050836	1					
ANR	1051271	Parameter	fixed y1	1753:56:67093:67100	1050836	3	True				
ANR	1051272	ParameterType	fixed		1050836	0					
ANR	1051273	Identifier	y1		1050836	1					
ANR	1051274	Parameter	fixed * p_y_new	1753:66:67103:67116	1050836	4	True				
ANR	1051275	ParameterType	fixed *		1050836	0					
ANR	1051276	Identifier	p_y_new		1050836	1					
ANR	1051277	CFGEntryNode	ENTRY		1050836		True				
ANR	1051278	CFGExitNode	EXIT		1050836		True				
ANR	1051279	Symbol	fixed_mult_quo		1050836						
ANR	1051280	Symbol	alp -> end		1050836						
ANR	1051281	Symbol	ye		1050836						
ANR	1051282	Symbol	dx_den		1050836						
ANR	1051283	Symbol	y_new		1050836						
ANR	1051284	Symbol	dx_old		1050836						
ANR	1051285	Symbol	xs0		1050836						
ANR	1051286	Symbol	dy		1050836						
ANR	1051287	Symbol	xs1		1050836						
ANR	1051288	Symbol	ys		1050836						
ANR	1051289	Symbol	cross_low		1050836						
ANR	1051290	Symbol	dx1		1050836						
ANR	1051291	Symbol	fixed_epsilon		1050836						
ANR	1051292	Symbol	dx0		1050836						
ANR	1051293	Symbol	mq_cross		1050836						
ANR	1051294	Symbol	alp		1050836						
ANR	1051295	Symbol	endp -> x_current		1050836						
ANR	1051296	Symbol	INCR_EXPR		1050836						
ANR	1051297	Symbol	alp -> x_next		1050836						
ANR	1051298	Symbol	alp -> start . y		1050836						
ANR	1051299	Symbol	alp -> start . x		1050836						
ANR	1051300	Symbol	* endp		1050836						
ANR	1051301	Symbol	true		1050836						
ANR	1051302	Symbol	alp -> start		1050836						
ANR	1051303	Symbol	fixed		1050836						
ANR	1051304	Symbol	cross_slow		1050836						
ANR	1051305	Symbol	AL_X_AT_Y		1050836						
ANR	1051306	Symbol	alp -> x_current		1050836						
ANR	1051307	Symbol	endp -> x_next		1050836						
ANR	1051308	Symbol	endp -> end . y		1050836						
ANR	1051309	Symbol	endp -> end . x		1050836						
ANR	1051310	Symbol	size_of		1050836						
ANR	1051311	Symbol	y1		1050836						
ANR	1051312	Symbol	* p_y_new		1050836						
ANR	1051313	Symbol	endp		1050836						
ANR	1051314	Symbol	xe0		1050836						
ANR	1051315	Symbol	fixed2float		1050836						
ANR	1051316	Symbol	endp -> end		1050836						
ANR	1051317	Symbol	xe1		1050836						
ANR	1051318	Symbol	p_y_new		1050836						
ANR	1051319	Symbol	false		1050836						
ANR	1051320	Symbol	cross		1050836						
ANR	1051321	Symbol	* alp		1050836						
ANR	1051322	Symbol	alp -> end . y		1050836						
ANR	1051323	Symbol	endp -> start		1050836						
ANR	1051324	Symbol	alp -> end . x		1050836						
ANR	1051325	Symbol	y		1050836						
ANR	1051326	Symbol	endp -> start . x		1050836						
ANR	1051327	Symbol	endp -> start . y		1050836						
ANR	1051328	Function	set_x_next	1823:0:69483:69645							
ANR	1051329	FunctionDef	"set_x_next (active_line * endp , active_line * alp , fixed x)"		1051328	0					
ANR	1051330	CompoundStatement		1825:0:69559:69645	1051328	0					
ANR	1051331	WhileStatement	while ( endp != alp )		1051328	0					
ANR	1051332	Condition	endp != alp	1826:10:69571:69581	1051328	0	True				
ANR	1051333	EqualityExpression	endp != alp		1051328	0		!=			
ANR	1051334	Identifier	endp		1051328	0					
ANR	1051335	Identifier	alp		1051328	1					
ANR	1051336	CompoundStatement		2:23:24:24	1051328	1					
ANR	1051337	ExpressionStatement	endp -> x_next = x	1827:8:69594:69610	1051328	0	True				
ANR	1051338	AssignmentExpression	endp -> x_next = x		1051328	0		=			
ANR	1051339	PtrMemberAccess	endp -> x_next		1051328	0					
ANR	1051340	Identifier	endp		1051328	0					
ANR	1051341	Identifier	x_next		1051328	1					
ANR	1051342	Identifier	x		1051328	1					
ANR	1051343	ExpressionStatement	endp = endp -> next	1828:8:69620:69637	1051328	1	True				
ANR	1051344	AssignmentExpression	endp = endp -> next		1051328	0		=			
ANR	1051345	Identifier	endp		1051328	0					
ANR	1051346	PtrMemberAccess	endp -> next		1051328	1					
ANR	1051347	Identifier	endp		1051328	0					
ANR	1051348	Identifier	next		1051328	1					
ANR	1051349	ReturnType	static inline void		1051328	1					
ANR	1051350	Identifier	set_x_next		1051328	2					
ANR	1051351	ParameterList	"active_line * endp , active_line * alp , fixed x"		1051328	3					
ANR	1051352	Parameter	active_line * endp	1824:11:69513:69529	1051328	0	True				
ANR	1051353	ParameterType	active_line *		1051328	0					
ANR	1051354	Identifier	endp		1051328	1					
ANR	1051355	Parameter	active_line * alp	1824:30:69532:69547	1051328	1	True				
ANR	1051356	ParameterType	active_line *		1051328	0					
ANR	1051357	Identifier	alp		1051328	1					
ANR	1051358	Parameter	fixed x	1824:48:69550:69556	1051328	2	True				
ANR	1051359	ParameterType	fixed		1051328	0					
ANR	1051360	Identifier	x		1051328	1					
ANR	1051361	CFGEntryNode	ENTRY		1051328		True				
ANR	1051362	CFGExitNode	EXIT		1051328		True				
ANR	1051363	Symbol	alp		1051328						
ANR	1051364	Symbol	* endp		1051328						
ANR	1051365	Symbol	endp -> x_next		1051328						
ANR	1051366	Symbol	x		1051328						
ANR	1051367	Symbol	endp		1051328						
ANR	1051368	Symbol	endp -> next		1051328						
ANR	1051369	Function	coord_weight	1832:0:69648:69786							
ANR	1051370	FunctionDef	coord_weight (const active_line * alp)		1051369	0					
ANR	1051371	CompoundStatement		1834:0:69703:69786	1051369	0					
ANR	1051372	ReturnStatement	"return 1 + min ( any_abs ( ( int ) ( ( int64_t ) alp -> diff . y * 8 / alp -> diff . x ) ) , 256 ) ;"	1835:4:69709:69784	1051369	0	True				
ANR	1051373	AdditiveExpression	"1 + min ( any_abs ( ( int ) ( ( int64_t ) alp -> diff . y * 8 / alp -> diff . x ) ) , 256 )"		1051369	0		+			
ANR	1051374	PrimaryExpression	1		1051369	0					
ANR	1051375	CallExpression	"min ( any_abs ( ( int ) ( ( int64_t ) alp -> diff . y * 8 / alp -> diff . x ) ) , 256 )"		1051369	1					
ANR	1051376	Callee	min		1051369	0					
ANR	1051377	Identifier	min		1051369	0					
ANR	1051378	ArgumentList	any_abs ( ( int ) ( ( int64_t ) alp -> diff . y * 8 / alp -> diff . x ) )		1051369	1					
ANR	1051379	Argument	any_abs ( ( int ) ( ( int64_t ) alp -> diff . y * 8 / alp -> diff . x ) )		1051369	0					
ANR	1051380	CallExpression	any_abs ( ( int ) ( ( int64_t ) alp -> diff . y * 8 / alp -> diff . x ) )		1051369	0					
ANR	1051381	Callee	any_abs		1051369	0					
ANR	1051382	Identifier	any_abs		1051369	0					
ANR	1051383	ArgumentList	( int ) ( ( int64_t ) alp -> diff . y * 8 / alp -> diff . x )		1051369	1					
ANR	1051384	Argument	( int ) ( ( int64_t ) alp -> diff . y * 8 / alp -> diff . x )		1051369	0					
ANR	1051385	CastExpression	( int ) ( ( int64_t ) alp -> diff . y * 8 / alp -> diff . x )		1051369	0					
ANR	1051386	CastTarget	int		1051369	0					
ANR	1051387	MultiplicativeExpression	( int64_t ) alp -> diff . y * 8 / alp -> diff . x		1051369	1		*			
ANR	1051388	CastExpression	( int64_t ) alp -> diff . y		1051369	0					
ANR	1051389	CastTarget	int64_t		1051369	0					
ANR	1051390	MemberAccess	alp -> diff . y		1051369	1					
ANR	1051391	PtrMemberAccess	alp -> diff		1051369	0					
ANR	1051392	Identifier	alp		1051369	0					
ANR	1051393	Identifier	diff		1051369	1					
ANR	1051394	Identifier	y		1051369	1					
ANR	1051395	MultiplicativeExpression	8 / alp -> diff . x		1051369	1		/			
ANR	1051396	PrimaryExpression	8		1051369	0					
ANR	1051397	MemberAccess	alp -> diff . x		1051369	1					
ANR	1051398	PtrMemberAccess	alp -> diff		1051369	0					
ANR	1051399	Identifier	alp		1051369	0					
ANR	1051400	Identifier	diff		1051369	1					
ANR	1051401	Identifier	x		1051369	1					
ANR	1051402	Argument	256		1051369	1					
ANR	1051403	PrimaryExpression	256		1051369	0					
ANR	1051404	ReturnType	static inline int		1051369	1					
ANR	1051405	Identifier	coord_weight		1051369	2					
ANR	1051406	ParameterList	const active_line * alp		1051369	3					
ANR	1051407	Parameter	const active_line * alp	1833:13:69679:69700	1051369	0	True				
ANR	1051408	ParameterType	const active_line *		1051369	0					
ANR	1051409	Identifier	alp		1051369	1					
ANR	1051410	CFGEntryNode	ENTRY		1051369		True				
ANR	1051411	CFGExitNode	EXIT		1051369		True				
ANR	1051412	Symbol	* alp		1051369						
ANR	1051413	Symbol	min		1051369						
ANR	1051414	Symbol	alp		1051369						
ANR	1051415	Symbol	alp -> diff . y		1051369						
ANR	1051416	Symbol	any_abs		1051369						
ANR	1051417	Symbol	alp -> diff		1051369						
ANR	1051418	Symbol	alp -> diff . x		1051369						
ANR	1051419	Function	intersect_al	1840:0:69904:75250							
ANR	1051420	FunctionDef	"intersect_al (line_list * ll , fixed y , fixed * y_top , int draw , bool all_bands)"		1051419	0					
ANR	1051421	CompoundStatement		1842:0:69993:75250	1051419	0					
ANR	1051422	IdentifierDeclStatement	"fixed x = min_fixed , y1 = * y_top ;"	1843:4:69999:70031	1051419	0	True				
ANR	1051423	IdentifierDecl	x = min_fixed		1051419	0					
ANR	1051424	IdentifierDeclType	fixed		1051419	0					
ANR	1051425	Identifier	x		1051419	1					
ANR	1051426	AssignmentExpression	x = min_fixed		1051419	2		=			
ANR	1051427	Identifier	min_fixed		1051419	0					
ANR	1051428	Identifier	min_fixed		1051419	1					
ANR	1051429	IdentifierDecl	y1 = * y_top		1051419	1					
ANR	1051430	IdentifierDeclType	fixed		1051419	0					
ANR	1051431	Identifier	y1		1051419	1					
ANR	1051432	AssignmentExpression	y1 = * y_top		1051419	2		=			
ANR	1051433	Identifier	y1		1051419	0					
ANR	1051434	UnaryOperationExpression	* y_top		1051419	1					
ANR	1051435	UnaryOperator	*		1051419	0					
ANR	1051436	Identifier	y_top		1051419	1					
ANR	1051437	IdentifierDeclStatement	"active_line * alp , * stopx = NULL ;"	1844:4:70037:70068	1051419	1	True				
ANR	1051438	IdentifierDecl	* alp		1051419	0					
ANR	1051439	IdentifierDeclType	active_line *		1051419	0					
ANR	1051440	Identifier	alp		1051419	1					
ANR	1051441	IdentifierDecl	* stopx = NULL		1051419	1					
ANR	1051442	IdentifierDeclType	active_line *		1051419	0					
ANR	1051443	Identifier	stopx		1051419	1					
ANR	1051444	AssignmentExpression	* stopx = NULL		1051419	2		=			
ANR	1051445	Identifier	NULL		1051419	0					
ANR	1051446	Identifier	NULL		1051419	1					
ANR	1051447	IdentifierDeclStatement	active_line * endp = NULL ;	1845:4:70074:70098	1051419	2	True				
ANR	1051448	IdentifierDecl	* endp = NULL		1051419	0					
ANR	1051449	IdentifierDeclType	active_line *		1051419	0					
ANR	1051450	Identifier	endp		1051419	1					
ANR	1051451	AssignmentExpression	* endp = NULL		1051419	2		=			
ANR	1051452	Identifier	NULL		1051419	0					
ANR	1051453	Identifier	NULL		1051419	1					
ANR	1051454	IfStatement	if ( y == y1 )		1051419	3					
ANR	1051455	Condition	y == y1	1847:8:70109:70115	1051419	0	True				
ANR	1051456	EqualityExpression	y == y1		1051419	0		==			
ANR	1051457	Identifier	y		1051419	0					
ANR	1051458	Identifier	y1		1051419	1					
ANR	1051459	CompoundStatement		6:17:124:124	1051419	1					
ANR	1051460	ElseStatement	else		1051419	0					
ANR	1051461	IfStatement	if ( draw >= 0 || all_bands )		1051419	0					
ANR	1051462	Condition	draw >= 0 || all_bands	1852:15:70310:70331	1051419	0	True				
ANR	1051463	OrExpression	draw >= 0 || all_bands		1051419	0		||			
ANR	1051464	RelationalExpression	draw >= 0		1051419	0		>=			
ANR	1051465	Identifier	draw		1051419	0					
ANR	1051466	PrimaryExpression	0		1051419	1					
ANR	1051467	Identifier	all_bands		1051419	1					
ANR	1051468	CompoundStatement		11:39:340:340	1051419	1					
ANR	1051469	ForStatement	"for ( alp = stopx = ll -> x_list ; INCR_EXPR ( find_y ) , alp != 0 ; endp = alp , alp = alp -> next )"		1051419	0					
ANR	1051470	ForInit	alp = stopx = ll -> x_list ;	1859:13:70539:70563	1051419	0	True				
ANR	1051471	AssignmentExpression	alp = stopx = ll -> x_list		1051419	0		=			
ANR	1051472	Identifier	alp		1051419	0					
ANR	1051473	AssignmentExpression	stopx = ll -> x_list		1051419	1		=			
ANR	1051474	Identifier	stopx		1051419	0					
ANR	1051475	PtrMemberAccess	ll -> x_list		1051419	1					
ANR	1051476	Identifier	ll		1051419	0					
ANR	1051477	Identifier	x_list		1051419	1					
ANR	1051478	Condition	"INCR_EXPR ( find_y ) , alp != 0"	1860:13:70578:70604	1051419	1	True				
ANR	1051479	Expression	"INCR_EXPR ( find_y ) , alp != 0"		1051419	0					
ANR	1051480	CallExpression	INCR_EXPR ( find_y )		1051419	0					
ANR	1051481	Callee	INCR_EXPR		1051419	0					
ANR	1051482	Identifier	INCR_EXPR		1051419	0					
ANR	1051483	ArgumentList	find_y		1051419	1					
ANR	1051484	Argument	find_y		1051419	0					
ANR	1051485	Identifier	find_y		1051419	0					
ANR	1051486	EqualityExpression	alp != 0		1051419	1		!=			
ANR	1051487	Identifier	alp		1051419	0					
ANR	1051488	PrimaryExpression	0		1051419	1					
ANR	1051489	Expression	"endp = alp , alp = alp -> next"	1861:13:70620:70646	1051419	2	True				
ANR	1051490	AssignmentExpression	endp = alp		1051419	0		=			
ANR	1051491	Identifier	endp		1051419	0					
ANR	1051492	Identifier	alp		1051419	1					
ANR	1051493	AssignmentExpression	alp = alp -> next		1051419	1		=			
ANR	1051494	Identifier	alp		1051419	0					
ANR	1051495	PtrMemberAccess	alp -> next		1051419	1					
ANR	1051496	Identifier	alp		1051419	0					
ANR	1051497	Identifier	next		1051419	1					
ANR	1051498	CompoundStatement		23:12:725:736	1051419	3					
ANR	1051499	IdentifierDeclStatement	"fixed nx = AL_X_AT_Y ( alp , y1 ) ;"	1863:12:70676:70705	1051419	0	True				
ANR	1051500	IdentifierDecl	"nx = AL_X_AT_Y ( alp , y1 )"		1051419	0					
ANR	1051501	IdentifierDeclType	fixed		1051419	0					
ANR	1051502	Identifier	nx		1051419	1					
ANR	1051503	AssignmentExpression	"nx = AL_X_AT_Y ( alp , y1 )"		1051419	2		=			
ANR	1051504	Identifier	nx		1051419	0					
ANR	1051505	CallExpression	"AL_X_AT_Y ( alp , y1 )"		1051419	1					
ANR	1051506	Callee	AL_X_AT_Y		1051419	0					
ANR	1051507	Identifier	AL_X_AT_Y		1051419	0					
ANR	1051508	ArgumentList	alp		1051419	1					
ANR	1051509	Argument	alp		1051419	0					
ANR	1051510	Identifier	alp		1051419	0					
ANR	1051511	Argument	y1		1051419	1					
ANR	1051512	Identifier	y1		1051419	0					
ANR	1051513	IdentifierDeclStatement	fixed y_new ;	1864:12:70719:70730	1051419	1	True				
ANR	1051514	IdentifierDecl	y_new		1051419	0					
ANR	1051515	IdentifierDeclType	fixed		1051419	0					
ANR	1051516	Identifier	y_new		1051419	1					
ANR	1051517	ExpressionStatement	alp -> x_next = nx	1866:12:70745:70761	1051419	2	True				
ANR	1051518	AssignmentExpression	alp -> x_next = nx		1051419	0		=			
ANR	1051519	PtrMemberAccess	alp -> x_next		1051419	0					
ANR	1051520	Identifier	alp		1051419	0					
ANR	1051521	Identifier	x_next		1051419	1					
ANR	1051522	Identifier	nx		1051419	1					
ANR	1051523	IfStatement	if ( nx >= x )		1051419	3					
ANR	1051524	Condition	nx >= x	1868:16:70827:70833	1051419	0	True				
ANR	1051525	RelationalExpression	nx >= x		1051419	0		>=			
ANR	1051526	Identifier	nx		1051419	0					
ANR	1051527	Identifier	x		1051419	1					
ANR	1051528	ExpressionStatement	x = nx	1869:16:70852:70858	1051419	1	True				
ANR	1051529	AssignmentExpression	x = nx		1051419	0		=			
ANR	1051530	Identifier	x		1051419	0					
ANR	1051531	Identifier	nx		1051419	1					
ANR	1051532	ElseStatement	else		1051419	0					
ANR	1051533	IfStatement	"if ( alp -> x_current >= endp -> x_current && intersect ( endp , alp , y , y1 , & y_new ) )"		1051419	0					
ANR	1051534	Condition	"alp -> x_current >= endp -> x_current && intersect ( endp , alp , y , y1 , & y_new )"	1870:21:70881:70973	1051419	0	True				
ANR	1051535	AndExpression	"alp -> x_current >= endp -> x_current && intersect ( endp , alp , y , y1 , & y_new )"		1051419	0		&&			
ANR	1051536	RelationalExpression	alp -> x_current >= endp -> x_current		1051419	0		>=			
ANR	1051537	PtrMemberAccess	alp -> x_current		1051419	0					
ANR	1051538	Identifier	alp		1051419	0					
ANR	1051539	Identifier	x_current		1051419	1					
ANR	1051540	PtrMemberAccess	endp -> x_current		1051419	1					
ANR	1051541	Identifier	endp		1051419	0					
ANR	1051542	Identifier	x_current		1051419	1					
ANR	1051543	CallExpression	"intersect ( endp , alp , y , y1 , & y_new )"		1051419	1					
ANR	1051544	Callee	intersect		1051419	0					
ANR	1051545	Identifier	intersect		1051419	0					
ANR	1051546	ArgumentList	endp		1051419	1					
ANR	1051547	Argument	endp		1051419	0					
ANR	1051548	Identifier	endp		1051419	0					
ANR	1051549	Argument	alp		1051419	1					
ANR	1051550	Identifier	alp		1051419	0					
ANR	1051551	Argument	y		1051419	2					
ANR	1051552	Identifier	y		1051419	0					
ANR	1051553	Argument	y1		1051419	3					
ANR	1051554	Identifier	y1		1051419	0					
ANR	1051555	Argument	& y_new		1051419	4					
ANR	1051556	UnaryOperationExpression	& y_new		1051419	0					
ANR	1051557	UnaryOperator	&		1051419	0					
ANR	1051558	Identifier	y_new		1051419	1					
ANR	1051559	CompoundStatement		30:58:982:982	1051419	1					
ANR	1051560	IfStatement	if ( y_new <= y1 )		1051419	0					
ANR	1051561	Condition	y_new <= y1	1872:20:70998:71008	1051419	0	True				
ANR	1051562	RelationalExpression	y_new <= y1		1051419	0		<=			
ANR	1051563	Identifier	y_new		1051419	0					
ANR	1051564	Identifier	y1		1051419	1					
ANR	1051565	CompoundStatement		31:33:1017:1017	1051419	1					
ANR	1051566	ExpressionStatement	stopx = endp	1873:20:71033:71045	1051419	0	True				
ANR	1051567	AssignmentExpression	stopx = endp		1051419	0		=			
ANR	1051568	Identifier	stopx		1051419	0					
ANR	1051569	Identifier	endp		1051419	1					
ANR	1051570	ExpressionStatement	y1 = y_new	1874:20:71067:71077	1051419	1	True				
ANR	1051571	AssignmentExpression	y1 = y_new		1051419	0		=			
ANR	1051572	Identifier	y1		1051419	0					
ANR	1051573	Identifier	y_new		1051419	1					
ANR	1051574	IfStatement	if ( endp -> diff . x == 0 )		1051419	2					
ANR	1051575	Condition	endp -> diff . x == 0	1875:24:71103:71119	1051419	0	True				
ANR	1051576	EqualityExpression	endp -> diff . x == 0		1051419	0		==			
ANR	1051577	MemberAccess	endp -> diff . x		1051419	0					
ANR	1051578	PtrMemberAccess	endp -> diff		1051419	0					
ANR	1051579	Identifier	endp		1051419	0					
ANR	1051580	Identifier	diff		1051419	1					
ANR	1051581	Identifier	x		1051419	1					
ANR	1051582	PrimaryExpression	0		1051419	1					
ANR	1051583	ExpressionStatement	nx = endp -> start . x	1876:24:71146:71164	1051419	1	True				
ANR	1051584	AssignmentExpression	nx = endp -> start . x		1051419	0		=			
ANR	1051585	Identifier	nx		1051419	0					
ANR	1051586	MemberAccess	endp -> start . x		1051419	1					
ANR	1051587	PtrMemberAccess	endp -> start		1051419	0					
ANR	1051588	Identifier	endp		1051419	0					
ANR	1051589	Identifier	start		1051419	1					
ANR	1051590	Identifier	x		1051419	1					
ANR	1051591	ElseStatement	else		1051419	0					
ANR	1051592	IfStatement	if ( alp -> diff . x == 0 )		1051419	0					
ANR	1051593	Condition	alp -> diff . x == 0	1877:29:71195:71210	1051419	0	True				
ANR	1051594	EqualityExpression	alp -> diff . x == 0		1051419	0		==			
ANR	1051595	MemberAccess	alp -> diff . x		1051419	0					
ANR	1051596	PtrMemberAccess	alp -> diff		1051419	0					
ANR	1051597	Identifier	alp		1051419	0					
ANR	1051598	Identifier	diff		1051419	1					
ANR	1051599	Identifier	x		1051419	1					
ANR	1051600	PrimaryExpression	0		1051419	1					
ANR	1051601	ExpressionStatement	nx = alp -> start . x	1878:24:71237:71254	1051419	1	True				
ANR	1051602	AssignmentExpression	nx = alp -> start . x		1051419	0		=			
ANR	1051603	Identifier	nx		1051419	0					
ANR	1051604	MemberAccess	alp -> start . x		1051419	1					
ANR	1051605	PtrMemberAccess	alp -> start		1051419	0					
ANR	1051606	Identifier	alp		1051419	0					
ANR	1051607	Identifier	start		1051419	1					
ANR	1051608	Identifier	x		1051419	1					
ANR	1051609	ElseStatement	else		1051419	0					
ANR	1051610	CompoundStatement		40:24:1370:1400	1051419	0					
ANR	1051611	IdentifierDeclStatement	"fixed nx0 = AL_X_AT_Y ( endp , y1 ) ;"	1880:24:71307:71338	1051419	0	True				
ANR	1051612	IdentifierDecl	"nx0 = AL_X_AT_Y ( endp , y1 )"		1051419	0					
ANR	1051613	IdentifierDeclType	fixed		1051419	0					
ANR	1051614	Identifier	nx0		1051419	1					
ANR	1051615	AssignmentExpression	"nx0 = AL_X_AT_Y ( endp , y1 )"		1051419	2		=			
ANR	1051616	Identifier	nx0		1051419	0					
ANR	1051617	CallExpression	"AL_X_AT_Y ( endp , y1 )"		1051419	1					
ANR	1051618	Callee	AL_X_AT_Y		1051419	0					
ANR	1051619	Identifier	AL_X_AT_Y		1051419	0					
ANR	1051620	ArgumentList	endp		1051419	1					
ANR	1051621	Argument	endp		1051419	0					
ANR	1051622	Identifier	endp		1051419	0					
ANR	1051623	Argument	y1		1051419	1					
ANR	1051624	Identifier	y1		1051419	0					
ANR	1051625	IdentifierDeclStatement	"fixed nx1 = AL_X_AT_Y ( alp , y1 ) ;"	1881:24:71364:71394	1051419	1	True				
ANR	1051626	IdentifierDecl	"nx1 = AL_X_AT_Y ( alp , y1 )"		1051419	0					
ANR	1051627	IdentifierDeclType	fixed		1051419	0					
ANR	1051628	Identifier	nx1		1051419	1					
ANR	1051629	AssignmentExpression	"nx1 = AL_X_AT_Y ( alp , y1 )"		1051419	2		=			
ANR	1051630	Identifier	nx1		1051419	0					
ANR	1051631	CallExpression	"AL_X_AT_Y ( alp , y1 )"		1051419	1					
ANR	1051632	Callee	AL_X_AT_Y		1051419	0					
ANR	1051633	Identifier	AL_X_AT_Y		1051419	0					
ANR	1051634	ArgumentList	alp		1051419	1					
ANR	1051635	Argument	alp		1051419	0					
ANR	1051636	Identifier	alp		1051419	0					
ANR	1051637	Argument	y1		1051419	1					
ANR	1051638	Identifier	y1		1051419	0					
ANR	1051639	IfStatement	if ( nx0 != nx1 )		1051419	2					
ANR	1051640	Condition	nx0 != nx1	1882:28:71424:71433	1051419	0	True				
ANR	1051641	EqualityExpression	nx0 != nx1		1051419	0		!=			
ANR	1051642	Identifier	nx0		1051419	0					
ANR	1051643	Identifier	nx1		1051419	1					
ANR	1051644	CompoundStatement		47:28:1824:1854	1051419	1					
ANR	1051645	IdentifierDeclStatement	int64_t w0 = coord_weight ( endp ) ;	1887:28:71757:71788	1051419	0	True				
ANR	1051646	IdentifierDecl	w0 = coord_weight ( endp )		1051419	0					
ANR	1051647	IdentifierDeclType	int64_t		1051419	0					
ANR	1051648	Identifier	w0		1051419	1					
ANR	1051649	AssignmentExpression	w0 = coord_weight ( endp )		1051419	2		=			
ANR	1051650	Identifier	w0		1051419	0					
ANR	1051651	CallExpression	coord_weight ( endp )		1051419	1					
ANR	1051652	Callee	coord_weight		1051419	0					
ANR	1051653	Identifier	coord_weight		1051419	0					
ANR	1051654	ArgumentList	endp		1051419	1					
ANR	1051655	Argument	endp		1051419	0					
ANR	1051656	Identifier	endp		1051419	0					
ANR	1051657	IdentifierDeclStatement	int64_t w1 = coord_weight ( alp ) ;	1888:28:71818:71848	1051419	1	True				
ANR	1051658	IdentifierDecl	w1 = coord_weight ( alp )		1051419	0					
ANR	1051659	IdentifierDeclType	int64_t		1051419	0					
ANR	1051660	Identifier	w1		1051419	1					
ANR	1051661	AssignmentExpression	w1 = coord_weight ( alp )		1051419	2		=			
ANR	1051662	Identifier	w1		1051419	0					
ANR	1051663	CallExpression	coord_weight ( alp )		1051419	1					
ANR	1051664	Callee	coord_weight		1051419	0					
ANR	1051665	Identifier	coord_weight		1051419	0					
ANR	1051666	ArgumentList	alp		1051419	1					
ANR	1051667	Argument	alp		1051419	0					
ANR	1051668	Identifier	alp		1051419	0					
ANR	1051669	ExpressionStatement	nx = ( fixed ) ( ( w0 * nx0 + w1 * nx1 ) / ( w0 + w1 ) )	1890:28:71879:71926	1051419	2	True				
ANR	1051670	AssignmentExpression	nx = ( fixed ) ( ( w0 * nx0 + w1 * nx1 ) / ( w0 + w1 ) )		1051419	0		=			
ANR	1051671	Identifier	nx		1051419	0					
ANR	1051672	CastExpression	( fixed ) ( ( w0 * nx0 + w1 * nx1 ) / ( w0 + w1 ) )		1051419	1					
ANR	1051673	CastTarget	fixed		1051419	0					
ANR	1051674	MultiplicativeExpression	( w0 * nx0 + w1 * nx1 ) / ( w0 + w1 )		1051419	1		/			
ANR	1051675	AdditiveExpression	w0 * nx0 + w1 * nx1		1051419	0		+			
ANR	1051676	MultiplicativeExpression	w0 * nx0		1051419	0		*			
ANR	1051677	Identifier	w0		1051419	0					
ANR	1051678	Identifier	nx0		1051419	1					
ANR	1051679	MultiplicativeExpression	w1 * nx1		1051419	1		*			
ANR	1051680	Identifier	w1		1051419	0					
ANR	1051681	Identifier	nx1		1051419	1					
ANR	1051682	AdditiveExpression	w0 + w1		1051419	1		+			
ANR	1051683	Identifier	w0		1051419	0					
ANR	1051684	Identifier	w1		1051419	1					
ANR	1051685	ElseStatement	else		1051419	0					
ANR	1051686	ExpressionStatement	nx = nx0	1892:28:71987:71995	1051419	0	True				
ANR	1051687	AssignmentExpression	nx = nx0		1051419	0		=			
ANR	1051688	Identifier	nx		1051419	0					
ANR	1051689	Identifier	nx0		1051419	1					
ANR	1051690	ExpressionStatement	endp -> x_next = alp -> x_next = nx	1894:20:72039:72070	1051419	3	True				
ANR	1051691	AssignmentExpression	endp -> x_next = alp -> x_next = nx		1051419	0		=			
ANR	1051692	PtrMemberAccess	endp -> x_next		1051419	0					
ANR	1051693	Identifier	endp		1051419	0					
ANR	1051694	Identifier	x_next		1051419	1					
ANR	1051695	AssignmentExpression	alp -> x_next = nx		1051419	1		=			
ANR	1051696	PtrMemberAccess	alp -> x_next		1051419	0					
ANR	1051697	Identifier	alp		1051419	0					
ANR	1051698	Identifier	x_next		1051419	1					
ANR	1051699	Identifier	nx		1051419	1					
ANR	1051700	IfStatement	if ( nx > x )		1051419	1					
ANR	1051701	Condition	nx > x	1898:20:72256:72261	1051419	0	True				
ANR	1051702	RelationalExpression	nx > x		1051419	0		>			
ANR	1051703	Identifier	nx		1051419	0					
ANR	1051704	Identifier	x		1051419	1					
ANR	1051705	ExpressionStatement	x = nx	1899:20:72284:72290	1051419	1	True				
ANR	1051706	AssignmentExpression	x = nx		1051419	0		=			
ANR	1051707	Identifier	x		1051419	0					
ANR	1051708	Identifier	nx		1051419	1					
ANR	1051709	ForStatement	for ( alp = ll -> x_list ; alp != stopx ; alp = alp -> next )		1051419	1					
ANR	1051710	ForInit	alp = ll -> x_list ;	1903:13:72395:72411	1051419	0	True				
ANR	1051711	AssignmentExpression	alp = ll -> x_list		1051419	0		=			
ANR	1051712	Identifier	alp		1051419	0					
ANR	1051713	PtrMemberAccess	ll -> x_list		1051419	1					
ANR	1051714	Identifier	ll		1051419	0					
ANR	1051715	Identifier	x_list		1051419	1					
ANR	1051716	Condition	alp != stopx	1903:31:72413:72424	1051419	1	True				
ANR	1051717	EqualityExpression	alp != stopx		1051419	0		!=			
ANR	1051718	Identifier	alp		1051419	0					
ANR	1051719	Identifier	stopx		1051419	1					
ANR	1051720	AssignmentExpression	alp = alp -> next	1903:45:72427:72441	1051419	2	True	=			
ANR	1051721	Identifier	alp		1051419	0					
ANR	1051722	PtrMemberAccess	alp -> next		1051419	1					
ANR	1051723	Identifier	alp		1051419	0					
ANR	1051724	Identifier	next		1051419	1					
ANR	1051725	ExpressionStatement	"alp -> x_next = AL_X_AT_Y ( alp , y1 )"	1904:12:72456:72488	1051419	3	True				
ANR	1051726	AssignmentExpression	"alp -> x_next = AL_X_AT_Y ( alp , y1 )"		1051419	0		=			
ANR	1051727	PtrMemberAccess	alp -> x_next		1051419	0					
ANR	1051728	Identifier	alp		1051419	0					
ANR	1051729	Identifier	x_next		1051419	1					
ANR	1051730	CallExpression	"AL_X_AT_Y ( alp , y1 )"		1051419	1					
ANR	1051731	Callee	AL_X_AT_Y		1051419	0					
ANR	1051732	Identifier	AL_X_AT_Y		1051419	0					
ANR	1051733	ArgumentList	alp		1051419	1					
ANR	1051734	Argument	alp		1051419	0					
ANR	1051735	Identifier	alp		1051419	0					
ANR	1051736	Argument	y1		1051419	1					
ANR	1051737	Identifier	y1		1051419	0					
ANR	1051738	IfStatement	if ( ll -> x_list != NULL )		1051419	2					
ANR	1051739	Condition	ll -> x_list != NULL	1906:12:72583:72600	1051419	0	True				
ANR	1051740	EqualityExpression	ll -> x_list != NULL		1051419	0		!=			
ANR	1051741	PtrMemberAccess	ll -> x_list		1051419	0					
ANR	1051742	Identifier	ll		1051419	0					
ANR	1051743	Identifier	x_list		1051419	1					
ANR	1051744	Identifier	NULL		1051419	1					
ANR	1051745	CompoundStatement		65:32:2609:2609	1051419	1					
ANR	1051746	ForStatement	for ( ; ; )		1051419	0					
ANR	1051747	CompoundStatement		69:16:2773:2794	1051419	0					
ANR	1051748	IdentifierDeclStatement	fixed x1 ;	1908:16:72644:72652	1051419	0	True				
ANR	1051749	IdentifierDecl	x1		1051419	0					
ANR	1051750	IdentifierDeclType	fixed		1051419	0					
ANR	1051751	Identifier	x1		1051419	1					
ANR	1051752	IdentifierDeclStatement	double sx = 0xbaadf00d ;	1909:16:72670:72692	1051419	1	True				
ANR	1051753	IdentifierDecl	sx = 0xbaadf00d		1051419	0					
ANR	1051754	IdentifierDeclType	double		1051419	0					
ANR	1051755	Identifier	sx		1051419	1					
ANR	1051756	AssignmentExpression	sx = 0xbaadf00d		1051419	2		=			
ANR	1051757	Identifier	sx		1051419	0					
ANR	1051758	PrimaryExpression	0xbaadf00d		1051419	1					
ANR	1051759	IdentifierDeclStatement	"int k = 0xbaadf00d , n ;"	1910:16:72767:72788	1051419	2	True				
ANR	1051760	IdentifierDecl	k = 0xbaadf00d		1051419	0					
ANR	1051761	IdentifierDeclType	int		1051419	0					
ANR	1051762	Identifier	k		1051419	1					
ANR	1051763	AssignmentExpression	k = 0xbaadf00d		1051419	2		=			
ANR	1051764	Identifier	k		1051419	0					
ANR	1051765	PrimaryExpression	0xbaadf00d		1051419	1					
ANR	1051766	IdentifierDecl	n		1051419	1					
ANR	1051767	IdentifierDeclType	int		1051419	0					
ANR	1051768	Identifier	n		1051419	1					
ANR	1051769	ExpressionStatement	endp = ll -> x_list	1912:16:72807:72824	1051419	3	True				
ANR	1051770	AssignmentExpression	endp = ll -> x_list		1051419	0		=			
ANR	1051771	Identifier	endp		1051419	0					
ANR	1051772	PtrMemberAccess	ll -> x_list		1051419	1					
ANR	1051773	Identifier	ll		1051419	0					
ANR	1051774	Identifier	x_list		1051419	1					
ANR	1051775	ExpressionStatement	x1 = endp -> x_next	1913:16:72842:72859	1051419	4	True				
ANR	1051776	AssignmentExpression	x1 = endp -> x_next		1051419	0		=			
ANR	1051777	Identifier	x1		1051419	0					
ANR	1051778	PtrMemberAccess	endp -> x_next		1051419	1					
ANR	1051779	Identifier	endp		1051419	0					
ANR	1051780	Identifier	x_next		1051419	1					
ANR	1051781	ForStatement	"for ( alp = endp -> next ; alp != NULL ; x1 = alp -> x_next , alp = alp -> next )"		1051419	5					
ANR	1051782	ForInit	alp = endp -> next ;	1914:21:72882:72898	1051419	0	True				
ANR	1051783	AssignmentExpression	alp = endp -> next		1051419	0		=			
ANR	1051784	Identifier	alp		1051419	0					
ANR	1051785	PtrMemberAccess	endp -> next		1051419	1					
ANR	1051786	Identifier	endp		1051419	0					
ANR	1051787	Identifier	next		1051419	1					
ANR	1051788	Condition	alp != NULL	1914:39:72900:72910	1051419	1	True				
ANR	1051789	EqualityExpression	alp != NULL		1051419	0		!=			
ANR	1051790	Identifier	alp		1051419	0					
ANR	1051791	Identifier	NULL		1051419	1					
ANR	1051792	Expression	"x1 = alp -> x_next , alp = alp -> next"	1914:52:72913:72945	1051419	2	True				
ANR	1051793	AssignmentExpression	x1 = alp -> x_next		1051419	0		=			
ANR	1051794	Identifier	x1		1051419	0					
ANR	1051795	PtrMemberAccess	alp -> x_next		1051419	1					
ANR	1051796	Identifier	alp		1051419	0					
ANR	1051797	Identifier	x_next		1051419	1					
ANR	1051798	AssignmentExpression	alp = alp -> next		1051419	1		=			
ANR	1051799	Identifier	alp		1051419	0					
ANR	1051800	PtrMemberAccess	alp -> next		1051419	1					
ANR	1051801	Identifier	alp		1051419	0					
ANR	1051802	Identifier	next		1051419	1					
ANR	1051803	IfStatement	if ( alp -> x_next < x1 )		1051419	3					
ANR	1051804	Condition	alp -> x_next < x1	1915:24:72972:72987	1051419	0	True				
ANR	1051805	RelationalExpression	alp -> x_next < x1		1051419	0		<			
ANR	1051806	PtrMemberAccess	alp -> x_next		1051419	0					
ANR	1051807	Identifier	alp		1051419	0					
ANR	1051808	Identifier	x_next		1051419	1					
ANR	1051809	Identifier	x1		1051419	1					
ANR	1051810	BreakStatement	break ;	1916:24:73014:73019	1051419	1	True				
ANR	1051811	IfStatement	if ( alp == NULL )		1051419	6					
ANR	1051812	Condition	alp == NULL	1917:20:73041:73051	1051419	0	True				
ANR	1051813	EqualityExpression	alp == NULL		1051419	0		==			
ANR	1051814	Identifier	alp		1051419	0					
ANR	1051815	Identifier	NULL		1051419	1					
ANR	1051816	BreakStatement	break ;	1918:20:73074:73079	1051419	1	True				
ANR	1051817	ExpressionStatement	x1 = endp -> x_next	1919:16:73097:73114	1051419	7	True				
ANR	1051818	AssignmentExpression	x1 = endp -> x_next		1051419	0		=			
ANR	1051819	Identifier	x1		1051419	0					
ANR	1051820	PtrMemberAccess	endp -> x_next		1051419	1					
ANR	1051821	Identifier	endp		1051419	0					
ANR	1051822	Identifier	x_next		1051419	1					
ANR	1051823	ExpressionStatement	n = 0	1920:16:73132:73137	1051419	8	True				
ANR	1051824	AssignmentExpression	n = 0		1051419	0		=			
ANR	1051825	Identifier	n		1051419	0					
ANR	1051826	PrimaryExpression	0		1051419	1					
ANR	1051827	ForStatement	for ( alp = endp -> next ; alp != NULL ; alp = alp -> next )		1051419	9					
ANR	1051828	ForInit	alp = endp -> next ;	1921:21:73160:73176	1051419	0	True				
ANR	1051829	AssignmentExpression	alp = endp -> next		1051419	0		=			
ANR	1051830	Identifier	alp		1051419	0					
ANR	1051831	PtrMemberAccess	endp -> next		1051419	1					
ANR	1051832	Identifier	endp		1051419	0					
ANR	1051833	Identifier	next		1051419	1					
ANR	1051834	Condition	alp != NULL	1921:39:73178:73188	1051419	1	True				
ANR	1051835	EqualityExpression	alp != NULL		1051419	0		!=			
ANR	1051836	Identifier	alp		1051419	0					
ANR	1051837	Identifier	NULL		1051419	1					
ANR	1051838	AssignmentExpression	alp = alp -> next	1921:52:73191:73205	1051419	2	True	=			
ANR	1051839	Identifier	alp		1051419	0					
ANR	1051840	PtrMemberAccess	alp -> next		1051419	1					
ANR	1051841	Identifier	alp		1051419	0					
ANR	1051842	Identifier	next		1051419	1					
ANR	1051843	CompoundStatement		80:69:3214:3214	1051419	3					
ANR	1051844	ExpressionStatement	x = alp -> x_next	1922:21:73231:73246	1051419	0	True				
ANR	1051845	AssignmentExpression	x = alp -> x_next		1051419	0		=			
ANR	1051846	Identifier	x		1051419	0					
ANR	1051847	PtrMemberAccess	alp -> x_next		1051419	1					
ANR	1051848	Identifier	alp		1051419	0					
ANR	1051849	Identifier	x_next		1051419	1					
ANR	1051850	IfStatement	if ( x < x1 )		1051419	1					
ANR	1051851	Condition	x < x1	1923:25:73273:73278	1051419	0	True				
ANR	1051852	RelationalExpression	x < x1		1051419	0		<			
ANR	1051853	Identifier	x		1051419	0					
ANR	1051854	Identifier	x1		1051419	1					
ANR	1051855	CompoundStatement		82:33:3287:3287	1051419	1					
ANR	1051856	IfStatement	if ( n == 0 )		1051419	0					
ANR	1051857	Condition	n == 0	1924:28:73311:73316	1051419	0	True				
ANR	1051858	EqualityExpression	n == 0		1051419	0		==			
ANR	1051859	Identifier	n		1051419	0					
ANR	1051860	PrimaryExpression	0		1051419	1					
ANR	1051861	CompoundStatement		83:36:3325:3325	1051419	1					
ANR	1051862	IfStatement	if ( endp -> diff . x == 0 )		1051419	0					
ANR	1051863	Condition	endp -> diff . x == 0	1925:32:73353:73369	1051419	0	True				
ANR	1051864	EqualityExpression	endp -> diff . x == 0		1051419	0		==			
ANR	1051865	MemberAccess	endp -> diff . x		1051419	0					
ANR	1051866	PtrMemberAccess	endp -> diff		1051419	0					
ANR	1051867	Identifier	endp		1051419	0					
ANR	1051868	Identifier	diff		1051419	1					
ANR	1051869	Identifier	x		1051419	1					
ANR	1051870	PrimaryExpression	0		1051419	1					
ANR	1051871	CompoundStatement		84:51:3378:3378	1051419	1					
ANR	1051872	ExpressionStatement	k = - 1	1926:32:73406:73412	1051419	0	True				
ANR	1051873	AssignmentExpression	k = - 1		1051419	0		=			
ANR	1051874	Identifier	k		1051419	0					
ANR	1051875	UnaryOperationExpression	- 1		1051419	1					
ANR	1051876	UnaryOperator	-		1051419	0					
ANR	1051877	PrimaryExpression	1		1051419	1					
ANR	1051878	ExpressionStatement	sx = x1	1927:32:73446:73453	1051419	1	True				
ANR	1051879	AssignmentExpression	sx = x1		1051419	0		=			
ANR	1051880	Identifier	sx		1051419	0					
ANR	1051881	Identifier	x1		1051419	1					
ANR	1051882	ElseStatement	else		1051419	0					
ANR	1051883	CompoundStatement		87:35:3496:3496	1051419	0					
ANR	1051884	ExpressionStatement	k = coord_weight ( endp )	1929:32:73524:73546	1051419	0	True				
ANR	1051885	AssignmentExpression	k = coord_weight ( endp )		1051419	0		=			
ANR	1051886	Identifier	k		1051419	0					
ANR	1051887	CallExpression	coord_weight ( endp )		1051419	1					
ANR	1051888	Callee	coord_weight		1051419	0					
ANR	1051889	Identifier	coord_weight		1051419	0					
ANR	1051890	ArgumentList	endp		1051419	1					
ANR	1051891	Argument	endp		1051419	0					
ANR	1051892	Identifier	endp		1051419	0					
ANR	1051893	ExpressionStatement	sx = ( double ) x1 * k	1930:32:73580:73599	1051419	1	True				
ANR	1051894	AssignmentExpression	sx = ( double ) x1 * k		1051419	0		=			
ANR	1051895	Identifier	sx		1051419	0					
ANR	1051896	MultiplicativeExpression	( double ) x1 * k		1051419	1		*			
ANR	1051897	CastExpression	( double ) x1		1051419	0					
ANR	1051898	CastTarget	double		1051419	0					
ANR	1051899	Identifier	x1		1051419	1					
ANR	1051900	Identifier	k		1051419	1					
ANR	1051901	ExpressionStatement	n = 1	1932:28:73659:73664	1051419	1	True				
ANR	1051902	AssignmentExpression	n = 1		1051419	0		=			
ANR	1051903	Identifier	n		1051419	0					
ANR	1051904	PrimaryExpression	1		1051419	1					
ANR	1051905	ExpressionStatement	n ++	1934:24:73716:73719	1051419	1	True				
ANR	1051906	PostIncDecOperationExpression	n ++		1051419	0					
ANR	1051907	Identifier	n		1051419	0					
ANR	1051908	IncDec	++		1051419	1					
ANR	1051909	IfStatement	if ( alp -> diff . x == 0 )		1051419	2					
ANR	1051910	Condition	alp -> diff . x == 0	1935:28:73749:73764	1051419	0	True				
ANR	1051911	EqualityExpression	alp -> diff . x == 0		1051419	0		==			
ANR	1051912	MemberAccess	alp -> diff . x		1051419	0					
ANR	1051913	PtrMemberAccess	alp -> diff		1051419	0					
ANR	1051914	Identifier	alp		1051419	0					
ANR	1051915	Identifier	diff		1051419	1					
ANR	1051916	Identifier	x		1051419	1					
ANR	1051917	PrimaryExpression	0		1051419	1					
ANR	1051918	CompoundStatement		94:46:3773:3773	1051419	1					
ANR	1051919	IfStatement	if ( k <= - 1 )		1051419	0					
ANR	1051920	Condition	k <= - 1	1937:32:73874:73880	1051419	0	True				
ANR	1051921	RelationalExpression	k <= - 1		1051419	0		<=			
ANR	1051922	Identifier	k		1051419	0					
ANR	1051923	UnaryOperationExpression	- 1		1051419	1					
ANR	1051924	UnaryOperator	-		1051419	0					
ANR	1051925	PrimaryExpression	1		1051419	1					
ANR	1051926	CompoundStatement		96:41:3889:3889	1051419	1					
ANR	1051927	ExpressionStatement	sx += x	1938:32:73917:73924	1051419	0	True				
ANR	1051928	AssignmentExpression	sx += x		1051419	0		+=			
ANR	1051929	Identifier	sx		1051419	0					
ANR	1051930	Identifier	x		1051419	1					
ANR	1051931	ExpressionStatement	k --	1939:32:73958:73961	1051419	1	True				
ANR	1051932	PostIncDecOperationExpression	k --		1051419	0					
ANR	1051933	Identifier	k		1051419	0					
ANR	1051934	IncDec	--		1051419	1					
ANR	1051935	ElseStatement	else		1051419	0					
ANR	1051936	CompoundStatement		99:35:4004:4004	1051419	0					
ANR	1051937	ExpressionStatement	k = - 1	1941:32:74032:74038	1051419	0	True				
ANR	1051938	AssignmentExpression	k = - 1		1051419	0		=			
ANR	1051939	Identifier	k		1051419	0					
ANR	1051940	UnaryOperationExpression	- 1		1051419	1					
ANR	1051941	UnaryOperator	-		1051419	0					
ANR	1051942	PrimaryExpression	1		1051419	1					
ANR	1051943	ExpressionStatement	sx = x	1942:32:74072:74078	1051419	1	True				
ANR	1051944	AssignmentExpression	sx = x		1051419	0		=			
ANR	1051945	Identifier	sx		1051419	0					
ANR	1051946	Identifier	x		1051419	1					
ANR	1051947	ElseStatement	else		1051419	0					
ANR	1051948	IfStatement	if ( k > 0 )		1051419	0					
ANR	1051949	Condition	k > 0	1944:35:74145:74149	1051419	0	True				
ANR	1051950	RelationalExpression	k > 0		1051419	0		>			
ANR	1051951	Identifier	k		1051419	0					
ANR	1051952	PrimaryExpression	0		1051419	1					
ANR	1051953	CompoundStatement		104:28:4188:4213	1051419	1					
ANR	1051954	IdentifierDeclStatement	int w = coord_weight ( alp ) ;	1945:28:74182:74207	1051419	0	True				
ANR	1051955	IdentifierDecl	w = coord_weight ( alp )		1051419	0					
ANR	1051956	IdentifierDeclType	int		1051419	0					
ANR	1051957	Identifier	w		1051419	1					
ANR	1051958	AssignmentExpression	w = coord_weight ( alp )		1051419	2		=			
ANR	1051959	Identifier	w		1051419	0					
ANR	1051960	CallExpression	coord_weight ( alp )		1051419	1					
ANR	1051961	Callee	coord_weight		1051419	0					
ANR	1051962	Identifier	coord_weight		1051419	0					
ANR	1051963	ArgumentList	alp		1051419	1					
ANR	1051964	Argument	alp		1051419	0					
ANR	1051965	Identifier	alp		1051419	0					
ANR	1051966	ExpressionStatement	sx += ( double ) x * w	1947:28:74238:74257	1051419	1	True				
ANR	1051967	AssignmentExpression	sx += ( double ) x * w		1051419	0		+=			
ANR	1051968	Identifier	sx		1051419	0					
ANR	1051969	MultiplicativeExpression	( double ) x * w		1051419	1		*			
ANR	1051970	CastExpression	( double ) x		1051419	0					
ANR	1051971	CastTarget	double		1051419	0					
ANR	1051972	Identifier	x		1051419	1					
ANR	1051973	Identifier	w		1051419	1					
ANR	1051974	ExpressionStatement	k += w	1948:28:74287:74293	1051419	2	True				
ANR	1051975	AssignmentExpression	k += w		1051419	0		+=			
ANR	1051976	Identifier	k		1051419	0					
ANR	1051977	Identifier	w		1051419	1					
ANR	1051978	ElseStatement	else		1051419	0					
ANR	1051979	CompoundStatement		109:28:4355:4355	1051419	0					
ANR	1051980	IfStatement	if ( n > 1 )		1051419	0					
ANR	1051981	Condition	n > 1	1951:28:74379:74383	1051419	0	True				
ANR	1051982	RelationalExpression	n > 1		1051419	0		>			
ANR	1051983	Identifier	n		1051419	0					
ANR	1051984	PrimaryExpression	1		1051419	1					
ANR	1051985	CompoundStatement		110:35:4392:4392	1051419	1					
ANR	1051986	ExpressionStatement	k = any_abs ( k )	1952:28:74416:74430	1051419	0	True				
ANR	1051987	AssignmentExpression	k = any_abs ( k )		1051419	0		=			
ANR	1051988	Identifier	k		1051419	0					
ANR	1051989	CallExpression	any_abs ( k )		1051419	1					
ANR	1051990	Callee	any_abs		1051419	0					
ANR	1051991	Identifier	any_abs		1051419	0					
ANR	1051992	ArgumentList	k		1051419	1					
ANR	1051993	Argument	k		1051419	0					
ANR	1051994	Identifier	k		1051419	0					
ANR	1051995	ExpressionStatement	"set_x_next ( endp , alp , ( fixed ) ( ( sx + k / 2 ) / k ) )"	1953:28:74460:74508	1051419	1	True				
ANR	1051996	CallExpression	"set_x_next ( endp , alp , ( fixed ) ( ( sx + k / 2 ) / k ) )"		1051419	0					
ANR	1051997	Callee	set_x_next		1051419	0					
ANR	1051998	Identifier	set_x_next		1051419	0					
ANR	1051999	ArgumentList	endp		1051419	1					
ANR	1052000	Argument	endp		1051419	0					
ANR	1052001	Identifier	endp		1051419	0					
ANR	1052002	Argument	alp		1051419	1					
ANR	1052003	Identifier	alp		1051419	0					
ANR	1052004	Argument	( fixed ) ( ( sx + k / 2 ) / k )		1051419	2					
ANR	1052005	CastExpression	( fixed ) ( ( sx + k / 2 ) / k )		1051419	0					
ANR	1052006	CastTarget	fixed		1051419	0					
ANR	1052007	MultiplicativeExpression	( sx + k / 2 ) / k		1051419	1		/			
ANR	1052008	AdditiveExpression	sx + k / 2		1051419	0		+			
ANR	1052009	Identifier	sx		1051419	0					
ANR	1052010	MultiplicativeExpression	k / 2		1051419	1		/			
ANR	1052011	Identifier	k		1051419	0					
ANR	1052012	PrimaryExpression	2		1051419	1					
ANR	1052013	Identifier	k		1051419	1					
ANR	1052014	ExpressionStatement	x1 = alp -> x_next	1955:24:74560:74576	1051419	1	True				
ANR	1052015	AssignmentExpression	x1 = alp -> x_next		1051419	0		=			
ANR	1052016	Identifier	x1		1051419	0					
ANR	1052017	PtrMemberAccess	alp -> x_next		1051419	1					
ANR	1052018	Identifier	alp		1051419	0					
ANR	1052019	Identifier	x_next		1051419	1					
ANR	1052020	ExpressionStatement	n = 0	1956:24:74602:74607	1051419	2	True				
ANR	1052021	AssignmentExpression	n = 0		1051419	0		=			
ANR	1052022	Identifier	n		1051419	0					
ANR	1052023	PrimaryExpression	0		1051419	1					
ANR	1052024	ExpressionStatement	endp = alp	1957:24:74633:74643	1051419	3	True				
ANR	1052025	AssignmentExpression	endp = alp		1051419	0		=			
ANR	1052026	Identifier	endp		1051419	0					
ANR	1052027	Identifier	alp		1051419	1					
ANR	1052028	IfStatement	if ( n > 1 )		1051419	10					
ANR	1052029	Condition	n > 1	1960:20:74706:74710	1051419	0	True				
ANR	1052030	RelationalExpression	n > 1		1051419	0		>			
ANR	1052031	Identifier	n		1051419	0					
ANR	1052032	PrimaryExpression	1		1051419	1					
ANR	1052033	CompoundStatement		119:27:4719:4719	1051419	1					
ANR	1052034	ExpressionStatement	k = any_abs ( k )	1961:20:74735:74749	1051419	0	True				
ANR	1052035	AssignmentExpression	k = any_abs ( k )		1051419	0		=			
ANR	1052036	Identifier	k		1051419	0					
ANR	1052037	CallExpression	any_abs ( k )		1051419	1					
ANR	1052038	Callee	any_abs		1051419	0					
ANR	1052039	Identifier	any_abs		1051419	0					
ANR	1052040	ArgumentList	k		1051419	1					
ANR	1052041	Argument	k		1051419	0					
ANR	1052042	Identifier	k		1051419	0					
ANR	1052043	ExpressionStatement	"set_x_next ( endp , alp , ( fixed ) ( ( sx + k / 2 ) / k ) )"	1962:20:74771:74819	1051419	1	True				
ANR	1052044	CallExpression	"set_x_next ( endp , alp , ( fixed ) ( ( sx + k / 2 ) / k ) )"		1051419	0					
ANR	1052045	Callee	set_x_next		1051419	0					
ANR	1052046	Identifier	set_x_next		1051419	0					
ANR	1052047	ArgumentList	endp		1051419	1					
ANR	1052048	Argument	endp		1051419	0					
ANR	1052049	Identifier	endp		1051419	0					
ANR	1052050	Argument	alp		1051419	1					
ANR	1052051	Identifier	alp		1051419	0					
ANR	1052052	Argument	( fixed ) ( ( sx + k / 2 ) / k )		1051419	2					
ANR	1052053	CastExpression	( fixed ) ( ( sx + k / 2 ) / k )		1051419	0					
ANR	1052054	CastTarget	fixed		1051419	0					
ANR	1052055	MultiplicativeExpression	( sx + k / 2 ) / k		1051419	1		/			
ANR	1052056	AdditiveExpression	sx + k / 2		1051419	0		+			
ANR	1052057	Identifier	sx		1051419	0					
ANR	1052058	MultiplicativeExpression	k / 2		1051419	1		/			
ANR	1052059	Identifier	k		1051419	0					
ANR	1052060	PrimaryExpression	2		1051419	1					
ANR	1052061	Identifier	k		1051419	1					
ANR	1052062	ElseStatement	else		1051419	0					
ANR	1052063	CompoundStatement		125:11:4880:4880	1051419	0					
ANR	1052064	ForStatement	for ( alp = ll -> x_list ; alp != stopx ; alp = alp -> next )		1051419	0					
ANR	1052065	ForInit	alp = ll -> x_list ;	1968:13:74955:74971	1051419	0	True				
ANR	1052066	AssignmentExpression	alp = ll -> x_list		1051419	0		=			
ANR	1052067	Identifier	alp		1051419	0					
ANR	1052068	PtrMemberAccess	ll -> x_list		1051419	1					
ANR	1052069	Identifier	ll		1051419	0					
ANR	1052070	Identifier	x_list		1051419	1					
ANR	1052071	Condition	alp != stopx	1968:31:74973:74984	1051419	1	True				
ANR	1052072	EqualityExpression	alp != stopx		1051419	0		!=			
ANR	1052073	Identifier	alp		1051419	0					
ANR	1052074	Identifier	stopx		1051419	1					
ANR	1052075	AssignmentExpression	alp = alp -> next	1968:45:74987:75001	1051419	2	True	=			
ANR	1052076	Identifier	alp		1051419	0					
ANR	1052077	PtrMemberAccess	alp -> next		1051419	1					
ANR	1052078	Identifier	alp		1051419	0					
ANR	1052079	Identifier	next		1051419	1					
ANR	1052080	ExpressionStatement	"alp -> x_next = AL_X_AT_Y ( alp , y1 )"	1969:12:75016:75048	1051419	3	True				
ANR	1052081	AssignmentExpression	"alp -> x_next = AL_X_AT_Y ( alp , y1 )"		1051419	0		=			
ANR	1052082	PtrMemberAccess	alp -> x_next		1051419	0					
ANR	1052083	Identifier	alp		1051419	0					
ANR	1052084	Identifier	x_next		1051419	1					
ANR	1052085	CallExpression	"AL_X_AT_Y ( alp , y1 )"		1051419	1					
ANR	1052086	Callee	AL_X_AT_Y		1051419	0					
ANR	1052087	Identifier	AL_X_AT_Y		1051419	0					
ANR	1052088	ArgumentList	alp		1051419	1					
ANR	1052089	Argument	alp		1051419	0					
ANR	1052090	Identifier	alp		1051419	0					
ANR	1052091	Argument	y1		1051419	1					
ANR	1052092	Identifier	y1		1051419	0					
ANR	1052093	IfStatement	if ( gs_debug_c ( 'F' ) )		1051419	4					
ANR	1052094	Condition	gs_debug_c ( 'F' )	1972:8:75077:75091	1051419	0	True				
ANR	1052095	CallExpression	gs_debug_c ( 'F' )		1051419	0					
ANR	1052096	Callee	gs_debug_c		1051419	0					
ANR	1052097	Identifier	gs_debug_c		1051419	0					
ANR	1052098	ArgumentList	'F'		1051419	1					
ANR	1052099	Argument	'F'		1051419	0					
ANR	1052100	PrimaryExpression	'F'		1051419	0					
ANR	1052101	CompoundStatement		131:25:5100:5100	1051419	1					
ANR	1052102	ExpressionStatement	"dmlprintf1 ( ll -> memory , ""[F]after loop: y1=%f\\n"" , fixed2float ( y1 ) )"	1973:8:75104:75169	1051419	0	True				
ANR	1052103	CallExpression	"dmlprintf1 ( ll -> memory , ""[F]after loop: y1=%f\\n"" , fixed2float ( y1 ) )"		1051419	0					
ANR	1052104	Callee	dmlprintf1		1051419	0					
ANR	1052105	Identifier	dmlprintf1		1051419	0					
ANR	1052106	ArgumentList	ll -> memory		1051419	1					
ANR	1052107	Argument	ll -> memory		1051419	0					
ANR	1052108	PtrMemberAccess	ll -> memory		1051419	0					
ANR	1052109	Identifier	ll		1051419	0					
ANR	1052110	Identifier	memory		1051419	1					
ANR	1052111	Argument	"""[F]after loop: y1=%f\\n"""		1051419	1					
ANR	1052112	PrimaryExpression	"""[F]after loop: y1=%f\\n"""		1051419	0					
ANR	1052113	Argument	fixed2float ( y1 )		1051419	2					
ANR	1052114	CallExpression	fixed2float ( y1 )		1051419	0					
ANR	1052115	Callee	fixed2float		1051419	0					
ANR	1052116	Identifier	fixed2float		1051419	0					
ANR	1052117	ArgumentList	y1		1051419	1					
ANR	1052118	Argument	y1		1051419	0					
ANR	1052119	Identifier	y1		1051419	0					
ANR	1052120	ExpressionStatement	"print_line_list ( ll -> memory , ll -> x_list )"	1974:8:75179:75218	1051419	1	True				
ANR	1052121	CallExpression	"print_line_list ( ll -> memory , ll -> x_list )"		1051419	0					
ANR	1052122	Callee	print_line_list		1051419	0					
ANR	1052123	Identifier	print_line_list		1051419	0					
ANR	1052124	ArgumentList	ll -> memory		1051419	1					
ANR	1052125	Argument	ll -> memory		1051419	0					
ANR	1052126	PtrMemberAccess	ll -> memory		1051419	0					
ANR	1052127	Identifier	ll		1051419	0					
ANR	1052128	Identifier	memory		1051419	1					
ANR	1052129	Argument	ll -> x_list		1051419	1					
ANR	1052130	PtrMemberAccess	ll -> x_list		1051419	0					
ANR	1052131	Identifier	ll		1051419	0					
ANR	1052132	Identifier	x_list		1051419	1					
ANR	1052133	ExpressionStatement	* y_top = y1	1977:4:75237:75248	1051419	5	True				
ANR	1052134	AssignmentExpression	* y_top = y1		1051419	0		=			
ANR	1052135	UnaryOperationExpression	* y_top		1051419	0					
ANR	1052136	UnaryOperator	*		1051419	0					
ANR	1052137	Identifier	y_top		1051419	1					
ANR	1052138	Identifier	y1		1051419	1					
ANR	1052139	ReturnType	static void		1051419	1					
ANR	1052140	Identifier	intersect_al		1051419	2					
ANR	1052141	ParameterList	"line_list * ll , fixed y , fixed * y_top , int draw , bool all_bands"		1051419	3					
ANR	1052142	Parameter	line_list * ll	1841:13:69929:69941	1051419	0	True				
ANR	1052143	ParameterType	line_list *		1051419	0					
ANR	1052144	Identifier	ll		1051419	1					
ANR	1052145	Parameter	fixed y	1841:28:69944:69950	1051419	1	True				
ANR	1052146	ParameterType	fixed		1051419	0					
ANR	1052147	Identifier	y		1051419	1					
ANR	1052148	Parameter	fixed * y_top	1841:37:69953:69964	1051419	2	True				
ANR	1052149	ParameterType	fixed *		1051419	0					
ANR	1052150	Identifier	y_top		1051419	1					
ANR	1052151	Parameter	int draw	1841:51:69967:69974	1051419	3	True				
ANR	1052152	ParameterType	int		1051419	0					
ANR	1052153	Identifier	draw		1051419	1					
ANR	1052154	Parameter	bool all_bands	1841:61:69977:69990	1051419	4	True				
ANR	1052155	ParameterType	bool		1051419	0					
ANR	1052156	Identifier	all_bands		1051419	1					
ANR	1052157	CFGEntryNode	ENTRY		1051419		True				
ANR	1052158	CFGExitNode	EXIT		1051419		True				
ANR	1052159	InfiniteForNode	true		1051419		True				
ANR	1052160	Symbol	ll		1051419						
ANR	1052161	Symbol	ll -> memory		1051419						
ANR	1052162	Symbol	endp -> next		1051419						
ANR	1052163	Symbol	y_new		1051419						
ANR	1052164	Symbol	min_fixed		1051419						
ANR	1052165	Symbol	ll -> x_list		1051419						
ANR	1052166	Symbol	w0		1051419						
ANR	1052167	Symbol	alp -> diff . x		1051419						
ANR	1052168	Symbol	w1		1051419						
ANR	1052169	Symbol	gs_debug_c		1051419						
ANR	1052170	Symbol	NULL		1051419						
ANR	1052171	Symbol	alp		1051419						
ANR	1052172	Symbol	* ll		1051419						
ANR	1052173	Symbol	endp -> x_current		1051419						
ANR	1052174	Symbol	nx1		1051419						
ANR	1052175	Symbol	nx0		1051419						
ANR	1052176	Symbol	INCR_EXPR		1051419						
ANR	1052177	Symbol	* y_top		1051419						
ANR	1052178	Symbol	alp -> x_next		1051419						
ANR	1052179	Symbol	endp -> diff		1051419						
ANR	1052180	Symbol	alp -> start . x		1051419						
ANR	1052181	Symbol	* endp		1051419						
ANR	1052182	Symbol	alp -> start		1051419						
ANR	1052183	Symbol	x1		1051419						
ANR	1052184	Symbol	stopx		1051419						
ANR	1052185	Symbol	AL_X_AT_Y		1051419						
ANR	1052186	Symbol	alp -> x_current		1051419						
ANR	1052187	Symbol	endp -> x_next		1051419						
ANR	1052188	Symbol	nx		1051419						
ANR	1052189	Symbol	y1		1051419						
ANR	1052190	Symbol	any_abs		1051419						
ANR	1052191	Symbol	y_top		1051419						
ANR	1052192	Symbol	endp		1051419						
ANR	1052193	Symbol	intersect		1051419						
ANR	1052194	Symbol	fixed2float		1051419						
ANR	1052195	Symbol	sx		1051419						
ANR	1052196	Symbol	coord_weight		1051419						
ANR	1052197	Symbol	endp -> diff . x		1051419						
ANR	1052198	Symbol	alp -> diff		1051419						
ANR	1052199	Symbol	draw		1051419						
ANR	1052200	Symbol	k		1051419						
ANR	1052201	Symbol	n		1051419						
ANR	1052202	Symbol	* alp		1051419						
ANR	1052203	Symbol	alp -> next		1051419						
ANR	1052204	Symbol	endp -> start		1051419						
ANR	1052205	Symbol	w		1051419						
ANR	1052206	Symbol	x		1051419						
ANR	1052207	Symbol	y		1051419						
ANR	1052208	Symbol	find_y		1051419						
ANR	1052209	Symbol	endp -> start . x		1051419						
ANR	1052210	Symbol	all_bands		1051419						
ANR	1052211	Symbol	& y_new		1051419						
ANR	1052212	DeclStmt									
ANR	1052213	Decl							int	int	k
ANR	1052214	DeclStmt									
ANR	1052215	Decl							int	int	v
ANR	1052216	Function	spot_into_trapezoids	2088:0:78242:79155							
ANR	1052217	FunctionDef	"spot_into_trapezoids (line_list * ll , fixed band_mask)"		1052216	0					
ANR	1052218	CompoundStatement		2090:0:78306:79155	1052216	0					
ANR	1052219	Statement	const	2092:4:78379:78383	1052216	0	True				
ANR	1052220	Statement	fill_options	2092:10:78385:78396	1052216	1	True				
ANR	1052221	Statement	*	2092:23:78398:78398	1052216	2	True				
ANR	1052222	Statement	const	2092:25:78400:78404	1052216	3	True				
ANR	1052223	ExpressionStatement	fo = ll -> fo	2092:31:78406:78417	1052216	4	True				
ANR	1052224	AssignmentExpression	fo = ll -> fo		1052216	0		=			
ANR	1052225	Identifier	fo		1052216	0					
ANR	1052226	PtrMemberAccess	ll -> fo		1052216	1					
ANR	1052227	Identifier	ll		1052216	0					
ANR	1052228	Identifier	fo		1052216	1					
ANR	1052229	IfStatement	if ( fo -> is_spotan )		1052216	5					
ANR	1052230	Condition	fo -> is_spotan	2094:8:78428:78440	1052216	0	True				
ANR	1052231	PtrMemberAccess	fo -> is_spotan		1052216	0					
ANR	1052232	Identifier	fo		1052216	0					
ANR	1052233	Identifier	is_spotan		1052216	1					
ANR	1052234	ReturnStatement	"return spot_into_trapezoids__spotan ( ll , band_mask ) ;"	2095:8:78451:78501	1052216	1	True				
ANR	1052235	CallExpression	"spot_into_trapezoids__spotan ( ll , band_mask )"		1052216	0					
ANR	1052236	Callee	spot_into_trapezoids__spotan		1052216	0					
ANR	1052237	Identifier	spot_into_trapezoids__spotan		1052216	0					
ANR	1052238	ArgumentList	ll		1052216	1					
ANR	1052239	Argument	ll		1052216	0					
ANR	1052240	Identifier	ll		1052216	0					
ANR	1052241	Argument	band_mask		1052216	1					
ANR	1052242	Identifier	band_mask		1052216	0					
ANR	1052243	IfStatement	if ( fo -> adjust_below | fo -> adjust_above | fo -> adjust_left | fo -> adjust_right )		1052216	6					
ANR	1052244	Condition	fo -> adjust_below | fo -> adjust_above | fo -> adjust_left | fo -> adjust_right	2096:8:78511:78582	1052216	0	True				
ANR	1052245	InclusiveOrExpression	fo -> adjust_below | fo -> adjust_above | fo -> adjust_left | fo -> adjust_right		1052216	0		|			
ANR	1052246	PtrMemberAccess	fo -> adjust_below		1052216	0					
ANR	1052247	Identifier	fo		1052216	0					
ANR	1052248	Identifier	adjust_below		1052216	1					
ANR	1052249	InclusiveOrExpression	fo -> adjust_above | fo -> adjust_left | fo -> adjust_right		1052216	1		|			
ANR	1052250	PtrMemberAccess	fo -> adjust_above		1052216	0					
ANR	1052251	Identifier	fo		1052216	0					
ANR	1052252	Identifier	adjust_above		1052216	1					
ANR	1052253	InclusiveOrExpression	fo -> adjust_left | fo -> adjust_right		1052216	1		|			
ANR	1052254	PtrMemberAccess	fo -> adjust_left		1052216	0					
ANR	1052255	Identifier	fo		1052216	0					
ANR	1052256	Identifier	adjust_left		1052216	1					
ANR	1052257	PtrMemberAccess	fo -> adjust_right		1052216	1					
ANR	1052258	Identifier	fo		1052216	0					
ANR	1052259	Identifier	adjust_right		1052216	1					
ANR	1052260	CompoundStatement		7:82:278:278	1052216	1					
ANR	1052261	IfStatement	if ( fo -> fill_direct )		1052216	0					
ANR	1052262	Condition	fo -> fill_direct	2097:12:78599:78613	1052216	0	True				
ANR	1052263	PtrMemberAccess	fo -> fill_direct		1052216	0					
ANR	1052264	Identifier	fo		1052216	0					
ANR	1052265	Identifier	fill_direct		1052216	1					
ANR	1052266	ReturnStatement	"return spot_into_trapezoids__aj_fd ( ll , band_mask ) ;"	2098:12:78628:78677	1052216	1	True				
ANR	1052267	CallExpression	"spot_into_trapezoids__aj_fd ( ll , band_mask )"		1052216	0					
ANR	1052268	Callee	spot_into_trapezoids__aj_fd		1052216	0					
ANR	1052269	Identifier	spot_into_trapezoids__aj_fd		1052216	0					
ANR	1052270	ArgumentList	ll		1052216	1					
ANR	1052271	Argument	ll		1052216	0					
ANR	1052272	Identifier	ll		1052216	0					
ANR	1052273	Argument	band_mask		1052216	1					
ANR	1052274	Identifier	band_mask		1052216	0					
ANR	1052275	ElseStatement	else		1052216	0					
ANR	1052276	ReturnStatement	"return spot_into_trapezoids__aj_nd ( ll , band_mask ) ;"	2100:12:78704:78753	1052216	0	True				
ANR	1052277	CallExpression	"spot_into_trapezoids__aj_nd ( ll , band_mask )"		1052216	0					
ANR	1052278	Callee	spot_into_trapezoids__aj_nd		1052216	0					
ANR	1052279	Identifier	spot_into_trapezoids__aj_nd		1052216	0					
ANR	1052280	ArgumentList	ll		1052216	1					
ANR	1052281	Argument	ll		1052216	0					
ANR	1052282	Identifier	ll		1052216	0					
ANR	1052283	Argument	band_mask		1052216	1					
ANR	1052284	Identifier	band_mask		1052216	0					
ANR	1052285	ElseStatement	else		1052216	0					
ANR	1052286	IfStatement	if ( ll -> windings != NULL )		1052216	0					
ANR	1052287	Condition	ll -> windings != NULL	2101:15:78770:78789	1052216	0	True				
ANR	1052288	EqualityExpression	ll -> windings != NULL		1052216	0		!=			
ANR	1052289	PtrMemberAccess	ll -> windings		1052216	0					
ANR	1052290	Identifier	ll		1052216	0					
ANR	1052291	Identifier	windings		1052216	1					
ANR	1052292	Identifier	NULL		1052216	1					
ANR	1052293	CompoundStatement		12:37:485:485	1052216	1					
ANR	1052294	IfStatement	if ( fo -> fill_direct )		1052216	0					
ANR	1052295	Condition	fo -> fill_direct	2102:12:78806:78820	1052216	0	True				
ANR	1052296	PtrMemberAccess	fo -> fill_direct		1052216	0					
ANR	1052297	Identifier	fo		1052216	0					
ANR	1052298	Identifier	fill_direct		1052216	1					
ANR	1052299	ReturnStatement	"return spot_into_trapezoids__nj_fd_sw ( ll , band_mask ) ;"	2103:12:78835:78887	1052216	1	True				
ANR	1052300	CallExpression	"spot_into_trapezoids__nj_fd_sw ( ll , band_mask )"		1052216	0					
ANR	1052301	Callee	spot_into_trapezoids__nj_fd_sw		1052216	0					
ANR	1052302	Identifier	spot_into_trapezoids__nj_fd_sw		1052216	0					
ANR	1052303	ArgumentList	ll		1052216	1					
ANR	1052304	Argument	ll		1052216	0					
ANR	1052305	Identifier	ll		1052216	0					
ANR	1052306	Argument	band_mask		1052216	1					
ANR	1052307	Identifier	band_mask		1052216	0					
ANR	1052308	ElseStatement	else		1052216	0					
ANR	1052309	ReturnStatement	"return spot_into_trapezoids__nj_nd_sw ( ll , band_mask ) ;"	2105:12:78914:78966	1052216	0	True				
ANR	1052310	CallExpression	"spot_into_trapezoids__nj_nd_sw ( ll , band_mask )"		1052216	0					
ANR	1052311	Callee	spot_into_trapezoids__nj_nd_sw		1052216	0					
ANR	1052312	Identifier	spot_into_trapezoids__nj_nd_sw		1052216	0					
ANR	1052313	ArgumentList	ll		1052216	1					
ANR	1052314	Argument	ll		1052216	0					
ANR	1052315	Identifier	ll		1052216	0					
ANR	1052316	Argument	band_mask		1052216	1					
ANR	1052317	Identifier	band_mask		1052216	0					
ANR	1052318	ElseStatement	else		1052216	0					
ANR	1052319	CompoundStatement		17:11:672:672	1052216	0					
ANR	1052320	IfStatement	if ( fo -> fill_direct )		1052216	0					
ANR	1052321	Condition	fo -> fill_direct	2107:12:78993:79007	1052216	0	True				
ANR	1052322	PtrMemberAccess	fo -> fill_direct		1052216	0					
ANR	1052323	Identifier	fo		1052216	0					
ANR	1052324	Identifier	fill_direct		1052216	1					
ANR	1052325	ReturnStatement	"return spot_into_trapezoids__nj_fd ( ll , band_mask ) ;"	2108:12:79022:79071	1052216	1	True				
ANR	1052326	CallExpression	"spot_into_trapezoids__nj_fd ( ll , band_mask )"		1052216	0					
ANR	1052327	Callee	spot_into_trapezoids__nj_fd		1052216	0					
ANR	1052328	Identifier	spot_into_trapezoids__nj_fd		1052216	0					
ANR	1052329	ArgumentList	ll		1052216	1					
ANR	1052330	Argument	ll		1052216	0					
ANR	1052331	Identifier	ll		1052216	0					
ANR	1052332	Argument	band_mask		1052216	1					
ANR	1052333	Identifier	band_mask		1052216	0					
ANR	1052334	ElseStatement	else		1052216	0					
ANR	1052335	ReturnStatement	"return spot_into_trapezoids__nj_nd ( ll , band_mask ) ;"	2110:12:79098:79147	1052216	0	True				
ANR	1052336	CallExpression	"spot_into_trapezoids__nj_nd ( ll , band_mask )"		1052216	0					
ANR	1052337	Callee	spot_into_trapezoids__nj_nd		1052216	0					
ANR	1052338	Identifier	spot_into_trapezoids__nj_nd		1052216	0					
ANR	1052339	ArgumentList	ll		1052216	1					
ANR	1052340	Argument	ll		1052216	0					
ANR	1052341	Identifier	ll		1052216	0					
ANR	1052342	Argument	band_mask		1052216	1					
ANR	1052343	Identifier	band_mask		1052216	0					
ANR	1052344	ReturnType	static int		1052216	1					
ANR	1052345	Identifier	spot_into_trapezoids		1052216	2					
ANR	1052346	ParameterList	"line_list * ll , fixed band_mask"		1052216	3					
ANR	1052347	Parameter	line_list * ll	2089:21:78274:78286	1052216	0	True				
ANR	1052348	ParameterType	line_list *		1052216	0					
ANR	1052349	Identifier	ll		1052216	1					
ANR	1052350	Parameter	fixed band_mask	2089:36:78289:78303	1052216	1	True				
ANR	1052351	ParameterType	fixed		1052216	0					
ANR	1052352	Identifier	band_mask		1052216	1					
ANR	1052353	CFGEntryNode	ENTRY		1052216		True				
ANR	1052354	CFGExitNode	EXIT		1052216		True				
ANR	1052355	Symbol	ll		1052216						
ANR	1052356	Symbol	NULL		1052216						
ANR	1052357	Symbol	* ll		1052216						
ANR	1052358	Symbol	ll -> fo		1052216						
ANR	1052359	Symbol	fo		1052216						
ANR	1052360	Symbol	fo -> is_spotan		1052216						
ANR	1052361	Symbol	fo -> adjust_right		1052216						
ANR	1052362	Symbol	* fo		1052216						
ANR	1052363	Symbol	spot_into_trapezoids__aj_fd		1052216						
ANR	1052364	Symbol	spot_into_trapezoids__nj_nd		1052216						
ANR	1052365	Symbol	ll -> windings		1052216						
ANR	1052366	Symbol	band_mask		1052216						
ANR	1052367	Symbol	spot_into_trapezoids__nj_nd_sw		1052216						
ANR	1052368	Symbol	fo -> adjust_left		1052216						
ANR	1052369	Symbol	spot_into_trapezoids__aj_nd		1052216						
ANR	1052370	Symbol	fo -> adjust_below		1052216						
ANR	1052371	Symbol	spot_into_trapezoids__nj_fd		1052216						
ANR	1052372	Symbol	fo -> fill_direct		1052216						
ANR	1052373	Symbol	spot_into_trapezoids__spotan		1052216						
ANR	1052374	Symbol	fo -> adjust_above		1052216						
ANR	1052375	Symbol	spot_into_trapezoids__nj_fd_sw		1052216						
ANR	1052376	DeclStmt									
ANR	1052377	Decl							int	int	coord_value_t
ANR	1052378	DeclStmt									
ANR	1052379	Decl							struct coord_range_s	struct coord_range_s	coord_range_t
ANR	1052380	ClassDef	coord_range_s	2144:0:80153:80269							
ANR	1052381	DeclStmt									
ANR	1052382	Decl							coord_value_t	coord_value_t	rmin
ANR	1052383	Decl							coord_value_t	coord_value_t	rmax
ANR	1052384	DeclStmt									
ANR	1052385	Decl							coord_range_t	coord_range_t *	prev
ANR	1052386	Decl							coord_range_t	coord_range_t *	next
ANR	1052387	DeclStmt									
ANR	1052388	Decl							coord_range_t	coord_range_t *	alloc_next
ANR	1052389	ClassDef	coord_range_list_s	2152:8:80430:80693							
ANR	1052390	DeclStmt									
ANR	1052391	Decl							gs_memory_t	gs_memory_t *	memory
ANR	1052392	ClassDef	rl_	2154:4:80487:80556							
ANR	1052393	DeclStmt									
ANR	1052394	Decl							coord_range_t	coord_range_t *	first
ANR	1052395	Decl							coord_range_t	coord_range_t *	next
ANR	1052396	Decl							coord_range_t	coord_range_t *	limit
ANR	1052397	DeclStmt									
ANR	1052398	Decl							rl_	rl_	local
ANR	1052399	DeclStmt									
ANR	1052400	Decl							coord_range_t	coord_range_t *	allocated
ANR	1052401	DeclStmt									
ANR	1052402	Decl							coord_range_t	coord_range_t *	freed
ANR	1052403	DeclStmt									
ANR	1052404	Decl							coord_range_t	coord_range_t *	current
ANR	1052405	DeclStmt									
ANR	1052406	Decl							coord_range_t	coord_range_t	first
ANR	1052407	Decl							coord_range_t	coord_range_t	last
ANR	1052408	DeclStmt									
ANR	1052409	Decl							coord_range_list_s	coord_range_list_s	coord_range_list_t
ANR	1052410	Function	range_alloc	2163:0:80696:81227							
ANR	1052411	FunctionDef	range_alloc (coord_range_list_t * pcrl)		1052410	0					
ANR	1052412	CompoundStatement		2165:0:80757:81227	1052410	0					
ANR	1052413	IdentifierDeclStatement	coord_range_t * pcr ;	2166:4:80763:80781	1052410	0	True				
ANR	1052414	IdentifierDecl	* pcr		1052410	0					
ANR	1052415	IdentifierDeclType	coord_range_t *		1052410	0					
ANR	1052416	Identifier	pcr		1052410	1					
ANR	1052417	IfStatement	if ( pcrl -> freed )		1052410	1					
ANR	1052418	Condition	pcrl -> freed	2168:8:80792:80802	1052410	0	True				
ANR	1052419	PtrMemberAccess	pcrl -> freed		1052410	0					
ANR	1052420	Identifier	pcrl		1052410	0					
ANR	1052421	Identifier	freed		1052410	1					
ANR	1052422	CompoundStatement		4:21:47:47	1052410	1					
ANR	1052423	ExpressionStatement	pcr = pcrl -> freed	2169:8:80815:80832	1052410	0	True				
ANR	1052424	AssignmentExpression	pcr = pcrl -> freed		1052410	0		=			
ANR	1052425	Identifier	pcr		1052410	0					
ANR	1052426	PtrMemberAccess	pcrl -> freed		1052410	1					
ANR	1052427	Identifier	pcrl		1052410	0					
ANR	1052428	Identifier	freed		1052410	1					
ANR	1052429	ExpressionStatement	pcrl -> freed = pcr -> next	2170:8:80842:80865	1052410	1	True				
ANR	1052430	AssignmentExpression	pcrl -> freed = pcr -> next		1052410	0		=			
ANR	1052431	PtrMemberAccess	pcrl -> freed		1052410	0					
ANR	1052432	Identifier	pcrl		1052410	0					
ANR	1052433	Identifier	freed		1052410	1					
ANR	1052434	PtrMemberAccess	pcr -> next		1052410	1					
ANR	1052435	Identifier	pcr		1052410	0					
ANR	1052436	Identifier	next		1052410	1					
ANR	1052437	ElseStatement	else		1052410	0					
ANR	1052438	IfStatement	if ( pcrl -> local . next < pcrl -> local . limit )		1052410	0					
ANR	1052439	Condition	pcrl -> local . next < pcrl -> local . limit	2171:15:80882:80917	1052410	0	True				
ANR	1052440	RelationalExpression	pcrl -> local . next < pcrl -> local . limit		1052410	0		<			
ANR	1052441	MemberAccess	pcrl -> local . next		1052410	0					
ANR	1052442	PtrMemberAccess	pcrl -> local		1052410	0					
ANR	1052443	Identifier	pcrl		1052410	0					
ANR	1052444	Identifier	local		1052410	1					
ANR	1052445	Identifier	next		1052410	1					
ANR	1052446	MemberAccess	pcrl -> local . limit		1052410	1					
ANR	1052447	PtrMemberAccess	pcrl -> local		1052410	0					
ANR	1052448	Identifier	pcrl		1052410	0					
ANR	1052449	Identifier	local		1052410	1					
ANR	1052450	Identifier	limit		1052410	1					
ANR	1052451	ExpressionStatement	pcr = pcrl -> local . next ++	2172:8:80928:80952	1052410	1	True				
ANR	1052452	AssignmentExpression	pcr = pcrl -> local . next ++		1052410	0		=			
ANR	1052453	Identifier	pcr		1052410	0					
ANR	1052454	PostIncDecOperationExpression	pcrl -> local . next ++		1052410	1					
ANR	1052455	MemberAccess	pcrl -> local . next		1052410	0					
ANR	1052456	PtrMemberAccess	pcrl -> local		1052410	0					
ANR	1052457	Identifier	pcrl		1052410	0					
ANR	1052458	Identifier	local		1052410	1					
ANR	1052459	Identifier	next		1052410	1					
ANR	1052460	IncDec	++		1052410	1					
ANR	1052461	ElseStatement	else		1052410	0					
ANR	1052462	CompoundStatement		9:9:205:205	1052410	0					
ANR	1052463	ExpressionStatement	"pcr = gs_alloc_struct ( pcrl -> memory , coord_range_t , & st_coord_range , ""range_alloc"" )"	2174:8:80973:81085	1052410	0	True				
ANR	1052464	AssignmentExpression	"pcr = gs_alloc_struct ( pcrl -> memory , coord_range_t , & st_coord_range , ""range_alloc"" )"		1052410	0		=			
ANR	1052465	Identifier	pcr		1052410	0					
ANR	1052466	CallExpression	"gs_alloc_struct ( pcrl -> memory , coord_range_t , & st_coord_range , ""range_alloc"" )"		1052410	1					
ANR	1052467	Callee	gs_alloc_struct		1052410	0					
ANR	1052468	Identifier	gs_alloc_struct		1052410	0					
ANR	1052469	ArgumentList	pcrl -> memory		1052410	1					
ANR	1052470	Argument	pcrl -> memory		1052410	0					
ANR	1052471	PtrMemberAccess	pcrl -> memory		1052410	0					
ANR	1052472	Identifier	pcrl		1052410	0					
ANR	1052473	Identifier	memory		1052410	1					
ANR	1052474	Argument	coord_range_t		1052410	1					
ANR	1052475	Identifier	coord_range_t		1052410	0					
ANR	1052476	Argument	& st_coord_range		1052410	2					
ANR	1052477	UnaryOperationExpression	& st_coord_range		1052410	0					
ANR	1052478	UnaryOperator	&		1052410	0					
ANR	1052479	Identifier	st_coord_range		1052410	1					
ANR	1052480	Argument	"""range_alloc"""		1052410	3					
ANR	1052481	PrimaryExpression	"""range_alloc"""		1052410	0					
ANR	1052482	IfStatement	if ( pcr == 0 )		1052410	1					
ANR	1052483	Condition	pcr == 0	2176:12:81099:81106	1052410	0	True				
ANR	1052484	EqualityExpression	pcr == 0		1052410	0		==			
ANR	1052485	Identifier	pcr		1052410	0					
ANR	1052486	PrimaryExpression	0		1052410	1					
ANR	1052487	ReturnStatement	return 0 ;	2177:12:81121:81129	1052410	1	True				
ANR	1052488	PrimaryExpression	0		1052410	0					
ANR	1052489	ExpressionStatement	pcr -> alloc_next = pcrl -> allocated	2178:8:81139:81172	1052410	2	True				
ANR	1052490	AssignmentExpression	pcr -> alloc_next = pcrl -> allocated		1052410	0		=			
ANR	1052491	PtrMemberAccess	pcr -> alloc_next		1052410	0					
ANR	1052492	Identifier	pcr		1052410	0					
ANR	1052493	Identifier	alloc_next		1052410	1					
ANR	1052494	PtrMemberAccess	pcrl -> allocated		1052410	1					
ANR	1052495	Identifier	pcrl		1052410	0					
ANR	1052496	Identifier	allocated		1052410	1					
ANR	1052497	ExpressionStatement	pcrl -> allocated = pcr	2179:8:81182:81203	1052410	3	True				
ANR	1052498	AssignmentExpression	pcrl -> allocated = pcr		1052410	0		=			
ANR	1052499	PtrMemberAccess	pcrl -> allocated		1052410	0					
ANR	1052500	Identifier	pcrl		1052410	0					
ANR	1052501	Identifier	allocated		1052410	1					
ANR	1052502	Identifier	pcr		1052410	1					
ANR	1052503	ReturnStatement	return pcr ;	2181:4:81215:81225	1052410	2	True				
ANR	1052504	Identifier	pcr		1052410	0					
ANR	1052505	ReturnType	static coord_range_t *		1052410	1					
ANR	1052506	Identifier	range_alloc		1052410	2					
ANR	1052507	ParameterList	coord_range_list_t * pcrl		1052410	3					
ANR	1052508	Parameter	coord_range_list_t * pcrl	2164:12:80731:80754	1052410	0	True				
ANR	1052509	ParameterType	coord_range_list_t *		1052410	0					
ANR	1052510	Identifier	pcrl		1052410	1					
ANR	1052511	CFGEntryNode	ENTRY		1052410		True				
ANR	1052512	CFGExitNode	EXIT		1052410		True				
ANR	1052513	Symbol	* pcrl		1052410						
ANR	1052514	Symbol	pcrl -> local . limit		1052410						
ANR	1052515	Symbol	gs_alloc_struct		1052410						
ANR	1052516	Symbol	* pcr		1052410						
ANR	1052517	Symbol	pcr -> next		1052410						
ANR	1052518	Symbol	pcrl -> memory		1052410						
ANR	1052519	Symbol	coord_range_t		1052410						
ANR	1052520	Symbol	pcrl -> allocated		1052410						
ANR	1052521	Symbol	pcrl -> freed		1052410						
ANR	1052522	Symbol	pcrl -> local		1052410						
ANR	1052523	Symbol	& st_coord_range		1052410						
ANR	1052524	Symbol	pcrl -> local . next		1052410						
ANR	1052525	Symbol	pcrl		1052410						
ANR	1052526	Symbol	pcr -> alloc_next		1052410						
ANR	1052527	Symbol	pcr		1052410						
ANR	1052528	Function	range_delete	2184:0:81230:81520							
ANR	1052529	FunctionDef	"range_delete (coord_range_list_t * pcrl , coord_range_t * pcr)"		1052528	0					
ANR	1052530	CompoundStatement		2186:0:81301:81520	1052528	0					
ANR	1052531	ExpressionStatement	"if_debug3 ( 'Q' , ""[Qr]delete 0x%lx: [%d,%d)\\n"" , ( ulong ) pcr , pcr -> rmin , pcr -> rmax )"	2187:4:81307:81400	1052528	0	True				
ANR	1052532	CallExpression	"if_debug3 ( 'Q' , ""[Qr]delete 0x%lx: [%d,%d)\\n"" , ( ulong ) pcr , pcr -> rmin , pcr -> rmax )"		1052528	0					
ANR	1052533	Callee	if_debug3		1052528	0					
ANR	1052534	Identifier	if_debug3		1052528	0					
ANR	1052535	ArgumentList	'Q'		1052528	1					
ANR	1052536	Argument	'Q'		1052528	0					
ANR	1052537	PrimaryExpression	'Q'		1052528	0					
ANR	1052538	Argument	"""[Qr]delete 0x%lx: [%d,%d)\\n"""		1052528	1					
ANR	1052539	PrimaryExpression	"""[Qr]delete 0x%lx: [%d,%d)\\n"""		1052528	0					
ANR	1052540	Argument	( ulong ) pcr		1052528	2					
ANR	1052541	CastExpression	( ulong ) pcr		1052528	0					
ANR	1052542	CastTarget	ulong		1052528	0					
ANR	1052543	Identifier	pcr		1052528	1					
ANR	1052544	Argument	pcr -> rmin		1052528	3					
ANR	1052545	PtrMemberAccess	pcr -> rmin		1052528	0					
ANR	1052546	Identifier	pcr		1052528	0					
ANR	1052547	Identifier	rmin		1052528	1					
ANR	1052548	Argument	pcr -> rmax		1052528	4					
ANR	1052549	PtrMemberAccess	pcr -> rmax		1052528	0					
ANR	1052550	Identifier	pcr		1052528	0					
ANR	1052551	Identifier	rmax		1052528	1					
ANR	1052552	ExpressionStatement	pcr -> prev -> next = pcr -> next	2189:4:81406:81433	1052528	1	True				
ANR	1052553	AssignmentExpression	pcr -> prev -> next = pcr -> next		1052528	0		=			
ANR	1052554	PtrMemberAccess	pcr -> prev -> next		1052528	0					
ANR	1052555	PtrMemberAccess	pcr -> prev		1052528	0					
ANR	1052556	Identifier	pcr		1052528	0					
ANR	1052557	Identifier	prev		1052528	1					
ANR	1052558	Identifier	next		1052528	1					
ANR	1052559	PtrMemberAccess	pcr -> next		1052528	1					
ANR	1052560	Identifier	pcr		1052528	0					
ANR	1052561	Identifier	next		1052528	1					
ANR	1052562	ExpressionStatement	pcr -> next -> prev = pcr -> prev	2190:4:81439:81466	1052528	2	True				
ANR	1052563	AssignmentExpression	pcr -> next -> prev = pcr -> prev		1052528	0		=			
ANR	1052564	PtrMemberAccess	pcr -> next -> prev		1052528	0					
ANR	1052565	PtrMemberAccess	pcr -> next		1052528	0					
ANR	1052566	Identifier	pcr		1052528	0					
ANR	1052567	Identifier	next		1052528	1					
ANR	1052568	Identifier	prev		1052528	1					
ANR	1052569	PtrMemberAccess	pcr -> prev		1052528	1					
ANR	1052570	Identifier	pcr		1052528	0					
ANR	1052571	Identifier	prev		1052528	1					
ANR	1052572	ExpressionStatement	pcr -> next = pcrl -> freed	2191:4:81472:81495	1052528	3	True				
ANR	1052573	AssignmentExpression	pcr -> next = pcrl -> freed		1052528	0		=			
ANR	1052574	PtrMemberAccess	pcr -> next		1052528	0					
ANR	1052575	Identifier	pcr		1052528	0					
ANR	1052576	Identifier	next		1052528	1					
ANR	1052577	PtrMemberAccess	pcrl -> freed		1052528	1					
ANR	1052578	Identifier	pcrl		1052528	0					
ANR	1052579	Identifier	freed		1052528	1					
ANR	1052580	ExpressionStatement	pcrl -> freed = pcr	2192:4:81501:81518	1052528	4	True				
ANR	1052581	AssignmentExpression	pcrl -> freed = pcr		1052528	0		=			
ANR	1052582	PtrMemberAccess	pcrl -> freed		1052528	0					
ANR	1052583	Identifier	pcrl		1052528	0					
ANR	1052584	Identifier	freed		1052528	1					
ANR	1052585	Identifier	pcr		1052528	1					
ANR	1052586	ReturnType	static void		1052528	1					
ANR	1052587	Identifier	range_delete		1052528	2					
ANR	1052588	ParameterList	"coord_range_list_t * pcrl , coord_range_t * pcr"		1052528	3					
ANR	1052589	Parameter	coord_range_list_t * pcrl	2185:13:81255:81278	1052528	0	True				
ANR	1052590	ParameterType	coord_range_list_t *		1052528	0					
ANR	1052591	Identifier	pcrl		1052528	1					
ANR	1052592	Parameter	coord_range_t * pcr	2185:39:81281:81298	1052528	1	True				
ANR	1052593	ParameterType	coord_range_t *		1052528	0					
ANR	1052594	Identifier	pcr		1052528	1					
ANR	1052595	CFGEntryNode	ENTRY		1052528		True				
ANR	1052596	CFGExitNode	EXIT		1052528		True				
ANR	1052597	Symbol	* pcrl		1052528						
ANR	1052598	Symbol	pcr -> next -> prev		1052528						
ANR	1052599	Symbol	* pcr -> next		1052528						
ANR	1052600	Symbol	* pcr		1052528						
ANR	1052601	Symbol	pcr -> next		1052528						
ANR	1052602	Symbol	* pcr -> prev		1052528						
ANR	1052603	Symbol	pcrl -> freed		1052528						
ANR	1052604	Symbol	pcr -> rmax		1052528						
ANR	1052605	Symbol	pcr -> prev		1052528						
ANR	1052606	Symbol	* * pcr		1052528						
ANR	1052607	Symbol	pcr -> prev -> next		1052528						
ANR	1052608	Symbol	pcrl		1052528						
ANR	1052609	Symbol	pcr		1052528						
ANR	1052610	Symbol	pcr -> rmin		1052528						
ANR	1052611	Function	range_list_clear	2195:0:81523:81723							
ANR	1052612	FunctionDef	range_list_clear (coord_range_list_t * pcrl)		1052611	0					
ANR	1052613	CompoundStatement		2197:0:81578:81723	1052611	0					
ANR	1052614	ExpressionStatement	"if_debug0 ( 'Q' , ""[Qr]clearing\\n"" )"	2198:4:81584:81616	1052611	0	True				
ANR	1052615	CallExpression	"if_debug0 ( 'Q' , ""[Qr]clearing\\n"" )"		1052611	0					
ANR	1052616	Callee	if_debug0		1052611	0					
ANR	1052617	Identifier	if_debug0		1052611	0					
ANR	1052618	ArgumentList	'Q'		1052611	1					
ANR	1052619	Argument	'Q'		1052611	0					
ANR	1052620	PrimaryExpression	'Q'		1052611	0					
ANR	1052621	Argument	"""[Qr]clearing\\n"""		1052611	1					
ANR	1052622	PrimaryExpression	"""[Qr]clearing\\n"""		1052611	0					
ANR	1052623	ExpressionStatement	pcrl -> first . next = & pcrl -> last	2199:4:81622:81652	1052611	1	True				
ANR	1052624	AssignmentExpression	pcrl -> first . next = & pcrl -> last		1052611	0		=			
ANR	1052625	MemberAccess	pcrl -> first . next		1052611	0					
ANR	1052626	PtrMemberAccess	pcrl -> first		1052611	0					
ANR	1052627	Identifier	pcrl		1052611	0					
ANR	1052628	Identifier	first		1052611	1					
ANR	1052629	Identifier	next		1052611	1					
ANR	1052630	UnaryOperationExpression	& pcrl -> last		1052611	1					
ANR	1052631	UnaryOperator	&		1052611	0					
ANR	1052632	PtrMemberAccess	pcrl -> last		1052611	1					
ANR	1052633	Identifier	pcrl		1052611	0					
ANR	1052634	Identifier	last		1052611	1					
ANR	1052635	ExpressionStatement	pcrl -> last . prev = & pcrl -> first	2200:4:81658:81688	1052611	2	True				
ANR	1052636	AssignmentExpression	pcrl -> last . prev = & pcrl -> first		1052611	0		=			
ANR	1052637	MemberAccess	pcrl -> last . prev		1052611	0					
ANR	1052638	PtrMemberAccess	pcrl -> last		1052611	0					
ANR	1052639	Identifier	pcrl		1052611	0					
ANR	1052640	Identifier	last		1052611	1					
ANR	1052641	Identifier	prev		1052611	1					
ANR	1052642	UnaryOperationExpression	& pcrl -> first		1052611	1					
ANR	1052643	UnaryOperator	&		1052611	0					
ANR	1052644	PtrMemberAccess	pcrl -> first		1052611	1					
ANR	1052645	Identifier	pcrl		1052611	0					
ANR	1052646	Identifier	first		1052611	1					
ANR	1052647	ExpressionStatement	pcrl -> current = & pcrl -> last	2201:4:81694:81721	1052611	3	True				
ANR	1052648	AssignmentExpression	pcrl -> current = & pcrl -> last		1052611	0		=			
ANR	1052649	PtrMemberAccess	pcrl -> current		1052611	0					
ANR	1052650	Identifier	pcrl		1052611	0					
ANR	1052651	Identifier	current		1052611	1					
ANR	1052652	UnaryOperationExpression	& pcrl -> last		1052611	1					
ANR	1052653	UnaryOperator	&		1052611	0					
ANR	1052654	PtrMemberAccess	pcrl -> last		1052611	1					
ANR	1052655	Identifier	pcrl		1052611	0					
ANR	1052656	Identifier	last		1052611	1					
ANR	1052657	ReturnType	static void		1052611	1					
ANR	1052658	Identifier	range_list_clear		1052611	2					
ANR	1052659	ParameterList	coord_range_list_t * pcrl		1052611	3					
ANR	1052660	Parameter	coord_range_list_t * pcrl	2196:17:81552:81575	1052611	0	True				
ANR	1052661	ParameterType	coord_range_list_t *		1052611	0					
ANR	1052662	Identifier	pcrl		1052611	1					
ANR	1052663	CFGEntryNode	ENTRY		1052611		True				
ANR	1052664	CFGExitNode	EXIT		1052611		True				
ANR	1052665	Symbol	* pcrl		1052611						
ANR	1052666	Symbol	pcrl -> first . next		1052611						
ANR	1052667	Symbol	pcrl -> last . prev		1052611						
ANR	1052668	Symbol	& pcrl -> last		1052611						
ANR	1052669	Symbol	pcrl		1052611						
ANR	1052670	Symbol	& pcrl -> first		1052611						
ANR	1052671	Symbol	pcrl -> first		1052611						
ANR	1052672	Symbol	pcrl -> current		1052611						
ANR	1052673	Symbol	pcrl -> last		1052611						
ANR	1052674	DeclStmt									
ANR	1052675	Decl							void	void ( coord_range_list_t * )	range_list_clear
ANR	1052676	Function	range_list_init	2208:0:81878:82368							
ANR	1052677	FunctionDef	"range_list_init (coord_range_list_t * pcrl , coord_range_t * pcr_local , int num_local , gs_memory_t * mem)"		1052676	0					
ANR	1052678	CompoundStatement		2211:0:82007:82368	1052676	0					
ANR	1052679	ExpressionStatement	pcrl -> memory = mem	2212:4:82013:82031	1052676	0	True				
ANR	1052680	AssignmentExpression	pcrl -> memory = mem		1052676	0		=			
ANR	1052681	PtrMemberAccess	pcrl -> memory		1052676	0					
ANR	1052682	Identifier	pcrl		1052676	0					
ANR	1052683	Identifier	memory		1052676	1					
ANR	1052684	Identifier	mem		1052676	1					
ANR	1052685	ExpressionStatement	pcrl -> local . first = pcrl -> local . next = pcr_local	2213:4:82037:82085	1052676	1	True				
ANR	1052686	AssignmentExpression	pcrl -> local . first = pcrl -> local . next = pcr_local		1052676	0		=			
ANR	1052687	MemberAccess	pcrl -> local . first		1052676	0					
ANR	1052688	PtrMemberAccess	pcrl -> local		1052676	0					
ANR	1052689	Identifier	pcrl		1052676	0					
ANR	1052690	Identifier	local		1052676	1					
ANR	1052691	Identifier	first		1052676	1					
ANR	1052692	AssignmentExpression	pcrl -> local . next = pcr_local		1052676	1		=			
ANR	1052693	MemberAccess	pcrl -> local . next		1052676	0					
ANR	1052694	PtrMemberAccess	pcrl -> local		1052676	0					
ANR	1052695	Identifier	pcrl		1052676	0					
ANR	1052696	Identifier	local		1052676	1					
ANR	1052697	Identifier	next		1052676	1					
ANR	1052698	Identifier	pcr_local		1052676	1					
ANR	1052699	ExpressionStatement	pcrl -> local . limit = pcr_local + num_local	2214:4:82091:82132	1052676	2	True				
ANR	1052700	AssignmentExpression	pcrl -> local . limit = pcr_local + num_local		1052676	0		=			
ANR	1052701	MemberAccess	pcrl -> local . limit		1052676	0					
ANR	1052702	PtrMemberAccess	pcrl -> local		1052676	0					
ANR	1052703	Identifier	pcrl		1052676	0					
ANR	1052704	Identifier	local		1052676	1					
ANR	1052705	Identifier	limit		1052676	1					
ANR	1052706	AdditiveExpression	pcr_local + num_local		1052676	1		+			
ANR	1052707	Identifier	pcr_local		1052676	0					
ANR	1052708	Identifier	num_local		1052676	1					
ANR	1052709	ExpressionStatement	pcrl -> allocated = pcrl -> freed = 0	2215:4:82138:82171	1052676	3	True				
ANR	1052710	AssignmentExpression	pcrl -> allocated = pcrl -> freed = 0		1052676	0		=			
ANR	1052711	PtrMemberAccess	pcrl -> allocated		1052676	0					
ANR	1052712	Identifier	pcrl		1052676	0					
ANR	1052713	Identifier	allocated		1052676	1					
ANR	1052714	AssignmentExpression	pcrl -> freed = 0		1052676	1		=			
ANR	1052715	PtrMemberAccess	pcrl -> freed		1052676	0					
ANR	1052716	Identifier	pcrl		1052676	0					
ANR	1052717	Identifier	freed		1052676	1					
ANR	1052718	PrimaryExpression	0		1052676	1					
ANR	1052719	ExpressionStatement	pcrl -> first . rmin = pcrl -> first . rmax = MIN_COORD_VALUE	2216:4:82177:82230	1052676	4	True				
ANR	1052720	AssignmentExpression	pcrl -> first . rmin = pcrl -> first . rmax = MIN_COORD_VALUE		1052676	0		=			
ANR	1052721	MemberAccess	pcrl -> first . rmin		1052676	0					
ANR	1052722	PtrMemberAccess	pcrl -> first		1052676	0					
ANR	1052723	Identifier	pcrl		1052676	0					
ANR	1052724	Identifier	first		1052676	1					
ANR	1052725	Identifier	rmin		1052676	1					
ANR	1052726	AssignmentExpression	pcrl -> first . rmax = MIN_COORD_VALUE		1052676	1		=			
ANR	1052727	MemberAccess	pcrl -> first . rmax		1052676	0					
ANR	1052728	PtrMemberAccess	pcrl -> first		1052676	0					
ANR	1052729	Identifier	pcrl		1052676	0					
ANR	1052730	Identifier	first		1052676	1					
ANR	1052731	Identifier	rmax		1052676	1					
ANR	1052732	Identifier	MIN_COORD_VALUE		1052676	1					
ANR	1052733	ExpressionStatement	pcrl -> first . prev = 0	2217:4:82236:82256	1052676	5	True				
ANR	1052734	AssignmentExpression	pcrl -> first . prev = 0		1052676	0		=			
ANR	1052735	MemberAccess	pcrl -> first . prev		1052676	0					
ANR	1052736	PtrMemberAccess	pcrl -> first		1052676	0					
ANR	1052737	Identifier	pcrl		1052676	0					
ANR	1052738	Identifier	first		1052676	1					
ANR	1052739	Identifier	prev		1052676	1					
ANR	1052740	PrimaryExpression	0		1052676	1					
ANR	1052741	ExpressionStatement	pcrl -> last . rmin = pcrl -> last . rmax = MAX_COORD_VALUE	2218:4:82262:82313	1052676	6	True				
ANR	1052742	AssignmentExpression	pcrl -> last . rmin = pcrl -> last . rmax = MAX_COORD_VALUE		1052676	0		=			
ANR	1052743	MemberAccess	pcrl -> last . rmin		1052676	0					
ANR	1052744	PtrMemberAccess	pcrl -> last		1052676	0					
ANR	1052745	Identifier	pcrl		1052676	0					
ANR	1052746	Identifier	last		1052676	1					
ANR	1052747	Identifier	rmin		1052676	1					
ANR	1052748	AssignmentExpression	pcrl -> last . rmax = MAX_COORD_VALUE		1052676	1		=			
ANR	1052749	MemberAccess	pcrl -> last . rmax		1052676	0					
ANR	1052750	PtrMemberAccess	pcrl -> last		1052676	0					
ANR	1052751	Identifier	pcrl		1052676	0					
ANR	1052752	Identifier	last		1052676	1					
ANR	1052753	Identifier	rmax		1052676	1					
ANR	1052754	Identifier	MAX_COORD_VALUE		1052676	1					
ANR	1052755	ExpressionStatement	pcrl -> last . next = 0	2219:4:82319:82338	1052676	7	True				
ANR	1052756	AssignmentExpression	pcrl -> last . next = 0		1052676	0		=			
ANR	1052757	MemberAccess	pcrl -> last . next		1052676	0					
ANR	1052758	PtrMemberAccess	pcrl -> last		1052676	0					
ANR	1052759	Identifier	pcrl		1052676	0					
ANR	1052760	Identifier	last		1052676	1					
ANR	1052761	Identifier	next		1052676	1					
ANR	1052762	PrimaryExpression	0		1052676	1					
ANR	1052763	ExpressionStatement	range_list_clear ( pcrl )	2220:4:82344:82366	1052676	8	True				
ANR	1052764	CallExpression	range_list_clear ( pcrl )		1052676	0					
ANR	1052765	Callee	range_list_clear		1052676	0					
ANR	1052766	Identifier	range_list_clear		1052676	0					
ANR	1052767	ArgumentList	pcrl		1052676	1					
ANR	1052768	Argument	pcrl		1052676	0					
ANR	1052769	Identifier	pcrl		1052676	0					
ANR	1052770	ReturnType	static void		1052676	1					
ANR	1052771	Identifier	range_list_init		1052676	2					
ANR	1052772	ParameterList	"coord_range_list_t * pcrl , coord_range_t * pcr_local , int num_local , gs_memory_t * mem"		1052676	3					
ANR	1052773	Parameter	coord_range_list_t * pcrl	2209:16:81906:81929	1052676	0	True				
ANR	1052774	ParameterType	coord_range_list_t *		1052676	0					
ANR	1052775	Identifier	pcrl		1052676	1					
ANR	1052776	Parameter	coord_range_t * pcr_local	2209:42:81932:81955	1052676	1	True				
ANR	1052777	ParameterType	coord_range_t *		1052676	0					
ANR	1052778	Identifier	pcr_local		1052676	1					
ANR	1052779	Parameter	int num_local	2210:16:81974:81986	1052676	2	True				
ANR	1052780	ParameterType	int		1052676	0					
ANR	1052781	Identifier	num_local		1052676	1					
ANR	1052782	Parameter	gs_memory_t * mem	2210:31:81989:82004	1052676	3	True				
ANR	1052783	ParameterType	gs_memory_t *		1052676	0					
ANR	1052784	Identifier	mem		1052676	1					
ANR	1052785	CFGEntryNode	ENTRY		1052676		True				
ANR	1052786	CFGExitNode	EXIT		1052676		True				
ANR	1052787	Symbol	* pcrl		1052676						
ANR	1052788	Symbol	pcrl -> last . rmax		1052676						
ANR	1052789	Symbol	pcrl -> local . limit		1052676						
ANR	1052790	Symbol	pcrl -> local . first		1052676						
ANR	1052791	Symbol	pcr_local		1052676						
ANR	1052792	Symbol	num_local		1052676						
ANR	1052793	Symbol	MAX_COORD_VALUE		1052676						
ANR	1052794	Symbol	MIN_COORD_VALUE		1052676						
ANR	1052795	Symbol	pcrl -> memory		1052676						
ANR	1052796	Symbol	pcrl -> allocated		1052676						
ANR	1052797	Symbol	pcrl -> last		1052676						
ANR	1052798	Symbol	pcrl -> local		1052676						
ANR	1052799	Symbol	pcrl -> freed		1052676						
ANR	1052800	Symbol	pcrl -> last . rmin		1052676						
ANR	1052801	Symbol	mem		1052676						
ANR	1052802	Symbol	pcrl -> local . next		1052676						
ANR	1052803	Symbol	pcrl -> first . rmax		1052676						
ANR	1052804	Symbol	pcrl -> first . prev		1052676						
ANR	1052805	Symbol	pcrl		1052676						
ANR	1052806	Symbol	pcrl -> first . rmin		1052676						
ANR	1052807	Symbol	pcrl -> first		1052676						
ANR	1052808	Symbol	pcrl -> last . next		1052676						
ANR	1052809	Function	range_list_reset	2224:0:82429:82652							
ANR	1052810	FunctionDef	range_list_reset (coord_range_list_t * pcrl)		1052809	0					
ANR	1052811	CompoundStatement		2226:0:82484:82652	1052809	0					
ANR	1052812	IfStatement	if ( pcrl -> first . next != & pcrl -> last )		1052809	0					
ANR	1052813	Condition	pcrl -> first . next != & pcrl -> last	2227:8:82494:82524	1052809	0	True				
ANR	1052814	EqualityExpression	pcrl -> first . next != & pcrl -> last		1052809	0		!=			
ANR	1052815	MemberAccess	pcrl -> first . next		1052809	0					
ANR	1052816	PtrMemberAccess	pcrl -> first		1052809	0					
ANR	1052817	Identifier	pcrl		1052809	0					
ANR	1052818	Identifier	first		1052809	1					
ANR	1052819	Identifier	next		1052809	1					
ANR	1052820	UnaryOperationExpression	& pcrl -> last		1052809	1					
ANR	1052821	UnaryOperator	&		1052809	0					
ANR	1052822	PtrMemberAccess	pcrl -> last		1052809	1					
ANR	1052823	Identifier	pcrl		1052809	0					
ANR	1052824	Identifier	last		1052809	1					
ANR	1052825	CompoundStatement		2:41:42:42	1052809	1					
ANR	1052826	ExpressionStatement	pcrl -> last . prev -> next = pcrl -> freed	2228:8:82537:82572	1052809	0	True				
ANR	1052827	AssignmentExpression	pcrl -> last . prev -> next = pcrl -> freed		1052809	0		=			
ANR	1052828	PtrMemberAccess	pcrl -> last . prev -> next		1052809	0					
ANR	1052829	MemberAccess	pcrl -> last . prev		1052809	0					
ANR	1052830	PtrMemberAccess	pcrl -> last		1052809	0					
ANR	1052831	Identifier	pcrl		1052809	0					
ANR	1052832	Identifier	last		1052809	1					
ANR	1052833	Identifier	prev		1052809	1					
ANR	1052834	Identifier	next		1052809	1					
ANR	1052835	PtrMemberAccess	pcrl -> freed		1052809	1					
ANR	1052836	Identifier	pcrl		1052809	0					
ANR	1052837	Identifier	freed		1052809	1					
ANR	1052838	ExpressionStatement	pcrl -> freed = pcrl -> first . next	2229:8:82582:82612	1052809	1	True				
ANR	1052839	AssignmentExpression	pcrl -> freed = pcrl -> first . next		1052809	0		=			
ANR	1052840	PtrMemberAccess	pcrl -> freed		1052809	0					
ANR	1052841	Identifier	pcrl		1052809	0					
ANR	1052842	Identifier	freed		1052809	1					
ANR	1052843	MemberAccess	pcrl -> first . next		1052809	1					
ANR	1052844	PtrMemberAccess	pcrl -> first		1052809	0					
ANR	1052845	Identifier	pcrl		1052809	0					
ANR	1052846	Identifier	first		1052809	1					
ANR	1052847	Identifier	next		1052809	1					
ANR	1052848	ExpressionStatement	range_list_clear ( pcrl )	2230:8:82622:82644	1052809	2	True				
ANR	1052849	CallExpression	range_list_clear ( pcrl )		1052809	0					
ANR	1052850	Callee	range_list_clear		1052809	0					
ANR	1052851	Identifier	range_list_clear		1052809	0					
ANR	1052852	ArgumentList	pcrl		1052809	1					
ANR	1052853	Argument	pcrl		1052809	0					
ANR	1052854	Identifier	pcrl		1052809	0					
ANR	1052855	ReturnType	static void		1052809	1					
ANR	1052856	Identifier	range_list_reset		1052809	2					
ANR	1052857	ParameterList	coord_range_list_t * pcrl		1052809	3					
ANR	1052858	Parameter	coord_range_list_t * pcrl	2225:17:82458:82481	1052809	0	True				
ANR	1052859	ParameterType	coord_range_list_t *		1052809	0					
ANR	1052860	Identifier	pcrl		1052809	1					
ANR	1052861	CFGEntryNode	ENTRY		1052809		True				
ANR	1052862	CFGExitNode	EXIT		1052809		True				
ANR	1052863	Symbol	pcrl -> last . prev -> next		1052809						
ANR	1052864	Symbol	pcrl -> freed		1052809						
ANR	1052865	Symbol	* pcrl		1052809						
ANR	1052866	Symbol	pcrl -> first . next		1052809						
ANR	1052867	Symbol	pcrl -> last . prev		1052809						
ANR	1052868	Symbol	* * pcrl		1052809						
ANR	1052869	Symbol	& pcrl -> last		1052809						
ANR	1052870	Symbol	* pcrl -> last		1052809						
ANR	1052871	Symbol	pcrl		1052809						
ANR	1052872	Symbol	* pcrl -> last . prev		1052809						
ANR	1052873	Symbol	pcrl -> first		1052809						
ANR	1052874	Symbol	pcrl -> last		1052809						
ANR	1052875	Function	range_list_rescan	2239:0:82845:82948							
ANR	1052876	FunctionDef	range_list_rescan (coord_range_list_t * pcrl)		1052875	0					
ANR	1052877	CompoundStatement		2241:0:82908:82948	1052875	0					
ANR	1052878	ExpressionStatement	pcrl -> current = pcrl -> first . next	2242:4:82914:82946	1052875	0	True				
ANR	1052879	AssignmentExpression	pcrl -> current = pcrl -> first . next		1052875	0		=			
ANR	1052880	PtrMemberAccess	pcrl -> current		1052875	0					
ANR	1052881	Identifier	pcrl		1052875	0					
ANR	1052882	Identifier	current		1052875	1					
ANR	1052883	MemberAccess	pcrl -> first . next		1052875	1					
ANR	1052884	PtrMemberAccess	pcrl -> first		1052875	0					
ANR	1052885	Identifier	pcrl		1052875	0					
ANR	1052886	Identifier	first		1052875	1					
ANR	1052887	Identifier	next		1052875	1					
ANR	1052888	ReturnType	static inline void		1052875	1					
ANR	1052889	Identifier	range_list_rescan		1052875	2					
ANR	1052890	ParameterList	coord_range_list_t * pcrl		1052875	3					
ANR	1052891	Parameter	coord_range_list_t * pcrl	2240:18:82882:82905	1052875	0	True				
ANR	1052892	ParameterType	coord_range_list_t *		1052875	0					
ANR	1052893	Identifier	pcrl		1052875	1					
ANR	1052894	CFGEntryNode	ENTRY		1052875		True				
ANR	1052895	CFGExitNode	EXIT		1052875		True				
ANR	1052896	Symbol	* pcrl		1052875						
ANR	1052897	Symbol	pcrl -> first . next		1052875						
ANR	1052898	Symbol	pcrl		1052875						
ANR	1052899	Symbol	pcrl -> first		1052875						
ANR	1052900	Symbol	pcrl -> current		1052875						
ANR	1052901	Function	range_list_free	2246:0:82976:83248							
ANR	1052902	FunctionDef	range_list_free (coord_range_list_t * pcrl)		1052901	0					
ANR	1052903	CompoundStatement		2248:0:83030:83248	1052901	0					
ANR	1052904	IdentifierDeclStatement	coord_range_t * pcr ;	2249:4:83036:83054	1052901	0	True				
ANR	1052905	IdentifierDecl	* pcr		1052901	0					
ANR	1052906	IdentifierDeclType	coord_range_t *		1052901	0					
ANR	1052907	Identifier	pcr		1052901	1					
ANR	1052908	WhileStatement	while ( ( pcr = pcrl -> allocated ) != 0 )		1052901	1					
ANR	1052909	Condition	( pcr = pcrl -> allocated ) != 0	2251:11:83068:83095	1052901	0	True				
ANR	1052910	EqualityExpression	( pcr = pcrl -> allocated ) != 0		1052901	0		!=			
ANR	1052911	AssignmentExpression	pcr = pcrl -> allocated		1052901	0		=			
ANR	1052912	Identifier	pcr		1052901	0					
ANR	1052913	PtrMemberAccess	pcrl -> allocated		1052901	1					
ANR	1052914	Identifier	pcrl		1052901	0					
ANR	1052915	Identifier	allocated		1052901	1					
ANR	1052916	PrimaryExpression	0		1052901	1					
ANR	1052917	CompoundStatement		5:8:77:114	1052901	1					
ANR	1052918	IdentifierDeclStatement	coord_range_t * next = pcr -> alloc_next ;	2252:8:83108:83145	1052901	0	True				
ANR	1052919	IdentifierDecl	* next = pcr -> alloc_next		1052901	0					
ANR	1052920	IdentifierDeclType	coord_range_t *		1052901	0					
ANR	1052921	Identifier	next		1052901	1					
ANR	1052922	AssignmentExpression	* next = pcr -> alloc_next		1052901	2		=			
ANR	1052923	Identifier	next		1052901	0					
ANR	1052924	PtrMemberAccess	pcr -> alloc_next		1052901	1					
ANR	1052925	Identifier	pcr		1052901	0					
ANR	1052926	Identifier	alloc_next		1052901	1					
ANR	1052927	ExpressionStatement	"gs_free_object ( pcrl -> memory , pcr , ""range_list_free"" )"	2254:8:83156:83208	1052901	1	True				
ANR	1052928	CallExpression	"gs_free_object ( pcrl -> memory , pcr , ""range_list_free"" )"		1052901	0					
ANR	1052929	Callee	gs_free_object		1052901	0					
ANR	1052930	Identifier	gs_free_object		1052901	0					
ANR	1052931	ArgumentList	pcrl -> memory		1052901	1					
ANR	1052932	Argument	pcrl -> memory		1052901	0					
ANR	1052933	PtrMemberAccess	pcrl -> memory		1052901	0					
ANR	1052934	Identifier	pcrl		1052901	0					
ANR	1052935	Identifier	memory		1052901	1					
ANR	1052936	Argument	pcr		1052901	1					
ANR	1052937	Identifier	pcr		1052901	0					
ANR	1052938	Argument	"""range_list_free"""		1052901	2					
ANR	1052939	PrimaryExpression	"""range_list_free"""		1052901	0					
ANR	1052940	ExpressionStatement	pcrl -> allocated = next	2255:8:83218:83240	1052901	2	True				
ANR	1052941	AssignmentExpression	pcrl -> allocated = next		1052901	0		=			
ANR	1052942	PtrMemberAccess	pcrl -> allocated		1052901	0					
ANR	1052943	Identifier	pcrl		1052901	0					
ANR	1052944	Identifier	allocated		1052901	1					
ANR	1052945	Identifier	next		1052901	1					
ANR	1052946	ReturnType	static void		1052901	1					
ANR	1052947	Identifier	range_list_free		1052901	2					
ANR	1052948	ParameterList	coord_range_list_t * pcrl		1052901	3					
ANR	1052949	Parameter	coord_range_list_t * pcrl	2247:16:83004:83027	1052901	0	True				
ANR	1052950	ParameterType	coord_range_list_t *		1052901	0					
ANR	1052951	Identifier	pcrl		1052901	1					
ANR	1052952	CFGEntryNode	ENTRY		1052901		True				
ANR	1052953	CFGExitNode	EXIT		1052901		True				
ANR	1052954	Symbol	next		1052901						
ANR	1052955	Symbol	* pcrl		1052901						
ANR	1052956	Symbol	pcrl		1052901						
ANR	1052957	Symbol	* pcr		1052901						
ANR	1052958	Symbol	pcr -> alloc_next		1052901						
ANR	1052959	Symbol	pcr		1052901						
ANR	1052960	Symbol	pcrl -> allocated		1052901						
ANR	1052961	Symbol	pcrl -> memory		1052901						
ANR	1052962	Function	range_list_add	2260:0:83270:85617							
ANR	1052963	FunctionDef	"range_list_add (coord_range_list_t * pcrl , coord_value_t rmin , coord_value_t rmax)"		1052962	0					
ANR	1052964	CompoundStatement		2262:0:83362:85617	1052962	0					
ANR	1052965	IdentifierDeclStatement	coord_range_t * pcr = pcrl -> current ;	2263:4:83368:83402	1052962	0	True				
ANR	1052966	IdentifierDecl	* pcr = pcrl -> current		1052962	0					
ANR	1052967	IdentifierDeclType	coord_range_t *		1052962	0					
ANR	1052968	Identifier	pcr		1052962	1					
ANR	1052969	AssignmentExpression	* pcr = pcrl -> current		1052962	2		=			
ANR	1052970	Identifier	pcr		1052962	0					
ANR	1052971	PtrMemberAccess	pcrl -> current		1052962	1					
ANR	1052972	Identifier	pcrl		1052962	0					
ANR	1052973	Identifier	current		1052962	1					
ANR	1052974	IfStatement	if ( rmin >= rmax )		1052962	1					
ANR	1052975	Condition	rmin >= rmax	2265:8:83413:83424	1052962	0	True				
ANR	1052976	RelationalExpression	rmin >= rmax		1052962	0		>=			
ANR	1052977	Identifier	rmin		1052962	0					
ANR	1052978	Identifier	rmax		1052962	1					
ANR	1052979	ReturnStatement	return 0 ;	2266:8:83435:83443	1052962	1	True				
ANR	1052980	PrimaryExpression	0		1052962	0					
ANR	1052981	Label	top :	2271:1:83609:83612	1052962	2	True				
ANR	1052982	Identifier	top		1052962	0					
ANR	1052983	IfStatement	if ( rmax < pcr -> rmin )		1052962	3					
ANR	1052984	Condition	rmax < pcr -> rmin	2272:8:83622:83637	1052962	0	True				
ANR	1052985	RelationalExpression	rmax < pcr -> rmin		1052962	0		<			
ANR	1052986	Identifier	rmax		1052962	0					
ANR	1052987	PtrMemberAccess	pcr -> rmin		1052962	1					
ANR	1052988	Identifier	pcr		1052962	0					
ANR	1052989	Identifier	rmin		1052962	1					
ANR	1052990	CompoundStatement		11:26:277:277	1052962	1					
ANR	1052991	IfStatement	if ( rmin > pcr -> prev -> rmax )		1052962	0					
ANR	1052992	Condition	rmin > pcr -> prev -> rmax	2273:12:83654:83675	1052962	0	True				
ANR	1052993	RelationalExpression	rmin > pcr -> prev -> rmax		1052962	0		>			
ANR	1052994	Identifier	rmin		1052962	0					
ANR	1052995	PtrMemberAccess	pcr -> prev -> rmax		1052962	1					
ANR	1052996	PtrMemberAccess	pcr -> prev		1052962	0					
ANR	1052997	Identifier	pcr		1052962	0					
ANR	1052998	Identifier	prev		1052962	1					
ANR	1052999	Identifier	rmax		1052962	1					
ANR	1053000	GotoStatement	goto ins ;	2274:12:83690:83698	1052962	1	True				
ANR	1053001	Identifier	ins		1052962	0					
ANR	1053002	ExpressionStatement	pcr = pcr -> prev	2275:8:83708:83723	1052962	1	True				
ANR	1053003	AssignmentExpression	pcr = pcr -> prev		1052962	0		=			
ANR	1053004	Identifier	pcr		1052962	0					
ANR	1053005	PtrMemberAccess	pcr -> prev		1052962	1					
ANR	1053006	Identifier	pcr		1052962	0					
ANR	1053007	Identifier	prev		1052962	1					
ANR	1053008	GotoStatement	goto top ;	2276:8:83733:83741	1052962	2	True				
ANR	1053009	Identifier	top		1052962	0					
ANR	1053010	IfStatement	if ( rmin > pcr -> rmax )		1052962	4					
ANR	1053011	Condition	rmin > pcr -> rmax	2278:8:83757:83772	1052962	0	True				
ANR	1053012	RelationalExpression	rmin > pcr -> rmax		1052962	0		>			
ANR	1053013	Identifier	rmin		1052962	0					
ANR	1053014	PtrMemberAccess	pcr -> rmax		1052962	1					
ANR	1053015	Identifier	pcr		1052962	0					
ANR	1053016	Identifier	rmax		1052962	1					
ANR	1053017	CompoundStatement		17:26:412:412	1052962	1					
ANR	1053018	ExpressionStatement	pcr = pcr -> next	2279:8:83785:83800	1052962	0	True				
ANR	1053019	AssignmentExpression	pcr = pcr -> next		1052962	0		=			
ANR	1053020	Identifier	pcr		1052962	0					
ANR	1053021	PtrMemberAccess	pcr -> next		1052962	1					
ANR	1053022	Identifier	pcr		1052962	0					
ANR	1053023	Identifier	next		1052962	1					
ANR	1053024	IfStatement	if ( rmax < pcr -> rmin )		1052962	1					
ANR	1053025	Condition	rmax < pcr -> rmin	2280:12:83814:83829	1052962	0	True				
ANR	1053026	RelationalExpression	rmax < pcr -> rmin		1052962	0		<			
ANR	1053027	Identifier	rmax		1052962	0					
ANR	1053028	PtrMemberAccess	pcr -> rmin		1052962	1					
ANR	1053029	Identifier	pcr		1052962	0					
ANR	1053030	Identifier	rmin		1052962	1					
ANR	1053031	GotoStatement	goto ins ;	2281:12:83844:83852	1052962	1	True				
ANR	1053032	Identifier	ins		1052962	0					
ANR	1053033	GotoStatement	goto top ;	2282:8:83862:83870	1052962	2	True				
ANR	1053034	Identifier	top		1052962	0					
ANR	1053035	WhileStatement	while ( rmin <= pcr -> prev -> rmax )		1052962	5					
ANR	1053036	Condition	rmin <= pcr -> prev -> rmax	2288:11:84038:84060	1052962	0	True				
ANR	1053037	RelationalExpression	rmin <= pcr -> prev -> rmax		1052962	0		<=			
ANR	1053038	Identifier	rmin		1052962	0					
ANR	1053039	PtrMemberAccess	pcr -> prev -> rmax		1052962	1					
ANR	1053040	PtrMemberAccess	pcr -> prev		1052962	0					
ANR	1053041	Identifier	pcr		1052962	0					
ANR	1053042	Identifier	prev		1052962	1					
ANR	1053043	Identifier	rmax		1052962	1					
ANR	1053044	CompoundStatement		27:36:700:700	1052962	1					
ANR	1053045	IfStatement	if ( ! pcr -> prev -> prev )		1052962	0					
ANR	1053046	Condition	! pcr -> prev -> prev	2290:12:84132:84147	1052962	0	True				
ANR	1053047	UnaryOperationExpression	! pcr -> prev -> prev		1052962	0					
ANR	1053048	UnaryOperator	!		1052962	0					
ANR	1053049	PtrMemberAccess	pcr -> prev -> prev		1052962	1					
ANR	1053050	PtrMemberAccess	pcr -> prev		1052962	0					
ANR	1053051	Identifier	pcr		1052962	0					
ANR	1053052	Identifier	prev		1052962	1					
ANR	1053053	Identifier	prev		1052962	1					
ANR	1053054	BreakStatement	break ;	2291:12:84162:84167	1052962	1	True				
ANR	1053055	ExpressionStatement	pcr -> rmin = pcr -> prev -> rmin	2292:8:84227:84254	1052962	1	True				
ANR	1053056	AssignmentExpression	pcr -> rmin = pcr -> prev -> rmin		1052962	0		=			
ANR	1053057	PtrMemberAccess	pcr -> rmin		1052962	0					
ANR	1053058	Identifier	pcr		1052962	0					
ANR	1053059	Identifier	rmin		1052962	1					
ANR	1053060	PtrMemberAccess	pcr -> prev -> rmin		1052962	1					
ANR	1053061	PtrMemberAccess	pcr -> prev		1052962	0					
ANR	1053062	Identifier	pcr		1052962	0					
ANR	1053063	Identifier	prev		1052962	1					
ANR	1053064	Identifier	rmin		1052962	1					
ANR	1053065	ExpressionStatement	"range_delete ( pcrl , pcr -> prev )"	2293:8:84264:84293	1052962	2	True				
ANR	1053066	CallExpression	"range_delete ( pcrl , pcr -> prev )"		1052962	0					
ANR	1053067	Callee	range_delete		1052962	0					
ANR	1053068	Identifier	range_delete		1052962	0					
ANR	1053069	ArgumentList	pcrl		1052962	1					
ANR	1053070	Argument	pcrl		1052962	0					
ANR	1053071	Identifier	pcrl		1052962	0					
ANR	1053072	Argument	pcr -> prev		1052962	1					
ANR	1053073	PtrMemberAccess	pcr -> prev		1052962	0					
ANR	1053074	Identifier	pcr		1052962	0					
ANR	1053075	Identifier	prev		1052962	1					
ANR	1053076	WhileStatement	while ( rmax >= pcr -> next -> rmin )		1052962	6					
ANR	1053077	Condition	rmax >= pcr -> next -> rmin	2295:11:84312:84334	1052962	0	True				
ANR	1053078	RelationalExpression	rmax >= pcr -> next -> rmin		1052962	0		>=			
ANR	1053079	Identifier	rmax		1052962	0					
ANR	1053080	PtrMemberAccess	pcr -> next -> rmin		1052962	1					
ANR	1053081	PtrMemberAccess	pcr -> next		1052962	0					
ANR	1053082	Identifier	pcr		1052962	0					
ANR	1053083	Identifier	next		1052962	1					
ANR	1053084	Identifier	rmin		1052962	1					
ANR	1053085	CompoundStatement		34:36:974:974	1052962	1					
ANR	1053086	IfStatement	if ( ! pcr -> next -> next )		1052962	0					
ANR	1053087	Condition	! pcr -> next -> next	2297:12:84406:84421	1052962	0	True				
ANR	1053088	UnaryOperationExpression	! pcr -> next -> next		1052962	0					
ANR	1053089	UnaryOperator	!		1052962	0					
ANR	1053090	PtrMemberAccess	pcr -> next -> next		1052962	1					
ANR	1053091	PtrMemberAccess	pcr -> next		1052962	0					
ANR	1053092	Identifier	pcr		1052962	0					
ANR	1053093	Identifier	next		1052962	1					
ANR	1053094	Identifier	next		1052962	1					
ANR	1053095	BreakStatement	break ;	2298:12:84436:84441	1052962	1	True				
ANR	1053096	ExpressionStatement	pcr -> rmax = pcr -> next -> rmax	2299:8:84501:84528	1052962	1	True				
ANR	1053097	AssignmentExpression	pcr -> rmax = pcr -> next -> rmax		1052962	0		=			
ANR	1053098	PtrMemberAccess	pcr -> rmax		1052962	0					
ANR	1053099	Identifier	pcr		1052962	0					
ANR	1053100	Identifier	rmax		1052962	1					
ANR	1053101	PtrMemberAccess	pcr -> next -> rmax		1052962	1					
ANR	1053102	PtrMemberAccess	pcr -> next		1052962	0					
ANR	1053103	Identifier	pcr		1052962	0					
ANR	1053104	Identifier	next		1052962	1					
ANR	1053105	Identifier	rmax		1052962	1					
ANR	1053106	ExpressionStatement	"range_delete ( pcrl , pcr -> next )"	2300:8:84538:84567	1052962	2	True				
ANR	1053107	CallExpression	"range_delete ( pcrl , pcr -> next )"		1052962	0					
ANR	1053108	Callee	range_delete		1052962	0					
ANR	1053109	Identifier	range_delete		1052962	0					
ANR	1053110	ArgumentList	pcrl		1052962	1					
ANR	1053111	Argument	pcrl		1052962	0					
ANR	1053112	Identifier	pcrl		1052962	0					
ANR	1053113	Argument	pcr -> next		1052962	1					
ANR	1053114	PtrMemberAccess	pcr -> next		1052962	0					
ANR	1053115	Identifier	pcr		1052962	0					
ANR	1053116	Identifier	next		1052962	1					
ANR	1053117	IfStatement	if ( rmin < pcr -> rmin )		1052962	7					
ANR	1053118	Condition	rmin < pcr -> rmin	2307:8:84813:84828	1052962	0	True				
ANR	1053119	RelationalExpression	rmin < pcr -> rmin		1052962	0		<			
ANR	1053120	Identifier	rmin		1052962	0					
ANR	1053121	PtrMemberAccess	pcr -> rmin		1052962	1					
ANR	1053122	Identifier	pcr		1052962	0					
ANR	1053123	Identifier	rmin		1052962	1					
ANR	1053124	CompoundStatement		46:26:1468:1468	1052962	1					
ANR	1053125	ExpressionStatement	"if_debug3 ( 'Q' , ""[Qr]update 0x%lx => [%d,%d)\\n"" , ( ulong ) pcr , rmin , pcr -> rmax )"	2308:8:84841:84935	1052962	0	True				
ANR	1053126	CallExpression	"if_debug3 ( 'Q' , ""[Qr]update 0x%lx => [%d,%d)\\n"" , ( ulong ) pcr , rmin , pcr -> rmax )"		1052962	0					
ANR	1053127	Callee	if_debug3		1052962	0					
ANR	1053128	Identifier	if_debug3		1052962	0					
ANR	1053129	ArgumentList	'Q'		1052962	1					
ANR	1053130	Argument	'Q'		1052962	0					
ANR	1053131	PrimaryExpression	'Q'		1052962	0					
ANR	1053132	Argument	"""[Qr]update 0x%lx => [%d,%d)\\n"""		1052962	1					
ANR	1053133	PrimaryExpression	"""[Qr]update 0x%lx => [%d,%d)\\n"""		1052962	0					
ANR	1053134	Argument	( ulong ) pcr		1052962	2					
ANR	1053135	CastExpression	( ulong ) pcr		1052962	0					
ANR	1053136	CastTarget	ulong		1052962	0					
ANR	1053137	Identifier	pcr		1052962	1					
ANR	1053138	Argument	rmin		1052962	3					
ANR	1053139	Identifier	rmin		1052962	0					
ANR	1053140	Argument	pcr -> rmax		1052962	4					
ANR	1053141	PtrMemberAccess	pcr -> rmax		1052962	0					
ANR	1053142	Identifier	pcr		1052962	0					
ANR	1053143	Identifier	rmax		1052962	1					
ANR	1053144	ExpressionStatement	pcr -> rmin = rmin	2310:8:84945:84961	1052962	1	True				
ANR	1053145	AssignmentExpression	pcr -> rmin = rmin		1052962	0		=			
ANR	1053146	PtrMemberAccess	pcr -> rmin		1052962	0					
ANR	1053147	Identifier	pcr		1052962	0					
ANR	1053148	Identifier	rmin		1052962	1					
ANR	1053149	Identifier	rmin		1052962	1					
ANR	1053150	IfStatement	if ( rmax > pcr -> rmax )		1052962	8					
ANR	1053151	Condition	rmax > pcr -> rmax	2312:8:84977:84992	1052962	0	True				
ANR	1053152	RelationalExpression	rmax > pcr -> rmax		1052962	0		>			
ANR	1053153	Identifier	rmax		1052962	0					
ANR	1053154	PtrMemberAccess	pcr -> rmax		1052962	1					
ANR	1053155	Identifier	pcr		1052962	0					
ANR	1053156	Identifier	rmax		1052962	1					
ANR	1053157	CompoundStatement		51:26:1632:1632	1052962	1					
ANR	1053158	ExpressionStatement	"if_debug3 ( 'Q' , ""[Qr]update 0x%lx => [%d,%d)\\n"" , ( ulong ) pcr , pcr -> rmin , rmax )"	2313:8:85005:85099	1052962	0	True				
ANR	1053159	CallExpression	"if_debug3 ( 'Q' , ""[Qr]update 0x%lx => [%d,%d)\\n"" , ( ulong ) pcr , pcr -> rmin , rmax )"		1052962	0					
ANR	1053160	Callee	if_debug3		1052962	0					
ANR	1053161	Identifier	if_debug3		1052962	0					
ANR	1053162	ArgumentList	'Q'		1052962	1					
ANR	1053163	Argument	'Q'		1052962	0					
ANR	1053164	PrimaryExpression	'Q'		1052962	0					
ANR	1053165	Argument	"""[Qr]update 0x%lx => [%d,%d)\\n"""		1052962	1					
ANR	1053166	PrimaryExpression	"""[Qr]update 0x%lx => [%d,%d)\\n"""		1052962	0					
ANR	1053167	Argument	( ulong ) pcr		1052962	2					
ANR	1053168	CastExpression	( ulong ) pcr		1052962	0					
ANR	1053169	CastTarget	ulong		1052962	0					
ANR	1053170	Identifier	pcr		1052962	1					
ANR	1053171	Argument	pcr -> rmin		1052962	3					
ANR	1053172	PtrMemberAccess	pcr -> rmin		1052962	0					
ANR	1053173	Identifier	pcr		1052962	0					
ANR	1053174	Identifier	rmin		1052962	1					
ANR	1053175	Argument	rmax		1052962	4					
ANR	1053176	Identifier	rmax		1052962	0					
ANR	1053177	ExpressionStatement	pcr -> rmax = rmax	2315:8:85109:85125	1052962	1	True				
ANR	1053178	AssignmentExpression	pcr -> rmax = rmax		1052962	0		=			
ANR	1053179	PtrMemberAccess	pcr -> rmax		1052962	0					
ANR	1053180	Identifier	pcr		1052962	0					
ANR	1053181	Identifier	rmax		1052962	1					
ANR	1053182	Identifier	rmax		1052962	1					
ANR	1053183	ExpressionStatement	pcrl -> current = pcr -> next	2317:4:85137:85162	1052962	9	True				
ANR	1053184	AssignmentExpression	pcrl -> current = pcr -> next		1052962	0		=			
ANR	1053185	PtrMemberAccess	pcrl -> current		1052962	0					
ANR	1053186	Identifier	pcrl		1052962	0					
ANR	1053187	Identifier	current		1052962	1					
ANR	1053188	PtrMemberAccess	pcr -> next		1052962	1					
ANR	1053189	Identifier	pcr		1052962	0					
ANR	1053190	Identifier	next		1052962	1					
ANR	1053191	ReturnStatement	return 0 ;	2318:4:85168:85176	1052962	10	True				
ANR	1053192	PrimaryExpression	0		1052962	0					
ANR	1053193	Label	ins :	2319:1:85179:85182	1052962	11	True				
ANR	1053194	Identifier	ins		1052962	0					
ANR	1053195	CompoundStatement		61:8:1875:1914	1052962	12					
ANR	1053196	IdentifierDeclStatement	coord_range_t * prev = range_alloc ( pcrl ) ;	2322:8:85238:85277	1052962	0	True				
ANR	1053197	IdentifierDecl	* prev = range_alloc ( pcrl )		1052962	0					
ANR	1053198	IdentifierDeclType	coord_range_t *		1052962	0					
ANR	1053199	Identifier	prev		1052962	1					
ANR	1053200	AssignmentExpression	* prev = range_alloc ( pcrl )		1052962	2		=			
ANR	1053201	Identifier	prev		1052962	0					
ANR	1053202	CallExpression	range_alloc ( pcrl )		1052962	1					
ANR	1053203	Callee	range_alloc		1052962	0					
ANR	1053204	Identifier	range_alloc		1052962	0					
ANR	1053205	ArgumentList	pcrl		1052962	1					
ANR	1053206	Argument	pcrl		1052962	0					
ANR	1053207	Identifier	pcrl		1052962	0					
ANR	1053208	IfStatement	if ( prev == 0 )		1052962	1					
ANR	1053209	Condition	prev == 0	2324:12:85292:85300	1052962	0	True				
ANR	1053210	EqualityExpression	prev == 0		1052962	0		==			
ANR	1053211	Identifier	prev		1052962	0					
ANR	1053212	PrimaryExpression	0		1052962	1					
ANR	1053213	ExpressionStatement	return_error ( gs_error_VMerror )	2325:12:85315:85345	1052962	1	True				
ANR	1053214	CallExpression	return_error ( gs_error_VMerror )		1052962	0					
ANR	1053215	Callee	return_error		1052962	0					
ANR	1053216	Identifier	return_error		1052962	0					
ANR	1053217	ArgumentList	gs_error_VMerror		1052962	1					
ANR	1053218	Argument	gs_error_VMerror		1052962	0					
ANR	1053219	Identifier	gs_error_VMerror		1052962	0					
ANR	1053220	ExpressionStatement	"if_debug3 ( 'Q' , ""[Qr]insert 0x%lx: [%d,%d)\\n"" , ( ulong ) prev , rmin , rmax )"	2326:8:85355:85425	1052962	2	True				
ANR	1053221	CallExpression	"if_debug3 ( 'Q' , ""[Qr]insert 0x%lx: [%d,%d)\\n"" , ( ulong ) prev , rmin , rmax )"		1052962	0					
ANR	1053222	Callee	if_debug3		1052962	0					
ANR	1053223	Identifier	if_debug3		1052962	0					
ANR	1053224	ArgumentList	'Q'		1052962	1					
ANR	1053225	Argument	'Q'		1052962	0					
ANR	1053226	PrimaryExpression	'Q'		1052962	0					
ANR	1053227	Argument	"""[Qr]insert 0x%lx: [%d,%d)\\n"""		1052962	1					
ANR	1053228	PrimaryExpression	"""[Qr]insert 0x%lx: [%d,%d)\\n"""		1052962	0					
ANR	1053229	Argument	( ulong ) prev		1052962	2					
ANR	1053230	CastExpression	( ulong ) prev		1052962	0					
ANR	1053231	CastTarget	ulong		1052962	0					
ANR	1053232	Identifier	prev		1052962	1					
ANR	1053233	Argument	rmin		1052962	3					
ANR	1053234	Identifier	rmin		1052962	0					
ANR	1053235	Argument	rmax		1052962	4					
ANR	1053236	Identifier	rmax		1052962	0					
ANR	1053237	ExpressionStatement	"prev -> rmin = rmin , prev -> rmax = rmax"	2327:8:85435:85471	1052962	3	True				
ANR	1053238	Expression	"prev -> rmin = rmin , prev -> rmax = rmax"		1052962	0					
ANR	1053239	AssignmentExpression	prev -> rmin = rmin		1052962	0		=			
ANR	1053240	PtrMemberAccess	prev -> rmin		1052962	0					
ANR	1053241	Identifier	prev		1052962	0					
ANR	1053242	Identifier	rmin		1052962	1					
ANR	1053243	Identifier	rmin		1052962	1					
ANR	1053244	AssignmentExpression	prev -> rmax = rmax		1052962	1		=			
ANR	1053245	PtrMemberAccess	prev -> rmax		1052962	0					
ANR	1053246	Identifier	prev		1052962	0					
ANR	1053247	Identifier	rmax		1052962	1					
ANR	1053248	Identifier	rmax		1052962	1					
ANR	1053249	ExpressionStatement	( prev -> prev = pcr -> prev ) -> next = prev	2328:8:85481:85518	1052962	4	True				
ANR	1053250	AssignmentExpression	( prev -> prev = pcr -> prev ) -> next = prev		1052962	0		=			
ANR	1053251	PtrMemberAccess	( prev -> prev = pcr -> prev ) -> next		1052962	0					
ANR	1053252	AssignmentExpression	prev -> prev = pcr -> prev		1052962	0		=			
ANR	1053253	PtrMemberAccess	prev -> prev		1052962	0					
ANR	1053254	Identifier	prev		1052962	0					
ANR	1053255	Identifier	prev		1052962	1					
ANR	1053256	PtrMemberAccess	pcr -> prev		1052962	1					
ANR	1053257	Identifier	pcr		1052962	0					
ANR	1053258	Identifier	prev		1052962	1					
ANR	1053259	Identifier	next		1052962	1					
ANR	1053260	Identifier	prev		1052962	1					
ANR	1053261	ExpressionStatement	prev -> next = pcr	2329:8:85528:85544	1052962	5	True				
ANR	1053262	AssignmentExpression	prev -> next = pcr		1052962	0		=			
ANR	1053263	PtrMemberAccess	prev -> next		1052962	0					
ANR	1053264	Identifier	prev		1052962	0					
ANR	1053265	Identifier	next		1052962	1					
ANR	1053266	Identifier	pcr		1052962	1					
ANR	1053267	ExpressionStatement	pcr -> prev = prev	2330:8:85554:85570	1052962	6	True				
ANR	1053268	AssignmentExpression	pcr -> prev = prev		1052962	0		=			
ANR	1053269	PtrMemberAccess	pcr -> prev		1052962	0					
ANR	1053270	Identifier	pcr		1052962	0					
ANR	1053271	Identifier	prev		1052962	1					
ANR	1053272	Identifier	prev		1052962	1					
ANR	1053273	ExpressionStatement	pcrl -> current = pcr	2332:4:85582:85601	1052962	13	True				
ANR	1053274	AssignmentExpression	pcrl -> current = pcr		1052962	0		=			
ANR	1053275	PtrMemberAccess	pcrl -> current		1052962	0					
ANR	1053276	Identifier	pcrl		1052962	0					
ANR	1053277	Identifier	current		1052962	1					
ANR	1053278	Identifier	pcr		1052962	1					
ANR	1053279	ReturnStatement	return 0 ;	2333:4:85607:85615	1052962	14	True				
ANR	1053280	PrimaryExpression	0		1052962	0					
ANR	1053281	ReturnType	static int		1052962	1					
ANR	1053282	Identifier	range_list_add		1052962	2					
ANR	1053283	ParameterList	"coord_range_list_t * pcrl , coord_value_t rmin , coord_value_t rmax"		1052962	3					
ANR	1053284	Parameter	coord_range_list_t * pcrl	2261:15:83296:83319	1052962	0	True				
ANR	1053285	ParameterType	coord_range_list_t *		1052962	0					
ANR	1053286	Identifier	pcrl		1052962	1					
ANR	1053287	Parameter	coord_value_t rmin	2261:41:83322:83339	1052962	1	True				
ANR	1053288	ParameterType	coord_value_t		1052962	0					
ANR	1053289	Identifier	rmin		1052962	1					
ANR	1053290	Parameter	coord_value_t rmax	2261:61:83342:83359	1052962	2	True				
ANR	1053291	ParameterType	coord_value_t		1052962	0					
ANR	1053292	Identifier	rmax		1052962	1					
ANR	1053293	CFGEntryNode	ENTRY		1052962		True				
ANR	1053294	CFGExitNode	EXIT		1052962		True				
ANR	1053295	Symbol	* pcrl		1052962						
ANR	1053296	Symbol	pcr -> next -> rmax		1052962						
ANR	1053297	Symbol	( prev -> prev = pcr -> prev ) -> next		1052962						
ANR	1053298	Symbol	rmax		1052962						
ANR	1053299	Symbol	prev		1052962						
ANR	1053300	Symbol	* pcr -> next		1052962						
ANR	1053301	Symbol	* pcr		1052962						
ANR	1053302	Symbol	* prev		1052962						
ANR	1053303	Symbol	pcr -> next		1052962						
ANR	1053304	Symbol	* pcr -> prev		1052962						
ANR	1053305	Symbol	pcr -> prev		1052962						
ANR	1053306	Symbol	pcr -> rmax		1052962						
ANR	1053307	Symbol	pcr -> prev -> rmax		1052962						
ANR	1053308	Symbol	range_alloc		1052962						
ANR	1053309	Symbol	rmin		1052962						
ANR	1053310	Symbol	pcr -> prev -> prev		1052962						
ANR	1053311	Symbol	pcrl		1052962						
ANR	1053312	Symbol	pcr		1052962						
ANR	1053313	Symbol	prev -> next		1052962						
ANR	1053314	Symbol	prev -> rmax		1052962						
ANR	1053315	Symbol	prev -> prev		1052962						
ANR	1053316	Symbol	pcr -> prev -> rmin		1052962						
ANR	1053317	Symbol	pcrl -> current		1052962						
ANR	1053318	Symbol	pcr -> next -> rmin		1052962						
ANR	1053319	Symbol	gs_error_VMerror		1052962						
ANR	1053320	Symbol	* * pcr		1052962						
ANR	1053321	Symbol	prev -> rmin		1052962						
ANR	1053322	Symbol	pcr -> next -> next		1052962						
ANR	1053323	Symbol	pcr -> rmin		1052962						
ANR	1053324	Function	merge_ranges	2341:0:85800:87668							
ANR	1053325	FunctionDef	"merge_ranges (coord_range_list_t * pcrl , const line_list * ll , fixed y_min , fixed y_top)"		1053324	0					
ANR	1053326	CompoundStatement		2343:0:85897:87668	1053324	0					
ANR	1053327	IdentifierDeclStatement	"active_line * alp , * nlp ;"	2344:4:85903:85925	1053324	0	True				
ANR	1053328	IdentifierDecl	* alp		1053324	0					
ANR	1053329	IdentifierDeclType	active_line *		1053324	0					
ANR	1053330	Identifier	alp		1053324	1					
ANR	1053331	IdentifierDecl	* nlp		1053324	1					
ANR	1053332	IdentifierDeclType	active_line *		1053324	0					
ANR	1053333	Identifier	nlp		1053324	1					
ANR	1053334	IdentifierDeclStatement	int code = 0 ;	2345:4:85931:85943	1053324	1	True				
ANR	1053335	IdentifierDecl	code = 0		1053324	0					
ANR	1053336	IdentifierDeclType	int		1053324	0					
ANR	1053337	Identifier	code		1053324	1					
ANR	1053338	AssignmentExpression	code = 0		1053324	2		=			
ANR	1053339	Identifier	code		1053324	0					
ANR	1053340	PrimaryExpression	0		1053324	1					
ANR	1053341	ExpressionStatement	range_list_rescan ( pcrl )	2347:4:85950:85973	1053324	2	True				
ANR	1053342	CallExpression	range_list_rescan ( pcrl )		1053324	0					
ANR	1053343	Callee	range_list_rescan		1053324	0					
ANR	1053344	Identifier	range_list_rescan		1053324	0					
ANR	1053345	ArgumentList	pcrl		1053324	1					
ANR	1053346	Argument	pcrl		1053324	0					
ANR	1053347	Identifier	pcrl		1053324	0					
ANR	1053348	ForStatement	for ( alp = ll -> x_list ; alp != 0 && code >= 0 ; alp = nlp )		1053324	3					
ANR	1053349	ForInit	alp = ll -> x_list ;	2348:9:85984:86000	1053324	0	True				
ANR	1053350	AssignmentExpression	alp = ll -> x_list		1053324	0		=			
ANR	1053351	Identifier	alp		1053324	0					
ANR	1053352	PtrMemberAccess	ll -> x_list		1053324	1					
ANR	1053353	Identifier	ll		1053324	0					
ANR	1053354	Identifier	x_list		1053324	1					
ANR	1053355	Condition	alp != 0 && code >= 0	2348:27:86002:86022	1053324	1	True				
ANR	1053356	AndExpression	alp != 0 && code >= 0		1053324	0		&&			
ANR	1053357	EqualityExpression	alp != 0		1053324	0		!=			
ANR	1053358	Identifier	alp		1053324	0					
ANR	1053359	PrimaryExpression	0		1053324	1					
ANR	1053360	RelationalExpression	code >= 0		1053324	1		>=			
ANR	1053361	Identifier	code		1053324	0					
ANR	1053362	PrimaryExpression	0		1053324	1					
ANR	1053363	AssignmentExpression	alp = nlp	2348:50:86025:86033	1053324	2	True	=			
ANR	1053364	Identifier	alp		1053324	0					
ANR	1053365	Identifier	nlp		1053324	1					
ANR	1053366	CompoundStatement		10:8:312:356	1053324	3					
ANR	1053367	IdentifierDeclStatement	"fixed x0 = alp -> x_current , x1 , xt ;"	2349:8:86046:86079	1053324	0	True				
ANR	1053368	IdentifierDecl	x0 = alp -> x_current		1053324	0					
ANR	1053369	IdentifierDeclType	fixed		1053324	0					
ANR	1053370	Identifier	x0		1053324	1					
ANR	1053371	AssignmentExpression	x0 = alp -> x_current		1053324	2		=			
ANR	1053372	Identifier	x0		1053324	0					
ANR	1053373	PtrMemberAccess	alp -> x_current		1053324	1					
ANR	1053374	Identifier	alp		1053324	0					
ANR	1053375	Identifier	x_current		1053324	1					
ANR	1053376	IdentifierDecl	x1		1053324	1					
ANR	1053377	IdentifierDeclType	fixed		1053324	0					
ANR	1053378	Identifier	x1		1053324	1					
ANR	1053379	IdentifierDecl	xt		1053324	2					
ANR	1053380	IdentifierDeclType	fixed		1053324	0					
ANR	1053381	Identifier	xt		1053324	1					
ANR	1053382	IdentifierDeclStatement	bool forth = ( alp -> direction == DIR_UP || ! alp -> fi . curve ) ;	2350:8:86089:86146	1053324	1	True				
ANR	1053383	IdentifierDecl	forth = ( alp -> direction == DIR_UP || ! alp -> fi . curve )		1053324	0					
ANR	1053384	IdentifierDeclType	bool		1053324	0					
ANR	1053385	Identifier	forth		1053324	1					
ANR	1053386	AssignmentExpression	forth = ( alp -> direction == DIR_UP || ! alp -> fi . curve )		1053324	2		=			
ANR	1053387	Identifier	forth		1053324	0					
ANR	1053388	OrExpression	alp -> direction == DIR_UP || ! alp -> fi . curve		1053324	1		||			
ANR	1053389	EqualityExpression	alp -> direction == DIR_UP		1053324	0		==			
ANR	1053390	PtrMemberAccess	alp -> direction		1053324	0					
ANR	1053391	Identifier	alp		1053324	0					
ANR	1053392	Identifier	direction		1053324	1					
ANR	1053393	Identifier	DIR_UP		1053324	1					
ANR	1053394	UnaryOperationExpression	! alp -> fi . curve		1053324	1					
ANR	1053395	UnaryOperator	!		1053324	0					
ANR	1053396	MemberAccess	alp -> fi . curve		1053324	1					
ANR	1053397	PtrMemberAccess	alp -> fi		1053324	0					
ANR	1053398	Identifier	alp		1053324	0					
ANR	1053399	Identifier	fi		1053324	1					
ANR	1053400	Identifier	curve		1053324	1					
ANR	1053401	IdentifierDeclStatement	fixed xe = ( forth ? alp -> fi . x3 : alp -> fi . x0 ) ;	2351:8:86156:86200	1053324	2	True				
ANR	1053402	IdentifierDecl	xe = ( forth ? alp -> fi . x3 : alp -> fi . x0 )		1053324	0					
ANR	1053403	IdentifierDeclType	fixed		1053324	0					
ANR	1053404	Identifier	xe		1053324	1					
ANR	1053405	AssignmentExpression	xe = ( forth ? alp -> fi . x3 : alp -> fi . x0 )		1053324	2		=			
ANR	1053406	Identifier	xe		1053324	0					
ANR	1053407	ConditionalExpression	forth ? alp -> fi . x3 : alp -> fi . x0		1053324	1					
ANR	1053408	Condition	forth		1053324	0					
ANR	1053409	Identifier	forth		1053324	0					
ANR	1053410	MemberAccess	alp -> fi . x3		1053324	1					
ANR	1053411	PtrMemberAccess	alp -> fi		1053324	0					
ANR	1053412	Identifier	alp		1053324	0					
ANR	1053413	Identifier	fi		1053324	1					
ANR	1053414	Identifier	x3		1053324	1					
ANR	1053415	MemberAccess	alp -> fi . x0		1053324	2					
ANR	1053416	PtrMemberAccess	alp -> fi		1053324	0					
ANR	1053417	Identifier	alp		1053324	0					
ANR	1053418	Identifier	fi		1053324	1					
ANR	1053419	Identifier	x0		1053324	1					
ANR	1053420	IdentifierDeclStatement	fixed ye = ( forth ? alp -> fi . y3 : alp -> fi . y0 ) ;	2352:8:86210:86254	1053324	3	True				
ANR	1053421	IdentifierDecl	ye = ( forth ? alp -> fi . y3 : alp -> fi . y0 )		1053324	0					
ANR	1053422	IdentifierDeclType	fixed		1053324	0					
ANR	1053423	Identifier	ye		1053324	1					
ANR	1053424	AssignmentExpression	ye = ( forth ? alp -> fi . y3 : alp -> fi . y0 )		1053324	2		=			
ANR	1053425	Identifier	ye		1053324	0					
ANR	1053426	ConditionalExpression	forth ? alp -> fi . y3 : alp -> fi . y0		1053324	1					
ANR	1053427	Condition	forth		1053324	0					
ANR	1053428	Identifier	forth		1053324	0					
ANR	1053429	MemberAccess	alp -> fi . y3		1053324	1					
ANR	1053430	PtrMemberAccess	alp -> fi		1053324	0					
ANR	1053431	Identifier	alp		1053324	0					
ANR	1053432	Identifier	fi		1053324	1					
ANR	1053433	Identifier	y3		1053324	1					
ANR	1053434	MemberAccess	alp -> fi . y0		1053324	2					
ANR	1053435	PtrMemberAccess	alp -> fi		1053324	0					
ANR	1053436	Identifier	alp		1053324	0					
ANR	1053437	Identifier	fi		1053324	1					
ANR	1053438	Identifier	y0		1053324	1					
ANR	1053439	ExpressionStatement	nlp = alp -> next	2354:8:86265:86280	1053324	4	True				
ANR	1053440	AssignmentExpression	nlp = alp -> next		1053324	0		=			
ANR	1053441	Identifier	nlp		1053324	0					
ANR	1053442	PtrMemberAccess	alp -> next		1053324	1					
ANR	1053443	Identifier	alp		1053324	0					
ANR	1053444	Identifier	next		1053324	1					
ANR	1053445	IfStatement	if ( alp -> start . y < y_min )		1053324	5					
ANR	1053446	Condition	alp -> start . y < y_min	2355:12:86294:86313	1053324	0	True				
ANR	1053447	RelationalExpression	alp -> start . y < y_min		1053324	0		<			
ANR	1053448	MemberAccess	alp -> start . y		1053324	0					
ANR	1053449	PtrMemberAccess	alp -> start		1053324	0					
ANR	1053450	Identifier	alp		1053324	0					
ANR	1053451	Identifier	start		1053324	1					
ANR	1053452	Identifier	y		1053324	1					
ANR	1053453	Identifier	y_min		1053324	1					
ANR	1053454	ContinueStatement	continue ;	2356:12:86328:86336	1053324	1	True				
ANR	1053455	IfStatement	if ( alp -> monotonic_x && alp -> monotonic_y && ye <= y_top )		1053324	6					
ANR	1053456	Condition	alp -> monotonic_x && alp -> monotonic_y && ye <= y_top	2357:12:86350:86400	1053324	0	True				
ANR	1053457	AndExpression	alp -> monotonic_x && alp -> monotonic_y && ye <= y_top		1053324	0		&&			
ANR	1053458	PtrMemberAccess	alp -> monotonic_x		1053324	0					
ANR	1053459	Identifier	alp		1053324	0					
ANR	1053460	Identifier	monotonic_x		1053324	1					
ANR	1053461	AndExpression	alp -> monotonic_y && ye <= y_top		1053324	1		&&			
ANR	1053462	PtrMemberAccess	alp -> monotonic_y		1053324	0					
ANR	1053463	Identifier	alp		1053324	0					
ANR	1053464	Identifier	monotonic_y		1053324	1					
ANR	1053465	RelationalExpression	ye <= y_top		1053324	1		<=			
ANR	1053466	Identifier	ye		1053324	0					
ANR	1053467	Identifier	y_top		1053324	1					
ANR	1053468	CompoundStatement		15:65:505:505	1053324	1					
ANR	1053469	ExpressionStatement	x1 = xe	2358:12:86417:86424	1053324	0	True				
ANR	1053470	AssignmentExpression	x1 = xe		1053324	0		=			
ANR	1053471	Identifier	x1		1053324	0					
ANR	1053472	Identifier	xe		1053324	1					
ANR	1053473	IfStatement	if ( x0 > x1 )		1053324	1					
ANR	1053474	Condition	x0 > x1	2359:16:86442:86448	1053324	0	True				
ANR	1053475	RelationalExpression	x0 > x1		1053324	0		>			
ANR	1053476	Identifier	x0		1053324	0					
ANR	1053477	Identifier	x1		1053324	1					
ANR	1053478	ExpressionStatement	"xt = x0 , x0 = x1 , x1 = xt"	2360:16:86467:86492	1053324	1	True				
ANR	1053479	Expression	"xt = x0 , x0 = x1 , x1 = xt"		1053324	0					
ANR	1053480	AssignmentExpression	xt = x0		1053324	0		=			
ANR	1053481	Identifier	xt		1053324	0					
ANR	1053482	Identifier	x0		1053324	1					
ANR	1053483	Expression	"x0 = x1 , x1 = xt"		1053324	1					
ANR	1053484	AssignmentExpression	x0 = x1		1053324	0		=			
ANR	1053485	Identifier	x0		1053324	0					
ANR	1053486	Identifier	x1		1053324	1					
ANR	1053487	AssignmentExpression	x1 = xt		1053324	1		=			
ANR	1053488	Identifier	x1		1053324	0					
ANR	1053489	Identifier	xt		1053324	1					
ANR	1053490	ExpressionStatement	"code = range_list_add ( pcrl , fixed2int_pixround ( x0 - ll -> fo -> adjust_left ) , fixed2int_rounded ( x1 + ll -> fo -> adjust_right ) )"	2361:12:86506:86693	1053324	2	True				
ANR	1053491	AssignmentExpression	"code = range_list_add ( pcrl , fixed2int_pixround ( x0 - ll -> fo -> adjust_left ) , fixed2int_rounded ( x1 + ll -> fo -> adjust_right ) )"		1053324	0		=			
ANR	1053492	Identifier	code		1053324	0					
ANR	1053493	CallExpression	"range_list_add ( pcrl , fixed2int_pixround ( x0 - ll -> fo -> adjust_left ) , fixed2int_rounded ( x1 + ll -> fo -> adjust_right ) )"		1053324	1					
ANR	1053494	Callee	range_list_add		1053324	0					
ANR	1053495	Identifier	range_list_add		1053324	0					
ANR	1053496	ArgumentList	pcrl		1053324	1					
ANR	1053497	Argument	pcrl		1053324	0					
ANR	1053498	Identifier	pcrl		1053324	0					
ANR	1053499	Argument	fixed2int_pixround ( x0 - ll -> fo -> adjust_left )		1053324	1					
ANR	1053500	CallExpression	fixed2int_pixround ( x0 - ll -> fo -> adjust_left )		1053324	0					
ANR	1053501	Callee	fixed2int_pixround		1053324	0					
ANR	1053502	Identifier	fixed2int_pixround		1053324	0					
ANR	1053503	ArgumentList	x0 - ll -> fo -> adjust_left		1053324	1					
ANR	1053504	Argument	x0 - ll -> fo -> adjust_left		1053324	0					
ANR	1053505	AdditiveExpression	x0 - ll -> fo -> adjust_left		1053324	0		-			
ANR	1053506	Identifier	x0		1053324	0					
ANR	1053507	PtrMemberAccess	ll -> fo -> adjust_left		1053324	1					
ANR	1053508	PtrMemberAccess	ll -> fo		1053324	0					
ANR	1053509	Identifier	ll		1053324	0					
ANR	1053510	Identifier	fo		1053324	1					
ANR	1053511	Identifier	adjust_left		1053324	1					
ANR	1053512	Argument	fixed2int_rounded ( x1 + ll -> fo -> adjust_right )		1053324	2					
ANR	1053513	CallExpression	fixed2int_rounded ( x1 + ll -> fo -> adjust_right )		1053324	0					
ANR	1053514	Callee	fixed2int_rounded		1053324	0					
ANR	1053515	Identifier	fixed2int_rounded		1053324	0					
ANR	1053516	ArgumentList	x1 + ll -> fo -> adjust_right		1053324	1					
ANR	1053517	Argument	x1 + ll -> fo -> adjust_right		1053324	0					
ANR	1053518	AdditiveExpression	x1 + ll -> fo -> adjust_right		1053324	0		+			
ANR	1053519	Identifier	x1		1053324	0					
ANR	1053520	PtrMemberAccess	ll -> fo -> adjust_right		1053324	1					
ANR	1053521	PtrMemberAccess	ll -> fo		1053324	0					
ANR	1053522	Identifier	ll		1053324	0					
ANR	1053523	Identifier	fo		1053324	1					
ANR	1053524	Identifier	adjust_right		1053324	1					
ANR	1053525	ExpressionStatement	alp -> more_flattened = false	2364:12:86707:86734	1053324	3	True				
ANR	1053526	AssignmentExpression	alp -> more_flattened = false		1053324	0		=			
ANR	1053527	PtrMemberAccess	alp -> more_flattened		1053324	0					
ANR	1053528	Identifier	alp		1053324	0					
ANR	1053529	Identifier	more_flattened		1053324	1					
ANR	1053530	Identifier	false		1053324	1					
ANR	1053531	ElseStatement	else		1053324	0					
ANR	1053532	CompoundStatement		23:15:887:887	1053324	0					
ANR	1053533	ExpressionStatement	x1 = x0	2366:12:86799:86806	1053324	0	True				
ANR	1053534	AssignmentExpression	x1 = x0		1053324	0		=			
ANR	1053535	Identifier	x1		1053324	0					
ANR	1053536	Identifier	x0		1053324	1					
ANR	1053537	ForStatement	for ( ; ; )		1053324	1					
ANR	1053538	CompoundStatement		25:21:931:931	1053324	0					
ANR	1053539	IfStatement	if ( alp -> end . y <= y_top )		1053324	0					
ANR	1053540	Condition	alp -> end . y <= y_top	2368:20:86851:86869	1053324	0	True				
ANR	1053541	RelationalExpression	alp -> end . y <= y_top		1053324	0		<=			
ANR	1053542	MemberAccess	alp -> end . y		1053324	0					
ANR	1053543	PtrMemberAccess	alp -> end		1053324	0					
ANR	1053544	Identifier	alp		1053324	0					
ANR	1053545	Identifier	end		1053324	1					
ANR	1053546	Identifier	y		1053324	1					
ANR	1053547	Identifier	y_top		1053324	1					
ANR	1053548	ExpressionStatement	xt = alp -> end . x	2369:20:86892:86907	1053324	1	True				
ANR	1053549	AssignmentExpression	xt = alp -> end . x		1053324	0		=			
ANR	1053550	Identifier	xt		1053324	0					
ANR	1053551	MemberAccess	alp -> end . x		1053324	1					
ANR	1053552	PtrMemberAccess	alp -> end		1053324	0					
ANR	1053553	Identifier	alp		1053324	0					
ANR	1053554	Identifier	end		1053324	1					
ANR	1053555	Identifier	x		1053324	1					
ANR	1053556	ElseStatement	else		1053324	0					
ANR	1053557	ExpressionStatement	"xt = AL_X_AT_Y ( alp , y_top )"	2371:20:86950:86976	1053324	0	True				
ANR	1053558	AssignmentExpression	"xt = AL_X_AT_Y ( alp , y_top )"		1053324	0		=			
ANR	1053559	Identifier	xt		1053324	0					
ANR	1053560	CallExpression	"AL_X_AT_Y ( alp , y_top )"		1053324	1					
ANR	1053561	Callee	AL_X_AT_Y		1053324	0					
ANR	1053562	Identifier	AL_X_AT_Y		1053324	0					
ANR	1053563	ArgumentList	alp		1053324	1					
ANR	1053564	Argument	alp		1053324	0					
ANR	1053565	Identifier	alp		1053324	0					
ANR	1053566	Argument	y_top		1053324	1					
ANR	1053567	Identifier	y_top		1053324	0					
ANR	1053568	ExpressionStatement	"x0 = min ( x0 , xt )"	2372:16:86994:87010	1053324	1	True				
ANR	1053569	AssignmentExpression	"x0 = min ( x0 , xt )"		1053324	0		=			
ANR	1053570	Identifier	x0		1053324	0					
ANR	1053571	CallExpression	"min ( x0 , xt )"		1053324	1					
ANR	1053572	Callee	min		1053324	0					
ANR	1053573	Identifier	min		1053324	0					
ANR	1053574	ArgumentList	x0		1053324	1					
ANR	1053575	Argument	x0		1053324	0					
ANR	1053576	Identifier	x0		1053324	0					
ANR	1053577	Argument	xt		1053324	1					
ANR	1053578	Identifier	xt		1053324	0					
ANR	1053579	ExpressionStatement	"x1 = max ( x1 , xt )"	2373:16:87028:87044	1053324	2	True				
ANR	1053580	AssignmentExpression	"x1 = max ( x1 , xt )"		1053324	0		=			
ANR	1053581	Identifier	x1		1053324	0					
ANR	1053582	CallExpression	"max ( x1 , xt )"		1053324	1					
ANR	1053583	Callee	max		1053324	0					
ANR	1053584	Identifier	max		1053324	0					
ANR	1053585	ArgumentList	x1		1053324	1					
ANR	1053586	Argument	x1		1053324	0					
ANR	1053587	Identifier	x1		1053324	0					
ANR	1053588	Argument	xt		1053324	1					
ANR	1053589	Identifier	xt		1053324	0					
ANR	1053590	IfStatement	if ( ! alp -> more_flattened || alp -> end . y > y_top )		1053324	3					
ANR	1053591	Condition	! alp -> more_flattened || alp -> end . y > y_top	2374:20:87066:87107	1053324	0	True				
ANR	1053592	OrExpression	! alp -> more_flattened || alp -> end . y > y_top		1053324	0		||			
ANR	1053593	UnaryOperationExpression	! alp -> more_flattened		1053324	0					
ANR	1053594	UnaryOperator	!		1053324	0					
ANR	1053595	PtrMemberAccess	alp -> more_flattened		1053324	1					
ANR	1053596	Identifier	alp		1053324	0					
ANR	1053597	Identifier	more_flattened		1053324	1					
ANR	1053598	RelationalExpression	alp -> end . y > y_top		1053324	1		>			
ANR	1053599	MemberAccess	alp -> end . y		1053324	0					
ANR	1053600	PtrMemberAccess	alp -> end		1053324	0					
ANR	1053601	Identifier	alp		1053324	0					
ANR	1053602	Identifier	end		1053324	1					
ANR	1053603	Identifier	y		1053324	1					
ANR	1053604	Identifier	y_top		1053324	1					
ANR	1053605	BreakStatement	break ;	2375:20:87130:87135	1053324	1	True				
ANR	1053606	ExpressionStatement	"code = step_al ( alp , true )"	2376:16:87153:87178	1053324	4	True				
ANR	1053607	AssignmentExpression	"code = step_al ( alp , true )"		1053324	0		=			
ANR	1053608	Identifier	code		1053324	0					
ANR	1053609	CallExpression	"step_al ( alp , true )"		1053324	1					
ANR	1053610	Callee	step_al		1053324	0					
ANR	1053611	Identifier	step_al		1053324	0					
ANR	1053612	ArgumentList	alp		1053324	1					
ANR	1053613	Argument	alp		1053324	0					
ANR	1053614	Identifier	alp		1053324	0					
ANR	1053615	Argument	true		1053324	1					
ANR	1053616	Identifier	true		1053324	0					
ANR	1053617	IfStatement	if ( code < 0 )		1053324	5					
ANR	1053618	Condition	code < 0	2377:20:87200:87207	1053324	0	True				
ANR	1053619	RelationalExpression	code < 0		1053324	0		<			
ANR	1053620	Identifier	code		1053324	0					
ANR	1053621	PrimaryExpression	0		1053324	1					
ANR	1053622	ReturnStatement	return code ;	2378:20:87230:87241	1053324	1	True				
ANR	1053623	Identifier	code		1053324	0					
ANR	1053624	IfStatement	if ( alp -> end . y < alp -> start . y )		1053324	6					
ANR	1053625	Condition	alp -> end . y < alp -> start . y	2379:20:87263:87287	1053324	0	True				
ANR	1053626	RelationalExpression	alp -> end . y < alp -> start . y		1053324	0		<			
ANR	1053627	MemberAccess	alp -> end . y		1053324	0					
ANR	1053628	PtrMemberAccess	alp -> end		1053324	0					
ANR	1053629	Identifier	alp		1053324	0					
ANR	1053630	Identifier	end		1053324	1					
ANR	1053631	Identifier	y		1053324	1					
ANR	1053632	MemberAccess	alp -> start . y		1053324	1					
ANR	1053633	PtrMemberAccess	alp -> start		1053324	0					
ANR	1053634	Identifier	alp		1053324	0					
ANR	1053635	Identifier	start		1053324	1					
ANR	1053636	Identifier	y		1053324	1					
ANR	1053637	CompoundStatement		37:47:1392:1392	1053324	1					
ANR	1053638	ExpressionStatement	"remove_al ( ll , alp )"	2380:20:87312:87330	1053324	0	True				
ANR	1053639	CallExpression	"remove_al ( ll , alp )"		1053324	0					
ANR	1053640	Callee	remove_al		1053324	0					
ANR	1053641	Identifier	remove_al		1053324	0					
ANR	1053642	ArgumentList	ll		1053324	1					
ANR	1053643	Argument	ll		1053324	0					
ANR	1053644	Identifier	ll		1053324	0					
ANR	1053645	Argument	alp		1053324	1					
ANR	1053646	Identifier	alp		1053324	0					
ANR	1053647	BreakStatement	break ;	2381:20:87394:87399	1053324	1	True				
ANR	1053648	ExpressionStatement	"code = range_list_add ( pcrl , fixed2int_pixround ( x0 - ll -> fo -> adjust_left ) , fixed2int_rounded ( x1 + ll -> fo -> adjust_right ) )"	2384:12:87445:87632	1053324	2	True				
ANR	1053649	AssignmentExpression	"code = range_list_add ( pcrl , fixed2int_pixround ( x0 - ll -> fo -> adjust_left ) , fixed2int_rounded ( x1 + ll -> fo -> adjust_right ) )"		1053324	0		=			
ANR	1053650	Identifier	code		1053324	0					
ANR	1053651	CallExpression	"range_list_add ( pcrl , fixed2int_pixround ( x0 - ll -> fo -> adjust_left ) , fixed2int_rounded ( x1 + ll -> fo -> adjust_right ) )"		1053324	1					
ANR	1053652	Callee	range_list_add		1053324	0					
ANR	1053653	Identifier	range_list_add		1053324	0					
ANR	1053654	ArgumentList	pcrl		1053324	1					
ANR	1053655	Argument	pcrl		1053324	0					
ANR	1053656	Identifier	pcrl		1053324	0					
ANR	1053657	Argument	fixed2int_pixround ( x0 - ll -> fo -> adjust_left )		1053324	1					
ANR	1053658	CallExpression	fixed2int_pixround ( x0 - ll -> fo -> adjust_left )		1053324	0					
ANR	1053659	Callee	fixed2int_pixround		1053324	0					
ANR	1053660	Identifier	fixed2int_pixround		1053324	0					
ANR	1053661	ArgumentList	x0 - ll -> fo -> adjust_left		1053324	1					
ANR	1053662	Argument	x0 - ll -> fo -> adjust_left		1053324	0					
ANR	1053663	AdditiveExpression	x0 - ll -> fo -> adjust_left		1053324	0		-			
ANR	1053664	Identifier	x0		1053324	0					
ANR	1053665	PtrMemberAccess	ll -> fo -> adjust_left		1053324	1					
ANR	1053666	PtrMemberAccess	ll -> fo		1053324	0					
ANR	1053667	Identifier	ll		1053324	0					
ANR	1053668	Identifier	fo		1053324	1					
ANR	1053669	Identifier	adjust_left		1053324	1					
ANR	1053670	Argument	fixed2int_rounded ( x1 + ll -> fo -> adjust_right )		1053324	2					
ANR	1053671	CallExpression	fixed2int_rounded ( x1 + ll -> fo -> adjust_right )		1053324	0					
ANR	1053672	Callee	fixed2int_rounded		1053324	0					
ANR	1053673	Identifier	fixed2int_rounded		1053324	0					
ANR	1053674	ArgumentList	x1 + ll -> fo -> adjust_right		1053324	1					
ANR	1053675	Argument	x1 + ll -> fo -> adjust_right		1053324	0					
ANR	1053676	AdditiveExpression	x1 + ll -> fo -> adjust_right		1053324	0		+			
ANR	1053677	Identifier	x1		1053324	0					
ANR	1053678	PtrMemberAccess	ll -> fo -> adjust_right		1053324	1					
ANR	1053679	PtrMemberAccess	ll -> fo		1053324	0					
ANR	1053680	Identifier	ll		1053324	0					
ANR	1053681	Identifier	fo		1053324	1					
ANR	1053682	Identifier	adjust_right		1053324	1					
ANR	1053683	ReturnStatement	return code ;	2390:4:87655:87666	1053324	4	True				
ANR	1053684	Identifier	code		1053324	0					
ANR	1053685	ReturnType	static int		1053324	1					
ANR	1053686	Identifier	merge_ranges		1053324	2					
ANR	1053687	ParameterList	"coord_range_list_t * pcrl , const line_list * ll , fixed y_min , fixed y_top"		1053324	3					
ANR	1053688	Parameter	coord_range_list_t * pcrl	2342:13:85824:85847	1053324	0	True				
ANR	1053689	ParameterType	coord_range_list_t *		1053324	0					
ANR	1053690	Identifier	pcrl		1053324	1					
ANR	1053691	Parameter	const line_list * ll	2342:39:85850:85868	1053324	1	True				
ANR	1053692	ParameterType	const line_list *		1053324	0					
ANR	1053693	Identifier	ll		1053324	1					
ANR	1053694	Parameter	fixed y_min	2342:60:85871:85881	1053324	2	True				
ANR	1053695	ParameterType	fixed		1053324	0					
ANR	1053696	Identifier	y_min		1053324	1					
ANR	1053697	Parameter	fixed y_top	2342:73:85884:85894	1053324	3	True				
ANR	1053698	ParameterType	fixed		1053324	0					
ANR	1053699	Identifier	y_top		1053324	1					
ANR	1053700	CFGEntryNode	ENTRY		1053324		True				
ANR	1053701	CFGExitNode	EXIT		1053324		True				
ANR	1053702	InfiniteForNode	true		1053324		True				
ANR	1053703	Symbol	ll		1053324						
ANR	1053704	Symbol	alp -> direction		1053324						
ANR	1053705	Symbol	* ll -> fo		1053324						
ANR	1053706	Symbol	code		1053324						
ANR	1053707	Symbol	AL_X_AT_Y		1053324						
ANR	1053708	Symbol	alp -> end		1053324						
ANR	1053709	Symbol	alp -> x_current		1053324						
ANR	1053710	Symbol	alp -> monotonic_y		1053324						
ANR	1053711	Symbol	ye		1053324						
ANR	1053712	Symbol	alp -> fi		1053324						
ANR	1053713	Symbol	ll -> x_list		1053324						
ANR	1053714	Symbol	alp -> fi . x0		1053324						
ANR	1053715	Symbol	min		1053324						
ANR	1053716	Symbol	alp -> fi . curve		1053324						
ANR	1053717	Symbol	alp -> monotonic_x		1053324						
ANR	1053718	Symbol	alp -> fi . x3		1053324						
ANR	1053719	Symbol	range_list_add		1053324						
ANR	1053720	Symbol	pcrl		1053324						
ANR	1053721	Symbol	y_min		1053324						
ANR	1053722	Symbol	y_top		1053324						
ANR	1053723	Symbol	DIR_UP		1053324						
ANR	1053724	Symbol	step_al		1053324						
ANR	1053725	Symbol	fixed2int_rounded		1053324						
ANR	1053726	Symbol	ll -> fo -> adjust_left		1053324						
ANR	1053727	Symbol	alp		1053324						
ANR	1053728	Symbol	* ll		1053324						
ANR	1053729	Symbol	max		1053324						
ANR	1053730	Symbol	false		1053324						
ANR	1053731	Symbol	ll -> fo		1053324						
ANR	1053732	Symbol	fixed2int_pixround		1053324						
ANR	1053733	Symbol	forth		1053324						
ANR	1053734	Symbol	xe		1053324						
ANR	1053735	Symbol	* * ll		1053324						
ANR	1053736	Symbol	ll -> fo -> adjust_right		1053324						
ANR	1053737	Symbol	* alp		1053324						
ANR	1053738	Symbol	alp -> start . y		1053324						
ANR	1053739	Symbol	nlp		1053324						
ANR	1053740	Symbol	alp -> fi . y0		1053324						
ANR	1053741	Symbol	alp -> next		1053324						
ANR	1053742	Symbol	alp -> fi . y3		1053324						
ANR	1053743	Symbol	alp -> more_flattened		1053324						
ANR	1053744	Symbol	alp -> end . y		1053324						
ANR	1053745	Symbol	alp -> end . x		1053324						
ANR	1053746	Symbol	x0		1053324						
ANR	1053747	Symbol	true		1053324						
ANR	1053748	Symbol	x1		1053324						
ANR	1053749	Symbol	alp -> start		1053324						
ANR	1053750	Symbol	xt		1053324						
ANR	1053751	Function	spot_into_scan_lines	2409:0:88114:88328							
ANR	1053752	FunctionDef	"spot_into_scan_lines (line_list * ll , fixed band_mask)"		1053751	0					
ANR	1053753	CompoundStatement		2411:0:88178:88328	1053751	0					
ANR	1053754	IfStatement	if ( ll -> fo -> fill_direct )		1053751	0					
ANR	1053755	Condition	ll -> fo -> fill_direct	2412:8:88188:88206	1053751	0	True				
ANR	1053756	PtrMemberAccess	ll -> fo -> fill_direct		1053751	0					
ANR	1053757	PtrMemberAccess	ll -> fo		1053751	0					
ANR	1053758	Identifier	ll		1053751	0					
ANR	1053759	Identifier	fo		1053751	1					
ANR	1053760	Identifier	fill_direct		1053751	1					
ANR	1053761	ReturnStatement	"return spot_into_scan_lines_fd ( ll , band_mask ) ;"	2413:8:88217:88262	1053751	1	True				
ANR	1053762	CallExpression	"spot_into_scan_lines_fd ( ll , band_mask )"		1053751	0					
ANR	1053763	Callee	spot_into_scan_lines_fd		1053751	0					
ANR	1053764	Identifier	spot_into_scan_lines_fd		1053751	0					
ANR	1053765	ArgumentList	ll		1053751	1					
ANR	1053766	Argument	ll		1053751	0					
ANR	1053767	Identifier	ll		1053751	0					
ANR	1053768	Argument	band_mask		1053751	1					
ANR	1053769	Identifier	band_mask		1053751	0					
ANR	1053770	ElseStatement	else		1053751	0					
ANR	1053771	ReturnStatement	"return spot_into_scan_lines_nd ( ll , band_mask ) ;"	2415:8:88281:88326	1053751	0	True				
ANR	1053772	CallExpression	"spot_into_scan_lines_nd ( ll , band_mask )"		1053751	0					
ANR	1053773	Callee	spot_into_scan_lines_nd		1053751	0					
ANR	1053774	Identifier	spot_into_scan_lines_nd		1053751	0					
ANR	1053775	ArgumentList	ll		1053751	1					
ANR	1053776	Argument	ll		1053751	0					
ANR	1053777	Identifier	ll		1053751	0					
ANR	1053778	Argument	band_mask		1053751	1					
ANR	1053779	Identifier	band_mask		1053751	0					
ANR	1053780	ReturnType	static int		1053751	1					
ANR	1053781	Identifier	spot_into_scan_lines		1053751	2					
ANR	1053782	ParameterList	"line_list * ll , fixed band_mask"		1053751	3					
ANR	1053783	Parameter	line_list * ll	2410:21:88146:88158	1053751	0	True				
ANR	1053784	ParameterType	line_list *		1053751	0					
ANR	1053785	Identifier	ll		1053751	1					
ANR	1053786	Parameter	fixed band_mask	2410:36:88161:88175	1053751	1	True				
ANR	1053787	ParameterType	fixed		1053751	0					
ANR	1053788	Identifier	band_mask		1053751	1					
ANR	1053789	CFGEntryNode	ENTRY		1053751		True				
ANR	1053790	CFGExitNode	EXIT		1053751		True				
ANR	1053791	Symbol	ll		1053751						
ANR	1053792	Symbol	ll -> fo -> fill_direct		1053751						
ANR	1053793	Symbol	band_mask		1053751						
ANR	1053794	Symbol	* ll -> fo		1053751						
ANR	1053795	Symbol	* ll		1053751						
ANR	1053796	Symbol	spot_into_scan_lines_fd		1053751						
ANR	1053797	Symbol	ll -> fo		1053751						
ANR	1053798	Symbol	* * ll		1053751						
ANR	1053799	Symbol	spot_into_scan_lines_nd		1053751						
