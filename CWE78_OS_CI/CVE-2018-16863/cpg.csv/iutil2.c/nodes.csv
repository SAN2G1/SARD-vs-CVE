command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6151140	File	data/converged/CVE-2018-16863_ghostpdl/iutil2.c								
ANR	6151141	Function	param_read_password	34:0:1048:1956							
ANR	6151142	FunctionDef	"param_read_password (gs_param_list * plist , const char * kstr , password * ppass)"		6151141	0					
ANR	6151143	CompoundStatement		36:0:1131:1956	6151141	0					
ANR	6151144	IdentifierDeclStatement	gs_param_string ps ;	37:4:1137:1155	6151141	0	True				
ANR	6151145	IdentifierDecl	ps		6151141	0					
ANR	6151146	IdentifierDeclType	gs_param_string		6151141	0					
ANR	6151147	Identifier	ps		6151141	1					
ANR	6151148	IdentifierDeclStatement	long ipass ;	38:4:1161:1171	6151141	1	True				
ANR	6151149	IdentifierDecl	ipass		6151141	0					
ANR	6151150	IdentifierDeclType	long		6151141	0					
ANR	6151151	Identifier	ipass		6151141	1					
ANR	6151152	IdentifierDeclStatement	"int code = param_read_string ( plist , kstr , & ps ) ;"	39:4:1177:1223	6151141	2	True				
ANR	6151153	IdentifierDecl	"code = param_read_string ( plist , kstr , & ps )"		6151141	0					
ANR	6151154	IdentifierDeclType	int		6151141	0					
ANR	6151155	Identifier	code		6151141	1					
ANR	6151156	AssignmentExpression	"code = param_read_string ( plist , kstr , & ps )"		6151141	2		=			
ANR	6151157	Identifier	code		6151141	0					
ANR	6151158	CallExpression	"param_read_string ( plist , kstr , & ps )"		6151141	1					
ANR	6151159	Callee	param_read_string		6151141	0					
ANR	6151160	Identifier	param_read_string		6151141	0					
ANR	6151161	ArgumentList	plist		6151141	1					
ANR	6151162	Argument	plist		6151141	0					
ANR	6151163	Identifier	plist		6151141	0					
ANR	6151164	Argument	kstr		6151141	1					
ANR	6151165	Identifier	kstr		6151141	0					
ANR	6151166	Argument	& ps		6151141	2					
ANR	6151167	UnaryOperationExpression	& ps		6151141	0					
ANR	6151168	UnaryOperator	&		6151141	0					
ANR	6151169	Identifier	ps		6151141	1					
ANR	6151170	SwitchStatement	switch ( code )		6151141	3					
ANR	6151171	Condition	code	41:12:1238:1241	6151141	0	True				
ANR	6151172	Identifier	code		6151141	0					
ANR	6151173	CompoundStatement		6:18:112:112	6151141	1					
ANR	6151174	Label	case 0 :	42:8:1254:1260	6151141	0	True				
ANR	6151175	IfStatement	if ( ps . size > MAX_PASSWORD )		6151141	1					
ANR	6151176	Condition	ps . size > MAX_PASSWORD	43:16:1288:1309	6151141	0	True				
ANR	6151177	RelationalExpression	ps . size > MAX_PASSWORD		6151141	0		>			
ANR	6151178	MemberAccess	ps . size		6151141	0					
ANR	6151179	Identifier	ps		6151141	0					
ANR	6151180	Identifier	size		6151141	1					
ANR	6151181	Identifier	MAX_PASSWORD		6151141	1					
ANR	6151182	ExpressionStatement	return_error ( gs_error_limitcheck )	44:16:1328:1361	6151141	1	True				
ANR	6151183	CallExpression	return_error ( gs_error_limitcheck )		6151141	0					
ANR	6151184	Callee	return_error		6151141	0					
ANR	6151185	Identifier	return_error		6151141	0					
ANR	6151186	ArgumentList	gs_error_limitcheck		6151141	1					
ANR	6151187	Argument	gs_error_limitcheck		6151141	0					
ANR	6151188	Identifier	gs_error_limitcheck		6151141	0					
ANR	6151189	ExpressionStatement	"memcpy ( ppass -> data , ps . data , ps . size )"	46:12:1413:1450	6151141	2	True				
ANR	6151190	CallExpression	"memcpy ( ppass -> data , ps . data , ps . size )"		6151141	0					
ANR	6151191	Callee	memcpy		6151141	0					
ANR	6151192	Identifier	memcpy		6151141	0					
ANR	6151193	ArgumentList	ppass -> data		6151141	1					
ANR	6151194	Argument	ppass -> data		6151141	0					
ANR	6151195	PtrMemberAccess	ppass -> data		6151141	0					
ANR	6151196	Identifier	ppass		6151141	0					
ANR	6151197	Identifier	data		6151141	1					
ANR	6151198	Argument	ps . data		6151141	1					
ANR	6151199	MemberAccess	ps . data		6151141	0					
ANR	6151200	Identifier	ps		6151141	0					
ANR	6151201	Identifier	data		6151141	1					
ANR	6151202	Argument	ps . size		6151141	2					
ANR	6151203	MemberAccess	ps . size		6151141	0					
ANR	6151204	Identifier	ps		6151141	0					
ANR	6151205	Identifier	size		6151141	1					
ANR	6151206	ExpressionStatement	ppass -> size = ps . size	47:12:1464:1485	6151141	3	True				
ANR	6151207	AssignmentExpression	ppass -> size = ps . size		6151141	0		=			
ANR	6151208	PtrMemberAccess	ppass -> size		6151141	0					
ANR	6151209	Identifier	ppass		6151141	0					
ANR	6151210	Identifier	size		6151141	1					
ANR	6151211	MemberAccess	ps . size		6151141	1					
ANR	6151212	Identifier	ps		6151141	0					
ANR	6151213	Identifier	size		6151141	1					
ANR	6151214	ReturnStatement	return 0 ;	48:12:1499:1507	6151141	4	True				
ANR	6151215	PrimaryExpression	0		6151141	0					
ANR	6151216	Label	case 1 :	49:8:1517:1523	6151141	5	True				
ANR	6151217	ReturnStatement	return 1 ;	50:12:1559:1567	6151141	6	True				
ANR	6151218	PrimaryExpression	1		6151141	0					
ANR	6151219	IfStatement	if ( code != gs_error_typecheck )		6151141	4					
ANR	6151220	Condition	code != gs_error_typecheck	54:8:1682:1707	6151141	0	True				
ANR	6151221	EqualityExpression	code != gs_error_typecheck		6151141	0		!=			
ANR	6151222	Identifier	code		6151141	0					
ANR	6151223	Identifier	gs_error_typecheck		6151141	1					
ANR	6151224	ReturnStatement	return code ;	55:8:1718:1729	6151141	1	True				
ANR	6151225	Identifier	code		6151141	0					
ANR	6151226	ExpressionStatement	"code = param_read_long ( plist , kstr , & ipass )"	56:4:1735:1778	6151141	5	True				
ANR	6151227	AssignmentExpression	"code = param_read_long ( plist , kstr , & ipass )"		6151141	0		=			
ANR	6151228	Identifier	code		6151141	0					
ANR	6151229	CallExpression	"param_read_long ( plist , kstr , & ipass )"		6151141	1					
ANR	6151230	Callee	param_read_long		6151141	0					
ANR	6151231	Identifier	param_read_long		6151141	0					
ANR	6151232	ArgumentList	plist		6151141	1					
ANR	6151233	Argument	plist		6151141	0					
ANR	6151234	Identifier	plist		6151141	0					
ANR	6151235	Argument	kstr		6151141	1					
ANR	6151236	Identifier	kstr		6151141	0					
ANR	6151237	Argument	& ipass		6151141	2					
ANR	6151238	UnaryOperationExpression	& ipass		6151141	0					
ANR	6151239	UnaryOperator	&		6151141	0					
ANR	6151240	Identifier	ipass		6151141	1					
ANR	6151241	IfStatement	if ( code != 0 )		6151141	6					
ANR	6151242	Condition	code != 0	57:8:1788:1796	6151141	0	True				
ANR	6151243	EqualityExpression	code != 0		6151141	0		!=			
ANR	6151244	Identifier	code		6151141	0					
ANR	6151245	PrimaryExpression	0		6151141	1					
ANR	6151246	ReturnStatement	return code ;	58:8:1831:1842	6151141	1	True				
ANR	6151247	Identifier	code		6151141	0					
ANR	6151248	ExpressionStatement	"gs_sprintf ( ( char * ) ppass -> data , ""%ld"" , ipass )"	59:4:1848:1893	6151141	7	True				
ANR	6151249	CallExpression	"gs_sprintf ( ( char * ) ppass -> data , ""%ld"" , ipass )"		6151141	0					
ANR	6151250	Callee	gs_sprintf		6151141	0					
ANR	6151251	Identifier	gs_sprintf		6151141	0					
ANR	6151252	ArgumentList	( char * ) ppass -> data		6151141	1					
ANR	6151253	Argument	( char * ) ppass -> data		6151141	0					
ANR	6151254	CastExpression	( char * ) ppass -> data		6151141	0					
ANR	6151255	CastTarget	char *		6151141	0					
ANR	6151256	PtrMemberAccess	ppass -> data		6151141	1					
ANR	6151257	Identifier	ppass		6151141	0					
ANR	6151258	Identifier	data		6151141	1					
ANR	6151259	Argument	"""%ld"""		6151141	1					
ANR	6151260	PrimaryExpression	"""%ld"""		6151141	0					
ANR	6151261	Argument	ipass		6151141	2					
ANR	6151262	Identifier	ipass		6151141	0					
ANR	6151263	ExpressionStatement	ppass -> size = strlen ( ( char * ) ppass -> data )	60:4:1899:1940	6151141	8	True				
ANR	6151264	AssignmentExpression	ppass -> size = strlen ( ( char * ) ppass -> data )		6151141	0		=			
ANR	6151265	PtrMemberAccess	ppass -> size		6151141	0					
ANR	6151266	Identifier	ppass		6151141	0					
ANR	6151267	Identifier	size		6151141	1					
ANR	6151268	CallExpression	strlen ( ( char * ) ppass -> data )		6151141	1					
ANR	6151269	Callee	strlen		6151141	0					
ANR	6151270	Identifier	strlen		6151141	0					
ANR	6151271	ArgumentList	( char * ) ppass -> data		6151141	1					
ANR	6151272	Argument	( char * ) ppass -> data		6151141	0					
ANR	6151273	CastExpression	( char * ) ppass -> data		6151141	0					
ANR	6151274	CastTarget	char *		6151141	0					
ANR	6151275	PtrMemberAccess	ppass -> data		6151141	1					
ANR	6151276	Identifier	ppass		6151141	0					
ANR	6151277	Identifier	data		6151141	1					
ANR	6151278	ReturnStatement	return 0 ;	61:4:1946:1954	6151141	9	True				
ANR	6151279	PrimaryExpression	0		6151141	0					
ANR	6151280	ReturnType	int		6151141	1					
ANR	6151281	Identifier	param_read_password		6151141	2					
ANR	6151282	ParameterList	"gs_param_list * plist , const char * kstr , password * ppass"		6151141	3					
ANR	6151283	Parameter	gs_param_list * plist	35:20:1072:1092	6151141	0	True				
ANR	6151284	ParameterType	gs_param_list *		6151141	0					
ANR	6151285	Identifier	plist		6151141	1					
ANR	6151286	Parameter	const char * kstr	35:43:1095:1110	6151141	1	True				
ANR	6151287	ParameterType	const char *		6151141	0					
ANR	6151288	Identifier	kstr		6151141	1					
ANR	6151289	Parameter	password * ppass	35:61:1113:1128	6151141	2	True				
ANR	6151290	ParameterType	password *		6151141	0					
ANR	6151291	Identifier	ppass		6151141	1					
ANR	6151292	CFGEntryNode	ENTRY		6151141		True				
ANR	6151293	CFGExitNode	EXIT		6151141		True				
ANR	6151294	Symbol	ppass -> size		6151141						
ANR	6151295	Symbol	ps		6151141						
ANR	6151296	Symbol	code		6151141						
ANR	6151297	Symbol	& ipass		6151141						
ANR	6151298	Symbol	param_read_long		6151141						
ANR	6151299	Symbol	MAX_PASSWORD		6151141						
ANR	6151300	Symbol	ipass		6151141						
ANR	6151301	Symbol	ps . size		6151141						
ANR	6151302	Symbol	& ps		6151141						
ANR	6151303	Symbol	param_read_string		6151141						
ANR	6151304	Symbol	ppass -> data		6151141						
ANR	6151305	Symbol	strlen		6151141						
ANR	6151306	Symbol	plist		6151141						
ANR	6151307	Symbol	gs_error_typecheck		6151141						
ANR	6151308	Symbol	kstr		6151141						
ANR	6151309	Symbol	* ppass		6151141						
ANR	6151310	Symbol	ps . data		6151141						
ANR	6151311	Symbol	gs_error_limitcheck		6151141						
ANR	6151312	Symbol	ppass		6151141						
ANR	6151313	Function	param_write_password	64:0:2002:2359							
ANR	6151314	FunctionDef	"param_write_password (gs_param_list * plist , const char * kstr , const password * ppass)"		6151313	0					
ANR	6151315	CompoundStatement		67:0:2113:2359	6151313	0					
ANR	6151316	IdentifierDeclStatement	gs_param_string ps ;	68:4:2119:2137	6151313	0	True				
ANR	6151317	IdentifierDecl	ps		6151313	0					
ANR	6151318	IdentifierDeclType	gs_param_string		6151313	0					
ANR	6151319	Identifier	ps		6151313	1					
ANR	6151320	ExpressionStatement	"ps . data = ( const byte * ) ppass -> data , ps . size = ppass -> size , ps . persistent = false"	70:4:2144:2233	6151313	1	True				
ANR	6151321	Expression	"ps . data = ( const byte * ) ppass -> data , ps . size = ppass -> size , ps . persistent = false"		6151313	0					
ANR	6151322	AssignmentExpression	ps . data = ( const byte * ) ppass -> data		6151313	0		=			
ANR	6151323	MemberAccess	ps . data		6151313	0					
ANR	6151324	Identifier	ps		6151313	0					
ANR	6151325	Identifier	data		6151313	1					
ANR	6151326	CastExpression	( const byte * ) ppass -> data		6151313	1					
ANR	6151327	CastTarget	const byte *		6151313	0					
ANR	6151328	PtrMemberAccess	ppass -> data		6151313	1					
ANR	6151329	Identifier	ppass		6151313	0					
ANR	6151330	Identifier	data		6151313	1					
ANR	6151331	Expression	"ps . size = ppass -> size , ps . persistent = false"		6151313	1					
ANR	6151332	AssignmentExpression	ps . size = ppass -> size		6151313	0		=			
ANR	6151333	MemberAccess	ps . size		6151313	0					
ANR	6151334	Identifier	ps		6151313	0					
ANR	6151335	Identifier	size		6151313	1					
ANR	6151336	PtrMemberAccess	ppass -> size		6151313	1					
ANR	6151337	Identifier	ppass		6151313	0					
ANR	6151338	Identifier	size		6151313	1					
ANR	6151339	AssignmentExpression	ps . persistent = false		6151313	1		=			
ANR	6151340	MemberAccess	ps . persistent		6151313	0					
ANR	6151341	Identifier	ps		6151313	0					
ANR	6151342	Identifier	persistent		6151313	1					
ANR	6151343	Identifier	false		6151313	1					
ANR	6151344	IfStatement	if ( ps . size > MAX_PASSWORD )		6151313	2					
ANR	6151345	Condition	ps . size > MAX_PASSWORD	72:8:2243:2264	6151313	0	True				
ANR	6151346	RelationalExpression	ps . size > MAX_PASSWORD		6151313	0		>			
ANR	6151347	MemberAccess	ps . size		6151313	0					
ANR	6151348	Identifier	ps		6151313	0					
ANR	6151349	Identifier	size		6151313	1					
ANR	6151350	Identifier	MAX_PASSWORD		6151313	1					
ANR	6151351	ExpressionStatement	return_error ( gs_error_limitcheck )	73:8:2275:2308	6151313	1	True				
ANR	6151352	CallExpression	return_error ( gs_error_limitcheck )		6151313	0					
ANR	6151353	Callee	return_error		6151313	0					
ANR	6151354	Identifier	return_error		6151313	0					
ANR	6151355	ArgumentList	gs_error_limitcheck		6151313	1					
ANR	6151356	Argument	gs_error_limitcheck		6151313	0					
ANR	6151357	Identifier	gs_error_limitcheck		6151313	0					
ANR	6151358	ReturnStatement	"return param_write_string ( plist , kstr , & ps ) ;"	74:4:2314:2357	6151313	3	True				
ANR	6151359	CallExpression	"param_write_string ( plist , kstr , & ps )"		6151313	0					
ANR	6151360	Callee	param_write_string		6151313	0					
ANR	6151361	Identifier	param_write_string		6151313	0					
ANR	6151362	ArgumentList	plist		6151313	1					
ANR	6151363	Argument	plist		6151313	0					
ANR	6151364	Identifier	plist		6151313	0					
ANR	6151365	Argument	kstr		6151313	1					
ANR	6151366	Identifier	kstr		6151313	0					
ANR	6151367	Argument	& ps		6151313	2					
ANR	6151368	UnaryOperationExpression	& ps		6151313	0					
ANR	6151369	UnaryOperator	&		6151313	0					
ANR	6151370	Identifier	ps		6151313	1					
ANR	6151371	ReturnType	int		6151313	1					
ANR	6151372	Identifier	param_write_password		6151313	2					
ANR	6151373	ParameterList	"gs_param_list * plist , const char * kstr , const password * ppass"		6151313	3					
ANR	6151374	Parameter	gs_param_list * plist	65:21:2027:2047	6151313	0	True				
ANR	6151375	ParameterType	gs_param_list *		6151313	0					
ANR	6151376	Identifier	plist		6151313	1					
ANR	6151377	Parameter	const char * kstr	65:44:2050:2065	6151313	1	True				
ANR	6151378	ParameterType	const char *		6151313	0					
ANR	6151379	Identifier	kstr		6151313	1					
ANR	6151380	Parameter	const password * ppass	66:21:2089:2110	6151313	2	True				
ANR	6151381	ParameterType	const password *		6151313	0					
ANR	6151382	Identifier	ppass		6151313	1					
ANR	6151383	CFGEntryNode	ENTRY		6151313		True				
ANR	6151384	CFGExitNode	EXIT		6151313		True				
ANR	6151385	Symbol	ppass -> size		6151313						
ANR	6151386	Symbol	ps		6151313						
ANR	6151387	Symbol	MAX_PASSWORD		6151313						
ANR	6151388	Symbol	ps . size		6151313						
ANR	6151389	Symbol	ps . persistent		6151313						
ANR	6151390	Symbol	false		6151313						
ANR	6151391	Symbol	& ps		6151313						
ANR	6151392	Symbol	ppass -> data		6151313						
ANR	6151393	Symbol	plist		6151313						
ANR	6151394	Symbol	kstr		6151313						
ANR	6151395	Symbol	* ppass		6151313						
ANR	6151396	Symbol	ps . data		6151313						
ANR	6151397	Symbol	gs_error_limitcheck		6151313						
ANR	6151398	Symbol	param_write_string		6151313						
ANR	6151399	Symbol	ppass		6151313						
ANR	6151400	Function	param_check_password	79:0:2461:2931							
ANR	6151401	FunctionDef	"param_check_password (gs_param_list * plist , const password * ppass)"		6151400	0					
ANR	6151402	CompoundStatement		81:0:2533:2931	6151400	0					
ANR	6151403	IfStatement	if ( ppass -> size != 0 )		6151400	0					
ANR	6151404	Condition	ppass -> size != 0	82:8:2543:2558	6151400	0	True				
ANR	6151405	EqualityExpression	ppass -> size != 0		6151400	0		!=			
ANR	6151406	PtrMemberAccess	ppass -> size		6151400	0					
ANR	6151407	Identifier	ppass		6151400	0					
ANR	6151408	Identifier	size		6151400	1					
ANR	6151409	PrimaryExpression	0		6151400	1					
ANR	6151410	CompoundStatement		4:8:60:116	6151400	1					
ANR	6151411	IdentifierDeclStatement	password pass ;	83:8:2571:2584	6151400	0	True				
ANR	6151412	IdentifierDecl	pass		6151400	0					
ANR	6151413	IdentifierDeclType	password		6151400	0					
ANR	6151414	Identifier	pass		6151400	1					
ANR	6151415	IdentifierDeclStatement	"int code = param_read_password ( plist , ""Password"" , & pass ) ;"	84:8:2594:2650	6151400	1	True				
ANR	6151416	IdentifierDecl	"code = param_read_password ( plist , ""Password"" , & pass )"		6151400	0					
ANR	6151417	IdentifierDeclType	int		6151400	0					
ANR	6151418	Identifier	code		6151400	1					
ANR	6151419	AssignmentExpression	"code = param_read_password ( plist , ""Password"" , & pass )"		6151400	2		=			
ANR	6151420	Identifier	code		6151400	0					
ANR	6151421	CallExpression	"param_read_password ( plist , ""Password"" , & pass )"		6151400	1					
ANR	6151422	Callee	param_read_password		6151400	0					
ANR	6151423	Identifier	param_read_password		6151400	0					
ANR	6151424	ArgumentList	plist		6151400	1					
ANR	6151425	Argument	plist		6151400	0					
ANR	6151426	Identifier	plist		6151400	0					
ANR	6151427	Argument	"""Password"""		6151400	1					
ANR	6151428	PrimaryExpression	"""Password"""		6151400	0					
ANR	6151429	Argument	& pass		6151400	2					
ANR	6151430	UnaryOperationExpression	& pass		6151400	0					
ANR	6151431	UnaryOperator	&		6151400	0					
ANR	6151432	Identifier	pass		6151400	1					
ANR	6151433	IfStatement	if ( code )		6151400	2					
ANR	6151434	Condition	code	86:12:2665:2668	6151400	0	True				
ANR	6151435	Identifier	code		6151400	0					
ANR	6151436	ReturnStatement	return code ;	87:12:2683:2694	6151400	1	True				
ANR	6151437	Identifier	code		6151400	0					
ANR	6151438	IfStatement	"if ( pass . size != ppass -> size || bytes_compare ( & pass . data [ 0 ] , pass . size , & ppass -> data [ 0 ] , ppass -> size ) != 0 )"		6151400	3					
ANR	6151439	Condition	"pass . size != ppass -> size || bytes_compare ( & pass . data [ 0 ] , pass . size , & ppass -> data [ 0 ] , ppass -> size ) != 0"	88:12:2708:2873	6151400	0	True				
ANR	6151440	OrExpression	"pass . size != ppass -> size || bytes_compare ( & pass . data [ 0 ] , pass . size , & ppass -> data [ 0 ] , ppass -> size ) != 0"		6151400	0		||			
ANR	6151441	EqualityExpression	pass . size != ppass -> size		6151400	0		!=			
ANR	6151442	MemberAccess	pass . size		6151400	0					
ANR	6151443	Identifier	pass		6151400	0					
ANR	6151444	Identifier	size		6151400	1					
ANR	6151445	PtrMemberAccess	ppass -> size		6151400	1					
ANR	6151446	Identifier	ppass		6151400	0					
ANR	6151447	Identifier	size		6151400	1					
ANR	6151448	EqualityExpression	"bytes_compare ( & pass . data [ 0 ] , pass . size , & ppass -> data [ 0 ] , ppass -> size ) != 0"		6151400	1		!=			
ANR	6151449	CallExpression	"bytes_compare ( & pass . data [ 0 ] , pass . size , & ppass -> data [ 0 ] , ppass -> size )"		6151400	0					
ANR	6151450	Callee	bytes_compare		6151400	0					
ANR	6151451	Identifier	bytes_compare		6151400	0					
ANR	6151452	ArgumentList	& pass . data [ 0 ]		6151400	1					
ANR	6151453	Argument	& pass . data [ 0 ]		6151400	0					
ANR	6151454	UnaryOperationExpression	& pass . data [ 0 ]		6151400	0					
ANR	6151455	UnaryOperator	&		6151400	0					
ANR	6151456	ArrayIndexing	pass . data [ 0 ]		6151400	1					
ANR	6151457	MemberAccess	pass . data		6151400	0					
ANR	6151458	Identifier	pass		6151400	0					
ANR	6151459	Identifier	data		6151400	1					
ANR	6151460	PrimaryExpression	0		6151400	1					
ANR	6151461	Argument	pass . size		6151400	1					
ANR	6151462	MemberAccess	pass . size		6151400	0					
ANR	6151463	Identifier	pass		6151400	0					
ANR	6151464	Identifier	size		6151400	1					
ANR	6151465	Argument	& ppass -> data [ 0 ]		6151400	2					
ANR	6151466	UnaryOperationExpression	& ppass -> data [ 0 ]		6151400	0					
ANR	6151467	UnaryOperator	&		6151400	0					
ANR	6151468	ArrayIndexing	ppass -> data [ 0 ]		6151400	1					
ANR	6151469	PtrMemberAccess	ppass -> data		6151400	0					
ANR	6151470	Identifier	ppass		6151400	0					
ANR	6151471	Identifier	data		6151400	1					
ANR	6151472	PrimaryExpression	0		6151400	1					
ANR	6151473	Argument	ppass -> size		6151400	3					
ANR	6151474	PtrMemberAccess	ppass -> size		6151400	0					
ANR	6151475	Identifier	ppass		6151400	0					
ANR	6151476	Identifier	size		6151400	1					
ANR	6151477	PrimaryExpression	0		6151400	1					
ANR	6151478	ReturnStatement	return 1 ;	93:12:2901:2909	6151400	1	True				
ANR	6151479	PrimaryExpression	1		6151400	0					
ANR	6151480	ReturnStatement	return 0 ;	95:4:2921:2929	6151400	1	True				
ANR	6151481	PrimaryExpression	0		6151400	0					
ANR	6151482	ReturnType	int		6151400	1					
ANR	6151483	Identifier	param_check_password		6151400	2					
ANR	6151484	ParameterList	"gs_param_list * plist , const password * ppass"		6151400	3					
ANR	6151485	Parameter	gs_param_list * plist	80:21:2486:2506	6151400	0	True				
ANR	6151486	ParameterType	gs_param_list *		6151400	0					
ANR	6151487	Identifier	plist		6151400	1					
ANR	6151488	Parameter	const password * ppass	80:44:2509:2530	6151400	1	True				
ANR	6151489	ParameterType	const password *		6151400	0					
ANR	6151490	Identifier	ppass		6151400	1					
ANR	6151491	CFGEntryNode	ENTRY		6151400		True				
ANR	6151492	CFGExitNode	EXIT		6151400		True				
ANR	6151493	Symbol	ppass -> size		6151400						
ANR	6151494	Symbol	ppass -> data		6151400						
ANR	6151495	Symbol	plist		6151400						
ANR	6151496	Symbol	code		6151400						
ANR	6151497	Symbol	* ppass		6151400						
ANR	6151498	Symbol	& pass		6151400						
ANR	6151499	Symbol	pass . data		6151400						
ANR	6151500	Symbol	pass . size		6151400						
ANR	6151501	Symbol	pass		6151400						
ANR	6151502	Symbol	param_read_password		6151400						
ANR	6151503	Symbol	bytes_compare		6151400						
ANR	6151504	Symbol	ppass		6151400						
ANR	6151505	Function	dict_find_password	100:0:3032:3455							
ANR	6151506	FunctionDef	"dict_find_password (ref * * ppvalue , const ref * pdref , const char * kstr)"		6151505	0					
ANR	6151507	CompoundStatement		102:0:3115:3455	6151505	0					
ANR	6151508	IdentifierDeclStatement	ref * pvalue ;	103:4:3121:3132	6151505	0	True				
ANR	6151509	IdentifierDecl	* pvalue		6151505	0					
ANR	6151510	IdentifierDeclType	ref *		6151505	0					
ANR	6151511	Identifier	pvalue		6151505	1					
ANR	6151512	IfStatement	"if ( dict_find_string ( pdref , kstr , & pvalue ) <= 0 )"		6151505	1					
ANR	6151513	Condition	"dict_find_string ( pdref , kstr , & pvalue ) <= 0"	105:8:3143:3185	6151505	0	True				
ANR	6151514	RelationalExpression	"dict_find_string ( pdref , kstr , & pvalue ) <= 0"		6151505	0		<=			
ANR	6151515	CallExpression	"dict_find_string ( pdref , kstr , & pvalue )"		6151505	0					
ANR	6151516	Callee	dict_find_string		6151505	0					
ANR	6151517	Identifier	dict_find_string		6151505	0					
ANR	6151518	ArgumentList	pdref		6151505	1					
ANR	6151519	Argument	pdref		6151505	0					
ANR	6151520	Identifier	pdref		6151505	0					
ANR	6151521	Argument	kstr		6151505	1					
ANR	6151522	Identifier	kstr		6151505	0					
ANR	6151523	Argument	& pvalue		6151505	2					
ANR	6151524	UnaryOperationExpression	& pvalue		6151505	0					
ANR	6151525	UnaryOperator	&		6151505	0					
ANR	6151526	Identifier	pvalue		6151505	1					
ANR	6151527	PrimaryExpression	0		6151505	1					
ANR	6151528	ExpressionStatement	return_error ( gs_error_undefined )	106:8:3196:3228	6151505	1	True				
ANR	6151529	CallExpression	return_error ( gs_error_undefined )		6151505	0					
ANR	6151530	Callee	return_error		6151505	0					
ANR	6151531	Identifier	return_error		6151505	0					
ANR	6151532	ArgumentList	gs_error_undefined		6151505	1					
ANR	6151533	Argument	gs_error_undefined		6151505	0					
ANR	6151534	Identifier	gs_error_undefined		6151505	0					
ANR	6151535	IfStatement	"if ( ! r_has_type ( pvalue , t_string ) || r_has_attrs ( pvalue , a_read ) || pvalue -> value . const_bytes [ 0 ] >= r_size ( pvalue ) )"		6151505	2					
ANR	6151536	Condition	"! r_has_type ( pvalue , t_string ) || r_has_attrs ( pvalue , a_read ) || pvalue -> value . const_bytes [ 0 ] >= r_size ( pvalue )"	107:8:3238:3363	6151505	0	True				
ANR	6151537	OrExpression	"! r_has_type ( pvalue , t_string ) || r_has_attrs ( pvalue , a_read ) || pvalue -> value . const_bytes [ 0 ] >= r_size ( pvalue )"		6151505	0		||			
ANR	6151538	UnaryOperationExpression	"! r_has_type ( pvalue , t_string )"		6151505	0					
ANR	6151539	UnaryOperator	!		6151505	0					
ANR	6151540	CallExpression	"r_has_type ( pvalue , t_string )"		6151505	1					
ANR	6151541	Callee	r_has_type		6151505	0					
ANR	6151542	Identifier	r_has_type		6151505	0					
ANR	6151543	ArgumentList	pvalue		6151505	1					
ANR	6151544	Argument	pvalue		6151505	0					
ANR	6151545	Identifier	pvalue		6151505	0					
ANR	6151546	Argument	t_string		6151505	1					
ANR	6151547	Identifier	t_string		6151505	0					
ANR	6151548	OrExpression	"r_has_attrs ( pvalue , a_read ) || pvalue -> value . const_bytes [ 0 ] >= r_size ( pvalue )"		6151505	1		||			
ANR	6151549	CallExpression	"r_has_attrs ( pvalue , a_read )"		6151505	0					
ANR	6151550	Callee	r_has_attrs		6151505	0					
ANR	6151551	Identifier	r_has_attrs		6151505	0					
ANR	6151552	ArgumentList	pvalue		6151505	1					
ANR	6151553	Argument	pvalue		6151505	0					
ANR	6151554	Identifier	pvalue		6151505	0					
ANR	6151555	Argument	a_read		6151505	1					
ANR	6151556	Identifier	a_read		6151505	0					
ANR	6151557	RelationalExpression	pvalue -> value . const_bytes [ 0 ] >= r_size ( pvalue )		6151505	1		>=			
ANR	6151558	ArrayIndexing	pvalue -> value . const_bytes [ 0 ]		6151505	0					
ANR	6151559	MemberAccess	pvalue -> value . const_bytes		6151505	0					
ANR	6151560	PtrMemberAccess	pvalue -> value		6151505	0					
ANR	6151561	Identifier	pvalue		6151505	0					
ANR	6151562	Identifier	value		6151505	1					
ANR	6151563	Identifier	const_bytes		6151505	1					
ANR	6151564	PrimaryExpression	0		6151505	1					
ANR	6151565	CallExpression	r_size ( pvalue )		6151505	1					
ANR	6151566	Callee	r_size		6151505	0					
ANR	6151567	Identifier	r_size		6151505	0					
ANR	6151568	ArgumentList	pvalue		6151505	1					
ANR	6151569	Argument	pvalue		6151505	0					
ANR	6151570	Identifier	pvalue		6151505	0					
ANR	6151571	ExpressionStatement	return_error ( gs_error_rangecheck )	111:8:3383:3416	6151505	1	True				
ANR	6151572	CallExpression	return_error ( gs_error_rangecheck )		6151505	0					
ANR	6151573	Callee	return_error		6151505	0					
ANR	6151574	Identifier	return_error		6151505	0					
ANR	6151575	ArgumentList	gs_error_rangecheck		6151505	1					
ANR	6151576	Argument	gs_error_rangecheck		6151505	0					
ANR	6151577	Identifier	gs_error_rangecheck		6151505	0					
ANR	6151578	ExpressionStatement	* ppvalue = pvalue	112:4:3422:3439	6151505	3	True				
ANR	6151579	AssignmentExpression	* ppvalue = pvalue		6151505	0		=			
ANR	6151580	UnaryOperationExpression	* ppvalue		6151505	0					
ANR	6151581	UnaryOperator	*		6151505	0					
ANR	6151582	Identifier	ppvalue		6151505	1					
ANR	6151583	Identifier	pvalue		6151505	1					
ANR	6151584	ReturnStatement	return 0 ;	113:4:3445:3453	6151505	4	True				
ANR	6151585	PrimaryExpression	0		6151505	0					
ANR	6151586	ReturnType	static int		6151505	1					
ANR	6151587	Identifier	dict_find_password		6151505	2					
ANR	6151588	ParameterList	"ref * * ppvalue , const ref * pdref , const char * kstr"		6151505	3					
ANR	6151589	Parameter	ref * * ppvalue	101:19:3062:3075	6151505	0	True				
ANR	6151590	ParameterType	ref * *		6151505	0					
ANR	6151591	Identifier	ppvalue		6151505	1					
ANR	6151592	Parameter	const ref * pdref	101:35:3078:3094	6151505	1	True				
ANR	6151593	ParameterType	const ref *		6151505	0					
ANR	6151594	Identifier	pdref		6151505	1					
ANR	6151595	Parameter	const char * kstr	101:54:3097:3112	6151505	2	True				
ANR	6151596	ParameterType	const char *		6151505	0					
ANR	6151597	Identifier	kstr		6151505	1					
ANR	6151598	CFGEntryNode	ENTRY		6151505		True				
ANR	6151599	CFGExitNode	EXIT		6151505		True				
ANR	6151600	Symbol	a_read		6151505						
ANR	6151601	Symbol	& pvalue		6151505						
ANR	6151602	Symbol	dict_find_string		6151505						
ANR	6151603	Symbol	gs_error_rangecheck		6151505						
ANR	6151604	Symbol	pdref		6151505						
ANR	6151605	Symbol	gs_error_undefined		6151505						
ANR	6151606	Symbol	pvalue		6151505						
ANR	6151607	Symbol	pvalue -> value . const_bytes		6151505						
ANR	6151608	Symbol	* pvalue -> value . const_bytes		6151505						
ANR	6151609	Symbol	t_string		6151505						
ANR	6151610	Symbol	r_has_type		6151505						
ANR	6151611	Symbol	* * pvalue		6151505						
ANR	6151612	Symbol	* pvalue		6151505						
ANR	6151613	Symbol	ppvalue		6151505						
ANR	6151614	Symbol	kstr		6151505						
ANR	6151615	Symbol	r_size		6151505						
ANR	6151616	Symbol	* pvalue -> value		6151505						
ANR	6151617	Symbol	pvalue -> value		6151505						
ANR	6151618	Symbol	r_has_attrs		6151505						
ANR	6151619	Symbol	* ppvalue		6151505						
ANR	6151620	Function	dict_read_password	115:0:3457:3892							
ANR	6151621	FunctionDef	"dict_read_password (password * ppass , const ref * pdref , const char * pkey)"		6151620	0					
ANR	6151622	CompoundStatement		117:0:3535:3892	6151620	0					
ANR	6151623	IdentifierDeclStatement	ref * pvalue ;	118:4:3541:3552	6151620	0	True				
ANR	6151624	IdentifierDecl	* pvalue		6151620	0					
ANR	6151625	IdentifierDeclType	ref *		6151620	0					
ANR	6151626	Identifier	pvalue		6151620	1					
ANR	6151627	IdentifierDeclStatement	"int code = dict_find_password ( & pvalue , pdref , pkey ) ;"	119:4:3558:3609	6151620	1	True				
ANR	6151628	IdentifierDecl	"code = dict_find_password ( & pvalue , pdref , pkey )"		6151620	0					
ANR	6151629	IdentifierDeclType	int		6151620	0					
ANR	6151630	Identifier	code		6151620	1					
ANR	6151631	AssignmentExpression	"code = dict_find_password ( & pvalue , pdref , pkey )"		6151620	2		=			
ANR	6151632	Identifier	code		6151620	0					
ANR	6151633	CallExpression	"dict_find_password ( & pvalue , pdref , pkey )"		6151620	1					
ANR	6151634	Callee	dict_find_password		6151620	0					
ANR	6151635	Identifier	dict_find_password		6151620	0					
ANR	6151636	ArgumentList	& pvalue		6151620	1					
ANR	6151637	Argument	& pvalue		6151620	0					
ANR	6151638	UnaryOperationExpression	& pvalue		6151620	0					
ANR	6151639	UnaryOperator	&		6151620	0					
ANR	6151640	Identifier	pvalue		6151620	1					
ANR	6151641	Argument	pdref		6151620	1					
ANR	6151642	Identifier	pdref		6151620	0					
ANR	6151643	Argument	pkey		6151620	2					
ANR	6151644	Identifier	pkey		6151620	0					
ANR	6151645	IfStatement	if ( code < 0 )		6151620	2					
ANR	6151646	Condition	code < 0	121:8:3620:3627	6151620	0	True				
ANR	6151647	RelationalExpression	code < 0		6151620	0		<			
ANR	6151648	Identifier	code		6151620	0					
ANR	6151649	PrimaryExpression	0		6151620	1					
ANR	6151650	ReturnStatement	return code ;	122:8:3638:3649	6151620	1	True				
ANR	6151651	Identifier	code		6151620	0					
ANR	6151652	IfStatement	if ( pvalue -> value . const_bytes [ 0 ] > MAX_PASSWORD )		6151620	3					
ANR	6151653	Condition	pvalue -> value . const_bytes [ 0 ] > MAX_PASSWORD	123:8:3659:3701	6151620	0	True				
ANR	6151654	RelationalExpression	pvalue -> value . const_bytes [ 0 ] > MAX_PASSWORD		6151620	0		>			
ANR	6151655	ArrayIndexing	pvalue -> value . const_bytes [ 0 ]		6151620	0					
ANR	6151656	MemberAccess	pvalue -> value . const_bytes		6151620	0					
ANR	6151657	PtrMemberAccess	pvalue -> value		6151620	0					
ANR	6151658	Identifier	pvalue		6151620	0					
ANR	6151659	Identifier	value		6151620	1					
ANR	6151660	Identifier	const_bytes		6151620	1					
ANR	6151661	PrimaryExpression	0		6151620	1					
ANR	6151662	Identifier	MAX_PASSWORD		6151620	1					
ANR	6151663	ExpressionStatement	return_error ( gs_error_rangecheck )	124:8:3712:3745	6151620	1	True				
ANR	6151664	CallExpression	return_error ( gs_error_rangecheck )		6151620	0					
ANR	6151665	Callee	return_error		6151620	0					
ANR	6151666	Identifier	return_error		6151620	0					
ANR	6151667	ArgumentList	gs_error_rangecheck		6151620	1					
ANR	6151668	Argument	gs_error_rangecheck		6151620	0					
ANR	6151669	Identifier	gs_error_rangecheck		6151620	0					
ANR	6151670	ExpressionStatement	"memcpy ( ppass -> data , pvalue -> value . const_bytes + 1 , ( ppass -> size = pvalue -> value . const_bytes [ 0 ] ) )"	125:4:3769:3876	6151620	4	True				
ANR	6151671	CallExpression	"memcpy ( ppass -> data , pvalue -> value . const_bytes + 1 , ( ppass -> size = pvalue -> value . const_bytes [ 0 ] ) )"		6151620	0					
ANR	6151672	Callee	memcpy		6151620	0					
ANR	6151673	Identifier	memcpy		6151620	0					
ANR	6151674	ArgumentList	ppass -> data		6151620	1					
ANR	6151675	Argument	ppass -> data		6151620	0					
ANR	6151676	PtrMemberAccess	ppass -> data		6151620	0					
ANR	6151677	Identifier	ppass		6151620	0					
ANR	6151678	Identifier	data		6151620	1					
ANR	6151679	Argument	pvalue -> value . const_bytes + 1		6151620	1					
ANR	6151680	AdditiveExpression	pvalue -> value . const_bytes + 1		6151620	0		+			
ANR	6151681	MemberAccess	pvalue -> value . const_bytes		6151620	0					
ANR	6151682	PtrMemberAccess	pvalue -> value		6151620	0					
ANR	6151683	Identifier	pvalue		6151620	0					
ANR	6151684	Identifier	value		6151620	1					
ANR	6151685	Identifier	const_bytes		6151620	1					
ANR	6151686	PrimaryExpression	1		6151620	1					
ANR	6151687	Argument	ppass -> size = pvalue -> value . const_bytes [ 0 ]		6151620	2					
ANR	6151688	AssignmentExpression	ppass -> size = pvalue -> value . const_bytes [ 0 ]		6151620	0		=			
ANR	6151689	PtrMemberAccess	ppass -> size		6151620	0					
ANR	6151690	Identifier	ppass		6151620	0					
ANR	6151691	Identifier	size		6151620	1					
ANR	6151692	ArrayIndexing	pvalue -> value . const_bytes [ 0 ]		6151620	1					
ANR	6151693	MemberAccess	pvalue -> value . const_bytes		6151620	0					
ANR	6151694	PtrMemberAccess	pvalue -> value		6151620	0					
ANR	6151695	Identifier	pvalue		6151620	0					
ANR	6151696	Identifier	value		6151620	1					
ANR	6151697	Identifier	const_bytes		6151620	1					
ANR	6151698	PrimaryExpression	0		6151620	1					
ANR	6151699	ReturnStatement	return 0 ;	127:4:3882:3890	6151620	5	True				
ANR	6151700	PrimaryExpression	0		6151620	0					
ANR	6151701	ReturnType	int		6151620	1					
ANR	6151702	Identifier	dict_read_password		6151620	2					
ANR	6151703	ParameterList	"password * ppass , const ref * pdref , const char * pkey"		6151620	3					
ANR	6151704	Parameter	password * ppass	116:19:3480:3495	6151620	0	True				
ANR	6151705	ParameterType	password *		6151620	0					
ANR	6151706	Identifier	ppass		6151620	1					
ANR	6151707	Parameter	const ref * pdref	116:37:3498:3514	6151620	1	True				
ANR	6151708	ParameterType	const ref *		6151620	0					
ANR	6151709	Identifier	pdref		6151620	1					
ANR	6151710	Parameter	const char * pkey	116:56:3517:3532	6151620	2	True				
ANR	6151711	ParameterType	const char *		6151620	0					
ANR	6151712	Identifier	pkey		6151620	1					
ANR	6151713	CFGEntryNode	ENTRY		6151620		True				
ANR	6151714	CFGExitNode	EXIT		6151620		True				
ANR	6151715	Symbol	ppass -> size		6151620						
ANR	6151716	Symbol	code		6151620						
ANR	6151717	Symbol	& pvalue		6151620						
ANR	6151718	Symbol	gs_error_rangecheck		6151620						
ANR	6151719	Symbol	MAX_PASSWORD		6151620						
ANR	6151720	Symbol	pdref		6151620						
ANR	6151721	Symbol	pvalue		6151620						
ANR	6151722	Symbol	pvalue -> value . const_bytes		6151620						
ANR	6151723	Symbol	* pvalue -> value . const_bytes		6151620						
ANR	6151724	Symbol	ppass -> data		6151620						
ANR	6151725	Symbol	* pvalue		6151620						
ANR	6151726	Symbol	* * pvalue		6151620						
ANR	6151727	Symbol	* ppass		6151620						
ANR	6151728	Symbol	dict_find_password		6151620						
ANR	6151729	Symbol	pkey		6151620						
ANR	6151730	Symbol	pvalue -> value		6151620						
ANR	6151731	Symbol	* pvalue -> value		6151620						
ANR	6151732	Symbol	ppass		6151620						
ANR	6151733	Function	dict_write_password	129:0:3894:4519							
ANR	6151734	FunctionDef	"dict_write_password (const password * ppass , ref * pdref , const char * pkey , bool change_allowed)"		6151733	0					
ANR	6151735	CompoundStatement		132:0:4018:4519	6151733	0					
ANR	6151736	IdentifierDeclStatement	ref * pvalue ;	133:4:4024:4035	6151733	0	True				
ANR	6151737	IdentifierDecl	* pvalue		6151733	0					
ANR	6151738	IdentifierDeclType	ref *		6151733	0					
ANR	6151739	Identifier	pvalue		6151733	1					
ANR	6151740	IdentifierDeclStatement	"int code = dict_find_password ( & pvalue , pdref , pkey ) ;"	134:4:4041:4092	6151733	1	True				
ANR	6151741	IdentifierDecl	"code = dict_find_password ( & pvalue , pdref , pkey )"		6151733	0					
ANR	6151742	IdentifierDeclType	int		6151733	0					
ANR	6151743	Identifier	code		6151733	1					
ANR	6151744	AssignmentExpression	"code = dict_find_password ( & pvalue , pdref , pkey )"		6151733	2		=			
ANR	6151745	Identifier	code		6151733	0					
ANR	6151746	CallExpression	"dict_find_password ( & pvalue , pdref , pkey )"		6151733	1					
ANR	6151747	Callee	dict_find_password		6151733	0					
ANR	6151748	Identifier	dict_find_password		6151733	0					
ANR	6151749	ArgumentList	& pvalue		6151733	1					
ANR	6151750	Argument	& pvalue		6151733	0					
ANR	6151751	UnaryOperationExpression	& pvalue		6151733	0					
ANR	6151752	UnaryOperator	&		6151733	0					
ANR	6151753	Identifier	pvalue		6151733	1					
ANR	6151754	Argument	pdref		6151733	1					
ANR	6151755	Identifier	pdref		6151733	0					
ANR	6151756	Argument	pkey		6151733	2					
ANR	6151757	Identifier	pkey		6151733	0					
ANR	6151758	IfStatement	if ( code < 0 )		6151733	2					
ANR	6151759	Condition	code < 0	136:8:4103:4110	6151733	0	True				
ANR	6151760	RelationalExpression	code < 0		6151733	0		<			
ANR	6151761	Identifier	code		6151733	0					
ANR	6151762	PrimaryExpression	0		6151733	1					
ANR	6151763	ReturnStatement	return code ;	137:8:4121:4132	6151733	1	True				
ANR	6151764	Identifier	code		6151733	0					
ANR	6151765	IfStatement	if ( ppass -> size >= r_size ( pvalue ) )		6151733	3					
ANR	6151766	Condition	ppass -> size >= r_size ( pvalue )	138:8:4142:4170	6151733	0	True				
ANR	6151767	RelationalExpression	ppass -> size >= r_size ( pvalue )		6151733	0		>=			
ANR	6151768	PtrMemberAccess	ppass -> size		6151733	0					
ANR	6151769	Identifier	ppass		6151733	0					
ANR	6151770	Identifier	size		6151733	1					
ANR	6151771	CallExpression	r_size ( pvalue )		6151733	1					
ANR	6151772	Callee	r_size		6151733	0					
ANR	6151773	Identifier	r_size		6151733	0					
ANR	6151774	ArgumentList	pvalue		6151733	1					
ANR	6151775	Argument	pvalue		6151733	0					
ANR	6151776	Identifier	pvalue		6151733	0					
ANR	6151777	ExpressionStatement	return_error ( gs_error_rangecheck )	139:8:4181:4214	6151733	1	True				
ANR	6151778	CallExpression	return_error ( gs_error_rangecheck )		6151733	0					
ANR	6151779	Callee	return_error		6151733	0					
ANR	6151780	Identifier	return_error		6151733	0					
ANR	6151781	ArgumentList	gs_error_rangecheck		6151733	1					
ANR	6151782	Argument	gs_error_rangecheck		6151733	0					
ANR	6151783	Identifier	gs_error_rangecheck		6151733	0					
ANR	6151784	IfStatement	"if ( ! change_allowed && bytes_compare ( pvalue -> value . bytes + 1 , pvalue -> value . bytes [ 0 ] , ppass -> data , ppass -> size ) != 0 )"		6151733	4					
ANR	6151785	Condition	"! change_allowed && bytes_compare ( pvalue -> value . bytes + 1 , pvalue -> value . bytes [ 0 ] , ppass -> data , ppass -> size ) != 0"	140:8:4224:4355	6151733	0	True				
ANR	6151786	AndExpression	"! change_allowed && bytes_compare ( pvalue -> value . bytes + 1 , pvalue -> value . bytes [ 0 ] , ppass -> data , ppass -> size ) != 0"		6151733	0		&&			
ANR	6151787	UnaryOperationExpression	! change_allowed		6151733	0					
ANR	6151788	UnaryOperator	!		6151733	0					
ANR	6151789	Identifier	change_allowed		6151733	1					
ANR	6151790	EqualityExpression	"bytes_compare ( pvalue -> value . bytes + 1 , pvalue -> value . bytes [ 0 ] , ppass -> data , ppass -> size ) != 0"		6151733	1		!=			
ANR	6151791	CallExpression	"bytes_compare ( pvalue -> value . bytes + 1 , pvalue -> value . bytes [ 0 ] , ppass -> data , ppass -> size )"		6151733	0					
ANR	6151792	Callee	bytes_compare		6151733	0					
ANR	6151793	Identifier	bytes_compare		6151733	0					
ANR	6151794	ArgumentList	pvalue -> value . bytes + 1		6151733	1					
ANR	6151795	Argument	pvalue -> value . bytes + 1		6151733	0					
ANR	6151796	AdditiveExpression	pvalue -> value . bytes + 1		6151733	0		+			
ANR	6151797	MemberAccess	pvalue -> value . bytes		6151733	0					
ANR	6151798	PtrMemberAccess	pvalue -> value		6151733	0					
ANR	6151799	Identifier	pvalue		6151733	0					
ANR	6151800	Identifier	value		6151733	1					
ANR	6151801	Identifier	bytes		6151733	1					
ANR	6151802	PrimaryExpression	1		6151733	1					
ANR	6151803	Argument	pvalue -> value . bytes [ 0 ]		6151733	1					
ANR	6151804	ArrayIndexing	pvalue -> value . bytes [ 0 ]		6151733	0					
ANR	6151805	MemberAccess	pvalue -> value . bytes		6151733	0					
ANR	6151806	PtrMemberAccess	pvalue -> value		6151733	0					
ANR	6151807	Identifier	pvalue		6151733	0					
ANR	6151808	Identifier	value		6151733	1					
ANR	6151809	Identifier	bytes		6151733	1					
ANR	6151810	PrimaryExpression	0		6151733	1					
ANR	6151811	Argument	ppass -> data		6151733	2					
ANR	6151812	PtrMemberAccess	ppass -> data		6151733	0					
ANR	6151813	Identifier	ppass		6151733	0					
ANR	6151814	Identifier	data		6151733	1					
ANR	6151815	Argument	ppass -> size		6151733	3					
ANR	6151816	PtrMemberAccess	ppass -> size		6151733	0					
ANR	6151817	Identifier	ppass		6151733	0					
ANR	6151818	Identifier	size		6151733	1					
ANR	6151819	PrimaryExpression	0		6151733	1					
ANR	6151820	ExpressionStatement	return_error ( gs_error_invalidaccess )	143:8:4366:4402	6151733	1	True				
ANR	6151821	CallExpression	return_error ( gs_error_invalidaccess )		6151733	0					
ANR	6151822	Callee	return_error		6151733	0					
ANR	6151823	Identifier	return_error		6151733	0					
ANR	6151824	ArgumentList	gs_error_invalidaccess		6151733	1					
ANR	6151825	Argument	gs_error_invalidaccess		6151733	0					
ANR	6151826	Identifier	gs_error_invalidaccess		6151733	0					
ANR	6151827	ExpressionStatement	"memcpy ( pvalue -> value . bytes + 1 , ppass -> data , ( pvalue -> value . bytes [ 0 ] = ppass -> size ) )"	144:4:4408:4503	6151733	5	True				
ANR	6151828	CallExpression	"memcpy ( pvalue -> value . bytes + 1 , ppass -> data , ( pvalue -> value . bytes [ 0 ] = ppass -> size ) )"		6151733	0					
ANR	6151829	Callee	memcpy		6151733	0					
ANR	6151830	Identifier	memcpy		6151733	0					
ANR	6151831	ArgumentList	pvalue -> value . bytes + 1		6151733	1					
ANR	6151832	Argument	pvalue -> value . bytes + 1		6151733	0					
ANR	6151833	AdditiveExpression	pvalue -> value . bytes + 1		6151733	0		+			
ANR	6151834	MemberAccess	pvalue -> value . bytes		6151733	0					
ANR	6151835	PtrMemberAccess	pvalue -> value		6151733	0					
ANR	6151836	Identifier	pvalue		6151733	0					
ANR	6151837	Identifier	value		6151733	1					
ANR	6151838	Identifier	bytes		6151733	1					
ANR	6151839	PrimaryExpression	1		6151733	1					
ANR	6151840	Argument	ppass -> data		6151733	1					
ANR	6151841	PtrMemberAccess	ppass -> data		6151733	0					
ANR	6151842	Identifier	ppass		6151733	0					
ANR	6151843	Identifier	data		6151733	1					
ANR	6151844	Argument	pvalue -> value . bytes [ 0 ] = ppass -> size		6151733	2					
ANR	6151845	AssignmentExpression	pvalue -> value . bytes [ 0 ] = ppass -> size		6151733	0		=			
ANR	6151846	ArrayIndexing	pvalue -> value . bytes [ 0 ]		6151733	0					
ANR	6151847	MemberAccess	pvalue -> value . bytes		6151733	0					
ANR	6151848	PtrMemberAccess	pvalue -> value		6151733	0					
ANR	6151849	Identifier	pvalue		6151733	0					
ANR	6151850	Identifier	value		6151733	1					
ANR	6151851	Identifier	bytes		6151733	1					
ANR	6151852	PrimaryExpression	0		6151733	1					
ANR	6151853	PtrMemberAccess	ppass -> size		6151733	1					
ANR	6151854	Identifier	ppass		6151733	0					
ANR	6151855	Identifier	size		6151733	1					
ANR	6151856	ReturnStatement	return 0 ;	146:4:4509:4517	6151733	6	True				
ANR	6151857	PrimaryExpression	0		6151733	0					
ANR	6151858	ReturnType	int		6151733	1					
ANR	6151859	Identifier	dict_write_password		6151733	2					
ANR	6151860	ParameterList	"const password * ppass , ref * pdref , const char * pkey , bool change_allowed"		6151733	3					
ANR	6151861	Parameter	const password * ppass	130:20:3918:3939	6151733	0	True				
ANR	6151862	ParameterType	const password *		6151733	0					
ANR	6151863	Identifier	ppass		6151733	1					
ANR	6151864	Parameter	ref * pdref	130:44:3942:3952	6151733	1	True				
ANR	6151865	ParameterType	ref *		6151733	0					
ANR	6151866	Identifier	pdref		6151733	1					
ANR	6151867	Parameter	const char * pkey	130:57:3955:3970	6151733	2	True				
ANR	6151868	ParameterType	const char *		6151733	0					
ANR	6151869	Identifier	pkey		6151733	1					
ANR	6151870	Parameter	bool change_allowed	131:24:3997:4015	6151733	3	True				
ANR	6151871	ParameterType	bool		6151733	0					
ANR	6151872	Identifier	change_allowed		6151733	1					
ANR	6151873	CFGEntryNode	ENTRY		6151733		True				
ANR	6151874	CFGExitNode	EXIT		6151733		True				
ANR	6151875	Symbol	ppass -> size		6151733						
ANR	6151876	Symbol	code		6151733						
ANR	6151877	Symbol	pvalue -> value . bytes		6151733						
ANR	6151878	Symbol	& pvalue		6151733						
ANR	6151879	Symbol	gs_error_rangecheck		6151733						
ANR	6151880	Symbol	pdref		6151733						
ANR	6151881	Symbol	change_allowed		6151733						
ANR	6151882	Symbol	pvalue		6151733						
ANR	6151883	Symbol	ppass -> data		6151733						
ANR	6151884	Symbol	* * pvalue		6151733						
ANR	6151885	Symbol	* pvalue		6151733						
ANR	6151886	Symbol	* ppass		6151733						
ANR	6151887	Symbol	r_size		6151733						
ANR	6151888	Symbol	dict_find_password		6151733						
ANR	6151889	Symbol	gs_error_invalidaccess		6151733						
ANR	6151890	Symbol	pkey		6151733						
ANR	6151891	Symbol	* pvalue -> value . bytes		6151733						
ANR	6151892	Symbol	pvalue -> value		6151733						
ANR	6151893	Symbol	* pvalue -> value		6151733						
ANR	6151894	Symbol	bytes_compare		6151733						
ANR	6151895	Symbol	ppass		6151733						
