command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6895894	File	data/converged/CVE-2018-16863_ghostpdl/jpxtopdf.c								
ANR	6895895	DeclStmt									
ANR	6895896	Decl							int	int [ 8000 ]	pages
ANR	6895897	DeclStmt									
ANR	6895898	Decl							int	int	npages
ANR	6895899	DeclStmt									
ANR	6895900	Decl							int	int [ 8000 * 3 + 100 ]	xref
ANR	6895901	DeclStmt									
ANR	6895902	Decl							int	int	nxref
ANR	6895903	ClassDef	<unnamed>	33:8:911:1379							
ANR	6895904	DeclStmt									
ANR	6895905	Decl							char	char *	filename
ANR	6895906	DeclStmt									
ANR	6895907	Decl							int	int	filesize
ANR	6895908	DeclStmt									
ANR	6895909	Decl							int	int	width
ANR	6895910	DeclStmt									
ANR	6895911	Decl							int	int	height
ANR	6895912	DeclStmt									
ANR	6895913	Decl							int	int	numcmpts
ANR	6895914	DeclStmt									
ANR	6895915	Decl							int	int	depth
ANR	6895916	DeclStmt									
ANR	6895917	Decl							double	double	dpi
ANR	6895918	DeclStmt									
ANR	6895919	Decl									imagedata
ANR	6895920	ClassDef	<unnamed>	48:0:1464:1483							
ANR	6895921	ClassDef	box_s	50:8:1495:1787							
ANR	6895922	DeclStmt									
ANR	6895923	Decl							unsigned int	unsigned int	length
ANR	6895924	DeclStmt									
ANR	6895925	Decl							char	char [ 5 ]	type
ANR	6895926	DeclStmt									
ANR	6895927	Decl							const unsigned char	const unsigned char *	data
ANR	6895928	DeclStmt									
ANR	6895929	Decl							unsigned int	unsigned int	size
ANR	6895930	DeclStmt									
ANR	6895931	Decl							void	void *	rez
ANR	6895932	DeclStmt									
ANR	6895933	Decl							struct box_s	struct box_s *	next
ANR	6895934	DeclStmt									
ANR	6895935	Decl							box_s	box_s	box_t
ANR	6895936	ClassDef	<unnamed>	59:8:1798:1860							
ANR	6895937	DeclStmt									
ANR	6895938	Decl							char	char [ 5 ]	brand
ANR	6895939	DeclStmt									
ANR	6895940	Decl							unsigned int	unsigned int	version
ANR	6895941	DeclStmt									
ANR	6895942	Decl									box_ftyp_t
ANR	6895943	ClassDef	<unnamed>	64:8:1871:2199							
ANR	6895944	DeclStmt									
ANR	6895945	Decl							unsigned int	unsigned int	width
ANR	6895946	Decl							unsigned int	unsigned int	height
ANR	6895947	DeclStmt									
ANR	6895948	Decl							unsigned int	unsigned int	nc
ANR	6895949	DeclStmt									
ANR	6895950	Decl							int	int	bpc
ANR	6895951	DeclStmt									
ANR	6895952	Decl							int	int	sign
ANR	6895953	DeclStmt									
ANR	6895954	Decl							int	int	C
ANR	6895955	DeclStmt									
ANR	6895956	Decl							int	int	UnkC
ANR	6895957	DeclStmt									
ANR	6895958	Decl							int	int	IPR
ANR	6895959	DeclStmt									
ANR	6895960	Decl									box_ihdr_t
ANR	6895961	Function	read_uint32	74:0:2202:2319							
ANR	6895962	FunctionDef	read_uint32 (const unsigned char * p)		6895961	0					
ANR	6895963	CompoundStatement		75:0:2258:2319	6895961	0					
ANR	6895964	ReturnStatement	return ( p [ 0 ] << 24 ) | ( p [ 1 ] << 16 ) | ( p [ 2 ] << 8 ) | p [ 3 ] ;	76:2:2262:2317	6895961	0	True				
ANR	6895965	InclusiveOrExpression	( p [ 0 ] << 24 ) | ( p [ 1 ] << 16 ) | ( p [ 2 ] << 8 ) | p [ 3 ]		6895961	0		|			
ANR	6895966	ShiftExpression	p [ 0 ] << 24		6895961	0		<<			
ANR	6895967	ArrayIndexing	p [ 0 ]		6895961	0					
ANR	6895968	Identifier	p		6895961	0					
ANR	6895969	PrimaryExpression	0		6895961	1					
ANR	6895970	PrimaryExpression	24		6895961	1					
ANR	6895971	InclusiveOrExpression	( p [ 1 ] << 16 ) | ( p [ 2 ] << 8 ) | p [ 3 ]		6895961	1		|			
ANR	6895972	ShiftExpression	p [ 1 ] << 16		6895961	0		<<			
ANR	6895973	ArrayIndexing	p [ 1 ]		6895961	0					
ANR	6895974	Identifier	p		6895961	0					
ANR	6895975	PrimaryExpression	1		6895961	1					
ANR	6895976	PrimaryExpression	16		6895961	1					
ANR	6895977	InclusiveOrExpression	( p [ 2 ] << 8 ) | p [ 3 ]		6895961	1		|			
ANR	6895978	ShiftExpression	p [ 2 ] << 8		6895961	0		<<			
ANR	6895979	ArrayIndexing	p [ 2 ]		6895961	0					
ANR	6895980	Identifier	p		6895961	0					
ANR	6895981	PrimaryExpression	2		6895961	1					
ANR	6895982	PrimaryExpression	8		6895961	1					
ANR	6895983	ArrayIndexing	p [ 3 ]		6895961	1					
ANR	6895984	Identifier	p		6895961	0					
ANR	6895985	PrimaryExpression	3		6895961	1					
ANR	6895986	ReturnType	static unsigned int		6895961	1					
ANR	6895987	Identifier	read_uint32		6895961	2					
ANR	6895988	ParameterList	const unsigned char * p		6895961	3					
ANR	6895989	Parameter	const unsigned char * p	74:32:2234:2255	6895961	0	True				
ANR	6895990	ParameterType	const unsigned char *		6895961	0					
ANR	6895991	Identifier	p		6895961	1					
ANR	6895992	CFGEntryNode	ENTRY		6895961		True				
ANR	6895993	CFGExitNode	EXIT		6895961		True				
ANR	6895994	Symbol	p		6895961						
ANR	6895995	Symbol	* p		6895961						
ANR	6895996	Function	read_uint16	79:0:2322:2409							
ANR	6895997	FunctionDef	read_uint16 (const unsigned char * p)		6895996	0					
ANR	6895998	CompoundStatement		80:0:2378:2409	6895996	0					
ANR	6895999	ReturnStatement	return ( p [ 0 ] << 8 ) | p [ 1 ] ;	81:2:2382:2407	6895996	0	True				
ANR	6896000	InclusiveOrExpression	( p [ 0 ] << 8 ) | p [ 1 ]		6895996	0		|			
ANR	6896001	ShiftExpression	p [ 0 ] << 8		6895996	0		<<			
ANR	6896002	ArrayIndexing	p [ 0 ]		6895996	0					
ANR	6896003	Identifier	p		6895996	0					
ANR	6896004	PrimaryExpression	0		6895996	1					
ANR	6896005	PrimaryExpression	8		6895996	1					
ANR	6896006	ArrayIndexing	p [ 1 ]		6895996	1					
ANR	6896007	Identifier	p		6895996	0					
ANR	6896008	PrimaryExpression	1		6895996	1					
ANR	6896009	ReturnType	static unsigned int		6895996	1					
ANR	6896010	Identifier	read_uint16		6895996	2					
ANR	6896011	ParameterList	const unsigned char * p		6895996	3					
ANR	6896012	Parameter	const unsigned char * p	79:32:2354:2375	6895996	0	True				
ANR	6896013	ParameterType	const unsigned char *		6895996	0					
ANR	6896014	Identifier	p		6895996	1					
ANR	6896015	CFGEntryNode	ENTRY		6895996		True				
ANR	6896016	CFGExitNode	EXIT		6895996		True				
ANR	6896017	Symbol	p		6895996						
ANR	6896018	Symbol	* p		6895996						
ANR	6896019	Function	box_free	84:0:2412:2506							
ANR	6896020	FunctionDef	box_free (box_t * box)		6896019	0					
ANR	6896021	CompoundStatement		85:0:2438:2506	6896019	0					
ANR	6896022	IfStatement	if ( box )		6896019	0					
ANR	6896023	Condition	box	86:6:2446:2448	6896019	0	True				
ANR	6896024	Identifier	box		6896019	0					
ANR	6896025	CompoundStatement		2:11:12:12	6896019	1					
ANR	6896026	IfStatement	if ( box -> rez )		6896019	0					
ANR	6896027	Condition	box -> rez	87:8:2461:2468	6896019	0	True				
ANR	6896028	PtrMemberAccess	box -> rez		6896019	0					
ANR	6896029	Identifier	box		6896019	0					
ANR	6896030	Identifier	rez		6896019	1					
ANR	6896031	ExpressionStatement	free ( box -> rez )	87:18:2471:2485	6896019	1	True				
ANR	6896032	CallExpression	free ( box -> rez )		6896019	0					
ANR	6896033	Callee	free		6896019	0					
ANR	6896034	Identifier	free		6896019	0					
ANR	6896035	ArgumentList	box -> rez		6896019	1					
ANR	6896036	Argument	box -> rez		6896019	0					
ANR	6896037	PtrMemberAccess	box -> rez		6896019	0					
ANR	6896038	Identifier	box		6896019	0					
ANR	6896039	Identifier	rez		6896019	1					
ANR	6896040	ExpressionStatement	free ( box )	88:4:2491:2500	6896019	1	True				
ANR	6896041	CallExpression	free ( box )		6896019	0					
ANR	6896042	Callee	free		6896019	0					
ANR	6896043	Identifier	free		6896019	0					
ANR	6896044	ArgumentList	box		6896019	1					
ANR	6896045	Argument	box		6896019	0					
ANR	6896046	Identifier	box		6896019	0					
ANR	6896047	ReturnType	void		6896019	1					
ANR	6896048	Identifier	box_free		6896019	2					
ANR	6896049	ParameterList	box_t * box		6896019	3					
ANR	6896050	Parameter	box_t * box	84:14:2426:2435	6896019	0	True				
ANR	6896051	ParameterType	box_t *		6896019	0					
ANR	6896052	Identifier	box		6896019	1					
ANR	6896053	CFGEntryNode	ENTRY		6896019		True				
ANR	6896054	CFGExitNode	EXIT		6896019		True				
ANR	6896055	Symbol	box		6896019						
ANR	6896056	Symbol	* box		6896019						
ANR	6896057	Symbol	box -> rez		6896019						
ANR	6896058	Function	box_read	92:0:2509:3690							
ANR	6896059	FunctionDef	"box_read (const unsigned char * buf , const long size)"		6896058	0					
ANR	6896060	CompoundStatement		93:0:2568:3690	6896058	0					
ANR	6896061	IdentifierDeclStatement	box_t * box ;	94:2:2572:2582	6896058	0	True				
ANR	6896062	IdentifierDecl	* box		6896058	0					
ANR	6896063	IdentifierDeclType	box_t *		6896058	0					
ANR	6896064	Identifier	box		6896058	1					
ANR	6896065	IfStatement	if ( size < 8 )		6896058	1					
ANR	6896066	Condition	size < 8	96:6:2591:2598	6896058	0	True				
ANR	6896067	RelationalExpression	size < 8		6896058	0		<			
ANR	6896068	Identifier	size		6896058	0					
ANR	6896069	PrimaryExpression	8		6896058	1					
ANR	6896070	ReturnStatement	return NULL ;	96:16:2601:2612	6896058	1	True				
ANR	6896071	Identifier	NULL		6896058	0					
ANR	6896072	ExpressionStatement	box = malloc ( sizeof ( * box ) )	98:2:2617:2643	6896058	2	True				
ANR	6896073	AssignmentExpression	box = malloc ( sizeof ( * box ) )		6896058	0		=			
ANR	6896074	Identifier	box		6896058	0					
ANR	6896075	CallExpression	malloc ( sizeof ( * box ) )		6896058	1					
ANR	6896076	Callee	malloc		6896058	0					
ANR	6896077	Identifier	malloc		6896058	0					
ANR	6896078	ArgumentList	sizeof ( * box )		6896058	1					
ANR	6896079	Argument	sizeof ( * box )		6896058	0					
ANR	6896080	SizeofExpression	sizeof ( * box )		6896058	0					
ANR	6896081	Sizeof	sizeof		6896058	0					
ANR	6896082	UnaryOperationExpression	* box		6896058	1					
ANR	6896083	UnaryOperator	*		6896058	0					
ANR	6896084	Identifier	box		6896058	1					
ANR	6896085	IfStatement	if ( box )		6896058	3					
ANR	6896086	Condition	box	99:6:2651:2653	6896058	0	True				
ANR	6896087	Identifier	box		6896058	0					
ANR	6896088	CompoundStatement		7:11:87:87	6896058	1					
ANR	6896089	ExpressionStatement	box -> length = read_uint32 ( buf )	100:4:2662:2692	6896058	0	True				
ANR	6896090	AssignmentExpression	box -> length = read_uint32 ( buf )		6896058	0		=			
ANR	6896091	PtrMemberAccess	box -> length		6896058	0					
ANR	6896092	Identifier	box		6896058	0					
ANR	6896093	Identifier	length		6896058	1					
ANR	6896094	CallExpression	read_uint32 ( buf )		6896058	1					
ANR	6896095	Callee	read_uint32		6896058	0					
ANR	6896096	Identifier	read_uint32		6896058	0					
ANR	6896097	ArgumentList	buf		6896058	1					
ANR	6896098	Argument	buf		6896058	0					
ANR	6896099	Identifier	buf		6896058	0					
ANR	6896100	ExpressionStatement	"memcpy ( box -> type , buf + 4 , 4 )"	101:4:2698:2727	6896058	1	True				
ANR	6896101	CallExpression	"memcpy ( box -> type , buf + 4 , 4 )"		6896058	0					
ANR	6896102	Callee	memcpy		6896058	0					
ANR	6896103	Identifier	memcpy		6896058	0					
ANR	6896104	ArgumentList	box -> type		6896058	1					
ANR	6896105	Argument	box -> type		6896058	0					
ANR	6896106	PtrMemberAccess	box -> type		6896058	0					
ANR	6896107	Identifier	box		6896058	0					
ANR	6896108	Identifier	type		6896058	1					
ANR	6896109	Argument	buf + 4		6896058	1					
ANR	6896110	AdditiveExpression	buf + 4		6896058	0		+			
ANR	6896111	Identifier	buf		6896058	0					
ANR	6896112	PrimaryExpression	4		6896058	1					
ANR	6896113	Argument	4		6896058	2					
ANR	6896114	PrimaryExpression	4		6896058	0					
ANR	6896115	ExpressionStatement	box -> type [ 4 ] = '\\0'	102:4:2733:2752	6896058	2	True				
ANR	6896116	AssignmentExpression	box -> type [ 4 ] = '\\0'		6896058	0		=			
ANR	6896117	ArrayIndexing	box -> type [ 4 ]		6896058	0					
ANR	6896118	PtrMemberAccess	box -> type		6896058	0					
ANR	6896119	Identifier	box		6896058	0					
ANR	6896120	Identifier	type		6896058	1					
ANR	6896121	PrimaryExpression	4		6896058	1					
ANR	6896122	PrimaryExpression	'\\0'		6896058	1					
ANR	6896123	ExpressionStatement	box -> data = buf + 8	103:4:2758:2777	6896058	3	True				
ANR	6896124	AssignmentExpression	box -> data = buf + 8		6896058	0		=			
ANR	6896125	PtrMemberAccess	box -> data		6896058	0					
ANR	6896126	Identifier	box		6896058	0					
ANR	6896127	Identifier	data		6896058	1					
ANR	6896128	AdditiveExpression	buf + 8		6896058	1		+			
ANR	6896129	Identifier	buf		6896058	0					
ANR	6896130	PrimaryExpression	8		6896058	1					
ANR	6896131	ExpressionStatement	"box -> size = MIN ( box -> length , size )"	104:4:2783:2817	6896058	4	True				
ANR	6896132	AssignmentExpression	"box -> size = MIN ( box -> length , size )"		6896058	0		=			
ANR	6896133	PtrMemberAccess	box -> size		6896058	0					
ANR	6896134	Identifier	box		6896058	0					
ANR	6896135	Identifier	size		6896058	1					
ANR	6896136	CallExpression	"MIN ( box -> length , size )"		6896058	1					
ANR	6896137	Callee	MIN		6896058	0					
ANR	6896138	Identifier	MIN		6896058	0					
ANR	6896139	ArgumentList	box -> length		6896058	1					
ANR	6896140	Argument	box -> length		6896058	0					
ANR	6896141	PtrMemberAccess	box -> length		6896058	0					
ANR	6896142	Identifier	box		6896058	0					
ANR	6896143	Identifier	length		6896058	1					
ANR	6896144	Argument	size		6896058	1					
ANR	6896145	Identifier	size		6896058	0					
ANR	6896146	ExpressionStatement	box -> rez = NULL	105:4:2823:2838	6896058	5	True				
ANR	6896147	AssignmentExpression	box -> rez = NULL		6896058	0		=			
ANR	6896148	PtrMemberAccess	box -> rez		6896058	0					
ANR	6896149	Identifier	box		6896058	0					
ANR	6896150	Identifier	rez		6896058	1					
ANR	6896151	Identifier	NULL		6896058	1					
ANR	6896152	ExpressionStatement	box -> next = NULL	106:4:2844:2860	6896058	6	True				
ANR	6896153	AssignmentExpression	box -> next = NULL		6896058	0		=			
ANR	6896154	PtrMemberAccess	box -> next		6896058	0					
ANR	6896155	Identifier	box		6896058	0					
ANR	6896156	Identifier	next		6896058	1					
ANR	6896157	Identifier	NULL		6896058	1					
ANR	6896158	IfStatement	"if ( ! memcmp ( box -> type , ""ftyp"" , 4 ) )"		6896058	7					
ANR	6896159	Condition	"! memcmp ( box -> type , ""ftyp"" , 4 )"	108:8:2871:2899	6896058	0	True				
ANR	6896160	UnaryOperationExpression	"! memcmp ( box -> type , ""ftyp"" , 4 )"		6896058	0					
ANR	6896161	UnaryOperator	!		6896058	0					
ANR	6896162	CallExpression	"memcmp ( box -> type , ""ftyp"" , 4 )"		6896058	1					
ANR	6896163	Callee	memcmp		6896058	0					
ANR	6896164	Identifier	memcmp		6896058	0					
ANR	6896165	ArgumentList	box -> type		6896058	1					
ANR	6896166	Argument	box -> type		6896058	0					
ANR	6896167	PtrMemberAccess	box -> type		6896058	0					
ANR	6896168	Identifier	box		6896058	0					
ANR	6896169	Identifier	type		6896058	1					
ANR	6896170	Argument	"""ftyp"""		6896058	1					
ANR	6896171	PrimaryExpression	"""ftyp"""		6896058	0					
ANR	6896172	Argument	4		6896058	2					
ANR	6896173	PrimaryExpression	4		6896058	0					
ANR	6896174	CompoundStatement		18:6:367:407	6896058	1					
ANR	6896175	IdentifierDeclStatement	box_ftyp_t * ftyp = malloc ( sizeof ( * ftyp ) ) ;	110:6:2936:2976	6896058	0	True				
ANR	6896176	IdentifierDecl	* ftyp = malloc ( sizeof ( * ftyp ) )		6896058	0					
ANR	6896177	IdentifierDeclType	box_ftyp_t *		6896058	0					
ANR	6896178	Identifier	ftyp		6896058	1					
ANR	6896179	AssignmentExpression	* ftyp = malloc ( sizeof ( * ftyp ) )		6896058	2		=			
ANR	6896180	Identifier	ftyp		6896058	0					
ANR	6896181	CallExpression	malloc ( sizeof ( * ftyp ) )		6896058	1					
ANR	6896182	Callee	malloc		6896058	0					
ANR	6896183	Identifier	malloc		6896058	0					
ANR	6896184	ArgumentList	sizeof ( * ftyp )		6896058	1					
ANR	6896185	Argument	sizeof ( * ftyp )		6896058	0					
ANR	6896186	SizeofExpression	sizeof ( * ftyp )		6896058	0					
ANR	6896187	Sizeof	sizeof		6896058	0					
ANR	6896188	UnaryOperationExpression	* ftyp		6896058	1					
ANR	6896189	UnaryOperator	*		6896058	0					
ANR	6896190	Identifier	ftyp		6896058	1					
ANR	6896191	IfStatement	if ( ftyp )		6896058	1					
ANR	6896192	Condition	ftyp	111:10:2988:2991	6896058	0	True				
ANR	6896193	Identifier	ftyp		6896058	0					
ANR	6896194	CompoundStatement		19:16:425:425	6896058	1					
ANR	6896195	ExpressionStatement	"memcpy ( ftyp -> brand , box -> data , 4 )"	112:8:3004:3037	6896058	0	True				
ANR	6896196	CallExpression	"memcpy ( ftyp -> brand , box -> data , 4 )"		6896058	0					
ANR	6896197	Callee	memcpy		6896058	0					
ANR	6896198	Identifier	memcpy		6896058	0					
ANR	6896199	ArgumentList	ftyp -> brand		6896058	1					
ANR	6896200	Argument	ftyp -> brand		6896058	0					
ANR	6896201	PtrMemberAccess	ftyp -> brand		6896058	0					
ANR	6896202	Identifier	ftyp		6896058	0					
ANR	6896203	Identifier	brand		6896058	1					
ANR	6896204	Argument	box -> data		6896058	1					
ANR	6896205	PtrMemberAccess	box -> data		6896058	0					
ANR	6896206	Identifier	box		6896058	0					
ANR	6896207	Identifier	data		6896058	1					
ANR	6896208	Argument	4		6896058	2					
ANR	6896209	PrimaryExpression	4		6896058	0					
ANR	6896210	ExpressionStatement	ftyp -> brand [ 4 ] = '\\0'	113:8:3047:3068	6896058	1	True				
ANR	6896211	AssignmentExpression	ftyp -> brand [ 4 ] = '\\0'		6896058	0		=			
ANR	6896212	ArrayIndexing	ftyp -> brand [ 4 ]		6896058	0					
ANR	6896213	PtrMemberAccess	ftyp -> brand		6896058	0					
ANR	6896214	Identifier	ftyp		6896058	0					
ANR	6896215	Identifier	brand		6896058	1					
ANR	6896216	PrimaryExpression	4		6896058	1					
ANR	6896217	PrimaryExpression	'\\0'		6896058	1					
ANR	6896218	ExpressionStatement	ftyp -> version = read_uint32 ( box -> data + 4 )	114:8:3078:3120	6896058	2	True				
ANR	6896219	AssignmentExpression	ftyp -> version = read_uint32 ( box -> data + 4 )		6896058	0		=			
ANR	6896220	PtrMemberAccess	ftyp -> version		6896058	0					
ANR	6896221	Identifier	ftyp		6896058	0					
ANR	6896222	Identifier	version		6896058	1					
ANR	6896223	CallExpression	read_uint32 ( box -> data + 4 )		6896058	1					
ANR	6896224	Callee	read_uint32		6896058	0					
ANR	6896225	Identifier	read_uint32		6896058	0					
ANR	6896226	ArgumentList	box -> data + 4		6896058	1					
ANR	6896227	Argument	box -> data + 4		6896058	0					
ANR	6896228	AdditiveExpression	box -> data + 4		6896058	0		+			
ANR	6896229	PtrMemberAccess	box -> data		6896058	0					
ANR	6896230	Identifier	box		6896058	0					
ANR	6896231	Identifier	data		6896058	1					
ANR	6896232	PrimaryExpression	4		6896058	1					
ANR	6896233	ExpressionStatement	box -> rez = ftyp	116:6:3136:3151	6896058	2	True				
ANR	6896234	AssignmentExpression	box -> rez = ftyp		6896058	0		=			
ANR	6896235	PtrMemberAccess	box -> rez		6896058	0					
ANR	6896236	Identifier	box		6896058	0					
ANR	6896237	Identifier	rez		6896058	1					
ANR	6896238	Identifier	ftyp		6896058	1					
ANR	6896239	ElseStatement	else		6896058	0					
ANR	6896240	IfStatement	"if ( ! memcmp ( box -> type , ""ihdr"" , 4 ) )"		6896058	0					
ANR	6896241	Condition	"! memcmp ( box -> type , ""ihdr"" , 4 )"	117:15:3168:3196	6896058	0	True				
ANR	6896242	UnaryOperationExpression	"! memcmp ( box -> type , ""ihdr"" , 4 )"		6896058	0					
ANR	6896243	UnaryOperator	!		6896058	0					
ANR	6896244	CallExpression	"memcmp ( box -> type , ""ihdr"" , 4 )"		6896058	1					
ANR	6896245	Callee	memcmp		6896058	0					
ANR	6896246	Identifier	memcmp		6896058	0					
ANR	6896247	ArgumentList	box -> type		6896058	1					
ANR	6896248	Argument	box -> type		6896058	0					
ANR	6896249	PtrMemberAccess	box -> type		6896058	0					
ANR	6896250	Identifier	box		6896058	0					
ANR	6896251	Identifier	type		6896058	1					
ANR	6896252	Argument	"""ihdr"""		6896058	1					
ANR	6896253	PrimaryExpression	"""ihdr"""		6896058	0					
ANR	6896254	Argument	4		6896058	2					
ANR	6896255	PrimaryExpression	4		6896058	0					
ANR	6896256	CompoundStatement		27:6:667:707	6896058	1					
ANR	6896257	IdentifierDeclStatement	box_ihdr_t * ihdr = malloc ( sizeof ( * ihdr ) ) ;	119:6:3236:3276	6896058	0	True				
ANR	6896258	IdentifierDecl	* ihdr = malloc ( sizeof ( * ihdr ) )		6896058	0					
ANR	6896259	IdentifierDeclType	box_ihdr_t *		6896058	0					
ANR	6896260	Identifier	ihdr		6896058	1					
ANR	6896261	AssignmentExpression	* ihdr = malloc ( sizeof ( * ihdr ) )		6896058	2		=			
ANR	6896262	Identifier	ihdr		6896058	0					
ANR	6896263	CallExpression	malloc ( sizeof ( * ihdr ) )		6896058	1					
ANR	6896264	Callee	malloc		6896058	0					
ANR	6896265	Identifier	malloc		6896058	0					
ANR	6896266	ArgumentList	sizeof ( * ihdr )		6896058	1					
ANR	6896267	Argument	sizeof ( * ihdr )		6896058	0					
ANR	6896268	SizeofExpression	sizeof ( * ihdr )		6896058	0					
ANR	6896269	Sizeof	sizeof		6896058	0					
ANR	6896270	UnaryOperationExpression	* ihdr		6896058	1					
ANR	6896271	UnaryOperator	*		6896058	0					
ANR	6896272	Identifier	ihdr		6896058	1					
ANR	6896273	IfStatement	if ( ihdr )		6896058	1					
ANR	6896274	Condition	ihdr	120:10:3288:3291	6896058	0	True				
ANR	6896275	Identifier	ihdr		6896058	0					
ANR	6896276	CompoundStatement		28:16:725:725	6896058	1					
ANR	6896277	ExpressionStatement	ihdr -> height = read_uint32 ( box -> data )	121:8:3304:3341	6896058	0	True				
ANR	6896278	AssignmentExpression	ihdr -> height = read_uint32 ( box -> data )		6896058	0		=			
ANR	6896279	PtrMemberAccess	ihdr -> height		6896058	0					
ANR	6896280	Identifier	ihdr		6896058	0					
ANR	6896281	Identifier	height		6896058	1					
ANR	6896282	CallExpression	read_uint32 ( box -> data )		6896058	1					
ANR	6896283	Callee	read_uint32		6896058	0					
ANR	6896284	Identifier	read_uint32		6896058	0					
ANR	6896285	ArgumentList	box -> data		6896058	1					
ANR	6896286	Argument	box -> data		6896058	0					
ANR	6896287	PtrMemberAccess	box -> data		6896058	0					
ANR	6896288	Identifier	box		6896058	0					
ANR	6896289	Identifier	data		6896058	1					
ANR	6896290	ExpressionStatement	ihdr -> width = read_uint32 ( box -> data + 4 )	122:8:3351:3391	6896058	1	True				
ANR	6896291	AssignmentExpression	ihdr -> width = read_uint32 ( box -> data + 4 )		6896058	0		=			
ANR	6896292	PtrMemberAccess	ihdr -> width		6896058	0					
ANR	6896293	Identifier	ihdr		6896058	0					
ANR	6896294	Identifier	width		6896058	1					
ANR	6896295	CallExpression	read_uint32 ( box -> data + 4 )		6896058	1					
ANR	6896296	Callee	read_uint32		6896058	0					
ANR	6896297	Identifier	read_uint32		6896058	0					
ANR	6896298	ArgumentList	box -> data + 4		6896058	1					
ANR	6896299	Argument	box -> data + 4		6896058	0					
ANR	6896300	AdditiveExpression	box -> data + 4		6896058	0		+			
ANR	6896301	PtrMemberAccess	box -> data		6896058	0					
ANR	6896302	Identifier	box		6896058	0					
ANR	6896303	Identifier	data		6896058	1					
ANR	6896304	PrimaryExpression	4		6896058	1					
ANR	6896305	ExpressionStatement	ihdr -> nc = read_uint16 ( box -> data + 8 )	123:8:3401:3438	6896058	2	True				
ANR	6896306	AssignmentExpression	ihdr -> nc = read_uint16 ( box -> data + 8 )		6896058	0		=			
ANR	6896307	PtrMemberAccess	ihdr -> nc		6896058	0					
ANR	6896308	Identifier	ihdr		6896058	0					
ANR	6896309	Identifier	nc		6896058	1					
ANR	6896310	CallExpression	read_uint16 ( box -> data + 8 )		6896058	1					
ANR	6896311	Callee	read_uint16		6896058	0					
ANR	6896312	Identifier	read_uint16		6896058	0					
ANR	6896313	ArgumentList	box -> data + 8		6896058	1					
ANR	6896314	Argument	box -> data + 8		6896058	0					
ANR	6896315	AdditiveExpression	box -> data + 8		6896058	0		+			
ANR	6896316	PtrMemberAccess	box -> data		6896058	0					
ANR	6896317	Identifier	box		6896058	0					
ANR	6896318	Identifier	data		6896058	1					
ANR	6896319	PrimaryExpression	8		6896058	1					
ANR	6896320	ExpressionStatement	ihdr -> bpc = ( box -> data [ 10 ] & 0x7f ) + 1	124:8:3448:3486	6896058	3	True				
ANR	6896321	AssignmentExpression	ihdr -> bpc = ( box -> data [ 10 ] & 0x7f ) + 1		6896058	0		=			
ANR	6896322	PtrMemberAccess	ihdr -> bpc		6896058	0					
ANR	6896323	Identifier	ihdr		6896058	0					
ANR	6896324	Identifier	bpc		6896058	1					
ANR	6896325	AdditiveExpression	( box -> data [ 10 ] & 0x7f ) + 1		6896058	1		+			
ANR	6896326	BitAndExpression	box -> data [ 10 ] & 0x7f		6896058	0		&			
ANR	6896327	ArrayIndexing	box -> data [ 10 ]		6896058	0					
ANR	6896328	PtrMemberAccess	box -> data		6896058	0					
ANR	6896329	Identifier	box		6896058	0					
ANR	6896330	Identifier	data		6896058	1					
ANR	6896331	PrimaryExpression	10		6896058	1					
ANR	6896332	PrimaryExpression	0x7f		6896058	1					
ANR	6896333	PrimaryExpression	1		6896058	1					
ANR	6896334	ExpressionStatement	ihdr -> sign = box -> data [ 10 ] >> 7	125:8:3496:3527	6896058	4	True				
ANR	6896335	AssignmentExpression	ihdr -> sign = box -> data [ 10 ] >> 7		6896058	0		=			
ANR	6896336	PtrMemberAccess	ihdr -> sign		6896058	0					
ANR	6896337	Identifier	ihdr		6896058	0					
ANR	6896338	Identifier	sign		6896058	1					
ANR	6896339	ShiftExpression	box -> data [ 10 ] >> 7		6896058	1		>>			
ANR	6896340	ArrayIndexing	box -> data [ 10 ]		6896058	0					
ANR	6896341	PtrMemberAccess	box -> data		6896058	0					
ANR	6896342	Identifier	box		6896058	0					
ANR	6896343	Identifier	data		6896058	1					
ANR	6896344	PrimaryExpression	10		6896058	1					
ANR	6896345	PrimaryExpression	7		6896058	1					
ANR	6896346	ExpressionStatement	ihdr -> C = box -> data [ 11 ]	126:8:3537:3560	6896058	5	True				
ANR	6896347	AssignmentExpression	ihdr -> C = box -> data [ 11 ]		6896058	0		=			
ANR	6896348	PtrMemberAccess	ihdr -> C		6896058	0					
ANR	6896349	Identifier	ihdr		6896058	0					
ANR	6896350	Identifier	C		6896058	1					
ANR	6896351	ArrayIndexing	box -> data [ 11 ]		6896058	1					
ANR	6896352	PtrMemberAccess	box -> data		6896058	0					
ANR	6896353	Identifier	box		6896058	0					
ANR	6896354	Identifier	data		6896058	1					
ANR	6896355	PrimaryExpression	11		6896058	1					
ANR	6896356	ExpressionStatement	ihdr -> UnkC = box -> data [ 12 ]	127:8:3570:3596	6896058	6	True				
ANR	6896357	AssignmentExpression	ihdr -> UnkC = box -> data [ 12 ]		6896058	0		=			
ANR	6896358	PtrMemberAccess	ihdr -> UnkC		6896058	0					
ANR	6896359	Identifier	ihdr		6896058	0					
ANR	6896360	Identifier	UnkC		6896058	1					
ANR	6896361	ArrayIndexing	box -> data [ 12 ]		6896058	1					
ANR	6896362	PtrMemberAccess	box -> data		6896058	0					
ANR	6896363	Identifier	box		6896058	0					
ANR	6896364	Identifier	data		6896058	1					
ANR	6896365	PrimaryExpression	12		6896058	1					
ANR	6896366	ExpressionStatement	ihdr -> IPR = box -> data [ 13 ]	128:8:3606:3631	6896058	7	True				
ANR	6896367	AssignmentExpression	ihdr -> IPR = box -> data [ 13 ]		6896058	0		=			
ANR	6896368	PtrMemberAccess	ihdr -> IPR		6896058	0					
ANR	6896369	Identifier	ihdr		6896058	0					
ANR	6896370	Identifier	IPR		6896058	1					
ANR	6896371	ArrayIndexing	box -> data [ 13 ]		6896058	1					
ANR	6896372	PtrMemberAccess	box -> data		6896058	0					
ANR	6896373	Identifier	box		6896058	0					
ANR	6896374	Identifier	data		6896058	1					
ANR	6896375	PrimaryExpression	13		6896058	1					
ANR	6896376	ExpressionStatement	box -> rez = ihdr	130:6:3647:3662	6896058	2	True				
ANR	6896377	AssignmentExpression	box -> rez = ihdr		6896058	0		=			
ANR	6896378	PtrMemberAccess	box -> rez		6896058	0					
ANR	6896379	Identifier	box		6896058	0					
ANR	6896380	Identifier	rez		6896058	1					
ANR	6896381	Identifier	ihdr		6896058	1					
ANR	6896382	ReturnStatement	return box ;	135:2:3678:3688	6896058	4	True				
ANR	6896383	Identifier	box		6896058	0					
ANR	6896384	ReturnType	box_t *		6896058	1					
ANR	6896385	Identifier	box_read		6896058	2					
ANR	6896386	ParameterList	"const unsigned char * buf , const long size"		6896058	3					
ANR	6896387	Parameter	const unsigned char * buf	92:16:2525:2548	6896058	0	True				
ANR	6896388	ParameterType	const unsigned char *		6896058	0					
ANR	6896389	Identifier	buf		6896058	1					
ANR	6896390	Parameter	const long size	92:42:2551:2565	6896058	1	True				
ANR	6896391	ParameterType	const long		6896058	0					
ANR	6896392	Identifier	size		6896058	1					
ANR	6896393	CFGEntryNode	ENTRY		6896058		True				
ANR	6896394	CFGExitNode	EXIT		6896058		True				
ANR	6896395	Symbol	ihdr -> IPR		6896058						
ANR	6896396	Symbol	read_uint32		6896058						
ANR	6896397	Symbol	* ftyp		6896058						
ANR	6896398	Symbol	* * ftyp		6896058						
ANR	6896399	Symbol	ihdr -> UnkC		6896058						
ANR	6896400	Symbol	box		6896058						
ANR	6896401	Symbol	* box		6896058						
ANR	6896402	Symbol	ihdr -> nc		6896058						
ANR	6896403	Symbol	ihdr -> sign		6896058						
ANR	6896404	Symbol	box -> rez		6896058						
ANR	6896405	Symbol	read_uint16		6896058						
ANR	6896406	Symbol	memcmp		6896058						
ANR	6896407	Symbol	ftyp		6896058						
ANR	6896408	Symbol	ihdr -> bpc		6896058						
ANR	6896409	Symbol	box -> length		6896058						
ANR	6896410	Symbol	ihdr -> width		6896058						
ANR	6896411	Symbol	ihdr		6896058						
ANR	6896412	Symbol	* * box		6896058						
ANR	6896413	Symbol	box -> size		6896058						
ANR	6896414	Symbol	malloc		6896058						
ANR	6896415	Symbol	NULL		6896058						
ANR	6896416	Symbol	* box -> data		6896058						
ANR	6896417	Symbol	box -> type		6896058						
ANR	6896418	Symbol	* box -> type		6896058						
ANR	6896419	Symbol	ihdr -> height		6896058						
ANR	6896420	Symbol	box -> data		6896058						
ANR	6896421	Symbol	buf		6896058						
ANR	6896422	Symbol	MIN		6896058						
ANR	6896423	Symbol	size		6896058						
ANR	6896424	Symbol	box -> next		6896058						
ANR	6896425	Symbol	ftyp -> brand		6896058						
ANR	6896426	Symbol	ftyp -> version		6896058						
ANR	6896427	Symbol	* ihdr		6896058						
ANR	6896428	Symbol	ihdr -> C		6896058						
ANR	6896429	Symbol	* ftyp -> brand		6896058						
ANR	6896430	Function	box_print	139:0:3706:4504							
ANR	6896431	FunctionDef	box_print (box_t * box)		6896430	0					
ANR	6896432	CompoundStatement		140:0:3733:4504	6896430	0					
ANR	6896433	IfStatement	if ( box -> length )		6896430	0					
ANR	6896434	Condition	box -> length	141:6:3741:3751	6896430	0	True				
ANR	6896435	PtrMemberAccess	box -> length		6896430	0					
ANR	6896436	Identifier	box		6896430	0					
ANR	6896437	Identifier	length		6896430	1					
ANR	6896438	ExpressionStatement	"fprintf ( stderr , ""box '%s' (%u bytes)"" , box -> type , box -> length )"	142:4:3758:3820	6896430	1	True				
ANR	6896439	CallExpression	"fprintf ( stderr , ""box '%s' (%u bytes)"" , box -> type , box -> length )"		6896430	0					
ANR	6896440	Callee	fprintf		6896430	0					
ANR	6896441	Identifier	fprintf		6896430	0					
ANR	6896442	ArgumentList	stderr		6896430	1					
ANR	6896443	Argument	stderr		6896430	0					
ANR	6896444	Identifier	stderr		6896430	0					
ANR	6896445	Argument	"""box '%s' (%u bytes)"""		6896430	1					
ANR	6896446	PrimaryExpression	"""box '%s' (%u bytes)"""		6896430	0					
ANR	6896447	Argument	box -> type		6896430	2					
ANR	6896448	PtrMemberAccess	box -> type		6896430	0					
ANR	6896449	Identifier	box		6896430	0					
ANR	6896450	Identifier	type		6896430	1					
ANR	6896451	Argument	box -> length		6896430	3					
ANR	6896452	PtrMemberAccess	box -> length		6896430	0					
ANR	6896453	Identifier	box		6896430	0					
ANR	6896454	Identifier	length		6896430	1					
ANR	6896455	ElseStatement	else		6896430	0					
ANR	6896456	ExpressionStatement	"fprintf ( stderr , ""box '%s' EOF"" , box -> type )"	144:4:3833:3875	6896430	0	True				
ANR	6896457	CallExpression	"fprintf ( stderr , ""box '%s' EOF"" , box -> type )"		6896430	0					
ANR	6896458	Callee	fprintf		6896430	0					
ANR	6896459	Identifier	fprintf		6896430	0					
ANR	6896460	ArgumentList	stderr		6896430	1					
ANR	6896461	Argument	stderr		6896430	0					
ANR	6896462	Identifier	stderr		6896430	0					
ANR	6896463	Argument	"""box '%s' EOF"""		6896430	1					
ANR	6896464	PrimaryExpression	"""box '%s' EOF"""		6896430	0					
ANR	6896465	Argument	box -> type		6896430	2					
ANR	6896466	PtrMemberAccess	box -> type		6896430	0					
ANR	6896467	Identifier	box		6896430	0					
ANR	6896468	Identifier	type		6896430	1					
ANR	6896469	IfStatement	"if ( ! memcmp ( box -> type , ""ftyp"" , 4 ) )"		6896430	1					
ANR	6896470	Condition	"! memcmp ( box -> type , ""ftyp"" , 4 )"	146:6:3884:3912	6896430	0	True				
ANR	6896471	UnaryOperationExpression	"! memcmp ( box -> type , ""ftyp"" , 4 )"		6896430	0					
ANR	6896472	UnaryOperator	!		6896430	0					
ANR	6896473	CallExpression	"memcmp ( box -> type , ""ftyp"" , 4 )"		6896430	1					
ANR	6896474	Callee	memcmp		6896430	0					
ANR	6896475	Identifier	memcmp		6896430	0					
ANR	6896476	ArgumentList	box -> type		6896430	1					
ANR	6896477	Argument	box -> type		6896430	0					
ANR	6896478	PtrMemberAccess	box -> type		6896430	0					
ANR	6896479	Identifier	box		6896430	0					
ANR	6896480	Identifier	type		6896430	1					
ANR	6896481	Argument	"""ftyp"""		6896430	1					
ANR	6896482	PrimaryExpression	"""ftyp"""		6896430	0					
ANR	6896483	Argument	4		6896430	2					
ANR	6896484	PrimaryExpression	4		6896430	0					
ANR	6896485	CompoundStatement		9:4:211:238	6896430	1					
ANR	6896486	IdentifierDeclStatement	box_ftyp_t * ftyp = box -> rez ;	148:4:3945:3972	6896430	0	True				
ANR	6896487	IdentifierDecl	* ftyp = box -> rez		6896430	0					
ANR	6896488	IdentifierDeclType	box_ftyp_t *		6896430	0					
ANR	6896489	Identifier	ftyp		6896430	1					
ANR	6896490	AssignmentExpression	* ftyp = box -> rez		6896430	2		=			
ANR	6896491	Identifier	ftyp		6896430	0					
ANR	6896492	PtrMemberAccess	box -> rez		6896430	1					
ANR	6896493	Identifier	box		6896430	0					
ANR	6896494	Identifier	rez		6896430	1					
ANR	6896495	IfStatement	if ( ftyp )		6896430	1					
ANR	6896496	Condition	ftyp	149:8:3982:3985	6896430	0	True				
ANR	6896497	Identifier	ftyp		6896430	0					
ANR	6896498	ExpressionStatement	"fprintf ( stderr , "" brand '%s' version %u"" , ftyp -> brand , ftyp -> version )"	150:6:3994:4071	6896430	1	True				
ANR	6896499	CallExpression	"fprintf ( stderr , "" brand '%s' version %u"" , ftyp -> brand , ftyp -> version )"		6896430	0					
ANR	6896500	Callee	fprintf		6896430	0					
ANR	6896501	Identifier	fprintf		6896430	0					
ANR	6896502	ArgumentList	stderr		6896430	1					
ANR	6896503	Argument	stderr		6896430	0					
ANR	6896504	Identifier	stderr		6896430	0					
ANR	6896505	Argument	""" brand '%s' version %u"""		6896430	1					
ANR	6896506	PrimaryExpression	""" brand '%s' version %u"""		6896430	0					
ANR	6896507	Argument	ftyp -> brand		6896430	2					
ANR	6896508	PtrMemberAccess	ftyp -> brand		6896430	0					
ANR	6896509	Identifier	ftyp		6896430	0					
ANR	6896510	Identifier	brand		6896430	1					
ANR	6896511	Argument	ftyp -> version		6896430	3					
ANR	6896512	PtrMemberAccess	ftyp -> version		6896430	0					
ANR	6896513	Identifier	ftyp		6896430	0					
ANR	6896514	Identifier	version		6896430	1					
ANR	6896515	ElseStatement	else		6896430	0					
ANR	6896516	ExpressionStatement	"fprintf ( stderr , "" no parse result"" )"	153:6:4088:4123	6896430	0	True				
ANR	6896517	CallExpression	"fprintf ( stderr , "" no parse result"" )"		6896430	0					
ANR	6896518	Callee	fprintf		6896430	0					
ANR	6896519	Identifier	fprintf		6896430	0					
ANR	6896520	ArgumentList	stderr		6896430	1					
ANR	6896521	Argument	stderr		6896430	0					
ANR	6896522	Identifier	stderr		6896430	0					
ANR	6896523	Argument	""" no parse result"""		6896430	1					
ANR	6896524	PrimaryExpression	""" no parse result"""		6896430	0					
ANR	6896525	ElseStatement	else		6896430	0					
ANR	6896526	IfStatement	"if ( ! memcmp ( box -> type , ""ihdr"" , 4 ) )"		6896430	0					
ANR	6896527	Condition	"! memcmp ( box -> type , ""ihdr"" , 4 )"	154:13:4138:4166	6896430	0	True				
ANR	6896528	UnaryOperationExpression	"! memcmp ( box -> type , ""ihdr"" , 4 )"		6896430	0					
ANR	6896529	UnaryOperator	!		6896430	0					
ANR	6896530	CallExpression	"memcmp ( box -> type , ""ihdr"" , 4 )"		6896430	1					
ANR	6896531	Callee	memcmp		6896430	0					
ANR	6896532	Identifier	memcmp		6896430	0					
ANR	6896533	ArgumentList	box -> type		6896430	1					
ANR	6896534	Argument	box -> type		6896430	0					
ANR	6896535	PtrMemberAccess	box -> type		6896430	0					
ANR	6896536	Identifier	box		6896430	0					
ANR	6896537	Identifier	type		6896430	1					
ANR	6896538	Argument	"""ihdr"""		6896430	1					
ANR	6896539	PrimaryExpression	"""ihdr"""		6896430	0					
ANR	6896540	Argument	4		6896430	2					
ANR	6896541	PrimaryExpression	4		6896430	0					
ANR	6896542	CompoundStatement		17:4:468:495	6896430	1					
ANR	6896543	IdentifierDeclStatement	box_ihdr_t * ihdr = box -> rez ;	156:4:4202:4229	6896430	0	True				
ANR	6896544	IdentifierDecl	* ihdr = box -> rez		6896430	0					
ANR	6896545	IdentifierDeclType	box_ihdr_t *		6896430	0					
ANR	6896546	Identifier	ihdr		6896430	1					
ANR	6896547	AssignmentExpression	* ihdr = box -> rez		6896430	2		=			
ANR	6896548	Identifier	ihdr		6896430	0					
ANR	6896549	PtrMemberAccess	box -> rez		6896430	1					
ANR	6896550	Identifier	box		6896430	0					
ANR	6896551	Identifier	rez		6896430	1					
ANR	6896552	IfStatement	if ( ihdr )		6896430	1					
ANR	6896553	Condition	ihdr	157:8:4239:4242	6896430	0	True				
ANR	6896554	Identifier	ihdr		6896430	0					
ANR	6896555	ExpressionStatement	"fprintf ( stderr , "" %ux%u %u component image with %d bit %s samples"" , ihdr -> width , ihdr -> height , ihdr -> nc , ihdr -> bpc , ihdr -> sign ? ""signed"" : ""unsigned"" )"	158:8:4253:4420	6896430	1	True				
ANR	6896556	CallExpression	"fprintf ( stderr , "" %ux%u %u component image with %d bit %s samples"" , ihdr -> width , ihdr -> height , ihdr -> nc , ihdr -> bpc , ihdr -> sign ? ""signed"" : ""unsigned"" )"		6896430	0					
ANR	6896557	Callee	fprintf		6896430	0					
ANR	6896558	Identifier	fprintf		6896430	0					
ANR	6896559	ArgumentList	stderr		6896430	1					
ANR	6896560	Argument	stderr		6896430	0					
ANR	6896561	Identifier	stderr		6896430	0					
ANR	6896562	Argument	""" %ux%u %u component image with %d bit %s samples"""		6896430	1					
ANR	6896563	PrimaryExpression	""" %ux%u %u component image with %d bit %s samples"""		6896430	0					
ANR	6896564	Argument	ihdr -> width		6896430	2					
ANR	6896565	PtrMemberAccess	ihdr -> width		6896430	0					
ANR	6896566	Identifier	ihdr		6896430	0					
ANR	6896567	Identifier	width		6896430	1					
ANR	6896568	Argument	ihdr -> height		6896430	3					
ANR	6896569	PtrMemberAccess	ihdr -> height		6896430	0					
ANR	6896570	Identifier	ihdr		6896430	0					
ANR	6896571	Identifier	height		6896430	1					
ANR	6896572	Argument	ihdr -> nc		6896430	4					
ANR	6896573	PtrMemberAccess	ihdr -> nc		6896430	0					
ANR	6896574	Identifier	ihdr		6896430	0					
ANR	6896575	Identifier	nc		6896430	1					
ANR	6896576	Argument	ihdr -> bpc		6896430	5					
ANR	6896577	PtrMemberAccess	ihdr -> bpc		6896430	0					
ANR	6896578	Identifier	ihdr		6896430	0					
ANR	6896579	Identifier	bpc		6896430	1					
ANR	6896580	Argument	"ihdr -> sign ? ""signed"" : ""unsigned"""		6896430	6					
ANR	6896581	ConditionalExpression	"ihdr -> sign ? ""signed"" : ""unsigned"""		6896430	0					
ANR	6896582	Condition	ihdr -> sign		6896430	0					
ANR	6896583	PtrMemberAccess	ihdr -> sign		6896430	0					
ANR	6896584	Identifier	ihdr		6896430	0					
ANR	6896585	Identifier	sign		6896430	1					
ANR	6896586	PrimaryExpression	"""signed"""		6896430	1					
ANR	6896587	PrimaryExpression	"""unsigned"""		6896430	2					
ANR	6896588	ElseStatement	else		6896430	0					
ANR	6896589	ExpressionStatement	"fprintf ( stderr , "" no parse result"" )"	162:6:4437:4472	6896430	0	True				
ANR	6896590	CallExpression	"fprintf ( stderr , "" no parse result"" )"		6896430	0					
ANR	6896591	Callee	fprintf		6896430	0					
ANR	6896592	Identifier	fprintf		6896430	0					
ANR	6896593	ArgumentList	stderr		6896430	1					
ANR	6896594	Argument	stderr		6896430	0					
ANR	6896595	Identifier	stderr		6896430	0					
ANR	6896596	Argument	""" no parse result"""		6896430	1					
ANR	6896597	PrimaryExpression	""" no parse result"""		6896430	0					
ANR	6896598	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	165:2:4481:4502	6896430	2	True				
ANR	6896599	CallExpression	"fprintf ( stderr , ""\\n"" )"		6896430	0					
ANR	6896600	Callee	fprintf		6896430	0					
ANR	6896601	Identifier	fprintf		6896430	0					
ANR	6896602	ArgumentList	stderr		6896430	1					
ANR	6896603	Argument	stderr		6896430	0					
ANR	6896604	Identifier	stderr		6896430	0					
ANR	6896605	Argument	"""\\n"""		6896430	1					
ANR	6896606	PrimaryExpression	"""\\n"""		6896430	0					
ANR	6896607	ReturnType	void		6896430	1					
ANR	6896608	Identifier	box_print		6896430	2					
ANR	6896609	ParameterList	box_t * box		6896430	3					
ANR	6896610	Parameter	box_t * box	139:15:3721:3730	6896430	0	True				
ANR	6896611	ParameterType	box_t *		6896430	0					
ANR	6896612	Identifier	box		6896430	1					
ANR	6896613	CFGEntryNode	ENTRY		6896430		True				
ANR	6896614	CFGExitNode	EXIT		6896430		True				
ANR	6896615	Symbol	* ftyp		6896430						
ANR	6896616	Symbol	box -> type		6896430						
ANR	6896617	Symbol	box		6896430						
ANR	6896618	Symbol	* box		6896430						
ANR	6896619	Symbol	ihdr -> sign		6896430						
ANR	6896620	Symbol	ihdr -> nc		6896430						
ANR	6896621	Symbol	stderr		6896430						
ANR	6896622	Symbol	box -> rez		6896430						
ANR	6896623	Symbol	ihdr -> height		6896430						
ANR	6896624	Symbol	memcmp		6896430						
ANR	6896625	Symbol	ftyp -> brand		6896430						
ANR	6896626	Symbol	ftyp		6896430						
ANR	6896627	Symbol	ihdr -> bpc		6896430						
ANR	6896628	Symbol	box -> length		6896430						
ANR	6896629	Symbol	ftyp -> version		6896430						
ANR	6896630	Symbol	ihdr -> width		6896430						
ANR	6896631	Symbol	ihdr		6896430						
ANR	6896632	Symbol	* ihdr		6896430						
ANR	6896633	Function	jpx_read_imagedata	170:0:4599:6496							
ANR	6896634	FunctionDef	jpx_read_imagedata (imagedata * jpx)		6896633	0					
ANR	6896635	CompoundStatement		171:0:4646:6496	6896633	0					
ANR	6896636	IdentifierDeclStatement	FILE * in ;	172:2:4650:4658	6896633	0	True				
ANR	6896637	IdentifierDecl	* in		6896633	0					
ANR	6896638	IdentifierDeclType	FILE *		6896633	0					
ANR	6896639	Identifier	in		6896633	1					
ANR	6896640	IdentifierDeclStatement	unsigned char buf [ BUFSIZE ] ;	173:2:4662:4688	6896633	1	True				
ANR	6896641	IdentifierDecl	buf [ BUFSIZE ]		6896633	0					
ANR	6896642	IdentifierDeclType	unsigned char [ BUFSIZE ]		6896633	0					
ANR	6896643	Identifier	buf		6896633	1					
ANR	6896644	Identifier	BUFSIZE		6896633	2					
ANR	6896645	IdentifierDeclStatement	"int n , offset ;"	174:2:4692:4705	6896633	2	True				
ANR	6896646	IdentifierDecl	n		6896633	0					
ANR	6896647	IdentifierDeclType	int		6896633	0					
ANR	6896648	Identifier	n		6896633	1					
ANR	6896649	IdentifierDecl	offset		6896633	1					
ANR	6896650	IdentifierDeclType	int		6896633	0					
ANR	6896651	Identifier	offset		6896633	1					
ANR	6896652	IdentifierDeclStatement	int header = FALSE ;	175:2:4709:4727	6896633	3	True				
ANR	6896653	IdentifierDecl	header = FALSE		6896633	0					
ANR	6896654	IdentifierDeclType	int		6896633	0					
ANR	6896655	Identifier	header		6896633	1					
ANR	6896656	AssignmentExpression	header = FALSE		6896633	2		=			
ANR	6896657	Identifier	FALSE		6896633	0					
ANR	6896658	Identifier	FALSE		6896633	1					
ANR	6896659	ExpressionStatement	"in = fopen ( jpx -> filename , ""rb"" )"	178:2:4766:4797	6896633	4	True				
ANR	6896660	AssignmentExpression	"in = fopen ( jpx -> filename , ""rb"" )"		6896633	0		=			
ANR	6896661	Identifier	in		6896633	0					
ANR	6896662	CallExpression	"fopen ( jpx -> filename , ""rb"" )"		6896633	1					
ANR	6896663	Callee	fopen		6896633	0					
ANR	6896664	Identifier	fopen		6896633	0					
ANR	6896665	ArgumentList	jpx -> filename		6896633	1					
ANR	6896666	Argument	jpx -> filename		6896633	0					
ANR	6896667	PtrMemberAccess	jpx -> filename		6896633	0					
ANR	6896668	Identifier	jpx		6896633	0					
ANR	6896669	Identifier	filename		6896633	1					
ANR	6896670	Argument	"""rb"""		6896633	1					
ANR	6896671	PrimaryExpression	"""rb"""		6896633	0					
ANR	6896672	IfStatement	if ( in == NULL )		6896633	5					
ANR	6896673	Condition	in == NULL	179:6:4805:4814	6896633	0	True				
ANR	6896674	EqualityExpression	in == NULL		6896633	0		==			
ANR	6896675	Identifier	in		6896633	0					
ANR	6896676	Identifier	NULL		6896633	1					
ANR	6896677	CompoundStatement		9:18:170:170	6896633	1					
ANR	6896678	ExpressionStatement	"fprintf ( stderr , ""Error: could not open input file '%s'\\n"" , jpx -> filename )"	180:4:4823:4904	6896633	0	True				
ANR	6896679	CallExpression	"fprintf ( stderr , ""Error: could not open input file '%s'\\n"" , jpx -> filename )"		6896633	0					
ANR	6896680	Callee	fprintf		6896633	0					
ANR	6896681	Identifier	fprintf		6896633	0					
ANR	6896682	ArgumentList	stderr		6896633	1					
ANR	6896683	Argument	stderr		6896633	0					
ANR	6896684	Identifier	stderr		6896633	0					
ANR	6896685	Argument	"""Error: could not open input file '%s'\\n"""		6896633	1					
ANR	6896686	PrimaryExpression	"""Error: could not open input file '%s'\\n"""		6896633	0					
ANR	6896687	Argument	jpx -> filename		6896633	2					
ANR	6896688	PtrMemberAccess	jpx -> filename		6896633	0					
ANR	6896689	Identifier	jpx		6896633	0					
ANR	6896690	Identifier	filename		6896633	1					
ANR	6896691	ReturnStatement	return FALSE ;	182:4:4910:4922	6896633	1	True				
ANR	6896692	Identifier	FALSE		6896633	0					
ANR	6896693	ExpressionStatement	"n = fread ( buf , 1 , BUFSIZE , in )"	185:2:4931:4961	6896633	6	True				
ANR	6896694	AssignmentExpression	"n = fread ( buf , 1 , BUFSIZE , in )"		6896633	0		=			
ANR	6896695	Identifier	n		6896633	0					
ANR	6896696	CallExpression	"fread ( buf , 1 , BUFSIZE , in )"		6896633	1					
ANR	6896697	Callee	fread		6896633	0					
ANR	6896698	Identifier	fread		6896633	0					
ANR	6896699	ArgumentList	buf		6896633	1					
ANR	6896700	Argument	buf		6896633	0					
ANR	6896701	Identifier	buf		6896633	0					
ANR	6896702	Argument	1		6896633	1					
ANR	6896703	PrimaryExpression	1		6896633	0					
ANR	6896704	Argument	BUFSIZE		6896633	2					
ANR	6896705	Identifier	BUFSIZE		6896633	0					
ANR	6896706	Argument	in		6896633	3					
ANR	6896707	Identifier	in		6896633	0					
ANR	6896708	IfStatement	if ( n < 12 )		6896633	7					
ANR	6896709	Condition	n < 12	188:6:5003:5008	6896633	0	True				
ANR	6896710	RelationalExpression	n < 12		6896633	0		<			
ANR	6896711	Identifier	n		6896633	0					
ANR	6896712	PrimaryExpression	12		6896633	1					
ANR	6896713	CompoundStatement		18:14:364:364	6896633	1					
ANR	6896714	ExpressionStatement	"fprintf ( stderr , ""Error: file too short\\n"" )"	189:4:5017:5059	6896633	0	True				
ANR	6896715	CallExpression	"fprintf ( stderr , ""Error: file too short\\n"" )"		6896633	0					
ANR	6896716	Callee	fprintf		6896633	0					
ANR	6896717	Identifier	fprintf		6896633	0					
ANR	6896718	ArgumentList	stderr		6896633	1					
ANR	6896719	Argument	stderr		6896633	0					
ANR	6896720	Identifier	stderr		6896633	0					
ANR	6896721	Argument	"""Error: file too short\\n"""		6896633	1					
ANR	6896722	PrimaryExpression	"""Error: file too short\\n"""		6896633	0					
ANR	6896723	ReturnStatement	return FALSE ;	190:4:5065:5077	6896633	1	True				
ANR	6896724	Identifier	FALSE		6896633	0					
ANR	6896725	IfStatement	"if ( memcmp ( buf , ""\\x00\\x00\\x00\\x0CjP  \\x0D\\x0A\\x87\\x0A"" , 12 ) )"		6896633	8					
ANR	6896726	Condition	"memcmp ( buf , ""\\x00\\x00\\x00\\x0CjP  \\x0D\\x0A\\x87\\x0A"" , 12 )"	192:6:5089:5143	6896633	0	True				
ANR	6896727	CallExpression	"memcmp ( buf , ""\\x00\\x00\\x00\\x0CjP  \\x0D\\x0A\\x87\\x0A"" , 12 )"		6896633	0					
ANR	6896728	Callee	memcmp		6896633	0					
ANR	6896729	Identifier	memcmp		6896633	0					
ANR	6896730	ArgumentList	buf		6896633	1					
ANR	6896731	Argument	buf		6896633	0					
ANR	6896732	Identifier	buf		6896633	0					
ANR	6896733	Argument	"""\\x00\\x00\\x00\\x0CjP  \\x0D\\x0A\\x87\\x0A"""		6896633	1					
ANR	6896734	PrimaryExpression	"""\\x00\\x00\\x00\\x0CjP  \\x0D\\x0A\\x87\\x0A"""		6896633	0					
ANR	6896735	Argument	12		6896633	2					
ANR	6896736	PrimaryExpression	12		6896633	0					
ANR	6896737	CompoundStatement		22:63:499:499	6896633	1					
ANR	6896738	ExpressionStatement	"fprintf ( stderr , ""Skipping '%s': not a JPX file\\n"" , jpx -> filename )"	193:4:5152:5217	6896633	0	True				
ANR	6896739	CallExpression	"fprintf ( stderr , ""Skipping '%s': not a JPX file\\n"" , jpx -> filename )"		6896633	0					
ANR	6896740	Callee	fprintf		6896633	0					
ANR	6896741	Identifier	fprintf		6896633	0					
ANR	6896742	ArgumentList	stderr		6896633	1					
ANR	6896743	Argument	stderr		6896633	0					
ANR	6896744	Identifier	stderr		6896633	0					
ANR	6896745	Argument	"""Skipping '%s': not a JPX file\\n"""		6896633	1					
ANR	6896746	PrimaryExpression	"""Skipping '%s': not a JPX file\\n"""		6896633	0					
ANR	6896747	Argument	jpx -> filename		6896633	2					
ANR	6896748	PtrMemberAccess	jpx -> filename		6896633	0					
ANR	6896749	Identifier	jpx		6896633	0					
ANR	6896750	Identifier	filename		6896633	1					
ANR	6896751	ReturnStatement	return FALSE ;	194:4:5223:5235	6896633	1	True				
ANR	6896752	Identifier	FALSE		6896633	0					
ANR	6896753	ExpressionStatement	jpx -> dpi = 0.0	198:2:5309:5323	6896633	9	True				
ANR	6896754	AssignmentExpression	jpx -> dpi = 0.0		6896633	0		=			
ANR	6896755	PtrMemberAccess	jpx -> dpi		6896633	0					
ANR	6896756	Identifier	jpx		6896633	0					
ANR	6896757	Identifier	dpi		6896633	1					
ANR	6896758	PrimaryExpression	0.0		6896633	1					
ANR	6896759	ExpressionStatement	offset = 0	201:2:5372:5382	6896633	10	True				
ANR	6896760	AssignmentExpression	offset = 0		6896633	0		=			
ANR	6896761	Identifier	offset		6896633	0					
ANR	6896762	PrimaryExpression	0		6896633	1					
ANR	6896763	WhileStatement	while ( n - offset >= 8 )		6896633	11					
ANR	6896764	Condition	n - offset >= 8	202:9:5393:5407	6896633	0	True				
ANR	6896765	RelationalExpression	n - offset >= 8		6896633	0		>=			
ANR	6896766	AdditiveExpression	n - offset		6896633	0		-			
ANR	6896767	Identifier	n		6896633	0					
ANR	6896768	Identifier	offset		6896633	1					
ANR	6896769	PrimaryExpression	8		6896633	1					
ANR	6896770	CompoundStatement		33:4:769:816	6896633	1					
ANR	6896771	IdentifierDeclStatement	"box_t * box = box_read ( buf + offset , n - offset ) ;"	203:4:5416:5463	6896633	0	True				
ANR	6896772	IdentifierDecl	"* box = box_read ( buf + offset , n - offset )"		6896633	0					
ANR	6896773	IdentifierDeclType	box_t *		6896633	0					
ANR	6896774	Identifier	box		6896633	1					
ANR	6896775	AssignmentExpression	"* box = box_read ( buf + offset , n - offset )"		6896633	2		=			
ANR	6896776	Identifier	box		6896633	0					
ANR	6896777	CallExpression	"box_read ( buf + offset , n - offset )"		6896633	1					
ANR	6896778	Callee	box_read		6896633	0					
ANR	6896779	Identifier	box_read		6896633	0					
ANR	6896780	ArgumentList	buf + offset		6896633	1					
ANR	6896781	Argument	buf + offset		6896633	0					
ANR	6896782	AdditiveExpression	buf + offset		6896633	0		+			
ANR	6896783	Identifier	buf		6896633	0					
ANR	6896784	Identifier	offset		6896633	1					
ANR	6896785	Argument	n - offset		6896633	1					
ANR	6896786	AdditiveExpression	n - offset		6896633	0		-			
ANR	6896787	Identifier	n		6896633	0					
ANR	6896788	Identifier	offset		6896633	1					
ANR	6896789	IfStatement	if ( box )		6896633	1					
ANR	6896790	Condition	box	204:8:5473:5475	6896633	0	True				
ANR	6896791	Identifier	box		6896633	0					
ANR	6896792	CompoundStatement		34:13:831:831	6896633	1					
ANR	6896793	ExpressionStatement	box_print ( box )	206:6:5499:5513	6896633	0	True				
ANR	6896794	CallExpression	box_print ( box )		6896633	0					
ANR	6896795	Callee	box_print		6896633	0					
ANR	6896796	Identifier	box_print		6896633	0					
ANR	6896797	ArgumentList	box		6896633	1					
ANR	6896798	Argument	box		6896633	0					
ANR	6896799	Identifier	box		6896633	0					
ANR	6896800	IfStatement	"if ( ! memcmp ( box -> type , ""jp2h"" , 4 ) )"		6896633	1					
ANR	6896801	Condition	"! memcmp ( box -> type , ""jp2h"" , 4 )"	208:10:5532:5560	6896633	0	True				
ANR	6896802	UnaryOperationExpression	"! memcmp ( box -> type , ""jp2h"" , 4 )"		6896633	0					
ANR	6896803	UnaryOperator	!		6896633	0					
ANR	6896804	CallExpression	"memcmp ( box -> type , ""jp2h"" , 4 )"		6896633	1					
ANR	6896805	Callee	memcmp		6896633	0					
ANR	6896806	Identifier	memcmp		6896633	0					
ANR	6896807	ArgumentList	box -> type		6896633	1					
ANR	6896808	Argument	box -> type		6896633	0					
ANR	6896809	PtrMemberAccess	box -> type		6896633	0					
ANR	6896810	Identifier	box		6896633	0					
ANR	6896811	Identifier	type		6896633	1					
ANR	6896812	Argument	"""jp2h"""		6896633	1					
ANR	6896813	PrimaryExpression	"""jp2h"""		6896633	0					
ANR	6896814	Argument	4		6896633	2					
ANR	6896815	PrimaryExpression	4		6896633	0					
ANR	6896816	CompoundStatement		38:41:916:916	6896633	1					
ANR	6896817	ExpressionStatement	"box -> next = box_read ( buf + offset + 8 , box -> size )"	209:8:5573:5622	6896633	0	True				
ANR	6896818	AssignmentExpression	"box -> next = box_read ( buf + offset + 8 , box -> size )"		6896633	0		=			
ANR	6896819	PtrMemberAccess	box -> next		6896633	0					
ANR	6896820	Identifier	box		6896633	0					
ANR	6896821	Identifier	next		6896633	1					
ANR	6896822	CallExpression	"box_read ( buf + offset + 8 , box -> size )"		6896633	1					
ANR	6896823	Callee	box_read		6896633	0					
ANR	6896824	Identifier	box_read		6896633	0					
ANR	6896825	ArgumentList	buf + offset + 8		6896633	1					
ANR	6896826	Argument	buf + offset + 8		6896633	0					
ANR	6896827	AdditiveExpression	buf + offset + 8		6896633	0		+			
ANR	6896828	Identifier	buf		6896633	0					
ANR	6896829	AdditiveExpression	offset + 8		6896633	1		+			
ANR	6896830	Identifier	offset		6896633	0					
ANR	6896831	PrimaryExpression	8		6896633	1					
ANR	6896832	Argument	box -> size		6896633	1					
ANR	6896833	PtrMemberAccess	box -> size		6896633	0					
ANR	6896834	Identifier	box		6896633	0					
ANR	6896835	Identifier	size		6896633	1					
ANR	6896836	IfStatement	if ( box -> next )		6896633	1					
ANR	6896837	Condition	box -> next	210:12:5636:5644	6896633	0	True				
ANR	6896838	PtrMemberAccess	box -> next		6896633	0					
ANR	6896839	Identifier	box		6896633	0					
ANR	6896840	Identifier	next		6896633	1					
ANR	6896841	CompoundStatement		41:10:1012:1045	6896633	1					
ANR	6896842	IdentifierDeclStatement	box_ihdr_t * ihdr = box -> next -> rez ;	211:10:5659:5692	6896633	0	True				
ANR	6896843	IdentifierDecl	* ihdr = box -> next -> rez		6896633	0					
ANR	6896844	IdentifierDeclType	box_ihdr_t *		6896633	0					
ANR	6896845	Identifier	ihdr		6896633	1					
ANR	6896846	AssignmentExpression	* ihdr = box -> next -> rez		6896633	2		=			
ANR	6896847	Identifier	ihdr		6896633	0					
ANR	6896848	PtrMemberAccess	box -> next -> rez		6896633	1					
ANR	6896849	PtrMemberAccess	box -> next		6896633	0					
ANR	6896850	Identifier	box		6896633	0					
ANR	6896851	Identifier	next		6896633	1					
ANR	6896852	Identifier	rez		6896633	1					
ANR	6896853	ExpressionStatement	box_print ( box -> next )	213:10:5717:5737	6896633	1	True				
ANR	6896854	CallExpression	box_print ( box -> next )		6896633	0					
ANR	6896855	Callee	box_print		6896633	0					
ANR	6896856	Identifier	box_print		6896633	0					
ANR	6896857	ArgumentList	box -> next		6896633	1					
ANR	6896858	Argument	box -> next		6896633	0					
ANR	6896859	PtrMemberAccess	box -> next		6896633	0					
ANR	6896860	Identifier	box		6896633	0					
ANR	6896861	Identifier	next		6896633	1					
ANR	6896862	ExpressionStatement	jpx -> width = ihdr -> width	215:10:5756:5780	6896633	2	True				
ANR	6896863	AssignmentExpression	jpx -> width = ihdr -> width		6896633	0		=			
ANR	6896864	PtrMemberAccess	jpx -> width		6896633	0					
ANR	6896865	Identifier	jpx		6896633	0					
ANR	6896866	Identifier	width		6896633	1					
ANR	6896867	PtrMemberAccess	ihdr -> width		6896633	1					
ANR	6896868	Identifier	ihdr		6896633	0					
ANR	6896869	Identifier	width		6896633	1					
ANR	6896870	ExpressionStatement	jpx -> height = ihdr -> height	216:10:5792:5818	6896633	3	True				
ANR	6896871	AssignmentExpression	jpx -> height = ihdr -> height		6896633	0		=			
ANR	6896872	PtrMemberAccess	jpx -> height		6896633	0					
ANR	6896873	Identifier	jpx		6896633	0					
ANR	6896874	Identifier	height		6896633	1					
ANR	6896875	PtrMemberAccess	ihdr -> height		6896633	1					
ANR	6896876	Identifier	ihdr		6896633	0					
ANR	6896877	Identifier	height		6896633	1					
ANR	6896878	ExpressionStatement	jpx -> numcmpts = ihdr -> nc	217:10:5830:5854	6896633	4	True				
ANR	6896879	AssignmentExpression	jpx -> numcmpts = ihdr -> nc		6896633	0		=			
ANR	6896880	PtrMemberAccess	jpx -> numcmpts		6896633	0					
ANR	6896881	Identifier	jpx		6896633	0					
ANR	6896882	Identifier	numcmpts		6896633	1					
ANR	6896883	PtrMemberAccess	ihdr -> nc		6896633	1					
ANR	6896884	Identifier	ihdr		6896633	0					
ANR	6896885	Identifier	nc		6896633	1					
ANR	6896886	ExpressionStatement	jpx -> depth = ihdr -> bpc	218:10:5866:5888	6896633	5	True				
ANR	6896887	AssignmentExpression	jpx -> depth = ihdr -> bpc		6896633	0		=			
ANR	6896888	PtrMemberAccess	jpx -> depth		6896633	0					
ANR	6896889	Identifier	jpx		6896633	0					
ANR	6896890	Identifier	depth		6896633	1					
ANR	6896891	PtrMemberAccess	ihdr -> bpc		6896633	1					
ANR	6896892	Identifier	ihdr		6896633	0					
ANR	6896893	Identifier	bpc		6896633	1					
ANR	6896894	ExpressionStatement	box_free ( box -> next )	219:10:5900:5919	6896633	6	True				
ANR	6896895	CallExpression	box_free ( box -> next )		6896633	0					
ANR	6896896	Callee	box_free		6896633	0					
ANR	6896897	Identifier	box_free		6896633	0					
ANR	6896898	ArgumentList	box -> next		6896633	1					
ANR	6896899	Argument	box -> next		6896633	0					
ANR	6896900	PtrMemberAccess	box -> next		6896633	0					
ANR	6896901	Identifier	box		6896633	0					
ANR	6896902	Identifier	next		6896633	1					
ANR	6896903	ExpressionStatement	header = TRUE	220:10:5931:5944	6896633	7	True				
ANR	6896904	AssignmentExpression	header = TRUE		6896633	0		=			
ANR	6896905	Identifier	header		6896633	0					
ANR	6896906	Identifier	TRUE		6896633	1					
ANR	6896907	IfStatement	if ( box -> length <= 0 )		6896633	2					
ANR	6896908	Condition	box -> length <= 0	223:10:5974:5989	6896633	0	True				
ANR	6896909	RelationalExpression	box -> length <= 0		6896633	0		<=			
ANR	6896910	PtrMemberAccess	box -> length		6896633	0					
ANR	6896911	Identifier	box		6896633	0					
ANR	6896912	Identifier	length		6896633	1					
ANR	6896913	PrimaryExpression	0		6896633	1					
ANR	6896914	BreakStatement	break ;	223:28:5992:5997	6896633	1	True				
ANR	6896915	ExpressionStatement	offset += box -> length	224:6:6005:6026	6896633	3	True				
ANR	6896916	AssignmentExpression	offset += box -> length		6896633	0		+=			
ANR	6896917	Identifier	offset		6896633	0					
ANR	6896918	PtrMemberAccess	box -> length		6896633	1					
ANR	6896919	Identifier	box		6896633	0					
ANR	6896920	Identifier	length		6896633	1					
ANR	6896921	ExpressionStatement	box_free ( box )	225:6:6034:6047	6896633	4	True				
ANR	6896922	CallExpression	box_free ( box )		6896633	0					
ANR	6896923	Callee	box_free		6896633	0					
ANR	6896924	Identifier	box_free		6896633	0					
ANR	6896925	ArgumentList	box		6896633	1					
ANR	6896926	Argument	box		6896633	0					
ANR	6896927	Identifier	box		6896633	0					
ANR	6896928	IfStatement	if ( ! header )		6896633	12					
ANR	6896929	Condition	! header	229:6:6066:6072	6896633	0	True				
ANR	6896930	UnaryOperationExpression	! header		6896633	0					
ANR	6896931	UnaryOperator	!		6896633	0					
ANR	6896932	Identifier	header		6896633	1					
ANR	6896933	CompoundStatement		59:15:1428:1428	6896633	1					
ANR	6896934	ExpressionStatement	"fprintf ( stderr , ""Skipping '%s': couldn't parse image header\\n"" , jpx -> filename )"	230:4:6081:6165	6896633	0	True				
ANR	6896935	CallExpression	"fprintf ( stderr , ""Skipping '%s': couldn't parse image header\\n"" , jpx -> filename )"		6896633	0					
ANR	6896936	Callee	fprintf		6896633	0					
ANR	6896937	Identifier	fprintf		6896633	0					
ANR	6896938	ArgumentList	stderr		6896633	1					
ANR	6896939	Argument	stderr		6896633	0					
ANR	6896940	Identifier	stderr		6896633	0					
ANR	6896941	Argument	"""Skipping '%s': couldn't parse image header\\n"""		6896633	1					
ANR	6896942	PrimaryExpression	"""Skipping '%s': couldn't parse image header\\n"""		6896633	0					
ANR	6896943	Argument	jpx -> filename		6896633	2					
ANR	6896944	PtrMemberAccess	jpx -> filename		6896633	0					
ANR	6896945	Identifier	jpx		6896633	0					
ANR	6896946	Identifier	filename		6896633	1					
ANR	6896947	ReturnStatement	return FALSE ;	232:4:6171:6183	6896633	1	True				
ANR	6896948	Identifier	FALSE		6896633	0					
ANR	6896949	ExpressionStatement	"fprintf ( stderr , ""Note on file '%s': %dx%d pixel, %d color component%s, dpi %lf\\n"" , jpx -> filename , jpx -> width , jpx -> height , jpx -> numcmpts , ( jpx -> numcmpts == 1 ? """" : ""s"" ) , jpx -> dpi )"	235:2:6192:6428	6896633	13	True				
ANR	6896950	CallExpression	"fprintf ( stderr , ""Note on file '%s': %dx%d pixel, %d color component%s, dpi %lf\\n"" , jpx -> filename , jpx -> width , jpx -> height , jpx -> numcmpts , ( jpx -> numcmpts == 1 ? """" : ""s"" ) , jpx -> dpi )"		6896633	0					
ANR	6896951	Callee	fprintf		6896633	0					
ANR	6896952	Identifier	fprintf		6896633	0					
ANR	6896953	ArgumentList	stderr		6896633	1					
ANR	6896954	Argument	stderr		6896633	0					
ANR	6896955	Identifier	stderr		6896633	0					
ANR	6896956	Argument	"""Note on file '%s': %dx%d pixel, %d color component%s, dpi %lf\\n"""		6896633	1					
ANR	6896957	PrimaryExpression	"""Note on file '%s': %dx%d pixel, %d color component%s, dpi %lf\\n"""		6896633	0					
ANR	6896958	Argument	jpx -> filename		6896633	2					
ANR	6896959	PtrMemberAccess	jpx -> filename		6896633	0					
ANR	6896960	Identifier	jpx		6896633	0					
ANR	6896961	Identifier	filename		6896633	1					
ANR	6896962	Argument	jpx -> width		6896633	3					
ANR	6896963	PtrMemberAccess	jpx -> width		6896633	0					
ANR	6896964	Identifier	jpx		6896633	0					
ANR	6896965	Identifier	width		6896633	1					
ANR	6896966	Argument	jpx -> height		6896633	4					
ANR	6896967	PtrMemberAccess	jpx -> height		6896633	0					
ANR	6896968	Identifier	jpx		6896633	0					
ANR	6896969	Identifier	height		6896633	1					
ANR	6896970	Argument	jpx -> numcmpts		6896633	5					
ANR	6896971	PtrMemberAccess	jpx -> numcmpts		6896633	0					
ANR	6896972	Identifier	jpx		6896633	0					
ANR	6896973	Identifier	numcmpts		6896633	1					
ANR	6896974	Argument	"jpx -> numcmpts == 1 ? """" : ""s"""		6896633	6					
ANR	6896975	ConditionalExpression	"jpx -> numcmpts == 1 ? """" : ""s"""		6896633	0					
ANR	6896976	Condition	jpx -> numcmpts == 1		6896633	0					
ANR	6896977	EqualityExpression	jpx -> numcmpts == 1		6896633	0		==			
ANR	6896978	PtrMemberAccess	jpx -> numcmpts		6896633	0					
ANR	6896979	Identifier	jpx		6896633	0					
ANR	6896980	Identifier	numcmpts		6896633	1					
ANR	6896981	PrimaryExpression	1		6896633	1					
ANR	6896982	PrimaryExpression	""""""		6896633	1					
ANR	6896983	PrimaryExpression	"""s"""		6896633	2					
ANR	6896984	Argument	jpx -> dpi		6896633	7					
ANR	6896985	PtrMemberAccess	jpx -> dpi		6896633	0					
ANR	6896986	Identifier	jpx		6896633	0					
ANR	6896987	Identifier	dpi		6896633	1					
ANR	6896988	IfStatement	if ( jpx -> dpi == 0.0 )		6896633	14					
ANR	6896989	Condition	jpx -> dpi == 0.0	241:6:6437:6451	6896633	0	True				
ANR	6896990	EqualityExpression	jpx -> dpi == 0.0		6896633	0		==			
ANR	6896991	PtrMemberAccess	jpx -> dpi		6896633	0					
ANR	6896992	Identifier	jpx		6896633	0					
ANR	6896993	Identifier	dpi		6896633	1					
ANR	6896994	PrimaryExpression	0.0		6896633	1					
ANR	6896995	ExpressionStatement	jpx -> dpi = 100.0	242:8:6462:6478	6896633	1	True				
ANR	6896996	AssignmentExpression	jpx -> dpi = 100.0		6896633	0		=			
ANR	6896997	PtrMemberAccess	jpx -> dpi		6896633	0					
ANR	6896998	Identifier	jpx		6896633	0					
ANR	6896999	Identifier	dpi		6896633	1					
ANR	6897000	PrimaryExpression	100.0		6896633	1					
ANR	6897001	ReturnStatement	return TRUE ;	244:2:6483:6494	6896633	15	True				
ANR	6897002	Identifier	TRUE		6896633	0					
ANR	6897003	ReturnType	static int		6896633	1					
ANR	6897004	Identifier	jpx_read_imagedata		6896633	2					
ANR	6897005	ParameterList	imagedata * jpx		6896633	3					
ANR	6897006	Parameter	imagedata * jpx	170:30:4629:4643	6896633	0	True				
ANR	6897007	ParameterType	imagedata *		6896633	0					
ANR	6897008	Identifier	jpx		6896633	1					
ANR	6897009	CFGEntryNode	ENTRY		6896633		True				
ANR	6897010	CFGExitNode	EXIT		6896633		True				
ANR	6897011	Symbol	box		6896633						
ANR	6897012	Symbol	* box		6896633						
ANR	6897013	Symbol	ihdr -> nc		6896633						
ANR	6897014	Symbol	jpx -> width		6896633						
ANR	6897015	Symbol	jpx -> numcmpts		6896633						
ANR	6897016	Symbol	memcmp		6896633						
ANR	6897017	Symbol	ihdr -> bpc		6896633						
ANR	6897018	Symbol	box -> length		6896633						
ANR	6897019	Symbol	ihdr -> width		6896633						
ANR	6897020	Symbol	* jpx		6896633						
ANR	6897021	Symbol	ihdr		6896633						
ANR	6897022	Symbol	* * box		6896633						
ANR	6897023	Symbol	box -> size		6896633						
ANR	6897024	Symbol	fopen		6896633						
ANR	6897025	Symbol	NULL		6896633						
ANR	6897026	Symbol	jpx -> height		6896633						
ANR	6897027	Symbol	offset		6896633						
ANR	6897028	Symbol	in		6896633						
ANR	6897029	Symbol	jpx -> filename		6896633						
ANR	6897030	Symbol	box -> type		6896633						
ANR	6897031	Symbol	TRUE		6896633						
ANR	6897032	Symbol	box -> next -> rez		6896633						
ANR	6897033	Symbol	stderr		6896633						
ANR	6897034	Symbol	jpx -> dpi		6896633						
ANR	6897035	Symbol	n		6896633						
ANR	6897036	Symbol	fread		6896633						
ANR	6897037	Symbol	ihdr -> height		6896633						
ANR	6897038	Symbol	buf		6896633						
ANR	6897039	Symbol	jpx		6896633						
ANR	6897040	Symbol	box -> next		6896633						
ANR	6897041	Symbol	box_read		6896633						
ANR	6897042	Symbol	jpx -> depth		6896633						
ANR	6897043	Symbol	header		6896633						
ANR	6897044	Symbol	FALSE		6896633						
ANR	6897045	Symbol	* box -> next		6896633						
ANR	6897046	Symbol	BUFSIZE		6896633						
ANR	6897047	Symbol	* ihdr		6896633						
ANR	6897048	Function	jpx_pdf	247:0:6499:8828							
ANR	6897049	FunctionDef	"jpx_pdf (imagedata * jpx , FILE * out)"		6897048	0					
ANR	6897050	CompoundStatement		248:0:6547:8828	6897048	0					
ANR	6897051	IdentifierDeclStatement	FILE * in ;	249:8:6557:6565	6897048	0	True				
ANR	6897052	IdentifierDecl	* in		6897048	0					
ANR	6897053	IdentifierDeclType	FILE *		6897048	0					
ANR	6897054	Identifier	in		6897048	1					
ANR	6897055	IdentifierDeclStatement	unsigned char buf [ BUFSIZE ] ;	250:8:6575:6601	6897048	1	True				
ANR	6897056	IdentifierDecl	buf [ BUFSIZE ]		6897048	0					
ANR	6897057	IdentifierDeclType	unsigned char [ BUFSIZE ]		6897048	0					
ANR	6897058	Identifier	buf		6897048	1					
ANR	6897059	Identifier	BUFSIZE		6897048	2					
ANR	6897060	IdentifierDeclStatement	int n ;	251:8:6611:6616	6897048	2	True				
ANR	6897061	IdentifierDecl	n		6897048	0					
ANR	6897062	IdentifierDeclType	int		6897048	0					
ANR	6897063	Identifier	n		6897048	1					
ANR	6897064	IdentifierDeclStatement	double scale ;	252:8:6626:6638	6897048	3	True				
ANR	6897065	IdentifierDecl	scale		6897048	0					
ANR	6897066	IdentifierDeclType	double		6897048	0					
ANR	6897067	Identifier	scale		6897048	1					
ANR	6897068	IfStatement	if ( ! jpx_read_imagedata ( jpx ) )		6897048	4					
ANR	6897069	Condition	! jpx_read_imagedata ( jpx )	254:13:6654:6677	6897048	0	True				
ANR	6897070	UnaryOperationExpression	! jpx_read_imagedata ( jpx )		6897048	0					
ANR	6897071	UnaryOperator	!		6897048	0					
ANR	6897072	CallExpression	jpx_read_imagedata ( jpx )		6897048	1					
ANR	6897073	Callee	jpx_read_imagedata		6897048	0					
ANR	6897074	Identifier	jpx_read_imagedata		6897048	0					
ANR	6897075	ArgumentList	jpx		6897048	1					
ANR	6897076	Argument	jpx		6897048	0					
ANR	6897077	Identifier	jpx		6897048	0					
ANR	6897078	ReturnStatement	return - 1 ;	254:40:6681:6690	6897048	1	True				
ANR	6897079	UnaryOperationExpression	- 1		6897048	0					
ANR	6897080	UnaryOperator	-		6897048	0					
ANR	6897081	PrimaryExpression	1		6897048	1					
ANR	6897082	ExpressionStatement	"in = fopen ( jpx -> filename , ""rb"" )"	256:8:6701:6732	6897048	5	True				
ANR	6897083	AssignmentExpression	"in = fopen ( jpx -> filename , ""rb"" )"		6897048	0		=			
ANR	6897084	Identifier	in		6897048	0					
ANR	6897085	CallExpression	"fopen ( jpx -> filename , ""rb"" )"		6897048	1					
ANR	6897086	Callee	fopen		6897048	0					
ANR	6897087	Identifier	fopen		6897048	0					
ANR	6897088	ArgumentList	jpx -> filename		6897048	1					
ANR	6897089	Argument	jpx -> filename		6897048	0					
ANR	6897090	PtrMemberAccess	jpx -> filename		6897048	0					
ANR	6897091	Identifier	jpx		6897048	0					
ANR	6897092	Identifier	filename		6897048	1					
ANR	6897093	Argument	"""rb"""		6897048	1					
ANR	6897094	PrimaryExpression	"""rb"""		6897048	0					
ANR	6897095	IfStatement	if ( in == NULL )		6897048	6					
ANR	6897096	Condition	in == NULL	257:12:6746:6755	6897048	0	True				
ANR	6897097	EqualityExpression	in == NULL		6897048	0		==			
ANR	6897098	Identifier	in		6897048	0					
ANR	6897099	Identifier	NULL		6897048	1					
ANR	6897100	CompoundStatement		10:24:210:210	6897048	1					
ANR	6897101	ExpressionStatement	"fprintf ( stderr , ""Error: unable to open input file '%s'\\n"" , jpx -> filename )"	258:16:6776:6849	6897048	0	True				
ANR	6897102	CallExpression	"fprintf ( stderr , ""Error: unable to open input file '%s'\\n"" , jpx -> filename )"		6897048	0					
ANR	6897103	Callee	fprintf		6897048	0					
ANR	6897104	Identifier	fprintf		6897048	0					
ANR	6897105	ArgumentList	stderr		6897048	1					
ANR	6897106	Argument	stderr		6897048	0					
ANR	6897107	Identifier	stderr		6897048	0					
ANR	6897108	Argument	"""Error: unable to open input file '%s'\\n"""		6897048	1					
ANR	6897109	PrimaryExpression	"""Error: unable to open input file '%s'\\n"""		6897048	0					
ANR	6897110	Argument	jpx -> filename		6897048	2					
ANR	6897111	PtrMemberAccess	jpx -> filename		6897048	0					
ANR	6897112	Identifier	jpx		6897048	0					
ANR	6897113	Identifier	filename		6897048	1					
ANR	6897114	ReturnStatement	return - 1 ;	259:16:6867:6876	6897048	1	True				
ANR	6897115	UnaryOperationExpression	- 1		6897048	0					
ANR	6897116	UnaryOperator	-		6897048	0					
ANR	6897117	PrimaryExpression	1		6897048	1					
ANR	6897118	ExpressionStatement	"fseek ( in , 0 , SEEK_END )"	261:8:6896:6918	6897048	7	True				
ANR	6897119	CallExpression	"fseek ( in , 0 , SEEK_END )"		6897048	0					
ANR	6897120	Callee	fseek		6897048	0					
ANR	6897121	Identifier	fseek		6897048	0					
ANR	6897122	ArgumentList	in		6897048	1					
ANR	6897123	Argument	in		6897048	0					
ANR	6897124	Identifier	in		6897048	0					
ANR	6897125	Argument	0		6897048	1					
ANR	6897126	PrimaryExpression	0		6897048	0					
ANR	6897127	Argument	SEEK_END		6897048	2					
ANR	6897128	Identifier	SEEK_END		6897048	0					
ANR	6897129	ExpressionStatement	jpx -> filesize = ftell ( in )	262:8:6928:6953	6897048	8	True				
ANR	6897130	AssignmentExpression	jpx -> filesize = ftell ( in )		6897048	0		=			
ANR	6897131	PtrMemberAccess	jpx -> filesize		6897048	0					
ANR	6897132	Identifier	jpx		6897048	0					
ANR	6897133	Identifier	filesize		6897048	1					
ANR	6897134	CallExpression	ftell ( in )		6897048	1					
ANR	6897135	Callee	ftell		6897048	0					
ANR	6897136	Identifier	ftell		6897048	0					
ANR	6897137	ArgumentList	in		6897048	1					
ANR	6897138	Argument	in		6897048	0					
ANR	6897139	Identifier	in		6897048	0					
ANR	6897140	ExpressionStatement	"fseek ( in , 0 , SEEK_SET )"	263:8:6963:6985	6897048	9	True				
ANR	6897141	CallExpression	"fseek ( in , 0 , SEEK_SET )"		6897048	0					
ANR	6897142	Callee	fseek		6897048	0					
ANR	6897143	Identifier	fseek		6897048	0					
ANR	6897144	ArgumentList	in		6897048	1					
ANR	6897145	Argument	in		6897048	0					
ANR	6897146	Identifier	in		6897048	0					
ANR	6897147	Argument	0		6897048	1					
ANR	6897148	PrimaryExpression	0		6897048	0					
ANR	6897149	Argument	SEEK_SET		6897048	2					
ANR	6897150	Identifier	SEEK_SET		6897048	0					
ANR	6897151	ExpressionStatement	xref [ nxref ++ ] = ftell ( out )	265:8:6996:7022	6897048	10	True				
ANR	6897152	AssignmentExpression	xref [ nxref ++ ] = ftell ( out )		6897048	0		=			
ANR	6897153	ArrayIndexing	xref [ nxref ++ ]		6897048	0					
ANR	6897154	Identifier	xref		6897048	0					
ANR	6897155	PostIncDecOperationExpression	nxref ++		6897048	1					
ANR	6897156	Identifier	nxref		6897048	0					
ANR	6897157	IncDec	++		6897048	1					
ANR	6897158	CallExpression	ftell ( out )		6897048	1					
ANR	6897159	Callee	ftell		6897048	0					
ANR	6897160	Identifier	ftell		6897048	0					
ANR	6897161	ArgumentList	out		6897048	1					
ANR	6897162	Argument	out		6897048	0					
ANR	6897163	Identifier	out		6897048	0					
ANR	6897164	ExpressionStatement	"fprintf ( out , ""%d 0 obj\\n"" , nxref )"	266:8:7032:7065	6897048	11	True				
ANR	6897165	CallExpression	"fprintf ( out , ""%d 0 obj\\n"" , nxref )"		6897048	0					
ANR	6897166	Callee	fprintf		6897048	0					
ANR	6897167	Identifier	fprintf		6897048	0					
ANR	6897168	ArgumentList	out		6897048	1					
ANR	6897169	Argument	out		6897048	0					
ANR	6897170	Identifier	out		6897048	0					
ANR	6897171	Argument	"""%d 0 obj\\n"""		6897048	1					
ANR	6897172	PrimaryExpression	"""%d 0 obj\\n"""		6897048	0					
ANR	6897173	Argument	nxref		6897048	2					
ANR	6897174	Identifier	nxref		6897048	0					
ANR	6897175	ExpressionStatement	"fprintf ( out , ""<</Type/XObject/Subtype/Image\\n"" )"	267:8:7075:7122	6897048	12	True				
ANR	6897176	CallExpression	"fprintf ( out , ""<</Type/XObject/Subtype/Image\\n"" )"		6897048	0					
ANR	6897177	Callee	fprintf		6897048	0					
ANR	6897178	Identifier	fprintf		6897048	0					
ANR	6897179	ArgumentList	out		6897048	1					
ANR	6897180	Argument	out		6897048	0					
ANR	6897181	Identifier	out		6897048	0					
ANR	6897182	Argument	"""<</Type/XObject/Subtype/Image\\n"""		6897048	1					
ANR	6897183	PrimaryExpression	"""<</Type/XObject/Subtype/Image\\n"""		6897048	0					
ANR	6897184	ExpressionStatement	"fprintf ( out , ""/Width %d /Height %d\\n"" , jpx -> width , jpx -> height )"	268:8:7132:7195	6897048	13	True				
ANR	6897185	CallExpression	"fprintf ( out , ""/Width %d /Height %d\\n"" , jpx -> width , jpx -> height )"		6897048	0					
ANR	6897186	Callee	fprintf		6897048	0					
ANR	6897187	Identifier	fprintf		6897048	0					
ANR	6897188	ArgumentList	out		6897048	1					
ANR	6897189	Argument	out		6897048	0					
ANR	6897190	Identifier	out		6897048	0					
ANR	6897191	Argument	"""/Width %d /Height %d\\n"""		6897048	1					
ANR	6897192	PrimaryExpression	"""/Width %d /Height %d\\n"""		6897048	0					
ANR	6897193	Argument	jpx -> width		6897048	2					
ANR	6897194	PtrMemberAccess	jpx -> width		6897048	0					
ANR	6897195	Identifier	jpx		6897048	0					
ANR	6897196	Identifier	width		6897048	1					
ANR	6897197	Argument	jpx -> height		6897048	3					
ANR	6897198	PtrMemberAccess	jpx -> height		6897048	0					
ANR	6897199	Identifier	jpx		6897048	0					
ANR	6897200	Identifier	height		6897048	1					
ANR	6897201	ExpressionStatement	"fprintf ( out , ""/ColorSpace/%s\\n"" , jpx -> numcmpts == 1 ? ""DeviceGray"" : ""DeviceRGB"" )"	269:8:7205:7286	6897048	14	True				
ANR	6897202	CallExpression	"fprintf ( out , ""/ColorSpace/%s\\n"" , jpx -> numcmpts == 1 ? ""DeviceGray"" : ""DeviceRGB"" )"		6897048	0					
ANR	6897203	Callee	fprintf		6897048	0					
ANR	6897204	Identifier	fprintf		6897048	0					
ANR	6897205	ArgumentList	out		6897048	1					
ANR	6897206	Argument	out		6897048	0					
ANR	6897207	Identifier	out		6897048	0					
ANR	6897208	Argument	"""/ColorSpace/%s\\n"""		6897048	1					
ANR	6897209	PrimaryExpression	"""/ColorSpace/%s\\n"""		6897048	0					
ANR	6897210	Argument	"jpx -> numcmpts == 1 ? ""DeviceGray"" : ""DeviceRGB"""		6897048	2					
ANR	6897211	ConditionalExpression	"jpx -> numcmpts == 1 ? ""DeviceGray"" : ""DeviceRGB"""		6897048	0					
ANR	6897212	Condition	jpx -> numcmpts == 1		6897048	0					
ANR	6897213	EqualityExpression	jpx -> numcmpts == 1		6897048	0		==			
ANR	6897214	PtrMemberAccess	jpx -> numcmpts		6897048	0					
ANR	6897215	Identifier	jpx		6897048	0					
ANR	6897216	Identifier	numcmpts		6897048	1					
ANR	6897217	PrimaryExpression	1		6897048	1					
ANR	6897218	PrimaryExpression	"""DeviceGray"""		6897048	1					
ANR	6897219	PrimaryExpression	"""DeviceRGB"""		6897048	2					
ANR	6897220	ExpressionStatement	"fprintf ( out , ""/BitsPerComponent %d\\n"" , jpx -> depth )"	270:8:7296:7346	6897048	15	True				
ANR	6897221	CallExpression	"fprintf ( out , ""/BitsPerComponent %d\\n"" , jpx -> depth )"		6897048	0					
ANR	6897222	Callee	fprintf		6897048	0					
ANR	6897223	Identifier	fprintf		6897048	0					
ANR	6897224	ArgumentList	out		6897048	1					
ANR	6897225	Argument	out		6897048	0					
ANR	6897226	Identifier	out		6897048	0					
ANR	6897227	Argument	"""/BitsPerComponent %d\\n"""		6897048	1					
ANR	6897228	PrimaryExpression	"""/BitsPerComponent %d\\n"""		6897048	0					
ANR	6897229	Argument	jpx -> depth		6897048	2					
ANR	6897230	PtrMemberAccess	jpx -> depth		6897048	0					
ANR	6897231	Identifier	jpx		6897048	0					
ANR	6897232	Identifier	depth		6897048	1					
ANR	6897233	ExpressionStatement	"fprintf ( out , ""/Length %d\\n"" , jpx -> filesize )"	271:8:7356:7399	6897048	16	True				
ANR	6897234	CallExpression	"fprintf ( out , ""/Length %d\\n"" , jpx -> filesize )"		6897048	0					
ANR	6897235	Callee	fprintf		6897048	0					
ANR	6897236	Identifier	fprintf		6897048	0					
ANR	6897237	ArgumentList	out		6897048	1					
ANR	6897238	Argument	out		6897048	0					
ANR	6897239	Identifier	out		6897048	0					
ANR	6897240	Argument	"""/Length %d\\n"""		6897048	1					
ANR	6897241	PrimaryExpression	"""/Length %d\\n"""		6897048	0					
ANR	6897242	Argument	jpx -> filesize		6897048	2					
ANR	6897243	PtrMemberAccess	jpx -> filesize		6897048	0					
ANR	6897244	Identifier	jpx		6897048	0					
ANR	6897245	Identifier	filesize		6897048	1					
ANR	6897246	ExpressionStatement	"fprintf ( out , ""/Filter/JPXDecode\\n"" )"	272:8:7409:7444	6897048	17	True				
ANR	6897247	CallExpression	"fprintf ( out , ""/Filter/JPXDecode\\n"" )"		6897048	0					
ANR	6897248	Callee	fprintf		6897048	0					
ANR	6897249	Identifier	fprintf		6897048	0					
ANR	6897250	ArgumentList	out		6897048	1					
ANR	6897251	Argument	out		6897048	0					
ANR	6897252	Identifier	out		6897048	0					
ANR	6897253	Argument	"""/Filter/JPXDecode\\n"""		6897048	1					
ANR	6897254	PrimaryExpression	"""/Filter/JPXDecode\\n"""		6897048	0					
ANR	6897255	ExpressionStatement	"fprintf ( out , "">>\\n"" )"	273:8:7454:7474	6897048	18	True				
ANR	6897256	CallExpression	"fprintf ( out , "">>\\n"" )"		6897048	0					
ANR	6897257	Callee	fprintf		6897048	0					
ANR	6897258	Identifier	fprintf		6897048	0					
ANR	6897259	ArgumentList	out		6897048	1					
ANR	6897260	Argument	out		6897048	0					
ANR	6897261	Identifier	out		6897048	0					
ANR	6897262	Argument	""">>\\n"""		6897048	1					
ANR	6897263	PrimaryExpression	""">>\\n"""		6897048	0					
ANR	6897264	ExpressionStatement	"fprintf ( out , ""stream\\n"" )"	274:8:7484:7508	6897048	19	True				
ANR	6897265	CallExpression	"fprintf ( out , ""stream\\n"" )"		6897048	0					
ANR	6897266	Callee	fprintf		6897048	0					
ANR	6897267	Identifier	fprintf		6897048	0					
ANR	6897268	ArgumentList	out		6897048	1					
ANR	6897269	Argument	out		6897048	0					
ANR	6897270	Identifier	out		6897048	0					
ANR	6897271	Argument	"""stream\\n"""		6897048	1					
ANR	6897272	PrimaryExpression	"""stream\\n"""		6897048	0					
ANR	6897273	WhileStatement	"while ( ( n = fread ( buf , 1 , sizeof ( buf ) , in ) ) != 0 )"		6897048	20					
ANR	6897274	Condition	"( n = fread ( buf , 1 , sizeof ( buf ) , in ) ) != 0"	277:15:7564:7604	6897048	0	True				
ANR	6897275	EqualityExpression	"( n = fread ( buf , 1 , sizeof ( buf ) , in ) ) != 0"		6897048	0		!=			
ANR	6897276	AssignmentExpression	"n = fread ( buf , 1 , sizeof ( buf ) , in )"		6897048	0		=			
ANR	6897277	Identifier	n		6897048	0					
ANR	6897278	CallExpression	"fread ( buf , 1 , sizeof ( buf ) , in )"		6897048	1					
ANR	6897279	Callee	fread		6897048	0					
ANR	6897280	Identifier	fread		6897048	0					
ANR	6897281	ArgumentList	buf		6897048	1					
ANR	6897282	Argument	buf		6897048	0					
ANR	6897283	Identifier	buf		6897048	0					
ANR	6897284	Argument	1		6897048	1					
ANR	6897285	PrimaryExpression	1		6897048	0					
ANR	6897286	Argument	sizeof ( buf )		6897048	2					
ANR	6897287	SizeofExpression	sizeof ( buf )		6897048	0					
ANR	6897288	Sizeof	sizeof		6897048	0					
ANR	6897289	SizeofOperand	buf		6897048	1					
ANR	6897290	Argument	in		6897048	3					
ANR	6897291	Identifier	in		6897048	0					
ANR	6897292	PrimaryExpression	0		6897048	1					
ANR	6897293	ExpressionStatement	"fwrite ( buf , 1 , n , out )"	278:16:7623:7645	6897048	1	True				
ANR	6897294	CallExpression	"fwrite ( buf , 1 , n , out )"		6897048	0					
ANR	6897295	Callee	fwrite		6897048	0					
ANR	6897296	Identifier	fwrite		6897048	0					
ANR	6897297	ArgumentList	buf		6897048	1					
ANR	6897298	Argument	buf		6897048	0					
ANR	6897299	Identifier	buf		6897048	0					
ANR	6897300	Argument	1		6897048	1					
ANR	6897301	PrimaryExpression	1		6897048	0					
ANR	6897302	Argument	n		6897048	2					
ANR	6897303	Identifier	n		6897048	0					
ANR	6897304	Argument	out		6897048	3					
ANR	6897305	Identifier	out		6897048	0					
ANR	6897306	ExpressionStatement	"fprintf ( out , ""endstream\\n"" )"	280:8:7656:7683	6897048	21	True				
ANR	6897307	CallExpression	"fprintf ( out , ""endstream\\n"" )"		6897048	0					
ANR	6897308	Callee	fprintf		6897048	0					
ANR	6897309	Identifier	fprintf		6897048	0					
ANR	6897310	ArgumentList	out		6897048	1					
ANR	6897311	Argument	out		6897048	0					
ANR	6897312	Identifier	out		6897048	0					
ANR	6897313	Argument	"""endstream\\n"""		6897048	1					
ANR	6897314	PrimaryExpression	"""endstream\\n"""		6897048	0					
ANR	6897315	ExpressionStatement	"fprintf ( out , ""endobj\\n"" )"	281:8:7693:7717	6897048	22	True				
ANR	6897316	CallExpression	"fprintf ( out , ""endobj\\n"" )"		6897048	0					
ANR	6897317	Callee	fprintf		6897048	0					
ANR	6897318	Identifier	fprintf		6897048	0					
ANR	6897319	ArgumentList	out		6897048	1					
ANR	6897320	Argument	out		6897048	0					
ANR	6897321	Identifier	out		6897048	0					
ANR	6897322	Argument	"""endobj\\n"""		6897048	1					
ANR	6897323	PrimaryExpression	"""endobj\\n"""		6897048	0					
ANR	6897324	ExpressionStatement	"fprintf ( out , ""\\n"" )"	282:8:7727:7745	6897048	23	True				
ANR	6897325	CallExpression	"fprintf ( out , ""\\n"" )"		6897048	0					
ANR	6897326	Callee	fprintf		6897048	0					
ANR	6897327	Identifier	fprintf		6897048	0					
ANR	6897328	ArgumentList	out		6897048	1					
ANR	6897329	Argument	out		6897048	0					
ANR	6897330	Identifier	out		6897048	0					
ANR	6897331	Argument	"""\\n"""		6897048	1					
ANR	6897332	PrimaryExpression	"""\\n"""		6897048	0					
ANR	6897333	ExpressionStatement	fclose ( in )	284:8:7756:7766	6897048	24	True				
ANR	6897334	CallExpression	fclose ( in )		6897048	0					
ANR	6897335	Callee	fclose		6897048	0					
ANR	6897336	Identifier	fclose		6897048	0					
ANR	6897337	ArgumentList	in		6897048	1					
ANR	6897338	Argument	in		6897048	0					
ANR	6897339	Identifier	in		6897048	0					
ANR	6897340	ExpressionStatement	scale = 72.0 / jpx -> dpi	286:8:7777:7800	6897048	25	True				
ANR	6897341	AssignmentExpression	scale = 72.0 / jpx -> dpi		6897048	0		=			
ANR	6897342	Identifier	scale		6897048	0					
ANR	6897343	MultiplicativeExpression	72.0 / jpx -> dpi		6897048	1		/			
ANR	6897344	PrimaryExpression	72.0		6897048	0					
ANR	6897345	PtrMemberAccess	jpx -> dpi		6897048	1					
ANR	6897346	Identifier	jpx		6897048	0					
ANR	6897347	Identifier	dpi		6897048	1					
ANR	6897348	ExpressionStatement	"sprintf ( ( char * ) buf , ""%d 0 0 %d 0 0 cm /x%d Do\\n"" , ( int ) ceil ( jpx -> width * scale ) , ( int ) ceil ( jpx -> height * scale ) , nxref )"	287:8:7810:7978	6897048	26	True				
ANR	6897349	CallExpression	"sprintf ( ( char * ) buf , ""%d 0 0 %d 0 0 cm /x%d Do\\n"" , ( int ) ceil ( jpx -> width * scale ) , ( int ) ceil ( jpx -> height * scale ) , nxref )"		6897048	0					
ANR	6897350	Callee	sprintf		6897048	0					
ANR	6897351	Identifier	sprintf		6897048	0					
ANR	6897352	ArgumentList	( char * ) buf		6897048	1					
ANR	6897353	Argument	( char * ) buf		6897048	0					
ANR	6897354	CastExpression	( char * ) buf		6897048	0					
ANR	6897355	CastTarget	char *		6897048	0					
ANR	6897356	Identifier	buf		6897048	1					
ANR	6897357	Argument	"""%d 0 0 %d 0 0 cm /x%d Do\\n"""		6897048	1					
ANR	6897358	PrimaryExpression	"""%d 0 0 %d 0 0 cm /x%d Do\\n"""		6897048	0					
ANR	6897359	Argument	( int ) ceil ( jpx -> width * scale )		6897048	2					
ANR	6897360	CastExpression	( int ) ceil ( jpx -> width * scale )		6897048	0					
ANR	6897361	CastTarget	int		6897048	0					
ANR	6897362	CallExpression	ceil ( jpx -> width * scale )		6897048	1					
ANR	6897363	Callee	ceil		6897048	0					
ANR	6897364	Identifier	ceil		6897048	0					
ANR	6897365	ArgumentList	jpx -> width * scale		6897048	1					
ANR	6897366	Argument	jpx -> width * scale		6897048	0					
ANR	6897367	MultiplicativeExpression	jpx -> width * scale		6897048	0		*			
ANR	6897368	PtrMemberAccess	jpx -> width		6897048	0					
ANR	6897369	Identifier	jpx		6897048	0					
ANR	6897370	Identifier	width		6897048	1					
ANR	6897371	Identifier	scale		6897048	1					
ANR	6897372	Argument	( int ) ceil ( jpx -> height * scale )		6897048	3					
ANR	6897373	CastExpression	( int ) ceil ( jpx -> height * scale )		6897048	0					
ANR	6897374	CastTarget	int		6897048	0					
ANR	6897375	CallExpression	ceil ( jpx -> height * scale )		6897048	1					
ANR	6897376	Callee	ceil		6897048	0					
ANR	6897377	Identifier	ceil		6897048	0					
ANR	6897378	ArgumentList	jpx -> height * scale		6897048	1					
ANR	6897379	Argument	jpx -> height * scale		6897048	0					
ANR	6897380	MultiplicativeExpression	jpx -> height * scale		6897048	0		*			
ANR	6897381	PtrMemberAccess	jpx -> height		6897048	0					
ANR	6897382	Identifier	jpx		6897048	0					
ANR	6897383	Identifier	height		6897048	1					
ANR	6897384	Identifier	scale		6897048	1					
ANR	6897385	Argument	nxref		6897048	4					
ANR	6897386	Identifier	nxref		6897048	0					
ANR	6897387	ExpressionStatement	xref [ nxref ++ ] = ftell ( out )	292:8:7989:8015	6897048	27	True				
ANR	6897388	AssignmentExpression	xref [ nxref ++ ] = ftell ( out )		6897048	0		=			
ANR	6897389	ArrayIndexing	xref [ nxref ++ ]		6897048	0					
ANR	6897390	Identifier	xref		6897048	0					
ANR	6897391	PostIncDecOperationExpression	nxref ++		6897048	1					
ANR	6897392	Identifier	nxref		6897048	0					
ANR	6897393	IncDec	++		6897048	1					
ANR	6897394	CallExpression	ftell ( out )		6897048	1					
ANR	6897395	Callee	ftell		6897048	0					
ANR	6897396	Identifier	ftell		6897048	0					
ANR	6897397	ArgumentList	out		6897048	1					
ANR	6897398	Argument	out		6897048	0					
ANR	6897399	Identifier	out		6897048	0					
ANR	6897400	ExpressionStatement	"fprintf ( out , ""%d 0 obj\\n<</Length %lu>>\\n"" , nxref , ( unsigned long ) strlen ( ( char * ) buf ) )"	293:8:8025:8126	6897048	28	True				
ANR	6897401	CallExpression	"fprintf ( out , ""%d 0 obj\\n<</Length %lu>>\\n"" , nxref , ( unsigned long ) strlen ( ( char * ) buf ) )"		6897048	0					
ANR	6897402	Callee	fprintf		6897048	0					
ANR	6897403	Identifier	fprintf		6897048	0					
ANR	6897404	ArgumentList	out		6897048	1					
ANR	6897405	Argument	out		6897048	0					
ANR	6897406	Identifier	out		6897048	0					
ANR	6897407	Argument	"""%d 0 obj\\n<</Length %lu>>\\n"""		6897048	1					
ANR	6897408	PrimaryExpression	"""%d 0 obj\\n<</Length %lu>>\\n"""		6897048	0					
ANR	6897409	Argument	nxref		6897048	2					
ANR	6897410	Identifier	nxref		6897048	0					
ANR	6897411	Argument	( unsigned long ) strlen ( ( char * ) buf )		6897048	3					
ANR	6897412	CastExpression	( unsigned long ) strlen ( ( char * ) buf )		6897048	0					
ANR	6897413	CastTarget	unsigned long		6897048	0					
ANR	6897414	CallExpression	strlen ( ( char * ) buf )		6897048	1					
ANR	6897415	Callee	strlen		6897048	0					
ANR	6897416	Identifier	strlen		6897048	0					
ANR	6897417	ArgumentList	( char * ) buf		6897048	1					
ANR	6897418	Argument	( char * ) buf		6897048	0					
ANR	6897419	CastExpression	( char * ) buf		6897048	0					
ANR	6897420	CastTarget	char *		6897048	0					
ANR	6897421	Identifier	buf		6897048	1					
ANR	6897422	ExpressionStatement	"fprintf ( out , ""stream\\n"" )"	295:8:8136:8160	6897048	29	True				
ANR	6897423	CallExpression	"fprintf ( out , ""stream\\n"" )"		6897048	0					
ANR	6897424	Callee	fprintf		6897048	0					
ANR	6897425	Identifier	fprintf		6897048	0					
ANR	6897426	ArgumentList	out		6897048	1					
ANR	6897427	Argument	out		6897048	0					
ANR	6897428	Identifier	out		6897048	0					
ANR	6897429	Argument	"""stream\\n"""		6897048	1					
ANR	6897430	PrimaryExpression	"""stream\\n"""		6897048	0					
ANR	6897431	ExpressionStatement	"fprintf ( out , ""%s"" , buf )"	296:8:8170:8193	6897048	30	True				
ANR	6897432	CallExpression	"fprintf ( out , ""%s"" , buf )"		6897048	0					
ANR	6897433	Callee	fprintf		6897048	0					
ANR	6897434	Identifier	fprintf		6897048	0					
ANR	6897435	ArgumentList	out		6897048	1					
ANR	6897436	Argument	out		6897048	0					
ANR	6897437	Identifier	out		6897048	0					
ANR	6897438	Argument	"""%s"""		6897048	1					
ANR	6897439	PrimaryExpression	"""%s"""		6897048	0					
ANR	6897440	Argument	buf		6897048	2					
ANR	6897441	Identifier	buf		6897048	0					
ANR	6897442	ExpressionStatement	"fprintf ( out , ""endstream\\n"" )"	297:8:8203:8230	6897048	31	True				
ANR	6897443	CallExpression	"fprintf ( out , ""endstream\\n"" )"		6897048	0					
ANR	6897444	Callee	fprintf		6897048	0					
ANR	6897445	Identifier	fprintf		6897048	0					
ANR	6897446	ArgumentList	out		6897048	1					
ANR	6897447	Argument	out		6897048	0					
ANR	6897448	Identifier	out		6897048	0					
ANR	6897449	Argument	"""endstream\\n"""		6897048	1					
ANR	6897450	PrimaryExpression	"""endstream\\n"""		6897048	0					
ANR	6897451	ExpressionStatement	"fprintf ( out , ""endobj\\n"" )"	298:8:8240:8264	6897048	32	True				
ANR	6897452	CallExpression	"fprintf ( out , ""endobj\\n"" )"		6897048	0					
ANR	6897453	Callee	fprintf		6897048	0					
ANR	6897454	Identifier	fprintf		6897048	0					
ANR	6897455	ArgumentList	out		6897048	1					
ANR	6897456	Argument	out		6897048	0					
ANR	6897457	Identifier	out		6897048	0					
ANR	6897458	Argument	"""endobj\\n"""		6897048	1					
ANR	6897459	PrimaryExpression	"""endobj\\n"""		6897048	0					
ANR	6897460	ExpressionStatement	"fprintf ( out , ""\\n"" )"	299:8:8274:8292	6897048	33	True				
ANR	6897461	CallExpression	"fprintf ( out , ""\\n"" )"		6897048	0					
ANR	6897462	Callee	fprintf		6897048	0					
ANR	6897463	Identifier	fprintf		6897048	0					
ANR	6897464	ArgumentList	out		6897048	1					
ANR	6897465	Argument	out		6897048	0					
ANR	6897466	Identifier	out		6897048	0					
ANR	6897467	Argument	"""\\n"""		6897048	1					
ANR	6897468	PrimaryExpression	"""\\n"""		6897048	0					
ANR	6897469	ExpressionStatement	xref [ nxref ++ ] = ftell ( out )	301:8:8303:8329	6897048	34	True				
ANR	6897470	AssignmentExpression	xref [ nxref ++ ] = ftell ( out )		6897048	0		=			
ANR	6897471	ArrayIndexing	xref [ nxref ++ ]		6897048	0					
ANR	6897472	Identifier	xref		6897048	0					
ANR	6897473	PostIncDecOperationExpression	nxref ++		6897048	1					
ANR	6897474	Identifier	nxref		6897048	0					
ANR	6897475	IncDec	++		6897048	1					
ANR	6897476	CallExpression	ftell ( out )		6897048	1					
ANR	6897477	Callee	ftell		6897048	0					
ANR	6897478	Identifier	ftell		6897048	0					
ANR	6897479	ArgumentList	out		6897048	1					
ANR	6897480	Argument	out		6897048	0					
ANR	6897481	Identifier	out		6897048	0					
ANR	6897482	ExpressionStatement	"fprintf ( out , ""%d 0 obj\\n"" , nxref )"	302:8:8339:8372	6897048	35	True				
ANR	6897483	CallExpression	"fprintf ( out , ""%d 0 obj\\n"" , nxref )"		6897048	0					
ANR	6897484	Callee	fprintf		6897048	0					
ANR	6897485	Identifier	fprintf		6897048	0					
ANR	6897486	ArgumentList	out		6897048	1					
ANR	6897487	Argument	out		6897048	0					
ANR	6897488	Identifier	out		6897048	0					
ANR	6897489	Argument	"""%d 0 obj\\n"""		6897048	1					
ANR	6897490	PrimaryExpression	"""%d 0 obj\\n"""		6897048	0					
ANR	6897491	Argument	nxref		6897048	2					
ANR	6897492	Identifier	nxref		6897048	0					
ANR	6897493	ExpressionStatement	"fprintf ( out , ""<</Type/Page/Parent 3 0 R\\n"" )"	303:8:8382:8425	6897048	36	True				
ANR	6897494	CallExpression	"fprintf ( out , ""<</Type/Page/Parent 3 0 R\\n"" )"		6897048	0					
ANR	6897495	Callee	fprintf		6897048	0					
ANR	6897496	Identifier	fprintf		6897048	0					
ANR	6897497	ArgumentList	out		6897048	1					
ANR	6897498	Argument	out		6897048	0					
ANR	6897499	Identifier	out		6897048	0					
ANR	6897500	Argument	"""<</Type/Page/Parent 3 0 R\\n"""		6897048	1					
ANR	6897501	PrimaryExpression	"""<</Type/Page/Parent 3 0 R\\n"""		6897048	0					
ANR	6897502	ExpressionStatement	"fprintf ( out , ""/Resources << /XObject << /x%d %d 0 R >> >>\\n"" , nxref - 2 , nxref - 2 )"	304:8:8435:8514	6897048	37	True				
ANR	6897503	CallExpression	"fprintf ( out , ""/Resources << /XObject << /x%d %d 0 R >> >>\\n"" , nxref - 2 , nxref - 2 )"		6897048	0					
ANR	6897504	Callee	fprintf		6897048	0					
ANR	6897505	Identifier	fprintf		6897048	0					
ANR	6897506	ArgumentList	out		6897048	1					
ANR	6897507	Argument	out		6897048	0					
ANR	6897508	Identifier	out		6897048	0					
ANR	6897509	Argument	"""/Resources << /XObject << /x%d %d 0 R >> >>\\n"""		6897048	1					
ANR	6897510	PrimaryExpression	"""/Resources << /XObject << /x%d %d 0 R >> >>\\n"""		6897048	0					
ANR	6897511	Argument	nxref - 2		6897048	2					
ANR	6897512	AdditiveExpression	nxref - 2		6897048	0		-			
ANR	6897513	Identifier	nxref		6897048	0					
ANR	6897514	PrimaryExpression	2		6897048	1					
ANR	6897515	Argument	nxref - 2		6897048	3					
ANR	6897516	AdditiveExpression	nxref - 2		6897048	0		-			
ANR	6897517	Identifier	nxref		6897048	0					
ANR	6897518	PrimaryExpression	2		6897048	1					
ANR	6897519	ExpressionStatement	"fprintf ( out , ""/MediaBox [0 0 %d %d]\\n"" , ( int ) ceil ( jpx -> width * scale ) , ( int ) ceil ( jpx -> height * scale ) )"	305:8:8524:8658	6897048	38	True				
ANR	6897520	CallExpression	"fprintf ( out , ""/MediaBox [0 0 %d %d]\\n"" , ( int ) ceil ( jpx -> width * scale ) , ( int ) ceil ( jpx -> height * scale ) )"		6897048	0					
ANR	6897521	Callee	fprintf		6897048	0					
ANR	6897522	Identifier	fprintf		6897048	0					
ANR	6897523	ArgumentList	out		6897048	1					
ANR	6897524	Argument	out		6897048	0					
ANR	6897525	Identifier	out		6897048	0					
ANR	6897526	Argument	"""/MediaBox [0 0 %d %d]\\n"""		6897048	1					
ANR	6897527	PrimaryExpression	"""/MediaBox [0 0 %d %d]\\n"""		6897048	0					
ANR	6897528	Argument	( int ) ceil ( jpx -> width * scale )		6897048	2					
ANR	6897529	CastExpression	( int ) ceil ( jpx -> width * scale )		6897048	0					
ANR	6897530	CastTarget	int		6897048	0					
ANR	6897531	CallExpression	ceil ( jpx -> width * scale )		6897048	1					
ANR	6897532	Callee	ceil		6897048	0					
ANR	6897533	Identifier	ceil		6897048	0					
ANR	6897534	ArgumentList	jpx -> width * scale		6897048	1					
ANR	6897535	Argument	jpx -> width * scale		6897048	0					
ANR	6897536	MultiplicativeExpression	jpx -> width * scale		6897048	0		*			
ANR	6897537	PtrMemberAccess	jpx -> width		6897048	0					
ANR	6897538	Identifier	jpx		6897048	0					
ANR	6897539	Identifier	width		6897048	1					
ANR	6897540	Identifier	scale		6897048	1					
ANR	6897541	Argument	( int ) ceil ( jpx -> height * scale )		6897048	3					
ANR	6897542	CastExpression	( int ) ceil ( jpx -> height * scale )		6897048	0					
ANR	6897543	CastTarget	int		6897048	0					
ANR	6897544	CallExpression	ceil ( jpx -> height * scale )		6897048	1					
ANR	6897545	Callee	ceil		6897048	0					
ANR	6897546	Identifier	ceil		6897048	0					
ANR	6897547	ArgumentList	jpx -> height * scale		6897048	1					
ANR	6897548	Argument	jpx -> height * scale		6897048	0					
ANR	6897549	MultiplicativeExpression	jpx -> height * scale		6897048	0		*			
ANR	6897550	PtrMemberAccess	jpx -> height		6897048	0					
ANR	6897551	Identifier	jpx		6897048	0					
ANR	6897552	Identifier	height		6897048	1					
ANR	6897553	Identifier	scale		6897048	1					
ANR	6897554	ExpressionStatement	"fprintf ( out , ""/Contents %d 0 R\\n"" , nxref - 1 )"	308:8:8668:8711	6897048	39	True				
ANR	6897555	CallExpression	"fprintf ( out , ""/Contents %d 0 R\\n"" , nxref - 1 )"		6897048	0					
ANR	6897556	Callee	fprintf		6897048	0					
ANR	6897557	Identifier	fprintf		6897048	0					
ANR	6897558	ArgumentList	out		6897048	1					
ANR	6897559	Argument	out		6897048	0					
ANR	6897560	Identifier	out		6897048	0					
ANR	6897561	Argument	"""/Contents %d 0 R\\n"""		6897048	1					
ANR	6897562	PrimaryExpression	"""/Contents %d 0 R\\n"""		6897048	0					
ANR	6897563	Argument	nxref - 1		6897048	2					
ANR	6897564	AdditiveExpression	nxref - 1		6897048	0		-			
ANR	6897565	Identifier	nxref		6897048	0					
ANR	6897566	PrimaryExpression	1		6897048	1					
ANR	6897567	ExpressionStatement	"fprintf ( out , "">>\\n"" )"	309:8:8721:8741	6897048	40	True				
ANR	6897568	CallExpression	"fprintf ( out , "">>\\n"" )"		6897048	0					
ANR	6897569	Callee	fprintf		6897048	0					
ANR	6897570	Identifier	fprintf		6897048	0					
ANR	6897571	ArgumentList	out		6897048	1					
ANR	6897572	Argument	out		6897048	0					
ANR	6897573	Identifier	out		6897048	0					
ANR	6897574	Argument	""">>\\n"""		6897048	1					
ANR	6897575	PrimaryExpression	""">>\\n"""		6897048	0					
ANR	6897576	ExpressionStatement	"fprintf ( out , ""endobj\\n"" )"	310:8:8751:8775	6897048	41	True				
ANR	6897577	CallExpression	"fprintf ( out , ""endobj\\n"" )"		6897048	0					
ANR	6897578	Callee	fprintf		6897048	0					
ANR	6897579	Identifier	fprintf		6897048	0					
ANR	6897580	ArgumentList	out		6897048	1					
ANR	6897581	Argument	out		6897048	0					
ANR	6897582	Identifier	out		6897048	0					
ANR	6897583	Argument	"""endobj\\n"""		6897048	1					
ANR	6897584	PrimaryExpression	"""endobj\\n"""		6897048	0					
ANR	6897585	ExpressionStatement	"fprintf ( out , ""\\n"" )"	311:8:8785:8803	6897048	42	True				
ANR	6897586	CallExpression	"fprintf ( out , ""\\n"" )"		6897048	0					
ANR	6897587	Callee	fprintf		6897048	0					
ANR	6897588	Identifier	fprintf		6897048	0					
ANR	6897589	ArgumentList	out		6897048	1					
ANR	6897590	Argument	out		6897048	0					
ANR	6897591	Identifier	out		6897048	0					
ANR	6897592	Argument	"""\\n"""		6897048	1					
ANR	6897593	PrimaryExpression	"""\\n"""		6897048	0					
ANR	6897594	ReturnStatement	return nxref ;	313:8:8814:8826	6897048	43	True				
ANR	6897595	Identifier	nxref		6897048	0					
ANR	6897596	ReturnType	static int		6897048	1					
ANR	6897597	Identifier	jpx_pdf		6897048	2					
ANR	6897598	ParameterList	"imagedata * jpx , FILE * out"		6897048	3					
ANR	6897599	Parameter	imagedata * jpx	247:19:6518:6532	6897048	0	True				
ANR	6897600	ParameterType	imagedata *		6897048	0					
ANR	6897601	Identifier	jpx		6897048	1					
ANR	6897602	Parameter	FILE * out	247:36:6535:6544	6897048	1	True				
ANR	6897603	ParameterType	FILE *		6897048	0					
ANR	6897604	Identifier	out		6897048	1					
ANR	6897605	CFGEntryNode	ENTRY		6897048		True				
ANR	6897606	CFGExitNode	EXIT		6897048		True				
ANR	6897607	Symbol	ftell		6897048						
ANR	6897608	Symbol	scale		6897048						
ANR	6897609	Symbol	jpx -> width		6897048						
ANR	6897610	Symbol	jpx -> numcmpts		6897048						
ANR	6897611	Symbol	out		6897048						
ANR	6897612	Symbol	nxref		6897048						
ANR	6897613	Symbol	strlen		6897048						
ANR	6897614	Symbol	jpx_read_imagedata		6897048						
ANR	6897615	Symbol	* jpx		6897048						
ANR	6897616	Symbol	jpx -> filesize		6897048						
ANR	6897617	Symbol	SEEK_SET		6897048						
ANR	6897618	Symbol	fopen		6897048						
ANR	6897619	Symbol	NULL		6897048						
ANR	6897620	Symbol	xref		6897048						
ANR	6897621	Symbol	jpx -> height		6897048						
ANR	6897622	Symbol	in		6897048						
ANR	6897623	Symbol	jpx -> filename		6897048						
ANR	6897624	Symbol	ceil		6897048						
ANR	6897625	Symbol	stderr		6897048						
ANR	6897626	Symbol	jpx -> dpi		6897048						
ANR	6897627	Symbol	n		6897048						
ANR	6897628	Symbol	fread		6897048						
ANR	6897629	Symbol	SEEK_END		6897048						
ANR	6897630	Symbol	buf		6897048						
ANR	6897631	Symbol	jpx		6897048						
ANR	6897632	Symbol	* xref		6897048						
ANR	6897633	Symbol	jpx -> depth		6897048						
ANR	6897634	Function	main	316:0:8831:10435							
ANR	6897635	FunctionDef	"main (int argc , char * * argv)"		6897634	0					
ANR	6897636	CompoundStatement		317:0:8863:10435	6897634	0					
ANR	6897637	IdentifierDeclStatement	imagedata image ;	318:8:8873:8888	6897634	0	True				
ANR	6897638	IdentifierDecl	image		6897634	0					
ANR	6897639	IdentifierDeclType	imagedata		6897634	0					
ANR	6897640	Identifier	image		6897634	1					
ANR	6897641	IdentifierDeclStatement	FILE * outfile ;	319:8:8898:8911	6897634	1	True				
ANR	6897642	IdentifierDecl	* outfile		6897634	0					
ANR	6897643	IdentifierDeclType	FILE *		6897634	0					
ANR	6897644	Identifier	outfile		6897634	1					
ANR	6897645	IdentifierDeclStatement	int i ;	320:8:8921:8926	6897634	2	True				
ANR	6897646	IdentifierDecl	i		6897634	0					
ANR	6897647	IdentifierDeclType	int		6897634	0					
ANR	6897648	Identifier	i		6897634	1					
ANR	6897649	IdentifierDeclStatement	int startxref ;	321:8:8936:8949	6897634	3	True				
ANR	6897650	IdentifierDecl	startxref		6897634	0					
ANR	6897651	IdentifierDeclType	int		6897634	0					
ANR	6897652	Identifier	startxref		6897634	1					
ANR	6897653	ExpressionStatement	image . filename = NULL	323:8:8960:8981	6897634	4	True				
ANR	6897654	AssignmentExpression	image . filename = NULL		6897634	0		=			
ANR	6897655	MemberAccess	image . filename		6897634	0					
ANR	6897656	Identifier	image		6897634	0					
ANR	6897657	Identifier	filename		6897634	1					
ANR	6897658	Identifier	NULL		6897634	1					
ANR	6897659	ExpressionStatement	"outfile = fopen ( ""out.pdf"" , ""w"" )"	325:8:8992:9023	6897634	5	True				
ANR	6897660	AssignmentExpression	"outfile = fopen ( ""out.pdf"" , ""w"" )"		6897634	0		=			
ANR	6897661	Identifier	outfile		6897634	0					
ANR	6897662	CallExpression	"fopen ( ""out.pdf"" , ""w"" )"		6897634	1					
ANR	6897663	Callee	fopen		6897634	0					
ANR	6897664	Identifier	fopen		6897634	0					
ANR	6897665	ArgumentList	"""out.pdf"""		6897634	1					
ANR	6897666	Argument	"""out.pdf"""		6897634	0					
ANR	6897667	PrimaryExpression	"""out.pdf"""		6897634	0					
ANR	6897668	Argument	"""w"""		6897634	1					
ANR	6897669	PrimaryExpression	"""w"""		6897634	0					
ANR	6897670	ExpressionStatement	"fprintf ( outfile , ""%%PDF-1.5\\n\\n"" )"	327:8:9034:9067	6897634	6	True				
ANR	6897671	CallExpression	"fprintf ( outfile , ""%%PDF-1.5\\n\\n"" )"		6897634	0					
ANR	6897672	Callee	fprintf		6897634	0					
ANR	6897673	Identifier	fprintf		6897634	0					
ANR	6897674	ArgumentList	outfile		6897634	1					
ANR	6897675	Argument	outfile		6897634	0					
ANR	6897676	Identifier	outfile		6897634	0					
ANR	6897677	Argument	"""%%PDF-1.5\\n\\n"""		6897634	1					
ANR	6897678	PrimaryExpression	"""%%PDF-1.5\\n\\n"""		6897634	0					
ANR	6897679	ExpressionStatement	xref [ nxref ++ ] = ftell ( outfile )	329:8:9078:9108	6897634	7	True				
ANR	6897680	AssignmentExpression	xref [ nxref ++ ] = ftell ( outfile )		6897634	0		=			
ANR	6897681	ArrayIndexing	xref [ nxref ++ ]		6897634	0					
ANR	6897682	Identifier	xref		6897634	0					
ANR	6897683	PostIncDecOperationExpression	nxref ++		6897634	1					
ANR	6897684	Identifier	nxref		6897634	0					
ANR	6897685	IncDec	++		6897634	1					
ANR	6897686	CallExpression	ftell ( outfile )		6897634	1					
ANR	6897687	Callee	ftell		6897634	0					
ANR	6897688	Identifier	ftell		6897634	0					
ANR	6897689	ArgumentList	outfile		6897634	1					
ANR	6897690	Argument	outfile		6897634	0					
ANR	6897691	Identifier	outfile		6897634	0					
ANR	6897692	ExpressionStatement	"fprintf ( outfile , ""1 0 obj\\n"" )"	330:8:9118:9147	6897634	8	True				
ANR	6897693	CallExpression	"fprintf ( outfile , ""1 0 obj\\n"" )"		6897634	0					
ANR	6897694	Callee	fprintf		6897634	0					
ANR	6897695	Identifier	fprintf		6897634	0					
ANR	6897696	ArgumentList	outfile		6897634	1					
ANR	6897697	Argument	outfile		6897634	0					
ANR	6897698	Identifier	outfile		6897634	0					
ANR	6897699	Argument	"""1 0 obj\\n"""		6897634	1					
ANR	6897700	PrimaryExpression	"""1 0 obj\\n"""		6897634	0					
ANR	6897701	ExpressionStatement	"fprintf ( outfile , ""<</Type/Catalog/Pages 3 0 R>>\\n"" )"	331:8:9157:9208	6897634	9	True				
ANR	6897702	CallExpression	"fprintf ( outfile , ""<</Type/Catalog/Pages 3 0 R>>\\n"" )"		6897634	0					
ANR	6897703	Callee	fprintf		6897634	0					
ANR	6897704	Identifier	fprintf		6897634	0					
ANR	6897705	ArgumentList	outfile		6897634	1					
ANR	6897706	Argument	outfile		6897634	0					
ANR	6897707	Identifier	outfile		6897634	0					
ANR	6897708	Argument	"""<</Type/Catalog/Pages 3 0 R>>\\n"""		6897634	1					
ANR	6897709	PrimaryExpression	"""<</Type/Catalog/Pages 3 0 R>>\\n"""		6897634	0					
ANR	6897710	ExpressionStatement	"fprintf ( outfile , ""endobj\\n\\n"" )"	332:8:9218:9248	6897634	10	True				
ANR	6897711	CallExpression	"fprintf ( outfile , ""endobj\\n\\n"" )"		6897634	0					
ANR	6897712	Callee	fprintf		6897634	0					
ANR	6897713	Identifier	fprintf		6897634	0					
ANR	6897714	ArgumentList	outfile		6897634	1					
ANR	6897715	Argument	outfile		6897634	0					
ANR	6897716	Identifier	outfile		6897634	0					
ANR	6897717	Argument	"""endobj\\n\\n"""		6897634	1					
ANR	6897718	PrimaryExpression	"""endobj\\n\\n"""		6897634	0					
ANR	6897719	ExpressionStatement	xref [ nxref ++ ] = ftell ( outfile )	334:8:9259:9289	6897634	11	True				
ANR	6897720	AssignmentExpression	xref [ nxref ++ ] = ftell ( outfile )		6897634	0		=			
ANR	6897721	ArrayIndexing	xref [ nxref ++ ]		6897634	0					
ANR	6897722	Identifier	xref		6897634	0					
ANR	6897723	PostIncDecOperationExpression	nxref ++		6897634	1					
ANR	6897724	Identifier	nxref		6897634	0					
ANR	6897725	IncDec	++		6897634	1					
ANR	6897726	CallExpression	ftell ( outfile )		6897634	1					
ANR	6897727	Callee	ftell		6897634	0					
ANR	6897728	Identifier	ftell		6897634	0					
ANR	6897729	ArgumentList	outfile		6897634	1					
ANR	6897730	Argument	outfile		6897634	0					
ANR	6897731	Identifier	outfile		6897634	0					
ANR	6897732	ExpressionStatement	"fprintf ( outfile , ""2 0 obj\\n"" )"	335:8:9299:9328	6897634	12	True				
ANR	6897733	CallExpression	"fprintf ( outfile , ""2 0 obj\\n"" )"		6897634	0					
ANR	6897734	Callee	fprintf		6897634	0					
ANR	6897735	Identifier	fprintf		6897634	0					
ANR	6897736	ArgumentList	outfile		6897634	1					
ANR	6897737	Argument	outfile		6897634	0					
ANR	6897738	Identifier	outfile		6897634	0					
ANR	6897739	Argument	"""2 0 obj\\n"""		6897634	1					
ANR	6897740	PrimaryExpression	"""2 0 obj\\n"""		6897634	0					
ANR	6897741	ExpressionStatement	"fprintf ( outfile , ""<</Creator(jpxtopdf)/Title(%s)>>\\n"" , getenv ( ""TITLE"" ) )"	336:8:9338:9409	6897634	13	True				
ANR	6897742	CallExpression	"fprintf ( outfile , ""<</Creator(jpxtopdf)/Title(%s)>>\\n"" , getenv ( ""TITLE"" ) )"		6897634	0					
ANR	6897743	Callee	fprintf		6897634	0					
ANR	6897744	Identifier	fprintf		6897634	0					
ANR	6897745	ArgumentList	outfile		6897634	1					
ANR	6897746	Argument	outfile		6897634	0					
ANR	6897747	Identifier	outfile		6897634	0					
ANR	6897748	Argument	"""<</Creator(jpxtopdf)/Title(%s)>>\\n"""		6897634	1					
ANR	6897749	PrimaryExpression	"""<</Creator(jpxtopdf)/Title(%s)>>\\n"""		6897634	0					
ANR	6897750	Argument	"getenv ( ""TITLE"" )"		6897634	2					
ANR	6897751	CallExpression	"getenv ( ""TITLE"" )"		6897634	0					
ANR	6897752	Callee	getenv		6897634	0					
ANR	6897753	Identifier	getenv		6897634	0					
ANR	6897754	ArgumentList	"""TITLE"""		6897634	1					
ANR	6897755	Argument	"""TITLE"""		6897634	0					
ANR	6897756	PrimaryExpression	"""TITLE"""		6897634	0					
ANR	6897757	ExpressionStatement	"fprintf ( outfile , ""endobj\\n\\n"" )"	337:8:9419:9449	6897634	14	True				
ANR	6897758	CallExpression	"fprintf ( outfile , ""endobj\\n\\n"" )"		6897634	0					
ANR	6897759	Callee	fprintf		6897634	0					
ANR	6897760	Identifier	fprintf		6897634	0					
ANR	6897761	ArgumentList	outfile		6897634	1					
ANR	6897762	Argument	outfile		6897634	0					
ANR	6897763	Identifier	outfile		6897634	0					
ANR	6897764	Argument	"""endobj\\n\\n"""		6897634	1					
ANR	6897765	PrimaryExpression	"""endobj\\n\\n"""		6897634	0					
ANR	6897766	ExpressionStatement	nxref ++	340:8:9507:9514	6897634	15	True				
ANR	6897767	PostIncDecOperationExpression	nxref ++		6897634	0					
ANR	6897768	Identifier	nxref		6897634	0					
ANR	6897769	IncDec	++		6897634	1					
ANR	6897770	ForStatement	for ( i = 1 ; i < argc ; i ++ )		6897634	16					
ANR	6897771	ForInit	i = 1 ;	342:13:9530:9535	6897634	0	True				
ANR	6897772	AssignmentExpression	i = 1		6897634	0		=			
ANR	6897773	Identifier	i		6897634	0					
ANR	6897774	PrimaryExpression	1		6897634	1					
ANR	6897775	Condition	i < argc	342:20:9537:9544	6897634	1	True				
ANR	6897776	RelationalExpression	i < argc		6897634	0		<			
ANR	6897777	Identifier	i		6897634	0					
ANR	6897778	Identifier	argc		6897634	1					
ANR	6897779	PostIncDecOperationExpression	i ++	342:30:9547:9549	6897634	2	True				
ANR	6897780	Identifier	i		6897634	0					
ANR	6897781	IncDec	++		6897634	1					
ANR	6897782	CompoundStatement		26:35:688:688	6897634	3					
ANR	6897783	ExpressionStatement	image . filename = argv [ i ]	343:10:9564:9588	6897634	0	True				
ANR	6897784	AssignmentExpression	image . filename = argv [ i ]		6897634	0		=			
ANR	6897785	MemberAccess	image . filename		6897634	0					
ANR	6897786	Identifier	image		6897634	0					
ANR	6897787	Identifier	filename		6897634	1					
ANR	6897788	ArrayIndexing	argv [ i ]		6897634	1					
ANR	6897789	Identifier	argv		6897634	0					
ANR	6897790	Identifier	i		6897634	1					
ANR	6897791	ExpressionStatement	"pages [ npages ++ ] = jpx_pdf ( & image , outfile )"	346:10:9661:9703	6897634	1	True				
ANR	6897792	AssignmentExpression	"pages [ npages ++ ] = jpx_pdf ( & image , outfile )"		6897634	0		=			
ANR	6897793	ArrayIndexing	pages [ npages ++ ]		6897634	0					
ANR	6897794	Identifier	pages		6897634	0					
ANR	6897795	PostIncDecOperationExpression	npages ++		6897634	1					
ANR	6897796	Identifier	npages		6897634	0					
ANR	6897797	IncDec	++		6897634	1					
ANR	6897798	CallExpression	"jpx_pdf ( & image , outfile )"		6897634	1					
ANR	6897799	Callee	jpx_pdf		6897634	0					
ANR	6897800	Identifier	jpx_pdf		6897634	0					
ANR	6897801	ArgumentList	& image		6897634	1					
ANR	6897802	Argument	& image		6897634	0					
ANR	6897803	UnaryOperationExpression	& image		6897634	0					
ANR	6897804	UnaryOperator	&		6897634	0					
ANR	6897805	Identifier	image		6897634	1					
ANR	6897806	Argument	outfile		6897634	1					
ANR	6897807	Identifier	outfile		6897634	0					
ANR	6897808	ExpressionStatement	xref [ 2 ] = ftell ( outfile )	349:8:9724:9748	6897634	17	True				
ANR	6897809	AssignmentExpression	xref [ 2 ] = ftell ( outfile )		6897634	0		=			
ANR	6897810	ArrayIndexing	xref [ 2 ]		6897634	0					
ANR	6897811	Identifier	xref		6897634	0					
ANR	6897812	PrimaryExpression	2		6897634	1					
ANR	6897813	CallExpression	ftell ( outfile )		6897634	1					
ANR	6897814	Callee	ftell		6897634	0					
ANR	6897815	Identifier	ftell		6897634	0					
ANR	6897816	ArgumentList	outfile		6897634	1					
ANR	6897817	Argument	outfile		6897634	0					
ANR	6897818	Identifier	outfile		6897634	0					
ANR	6897819	ExpressionStatement	"fprintf ( outfile , ""3 0 obj\\n"" )"	350:8:9758:9787	6897634	18	True				
ANR	6897820	CallExpression	"fprintf ( outfile , ""3 0 obj\\n"" )"		6897634	0					
ANR	6897821	Callee	fprintf		6897634	0					
ANR	6897822	Identifier	fprintf		6897634	0					
ANR	6897823	ArgumentList	outfile		6897634	1					
ANR	6897824	Argument	outfile		6897634	0					
ANR	6897825	Identifier	outfile		6897634	0					
ANR	6897826	Argument	"""3 0 obj\\n"""		6897634	1					
ANR	6897827	PrimaryExpression	"""3 0 obj\\n"""		6897634	0					
ANR	6897828	ExpressionStatement	"fprintf ( outfile , ""<</Type/Pages/Count %d/Kids[\\n"" , npages )"	351:8:9797:9855	6897634	19	True				
ANR	6897829	CallExpression	"fprintf ( outfile , ""<</Type/Pages/Count %d/Kids[\\n"" , npages )"		6897634	0					
ANR	6897830	Callee	fprintf		6897634	0					
ANR	6897831	Identifier	fprintf		6897634	0					
ANR	6897832	ArgumentList	outfile		6897634	1					
ANR	6897833	Argument	outfile		6897634	0					
ANR	6897834	Identifier	outfile		6897634	0					
ANR	6897835	Argument	"""<</Type/Pages/Count %d/Kids[\\n"""		6897634	1					
ANR	6897836	PrimaryExpression	"""<</Type/Pages/Count %d/Kids[\\n"""		6897634	0					
ANR	6897837	Argument	npages		6897634	2					
ANR	6897838	Identifier	npages		6897634	0					
ANR	6897839	ForStatement	for ( i = 0 ; i < npages ; i ++ )		6897634	20					
ANR	6897840	ForInit	i = 0 ;	352:13:9870:9875	6897634	0	True				
ANR	6897841	AssignmentExpression	i = 0		6897634	0		=			
ANR	6897842	Identifier	i		6897634	0					
ANR	6897843	PrimaryExpression	0		6897634	1					
ANR	6897844	Condition	i < npages	352:20:9877:9886	6897634	1	True				
ANR	6897845	RelationalExpression	i < npages		6897634	0		<			
ANR	6897846	Identifier	i		6897634	0					
ANR	6897847	Identifier	npages		6897634	1					
ANR	6897848	PostIncDecOperationExpression	i ++	352:32:9889:9891	6897634	2	True				
ANR	6897849	Identifier	i		6897634	0					
ANR	6897850	IncDec	++		6897634	1					
ANR	6897851	ExpressionStatement	"fprintf ( outfile , ""%d 0 R\\n"" , pages [ i ] )"	353:16:9910:9948	6897634	3	True				
ANR	6897852	CallExpression	"fprintf ( outfile , ""%d 0 R\\n"" , pages [ i ] )"		6897634	0					
ANR	6897853	Callee	fprintf		6897634	0					
ANR	6897854	Identifier	fprintf		6897634	0					
ANR	6897855	ArgumentList	outfile		6897634	1					
ANR	6897856	Argument	outfile		6897634	0					
ANR	6897857	Identifier	outfile		6897634	0					
ANR	6897858	Argument	"""%d 0 R\\n"""		6897634	1					
ANR	6897859	PrimaryExpression	"""%d 0 R\\n"""		6897634	0					
ANR	6897860	Argument	pages [ i ]		6897634	2					
ANR	6897861	ArrayIndexing	pages [ i ]		6897634	0					
ANR	6897862	Identifier	pages		6897634	0					
ANR	6897863	Identifier	i		6897634	1					
ANR	6897864	ExpressionStatement	"fprintf ( outfile , ""]>>\\nendobj\\n\\n"" )"	354:8:9958:9993	6897634	21	True				
ANR	6897865	CallExpression	"fprintf ( outfile , ""]>>\\nendobj\\n\\n"" )"		6897634	0					
ANR	6897866	Callee	fprintf		6897634	0					
ANR	6897867	Identifier	fprintf		6897634	0					
ANR	6897868	ArgumentList	outfile		6897634	1					
ANR	6897869	Argument	outfile		6897634	0					
ANR	6897870	Identifier	outfile		6897634	0					
ANR	6897871	Argument	"""]>>\\nendobj\\n\\n"""		6897634	1					
ANR	6897872	PrimaryExpression	"""]>>\\nendobj\\n\\n"""		6897634	0					
ANR	6897873	ExpressionStatement	startxref = ftell ( outfile )	356:8:10004:10030	6897634	22	True				
ANR	6897874	AssignmentExpression	startxref = ftell ( outfile )		6897634	0		=			
ANR	6897875	Identifier	startxref		6897634	0					
ANR	6897876	CallExpression	ftell ( outfile )		6897634	1					
ANR	6897877	Callee	ftell		6897634	0					
ANR	6897878	Identifier	ftell		6897634	0					
ANR	6897879	ArgumentList	outfile		6897634	1					
ANR	6897880	Argument	outfile		6897634	0					
ANR	6897881	Identifier	outfile		6897634	0					
ANR	6897882	ExpressionStatement	"fprintf ( outfile , ""xref\\n0 %d\\n"" , nxref + 1 )"	357:8:10040:10083	6897634	23	True				
ANR	6897883	CallExpression	"fprintf ( outfile , ""xref\\n0 %d\\n"" , nxref + 1 )"		6897634	0					
ANR	6897884	Callee	fprintf		6897634	0					
ANR	6897885	Identifier	fprintf		6897634	0					
ANR	6897886	ArgumentList	outfile		6897634	1					
ANR	6897887	Argument	outfile		6897634	0					
ANR	6897888	Identifier	outfile		6897634	0					
ANR	6897889	Argument	"""xref\\n0 %d\\n"""		6897634	1					
ANR	6897890	PrimaryExpression	"""xref\\n0 %d\\n"""		6897634	0					
ANR	6897891	Argument	nxref + 1		6897634	2					
ANR	6897892	AdditiveExpression	nxref + 1		6897634	0		+			
ANR	6897893	Identifier	nxref		6897634	0					
ANR	6897894	PrimaryExpression	1		6897634	1					
ANR	6897895	ExpressionStatement	"fprintf ( outfile , ""0000000000 65535 f \\n"" )"	358:8:10093:10134	6897634	24	True				
ANR	6897896	CallExpression	"fprintf ( outfile , ""0000000000 65535 f \\n"" )"		6897634	0					
ANR	6897897	Callee	fprintf		6897634	0					
ANR	6897898	Identifier	fprintf		6897634	0					
ANR	6897899	ArgumentList	outfile		6897634	1					
ANR	6897900	Argument	outfile		6897634	0					
ANR	6897901	Identifier	outfile		6897634	0					
ANR	6897902	Argument	"""0000000000 65535 f \\n"""		6897634	1					
ANR	6897903	PrimaryExpression	"""0000000000 65535 f \\n"""		6897634	0					
ANR	6897904	ForStatement	for ( i = 0 ; i < nxref ; i ++ )		6897634	25					
ANR	6897905	ForInit	i = 0 ;	359:13:10149:10154	6897634	0	True				
ANR	6897906	AssignmentExpression	i = 0		6897634	0		=			
ANR	6897907	Identifier	i		6897634	0					
ANR	6897908	PrimaryExpression	0		6897634	1					
ANR	6897909	Condition	i < nxref	359:20:10156:10164	6897634	1	True				
ANR	6897910	RelationalExpression	i < nxref		6897634	0		<			
ANR	6897911	Identifier	i		6897634	0					
ANR	6897912	Identifier	nxref		6897634	1					
ANR	6897913	PostIncDecOperationExpression	i ++	359:31:10167:10169	6897634	2	True				
ANR	6897914	Identifier	i		6897634	0					
ANR	6897915	IncDec	++		6897634	1					
ANR	6897916	ExpressionStatement	"fprintf ( outfile , ""%010d 00000 n \\n"" , xref [ i ] )"	360:16:10188:10233	6897634	3	True				
ANR	6897917	CallExpression	"fprintf ( outfile , ""%010d 00000 n \\n"" , xref [ i ] )"		6897634	0					
ANR	6897918	Callee	fprintf		6897634	0					
ANR	6897919	Identifier	fprintf		6897634	0					
ANR	6897920	ArgumentList	outfile		6897634	1					
ANR	6897921	Argument	outfile		6897634	0					
ANR	6897922	Identifier	outfile		6897634	0					
ANR	6897923	Argument	"""%010d 00000 n \\n"""		6897634	1					
ANR	6897924	PrimaryExpression	"""%010d 00000 n \\n"""		6897634	0					
ANR	6897925	Argument	xref [ i ]		6897634	2					
ANR	6897926	ArrayIndexing	xref [ i ]		6897634	0					
ANR	6897927	Identifier	xref		6897634	0					
ANR	6897928	Identifier	i		6897634	1					
ANR	6897929	ExpressionStatement	"fprintf ( outfile , ""trailer\\n<< /Size %d /Root 1 0 R /Info 2 0 R >>\\n"" , nxref + 1 )"	361:8:10243:10323	6897634	26	True				
ANR	6897930	CallExpression	"fprintf ( outfile , ""trailer\\n<< /Size %d /Root 1 0 R /Info 2 0 R >>\\n"" , nxref + 1 )"		6897634	0					
ANR	6897931	Callee	fprintf		6897634	0					
ANR	6897932	Identifier	fprintf		6897634	0					
ANR	6897933	ArgumentList	outfile		6897634	1					
ANR	6897934	Argument	outfile		6897634	0					
ANR	6897935	Identifier	outfile		6897634	0					
ANR	6897936	Argument	"""trailer\\n<< /Size %d /Root 1 0 R /Info 2 0 R >>\\n"""		6897634	1					
ANR	6897937	PrimaryExpression	"""trailer\\n<< /Size %d /Root 1 0 R /Info 2 0 R >>\\n"""		6897634	0					
ANR	6897938	Argument	nxref + 1		6897634	2					
ANR	6897939	AdditiveExpression	nxref + 1		6897634	0		+			
ANR	6897940	Identifier	nxref		6897634	0					
ANR	6897941	PrimaryExpression	1		6897634	1					
ANR	6897942	ExpressionStatement	"fprintf ( outfile , ""startxref\\n%d\\n%%%%EOF\\n"" , startxref )"	362:8:10333:10388	6897634	27	True				
ANR	6897943	CallExpression	"fprintf ( outfile , ""startxref\\n%d\\n%%%%EOF\\n"" , startxref )"		6897634	0					
ANR	6897944	Callee	fprintf		6897634	0					
ANR	6897945	Identifier	fprintf		6897634	0					
ANR	6897946	ArgumentList	outfile		6897634	1					
ANR	6897947	Argument	outfile		6897634	0					
ANR	6897948	Identifier	outfile		6897634	0					
ANR	6897949	Argument	"""startxref\\n%d\\n%%%%EOF\\n"""		6897634	1					
ANR	6897950	PrimaryExpression	"""startxref\\n%d\\n%%%%EOF\\n"""		6897634	0					
ANR	6897951	Argument	startxref		6897634	2					
ANR	6897952	Identifier	startxref		6897634	0					
ANR	6897953	ExpressionStatement	fclose ( outfile )	364:8:10399:10414	6897634	28	True				
ANR	6897954	CallExpression	fclose ( outfile )		6897634	0					
ANR	6897955	Callee	fclose		6897634	0					
ANR	6897956	Identifier	fclose		6897634	0					
ANR	6897957	ArgumentList	outfile		6897634	1					
ANR	6897958	Argument	outfile		6897634	0					
ANR	6897959	Identifier	outfile		6897634	0					
ANR	6897960	ReturnStatement	return 0 ;	366:8:10425:10433	6897634	29	True				
ANR	6897961	PrimaryExpression	0		6897634	0					
ANR	6897962	ReturnType	int		6897634	1					
ANR	6897963	Identifier	main		6897634	2					
ANR	6897964	ParameterList	"int argc , char * * argv"		6897634	3					
ANR	6897965	Parameter	int argc	316:9:8840:8847	6897634	0	True				
ANR	6897966	ParameterType	int		6897634	0					
ANR	6897967	Identifier	argc		6897634	1					
ANR	6897968	Parameter	char * * argv	316:19:8850:8860	6897634	1	True				
ANR	6897969	ParameterType	char * *		6897634	0					
ANR	6897970	Identifier	argv		6897634	1					
ANR	6897971	CFGEntryNode	ENTRY		6897634		True				
ANR	6897972	CFGExitNode	EXIT		6897634		True				
ANR	6897973	Symbol	argc		6897634						
ANR	6897974	Symbol	image		6897634						
ANR	6897975	Symbol	fopen		6897634						
ANR	6897976	Symbol	NULL		6897634						
ANR	6897977	Symbol	xref		6897634						
ANR	6897978	Symbol	& image		6897634						
ANR	6897979	Symbol	ftell		6897634						
ANR	6897980	Symbol	outfile		6897634						
ANR	6897981	Symbol	i		6897634						
ANR	6897982	Symbol	* argv		6897634						
ANR	6897983	Symbol	argv		6897634						
ANR	6897984	Symbol	nxref		6897634						
ANR	6897985	Symbol	* i		6897634						
ANR	6897986	Symbol	pages		6897634						
ANR	6897987	Symbol	* pages		6897634						
ANR	6897988	Symbol	* xref		6897634						
ANR	6897989	Symbol	startxref		6897634						
ANR	6897990	Symbol	npages		6897634						
ANR	6897991	Symbol	image . filename		6897634						
ANR	6897992	Symbol	jpx_pdf		6897634						
ANR	6897993	Symbol	getenv		6897634						
