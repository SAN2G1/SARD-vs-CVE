command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10976420	File	data/converged/CVE-2018-16863_ghostpdl/zcharx.c								
ANR	10976421	Function	glyph_show_setup	33:0:963:1520							
ANR	10976422	FunctionDef	"glyph_show_setup (i_ctx_t * i_ctx_p , gs_glyph * pglyph)"		10976421	0					
ANR	10976423	CompoundStatement		35:0:1027:1520	10976421	0					
ANR	10976424	IdentifierDeclStatement	os_ptr op = osp ;	36:4:1033:1048	10976421	0	True				
ANR	10976425	IdentifierDecl	op = osp		10976421	0					
ANR	10976426	IdentifierDeclType	os_ptr		10976421	0					
ANR	10976427	Identifier	op		10976421	1					
ANR	10976428	AssignmentExpression	op = osp		10976421	2		=			
ANR	10976429	Identifier	osp		10976421	0					
ANR	10976430	Identifier	osp		10976421	1					
ANR	10976431	SwitchStatement	switch ( gs_currentfont ( igs ) -> FontType )		10976421	1					
ANR	10976432	Condition	gs_currentfont ( igs ) -> FontType	38:12:1063:1091	10976421	0	True				
ANR	10976433	PtrMemberAccess	gs_currentfont ( igs ) -> FontType		10976421	0					
ANR	10976434	CallExpression	gs_currentfont ( igs )		10976421	0					
ANR	10976435	Callee	gs_currentfont		10976421	0					
ANR	10976436	Identifier	gs_currentfont		10976421	0					
ANR	10976437	ArgumentList	igs		10976421	1					
ANR	10976438	Argument	igs		10976421	0					
ANR	10976439	Identifier	igs		10976421	0					
ANR	10976440	Identifier	FontType		10976421	1					
ANR	10976441	CompoundStatement		4:43:66:66	10976421	1					
ANR	10976442	Label	case ft_CID_encrypted :	39:8:1104:1125	10976421	0	True				
ANR	10976443	Identifier	ft_CID_encrypted		10976421	0					
ANR	10976444	Label	case ft_CID_user_defined :	40:8:1135:1159	10976421	1	True				
ANR	10976445	Identifier	ft_CID_user_defined		10976421	0					
ANR	10976446	Label	case ft_CID_TrueType :	41:8:1169:1189	10976421	2	True				
ANR	10976447	Identifier	ft_CID_TrueType		10976421	0					
ANR	10976448	Label	case ft_CID_bitmap :	42:8:1199:1217	10976421	3	True				
ANR	10976449	Identifier	ft_CID_bitmap		10976421	0					
ANR	10976450	ExpressionStatement	"check_int_leu ( * op , GS_MAX_GLYPH - GS_MIN_CID_GLYPH )"	43:12:1231:1282	10976421	4	True				
ANR	10976451	CallExpression	"check_int_leu ( * op , GS_MAX_GLYPH - GS_MIN_CID_GLYPH )"		10976421	0					
ANR	10976452	Callee	check_int_leu		10976421	0					
ANR	10976453	Identifier	check_int_leu		10976421	0					
ANR	10976454	ArgumentList	* op		10976421	1					
ANR	10976455	Argument	* op		10976421	0					
ANR	10976456	UnaryOperationExpression	* op		10976421	0					
ANR	10976457	UnaryOperator	*		10976421	0					
ANR	10976458	Identifier	op		10976421	1					
ANR	10976459	Argument	GS_MAX_GLYPH - GS_MIN_CID_GLYPH		10976421	1					
ANR	10976460	AdditiveExpression	GS_MAX_GLYPH - GS_MIN_CID_GLYPH		10976421	0		-			
ANR	10976461	Identifier	GS_MAX_GLYPH		10976421	0					
ANR	10976462	Identifier	GS_MIN_CID_GLYPH		10976421	1					
ANR	10976463	ExpressionStatement	* pglyph = ( gs_glyph ) op -> value . intval + GS_MIN_CID_GLYPH	44:12:1296:1352	10976421	5	True				
ANR	10976464	AssignmentExpression	* pglyph = ( gs_glyph ) op -> value . intval + GS_MIN_CID_GLYPH		10976421	0		=			
ANR	10976465	UnaryOperationExpression	* pglyph		10976421	0					
ANR	10976466	UnaryOperator	*		10976421	0					
ANR	10976467	Identifier	pglyph		10976421	1					
ANR	10976468	AdditiveExpression	( gs_glyph ) op -> value . intval + GS_MIN_CID_GLYPH		10976421	1		+			
ANR	10976469	CastExpression	( gs_glyph ) op -> value . intval		10976421	0					
ANR	10976470	CastTarget	gs_glyph		10976421	0					
ANR	10976471	MemberAccess	op -> value . intval		10976421	1					
ANR	10976472	PtrMemberAccess	op -> value		10976421	0					
ANR	10976473	Identifier	op		10976421	0					
ANR	10976474	Identifier	value		10976421	1					
ANR	10976475	Identifier	intval		10976421	1					
ANR	10976476	Identifier	GS_MIN_CID_GLYPH		10976421	1					
ANR	10976477	BreakStatement	break ;	45:12:1366:1371	10976421	6	True				
ANR	10976478	Label	default :	46:8:1381:1388	10976421	7	True				
ANR	10976479	Identifier	default		10976421	0					
ANR	10976480	ExpressionStatement	"check_type ( * op , t_name )"	47:12:1402:1425	10976421	8	True				
ANR	10976481	CallExpression	"check_type ( * op , t_name )"		10976421	0					
ANR	10976482	Callee	check_type		10976421	0					
ANR	10976483	Identifier	check_type		10976421	0					
ANR	10976484	ArgumentList	* op		10976421	1					
ANR	10976485	Argument	* op		10976421	0					
ANR	10976486	UnaryOperationExpression	* op		10976421	0					
ANR	10976487	UnaryOperator	*		10976421	0					
ANR	10976488	Identifier	op		10976421	1					
ANR	10976489	Argument	t_name		10976421	1					
ANR	10976490	Identifier	t_name		10976421	0					
ANR	10976491	ExpressionStatement	"* pglyph = name_index ( imemory , op )"	48:12:1439:1472	10976421	9	True				
ANR	10976492	AssignmentExpression	"* pglyph = name_index ( imemory , op )"		10976421	0		=			
ANR	10976493	UnaryOperationExpression	* pglyph		10976421	0					
ANR	10976494	UnaryOperator	*		10976421	0					
ANR	10976495	Identifier	pglyph		10976421	1					
ANR	10976496	CallExpression	"name_index ( imemory , op )"		10976421	1					
ANR	10976497	Callee	name_index		10976421	0					
ANR	10976498	Identifier	name_index		10976421	0					
ANR	10976499	ArgumentList	imemory		10976421	1					
ANR	10976500	Argument	imemory		10976421	0					
ANR	10976501	Identifier	imemory		10976421	0					
ANR	10976502	Argument	op		10976421	1					
ANR	10976503	Identifier	op		10976421	0					
ANR	10976504	ReturnStatement	return op_show_enum_setup ( i_ctx_p ) ;	50:4:1484:1518	10976421	2	True				
ANR	10976505	CallExpression	op_show_enum_setup ( i_ctx_p )		10976421	0					
ANR	10976506	Callee	op_show_enum_setup		10976421	0					
ANR	10976507	Identifier	op_show_enum_setup		10976421	0					
ANR	10976508	ArgumentList	i_ctx_p		10976421	1					
ANR	10976509	Argument	i_ctx_p		10976421	0					
ANR	10976510	Identifier	i_ctx_p		10976421	0					
ANR	10976511	ReturnType	static int		10976421	1					
ANR	10976512	Identifier	glyph_show_setup		10976421	2					
ANR	10976513	ParameterList	"i_ctx_t * i_ctx_p , gs_glyph * pglyph"		10976421	3					
ANR	10976514	Parameter	i_ctx_t * i_ctx_p	34:17:991:1006	10976421	0	True				
ANR	10976515	ParameterType	i_ctx_t *		10976421	0					
ANR	10976516	Identifier	i_ctx_p		10976421	1					
ANR	10976517	Parameter	gs_glyph * pglyph	34:35:1009:1024	10976421	1	True				
ANR	10976518	ParameterType	gs_glyph *		10976421	0					
ANR	10976519	Identifier	pglyph		10976421	1					
ANR	10976520	CFGEntryNode	ENTRY		10976421		True				
ANR	10976521	CFGExitNode	EXIT		10976421		True				
ANR	10976522	Symbol	pglyph		10976421						
ANR	10976523	Symbol	op		10976421						
ANR	10976524	Symbol	GS_MAX_GLYPH		10976421						
ANR	10976525	Symbol	* op		10976421						
ANR	10976526	Symbol	gs_currentfont ( igs ) -> FontType		10976421						
ANR	10976527	Symbol	* pglyph		10976421						
ANR	10976528	Symbol	osp		10976421						
ANR	10976529	Symbol	op_show_enum_setup		10976421						
ANR	10976530	Symbol	igs		10976421						
ANR	10976531	Symbol	* gs_currentfont		10976421						
ANR	10976532	Symbol	i_ctx_p		10976421						
ANR	10976533	Symbol	op -> value		10976421						
ANR	10976534	Symbol	t_name		10976421						
ANR	10976535	Symbol	gs_currentfont		10976421						
ANR	10976536	Symbol	name_index		10976421						
ANR	10976537	Symbol	imemory		10976421						
ANR	10976538	Symbol	op -> value . intval		10976421						
ANR	10976539	Symbol	GS_MIN_CID_GLYPH		10976421						
ANR	10976540	Function	zglyphshow	54:0:1552:2054							
ANR	10976541	FunctionDef	zglyphshow (i_ctx_t * i_ctx_p)		10976540	0					
ANR	10976542	CompoundStatement		56:0:1592:2054	10976540	0					
ANR	10976543	IdentifierDeclStatement	gs_glyph glyph ;	57:4:1598:1612	10976540	0	True				
ANR	10976544	IdentifierDecl	glyph		10976540	0					
ANR	10976545	IdentifierDeclType	gs_glyph		10976540	0					
ANR	10976546	Identifier	glyph		10976540	1					
ANR	10976547	IdentifierDeclStatement	gs_text_enum_t * penum ;	58:4:1618:1639	10976540	1	True				
ANR	10976548	IdentifierDecl	* penum		10976540	0					
ANR	10976549	IdentifierDeclType	gs_text_enum_t *		10976540	0					
ANR	10976550	Identifier	penum		10976540	1					
ANR	10976551	IdentifierDeclStatement	int code ;	59:4:1645:1653	10976540	2	True				
ANR	10976552	IdentifierDecl	code		10976540	0					
ANR	10976553	IdentifierDeclType	int		10976540	0					
ANR	10976554	Identifier	code		10976540	1					
ANR	10976555	IfStatement	"if ( ( code = glyph_show_setup ( i_ctx_p , & glyph ) ) != 0 || ( code = gs_glyphshow_begin ( igs , glyph , imemory_local , & penum ) ) < 0 )"		10976540	3					
ANR	10976556	Condition	"( code = glyph_show_setup ( i_ctx_p , & glyph ) ) != 0 || ( code = gs_glyphshow_begin ( igs , glyph , imemory_local , & penum ) ) < 0"	61:8:1664:1788	10976540	0	True				
ANR	10976557	OrExpression	"( code = glyph_show_setup ( i_ctx_p , & glyph ) ) != 0 || ( code = gs_glyphshow_begin ( igs , glyph , imemory_local , & penum ) ) < 0"		10976540	0		||			
ANR	10976558	EqualityExpression	"( code = glyph_show_setup ( i_ctx_p , & glyph ) ) != 0"		10976540	0		!=			
ANR	10976559	AssignmentExpression	"code = glyph_show_setup ( i_ctx_p , & glyph )"		10976540	0		=			
ANR	10976560	Identifier	code		10976540	0					
ANR	10976561	CallExpression	"glyph_show_setup ( i_ctx_p , & glyph )"		10976540	1					
ANR	10976562	Callee	glyph_show_setup		10976540	0					
ANR	10976563	Identifier	glyph_show_setup		10976540	0					
ANR	10976564	ArgumentList	i_ctx_p		10976540	1					
ANR	10976565	Argument	i_ctx_p		10976540	0					
ANR	10976566	Identifier	i_ctx_p		10976540	0					
ANR	10976567	Argument	& glyph		10976540	1					
ANR	10976568	UnaryOperationExpression	& glyph		10976540	0					
ANR	10976569	UnaryOperator	&		10976540	0					
ANR	10976570	Identifier	glyph		10976540	1					
ANR	10976571	PrimaryExpression	0		10976540	1					
ANR	10976572	RelationalExpression	"( code = gs_glyphshow_begin ( igs , glyph , imemory_local , & penum ) ) < 0"		10976540	1		<			
ANR	10976573	AssignmentExpression	"code = gs_glyphshow_begin ( igs , glyph , imemory_local , & penum )"		10976540	0		=			
ANR	10976574	Identifier	code		10976540	0					
ANR	10976575	CallExpression	"gs_glyphshow_begin ( igs , glyph , imemory_local , & penum )"		10976540	1					
ANR	10976576	Callee	gs_glyphshow_begin		10976540	0					
ANR	10976577	Identifier	gs_glyphshow_begin		10976540	0					
ANR	10976578	ArgumentList	igs		10976540	1					
ANR	10976579	Argument	igs		10976540	0					
ANR	10976580	Identifier	igs		10976540	0					
ANR	10976581	Argument	glyph		10976540	1					
ANR	10976582	Identifier	glyph		10976540	0					
ANR	10976583	Argument	imemory_local		10976540	2					
ANR	10976584	Identifier	imemory_local		10976540	0					
ANR	10976585	Argument	& penum		10976540	3					
ANR	10976586	UnaryOperationExpression	& penum		10976540	0					
ANR	10976587	UnaryOperator	&		10976540	0					
ANR	10976588	Identifier	penum		10976540	1					
ANR	10976589	PrimaryExpression	0		10976540	1					
ANR	10976590	ReturnStatement	return code ;	63:8:1799:1810	10976540	1	True				
ANR	10976591	Identifier	code		10976540	0					
ANR	10976592	ExpressionStatement	* ( op_proc_t * ) & penum -> enum_client_data = zglyphshow	64:4:1816:1867	10976540	4	True				
ANR	10976593	AssignmentExpression	* ( op_proc_t * ) & penum -> enum_client_data = zglyphshow		10976540	0		=			
ANR	10976594	UnaryOperationExpression	* ( op_proc_t * ) & penum -> enum_client_data		10976540	0					
ANR	10976595	UnaryOperator	*		10976540	0					
ANR	10976596	CastExpression	( op_proc_t * ) & penum -> enum_client_data		10976540	1					
ANR	10976597	CastTarget	op_proc_t *		10976540	0					
ANR	10976598	UnaryOperationExpression	& penum -> enum_client_data		10976540	1					
ANR	10976599	UnaryOperator	&		10976540	0					
ANR	10976600	PtrMemberAccess	penum -> enum_client_data		10976540	1					
ANR	10976601	Identifier	penum		10976540	0					
ANR	10976602	Identifier	enum_client_data		10976540	1					
ANR	10976603	Identifier	zglyphshow		10976540	1					
ANR	10976604	IfStatement	"if ( ( code = op_show_finish_setup ( i_ctx_p , penum , 1 , NULL ) ) < 0 )"		10976540	5					
ANR	10976605	Condition	"( code = op_show_finish_setup ( i_ctx_p , penum , 1 , NULL ) ) < 0"	65:8:1877:1934	10976540	0	True				
ANR	10976606	RelationalExpression	"( code = op_show_finish_setup ( i_ctx_p , penum , 1 , NULL ) ) < 0"		10976540	0		<			
ANR	10976607	AssignmentExpression	"code = op_show_finish_setup ( i_ctx_p , penum , 1 , NULL )"		10976540	0		=			
ANR	10976608	Identifier	code		10976540	0					
ANR	10976609	CallExpression	"op_show_finish_setup ( i_ctx_p , penum , 1 , NULL )"		10976540	1					
ANR	10976610	Callee	op_show_finish_setup		10976540	0					
ANR	10976611	Identifier	op_show_finish_setup		10976540	0					
ANR	10976612	ArgumentList	i_ctx_p		10976540	1					
ANR	10976613	Argument	i_ctx_p		10976540	0					
ANR	10976614	Identifier	i_ctx_p		10976540	0					
ANR	10976615	Argument	penum		10976540	1					
ANR	10976616	Identifier	penum		10976540	0					
ANR	10976617	Argument	1		10976540	2					
ANR	10976618	PrimaryExpression	1		10976540	0					
ANR	10976619	Argument	NULL		10976540	3					
ANR	10976620	Identifier	NULL		10976540	0					
ANR	10976621	PrimaryExpression	0		10976540	1					
ANR	10976622	CompoundStatement		10:68:344:344	10976540	1					
ANR	10976623	ExpressionStatement	"ifree_object ( penum , ""zglyphshow"" )"	66:8:1947:1980	10976540	0	True				
ANR	10976624	CallExpression	"ifree_object ( penum , ""zglyphshow"" )"		10976540	0					
ANR	10976625	Callee	ifree_object		10976540	0					
ANR	10976626	Identifier	ifree_object		10976540	0					
ANR	10976627	ArgumentList	penum		10976540	1					
ANR	10976628	Argument	penum		10976540	0					
ANR	10976629	Identifier	penum		10976540	0					
ANR	10976630	Argument	"""zglyphshow"""		10976540	1					
ANR	10976631	PrimaryExpression	"""zglyphshow"""		10976540	0					
ANR	10976632	ReturnStatement	return code ;	67:8:1990:2001	10976540	1	True				
ANR	10976633	Identifier	code		10976540	0					
ANR	10976634	ReturnStatement	"return op_show_continue_pop ( i_ctx_p , 1 ) ;"	69:4:2013:2052	10976540	6	True				
ANR	10976635	CallExpression	"op_show_continue_pop ( i_ctx_p , 1 )"		10976540	0					
ANR	10976636	Callee	op_show_continue_pop		10976540	0					
ANR	10976637	Identifier	op_show_continue_pop		10976540	0					
ANR	10976638	ArgumentList	i_ctx_p		10976540	1					
ANR	10976639	Argument	i_ctx_p		10976540	0					
ANR	10976640	Identifier	i_ctx_p		10976540	0					
ANR	10976641	Argument	1		10976540	1					
ANR	10976642	PrimaryExpression	1		10976540	0					
ANR	10976643	ReturnType	static int		10976540	1					
ANR	10976644	Identifier	zglyphshow		10976540	2					
ANR	10976645	ParameterList	i_ctx_t * i_ctx_p		10976540	3					
ANR	10976646	Parameter	i_ctx_t * i_ctx_p	55:11:1574:1589	10976540	0	True				
ANR	10976647	ParameterType	i_ctx_t *		10976540	0					
ANR	10976648	Identifier	i_ctx_p		10976540	1					
ANR	10976649	CFGEntryNode	ENTRY		10976540		True				
ANR	10976650	CFGExitNode	EXIT		10976540		True				
ANR	10976651	Symbol	* penum		10976540						
ANR	10976652	Symbol	& penum -> enum_client_data		10976540						
ANR	10976653	Symbol	op_show_continue_pop		10976540						
ANR	10976654	Symbol	code		10976540						
ANR	10976655	Symbol	NULL		10976540						
ANR	10976656	Symbol	penum		10976540						
ANR	10976657	Symbol	zglyphshow		10976540						
ANR	10976658	Symbol	glyph_show_setup		10976540						
ANR	10976659	Symbol	gs_glyphshow_begin		10976540						
ANR	10976660	Symbol	* ( op_proc_t * ) & penum -> enum_client_data		10976540						
ANR	10976661	Symbol	imemory_local		10976540						
ANR	10976662	Symbol	glyph		10976540						
ANR	10976663	Symbol	penum -> enum_client_data		10976540						
ANR	10976664	Symbol	& glyph		10976540						
ANR	10976665	Symbol	igs		10976540						
ANR	10976666	Symbol	i_ctx_p		10976540						
ANR	10976667	Symbol	& penum		10976540						
ANR	10976668	Symbol	op_show_finish_setup		10976540						
ANR	10976669	Function	zglyphwidth	73:0:2096:2552							
ANR	10976670	FunctionDef	zglyphwidth (i_ctx_t * i_ctx_p)		10976669	0					
ANR	10976671	CompoundStatement		75:0:2137:2552	10976669	0					
ANR	10976672	IdentifierDeclStatement	gs_glyph glyph ;	76:4:2143:2157	10976669	0	True				
ANR	10976673	IdentifierDecl	glyph		10976669	0					
ANR	10976674	IdentifierDeclType	gs_glyph		10976669	0					
ANR	10976675	Identifier	glyph		10976669	1					
ANR	10976676	IdentifierDeclStatement	gs_text_enum_t * penum ;	77:4:2163:2184	10976669	1	True				
ANR	10976677	IdentifierDecl	* penum		10976669	0					
ANR	10976678	IdentifierDeclType	gs_text_enum_t *		10976669	0					
ANR	10976679	Identifier	penum		10976669	1					
ANR	10976680	IdentifierDeclStatement	int code ;	78:4:2190:2198	10976669	2	True				
ANR	10976681	IdentifierDecl	code		10976669	0					
ANR	10976682	IdentifierDeclType	int		10976669	0					
ANR	10976683	Identifier	code		10976669	1					
ANR	10976684	IfStatement	"if ( ( code = glyph_show_setup ( i_ctx_p , & glyph ) ) != 0 || ( code = gs_glyphwidth_begin ( igs , glyph , imemory , & penum ) ) < 0 )"		10976669	3					
ANR	10976685	Condition	"( code = glyph_show_setup ( i_ctx_p , & glyph ) ) != 0 || ( code = gs_glyphwidth_begin ( igs , glyph , imemory , & penum ) ) < 0"	80:8:2209:2328	10976669	0	True				
ANR	10976686	OrExpression	"( code = glyph_show_setup ( i_ctx_p , & glyph ) ) != 0 || ( code = gs_glyphwidth_begin ( igs , glyph , imemory , & penum ) ) < 0"		10976669	0		||			
ANR	10976687	EqualityExpression	"( code = glyph_show_setup ( i_ctx_p , & glyph ) ) != 0"		10976669	0		!=			
ANR	10976688	AssignmentExpression	"code = glyph_show_setup ( i_ctx_p , & glyph )"		10976669	0		=			
ANR	10976689	Identifier	code		10976669	0					
ANR	10976690	CallExpression	"glyph_show_setup ( i_ctx_p , & glyph )"		10976669	1					
ANR	10976691	Callee	glyph_show_setup		10976669	0					
ANR	10976692	Identifier	glyph_show_setup		10976669	0					
ANR	10976693	ArgumentList	i_ctx_p		10976669	1					
ANR	10976694	Argument	i_ctx_p		10976669	0					
ANR	10976695	Identifier	i_ctx_p		10976669	0					
ANR	10976696	Argument	& glyph		10976669	1					
ANR	10976697	UnaryOperationExpression	& glyph		10976669	0					
ANR	10976698	UnaryOperator	&		10976669	0					
ANR	10976699	Identifier	glyph		10976669	1					
ANR	10976700	PrimaryExpression	0		10976669	1					
ANR	10976701	RelationalExpression	"( code = gs_glyphwidth_begin ( igs , glyph , imemory , & penum ) ) < 0"		10976669	1		<			
ANR	10976702	AssignmentExpression	"code = gs_glyphwidth_begin ( igs , glyph , imemory , & penum )"		10976669	0		=			
ANR	10976703	Identifier	code		10976669	0					
ANR	10976704	CallExpression	"gs_glyphwidth_begin ( igs , glyph , imemory , & penum )"		10976669	1					
ANR	10976705	Callee	gs_glyphwidth_begin		10976669	0					
ANR	10976706	Identifier	gs_glyphwidth_begin		10976669	0					
ANR	10976707	ArgumentList	igs		10976669	1					
ANR	10976708	Argument	igs		10976669	0					
ANR	10976709	Identifier	igs		10976669	0					
ANR	10976710	Argument	glyph		10976669	1					
ANR	10976711	Identifier	glyph		10976669	0					
ANR	10976712	Argument	imemory		10976669	2					
ANR	10976713	Identifier	imemory		10976669	0					
ANR	10976714	Argument	& penum		10976669	3					
ANR	10976715	UnaryOperationExpression	& penum		10976669	0					
ANR	10976716	UnaryOperator	&		10976669	0					
ANR	10976717	Identifier	penum		10976669	1					
ANR	10976718	PrimaryExpression	0		10976669	1					
ANR	10976719	ReturnStatement	return code ;	82:8:2339:2350	10976669	1	True				
ANR	10976720	Identifier	code		10976669	0					
ANR	10976721	IfStatement	"if ( ( code = op_show_finish_setup ( i_ctx_p , penum , 1 , finish_stringwidth ) ) < 0 )"		10976669	4					
ANR	10976722	Condition	"( code = op_show_finish_setup ( i_ctx_p , penum , 1 , finish_stringwidth ) ) < 0"	83:8:2360:2431	10976669	0	True				
ANR	10976723	RelationalExpression	"( code = op_show_finish_setup ( i_ctx_p , penum , 1 , finish_stringwidth ) ) < 0"		10976669	0		<			
ANR	10976724	AssignmentExpression	"code = op_show_finish_setup ( i_ctx_p , penum , 1 , finish_stringwidth )"		10976669	0		=			
ANR	10976725	Identifier	code		10976669	0					
ANR	10976726	CallExpression	"op_show_finish_setup ( i_ctx_p , penum , 1 , finish_stringwidth )"		10976669	1					
ANR	10976727	Callee	op_show_finish_setup		10976669	0					
ANR	10976728	Identifier	op_show_finish_setup		10976669	0					
ANR	10976729	ArgumentList	i_ctx_p		10976669	1					
ANR	10976730	Argument	i_ctx_p		10976669	0					
ANR	10976731	Identifier	i_ctx_p		10976669	0					
ANR	10976732	Argument	penum		10976669	1					
ANR	10976733	Identifier	penum		10976669	0					
ANR	10976734	Argument	1		10976669	2					
ANR	10976735	PrimaryExpression	1		10976669	0					
ANR	10976736	Argument	finish_stringwidth		10976669	3					
ANR	10976737	Identifier	finish_stringwidth		10976669	0					
ANR	10976738	PrimaryExpression	0		10976669	1					
ANR	10976739	CompoundStatement		9:82:296:296	10976669	1					
ANR	10976740	ExpressionStatement	"ifree_object ( penum , ""zglyphwidth"" )"	84:8:2444:2478	10976669	0	True				
ANR	10976741	CallExpression	"ifree_object ( penum , ""zglyphwidth"" )"		10976669	0					
ANR	10976742	Callee	ifree_object		10976669	0					
ANR	10976743	Identifier	ifree_object		10976669	0					
ANR	10976744	ArgumentList	penum		10976669	1					
ANR	10976745	Argument	penum		10976669	0					
ANR	10976746	Identifier	penum		10976669	0					
ANR	10976747	Argument	"""zglyphwidth"""		10976669	1					
ANR	10976748	PrimaryExpression	"""zglyphwidth"""		10976669	0					
ANR	10976749	ReturnStatement	return code ;	85:8:2488:2499	10976669	1	True				
ANR	10976750	Identifier	code		10976669	0					
ANR	10976751	ReturnStatement	"return op_show_continue_pop ( i_ctx_p , 1 ) ;"	87:4:2511:2550	10976669	5	True				
ANR	10976752	CallExpression	"op_show_continue_pop ( i_ctx_p , 1 )"		10976669	0					
ANR	10976753	Callee	op_show_continue_pop		10976669	0					
ANR	10976754	Identifier	op_show_continue_pop		10976669	0					
ANR	10976755	ArgumentList	i_ctx_p		10976669	1					
ANR	10976756	Argument	i_ctx_p		10976669	0					
ANR	10976757	Identifier	i_ctx_p		10976669	0					
ANR	10976758	Argument	1		10976669	1					
ANR	10976759	PrimaryExpression	1		10976669	0					
ANR	10976760	ReturnType	static int		10976669	1					
ANR	10976761	Identifier	zglyphwidth		10976669	2					
ANR	10976762	ParameterList	i_ctx_t * i_ctx_p		10976669	3					
ANR	10976763	Parameter	i_ctx_t * i_ctx_p	74:12:2119:2134	10976669	0	True				
ANR	10976764	ParameterType	i_ctx_t *		10976669	0					
ANR	10976765	Identifier	i_ctx_p		10976669	1					
ANR	10976766	CFGEntryNode	ENTRY		10976669		True				
ANR	10976767	CFGExitNode	EXIT		10976669		True				
ANR	10976768	Symbol	op_show_continue_pop		10976669						
ANR	10976769	Symbol	code		10976669						
ANR	10976770	Symbol	penum		10976669						
ANR	10976771	Symbol	gs_glyphwidth_begin		10976669						
ANR	10976772	Symbol	glyph_show_setup		10976669						
ANR	10976773	Symbol	finish_stringwidth		10976669						
ANR	10976774	Symbol	glyph		10976669						
ANR	10976775	Symbol	& glyph		10976669						
ANR	10976776	Symbol	igs		10976669						
ANR	10976777	Symbol	i_ctx_p		10976669						
ANR	10976778	Symbol	& penum		10976669						
ANR	10976779	Symbol	imemory		10976669						
ANR	10976780	Symbol	op_show_finish_setup		10976669						
ANR	10976781	Function	moveshow	93:0:2688:5196							
ANR	10976782	FunctionDef	"moveshow (i_ctx_t * i_ctx_p , bool have_x , bool have_y)"		10976781	0					
ANR	10976783	CompoundStatement		95:0:2752:5196	10976781	0					
ANR	10976784	IdentifierDeclStatement	os_ptr op = osp ;	96:4:2758:2773	10976781	0	True				
ANR	10976785	IdentifierDecl	op = osp		10976781	0					
ANR	10976786	IdentifierDeclType	os_ptr		10976781	0					
ANR	10976787	Identifier	op		10976781	1					
ANR	10976788	AssignmentExpression	op = osp		10976781	2		=			
ANR	10976789	Identifier	osp		10976781	0					
ANR	10976790	Identifier	osp		10976781	1					
ANR	10976791	IdentifierDeclStatement	gs_text_enum_t * penum = NULL ;	97:4:2779:2807	10976781	1	True				
ANR	10976792	IdentifierDecl	* penum = NULL		10976781	0					
ANR	10976793	IdentifierDeclType	gs_text_enum_t *		10976781	0					
ANR	10976794	Identifier	penum		10976781	1					
ANR	10976795	AssignmentExpression	* penum = NULL		10976781	2		=			
ANR	10976796	Identifier	NULL		10976781	0					
ANR	10976797	Identifier	NULL		10976781	1					
ANR	10976798	IdentifierDeclStatement	"int code = op_show_setup ( i_ctx_p , op - 1 ) ;"	98:4:2813:2854	10976781	2	True				
ANR	10976799	IdentifierDecl	"code = op_show_setup ( i_ctx_p , op - 1 )"		10976781	0					
ANR	10976800	IdentifierDeclType	int		10976781	0					
ANR	10976801	Identifier	code		10976781	1					
ANR	10976802	AssignmentExpression	"code = op_show_setup ( i_ctx_p , op - 1 )"		10976781	2		=			
ANR	10976803	Identifier	code		10976781	0					
ANR	10976804	CallExpression	"op_show_setup ( i_ctx_p , op - 1 )"		10976781	1					
ANR	10976805	Callee	op_show_setup		10976781	0					
ANR	10976806	Identifier	op_show_setup		10976781	0					
ANR	10976807	ArgumentList	i_ctx_p		10976781	1					
ANR	10976808	Argument	i_ctx_p		10976781	0					
ANR	10976809	Identifier	i_ctx_p		10976781	0					
ANR	10976810	Argument	op - 1		10976781	1					
ANR	10976811	AdditiveExpression	op - 1		10976781	0		-			
ANR	10976812	Identifier	op		10976781	0					
ANR	10976813	PrimaryExpression	1		10976781	1					
ANR	10976814	IdentifierDeclStatement	int format ;	99:4:2860:2870	10976781	3	True				
ANR	10976815	IdentifierDecl	format		10976781	0					
ANR	10976816	IdentifierDeclType	int		10976781	0					
ANR	10976817	Identifier	format		10976781	1					
ANR	10976818	IdentifierDeclStatement	"uint i , size , widths_needed ;"	100:4:2876:2903	10976781	4	True				
ANR	10976819	IdentifierDecl	i		10976781	0					
ANR	10976820	IdentifierDeclType	uint		10976781	0					
ANR	10976821	Identifier	i		10976781	1					
ANR	10976822	IdentifierDecl	size		10976781	1					
ANR	10976823	IdentifierDeclType	uint		10976781	0					
ANR	10976824	Identifier	size		10976781	1					
ANR	10976825	IdentifierDecl	widths_needed		10976781	2					
ANR	10976826	IdentifierDeclType	uint		10976781	0					
ANR	10976827	Identifier	widths_needed		10976781	1					
ANR	10976828	IdentifierDeclStatement	float * values ;	101:4:2909:2922	10976781	5	True				
ANR	10976829	IdentifierDecl	* values		10976781	0					
ANR	10976830	IdentifierDeclType	float *		10976781	0					
ANR	10976831	Identifier	values		10976781	1					
ANR	10976832	IdentifierDeclStatement	bool CPSI_mode = gs_currentcpsimode ( imemory ) ;	102:4:2928:2972	10976781	6	True				
ANR	10976833	IdentifierDecl	CPSI_mode = gs_currentcpsimode ( imemory )		10976781	0					
ANR	10976834	IdentifierDeclType	bool		10976781	0					
ANR	10976835	Identifier	CPSI_mode		10976781	1					
ANR	10976836	AssignmentExpression	CPSI_mode = gs_currentcpsimode ( imemory )		10976781	2		=			
ANR	10976837	Identifier	CPSI_mode		10976781	0					
ANR	10976838	CallExpression	gs_currentcpsimode ( imemory )		10976781	1					
ANR	10976839	Callee	gs_currentcpsimode		10976781	0					
ANR	10976840	Identifier	gs_currentcpsimode		10976781	0					
ANR	10976841	ArgumentList	imemory		10976781	1					
ANR	10976842	Argument	imemory		10976781	0					
ANR	10976843	Identifier	imemory		10976781	0					
ANR	10976844	IfStatement	if ( code != 0 )		10976781	7					
ANR	10976845	Condition	code != 0	104:8:2983:2991	10976781	0	True				
ANR	10976846	EqualityExpression	code != 0		10976781	0		!=			
ANR	10976847	Identifier	code		10976781	0					
ANR	10976848	PrimaryExpression	0		10976781	1					
ANR	10976849	ReturnStatement	return code ;	105:8:3002:3013	10976781	1	True				
ANR	10976850	Identifier	code		10976781	0					
ANR	10976851	ExpressionStatement	format = num_array_format ( op )	106:4:3019:3048	10976781	8	True				
ANR	10976852	AssignmentExpression	format = num_array_format ( op )		10976781	0		=			
ANR	10976853	Identifier	format		10976781	0					
ANR	10976854	CallExpression	num_array_format ( op )		10976781	1					
ANR	10976855	Callee	num_array_format		10976781	0					
ANR	10976856	Identifier	num_array_format		10976781	0					
ANR	10976857	ArgumentList	op		10976781	1					
ANR	10976858	Argument	op		10976781	0					
ANR	10976859	Identifier	op		10976781	0					
ANR	10976860	IfStatement	if ( format < 0 )		10976781	9					
ANR	10976861	Condition	format < 0	107:8:3058:3067	10976781	0	True				
ANR	10976862	RelationalExpression	format < 0		10976781	0		<			
ANR	10976863	Identifier	format		10976781	0					
ANR	10976864	PrimaryExpression	0		10976781	1					
ANR	10976865	ReturnStatement	return format ;	108:8:3078:3091	10976781	1	True				
ANR	10976866	Identifier	format		10976781	0					
ANR	10976867	ExpressionStatement	"size = num_array_size ( op , format )"	109:4:3097:3130	10976781	10	True				
ANR	10976868	AssignmentExpression	"size = num_array_size ( op , format )"		10976781	0		=			
ANR	10976869	Identifier	size		10976781	0					
ANR	10976870	CallExpression	"num_array_size ( op , format )"		10976781	1					
ANR	10976871	Callee	num_array_size		10976781	0					
ANR	10976872	Identifier	num_array_size		10976781	0					
ANR	10976873	ArgumentList	op		10976781	1					
ANR	10976874	Argument	op		10976781	0					
ANR	10976875	Identifier	op		10976781	0					
ANR	10976876	Argument	format		10976781	1					
ANR	10976877	Identifier	format		10976781	0					
ANR	10976878	ExpressionStatement	"values = ( float * ) ialloc_byte_array ( size , sizeof ( float ) , ""moveshow"" )"	110:4:3136:3204	10976781	11	True				
ANR	10976879	AssignmentExpression	"values = ( float * ) ialloc_byte_array ( size , sizeof ( float ) , ""moveshow"" )"		10976781	0		=			
ANR	10976880	Identifier	values		10976781	0					
ANR	10976881	CastExpression	"( float * ) ialloc_byte_array ( size , sizeof ( float ) , ""moveshow"" )"		10976781	1					
ANR	10976882	CastTarget	float *		10976781	0					
ANR	10976883	CallExpression	"ialloc_byte_array ( size , sizeof ( float ) , ""moveshow"" )"		10976781	1					
ANR	10976884	Callee	ialloc_byte_array		10976781	0					
ANR	10976885	Identifier	ialloc_byte_array		10976781	0					
ANR	10976886	ArgumentList	size		10976781	1					
ANR	10976887	Argument	size		10976781	0					
ANR	10976888	Identifier	size		10976781	0					
ANR	10976889	Argument	sizeof ( float )		10976781	1					
ANR	10976890	SizeofExpression	sizeof ( float )		10976781	0					
ANR	10976891	Sizeof	sizeof		10976781	0					
ANR	10976892	SizeofOperand	float		10976781	1					
ANR	10976893	Argument	"""moveshow"""		10976781	2					
ANR	10976894	PrimaryExpression	"""moveshow"""		10976781	0					
ANR	10976895	IfStatement	if ( values == 0 )		10976781	12					
ANR	10976896	Condition	values == 0	111:8:3214:3224	10976781	0	True				
ANR	10976897	EqualityExpression	values == 0		10976781	0		==			
ANR	10976898	Identifier	values		10976781	0					
ANR	10976899	PrimaryExpression	0		10976781	1					
ANR	10976900	ExpressionStatement	return_error ( gs_error_VMerror )	112:8:3235:3265	10976781	1	True				
ANR	10976901	CallExpression	return_error ( gs_error_VMerror )		10976781	0					
ANR	10976902	Callee	return_error		10976781	0					
ANR	10976903	Identifier	return_error		10976781	0					
ANR	10976904	ArgumentList	gs_error_VMerror		10976781	1					
ANR	10976905	Argument	gs_error_VMerror		10976781	0					
ANR	10976906	Identifier	gs_error_VMerror		10976781	0					
ANR	10976907	IfStatement	if ( CPSI_mode )		10976781	13					
ANR	10976908	Condition	CPSI_mode	113:8:3275:3283	10976781	0	True				
ANR	10976909	Identifier	CPSI_mode		10976781	0					
ANR	10976910	ExpressionStatement	"memset ( values , 0 , size * sizeof ( values [ 0 ] ) )"	114:8:3294:3337	10976781	1	True				
ANR	10976911	CallExpression	"memset ( values , 0 , size * sizeof ( values [ 0 ] ) )"		10976781	0					
ANR	10976912	Callee	memset		10976781	0					
ANR	10976913	Identifier	memset		10976781	0					
ANR	10976914	ArgumentList	values		10976781	1					
ANR	10976915	Argument	values		10976781	0					
ANR	10976916	Identifier	values		10976781	0					
ANR	10976917	Argument	0		10976781	1					
ANR	10976918	PrimaryExpression	0		10976781	0					
ANR	10976919	Argument	size * sizeof ( values [ 0 ] )		10976781	2					
ANR	10976920	MultiplicativeExpression	size * sizeof ( values [ 0 ] )		10976781	0		*			
ANR	10976921	Identifier	size		10976781	0					
ANR	10976922	SizeofExpression	sizeof ( values [ 0 ] )		10976781	1					
ANR	10976923	Sizeof	sizeof		10976781	0					
ANR	10976924	ArrayIndexing	values [ 0 ]		10976781	1					
ANR	10976925	Identifier	values		10976781	0					
ANR	10976926	PrimaryExpression	0		10976781	1					
ANR	10976927	IfStatement	"if ( ( code = gs_xyshow_begin ( igs , op [ - 1 ] . value . bytes , r_size ( op - 1 ) , ( have_x ? values : ( float * ) 0 ) , ( have_y ? values : ( float * ) 0 ) , size , imemory_local , & penum ) ) < 0 )"		10976781	14					
ANR	10976928	Condition	"( code = gs_xyshow_begin ( igs , op [ - 1 ] . value . bytes , r_size ( op - 1 ) , ( have_x ? values : ( float * ) 0 ) , ( have_y ? values : ( float * ) 0 ) , size , imemory_local , & penum ) ) < 0"	115:8:3361:3618	10976781	0	True				
ANR	10976929	RelationalExpression	"( code = gs_xyshow_begin ( igs , op [ - 1 ] . value . bytes , r_size ( op - 1 ) , ( have_x ? values : ( float * ) 0 ) , ( have_y ? values : ( float * ) 0 ) , size , imemory_local , & penum ) ) < 0"		10976781	0		<			
ANR	10976930	AssignmentExpression	"code = gs_xyshow_begin ( igs , op [ - 1 ] . value . bytes , r_size ( op - 1 ) , ( have_x ? values : ( float * ) 0 ) , ( have_y ? values : ( float * ) 0 ) , size , imemory_local , & penum )"		10976781	0		=			
ANR	10976931	Identifier	code		10976781	0					
ANR	10976932	CallExpression	"gs_xyshow_begin ( igs , op [ - 1 ] . value . bytes , r_size ( op - 1 ) , ( have_x ? values : ( float * ) 0 ) , ( have_y ? values : ( float * ) 0 ) , size , imemory_local , & penum )"		10976781	1					
ANR	10976933	Callee	gs_xyshow_begin		10976781	0					
ANR	10976934	Identifier	gs_xyshow_begin		10976781	0					
ANR	10976935	ArgumentList	igs		10976781	1					
ANR	10976936	Argument	igs		10976781	0					
ANR	10976937	Identifier	igs		10976781	0					
ANR	10976938	Argument	op [ - 1 ] . value . bytes		10976781	1					
ANR	10976939	MemberAccess	op [ - 1 ] . value . bytes		10976781	0					
ANR	10976940	MemberAccess	op [ - 1 ] . value		10976781	0					
ANR	10976941	ArrayIndexing	op [ - 1 ]		10976781	0					
ANR	10976942	Identifier	op		10976781	0					
ANR	10976943	UnaryOperationExpression	- 1		10976781	1					
ANR	10976944	UnaryOperator	-		10976781	0					
ANR	10976945	PrimaryExpression	1		10976781	1					
ANR	10976946	Identifier	value		10976781	1					
ANR	10976947	Identifier	bytes		10976781	1					
ANR	10976948	Argument	r_size ( op - 1 )		10976781	2					
ANR	10976949	CallExpression	r_size ( op - 1 )		10976781	0					
ANR	10976950	Callee	r_size		10976781	0					
ANR	10976951	Identifier	r_size		10976781	0					
ANR	10976952	ArgumentList	op - 1		10976781	1					
ANR	10976953	Argument	op - 1		10976781	0					
ANR	10976954	AdditiveExpression	op - 1		10976781	0		-			
ANR	10976955	Identifier	op		10976781	0					
ANR	10976956	PrimaryExpression	1		10976781	1					
ANR	10976957	Argument	have_x ? values : ( float * ) 0		10976781	3					
ANR	10976958	ConditionalExpression	have_x ? values : ( float * ) 0		10976781	0					
ANR	10976959	Condition	have_x		10976781	0					
ANR	10976960	Identifier	have_x		10976781	0					
ANR	10976961	Identifier	values		10976781	1					
ANR	10976962	CastExpression	( float * ) 0		10976781	2					
ANR	10976963	CastTarget	float *		10976781	0					
ANR	10976964	PrimaryExpression	0		10976781	1					
ANR	10976965	Argument	have_y ? values : ( float * ) 0		10976781	4					
ANR	10976966	ConditionalExpression	have_y ? values : ( float * ) 0		10976781	0					
ANR	10976967	Condition	have_y		10976781	0					
ANR	10976968	Identifier	have_y		10976781	0					
ANR	10976969	Identifier	values		10976781	1					
ANR	10976970	CastExpression	( float * ) 0		10976781	2					
ANR	10976971	CastTarget	float *		10976781	0					
ANR	10976972	PrimaryExpression	0		10976781	1					
ANR	10976973	Argument	size		10976781	5					
ANR	10976974	Identifier	size		10976781	0					
ANR	10976975	Argument	imemory_local		10976781	6					
ANR	10976976	Identifier	imemory_local		10976781	0					
ANR	10976977	Argument	& penum		10976781	7					
ANR	10976978	UnaryOperationExpression	& penum		10976781	0					
ANR	10976979	UnaryOperator	&		10976781	0					
ANR	10976980	Identifier	penum		10976781	1					
ANR	10976981	PrimaryExpression	0		10976781	1					
ANR	10976982	CompoundStatement		24:67:868:868	10976781	1					
ANR	10976983	ExpressionStatement	"ifree_object ( values , ""moveshow"" )"	119:8:3631:3663	10976781	0	True				
ANR	10976984	CallExpression	"ifree_object ( values , ""moveshow"" )"		10976781	0					
ANR	10976985	Callee	ifree_object		10976781	0					
ANR	10976986	Identifier	ifree_object		10976781	0					
ANR	10976987	ArgumentList	values		10976781	1					
ANR	10976988	Argument	values		10976781	0					
ANR	10976989	Identifier	values		10976781	0					
ANR	10976990	Argument	"""moveshow"""		10976781	1					
ANR	10976991	PrimaryExpression	"""moveshow"""		10976781	0					
ANR	10976992	IfStatement	if ( penum )		10976781	1					
ANR	10976993	Condition	penum	120:12:3677:3681	10976781	0	True				
ANR	10976994	Identifier	penum		10976781	0					
ANR	10976995	ExpressionStatement	penum -> text . x_widths = penum -> text . y_widths = NULL	121:12:3767:3817	10976781	1	True				
ANR	10976996	AssignmentExpression	penum -> text . x_widths = penum -> text . y_widths = NULL		10976781	0		=			
ANR	10976997	MemberAccess	penum -> text . x_widths		10976781	0					
ANR	10976998	PtrMemberAccess	penum -> text		10976781	0					
ANR	10976999	Identifier	penum		10976781	0					
ANR	10977000	Identifier	text		10976781	1					
ANR	10977001	Identifier	x_widths		10976781	1					
ANR	10977002	AssignmentExpression	penum -> text . y_widths = NULL		10976781	1		=			
ANR	10977003	MemberAccess	penum -> text . y_widths		10976781	0					
ANR	10977004	PtrMemberAccess	penum -> text		10976781	0					
ANR	10977005	Identifier	penum		10976781	0					
ANR	10977006	Identifier	text		10976781	1					
ANR	10977007	Identifier	y_widths		10976781	1					
ANR	10977008	Identifier	NULL		10976781	1					
ANR	10977009	ReturnStatement	return code ;	122:8:3827:3838	10976781	2	True				
ANR	10977010	Identifier	code		10976781	0					
ANR	10977011	IfStatement	if ( CPSI_mode )		10976781	15					
ANR	10977012	Condition	CPSI_mode	124:8:3854:3862	10976781	0	True				
ANR	10977013	Identifier	CPSI_mode		10976781	0					
ANR	10977014	CompoundStatement		30:19:1112:1112	10976781	1					
ANR	10977015	ExpressionStatement	"code = gs_text_count_chars ( igs , gs_get_text_params ( penum ) , imemory )"	129:8:4136:4203	10976781	0	True				
ANR	10977016	AssignmentExpression	"code = gs_text_count_chars ( igs , gs_get_text_params ( penum ) , imemory )"		10976781	0		=			
ANR	10977017	Identifier	code		10976781	0					
ANR	10977018	CallExpression	"gs_text_count_chars ( igs , gs_get_text_params ( penum ) , imemory )"		10976781	1					
ANR	10977019	Callee	gs_text_count_chars		10976781	0					
ANR	10977020	Identifier	gs_text_count_chars		10976781	0					
ANR	10977021	ArgumentList	igs		10976781	1					
ANR	10977022	Argument	igs		10976781	0					
ANR	10977023	Identifier	igs		10976781	0					
ANR	10977024	Argument	gs_get_text_params ( penum )		10976781	1					
ANR	10977025	CallExpression	gs_get_text_params ( penum )		10976781	0					
ANR	10977026	Callee	gs_get_text_params		10976781	0					
ANR	10977027	Identifier	gs_get_text_params		10976781	0					
ANR	10977028	ArgumentList	penum		10976781	1					
ANR	10977029	Argument	penum		10976781	0					
ANR	10977030	Identifier	penum		10976781	0					
ANR	10977031	Argument	imemory		10976781	2					
ANR	10977032	Identifier	imemory		10976781	0					
ANR	10977033	IfStatement	if ( code < 0 )		10976781	1					
ANR	10977034	Condition	code < 0	130:12:4217:4224	10976781	0	True				
ANR	10977035	RelationalExpression	code < 0		10976781	0		<			
ANR	10977036	Identifier	code		10976781	0					
ANR	10977037	PrimaryExpression	0		10976781	1					
ANR	10977038	ReturnStatement	return code ;	131:12:4239:4250	10976781	1	True				
ANR	10977039	Identifier	code		10976781	0					
ANR	10977040	ExpressionStatement	widths_needed = code	132:8:4260:4280	10976781	2	True				
ANR	10977041	AssignmentExpression	widths_needed = code		10976781	0		=			
ANR	10977042	Identifier	widths_needed		10976781	0					
ANR	10977043	Identifier	code		10976781	1					
ANR	10977044	IfStatement	if ( have_x && have_y )		10976781	3					
ANR	10977045	Condition	have_x && have_y	133:12:4294:4309	10976781	0	True				
ANR	10977046	AndExpression	have_x && have_y		10976781	0		&&			
ANR	10977047	Identifier	have_x		10976781	0					
ANR	10977048	Identifier	have_y		10976781	1					
ANR	10977049	ExpressionStatement	widths_needed <<= 1	134:12:4324:4343	10976781	1	True				
ANR	10977050	AssignmentExpression	widths_needed <<= 1		10976781	0		<<=			
ANR	10977051	Identifier	widths_needed		10976781	0					
ANR	10977052	PrimaryExpression	1		10976781	1					
ANR	10977053	ElseStatement	else		10976781	0					
ANR	10977054	ExpressionStatement	widths_needed = size	136:8:4364:4384	10976781	0	True				
ANR	10977055	AssignmentExpression	widths_needed = size		10976781	0		=			
ANR	10977056	Identifier	widths_needed		10976781	0					
ANR	10977057	Identifier	size		10976781	1					
ANR	10977058	ForStatement	for ( i = 0 ; i < widths_needed ; ++ i )		10976781	16					
ANR	10977059	ForInit	i = 0 ;	137:9:4395:4400	10976781	0	True				
ANR	10977060	AssignmentExpression	i = 0		10976781	0		=			
ANR	10977061	Identifier	i		10976781	0					
ANR	10977062	PrimaryExpression	0		10976781	1					
ANR	10977063	Condition	i < widths_needed	137:16:4402:4418	10976781	1	True				
ANR	10977064	RelationalExpression	i < widths_needed		10976781	0		<			
ANR	10977065	Identifier	i		10976781	0					
ANR	10977066	Identifier	widths_needed		10976781	1					
ANR	10977067	UnaryExpression	++ i	137:35:4421:4423	10976781	2	True				
ANR	10977068	IncDec	++		10976781	0					
ANR	10977069	Identifier	i		10976781	1					
ANR	10977070	CompoundStatement		44:8:1683:1692	10976781	3					
ANR	10977071	IdentifierDeclStatement	ref value ;	138:8:4436:4445	10976781	0	True				
ANR	10977072	IdentifierDecl	value		10976781	0					
ANR	10977073	IdentifierDeclType	ref		10976781	0					
ANR	10977074	Identifier	value		10976781	1					
ANR	10977075	SwitchStatement	"switch ( code = num_array_get ( imemory , op , format , i , & value ) )"		10976781	1					
ANR	10977076	Condition	"code = num_array_get ( imemory , op , format , i , & value )"	140:16:4464:4515	10976781	0	True				
ANR	10977077	AssignmentExpression	"code = num_array_get ( imemory , op , format , i , & value )"		10976781	0		=			
ANR	10977078	Identifier	code		10976781	0					
ANR	10977079	CallExpression	"num_array_get ( imemory , op , format , i , & value )"		10976781	1					
ANR	10977080	Callee	num_array_get		10976781	0					
ANR	10977081	Identifier	num_array_get		10976781	0					
ANR	10977082	ArgumentList	imemory		10976781	1					
ANR	10977083	Argument	imemory		10976781	0					
ANR	10977084	Identifier	imemory		10976781	0					
ANR	10977085	Argument	op		10976781	1					
ANR	10977086	Identifier	op		10976781	0					
ANR	10977087	Argument	format		10976781	2					
ANR	10977088	Identifier	format		10976781	0					
ANR	10977089	Argument	i		10976781	3					
ANR	10977090	Identifier	i		10976781	0					
ANR	10977091	Argument	& value		10976781	4					
ANR	10977092	UnaryOperationExpression	& value		10976781	0					
ANR	10977093	UnaryOperator	&		10976781	0					
ANR	10977094	Identifier	value		10976781	1					
ANR	10977095	CompoundStatement		46:70:1765:1765	10976781	1					
ANR	10977096	Label	case t_integer :	141:8:4528:4542	10976781	0	True				
ANR	10977097	Identifier	t_integer		10976781	0					
ANR	10977098	ExpressionStatement	values [ i ] = ( float ) value . value . intval	142:12:4556:4593	10976781	1	True				
ANR	10977099	AssignmentExpression	values [ i ] = ( float ) value . value . intval		10976781	0		=			
ANR	10977100	ArrayIndexing	values [ i ]		10976781	0					
ANR	10977101	Identifier	values		10976781	0					
ANR	10977102	Identifier	i		10976781	1					
ANR	10977103	CastExpression	( float ) value . value . intval		10976781	1					
ANR	10977104	CastTarget	float		10976781	0					
ANR	10977105	MemberAccess	value . value . intval		10976781	1					
ANR	10977106	MemberAccess	value . value		10976781	0					
ANR	10977107	Identifier	value		10976781	0					
ANR	10977108	Identifier	value		10976781	1					
ANR	10977109	Identifier	intval		10976781	1					
ANR	10977110	BreakStatement	break ;	142:51:4595:4600	10976781	2	True				
ANR	10977111	Label	case t_real :	143:8:4610:4621	10976781	3	True				
ANR	10977112	Identifier	t_real		10976781	0					
ANR	10977113	ExpressionStatement	values [ i ] = value . value . realval	144:12:4635:4666	10976781	4	True				
ANR	10977114	AssignmentExpression	values [ i ] = value . value . realval		10976781	0		=			
ANR	10977115	ArrayIndexing	values [ i ]		10976781	0					
ANR	10977116	Identifier	values		10976781	0					
ANR	10977117	Identifier	i		10976781	1					
ANR	10977118	MemberAccess	value . value . realval		10976781	1					
ANR	10977119	MemberAccess	value . value		10976781	0					
ANR	10977120	Identifier	value		10976781	0					
ANR	10977121	Identifier	value		10976781	1					
ANR	10977122	Identifier	realval		10976781	1					
ANR	10977123	BreakStatement	break ;	144:45:4668:4673	10976781	5	True				
ANR	10977124	Label	case t_null :	145:8:4683:4694	10976781	6	True				
ANR	10977125	Identifier	t_null		10976781	0					
ANR	10977126	ExpressionStatement	code = gs_note_error ( gs_error_rangecheck )	146:12:4708:4749	10976781	7	True				
ANR	10977127	AssignmentExpression	code = gs_note_error ( gs_error_rangecheck )		10976781	0		=			
ANR	10977128	Identifier	code		10976781	0					
ANR	10977129	CallExpression	gs_note_error ( gs_error_rangecheck )		10976781	1					
ANR	10977130	Callee	gs_note_error		10976781	0					
ANR	10977131	Identifier	gs_note_error		10976781	0					
ANR	10977132	ArgumentList	gs_error_rangecheck		10976781	1					
ANR	10977133	Argument	gs_error_rangecheck		10976781	0					
ANR	10977134	Identifier	gs_error_rangecheck		10976781	0					
ANR	10977135	Label	default :	148:8:4791:4798	10976781	8	True				
ANR	10977136	Identifier	default		10976781	0					
ANR	10977137	ExpressionStatement	"ifree_object ( values , ""moveshow"" )"	149:12:4812:4844	10976781	9	True				
ANR	10977138	CallExpression	"ifree_object ( values , ""moveshow"" )"		10976781	0					
ANR	10977139	Callee	ifree_object		10976781	0					
ANR	10977140	Identifier	ifree_object		10976781	0					
ANR	10977141	ArgumentList	values		10976781	1					
ANR	10977142	Argument	values		10976781	0					
ANR	10977143	Identifier	values		10976781	0					
ANR	10977144	Argument	"""moveshow"""		10976781	1					
ANR	10977145	PrimaryExpression	"""moveshow"""		10976781	0					
ANR	10977146	ExpressionStatement	penum -> text . x_widths = penum -> text . y_widths = NULL	150:8:4854:4904	10976781	10	True				
ANR	10977147	AssignmentExpression	penum -> text . x_widths = penum -> text . y_widths = NULL		10976781	0		=			
ANR	10977148	MemberAccess	penum -> text . x_widths		10976781	0					
ANR	10977149	PtrMemberAccess	penum -> text		10976781	0					
ANR	10977150	Identifier	penum		10976781	0					
ANR	10977151	Identifier	text		10976781	1					
ANR	10977152	Identifier	x_widths		10976781	1					
ANR	10977153	AssignmentExpression	penum -> text . y_widths = NULL		10976781	1		=			
ANR	10977154	MemberAccess	penum -> text . y_widths		10976781	0					
ANR	10977155	PtrMemberAccess	penum -> text		10976781	0					
ANR	10977156	Identifier	penum		10976781	0					
ANR	10977157	Identifier	text		10976781	1					
ANR	10977158	Identifier	y_widths		10976781	1					
ANR	10977159	Identifier	NULL		10976781	1					
ANR	10977160	ReturnStatement	return code ;	151:12:4918:4929	10976781	11	True				
ANR	10977161	Identifier	code		10976781	0					
ANR	10977162	IfStatement	"if ( ( code = op_show_finish_setup ( i_ctx_p , penum , 2 , NULL ) ) < 0 )"		10976781	17					
ANR	10977163	Condition	"( code = op_show_finish_setup ( i_ctx_p , penum , 2 , NULL ) ) < 0"	154:8:4955:5012	10976781	0	True				
ANR	10977164	RelationalExpression	"( code = op_show_finish_setup ( i_ctx_p , penum , 2 , NULL ) ) < 0"		10976781	0		<			
ANR	10977165	AssignmentExpression	"code = op_show_finish_setup ( i_ctx_p , penum , 2 , NULL )"		10976781	0		=			
ANR	10977166	Identifier	code		10976781	0					
ANR	10977167	CallExpression	"op_show_finish_setup ( i_ctx_p , penum , 2 , NULL )"		10976781	1					
ANR	10977168	Callee	op_show_finish_setup		10976781	0					
ANR	10977169	Identifier	op_show_finish_setup		10976781	0					
ANR	10977170	ArgumentList	i_ctx_p		10976781	1					
ANR	10977171	Argument	i_ctx_p		10976781	0					
ANR	10977172	Identifier	i_ctx_p		10976781	0					
ANR	10977173	Argument	penum		10976781	1					
ANR	10977174	Identifier	penum		10976781	0					
ANR	10977175	Argument	2		10976781	2					
ANR	10977176	PrimaryExpression	2		10976781	0					
ANR	10977177	Argument	NULL		10976781	3					
ANR	10977178	Identifier	NULL		10976781	0					
ANR	10977179	PrimaryExpression	0		10976781	1					
ANR	10977180	CompoundStatement		60:68:2262:2262	10976781	1					
ANR	10977181	ExpressionStatement	"ifree_object ( values , ""moveshow"" )"	155:8:5025:5057	10976781	0	True				
ANR	10977182	CallExpression	"ifree_object ( values , ""moveshow"" )"		10976781	0					
ANR	10977183	Callee	ifree_object		10976781	0					
ANR	10977184	Identifier	ifree_object		10976781	0					
ANR	10977185	ArgumentList	values		10976781	1					
ANR	10977186	Argument	values		10976781	0					
ANR	10977187	Identifier	values		10976781	0					
ANR	10977188	Argument	"""moveshow"""		10976781	1					
ANR	10977189	PrimaryExpression	"""moveshow"""		10976781	0					
ANR	10977190	ExpressionStatement	penum -> text . x_widths = penum -> text . y_widths = NULL	156:8:5067:5117	10976781	1	True				
ANR	10977191	AssignmentExpression	penum -> text . x_widths = penum -> text . y_widths = NULL		10976781	0		=			
ANR	10977192	MemberAccess	penum -> text . x_widths		10976781	0					
ANR	10977193	PtrMemberAccess	penum -> text		10976781	0					
ANR	10977194	Identifier	penum		10976781	0					
ANR	10977195	Identifier	text		10976781	1					
ANR	10977196	Identifier	x_widths		10976781	1					
ANR	10977197	AssignmentExpression	penum -> text . y_widths = NULL		10976781	1		=			
ANR	10977198	MemberAccess	penum -> text . y_widths		10976781	0					
ANR	10977199	PtrMemberAccess	penum -> text		10976781	0					
ANR	10977200	Identifier	penum		10976781	0					
ANR	10977201	Identifier	text		10976781	1					
ANR	10977202	Identifier	y_widths		10976781	1					
ANR	10977203	Identifier	NULL		10976781	1					
ANR	10977204	ReturnStatement	return code ;	157:8:5127:5138	10976781	2	True				
ANR	10977205	Identifier	code		10976781	0					
ANR	10977206	ExpressionStatement	pop ( 2 )	159:4:5150:5156	10976781	18	True				
ANR	10977207	CallExpression	pop ( 2 )		10976781	0					
ANR	10977208	Callee	pop		10976781	0					
ANR	10977209	Identifier	pop		10976781	0					
ANR	10977210	ArgumentList	2		10976781	1					
ANR	10977211	Argument	2		10976781	0					
ANR	10977212	PrimaryExpression	2		10976781	0					
ANR	10977213	ReturnStatement	return op_show_continue ( i_ctx_p ) ;	160:4:5162:5194	10976781	19	True				
ANR	10977214	CallExpression	op_show_continue ( i_ctx_p )		10976781	0					
ANR	10977215	Callee	op_show_continue		10976781	0					
ANR	10977216	Identifier	op_show_continue		10976781	0					
ANR	10977217	ArgumentList	i_ctx_p		10976781	1					
ANR	10977218	Argument	i_ctx_p		10976781	0					
ANR	10977219	Identifier	i_ctx_p		10976781	0					
ANR	10977220	ReturnType	static int		10976781	1					
ANR	10977221	Identifier	moveshow		10976781	2					
ANR	10977222	ParameterList	"i_ctx_t * i_ctx_p , bool have_x , bool have_y"		10976781	3					
ANR	10977223	Parameter	i_ctx_t * i_ctx_p	94:9:2708:2723	10976781	0	True				
ANR	10977224	ParameterType	i_ctx_t *		10976781	0					
ANR	10977225	Identifier	i_ctx_p		10976781	1					
ANR	10977226	Parameter	bool have_x	94:27:2726:2736	10976781	1	True				
ANR	10977227	ParameterType	bool		10976781	0					
ANR	10977228	Identifier	have_x		10976781	1					
ANR	10977229	Parameter	bool have_y	94:40:2739:2749	10976781	2	True				
ANR	10977230	ParameterType	bool		10976781	0					
ANR	10977231	Identifier	have_y		10976781	1					
ANR	10977232	CFGEntryNode	ENTRY		10976781		True				
ANR	10977233	CFGExitNode	EXIT		10976781		True				
ANR	10977234	Symbol	* penum		10976781						
ANR	10977235	Symbol	code		10976781						
ANR	10977236	Symbol	num_array_get		10976781						
ANR	10977237	Symbol	& value		10976781						
ANR	10977238	Symbol	* op		10976781						
ANR	10977239	Symbol	gs_error_rangecheck		10976781						
ANR	10977240	Symbol	* values		10976781						
ANR	10977241	Symbol	values		10976781						
ANR	10977242	Symbol	penum -> text		10976781						
ANR	10977243	Symbol	op [ - 1 ] . value		10976781						
ANR	10977244	Symbol	osp		10976781						
ANR	10977245	Symbol	gs_xyshow_begin		10976781						
ANR	10977246	Symbol	gs_currentcpsimode		10976781						
ANR	10977247	Symbol	igs		10976781						
ANR	10977248	Symbol	& penum		10976781						
ANR	10977249	Symbol	r_size		10976781						
ANR	10977250	Symbol	imemory		10976781						
ANR	10977251	Symbol	gs_get_text_params		10976781						
ANR	10977252	Symbol	op [ - 1 ] . value . bytes		10976781						
ANR	10977253	Symbol	value . value		10976781						
ANR	10977254	Symbol	value		10976781						
ANR	10977255	Symbol	gs_text_count_chars		10976781						
ANR	10977256	Symbol	op		10976781						
ANR	10977257	Symbol	NULL		10976781						
ANR	10977258	Symbol	op_show_setup		10976781						
ANR	10977259	Symbol	have_y		10976781						
ANR	10977260	Symbol	ialloc_byte_array		10976781						
ANR	10977261	Symbol	value . value . realval		10976781						
ANR	10977262	Symbol	have_x		10976781						
ANR	10977263	Symbol	penum		10976781						
ANR	10977264	Symbol	format		10976781						
ANR	10977265	Symbol	i		10976781						
ANR	10977266	Symbol	num_array_size		10976781						
ANR	10977267	Symbol	value . value . intval		10976781						
ANR	10977268	Symbol	gs_error_VMerror		10976781						
ANR	10977269	Symbol	imemory_local		10976781						
ANR	10977270	Symbol	penum -> text . x_widths		10976781						
ANR	10977271	Symbol	penum -> text . y_widths		10976781						
ANR	10977272	Symbol	gs_note_error		10976781						
ANR	10977273	Symbol	CPSI_mode		10976781						
ANR	10977274	Symbol	* i		10976781						
ANR	10977275	Symbol	size		10976781						
ANR	10977276	Symbol	i_ctx_p		10976781						
ANR	10977277	Symbol	num_array_format		10976781						
ANR	10977278	Symbol	op_show_continue		10976781						
ANR	10977279	Symbol	widths_needed		10976781						
ANR	10977280	Symbol	op_show_finish_setup		10976781						
ANR	10977281	Function	zxshow	162:0:5198:5279							
ANR	10977282	FunctionDef	zxshow (i_ctx_t * i_ctx_p)		10977281	0					
ANR	10977283	CompoundStatement		164:0:5234:5279	10977281	0					
ANR	10977284	ReturnStatement	"return moveshow ( i_ctx_p , true , false ) ;"	165:4:5240:5277	10977281	0	True				
ANR	10977285	CallExpression	"moveshow ( i_ctx_p , true , false )"		10977281	0					
ANR	10977286	Callee	moveshow		10977281	0					
ANR	10977287	Identifier	moveshow		10977281	0					
ANR	10977288	ArgumentList	i_ctx_p		10977281	1					
ANR	10977289	Argument	i_ctx_p		10977281	0					
ANR	10977290	Identifier	i_ctx_p		10977281	0					
ANR	10977291	Argument	true		10977281	1					
ANR	10977292	Identifier	true		10977281	0					
ANR	10977293	Argument	false		10977281	2					
ANR	10977294	Identifier	false		10977281	0					
ANR	10977295	ReturnType	static int		10977281	1					
ANR	10977296	Identifier	zxshow		10977281	2					
ANR	10977297	ParameterList	i_ctx_t * i_ctx_p		10977281	3					
ANR	10977298	Parameter	i_ctx_t * i_ctx_p	163:7:5216:5231	10977281	0	True				
ANR	10977299	ParameterType	i_ctx_t *		10977281	0					
ANR	10977300	Identifier	i_ctx_p		10977281	1					
ANR	10977301	CFGEntryNode	ENTRY		10977281		True				
ANR	10977302	CFGExitNode	EXIT		10977281		True				
ANR	10977303	Symbol	i_ctx_p		10977281						
ANR	10977304	Symbol	true		10977281						
ANR	10977305	Symbol	false		10977281						
ANR	10977306	Symbol	moveshow		10977281						
ANR	10977307	Function	zyshow	167:0:5281:5362							
ANR	10977308	FunctionDef	zyshow (i_ctx_t * i_ctx_p)		10977307	0					
ANR	10977309	CompoundStatement		169:0:5317:5362	10977307	0					
ANR	10977310	ReturnStatement	"return moveshow ( i_ctx_p , false , true ) ;"	170:4:5323:5360	10977307	0	True				
ANR	10977311	CallExpression	"moveshow ( i_ctx_p , false , true )"		10977307	0					
ANR	10977312	Callee	moveshow		10977307	0					
ANR	10977313	Identifier	moveshow		10977307	0					
ANR	10977314	ArgumentList	i_ctx_p		10977307	1					
ANR	10977315	Argument	i_ctx_p		10977307	0					
ANR	10977316	Identifier	i_ctx_p		10977307	0					
ANR	10977317	Argument	false		10977307	1					
ANR	10977318	Identifier	false		10977307	0					
ANR	10977319	Argument	true		10977307	2					
ANR	10977320	Identifier	true		10977307	0					
ANR	10977321	ReturnType	static int		10977307	1					
ANR	10977322	Identifier	zyshow		10977307	2					
ANR	10977323	ParameterList	i_ctx_t * i_ctx_p		10977307	3					
ANR	10977324	Parameter	i_ctx_t * i_ctx_p	168:7:5299:5314	10977307	0	True				
ANR	10977325	ParameterType	i_ctx_t *		10977307	0					
ANR	10977326	Identifier	i_ctx_p		10977307	1					
ANR	10977327	CFGEntryNode	ENTRY		10977307		True				
ANR	10977328	CFGExitNode	EXIT		10977307		True				
ANR	10977329	Symbol	i_ctx_p		10977307						
ANR	10977330	Symbol	false		10977307						
ANR	10977331	Symbol	true		10977307						
ANR	10977332	Symbol	moveshow		10977307						
ANR	10977333	Function	zxyshow	172:0:5364:5445							
ANR	10977334	FunctionDef	zxyshow (i_ctx_t * i_ctx_p)		10977333	0					
ANR	10977335	CompoundStatement		174:0:5401:5445	10977333	0					
ANR	10977336	ReturnStatement	"return moveshow ( i_ctx_p , true , true ) ;"	175:4:5407:5443	10977333	0	True				
ANR	10977337	CallExpression	"moveshow ( i_ctx_p , true , true )"		10977333	0					
ANR	10977338	Callee	moveshow		10977333	0					
ANR	10977339	Identifier	moveshow		10977333	0					
ANR	10977340	ArgumentList	i_ctx_p		10977333	1					
ANR	10977341	Argument	i_ctx_p		10977333	0					
ANR	10977342	Identifier	i_ctx_p		10977333	0					
ANR	10977343	Argument	true		10977333	1					
ANR	10977344	Identifier	true		10977333	0					
ANR	10977345	Argument	true		10977333	2					
ANR	10977346	Identifier	true		10977333	0					
ANR	10977347	ReturnType	static int		10977333	1					
ANR	10977348	Identifier	zxyshow		10977333	2					
ANR	10977349	ParameterList	i_ctx_t * i_ctx_p		10977333	3					
ANR	10977350	Parameter	i_ctx_t * i_ctx_p	173:8:5383:5398	10977333	0	True				
ANR	10977351	ParameterType	i_ctx_t *		10977333	0					
ANR	10977352	Identifier	i_ctx_p		10977333	1					
ANR	10977353	CFGEntryNode	ENTRY		10977333		True				
ANR	10977354	CFGExitNode	EXIT		10977333		True				
ANR	10977355	Symbol	i_ctx_p		10977333						
ANR	10977356	Symbol	true		10977333						
ANR	10977357	Symbol	moveshow		10977333						
ANR	10977358	DeclStmt									
ANR	10977359	Decl							const op_def	const op_def [ ]	zcharx_op_defs
