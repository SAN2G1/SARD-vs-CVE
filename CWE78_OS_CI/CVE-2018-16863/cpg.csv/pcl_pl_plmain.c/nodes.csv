command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8206413	File	data/converged/CVE-2018-16863_ghostpdl/pcl_pl_plmain.c								
ANR	8206414	DeclStmt									
ANR	8206415	Decl							extern pl_interp_implementation_t	extern pl_interp_implementation_t * [ ]	pdl_implementations
ANR	8206416	DeclStmt									
ANR	8206417	Decl							const char	const char *	pl_usage
ANR	8206418	ClassDef	pl_main_instance_s	85:0:2464:3987							
ANR	8206419	DeclStmt									
ANR	8206420	Decl							gs_memory_t	gs_memory_t *	memory
ANR	8206421	DeclStmt									
ANR	8206422	Decl							long	long [ 2 ]	base_time
ANR	8206423	DeclStmt									
ANR	8206424	Decl							int	int	error_report
ANR	8206425	DeclStmt									
ANR	8206426	Decl							bool	bool	pause
ANR	8206427	DeclStmt									
ANR	8206428	Decl							int	int	first_page
ANR	8206429	DeclStmt									
ANR	8206430	Decl							int	int	last_page
ANR	8206431	DeclStmt									
ANR	8206432	Decl							gx_device	gx_device *	device
ANR	8206433	DeclStmt									
ANR	8206434	Decl							pl_interp_implementation_t	pl_interp_implementation_t *	implementation
ANR	8206435	DeclStmt									
ANR	8206436	Decl							char	char [ 6 ]	pcl_personality
ANR	8206437	DeclStmt									
ANR	8206438	Decl							bool	bool	interpolate
ANR	8206439	DeclStmt									
ANR	8206440	Decl							bool	bool	nocache
ANR	8206441	DeclStmt									
ANR	8206442	Decl							bool	bool	page_set_on_command_line
ANR	8206443	DeclStmt									
ANR	8206444	Decl							bool	bool	res_set_on_command_line
ANR	8206445	DeclStmt									
ANR	8206446	Decl							bool	bool	high_level_device
ANR	8206447	DeclStmt									
ANR	8206448	Decl							bool	bool	saved_pages_test_mode
ANR	8206449	DeclStmt									
ANR	8206450	Decl							bool	bool	pjl_from_args
ANR	8206451	DeclStmt									
ANR	8206452	Decl							int	int	scanconverter
ANR	8206453	DeclStmt									
ANR	8206454	Decl							char	char *	piccdir
ANR	8206455	DeclStmt									
ANR	8206456	Decl							char	char *	pdefault_gray_icc
ANR	8206457	DeclStmt									
ANR	8206458	Decl							char	char *	pdefault_rgb_icc
ANR	8206459	DeclStmt									
ANR	8206460	Decl							char	char *	pdefault_cmyk_icc
ANR	8206461	DeclStmt									
ANR	8206462	Decl							gs_c_param_list	gs_c_param_list	params
ANR	8206463	DeclStmt									
ANR	8206464	Decl							arg_list	arg_list	args
ANR	8206465	DeclStmt									
ANR	8206466	Decl							pl_interp_implementation_t	pl_interp_implementation_t * *	implementations
ANR	8206467	DeclStmt									
ANR	8206468	Decl							pl_interp_implementation_t	pl_interp_implementation_t *	curr_implementation
ANR	8206469	DeclStmt									
ANR	8206470	Decl							pl_interp_implementation_t	pl_interp_implementation_t *	desired_implementation
ANR	8206471	DeclStmt									
ANR	8206472	Decl							byte	byte [ 8192 ]	buf
ANR	8206473	DeclStmt									
ANR	8206474	Decl							void	void *	disp
ANR	8206475	DeclStmt									
ANR	8206476	Decl							gs_gc_root_t	gs_gc_root_t	device_root
ANR	8206477	DeclStmt									
ANR	8206478	Decl							int	"int ( gs_memory_t * mem , pl_main_instance_t * inst )"	pl_main_languages_init
ANR	8206479	DeclStmt									
ANR	8206480	Decl							pl_interp_implementation_t	"pl_interp_implementation_t * ( pl_interp_implementation_t * pjl_instance , pl_main_instance_t * pmi , pl_top_cursor_t r )"	pl_select_implementation
ANR	8206481	DeclStmt									
ANR	8206482	Decl							FILE	"FILE * ( const char * fname , void * ignore_data )"	pl_main_arg_fopen
ANR	8206483	DeclStmt									
ANR	8206484	Decl							int	"int ( pl_main_instance_t * pmi , arg_list * pal , pl_interp_implementation_t * pjl_instance )"	pl_main_process_options
ANR	8206485	DeclStmt									
ANR	8206486	Decl							pl_interp_implementation_t	"pl_interp_implementation_t * ( pl_main_instance_t * pmi , pl_interp_implementation_t * pjl_instance )"	pl_pjl_select
ANR	8206487	Function	get_device_index	151:0:4989:5417							
ANR	8206488	FunctionDef	"get_device_index (const gs_memory_t * mem , const char * value)"		8206487	0					
ANR	8206489	CompoundStatement		153:0:5068:5417	8206487	0					
ANR	8206490	Statement	const	154:4:5074:5078	8206487	0	True				
ANR	8206491	Statement	gx_device	154:10:5080:5088	8206487	1	True				
ANR	8206492	Statement	*	154:20:5090:5090	8206487	2	True				
ANR	8206493	Statement	const	154:21:5091:5095	8206487	3	True				
ANR	8206494	ExpressionStatement	* dev_list	154:27:5097:5106	8206487	4	True				
ANR	8206495	UnaryOperationExpression	* dev_list		8206487	0					
ANR	8206496	UnaryOperator	*		8206487	0					
ANR	8206497	Identifier	dev_list		8206487	1					
ANR	8206498	IdentifierDeclStatement	"int num_devs = gs_lib_device_list ( & dev_list , NULL ) ;"	155:4:5112:5162	8206487	5	True				
ANR	8206499	IdentifierDecl	"num_devs = gs_lib_device_list ( & dev_list , NULL )"		8206487	0					
ANR	8206500	IdentifierDeclType	int		8206487	0					
ANR	8206501	Identifier	num_devs		8206487	1					
ANR	8206502	AssignmentExpression	"num_devs = gs_lib_device_list ( & dev_list , NULL )"		8206487	2		=			
ANR	8206503	Identifier	num_devs		8206487	0					
ANR	8206504	CallExpression	"gs_lib_device_list ( & dev_list , NULL )"		8206487	1					
ANR	8206505	Callee	gs_lib_device_list		8206487	0					
ANR	8206506	Identifier	gs_lib_device_list		8206487	0					
ANR	8206507	ArgumentList	& dev_list		8206487	1					
ANR	8206508	Argument	& dev_list		8206487	0					
ANR	8206509	UnaryOperationExpression	& dev_list		8206487	0					
ANR	8206510	UnaryOperator	&		8206487	0					
ANR	8206511	Identifier	dev_list		8206487	1					
ANR	8206512	Argument	NULL		8206487	1					
ANR	8206513	Identifier	NULL		8206487	0					
ANR	8206514	IdentifierDeclStatement	int di ;	156:4:5168:5174	8206487	6	True				
ANR	8206515	IdentifierDecl	di		8206487	0					
ANR	8206516	IdentifierDeclType	int		8206487	0					
ANR	8206517	Identifier	di		8206487	1					
ANR	8206518	ForStatement	for ( di = 0 ; di < num_devs ; ++ di )		8206487	7					
ANR	8206519	ForInit	di = 0 ;	158:9:5186:5192	8206487	0	True				
ANR	8206520	AssignmentExpression	di = 0		8206487	0		=			
ANR	8206521	Identifier	di		8206487	0					
ANR	8206522	PrimaryExpression	0		8206487	1					
ANR	8206523	Condition	di < num_devs	158:17:5194:5206	8206487	1	True				
ANR	8206524	RelationalExpression	di < num_devs		8206487	0		<			
ANR	8206525	Identifier	di		8206487	0					
ANR	8206526	Identifier	num_devs		8206487	1					
ANR	8206527	UnaryExpression	++ di	158:32:5209:5212	8206487	2	True				
ANR	8206528	IncDec	++		8206487	0					
ANR	8206529	Identifier	di		8206487	1					
ANR	8206530	IfStatement	"if ( ! strcmp ( gs_devicename ( dev_list [ di ] ) , value ) )"		8206487	3					
ANR	8206531	Condition	"! strcmp ( gs_devicename ( dev_list [ di ] ) , value )"	159:12:5227:5269	8206487	0	True				
ANR	8206532	UnaryOperationExpression	"! strcmp ( gs_devicename ( dev_list [ di ] ) , value )"		8206487	0					
ANR	8206533	UnaryOperator	!		8206487	0					
ANR	8206534	CallExpression	"strcmp ( gs_devicename ( dev_list [ di ] ) , value )"		8206487	1					
ANR	8206535	Callee	strcmp		8206487	0					
ANR	8206536	Identifier	strcmp		8206487	0					
ANR	8206537	ArgumentList	gs_devicename ( dev_list [ di ] )		8206487	1					
ANR	8206538	Argument	gs_devicename ( dev_list [ di ] )		8206487	0					
ANR	8206539	CallExpression	gs_devicename ( dev_list [ di ] )		8206487	0					
ANR	8206540	Callee	gs_devicename		8206487	0					
ANR	8206541	Identifier	gs_devicename		8206487	0					
ANR	8206542	ArgumentList	dev_list [ di ]		8206487	1					
ANR	8206543	Argument	dev_list [ di ]		8206487	0					
ANR	8206544	ArrayIndexing	dev_list [ di ]		8206487	0					
ANR	8206545	Identifier	dev_list		8206487	0					
ANR	8206546	Identifier	di		8206487	1					
ANR	8206547	Argument	value		8206487	1					
ANR	8206548	Identifier	value		8206487	0					
ANR	8206549	BreakStatement	break ;	160:12:5284:5289	8206487	1	True				
ANR	8206550	IfStatement	if ( di == num_devs )		8206487	8					
ANR	8206551	Condition	di == num_devs	161:8:5299:5312	8206487	0	True				
ANR	8206552	EqualityExpression	di == num_devs		8206487	0		==			
ANR	8206553	Identifier	di		8206487	0					
ANR	8206554	Identifier	num_devs		8206487	1					
ANR	8206555	CompoundStatement		9:24:246:246	8206487	1					
ANR	8206556	ExpressionStatement	"errprintf ( mem , ""Unknown device name %s.\\n"" , value )"	162:8:5325:5375	8206487	0	True				
ANR	8206557	CallExpression	"errprintf ( mem , ""Unknown device name %s.\\n"" , value )"		8206487	0					
ANR	8206558	Callee	errprintf		8206487	0					
ANR	8206559	Identifier	errprintf		8206487	0					
ANR	8206560	ArgumentList	mem		8206487	1					
ANR	8206561	Argument	mem		8206487	0					
ANR	8206562	Identifier	mem		8206487	0					
ANR	8206563	Argument	"""Unknown device name %s.\\n"""		8206487	1					
ANR	8206564	PrimaryExpression	"""Unknown device name %s.\\n"""		8206487	0					
ANR	8206565	Argument	value		8206487	2					
ANR	8206566	Identifier	value		8206487	0					
ANR	8206567	ReturnStatement	return - 1 ;	163:8:5385:5394	8206487	1	True				
ANR	8206568	UnaryOperationExpression	- 1		8206487	0					
ANR	8206569	UnaryOperator	-		8206487	0					
ANR	8206570	PrimaryExpression	1		8206487	1					
ANR	8206571	ReturnStatement	return di ;	165:4:5406:5415	8206487	9	True				
ANR	8206572	Identifier	di		8206487	0					
ANR	8206573	ReturnType	static inline int		8206487	1					
ANR	8206574	Identifier	get_device_index		8206487	2					
ANR	8206575	ParameterList	"const gs_memory_t * mem , const char * value"		8206487	3					
ANR	8206576	Parameter	const gs_memory_t * mem	152:17:5024:5046	8206487	0	True				
ANR	8206577	ParameterType	const gs_memory_t *		8206487	0					
ANR	8206578	Identifier	mem		8206487	1					
ANR	8206579	Parameter	const char * value	152:42:5049:5065	8206487	1	True				
ANR	8206580	ParameterType	const char *		8206487	0					
ANR	8206581	Identifier	value		8206487	1					
ANR	8206582	CFGEntryNode	ENTRY		8206487		True				
ANR	8206583	CFGExitNode	EXIT		8206487		True				
ANR	8206584	Symbol	* dev_list		8206487						
ANR	8206585	Symbol	strcmp		8206487						
ANR	8206586	Symbol	num_devs		8206487						
ANR	8206587	Symbol	NULL		8206487						
ANR	8206588	Symbol	mem		8206487						
ANR	8206589	Symbol	di		8206487						
ANR	8206590	Symbol	* di		8206487						
ANR	8206591	Symbol	& dev_list		8206487						
ANR	8206592	Symbol	gs_devicename		8206487						
ANR	8206593	Symbol	dev_list		8206487						
ANR	8206594	Symbol	value		8206487						
ANR	8206595	Symbol	gs_lib_device_list		8206487						
ANR	8206596	Function	pl_main_set_display_callback	168:0:5420:5538							
ANR	8206597	FunctionDef	"pl_main_set_display_callback (pl_main_instance_t * inst , void * callback)"		8206596	0					
ANR	8206598	CompoundStatement		170:0:5495:5538	8206596	0					
ANR	8206599	ExpressionStatement	inst -> disp = callback	171:4:5501:5522	8206596	0	True				
ANR	8206600	AssignmentExpression	inst -> disp = callback		8206596	0		=			
ANR	8206601	PtrMemberAccess	inst -> disp		8206596	0					
ANR	8206602	Identifier	inst		8206596	0					
ANR	8206603	Identifier	disp		8206596	1					
ANR	8206604	Identifier	callback		8206596	1					
ANR	8206605	ReturnStatement	return 0 ;	172:4:5528:5536	8206596	1	True				
ANR	8206606	PrimaryExpression	0		8206596	0					
ANR	8206607	ReturnType	int		8206596	1					
ANR	8206608	Identifier	pl_main_set_display_callback		8206596	2					
ANR	8206609	ParameterList	"pl_main_instance_t * inst , void * callback"		8206596	3					
ANR	8206610	Parameter	pl_main_instance_t * inst	169:29:5453:5476	8206596	0	True				
ANR	8206611	ParameterType	pl_main_instance_t *		8206596	0					
ANR	8206612	Identifier	inst		8206596	1					
ANR	8206613	Parameter	void * callback	169:55:5479:5492	8206596	1	True				
ANR	8206614	ParameterType	void *		8206596	0					
ANR	8206615	Identifier	callback		8206596	1					
ANR	8206616	CFGEntryNode	ENTRY		8206596		True				
ANR	8206617	CFGExitNode	EXIT		8206596		True				
ANR	8206618	Symbol	* inst		8206596						
ANR	8206619	Symbol	inst		8206596						
ANR	8206620	Symbol	callback		8206596						
ANR	8206621	Symbol	inst -> disp		8206596						
ANR	8206622	Function	pl_main_init_with_args	175:0:5541:8318							
ANR	8206623	FunctionDef	"pl_main_init_with_args (pl_main_instance_t * inst , int argc , char * argv [ ])"		8206622	0					
ANR	8206624	CompoundStatement		177:0:5618:8318	8206622	0					
ANR	8206625	IdentifierDeclStatement	gs_memory_t * mem = inst -> memory ;	178:4:5624:5655	8206622	0	True				
ANR	8206626	IdentifierDecl	* mem = inst -> memory		8206622	0					
ANR	8206627	IdentifierDeclType	gs_memory_t *		8206622	0					
ANR	8206628	Identifier	mem		8206622	1					
ANR	8206629	AssignmentExpression	* mem = inst -> memory		8206622	2		=			
ANR	8206630	Identifier	mem		8206622	0					
ANR	8206631	PtrMemberAccess	inst -> memory		8206622	1					
ANR	8206632	Identifier	inst		8206622	0					
ANR	8206633	Identifier	memory		8206622	1					
ANR	8206634	IdentifierDeclStatement	"int ( * arg_get_codepoint ) ( FILE * file , const char * * astr ) = NULL ;"	179:4:5661:5725	8206622	1	True				
ANR	8206635	IdentifierDecl	"( * arg_get_codepoint ) ( FILE * file , const char * * astr ) = NULL"		8206622	0					
ANR	8206636	IdentifierDeclType	"int ( * ) ( FILE * file , const char * * astr )"		8206622	0					
ANR	8206637	Identifier	arg_get_codepoint		8206622	1					
ANR	8206638	Identifier	file		8206622	2					
ANR	8206639	Identifier	astr		8206622	3					
ANR	8206640	AssignmentExpression	"( * arg_get_codepoint ) ( FILE * file , const char * * astr ) = NULL"		8206622	4		=			
ANR	8206641	Identifier	NULL		8206622	0					
ANR	8206642	Identifier	NULL		8206622	1					
ANR	8206643	IdentifierDeclStatement	pl_interp_implementation_t * pjli ;	180:4:5731:5763	8206622	2	True				
ANR	8206644	IdentifierDecl	* pjli		8206622	0					
ANR	8206645	IdentifierDeclType	pl_interp_implementation_t *		8206622	0					
ANR	8206646	Identifier	pjli		8206622	1					
ANR	8206647	ExpressionStatement	gp_init ( )	182:4:5774:5783	8206622	3	True				
ANR	8206648	CallExpression	gp_init ( )		8206622	0					
ANR	8206649	Callee	gp_init		8206622	0					
ANR	8206650	Identifier	gp_init		8206622	0					
ANR	8206651	ArgumentList			8206622	1					
ANR	8206652	ExpressionStatement	"VALGRIND_HG_DISABLE_CHECKING ( gs_debug , 128 )"	187:4:6017:6060	8206622	4	True				
ANR	8206653	CallExpression	"VALGRIND_HG_DISABLE_CHECKING ( gs_debug , 128 )"		8206622	0					
ANR	8206654	Callee	VALGRIND_HG_DISABLE_CHECKING		8206622	0					
ANR	8206655	Identifier	VALGRIND_HG_DISABLE_CHECKING		8206622	0					
ANR	8206656	ArgumentList	gs_debug		8206622	1					
ANR	8206657	Argument	gs_debug		8206622	0					
ANR	8206658	Identifier	gs_debug		8206622	0					
ANR	8206659	Argument	128		8206622	1					
ANR	8206660	PrimaryExpression	128		8206622	0					
ANR	8206661	ExpressionStatement	"memset ( gs_debug , 0 , 128 )"	189:4:6073:6097	8206622	5	True				
ANR	8206662	CallExpression	"memset ( gs_debug , 0 , 128 )"		8206622	0					
ANR	8206663	Callee	memset		8206622	0					
ANR	8206664	Identifier	memset		8206622	0					
ANR	8206665	ArgumentList	gs_debug		8206622	1					
ANR	8206666	Argument	gs_debug		8206622	0					
ANR	8206667	Identifier	gs_debug		8206622	0					
ANR	8206668	Argument	0		8206622	1					
ANR	8206669	PrimaryExpression	0		8206622	0					
ANR	8206670	Argument	128		8206622	2					
ANR	8206671	PrimaryExpression	128		8206622	0					
ANR	8206672	ExpressionStatement	gs_log_errors = 0	190:4:6103:6120	8206622	6	True				
ANR	8206673	AssignmentExpression	gs_log_errors = 0		8206622	0		=			
ANR	8206674	Identifier	gs_log_errors		8206622	0					
ANR	8206675	PrimaryExpression	0		8206622	1					
ANR	8206676	IfStatement	if ( gs_lib_init1 ( mem ) < 0 )		8206622	7					
ANR	8206677	Condition	gs_lib_init1 ( mem ) < 0	192:8:6131:6151	8206622	0	True				
ANR	8206678	RelationalExpression	gs_lib_init1 ( mem ) < 0		8206622	0		<			
ANR	8206679	CallExpression	gs_lib_init1 ( mem )		8206622	0					
ANR	8206680	Callee	gs_lib_init1		8206622	0					
ANR	8206681	Identifier	gs_lib_init1		8206622	0					
ANR	8206682	ArgumentList	mem		8206622	1					
ANR	8206683	Argument	mem		8206622	0					
ANR	8206684	Identifier	mem		8206622	0					
ANR	8206685	PrimaryExpression	0		8206622	1					
ANR	8206686	ReturnStatement	return - 1 ;	193:8:6162:6171	8206622	1	True				
ANR	8206687	UnaryOperationExpression	- 1		8206622	0					
ANR	8206688	UnaryOperator	-		8206622	0					
ANR	8206689	PrimaryExpression	1		8206622	1					
ANR	8206690	CompoundStatement		19:4:559:559	8206622	8					
ANR	8206691	IfStatement	if ( gs_iodev_init ( mem ) < 0 )		8206622	0					
ANR	8206692	Condition	gs_iodev_init ( mem ) < 0	203:12:6442:6463	8206622	0	True				
ANR	8206693	RelationalExpression	gs_iodev_init ( mem ) < 0		8206622	0		<			
ANR	8206694	CallExpression	gs_iodev_init ( mem )		8206622	0					
ANR	8206695	Callee	gs_iodev_init		8206622	0					
ANR	8206696	Identifier	gs_iodev_init		8206622	0					
ANR	8206697	ArgumentList	mem		8206622	1					
ANR	8206698	Argument	mem		8206622	0					
ANR	8206699	Identifier	mem		8206622	0					
ANR	8206700	PrimaryExpression	0		8206622	1					
ANR	8206701	ReturnStatement	return gs_error_Fatal ;	204:12:6478:6499	8206622	1	True				
ANR	8206702	Identifier	gs_error_Fatal		8206622	0					
ANR	8206703	ExpressionStatement	gp_get_realtime ( inst -> base_time )	207:4:6516:6548	8206622	9	True				
ANR	8206704	CallExpression	gp_get_realtime ( inst -> base_time )		8206622	0					
ANR	8206705	Callee	gp_get_realtime		8206622	0					
ANR	8206706	Identifier	gp_get_realtime		8206622	0					
ANR	8206707	ArgumentList	inst -> base_time		8206622	1					
ANR	8206708	Argument	inst -> base_time		8206622	0					
ANR	8206709	PtrMemberAccess	inst -> base_time		8206622	0					
ANR	8206710	Identifier	inst		8206622	0					
ANR	8206711	Identifier	base_time		8206622	1					
ANR	8206712	ExpressionStatement	"gs_c_param_list_write ( & inst -> params , mem )"	208:4:6554:6595	8206622	10	True				
ANR	8206713	CallExpression	"gs_c_param_list_write ( & inst -> params , mem )"		8206622	0					
ANR	8206714	Callee	gs_c_param_list_write		8206622	0					
ANR	8206715	Identifier	gs_c_param_list_write		8206622	0					
ANR	8206716	ArgumentList	& inst -> params		8206622	1					
ANR	8206717	Argument	& inst -> params		8206622	0					
ANR	8206718	UnaryOperationExpression	& inst -> params		8206622	0					
ANR	8206719	UnaryOperator	&		8206622	0					
ANR	8206720	PtrMemberAccess	inst -> params		8206622	1					
ANR	8206721	Identifier	inst		8206622	0					
ANR	8206722	Identifier	params		8206622	1					
ANR	8206723	Argument	mem		8206622	1					
ANR	8206724	Identifier	mem		8206622	0					
ANR	8206725	ExpressionStatement	"gs_param_list_set_persistent_keys ( ( gs_param_list * ) & inst -> params , false )"	209:4:6601:6673	8206622	11	True				
ANR	8206726	CallExpression	"gs_param_list_set_persistent_keys ( ( gs_param_list * ) & inst -> params , false )"		8206622	0					
ANR	8206727	Callee	gs_param_list_set_persistent_keys		8206622	0					
ANR	8206728	Identifier	gs_param_list_set_persistent_keys		8206622	0					
ANR	8206729	ArgumentList	( gs_param_list * ) & inst -> params		8206622	1					
ANR	8206730	Argument	( gs_param_list * ) & inst -> params		8206622	0					
ANR	8206731	CastExpression	( gs_param_list * ) & inst -> params		8206622	0					
ANR	8206732	CastTarget	gs_param_list *		8206622	0					
ANR	8206733	UnaryOperationExpression	& inst -> params		8206622	1					
ANR	8206734	UnaryOperator	&		8206622	0					
ANR	8206735	PtrMemberAccess	inst -> params		8206622	1					
ANR	8206736	Identifier	inst		8206622	0					
ANR	8206737	Identifier	params		8206622	1					
ANR	8206738	Argument	false		8206622	1					
ANR	8206739	Identifier	false		8206622	0					
ANR	8206740	ExpressionStatement	arg_get_codepoint = gp_local_arg_encoding_get_codepoint	212:4:6726:6781	8206622	12	True				
ANR	8206741	AssignmentExpression	arg_get_codepoint = gp_local_arg_encoding_get_codepoint		8206622	0		=			
ANR	8206742	Identifier	arg_get_codepoint		8206622	0					
ANR	8206743	Identifier	gp_local_arg_encoding_get_codepoint		8206622	1					
ANR	8206744	ExpressionStatement	"arg_init ( & inst -> args , ( const char * * ) argv , argc , pl_main_arg_fopen , NULL , arg_get_codepoint , mem )"	216:4:6830:6940	8206622	13	True				
ANR	8206745	CallExpression	"arg_init ( & inst -> args , ( const char * * ) argv , argc , pl_main_arg_fopen , NULL , arg_get_codepoint , mem )"		8206622	0					
ANR	8206746	Callee	arg_init		8206622	0					
ANR	8206747	Identifier	arg_init		8206622	0					
ANR	8206748	ArgumentList	& inst -> args		8206622	1					
ANR	8206749	Argument	& inst -> args		8206622	0					
ANR	8206750	UnaryOperationExpression	& inst -> args		8206622	0					
ANR	8206751	UnaryOperator	&		8206622	0					
ANR	8206752	PtrMemberAccess	inst -> args		8206622	1					
ANR	8206753	Identifier	inst		8206622	0					
ANR	8206754	Identifier	args		8206622	1					
ANR	8206755	Argument	( const char * * ) argv		8206622	1					
ANR	8206756	CastExpression	( const char * * ) argv		8206622	0					
ANR	8206757	CastTarget	const char * *		8206622	0					
ANR	8206758	Identifier	argv		8206622	1					
ANR	8206759	Argument	argc		8206622	2					
ANR	8206760	Identifier	argc		8206622	0					
ANR	8206761	Argument	pl_main_arg_fopen		8206622	3					
ANR	8206762	Identifier	pl_main_arg_fopen		8206622	0					
ANR	8206763	Argument	NULL		8206622	4					
ANR	8206764	Identifier	NULL		8206622	0					
ANR	8206765	Argument	arg_get_codepoint		8206622	5					
ANR	8206766	Identifier	arg_get_codepoint		8206622	0					
ANR	8206767	Argument	mem		8206622	6					
ANR	8206768	Identifier	mem		8206622	0					
ANR	8206769	IfStatement	"if ( pl_main_languages_init ( mem , inst ) < 0 )"		8206622	14					
ANR	8206770	Condition	"pl_main_languages_init ( mem , inst ) < 0"	220:8:6987:7023	8206622	0	True				
ANR	8206771	RelationalExpression	"pl_main_languages_init ( mem , inst ) < 0"		8206622	0		<			
ANR	8206772	CallExpression	"pl_main_languages_init ( mem , inst )"		8206622	0					
ANR	8206773	Callee	pl_main_languages_init		8206622	0					
ANR	8206774	Identifier	pl_main_languages_init		8206622	0					
ANR	8206775	ArgumentList	mem		8206622	1					
ANR	8206776	Argument	mem		8206622	0					
ANR	8206777	Identifier	mem		8206622	0					
ANR	8206778	Argument	inst		8206622	1					
ANR	8206779	Identifier	inst		8206622	0					
ANR	8206780	PrimaryExpression	0		8206622	1					
ANR	8206781	CompoundStatement		44:47:1407:1407	8206622	1					
ANR	8206782	ReturnStatement	return gs_error_Fatal ;	221:8:7036:7057	8206622	0	True				
ANR	8206783	Identifier	gs_error_Fatal		8206622	0					
ANR	8206784	ExpressionStatement	inst -> curr_implementation = pjli = inst -> implementations [ 0 ]	224:4:7070:7129	8206622	15	True				
ANR	8206785	AssignmentExpression	inst -> curr_implementation = pjli = inst -> implementations [ 0 ]		8206622	0		=			
ANR	8206786	PtrMemberAccess	inst -> curr_implementation		8206622	0					
ANR	8206787	Identifier	inst		8206622	0					
ANR	8206788	Identifier	curr_implementation		8206622	1					
ANR	8206789	AssignmentExpression	pjli = inst -> implementations [ 0 ]		8206622	1		=			
ANR	8206790	Identifier	pjli		8206622	0					
ANR	8206791	ArrayIndexing	inst -> implementations [ 0 ]		8206622	1					
ANR	8206792	PtrMemberAccess	inst -> implementations		8206622	0					
ANR	8206793	Identifier	inst		8206622	0					
ANR	8206794	Identifier	implementations		8206622	1					
ANR	8206795	PrimaryExpression	0		8206622	1					
ANR	8206796	IfStatement	if ( pl_init_job ( pjli ) < 0 )		8206622	16					
ANR	8206797	Condition	pl_init_job ( pjli ) < 0	227:8:7200:7220	8206622	0	True				
ANR	8206798	RelationalExpression	pl_init_job ( pjli ) < 0		8206622	0		<			
ANR	8206799	CallExpression	pl_init_job ( pjli )		8206622	0					
ANR	8206800	Callee	pl_init_job		8206622	0					
ANR	8206801	Identifier	pl_init_job		8206622	0					
ANR	8206802	ArgumentList	pjli		8206622	1					
ANR	8206803	Argument	pjli		8206622	0					
ANR	8206804	Identifier	pjli		8206622	0					
ANR	8206805	PrimaryExpression	0		8206622	1					
ANR	8206806	CompoundStatement		51:31:1604:1604	8206622	1					
ANR	8206807	ReturnStatement	return gs_error_Fatal ;	228:8:7233:7254	8206622	0	True				
ANR	8206808	Identifier	gs_error_Fatal		8206622	0					
ANR	8206809	IfStatement	"if ( argc == 1 || pl_main_process_options ( inst , & inst -> args , pjli ) < 0 )"		8206622	17					
ANR	8206810	Condition	"argc == 1 || pl_main_process_options ( inst , & inst -> args , pjli ) < 0"	231:8:7271:7407	8206622	0	True				
ANR	8206811	OrExpression	"argc == 1 || pl_main_process_options ( inst , & inst -> args , pjli ) < 0"		8206622	0		||			
ANR	8206812	EqualityExpression	argc == 1		8206622	0		==			
ANR	8206813	Identifier	argc		8206622	0					
ANR	8206814	PrimaryExpression	1		8206622	1					
ANR	8206815	RelationalExpression	"pl_main_process_options ( inst , & inst -> args , pjli ) < 0"		8206622	1		<			
ANR	8206816	CallExpression	"pl_main_process_options ( inst , & inst -> args , pjli )"		8206622	0					
ANR	8206817	Callee	pl_main_process_options		8206622	0					
ANR	8206818	Identifier	pl_main_process_options		8206622	0					
ANR	8206819	ArgumentList	inst		8206622	1					
ANR	8206820	Argument	inst		8206622	0					
ANR	8206821	Identifier	inst		8206622	0					
ANR	8206822	Argument	& inst -> args		8206622	1					
ANR	8206823	UnaryOperationExpression	& inst -> args		8206622	0					
ANR	8206824	UnaryOperator	&		8206622	0					
ANR	8206825	PtrMemberAccess	inst -> args		8206622	1					
ANR	8206826	Identifier	inst		8206622	0					
ANR	8206827	Identifier	args		8206622	1					
ANR	8206828	Argument	pjli		8206622	2					
ANR	8206829	Identifier	pjli		8206622	0					
ANR	8206830	PrimaryExpression	0		8206622	1					
ANR	8206831	CompoundStatement		61:8:1861:1887	8206622	1					
ANR	8206832	IdentifierDeclStatement	int i ;	236:8:7465:7470	8206622	0	True				
ANR	8206833	IdentifierDecl	i		8206622	0					
ANR	8206834	IdentifierDeclType	int		8206622	0					
ANR	8206835	Identifier	i		8206622	1					
ANR	8206836	IdentifierDeclStatement	const gx_device * * dev_list ;	237:8:7480:7506	8206622	1	True				
ANR	8206837	IdentifierDecl	* * dev_list		8206622	0					
ANR	8206838	IdentifierDeclType	const gx_device * *		8206622	0					
ANR	8206839	Identifier	dev_list		8206622	1					
ANR	8206840	Statement	int	238:8:7516:7518	8206622	2	True				
ANR	8206841	Statement	num_devs	238:12:7520:7527	8206622	3	True				
ANR	8206842	Statement	=	238:21:7529:7529	8206622	4	True				
ANR	8206843	Statement	gs_lib_device_list	239:12:7543:7560	8206622	5	True				
ANR	8206844	Statement	(	239:30:7561:7561	8206622	6	True				
ANR	8206845	Statement	(	239:31:7562:7562	8206622	7	True				
ANR	8206846	Statement	const	239:32:7563:7567	8206622	8	True				
ANR	8206847	Statement	gx_device	239:38:7569:7577	8206622	9	True				
ANR	8206848	Statement	*	239:48:7579:7579	8206622	10	True				
ANR	8206849	Statement	const	239:50:7581:7585	8206622	11	True				
ANR	8206850	Statement	*	239:56:7587:7587	8206622	12	True				
ANR	8206851	Statement	*	239:57:7588:7588	8206622	13	True				
ANR	8206852	Statement	)	239:58:7589:7589	8206622	14	True				
ANR	8206853	Statement	&	239:59:7590:7590	8206622	15	True				
ANR	8206854	Statement	dev_list	239:60:7591:7598	8206622	16	True				
ANR	8206855	Statement	","	239:68:7599:7599	8206622	17	True				
ANR	8206856	Statement	NULL	240:31:7632:7635	8206622	18	True				
ANR	8206857	Statement	)	240:35:7636:7636	8206622	19	True				
ANR	8206858	ExpressionStatement		240:36:7637:7637	8206622	20	True				
ANR	8206859	ExpressionStatement	"errprintf ( mem , pl_usage , argv [ 0 ] )"	241:8:7647:7680	8206622	21	True				
ANR	8206860	CallExpression	"errprintf ( mem , pl_usage , argv [ 0 ] )"		8206622	0					
ANR	8206861	Callee	errprintf		8206622	0					
ANR	8206862	Identifier	errprintf		8206622	0					
ANR	8206863	ArgumentList	mem		8206622	1					
ANR	8206864	Argument	mem		8206622	0					
ANR	8206865	Identifier	mem		8206622	0					
ANR	8206866	Argument	pl_usage		8206622	1					
ANR	8206867	Identifier	pl_usage		8206622	0					
ANR	8206868	Argument	argv [ 0 ]		8206622	2					
ANR	8206869	ArrayIndexing	argv [ 0 ]		8206622	0					
ANR	8206870	Identifier	argv		8206622	0					
ANR	8206871	PrimaryExpression	0		8206622	1					
ANR	8206872	IfStatement	if ( pl_characteristics ( pjli ) -> version )		8206622	22					
ANR	8206873	Condition	pl_characteristics ( pjli ) -> version	243:12:7695:7727	8206622	0	True				
ANR	8206874	PtrMemberAccess	pl_characteristics ( pjli ) -> version		8206622	0					
ANR	8206875	CallExpression	pl_characteristics ( pjli )		8206622	0					
ANR	8206876	Callee	pl_characteristics		8206622	0					
ANR	8206877	Identifier	pl_characteristics		8206622	0					
ANR	8206878	ArgumentList	pjli		8206622	1					
ANR	8206879	Argument	pjli		8206622	0					
ANR	8206880	Identifier	pjli		8206622	0					
ANR	8206881	Identifier	version		8206622	1					
ANR	8206882	ExpressionStatement	"errprintf ( mem , ""Version: %s\\n"" , pl_characteristics ( pjli ) -> version )"	244:12:7742:7830	8206622	1	True				
ANR	8206883	CallExpression	"errprintf ( mem , ""Version: %s\\n"" , pl_characteristics ( pjli ) -> version )"		8206622	0					
ANR	8206884	Callee	errprintf		8206622	0					
ANR	8206885	Identifier	errprintf		8206622	0					
ANR	8206886	ArgumentList	mem		8206622	1					
ANR	8206887	Argument	mem		8206622	0					
ANR	8206888	Identifier	mem		8206622	0					
ANR	8206889	Argument	"""Version: %s\\n"""		8206622	1					
ANR	8206890	PrimaryExpression	"""Version: %s\\n"""		8206622	0					
ANR	8206891	Argument	pl_characteristics ( pjli ) -> version		8206622	2					
ANR	8206892	PtrMemberAccess	pl_characteristics ( pjli ) -> version		8206622	0					
ANR	8206893	CallExpression	pl_characteristics ( pjli )		8206622	0					
ANR	8206894	Callee	pl_characteristics		8206622	0					
ANR	8206895	Identifier	pl_characteristics		8206622	0					
ANR	8206896	ArgumentList	pjli		8206622	1					
ANR	8206897	Argument	pjli		8206622	0					
ANR	8206898	Identifier	pjli		8206622	0					
ANR	8206899	Identifier	version		8206622	1					
ANR	8206900	IfStatement	if ( pl_characteristics ( pjli ) -> build_date )		8206622	23					
ANR	8206901	Condition	pl_characteristics ( pjli ) -> build_date	246:12:7844:7879	8206622	0	True				
ANR	8206902	PtrMemberAccess	pl_characteristics ( pjli ) -> build_date		8206622	0					
ANR	8206903	CallExpression	pl_characteristics ( pjli )		8206622	0					
ANR	8206904	Callee	pl_characteristics		8206622	0					
ANR	8206905	Identifier	pl_characteristics		8206622	0					
ANR	8206906	ArgumentList	pjli		8206622	1					
ANR	8206907	Argument	pjli		8206622	0					
ANR	8206908	Identifier	pjli		8206622	0					
ANR	8206909	Identifier	build_date		8206622	1					
ANR	8206910	ExpressionStatement	"errprintf ( mem , ""Build date: %s\\n"" , pl_characteristics ( pjli ) -> build_date )"	247:12:7894:8011	8206622	1	True				
ANR	8206911	CallExpression	"errprintf ( mem , ""Build date: %s\\n"" , pl_characteristics ( pjli ) -> build_date )"		8206622	0					
ANR	8206912	Callee	errprintf		8206622	0					
ANR	8206913	Identifier	errprintf		8206622	0					
ANR	8206914	ArgumentList	mem		8206622	1					
ANR	8206915	Argument	mem		8206622	0					
ANR	8206916	Identifier	mem		8206622	0					
ANR	8206917	Argument	"""Build date: %s\\n"""		8206622	1					
ANR	8206918	PrimaryExpression	"""Build date: %s\\n"""		8206622	0					
ANR	8206919	Argument	pl_characteristics ( pjli ) -> build_date		8206622	2					
ANR	8206920	PtrMemberAccess	pl_characteristics ( pjli ) -> build_date		8206622	0					
ANR	8206921	CallExpression	pl_characteristics ( pjli )		8206622	0					
ANR	8206922	Callee	pl_characteristics		8206622	0					
ANR	8206923	Identifier	pl_characteristics		8206622	0					
ANR	8206924	ArgumentList	pjli		8206622	1					
ANR	8206925	Argument	pjli		8206622	0					
ANR	8206926	Identifier	pjli		8206622	0					
ANR	8206927	Identifier	build_date		8206622	1					
ANR	8206928	ExpressionStatement	"errprintf ( mem , ""Devices:"" )"	250:8:8021:8047	8206622	24	True				
ANR	8206929	CallExpression	"errprintf ( mem , ""Devices:"" )"		8206622	0					
ANR	8206930	Callee	errprintf		8206622	0					
ANR	8206931	Identifier	errprintf		8206622	0					
ANR	8206932	ArgumentList	mem		8206622	1					
ANR	8206933	Argument	mem		8206622	0					
ANR	8206934	Identifier	mem		8206622	0					
ANR	8206935	Argument	"""Devices:"""		8206622	1					
ANR	8206936	PrimaryExpression	"""Devices:"""		8206622	0					
ANR	8206937	ForStatement	for ( i = 0 ; i < num_devs ; ++ i )		8206622	25					
ANR	8206938	ForInit	i = 0 ;	251:13:8062:8067	8206622	0	True				
ANR	8206939	AssignmentExpression	i = 0		8206622	0		=			
ANR	8206940	Identifier	i		8206622	0					
ANR	8206941	PrimaryExpression	0		8206622	1					
ANR	8206942	Condition	i < num_devs	251:20:8069:8080	8206622	1	True				
ANR	8206943	RelationalExpression	i < num_devs		8206622	0		<			
ANR	8206944	Identifier	i		8206622	0					
ANR	8206945	Identifier	num_devs		8206622	1					
ANR	8206946	UnaryExpression	++ i	251:34:8083:8085	8206622	2	True				
ANR	8206947	IncDec	++		8206622	0					
ANR	8206948	Identifier	i		8206622	1					
ANR	8206949	CompoundStatement		75:39:2469:2469	8206622	3					
ANR	8206950	IfStatement	if ( ( ( i + 1 ) ) % 9 == 0 )		8206622	0					
ANR	8206951	Condition	( ( i + 1 ) ) % 9 == 0	252:16:8106:8123	8206622	0	True				
ANR	8206952	EqualityExpression	( ( i + 1 ) ) % 9 == 0		8206622	0		==			
ANR	8206953	MultiplicativeExpression	( ( i + 1 ) ) % 9		8206622	0		%			
ANR	8206954	AdditiveExpression	i + 1		8206622	0		+			
ANR	8206955	Identifier	i		8206622	0					
ANR	8206956	PrimaryExpression	1		8206622	1					
ANR	8206957	PrimaryExpression	9		8206622	1					
ANR	8206958	PrimaryExpression	0		8206622	1					
ANR	8206959	ExpressionStatement	"errprintf ( mem , ""\\n"" )"	253:16:8142:8162	8206622	1	True				
ANR	8206960	CallExpression	"errprintf ( mem , ""\\n"" )"		8206622	0					
ANR	8206961	Callee	errprintf		8206622	0					
ANR	8206962	Identifier	errprintf		8206622	0					
ANR	8206963	ArgumentList	mem		8206622	1					
ANR	8206964	Argument	mem		8206622	0					
ANR	8206965	Identifier	mem		8206622	0					
ANR	8206966	Argument	"""\\n"""		8206622	1					
ANR	8206967	PrimaryExpression	"""\\n"""		8206622	0					
ANR	8206968	ExpressionStatement	"errprintf ( mem , "" %s"" , gs_devicename ( dev_list [ i ] ) )"	254:12:8176:8225	8206622	1	True				
ANR	8206969	CallExpression	"errprintf ( mem , "" %s"" , gs_devicename ( dev_list [ i ] ) )"		8206622	0					
ANR	8206970	Callee	errprintf		8206622	0					
ANR	8206971	Identifier	errprintf		8206622	0					
ANR	8206972	ArgumentList	mem		8206622	1					
ANR	8206973	Argument	mem		8206622	0					
ANR	8206974	Identifier	mem		8206622	0					
ANR	8206975	Argument	""" %s"""		8206622	1					
ANR	8206976	PrimaryExpression	""" %s"""		8206622	0					
ANR	8206977	Argument	gs_devicename ( dev_list [ i ] )		8206622	2					
ANR	8206978	CallExpression	gs_devicename ( dev_list [ i ] )		8206622	0					
ANR	8206979	Callee	gs_devicename		8206622	0					
ANR	8206980	Identifier	gs_devicename		8206622	0					
ANR	8206981	ArgumentList	dev_list [ i ]		8206622	1					
ANR	8206982	Argument	dev_list [ i ]		8206622	0					
ANR	8206983	ArrayIndexing	dev_list [ i ]		8206622	0					
ANR	8206984	Identifier	dev_list		8206622	0					
ANR	8206985	Identifier	i		8206622	1					
ANR	8206986	ExpressionStatement	"errprintf ( mem , ""\\n"" )"	256:8:8245:8265	8206622	26	True				
ANR	8206987	CallExpression	"errprintf ( mem , ""\\n"" )"		8206622	0					
ANR	8206988	Callee	errprintf		8206622	0					
ANR	8206989	Identifier	errprintf		8206622	0					
ANR	8206990	ArgumentList	mem		8206622	1					
ANR	8206991	Argument	mem		8206622	0					
ANR	8206992	Identifier	mem		8206622	0					
ANR	8206993	Argument	"""\\n"""		8206622	1					
ANR	8206994	PrimaryExpression	"""\\n"""		8206622	0					
ANR	8206995	ReturnStatement	return gs_error_Fatal ;	257:8:8275:8296	8206622	27	True				
ANR	8206996	Identifier	gs_error_Fatal		8206622	0					
ANR	8206997	ReturnStatement	return 0 ;	259:4:8308:8316	8206622	18	True				
ANR	8206998	PrimaryExpression	0		8206622	0					
ANR	8206999	ReturnType	int		8206622	1					
ANR	8207000	Identifier	pl_main_init_with_args		8206622	2					
ANR	8207001	ParameterList	"pl_main_instance_t * inst , int argc , char * argv [ ]"		8206622	3					
ANR	8207002	Parameter	pl_main_instance_t * inst	176:23:5568:5591	8206622	0	True				
ANR	8207003	ParameterType	pl_main_instance_t *		8206622	0					
ANR	8207004	Identifier	inst		8206622	1					
ANR	8207005	Parameter	int argc	176:49:5594:5601	8206622	1	True				
ANR	8207006	ParameterType	int		8206622	0					
ANR	8207007	Identifier	argc		8206622	1					
ANR	8207008	Parameter	char * argv [ ]	176:59:5604:5615	8206622	2	True				
ANR	8207009	ParameterType	char * [ ]		8206622	0					
ANR	8207010	Identifier	argv		8206622	1					
ANR	8207011	CFGEntryNode	ENTRY		8206622		True				
ANR	8207012	CFGExitNode	EXIT		8206622		True				
ANR	8207013	Symbol	& inst -> params		8206622						
ANR	8207014	Symbol	pjli		8206622						
ANR	8207015	Symbol	& inst -> args		8206622						
ANR	8207016	Symbol	pl_init_job		8206622						
ANR	8207017	Symbol	pl_characteristics ( pjli ) -> build_date		8206622						
ANR	8207018	Symbol	* argv		8206622						
ANR	8207019	Symbol	argv		8206622						
ANR	8207020	Symbol	inst -> memory		8206622						
ANR	8207021	Symbol	pl_characteristics		8206622						
ANR	8207022	Symbol	gs_log_errors		8206622						
ANR	8207023	Symbol	* dev_list		8206622						
ANR	8207024	Symbol	gs_debug		8206622						
ANR	8207025	Symbol	gs_iodev_init		8206622						
ANR	8207026	Symbol	mem		8206622						
ANR	8207027	Symbol	gp_local_arg_encoding_get_codepoint		8206622						
ANR	8207028	Symbol	dev_list		8206622						
ANR	8207029	Symbol	* inst -> implementations		8206622						
ANR	8207030	Symbol	argc		8206622						
ANR	8207031	Symbol	gs_error_Fatal		8206622						
ANR	8207032	Symbol	pl_main_languages_init		8206622						
ANR	8207033	Symbol	* inst		8206622						
ANR	8207034	Symbol	NULL		8206622						
ANR	8207035	Symbol	pl_characteristics ( pjli ) -> version		8206622						
ANR	8207036	Symbol	pl_main_arg_fopen		8206622						
ANR	8207037	Symbol	inst -> implementations		8206622						
ANR	8207038	Symbol	arg_get_codepoint		8206622						
ANR	8207039	Symbol	false		8206622						
ANR	8207040	Symbol	i		8206622						
ANR	8207041	Symbol	* * inst		8206622						
ANR	8207042	Symbol	gs_devicename		8206622						
ANR	8207043	Symbol	num_devs		8206622						
ANR	8207044	Symbol	* i		8206622						
ANR	8207045	Symbol	pl_main_process_options		8206622						
ANR	8207046	Symbol	inst		8206622						
ANR	8207047	Symbol	inst -> base_time		8206622						
ANR	8207048	Symbol	pl_usage		8206622						
ANR	8207049	Symbol	* pl_characteristics		8206622						
ANR	8207050	Symbol	inst -> curr_implementation		8206622						
ANR	8207051	Symbol	gs_lib_init1		8206622						
ANR	8207052	Function	pl_main_run_string_begin	263:0:8322:8383							
ANR	8207053	FunctionDef	pl_main_run_string_begin (void * instance)		8207052	0					
ANR	8207054	CompoundStatement		265:0:8367:8383	8207052	0					
ANR	8207055	ReturnStatement	return 0 ;	266:4:8373:8381	8207052	0	True				
ANR	8207056	PrimaryExpression	0		8207052	0					
ANR	8207057	ReturnType	int		8207052	1					
ANR	8207058	Identifier	pl_main_run_string_begin		8207052	2					
ANR	8207059	ParameterList	void * instance		8207052	3					
ANR	8207060	Parameter	void * instance	264:25:8351:8364	8207052	0	True				
ANR	8207061	ParameterType	void *		8207052	0					
ANR	8207062	Identifier	instance		8207052	1					
ANR	8207063	CFGEntryNode	ENTRY		8207052		True				
ANR	8207064	CFGExitNode	EXIT		8207052		True				
ANR	8207065	Symbol	instance		8207052						
ANR	8207066	Function	pl_main_run_string_continue	269:0:8386:8488							
ANR	8207067	FunctionDef	"pl_main_run_string_continue (void * instance , const char * str , unsigned int length)"		8207066	0					
ANR	8207068	CompoundStatement		271:0:8472:8488	8207066	0					
ANR	8207069	ReturnStatement	return 0 ;	272:4:8478:8486	8207066	0	True				
ANR	8207070	PrimaryExpression	0		8207066	0					
ANR	8207071	ReturnType	int		8207066	1					
ANR	8207072	Identifier	pl_main_run_string_continue		8207066	2					
ANR	8207073	ParameterList	"void * instance , const char * str , unsigned int length"		8207066	3					
ANR	8207074	Parameter	void * instance	270:28:8418:8431	8207066	0	True				
ANR	8207075	ParameterType	void *		8207066	0					
ANR	8207076	Identifier	instance		8207066	1					
ANR	8207077	Parameter	const char * str	270:44:8434:8448	8207066	1	True				
ANR	8207078	ParameterType	const char *		8207066	0					
ANR	8207079	Identifier	str		8207066	1					
ANR	8207080	Parameter	unsigned int length	270:61:8451:8469	8207066	2	True				
ANR	8207081	ParameterType	unsigned int		8207066	0					
ANR	8207082	Identifier	length		8207066	1					
ANR	8207083	CFGEntryNode	ENTRY		8207066		True				
ANR	8207084	CFGExitNode	EXIT		8207066		True				
ANR	8207085	Symbol	str		8207066						
ANR	8207086	Symbol	instance		8207066						
ANR	8207087	Symbol	length		8207066						
ANR	8207088	Function	pl_main_run_string_end	275:0:8491:8550							
ANR	8207089	FunctionDef	pl_main_run_string_end (void * instance)		8207088	0					
ANR	8207090	CompoundStatement		277:0:8534:8550	8207088	0					
ANR	8207091	ReturnStatement	return 0 ;	278:4:8540:8548	8207088	0	True				
ANR	8207092	PrimaryExpression	0		8207088	0					
ANR	8207093	ReturnType	int		8207088	1					
ANR	8207094	Identifier	pl_main_run_string_end		8207088	2					
ANR	8207095	ParameterList	void * instance		8207088	3					
ANR	8207096	Parameter	void * instance	276:23:8518:8531	8207088	0	True				
ANR	8207097	ParameterType	void *		8207088	0					
ANR	8207098	Identifier	instance		8207088	1					
ANR	8207099	CFGEntryNode	ENTRY		8207088		True				
ANR	8207100	CFGExitNode	EXIT		8207088		True				
ANR	8207101	Symbol	instance		8207088						
ANR	8207102	Function	pl_main_run_file	281:0:8553:13343							
ANR	8207103	FunctionDef	"pl_main_run_file (pl_main_instance_t * minst , const char * filename)"		8207102	0					
ANR	8207104	CompoundStatement		283:0:8623:13343	8207102	0					
ANR	8207105	IdentifierDeclStatement	bool new_job = true ;	284:4:8629:8648	8207102	0	True				
ANR	8207106	IdentifierDecl	new_job = true		8207102	0					
ANR	8207107	IdentifierDeclType	bool		8207102	0					
ANR	8207108	Identifier	new_job		8207102	1					
ANR	8207109	AssignmentExpression	new_job = true		8207102	2		=			
ANR	8207110	Identifier	true		8207102	0					
ANR	8207111	Identifier	true		8207102	1					
ANR	8207112	IdentifierDeclStatement	pl_interp_implementation_t * pjli = minst -> implementations [ 0 ] ;	285:4:8654:8722	8207102	1	True				
ANR	8207113	IdentifierDecl	* pjli = minst -> implementations [ 0 ]		8207102	0					
ANR	8207114	IdentifierDeclType	pl_interp_implementation_t *		8207102	0					
ANR	8207115	Identifier	pjli		8207102	1					
ANR	8207116	AssignmentExpression	* pjli = minst -> implementations [ 0 ]		8207102	2		=			
ANR	8207117	Identifier	pjli		8207102	0					
ANR	8207118	ArrayIndexing	minst -> implementations [ 0 ]		8207102	1					
ANR	8207119	PtrMemberAccess	minst -> implementations		8207102	0					
ANR	8207120	Identifier	minst		8207102	0					
ANR	8207121	Identifier	implementations		8207102	1					
ANR	8207122	PrimaryExpression	0		8207102	1					
ANR	8207123	IdentifierDeclStatement	gs_memory_t * mem = minst -> memory ;	287:4:8728:8760	8207102	2	True				
ANR	8207124	IdentifierDecl	* mem = minst -> memory		8207102	0					
ANR	8207125	IdentifierDeclType	gs_memory_t *		8207102	0					
ANR	8207126	Identifier	mem		8207102	1					
ANR	8207127	AssignmentExpression	* mem = minst -> memory		8207102	2		=			
ANR	8207128	Identifier	mem		8207102	0					
ANR	8207129	PtrMemberAccess	minst -> memory		8207102	1					
ANR	8207130	Identifier	minst		8207102	0					
ANR	8207131	Identifier	memory		8207102	1					
ANR	8207132	IdentifierDeclStatement	pl_top_cursor_t r ;	288:4:8766:8783	8207102	3	True				
ANR	8207133	IdentifierDecl	r		8207102	0					
ANR	8207134	IdentifierDeclType	pl_top_cursor_t		8207102	0					
ANR	8207135	Identifier	r		8207102	1					
ANR	8207136	IdentifierDeclStatement	int code = 0 ;	289:4:8789:8801	8207102	4	True				
ANR	8207137	IdentifierDecl	code = 0		8207102	0					
ANR	8207138	IdentifierDeclType	int		8207102	0					
ANR	8207139	Identifier	code		8207102	1					
ANR	8207140	AssignmentExpression	code = 0		8207102	2		=			
ANR	8207141	Identifier	code		8207102	0					
ANR	8207142	PrimaryExpression	0		8207102	1					
ANR	8207143	Statement	define	291:1:8805:8810	8207102	5	True				
ANR	8207144	Statement	curr_implementation	291:8:8812:8830	8207102	6	True				
ANR	8207145	Statement	minst	291:28:8832:8836	8207102	7	True				
ANR	8207146	Statement	->	291:33:8837:8838	8207102	8	True				
ANR	8207147	Statement	curr_implementation	291:35:8839:8857	8207102	9	True				
ANR	8207148	Statement	define	292:1:8860:8865	8207102	10	True				
ANR	8207149	Statement	desired_implementation	292:8:8867:8888	8207102	11	True				
ANR	8207150	Statement	minst	292:31:8890:8894	8207102	12	True				
ANR	8207151	Statement	->	292:36:8895:8896	8207102	13	True				
ANR	8207152	Statement	desired_implementation	292:38:8897:8918	8207102	14	True				
ANR	8207153	IfStatement	"if ( pl_cursor_open ( mem , & r , filename , minst -> buf , sizeof ( minst -> buf ) ) < 0 )"		8207102	15					
ANR	8207154	Condition	"pl_cursor_open ( mem , & r , filename , minst -> buf , sizeof ( minst -> buf ) ) < 0"	294:8:8933:9001	8207102	0	True				
ANR	8207155	RelationalExpression	"pl_cursor_open ( mem , & r , filename , minst -> buf , sizeof ( minst -> buf ) ) < 0"		8207102	0		<			
ANR	8207156	CallExpression	"pl_cursor_open ( mem , & r , filename , minst -> buf , sizeof ( minst -> buf ) )"		8207102	0					
ANR	8207157	Callee	pl_cursor_open		8207102	0					
ANR	8207158	Identifier	pl_cursor_open		8207102	0					
ANR	8207159	ArgumentList	mem		8207102	1					
ANR	8207160	Argument	mem		8207102	0					
ANR	8207161	Identifier	mem		8207102	0					
ANR	8207162	Argument	& r		8207102	1					
ANR	8207163	UnaryOperationExpression	& r		8207102	0					
ANR	8207164	UnaryOperator	&		8207102	0					
ANR	8207165	Identifier	r		8207102	1					
ANR	8207166	Argument	filename		8207102	2					
ANR	8207167	Identifier	filename		8207102	0					
ANR	8207168	Argument	minst -> buf		8207102	3					
ANR	8207169	PtrMemberAccess	minst -> buf		8207102	0					
ANR	8207170	Identifier	minst		8207102	0					
ANR	8207171	Identifier	buf		8207102	1					
ANR	8207172	Argument	sizeof ( minst -> buf )		8207102	4					
ANR	8207173	SizeofExpression	sizeof ( minst -> buf )		8207102	0					
ANR	8207174	Sizeof	sizeof		8207102	0					
ANR	8207175	PtrMemberAccess	minst -> buf		8207102	1					
ANR	8207176	Identifier	minst		8207102	0					
ANR	8207177	Identifier	buf		8207102	1					
ANR	8207178	PrimaryExpression	0		8207102	1					
ANR	8207179	CompoundStatement		12:79:380:380	8207102	1					
ANR	8207180	ReturnStatement	return gs_error_Fatal ;	295:8:9014:9035	8207102	0	True				
ANR	8207181	Identifier	gs_error_Fatal		8207102	0					
ANR	8207182	ForStatement	for ( ; ; )		8207102	16					
ANR	8207183	CompoundStatement		16:13:433:433	8207102	0					
ANR	8207184	ExpressionStatement	"if_debug1m ( 'I' , mem , ""[i][file pos=%ld]\\n"" , pl_cursor_position ( & r ) )"	299:8:9067:9153	8207102	0	True				
ANR	8207185	CallExpression	"if_debug1m ( 'I' , mem , ""[i][file pos=%ld]\\n"" , pl_cursor_position ( & r ) )"		8207102	0					
ANR	8207186	Callee	if_debug1m		8207102	0					
ANR	8207187	Identifier	if_debug1m		8207102	0					
ANR	8207188	ArgumentList	'I'		8207102	1					
ANR	8207189	Argument	'I'		8207102	0					
ANR	8207190	PrimaryExpression	'I'		8207102	0					
ANR	8207191	Argument	mem		8207102	1					
ANR	8207192	Identifier	mem		8207102	0					
ANR	8207193	Argument	"""[i][file pos=%ld]\\n"""		8207102	2					
ANR	8207194	PrimaryExpression	"""[i][file pos=%ld]\\n"""		8207102	0					
ANR	8207195	Argument	pl_cursor_position ( & r )		8207102	3					
ANR	8207196	CallExpression	pl_cursor_position ( & r )		8207102	0					
ANR	8207197	Callee	pl_cursor_position		8207102	0					
ANR	8207198	Identifier	pl_cursor_position		8207102	0					
ANR	8207199	ArgumentList	& r		8207102	1					
ANR	8207200	Argument	& r		8207102	0					
ANR	8207201	UnaryOperationExpression	& r		8207102	0					
ANR	8207202	UnaryOperator	&		8207102	0					
ANR	8207203	Identifier	r		8207102	1					
ANR	8207204	IfStatement	if ( pl_cursor_next ( & r ) <= 0 )		8207102	1					
ANR	8207205	Condition	pl_cursor_next ( & r ) <= 0	302:12:9168:9190	8207102	0	True				
ANR	8207206	RelationalExpression	pl_cursor_next ( & r ) <= 0		8207102	0		<=			
ANR	8207207	CallExpression	pl_cursor_next ( & r )		8207102	0					
ANR	8207208	Callee	pl_cursor_next		8207102	0					
ANR	8207209	Identifier	pl_cursor_next		8207102	0					
ANR	8207210	ArgumentList	& r		8207102	1					
ANR	8207211	Argument	& r		8207102	0					
ANR	8207212	UnaryOperationExpression	& r		8207102	0					
ANR	8207213	UnaryOperator	&		8207102	0					
ANR	8207214	Identifier	r		8207102	1					
ANR	8207215	PrimaryExpression	0		8207102	1					
ANR	8207216	CompoundStatement		20:37:569:569	8207102	1					
ANR	8207217	ExpressionStatement	"if_debug0m ( 'I' , mem , ""End of of data\\n"" )"	303:12:9207:9247	8207102	0	True				
ANR	8207218	CallExpression	"if_debug0m ( 'I' , mem , ""End of of data\\n"" )"		8207102	0					
ANR	8207219	Callee	if_debug0m		8207102	0					
ANR	8207220	Identifier	if_debug0m		8207102	0					
ANR	8207221	ArgumentList	'I'		8207102	1					
ANR	8207222	Argument	'I'		8207102	0					
ANR	8207223	PrimaryExpression	'I'		8207102	0					
ANR	8207224	Argument	mem		8207102	1					
ANR	8207225	Identifier	mem		8207102	0					
ANR	8207226	Argument	"""End of of data\\n"""		8207102	2					
ANR	8207227	PrimaryExpression	"""End of of data\\n"""		8207102	0					
ANR	8207228	ExpressionStatement	pl_process_eof ( curr_implementation )	304:12:9261:9296	8207102	1	True				
ANR	8207229	CallExpression	pl_process_eof ( curr_implementation )		8207102	0					
ANR	8207230	Callee	pl_process_eof		8207102	0					
ANR	8207231	Identifier	pl_process_eof		8207102	0					
ANR	8207232	ArgumentList	curr_implementation		8207102	1					
ANR	8207233	Argument	curr_implementation		8207102	0					
ANR	8207234	Identifier	curr_implementation		8207102	0					
ANR	8207235	IfStatement	if ( pl_dnit_job ( curr_implementation ) < 0 )		8207102	2					
ANR	8207236	Condition	pl_dnit_job ( curr_implementation ) < 0	305:16:9314:9349	8207102	0	True				
ANR	8207237	RelationalExpression	pl_dnit_job ( curr_implementation ) < 0		8207102	0		<			
ANR	8207238	CallExpression	pl_dnit_job ( curr_implementation )		8207102	0					
ANR	8207239	Callee	pl_dnit_job		8207102	0					
ANR	8207240	Identifier	pl_dnit_job		8207102	0					
ANR	8207241	ArgumentList	curr_implementation		8207102	1					
ANR	8207242	Argument	curr_implementation		8207102	0					
ANR	8207243	Identifier	curr_implementation		8207102	0					
ANR	8207244	PrimaryExpression	0		8207102	1					
ANR	8207245	ReturnStatement	return gs_error_Fatal ;	306:16:9368:9389	8207102	1	True				
ANR	8207246	Identifier	gs_error_Fatal		8207102	0					
ANR	8207247	BreakStatement	break ;	307:12:9403:9408	8207102	3	True				
ANR	8207248	IfStatement	if ( new_job )		8207102	2					
ANR	8207249	Condition	new_job	310:12:9441:9447	8207102	0	True				
ANR	8207250	Identifier	new_job		8207102	0					
ANR	8207251	CompoundStatement		28:21:826:826	8207102	1					
ANR	8207252	ExpressionStatement	"if_debug0m ( 'I' , mem , ""Selecting PDL\\n"" )"	311:12:9464:9503	8207102	0	True				
ANR	8207253	CallExpression	"if_debug0m ( 'I' , mem , ""Selecting PDL\\n"" )"		8207102	0					
ANR	8207254	Callee	if_debug0m		8207102	0					
ANR	8207255	Identifier	if_debug0m		8207102	0					
ANR	8207256	ArgumentList	'I'		8207102	1					
ANR	8207257	Argument	'I'		8207102	0					
ANR	8207258	PrimaryExpression	'I'		8207102	0					
ANR	8207259	Argument	mem		8207102	1					
ANR	8207260	Identifier	mem		8207102	0					
ANR	8207261	Argument	"""Selecting PDL\\n"""		8207102	2					
ANR	8207262	PrimaryExpression	"""Selecting PDL\\n"""		8207102	0					
ANR	8207263	ExpressionStatement	"desired_implementation = pl_select_implementation ( pjli , minst , r )"	312:12:9517:9582	8207102	1	True				
ANR	8207264	AssignmentExpression	"desired_implementation = pl_select_implementation ( pjli , minst , r )"		8207102	0		=			
ANR	8207265	Identifier	desired_implementation		8207102	0					
ANR	8207266	CallExpression	"pl_select_implementation ( pjli , minst , r )"		8207102	1					
ANR	8207267	Callee	pl_select_implementation		8207102	0					
ANR	8207268	Identifier	pl_select_implementation		8207102	0					
ANR	8207269	ArgumentList	pjli		8207102	1					
ANR	8207270	Argument	pjli		8207102	0					
ANR	8207271	Identifier	pjli		8207102	0					
ANR	8207272	Argument	minst		8207102	1					
ANR	8207273	Identifier	minst		8207102	0					
ANR	8207274	Argument	r		8207102	2					
ANR	8207275	Identifier	r		8207102	0					
ANR	8207276	IfStatement	if ( curr_implementation != desired_implementation )		8207102	2					
ANR	8207277	Condition	curr_implementation != desired_implementation	313:16:9600:9644	8207102	0	True				
ANR	8207278	EqualityExpression	curr_implementation != desired_implementation		8207102	0		!=			
ANR	8207279	Identifier	curr_implementation		8207102	0					
ANR	8207280	Identifier	desired_implementation		8207102	1					
ANR	8207281	CompoundStatement		31:63:1023:1023	8207102	1					
ANR	8207282	ExpressionStatement	code = pl_remove_device ( curr_implementation )	314:16:9665:9709	8207102	0	True				
ANR	8207283	AssignmentExpression	code = pl_remove_device ( curr_implementation )		8207102	0		=			
ANR	8207284	Identifier	code		8207102	0					
ANR	8207285	CallExpression	pl_remove_device ( curr_implementation )		8207102	1					
ANR	8207286	Callee	pl_remove_device		8207102	0					
ANR	8207287	Identifier	pl_remove_device		8207102	0					
ANR	8207288	ArgumentList	curr_implementation		8207102	1					
ANR	8207289	Argument	curr_implementation		8207102	0					
ANR	8207290	Identifier	curr_implementation		8207102	0					
ANR	8207291	IfStatement	if ( code >= 0 )		8207102	1					
ANR	8207292	Condition	code >= 0	315:20:9731:9739	8207102	0	True				
ANR	8207293	RelationalExpression	code >= 0		8207102	0		>=			
ANR	8207294	Identifier	code		8207102	0					
ANR	8207295	PrimaryExpression	0		8207102	1					
ANR	8207296	ExpressionStatement	"code = pl_set_device ( desired_implementation , minst -> device )"	316:20:9762:9821	8207102	1	True				
ANR	8207297	AssignmentExpression	"code = pl_set_device ( desired_implementation , minst -> device )"		8207102	0		=			
ANR	8207298	Identifier	code		8207102	0					
ANR	8207299	CallExpression	"pl_set_device ( desired_implementation , minst -> device )"		8207102	1					
ANR	8207300	Callee	pl_set_device		8207102	0					
ANR	8207301	Identifier	pl_set_device		8207102	0					
ANR	8207302	ArgumentList	desired_implementation		8207102	1					
ANR	8207303	Argument	desired_implementation		8207102	0					
ANR	8207304	Identifier	desired_implementation		8207102	0					
ANR	8207305	Argument	minst -> device		8207102	1					
ANR	8207306	PtrMemberAccess	minst -> device		8207102	0					
ANR	8207307	Identifier	minst		8207102	0					
ANR	8207308	Identifier	device		8207102	1					
ANR	8207309	IfStatement	if ( code < 0 )		8207102	2					
ANR	8207310	Condition	code < 0	317:20:9843:9850	8207102	0	True				
ANR	8207311	RelationalExpression	code < 0		8207102	0		<			
ANR	8207312	Identifier	code		8207102	0					
ANR	8207313	PrimaryExpression	0		8207102	1					
ANR	8207314	CompoundStatement		35:30:1229:1229	8207102	1					
ANR	8207315	ExpressionStatement	curr_implementation = desired_implementation	318:20:9875:9919	8207102	0	True				
ANR	8207316	AssignmentExpression	curr_implementation = desired_implementation		8207102	0		=			
ANR	8207317	Identifier	curr_implementation		8207102	0					
ANR	8207318	Identifier	desired_implementation		8207102	1					
ANR	8207319	ReturnStatement	return gs_error_Fatal ;	319:20:9941:9962	8207102	1	True				
ANR	8207320	Identifier	gs_error_Fatal		8207102	0					
ANR	8207321	ExpressionStatement	curr_implementation = desired_implementation	323:12:10021:10065	8207102	3	True				
ANR	8207322	AssignmentExpression	curr_implementation = desired_implementation		8207102	0		=			
ANR	8207323	Identifier	curr_implementation		8207102	0					
ANR	8207324	Identifier	desired_implementation		8207102	1					
ANR	8207325	IfStatement	if ( curr_implementation == pjli )		8207102	4					
ANR	8207326	Condition	curr_implementation == pjli	326:16:10173:10199	8207102	0	True				
ANR	8207327	EqualityExpression	curr_implementation == pjli		8207102	0		==			
ANR	8207328	Identifier	curr_implementation		8207102	0					
ANR	8207329	Identifier	pjli		8207102	1					
ANR	8207330	CompoundStatement		44:45:1578:1578	8207102	1					
ANR	8207331	IfStatement	if ( minst -> pjl_from_args == false )		8207102	0					
ANR	8207332	Condition	minst -> pjl_from_args == false	327:20:10224:10252	8207102	0	True				
ANR	8207333	EqualityExpression	minst -> pjl_from_args == false		8207102	0		==			
ANR	8207334	PtrMemberAccess	minst -> pjl_from_args		8207102	0					
ANR	8207335	Identifier	minst		8207102	0					
ANR	8207336	Identifier	pjl_from_args		8207102	1					
ANR	8207337	Identifier	false		8207102	1					
ANR	8207338	CompoundStatement		45:51:1631:1631	8207102	1					
ANR	8207339	IfStatement	if ( pl_init_job ( pjli ) < 0 )		8207102	0					
ANR	8207340	Condition	pl_init_job ( pjli ) < 0	328:24:10281:10301	8207102	0	True				
ANR	8207341	RelationalExpression	pl_init_job ( pjli ) < 0		8207102	0		<			
ANR	8207342	CallExpression	pl_init_job ( pjli )		8207102	0					
ANR	8207343	Callee	pl_init_job		8207102	0					
ANR	8207344	Identifier	pl_init_job		8207102	0					
ANR	8207345	ArgumentList	pjli		8207102	1					
ANR	8207346	Argument	pjli		8207102	0					
ANR	8207347	Identifier	pjli		8207102	0					
ANR	8207348	PrimaryExpression	0		8207102	1					
ANR	8207349	ReturnStatement	return gs_error_Fatal ;	329:24:10328:10349	8207102	1	True				
ANR	8207350	Identifier	gs_error_Fatal		8207102	0					
ANR	8207351	ElseStatement	else		8207102	0					
ANR	8207352	ExpressionStatement	minst -> pjl_from_args = false	331:20:10394:10422	8207102	0	True				
ANR	8207353	AssignmentExpression	minst -> pjl_from_args = false		8207102	0		=			
ANR	8207354	PtrMemberAccess	minst -> pjl_from_args		8207102	0					
ANR	8207355	Identifier	minst		8207102	0					
ANR	8207356	Identifier	pjl_from_args		8207102	1					
ANR	8207357	Identifier	false		8207102	1					
ANR	8207358	ElseStatement	else		8207102	0					
ANR	8207359	CompoundStatement		50:19:1819:1819	8207102	0					
ANR	8207360	IfStatement	if ( pl_init_job ( curr_implementation ) < 0 )		8207102	0					
ANR	8207361	Condition	pl_init_job ( curr_implementation ) < 0	333:20:10465:10500	8207102	0	True				
ANR	8207362	RelationalExpression	pl_init_job ( curr_implementation ) < 0		8207102	0		<			
ANR	8207363	CallExpression	pl_init_job ( curr_implementation )		8207102	0					
ANR	8207364	Callee	pl_init_job		8207102	0					
ANR	8207365	Identifier	pl_init_job		8207102	0					
ANR	8207366	ArgumentList	curr_implementation		8207102	1					
ANR	8207367	Argument	curr_implementation		8207102	0					
ANR	8207368	Identifier	curr_implementation		8207102	0					
ANR	8207369	PrimaryExpression	0		8207102	1					
ANR	8207370	ReturnStatement	return gs_error_Fatal ;	334:20:10523:10544	8207102	1	True				
ANR	8207371	Identifier	gs_error_Fatal		8207102	0					
ANR	8207372	ExpressionStatement	"if_debug1m ( 'I' , mem , ""selected and initializing (%s)\\n"" , pl_characteristics ( curr_implementation ) -> language )"	337:12:10585:10715	8207102	5	True				
ANR	8207373	CallExpression	"if_debug1m ( 'I' , mem , ""selected and initializing (%s)\\n"" , pl_characteristics ( curr_implementation ) -> language )"		8207102	0					
ANR	8207374	Callee	if_debug1m		8207102	0					
ANR	8207375	Identifier	if_debug1m		8207102	0					
ANR	8207376	ArgumentList	'I'		8207102	1					
ANR	8207377	Argument	'I'		8207102	0					
ANR	8207378	PrimaryExpression	'I'		8207102	0					
ANR	8207379	Argument	mem		8207102	1					
ANR	8207380	Identifier	mem		8207102	0					
ANR	8207381	Argument	"""selected and initializing (%s)\\n"""		8207102	2					
ANR	8207382	PrimaryExpression	"""selected and initializing (%s)\\n"""		8207102	0					
ANR	8207383	Argument	pl_characteristics ( curr_implementation ) -> language		8207102	3					
ANR	8207384	PtrMemberAccess	pl_characteristics ( curr_implementation ) -> language		8207102	0					
ANR	8207385	CallExpression	pl_characteristics ( curr_implementation )		8207102	0					
ANR	8207386	Callee	pl_characteristics		8207102	0					
ANR	8207387	Identifier	pl_characteristics		8207102	0					
ANR	8207388	ArgumentList	curr_implementation		8207102	1					
ANR	8207389	Argument	curr_implementation		8207102	0					
ANR	8207390	Identifier	curr_implementation		8207102	0					
ANR	8207391	Identifier	language		8207102	1					
ANR	8207392	ExpressionStatement	new_job = false	339:12:10729:10744	8207102	6	True				
ANR	8207393	AssignmentExpression	new_job = false		8207102	0		=			
ANR	8207394	Identifier	new_job		8207102	0					
ANR	8207395	Identifier	false		8207102	1					
ANR	8207396	IfStatement	if ( curr_implementation )		8207102	3					
ANR	8207397	Condition	curr_implementation	342:12:10769:10787	8207102	0	True				
ANR	8207398	Identifier	curr_implementation		8207102	0					
ANR	8207399	CompoundStatement		60:33:2166:2166	8207102	1					
ANR	8207400	IfStatement	if ( curr_implementation -> proc_process_file && r . strm != mem -> gs_lib_ctx -> fstdin )		8207102	0					
ANR	8207401	Condition	curr_implementation -> proc_process_file && r . strm != mem -> gs_lib_ctx -> fstdin	346:16:10976:11066	8207102	0	True				
ANR	8207402	AndExpression	curr_implementation -> proc_process_file && r . strm != mem -> gs_lib_ctx -> fstdin		8207102	0		&&			
ANR	8207403	PtrMemberAccess	curr_implementation -> proc_process_file		8207102	0					
ANR	8207404	Identifier	curr_implementation		8207102	0					
ANR	8207405	Identifier	proc_process_file		8207102	1					
ANR	8207406	EqualityExpression	r . strm != mem -> gs_lib_ctx -> fstdin		8207102	1		!=			
ANR	8207407	MemberAccess	r . strm		8207102	0					
ANR	8207408	Identifier	r		8207102	0					
ANR	8207409	Identifier	strm		8207102	1					
ANR	8207410	PtrMemberAccess	mem -> gs_lib_ctx -> fstdin		8207102	1					
ANR	8207411	PtrMemberAccess	mem -> gs_lib_ctx		8207102	0					
ANR	8207412	Identifier	mem		8207102	0					
ANR	8207413	Identifier	gs_lib_ctx		8207102	1					
ANR	8207414	Identifier	fstdin		8207102	1					
ANR	8207415	CompoundStatement		65:54:2445:2445	8207102	1					
ANR	8207416	ExpressionStatement	"if_debug1m ( 'I' , mem , ""processing job from file (%s)\\n"" , filename )"	348:16:11087:11179	8207102	0	True				
ANR	8207417	CallExpression	"if_debug1m ( 'I' , mem , ""processing job from file (%s)\\n"" , filename )"		8207102	0					
ANR	8207418	Callee	if_debug1m		8207102	0					
ANR	8207419	Identifier	if_debug1m		8207102	0					
ANR	8207420	ArgumentList	'I'		8207102	1					
ANR	8207421	Argument	'I'		8207102	0					
ANR	8207422	PrimaryExpression	'I'		8207102	0					
ANR	8207423	Argument	mem		8207102	1					
ANR	8207424	Identifier	mem		8207102	0					
ANR	8207425	Argument	"""processing job from file (%s)\\n"""		8207102	2					
ANR	8207426	PrimaryExpression	"""processing job from file (%s)\\n"""		8207102	0					
ANR	8207427	Argument	filename		8207102	3					
ANR	8207428	Identifier	filename		8207102	0					
ANR	8207429	ExpressionStatement	"code = pl_process_file ( curr_implementation , ( char * ) filename )"	351:16:11198:11259	8207102	1	True				
ANR	8207430	AssignmentExpression	"code = pl_process_file ( curr_implementation , ( char * ) filename )"		8207102	0		=			
ANR	8207431	Identifier	code		8207102	0					
ANR	8207432	CallExpression	"pl_process_file ( curr_implementation , ( char * ) filename )"		8207102	1					
ANR	8207433	Callee	pl_process_file		8207102	0					
ANR	8207434	Identifier	pl_process_file		8207102	0					
ANR	8207435	ArgumentList	curr_implementation		8207102	1					
ANR	8207436	Argument	curr_implementation		8207102	0					
ANR	8207437	Identifier	curr_implementation		8207102	0					
ANR	8207438	Argument	( char * ) filename		8207102	1					
ANR	8207439	CastExpression	( char * ) filename		8207102	0					
ANR	8207440	CastTarget	char *		8207102	0					
ANR	8207441	Identifier	filename		8207102	1					
ANR	8207442	IfStatement	if ( code < 0 )		8207102	2					
ANR	8207443	Condition	code < 0	352:20:11281:11288	8207102	0	True				
ANR	8207444	RelationalExpression	code < 0		8207102	0		<			
ANR	8207445	Identifier	code		8207102	0					
ANR	8207446	PrimaryExpression	0		8207102	1					
ANR	8207447	CompoundStatement		70:30:2667:2667	8207102	1					
ANR	8207448	ExpressionStatement	"errprintf ( mem , ""Warning interpreter exited with error code %d\\n"" , code )"	353:20:11313:11414	8207102	0	True				
ANR	8207449	CallExpression	"errprintf ( mem , ""Warning interpreter exited with error code %d\\n"" , code )"		8207102	0					
ANR	8207450	Callee	errprintf		8207102	0					
ANR	8207451	Identifier	errprintf		8207102	0					
ANR	8207452	ArgumentList	mem		8207102	1					
ANR	8207453	Argument	mem		8207102	0					
ANR	8207454	Identifier	mem		8207102	0					
ANR	8207455	Argument	"""Warning interpreter exited with error code %d\\n"""		8207102	1					
ANR	8207456	PrimaryExpression	"""Warning interpreter exited with error code %d\\n"""		8207102	0					
ANR	8207457	Argument	code		8207102	2					
ANR	8207458	Identifier	code		8207102	0					
ANR	8207459	IfStatement	if ( pl_dnit_job ( curr_implementation ) < 0 )		8207102	3					
ANR	8207460	Condition	pl_dnit_job ( curr_implementation ) < 0	356:20:11454:11489	8207102	0	True				
ANR	8207461	RelationalExpression	pl_dnit_job ( curr_implementation ) < 0		8207102	0		<			
ANR	8207462	CallExpression	pl_dnit_job ( curr_implementation )		8207102	0					
ANR	8207463	Callee	pl_dnit_job		8207102	0					
ANR	8207464	Identifier	pl_dnit_job		8207102	0					
ANR	8207465	ArgumentList	curr_implementation		8207102	1					
ANR	8207466	Argument	curr_implementation		8207102	0					
ANR	8207467	Identifier	curr_implementation		8207102	0					
ANR	8207468	PrimaryExpression	0		8207102	1					
ANR	8207469	ReturnStatement	return gs_error_Fatal ;	357:20:11512:11533	8207102	1	True				
ANR	8207470	Identifier	gs_error_Fatal		8207102	0					
ANR	8207471	BreakStatement	break ;	359:16:11552:11557	8207102	4	True				
ANR	8207472	ExpressionStatement	"code = pl_process ( curr_implementation , & r . cursor )"	362:12:11644:11693	8207102	1	True				
ANR	8207473	AssignmentExpression	"code = pl_process ( curr_implementation , & r . cursor )"		8207102	0		=			
ANR	8207474	Identifier	code		8207102	0					
ANR	8207475	CallExpression	"pl_process ( curr_implementation , & r . cursor )"		8207102	1					
ANR	8207476	Callee	pl_process		8207102	0					
ANR	8207477	Identifier	pl_process		8207102	0					
ANR	8207478	ArgumentList	curr_implementation		8207102	1					
ANR	8207479	Argument	curr_implementation		8207102	0					
ANR	8207480	Identifier	curr_implementation		8207102	0					
ANR	8207481	Argument	& r . cursor		8207102	1					
ANR	8207482	UnaryOperationExpression	& r . cursor		8207102	0					
ANR	8207483	UnaryOperator	&		8207102	0					
ANR	8207484	MemberAccess	r . cursor		8207102	1					
ANR	8207485	Identifier	r		8207102	0					
ANR	8207486	Identifier	cursor		8207102	1					
ANR	8207487	ExpressionStatement	"if_debug1m ( 'I' , mem , ""processing (%s) job\\n"" , pl_characteristics ( curr_implementation ) -> language )"	363:12:11707:11826	8207102	2	True				
ANR	8207488	CallExpression	"if_debug1m ( 'I' , mem , ""processing (%s) job\\n"" , pl_characteristics ( curr_implementation ) -> language )"		8207102	0					
ANR	8207489	Callee	if_debug1m		8207102	0					
ANR	8207490	Identifier	if_debug1m		8207102	0					
ANR	8207491	ArgumentList	'I'		8207102	1					
ANR	8207492	Argument	'I'		8207102	0					
ANR	8207493	PrimaryExpression	'I'		8207102	0					
ANR	8207494	Argument	mem		8207102	1					
ANR	8207495	Identifier	mem		8207102	0					
ANR	8207496	Argument	"""processing (%s) job\\n"""		8207102	2					
ANR	8207497	PrimaryExpression	"""processing (%s) job\\n"""		8207102	0					
ANR	8207498	Argument	pl_characteristics ( curr_implementation ) -> language		8207102	3					
ANR	8207499	PtrMemberAccess	pl_characteristics ( curr_implementation ) -> language		8207102	0					
ANR	8207500	CallExpression	pl_characteristics ( curr_implementation )		8207102	0					
ANR	8207501	Callee	pl_characteristics		8207102	0					
ANR	8207502	Identifier	pl_characteristics		8207102	0					
ANR	8207503	ArgumentList	curr_implementation		8207102	1					
ANR	8207504	Argument	curr_implementation		8207102	0					
ANR	8207505	Identifier	curr_implementation		8207102	0					
ANR	8207506	Identifier	language		8207102	1					
ANR	8207507	IfStatement	if ( code == e_ExitLanguage )		8207102	3					
ANR	8207508	Condition	code == e_ExitLanguage	365:16:11844:11865	8207102	0	True				
ANR	8207509	EqualityExpression	code == e_ExitLanguage		8207102	0		==			
ANR	8207510	Identifier	code		8207102	0					
ANR	8207511	Identifier	e_ExitLanguage		8207102	1					
ANR	8207512	CompoundStatement		83:40:3244:3244	8207102	1					
ANR	8207513	IfStatement	if ( pl_dnit_job ( curr_implementation ) < 0 )		8207102	0					
ANR	8207514	Condition	pl_dnit_job ( curr_implementation ) < 0	366:20:11890:11925	8207102	0	True				
ANR	8207515	RelationalExpression	pl_dnit_job ( curr_implementation ) < 0		8207102	0		<			
ANR	8207516	CallExpression	pl_dnit_job ( curr_implementation )		8207102	0					
ANR	8207517	Callee	pl_dnit_job		8207102	0					
ANR	8207518	Identifier	pl_dnit_job		8207102	0					
ANR	8207519	ArgumentList	curr_implementation		8207102	1					
ANR	8207520	Argument	curr_implementation		8207102	0					
ANR	8207521	Identifier	curr_implementation		8207102	0					
ANR	8207522	PrimaryExpression	0		8207102	1					
ANR	8207523	ReturnStatement	return gs_error_Fatal ;	367:20:11948:11969	8207102	1	True				
ANR	8207524	Identifier	gs_error_Fatal		8207102	0					
ANR	8207525	ExpressionStatement	new_job = true	369:16:11988:12002	8207102	1	True				
ANR	8207526	AssignmentExpression	new_job = true		8207102	0		=			
ANR	8207527	Identifier	new_job		8207102	0					
ANR	8207528	Identifier	true		8207102	1					
ANR	8207529	IfStatement	if ( curr_implementation != pjli )		8207102	2					
ANR	8207530	Condition	curr_implementation != pjli	371:20:12025:12051	8207102	0	True				
ANR	8207531	EqualityExpression	curr_implementation != pjli		8207102	0		!=			
ANR	8207532	Identifier	curr_implementation		8207102	0					
ANR	8207533	Identifier	pjli		8207102	1					
ANR	8207534	IfStatement	if ( pl_init_job ( pjli ) < 0 )		8207102	1					
ANR	8207535	Condition	pl_init_job ( pjli ) < 0	372:24:12078:12098	8207102	0	True				
ANR	8207536	RelationalExpression	pl_init_job ( pjli ) < 0		8207102	0		<			
ANR	8207537	CallExpression	pl_init_job ( pjli )		8207102	0					
ANR	8207538	Callee	pl_init_job		8207102	0					
ANR	8207539	Identifier	pl_init_job		8207102	0					
ANR	8207540	ArgumentList	pjli		8207102	1					
ANR	8207541	Argument	pjli		8207102	0					
ANR	8207542	Identifier	pjli		8207102	0					
ANR	8207543	PrimaryExpression	0		8207102	1					
ANR	8207544	ReturnStatement	return gs_error_Fatal ;	373:24:12125:12146	8207102	1	True				
ANR	8207545	Identifier	gs_error_Fatal		8207102	0					
ANR	8207546	ElseStatement	else		8207102	0					
ANR	8207547	IfStatement	if ( code < 0 )		8207102	0					
ANR	8207548	Condition	code < 0	375:23:12172:12179	8207102	0	True				
ANR	8207549	RelationalExpression	code < 0		8207102	0		<			
ANR	8207550	Identifier	code		8207102	0					
ANR	8207551	PrimaryExpression	0		8207102	1					
ANR	8207552	CompoundStatement		93:33:3558:3558	8207102	1					
ANR	8207553	ExpressionStatement	"dmprintf1 ( mem , ""Warning interpreter exited with error code %d\\n"" , code )"	376:16:12235:12358	8207102	0	True				
ANR	8207554	CallExpression	"dmprintf1 ( mem , ""Warning interpreter exited with error code %d\\n"" , code )"		8207102	0					
ANR	8207555	Callee	dmprintf1		8207102	0					
ANR	8207556	Identifier	dmprintf1		8207102	0					
ANR	8207557	ArgumentList	mem		8207102	1					
ANR	8207558	Argument	mem		8207102	0					
ANR	8207559	Identifier	mem		8207102	0					
ANR	8207560	Argument	"""Warning interpreter exited with error code %d\\n"""		8207102	1					
ANR	8207561	PrimaryExpression	"""Warning interpreter exited with error code %d\\n"""		8207102	0					
ANR	8207562	Argument	code		8207102	2					
ANR	8207563	Identifier	code		8207102	0					
ANR	8207564	ExpressionStatement	"dmprintf ( mem , ""Flushing to end of job\\n"" )"	379:16:12376:12417	8207102	1	True				
ANR	8207565	CallExpression	"dmprintf ( mem , ""Flushing to end of job\\n"" )"		8207102	0					
ANR	8207566	Callee	dmprintf		8207102	0					
ANR	8207567	Identifier	dmprintf		8207102	0					
ANR	8207568	ArgumentList	mem		8207102	1					
ANR	8207569	Argument	mem		8207102	0					
ANR	8207570	Identifier	mem		8207102	0					
ANR	8207571	Argument	"""Flushing to end of job\\n"""		8207102	1					
ANR	8207572	PrimaryExpression	"""Flushing to end of job\\n"""		8207102	0					
ANR	8207573	WhileStatement	"while ( ( pl_flush_to_eoj ( curr_implementation , & r . cursor ) ) == 0 )"		8207102	2					
ANR	8207574	Condition	"( pl_flush_to_eoj ( curr_implementation , & r . cursor ) ) == 0"	381:23:12496:12549	8207102	0	True				
ANR	8207575	EqualityExpression	"( pl_flush_to_eoj ( curr_implementation , & r . cursor ) ) == 0"		8207102	0		==			
ANR	8207576	CallExpression	"pl_flush_to_eoj ( curr_implementation , & r . cursor )"		8207102	0					
ANR	8207577	Callee	pl_flush_to_eoj		8207102	0					
ANR	8207578	Identifier	pl_flush_to_eoj		8207102	0					
ANR	8207579	ArgumentList	curr_implementation		8207102	1					
ANR	8207580	Argument	curr_implementation		8207102	0					
ANR	8207581	Identifier	curr_implementation		8207102	0					
ANR	8207582	Argument	& r . cursor		8207102	1					
ANR	8207583	UnaryOperationExpression	& r . cursor		8207102	0					
ANR	8207584	UnaryOperator	&		8207102	0					
ANR	8207585	MemberAccess	r . cursor		8207102	1					
ANR	8207586	Identifier	r		8207102	0					
ANR	8207587	Identifier	cursor		8207102	1					
ANR	8207588	PrimaryExpression	0		8207102	1					
ANR	8207589	CompoundStatement		99:79:3928:3928	8207102	1					
ANR	8207590	IfStatement	if ( pl_cursor_next ( & r ) <= 0 )		8207102	0					
ANR	8207591	Condition	pl_cursor_next ( & r ) <= 0	382:24:12578:12600	8207102	0	True				
ANR	8207592	RelationalExpression	pl_cursor_next ( & r ) <= 0		8207102	0		<=			
ANR	8207593	CallExpression	pl_cursor_next ( & r )		8207102	0					
ANR	8207594	Callee	pl_cursor_next		8207102	0					
ANR	8207595	Identifier	pl_cursor_next		8207102	0					
ANR	8207596	ArgumentList	& r		8207102	1					
ANR	8207597	Argument	& r		8207102	0					
ANR	8207598	UnaryOperationExpression	& r		8207102	0					
ANR	8207599	UnaryOperator	&		8207102	0					
ANR	8207600	Identifier	r		8207102	1					
ANR	8207601	PrimaryExpression	0		8207102	1					
ANR	8207602	CompoundStatement		100:49:3979:3979	8207102	1					
ANR	8207603	ExpressionStatement	"if_debug0m ( 'I' , mem , ""end of data found while flushing\\n"" )"	383:24:12629:12722	8207102	0	True				
ANR	8207604	CallExpression	"if_debug0m ( 'I' , mem , ""end of data found while flushing\\n"" )"		8207102	0					
ANR	8207605	Callee	if_debug0m		8207102	0					
ANR	8207606	Identifier	if_debug0m		8207102	0					
ANR	8207607	ArgumentList	'I'		8207102	1					
ANR	8207608	Argument	'I'		8207102	0					
ANR	8207609	PrimaryExpression	'I'		8207102	0					
ANR	8207610	Argument	mem		8207102	1					
ANR	8207611	Identifier	mem		8207102	0					
ANR	8207612	Argument	"""end of data found while flushing\\n"""		8207102	2					
ANR	8207613	PrimaryExpression	"""end of data found while flushing\\n"""		8207102	0					
ANR	8207614	BreakStatement	break ;	385:24:12748:12753	8207102	1	True				
ANR	8207615	ExpressionStatement	"pl_report_errors ( curr_implementation , code , pl_cursor_position ( & r ) , minst -> error_report > 0 )"	388:16:12811:12969	8207102	3	True				
ANR	8207616	CallExpression	"pl_report_errors ( curr_implementation , code , pl_cursor_position ( & r ) , minst -> error_report > 0 )"		8207102	0					
ANR	8207617	Callee	pl_report_errors		8207102	0					
ANR	8207618	Identifier	pl_report_errors		8207102	0					
ANR	8207619	ArgumentList	curr_implementation		8207102	1					
ANR	8207620	Argument	curr_implementation		8207102	0					
ANR	8207621	Identifier	curr_implementation		8207102	0					
ANR	8207622	Argument	code		8207102	1					
ANR	8207623	Identifier	code		8207102	0					
ANR	8207624	Argument	pl_cursor_position ( & r )		8207102	2					
ANR	8207625	CallExpression	pl_cursor_position ( & r )		8207102	0					
ANR	8207626	Callee	pl_cursor_position		8207102	0					
ANR	8207627	Identifier	pl_cursor_position		8207102	0					
ANR	8207628	ArgumentList	& r		8207102	1					
ANR	8207629	Argument	& r		8207102	0					
ANR	8207630	UnaryOperationExpression	& r		8207102	0					
ANR	8207631	UnaryOperator	&		8207102	0					
ANR	8207632	Identifier	r		8207102	1					
ANR	8207633	Argument	minst -> error_report > 0		8207102	3					
ANR	8207634	RelationalExpression	minst -> error_report > 0		8207102	0		>			
ANR	8207635	PtrMemberAccess	minst -> error_report		8207102	0					
ANR	8207636	Identifier	minst		8207102	0					
ANR	8207637	Identifier	error_report		8207102	1					
ANR	8207638	PrimaryExpression	0		8207102	1					
ANR	8207639	IfStatement	if ( pl_dnit_job ( curr_implementation ) < 0 )		8207102	4					
ANR	8207640	Condition	pl_dnit_job ( curr_implementation ) < 0	391:20:12991:13026	8207102	0	True				
ANR	8207641	RelationalExpression	pl_dnit_job ( curr_implementation ) < 0		8207102	0		<			
ANR	8207642	CallExpression	pl_dnit_job ( curr_implementation )		8207102	0					
ANR	8207643	Callee	pl_dnit_job		8207102	0					
ANR	8207644	Identifier	pl_dnit_job		8207102	0					
ANR	8207645	ArgumentList	curr_implementation		8207102	1					
ANR	8207646	Argument	curr_implementation		8207102	0					
ANR	8207647	Identifier	curr_implementation		8207102	0					
ANR	8207648	PrimaryExpression	0		8207102	1					
ANR	8207649	ReturnStatement	return gs_error_Fatal ;	392:20:13049:13070	8207102	1	True				
ANR	8207650	Identifier	gs_error_Fatal		8207102	0					
ANR	8207651	IfStatement	if ( pl_init_job ( pjli ) < 0 )		8207102	5					
ANR	8207652	Condition	pl_init_job ( pjli ) < 0	393:20:13092:13112	8207102	0	True				
ANR	8207653	RelationalExpression	pl_init_job ( pjli ) < 0		8207102	0		<			
ANR	8207654	CallExpression	pl_init_job ( pjli )		8207102	0					
ANR	8207655	Callee	pl_init_job		8207102	0					
ANR	8207656	Identifier	pl_init_job		8207102	0					
ANR	8207657	ArgumentList	pjli		8207102	1					
ANR	8207658	Argument	pjli		8207102	0					
ANR	8207659	Identifier	pjli		8207102	0					
ANR	8207660	PrimaryExpression	0		8207102	1					
ANR	8207661	ReturnStatement	return gs_error_Fatal ;	394:20:13135:13156	8207102	1	True				
ANR	8207662	Identifier	gs_error_Fatal		8207102	0					
ANR	8207663	ExpressionStatement	code = 0	396:16:13175:13183	8207102	6	True				
ANR	8207664	AssignmentExpression	code = 0		8207102	0		=			
ANR	8207665	Identifier	code		8207102	0					
ANR	8207666	PrimaryExpression	0		8207102	1					
ANR	8207667	ExpressionStatement	new_job = true	397:16:13201:13215	8207102	7	True				
ANR	8207668	AssignmentExpression	new_job = true		8207102	0		=			
ANR	8207669	Identifier	new_job		8207102	0					
ANR	8207670	Identifier	true		8207102	1					
ANR	8207671	ExpressionStatement	pl_cursor_close ( & r )	401:4:13251:13270	8207102	17	True				
ANR	8207672	CallExpression	pl_cursor_close ( & r )		8207102	0					
ANR	8207673	Callee	pl_cursor_close		8207102	0					
ANR	8207674	Identifier	pl_cursor_close		8207102	0					
ANR	8207675	ArgumentList	& r		8207102	1					
ANR	8207676	Argument	& r		8207102	0					
ANR	8207677	UnaryOperationExpression	& r		8207102	0					
ANR	8207678	UnaryOperator	&		8207102	0					
ANR	8207679	Identifier	r		8207102	1					
ANR	8207680	ReturnStatement	return 0 ;	402:4:13276:13284	8207102	18	True				
ANR	8207681	PrimaryExpression	0		8207102	0					
ANR	8207682	Statement	undef	403:1:13287:13291	8207102	19	True				
ANR	8207683	Statement	curr_implementation	403:7:13293:13311	8207102	20	True				
ANR	8207684	Statement	undef	404:1:13314:13318	8207102	21	True				
ANR	8207685	Statement	desired_implementation	404:7:13320:13341	8207102	22	True				
ANR	8207686	ReturnType	int		8207102	1					
ANR	8207687	Identifier	pl_main_run_file		8207102	2					
ANR	8207688	ParameterList	"pl_main_instance_t * minst , const char * filename"		8207102	3					
ANR	8207689	Parameter	pl_main_instance_t * minst	282:17:8574:8598	8207102	0	True				
ANR	8207690	ParameterType	pl_main_instance_t *		8207102	0					
ANR	8207691	Identifier	minst		8207102	1					
ANR	8207692	Parameter	const char * filename	282:44:8601:8620	8207102	1	True				
ANR	8207693	ParameterType	const char *		8207102	0					
ANR	8207694	Identifier	filename		8207102	1					
ANR	8207695	CFGEntryNode	ENTRY		8207102		True				
ANR	8207696	CFGExitNode	EXIT		8207102		True				
ANR	8207697	InfiniteForNode	true		8207102		True				
ANR	8207698	Symbol	minst -> buf		8207102						
ANR	8207699	Symbol	minst		8207102						
ANR	8207700	Symbol	pjli		8207102						
ANR	8207701	Symbol	code		8207102						
ANR	8207702	Symbol	minst -> error_report		8207102						
ANR	8207703	Symbol	minst -> memory		8207102						
ANR	8207704	Symbol	pl_init_job		8207102						
ANR	8207705	Symbol	pl_characteristics		8207102						
ANR	8207706	Symbol	pl_characteristics ( curr_implementation ) -> language		8207102						
ANR	8207707	Symbol	pl_cursor_next		8207102						
ANR	8207708	Symbol	e_ExitLanguage		8207102						
ANR	8207709	Symbol	mem		8207102						
ANR	8207710	Symbol	pl_select_implementation		8207102						
ANR	8207711	Symbol	desired_implementation		8207102						
ANR	8207712	Symbol	pl_process_file		8207102						
ANR	8207713	Symbol	* curr_implementation		8207102						
ANR	8207714	Symbol	pl_dnit_job		8207102						
ANR	8207715	Symbol	pl_flush_to_eoj		8207102						
ANR	8207716	Symbol	new_job		8207102						
ANR	8207717	Symbol	minst -> pjl_from_args		8207102						
ANR	8207718	Symbol	curr_implementation -> proc_process_file		8207102						
ANR	8207719	Symbol	gs_error_Fatal		8207102						
ANR	8207720	Symbol	mem -> gs_lib_ctx -> fstdin		8207102						
ANR	8207721	Symbol	minst -> device		8207102						
ANR	8207722	Symbol	false		8207102						
ANR	8207723	Symbol	* * mem		8207102						
ANR	8207724	Symbol	minst -> implementations		8207102						
ANR	8207725	Symbol	* minst		8207102						
ANR	8207726	Symbol	* minst -> implementations		8207102						
ANR	8207727	Symbol	pl_process		8207102						
ANR	8207728	Symbol	r		8207102						
ANR	8207729	Symbol	filename		8207102						
ANR	8207730	Symbol	curr_implementation		8207102						
ANR	8207731	Symbol	* * minst		8207102						
ANR	8207732	Symbol	pl_set_device		8207102						
ANR	8207733	Symbol	true		8207102						
ANR	8207734	Symbol	& r		8207102						
ANR	8207735	Symbol	pl_cursor_open		8207102						
ANR	8207736	Symbol	* pl_characteristics		8207102						
ANR	8207737	Symbol	r . strm		8207102						
ANR	8207738	Symbol	& r . cursor		8207102						
ANR	8207739	Symbol	* mem -> gs_lib_ctx		8207102						
ANR	8207740	Symbol	pl_remove_device		8207102						
ANR	8207741	Symbol	mem -> gs_lib_ctx		8207102						
ANR	8207742	Symbol	pl_cursor_position		8207102						
ANR	8207743	Symbol	* mem		8207102						
ANR	8207744	Function	pl_main_delete_instance	407:0:13346:14591							
ANR	8207745	FunctionDef	pl_main_delete_instance (pl_main_instance_t * minst)		8207744	0					
ANR	8207746	CompoundStatement		409:0:13401:14591	8207744	0					
ANR	8207747	IdentifierDeclStatement	gs_memory_t * mem ;	411:4:13427:13443	8207744	0	True				
ANR	8207748	IdentifierDecl	* mem		8207744	0					
ANR	8207749	IdentifierDeclType	gs_memory_t *		8207744	0					
ANR	8207750	Identifier	mem		8207744	1					
ANR	8207751	IdentifierDeclStatement	pl_interp_implementation_t * * impl ;	412:4:13449:13482	8207744	1	True				
ANR	8207752	IdentifierDecl	* * impl		8207744	0					
ANR	8207753	IdentifierDeclType	pl_interp_implementation_t * *		8207744	0					
ANR	8207754	Identifier	impl		8207744	1					
ANR	8207755	IfStatement	if ( minst == NULL )		8207744	2					
ANR	8207756	Condition	minst == NULL	414:8:13493:13505	8207744	0	True				
ANR	8207757	EqualityExpression	minst == NULL		8207744	0		==			
ANR	8207758	Identifier	minst		8207744	0					
ANR	8207759	Identifier	NULL		8207744	1					
ANR	8207760	ReturnStatement	return 0 ;	415:8:13516:13524	8207744	1	True				
ANR	8207761	PrimaryExpression	0		8207744	0					
ANR	8207762	ExpressionStatement	mem = minst -> memory	417:4:13531:13550	8207744	3	True				
ANR	8207763	AssignmentExpression	mem = minst -> memory		8207744	0		=			
ANR	8207764	Identifier	mem		8207744	0					
ANR	8207765	PtrMemberAccess	minst -> memory		8207744	1					
ANR	8207766	Identifier	minst		8207744	0					
ANR	8207767	Identifier	memory		8207744	1					
ANR	8207768	ExpressionStatement	impl = minst -> implementations	418:4:13556:13585	8207744	4	True				
ANR	8207769	AssignmentExpression	impl = minst -> implementations		8207744	0		=			
ANR	8207770	Identifier	impl		8207744	0					
ANR	8207771	PtrMemberAccess	minst -> implementations		8207744	1					
ANR	8207772	Identifier	minst		8207744	0					
ANR	8207773	Identifier	implementations		8207744	1					
ANR	8207774	IfStatement	if ( impl != NULL )		8207744	5					
ANR	8207775	Condition	impl != NULL	419:8:13595:13606	8207744	0	True				
ANR	8207776	EqualityExpression	impl != NULL		8207744	0		!=			
ANR	8207777	Identifier	impl		8207744	0					
ANR	8207778	Identifier	NULL		8207744	1					
ANR	8207779	CompoundStatement		13:8:244:253	8207744	1					
ANR	8207780	IdentifierDeclStatement	int index ;	421:8:13646:13655	8207744	0	True				
ANR	8207781	IdentifierDecl	index		8207744	0					
ANR	8207782	IdentifierDeclType	int		8207744	0					
ANR	8207783	Identifier	index		8207744	1					
ANR	8207784	ForStatement	for ( index = 0 ; impl [ index ] != 0 ; ++ index )		8207744	1					
ANR	8207785	ForInit	index = 0 ;	422:13:13670:13679	8207744	0	True				
ANR	8207786	AssignmentExpression	index = 0		8207744	0		=			
ANR	8207787	Identifier	index		8207744	0					
ANR	8207788	PrimaryExpression	0		8207744	1					
ANR	8207789	Condition	impl [ index ] != 0	422:24:13681:13696	8207744	1	True				
ANR	8207790	EqualityExpression	impl [ index ] != 0		8207744	0		!=			
ANR	8207791	ArrayIndexing	impl [ index ]		8207744	0					
ANR	8207792	Identifier	impl		8207744	0					
ANR	8207793	Identifier	index		8207744	1					
ANR	8207794	PrimaryExpression	0		8207744	1					
ANR	8207795	UnaryExpression	++ index	422:42:13699:13705	8207744	2	True				
ANR	8207796	IncDec	++		8207744	0					
ANR	8207797	Identifier	index		8207744	1					
ANR	8207798	CompoundStatement		14:51:306:306	8207744	3					
ANR	8207799	IfStatement	if ( pl_deallocate_interp_instance ( impl [ index ] ) < 0 )		8207744	0					
ANR	8207800	Condition	pl_deallocate_interp_instance ( impl [ index ] ) < 0	423:16:13726:13771	8207744	0	True				
ANR	8207801	RelationalExpression	pl_deallocate_interp_instance ( impl [ index ] ) < 0		8207744	0		<			
ANR	8207802	CallExpression	pl_deallocate_interp_instance ( impl [ index ] )		8207744	0					
ANR	8207803	Callee	pl_deallocate_interp_instance		8207744	0					
ANR	8207804	Identifier	pl_deallocate_interp_instance		8207744	0					
ANR	8207805	ArgumentList	impl [ index ]		8207744	1					
ANR	8207806	Argument	impl [ index ]		8207744	0					
ANR	8207807	ArrayIndexing	impl [ index ]		8207744	0					
ANR	8207808	Identifier	impl		8207744	0					
ANR	8207809	Identifier	index		8207744	1					
ANR	8207810	PrimaryExpression	0		8207744	1					
ANR	8207811	CompoundStatement		15:64:372:372	8207744	1					
ANR	8207812	ReturnStatement	return - 1 ;	424:16:13792:13801	8207744	0	True				
ANR	8207813	UnaryOperationExpression	- 1		8207744	0					
ANR	8207814	UnaryOperator	-		8207744	0					
ANR	8207815	PrimaryExpression	1		8207744	1					
ANR	8207816	ExpressionStatement	"gs_free_object ( mem , impl [ index ] , ""pl_main_languages_init interp"" )"	426:12:13829:13894	8207744	1	True				
ANR	8207817	CallExpression	"gs_free_object ( mem , impl [ index ] , ""pl_main_languages_init interp"" )"		8207744	0					
ANR	8207818	Callee	gs_free_object		8207744	0					
ANR	8207819	Identifier	gs_free_object		8207744	0					
ANR	8207820	ArgumentList	mem		8207744	1					
ANR	8207821	Argument	mem		8207744	0					
ANR	8207822	Identifier	mem		8207744	0					
ANR	8207823	Argument	impl [ index ]		8207744	1					
ANR	8207824	ArrayIndexing	impl [ index ]		8207744	0					
ANR	8207825	Identifier	impl		8207744	0					
ANR	8207826	Identifier	index		8207744	1					
ANR	8207827	Argument	"""pl_main_languages_init interp"""		8207744	2					
ANR	8207828	PrimaryExpression	"""pl_main_languages_init interp"""		8207744	0					
ANR	8207829	ExpressionStatement	"gs_free_object ( mem , impl , ""pl_main_languages_delete_instance()"" )"	429:8:13915:13979	8207744	2	True				
ANR	8207830	CallExpression	"gs_free_object ( mem , impl , ""pl_main_languages_delete_instance()"" )"		8207744	0					
ANR	8207831	Callee	gs_free_object		8207744	0					
ANR	8207832	Identifier	gs_free_object		8207744	0					
ANR	8207833	ArgumentList	mem		8207744	1					
ANR	8207834	Argument	mem		8207744	0					
ANR	8207835	Identifier	mem		8207744	0					
ANR	8207836	Argument	impl		8207744	1					
ANR	8207837	Identifier	impl		8207744	0					
ANR	8207838	Argument	"""pl_main_languages_delete_instance()"""		8207744	2					
ANR	8207839	PrimaryExpression	"""pl_main_languages_delete_instance()"""		8207744	0					
ANR	8207840	IfStatement	if ( minst -> device )		8207744	6					
ANR	8207841	Condition	minst -> device	433:8:14038:14050	8207744	0	True				
ANR	8207842	PtrMemberAccess	minst -> device		8207744	0					
ANR	8207843	Identifier	minst		8207744	0					
ANR	8207844	Identifier	device		8207744	1					
ANR	8207845	CompoundStatement		25:23:651:651	8207744	1					
ANR	8207846	ExpressionStatement	gs_closedevice ( minst -> device )	434:8:14063:14092	8207744	0	True				
ANR	8207847	CallExpression	gs_closedevice ( minst -> device )		8207744	0					
ANR	8207848	Callee	gs_closedevice		8207744	0					
ANR	8207849	Identifier	gs_closedevice		8207744	0					
ANR	8207850	ArgumentList	minst -> device		8207744	1					
ANR	8207851	Argument	minst -> device		8207744	0					
ANR	8207852	PtrMemberAccess	minst -> device		8207744	0					
ANR	8207853	Identifier	minst		8207744	0					
ANR	8207854	Identifier	device		8207744	1					
ANR	8207855	ExpressionStatement	"gs_unregister_root ( minst -> device -> memory , & device_root , ""pl_main_languages_delete_instance"" )"	435:8:14102:14221	8207744	1	True				
ANR	8207856	CallExpression	"gs_unregister_root ( minst -> device -> memory , & device_root , ""pl_main_languages_delete_instance"" )"		8207744	0					
ANR	8207857	Callee	gs_unregister_root		8207744	0					
ANR	8207858	Identifier	gs_unregister_root		8207744	0					
ANR	8207859	ArgumentList	minst -> device -> memory		8207744	1					
ANR	8207860	Argument	minst -> device -> memory		8207744	0					
ANR	8207861	PtrMemberAccess	minst -> device -> memory		8207744	0					
ANR	8207862	PtrMemberAccess	minst -> device		8207744	0					
ANR	8207863	Identifier	minst		8207744	0					
ANR	8207864	Identifier	device		8207744	1					
ANR	8207865	Identifier	memory		8207744	1					
ANR	8207866	Argument	& device_root		8207744	1					
ANR	8207867	UnaryOperationExpression	& device_root		8207744	0					
ANR	8207868	UnaryOperator	&		8207744	0					
ANR	8207869	Identifier	device_root		8207744	1					
ANR	8207870	Argument	"""pl_main_languages_delete_instance"""		8207744	2					
ANR	8207871	PrimaryExpression	"""pl_main_languages_delete_instance"""		8207744	0					
ANR	8207872	ExpressionStatement	"gx_device_retain ( minst -> device , false )"	437:8:14231:14269	8207744	2	True				
ANR	8207873	CallExpression	"gx_device_retain ( minst -> device , false )"		8207744	0					
ANR	8207874	Callee	gx_device_retain		8207744	0					
ANR	8207875	Identifier	gx_device_retain		8207744	0					
ANR	8207876	ArgumentList	minst -> device		8207744	1					
ANR	8207877	Argument	minst -> device		8207744	0					
ANR	8207878	PtrMemberAccess	minst -> device		8207744	0					
ANR	8207879	Identifier	minst		8207744	0					
ANR	8207880	Identifier	device		8207744	1					
ANR	8207881	Argument	false		8207744	1					
ANR	8207882	Identifier	false		8207744	0					
ANR	8207883	ExpressionStatement	minst -> device = NULL	438:8:14279:14299	8207744	3	True				
ANR	8207884	AssignmentExpression	minst -> device = NULL		8207744	0		=			
ANR	8207885	PtrMemberAccess	minst -> device		8207744	0					
ANR	8207886	Identifier	minst		8207744	0					
ANR	8207887	Identifier	device		8207744	1					
ANR	8207888	Identifier	NULL		8207744	1					
ANR	8207889	ExpressionStatement	gs_iodev_finit ( mem )	441:4:14312:14331	8207744	7	True				
ANR	8207890	CallExpression	gs_iodev_finit ( mem )		8207744	0					
ANR	8207891	Callee	gs_iodev_finit		8207744	0					
ANR	8207892	Identifier	gs_iodev_finit		8207744	0					
ANR	8207893	ArgumentList	mem		8207744	1					
ANR	8207894	Argument	mem		8207744	0					
ANR	8207895	Identifier	mem		8207744	0					
ANR	8207896	ExpressionStatement	"gs_lib_finit ( 0 , 0 , mem )"	442:4:14337:14360	8207744	8	True				
ANR	8207897	CallExpression	"gs_lib_finit ( 0 , 0 , mem )"		8207744	0					
ANR	8207898	Callee	gs_lib_finit		8207744	0					
ANR	8207899	Identifier	gs_lib_finit		8207744	0					
ANR	8207900	ArgumentList	0		8207744	1					
ANR	8207901	Argument	0		8207744	0					
ANR	8207902	PrimaryExpression	0		8207744	0					
ANR	8207903	Argument	0		8207744	1					
ANR	8207904	PrimaryExpression	0		8207744	0					
ANR	8207905	Argument	mem		8207744	2					
ANR	8207906	Identifier	mem		8207744	0					
ANR	8207907	ExpressionStatement	"gs_free_object ( mem , minst , ""pl_main_instance"" )"	443:4:14366:14412	8207744	9	True				
ANR	8207908	CallExpression	"gs_free_object ( mem , minst , ""pl_main_instance"" )"		8207744	0					
ANR	8207909	Callee	gs_free_object		8207744	0					
ANR	8207910	Identifier	gs_free_object		8207744	0					
ANR	8207911	ArgumentList	mem		8207744	1					
ANR	8207912	Argument	mem		8207744	0					
ANR	8207913	Identifier	mem		8207744	0					
ANR	8207914	Argument	minst		8207744	1					
ANR	8207915	Identifier	minst		8207744	0					
ANR	8207916	Argument	"""pl_main_instance"""		8207744	2					
ANR	8207917	PrimaryExpression	"""pl_main_instance"""		8207744	0					
ANR	8207918	ExpressionStatement	mem -> gs_lib_ctx -> top_of_system = NULL	444:4:14418:14455	8207744	10	True				
ANR	8207919	AssignmentExpression	mem -> gs_lib_ctx -> top_of_system = NULL		8207744	0		=			
ANR	8207920	PtrMemberAccess	mem -> gs_lib_ctx -> top_of_system		8207744	0					
ANR	8207921	PtrMemberAccess	mem -> gs_lib_ctx		8207744	0					
ANR	8207922	Identifier	mem		8207744	0					
ANR	8207923	Identifier	gs_lib_ctx		8207744	1					
ANR	8207924	Identifier	top_of_system		8207744	1					
ANR	8207925	Identifier	NULL		8207744	1					
ANR	8207926	ExpressionStatement	gs_memory_chunk_dump_memory ( mem )	447:4:14483:14515	8207744	11	True				
ANR	8207927	CallExpression	gs_memory_chunk_dump_memory ( mem )		8207744	0					
ANR	8207928	Callee	gs_memory_chunk_dump_memory		8207744	0					
ANR	8207929	Identifier	gs_memory_chunk_dump_memory		8207744	0					
ANR	8207930	ArgumentList	mem		8207744	1					
ANR	8207931	Argument	mem		8207744	0					
ANR	8207932	Identifier	mem		8207744	0					
ANR	8207933	ExpressionStatement	gs_malloc_release ( gs_memory_chunk_unwrap ( mem ) )	449:4:14528:14574	8207744	12	True				
ANR	8207934	CallExpression	gs_malloc_release ( gs_memory_chunk_unwrap ( mem ) )		8207744	0					
ANR	8207935	Callee	gs_malloc_release		8207744	0					
ANR	8207936	Identifier	gs_malloc_release		8207744	0					
ANR	8207937	ArgumentList	gs_memory_chunk_unwrap ( mem )		8207744	1					
ANR	8207938	Argument	gs_memory_chunk_unwrap ( mem )		8207744	0					
ANR	8207939	CallExpression	gs_memory_chunk_unwrap ( mem )		8207744	0					
ANR	8207940	Callee	gs_memory_chunk_unwrap		8207744	0					
ANR	8207941	Identifier	gs_memory_chunk_unwrap		8207744	0					
ANR	8207942	ArgumentList	mem		8207744	1					
ANR	8207943	Argument	mem		8207744	0					
ANR	8207944	Identifier	mem		8207744	0					
ANR	8207945	ReturnStatement	return 0 ;	451:4:14581:14589	8207744	13	True				
ANR	8207946	PrimaryExpression	0		8207744	0					
ANR	8207947	ReturnType	int		8207744	1					
ANR	8207948	Identifier	pl_main_delete_instance		8207744	2					
ANR	8207949	ParameterList	pl_main_instance_t * minst		8207744	3					
ANR	8207950	Parameter	pl_main_instance_t * minst	408:24:13374:13398	8207744	0	True				
ANR	8207951	ParameterType	pl_main_instance_t *		8207744	0					
ANR	8207952	Identifier	minst		8207744	1					
ANR	8207953	CFGEntryNode	ENTRY		8207744		True				
ANR	8207954	CFGExitNode	EXIT		8207744		True				
ANR	8207955	Symbol	& device_root		8207744						
ANR	8207956	Symbol	minst		8207744						
ANR	8207957	Symbol	NULL		8207744						
ANR	8207958	Symbol	minst -> memory		8207744						
ANR	8207959	Symbol	pl_deallocate_interp_instance		8207744						
ANR	8207960	Symbol	* index		8207744						
ANR	8207961	Symbol	minst -> device		8207744						
ANR	8207962	Symbol	* minst -> device		8207744						
ANR	8207963	Symbol	false		8207744						
ANR	8207964	Symbol	index		8207744						
ANR	8207965	Symbol	* impl		8207744						
ANR	8207966	Symbol	* * mem		8207744						
ANR	8207967	Symbol	mem -> gs_lib_ctx -> top_of_system		8207744						
ANR	8207968	Symbol	minst -> implementations		8207744						
ANR	8207969	Symbol	* minst		8207744						
ANR	8207970	Symbol	impl		8207744						
ANR	8207971	Symbol	mem		8207744						
ANR	8207972	Symbol	* * minst		8207744						
ANR	8207973	Symbol	minst -> device -> memory		8207744						
ANR	8207974	Symbol	gs_memory_chunk_unwrap		8207744						
ANR	8207975	Symbol	* mem -> gs_lib_ctx		8207744						
ANR	8207976	Symbol	mem -> gs_lib_ctx		8207744						
ANR	8207977	Symbol	* mem		8207744						
ANR	8207978	Function	pl_to_exit	454:0:14594:14945							
ANR	8207979	FunctionDef	pl_to_exit (gs_memory_t * mem)		8207978	0					
ANR	8207980	CompoundStatement		456:0:14627:14945	8207978	0					
ANR	8207981	IdentifierDeclStatement	pl_main_instance_t * minst = mem -> gs_lib_ctx -> top_of_system ;	457:4:14633:14691	8207978	0	True				
ANR	8207982	IdentifierDecl	* minst = mem -> gs_lib_ctx -> top_of_system		8207978	0					
ANR	8207983	IdentifierDeclType	pl_main_instance_t *		8207978	0					
ANR	8207984	Identifier	minst		8207978	1					
ANR	8207985	AssignmentExpression	* minst = mem -> gs_lib_ctx -> top_of_system		8207978	2		=			
ANR	8207986	Identifier	minst		8207978	0					
ANR	8207987	PtrMemberAccess	mem -> gs_lib_ctx -> top_of_system		8207978	1					
ANR	8207988	PtrMemberAccess	mem -> gs_lib_ctx		8207978	0					
ANR	8207989	Identifier	mem		8207978	0					
ANR	8207990	Identifier	gs_lib_ctx		8207978	1					
ANR	8207991	Identifier	top_of_system		8207978	1					
ANR	8207992	IfStatement	if ( minst -> curr_implementation && pl_remove_device ( minst -> curr_implementation ) < 0 )		8207978	1					
ANR	8207993	Condition	minst -> curr_implementation && pl_remove_device ( minst -> curr_implementation ) < 0	459:8:14741:14826	8207978	0	True				
ANR	8207994	AndExpression	minst -> curr_implementation && pl_remove_device ( minst -> curr_implementation ) < 0		8207978	0		&&			
ANR	8207995	PtrMemberAccess	minst -> curr_implementation		8207978	0					
ANR	8207996	Identifier	minst		8207978	0					
ANR	8207997	Identifier	curr_implementation		8207978	1					
ANR	8207998	RelationalExpression	pl_remove_device ( minst -> curr_implementation ) < 0		8207978	1		<			
ANR	8207999	CallExpression	pl_remove_device ( minst -> curr_implementation )		8207978	0					
ANR	8208000	Callee	pl_remove_device		8207978	0					
ANR	8208001	Identifier	pl_remove_device		8207978	0					
ANR	8208002	ArgumentList	minst -> curr_implementation		8207978	1					
ANR	8208003	Argument	minst -> curr_implementation		8207978	0					
ANR	8208004	PtrMemberAccess	minst -> curr_implementation		8207978	0					
ANR	8208005	Identifier	minst		8207978	0					
ANR	8208006	Identifier	curr_implementation		8207978	1					
ANR	8208007	PrimaryExpression	0		8207978	1					
ANR	8208008	CompoundStatement		5:61:201:201	8207978	1					
ANR	8208009	ReturnStatement	return - 1 ;	461:8:14839:14848	8207978	0	True				
ANR	8208010	UnaryOperationExpression	- 1		8207978	0					
ANR	8208011	UnaryOperator	-		8207978	0					
ANR	8208012	PrimaryExpression	1		8207978	1					
ANR	8208013	ExpressionStatement	gs_c_param_list_release ( & minst -> params )	464:4:14861:14900	8207978	2	True				
ANR	8208014	CallExpression	gs_c_param_list_release ( & minst -> params )		8207978	0					
ANR	8208015	Callee	gs_c_param_list_release		8207978	0					
ANR	8208016	Identifier	gs_c_param_list_release		8207978	0					
ANR	8208017	ArgumentList	& minst -> params		8207978	1					
ANR	8208018	Argument	& minst -> params		8207978	0					
ANR	8208019	UnaryOperationExpression	& minst -> params		8207978	0					
ANR	8208020	UnaryOperator	&		8207978	0					
ANR	8208021	PtrMemberAccess	minst -> params		8207978	1					
ANR	8208022	Identifier	minst		8207978	0					
ANR	8208023	Identifier	params		8207978	1					
ANR	8208024	ExpressionStatement	arg_finit ( & minst -> args )	465:4:14906:14929	8207978	3	True				
ANR	8208025	CallExpression	arg_finit ( & minst -> args )		8207978	0					
ANR	8208026	Callee	arg_finit		8207978	0					
ANR	8208027	Identifier	arg_finit		8207978	0					
ANR	8208028	ArgumentList	& minst -> args		8207978	1					
ANR	8208029	Argument	& minst -> args		8207978	0					
ANR	8208030	UnaryOperationExpression	& minst -> args		8207978	0					
ANR	8208031	UnaryOperator	&		8207978	0					
ANR	8208032	PtrMemberAccess	minst -> args		8207978	1					
ANR	8208033	Identifier	minst		8207978	0					
ANR	8208034	Identifier	args		8207978	1					
ANR	8208035	ReturnStatement	return 0 ;	466:4:14935:14943	8207978	4	True				
ANR	8208036	PrimaryExpression	0		8207978	0					
ANR	8208037	ReturnType	int		8207978	1					
ANR	8208038	Identifier	pl_to_exit		8207978	2					
ANR	8208039	ParameterList	gs_memory_t * mem		8207978	3					
ANR	8208040	Parameter	gs_memory_t * mem	455:11:14609:14624	8207978	0	True				
ANR	8208041	ParameterType	gs_memory_t *		8207978	0					
ANR	8208042	Identifier	mem		8207978	1					
ANR	8208043	CFGEntryNode	ENTRY		8207978		True				
ANR	8208044	CFGExitNode	EXIT		8207978		True				
ANR	8208045	Symbol	minst		8207978						
ANR	8208046	Symbol	mem		8207978						
ANR	8208047	Symbol	& minst -> args		8207978						
ANR	8208048	Symbol	* * mem		8207978						
ANR	8208049	Symbol	mem -> gs_lib_ctx -> top_of_system		8207978						
ANR	8208050	Symbol	* mem -> gs_lib_ctx		8207978						
ANR	8208051	Symbol	& minst -> params		8207978						
ANR	8208052	Symbol	mem -> gs_lib_ctx		8207978						
ANR	8208053	Symbol	pl_remove_device		8207978						
ANR	8208054	Symbol	minst -> curr_implementation		8207978						
ANR	8208055	Symbol	* mem		8207978						
ANR	8208056	Symbol	* minst		8207978						
ANR	8208057	Function	pl_main_languages_init	469:0:14948:16984							
ANR	8208058	FunctionDef	"pl_main_languages_init (gs_memory_t * mem , pl_main_instance_t * minst)"		8208057	0					
ANR	8208059	CompoundStatement		473:0:15189:16984	8208057	0					
ANR	8208060	IdentifierDeclStatement	int index ;	474:4:15195:15204	8208057	0	True				
ANR	8208061	IdentifierDecl	index		8208057	0					
ANR	8208062	IdentifierDeclType	int		8208057	0					
ANR	8208063	Identifier	index		8208057	1					
ANR	8208064	IdentifierDeclStatement	int count ;	475:4:15210:15219	8208057	1	True				
ANR	8208065	IdentifierDecl	count		8208057	0					
ANR	8208066	IdentifierDeclType	int		8208057	0					
ANR	8208067	Identifier	count		8208057	1					
ANR	8208068	IdentifierDeclStatement	int sz ;	476:4:15225:15231	8208057	2	True				
ANR	8208069	IdentifierDecl	sz		8208057	0					
ANR	8208070	IdentifierDeclType	int		8208057	0					
ANR	8208071	Identifier	sz		8208057	1					
ANR	8208072	IdentifierDeclStatement	pl_interp_implementation_t * * impls ;	477:4:15237:15271	8208057	3	True				
ANR	8208073	IdentifierDecl	* * impls		8208057	0					
ANR	8208074	IdentifierDeclType	pl_interp_implementation_t * *		8208057	0					
ANR	8208075	Identifier	impls		8208057	1					
ANR	8208076	ForStatement	for ( count = 0 ; pdl_implementations [ count ] != 0 ; ++ count )		8208057	4					
ANR	8208077	ForInit	count = 0 ;	479:9:15283:15292	8208057	0	True				
ANR	8208078	AssignmentExpression	count = 0		8208057	0		=			
ANR	8208079	Identifier	count		8208057	0					
ANR	8208080	PrimaryExpression	0		8208057	1					
ANR	8208081	Condition	pdl_implementations [ count ] != 0	479:20:15294:15324	8208057	1	True				
ANR	8208082	EqualityExpression	pdl_implementations [ count ] != 0		8208057	0		!=			
ANR	8208083	ArrayIndexing	pdl_implementations [ count ]		8208057	0					
ANR	8208084	Identifier	pdl_implementations		8208057	0					
ANR	8208085	Identifier	count		8208057	1					
ANR	8208086	PrimaryExpression	0		8208057	1					
ANR	8208087	UnaryExpression	++ count	479:53:15327:15333	8208057	2	True				
ANR	8208088	IncDec	++		8208057	0					
ANR	8208089	Identifier	count		8208057	1					
ANR	8208090	ExpressionStatement		480:8:15344:15344	8208057	3	True				
ANR	8208091	ExpressionStatement	sz = sizeof ( pl_interp_implementation_t * ) * ( count + 1 )	483:4:15404:15459	8208057	5	True				
ANR	8208092	AssignmentExpression	sz = sizeof ( pl_interp_implementation_t * ) * ( count + 1 )		8208057	0		=			
ANR	8208093	Identifier	sz		8208057	0					
ANR	8208094	MultiplicativeExpression	sizeof ( pl_interp_implementation_t * ) * ( count + 1 )		8208057	1		*			
ANR	8208095	SizeofExpression	sizeof ( pl_interp_implementation_t * )		8208057	0					
ANR	8208096	Sizeof	sizeof		8208057	0					
ANR	8208097	SizeofOperand	pl_interp_implementation_t *		8208057	1					
ANR	8208098	AdditiveExpression	count + 1		8208057	1		+			
ANR	8208099	Identifier	count		8208057	0					
ANR	8208100	PrimaryExpression	1		8208057	1					
ANR	8208101	ExpressionStatement	"impls = ( pl_interp_implementation_t * * ) gs_alloc_bytes_immovable ( mem , sz , ""pl_main_languages_init"" )"	485:4:15466:15564	8208057	6	True				
ANR	8208102	AssignmentExpression	"impls = ( pl_interp_implementation_t * * ) gs_alloc_bytes_immovable ( mem , sz , ""pl_main_languages_init"" )"		8208057	0		=			
ANR	8208103	Identifier	impls		8208057	0					
ANR	8208104	CastExpression	"( pl_interp_implementation_t * * ) gs_alloc_bytes_immovable ( mem , sz , ""pl_main_languages_init"" )"		8208057	1					
ANR	8208105	CastTarget	pl_interp_implementation_t * *		8208057	0					
ANR	8208106	CallExpression	"gs_alloc_bytes_immovable ( mem , sz , ""pl_main_languages_init"" )"		8208057	1					
ANR	8208107	Callee	gs_alloc_bytes_immovable		8208057	0					
ANR	8208108	Identifier	gs_alloc_bytes_immovable		8208057	0					
ANR	8208109	ArgumentList	mem		8208057	1					
ANR	8208110	Argument	mem		8208057	0					
ANR	8208111	Identifier	mem		8208057	0					
ANR	8208112	Argument	sz		8208057	1					
ANR	8208113	Identifier	sz		8208057	0					
ANR	8208114	Argument	"""pl_main_languages_init"""		8208057	2					
ANR	8208115	PrimaryExpression	"""pl_main_languages_init"""		8208057	0					
ANR	8208116	IfStatement	if ( impls == NULL )		8208057	7					
ANR	8208117	Condition	impls == NULL	487:8:15575:15587	8208057	0	True				
ANR	8208118	EqualityExpression	impls == NULL		8208057	0		==			
ANR	8208119	Identifier	impls		8208057	0					
ANR	8208120	Identifier	NULL		8208057	1					
ANR	8208121	GotoStatement	goto pmui_err ;	488:8:15598:15611	8208057	1	True				
ANR	8208122	Identifier	pmui_err		8208057	0					
ANR	8208123	ExpressionStatement	minst -> implementations = impls	490:4:15618:15648	8208057	8	True				
ANR	8208124	AssignmentExpression	minst -> implementations = impls		8208057	0		=			
ANR	8208125	PtrMemberAccess	minst -> implementations		8208057	0					
ANR	8208126	Identifier	minst		8208057	0					
ANR	8208127	Identifier	implementations		8208057	1					
ANR	8208128	Identifier	impls		8208057	1					
ANR	8208129	ExpressionStatement	minst -> curr_implementation = minst -> desired_implementation = NULL	491:4:15654:15719	8208057	9	True				
ANR	8208130	AssignmentExpression	minst -> curr_implementation = minst -> desired_implementation = NULL		8208057	0		=			
ANR	8208131	PtrMemberAccess	minst -> curr_implementation		8208057	0					
ANR	8208132	Identifier	minst		8208057	0					
ANR	8208133	Identifier	curr_implementation		8208057	1					
ANR	8208134	AssignmentExpression	minst -> desired_implementation = NULL		8208057	1		=			
ANR	8208135	PtrMemberAccess	minst -> desired_implementation		8208057	0					
ANR	8208136	Identifier	minst		8208057	0					
ANR	8208137	Identifier	desired_implementation		8208057	1					
ANR	8208138	Identifier	NULL		8208057	1					
ANR	8208139	ExpressionStatement	"memset ( impls , 0 , sz )"	492:4:15725:15745	8208057	10	True				
ANR	8208140	CallExpression	"memset ( impls , 0 , sz )"		8208057	0					
ANR	8208141	Callee	memset		8208057	0					
ANR	8208142	Identifier	memset		8208057	0					
ANR	8208143	ArgumentList	impls		8208057	1					
ANR	8208144	Argument	impls		8208057	0					
ANR	8208145	Identifier	impls		8208057	0					
ANR	8208146	Argument	0		8208057	1					
ANR	8208147	PrimaryExpression	0		8208057	0					
ANR	8208148	Argument	sz		8208057	2					
ANR	8208149	Identifier	sz		8208057	0					
ANR	8208150	ForStatement	for ( index = 0 ; index < count ; ++ index )		8208057	11					
ANR	8208151	ForInit	index = 0 ;	496:9:15915:15924	8208057	0	True				
ANR	8208152	AssignmentExpression	index = 0		8208057	0		=			
ANR	8208153	Identifier	index		8208057	0					
ANR	8208154	PrimaryExpression	0		8208057	1					
ANR	8208155	Condition	index < count	496:20:15926:15938	8208057	1	True				
ANR	8208156	RelationalExpression	index < count		8208057	0		<			
ANR	8208157	Identifier	index		8208057	0					
ANR	8208158	Identifier	count		8208057	1					
ANR	8208159	UnaryExpression	++ index	496:35:15941:15947	8208057	2	True				
ANR	8208160	IncDec	++		8208057	0					
ANR	8208161	Identifier	index		8208057	1					
ANR	8208162	CompoundStatement		25:8:770:778	8208057	3					
ANR	8208163	IdentifierDeclStatement	int code ;	497:8:15960:15968	8208057	0	True				
ANR	8208164	IdentifierDecl	code		8208057	0					
ANR	8208165	IdentifierDeclType	int		8208057	0					
ANR	8208166	Identifier	code		8208057	1					
ANR	8208167	ExpressionStatement	"impls [ index ] = ( pl_interp_implementation_t * ) gs_alloc_bytes_immovable ( mem , sizeof ( pl_interp_implementation_t ) , ""pl_main_languages_init interp"" )"	498:8:15978:16208	8208057	1	True				
ANR	8208168	AssignmentExpression	"impls [ index ] = ( pl_interp_implementation_t * ) gs_alloc_bytes_immovable ( mem , sizeof ( pl_interp_implementation_t ) , ""pl_main_languages_init interp"" )"		8208057	0		=			
ANR	8208169	ArrayIndexing	impls [ index ]		8208057	0					
ANR	8208170	Identifier	impls		8208057	0					
ANR	8208171	Identifier	index		8208057	1					
ANR	8208172	CastExpression	"( pl_interp_implementation_t * ) gs_alloc_bytes_immovable ( mem , sizeof ( pl_interp_implementation_t ) , ""pl_main_languages_init interp"" )"		8208057	1					
ANR	8208173	CastTarget	pl_interp_implementation_t *		8208057	0					
ANR	8208174	CallExpression	"gs_alloc_bytes_immovable ( mem , sizeof ( pl_interp_implementation_t ) , ""pl_main_languages_init interp"" )"		8208057	1					
ANR	8208175	Callee	gs_alloc_bytes_immovable		8208057	0					
ANR	8208176	Identifier	gs_alloc_bytes_immovable		8208057	0					
ANR	8208177	ArgumentList	mem		8208057	1					
ANR	8208178	Argument	mem		8208057	0					
ANR	8208179	Identifier	mem		8208057	0					
ANR	8208180	Argument	sizeof ( pl_interp_implementation_t )		8208057	1					
ANR	8208181	SizeofExpression	sizeof ( pl_interp_implementation_t )		8208057	0					
ANR	8208182	Sizeof	sizeof		8208057	0					
ANR	8208183	SizeofOperand	pl_interp_implementation_t		8208057	1					
ANR	8208184	Argument	"""pl_main_languages_init interp"""		8208057	2					
ANR	8208185	PrimaryExpression	"""pl_main_languages_init interp"""		8208057	0					
ANR	8208186	IfStatement	if ( impls [ index ] == NULL )		8208057	2					
ANR	8208187	Condition	impls [ index ] == NULL	503:12:16231:16250	8208057	0	True				
ANR	8208188	EqualityExpression	impls [ index ] == NULL		8208057	0		==			
ANR	8208189	ArrayIndexing	impls [ index ]		8208057	0					
ANR	8208190	Identifier	impls		8208057	0					
ANR	8208191	Identifier	index		8208057	1					
ANR	8208192	Identifier	NULL		8208057	1					
ANR	8208193	GotoStatement	goto pmui_err ;	504:12:16265:16278	8208057	1	True				
ANR	8208194	Identifier	pmui_err		8208057	0					
ANR	8208195	ExpressionStatement	* impls [ index ] = * pdl_implementations [ index ]	506:8:16301:16344	8208057	3	True				
ANR	8208196	AssignmentExpression	* impls [ index ] = * pdl_implementations [ index ]		8208057	0		=			
ANR	8208197	UnaryOperationExpression	* impls [ index ]		8208057	0					
ANR	8208198	UnaryOperator	*		8208057	0					
ANR	8208199	ArrayIndexing	impls [ index ]		8208057	1					
ANR	8208200	Identifier	impls		8208057	0					
ANR	8208201	Identifier	index		8208057	1					
ANR	8208202	UnaryOperationExpression	* pdl_implementations [ index ]		8208057	1					
ANR	8208203	UnaryOperator	*		8208057	0					
ANR	8208204	ArrayIndexing	pdl_implementations [ index ]		8208057	1					
ANR	8208205	Identifier	pdl_implementations		8208057	0					
ANR	8208206	Identifier	index		8208057	1					
ANR	8208207	ExpressionStatement	"code = pl_allocate_interp_instance ( impls [ index ] , mem )"	511:8:16542:16595	8208057	4	True				
ANR	8208208	AssignmentExpression	"code = pl_allocate_interp_instance ( impls [ index ] , mem )"		8208057	0		=			
ANR	8208209	Identifier	code		8208057	0					
ANR	8208210	CallExpression	"pl_allocate_interp_instance ( impls [ index ] , mem )"		8208057	1					
ANR	8208211	Callee	pl_allocate_interp_instance		8208057	0					
ANR	8208212	Identifier	pl_allocate_interp_instance		8208057	0					
ANR	8208213	ArgumentList	impls [ index ]		8208057	1					
ANR	8208214	Argument	impls [ index ]		8208057	0					
ANR	8208215	ArrayIndexing	impls [ index ]		8208057	0					
ANR	8208216	Identifier	impls		8208057	0					
ANR	8208217	Identifier	index		8208057	1					
ANR	8208218	Argument	mem		8208057	1					
ANR	8208219	Identifier	mem		8208057	0					
ANR	8208220	IfStatement	if ( code < 0 )		8208057	5					
ANR	8208221	Condition	code < 0	513:12:16610:16617	8208057	0	True				
ANR	8208222	RelationalExpression	code < 0		8208057	0		<			
ANR	8208223	Identifier	code		8208057	0					
ANR	8208224	PrimaryExpression	0		8208057	1					
ANR	8208225	CompoundStatement		41:22:1430:1430	8208057	1					
ANR	8208226	ExpressionStatement	"errprintf ( mem , ""Unable to create %s interpreter.\\n"" , pl_characteristics ( impls [ index ] ) -> language )"	514:12:16634:16779	8208057	0	True				
ANR	8208227	CallExpression	"errprintf ( mem , ""Unable to create %s interpreter.\\n"" , pl_characteristics ( impls [ index ] ) -> language )"		8208057	0					
ANR	8208228	Callee	errprintf		8208057	0					
ANR	8208229	Identifier	errprintf		8208057	0					
ANR	8208230	ArgumentList	mem		8208057	1					
ANR	8208231	Argument	mem		8208057	0					
ANR	8208232	Identifier	mem		8208057	0					
ANR	8208233	Argument	"""Unable to create %s interpreter.\\n"""		8208057	1					
ANR	8208234	PrimaryExpression	"""Unable to create %s interpreter.\\n"""		8208057	0					
ANR	8208235	Argument	pl_characteristics ( impls [ index ] ) -> language		8208057	2					
ANR	8208236	PtrMemberAccess	pl_characteristics ( impls [ index ] ) -> language		8208057	0					
ANR	8208237	CallExpression	pl_characteristics ( impls [ index ] )		8208057	0					
ANR	8208238	Callee	pl_characteristics		8208057	0					
ANR	8208239	Identifier	pl_characteristics		8208057	0					
ANR	8208240	ArgumentList	impls [ index ]		8208057	1					
ANR	8208241	Argument	impls [ index ]		8208057	0					
ANR	8208242	ArrayIndexing	impls [ index ]		8208057	0					
ANR	8208243	Identifier	impls		8208057	0					
ANR	8208244	Identifier	index		8208057	1					
ANR	8208245	Identifier	language		8208057	1					
ANR	8208246	ExpressionStatement	"gs_free_object ( mem , impls [ index ] , ""pl_main_languages_init interp"" )"	517:12:16793:16859	8208057	1	True				
ANR	8208247	CallExpression	"gs_free_object ( mem , impls [ index ] , ""pl_main_languages_init interp"" )"		8208057	0					
ANR	8208248	Callee	gs_free_object		8208057	0					
ANR	8208249	Identifier	gs_free_object		8208057	0					
ANR	8208250	ArgumentList	mem		8208057	1					
ANR	8208251	Argument	mem		8208057	0					
ANR	8208252	Identifier	mem		8208057	0					
ANR	8208253	Argument	impls [ index ]		8208057	1					
ANR	8208254	ArrayIndexing	impls [ index ]		8208057	0					
ANR	8208255	Identifier	impls		8208057	0					
ANR	8208256	Identifier	index		8208057	1					
ANR	8208257	Argument	"""pl_main_languages_init interp"""		8208057	2					
ANR	8208258	PrimaryExpression	"""pl_main_languages_init interp"""		8208057	0					
ANR	8208259	ExpressionStatement	impls [ index ] = NULL	518:12:16873:16892	8208057	2	True				
ANR	8208260	AssignmentExpression	impls [ index ] = NULL		8208057	0		=			
ANR	8208261	ArrayIndexing	impls [ index ]		8208057	0					
ANR	8208262	Identifier	impls		8208057	0					
ANR	8208263	Identifier	index		8208057	1					
ANR	8208264	Identifier	NULL		8208057	1					
ANR	8208265	GotoStatement	goto pmui_err ;	519:12:16906:16919	8208057	3	True				
ANR	8208266	Identifier	pmui_err		8208057	0					
ANR	8208267	ReturnStatement	return 0 ;	524:4:16947:16955	8208057	12	True				
ANR	8208268	PrimaryExpression	0		8208057	0					
ANR	8208269	Label	pmui_err :	526:1:16959:16967	8208057	13	True				
ANR	8208270	Identifier	pmui_err		8208057	0					
ANR	8208271	ReturnStatement	return - 1 ;	527:4:16973:16982	8208057	14	True				
ANR	8208272	UnaryOperationExpression	- 1		8208057	0					
ANR	8208273	UnaryOperator	-		8208057	0					
ANR	8208274	PrimaryExpression	1		8208057	1					
ANR	8208275	ReturnType	static int		8208057	1					
ANR	8208276	Identifier	pl_main_languages_init		8208057	2					
ANR	8208277	ParameterList	"gs_memory_t * mem , pl_main_instance_t * minst"		8208057	3					
ANR	8208278	Parameter	gs_memory_t * mem	470:23:15036:15052	8208057	0	True				
ANR	8208279	ParameterType	gs_memory_t *		8208057	0					
ANR	8208280	Identifier	mem		8208057	1					
ANR	8208281	Parameter	pl_main_instance_t * minst	471:22:15114:15139	8208057	1	True				
ANR	8208282	ParameterType	pl_main_instance_t *		8208057	0					
ANR	8208283	Identifier	minst		8208057	1					
ANR	8208284	CFGEntryNode	ENTRY		8208057		True				
ANR	8208285	CFGExitNode	EXIT		8208057		True				
ANR	8208286	Symbol	* pdl_implementations		8208057						
ANR	8208287	Symbol	minst		8208057						
ANR	8208288	Symbol	code		8208057						
ANR	8208289	Symbol	* impls [ index ]		8208057						
ANR	8208290	Symbol	* impls		8208057						
ANR	8208291	Symbol	* index		8208057						
ANR	8208292	Symbol	pdl_implementations		8208057						
ANR	8208293	Symbol	minst -> curr_implementation		8208057						
ANR	8208294	Symbol	pl_characteristics		8208057						
ANR	8208295	Symbol	* count		8208057						
ANR	8208296	Symbol	* * pdl_implementations		8208057						
ANR	8208297	Symbol	mem		8208057						
ANR	8208298	Symbol	gs_alloc_bytes_immovable		8208057						
ANR	8208299	Symbol	* pdl_implementations [ index ]		8208057						
ANR	8208300	Symbol	* * impls		8208057						
ANR	8208301	Symbol	minst -> desired_implementation		8208057						
ANR	8208302	Symbol	* * index		8208057						
ANR	8208303	Symbol	NULL		8208057						
ANR	8208304	Symbol	sz		8208057						
ANR	8208305	Symbol	count		8208057						
ANR	8208306	Symbol	index		8208057						
ANR	8208307	Symbol	impls		8208057						
ANR	8208308	Symbol	minst -> implementations		8208057						
ANR	8208309	Symbol	* minst		8208057						
ANR	8208310	Symbol	pl_allocate_interp_instance		8208057						
ANR	8208311	Symbol	pl_characteristics ( impls [ index ] ) -> language		8208057						
ANR	8208312	Symbol	* pl_characteristics		8208057						
ANR	8208313	Function	pl_main_get_instance	530:0:16987:17098							
ANR	8208314	FunctionDef	pl_main_get_instance (const gs_memory_t * mem)		8208313	0					
ANR	8208315	CompoundStatement		532:0:17053:17098	8208313	0					
ANR	8208316	ReturnStatement	return mem -> gs_lib_ctx -> top_of_system ;	533:4:17059:17096	8208313	0	True				
ANR	8208317	PtrMemberAccess	mem -> gs_lib_ctx -> top_of_system		8208313	0					
ANR	8208318	PtrMemberAccess	mem -> gs_lib_ctx		8208313	0					
ANR	8208319	Identifier	mem		8208313	0					
ANR	8208320	Identifier	gs_lib_ctx		8208313	1					
ANR	8208321	Identifier	top_of_system		8208313	1					
ANR	8208322	ReturnType	pl_main_instance_t *		8208313	1					
ANR	8208323	Identifier	pl_main_get_instance		8208313	2					
ANR	8208324	ParameterList	const gs_memory_t * mem		8208313	3					
ANR	8208325	Parameter	const gs_memory_t * mem	531:21:17029:17050	8208313	0	True				
ANR	8208326	ParameterType	const gs_memory_t *		8208313	0					
ANR	8208327	Identifier	mem		8208313	1					
ANR	8208328	CFGEntryNode	ENTRY		8208313		True				
ANR	8208329	CFGExitNode	EXIT		8208313		True				
ANR	8208330	Symbol	mem		8208313						
ANR	8208331	Symbol	* * mem		8208313						
ANR	8208332	Symbol	mem -> gs_lib_ctx -> top_of_system		8208313						
ANR	8208333	Symbol	* mem -> gs_lib_ctx		8208313						
ANR	8208334	Symbol	mem -> gs_lib_ctx		8208313						
ANR	8208335	Symbol	* mem		8208313						
ANR	8208336	Function	pl_main_get_pcl_personality	536:0:17101:17217							
ANR	8208337	FunctionDef	pl_main_get_pcl_personality (const gs_memory_t * mem)		8208336	0					
ANR	8208338	CompoundStatement		538:0:17160:17217	8208336	0					
ANR	8208339	ReturnStatement	return pl_main_get_instance ( mem ) -> pcl_personality ;	539:4:17166:17215	8208336	0	True				
ANR	8208340	PtrMemberAccess	pl_main_get_instance ( mem ) -> pcl_personality		8208336	0					
ANR	8208341	CallExpression	pl_main_get_instance ( mem )		8208336	0					
ANR	8208342	Callee	pl_main_get_instance		8208336	0					
ANR	8208343	Identifier	pl_main_get_instance		8208336	0					
ANR	8208344	ArgumentList	mem		8208336	1					
ANR	8208345	Argument	mem		8208336	0					
ANR	8208346	Identifier	mem		8208336	0					
ANR	8208347	Identifier	pcl_personality		8208336	1					
ANR	8208348	ReturnType	char *		8208336	1					
ANR	8208349	Identifier	pl_main_get_pcl_personality		8208336	2					
ANR	8208350	ParameterList	const gs_memory_t * mem		8208336	3					
ANR	8208351	Parameter	const gs_memory_t * mem	537:28:17136:17157	8208336	0	True				
ANR	8208352	ParameterType	const gs_memory_t *		8208336	0					
ANR	8208353	Identifier	mem		8208336	1					
ANR	8208354	CFGEntryNode	ENTRY		8208336		True				
ANR	8208355	CFGExitNode	EXIT		8208336		True				
ANR	8208356	Symbol	mem		8208336						
ANR	8208357	Symbol	pl_main_get_instance ( mem ) -> pcl_personality		8208336						
ANR	8208358	Symbol	* pl_main_get_instance		8208336						
ANR	8208359	Symbol	pl_main_get_instance		8208336						
ANR	8208360	Function	pl_main_alloc_instance	545:0:17324:18620							
ANR	8208361	FunctionDef	pl_main_alloc_instance (gs_memory_t * mem)		8208360	0					
ANR	8208362	CompoundStatement		547:0:17387:18620	8208360	0					
ANR	8208363	IdentifierDeclStatement	pl_main_instance_t * minst ;	548:4:17393:17418	8208360	0	True				
ANR	8208364	IdentifierDecl	* minst		8208360	0					
ANR	8208365	IdentifierDeclType	pl_main_instance_t *		8208360	0					
ANR	8208366	Identifier	minst		8208360	1					
ANR	8208367	IfStatement	if ( mem == NULL )		8208360	1					
ANR	8208368	Condition	mem == NULL	549:8:17428:17438	8208360	0	True				
ANR	8208369	EqualityExpression	mem == NULL		8208360	0		==			
ANR	8208370	Identifier	mem		8208360	0					
ANR	8208371	Identifier	NULL		8208360	1					
ANR	8208372	ReturnStatement	return NULL ;	550:8:17449:17460	8208360	1	True				
ANR	8208373	Identifier	NULL		8208360	0					
ANR	8208374	ExpressionStatement	"minst = ( pl_main_instance_t * ) gs_alloc_bytes_immovable ( mem , sizeof ( pl_main_instance_t ) , ""pl_main_instance"" )"	552:4:17467:17692	8208360	2	True				
ANR	8208375	AssignmentExpression	"minst = ( pl_main_instance_t * ) gs_alloc_bytes_immovable ( mem , sizeof ( pl_main_instance_t ) , ""pl_main_instance"" )"		8208360	0		=			
ANR	8208376	Identifier	minst		8208360	0					
ANR	8208377	CastExpression	"( pl_main_instance_t * ) gs_alloc_bytes_immovable ( mem , sizeof ( pl_main_instance_t ) , ""pl_main_instance"" )"		8208360	1					
ANR	8208378	CastTarget	pl_main_instance_t *		8208360	0					
ANR	8208379	CallExpression	"gs_alloc_bytes_immovable ( mem , sizeof ( pl_main_instance_t ) , ""pl_main_instance"" )"		8208360	1					
ANR	8208380	Callee	gs_alloc_bytes_immovable		8208360	0					
ANR	8208381	Identifier	gs_alloc_bytes_immovable		8208360	0					
ANR	8208382	ArgumentList	mem		8208360	1					
ANR	8208383	Argument	mem		8208360	0					
ANR	8208384	Identifier	mem		8208360	0					
ANR	8208385	Argument	sizeof ( pl_main_instance_t )		8208360	1					
ANR	8208386	SizeofExpression	sizeof ( pl_main_instance_t )		8208360	0					
ANR	8208387	Sizeof	sizeof		8208360	0					
ANR	8208388	SizeofOperand	pl_main_instance_t		8208360	1					
ANR	8208389	Argument	"""pl_main_instance"""		8208360	2					
ANR	8208390	PrimaryExpression	"""pl_main_instance"""		8208360	0					
ANR	8208391	IfStatement	if ( minst == NULL )		8208360	3					
ANR	8208392	Condition	minst == NULL	555:8:17702:17714	8208360	0	True				
ANR	8208393	EqualityExpression	minst == NULL		8208360	0		==			
ANR	8208394	Identifier	minst		8208360	0					
ANR	8208395	Identifier	NULL		8208360	1					
ANR	8208396	ReturnStatement	return 0 ;	556:8:17725:17733	8208360	1	True				
ANR	8208397	PrimaryExpression	0		8208360	0					
ANR	8208398	ExpressionStatement	"memset ( minst , 0 , sizeof ( * minst ) )"	558:4:17740:17772	8208360	4	True				
ANR	8208399	CallExpression	"memset ( minst , 0 , sizeof ( * minst ) )"		8208360	0					
ANR	8208400	Callee	memset		8208360	0					
ANR	8208401	Identifier	memset		8208360	0					
ANR	8208402	ArgumentList	minst		8208360	1					
ANR	8208403	Argument	minst		8208360	0					
ANR	8208404	Identifier	minst		8208360	0					
ANR	8208405	Argument	0		8208360	1					
ANR	8208406	PrimaryExpression	0		8208360	0					
ANR	8208407	Argument	sizeof ( * minst )		8208360	2					
ANR	8208408	SizeofExpression	sizeof ( * minst )		8208360	0					
ANR	8208409	Sizeof	sizeof		8208360	0					
ANR	8208410	UnaryOperationExpression	* minst		8208360	1					
ANR	8208411	UnaryOperator	*		8208360	0					
ANR	8208412	Identifier	minst		8208360	1					
ANR	8208413	ExpressionStatement	minst -> memory = mem	560:4:17779:17798	8208360	5	True				
ANR	8208414	AssignmentExpression	minst -> memory = mem		8208360	0		=			
ANR	8208415	PtrMemberAccess	minst -> memory		8208360	0					
ANR	8208416	Identifier	minst		8208360	0					
ANR	8208417	Identifier	memory		8208360	1					
ANR	8208418	Identifier	mem		8208360	1					
ANR	8208419	ExpressionStatement	minst -> pjl_from_args = false	562:4:17809:17837	8208360	6	True				
ANR	8208420	AssignmentExpression	minst -> pjl_from_args = false		8208360	0		=			
ANR	8208421	PtrMemberAccess	minst -> pjl_from_args		8208360	0					
ANR	8208422	Identifier	minst		8208360	0					
ANR	8208423	Identifier	pjl_from_args		8208360	1					
ANR	8208424	Identifier	false		8208360	1					
ANR	8208425	ExpressionStatement	minst -> error_report = - 1	563:4:17843:17867	8208360	7	True				
ANR	8208426	AssignmentExpression	minst -> error_report = - 1		8208360	0		=			
ANR	8208427	PtrMemberAccess	minst -> error_report		8208360	0					
ANR	8208428	Identifier	minst		8208360	0					
ANR	8208429	Identifier	error_report		8208360	1					
ANR	8208430	UnaryOperationExpression	- 1		8208360	1					
ANR	8208431	UnaryOperator	-		8208360	0					
ANR	8208432	PrimaryExpression	1		8208360	1					
ANR	8208433	ExpressionStatement	minst -> pause = true	564:4:17873:17892	8208360	8	True				
ANR	8208434	AssignmentExpression	minst -> pause = true		8208360	0		=			
ANR	8208435	PtrMemberAccess	minst -> pause		8208360	0					
ANR	8208436	Identifier	minst		8208360	0					
ANR	8208437	Identifier	pause		8208360	1					
ANR	8208438	Identifier	true		8208360	1					
ANR	8208439	ExpressionStatement	minst -> device = 0	565:4:17898:17915	8208360	9	True				
ANR	8208440	AssignmentExpression	minst -> device = 0		8208360	0		=			
ANR	8208441	PtrMemberAccess	minst -> device		8208360	0					
ANR	8208442	Identifier	minst		8208360	0					
ANR	8208443	Identifier	device		8208360	1					
ANR	8208444	PrimaryExpression	0		8208360	1					
ANR	8208445	ExpressionStatement	minst -> implementation = 0	566:4:17921:17946	8208360	10	True				
ANR	8208446	AssignmentExpression	minst -> implementation = 0		8208360	0		=			
ANR	8208447	PtrMemberAccess	minst -> implementation		8208360	0					
ANR	8208448	Identifier	minst		8208360	0					
ANR	8208449	Identifier	implementation		8208360	1					
ANR	8208450	PrimaryExpression	0		8208360	1					
ANR	8208451	ExpressionStatement	minst -> base_time [ 0 ] = 0	567:4:17952:17975	8208360	11	True				
ANR	8208452	AssignmentExpression	minst -> base_time [ 0 ] = 0		8208360	0		=			
ANR	8208453	ArrayIndexing	minst -> base_time [ 0 ]		8208360	0					
ANR	8208454	PtrMemberAccess	minst -> base_time		8208360	0					
ANR	8208455	Identifier	minst		8208360	0					
ANR	8208456	Identifier	base_time		8208360	1					
ANR	8208457	PrimaryExpression	0		8208360	1					
ANR	8208458	PrimaryExpression	0		8208360	1					
ANR	8208459	ExpressionStatement	minst -> base_time [ 1 ] = 0	568:4:17981:18004	8208360	12	True				
ANR	8208460	AssignmentExpression	minst -> base_time [ 1 ] = 0		8208360	0		=			
ANR	8208461	ArrayIndexing	minst -> base_time [ 1 ]		8208360	0					
ANR	8208462	PtrMemberAccess	minst -> base_time		8208360	0					
ANR	8208463	Identifier	minst		8208360	0					
ANR	8208464	Identifier	base_time		8208360	1					
ANR	8208465	PrimaryExpression	1		8208360	1					
ANR	8208466	PrimaryExpression	0		8208360	1					
ANR	8208467	ExpressionStatement	minst -> interpolate = false	569:4:18010:18036	8208360	13	True				
ANR	8208468	AssignmentExpression	minst -> interpolate = false		8208360	0		=			
ANR	8208469	PtrMemberAccess	minst -> interpolate		8208360	0					
ANR	8208470	Identifier	minst		8208360	0					
ANR	8208471	Identifier	interpolate		8208360	1					
ANR	8208472	Identifier	false		8208360	1					
ANR	8208473	ExpressionStatement	minst -> nocache = false	570:4:18042:18064	8208360	14	True				
ANR	8208474	AssignmentExpression	minst -> nocache = false		8208360	0		=			
ANR	8208475	PtrMemberAccess	minst -> nocache		8208360	0					
ANR	8208476	Identifier	minst		8208360	0					
ANR	8208477	Identifier	nocache		8208360	1					
ANR	8208478	Identifier	false		8208360	1					
ANR	8208479	ExpressionStatement	minst -> page_set_on_command_line = false	571:4:18070:18109	8208360	15	True				
ANR	8208480	AssignmentExpression	minst -> page_set_on_command_line = false		8208360	0		=			
ANR	8208481	PtrMemberAccess	minst -> page_set_on_command_line		8208360	0					
ANR	8208482	Identifier	minst		8208360	0					
ANR	8208483	Identifier	page_set_on_command_line		8208360	1					
ANR	8208484	Identifier	false		8208360	1					
ANR	8208485	ExpressionStatement	minst -> res_set_on_command_line = false	572:4:18115:18153	8208360	16	True				
ANR	8208486	AssignmentExpression	minst -> res_set_on_command_line = false		8208360	0		=			
ANR	8208487	PtrMemberAccess	minst -> res_set_on_command_line		8208360	0					
ANR	8208488	Identifier	minst		8208360	0					
ANR	8208489	Identifier	res_set_on_command_line		8208360	1					
ANR	8208490	Identifier	false		8208360	1					
ANR	8208491	ExpressionStatement	minst -> high_level_device = false	573:4:18159:18191	8208360	17	True				
ANR	8208492	AssignmentExpression	minst -> high_level_device = false		8208360	0		=			
ANR	8208493	PtrMemberAccess	minst -> high_level_device		8208360	0					
ANR	8208494	Identifier	minst		8208360	0					
ANR	8208495	Identifier	high_level_device		8208360	1					
ANR	8208496	Identifier	false		8208360	1					
ANR	8208497	ExpressionStatement	minst -> saved_pages_test_mode = false	575:4:18227:18263	8208360	18	True				
ANR	8208498	AssignmentExpression	minst -> saved_pages_test_mode = false		8208360	0		=			
ANR	8208499	PtrMemberAccess	minst -> saved_pages_test_mode		8208360	0					
ANR	8208500	Identifier	minst		8208360	0					
ANR	8208501	Identifier	saved_pages_test_mode		8208360	1					
ANR	8208502	Identifier	false		8208360	1					
ANR	8208503	ExpressionStatement	minst -> scanconverter = GS_SCANCONVERTER_DEFAULT	577:4:18276:18323	8208360	19	True				
ANR	8208504	AssignmentExpression	minst -> scanconverter = GS_SCANCONVERTER_DEFAULT		8208360	0		=			
ANR	8208505	PtrMemberAccess	minst -> scanconverter		8208360	0					
ANR	8208506	Identifier	minst		8208360	0					
ANR	8208507	Identifier	scanconverter		8208360	1					
ANR	8208508	Identifier	GS_SCANCONVERTER_DEFAULT		8208360	1					
ANR	8208509	ExpressionStatement	minst -> piccdir = NULL	578:4:18329:18350	8208360	20	True				
ANR	8208510	AssignmentExpression	minst -> piccdir = NULL		8208360	0		=			
ANR	8208511	PtrMemberAccess	minst -> piccdir		8208360	0					
ANR	8208512	Identifier	minst		8208360	0					
ANR	8208513	Identifier	piccdir		8208360	1					
ANR	8208514	Identifier	NULL		8208360	1					
ANR	8208515	ExpressionStatement	minst -> pdefault_gray_icc = NULL	579:4:18356:18387	8208360	21	True				
ANR	8208516	AssignmentExpression	minst -> pdefault_gray_icc = NULL		8208360	0		=			
ANR	8208517	PtrMemberAccess	minst -> pdefault_gray_icc		8208360	0					
ANR	8208518	Identifier	minst		8208360	0					
ANR	8208519	Identifier	pdefault_gray_icc		8208360	1					
ANR	8208520	Identifier	NULL		8208360	1					
ANR	8208521	ExpressionStatement	minst -> pdefault_rgb_icc = NULL	580:4:18393:18423	8208360	22	True				
ANR	8208522	AssignmentExpression	minst -> pdefault_rgb_icc = NULL		8208360	0		=			
ANR	8208523	PtrMemberAccess	minst -> pdefault_rgb_icc		8208360	0					
ANR	8208524	Identifier	minst		8208360	0					
ANR	8208525	Identifier	pdefault_rgb_icc		8208360	1					
ANR	8208526	Identifier	NULL		8208360	1					
ANR	8208527	ExpressionStatement	minst -> pdefault_cmyk_icc = NULL	581:4:18429:18460	8208360	23	True				
ANR	8208528	AssignmentExpression	minst -> pdefault_cmyk_icc = NULL		8208360	0		=			
ANR	8208529	PtrMemberAccess	minst -> pdefault_cmyk_icc		8208360	0					
ANR	8208530	Identifier	minst		8208360	0					
ANR	8208531	Identifier	pdefault_cmyk_icc		8208360	1					
ANR	8208532	Identifier	NULL		8208360	1					
ANR	8208533	ExpressionStatement	"strncpy ( & minst -> pcl_personality [ 0 ] , ""PCL"" , sizeof ( minst -> pcl_personality ) - 1 )"	582:4:18466:18556	8208360	24	True				
ANR	8208534	CallExpression	"strncpy ( & minst -> pcl_personality [ 0 ] , ""PCL"" , sizeof ( minst -> pcl_personality ) - 1 )"		8208360	0					
ANR	8208535	Callee	strncpy		8208360	0					
ANR	8208536	Identifier	strncpy		8208360	0					
ANR	8208537	ArgumentList	& minst -> pcl_personality [ 0 ]		8208360	1					
ANR	8208538	Argument	& minst -> pcl_personality [ 0 ]		8208360	0					
ANR	8208539	UnaryOperationExpression	& minst -> pcl_personality [ 0 ]		8208360	0					
ANR	8208540	UnaryOperator	&		8208360	0					
ANR	8208541	ArrayIndexing	minst -> pcl_personality [ 0 ]		8208360	1					
ANR	8208542	PtrMemberAccess	minst -> pcl_personality		8208360	0					
ANR	8208543	Identifier	minst		8208360	0					
ANR	8208544	Identifier	pcl_personality		8208360	1					
ANR	8208545	PrimaryExpression	0		8208360	1					
ANR	8208546	Argument	"""PCL"""		8208360	1					
ANR	8208547	PrimaryExpression	"""PCL"""		8208360	0					
ANR	8208548	Argument	sizeof ( minst -> pcl_personality ) - 1		8208360	2					
ANR	8208549	AdditiveExpression	sizeof ( minst -> pcl_personality ) - 1		8208360	0		-			
ANR	8208550	SizeofExpression	sizeof ( minst -> pcl_personality )		8208360	0					
ANR	8208551	Sizeof	sizeof		8208360	0					
ANR	8208552	PtrMemberAccess	minst -> pcl_personality		8208360	1					
ANR	8208553	Identifier	minst		8208360	0					
ANR	8208554	Identifier	pcl_personality		8208360	1					
ANR	8208555	PrimaryExpression	1		8208360	1					
ANR	8208556	ExpressionStatement	mem -> gs_lib_ctx -> top_of_system = minst	584:4:18562:18600	8208360	25	True				
ANR	8208557	AssignmentExpression	mem -> gs_lib_ctx -> top_of_system = minst		8208360	0		=			
ANR	8208558	PtrMemberAccess	mem -> gs_lib_ctx -> top_of_system		8208360	0					
ANR	8208559	PtrMemberAccess	mem -> gs_lib_ctx		8208360	0					
ANR	8208560	Identifier	mem		8208360	0					
ANR	8208561	Identifier	gs_lib_ctx		8208360	1					
ANR	8208562	Identifier	top_of_system		8208360	1					
ANR	8208563	Identifier	minst		8208360	1					
ANR	8208564	ReturnStatement	return minst ;	585:4:18606:18618	8208360	26	True				
ANR	8208565	Identifier	minst		8208360	0					
ANR	8208566	ReturnType	pl_main_instance_t *		8208360	1					
ANR	8208567	Identifier	pl_main_alloc_instance		8208360	2					
ANR	8208568	ParameterList	gs_memory_t * mem		8208360	3					
ANR	8208569	Parameter	gs_memory_t * mem	546:23:17368:17384	8208360	0	True				
ANR	8208570	ParameterType	gs_memory_t *		8208360	0					
ANR	8208571	Identifier	mem		8208360	1					
ANR	8208572	CFGEntryNode	ENTRY		8208360		True				
ANR	8208573	CFGExitNode	EXIT		8208360		True				
ANR	8208574	Symbol	minst		8208360						
ANR	8208575	Symbol	minst -> error_report		8208360						
ANR	8208576	Symbol	minst -> memory		8208360						
ANR	8208577	Symbol	minst -> saved_pages_test_mode		8208360						
ANR	8208578	Symbol	minst -> pdefault_cmyk_icc		8208360						
ANR	8208579	Symbol	* minst -> base_time		8208360						
ANR	8208580	Symbol	minst -> pause		8208360						
ANR	8208581	Symbol	mem -> gs_lib_ctx -> top_of_system		8208360						
ANR	8208582	Symbol	minst -> nocache		8208360						
ANR	8208583	Symbol	minst -> pdefault_gray_icc		8208360						
ANR	8208584	Symbol	minst -> implementation		8208360						
ANR	8208585	Symbol	mem		8208360						
ANR	8208586	Symbol	gs_alloc_bytes_immovable		8208360						
ANR	8208587	Symbol	minst -> pdefault_rgb_icc		8208360						
ANR	8208588	Symbol	minst -> page_set_on_command_line		8208360						
ANR	8208589	Symbol	minst -> pjl_from_args		8208360						
ANR	8208590	Symbol	minst -> high_level_device		8208360						
ANR	8208591	Symbol	NULL		8208360						
ANR	8208592	Symbol	minst -> pcl_personality		8208360						
ANR	8208593	Symbol	minst -> scanconverter		8208360						
ANR	8208594	Symbol	false		8208360						
ANR	8208595	Symbol	minst -> device		8208360						
ANR	8208596	Symbol	* * mem		8208360						
ANR	8208597	Symbol	minst -> res_set_on_command_line		8208360						
ANR	8208598	Symbol	* minst		8208360						
ANR	8208599	Symbol	minst -> piccdir		8208360						
ANR	8208600	Symbol	* * minst		8208360						
ANR	8208601	Symbol	minst -> base_time		8208360						
ANR	8208602	Symbol	true		8208360						
ANR	8208603	Symbol	GS_SCANCONVERTER_DEFAULT		8208360						
ANR	8208604	Symbol	* mem -> gs_lib_ctx		8208360						
ANR	8208605	Symbol	minst -> interpolate		8208360						
ANR	8208606	Symbol	mem -> gs_lib_ctx		8208360						
ANR	8208607	Symbol	* mem		8208360						
ANR	8208608	Function	pl_top_create_device	591:0:18724:20881							
ANR	8208609	FunctionDef	"pl_top_create_device (pl_main_instance_t * pti , int index , bool is_default)"		8208608	0					
ANR	8208610	CompoundStatement		593:0:18810:20881	8208608	0					
ANR	8208611	IdentifierDeclStatement	int code = 0 ;	594:4:18816:18828	8208608	0	True				
ANR	8208612	IdentifierDecl	code = 0		8208608	0					
ANR	8208613	IdentifierDeclType	int		8208608	0					
ANR	8208614	Identifier	code		8208608	1					
ANR	8208615	AssignmentExpression	code = 0		8208608	2		=			
ANR	8208616	Identifier	code		8208608	0					
ANR	8208617	PrimaryExpression	0		8208608	1					
ANR	8208618	IfStatement	if ( ! is_default || ! pti -> device )		8208608	1					
ANR	8208619	Condition	! is_default || ! pti -> device	596:8:18839:18865	8208608	0	True				
ANR	8208620	OrExpression	! is_default || ! pti -> device		8208608	0		||			
ANR	8208621	UnaryOperationExpression	! is_default		8208608	0					
ANR	8208622	UnaryOperator	!		8208608	0					
ANR	8208623	Identifier	is_default		8208608	1					
ANR	8208624	UnaryOperationExpression	! pti -> device		8208608	1					
ANR	8208625	UnaryOperator	!		8208608	0					
ANR	8208626	PtrMemberAccess	pti -> device		8208608	1					
ANR	8208627	Identifier	pti		8208608	0					
ANR	8208628	Identifier	device		8208608	1					
ANR	8208629	CompoundStatement		5:8:67:87	8208608	1					
ANR	8208630	IdentifierDeclStatement	const gx_device * dev ;	597:8:18878:18898	8208608	0	True				
ANR	8208631	IdentifierDecl	* dev		8208608	0					
ANR	8208632	IdentifierDeclType	const gx_device *		8208608	0					
ANR	8208633	Identifier	dev		8208608	1					
ANR	8208634	IfStatement	if ( pti -> device != NULL )		8208608	1					
ANR	8208635	Condition	pti -> device != NULL	603:12:19188:19206	8208608	0	True				
ANR	8208636	EqualityExpression	pti -> device != NULL		8208608	0		!=			
ANR	8208637	PtrMemberAccess	pti -> device		8208608	0					
ANR	8208638	Identifier	pti		8208608	0					
ANR	8208639	Identifier	device		8208608	1					
ANR	8208640	Identifier	NULL		8208608	1					
ANR	8208641	ExpressionStatement	pti -> device = NULL	604:12:19221:19239	8208608	1	True				
ANR	8208642	AssignmentExpression	pti -> device = NULL		8208608	0		=			
ANR	8208643	PtrMemberAccess	pti -> device		8208608	0					
ANR	8208644	Identifier	pti		8208608	0					
ANR	8208645	Identifier	device		8208608	1					
ANR	8208646	Identifier	NULL		8208608	1					
ANR	8208647	IfStatement	if ( index == - 1 )		8208608	2					
ANR	8208648	Condition	index == - 1	606:12:19254:19264	8208608	0	True				
ANR	8208649	EqualityExpression	index == - 1		8208608	0		==			
ANR	8208650	Identifier	index		8208608	0					
ANR	8208651	UnaryOperationExpression	- 1		8208608	1					
ANR	8208652	UnaryOperator	-		8208608	0					
ANR	8208653	PrimaryExpression	1		8208608	1					
ANR	8208654	CompoundStatement		14:25:456:456	8208608	1					
ANR	8208655	ExpressionStatement	dev = gs_getdefaultlibdevice ( pti -> memory )	607:12:19281:19322	8208608	0	True				
ANR	8208656	AssignmentExpression	dev = gs_getdefaultlibdevice ( pti -> memory )		8208608	0		=			
ANR	8208657	Identifier	dev		8208608	0					
ANR	8208658	CallExpression	gs_getdefaultlibdevice ( pti -> memory )		8208608	1					
ANR	8208659	Callee	gs_getdefaultlibdevice		8208608	0					
ANR	8208660	Identifier	gs_getdefaultlibdevice		8208608	0					
ANR	8208661	ArgumentList	pti -> memory		8208608	1					
ANR	8208662	Argument	pti -> memory		8208608	0					
ANR	8208663	PtrMemberAccess	pti -> memory		8208608	0					
ANR	8208664	Identifier	pti		8208608	0					
ANR	8208665	Identifier	memory		8208608	1					
ANR	8208666	ElseStatement	else		8208608	0					
ANR	8208667	CompoundStatement		18:12:550:572	8208608	0					
ANR	8208668	IdentifierDeclStatement	const gx_device * * list ;	610:12:19361:19383	8208608	0	True				
ANR	8208669	IdentifierDecl	* * list		8208608	0					
ANR	8208670	IdentifierDeclType	const gx_device * *		8208608	0					
ANR	8208671	Identifier	list		8208608	1					
ANR	8208672	Statement	gs_lib_device_list	611:12:19397:19414	8208608	1	True				
ANR	8208673	Statement	(	611:30:19415:19415	8208608	2	True				
ANR	8208674	Statement	(	611:31:19416:19416	8208608	3	True				
ANR	8208675	Statement	const	611:32:19417:19421	8208608	4	True				
ANR	8208676	Statement	gx_device	611:38:19423:19431	8208608	5	True				
ANR	8208677	Statement	*	611:48:19433:19433	8208608	6	True				
ANR	8208678	Statement	const	611:50:19435:19439	8208608	7	True				
ANR	8208679	Statement	*	611:56:19441:19441	8208608	8	True				
ANR	8208680	Statement	*	611:57:19442:19442	8208608	9	True				
ANR	8208681	Statement	)	611:58:19443:19443	8208608	10	True				
ANR	8208682	Statement	&	611:59:19444:19444	8208608	11	True				
ANR	8208683	Statement	list	611:60:19445:19448	8208608	12	True				
ANR	8208684	Statement	","	611:64:19449:19449	8208608	13	True				
ANR	8208685	Statement	NULL	611:66:19451:19454	8208608	14	True				
ANR	8208686	Statement	)	611:70:19455:19455	8208608	15	True				
ANR	8208687	ExpressionStatement		611:71:19456:19456	8208608	16	True				
ANR	8208688	ExpressionStatement	dev = list [ index ]	612:12:19470:19487	8208608	17	True				
ANR	8208689	AssignmentExpression	dev = list [ index ]		8208608	0		=			
ANR	8208690	Identifier	dev		8208608	0					
ANR	8208691	ArrayIndexing	list [ index ]		8208608	1					
ANR	8208692	Identifier	list		8208608	0					
ANR	8208693	Identifier	index		8208608	1					
ANR	8208694	ExpressionStatement	"code = gs_copydevice ( & pti -> device , dev , pti -> memory )"	614:8:19507:19559	8208608	3	True				
ANR	8208695	AssignmentExpression	"code = gs_copydevice ( & pti -> device , dev , pti -> memory )"		8208608	0		=			
ANR	8208696	Identifier	code		8208608	0					
ANR	8208697	CallExpression	"gs_copydevice ( & pti -> device , dev , pti -> memory )"		8208608	1					
ANR	8208698	Callee	gs_copydevice		8208608	0					
ANR	8208699	Identifier	gs_copydevice		8208608	0					
ANR	8208700	ArgumentList	& pti -> device		8208608	1					
ANR	8208701	Argument	& pti -> device		8208608	0					
ANR	8208702	UnaryOperationExpression	& pti -> device		8208608	0					
ANR	8208703	UnaryOperator	&		8208608	0					
ANR	8208704	PtrMemberAccess	pti -> device		8208608	1					
ANR	8208705	Identifier	pti		8208608	0					
ANR	8208706	Identifier	device		8208608	1					
ANR	8208707	Argument	dev		8208608	1					
ANR	8208708	Identifier	dev		8208608	0					
ANR	8208709	Argument	pti -> memory		8208608	2					
ANR	8208710	PtrMemberAccess	pti -> memory		8208608	0					
ANR	8208711	Identifier	pti		8208608	0					
ANR	8208712	Identifier	memory		8208608	1					
ANR	8208713	IfStatement	if ( code < 0 )		8208608	4					
ANR	8208714	Condition	code < 0	616:12:19574:19581	8208608	0	True				
ANR	8208715	RelationalExpression	code < 0		8208608	0		<			
ANR	8208716	Identifier	code		8208608	0					
ANR	8208717	PrimaryExpression	0		8208608	1					
ANR	8208718	ReturnStatement	return code ;	617:12:19596:19607	8208608	1	True				
ANR	8208719	Identifier	code		8208608	0					
ANR	8208720	IfStatement	if ( pti -> device == NULL )		8208608	5					
ANR	8208721	Condition	pti -> device == NULL	619:12:19622:19640	8208608	0	True				
ANR	8208722	EqualityExpression	pti -> device == NULL		8208608	0		==			
ANR	8208723	PtrMemberAccess	pti -> device		8208608	0					
ANR	8208724	Identifier	pti		8208608	0					
ANR	8208725	Identifier	device		8208608	1					
ANR	8208726	Identifier	NULL		8208608	1					
ANR	8208727	ReturnStatement	return gs_error_VMerror ;	620:12:19655:19678	8208608	1	True				
ANR	8208728	Identifier	gs_error_VMerror		8208608	0					
ANR	8208729	ExpressionStatement	"gs_register_struct_root ( pti -> memory , & device_root , ( void * * ) & pti -> device , ""pl_top_create_device"" )"	622:8:19689:19850	8208608	6	True				
ANR	8208730	CallExpression	"gs_register_struct_root ( pti -> memory , & device_root , ( void * * ) & pti -> device , ""pl_top_create_device"" )"		8208608	0					
ANR	8208731	Callee	gs_register_struct_root		8208608	0					
ANR	8208732	Identifier	gs_register_struct_root		8208608	0					
ANR	8208733	ArgumentList	pti -> memory		8208608	1					
ANR	8208734	Argument	pti -> memory		8208608	0					
ANR	8208735	PtrMemberAccess	pti -> memory		8208608	0					
ANR	8208736	Identifier	pti		8208608	0					
ANR	8208737	Identifier	memory		8208608	1					
ANR	8208738	Argument	& device_root		8208608	1					
ANR	8208739	UnaryOperationExpression	& device_root		8208608	0					
ANR	8208740	UnaryOperator	&		8208608	0					
ANR	8208741	Identifier	device_root		8208608	1					
ANR	8208742	Argument	( void * * ) & pti -> device		8208608	2					
ANR	8208743	CastExpression	( void * * ) & pti -> device		8208608	0					
ANR	8208744	CastTarget	void * *		8208608	0					
ANR	8208745	UnaryOperationExpression	& pti -> device		8208608	1					
ANR	8208746	UnaryOperator	&		8208608	0					
ANR	8208747	PtrMemberAccess	pti -> device		8208608	1					
ANR	8208748	Identifier	pti		8208608	0					
ANR	8208749	Identifier	device		8208608	1					
ANR	8208750	Argument	"""pl_top_create_device"""		8208608	3					
ANR	8208751	PrimaryExpression	"""pl_top_create_device"""		8208608	0					
ANR	8208752	CompoundStatement		35:12:1072:1092	8208608	7					
ANR	8208753	IdentifierDeclStatement	gs_c_param_list list ;	627:12:19883:19903	8208608	0	True				
ANR	8208754	IdentifierDecl	list		8208608	0					
ANR	8208755	IdentifierDeclType	gs_c_param_list		8208608	0					
ANR	8208756	Identifier	list		8208608	1					
ANR	8208757	ExpressionStatement	"gs_c_param_list_write ( & list , pti -> device -> memory )"	630:12:19994:20043	8208608	1	True				
ANR	8208758	CallExpression	"gs_c_param_list_write ( & list , pti -> device -> memory )"		8208608	0					
ANR	8208759	Callee	gs_c_param_list_write		8208608	0					
ANR	8208760	Identifier	gs_c_param_list_write		8208608	0					
ANR	8208761	ArgumentList	& list		8208608	1					
ANR	8208762	Argument	& list		8208608	0					
ANR	8208763	UnaryOperationExpression	& list		8208608	0					
ANR	8208764	UnaryOperator	&		8208608	0					
ANR	8208765	Identifier	list		8208608	1					
ANR	8208766	Argument	pti -> device -> memory		8208608	1					
ANR	8208767	PtrMemberAccess	pti -> device -> memory		8208608	0					
ANR	8208768	PtrMemberAccess	pti -> device		8208608	0					
ANR	8208769	Identifier	pti		8208608	0					
ANR	8208770	Identifier	device		8208608	1					
ANR	8208771	Identifier	memory		8208608	1					
ANR	8208772	ExpressionStatement	"code = gs_getdeviceparams ( pti -> device , ( gs_param_list * ) & list )"	631:12:20057:20119	8208608	2	True				
ANR	8208773	AssignmentExpression	"code = gs_getdeviceparams ( pti -> device , ( gs_param_list * ) & list )"		8208608	0		=			
ANR	8208774	Identifier	code		8208608	0					
ANR	8208775	CallExpression	"gs_getdeviceparams ( pti -> device , ( gs_param_list * ) & list )"		8208608	1					
ANR	8208776	Callee	gs_getdeviceparams		8208608	0					
ANR	8208777	Identifier	gs_getdeviceparams		8208608	0					
ANR	8208778	ArgumentList	pti -> device		8208608	1					
ANR	8208779	Argument	pti -> device		8208608	0					
ANR	8208780	PtrMemberAccess	pti -> device		8208608	0					
ANR	8208781	Identifier	pti		8208608	0					
ANR	8208782	Identifier	device		8208608	1					
ANR	8208783	Argument	( gs_param_list * ) & list		8208608	1					
ANR	8208784	CastExpression	( gs_param_list * ) & list		8208608	0					
ANR	8208785	CastTarget	gs_param_list *		8208608	0					
ANR	8208786	UnaryOperationExpression	& list		8208608	1					
ANR	8208787	UnaryOperator	&		8208608	0					
ANR	8208788	Identifier	list		8208608	1					
ANR	8208789	IfStatement	if ( code >= 0 )		8208608	3					
ANR	8208790	Condition	code >= 0	632:16:20137:20145	8208608	0	True				
ANR	8208791	RelationalExpression	code >= 0		8208608	0		>=			
ANR	8208792	Identifier	code		8208608	0					
ANR	8208793	PrimaryExpression	0		8208608	1					
ANR	8208794	CompoundStatement		40:27:1337:1337	8208608	1					
ANR	8208795	ExpressionStatement	gs_c_param_list_read ( & list )	633:16:20166:20193	8208608	0	True				
ANR	8208796	CallExpression	gs_c_param_list_read ( & list )		8208608	0					
ANR	8208797	Callee	gs_c_param_list_read		8208608	0					
ANR	8208798	Identifier	gs_c_param_list_read		8208608	0					
ANR	8208799	ArgumentList	& list		8208608	1					
ANR	8208800	Argument	& list		8208608	0					
ANR	8208801	UnaryOperationExpression	& list		8208608	0					
ANR	8208802	UnaryOperator	&		8208608	0					
ANR	8208803	Identifier	list		8208608	1					
ANR	8208804	ExpressionStatement	"code = param_read_bool ( ( gs_param_list * ) & list , ""HighLevelDevice"" , & pti -> high_level_device )"	634:16:20211:20301	8208608	1	True				
ANR	8208805	AssignmentExpression	"code = param_read_bool ( ( gs_param_list * ) & list , ""HighLevelDevice"" , & pti -> high_level_device )"		8208608	0		=			
ANR	8208806	Identifier	code		8208608	0					
ANR	8208807	CallExpression	"param_read_bool ( ( gs_param_list * ) & list , ""HighLevelDevice"" , & pti -> high_level_device )"		8208608	1					
ANR	8208808	Callee	param_read_bool		8208608	0					
ANR	8208809	Identifier	param_read_bool		8208608	0					
ANR	8208810	ArgumentList	( gs_param_list * ) & list		8208608	1					
ANR	8208811	Argument	( gs_param_list * ) & list		8208608	0					
ANR	8208812	CastExpression	( gs_param_list * ) & list		8208608	0					
ANR	8208813	CastTarget	gs_param_list *		8208608	0					
ANR	8208814	UnaryOperationExpression	& list		8208608	1					
ANR	8208815	UnaryOperator	&		8208608	0					
ANR	8208816	Identifier	list		8208608	1					
ANR	8208817	Argument	"""HighLevelDevice"""		8208608	1					
ANR	8208818	PrimaryExpression	"""HighLevelDevice"""		8208608	0					
ANR	8208819	Argument	& pti -> high_level_device		8208608	2					
ANR	8208820	UnaryOperationExpression	& pti -> high_level_device		8208608	0					
ANR	8208821	UnaryOperator	&		8208608	0					
ANR	8208822	PtrMemberAccess	pti -> high_level_device		8208608	1					
ANR	8208823	Identifier	pti		8208608	0					
ANR	8208824	Identifier	high_level_device		8208608	1					
ANR	8208825	ExpressionStatement	gs_c_param_list_release ( & list )	636:12:20329:20359	8208608	4	True				
ANR	8208826	CallExpression	gs_c_param_list_release ( & list )		8208608	0					
ANR	8208827	Callee	gs_c_param_list_release		8208608	0					
ANR	8208828	Identifier	gs_c_param_list_release		8208608	0					
ANR	8208829	ArgumentList	& list		8208608	1					
ANR	8208830	Argument	& list		8208608	0					
ANR	8208831	UnaryOperationExpression	& list		8208608	0					
ANR	8208832	UnaryOperator	&		8208608	0					
ANR	8208833	Identifier	list		8208608	1					
ANR	8208834	IfStatement	if ( code < 0 )		8208608	5					
ANR	8208835	Condition	code < 0	637:16:20377:20384	8208608	0	True				
ANR	8208836	RelationalExpression	code < 0		8208608	0		<			
ANR	8208837	Identifier	code		8208608	0					
ANR	8208838	PrimaryExpression	0		8208608	1					
ANR	8208839	ReturnStatement	return code ;	638:16:20403:20414	8208608	1	True				
ANR	8208840	Identifier	code		8208608	0					
ANR	8208841	IfStatement	"if ( strcmp ( gs_devicename ( pti -> device ) , ""display"" ) == 0 )"		8208608	8					
ANR	8208842	Condition	"strcmp ( gs_devicename ( pti -> device ) , ""display"" ) == 0"	642:12:20532:20581	8208608	0	True				
ANR	8208843	EqualityExpression	"strcmp ( gs_devicename ( pti -> device ) , ""display"" ) == 0"		8208608	0		==			
ANR	8208844	CallExpression	"strcmp ( gs_devicename ( pti -> device ) , ""display"" )"		8208608	0					
ANR	8208845	Callee	strcmp		8208608	0					
ANR	8208846	Identifier	strcmp		8208608	0					
ANR	8208847	ArgumentList	gs_devicename ( pti -> device )		8208608	1					
ANR	8208848	Argument	gs_devicename ( pti -> device )		8208608	0					
ANR	8208849	CallExpression	gs_devicename ( pti -> device )		8208608	0					
ANR	8208850	Callee	gs_devicename		8208608	0					
ANR	8208851	Identifier	gs_devicename		8208608	0					
ANR	8208852	ArgumentList	pti -> device		8208608	1					
ANR	8208853	Argument	pti -> device		8208608	0					
ANR	8208854	PtrMemberAccess	pti -> device		8208608	0					
ANR	8208855	Identifier	pti		8208608	0					
ANR	8208856	Identifier	device		8208608	1					
ANR	8208857	Argument	"""display"""		8208608	1					
ANR	8208858	PrimaryExpression	"""display"""		8208608	0					
ANR	8208859	PrimaryExpression	0		8208608	1					
ANR	8208860	CompoundStatement		51:12:1787:1810	8208608	1					
ANR	8208861	IdentifierDeclStatement	gx_device_display * ddev ;	643:12:20598:20621	8208608	0	True				
ANR	8208862	IdentifierDecl	* ddev		8208608	0					
ANR	8208863	IdentifierDeclType	gx_device_display *		8208608	0					
ANR	8208864	Identifier	ddev		8208608	1					
ANR	8208865	IfStatement	if ( ! pti -> disp )		8208608	1					
ANR	8208866	Condition	! pti -> disp	645:16:20648:20657	8208608	0	True				
ANR	8208867	UnaryOperationExpression	! pti -> disp		8208608	0					
ANR	8208868	UnaryOperator	!		8208608	0					
ANR	8208869	PtrMemberAccess	pti -> disp		8208608	1					
ANR	8208870	Identifier	pti		8208608	0					
ANR	8208871	Identifier	disp		8208608	1					
ANR	8208872	CompoundStatement		53:28:1849:1849	8208608	1					
ANR	8208873	ExpressionStatement	code = - 1	646:16:20678:20687	8208608	0	True				
ANR	8208874	AssignmentExpression	code = - 1		8208608	0		=			
ANR	8208875	Identifier	code		8208608	0					
ANR	8208876	UnaryOperationExpression	- 1		8208608	1					
ANR	8208877	UnaryOperator	-		8208608	0					
ANR	8208878	PrimaryExpression	1		8208608	1					
ANR	8208879	ElseStatement	else		8208608	0					
ANR	8208880	CompoundStatement		55:19:1897:1897	8208608	0					
ANR	8208881	ExpressionStatement	ddev = ( gx_device_display * ) pti -> device	648:16:20726:20766	8208608	0	True				
ANR	8208882	AssignmentExpression	ddev = ( gx_device_display * ) pti -> device		8208608	0		=			
ANR	8208883	Identifier	ddev		8208608	0					
ANR	8208884	CastExpression	( gx_device_display * ) pti -> device		8208608	1					
ANR	8208885	CastTarget	gx_device_display *		8208608	0					
ANR	8208886	PtrMemberAccess	pti -> device		8208608	1					
ANR	8208887	Identifier	pti		8208608	0					
ANR	8208888	Identifier	device		8208608	1					
ANR	8208889	ExpressionStatement	ddev -> callback = ( display_callback * ) pti -> disp	649:16:20784:20831	8208608	1	True				
ANR	8208890	AssignmentExpression	ddev -> callback = ( display_callback * ) pti -> disp		8208608	0		=			
ANR	8208891	PtrMemberAccess	ddev -> callback		8208608	0					
ANR	8208892	Identifier	ddev		8208608	0					
ANR	8208893	Identifier	callback		8208608	1					
ANR	8208894	CastExpression	( display_callback * ) pti -> disp		8208608	1					
ANR	8208895	CastTarget	display_callback *		8208608	0					
ANR	8208896	PtrMemberAccess	pti -> disp		8208608	1					
ANR	8208897	Identifier	pti		8208608	0					
ANR	8208898	Identifier	disp		8208608	1					
ANR	8208899	ReturnStatement	return code ;	654:4:20868:20879	8208608	2	True				
ANR	8208900	Identifier	code		8208608	0					
ANR	8208901	ReturnType	static int		8208608	1					
ANR	8208902	Identifier	pl_top_create_device		8208608	2					
ANR	8208903	ParameterList	"pl_main_instance_t * pti , int index , bool is_default"		8208608	3					
ANR	8208904	Parameter	pl_main_instance_t * pti	592:21:18756:18779	8208608	0	True				
ANR	8208905	ParameterType	pl_main_instance_t *		8208608	0					
ANR	8208906	Identifier	pti		8208608	1					
ANR	8208907	Parameter	int index	592:47:18782:18790	8208608	1	True				
ANR	8208908	ParameterType	int		8208608	0					
ANR	8208909	Identifier	index		8208608	1					
ANR	8208910	Parameter	bool is_default	592:58:18793:18807	8208608	2	True				
ANR	8208911	ParameterType	bool		8208608	0					
ANR	8208912	Identifier	is_default		8208608	1					
ANR	8208913	CFGEntryNode	ENTRY		8208608		True				
ANR	8208914	CFGExitNode	EXIT		8208608		True				
ANR	8208915	Symbol	& device_root		8208608						
ANR	8208916	Symbol	& pti -> high_level_device		8208608						
ANR	8208917	Symbol	code		8208608						
ANR	8208918	Symbol	* index		8208608						
ANR	8208919	Symbol	gs_copydevice		8208608						
ANR	8208920	Symbol	gs_getdefaultlibdevice		8208608						
ANR	8208921	Symbol	* pti		8208608						
ANR	8208922	Symbol	dev		8208608						
ANR	8208923	Symbol	& list		8208608						
ANR	8208924	Symbol	pti -> device -> memory		8208608						
ANR	8208925	Symbol	ddev		8208608						
ANR	8208926	Symbol	strcmp		8208608						
ANR	8208927	Symbol	NULL		8208608						
ANR	8208928	Symbol	pti		8208608						
ANR	8208929	Symbol	index		8208608						
ANR	8208930	Symbol	param_read_bool		8208608						
ANR	8208931	Symbol	gs_devicename		8208608						
ANR	8208932	Symbol	& pti -> device		8208608						
ANR	8208933	Symbol	is_default		8208608						
ANR	8208934	Symbol	list		8208608						
ANR	8208935	Symbol	gs_error_VMerror		8208608						
ANR	8208936	Symbol	pti -> memory		8208608						
ANR	8208937	Symbol	ddev -> callback		8208608						
ANR	8208938	Symbol	* list		8208608						
ANR	8208939	Symbol	pti -> disp		8208608						
ANR	8208940	Symbol	gs_getdeviceparams		8208608						
ANR	8208941	Symbol	* * pti		8208608						
ANR	8208942	Symbol	pti -> device		8208608						
ANR	8208943	Symbol	* ddev		8208608						
ANR	8208944	Symbol	* pti -> device		8208608						
ANR	8208945	Function	pl_main_arg_fopen	658:0:20931:21036							
ANR	8208946	FunctionDef	"pl_main_arg_fopen (const char * fname , void * ignore_data)"		8208945	0					
ANR	8208947	CompoundStatement		660:0:21001:21036	8208945	0					
ANR	8208948	ReturnStatement	"return gp_fopen ( fname , ""r"" ) ;"	661:4:21007:21034	8208945	0	True				
ANR	8208949	CallExpression	"gp_fopen ( fname , ""r"" )"		8208945	0					
ANR	8208950	Callee	gp_fopen		8208945	0					
ANR	8208951	Identifier	gp_fopen		8208945	0					
ANR	8208952	ArgumentList	fname		8208945	1					
ANR	8208953	Argument	fname		8208945	0					
ANR	8208954	Identifier	fname		8208945	0					
ANR	8208955	Argument	"""r"""		8208945	1					
ANR	8208956	PrimaryExpression	"""r"""		8208945	0					
ANR	8208957	ReturnType	static FILE *		8208945	1					
ANR	8208958	Identifier	pl_main_arg_fopen		8208945	2					
ANR	8208959	ParameterList	"const char * fname , void * ignore_data"		8208945	3					
ANR	8208960	Parameter	const char * fname	659:18:20963:20979	8208945	0	True				
ANR	8208961	ParameterType	const char *		8208945	0					
ANR	8208962	Identifier	fname		8208945	1					
ANR	8208963	Parameter	void * ignore_data	659:37:20982:20998	8208945	1	True				
ANR	8208964	ParameterType	void *		8208945	0					
ANR	8208965	Identifier	ignore_data		8208945	1					
ANR	8208966	CFGEntryNode	ENTRY		8208945		True				
ANR	8208967	CFGExitNode	EXIT		8208945		True				
ANR	8208968	Symbol	fname		8208945						
ANR	8208969	Symbol	ignore_data		8208945						
ANR	8208970	Symbol	gp_fopen		8208945						
ANR	8208971	Function	set_debug_flags	664:0:21039:21206							
ANR	8208972	FunctionDef	"set_debug_flags (const char * arg , char * flags)"		8208971	0					
ANR	8208973	CompoundStatement		666:0:21097:21206	8208971	0					
ANR	8208974	IdentifierDeclStatement	"byte value = ( * arg == '-' ? ( ++ arg , 0 ) : 0xff ) ;"	667:4:21103:21149	8208971	0	True				
ANR	8208975	IdentifierDecl	"value = ( * arg == '-' ? ( ++ arg , 0 ) : 0xff )"		8208971	0					
ANR	8208976	IdentifierDeclType	byte		8208971	0					
ANR	8208977	Identifier	value		8208971	1					
ANR	8208978	AssignmentExpression	"value = ( * arg == '-' ? ( ++ arg , 0 ) : 0xff )"		8208971	2		=			
ANR	8208979	Identifier	value		8208971	0					
ANR	8208980	ConditionalExpression	"* arg == '-' ? ( ++ arg , 0 ) : 0xff"		8208971	1					
ANR	8208981	Condition	* arg == '-'		8208971	0					
ANR	8208982	EqualityExpression	* arg == '-'		8208971	0		==			
ANR	8208983	UnaryOperationExpression	* arg		8208971	0					
ANR	8208984	UnaryOperator	*		8208971	0					
ANR	8208985	Identifier	arg		8208971	1					
ANR	8208986	PrimaryExpression	'-'		8208971	1					
ANR	8208987	Expression	"++ arg , 0"		8208971	1					
ANR	8208988	UnaryExpression	++ arg		8208971	0					
ANR	8208989	IncDec	++		8208971	0					
ANR	8208990	Identifier	arg		8208971	1					
ANR	8208991	PrimaryExpression	0		8208971	1					
ANR	8208992	PrimaryExpression	0xff		8208971	2					
ANR	8208993	WhileStatement	while ( * arg )		8208971	1					
ANR	8208994	Condition	* arg	669:11:21163:21166	8208971	0	True				
ANR	8208995	UnaryOperationExpression	* arg		8208971	0					
ANR	8208996	UnaryOperator	*		8208971	0					
ANR	8208997	Identifier	arg		8208971	1					
ANR	8208998	ExpressionStatement	flags [ * arg ++ & 127 ] = value	670:8:21177:21204	8208971	1	True				
ANR	8208999	AssignmentExpression	flags [ * arg ++ & 127 ] = value		8208971	0		=			
ANR	8209000	ArrayIndexing	flags [ * arg ++ & 127 ]		8208971	0					
ANR	8209001	Identifier	flags		8208971	0					
ANR	8209002	BitAndExpression	* arg ++ & 127		8208971	1		&			
ANR	8209003	UnaryOperationExpression	* arg ++		8208971	0					
ANR	8209004	UnaryOperator	*		8208971	0					
ANR	8209005	PostIncDecOperationExpression	arg ++		8208971	1					
ANR	8209006	Identifier	arg		8208971	0					
ANR	8209007	IncDec	++		8208971	1					
ANR	8209008	PrimaryExpression	127		8208971	1					
ANR	8209009	Identifier	value		8208971	1					
ANR	8209010	ReturnType	static void		8208971	1					
ANR	8209011	Identifier	set_debug_flags		8208971	2					
ANR	8209012	ParameterList	"const char * arg , char * flags"		8208971	3					
ANR	8209013	Parameter	const char * arg	665:16:21067:21081	8208971	0	True				
ANR	8209014	ParameterType	const char *		8208971	0					
ANR	8209015	Identifier	arg		8208971	1					
ANR	8209016	Parameter	char * flags	665:33:21084:21094	8208971	1	True				
ANR	8209017	ParameterType	char *		8208971	0					
ANR	8209018	Identifier	flags		8208971	1					
ANR	8209019	CFGEntryNode	ENTRY		8208971		True				
ANR	8209020	CFGExitNode	EXIT		8208971		True				
ANR	8209021	Symbol	* flags		8208971						
ANR	8209022	Symbol	* arg ++		8208971						
ANR	8209023	Symbol	arg		8208971						
ANR	8209024	Symbol	flags		8208971						
ANR	8209025	Symbol	* * arg ++		8208971						
ANR	8209026	Symbol	value		8208971						
ANR	8209027	Symbol	* arg		8208971						
ANR	8209028	Function	parse_floats	678:0:21412:22034							
ANR	8209029	FunctionDef	"parse_floats (gs_memory_t * mem , uint arg_count , char * arg , float * f)"		8209028	0					
ANR	8209030	CompoundStatement		680:0:21492:22034	8209028	0					
ANR	8209031	IdentifierDeclStatement	int float_index = 0 ;	681:4:21498:21517	8209028	0	True				
ANR	8209032	IdentifierDecl	float_index = 0		8209028	0					
ANR	8209033	IdentifierDeclType	int		8209028	0					
ANR	8209034	Identifier	float_index		8209028	1					
ANR	8209035	AssignmentExpression	float_index = 0		8209028	2		=			
ANR	8209036	Identifier	float_index		8209028	0					
ANR	8209037	PrimaryExpression	0		8209028	1					
ANR	8209038	IdentifierDeclStatement	"char * tok , * l = NULL ;"	682:4:21523:21543	8209028	1	True				
ANR	8209039	IdentifierDecl	* tok		8209028	0					
ANR	8209040	IdentifierDeclType	char *		8209028	0					
ANR	8209041	Identifier	tok		8209028	1					
ANR	8209042	IdentifierDecl	* l = NULL		8209028	1					
ANR	8209043	IdentifierDeclType	char *		8209028	0					
ANR	8209044	Identifier	l		8209028	1					
ANR	8209045	AssignmentExpression	* l = NULL		8209028	2		=			
ANR	8209046	Identifier	NULL		8209028	0					
ANR	8209047	Identifier	NULL		8209028	1					
ANR	8209048	IdentifierDeclStatement	"char * s = arg_copy ( arg , mem ) ;"	684:4:21611:21639	8209028	2	True				
ANR	8209049	IdentifierDecl	"* s = arg_copy ( arg , mem )"		8209028	0					
ANR	8209050	IdentifierDeclType	char *		8209028	0					
ANR	8209051	Identifier	s		8209028	1					
ANR	8209052	AssignmentExpression	"* s = arg_copy ( arg , mem )"		8209028	2		=			
ANR	8209053	Identifier	s		8209028	0					
ANR	8209054	CallExpression	"arg_copy ( arg , mem )"		8209028	1					
ANR	8209055	Callee	arg_copy		8209028	0					
ANR	8209056	Identifier	arg_copy		8209028	0					
ANR	8209057	ArgumentList	arg		8209028	1					
ANR	8209058	Argument	arg		8209028	0					
ANR	8209059	Identifier	arg		8209028	0					
ANR	8209060	Argument	mem		8209028	1					
ANR	8209061	Identifier	mem		8209028	0					
ANR	8209062	IfStatement	if ( s == NULL )		8209028	3					
ANR	8209063	Condition	s == NULL	685:8:21649:21657	8209028	0	True				
ANR	8209064	EqualityExpression	s == NULL		8209028	0		==			
ANR	8209065	Identifier	s		8209028	0					
ANR	8209066	Identifier	NULL		8209028	1					
ANR	8209067	ReturnStatement	return - 1 ;	686:8:21668:21677	8209028	1	True				
ANR	8209068	UnaryOperationExpression	- 1		8209028	0					
ANR	8209069	UnaryOperator	-		8209028	0					
ANR	8209070	PrimaryExpression	1		8209028	1					
ANR	8209071	ExpressionStatement	"tok = gs_strtok ( s , "" \\tx"" , & l )"	689:4:21744:21774	8209028	4	True				
ANR	8209072	AssignmentExpression	"tok = gs_strtok ( s , "" \\tx"" , & l )"		8209028	0		=			
ANR	8209073	Identifier	tok		8209028	0					
ANR	8209074	CallExpression	"gs_strtok ( s , "" \\tx"" , & l )"		8209028	1					
ANR	8209075	Callee	gs_strtok		8209028	0					
ANR	8209076	Identifier	gs_strtok		8209028	0					
ANR	8209077	ArgumentList	s		8209028	1					
ANR	8209078	Argument	s		8209028	0					
ANR	8209079	Identifier	s		8209028	0					
ANR	8209080	Argument	""" \\tx"""		8209028	1					
ANR	8209081	PrimaryExpression	""" \\tx"""		8209028	0					
ANR	8209082	Argument	& l		8209028	2					
ANR	8209083	UnaryOperationExpression	& l		8209028	0					
ANR	8209084	UnaryOperator	&		8209028	0					
ANR	8209085	Identifier	l		8209028	1					
ANR	8209086	WhileStatement	while ( tok != NULL && float_index < arg_count )		8209028	5					
ANR	8209087	Condition	tok != NULL && float_index < arg_count	690:11:21787:21824	8209028	0	True				
ANR	8209088	AndExpression	tok != NULL && float_index < arg_count		8209028	0		&&			
ANR	8209089	EqualityExpression	tok != NULL		8209028	0		!=			
ANR	8209090	Identifier	tok		8209028	0					
ANR	8209091	Identifier	NULL		8209028	1					
ANR	8209092	RelationalExpression	float_index < arg_count		8209028	1		<			
ANR	8209093	Identifier	float_index		8209028	0					
ANR	8209094	Identifier	arg_count		8209028	1					
ANR	8209095	CompoundStatement		11:51:334:334	8209028	1					
ANR	8209096	ExpressionStatement	f [ float_index ++ ] = atof ( tok )	691:8:21837:21865	8209028	0	True				
ANR	8209097	AssignmentExpression	f [ float_index ++ ] = atof ( tok )		8209028	0		=			
ANR	8209098	ArrayIndexing	f [ float_index ++ ]		8209028	0					
ANR	8209099	Identifier	f		8209028	0					
ANR	8209100	PostIncDecOperationExpression	float_index ++		8209028	1					
ANR	8209101	Identifier	float_index		8209028	0					
ANR	8209102	IncDec	++		8209028	1					
ANR	8209103	CallExpression	atof ( tok )		8209028	1					
ANR	8209104	Callee	atof		8209028	0					
ANR	8209105	Identifier	atof		8209028	0					
ANR	8209106	ArgumentList	tok		8209028	1					
ANR	8209107	Argument	tok		8209028	0					
ANR	8209108	Identifier	tok		8209028	0					
ANR	8209109	ExpressionStatement	"tok = gs_strtok ( NULL , "" \\tx"" , & l )"	692:8:21875:21908	8209028	1	True				
ANR	8209110	AssignmentExpression	"tok = gs_strtok ( NULL , "" \\tx"" , & l )"		8209028	0		=			
ANR	8209111	Identifier	tok		8209028	0					
ANR	8209112	CallExpression	"gs_strtok ( NULL , "" \\tx"" , & l )"		8209028	1					
ANR	8209113	Callee	gs_strtok		8209028	0					
ANR	8209114	Identifier	gs_strtok		8209028	0					
ANR	8209115	ArgumentList	NULL		8209028	1					
ANR	8209116	Argument	NULL		8209028	0					
ANR	8209117	Identifier	NULL		8209028	0					
ANR	8209118	Argument	""" \\tx"""		8209028	1					
ANR	8209119	PrimaryExpression	""" \\tx"""		8209028	0					
ANR	8209120	Argument	& l		8209028	2					
ANR	8209121	UnaryOperationExpression	& l		8209028	0					
ANR	8209122	UnaryOperator	&		8209028	0					
ANR	8209123	Identifier	l		8209028	1					
ANR	8209124	ExpressionStatement	"gs_free_object ( mem , s , ""parse_floats()"" )"	695:4:21921:21961	8209028	6	True				
ANR	8209125	CallExpression	"gs_free_object ( mem , s , ""parse_floats()"" )"		8209028	0					
ANR	8209126	Callee	gs_free_object		8209028	0					
ANR	8209127	Identifier	gs_free_object		8209028	0					
ANR	8209128	ArgumentList	mem		8209028	1					
ANR	8209129	Argument	mem		8209028	0					
ANR	8209130	Identifier	mem		8209028	0					
ANR	8209131	Argument	s		8209028	1					
ANR	8209132	Identifier	s		8209028	0					
ANR	8209133	Argument	"""parse_floats()"""		8209028	2					
ANR	8209134	PrimaryExpression	"""parse_floats()"""		8209028	0					
ANR	8209135	ReturnStatement	return float_index ;	698:4:22014:22032	8209028	7	True				
ANR	8209136	Identifier	float_index		8209028	0					
ANR	8209137	ReturnType	static int		8209028	1					
ANR	8209138	Identifier	parse_floats		8209028	2					
ANR	8209139	ParameterList	"gs_memory_t * mem , uint arg_count , char * arg , float * f"		8209028	3					
ANR	8209140	Parameter	gs_memory_t * mem	679:13:21436:21452	8209028	0	True				
ANR	8209141	ParameterType	gs_memory_t *		8209028	0					
ANR	8209142	Identifier	mem		8209028	1					
ANR	8209143	Parameter	uint arg_count	679:32:21455:21468	8209028	1	True				
ANR	8209144	ParameterType	uint		8209028	0					
ANR	8209145	Identifier	arg_count		8209028	1					
ANR	8209146	Parameter	char * arg	679:48:21471:21479	8209028	2	True				
ANR	8209147	ParameterType	char *		8209028	0					
ANR	8209148	Identifier	arg		8209028	1					
ANR	8209149	Parameter	float * f	679:59:21482:21489	8209028	3	True				
ANR	8209150	ParameterType	float *		8209028	0					
ANR	8209151	Identifier	f		8209028	1					
ANR	8209152	CFGEntryNode	ENTRY		8209028		True				
ANR	8209153	CFGExitNode	EXIT		8209028		True				
ANR	8209154	Symbol	NULL		8209028						
ANR	8209155	Symbol	f		8209028						
ANR	8209156	Symbol	gs_strtok		8209028						
ANR	8209157	Symbol	atof		8209028						
ANR	8209158	Symbol	float_index		8209028						
ANR	8209159	Symbol	l		8209028						
ANR	8209160	Symbol	* f		8209028						
ANR	8209161	Symbol	tok		8209028						
ANR	8209162	Symbol	& l		8209028						
ANR	8209163	Symbol	s		8209028						
ANR	8209164	Symbol	mem		8209028						
ANR	8209165	Symbol	arg		8209028						
ANR	8209166	Symbol	arg_copy		8209028						
ANR	8209167	Symbol	arg_count		8209028						
ANR	8209168	Function	check_for_special_int	701:0:22037:22624							
ANR	8209169	FunctionDef	"check_for_special_int (pl_main_instance_t * pmi , const char * arg , int b)"		8209168	0					
ANR	8209170	CompoundStatement		702:0:22120:22624	8209168	0					
ANR	8209171	IfStatement	"if ( ! strncmp ( arg , ""BATCH"" , 5 ) )"		8209168	0					
ANR	8209172	Condition	"! strncmp ( arg , ""BATCH"" , 5 )"	703:8:22130:22154	8209168	0	True				
ANR	8209173	UnaryOperationExpression	"! strncmp ( arg , ""BATCH"" , 5 )"		8209168	0					
ANR	8209174	UnaryOperator	!		8209168	0					
ANR	8209175	CallExpression	"strncmp ( arg , ""BATCH"" , 5 )"		8209168	1					
ANR	8209176	Callee	strncmp		8209168	0					
ANR	8209177	Identifier	strncmp		8209168	0					
ANR	8209178	ArgumentList	arg		8209168	1					
ANR	8209179	Argument	arg		8209168	0					
ANR	8209180	Identifier	arg		8209168	0					
ANR	8209181	Argument	"""BATCH"""		8209168	1					
ANR	8209182	PrimaryExpression	"""BATCH"""		8209168	0					
ANR	8209183	Argument	5		8209168	2					
ANR	8209184	PrimaryExpression	5		8209168	0					
ANR	8209185	ReturnStatement	return ( b == 0 ) ? 0 : gs_note_error ( gs_error_rangecheck ) ;	704:8:22165:22221	8209168	1	True				
ANR	8209186	ConditionalExpression	( b == 0 ) ? 0 : gs_note_error ( gs_error_rangecheck )		8209168	0					
ANR	8209187	Condition	b == 0		8209168	0					
ANR	8209188	EqualityExpression	b == 0		8209168	0		==			
ANR	8209189	Identifier	b		8209168	0					
ANR	8209190	PrimaryExpression	0		8209168	1					
ANR	8209191	PrimaryExpression	0		8209168	1					
ANR	8209192	CallExpression	gs_note_error ( gs_error_rangecheck )		8209168	2					
ANR	8209193	Callee	gs_note_error		8209168	0					
ANR	8209194	Identifier	gs_note_error		8209168	0					
ANR	8209195	ArgumentList	gs_error_rangecheck		8209168	1					
ANR	8209196	Argument	gs_error_rangecheck		8209168	0					
ANR	8209197	Identifier	gs_error_rangecheck		8209168	0					
ANR	8209198	IfStatement	"if ( ! strncmp ( arg , ""NOPAUSE"" , 6 ) )"		8209168	1					
ANR	8209199	Condition	"! strncmp ( arg , ""NOPAUSE"" , 6 )"	705:8:22231:22257	8209168	0	True				
ANR	8209200	UnaryOperationExpression	"! strncmp ( arg , ""NOPAUSE"" , 6 )"		8209168	0					
ANR	8209201	UnaryOperator	!		8209168	0					
ANR	8209202	CallExpression	"strncmp ( arg , ""NOPAUSE"" , 6 )"		8209168	1					
ANR	8209203	Callee	strncmp		8209168	0					
ANR	8209204	Identifier	strncmp		8209168	0					
ANR	8209205	ArgumentList	arg		8209168	1					
ANR	8209206	Argument	arg		8209168	0					
ANR	8209207	Identifier	arg		8209168	0					
ANR	8209208	Argument	"""NOPAUSE"""		8209168	1					
ANR	8209209	PrimaryExpression	"""NOPAUSE"""		8209168	0					
ANR	8209210	Argument	6		8209168	2					
ANR	8209211	PrimaryExpression	6		8209168	0					
ANR	8209212	CompoundStatement		4:37:139:139	8209168	1					
ANR	8209213	ExpressionStatement	pmi -> pause = ! b	706:8:22270:22285	8209168	0	True				
ANR	8209214	AssignmentExpression	pmi -> pause = ! b		8209168	0		=			
ANR	8209215	PtrMemberAccess	pmi -> pause		8209168	0					
ANR	8209216	Identifier	pmi		8209168	0					
ANR	8209217	Identifier	pause		8209168	1					
ANR	8209218	UnaryOperationExpression	! b		8209168	1					
ANR	8209219	UnaryOperator	!		8209168	0					
ANR	8209220	Identifier	b		8209168	1					
ANR	8209221	ReturnStatement	return 0 ;	707:8:22295:22303	8209168	1	True				
ANR	8209222	PrimaryExpression	0		8209168	0					
ANR	8209223	IfStatement	"if ( ! strncmp ( arg , ""DOINTERPOLATE"" , 13 ) )"		8209168	2					
ANR	8209224	Condition	"! strncmp ( arg , ""DOINTERPOLATE"" , 13 )"	709:8:22319:22352	8209168	0	True				
ANR	8209225	UnaryOperationExpression	"! strncmp ( arg , ""DOINTERPOLATE"" , 13 )"		8209168	0					
ANR	8209226	UnaryOperator	!		8209168	0					
ANR	8209227	CallExpression	"strncmp ( arg , ""DOINTERPOLATE"" , 13 )"		8209168	1					
ANR	8209228	Callee	strncmp		8209168	0					
ANR	8209229	Identifier	strncmp		8209168	0					
ANR	8209230	ArgumentList	arg		8209168	1					
ANR	8209231	Argument	arg		8209168	0					
ANR	8209232	Identifier	arg		8209168	0					
ANR	8209233	Argument	"""DOINTERPOLATE"""		8209168	1					
ANR	8209234	PrimaryExpression	"""DOINTERPOLATE"""		8209168	0					
ANR	8209235	Argument	13		8209168	2					
ANR	8209236	PrimaryExpression	13		8209168	0					
ANR	8209237	CompoundStatement		8:44:234:234	8209168	1					
ANR	8209238	ExpressionStatement	pmi -> interpolate = ! ! b	710:8:22365:22387	8209168	0	True				
ANR	8209239	AssignmentExpression	pmi -> interpolate = ! ! b		8209168	0		=			
ANR	8209240	PtrMemberAccess	pmi -> interpolate		8209168	0					
ANR	8209241	Identifier	pmi		8209168	0					
ANR	8209242	Identifier	interpolate		8209168	1					
ANR	8209243	UnaryOperationExpression	! ! b		8209168	1					
ANR	8209244	UnaryOperator	!		8209168	0					
ANR	8209245	UnaryOperationExpression	! b		8209168	1					
ANR	8209246	UnaryOperator	!		8209168	0					
ANR	8209247	Identifier	b		8209168	1					
ANR	8209248	ReturnStatement	return 0 ;	711:8:22397:22405	8209168	1	True				
ANR	8209249	PrimaryExpression	0		8209168	0					
ANR	8209250	IfStatement	"if ( ! strncmp ( arg , ""NOCACHE"" , 7 ) )"		8209168	3					
ANR	8209251	Condition	"! strncmp ( arg , ""NOCACHE"" , 7 )"	713:8:22421:22447	8209168	0	True				
ANR	8209252	UnaryOperationExpression	"! strncmp ( arg , ""NOCACHE"" , 7 )"		8209168	0					
ANR	8209253	UnaryOperator	!		8209168	0					
ANR	8209254	CallExpression	"strncmp ( arg , ""NOCACHE"" , 7 )"		8209168	1					
ANR	8209255	Callee	strncmp		8209168	0					
ANR	8209256	Identifier	strncmp		8209168	0					
ANR	8209257	ArgumentList	arg		8209168	1					
ANR	8209258	Argument	arg		8209168	0					
ANR	8209259	Identifier	arg		8209168	0					
ANR	8209260	Argument	"""NOCACHE"""		8209168	1					
ANR	8209261	PrimaryExpression	"""NOCACHE"""		8209168	0					
ANR	8209262	Argument	7		8209168	2					
ANR	8209263	PrimaryExpression	7		8209168	0					
ANR	8209264	CompoundStatement		12:37:329:329	8209168	1					
ANR	8209265	ExpressionStatement	pmi -> nocache = ! ! b	714:8:22460:22478	8209168	0	True				
ANR	8209266	AssignmentExpression	pmi -> nocache = ! ! b		8209168	0		=			
ANR	8209267	PtrMemberAccess	pmi -> nocache		8209168	0					
ANR	8209268	Identifier	pmi		8209168	0					
ANR	8209269	Identifier	nocache		8209168	1					
ANR	8209270	UnaryOperationExpression	! ! b		8209168	1					
ANR	8209271	UnaryOperator	!		8209168	0					
ANR	8209272	UnaryOperationExpression	! b		8209168	1					
ANR	8209273	UnaryOperator	!		8209168	0					
ANR	8209274	Identifier	b		8209168	1					
ANR	8209275	ReturnStatement	return 0 ;	715:8:22488:22496	8209168	1	True				
ANR	8209276	PrimaryExpression	0		8209168	0					
ANR	8209277	IfStatement	"if ( ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 ) )"		8209168	4					
ANR	8209278	Condition	"! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"	717:8:22512:22549	8209168	0	True				
ANR	8209279	UnaryOperationExpression	"! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8209168	0					
ANR	8209280	UnaryOperator	!		8209168	0					
ANR	8209281	CallExpression	"strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8209168	1					
ANR	8209282	Callee	strncmp		8209168	0					
ANR	8209283	Identifier	strncmp		8209168	0					
ANR	8209284	ArgumentList	arg		8209168	1					
ANR	8209285	Argument	arg		8209168	0					
ANR	8209286	Identifier	arg		8209168	0					
ANR	8209287	Argument	"""SCANCONVERTERTYPE"""		8209168	1					
ANR	8209288	PrimaryExpression	"""SCANCONVERTERTYPE"""		8209168	0					
ANR	8209289	Argument	17		8209168	2					
ANR	8209290	PrimaryExpression	17		8209168	0					
ANR	8209291	CompoundStatement		16:48:431:431	8209168	1					
ANR	8209292	ExpressionStatement	pmi -> scanconverter = b	718:8:22562:22584	8209168	0	True				
ANR	8209293	AssignmentExpression	pmi -> scanconverter = b		8209168	0		=			
ANR	8209294	PtrMemberAccess	pmi -> scanconverter		8209168	0					
ANR	8209295	Identifier	pmi		8209168	0					
ANR	8209296	Identifier	scanconverter		8209168	1					
ANR	8209297	Identifier	b		8209168	1					
ANR	8209298	ReturnStatement	return 0 ;	719:8:22594:22602	8209168	1	True				
ANR	8209299	PrimaryExpression	0		8209168	0					
ANR	8209300	ReturnStatement	return 1 ;	721:4:22614:22622	8209168	5	True				
ANR	8209301	PrimaryExpression	1		8209168	0					
ANR	8209302	ReturnType	static int		8209168	1					
ANR	8209303	Identifier	check_for_special_int		8209168	2					
ANR	8209304	ParameterList	"pl_main_instance_t * pmi , const char * arg , int b"		8209168	3					
ANR	8209305	Parameter	pl_main_instance_t * pmi	701:33:22070:22093	8209168	0	True				
ANR	8209306	ParameterType	pl_main_instance_t *		8209168	0					
ANR	8209307	Identifier	pmi		8209168	1					
ANR	8209308	Parameter	const char * arg	701:59:22096:22110	8209168	1	True				
ANR	8209309	ParameterType	const char *		8209168	0					
ANR	8209310	Identifier	arg		8209168	1					
ANR	8209311	Parameter	int b	701:76:22113:22117	8209168	2	True				
ANR	8209312	ParameterType	int		8209168	0					
ANR	8209313	Identifier	b		8209168	1					
ANR	8209314	CFGEntryNode	ENTRY		8209168		True				
ANR	8209315	CFGExitNode	EXIT		8209168		True				
ANR	8209316	Symbol	pmi -> scanconverter		8209168						
ANR	8209317	Symbol	strncmp		8209168						
ANR	8209318	Symbol	b		8209168						
ANR	8209319	Symbol	gs_note_error		8209168						
ANR	8209320	Symbol	gs_error_rangecheck		8209168						
ANR	8209321	Symbol	* pmi		8209168						
ANR	8209322	Symbol	arg		8209168						
ANR	8209323	Symbol	pmi -> nocache		8209168						
ANR	8209324	Symbol	pmi -> pause		8209168						
ANR	8209325	Symbol	pmi -> interpolate		8209168						
ANR	8209326	Symbol	pmi		8209168						
ANR	8209327	Function	check_for_special_float	724:0:22627:22998							
ANR	8209328	FunctionDef	"check_for_special_float (pl_main_instance_t * pmi , const char * arg , float f)"		8209327	0					
ANR	8209329	CompoundStatement		725:0:22714:22998	8209327	0					
ANR	8209330	IfStatement	"if ( ! strncmp ( arg , ""BATCH"" , 5 ) || ! strncmp ( arg , ""NOPAUSE"" , 6 ) || ! strncmp ( arg , ""DOINTERPOLATE"" , 13 ) || ! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 ) )"		8209327	0					
ANR	8209331	Condition	"! strncmp ( arg , ""BATCH"" , 5 ) || ! strncmp ( arg , ""NOPAUSE"" , 6 ) || ! strncmp ( arg , ""DOINTERPOLATE"" , 13 ) || ! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"	726:8:22724:22922	8209327	0	True				
ANR	8209332	OrExpression	"! strncmp ( arg , ""BATCH"" , 5 ) || ! strncmp ( arg , ""NOPAUSE"" , 6 ) || ! strncmp ( arg , ""DOINTERPOLATE"" , 13 ) || ! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8209327	0		||			
ANR	8209333	UnaryOperationExpression	"! strncmp ( arg , ""BATCH"" , 5 )"		8209327	0					
ANR	8209334	UnaryOperator	!		8209327	0					
ANR	8209335	CallExpression	"strncmp ( arg , ""BATCH"" , 5 )"		8209327	1					
ANR	8209336	Callee	strncmp		8209327	0					
ANR	8209337	Identifier	strncmp		8209327	0					
ANR	8209338	ArgumentList	arg		8209327	1					
ANR	8209339	Argument	arg		8209327	0					
ANR	8209340	Identifier	arg		8209327	0					
ANR	8209341	Argument	"""BATCH"""		8209327	1					
ANR	8209342	PrimaryExpression	"""BATCH"""		8209327	0					
ANR	8209343	Argument	5		8209327	2					
ANR	8209344	PrimaryExpression	5		8209327	0					
ANR	8209345	OrExpression	"! strncmp ( arg , ""NOPAUSE"" , 6 ) || ! strncmp ( arg , ""DOINTERPOLATE"" , 13 ) || ! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8209327	1		||			
ANR	8209346	UnaryOperationExpression	"! strncmp ( arg , ""NOPAUSE"" , 6 )"		8209327	0					
ANR	8209347	UnaryOperator	!		8209327	0					
ANR	8209348	CallExpression	"strncmp ( arg , ""NOPAUSE"" , 6 )"		8209327	1					
ANR	8209349	Callee	strncmp		8209327	0					
ANR	8209350	Identifier	strncmp		8209327	0					
ANR	8209351	ArgumentList	arg		8209327	1					
ANR	8209352	Argument	arg		8209327	0					
ANR	8209353	Identifier	arg		8209327	0					
ANR	8209354	Argument	"""NOPAUSE"""		8209327	1					
ANR	8209355	PrimaryExpression	"""NOPAUSE"""		8209327	0					
ANR	8209356	Argument	6		8209327	2					
ANR	8209357	PrimaryExpression	6		8209327	0					
ANR	8209358	OrExpression	"! strncmp ( arg , ""DOINTERPOLATE"" , 13 ) || ! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8209327	1		||			
ANR	8209359	UnaryOperationExpression	"! strncmp ( arg , ""DOINTERPOLATE"" , 13 )"		8209327	0					
ANR	8209360	UnaryOperator	!		8209327	0					
ANR	8209361	CallExpression	"strncmp ( arg , ""DOINTERPOLATE"" , 13 )"		8209327	1					
ANR	8209362	Callee	strncmp		8209327	0					
ANR	8209363	Identifier	strncmp		8209327	0					
ANR	8209364	ArgumentList	arg		8209327	1					
ANR	8209365	Argument	arg		8209327	0					
ANR	8209366	Identifier	arg		8209327	0					
ANR	8209367	Argument	"""DOINTERPOLATE"""		8209327	1					
ANR	8209368	PrimaryExpression	"""DOINTERPOLATE"""		8209327	0					
ANR	8209369	Argument	13		8209327	2					
ANR	8209370	PrimaryExpression	13		8209327	0					
ANR	8209371	OrExpression	"! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8209327	1		||			
ANR	8209372	UnaryOperationExpression	"! strncmp ( arg , ""NOCACHE"" , 7 )"		8209327	0					
ANR	8209373	UnaryOperator	!		8209327	0					
ANR	8209374	CallExpression	"strncmp ( arg , ""NOCACHE"" , 7 )"		8209327	1					
ANR	8209375	Callee	strncmp		8209327	0					
ANR	8209376	Identifier	strncmp		8209327	0					
ANR	8209377	ArgumentList	arg		8209327	1					
ANR	8209378	Argument	arg		8209327	0					
ANR	8209379	Identifier	arg		8209327	0					
ANR	8209380	Argument	"""NOCACHE"""		8209327	1					
ANR	8209381	PrimaryExpression	"""NOCACHE"""		8209327	0					
ANR	8209382	Argument	7		8209327	2					
ANR	8209383	PrimaryExpression	7		8209327	0					
ANR	8209384	UnaryOperationExpression	"! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8209327	1					
ANR	8209385	UnaryOperator	!		8209327	0					
ANR	8209386	CallExpression	"strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8209327	1					
ANR	8209387	Callee	strncmp		8209327	0					
ANR	8209388	Identifier	strncmp		8209327	0					
ANR	8209389	ArgumentList	arg		8209327	1					
ANR	8209390	Argument	arg		8209327	0					
ANR	8209391	Identifier	arg		8209327	0					
ANR	8209392	Argument	"""SCANCONVERTERTYPE"""		8209327	1					
ANR	8209393	PrimaryExpression	"""SCANCONVERTERTYPE"""		8209327	0					
ANR	8209394	Argument	17		8209327	2					
ANR	8209395	PrimaryExpression	17		8209327	0					
ANR	8209396	CompoundStatement		6:48:210:210	8209327	1					
ANR	8209397	ReturnStatement	return gs_note_error ( gs_error_rangecheck ) ;	731:8:22935:22976	8209327	0	True				
ANR	8209398	CallExpression	gs_note_error ( gs_error_rangecheck )		8209327	0					
ANR	8209399	Callee	gs_note_error		8209327	0					
ANR	8209400	Identifier	gs_note_error		8209327	0					
ANR	8209401	ArgumentList	gs_error_rangecheck		8209327	1					
ANR	8209402	Argument	gs_error_rangecheck		8209327	0					
ANR	8209403	Identifier	gs_error_rangecheck		8209327	0					
ANR	8209404	ReturnStatement	return 1 ;	733:4:22988:22996	8209327	1	True				
ANR	8209405	PrimaryExpression	1		8209327	0					
ANR	8209406	ReturnType	static int		8209327	1					
ANR	8209407	Identifier	check_for_special_float		8209327	2					
ANR	8209408	ParameterList	"pl_main_instance_t * pmi , const char * arg , float f"		8209327	3					
ANR	8209409	Parameter	pl_main_instance_t * pmi	724:35:22662:22685	8209327	0	True				
ANR	8209410	ParameterType	pl_main_instance_t *		8209327	0					
ANR	8209411	Identifier	pmi		8209327	1					
ANR	8209412	Parameter	const char * arg	724:61:22688:22702	8209327	1	True				
ANR	8209413	ParameterType	const char *		8209327	0					
ANR	8209414	Identifier	arg		8209327	1					
ANR	8209415	Parameter	float f	724:78:22705:22711	8209327	2	True				
ANR	8209416	ParameterType	float		8209327	0					
ANR	8209417	Identifier	f		8209327	1					
ANR	8209418	CFGEntryNode	ENTRY		8209327		True				
ANR	8209419	CFGExitNode	EXIT		8209327		True				
ANR	8209420	Symbol	strncmp		8209327						
ANR	8209421	Symbol	gs_note_error		8209327						
ANR	8209422	Symbol	gs_error_rangecheck		8209327						
ANR	8209423	Symbol	f		8209327						
ANR	8209424	Symbol	arg		8209327						
ANR	8209425	Symbol	pmi		8209327						
ANR	8209426	Function	check_for_special_str	736:0:23001:23381							
ANR	8209427	FunctionDef	"check_for_special_str (pl_main_instance_t * pmi , const char * arg , gs_param_string * f)"		8209426	0					
ANR	8209428	CompoundStatement		737:0:23097:23381	8209426	0					
ANR	8209429	IfStatement	"if ( ! strncmp ( arg , ""BATCH"" , 5 ) || ! strncmp ( arg , ""NOPAUSE"" , 6 ) || ! strncmp ( arg , ""DOINTERPOLATE"" , 13 ) || ! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 ) )"		8209426	0					
ANR	8209430	Condition	"! strncmp ( arg , ""BATCH"" , 5 ) || ! strncmp ( arg , ""NOPAUSE"" , 6 ) || ! strncmp ( arg , ""DOINTERPOLATE"" , 13 ) || ! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"	738:8:23107:23305	8209426	0	True				
ANR	8209431	OrExpression	"! strncmp ( arg , ""BATCH"" , 5 ) || ! strncmp ( arg , ""NOPAUSE"" , 6 ) || ! strncmp ( arg , ""DOINTERPOLATE"" , 13 ) || ! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8209426	0		||			
ANR	8209432	UnaryOperationExpression	"! strncmp ( arg , ""BATCH"" , 5 )"		8209426	0					
ANR	8209433	UnaryOperator	!		8209426	0					
ANR	8209434	CallExpression	"strncmp ( arg , ""BATCH"" , 5 )"		8209426	1					
ANR	8209435	Callee	strncmp		8209426	0					
ANR	8209436	Identifier	strncmp		8209426	0					
ANR	8209437	ArgumentList	arg		8209426	1					
ANR	8209438	Argument	arg		8209426	0					
ANR	8209439	Identifier	arg		8209426	0					
ANR	8209440	Argument	"""BATCH"""		8209426	1					
ANR	8209441	PrimaryExpression	"""BATCH"""		8209426	0					
ANR	8209442	Argument	5		8209426	2					
ANR	8209443	PrimaryExpression	5		8209426	0					
ANR	8209444	OrExpression	"! strncmp ( arg , ""NOPAUSE"" , 6 ) || ! strncmp ( arg , ""DOINTERPOLATE"" , 13 ) || ! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8209426	1		||			
ANR	8209445	UnaryOperationExpression	"! strncmp ( arg , ""NOPAUSE"" , 6 )"		8209426	0					
ANR	8209446	UnaryOperator	!		8209426	0					
ANR	8209447	CallExpression	"strncmp ( arg , ""NOPAUSE"" , 6 )"		8209426	1					
ANR	8209448	Callee	strncmp		8209426	0					
ANR	8209449	Identifier	strncmp		8209426	0					
ANR	8209450	ArgumentList	arg		8209426	1					
ANR	8209451	Argument	arg		8209426	0					
ANR	8209452	Identifier	arg		8209426	0					
ANR	8209453	Argument	"""NOPAUSE"""		8209426	1					
ANR	8209454	PrimaryExpression	"""NOPAUSE"""		8209426	0					
ANR	8209455	Argument	6		8209426	2					
ANR	8209456	PrimaryExpression	6		8209426	0					
ANR	8209457	OrExpression	"! strncmp ( arg , ""DOINTERPOLATE"" , 13 ) || ! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8209426	1		||			
ANR	8209458	UnaryOperationExpression	"! strncmp ( arg , ""DOINTERPOLATE"" , 13 )"		8209426	0					
ANR	8209459	UnaryOperator	!		8209426	0					
ANR	8209460	CallExpression	"strncmp ( arg , ""DOINTERPOLATE"" , 13 )"		8209426	1					
ANR	8209461	Callee	strncmp		8209426	0					
ANR	8209462	Identifier	strncmp		8209426	0					
ANR	8209463	ArgumentList	arg		8209426	1					
ANR	8209464	Argument	arg		8209426	0					
ANR	8209465	Identifier	arg		8209426	0					
ANR	8209466	Argument	"""DOINTERPOLATE"""		8209426	1					
ANR	8209467	PrimaryExpression	"""DOINTERPOLATE"""		8209426	0					
ANR	8209468	Argument	13		8209426	2					
ANR	8209469	PrimaryExpression	13		8209426	0					
ANR	8209470	OrExpression	"! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8209426	1		||			
ANR	8209471	UnaryOperationExpression	"! strncmp ( arg , ""NOCACHE"" , 7 )"		8209426	0					
ANR	8209472	UnaryOperator	!		8209426	0					
ANR	8209473	CallExpression	"strncmp ( arg , ""NOCACHE"" , 7 )"		8209426	1					
ANR	8209474	Callee	strncmp		8209426	0					
ANR	8209475	Identifier	strncmp		8209426	0					
ANR	8209476	ArgumentList	arg		8209426	1					
ANR	8209477	Argument	arg		8209426	0					
ANR	8209478	Identifier	arg		8209426	0					
ANR	8209479	Argument	"""NOCACHE"""		8209426	1					
ANR	8209480	PrimaryExpression	"""NOCACHE"""		8209426	0					
ANR	8209481	Argument	7		8209426	2					
ANR	8209482	PrimaryExpression	7		8209426	0					
ANR	8209483	UnaryOperationExpression	"! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8209426	1					
ANR	8209484	UnaryOperator	!		8209426	0					
ANR	8209485	CallExpression	"strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8209426	1					
ANR	8209486	Callee	strncmp		8209426	0					
ANR	8209487	Identifier	strncmp		8209426	0					
ANR	8209488	ArgumentList	arg		8209426	1					
ANR	8209489	Argument	arg		8209426	0					
ANR	8209490	Identifier	arg		8209426	0					
ANR	8209491	Argument	"""SCANCONVERTERTYPE"""		8209426	1					
ANR	8209492	PrimaryExpression	"""SCANCONVERTERTYPE"""		8209426	0					
ANR	8209493	Argument	17		8209426	2					
ANR	8209494	PrimaryExpression	17		8209426	0					
ANR	8209495	CompoundStatement		6:48:210:210	8209426	1					
ANR	8209496	ReturnStatement	return gs_note_error ( gs_error_rangecheck ) ;	743:8:23318:23359	8209426	0	True				
ANR	8209497	CallExpression	gs_note_error ( gs_error_rangecheck )		8209426	0					
ANR	8209498	Callee	gs_note_error		8209426	0					
ANR	8209499	Identifier	gs_note_error		8209426	0					
ANR	8209500	ArgumentList	gs_error_rangecheck		8209426	1					
ANR	8209501	Argument	gs_error_rangecheck		8209426	0					
ANR	8209502	Identifier	gs_error_rangecheck		8209426	0					
ANR	8209503	ReturnStatement	return 1 ;	745:4:23371:23379	8209426	1	True				
ANR	8209504	PrimaryExpression	1		8209426	0					
ANR	8209505	ReturnType	static int		8209426	1					
ANR	8209506	Identifier	check_for_special_str		8209426	2					
ANR	8209507	ParameterList	"pl_main_instance_t * pmi , const char * arg , gs_param_string * f"		8209426	3					
ANR	8209508	Parameter	pl_main_instance_t * pmi	736:33:23034:23057	8209426	0	True				
ANR	8209509	ParameterType	pl_main_instance_t *		8209426	0					
ANR	8209510	Identifier	pmi		8209426	1					
ANR	8209511	Parameter	const char * arg	736:59:23060:23074	8209426	1	True				
ANR	8209512	ParameterType	const char *		8209426	0					
ANR	8209513	Identifier	arg		8209426	1					
ANR	8209514	Parameter	gs_param_string * f	736:76:23077:23094	8209426	2	True				
ANR	8209515	ParameterType	gs_param_string *		8209426	0					
ANR	8209516	Identifier	f		8209426	1					
ANR	8209517	CFGEntryNode	ENTRY		8209426		True				
ANR	8209518	CFGExitNode	EXIT		8209426		True				
ANR	8209519	Symbol	strncmp		8209426						
ANR	8209520	Symbol	gs_note_error		8209426						
ANR	8209521	Symbol	gs_error_rangecheck		8209426						
ANR	8209522	Symbol	f		8209426						
ANR	8209523	Symbol	arg		8209426						
ANR	8209524	Symbol	pmi		8209426						
ANR	8209525	Function	pl_main_process_options	748:0:23384:47560							
ANR	8209526	FunctionDef	"pl_main_process_options (pl_main_instance_t * pmi , arg_list * pal , pl_interp_implementation_t * pjli)"		8209525	0					
ANR	8209527	CompoundStatement		751:0:23520:47560	8209525	0					
ANR	8209528	IdentifierDeclStatement	int code = 0 ;	752:4:23526:23538	8209525	0	True				
ANR	8209529	IdentifierDecl	code = 0		8209525	0					
ANR	8209530	IdentifierDeclType	int		8209525	0					
ANR	8209531	Identifier	code		8209525	1					
ANR	8209532	AssignmentExpression	code = 0		8209525	2		=			
ANR	8209533	Identifier	code		8209525	0					
ANR	8209534	PrimaryExpression	0		8209525	1					
ANR	8209535	IdentifierDeclStatement	bool help = false ;	753:4:23544:23561	8209525	1	True				
ANR	8209536	IdentifierDecl	help = false		8209525	0					
ANR	8209537	IdentifierDeclType	bool		8209525	0					
ANR	8209538	Identifier	help		8209525	1					
ANR	8209539	AssignmentExpression	help = false		8209525	2		=			
ANR	8209540	Identifier	false		8209525	0					
ANR	8209541	Identifier	false		8209525	1					
ANR	8209542	IdentifierDeclStatement	char * arg ;	754:4:23567:23576	8209525	2	True				
ANR	8209543	IdentifierDecl	* arg		8209525	0					
ANR	8209544	IdentifierDeclType	char *		8209525	0					
ANR	8209545	Identifier	arg		8209525	1					
ANR	8209546	IdentifierDeclStatement	gs_c_param_list * params = & pmi -> params ;	755:4:23582:23620	8209525	3	True				
ANR	8209547	IdentifierDecl	* params = & pmi -> params		8209525	0					
ANR	8209548	IdentifierDeclType	gs_c_param_list *		8209525	0					
ANR	8209549	Identifier	params		8209525	1					
ANR	8209550	AssignmentExpression	* params = & pmi -> params		8209525	2		=			
ANR	8209551	Identifier	params		8209525	0					
ANR	8209552	UnaryOperationExpression	& pmi -> params		8209525	1					
ANR	8209553	UnaryOperator	&		8209525	0					
ANR	8209554	PtrMemberAccess	pmi -> params		8209525	1					
ANR	8209555	Identifier	pmi		8209525	0					
ANR	8209556	Identifier	params		8209525	1					
ANR	8209557	ExpressionStatement	gs_c_param_list_write_more ( params )	757:4:23631:23665	8209525	4	True				
ANR	8209558	CallExpression	gs_c_param_list_write_more ( params )		8209525	0					
ANR	8209559	Callee	gs_c_param_list_write_more		8209525	0					
ANR	8209560	Identifier	gs_c_param_list_write_more		8209525	0					
ANR	8209561	ArgumentList	params		8209525	1					
ANR	8209562	Argument	params		8209525	0					
ANR	8209563	Identifier	params		8209525	0					
ANR	8209564	WhileStatement	"while ( ( code = arg_next ( pal , ( const char * * ) & arg , pmi -> memory ) ) > 0 && * arg == '-' )"		8209525	5					
ANR	8209565	Condition	"( code = arg_next ( pal , ( const char * * ) & arg , pmi -> memory ) ) > 0 && * arg == '-'"	758:11:23678:23752	8209525	0	True				
ANR	8209566	AndExpression	"( code = arg_next ( pal , ( const char * * ) & arg , pmi -> memory ) ) > 0 && * arg == '-'"		8209525	0		&&			
ANR	8209567	RelationalExpression	"( code = arg_next ( pal , ( const char * * ) & arg , pmi -> memory ) ) > 0"		8209525	0		>			
ANR	8209568	AssignmentExpression	"code = arg_next ( pal , ( const char * * ) & arg , pmi -> memory )"		8209525	0		=			
ANR	8209569	Identifier	code		8209525	0					
ANR	8209570	CallExpression	"arg_next ( pal , ( const char * * ) & arg , pmi -> memory )"		8209525	1					
ANR	8209571	Callee	arg_next		8209525	0					
ANR	8209572	Identifier	arg_next		8209525	0					
ANR	8209573	ArgumentList	pal		8209525	1					
ANR	8209574	Argument	pal		8209525	0					
ANR	8209575	Identifier	pal		8209525	0					
ANR	8209576	Argument	( const char * * ) & arg		8209525	1					
ANR	8209577	CastExpression	( const char * * ) & arg		8209525	0					
ANR	8209578	CastTarget	const char * *		8209525	0					
ANR	8209579	UnaryOperationExpression	& arg		8209525	1					
ANR	8209580	UnaryOperator	&		8209525	0					
ANR	8209581	Identifier	arg		8209525	1					
ANR	8209582	Argument	pmi -> memory		8209525	2					
ANR	8209583	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8209584	Identifier	pmi		8209525	0					
ANR	8209585	Identifier	memory		8209525	1					
ANR	8209586	PrimaryExpression	0		8209525	1					
ANR	8209587	EqualityExpression	* arg == '-'		8209525	1		==			
ANR	8209588	UnaryOperationExpression	* arg		8209525	0					
ANR	8209589	UnaryOperator	*		8209525	0					
ANR	8209590	Identifier	arg		8209525	1					
ANR	8209591	PrimaryExpression	'-'		8209525	1					
ANR	8209592	CompoundStatement		8:88:234:234	8209525	1					
ANR	8209593	IfStatement	if ( arg [ 1 ] == '\\0' )		8209525	0					
ANR	8209594	Condition	arg [ 1 ] == '\\0'	759:12:23769:23782	8209525	0	True				
ANR	8209595	EqualityExpression	arg [ 1 ] == '\\0'		8209525	0		==			
ANR	8209596	ArrayIndexing	arg [ 1 ]		8209525	0					
ANR	8209597	Identifier	arg		8209525	0					
ANR	8209598	PrimaryExpression	1		8209525	1					
ANR	8209599	PrimaryExpression	'\\0'		8209525	1					
ANR	8209600	BreakStatement	break ;	760:12:23824:23829	8209525	1	True				
ANR	8209601	ExpressionStatement	arg += 2	761:8:23839:23847	8209525	1	True				
ANR	8209602	AssignmentExpression	arg += 2		8209525	0		+=			
ANR	8209603	Identifier	arg		8209525	0					
ANR	8209604	PrimaryExpression	2		8209525	1					
ANR	8209605	SwitchStatement	switch ( arg [ - 1 ] )		8209525	2					
ANR	8209606	Condition	arg [ - 1 ]	762:16:23865:23871	8209525	0	True				
ANR	8209607	ArrayIndexing	arg [ - 1 ]		8209525	0					
ANR	8209608	Identifier	arg		8209525	0					
ANR	8209609	UnaryOperationExpression	- 1		8209525	1					
ANR	8209610	UnaryOperator	-		8209525	0					
ANR	8209611	PrimaryExpression	1		8209525	1					
ANR	8209612	CompoundStatement		12:25:353:353	8209525	1					
ANR	8209613	Label	case '-' :	763:12:23888:23896	8209525	0	True				
ANR	8209614	IfStatement	"if ( strcmp ( arg , ""debug"" ) == 0 )"		8209525	1					
ANR	8209615	Condition	"strcmp ( arg , ""debug"" ) == 0"	764:20:23918:23942	8209525	0	True				
ANR	8209616	EqualityExpression	"strcmp ( arg , ""debug"" ) == 0"		8209525	0		==			
ANR	8209617	CallExpression	"strcmp ( arg , ""debug"" )"		8209525	0					
ANR	8209618	Callee	strcmp		8209525	0					
ANR	8209619	Identifier	strcmp		8209525	0					
ANR	8209620	ArgumentList	arg		8209525	1					
ANR	8209621	Argument	arg		8209525	0					
ANR	8209622	Identifier	arg		8209525	0					
ANR	8209623	Argument	"""debug"""		8209525	1					
ANR	8209624	PrimaryExpression	"""debug"""		8209525	0					
ANR	8209625	PrimaryExpression	0		8209525	1					
ANR	8209626	CompoundStatement		14:47:424:424	8209525	1					
ANR	8209627	ExpressionStatement	gs_debug_flags_list ( pmi -> memory )	765:20:23967:23999	8209525	0	True				
ANR	8209628	CallExpression	gs_debug_flags_list ( pmi -> memory )		8209525	0					
ANR	8209629	Callee	gs_debug_flags_list		8209525	0					
ANR	8209630	Identifier	gs_debug_flags_list		8209525	0					
ANR	8209631	ArgumentList	pmi -> memory		8209525	1					
ANR	8209632	Argument	pmi -> memory		8209525	0					
ANR	8209633	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8209634	Identifier	pmi		8209525	0					
ANR	8209635	Identifier	memory		8209525	1					
ANR	8209636	BreakStatement	break ;	766:20:24021:24026	8209525	1	True				
ANR	8209637	ElseStatement	else		8209525	0					
ANR	8209638	IfStatement	"if ( strncmp ( arg , ""debug="" , 6 ) == 0 )"		8209525	0					
ANR	8209639	Condition	"strncmp ( arg , ""debug="" , 6 ) == 0"	767:27:24055:24084	8209525	0	True				
ANR	8209640	EqualityExpression	"strncmp ( arg , ""debug="" , 6 ) == 0"		8209525	0		==			
ANR	8209641	CallExpression	"strncmp ( arg , ""debug="" , 6 )"		8209525	0					
ANR	8209642	Callee	strncmp		8209525	0					
ANR	8209643	Identifier	strncmp		8209525	0					
ANR	8209644	ArgumentList	arg		8209525	1					
ANR	8209645	Argument	arg		8209525	0					
ANR	8209646	Identifier	arg		8209525	0					
ANR	8209647	Argument	"""debug="""		8209525	1					
ANR	8209648	PrimaryExpression	"""debug="""		8209525	0					
ANR	8209649	Argument	6		8209525	2					
ANR	8209650	PrimaryExpression	6		8209525	0					
ANR	8209651	PrimaryExpression	0		8209525	1					
ANR	8209652	CompoundStatement		17:59:566:566	8209525	1					
ANR	8209653	ExpressionStatement	"gs_debug_flags_parse ( pmi -> memory , arg + 6 )"	768:20:24109:24151	8209525	0	True				
ANR	8209654	CallExpression	"gs_debug_flags_parse ( pmi -> memory , arg + 6 )"		8209525	0					
ANR	8209655	Callee	gs_debug_flags_parse		8209525	0					
ANR	8209656	Identifier	gs_debug_flags_parse		8209525	0					
ANR	8209657	ArgumentList	pmi -> memory		8209525	1					
ANR	8209658	Argument	pmi -> memory		8209525	0					
ANR	8209659	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8209660	Identifier	pmi		8209525	0					
ANR	8209661	Identifier	memory		8209525	1					
ANR	8209662	Argument	arg + 6		8209525	1					
ANR	8209663	AdditiveExpression	arg + 6		8209525	0		+			
ANR	8209664	Identifier	arg		8209525	0					
ANR	8209665	PrimaryExpression	6		8209525	1					
ANR	8209666	BreakStatement	break ;	769:20:24173:24178	8209525	1	True				
ANR	8209667	ElseStatement	else		8209525	0					
ANR	8209668	IfStatement	"if ( strncmp ( arg , ""saved-pages="" , 12 ) == 0 )"		8209525	0					
ANR	8209669	Condition	"strncmp ( arg , ""saved-pages="" , 12 ) == 0"	771:27:24242:24278	8209525	0	True				
ANR	8209670	EqualityExpression	"strncmp ( arg , ""saved-pages="" , 12 ) == 0"		8209525	0		==			
ANR	8209671	CallExpression	"strncmp ( arg , ""saved-pages="" , 12 )"		8209525	0					
ANR	8209672	Callee	strncmp		8209525	0					
ANR	8209673	Identifier	strncmp		8209525	0					
ANR	8209674	ArgumentList	arg		8209525	1					
ANR	8209675	Argument	arg		8209525	0					
ANR	8209676	Identifier	arg		8209525	0					
ANR	8209677	Argument	"""saved-pages="""		8209525	1					
ANR	8209678	PrimaryExpression	"""saved-pages="""		8209525	0					
ANR	8209679	Argument	12		8209525	2					
ANR	8209680	PrimaryExpression	12		8209525	0					
ANR	8209681	PrimaryExpression	0		8209525	1					
ANR	8209682	CompoundStatement		23:20:833:885	8209525	1					
ANR	8209683	IdentifierDeclStatement	gx_device * pdev = pmi -> device ;	772:20:24303:24332	8209525	0	True				
ANR	8209684	IdentifierDecl	* pdev = pmi -> device		8209525	0					
ANR	8209685	IdentifierDeclType	gx_device *		8209525	0					
ANR	8209686	Identifier	pdev		8209525	1					
ANR	8209687	AssignmentExpression	* pdev = pmi -> device		8209525	2		=			
ANR	8209688	Identifier	pdev		8209525	0					
ANR	8209689	PtrMemberAccess	pmi -> device		8209525	1					
ANR	8209690	Identifier	pmi		8209525	0					
ANR	8209691	Identifier	device		8209525	1					
ANR	8209692	IdentifierDeclStatement	gx_device_printer * ppdev = ( gx_device_printer * ) pdev ;	773:20:24354:24406	8209525	1	True				
ANR	8209693	IdentifierDecl	* ppdev = ( gx_device_printer * ) pdev		8209525	0					
ANR	8209694	IdentifierDeclType	gx_device_printer *		8209525	0					
ANR	8209695	Identifier	ppdev		8209525	1					
ANR	8209696	AssignmentExpression	* ppdev = ( gx_device_printer * ) pdev		8209525	2		=			
ANR	8209697	Identifier	ppdev		8209525	0					
ANR	8209698	CastExpression	( gx_device_printer * ) pdev		8209525	1					
ANR	8209699	CastTarget	gx_device_printer *		8209525	0					
ANR	8209700	Identifier	pdev		8209525	1					
ANR	8209701	IfStatement	if ( pdev -> is_open == 0 && ( code = gs_opendevice ( pdev ) ) < 0 )		8209525	2					
ANR	8209702	Condition	pdev -> is_open == 0 && ( code = gs_opendevice ( pdev ) ) < 0	776:24:24491:24544	8209525	0	True				
ANR	8209703	AndExpression	pdev -> is_open == 0 && ( code = gs_opendevice ( pdev ) ) < 0		8209525	0		&&			
ANR	8209704	EqualityExpression	pdev -> is_open == 0		8209525	0		==			
ANR	8209705	PtrMemberAccess	pdev -> is_open		8209525	0					
ANR	8209706	Identifier	pdev		8209525	0					
ANR	8209707	Identifier	is_open		8209525	1					
ANR	8209708	PrimaryExpression	0		8209525	1					
ANR	8209709	RelationalExpression	( code = gs_opendevice ( pdev ) ) < 0		8209525	1		<			
ANR	8209710	AssignmentExpression	code = gs_opendevice ( pdev )		8209525	0		=			
ANR	8209711	Identifier	code		8209525	0					
ANR	8209712	CallExpression	gs_opendevice ( pdev )		8209525	1					
ANR	8209713	Callee	gs_opendevice		8209525	0					
ANR	8209714	Identifier	gs_opendevice		8209525	0					
ANR	8209715	ArgumentList	pdev		8209525	1					
ANR	8209716	Argument	pdev		8209525	0					
ANR	8209717	Identifier	pdev		8209525	0					
ANR	8209718	PrimaryExpression	0		8209525	1					
ANR	8209719	CompoundStatement		26:80:1026:1026	8209525	1					
ANR	8209720	BreakStatement	break ;	777:24:24573:24578	8209525	0	True				
ANR	8209721	IfStatement	"if ( dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_supports_saved_pages , NULL , 0 ) <= 0 )"		8209525	3					
ANR	8209722	Condition	"dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_supports_saved_pages , NULL , 0 ) <= 0"	779:24:24626:24700	8209525	0	True				
ANR	8209723	RelationalExpression	"dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_supports_saved_pages , NULL , 0 ) <= 0"		8209525	0		<=			
ANR	8209724	CallExpression	"dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_supports_saved_pages , NULL , 0 )"		8209525	0					
ANR	8209725	Callee	"dev_proc ( pdev , dev_spec_op )"		8209525	0					
ANR	8209726	CallExpression	"dev_proc ( pdev , dev_spec_op )"		8209525	0					
ANR	8209727	Callee	dev_proc		8209525	0					
ANR	8209728	Identifier	dev_proc		8209525	0					
ANR	8209729	ArgumentList	pdev		8209525	1					
ANR	8209730	Argument	pdev		8209525	0					
ANR	8209731	Identifier	pdev		8209525	0					
ANR	8209732	Argument	dev_spec_op		8209525	1					
ANR	8209733	Identifier	dev_spec_op		8209525	0					
ANR	8209734	ArgumentList	pdev		8209525	1					
ANR	8209735	Argument	pdev		8209525	0					
ANR	8209736	Identifier	pdev		8209525	0					
ANR	8209737	Argument	gxdso_supports_saved_pages		8209525	1					
ANR	8209738	Identifier	gxdso_supports_saved_pages		8209525	0					
ANR	8209739	Argument	NULL		8209525	2					
ANR	8209740	Identifier	NULL		8209525	0					
ANR	8209741	Argument	0		8209525	3					
ANR	8209742	PrimaryExpression	0		8209525	0					
ANR	8209743	PrimaryExpression	0		8209525	1					
ANR	8209744	CompoundStatement		29:101:1182:1182	8209525	1					
ANR	8209745	ExpressionStatement	"errprintf ( pmi -> memory , ""   --saved-pages not supported by the '%s' device.\\n"" , pdev -> dname )"	780:24:24729:24854	8209525	0	True				
ANR	8209746	CallExpression	"errprintf ( pmi -> memory , ""   --saved-pages not supported by the '%s' device.\\n"" , pdev -> dname )"		8209525	0					
ANR	8209747	Callee	errprintf		8209525	0					
ANR	8209748	Identifier	errprintf		8209525	0					
ANR	8209749	ArgumentList	pmi -> memory		8209525	1					
ANR	8209750	Argument	pmi -> memory		8209525	0					
ANR	8209751	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8209752	Identifier	pmi		8209525	0					
ANR	8209753	Identifier	memory		8209525	1					
ANR	8209754	Argument	"""   --saved-pages not supported by the '%s' device.\\n"""		8209525	1					
ANR	8209755	PrimaryExpression	"""   --saved-pages not supported by the '%s' device.\\n"""		8209525	0					
ANR	8209756	Argument	pdev -> dname		8209525	2					
ANR	8209757	PtrMemberAccess	pdev -> dname		8209525	0					
ANR	8209758	Identifier	pdev		8209525	0					
ANR	8209759	Identifier	dname		8209525	1					
ANR	8209760	ReturnStatement	return - 1 ;	782:24:24880:24889	8209525	1	True				
ANR	8209761	UnaryOperationExpression	- 1		8209525	0					
ANR	8209762	UnaryOperator	-		8209525	0					
ANR	8209763	PrimaryExpression	1		8209525	1					
ANR	8209764	ExpressionStatement	"code = gx_saved_pages_param_process ( ppdev , ( byte * ) arg + 12 , strlen ( arg + 12 ) )"	784:20:24933:25007	8209525	4	True				
ANR	8209765	AssignmentExpression	"code = gx_saved_pages_param_process ( ppdev , ( byte * ) arg + 12 , strlen ( arg + 12 ) )"		8209525	0		=			
ANR	8209766	Identifier	code		8209525	0					
ANR	8209767	CallExpression	"gx_saved_pages_param_process ( ppdev , ( byte * ) arg + 12 , strlen ( arg + 12 ) )"		8209525	1					
ANR	8209768	Callee	gx_saved_pages_param_process		8209525	0					
ANR	8209769	Identifier	gx_saved_pages_param_process		8209525	0					
ANR	8209770	ArgumentList	ppdev		8209525	1					
ANR	8209771	Argument	ppdev		8209525	0					
ANR	8209772	Identifier	ppdev		8209525	0					
ANR	8209773	Argument	( byte * ) arg + 12		8209525	1					
ANR	8209774	AdditiveExpression	( byte * ) arg + 12		8209525	0		+			
ANR	8209775	CastExpression	( byte * ) arg		8209525	0					
ANR	8209776	CastTarget	byte *		8209525	0					
ANR	8209777	Identifier	arg		8209525	1					
ANR	8209778	PrimaryExpression	12		8209525	1					
ANR	8209779	Argument	strlen ( arg + 12 )		8209525	2					
ANR	8209780	CallExpression	strlen ( arg + 12 )		8209525	0					
ANR	8209781	Callee	strlen		8209525	0					
ANR	8209782	Identifier	strlen		8209525	0					
ANR	8209783	ArgumentList	arg + 12		8209525	1					
ANR	8209784	Argument	arg + 12		8209525	0					
ANR	8209785	AdditiveExpression	arg + 12		8209525	0		+			
ANR	8209786	Identifier	arg		8209525	0					
ANR	8209787	PrimaryExpression	12		8209525	1					
ANR	8209788	IfStatement	if ( code > 0 )		8209525	5					
ANR	8209789	Condition	code > 0	785:24:25033:25040	8209525	0	True				
ANR	8209790	RelationalExpression	code > 0		8209525	0		>			
ANR	8209791	Identifier	code		8209525	0					
ANR	8209792	PrimaryExpression	0		8209525	1					
ANR	8209793	CompoundStatement		39:24:1718:1763	8209525	1					
ANR	8209794	IdentifierDeclStatement	gx_color_index color ;	787:24:25114:25134	8209525	0	True				
ANR	8209795	IdentifierDecl	color		8209525	0					
ANR	8209796	IdentifierDeclType	gx_color_index		8209525	0					
ANR	8209797	Identifier	color		8209525	1					
ANR	8209798	IdentifierDeclStatement	"gx_color_value rgb_white [ 3 ] = { 65535 , 65535 , 65535 } ;"	788:24:25160:25213	8209525	1	True				
ANR	8209799	IdentifierDecl	"rgb_white [ 3 ] = { 65535 , 65535 , 65535 }"		8209525	0					
ANR	8209800	IdentifierDeclType	gx_color_value [ 3 ]		8209525	0					
ANR	8209801	Identifier	rgb_white		8209525	1					
ANR	8209802	PrimaryExpression	3		8209525	2					
ANR	8209803	AssignmentExpression	"rgb_white [ 3 ] = { 65535 , 65535 , 65535 }"		8209525	3		=			
ANR	8209804	Identifier	rgb_white		8209525	0					
ANR	8209805	InitializerList	65535		8209525	1					
ANR	8209806	PrimaryExpression	65535		8209525	0					
ANR	8209807	PrimaryExpression	65535		8209525	1					
ANR	8209808	PrimaryExpression	65535		8209525	2					
ANR	8209809	IdentifierDeclStatement	"gx_color_value cmyk_white [ 4 ] = { 0 , 0 , 0 , 0 } ;"	789:24:25239:25284	8209525	2	True				
ANR	8209810	IdentifierDecl	"cmyk_white [ 4 ] = { 0 , 0 , 0 , 0 }"		8209525	0					
ANR	8209811	IdentifierDeclType	gx_color_value [ 4 ]		8209525	0					
ANR	8209812	Identifier	cmyk_white		8209525	1					
ANR	8209813	PrimaryExpression	4		8209525	2					
ANR	8209814	AssignmentExpression	"cmyk_white [ 4 ] = { 0 , 0 , 0 , 0 }"		8209525	3		=			
ANR	8209815	Identifier	cmyk_white		8209525	0					
ANR	8209816	InitializerList	0		8209525	1					
ANR	8209817	PrimaryExpression	0		8209525	0					
ANR	8209818	PrimaryExpression	0		8209525	1					
ANR	8209819	PrimaryExpression	0		8209525	2					
ANR	8209820	PrimaryExpression	0		8209525	3					
ANR	8209821	IfStatement	if ( pdev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE )		8209525	3					
ANR	8209822	Condition	pdev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE	791:28:25315:25369	8209525	0	True				
ANR	8209823	EqualityExpression	pdev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		8209525	0		==			
ANR	8209824	MemberAccess	pdev -> color_info . polarity		8209525	0					
ANR	8209825	PtrMemberAccess	pdev -> color_info		8209525	0					
ANR	8209826	Identifier	pdev		8209525	0					
ANR	8209827	Identifier	color_info		8209525	1					
ANR	8209828	Identifier	polarity		8209525	1					
ANR	8209829	Identifier	GX_CINFO_POLARITY_ADDITIVE		8209525	1					
ANR	8209830	ExpressionStatement	"color = dev_proc ( pdev , map_rgb_color ) ( pdev , rgb_white )"	792:28:25400:25454	8209525	1	True				
ANR	8209831	AssignmentExpression	"color = dev_proc ( pdev , map_rgb_color ) ( pdev , rgb_white )"		8209525	0		=			
ANR	8209832	Identifier	color		8209525	0					
ANR	8209833	CallExpression	"dev_proc ( pdev , map_rgb_color ) ( pdev , rgb_white )"		8209525	1					
ANR	8209834	Callee	"dev_proc ( pdev , map_rgb_color )"		8209525	0					
ANR	8209835	CallExpression	"dev_proc ( pdev , map_rgb_color )"		8209525	0					
ANR	8209836	Callee	dev_proc		8209525	0					
ANR	8209837	Identifier	dev_proc		8209525	0					
ANR	8209838	ArgumentList	pdev		8209525	1					
ANR	8209839	Argument	pdev		8209525	0					
ANR	8209840	Identifier	pdev		8209525	0					
ANR	8209841	Argument	map_rgb_color		8209525	1					
ANR	8209842	Identifier	map_rgb_color		8209525	0					
ANR	8209843	ArgumentList	pdev		8209525	1					
ANR	8209844	Argument	pdev		8209525	0					
ANR	8209845	Identifier	pdev		8209525	0					
ANR	8209846	Argument	rgb_white		8209525	1					
ANR	8209847	Identifier	rgb_white		8209525	0					
ANR	8209848	ElseStatement	else		8209525	0					
ANR	8209849	ExpressionStatement	"color = dev_proc ( pdev , map_cmyk_color ) ( pdev , cmyk_white )"	794:28:25513:25569	8209525	0	True				
ANR	8209850	AssignmentExpression	"color = dev_proc ( pdev , map_cmyk_color ) ( pdev , cmyk_white )"		8209525	0		=			
ANR	8209851	Identifier	color		8209525	0					
ANR	8209852	CallExpression	"dev_proc ( pdev , map_cmyk_color ) ( pdev , cmyk_white )"		8209525	1					
ANR	8209853	Callee	"dev_proc ( pdev , map_cmyk_color )"		8209525	0					
ANR	8209854	CallExpression	"dev_proc ( pdev , map_cmyk_color )"		8209525	0					
ANR	8209855	Callee	dev_proc		8209525	0					
ANR	8209856	Identifier	dev_proc		8209525	0					
ANR	8209857	ArgumentList	pdev		8209525	1					
ANR	8209858	Argument	pdev		8209525	0					
ANR	8209859	Identifier	pdev		8209525	0					
ANR	8209860	Argument	map_cmyk_color		8209525	1					
ANR	8209861	Identifier	map_cmyk_color		8209525	0					
ANR	8209862	ArgumentList	pdev		8209525	1					
ANR	8209863	Argument	pdev		8209525	0					
ANR	8209864	Identifier	pdev		8209525	0					
ANR	8209865	Argument	cmyk_white		8209525	1					
ANR	8209866	Identifier	cmyk_white		8209525	0					
ANR	8209867	ExpressionStatement	"code = dev_proc ( pdev , fill_rectangle ) ( pdev , 0 , 0 , pdev -> width , pdev -> height , color )"	795:24:25595:25678	8209525	4	True				
ANR	8209868	AssignmentExpression	"code = dev_proc ( pdev , fill_rectangle ) ( pdev , 0 , 0 , pdev -> width , pdev -> height , color )"		8209525	0		=			
ANR	8209869	Identifier	code		8209525	0					
ANR	8209870	CallExpression	"dev_proc ( pdev , fill_rectangle ) ( pdev , 0 , 0 , pdev -> width , pdev -> height , color )"		8209525	1					
ANR	8209871	Callee	"dev_proc ( pdev , fill_rectangle )"		8209525	0					
ANR	8209872	CallExpression	"dev_proc ( pdev , fill_rectangle )"		8209525	0					
ANR	8209873	Callee	dev_proc		8209525	0					
ANR	8209874	Identifier	dev_proc		8209525	0					
ANR	8209875	ArgumentList	pdev		8209525	1					
ANR	8209876	Argument	pdev		8209525	0					
ANR	8209877	Identifier	pdev		8209525	0					
ANR	8209878	Argument	fill_rectangle		8209525	1					
ANR	8209879	Identifier	fill_rectangle		8209525	0					
ANR	8209880	ArgumentList	pdev		8209525	1					
ANR	8209881	Argument	pdev		8209525	0					
ANR	8209882	Identifier	pdev		8209525	0					
ANR	8209883	Argument	0		8209525	1					
ANR	8209884	PrimaryExpression	0		8209525	0					
ANR	8209885	Argument	0		8209525	2					
ANR	8209886	PrimaryExpression	0		8209525	0					
ANR	8209887	Argument	pdev -> width		8209525	3					
ANR	8209888	PtrMemberAccess	pdev -> width		8209525	0					
ANR	8209889	Identifier	pdev		8209525	0					
ANR	8209890	Identifier	width		8209525	1					
ANR	8209891	Argument	pdev -> height		8209525	4					
ANR	8209892	PtrMemberAccess	pdev -> height		8209525	0					
ANR	8209893	Identifier	pdev		8209525	0					
ANR	8209894	Identifier	height		8209525	1					
ANR	8209895	Argument	color		8209525	5					
ANR	8209896	Identifier	color		8209525	0					
ANR	8209897	BreakStatement	break ;	797:20:25722:25727	8209525	6	True				
ANR	8209898	ElseStatement	else		8209525	0					
ANR	8209899	IfStatement	"if ( strncmp ( arg , ""saved-pages-test"" , 16 ) == 0 )"		8209525	0					
ANR	8209900	Condition	"strncmp ( arg , ""saved-pages-test"" , 16 ) == 0"	801:27:25982:26022	8209525	0	True				
ANR	8209901	EqualityExpression	"strncmp ( arg , ""saved-pages-test"" , 16 ) == 0"		8209525	0		==			
ANR	8209902	CallExpression	"strncmp ( arg , ""saved-pages-test"" , 16 )"		8209525	0					
ANR	8209903	Callee	strncmp		8209525	0					
ANR	8209904	Identifier	strncmp		8209525	0					
ANR	8209905	ArgumentList	arg		8209525	1					
ANR	8209906	Argument	arg		8209525	0					
ANR	8209907	Identifier	arg		8209525	0					
ANR	8209908	Argument	"""saved-pages-test"""		8209525	1					
ANR	8209909	PrimaryExpression	"""saved-pages-test"""		8209525	0					
ANR	8209910	Argument	16		8209525	2					
ANR	8209911	PrimaryExpression	16		8209525	0					
ANR	8209912	PrimaryExpression	0		8209525	1					
ANR	8209913	CompoundStatement		53:20:2556:2585	8209525	1					
ANR	8209914	IdentifierDeclStatement	gx_device * pdev = pmi -> device ;	803:20:26077:26106	8209525	0	True				
ANR	8209915	IdentifierDecl	* pdev = pmi -> device		8209525	0					
ANR	8209916	IdentifierDeclType	gx_device *		8209525	0					
ANR	8209917	Identifier	pdev		8209525	1					
ANR	8209918	AssignmentExpression	* pdev = pmi -> device		8209525	2		=			
ANR	8209919	Identifier	pdev		8209525	0					
ANR	8209920	PtrMemberAccess	pmi -> device		8209525	1					
ANR	8209921	Identifier	pmi		8209525	0					
ANR	8209922	Identifier	device		8209525	1					
ANR	8209923	IfStatement	if ( ( code = gs_opendevice ( pdev ) ) < 0 )		8209525	1					
ANR	8209924	Condition	( code = gs_opendevice ( pdev ) ) < 0	805:24:26133:26164	8209525	0	True				
ANR	8209925	RelationalExpression	( code = gs_opendevice ( pdev ) ) < 0		8209525	0		<			
ANR	8209926	AssignmentExpression	code = gs_opendevice ( pdev )		8209525	0		=			
ANR	8209927	Identifier	code		8209525	0					
ANR	8209928	CallExpression	gs_opendevice ( pdev )		8209525	1					
ANR	8209929	Callee	gs_opendevice		8209525	0					
ANR	8209930	Identifier	gs_opendevice		8209525	0					
ANR	8209931	ArgumentList	pdev		8209525	1					
ANR	8209932	Argument	pdev		8209525	0					
ANR	8209933	Identifier	pdev		8209525	0					
ANR	8209934	PrimaryExpression	0		8209525	1					
ANR	8209935	BreakStatement	break ;	806:24:26191:26196	8209525	1	True				
ANR	8209936	IfStatement	"if ( dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_supports_saved_pages , NULL , 0 ) <= 0 )"		8209525	2					
ANR	8209937	Condition	"dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_supports_saved_pages , NULL , 0 ) <= 0"	808:24:26223:26297	8209525	0	True				
ANR	8209938	RelationalExpression	"dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_supports_saved_pages , NULL , 0 ) <= 0"		8209525	0		<=			
ANR	8209939	CallExpression	"dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_supports_saved_pages , NULL , 0 )"		8209525	0					
ANR	8209940	Callee	"dev_proc ( pdev , dev_spec_op )"		8209525	0					
ANR	8209941	CallExpression	"dev_proc ( pdev , dev_spec_op )"		8209525	0					
ANR	8209942	Callee	dev_proc		8209525	0					
ANR	8209943	Identifier	dev_proc		8209525	0					
ANR	8209944	ArgumentList	pdev		8209525	1					
ANR	8209945	Argument	pdev		8209525	0					
ANR	8209946	Identifier	pdev		8209525	0					
ANR	8209947	Argument	dev_spec_op		8209525	1					
ANR	8209948	Identifier	dev_spec_op		8209525	0					
ANR	8209949	ArgumentList	pdev		8209525	1					
ANR	8209950	Argument	pdev		8209525	0					
ANR	8209951	Identifier	pdev		8209525	0					
ANR	8209952	Argument	gxdso_supports_saved_pages		8209525	1					
ANR	8209953	Identifier	gxdso_supports_saved_pages		8209525	0					
ANR	8209954	Argument	NULL		8209525	2					
ANR	8209955	Identifier	NULL		8209525	0					
ANR	8209956	Argument	0		8209525	3					
ANR	8209957	PrimaryExpression	0		8209525	0					
ANR	8209958	PrimaryExpression	0		8209525	1					
ANR	8209959	CompoundStatement		58:101:2779:2779	8209525	1					
ANR	8209960	ExpressionStatement	"errprintf ( pmi -> memory , ""   --saved-pages-test not supported by the '%s' device.\\n"" , pdev -> dname )"	809:24:26326:26456	8209525	0	True				
ANR	8209961	CallExpression	"errprintf ( pmi -> memory , ""   --saved-pages-test not supported by the '%s' device.\\n"" , pdev -> dname )"		8209525	0					
ANR	8209962	Callee	errprintf		8209525	0					
ANR	8209963	Identifier	errprintf		8209525	0					
ANR	8209964	ArgumentList	pmi -> memory		8209525	1					
ANR	8209965	Argument	pmi -> memory		8209525	0					
ANR	8209966	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8209967	Identifier	pmi		8209525	0					
ANR	8209968	Identifier	memory		8209525	1					
ANR	8209969	Argument	"""   --saved-pages-test not supported by the '%s' device.\\n"""		8209525	1					
ANR	8209970	PrimaryExpression	"""   --saved-pages-test not supported by the '%s' device.\\n"""		8209525	0					
ANR	8209971	Argument	pdev -> dname		8209525	2					
ANR	8209972	PtrMemberAccess	pdev -> dname		8209525	0					
ANR	8209973	Identifier	pdev		8209525	0					
ANR	8209974	Identifier	dname		8209525	1					
ANR	8209975	BreakStatement	break ;	811:24:26482:26487	8209525	1	True				
ANR	8209976	ExpressionStatement	"code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""begin"" , 5 )"	813:20:26554:26636	8209525	3	True				
ANR	8209977	AssignmentExpression	"code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""begin"" , 5 )"		8209525	0		=			
ANR	8209978	Identifier	code		8209525	0					
ANR	8209979	CallExpression	"gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""begin"" , 5 )"		8209525	1					
ANR	8209980	Callee	gx_saved_pages_param_process		8209525	0					
ANR	8209981	Identifier	gx_saved_pages_param_process		8209525	0					
ANR	8209982	ArgumentList	( gx_device_printer * ) pdev		8209525	1					
ANR	8209983	Argument	( gx_device_printer * ) pdev		8209525	0					
ANR	8209984	CastExpression	( gx_device_printer * ) pdev		8209525	0					
ANR	8209985	CastTarget	gx_device_printer *		8209525	0					
ANR	8209986	Identifier	pdev		8209525	1					
ANR	8209987	Argument	"( byte * ) ""begin"""		8209525	1					
ANR	8209988	CastExpression	"( byte * ) ""begin"""		8209525	0					
ANR	8209989	CastTarget	byte *		8209525	0					
ANR	8209990	PrimaryExpression	"""begin"""		8209525	1					
ANR	8209991	Argument	5		8209525	2					
ANR	8209992	PrimaryExpression	5		8209525	0					
ANR	8209993	IfStatement	if ( code > 0 )		8209525	4					
ANR	8209994	Condition	code > 0	814:24:26662:26669	8209525	0	True				
ANR	8209995	RelationalExpression	code > 0		8209525	0		>			
ANR	8209996	Identifier	code		8209525	0					
ANR	8209997	PrimaryExpression	0		8209525	1					
ANR	8209998	CompoundStatement		68:24:3347:3392	8209525	1					
ANR	8209999	IdentifierDeclStatement	gx_color_index color ;	816:24:26743:26763	8209525	0	True				
ANR	8210000	IdentifierDecl	color		8209525	0					
ANR	8210001	IdentifierDeclType	gx_color_index		8209525	0					
ANR	8210002	Identifier	color		8209525	1					
ANR	8210003	IdentifierDeclStatement	"gx_color_value rgb_white [ 3 ] = { 65535 , 65535 , 65535 } ;"	817:24:26789:26842	8209525	1	True				
ANR	8210004	IdentifierDecl	"rgb_white [ 3 ] = { 65535 , 65535 , 65535 }"		8209525	0					
ANR	8210005	IdentifierDeclType	gx_color_value [ 3 ]		8209525	0					
ANR	8210006	Identifier	rgb_white		8209525	1					
ANR	8210007	PrimaryExpression	3		8209525	2					
ANR	8210008	AssignmentExpression	"rgb_white [ 3 ] = { 65535 , 65535 , 65535 }"		8209525	3		=			
ANR	8210009	Identifier	rgb_white		8209525	0					
ANR	8210010	InitializerList	65535		8209525	1					
ANR	8210011	PrimaryExpression	65535		8209525	0					
ANR	8210012	PrimaryExpression	65535		8209525	1					
ANR	8210013	PrimaryExpression	65535		8209525	2					
ANR	8210014	IdentifierDeclStatement	"gx_color_value cmyk_white [ 4 ] = { 0 , 0 , 0 , 0 } ;"	818:24:26868:26913	8209525	2	True				
ANR	8210015	IdentifierDecl	"cmyk_white [ 4 ] = { 0 , 0 , 0 , 0 }"		8209525	0					
ANR	8210016	IdentifierDeclType	gx_color_value [ 4 ]		8209525	0					
ANR	8210017	Identifier	cmyk_white		8209525	1					
ANR	8210018	PrimaryExpression	4		8209525	2					
ANR	8210019	AssignmentExpression	"cmyk_white [ 4 ] = { 0 , 0 , 0 , 0 }"		8209525	3		=			
ANR	8210020	Identifier	cmyk_white		8209525	0					
ANR	8210021	InitializerList	0		8209525	1					
ANR	8210022	PrimaryExpression	0		8209525	0					
ANR	8210023	PrimaryExpression	0		8209525	1					
ANR	8210024	PrimaryExpression	0		8209525	2					
ANR	8210025	PrimaryExpression	0		8209525	3					
ANR	8210026	IfStatement	if ( pdev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE )		8209525	3					
ANR	8210027	Condition	pdev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE	820:28:26944:26998	8209525	0	True				
ANR	8210028	EqualityExpression	pdev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		8209525	0		==			
ANR	8210029	MemberAccess	pdev -> color_info . polarity		8209525	0					
ANR	8210030	PtrMemberAccess	pdev -> color_info		8209525	0					
ANR	8210031	Identifier	pdev		8209525	0					
ANR	8210032	Identifier	color_info		8209525	1					
ANR	8210033	Identifier	polarity		8209525	1					
ANR	8210034	Identifier	GX_CINFO_POLARITY_ADDITIVE		8209525	1					
ANR	8210035	ExpressionStatement	"color = dev_proc ( pdev , map_rgb_color ) ( pdev , rgb_white )"	821:28:27029:27083	8209525	1	True				
ANR	8210036	AssignmentExpression	"color = dev_proc ( pdev , map_rgb_color ) ( pdev , rgb_white )"		8209525	0		=			
ANR	8210037	Identifier	color		8209525	0					
ANR	8210038	CallExpression	"dev_proc ( pdev , map_rgb_color ) ( pdev , rgb_white )"		8209525	1					
ANR	8210039	Callee	"dev_proc ( pdev , map_rgb_color )"		8209525	0					
ANR	8210040	CallExpression	"dev_proc ( pdev , map_rgb_color )"		8209525	0					
ANR	8210041	Callee	dev_proc		8209525	0					
ANR	8210042	Identifier	dev_proc		8209525	0					
ANR	8210043	ArgumentList	pdev		8209525	1					
ANR	8210044	Argument	pdev		8209525	0					
ANR	8210045	Identifier	pdev		8209525	0					
ANR	8210046	Argument	map_rgb_color		8209525	1					
ANR	8210047	Identifier	map_rgb_color		8209525	0					
ANR	8210048	ArgumentList	pdev		8209525	1					
ANR	8210049	Argument	pdev		8209525	0					
ANR	8210050	Identifier	pdev		8209525	0					
ANR	8210051	Argument	rgb_white		8209525	1					
ANR	8210052	Identifier	rgb_white		8209525	0					
ANR	8210053	ElseStatement	else		8209525	0					
ANR	8210054	ExpressionStatement	"color = dev_proc ( pdev , map_cmyk_color ) ( pdev , cmyk_white )"	823:28:27142:27198	8209525	0	True				
ANR	8210055	AssignmentExpression	"color = dev_proc ( pdev , map_cmyk_color ) ( pdev , cmyk_white )"		8209525	0		=			
ANR	8210056	Identifier	color		8209525	0					
ANR	8210057	CallExpression	"dev_proc ( pdev , map_cmyk_color ) ( pdev , cmyk_white )"		8209525	1					
ANR	8210058	Callee	"dev_proc ( pdev , map_cmyk_color )"		8209525	0					
ANR	8210059	CallExpression	"dev_proc ( pdev , map_cmyk_color )"		8209525	0					
ANR	8210060	Callee	dev_proc		8209525	0					
ANR	8210061	Identifier	dev_proc		8209525	0					
ANR	8210062	ArgumentList	pdev		8209525	1					
ANR	8210063	Argument	pdev		8209525	0					
ANR	8210064	Identifier	pdev		8209525	0					
ANR	8210065	Argument	map_cmyk_color		8209525	1					
ANR	8210066	Identifier	map_cmyk_color		8209525	0					
ANR	8210067	ArgumentList	pdev		8209525	1					
ANR	8210068	Argument	pdev		8209525	0					
ANR	8210069	Identifier	pdev		8209525	0					
ANR	8210070	Argument	cmyk_white		8209525	1					
ANR	8210071	Identifier	cmyk_white		8209525	0					
ANR	8210072	ExpressionStatement	"code = dev_proc ( pdev , fill_rectangle ) ( pdev , 0 , 0 , pdev -> width , pdev -> height , color )"	824:24:27224:27307	8209525	4	True				
ANR	8210073	AssignmentExpression	"code = dev_proc ( pdev , fill_rectangle ) ( pdev , 0 , 0 , pdev -> width , pdev -> height , color )"		8209525	0		=			
ANR	8210074	Identifier	code		8209525	0					
ANR	8210075	CallExpression	"dev_proc ( pdev , fill_rectangle ) ( pdev , 0 , 0 , pdev -> width , pdev -> height , color )"		8209525	1					
ANR	8210076	Callee	"dev_proc ( pdev , fill_rectangle )"		8209525	0					
ANR	8210077	CallExpression	"dev_proc ( pdev , fill_rectangle )"		8209525	0					
ANR	8210078	Callee	dev_proc		8209525	0					
ANR	8210079	Identifier	dev_proc		8209525	0					
ANR	8210080	ArgumentList	pdev		8209525	1					
ANR	8210081	Argument	pdev		8209525	0					
ANR	8210082	Identifier	pdev		8209525	0					
ANR	8210083	Argument	fill_rectangle		8209525	1					
ANR	8210084	Identifier	fill_rectangle		8209525	0					
ANR	8210085	ArgumentList	pdev		8209525	1					
ANR	8210086	Argument	pdev		8209525	0					
ANR	8210087	Identifier	pdev		8209525	0					
ANR	8210088	Argument	0		8209525	1					
ANR	8210089	PrimaryExpression	0		8209525	0					
ANR	8210090	Argument	0		8209525	2					
ANR	8210091	PrimaryExpression	0		8209525	0					
ANR	8210092	Argument	pdev -> width		8209525	3					
ANR	8210093	PtrMemberAccess	pdev -> width		8209525	0					
ANR	8210094	Identifier	pdev		8209525	0					
ANR	8210095	Identifier	width		8209525	1					
ANR	8210096	Argument	pdev -> height		8209525	4					
ANR	8210097	PtrMemberAccess	pdev -> height		8209525	0					
ANR	8210098	Identifier	pdev		8209525	0					
ANR	8210099	Identifier	height		8209525	1					
ANR	8210100	Argument	color		8209525	5					
ANR	8210101	Identifier	color		8209525	0					
ANR	8210102	IfStatement	if ( code >= 0 )		8209525	5					
ANR	8210103	Condition	code >= 0	826:24:27355:27363	8209525	0	True				
ANR	8210104	RelationalExpression	code >= 0		8209525	0		>=			
ANR	8210105	Identifier	code		8209525	0					
ANR	8210106	PrimaryExpression	0		8209525	1					
ANR	8210107	ExpressionStatement	pmi -> saved_pages_test_mode = true	827:24:27390:27423	8209525	1	True				
ANR	8210108	AssignmentExpression	pmi -> saved_pages_test_mode = true		8209525	0		=			
ANR	8210109	PtrMemberAccess	pmi -> saved_pages_test_mode		8209525	0					
ANR	8210110	Identifier	pmi		8209525	0					
ANR	8210111	Identifier	saved_pages_test_mode		8209525	1					
ANR	8210112	Identifier	true		8209525	1					
ANR	8210113	BreakStatement	break ;	829:20:27480:27485	8209525	6	True				
ANR	8210114	Label	default :	832:12:27551:27558	8209525	2	True				
ANR	8210115	Identifier	default		8209525	0					
ANR	8210116	ExpressionStatement	"dmprintf1 ( pmi -> memory , ""Unrecognized switch: %s\\n"" , arg )"	833:16:27576:27632	8209525	3	True				
ANR	8210117	CallExpression	"dmprintf1 ( pmi -> memory , ""Unrecognized switch: %s\\n"" , arg )"		8209525	0					
ANR	8210118	Callee	dmprintf1		8209525	0					
ANR	8210119	Identifier	dmprintf1		8209525	0					
ANR	8210120	ArgumentList	pmi -> memory		8209525	1					
ANR	8210121	Argument	pmi -> memory		8209525	0					
ANR	8210122	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8210123	Identifier	pmi		8209525	0					
ANR	8210124	Identifier	memory		8209525	1					
ANR	8210125	Argument	"""Unrecognized switch: %s\\n"""		8209525	1					
ANR	8210126	PrimaryExpression	"""Unrecognized switch: %s\\n"""		8209525	0					
ANR	8210127	Argument	arg		8209525	2					
ANR	8210128	Identifier	arg		8209525	0					
ANR	8210129	ExpressionStatement	code = - 1	834:16:27650:27659	8209525	4	True				
ANR	8210130	AssignmentExpression	code = - 1		8209525	0		=			
ANR	8210131	Identifier	code		8209525	0					
ANR	8210132	UnaryOperationExpression	- 1		8209525	1					
ANR	8210133	UnaryOperator	-		8209525	0					
ANR	8210134	PrimaryExpression	1		8209525	1					
ANR	8210135	Label	case '\\0' :	835:12:27673:27682	8209525	5	True				
ANR	8210136	ContinueStatement	continue ;	837:16:27757:27765	8209525	6	True				
ANR	8210137	Label	case 'd' :	838:12:27779:27787	8209525	7	True				
ANR	8210138	Label	case 'D' :	839:12:27801:27809	8209525	8	True				
ANR	8210139	CompoundStatement		97:20:4595:4611	8209525	9					
ANR	8210140	IdentifierDeclStatement	"char * eqp = strchr ( arg , '=' ) ;"	842:20:27931:27959	8209525	0	True				
ANR	8210141	IdentifierDecl	"* eqp = strchr ( arg , '=' )"		8209525	0					
ANR	8210142	IdentifierDeclType	char *		8209525	0					
ANR	8210143	Identifier	eqp		8209525	1					
ANR	8210144	AssignmentExpression	"* eqp = strchr ( arg , '=' )"		8209525	2		=			
ANR	8210145	Identifier	eqp		8209525	0					
ANR	8210146	CallExpression	"strchr ( arg , '=' )"		8209525	1					
ANR	8210147	Callee	strchr		8209525	0					
ANR	8210148	Identifier	strchr		8209525	0					
ANR	8210149	ArgumentList	arg		8209525	1					
ANR	8210150	Argument	arg		8209525	0					
ANR	8210151	Identifier	arg		8209525	0					
ANR	8210152	Argument	'='		8209525	1					
ANR	8210153	PrimaryExpression	'='		8209525	0					
ANR	8210154	IdentifierDeclStatement	const char * value ;	843:20:27981:27998	8209525	1	True				
ANR	8210155	IdentifierDecl	* value		8209525	0					
ANR	8210156	IdentifierDeclType	const char *		8209525	0					
ANR	8210157	Identifier	value		8209525	1					
ANR	8210158	IdentifierDeclStatement	int vi ;	844:20:28020:28026	8209525	2	True				
ANR	8210159	IdentifierDecl	vi		8209525	0					
ANR	8210160	IdentifierDeclType	int		8209525	0					
ANR	8210161	Identifier	vi		8209525	1					
ANR	8210162	IdentifierDeclStatement	float vf ;	845:20:28048:28056	8209525	3	True				
ANR	8210163	IdentifierDecl	vf		8209525	0					
ANR	8210164	IdentifierDeclType	float		8209525	0					
ANR	8210165	Identifier	vf		8209525	1					
ANR	8210166	IdentifierDeclStatement	bool bval = true ;	846:20:28078:28094	8209525	4	True				
ANR	8210167	IdentifierDecl	bval = true		8209525	0					
ANR	8210168	IdentifierDeclType	bool		8209525	0					
ANR	8210169	Identifier	bval		8209525	1					
ANR	8210170	AssignmentExpression	bval = true		8209525	2		=			
ANR	8210171	Identifier	true		8209525	0					
ANR	8210172	Identifier	true		8209525	1					
ANR	8210173	IdentifierDeclStatement	char buffer [ 128 ] ;	847:20:28116:28132	8209525	5	True				
ANR	8210174	IdentifierDecl	buffer [ 128 ]		8209525	0					
ANR	8210175	IdentifierDeclType	char [ 128 ]		8209525	0					
ANR	8210176	Identifier	buffer		8209525	1					
ANR	8210177	PrimaryExpression	128		8209525	2					
ANR	8210178	IfStatement	"if ( eqp || ( eqp = strchr ( arg , '#' ) ) )"		8209525	6					
ANR	8210179	Condition	"eqp || ( eqp = strchr ( arg , '#' ) )"	849:24:28159:28189	8209525	0	True				
ANR	8210180	OrExpression	"eqp || ( eqp = strchr ( arg , '#' ) )"		8209525	0		||			
ANR	8210181	Identifier	eqp		8209525	0					
ANR	8210182	AssignmentExpression	"eqp = strchr ( arg , '#' )"		8209525	1		=			
ANR	8210183	Identifier	eqp		8209525	0					
ANR	8210184	CallExpression	"strchr ( arg , '#' )"		8209525	1					
ANR	8210185	Callee	strchr		8209525	0					
ANR	8210186	Identifier	strchr		8209525	0					
ANR	8210187	ArgumentList	arg		8209525	1					
ANR	8210188	Argument	arg		8209525	0					
ANR	8210189	Identifier	arg		8209525	0					
ANR	8210190	Argument	'#'		8209525	1					
ANR	8210191	PrimaryExpression	'#'		8209525	0					
ANR	8210192	ExpressionStatement	value = eqp + 1	850:24:28216:28231	8209525	1	True				
ANR	8210193	AssignmentExpression	value = eqp + 1		8209525	0		=			
ANR	8210194	Identifier	value		8209525	0					
ANR	8210195	AdditiveExpression	eqp + 1		8209525	1		+			
ANR	8210196	Identifier	eqp		8209525	0					
ANR	8210197	PrimaryExpression	1		8209525	1					
ANR	8210198	ElseStatement	else		8209525	0					
ANR	8210199	CompoundStatement		101:25:4737:4737	8209525	0					
ANR	8210200	ExpressionStatement	"code = check_for_special_int ( pmi , arg , ( int ) bval )"	853:24:28338:28387	8209525	0	True				
ANR	8210201	AssignmentExpression	"code = check_for_special_int ( pmi , arg , ( int ) bval )"		8209525	0		=			
ANR	8210202	Identifier	code		8209525	0					
ANR	8210203	CallExpression	"check_for_special_int ( pmi , arg , ( int ) bval )"		8209525	1					
ANR	8210204	Callee	check_for_special_int		8209525	0					
ANR	8210205	Identifier	check_for_special_int		8209525	0					
ANR	8210206	ArgumentList	pmi		8209525	1					
ANR	8210207	Argument	pmi		8209525	0					
ANR	8210208	Identifier	pmi		8209525	0					
ANR	8210209	Argument	arg		8209525	1					
ANR	8210210	Identifier	arg		8209525	0					
ANR	8210211	Argument	( int ) bval		8209525	2					
ANR	8210212	CastExpression	( int ) bval		8209525	0					
ANR	8210213	CastTarget	int		8209525	0					
ANR	8210214	Identifier	bval		8209525	1					
ANR	8210215	IfStatement	if ( code < 0 )		8209525	1					
ANR	8210216	Condition	code < 0	854:28:28417:28424	8209525	0	True				
ANR	8210217	RelationalExpression	code < 0		8209525	0		<			
ANR	8210218	Identifier	code		8209525	0					
ANR	8210219	PrimaryExpression	0		8209525	1					
ANR	8210220	ExpressionStatement	code = 0	854:38:28427:28435	8209525	1	True				
ANR	8210221	AssignmentExpression	code = 0		8209525	0		=			
ANR	8210222	Identifier	code		8209525	0					
ANR	8210223	PrimaryExpression	0		8209525	1					
ANR	8210224	IfStatement	if ( code == 1 )		8209525	2					
ANR	8210225	Condition	code == 1	855:28:28465:28473	8209525	0	True				
ANR	8210226	EqualityExpression	code == 1		8209525	0		==			
ANR	8210227	Identifier	code		8209525	0					
ANR	8210228	PrimaryExpression	1		8209525	1					
ANR	8210229	ExpressionStatement	"code = param_write_bool ( ( gs_param_list * ) params , arg , & bval )"	856:28:28504:28646	8209525	1	True				
ANR	8210230	AssignmentExpression	"code = param_write_bool ( ( gs_param_list * ) params , arg , & bval )"		8209525	0		=			
ANR	8210231	Identifier	code		8209525	0					
ANR	8210232	CallExpression	"param_write_bool ( ( gs_param_list * ) params , arg , & bval )"		8209525	1					
ANR	8210233	Callee	param_write_bool		8209525	0					
ANR	8210234	Identifier	param_write_bool		8209525	0					
ANR	8210235	ArgumentList	( gs_param_list * ) params		8209525	1					
ANR	8210236	Argument	( gs_param_list * ) params		8209525	0					
ANR	8210237	CastExpression	( gs_param_list * ) params		8209525	0					
ANR	8210238	CastTarget	gs_param_list *		8209525	0					
ANR	8210239	Identifier	params		8209525	1					
ANR	8210240	Argument	arg		8209525	1					
ANR	8210241	Identifier	arg		8209525	0					
ANR	8210242	Argument	& bval		8209525	2					
ANR	8210243	UnaryOperationExpression	& bval		8209525	0					
ANR	8210244	UnaryOperator	&		8209525	0					
ANR	8210245	Identifier	bval		8209525	1					
ANR	8210246	BreakStatement	break ;	859:24:28672:28677	8209525	3	True				
ANR	8210247	IfStatement	if ( value && value [ 0 ] == '/' )		8209525	7					
ANR	8210248	Condition	value && value [ 0 ] == '/'	862:24:28726:28749	8209525	0	True				
ANR	8210249	AndExpression	value && value [ 0 ] == '/'		8209525	0		&&			
ANR	8210250	Identifier	value		8209525	0					
ANR	8210251	EqualityExpression	value [ 0 ] == '/'		8209525	1		==			
ANR	8210252	ArrayIndexing	value [ 0 ]		8209525	0					
ANR	8210253	Identifier	value		8209525	0					
ANR	8210254	PrimaryExpression	0		8209525	1					
ANR	8210255	PrimaryExpression	'/'		8209525	1					
ANR	8210256	CompoundStatement		113:24:5257:5276	8209525	1					
ANR	8210257	IdentifierDeclStatement	gs_param_string str ;	863:24:28778:28797	8209525	0	True				
ANR	8210258	IdentifierDecl	str		8209525	0					
ANR	8210259	IdentifierDeclType	gs_param_string		8209525	0					
ANR	8210260	Identifier	str		8209525	1					
ANR	8210261	ExpressionStatement	"strncpy ( buffer , arg , eqp - arg )"	865:24:28824:28855	8209525	1	True				
ANR	8210262	CallExpression	"strncpy ( buffer , arg , eqp - arg )"		8209525	0					
ANR	8210263	Callee	strncpy		8209525	0					
ANR	8210264	Identifier	strncpy		8209525	0					
ANR	8210265	ArgumentList	buffer		8209525	1					
ANR	8210266	Argument	buffer		8209525	0					
ANR	8210267	Identifier	buffer		8209525	0					
ANR	8210268	Argument	arg		8209525	1					
ANR	8210269	Identifier	arg		8209525	0					
ANR	8210270	Argument	eqp - arg		8209525	2					
ANR	8210271	AdditiveExpression	eqp - arg		8209525	0		-			
ANR	8210272	Identifier	eqp		8209525	0					
ANR	8210273	Identifier	arg		8209525	1					
ANR	8210274	ExpressionStatement	buffer [ eqp - arg ] = '\\0'	866:24:28881:28905	8209525	2	True				
ANR	8210275	AssignmentExpression	buffer [ eqp - arg ] = '\\0'		8209525	0		=			
ANR	8210276	ArrayIndexing	buffer [ eqp - arg ]		8209525	0					
ANR	8210277	Identifier	buffer		8209525	0					
ANR	8210278	AdditiveExpression	eqp - arg		8209525	1		-			
ANR	8210279	Identifier	eqp		8209525	0					
ANR	8210280	Identifier	arg		8209525	1					
ANR	8210281	PrimaryExpression	'\\0'		8209525	1					
ANR	8210282	ExpressionStatement	"param_string_from_transient_string ( str , value + 1 )"	867:24:28931:28981	8209525	3	True				
ANR	8210283	CallExpression	"param_string_from_transient_string ( str , value + 1 )"		8209525	0					
ANR	8210284	Callee	param_string_from_transient_string		8209525	0					
ANR	8210285	Identifier	param_string_from_transient_string		8209525	0					
ANR	8210286	ArgumentList	str		8209525	1					
ANR	8210287	Argument	str		8209525	0					
ANR	8210288	Identifier	str		8209525	0					
ANR	8210289	Argument	value + 1		8209525	1					
ANR	8210290	AdditiveExpression	value + 1		8209525	0		+			
ANR	8210291	Identifier	value		8209525	0					
ANR	8210292	PrimaryExpression	1		8209525	1					
ANR	8210293	ExpressionStatement	"code = check_for_special_str ( pmi , arg , & str )"	868:24:29007:29051	8209525	4	True				
ANR	8210294	AssignmentExpression	"code = check_for_special_str ( pmi , arg , & str )"		8209525	0		=			
ANR	8210295	Identifier	code		8209525	0					
ANR	8210296	CallExpression	"check_for_special_str ( pmi , arg , & str )"		8209525	1					
ANR	8210297	Callee	check_for_special_str		8209525	0					
ANR	8210298	Identifier	check_for_special_str		8209525	0					
ANR	8210299	ArgumentList	pmi		8209525	1					
ANR	8210300	Argument	pmi		8209525	0					
ANR	8210301	Identifier	pmi		8209525	0					
ANR	8210302	Argument	arg		8209525	1					
ANR	8210303	Identifier	arg		8209525	0					
ANR	8210304	Argument	& str		8209525	2					
ANR	8210305	UnaryOperationExpression	& str		8209525	0					
ANR	8210306	UnaryOperator	&		8209525	0					
ANR	8210307	Identifier	str		8209525	1					
ANR	8210308	IfStatement	if ( code == 1 )		8209525	5					
ANR	8210309	Condition	code == 1	869:28:29081:29089	8209525	0	True				
ANR	8210310	EqualityExpression	code == 1		8209525	0		==			
ANR	8210311	Identifier	code		8209525	0					
ANR	8210312	PrimaryExpression	1		8209525	1					
ANR	8210313	ExpressionStatement	"code = param_write_name ( ( gs_param_list * ) params , buffer , & str )"	870:28:29120:29235	8209525	1	True				
ANR	8210314	AssignmentExpression	"code = param_write_name ( ( gs_param_list * ) params , buffer , & str )"		8209525	0		=			
ANR	8210315	Identifier	code		8209525	0					
ANR	8210316	CallExpression	"param_write_name ( ( gs_param_list * ) params , buffer , & str )"		8209525	1					
ANR	8210317	Callee	param_write_name		8209525	0					
ANR	8210318	Identifier	param_write_name		8209525	0					
ANR	8210319	ArgumentList	( gs_param_list * ) params		8209525	1					
ANR	8210320	Argument	( gs_param_list * ) params		8209525	0					
ANR	8210321	CastExpression	( gs_param_list * ) params		8209525	0					
ANR	8210322	CastTarget	gs_param_list *		8209525	0					
ANR	8210323	Identifier	params		8209525	1					
ANR	8210324	Argument	buffer		8209525	1					
ANR	8210325	Identifier	buffer		8209525	0					
ANR	8210326	Argument	& str		8209525	2					
ANR	8210327	UnaryOperationExpression	& str		8209525	0					
ANR	8210328	UnaryOperator	&		8209525	0					
ANR	8210329	Identifier	str		8209525	1					
ANR	8210330	BreakStatement	break ;	872:24:29261:29266	8209525	6	True				
ANR	8210331	ElseStatement	else		8209525	0					
ANR	8210332	IfStatement	"if ( strchr ( value , '#' ) )"		8209525	0					
ANR	8210333	Condition	"strchr ( value , '#' )"	875:29:29385:29402	8209525	0	True				
ANR	8210334	CallExpression	"strchr ( value , '#' )"		8209525	0					
ANR	8210335	Callee	strchr		8209525	0					
ANR	8210336	Identifier	strchr		8209525	0					
ANR	8210337	ArgumentList	value		8209525	1					
ANR	8210338	Argument	value		8209525	0					
ANR	8210339	Identifier	value		8209525	0					
ANR	8210340	Argument	'#'		8209525	1					
ANR	8210341	PrimaryExpression	'#'		8209525	0					
ANR	8210342	CompoundStatement		127:24:5956:5986	8209525	1					
ANR	8210343	IdentifierDeclStatement	"int base , number = 0 ;"	876:24:29431:29451	8209525	0	True				
ANR	8210344	IdentifierDecl	base		8209525	0					
ANR	8210345	IdentifierDeclType	int		8209525	0					
ANR	8210346	Identifier	base		8209525	1					
ANR	8210347	IdentifierDecl	number = 0		8209525	1					
ANR	8210348	IdentifierDeclType	int		8209525	0					
ANR	8210349	Identifier	number		8209525	1					
ANR	8210350	AssignmentExpression	number = 0		8209525	2		=			
ANR	8210351	Identifier	number		8209525	0					
ANR	8210352	PrimaryExpression	0		8209525	1					
ANR	8210353	IdentifierDeclStatement	"char * val = strchr ( value , '#' ) ;"	877:24:29477:29507	8209525	1	True				
ANR	8210354	IdentifierDecl	"* val = strchr ( value , '#' )"		8209525	0					
ANR	8210355	IdentifierDeclType	char *		8209525	0					
ANR	8210356	Identifier	val		8209525	1					
ANR	8210357	AssignmentExpression	"* val = strchr ( value , '#' )"		8209525	2		=			
ANR	8210358	Identifier	val		8209525	0					
ANR	8210359	CallExpression	"strchr ( value , '#' )"		8209525	1					
ANR	8210360	Callee	strchr		8209525	0					
ANR	8210361	Identifier	strchr		8209525	0					
ANR	8210362	ArgumentList	value		8209525	1					
ANR	8210363	Argument	value		8209525	0					
ANR	8210364	Identifier	value		8209525	0					
ANR	8210365	Argument	'#'		8209525	1					
ANR	8210366	PrimaryExpression	'#'		8209525	0					
ANR	8210367	ExpressionStatement	* val ++ = 0x00	879:24:29534:29547	8209525	2	True				
ANR	8210368	AssignmentExpression	* val ++ = 0x00		8209525	0		=			
ANR	8210369	UnaryOperationExpression	* val ++		8209525	0					
ANR	8210370	UnaryOperator	*		8209525	0					
ANR	8210371	PostIncDecOperationExpression	val ++		8209525	1					
ANR	8210372	Identifier	val		8209525	0					
ANR	8210373	IncDec	++		8209525	1					
ANR	8210374	PrimaryExpression	0x00		8209525	1					
ANR	8210375	ExpressionStatement	"sscanf ( value , ""%d"" , & base )"	880:24:29573:29599	8209525	3	True				
ANR	8210376	CallExpression	"sscanf ( value , ""%d"" , & base )"		8209525	0					
ANR	8210377	Callee	sscanf		8209525	0					
ANR	8210378	Identifier	sscanf		8209525	0					
ANR	8210379	ArgumentList	value		8209525	1					
ANR	8210380	Argument	value		8209525	0					
ANR	8210381	Identifier	value		8209525	0					
ANR	8210382	Argument	"""%d"""		8209525	1					
ANR	8210383	PrimaryExpression	"""%d"""		8209525	0					
ANR	8210384	Argument	& base		8209525	2					
ANR	8210385	UnaryOperationExpression	& base		8209525	0					
ANR	8210386	UnaryOperator	&		8209525	0					
ANR	8210387	Identifier	base		8209525	1					
ANR	8210388	IfStatement	if ( base < 2 || base > 36 )		8209525	4					
ANR	8210389	Condition	base < 2 || base > 36	881:28:29629:29649	8209525	0	True				
ANR	8210390	OrExpression	base < 2 || base > 36		8209525	0		||			
ANR	8210391	RelationalExpression	base < 2		8209525	0		<			
ANR	8210392	Identifier	base		8209525	0					
ANR	8210393	PrimaryExpression	2		8209525	1					
ANR	8210394	RelationalExpression	base > 36		8209525	1		>			
ANR	8210395	Identifier	base		8209525	0					
ANR	8210396	PrimaryExpression	36		8209525	1					
ANR	8210397	CompoundStatement		131:51:6131:6131	8209525	1					
ANR	8210398	ExpressionStatement	"dmprintf1 ( pmi -> memory , ""Value out of range %s"" , value )"	882:28:29682:29774	8209525	0	True				
ANR	8210399	CallExpression	"dmprintf1 ( pmi -> memory , ""Value out of range %s"" , value )"		8209525	0					
ANR	8210400	Callee	dmprintf1		8209525	0					
ANR	8210401	Identifier	dmprintf1		8209525	0					
ANR	8210402	ArgumentList	pmi -> memory		8209525	1					
ANR	8210403	Argument	pmi -> memory		8209525	0					
ANR	8210404	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8210405	Identifier	pmi		8209525	0					
ANR	8210406	Identifier	memory		8209525	1					
ANR	8210407	Argument	"""Value out of range %s"""		8209525	1					
ANR	8210408	PrimaryExpression	"""Value out of range %s"""		8209525	0					
ANR	8210409	Argument	value		8209525	2					
ANR	8210410	Identifier	value		8209525	0					
ANR	8210411	ReturnStatement	return - 1 ;	884:28:29804:29813	8209525	1	True				
ANR	8210412	UnaryOperationExpression	- 1		8209525	0					
ANR	8210413	UnaryOperator	-		8209525	0					
ANR	8210414	PrimaryExpression	1		8209525	1					
ANR	8210415	WhileStatement	while ( * val )		8209525	5					
ANR	8210416	Condition	* val	886:31:29872:29875	8209525	0	True				
ANR	8210417	UnaryOperationExpression	* val		8209525	0					
ANR	8210418	UnaryOperator	*		8209525	0					
ANR	8210419	Identifier	val		8209525	1					
ANR	8210420	CompoundStatement		136:37:6357:6357	8209525	1					
ANR	8210421	IfStatement	if ( * val >= '0' && * val <= '9' )		8209525	0					
ANR	8210422	Condition	* val >= '0' && * val <= '9'	887:32:29912:29937	8209525	0	True				
ANR	8210423	AndExpression	* val >= '0' && * val <= '9'		8209525	0		&&			
ANR	8210424	RelationalExpression	* val >= '0'		8209525	0		>=			
ANR	8210425	UnaryOperationExpression	* val		8209525	0					
ANR	8210426	UnaryOperator	*		8209525	0					
ANR	8210427	Identifier	val		8209525	1					
ANR	8210428	PrimaryExpression	'0'		8209525	1					
ANR	8210429	RelationalExpression	* val <= '9'		8209525	1		<=			
ANR	8210430	UnaryOperationExpression	* val		8209525	0					
ANR	8210431	UnaryOperator	*		8209525	0					
ANR	8210432	Identifier	val		8209525	1					
ANR	8210433	PrimaryExpression	'9'		8209525	1					
ANR	8210434	CompoundStatement		137:60:6419:6419	8209525	1					
ANR	8210435	ExpressionStatement	number = number * base + ( * val - '0' )	888:32:29974:30011	8209525	0	True				
ANR	8210436	AssignmentExpression	number = number * base + ( * val - '0' )		8209525	0		=			
ANR	8210437	Identifier	number		8209525	0					
ANR	8210438	AdditiveExpression	number * base + ( * val - '0' )		8209525	1		+			
ANR	8210439	MultiplicativeExpression	number * base		8209525	0		*			
ANR	8210440	Identifier	number		8209525	0					
ANR	8210441	Identifier	base		8209525	1					
ANR	8210442	AdditiveExpression	* val - '0'		8209525	1		-			
ANR	8210443	UnaryOperationExpression	* val		8209525	0					
ANR	8210444	UnaryOperator	*		8209525	0					
ANR	8210445	Identifier	val		8209525	1					
ANR	8210446	PrimaryExpression	'0'		8209525	1					
ANR	8210447	ElseStatement	else		8209525	0					
ANR	8210448	CompoundStatement		139:35:6527:6527	8209525	0					
ANR	8210449	IfStatement	if ( * val >= 'A' && * val <= 'Z' )		8209525	0					
ANR	8210450	Condition	* val >= 'A' && * val <= 'Z'	890:36:30086:30111	8209525	0	True				
ANR	8210451	AndExpression	* val >= 'A' && * val <= 'Z'		8209525	0		&&			
ANR	8210452	RelationalExpression	* val >= 'A'		8209525	0		>=			
ANR	8210453	UnaryOperationExpression	* val		8209525	0					
ANR	8210454	UnaryOperator	*		8209525	0					
ANR	8210455	Identifier	val		8209525	1					
ANR	8210456	PrimaryExpression	'A'		8209525	1					
ANR	8210457	RelationalExpression	* val <= 'Z'		8209525	1		<=			
ANR	8210458	UnaryOperationExpression	* val		8209525	0					
ANR	8210459	UnaryOperator	*		8209525	0					
ANR	8210460	Identifier	val		8209525	1					
ANR	8210461	PrimaryExpression	'Z'		8209525	1					
ANR	8210462	CompoundStatement		140:64:6593:6593	8209525	1					
ANR	8210463	ExpressionStatement	number = number * base + ( * val - 'A' )	891:36:30152:30189	8209525	0	True				
ANR	8210464	AssignmentExpression	number = number * base + ( * val - 'A' )		8209525	0		=			
ANR	8210465	Identifier	number		8209525	0					
ANR	8210466	AdditiveExpression	number * base + ( * val - 'A' )		8209525	1		+			
ANR	8210467	MultiplicativeExpression	number * base		8209525	0		*			
ANR	8210468	Identifier	number		8209525	0					
ANR	8210469	Identifier	base		8209525	1					
ANR	8210470	AdditiveExpression	* val - 'A'		8209525	1		-			
ANR	8210471	UnaryOperationExpression	* val		8209525	0					
ANR	8210472	UnaryOperator	*		8209525	0					
ANR	8210473	Identifier	val		8209525	1					
ANR	8210474	PrimaryExpression	'A'		8209525	1					
ANR	8210475	ElseStatement	else		8209525	0					
ANR	8210476	CompoundStatement		142:39:6709:6709	8209525	0					
ANR	8210477	IfStatement	if ( * val >= 'a' && * val <= 'z' )		8209525	0					
ANR	8210478	Condition	* val >= 'a' && * val <= 'z'	893:40:30272:30297	8209525	0	True				
ANR	8210479	AndExpression	* val >= 'a' && * val <= 'z'		8209525	0		&&			
ANR	8210480	RelationalExpression	* val >= 'a'		8209525	0		>=			
ANR	8210481	UnaryOperationExpression	* val		8209525	0					
ANR	8210482	UnaryOperator	*		8209525	0					
ANR	8210483	Identifier	val		8209525	1					
ANR	8210484	PrimaryExpression	'a'		8209525	1					
ANR	8210485	RelationalExpression	* val <= 'z'		8209525	1		<=			
ANR	8210486	UnaryOperationExpression	* val		8209525	0					
ANR	8210487	UnaryOperator	*		8209525	0					
ANR	8210488	Identifier	val		8209525	1					
ANR	8210489	PrimaryExpression	'z'		8209525	1					
ANR	8210490	CompoundStatement		143:68:6779:6779	8209525	1					
ANR	8210491	ExpressionStatement	number = number * base + ( * val - 'a' )	894:40:30342:30379	8209525	0	True				
ANR	8210492	AssignmentExpression	number = number * base + ( * val - 'a' )		8209525	0		=			
ANR	8210493	Identifier	number		8209525	0					
ANR	8210494	AdditiveExpression	number * base + ( * val - 'a' )		8209525	1		+			
ANR	8210495	MultiplicativeExpression	number * base		8209525	0		*			
ANR	8210496	Identifier	number		8209525	0					
ANR	8210497	Identifier	base		8209525	1					
ANR	8210498	AdditiveExpression	* val - 'a'		8209525	1		-			
ANR	8210499	UnaryOperationExpression	* val		8209525	0					
ANR	8210500	UnaryOperator	*		8209525	0					
ANR	8210501	Identifier	val		8209525	1					
ANR	8210502	PrimaryExpression	'a'		8209525	1					
ANR	8210503	ElseStatement	else		8209525	0					
ANR	8210504	CompoundStatement		145:43:6903:6903	8209525	0					
ANR	8210505	ExpressionStatement	"dmprintf1 ( pmi -> memory , ""Value out of range %s"" , val )"	896:40:30466:30618	8209525	0	True				
ANR	8210506	CallExpression	"dmprintf1 ( pmi -> memory , ""Value out of range %s"" , val )"		8209525	0					
ANR	8210507	Callee	dmprintf1		8209525	0					
ANR	8210508	Identifier	dmprintf1		8209525	0					
ANR	8210509	ArgumentList	pmi -> memory		8209525	1					
ANR	8210510	Argument	pmi -> memory		8209525	0					
ANR	8210511	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8210512	Identifier	pmi		8209525	0					
ANR	8210513	Identifier	memory		8209525	1					
ANR	8210514	Argument	"""Value out of range %s"""		8209525	1					
ANR	8210515	PrimaryExpression	"""Value out of range %s"""		8209525	0					
ANR	8210516	Argument	val		8209525	2					
ANR	8210517	Identifier	val		8209525	0					
ANR	8210518	ReturnStatement	return - 1 ;	899:40:30660:30669	8209525	1	True				
ANR	8210519	UnaryOperationExpression	- 1		8209525	0					
ANR	8210520	UnaryOperator	-		8209525	0					
ANR	8210521	PrimaryExpression	1		8209525	1					
ANR	8210522	ExpressionStatement	val ++	903:28:30801:30806	8209525	1	True				
ANR	8210523	PostIncDecOperationExpression	val ++		8209525	0					
ANR	8210524	Identifier	val		8209525	0					
ANR	8210525	IncDec	++		8209525	1					
ANR	8210526	ExpressionStatement	"strncpy ( buffer , arg , eqp - arg )"	905:24:30858:30889	8209525	6	True				
ANR	8210527	CallExpression	"strncpy ( buffer , arg , eqp - arg )"		8209525	0					
ANR	8210528	Callee	strncpy		8209525	0					
ANR	8210529	Identifier	strncpy		8209525	0					
ANR	8210530	ArgumentList	buffer		8209525	1					
ANR	8210531	Argument	buffer		8209525	0					
ANR	8210532	Identifier	buffer		8209525	0					
ANR	8210533	Argument	arg		8209525	1					
ANR	8210534	Identifier	arg		8209525	0					
ANR	8210535	Argument	eqp - arg		8209525	2					
ANR	8210536	AdditiveExpression	eqp - arg		8209525	0		-			
ANR	8210537	Identifier	eqp		8209525	0					
ANR	8210538	Identifier	arg		8209525	1					
ANR	8210539	ExpressionStatement	buffer [ eqp - arg ] = '\\0'	906:24:30915:30939	8209525	7	True				
ANR	8210540	AssignmentExpression	buffer [ eqp - arg ] = '\\0'		8209525	0		=			
ANR	8210541	ArrayIndexing	buffer [ eqp - arg ]		8209525	0					
ANR	8210542	Identifier	buffer		8209525	0					
ANR	8210543	AdditiveExpression	eqp - arg		8209525	1		-			
ANR	8210544	Identifier	eqp		8209525	0					
ANR	8210545	Identifier	arg		8209525	1					
ANR	8210546	PrimaryExpression	'\\0'		8209525	1					
ANR	8210547	ExpressionStatement	"code = check_for_special_int ( pmi , arg , number )"	907:24:30965:31011	8209525	8	True				
ANR	8210548	AssignmentExpression	"code = check_for_special_int ( pmi , arg , number )"		8209525	0		=			
ANR	8210549	Identifier	code		8209525	0					
ANR	8210550	CallExpression	"check_for_special_int ( pmi , arg , number )"		8209525	1					
ANR	8210551	Callee	check_for_special_int		8209525	0					
ANR	8210552	Identifier	check_for_special_int		8209525	0					
ANR	8210553	ArgumentList	pmi		8209525	1					
ANR	8210554	Argument	pmi		8209525	0					
ANR	8210555	Identifier	pmi		8209525	0					
ANR	8210556	Argument	arg		8209525	1					
ANR	8210557	Identifier	arg		8209525	0					
ANR	8210558	Argument	number		8209525	2					
ANR	8210559	Identifier	number		8209525	0					
ANR	8210560	IfStatement	if ( code < 0 )		8209525	9					
ANR	8210561	Condition	code < 0	908:28:31041:31048	8209525	0	True				
ANR	8210562	RelationalExpression	code < 0		8209525	0		<			
ANR	8210563	Identifier	code		8209525	0					
ANR	8210564	PrimaryExpression	0		8209525	1					
ANR	8210565	ExpressionStatement	code = 0	908:38:31051:31059	8209525	1	True				
ANR	8210566	AssignmentExpression	code = 0		8209525	0		=			
ANR	8210567	Identifier	code		8209525	0					
ANR	8210568	PrimaryExpression	0		8209525	1					
ANR	8210569	IfStatement	if ( code == 1 )		8209525	10					
ANR	8210570	Condition	code == 1	909:28:31089:31097	8209525	0	True				
ANR	8210571	EqualityExpression	code == 1		8209525	0		==			
ANR	8210572	Identifier	code		8209525	0					
ANR	8210573	PrimaryExpression	1		8209525	1					
ANR	8210574	ExpressionStatement	"code = param_write_int ( ( gs_param_list * ) params , buffer , & number )"	910:28:31128:31273	8209525	1	True				
ANR	8210575	AssignmentExpression	"code = param_write_int ( ( gs_param_list * ) params , buffer , & number )"		8209525	0		=			
ANR	8210576	Identifier	code		8209525	0					
ANR	8210577	CallExpression	"param_write_int ( ( gs_param_list * ) params , buffer , & number )"		8209525	1					
ANR	8210578	Callee	param_write_int		8209525	0					
ANR	8210579	Identifier	param_write_int		8209525	0					
ANR	8210580	ArgumentList	( gs_param_list * ) params		8209525	1					
ANR	8210581	Argument	( gs_param_list * ) params		8209525	0					
ANR	8210582	CastExpression	( gs_param_list * ) params		8209525	0					
ANR	8210583	CastTarget	gs_param_list *		8209525	0					
ANR	8210584	Identifier	params		8209525	1					
ANR	8210585	Argument	buffer		8209525	1					
ANR	8210586	Identifier	buffer		8209525	0					
ANR	8210587	Argument	& number		8209525	2					
ANR	8210588	UnaryOperationExpression	& number		8209525	0					
ANR	8210589	UnaryOperator	&		8209525	0					
ANR	8210590	Identifier	number		8209525	1					
ANR	8210591	ElseStatement	else		8209525	0					
ANR	8210592	IfStatement	"if ( ( ! strchr ( value , '.' ) ) && ( sscanf ( value , ""%d"" , & vi ) == 1 ) )"		8209525	0					
ANR	8210593	Condition	"( ! strchr ( value , '.' ) ) && ( sscanf ( value , ""%d"" , & vi ) == 1 )"	913:31:31306:31481	8209525	0	True				
ANR	8210594	AndExpression	"( ! strchr ( value , '.' ) ) && ( sscanf ( value , ""%d"" , & vi ) == 1 )"		8209525	0		&&			
ANR	8210595	UnaryOperationExpression	"! strchr ( value , '.' )"		8209525	0					
ANR	8210596	UnaryOperator	!		8209525	0					
ANR	8210597	CallExpression	"strchr ( value , '.' )"		8209525	1					
ANR	8210598	Callee	strchr		8209525	0					
ANR	8210599	Identifier	strchr		8209525	0					
ANR	8210600	ArgumentList	value		8209525	1					
ANR	8210601	Argument	value		8209525	0					
ANR	8210602	Identifier	value		8209525	0					
ANR	8210603	Argument	'.'		8209525	1					
ANR	8210604	PrimaryExpression	'.'		8209525	0					
ANR	8210605	EqualityExpression	"sscanf ( value , ""%d"" , & vi ) == 1"		8209525	1		==			
ANR	8210606	CallExpression	"sscanf ( value , ""%d"" , & vi )"		8209525	0					
ANR	8210607	Callee	sscanf		8209525	0					
ANR	8210608	Identifier	sscanf		8209525	0					
ANR	8210609	ArgumentList	value		8209525	1					
ANR	8210610	Argument	value		8209525	0					
ANR	8210611	Identifier	value		8209525	0					
ANR	8210612	Argument	"""%d"""		8209525	1					
ANR	8210613	PrimaryExpression	"""%d"""		8209525	0					
ANR	8210614	Argument	& vi		8209525	2					
ANR	8210615	UnaryOperationExpression	& vi		8209525	0					
ANR	8210616	UnaryOperator	&		8209525	0					
ANR	8210617	Identifier	vi		8209525	1					
ANR	8210618	PrimaryExpression	1		8209525	1					
ANR	8210619	CompoundStatement		167:24:8069:8103	8209525	1					
ANR	8210620	IdentifierDeclStatement	char suffix = eqp [ strlen ( eqp ) - 1 ] ;	917:24:31590:31624	8209525	0	True				
ANR	8210621	IdentifierDecl	suffix = eqp [ strlen ( eqp ) - 1 ]		8209525	0					
ANR	8210622	IdentifierDeclType	char		8209525	0					
ANR	8210623	Identifier	suffix		8209525	1					
ANR	8210624	AssignmentExpression	suffix = eqp [ strlen ( eqp ) - 1 ]		8209525	2		=			
ANR	8210625	Identifier	suffix		8209525	0					
ANR	8210626	ArrayIndexing	eqp [ strlen ( eqp ) - 1 ]		8209525	1					
ANR	8210627	Identifier	eqp		8209525	0					
ANR	8210628	AdditiveExpression	strlen ( eqp ) - 1		8209525	1		-			
ANR	8210629	CallExpression	strlen ( eqp )		8209525	0					
ANR	8210630	Callee	strlen		8209525	0					
ANR	8210631	Identifier	strlen		8209525	0					
ANR	8210632	ArgumentList	eqp		8209525	1					
ANR	8210633	Argument	eqp		8209525	0					
ANR	8210634	Identifier	eqp		8209525	0					
ANR	8210635	PrimaryExpression	1		8209525	1					
ANR	8210636	SwitchStatement	switch ( suffix )		8209525	1					
ANR	8210637	Condition	suffix	919:32:31659:31664	8209525	0	True				
ANR	8210638	Identifier	suffix		8209525	0					
ANR	8210639	CompoundStatement		169:40:8146:8146	8209525	1					
ANR	8210640	Label	case 'k' :	920:28:31697:31705	8209525	0	True				
ANR	8210641	Label	case 'K' :	921:28:31735:31743	8209525	1	True				
ANR	8210642	ExpressionStatement	vi *= 1024	922:32:31777:31787	8209525	2	True				
ANR	8210643	AssignmentExpression	vi *= 1024		8209525	0		*=			
ANR	8210644	Identifier	vi		8209525	0					
ANR	8210645	PrimaryExpression	1024		8209525	1					
ANR	8210646	BreakStatement	break ;	923:32:31821:31826	8209525	3	True				
ANR	8210647	Label	case 'm' :	924:28:31856:31864	8209525	4	True				
ANR	8210648	Label	case 'M' :	925:28:31894:31902	8209525	5	True				
ANR	8210649	ExpressionStatement	vi *= 1024 * 1024	926:32:31936:31953	8209525	6	True				
ANR	8210650	AssignmentExpression	vi *= 1024 * 1024		8209525	0		*=			
ANR	8210651	Identifier	vi		8209525	0					
ANR	8210652	MultiplicativeExpression	1024 * 1024		8209525	1		*			
ANR	8210653	PrimaryExpression	1024		8209525	0					
ANR	8210654	PrimaryExpression	1024		8209525	1					
ANR	8210655	BreakStatement	break ;	927:32:31987:31992	8209525	7	True				
ANR	8210656	Label	case 'g' :	928:28:32022:32030	8209525	8	True				
ANR	8210657	Label	case 'G' :	929:28:32060:32068	8209525	9	True				
ANR	8210658	ExpressionStatement	vi *= 1024 * 1024 * 1024	932:32:32273:32297	8209525	10	True				
ANR	8210659	AssignmentExpression	vi *= 1024 * 1024 * 1024		8209525	0		*=			
ANR	8210660	Identifier	vi		8209525	0					
ANR	8210661	MultiplicativeExpression	1024 * 1024 * 1024		8209525	1		*			
ANR	8210662	PrimaryExpression	1024		8209525	0					
ANR	8210663	MultiplicativeExpression	1024 * 1024		8209525	1		*			
ANR	8210664	PrimaryExpression	1024		8209525	0					
ANR	8210665	PrimaryExpression	1024		8209525	1					
ANR	8210666	BreakStatement	break ;	933:32:32331:32336	8209525	11	True				
ANR	8210667	Label	default :	934:28:32366:32373	8209525	12	True				
ANR	8210668	Identifier	default		8209525	0					
ANR	8210669	BreakStatement	break ;	935:32:32407:32412	8209525	13	True				
ANR	8210670	ExpressionStatement	"strncpy ( buffer , arg , eqp - arg )"	938:24:32587:32618	8209525	2	True				
ANR	8210671	CallExpression	"strncpy ( buffer , arg , eqp - arg )"		8209525	0					
ANR	8210672	Callee	strncpy		8209525	0					
ANR	8210673	Identifier	strncpy		8209525	0					
ANR	8210674	ArgumentList	buffer		8209525	1					
ANR	8210675	Argument	buffer		8209525	0					
ANR	8210676	Identifier	buffer		8209525	0					
ANR	8210677	Argument	arg		8209525	1					
ANR	8210678	Identifier	arg		8209525	0					
ANR	8210679	Argument	eqp - arg		8209525	2					
ANR	8210680	AdditiveExpression	eqp - arg		8209525	0		-			
ANR	8210681	Identifier	eqp		8209525	0					
ANR	8210682	Identifier	arg		8209525	1					
ANR	8210683	ExpressionStatement	buffer [ eqp - arg ] = '\\0'	939:24:32644:32668	8209525	3	True				
ANR	8210684	AssignmentExpression	buffer [ eqp - arg ] = '\\0'		8209525	0		=			
ANR	8210685	ArrayIndexing	buffer [ eqp - arg ]		8209525	0					
ANR	8210686	Identifier	buffer		8209525	0					
ANR	8210687	AdditiveExpression	eqp - arg		8209525	1		-			
ANR	8210688	Identifier	eqp		8209525	0					
ANR	8210689	Identifier	arg		8209525	1					
ANR	8210690	PrimaryExpression	'\\0'		8209525	1					
ANR	8210691	ExpressionStatement	"code = check_for_special_int ( pmi , arg , vi )"	940:24:32694:32736	8209525	4	True				
ANR	8210692	AssignmentExpression	"code = check_for_special_int ( pmi , arg , vi )"		8209525	0		=			
ANR	8210693	Identifier	code		8209525	0					
ANR	8210694	CallExpression	"check_for_special_int ( pmi , arg , vi )"		8209525	1					
ANR	8210695	Callee	check_for_special_int		8209525	0					
ANR	8210696	Identifier	check_for_special_int		8209525	0					
ANR	8210697	ArgumentList	pmi		8209525	1					
ANR	8210698	Argument	pmi		8209525	0					
ANR	8210699	Identifier	pmi		8209525	0					
ANR	8210700	Argument	arg		8209525	1					
ANR	8210701	Identifier	arg		8209525	0					
ANR	8210702	Argument	vi		8209525	2					
ANR	8210703	Identifier	vi		8209525	0					
ANR	8210704	IfStatement	if ( code < 0 )		8209525	5					
ANR	8210705	Condition	code < 0	941:28:32766:32773	8209525	0	True				
ANR	8210706	RelationalExpression	code < 0		8209525	0		<			
ANR	8210707	Identifier	code		8209525	0					
ANR	8210708	PrimaryExpression	0		8209525	1					
ANR	8210709	ExpressionStatement	code = 0	941:38:32776:32784	8209525	1	True				
ANR	8210710	AssignmentExpression	code = 0		8209525	0		=			
ANR	8210711	Identifier	code		8209525	0					
ANR	8210712	PrimaryExpression	0		8209525	1					
ANR	8210713	IfStatement	if ( code == 1 )		8209525	6					
ANR	8210714	Condition	code == 1	942:28:32814:32822	8209525	0	True				
ANR	8210715	EqualityExpression	code == 1		8209525	0		==			
ANR	8210716	Identifier	code		8209525	0					
ANR	8210717	PrimaryExpression	1		8209525	1					
ANR	8210718	ExpressionStatement	"code = param_write_int ( ( gs_param_list * ) params , buffer , & vi )"	943:28:32853:32994	8209525	1	True				
ANR	8210719	AssignmentExpression	"code = param_write_int ( ( gs_param_list * ) params , buffer , & vi )"		8209525	0		=			
ANR	8210720	Identifier	code		8209525	0					
ANR	8210721	CallExpression	"param_write_int ( ( gs_param_list * ) params , buffer , & vi )"		8209525	1					
ANR	8210722	Callee	param_write_int		8209525	0					
ANR	8210723	Identifier	param_write_int		8209525	0					
ANR	8210724	ArgumentList	( gs_param_list * ) params		8209525	1					
ANR	8210725	Argument	( gs_param_list * ) params		8209525	0					
ANR	8210726	CastExpression	( gs_param_list * ) params		8209525	0					
ANR	8210727	CastTarget	gs_param_list *		8209525	0					
ANR	8210728	Identifier	params		8209525	1					
ANR	8210729	Argument	buffer		8209525	1					
ANR	8210730	Identifier	buffer		8209525	0					
ANR	8210731	Argument	& vi		8209525	2					
ANR	8210732	UnaryOperationExpression	& vi		8209525	0					
ANR	8210733	UnaryOperator	&		8209525	0					
ANR	8210734	Identifier	vi		8209525	1					
ANR	8210735	ElseStatement	else		8209525	0					
ANR	8210736	IfStatement	"if ( sscanf ( value , ""%f"" , & vf ) == 1 )"		8209525	0					
ANR	8210737	Condition	"sscanf ( value , ""%f"" , & vf ) == 1"	946:31:33027:33055	8209525	0	True				
ANR	8210738	EqualityExpression	"sscanf ( value , ""%f"" , & vf ) == 1"		8209525	0		==			
ANR	8210739	CallExpression	"sscanf ( value , ""%f"" , & vf )"		8209525	0					
ANR	8210740	Callee	sscanf		8209525	0					
ANR	8210741	Identifier	sscanf		8209525	0					
ANR	8210742	ArgumentList	value		8209525	1					
ANR	8210743	Argument	value		8209525	0					
ANR	8210744	Identifier	value		8209525	0					
ANR	8210745	Argument	"""%f"""		8209525	1					
ANR	8210746	PrimaryExpression	"""%f"""		8209525	0					
ANR	8210747	Argument	& vf		8209525	2					
ANR	8210748	UnaryOperationExpression	& vf		8209525	0					
ANR	8210749	UnaryOperator	&		8209525	0					
ANR	8210750	Identifier	vf		8209525	1					
ANR	8210751	PrimaryExpression	1		8209525	1					
ANR	8210752	CompoundStatement		196:62:9537:9537	8209525	1					
ANR	8210753	ExpressionStatement	"strncpy ( buffer , arg , eqp - arg )"	948:24:33168:33199	8209525	0	True				
ANR	8210754	CallExpression	"strncpy ( buffer , arg , eqp - arg )"		8209525	0					
ANR	8210755	Callee	strncpy		8209525	0					
ANR	8210756	Identifier	strncpy		8209525	0					
ANR	8210757	ArgumentList	buffer		8209525	1					
ANR	8210758	Argument	buffer		8209525	0					
ANR	8210759	Identifier	buffer		8209525	0					
ANR	8210760	Argument	arg		8209525	1					
ANR	8210761	Identifier	arg		8209525	0					
ANR	8210762	Argument	eqp - arg		8209525	2					
ANR	8210763	AdditiveExpression	eqp - arg		8209525	0		-			
ANR	8210764	Identifier	eqp		8209525	0					
ANR	8210765	Identifier	arg		8209525	1					
ANR	8210766	ExpressionStatement	buffer [ eqp - arg ] = '\\0'	949:24:33225:33249	8209525	1	True				
ANR	8210767	AssignmentExpression	buffer [ eqp - arg ] = '\\0'		8209525	0		=			
ANR	8210768	ArrayIndexing	buffer [ eqp - arg ]		8209525	0					
ANR	8210769	Identifier	buffer		8209525	0					
ANR	8210770	AdditiveExpression	eqp - arg		8209525	1		-			
ANR	8210771	Identifier	eqp		8209525	0					
ANR	8210772	Identifier	arg		8209525	1					
ANR	8210773	PrimaryExpression	'\\0'		8209525	1					
ANR	8210774	ExpressionStatement	"code = check_for_special_float ( pmi , arg , vf )"	950:24:33275:33319	8209525	2	True				
ANR	8210775	AssignmentExpression	"code = check_for_special_float ( pmi , arg , vf )"		8209525	0		=			
ANR	8210776	Identifier	code		8209525	0					
ANR	8210777	CallExpression	"check_for_special_float ( pmi , arg , vf )"		8209525	1					
ANR	8210778	Callee	check_for_special_float		8209525	0					
ANR	8210779	Identifier	check_for_special_float		8209525	0					
ANR	8210780	ArgumentList	pmi		8209525	1					
ANR	8210781	Argument	pmi		8209525	0					
ANR	8210782	Identifier	pmi		8209525	0					
ANR	8210783	Argument	arg		8209525	1					
ANR	8210784	Identifier	arg		8209525	0					
ANR	8210785	Argument	vf		8209525	2					
ANR	8210786	Identifier	vf		8209525	0					
ANR	8210787	IfStatement	if ( code == 1 )		8209525	3					
ANR	8210788	Condition	code == 1	951:28:33349:33357	8209525	0	True				
ANR	8210789	EqualityExpression	code == 1		8209525	0		==			
ANR	8210790	Identifier	code		8209525	0					
ANR	8210791	PrimaryExpression	1		8209525	1					
ANR	8210792	ExpressionStatement	"code = param_write_float ( ( gs_param_list * ) params , buffer , & vf )"	952:28:33388:33533	8209525	1	True				
ANR	8210793	AssignmentExpression	"code = param_write_float ( ( gs_param_list * ) params , buffer , & vf )"		8209525	0		=			
ANR	8210794	Identifier	code		8209525	0					
ANR	8210795	CallExpression	"param_write_float ( ( gs_param_list * ) params , buffer , & vf )"		8209525	1					
ANR	8210796	Callee	param_write_float		8209525	0					
ANR	8210797	Identifier	param_write_float		8209525	0					
ANR	8210798	ArgumentList	( gs_param_list * ) params		8209525	1					
ANR	8210799	Argument	( gs_param_list * ) params		8209525	0					
ANR	8210800	CastExpression	( gs_param_list * ) params		8209525	0					
ANR	8210801	CastTarget	gs_param_list *		8209525	0					
ANR	8210802	Identifier	params		8209525	1					
ANR	8210803	Argument	buffer		8209525	1					
ANR	8210804	Identifier	buffer		8209525	0					
ANR	8210805	Argument	& vf		8209525	2					
ANR	8210806	UnaryOperationExpression	& vf		8209525	0					
ANR	8210807	UnaryOperator	&		8209525	0					
ANR	8210808	Identifier	vf		8209525	1					
ANR	8210809	ElseStatement	else		8209525	0					
ANR	8210810	IfStatement	"if ( ! strcmp ( value , ""true"" ) )"		8209525	0					
ANR	8210811	Condition	"! strcmp ( value , ""true"" )"	955:31:33566:33587	8209525	0	True				
ANR	8210812	UnaryOperationExpression	"! strcmp ( value , ""true"" )"		8209525	0					
ANR	8210813	UnaryOperator	!		8209525	0					
ANR	8210814	CallExpression	"strcmp ( value , ""true"" )"		8209525	1					
ANR	8210815	Callee	strcmp		8209525	0					
ANR	8210816	Identifier	strcmp		8209525	0					
ANR	8210817	ArgumentList	value		8209525	1					
ANR	8210818	Argument	value		8209525	0					
ANR	8210819	Identifier	value		8209525	0					
ANR	8210820	Argument	"""true"""		8209525	1					
ANR	8210821	PrimaryExpression	"""true"""		8209525	0					
ANR	8210822	CompoundStatement		205:55:10069:10069	8209525	1					
ANR	8210823	ExpressionStatement	"strncpy ( buffer , arg , eqp - arg )"	957:24:33659:33690	8209525	0	True				
ANR	8210824	CallExpression	"strncpy ( buffer , arg , eqp - arg )"		8209525	0					
ANR	8210825	Callee	strncpy		8209525	0					
ANR	8210826	Identifier	strncpy		8209525	0					
ANR	8210827	ArgumentList	buffer		8209525	1					
ANR	8210828	Argument	buffer		8209525	0					
ANR	8210829	Identifier	buffer		8209525	0					
ANR	8210830	Argument	arg		8209525	1					
ANR	8210831	Identifier	arg		8209525	0					
ANR	8210832	Argument	eqp - arg		8209525	2					
ANR	8210833	AdditiveExpression	eqp - arg		8209525	0		-			
ANR	8210834	Identifier	eqp		8209525	0					
ANR	8210835	Identifier	arg		8209525	1					
ANR	8210836	ExpressionStatement	buffer [ eqp - arg ] = '\\0'	958:24:33716:33740	8209525	1	True				
ANR	8210837	AssignmentExpression	buffer [ eqp - arg ] = '\\0'		8209525	0		=			
ANR	8210838	ArrayIndexing	buffer [ eqp - arg ]		8209525	0					
ANR	8210839	Identifier	buffer		8209525	0					
ANR	8210840	AdditiveExpression	eqp - arg		8209525	1		-			
ANR	8210841	Identifier	eqp		8209525	0					
ANR	8210842	Identifier	arg		8209525	1					
ANR	8210843	PrimaryExpression	'\\0'		8209525	1					
ANR	8210844	ExpressionStatement	"code = check_for_special_int ( pmi , arg , ( int ) bval )"	959:24:33766:33815	8209525	2	True				
ANR	8210845	AssignmentExpression	"code = check_for_special_int ( pmi , arg , ( int ) bval )"		8209525	0		=			
ANR	8210846	Identifier	code		8209525	0					
ANR	8210847	CallExpression	"check_for_special_int ( pmi , arg , ( int ) bval )"		8209525	1					
ANR	8210848	Callee	check_for_special_int		8209525	0					
ANR	8210849	Identifier	check_for_special_int		8209525	0					
ANR	8210850	ArgumentList	pmi		8209525	1					
ANR	8210851	Argument	pmi		8209525	0					
ANR	8210852	Identifier	pmi		8209525	0					
ANR	8210853	Argument	arg		8209525	1					
ANR	8210854	Identifier	arg		8209525	0					
ANR	8210855	Argument	( int ) bval		8209525	2					
ANR	8210856	CastExpression	( int ) bval		8209525	0					
ANR	8210857	CastTarget	int		8209525	0					
ANR	8210858	Identifier	bval		8209525	1					
ANR	8210859	IfStatement	if ( code < 0 )		8209525	3					
ANR	8210860	Condition	code < 0	960:28:33845:33852	8209525	0	True				
ANR	8210861	RelationalExpression	code < 0		8209525	0		<			
ANR	8210862	Identifier	code		8209525	0					
ANR	8210863	PrimaryExpression	0		8209525	1					
ANR	8210864	ExpressionStatement	code = 0	960:38:33855:33863	8209525	1	True				
ANR	8210865	AssignmentExpression	code = 0		8209525	0		=			
ANR	8210866	Identifier	code		8209525	0					
ANR	8210867	PrimaryExpression	0		8209525	1					
ANR	8210868	IfStatement	if ( code == 1 )		8209525	4					
ANR	8210869	Condition	code == 1	961:28:33893:33901	8209525	0	True				
ANR	8210870	EqualityExpression	code == 1		8209525	0		==			
ANR	8210871	Identifier	code		8209525	0					
ANR	8210872	PrimaryExpression	1		8209525	1					
ANR	8210873	ExpressionStatement	"code = param_write_bool ( ( gs_param_list * ) params , buffer , & bval )"	962:28:33932:34077	8209525	1	True				
ANR	8210874	AssignmentExpression	"code = param_write_bool ( ( gs_param_list * ) params , buffer , & bval )"		8209525	0		=			
ANR	8210875	Identifier	code		8209525	0					
ANR	8210876	CallExpression	"param_write_bool ( ( gs_param_list * ) params , buffer , & bval )"		8209525	1					
ANR	8210877	Callee	param_write_bool		8209525	0					
ANR	8210878	Identifier	param_write_bool		8209525	0					
ANR	8210879	ArgumentList	( gs_param_list * ) params		8209525	1					
ANR	8210880	Argument	( gs_param_list * ) params		8209525	0					
ANR	8210881	CastExpression	( gs_param_list * ) params		8209525	0					
ANR	8210882	CastTarget	gs_param_list *		8209525	0					
ANR	8210883	Identifier	params		8209525	1					
ANR	8210884	Argument	buffer		8209525	1					
ANR	8210885	Identifier	buffer		8209525	0					
ANR	8210886	Argument	& bval		8209525	2					
ANR	8210887	UnaryOperationExpression	& bval		8209525	0					
ANR	8210888	UnaryOperator	&		8209525	0					
ANR	8210889	Identifier	bval		8209525	1					
ANR	8210890	ElseStatement	else		8209525	0					
ANR	8210891	IfStatement	"if ( ! strcmp ( value , ""false"" ) )"		8209525	0					
ANR	8210892	Condition	"! strcmp ( value , ""false"" )"	965:31:34110:34132	8209525	0	True				
ANR	8210893	UnaryOperationExpression	"! strcmp ( value , ""false"" )"		8209525	0					
ANR	8210894	UnaryOperator	!		8209525	0					
ANR	8210895	CallExpression	"strcmp ( value , ""false"" )"		8209525	1					
ANR	8210896	Callee	strcmp		8209525	0					
ANR	8210897	Identifier	strcmp		8209525	0					
ANR	8210898	ArgumentList	value		8209525	1					
ANR	8210899	Argument	value		8209525	0					
ANR	8210900	Identifier	value		8209525	0					
ANR	8210901	Argument	"""false"""		8209525	1					
ANR	8210902	PrimaryExpression	"""false"""		8209525	0					
ANR	8210903	CompoundStatement		215:56:10614:10614	8209525	1					
ANR	8210904	ExpressionStatement	bval = false	966:24:34161:34173	8209525	0	True				
ANR	8210905	AssignmentExpression	bval = false		8209525	0		=			
ANR	8210906	Identifier	bval		8209525	0					
ANR	8210907	Identifier	false		8209525	1					
ANR	8210908	ExpressionStatement	"strncpy ( buffer , arg , eqp - arg )"	967:24:34199:34230	8209525	1	True				
ANR	8210909	CallExpression	"strncpy ( buffer , arg , eqp - arg )"		8209525	0					
ANR	8210910	Callee	strncpy		8209525	0					
ANR	8210911	Identifier	strncpy		8209525	0					
ANR	8210912	ArgumentList	buffer		8209525	1					
ANR	8210913	Argument	buffer		8209525	0					
ANR	8210914	Identifier	buffer		8209525	0					
ANR	8210915	Argument	arg		8209525	1					
ANR	8210916	Identifier	arg		8209525	0					
ANR	8210917	Argument	eqp - arg		8209525	2					
ANR	8210918	AdditiveExpression	eqp - arg		8209525	0		-			
ANR	8210919	Identifier	eqp		8209525	0					
ANR	8210920	Identifier	arg		8209525	1					
ANR	8210921	ExpressionStatement	buffer [ eqp - arg ] = '\\0'	968:24:34256:34280	8209525	2	True				
ANR	8210922	AssignmentExpression	buffer [ eqp - arg ] = '\\0'		8209525	0		=			
ANR	8210923	ArrayIndexing	buffer [ eqp - arg ]		8209525	0					
ANR	8210924	Identifier	buffer		8209525	0					
ANR	8210925	AdditiveExpression	eqp - arg		8209525	1		-			
ANR	8210926	Identifier	eqp		8209525	0					
ANR	8210927	Identifier	arg		8209525	1					
ANR	8210928	PrimaryExpression	'\\0'		8209525	1					
ANR	8210929	ExpressionStatement	"code = check_for_special_int ( pmi , arg , ( int ) bval )"	969:24:34306:34355	8209525	3	True				
ANR	8210930	AssignmentExpression	"code = check_for_special_int ( pmi , arg , ( int ) bval )"		8209525	0		=			
ANR	8210931	Identifier	code		8209525	0					
ANR	8210932	CallExpression	"check_for_special_int ( pmi , arg , ( int ) bval )"		8209525	1					
ANR	8210933	Callee	check_for_special_int		8209525	0					
ANR	8210934	Identifier	check_for_special_int		8209525	0					
ANR	8210935	ArgumentList	pmi		8209525	1					
ANR	8210936	Argument	pmi		8209525	0					
ANR	8210937	Identifier	pmi		8209525	0					
ANR	8210938	Argument	arg		8209525	1					
ANR	8210939	Identifier	arg		8209525	0					
ANR	8210940	Argument	( int ) bval		8209525	2					
ANR	8210941	CastExpression	( int ) bval		8209525	0					
ANR	8210942	CastTarget	int		8209525	0					
ANR	8210943	Identifier	bval		8209525	1					
ANR	8210944	IfStatement	if ( code < 0 )		8209525	4					
ANR	8210945	Condition	code < 0	970:28:34385:34392	8209525	0	True				
ANR	8210946	RelationalExpression	code < 0		8209525	0		<			
ANR	8210947	Identifier	code		8209525	0					
ANR	8210948	PrimaryExpression	0		8209525	1					
ANR	8210949	ExpressionStatement	code = 0	970:38:34395:34403	8209525	1	True				
ANR	8210950	AssignmentExpression	code = 0		8209525	0		=			
ANR	8210951	Identifier	code		8209525	0					
ANR	8210952	PrimaryExpression	0		8209525	1					
ANR	8210953	IfStatement	if ( code == 1 )		8209525	5					
ANR	8210954	Condition	code == 1	971:28:34433:34441	8209525	0	True				
ANR	8210955	EqualityExpression	code == 1		8209525	0		==			
ANR	8210956	Identifier	code		8209525	0					
ANR	8210957	PrimaryExpression	1		8209525	1					
ANR	8210958	ExpressionStatement	"code = param_write_bool ( ( gs_param_list * ) params , buffer , & bval )"	972:28:34472:34617	8209525	1	True				
ANR	8210959	AssignmentExpression	"code = param_write_bool ( ( gs_param_list * ) params , buffer , & bval )"		8209525	0		=			
ANR	8210960	Identifier	code		8209525	0					
ANR	8210961	CallExpression	"param_write_bool ( ( gs_param_list * ) params , buffer , & bval )"		8209525	1					
ANR	8210962	Callee	param_write_bool		8209525	0					
ANR	8210963	Identifier	param_write_bool		8209525	0					
ANR	8210964	ArgumentList	( gs_param_list * ) params		8209525	1					
ANR	8210965	Argument	( gs_param_list * ) params		8209525	0					
ANR	8210966	CastExpression	( gs_param_list * ) params		8209525	0					
ANR	8210967	CastTarget	gs_param_list *		8209525	0					
ANR	8210968	Identifier	params		8209525	1					
ANR	8210969	Argument	buffer		8209525	1					
ANR	8210970	Identifier	buffer		8209525	0					
ANR	8210971	Argument	& bval		8209525	2					
ANR	8210972	UnaryOperationExpression	& bval		8209525	0					
ANR	8210973	UnaryOperator	&		8209525	0					
ANR	8210974	Identifier	bval		8209525	1					
ANR	8210975	ElseStatement	else		8209525	0					
ANR	8210976	CompoundStatement		225:27:11125:11125	8209525	0					
ANR	8210977	ExpressionStatement	"dmprintf ( pmi -> memory , ""Usage for -d is -d<option>=[<integer>|<float>|true|false]\\n"" )"	976:24:34672:34789	8209525	0	True				
ANR	8210978	CallExpression	"dmprintf ( pmi -> memory , ""Usage for -d is -d<option>=[<integer>|<float>|true|false]\\n"" )"		8209525	0					
ANR	8210979	Callee	dmprintf		8209525	0					
ANR	8210980	Identifier	dmprintf		8209525	0					
ANR	8210981	ArgumentList	pmi -> memory		8209525	1					
ANR	8210982	Argument	pmi -> memory		8209525	0					
ANR	8210983	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8210984	Identifier	pmi		8209525	0					
ANR	8210985	Identifier	memory		8209525	1					
ANR	8210986	Argument	"""Usage for -d is -d<option>=[<integer>|<float>|true|false]\\n"""		8209525	1					
ANR	8210987	PrimaryExpression	"""Usage for -d is -d<option>=[<integer>|<float>|true|false]\\n"""		8209525	0					
ANR	8210988	ContinueStatement	continue ;	978:24:34815:34823	8209525	1	True				
ANR	8210989	BreakStatement	break ;	981:16:34881:34886	8209525	10	True				
ANR	8210990	Label	case 'E' :	982:12:34900:34908	8209525	11	True				
ANR	8210991	IfStatement	if ( * arg == 0 )		8209525	12					
ANR	8210992	Condition	* arg == 0	983:20:34930:34938	8209525	0	True				
ANR	8210993	EqualityExpression	* arg == 0		8209525	0		==			
ANR	8210994	UnaryOperationExpression	* arg		8209525	0					
ANR	8210995	UnaryOperator	*		8209525	0					
ANR	8210996	Identifier	arg		8209525	1					
ANR	8210997	PrimaryExpression	0		8209525	1					
ANR	8210998	ExpressionStatement	gs_debug [ '#' ] = 1	984:20:34961:34978	8209525	1	True				
ANR	8210999	AssignmentExpression	gs_debug [ '#' ] = 1		8209525	0		=			
ANR	8211000	ArrayIndexing	gs_debug [ '#' ]		8209525	0					
ANR	8211001	Identifier	gs_debug		8209525	0					
ANR	8211002	PrimaryExpression	'#'		8209525	1					
ANR	8211003	PrimaryExpression	1		8209525	1					
ANR	8211004	ElseStatement	else		8209525	0					
ANR	8211005	ExpressionStatement	"sscanf ( arg , ""%d"" , & pmi -> error_report )"	986:20:35021:35058	8209525	0	True				
ANR	8211006	CallExpression	"sscanf ( arg , ""%d"" , & pmi -> error_report )"		8209525	0					
ANR	8211007	Callee	sscanf		8209525	0					
ANR	8211008	Identifier	sscanf		8209525	0					
ANR	8211009	ArgumentList	arg		8209525	1					
ANR	8211010	Argument	arg		8209525	0					
ANR	8211011	Identifier	arg		8209525	0					
ANR	8211012	Argument	"""%d"""		8209525	1					
ANR	8211013	PrimaryExpression	"""%d"""		8209525	0					
ANR	8211014	Argument	& pmi -> error_report		8209525	2					
ANR	8211015	UnaryOperationExpression	& pmi -> error_report		8209525	0					
ANR	8211016	UnaryOperator	&		8209525	0					
ANR	8211017	PtrMemberAccess	pmi -> error_report		8209525	1					
ANR	8211018	Identifier	pmi		8209525	0					
ANR	8211019	Identifier	error_report		8209525	1					
ANR	8211020	BreakStatement	break ;	987:16:35076:35081	8209525	13	True				
ANR	8211021	Label	case 'g' :	988:12:35095:35103	8209525	14	True				
ANR	8211022	CompoundStatement		241:20:11655:11676	8209525	15					
ANR	8211023	IdentifierDeclStatement	int geom [ 2 ] ;	990:20:35143:35154	8209525	0	True				
ANR	8211024	IdentifierDecl	geom [ 2 ]		8209525	0					
ANR	8211025	IdentifierDeclType	int [ 2 ]		8209525	0					
ANR	8211026	Identifier	geom		8209525	1					
ANR	8211027	PrimaryExpression	2		8209525	2					
ANR	8211028	IdentifierDeclStatement	gs_param_int_array ia ;	991:20:35176:35197	8209525	1	True				
ANR	8211029	IdentifierDecl	ia		8209525	0					
ANR	8211030	IdentifierDeclType	gs_param_int_array		8209525	0					
ANR	8211031	Identifier	ia		8209525	1					
ANR	8211032	IfStatement	"if ( sscanf ( arg , ""%ux%u"" , & geom [ 0 ] , & geom [ 1 ] ) != 2 )"		8209525	2					
ANR	8211033	Condition	"sscanf ( arg , ""%ux%u"" , & geom [ 0 ] , & geom [ 1 ] ) != 2"	993:24:35224:35268	8209525	0	True				
ANR	8211034	EqualityExpression	"sscanf ( arg , ""%ux%u"" , & geom [ 0 ] , & geom [ 1 ] ) != 2"		8209525	0		!=			
ANR	8211035	CallExpression	"sscanf ( arg , ""%ux%u"" , & geom [ 0 ] , & geom [ 1 ] )"		8209525	0					
ANR	8211036	Callee	sscanf		8209525	0					
ANR	8211037	Identifier	sscanf		8209525	0					
ANR	8211038	ArgumentList	arg		8209525	1					
ANR	8211039	Argument	arg		8209525	0					
ANR	8211040	Identifier	arg		8209525	0					
ANR	8211041	Argument	"""%ux%u"""		8209525	1					
ANR	8211042	PrimaryExpression	"""%ux%u"""		8209525	0					
ANR	8211043	Argument	& geom [ 0 ]		8209525	2					
ANR	8211044	UnaryOperationExpression	& geom [ 0 ]		8209525	0					
ANR	8211045	UnaryOperator	&		8209525	0					
ANR	8211046	ArrayIndexing	geom [ 0 ]		8209525	1					
ANR	8211047	Identifier	geom		8209525	0					
ANR	8211048	PrimaryExpression	0		8209525	1					
ANR	8211049	Argument	& geom [ 1 ]		8209525	3					
ANR	8211050	UnaryOperationExpression	& geom [ 1 ]		8209525	0					
ANR	8211051	UnaryOperator	&		8209525	0					
ANR	8211052	ArrayIndexing	geom [ 1 ]		8209525	1					
ANR	8211053	Identifier	geom		8209525	0					
ANR	8211054	PrimaryExpression	1		8209525	1					
ANR	8211055	PrimaryExpression	2		8209525	1					
ANR	8211056	CompoundStatement		243:71:11750:11750	8209525	1					
ANR	8211057	ExpressionStatement	"dmprintf ( pmi -> memory , ""-g must be followed by <width>x<height>\\n"" )"	994:24:35297:35396	8209525	0	True				
ANR	8211058	CallExpression	"dmprintf ( pmi -> memory , ""-g must be followed by <width>x<height>\\n"" )"		8209525	0					
ANR	8211059	Callee	dmprintf		8209525	0					
ANR	8211060	Identifier	dmprintf		8209525	0					
ANR	8211061	ArgumentList	pmi -> memory		8209525	1					
ANR	8211062	Argument	pmi -> memory		8209525	0					
ANR	8211063	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8211064	Identifier	pmi		8209525	0					
ANR	8211065	Identifier	memory		8209525	1					
ANR	8211066	Argument	"""-g must be followed by <width>x<height>\\n"""		8209525	1					
ANR	8211067	PrimaryExpression	"""-g must be followed by <width>x<height>\\n"""		8209525	0					
ANR	8211068	ReturnStatement	return - 1 ;	996:24:35422:35431	8209525	1	True				
ANR	8211069	UnaryOperationExpression	- 1		8209525	0					
ANR	8211070	UnaryOperator	-		8209525	0					
ANR	8211071	PrimaryExpression	1		8209525	1					
ANR	8211072	ExpressionStatement	ia . data = geom	998:20:35475:35489	8209525	3	True				
ANR	8211073	AssignmentExpression	ia . data = geom		8209525	0		=			
ANR	8211074	MemberAccess	ia . data		8209525	0					
ANR	8211075	Identifier	ia		8209525	0					
ANR	8211076	Identifier	data		8209525	1					
ANR	8211077	Identifier	geom		8209525	1					
ANR	8211078	ExpressionStatement	ia . size = 2	999:20:35511:35522	8209525	4	True				
ANR	8211079	AssignmentExpression	ia . size = 2		8209525	0		=			
ANR	8211080	MemberAccess	ia . size		8209525	0					
ANR	8211081	Identifier	ia		8209525	0					
ANR	8211082	Identifier	size		8209525	1					
ANR	8211083	PrimaryExpression	2		8209525	1					
ANR	8211084	ExpressionStatement	ia . persistent = false	1000:20:35544:35565	8209525	5	True				
ANR	8211085	AssignmentExpression	ia . persistent = false		8209525	0		=			
ANR	8211086	MemberAccess	ia . persistent		8209525	0					
ANR	8211087	Identifier	ia		8209525	0					
ANR	8211088	Identifier	persistent		8209525	1					
ANR	8211089	Identifier	false		8209525	1					
ANR	8211090	ExpressionStatement	"code = param_write_int_array ( ( gs_param_list * ) params , ""HWSize"" , & ia )"	1001:20:35587:35726	8209525	6	True				
ANR	8211091	AssignmentExpression	"code = param_write_int_array ( ( gs_param_list * ) params , ""HWSize"" , & ia )"		8209525	0		=			
ANR	8211092	Identifier	code		8209525	0					
ANR	8211093	CallExpression	"param_write_int_array ( ( gs_param_list * ) params , ""HWSize"" , & ia )"		8209525	1					
ANR	8211094	Callee	param_write_int_array		8209525	0					
ANR	8211095	Identifier	param_write_int_array		8209525	0					
ANR	8211096	ArgumentList	( gs_param_list * ) params		8209525	1					
ANR	8211097	Argument	( gs_param_list * ) params		8209525	0					
ANR	8211098	CastExpression	( gs_param_list * ) params		8209525	0					
ANR	8211099	CastTarget	gs_param_list *		8209525	0					
ANR	8211100	Identifier	params		8209525	1					
ANR	8211101	Argument	"""HWSize"""		8209525	1					
ANR	8211102	PrimaryExpression	"""HWSize"""		8209525	0					
ANR	8211103	Argument	& ia		8209525	2					
ANR	8211104	UnaryOperationExpression	& ia		8209525	0					
ANR	8211105	UnaryOperator	&		8209525	0					
ANR	8211106	Identifier	ia		8209525	1					
ANR	8211107	IfStatement	if ( code >= 0 )		8209525	7					
ANR	8211108	Condition	code >= 0	1004:24:35752:35760	8209525	0	True				
ANR	8211109	RelationalExpression	code >= 0		8209525	0		>=			
ANR	8211110	Identifier	code		8209525	0					
ANR	8211111	PrimaryExpression	0		8209525	1					
ANR	8211112	ExpressionStatement	pmi -> page_set_on_command_line = true	1005:24:35787:35823	8209525	1	True				
ANR	8211113	AssignmentExpression	pmi -> page_set_on_command_line = true		8209525	0		=			
ANR	8211114	PtrMemberAccess	pmi -> page_set_on_command_line		8209525	0					
ANR	8211115	Identifier	pmi		8209525	0					
ANR	8211116	Identifier	page_set_on_command_line		8209525	1					
ANR	8211117	Identifier	true		8209525	1					
ANR	8211118	BreakStatement	break ;	1007:16:35859:35864	8209525	16	True				
ANR	8211119	Label	case 'H' :	1008:12:35878:35886	8209525	17	True				
ANR	8211120	CompoundStatement		263:20:12534:12590	8209525	18					
ANR	8211121	IdentifierDeclStatement	float hwmarg [ 4 ] ;	1010:20:35926:35941	8209525	0	True				
ANR	8211122	IdentifierDecl	hwmarg [ 4 ]		8209525	0					
ANR	8211123	IdentifierDeclType	float [ 4 ]		8209525	0					
ANR	8211124	Identifier	hwmarg		8209525	1					
ANR	8211125	PrimaryExpression	4		8209525	2					
ANR	8211126	IdentifierDeclStatement	gs_param_float_array fa ;	1011:20:35963:35986	8209525	1	True				
ANR	8211127	IdentifierDecl	fa		8209525	0					
ANR	8211128	IdentifierDeclType	gs_param_float_array		8209525	0					
ANR	8211129	Identifier	fa		8209525	1					
ANR	8211130	IdentifierDeclStatement	uint sz = countof ( hwmarg ) ;	1012:20:36008:36033	8209525	2	True				
ANR	8211131	IdentifierDecl	sz = countof ( hwmarg )		8209525	0					
ANR	8211132	IdentifierDeclType	uint		8209525	0					
ANR	8211133	Identifier	sz		8209525	1					
ANR	8211134	AssignmentExpression	sz = countof ( hwmarg )		8209525	2		=			
ANR	8211135	Identifier	sz		8209525	0					
ANR	8211136	CallExpression	countof ( hwmarg )		8209525	1					
ANR	8211137	Callee	countof		8209525	0					
ANR	8211138	Identifier	countof		8209525	0					
ANR	8211139	ArgumentList	hwmarg		8209525	1					
ANR	8211140	Argument	hwmarg		8209525	0					
ANR	8211141	Identifier	hwmarg		8209525	0					
ANR	8211142	IdentifierDeclStatement	"uint parsed = parse_floats ( pmi -> memory , sz , arg , hwmarg ) ;"	1013:20:36055:36111	8209525	3	True				
ANR	8211143	IdentifierDecl	"parsed = parse_floats ( pmi -> memory , sz , arg , hwmarg )"		8209525	0					
ANR	8211144	IdentifierDeclType	uint		8209525	0					
ANR	8211145	Identifier	parsed		8209525	1					
ANR	8211146	AssignmentExpression	"parsed = parse_floats ( pmi -> memory , sz , arg , hwmarg )"		8209525	2		=			
ANR	8211147	Identifier	parsed		8209525	0					
ANR	8211148	CallExpression	"parse_floats ( pmi -> memory , sz , arg , hwmarg )"		8209525	1					
ANR	8211149	Callee	parse_floats		8209525	0					
ANR	8211150	Identifier	parse_floats		8209525	0					
ANR	8211151	ArgumentList	pmi -> memory		8209525	1					
ANR	8211152	Argument	pmi -> memory		8209525	0					
ANR	8211153	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8211154	Identifier	pmi		8209525	0					
ANR	8211155	Identifier	memory		8209525	1					
ANR	8211156	Argument	sz		8209525	1					
ANR	8211157	Identifier	sz		8209525	0					
ANR	8211158	Argument	arg		8209525	2					
ANR	8211159	Identifier	arg		8209525	0					
ANR	8211160	Argument	hwmarg		8209525	3					
ANR	8211161	Identifier	hwmarg		8209525	0					
ANR	8211162	IfStatement	if ( parsed != sz )		8209525	4					
ANR	8211163	Condition	parsed != sz	1014:24:36137:36148	8209525	0	True				
ANR	8211164	EqualityExpression	parsed != sz		8209525	0		!=			
ANR	8211165	Identifier	parsed		8209525	0					
ANR	8211166	Identifier	sz		8209525	1					
ANR	8211167	CompoundStatement		264:38:12630:12630	8209525	1					
ANR	8211168	ExpressionStatement	"dmprintf ( pmi -> memory , ""-H must be followed by <left>x<bottom>x<right>x<top>\\n"" )"	1015:24:36177:36289	8209525	0	True				
ANR	8211169	CallExpression	"dmprintf ( pmi -> memory , ""-H must be followed by <left>x<bottom>x<right>x<top>\\n"" )"		8209525	0					
ANR	8211170	Callee	dmprintf		8209525	0					
ANR	8211171	Identifier	dmprintf		8209525	0					
ANR	8211172	ArgumentList	pmi -> memory		8209525	1					
ANR	8211173	Argument	pmi -> memory		8209525	0					
ANR	8211174	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8211175	Identifier	pmi		8209525	0					
ANR	8211176	Identifier	memory		8209525	1					
ANR	8211177	Argument	"""-H must be followed by <left>x<bottom>x<right>x<top>\\n"""		8209525	1					
ANR	8211178	PrimaryExpression	"""-H must be followed by <left>x<bottom>x<right>x<top>\\n"""		8209525	0					
ANR	8211179	ReturnStatement	return - 1 ;	1017:24:36315:36324	8209525	1	True				
ANR	8211180	UnaryOperationExpression	- 1		8209525	0					
ANR	8211181	UnaryOperator	-		8209525	0					
ANR	8211182	PrimaryExpression	1		8209525	1					
ANR	8211183	ExpressionStatement	fa . data = hwmarg	1019:20:36368:36384	8209525	5	True				
ANR	8211184	AssignmentExpression	fa . data = hwmarg		8209525	0		=			
ANR	8211185	MemberAccess	fa . data		8209525	0					
ANR	8211186	Identifier	fa		8209525	0					
ANR	8211187	Identifier	data		8209525	1					
ANR	8211188	Identifier	hwmarg		8209525	1					
ANR	8211189	ExpressionStatement	fa . size = parsed	1020:20:36406:36422	8209525	6	True				
ANR	8211190	AssignmentExpression	fa . size = parsed		8209525	0		=			
ANR	8211191	MemberAccess	fa . size		8209525	0					
ANR	8211192	Identifier	fa		8209525	0					
ANR	8211193	Identifier	size		8209525	1					
ANR	8211194	Identifier	parsed		8209525	1					
ANR	8211195	ExpressionStatement	fa . persistent = false	1021:20:36444:36465	8209525	7	True				
ANR	8211196	AssignmentExpression	fa . persistent = false		8209525	0		=			
ANR	8211197	MemberAccess	fa . persistent		8209525	0					
ANR	8211198	Identifier	fa		8209525	0					
ANR	8211199	Identifier	persistent		8209525	1					
ANR	8211200	Identifier	false		8209525	1					
ANR	8211201	ExpressionStatement	"code = param_write_float_array ( ( gs_param_list * ) params , "".HWMargins"" , & fa )"	1022:20:36487:36632	8209525	8	True				
ANR	8211202	AssignmentExpression	"code = param_write_float_array ( ( gs_param_list * ) params , "".HWMargins"" , & fa )"		8209525	0		=			
ANR	8211203	Identifier	code		8209525	0					
ANR	8211204	CallExpression	"param_write_float_array ( ( gs_param_list * ) params , "".HWMargins"" , & fa )"		8209525	1					
ANR	8211205	Callee	param_write_float_array		8209525	0					
ANR	8211206	Identifier	param_write_float_array		8209525	0					
ANR	8211207	ArgumentList	( gs_param_list * ) params		8209525	1					
ANR	8211208	Argument	( gs_param_list * ) params		8209525	0					
ANR	8211209	CastExpression	( gs_param_list * ) params		8209525	0					
ANR	8211210	CastTarget	gs_param_list *		8209525	0					
ANR	8211211	Identifier	params		8209525	1					
ANR	8211212	Argument	""".HWMargins"""		8209525	1					
ANR	8211213	PrimaryExpression	""".HWMargins"""		8209525	0					
ANR	8211214	Argument	& fa		8209525	2					
ANR	8211215	UnaryOperationExpression	& fa		8209525	0					
ANR	8211216	UnaryOperator	&		8209525	0					
ANR	8211217	Identifier	fa		8209525	1					
ANR	8211218	BreakStatement	break ;	1026:16:36668:36673	8209525	19	True				
ANR	8211219	Label	case 'm' :	1027:12:36687:36695	8209525	20	True				
ANR	8211220	CompoundStatement		282:20:13339:13393	8209525	21					
ANR	8211221	IdentifierDeclStatement	float marg [ 2 ] ;	1029:20:36735:36748	8209525	0	True				
ANR	8211222	IdentifierDecl	marg [ 2 ]		8209525	0					
ANR	8211223	IdentifierDeclType	float [ 2 ]		8209525	0					
ANR	8211224	Identifier	marg		8209525	1					
ANR	8211225	PrimaryExpression	2		8209525	2					
ANR	8211226	IdentifierDeclStatement	gs_param_float_array fa ;	1030:20:36770:36793	8209525	1	True				
ANR	8211227	IdentifierDecl	fa		8209525	0					
ANR	8211228	IdentifierDeclType	gs_param_float_array		8209525	0					
ANR	8211229	Identifier	fa		8209525	1					
ANR	8211230	IdentifierDeclStatement	uint sz = countof ( marg ) ;	1031:20:36815:36838	8209525	2	True				
ANR	8211231	IdentifierDecl	sz = countof ( marg )		8209525	0					
ANR	8211232	IdentifierDeclType	uint		8209525	0					
ANR	8211233	Identifier	sz		8209525	1					
ANR	8211234	AssignmentExpression	sz = countof ( marg )		8209525	2		=			
ANR	8211235	Identifier	sz		8209525	0					
ANR	8211236	CallExpression	countof ( marg )		8209525	1					
ANR	8211237	Callee	countof		8209525	0					
ANR	8211238	Identifier	countof		8209525	0					
ANR	8211239	ArgumentList	marg		8209525	1					
ANR	8211240	Argument	marg		8209525	0					
ANR	8211241	Identifier	marg		8209525	0					
ANR	8211242	IdentifierDeclStatement	"uint parsed = parse_floats ( pmi -> memory , sz , arg , marg ) ;"	1032:20:36860:36914	8209525	3	True				
ANR	8211243	IdentifierDecl	"parsed = parse_floats ( pmi -> memory , sz , arg , marg )"		8209525	0					
ANR	8211244	IdentifierDeclType	uint		8209525	0					
ANR	8211245	Identifier	parsed		8209525	1					
ANR	8211246	AssignmentExpression	"parsed = parse_floats ( pmi -> memory , sz , arg , marg )"		8209525	2		=			
ANR	8211247	Identifier	parsed		8209525	0					
ANR	8211248	CallExpression	"parse_floats ( pmi -> memory , sz , arg , marg )"		8209525	1					
ANR	8211249	Callee	parse_floats		8209525	0					
ANR	8211250	Identifier	parse_floats		8209525	0					
ANR	8211251	ArgumentList	pmi -> memory		8209525	1					
ANR	8211252	Argument	pmi -> memory		8209525	0					
ANR	8211253	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8211254	Identifier	pmi		8209525	0					
ANR	8211255	Identifier	memory		8209525	1					
ANR	8211256	Argument	sz		8209525	1					
ANR	8211257	Identifier	sz		8209525	0					
ANR	8211258	Argument	arg		8209525	2					
ANR	8211259	Identifier	arg		8209525	0					
ANR	8211260	Argument	marg		8209525	3					
ANR	8211261	Identifier	marg		8209525	0					
ANR	8211262	IfStatement	if ( parsed != sz )		8209525	4					
ANR	8211263	Condition	parsed != sz	1033:24:36940:36951	8209525	0	True				
ANR	8211264	EqualityExpression	parsed != sz		8209525	0		!=			
ANR	8211265	Identifier	parsed		8209525	0					
ANR	8211266	Identifier	sz		8209525	1					
ANR	8211267	CompoundStatement		283:38:13433:13433	8209525	1					
ANR	8211268	ExpressionStatement	"dmprintf ( pmi -> memory , ""-m must be followed by <left>x<bottom>\\n"" )"	1034:24:36980:37078	8209525	0	True				
ANR	8211269	CallExpression	"dmprintf ( pmi -> memory , ""-m must be followed by <left>x<bottom>\\n"" )"		8209525	0					
ANR	8211270	Callee	dmprintf		8209525	0					
ANR	8211271	Identifier	dmprintf		8209525	0					
ANR	8211272	ArgumentList	pmi -> memory		8209525	1					
ANR	8211273	Argument	pmi -> memory		8209525	0					
ANR	8211274	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8211275	Identifier	pmi		8209525	0					
ANR	8211276	Identifier	memory		8209525	1					
ANR	8211277	Argument	"""-m must be followed by <left>x<bottom>\\n"""		8209525	1					
ANR	8211278	PrimaryExpression	"""-m must be followed by <left>x<bottom>\\n"""		8209525	0					
ANR	8211279	ReturnStatement	return - 1 ;	1036:24:37104:37113	8209525	1	True				
ANR	8211280	UnaryOperationExpression	- 1		8209525	0					
ANR	8211281	UnaryOperator	-		8209525	0					
ANR	8211282	PrimaryExpression	1		8209525	1					
ANR	8211283	ExpressionStatement	fa . data = marg	1038:20:37157:37171	8209525	5	True				
ANR	8211284	AssignmentExpression	fa . data = marg		8209525	0		=			
ANR	8211285	MemberAccess	fa . data		8209525	0					
ANR	8211286	Identifier	fa		8209525	0					
ANR	8211287	Identifier	data		8209525	1					
ANR	8211288	Identifier	marg		8209525	1					
ANR	8211289	ExpressionStatement	fa . size = parsed	1039:20:37193:37209	8209525	6	True				
ANR	8211290	AssignmentExpression	fa . size = parsed		8209525	0		=			
ANR	8211291	MemberAccess	fa . size		8209525	0					
ANR	8211292	Identifier	fa		8209525	0					
ANR	8211293	Identifier	size		8209525	1					
ANR	8211294	Identifier	parsed		8209525	1					
ANR	8211295	ExpressionStatement	fa . persistent = false	1040:20:37231:37252	8209525	7	True				
ANR	8211296	AssignmentExpression	fa . persistent = false		8209525	0		=			
ANR	8211297	MemberAccess	fa . persistent		8209525	0					
ANR	8211298	Identifier	fa		8209525	0					
ANR	8211299	Identifier	persistent		8209525	1					
ANR	8211300	Identifier	false		8209525	1					
ANR	8211301	ExpressionStatement	"code = param_write_float_array ( ( gs_param_list * ) params , ""Margins"" , & fa )"	1041:20:37274:37418	8209525	8	True				
ANR	8211302	AssignmentExpression	"code = param_write_float_array ( ( gs_param_list * ) params , ""Margins"" , & fa )"		8209525	0		=			
ANR	8211303	Identifier	code		8209525	0					
ANR	8211304	CallExpression	"param_write_float_array ( ( gs_param_list * ) params , ""Margins"" , & fa )"		8209525	1					
ANR	8211305	Callee	param_write_float_array		8209525	0					
ANR	8211306	Identifier	param_write_float_array		8209525	0					
ANR	8211307	ArgumentList	( gs_param_list * ) params		8209525	1					
ANR	8211308	Argument	( gs_param_list * ) params		8209525	0					
ANR	8211309	CastExpression	( gs_param_list * ) params		8209525	0					
ANR	8211310	CastTarget	gs_param_list *		8209525	0					
ANR	8211311	Identifier	params		8209525	1					
ANR	8211312	Argument	"""Margins"""		8209525	1					
ANR	8211313	PrimaryExpression	"""Margins"""		8209525	0					
ANR	8211314	Argument	& fa		8209525	2					
ANR	8211315	UnaryOperationExpression	& fa		8209525	0					
ANR	8211316	UnaryOperator	&		8209525	0					
ANR	8211317	Identifier	fa		8209525	1					
ANR	8211318	BreakStatement	break ;	1046:16:37455:37460	8209525	22	True				
ANR	8211319	Label	case 'h' :	1047:12:37474:37482	8209525	23	True				
ANR	8211320	ExpressionStatement	help = true	1048:16:37500:37511	8209525	24	True				
ANR	8211321	AssignmentExpression	help = true		8209525	0		=			
ANR	8211322	Identifier	help		8209525	0					
ANR	8211323	Identifier	true		8209525	1					
ANR	8211324	GotoStatement	goto out ;	1049:16:37529:37537	8209525	25	True				
ANR	8211325	Identifier	out		8209525	0					
ANR	8211326	Label	case 'j' :	1051:12:37604:37612	8209525	26	True				
ANR	8211327	Label	case 'J' :	1052:12:37626:37634	8209525	27	True				
ANR	8211328	CompoundStatement		309:20:14478:14507	8209525	28					
ANR	8211329	IdentifierDeclStatement	stream_cursor_read cursor ;	1055:20:37749:37774	8209525	0	True				
ANR	8211330	IdentifierDecl	cursor		8209525	0					
ANR	8211331	IdentifierDeclType	stream_cursor_read		8209525	0					
ANR	8211332	Identifier	cursor		8209525	1					
ANR	8211333	IdentifierDeclStatement	byte buf [ 512 ] ;	1057:20:37882:37895	8209525	1	True				
ANR	8211334	IdentifierDecl	buf [ 512 ]		8209525	0					
ANR	8211335	IdentifierDeclType	byte [ 512 ]		8209525	0					
ANR	8211336	Identifier	buf		8209525	1					
ANR	8211337	PrimaryExpression	512		8209525	2					
ANR	8211338	IdentifierDeclStatement	int buf_len = strlen ( arg ) + 2 ;	1059:20:37999:38028	8209525	2	True				
ANR	8211339	IdentifierDecl	buf_len = strlen ( arg ) + 2		8209525	0					
ANR	8211340	IdentifierDeclType	int		8209525	0					
ANR	8211341	Identifier	buf_len		8209525	1					
ANR	8211342	AssignmentExpression	buf_len = strlen ( arg ) + 2		8209525	2		=			
ANR	8211343	Identifier	buf_len		8209525	0					
ANR	8211344	AdditiveExpression	strlen ( arg ) + 2		8209525	1		+			
ANR	8211345	CallExpression	strlen ( arg )		8209525	0					
ANR	8211346	Callee	strlen		8209525	0					
ANR	8211347	Identifier	strlen		8209525	0					
ANR	8211348	ArgumentList	arg		8209525	1					
ANR	8211349	Argument	arg		8209525	0					
ANR	8211350	Identifier	arg		8209525	0					
ANR	8211351	PrimaryExpression	2		8209525	1					
ANR	8211352	IfStatement	if ( ( buf_len ) > sizeof ( buf ) )		8209525	3					
ANR	8211353	Condition	( buf_len ) > sizeof ( buf )	1060:24:38054:38076	8209525	0	True				
ANR	8211354	RelationalExpression	( buf_len ) > sizeof ( buf )		8209525	0		>			
ANR	8211355	Identifier	buf_len		8209525	0					
ANR	8211356	SizeofExpression	sizeof ( buf )		8209525	1					
ANR	8211357	Sizeof	sizeof		8209525	0					
ANR	8211358	SizeofOperand	buf		8209525	1					
ANR	8211359	CompoundStatement		310:49:14558:14558	8209525	1					
ANR	8211360	ExpressionStatement	"dmprintf ( pmi -> memory , ""pjl sequence too long\\n"" )"	1061:24:38105:38153	8209525	0	True				
ANR	8211361	CallExpression	"dmprintf ( pmi -> memory , ""pjl sequence too long\\n"" )"		8209525	0					
ANR	8211362	Callee	dmprintf		8209525	0					
ANR	8211363	Identifier	dmprintf		8209525	0					
ANR	8211364	ArgumentList	pmi -> memory		8209525	1					
ANR	8211365	Argument	pmi -> memory		8209525	0					
ANR	8211366	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8211367	Identifier	pmi		8209525	0					
ANR	8211368	Identifier	memory		8209525	1					
ANR	8211369	Argument	"""pjl sequence too long\\n"""		8209525	1					
ANR	8211370	PrimaryExpression	"""pjl sequence too long\\n"""		8209525	0					
ANR	8211371	ReturnStatement	return - 1 ;	1062:24:38179:38188	8209525	1	True				
ANR	8211372	UnaryOperationExpression	- 1		8209525	0					
ANR	8211373	UnaryOperator	-		8209525	0					
ANR	8211374	PrimaryExpression	1		8209525	1					
ANR	8211375	CompoundStatement		318:24:14853:14858	8209525	4					
ANR	8211376	IdentifierDeclStatement	int i ;	1068:24:38374:38379	8209525	0	True				
ANR	8211377	IdentifierDecl	i		8209525	0					
ANR	8211378	IdentifierDeclType	int		8209525	0					
ANR	8211379	Identifier	i		8209525	1					
ANR	8211380	ForStatement	for ( i = 0 ; i < buf_len - 2 ; i ++ )		8209525	1					
ANR	8211381	ForInit	i = 0 ;	1070:29:38411:38416	8209525	0	True				
ANR	8211382	AssignmentExpression	i = 0		8209525	0		=			
ANR	8211383	Identifier	i		8209525	0					
ANR	8211384	PrimaryExpression	0		8209525	1					
ANR	8211385	Condition	i < buf_len - 2	1070:36:38418:38432	8209525	1	True				
ANR	8211386	RelationalExpression	i < buf_len - 2		8209525	0		<			
ANR	8211387	Identifier	i		8209525	0					
ANR	8211388	AdditiveExpression	buf_len - 2		8209525	1		-			
ANR	8211389	Identifier	buf_len		8209525	0					
ANR	8211390	PrimaryExpression	2		8209525	1					
ANR	8211391	PostIncDecOperationExpression	i ++	1070:53:38435:38437	8209525	2	True				
ANR	8211392	Identifier	i		8209525	0					
ANR	8211393	IncDec	++		8209525	1					
ANR	8211394	CompoundStatement		320:58:14919:14919	8209525	3					
ANR	8211395	IfStatement	if ( arg [ i ] == ';' )		8209525	0					
ANR	8211396	Condition	arg [ i ] == ';'	1071:32:38474:38486	8209525	0	True				
ANR	8211397	EqualityExpression	arg [ i ] == ';'		8209525	0		==			
ANR	8211398	ArrayIndexing	arg [ i ]		8209525	0					
ANR	8211399	Identifier	arg		8209525	0					
ANR	8211400	Identifier	i		8209525	1					
ANR	8211401	PrimaryExpression	';'		8209525	1					
ANR	8211402	ExpressionStatement	buf [ i ] = '\\n'	1072:32:38521:38534	8209525	1	True				
ANR	8211403	AssignmentExpression	buf [ i ] = '\\n'		8209525	0		=			
ANR	8211404	ArrayIndexing	buf [ i ]		8209525	0					
ANR	8211405	Identifier	buf		8209525	0					
ANR	8211406	Identifier	i		8209525	1					
ANR	8211407	PrimaryExpression	'\\n'		8209525	1					
ANR	8211408	ElseStatement	else		8209525	0					
ANR	8211409	ExpressionStatement	buf [ i ] = arg [ i ]	1074:32:38601:38616	8209525	0	True				
ANR	8211410	AssignmentExpression	buf [ i ] = arg [ i ]		8209525	0		=			
ANR	8211411	ArrayIndexing	buf [ i ]		8209525	0					
ANR	8211412	Identifier	buf		8209525	0					
ANR	8211413	Identifier	i		8209525	1					
ANR	8211414	ArrayIndexing	arg [ i ]		8209525	1					
ANR	8211415	Identifier	arg		8209525	0					
ANR	8211416	Identifier	i		8209525	1					
ANR	8211417	ExpressionStatement	buf [ i ] = '\\n'	1076:24:38668:38681	8209525	2	True				
ANR	8211418	AssignmentExpression	buf [ i ] = '\\n'		8209525	0		=			
ANR	8211419	ArrayIndexing	buf [ i ]		8209525	0					
ANR	8211420	Identifier	buf		8209525	0					
ANR	8211421	Identifier	i		8209525	1					
ANR	8211422	PrimaryExpression	'\\n'		8209525	1					
ANR	8211423	ExpressionStatement	i ++	1077:24:38707:38710	8209525	3	True				
ANR	8211424	PostIncDecOperationExpression	i ++		8209525	0					
ANR	8211425	Identifier	i		8209525	0					
ANR	8211426	IncDec	++		8209525	1					
ANR	8211427	ExpressionStatement	buf [ i ] = '\\0'	1078:24:38736:38749	8209525	4	True				
ANR	8211428	AssignmentExpression	buf [ i ] = '\\0'		8209525	0		=			
ANR	8211429	ArrayIndexing	buf [ i ]		8209525	0					
ANR	8211430	Identifier	buf		8209525	0					
ANR	8211431	Identifier	i		8209525	1					
ANR	8211432	PrimaryExpression	'\\0'		8209525	1					
ANR	8211433	ExpressionStatement	cursor . ptr = buf - 1	1081:20:38872:38892	8209525	5	True				
ANR	8211434	AssignmentExpression	cursor . ptr = buf - 1		8209525	0		=			
ANR	8211435	MemberAccess	cursor . ptr		8209525	0					
ANR	8211436	Identifier	cursor		8209525	0					
ANR	8211437	Identifier	ptr		8209525	1					
ANR	8211438	AdditiveExpression	buf - 1		8209525	1		-			
ANR	8211439	Identifier	buf		8209525	0					
ANR	8211440	PrimaryExpression	1		8209525	1					
ANR	8211441	ExpressionStatement	cursor . limit = cursor . ptr + buf_len	1083:20:38968:39003	8209525	6	True				
ANR	8211442	AssignmentExpression	cursor . limit = cursor . ptr + buf_len		8209525	0		=			
ANR	8211443	MemberAccess	cursor . limit		8209525	0					
ANR	8211444	Identifier	cursor		8209525	0					
ANR	8211445	Identifier	limit		8209525	1					
ANR	8211446	AdditiveExpression	cursor . ptr + buf_len		8209525	1		+			
ANR	8211447	MemberAccess	cursor . ptr		8209525	0					
ANR	8211448	Identifier	cursor		8209525	0					
ANR	8211449	Identifier	ptr		8209525	1					
ANR	8211450	Identifier	buf_len		8209525	1					
ANR	8211451	ExpressionStatement	"code = pl_process ( pjli , & cursor )"	1085:20:39067:39099	8209525	7	True				
ANR	8211452	AssignmentExpression	"code = pl_process ( pjli , & cursor )"		8209525	0		=			
ANR	8211453	Identifier	code		8209525	0					
ANR	8211454	CallExpression	"pl_process ( pjli , & cursor )"		8209525	1					
ANR	8211455	Callee	pl_process		8209525	0					
ANR	8211456	Identifier	pl_process		8209525	0					
ANR	8211457	ArgumentList	pjli		8209525	1					
ANR	8211458	Argument	pjli		8209525	0					
ANR	8211459	Identifier	pjli		8209525	0					
ANR	8211460	Argument	& cursor		8209525	1					
ANR	8211461	UnaryOperationExpression	& cursor		8209525	0					
ANR	8211462	UnaryOperator	&		8209525	0					
ANR	8211463	Identifier	cursor		8209525	1					
ANR	8211464	ExpressionStatement	pmi -> pjl_from_args = true	1086:20:39121:39146	8209525	8	True				
ANR	8211465	AssignmentExpression	pmi -> pjl_from_args = true		8209525	0		=			
ANR	8211466	PtrMemberAccess	pmi -> pjl_from_args		8209525	0					
ANR	8211467	Identifier	pmi		8209525	0					
ANR	8211468	Identifier	pjl_from_args		8209525	1					
ANR	8211469	Identifier	true		8209525	1					
ANR	8211470	IfStatement	if ( code != e_ExitLanguage )		8209525	9					
ANR	8211471	Condition	code != e_ExitLanguage	1089:24:39302:39323	8209525	0	True				
ANR	8211472	EqualityExpression	code != e_ExitLanguage		8209525	0		!=			
ANR	8211473	Identifier	code		8209525	0					
ANR	8211474	Identifier	e_ExitLanguage		8209525	1					
ANR	8211475	IfStatement	if ( code == 0 )		8209525	1					
ANR	8211476	Condition	code == 0	1090:28:39354:39362	8209525	0	True				
ANR	8211477	EqualityExpression	code == 0		8209525	0		==			
ANR	8211478	Identifier	code		8209525	0					
ANR	8211479	PrimaryExpression	0		8209525	1					
ANR	8211480	ExpressionStatement	code = - 1	1090:39:39365:39374	8209525	1	True				
ANR	8211481	AssignmentExpression	code = - 1		8209525	0		=			
ANR	8211482	Identifier	code		8209525	0					
ANR	8211483	UnaryOperationExpression	- 1		8209525	1					
ANR	8211484	UnaryOperator	-		8209525	0					
ANR	8211485	PrimaryExpression	1		8209525	1					
ANR	8211486	ElseStatement	else		8209525	0					
ANR	8211487	ExpressionStatement	code = 0	1092:24:39425:39433	8209525	0	True				
ANR	8211488	AssignmentExpression	code = 0		8209525	0		=			
ANR	8211489	Identifier	code		8209525	0					
ANR	8211490	PrimaryExpression	0		8209525	1					
ANR	8211491	BreakStatement	break ;	1094:16:39469:39474	8209525	29	True				
ANR	8211492	Label	case 'K' :	1095:12:39488:39496	8209525	30	True				
ANR	8211493	CompoundStatement		348:20:16076:16299	8209525	31					
ANR	8211494	IdentifierDeclStatement	int maxk ;	1097:20:39567:39575	8209525	0	True				
ANR	8211495	IdentifierDecl	maxk		8209525	0					
ANR	8211496	IdentifierDeclType	int		8209525	0					
ANR	8211497	Identifier	maxk		8209525	1					
ANR	8211498	IdentifierDeclStatement	gs_malloc_memory_t * rawheap = ( gs_malloc_memory_t * ) gs_memory_chunk_target ( pmi -> memory ) -> non_gc_memory ;	1098:20:39597:39820	8209525	1	True				
ANR	8211499	IdentifierDecl	* rawheap = ( gs_malloc_memory_t * ) gs_memory_chunk_target ( pmi -> memory ) -> non_gc_memory		8209525	0					
ANR	8211500	IdentifierDeclType	gs_malloc_memory_t *		8209525	0					
ANR	8211501	Identifier	rawheap		8209525	1					
ANR	8211502	AssignmentExpression	* rawheap = ( gs_malloc_memory_t * ) gs_memory_chunk_target ( pmi -> memory ) -> non_gc_memory		8209525	2		=			
ANR	8211503	Identifier	rawheap		8209525	0					
ANR	8211504	CastExpression	( gs_malloc_memory_t * ) gs_memory_chunk_target ( pmi -> memory ) -> non_gc_memory		8209525	1					
ANR	8211505	CastTarget	gs_malloc_memory_t *		8209525	0					
ANR	8211506	PtrMemberAccess	gs_memory_chunk_target ( pmi -> memory ) -> non_gc_memory		8209525	1					
ANR	8211507	CallExpression	gs_memory_chunk_target ( pmi -> memory )		8209525	0					
ANR	8211508	Callee	gs_memory_chunk_target		8209525	0					
ANR	8211509	Identifier	gs_memory_chunk_target		8209525	0					
ANR	8211510	ArgumentList	pmi -> memory		8209525	1					
ANR	8211511	Argument	pmi -> memory		8209525	0					
ANR	8211512	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8211513	Identifier	pmi		8209525	0					
ANR	8211514	Identifier	memory		8209525	1					
ANR	8211515	Identifier	non_gc_memory		8209525	1					
ANR	8211516	IfStatement	"if ( sscanf ( arg , ""%d"" , & maxk ) != 1 )"		8209525	2					
ANR	8211517	Condition	"sscanf ( arg , ""%d"" , & maxk ) != 1"	1102:24:39846:39874	8209525	0	True				
ANR	8211518	EqualityExpression	"sscanf ( arg , ""%d"" , & maxk ) != 1"		8209525	0		!=			
ANR	8211519	CallExpression	"sscanf ( arg , ""%d"" , & maxk )"		8209525	0					
ANR	8211520	Callee	sscanf		8209525	0					
ANR	8211521	Identifier	sscanf		8209525	0					
ANR	8211522	ArgumentList	arg		8209525	1					
ANR	8211523	Argument	arg		8209525	0					
ANR	8211524	Identifier	arg		8209525	0					
ANR	8211525	Argument	"""%d"""		8209525	1					
ANR	8211526	PrimaryExpression	"""%d"""		8209525	0					
ANR	8211527	Argument	& maxk		8209525	2					
ANR	8211528	UnaryOperationExpression	& maxk		8209525	0					
ANR	8211529	UnaryOperator	&		8209525	0					
ANR	8211530	Identifier	maxk		8209525	1					
ANR	8211531	PrimaryExpression	1		8209525	1					
ANR	8211532	CompoundStatement		352:55:16356:16356	8209525	1					
ANR	8211533	ExpressionStatement	"dmprintf ( pmi -> memory , ""-K must be followed by a number\\n"" )"	1103:24:39903:39994	8209525	0	True				
ANR	8211534	CallExpression	"dmprintf ( pmi -> memory , ""-K must be followed by a number\\n"" )"		8209525	0					
ANR	8211535	Callee	dmprintf		8209525	0					
ANR	8211536	Identifier	dmprintf		8209525	0					
ANR	8211537	ArgumentList	pmi -> memory		8209525	1					
ANR	8211538	Argument	pmi -> memory		8209525	0					
ANR	8211539	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8211540	Identifier	pmi		8209525	0					
ANR	8211541	Identifier	memory		8209525	1					
ANR	8211542	Argument	"""-K must be followed by a number\\n"""		8209525	1					
ANR	8211543	PrimaryExpression	"""-K must be followed by a number\\n"""		8209525	0					
ANR	8211544	ExpressionStatement	code = - 1	1105:24:40020:40029	8209525	1	True				
ANR	8211545	AssignmentExpression	code = - 1		8209525	0		=			
ANR	8211546	Identifier	code		8209525	0					
ANR	8211547	UnaryOperationExpression	- 1		8209525	1					
ANR	8211548	UnaryOperator	-		8209525	0					
ANR	8211549	PrimaryExpression	1		8209525	1					
ANR	8211550	ElseStatement	else		8209525	0					
ANR	8211551	ExpressionStatement	rawheap -> limit = ( long ) maxk << 10	1108:24:40102:40135	8209525	0	True				
ANR	8211552	AssignmentExpression	rawheap -> limit = ( long ) maxk << 10		8209525	0		=			
ANR	8211553	PtrMemberAccess	rawheap -> limit		8209525	0					
ANR	8211554	Identifier	rawheap		8209525	0					
ANR	8211555	Identifier	limit		8209525	1					
ANR	8211556	ShiftExpression	( long ) maxk << 10		8209525	1		<<			
ANR	8211557	CastExpression	( long ) maxk		8209525	0					
ANR	8211558	CastTarget	long		8209525	0					
ANR	8211559	Identifier	maxk		8209525	1					
ANR	8211560	PrimaryExpression	10		8209525	1					
ANR	8211561	BreakStatement	break ;	1110:16:40171:40176	8209525	32	True				
ANR	8211562	Label	case 'o' :	1111:12:40190:40198	8209525	33	True				
ANR	8211563	CompoundStatement		364:20:16755:16774	8209525	34					
ANR	8211564	IdentifierDeclStatement	const char * adef ;	1113:20:40238:40254	8209525	0	True				
ANR	8211565	IdentifierDecl	* adef		8209525	0					
ANR	8211566	IdentifierDeclType	const char *		8209525	0					
ANR	8211567	Identifier	adef		8209525	1					
ANR	8211568	IdentifierDeclStatement	gs_param_string str ;	1114:20:40276:40295	8209525	1	True				
ANR	8211569	IdentifierDecl	str		8209525	0					
ANR	8211570	IdentifierDeclType	gs_param_string		8209525	0					
ANR	8211571	Identifier	str		8209525	1					
ANR	8211572	IfStatement	if ( arg [ 0 ] == 0 )		8209525	2					
ANR	8211573	Condition	arg [ 0 ] == 0	1116:24:40322:40332	8209525	0	True				
ANR	8211574	EqualityExpression	arg [ 0 ] == 0		8209525	0		==			
ANR	8211575	ArrayIndexing	arg [ 0 ]		8209525	0					
ANR	8211576	Identifier	arg		8209525	0					
ANR	8211577	PrimaryExpression	0		8209525	1					
ANR	8211578	PrimaryExpression	0		8209525	1					
ANR	8211579	CompoundStatement		366:37:16814:16814	8209525	1					
ANR	8211580	ExpressionStatement	"code = arg_next ( pal , ( const char * * ) & adef , pmi -> memory )"	1117:24:40361:40416	8209525	0	True				
ANR	8211581	AssignmentExpression	"code = arg_next ( pal , ( const char * * ) & adef , pmi -> memory )"		8209525	0		=			
ANR	8211582	Identifier	code		8209525	0					
ANR	8211583	CallExpression	"arg_next ( pal , ( const char * * ) & adef , pmi -> memory )"		8209525	1					
ANR	8211584	Callee	arg_next		8209525	0					
ANR	8211585	Identifier	arg_next		8209525	0					
ANR	8211586	ArgumentList	pal		8209525	1					
ANR	8211587	Argument	pal		8209525	0					
ANR	8211588	Identifier	pal		8209525	0					
ANR	8211589	Argument	( const char * * ) & adef		8209525	1					
ANR	8211590	CastExpression	( const char * * ) & adef		8209525	0					
ANR	8211591	CastTarget	const char * *		8209525	0					
ANR	8211592	UnaryOperationExpression	& adef		8209525	1					
ANR	8211593	UnaryOperator	&		8209525	0					
ANR	8211594	Identifier	adef		8209525	1					
ANR	8211595	Argument	pmi -> memory		8209525	2					
ANR	8211596	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8211597	Identifier	pmi		8209525	0					
ANR	8211598	Identifier	memory		8209525	1					
ANR	8211599	IfStatement	if ( code < 0 )		8209525	1					
ANR	8211600	Condition	code < 0	1118:28:40446:40453	8209525	0	True				
ANR	8211601	RelationalExpression	code < 0		8209525	0		<			
ANR	8211602	Identifier	code		8209525	0					
ANR	8211603	PrimaryExpression	0		8209525	1					
ANR	8211604	BreakStatement	break ;	1119:28:40484:40489	8209525	1	True				
ANR	8211605	ElseStatement	else		8209525	0					
ANR	8211606	ExpressionStatement	adef = arg	1121:24:40542:40552	8209525	0	True				
ANR	8211607	AssignmentExpression	adef = arg		8209525	0		=			
ANR	8211608	Identifier	adef		8209525	0					
ANR	8211609	Identifier	arg		8209525	1					
ANR	8211610	ExpressionStatement	"param_string_from_transient_string ( str , adef )"	1122:20:40574:40619	8209525	3	True				
ANR	8211611	CallExpression	"param_string_from_transient_string ( str , adef )"		8209525	0					
ANR	8211612	Callee	param_string_from_transient_string		8209525	0					
ANR	8211613	Identifier	param_string_from_transient_string		8209525	0					
ANR	8211614	ArgumentList	str		8209525	1					
ANR	8211615	Argument	str		8209525	0					
ANR	8211616	Identifier	str		8209525	0					
ANR	8211617	Argument	adef		8209525	1					
ANR	8211618	Identifier	adef		8209525	0					
ANR	8211619	ExpressionStatement	"code = param_write_string ( ( gs_param_list * ) params , ""OutputFile"" , & str )"	1123:20:40641:40779	8209525	4	True				
ANR	8211620	AssignmentExpression	"code = param_write_string ( ( gs_param_list * ) params , ""OutputFile"" , & str )"		8209525	0		=			
ANR	8211621	Identifier	code		8209525	0					
ANR	8211622	CallExpression	"param_write_string ( ( gs_param_list * ) params , ""OutputFile"" , & str )"		8209525	1					
ANR	8211623	Callee	param_write_string		8209525	0					
ANR	8211624	Identifier	param_write_string		8209525	0					
ANR	8211625	ArgumentList	( gs_param_list * ) params		8209525	1					
ANR	8211626	Argument	( gs_param_list * ) params		8209525	0					
ANR	8211627	CastExpression	( gs_param_list * ) params		8209525	0					
ANR	8211628	CastTarget	gs_param_list *		8209525	0					
ANR	8211629	Identifier	params		8209525	1					
ANR	8211630	Argument	"""OutputFile"""		8209525	1					
ANR	8211631	PrimaryExpression	"""OutputFile"""		8209525	0					
ANR	8211632	Argument	& str		8209525	2					
ANR	8211633	UnaryOperationExpression	& str		8209525	0					
ANR	8211634	UnaryOperator	&		8209525	0					
ANR	8211635	Identifier	str		8209525	1					
ANR	8211636	ExpressionStatement	pmi -> pause = false	1126:20:40801:40819	8209525	5	True				
ANR	8211637	AssignmentExpression	pmi -> pause = false		8209525	0		=			
ANR	8211638	PtrMemberAccess	pmi -> pause		8209525	0					
ANR	8211639	Identifier	pmi		8209525	0					
ANR	8211640	Identifier	pause		8209525	1					
ANR	8211641	Identifier	false		8209525	1					
ANR	8211642	BreakStatement	break ;	1127:20:40841:40846	8209525	6	True				
ANR	8211643	Label	case 'L' :	1129:12:40878:40886	8209525	35	True				
ANR	8211644	CompoundStatement		382:20:17460:17517	8209525	36					
ANR	8211645	IdentifierDeclStatement	int index ;	1131:20:40950:40959	8209525	0	True				
ANR	8211646	IdentifierDecl	index		8209525	0					
ANR	8211647	IdentifierDeclType	int		8209525	0					
ANR	8211648	Identifier	index		8209525	1					
ANR	8211649	IdentifierDeclStatement	pl_interp_implementation_t * * impls = pmi -> implementations ;	1132:20:40981:41038	8209525	1	True				
ANR	8211650	IdentifierDecl	* * impls = pmi -> implementations		8209525	0					
ANR	8211651	IdentifierDeclType	pl_interp_implementation_t * *		8209525	0					
ANR	8211652	Identifier	impls		8209525	1					
ANR	8211653	AssignmentExpression	* * impls = pmi -> implementations		8209525	2		=			
ANR	8211654	Identifier	impls		8209525	0					
ANR	8211655	PtrMemberAccess	pmi -> implementations		8209525	1					
ANR	8211656	Identifier	pmi		8209525	0					
ANR	8211657	Identifier	implementations		8209525	1					
ANR	8211658	ForStatement	for ( index = 1 ; impls [ index ] != 0 ; ++ index )		8209525	2					
ANR	8211659	ForInit	index = 1 ;	1139:25:41270:41279	8209525	0	True				
ANR	8211660	AssignmentExpression	index = 1		8209525	0		=			
ANR	8211661	Identifier	index		8209525	0					
ANR	8211662	PrimaryExpression	1		8209525	1					
ANR	8211663	Condition	impls [ index ] != 0	1139:36:41281:41297	8209525	1	True				
ANR	8211664	EqualityExpression	impls [ index ] != 0		8209525	0		!=			
ANR	8211665	ArrayIndexing	impls [ index ]		8209525	0					
ANR	8211666	Identifier	impls		8209525	0					
ANR	8211667	Identifier	index		8209525	1					
ANR	8211668	PrimaryExpression	0		8209525	1					
ANR	8211669	UnaryExpression	++ index	1139:55:41300:41306	8209525	2	True				
ANR	8211670	IncDec	++		8209525	0					
ANR	8211671	Identifier	index		8209525	1					
ANR	8211672	IfStatement	"if ( ! strcmp ( arg , pl_characteristics ( impls [ index ] ) -> language ) )"		8209525	3					
ANR	8211673	Condition	"! strcmp ( arg , pl_characteristics ( impls [ index ] ) -> language )"	1140:28:41337:41465	8209525	0	True				
ANR	8211674	UnaryOperationExpression	"! strcmp ( arg , pl_characteristics ( impls [ index ] ) -> language )"		8209525	0					
ANR	8211675	UnaryOperator	!		8209525	0					
ANR	8211676	CallExpression	"strcmp ( arg , pl_characteristics ( impls [ index ] ) -> language )"		8209525	1					
ANR	8211677	Callee	strcmp		8209525	0					
ANR	8211678	Identifier	strcmp		8209525	0					
ANR	8211679	ArgumentList	arg		8209525	1					
ANR	8211680	Argument	arg		8209525	0					
ANR	8211681	Identifier	arg		8209525	0					
ANR	8211682	Argument	pl_characteristics ( impls [ index ] ) -> language		8209525	1					
ANR	8211683	PtrMemberAccess	pl_characteristics ( impls [ index ] ) -> language		8209525	0					
ANR	8211684	CallExpression	pl_characteristics ( impls [ index ] )		8209525	0					
ANR	8211685	Callee	pl_characteristics		8209525	0					
ANR	8211686	Identifier	pl_characteristics		8209525	0					
ANR	8211687	ArgumentList	impls [ index ]		8209525	1					
ANR	8211688	Argument	impls [ index ]		8209525	0					
ANR	8211689	ArrayIndexing	impls [ index ]		8209525	0					
ANR	8211690	Identifier	impls		8209525	0					
ANR	8211691	Identifier	index		8209525	1					
ANR	8211692	Identifier	language		8209525	1					
ANR	8211693	BreakStatement	break ;	1143:28:41496:41501	8209525	1	True				
ANR	8211694	IfStatement	if ( impls [ index ] != 0 )		8209525	3					
ANR	8211695	Condition	impls [ index ] != 0	1144:24:41527:41543	8209525	0	True				
ANR	8211696	EqualityExpression	impls [ index ] != 0		8209525	0		!=			
ANR	8211697	ArrayIndexing	impls [ index ]		8209525	0					
ANR	8211698	Identifier	impls		8209525	0					
ANR	8211699	Identifier	index		8209525	1					
ANR	8211700	PrimaryExpression	0		8209525	1					
ANR	8211701	ExpressionStatement	pmi -> implementation = impls [ index ]	1145:24:41570:41604	8209525	1	True				
ANR	8211702	AssignmentExpression	pmi -> implementation = impls [ index ]		8209525	0		=			
ANR	8211703	PtrMemberAccess	pmi -> implementation		8209525	0					
ANR	8211704	Identifier	pmi		8209525	0					
ANR	8211705	Identifier	implementation		8209525	1					
ANR	8211706	ArrayIndexing	impls [ index ]		8209525	1					
ANR	8211707	Identifier	impls		8209525	0					
ANR	8211708	Identifier	index		8209525	1					
ANR	8211709	ElseStatement	else		8209525	0					
ANR	8211710	CompoundStatement		396:25:18110:18110	8209525	0					
ANR	8211711	ExpressionStatement	"dmprintf ( pmi -> memory , ""Choose language in -L<language> from: "" )"	1147:24:41657:41753	8209525	0	True				
ANR	8211712	CallExpression	"dmprintf ( pmi -> memory , ""Choose language in -L<language> from: "" )"		8209525	0					
ANR	8211713	Callee	dmprintf		8209525	0					
ANR	8211714	Identifier	dmprintf		8209525	0					
ANR	8211715	ArgumentList	pmi -> memory		8209525	1					
ANR	8211716	Argument	pmi -> memory		8209525	0					
ANR	8211717	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8211718	Identifier	pmi		8209525	0					
ANR	8211719	Identifier	memory		8209525	1					
ANR	8211720	Argument	"""Choose language in -L<language> from: """		8209525	1					
ANR	8211721	PrimaryExpression	"""Choose language in -L<language> from: """		8209525	0					
ANR	8211722	ForStatement	for ( index = 1 ; impls [ index ] != 0 ; ++ index )		8209525	1					
ANR	8211723	ForInit	index = 1 ;	1149:29:41784:41793	8209525	0	True				
ANR	8211724	AssignmentExpression	index = 1		8209525	0		=			
ANR	8211725	Identifier	index		8209525	0					
ANR	8211726	PrimaryExpression	1		8209525	1					
ANR	8211727	Condition	impls [ index ] != 0	1149:40:41795:41811	8209525	1	True				
ANR	8211728	EqualityExpression	impls [ index ] != 0		8209525	0		!=			
ANR	8211729	ArrayIndexing	impls [ index ]		8209525	0					
ANR	8211730	Identifier	impls		8209525	0					
ANR	8211731	Identifier	index		8209525	1					
ANR	8211732	PrimaryExpression	0		8209525	1					
ANR	8211733	UnaryExpression	++ index	1149:59:41814:41820	8209525	2	True				
ANR	8211734	IncDec	++		8209525	0					
ANR	8211735	Identifier	index		8209525	1					
ANR	8211736	ExpressionStatement	"dmprintf1 ( pmi -> memory , ""%s "" , pl_characteristics ( impls [ index ] ) -> language )"	1150:28:41851:42001	8209525	3	True				
ANR	8211737	CallExpression	"dmprintf1 ( pmi -> memory , ""%s "" , pl_characteristics ( impls [ index ] ) -> language )"		8209525	0					
ANR	8211738	Callee	dmprintf1		8209525	0					
ANR	8211739	Identifier	dmprintf1		8209525	0					
ANR	8211740	ArgumentList	pmi -> memory		8209525	1					
ANR	8211741	Argument	pmi -> memory		8209525	0					
ANR	8211742	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8211743	Identifier	pmi		8209525	0					
ANR	8211744	Identifier	memory		8209525	1					
ANR	8211745	Argument	"""%s """		8209525	1					
ANR	8211746	PrimaryExpression	"""%s """		8209525	0					
ANR	8211747	Argument	pl_characteristics ( impls [ index ] ) -> language		8209525	2					
ANR	8211748	PtrMemberAccess	pl_characteristics ( impls [ index ] ) -> language		8209525	0					
ANR	8211749	CallExpression	pl_characteristics ( impls [ index ] )		8209525	0					
ANR	8211750	Callee	pl_characteristics		8209525	0					
ANR	8211751	Identifier	pl_characteristics		8209525	0					
ANR	8211752	ArgumentList	impls [ index ]		8209525	1					
ANR	8211753	Argument	impls [ index ]		8209525	0					
ANR	8211754	ArrayIndexing	impls [ index ]		8209525	0					
ANR	8211755	Identifier	impls		8209525	0					
ANR	8211756	Identifier	index		8209525	1					
ANR	8211757	Identifier	language		8209525	1					
ANR	8211758	ExpressionStatement	"dmprintf ( pmi -> memory , ""\\n"" )"	1153:24:42027:42054	8209525	2	True				
ANR	8211759	CallExpression	"dmprintf ( pmi -> memory , ""\\n"" )"		8209525	0					
ANR	8211760	Callee	dmprintf		8209525	0					
ANR	8211761	Identifier	dmprintf		8209525	0					
ANR	8211762	ArgumentList	pmi -> memory		8209525	1					
ANR	8211763	Argument	pmi -> memory		8209525	0					
ANR	8211764	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8211765	Identifier	pmi		8209525	0					
ANR	8211766	Identifier	memory		8209525	1					
ANR	8211767	Argument	"""\\n"""		8209525	1					
ANR	8211768	PrimaryExpression	"""\\n"""		8209525	0					
ANR	8211769	ReturnStatement	return - 1 ;	1154:24:42080:42089	8209525	3	True				
ANR	8211770	UnaryOperationExpression	- 1		8209525	0					
ANR	8211771	UnaryOperator	-		8209525	0					
ANR	8211772	PrimaryExpression	1		8209525	1					
ANR	8211773	BreakStatement	break ;	1156:20:42133:42138	8209525	4	True				
ANR	8211774	Label	case 'l' :	1158:12:42170:42178	8209525	37	True				
ANR	8211775	CompoundStatement		409:16:18702:18702	8209525	38					
ANR	8211776	IfStatement	"if ( ! strcmp ( arg , ""RTL"" ) || ! strcmp ( arg , ""PCL5E"" ) || ! strcmp ( arg , ""PCL5C"" ) )"		8209525	0					
ANR	8211777	Condition	"! strcmp ( arg , ""RTL"" ) || ! strcmp ( arg , ""PCL5E"" ) || ! strcmp ( arg , ""PCL5C"" )"	1160:24:42249:42341	8209525	0	True				
ANR	8211778	OrExpression	"! strcmp ( arg , ""RTL"" ) || ! strcmp ( arg , ""PCL5E"" ) || ! strcmp ( arg , ""PCL5C"" )"		8209525	0		||			
ANR	8211779	UnaryOperationExpression	"! strcmp ( arg , ""RTL"" )"		8209525	0					
ANR	8211780	UnaryOperator	!		8209525	0					
ANR	8211781	CallExpression	"strcmp ( arg , ""RTL"" )"		8209525	1					
ANR	8211782	Callee	strcmp		8209525	0					
ANR	8211783	Identifier	strcmp		8209525	0					
ANR	8211784	ArgumentList	arg		8209525	1					
ANR	8211785	Argument	arg		8209525	0					
ANR	8211786	Identifier	arg		8209525	0					
ANR	8211787	Argument	"""RTL"""		8209525	1					
ANR	8211788	PrimaryExpression	"""RTL"""		8209525	0					
ANR	8211789	OrExpression	"! strcmp ( arg , ""PCL5E"" ) || ! strcmp ( arg , ""PCL5C"" )"		8209525	1		||			
ANR	8211790	UnaryOperationExpression	"! strcmp ( arg , ""PCL5E"" )"		8209525	0					
ANR	8211791	UnaryOperator	!		8209525	0					
ANR	8211792	CallExpression	"strcmp ( arg , ""PCL5E"" )"		8209525	1					
ANR	8211793	Callee	strcmp		8209525	0					
ANR	8211794	Identifier	strcmp		8209525	0					
ANR	8211795	ArgumentList	arg		8209525	1					
ANR	8211796	Argument	arg		8209525	0					
ANR	8211797	Identifier	arg		8209525	0					
ANR	8211798	Argument	"""PCL5E"""		8209525	1					
ANR	8211799	PrimaryExpression	"""PCL5E"""		8209525	0					
ANR	8211800	UnaryOperationExpression	"! strcmp ( arg , ""PCL5C"" )"		8209525	1					
ANR	8211801	UnaryOperator	!		8209525	0					
ANR	8211802	CallExpression	"strcmp ( arg , ""PCL5C"" )"		8209525	1					
ANR	8211803	Callee	strcmp		8209525	0					
ANR	8211804	Identifier	strcmp		8209525	0					
ANR	8211805	ArgumentList	arg		8209525	1					
ANR	8211806	Argument	arg		8209525	0					
ANR	8211807	Identifier	arg		8209525	0					
ANR	8211808	Argument	"""PCL5C"""		8209525	1					
ANR	8211809	PrimaryExpression	"""PCL5C"""		8209525	0					
ANR	8211810	ExpressionStatement	"strcpy ( pmi -> pcl_personality , arg )"	1162:24:42368:42401	8209525	1	True				
ANR	8211811	CallExpression	"strcpy ( pmi -> pcl_personality , arg )"		8209525	0					
ANR	8211812	Callee	strcpy		8209525	0					
ANR	8211813	Identifier	strcpy		8209525	0					
ANR	8211814	ArgumentList	pmi -> pcl_personality		8209525	1					
ANR	8211815	Argument	pmi -> pcl_personality		8209525	0					
ANR	8211816	PtrMemberAccess	pmi -> pcl_personality		8209525	0					
ANR	8211817	Identifier	pmi		8209525	0					
ANR	8211818	Identifier	pcl_personality		8209525	1					
ANR	8211819	Argument	arg		8209525	1					
ANR	8211820	Identifier	arg		8209525	0					
ANR	8211821	ElseStatement	else		8209525	0					
ANR	8211822	ExpressionStatement	"dmprintf ( pmi -> memory , ""PCL personality must be RTL, PCL5E or PCL5C\\n"" )"	1164:24:42452:42555	8209525	0	True				
ANR	8211823	CallExpression	"dmprintf ( pmi -> memory , ""PCL personality must be RTL, PCL5E or PCL5C\\n"" )"		8209525	0					
ANR	8211824	Callee	dmprintf		8209525	0					
ANR	8211825	Identifier	dmprintf		8209525	0					
ANR	8211826	ArgumentList	pmi -> memory		8209525	1					
ANR	8211827	Argument	pmi -> memory		8209525	0					
ANR	8211828	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8211829	Identifier	pmi		8209525	0					
ANR	8211830	Identifier	memory		8209525	1					
ANR	8211831	Argument	"""PCL personality must be RTL, PCL5E or PCL5C\\n"""		8209525	1					
ANR	8211832	PrimaryExpression	"""PCL personality must be RTL, PCL5E or PCL5C\\n"""		8209525	0					
ANR	8211833	BreakStatement	break ;	1167:16:42591:42596	8209525	39	True				
ANR	8211834	Label	case 'r' :	1168:12:42610:42618	8209525	40	True				
ANR	8211835	CompoundStatement		423:20:19260:19313	8209525	41					
ANR	8211836	IdentifierDeclStatement	float res [ 2 ] ;	1170:20:42658:42670	8209525	0	True				
ANR	8211837	IdentifierDecl	res [ 2 ]		8209525	0					
ANR	8211838	IdentifierDeclType	float [ 2 ]		8209525	0					
ANR	8211839	Identifier	res		8209525	1					
ANR	8211840	PrimaryExpression	2		8209525	2					
ANR	8211841	IdentifierDeclStatement	gs_param_float_array fa ;	1171:20:42692:42715	8209525	1	True				
ANR	8211842	IdentifierDecl	fa		8209525	0					
ANR	8211843	IdentifierDeclType	gs_param_float_array		8209525	0					
ANR	8211844	Identifier	fa		8209525	1					
ANR	8211845	IdentifierDeclStatement	uint sz = countof ( res ) ;	1172:20:42737:42759	8209525	2	True				
ANR	8211846	IdentifierDecl	sz = countof ( res )		8209525	0					
ANR	8211847	IdentifierDeclType	uint		8209525	0					
ANR	8211848	Identifier	sz		8209525	1					
ANR	8211849	AssignmentExpression	sz = countof ( res )		8209525	2		=			
ANR	8211850	Identifier	sz		8209525	0					
ANR	8211851	CallExpression	countof ( res )		8209525	1					
ANR	8211852	Callee	countof		8209525	0					
ANR	8211853	Identifier	countof		8209525	0					
ANR	8211854	ArgumentList	res		8209525	1					
ANR	8211855	Argument	res		8209525	0					
ANR	8211856	Identifier	res		8209525	0					
ANR	8211857	IdentifierDeclStatement	"uint parsed = parse_floats ( pmi -> memory , sz , arg , res ) ;"	1173:20:42781:42834	8209525	3	True				
ANR	8211858	IdentifierDecl	"parsed = parse_floats ( pmi -> memory , sz , arg , res )"		8209525	0					
ANR	8211859	IdentifierDeclType	uint		8209525	0					
ANR	8211860	Identifier	parsed		8209525	1					
ANR	8211861	AssignmentExpression	"parsed = parse_floats ( pmi -> memory , sz , arg , res )"		8209525	2		=			
ANR	8211862	Identifier	parsed		8209525	0					
ANR	8211863	CallExpression	"parse_floats ( pmi -> memory , sz , arg , res )"		8209525	1					
ANR	8211864	Callee	parse_floats		8209525	0					
ANR	8211865	Identifier	parse_floats		8209525	0					
ANR	8211866	ArgumentList	pmi -> memory		8209525	1					
ANR	8211867	Argument	pmi -> memory		8209525	0					
ANR	8211868	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8211869	Identifier	pmi		8209525	0					
ANR	8211870	Identifier	memory		8209525	1					
ANR	8211871	Argument	sz		8209525	1					
ANR	8211872	Identifier	sz		8209525	0					
ANR	8211873	Argument	arg		8209525	2					
ANR	8211874	Identifier	arg		8209525	0					
ANR	8211875	Argument	res		8209525	3					
ANR	8211876	Identifier	res		8209525	0					
ANR	8211877	SwitchStatement	switch ( parsed )		8209525	4					
ANR	8211878	Condition	parsed	1174:28:42864:42869	8209525	0	True				
ANR	8211879	Identifier	parsed		8209525	0					
ANR	8211880	CompoundStatement		424:36:19351:19351	8209525	1					
ANR	8211881	Label	default :	1175:24:42898:42905	8209525	0	True				
ANR	8211882	Identifier	default		8209525	0					
ANR	8211883	ExpressionStatement	"dmprintf ( pmi -> memory , ""-r must be followed by <res> or <xres>x<yres>\\n"" )"	1176:28:42935:43044	8209525	1	True				
ANR	8211884	CallExpression	"dmprintf ( pmi -> memory , ""-r must be followed by <res> or <xres>x<yres>\\n"" )"		8209525	0					
ANR	8211885	Callee	dmprintf		8209525	0					
ANR	8211886	Identifier	dmprintf		8209525	0					
ANR	8211887	ArgumentList	pmi -> memory		8209525	1					
ANR	8211888	Argument	pmi -> memory		8209525	0					
ANR	8211889	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8211890	Identifier	pmi		8209525	0					
ANR	8211891	Identifier	memory		8209525	1					
ANR	8211892	Argument	"""-r must be followed by <res> or <xres>x<yres>\\n"""		8209525	1					
ANR	8211893	PrimaryExpression	"""-r must be followed by <res> or <xres>x<yres>\\n"""		8209525	0					
ANR	8211894	ReturnStatement	return - 1 ;	1178:28:43074:43083	8209525	2	True				
ANR	8211895	UnaryOperationExpression	- 1		8209525	0					
ANR	8211896	UnaryOperator	-		8209525	0					
ANR	8211897	PrimaryExpression	1		8209525	1					
ANR	8211898	Label	case 1 :	1179:24:43109:43115	8209525	3	True				
ANR	8211899	ExpressionStatement	res [ 1 ] = res [ 0 ]	1180:28:43166:43181	8209525	4	True				
ANR	8211900	AssignmentExpression	res [ 1 ] = res [ 0 ]		8209525	0		=			
ANR	8211901	ArrayIndexing	res [ 1 ]		8209525	0					
ANR	8211902	Identifier	res		8209525	0					
ANR	8211903	PrimaryExpression	1		8209525	1					
ANR	8211904	ArrayIndexing	res [ 0 ]		8209525	1					
ANR	8211905	Identifier	res		8209525	0					
ANR	8211906	PrimaryExpression	0		8209525	1					
ANR	8211907	Label	case 2 :	1181:24:43207:43213	8209525	5	True				
ANR	8211908	ExpressionStatement		1182:28:43272:43272	8209525	6	True				
ANR	8211909	ExpressionStatement	fa . data = res	1184:20:43316:43329	8209525	5	True				
ANR	8211910	AssignmentExpression	fa . data = res		8209525	0		=			
ANR	8211911	MemberAccess	fa . data		8209525	0					
ANR	8211912	Identifier	fa		8209525	0					
ANR	8211913	Identifier	data		8209525	1					
ANR	8211914	Identifier	res		8209525	1					
ANR	8211915	ExpressionStatement	fa . size = sz	1185:20:43351:43363	8209525	6	True				
ANR	8211916	AssignmentExpression	fa . size = sz		8209525	0		=			
ANR	8211917	MemberAccess	fa . size		8209525	0					
ANR	8211918	Identifier	fa		8209525	0					
ANR	8211919	Identifier	size		8209525	1					
ANR	8211920	Identifier	sz		8209525	1					
ANR	8211921	ExpressionStatement	fa . persistent = false	1186:20:43385:43406	8209525	7	True				
ANR	8211922	AssignmentExpression	fa . persistent = false		8209525	0		=			
ANR	8211923	MemberAccess	fa . persistent		8209525	0					
ANR	8211924	Identifier	fa		8209525	0					
ANR	8211925	Identifier	persistent		8209525	1					
ANR	8211926	Identifier	false		8209525	1					
ANR	8211927	ExpressionStatement	"code = param_write_float_array ( ( gs_param_list * ) params , ""HWResolution"" , & fa )"	1187:20:43428:43577	8209525	8	True				
ANR	8211928	AssignmentExpression	"code = param_write_float_array ( ( gs_param_list * ) params , ""HWResolution"" , & fa )"		8209525	0		=			
ANR	8211929	Identifier	code		8209525	0					
ANR	8211930	CallExpression	"param_write_float_array ( ( gs_param_list * ) params , ""HWResolution"" , & fa )"		8209525	1					
ANR	8211931	Callee	param_write_float_array		8209525	0					
ANR	8211932	Identifier	param_write_float_array		8209525	0					
ANR	8211933	ArgumentList	( gs_param_list * ) params		8209525	1					
ANR	8211934	Argument	( gs_param_list * ) params		8209525	0					
ANR	8211935	CastExpression	( gs_param_list * ) params		8209525	0					
ANR	8211936	CastTarget	gs_param_list *		8209525	0					
ANR	8211937	Identifier	params		8209525	1					
ANR	8211938	Argument	"""HWResolution"""		8209525	1					
ANR	8211939	PrimaryExpression	"""HWResolution"""		8209525	0					
ANR	8211940	Argument	& fa		8209525	2					
ANR	8211941	UnaryOperationExpression	& fa		8209525	0					
ANR	8211942	UnaryOperator	&		8209525	0					
ANR	8211943	Identifier	fa		8209525	1					
ANR	8211944	IfStatement	if ( code == 0 )		8209525	9					
ANR	8211945	Condition	code == 0	1190:24:43603:43611	8209525	0	True				
ANR	8211946	EqualityExpression	code == 0		8209525	0		==			
ANR	8211947	Identifier	code		8209525	0					
ANR	8211948	PrimaryExpression	0		8209525	1					
ANR	8211949	ExpressionStatement	pmi -> res_set_on_command_line = true	1191:24:43638:43673	8209525	1	True				
ANR	8211950	AssignmentExpression	pmi -> res_set_on_command_line = true		8209525	0		=			
ANR	8211951	PtrMemberAccess	pmi -> res_set_on_command_line		8209525	0					
ANR	8211952	Identifier	pmi		8209525	0					
ANR	8211953	Identifier	res_set_on_command_line		8209525	1					
ANR	8211954	Identifier	true		8209525	1					
ANR	8211955	BreakStatement	break ;	1193:16:43709:43714	8209525	42	True				
ANR	8211956	Label	case 's' :	1194:12:43728:43736	8209525	43	True				
ANR	8211957	Label	case 'S' :	1195:12:43750:43758	8209525	44	True				
ANR	8211958	CompoundStatement		449:20:20421:20440	8209525	45					
ANR	8211959	IdentifierDeclStatement	char * eqp ;	1197:20:43872:43881	8209525	0	True				
ANR	8211960	IdentifierDecl	* eqp		8209525	0					
ANR	8211961	IdentifierDeclType	char *		8209525	0					
ANR	8211962	Identifier	eqp		8209525	1					
ANR	8211963	IdentifierDeclStatement	const char * value ;	1198:20:43903:43920	8209525	1	True				
ANR	8211964	IdentifierDecl	* value		8209525	0					
ANR	8211965	IdentifierDeclType	const char *		8209525	0					
ANR	8211966	Identifier	value		8209525	1					
ANR	8211967	IdentifierDeclStatement	gs_param_string str ;	1199:20:43942:43961	8209525	2	True				
ANR	8211968	IdentifierDecl	str		8209525	0					
ANR	8211969	IdentifierDeclType	gs_param_string		8209525	0					
ANR	8211970	Identifier	str		8209525	1					
ANR	8211971	ExpressionStatement	"eqp = strchr ( arg , '=' )"	1201:20:43984:44006	8209525	3	True				
ANR	8211972	AssignmentExpression	"eqp = strchr ( arg , '=' )"		8209525	0		=			
ANR	8211973	Identifier	eqp		8209525	0					
ANR	8211974	CallExpression	"strchr ( arg , '=' )"		8209525	1					
ANR	8211975	Callee	strchr		8209525	0					
ANR	8211976	Identifier	strchr		8209525	0					
ANR	8211977	ArgumentList	arg		8209525	1					
ANR	8211978	Argument	arg		8209525	0					
ANR	8211979	Identifier	arg		8209525	0					
ANR	8211980	Argument	'='		8209525	1					
ANR	8211981	PrimaryExpression	'='		8209525	0					
ANR	8211982	IfStatement	"if ( ! ( eqp || ( eqp = strchr ( arg , '#' ) ) ) )"		8209525	4					
ANR	8211983	Condition	"! ( eqp || ( eqp = strchr ( arg , '#' ) ) )"	1202:24:44032:44065	8209525	0	True				
ANR	8211984	UnaryOperationExpression	"! ( eqp || ( eqp = strchr ( arg , '#' ) ) )"		8209525	0					
ANR	8211985	UnaryOperator	!		8209525	0					
ANR	8211986	OrExpression	"eqp || ( eqp = strchr ( arg , '#' ) )"		8209525	1		||			
ANR	8211987	Identifier	eqp		8209525	0					
ANR	8211988	AssignmentExpression	"eqp = strchr ( arg , '#' )"		8209525	1		=			
ANR	8211989	Identifier	eqp		8209525	0					
ANR	8211990	CallExpression	"strchr ( arg , '#' )"		8209525	1					
ANR	8211991	Callee	strchr		8209525	0					
ANR	8211992	Identifier	strchr		8209525	0					
ANR	8211993	ArgumentList	arg		8209525	1					
ANR	8211994	Argument	arg		8209525	0					
ANR	8211995	Identifier	arg		8209525	0					
ANR	8211996	Argument	'#'		8209525	1					
ANR	8211997	PrimaryExpression	'#'		8209525	0					
ANR	8211998	CompoundStatement		452:60:20547:20547	8209525	1					
ANR	8211999	ExpressionStatement	"dmprintf ( pmi -> memory , ""Usage for -s is -s<option>=<string>\\n"" )"	1203:24:44094:44189	8209525	0	True				
ANR	8212000	CallExpression	"dmprintf ( pmi -> memory , ""Usage for -s is -s<option>=<string>\\n"" )"		8209525	0					
ANR	8212001	Callee	dmprintf		8209525	0					
ANR	8212002	Identifier	dmprintf		8209525	0					
ANR	8212003	ArgumentList	pmi -> memory		8209525	1					
ANR	8212004	Argument	pmi -> memory		8209525	0					
ANR	8212005	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8212006	Identifier	pmi		8209525	0					
ANR	8212007	Identifier	memory		8209525	1					
ANR	8212008	Argument	"""Usage for -s is -s<option>=<string>\\n"""		8209525	1					
ANR	8212009	PrimaryExpression	"""Usage for -s is -s<option>=<string>\\n"""		8209525	0					
ANR	8212010	ReturnStatement	return - 1 ;	1205:24:44215:44224	8209525	1	True				
ANR	8212011	UnaryOperationExpression	- 1		8209525	0					
ANR	8212012	UnaryOperator	-		8209525	0					
ANR	8212013	PrimaryExpression	1		8209525	1					
ANR	8212014	ExpressionStatement	value = eqp + 1	1207:20:44268:44283	8209525	5	True				
ANR	8212015	AssignmentExpression	value = eqp + 1		8209525	0		=			
ANR	8212016	Identifier	value		8209525	0					
ANR	8212017	AdditiveExpression	eqp + 1		8209525	1		+			
ANR	8212018	Identifier	eqp		8209525	0					
ANR	8212019	PrimaryExpression	1		8209525	1					
ANR	8212020	IfStatement	"if ( ! strncmp ( arg , ""DEVICE"" , 6 ) )"		8209525	6					
ANR	8212021	Condition	"! strncmp ( arg , ""DEVICE"" , 6 )"	1208:24:44309:44334	8209525	0	True				
ANR	8212022	UnaryOperationExpression	"! strncmp ( arg , ""DEVICE"" , 6 )"		8209525	0					
ANR	8212023	UnaryOperator	!		8209525	0					
ANR	8212024	CallExpression	"strncmp ( arg , ""DEVICE"" , 6 )"		8209525	1					
ANR	8212025	Callee	strncmp		8209525	0					
ANR	8212026	Identifier	strncmp		8209525	0					
ANR	8212027	ArgumentList	arg		8209525	1					
ANR	8212028	Argument	arg		8209525	0					
ANR	8212029	Identifier	arg		8209525	0					
ANR	8212030	Argument	"""DEVICE"""		8209525	1					
ANR	8212031	PrimaryExpression	"""DEVICE"""		8209525	0					
ANR	8212032	Argument	6		8209525	2					
ANR	8212033	PrimaryExpression	6		8209525	0					
ANR	8212034	CompoundStatement		458:52:20816:20816	8209525	1					
ANR	8212035	ExpressionStatement	"code = pl_top_create_device ( pmi , get_device_index ( pmi -> memory , value ) , false )"	1209:24:44363:44699	8209525	0	True				
ANR	8212036	AssignmentExpression	"code = pl_top_create_device ( pmi , get_device_index ( pmi -> memory , value ) , false )"		8209525	0		=			
ANR	8212037	Identifier	code		8209525	0					
ANR	8212038	CallExpression	"pl_top_create_device ( pmi , get_device_index ( pmi -> memory , value ) , false )"		8209525	1					
ANR	8212039	Callee	pl_top_create_device		8209525	0					
ANR	8212040	Identifier	pl_top_create_device		8209525	0					
ANR	8212041	ArgumentList	pmi		8209525	1					
ANR	8212042	Argument	pmi		8209525	0					
ANR	8212043	Identifier	pmi		8209525	0					
ANR	8212044	Argument	"get_device_index ( pmi -> memory , value )"		8209525	1					
ANR	8212045	CallExpression	"get_device_index ( pmi -> memory , value )"		8209525	0					
ANR	8212046	Callee	get_device_index		8209525	0					
ANR	8212047	Identifier	get_device_index		8209525	0					
ANR	8212048	ArgumentList	pmi -> memory		8209525	1					
ANR	8212049	Argument	pmi -> memory		8209525	0					
ANR	8212050	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8212051	Identifier	pmi		8209525	0					
ANR	8212052	Identifier	memory		8209525	1					
ANR	8212053	Argument	value		8209525	1					
ANR	8212054	Identifier	value		8209525	0					
ANR	8212055	Argument	false		8209525	2					
ANR	8212056	Identifier	false		8209525	0					
ANR	8212057	ElseStatement	else		8209525	0					
ANR	8212058	IfStatement	"if ( ! strncmp ( arg , ""DefaultGrayProfile"" , strlen ( ""DefaultGrayProfile"" ) ) )"		8209525	0					
ANR	8212059	Condition	"! strncmp ( arg , ""DefaultGrayProfile"" , strlen ( ""DefaultGrayProfile"" ) )"	1217:28:44810:44932	8209525	0	True				
ANR	8212060	UnaryOperationExpression	"! strncmp ( arg , ""DefaultGrayProfile"" , strlen ( ""DefaultGrayProfile"" ) )"		8209525	0					
ANR	8212061	UnaryOperator	!		8209525	0					
ANR	8212062	CallExpression	"strncmp ( arg , ""DefaultGrayProfile"" , strlen ( ""DefaultGrayProfile"" ) )"		8209525	1					
ANR	8212063	Callee	strncmp		8209525	0					
ANR	8212064	Identifier	strncmp		8209525	0					
ANR	8212065	ArgumentList	arg		8209525	1					
ANR	8212066	Argument	arg		8209525	0					
ANR	8212067	Identifier	arg		8209525	0					
ANR	8212068	Argument	"""DefaultGrayProfile"""		8209525	1					
ANR	8212069	PrimaryExpression	"""DefaultGrayProfile"""		8209525	0					
ANR	8212070	Argument	"strlen ( ""DefaultGrayProfile"" )"		8209525	2					
ANR	8212071	CallExpression	"strlen ( ""DefaultGrayProfile"" )"		8209525	0					
ANR	8212072	Callee	strlen		8209525	0					
ANR	8212073	Identifier	strlen		8209525	0					
ANR	8212074	ArgumentList	"""DefaultGrayProfile"""		8209525	1					
ANR	8212075	Argument	"""DefaultGrayProfile"""		8209525	0					
ANR	8212076	PrimaryExpression	"""DefaultGrayProfile"""		8209525	0					
ANR	8212077	CompoundStatement		469:60:21414:21414	8209525	1					
ANR	8212078	ExpressionStatement	"pmi -> pdefault_gray_icc = arg_copy ( value , pmi -> memory )"	1220:24:44961:45014	8209525	0	True				
ANR	8212079	AssignmentExpression	"pmi -> pdefault_gray_icc = arg_copy ( value , pmi -> memory )"		8209525	0		=			
ANR	8212080	PtrMemberAccess	pmi -> pdefault_gray_icc		8209525	0					
ANR	8212081	Identifier	pmi		8209525	0					
ANR	8212082	Identifier	pdefault_gray_icc		8209525	1					
ANR	8212083	CallExpression	"arg_copy ( value , pmi -> memory )"		8209525	1					
ANR	8212084	Callee	arg_copy		8209525	0					
ANR	8212085	Identifier	arg_copy		8209525	0					
ANR	8212086	ArgumentList	value		8209525	1					
ANR	8212087	Argument	value		8209525	0					
ANR	8212088	Identifier	value		8209525	0					
ANR	8212089	Argument	pmi -> memory		8209525	1					
ANR	8212090	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8212091	Identifier	pmi		8209525	0					
ANR	8212092	Identifier	memory		8209525	1					
ANR	8212093	ElseStatement	else		8209525	0					
ANR	8212094	IfStatement	"if ( ! strncmp ( arg , ""DefaultRGBProfile"" , strlen ( ""DefaultRGBProfile"" ) ) )"		8209525	0					
ANR	8212095	Condition	"! strncmp ( arg , ""DefaultRGBProfile"" , strlen ( ""DefaultRGBProfile"" ) )"	1222:28:45071:45191	8209525	0	True				
ANR	8212096	UnaryOperationExpression	"! strncmp ( arg , ""DefaultRGBProfile"" , strlen ( ""DefaultRGBProfile"" ) )"		8209525	0					
ANR	8212097	UnaryOperator	!		8209525	0					
ANR	8212098	CallExpression	"strncmp ( arg , ""DefaultRGBProfile"" , strlen ( ""DefaultRGBProfile"" ) )"		8209525	1					
ANR	8212099	Callee	strncmp		8209525	0					
ANR	8212100	Identifier	strncmp		8209525	0					
ANR	8212101	ArgumentList	arg		8209525	1					
ANR	8212102	Argument	arg		8209525	0					
ANR	8212103	Identifier	arg		8209525	0					
ANR	8212104	Argument	"""DefaultRGBProfile"""		8209525	1					
ANR	8212105	PrimaryExpression	"""DefaultRGBProfile"""		8209525	0					
ANR	8212106	Argument	"strlen ( ""DefaultRGBProfile"" )"		8209525	2					
ANR	8212107	CallExpression	"strlen ( ""DefaultRGBProfile"" )"		8209525	0					
ANR	8212108	Callee	strlen		8209525	0					
ANR	8212109	Identifier	strlen		8209525	0					
ANR	8212110	ArgumentList	"""DefaultRGBProfile"""		8209525	1					
ANR	8212111	Argument	"""DefaultRGBProfile"""		8209525	0					
ANR	8212112	PrimaryExpression	"""DefaultRGBProfile"""		8209525	0					
ANR	8212113	CompoundStatement		474:59:21673:21673	8209525	1					
ANR	8212114	ExpressionStatement	"pmi -> pdefault_rgb_icc = arg_copy ( value , pmi -> memory )"	1225:24:45220:45272	8209525	0	True				
ANR	8212115	AssignmentExpression	"pmi -> pdefault_rgb_icc = arg_copy ( value , pmi -> memory )"		8209525	0		=			
ANR	8212116	PtrMemberAccess	pmi -> pdefault_rgb_icc		8209525	0					
ANR	8212117	Identifier	pmi		8209525	0					
ANR	8212118	Identifier	pdefault_rgb_icc		8209525	1					
ANR	8212119	CallExpression	"arg_copy ( value , pmi -> memory )"		8209525	1					
ANR	8212120	Callee	arg_copy		8209525	0					
ANR	8212121	Identifier	arg_copy		8209525	0					
ANR	8212122	ArgumentList	value		8209525	1					
ANR	8212123	Argument	value		8209525	0					
ANR	8212124	Identifier	value		8209525	0					
ANR	8212125	Argument	pmi -> memory		8209525	1					
ANR	8212126	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8212127	Identifier	pmi		8209525	0					
ANR	8212128	Identifier	memory		8209525	1					
ANR	8212129	ElseStatement	else		8209525	0					
ANR	8212130	IfStatement	"if ( ! strncmp ( arg , ""DefaultCMYKProfile"" , strlen ( ""DefaultCMYKProfile"" ) ) )"		8209525	0					
ANR	8212131	Condition	"! strncmp ( arg , ""DefaultCMYKProfile"" , strlen ( ""DefaultCMYKProfile"" ) )"	1227:28:45329:45451	8209525	0	True				
ANR	8212132	UnaryOperationExpression	"! strncmp ( arg , ""DefaultCMYKProfile"" , strlen ( ""DefaultCMYKProfile"" ) )"		8209525	0					
ANR	8212133	UnaryOperator	!		8209525	0					
ANR	8212134	CallExpression	"strncmp ( arg , ""DefaultCMYKProfile"" , strlen ( ""DefaultCMYKProfile"" ) )"		8209525	1					
ANR	8212135	Callee	strncmp		8209525	0					
ANR	8212136	Identifier	strncmp		8209525	0					
ANR	8212137	ArgumentList	arg		8209525	1					
ANR	8212138	Argument	arg		8209525	0					
ANR	8212139	Identifier	arg		8209525	0					
ANR	8212140	Argument	"""DefaultCMYKProfile"""		8209525	1					
ANR	8212141	PrimaryExpression	"""DefaultCMYKProfile"""		8209525	0					
ANR	8212142	Argument	"strlen ( ""DefaultCMYKProfile"" )"		8209525	2					
ANR	8212143	CallExpression	"strlen ( ""DefaultCMYKProfile"" )"		8209525	0					
ANR	8212144	Callee	strlen		8209525	0					
ANR	8212145	Identifier	strlen		8209525	0					
ANR	8212146	ArgumentList	"""DefaultCMYKProfile"""		8209525	1					
ANR	8212147	Argument	"""DefaultCMYKProfile"""		8209525	0					
ANR	8212148	PrimaryExpression	"""DefaultCMYKProfile"""		8209525	0					
ANR	8212149	CompoundStatement		479:60:21933:21933	8209525	1					
ANR	8212150	ExpressionStatement	"pmi -> pdefault_cmyk_icc = arg_copy ( value , pmi -> memory )"	1230:24:45480:45533	8209525	0	True				
ANR	8212151	AssignmentExpression	"pmi -> pdefault_cmyk_icc = arg_copy ( value , pmi -> memory )"		8209525	0		=			
ANR	8212152	PtrMemberAccess	pmi -> pdefault_cmyk_icc		8209525	0					
ANR	8212153	Identifier	pmi		8209525	0					
ANR	8212154	Identifier	pdefault_cmyk_icc		8209525	1					
ANR	8212155	CallExpression	"arg_copy ( value , pmi -> memory )"		8209525	1					
ANR	8212156	Callee	arg_copy		8209525	0					
ANR	8212157	Identifier	arg_copy		8209525	0					
ANR	8212158	ArgumentList	value		8209525	1					
ANR	8212159	Argument	value		8209525	0					
ANR	8212160	Identifier	value		8209525	0					
ANR	8212161	Argument	pmi -> memory		8209525	1					
ANR	8212162	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8212163	Identifier	pmi		8209525	0					
ANR	8212164	Identifier	memory		8209525	1					
ANR	8212165	ElseStatement	else		8209525	0					
ANR	8212166	IfStatement	"if ( ! strncmp ( arg , ""ICCProfileDir"" , strlen ( ""ICCProfileDir"" ) ) )"		8209525	0					
ANR	8212167	Condition	"! strncmp ( arg , ""ICCProfileDir"" , strlen ( ""ICCProfileDir"" ) )"	1232:28:45590:45673	8209525	0	True				
ANR	8212168	UnaryOperationExpression	"! strncmp ( arg , ""ICCProfileDir"" , strlen ( ""ICCProfileDir"" ) )"		8209525	0					
ANR	8212169	UnaryOperator	!		8209525	0					
ANR	8212170	CallExpression	"strncmp ( arg , ""ICCProfileDir"" , strlen ( ""ICCProfileDir"" ) )"		8209525	1					
ANR	8212171	Callee	strncmp		8209525	0					
ANR	8212172	Identifier	strncmp		8209525	0					
ANR	8212173	ArgumentList	arg		8209525	1					
ANR	8212174	Argument	arg		8209525	0					
ANR	8212175	Identifier	arg		8209525	0					
ANR	8212176	Argument	"""ICCProfileDir"""		8209525	1					
ANR	8212177	PrimaryExpression	"""ICCProfileDir"""		8209525	0					
ANR	8212178	Argument	"strlen ( ""ICCProfileDir"" )"		8209525	2					
ANR	8212179	CallExpression	"strlen ( ""ICCProfileDir"" )"		8209525	0					
ANR	8212180	Callee	strlen		8209525	0					
ANR	8212181	Identifier	strlen		8209525	0					
ANR	8212182	ArgumentList	"""ICCProfileDir"""		8209525	1					
ANR	8212183	Argument	"""ICCProfileDir"""		8209525	0					
ANR	8212184	PrimaryExpression	"""ICCProfileDir"""		8209525	0					
ANR	8212185	CompoundStatement		483:77:22155:22155	8209525	1					
ANR	8212186	ExpressionStatement	"pmi -> piccdir = arg_copy ( value , pmi -> memory )"	1234:24:45702:45745	8209525	0	True				
ANR	8212187	AssignmentExpression	"pmi -> piccdir = arg_copy ( value , pmi -> memory )"		8209525	0		=			
ANR	8212188	PtrMemberAccess	pmi -> piccdir		8209525	0					
ANR	8212189	Identifier	pmi		8209525	0					
ANR	8212190	Identifier	piccdir		8209525	1					
ANR	8212191	CallExpression	"arg_copy ( value , pmi -> memory )"		8209525	1					
ANR	8212192	Callee	arg_copy		8209525	0					
ANR	8212193	Identifier	arg_copy		8209525	0					
ANR	8212194	ArgumentList	value		8209525	1					
ANR	8212195	Argument	value		8209525	0					
ANR	8212196	Identifier	value		8209525	0					
ANR	8212197	Argument	pmi -> memory		8209525	1					
ANR	8212198	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8212199	Identifier	pmi		8209525	0					
ANR	8212200	Identifier	memory		8209525	1					
ANR	8212201	ElseStatement	else		8209525	0					
ANR	8212202	CompoundStatement		486:24:22279:22295	8209525	0					
ANR	8212203	IdentifierDeclStatement	char buffer [ 128 ] ;	1236:24:45800:45816	8209525	0	True				
ANR	8212204	IdentifierDecl	buffer [ 128 ]		8209525	0					
ANR	8212205	IdentifierDeclType	char [ 128 ]		8209525	0					
ANR	8212206	Identifier	buffer		8209525	1					
ANR	8212207	PrimaryExpression	128		8209525	2					
ANR	8212208	ExpressionStatement	"strncpy ( buffer , arg , eqp - arg )"	1238:24:45843:45874	8209525	1	True				
ANR	8212209	CallExpression	"strncpy ( buffer , arg , eqp - arg )"		8209525	0					
ANR	8212210	Callee	strncpy		8209525	0					
ANR	8212211	Identifier	strncpy		8209525	0					
ANR	8212212	ArgumentList	buffer		8209525	1					
ANR	8212213	Argument	buffer		8209525	0					
ANR	8212214	Identifier	buffer		8209525	0					
ANR	8212215	Argument	arg		8209525	1					
ANR	8212216	Identifier	arg		8209525	0					
ANR	8212217	Argument	eqp - arg		8209525	2					
ANR	8212218	AdditiveExpression	eqp - arg		8209525	0		-			
ANR	8212219	Identifier	eqp		8209525	0					
ANR	8212220	Identifier	arg		8209525	1					
ANR	8212221	ExpressionStatement	buffer [ eqp - arg ] = '\\0'	1239:24:45900:45924	8209525	2	True				
ANR	8212222	AssignmentExpression	buffer [ eqp - arg ] = '\\0'		8209525	0		=			
ANR	8212223	ArrayIndexing	buffer [ eqp - arg ]		8209525	0					
ANR	8212224	Identifier	buffer		8209525	0					
ANR	8212225	AdditiveExpression	eqp - arg		8209525	1		-			
ANR	8212226	Identifier	eqp		8209525	0					
ANR	8212227	Identifier	arg		8209525	1					
ANR	8212228	PrimaryExpression	'\\0'		8209525	1					
ANR	8212229	ExpressionStatement	"param_string_from_transient_string ( str , value )"	1240:24:45950:45996	8209525	3	True				
ANR	8212230	CallExpression	"param_string_from_transient_string ( str , value )"		8209525	0					
ANR	8212231	Callee	param_string_from_transient_string		8209525	0					
ANR	8212232	Identifier	param_string_from_transient_string		8209525	0					
ANR	8212233	ArgumentList	str		8209525	1					
ANR	8212234	Argument	str		8209525	0					
ANR	8212235	Identifier	str		8209525	0					
ANR	8212236	Argument	value		8209525	1					
ANR	8212237	Identifier	value		8209525	0					
ANR	8212238	ExpressionStatement	"code = param_write_string ( ( gs_param_list * ) params , buffer , & str )"	1241:24:46022:46162	8209525	4	True				
ANR	8212239	AssignmentExpression	"code = param_write_string ( ( gs_param_list * ) params , buffer , & str )"		8209525	0		=			
ANR	8212240	Identifier	code		8209525	0					
ANR	8212241	CallExpression	"param_write_string ( ( gs_param_list * ) params , buffer , & str )"		8209525	1					
ANR	8212242	Callee	param_write_string		8209525	0					
ANR	8212243	Identifier	param_write_string		8209525	0					
ANR	8212244	ArgumentList	( gs_param_list * ) params		8209525	1					
ANR	8212245	Argument	( gs_param_list * ) params		8209525	0					
ANR	8212246	CastExpression	( gs_param_list * ) params		8209525	0					
ANR	8212247	CastTarget	gs_param_list *		8209525	0					
ANR	8212248	Identifier	params		8209525	1					
ANR	8212249	Argument	buffer		8209525	1					
ANR	8212250	Identifier	buffer		8209525	0					
ANR	8212251	Argument	& str		8209525	2					
ANR	8212252	UnaryOperationExpression	& str		8209525	0					
ANR	8212253	UnaryOperator	&		8209525	0					
ANR	8212254	Identifier	str		8209525	1					
ANR	8212255	BreakStatement	break ;	1246:16:46220:46225	8209525	46	True				
ANR	8212256	Label	case 'Z' :	1247:12:46239:46247	8209525	47	True				
ANR	8212257	ExpressionStatement	"set_debug_flags ( arg , gs_debug )"	1248:16:46265:46295	8209525	48	True				
ANR	8212258	CallExpression	"set_debug_flags ( arg , gs_debug )"		8209525	0					
ANR	8212259	Callee	set_debug_flags		8209525	0					
ANR	8212260	Identifier	set_debug_flags		8209525	0					
ANR	8212261	ArgumentList	arg		8209525	1					
ANR	8212262	Argument	arg		8209525	0					
ANR	8212263	Identifier	arg		8209525	0					
ANR	8212264	Argument	gs_debug		8209525	1					
ANR	8212265	Identifier	gs_debug		8209525	0					
ANR	8212266	BreakStatement	break ;	1249:16:46313:46318	8209525	49	True				
ANR	8212267	IfStatement	if ( code < 0 )		8209525	3					
ANR	8212268	Condition	code < 0	1251:12:46342:46349	8209525	0	True				
ANR	8212269	RelationalExpression	code < 0		8209525	0		<			
ANR	8212270	Identifier	code		8209525	0					
ANR	8212271	PrimaryExpression	0		8209525	1					
ANR	8212272	ReturnStatement	return code ;	1252:12:46364:46375	8209525	1	True				
ANR	8212273	Identifier	code		8209525	0					
ANR	8212274	Label	out :	1254:2:46385:46388	8209525	6	True				
ANR	8212275	Identifier	out		8209525	0					
ANR	8212276	IfStatement	if ( help )		8209525	7					
ANR	8212277	Condition	help	1254:10:46393:46396	8209525	0	True				
ANR	8212278	Identifier	help		8209525	0					
ANR	8212279	CompoundStatement		504:16:22878:22878	8209525	1					
ANR	8212280	ExpressionStatement	arg_finit ( pal )	1255:8:46409:46423	8209525	0	True				
ANR	8212281	CallExpression	arg_finit ( pal )		8209525	0					
ANR	8212282	Callee	arg_finit		8209525	0					
ANR	8212283	Identifier	arg_finit		8209525	0					
ANR	8212284	ArgumentList	pal		8209525	1					
ANR	8212285	Argument	pal		8209525	0					
ANR	8212286	Identifier	pal		8209525	0					
ANR	8212287	ExpressionStatement	gs_c_param_list_release ( params )	1256:8:46433:46464	8209525	1	True				
ANR	8212288	CallExpression	gs_c_param_list_release ( params )		8209525	0					
ANR	8212289	Callee	gs_c_param_list_release		8209525	0					
ANR	8212290	Identifier	gs_c_param_list_release		8209525	0					
ANR	8212291	ArgumentList	params		8209525	1					
ANR	8212292	Argument	params		8209525	0					
ANR	8212293	Identifier	params		8209525	0					
ANR	8212294	ReturnStatement	return - 1 ;	1257:8:46474:46483	8209525	2	True				
ANR	8212295	UnaryOperationExpression	- 1		8209525	0					
ANR	8212296	UnaryOperator	-		8209525	0					
ANR	8212297	PrimaryExpression	1		8209525	1					
ANR	8212298	CompoundStatement		515:8:23263:23280	8209525	8					
ANR	8212299	IdentifierDeclStatement	int num_spots = 0 ;	1265:8:46784:46801	8209525	0	True				
ANR	8212300	IdentifierDecl	num_spots = 0		8209525	0					
ANR	8212301	IdentifierDeclType	int		8209525	0					
ANR	8212302	Identifier	num_spots		8209525	1					
ANR	8212303	AssignmentExpression	num_spots = 0		8209525	2		=			
ANR	8212304	Identifier	num_spots		8209525	0					
ANR	8212305	PrimaryExpression	0		8209525	1					
ANR	8212306	ExpressionStatement	"code = param_write_int ( ( gs_param_list * ) params , ""PageSpotColors"" , & ( num_spots ) )"	1266:8:46811:46890	8209525	1	True				
ANR	8212307	AssignmentExpression	"code = param_write_int ( ( gs_param_list * ) params , ""PageSpotColors"" , & ( num_spots ) )"		8209525	0		=			
ANR	8212308	Identifier	code		8209525	0					
ANR	8212309	CallExpression	"param_write_int ( ( gs_param_list * ) params , ""PageSpotColors"" , & ( num_spots ) )"		8209525	1					
ANR	8212310	Callee	param_write_int		8209525	0					
ANR	8212311	Identifier	param_write_int		8209525	0					
ANR	8212312	ArgumentList	( gs_param_list * ) params		8209525	1					
ANR	8212313	Argument	( gs_param_list * ) params		8209525	0					
ANR	8212314	CastExpression	( gs_param_list * ) params		8209525	0					
ANR	8212315	CastTarget	gs_param_list *		8209525	0					
ANR	8212316	Identifier	params		8209525	1					
ANR	8212317	Argument	"""PageSpotColors"""		8209525	1					
ANR	8212318	PrimaryExpression	"""PageSpotColors"""		8209525	0					
ANR	8212319	Argument	& ( num_spots )		8209525	2					
ANR	8212320	UnaryOperationExpression	& ( num_spots )		8209525	0					
ANR	8212321	UnaryOperator	&		8209525	0					
ANR	8212322	Identifier	num_spots		8209525	1					
ANR	8212323	IfStatement	if ( code < 0 )		8209525	2					
ANR	8212324	Condition	code < 0	1267:12:46904:46911	8209525	0	True				
ANR	8212325	RelationalExpression	code < 0		8209525	0		<			
ANR	8212326	Identifier	code		8209525	0					
ANR	8212327	PrimaryExpression	0		8209525	1					
ANR	8212328	ReturnStatement	return code ;	1268:12:46926:46937	8209525	1	True				
ANR	8212329	Identifier	code		8209525	0					
ANR	8212330	ExpressionStatement	gs_c_param_list_read ( params )	1271:4:46950:46978	8209525	9	True				
ANR	8212331	CallExpression	gs_c_param_list_read ( params )		8209525	0					
ANR	8212332	Callee	gs_c_param_list_read		8209525	0					
ANR	8212333	Identifier	gs_c_param_list_read		8209525	0					
ANR	8212334	ArgumentList	params		8209525	1					
ANR	8212335	Argument	params		8209525	0					
ANR	8212336	Identifier	params		8209525	0					
ANR	8212337	ExpressionStatement	"code = pl_top_create_device ( pmi , - 1 , true )"	1272:4:46984:47026	8209525	10	True				
ANR	8212338	AssignmentExpression	"code = pl_top_create_device ( pmi , - 1 , true )"		8209525	0		=			
ANR	8212339	Identifier	code		8209525	0					
ANR	8212340	CallExpression	"pl_top_create_device ( pmi , - 1 , true )"		8209525	1					
ANR	8212341	Callee	pl_top_create_device		8209525	0					
ANR	8212342	Identifier	pl_top_create_device		8209525	0					
ANR	8212343	ArgumentList	pmi		8209525	1					
ANR	8212344	Argument	pmi		8209525	0					
ANR	8212345	Identifier	pmi		8209525	0					
ANR	8212346	Argument	- 1		8209525	1					
ANR	8212347	UnaryOperationExpression	- 1		8209525	0					
ANR	8212348	UnaryOperator	-		8209525	0					
ANR	8212349	PrimaryExpression	1		8209525	1					
ANR	8212350	Argument	true		8209525	2					
ANR	8212351	Identifier	true		8209525	0					
ANR	8212352	IfStatement	if ( code < 0 )		8209525	11					
ANR	8212353	Condition	code < 0	1273:8:47074:47081	8209525	0	True				
ANR	8212354	RelationalExpression	code < 0		8209525	0		<			
ANR	8212355	Identifier	code		8209525	0					
ANR	8212356	PrimaryExpression	0		8209525	1					
ANR	8212357	ReturnStatement	return code ;	1274:8:47092:47103	8209525	1	True				
ANR	8212358	Identifier	code		8209525	0					
ANR	8212359	ExpressionStatement	"code = gs_putdeviceparams ( pmi -> device , ( gs_param_list * ) params )"	1276:4:47110:47174	8209525	12	True				
ANR	8212360	AssignmentExpression	"code = gs_putdeviceparams ( pmi -> device , ( gs_param_list * ) params )"		8209525	0		=			
ANR	8212361	Identifier	code		8209525	0					
ANR	8212362	CallExpression	"gs_putdeviceparams ( pmi -> device , ( gs_param_list * ) params )"		8209525	1					
ANR	8212363	Callee	gs_putdeviceparams		8209525	0					
ANR	8212364	Identifier	gs_putdeviceparams		8209525	0					
ANR	8212365	ArgumentList	pmi -> device		8209525	1					
ANR	8212366	Argument	pmi -> device		8209525	0					
ANR	8212367	PtrMemberAccess	pmi -> device		8209525	0					
ANR	8212368	Identifier	pmi		8209525	0					
ANR	8212369	Identifier	device		8209525	1					
ANR	8212370	Argument	( gs_param_list * ) params		8209525	1					
ANR	8212371	CastExpression	( gs_param_list * ) params		8209525	0					
ANR	8212372	CastTarget	gs_param_list *		8209525	0					
ANR	8212373	Identifier	params		8209525	1					
ANR	8212374	IfStatement	if ( code < 0 )		8209525	13					
ANR	8212375	Condition	code < 0	1277:8:47184:47191	8209525	0	True				
ANR	8212376	RelationalExpression	code < 0		8209525	0		<			
ANR	8212377	Identifier	code		8209525	0					
ANR	8212378	PrimaryExpression	0		8209525	1					
ANR	8212379	ReturnStatement	return code ;	1278:8:47202:47213	8209525	1	True				
ANR	8212380	Identifier	code		8209525	0					
ANR	8212381	ExpressionStatement	code = gs_opendevice ( pmi -> device )	1280:4:47220:47253	8209525	14	True				
ANR	8212382	AssignmentExpression	code = gs_opendevice ( pmi -> device )		8209525	0		=			
ANR	8212383	Identifier	code		8209525	0					
ANR	8212384	CallExpression	gs_opendevice ( pmi -> device )		8209525	1					
ANR	8212385	Callee	gs_opendevice		8209525	0					
ANR	8212386	Identifier	gs_opendevice		8209525	0					
ANR	8212387	ArgumentList	pmi -> device		8209525	1					
ANR	8212388	Argument	pmi -> device		8209525	0					
ANR	8212389	PtrMemberAccess	pmi -> device		8209525	0					
ANR	8212390	Identifier	pmi		8209525	0					
ANR	8212391	Identifier	device		8209525	1					
ANR	8212392	IfStatement	if ( code < 0 )		8209525	15					
ANR	8212393	Condition	code < 0	1281:8:47263:47270	8209525	0	True				
ANR	8212394	RelationalExpression	code < 0		8209525	0		<			
ANR	8212395	Identifier	code		8209525	0					
ANR	8212396	PrimaryExpression	0		8209525	1					
ANR	8212397	ReturnStatement	return code ;	1282:8:47281:47292	8209525	1	True				
ANR	8212398	Identifier	code		8209525	0					
ANR	8212399	IfStatement	if ( ! arg )		8209525	16					
ANR	8212400	Condition	! arg	1285:8:47342:47345	8209525	0	True				
ANR	8212401	UnaryOperationExpression	! arg		8209525	0					
ANR	8212402	UnaryOperator	!		8209525	0					
ANR	8212403	Identifier	arg		8209525	1					
ANR	8212404	ReturnStatement	return 0 ;	1286:8:47356:47364	8209525	1	True				
ANR	8212405	PrimaryExpression	0		8209525	0					
ANR	8212406	DoStatement	do		8209525	17					
ANR	8212407	CompoundStatement		538:7:23853:23853	8209525	0					
ANR	8212408	ExpressionStatement	"code = pl_main_run_file ( pmi , arg )"	1289:8:47384:47417	8209525	0	True				
ANR	8212409	AssignmentExpression	"code = pl_main_run_file ( pmi , arg )"		8209525	0		=			
ANR	8212410	Identifier	code		8209525	0					
ANR	8212411	CallExpression	"pl_main_run_file ( pmi , arg )"		8209525	1					
ANR	8212412	Callee	pl_main_run_file		8209525	0					
ANR	8212413	Identifier	pl_main_run_file		8209525	0					
ANR	8212414	ArgumentList	pmi		8209525	1					
ANR	8212415	Argument	pmi		8209525	0					
ANR	8212416	Identifier	pmi		8209525	0					
ANR	8212417	Argument	arg		8209525	1					
ANR	8212418	Identifier	arg		8209525	0					
ANR	8212419	IfStatement	if ( code < 0 )		8209525	1					
ANR	8212420	Condition	code < 0	1290:12:47431:47438	8209525	0	True				
ANR	8212421	RelationalExpression	code < 0		8209525	0		<			
ANR	8212422	Identifier	code		8209525	0					
ANR	8212423	PrimaryExpression	0		8209525	1					
ANR	8212424	ReturnStatement	return code ;	1291:12:47453:47464	8209525	1	True				
ANR	8212425	Identifier	code		8209525	0					
ANR	8212426	Condition	"( code = arg_next ( pal , ( const char * * ) & arg , pmi -> memory ) ) > 0"	1292:13:47479:47538	8209525	1	True				
ANR	8212427	RelationalExpression	"( code = arg_next ( pal , ( const char * * ) & arg , pmi -> memory ) ) > 0"		8209525	0		>			
ANR	8212428	AssignmentExpression	"code = arg_next ( pal , ( const char * * ) & arg , pmi -> memory )"		8209525	0		=			
ANR	8212429	Identifier	code		8209525	0					
ANR	8212430	CallExpression	"arg_next ( pal , ( const char * * ) & arg , pmi -> memory )"		8209525	1					
ANR	8212431	Callee	arg_next		8209525	0					
ANR	8212432	Identifier	arg_next		8209525	0					
ANR	8212433	ArgumentList	pal		8209525	1					
ANR	8212434	Argument	pal		8209525	0					
ANR	8212435	Identifier	pal		8209525	0					
ANR	8212436	Argument	( const char * * ) & arg		8209525	1					
ANR	8212437	CastExpression	( const char * * ) & arg		8209525	0					
ANR	8212438	CastTarget	const char * *		8209525	0					
ANR	8212439	UnaryOperationExpression	& arg		8209525	1					
ANR	8212440	UnaryOperator	&		8209525	0					
ANR	8212441	Identifier	arg		8209525	1					
ANR	8212442	Argument	pmi -> memory		8209525	2					
ANR	8212443	PtrMemberAccess	pmi -> memory		8209525	0					
ANR	8212444	Identifier	pmi		8209525	0					
ANR	8212445	Identifier	memory		8209525	1					
ANR	8212446	PrimaryExpression	0		8209525	1					
ANR	8212447	ReturnStatement	return code ;	1294:4:47547:47558	8209525	18	True				
ANR	8212448	Identifier	code		8209525	0					
ANR	8212449	ReturnType	static int		8209525	1					
ANR	8212450	Identifier	pl_main_process_options		8209525	2					
ANR	8212451	ParameterList	"pl_main_instance_t * pmi , arg_list * pal , pl_interp_implementation_t * pjli"		8209525	3					
ANR	8212452	Parameter	pl_main_instance_t * pmi	749:24:23419:23442	8209525	0	True				
ANR	8212453	ParameterType	pl_main_instance_t *		8209525	0					
ANR	8212454	Identifier	pmi		8209525	1					
ANR	8212455	Parameter	arg_list * pal	749:50:23445:23458	8209525	1	True				
ANR	8212456	ParameterType	arg_list *		8209525	0					
ANR	8212457	Identifier	pal		8209525	1					
ANR	8212458	Parameter	pl_interp_implementation_t * pjli	750:24:23485:23517	8209525	2	True				
ANR	8212459	ParameterType	pl_interp_implementation_t *		8209525	0					
ANR	8212460	Identifier	pjli		8209525	1					
ANR	8212461	CFGEntryNode	ENTRY		8209525		True				
ANR	8212462	CFGExitNode	EXIT		8209525		True				
ANR	8212463	Symbol	pmi -> page_set_on_command_line		8209525						
ANR	8212464	Symbol	* index		8209525						
ANR	8212465	Symbol	gs_opendevice		8209525						
ANR	8212466	Symbol	dev_spec_op		8209525						
ANR	8212467	Symbol	strchr		8209525						
ANR	8212468	Symbol	pmi -> implementation		8209525						
ANR	8212469	Symbol	pmi -> res_set_on_command_line		8209525						
ANR	8212470	Symbol	GX_CINFO_POLARITY_ADDITIVE		8209525						
ANR	8212471	Symbol	geom		8209525						
ANR	8212472	Symbol	pmi		8209525						
ANR	8212473	Symbol	& number		8209525						
ANR	8212474	Symbol	& str		8209525						
ANR	8212475	Symbol	strncmp		8209525						
ANR	8212476	Symbol	* eqp		8209525						
ANR	8212477	Symbol	number		8209525						
ANR	8212478	Symbol	ia		8209525						
ANR	8212479	Symbol	ia . size		8209525						
ANR	8212480	Symbol	pmi -> saved_pages_test_mode		8209525						
ANR	8212481	Symbol	* gs_debug		8209525						
ANR	8212482	Symbol	param_write_string		8209525						
ANR	8212483	Symbol	gs_memory_chunk_target ( pmi -> memory ) -> non_gc_memory		8209525						
ANR	8212484	Symbol	get_device_index		8209525						
ANR	8212485	Symbol	gxdso_supports_saved_pages		8209525						
ANR	8212486	Symbol	val		8209525						
ANR	8212487	Symbol	& num_spots		8209525						
ANR	8212488	Symbol	* buf		8209525						
ANR	8212489	Symbol	pmi -> device		8209525						
ANR	8212490	Symbol	adef		8209525						
ANR	8212491	Symbol	index		8209525						
ANR	8212492	Symbol	pmi -> pcl_personality		8209525						
ANR	8212493	Symbol	cmyk_white		8209525						
ANR	8212494	Symbol	pmi -> pdefault_gray_icc		8209525						
ANR	8212495	Symbol	params		8209525						
ANR	8212496	Symbol	fill_rectangle		8209525						
ANR	8212497	Symbol	map_rgb_color		8209525						
ANR	8212498	Symbol	param_write_name		8209525						
ANR	8212499	Symbol	pmi -> memory		8209525						
ANR	8212500	Symbol	pdev -> color_info . polarity		8209525						
ANR	8212501	Symbol	str		8209525						
ANR	8212502	Symbol	countof		8209525						
ANR	8212503	Symbol	pl_process		8209525						
ANR	8212504	Symbol	* rawheap		8209525						
ANR	8212505	Symbol	arg_next		8209525						
ANR	8212506	Symbol	& pmi -> error_report		8209525						
ANR	8212507	Symbol	sscanf		8209525						
ANR	8212508	Symbol	pl_characteristics ( impls [ index ] ) -> language		8209525						
ANR	8212509	Symbol	check_for_special_int		8209525						
ANR	8212510	Symbol	rgb_white		8209525						
ANR	8212511	Symbol	pmi -> pjl_from_args		8209525						
ANR	8212512	Symbol	* arg		8209525						
ANR	8212513	Symbol	& base		8209525						
ANR	8212514	Symbol	& ia		8209525						
ANR	8212515	Symbol	eqp		8209525						
ANR	8212516	Symbol	num_spots		8209525						
ANR	8212517	Symbol	gs_memory_chunk_target		8209525						
ANR	8212518	Symbol	ppdev		8209525						
ANR	8212519	Symbol	* val		8209525						
ANR	8212520	Symbol	pmi -> pause		8209525						
ANR	8212521	Symbol	bval		8209525						
ANR	8212522	Symbol	e_ExitLanguage		8209525						
ANR	8212523	Symbol	arg		8209525						
ANR	8212524	Symbol	& cursor		8209525						
ANR	8212525	Symbol	pl_main_run_file		8209525						
ANR	8212526	Symbol	* buffer		8209525						
ANR	8212527	Symbol	gs_putdeviceparams		8209525						
ANR	8212528	Symbol	gx_saved_pages_param_process		8209525						
ANR	8212529	Symbol	sz		8209525						
ANR	8212530	Symbol	i		8209525						
ANR	8212531	Symbol	fa . size		8209525						
ANR	8212532	Symbol	cursor . limit		8209525						
ANR	8212533	Symbol	hwmarg		8209525						
ANR	8212534	Symbol	help		8209525						
ANR	8212535	Symbol	buf		8209525						
ANR	8212536	Symbol	* strlen		8209525						
ANR	8212537	Symbol	check_for_special_str		8209525						
ANR	8212538	Symbol	* pmi		8209525						
ANR	8212539	Symbol	& adef		8209525						
ANR	8212540	Symbol	& pmi -> params		8209525						
ANR	8212541	Symbol	* pdev		8209525						
ANR	8212542	Symbol	* gs_memory_chunk_target		8209525						
ANR	8212543	Symbol	& arg		8209525						
ANR	8212544	Symbol	map_cmyk_color		8209525						
ANR	8212545	Symbol	* impls		8209525						
ANR	8212546	Symbol	check_for_special_float		8209525						
ANR	8212547	Symbol	pdev -> color_info		8209525						
ANR	8212548	Symbol	suffix		8209525						
ANR	8212549	Symbol	pl_characteristics		8209525						
ANR	8212550	Symbol	& maxk		8209525						
ANR	8212551	Symbol	pdev		8209525						
ANR	8212552	Symbol	strlen		8209525						
ANR	8212553	Symbol	gs_debug		8209525						
ANR	8212554	Symbol	pmi -> implementations		8209525						
ANR	8212555	Symbol	pmi -> piccdir		8209525						
ANR	8212556	Symbol	pal		8209525						
ANR	8212557	Symbol	buffer		8209525						
ANR	8212558	Symbol	strcmp		8209525						
ANR	8212559	Symbol	param_write_float		8209525						
ANR	8212560	Symbol	res		8209525						
ANR	8212561	Symbol	NULL		8209525						
ANR	8212562	Symbol	ia . persistent		8209525						
ANR	8212563	Symbol	impls		8209525						
ANR	8212564	Symbol	pdev -> is_open		8209525						
ANR	8212565	Symbol	fa . data		8209525						
ANR	8212566	Symbol	vf		8209525						
ANR	8212567	Symbol	vi		8209525						
ANR	8212568	Symbol	maxk		8209525						
ANR	8212569	Symbol	cursor . ptr		8209525						
ANR	8212570	Symbol	pdev -> width		8209525						
ANR	8212571	Symbol	true		8209525						
ANR	8212572	Symbol	parsed		8209525						
ANR	8212573	Symbol	arg_copy		8209525						
ANR	8212574	Symbol	fa		8209525						
ANR	8212575	Symbol	param_write_float_array		8209525						
ANR	8212576	Symbol	pmi -> pdefault_rgb_icc		8209525						
ANR	8212577	Symbol	cursor		8209525						
ANR	8212578	Symbol	pjli		8209525						
ANR	8212579	Symbol	code		8209525						
ANR	8212580	Symbol	color		8209525						
ANR	8212581	Symbol	* res		8209525						
ANR	8212582	Symbol	pdev -> height		8209525						
ANR	8212583	Symbol	pmi -> pdefault_cmyk_icc		8209525						
ANR	8212584	Symbol	param_write_bool		8209525						
ANR	8212585	Symbol	pl_top_create_device		8209525						
ANR	8212586	Symbol	dev_proc		8209525						
ANR	8212587	Symbol	param_write_int_array		8209525						
ANR	8212588	Symbol	buf_len		8209525						
ANR	8212589	Symbol	pdev -> dname		8209525						
ANR	8212590	Symbol	value		8209525						
ANR	8212591	Symbol	param_write_int		8209525						
ANR	8212592	Symbol	rawheap		8209525						
ANR	8212593	Symbol	& fa		8209525						
ANR	8212594	Symbol	false		8209525						
ANR	8212595	Symbol	* val ++		8209525						
ANR	8212596	Symbol	fa . persistent		8209525						
ANR	8212597	Symbol	parse_floats		8209525						
ANR	8212598	Symbol	& bval		8209525						
ANR	8212599	Symbol	* i		8209525						
ANR	8212600	Symbol	* value		8209525						
ANR	8212601	Symbol	rawheap -> limit		8209525						
ANR	8212602	Symbol	* pl_characteristics		8209525						
ANR	8212603	Symbol	marg		8209525						
ANR	8212604	Symbol	& vf		8209525						
ANR	8212605	Symbol	& vi		8209525						
ANR	8212606	Symbol	base		8209525						
ANR	8212607	Symbol	ia . data		8209525						
ANR	8212608	Function	pl_auto_sense	1300:0:47638:48578							
ANR	8212609	FunctionDef	"pl_auto_sense (pl_main_instance_t * minst , const char * name , int buffer_length)"		8212608	0					
ANR	8212610	CompoundStatement		1302:0:47753:48578	8212608	0					
ANR	8212611	IdentifierDeclStatement	pl_interp_implementation_t * * impls = minst -> implementations ;	1304:4:47836:47895	8212608	0	True				
ANR	8212612	IdentifierDecl	* * impls = minst -> implementations		8212608	0					
ANR	8212613	IdentifierDeclType	pl_interp_implementation_t * *		8212608	0					
ANR	8212614	Identifier	impls		8212608	1					
ANR	8212615	AssignmentExpression	* * impls = minst -> implementations		8212608	2		=			
ANR	8212616	Identifier	impls		8212608	0					
ANR	8212617	PtrMemberAccess	minst -> implementations		8212608	1					
ANR	8212618	Identifier	minst		8212608	0					
ANR	8212619	Identifier	implementations		8212608	1					
ANR	8212620	IdentifierDeclStatement	pl_interp_implementation_t * * impl ;	1305:4:47901:47934	8212608	1	True				
ANR	8212621	IdentifierDecl	* * impl		8212608	0					
ANR	8212622	IdentifierDeclType	pl_interp_implementation_t * *		8212608	0					
ANR	8212623	Identifier	impl		8212608	1					
ANR	8212624	IdentifierDeclStatement	size_t uel_len = strlen ( PJL_UEL ) ;	1306:4:47940:47972	8212608	2	True				
ANR	8212625	IdentifierDecl	uel_len = strlen ( PJL_UEL )		8212608	0					
ANR	8212626	IdentifierDeclType	size_t		8212608	0					
ANR	8212627	Identifier	uel_len		8212608	1					
ANR	8212628	AssignmentExpression	uel_len = strlen ( PJL_UEL )		8212608	2		=			
ANR	8212629	Identifier	uel_len		8212608	0					
ANR	8212630	CallExpression	strlen ( PJL_UEL )		8212608	1					
ANR	8212631	Callee	strlen		8212608	0					
ANR	8212632	Identifier	strlen		8212608	0					
ANR	8212633	ArgumentList	PJL_UEL		8212608	1					
ANR	8212634	Argument	PJL_UEL		8212608	0					
ANR	8212635	Identifier	PJL_UEL		8212608	0					
ANR	8212636	IfStatement	if ( buffer_length >= uel_len )		8212608	3					
ANR	8212637	Condition	buffer_length >= uel_len	1309:8:48015:48038	8212608	0	True				
ANR	8212638	RelationalExpression	buffer_length >= uel_len		8212608	0		>=			
ANR	8212639	Identifier	buffer_length		8212608	0					
ANR	8212640	Identifier	uel_len		8212608	1					
ANR	8212641	CompoundStatement		8:34:287:287	8212608	1					
ANR	8212642	IfStatement	"if ( ! memcmp ( name , PJL_UEL , uel_len ) )"		8212608	0					
ANR	8212643	Condition	"! memcmp ( name , PJL_UEL , uel_len )"	1310:12:48055:48085	8212608	0	True				
ANR	8212644	UnaryOperationExpression	"! memcmp ( name , PJL_UEL , uel_len )"		8212608	0					
ANR	8212645	UnaryOperator	!		8212608	0					
ANR	8212646	CallExpression	"memcmp ( name , PJL_UEL , uel_len )"		8212608	1					
ANR	8212647	Callee	memcmp		8212608	0					
ANR	8212648	Identifier	memcmp		8212608	0					
ANR	8212649	ArgumentList	name		8212608	1					
ANR	8212650	Argument	name		8212608	0					
ANR	8212651	Identifier	name		8212608	0					
ANR	8212652	Argument	PJL_UEL		8212608	1					
ANR	8212653	Identifier	PJL_UEL		8212608	0					
ANR	8212654	Argument	uel_len		8212608	2					
ANR	8212655	Identifier	uel_len		8212608	0					
ANR	8212656	ReturnStatement	return impls [ 0 ] ;	1311:12:48100:48115	8212608	1	True				
ANR	8212657	ArrayIndexing	impls [ 0 ]		8212608	0					
ANR	8212658	Identifier	impls		8212608	0					
ANR	8212659	PrimaryExpression	0		8212608	1					
ANR	8212660	ForStatement	for ( impl = impls ; * impl != 0 ; ++ impl )		8212608	4					
ANR	8212661	ForInit	impl = impls ;	1314:9:48137:48149	8212608	0	True				
ANR	8212662	AssignmentExpression	impl = impls		8212608	0		=			
ANR	8212663	Identifier	impl		8212608	0					
ANR	8212664	Identifier	impls		8212608	1					
ANR	8212665	Condition	* impl != 0	1314:23:48151:48160	8212608	1	True				
ANR	8212666	EqualityExpression	* impl != 0		8212608	0		!=			
ANR	8212667	UnaryOperationExpression	* impl		8212608	0					
ANR	8212668	UnaryOperator	*		8212608	0					
ANR	8212669	Identifier	impl		8212608	1					
ANR	8212670	PrimaryExpression	0		8212608	1					
ANR	8212671	UnaryExpression	++ impl	1314:35:48163:48168	8212608	2	True				
ANR	8212672	IncDec	++		8212608	0					
ANR	8212673	Identifier	impl		8212608	1					
ANR	8212674	CompoundStatement		15:8:511:577	8212608	3					
ANR	8212675	IdentifierDeclStatement	int auto_string_len = strlen ( pl_characteristics ( * impl ) -> auto_sense_string ) ;	1315:8:48181:48255	8212608	0	True				
ANR	8212676	IdentifierDecl	auto_string_len = strlen ( pl_characteristics ( * impl ) -> auto_sense_string )		8212608	0					
ANR	8212677	IdentifierDeclType	int		8212608	0					
ANR	8212678	Identifier	auto_string_len		8212608	1					
ANR	8212679	AssignmentExpression	auto_string_len = strlen ( pl_characteristics ( * impl ) -> auto_sense_string )		8212608	2		=			
ANR	8212680	Identifier	auto_string_len		8212608	0					
ANR	8212681	CallExpression	strlen ( pl_characteristics ( * impl ) -> auto_sense_string )		8212608	1					
ANR	8212682	Callee	strlen		8212608	0					
ANR	8212683	Identifier	strlen		8212608	0					
ANR	8212684	ArgumentList	pl_characteristics ( * impl ) -> auto_sense_string		8212608	1					
ANR	8212685	Argument	pl_characteristics ( * impl ) -> auto_sense_string		8212608	0					
ANR	8212686	PtrMemberAccess	pl_characteristics ( * impl ) -> auto_sense_string		8212608	0					
ANR	8212687	CallExpression	pl_characteristics ( * impl )		8212608	0					
ANR	8212688	Callee	pl_characteristics		8212608	0					
ANR	8212689	Identifier	pl_characteristics		8212608	0					
ANR	8212690	ArgumentList	* impl		8212608	1					
ANR	8212691	Argument	* impl		8212608	0					
ANR	8212692	UnaryOperationExpression	* impl		8212608	0					
ANR	8212693	UnaryOperator	*		8212608	0					
ANR	8212694	Identifier	impl		8212608	1					
ANR	8212695	Identifier	auto_sense_string		8212608	1					
ANR	8212696	IdentifierDeclStatement	const char * sense = pl_characteristics ( * impl ) -> auto_sense_string ;	1316:8:48265:48331	8212608	1	True				
ANR	8212697	IdentifierDecl	* sense = pl_characteristics ( * impl ) -> auto_sense_string		8212608	0					
ANR	8212698	IdentifierDeclType	const char *		8212608	0					
ANR	8212699	Identifier	sense		8212608	1					
ANR	8212700	AssignmentExpression	* sense = pl_characteristics ( * impl ) -> auto_sense_string		8212608	2		=			
ANR	8212701	Identifier	sense		8212608	0					
ANR	8212702	PtrMemberAccess	pl_characteristics ( * impl ) -> auto_sense_string		8212608	1					
ANR	8212703	CallExpression	pl_characteristics ( * impl )		8212608	0					
ANR	8212704	Callee	pl_characteristics		8212608	0					
ANR	8212705	Identifier	pl_characteristics		8212608	0					
ANR	8212706	ArgumentList	* impl		8212608	1					
ANR	8212707	Argument	* impl		8212608	0					
ANR	8212708	UnaryOperationExpression	* impl		8212608	0					
ANR	8212709	UnaryOperator	*		8212608	0					
ANR	8212710	Identifier	impl		8212608	1					
ANR	8212711	Identifier	auto_sense_string		8212608	1					
ANR	8212712	IfStatement	if ( auto_string_len != 0 && buffer_length >= auto_string_len )		8212608	2					
ANR	8212713	Condition	auto_string_len != 0 && buffer_length >= auto_string_len	1317:12:48345:48400	8212608	0	True				
ANR	8212714	AndExpression	auto_string_len != 0 && buffer_length >= auto_string_len		8212608	0		&&			
ANR	8212715	EqualityExpression	auto_string_len != 0		8212608	0		!=			
ANR	8212716	Identifier	auto_string_len		8212608	0					
ANR	8212717	PrimaryExpression	0		8212608	1					
ANR	8212718	RelationalExpression	buffer_length >= auto_string_len		8212608	1		>=			
ANR	8212719	Identifier	buffer_length		8212608	0					
ANR	8212720	Identifier	auto_string_len		8212608	1					
ANR	8212721	IfStatement	"if ( ! memcmp ( sense , name , auto_string_len ) )"		8212608	1					
ANR	8212722	Condition	"! memcmp ( sense , name , auto_string_len )"	1318:16:48419:48455	8212608	0	True				
ANR	8212723	UnaryOperationExpression	"! memcmp ( sense , name , auto_string_len )"		8212608	0					
ANR	8212724	UnaryOperator	!		8212608	0					
ANR	8212725	CallExpression	"memcmp ( sense , name , auto_string_len )"		8212608	1					
ANR	8212726	Callee	memcmp		8212608	0					
ANR	8212727	Identifier	memcmp		8212608	0					
ANR	8212728	ArgumentList	sense		8212608	1					
ANR	8212729	Argument	sense		8212608	0					
ANR	8212730	Identifier	sense		8212608	0					
ANR	8212731	Argument	name		8212608	1					
ANR	8212732	Identifier	name		8212608	0					
ANR	8212733	Argument	auto_string_len		8212608	2					
ANR	8212734	Identifier	auto_string_len		8212608	0					
ANR	8212735	ReturnStatement	return * impl ;	1319:16:48474:48486	8212608	1	True				
ANR	8212736	UnaryOperationExpression	* impl		8212608	0					
ANR	8212737	UnaryOperator	*		8212608	0					
ANR	8212738	Identifier	impl		8212608	1					
ANR	8212739	ReturnStatement	return impls [ 1 ] ;	1322:4:48561:48576	8212608	5	True				
ANR	8212740	ArrayIndexing	impls [ 1 ]		8212608	0					
ANR	8212741	Identifier	impls		8212608	0					
ANR	8212742	PrimaryExpression	1		8212608	1					
ANR	8212743	ReturnType	static pl_interp_implementation_t *		8212608	1					
ANR	8212744	Identifier	pl_auto_sense		8212608	2					
ANR	8212745	ParameterList	"pl_main_instance_t * minst , const char * name , int buffer_length"		8212608	3					
ANR	8212746	Parameter	pl_main_instance_t * minst	1301:14:47688:47712	8212608	0	True				
ANR	8212747	ParameterType	pl_main_instance_t *		8212608	0					
ANR	8212748	Identifier	minst		8212608	1					
ANR	8212749	Parameter	const char * name	1301:41:47715:47730	8212608	1	True				
ANR	8212750	ParameterType	const char *		8212608	0					
ANR	8212751	Identifier	name		8212608	1					
ANR	8212752	Parameter	int buffer_length	1301:60:47734:47750	8212608	2	True				
ANR	8212753	ParameterType	int		8212608	0					
ANR	8212754	Identifier	buffer_length		8212608	1					
ANR	8212755	CFGEntryNode	ENTRY		8212608		True				
ANR	8212756	CFGExitNode	EXIT		8212608		True				
ANR	8212757	Symbol	minst		8212608						
ANR	8212758	Symbol	uel_len		8212608						
ANR	8212759	Symbol	pl_characteristics ( * impl ) -> auto_sense_string		8212608						
ANR	8212760	Symbol	* impls		8212608						
ANR	8212761	Symbol	impls		8212608						
ANR	8212762	Symbol	* impl		8212608						
ANR	8212763	Symbol	sense		8212608						
ANR	8212764	Symbol	minst -> implementations		8212608						
ANR	8212765	Symbol	pl_characteristics		8212608						
ANR	8212766	Symbol	* minst		8212608						
ANR	8212767	Symbol	impl		8212608						
ANR	8212768	Symbol	strlen		8212608						
ANR	8212769	Symbol	auto_string_len		8212608						
ANR	8212770	Symbol	memcmp		8212608						
ANR	8212771	Symbol	name		8212608						
ANR	8212772	Symbol	* pl_characteristics		8212608						
ANR	8212773	Symbol	buffer_length		8212608						
ANR	8212774	Symbol	PJL_UEL		8212608						
ANR	8212775	Function	pl_select_implementation	1327:0:48723:49545							
ANR	8212776	FunctionDef	"pl_select_implementation (pl_interp_implementation_t * pjli , pl_main_instance_t * pmi , pl_top_cursor_t r)"		8212775	0					
ANR	8212777	CompoundStatement		1330:0:48889:49545	8212775	0					
ANR	8212778	IdentifierDeclStatement	pl_interp_implementation_t * impl ;	1334:4:49126:49158	8212775	0	True				
ANR	8212779	IdentifierDecl	* impl		8212775	0					
ANR	8212780	IdentifierDeclType	pl_interp_implementation_t *		8212775	0					
ANR	8212781	Identifier	impl		8212775	1					
ANR	8212782	IfStatement	if ( pmi -> implementation )		8212775	1					
ANR	8212783	Condition	pmi -> implementation	1336:8:49169:49187	8212775	0	True				
ANR	8212784	PtrMemberAccess	pmi -> implementation		8212775	0					
ANR	8212785	Identifier	pmi		8212775	0					
ANR	8212786	Identifier	implementation		8212775	1					
ANR	8212787	ReturnStatement	return pmi -> implementation ;	1337:8:49198:49224	8212775	1	True				
ANR	8212788	PtrMemberAccess	pmi -> implementation		8212775	0					
ANR	8212789	Identifier	pmi		8212775	0					
ANR	8212790	Identifier	implementation		8212775	1					
ANR	8212791	IfStatement	"if ( ( impl = pl_pjl_select ( pmi , pjli ) ) != 0 )"		8212775	2					
ANR	8212792	Condition	"( impl = pl_pjl_select ( pmi , pjli ) ) != 0"	1339:8:49301:49338	8212775	0	True				
ANR	8212793	EqualityExpression	"( impl = pl_pjl_select ( pmi , pjli ) ) != 0"		8212775	0		!=			
ANR	8212794	AssignmentExpression	"impl = pl_pjl_select ( pmi , pjli )"		8212775	0		=			
ANR	8212795	Identifier	impl		8212775	0					
ANR	8212796	CallExpression	"pl_pjl_select ( pmi , pjli )"		8212775	1					
ANR	8212797	Callee	pl_pjl_select		8212775	0					
ANR	8212798	Identifier	pl_pjl_select		8212775	0					
ANR	8212799	ArgumentList	pmi		8212775	1					
ANR	8212800	Argument	pmi		8212775	0					
ANR	8212801	Identifier	pmi		8212775	0					
ANR	8212802	Argument	pjli		8212775	1					
ANR	8212803	Identifier	pjli		8212775	0					
ANR	8212804	PrimaryExpression	0		8212775	1					
ANR	8212805	ReturnStatement	return impl ;	1340:8:49349:49360	8212775	1	True				
ANR	8212806	Identifier	impl		8212775	0					
ANR	8212807	ReturnStatement	"return pl_auto_sense ( pmi , ( const char * ) r . cursor . ptr + 1 , ( r . cursor . limit - r . cursor . ptr ) ) ;"	1342:4:49428:49543	8212775	3	True				
ANR	8212808	CallExpression	"pl_auto_sense ( pmi , ( const char * ) r . cursor . ptr + 1 , ( r . cursor . limit - r . cursor . ptr ) )"		8212775	0					
ANR	8212809	Callee	pl_auto_sense		8212775	0					
ANR	8212810	Identifier	pl_auto_sense		8212775	0					
ANR	8212811	ArgumentList	pmi		8212775	1					
ANR	8212812	Argument	pmi		8212775	0					
ANR	8212813	Identifier	pmi		8212775	0					
ANR	8212814	Argument	( const char * ) r . cursor . ptr + 1		8212775	1					
ANR	8212815	AdditiveExpression	( const char * ) r . cursor . ptr + 1		8212775	0		+			
ANR	8212816	CastExpression	( const char * ) r . cursor . ptr		8212775	0					
ANR	8212817	CastTarget	const char *		8212775	0					
ANR	8212818	MemberAccess	r . cursor . ptr		8212775	1					
ANR	8212819	MemberAccess	r . cursor		8212775	0					
ANR	8212820	Identifier	r		8212775	0					
ANR	8212821	Identifier	cursor		8212775	1					
ANR	8212822	Identifier	ptr		8212775	1					
ANR	8212823	PrimaryExpression	1		8212775	1					
ANR	8212824	Argument	r . cursor . limit - r . cursor . ptr		8212775	2					
ANR	8212825	AdditiveExpression	r . cursor . limit - r . cursor . ptr		8212775	0		-			
ANR	8212826	MemberAccess	r . cursor . limit		8212775	0					
ANR	8212827	MemberAccess	r . cursor		8212775	0					
ANR	8212828	Identifier	r		8212775	0					
ANR	8212829	Identifier	cursor		8212775	1					
ANR	8212830	Identifier	limit		8212775	1					
ANR	8212831	MemberAccess	r . cursor . ptr		8212775	1					
ANR	8212832	MemberAccess	r . cursor		8212775	0					
ANR	8212833	Identifier	r		8212775	0					
ANR	8212834	Identifier	cursor		8212775	1					
ANR	8212835	Identifier	ptr		8212775	1					
ANR	8212836	ReturnType	static pl_interp_implementation_t *		8212775	1					
ANR	8212837	Identifier	pl_select_implementation		8212775	2					
ANR	8212838	ParameterList	"pl_interp_implementation_t * pjli , pl_main_instance_t * pmi , pl_top_cursor_t r"		8212775	3					
ANR	8212839	Parameter	pl_interp_implementation_t * pjli	1328:25:48784:48816	8212775	0	True				
ANR	8212840	ParameterType	pl_interp_implementation_t *		8212775	0					
ANR	8212841	Identifier	pjli		8212775	1					
ANR	8212842	Parameter	pl_main_instance_t * pmi	1329:25:48844:48867	8212775	1	True				
ANR	8212843	ParameterType	pl_main_instance_t *		8212775	0					
ANR	8212844	Identifier	pmi		8212775	1					
ANR	8212845	Parameter	pl_top_cursor_t r	1329:51:48870:48886	8212775	2	True				
ANR	8212846	ParameterType	pl_top_cursor_t		8212775	0					
ANR	8212847	Identifier	r		8212775	1					
ANR	8212848	CFGEntryNode	ENTRY		8212775		True				
ANR	8212849	CFGExitNode	EXIT		8212775		True				
ANR	8212850	Symbol	impl		8212775						
ANR	8212851	Symbol	r		8212775						
ANR	8212852	Symbol	pjli		8212775						
ANR	8212853	Symbol	r . cursor		8212775						
ANR	8212854	Symbol	pl_pjl_select		8212775						
ANR	8212855	Symbol	* pmi		8212775						
ANR	8212856	Symbol	r . cursor . ptr		8212775						
ANR	8212857	Symbol	r . cursor . limit		8212775						
ANR	8212858	Symbol	pmi -> implementation		8212775						
ANR	8212859	Symbol	pl_auto_sense		8212775						
ANR	8212860	Symbol	pmi		8212775						
ANR	8212861	Function	pl_pjl_select	1347:0:49591:50048							
ANR	8212862	FunctionDef	"pl_pjl_select (pl_main_instance_t * pmi , pl_interp_implementation_t * pjli)"		8212861	0					
ANR	8212863	CompoundStatement		1349:0:49702:50048	8212861	0					
ANR	8212864	IdentifierDeclStatement	pjl_envvar_t * language ;	1350:4:49708:49730	8212861	0	True				
ANR	8212865	IdentifierDecl	* language		8212861	0					
ANR	8212866	IdentifierDeclType	pjl_envvar_t *		8212861	0					
ANR	8212867	Identifier	language		8212861	1					
ANR	8212868	IdentifierDeclStatement	pl_interp_implementation_t * * impls = pmi -> implementations ;	1351:4:49736:49793	8212861	1	True				
ANR	8212869	IdentifierDecl	* * impls = pmi -> implementations		8212861	0					
ANR	8212870	IdentifierDeclType	pl_interp_implementation_t * *		8212861	0					
ANR	8212871	Identifier	impls		8212861	1					
ANR	8212872	AssignmentExpression	* * impls = pmi -> implementations		8212861	2		=			
ANR	8212873	Identifier	impls		8212861	0					
ANR	8212874	PtrMemberAccess	pmi -> implementations		8212861	1					
ANR	8212875	Identifier	pmi		8212861	0					
ANR	8212876	Identifier	implementations		8212861	1					
ANR	8212877	IdentifierDeclStatement	pl_interp_implementation_t * * impl ;	1352:4:49799:49832	8212861	2	True				
ANR	8212878	IdentifierDecl	* * impl		8212861	0					
ANR	8212879	IdentifierDeclType	pl_interp_implementation_t * *		8212861	0					
ANR	8212880	Identifier	impl		8212861	1					
ANR	8212881	ExpressionStatement	"language = pjl_proc_get_envvar ( pjli , ""language"" )"	1354:4:49839:49887	8212861	3	True				
ANR	8212882	AssignmentExpression	"language = pjl_proc_get_envvar ( pjli , ""language"" )"		8212861	0		=			
ANR	8212883	Identifier	language		8212861	0					
ANR	8212884	CallExpression	"pjl_proc_get_envvar ( pjli , ""language"" )"		8212861	1					
ANR	8212885	Callee	pjl_proc_get_envvar		8212861	0					
ANR	8212886	Identifier	pjl_proc_get_envvar		8212861	0					
ANR	8212887	ArgumentList	pjli		8212861	1					
ANR	8212888	Argument	pjli		8212861	0					
ANR	8212889	Identifier	pjli		8212861	0					
ANR	8212890	Argument	"""language"""		8212861	1					
ANR	8212891	PrimaryExpression	"""language"""		8212861	0					
ANR	8212892	ForStatement	for ( impl = impls ; * impl != 0 ; ++ impl )		8212861	4					
ANR	8212893	ForInit	impl = impls ;	1355:9:49898:49910	8212861	0	True				
ANR	8212894	AssignmentExpression	impl = impls		8212861	0		=			
ANR	8212895	Identifier	impl		8212861	0					
ANR	8212896	Identifier	impls		8212861	1					
ANR	8212897	Condition	* impl != 0	1355:23:49912:49921	8212861	1	True				
ANR	8212898	EqualityExpression	* impl != 0		8212861	0		!=			
ANR	8212899	UnaryOperationExpression	* impl		8212861	0					
ANR	8212900	UnaryOperator	*		8212861	0					
ANR	8212901	Identifier	impl		8212861	1					
ANR	8212902	PrimaryExpression	0		8212861	1					
ANR	8212903	UnaryExpression	++ impl	1355:35:49924:49929	8212861	2	True				
ANR	8212904	IncDec	++		8212861	0					
ANR	8212905	Identifier	impl		8212861	1					
ANR	8212906	CompoundStatement		7:43:229:229	8212861	3					
ANR	8212907	IfStatement	"if ( ! strcmp ( pl_characteristics ( * impl ) -> language , language ) )"		8212861	0					
ANR	8212908	Condition	"! strcmp ( pl_characteristics ( * impl ) -> language , language )"	1356:12:49946:49999	8212861	0	True				
ANR	8212909	UnaryOperationExpression	"! strcmp ( pl_characteristics ( * impl ) -> language , language )"		8212861	0					
ANR	8212910	UnaryOperator	!		8212861	0					
ANR	8212911	CallExpression	"strcmp ( pl_characteristics ( * impl ) -> language , language )"		8212861	1					
ANR	8212912	Callee	strcmp		8212861	0					
ANR	8212913	Identifier	strcmp		8212861	0					
ANR	8212914	ArgumentList	pl_characteristics ( * impl ) -> language		8212861	1					
ANR	8212915	Argument	pl_characteristics ( * impl ) -> language		8212861	0					
ANR	8212916	PtrMemberAccess	pl_characteristics ( * impl ) -> language		8212861	0					
ANR	8212917	CallExpression	pl_characteristics ( * impl )		8212861	0					
ANR	8212918	Callee	pl_characteristics		8212861	0					
ANR	8212919	Identifier	pl_characteristics		8212861	0					
ANR	8212920	ArgumentList	* impl		8212861	1					
ANR	8212921	Argument	* impl		8212861	0					
ANR	8212922	UnaryOperationExpression	* impl		8212861	0					
ANR	8212923	UnaryOperator	*		8212861	0					
ANR	8212924	Identifier	impl		8212861	1					
ANR	8212925	Identifier	language		8212861	1					
ANR	8212926	Argument	language		8212861	1					
ANR	8212927	Identifier	language		8212861	0					
ANR	8212928	ReturnStatement	return * impl ;	1357:12:50014:50026	8212861	1	True				
ANR	8212929	UnaryOperationExpression	* impl		8212861	0					
ANR	8212930	UnaryOperator	*		8212861	0					
ANR	8212931	Identifier	impl		8212861	1					
ANR	8212932	ReturnStatement	return 0 ;	1359:4:50038:50046	8212861	5	True				
ANR	8212933	PrimaryExpression	0		8212861	0					
ANR	8212934	ReturnType	static pl_interp_implementation_t *		8212861	1					
ANR	8212935	Identifier	pl_pjl_select		8212861	2					
ANR	8212936	ParameterList	"pl_main_instance_t * pmi , pl_interp_implementation_t * pjli"		8212861	3					
ANR	8212937	Parameter	pl_main_instance_t * pmi	1348:14:49641:49664	8212861	0	True				
ANR	8212938	ParameterType	pl_main_instance_t *		8212861	0					
ANR	8212939	Identifier	pmi		8212861	1					
ANR	8212940	Parameter	pl_interp_implementation_t * pjli	1348:40:49667:49699	8212861	1	True				
ANR	8212941	ParameterType	pl_interp_implementation_t *		8212861	0					
ANR	8212942	Identifier	pjli		8212861	1					
ANR	8212943	CFGEntryNode	ENTRY		8212861		True				
ANR	8212944	CFGExitNode	EXIT		8212861		True				
ANR	8212945	Symbol	strcmp		8212861						
ANR	8212946	Symbol	pjli		8212861						
ANR	8212947	Symbol	impls		8212861						
ANR	8212948	Symbol	* impl		8212861						
ANR	8212949	Symbol	language		8212861						
ANR	8212950	Symbol	pmi		8212861						
ANR	8212951	Symbol	pl_characteristics		8212861						
ANR	8212952	Symbol	pl_characteristics ( * impl ) -> language		8212861						
ANR	8212953	Symbol	impl		8212861						
ANR	8212954	Symbol	pmi -> implementations		8212861						
ANR	8212955	Symbol	* pmi		8212861						
ANR	8212956	Symbol	* pl_characteristics		8212861						
ANR	8212957	Symbol	pjl_proc_get_envvar		8212861						
ANR	8212958	Function	pl_print_usage	1363:0:50086:50434							
ANR	8212959	FunctionDef	"pl_print_usage (const pl_main_instance_t * pti , const char * msg)"		8212958	0					
ANR	8212960	CompoundStatement		1365:0:50155:50434	8212958	0					
ANR	8212961	IdentifierDeclStatement	long utime [ 2 ] ;	1366:4:50161:50174	8212958	0	True				
ANR	8212962	IdentifierDecl	utime [ 2 ]		8212958	0					
ANR	8212963	IdentifierDeclType	long [ 2 ]		8212958	0					
ANR	8212964	Identifier	utime		8212958	1					
ANR	8212965	PrimaryExpression	2		8212958	2					
ANR	8212966	IdentifierDeclStatement	gx_device * pdev = pti -> device ;	1367:4:50180:50209	8212958	1	True				
ANR	8212967	IdentifierDecl	* pdev = pti -> device		8212958	0					
ANR	8212968	IdentifierDeclType	gx_device *		8212958	0					
ANR	8212969	Identifier	pdev		8212958	1					
ANR	8212970	AssignmentExpression	* pdev = pti -> device		8212958	2		=			
ANR	8212971	Identifier	pdev		8212958	0					
ANR	8212972	PtrMemberAccess	pti -> device		8212958	1					
ANR	8212973	Identifier	pti		8212958	0					
ANR	8212974	Identifier	device		8212958	1					
ANR	8212975	ExpressionStatement	gp_get_realtime ( utime )	1369:4:50220:50242	8212958	2	True				
ANR	8212976	CallExpression	gp_get_realtime ( utime )		8212958	0					
ANR	8212977	Callee	gp_get_realtime		8212958	0					
ANR	8212978	Identifier	gp_get_realtime		8212958	0					
ANR	8212979	ArgumentList	utime		8212958	1					
ANR	8212980	Argument	utime		8212958	0					
ANR	8212981	Identifier	utime		8212958	0					
ANR	8212982	ExpressionStatement	"dmprintf3 ( pti -> memory , ""%% %s time = %g, pages = %ld\\n"" , msg , utime [ 0 ] - pti -> base_time [ 0 ] + ( utime [ 1 ] - pti -> base_time [ 1 ] ) / 1000000000.0 , pdev -> PageCount )"	1370:4:50248:50432	8212958	3	True				
ANR	8212983	CallExpression	"dmprintf3 ( pti -> memory , ""%% %s time = %g, pages = %ld\\n"" , msg , utime [ 0 ] - pti -> base_time [ 0 ] + ( utime [ 1 ] - pti -> base_time [ 1 ] ) / 1000000000.0 , pdev -> PageCount )"		8212958	0					
ANR	8212984	Callee	dmprintf3		8212958	0					
ANR	8212985	Identifier	dmprintf3		8212958	0					
ANR	8212986	ArgumentList	pti -> memory		8212958	1					
ANR	8212987	Argument	pti -> memory		8212958	0					
ANR	8212988	PtrMemberAccess	pti -> memory		8212958	0					
ANR	8212989	Identifier	pti		8212958	0					
ANR	8212990	Identifier	memory		8212958	1					
ANR	8212991	Argument	"""%% %s time = %g, pages = %ld\\n"""		8212958	1					
ANR	8212992	PrimaryExpression	"""%% %s time = %g, pages = %ld\\n"""		8212958	0					
ANR	8212993	Argument	msg		8212958	2					
ANR	8212994	Identifier	msg		8212958	0					
ANR	8212995	Argument	utime [ 0 ] - pti -> base_time [ 0 ] + ( utime [ 1 ] - pti -> base_time [ 1 ] ) / 1000000000.0		8212958	3					
ANR	8212996	AdditiveExpression	utime [ 0 ] - pti -> base_time [ 0 ] + ( utime [ 1 ] - pti -> base_time [ 1 ] ) / 1000000000.0		8212958	0		-			
ANR	8212997	ArrayIndexing	utime [ 0 ]		8212958	0					
ANR	8212998	Identifier	utime		8212958	0					
ANR	8212999	PrimaryExpression	0		8212958	1					
ANR	8213000	AdditiveExpression	pti -> base_time [ 0 ] + ( utime [ 1 ] - pti -> base_time [ 1 ] ) / 1000000000.0		8212958	1		+			
ANR	8213001	ArrayIndexing	pti -> base_time [ 0 ]		8212958	0					
ANR	8213002	PtrMemberAccess	pti -> base_time		8212958	0					
ANR	8213003	Identifier	pti		8212958	0					
ANR	8213004	Identifier	base_time		8212958	1					
ANR	8213005	PrimaryExpression	0		8212958	1					
ANR	8213006	MultiplicativeExpression	( utime [ 1 ] - pti -> base_time [ 1 ] ) / 1000000000.0		8212958	1		/			
ANR	8213007	AdditiveExpression	utime [ 1 ] - pti -> base_time [ 1 ]		8212958	0		-			
ANR	8213008	ArrayIndexing	utime [ 1 ]		8212958	0					
ANR	8213009	Identifier	utime		8212958	0					
ANR	8213010	PrimaryExpression	1		8212958	1					
ANR	8213011	ArrayIndexing	pti -> base_time [ 1 ]		8212958	1					
ANR	8213012	PtrMemberAccess	pti -> base_time		8212958	0					
ANR	8213013	Identifier	pti		8212958	0					
ANR	8213014	Identifier	base_time		8212958	1					
ANR	8213015	PrimaryExpression	1		8212958	1					
ANR	8213016	PrimaryExpression	1000000000.0		8212958	1					
ANR	8213017	Argument	pdev -> PageCount		8212958	4					
ANR	8213018	PtrMemberAccess	pdev -> PageCount		8212958	0					
ANR	8213019	Identifier	pdev		8212958	0					
ANR	8213020	Identifier	PageCount		8212958	1					
ANR	8213021	ReturnType	void		8212958	1					
ANR	8213022	Identifier	pl_print_usage		8212958	2					
ANR	8213023	ParameterList	"const pl_main_instance_t * pti , const char * msg"		8212958	3					
ANR	8213024	Parameter	const pl_main_instance_t * pti	1364:15:50106:50135	8212958	0	True				
ANR	8213025	ParameterType	const pl_main_instance_t *		8212958	0					
ANR	8213026	Identifier	pti		8212958	1					
ANR	8213027	Parameter	const char * msg	1364:47:50138:50152	8212958	1	True				
ANR	8213028	ParameterType	const char *		8212958	0					
ANR	8213029	Identifier	msg		8212958	1					
ANR	8213030	CFGEntryNode	ENTRY		8212958		True				
ANR	8213031	CFGExitNode	EXIT		8212958		True				
ANR	8213032	Symbol	msg		8212958						
ANR	8213033	Symbol	pti		8212958						
ANR	8213034	Symbol	utime		8212958						
ANR	8213035	Symbol	* utime		8212958						
ANR	8213036	Symbol	* pti		8212958						
ANR	8213037	Symbol	pdev		8212958						
ANR	8213038	Symbol	pti -> memory		8212958						
ANR	8213039	Symbol	pdev -> PageCount		8212958						
ANR	8213040	Symbol	* pdev		8212958						
ANR	8213041	Symbol	* * pti		8212958						
ANR	8213042	Symbol	pti -> device		8212958						
ANR	8213043	Symbol	* pti -> base_time		8212958						
ANR	8213044	Symbol	pti -> base_time		8212958						
ANR	8213045	Function	pl_log_string	1376:0:50494:50687							
ANR	8213046	FunctionDef	"pl_log_string (const gs_memory_t * mem , const char * str , int wait_for_key)"		8213045	0					
ANR	8213047	CompoundStatement		1378:0:50580:50687	8213045	0					
ANR	8213048	ExpressionStatement	"errwrite ( mem , str , strlen ( str ) )"	1379:4:50586:50617	8213045	0	True				
ANR	8213049	CallExpression	"errwrite ( mem , str , strlen ( str ) )"		8213045	0					
ANR	8213050	Callee	errwrite		8213045	0					
ANR	8213051	Identifier	errwrite		8213045	0					
ANR	8213052	ArgumentList	mem		8213045	1					
ANR	8213053	Argument	mem		8213045	0					
ANR	8213054	Identifier	mem		8213045	0					
ANR	8213055	Argument	str		8213045	1					
ANR	8213056	Identifier	str		8213045	0					
ANR	8213057	Argument	strlen ( str )		8213045	2					
ANR	8213058	CallExpression	strlen ( str )		8213045	0					
ANR	8213059	Callee	strlen		8213045	0					
ANR	8213060	Identifier	strlen		8213045	0					
ANR	8213061	ArgumentList	str		8213045	1					
ANR	8213062	Argument	str		8213045	0					
ANR	8213063	Identifier	str		8213045	0					
ANR	8213064	IfStatement	if ( wait_for_key )		8213045	1					
ANR	8213065	Condition	wait_for_key	1380:8:50627:50638	8213045	0	True				
ANR	8213066	Identifier	wait_for_key		8213045	0					
ANR	8213067	ExpressionStatement	( void ) fgetc ( mem -> gs_lib_ctx -> fstdin )	1381:8:50649:50685	8213045	1	True				
ANR	8213068	CastExpression	( void ) fgetc ( mem -> gs_lib_ctx -> fstdin )		8213045	0					
ANR	8213069	CastTarget	void		8213045	0					
ANR	8213070	CallExpression	fgetc ( mem -> gs_lib_ctx -> fstdin )		8213045	1					
ANR	8213071	Callee	fgetc		8213045	0					
ANR	8213072	Identifier	fgetc		8213045	0					
ANR	8213073	ArgumentList	mem -> gs_lib_ctx -> fstdin		8213045	1					
ANR	8213074	Argument	mem -> gs_lib_ctx -> fstdin		8213045	0					
ANR	8213075	PtrMemberAccess	mem -> gs_lib_ctx -> fstdin		8213045	0					
ANR	8213076	PtrMemberAccess	mem -> gs_lib_ctx		8213045	0					
ANR	8213077	Identifier	mem		8213045	0					
ANR	8213078	Identifier	gs_lib_ctx		8213045	1					
ANR	8213079	Identifier	fstdin		8213045	1					
ANR	8213080	ReturnType	static void		8213045	1					
ANR	8213081	Identifier	pl_log_string		8213045	2					
ANR	8213082	ParameterList	"const gs_memory_t * mem , const char * str , int wait_for_key"		8213045	3					
ANR	8213083	Parameter	const gs_memory_t * mem	1377:14:50520:50542	8213045	0	True				
ANR	8213084	ParameterType	const gs_memory_t *		8213045	0					
ANR	8213085	Identifier	mem		8213045	1					
ANR	8213086	Parameter	const char * str	1377:39:50545:50559	8213045	1	True				
ANR	8213087	ParameterType	const char *		8213045	0					
ANR	8213088	Identifier	str		8213045	1					
ANR	8213089	Parameter	int wait_for_key	1377:56:50562:50577	8213045	2	True				
ANR	8213090	ParameterType	int		8213045	0					
ANR	8213091	Identifier	wait_for_key		8213045	1					
ANR	8213092	CFGEntryNode	ENTRY		8213045		True				
ANR	8213093	CFGExitNode	EXIT		8213045		True				
ANR	8213094	Symbol	str		8213045						
ANR	8213095	Symbol	mem -> gs_lib_ctx -> fstdin		8213045						
ANR	8213096	Symbol	strlen		8213045						
ANR	8213097	Symbol	mem		8213045						
ANR	8213098	Symbol	* * mem		8213045						
ANR	8213099	Symbol	wait_for_key		8213045						
ANR	8213100	Symbol	* mem -> gs_lib_ctx		8213045						
ANR	8213101	Symbol	mem -> gs_lib_ctx		8213045						
ANR	8213102	Symbol	* mem		8213045						
ANR	8213103	Function	pl_main_get_pcl_instance	1384:0:50690:50828							
ANR	8213104	FunctionDef	pl_main_get_pcl_instance (const gs_memory_t * mem)		8213103	0					
ANR	8213105	CompoundStatement		1386:0:50768:50828	8213103	0					
ANR	8213106	ReturnStatement	return pl_main_get_instance ( mem ) -> implementations [ 1 ] ;	1387:4:50774:50826	8213103	0	True				
ANR	8213107	ArrayIndexing	pl_main_get_instance ( mem ) -> implementations [ 1 ]		8213103	0					
ANR	8213108	PtrMemberAccess	pl_main_get_instance ( mem ) -> implementations		8213103	0					
ANR	8213109	CallExpression	pl_main_get_instance ( mem )		8213103	0					
ANR	8213110	Callee	pl_main_get_instance		8213103	0					
ANR	8213111	Identifier	pl_main_get_instance		8213103	0					
ANR	8213112	ArgumentList	mem		8213103	1					
ANR	8213113	Argument	mem		8213103	0					
ANR	8213114	Identifier	mem		8213103	0					
ANR	8213115	Identifier	implementations		8213103	1					
ANR	8213116	PrimaryExpression	1		8213103	1					
ANR	8213117	ReturnType	pl_interp_implementation_t *		8213103	1					
ANR	8213118	Identifier	pl_main_get_pcl_instance		8213103	2					
ANR	8213119	ParameterList	const gs_memory_t * mem		8213103	3					
ANR	8213120	Parameter	const gs_memory_t * mem	1385:25:50744:50765	8213103	0	True				
ANR	8213121	ParameterType	const gs_memory_t *		8213103	0					
ANR	8213122	Identifier	mem		8213103	1					
ANR	8213123	CFGEntryNode	ENTRY		8213103		True				
ANR	8213124	CFGExitNode	EXIT		8213103		True				
ANR	8213125	Symbol	pl_main_get_instance ( mem ) -> implementations		8213103						
ANR	8213126	Symbol	mem		8213103						
ANR	8213127	Symbol	* pl_main_get_instance ( mem ) -> implementations		8213103						
ANR	8213128	Symbol	* pl_main_get_instance		8213103						
ANR	8213129	Symbol	pl_main_get_instance		8213103						
ANR	8213130	Symbol	* * pl_main_get_instance		8213103						
ANR	8213131	Function	pl_main_get_pjl_instance	1390:0:50831:50969							
ANR	8213132	FunctionDef	pl_main_get_pjl_instance (const gs_memory_t * mem)		8213131	0					
ANR	8213133	CompoundStatement		1392:0:50909:50969	8213131	0					
ANR	8213134	ReturnStatement	return pl_main_get_instance ( mem ) -> implementations [ 0 ] ;	1393:4:50915:50967	8213131	0	True				
ANR	8213135	ArrayIndexing	pl_main_get_instance ( mem ) -> implementations [ 0 ]		8213131	0					
ANR	8213136	PtrMemberAccess	pl_main_get_instance ( mem ) -> implementations		8213131	0					
ANR	8213137	CallExpression	pl_main_get_instance ( mem )		8213131	0					
ANR	8213138	Callee	pl_main_get_instance		8213131	0					
ANR	8213139	Identifier	pl_main_get_instance		8213131	0					
ANR	8213140	ArgumentList	mem		8213131	1					
ANR	8213141	Argument	mem		8213131	0					
ANR	8213142	Identifier	mem		8213131	0					
ANR	8213143	Identifier	implementations		8213131	1					
ANR	8213144	PrimaryExpression	0		8213131	1					
ANR	8213145	ReturnType	pl_interp_implementation_t *		8213131	1					
ANR	8213146	Identifier	pl_main_get_pjl_instance		8213131	2					
ANR	8213147	ParameterList	const gs_memory_t * mem		8213131	3					
ANR	8213148	Parameter	const gs_memory_t * mem	1391:25:50885:50906	8213131	0	True				
ANR	8213149	ParameterType	const gs_memory_t *		8213131	0					
ANR	8213150	Identifier	mem		8213131	1					
ANR	8213151	CFGEntryNode	ENTRY		8213131		True				
ANR	8213152	CFGExitNode	EXIT		8213131		True				
ANR	8213153	Symbol	pl_main_get_instance ( mem ) -> implementations		8213131						
ANR	8213154	Symbol	mem		8213131						
ANR	8213155	Symbol	* pl_main_get_instance ( mem ) -> implementations		8213131						
ANR	8213156	Symbol	* pl_main_get_instance		8213131						
ANR	8213157	Symbol	* * pl_main_get_instance		8213131						
ANR	8213158	Symbol	pl_main_get_instance		8213131						
ANR	8213159	Function	pl_main_get_interpolate	1396:0:50972:51078							
ANR	8213160	FunctionDef	pl_main_get_interpolate (const gs_memory_t * mem)		8213159	0					
ANR	8213161	CompoundStatement		1397:0:51025:51078	8213159	0					
ANR	8213162	ReturnStatement	return pl_main_get_instance ( mem ) -> interpolate ;	1398:4:51031:51076	8213159	0	True				
ANR	8213163	PtrMemberAccess	pl_main_get_instance ( mem ) -> interpolate		8213159	0					
ANR	8213164	CallExpression	pl_main_get_instance ( mem )		8213159	0					
ANR	8213165	Callee	pl_main_get_instance		8213159	0					
ANR	8213166	Identifier	pl_main_get_instance		8213159	0					
ANR	8213167	ArgumentList	mem		8213159	1					
ANR	8213168	Argument	mem		8213159	0					
ANR	8213169	Identifier	mem		8213159	0					
ANR	8213170	Identifier	interpolate		8213159	1					
ANR	8213171	ReturnType	bool		8213159	1					
ANR	8213172	Identifier	pl_main_get_interpolate		8213159	2					
ANR	8213173	ParameterList	const gs_memory_t * mem		8213159	3					
ANR	8213174	Parameter	const gs_memory_t * mem	1396:29:51001:51022	8213159	0	True				
ANR	8213175	ParameterType	const gs_memory_t *		8213159	0					
ANR	8213176	Identifier	mem		8213159	1					
ANR	8213177	CFGEntryNode	ENTRY		8213159		True				
ANR	8213178	CFGExitNode	EXIT		8213159		True				
ANR	8213179	Symbol	mem		8213159						
ANR	8213180	Symbol	* pl_main_get_instance		8213159						
ANR	8213181	Symbol	pl_main_get_instance ( mem ) -> interpolate		8213159						
ANR	8213182	Symbol	pl_main_get_instance		8213159						
ANR	8213183	Function	pl_main_get_nocache	1401:0:51081:51179							
ANR	8213184	FunctionDef	pl_main_get_nocache (const gs_memory_t * mem)		8213183	0					
ANR	8213185	CompoundStatement		1402:0:51130:51179	8213183	0					
ANR	8213186	ReturnStatement	return pl_main_get_instance ( mem ) -> nocache ;	1403:4:51136:51177	8213183	0	True				
ANR	8213187	PtrMemberAccess	pl_main_get_instance ( mem ) -> nocache		8213183	0					
ANR	8213188	CallExpression	pl_main_get_instance ( mem )		8213183	0					
ANR	8213189	Callee	pl_main_get_instance		8213183	0					
ANR	8213190	Identifier	pl_main_get_instance		8213183	0					
ANR	8213191	ArgumentList	mem		8213183	1					
ANR	8213192	Argument	mem		8213183	0					
ANR	8213193	Identifier	mem		8213183	0					
ANR	8213194	Identifier	nocache		8213183	1					
ANR	8213195	ReturnType	bool		8213183	1					
ANR	8213196	Identifier	pl_main_get_nocache		8213183	2					
ANR	8213197	ParameterList	const gs_memory_t * mem		8213183	3					
ANR	8213198	Parameter	const gs_memory_t * mem	1401:25:51106:51127	8213183	0	True				
ANR	8213199	ParameterType	const gs_memory_t *		8213183	0					
ANR	8213200	Identifier	mem		8213183	1					
ANR	8213201	CFGEntryNode	ENTRY		8213183		True				
ANR	8213202	CFGExitNode	EXIT		8213183		True				
ANR	8213203	Symbol	mem		8213183						
ANR	8213204	Symbol	* pl_main_get_instance		8213183						
ANR	8213205	Symbol	pl_main_get_instance		8213183						
ANR	8213206	Symbol	pl_main_get_instance ( mem ) -> nocache		8213183						
ANR	8213207	Function	pl_main_get_page_set_on_command_line	1406:0:51182:51314							
ANR	8213208	FunctionDef	pl_main_get_page_set_on_command_line (const gs_memory_t * mem)		8213207	0					
ANR	8213209	CompoundStatement		1407:0:51248:51314	8213207	0					
ANR	8213210	ReturnStatement	return pl_main_get_instance ( mem ) -> page_set_on_command_line ;	1408:4:51254:51312	8213207	0	True				
ANR	8213211	PtrMemberAccess	pl_main_get_instance ( mem ) -> page_set_on_command_line		8213207	0					
ANR	8213212	CallExpression	pl_main_get_instance ( mem )		8213207	0					
ANR	8213213	Callee	pl_main_get_instance		8213207	0					
ANR	8213214	Identifier	pl_main_get_instance		8213207	0					
ANR	8213215	ArgumentList	mem		8213207	1					
ANR	8213216	Argument	mem		8213207	0					
ANR	8213217	Identifier	mem		8213207	0					
ANR	8213218	Identifier	page_set_on_command_line		8213207	1					
ANR	8213219	ReturnType	bool		8213207	1					
ANR	8213220	Identifier	pl_main_get_page_set_on_command_line		8213207	2					
ANR	8213221	ParameterList	const gs_memory_t * mem		8213207	3					
ANR	8213222	Parameter	const gs_memory_t * mem	1406:42:51224:51245	8213207	0	True				
ANR	8213223	ParameterType	const gs_memory_t *		8213207	0					
ANR	8213224	Identifier	mem		8213207	1					
ANR	8213225	CFGEntryNode	ENTRY		8213207		True				
ANR	8213226	CFGExitNode	EXIT		8213207		True				
ANR	8213227	Symbol	mem		8213207						
ANR	8213228	Symbol	pl_main_get_instance ( mem ) -> page_set_on_command_line		8213207						
ANR	8213229	Symbol	* pl_main_get_instance		8213207						
ANR	8213230	Symbol	pl_main_get_instance		8213207						
ANR	8213231	Function	pl_main_get_res_set_on_command_line	1411:0:51317:51447							
ANR	8213232	FunctionDef	pl_main_get_res_set_on_command_line (const gs_memory_t * mem)		8213231	0					
ANR	8213233	CompoundStatement		1412:0:51382:51447	8213231	0					
ANR	8213234	ReturnStatement	return pl_main_get_instance ( mem ) -> res_set_on_command_line ;	1413:4:51388:51445	8213231	0	True				
ANR	8213235	PtrMemberAccess	pl_main_get_instance ( mem ) -> res_set_on_command_line		8213231	0					
ANR	8213236	CallExpression	pl_main_get_instance ( mem )		8213231	0					
ANR	8213237	Callee	pl_main_get_instance		8213231	0					
ANR	8213238	Identifier	pl_main_get_instance		8213231	0					
ANR	8213239	ArgumentList	mem		8213231	1					
ANR	8213240	Argument	mem		8213231	0					
ANR	8213241	Identifier	mem		8213231	0					
ANR	8213242	Identifier	res_set_on_command_line		8213231	1					
ANR	8213243	ReturnType	bool		8213231	1					
ANR	8213244	Identifier	pl_main_get_res_set_on_command_line		8213231	2					
ANR	8213245	ParameterList	const gs_memory_t * mem		8213231	3					
ANR	8213246	Parameter	const gs_memory_t * mem	1411:41:51358:51379	8213231	0	True				
ANR	8213247	ParameterType	const gs_memory_t *		8213231	0					
ANR	8213248	Identifier	mem		8213231	1					
ANR	8213249	CFGEntryNode	ENTRY		8213231		True				
ANR	8213250	CFGExitNode	EXIT		8213231		True				
ANR	8213251	Symbol	mem		8213231						
ANR	8213252	Symbol	pl_main_get_instance ( mem ) -> res_set_on_command_line		8213231						
ANR	8213253	Symbol	* pl_main_get_instance		8213231						
ANR	8213254	Symbol	pl_main_get_instance		8213231						
ANR	8213255	Function	pl_main_get_high_level_device	1416:0:51450:51568							
ANR	8213256	FunctionDef	pl_main_get_high_level_device (const gs_memory_t * mem)		8213255	0					
ANR	8213257	CompoundStatement		1417:0:51509:51568	8213255	0					
ANR	8213258	ReturnStatement	return pl_main_get_instance ( mem ) -> high_level_device ;	1418:4:51515:51566	8213255	0	True				
ANR	8213259	PtrMemberAccess	pl_main_get_instance ( mem ) -> high_level_device		8213255	0					
ANR	8213260	CallExpression	pl_main_get_instance ( mem )		8213255	0					
ANR	8213261	Callee	pl_main_get_instance		8213255	0					
ANR	8213262	Identifier	pl_main_get_instance		8213255	0					
ANR	8213263	ArgumentList	mem		8213255	1					
ANR	8213264	Argument	mem		8213255	0					
ANR	8213265	Identifier	mem		8213255	0					
ANR	8213266	Identifier	high_level_device		8213255	1					
ANR	8213267	ReturnType	bool		8213255	1					
ANR	8213268	Identifier	pl_main_get_high_level_device		8213255	2					
ANR	8213269	ParameterList	const gs_memory_t * mem		8213255	3					
ANR	8213270	Parameter	const gs_memory_t * mem	1416:35:51485:51506	8213255	0	True				
ANR	8213271	ParameterType	const gs_memory_t *		8213255	0					
ANR	8213272	Identifier	mem		8213255	1					
ANR	8213273	CFGEntryNode	ENTRY		8213255		True				
ANR	8213274	CFGExitNode	EXIT		8213255		True				
ANR	8213275	Symbol	mem		8213255						
ANR	8213276	Symbol	pl_main_get_instance ( mem ) -> high_level_device		8213255						
ANR	8213277	Symbol	* pl_main_get_instance		8213255						
ANR	8213278	Symbol	pl_main_get_instance		8213255						
ANR	8213279	Function	pl_main_get_scanconverter	1421:0:51571:51681							
ANR	8213280	FunctionDef	pl_main_get_scanconverter (const gs_memory_t * mem)		8213279	0					
ANR	8213281	CompoundStatement		1422:0:51626:51681	8213279	0					
ANR	8213282	ReturnStatement	return pl_main_get_instance ( mem ) -> scanconverter ;	1423:4:51632:51679	8213279	0	True				
ANR	8213283	PtrMemberAccess	pl_main_get_instance ( mem ) -> scanconverter		8213279	0					
ANR	8213284	CallExpression	pl_main_get_instance ( mem )		8213279	0					
ANR	8213285	Callee	pl_main_get_instance		8213279	0					
ANR	8213286	Identifier	pl_main_get_instance		8213279	0					
ANR	8213287	ArgumentList	mem		8213279	1					
ANR	8213288	Argument	mem		8213279	0					
ANR	8213289	Identifier	mem		8213279	0					
ANR	8213290	Identifier	scanconverter		8213279	1					
ANR	8213291	ReturnType	bool		8213279	1					
ANR	8213292	Identifier	pl_main_get_scanconverter		8213279	2					
ANR	8213293	ParameterList	const gs_memory_t * mem		8213279	3					
ANR	8213294	Parameter	const gs_memory_t * mem	1421:31:51602:51623	8213279	0	True				
ANR	8213295	ParameterType	const gs_memory_t *		8213279	0					
ANR	8213296	Identifier	mem		8213279	1					
ANR	8213297	CFGEntryNode	ENTRY		8213279		True				
ANR	8213298	CFGExitNode	EXIT		8213279		True				
ANR	8213299	Symbol	mem		8213279						
ANR	8213300	Symbol	pl_main_get_instance ( mem ) -> scanconverter		8213279						
ANR	8213301	Symbol	* pl_main_get_instance		8213279						
ANR	8213302	Symbol	pl_main_get_instance		8213279						
ANR	8213303	Function	pl_set_icc_params	1426:0:51684:52546							
ANR	8213304	FunctionDef	"pl_set_icc_params (const gs_memory_t * mem , gs_gstate * pgs)"		8213303	0					
ANR	8213305	CompoundStatement		1428:0:51746:52546	8213303	0					
ANR	8213306	IdentifierDeclStatement	pl_main_instance_t * minst = pl_main_get_instance ( mem ) ;	1429:4:51752:51805	8213303	0	True				
ANR	8213307	IdentifierDecl	* minst = pl_main_get_instance ( mem )		8213303	0					
ANR	8213308	IdentifierDeclType	pl_main_instance_t *		8213303	0					
ANR	8213309	Identifier	minst		8213303	1					
ANR	8213310	AssignmentExpression	* minst = pl_main_get_instance ( mem )		8213303	2		=			
ANR	8213311	Identifier	minst		8213303	0					
ANR	8213312	CallExpression	pl_main_get_instance ( mem )		8213303	1					
ANR	8213313	Callee	pl_main_get_instance		8213303	0					
ANR	8213314	Identifier	pl_main_get_instance		8213303	0					
ANR	8213315	ArgumentList	mem		8213303	1					
ANR	8213316	Argument	mem		8213303	0					
ANR	8213317	Identifier	mem		8213303	0					
ANR	8213318	IdentifierDeclStatement	gs_param_string p ;	1430:4:51811:51828	8213303	1	True				
ANR	8213319	IdentifierDecl	p		8213303	0					
ANR	8213320	IdentifierDeclType	gs_param_string		8213303	0					
ANR	8213321	Identifier	p		8213303	1					
ANR	8213322	IdentifierDeclStatement	int code = 0 ;	1431:4:51834:51846	8213303	2	True				
ANR	8213323	IdentifierDecl	code = 0		8213303	0					
ANR	8213324	IdentifierDeclType	int		8213303	0					
ANR	8213325	Identifier	code		8213303	1					
ANR	8213326	AssignmentExpression	code = 0		8213303	2		=			
ANR	8213327	Identifier	code		8213303	0					
ANR	8213328	PrimaryExpression	0		8213303	1					
ANR	8213329	IfStatement	if ( minst -> pdefault_gray_icc )		8213303	3					
ANR	8213330	Condition	minst -> pdefault_gray_icc	1433:8:51861:51884	8213303	0	True				
ANR	8213331	PtrMemberAccess	minst -> pdefault_gray_icc		8213303	0					
ANR	8213332	Identifier	minst		8213303	0					
ANR	8213333	Identifier	pdefault_gray_icc		8213303	1					
ANR	8213334	CompoundStatement		6:34:140:140	8213303	1					
ANR	8213335	ExpressionStatement	"param_string_from_transient_string ( p , minst -> pdefault_gray_icc )"	1434:8:51897:51960	8213303	0	True				
ANR	8213336	CallExpression	"param_string_from_transient_string ( p , minst -> pdefault_gray_icc )"		8213303	0					
ANR	8213337	Callee	param_string_from_transient_string		8213303	0					
ANR	8213338	Identifier	param_string_from_transient_string		8213303	0					
ANR	8213339	ArgumentList	p		8213303	1					
ANR	8213340	Argument	p		8213303	0					
ANR	8213341	Identifier	p		8213303	0					
ANR	8213342	Argument	minst -> pdefault_gray_icc		8213303	1					
ANR	8213343	PtrMemberAccess	minst -> pdefault_gray_icc		8213303	0					
ANR	8213344	Identifier	minst		8213303	0					
ANR	8213345	Identifier	pdefault_gray_icc		8213303	1					
ANR	8213346	ExpressionStatement	"code = gs_setdefaultgrayicc ( pgs , & p )"	1435:8:51970:52006	8213303	1	True				
ANR	8213347	AssignmentExpression	"code = gs_setdefaultgrayicc ( pgs , & p )"		8213303	0		=			
ANR	8213348	Identifier	code		8213303	0					
ANR	8213349	CallExpression	"gs_setdefaultgrayicc ( pgs , & p )"		8213303	1					
ANR	8213350	Callee	gs_setdefaultgrayicc		8213303	0					
ANR	8213351	Identifier	gs_setdefaultgrayicc		8213303	0					
ANR	8213352	ArgumentList	pgs		8213303	1					
ANR	8213353	Argument	pgs		8213303	0					
ANR	8213354	Identifier	pgs		8213303	0					
ANR	8213355	Argument	& p		8213303	1					
ANR	8213356	UnaryOperationExpression	& p		8213303	0					
ANR	8213357	UnaryOperator	&		8213303	0					
ANR	8213358	Identifier	p		8213303	1					
ANR	8213359	IfStatement	if ( code < 0 )		8213303	2					
ANR	8213360	Condition	code < 0	1436:12:52020:52027	8213303	0	True				
ANR	8213361	RelationalExpression	code < 0		8213303	0		<			
ANR	8213362	Identifier	code		8213303	0					
ANR	8213363	PrimaryExpression	0		8213303	1					
ANR	8213364	ReturnStatement	return gs_throw_code ( gs_error_Fatal ) ;	1437:12:52042:52078	8213303	1	True				
ANR	8213365	CallExpression	gs_throw_code ( gs_error_Fatal )		8213303	0					
ANR	8213366	Callee	gs_throw_code		8213303	0					
ANR	8213367	Identifier	gs_throw_code		8213303	0					
ANR	8213368	ArgumentList	gs_error_Fatal		8213303	1					
ANR	8213369	Argument	gs_error_Fatal		8213303	0					
ANR	8213370	Identifier	gs_error_Fatal		8213303	0					
ANR	8213371	IfStatement	if ( minst -> pdefault_rgb_icc )		8213303	4					
ANR	8213372	Condition	minst -> pdefault_rgb_icc	1440:8:52095:52117	8213303	0	True				
ANR	8213373	PtrMemberAccess	minst -> pdefault_rgb_icc		8213303	0					
ANR	8213374	Identifier	minst		8213303	0					
ANR	8213375	Identifier	pdefault_rgb_icc		8213303	1					
ANR	8213376	CompoundStatement		13:33:373:373	8213303	1					
ANR	8213377	ExpressionStatement	"param_string_from_transient_string ( p , minst -> pdefault_rgb_icc )"	1441:8:52130:52192	8213303	0	True				
ANR	8213378	CallExpression	"param_string_from_transient_string ( p , minst -> pdefault_rgb_icc )"		8213303	0					
ANR	8213379	Callee	param_string_from_transient_string		8213303	0					
ANR	8213380	Identifier	param_string_from_transient_string		8213303	0					
ANR	8213381	ArgumentList	p		8213303	1					
ANR	8213382	Argument	p		8213303	0					
ANR	8213383	Identifier	p		8213303	0					
ANR	8213384	Argument	minst -> pdefault_rgb_icc		8213303	1					
ANR	8213385	PtrMemberAccess	minst -> pdefault_rgb_icc		8213303	0					
ANR	8213386	Identifier	minst		8213303	0					
ANR	8213387	Identifier	pdefault_rgb_icc		8213303	1					
ANR	8213388	ExpressionStatement	"code = gs_setdefaultrgbicc ( pgs , & p )"	1442:8:52202:52237	8213303	1	True				
ANR	8213389	AssignmentExpression	"code = gs_setdefaultrgbicc ( pgs , & p )"		8213303	0		=			
ANR	8213390	Identifier	code		8213303	0					
ANR	8213391	CallExpression	"gs_setdefaultrgbicc ( pgs , & p )"		8213303	1					
ANR	8213392	Callee	gs_setdefaultrgbicc		8213303	0					
ANR	8213393	Identifier	gs_setdefaultrgbicc		8213303	0					
ANR	8213394	ArgumentList	pgs		8213303	1					
ANR	8213395	Argument	pgs		8213303	0					
ANR	8213396	Identifier	pgs		8213303	0					
ANR	8213397	Argument	& p		8213303	1					
ANR	8213398	UnaryOperationExpression	& p		8213303	0					
ANR	8213399	UnaryOperator	&		8213303	0					
ANR	8213400	Identifier	p		8213303	1					
ANR	8213401	IfStatement	if ( code < 0 )		8213303	2					
ANR	8213402	Condition	code < 0	1443:12:52251:52258	8213303	0	True				
ANR	8213403	RelationalExpression	code < 0		8213303	0		<			
ANR	8213404	Identifier	code		8213303	0					
ANR	8213405	PrimaryExpression	0		8213303	1					
ANR	8213406	ReturnStatement	return gs_throw_code ( gs_error_Fatal ) ;	1444:12:52273:52309	8213303	1	True				
ANR	8213407	CallExpression	gs_throw_code ( gs_error_Fatal )		8213303	0					
ANR	8213408	Callee	gs_throw_code		8213303	0					
ANR	8213409	Identifier	gs_throw_code		8213303	0					
ANR	8213410	ArgumentList	gs_error_Fatal		8213303	1					
ANR	8213411	Argument	gs_error_Fatal		8213303	0					
ANR	8213412	Identifier	gs_error_Fatal		8213303	0					
ANR	8213413	IfStatement	if ( minst -> piccdir )		8213303	5					
ANR	8213414	Condition	minst -> piccdir	1447:8:52326:52339	8213303	0	True				
ANR	8213415	PtrMemberAccess	minst -> piccdir		8213303	0					
ANR	8213416	Identifier	minst		8213303	0					
ANR	8213417	Identifier	piccdir		8213303	1					
ANR	8213418	CompoundStatement		20:24:595:595	8213303	1					
ANR	8213419	ExpressionStatement	"param_string_from_transient_string ( p , minst -> piccdir )"	1448:8:52352:52405	8213303	0	True				
ANR	8213420	CallExpression	"param_string_from_transient_string ( p , minst -> piccdir )"		8213303	0					
ANR	8213421	Callee	param_string_from_transient_string		8213303	0					
ANR	8213422	Identifier	param_string_from_transient_string		8213303	0					
ANR	8213423	ArgumentList	p		8213303	1					
ANR	8213424	Argument	p		8213303	0					
ANR	8213425	Identifier	p		8213303	0					
ANR	8213426	Argument	minst -> piccdir		8213303	1					
ANR	8213427	PtrMemberAccess	minst -> piccdir		8213303	0					
ANR	8213428	Identifier	minst		8213303	0					
ANR	8213429	Identifier	piccdir		8213303	1					
ANR	8213430	ExpressionStatement	"code = gs_seticcdirectory ( pgs , & p )"	1449:8:52415:52449	8213303	1	True				
ANR	8213431	AssignmentExpression	"code = gs_seticcdirectory ( pgs , & p )"		8213303	0		=			
ANR	8213432	Identifier	code		8213303	0					
ANR	8213433	CallExpression	"gs_seticcdirectory ( pgs , & p )"		8213303	1					
ANR	8213434	Callee	gs_seticcdirectory		8213303	0					
ANR	8213435	Identifier	gs_seticcdirectory		8213303	0					
ANR	8213436	ArgumentList	pgs		8213303	1					
ANR	8213437	Argument	pgs		8213303	0					
ANR	8213438	Identifier	pgs		8213303	0					
ANR	8213439	Argument	& p		8213303	1					
ANR	8213440	UnaryOperationExpression	& p		8213303	0					
ANR	8213441	UnaryOperator	&		8213303	0					
ANR	8213442	Identifier	p		8213303	1					
ANR	8213443	IfStatement	if ( code < 0 )		8213303	2					
ANR	8213444	Condition	code < 0	1450:12:52463:52470	8213303	0	True				
ANR	8213445	RelationalExpression	code < 0		8213303	0		<			
ANR	8213446	Identifier	code		8213303	0					
ANR	8213447	PrimaryExpression	0		8213303	1					
ANR	8213448	ReturnStatement	return gs_throw_code ( gs_error_Fatal ) ;	1451:12:52485:52521	8213303	1	True				
ANR	8213449	CallExpression	gs_throw_code ( gs_error_Fatal )		8213303	0					
ANR	8213450	Callee	gs_throw_code		8213303	0					
ANR	8213451	Identifier	gs_throw_code		8213303	0					
ANR	8213452	ArgumentList	gs_error_Fatal		8213303	1					
ANR	8213453	Argument	gs_error_Fatal		8213303	0					
ANR	8213454	Identifier	gs_error_Fatal		8213303	0					
ANR	8213455	ReturnStatement	return code ;	1453:4:52533:52544	8213303	6	True				
ANR	8213456	Identifier	code		8213303	0					
ANR	8213457	ReturnType	int		8213303	1					
ANR	8213458	Identifier	pl_set_icc_params		8213303	2					
ANR	8213459	ParameterList	"const gs_memory_t * mem , gs_gstate * pgs"		8213303	3					
ANR	8213460	Parameter	const gs_memory_t * mem	1427:18:51706:51727	8213303	0	True				
ANR	8213461	ParameterType	const gs_memory_t *		8213303	0					
ANR	8213462	Identifier	mem		8213303	1					
ANR	8213463	Parameter	gs_gstate * pgs	1427:42:51730:51743	8213303	1	True				
ANR	8213464	ParameterType	gs_gstate *		8213303	0					
ANR	8213465	Identifier	pgs		8213303	1					
ANR	8213466	CFGEntryNode	ENTRY		8213303		True				
ANR	8213467	CFGExitNode	EXIT		8213303		True				
ANR	8213468	Symbol	gs_error_Fatal		8213303						
ANR	8213469	Symbol	minst		8213303						
ANR	8213470	Symbol	code		8213303						
ANR	8213471	Symbol	gs_setdefaultrgbicc		8213303						
ANR	8213472	Symbol	pl_main_get_instance		8213303						
ANR	8213473	Symbol	* minst		8213303						
ANR	8213474	Symbol	p		8213303						
ANR	8213475	Symbol	minst -> pdefault_gray_icc		8213303						
ANR	8213476	Symbol	gs_throw_code		8213303						
ANR	8213477	Symbol	gs_setdefaultgrayicc		8213303						
ANR	8213478	Symbol	minst -> piccdir		8213303						
ANR	8213479	Symbol	mem		8213303						
ANR	8213480	Symbol	gs_seticcdirectory		8213303						
ANR	8213481	Symbol	minst -> pdefault_rgb_icc		8213303						
ANR	8213482	Symbol	& p		8213303						
ANR	8213483	Symbol	pgs		8213303						
ANR	8213484	Function	pl_finish_page	1456:0:52549:53185							
ANR	8213485	FunctionDef	"pl_finish_page (pl_main_instance_t * pmi , gs_gstate * pgs , int num_copies , int flush)"		8213484	0					
ANR	8213486	CompoundStatement		1458:0:52638:53185	8213484	0					
ANR	8213487	IdentifierDeclStatement	int code = 0 ;	1459:4:52644:52663	8213484	0	True				
ANR	8213488	IdentifierDecl	code = 0		8213484	0					
ANR	8213489	IdentifierDeclType	int		8213484	0					
ANR	8213490	Identifier	code		8213484	1					
ANR	8213491	AssignmentExpression	code = 0		8213484	2		=			
ANR	8213492	Identifier	code		8213484	0					
ANR	8213493	PrimaryExpression	0		8213484	1					
ANR	8213494	IdentifierDeclStatement	gx_device * pdev = pmi -> device ;	1460:4:52669:52698	8213484	1	True				
ANR	8213495	IdentifierDecl	* pdev = pmi -> device		8213484	0					
ANR	8213496	IdentifierDeclType	gx_device *		8213484	0					
ANR	8213497	Identifier	pdev		8213484	1					
ANR	8213498	AssignmentExpression	* pdev = pmi -> device		8213484	2		=			
ANR	8213499	Identifier	pdev		8213484	0					
ANR	8213500	PtrMemberAccess	pmi -> device		8213484	1					
ANR	8213501	Identifier	pmi		8213484	0					
ANR	8213502	Identifier	device		8213484	1					
ANR	8213503	IfStatement	if ( gs_debug_c ( ':' ) )		8213484	2					
ANR	8213504	Condition	gs_debug_c ( ':' )	1463:8:52735:52749	8213484	0	True				
ANR	8213505	CallExpression	gs_debug_c ( ':' )		8213484	0					
ANR	8213506	Callee	gs_debug_c		8213484	0					
ANR	8213507	Identifier	gs_debug_c		8213484	0					
ANR	8213508	ArgumentList	':'		8213484	1					
ANR	8213509	Argument	':'		8213484	0					
ANR	8213510	PrimaryExpression	':'		8213484	0					
ANR	8213511	ExpressionStatement	"pl_print_usage ( pmi , ""parse done :"" )"	1464:8:52760:52795	8213484	1	True				
ANR	8213512	CallExpression	"pl_print_usage ( pmi , ""parse done :"" )"		8213484	0					
ANR	8213513	Callee	pl_print_usage		8213484	0					
ANR	8213514	Identifier	pl_print_usage		8213484	0					
ANR	8213515	ArgumentList	pmi		8213484	1					
ANR	8213516	Argument	pmi		8213484	0					
ANR	8213517	Identifier	pmi		8213484	0					
ANR	8213518	Argument	"""parse done :"""		8213484	1					
ANR	8213519	PrimaryExpression	"""parse done :"""		8213484	0					
ANR	8213520	ExpressionStatement	"code = gs_output_page ( pgs , num_copies , flush )"	1465:4:52801:52846	8213484	3	True				
ANR	8213521	AssignmentExpression	"code = gs_output_page ( pgs , num_copies , flush )"		8213484	0		=			
ANR	8213522	Identifier	code		8213484	0					
ANR	8213523	CallExpression	"gs_output_page ( pgs , num_copies , flush )"		8213484	1					
ANR	8213524	Callee	gs_output_page		8213484	0					
ANR	8213525	Identifier	gs_output_page		8213484	0					
ANR	8213526	ArgumentList	pgs		8213484	1					
ANR	8213527	Argument	pgs		8213484	0					
ANR	8213528	Identifier	pgs		8213484	0					
ANR	8213529	Argument	num_copies		8213484	1					
ANR	8213530	Identifier	num_copies		8213484	0					
ANR	8213531	Argument	flush		8213484	2					
ANR	8213532	Identifier	flush		8213484	0					
ANR	8213533	IfStatement	if ( code < 0 )		8213484	4					
ANR	8213534	Condition	code < 0	1466:8:52856:52863	8213484	0	True				
ANR	8213535	RelationalExpression	code < 0		8213484	0		<			
ANR	8213536	Identifier	code		8213484	0					
ANR	8213537	PrimaryExpression	0		8213484	1					
ANR	8213538	ReturnStatement	return code ;	1467:8:52874:52885	8213484	1	True				
ANR	8213539	Identifier	code		8213484	0					
ANR	8213540	IfStatement	if ( pmi -> pause )		8213484	5					
ANR	8213541	Condition	pmi -> pause	1469:8:52896:52905	8213484	0	True				
ANR	8213542	PtrMemberAccess	pmi -> pause		8213484	0					
ANR	8213543	Identifier	pmi		8213484	0					
ANR	8213544	Identifier	pause		8213484	1					
ANR	8213545	CompoundStatement		13:8:279:295	8213484	1					
ANR	8213546	IdentifierDeclStatement	char strbuf [ 256 ] ;	1470:8:52918:52934	8213484	0	True				
ANR	8213547	IdentifierDecl	strbuf [ 256 ]		8213484	0					
ANR	8213548	IdentifierDeclType	char [ 256 ]		8213484	0					
ANR	8213549	Identifier	strbuf		8213484	1					
ANR	8213550	PrimaryExpression	256		8213484	2					
ANR	8213551	ExpressionStatement	"gs_sprintf ( strbuf , ""End of page %d, press <enter> to continue.\\n"" , pdev -> PageCount )"	1472:8:52945:53044	8213484	1	True				
ANR	8213552	CallExpression	"gs_sprintf ( strbuf , ""End of page %d, press <enter> to continue.\\n"" , pdev -> PageCount )"		8213484	0					
ANR	8213553	Callee	gs_sprintf		8213484	0					
ANR	8213554	Identifier	gs_sprintf		8213484	0					
ANR	8213555	ArgumentList	strbuf		8213484	1					
ANR	8213556	Argument	strbuf		8213484	0					
ANR	8213557	Identifier	strbuf		8213484	0					
ANR	8213558	Argument	"""End of page %d, press <enter> to continue.\\n"""		8213484	1					
ANR	8213559	PrimaryExpression	"""End of page %d, press <enter> to continue.\\n"""		8213484	0					
ANR	8213560	Argument	pdev -> PageCount		8213484	2					
ANR	8213561	PtrMemberAccess	pdev -> PageCount		8213484	0					
ANR	8213562	Identifier	pdev		8213484	0					
ANR	8213563	Identifier	PageCount		8213484	1					
ANR	8213564	ExpressionStatement	"pl_log_string ( pmi -> memory , strbuf , 1 )"	1474:8:53054:53091	8213484	2	True				
ANR	8213565	CallExpression	"pl_log_string ( pmi -> memory , strbuf , 1 )"		8213484	0					
ANR	8213566	Callee	pl_log_string		8213484	0					
ANR	8213567	Identifier	pl_log_string		8213484	0					
ANR	8213568	ArgumentList	pmi -> memory		8213484	1					
ANR	8213569	Argument	pmi -> memory		8213484	0					
ANR	8213570	PtrMemberAccess	pmi -> memory		8213484	0					
ANR	8213571	Identifier	pmi		8213484	0					
ANR	8213572	Identifier	memory		8213484	1					
ANR	8213573	Argument	strbuf		8213484	1					
ANR	8213574	Identifier	strbuf		8213484	0					
ANR	8213575	Argument	1		8213484	2					
ANR	8213576	PrimaryExpression	1		8213484	0					
ANR	8213577	ElseStatement	else		8213484	0					
ANR	8213578	IfStatement	if ( gs_debug_c ( ':' ) )		8213484	0					
ANR	8213579	Condition	gs_debug_c ( ':' )	1475:15:53108:53122	8213484	0	True				
ANR	8213580	CallExpression	gs_debug_c ( ':' )		8213484	0					
ANR	8213581	Callee	gs_debug_c		8213484	0					
ANR	8213582	Identifier	gs_debug_c		8213484	0					
ANR	8213583	ArgumentList	':'		8213484	1					
ANR	8213584	Argument	':'		8213484	0					
ANR	8213585	PrimaryExpression	':'		8213484	0					
ANR	8213586	ExpressionStatement	"pl_print_usage ( pmi , ""render done :"" )"	1476:8:53133:53169	8213484	1	True				
ANR	8213587	CallExpression	"pl_print_usage ( pmi , ""render done :"" )"		8213484	0					
ANR	8213588	Callee	pl_print_usage		8213484	0					
ANR	8213589	Identifier	pl_print_usage		8213484	0					
ANR	8213590	ArgumentList	pmi		8213484	1					
ANR	8213591	Argument	pmi		8213484	0					
ANR	8213592	Identifier	pmi		8213484	0					
ANR	8213593	Argument	"""render done :"""		8213484	1					
ANR	8213594	PrimaryExpression	"""render done :"""		8213484	0					
ANR	8213595	ReturnStatement	return 0 ;	1477:4:53175:53183	8213484	6	True				
ANR	8213596	PrimaryExpression	0		8213484	0					
ANR	8213597	ReturnType	int		8213484	1					
ANR	8213598	Identifier	pl_finish_page		8213484	2					
ANR	8213599	ParameterList	"pl_main_instance_t * pmi , gs_gstate * pgs , int num_copies , int flush"		8213484	3					
ANR	8213600	Parameter	pl_main_instance_t * pmi	1457:15:52568:52591	8213484	0	True				
ANR	8213601	ParameterType	pl_main_instance_t *		8213484	0					
ANR	8213602	Identifier	pmi		8213484	1					
ANR	8213603	Parameter	gs_gstate * pgs	1457:41:52594:52608	8213484	1	True				
ANR	8213604	ParameterType	gs_gstate *		8213484	0					
ANR	8213605	Identifier	pgs		8213484	1					
ANR	8213606	Parameter	int num_copies	1457:58:52611:52624	8213484	2	True				
ANR	8213607	ParameterType	int		8213484	0					
ANR	8213608	Identifier	num_copies		8213484	1					
ANR	8213609	Parameter	int flush	1457:74:52627:52635	8213484	3	True				
ANR	8213610	ParameterType	int		8213484	0					
ANR	8213611	Identifier	flush		8213484	1					
ANR	8213612	CFGEntryNode	ENTRY		8213484		True				
ANR	8213613	CFGExitNode	EXIT		8213484		True				
ANR	8213614	Symbol	code		8213484						
ANR	8213615	Symbol	gs_output_page		8213484						
ANR	8213616	Symbol	pmi -> device		8213484						
ANR	8213617	Symbol	num_copies		8213484						
ANR	8213618	Symbol	pmi -> pause		8213484						
ANR	8213619	Symbol	pmi		8213484						
ANR	8213620	Symbol	pmi -> memory		8213484						
ANR	8213621	Symbol	pdev		8213484						
ANR	8213622	Symbol	flush		8213484						
ANR	8213623	Symbol	pdev -> PageCount		8213484						
ANR	8213624	Symbol	* pmi		8213484						
ANR	8213625	Symbol	strbuf		8213484						
ANR	8213626	Symbol	* pdev		8213484						
ANR	8213627	Symbol	gs_debug_c		8213484						
ANR	8213628	Symbol	pgs		8213484						
