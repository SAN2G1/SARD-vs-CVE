command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10633982	File	data/converged/CVE-2018-16863_ghostpdl/untgz.c								
ANR	10633983	ClassDef	tar_header	68:0:1818:2600							
ANR	10633984	DeclStmt									
ANR	10633985	Decl							char	char [ 100 ]	name
ANR	10633986	DeclStmt									
ANR	10633987	Decl							char	char [ 8 ]	mode
ANR	10633988	DeclStmt									
ANR	10633989	Decl							char	char [ 8 ]	uid
ANR	10633990	DeclStmt									
ANR	10633991	Decl							char	char [ 8 ]	gid
ANR	10633992	DeclStmt									
ANR	10633993	Decl							char	char [ 12 ]	size
ANR	10633994	DeclStmt									
ANR	10633995	Decl							char	char [ 12 ]	mtime
ANR	10633996	DeclStmt									
ANR	10633997	Decl							char	char [ 8 ]	chksum
ANR	10633998	DeclStmt									
ANR	10633999	Decl							char	char	typeflag
ANR	10634000	DeclStmt									
ANR	10634001	Decl							char	char [ 100 ]	linkname
ANR	10634002	DeclStmt									
ANR	10634003	Decl							char	char [ 6 ]	magic
ANR	10634004	DeclStmt									
ANR	10634005	Decl							char	char [ 2 ]	version
ANR	10634006	DeclStmt									
ANR	10634007	Decl							char	char [ 32 ]	uname
ANR	10634008	DeclStmt									
ANR	10634009	Decl							char	char [ 32 ]	gname
ANR	10634010	DeclStmt									
ANR	10634011	Decl							char	char [ 8 ]	devmajor
ANR	10634012	DeclStmt									
ANR	10634013	Decl							char	char [ 8 ]	devminor
ANR	10634014	DeclStmt									
ANR	10634015	Decl							char	char [ 155 ]	prefix
ANR	10634016	ClassDef	tar_buffer	89:0:2604:2692							
ANR	10634017	DeclStmt									
ANR	10634018	Decl							char	char [ BLOCKSIZE ]	buffer
ANR	10634019	DeclStmt									
ANR	10634020	Decl							struct tar_header	struct tar_header	header
ANR	10634021	ClassDef	attr_item	95:0:2696:2824							
ANR	10634022	DeclStmt									
ANR	10634023	Decl							struct attr_item	struct attr_item *	next
ANR	10634024	DeclStmt									
ANR	10634025	Decl							char	char *	fname
ANR	10634026	DeclStmt									
ANR	10634027	Decl							int	int	mode
ANR	10634028	DeclStmt									
ANR	10634029	Decl							time_t	time_t	time
ANR	10634030	ClassDef	<unnamed>	103:0:2828:2870							
ANR	10634031	DeclStmt									
ANR	10634032	Decl							void help	void help	OF
ANR	10634033	DeclStmt									
ANR	10634034	Decl							char	char *	prog
ANR	10634035	DeclStmt									
ANR	10634036	Decl							const char	const char * [ ]	TGZsuffix
ANR	10634037	Function	TGZfname	132:0:3719:4022							
ANR	10634038	FunctionDef	TGZfname (const char * arcname)		10634037	0					
ANR	10634039	CompoundStatement		133:0:3756:4022	10634037	0					
ANR	10634040	Statement	static	134:2:3760:3765	10634037	0	True				
ANR	10634041	IdentifierDeclStatement	char buffer [ 1024 ] ;	134:9:3767:3784	10634037	1	True				
ANR	10634042	IdentifierDecl	buffer [ 1024 ]		10634037	0					
ANR	10634043	IdentifierDeclType	char [ 1024 ]		10634037	0					
ANR	10634044	Identifier	buffer		10634037	1					
ANR	10634045	PrimaryExpression	1024		10634037	2					
ANR	10634046	IdentifierDeclStatement	"int origlen , i ;"	135:2:3788:3801	10634037	2	True				
ANR	10634047	IdentifierDecl	origlen		10634037	0					
ANR	10634048	IdentifierDeclType	int		10634037	0					
ANR	10634049	Identifier	origlen		10634037	1					
ANR	10634050	IdentifierDecl	i		10634037	1					
ANR	10634051	IdentifierDeclType	int		10634037	0					
ANR	10634052	Identifier	i		10634037	1					
ANR	10634053	ExpressionStatement	"strcpy ( buffer , arcname )"	137:2:3806:3828	10634037	3	True				
ANR	10634054	CallExpression	"strcpy ( buffer , arcname )"		10634037	0					
ANR	10634055	Callee	strcpy		10634037	0					
ANR	10634056	Identifier	strcpy		10634037	0					
ANR	10634057	ArgumentList	buffer		10634037	1					
ANR	10634058	Argument	buffer		10634037	0					
ANR	10634059	Identifier	buffer		10634037	0					
ANR	10634060	Argument	arcname		10634037	1					
ANR	10634061	Identifier	arcname		10634037	0					
ANR	10634062	ExpressionStatement	origlen = strlen ( buffer )	138:2:3832:3856	10634037	4	True				
ANR	10634063	AssignmentExpression	origlen = strlen ( buffer )		10634037	0		=			
ANR	10634064	Identifier	origlen		10634037	0					
ANR	10634065	CallExpression	strlen ( buffer )		10634037	1					
ANR	10634066	Callee	strlen		10634037	0					
ANR	10634067	Identifier	strlen		10634037	0					
ANR	10634068	ArgumentList	buffer		10634037	1					
ANR	10634069	Argument	buffer		10634037	0					
ANR	10634070	Identifier	buffer		10634037	0					
ANR	10634071	ForStatement	for ( i = 0 ; TGZsuffix [ i ] ; i ++ )		10634037	5					
ANR	10634072	ForInit	i = 0 ;	140:7:3866:3869	10634037	0	True				
ANR	10634073	AssignmentExpression	i = 0		10634037	0		=			
ANR	10634074	Identifier	i		10634037	0					
ANR	10634075	PrimaryExpression	0		10634037	1					
ANR	10634076	Condition	TGZsuffix [ i ]	140:12:3871:3882	10634037	1	True				
ANR	10634077	ArrayIndexing	TGZsuffix [ i ]		10634037	0					
ANR	10634078	Identifier	TGZsuffix		10634037	0					
ANR	10634079	Identifier	i		10634037	1					
ANR	10634080	PostIncDecOperationExpression	i ++	140:26:3885:3887	10634037	2	True				
ANR	10634081	Identifier	i		10634037	0					
ANR	10634082	IncDec	++		10634037	1					
ANR	10634083	CompoundStatement		9:4:137:137	10634037	3					
ANR	10634084	ExpressionStatement	"strcpy ( buffer + origlen , TGZsuffix [ i ] )"	142:7:3903:3938	10634037	0	True				
ANR	10634085	CallExpression	"strcpy ( buffer + origlen , TGZsuffix [ i ] )"		10634037	0					
ANR	10634086	Callee	strcpy		10634037	0					
ANR	10634087	Identifier	strcpy		10634037	0					
ANR	10634088	ArgumentList	buffer + origlen		10634037	1					
ANR	10634089	Argument	buffer + origlen		10634037	0					
ANR	10634090	AdditiveExpression	buffer + origlen		10634037	0		+			
ANR	10634091	Identifier	buffer		10634037	0					
ANR	10634092	Identifier	origlen		10634037	1					
ANR	10634093	Argument	TGZsuffix [ i ]		10634037	1					
ANR	10634094	ArrayIndexing	TGZsuffix [ i ]		10634037	0					
ANR	10634095	Identifier	TGZsuffix		10634037	0					
ANR	10634096	Identifier	i		10634037	1					
ANR	10634097	IfStatement	"if ( access ( buffer , F_OK ) == 0 )"		10634037	1					
ANR	10634098	Condition	"access ( buffer , F_OK ) == 0"	143:11:3951:3974	10634037	0	True				
ANR	10634099	EqualityExpression	"access ( buffer , F_OK ) == 0"		10634037	0		==			
ANR	10634100	CallExpression	"access ( buffer , F_OK )"		10634037	0					
ANR	10634101	Callee	access		10634037	0					
ANR	10634102	Identifier	access		10634037	0					
ANR	10634103	ArgumentList	buffer		10634037	1					
ANR	10634104	Argument	buffer		10634037	0					
ANR	10634105	Identifier	buffer		10634037	0					
ANR	10634106	Argument	F_OK		10634037	1					
ANR	10634107	Identifier	F_OK		10634037	0					
ANR	10634108	PrimaryExpression	0		10634037	1					
ANR	10634109	ReturnStatement	return buffer ;	144:9:3986:3999	10634037	1	True				
ANR	10634110	Identifier	buffer		10634037	0					
ANR	10634111	ReturnStatement	return NULL ;	146:2:4009:4020	10634037	6	True				
ANR	10634112	Identifier	NULL		10634037	0					
ANR	10634113	ReturnType	char *		10634037	1					
ANR	10634114	Identifier	TGZfname		10634037	2					
ANR	10634115	ParameterList	const char * arcname		10634037	3					
ANR	10634116	Parameter	const char * arcname	132:16:3735:3753	10634037	0	True				
ANR	10634117	ParameterType	const char *		10634037	0					
ANR	10634118	Identifier	arcname		10634037	1					
ANR	10634119	CFGEntryNode	ENTRY		10634037		True				
ANR	10634120	CFGExitNode	EXIT		10634037		True				
ANR	10634121	Symbol	origlen		10634037						
ANR	10634122	Symbol	strlen		10634037						
ANR	10634123	Symbol	* i		10634037						
ANR	10634124	Symbol	access		10634037						
ANR	10634125	Symbol	NULL		10634037						
ANR	10634126	Symbol	F_OK		10634037						
ANR	10634127	Symbol	arcname		10634037						
ANR	10634128	Symbol	* TGZsuffix		10634037						
ANR	10634129	Symbol	i		10634037						
ANR	10634130	Symbol	buffer		10634037						
ANR	10634131	Symbol	TGZsuffix		10634037						
ANR	10634132	Function	TGZnotfound	152:0:4064:4310							
ANR	10634133	FunctionDef	TGZnotfound (const char * arcname)		10634132	0					
ANR	10634134	CompoundStatement		153:0:4103:4310	10634132	0					
ANR	10634135	IdentifierDeclStatement	int i ;	154:2:4107:4112	10634132	0	True				
ANR	10634136	IdentifierDecl	i		10634132	0					
ANR	10634137	IdentifierDeclType	int		10634132	0					
ANR	10634138	Identifier	i		10634132	1					
ANR	10634139	ExpressionStatement	"fprintf ( stderr , ""%s: Couldn't find "" , prog )"	156:2:4117:4158	10634132	1	True				
ANR	10634140	CallExpression	"fprintf ( stderr , ""%s: Couldn't find "" , prog )"		10634132	0					
ANR	10634141	Callee	fprintf		10634132	0					
ANR	10634142	Identifier	fprintf		10634132	0					
ANR	10634143	ArgumentList	stderr		10634132	1					
ANR	10634144	Argument	stderr		10634132	0					
ANR	10634145	Identifier	stderr		10634132	0					
ANR	10634146	Argument	"""%s: Couldn't find """		10634132	1					
ANR	10634147	PrimaryExpression	"""%s: Couldn't find """		10634132	0					
ANR	10634148	Argument	prog		10634132	2					
ANR	10634149	Identifier	prog		10634132	0					
ANR	10634150	ForStatement	for ( i = 0 ; TGZsuffix [ i ] ; i ++ )		10634132	2					
ANR	10634151	ForInit	i = 0 ;	157:7:4167:4170	10634132	0	True				
ANR	10634152	AssignmentExpression	i = 0		10634132	0		=			
ANR	10634153	Identifier	i		10634132	0					
ANR	10634154	PrimaryExpression	0		10634132	1					
ANR	10634155	Condition	TGZsuffix [ i ]	157:11:4171:4182	10634132	1	True				
ANR	10634156	ArrayIndexing	TGZsuffix [ i ]		10634132	0					
ANR	10634157	Identifier	TGZsuffix		10634132	0					
ANR	10634158	Identifier	i		10634132	1					
ANR	10634159	PostIncDecOperationExpression	i ++	157:24:4184:4186	10634132	2	True				
ANR	10634160	Identifier	i		10634132	0					
ANR	10634161	IncDec	++		10634132	1					
ANR	10634162	ExpressionStatement	"fprintf ( stderr , ( TGZsuffix [ i + 1 ] ) ? ""%s%s, "" : ""or %s%s\\n"" , arcname , TGZsuffix [ i ] )"	158:4:4193:4297	10634132	3	True				
ANR	10634163	CallExpression	"fprintf ( stderr , ( TGZsuffix [ i + 1 ] ) ? ""%s%s, "" : ""or %s%s\\n"" , arcname , TGZsuffix [ i ] )"		10634132	0					
ANR	10634164	Callee	fprintf		10634132	0					
ANR	10634165	Identifier	fprintf		10634132	0					
ANR	10634166	ArgumentList	stderr		10634132	1					
ANR	10634167	Argument	stderr		10634132	0					
ANR	10634168	Identifier	stderr		10634132	0					
ANR	10634169	Argument	"( TGZsuffix [ i + 1 ] ) ? ""%s%s, "" : ""or %s%s\\n"""		10634132	1					
ANR	10634170	ConditionalExpression	"( TGZsuffix [ i + 1 ] ) ? ""%s%s, "" : ""or %s%s\\n"""		10634132	0					
ANR	10634171	Condition	TGZsuffix [ i + 1 ]		10634132	0					
ANR	10634172	ArrayIndexing	TGZsuffix [ i + 1 ]		10634132	0					
ANR	10634173	Identifier	TGZsuffix		10634132	0					
ANR	10634174	AdditiveExpression	i + 1		10634132	1		+			
ANR	10634175	Identifier	i		10634132	0					
ANR	10634176	PrimaryExpression	1		10634132	1					
ANR	10634177	PrimaryExpression	"""%s%s, """		10634132	1					
ANR	10634178	PrimaryExpression	"""or %s%s\\n"""		10634132	2					
ANR	10634179	Argument	arcname		10634132	2					
ANR	10634180	Identifier	arcname		10634132	0					
ANR	10634181	Argument	TGZsuffix [ i ]		10634132	3					
ANR	10634182	ArrayIndexing	TGZsuffix [ i ]		10634132	0					
ANR	10634183	Identifier	TGZsuffix		10634132	0					
ANR	10634184	Identifier	i		10634132	1					
ANR	10634185	ExpressionStatement	exit ( 1 )	161:2:4301:4308	10634132	3	True				
ANR	10634186	CallExpression	exit ( 1 )		10634132	0					
ANR	10634187	Callee	exit		10634132	0					
ANR	10634188	Identifier	exit		10634132	0					
ANR	10634189	ArgumentList	1		10634132	1					
ANR	10634190	Argument	1		10634132	0					
ANR	10634191	PrimaryExpression	1		10634132	0					
ANR	10634192	ReturnType	void		10634132	1					
ANR	10634193	Identifier	TGZnotfound		10634132	2					
ANR	10634194	ParameterList	const char * arcname		10634132	3					
ANR	10634195	Parameter	const char * arcname	152:18:4082:4100	10634132	0	True				
ANR	10634196	ParameterType	const char *		10634132	0					
ANR	10634197	Identifier	arcname		10634132	1					
ANR	10634198	CFGEntryNode	ENTRY		10634132		True				
ANR	10634199	CFGExitNode	EXIT		10634132		True				
ANR	10634200	Symbol	* i		10634132						
ANR	10634201	Symbol	arcname		10634132						
ANR	10634202	Symbol	* TGZsuffix		10634132						
ANR	10634203	Symbol	i		10634132						
ANR	10634204	Symbol	stderr		10634132						
ANR	10634205	Symbol	prog		10634132						
ANR	10634206	Symbol	TGZsuffix		10634132						
ANR	10634207	Function	getoct	168:0:4374:4658							
ANR	10634208	FunctionDef	"getoct (char * p , int width)"		10634207	0					
ANR	10634209	CompoundStatement		169:0:4405:4658	10634207	0					
ANR	10634210	IdentifierDeclStatement	int result = 0 ;	170:2:4409:4423	10634207	0	True				
ANR	10634211	IdentifierDecl	result = 0		10634207	0					
ANR	10634212	IdentifierDeclType	int		10634207	0					
ANR	10634213	Identifier	result		10634207	1					
ANR	10634214	AssignmentExpression	result = 0		10634207	2		=			
ANR	10634215	Identifier	result		10634207	0					
ANR	10634216	PrimaryExpression	0		10634207	1					
ANR	10634217	IdentifierDeclStatement	char c ;	171:2:4427:4433	10634207	1	True				
ANR	10634218	IdentifierDecl	c		10634207	0					
ANR	10634219	IdentifierDeclType	char		10634207	0					
ANR	10634220	Identifier	c		10634207	1					
ANR	10634221	WhileStatement	while ( width -- )		10634207	2					
ANR	10634222	Condition	width --	173:9:4445:4451	10634207	0	True				
ANR	10634223	PostIncDecOperationExpression	width --		10634207	0					
ANR	10634224	Identifier	width		10634207	0					
ANR	10634225	IncDec	--		10634207	1					
ANR	10634226	CompoundStatement		6:4:52:52	10634207	1					
ANR	10634227	ExpressionStatement	c = * p ++	175:6:4466:4474	10634207	0	True				
ANR	10634228	AssignmentExpression	c = * p ++		10634207	0		=			
ANR	10634229	Identifier	c		10634207	0					
ANR	10634230	UnaryOperationExpression	* p ++		10634207	1					
ANR	10634231	UnaryOperator	*		10634207	0					
ANR	10634232	PostIncDecOperationExpression	p ++		10634207	1					
ANR	10634233	Identifier	p		10634207	0					
ANR	10634234	IncDec	++		10634207	1					
ANR	10634235	IfStatement	if ( c == 0 )		10634207	1					
ANR	10634236	Condition	c == 0	176:10:4486:4491	10634207	0	True				
ANR	10634237	EqualityExpression	c == 0		10634207	0		==			
ANR	10634238	Identifier	c		10634207	0					
ANR	10634239	PrimaryExpression	0		10634207	1					
ANR	10634240	BreakStatement	break ;	177:8:4502:4507	10634207	1	True				
ANR	10634241	IfStatement	if ( c == ' ' )		10634207	2					
ANR	10634242	Condition	c == ' '	178:10:4519:4526	10634207	0	True				
ANR	10634243	EqualityExpression	c == ' '		10634207	0		==			
ANR	10634244	Identifier	c		10634207	0					
ANR	10634245	PrimaryExpression	' '		10634207	1					
ANR	10634246	ContinueStatement	continue ;	179:8:4537:4545	10634207	1	True				
ANR	10634247	IfStatement	if ( c < '0' || c > '7' )		10634207	3					
ANR	10634248	Condition	c < '0' || c > '7'	180:10:4557:4574	10634207	0	True				
ANR	10634249	OrExpression	c < '0' || c > '7'		10634207	0		||			
ANR	10634250	RelationalExpression	c < '0'		10634207	0		<			
ANR	10634251	Identifier	c		10634207	0					
ANR	10634252	PrimaryExpression	'0'		10634207	1					
ANR	10634253	RelationalExpression	c > '7'		10634207	1		>			
ANR	10634254	Identifier	c		10634207	0					
ANR	10634255	PrimaryExpression	'7'		10634207	1					
ANR	10634256	ReturnStatement	return - 1 ;	181:8:4585:4594	10634207	1	True				
ANR	10634257	UnaryOperationExpression	- 1		10634207	0					
ANR	10634258	UnaryOperator	-		10634207	0					
ANR	10634259	PrimaryExpression	1		10634207	1					
ANR	10634260	ExpressionStatement	result = result * 8 + ( c - '0' )	182:6:4602:4633	10634207	4	True				
ANR	10634261	AssignmentExpression	result = result * 8 + ( c - '0' )		10634207	0		=			
ANR	10634262	Identifier	result		10634207	0					
ANR	10634263	AdditiveExpression	result * 8 + ( c - '0' )		10634207	1		+			
ANR	10634264	MultiplicativeExpression	result * 8		10634207	0		*			
ANR	10634265	Identifier	result		10634207	0					
ANR	10634266	PrimaryExpression	8		10634207	1					
ANR	10634267	AdditiveExpression	c - '0'		10634207	1		-			
ANR	10634268	Identifier	c		10634207	0					
ANR	10634269	PrimaryExpression	'0'		10634207	1					
ANR	10634270	ReturnStatement	return result ;	184:2:4643:4656	10634207	3	True				
ANR	10634271	Identifier	result		10634207	0					
ANR	10634272	ReturnType	int		10634207	1					
ANR	10634273	Identifier	getoct		10634207	2					
ANR	10634274	ParameterList	"char * p , int width"		10634207	3					
ANR	10634275	Parameter	char * p	168:12:4386:4392	10634207	0	True				
ANR	10634276	ParameterType	char *		10634207	0					
ANR	10634277	Identifier	p		10634207	1					
ANR	10634278	Parameter	int width	168:20:4394:4402	10634207	1	True				
ANR	10634279	ParameterType	int		10634207	0					
ANR	10634280	Identifier	width		10634207	1					
ANR	10634281	CFGEntryNode	ENTRY		10634207		True				
ANR	10634282	CFGExitNode	EXIT		10634207		True				
ANR	10634283	Symbol	p		10634207						
ANR	10634284	Symbol	result		10634207						
ANR	10634285	Symbol	c		10634207						
ANR	10634286	Symbol	* p ++		10634207						
ANR	10634287	Symbol	width		10634207						
ANR	10634288	Function	strtime	191:0:4737:5025							
ANR	10634289	FunctionDef	strtime (time_t * t)		10634288	0					
ANR	10634290	CompoundStatement		192:0:4763:5025	10634288	0					
ANR	10634291	IdentifierDeclStatement	struct tm * local ;	193:2:4767:4785	10634288	0	True				
ANR	10634292	IdentifierDecl	* local		10634288	0					
ANR	10634293	IdentifierDeclType	struct tm *		10634288	0					
ANR	10634294	Identifier	local		10634288	1					
ANR	10634295	Statement	static	194:2:4789:4794	10634288	1	True				
ANR	10634296	IdentifierDeclStatement	char result [ 32 ] ;	194:9:4796:4811	10634288	2	True				
ANR	10634297	IdentifierDecl	result [ 32 ]		10634288	0					
ANR	10634298	IdentifierDeclType	char [ 32 ]		10634288	0					
ANR	10634299	Identifier	result		10634288	1					
ANR	10634300	PrimaryExpression	32		10634288	2					
ANR	10634301	ExpressionStatement	local = localtime ( t )	196:2:4816:4836	10634288	3	True				
ANR	10634302	AssignmentExpression	local = localtime ( t )		10634288	0		=			
ANR	10634303	Identifier	local		10634288	0					
ANR	10634304	CallExpression	localtime ( t )		10634288	1					
ANR	10634305	Callee	localtime		10634288	0					
ANR	10634306	Identifier	localtime		10634288	0					
ANR	10634307	ArgumentList	t		10634288	1					
ANR	10634308	Argument	t		10634288	0					
ANR	10634309	Identifier	t		10634288	0					
ANR	10634310	ExpressionStatement	"sprintf ( result , ""%4d/%02d/%02d %02d:%02d:%02d"" , local -> tm_year + 1900 , local -> tm_mon + 1 , local -> tm_mday , local -> tm_hour , local -> tm_min , local -> tm_sec )"	197:2:4840:5006	10634288	4	True				
ANR	10634311	CallExpression	"sprintf ( result , ""%4d/%02d/%02d %02d:%02d:%02d"" , local -> tm_year + 1900 , local -> tm_mon + 1 , local -> tm_mday , local -> tm_hour , local -> tm_min , local -> tm_sec )"		10634288	0					
ANR	10634312	Callee	sprintf		10634288	0					
ANR	10634313	Identifier	sprintf		10634288	0					
ANR	10634314	ArgumentList	result		10634288	1					
ANR	10634315	Argument	result		10634288	0					
ANR	10634316	Identifier	result		10634288	0					
ANR	10634317	Argument	"""%4d/%02d/%02d %02d:%02d:%02d"""		10634288	1					
ANR	10634318	PrimaryExpression	"""%4d/%02d/%02d %02d:%02d:%02d"""		10634288	0					
ANR	10634319	Argument	local -> tm_year + 1900		10634288	2					
ANR	10634320	AdditiveExpression	local -> tm_year + 1900		10634288	0		+			
ANR	10634321	PtrMemberAccess	local -> tm_year		10634288	0					
ANR	10634322	Identifier	local		10634288	0					
ANR	10634323	Identifier	tm_year		10634288	1					
ANR	10634324	PrimaryExpression	1900		10634288	1					
ANR	10634325	Argument	local -> tm_mon + 1		10634288	3					
ANR	10634326	AdditiveExpression	local -> tm_mon + 1		10634288	0		+			
ANR	10634327	PtrMemberAccess	local -> tm_mon		10634288	0					
ANR	10634328	Identifier	local		10634288	0					
ANR	10634329	Identifier	tm_mon		10634288	1					
ANR	10634330	PrimaryExpression	1		10634288	1					
ANR	10634331	Argument	local -> tm_mday		10634288	4					
ANR	10634332	PtrMemberAccess	local -> tm_mday		10634288	0					
ANR	10634333	Identifier	local		10634288	0					
ANR	10634334	Identifier	tm_mday		10634288	1					
ANR	10634335	Argument	local -> tm_hour		10634288	5					
ANR	10634336	PtrMemberAccess	local -> tm_hour		10634288	0					
ANR	10634337	Identifier	local		10634288	0					
ANR	10634338	Identifier	tm_hour		10634288	1					
ANR	10634339	Argument	local -> tm_min		10634288	6					
ANR	10634340	PtrMemberAccess	local -> tm_min		10634288	0					
ANR	10634341	Identifier	local		10634288	0					
ANR	10634342	Identifier	tm_min		10634288	1					
ANR	10634343	Argument	local -> tm_sec		10634288	7					
ANR	10634344	PtrMemberAccess	local -> tm_sec		10634288	0					
ANR	10634345	Identifier	local		10634288	0					
ANR	10634346	Identifier	tm_sec		10634288	1					
ANR	10634347	ReturnStatement	return result ;	200:2:5010:5023	10634288	5	True				
ANR	10634348	Identifier	result		10634288	0					
ANR	10634349	ReturnType	char *		10634288	1					
ANR	10634350	Identifier	strtime		10634288	2					
ANR	10634351	ParameterList	time_t * t		10634288	3					
ANR	10634352	Parameter	time_t * t	191:15:4752:4760	10634288	0	True				
ANR	10634353	ParameterType	time_t *		10634288	0					
ANR	10634354	Identifier	t		10634288	1					
ANR	10634355	CFGEntryNode	ENTRY		10634288		True				
ANR	10634356	CFGExitNode	EXIT		10634288		True				
ANR	10634357	Symbol	result		10634288						
ANR	10634358	Symbol	localtime		10634288						
ANR	10634359	Symbol	local -> tm_min		10634288						
ANR	10634360	Symbol	* local		10634288						
ANR	10634361	Symbol	local -> tm_sec		10634288						
ANR	10634362	Symbol	t		10634288						
ANR	10634363	Symbol	local -> tm_mon		10634288						
ANR	10634364	Symbol	local -> tm_mday		10634288						
ANR	10634365	Symbol	local		10634288						
ANR	10634366	Symbol	local -> tm_hour		10634288						
ANR	10634367	Symbol	local -> tm_year		10634288						
ANR	10634368	Function	setfiletime	206:0:5050:6232							
ANR	10634369	FunctionDef	"setfiletime (char * fname , time_t ftime)"		10634368	0					
ANR	10634370	CompoundStatement		207:0:5093:6232	10634368	0					
ANR	10634371	Statement	static	209:2:5110:5115	10634368	0	True				
ANR	10634372	IdentifierDeclStatement	int isWinNT = - 1 ;	209:9:5117:5133	10634368	1	True				
ANR	10634373	IdentifierDecl	isWinNT = - 1		10634368	0					
ANR	10634374	IdentifierDeclType	int		10634368	0					
ANR	10634375	Identifier	isWinNT		10634368	1					
ANR	10634376	AssignmentExpression	isWinNT = - 1		10634368	2		=			
ANR	10634377	Identifier	isWinNT		10634368	0					
ANR	10634378	UnaryOperationExpression	- 1		10634368	1					
ANR	10634379	UnaryOperator	-		10634368	0					
ANR	10634380	PrimaryExpression	1		10634368	1					
ANR	10634381	IdentifierDeclStatement	SYSTEMTIME st ;	210:2:5137:5150	10634368	2	True				
ANR	10634382	IdentifierDecl	st		10634368	0					
ANR	10634383	IdentifierDeclType	SYSTEMTIME		10634368	0					
ANR	10634384	Identifier	st		10634368	1					
ANR	10634385	IdentifierDeclStatement	"FILETIME locft , modft ;"	211:2:5154:5175	10634368	3	True				
ANR	10634386	IdentifierDecl	locft		10634368	0					
ANR	10634387	IdentifierDeclType	FILETIME		10634368	0					
ANR	10634388	Identifier	locft		10634368	1					
ANR	10634389	IdentifierDecl	modft		10634368	1					
ANR	10634390	IdentifierDeclType	FILETIME		10634368	0					
ANR	10634391	Identifier	modft		10634368	1					
ANR	10634392	IdentifierDeclStatement	struct tm * loctm ;	212:2:5179:5195	10634368	4	True				
ANR	10634393	IdentifierDecl	* loctm		10634368	0					
ANR	10634394	IdentifierDeclType	struct tm *		10634368	0					
ANR	10634395	Identifier	loctm		10634368	1					
ANR	10634396	IdentifierDeclStatement	HANDLE hFile ;	213:2:5199:5211	10634368	5	True				
ANR	10634397	IdentifierDecl	hFile		10634368	0					
ANR	10634398	IdentifierDeclType	HANDLE		10634368	0					
ANR	10634399	Identifier	hFile		10634368	1					
ANR	10634400	IdentifierDeclStatement	int result ;	214:2:5215:5225	10634368	6	True				
ANR	10634401	IdentifierDecl	result		10634368	0					
ANR	10634402	IdentifierDeclType	int		10634368	0					
ANR	10634403	Identifier	result		10634368	1					
ANR	10634404	ExpressionStatement	loctm = localtime ( & ftime )	216:2:5230:5255	10634368	7	True				
ANR	10634405	AssignmentExpression	loctm = localtime ( & ftime )		10634368	0		=			
ANR	10634406	Identifier	loctm		10634368	0					
ANR	10634407	CallExpression	localtime ( & ftime )		10634368	1					
ANR	10634408	Callee	localtime		10634368	0					
ANR	10634409	Identifier	localtime		10634368	0					
ANR	10634410	ArgumentList	& ftime		10634368	1					
ANR	10634411	Argument	& ftime		10634368	0					
ANR	10634412	UnaryOperationExpression	& ftime		10634368	0					
ANR	10634413	UnaryOperator	&		10634368	0					
ANR	10634414	Identifier	ftime		10634368	1					
ANR	10634415	IfStatement	if ( loctm == NULL )		10634368	8					
ANR	10634416	Condition	loctm == NULL	217:6:5263:5275	10634368	0	True				
ANR	10634417	EqualityExpression	loctm == NULL		10634368	0		==			
ANR	10634418	Identifier	loctm		10634368	0					
ANR	10634419	Identifier	NULL		10634368	1					
ANR	10634420	ReturnStatement	return - 1 ;	218:4:5282:5291	10634368	1	True				
ANR	10634421	UnaryOperationExpression	- 1		10634368	0					
ANR	10634422	UnaryOperator	-		10634368	0					
ANR	10634423	PrimaryExpression	1		10634368	1					
ANR	10634424	ExpressionStatement	st . wYear = ( WORD ) loctm -> tm_year + 1900	220:2:5296:5342	10634368	9	True				
ANR	10634425	AssignmentExpression	st . wYear = ( WORD ) loctm -> tm_year + 1900		10634368	0		=			
ANR	10634426	MemberAccess	st . wYear		10634368	0					
ANR	10634427	Identifier	st		10634368	0					
ANR	10634428	Identifier	wYear		10634368	1					
ANR	10634429	AdditiveExpression	( WORD ) loctm -> tm_year + 1900		10634368	1		+			
ANR	10634430	CastExpression	( WORD ) loctm -> tm_year		10634368	0					
ANR	10634431	CastTarget	WORD		10634368	0					
ANR	10634432	PtrMemberAccess	loctm -> tm_year		10634368	1					
ANR	10634433	Identifier	loctm		10634368	0					
ANR	10634434	Identifier	tm_year		10634368	1					
ANR	10634435	PrimaryExpression	1900		10634368	1					
ANR	10634436	ExpressionStatement	st . wMonth = ( WORD ) loctm -> tm_mon + 1	221:2:5346:5388	10634368	10	True				
ANR	10634437	AssignmentExpression	st . wMonth = ( WORD ) loctm -> tm_mon + 1		10634368	0		=			
ANR	10634438	MemberAccess	st . wMonth		10634368	0					
ANR	10634439	Identifier	st		10634368	0					
ANR	10634440	Identifier	wMonth		10634368	1					
ANR	10634441	AdditiveExpression	( WORD ) loctm -> tm_mon + 1		10634368	1		+			
ANR	10634442	CastExpression	( WORD ) loctm -> tm_mon		10634368	0					
ANR	10634443	CastTarget	WORD		10634368	0					
ANR	10634444	PtrMemberAccess	loctm -> tm_mon		10634368	1					
ANR	10634445	Identifier	loctm		10634368	0					
ANR	10634446	Identifier	tm_mon		10634368	1					
ANR	10634447	PrimaryExpression	1		10634368	1					
ANR	10634448	ExpressionStatement	st . wDayOfWeek = ( WORD ) loctm -> tm_wday	222:2:5392:5431	10634368	11	True				
ANR	10634449	AssignmentExpression	st . wDayOfWeek = ( WORD ) loctm -> tm_wday		10634368	0		=			
ANR	10634450	MemberAccess	st . wDayOfWeek		10634368	0					
ANR	10634451	Identifier	st		10634368	0					
ANR	10634452	Identifier	wDayOfWeek		10634368	1					
ANR	10634453	CastExpression	( WORD ) loctm -> tm_wday		10634368	1					
ANR	10634454	CastTarget	WORD		10634368	0					
ANR	10634455	PtrMemberAccess	loctm -> tm_wday		10634368	1					
ANR	10634456	Identifier	loctm		10634368	0					
ANR	10634457	Identifier	tm_wday		10634368	1					
ANR	10634458	ExpressionStatement	st . wDay = ( WORD ) loctm -> tm_mday	223:2:5435:5474	10634368	12	True				
ANR	10634459	AssignmentExpression	st . wDay = ( WORD ) loctm -> tm_mday		10634368	0		=			
ANR	10634460	MemberAccess	st . wDay		10634368	0					
ANR	10634461	Identifier	st		10634368	0					
ANR	10634462	Identifier	wDay		10634368	1					
ANR	10634463	CastExpression	( WORD ) loctm -> tm_mday		10634368	1					
ANR	10634464	CastTarget	WORD		10634368	0					
ANR	10634465	PtrMemberAccess	loctm -> tm_mday		10634368	1					
ANR	10634466	Identifier	loctm		10634368	0					
ANR	10634467	Identifier	tm_mday		10634368	1					
ANR	10634468	ExpressionStatement	st . wHour = ( WORD ) loctm -> tm_hour	224:2:5478:5517	10634368	13	True				
ANR	10634469	AssignmentExpression	st . wHour = ( WORD ) loctm -> tm_hour		10634368	0		=			
ANR	10634470	MemberAccess	st . wHour		10634368	0					
ANR	10634471	Identifier	st		10634368	0					
ANR	10634472	Identifier	wHour		10634368	1					
ANR	10634473	CastExpression	( WORD ) loctm -> tm_hour		10634368	1					
ANR	10634474	CastTarget	WORD		10634368	0					
ANR	10634475	PtrMemberAccess	loctm -> tm_hour		10634368	1					
ANR	10634476	Identifier	loctm		10634368	0					
ANR	10634477	Identifier	tm_hour		10634368	1					
ANR	10634478	ExpressionStatement	st . wMinute = ( WORD ) loctm -> tm_min	225:2:5521:5559	10634368	14	True				
ANR	10634479	AssignmentExpression	st . wMinute = ( WORD ) loctm -> tm_min		10634368	0		=			
ANR	10634480	MemberAccess	st . wMinute		10634368	0					
ANR	10634481	Identifier	st		10634368	0					
ANR	10634482	Identifier	wMinute		10634368	1					
ANR	10634483	CastExpression	( WORD ) loctm -> tm_min		10634368	1					
ANR	10634484	CastTarget	WORD		10634368	0					
ANR	10634485	PtrMemberAccess	loctm -> tm_min		10634368	1					
ANR	10634486	Identifier	loctm		10634368	0					
ANR	10634487	Identifier	tm_min		10634368	1					
ANR	10634488	ExpressionStatement	st . wSecond = ( WORD ) loctm -> tm_sec	226:2:5563:5601	10634368	15	True				
ANR	10634489	AssignmentExpression	st . wSecond = ( WORD ) loctm -> tm_sec		10634368	0		=			
ANR	10634490	MemberAccess	st . wSecond		10634368	0					
ANR	10634491	Identifier	st		10634368	0					
ANR	10634492	Identifier	wSecond		10634368	1					
ANR	10634493	CastExpression	( WORD ) loctm -> tm_sec		10634368	1					
ANR	10634494	CastTarget	WORD		10634368	0					
ANR	10634495	PtrMemberAccess	loctm -> tm_sec		10634368	1					
ANR	10634496	Identifier	loctm		10634368	0					
ANR	10634497	Identifier	tm_sec		10634368	1					
ANR	10634498	ExpressionStatement	st . wMilliseconds = 0	227:2:5605:5625	10634368	16	True				
ANR	10634499	AssignmentExpression	st . wMilliseconds = 0		10634368	0		=			
ANR	10634500	MemberAccess	st . wMilliseconds		10634368	0					
ANR	10634501	Identifier	st		10634368	0					
ANR	10634502	Identifier	wMilliseconds		10634368	1					
ANR	10634503	PrimaryExpression	0		10634368	1					
ANR	10634504	IfStatement	"if ( ! SystemTimeToFileTime ( & st , & locft ) || ! LocalFileTimeToFileTime ( & locft , & modft ) )"		10634368	17					
ANR	10634505	Condition	"! SystemTimeToFileTime ( & st , & locft ) || ! LocalFileTimeToFileTime ( & locft , & modft )"	228:6:5633:5716	10634368	0	True				
ANR	10634506	OrExpression	"! SystemTimeToFileTime ( & st , & locft ) || ! LocalFileTimeToFileTime ( & locft , & modft )"		10634368	0		||			
ANR	10634507	UnaryOperationExpression	"! SystemTimeToFileTime ( & st , & locft )"		10634368	0					
ANR	10634508	UnaryOperator	!		10634368	0					
ANR	10634509	CallExpression	"SystemTimeToFileTime ( & st , & locft )"		10634368	1					
ANR	10634510	Callee	SystemTimeToFileTime		10634368	0					
ANR	10634511	Identifier	SystemTimeToFileTime		10634368	0					
ANR	10634512	ArgumentList	& st		10634368	1					
ANR	10634513	Argument	& st		10634368	0					
ANR	10634514	UnaryOperationExpression	& st		10634368	0					
ANR	10634515	UnaryOperator	&		10634368	0					
ANR	10634516	Identifier	st		10634368	1					
ANR	10634517	Argument	& locft		10634368	1					
ANR	10634518	UnaryOperationExpression	& locft		10634368	0					
ANR	10634519	UnaryOperator	&		10634368	0					
ANR	10634520	Identifier	locft		10634368	1					
ANR	10634521	UnaryOperationExpression	"! LocalFileTimeToFileTime ( & locft , & modft )"		10634368	1					
ANR	10634522	UnaryOperator	!		10634368	0					
ANR	10634523	CallExpression	"LocalFileTimeToFileTime ( & locft , & modft )"		10634368	1					
ANR	10634524	Callee	LocalFileTimeToFileTime		10634368	0					
ANR	10634525	Identifier	LocalFileTimeToFileTime		10634368	0					
ANR	10634526	ArgumentList	& locft		10634368	1					
ANR	10634527	Argument	& locft		10634368	0					
ANR	10634528	UnaryOperationExpression	& locft		10634368	0					
ANR	10634529	UnaryOperator	&		10634368	0					
ANR	10634530	Identifier	locft		10634368	1					
ANR	10634531	Argument	& modft		10634368	1					
ANR	10634532	UnaryOperationExpression	& modft		10634368	0					
ANR	10634533	UnaryOperator	&		10634368	0					
ANR	10634534	Identifier	modft		10634368	1					
ANR	10634535	ReturnStatement	return - 1 ;	230:4:5723:5732	10634368	1	True				
ANR	10634536	UnaryOperationExpression	- 1		10634368	0					
ANR	10634537	UnaryOperator	-		10634368	0					
ANR	10634538	PrimaryExpression	1		10634368	1					
ANR	10634539	IfStatement	if ( isWinNT < 0 )		10634368	18					
ANR	10634540	Condition	isWinNT < 0	232:6:5741:5751	10634368	0	True				
ANR	10634541	RelationalExpression	isWinNT < 0		10634368	0		<			
ANR	10634542	Identifier	isWinNT		10634368	0					
ANR	10634543	PrimaryExpression	0		10634368	1					
ANR	10634544	ExpressionStatement	isWinNT = ( GetVersion ( ) < 0x80000000 ) ? 1 : 0	233:4:5758:5803	10634368	1	True				
ANR	10634545	AssignmentExpression	isWinNT = ( GetVersion ( ) < 0x80000000 ) ? 1 : 0		10634368	0		=			
ANR	10634546	Identifier	isWinNT		10634368	0					
ANR	10634547	ConditionalExpression	( GetVersion ( ) < 0x80000000 ) ? 1 : 0		10634368	1					
ANR	10634548	Condition	GetVersion ( ) < 0x80000000		10634368	0					
ANR	10634549	RelationalExpression	GetVersion ( ) < 0x80000000		10634368	0		<			
ANR	10634550	CallExpression	GetVersion ( )		10634368	0					
ANR	10634551	Callee	GetVersion		10634368	0					
ANR	10634552	Identifier	GetVersion		10634368	0					
ANR	10634553	ArgumentList			10634368	1					
ANR	10634554	PrimaryExpression	0x80000000		10634368	1					
ANR	10634555	PrimaryExpression	1		10634368	1					
ANR	10634556	PrimaryExpression	0		10634368	2					
ANR	10634557	ExpressionStatement	"hFile = CreateFile ( fname , GENERIC_WRITE , 0 , NULL , OPEN_EXISTING , ( isWinNT ? FILE_FLAG_BACKUP_SEMANTICS : 0 ) , NULL )"	234:2:5807:5963	10634368	19	True				
ANR	10634558	AssignmentExpression	"hFile = CreateFile ( fname , GENERIC_WRITE , 0 , NULL , OPEN_EXISTING , ( isWinNT ? FILE_FLAG_BACKUP_SEMANTICS : 0 ) , NULL )"		10634368	0		=			
ANR	10634559	Identifier	hFile		10634368	0					
ANR	10634560	CallExpression	"CreateFile ( fname , GENERIC_WRITE , 0 , NULL , OPEN_EXISTING , ( isWinNT ? FILE_FLAG_BACKUP_SEMANTICS : 0 ) , NULL )"		10634368	1					
ANR	10634561	Callee	CreateFile		10634368	0					
ANR	10634562	Identifier	CreateFile		10634368	0					
ANR	10634563	ArgumentList	fname		10634368	1					
ANR	10634564	Argument	fname		10634368	0					
ANR	10634565	Identifier	fname		10634368	0					
ANR	10634566	Argument	GENERIC_WRITE		10634368	1					
ANR	10634567	Identifier	GENERIC_WRITE		10634368	0					
ANR	10634568	Argument	0		10634368	2					
ANR	10634569	PrimaryExpression	0		10634368	0					
ANR	10634570	Argument	NULL		10634368	3					
ANR	10634571	Identifier	NULL		10634368	0					
ANR	10634572	Argument	OPEN_EXISTING		10634368	4					
ANR	10634573	Identifier	OPEN_EXISTING		10634368	0					
ANR	10634574	Argument	isWinNT ? FILE_FLAG_BACKUP_SEMANTICS : 0		10634368	5					
ANR	10634575	ConditionalExpression	isWinNT ? FILE_FLAG_BACKUP_SEMANTICS : 0		10634368	0					
ANR	10634576	Condition	isWinNT		10634368	0					
ANR	10634577	Identifier	isWinNT		10634368	0					
ANR	10634578	Identifier	FILE_FLAG_BACKUP_SEMANTICS		10634368	1					
ANR	10634579	PrimaryExpression	0		10634368	2					
ANR	10634580	Argument	NULL		10634368	6					
ANR	10634581	Identifier	NULL		10634368	0					
ANR	10634582	IfStatement	if ( hFile == INVALID_HANDLE_VALUE )		10634368	20					
ANR	10634583	Condition	hFile == INVALID_HANDLE_VALUE	237:6:5971:5999	10634368	0	True				
ANR	10634584	EqualityExpression	hFile == INVALID_HANDLE_VALUE		10634368	0		==			
ANR	10634585	Identifier	hFile		10634368	0					
ANR	10634586	Identifier	INVALID_HANDLE_VALUE		10634368	1					
ANR	10634587	ReturnStatement	return - 1 ;	238:4:6006:6015	10634368	1	True				
ANR	10634588	UnaryOperationExpression	- 1		10634368	0					
ANR	10634589	UnaryOperator	-		10634368	0					
ANR	10634590	PrimaryExpression	1		10634368	1					
ANR	10634591	ExpressionStatement	"result = SetFileTime ( hFile , NULL , NULL , & modft ) ? 0 : - 1"	239:2:6019:6075	10634368	21	True				
ANR	10634592	AssignmentExpression	"result = SetFileTime ( hFile , NULL , NULL , & modft ) ? 0 : - 1"		10634368	0		=			
ANR	10634593	Identifier	result		10634368	0					
ANR	10634594	ConditionalExpression	"SetFileTime ( hFile , NULL , NULL , & modft ) ? 0 : - 1"		10634368	1					
ANR	10634595	Condition	"SetFileTime ( hFile , NULL , NULL , & modft )"		10634368	0					
ANR	10634596	CallExpression	"SetFileTime ( hFile , NULL , NULL , & modft )"		10634368	0					
ANR	10634597	Callee	SetFileTime		10634368	0					
ANR	10634598	Identifier	SetFileTime		10634368	0					
ANR	10634599	ArgumentList	hFile		10634368	1					
ANR	10634600	Argument	hFile		10634368	0					
ANR	10634601	Identifier	hFile		10634368	0					
ANR	10634602	Argument	NULL		10634368	1					
ANR	10634603	Identifier	NULL		10634368	0					
ANR	10634604	Argument	NULL		10634368	2					
ANR	10634605	Identifier	NULL		10634368	0					
ANR	10634606	Argument	& modft		10634368	3					
ANR	10634607	UnaryOperationExpression	& modft		10634368	0					
ANR	10634608	UnaryOperator	&		10634368	0					
ANR	10634609	Identifier	modft		10634368	1					
ANR	10634610	PrimaryExpression	0		10634368	1					
ANR	10634611	UnaryOperationExpression	- 1		10634368	2					
ANR	10634612	UnaryOperator	-		10634368	0					
ANR	10634613	PrimaryExpression	1		10634368	1					
ANR	10634614	ExpressionStatement	CloseHandle ( hFile )	240:2:6079:6097	10634368	22	True				
ANR	10634615	CallExpression	CloseHandle ( hFile )		10634368	0					
ANR	10634616	Callee	CloseHandle		10634368	0					
ANR	10634617	Identifier	CloseHandle		10634368	0					
ANR	10634618	ArgumentList	hFile		10634368	1					
ANR	10634619	Argument	hFile		10634368	0					
ANR	10634620	Identifier	hFile		10634368	0					
ANR	10634621	ReturnStatement	return result ;	241:2:6101:6114	10634368	23	True				
ANR	10634622	Identifier	result		10634368	0					
ANR	10634623	ReturnType	int		10634368	1					
ANR	10634624	Identifier	setfiletime		10634368	2					
ANR	10634625	ParameterList	"char * fname , time_t ftime"		10634368	3					
ANR	10634626	Parameter	char * fname	206:17:5067:5077	10634368	0	True				
ANR	10634627	ParameterType	char *		10634368	0					
ANR	10634628	Identifier	fname		10634368	1					
ANR	10634629	Parameter	time_t ftime	206:29:5079:5090	10634368	1	True				
ANR	10634630	ParameterType	time_t		10634368	0					
ANR	10634631	Identifier	ftime		10634368	1					
ANR	10634632	CFGEntryNode	ENTRY		10634368		True				
ANR	10634633	CFGExitNode	EXIT		10634368		True				
ANR	10634634	Symbol	localtime		10634368						
ANR	10634635	Symbol	loctm -> tm_mday		10634368						
ANR	10634636	Symbol	loctm -> tm_mon		10634368						
ANR	10634637	Symbol	st . wHour		10634368						
ANR	10634638	Symbol	SystemTimeToFileTime		10634368						
ANR	10634639	Symbol	* loctm		10634368						
ANR	10634640	Symbol	st . wMonth		10634368						
ANR	10634641	Symbol	& st		10634368						
ANR	10634642	Symbol	st . wMinute		10634368						
ANR	10634643	Symbol	result		10634368						
ANR	10634644	Symbol	CreateFile		10634368						
ANR	10634645	Symbol	loctm -> tm_wday		10634368						
ANR	10634646	Symbol	st . wMilliseconds		10634368						
ANR	10634647	Symbol	GetVersion		10634368						
ANR	10634648	Symbol	GENERIC_WRITE		10634368						
ANR	10634649	Symbol	loctm -> tm_sec		10634368						
ANR	10634650	Symbol	loctm		10634368						
ANR	10634651	Symbol	LocalFileTimeToFileTime		10634368						
ANR	10634652	Symbol	OPEN_EXISTING		10634368						
ANR	10634653	Symbol	hFile		10634368						
ANR	10634654	Symbol	loctm -> tm_min		10634368						
ANR	10634655	Symbol	ftime		10634368						
ANR	10634656	Symbol	fname		10634368						
ANR	10634657	Symbol	st		10634368						
ANR	10634658	Symbol	& ftime		10634368						
ANR	10634659	Symbol	modft		10634368						
ANR	10634660	Symbol	NULL		10634368						
ANR	10634661	Symbol	loctm -> tm_hour		10634368						
ANR	10634662	Symbol	loctm -> tm_year		10634368						
ANR	10634663	Symbol	st . wSecond		10634368						
ANR	10634664	Symbol	locft		10634368						
ANR	10634665	Symbol	& modft		10634368						
ANR	10634666	Symbol	INVALID_HANDLE_VALUE		10634368						
ANR	10634667	Symbol	SetFileTime		10634368						
ANR	10634668	Symbol	st . wDay		10634368						
ANR	10634669	Symbol	st . wYear		10634368						
ANR	10634670	Symbol	& locft		10634368						
ANR	10634671	Symbol	FILE_FLAG_BACKUP_SEMANTICS		10634368						
ANR	10634672	Symbol	st . wDayOfWeek		10634368						
ANR	10634673	Symbol	isWinNT		10634368						
ANR	10634674	Function	push_attr	253:0:6264:6597							
ANR	10634675	FunctionDef	"push_attr (struct attr_item * * list , char * fname , int mode , time_t time)"		10634674	0					
ANR	10634676	CompoundStatement		254:0:6337:6597	10634674	0					
ANR	10634677	IdentifierDeclStatement	struct attr_item * item ;	255:2:6341:6363	10634674	0	True				
ANR	10634678	IdentifierDecl	* item		10634674	0					
ANR	10634679	IdentifierDeclType	struct attr_item *		10634674	0					
ANR	10634680	Identifier	item		10634674	1					
ANR	10634681	ExpressionStatement	item = ( struct attr_item * ) malloc ( sizeof ( struct attr_item ) )	257:2:6368:6427	10634674	1	True				
ANR	10634682	AssignmentExpression	item = ( struct attr_item * ) malloc ( sizeof ( struct attr_item ) )		10634674	0		=			
ANR	10634683	Identifier	item		10634674	0					
ANR	10634684	CastExpression	( struct attr_item * ) malloc ( sizeof ( struct attr_item ) )		10634674	1					
ANR	10634685	CastTarget	struct attr_item *		10634674	0					
ANR	10634686	CallExpression	malloc ( sizeof ( struct attr_item ) )		10634674	1					
ANR	10634687	Callee	malloc		10634674	0					
ANR	10634688	Identifier	malloc		10634674	0					
ANR	10634689	ArgumentList	sizeof ( struct attr_item )		10634674	1					
ANR	10634690	Argument	sizeof ( struct attr_item )		10634674	0					
ANR	10634691	SizeofExpression	sizeof ( struct attr_item )		10634674	0					
ANR	10634692	Sizeof	sizeof		10634674	0					
ANR	10634693	SizeofOperand	struct attr_item		10634674	1					
ANR	10634694	IfStatement	if ( item == NULL )		10634674	2					
ANR	10634695	Condition	item == NULL	258:6:6435:6446	10634674	0	True				
ANR	10634696	EqualityExpression	item == NULL		10634674	0		==			
ANR	10634697	Identifier	item		10634674	0					
ANR	10634698	Identifier	NULL		10634674	1					
ANR	10634699	ExpressionStatement	"error ( ""Out of memory"" )"	259:4:6453:6475	10634674	1	True				
ANR	10634700	CallExpression	"error ( ""Out of memory"" )"		10634674	0					
ANR	10634701	Callee	error		10634674	0					
ANR	10634702	Identifier	error		10634674	0					
ANR	10634703	ArgumentList	"""Out of memory"""		10634674	1					
ANR	10634704	Argument	"""Out of memory"""		10634674	0					
ANR	10634705	PrimaryExpression	"""Out of memory"""		10634674	0					
ANR	10634706	ExpressionStatement	item -> fname = strdup ( fname )	260:2:6479:6506	10634674	3	True				
ANR	10634707	AssignmentExpression	item -> fname = strdup ( fname )		10634674	0		=			
ANR	10634708	PtrMemberAccess	item -> fname		10634674	0					
ANR	10634709	Identifier	item		10634674	0					
ANR	10634710	Identifier	fname		10634674	1					
ANR	10634711	CallExpression	strdup ( fname )		10634674	1					
ANR	10634712	Callee	strdup		10634674	0					
ANR	10634713	Identifier	strdup		10634674	0					
ANR	10634714	ArgumentList	fname		10634674	1					
ANR	10634715	Argument	fname		10634674	0					
ANR	10634716	Identifier	fname		10634674	0					
ANR	10634717	ExpressionStatement	item -> mode = mode	261:2:6510:6528	10634674	4	True				
ANR	10634718	AssignmentExpression	item -> mode = mode		10634674	0		=			
ANR	10634719	PtrMemberAccess	item -> mode		10634674	0					
ANR	10634720	Identifier	item		10634674	0					
ANR	10634721	Identifier	mode		10634674	1					
ANR	10634722	Identifier	mode		10634674	1					
ANR	10634723	ExpressionStatement	item -> time = time	262:2:6532:6550	10634674	5	True				
ANR	10634724	AssignmentExpression	item -> time = time		10634674	0		=			
ANR	10634725	PtrMemberAccess	item -> time		10634674	0					
ANR	10634726	Identifier	item		10634674	0					
ANR	10634727	Identifier	time		10634674	1					
ANR	10634728	Identifier	time		10634674	1					
ANR	10634729	ExpressionStatement	item -> next = * list	263:2:6554:6573	10634674	6	True				
ANR	10634730	AssignmentExpression	item -> next = * list		10634674	0		=			
ANR	10634731	PtrMemberAccess	item -> next		10634674	0					
ANR	10634732	Identifier	item		10634674	0					
ANR	10634733	Identifier	next		10634674	1					
ANR	10634734	UnaryOperationExpression	* list		10634674	1					
ANR	10634735	UnaryOperator	*		10634674	0					
ANR	10634736	Identifier	list		10634674	1					
ANR	10634737	ExpressionStatement	* list = item	264:2:6577:6595	10634674	7	True				
ANR	10634738	AssignmentExpression	* list = item		10634674	0		=			
ANR	10634739	UnaryOperationExpression	* list		10634674	0					
ANR	10634740	UnaryOperator	*		10634674	0					
ANR	10634741	Identifier	list		10634674	1					
ANR	10634742	Identifier	item		10634674	1					
ANR	10634743	ReturnType	void		10634674	1					
ANR	10634744	Identifier	push_attr		10634674	2					
ANR	10634745	ParameterList	"struct attr_item * * list , char * fname , int mode , time_t time"		10634674	3					
ANR	10634746	Parameter	struct attr_item * * list	253:15:6279:6301	10634674	0	True				
ANR	10634747	ParameterType	struct attr_item * *		10634674	0					
ANR	10634748	Identifier	list		10634674	1					
ANR	10634749	Parameter	char * fname	253:39:6303:6313	10634674	1	True				
ANR	10634750	ParameterType	char *		10634674	0					
ANR	10634751	Identifier	fname		10634674	1					
ANR	10634752	Parameter	int mode	253:51:6315:6322	10634674	2	True				
ANR	10634753	ParameterType	int		10634674	0					
ANR	10634754	Identifier	mode		10634674	1					
ANR	10634755	Parameter	time_t time	253:60:6324:6334	10634674	3	True				
ANR	10634756	ParameterType	time_t		10634674	0					
ANR	10634757	Identifier	time		10634674	1					
ANR	10634758	CFGEntryNode	ENTRY		10634674		True				
ANR	10634759	CFGExitNode	EXIT		10634674		True				
ANR	10634760	Symbol	fname		10634674						
ANR	10634761	Symbol	malloc		10634674						
ANR	10634762	Symbol	item		10634674						
ANR	10634763	Symbol	item -> fname		10634674						
ANR	10634764	Symbol	NULL		10634674						
ANR	10634765	Symbol	list		10634674						
ANR	10634766	Symbol	item -> next		10634674						
ANR	10634767	Symbol	mode		10634674						
ANR	10634768	Symbol	item -> time		10634674						
ANR	10634769	Symbol	* list		10634674						
ANR	10634770	Symbol	* item		10634674						
ANR	10634771	Symbol	time		10634674						
ANR	10634772	Symbol	strdup		10634674						
ANR	10634773	Symbol	item -> mode		10634674						
ANR	10634774	Function	restore_attr	270:0:6632:6918							
ANR	10634775	FunctionDef	restore_attr (struct attr_item * * list)		10634774	0					
ANR	10634776	CompoundStatement		271:0:6675:6918	10634774	0					
ANR	10634777	IdentifierDeclStatement	"struct attr_item * item , * prev ;"	272:2:6679:6708	10634774	0	True				
ANR	10634778	IdentifierDecl	* item		10634774	0					
ANR	10634779	IdentifierDeclType	struct attr_item *		10634774	0					
ANR	10634780	Identifier	item		10634774	1					
ANR	10634781	IdentifierDecl	* prev		10634774	1					
ANR	10634782	IdentifierDeclType	struct attr_item *		10634774	0					
ANR	10634783	Identifier	prev		10634774	1					
ANR	10634784	ForStatement	for ( item = * list ; item != NULL ; )		10634774	1					
ANR	10634785	ForInit	item = * list ;	274:7:6718:6730	10634774	0	True				
ANR	10634786	AssignmentExpression	item = * list		10634774	0		=			
ANR	10634787	Identifier	item		10634774	0					
ANR	10634788	UnaryOperationExpression	* list		10634774	1					
ANR	10634789	UnaryOperator	*		10634774	0					
ANR	10634790	Identifier	list		10634774	1					
ANR	10634791	Condition	item != NULL	274:21:6732:6743	10634774	1	True				
ANR	10634792	EqualityExpression	item != NULL		10634774	0		!=			
ANR	10634793	Identifier	item		10634774	0					
ANR	10634794	Identifier	NULL		10634774	1					
ANR	10634795	CompoundStatement		5:4:76:76	10634774	2					
ANR	10634796	ExpressionStatement	"setfiletime ( item -> fname , item -> time )"	276:6:6760:6795	10634774	0	True				
ANR	10634797	CallExpression	"setfiletime ( item -> fname , item -> time )"		10634774	0					
ANR	10634798	Callee	setfiletime		10634774	0					
ANR	10634799	Identifier	setfiletime		10634774	0					
ANR	10634800	ArgumentList	item -> fname		10634774	1					
ANR	10634801	Argument	item -> fname		10634774	0					
ANR	10634802	PtrMemberAccess	item -> fname		10634774	0					
ANR	10634803	Identifier	item		10634774	0					
ANR	10634804	Identifier	fname		10634774	1					
ANR	10634805	Argument	item -> time		10634774	1					
ANR	10634806	PtrMemberAccess	item -> time		10634774	0					
ANR	10634807	Identifier	item		10634774	0					
ANR	10634808	Identifier	time		10634774	1					
ANR	10634809	ExpressionStatement	"chmod ( item -> fname , item -> mode )"	277:6:6803:6832	10634774	1	True				
ANR	10634810	CallExpression	"chmod ( item -> fname , item -> mode )"		10634774	0					
ANR	10634811	Callee	chmod		10634774	0					
ANR	10634812	Identifier	chmod		10634774	0					
ANR	10634813	ArgumentList	item -> fname		10634774	1					
ANR	10634814	Argument	item -> fname		10634774	0					
ANR	10634815	PtrMemberAccess	item -> fname		10634774	0					
ANR	10634816	Identifier	item		10634774	0					
ANR	10634817	Identifier	fname		10634774	1					
ANR	10634818	Argument	item -> mode		10634774	1					
ANR	10634819	PtrMemberAccess	item -> mode		10634774	0					
ANR	10634820	Identifier	item		10634774	0					
ANR	10634821	Identifier	mode		10634774	1					
ANR	10634822	ExpressionStatement	prev = item	278:6:6840:6851	10634774	2	True				
ANR	10634823	AssignmentExpression	prev = item		10634774	0		=			
ANR	10634824	Identifier	prev		10634774	0					
ANR	10634825	Identifier	item		10634774	1					
ANR	10634826	ExpressionStatement	item = item -> next	279:6:6859:6876	10634774	3	True				
ANR	10634827	AssignmentExpression	item = item -> next		10634774	0		=			
ANR	10634828	Identifier	item		10634774	0					
ANR	10634829	PtrMemberAccess	item -> next		10634774	1					
ANR	10634830	Identifier	item		10634774	0					
ANR	10634831	Identifier	next		10634774	1					
ANR	10634832	ExpressionStatement	free ( prev )	280:6:6884:6894	10634774	4	True				
ANR	10634833	CallExpression	free ( prev )		10634774	0					
ANR	10634834	Callee	free		10634774	0					
ANR	10634835	Identifier	free		10634774	0					
ANR	10634836	ArgumentList	prev		10634774	1					
ANR	10634837	Argument	prev		10634774	0					
ANR	10634838	Identifier	prev		10634774	0					
ANR	10634839	ExpressionStatement	* list = NULL	282:2:6904:6916	10634774	2	True				
ANR	10634840	AssignmentExpression	* list = NULL		10634774	0		=			
ANR	10634841	UnaryOperationExpression	* list		10634774	0					
ANR	10634842	UnaryOperator	*		10634774	0					
ANR	10634843	Identifier	list		10634774	1					
ANR	10634844	Identifier	NULL		10634774	1					
ANR	10634845	ReturnType	void		10634774	1					
ANR	10634846	Identifier	restore_attr		10634774	2					
ANR	10634847	ParameterList	struct attr_item * * list		10634774	3					
ANR	10634848	Parameter	struct attr_item * * list	270:18:6650:6672	10634774	0	True				
ANR	10634849	ParameterType	struct attr_item * *		10634774	0					
ANR	10634850	Identifier	list		10634774	1					
ANR	10634851	CFGEntryNode	ENTRY		10634774		True				
ANR	10634852	CFGExitNode	EXIT		10634774		True				
ANR	10634853	Symbol	item -> time		10634774						
ANR	10634854	Symbol	item		10634774						
ANR	10634855	Symbol	item -> fname		10634774						
ANR	10634856	Symbol	NULL		10634774						
ANR	10634857	Symbol	* list		10634774						
ANR	10634858	Symbol	* item		10634774						
ANR	10634859	Symbol	prev		10634774						
ANR	10634860	Symbol	list		10634774						
ANR	10634861	Symbol	item -> mode		10634774						
ANR	10634862	Symbol	item -> next		10634774						
ANR	10634863	Function	ExprMatch	290:0:7007:7667							
ANR	10634864	FunctionDef	"ExprMatch (char * string , char * expr)"		10634863	0					
ANR	10634865	CompoundStatement		291:0:7047:7667	10634863	0					
ANR	10634866	WhileStatement	while ( 1 )		10634863	0					
ANR	10634867	Condition	1	292:9:7058:7058	10634863	0	True				
ANR	10634868	PrimaryExpression	1		10634863	0					
ANR	10634869	CompoundStatement		3:4:17:17	10634863	1					
ANR	10634870	IfStatement	if ( ISSPECIAL ( * expr ) )		10634863	0					
ANR	10634871	Condition	ISSPECIAL ( * expr )	294:10:7077:7092	10634863	0	True				
ANR	10634872	CallExpression	ISSPECIAL ( * expr )		10634863	0					
ANR	10634873	Callee	ISSPECIAL		10634863	0					
ANR	10634874	Identifier	ISSPECIAL		10634863	0					
ANR	10634875	ArgumentList	* expr		10634863	1					
ANR	10634876	Argument	* expr		10634863	0					
ANR	10634877	UnaryOperationExpression	* expr		10634863	0					
ANR	10634878	UnaryOperator	*		10634863	0					
ANR	10634879	Identifier	expr		10634863	1					
ANR	10634880	CompoundStatement		5:8:55:55	10634863	1					
ANR	10634881	IfStatement	if ( * expr == '/' )		10634863	0					
ANR	10634882	Condition	* expr == '/'	296:14:7119:7130	10634863	0	True				
ANR	10634883	EqualityExpression	* expr == '/'		10634863	0		==			
ANR	10634884	UnaryOperationExpression	* expr		10634863	0					
ANR	10634885	UnaryOperator	*		10634863	0					
ANR	10634886	Identifier	expr		10634863	1					
ANR	10634887	PrimaryExpression	'/'		10634863	1					
ANR	10634888	CompoundStatement		7:12:97:97	10634863	1					
ANR	10634889	IfStatement	if ( * string != '\\\\' && * string != '/' )		10634863	0					
ANR	10634890	Condition	* string != '\\\\' && * string != '/'	298:18:7165:7197	10634863	0	True				
ANR	10634891	AndExpression	* string != '\\\\' && * string != '/'		10634863	0		&&			
ANR	10634892	EqualityExpression	* string != '\\\\'		10634863	0		!=			
ANR	10634893	UnaryOperationExpression	* string		10634863	0					
ANR	10634894	UnaryOperator	*		10634863	0					
ANR	10634895	Identifier	string		10634863	1					
ANR	10634896	PrimaryExpression	'\\\\'		10634863	1					
ANR	10634897	EqualityExpression	* string != '/'		10634863	1		!=			
ANR	10634898	UnaryOperationExpression	* string		10634863	0					
ANR	10634899	UnaryOperator	*		10634863	0					
ANR	10634900	Identifier	string		10634863	1					
ANR	10634901	PrimaryExpression	'/'		10634863	1					
ANR	10634902	ReturnStatement	return 0 ;	299:16:7216:7224	10634863	1	True				
ANR	10634903	PrimaryExpression	0		10634863	0					
ANR	10634904	ExpressionStatement	string ++	300:14:7240:7249	10634863	1	True				
ANR	10634905	PostIncDecOperationExpression	string ++		10634863	0					
ANR	10634906	Identifier	string		10634863	0					
ANR	10634907	IncDec	++		10634863	1					
ANR	10634908	ExpressionStatement	expr ++	300:25:7251:7257	10634863	2	True				
ANR	10634909	PostIncDecOperationExpression	expr ++		10634863	0					
ANR	10634910	Identifier	expr		10634863	0					
ANR	10634911	IncDec	++		10634863	1					
ANR	10634912	ElseStatement	else		10634863	0					
ANR	10634913	IfStatement	if ( * expr == '*' )		10634863	0					
ANR	10634914	Condition	* expr == '*'	302:19:7292:7303	10634863	0	True				
ANR	10634915	EqualityExpression	* expr == '*'		10634863	0		==			
ANR	10634916	UnaryOperationExpression	* expr		10634863	0					
ANR	10634917	UnaryOperator	*		10634863	0					
ANR	10634918	Identifier	expr		10634863	1					
ANR	10634919	PrimaryExpression	'*'		10634863	1					
ANR	10634920	CompoundStatement		13:12:270:270	10634863	1					
ANR	10634921	IfStatement	if ( * expr ++ == 0 )		10634863	0					
ANR	10634922	Condition	* expr ++ == 0	304:18:7338:7350	10634863	0	True				
ANR	10634923	EqualityExpression	* expr ++ == 0		10634863	0		==			
ANR	10634924	UnaryOperationExpression	* expr ++		10634863	0					
ANR	10634925	UnaryOperator	*		10634863	0					
ANR	10634926	PostIncDecOperationExpression	expr ++		10634863	1					
ANR	10634927	Identifier	expr		10634863	0					
ANR	10634928	IncDec	++		10634863	1					
ANR	10634929	PrimaryExpression	0		10634863	1					
ANR	10634930	ReturnStatement	return 1 ;	305:16:7369:7377	10634863	1	True				
ANR	10634931	PrimaryExpression	1		10634863	0					
ANR	10634932	WhileStatement	while ( * ++ string != * expr )		10634863	1					
ANR	10634933	Condition	* ++ string != * expr	306:21:7400:7417	10634863	0	True				
ANR	10634934	EqualityExpression	* ++ string != * expr		10634863	0		!=			
ANR	10634935	UnaryOperationExpression	* ++ string		10634863	0					
ANR	10634936	UnaryOperator	*		10634863	0					
ANR	10634937	UnaryExpression	++ string		10634863	1					
ANR	10634938	IncDec	++		10634863	0					
ANR	10634939	Identifier	string		10634863	1					
ANR	10634940	UnaryOperationExpression	* expr		10634863	1					
ANR	10634941	UnaryOperator	*		10634863	0					
ANR	10634942	Identifier	expr		10634863	1					
ANR	10634943	IfStatement	if ( * string == 0 )		10634863	1					
ANR	10634944	Condition	* string == 0	307:20:7440:7451	10634863	0	True				
ANR	10634945	EqualityExpression	* string == 0		10634863	0		==			
ANR	10634946	UnaryOperationExpression	* string		10634863	0					
ANR	10634947	UnaryOperator	*		10634863	0					
ANR	10634948	Identifier	string		10634863	1					
ANR	10634949	PrimaryExpression	0		10634863	1					
ANR	10634950	ReturnStatement	return 0 ;	308:18:7472:7480	10634863	1	True				
ANR	10634951	PrimaryExpression	0		10634863	0					
ANR	10634952	ElseStatement	else		10634863	0					
ANR	10634953	CompoundStatement		22:8:477:477	10634863	0					
ANR	10634954	IfStatement	if ( * string != * expr )		10634863	0					
ANR	10634955	Condition	* string != * expr	313:14:7541:7556	10634863	0	True				
ANR	10634956	EqualityExpression	* string != * expr		10634863	0		!=			
ANR	10634957	UnaryOperationExpression	* string		10634863	0					
ANR	10634958	UnaryOperator	*		10634863	0					
ANR	10634959	Identifier	string		10634863	1					
ANR	10634960	UnaryOperationExpression	* expr		10634863	1					
ANR	10634961	UnaryOperator	*		10634863	0					
ANR	10634962	Identifier	expr		10634863	1					
ANR	10634963	ReturnStatement	return 0 ;	314:12:7571:7579	10634863	1	True				
ANR	10634964	PrimaryExpression	0		10634863	0					
ANR	10634965	IfStatement	if ( * expr ++ == 0 )		10634863	1					
ANR	10634966	Condition	* expr ++ == 0	315:14:7595:7606	10634863	0	True				
ANR	10634967	EqualityExpression	* expr ++ == 0		10634863	0		==			
ANR	10634968	UnaryOperationExpression	* expr ++		10634863	0					
ANR	10634969	UnaryOperator	*		10634863	0					
ANR	10634970	PostIncDecOperationExpression	expr ++		10634863	1					
ANR	10634971	Identifier	expr		10634863	0					
ANR	10634972	IncDec	++		10634863	1					
ANR	10634973	PrimaryExpression	0		10634863	1					
ANR	10634974	ReturnStatement	return 1 ;	316:12:7621:7629	10634863	1	True				
ANR	10634975	PrimaryExpression	1		10634863	0					
ANR	10634976	ExpressionStatement	string ++	317:10:7641:7649	10634863	2	True				
ANR	10634977	PostIncDecOperationExpression	string ++		10634863	0					
ANR	10634978	Identifier	string		10634863	0					
ANR	10634979	IncDec	++		10634863	1					
ANR	10634980	ReturnType	int		10634863	1					
ANR	10634981	Identifier	ExprMatch		10634863	2					
ANR	10634982	ParameterList	"char * string , char * expr"		10634863	3					
ANR	10634983	Parameter	char * string	290:15:7022:7033	10634863	0	True				
ANR	10634984	ParameterType	char *		10634863	0					
ANR	10634985	Identifier	string		10634863	1					
ANR	10634986	Parameter	char * expr	290:28:7035:7044	10634863	1	True				
ANR	10634987	ParameterType	char *		10634863	0					
ANR	10634988	Identifier	expr		10634863	1					
ANR	10634989	CFGEntryNode	ENTRY		10634863		True				
ANR	10634990	CFGExitNode	EXIT		10634863		True				
ANR	10634991	Symbol	string		10634863						
ANR	10634992	Symbol	* expr		10634863						
ANR	10634993	Symbol	ISSPECIAL		10634863						
ANR	10634994	Symbol	* string		10634863						
ANR	10634995	Symbol	expr		10634863						
ANR	10634996	Symbol	* ++ string		10634863						
ANR	10634997	Symbol	* expr ++		10634863						
ANR	10634998	Function	makedir	328:0:7814:8540							
ANR	10634999	FunctionDef	makedir (char * newdir)		10634998	0					
ANR	10635000	CompoundStatement		329:0:7841:8540	10634998	0					
ANR	10635001	IdentifierDeclStatement	char * buffer = strdup ( newdir ) ;	330:2:7845:7874	10634998	0	True				
ANR	10635002	IdentifierDecl	* buffer = strdup ( newdir )		10634998	0					
ANR	10635003	IdentifierDeclType	char *		10634998	0					
ANR	10635004	Identifier	buffer		10634998	1					
ANR	10635005	AssignmentExpression	* buffer = strdup ( newdir )		10634998	2		=			
ANR	10635006	Identifier	buffer		10634998	0					
ANR	10635007	CallExpression	strdup ( newdir )		10634998	1					
ANR	10635008	Callee	strdup		10634998	0					
ANR	10635009	Identifier	strdup		10634998	0					
ANR	10635010	ArgumentList	newdir		10634998	1					
ANR	10635011	Argument	newdir		10634998	0					
ANR	10635012	Identifier	newdir		10634998	0					
ANR	10635013	IdentifierDeclStatement	char * p ;	331:2:7878:7885	10634998	1	True				
ANR	10635014	IdentifierDecl	* p		10634998	0					
ANR	10635015	IdentifierDeclType	char *		10634998	0					
ANR	10635016	Identifier	p		10634998	1					
ANR	10635017	IdentifierDeclStatement	int len = strlen ( buffer ) ;	332:2:7889:7914	10634998	2	True				
ANR	10635018	IdentifierDecl	len = strlen ( buffer )		10634998	0					
ANR	10635019	IdentifierDeclType	int		10634998	0					
ANR	10635020	Identifier	len		10634998	1					
ANR	10635021	AssignmentExpression	len = strlen ( buffer )		10634998	2		=			
ANR	10635022	Identifier	len		10634998	0					
ANR	10635023	CallExpression	strlen ( buffer )		10634998	1					
ANR	10635024	Callee	strlen		10634998	0					
ANR	10635025	Identifier	strlen		10634998	0					
ANR	10635026	ArgumentList	buffer		10634998	1					
ANR	10635027	Argument	buffer		10634998	0					
ANR	10635028	Identifier	buffer		10634998	0					
ANR	10635029	IfStatement	if ( len <= 0 )		10634998	3					
ANR	10635030	Condition	len <= 0	334:6:7923:7930	10634998	0	True				
ANR	10635031	RelationalExpression	len <= 0		10634998	0		<=			
ANR	10635032	Identifier	len		10634998	0					
ANR	10635033	PrimaryExpression	0		10634998	1					
ANR	10635034	CompoundStatement		6:16:91:91	10634998	1					
ANR	10635035	ExpressionStatement	free ( buffer )	335:4:7939:7951	10634998	0	True				
ANR	10635036	CallExpression	free ( buffer )		10634998	0					
ANR	10635037	Callee	free		10634998	0					
ANR	10635038	Identifier	free		10634998	0					
ANR	10635039	ArgumentList	buffer		10634998	1					
ANR	10635040	Argument	buffer		10634998	0					
ANR	10635041	Identifier	buffer		10634998	0					
ANR	10635042	ReturnStatement	return 0 ;	336:4:7957:7965	10634998	1	True				
ANR	10635043	PrimaryExpression	0		10634998	0					
ANR	10635044	IfStatement	if ( buffer [ len - 1 ] == '/' )		10634998	4					
ANR	10635045	Condition	buffer [ len - 1 ] == '/'	338:6:7977:7996	10634998	0	True				
ANR	10635046	EqualityExpression	buffer [ len - 1 ] == '/'		10634998	0		==			
ANR	10635047	ArrayIndexing	buffer [ len - 1 ]		10634998	0					
ANR	10635048	Identifier	buffer		10634998	0					
ANR	10635049	AdditiveExpression	len - 1		10634998	1		-			
ANR	10635050	Identifier	len		10634998	0					
ANR	10635051	PrimaryExpression	1		10634998	1					
ANR	10635052	PrimaryExpression	'/'		10634998	1					
ANR	10635053	CompoundStatement		10:28:157:157	10634998	1					
ANR	10635054	ExpressionStatement	buffer [ len - 1 ] = '\\0'	339:4:8005:8025	10634998	0	True				
ANR	10635055	AssignmentExpression	buffer [ len - 1 ] = '\\0'		10634998	0		=			
ANR	10635056	ArrayIndexing	buffer [ len - 1 ]		10634998	0					
ANR	10635057	Identifier	buffer		10634998	0					
ANR	10635058	AdditiveExpression	len - 1		10634998	1		-			
ANR	10635059	Identifier	len		10634998	0					
ANR	10635060	PrimaryExpression	1		10634998	1					
ANR	10635061	PrimaryExpression	'\\0'		10634998	1					
ANR	10635062	IfStatement	"if ( mkdir ( buffer , 0755 ) == 0 )"		10634998	5					
ANR	10635063	Condition	"mkdir ( buffer , 0755 ) == 0"	341:6:8037:8060	10634998	0	True				
ANR	10635064	EqualityExpression	"mkdir ( buffer , 0755 ) == 0"		10634998	0		==			
ANR	10635065	CallExpression	"mkdir ( buffer , 0755 )"		10634998	0					
ANR	10635066	Callee	mkdir		10634998	0					
ANR	10635067	Identifier	mkdir		10634998	0					
ANR	10635068	ArgumentList	buffer		10634998	1					
ANR	10635069	Argument	buffer		10634998	0					
ANR	10635070	Identifier	buffer		10634998	0					
ANR	10635071	Argument	0755		10634998	1					
ANR	10635072	PrimaryExpression	0755		10634998	0					
ANR	10635073	PrimaryExpression	0		10634998	1					
ANR	10635074	CompoundStatement		14:4:225:225	10634998	1					
ANR	10635075	ExpressionStatement	free ( buffer )	343:6:8075:8087	10634998	0	True				
ANR	10635076	CallExpression	free ( buffer )		10634998	0					
ANR	10635077	Callee	free		10634998	0					
ANR	10635078	Identifier	free		10634998	0					
ANR	10635079	ArgumentList	buffer		10634998	1					
ANR	10635080	Argument	buffer		10634998	0					
ANR	10635081	Identifier	buffer		10634998	0					
ANR	10635082	ReturnStatement	return 1 ;	344:6:8095:8103	10634998	1	True				
ANR	10635083	PrimaryExpression	1		10634998	0					
ANR	10635084	ExpressionStatement	p = buffer + 1	347:2:8114:8126	10634998	6	True				
ANR	10635085	AssignmentExpression	p = buffer + 1		10634998	0		=			
ANR	10635086	Identifier	p		10634998	0					
ANR	10635087	AdditiveExpression	buffer + 1		10634998	1		+			
ANR	10635088	Identifier	buffer		10634998	0					
ANR	10635089	PrimaryExpression	1		10634998	1					
ANR	10635090	WhileStatement	while ( 1 )		10634998	7					
ANR	10635091	Condition	1	348:9:8137:8137	10634998	0	True				
ANR	10635092	PrimaryExpression	1		10634998	0					
ANR	10635093	CompoundStatement		22:6:310:319	10634998	1					
ANR	10635094	IdentifierDeclStatement	char hold ;	350:6:8152:8161	10634998	0	True				
ANR	10635095	IdentifierDecl	hold		10634998	0					
ANR	10635096	IdentifierDeclType	char		10634998	0					
ANR	10635097	Identifier	hold		10634998	1					
ANR	10635098	WhileStatement	while ( * p && * p != '\\\\' && * p != '/' )		10634998	1					
ANR	10635099	Condition	* p && * p != '\\\\' && * p != '/'	352:12:8176:8204	10634998	0	True				
ANR	10635100	AndExpression	* p && * p != '\\\\' && * p != '/'		10634998	0		&&			
ANR	10635101	UnaryOperationExpression	* p		10634998	0					
ANR	10635102	UnaryOperator	*		10634998	0					
ANR	10635103	Identifier	p		10634998	1					
ANR	10635104	AndExpression	* p != '\\\\' && * p != '/'		10634998	1		&&			
ANR	10635105	EqualityExpression	* p != '\\\\'		10634998	0		!=			
ANR	10635106	UnaryOperationExpression	* p		10634998	0					
ANR	10635107	UnaryOperator	*		10634998	0					
ANR	10635108	Identifier	p		10634998	1					
ANR	10635109	PrimaryExpression	'\\\\'		10634998	1					
ANR	10635110	EqualityExpression	* p != '/'		10634998	1		!=			
ANR	10635111	UnaryOperationExpression	* p		10634998	0					
ANR	10635112	UnaryOperator	*		10634998	0					
ANR	10635113	Identifier	p		10634998	1					
ANR	10635114	PrimaryExpression	'/'		10634998	1					
ANR	10635115	ExpressionStatement	p ++	353:8:8215:8218	10634998	1	True				
ANR	10635116	PostIncDecOperationExpression	p ++		10634998	0					
ANR	10635117	Identifier	p		10634998	0					
ANR	10635118	IncDec	++		10634998	1					
ANR	10635119	ExpressionStatement	hold = * p	354:6:8226:8235	10634998	2	True				
ANR	10635120	AssignmentExpression	hold = * p		10634998	0		=			
ANR	10635121	Identifier	hold		10634998	0					
ANR	10635122	UnaryOperationExpression	* p		10634998	1					
ANR	10635123	UnaryOperator	*		10634998	0					
ANR	10635124	Identifier	p		10634998	1					
ANR	10635125	ExpressionStatement	* p = 0	355:6:8243:8249	10634998	3	True				
ANR	10635126	AssignmentExpression	* p = 0		10634998	0		=			
ANR	10635127	UnaryOperationExpression	* p		10634998	0					
ANR	10635128	UnaryOperator	*		10634998	0					
ANR	10635129	Identifier	p		10634998	1					
ANR	10635130	PrimaryExpression	0		10634998	1					
ANR	10635131	IfStatement	"if ( ( mkdir ( buffer , 0755 ) == - 1 ) && ( errno == ENOENT ) )"		10634998	4					
ANR	10635132	Condition	"( mkdir ( buffer , 0755 ) == - 1 ) && ( errno == ENOENT )"	356:10:8261:8308	10634998	0	True				
ANR	10635133	AndExpression	"( mkdir ( buffer , 0755 ) == - 1 ) && ( errno == ENOENT )"		10634998	0		&&			
ANR	10635134	EqualityExpression	"mkdir ( buffer , 0755 ) == - 1"		10634998	0		==			
ANR	10635135	CallExpression	"mkdir ( buffer , 0755 )"		10634998	0					
ANR	10635136	Callee	mkdir		10634998	0					
ANR	10635137	Identifier	mkdir		10634998	0					
ANR	10635138	ArgumentList	buffer		10634998	1					
ANR	10635139	Argument	buffer		10634998	0					
ANR	10635140	Identifier	buffer		10634998	0					
ANR	10635141	Argument	0755		10634998	1					
ANR	10635142	PrimaryExpression	0755		10634998	0					
ANR	10635143	UnaryOperationExpression	- 1		10634998	1					
ANR	10635144	UnaryOperator	-		10634998	0					
ANR	10635145	PrimaryExpression	1		10634998	1					
ANR	10635146	EqualityExpression	errno == ENOENT		10634998	1		==			
ANR	10635147	Identifier	errno		10634998	0					
ANR	10635148	Identifier	ENOENT		10634998	1					
ANR	10635149	CompoundStatement		29:8:477:477	10634998	1					
ANR	10635150	ExpressionStatement	"fprintf ( stderr , ""%s: Couldn't create directory %s\\n"" , prog , buffer )"	358:10:8331:8395	10634998	0	True				
ANR	10635151	CallExpression	"fprintf ( stderr , ""%s: Couldn't create directory %s\\n"" , prog , buffer )"		10634998	0					
ANR	10635152	Callee	fprintf		10634998	0					
ANR	10635153	Identifier	fprintf		10634998	0					
ANR	10635154	ArgumentList	stderr		10634998	1					
ANR	10635155	Argument	stderr		10634998	0					
ANR	10635156	Identifier	stderr		10634998	0					
ANR	10635157	Argument	"""%s: Couldn't create directory %s\\n"""		10634998	1					
ANR	10635158	PrimaryExpression	"""%s: Couldn't create directory %s\\n"""		10634998	0					
ANR	10635159	Argument	prog		10634998	2					
ANR	10635160	Identifier	prog		10634998	0					
ANR	10635161	Argument	buffer		10634998	3					
ANR	10635162	Identifier	buffer		10634998	0					
ANR	10635163	ExpressionStatement	free ( buffer )	359:10:8407:8419	10634998	1	True				
ANR	10635164	CallExpression	free ( buffer )		10634998	0					
ANR	10635165	Callee	free		10634998	0					
ANR	10635166	Identifier	free		10634998	0					
ANR	10635167	ArgumentList	buffer		10634998	1					
ANR	10635168	Argument	buffer		10634998	0					
ANR	10635169	Identifier	buffer		10634998	0					
ANR	10635170	ReturnStatement	return 0 ;	360:10:8431:8439	10634998	2	True				
ANR	10635171	PrimaryExpression	0		10634998	0					
ANR	10635172	IfStatement	if ( hold == 0 )		10634998	5					
ANR	10635173	Condition	hold == 0	362:10:8461:8469	10634998	0	True				
ANR	10635174	EqualityExpression	hold == 0		10634998	0		==			
ANR	10635175	Identifier	hold		10634998	0					
ANR	10635176	PrimaryExpression	0		10634998	1					
ANR	10635177	BreakStatement	break ;	363:8:8480:8485	10634998	1	True				
ANR	10635178	ExpressionStatement	* p ++ = hold	364:6:8493:8504	10634998	6	True				
ANR	10635179	AssignmentExpression	* p ++ = hold		10634998	0		=			
ANR	10635180	UnaryOperationExpression	* p ++		10634998	0					
ANR	10635181	UnaryOperator	*		10634998	0					
ANR	10635182	PostIncDecOperationExpression	p ++		10634998	1					
ANR	10635183	Identifier	p		10634998	0					
ANR	10635184	IncDec	++		10634998	1					
ANR	10635185	Identifier	hold		10634998	1					
ANR	10635186	ExpressionStatement	free ( buffer )	366:2:8514:8526	10634998	8	True				
ANR	10635187	CallExpression	free ( buffer )		10634998	0					
ANR	10635188	Callee	free		10634998	0					
ANR	10635189	Identifier	free		10634998	0					
ANR	10635190	ArgumentList	buffer		10634998	1					
ANR	10635191	Argument	buffer		10634998	0					
ANR	10635192	Identifier	buffer		10634998	0					
ANR	10635193	ReturnStatement	return 1 ;	367:2:8530:8538	10634998	9	True				
ANR	10635194	PrimaryExpression	1		10634998	0					
ANR	10635195	ReturnType	int		10634998	1					
ANR	10635196	Identifier	makedir		10634998	2					
ANR	10635197	ParameterList	char * newdir		10634998	3					
ANR	10635198	Parameter	char * newdir	328:13:7827:7838	10634998	0	True				
ANR	10635199	ParameterType	char *		10634998	0					
ANR	10635200	Identifier	newdir		10634998	1					
ANR	10635201	CFGEntryNode	ENTRY		10634998		True				
ANR	10635202	CFGExitNode	EXIT		10634998		True				
ANR	10635203	Symbol	* buffer		10634998						
ANR	10635204	Symbol	errno		10634998						
ANR	10635205	Symbol	* p ++		10634998						
ANR	10635206	Symbol	ENOENT		10634998						
ANR	10635207	Symbol	stderr		10634998						
ANR	10635208	Symbol	prog		10634998						
ANR	10635209	Symbol	hold		10634998						
ANR	10635210	Symbol	p		10634998						
ANR	10635211	Symbol	strlen		10634998						
ANR	10635212	Symbol	len		10634998						
ANR	10635213	Symbol	newdir		10634998						
ANR	10635214	Symbol	* p		10634998						
ANR	10635215	Symbol	strdup		10634998						
ANR	10635216	Symbol	buffer		10634998						
ANR	10635217	Symbol	mkdir		10634998						
ANR	10635218	Symbol	* len		10634998						
ANR	10635219	Function	matchname	371:0:8544:8813							
ANR	10635220	FunctionDef	"matchname (int arg , int argc , char * * argv , char * fname)"		10635219	0					
ANR	10635221	CompoundStatement		372:0:8601:8813	10635219	0					
ANR	10635222	IfStatement	if ( arg == argc )		10635219	0					
ANR	10635223	Condition	arg == argc	373:6:8609:8619	10635219	0	True				
ANR	10635224	EqualityExpression	arg == argc		10635219	0		==			
ANR	10635225	Identifier	arg		10635219	0					
ANR	10635226	Identifier	argc		10635219	1					
ANR	10635227	ReturnStatement	return 1 ;	374:4:8675:8683	10635219	1	True				
ANR	10635228	PrimaryExpression	1		10635219	0					
ANR	10635229	WhileStatement	while ( arg < argc )		10635219	1					
ANR	10635230	Condition	arg < argc	376:9:8695:8704	10635219	0	True				
ANR	10635231	RelationalExpression	arg < argc		10635219	0		<			
ANR	10635232	Identifier	arg		10635219	0					
ANR	10635233	Identifier	argc		10635219	1					
ANR	10635234	IfStatement	"if ( ExprMatch ( fname , argv [ arg ++ ] ) )"		10635219	1					
ANR	10635235	Condition	"ExprMatch ( fname , argv [ arg ++ ] )"	377:8:8715:8742	10635219	0	True				
ANR	10635236	CallExpression	"ExprMatch ( fname , argv [ arg ++ ] )"		10635219	0					
ANR	10635237	Callee	ExprMatch		10635219	0					
ANR	10635238	Identifier	ExprMatch		10635219	0					
ANR	10635239	ArgumentList	fname		10635219	1					
ANR	10635240	Argument	fname		10635219	0					
ANR	10635241	Identifier	fname		10635219	0					
ANR	10635242	Argument	argv [ arg ++ ]		10635219	1					
ANR	10635243	ArrayIndexing	argv [ arg ++ ]		10635219	0					
ANR	10635244	Identifier	argv		10635219	0					
ANR	10635245	PostIncDecOperationExpression	arg ++		10635219	1					
ANR	10635246	Identifier	arg		10635219	0					
ANR	10635247	IncDec	++		10635219	1					
ANR	10635248	ReturnStatement	return 1 ;	378:6:8751:8759	10635219	1	True				
ANR	10635249	PrimaryExpression	1		10635219	0					
ANR	10635250	ReturnStatement	return 0 ;	380:2:8764:8772	10635219	2	True				
ANR	10635251	PrimaryExpression	0		10635219	0					
ANR	10635252	ReturnType	int		10635219	1					
ANR	10635253	Identifier	matchname		10635219	2					
ANR	10635254	ParameterList	"int arg , int argc , char * * argv , char * fname"		10635219	3					
ANR	10635255	Parameter	int arg	371:15:8559:8565	10635219	0	True				
ANR	10635256	ParameterType	int		10635219	0					
ANR	10635257	Identifier	arg		10635219	1					
ANR	10635258	Parameter	int argc	371:23:8567:8574	10635219	1	True				
ANR	10635259	ParameterType	int		10635219	0					
ANR	10635260	Identifier	argc		10635219	1					
ANR	10635261	Parameter	char * * argv	371:32:8576:8586	10635219	2	True				
ANR	10635262	ParameterType	char * *		10635219	0					
ANR	10635263	Identifier	argv		10635219	1					
ANR	10635264	Parameter	char * fname	371:44:8588:8598	10635219	3	True				
ANR	10635265	ParameterType	char *		10635219	0					
ANR	10635266	Identifier	fname		10635219	1					
ANR	10635267	CFGEntryNode	ENTRY		10635219		True				
ANR	10635268	CFGExitNode	EXIT		10635219		True				
ANR	10635269	Symbol	argc		10635219						
ANR	10635270	Symbol	fname		10635219						
ANR	10635271	Symbol	arg		10635219						
ANR	10635272	Symbol	* argv		10635219						
ANR	10635273	Symbol	ExprMatch		10635219						
ANR	10635274	Symbol	argv		10635219						
ANR	10635275	Function	tar	386:0:8849:14477							
ANR	10635276	FunctionDef	"tar (gzFile in , int action , int arg , int argc , char * * argv)"		10635275	0					
ANR	10635277	CompoundStatement		387:0:8909:14477	10635275	0					
ANR	10635278	IdentifierDeclStatement	union tar_buffer buffer ;	388:2:8913:8937	10635275	0	True				
ANR	10635279	IdentifierDecl	buffer		10635275	0					
ANR	10635280	IdentifierDeclType	union tar_buffer		10635275	0					
ANR	10635281	Identifier	buffer		10635275	1					
ANR	10635282	IdentifierDeclStatement	int len ;	389:2:8941:8951	10635275	1	True				
ANR	10635283	IdentifierDecl	len		10635275	0					
ANR	10635284	IdentifierDeclType	int		10635275	0					
ANR	10635285	Identifier	len		10635275	1					
ANR	10635286	IdentifierDeclStatement	int err ;	390:2:8955:8965	10635275	2	True				
ANR	10635287	IdentifierDecl	err		10635275	0					
ANR	10635288	IdentifierDeclType	int		10635275	0					
ANR	10635289	Identifier	err		10635275	1					
ANR	10635290	IdentifierDeclStatement	int getheader = 1 ;	391:2:8969:8989	10635275	3	True				
ANR	10635291	IdentifierDecl	getheader = 1		10635275	0					
ANR	10635292	IdentifierDeclType	int		10635275	0					
ANR	10635293	Identifier	getheader		10635275	1					
ANR	10635294	AssignmentExpression	getheader = 1		10635275	2		=			
ANR	10635295	Identifier	getheader		10635275	0					
ANR	10635296	PrimaryExpression	1		10635275	1					
ANR	10635297	IdentifierDeclStatement	int remaining = 0 ;	392:2:8993:9013	10635275	4	True				
ANR	10635298	IdentifierDecl	remaining = 0		10635275	0					
ANR	10635299	IdentifierDeclType	int		10635275	0					
ANR	10635300	Identifier	remaining		10635275	1					
ANR	10635301	AssignmentExpression	remaining = 0		10635275	2		=			
ANR	10635302	Identifier	remaining		10635275	0					
ANR	10635303	PrimaryExpression	0		10635275	1					
ANR	10635304	IdentifierDeclStatement	FILE * outfile = NULL ;	393:2:9017:9039	10635275	5	True				
ANR	10635305	IdentifierDecl	* outfile = NULL		10635275	0					
ANR	10635306	IdentifierDeclType	FILE *		10635275	0					
ANR	10635307	Identifier	outfile		10635275	1					
ANR	10635308	AssignmentExpression	* outfile = NULL		10635275	2		=			
ANR	10635309	Identifier	NULL		10635275	0					
ANR	10635310	Identifier	NULL		10635275	1					
ANR	10635311	IdentifierDeclStatement	char fname [ BLOCKSIZE ] ;	394:2:9043:9066	10635275	6	True				
ANR	10635312	IdentifierDecl	fname [ BLOCKSIZE ]		10635275	0					
ANR	10635313	IdentifierDeclType	char [ BLOCKSIZE ]		10635275	0					
ANR	10635314	Identifier	fname		10635275	1					
ANR	10635315	Identifier	BLOCKSIZE		10635275	2					
ANR	10635316	IdentifierDeclStatement	int tarmode ;	395:2:9070:9084	10635275	7	True				
ANR	10635317	IdentifierDecl	tarmode		10635275	0					
ANR	10635318	IdentifierDeclType	int		10635275	0					
ANR	10635319	Identifier	tarmode		10635275	1					
ANR	10635320	IdentifierDeclStatement	time_t tartime ;	396:2:9088:9102	10635275	8	True				
ANR	10635321	IdentifierDecl	tartime		10635275	0					
ANR	10635322	IdentifierDeclType	time_t		10635275	0					
ANR	10635323	Identifier	tartime		10635275	1					
ANR	10635324	IdentifierDeclStatement	struct attr_item * attributes = NULL ;	397:2:9106:9141	10635275	9	True				
ANR	10635325	IdentifierDecl	* attributes = NULL		10635275	0					
ANR	10635326	IdentifierDeclType	struct attr_item *		10635275	0					
ANR	10635327	Identifier	attributes		10635275	1					
ANR	10635328	AssignmentExpression	* attributes = NULL		10635275	2		=			
ANR	10635329	Identifier	NULL		10635275	0					
ANR	10635330	Identifier	NULL		10635275	1					
ANR	10635331	IfStatement	if ( action == TGZ_LIST )		10635275	10					
ANR	10635332	Condition	action == TGZ_LIST	399:6:9150:9167	10635275	0	True				
ANR	10635333	EqualityExpression	action == TGZ_LIST		10635275	0		==			
ANR	10635334	Identifier	action		10635275	0					
ANR	10635335	Identifier	TGZ_LIST		10635275	1					
ANR	10635336	Statement	printf	400:4:9174:9179	10635275	1	True				
ANR	10635337	Statement	(	400:10:9180:9180	10635275	11	True				
ANR	10635338	Statement	"""    date      time     size                       file\\n"""	400:11:9181:9238	10635275	12	True				
ANR	10635339	Statement	""" ---------- -------- --------- -------------------------------------\\n"""	401:11:9251:9322	10635275	13	True				
ANR	10635340	Statement	)	401:83:9323:9323	10635275	14	True				
ANR	10635341	ExpressionStatement		401:84:9324:9324	10635275	15	True				
ANR	10635342	WhileStatement	while ( 1 )		10635275	16					
ANR	10635343	Condition	1	402:9:9335:9335	10635275	0	True				
ANR	10635344	PrimaryExpression	1		10635275	0					
ANR	10635345	CompoundStatement		17:4:432:432	10635275	1					
ANR	10635346	ExpressionStatement	"len = gzread ( in , & buffer , BLOCKSIZE )"	404:6:9350:9386	10635275	0	True				
ANR	10635347	AssignmentExpression	"len = gzread ( in , & buffer , BLOCKSIZE )"		10635275	0		=			
ANR	10635348	Identifier	len		10635275	0					
ANR	10635349	CallExpression	"gzread ( in , & buffer , BLOCKSIZE )"		10635275	1					
ANR	10635350	Callee	gzread		10635275	0					
ANR	10635351	Identifier	gzread		10635275	0					
ANR	10635352	ArgumentList	in		10635275	1					
ANR	10635353	Argument	in		10635275	0					
ANR	10635354	Identifier	in		10635275	0					
ANR	10635355	Argument	& buffer		10635275	1					
ANR	10635356	UnaryOperationExpression	& buffer		10635275	0					
ANR	10635357	UnaryOperator	&		10635275	0					
ANR	10635358	Identifier	buffer		10635275	1					
ANR	10635359	Argument	BLOCKSIZE		10635275	2					
ANR	10635360	Identifier	BLOCKSIZE		10635275	0					
ANR	10635361	IfStatement	if ( len < 0 )		10635275	1					
ANR	10635362	Condition	len < 0	405:10:9398:9404	10635275	0	True				
ANR	10635363	RelationalExpression	len < 0		10635275	0		<			
ANR	10635364	Identifier	len		10635275	0					
ANR	10635365	PrimaryExpression	0		10635275	1					
ANR	10635366	ExpressionStatement	"error ( gzerror ( in , & err ) )"	406:8:9415:9439	10635275	1	True				
ANR	10635367	CallExpression	"error ( gzerror ( in , & err ) )"		10635275	0					
ANR	10635368	Callee	error		10635275	0					
ANR	10635369	Identifier	error		10635275	0					
ANR	10635370	ArgumentList	"gzerror ( in , & err )"		10635275	1					
ANR	10635371	Argument	"gzerror ( in , & err )"		10635275	0					
ANR	10635372	CallExpression	"gzerror ( in , & err )"		10635275	0					
ANR	10635373	Callee	gzerror		10635275	0					
ANR	10635374	Identifier	gzerror		10635275	0					
ANR	10635375	ArgumentList	in		10635275	1					
ANR	10635376	Argument	in		10635275	0					
ANR	10635377	Identifier	in		10635275	0					
ANR	10635378	Argument	& err		10635275	1					
ANR	10635379	UnaryOperationExpression	& err		10635275	0					
ANR	10635380	UnaryOperator	&		10635275	0					
ANR	10635381	Identifier	err		10635275	1					
ANR	10635382	IfStatement	if ( len != BLOCKSIZE )		10635275	2					
ANR	10635383	Condition	len != BLOCKSIZE	411:10:9550:9565	10635275	0	True				
ANR	10635384	EqualityExpression	len != BLOCKSIZE		10635275	0		!=			
ANR	10635385	Identifier	len		10635275	0					
ANR	10635386	Identifier	BLOCKSIZE		10635275	1					
ANR	10635387	CompoundStatement		26:8:666:666	10635275	1					
ANR	10635388	ExpressionStatement	action = TGZ_INVALID	413:10:9588:9608	10635275	0	True				
ANR	10635389	AssignmentExpression	action = TGZ_INVALID		10635275	0		=			
ANR	10635390	Identifier	action		10635275	0					
ANR	10635391	Identifier	TGZ_INVALID		10635275	1					
ANR	10635392	ExpressionStatement	remaining = 0	414:10:9643:9656	10635275	1	True				
ANR	10635393	AssignmentExpression	remaining = 0		10635275	0		=			
ANR	10635394	Identifier	remaining		10635275	0					
ANR	10635395	PrimaryExpression	0		10635275	1					
ANR	10635396	IfStatement	if ( getheader >= 1 )		10635275	3					
ANR	10635397	Condition	getheader >= 1	420:10:9769:9782	10635275	0	True				
ANR	10635398	RelationalExpression	getheader >= 1		10635275	0		>=			
ANR	10635399	Identifier	getheader		10635275	0					
ANR	10635400	PrimaryExpression	1		10635275	1					
ANR	10635401	CompoundStatement		35:8:883:883	10635275	1					
ANR	10635402	IfStatement	if ( len == 0 || buffer . header . name [ 0 ] == 0 )		10635275	0					
ANR	10635403	Condition	len == 0 || buffer . header . name [ 0 ] == 0	427:14:9941:9978	10635275	0	True				
ANR	10635404	OrExpression	len == 0 || buffer . header . name [ 0 ] == 0		10635275	0		||			
ANR	10635405	EqualityExpression	len == 0		10635275	0		==			
ANR	10635406	Identifier	len		10635275	0					
ANR	10635407	PrimaryExpression	0		10635275	1					
ANR	10635408	EqualityExpression	buffer . header . name [ 0 ] == 0		10635275	1		==			
ANR	10635409	ArrayIndexing	buffer . header . name [ 0 ]		10635275	0					
ANR	10635410	MemberAccess	buffer . header . name		10635275	0					
ANR	10635411	MemberAccess	buffer . header		10635275	0					
ANR	10635412	Identifier	buffer		10635275	0					
ANR	10635413	Identifier	header		10635275	1					
ANR	10635414	Identifier	name		10635275	1					
ANR	10635415	PrimaryExpression	0		10635275	1					
ANR	10635416	PrimaryExpression	0		10635275	1					
ANR	10635417	BreakStatement	break ;	428:12:9993:9998	10635275	1	True				
ANR	10635418	ExpressionStatement	"tarmode = getoct ( buffer . header . mode , 8 )"	430:10:10011:10049	10635275	1	True				
ANR	10635419	AssignmentExpression	"tarmode = getoct ( buffer . header . mode , 8 )"		10635275	0		=			
ANR	10635420	Identifier	tarmode		10635275	0					
ANR	10635421	CallExpression	"getoct ( buffer . header . mode , 8 )"		10635275	1					
ANR	10635422	Callee	getoct		10635275	0					
ANR	10635423	Identifier	getoct		10635275	0					
ANR	10635424	ArgumentList	buffer . header . mode		10635275	1					
ANR	10635425	Argument	buffer . header . mode		10635275	0					
ANR	10635426	MemberAccess	buffer . header . mode		10635275	0					
ANR	10635427	MemberAccess	buffer . header		10635275	0					
ANR	10635428	Identifier	buffer		10635275	0					
ANR	10635429	Identifier	header		10635275	1					
ANR	10635430	Identifier	mode		10635275	1					
ANR	10635431	Argument	8		10635275	1					
ANR	10635432	PrimaryExpression	8		10635275	0					
ANR	10635433	ExpressionStatement	"tartime = ( time_t ) getoct ( buffer . header . mtime , 12 )"	431:10:10061:10109	10635275	2	True				
ANR	10635434	AssignmentExpression	"tartime = ( time_t ) getoct ( buffer . header . mtime , 12 )"		10635275	0		=			
ANR	10635435	Identifier	tartime		10635275	0					
ANR	10635436	CastExpression	"( time_t ) getoct ( buffer . header . mtime , 12 )"		10635275	1					
ANR	10635437	CastTarget	time_t		10635275	0					
ANR	10635438	CallExpression	"getoct ( buffer . header . mtime , 12 )"		10635275	1					
ANR	10635439	Callee	getoct		10635275	0					
ANR	10635440	Identifier	getoct		10635275	0					
ANR	10635441	ArgumentList	buffer . header . mtime		10635275	1					
ANR	10635442	Argument	buffer . header . mtime		10635275	0					
ANR	10635443	MemberAccess	buffer . header . mtime		10635275	0					
ANR	10635444	MemberAccess	buffer . header		10635275	0					
ANR	10635445	Identifier	buffer		10635275	0					
ANR	10635446	Identifier	header		10635275	1					
ANR	10635447	Identifier	mtime		10635275	1					
ANR	10635448	Argument	12		10635275	1					
ANR	10635449	PrimaryExpression	12		10635275	0					
ANR	10635450	IfStatement	if ( tarmode == - 1 || tartime == ( time_t ) - 1 )		10635275	3					
ANR	10635451	Condition	tarmode == - 1 || tartime == ( time_t ) - 1	432:14:10125:10162	10635275	0	True				
ANR	10635452	OrExpression	tarmode == - 1 || tartime == ( time_t ) - 1		10635275	0		||			
ANR	10635453	EqualityExpression	tarmode == - 1		10635275	0		==			
ANR	10635454	Identifier	tarmode		10635275	0					
ANR	10635455	UnaryOperationExpression	- 1		10635275	1					
ANR	10635456	UnaryOperator	-		10635275	0					
ANR	10635457	PrimaryExpression	1		10635275	1					
ANR	10635458	EqualityExpression	tartime == ( time_t ) - 1		10635275	1		==			
ANR	10635459	Identifier	tartime		10635275	0					
ANR	10635460	CastExpression	( time_t ) - 1		10635275	1					
ANR	10635461	CastTarget	time_t		10635275	0					
ANR	10635462	UnaryOperationExpression	- 1		10635275	1					
ANR	10635463	UnaryOperator	-		10635275	0					
ANR	10635464	PrimaryExpression	1		10635275	1					
ANR	10635465	CompoundStatement		47:12:1267:1267	10635275	1					
ANR	10635466	ExpressionStatement	buffer . header . name [ 0 ] = 0	434:14:10193:10218	10635275	0	True				
ANR	10635467	AssignmentExpression	buffer . header . name [ 0 ] = 0		10635275	0		=			
ANR	10635468	ArrayIndexing	buffer . header . name [ 0 ]		10635275	0					
ANR	10635469	MemberAccess	buffer . header . name		10635275	0					
ANR	10635470	MemberAccess	buffer . header		10635275	0					
ANR	10635471	Identifier	buffer		10635275	0					
ANR	10635472	Identifier	header		10635275	1					
ANR	10635473	Identifier	name		10635275	1					
ANR	10635474	PrimaryExpression	0		10635275	1					
ANR	10635475	PrimaryExpression	0		10635275	1					
ANR	10635476	ExpressionStatement	action = TGZ_INVALID	435:14:10234:10254	10635275	1	True				
ANR	10635477	AssignmentExpression	action = TGZ_INVALID		10635275	0		=			
ANR	10635478	Identifier	action		10635275	0					
ANR	10635479	Identifier	TGZ_INVALID		10635275	1					
ANR	10635480	IfStatement	if ( getheader == 1 )		10635275	4					
ANR	10635481	Condition	getheader == 1	438:14:10285:10298	10635275	0	True				
ANR	10635482	EqualityExpression	getheader == 1		10635275	0		==			
ANR	10635483	Identifier	getheader		10635275	0					
ANR	10635484	PrimaryExpression	1		10635275	1					
ANR	10635485	CompoundStatement		53:12:1403:1403	10635275	1					
ANR	10635486	ExpressionStatement	"strncpy ( fname , buffer . header . name , SHORTNAMESIZE )"	440:14:10329:10376	10635275	0	True				
ANR	10635487	CallExpression	"strncpy ( fname , buffer . header . name , SHORTNAMESIZE )"		10635275	0					
ANR	10635488	Callee	strncpy		10635275	0					
ANR	10635489	Identifier	strncpy		10635275	0					
ANR	10635490	ArgumentList	fname		10635275	1					
ANR	10635491	Argument	fname		10635275	0					
ANR	10635492	Identifier	fname		10635275	0					
ANR	10635493	Argument	buffer . header . name		10635275	1					
ANR	10635494	MemberAccess	buffer . header . name		10635275	0					
ANR	10635495	MemberAccess	buffer . header		10635275	0					
ANR	10635496	Identifier	buffer		10635275	0					
ANR	10635497	Identifier	header		10635275	1					
ANR	10635498	Identifier	name		10635275	1					
ANR	10635499	Argument	SHORTNAMESIZE		10635275	2					
ANR	10635500	Identifier	SHORTNAMESIZE		10635275	0					
ANR	10635501	IfStatement	if ( fname [ SHORTNAMESIZE - 1 ] != 0 )		10635275	1					
ANR	10635502	Condition	fname [ SHORTNAMESIZE - 1 ] != 0	441:18:10396:10422	10635275	0	True				
ANR	10635503	EqualityExpression	fname [ SHORTNAMESIZE - 1 ] != 0		10635275	0		!=			
ANR	10635504	ArrayIndexing	fname [ SHORTNAMESIZE - 1 ]		10635275	0					
ANR	10635505	Identifier	fname		10635275	0					
ANR	10635506	AdditiveExpression	SHORTNAMESIZE - 1		10635275	1		-			
ANR	10635507	Identifier	SHORTNAMESIZE		10635275	0					
ANR	10635508	PrimaryExpression	1		10635275	1					
ANR	10635509	PrimaryExpression	0		10635275	1					
ANR	10635510	ExpressionStatement	fname [ SHORTNAMESIZE ] = 0	442:18:10443:10467	10635275	1	True				
ANR	10635511	AssignmentExpression	fname [ SHORTNAMESIZE ] = 0		10635275	0		=			
ANR	10635512	ArrayIndexing	fname [ SHORTNAMESIZE ]		10635275	0					
ANR	10635513	Identifier	fname		10635275	0					
ANR	10635514	Identifier	SHORTNAMESIZE		10635275	1					
ANR	10635515	PrimaryExpression	0		10635275	1					
ANR	10635516	ElseStatement	else		10635275	0					
ANR	10635517	CompoundStatement		59:12:1600:1600	10635275	0					
ANR	10635518	IfStatement	"if ( strncmp ( fname , buffer . header . name , SHORTNAMESIZE - 1 ) != 0 )"		10635275	0					
ANR	10635519	Condition	"strncmp ( fname , buffer . header . name , SHORTNAMESIZE - 1 ) != 0"	449:18:10625:10678	10635275	0	True				
ANR	10635520	EqualityExpression	"strncmp ( fname , buffer . header . name , SHORTNAMESIZE - 1 ) != 0"		10635275	0		!=			
ANR	10635521	CallExpression	"strncmp ( fname , buffer . header . name , SHORTNAMESIZE - 1 )"		10635275	0					
ANR	10635522	Callee	strncmp		10635275	0					
ANR	10635523	Identifier	strncmp		10635275	0					
ANR	10635524	ArgumentList	fname		10635275	1					
ANR	10635525	Argument	fname		10635275	0					
ANR	10635526	Identifier	fname		10635275	0					
ANR	10635527	Argument	buffer . header . name		10635275	1					
ANR	10635528	MemberAccess	buffer . header . name		10635275	0					
ANR	10635529	MemberAccess	buffer . header		10635275	0					
ANR	10635530	Identifier	buffer		10635275	0					
ANR	10635531	Identifier	header		10635275	1					
ANR	10635532	Identifier	name		10635275	1					
ANR	10635533	Argument	SHORTNAMESIZE - 1		10635275	2					
ANR	10635534	AdditiveExpression	SHORTNAMESIZE - 1		10635275	0		-			
ANR	10635535	Identifier	SHORTNAMESIZE		10635275	0					
ANR	10635536	PrimaryExpression	1		10635275	1					
ANR	10635537	PrimaryExpression	0		10635275	1					
ANR	10635538	ExpressionStatement	"error ( ""bad long name"" )"	450:18:10699:10721	10635275	1	True				
ANR	10635539	CallExpression	"error ( ""bad long name"" )"		10635275	0					
ANR	10635540	Callee	error		10635275	0					
ANR	10635541	Identifier	error		10635275	0					
ANR	10635542	ArgumentList	"""bad long name"""		10635275	1					
ANR	10635543	Argument	"""bad long name"""		10635275	0					
ANR	10635544	PrimaryExpression	"""bad long name"""		10635275	0					
ANR	10635545	ExpressionStatement	getheader = 1	451:14:10737:10750	10635275	1	True				
ANR	10635546	AssignmentExpression	getheader = 1		10635275	0		=			
ANR	10635547	Identifier	getheader		10635275	0					
ANR	10635548	PrimaryExpression	1		10635275	1					
ANR	10635549	SwitchStatement	switch ( buffer . header . typeflag )		10635275	5					
ANR	10635550	Condition	buffer . header . typeflag	457:18:10856:10877	10635275	0	True				
ANR	10635551	MemberAccess	buffer . header . typeflag		10635275	0					
ANR	10635552	MemberAccess	buffer . header		10635275	0					
ANR	10635553	Identifier	buffer		10635275	0					
ANR	10635554	Identifier	header		10635275	1					
ANR	10635555	Identifier	typeflag		10635275	1					
ANR	10635556	CompoundStatement		72:12:1982:1982	10635275	1					
ANR	10635557	Label	case DIRTYPE :	459:12:10906:10918	10635275	0	True				
ANR	10635558	Identifier	DIRTYPE		10635275	0					
ANR	10635559	IfStatement	if ( action == TGZ_LIST )		10635275	1					
ANR	10635560	Condition	action == TGZ_LIST	460:18:10938:10955	10635275	0	True				
ANR	10635561	EqualityExpression	action == TGZ_LIST		10635275	0		==			
ANR	10635562	Identifier	action		10635275	0					
ANR	10635563	Identifier	TGZ_LIST		10635275	1					
ANR	10635564	ExpressionStatement	"printf ( "" %s     <dir> %s\\n"" , strtime ( & tartime ) , fname )"	461:16:10974:11026	10635275	1	True				
ANR	10635565	CallExpression	"printf ( "" %s     <dir> %s\\n"" , strtime ( & tartime ) , fname )"		10635275	0					
ANR	10635566	Callee	printf		10635275	0					
ANR	10635567	Identifier	printf		10635275	0					
ANR	10635568	ArgumentList	""" %s     <dir> %s\\n"""		10635275	1					
ANR	10635569	Argument	""" %s     <dir> %s\\n"""		10635275	0					
ANR	10635570	PrimaryExpression	""" %s     <dir> %s\\n"""		10635275	0					
ANR	10635571	Argument	strtime ( & tartime )		10635275	1					
ANR	10635572	CallExpression	strtime ( & tartime )		10635275	0					
ANR	10635573	Callee	strtime		10635275	0					
ANR	10635574	Identifier	strtime		10635275	0					
ANR	10635575	ArgumentList	& tartime		10635275	1					
ANR	10635576	Argument	& tartime		10635275	0					
ANR	10635577	UnaryOperationExpression	& tartime		10635275	0					
ANR	10635578	UnaryOperator	&		10635275	0					
ANR	10635579	Identifier	tartime		10635275	1					
ANR	10635580	Argument	fname		10635275	2					
ANR	10635581	Identifier	fname		10635275	0					
ANR	10635582	IfStatement	if ( action == TGZ_EXTRACT )		10635275	2					
ANR	10635583	Condition	action == TGZ_EXTRACT	462:18:11046:11066	10635275	0	True				
ANR	10635584	EqualityExpression	action == TGZ_EXTRACT		10635275	0		==			
ANR	10635585	Identifier	action		10635275	0					
ANR	10635586	Identifier	TGZ_EXTRACT		10635275	1					
ANR	10635587	CompoundStatement		77:16:2175:2175	10635275	1					
ANR	10635588	ExpressionStatement	makedir ( fname )	464:18:11105:11119	10635275	0	True				
ANR	10635589	CallExpression	makedir ( fname )		10635275	0					
ANR	10635590	Callee	makedir		10635275	0					
ANR	10635591	Identifier	makedir		10635275	0					
ANR	10635592	ArgumentList	fname		10635275	1					
ANR	10635593	Argument	fname		10635275	0					
ANR	10635594	Identifier	fname		10635275	0					
ANR	10635595	ExpressionStatement	"push_attr ( & attributes , fname , tarmode , tartime )"	465:18:11139:11183	10635275	1	True				
ANR	10635596	CallExpression	"push_attr ( & attributes , fname , tarmode , tartime )"		10635275	0					
ANR	10635597	Callee	push_attr		10635275	0					
ANR	10635598	Identifier	push_attr		10635275	0					
ANR	10635599	ArgumentList	& attributes		10635275	1					
ANR	10635600	Argument	& attributes		10635275	0					
ANR	10635601	UnaryOperationExpression	& attributes		10635275	0					
ANR	10635602	UnaryOperator	&		10635275	0					
ANR	10635603	Identifier	attributes		10635275	1					
ANR	10635604	Argument	fname		10635275	1					
ANR	10635605	Identifier	fname		10635275	0					
ANR	10635606	Argument	tarmode		10635275	2					
ANR	10635607	Identifier	tarmode		10635275	0					
ANR	10635608	Argument	tartime		10635275	3					
ANR	10635609	Identifier	tartime		10635275	0					
ANR	10635610	BreakStatement	break ;	467:14:11217:11222	10635275	3	True				
ANR	10635611	Label	case REGTYPE :	468:12:11236:11248	10635275	4	True				
ANR	10635612	Identifier	REGTYPE		10635275	0					
ANR	10635613	Label	case AREGTYPE :	469:12:11262:11275	10635275	5	True				
ANR	10635614	Identifier	AREGTYPE		10635275	0					
ANR	10635615	ExpressionStatement	"remaining = getoct ( buffer . header . size , 12 )"	470:14:11291:11332	10635275	6	True				
ANR	10635616	AssignmentExpression	"remaining = getoct ( buffer . header . size , 12 )"		10635275	0		=			
ANR	10635617	Identifier	remaining		10635275	0					
ANR	10635618	CallExpression	"getoct ( buffer . header . size , 12 )"		10635275	1					
ANR	10635619	Callee	getoct		10635275	0					
ANR	10635620	Identifier	getoct		10635275	0					
ANR	10635621	ArgumentList	buffer . header . size		10635275	1					
ANR	10635622	Argument	buffer . header . size		10635275	0					
ANR	10635623	MemberAccess	buffer . header . size		10635275	0					
ANR	10635624	MemberAccess	buffer . header		10635275	0					
ANR	10635625	Identifier	buffer		10635275	0					
ANR	10635626	Identifier	header		10635275	1					
ANR	10635627	Identifier	size		10635275	1					
ANR	10635628	Argument	12		10635275	1					
ANR	10635629	PrimaryExpression	12		10635275	0					
ANR	10635630	IfStatement	if ( remaining == - 1 )		10635275	7					
ANR	10635631	Condition	remaining == - 1	471:18:11352:11366	10635275	0	True				
ANR	10635632	EqualityExpression	remaining == - 1		10635275	0		==			
ANR	10635633	Identifier	remaining		10635275	0					
ANR	10635634	UnaryOperationExpression	- 1		10635275	1					
ANR	10635635	UnaryOperator	-		10635275	0					
ANR	10635636	PrimaryExpression	1		10635275	1					
ANR	10635637	CompoundStatement		86:16:2475:2475	10635275	1					
ANR	10635638	ExpressionStatement	action = TGZ_INVALID	473:18:11405:11425	10635275	0	True				
ANR	10635639	AssignmentExpression	action = TGZ_INVALID		10635275	0		=			
ANR	10635640	Identifier	action		10635275	0					
ANR	10635641	Identifier	TGZ_INVALID		10635275	1					
ANR	10635642	BreakStatement	break ;	474:18:11445:11450	10635275	1	True				
ANR	10635643	IfStatement	if ( action == TGZ_LIST )		10635275	8					
ANR	10635644	Condition	action == TGZ_LIST	476:18:11488:11505	10635275	0	True				
ANR	10635645	EqualityExpression	action == TGZ_LIST		10635275	0		==			
ANR	10635646	Identifier	action		10635275	0					
ANR	10635647	Identifier	TGZ_LIST		10635275	1					
ANR	10635648	ExpressionStatement	"printf ( "" %s %9d %s\\n"" , strtime ( & tartime ) , remaining , fname )"	477:16:11524:11580	10635275	1	True				
ANR	10635649	CallExpression	"printf ( "" %s %9d %s\\n"" , strtime ( & tartime ) , remaining , fname )"		10635275	0					
ANR	10635650	Callee	printf		10635275	0					
ANR	10635651	Identifier	printf		10635275	0					
ANR	10635652	ArgumentList	""" %s %9d %s\\n"""		10635275	1					
ANR	10635653	Argument	""" %s %9d %s\\n"""		10635275	0					
ANR	10635654	PrimaryExpression	""" %s %9d %s\\n"""		10635275	0					
ANR	10635655	Argument	strtime ( & tartime )		10635275	1					
ANR	10635656	CallExpression	strtime ( & tartime )		10635275	0					
ANR	10635657	Callee	strtime		10635275	0					
ANR	10635658	Identifier	strtime		10635275	0					
ANR	10635659	ArgumentList	& tartime		10635275	1					
ANR	10635660	Argument	& tartime		10635275	0					
ANR	10635661	UnaryOperationExpression	& tartime		10635275	0					
ANR	10635662	UnaryOperator	&		10635275	0					
ANR	10635663	Identifier	tartime		10635275	1					
ANR	10635664	Argument	remaining		10635275	2					
ANR	10635665	Identifier	remaining		10635275	0					
ANR	10635666	Argument	fname		10635275	3					
ANR	10635667	Identifier	fname		10635275	0					
ANR	10635668	ElseStatement	else		10635275	0					
ANR	10635669	IfStatement	if ( action == TGZ_EXTRACT )		10635275	0					
ANR	10635670	Condition	action == TGZ_EXTRACT	478:23:11605:11625	10635275	0	True				
ANR	10635671	EqualityExpression	action == TGZ_EXTRACT		10635275	0		==			
ANR	10635672	Identifier	action		10635275	0					
ANR	10635673	Identifier	TGZ_EXTRACT		10635275	1					
ANR	10635674	CompoundStatement		93:16:2734:2734	10635275	1					
ANR	10635675	IfStatement	"if ( matchname ( arg , argc , argv , fname ) )"		10635275	0					
ANR	10635676	Condition	"matchname ( arg , argc , argv , fname )"	480:22:11668:11697	10635275	0	True				
ANR	10635677	CallExpression	"matchname ( arg , argc , argv , fname )"		10635275	0					
ANR	10635678	Callee	matchname		10635275	0					
ANR	10635679	Identifier	matchname		10635275	0					
ANR	10635680	ArgumentList	arg		10635275	1					
ANR	10635681	Argument	arg		10635275	0					
ANR	10635682	Identifier	arg		10635275	0					
ANR	10635683	Argument	argc		10635275	1					
ANR	10635684	Identifier	argc		10635275	0					
ANR	10635685	Argument	argv		10635275	2					
ANR	10635686	Identifier	argv		10635275	0					
ANR	10635687	Argument	fname		10635275	3					
ANR	10635688	Identifier	fname		10635275	0					
ANR	10635689	CompoundStatement		95:20:2810:2810	10635275	1					
ANR	10635690	ExpressionStatement	"outfile = fopen ( fname , ""wb"" )"	482:22:11744:11771	10635275	0	True				
ANR	10635691	AssignmentExpression	"outfile = fopen ( fname , ""wb"" )"		10635275	0		=			
ANR	10635692	Identifier	outfile		10635275	0					
ANR	10635693	CallExpression	"fopen ( fname , ""wb"" )"		10635275	1					
ANR	10635694	Callee	fopen		10635275	0					
ANR	10635695	Identifier	fopen		10635275	0					
ANR	10635696	ArgumentList	fname		10635275	1					
ANR	10635697	Argument	fname		10635275	0					
ANR	10635698	Identifier	fname		10635275	0					
ANR	10635699	Argument	"""wb"""		10635275	1					
ANR	10635700	PrimaryExpression	"""wb"""		10635275	0					
ANR	10635701	IfStatement	if ( outfile == NULL )		10635275	1					
ANR	10635702	Condition	outfile == NULL	483:26:11799:11813	10635275	0	True				
ANR	10635703	EqualityExpression	outfile == NULL		10635275	0		==			
ANR	10635704	Identifier	outfile		10635275	0					
ANR	10635705	Identifier	NULL		10635275	1					
ANR	10635706	CompoundStatement		99:24:2985:3014	10635275	1					
ANR	10635707	IdentifierDeclStatement	"char * p = strrchr ( fname , '/' ) ;"	485:24:11895:11924	10635275	0	True				
ANR	10635708	IdentifierDecl	"* p = strrchr ( fname , '/' )"		10635275	0					
ANR	10635709	IdentifierDeclType	char *		10635275	0					
ANR	10635710	Identifier	p		10635275	1					
ANR	10635711	AssignmentExpression	"* p = strrchr ( fname , '/' )"		10635275	2		=			
ANR	10635712	Identifier	p		10635275	0					
ANR	10635713	CallExpression	"strrchr ( fname , '/' )"		10635275	1					
ANR	10635714	Callee	strrchr		10635275	0					
ANR	10635715	Identifier	strrchr		10635275	0					
ANR	10635716	ArgumentList	fname		10635275	1					
ANR	10635717	Argument	fname		10635275	0					
ANR	10635718	Identifier	fname		10635275	0					
ANR	10635719	Argument	'/'		10635275	1					
ANR	10635720	PrimaryExpression	'/'		10635275	0					
ANR	10635721	IfStatement	if ( p != NULL )		10635275	1					
ANR	10635722	Condition	p != NULL	486:28:11954:11962	10635275	0	True				
ANR	10635723	EqualityExpression	p != NULL		10635275	0		!=			
ANR	10635724	Identifier	p		10635275	0					
ANR	10635725	Identifier	NULL		10635275	1					
ANR	10635726	CompoundStatement		100:39:3055:3055	10635275	1					
ANR	10635727	ExpressionStatement	* p = '\\0'	487:26:11993:12002	10635275	0	True				
ANR	10635728	AssignmentExpression	* p = '\\0'		10635275	0		=			
ANR	10635729	UnaryOperationExpression	* p		10635275	0					
ANR	10635730	UnaryOperator	*		10635275	0					
ANR	10635731	Identifier	p		10635275	1					
ANR	10635732	PrimaryExpression	'\\0'		10635275	1					
ANR	10635733	ExpressionStatement	makedir ( fname )	488:26:12030:12044	10635275	1	True				
ANR	10635734	CallExpression	makedir ( fname )		10635275	0					
ANR	10635735	Callee	makedir		10635275	0					
ANR	10635736	Identifier	makedir		10635275	0					
ANR	10635737	ArgumentList	fname		10635275	1					
ANR	10635738	Argument	fname		10635275	0					
ANR	10635739	Identifier	fname		10635275	0					
ANR	10635740	ExpressionStatement	* p = '/'	489:26:12072:12080	10635275	2	True				
ANR	10635741	AssignmentExpression	* p = '/'		10635275	0		=			
ANR	10635742	UnaryOperationExpression	* p		10635275	0					
ANR	10635743	UnaryOperator	*		10635275	0					
ANR	10635744	Identifier	p		10635275	1					
ANR	10635745	PrimaryExpression	'/'		10635275	1					
ANR	10635746	ExpressionStatement	"outfile = fopen ( fname , ""wb"" )"	490:26:12108:12135	10635275	3	True				
ANR	10635747	AssignmentExpression	"outfile = fopen ( fname , ""wb"" )"		10635275	0		=			
ANR	10635748	Identifier	outfile		10635275	0					
ANR	10635749	CallExpression	"fopen ( fname , ""wb"" )"		10635275	1					
ANR	10635750	Callee	fopen		10635275	0					
ANR	10635751	Identifier	fopen		10635275	0					
ANR	10635752	ArgumentList	fname		10635275	1					
ANR	10635753	Argument	fname		10635275	0					
ANR	10635754	Identifier	fname		10635275	0					
ANR	10635755	Argument	"""wb"""		10635275	1					
ANR	10635756	PrimaryExpression	"""wb"""		10635275	0					
ANR	10635757	IfStatement	if ( outfile != NULL )		10635275	2					
ANR	10635758	Condition	outfile != NULL	493:26:12213:12227	10635275	0	True				
ANR	10635759	EqualityExpression	outfile != NULL		10635275	0		!=			
ANR	10635760	Identifier	outfile		10635275	0					
ANR	10635761	Identifier	NULL		10635275	1					
ANR	10635762	ExpressionStatement	"printf ( ""Extracting %s\\n"" , fname )"	494:24:12254:12285	10635275	1	True				
ANR	10635763	CallExpression	"printf ( ""Extracting %s\\n"" , fname )"		10635275	0					
ANR	10635764	Callee	printf		10635275	0					
ANR	10635765	Identifier	printf		10635275	0					
ANR	10635766	ArgumentList	"""Extracting %s\\n"""		10635275	1					
ANR	10635767	Argument	"""Extracting %s\\n"""		10635275	0					
ANR	10635768	PrimaryExpression	"""Extracting %s\\n"""		10635275	0					
ANR	10635769	Argument	fname		10635275	1					
ANR	10635770	Identifier	fname		10635275	0					
ANR	10635771	ElseStatement	else		10635275	0					
ANR	10635772	ExpressionStatement	"fprintf ( stderr , ""%s: Couldn't create %s"" , prog , fname )"	496:24:12338:12390	10635275	0	True				
ANR	10635773	CallExpression	"fprintf ( stderr , ""%s: Couldn't create %s"" , prog , fname )"		10635275	0					
ANR	10635774	Callee	fprintf		10635275	0					
ANR	10635775	Identifier	fprintf		10635275	0					
ANR	10635776	ArgumentList	stderr		10635275	1					
ANR	10635777	Argument	stderr		10635275	0					
ANR	10635778	Identifier	stderr		10635275	0					
ANR	10635779	Argument	"""%s: Couldn't create %s"""		10635275	1					
ANR	10635780	PrimaryExpression	"""%s: Couldn't create %s"""		10635275	0					
ANR	10635781	Argument	prog		10635275	2					
ANR	10635782	Identifier	prog		10635275	0					
ANR	10635783	Argument	fname		10635275	3					
ANR	10635784	Identifier	fname		10635275	0					
ANR	10635785	ElseStatement	else		10635275	0					
ANR	10635786	ExpressionStatement	outfile = NULL	499:20:12457:12471	10635275	0	True				
ANR	10635787	AssignmentExpression	outfile = NULL		10635275	0		=			
ANR	10635788	Identifier	outfile		10635275	0					
ANR	10635789	Identifier	NULL		10635275	1					
ANR	10635790	ExpressionStatement	getheader = 0	501:14:12505:12518	10635275	9	True				
ANR	10635791	AssignmentExpression	getheader = 0		10635275	0		=			
ANR	10635792	Identifier	getheader		10635275	0					
ANR	10635793	PrimaryExpression	0		10635275	1					
ANR	10635794	BreakStatement	break ;	502:14:12534:12539	10635275	10	True				
ANR	10635795	Label	case GNUTYPE_LONGLINK :	503:12:12553:12574	10635275	11	True				
ANR	10635796	Identifier	GNUTYPE_LONGLINK		10635275	0					
ANR	10635797	Label	case GNUTYPE_LONGNAME :	504:12:12588:12609	10635275	12	True				
ANR	10635798	Identifier	GNUTYPE_LONGNAME		10635275	0					
ANR	10635799	ExpressionStatement	"remaining = getoct ( buffer . header . size , 12 )"	505:14:12625:12666	10635275	13	True				
ANR	10635800	AssignmentExpression	"remaining = getoct ( buffer . header . size , 12 )"		10635275	0		=			
ANR	10635801	Identifier	remaining		10635275	0					
ANR	10635802	CallExpression	"getoct ( buffer . header . size , 12 )"		10635275	1					
ANR	10635803	Callee	getoct		10635275	0					
ANR	10635804	Identifier	getoct		10635275	0					
ANR	10635805	ArgumentList	buffer . header . size		10635275	1					
ANR	10635806	Argument	buffer . header . size		10635275	0					
ANR	10635807	MemberAccess	buffer . header . size		10635275	0					
ANR	10635808	MemberAccess	buffer . header		10635275	0					
ANR	10635809	Identifier	buffer		10635275	0					
ANR	10635810	Identifier	header		10635275	1					
ANR	10635811	Identifier	size		10635275	1					
ANR	10635812	Argument	12		10635275	1					
ANR	10635813	PrimaryExpression	12		10635275	0					
ANR	10635814	IfStatement	if ( remaining < 0 || remaining >= BLOCKSIZE )		10635275	14					
ANR	10635815	Condition	remaining < 0 || remaining >= BLOCKSIZE	506:18:12686:12724	10635275	0	True				
ANR	10635816	OrExpression	remaining < 0 || remaining >= BLOCKSIZE		10635275	0		||			
ANR	10635817	RelationalExpression	remaining < 0		10635275	0		<			
ANR	10635818	Identifier	remaining		10635275	0					
ANR	10635819	PrimaryExpression	0		10635275	1					
ANR	10635820	RelationalExpression	remaining >= BLOCKSIZE		10635275	1		>=			
ANR	10635821	Identifier	remaining		10635275	0					
ANR	10635822	Identifier	BLOCKSIZE		10635275	1					
ANR	10635823	CompoundStatement		121:16:3833:3833	10635275	1					
ANR	10635824	ExpressionStatement	action = TGZ_INVALID	508:18:12763:12783	10635275	0	True				
ANR	10635825	AssignmentExpression	action = TGZ_INVALID		10635275	0		=			
ANR	10635826	Identifier	action		10635275	0					
ANR	10635827	Identifier	TGZ_INVALID		10635275	1					
ANR	10635828	BreakStatement	break ;	509:18:12803:12808	10635275	1	True				
ANR	10635829	ExpressionStatement	"len = gzread ( in , fname , BLOCKSIZE )"	511:14:12842:12876	10635275	15	True				
ANR	10635830	AssignmentExpression	"len = gzread ( in , fname , BLOCKSIZE )"		10635275	0		=			
ANR	10635831	Identifier	len		10635275	0					
ANR	10635832	CallExpression	"gzread ( in , fname , BLOCKSIZE )"		10635275	1					
ANR	10635833	Callee	gzread		10635275	0					
ANR	10635834	Identifier	gzread		10635275	0					
ANR	10635835	ArgumentList	in		10635275	1					
ANR	10635836	Argument	in		10635275	0					
ANR	10635837	Identifier	in		10635275	0					
ANR	10635838	Argument	fname		10635275	1					
ANR	10635839	Identifier	fname		10635275	0					
ANR	10635840	Argument	BLOCKSIZE		10635275	2					
ANR	10635841	Identifier	BLOCKSIZE		10635275	0					
ANR	10635842	IfStatement	if ( len < 0 )		10635275	16					
ANR	10635843	Condition	len < 0	512:18:12896:12902	10635275	0	True				
ANR	10635844	RelationalExpression	len < 0		10635275	0		<			
ANR	10635845	Identifier	len		10635275	0					
ANR	10635846	PrimaryExpression	0		10635275	1					
ANR	10635847	ExpressionStatement	"error ( gzerror ( in , & err ) )"	513:16:12921:12945	10635275	1	True				
ANR	10635848	CallExpression	"error ( gzerror ( in , & err ) )"		10635275	0					
ANR	10635849	Callee	error		10635275	0					
ANR	10635850	Identifier	error		10635275	0					
ANR	10635851	ArgumentList	"gzerror ( in , & err )"		10635275	1					
ANR	10635852	Argument	"gzerror ( in , & err )"		10635275	0					
ANR	10635853	CallExpression	"gzerror ( in , & err )"		10635275	0					
ANR	10635854	Callee	gzerror		10635275	0					
ANR	10635855	Identifier	gzerror		10635275	0					
ANR	10635856	ArgumentList	in		10635275	1					
ANR	10635857	Argument	in		10635275	0					
ANR	10635858	Identifier	in		10635275	0					
ANR	10635859	Argument	& err		10635275	1					
ANR	10635860	UnaryOperationExpression	& err		10635275	0					
ANR	10635861	UnaryOperator	&		10635275	0					
ANR	10635862	Identifier	err		10635275	1					
ANR	10635863	IfStatement	if ( fname [ BLOCKSIZE - 1 ] != 0 || ( int ) strlen ( fname ) > remaining )		10635275	17					
ANR	10635864	Condition	fname [ BLOCKSIZE - 1 ] != 0 || ( int ) strlen ( fname ) > remaining	514:18:12965:13021	10635275	0	True				
ANR	10635865	OrExpression	fname [ BLOCKSIZE - 1 ] != 0 || ( int ) strlen ( fname ) > remaining		10635275	0		||			
ANR	10635866	EqualityExpression	fname [ BLOCKSIZE - 1 ] != 0		10635275	0		!=			
ANR	10635867	ArrayIndexing	fname [ BLOCKSIZE - 1 ]		10635275	0					
ANR	10635868	Identifier	fname		10635275	0					
ANR	10635869	AdditiveExpression	BLOCKSIZE - 1		10635275	1		-			
ANR	10635870	Identifier	BLOCKSIZE		10635275	0					
ANR	10635871	PrimaryExpression	1		10635275	1					
ANR	10635872	PrimaryExpression	0		10635275	1					
ANR	10635873	RelationalExpression	( int ) strlen ( fname ) > remaining		10635275	1		>			
ANR	10635874	CastExpression	( int ) strlen ( fname )		10635275	0					
ANR	10635875	CastTarget	int		10635275	0					
ANR	10635876	CallExpression	strlen ( fname )		10635275	1					
ANR	10635877	Callee	strlen		10635275	0					
ANR	10635878	Identifier	strlen		10635275	0					
ANR	10635879	ArgumentList	fname		10635275	1					
ANR	10635880	Argument	fname		10635275	0					
ANR	10635881	Identifier	fname		10635275	0					
ANR	10635882	Identifier	remaining		10635275	1					
ANR	10635883	CompoundStatement		129:16:4130:4130	10635275	1					
ANR	10635884	ExpressionStatement	action = TGZ_INVALID	516:18:13060:13080	10635275	0	True				
ANR	10635885	AssignmentExpression	action = TGZ_INVALID		10635275	0		=			
ANR	10635886	Identifier	action		10635275	0					
ANR	10635887	Identifier	TGZ_INVALID		10635275	1					
ANR	10635888	BreakStatement	break ;	517:18:13100:13105	10635275	1	True				
ANR	10635889	ExpressionStatement	getheader = 2	519:14:13139:13152	10635275	18	True				
ANR	10635890	AssignmentExpression	getheader = 2		10635275	0		=			
ANR	10635891	Identifier	getheader		10635275	0					
ANR	10635892	PrimaryExpression	2		10635275	1					
ANR	10635893	BreakStatement	break ;	520:14:13168:13173	10635275	19	True				
ANR	10635894	Label	default :	521:12:13187:13194	10635275	20	True				
ANR	10635895	Identifier	default		10635275	0					
ANR	10635896	IfStatement	if ( action == TGZ_LIST )		10635275	21					
ANR	10635897	Condition	action == TGZ_LIST	522:18:13214:13231	10635275	0	True				
ANR	10635898	EqualityExpression	action == TGZ_LIST		10635275	0		==			
ANR	10635899	Identifier	action		10635275	0					
ANR	10635900	Identifier	TGZ_LIST		10635275	1					
ANR	10635901	ExpressionStatement	"printf ( "" %s     <---> %s\\n"" , strtime ( & tartime ) , fname )"	523:16:13250:13302	10635275	1	True				
ANR	10635902	CallExpression	"printf ( "" %s     <---> %s\\n"" , strtime ( & tartime ) , fname )"		10635275	0					
ANR	10635903	Callee	printf		10635275	0					
ANR	10635904	Identifier	printf		10635275	0					
ANR	10635905	ArgumentList	""" %s     <---> %s\\n"""		10635275	1					
ANR	10635906	Argument	""" %s     <---> %s\\n"""		10635275	0					
ANR	10635907	PrimaryExpression	""" %s     <---> %s\\n"""		10635275	0					
ANR	10635908	Argument	strtime ( & tartime )		10635275	1					
ANR	10635909	CallExpression	strtime ( & tartime )		10635275	0					
ANR	10635910	Callee	strtime		10635275	0					
ANR	10635911	Identifier	strtime		10635275	0					
ANR	10635912	ArgumentList	& tartime		10635275	1					
ANR	10635913	Argument	& tartime		10635275	0					
ANR	10635914	UnaryOperationExpression	& tartime		10635275	0					
ANR	10635915	UnaryOperator	&		10635275	0					
ANR	10635916	Identifier	tartime		10635275	1					
ANR	10635917	Argument	fname		10635275	2					
ANR	10635918	Identifier	fname		10635275	0					
ANR	10635919	BreakStatement	break ;	524:14:13318:13323	10635275	22	True				
ANR	10635920	ElseStatement	else		10635275	0					
ANR	10635921	CompoundStatement		143:10:4470:4538	10635275	0					
ANR	10635922	IdentifierDeclStatement	unsigned int bytes = ( remaining > BLOCKSIZE ) ? BLOCKSIZE : remaining ;	529:10:13380:13448	10635275	0	True				
ANR	10635923	IdentifierDecl	bytes = ( remaining > BLOCKSIZE ) ? BLOCKSIZE : remaining		10635275	0					
ANR	10635924	IdentifierDeclType	unsigned int		10635275	0					
ANR	10635925	Identifier	bytes		10635275	1					
ANR	10635926	AssignmentExpression	bytes = ( remaining > BLOCKSIZE ) ? BLOCKSIZE : remaining		10635275	2		=			
ANR	10635927	Identifier	bytes		10635275	0					
ANR	10635928	ConditionalExpression	( remaining > BLOCKSIZE ) ? BLOCKSIZE : remaining		10635275	1					
ANR	10635929	Condition	remaining > BLOCKSIZE		10635275	0					
ANR	10635930	RelationalExpression	remaining > BLOCKSIZE		10635275	0		>			
ANR	10635931	Identifier	remaining		10635275	0					
ANR	10635932	Identifier	BLOCKSIZE		10635275	1					
ANR	10635933	Identifier	BLOCKSIZE		10635275	1					
ANR	10635934	Identifier	remaining		10635275	2					
ANR	10635935	IfStatement	if ( outfile != NULL )		10635275	1					
ANR	10635936	Condition	outfile != NULL	531:14:13465:13479	10635275	0	True				
ANR	10635937	EqualityExpression	outfile != NULL		10635275	0		!=			
ANR	10635938	Identifier	outfile		10635275	0					
ANR	10635939	Identifier	NULL		10635275	1					
ANR	10635940	CompoundStatement		146:12:4584:4584	10635275	1					
ANR	10635941	IfStatement	"if ( fwrite ( & buffer , sizeof ( char ) , bytes , outfile ) != bytes )"		10635275	0					
ANR	10635942	Condition	"fwrite ( & buffer , sizeof ( char ) , bytes , outfile ) != bytes"	533:18:13514:13564	10635275	0	True				
ANR	10635943	EqualityExpression	"fwrite ( & buffer , sizeof ( char ) , bytes , outfile ) != bytes"		10635275	0		!=			
ANR	10635944	CallExpression	"fwrite ( & buffer , sizeof ( char ) , bytes , outfile )"		10635275	0					
ANR	10635945	Callee	fwrite		10635275	0					
ANR	10635946	Identifier	fwrite		10635275	0					
ANR	10635947	ArgumentList	& buffer		10635275	1					
ANR	10635948	Argument	& buffer		10635275	0					
ANR	10635949	UnaryOperationExpression	& buffer		10635275	0					
ANR	10635950	UnaryOperator	&		10635275	0					
ANR	10635951	Identifier	buffer		10635275	1					
ANR	10635952	Argument	sizeof ( char )		10635275	1					
ANR	10635953	SizeofExpression	sizeof ( char )		10635275	0					
ANR	10635954	Sizeof	sizeof		10635275	0					
ANR	10635955	SizeofOperand	char		10635275	1					
ANR	10635956	Argument	bytes		10635275	2					
ANR	10635957	Identifier	bytes		10635275	0					
ANR	10635958	Argument	outfile		10635275	3					
ANR	10635959	Identifier	outfile		10635275	0					
ANR	10635960	Identifier	bytes		10635275	1					
ANR	10635961	CompoundStatement		148:16:4673:4673	10635275	1					
ANR	10635962	ExpressionStatement	"fprintf ( stderr , ""%s: Error writing %s -- skipping\\n"" , prog , fname )"	535:18:13603:13687	10635275	0	True				
ANR	10635963	CallExpression	"fprintf ( stderr , ""%s: Error writing %s -- skipping\\n"" , prog , fname )"		10635275	0					
ANR	10635964	Callee	fprintf		10635275	0					
ANR	10635965	Identifier	fprintf		10635275	0					
ANR	10635966	ArgumentList	stderr		10635275	1					
ANR	10635967	Argument	stderr		10635275	0					
ANR	10635968	Identifier	stderr		10635275	0					
ANR	10635969	Argument	"""%s: Error writing %s -- skipping\\n"""		10635275	1					
ANR	10635970	PrimaryExpression	"""%s: Error writing %s -- skipping\\n"""		10635275	0					
ANR	10635971	Argument	prog		10635275	2					
ANR	10635972	Identifier	prog		10635275	0					
ANR	10635973	Argument	fname		10635275	3					
ANR	10635974	Identifier	fname		10635275	0					
ANR	10635975	ExpressionStatement	fclose ( outfile )	537:18:13707:13722	10635275	1	True				
ANR	10635976	CallExpression	fclose ( outfile )		10635275	0					
ANR	10635977	Callee	fclose		10635275	0					
ANR	10635978	Identifier	fclose		10635275	0					
ANR	10635979	ArgumentList	outfile		10635275	1					
ANR	10635980	Argument	outfile		10635275	0					
ANR	10635981	Identifier	outfile		10635275	0					
ANR	10635982	ExpressionStatement	outfile = NULL	538:18:13742:13756	10635275	2	True				
ANR	10635983	AssignmentExpression	outfile = NULL		10635275	0		=			
ANR	10635984	Identifier	outfile		10635275	0					
ANR	10635985	Identifier	NULL		10635275	1					
ANR	10635986	ExpressionStatement	remove ( fname )	539:18:13776:13789	10635275	3	True				
ANR	10635987	CallExpression	remove ( fname )		10635275	0					
ANR	10635988	Callee	remove		10635275	0					
ANR	10635989	Identifier	remove		10635275	0					
ANR	10635990	ArgumentList	fname		10635275	1					
ANR	10635991	Argument	fname		10635275	0					
ANR	10635992	Identifier	fname		10635275	0					
ANR	10635993	ExpressionStatement	remaining -= bytes	542:10:13833:13851	10635275	2	True				
ANR	10635994	AssignmentExpression	remaining -= bytes		10635275	0		-=			
ANR	10635995	Identifier	remaining		10635275	0					
ANR	10635996	Identifier	bytes		10635275	1					
ANR	10635997	IfStatement	if ( remaining == 0 )		10635275	4					
ANR	10635998	Condition	remaining == 0	545:10:13874:13887	10635275	0	True				
ANR	10635999	EqualityExpression	remaining == 0		10635275	0		==			
ANR	10636000	Identifier	remaining		10635275	0					
ANR	10636001	PrimaryExpression	0		10635275	1					
ANR	10636002	CompoundStatement		160:8:4988:4988	10635275	1					
ANR	10636003	ExpressionStatement	getheader = 1	547:10:13910:13923	10635275	0	True				
ANR	10636004	AssignmentExpression	getheader = 1		10635275	0		=			
ANR	10636005	Identifier	getheader		10635275	0					
ANR	10636006	PrimaryExpression	1		10635275	1					
ANR	10636007	IfStatement	if ( outfile != NULL )		10635275	1					
ANR	10636008	Condition	outfile != NULL	548:14:13939:13953	10635275	0	True				
ANR	10636009	EqualityExpression	outfile != NULL		10635275	0		!=			
ANR	10636010	Identifier	outfile		10635275	0					
ANR	10636011	Identifier	NULL		10635275	1					
ANR	10636012	CompoundStatement		163:12:5058:5058	10635275	1					
ANR	10636013	ExpressionStatement	fclose ( outfile )	550:14:13984:13999	10635275	0	True				
ANR	10636014	CallExpression	fclose ( outfile )		10635275	0					
ANR	10636015	Callee	fclose		10635275	0					
ANR	10636016	Identifier	fclose		10635275	0					
ANR	10636017	ArgumentList	outfile		10635275	1					
ANR	10636018	Argument	outfile		10635275	0					
ANR	10636019	Identifier	outfile		10635275	0					
ANR	10636020	ExpressionStatement	outfile = NULL	551:14:14015:14029	10635275	1	True				
ANR	10636021	AssignmentExpression	outfile = NULL		10635275	0		=			
ANR	10636022	Identifier	outfile		10635275	0					
ANR	10636023	Identifier	NULL		10635275	1					
ANR	10636024	IfStatement	if ( action != TGZ_INVALID )		10635275	2					
ANR	10636025	Condition	action != TGZ_INVALID	552:18:14049:14069	10635275	0	True				
ANR	10636026	EqualityExpression	action != TGZ_INVALID		10635275	0		!=			
ANR	10636027	Identifier	action		10635275	0					
ANR	10636028	Identifier	TGZ_INVALID		10635275	1					
ANR	10636029	ExpressionStatement	"push_attr ( & attributes , fname , tarmode , tartime )"	553:16:14088:14132	10635275	1	True				
ANR	10636030	CallExpression	"push_attr ( & attributes , fname , tarmode , tartime )"		10635275	0					
ANR	10636031	Callee	push_attr		10635275	0					
ANR	10636032	Identifier	push_attr		10635275	0					
ANR	10636033	ArgumentList	& attributes		10635275	1					
ANR	10636034	Argument	& attributes		10635275	0					
ANR	10636035	UnaryOperationExpression	& attributes		10635275	0					
ANR	10636036	UnaryOperator	&		10635275	0					
ANR	10636037	Identifier	attributes		10635275	1					
ANR	10636038	Argument	fname		10635275	1					
ANR	10636039	Identifier	fname		10635275	0					
ANR	10636040	Argument	tarmode		10635275	2					
ANR	10636041	Identifier	tarmode		10635275	0					
ANR	10636042	Argument	tartime		10635275	3					
ANR	10636043	Identifier	tartime		10635275	0					
ANR	10636044	IfStatement	if ( action == TGZ_INVALID )		10635275	5					
ANR	10636045	Condition	action == TGZ_INVALID	560:10:14225:14245	10635275	0	True				
ANR	10636046	EqualityExpression	action == TGZ_INVALID		10635275	0		==			
ANR	10636047	Identifier	action		10635275	0					
ANR	10636048	Identifier	TGZ_INVALID		10635275	1					
ANR	10636049	CompoundStatement		175:8:5346:5346	10635275	1					
ANR	10636050	ExpressionStatement	"error ( ""broken archive"" )"	562:10:14268:14291	10635275	0	True				
ANR	10636051	CallExpression	"error ( ""broken archive"" )"		10635275	0					
ANR	10636052	Callee	error		10635275	0					
ANR	10636053	Identifier	error		10635275	0					
ANR	10636054	ArgumentList	"""broken archive"""		10635275	1					
ANR	10636055	Argument	"""broken archive"""		10635275	0					
ANR	10636056	PrimaryExpression	"""broken archive"""		10635275	0					
ANR	10636057	BreakStatement	break ;	563:10:14303:14308	10635275	1	True				
ANR	10636058	ExpressionStatement	restore_attr ( & attributes )	570:2:14380:14405	10635275	17	True				
ANR	10636059	CallExpression	restore_attr ( & attributes )		10635275	0					
ANR	10636060	Callee	restore_attr		10635275	0					
ANR	10636061	Identifier	restore_attr		10635275	0					
ANR	10636062	ArgumentList	& attributes		10635275	1					
ANR	10636063	Argument	& attributes		10635275	0					
ANR	10636064	UnaryOperationExpression	& attributes		10635275	0					
ANR	10636065	UnaryOperator	&		10635275	0					
ANR	10636066	Identifier	attributes		10635275	1					
ANR	10636067	IfStatement	if ( gzclose ( in ) != Z_OK )		10635275	18					
ANR	10636068	Condition	gzclose ( in ) != Z_OK	572:6:14414:14432	10635275	0	True				
ANR	10636069	EqualityExpression	gzclose ( in ) != Z_OK		10635275	0		!=			
ANR	10636070	CallExpression	gzclose ( in )		10635275	0					
ANR	10636071	Callee	gzclose		10635275	0					
ANR	10636072	Identifier	gzclose		10635275	0					
ANR	10636073	ArgumentList	in		10635275	1					
ANR	10636074	Argument	in		10635275	0					
ANR	10636075	Identifier	in		10635275	0					
ANR	10636076	Identifier	Z_OK		10635275	1					
ANR	10636077	ExpressionStatement	"error ( ""failed gzclose"" )"	573:4:14439:14462	10635275	1	True				
ANR	10636078	CallExpression	"error ( ""failed gzclose"" )"		10635275	0					
ANR	10636079	Callee	error		10635275	0					
ANR	10636080	Identifier	error		10635275	0					
ANR	10636081	ArgumentList	"""failed gzclose"""		10635275	1					
ANR	10636082	Argument	"""failed gzclose"""		10635275	0					
ANR	10636083	PrimaryExpression	"""failed gzclose"""		10635275	0					
ANR	10636084	ReturnStatement	return 0 ;	575:2:14467:14475	10635275	19	True				
ANR	10636085	PrimaryExpression	0		10635275	0					
ANR	10636086	ReturnType	int		10635275	1					
ANR	10636087	Identifier	tar		10635275	2					
ANR	10636088	ParameterList	"gzFile in , int action , int arg , int argc , char * * argv"		10635275	3					
ANR	10636089	Parameter	gzFile in	386:9:8858:8866	10635275	0	True				
ANR	10636090	ParameterType	gzFile		10635275	0					
ANR	10636091	Identifier	in		10635275	1					
ANR	10636092	Parameter	int action	386:19:8868:8877	10635275	1	True				
ANR	10636093	ParameterType	int		10635275	0					
ANR	10636094	Identifier	action		10635275	1					
ANR	10636095	Parameter	int arg	386:30:8879:8885	10635275	2	True				
ANR	10636096	ParameterType	int		10635275	0					
ANR	10636097	Identifier	arg		10635275	1					
ANR	10636098	Parameter	int argc	386:38:8887:8894	10635275	3	True				
ANR	10636099	ParameterType	int		10635275	0					
ANR	10636100	Identifier	argc		10635275	1					
ANR	10636101	Parameter	char * * argv	386:47:8896:8906	10635275	4	True				
ANR	10636102	ParameterType	char * *		10635275	0					
ANR	10636103	Identifier	argv		10635275	1					
ANR	10636104	CFGEntryNode	ENTRY		10635275		True				
ANR	10636105	CFGExitNode	EXIT		10635275		True				
ANR	10636106	Symbol	SHORTNAMESIZE		10635275						
ANR	10636107	Symbol	getoct		10635275						
ANR	10636108	Symbol	getheader		10635275						
ANR	10636109	Symbol	strncmp		10635275						
ANR	10636110	Symbol	strlen		10635275						
ANR	10636111	Symbol	gzclose		10635275						
ANR	10636112	Symbol	len		10635275						
ANR	10636113	Symbol	buffer . header . mtime		10635275						
ANR	10636114	Symbol	action		10635275						
ANR	10636115	Symbol	tarmode		10635275						
ANR	10636116	Symbol	buffer		10635275						
ANR	10636117	Symbol	fname		10635275						
ANR	10636118	Symbol	* BLOCKSIZE		10635275						
ANR	10636119	Symbol	NULL		10635275						
ANR	10636120	Symbol	in		10635275						
ANR	10636121	Symbol	strtime		10635275						
ANR	10636122	Symbol	gzread		10635275						
ANR	10636123	Symbol	tartime		10635275						
ANR	10636124	Symbol	stderr		10635275						
ANR	10636125	Symbol	remaining		10635275						
ANR	10636126	Symbol	& attributes		10635275						
ANR	10636127	Symbol	buffer . header . typeflag		10635275						
ANR	10636128	Symbol	TGZ_LIST		10635275						
ANR	10636129	Symbol	* buffer . header . name		10635275						
ANR	10636130	Symbol	outfile		10635275						
ANR	10636131	Symbol	BLOCKSIZE		10635275						
ANR	10636132	Symbol	* buffer . header		10635275						
ANR	10636133	Symbol	* fname		10635275						
ANR	10636134	Symbol	Z_OK		10635275						
ANR	10636135	Symbol	& err		10635275						
ANR	10636136	Symbol	argv		10635275						
ANR	10636137	Symbol	buffer . header . mode		10635275						
ANR	10636138	Symbol	* SHORTNAMESIZE		10635275						
ANR	10636139	Symbol	arg		10635275						
ANR	10636140	Symbol	buffer . header		10635275						
ANR	10636141	Symbol	& tartime		10635275						
ANR	10636142	Symbol	argc		10635275						
ANR	10636143	Symbol	gzerror		10635275						
ANR	10636144	Symbol	fopen		10635275						
ANR	10636145	Symbol	* buffer		10635275						
ANR	10636146	Symbol	err		10635275						
ANR	10636147	Symbol	buffer . header . name		10635275						
ANR	10636148	Symbol	fwrite		10635275						
ANR	10636149	Symbol	buffer . header . size		10635275						
ANR	10636150	Symbol	prog		10635275						
ANR	10636151	Symbol	TGZ_EXTRACT		10635275						
ANR	10636152	Symbol	p		10635275						
ANR	10636153	Symbol	matchname		10635275						
ANR	10636154	Symbol	& buffer		10635275						
ANR	10636155	Symbol	strrchr		10635275						
ANR	10636156	Symbol	bytes		10635275						
ANR	10636157	Symbol	attributes		10635275						
ANR	10636158	Symbol	* p		10635275						
ANR	10636159	Symbol	TGZ_INVALID		10635275						
ANR	10636160	Function	help	581:0:14549:14956							
ANR	10636161	FunctionDef	help (int exitval)		10636160	0					
ANR	10636162	CompoundStatement		582:0:14572:14956	10636160	0					
ANR	10636163	Statement	printf	583:2:14576:14581	10636160	0	True				
ANR	10636164	Statement	(	583:8:14582:14582	10636160	1	True				
ANR	10636165	Statement	"""untgz version 0.2.1\\n"""	583:9:14583:14605	10636160	2	True				
ANR	10636166	Statement	"""  using zlib version %s\\n\\n"""	584:9:14616:14644	10636160	3	True				
ANR	10636167	Statement	","	584:38:14645:14645	10636160	4	True				
ANR	10636168	Statement	zlibVersion	585:9:14656:14666	10636160	5	True				
ANR	10636169	Statement	(	585:20:14667:14667	10636160	6	True				
ANR	10636170	Statement	)	585:21:14668:14668	10636160	7	True				
ANR	10636171	Statement	)	585:22:14669:14669	10636160	8	True				
ANR	10636172	ExpressionStatement		585:23:14670:14670	10636160	9	True				
ANR	10636173	Statement	printf	586:2:14674:14679	10636160	10	True				
ANR	10636174	Statement	(	586:8:14680:14680	10636160	11	True				
ANR	10636175	Statement	"""Usage: untgz file.tgz            extract all files\\n"""	586:9:14681:14734	10636160	12	True				
ANR	10636176	Statement	"""       untgz file.tgz fname ...  extract selected files\\n"""	587:9:14745:14803	10636160	13	True				
ANR	10636177	Statement	"""       untgz -l file.tgz         list archive contents\\n"""	588:9:14814:14871	10636160	14	True				
ANR	10636178	Statement	"""       untgz -h                  display this help\\n"""	589:9:14882:14935	10636160	15	True				
ANR	10636179	Statement	)	589:63:14936:14936	10636160	16	True				
ANR	10636180	ExpressionStatement		589:64:14937:14937	10636160	17	True				
ANR	10636181	ExpressionStatement	exit ( exitval )	590:2:14941:14954	10636160	18	True				
ANR	10636182	CallExpression	exit ( exitval )		10636160	0					
ANR	10636183	Callee	exit		10636160	0					
ANR	10636184	Identifier	exit		10636160	0					
ANR	10636185	ArgumentList	exitval		10636160	1					
ANR	10636186	Argument	exitval		10636160	0					
ANR	10636187	Identifier	exitval		10636160	0					
ANR	10636188	ReturnType	void		10636160	1					
ANR	10636189	Identifier	help		10636160	2					
ANR	10636190	ParameterList	int exitval		10636160	3					
ANR	10636191	Parameter	int exitval	581:10:14559:14569	10636160	0	True				
ANR	10636192	ParameterType	int		10636160	0					
ANR	10636193	Identifier	exitval		10636160	1					
ANR	10636194	CFGEntryNode	ENTRY		10636160		True				
ANR	10636195	CFGExitNode	EXIT		10636160		True				
ANR	10636196	Symbol	exitval		10636160						
ANR	10636197	Function	error	593:0:14959:15042							
ANR	10636198	FunctionDef	error (const char * msg)		10636197	0					
ANR	10636199	CompoundStatement		594:0:14987:15042	10636197	0					
ANR	10636200	ExpressionStatement	"fprintf ( stderr , ""%s: %s\\n"" , prog , msg )"	595:2:14991:15029	10636197	0	True				
ANR	10636201	CallExpression	"fprintf ( stderr , ""%s: %s\\n"" , prog , msg )"		10636197	0					
ANR	10636202	Callee	fprintf		10636197	0					
ANR	10636203	Identifier	fprintf		10636197	0					
ANR	10636204	ArgumentList	stderr		10636197	1					
ANR	10636205	Argument	stderr		10636197	0					
ANR	10636206	Identifier	stderr		10636197	0					
ANR	10636207	Argument	"""%s: %s\\n"""		10636197	1					
ANR	10636208	PrimaryExpression	"""%s: %s\\n"""		10636197	0					
ANR	10636209	Argument	prog		10636197	2					
ANR	10636210	Identifier	prog		10636197	0					
ANR	10636211	Argument	msg		10636197	3					
ANR	10636212	Identifier	msg		10636197	0					
ANR	10636213	ExpressionStatement	exit ( 1 )	596:2:15033:15040	10636197	1	True				
ANR	10636214	CallExpression	exit ( 1 )		10636197	0					
ANR	10636215	Callee	exit		10636197	0					
ANR	10636216	Identifier	exit		10636197	0					
ANR	10636217	ArgumentList	1		10636197	1					
ANR	10636218	Argument	1		10636197	0					
ANR	10636219	PrimaryExpression	1		10636197	0					
ANR	10636220	ReturnType	void		10636197	1					
ANR	10636221	Identifier	error		10636197	2					
ANR	10636222	ParameterList	const char * msg		10636197	3					
ANR	10636223	Parameter	const char * msg	593:11:14970:14984	10636197	0	True				
ANR	10636224	ParameterType	const char *		10636197	0					
ANR	10636225	Identifier	msg		10636197	1					
ANR	10636226	CFGEntryNode	ENTRY		10636197		True				
ANR	10636227	CFGExitNode	EXIT		10636197		True				
ANR	10636228	Symbol	msg		10636197						
ANR	10636229	Symbol	stderr		10636197						
ANR	10636230	Symbol	prog		10636197						
ANR	10636231	DeclStmt									
ANR	10636232	Decl							int	int	_CRT_glob
ANR	10636233	Function	main	606:0:15227:16540							
ANR	10636234	FunctionDef	"main (int argc , char * * argv)"		10636233	0					
ANR	10636235	CompoundStatement		607:0:15258:16540	10636233	0					
ANR	10636236	IdentifierDeclStatement	int action = TGZ_EXTRACT ;	608:4:15264:15296	10636233	0	True				
ANR	10636237	IdentifierDecl	action = TGZ_EXTRACT		10636233	0					
ANR	10636238	IdentifierDeclType	int		10636233	0					
ANR	10636239	Identifier	action		10636233	1					
ANR	10636240	AssignmentExpression	action = TGZ_EXTRACT		10636233	2		=			
ANR	10636241	Identifier	TGZ_EXTRACT		10636233	0					
ANR	10636242	Identifier	TGZ_EXTRACT		10636233	1					
ANR	10636243	IdentifierDeclStatement	int arg = 1 ;	609:4:15302:15321	10636233	1	True				
ANR	10636244	IdentifierDecl	arg = 1		10636233	0					
ANR	10636245	IdentifierDeclType	int		10636233	0					
ANR	10636246	Identifier	arg		10636233	1					
ANR	10636247	AssignmentExpression	arg = 1		10636233	2		=			
ANR	10636248	Identifier	arg		10636233	0					
ANR	10636249	PrimaryExpression	1		10636233	1					
ANR	10636250	IdentifierDeclStatement	char * TGZfile ;	610:4:15327:15347	10636233	2	True				
ANR	10636251	IdentifierDecl	* TGZfile		10636233	0					
ANR	10636252	IdentifierDeclType	char *		10636233	0					
ANR	10636253	Identifier	TGZfile		10636233	1					
ANR	10636254	IdentifierDeclStatement	gzFile * f ;	611:4:15353:15367	10636233	3	True				
ANR	10636255	IdentifierDecl	* f		10636233	0					
ANR	10636256	IdentifierDeclType	gzFile *		10636233	0					
ANR	10636257	Identifier	f		10636233	1					
ANR	10636258	ExpressionStatement	"prog = strrchr ( argv [ 0 ] , '\\\\' )"	613:4:15374:15402	10636233	4	True				
ANR	10636259	AssignmentExpression	"prog = strrchr ( argv [ 0 ] , '\\\\' )"		10636233	0		=			
ANR	10636260	Identifier	prog		10636233	0					
ANR	10636261	CallExpression	"strrchr ( argv [ 0 ] , '\\\\' )"		10636233	1					
ANR	10636262	Callee	strrchr		10636233	0					
ANR	10636263	Identifier	strrchr		10636233	0					
ANR	10636264	ArgumentList	argv [ 0 ]		10636233	1					
ANR	10636265	Argument	argv [ 0 ]		10636233	0					
ANR	10636266	ArrayIndexing	argv [ 0 ]		10636233	0					
ANR	10636267	Identifier	argv		10636233	0					
ANR	10636268	PrimaryExpression	0		10636233	1					
ANR	10636269	Argument	'\\\\'		10636233	1					
ANR	10636270	PrimaryExpression	'\\\\'		10636233	0					
ANR	10636271	IfStatement	if ( prog == NULL )		10636233	5					
ANR	10636272	Condition	prog == NULL	614:8:15412:15423	10636233	0	True				
ANR	10636273	EqualityExpression	prog == NULL		10636233	0		==			
ANR	10636274	Identifier	prog		10636233	0					
ANR	10636275	Identifier	NULL		10636233	1					
ANR	10636276	CompoundStatement		9:6:173:173	10636233	1					
ANR	10636277	ExpressionStatement	"prog = strrchr ( argv [ 0 ] , '/' )"	616:8:15442:15469	10636233	0	True				
ANR	10636278	AssignmentExpression	"prog = strrchr ( argv [ 0 ] , '/' )"		10636233	0		=			
ANR	10636279	Identifier	prog		10636233	0					
ANR	10636280	CallExpression	"strrchr ( argv [ 0 ] , '/' )"		10636233	1					
ANR	10636281	Callee	strrchr		10636233	0					
ANR	10636282	Identifier	strrchr		10636233	0					
ANR	10636283	ArgumentList	argv [ 0 ]		10636233	1					
ANR	10636284	Argument	argv [ 0 ]		10636233	0					
ANR	10636285	ArrayIndexing	argv [ 0 ]		10636233	0					
ANR	10636286	Identifier	argv		10636233	0					
ANR	10636287	PrimaryExpression	0		10636233	1					
ANR	10636288	Argument	'/'		10636233	1					
ANR	10636289	PrimaryExpression	'/'		10636233	0					
ANR	10636290	IfStatement	if ( prog == NULL )		10636233	1					
ANR	10636291	Condition	prog == NULL	617:12:15483:15494	10636233	0	True				
ANR	10636292	EqualityExpression	prog == NULL		10636233	0		==			
ANR	10636293	Identifier	prog		10636233	0					
ANR	10636294	Identifier	NULL		10636233	1					
ANR	10636295	CompoundStatement		12:10:248:248	10636233	1					
ANR	10636296	ExpressionStatement	"prog = strrchr ( argv [ 0 ] , ':' )"	619:12:15521:15548	10636233	0	True				
ANR	10636297	AssignmentExpression	"prog = strrchr ( argv [ 0 ] , ':' )"		10636233	0		=			
ANR	10636298	Identifier	prog		10636233	0					
ANR	10636299	CallExpression	"strrchr ( argv [ 0 ] , ':' )"		10636233	1					
ANR	10636300	Callee	strrchr		10636233	0					
ANR	10636301	Identifier	strrchr		10636233	0					
ANR	10636302	ArgumentList	argv [ 0 ]		10636233	1					
ANR	10636303	Argument	argv [ 0 ]		10636233	0					
ANR	10636304	ArrayIndexing	argv [ 0 ]		10636233	0					
ANR	10636305	Identifier	argv		10636233	0					
ANR	10636306	PrimaryExpression	0		10636233	1					
ANR	10636307	Argument	':'		10636233	1					
ANR	10636308	PrimaryExpression	':'		10636233	0					
ANR	10636309	IfStatement	if ( prog == NULL )		10636233	1					
ANR	10636310	Condition	prog == NULL	620:16:15566:15577	10636233	0	True				
ANR	10636311	EqualityExpression	prog == NULL		10636233	0		==			
ANR	10636312	Identifier	prog		10636233	0					
ANR	10636313	Identifier	NULL		10636233	1					
ANR	10636314	ExpressionStatement	prog = argv [ 0 ]	621:14:15594:15608	10636233	1	True				
ANR	10636315	AssignmentExpression	prog = argv [ 0 ]		10636233	0		=			
ANR	10636316	Identifier	prog		10636233	0					
ANR	10636317	ArrayIndexing	argv [ 0 ]		10636233	1					
ANR	10636318	Identifier	argv		10636233	0					
ANR	10636319	PrimaryExpression	0		10636233	1					
ANR	10636320	ElseStatement	else		10636233	0					
ANR	10636321	ExpressionStatement	prog ++	623:14:15641:15647	10636233	0	True				
ANR	10636322	PostIncDecOperationExpression	prog ++		10636233	0					
ANR	10636323	Identifier	prog		10636233	0					
ANR	10636324	IncDec	++		10636233	1					
ANR	10636325	ElseStatement	else		10636233	0					
ANR	10636326	ExpressionStatement	prog ++	626:10:15684:15690	10636233	0	True				
ANR	10636327	PostIncDecOperationExpression	prog ++		10636233	0					
ANR	10636328	Identifier	prog		10636233	0					
ANR	10636329	IncDec	++		10636233	1					
ANR	10636330	ElseStatement	else		10636233	0					
ANR	10636331	ExpressionStatement	prog ++	629:6:15715:15721	10636233	0	True				
ANR	10636332	PostIncDecOperationExpression	prog ++		10636233	0					
ANR	10636333	Identifier	prog		10636233	0					
ANR	10636334	IncDec	++		10636233	1					
ANR	10636335	IfStatement	if ( argc == 1 )		10636233	6					
ANR	10636336	Condition	argc == 1	631:8:15732:15740	10636233	0	True				
ANR	10636337	EqualityExpression	argc == 1		10636233	0		==			
ANR	10636338	Identifier	argc		10636233	0					
ANR	10636339	PrimaryExpression	1		10636233	1					
ANR	10636340	ExpressionStatement	help ( 0 )	632:6:15749:15756	10636233	1	True				
ANR	10636341	CallExpression	help ( 0 )		10636233	0					
ANR	10636342	Callee	help		10636233	0					
ANR	10636343	Identifier	help		10636233	0					
ANR	10636344	ArgumentList	0		10636233	1					
ANR	10636345	Argument	0		10636233	0					
ANR	10636346	PrimaryExpression	0		10636233	0					
ANR	10636347	IfStatement	"if ( strcmp ( argv [ arg ] , ""-l"" ) == 0 )"		10636233	7					
ANR	10636348	Condition	"strcmp ( argv [ arg ] , ""-l"" ) == 0"	634:8:15767:15793	10636233	0	True				
ANR	10636349	EqualityExpression	"strcmp ( argv [ arg ] , ""-l"" ) == 0"		10636233	0		==			
ANR	10636350	CallExpression	"strcmp ( argv [ arg ] , ""-l"" )"		10636233	0					
ANR	10636351	Callee	strcmp		10636233	0					
ANR	10636352	Identifier	strcmp		10636233	0					
ANR	10636353	ArgumentList	argv [ arg ]		10636233	1					
ANR	10636354	Argument	argv [ arg ]		10636233	0					
ANR	10636355	ArrayIndexing	argv [ arg ]		10636233	0					
ANR	10636356	Identifier	argv		10636233	0					
ANR	10636357	Identifier	arg		10636233	1					
ANR	10636358	Argument	"""-l"""		10636233	1					
ANR	10636359	PrimaryExpression	"""-l"""		10636233	0					
ANR	10636360	PrimaryExpression	0		10636233	1					
ANR	10636361	CompoundStatement		29:6:543:543	10636233	1					
ANR	10636362	ExpressionStatement	action = TGZ_LIST	636:8:15812:15829	10636233	0	True				
ANR	10636363	AssignmentExpression	action = TGZ_LIST		10636233	0		=			
ANR	10636364	Identifier	action		10636233	0					
ANR	10636365	Identifier	TGZ_LIST		10636233	1					
ANR	10636366	IfStatement	if ( argc == ++ arg )		10636233	1					
ANR	10636367	Condition	argc == ++ arg	637:12:15843:15855	10636233	0	True				
ANR	10636368	EqualityExpression	argc == ++ arg		10636233	0		==			
ANR	10636369	Identifier	argc		10636233	0					
ANR	10636370	UnaryExpression	++ arg		10636233	1					
ANR	10636371	IncDec	++		10636233	0					
ANR	10636372	Identifier	arg		10636233	1					
ANR	10636373	ExpressionStatement	help ( 0 )	638:10:15868:15875	10636233	1	True				
ANR	10636374	CallExpression	help ( 0 )		10636233	0					
ANR	10636375	Callee	help		10636233	0					
ANR	10636376	Identifier	help		10636233	0					
ANR	10636377	ArgumentList	0		10636233	1					
ANR	10636378	Argument	0		10636233	0					
ANR	10636379	PrimaryExpression	0		10636233	0					
ANR	10636380	ElseStatement	else		10636233	0					
ANR	10636381	IfStatement	"if ( strcmp ( argv [ arg ] , ""-h"" ) == 0 )"		10636233	0					
ANR	10636382	Condition	"strcmp ( argv [ arg ] , ""-h"" ) == 0"	640:13:15898:15924	10636233	0	True				
ANR	10636383	EqualityExpression	"strcmp ( argv [ arg ] , ""-h"" ) == 0"		10636233	0		==			
ANR	10636384	CallExpression	"strcmp ( argv [ arg ] , ""-h"" )"		10636233	0					
ANR	10636385	Callee	strcmp		10636233	0					
ANR	10636386	Identifier	strcmp		10636233	0					
ANR	10636387	ArgumentList	argv [ arg ]		10636233	1					
ANR	10636388	Argument	argv [ arg ]		10636233	0					
ANR	10636389	ArrayIndexing	argv [ arg ]		10636233	0					
ANR	10636390	Identifier	argv		10636233	0					
ANR	10636391	Identifier	arg		10636233	1					
ANR	10636392	Argument	"""-h"""		10636233	1					
ANR	10636393	PrimaryExpression	"""-h"""		10636233	0					
ANR	10636394	PrimaryExpression	0		10636233	1					
ANR	10636395	CompoundStatement		35:6:674:674	10636233	1					
ANR	10636396	ExpressionStatement	help ( 0 )	642:8:15943:15950	10636233	0	True				
ANR	10636397	CallExpression	help ( 0 )		10636233	0					
ANR	10636398	Callee	help		10636233	0					
ANR	10636399	Identifier	help		10636233	0					
ANR	10636400	ArgumentList	0		10636233	1					
ANR	10636401	Argument	0		10636233	0					
ANR	10636402	PrimaryExpression	0		10636233	0					
ANR	10636403	IfStatement	if ( ( TGZfile = TGZfname ( argv [ arg ] ) ) == NULL )		10636233	8					
ANR	10636404	Condition	( TGZfile = TGZfname ( argv [ arg ] ) ) == NULL	645:8:15969:16007	10636233	0	True				
ANR	10636405	EqualityExpression	( TGZfile = TGZfname ( argv [ arg ] ) ) == NULL		10636233	0		==			
ANR	10636406	AssignmentExpression	TGZfile = TGZfname ( argv [ arg ] )		10636233	0		=			
ANR	10636407	Identifier	TGZfile		10636233	0					
ANR	10636408	CallExpression	TGZfname ( argv [ arg ] )		10636233	1					
ANR	10636409	Callee	TGZfname		10636233	0					
ANR	10636410	Identifier	TGZfname		10636233	0					
ANR	10636411	ArgumentList	argv [ arg ]		10636233	1					
ANR	10636412	Argument	argv [ arg ]		10636233	0					
ANR	10636413	ArrayIndexing	argv [ arg ]		10636233	0					
ANR	10636414	Identifier	argv		10636233	0					
ANR	10636415	Identifier	arg		10636233	1					
ANR	10636416	Identifier	NULL		10636233	1					
ANR	10636417	ExpressionStatement	TGZnotfound ( argv [ arg ] )	646:6:16016:16038	10636233	1	True				
ANR	10636418	CallExpression	TGZnotfound ( argv [ arg ] )		10636233	0					
ANR	10636419	Callee	TGZnotfound		10636233	0					
ANR	10636420	Identifier	TGZnotfound		10636233	0					
ANR	10636421	ArgumentList	argv [ arg ]		10636233	1					
ANR	10636422	Argument	argv [ arg ]		10636233	0					
ANR	10636423	ArrayIndexing	argv [ arg ]		10636233	0					
ANR	10636424	Identifier	argv		10636233	0					
ANR	10636425	Identifier	arg		10636233	1					
ANR	10636426	ExpressionStatement	++ arg	648:4:16045:16050	10636233	9	True				
ANR	10636427	UnaryExpression	++ arg		10636233	0					
ANR	10636428	IncDec	++		10636233	0					
ANR	10636429	Identifier	arg		10636233	1					
ANR	10636430	IfStatement	if ( ( action == TGZ_LIST ) && ( arg != argc ) )		10636233	10					
ANR	10636431	Condition	( action == TGZ_LIST ) && ( arg != argc )	649:8:16060:16096	10636233	0	True				
ANR	10636432	AndExpression	( action == TGZ_LIST ) && ( arg != argc )		10636233	0		&&			
ANR	10636433	EqualityExpression	action == TGZ_LIST		10636233	0		==			
ANR	10636434	Identifier	action		10636233	0					
ANR	10636435	Identifier	TGZ_LIST		10636233	1					
ANR	10636436	EqualityExpression	arg != argc		10636233	1		!=			
ANR	10636437	Identifier	arg		10636233	0					
ANR	10636438	Identifier	argc		10636233	1					
ANR	10636439	ExpressionStatement	help ( 1 )	650:6:16105:16112	10636233	1	True				
ANR	10636440	CallExpression	help ( 1 )		10636233	0					
ANR	10636441	Callee	help		10636233	0					
ANR	10636442	Identifier	help		10636233	0					
ANR	10636443	ArgumentList	1		10636233	1					
ANR	10636444	Argument	1		10636233	0					
ANR	10636445	PrimaryExpression	1		10636233	0					
ANR	10636446	SwitchStatement	switch ( action )		10636233	11					
ANR	10636447	Condition	action	655:11:16158:16163	10636233	0	True				
ANR	10636448	Identifier	action		10636233	0					
ANR	10636449	CompoundStatement		50:6:913:913	10636233	1					
ANR	10636450	Label	case TGZ_LIST :	657:6:16180:16193	10636233	0	True				
ANR	10636451	Identifier	TGZ_LIST		10636233	0					
ANR	10636452	Label	case TGZ_EXTRACT :	658:6:16201:16217	10636233	1	True				
ANR	10636453	Identifier	TGZ_EXTRACT		10636233	0					
ANR	10636454	ExpressionStatement	"f = gzopen ( TGZfile , ""rb"" )"	659:8:16227:16251	10636233	2	True				
ANR	10636455	AssignmentExpression	"f = gzopen ( TGZfile , ""rb"" )"		10636233	0		=			
ANR	10636456	Identifier	f		10636233	0					
ANR	10636457	CallExpression	"gzopen ( TGZfile , ""rb"" )"		10636233	1					
ANR	10636458	Callee	gzopen		10636233	0					
ANR	10636459	Identifier	gzopen		10636233	0					
ANR	10636460	ArgumentList	TGZfile		10636233	1					
ANR	10636461	Argument	TGZfile		10636233	0					
ANR	10636462	Identifier	TGZfile		10636233	0					
ANR	10636463	Argument	"""rb"""		10636233	1					
ANR	10636464	PrimaryExpression	"""rb"""		10636233	0					
ANR	10636465	IfStatement	if ( f == NULL )		10636233	3					
ANR	10636466	Condition	f == NULL	660:12:16265:16273	10636233	0	True				
ANR	10636467	EqualityExpression	f == NULL		10636233	0		==			
ANR	10636468	Identifier	f		10636233	0					
ANR	10636469	Identifier	NULL		10636233	1					
ANR	10636470	CompoundStatement		55:10:1027:1027	10636233	1					
ANR	10636471	ExpressionStatement	"fprintf ( stderr , ""%s: Couldn't gzopen %s\\n"" , prog , TGZfile )"	662:12:16300:16355	10636233	0	True				
ANR	10636472	CallExpression	"fprintf ( stderr , ""%s: Couldn't gzopen %s\\n"" , prog , TGZfile )"		10636233	0					
ANR	10636473	Callee	fprintf		10636233	0					
ANR	10636474	Identifier	fprintf		10636233	0					
ANR	10636475	ArgumentList	stderr		10636233	1					
ANR	10636476	Argument	stderr		10636233	0					
ANR	10636477	Identifier	stderr		10636233	0					
ANR	10636478	Argument	"""%s: Couldn't gzopen %s\\n"""		10636233	1					
ANR	10636479	PrimaryExpression	"""%s: Couldn't gzopen %s\\n"""		10636233	0					
ANR	10636480	Argument	prog		10636233	2					
ANR	10636481	Identifier	prog		10636233	0					
ANR	10636482	Argument	TGZfile		10636233	3					
ANR	10636483	Identifier	TGZfile		10636233	0					
ANR	10636484	ReturnStatement	return 1 ;	663:12:16369:16377	10636233	1	True				
ANR	10636485	PrimaryExpression	1		10636233	0					
ANR	10636486	ExpressionStatement	"exit ( tar ( f , action , arg , argc , argv ) )"	665:8:16399:16436	10636233	4	True				
ANR	10636487	CallExpression	"exit ( tar ( f , action , arg , argc , argv ) )"		10636233	0					
ANR	10636488	Callee	exit		10636233	0					
ANR	10636489	Identifier	exit		10636233	0					
ANR	10636490	ArgumentList	"tar ( f , action , arg , argc , argv )"		10636233	1					
ANR	10636491	Argument	"tar ( f , action , arg , argc , argv )"		10636233	0					
ANR	10636492	CallExpression	"tar ( f , action , arg , argc , argv )"		10636233	0					
ANR	10636493	Callee	tar		10636233	0					
ANR	10636494	Identifier	tar		10636233	0					
ANR	10636495	ArgumentList	f		10636233	1					
ANR	10636496	Argument	f		10636233	0					
ANR	10636497	Identifier	f		10636233	0					
ANR	10636498	Argument	action		10636233	1					
ANR	10636499	Identifier	action		10636233	0					
ANR	10636500	Argument	arg		10636233	2					
ANR	10636501	Identifier	arg		10636233	0					
ANR	10636502	Argument	argc		10636233	3					
ANR	10636503	Identifier	argc		10636233	0					
ANR	10636504	Argument	argv		10636233	4					
ANR	10636505	Identifier	argv		10636233	0					
ANR	10636506	BreakStatement	break ;	666:6:16444:16449	10636233	5	True				
ANR	10636507	Label	default :	668:6:16458:16465	10636233	6	True				
ANR	10636508	Identifier	default		10636233	0					
ANR	10636509	ExpressionStatement	"error ( ""Unknown option"" )"	669:8:16475:16498	10636233	7	True				
ANR	10636510	CallExpression	"error ( ""Unknown option"" )"		10636233	0					
ANR	10636511	Callee	error		10636233	0					
ANR	10636512	Identifier	error		10636233	0					
ANR	10636513	ArgumentList	"""Unknown option"""		10636233	1					
ANR	10636514	Argument	"""Unknown option"""		10636233	0					
ANR	10636515	PrimaryExpression	"""Unknown option"""		10636233	0					
ANR	10636516	ExpressionStatement	exit ( 1 )	670:8:16508:16515	10636233	8	True				
ANR	10636517	CallExpression	exit ( 1 )		10636233	0					
ANR	10636518	Callee	exit		10636233	0					
ANR	10636519	Identifier	exit		10636233	0					
ANR	10636520	ArgumentList	1		10636233	1					
ANR	10636521	Argument	1		10636233	0					
ANR	10636522	PrimaryExpression	1		10636233	0					
ANR	10636523	ReturnStatement	return 0 ;	673:4:16530:16538	10636233	12	True				
ANR	10636524	PrimaryExpression	0		10636233	0					
ANR	10636525	ReturnType	int		10636233	1					
ANR	10636526	Identifier	main		10636233	2					
ANR	10636527	ParameterList	"int argc , char * * argv"		10636233	3					
ANR	10636528	Parameter	int argc	606:9:15236:15243	10636233	0	True				
ANR	10636529	ParameterType	int		10636233	0					
ANR	10636530	Identifier	argc		10636233	1					
ANR	10636531	Parameter	char * * argv	606:18:15245:15255	10636233	1	True				
ANR	10636532	ParameterType	char * *		10636233	0					
ANR	10636533	Identifier	argv		10636233	1					
ANR	10636534	CFGEntryNode	ENTRY		10636233		True				
ANR	10636535	CFGExitNode	EXIT		10636233		True				
ANR	10636536	Symbol	argc		10636233						
ANR	10636537	Symbol	strcmp		10636233						
ANR	10636538	Symbol	NULL		10636233						
ANR	10636539	Symbol	tar		10636233						
ANR	10636540	Symbol	f		10636233						
ANR	10636541	Symbol	TGZfname		10636233						
ANR	10636542	Symbol	* argv		10636233						
ANR	10636543	Symbol	stderr		10636233						
ANR	10636544	Symbol	argv		10636233						
ANR	10636545	Symbol	prog		10636233						
ANR	10636546	Symbol	TGZ_EXTRACT		10636233						
ANR	10636547	Symbol	gzopen		10636233						
ANR	10636548	Symbol	TGZfile		10636233						
ANR	10636549	Symbol	strrchr		10636233						
ANR	10636550	Symbol	arg		10636233						
ANR	10636551	Symbol	action		10636233						
ANR	10636552	Symbol	TGZ_LIST		10636233						
ANR	10636553	Symbol	* arg		10636233						
