command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10486223	File	data/converged/CVE-2018-16863_ghostpdl/toolbin_halftone_ETS_test_ets.c								
ANR	10486224	ClassDef	psd_ctx_s	14:0:330:799							
ANR	10486225	DeclStmt									
ANR	10486226	Decl							int	int	width
ANR	10486227	DeclStmt									
ANR	10486228	Decl							int	int	height
ANR	10486229	DeclStmt									
ANR	10486230	Decl							int	int	num_channels
ANR	10486231	DeclStmt									
ANR	10486232	Decl							int	int	depth
ANR	10486233	DeclStmt									
ANR	10486234	Decl							int	int	curr_row
ANR	10486235	DeclStmt									
ANR	10486236	Decl							void	void *	rle_row
ANR	10486237	DeclStmt									
ANR	10486238	Decl							int	int *	row_lengths
ANR	10486239	DeclStmt									
ANR	10486240	Decl							int	int *	band_row_length_index
ANR	10486241	DeclStmt									
ANR	10486242	Decl							long	long *	band_file_offset
ANR	10486243	DeclStmt									
ANR	10486244	Decl							void	void *	output_buffer
ANR	10486245	DeclStmt									
ANR	10486246	Decl							"void ( * ) ( ETS_SrcPixel * * ibufs , int xs , FILE * fi , int planes , void * image_ctx )"	"void ( * ) ( ETS_SrcPixel * * ibufs , int xs , FILE * fi , int planes , void * image_ctx )"	read_line
ANR	10486247	DeclStmt									
ANR	10486248	Decl							"void ( * ) ( uchar * * obufs , int xs , FILE * fo , int planes , void * image_ctx )"	"void ( * ) ( uchar * * obufs , int xs , FILE * fo , int planes , void * image_ctx )"	write_line
ANR	10486249	DeclStmt									
ANR	10486250	Decl							void ( * ) ( void * image_ctx )	void ( * ) ( void * image_ctx )	finalize
ANR	10486251	DeclStmt									
ANR	10486252	Decl							uchar	uchar *	permute
ANR	10486253	DeclStmt									
ANR	10486254	Decl							struct psd_ctx_s	struct psd_ctx_s	psd_ctx_t
ANR	10486255	Function	die	33:0:840:916							
ANR	10486256	FunctionDef	die (char * why)		10486255	0					
ANR	10486257	CompoundStatement		35:0:867:916	10486255	0					
ANR	10486258	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , why )"	36:4:873:901	10486255	0	True				
ANR	10486259	CallExpression	"fprintf ( stderr , ""%s\\n"" , why )"		10486255	0					
ANR	10486260	Callee	fprintf		10486255	0					
ANR	10486261	Identifier	fprintf		10486255	0					
ANR	10486262	ArgumentList	stderr		10486255	1					
ANR	10486263	Argument	stderr		10486255	0					
ANR	10486264	Identifier	stderr		10486255	0					
ANR	10486265	Argument	"""%s\\n"""		10486255	1					
ANR	10486266	PrimaryExpression	"""%s\\n"""		10486255	0					
ANR	10486267	Argument	why		10486255	2					
ANR	10486268	Identifier	why		10486255	0					
ANR	10486269	ExpressionStatement	exit ( 1 )	37:4:907:914	10486255	1	True				
ANR	10486270	CallExpression	exit ( 1 )		10486255	0					
ANR	10486271	Callee	exit		10486255	0					
ANR	10486272	Identifier	exit		10486255	0					
ANR	10486273	ArgumentList	1		10486255	1					
ANR	10486274	Argument	1		10486255	0					
ANR	10486275	PrimaryExpression	1		10486255	0					
ANR	10486276	ReturnType	static void		10486255	1					
ANR	10486277	Identifier	die		10486255	2					
ANR	10486278	ParameterList	char * why		10486255	3					
ANR	10486279	Parameter	char * why	34:4:856:864	10486255	0	True				
ANR	10486280	ParameterType	char *		10486255	0					
ANR	10486281	Identifier	why		10486255	1					
ANR	10486282	CFGEntryNode	ENTRY		10486255		True				
ANR	10486283	CFGExitNode	EXIT		10486255		True				
ANR	10486284	Symbol	why		10486255						
ANR	10486285	Symbol	stderr		10486255						
ANR	10486286	Function	get_arg	44:0:957:1225							
ANR	10486287	FunctionDef	"get_arg (int argc , char * * argv , int * pi , const char * arg)"		10486286	0					
ANR	10486288	CompoundStatement		45:0:1035:1225	10486286	0					
ANR	10486289	IfStatement	if ( arg [ 0 ] != 0 )		10486286	0					
ANR	10486290	Condition	arg [ 0 ] != 0	46:8:1045:1055	10486286	0	True				
ANR	10486291	EqualityExpression	arg [ 0 ] != 0		10486286	0		!=			
ANR	10486292	ArrayIndexing	arg [ 0 ]		10486286	0					
ANR	10486293	Identifier	arg		10486286	0					
ANR	10486294	PrimaryExpression	0		10486286	1					
ANR	10486295	PrimaryExpression	0		10486286	1					
ANR	10486296	CompoundStatement		2:21:22:22	10486286	1					
ANR	10486297	ReturnStatement	return arg ;	47:8:1068:1078	10486286	0	True				
ANR	10486298	Identifier	arg		10486286	0					
ANR	10486299	ElseStatement	else		10486286	0					
ANR	10486300	CompoundStatement		4:11:55:55	10486286	0					
ANR	10486301	ExpressionStatement	( * pi ) ++	49:8:1101:1108	10486286	0	True				
ANR	10486302	PostIncDecOperationExpression	( * pi ) ++		10486286	0					
ANR	10486303	UnaryOperationExpression	* pi		10486286	0					
ANR	10486304	UnaryOperator	*		10486286	0					
ANR	10486305	Identifier	pi		10486286	1					
ANR	10486306	IncDec	++		10486286	1					
ANR	10486307	IfStatement	if ( * pi == argc )		10486286	1					
ANR	10486308	Condition	* pi == argc	50:12:1122:1132	10486286	0	True				
ANR	10486309	EqualityExpression	* pi == argc		10486286	0		==			
ANR	10486310	UnaryOperationExpression	* pi		10486286	0					
ANR	10486311	UnaryOperator	*		10486286	0					
ANR	10486312	Identifier	pi		10486286	1					
ANR	10486313	Identifier	argc		10486286	1					
ANR	10486314	CompoundStatement		6:25:99:99	10486286	1					
ANR	10486315	ReturnStatement	return NULL ;	51:12:1149:1160	10486286	0	True				
ANR	10486316	Identifier	NULL		10486286	0					
ANR	10486317	ElseStatement	else		10486286	0					
ANR	10486318	CompoundStatement		8:15:141:141	10486286	0					
ANR	10486319	ReturnStatement	return argv [ * pi ] ;	53:12:1191:1207	10486286	0	True				
ANR	10486320	ArrayIndexing	argv [ * pi ]		10486286	0					
ANR	10486321	Identifier	argv		10486286	0					
ANR	10486322	UnaryOperationExpression	* pi		10486286	1					
ANR	10486323	UnaryOperator	*		10486286	0					
ANR	10486324	Identifier	pi		10486286	1					
ANR	10486325	ReturnType	static const char *		10486286	1					
ANR	10486326	Identifier	get_arg		10486286	2					
ANR	10486327	ParameterList	"int argc , char * * argv , int * pi , const char * arg"		10486286	3					
ANR	10486328	Parameter	int argc	44:29:986:993	10486286	0	True				
ANR	10486329	ParameterType	int		10486286	0					
ANR	10486330	Identifier	argc		10486286	1					
ANR	10486331	Parameter	char * * argv	44:39:996:1006	10486286	1	True				
ANR	10486332	ParameterType	char * *		10486286	0					
ANR	10486333	Identifier	argv		10486286	1					
ANR	10486334	Parameter	int * pi	44:52:1009:1015	10486286	2	True				
ANR	10486335	ParameterType	int *		10486286	0					
ANR	10486336	Identifier	pi		10486286	1					
ANR	10486337	Parameter	const char * arg	44:61:1018:1032	10486286	3	True				
ANR	10486338	ParameterType	const char *		10486286	0					
ANR	10486339	Identifier	arg		10486286	1					
ANR	10486340	CFGEntryNode	ENTRY		10486286		True				
ANR	10486341	CFGExitNode	EXIT		10486286		True				
ANR	10486342	Symbol	argc		10486286						
ANR	10486343	Symbol	NULL		10486286						
ANR	10486344	Symbol	arg		10486286						
ANR	10486345	Symbol	* * pi		10486286						
ANR	10486346	Symbol	pi		10486286						
ANR	10486347	Symbol	* argv		10486286						
ANR	10486348	Symbol	* pi		10486286						
ANR	10486349	Symbol	argv		10486286						
ANR	10486350	Symbol	* arg		10486286						
ANR	10486351	Function	usage	58:0:1228:2044							
ANR	10486352	FunctionDef	usage ()		10486351	0					
ANR	10486353	CompoundStatement		59:0:1252:2044	10486351	0					
ANR	10486354	ExpressionStatement	"printf ( ""Usage: ETS\\n"" )"	60:4:1258:1280	10486351	0	True				
ANR	10486355	CallExpression	"printf ( ""Usage: ETS\\n"" )"		10486351	0					
ANR	10486356	Callee	printf		10486351	0					
ANR	10486357	Identifier	printf		10486351	0					
ANR	10486358	ArgumentList	"""Usage: ETS\\n"""		10486351	1					
ANR	10486359	Argument	"""Usage: ETS\\n"""		10486351	0					
ANR	10486360	PrimaryExpression	"""Usage: ETS\\n"""		10486351	0					
ANR	10486361	ExpressionStatement	"printf ( ""ETS <options>\\n"" )"	61:4:1286:1311	10486351	1	True				
ANR	10486362	CallExpression	"printf ( ""ETS <options>\\n"" )"		10486351	0					
ANR	10486363	Callee	printf		10486351	0					
ANR	10486364	Identifier	printf		10486351	0					
ANR	10486365	ArgumentList	"""ETS <options>\\n"""		10486351	1					
ANR	10486366	Argument	"""ETS <options>\\n"""		10486351	0					
ANR	10486367	PrimaryExpression	"""ETS <options>\\n"""		10486351	0					
ANR	10486368	ExpressionStatement	"printf ( ""    -i <inputfile      .pam or .pgm - omit for stdin\\n"" )"	62:4:1317:1381	10486351	2	True				
ANR	10486369	CallExpression	"printf ( ""    -i <inputfile      .pam or .pgm - omit for stdin\\n"" )"		10486351	0					
ANR	10486370	Callee	printf		10486351	0					
ANR	10486371	Identifier	printf		10486351	0					
ANR	10486372	ArgumentList	"""    -i <inputfile      .pam or .pgm - omit for stdin\\n"""		10486351	1					
ANR	10486373	Argument	"""    -i <inputfile      .pam or .pgm - omit for stdin\\n"""		10486351	0					
ANR	10486374	PrimaryExpression	"""    -i <inputfile      .pam or .pgm - omit for stdin\\n"""		10486351	0					
ANR	10486375	ExpressionStatement	"printf ( ""    -o <outputfile>    same format as input - omit for stdout\\n"" )"	63:4:1387:1460	10486351	3	True				
ANR	10486376	CallExpression	"printf ( ""    -o <outputfile>    same format as input - omit for stdout\\n"" )"		10486351	0					
ANR	10486377	Callee	printf		10486351	0					
ANR	10486378	Identifier	printf		10486351	0					
ANR	10486379	ArgumentList	"""    -o <outputfile>    same format as input - omit for stdout\\n"""		10486351	1					
ANR	10486380	Argument	"""    -o <outputfile>    same format as input - omit for stdout\\n"""		10486351	0					
ANR	10486381	PrimaryExpression	"""    -o <outputfile>    same format as input - omit for stdout\\n"""		10486351	0					
ANR	10486382	ExpressionStatement	"printf ( ""    -g <gammafile>     optional textual table of gamma values\\n"" )"	64:4:1466:1539	10486351	4	True				
ANR	10486383	CallExpression	"printf ( ""    -g <gammafile>     optional textual table of gamma values\\n"" )"		10486351	0					
ANR	10486384	Callee	printf		10486351	0					
ANR	10486385	Identifier	printf		10486351	0					
ANR	10486386	ArgumentList	"""    -g <gammafile>     optional textual table of gamma values\\n"""		10486351	1					
ANR	10486387	Argument	"""    -g <gammafile>     optional textual table of gamma values\\n"""		10486351	0					
ANR	10486388	PrimaryExpression	"""    -g <gammafile>     optional textual table of gamma values\\n"""		10486351	0					
ANR	10486389	ExpressionStatement	"printf ( ""    -e <style>         ets style (0 off, 1 = normal, etc)\\n"" )"	65:4:1545:1614	10486351	5	True				
ANR	10486390	CallExpression	"printf ( ""    -e <style>         ets style (0 off, 1 = normal, etc)\\n"" )"		10486351	0					
ANR	10486391	Callee	printf		10486351	0					
ANR	10486392	Identifier	printf		10486351	0					
ANR	10486393	ArgumentList	"""    -e <style>         ets style (0 off, 1 = normal, etc)\\n"""		10486351	1					
ANR	10486394	Argument	"""    -e <style>         ets style (0 off, 1 = normal, etc)\\n"""		10486351	0					
ANR	10486395	PrimaryExpression	"""    -e <style>         ets style (0 off, 1 = normal, etc)\\n"""		10486351	0					
ANR	10486396	ExpressionStatement	"printf ( ""    -r <style>         random noise style (0 off, 1 = rnd, 2 = tm\\n"" )"	66:4:1620:1697	10486351	6	True				
ANR	10486397	CallExpression	"printf ( ""    -r <style>         random noise style (0 off, 1 = rnd, 2 = tm\\n"" )"		10486351	0					
ANR	10486398	Callee	printf		10486351	0					
ANR	10486399	Identifier	printf		10486351	0					
ANR	10486400	ArgumentList	"""    -r <style>         random noise style (0 off, 1 = rnd, 2 = tm\\n"""		10486351	1					
ANR	10486401	Argument	"""    -r <style>         random noise style (0 off, 1 = rnd, 2 = tm\\n"""		10486351	0					
ANR	10486402	PrimaryExpression	"""    -r <style>         random noise style (0 off, 1 = rnd, 2 = tm\\n"""		10486351	0					
ANR	10486403	ExpressionStatement	"printf ( ""    -m <0 or 1>        enable/disable multiplane optimisations\\n"" )"	67:4:1703:1777	10486351	7	True				
ANR	10486404	CallExpression	"printf ( ""    -m <0 or 1>        enable/disable multiplane optimisations\\n"" )"		10486351	0					
ANR	10486405	Callee	printf		10486351	0					
ANR	10486406	Identifier	printf		10486351	0					
ANR	10486407	ArgumentList	"""    -m <0 or 1>        enable/disable multiplane optimisations\\n"""		10486351	1					
ANR	10486408	Argument	"""    -m <0 or 1>        enable/disable multiplane optimisations\\n"""		10486351	0					
ANR	10486409	PrimaryExpression	"""    -m <0 or 1>        enable/disable multiplane optimisations\\n"""		10486351	0					
ANR	10486410	ExpressionStatement	"printf ( ""    -l <levels>        number of levels in the output\\n"" )"	68:4:1783:1848	10486351	8	True				
ANR	10486411	CallExpression	"printf ( ""    -l <levels>        number of levels in the output\\n"" )"		10486351	0					
ANR	10486412	Callee	printf		10486351	0					
ANR	10486413	Identifier	printf		10486351	0					
ANR	10486414	ArgumentList	"""    -l <levels>        number of levels in the output\\n"""		10486351	1					
ANR	10486415	Argument	"""    -l <levels>        number of levels in the output\\n"""		10486351	0					
ANR	10486416	PrimaryExpression	"""    -l <levels>        number of levels in the output\\n"""		10486351	0					
ANR	10486417	ExpressionStatement	"printf ( ""    -a X:Y             aspect ratio of input\\n"" )"	69:4:1854:1910	10486351	9	True				
ANR	10486418	CallExpression	"printf ( ""    -a X:Y             aspect ratio of input\\n"" )"		10486351	0					
ANR	10486419	Callee	printf		10486351	0					
ANR	10486420	Identifier	printf		10486351	0					
ANR	10486421	ArgumentList	"""    -a X:Y             aspect ratio of input\\n"""		10486351	1					
ANR	10486422	Argument	"""    -a X:Y             aspect ratio of input\\n"""		10486351	0					
ANR	10486423	PrimaryExpression	"""    -a X:Y             aspect ratio of input\\n"""		10486351	0					
ANR	10486424	ExpressionStatement	"printf ( ""    -n <noise level>   noise level (0 to 8)\\n"" )"	70:4:1916:1971	10486351	10	True				
ANR	10486425	CallExpression	"printf ( ""    -n <noise level>   noise level (0 to 8)\\n"" )"		10486351	0					
ANR	10486426	Callee	printf		10486351	0					
ANR	10486427	Identifier	printf		10486351	0					
ANR	10486428	ArgumentList	"""    -n <noise level>   noise level (0 to 8)\\n"""		10486351	1					
ANR	10486429	Argument	"""    -n <noise level>   noise level (0 to 8)\\n"""		10486351	0					
ANR	10486430	PrimaryExpression	"""    -n <noise level>   noise level (0 to 8)\\n"""		10486351	0					
ANR	10486431	ExpressionStatement	"printf ( ""\\n\\nDefaults: -e1 -r1 -m1 -l2 -a1:1 -n0\\n"" )"	71:4:1977:2028	10486351	11	True				
ANR	10486432	CallExpression	"printf ( ""\\n\\nDefaults: -e1 -r1 -m1 -l2 -a1:1 -n0\\n"" )"		10486351	0					
ANR	10486433	Callee	printf		10486351	0					
ANR	10486434	Identifier	printf		10486351	0					
ANR	10486435	ArgumentList	"""\\n\\nDefaults: -e1 -r1 -m1 -l2 -a1:1 -n0\\n"""		10486351	1					
ANR	10486436	Argument	"""\\n\\nDefaults: -e1 -r1 -m1 -l2 -a1:1 -n0\\n"""		10486351	0					
ANR	10486437	PrimaryExpression	"""\\n\\nDefaults: -e1 -r1 -m1 -l2 -a1:1 -n0\\n"""		10486351	0					
ANR	10486438	ReturnStatement	return 1 ;	72:4:2034:2042	10486351	12	True				
ANR	10486439	PrimaryExpression	1		10486351	0					
ANR	10486440	ReturnType	static int		10486351	1					
ANR	10486441	Identifier	usage		10486351	2					
ANR	10486442	ParameterList			10486351	3					
ANR	10486443	CFGEntryNode	ENTRY		10486351		True				
ANR	10486444	CFGExitNode	EXIT		10486351		True				
ANR	10486445	Function	get4	75:0:2047:2266							
ANR	10486446	FunctionDef	"get4 (int * value , uchar * buf)"		10486445	0					
ANR	10486447	CompoundStatement		76:0:2088:2266	10486445	0					
ANR	10486448	ExpressionStatement	* value = buf [ 3 ] + ( buf [ 2 ] << 8 ) + ( buf [ 1 ] << 16 ) + ( buf [ 0 ] << 24 )	78:4:2115:2180	10486445	0	True				
ANR	10486449	AssignmentExpression	* value = buf [ 3 ] + ( buf [ 2 ] << 8 ) + ( buf [ 1 ] << 16 ) + ( buf [ 0 ] << 24 )		10486445	0		=			
ANR	10486450	UnaryOperationExpression	* value		10486445	0					
ANR	10486451	UnaryOperator	*		10486445	0					
ANR	10486452	Identifier	value		10486445	1					
ANR	10486453	AdditiveExpression	buf [ 3 ] + ( buf [ 2 ] << 8 ) + ( buf [ 1 ] << 16 ) + ( buf [ 0 ] << 24 )		10486445	1		+			
ANR	10486454	ArrayIndexing	buf [ 3 ]		10486445	0					
ANR	10486455	Identifier	buf		10486445	0					
ANR	10486456	PrimaryExpression	3		10486445	1					
ANR	10486457	AdditiveExpression	( buf [ 2 ] << 8 ) + ( buf [ 1 ] << 16 ) + ( buf [ 0 ] << 24 )		10486445	1		+			
ANR	10486458	ShiftExpression	buf [ 2 ] << 8		10486445	0		<<			
ANR	10486459	ArrayIndexing	buf [ 2 ]		10486445	0					
ANR	10486460	Identifier	buf		10486445	0					
ANR	10486461	PrimaryExpression	2		10486445	1					
ANR	10486462	PrimaryExpression	8		10486445	1					
ANR	10486463	AdditiveExpression	( buf [ 1 ] << 16 ) + ( buf [ 0 ] << 24 )		10486445	1		+			
ANR	10486464	ShiftExpression	buf [ 1 ] << 16		10486445	0		<<			
ANR	10486465	ArrayIndexing	buf [ 1 ]		10486445	0					
ANR	10486466	Identifier	buf		10486445	0					
ANR	10486467	PrimaryExpression	1		10486445	1					
ANR	10486468	PrimaryExpression	16		10486445	1					
ANR	10486469	ShiftExpression	buf [ 0 ] << 24		10486445	1		<<			
ANR	10486470	ArrayIndexing	buf [ 0 ]		10486445	0					
ANR	10486471	Identifier	buf		10486445	0					
ANR	10486472	PrimaryExpression	0		10486445	1					
ANR	10486473	PrimaryExpression	24		10486445	1					
ANR	10486474	ReturnType	static void		10486445	1					
ANR	10486475	Identifier	get4		10486445	2					
ANR	10486476	ParameterList	"int * value , uchar * buf"		10486445	3					
ANR	10486477	Parameter	int * value	75:17:2064:2073	10486445	0	True				
ANR	10486478	ParameterType	int *		10486445	0					
ANR	10486479	Identifier	value		10486445	1					
ANR	10486480	Parameter	uchar * buf	75:29:2076:2085	10486445	1	True				
ANR	10486481	ParameterType	uchar *		10486445	0					
ANR	10486482	Identifier	buf		10486445	1					
ANR	10486483	CFGEntryNode	ENTRY		10486445		True				
ANR	10486484	CFGExitNode	EXIT		10486445		True				
ANR	10486485	Symbol	buf		10486445						
ANR	10486486	Symbol	* buf		10486445						
ANR	10486487	Symbol	* value		10486445						
ANR	10486488	Symbol	value		10486445						
ANR	10486489	Function	get2	84:0:2269:2420							
ANR	10486490	FunctionDef	"get2 (int * value , uchar * buf)"		10486489	0					
ANR	10486491	CompoundStatement		85:0:2310:2420	10486489	0					
ANR	10486492	ExpressionStatement	* value = buf [ 1 ] + ( buf [ 0 ] << 8 )	87:4:2337:2368	10486489	0	True				
ANR	10486493	AssignmentExpression	* value = buf [ 1 ] + ( buf [ 0 ] << 8 )		10486489	0		=			
ANR	10486494	UnaryOperationExpression	* value		10486489	0					
ANR	10486495	UnaryOperator	*		10486489	0					
ANR	10486496	Identifier	value		10486489	1					
ANR	10486497	AdditiveExpression	buf [ 1 ] + ( buf [ 0 ] << 8 )		10486489	1		+			
ANR	10486498	ArrayIndexing	buf [ 1 ]		10486489	0					
ANR	10486499	Identifier	buf		10486489	0					
ANR	10486500	PrimaryExpression	1		10486489	1					
ANR	10486501	ShiftExpression	buf [ 0 ] << 8		10486489	1		<<			
ANR	10486502	ArrayIndexing	buf [ 0 ]		10486489	0					
ANR	10486503	Identifier	buf		10486489	0					
ANR	10486504	PrimaryExpression	0		10486489	1					
ANR	10486505	PrimaryExpression	8		10486489	1					
ANR	10486506	ReturnType	static void		10486489	1					
ANR	10486507	Identifier	get2		10486489	2					
ANR	10486508	ParameterList	"int * value , uchar * buf"		10486489	3					
ANR	10486509	Parameter	int * value	84:17:2286:2295	10486489	0	True				
ANR	10486510	ParameterType	int *		10486489	0					
ANR	10486511	Identifier	value		10486489	1					
ANR	10486512	Parameter	uchar * buf	84:29:2298:2307	10486489	1	True				
ANR	10486513	ParameterType	uchar *		10486489	0					
ANR	10486514	Identifier	buf		10486489	1					
ANR	10486515	CFGEntryNode	ENTRY		10486489		True				
ANR	10486516	CFGExitNode	EXIT		10486489		True				
ANR	10486517	Symbol	buf		10486489						
ANR	10486518	Symbol	* buf		10486489						
ANR	10486519	Symbol	* value		10486489						
ANR	10486520	Symbol	value		10486489						
ANR	10486521	Function	rle_decode	94:0:2451:3325							
ANR	10486522	FunctionDef	"rle_decode (uchar * in_buff , int in_length , uchar * out_buff , int out_length)"		10486521	0					
ANR	10486523	CompoundStatement		96:0:2562:3325	10486521	0					
ANR	10486524	IdentifierDeclStatement	"signed char hvalue , * input_buf ;"	97:4:2568:2598	10486521	0	True				
ANR	10486525	IdentifierDecl	hvalue		10486521	0					
ANR	10486526	IdentifierDeclType	signed char		10486521	0					
ANR	10486527	Identifier	hvalue		10486521	1					
ANR	10486528	IdentifierDecl	* input_buf		10486521	1					
ANR	10486529	IdentifierDeclType	signed char *		10486521	0					
ANR	10486530	Identifier	input_buf		10486521	1					
ANR	10486531	IdentifierDeclStatement	char value ;	98:4:2604:2614	10486521	1	True				
ANR	10486532	IdentifierDecl	value		10486521	0					
ANR	10486533	IdentifierDeclType	char		10486521	0					
ANR	10486534	Identifier	value		10486521	1					
ANR	10486535	IdentifierDeclStatement	"int in_pos = 0 , out_pos = 0 ;"	99:4:2620:2647	10486521	2	True				
ANR	10486536	IdentifierDecl	in_pos = 0		10486521	0					
ANR	10486537	IdentifierDeclType	int		10486521	0					
ANR	10486538	Identifier	in_pos		10486521	1					
ANR	10486539	AssignmentExpression	in_pos = 0		10486521	2		=			
ANR	10486540	Identifier	in_pos		10486521	0					
ANR	10486541	PrimaryExpression	0		10486521	1					
ANR	10486542	IdentifierDecl	out_pos = 0		10486521	1					
ANR	10486543	IdentifierDeclType	int		10486521	0					
ANR	10486544	Identifier	out_pos		10486521	1					
ANR	10486545	AssignmentExpression	out_pos = 0		10486521	2		=			
ANR	10486546	Identifier	out_pos		10486521	0					
ANR	10486547	PrimaryExpression	0		10486521	1					
ANR	10486548	ExpressionStatement	input_buf = ( signed char * ) in_buff	101:4:2654:2688	10486521	3	True				
ANR	10486549	AssignmentExpression	input_buf = ( signed char * ) in_buff		10486521	0		=			
ANR	10486550	Identifier	input_buf		10486521	0					
ANR	10486551	CastExpression	( signed char * ) in_buff		10486521	1					
ANR	10486552	CastTarget	signed char *		10486521	0					
ANR	10486553	Identifier	in_buff		10486521	1					
ANR	10486554	WhileStatement	while ( out_pos < out_length )		10486521	4					
ANR	10486555	Condition	out_pos < out_length	102:11:2701:2720	10486521	0	True				
ANR	10486556	RelationalExpression	out_pos < out_length		10486521	0		<			
ANR	10486557	Identifier	out_pos		10486521	0					
ANR	10486558	Identifier	out_length		10486521	1					
ANR	10486559	CompoundStatement		8:4:165:165	10486521	1					
ANR	10486560	ExpressionStatement	hvalue = input_buf [ in_pos ]	104:8:2738:2764	10486521	0	True				
ANR	10486561	AssignmentExpression	hvalue = input_buf [ in_pos ]		10486521	0		=			
ANR	10486562	Identifier	hvalue		10486521	0					
ANR	10486563	ArrayIndexing	input_buf [ in_pos ]		10486521	1					
ANR	10486564	Identifier	input_buf		10486521	0					
ANR	10486565	Identifier	in_pos		10486521	1					
ANR	10486566	IfStatement	if ( hvalue >= 0 )		10486521	1					
ANR	10486567	Condition	hvalue >= 0	105:12:2778:2788	10486521	0	True				
ANR	10486568	RelationalExpression	hvalue >= 0		10486521	0		>=			
ANR	10486569	Identifier	hvalue		10486521	0					
ANR	10486570	PrimaryExpression	0		10486521	1					
ANR	10486571	CompoundStatement		11:8:237:237	10486521	1					
ANR	10486572	ExpressionStatement	"memcpy ( & ( out_buff [ out_pos ] ) , & ( in_buff [ in_pos + 1 ] ) , ( 1 + hvalue ) )"	108:12:2862:2928	10486521	0	True				
ANR	10486573	CallExpression	"memcpy ( & ( out_buff [ out_pos ] ) , & ( in_buff [ in_pos + 1 ] ) , ( 1 + hvalue ) )"		10486521	0					
ANR	10486574	Callee	memcpy		10486521	0					
ANR	10486575	Identifier	memcpy		10486521	0					
ANR	10486576	ArgumentList	& ( out_buff [ out_pos ] )		10486521	1					
ANR	10486577	Argument	& ( out_buff [ out_pos ] )		10486521	0					
ANR	10486578	UnaryOperationExpression	& ( out_buff [ out_pos ] )		10486521	0					
ANR	10486579	UnaryOperator	&		10486521	0					
ANR	10486580	ArrayIndexing	out_buff [ out_pos ]		10486521	1					
ANR	10486581	Identifier	out_buff		10486521	0					
ANR	10486582	Identifier	out_pos		10486521	1					
ANR	10486583	Argument	& ( in_buff [ in_pos + 1 ] )		10486521	1					
ANR	10486584	UnaryOperationExpression	& ( in_buff [ in_pos + 1 ] )		10486521	0					
ANR	10486585	UnaryOperator	&		10486521	0					
ANR	10486586	ArrayIndexing	in_buff [ in_pos + 1 ]		10486521	1					
ANR	10486587	Identifier	in_buff		10486521	0					
ANR	10486588	AdditiveExpression	in_pos + 1		10486521	1		+			
ANR	10486589	Identifier	in_pos		10486521	0					
ANR	10486590	PrimaryExpression	1		10486521	1					
ANR	10486591	Argument	1 + hvalue		10486521	2					
ANR	10486592	AdditiveExpression	1 + hvalue		10486521	0		+			
ANR	10486593	PrimaryExpression	1		10486521	0					
ANR	10486594	Identifier	hvalue		10486521	1					
ANR	10486595	ExpressionStatement	in_pos += ( 1 + ( 1 + hvalue ) )	109:12:2942:2970	10486521	1	True				
ANR	10486596	AssignmentExpression	in_pos += ( 1 + ( 1 + hvalue ) )		10486521	0		+=			
ANR	10486597	Identifier	in_pos		10486521	0					
ANR	10486598	AdditiveExpression	1 + ( 1 + hvalue )		10486521	1		+			
ANR	10486599	PrimaryExpression	1		10486521	0					
ANR	10486600	AdditiveExpression	1 + hvalue		10486521	1		+			
ANR	10486601	PrimaryExpression	1		10486521	0					
ANR	10486602	Identifier	hvalue		10486521	1					
ANR	10486603	ExpressionStatement	out_pos += ( 1 + hvalue )	110:12:2984:3007	10486521	2	True				
ANR	10486604	AssignmentExpression	out_pos += ( 1 + hvalue )		10486521	0		+=			
ANR	10486605	Identifier	out_pos		10486521	0					
ANR	10486606	AdditiveExpression	1 + hvalue		10486521	1		+			
ANR	10486607	PrimaryExpression	1		10486521	0					
ANR	10486608	Identifier	hvalue		10486521	1					
ANR	10486609	ElseStatement	else		10486521	0					
ANR	10486610	IfStatement	if ( hvalue > - 128 )		10486521	0					
ANR	10486611	Condition	hvalue > - 128	112:17:3037:3049	10486521	0	True				
ANR	10486612	RelationalExpression	hvalue > - 128		10486521	0		>			
ANR	10486613	Identifier	hvalue		10486521	0					
ANR	10486614	UnaryOperationExpression	- 128		10486521	1					
ANR	10486615	UnaryOperator	-		10486521	0					
ANR	10486616	PrimaryExpression	128		10486521	1					
ANR	10486617	CompoundStatement		18:8:497:497	10486521	1					
ANR	10486618	ExpressionStatement	value = in_buff [ in_pos + 1 ]	115:12:3119:3144	10486521	0	True				
ANR	10486619	AssignmentExpression	value = in_buff [ in_pos + 1 ]		10486521	0		=			
ANR	10486620	Identifier	value		10486521	0					
ANR	10486621	ArrayIndexing	in_buff [ in_pos + 1 ]		10486521	1					
ANR	10486622	Identifier	in_buff		10486521	0					
ANR	10486623	AdditiveExpression	in_pos + 1		10486521	1		+			
ANR	10486624	Identifier	in_pos		10486521	0					
ANR	10486625	PrimaryExpression	1		10486521	1					
ANR	10486626	ExpressionStatement	"memset ( & ( out_buff [ out_pos ] ) , value , ( 1 - hvalue ) )"	116:12:3158:3207	10486521	1	True				
ANR	10486627	CallExpression	"memset ( & ( out_buff [ out_pos ] ) , value , ( 1 - hvalue ) )"		10486521	0					
ANR	10486628	Callee	memset		10486521	0					
ANR	10486629	Identifier	memset		10486521	0					
ANR	10486630	ArgumentList	& ( out_buff [ out_pos ] )		10486521	1					
ANR	10486631	Argument	& ( out_buff [ out_pos ] )		10486521	0					
ANR	10486632	UnaryOperationExpression	& ( out_buff [ out_pos ] )		10486521	0					
ANR	10486633	UnaryOperator	&		10486521	0					
ANR	10486634	ArrayIndexing	out_buff [ out_pos ]		10486521	1					
ANR	10486635	Identifier	out_buff		10486521	0					
ANR	10486636	Identifier	out_pos		10486521	1					
ANR	10486637	Argument	value		10486521	1					
ANR	10486638	Identifier	value		10486521	0					
ANR	10486639	Argument	1 - hvalue		10486521	2					
ANR	10486640	AdditiveExpression	1 - hvalue		10486521	0		-			
ANR	10486641	PrimaryExpression	1		10486521	0					
ANR	10486642	Identifier	hvalue		10486521	1					
ANR	10486643	ExpressionStatement	in_pos += 2	117:12:3221:3232	10486521	2	True				
ANR	10486644	AssignmentExpression	in_pos += 2		10486521	0		+=			
ANR	10486645	Identifier	in_pos		10486521	0					
ANR	10486646	PrimaryExpression	2		10486521	1					
ANR	10486647	ExpressionStatement	out_pos += ( 1 - hvalue )	118:12:3246:3269	10486521	3	True				
ANR	10486648	AssignmentExpression	out_pos += ( 1 - hvalue )		10486521	0		+=			
ANR	10486649	Identifier	out_pos		10486521	0					
ANR	10486650	AdditiveExpression	1 - hvalue		10486521	1		-			
ANR	10486651	PrimaryExpression	1		10486521	0					
ANR	10486652	Identifier	hvalue		10486521	1					
ANR	10486653	ElseStatement	else		10486521	0					
ANR	10486654	ExpressionStatement	in_pos += 1	121:12:3306:3317	10486521	0	True				
ANR	10486655	AssignmentExpression	in_pos += 1		10486521	0		+=			
ANR	10486656	Identifier	in_pos		10486521	0					
ANR	10486657	PrimaryExpression	1		10486521	1					
ANR	10486658	ReturnType	static void		10486521	1					
ANR	10486659	Identifier	rle_decode		10486521	2					
ANR	10486660	ParameterList	"uchar * in_buff , int in_length , uchar * out_buff , int out_length"		10486521	3					
ANR	10486661	Parameter	uchar * in_buff	94:23:2474:2487	10486521	0	True				
ANR	10486662	ParameterType	uchar *		10486521	0					
ANR	10486663	Identifier	in_buff		10486521	1					
ANR	10486664	Parameter	int in_length	94:39:2490:2502	10486521	1	True				
ANR	10486665	ParameterType	int		10486521	0					
ANR	10486666	Identifier	in_length		10486521	1					
ANR	10486667	Parameter	uchar * out_buff	95:23:2529:2543	10486521	2	True				
ANR	10486668	ParameterType	uchar *		10486521	0					
ANR	10486669	Identifier	out_buff		10486521	1					
ANR	10486670	Parameter	int out_length	95:40:2546:2559	10486521	3	True				
ANR	10486671	ParameterType	int		10486521	0					
ANR	10486672	Identifier	out_length		10486521	1					
ANR	10486673	CFGEntryNode	ENTRY		10486521		True				
ANR	10486674	CFGExitNode	EXIT		10486521		True				
ANR	10486675	Symbol	* in_pos		10486521						
ANR	10486676	Symbol	in_buff		10486521						
ANR	10486677	Symbol	in_length		10486521						
ANR	10486678	Symbol	out_buff		10486521						
ANR	10486679	Symbol	out_length		10486521						
ANR	10486680	Symbol	out_pos		10486521						
ANR	10486681	Symbol	* in_buff		10486521						
ANR	10486682	Symbol	input_buf		10486521						
ANR	10486683	Symbol	hvalue		10486521						
ANR	10486684	Symbol	value		10486521						
ANR	10486685	Symbol	in_pos		10486521						
ANR	10486686	Symbol	* input_buf		10486521						
ANR	10486687	Function	read_psd_line_rle8	126:0:3359:4419							
ANR	10486688	FunctionDef	"read_psd_line_rle8 (ETS_SrcPixel * * ibufs , int xs , FILE * fi , int planes , void * image_ctx)"		10486687	0					
ANR	10486689	CompoundStatement		128:0:3490:4419	10486687	0					
ANR	10486690	IdentifierDeclStatement	int kk ;	129:4:3496:3502	10486687	0	True				
ANR	10486691	IdentifierDecl	kk		10486687	0					
ANR	10486692	IdentifierDeclType	int		10486687	0					
ANR	10486693	Identifier	kk		10486687	1					
ANR	10486694	IdentifierDeclStatement	psd_ctx_t * psd_ctx = ( psd_ctx_t * ) image_ctx ;	130:4:3508:3551	10486687	1	True				
ANR	10486695	IdentifierDecl	* psd_ctx = ( psd_ctx_t * ) image_ctx		10486687	0					
ANR	10486696	IdentifierDeclType	psd_ctx_t *		10486687	0					
ANR	10486697	Identifier	psd_ctx		10486687	1					
ANR	10486698	AssignmentExpression	* psd_ctx = ( psd_ctx_t * ) image_ctx		10486687	2		=			
ANR	10486699	Identifier	psd_ctx		10486687	0					
ANR	10486700	CastExpression	( psd_ctx_t * ) image_ctx		10486687	1					
ANR	10486701	CastTarget	psd_ctx_t *		10486687	0					
ANR	10486702	Identifier	image_ctx		10486687	1					
ANR	10486703	IdentifierDeclStatement	long curr_file_offset ;	131:4:3557:3578	10486687	2	True				
ANR	10486704	IdentifierDecl	curr_file_offset		10486687	0					
ANR	10486705	IdentifierDeclType	long		10486687	0					
ANR	10486706	Identifier	curr_file_offset		10486687	1					
ANR	10486707	IdentifierDeclStatement	int curr_row_length_index ;	132:4:3584:3609	10486687	3	True				
ANR	10486708	IdentifierDecl	curr_row_length_index		10486687	0					
ANR	10486709	IdentifierDeclType	int		10486687	0					
ANR	10486710	Identifier	curr_row_length_index		10486687	1					
ANR	10486711	IdentifierDeclStatement	int curr_length ;	133:4:3615:3630	10486687	4	True				
ANR	10486712	IdentifierDecl	curr_length		10486687	0					
ANR	10486713	IdentifierDeclType	int		10486687	0					
ANR	10486714	Identifier	curr_length		10486687	1					
ANR	10486715	ForStatement	for ( kk = 0 ; kk < planes ; kk ++ )		10486687	5					
ANR	10486716	ForInit	kk = 0 ;	136:9:3676:3682	10486687	0	True				
ANR	10486717	AssignmentExpression	kk = 0		10486687	0		=			
ANR	10486718	Identifier	kk		10486687	0					
ANR	10486719	PrimaryExpression	0		10486687	1					
ANR	10486720	Condition	kk < planes	136:17:3684:3694	10486687	1	True				
ANR	10486721	RelationalExpression	kk < planes		10486687	0		<			
ANR	10486722	Identifier	kk		10486687	0					
ANR	10486723	Identifier	planes		10486687	1					
ANR	10486724	PostIncDecOperationExpression	kk ++	136:30:3697:3700	10486687	2	True				
ANR	10486725	Identifier	kk		10486687	0					
ANR	10486726	IncDec	++		10486687	1					
ANR	10486727	CompoundStatement		10:4:217:217	10486687	3					
ANR	10486728	ExpressionStatement	curr_file_offset = psd_ctx -> band_file_offset [ kk ]	139:8:3779:3827	10486687	0	True				
ANR	10486729	AssignmentExpression	curr_file_offset = psd_ctx -> band_file_offset [ kk ]		10486687	0		=			
ANR	10486730	Identifier	curr_file_offset		10486687	0					
ANR	10486731	ArrayIndexing	psd_ctx -> band_file_offset [ kk ]		10486687	1					
ANR	10486732	PtrMemberAccess	psd_ctx -> band_file_offset		10486687	0					
ANR	10486733	Identifier	psd_ctx		10486687	0					
ANR	10486734	Identifier	band_file_offset		10486687	1					
ANR	10486735	Identifier	kk		10486687	1					
ANR	10486736	ExpressionStatement	curr_row_length_index = psd_ctx -> band_row_length_index [ kk ]	140:8:3837:3895	10486687	1	True				
ANR	10486737	AssignmentExpression	curr_row_length_index = psd_ctx -> band_row_length_index [ kk ]		10486687	0		=			
ANR	10486738	Identifier	curr_row_length_index		10486687	0					
ANR	10486739	ArrayIndexing	psd_ctx -> band_row_length_index [ kk ]		10486687	1					
ANR	10486740	PtrMemberAccess	psd_ctx -> band_row_length_index		10486687	0					
ANR	10486741	Identifier	psd_ctx		10486687	0					
ANR	10486742	Identifier	band_row_length_index		10486687	1					
ANR	10486743	Identifier	kk		10486687	1					
ANR	10486744	ExpressionStatement	curr_length = psd_ctx -> row_lengths [ curr_row_length_index ]	141:8:3905:3962	10486687	2	True				
ANR	10486745	AssignmentExpression	curr_length = psd_ctx -> row_lengths [ curr_row_length_index ]		10486687	0		=			
ANR	10486746	Identifier	curr_length		10486687	0					
ANR	10486747	ArrayIndexing	psd_ctx -> row_lengths [ curr_row_length_index ]		10486687	1					
ANR	10486748	PtrMemberAccess	psd_ctx -> row_lengths		10486687	0					
ANR	10486749	Identifier	psd_ctx		10486687	0					
ANR	10486750	Identifier	row_lengths		10486687	1					
ANR	10486751	Identifier	curr_row_length_index		10486687	1					
ANR	10486752	ExpressionStatement	"fseek ( fi , curr_file_offset , SEEK_SET )"	143:8:4043:4080	10486687	3	True				
ANR	10486753	CallExpression	"fseek ( fi , curr_file_offset , SEEK_SET )"		10486687	0					
ANR	10486754	Callee	fseek		10486687	0					
ANR	10486755	Identifier	fseek		10486687	0					
ANR	10486756	ArgumentList	fi		10486687	1					
ANR	10486757	Argument	fi		10486687	0					
ANR	10486758	Identifier	fi		10486687	0					
ANR	10486759	Argument	curr_file_offset		10486687	1					
ANR	10486760	Identifier	curr_file_offset		10486687	0					
ANR	10486761	Argument	SEEK_SET		10486687	2					
ANR	10486762	Identifier	SEEK_SET		10486687	0					
ANR	10486763	ExpressionStatement	"fread ( psd_ctx -> rle_row , 1 , curr_length , fi )"	144:8:4091:4134	10486687	4	True				
ANR	10486764	CallExpression	"fread ( psd_ctx -> rle_row , 1 , curr_length , fi )"		10486687	0					
ANR	10486765	Callee	fread		10486687	0					
ANR	10486766	Identifier	fread		10486687	0					
ANR	10486767	ArgumentList	psd_ctx -> rle_row		10486687	1					
ANR	10486768	Argument	psd_ctx -> rle_row		10486687	0					
ANR	10486769	PtrMemberAccess	psd_ctx -> rle_row		10486687	0					
ANR	10486770	Identifier	psd_ctx		10486687	0					
ANR	10486771	Identifier	rle_row		10486687	1					
ANR	10486772	Argument	1		10486687	1					
ANR	10486773	PrimaryExpression	1		10486687	0					
ANR	10486774	Argument	curr_length		10486687	2					
ANR	10486775	Identifier	curr_length		10486687	0					
ANR	10486776	Argument	fi		10486687	3					
ANR	10486777	Identifier	fi		10486687	0					
ANR	10486778	ExpressionStatement	"rle_decode ( ( uchar * ) psd_ctx -> rle_row , curr_length , ibufs [ psd_ctx -> permute [ kk ] ] , psd_ctx -> width )"	145:8:4144:4260	10486687	5	True				
ANR	10486779	CallExpression	"rle_decode ( ( uchar * ) psd_ctx -> rle_row , curr_length , ibufs [ psd_ctx -> permute [ kk ] ] , psd_ctx -> width )"		10486687	0					
ANR	10486780	Callee	rle_decode		10486687	0					
ANR	10486781	Identifier	rle_decode		10486687	0					
ANR	10486782	ArgumentList	( uchar * ) psd_ctx -> rle_row		10486687	1					
ANR	10486783	Argument	( uchar * ) psd_ctx -> rle_row		10486687	0					
ANR	10486784	CastExpression	( uchar * ) psd_ctx -> rle_row		10486687	0					
ANR	10486785	CastTarget	uchar *		10486687	0					
ANR	10486786	PtrMemberAccess	psd_ctx -> rle_row		10486687	1					
ANR	10486787	Identifier	psd_ctx		10486687	0					
ANR	10486788	Identifier	rle_row		10486687	1					
ANR	10486789	Argument	curr_length		10486687	1					
ANR	10486790	Identifier	curr_length		10486687	0					
ANR	10486791	Argument	ibufs [ psd_ctx -> permute [ kk ] ]		10486687	2					
ANR	10486792	ArrayIndexing	ibufs [ psd_ctx -> permute [ kk ] ]		10486687	0					
ANR	10486793	Identifier	ibufs		10486687	0					
ANR	10486794	ArrayIndexing	psd_ctx -> permute [ kk ]		10486687	1					
ANR	10486795	PtrMemberAccess	psd_ctx -> permute		10486687	0					
ANR	10486796	Identifier	psd_ctx		10486687	0					
ANR	10486797	Identifier	permute		10486687	1					
ANR	10486798	Identifier	kk		10486687	1					
ANR	10486799	Argument	psd_ctx -> width		10486687	3					
ANR	10486800	PtrMemberAccess	psd_ctx -> width		10486687	0					
ANR	10486801	Identifier	psd_ctx		10486687	0					
ANR	10486802	Identifier	width		10486687	1					
ANR	10486803	ExpressionStatement	psd_ctx -> band_file_offset [ kk ] += curr_length	148:8:4317:4361	10486687	6	True				
ANR	10486804	AssignmentExpression	psd_ctx -> band_file_offset [ kk ] += curr_length		10486687	0		+=			
ANR	10486805	ArrayIndexing	psd_ctx -> band_file_offset [ kk ]		10486687	0					
ANR	10486806	PtrMemberAccess	psd_ctx -> band_file_offset		10486687	0					
ANR	10486807	Identifier	psd_ctx		10486687	0					
ANR	10486808	Identifier	band_file_offset		10486687	1					
ANR	10486809	Identifier	kk		10486687	1					
ANR	10486810	Identifier	curr_length		10486687	1					
ANR	10486811	ExpressionStatement	psd_ctx -> band_row_length_index [ kk ] += 1	149:8:4371:4410	10486687	7	True				
ANR	10486812	AssignmentExpression	psd_ctx -> band_row_length_index [ kk ] += 1		10486687	0		+=			
ANR	10486813	ArrayIndexing	psd_ctx -> band_row_length_index [ kk ]		10486687	0					
ANR	10486814	PtrMemberAccess	psd_ctx -> band_row_length_index		10486687	0					
ANR	10486815	Identifier	psd_ctx		10486687	0					
ANR	10486816	Identifier	band_row_length_index		10486687	1					
ANR	10486817	Identifier	kk		10486687	1					
ANR	10486818	PrimaryExpression	1		10486687	1					
ANR	10486819	ReturnType	static void		10486687	1					
ANR	10486820	Identifier	read_psd_line_rle8		10486687	2					
ANR	10486821	ParameterList	"ETS_SrcPixel * * ibufs , int xs , FILE * fi , int planes , void * image_ctx"		10486687	3					
ANR	10486822	Parameter	ETS_SrcPixel * * ibufs	126:31:3390:3409	10486687	0	True				
ANR	10486823	ParameterType	ETS_SrcPixel * *		10486687	0					
ANR	10486824	Identifier	ibufs		10486687	1					
ANR	10486825	Parameter	int xs	126:53:3412:3417	10486687	1	True				
ANR	10486826	ParameterType	int		10486687	0					
ANR	10486827	Identifier	xs		10486687	1					
ANR	10486828	Parameter	FILE * fi	126:61:3420:3427	10486687	2	True				
ANR	10486829	ParameterType	FILE *		10486687	0					
ANR	10486830	Identifier	fi		10486687	1					
ANR	10486831	Parameter	int planes	126:71:3430:3439	10486687	3	True				
ANR	10486832	ParameterType	int		10486687	0					
ANR	10486833	Identifier	planes		10486687	1					
ANR	10486834	Parameter	void * image_ctx	127:30:3473:3487	10486687	4	True				
ANR	10486835	ParameterType	void *		10486687	0					
ANR	10486836	Identifier	image_ctx		10486687	1					
ANR	10486837	CFGEntryNode	ENTRY		10486687		True				
ANR	10486838	CFGExitNode	EXIT		10486687		True				
ANR	10486839	Symbol	fi		10486687						
ANR	10486840	Symbol	* psd_ctx -> permute		10486687						
ANR	10486841	Symbol	* * psd_ctx		10486687						
ANR	10486842	Symbol	* kk		10486687						
ANR	10486843	Symbol	* psd_ctx -> row_lengths		10486687						
ANR	10486844	Symbol	* ibufs		10486687						
ANR	10486845	Symbol	psd_ctx		10486687						
ANR	10486846	Symbol	psd_ctx -> width		10486687						
ANR	10486847	Symbol	* * kk		10486687						
ANR	10486848	Symbol	curr_row_length_index		10486687						
ANR	10486849	Symbol	* * psd_ctx -> permute		10486687						
ANR	10486850	Symbol	psd_ctx -> rle_row		10486687						
ANR	10486851	Symbol	psd_ctx -> row_lengths		10486687						
ANR	10486852	Symbol	kk		10486687						
ANR	10486853	Symbol	* psd_ctx -> band_row_length_index		10486687						
ANR	10486854	Symbol	SEEK_SET		10486687						
ANR	10486855	Symbol	* curr_row_length_index		10486687						
ANR	10486856	Symbol	psd_ctx -> band_row_length_index		10486687						
ANR	10486857	Symbol	planes		10486687						
ANR	10486858	Symbol	psd_ctx -> permute		10486687						
ANR	10486859	Symbol	* * * psd_ctx		10486687						
ANR	10486860	Symbol	curr_length		10486687						
ANR	10486861	Symbol	image_ctx		10486687						
ANR	10486862	Symbol	* psd_ctx -> band_file_offset		10486687						
ANR	10486863	Symbol	* psd_ctx		10486687						
ANR	10486864	Symbol	xs		10486687						
ANR	10486865	Symbol	psd_ctx -> band_file_offset		10486687						
ANR	10486866	Symbol	ibufs		10486687						
ANR	10486867	Symbol	curr_file_offset		10486687						
ANR	10486868	Function	read_psd_line8	154:0:4459:5194							
ANR	10486869	FunctionDef	"read_psd_line8 (ETS_SrcPixel * * ibufs , int xs , FILE * fi , int planes , void * image_ctx)"		10486868	0					
ANR	10486870	CompoundStatement		156:0:4581:5194	10486868	0					
ANR	10486871	IdentifierDeclStatement	int kk ;	157:4:4587:4593	10486868	0	True				
ANR	10486872	IdentifierDecl	kk		10486868	0					
ANR	10486873	IdentifierDeclType	int		10486868	0					
ANR	10486874	Identifier	kk		10486868	1					
ANR	10486875	IdentifierDeclStatement	psd_ctx_t * psd_ctx = ( psd_ctx_t * ) image_ctx ;	158:4:4599:4642	10486868	1	True				
ANR	10486876	IdentifierDecl	* psd_ctx = ( psd_ctx_t * ) image_ctx		10486868	0					
ANR	10486877	IdentifierDeclType	psd_ctx_t *		10486868	0					
ANR	10486878	Identifier	psd_ctx		10486868	1					
ANR	10486879	AssignmentExpression	* psd_ctx = ( psd_ctx_t * ) image_ctx		10486868	2		=			
ANR	10486880	Identifier	psd_ctx		10486868	0					
ANR	10486881	CastExpression	( psd_ctx_t * ) image_ctx		10486868	1					
ANR	10486882	CastTarget	psd_ctx_t *		10486868	0					
ANR	10486883	Identifier	image_ctx		10486868	1					
ANR	10486884	IdentifierDeclStatement	long curr_file_offset ;	159:4:4648:4669	10486868	2	True				
ANR	10486885	IdentifierDecl	curr_file_offset		10486868	0					
ANR	10486886	IdentifierDeclType	long		10486868	0					
ANR	10486887	Identifier	curr_file_offset		10486868	1					
ANR	10486888	IdentifierDeclStatement	int curr_length = psd_ctx -> width ;	160:4:4675:4707	10486868	3	True				
ANR	10486889	IdentifierDecl	curr_length = psd_ctx -> width		10486868	0					
ANR	10486890	IdentifierDeclType	int		10486868	0					
ANR	10486891	Identifier	curr_length		10486868	1					
ANR	10486892	AssignmentExpression	curr_length = psd_ctx -> width		10486868	2		=			
ANR	10486893	Identifier	curr_length		10486868	0					
ANR	10486894	PtrMemberAccess	psd_ctx -> width		10486868	1					
ANR	10486895	Identifier	psd_ctx		10486868	0					
ANR	10486896	Identifier	width		10486868	1					
ANR	10486897	ForStatement	for ( kk = 0 ; kk < planes ; kk ++ )		10486868	4					
ANR	10486898	ForInit	kk = 0 ;	163:9:4751:4757	10486868	0	True				
ANR	10486899	AssignmentExpression	kk = 0		10486868	0		=			
ANR	10486900	Identifier	kk		10486868	0					
ANR	10486901	PrimaryExpression	0		10486868	1					
ANR	10486902	Condition	kk < planes	163:17:4759:4769	10486868	1	True				
ANR	10486903	RelationalExpression	kk < planes		10486868	0		<			
ANR	10486904	Identifier	kk		10486868	0					
ANR	10486905	Identifier	planes		10486868	1					
ANR	10486906	PostIncDecOperationExpression	kk ++	163:30:4772:4775	10486868	2	True				
ANR	10486907	Identifier	kk		10486868	0					
ANR	10486908	IncDec	++		10486868	1					
ANR	10486909	CompoundStatement		9:4:201:201	10486868	3					
ANR	10486910	ExpressionStatement	curr_file_offset = psd_ctx -> band_file_offset [ kk ]	166:8:4854:4902	10486868	0	True				
ANR	10486911	AssignmentExpression	curr_file_offset = psd_ctx -> band_file_offset [ kk ]		10486868	0		=			
ANR	10486912	Identifier	curr_file_offset		10486868	0					
ANR	10486913	ArrayIndexing	psd_ctx -> band_file_offset [ kk ]		10486868	1					
ANR	10486914	PtrMemberAccess	psd_ctx -> band_file_offset		10486868	0					
ANR	10486915	Identifier	psd_ctx		10486868	0					
ANR	10486916	Identifier	band_file_offset		10486868	1					
ANR	10486917	Identifier	kk		10486868	1					
ANR	10486918	ExpressionStatement	"fseek ( fi , curr_file_offset , SEEK_SET )"	168:8:4983:5020	10486868	1	True				
ANR	10486919	CallExpression	"fseek ( fi , curr_file_offset , SEEK_SET )"		10486868	0					
ANR	10486920	Callee	fseek		10486868	0					
ANR	10486921	Identifier	fseek		10486868	0					
ANR	10486922	ArgumentList	fi		10486868	1					
ANR	10486923	Argument	fi		10486868	0					
ANR	10486924	Identifier	fi		10486868	0					
ANR	10486925	Argument	curr_file_offset		10486868	1					
ANR	10486926	Identifier	curr_file_offset		10486868	0					
ANR	10486927	Argument	SEEK_SET		10486868	2					
ANR	10486928	Identifier	SEEK_SET		10486868	0					
ANR	10486929	ExpressionStatement	"fread ( ibufs [ psd_ctx -> permute [ kk ] ] , 1 , curr_length , fi )"	169:8:5031:5085	10486868	2	True				
ANR	10486930	CallExpression	"fread ( ibufs [ psd_ctx -> permute [ kk ] ] , 1 , curr_length , fi )"		10486868	0					
ANR	10486931	Callee	fread		10486868	0					
ANR	10486932	Identifier	fread		10486868	0					
ANR	10486933	ArgumentList	ibufs [ psd_ctx -> permute [ kk ] ]		10486868	1					
ANR	10486934	Argument	ibufs [ psd_ctx -> permute [ kk ] ]		10486868	0					
ANR	10486935	ArrayIndexing	ibufs [ psd_ctx -> permute [ kk ] ]		10486868	0					
ANR	10486936	Identifier	ibufs		10486868	0					
ANR	10486937	ArrayIndexing	psd_ctx -> permute [ kk ]		10486868	1					
ANR	10486938	PtrMemberAccess	psd_ctx -> permute		10486868	0					
ANR	10486939	Identifier	psd_ctx		10486868	0					
ANR	10486940	Identifier	permute		10486868	1					
ANR	10486941	Identifier	kk		10486868	1					
ANR	10486942	Argument	1		10486868	1					
ANR	10486943	PrimaryExpression	1		10486868	0					
ANR	10486944	Argument	curr_length		10486868	2					
ANR	10486945	Identifier	curr_length		10486868	0					
ANR	10486946	Argument	fi		10486868	3					
ANR	10486947	Identifier	fi		10486868	0					
ANR	10486948	ExpressionStatement	psd_ctx -> band_file_offset [ kk ] += curr_length	171:8:5142:5186	10486868	3	True				
ANR	10486949	AssignmentExpression	psd_ctx -> band_file_offset [ kk ] += curr_length		10486868	0		+=			
ANR	10486950	ArrayIndexing	psd_ctx -> band_file_offset [ kk ]		10486868	0					
ANR	10486951	PtrMemberAccess	psd_ctx -> band_file_offset		10486868	0					
ANR	10486952	Identifier	psd_ctx		10486868	0					
ANR	10486953	Identifier	band_file_offset		10486868	1					
ANR	10486954	Identifier	kk		10486868	1					
ANR	10486955	Identifier	curr_length		10486868	1					
ANR	10486956	ReturnType	static void		10486868	1					
ANR	10486957	Identifier	read_psd_line8		10486868	2					
ANR	10486958	ParameterList	"ETS_SrcPixel * * ibufs , int xs , FILE * fi , int planes , void * image_ctx"		10486868	3					
ANR	10486959	Parameter	ETS_SrcPixel * * ibufs	154:27:4486:4505	10486868	0	True				
ANR	10486960	ParameterType	ETS_SrcPixel * *		10486868	0					
ANR	10486961	Identifier	ibufs		10486868	1					
ANR	10486962	Parameter	int xs	154:49:4508:4513	10486868	1	True				
ANR	10486963	ParameterType	int		10486868	0					
ANR	10486964	Identifier	xs		10486868	1					
ANR	10486965	Parameter	FILE * fi	154:57:4516:4523	10486868	2	True				
ANR	10486966	ParameterType	FILE *		10486868	0					
ANR	10486967	Identifier	fi		10486868	1					
ANR	10486968	Parameter	int planes	154:67:4526:4535	10486868	3	True				
ANR	10486969	ParameterType	int		10486868	0					
ANR	10486970	Identifier	planes		10486868	1					
ANR	10486971	Parameter	void * image_ctx	155:26:4564:4578	10486868	4	True				
ANR	10486972	ParameterType	void *		10486868	0					
ANR	10486973	Identifier	image_ctx		10486868	1					
ANR	10486974	CFGEntryNode	ENTRY		10486868		True				
ANR	10486975	CFGExitNode	EXIT		10486868		True				
ANR	10486976	Symbol	kk		10486868						
ANR	10486977	Symbol	SEEK_SET		10486868						
ANR	10486978	Symbol	fi		10486868						
ANR	10486979	Symbol	* psd_ctx -> permute		10486868						
ANR	10486980	Symbol	* kk		10486868						
ANR	10486981	Symbol	* * psd_ctx		10486868						
ANR	10486982	Symbol	* ibufs		10486868						
ANR	10486983	Symbol	planes		10486868						
ANR	10486984	Symbol	psd_ctx -> permute		10486868						
ANR	10486985	Symbol	* * * psd_ctx		10486868						
ANR	10486986	Symbol	psd_ctx		10486868						
ANR	10486987	Symbol	curr_length		10486868						
ANR	10486988	Symbol	psd_ctx -> width		10486868						
ANR	10486989	Symbol	image_ctx		10486868						
ANR	10486990	Symbol	* * kk		10486868						
ANR	10486991	Symbol	* psd_ctx -> band_file_offset		10486868						
ANR	10486992	Symbol	* * psd_ctx -> permute		10486868						
ANR	10486993	Symbol	* psd_ctx		10486868						
ANR	10486994	Symbol	xs		10486868						
ANR	10486995	Symbol	psd_ctx -> band_file_offset		10486868						
ANR	10486996	Symbol	ibufs		10486868						
ANR	10486997	Symbol	curr_file_offset		10486868						
ANR	10486998	Function	write_psd_line8	178:0:5378:6191							
ANR	10486999	FunctionDef	"write_psd_line8 (uchar * * obufs , int xs , FILE * fo , int planes , void * image_ctx)"		10486998	0					
ANR	10487000	CompoundStatement		180:0:5495:6191	10486998	0					
ANR	10487001	IdentifierDeclStatement	int kk ;	181:4:5501:5507	10486998	0	True				
ANR	10487002	IdentifierDecl	kk		10486998	0					
ANR	10487003	IdentifierDeclType	int		10486998	0					
ANR	10487004	Identifier	kk		10486998	1					
ANR	10487005	IdentifierDeclStatement	psd_ctx_t * psd_ctx = ( psd_ctx_t * ) image_ctx ;	182:4:5513:5556	10486998	1	True				
ANR	10487006	IdentifierDecl	* psd_ctx = ( psd_ctx_t * ) image_ctx		10486998	0					
ANR	10487007	IdentifierDeclType	psd_ctx_t *		10486998	0					
ANR	10487008	Identifier	psd_ctx		10486998	1					
ANR	10487009	AssignmentExpression	* psd_ctx = ( psd_ctx_t * ) image_ctx		10486998	2		=			
ANR	10487010	Identifier	psd_ctx		10486998	0					
ANR	10487011	CastExpression	( psd_ctx_t * ) image_ctx		10486998	1					
ANR	10487012	CastTarget	psd_ctx_t *		10486998	0					
ANR	10487013	Identifier	image_ctx		10486998	1					
ANR	10487014	IdentifierDeclStatement	const void * input_buf ;	183:4:5562:5583	10486998	2	True				
ANR	10487015	IdentifierDecl	* input_buf		10486998	0					
ANR	10487016	IdentifierDeclType	const void *		10486998	0					
ANR	10487017	Identifier	input_buf		10486998	1					
ANR	10487018	IdentifierDeclStatement	uchar * output_buff = ( uchar * ) psd_ctx -> output_buffer ;	184:4:5589:5641	10486998	3	True				
ANR	10487019	IdentifierDecl	* output_buff = ( uchar * ) psd_ctx -> output_buffer		10486998	0					
ANR	10487020	IdentifierDeclType	uchar *		10486998	0					
ANR	10487021	Identifier	output_buff		10486998	1					
ANR	10487022	AssignmentExpression	* output_buff = ( uchar * ) psd_ctx -> output_buffer		10486998	2		=			
ANR	10487023	Identifier	output_buff		10486998	0					
ANR	10487024	CastExpression	( uchar * ) psd_ctx -> output_buffer		10486998	1					
ANR	10487025	CastTarget	uchar *		10486998	0					
ANR	10487026	PtrMemberAccess	psd_ctx -> output_buffer		10486998	1					
ANR	10487027	Identifier	psd_ctx		10486998	0					
ANR	10487028	Identifier	output_buffer		10486998	1					
ANR	10487029	IdentifierDeclStatement	long plane_size = ( psd_ctx -> width ) * ( psd_ctx -> height ) ;	185:4:5647:5701	10486998	4	True				
ANR	10487030	IdentifierDecl	plane_size = ( psd_ctx -> width ) * ( psd_ctx -> height )		10486998	0					
ANR	10487031	IdentifierDeclType	long		10486998	0					
ANR	10487032	Identifier	plane_size		10486998	1					
ANR	10487033	AssignmentExpression	plane_size = ( psd_ctx -> width ) * ( psd_ctx -> height )		10486998	2		=			
ANR	10487034	Identifier	plane_size		10486998	0					
ANR	10487035	MultiplicativeExpression	( psd_ctx -> width ) * ( psd_ctx -> height )		10486998	1		*			
ANR	10487036	PtrMemberAccess	psd_ctx -> width		10486998	0					
ANR	10487037	Identifier	psd_ctx		10486998	0					
ANR	10487038	Identifier	width		10486998	1					
ANR	10487039	PtrMemberAccess	psd_ctx -> height		10486998	1					
ANR	10487040	Identifier	psd_ctx		10486998	0					
ANR	10487041	Identifier	height		10486998	1					
ANR	10487042	IdentifierDeclStatement	long buffer_size = plane_size * planes ;	186:4:5707:5745	10486998	5	True				
ANR	10487043	IdentifierDecl	buffer_size = plane_size * planes		10486998	0					
ANR	10487044	IdentifierDeclType	long		10486998	0					
ANR	10487045	Identifier	buffer_size		10486998	1					
ANR	10487046	AssignmentExpression	buffer_size = plane_size * planes		10486998	2		=			
ANR	10487047	Identifier	buffer_size		10486998	0					
ANR	10487048	MultiplicativeExpression	plane_size * planes		10486998	1		*			
ANR	10487049	Identifier	plane_size		10486998	0					
ANR	10487050	Identifier	planes		10486998	1					
ANR	10487051	ExpressionStatement	output_buff += ( ( psd_ctx -> curr_row ) * ( psd_ctx -> width ) )	188:4:5756:5811	10486998	6	True				
ANR	10487052	AssignmentExpression	output_buff += ( ( psd_ctx -> curr_row ) * ( psd_ctx -> width ) )		10486998	0		+=			
ANR	10487053	Identifier	output_buff		10486998	0					
ANR	10487054	MultiplicativeExpression	( psd_ctx -> curr_row ) * ( psd_ctx -> width )		10486998	1		*			
ANR	10487055	PtrMemberAccess	psd_ctx -> curr_row		10486998	0					
ANR	10487056	Identifier	psd_ctx		10486998	0					
ANR	10487057	Identifier	curr_row		10486998	1					
ANR	10487058	PtrMemberAccess	psd_ctx -> width		10486998	1					
ANR	10487059	Identifier	psd_ctx		10486998	0					
ANR	10487060	Identifier	width		10486998	1					
ANR	10487061	ForStatement	for ( kk = 0 ; kk < planes ; kk ++ )		10486998	7					
ANR	10487062	ForInit	kk = 0 ;	189:9:5822:5828	10486998	0	True				
ANR	10487063	AssignmentExpression	kk = 0		10486998	0		=			
ANR	10487064	Identifier	kk		10486998	0					
ANR	10487065	PrimaryExpression	0		10486998	1					
ANR	10487066	Condition	kk < planes	189:17:5830:5840	10486998	1	True				
ANR	10487067	RelationalExpression	kk < planes		10486998	0		<			
ANR	10487068	Identifier	kk		10486998	0					
ANR	10487069	Identifier	planes		10486998	1					
ANR	10487070	PostIncDecOperationExpression	kk ++	189:30:5843:5846	10486998	2	True				
ANR	10487071	Identifier	kk		10486998	0					
ANR	10487072	IncDec	++		10486998	1					
ANR	10487073	CompoundStatement		11:4:357:357	10486998	3					
ANR	10487074	ExpressionStatement	input_buf = ( const void * ) obufs [ psd_ctx -> permute [ kk ] ]	191:8:5863:5916	10486998	0	True				
ANR	10487075	AssignmentExpression	input_buf = ( const void * ) obufs [ psd_ctx -> permute [ kk ] ]		10486998	0		=			
ANR	10487076	Identifier	input_buf		10486998	0					
ANR	10487077	CastExpression	( const void * ) obufs [ psd_ctx -> permute [ kk ] ]		10486998	1					
ANR	10487078	CastTarget	const void *		10486998	0					
ANR	10487079	ArrayIndexing	obufs [ psd_ctx -> permute [ kk ] ]		10486998	1					
ANR	10487080	Identifier	obufs		10486998	0					
ANR	10487081	ArrayIndexing	psd_ctx -> permute [ kk ]		10486998	1					
ANR	10487082	PtrMemberAccess	psd_ctx -> permute		10486998	0					
ANR	10487083	Identifier	psd_ctx		10486998	0					
ANR	10487084	Identifier	permute		10486998	1					
ANR	10487085	Identifier	kk		10486998	1					
ANR	10487086	ExpressionStatement	"memcpy ( output_buff , input_buf , psd_ctx -> width )"	192:8:5926:5972	10486998	1	True				
ANR	10487087	CallExpression	"memcpy ( output_buff , input_buf , psd_ctx -> width )"		10486998	0					
ANR	10487088	Callee	memcpy		10486998	0					
ANR	10487089	Identifier	memcpy		10486998	0					
ANR	10487090	ArgumentList	output_buff		10486998	1					
ANR	10487091	Argument	output_buff		10486998	0					
ANR	10487092	Identifier	output_buff		10486998	0					
ANR	10487093	Argument	input_buf		10486998	1					
ANR	10487094	Identifier	input_buf		10486998	0					
ANR	10487095	Argument	psd_ctx -> width		10486998	2					
ANR	10487096	PtrMemberAccess	psd_ctx -> width		10486998	0					
ANR	10487097	Identifier	psd_ctx		10486998	0					
ANR	10487098	Identifier	width		10486998	1					
ANR	10487099	ExpressionStatement	output_buff += plane_size	193:8:5982:6007	10486998	2	True				
ANR	10487100	AssignmentExpression	output_buff += plane_size		10486998	0		+=			
ANR	10487101	Identifier	output_buff		10486998	0					
ANR	10487102	Identifier	plane_size		10486998	1					
ANR	10487103	ExpressionStatement	psd_ctx -> curr_row += 1	195:4:6019:6041	10486998	8	True				
ANR	10487104	AssignmentExpression	psd_ctx -> curr_row += 1		10486998	0		+=			
ANR	10487105	PtrMemberAccess	psd_ctx -> curr_row		10486998	0					
ANR	10487106	Identifier	psd_ctx		10486998	0					
ANR	10487107	Identifier	curr_row		10486998	1					
ANR	10487108	PrimaryExpression	1		10486998	1					
ANR	10487109	IfStatement	if ( psd_ctx -> curr_row == psd_ctx -> height )		10486998	9					
ANR	10487110	Condition	psd_ctx -> curr_row == psd_ctx -> height	197:8:6093:6128	10486998	0	True				
ANR	10487111	EqualityExpression	psd_ctx -> curr_row == psd_ctx -> height		10486998	0		==			
ANR	10487112	PtrMemberAccess	psd_ctx -> curr_row		10486998	0					
ANR	10487113	Identifier	psd_ctx		10486998	0					
ANR	10487114	Identifier	curr_row		10486998	1					
ANR	10487115	PtrMemberAccess	psd_ctx -> height		10486998	1					
ANR	10487116	Identifier	psd_ctx		10486998	0					
ANR	10487117	Identifier	height		10486998	1					
ANR	10487118	ExpressionStatement	"fwrite ( psd_ctx -> output_buffer , 1 , buffer_size , fo )"	198:8:6139:6189	10486998	1	True				
ANR	10487119	CallExpression	"fwrite ( psd_ctx -> output_buffer , 1 , buffer_size , fo )"		10486998	0					
ANR	10487120	Callee	fwrite		10486998	0					
ANR	10487121	Identifier	fwrite		10486998	0					
ANR	10487122	ArgumentList	psd_ctx -> output_buffer		10486998	1					
ANR	10487123	Argument	psd_ctx -> output_buffer		10486998	0					
ANR	10487124	PtrMemberAccess	psd_ctx -> output_buffer		10486998	0					
ANR	10487125	Identifier	psd_ctx		10486998	0					
ANR	10487126	Identifier	output_buffer		10486998	1					
ANR	10487127	Argument	1		10486998	1					
ANR	10487128	PrimaryExpression	1		10486998	0					
ANR	10487129	Argument	buffer_size		10486998	2					
ANR	10487130	Identifier	buffer_size		10486998	0					
ANR	10487131	Argument	fo		10486998	3					
ANR	10487132	Identifier	fo		10486998	0					
ANR	10487133	ReturnType	static void		10486998	1					
ANR	10487134	Identifier	write_psd_line8		10486998	2					
ANR	10487135	ParameterList	"uchar * * obufs , int xs , FILE * fo , int planes , void * image_ctx"		10486998	3					
ANR	10487136	Parameter	uchar * * obufs	178:28:5406:5418	10486998	0	True				
ANR	10487137	ParameterType	uchar * *		10486998	0					
ANR	10487138	Identifier	obufs		10486998	1					
ANR	10487139	Parameter	int xs	178:43:5421:5426	10486998	1	True				
ANR	10487140	ParameterType	int		10486998	0					
ANR	10487141	Identifier	xs		10486998	1					
ANR	10487142	Parameter	FILE * fo	178:51:5429:5436	10486998	2	True				
ANR	10487143	ParameterType	FILE *		10486998	0					
ANR	10487144	Identifier	fo		10486998	1					
ANR	10487145	Parameter	int planes	178:61:5439:5448	10486998	3	True				
ANR	10487146	ParameterType	int		10486998	0					
ANR	10487147	Identifier	planes		10486998	1					
ANR	10487148	Parameter	void * image_ctx	179:27:5478:5492	10486998	4	True				
ANR	10487149	ParameterType	void *		10486998	0					
ANR	10487150	Identifier	image_ctx		10486998	1					
ANR	10487151	CFGEntryNode	ENTRY		10486998		True				
ANR	10487152	CFGExitNode	EXIT		10486998		True				
ANR	10487153	Symbol	kk		10486998						
ANR	10487154	Symbol	* psd_ctx -> permute		10486998						
ANR	10487155	Symbol	obufs		10486998						
ANR	10487156	Symbol	output_buff		10486998						
ANR	10487157	Symbol	* kk		10486998						
ANR	10487158	Symbol	* * psd_ctx		10486998						
ANR	10487159	Symbol	buffer_size		10486998						
ANR	10487160	Symbol	psd_ctx -> height		10486998						
ANR	10487161	Symbol	fo		10486998						
ANR	10487162	Symbol	planes		10486998						
ANR	10487163	Symbol	psd_ctx -> permute		10486998						
ANR	10487164	Symbol	* * * psd_ctx		10486998						
ANR	10487165	Symbol	psd_ctx		10486998						
ANR	10487166	Symbol	plane_size		10486998						
ANR	10487167	Symbol	psd_ctx -> width		10486998						
ANR	10487168	Symbol	image_ctx		10486998						
ANR	10487169	Symbol	* * kk		10486998						
ANR	10487170	Symbol	* obufs		10486998						
ANR	10487171	Symbol	* * psd_ctx -> permute		10486998						
ANR	10487172	Symbol	* psd_ctx		10486998						
ANR	10487173	Symbol	psd_ctx -> curr_row		10486998						
ANR	10487174	Symbol	psd_ctx -> output_buffer		10486998						
ANR	10487175	Symbol	xs		10486998						
ANR	10487176	Symbol	input_buf		10486998						
ANR	10487177	Function	read_psd_line16	202:0:6232:7324							
ANR	10487178	FunctionDef	"read_psd_line16 (ETS_SrcPixel * * ibufs , int xs , FILE * fi , int planes , void * image_ctx)"		10487177	0					
ANR	10487179	CompoundStatement		204:0:6355:7324	10487177	0					
ANR	10487180	IdentifierDeclStatement	int kk ;	205:4:6361:6367	10487177	0	True				
ANR	10487181	IdentifierDecl	kk		10487177	0					
ANR	10487182	IdentifierDeclType	int		10487177	0					
ANR	10487183	Identifier	kk		10487177	1					
ANR	10487184	IdentifierDeclStatement	psd_ctx_t * psd_ctx = ( psd_ctx_t * ) image_ctx ;	206:4:6373:6416	10487177	1	True				
ANR	10487185	IdentifierDecl	* psd_ctx = ( psd_ctx_t * ) image_ctx		10487177	0					
ANR	10487186	IdentifierDeclType	psd_ctx_t *		10487177	0					
ANR	10487187	Identifier	psd_ctx		10487177	1					
ANR	10487188	AssignmentExpression	* psd_ctx = ( psd_ctx_t * ) image_ctx		10487177	2		=			
ANR	10487189	Identifier	psd_ctx		10487177	0					
ANR	10487190	CastExpression	( psd_ctx_t * ) image_ctx		10487177	1					
ANR	10487191	CastTarget	psd_ctx_t *		10487177	0					
ANR	10487192	Identifier	image_ctx		10487177	1					
ANR	10487193	IdentifierDeclStatement	long curr_file_offset ;	207:4:6422:6443	10487177	2	True				
ANR	10487194	IdentifierDecl	curr_file_offset		10487177	0					
ANR	10487195	IdentifierDeclType	long		10487177	0					
ANR	10487196	Identifier	curr_file_offset		10487177	1					
ANR	10487197	IdentifierDeclStatement	int curr_length = psd_ctx -> width * 2 ;	208:4:6449:6485	10487177	3	True				
ANR	10487198	IdentifierDecl	curr_length = psd_ctx -> width * 2		10487177	0					
ANR	10487199	IdentifierDeclType	int		10487177	0					
ANR	10487200	Identifier	curr_length		10487177	1					
ANR	10487201	AssignmentExpression	curr_length = psd_ctx -> width * 2		10487177	2		=			
ANR	10487202	Identifier	curr_length		10487177	0					
ANR	10487203	MultiplicativeExpression	psd_ctx -> width * 2		10487177	1		*			
ANR	10487204	PtrMemberAccess	psd_ctx -> width		10487177	0					
ANR	10487205	Identifier	psd_ctx		10487177	0					
ANR	10487206	Identifier	width		10487177	1					
ANR	10487207	PrimaryExpression	2		10487177	1					
ANR	10487208	IdentifierDeclStatement	int i ;	209:4:6491:6496	10487177	4	True				
ANR	10487209	IdentifierDecl	i		10487177	0					
ANR	10487210	IdentifierDeclType	int		10487177	0					
ANR	10487211	Identifier	i		10487177	1					
ANR	10487212	IdentifierDeclStatement	"unsigned short temp_value1 , temp_value2 ;"	210:4:6502:6541	10487177	5	True				
ANR	10487213	IdentifierDecl	temp_value1		10487177	0					
ANR	10487214	IdentifierDeclType	unsigned short		10487177	0					
ANR	10487215	Identifier	temp_value1		10487177	1					
ANR	10487216	IdentifierDecl	temp_value2		10487177	1					
ANR	10487217	IdentifierDeclType	unsigned short		10487177	0					
ANR	10487218	Identifier	temp_value2		10487177	1					
ANR	10487219	ForStatement	for ( kk = 0 ; kk < planes ; kk ++ )		10487177	6					
ANR	10487220	ForInit	kk = 0 ;	213:9:6585:6591	10487177	0	True				
ANR	10487221	AssignmentExpression	kk = 0		10487177	0		=			
ANR	10487222	Identifier	kk		10487177	0					
ANR	10487223	PrimaryExpression	0		10487177	1					
ANR	10487224	Condition	kk < planes	213:17:6593:6603	10487177	1	True				
ANR	10487225	RelationalExpression	kk < planes		10487177	0		<			
ANR	10487226	Identifier	kk		10487177	0					
ANR	10487227	Identifier	planes		10487177	1					
ANR	10487228	PostIncDecOperationExpression	kk ++	213:30:6606:6609	10487177	2	True				
ANR	10487229	Identifier	kk		10487177	0					
ANR	10487230	IncDec	++		10487177	1					
ANR	10487231	CompoundStatement		11:4:261:261	10487177	3					
ANR	10487232	ExpressionStatement	curr_file_offset = psd_ctx -> band_file_offset [ kk ]	216:8:6688:6736	10487177	0	True				
ANR	10487233	AssignmentExpression	curr_file_offset = psd_ctx -> band_file_offset [ kk ]		10487177	0		=			
ANR	10487234	Identifier	curr_file_offset		10487177	0					
ANR	10487235	ArrayIndexing	psd_ctx -> band_file_offset [ kk ]		10487177	1					
ANR	10487236	PtrMemberAccess	psd_ctx -> band_file_offset		10487177	0					
ANR	10487237	Identifier	psd_ctx		10487177	0					
ANR	10487238	Identifier	band_file_offset		10487177	1					
ANR	10487239	Identifier	kk		10487177	1					
ANR	10487240	ExpressionStatement	"fseek ( fi , curr_file_offset , SEEK_SET )"	218:8:6817:6854	10487177	1	True				
ANR	10487241	CallExpression	"fseek ( fi , curr_file_offset , SEEK_SET )"		10487177	0					
ANR	10487242	Callee	fseek		10487177	0					
ANR	10487243	Identifier	fseek		10487177	0					
ANR	10487244	ArgumentList	fi		10487177	1					
ANR	10487245	Argument	fi		10487177	0					
ANR	10487246	Identifier	fi		10487177	0					
ANR	10487247	Argument	curr_file_offset		10487177	1					
ANR	10487248	Identifier	curr_file_offset		10487177	0					
ANR	10487249	Argument	SEEK_SET		10487177	2					
ANR	10487250	Identifier	SEEK_SET		10487177	0					
ANR	10487251	ExpressionStatement	"fread ( ibufs [ psd_ctx -> permute [ kk ] ] , 1 , curr_length , fi )"	219:8:6865:6919	10487177	2	True				
ANR	10487252	CallExpression	"fread ( ibufs [ psd_ctx -> permute [ kk ] ] , 1 , curr_length , fi )"		10487177	0					
ANR	10487253	Callee	fread		10487177	0					
ANR	10487254	Identifier	fread		10487177	0					
ANR	10487255	ArgumentList	ibufs [ psd_ctx -> permute [ kk ] ]		10487177	1					
ANR	10487256	Argument	ibufs [ psd_ctx -> permute [ kk ] ]		10487177	0					
ANR	10487257	ArrayIndexing	ibufs [ psd_ctx -> permute [ kk ] ]		10487177	0					
ANR	10487258	Identifier	ibufs		10487177	0					
ANR	10487259	ArrayIndexing	psd_ctx -> permute [ kk ]		10487177	1					
ANR	10487260	PtrMemberAccess	psd_ctx -> permute		10487177	0					
ANR	10487261	Identifier	psd_ctx		10487177	0					
ANR	10487262	Identifier	permute		10487177	1					
ANR	10487263	Identifier	kk		10487177	1					
ANR	10487264	Argument	1		10487177	1					
ANR	10487265	PrimaryExpression	1		10487177	0					
ANR	10487266	Argument	curr_length		10487177	2					
ANR	10487267	Identifier	curr_length		10487177	0					
ANR	10487268	Argument	fi		10487177	3					
ANR	10487269	Identifier	fi		10487177	0					
ANR	10487270	ForStatement	for ( i = 0 ; i < psd_ctx -> width ; i ++ )		10487177	3					
ANR	10487271	ForInit	i = 0 ;	221:13:6955:6960	10487177	0	True				
ANR	10487272	AssignmentExpression	i = 0		10487177	0		=			
ANR	10487273	Identifier	i		10487177	0					
ANR	10487274	PrimaryExpression	0		10487177	1					
ANR	10487275	Condition	i < psd_ctx -> width	221:20:6962:6979	10487177	1	True				
ANR	10487276	RelationalExpression	i < psd_ctx -> width		10487177	0		<			
ANR	10487277	Identifier	i		10487177	0					
ANR	10487278	PtrMemberAccess	psd_ctx -> width		10487177	1					
ANR	10487279	Identifier	psd_ctx		10487177	0					
ANR	10487280	Identifier	width		10487177	1					
ANR	10487281	PostIncDecOperationExpression	i ++	221:40:6982:6984	10487177	2	True				
ANR	10487282	Identifier	i		10487177	0					
ANR	10487283	IncDec	++		10487177	1					
ANR	10487284	CompoundStatement		19:8:639:639	10487177	3					
ANR	10487285	ExpressionStatement	temp_value1 = ibufs [ psd_ctx -> permute [ kk ] ] [ i ]	223:12:7009:7053	10487177	0	True				
ANR	10487286	AssignmentExpression	temp_value1 = ibufs [ psd_ctx -> permute [ kk ] ] [ i ]		10487177	0		=			
ANR	10487287	Identifier	temp_value1		10487177	0					
ANR	10487288	ArrayIndexing	ibufs [ psd_ctx -> permute [ kk ] ] [ i ]		10487177	1					
ANR	10487289	ArrayIndexing	ibufs [ psd_ctx -> permute [ kk ] ]		10487177	0					
ANR	10487290	Identifier	ibufs		10487177	0					
ANR	10487291	ArrayIndexing	psd_ctx -> permute [ kk ]		10487177	1					
ANR	10487292	PtrMemberAccess	psd_ctx -> permute		10487177	0					
ANR	10487293	Identifier	psd_ctx		10487177	0					
ANR	10487294	Identifier	permute		10487177	1					
ANR	10487295	Identifier	kk		10487177	1					
ANR	10487296	Identifier	i		10487177	1					
ANR	10487297	ExpressionStatement	temp_value2 = ( ( temp_value1 & 0xff ) << 8 ) + ( ( temp_value1 & 0xff00 ) >> 8 )	224:12:7067:7140	10487177	1	True				
ANR	10487298	AssignmentExpression	temp_value2 = ( ( temp_value1 & 0xff ) << 8 ) + ( ( temp_value1 & 0xff00 ) >> 8 )		10487177	0		=			
ANR	10487299	Identifier	temp_value2		10487177	0					
ANR	10487300	AdditiveExpression	( ( temp_value1 & 0xff ) << 8 ) + ( ( temp_value1 & 0xff00 ) >> 8 )		10487177	1		+			
ANR	10487301	ShiftExpression	( temp_value1 & 0xff ) << 8		10487177	0		<<			
ANR	10487302	BitAndExpression	temp_value1 & 0xff		10487177	0		&			
ANR	10487303	Identifier	temp_value1		10487177	0					
ANR	10487304	PrimaryExpression	0xff		10487177	1					
ANR	10487305	PrimaryExpression	8		10487177	1					
ANR	10487306	ShiftExpression	( temp_value1 & 0xff00 ) >> 8		10487177	1		>>			
ANR	10487307	BitAndExpression	temp_value1 & 0xff00		10487177	0		&			
ANR	10487308	Identifier	temp_value1		10487177	0					
ANR	10487309	PrimaryExpression	0xff00		10487177	1					
ANR	10487310	PrimaryExpression	8		10487177	1					
ANR	10487311	ExpressionStatement	ibufs [ psd_ctx -> permute [ kk ] ] [ i ] = temp_value2	225:12:7154:7198	10487177	2	True				
ANR	10487312	AssignmentExpression	ibufs [ psd_ctx -> permute [ kk ] ] [ i ] = temp_value2		10487177	0		=			
ANR	10487313	ArrayIndexing	ibufs [ psd_ctx -> permute [ kk ] ] [ i ]		10487177	0					
ANR	10487314	ArrayIndexing	ibufs [ psd_ctx -> permute [ kk ] ]		10487177	0					
ANR	10487315	Identifier	ibufs		10487177	0					
ANR	10487316	ArrayIndexing	psd_ctx -> permute [ kk ]		10487177	1					
ANR	10487317	PtrMemberAccess	psd_ctx -> permute		10487177	0					
ANR	10487318	Identifier	psd_ctx		10487177	0					
ANR	10487319	Identifier	permute		10487177	1					
ANR	10487320	Identifier	kk		10487177	1					
ANR	10487321	Identifier	i		10487177	1					
ANR	10487322	Identifier	temp_value2		10487177	1					
ANR	10487323	ExpressionStatement	psd_ctx -> band_file_offset [ kk ] += curr_length	229:8:7272:7316	10487177	4	True				
ANR	10487324	AssignmentExpression	psd_ctx -> band_file_offset [ kk ] += curr_length		10487177	0		+=			
ANR	10487325	ArrayIndexing	psd_ctx -> band_file_offset [ kk ]		10487177	0					
ANR	10487326	PtrMemberAccess	psd_ctx -> band_file_offset		10487177	0					
ANR	10487327	Identifier	psd_ctx		10487177	0					
ANR	10487328	Identifier	band_file_offset		10487177	1					
ANR	10487329	Identifier	kk		10487177	1					
ANR	10487330	Identifier	curr_length		10487177	1					
ANR	10487331	ReturnType	static void		10487177	1					
ANR	10487332	Identifier	read_psd_line16		10487177	2					
ANR	10487333	ParameterList	"ETS_SrcPixel * * ibufs , int xs , FILE * fi , int planes , void * image_ctx"		10487177	3					
ANR	10487334	Parameter	ETS_SrcPixel * * ibufs	202:28:6260:6279	10487177	0	True				
ANR	10487335	ParameterType	ETS_SrcPixel * *		10487177	0					
ANR	10487336	Identifier	ibufs		10487177	1					
ANR	10487337	Parameter	int xs	202:50:6282:6287	10487177	1	True				
ANR	10487338	ParameterType	int		10487177	0					
ANR	10487339	Identifier	xs		10487177	1					
ANR	10487340	Parameter	FILE * fi	202:58:6290:6297	10487177	2	True				
ANR	10487341	ParameterType	FILE *		10487177	0					
ANR	10487342	Identifier	fi		10487177	1					
ANR	10487343	Parameter	int planes	202:68:6300:6309	10487177	3	True				
ANR	10487344	ParameterType	int		10487177	0					
ANR	10487345	Identifier	planes		10487177	1					
ANR	10487346	Parameter	void * image_ctx	203:26:6338:6352	10487177	4	True				
ANR	10487347	ParameterType	void *		10487177	0					
ANR	10487348	Identifier	image_ctx		10487177	1					
ANR	10487349	CFGEntryNode	ENTRY		10487177		True				
ANR	10487350	CFGExitNode	EXIT		10487177		True				
ANR	10487351	Symbol	fi		10487177						
ANR	10487352	Symbol	* psd_ctx -> permute		10487177						
ANR	10487353	Symbol	* * psd_ctx		10487177						
ANR	10487354	Symbol	* kk		10487177						
ANR	10487355	Symbol	* ibufs		10487177						
ANR	10487356	Symbol	psd_ctx		10487177						
ANR	10487357	Symbol	psd_ctx -> width		10487177						
ANR	10487358	Symbol	* * kk		10487177						
ANR	10487359	Symbol	* * * psd_ctx -> permute		10487177						
ANR	10487360	Symbol	* * psd_ctx -> permute		10487177						
ANR	10487361	Symbol	kk		10487177						
ANR	10487362	Symbol	SEEK_SET		10487177						
ANR	10487363	Symbol	planes		10487177						
ANR	10487364	Symbol	i		10487177						
ANR	10487365	Symbol	psd_ctx -> permute		10487177						
ANR	10487366	Symbol	* * * psd_ctx		10487177						
ANR	10487367	Symbol	* * ibufs		10487177						
ANR	10487368	Symbol	curr_length		10487177						
ANR	10487369	Symbol	image_ctx		10487177						
ANR	10487370	Symbol	* i		10487177						
ANR	10487371	Symbol	* psd_ctx -> band_file_offset		10487177						
ANR	10487372	Symbol	* * * * psd_ctx		10487177						
ANR	10487373	Symbol	* psd_ctx		10487177						
ANR	10487374	Symbol	* * * kk		10487177						
ANR	10487375	Symbol	xs		10487177						
ANR	10487376	Symbol	temp_value2		10487177						
ANR	10487377	Symbol	psd_ctx -> band_file_offset		10487177						
ANR	10487378	Symbol	ibufs		10487177						
ANR	10487379	Symbol	temp_value1		10487177						
ANR	10487380	Symbol	curr_file_offset		10487177						
ANR	10487381	Function	write_psd_line16	237:0:7610:8436							
ANR	10487382	FunctionDef	"write_psd_line16 (uchar * * obufs , int xs , FILE * fo , int planes , void * image_ctx)"		10487381	0					
ANR	10487383	CompoundStatement		239:0:7728:8436	10487381	0					
ANR	10487384	IdentifierDeclStatement	int kk ;	240:4:7734:7740	10487381	0	True				
ANR	10487385	IdentifierDecl	kk		10487381	0					
ANR	10487386	IdentifierDeclType	int		10487381	0					
ANR	10487387	Identifier	kk		10487381	1					
ANR	10487388	IdentifierDeclStatement	psd_ctx_t * psd_ctx = ( psd_ctx_t * ) image_ctx ;	241:4:7746:7789	10487381	1	True				
ANR	10487389	IdentifierDecl	* psd_ctx = ( psd_ctx_t * ) image_ctx		10487381	0					
ANR	10487390	IdentifierDeclType	psd_ctx_t *		10487381	0					
ANR	10487391	Identifier	psd_ctx		10487381	1					
ANR	10487392	AssignmentExpression	* psd_ctx = ( psd_ctx_t * ) image_ctx		10487381	2		=			
ANR	10487393	Identifier	psd_ctx		10487381	0					
ANR	10487394	CastExpression	( psd_ctx_t * ) image_ctx		10487381	1					
ANR	10487395	CastTarget	psd_ctx_t *		10487381	0					
ANR	10487396	Identifier	image_ctx		10487381	1					
ANR	10487397	IdentifierDeclStatement	const void * input_buf ;	242:4:7795:7816	10487381	2	True				
ANR	10487398	IdentifierDecl	* input_buf		10487381	0					
ANR	10487399	IdentifierDeclType	const void *		10487381	0					
ANR	10487400	Identifier	input_buf		10487381	1					
ANR	10487401	IdentifierDeclStatement	uchar * output_buff = ( uchar * ) psd_ctx -> output_buffer ;	243:4:7822:7874	10487381	3	True				
ANR	10487402	IdentifierDecl	* output_buff = ( uchar * ) psd_ctx -> output_buffer		10487381	0					
ANR	10487403	IdentifierDeclType	uchar *		10487381	0					
ANR	10487404	Identifier	output_buff		10487381	1					
ANR	10487405	AssignmentExpression	* output_buff = ( uchar * ) psd_ctx -> output_buffer		10487381	2		=			
ANR	10487406	Identifier	output_buff		10487381	0					
ANR	10487407	CastExpression	( uchar * ) psd_ctx -> output_buffer		10487381	1					
ANR	10487408	CastTarget	uchar *		10487381	0					
ANR	10487409	PtrMemberAccess	psd_ctx -> output_buffer		10487381	1					
ANR	10487410	Identifier	psd_ctx		10487381	0					
ANR	10487411	Identifier	output_buffer		10487381	1					
ANR	10487412	IdentifierDeclStatement	long plane_size = ( psd_ctx -> width ) * ( psd_ctx -> height ) * 2 ;	244:4:7880:7938	10487381	4	True				
ANR	10487413	IdentifierDecl	plane_size = ( psd_ctx -> width ) * ( psd_ctx -> height ) * 2		10487381	0					
ANR	10487414	IdentifierDeclType	long		10487381	0					
ANR	10487415	Identifier	plane_size		10487381	1					
ANR	10487416	AssignmentExpression	plane_size = ( psd_ctx -> width ) * ( psd_ctx -> height ) * 2		10487381	2		=			
ANR	10487417	Identifier	plane_size		10487381	0					
ANR	10487418	MultiplicativeExpression	( psd_ctx -> width ) * ( psd_ctx -> height ) * 2		10487381	1		*			
ANR	10487419	PtrMemberAccess	psd_ctx -> width		10487381	0					
ANR	10487420	Identifier	psd_ctx		10487381	0					
ANR	10487421	Identifier	width		10487381	1					
ANR	10487422	MultiplicativeExpression	( psd_ctx -> height ) * 2		10487381	1		*			
ANR	10487423	PtrMemberAccess	psd_ctx -> height		10487381	0					
ANR	10487424	Identifier	psd_ctx		10487381	0					
ANR	10487425	Identifier	height		10487381	1					
ANR	10487426	PrimaryExpression	2		10487381	1					
ANR	10487427	IdentifierDeclStatement	long buffer_size = plane_size * planes ;	245:4:7944:7982	10487381	5	True				
ANR	10487428	IdentifierDecl	buffer_size = plane_size * planes		10487381	0					
ANR	10487429	IdentifierDeclType	long		10487381	0					
ANR	10487430	Identifier	buffer_size		10487381	1					
ANR	10487431	AssignmentExpression	buffer_size = plane_size * planes		10487381	2		=			
ANR	10487432	Identifier	buffer_size		10487381	0					
ANR	10487433	MultiplicativeExpression	plane_size * planes		10487381	1		*			
ANR	10487434	Identifier	plane_size		10487381	0					
ANR	10487435	Identifier	planes		10487381	1					
ANR	10487436	ExpressionStatement	output_buff += ( ( psd_ctx -> curr_row ) * ( psd_ctx -> width ) ) * 2	247:4:7993:8052	10487381	6	True				
ANR	10487437	AssignmentExpression	output_buff += ( ( psd_ctx -> curr_row ) * ( psd_ctx -> width ) ) * 2		10487381	0		+=			
ANR	10487438	Identifier	output_buff		10487381	0					
ANR	10487439	MultiplicativeExpression	( ( psd_ctx -> curr_row ) * ( psd_ctx -> width ) ) * 2		10487381	1		*			
ANR	10487440	MultiplicativeExpression	( psd_ctx -> curr_row ) * ( psd_ctx -> width )		10487381	0		*			
ANR	10487441	PtrMemberAccess	psd_ctx -> curr_row		10487381	0					
ANR	10487442	Identifier	psd_ctx		10487381	0					
ANR	10487443	Identifier	curr_row		10487381	1					
ANR	10487444	PtrMemberAccess	psd_ctx -> width		10487381	1					
ANR	10487445	Identifier	psd_ctx		10487381	0					
ANR	10487446	Identifier	width		10487381	1					
ANR	10487447	PrimaryExpression	2		10487381	1					
ANR	10487448	ForStatement	for ( kk = 0 ; kk < planes ; kk ++ )		10487381	7					
ANR	10487449	ForInit	kk = 0 ;	248:9:8063:8069	10487381	0	True				
ANR	10487450	AssignmentExpression	kk = 0		10487381	0		=			
ANR	10487451	Identifier	kk		10487381	0					
ANR	10487452	PrimaryExpression	0		10487381	1					
ANR	10487453	Condition	kk < planes	248:17:8071:8081	10487381	1	True				
ANR	10487454	RelationalExpression	kk < planes		10487381	0		<			
ANR	10487455	Identifier	kk		10487381	0					
ANR	10487456	Identifier	planes		10487381	1					
ANR	10487457	PostIncDecOperationExpression	kk ++	248:30:8084:8087	10487381	2	True				
ANR	10487458	Identifier	kk		10487381	0					
ANR	10487459	IncDec	++		10487381	1					
ANR	10487460	CompoundStatement		11:4:365:365	10487381	3					
ANR	10487461	ExpressionStatement	input_buf = ( const void * ) obufs [ psd_ctx -> permute [ kk ] ]	250:8:8104:8157	10487381	0	True				
ANR	10487462	AssignmentExpression	input_buf = ( const void * ) obufs [ psd_ctx -> permute [ kk ] ]		10487381	0		=			
ANR	10487463	Identifier	input_buf		10487381	0					
ANR	10487464	CastExpression	( const void * ) obufs [ psd_ctx -> permute [ kk ] ]		10487381	1					
ANR	10487465	CastTarget	const void *		10487381	0					
ANR	10487466	ArrayIndexing	obufs [ psd_ctx -> permute [ kk ] ]		10487381	1					
ANR	10487467	Identifier	obufs		10487381	0					
ANR	10487468	ArrayIndexing	psd_ctx -> permute [ kk ]		10487381	1					
ANR	10487469	PtrMemberAccess	psd_ctx -> permute		10487381	0					
ANR	10487470	Identifier	psd_ctx		10487381	0					
ANR	10487471	Identifier	permute		10487381	1					
ANR	10487472	Identifier	kk		10487381	1					
ANR	10487473	ExpressionStatement	"memcpy ( output_buff , input_buf , psd_ctx -> width * 2 )"	251:8:8167:8217	10487381	1	True				
ANR	10487474	CallExpression	"memcpy ( output_buff , input_buf , psd_ctx -> width * 2 )"		10487381	0					
ANR	10487475	Callee	memcpy		10487381	0					
ANR	10487476	Identifier	memcpy		10487381	0					
ANR	10487477	ArgumentList	output_buff		10487381	1					
ANR	10487478	Argument	output_buff		10487381	0					
ANR	10487479	Identifier	output_buff		10487381	0					
ANR	10487480	Argument	input_buf		10487381	1					
ANR	10487481	Identifier	input_buf		10487381	0					
ANR	10487482	Argument	psd_ctx -> width * 2		10487381	2					
ANR	10487483	MultiplicativeExpression	psd_ctx -> width * 2		10487381	0		*			
ANR	10487484	PtrMemberAccess	psd_ctx -> width		10487381	0					
ANR	10487485	Identifier	psd_ctx		10487381	0					
ANR	10487486	Identifier	width		10487381	1					
ANR	10487487	PrimaryExpression	2		10487381	1					
ANR	10487488	ExpressionStatement	output_buff += plane_size	252:8:8227:8252	10487381	2	True				
ANR	10487489	AssignmentExpression	output_buff += plane_size		10487381	0		+=			
ANR	10487490	Identifier	output_buff		10487381	0					
ANR	10487491	Identifier	plane_size		10487381	1					
ANR	10487492	ExpressionStatement	psd_ctx -> curr_row += 1	254:4:8264:8286	10487381	8	True				
ANR	10487493	AssignmentExpression	psd_ctx -> curr_row += 1		10487381	0		+=			
ANR	10487494	PtrMemberAccess	psd_ctx -> curr_row		10487381	0					
ANR	10487495	Identifier	psd_ctx		10487381	0					
ANR	10487496	Identifier	curr_row		10487381	1					
ANR	10487497	PrimaryExpression	1		10487381	1					
ANR	10487498	IfStatement	if ( psd_ctx -> curr_row == psd_ctx -> height )		10487381	9					
ANR	10487499	Condition	psd_ctx -> curr_row == psd_ctx -> height	256:8:8338:8373	10487381	0	True				
ANR	10487500	EqualityExpression	psd_ctx -> curr_row == psd_ctx -> height		10487381	0		==			
ANR	10487501	PtrMemberAccess	psd_ctx -> curr_row		10487381	0					
ANR	10487502	Identifier	psd_ctx		10487381	0					
ANR	10487503	Identifier	curr_row		10487381	1					
ANR	10487504	PtrMemberAccess	psd_ctx -> height		10487381	1					
ANR	10487505	Identifier	psd_ctx		10487381	0					
ANR	10487506	Identifier	height		10487381	1					
ANR	10487507	ExpressionStatement	"fwrite ( psd_ctx -> output_buffer , 1 , buffer_size , fo )"	257:8:8384:8434	10487381	1	True				
ANR	10487508	CallExpression	"fwrite ( psd_ctx -> output_buffer , 1 , buffer_size , fo )"		10487381	0					
ANR	10487509	Callee	fwrite		10487381	0					
ANR	10487510	Identifier	fwrite		10487381	0					
ANR	10487511	ArgumentList	psd_ctx -> output_buffer		10487381	1					
ANR	10487512	Argument	psd_ctx -> output_buffer		10487381	0					
ANR	10487513	PtrMemberAccess	psd_ctx -> output_buffer		10487381	0					
ANR	10487514	Identifier	psd_ctx		10487381	0					
ANR	10487515	Identifier	output_buffer		10487381	1					
ANR	10487516	Argument	1		10487381	1					
ANR	10487517	PrimaryExpression	1		10487381	0					
ANR	10487518	Argument	buffer_size		10487381	2					
ANR	10487519	Identifier	buffer_size		10487381	0					
ANR	10487520	Argument	fo		10487381	3					
ANR	10487521	Identifier	fo		10487381	0					
ANR	10487522	ReturnType	static void		10487381	1					
ANR	10487523	Identifier	write_psd_line16		10487381	2					
ANR	10487524	ParameterList	"uchar * * obufs , int xs , FILE * fo , int planes , void * image_ctx"		10487381	3					
ANR	10487525	Parameter	uchar * * obufs	237:29:7639:7651	10487381	0	True				
ANR	10487526	ParameterType	uchar * *		10487381	0					
ANR	10487527	Identifier	obufs		10487381	1					
ANR	10487528	Parameter	int xs	237:44:7654:7659	10487381	1	True				
ANR	10487529	ParameterType	int		10487381	0					
ANR	10487530	Identifier	xs		10487381	1					
ANR	10487531	Parameter	FILE * fo	237:52:7662:7669	10487381	2	True				
ANR	10487532	ParameterType	FILE *		10487381	0					
ANR	10487533	Identifier	fo		10487381	1					
ANR	10487534	Parameter	int planes	237:62:7672:7681	10487381	3	True				
ANR	10487535	ParameterType	int		10487381	0					
ANR	10487536	Identifier	planes		10487381	1					
ANR	10487537	Parameter	void * image_ctx	238:27:7711:7725	10487381	4	True				
ANR	10487538	ParameterType	void *		10487381	0					
ANR	10487539	Identifier	image_ctx		10487381	1					
ANR	10487540	CFGEntryNode	ENTRY		10487381		True				
ANR	10487541	CFGExitNode	EXIT		10487381		True				
ANR	10487542	Symbol	kk		10487381						
ANR	10487543	Symbol	* psd_ctx -> permute		10487381						
ANR	10487544	Symbol	obufs		10487381						
ANR	10487545	Symbol	output_buff		10487381						
ANR	10487546	Symbol	* kk		10487381						
ANR	10487547	Symbol	* * psd_ctx		10487381						
ANR	10487548	Symbol	buffer_size		10487381						
ANR	10487549	Symbol	psd_ctx -> height		10487381						
ANR	10487550	Symbol	fo		10487381						
ANR	10487551	Symbol	planes		10487381						
ANR	10487552	Symbol	psd_ctx -> permute		10487381						
ANR	10487553	Symbol	* * * psd_ctx		10487381						
ANR	10487554	Symbol	psd_ctx		10487381						
ANR	10487555	Symbol	plane_size		10487381						
ANR	10487556	Symbol	psd_ctx -> width		10487381						
ANR	10487557	Symbol	image_ctx		10487381						
ANR	10487558	Symbol	* * kk		10487381						
ANR	10487559	Symbol	* obufs		10487381						
ANR	10487560	Symbol	* * psd_ctx -> permute		10487381						
ANR	10487561	Symbol	* psd_ctx		10487381						
ANR	10487562	Symbol	psd_ctx -> curr_row		10487381						
ANR	10487563	Symbol	psd_ctx -> output_buffer		10487381						
ANR	10487564	Symbol	xs		10487381						
ANR	10487565	Symbol	input_buf		10487381						
ANR	10487566	Function	finalize_psd	260:0:8439:8921							
ANR	10487567	FunctionDef	finalize_psd (void * image_ctx)		10487566	0					
ANR	10487568	CompoundStatement		261:0:8481:8921	10487566	0					
ANR	10487569	IdentifierDeclStatement	psd_ctx_t * psd_ctx = ( psd_ctx_t * ) image_ctx ;	262:4:8487:8530	10487566	0	True				
ANR	10487570	IdentifierDecl	* psd_ctx = ( psd_ctx_t * ) image_ctx		10487566	0					
ANR	10487571	IdentifierDeclType	psd_ctx_t *		10487566	0					
ANR	10487572	Identifier	psd_ctx		10487566	1					
ANR	10487573	AssignmentExpression	* psd_ctx = ( psd_ctx_t * ) image_ctx		10487566	2		=			
ANR	10487574	Identifier	psd_ctx		10487566	0					
ANR	10487575	CastExpression	( psd_ctx_t * ) image_ctx		10487566	1					
ANR	10487576	CastTarget	psd_ctx_t *		10487566	0					
ANR	10487577	Identifier	image_ctx		10487566	1					
ANR	10487578	IfStatement	if ( psd_ctx -> output_buffer != NULL )		10487566	1					
ANR	10487579	Condition	psd_ctx -> output_buffer != NULL	264:8:8541:8570	10487566	0	True				
ANR	10487580	EqualityExpression	psd_ctx -> output_buffer != NULL		10487566	0		!=			
ANR	10487581	PtrMemberAccess	psd_ctx -> output_buffer		10487566	0					
ANR	10487582	Identifier	psd_ctx		10487566	0					
ANR	10487583	Identifier	output_buffer		10487566	1					
ANR	10487584	Identifier	NULL		10487566	1					
ANR	10487585	ExpressionStatement	free ( psd_ctx -> output_buffer )	265:8:8581:8609	10487566	1	True				
ANR	10487586	CallExpression	free ( psd_ctx -> output_buffer )		10487566	0					
ANR	10487587	Callee	free		10487566	0					
ANR	10487588	Identifier	free		10487566	0					
ANR	10487589	ArgumentList	psd_ctx -> output_buffer		10487566	1					
ANR	10487590	Argument	psd_ctx -> output_buffer		10487566	0					
ANR	10487591	PtrMemberAccess	psd_ctx -> output_buffer		10487566	0					
ANR	10487592	Identifier	psd_ctx		10487566	0					
ANR	10487593	Identifier	output_buffer		10487566	1					
ANR	10487594	IfStatement	if ( psd_ctx -> band_row_length_index != NULL )		10487566	2					
ANR	10487595	Condition	psd_ctx -> band_row_length_index != NULL	266:8:8619:8656	10487566	0	True				
ANR	10487596	EqualityExpression	psd_ctx -> band_row_length_index != NULL		10487566	0		!=			
ANR	10487597	PtrMemberAccess	psd_ctx -> band_row_length_index		10487566	0					
ANR	10487598	Identifier	psd_ctx		10487566	0					
ANR	10487599	Identifier	band_row_length_index		10487566	1					
ANR	10487600	Identifier	NULL		10487566	1					
ANR	10487601	ExpressionStatement	free ( psd_ctx -> band_row_length_index )	267:8:8667:8703	10487566	1	True				
ANR	10487602	CallExpression	free ( psd_ctx -> band_row_length_index )		10487566	0					
ANR	10487603	Callee	free		10487566	0					
ANR	10487604	Identifier	free		10487566	0					
ANR	10487605	ArgumentList	psd_ctx -> band_row_length_index		10487566	1					
ANR	10487606	Argument	psd_ctx -> band_row_length_index		10487566	0					
ANR	10487607	PtrMemberAccess	psd_ctx -> band_row_length_index		10487566	0					
ANR	10487608	Identifier	psd_ctx		10487566	0					
ANR	10487609	Identifier	band_row_length_index		10487566	1					
ANR	10487610	IfStatement	if ( psd_ctx -> band_file_offset != NULL )		10487566	3					
ANR	10487611	Condition	psd_ctx -> band_file_offset != NULL	268:8:8713:8745	10487566	0	True				
ANR	10487612	EqualityExpression	psd_ctx -> band_file_offset != NULL		10487566	0		!=			
ANR	10487613	PtrMemberAccess	psd_ctx -> band_file_offset		10487566	0					
ANR	10487614	Identifier	psd_ctx		10487566	0					
ANR	10487615	Identifier	band_file_offset		10487566	1					
ANR	10487616	Identifier	NULL		10487566	1					
ANR	10487617	ExpressionStatement	free ( psd_ctx -> band_file_offset )	269:8:8756:8787	10487566	1	True				
ANR	10487618	CallExpression	free ( psd_ctx -> band_file_offset )		10487566	0					
ANR	10487619	Callee	free		10487566	0					
ANR	10487620	Identifier	free		10487566	0					
ANR	10487621	ArgumentList	psd_ctx -> band_file_offset		10487566	1					
ANR	10487622	Argument	psd_ctx -> band_file_offset		10487566	0					
ANR	10487623	PtrMemberAccess	psd_ctx -> band_file_offset		10487566	0					
ANR	10487624	Identifier	psd_ctx		10487566	0					
ANR	10487625	Identifier	band_file_offset		10487566	1					
ANR	10487626	IfStatement	if ( psd_ctx -> rle_row != NULL )		10487566	4					
ANR	10487627	Condition	psd_ctx -> rle_row != NULL	270:8:8797:8820	10487566	0	True				
ANR	10487628	EqualityExpression	psd_ctx -> rle_row != NULL		10487566	0		!=			
ANR	10487629	PtrMemberAccess	psd_ctx -> rle_row		10487566	0					
ANR	10487630	Identifier	psd_ctx		10487566	0					
ANR	10487631	Identifier	rle_row		10487566	1					
ANR	10487632	Identifier	NULL		10487566	1					
ANR	10487633	ExpressionStatement	free ( psd_ctx -> rle_row )	271:8:8831:8853	10487566	1	True				
ANR	10487634	CallExpression	free ( psd_ctx -> rle_row )		10487566	0					
ANR	10487635	Callee	free		10487566	0					
ANR	10487636	Identifier	free		10487566	0					
ANR	10487637	ArgumentList	psd_ctx -> rle_row		10487566	1					
ANR	10487638	Argument	psd_ctx -> rle_row		10487566	0					
ANR	10487639	PtrMemberAccess	psd_ctx -> rle_row		10487566	0					
ANR	10487640	Identifier	psd_ctx		10487566	0					
ANR	10487641	Identifier	rle_row		10487566	1					
ANR	10487642	IfStatement	if ( psd_ctx -> permute != NULL )		10487566	5					
ANR	10487643	Condition	psd_ctx -> permute != NULL	272:8:8863:8886	10487566	0	True				
ANR	10487644	EqualityExpression	psd_ctx -> permute != NULL		10487566	0		!=			
ANR	10487645	PtrMemberAccess	psd_ctx -> permute		10487566	0					
ANR	10487646	Identifier	psd_ctx		10487566	0					
ANR	10487647	Identifier	permute		10487566	1					
ANR	10487648	Identifier	NULL		10487566	1					
ANR	10487649	ExpressionStatement	free ( psd_ctx -> permute )	273:8:8897:8919	10487566	1	True				
ANR	10487650	CallExpression	free ( psd_ctx -> permute )		10487566	0					
ANR	10487651	Callee	free		10487566	0					
ANR	10487652	Identifier	free		10487566	0					
ANR	10487653	ArgumentList	psd_ctx -> permute		10487566	1					
ANR	10487654	Argument	psd_ctx -> permute		10487566	0					
ANR	10487655	PtrMemberAccess	psd_ctx -> permute		10487566	0					
ANR	10487656	Identifier	psd_ctx		10487566	0					
ANR	10487657	Identifier	permute		10487566	1					
ANR	10487658	ReturnType	static void		10487566	1					
ANR	10487659	Identifier	finalize_psd		10487566	2					
ANR	10487660	ParameterList	void * image_ctx		10487566	3					
ANR	10487661	Parameter	void * image_ctx	260:25:8464:8478	10487566	0	True				
ANR	10487662	ParameterType	void *		10487566	0					
ANR	10487663	Identifier	image_ctx		10487566	1					
ANR	10487664	CFGEntryNode	ENTRY		10487566		True				
ANR	10487665	CFGExitNode	EXIT		10487566		True				
ANR	10487666	Symbol	NULL		10487566						
ANR	10487667	Symbol	* psd_ctx		10487566						
ANR	10487668	Symbol	psd_ctx -> band_row_length_index		10487566						
ANR	10487669	Symbol	psd_ctx -> rle_row		10487566						
ANR	10487670	Symbol	psd_ctx -> permute		10487566						
ANR	10487671	Symbol	psd_ctx -> output_buffer		10487566						
ANR	10487672	Symbol	psd_ctx -> band_file_offset		10487566						
ANR	10487673	Symbol	psd_ctx		10487566						
ANR	10487674	Symbol	image_ctx		10487566						
ANR	10487675	Function	read_psd	276:0:8924:14690							
ANR	10487676	FunctionDef	"read_psd (FILE * fi , psd_ctx_t * psd_ctx , FILE * fo)"		10487675	0					
ANR	10487677	CompoundStatement		277:0:8985:14690	10487675	0					
ANR	10487678	IdentifierDeclStatement	uchar buf [ 256 ] ;	278:4:8991:9005	10487675	0	True				
ANR	10487679	IdentifierDecl	buf [ 256 ]		10487675	0					
ANR	10487680	IdentifierDeclType	uchar [ 256 ]		10487675	0					
ANR	10487681	Identifier	buf		10487675	1					
ANR	10487682	PrimaryExpression	256		10487675	2					
ANR	10487683	IdentifierDeclStatement	int depth ;	279:4:9011:9020	10487675	1	True				
ANR	10487684	IdentifierDecl	depth		10487675	0					
ANR	10487685	IdentifierDeclType	int		10487675	0					
ANR	10487686	Identifier	depth		10487675	1					
ANR	10487687	IdentifierDeclStatement	uchar num_channel ;	280:4:9026:9043	10487675	2	True				
ANR	10487688	IdentifierDecl	num_channel		10487675	0					
ANR	10487689	IdentifierDeclType	uchar		10487675	0					
ANR	10487690	Identifier	num_channel		10487675	1					
ANR	10487691	IdentifierDeclStatement	"int height , width , color_mode ;"	281:4:9049:9078	10487675	3	True				
ANR	10487692	IdentifierDecl	height		10487675	0					
ANR	10487693	IdentifierDeclType	int		10487675	0					
ANR	10487694	Identifier	height		10487675	1					
ANR	10487695	IdentifierDecl	width		10487675	1					
ANR	10487696	IdentifierDeclType	int		10487675	0					
ANR	10487697	Identifier	width		10487675	1					
ANR	10487698	IdentifierDecl	color_mode		10487675	2					
ANR	10487699	IdentifierDeclType	int		10487675	0					
ANR	10487700	Identifier	color_mode		10487675	1					
ANR	10487701	IdentifierDeclStatement	int size ;	282:4:9084:9092	10487675	4	True				
ANR	10487702	IdentifierDecl	size		10487675	0					
ANR	10487703	IdentifierDeclType	int		10487675	0					
ANR	10487704	Identifier	size		10487675	1					
ANR	10487705	IdentifierDeclStatement	int bytes ;	283:4:9098:9107	10487675	5	True				
ANR	10487706	IdentifierDecl	bytes		10487675	0					
ANR	10487707	IdentifierDeclType	int		10487675	0					
ANR	10487708	Identifier	bytes		10487675	1					
ANR	10487709	IdentifierDeclStatement	uchar * temp_buff ;	284:4:9113:9129	10487675	6	True				
ANR	10487710	IdentifierDecl	* temp_buff		10487675	0					
ANR	10487711	IdentifierDeclType	uchar *		10487675	0					
ANR	10487712	Identifier	temp_buff		10487675	1					
ANR	10487713	IdentifierDeclStatement	"int kk , jj ;"	285:4:9135:9145	10487675	7	True				
ANR	10487714	IdentifierDecl	kk		10487675	0					
ANR	10487715	IdentifierDeclType	int		10487675	0					
ANR	10487716	Identifier	kk		10487675	1					
ANR	10487717	IdentifierDecl	jj		10487675	1					
ANR	10487718	IdentifierDeclType	int		10487675	0					
ANR	10487719	Identifier	jj		10487675	1					
ANR	10487720	IdentifierDeclStatement	long data_size ;	286:4:9151:9165	10487675	8	True				
ANR	10487721	IdentifierDecl	data_size		10487675	0					
ANR	10487722	IdentifierDeclType	long		10487675	0					
ANR	10487723	Identifier	data_size		10487675	1					
ANR	10487724	IdentifierDeclStatement	"int codec , maxlength = 0 ;"	287:4:9171:9195	10487675	9	True				
ANR	10487725	IdentifierDecl	codec		10487675	0					
ANR	10487726	IdentifierDeclType	int		10487675	0					
ANR	10487727	Identifier	codec		10487675	1					
ANR	10487728	IdentifierDecl	maxlength = 0		10487675	1					
ANR	10487729	IdentifierDeclType	int		10487675	0					
ANR	10487730	Identifier	maxlength		10487675	1					
ANR	10487731	AssignmentExpression	maxlength = 0		10487675	2		=			
ANR	10487732	Identifier	maxlength		10487675	0					
ANR	10487733	PrimaryExpression	0		10487675	1					
ANR	10487734	IdentifierDeclStatement	long count = 0 ;	288:4:9201:9215	10487675	10	True				
ANR	10487735	IdentifierDecl	count = 0		10487675	0					
ANR	10487736	IdentifierDeclType	long		10487675	0					
ANR	10487737	Identifier	count		10487675	1					
ANR	10487738	AssignmentExpression	count = 0		10487675	2		=			
ANR	10487739	Identifier	count		10487675	0					
ANR	10487740	PrimaryExpression	0		10487675	1					
ANR	10487741	IdentifierDeclStatement	long curr_count = 0 ;	289:4:9221:9240	10487675	11	True				
ANR	10487742	IdentifierDecl	curr_count = 0		10487675	0					
ANR	10487743	IdentifierDeclType	long		10487675	0					
ANR	10487744	Identifier	curr_count		10487675	1					
ANR	10487745	AssignmentExpression	curr_count = 0		10487675	2		=			
ANR	10487746	Identifier	curr_count		10487675	0					
ANR	10487747	PrimaryExpression	0		10487675	1					
ANR	10487748	IdentifierDeclStatement	int index = 0 ;	290:4:9246:9259	10487675	12	True				
ANR	10487749	IdentifierDecl	index = 0		10487675	0					
ANR	10487750	IdentifierDeclType	int		10487675	0					
ANR	10487751	Identifier	index		10487675	1					
ANR	10487752	AssignmentExpression	index = 0		10487675	2		=			
ANR	10487753	Identifier	index		10487675	0					
ANR	10487754	PrimaryExpression	0		10487675	1					
ANR	10487755	IdentifierDeclStatement	"uchar * in_buff , * out_buff ;"	292:4:9286:9311	10487675	13	True				
ANR	10487756	IdentifierDecl	* in_buff		10487675	0					
ANR	10487757	IdentifierDeclType	uchar *		10487675	0					
ANR	10487758	Identifier	in_buff		10487675	1					
ANR	10487759	IdentifierDecl	* out_buff		10487675	1					
ANR	10487760	IdentifierDeclType	uchar *		10487675	0					
ANR	10487761	Identifier	out_buff		10487675	1					
ANR	10487762	ExpressionStatement	psd_ctx -> curr_row = 0	295:4:9329:9350	10487675	14	True				
ANR	10487763	AssignmentExpression	psd_ctx -> curr_row = 0		10487675	0		=			
ANR	10487764	PtrMemberAccess	psd_ctx -> curr_row		10487675	0					
ANR	10487765	Identifier	psd_ctx		10487675	0					
ANR	10487766	Identifier	curr_row		10487675	1					
ANR	10487767	PrimaryExpression	0		10487675	1					
ANR	10487768	ExpressionStatement	rewind ( fi )	298:4:9405:9415	10487675	15	True				
ANR	10487769	CallExpression	rewind ( fi )		10487675	0					
ANR	10487770	Callee	rewind		10487675	0					
ANR	10487771	Identifier	rewind		10487675	0					
ANR	10487772	ArgumentList	fi		10487675	1					
ANR	10487773	Argument	fi		10487675	0					
ANR	10487774	Identifier	fi		10487675	0					
ANR	10487775	ExpressionStatement	"fread ( buf , 1 , 26 , fi )"	300:4:9422:9443	10487675	16	True				
ANR	10487776	CallExpression	"fread ( buf , 1 , 26 , fi )"		10487675	0					
ANR	10487777	Callee	fread		10487675	0					
ANR	10487778	Identifier	fread		10487675	0					
ANR	10487779	ArgumentList	buf		10487675	1					
ANR	10487780	Argument	buf		10487675	0					
ANR	10487781	Identifier	buf		10487675	0					
ANR	10487782	Argument	1		10487675	1					
ANR	10487783	PrimaryExpression	1		10487675	0					
ANR	10487784	Argument	26		10487675	2					
ANR	10487785	PrimaryExpression	26		10487675	0					
ANR	10487786	Argument	fi		10487675	3					
ANR	10487787	Identifier	fi		10487675	0					
ANR	10487788	ExpressionStatement	count += 26	301:4:9449:9460	10487675	17	True				
ANR	10487789	AssignmentExpression	count += 26		10487675	0		+=			
ANR	10487790	Identifier	count		10487675	0					
ANR	10487791	PrimaryExpression	26		10487675	1					
ANR	10487792	ExpressionStatement	num_channel = buf [ 13 ]	303:4:9467:9488	10487675	18	True				
ANR	10487793	AssignmentExpression	num_channel = buf [ 13 ]		10487675	0		=			
ANR	10487794	Identifier	num_channel		10487675	0					
ANR	10487795	ArrayIndexing	buf [ 13 ]		10487675	1					
ANR	10487796	Identifier	buf		10487675	0					
ANR	10487797	PrimaryExpression	13		10487675	1					
ANR	10487798	ExpressionStatement	"get4 ( & height , & ( buf [ 14 ] ) )"	304:4:9494:9519	10487675	19	True				
ANR	10487799	CallExpression	"get4 ( & height , & ( buf [ 14 ] ) )"		10487675	0					
ANR	10487800	Callee	get4		10487675	0					
ANR	10487801	Identifier	get4		10487675	0					
ANR	10487802	ArgumentList	& height		10487675	1					
ANR	10487803	Argument	& height		10487675	0					
ANR	10487804	UnaryOperationExpression	& height		10487675	0					
ANR	10487805	UnaryOperator	&		10487675	0					
ANR	10487806	Identifier	height		10487675	1					
ANR	10487807	Argument	& ( buf [ 14 ] )		10487675	1					
ANR	10487808	UnaryOperationExpression	& ( buf [ 14 ] )		10487675	0					
ANR	10487809	UnaryOperator	&		10487675	0					
ANR	10487810	ArrayIndexing	buf [ 14 ]		10487675	1					
ANR	10487811	Identifier	buf		10487675	0					
ANR	10487812	PrimaryExpression	14		10487675	1					
ANR	10487813	ExpressionStatement	"get4 ( & width , & ( buf [ 18 ] ) )"	305:4:9525:9549	10487675	20	True				
ANR	10487814	CallExpression	"get4 ( & width , & ( buf [ 18 ] ) )"		10487675	0					
ANR	10487815	Callee	get4		10487675	0					
ANR	10487816	Identifier	get4		10487675	0					
ANR	10487817	ArgumentList	& width		10487675	1					
ANR	10487818	Argument	& width		10487675	0					
ANR	10487819	UnaryOperationExpression	& width		10487675	0					
ANR	10487820	UnaryOperator	&		10487675	0					
ANR	10487821	Identifier	width		10487675	1					
ANR	10487822	Argument	& ( buf [ 18 ] )		10487675	1					
ANR	10487823	UnaryOperationExpression	& ( buf [ 18 ] )		10487675	0					
ANR	10487824	UnaryOperator	&		10487675	0					
ANR	10487825	ArrayIndexing	buf [ 18 ]		10487675	1					
ANR	10487826	Identifier	buf		10487675	0					
ANR	10487827	PrimaryExpression	18		10487675	1					
ANR	10487828	ExpressionStatement	depth = buf [ 23 ]	307:4:9556:9571	10487675	21	True				
ANR	10487829	AssignmentExpression	depth = buf [ 23 ]		10487675	0		=			
ANR	10487830	Identifier	depth		10487675	0					
ANR	10487831	ArrayIndexing	buf [ 23 ]		10487675	1					
ANR	10487832	Identifier	buf		10487675	0					
ANR	10487833	PrimaryExpression	23		10487675	1					
ANR	10487834	ExpressionStatement	color_mode = buf [ 25 ]	308:4:9577:9597	10487675	22	True				
ANR	10487835	AssignmentExpression	color_mode = buf [ 25 ]		10487675	0		=			
ANR	10487836	Identifier	color_mode		10487675	0					
ANR	10487837	ArrayIndexing	buf [ 25 ]		10487675	1					
ANR	10487838	Identifier	buf		10487675	0					
ANR	10487839	PrimaryExpression	25		10487675	1					
ANR	10487840	IfStatement	if ( ! ( depth == 8 || depth == 16 ) )		10487675	23					
ANR	10487841	Condition	! ( depth == 8 || depth == 16 )	310:8:9608:9635	10487675	0	True				
ANR	10487842	UnaryOperationExpression	! ( depth == 8 || depth == 16 )		10487675	0					
ANR	10487843	UnaryOperator	!		10487675	0					
ANR	10487844	OrExpression	depth == 8 || depth == 16		10487675	1		||			
ANR	10487845	EqualityExpression	depth == 8		10487675	0		==			
ANR	10487846	Identifier	depth		10487675	0					
ANR	10487847	PrimaryExpression	8		10487675	1					
ANR	10487848	EqualityExpression	depth == 16		10487675	1		==			
ANR	10487849	Identifier	depth		10487675	0					
ANR	10487850	PrimaryExpression	16		10487675	1					
ANR	10487851	ExpressionStatement	"die ( ""Only 8 or 16 bit PSD files supported"" )"	311:8:9646:9689	10487675	1	True				
ANR	10487852	CallExpression	"die ( ""Only 8 or 16 bit PSD files supported"" )"		10487675	0					
ANR	10487853	Callee	die		10487675	0					
ANR	10487854	Identifier	die		10487675	0					
ANR	10487855	ArgumentList	"""Only 8 or 16 bit PSD files supported"""		10487675	1					
ANR	10487856	Argument	"""Only 8 or 16 bit PSD files supported"""		10487675	0					
ANR	10487857	PrimaryExpression	"""Only 8 or 16 bit PSD files supported"""		10487675	0					
ANR	10487858	IfStatement	if ( depth == 16 && ( sizeof ( ETS_SrcPixel ) != 2 || ETS_SRC_MAX != 65535 ) )		10487675	24					
ANR	10487859	Condition	depth == 16 && ( sizeof ( ETS_SrcPixel ) != 2 || ETS_SRC_MAX != 65535 )	313:8:9700:9765	10487675	0	True				
ANR	10487860	AndExpression	depth == 16 && ( sizeof ( ETS_SrcPixel ) != 2 || ETS_SRC_MAX != 65535 )		10487675	0		&&			
ANR	10487861	EqualityExpression	depth == 16		10487675	0		==			
ANR	10487862	Identifier	depth		10487675	0					
ANR	10487863	PrimaryExpression	16		10487675	1					
ANR	10487864	OrExpression	sizeof ( ETS_SrcPixel ) != 2 || ETS_SRC_MAX != 65535		10487675	1		||			
ANR	10487865	EqualityExpression	sizeof ( ETS_SrcPixel ) != 2		10487675	0		!=			
ANR	10487866	SizeofExpression	sizeof ( ETS_SrcPixel )		10487675	0					
ANR	10487867	Sizeof	sizeof		10487675	0					
ANR	10487868	SizeofOperand	ETS_SrcPixel		10487675	1					
ANR	10487869	PrimaryExpression	2		10487675	1					
ANR	10487870	EqualityExpression	ETS_SRC_MAX != 65535		10487675	1		!=			
ANR	10487871	Identifier	ETS_SRC_MAX		10487675	0					
ANR	10487872	PrimaryExpression	65535		10487675	1					
ANR	10487873	ExpressionStatement	"die ( ""ETS_SrcPixel type and ETS_SRC_MAX in ets.h not set for 16 bit support!"" )"	314:8:9776:9853	10487675	1	True				
ANR	10487874	CallExpression	"die ( ""ETS_SrcPixel type and ETS_SRC_MAX in ets.h not set for 16 bit support!"" )"		10487675	0					
ANR	10487875	Callee	die		10487675	0					
ANR	10487876	Identifier	die		10487675	0					
ANR	10487877	ArgumentList	"""ETS_SrcPixel type and ETS_SRC_MAX in ets.h not set for 16 bit support!"""		10487675	1					
ANR	10487878	Argument	"""ETS_SrcPixel type and ETS_SRC_MAX in ets.h not set for 16 bit support!"""		10487675	0					
ANR	10487879	PrimaryExpression	"""ETS_SrcPixel type and ETS_SRC_MAX in ets.h not set for 16 bit support!"""		10487675	0					
ANR	10487880	IfStatement	if ( depth == 8 && ( sizeof ( ETS_SrcPixel ) != 1 || ETS_SRC_MAX != 255 ) )		10487675	25					
ANR	10487881	Condition	depth == 8 && ( sizeof ( ETS_SrcPixel ) != 1 || ETS_SRC_MAX != 255 )	316:8:9864:9926	10487675	0	True				
ANR	10487882	AndExpression	depth == 8 && ( sizeof ( ETS_SrcPixel ) != 1 || ETS_SRC_MAX != 255 )		10487675	0		&&			
ANR	10487883	EqualityExpression	depth == 8		10487675	0		==			
ANR	10487884	Identifier	depth		10487675	0					
ANR	10487885	PrimaryExpression	8		10487675	1					
ANR	10487886	OrExpression	sizeof ( ETS_SrcPixel ) != 1 || ETS_SRC_MAX != 255		10487675	1		||			
ANR	10487887	EqualityExpression	sizeof ( ETS_SrcPixel ) != 1		10487675	0		!=			
ANR	10487888	SizeofExpression	sizeof ( ETS_SrcPixel )		10487675	0					
ANR	10487889	Sizeof	sizeof		10487675	0					
ANR	10487890	SizeofOperand	ETS_SrcPixel		10487675	1					
ANR	10487891	PrimaryExpression	1		10487675	1					
ANR	10487892	EqualityExpression	ETS_SRC_MAX != 255		10487675	1		!=			
ANR	10487893	Identifier	ETS_SRC_MAX		10487675	0					
ANR	10487894	PrimaryExpression	255		10487675	1					
ANR	10487895	ExpressionStatement	"die ( ""ETS_SrcPixel type and ETS_SRC_MAX in ets.h not set for 8 bit support!"" )"	317:8:9937:10013	10487675	1	True				
ANR	10487896	CallExpression	"die ( ""ETS_SrcPixel type and ETS_SRC_MAX in ets.h not set for 8 bit support!"" )"		10487675	0					
ANR	10487897	Callee	die		10487675	0					
ANR	10487898	Identifier	die		10487675	0					
ANR	10487899	ArgumentList	"""ETS_SrcPixel type and ETS_SRC_MAX in ets.h not set for 8 bit support!"""		10487675	1					
ANR	10487900	Argument	"""ETS_SrcPixel type and ETS_SRC_MAX in ets.h not set for 8 bit support!"""		10487675	0					
ANR	10487901	PrimaryExpression	"""ETS_SrcPixel type and ETS_SRC_MAX in ets.h not set for 8 bit support!"""		10487675	0					
ANR	10487902	IfStatement	if ( color_mode == 2 || color_mode == 8 )		10487675	26					
ANR	10487903	Condition	color_mode == 2 || color_mode == 8	320:8:10083:10116	10487675	0	True				
ANR	10487904	OrExpression	color_mode == 2 || color_mode == 8		10487675	0		||			
ANR	10487905	EqualityExpression	color_mode == 2		10487675	0		==			
ANR	10487906	Identifier	color_mode		10487675	0					
ANR	10487907	PrimaryExpression	2		10487675	1					
ANR	10487908	EqualityExpression	color_mode == 8		10487675	1		==			
ANR	10487909	Identifier	color_mode		10487675	0					
ANR	10487910	PrimaryExpression	8		10487675	1					
ANR	10487911	ExpressionStatement	"die ( ""Indexed and Duotone PSD files not supported"" )"	321:8:10128:10178	10487675	1	True				
ANR	10487912	CallExpression	"die ( ""Indexed and Duotone PSD files not supported"" )"		10487675	0					
ANR	10487913	Callee	die		10487675	0					
ANR	10487914	Identifier	die		10487675	0					
ANR	10487915	ArgumentList	"""Indexed and Duotone PSD files not supported"""		10487675	1					
ANR	10487916	Argument	"""Indexed and Duotone PSD files not supported"""		10487675	0					
ANR	10487917	PrimaryExpression	"""Indexed and Duotone PSD files not supported"""		10487675	0					
ANR	10487918	ExpressionStatement	psd_ctx -> depth = depth	323:4:10185:10207	10487675	27	True				
ANR	10487919	AssignmentExpression	psd_ctx -> depth = depth		10487675	0		=			
ANR	10487920	PtrMemberAccess	psd_ctx -> depth		10487675	0					
ANR	10487921	Identifier	psd_ctx		10487675	0					
ANR	10487922	Identifier	depth		10487675	1					
ANR	10487923	Identifier	depth		10487675	1					
ANR	10487924	ExpressionStatement	psd_ctx -> height = height	324:4:10213:10237	10487675	28	True				
ANR	10487925	AssignmentExpression	psd_ctx -> height = height		10487675	0		=			
ANR	10487926	PtrMemberAccess	psd_ctx -> height		10487675	0					
ANR	10487927	Identifier	psd_ctx		10487675	0					
ANR	10487928	Identifier	height		10487675	1					
ANR	10487929	Identifier	height		10487675	1					
ANR	10487930	ExpressionStatement	psd_ctx -> width = width	325:4:10243:10265	10487675	29	True				
ANR	10487931	AssignmentExpression	psd_ctx -> width = width		10487675	0		=			
ANR	10487932	PtrMemberAccess	psd_ctx -> width		10487675	0					
ANR	10487933	Identifier	psd_ctx		10487675	0					
ANR	10487934	Identifier	width		10487675	1					
ANR	10487935	Identifier	width		10487675	1					
ANR	10487936	ExpressionStatement	psd_ctx -> num_channels = num_channel	326:4:10271:10306	10487675	30	True				
ANR	10487937	AssignmentExpression	psd_ctx -> num_channels = num_channel		10487675	0		=			
ANR	10487938	PtrMemberAccess	psd_ctx -> num_channels		10487675	0					
ANR	10487939	Identifier	psd_ctx		10487675	0					
ANR	10487940	Identifier	num_channels		10487675	1					
ANR	10487941	Identifier	num_channel		10487675	1					
ANR	10487942	IfStatement	if ( depth == 8 )		10487675	31					
ANR	10487943	Condition	depth == 8	328:8:10317:10326	10487675	0	True				
ANR	10487944	EqualityExpression	depth == 8		10487675	0		==			
ANR	10487945	Identifier	depth		10487675	0					
ANR	10487946	PrimaryExpression	8		10487675	1					
ANR	10487947	ExpressionStatement	bytes = 1	329:8:10337:10346	10487675	1	True				
ANR	10487948	AssignmentExpression	bytes = 1		10487675	0		=			
ANR	10487949	Identifier	bytes		10487675	0					
ANR	10487950	PrimaryExpression	1		10487675	1					
ANR	10487951	ElseStatement	else		10487675	0					
ANR	10487952	ExpressionStatement	bytes = 2	331:8:10366:10375	10487675	0	True				
ANR	10487953	AssignmentExpression	bytes = 2		10487675	0		=			
ANR	10487954	Identifier	bytes		10487675	0					
ANR	10487955	PrimaryExpression	2		10487675	1					
ANR	10487956	ExpressionStatement	buf [ 23 ] = 8	334:4:10419:10430	10487675	32	True				
ANR	10487957	AssignmentExpression	buf [ 23 ] = 8		10487675	0		=			
ANR	10487958	ArrayIndexing	buf [ 23 ]		10487675	0					
ANR	10487959	Identifier	buf		10487675	0					
ANR	10487960	PrimaryExpression	23		10487675	1					
ANR	10487961	PrimaryExpression	8		10487675	1					
ANR	10487962	ExpressionStatement	"fwrite ( buf , 1 , 26 , fo )"	337:4:10480:10502	10487675	33	True				
ANR	10487963	CallExpression	"fwrite ( buf , 1 , 26 , fo )"		10487675	0					
ANR	10487964	Callee	fwrite		10487675	0					
ANR	10487965	Identifier	fwrite		10487675	0					
ANR	10487966	ArgumentList	buf		10487675	1					
ANR	10487967	Argument	buf		10487675	0					
ANR	10487968	Identifier	buf		10487675	0					
ANR	10487969	Argument	1		10487675	1					
ANR	10487970	PrimaryExpression	1		10487675	0					
ANR	10487971	Argument	26		10487675	2					
ANR	10487972	PrimaryExpression	26		10487675	0					
ANR	10487973	Argument	fo		10487675	3					
ANR	10487974	Identifier	fo		10487675	0					
ANR	10487975	ExpressionStatement	"fread ( buf , 1 , 4 , fi )"	340:4:10548:10568	10487675	34	True				
ANR	10487976	CallExpression	"fread ( buf , 1 , 4 , fi )"		10487675	0					
ANR	10487977	Callee	fread		10487675	0					
ANR	10487978	Identifier	fread		10487675	0					
ANR	10487979	ArgumentList	buf		10487675	1					
ANR	10487980	Argument	buf		10487675	0					
ANR	10487981	Identifier	buf		10487675	0					
ANR	10487982	Argument	1		10487675	1					
ANR	10487983	PrimaryExpression	1		10487675	0					
ANR	10487984	Argument	4		10487675	2					
ANR	10487985	PrimaryExpression	4		10487675	0					
ANR	10487986	Argument	fi		10487675	3					
ANR	10487987	Identifier	fi		10487675	0					
ANR	10487988	ExpressionStatement	"fwrite ( buf , 1 , 4 , fo )"	341:4:10574:10595	10487675	35	True				
ANR	10487989	CallExpression	"fwrite ( buf , 1 , 4 , fo )"		10487675	0					
ANR	10487990	Callee	fwrite		10487675	0					
ANR	10487991	Identifier	fwrite		10487675	0					
ANR	10487992	ArgumentList	buf		10487675	1					
ANR	10487993	Argument	buf		10487675	0					
ANR	10487994	Identifier	buf		10487675	0					
ANR	10487995	Argument	1		10487675	1					
ANR	10487996	PrimaryExpression	1		10487675	0					
ANR	10487997	Argument	4		10487675	2					
ANR	10487998	PrimaryExpression	4		10487675	0					
ANR	10487999	Argument	fo		10487675	3					
ANR	10488000	Identifier	fo		10487675	0					
ANR	10488001	ExpressionStatement	count += 4	342:4:10601:10611	10487675	36	True				
ANR	10488002	AssignmentExpression	count += 4		10487675	0		+=			
ANR	10488003	Identifier	count		10487675	0					
ANR	10488004	PrimaryExpression	4		10487675	1					
ANR	10488005	ExpressionStatement	"fread ( buf , 1 , 4 , fi )"	345:4:10662:10682	10487675	37	True				
ANR	10488006	CallExpression	"fread ( buf , 1 , 4 , fi )"		10487675	0					
ANR	10488007	Callee	fread		10487675	0					
ANR	10488008	Identifier	fread		10487675	0					
ANR	10488009	ArgumentList	buf		10487675	1					
ANR	10488010	Argument	buf		10487675	0					
ANR	10488011	Identifier	buf		10487675	0					
ANR	10488012	Argument	1		10487675	1					
ANR	10488013	PrimaryExpression	1		10487675	0					
ANR	10488014	Argument	4		10487675	2					
ANR	10488015	PrimaryExpression	4		10487675	0					
ANR	10488016	Argument	fi		10487675	3					
ANR	10488017	Identifier	fi		10487675	0					
ANR	10488018	ExpressionStatement	"get4 ( & size , buf )"	346:4:10688:10705	10487675	38	True				
ANR	10488019	CallExpression	"get4 ( & size , buf )"		10487675	0					
ANR	10488020	Callee	get4		10487675	0					
ANR	10488021	Identifier	get4		10487675	0					
ANR	10488022	ArgumentList	& size		10487675	1					
ANR	10488023	Argument	& size		10487675	0					
ANR	10488024	UnaryOperationExpression	& size		10487675	0					
ANR	10488025	UnaryOperator	&		10487675	0					
ANR	10488026	Identifier	size		10487675	1					
ANR	10488027	Argument	buf		10487675	1					
ANR	10488028	Identifier	buf		10487675	0					
ANR	10488029	ExpressionStatement	"fwrite ( buf , 1 , 4 , fo )"	347:4:10711:10732	10487675	39	True				
ANR	10488030	CallExpression	"fwrite ( buf , 1 , 4 , fo )"		10487675	0					
ANR	10488031	Callee	fwrite		10487675	0					
ANR	10488032	Identifier	fwrite		10487675	0					
ANR	10488033	ArgumentList	buf		10487675	1					
ANR	10488034	Argument	buf		10487675	0					
ANR	10488035	Identifier	buf		10487675	0					
ANR	10488036	Argument	1		10487675	1					
ANR	10488037	PrimaryExpression	1		10487675	0					
ANR	10488038	Argument	4		10487675	2					
ANR	10488039	PrimaryExpression	4		10487675	0					
ANR	10488040	Argument	fo		10487675	3					
ANR	10488041	Identifier	fo		10487675	0					
ANR	10488042	ExpressionStatement	temp_buff = ( uchar * ) malloc ( size )	348:4:10738:10771	10487675	40	True				
ANR	10488043	AssignmentExpression	temp_buff = ( uchar * ) malloc ( size )		10487675	0		=			
ANR	10488044	Identifier	temp_buff		10487675	0					
ANR	10488045	CastExpression	( uchar * ) malloc ( size )		10487675	1					
ANR	10488046	CastTarget	uchar *		10487675	0					
ANR	10488047	CallExpression	malloc ( size )		10487675	1					
ANR	10488048	Callee	malloc		10487675	0					
ANR	10488049	Identifier	malloc		10487675	0					
ANR	10488050	ArgumentList	size		10487675	1					
ANR	10488051	Argument	size		10487675	0					
ANR	10488052	Identifier	size		10487675	0					
ANR	10488053	ExpressionStatement	"fread ( temp_buff , 1 , size , fi )"	349:4:10777:10806	10487675	41	True				
ANR	10488054	CallExpression	"fread ( temp_buff , 1 , size , fi )"		10487675	0					
ANR	10488055	Callee	fread		10487675	0					
ANR	10488056	Identifier	fread		10487675	0					
ANR	10488057	ArgumentList	temp_buff		10487675	1					
ANR	10488058	Argument	temp_buff		10487675	0					
ANR	10488059	Identifier	temp_buff		10487675	0					
ANR	10488060	Argument	1		10487675	1					
ANR	10488061	PrimaryExpression	1		10487675	0					
ANR	10488062	Argument	size		10487675	2					
ANR	10488063	Identifier	size		10487675	0					
ANR	10488064	Argument	fi		10487675	3					
ANR	10488065	Identifier	fi		10487675	0					
ANR	10488066	ExpressionStatement	"fwrite ( temp_buff , 1 , size , fo )"	350:4:10812:10842	10487675	42	True				
ANR	10488067	CallExpression	"fwrite ( temp_buff , 1 , size , fo )"		10487675	0					
ANR	10488068	Callee	fwrite		10487675	0					
ANR	10488069	Identifier	fwrite		10487675	0					
ANR	10488070	ArgumentList	temp_buff		10487675	1					
ANR	10488071	Argument	temp_buff		10487675	0					
ANR	10488072	Identifier	temp_buff		10487675	0					
ANR	10488073	Argument	1		10487675	1					
ANR	10488074	PrimaryExpression	1		10487675	0					
ANR	10488075	Argument	size		10487675	2					
ANR	10488076	Identifier	size		10487675	0					
ANR	10488077	Argument	fo		10487675	3					
ANR	10488078	Identifier	fo		10487675	0					
ANR	10488079	ExpressionStatement	free ( temp_buff )	351:4:10848:10863	10487675	43	True				
ANR	10488080	CallExpression	free ( temp_buff )		10487675	0					
ANR	10488081	Callee	free		10487675	0					
ANR	10488082	Identifier	free		10487675	0					
ANR	10488083	ArgumentList	temp_buff		10487675	1					
ANR	10488084	Argument	temp_buff		10487675	0					
ANR	10488085	Identifier	temp_buff		10487675	0					
ANR	10488086	ExpressionStatement	count += ( size + 4 )	352:4:10869:10888	10487675	44	True				
ANR	10488087	AssignmentExpression	count += ( size + 4 )		10487675	0		+=			
ANR	10488088	Identifier	count		10487675	0					
ANR	10488089	AdditiveExpression	size + 4		10487675	1		+			
ANR	10488090	Identifier	size		10487675	0					
ANR	10488091	PrimaryExpression	4		10487675	1					
ANR	10488092	ExpressionStatement	"fread ( buf , 1 , 4 , fi )"	355:4:10939:10959	10487675	45	True				
ANR	10488093	CallExpression	"fread ( buf , 1 , 4 , fi )"		10487675	0					
ANR	10488094	Callee	fread		10487675	0					
ANR	10488095	Identifier	fread		10487675	0					
ANR	10488096	ArgumentList	buf		10487675	1					
ANR	10488097	Argument	buf		10487675	0					
ANR	10488098	Identifier	buf		10487675	0					
ANR	10488099	Argument	1		10487675	1					
ANR	10488100	PrimaryExpression	1		10487675	0					
ANR	10488101	Argument	4		10487675	2					
ANR	10488102	PrimaryExpression	4		10487675	0					
ANR	10488103	Argument	fi		10487675	3					
ANR	10488104	Identifier	fi		10487675	0					
ANR	10488105	ExpressionStatement	"get4 ( & size , buf )"	356:4:10965:10982	10487675	46	True				
ANR	10488106	CallExpression	"get4 ( & size , buf )"		10487675	0					
ANR	10488107	Callee	get4		10487675	0					
ANR	10488108	Identifier	get4		10487675	0					
ANR	10488109	ArgumentList	& size		10487675	1					
ANR	10488110	Argument	& size		10487675	0					
ANR	10488111	UnaryOperationExpression	& size		10487675	0					
ANR	10488112	UnaryOperator	&		10487675	0					
ANR	10488113	Identifier	size		10487675	1					
ANR	10488114	Argument	buf		10487675	1					
ANR	10488115	Identifier	buf		10487675	0					
ANR	10488116	ExpressionStatement	"fwrite ( buf , 1 , 4 , fo )"	357:4:10988:11009	10487675	47	True				
ANR	10488117	CallExpression	"fwrite ( buf , 1 , 4 , fo )"		10487675	0					
ANR	10488118	Callee	fwrite		10487675	0					
ANR	10488119	Identifier	fwrite		10487675	0					
ANR	10488120	ArgumentList	buf		10487675	1					
ANR	10488121	Argument	buf		10487675	0					
ANR	10488122	Identifier	buf		10487675	0					
ANR	10488123	Argument	1		10487675	1					
ANR	10488124	PrimaryExpression	1		10487675	0					
ANR	10488125	Argument	4		10487675	2					
ANR	10488126	PrimaryExpression	4		10487675	0					
ANR	10488127	Argument	fo		10487675	3					
ANR	10488128	Identifier	fo		10487675	0					
ANR	10488129	ExpressionStatement	temp_buff = ( uchar * ) malloc ( size )	358:4:11015:11048	10487675	48	True				
ANR	10488130	AssignmentExpression	temp_buff = ( uchar * ) malloc ( size )		10487675	0		=			
ANR	10488131	Identifier	temp_buff		10487675	0					
ANR	10488132	CastExpression	( uchar * ) malloc ( size )		10487675	1					
ANR	10488133	CastTarget	uchar *		10487675	0					
ANR	10488134	CallExpression	malloc ( size )		10487675	1					
ANR	10488135	Callee	malloc		10487675	0					
ANR	10488136	Identifier	malloc		10487675	0					
ANR	10488137	ArgumentList	size		10487675	1					
ANR	10488138	Argument	size		10487675	0					
ANR	10488139	Identifier	size		10487675	0					
ANR	10488140	ExpressionStatement	"fread ( temp_buff , 1 , size , fi )"	359:4:11054:11083	10487675	49	True				
ANR	10488141	CallExpression	"fread ( temp_buff , 1 , size , fi )"		10487675	0					
ANR	10488142	Callee	fread		10487675	0					
ANR	10488143	Identifier	fread		10487675	0					
ANR	10488144	ArgumentList	temp_buff		10487675	1					
ANR	10488145	Argument	temp_buff		10487675	0					
ANR	10488146	Identifier	temp_buff		10487675	0					
ANR	10488147	Argument	1		10487675	1					
ANR	10488148	PrimaryExpression	1		10487675	0					
ANR	10488149	Argument	size		10487675	2					
ANR	10488150	Identifier	size		10487675	0					
ANR	10488151	Argument	fi		10487675	3					
ANR	10488152	Identifier	fi		10487675	0					
ANR	10488153	ExpressionStatement	"fwrite ( temp_buff , 1 , size , fo )"	360:4:11089:11119	10487675	50	True				
ANR	10488154	CallExpression	"fwrite ( temp_buff , 1 , size , fo )"		10487675	0					
ANR	10488155	Callee	fwrite		10487675	0					
ANR	10488156	Identifier	fwrite		10487675	0					
ANR	10488157	ArgumentList	temp_buff		10487675	1					
ANR	10488158	Argument	temp_buff		10487675	0					
ANR	10488159	Identifier	temp_buff		10487675	0					
ANR	10488160	Argument	1		10487675	1					
ANR	10488161	PrimaryExpression	1		10487675	0					
ANR	10488162	Argument	size		10487675	2					
ANR	10488163	Identifier	size		10487675	0					
ANR	10488164	Argument	fo		10487675	3					
ANR	10488165	Identifier	fo		10487675	0					
ANR	10488166	ExpressionStatement	free ( temp_buff )	361:4:11125:11140	10487675	51	True				
ANR	10488167	CallExpression	free ( temp_buff )		10487675	0					
ANR	10488168	Callee	free		10487675	0					
ANR	10488169	Identifier	free		10487675	0					
ANR	10488170	ArgumentList	temp_buff		10487675	1					
ANR	10488171	Argument	temp_buff		10487675	0					
ANR	10488172	Identifier	temp_buff		10487675	0					
ANR	10488173	ExpressionStatement	count += ( size + 4 )	362:4:11146:11165	10487675	52	True				
ANR	10488174	AssignmentExpression	count += ( size + 4 )		10487675	0		+=			
ANR	10488175	Identifier	count		10487675	0					
ANR	10488176	AdditiveExpression	size + 4		10487675	1		+			
ANR	10488177	Identifier	size		10487675	0					
ANR	10488178	PrimaryExpression	4		10487675	1					
ANR	10488179	ExpressionStatement	"fread ( buf , 1 , 2 , fi )"	366:4:11295:11315	10487675	53	True				
ANR	10488180	CallExpression	"fread ( buf , 1 , 2 , fi )"		10487675	0					
ANR	10488181	Callee	fread		10487675	0					
ANR	10488182	Identifier	fread		10487675	0					
ANR	10488183	ArgumentList	buf		10487675	1					
ANR	10488184	Argument	buf		10487675	0					
ANR	10488185	Identifier	buf		10487675	0					
ANR	10488186	Argument	1		10487675	1					
ANR	10488187	PrimaryExpression	1		10487675	0					
ANR	10488188	Argument	2		10487675	2					
ANR	10488189	PrimaryExpression	2		10487675	0					
ANR	10488190	Argument	fi		10487675	3					
ANR	10488191	Identifier	fi		10487675	0					
ANR	10488192	ExpressionStatement	codec = buf [ 1 ]	367:4:11321:11335	10487675	54	True				
ANR	10488193	AssignmentExpression	codec = buf [ 1 ]		10487675	0		=			
ANR	10488194	Identifier	codec		10487675	0					
ANR	10488195	ArrayIndexing	buf [ 1 ]		10487675	1					
ANR	10488196	Identifier	buf		10487675	0					
ANR	10488197	PrimaryExpression	1		10487675	1					
ANR	10488198	IfStatement	if ( ! ( codec == 0 || codec == 1 ) )		10487675	55					
ANR	10488199	Condition	! ( codec == 0 || codec == 1 )	368:8:11345:11371	10487675	0	True				
ANR	10488200	UnaryOperationExpression	! ( codec == 0 || codec == 1 )		10487675	0					
ANR	10488201	UnaryOperator	!		10487675	0					
ANR	10488202	OrExpression	codec == 0 || codec == 1		10487675	1		||			
ANR	10488203	EqualityExpression	codec == 0		10487675	0		==			
ANR	10488204	Identifier	codec		10487675	0					
ANR	10488205	PrimaryExpression	0		10487675	1					
ANR	10488206	EqualityExpression	codec == 1		10487675	1		==			
ANR	10488207	Identifier	codec		10487675	0					
ANR	10488208	PrimaryExpression	1		10487675	1					
ANR	10488209	ExpressionStatement	"die ( ""ZIP data in PSD files not supported"" )"	369:8:11383:11425	10487675	1	True				
ANR	10488210	CallExpression	"die ( ""ZIP data in PSD files not supported"" )"		10487675	0					
ANR	10488211	Callee	die		10487675	0					
ANR	10488212	Identifier	die		10487675	0					
ANR	10488213	ArgumentList	"""ZIP data in PSD files not supported"""		10487675	1					
ANR	10488214	Argument	"""ZIP data in PSD files not supported"""		10487675	0					
ANR	10488215	PrimaryExpression	"""ZIP data in PSD files not supported"""		10487675	0					
ANR	10488216	ExpressionStatement	buf [ 1 ] = 0	371:4:11432:11442	10487675	56	True				
ANR	10488217	AssignmentExpression	buf [ 1 ] = 0		10487675	0		=			
ANR	10488218	ArrayIndexing	buf [ 1 ]		10487675	0					
ANR	10488219	Identifier	buf		10487675	0					
ANR	10488220	PrimaryExpression	1		10487675	1					
ANR	10488221	PrimaryExpression	0		10487675	1					
ANR	10488222	ExpressionStatement	"fwrite ( buf , 1 , 2 , fo )"	372:4:11448:11469	10487675	57	True				
ANR	10488223	CallExpression	"fwrite ( buf , 1 , 2 , fo )"		10487675	0					
ANR	10488224	Callee	fwrite		10487675	0					
ANR	10488225	Identifier	fwrite		10487675	0					
ANR	10488226	ArgumentList	buf		10487675	1					
ANR	10488227	Argument	buf		10487675	0					
ANR	10488228	Identifier	buf		10487675	0					
ANR	10488229	Argument	1		10487675	1					
ANR	10488230	PrimaryExpression	1		10487675	0					
ANR	10488231	Argument	2		10487675	2					
ANR	10488232	PrimaryExpression	2		10487675	0					
ANR	10488233	Argument	fo		10487675	3					
ANR	10488234	Identifier	fo		10487675	0					
ANR	10488235	ExpressionStatement	count += 2	373:4:11475:11485	10487675	58	True				
ANR	10488236	AssignmentExpression	count += 2		10487675	0		+=			
ANR	10488237	Identifier	count		10487675	0					
ANR	10488238	PrimaryExpression	2		10487675	1					
ANR	10488239	IfStatement	if ( codec == 1 && depth == 16 )		10487675	59					
ANR	10488240	Condition	codec == 1 && depth == 16	375:8:11496:11520	10487675	0	True				
ANR	10488241	AndExpression	codec == 1 && depth == 16		10487675	0		&&			
ANR	10488242	EqualityExpression	codec == 1		10487675	0		==			
ANR	10488243	Identifier	codec		10487675	0					
ANR	10488244	PrimaryExpression	1		10487675	1					
ANR	10488245	EqualityExpression	depth == 16		10487675	1		==			
ANR	10488246	Identifier	depth		10487675	0					
ANR	10488247	PrimaryExpression	16		10487675	1					
ANR	10488248	ExpressionStatement	"die ( ""PSD RLE 16 bit files not supported"" )"	376:8:11532:11573	10487675	1	True				
ANR	10488249	CallExpression	"die ( ""PSD RLE 16 bit files not supported"" )"		10487675	0					
ANR	10488250	Callee	die		10487675	0					
ANR	10488251	Identifier	die		10487675	0					
ANR	10488252	ArgumentList	"""PSD RLE 16 bit files not supported"""		10487675	1					
ANR	10488253	Argument	"""PSD RLE 16 bit files not supported"""		10487675	0					
ANR	10488254	PrimaryExpression	"""PSD RLE 16 bit files not supported"""		10487675	0					
ANR	10488255	ExpressionStatement	psd_ctx -> output_buffer = malloc ( num_channel * height * width * bytes )	379:4:11617:11686	10487675	60	True				
ANR	10488256	AssignmentExpression	psd_ctx -> output_buffer = malloc ( num_channel * height * width * bytes )		10487675	0		=			
ANR	10488257	PtrMemberAccess	psd_ctx -> output_buffer		10487675	0					
ANR	10488258	Identifier	psd_ctx		10487675	0					
ANR	10488259	Identifier	output_buffer		10487675	1					
ANR	10488260	CallExpression	malloc ( num_channel * height * width * bytes )		10487675	1					
ANR	10488261	Callee	malloc		10487675	0					
ANR	10488262	Identifier	malloc		10487675	0					
ANR	10488263	ArgumentList	num_channel * height * width * bytes		10487675	1					
ANR	10488264	Argument	num_channel * height * width * bytes		10487675	0					
ANR	10488265	MultiplicativeExpression	num_channel * height * width * bytes		10487675	0		*			
ANR	10488266	Identifier	num_channel		10487675	0					
ANR	10488267	MultiplicativeExpression	height * width * bytes		10487675	1		*			
ANR	10488268	Identifier	height		10487675	0					
ANR	10488269	MultiplicativeExpression	width * bytes		10487675	1		*			
ANR	10488270	Identifier	width		10487675	0					
ANR	10488271	Identifier	bytes		10487675	1					
ANR	10488272	IfStatement	if ( codec == 1 )		10487675	61					
ANR	10488273	Condition	codec == 1	381:8:11697:11706	10487675	0	True				
ANR	10488274	EqualityExpression	codec == 1		10487675	0		==			
ANR	10488275	Identifier	codec		10487675	0					
ANR	10488276	PrimaryExpression	1		10487675	1					
ANR	10488277	CompoundStatement		106:4:2728:2728	10487675	1					
ANR	10488278	ExpressionStatement	data_size = num_channel * height	385:8:11877:11909	10487675	0	True				
ANR	10488279	AssignmentExpression	data_size = num_channel * height		10487675	0		=			
ANR	10488280	Identifier	data_size		10487675	0					
ANR	10488281	MultiplicativeExpression	num_channel * height		10487675	1		*			
ANR	10488282	Identifier	num_channel		10487675	0					
ANR	10488283	Identifier	height		10487675	1					
ANR	10488284	ExpressionStatement	psd_ctx -> row_lengths = ( int * ) malloc ( data_size * sizeof ( int ) )	386:8:11919:11980	10487675	1	True				
ANR	10488285	AssignmentExpression	psd_ctx -> row_lengths = ( int * ) malloc ( data_size * sizeof ( int ) )		10487675	0		=			
ANR	10488286	PtrMemberAccess	psd_ctx -> row_lengths		10487675	0					
ANR	10488287	Identifier	psd_ctx		10487675	0					
ANR	10488288	Identifier	row_lengths		10487675	1					
ANR	10488289	CastExpression	( int * ) malloc ( data_size * sizeof ( int ) )		10487675	1					
ANR	10488290	CastTarget	int *		10487675	0					
ANR	10488291	CallExpression	malloc ( data_size * sizeof ( int ) )		10487675	1					
ANR	10488292	Callee	malloc		10487675	0					
ANR	10488293	Identifier	malloc		10487675	0					
ANR	10488294	ArgumentList	data_size * sizeof ( int )		10487675	1					
ANR	10488295	Argument	data_size * sizeof ( int )		10487675	0					
ANR	10488296	MultiplicativeExpression	data_size * sizeof ( int )		10487675	0		*			
ANR	10488297	Identifier	data_size		10487675	0					
ANR	10488298	SizeofExpression	sizeof ( int )		10487675	1					
ANR	10488299	Sizeof	sizeof		10487675	0					
ANR	10488300	SizeofOperand	int		10487675	1					
ANR	10488301	ExpressionStatement	psd_ctx -> band_file_offset = ( long * ) malloc ( num_channel * sizeof ( long ) )	387:8:11990:12060	10487675	2	True				
ANR	10488302	AssignmentExpression	psd_ctx -> band_file_offset = ( long * ) malloc ( num_channel * sizeof ( long ) )		10487675	0		=			
ANR	10488303	PtrMemberAccess	psd_ctx -> band_file_offset		10487675	0					
ANR	10488304	Identifier	psd_ctx		10487675	0					
ANR	10488305	Identifier	band_file_offset		10487675	1					
ANR	10488306	CastExpression	( long * ) malloc ( num_channel * sizeof ( long ) )		10487675	1					
ANR	10488307	CastTarget	long *		10487675	0					
ANR	10488308	CallExpression	malloc ( num_channel * sizeof ( long ) )		10487675	1					
ANR	10488309	Callee	malloc		10487675	0					
ANR	10488310	Identifier	malloc		10487675	0					
ANR	10488311	ArgumentList	num_channel * sizeof ( long )		10487675	1					
ANR	10488312	Argument	num_channel * sizeof ( long )		10487675	0					
ANR	10488313	MultiplicativeExpression	num_channel * sizeof ( long )		10487675	0		*			
ANR	10488314	Identifier	num_channel		10487675	0					
ANR	10488315	SizeofExpression	sizeof ( long )		10487675	1					
ANR	10488316	Sizeof	sizeof		10487675	0					
ANR	10488317	SizeofOperand	long		10487675	1					
ANR	10488318	ExpressionStatement	psd_ctx -> band_row_length_index = ( int * ) malloc ( num_channel * sizeof ( int ) )	388:8:12070:12143	10487675	3	True				
ANR	10488319	AssignmentExpression	psd_ctx -> band_row_length_index = ( int * ) malloc ( num_channel * sizeof ( int ) )		10487675	0		=			
ANR	10488320	PtrMemberAccess	psd_ctx -> band_row_length_index		10487675	0					
ANR	10488321	Identifier	psd_ctx		10487675	0					
ANR	10488322	Identifier	band_row_length_index		10487675	1					
ANR	10488323	CastExpression	( int * ) malloc ( num_channel * sizeof ( int ) )		10487675	1					
ANR	10488324	CastTarget	int *		10487675	0					
ANR	10488325	CallExpression	malloc ( num_channel * sizeof ( int ) )		10487675	1					
ANR	10488326	Callee	malloc		10487675	0					
ANR	10488327	Identifier	malloc		10487675	0					
ANR	10488328	ArgumentList	num_channel * sizeof ( int )		10487675	1					
ANR	10488329	Argument	num_channel * sizeof ( int )		10487675	0					
ANR	10488330	MultiplicativeExpression	num_channel * sizeof ( int )		10487675	0		*			
ANR	10488331	Identifier	num_channel		10487675	0					
ANR	10488332	SizeofExpression	sizeof ( int )		10487675	1					
ANR	10488333	Sizeof	sizeof		10487675	0					
ANR	10488334	SizeofOperand	int		10487675	1					
ANR	10488335	ExpressionStatement	count += ( 2 * data_size )	389:8:12153:12177	10487675	4	True				
ANR	10488336	AssignmentExpression	count += ( 2 * data_size )		10487675	0		+=			
ANR	10488337	Identifier	count		10487675	0					
ANR	10488338	MultiplicativeExpression	2 * data_size		10487675	1		*			
ANR	10488339	PrimaryExpression	2		10487675	0					
ANR	10488340	Identifier	data_size		10487675	1					
ANR	10488341	ForStatement	for ( jj = 0 ; jj < num_channel ; jj ++ )		10487675	5					
ANR	10488342	ForInit	jj = 0 ;	393:13:12468:12474	10487675	0	True				
ANR	10488343	AssignmentExpression	jj = 0		10487675	0		=			
ANR	10488344	Identifier	jj		10487675	0					
ANR	10488345	PrimaryExpression	0		10487675	1					
ANR	10488346	Condition	jj < num_channel	393:21:12476:12491	10487675	1	True				
ANR	10488347	RelationalExpression	jj < num_channel		10487675	0		<			
ANR	10488348	Identifier	jj		10487675	0					
ANR	10488349	Identifier	num_channel		10487675	1					
ANR	10488350	PostIncDecOperationExpression	jj ++	393:39:12494:12497	10487675	2	True				
ANR	10488351	Identifier	jj		10487675	0					
ANR	10488352	IncDec	++		10487675	1					
ANR	10488353	CompoundStatement		118:8:3523:3523	10487675	3					
ANR	10488354	ExpressionStatement	( psd_ctx -> band_file_offset ) [ jj ] = count + curr_count	395:12:12523:12575	10487675	0	True				
ANR	10488355	AssignmentExpression	( psd_ctx -> band_file_offset ) [ jj ] = count + curr_count		10487675	0		=			
ANR	10488356	ArrayIndexing	( psd_ctx -> band_file_offset ) [ jj ]		10487675	0					
ANR	10488357	PtrMemberAccess	psd_ctx -> band_file_offset		10487675	0					
ANR	10488358	Identifier	psd_ctx		10487675	0					
ANR	10488359	Identifier	band_file_offset		10487675	1					
ANR	10488360	Identifier	jj		10487675	1					
ANR	10488361	AdditiveExpression	count + curr_count		10487675	1		+			
ANR	10488362	Identifier	count		10487675	0					
ANR	10488363	Identifier	curr_count		10487675	1					
ANR	10488364	ForStatement	for ( kk = 0 ; kk < height ; kk ++ )		10487675	1					
ANR	10488365	ForInit	kk = 0 ;	396:17:12595:12601	10487675	0	True				
ANR	10488366	AssignmentExpression	kk = 0		10487675	0		=			
ANR	10488367	Identifier	kk		10487675	0					
ANR	10488368	PrimaryExpression	0		10487675	1					
ANR	10488369	Condition	kk < height	396:25:12603:12613	10487675	1	True				
ANR	10488370	RelationalExpression	kk < height		10487675	0		<			
ANR	10488371	Identifier	kk		10487675	0					
ANR	10488372	Identifier	height		10487675	1					
ANR	10488373	PostIncDecOperationExpression	kk ++	396:38:12616:12619	10487675	2	True				
ANR	10488374	Identifier	kk		10487675	0					
ANR	10488375	IncDec	++		10487675	1					
ANR	10488376	CompoundStatement		121:12:3649:3649	10487675	3					
ANR	10488377	ExpressionStatement	"fread ( buf , 1 , 2 , fi )"	398:16:12653:12673	10487675	0	True				
ANR	10488378	CallExpression	"fread ( buf , 1 , 2 , fi )"		10487675	0					
ANR	10488379	Callee	fread		10487675	0					
ANR	10488380	Identifier	fread		10487675	0					
ANR	10488381	ArgumentList	buf		10487675	1					
ANR	10488382	Argument	buf		10487675	0					
ANR	10488383	Identifier	buf		10487675	0					
ANR	10488384	Argument	1		10487675	1					
ANR	10488385	PrimaryExpression	1		10487675	0					
ANR	10488386	Argument	2		10487675	2					
ANR	10488387	PrimaryExpression	2		10487675	0					
ANR	10488388	Argument	fi		10487675	3					
ANR	10488389	Identifier	fi		10487675	0					
ANR	10488390	ExpressionStatement	"get2 ( & ( ( psd_ctx -> row_lengths ) [ index ] ) , buf )"	399:16:12691:12734	10487675	1	True				
ANR	10488391	CallExpression	"get2 ( & ( ( psd_ctx -> row_lengths ) [ index ] ) , buf )"		10487675	0					
ANR	10488392	Callee	get2		10487675	0					
ANR	10488393	Identifier	get2		10487675	0					
ANR	10488394	ArgumentList	& ( ( psd_ctx -> row_lengths ) [ index ] )		10487675	1					
ANR	10488395	Argument	& ( ( psd_ctx -> row_lengths ) [ index ] )		10487675	0					
ANR	10488396	UnaryOperationExpression	& ( ( psd_ctx -> row_lengths ) [ index ] )		10487675	0					
ANR	10488397	UnaryOperator	&		10487675	0					
ANR	10488398	ArrayIndexing	( psd_ctx -> row_lengths ) [ index ]		10487675	1					
ANR	10488399	PtrMemberAccess	psd_ctx -> row_lengths		10487675	0					
ANR	10488400	Identifier	psd_ctx		10487675	0					
ANR	10488401	Identifier	row_lengths		10487675	1					
ANR	10488402	Identifier	index		10487675	1					
ANR	10488403	Argument	buf		10487675	1					
ANR	10488404	Identifier	buf		10487675	0					
ANR	10488405	IfStatement	if ( maxlength < ( psd_ctx -> row_lengths ) [ index ] )		10487675	2					
ANR	10488406	Condition	maxlength < ( psd_ctx -> row_lengths ) [ index ]	400:20:12756:12796	10487675	0	True				
ANR	10488407	RelationalExpression	maxlength < ( psd_ctx -> row_lengths ) [ index ]		10487675	0		<			
ANR	10488408	Identifier	maxlength		10487675	0					
ANR	10488409	ArrayIndexing	( psd_ctx -> row_lengths ) [ index ]		10487675	1					
ANR	10488410	PtrMemberAccess	psd_ctx -> row_lengths		10487675	0					
ANR	10488411	Identifier	psd_ctx		10487675	0					
ANR	10488412	Identifier	row_lengths		10487675	1					
ANR	10488413	Identifier	index		10487675	1					
ANR	10488414	ExpressionStatement	maxlength = ( psd_ctx -> row_lengths ) [ index ]	401:20:12820:12861	10487675	1	True				
ANR	10488415	AssignmentExpression	maxlength = ( psd_ctx -> row_lengths ) [ index ]		10487675	0		=			
ANR	10488416	Identifier	maxlength		10487675	0					
ANR	10488417	ArrayIndexing	( psd_ctx -> row_lengths ) [ index ]		10487675	1					
ANR	10488418	PtrMemberAccess	psd_ctx -> row_lengths		10487675	0					
ANR	10488419	Identifier	psd_ctx		10487675	0					
ANR	10488420	Identifier	row_lengths		10487675	1					
ANR	10488421	Identifier	index		10487675	1					
ANR	10488422	ExpressionStatement	curr_count = curr_count + ( psd_ctx -> row_lengths ) [ index ]	402:16:12879:12934	10487675	3	True				
ANR	10488423	AssignmentExpression	curr_count = curr_count + ( psd_ctx -> row_lengths ) [ index ]		10487675	0		=			
ANR	10488424	Identifier	curr_count		10487675	0					
ANR	10488425	AdditiveExpression	curr_count + ( psd_ctx -> row_lengths ) [ index ]		10487675	1		+			
ANR	10488426	Identifier	curr_count		10487675	0					
ANR	10488427	ArrayIndexing	( psd_ctx -> row_lengths ) [ index ]		10487675	1					
ANR	10488428	PtrMemberAccess	psd_ctx -> row_lengths		10487675	0					
ANR	10488429	Identifier	psd_ctx		10487675	0					
ANR	10488430	Identifier	row_lengths		10487675	1					
ANR	10488431	Identifier	index		10487675	1					
ANR	10488432	ExpressionStatement	index ++	403:16:12952:12959	10487675	4	True				
ANR	10488433	PostIncDecOperationExpression	index ++		10487675	0					
ANR	10488434	Identifier	index		10487675	0					
ANR	10488435	IncDec	++		10487675	1					
ANR	10488436	ExpressionStatement	psd_ctx -> rle_row = ( void * ) malloc ( maxlength )	406:8:12993:13037	10487675	6	True				
ANR	10488437	AssignmentExpression	psd_ctx -> rle_row = ( void * ) malloc ( maxlength )		10487675	0		=			
ANR	10488438	PtrMemberAccess	psd_ctx -> rle_row		10487675	0					
ANR	10488439	Identifier	psd_ctx		10487675	0					
ANR	10488440	Identifier	rle_row		10487675	1					
ANR	10488441	CastExpression	( void * ) malloc ( maxlength )		10487675	1					
ANR	10488442	CastTarget	void *		10487675	0					
ANR	10488443	CallExpression	malloc ( maxlength )		10487675	1					
ANR	10488444	Callee	malloc		10487675	0					
ANR	10488445	Identifier	malloc		10487675	0					
ANR	10488446	ArgumentList	maxlength		10487675	1					
ANR	10488447	Argument	maxlength		10487675	0					
ANR	10488448	Identifier	maxlength		10487675	0					
ANR	10488449	ExpressionStatement	psd_ctx -> read_line = read_psd_line_rle8	407:8:13047:13086	10487675	7	True				
ANR	10488450	AssignmentExpression	psd_ctx -> read_line = read_psd_line_rle8		10487675	0		=			
ANR	10488451	PtrMemberAccess	psd_ctx -> read_line		10487675	0					
ANR	10488452	Identifier	psd_ctx		10487675	0					
ANR	10488453	Identifier	read_line		10487675	1					
ANR	10488454	Identifier	read_psd_line_rle8		10487675	1					
ANR	10488455	ExpressionStatement	psd_ctx -> write_line = write_psd_line8	408:8:13096:13133	10487675	8	True				
ANR	10488456	AssignmentExpression	psd_ctx -> write_line = write_psd_line8		10487675	0		=			
ANR	10488457	PtrMemberAccess	psd_ctx -> write_line		10487675	0					
ANR	10488458	Identifier	psd_ctx		10487675	0					
ANR	10488459	Identifier	write_line		10487675	1					
ANR	10488460	Identifier	write_psd_line8		10487675	1					
ANR	10488461	ForStatement	for ( kk = 0 ; kk < num_channel ; kk ++ )		10487675	9					
ANR	10488462	ForInit	kk = 0 ;	409:13:13148:13154	10487675	0	True				
ANR	10488463	AssignmentExpression	kk = 0		10487675	0		=			
ANR	10488464	Identifier	kk		10487675	0					
ANR	10488465	PrimaryExpression	0		10487675	1					
ANR	10488466	Condition	kk < num_channel	409:21:13156:13171	10487675	1	True				
ANR	10488467	RelationalExpression	kk < num_channel		10487675	0		<			
ANR	10488468	Identifier	kk		10487675	0					
ANR	10488469	Identifier	num_channel		10487675	1					
ANR	10488470	PostIncDecOperationExpression	kk ++	409:39:13174:13177	10487675	2	True				
ANR	10488471	Identifier	kk		10487675	0					
ANR	10488472	IncDec	++		10487675	1					
ANR	10488473	CompoundStatement		134:8:4202:4202	10487675	3					
ANR	10488474	ExpressionStatement	( psd_ctx -> band_row_length_index ) [ kk ] = kk * height	411:12:13202:13252	10487675	0	True				
ANR	10488475	AssignmentExpression	( psd_ctx -> band_row_length_index ) [ kk ] = kk * height		10487675	0		=			
ANR	10488476	ArrayIndexing	( psd_ctx -> band_row_length_index ) [ kk ]		10487675	0					
ANR	10488477	PtrMemberAccess	psd_ctx -> band_row_length_index		10487675	0					
ANR	10488478	Identifier	psd_ctx		10487675	0					
ANR	10488479	Identifier	band_row_length_index		10487675	1					
ANR	10488480	Identifier	kk		10487675	1					
ANR	10488481	MultiplicativeExpression	kk * height		10487675	1		*			
ANR	10488482	Identifier	kk		10487675	0					
ANR	10488483	Identifier	height		10487675	1					
ANR	10488484	ExpressionStatement	in_buff = ( uchar * ) malloc ( maxlength )	415:8:13337:13373	10487675	10	True				
ANR	10488485	AssignmentExpression	in_buff = ( uchar * ) malloc ( maxlength )		10487675	0		=			
ANR	10488486	Identifier	in_buff		10487675	0					
ANR	10488487	CastExpression	( uchar * ) malloc ( maxlength )		10487675	1					
ANR	10488488	CastTarget	uchar *		10487675	0					
ANR	10488489	CallExpression	malloc ( maxlength )		10487675	1					
ANR	10488490	Callee	malloc		10487675	0					
ANR	10488491	Identifier	malloc		10487675	0					
ANR	10488492	ArgumentList	maxlength		10487675	1					
ANR	10488493	Argument	maxlength		10487675	0					
ANR	10488494	Identifier	maxlength		10487675	0					
ANR	10488495	ExpressionStatement	out_buff = ( uchar * ) malloc ( width )	416:8:13383:13416	10487675	11	True				
ANR	10488496	AssignmentExpression	out_buff = ( uchar * ) malloc ( width )		10487675	0		=			
ANR	10488497	Identifier	out_buff		10487675	0					
ANR	10488498	CastExpression	( uchar * ) malloc ( width )		10487675	1					
ANR	10488499	CastTarget	uchar *		10487675	0					
ANR	10488500	CallExpression	malloc ( width )		10487675	1					
ANR	10488501	Callee	malloc		10487675	0					
ANR	10488502	Identifier	malloc		10487675	0					
ANR	10488503	ArgumentList	width		10487675	1					
ANR	10488504	Argument	width		10487675	0					
ANR	10488505	Identifier	width		10487675	0					
ANR	10488506	ForStatement	for ( kk = 0 ; kk < data_size ; kk ++ )		10487675	12					
ANR	10488507	ForInit	kk = 0 ;	417:13:13431:13437	10487675	0	True				
ANR	10488508	AssignmentExpression	kk = 0		10487675	0		=			
ANR	10488509	Identifier	kk		10487675	0					
ANR	10488510	PrimaryExpression	0		10487675	1					
ANR	10488511	Condition	kk < data_size	417:21:13439:13452	10487675	1	True				
ANR	10488512	RelationalExpression	kk < data_size		10487675	0		<			
ANR	10488513	Identifier	kk		10487675	0					
ANR	10488514	Identifier	data_size		10487675	1					
ANR	10488515	PostIncDecOperationExpression	kk ++	417:37:13455:13458	10487675	2	True				
ANR	10488516	Identifier	kk		10487675	0					
ANR	10488517	IncDec	++		10487675	1					
ANR	10488518	CompoundStatement		142:8:4484:4484	10487675	3					
ANR	10488519	ExpressionStatement	"fread ( in_buff , 1 , ( psd_ctx -> row_lengths ) [ kk ] , fi )"	419:12:13484:13533	10487675	0	True				
ANR	10488520	CallExpression	"fread ( in_buff , 1 , ( psd_ctx -> row_lengths ) [ kk ] , fi )"		10487675	0					
ANR	10488521	Callee	fread		10487675	0					
ANR	10488522	Identifier	fread		10487675	0					
ANR	10488523	ArgumentList	in_buff		10487675	1					
ANR	10488524	Argument	in_buff		10487675	0					
ANR	10488525	Identifier	in_buff		10487675	0					
ANR	10488526	Argument	1		10487675	1					
ANR	10488527	PrimaryExpression	1		10487675	0					
ANR	10488528	Argument	( psd_ctx -> row_lengths ) [ kk ]		10487675	2					
ANR	10488529	ArrayIndexing	( psd_ctx -> row_lengths ) [ kk ]		10487675	0					
ANR	10488530	PtrMemberAccess	psd_ctx -> row_lengths		10487675	0					
ANR	10488531	Identifier	psd_ctx		10487675	0					
ANR	10488532	Identifier	row_lengths		10487675	1					
ANR	10488533	Identifier	kk		10487675	1					
ANR	10488534	Argument	fi		10487675	3					
ANR	10488535	Identifier	fi		10487675	0					
ANR	10488536	ExpressionStatement	"rle_decode ( in_buff , ( psd_ctx -> row_lengths ) [ kk ] , out_buff , width )"	420:12:13547:13611	10487675	1	True				
ANR	10488537	CallExpression	"rle_decode ( in_buff , ( psd_ctx -> row_lengths ) [ kk ] , out_buff , width )"		10487675	0					
ANR	10488538	Callee	rle_decode		10487675	0					
ANR	10488539	Identifier	rle_decode		10487675	0					
ANR	10488540	ArgumentList	in_buff		10487675	1					
ANR	10488541	Argument	in_buff		10487675	0					
ANR	10488542	Identifier	in_buff		10487675	0					
ANR	10488543	Argument	( psd_ctx -> row_lengths ) [ kk ]		10487675	1					
ANR	10488544	ArrayIndexing	( psd_ctx -> row_lengths ) [ kk ]		10487675	0					
ANR	10488545	PtrMemberAccess	psd_ctx -> row_lengths		10487675	0					
ANR	10488546	Identifier	psd_ctx		10487675	0					
ANR	10488547	Identifier	row_lengths		10487675	1					
ANR	10488548	Identifier	kk		10487675	1					
ANR	10488549	Argument	out_buff		10487675	2					
ANR	10488550	Identifier	out_buff		10487675	0					
ANR	10488551	Argument	width		10487675	3					
ANR	10488552	Identifier	width		10487675	0					
ANR	10488553	ExpressionStatement	"fwrite ( out_buff , 1 , width , fo )"	421:12:13626:13656	10487675	2	True				
ANR	10488554	CallExpression	"fwrite ( out_buff , 1 , width , fo )"		10487675	0					
ANR	10488555	Callee	fwrite		10487675	0					
ANR	10488556	Identifier	fwrite		10487675	0					
ANR	10488557	ArgumentList	out_buff		10487675	1					
ANR	10488558	Argument	out_buff		10487675	0					
ANR	10488559	Identifier	out_buff		10487675	0					
ANR	10488560	Argument	1		10487675	1					
ANR	10488561	PrimaryExpression	1		10487675	0					
ANR	10488562	Argument	width		10487675	2					
ANR	10488563	Identifier	width		10487675	0					
ANR	10488564	Argument	fo		10487675	3					
ANR	10488565	Identifier	fo		10487675	0					
ANR	10488566	ExpressionStatement	fclose ( fo )	423:8:13676:13686	10487675	13	True				
ANR	10488567	CallExpression	fclose ( fo )		10487675	0					
ANR	10488568	Callee	fclose		10487675	0					
ANR	10488569	Identifier	fclose		10487675	0					
ANR	10488570	ArgumentList	fo		10487675	1					
ANR	10488571	Argument	fo		10487675	0					
ANR	10488572	Identifier	fo		10487675	0					
ANR	10488573	ExpressionStatement	free ( in_buff )	424:8:13696:13709	10487675	14	True				
ANR	10488574	CallExpression	free ( in_buff )		10487675	0					
ANR	10488575	Callee	free		10487675	0					
ANR	10488576	Identifier	free		10487675	0					
ANR	10488577	ArgumentList	in_buff		10487675	1					
ANR	10488578	Argument	in_buff		10487675	0					
ANR	10488579	Identifier	in_buff		10487675	0					
ANR	10488580	ExpressionStatement	free ( out_buff )	425:8:13719:13733	10487675	15	True				
ANR	10488581	CallExpression	free ( out_buff )		10487675	0					
ANR	10488582	Callee	free		10487675	0					
ANR	10488583	Identifier	free		10487675	0					
ANR	10488584	ArgumentList	out_buff		10487675	1					
ANR	10488585	Argument	out_buff		10487675	0					
ANR	10488586	Identifier	out_buff		10487675	0					
ANR	10488587	ExpressionStatement	"die ( ""Testing case"" )"	426:8:13743:13762	10487675	16	True				
ANR	10488588	CallExpression	"die ( ""Testing case"" )"		10487675	0					
ANR	10488589	Callee	die		10487675	0					
ANR	10488590	Identifier	die		10487675	0					
ANR	10488591	ArgumentList	"""Testing case"""		10487675	1					
ANR	10488592	Argument	"""Testing case"""		10487675	0					
ANR	10488593	PrimaryExpression	"""Testing case"""		10487675	0					
ANR	10488594	ElseStatement	else		10487675	0					
ANR	10488595	CompoundStatement		154:4:4807:4807	10487675	0					
ANR	10488596	ExpressionStatement	psd_ctx -> row_lengths = NULL	432:8:13851:13879	10487675	0	True				
ANR	10488597	AssignmentExpression	psd_ctx -> row_lengths = NULL		10487675	0		=			
ANR	10488598	PtrMemberAccess	psd_ctx -> row_lengths		10487675	0					
ANR	10488599	Identifier	psd_ctx		10487675	0					
ANR	10488600	Identifier	row_lengths		10487675	1					
ANR	10488601	Identifier	NULL		10487675	1					
ANR	10488602	ExpressionStatement	psd_ctx -> rle_row = NULL	433:8:13889:13912	10487675	1	True				
ANR	10488603	AssignmentExpression	psd_ctx -> rle_row = NULL		10487675	0		=			
ANR	10488604	PtrMemberAccess	psd_ctx -> rle_row		10487675	0					
ANR	10488605	Identifier	psd_ctx		10487675	0					
ANR	10488606	Identifier	rle_row		10487675	1					
ANR	10488607	Identifier	NULL		10487675	1					
ANR	10488608	ExpressionStatement	psd_ctx -> band_row_length_index = NULL	434:8:13922:13959	10487675	2	True				
ANR	10488609	AssignmentExpression	psd_ctx -> band_row_length_index = NULL		10487675	0		=			
ANR	10488610	PtrMemberAccess	psd_ctx -> band_row_length_index		10487675	0					
ANR	10488611	Identifier	psd_ctx		10487675	0					
ANR	10488612	Identifier	band_row_length_index		10487675	1					
ANR	10488613	Identifier	NULL		10487675	1					
ANR	10488614	ExpressionStatement	psd_ctx -> band_file_offset = ( long * ) malloc ( num_channel * sizeof ( long ) )	435:8:13969:14039	10487675	3	True				
ANR	10488615	AssignmentExpression	psd_ctx -> band_file_offset = ( long * ) malloc ( num_channel * sizeof ( long ) )		10487675	0		=			
ANR	10488616	PtrMemberAccess	psd_ctx -> band_file_offset		10487675	0					
ANR	10488617	Identifier	psd_ctx		10487675	0					
ANR	10488618	Identifier	band_file_offset		10487675	1					
ANR	10488619	CastExpression	( long * ) malloc ( num_channel * sizeof ( long ) )		10487675	1					
ANR	10488620	CastTarget	long *		10487675	0					
ANR	10488621	CallExpression	malloc ( num_channel * sizeof ( long ) )		10487675	1					
ANR	10488622	Callee	malloc		10487675	0					
ANR	10488623	Identifier	malloc		10487675	0					
ANR	10488624	ArgumentList	num_channel * sizeof ( long )		10487675	1					
ANR	10488625	Argument	num_channel * sizeof ( long )		10487675	0					
ANR	10488626	MultiplicativeExpression	num_channel * sizeof ( long )		10487675	0		*			
ANR	10488627	Identifier	num_channel		10487675	0					
ANR	10488628	SizeofExpression	sizeof ( long )		10487675	1					
ANR	10488629	Sizeof	sizeof		10487675	0					
ANR	10488630	SizeofOperand	long		10487675	1					
ANR	10488631	ForStatement	for ( kk = 0 ; kk < num_channel ; kk ++ )		10487675	4					
ANR	10488632	ForInit	kk = 0 ;	436:13:14054:14060	10487675	0	True				
ANR	10488633	AssignmentExpression	kk = 0		10487675	0		=			
ANR	10488634	Identifier	kk		10487675	0					
ANR	10488635	PrimaryExpression	0		10487675	1					
ANR	10488636	Condition	kk < num_channel	436:21:14062:14077	10487675	1	True				
ANR	10488637	RelationalExpression	kk < num_channel		10487675	0		<			
ANR	10488638	Identifier	kk		10487675	0					
ANR	10488639	Identifier	num_channel		10487675	1					
ANR	10488640	PostIncDecOperationExpression	kk ++	436:39:14080:14083	10487675	2	True				
ANR	10488641	Identifier	kk		10487675	0					
ANR	10488642	IncDec	++		10487675	1					
ANR	10488643	CompoundStatement		161:8:5108:5108	10487675	3					
ANR	10488644	ExpressionStatement	( psd_ctx -> band_file_offset ) [ kk ] = count + height * width * kk * bytes	438:12:14108:14177	10487675	0	True				
ANR	10488645	AssignmentExpression	( psd_ctx -> band_file_offset ) [ kk ] = count + height * width * kk * bytes		10487675	0		=			
ANR	10488646	ArrayIndexing	( psd_ctx -> band_file_offset ) [ kk ]		10487675	0					
ANR	10488647	PtrMemberAccess	psd_ctx -> band_file_offset		10487675	0					
ANR	10488648	Identifier	psd_ctx		10487675	0					
ANR	10488649	Identifier	band_file_offset		10487675	1					
ANR	10488650	Identifier	kk		10487675	1					
ANR	10488651	AdditiveExpression	count + height * width * kk * bytes		10487675	1		+			
ANR	10488652	Identifier	count		10487675	0					
ANR	10488653	MultiplicativeExpression	height * width * kk * bytes		10487675	1		*			
ANR	10488654	Identifier	height		10487675	0					
ANR	10488655	MultiplicativeExpression	width * kk * bytes		10487675	1		*			
ANR	10488656	Identifier	width		10487675	0					
ANR	10488657	MultiplicativeExpression	kk * bytes		10487675	1		*			
ANR	10488658	Identifier	kk		10487675	0					
ANR	10488659	Identifier	bytes		10487675	1					
ANR	10488660	IfStatement	if ( depth == 8 )		10487675	5					
ANR	10488661	Condition	depth == 8	440:12:14202:14211	10487675	0	True				
ANR	10488662	EqualityExpression	depth == 8		10487675	0		==			
ANR	10488663	Identifier	depth		10487675	0					
ANR	10488664	PrimaryExpression	8		10487675	1					
ANR	10488665	CompoundStatement		165:8:5237:5237	10487675	1					
ANR	10488666	ExpressionStatement	psd_ctx -> read_line = read_psd_line8	442:12:14237:14272	10487675	0	True				
ANR	10488667	AssignmentExpression	psd_ctx -> read_line = read_psd_line8		10487675	0		=			
ANR	10488668	PtrMemberAccess	psd_ctx -> read_line		10487675	0					
ANR	10488669	Identifier	psd_ctx		10487675	0					
ANR	10488670	Identifier	read_line		10487675	1					
ANR	10488671	Identifier	read_psd_line8		10487675	1					
ANR	10488672	ExpressionStatement	psd_ctx -> write_line = write_psd_line8	443:12:14286:14323	10487675	1	True				
ANR	10488673	AssignmentExpression	psd_ctx -> write_line = write_psd_line8		10487675	0		=			
ANR	10488674	PtrMemberAccess	psd_ctx -> write_line		10487675	0					
ANR	10488675	Identifier	psd_ctx		10487675	0					
ANR	10488676	Identifier	write_line		10487675	1					
ANR	10488677	Identifier	write_psd_line8		10487675	1					
ANR	10488678	ElseStatement	else		10487675	0					
ANR	10488679	CompoundStatement		170:8:5371:5371	10487675	0					
ANR	10488680	ExpressionStatement	psd_ctx -> read_line = read_psd_line16	447:12:14371:14407	10487675	0	True				
ANR	10488681	AssignmentExpression	psd_ctx -> read_line = read_psd_line16		10487675	0		=			
ANR	10488682	PtrMemberAccess	psd_ctx -> read_line		10487675	0					
ANR	10488683	Identifier	psd_ctx		10487675	0					
ANR	10488684	Identifier	read_line		10487675	1					
ANR	10488685	Identifier	read_psd_line16		10487675	1					
ANR	10488686	ExpressionStatement	psd_ctx -> write_line = write_psd_line8	448:12:14421:14458	10487675	1	True				
ANR	10488687	AssignmentExpression	psd_ctx -> write_line = write_psd_line8		10487675	0		=			
ANR	10488688	PtrMemberAccess	psd_ctx -> write_line		10487675	0					
ANR	10488689	Identifier	psd_ctx		10487675	0					
ANR	10488690	Identifier	write_line		10487675	1					
ANR	10488691	Identifier	write_psd_line8		10487675	1					
ANR	10488692	ExpressionStatement	psd_ctx -> finalize = finalize_psd	451:4:14480:14512	10487675	62	True				
ANR	10488693	AssignmentExpression	psd_ctx -> finalize = finalize_psd		10487675	0		=			
ANR	10488694	PtrMemberAccess	psd_ctx -> finalize		10487675	0					
ANR	10488695	Identifier	psd_ctx		10487675	0					
ANR	10488696	Identifier	finalize		10487675	1					
ANR	10488697	Identifier	finalize_psd		10487675	1					
ANR	10488698	ExpressionStatement	psd_ctx -> permute = ( uchar * ) malloc ( num_channel )	452:4:14518:14565	10487675	63	True				
ANR	10488699	AssignmentExpression	psd_ctx -> permute = ( uchar * ) malloc ( num_channel )		10487675	0		=			
ANR	10488700	PtrMemberAccess	psd_ctx -> permute		10487675	0					
ANR	10488701	Identifier	psd_ctx		10487675	0					
ANR	10488702	Identifier	permute		10487675	1					
ANR	10488703	CastExpression	( uchar * ) malloc ( num_channel )		10487675	1					
ANR	10488704	CastTarget	uchar *		10487675	0					
ANR	10488705	CallExpression	malloc ( num_channel )		10487675	1					
ANR	10488706	Callee	malloc		10487675	0					
ANR	10488707	Identifier	malloc		10487675	0					
ANR	10488708	ArgumentList	num_channel		10487675	1					
ANR	10488709	Argument	num_channel		10487675	0					
ANR	10488710	Identifier	num_channel		10487675	0					
ANR	10488711	ForStatement	for ( kk = 0 ; kk < num_channel ; kk ++ )		10487675	64					
ANR	10488712	ForInit	kk = 0 ;	454:9:14611:14617	10487675	0	True				
ANR	10488713	AssignmentExpression	kk = 0		10487675	0		=			
ANR	10488714	Identifier	kk		10487675	0					
ANR	10488715	PrimaryExpression	0		10487675	1					
ANR	10488716	Condition	kk < num_channel	454:17:14619:14634	10487675	1	True				
ANR	10488717	RelationalExpression	kk < num_channel		10487675	0		<			
ANR	10488718	Identifier	kk		10487675	0					
ANR	10488719	Identifier	num_channel		10487675	1					
ANR	10488720	PostIncDecOperationExpression	kk ++	454:35:14637:14640	10487675	2	True				
ANR	10488721	Identifier	kk		10487675	0					
ANR	10488722	IncDec	++		10487675	1					
ANR	10488723	CompoundStatement		179:4:5661:5661	10487675	3					
ANR	10488724	ExpressionStatement	psd_ctx -> permute [ kk ] = kk	456:8:14657:14682	10487675	0	True				
ANR	10488725	AssignmentExpression	psd_ctx -> permute [ kk ] = kk		10487675	0		=			
ANR	10488726	ArrayIndexing	psd_ctx -> permute [ kk ]		10487675	0					
ANR	10488727	PtrMemberAccess	psd_ctx -> permute		10487675	0					
ANR	10488728	Identifier	psd_ctx		10487675	0					
ANR	10488729	Identifier	permute		10487675	1					
ANR	10488730	Identifier	kk		10487675	1					
ANR	10488731	Identifier	kk		10487675	1					
ANR	10488732	ReturnType	static void		10487675	1					
ANR	10488733	Identifier	read_psd		10487675	2					
ANR	10488734	ParameterList	"FILE * fi , psd_ctx_t * psd_ctx , FILE * fo"		10487675	3					
ANR	10488735	Parameter	FILE * fi	276:21:8945:8952	10487675	0	True				
ANR	10488736	ParameterType	FILE *		10487675	0					
ANR	10488737	Identifier	fi		10487675	1					
ANR	10488738	Parameter	psd_ctx_t * psd_ctx	276:31:8955:8972	10487675	1	True				
ANR	10488739	ParameterType	psd_ctx_t *		10487675	0					
ANR	10488740	Identifier	psd_ctx		10487675	1					
ANR	10488741	Parameter	FILE * fo	276:51:8975:8982	10487675	2	True				
ANR	10488742	ParameterType	FILE *		10487675	0					
ANR	10488743	Identifier	fo		10487675	1					
ANR	10488744	CFGEntryNode	ENTRY		10487675		True				
ANR	10488745	CFGExitNode	EXIT		10487675		True				
ANR	10488746	Symbol	psd_ctx -> num_channels		10487675						
ANR	10488747	Symbol	* * psd_ctx		10487675						
ANR	10488748	Symbol	* psd_ctx -> row_lengths		10487675						
ANR	10488749	Symbol	* kk		10487675						
ANR	10488750	Symbol	* index		10487675						
ANR	10488751	Symbol	read_psd_line16		10487675						
ANR	10488752	Symbol	psd_ctx		10487675						
ANR	10488753	Symbol	& height		10487675						
ANR	10488754	Symbol	psd_ctx -> width		10487675						
ANR	10488755	Symbol	psd_ctx -> write_line		10487675						
ANR	10488756	Symbol	out_buff		10487675						
ANR	10488757	Symbol	psd_ctx -> read_line		10487675						
ANR	10488758	Symbol	psd_ctx -> output_buffer		10487675						
ANR	10488759	Symbol	height		10487675						
ANR	10488760	Symbol	data_size		10487675						
ANR	10488761	Symbol	* psd_ctx -> band_row_length_index		10487675						
ANR	10488762	Symbol	in_buff		10487675						
ANR	10488763	Symbol	* buf		10487675						
ANR	10488764	Symbol	NULL		10487675						
ANR	10488765	Symbol	color_mode		10487675						
ANR	10488766	Symbol	maxlength		10487675						
ANR	10488767	Symbol	write_psd_line8		10487675						
ANR	10488768	Symbol	count		10487675						
ANR	10488769	Symbol	psd_ctx -> band_row_length_index		10487675						
ANR	10488770	Symbol	index		10487675						
ANR	10488771	Symbol	psd_ctx -> permute		10487675						
ANR	10488772	Symbol	codec		10487675						
ANR	10488773	Symbol	size		10487675						
ANR	10488774	Symbol	* psd_ctx -> band_file_offset		10487675						
ANR	10488775	Symbol	temp_buff		10487675						
ANR	10488776	Symbol	* psd_ctx		10487675						
ANR	10488777	Symbol	psd_ctx -> curr_row		10487675						
ANR	10488778	Symbol	psd_ctx -> depth		10487675						
ANR	10488779	Symbol	jj		10487675						
ANR	10488780	Symbol	fi		10487675						
ANR	10488781	Symbol	* psd_ctx -> permute		10487675						
ANR	10488782	Symbol	psd_ctx -> height		10487675						
ANR	10488783	Symbol	fo		10487675						
ANR	10488784	Symbol	& width		10487675						
ANR	10488785	Symbol	finalize_psd		10487675						
ANR	10488786	Symbol	psd_ctx -> finalize		10487675						
ANR	10488787	Symbol	num_channel		10487675						
ANR	10488788	Symbol	psd_ctx -> rle_row		10487675						
ANR	10488789	Symbol	read_psd_line_rle8		10487675						
ANR	10488790	Symbol	psd_ctx -> row_lengths		10487675						
ANR	10488791	Symbol	kk		10487675						
ANR	10488792	Symbol	malloc		10487675						
ANR	10488793	Symbol	ETS_SRC_MAX		10487675						
ANR	10488794	Symbol	* jj		10487675						
ANR	10488795	Symbol	& size		10487675						
ANR	10488796	Symbol	buf		10487675						
ANR	10488797	Symbol	depth		10487675						
ANR	10488798	Symbol	bytes		10487675						
ANR	10488799	Symbol	width		10487675						
ANR	10488800	Symbol	psd_ctx -> band_file_offset		10487675						
ANR	10488801	Symbol	curr_count		10487675						
ANR	10488802	Symbol	read_psd_line8		10487675						
ANR	10488803	Function	read_pgm	460:0:14693:15322							
ANR	10488804	FunctionDef	"read_pgm (FILE * fi , int * xs , int * ys , FILE * fo)"		10488803	0					
ANR	10488805	CompoundStatement		461:0:14752:15322	10488803	0					
ANR	10488806	IdentifierDeclStatement	char buf [ 256 ] ;	462:4:14758:14771	10488803	0	True				
ANR	10488807	IdentifierDecl	buf [ 256 ]		10488803	0					
ANR	10488808	IdentifierDeclType	char [ 256 ]		10488803	0					
ANR	10488809	Identifier	buf		10488803	1					
ANR	10488810	PrimaryExpression	256		10488803	2					
ANR	10488811	IdentifierDeclStatement	int depth ;	463:4:14777:14786	10488803	1	True				
ANR	10488812	IdentifierDecl	depth		10488803	0					
ANR	10488813	IdentifierDeclType	int		10488803	0					
ANR	10488814	Identifier	depth		10488803	1					
ANR	10488815	DoStatement	do		10488803	2					
ANR	10488816	ExpressionStatement	"fgets ( buf , sizeof ( buf ) , fi )"	466:8:14804:14831	10488803	0	True				
ANR	10488817	CallExpression	"fgets ( buf , sizeof ( buf ) , fi )"		10488803	0					
ANR	10488818	Callee	fgets		10488803	0					
ANR	10488819	Identifier	fgets		10488803	0					
ANR	10488820	ArgumentList	buf		10488803	1					
ANR	10488821	Argument	buf		10488803	0					
ANR	10488822	Identifier	buf		10488803	0					
ANR	10488823	Argument	sizeof ( buf )		10488803	1					
ANR	10488824	SizeofExpression	sizeof ( buf )		10488803	0					
ANR	10488825	Sizeof	sizeof		10488803	0					
ANR	10488826	SizeofOperand	buf		10488803	1					
ANR	10488827	Argument	fi		10488803	2					
ANR	10488828	Identifier	fi		10488803	0					
ANR	10488829	Condition	buf [ 0 ] == '#'	467:11:14844:14856	10488803	1	True				
ANR	10488830	EqualityExpression	buf [ 0 ] == '#'		10488803	0		==			
ANR	10488831	ArrayIndexing	buf [ 0 ]		10488803	0					
ANR	10488832	Identifier	buf		10488803	0					
ANR	10488833	PrimaryExpression	0		10488803	1					
ANR	10488834	PrimaryExpression	'#'		10488803	1					
ANR	10488835	ExpressionStatement	"sscanf ( buf , ""%d"" , xs )"	468:4:14864:14886	10488803	3	True				
ANR	10488836	CallExpression	"sscanf ( buf , ""%d"" , xs )"		10488803	0					
ANR	10488837	Callee	sscanf		10488803	0					
ANR	10488838	Identifier	sscanf		10488803	0					
ANR	10488839	ArgumentList	buf		10488803	1					
ANR	10488840	Argument	buf		10488803	0					
ANR	10488841	Identifier	buf		10488803	0					
ANR	10488842	Argument	"""%d"""		10488803	1					
ANR	10488843	PrimaryExpression	"""%d"""		10488803	0					
ANR	10488844	Argument	xs		10488803	2					
ANR	10488845	Identifier	xs		10488803	0					
ANR	10488846	DoStatement	do		10488803	4					
ANR	10488847	ExpressionStatement	"fgets ( buf , sizeof ( buf ) , fi )"	470:8:14903:14931	10488803	0	True				
ANR	10488848	CallExpression	"fgets ( buf , sizeof ( buf ) , fi )"		10488803	0					
ANR	10488849	Callee	fgets		10488803	0					
ANR	10488850	Identifier	fgets		10488803	0					
ANR	10488851	ArgumentList	buf		10488803	1					
ANR	10488852	Argument	buf		10488803	0					
ANR	10488853	Identifier	buf		10488803	0					
ANR	10488854	Argument	sizeof ( buf )		10488803	1					
ANR	10488855	SizeofExpression	sizeof ( buf )		10488803	0					
ANR	10488856	Sizeof	sizeof		10488803	0					
ANR	10488857	SizeofOperand	buf		10488803	1					
ANR	10488858	Argument	fi		10488803	2					
ANR	10488859	Identifier	fi		10488803	0					
ANR	10488860	Condition	buf [ 0 ] == '#'	471:11:14944:14956	10488803	1	True				
ANR	10488861	EqualityExpression	buf [ 0 ] == '#'		10488803	0		==			
ANR	10488862	ArrayIndexing	buf [ 0 ]		10488803	0					
ANR	10488863	Identifier	buf		10488803	0					
ANR	10488864	PrimaryExpression	0		10488803	1					
ANR	10488865	PrimaryExpression	'#'		10488803	1					
ANR	10488866	ExpressionStatement	"sscanf ( buf , ""%d"" , ys )"	472:4:14964:14986	10488803	5	True				
ANR	10488867	CallExpression	"sscanf ( buf , ""%d"" , ys )"		10488803	0					
ANR	10488868	Callee	sscanf		10488803	0					
ANR	10488869	Identifier	sscanf		10488803	0					
ANR	10488870	ArgumentList	buf		10488803	1					
ANR	10488871	Argument	buf		10488803	0					
ANR	10488872	Identifier	buf		10488803	0					
ANR	10488873	Argument	"""%d"""		10488803	1					
ANR	10488874	PrimaryExpression	"""%d"""		10488803	0					
ANR	10488875	Argument	ys		10488803	2					
ANR	10488876	Identifier	ys		10488803	0					
ANR	10488877	IfStatement	if ( * xs <= 0 || * ys <= 0 || * xs > MAX_SIZE || * ys > MAX_SIZE )		10488803	6					
ANR	10488878	Condition	* xs <= 0 || * ys <= 0 || * xs > MAX_SIZE || * ys > MAX_SIZE	473:8:14996:15051	10488803	0	True				
ANR	10488879	OrExpression	* xs <= 0 || * ys <= 0 || * xs > MAX_SIZE || * ys > MAX_SIZE		10488803	0		||			
ANR	10488880	RelationalExpression	* xs <= 0		10488803	0		<=			
ANR	10488881	UnaryOperationExpression	* xs		10488803	0					
ANR	10488882	UnaryOperator	*		10488803	0					
ANR	10488883	Identifier	xs		10488803	1					
ANR	10488884	PrimaryExpression	0		10488803	1					
ANR	10488885	OrExpression	* ys <= 0 || * xs > MAX_SIZE || * ys > MAX_SIZE		10488803	1		||			
ANR	10488886	RelationalExpression	* ys <= 0		10488803	0		<=			
ANR	10488887	UnaryOperationExpression	* ys		10488803	0					
ANR	10488888	UnaryOperator	*		10488803	0					
ANR	10488889	Identifier	ys		10488803	1					
ANR	10488890	PrimaryExpression	0		10488803	1					
ANR	10488891	OrExpression	* xs > MAX_SIZE || * ys > MAX_SIZE		10488803	1		||			
ANR	10488892	RelationalExpression	* xs > MAX_SIZE		10488803	0		>			
ANR	10488893	UnaryOperationExpression	* xs		10488803	0					
ANR	10488894	UnaryOperator	*		10488803	0					
ANR	10488895	Identifier	xs		10488803	1					
ANR	10488896	Identifier	MAX_SIZE		10488803	1					
ANR	10488897	RelationalExpression	* ys > MAX_SIZE		10488803	1		>			
ANR	10488898	UnaryOperationExpression	* ys		10488803	0					
ANR	10488899	UnaryOperator	*		10488803	0					
ANR	10488900	Identifier	ys		10488803	1					
ANR	10488901	Identifier	MAX_SIZE		10488803	1					
ANR	10488902	ExpressionStatement	"die ( ""Input image size out of range"" )"	474:8:15062:15098	10488803	1	True				
ANR	10488903	CallExpression	"die ( ""Input image size out of range"" )"		10488803	0					
ANR	10488904	Callee	die		10488803	0					
ANR	10488905	Identifier	die		10488803	0					
ANR	10488906	ArgumentList	"""Input image size out of range"""		10488803	1					
ANR	10488907	Argument	"""Input image size out of range"""		10488803	0					
ANR	10488908	PrimaryExpression	"""Input image size out of range"""		10488803	0					
ANR	10488909	DoStatement	do		10488803	7					
ANR	10488910	ExpressionStatement	"fgets ( buf , sizeof ( buf ) , fi )"	477:8:15116:15143	10488803	0	True				
ANR	10488911	CallExpression	"fgets ( buf , sizeof ( buf ) , fi )"		10488803	0					
ANR	10488912	Callee	fgets		10488803	0					
ANR	10488913	Identifier	fgets		10488803	0					
ANR	10488914	ArgumentList	buf		10488803	1					
ANR	10488915	Argument	buf		10488803	0					
ANR	10488916	Identifier	buf		10488803	0					
ANR	10488917	Argument	sizeof ( buf )		10488803	1					
ANR	10488918	SizeofExpression	sizeof ( buf )		10488803	0					
ANR	10488919	Sizeof	sizeof		10488803	0					
ANR	10488920	SizeofOperand	buf		10488803	1					
ANR	10488921	Argument	fi		10488803	2					
ANR	10488922	Identifier	fi		10488803	0					
ANR	10488923	Condition	buf [ 0 ] == '#'	478:11:15156:15168	10488803	1	True				
ANR	10488924	EqualityExpression	buf [ 0 ] == '#'		10488803	0		==			
ANR	10488925	ArrayIndexing	buf [ 0 ]		10488803	0					
ANR	10488926	Identifier	buf		10488803	0					
ANR	10488927	PrimaryExpression	0		10488803	1					
ANR	10488928	PrimaryExpression	'#'		10488803	1					
ANR	10488929	ExpressionStatement	"sscanf ( buf , ""%d"" , & depth )"	479:4:15176:15201	10488803	8	True				
ANR	10488930	CallExpression	"sscanf ( buf , ""%d"" , & depth )"		10488803	0					
ANR	10488931	Callee	sscanf		10488803	0					
ANR	10488932	Identifier	sscanf		10488803	0					
ANR	10488933	ArgumentList	buf		10488803	1					
ANR	10488934	Argument	buf		10488803	0					
ANR	10488935	Identifier	buf		10488803	0					
ANR	10488936	Argument	"""%d"""		10488803	1					
ANR	10488937	PrimaryExpression	"""%d"""		10488803	0					
ANR	10488938	Argument	& depth		10488803	2					
ANR	10488939	UnaryOperationExpression	& depth		10488803	0					
ANR	10488940	UnaryOperator	&		10488803	0					
ANR	10488941	Identifier	depth		10488803	1					
ANR	10488942	IfStatement	if ( depth != 255 )		10488803	9					
ANR	10488943	Condition	depth != 255	480:8:15211:15222	10488803	0	True				
ANR	10488944	EqualityExpression	depth != 255		10488803	0		!=			
ANR	10488945	Identifier	depth		10488803	0					
ANR	10488946	PrimaryExpression	255		10488803	1					
ANR	10488947	ExpressionStatement	"die ( ""Only works with depth=255 images"" )"	481:8:15233:15272	10488803	1	True				
ANR	10488948	CallExpression	"die ( ""Only works with depth=255 images"" )"		10488803	0					
ANR	10488949	Callee	die		10488803	0					
ANR	10488950	Identifier	die		10488803	0					
ANR	10488951	ArgumentList	"""Only works with depth=255 images"""		10488803	1					
ANR	10488952	Argument	"""Only works with depth=255 images"""		10488803	0					
ANR	10488953	PrimaryExpression	"""Only works with depth=255 images"""		10488803	0					
ANR	10488954	ExpressionStatement	"fprintf ( fo , ""P5\\n%d %d\\n255\\n"" , * xs , * ys )"	483:4:15279:15320	10488803	10	True				
ANR	10488955	CallExpression	"fprintf ( fo , ""P5\\n%d %d\\n255\\n"" , * xs , * ys )"		10488803	0					
ANR	10488956	Callee	fprintf		10488803	0					
ANR	10488957	Identifier	fprintf		10488803	0					
ANR	10488958	ArgumentList	fo		10488803	1					
ANR	10488959	Argument	fo		10488803	0					
ANR	10488960	Identifier	fo		10488803	0					
ANR	10488961	Argument	"""P5\\n%d %d\\n255\\n"""		10488803	1					
ANR	10488962	PrimaryExpression	"""P5\\n%d %d\\n255\\n"""		10488803	0					
ANR	10488963	Argument	* xs		10488803	2					
ANR	10488964	UnaryOperationExpression	* xs		10488803	0					
ANR	10488965	UnaryOperator	*		10488803	0					
ANR	10488966	Identifier	xs		10488803	1					
ANR	10488967	Argument	* ys		10488803	3					
ANR	10488968	UnaryOperationExpression	* ys		10488803	0					
ANR	10488969	UnaryOperator	*		10488803	0					
ANR	10488970	Identifier	ys		10488803	1					
ANR	10488971	ReturnType	static void		10488803	1					
ANR	10488972	Identifier	read_pgm		10488803	2					
ANR	10488973	ParameterList	"FILE * fi , int * xs , int * ys , FILE * fo"		10488803	3					
ANR	10488974	Parameter	FILE * fi	460:21:14714:14721	10488803	0	True				
ANR	10488975	ParameterType	FILE *		10488803	0					
ANR	10488976	Identifier	fi		10488803	1					
ANR	10488977	Parameter	int * xs	460:31:14724:14730	10488803	1	True				
ANR	10488978	ParameterType	int *		10488803	0					
ANR	10488979	Identifier	xs		10488803	1					
ANR	10488980	Parameter	int * ys	460:40:14733:14739	10488803	2	True				
ANR	10488981	ParameterType	int *		10488803	0					
ANR	10488982	Identifier	ys		10488803	1					
ANR	10488983	Parameter	FILE * fo	460:49:14742:14749	10488803	3	True				
ANR	10488984	ParameterType	FILE *		10488803	0					
ANR	10488985	Identifier	fo		10488803	1					
ANR	10488986	CFGEntryNode	ENTRY		10488803		True				
ANR	10488987	CFGExitNode	EXIT		10488803		True				
ANR	10488988	Symbol	& depth		10488803						
ANR	10488989	Symbol	buf		10488803						
ANR	10488990	Symbol	* buf		10488803						
ANR	10488991	Symbol	* xs		10488803						
ANR	10488992	Symbol	fi		10488803						
ANR	10488993	Symbol	depth		10488803						
ANR	10488994	Symbol	* ys		10488803						
ANR	10488995	Symbol	MAX_SIZE		10488803						
ANR	10488996	Symbol	fo		10488803						
ANR	10488997	Symbol	ys		10488803						
ANR	10488998	Symbol	xs		10488803						
ANR	10488999	Function	read_pam	486:0:15325:16985							
ANR	10489000	FunctionDef	"read_pam (FILE * fi , int * xs , int * ys , FILE * fo)"		10488999	0					
ANR	10489001	CompoundStatement		487:0:15383:16985	10488999	0					
ANR	10489002	IdentifierDeclStatement	char buf [ 256 ] ;	488:4:15389:15402	10488999	0	True				
ANR	10489003	IdentifierDecl	buf [ 256 ]		10488999	0					
ANR	10489004	IdentifierDeclType	char [ 256 ]		10488999	0					
ANR	10489005	Identifier	buf		10488999	1					
ANR	10489006	PrimaryExpression	256		10488999	2					
ANR	10489007	IdentifierDeclStatement	"int i , depth ;"	489:4:15408:15420	10488999	1	True				
ANR	10489008	IdentifierDecl	i		10488999	0					
ANR	10489009	IdentifierDeclType	int		10488999	0					
ANR	10489010	Identifier	i		10488999	1					
ANR	10489011	IdentifierDecl	depth		10488999	1					
ANR	10489012	IdentifierDeclType	int		10488999	0					
ANR	10489013	Identifier	depth		10488999	1					
ANR	10489014	IdentifierDeclStatement	char c ;	490:4:15426:15432	10488999	2	True				
ANR	10489015	IdentifierDecl	c		10488999	0					
ANR	10489016	IdentifierDeclType	char		10488999	0					
ANR	10489017	Identifier	c		10488999	1					
ANR	10489018	ExpressionStatement	"fprintf ( fo , ""P7\\n"" )"	492:4:15439:15458	10488999	3	True				
ANR	10489019	CallExpression	"fprintf ( fo , ""P7\\n"" )"		10488999	0					
ANR	10489020	Callee	fprintf		10488999	0					
ANR	10489021	Identifier	fprintf		10488999	0					
ANR	10489022	ArgumentList	fo		10488999	1					
ANR	10489023	Argument	fo		10488999	0					
ANR	10489024	Identifier	fo		10488999	0					
ANR	10489025	Argument	"""P7\\n"""		10488999	1					
ANR	10489026	PrimaryExpression	"""P7\\n"""		10488999	0					
ANR	10489027	DoStatement	do		10488999	4					
ANR	10489028	CompoundStatement		9:4:88:88	10488999	0					
ANR	10489029	ExpressionStatement	"fgets ( buf , sizeof ( buf ) , fi )"	496:8:15482:15509	10488999	0	True				
ANR	10489030	CallExpression	"fgets ( buf , sizeof ( buf ) , fi )"		10488999	0					
ANR	10489031	Callee	fgets		10488999	0					
ANR	10489032	Identifier	fgets		10488999	0					
ANR	10489033	ArgumentList	buf		10488999	1					
ANR	10489034	Argument	buf		10488999	0					
ANR	10489035	Identifier	buf		10488999	0					
ANR	10489036	Argument	sizeof ( buf )		10488999	1					
ANR	10489037	SizeofExpression	sizeof ( buf )		10488999	0					
ANR	10489038	Sizeof	sizeof		10488999	0					
ANR	10489039	SizeofOperand	buf		10488999	1					
ANR	10489040	Argument	fi		10488999	2					
ANR	10489041	Identifier	fi		10488999	0					
ANR	10489042	IfStatement	if ( buf [ 0 ] == '#' )		10488999	1					
ANR	10489043	Condition	buf [ 0 ] == '#'	497:12:15523:15535	10488999	0	True				
ANR	10489044	EqualityExpression	buf [ 0 ] == '#'		10488999	0		==			
ANR	10489045	ArrayIndexing	buf [ 0 ]		10488999	0					
ANR	10489046	Identifier	buf		10488999	0					
ANR	10489047	PrimaryExpression	0		10488999	1					
ANR	10489048	PrimaryExpression	'#'		10488999	1					
ANR	10489049	CompoundStatement		12:8:162:162	10488999	1					
ANR	10489050	ExpressionStatement	"fprintf ( fo , ""%s"" , buf )"	499:12:15560:15582	10488999	0	True				
ANR	10489051	CallExpression	"fprintf ( fo , ""%s"" , buf )"		10488999	0					
ANR	10489052	Callee	fprintf		10488999	0					
ANR	10489053	Identifier	fprintf		10488999	0					
ANR	10489054	ArgumentList	fo		10488999	1					
ANR	10489055	Argument	fo		10488999	0					
ANR	10489056	Identifier	fo		10488999	0					
ANR	10489057	Argument	"""%s"""		10488999	1					
ANR	10489058	PrimaryExpression	"""%s"""		10488999	0					
ANR	10489059	Argument	buf		10488999	2					
ANR	10489060	Identifier	buf		10488999	0					
ANR	10489061	ContinueStatement	continue ;	500:12:15596:15604	10488999	1	True				
ANR	10489062	IfStatement	if ( buf [ 0 ] == '\\n' || buf [ 0 ] == '\\r' )		10488999	2					
ANR	10489063	Condition	buf [ 0 ] == '\\n' || buf [ 0 ] == '\\r'	502:12:15628:15659	10488999	0	True				
ANR	10489064	OrExpression	buf [ 0 ] == '\\n' || buf [ 0 ] == '\\r'		10488999	0		||			
ANR	10489065	EqualityExpression	buf [ 0 ] == '\\n'		10488999	0		==			
ANR	10489066	ArrayIndexing	buf [ 0 ]		10488999	0					
ANR	10489067	Identifier	buf		10488999	0					
ANR	10489068	PrimaryExpression	0		10488999	1					
ANR	10489069	PrimaryExpression	'\\n'		10488999	1					
ANR	10489070	EqualityExpression	buf [ 0 ] == '\\r'		10488999	1		==			
ANR	10489071	ArrayIndexing	buf [ 0 ]		10488999	0					
ANR	10489072	Identifier	buf		10488999	0					
ANR	10489073	PrimaryExpression	0		10488999	1					
ANR	10489074	PrimaryExpression	'\\r'		10488999	1					
ANR	10489075	ContinueStatement	continue ;	503:12:15674:15682	10488999	1	True				
ANR	10489076	IfStatement	"if ( sscanf ( buf , ""WIDTH %d"" , xs ) )"		10488999	3					
ANR	10489077	Condition	"sscanf ( buf , ""WIDTH %d"" , xs )"	504:12:15696:15722	10488999	0	True				
ANR	10489078	CallExpression	"sscanf ( buf , ""WIDTH %d"" , xs )"		10488999	0					
ANR	10489079	Callee	sscanf		10488999	0					
ANR	10489080	Identifier	sscanf		10488999	0					
ANR	10489081	ArgumentList	buf		10488999	1					
ANR	10489082	Argument	buf		10488999	0					
ANR	10489083	Identifier	buf		10488999	0					
ANR	10489084	Argument	"""WIDTH %d"""		10488999	1					
ANR	10489085	PrimaryExpression	"""WIDTH %d"""		10488999	0					
ANR	10489086	Argument	xs		10488999	2					
ANR	10489087	Identifier	xs		10488999	0					
ANR	10489088	CompoundStatement		19:8:349:349	10488999	1					
ANR	10489089	ExpressionStatement	"fprintf ( fo , ""WIDTH %d\\n"" , * xs )"	506:12:15747:15777	10488999	0	True				
ANR	10489090	CallExpression	"fprintf ( fo , ""WIDTH %d\\n"" , * xs )"		10488999	0					
ANR	10489091	Callee	fprintf		10488999	0					
ANR	10489092	Identifier	fprintf		10488999	0					
ANR	10489093	ArgumentList	fo		10488999	1					
ANR	10489094	Argument	fo		10488999	0					
ANR	10489095	Identifier	fo		10488999	0					
ANR	10489096	Argument	"""WIDTH %d\\n"""		10488999	1					
ANR	10489097	PrimaryExpression	"""WIDTH %d\\n"""		10488999	0					
ANR	10489098	Argument	* xs		10488999	2					
ANR	10489099	UnaryOperationExpression	* xs		10488999	0					
ANR	10489100	UnaryOperator	*		10488999	0					
ANR	10489101	Identifier	xs		10488999	1					
ANR	10489102	ElseStatement	else		10488999	0					
ANR	10489103	IfStatement	"if ( sscanf ( buf , ""HEIGHT %d"" , ys ) )"		10488999	0					
ANR	10489104	Condition	"sscanf ( buf , ""HEIGHT %d"" , ys )"	508:17:15806:15833	10488999	0	True				
ANR	10489105	CallExpression	"sscanf ( buf , ""HEIGHT %d"" , ys )"		10488999	0					
ANR	10489106	Callee	sscanf		10488999	0					
ANR	10489107	Identifier	sscanf		10488999	0					
ANR	10489108	ArgumentList	buf		10488999	1					
ANR	10489109	Argument	buf		10488999	0					
ANR	10489110	Identifier	buf		10488999	0					
ANR	10489111	Argument	"""HEIGHT %d"""		10488999	1					
ANR	10489112	PrimaryExpression	"""HEIGHT %d"""		10488999	0					
ANR	10489113	Argument	ys		10488999	2					
ANR	10489114	Identifier	ys		10488999	0					
ANR	10489115	CompoundStatement		23:8:460:460	10488999	1					
ANR	10489116	ExpressionStatement	"fprintf ( fo , ""HEIGHT %d\\n"" , * ys )"	510:12:15858:15889	10488999	0	True				
ANR	10489117	CallExpression	"fprintf ( fo , ""HEIGHT %d\\n"" , * ys )"		10488999	0					
ANR	10489118	Callee	fprintf		10488999	0					
ANR	10489119	Identifier	fprintf		10488999	0					
ANR	10489120	ArgumentList	fo		10488999	1					
ANR	10489121	Argument	fo		10488999	0					
ANR	10489122	Identifier	fo		10488999	0					
ANR	10489123	Argument	"""HEIGHT %d\\n"""		10488999	1					
ANR	10489124	PrimaryExpression	"""HEIGHT %d\\n"""		10488999	0					
ANR	10489125	Argument	* ys		10488999	2					
ANR	10489126	UnaryOperationExpression	* ys		10488999	0					
ANR	10489127	UnaryOperator	*		10488999	0					
ANR	10489128	Identifier	ys		10488999	1					
ANR	10489129	ElseStatement	else		10488999	0					
ANR	10489130	IfStatement	"if ( sscanf ( buf , ""DEPTH %d"" , & depth ) )"		10488999	0					
ANR	10489131	Condition	"sscanf ( buf , ""DEPTH %d"" , & depth )"	512:17:15918:15948	10488999	0	True				
ANR	10489132	CallExpression	"sscanf ( buf , ""DEPTH %d"" , & depth )"		10488999	0					
ANR	10489133	Callee	sscanf		10488999	0					
ANR	10489134	Identifier	sscanf		10488999	0					
ANR	10489135	ArgumentList	buf		10488999	1					
ANR	10489136	Argument	buf		10488999	0					
ANR	10489137	Identifier	buf		10488999	0					
ANR	10489138	Argument	"""DEPTH %d"""		10488999	1					
ANR	10489139	PrimaryExpression	"""DEPTH %d"""		10488999	0					
ANR	10489140	Argument	& depth		10488999	2					
ANR	10489141	UnaryOperationExpression	& depth		10488999	0					
ANR	10489142	UnaryOperator	&		10488999	0					
ANR	10489143	Identifier	depth		10488999	1					
ANR	10489144	CompoundStatement		27:8:575:575	10488999	1					
ANR	10489145	IfStatement	if ( depth < 4 )		10488999	0					
ANR	10489146	Condition	depth < 4	514:16:15977:15985	10488999	0	True				
ANR	10489147	RelationalExpression	depth < 4		10488999	0		<			
ANR	10489148	Identifier	depth		10488999	0					
ANR	10489149	PrimaryExpression	4		10488999	1					
ANR	10489150	ExpressionStatement	"die ( ""Only CMYK/DEVN pams supported"" )"	515:16:16004:16040	10488999	1	True				
ANR	10489151	CallExpression	"die ( ""Only CMYK/DEVN pams supported"" )"		10488999	0					
ANR	10489152	Callee	die		10488999	0					
ANR	10489153	Identifier	die		10488999	0					
ANR	10489154	ArgumentList	"""Only CMYK/DEVN pams supported"""		10488999	1					
ANR	10489155	Argument	"""Only CMYK/DEVN pams supported"""		10488999	0					
ANR	10489156	PrimaryExpression	"""Only CMYK/DEVN pams supported"""		10488999	0					
ANR	10489157	ExpressionStatement	"fprintf ( fo , ""DEPTH %d\\n"" , depth )"	516:12:16054:16086	10488999	1	True				
ANR	10489158	CallExpression	"fprintf ( fo , ""DEPTH %d\\n"" , depth )"		10488999	0					
ANR	10489159	Callee	fprintf		10488999	0					
ANR	10489160	Identifier	fprintf		10488999	0					
ANR	10489161	ArgumentList	fo		10488999	1					
ANR	10489162	Argument	fo		10488999	0					
ANR	10489163	Identifier	fo		10488999	0					
ANR	10489164	Argument	"""DEPTH %d\\n"""		10488999	1					
ANR	10489165	PrimaryExpression	"""DEPTH %d\\n"""		10488999	0					
ANR	10489166	Argument	depth		10488999	2					
ANR	10489167	Identifier	depth		10488999	0					
ANR	10489168	ElseStatement	else		10488999	0					
ANR	10489169	IfStatement	"if ( sscanf ( buf , ""MAXVAL %d"" , & i ) )"		10488999	0					
ANR	10489170	Condition	"sscanf ( buf , ""MAXVAL %d"" , & i )"	518:17:16115:16142	10488999	0	True				
ANR	10489171	CallExpression	"sscanf ( buf , ""MAXVAL %d"" , & i )"		10488999	0					
ANR	10489172	Callee	sscanf		10488999	0					
ANR	10489173	Identifier	sscanf		10488999	0					
ANR	10489174	ArgumentList	buf		10488999	1					
ANR	10489175	Argument	buf		10488999	0					
ANR	10489176	Identifier	buf		10488999	0					
ANR	10489177	Argument	"""MAXVAL %d"""		10488999	1					
ANR	10489178	PrimaryExpression	"""MAXVAL %d"""		10488999	0					
ANR	10489179	Argument	& i		10488999	2					
ANR	10489180	UnaryOperationExpression	& i		10488999	0					
ANR	10489181	UnaryOperator	&		10488999	0					
ANR	10489182	Identifier	i		10488999	1					
ANR	10489183	CompoundStatement		33:8:769:769	10488999	1					
ANR	10489184	IfStatement	if ( i != 255 )		10488999	0					
ANR	10489185	Condition	i != 255	520:16:16171:16178	10488999	0	True				
ANR	10489186	EqualityExpression	i != 255		10488999	0		!=			
ANR	10489187	Identifier	i		10488999	0					
ANR	10489188	PrimaryExpression	255		10488999	1					
ANR	10489189	ExpressionStatement	"die ( ""Only pams with MAXVAL=255 supported"" )"	521:16:16197:16239	10488999	1	True				
ANR	10489190	CallExpression	"die ( ""Only pams with MAXVAL=255 supported"" )"		10488999	0					
ANR	10489191	Callee	die		10488999	0					
ANR	10489192	Identifier	die		10488999	0					
ANR	10489193	ArgumentList	"""Only pams with MAXVAL=255 supported"""		10488999	1					
ANR	10489194	Argument	"""Only pams with MAXVAL=255 supported"""		10488999	0					
ANR	10489195	PrimaryExpression	"""Only pams with MAXVAL=255 supported"""		10488999	0					
ANR	10489196	ExpressionStatement	"fprintf ( fo , ""MAXVAL 255\\n"" )"	522:12:16253:16280	10488999	1	True				
ANR	10489197	CallExpression	"fprintf ( fo , ""MAXVAL 255\\n"" )"		10488999	0					
ANR	10489198	Callee	fprintf		10488999	0					
ANR	10489199	Identifier	fprintf		10488999	0					
ANR	10489200	ArgumentList	fo		10488999	1					
ANR	10489201	Argument	fo		10488999	0					
ANR	10489202	Identifier	fo		10488999	0					
ANR	10489203	Argument	"""MAXVAL 255\\n"""		10488999	1					
ANR	10489204	PrimaryExpression	"""MAXVAL 255\\n"""		10488999	0					
ANR	10489205	ElseStatement	else		10488999	0					
ANR	10489206	IfStatement	"if ( sscanf ( buf , ""TUPLTYPE DEV%c"" , & c ) && c == 'N' )"		10488999	0					
ANR	10489207	Condition	"sscanf ( buf , ""TUPLTYPE DEV%c"" , & c ) && c == 'N'"	524:17:16309:16353	10488999	0	True				
ANR	10489208	AndExpression	"sscanf ( buf , ""TUPLTYPE DEV%c"" , & c ) && c == 'N'"		10488999	0		&&			
ANR	10489209	CallExpression	"sscanf ( buf , ""TUPLTYPE DEV%c"" , & c )"		10488999	0					
ANR	10489210	Callee	sscanf		10488999	0					
ANR	10489211	Identifier	sscanf		10488999	0					
ANR	10489212	ArgumentList	buf		10488999	1					
ANR	10489213	Argument	buf		10488999	0					
ANR	10489214	Identifier	buf		10488999	0					
ANR	10489215	Argument	"""TUPLTYPE DEV%c"""		10488999	1					
ANR	10489216	PrimaryExpression	"""TUPLTYPE DEV%c"""		10488999	0					
ANR	10489217	Argument	& c		10488999	2					
ANR	10489218	UnaryOperationExpression	& c		10488999	0					
ANR	10489219	UnaryOperator	&		10488999	0					
ANR	10489220	Identifier	c		10488999	1					
ANR	10489221	EqualityExpression	c == 'N'		10488999	1		==			
ANR	10489222	Identifier	c		10488999	0					
ANR	10489223	PrimaryExpression	'N'		10488999	1					
ANR	10489224	CompoundStatement		39:8:980:980	10488999	1					
ANR	10489225	ExpressionStatement	"fprintf ( fo , ""TUPLTYPE DEVN\\n"" )"	526:12:16378:16408	10488999	0	True				
ANR	10489226	CallExpression	"fprintf ( fo , ""TUPLTYPE DEVN\\n"" )"		10488999	0					
ANR	10489227	Callee	fprintf		10488999	0					
ANR	10489228	Identifier	fprintf		10488999	0					
ANR	10489229	ArgumentList	fo		10488999	1					
ANR	10489230	Argument	fo		10488999	0					
ANR	10489231	Identifier	fo		10488999	0					
ANR	10489232	Argument	"""TUPLTYPE DEVN\\n"""		10488999	1					
ANR	10489233	PrimaryExpression	"""TUPLTYPE DEVN\\n"""		10488999	0					
ANR	10489234	ElseStatement	else		10488999	0					
ANR	10489235	IfStatement	"if ( sscanf ( buf , ""TUPLTYPE CMY%c"" , & c ) && c == 'K' )"		10488999	0					
ANR	10489236	Condition	"sscanf ( buf , ""TUPLTYPE CMY%c"" , & c ) && c == 'K'"	528:17:16437:16481	10488999	0	True				
ANR	10489237	AndExpression	"sscanf ( buf , ""TUPLTYPE CMY%c"" , & c ) && c == 'K'"		10488999	0		&&			
ANR	10489238	CallExpression	"sscanf ( buf , ""TUPLTYPE CMY%c"" , & c )"		10488999	0					
ANR	10489239	Callee	sscanf		10488999	0					
ANR	10489240	Identifier	sscanf		10488999	0					
ANR	10489241	ArgumentList	buf		10488999	1					
ANR	10489242	Argument	buf		10488999	0					
ANR	10489243	Identifier	buf		10488999	0					
ANR	10489244	Argument	"""TUPLTYPE CMY%c"""		10488999	1					
ANR	10489245	PrimaryExpression	"""TUPLTYPE CMY%c"""		10488999	0					
ANR	10489246	Argument	& c		10488999	2					
ANR	10489247	UnaryOperationExpression	& c		10488999	0					
ANR	10489248	UnaryOperator	&		10488999	0					
ANR	10489249	Identifier	c		10488999	1					
ANR	10489250	EqualityExpression	c == 'K'		10488999	1		==			
ANR	10489251	Identifier	c		10488999	0					
ANR	10489252	PrimaryExpression	'K'		10488999	1					
ANR	10489253	CompoundStatement		43:8:1108:1108	10488999	1					
ANR	10489254	ExpressionStatement	"fprintf ( fo , ""TUPLTYPE CMYK\\n"" )"	530:12:16506:16536	10488999	0	True				
ANR	10489255	CallExpression	"fprintf ( fo , ""TUPLTYPE CMYK\\n"" )"		10488999	0					
ANR	10489256	Callee	fprintf		10488999	0					
ANR	10489257	Identifier	fprintf		10488999	0					
ANR	10489258	ArgumentList	fo		10488999	1					
ANR	10489259	Argument	fo		10488999	0					
ANR	10489260	Identifier	fo		10488999	0					
ANR	10489261	Argument	"""TUPLTYPE CMYK\\n"""		10488999	1					
ANR	10489262	PrimaryExpression	"""TUPLTYPE CMYK\\n"""		10488999	0					
ANR	10489263	ElseStatement	else		10488999	0					
ANR	10489264	IfStatement	"if ( sscanf ( buf , ""TUPLTYP%c"" ) && c == 'E' )"		10488999	0					
ANR	10489265	Condition	"sscanf ( buf , ""TUPLTYP%c"" ) && c == 'E'"	532:17:16565:16600	10488999	0	True				
ANR	10489266	AndExpression	"sscanf ( buf , ""TUPLTYP%c"" ) && c == 'E'"		10488999	0		&&			
ANR	10489267	CallExpression	"sscanf ( buf , ""TUPLTYP%c"" )"		10488999	0					
ANR	10489268	Callee	sscanf		10488999	0					
ANR	10489269	Identifier	sscanf		10488999	0					
ANR	10489270	ArgumentList	buf		10488999	1					
ANR	10489271	Argument	buf		10488999	0					
ANR	10489272	Identifier	buf		10488999	0					
ANR	10489273	Argument	"""TUPLTYP%c"""		10488999	1					
ANR	10489274	PrimaryExpression	"""TUPLTYP%c"""		10488999	0					
ANR	10489275	EqualityExpression	c == 'E'		10488999	1		==			
ANR	10489276	Identifier	c		10488999	0					
ANR	10489277	PrimaryExpression	'E'		10488999	1					
ANR	10489278	CompoundStatement		47:8:1227:1227	10488999	1					
ANR	10489279	ExpressionStatement	"die ( ""Only CMYK/DEVN pams supported"" )"	534:12:16625:16661	10488999	0	True				
ANR	10489280	CallExpression	"die ( ""Only CMYK/DEVN pams supported"" )"		10488999	0					
ANR	10489281	Callee	die		10488999	0					
ANR	10489282	Identifier	die		10488999	0					
ANR	10489283	ArgumentList	"""Only CMYK/DEVN pams supported"""		10488999	1					
ANR	10489284	Argument	"""Only CMYK/DEVN pams supported"""		10488999	0					
ANR	10489285	PrimaryExpression	"""Only CMYK/DEVN pams supported"""		10488999	0					
ANR	10489286	ElseStatement	else		10488999	0					
ANR	10489287	IfStatement	"if ( sscanf ( buf , ""ENDHD%c"" , & c ) && c == 'R' )"		10488999	0					
ANR	10489288	Condition	"sscanf ( buf , ""ENDHD%c"" , & c ) && c == 'R'"	536:17:16690:16727	10488999	0	True				
ANR	10489289	AndExpression	"sscanf ( buf , ""ENDHD%c"" , & c ) && c == 'R'"		10488999	0		&&			
ANR	10489290	CallExpression	"sscanf ( buf , ""ENDHD%c"" , & c )"		10488999	0					
ANR	10489291	Callee	sscanf		10488999	0					
ANR	10489292	Identifier	sscanf		10488999	0					
ANR	10489293	ArgumentList	buf		10488999	1					
ANR	10489294	Argument	buf		10488999	0					
ANR	10489295	Identifier	buf		10488999	0					
ANR	10489296	Argument	"""ENDHD%c"""		10488999	1					
ANR	10489297	PrimaryExpression	"""ENDHD%c"""		10488999	0					
ANR	10489298	Argument	& c		10488999	2					
ANR	10489299	UnaryOperationExpression	& c		10488999	0					
ANR	10489300	UnaryOperator	&		10488999	0					
ANR	10489301	Identifier	c		10488999	1					
ANR	10489302	EqualityExpression	c == 'R'		10488999	1		==			
ANR	10489303	Identifier	c		10488999	0					
ANR	10489304	PrimaryExpression	'R'		10488999	1					
ANR	10489305	CompoundStatement		51:8:1354:1354	10488999	1					
ANR	10489306	ExpressionStatement	"fprintf ( fo , ""ENDHDR\\n"" )"	538:12:16752:16775	10488999	0	True				
ANR	10489307	CallExpression	"fprintf ( fo , ""ENDHDR\\n"" )"		10488999	0					
ANR	10489308	Callee	fprintf		10488999	0					
ANR	10489309	Identifier	fprintf		10488999	0					
ANR	10489310	ArgumentList	fo		10488999	1					
ANR	10489311	Argument	fo		10488999	0					
ANR	10489312	Identifier	fo		10488999	0					
ANR	10489313	Argument	"""ENDHDR\\n"""		10488999	1					
ANR	10489314	PrimaryExpression	"""ENDHDR\\n"""		10488999	0					
ANR	10489315	BreakStatement	break ;	539:12:16789:16794	10488999	1	True				
ANR	10489316	ElseStatement	else		10488999	0					
ANR	10489317	CompoundStatement		56:8:1443:1443	10488999	0					
ANR	10489318	ExpressionStatement	"printf ( stderr , ""Unknown header field: %s\\n"" , buf )"	543:12:16841:16890	10488999	0	True				
ANR	10489319	CallExpression	"printf ( stderr , ""Unknown header field: %s\\n"" , buf )"		10488999	0					
ANR	10489320	Callee	printf		10488999	0					
ANR	10489321	Identifier	printf		10488999	0					
ANR	10489322	ArgumentList	stderr		10488999	1					
ANR	10489323	Argument	stderr		10488999	0					
ANR	10489324	Identifier	stderr		10488999	0					
ANR	10489325	Argument	"""Unknown header field: %s\\n"""		10488999	1					
ANR	10489326	PrimaryExpression	"""Unknown header field: %s\\n"""		10488999	0					
ANR	10489327	Argument	buf		10488999	2					
ANR	10489328	Identifier	buf		10488999	0					
ANR	10489329	ExpressionStatement	"die ( ""Unknown header field\\n"" )"	544:12:16904:16933	10488999	1	True				
ANR	10489330	CallExpression	"die ( ""Unknown header field\\n"" )"		10488999	0					
ANR	10489331	Callee	die		10488999	0					
ANR	10489332	Identifier	die		10488999	0					
ANR	10489333	ArgumentList	"""Unknown header field\\n"""		10488999	1					
ANR	10489334	Argument	"""Unknown header field\\n"""		10488999	0					
ANR	10489335	PrimaryExpression	"""Unknown header field\\n"""		10488999	0					
ANR	10489336	Condition	1	547:11:16962:16962	10488999	1	True				
ANR	10489337	PrimaryExpression	1		10488999	0					
ANR	10489338	ReturnStatement	return depth ;	549:4:16971:16983	10488999	5	True				
ANR	10489339	Identifier	depth		10488999	0					
ANR	10489340	ReturnType	static int		10488999	1					
ANR	10489341	Identifier	read_pam		10488999	2					
ANR	10489342	ParameterList	"FILE * fi , int * xs , int * ys , FILE * fo"		10488999	3					
ANR	10489343	Parameter	FILE * fi	486:20:15345:15352	10488999	0	True				
ANR	10489344	ParameterType	FILE *		10488999	0					
ANR	10489345	Identifier	fi		10488999	1					
ANR	10489346	Parameter	int * xs	486:30:15355:15361	10488999	1	True				
ANR	10489347	ParameterType	int *		10488999	0					
ANR	10489348	Identifier	xs		10488999	1					
ANR	10489349	Parameter	int * ys	486:39:15364:15370	10488999	2	True				
ANR	10489350	ParameterType	int *		10488999	0					
ANR	10489351	Identifier	ys		10488999	1					
ANR	10489352	Parameter	FILE * fo	486:48:15373:15380	10488999	3	True				
ANR	10489353	ParameterType	FILE *		10488999	0					
ANR	10489354	Identifier	fo		10488999	1					
ANR	10489355	CFGEntryNode	ENTRY		10488999		True				
ANR	10489356	CFGExitNode	EXIT		10488999		True				
ANR	10489357	Symbol	* buf		10488999						
ANR	10489358	Symbol	* xs		10488999						
ANR	10489359	Symbol	fi		10488999						
ANR	10489360	Symbol	c		10488999						
ANR	10489361	Symbol	* ys		10488999						
ANR	10489362	Symbol	fo		10488999						
ANR	10489363	Symbol	i		10488999						
ANR	10489364	Symbol	& c		10488999						
ANR	10489365	Symbol	stderr		10488999						
ANR	10489366	Symbol	& i		10488999						
ANR	10489367	Symbol	& depth		10488999						
ANR	10489368	Symbol	buf		10488999						
ANR	10489369	Symbol	depth		10488999						
ANR	10489370	Symbol	sscanf		10488999						
ANR	10489371	Symbol	ys		10488999						
ANR	10489372	Symbol	xs		10488999						
ANR	10489373	Function	read_pgm_line	552:0:16988:17245							
ANR	10489374	FunctionDef	"read_pgm_line (ETS_SrcPixel * * ibufs , int xs , FILE * fi , int planes , void * image_ctx)"		10489373	0					
ANR	10489375	CompoundStatement		554:0:17110:17245	10489373	0					
ANR	10489376	IdentifierDeclStatement	int nbytes ;	555:4:17116:17126	10489373	0	True				
ANR	10489377	IdentifierDecl	nbytes		10489373	0					
ANR	10489378	IdentifierDeclType	int		10489373	0					
ANR	10489379	Identifier	nbytes		10489373	1					
ANR	10489380	ExpressionStatement	"nbytes = fread ( ibufs [ 0 ] , 1 , xs , fi )"	556:4:17132:17167	10489373	1	True				
ANR	10489381	AssignmentExpression	"nbytes = fread ( ibufs [ 0 ] , 1 , xs , fi )"		10489373	0		=			
ANR	10489382	Identifier	nbytes		10489373	0					
ANR	10489383	CallExpression	"fread ( ibufs [ 0 ] , 1 , xs , fi )"		10489373	1					
ANR	10489384	Callee	fread		10489373	0					
ANR	10489385	Identifier	fread		10489373	0					
ANR	10489386	ArgumentList	ibufs [ 0 ]		10489373	1					
ANR	10489387	Argument	ibufs [ 0 ]		10489373	0					
ANR	10489388	ArrayIndexing	ibufs [ 0 ]		10489373	0					
ANR	10489389	Identifier	ibufs		10489373	0					
ANR	10489390	PrimaryExpression	0		10489373	1					
ANR	10489391	Argument	1		10489373	1					
ANR	10489392	PrimaryExpression	1		10489373	0					
ANR	10489393	Argument	xs		10489373	2					
ANR	10489394	Identifier	xs		10489373	0					
ANR	10489395	Argument	fi		10489373	3					
ANR	10489396	Identifier	fi		10489373	0					
ANR	10489397	IfStatement	if ( nbytes != xs )		10489373	2					
ANR	10489398	Condition	nbytes != xs	557:8:17177:17188	10489373	0	True				
ANR	10489399	EqualityExpression	nbytes != xs		10489373	0		!=			
ANR	10489400	Identifier	nbytes		10489373	0					
ANR	10489401	Identifier	xs		10489373	1					
ANR	10489402	ExpressionStatement	"die ( ""Error reading image (file truncated?)"" )"	558:8:17199:17243	10489373	1	True				
ANR	10489403	CallExpression	"die ( ""Error reading image (file truncated?)"" )"		10489373	0					
ANR	10489404	Callee	die		10489373	0					
ANR	10489405	Identifier	die		10489373	0					
ANR	10489406	ArgumentList	"""Error reading image (file truncated?)"""		10489373	1					
ANR	10489407	Argument	"""Error reading image (file truncated?)"""		10489373	0					
ANR	10489408	PrimaryExpression	"""Error reading image (file truncated?)"""		10489373	0					
ANR	10489409	ReturnType	static void		10489373	1					
ANR	10489410	Identifier	read_pgm_line		10489373	2					
ANR	10489411	ParameterList	"ETS_SrcPixel * * ibufs , int xs , FILE * fi , int planes , void * image_ctx"		10489373	3					
ANR	10489412	Parameter	ETS_SrcPixel * * ibufs	552:26:17014:17033	10489373	0	True				
ANR	10489413	ParameterType	ETS_SrcPixel * *		10489373	0					
ANR	10489414	Identifier	ibufs		10489373	1					
ANR	10489415	Parameter	int xs	552:48:17036:17041	10489373	1	True				
ANR	10489416	ParameterType	int		10489373	0					
ANR	10489417	Identifier	xs		10489373	1					
ANR	10489418	Parameter	FILE * fi	552:56:17044:17051	10489373	2	True				
ANR	10489419	ParameterType	FILE *		10489373	0					
ANR	10489420	Identifier	fi		10489373	1					
ANR	10489421	Parameter	int planes	552:66:17054:17063	10489373	3	True				
ANR	10489422	ParameterType	int		10489373	0					
ANR	10489423	Identifier	planes		10489373	1					
ANR	10489424	Parameter	void * image_ctx	553:26:17093:17107	10489373	4	True				
ANR	10489425	ParameterType	void *		10489373	0					
ANR	10489426	Identifier	image_ctx		10489373	1					
ANR	10489427	CFGEntryNode	ENTRY		10489373		True				
ANR	10489428	CFGExitNode	EXIT		10489373		True				
ANR	10489429	Symbol	fi		10489373						
ANR	10489430	Symbol	* ibufs		10489373						
ANR	10489431	Symbol	planes		10489373						
ANR	10489432	Symbol	xs		10489373						
ANR	10489433	Symbol	ibufs		10489373						
ANR	10489434	Symbol	image_ctx		10489373						
ANR	10489435	Symbol	fread		10489373						
ANR	10489436	Symbol	nbytes		10489373						
ANR	10489437	Function	read_pam_line	561:0:17248:17755							
ANR	10489438	FunctionDef	"read_pam_line (ETS_SrcPixel * * ibufs , int xs , FILE * fi , int planes , void * image_ctx)"		10489437	0					
ANR	10489439	CompoundStatement		563:0:17370:17755	10489437	0					
ANR	10489440	IdentifierDeclStatement	"int i , j , c = 0 ;"	564:4:17376:17391	10489437	0	True				
ANR	10489441	IdentifierDecl	i		10489437	0					
ANR	10489442	IdentifierDeclType	int		10489437	0					
ANR	10489443	Identifier	i		10489437	1					
ANR	10489444	IdentifierDecl	j		10489437	1					
ANR	10489445	IdentifierDeclType	int		10489437	0					
ANR	10489446	Identifier	j		10489437	1					
ANR	10489447	IdentifierDecl	c = 0		10489437	2					
ANR	10489448	IdentifierDeclType	int		10489437	0					
ANR	10489449	Identifier	c		10489437	1					
ANR	10489450	AssignmentExpression	c = 0		10489437	2		=			
ANR	10489451	Identifier	c		10489437	0					
ANR	10489452	PrimaryExpression	0		10489437	1					
ANR	10489453	ForStatement	for ( i = 0 ; i < xs && c != EOF ; i ++ )		10489437	1					
ANR	10489454	ForInit	i = 0 ;	566:9:17403:17408	10489437	0	True				
ANR	10489455	AssignmentExpression	i = 0		10489437	0		=			
ANR	10489456	Identifier	i		10489437	0					
ANR	10489457	PrimaryExpression	0		10489437	1					
ANR	10489458	Condition	i < xs && c != EOF	566:16:17410:17427	10489437	1	True				
ANR	10489459	AndExpression	i < xs && c != EOF		10489437	0		&&			
ANR	10489460	RelationalExpression	i < xs		10489437	0		<			
ANR	10489461	Identifier	i		10489437	0					
ANR	10489462	Identifier	xs		10489437	1					
ANR	10489463	EqualityExpression	c != EOF		10489437	1		!=			
ANR	10489464	Identifier	c		10489437	0					
ANR	10489465	Identifier	EOF		10489437	1					
ANR	10489466	PostIncDecOperationExpression	i ++	566:36:17430:17432	10489437	2	True				
ANR	10489467	Identifier	i		10489437	0					
ANR	10489468	IncDec	++		10489437	1					
ANR	10489469	CompoundStatement		5:4:68:68	10489437	3					
ANR	10489470	ExpressionStatement	ibufs [ 1 ] [ i ] = 255 - fgetc ( fi )	568:8:17449:17476	10489437	0	True				
ANR	10489471	AssignmentExpression	ibufs [ 1 ] [ i ] = 255 - fgetc ( fi )		10489437	0		=			
ANR	10489472	ArrayIndexing	ibufs [ 1 ] [ i ]		10489437	0					
ANR	10489473	ArrayIndexing	ibufs [ 1 ]		10489437	0					
ANR	10489474	Identifier	ibufs		10489437	0					
ANR	10489475	PrimaryExpression	1		10489437	1					
ANR	10489476	Identifier	i		10489437	1					
ANR	10489477	AdditiveExpression	255 - fgetc ( fi )		10489437	1		-			
ANR	10489478	PrimaryExpression	255		10489437	0					
ANR	10489479	CallExpression	fgetc ( fi )		10489437	1					
ANR	10489480	Callee	fgetc		10489437	0					
ANR	10489481	Identifier	fgetc		10489437	0					
ANR	10489482	ArgumentList	fi		10489437	1					
ANR	10489483	Argument	fi		10489437	0					
ANR	10489484	Identifier	fi		10489437	0					
ANR	10489485	ExpressionStatement	ibufs [ 2 ] [ i ] = 255 - fgetc ( fi )	569:8:17486:17513	10489437	1	True				
ANR	10489486	AssignmentExpression	ibufs [ 2 ] [ i ] = 255 - fgetc ( fi )		10489437	0		=			
ANR	10489487	ArrayIndexing	ibufs [ 2 ] [ i ]		10489437	0					
ANR	10489488	ArrayIndexing	ibufs [ 2 ]		10489437	0					
ANR	10489489	Identifier	ibufs		10489437	0					
ANR	10489490	PrimaryExpression	2		10489437	1					
ANR	10489491	Identifier	i		10489437	1					
ANR	10489492	AdditiveExpression	255 - fgetc ( fi )		10489437	1		-			
ANR	10489493	PrimaryExpression	255		10489437	0					
ANR	10489494	CallExpression	fgetc ( fi )		10489437	1					
ANR	10489495	Callee	fgetc		10489437	0					
ANR	10489496	Identifier	fgetc		10489437	0					
ANR	10489497	ArgumentList	fi		10489437	1					
ANR	10489498	Argument	fi		10489437	0					
ANR	10489499	Identifier	fi		10489437	0					
ANR	10489500	ExpressionStatement	ibufs [ 3 ] [ i ] = 255 - fgetc ( fi )	570:8:17523:17550	10489437	2	True				
ANR	10489501	AssignmentExpression	ibufs [ 3 ] [ i ] = 255 - fgetc ( fi )		10489437	0		=			
ANR	10489502	ArrayIndexing	ibufs [ 3 ] [ i ]		10489437	0					
ANR	10489503	ArrayIndexing	ibufs [ 3 ]		10489437	0					
ANR	10489504	Identifier	ibufs		10489437	0					
ANR	10489505	PrimaryExpression	3		10489437	1					
ANR	10489506	Identifier	i		10489437	1					
ANR	10489507	AdditiveExpression	255 - fgetc ( fi )		10489437	1		-			
ANR	10489508	PrimaryExpression	255		10489437	0					
ANR	10489509	CallExpression	fgetc ( fi )		10489437	1					
ANR	10489510	Callee	fgetc		10489437	0					
ANR	10489511	Identifier	fgetc		10489437	0					
ANR	10489512	ArgumentList	fi		10489437	1					
ANR	10489513	Argument	fi		10489437	0					
ANR	10489514	Identifier	fi		10489437	0					
ANR	10489515	ExpressionStatement	ibufs [ 0 ] [ i ] = 255 - ( c = fgetc ( fi ) )	571:8:17560:17593	10489437	3	True				
ANR	10489516	AssignmentExpression	ibufs [ 0 ] [ i ] = 255 - ( c = fgetc ( fi ) )		10489437	0		=			
ANR	10489517	ArrayIndexing	ibufs [ 0 ] [ i ]		10489437	0					
ANR	10489518	ArrayIndexing	ibufs [ 0 ]		10489437	0					
ANR	10489519	Identifier	ibufs		10489437	0					
ANR	10489520	PrimaryExpression	0		10489437	1					
ANR	10489521	Identifier	i		10489437	1					
ANR	10489522	AdditiveExpression	255 - ( c = fgetc ( fi ) )		10489437	1		-			
ANR	10489523	PrimaryExpression	255		10489437	0					
ANR	10489524	AssignmentExpression	c = fgetc ( fi )		10489437	1		=			
ANR	10489525	Identifier	c		10489437	0					
ANR	10489526	CallExpression	fgetc ( fi )		10489437	1					
ANR	10489527	Callee	fgetc		10489437	0					
ANR	10489528	Identifier	fgetc		10489437	0					
ANR	10489529	ArgumentList	fi		10489437	1					
ANR	10489530	Argument	fi		10489437	0					
ANR	10489531	Identifier	fi		10489437	0					
ANR	10489532	ForStatement	for ( j = 4 ; j < planes ; j ++ )		10489437	4					
ANR	10489533	ForInit	j = 4 ;	572:13:17608:17611	10489437	0	True				
ANR	10489534	AssignmentExpression	j = 4		10489437	0		=			
ANR	10489535	Identifier	j		10489437	0					
ANR	10489536	PrimaryExpression	4		10489437	1					
ANR	10489537	Condition	j < planes	572:18:17613:17622	10489437	1	True				
ANR	10489538	RelationalExpression	j < planes		10489437	0		<			
ANR	10489539	Identifier	j		10489437	0					
ANR	10489540	Identifier	planes		10489437	1					
ANR	10489541	PostIncDecOperationExpression	j ++	572:30:17625:17627	10489437	2	True				
ANR	10489542	Identifier	j		10489437	0					
ANR	10489543	IncDec	++		10489437	1					
ANR	10489544	ExpressionStatement	ibufs [ j ] [ i ] = 255 - ( c = fgetc ( fi ) )	573:12:17642:17675	10489437	3	True				
ANR	10489545	AssignmentExpression	ibufs [ j ] [ i ] = 255 - ( c = fgetc ( fi ) )		10489437	0		=			
ANR	10489546	ArrayIndexing	ibufs [ j ] [ i ]		10489437	0					
ANR	10489547	ArrayIndexing	ibufs [ j ]		10489437	0					
ANR	10489548	Identifier	ibufs		10489437	0					
ANR	10489549	Identifier	j		10489437	1					
ANR	10489550	Identifier	i		10489437	1					
ANR	10489551	AdditiveExpression	255 - ( c = fgetc ( fi ) )		10489437	1		-			
ANR	10489552	PrimaryExpression	255		10489437	0					
ANR	10489553	AssignmentExpression	c = fgetc ( fi )		10489437	1		=			
ANR	10489554	Identifier	c		10489437	0					
ANR	10489555	CallExpression	fgetc ( fi )		10489437	1					
ANR	10489556	Callee	fgetc		10489437	0					
ANR	10489557	Identifier	fgetc		10489437	0					
ANR	10489558	ArgumentList	fi		10489437	1					
ANR	10489559	Argument	fi		10489437	0					
ANR	10489560	Identifier	fi		10489437	0					
ANR	10489561	IfStatement	if ( c == EOF )		10489437	2					
ANR	10489562	Condition	c == EOF	575:8:17691:17698	10489437	0	True				
ANR	10489563	EqualityExpression	c == EOF		10489437	0		==			
ANR	10489564	Identifier	c		10489437	0					
ANR	10489565	Identifier	EOF		10489437	1					
ANR	10489566	ExpressionStatement	"die ( ""Error reading image (file truncated?)"" )"	576:8:17709:17753	10489437	1	True				
ANR	10489567	CallExpression	"die ( ""Error reading image (file truncated?)"" )"		10489437	0					
ANR	10489568	Callee	die		10489437	0					
ANR	10489569	Identifier	die		10489437	0					
ANR	10489570	ArgumentList	"""Error reading image (file truncated?)"""		10489437	1					
ANR	10489571	Argument	"""Error reading image (file truncated?)"""		10489437	0					
ANR	10489572	PrimaryExpression	"""Error reading image (file truncated?)"""		10489437	0					
ANR	10489573	ReturnType	static void		10489437	1					
ANR	10489574	Identifier	read_pam_line		10489437	2					
ANR	10489575	ParameterList	"ETS_SrcPixel * * ibufs , int xs , FILE * fi , int planes , void * image_ctx"		10489437	3					
ANR	10489576	Parameter	ETS_SrcPixel * * ibufs	561:26:17274:17293	10489437	0	True				
ANR	10489577	ParameterType	ETS_SrcPixel * *		10489437	0					
ANR	10489578	Identifier	ibufs		10489437	1					
ANR	10489579	Parameter	int xs	561:48:17296:17301	10489437	1	True				
ANR	10489580	ParameterType	int		10489437	0					
ANR	10489581	Identifier	xs		10489437	1					
ANR	10489582	Parameter	FILE * fi	561:56:17304:17311	10489437	2	True				
ANR	10489583	ParameterType	FILE *		10489437	0					
ANR	10489584	Identifier	fi		10489437	1					
ANR	10489585	Parameter	int planes	561:66:17314:17323	10489437	3	True				
ANR	10489586	ParameterType	int		10489437	0					
ANR	10489587	Identifier	planes		10489437	1					
ANR	10489588	Parameter	void * image_ctx	562:26:17353:17367	10489437	4	True				
ANR	10489589	ParameterType	void *		10489437	0					
ANR	10489590	Identifier	image_ctx		10489437	1					
ANR	10489591	CFGEntryNode	ENTRY		10489437		True				
ANR	10489592	CFGExitNode	EXIT		10489437		True				
ANR	10489593	Symbol	* * j		10489437						
ANR	10489594	Symbol	fi		10489437						
ANR	10489595	Symbol	c		10489437						
ANR	10489596	Symbol	* ibufs		10489437						
ANR	10489597	Symbol	planes		10489437						
ANR	10489598	Symbol	i		10489437						
ANR	10489599	Symbol	j		10489437						
ANR	10489600	Symbol	* * ibufs		10489437						
ANR	10489601	Symbol	image_ctx		10489437						
ANR	10489602	Symbol	* i		10489437						
ANR	10489603	Symbol	* j		10489437						
ANR	10489604	Symbol	xs		10489437						
ANR	10489605	Symbol	ibufs		10489437						
ANR	10489606	Symbol	EOF		10489437						
ANR	10489607	Symbol	fgetc		10489437						
ANR	10489608	Function	write_pgm_line	579:0:17758:17909							
ANR	10489609	FunctionDef	"write_pgm_line (uchar * * obufs , int xs , FILE * fo , int planes , void * image_ctx)"		10489608	0					
ANR	10489610	CompoundStatement		581:0:17874:17909	10489608	0					
ANR	10489611	ExpressionStatement	"fwrite ( obufs [ 0 ] , 1 , xs , fo )"	582:4:17880:17907	10489608	0	True				
ANR	10489612	CallExpression	"fwrite ( obufs [ 0 ] , 1 , xs , fo )"		10489608	0					
ANR	10489613	Callee	fwrite		10489608	0					
ANR	10489614	Identifier	fwrite		10489608	0					
ANR	10489615	ArgumentList	obufs [ 0 ]		10489608	1					
ANR	10489616	Argument	obufs [ 0 ]		10489608	0					
ANR	10489617	ArrayIndexing	obufs [ 0 ]		10489608	0					
ANR	10489618	Identifier	obufs		10489608	0					
ANR	10489619	PrimaryExpression	0		10489608	1					
ANR	10489620	Argument	1		10489608	1					
ANR	10489621	PrimaryExpression	1		10489608	0					
ANR	10489622	Argument	xs		10489608	2					
ANR	10489623	Identifier	xs		10489608	0					
ANR	10489624	Argument	fo		10489608	3					
ANR	10489625	Identifier	fo		10489608	0					
ANR	10489626	ReturnType	static void		10489608	1					
ANR	10489627	Identifier	write_pgm_line		10489608	2					
ANR	10489628	ParameterList	"uchar * * obufs , int xs , FILE * fo , int planes , void * image_ctx"		10489608	3					
ANR	10489629	Parameter	uchar * * obufs	579:27:17785:17797	10489608	0	True				
ANR	10489630	ParameterType	uchar * *		10489608	0					
ANR	10489631	Identifier	obufs		10489608	1					
ANR	10489632	Parameter	int xs	579:42:17800:17805	10489608	1	True				
ANR	10489633	ParameterType	int		10489608	0					
ANR	10489634	Identifier	xs		10489608	1					
ANR	10489635	Parameter	FILE * fo	579:50:17808:17815	10489608	2	True				
ANR	10489636	ParameterType	FILE *		10489608	0					
ANR	10489637	Identifier	fo		10489608	1					
ANR	10489638	Parameter	int planes	579:60:17818:17827	10489608	3	True				
ANR	10489639	ParameterType	int		10489608	0					
ANR	10489640	Identifier	planes		10489608	1					
ANR	10489641	Parameter	void * image_ctx	580:27:17857:17871	10489608	4	True				
ANR	10489642	ParameterType	void *		10489608	0					
ANR	10489643	Identifier	image_ctx		10489608	1					
ANR	10489644	CFGEntryNode	ENTRY		10489608		True				
ANR	10489645	CFGExitNode	EXIT		10489608		True				
ANR	10489646	Symbol	* obufs		10489608						
ANR	10489647	Symbol	obufs		10489608						
ANR	10489648	Symbol	fo		10489608						
ANR	10489649	Symbol	planes		10489608						
ANR	10489650	Symbol	xs		10489608						
ANR	10489651	Symbol	image_ctx		10489608						
ANR	10489652	Function	write_pam_line	585:0:17912:18327							
ANR	10489653	FunctionDef	"write_pam_line (uchar * * obufs , int xs , FILE * fo , int planes , void * image_ctx)"		10489652	0					
ANR	10489654	CompoundStatement		587:0:18028:18327	10489652	0					
ANR	10489655	IdentifierDeclStatement	"int i , j ;"	588:4:18034:18042	10489652	0	True				
ANR	10489656	IdentifierDecl	i		10489652	0					
ANR	10489657	IdentifierDeclType	int		10489652	0					
ANR	10489658	Identifier	i		10489652	1					
ANR	10489659	IdentifierDecl	j		10489652	1					
ANR	10489660	IdentifierDeclType	int		10489652	0					
ANR	10489661	Identifier	j		10489652	1					
ANR	10489662	ForStatement	for ( i = 0 ; i < xs ; i ++ )		10489652	1					
ANR	10489663	ForInit	i = 0 ;	590:9:18054:18059	10489652	0	True				
ANR	10489664	AssignmentExpression	i = 0		10489652	0		=			
ANR	10489665	Identifier	i		10489652	0					
ANR	10489666	PrimaryExpression	0		10489652	1					
ANR	10489667	Condition	i < xs	590:16:18061:18066	10489652	1	True				
ANR	10489668	RelationalExpression	i < xs		10489652	0		<			
ANR	10489669	Identifier	i		10489652	0					
ANR	10489670	Identifier	xs		10489652	1					
ANR	10489671	PostIncDecOperationExpression	i ++	590:24:18069:18071	10489652	2	True				
ANR	10489672	Identifier	i		10489652	0					
ANR	10489673	IncDec	++		10489652	1					
ANR	10489674	CompoundStatement		5:4:49:49	10489652	3					
ANR	10489675	ExpressionStatement	"fputc ( 255 - obufs [ 1 ] [ i ] , fo )"	592:8:18088:18114	10489652	0	True				
ANR	10489676	CallExpression	"fputc ( 255 - obufs [ 1 ] [ i ] , fo )"		10489652	0					
ANR	10489677	Callee	fputc		10489652	0					
ANR	10489678	Identifier	fputc		10489652	0					
ANR	10489679	ArgumentList	255 - obufs [ 1 ] [ i ]		10489652	1					
ANR	10489680	Argument	255 - obufs [ 1 ] [ i ]		10489652	0					
ANR	10489681	AdditiveExpression	255 - obufs [ 1 ] [ i ]		10489652	0		-			
ANR	10489682	PrimaryExpression	255		10489652	0					
ANR	10489683	ArrayIndexing	obufs [ 1 ] [ i ]		10489652	1					
ANR	10489684	ArrayIndexing	obufs [ 1 ]		10489652	0					
ANR	10489685	Identifier	obufs		10489652	0					
ANR	10489686	PrimaryExpression	1		10489652	1					
ANR	10489687	Identifier	i		10489652	1					
ANR	10489688	Argument	fo		10489652	1					
ANR	10489689	Identifier	fo		10489652	0					
ANR	10489690	ExpressionStatement	"fputc ( 255 - obufs [ 2 ] [ i ] , fo )"	593:8:18124:18150	10489652	1	True				
ANR	10489691	CallExpression	"fputc ( 255 - obufs [ 2 ] [ i ] , fo )"		10489652	0					
ANR	10489692	Callee	fputc		10489652	0					
ANR	10489693	Identifier	fputc		10489652	0					
ANR	10489694	ArgumentList	255 - obufs [ 2 ] [ i ]		10489652	1					
ANR	10489695	Argument	255 - obufs [ 2 ] [ i ]		10489652	0					
ANR	10489696	AdditiveExpression	255 - obufs [ 2 ] [ i ]		10489652	0		-			
ANR	10489697	PrimaryExpression	255		10489652	0					
ANR	10489698	ArrayIndexing	obufs [ 2 ] [ i ]		10489652	1					
ANR	10489699	ArrayIndexing	obufs [ 2 ]		10489652	0					
ANR	10489700	Identifier	obufs		10489652	0					
ANR	10489701	PrimaryExpression	2		10489652	1					
ANR	10489702	Identifier	i		10489652	1					
ANR	10489703	Argument	fo		10489652	1					
ANR	10489704	Identifier	fo		10489652	0					
ANR	10489705	ExpressionStatement	"fputc ( 255 - obufs [ 3 ] [ i ] , fo )"	594:8:18160:18186	10489652	2	True				
ANR	10489706	CallExpression	"fputc ( 255 - obufs [ 3 ] [ i ] , fo )"		10489652	0					
ANR	10489707	Callee	fputc		10489652	0					
ANR	10489708	Identifier	fputc		10489652	0					
ANR	10489709	ArgumentList	255 - obufs [ 3 ] [ i ]		10489652	1					
ANR	10489710	Argument	255 - obufs [ 3 ] [ i ]		10489652	0					
ANR	10489711	AdditiveExpression	255 - obufs [ 3 ] [ i ]		10489652	0		-			
ANR	10489712	PrimaryExpression	255		10489652	0					
ANR	10489713	ArrayIndexing	obufs [ 3 ] [ i ]		10489652	1					
ANR	10489714	ArrayIndexing	obufs [ 3 ]		10489652	0					
ANR	10489715	Identifier	obufs		10489652	0					
ANR	10489716	PrimaryExpression	3		10489652	1					
ANR	10489717	Identifier	i		10489652	1					
ANR	10489718	Argument	fo		10489652	1					
ANR	10489719	Identifier	fo		10489652	0					
ANR	10489720	ExpressionStatement	"fputc ( 255 - obufs [ 0 ] [ i ] , fo )"	595:8:18196:18222	10489652	3	True				
ANR	10489721	CallExpression	"fputc ( 255 - obufs [ 0 ] [ i ] , fo )"		10489652	0					
ANR	10489722	Callee	fputc		10489652	0					
ANR	10489723	Identifier	fputc		10489652	0					
ANR	10489724	ArgumentList	255 - obufs [ 0 ] [ i ]		10489652	1					
ANR	10489725	Argument	255 - obufs [ 0 ] [ i ]		10489652	0					
ANR	10489726	AdditiveExpression	255 - obufs [ 0 ] [ i ]		10489652	0		-			
ANR	10489727	PrimaryExpression	255		10489652	0					
ANR	10489728	ArrayIndexing	obufs [ 0 ] [ i ]		10489652	1					
ANR	10489729	ArrayIndexing	obufs [ 0 ]		10489652	0					
ANR	10489730	Identifier	obufs		10489652	0					
ANR	10489731	PrimaryExpression	0		10489652	1					
ANR	10489732	Identifier	i		10489652	1					
ANR	10489733	Argument	fo		10489652	1					
ANR	10489734	Identifier	fo		10489652	0					
ANR	10489735	ForStatement	for ( j = 4 ; j < planes ; j ++ )		10489652	4					
ANR	10489736	ForInit	j = 4 ;	596:13:18237:18242	10489652	0	True				
ANR	10489737	AssignmentExpression	j = 4		10489652	0		=			
ANR	10489738	Identifier	j		10489652	0					
ANR	10489739	PrimaryExpression	4		10489652	1					
ANR	10489740	Condition	j < planes	596:20:18244:18253	10489652	1	True				
ANR	10489741	RelationalExpression	j < planes		10489652	0		<			
ANR	10489742	Identifier	j		10489652	0					
ANR	10489743	Identifier	planes		10489652	1					
ANR	10489744	PostIncDecOperationExpression	j ++	596:32:18256:18258	10489652	2	True				
ANR	10489745	Identifier	j		10489652	0					
ANR	10489746	IncDec	++		10489652	1					
ANR	10489747	CompoundStatement		11:8:240:240	10489652	3					
ANR	10489748	ExpressionStatement	"fputc ( 255 - obufs [ j ] [ i ] , fo )"	598:12:18283:18309	10489652	0	True				
ANR	10489749	CallExpression	"fputc ( 255 - obufs [ j ] [ i ] , fo )"		10489652	0					
ANR	10489750	Callee	fputc		10489652	0					
ANR	10489751	Identifier	fputc		10489652	0					
ANR	10489752	ArgumentList	255 - obufs [ j ] [ i ]		10489652	1					
ANR	10489753	Argument	255 - obufs [ j ] [ i ]		10489652	0					
ANR	10489754	AdditiveExpression	255 - obufs [ j ] [ i ]		10489652	0		-			
ANR	10489755	PrimaryExpression	255		10489652	0					
ANR	10489756	ArrayIndexing	obufs [ j ] [ i ]		10489652	1					
ANR	10489757	ArrayIndexing	obufs [ j ]		10489652	0					
ANR	10489758	Identifier	obufs		10489652	0					
ANR	10489759	Identifier	j		10489652	1					
ANR	10489760	Identifier	i		10489652	1					
ANR	10489761	Argument	fo		10489652	1					
ANR	10489762	Identifier	fo		10489652	0					
ANR	10489763	ReturnType	static void		10489652	1					
ANR	10489764	Identifier	write_pam_line		10489652	2					
ANR	10489765	ParameterList	"uchar * * obufs , int xs , FILE * fo , int planes , void * image_ctx"		10489652	3					
ANR	10489766	Parameter	uchar * * obufs	585:27:17939:17951	10489652	0	True				
ANR	10489767	ParameterType	uchar * *		10489652	0					
ANR	10489768	Identifier	obufs		10489652	1					
ANR	10489769	Parameter	int xs	585:42:17954:17959	10489652	1	True				
ANR	10489770	ParameterType	int		10489652	0					
ANR	10489771	Identifier	xs		10489652	1					
ANR	10489772	Parameter	FILE * fo	585:50:17962:17969	10489652	2	True				
ANR	10489773	ParameterType	FILE *		10489652	0					
ANR	10489774	Identifier	fo		10489652	1					
ANR	10489775	Parameter	int planes	585:60:17972:17981	10489652	3	True				
ANR	10489776	ParameterType	int		10489652	0					
ANR	10489777	Identifier	planes		10489652	1					
ANR	10489778	Parameter	void * image_ctx	586:27:18011:18025	10489652	4	True				
ANR	10489779	ParameterType	void *		10489652	0					
ANR	10489780	Identifier	image_ctx		10489652	1					
ANR	10489781	CFGEntryNode	ENTRY		10489652		True				
ANR	10489782	CFGExitNode	EXIT		10489652		True				
ANR	10489783	Symbol	* * j		10489652						
ANR	10489784	Symbol	* obufs		10489652						
ANR	10489785	Symbol	* i		10489652						
ANR	10489786	Symbol	* j		10489652						
ANR	10489787	Symbol	obufs		10489652						
ANR	10489788	Symbol	* * obufs		10489652						
ANR	10489789	Symbol	fo		10489652						
ANR	10489790	Symbol	planes		10489652						
ANR	10489791	Symbol	i		10489652						
ANR	10489792	Symbol	j		10489652						
ANR	10489793	Symbol	xs		10489652						
ANR	10489794	Symbol	image_ctx		10489652						
ANR	10489795	Function	main	603:0:18330:25732							
ANR	10489796	FunctionDef	"main (int argc , char * * argv)"		10489795	0					
ANR	10489797	CompoundStatement		605:0:18362:25732	10489795	0					
ANR	10489798	IdentifierDeclStatement	FILE * fi = stdin ;	606:4:18368:18384	10489795	0	True				
ANR	10489799	IdentifierDecl	* fi = stdin		10489795	0					
ANR	10489800	IdentifierDeclType	FILE *		10489795	0					
ANR	10489801	Identifier	fi		10489795	1					
ANR	10489802	AssignmentExpression	* fi = stdin		10489795	2		=			
ANR	10489803	Identifier	stdin		10489795	0					
ANR	10489804	Identifier	stdin		10489795	1					
ANR	10489805	IdentifierDeclStatement	FILE * fo = stdout ;	607:4:18390:18407	10489795	1	True				
ANR	10489806	IdentifierDecl	* fo = stdout		10489795	0					
ANR	10489807	IdentifierDeclType	FILE *		10489795	0					
ANR	10489808	Identifier	fo		10489795	1					
ANR	10489809	AssignmentExpression	* fo = stdout		10489795	2		=			
ANR	10489810	Identifier	stdout		10489795	0					
ANR	10489811	Identifier	stdout		10489795	1					
ANR	10489812	IdentifierDeclStatement	char buf [ 256 ] ;	608:4:18413:18426	10489795	2	True				
ANR	10489813	IdentifierDecl	buf [ 256 ]		10489795	0					
ANR	10489814	IdentifierDeclType	char [ 256 ]		10489795	0					
ANR	10489815	Identifier	buf		10489795	1					
ANR	10489816	PrimaryExpression	256		10489795	2					
ANR	10489817	IdentifierDeclStatement	"int xs , ys ;"	609:4:18432:18442	10489795	3	True				
ANR	10489818	IdentifierDecl	xs		10489795	0					
ANR	10489819	IdentifierDeclType	int		10489795	0					
ANR	10489820	Identifier	xs		10489795	1					
ANR	10489821	IdentifierDecl	ys		10489795	1					
ANR	10489822	IdentifierDeclType	int		10489795	0					
ANR	10489823	Identifier	ys		10489795	1					
ANR	10489824	IdentifierDeclStatement	int xsb ;	610:4:18448:18455	10489795	4	True				
ANR	10489825	IdentifierDecl	xsb		10489795	0					
ANR	10489826	IdentifierDeclType	int		10489795	0					
ANR	10489827	Identifier	xsb		10489795	1					
ANR	10489828	IdentifierDeclStatement	ETS_POLARITY polarity ;	611:4:18461:18482	10489795	5	True				
ANR	10489829	IdentifierDecl	polarity		10489795	0					
ANR	10489830	IdentifierDeclType	ETS_POLARITY		10489795	0					
ANR	10489831	Identifier	polarity		10489795	1					
ANR	10489832	IdentifierDeclStatement	ETS_Params params ;	612:4:18488:18505	10489795	6	True				
ANR	10489833	IdentifierDecl	params		10489795	0					
ANR	10489834	IdentifierDeclType	ETS_Params		10489795	0					
ANR	10489835	Identifier	params		10489795	1					
ANR	10489836	IdentifierDeclStatement	ETS_Ctx * ctx ;	613:4:18511:18523	10489795	7	True				
ANR	10489837	IdentifierDecl	* ctx		10489795	0					
ANR	10489838	IdentifierDeclType	ETS_Ctx *		10489795	0					
ANR	10489839	Identifier	ctx		10489795	1					
ANR	10489840	IdentifierDeclStatement	"int lut [ ETS_SRC_MAX + 1 ] , i ;"	614:4:18529:18554	10489795	8	True				
ANR	10489841	IdentifierDecl	lut [ ETS_SRC_MAX + 1 ]		10489795	0					
ANR	10489842	IdentifierDeclType	int [ ETS_SRC_MAX + 1 ]		10489795	0					
ANR	10489843	Identifier	lut		10489795	1					
ANR	10489844	AdditiveExpression	ETS_SRC_MAX + 1		10489795	2		+			
ANR	10489845	Identifier	ETS_SRC_MAX		10489795	0					
ANR	10489846	PrimaryExpression	1		10489795	1					
ANR	10489847	IdentifierDecl	i		10489795	1					
ANR	10489848	IdentifierDeclType	int		10489795	0					
ANR	10489849	Identifier	i		10489795	1					
ANR	10489850	IdentifierDeclStatement	int * luts [ M ] ;	615:4:18560:18572	10489795	9	True				
ANR	10489851	IdentifierDecl	* luts [ M ]		10489795	0					
ANR	10489852	IdentifierDeclType	int * [ M ]		10489795	0					
ANR	10489853	Identifier	luts		10489795	1					
ANR	10489854	Identifier	M		10489795	2					
ANR	10489855	IdentifierDeclStatement	int rs_lut [ ETS_SRC_MAX + 1 ] ;	616:4:18578:18603	10489795	10	True				
ANR	10489856	IdentifierDecl	rs_lut [ ETS_SRC_MAX + 1 ]		10489795	0					
ANR	10489857	IdentifierDeclType	int [ ETS_SRC_MAX + 1 ]		10489795	0					
ANR	10489858	Identifier	rs_lut		10489795	1					
ANR	10489859	AdditiveExpression	ETS_SRC_MAX + 1		10489795	2		+			
ANR	10489860	Identifier	ETS_SRC_MAX		10489795	0					
ANR	10489861	PrimaryExpression	1		10489795	1					
ANR	10489862	IdentifierDeclStatement	int * rs_luts [ M ] ;	617:4:18609:18624	10489795	11	True				
ANR	10489863	IdentifierDecl	* rs_luts [ M ]		10489795	0					
ANR	10489864	IdentifierDeclType	int * [ M ]		10489795	0					
ANR	10489865	Identifier	rs_luts		10489795	1					
ANR	10489866	Identifier	M		10489795	2					
ANR	10489867	Statement	int	618:4:18630:18632	10489795	12	True				
ANR	10489868	Statement	strengths	618:8:18634:18642	10489795	13	True				
ANR	10489869	Statement	[	618:17:18643:18643	10489795	14	True				
ANR	10489870	Statement	M	618:18:18644:18644	10489795	15	True				
ANR	10489871	Statement	]	618:19:18645:18645	10489795	16	True				
ANR	10489872	Statement	[	618:20:18646:18646	10489795	17	True				
ANR	10489873	Statement	M	618:21:18647:18647	10489795	18	True				
ANR	10489874	Statement	]	618:22:18648:18648	10489795	19	True				
ANR	10489875	Statement	=	618:24:18650:18650	10489795	20	True				
ANR	10489876	CompoundStatement		14:26:289:289	10489795	21					
ANR	10489877	CompoundStatement		14:28:291:291	10489795	0					
ANR	10489878	Statement	0	618:30:18656:18656	10489795	0	True				
ANR	10489879	Statement	","	618:33:18659:18659	10489795	1	True				
ANR	10489880	CompoundStatement		15:28:326:326	10489795	2					
ANR	10489881	Statement	0	619:30:18691:18691	10489795	0	True				
ANR	10489882	Statement	","	619:33:18694:18694	10489795	3	True				
ANR	10489883	CompoundStatement		16:28:361:361	10489795	4					
ANR	10489884	Statement	0	620:30:18726:18726	10489795	0	True				
ANR	10489885	Statement	","	620:33:18729:18729	10489795	5	True				
ANR	10489886	CompoundStatement		17:28:396:396	10489795	6					
ANR	10489887	Statement	128	621:30:18761:18763	10489795	0	True				
ANR	10489888	Statement	","	621:33:18764:18764	10489795	1	True				
ANR	10489889	Statement	51	621:35:18766:18767	10489795	2	True				
ANR	10489890	Statement	","	621:37:18768:18768	10489795	3	True				
ANR	10489891	Statement	51	621:39:18770:18771	10489795	4	True				
ANR	10489892	Statement	","	621:41:18772:18772	10489795	5	True				
ANR	10489893	Statement	13	621:43:18774:18775	10489795	6	True				
ANR	10489894	Statement	","	621:47:18778:18778	10489795	7	True				
ANR	10489895	CompoundStatement		18:28:469:469	10489795	8					
ANR	10489896	Statement	0	622:30:18834:18834	10489795	0	True				
ANR	10489897	Statement	","	622:33:18837:18837	10489795	9	True				
ANR	10489898	CompoundStatement		19:28:504:504	10489795	10					
ANR	10489899	Statement	128	623:30:18869:18871	10489795	0	True				
ANR	10489900	Statement	","	623:33:18872:18872	10489795	1	True				
ANR	10489901	Statement	51	623:35:18874:18875	10489795	2	True				
ANR	10489902	Statement	","	623:37:18876:18876	10489795	3	True				
ANR	10489903	Statement	51	623:39:18878:18879	10489795	4	True				
ANR	10489904	Statement	","	623:41:18880:18880	10489795	5	True				
ANR	10489905	Statement	13	623:43:18882:18883	10489795	6	True				
ANR	10489906	Statement	","	623:45:18884:18884	10489795	7	True				
ANR	10489907	Statement	13	623:47:18886:18887	10489795	8	True				
ANR	10489908	Statement	","	623:49:18888:18888	10489795	9	True				
ANR	10489909	Statement	13	623:51:18890:18891	10489795	10	True				
ANR	10489910	Statement	","	623:55:18894:18894	10489795	11	True				
ANR	10489911	CompoundStatement		20:28:579:579	10489795	12					
ANR	10489912	Statement	128	624:30:18944:18946	10489795	0	True				
ANR	10489913	Statement	","	624:33:18947:18947	10489795	1	True				
ANR	10489914	Statement	51	624:35:18949:18950	10489795	2	True				
ANR	10489915	Statement	","	624:37:18951:18951	10489795	3	True				
ANR	10489916	Statement	51	624:39:18953:18954	10489795	4	True				
ANR	10489917	Statement	","	624:41:18955:18955	10489795	5	True				
ANR	10489918	Statement	13	624:43:18957:18958	10489795	6	True				
ANR	10489919	Statement	","	624:45:18959:18959	10489795	7	True				
ANR	10489920	Statement	13	624:47:18961:18962	10489795	8	True				
ANR	10489921	Statement	","	624:49:18963:18963	10489795	9	True				
ANR	10489922	Statement	13	624:51:18965:18966	10489795	10	True				
ANR	10489923	Statement	","	624:53:18967:18967	10489795	11	True				
ANR	10489924	Statement	13	624:55:18969:18970	10489795	12	True				
ANR	10489925	Statement	","	624:59:18973:18973	10489795	13	True				
ANR	10489926	CompoundStatement		21:28:655:655	10489795	14					
ANR	10489927	Statement	128	625:30:19020:19022	10489795	0	True				
ANR	10489928	Statement	","	625:33:19023:19023	10489795	1	True				
ANR	10489929	Statement	51	625:35:19025:19026	10489795	2	True				
ANR	10489930	Statement	","	625:37:19027:19027	10489795	3	True				
ANR	10489931	Statement	51	625:39:19029:19030	10489795	4	True				
ANR	10489932	Statement	","	625:41:19031:19031	10489795	5	True				
ANR	10489933	Statement	13	625:43:19033:19034	10489795	6	True				
ANR	10489934	Statement	","	625:45:19035:19035	10489795	7	True				
ANR	10489935	Statement	13	625:47:19037:19038	10489795	8	True				
ANR	10489936	Statement	","	625:49:19039:19039	10489795	9	True				
ANR	10489937	Statement	13	625:51:19041:19042	10489795	10	True				
ANR	10489938	Statement	","	625:53:19043:19043	10489795	11	True				
ANR	10489939	Statement	13	625:55:19045:19046	10489795	12	True				
ANR	10489940	Statement	","	625:57:19047:19047	10489795	13	True				
ANR	10489941	Statement	13	625:59:19049:19050	10489795	14	True				
ANR	10489942	Statement	","	625:62:19052:19052	10489795	15	True				
ANR	10489943	ExpressionStatement		626:27:19094:19094	10489795	22	True				
ANR	10489944	Statement	uchar	628:4:19196:19200	10489795	23	True				
ANR	10489945	Statement	permutes	628:10:19202:19209	10489795	24	True				
ANR	10489946	Statement	[	628:18:19210:19210	10489795	25	True				
ANR	10489947	Statement	M	628:19:19211:19211	10489795	26	True				
ANR	10489948	Statement	]	628:20:19212:19212	10489795	27	True				
ANR	10489949	Statement	[	628:21:19213:19213	10489795	28	True				
ANR	10489950	Statement	M	628:22:19214:19214	10489795	29	True				
ANR	10489951	Statement	]	628:23:19215:19215	10489795	30	True				
ANR	10489952	Statement	=	628:25:19217:19217	10489795	31	True				
ANR	10489953	CompoundStatement		24:27:856:856	10489795	32					
ANR	10489954	CompoundStatement		24:29:858:858	10489795	0					
ANR	10489955	Statement	0	628:31:19223:19223	10489795	0	True				
ANR	10489956	Statement	","	628:34:19226:19226	10489795	1	True				
ANR	10489957	CompoundStatement		25:24:889:889	10489795	2					
ANR	10489958	Statement	0	629:26:19254:19254	10489795	0	True				
ANR	10489959	Statement	","	629:29:19257:19257	10489795	3	True				
ANR	10489960	CompoundStatement		26:24:920:920	10489795	4					
ANR	10489961	Statement	0	630:26:19285:19285	10489795	0	True				
ANR	10489962	Statement	","	630:29:19288:19288	10489795	5	True				
ANR	10489963	CompoundStatement		27:24:951:951	10489795	6					
ANR	10489964	Statement	3	631:26:19316:19316	10489795	0	True				
ANR	10489965	Statement	","	631:27:19317:19317	10489795	1	True				
ANR	10489966	Statement	0	631:29:19319:19319	10489795	2	True				
ANR	10489967	Statement	","	631:30:19320:19320	10489795	3	True				
ANR	10489968	Statement	1	631:32:19322:19322	10489795	4	True				
ANR	10489969	Statement	","	631:33:19323:19323	10489795	5	True				
ANR	10489970	Statement	2	631:35:19325:19325	10489795	6	True				
ANR	10489971	Statement	","	631:38:19328:19328	10489795	7	True				
ANR	10489972	CompoundStatement		28:24:1011:1011	10489795	8					
ANR	10489973	Statement	0	632:26:19376:19376	10489795	0	True				
ANR	10489974	Statement	","	632:29:19379:19379	10489795	9	True				
ANR	10489975	CompoundStatement		29:24:1042:1042	10489795	10					
ANR	10489976	Statement	3	633:26:19407:19407	10489795	0	True				
ANR	10489977	Statement	","	633:27:19408:19408	10489795	1	True				
ANR	10489978	Statement	0	633:29:19410:19410	10489795	2	True				
ANR	10489979	Statement	","	633:30:19411:19411	10489795	3	True				
ANR	10489980	Statement	1	633:32:19413:19413	10489795	4	True				
ANR	10489981	Statement	","	633:33:19414:19414	10489795	5	True				
ANR	10489982	Statement	2	633:35:19416:19416	10489795	6	True				
ANR	10489983	Statement	","	633:36:19417:19417	10489795	7	True				
ANR	10489984	Statement	4	633:38:19419:19419	10489795	8	True				
ANR	10489985	Statement	","	633:39:19420:19420	10489795	9	True				
ANR	10489986	Statement	5	633:41:19422:19422	10489795	10	True				
ANR	10489987	Statement	","	633:44:19425:19425	10489795	11	True				
ANR	10489988	CompoundStatement		30:24:1104:1104	10489795	12					
ANR	10489989	Statement	3	634:26:19469:19469	10489795	0	True				
ANR	10489990	Statement	","	634:27:19470:19470	10489795	1	True				
ANR	10489991	Statement	0	634:29:19472:19472	10489795	2	True				
ANR	10489992	Statement	","	634:30:19473:19473	10489795	3	True				
ANR	10489993	Statement	1	634:32:19475:19475	10489795	4	True				
ANR	10489994	Statement	","	634:33:19476:19476	10489795	5	True				
ANR	10489995	Statement	2	634:35:19478:19478	10489795	6	True				
ANR	10489996	Statement	","	634:36:19479:19479	10489795	7	True				
ANR	10489997	Statement	4	634:38:19481:19481	10489795	8	True				
ANR	10489998	Statement	","	634:39:19482:19482	10489795	9	True				
ANR	10489999	Statement	5	634:41:19484:19484	10489795	10	True				
ANR	10490000	Statement	","	634:42:19485:19485	10489795	11	True				
ANR	10490001	Statement	6	634:44:19487:19487	10489795	12	True				
ANR	10490002	Statement	","	634:47:19490:19490	10489795	13	True				
ANR	10490003	CompoundStatement		31:24:1167:1167	10489795	14					
ANR	10490004	Statement	3	635:25:19531:19531	10489795	0	True				
ANR	10490005	Statement	","	635:26:19532:19532	10489795	1	True				
ANR	10490006	Statement	0	635:28:19534:19534	10489795	2	True				
ANR	10490007	Statement	","	635:29:19535:19535	10489795	3	True				
ANR	10490008	Statement	1	635:31:19537:19537	10489795	4	True				
ANR	10490009	Statement	","	635:32:19538:19538	10489795	5	True				
ANR	10490010	Statement	2	635:34:19540:19540	10489795	6	True				
ANR	10490011	Statement	","	635:35:19541:19541	10489795	7	True				
ANR	10490012	Statement	4	635:37:19543:19543	10489795	8	True				
ANR	10490013	Statement	","	635:38:19544:19544	10489795	9	True				
ANR	10490014	Statement	5	635:40:19546:19546	10489795	10	True				
ANR	10490015	Statement	","	635:41:19547:19547	10489795	11	True				
ANR	10490016	Statement	6	635:43:19549:19549	10489795	12	True				
ANR	10490017	Statement	","	635:44:19550:19550	10489795	13	True				
ANR	10490018	Statement	7	635:46:19552:19552	10489795	14	True				
ANR	10490019	Statement	","	635:48:19554:19554	10489795	15	True				
ANR	10490020	ExpressionStatement		636:25:19594:19594	10489795	33	True				
ANR	10490021	IdentifierDeclStatement	"int c1_scale [ ] = { 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 } ;"	637:4:19600:19646	10489795	34	True				
ANR	10490022	IdentifierDecl	"c1_scale [ ] = { 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 }"		10489795	0					
ANR	10490023	IdentifierDeclType	int [ ]		10489795	0					
ANR	10490024	Identifier	c1_scale		10489795	1					
ANR	10490025	AssignmentExpression	"c1_scale [ ] = { 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 }"		10489795	2		=			
ANR	10490026	Identifier	c1_scale		10489795	0					
ANR	10490027	InitializerList	1		10489795	1					
ANR	10490028	PrimaryExpression	1		10489795	0					
ANR	10490029	PrimaryExpression	1		10489795	1					
ANR	10490030	PrimaryExpression	1		10489795	2					
ANR	10490031	PrimaryExpression	1		10489795	3					
ANR	10490032	PrimaryExpression	1		10489795	4					
ANR	10490033	PrimaryExpression	1		10489795	5					
ANR	10490034	PrimaryExpression	1		10489795	6					
ANR	10490035	PrimaryExpression	1		10489795	7					
ANR	10490036	PrimaryExpression	1		10489795	8					
ANR	10490037	IdentifierDeclStatement	ETS_SrcPixel * ibufs [ M ] = { 0 } ;	638:4:19652:19682	10489795	35	True				
ANR	10490038	IdentifierDecl	* ibufs [ M ] = { 0 }		10489795	0					
ANR	10490039	IdentifierDeclType	ETS_SrcPixel * [ M ]		10489795	0					
ANR	10490040	Identifier	ibufs		10489795	1					
ANR	10490041	Identifier	M		10489795	2					
ANR	10490042	AssignmentExpression	* ibufs [ M ] = { 0 }		10489795	3		=			
ANR	10490043	Identifier	M		10489795	0					
ANR	10490044	InitializerList	0		10489795	1					
ANR	10490045	PrimaryExpression	0		10489795	0					
ANR	10490046	IdentifierDeclStatement	uchar * obufs [ M ] = { 0 } ;	639:4:19688:19711	10489795	36	True				
ANR	10490047	IdentifierDecl	* obufs [ M ] = { 0 }		10489795	0					
ANR	10490048	IdentifierDeclType	uchar * [ M ]		10489795	0					
ANR	10490049	Identifier	obufs		10489795	1					
ANR	10490050	Identifier	M		10489795	2					
ANR	10490051	AssignmentExpression	* obufs [ M ] = { 0 }		10489795	3		=			
ANR	10490052	Identifier	M		10489795	0					
ANR	10490053	InitializerList	0		10489795	1					
ANR	10490054	PrimaryExpression	0		10489795	0					
ANR	10490055	IdentifierDeclStatement	int planes ;	640:4:19717:19727	10489795	37	True				
ANR	10490056	IdentifierDecl	planes		10489795	0					
ANR	10490057	IdentifierDeclType	int		10489795	0					
ANR	10490058	Identifier	planes		10489795	1					
ANR	10490059	IdentifierDeclStatement	"void ( * read_line ) ( ETS_SrcPixel * * ibufs , int xs , FILE * fi , int planes , void * image_ctx ) ;"	641:4:19733:19819	10489795	38	True				
ANR	10490060	IdentifierDecl	"( * read_line ) ( ETS_SrcPixel * * ibufs , int xs , FILE * fi , int planes , void * image_ctx )"		10489795	0					
ANR	10490061	IdentifierDeclType	"void ( * ) ( ETS_SrcPixel * * ibufs , int xs , FILE * fi , int planes , void * image_ctx )"		10489795	0					
ANR	10490062	Identifier	read_line		10489795	1					
ANR	10490063	Identifier	ibufs		10489795	2					
ANR	10490064	Identifier	fi		10489795	3					
ANR	10490065	Identifier	image_ctx		10489795	4					
ANR	10490066	IdentifierDeclStatement	"void ( * write_line ) ( uchar * * obufs , int xs , FILE * fo , int planes , void * image_ctx ) ;"	642:4:19825:19905	10489795	39	True				
ANR	10490067	IdentifierDecl	"( * write_line ) ( uchar * * obufs , int xs , FILE * fo , int planes , void * image_ctx )"		10489795	0					
ANR	10490068	IdentifierDeclType	"void ( * ) ( uchar * * obufs , int xs , FILE * fo , int planes , void * image_ctx )"		10489795	0					
ANR	10490069	Identifier	write_line		10489795	1					
ANR	10490070	Identifier	obufs		10489795	2					
ANR	10490071	Identifier	fo		10489795	3					
ANR	10490072	Identifier	image_ctx		10489795	4					
ANR	10490073	IdentifierDeclStatement	void ( * finalize ) ( void * image_ctx ) ;	643:4:19911:19944	10489795	40	True				
ANR	10490074	IdentifierDecl	( * finalize ) ( void * image_ctx )		10489795	0					
ANR	10490075	IdentifierDeclType	void ( * ) ( void * image_ctx )		10489795	0					
ANR	10490076	Identifier	finalize		10489795	1					
ANR	10490077	Identifier	image_ctx		10489795	2					
ANR	10490078	IdentifierDeclStatement	char * gamma_tab = NULL ;	644:4:19950:19972	10489795	41	True				
ANR	10490079	IdentifierDecl	* gamma_tab = NULL		10489795	0					
ANR	10490080	IdentifierDeclType	char *		10489795	0					
ANR	10490081	Identifier	gamma_tab		10489795	1					
ANR	10490082	AssignmentExpression	* gamma_tab = NULL		10489795	2		=			
ANR	10490083	Identifier	NULL		10489795	0					
ANR	10490084	Identifier	NULL		10489795	1					
ANR	10490085	IdentifierDeclStatement	int multiplane = 1 ;	645:4:19978:19996	10489795	42	True				
ANR	10490086	IdentifierDecl	multiplane = 1		10489795	0					
ANR	10490087	IdentifierDeclType	int		10489795	0					
ANR	10490088	Identifier	multiplane		10489795	1					
ANR	10490089	AssignmentExpression	multiplane = 1		10489795	2		=			
ANR	10490090	Identifier	multiplane		10489795	0					
ANR	10490091	PrimaryExpression	1		10489795	1					
ANR	10490092	IdentifierDeclStatement	int ets_style = 1 ;	646:4:20002:20019	10489795	43	True				
ANR	10490093	IdentifierDecl	ets_style = 1		10489795	0					
ANR	10490094	IdentifierDeclType	int		10489795	0					
ANR	10490095	Identifier	ets_style		10489795	1					
ANR	10490096	AssignmentExpression	ets_style = 1		10489795	2		=			
ANR	10490097	Identifier	ets_style		10489795	0					
ANR	10490098	PrimaryExpression	1		10489795	1					
ANR	10490099	IdentifierDeclStatement	int r_style = 1 ;	647:4:20025:20040	10489795	44	True				
ANR	10490100	IdentifierDecl	r_style = 1		10489795	0					
ANR	10490101	IdentifierDeclType	int		10489795	0					
ANR	10490102	Identifier	r_style		10489795	1					
ANR	10490103	AssignmentExpression	r_style = 1		10489795	2		=			
ANR	10490104	Identifier	r_style		10489795	0					
ANR	10490105	PrimaryExpression	1		10489795	1					
ANR	10490106	IdentifierDeclStatement	int levels = 2 ;	648:4:20046:20060	10489795	45	True				
ANR	10490107	IdentifierDecl	levels = 2		10489795	0					
ANR	10490108	IdentifierDeclType	int		10489795	0					
ANR	10490109	Identifier	levels		10489795	1					
ANR	10490110	AssignmentExpression	levels = 2		10489795	2		=			
ANR	10490111	Identifier	levels		10489795	0					
ANR	10490112	PrimaryExpression	2		10489795	1					
ANR	10490113	IdentifierDeclStatement	int aspect_x = 1 ;	649:4:20066:20082	10489795	46	True				
ANR	10490114	IdentifierDecl	aspect_x = 1		10489795	0					
ANR	10490115	IdentifierDeclType	int		10489795	0					
ANR	10490116	Identifier	aspect_x		10489795	1					
ANR	10490117	AssignmentExpression	aspect_x = 1		10489795	2		=			
ANR	10490118	Identifier	aspect_x		10489795	0					
ANR	10490119	PrimaryExpression	1		10489795	1					
ANR	10490120	IdentifierDeclStatement	int aspect_y = 1 ;	650:4:20088:20104	10489795	47	True				
ANR	10490121	IdentifierDecl	aspect_y = 1		10489795	0					
ANR	10490122	IdentifierDeclType	int		10489795	0					
ANR	10490123	Identifier	aspect_y		10489795	1					
ANR	10490124	AssignmentExpression	aspect_y = 1		10489795	2		=			
ANR	10490125	Identifier	aspect_y		10489795	0					
ANR	10490126	PrimaryExpression	1		10489795	1					
ANR	10490127	IdentifierDeclStatement	int noise = 0 ;	651:4:20110:20123	10489795	48	True				
ANR	10490128	IdentifierDecl	noise = 0		10489795	0					
ANR	10490129	IdentifierDeclType	int		10489795	0					
ANR	10490130	Identifier	noise		10489795	1					
ANR	10490131	AssignmentExpression	noise = 0		10489795	2		=			
ANR	10490132	Identifier	noise		10489795	0					
ANR	10490133	PrimaryExpression	0		10489795	1					
ANR	10490134	IdentifierDeclStatement	psd_ctx_t psd_ctx ;	652:4:20129:20146	10489795	49	True				
ANR	10490135	IdentifierDecl	psd_ctx		10489795	0					
ANR	10490136	IdentifierDeclType	psd_ctx_t		10489795	0					
ANR	10490137	Identifier	psd_ctx		10489795	1					
ANR	10490138	IdentifierDeclStatement	void * image_ctx = NULL ;	653:4:20152:20174	10489795	50	True				
ANR	10490139	IdentifierDecl	* image_ctx = NULL		10489795	0					
ANR	10490140	IdentifierDeclType	void *		10489795	0					
ANR	10490141	Identifier	image_ctx		10489795	1					
ANR	10490142	AssignmentExpression	* image_ctx = NULL		10489795	2		=			
ANR	10490143	Identifier	NULL		10489795	0					
ANR	10490144	Identifier	NULL		10489795	1					
ANR	10490145	IdentifierDeclStatement	uchar byte_count = 1 ;	654:4:20180:20200	10489795	51	True				
ANR	10490146	IdentifierDecl	byte_count = 1		10489795	0					
ANR	10490147	IdentifierDeclType	uchar		10489795	0					
ANR	10490148	Identifier	byte_count		10489795	1					
ANR	10490149	AssignmentExpression	byte_count = 1		10489795	2		=			
ANR	10490150	Identifier	byte_count		10489795	0					
ANR	10490151	PrimaryExpression	1		10489795	1					
ANR	10490152	IdentifierDeclStatement	int y ;	656:4:20207:20212	10489795	52	True				
ANR	10490153	IdentifierDecl	y		10489795	0					
ANR	10490154	IdentifierDeclType	int		10489795	0					
ANR	10490155	Identifier	y		10489795	1					
ANR	10490156	ForStatement	for ( i = 1 ; i < argc ; i ++ )		10489795	53					
ANR	10490157	ForInit	i = 1 ;	658:9:20224:20229	10489795	0	True				
ANR	10490158	AssignmentExpression	i = 1		10489795	0		=			
ANR	10490159	Identifier	i		10489795	0					
ANR	10490160	PrimaryExpression	1		10489795	1					
ANR	10490161	Condition	i < argc	658:16:20231:20238	10489795	1	True				
ANR	10490162	RelationalExpression	i < argc		10489795	0		<			
ANR	10490163	Identifier	i		10489795	0					
ANR	10490164	Identifier	argc		10489795	1					
ANR	10490165	PostIncDecOperationExpression	i ++	658:26:20241:20243	10489795	2	True				
ANR	10490166	Identifier	i		10489795	0					
ANR	10490167	IncDec	++		10489795	1					
ANR	10490168	CompoundStatement		57:8:1932:1953	10489795	3					
ANR	10490169	IdentifierDeclStatement	const char * arg = argv [ i ] ;	660:8:20260:20285	10489795	0	True				
ANR	10490170	IdentifierDecl	* arg = argv [ i ]		10489795	0					
ANR	10490171	IdentifierDeclType	const char *		10489795	0					
ANR	10490172	Identifier	arg		10489795	1					
ANR	10490173	AssignmentExpression	* arg = argv [ i ]		10489795	2		=			
ANR	10490174	Identifier	arg		10489795	0					
ANR	10490175	ArrayIndexing	argv [ i ]		10489795	1					
ANR	10490176	Identifier	argv		10489795	0					
ANR	10490177	Identifier	i		10489795	1					
ANR	10490178	IdentifierDeclStatement	const char * arg_value ;	661:8:20295:20316	10489795	1	True				
ANR	10490179	IdentifierDecl	* arg_value		10489795	0					
ANR	10490180	IdentifierDeclType	const char *		10489795	0					
ANR	10490181	Identifier	arg_value		10489795	1					
ANR	10490182	IfStatement	if ( arg [ 0 ] == '-' )		10489795	2					
ANR	10490183	Condition	arg [ 0 ] == '-'	663:12:20331:20343	10489795	0	True				
ANR	10490184	EqualityExpression	arg [ 0 ] == '-'		10489795	0		==			
ANR	10490185	ArrayIndexing	arg [ 0 ]		10489795	0					
ANR	10490186	Identifier	arg		10489795	0					
ANR	10490187	PrimaryExpression	0		10489795	1					
ANR	10490188	PrimaryExpression	'-'		10489795	1					
ANR	10490189	CompoundStatement		60:8:1991:1991	10489795	1					
ANR	10490190	IfStatement	"if ( ( arg_value = get_arg ( argc , argv , & i , arg + 2 ) ) == NULL )"		10489795	0					
ANR	10490191	Condition	"( arg_value = get_arg ( argc , argv , & i , arg + 2 ) ) == NULL"	665:16:20372:20425	10489795	0	True				
ANR	10490192	EqualityExpression	"( arg_value = get_arg ( argc , argv , & i , arg + 2 ) ) == NULL"		10489795	0		==			
ANR	10490193	AssignmentExpression	"arg_value = get_arg ( argc , argv , & i , arg + 2 )"		10489795	0		=			
ANR	10490194	Identifier	arg_value		10489795	0					
ANR	10490195	CallExpression	"get_arg ( argc , argv , & i , arg + 2 )"		10489795	1					
ANR	10490196	Callee	get_arg		10489795	0					
ANR	10490197	Identifier	get_arg		10489795	0					
ANR	10490198	ArgumentList	argc		10489795	1					
ANR	10490199	Argument	argc		10489795	0					
ANR	10490200	Identifier	argc		10489795	0					
ANR	10490201	Argument	argv		10489795	1					
ANR	10490202	Identifier	argv		10489795	0					
ANR	10490203	Argument	& i		10489795	2					
ANR	10490204	UnaryOperationExpression	& i		10489795	0					
ANR	10490205	UnaryOperator	&		10489795	0					
ANR	10490206	Identifier	i		10489795	1					
ANR	10490207	Argument	arg + 2		10489795	3					
ANR	10490208	AdditiveExpression	arg + 2		10489795	0		+			
ANR	10490209	Identifier	arg		10489795	0					
ANR	10490210	PrimaryExpression	2		10489795	1					
ANR	10490211	Identifier	NULL		10489795	1					
ANR	10490212	GotoStatement	goto usage_exit ;	666:16:20444:20459	10489795	1	True				
ANR	10490213	Identifier	usage_exit		10489795	0					
ANR	10490214	SwitchStatement	switch ( arg [ 1 ] )		10489795	1					
ANR	10490215	Condition	arg [ 1 ]	668:20:20482:20487	10489795	0	True				
ANR	10490216	ArrayIndexing	arg [ 1 ]		10489795	0					
ANR	10490217	Identifier	arg		10489795	0					
ANR	10490218	PrimaryExpression	1		10489795	1					
ANR	10490219	CompoundStatement		65:12:2139:2139	10489795	1					
ANR	10490220	Label	case 'i' :	670:12:20516:20524	10489795	0	True				
ANR	10490221	ExpressionStatement	"fi = fopen ( arg_value , ""rb"" )"	671:16:20542:20568	10489795	1	True				
ANR	10490222	AssignmentExpression	"fi = fopen ( arg_value , ""rb"" )"		10489795	0		=			
ANR	10490223	Identifier	fi		10489795	0					
ANR	10490224	CallExpression	"fopen ( arg_value , ""rb"" )"		10489795	1					
ANR	10490225	Callee	fopen		10489795	0					
ANR	10490226	Identifier	fopen		10489795	0					
ANR	10490227	ArgumentList	arg_value		10489795	1					
ANR	10490228	Argument	arg_value		10489795	0					
ANR	10490229	Identifier	arg_value		10489795	0					
ANR	10490230	Argument	"""rb"""		10489795	1					
ANR	10490231	PrimaryExpression	"""rb"""		10489795	0					
ANR	10490232	IfStatement	if ( fi == NULL )		10489795	2					
ANR	10490233	Condition	fi == NULL	672:20:20590:20599	10489795	0	True				
ANR	10490234	EqualityExpression	fi == NULL		10489795	0		==			
ANR	10490235	Identifier	fi		10489795	0					
ANR	10490236	Identifier	NULL		10489795	1					
ANR	10490237	ExpressionStatement	"die ( ""Input not found"" )"	673:20:20622:20645	10489795	1	True				
ANR	10490238	CallExpression	"die ( ""Input not found"" )"		10489795	0					
ANR	10490239	Callee	die		10489795	0					
ANR	10490240	Identifier	die		10489795	0					
ANR	10490241	ArgumentList	"""Input not found"""		10489795	1					
ANR	10490242	Argument	"""Input not found"""		10489795	0					
ANR	10490243	PrimaryExpression	"""Input not found"""		10489795	0					
ANR	10490244	BreakStatement	break ;	674:16:20663:20668	10489795	3	True				
ANR	10490245	Label	case 'o' :	675:12:20682:20690	10489795	4	True				
ANR	10490246	ExpressionStatement	"fo = fopen ( arg_value , ""wb"" )"	676:16:20708:20734	10489795	5	True				
ANR	10490247	AssignmentExpression	"fo = fopen ( arg_value , ""wb"" )"		10489795	0		=			
ANR	10490248	Identifier	fo		10489795	0					
ANR	10490249	CallExpression	"fopen ( arg_value , ""wb"" )"		10489795	1					
ANR	10490250	Callee	fopen		10489795	0					
ANR	10490251	Identifier	fopen		10489795	0					
ANR	10490252	ArgumentList	arg_value		10489795	1					
ANR	10490253	Argument	arg_value		10489795	0					
ANR	10490254	Identifier	arg_value		10489795	0					
ANR	10490255	Argument	"""wb"""		10489795	1					
ANR	10490256	PrimaryExpression	"""wb"""		10489795	0					
ANR	10490257	IfStatement	if ( fo == NULL )		10489795	6					
ANR	10490258	Condition	fo == NULL	677:20:20756:20765	10489795	0	True				
ANR	10490259	EqualityExpression	fo == NULL		10489795	0		==			
ANR	10490260	Identifier	fo		10489795	0					
ANR	10490261	Identifier	NULL		10489795	1					
ANR	10490262	ExpressionStatement	"die ( ""Output failed to open"" )"	678:20:20788:20817	10489795	1	True				
ANR	10490263	CallExpression	"die ( ""Output failed to open"" )"		10489795	0					
ANR	10490264	Callee	die		10489795	0					
ANR	10490265	Identifier	die		10489795	0					
ANR	10490266	ArgumentList	"""Output failed to open"""		10489795	1					
ANR	10490267	Argument	"""Output failed to open"""		10489795	0					
ANR	10490268	PrimaryExpression	"""Output failed to open"""		10489795	0					
ANR	10490269	BreakStatement	break ;	679:16:20835:20840	10489795	7	True				
ANR	10490270	Label	case 'g' :	680:12:20854:20862	10489795	8	True				
ANR	10490271	ExpressionStatement	gamma_tab = arg_value	681:16:20880:20901	10489795	9	True				
ANR	10490272	AssignmentExpression	gamma_tab = arg_value		10489795	0		=			
ANR	10490273	Identifier	gamma_tab		10489795	0					
ANR	10490274	Identifier	arg_value		10489795	1					
ANR	10490275	BreakStatement	break ;	682:16:20919:20924	10489795	10	True				
ANR	10490276	Label	case 'm' :	683:12:20938:20946	10489795	11	True				
ANR	10490277	ExpressionStatement	multiplane = atoi ( arg_value )	684:16:20964:20992	10489795	12	True				
ANR	10490278	AssignmentExpression	multiplane = atoi ( arg_value )		10489795	0		=			
ANR	10490279	Identifier	multiplane		10489795	0					
ANR	10490280	CallExpression	atoi ( arg_value )		10489795	1					
ANR	10490281	Callee	atoi		10489795	0					
ANR	10490282	Identifier	atoi		10489795	0					
ANR	10490283	ArgumentList	arg_value		10489795	1					
ANR	10490284	Argument	arg_value		10489795	0					
ANR	10490285	Identifier	arg_value		10489795	0					
ANR	10490286	BreakStatement	break ;	685:16:21010:21015	10489795	13	True				
ANR	10490287	Label	case 'l' :	686:12:21029:21037	10489795	14	True				
ANR	10490288	ExpressionStatement	levels = atoi ( arg_value )	687:16:21055:21079	10489795	15	True				
ANR	10490289	AssignmentExpression	levels = atoi ( arg_value )		10489795	0		=			
ANR	10490290	Identifier	levels		10489795	0					
ANR	10490291	CallExpression	atoi ( arg_value )		10489795	1					
ANR	10490292	Callee	atoi		10489795	0					
ANR	10490293	Identifier	atoi		10489795	0					
ANR	10490294	ArgumentList	arg_value		10489795	1					
ANR	10490295	Argument	arg_value		10489795	0					
ANR	10490296	Identifier	arg_value		10489795	0					
ANR	10490297	BreakStatement	break ;	688:16:21097:21102	10489795	16	True				
ANR	10490298	Label	case 'e' :	689:12:21116:21124	10489795	17	True				
ANR	10490299	ExpressionStatement	ets_style = atoi ( arg_value )	690:16:21142:21169	10489795	18	True				
ANR	10490300	AssignmentExpression	ets_style = atoi ( arg_value )		10489795	0		=			
ANR	10490301	Identifier	ets_style		10489795	0					
ANR	10490302	CallExpression	atoi ( arg_value )		10489795	1					
ANR	10490303	Callee	atoi		10489795	0					
ANR	10490304	Identifier	atoi		10489795	0					
ANR	10490305	ArgumentList	arg_value		10489795	1					
ANR	10490306	Argument	arg_value		10489795	0					
ANR	10490307	Identifier	arg_value		10489795	0					
ANR	10490308	BreakStatement	break ;	691:16:21187:21192	10489795	19	True				
ANR	10490309	Label	case 'r' :	692:12:21206:21214	10489795	20	True				
ANR	10490310	ExpressionStatement	r_style = atoi ( arg_value )	693:16:21232:21257	10489795	21	True				
ANR	10490311	AssignmentExpression	r_style = atoi ( arg_value )		10489795	0		=			
ANR	10490312	Identifier	r_style		10489795	0					
ANR	10490313	CallExpression	atoi ( arg_value )		10489795	1					
ANR	10490314	Callee	atoi		10489795	0					
ANR	10490315	Identifier	atoi		10489795	0					
ANR	10490316	ArgumentList	arg_value		10489795	1					
ANR	10490317	Argument	arg_value		10489795	0					
ANR	10490318	Identifier	arg_value		10489795	0					
ANR	10490319	BreakStatement	break ;	694:16:21275:21280	10489795	22	True				
ANR	10490320	Label	case 'n' :	695:12:21294:21302	10489795	23	True				
ANR	10490321	ExpressionStatement	noise = atoi ( arg_value )	696:16:21320:21343	10489795	24	True				
ANR	10490322	AssignmentExpression	noise = atoi ( arg_value )		10489795	0		=			
ANR	10490323	Identifier	noise		10489795	0					
ANR	10490324	CallExpression	atoi ( arg_value )		10489795	1					
ANR	10490325	Callee	atoi		10489795	0					
ANR	10490326	Identifier	atoi		10489795	0					
ANR	10490327	ArgumentList	arg_value		10489795	1					
ANR	10490328	Argument	arg_value		10489795	0					
ANR	10490329	Identifier	arg_value		10489795	0					
ANR	10490330	BreakStatement	break ;	697:16:21361:21366	10489795	25	True				
ANR	10490331	Label	case 'a' :	698:12:21380:21388	10489795	26	True				
ANR	10490332	ExpressionStatement	"sscanf ( arg_value , ""%d:%d"" , & aspect_x , & aspect_y )"	699:16:21406:21454	10489795	27	True				
ANR	10490333	CallExpression	"sscanf ( arg_value , ""%d:%d"" , & aspect_x , & aspect_y )"		10489795	0					
ANR	10490334	Callee	sscanf		10489795	0					
ANR	10490335	Identifier	sscanf		10489795	0					
ANR	10490336	ArgumentList	arg_value		10489795	1					
ANR	10490337	Argument	arg_value		10489795	0					
ANR	10490338	Identifier	arg_value		10489795	0					
ANR	10490339	Argument	"""%d:%d"""		10489795	1					
ANR	10490340	PrimaryExpression	"""%d:%d"""		10489795	0					
ANR	10490341	Argument	& aspect_x		10489795	2					
ANR	10490342	UnaryOperationExpression	& aspect_x		10489795	0					
ANR	10490343	UnaryOperator	&		10489795	0					
ANR	10490344	Identifier	aspect_x		10489795	1					
ANR	10490345	Argument	& aspect_y		10489795	3					
ANR	10490346	UnaryOperationExpression	& aspect_y		10489795	0					
ANR	10490347	UnaryOperator	&		10489795	0					
ANR	10490348	Identifier	aspect_y		10489795	1					
ANR	10490349	BreakStatement	break ;	700:16:21472:21477	10489795	28	True				
ANR	10490350	Label	default :	701:12:21491:21498	10489795	29	True				
ANR	10490351	Identifier	default		10489795	0					
ANR	10490352	GotoStatement	goto usage_exit ;	702:16:21516:21531	10489795	30	True				
ANR	10490353	Identifier	usage_exit		10489795	0					
ANR	10490354	ExpressionStatement	"fgets ( buf , sizeof ( buf ) , fi )"	707:4:21568:21595	10489795	54	True				
ANR	10490355	CallExpression	"fgets ( buf , sizeof ( buf ) , fi )"		10489795	0					
ANR	10490356	Callee	fgets		10489795	0					
ANR	10490357	Identifier	fgets		10489795	0					
ANR	10490358	ArgumentList	buf		10489795	1					
ANR	10490359	Argument	buf		10489795	0					
ANR	10490360	Identifier	buf		10489795	0					
ANR	10490361	Argument	sizeof ( buf )		10489795	1					
ANR	10490362	SizeofExpression	sizeof ( buf )		10489795	0					
ANR	10490363	Sizeof	sizeof		10489795	0					
ANR	10490364	SizeofOperand	buf		10489795	1					
ANR	10490365	Argument	fi		10489795	2					
ANR	10490366	Identifier	fi		10489795	0					
ANR	10490367	ExpressionStatement	xs = ys = 0	708:4:21601:21612	10489795	55	True				
ANR	10490368	AssignmentExpression	xs = ys = 0		10489795	0		=			
ANR	10490369	Identifier	xs		10489795	0					
ANR	10490370	AssignmentExpression	ys = 0		10489795	1		=			
ANR	10490371	Identifier	ys		10489795	0					
ANR	10490372	PrimaryExpression	0		10489795	1					
ANR	10490373	IfStatement	if ( buf [ 0 ] == 'P' && buf [ 1 ] == '5' )		10489795	56					
ANR	10490374	Condition	buf [ 0 ] == 'P' && buf [ 1 ] == '5'	709:8:21622:21651	10489795	0	True				
ANR	10490375	AndExpression	buf [ 0 ] == 'P' && buf [ 1 ] == '5'		10489795	0		&&			
ANR	10490376	EqualityExpression	buf [ 0 ] == 'P'		10489795	0		==			
ANR	10490377	ArrayIndexing	buf [ 0 ]		10489795	0					
ANR	10490378	Identifier	buf		10489795	0					
ANR	10490379	PrimaryExpression	0		10489795	1					
ANR	10490380	PrimaryExpression	'P'		10489795	1					
ANR	10490381	EqualityExpression	buf [ 1 ] == '5'		10489795	1		==			
ANR	10490382	ArrayIndexing	buf [ 1 ]		10489795	0					
ANR	10490383	Identifier	buf		10489795	0					
ANR	10490384	PrimaryExpression	1		10489795	1					
ANR	10490385	PrimaryExpression	'5'		10489795	1					
ANR	10490386	CompoundStatement		106:4:3295:3295	10489795	1					
ANR	10490387	ExpressionStatement	"read_pgm ( fi , & xs , & ys , fo )"	711:8:21668:21694	10489795	0	True				
ANR	10490388	CallExpression	"read_pgm ( fi , & xs , & ys , fo )"		10489795	0					
ANR	10490389	Callee	read_pgm		10489795	0					
ANR	10490390	Identifier	read_pgm		10489795	0					
ANR	10490391	ArgumentList	fi		10489795	1					
ANR	10490392	Argument	fi		10489795	0					
ANR	10490393	Identifier	fi		10489795	0					
ANR	10490394	Argument	& xs		10489795	1					
ANR	10490395	UnaryOperationExpression	& xs		10489795	0					
ANR	10490396	UnaryOperator	&		10489795	0					
ANR	10490397	Identifier	xs		10489795	1					
ANR	10490398	Argument	& ys		10489795	2					
ANR	10490399	UnaryOperationExpression	& ys		10489795	0					
ANR	10490400	UnaryOperator	&		10489795	0					
ANR	10490401	Identifier	ys		10489795	1					
ANR	10490402	Argument	fo		10489795	3					
ANR	10490403	Identifier	fo		10489795	0					
ANR	10490404	ExpressionStatement	read_line = read_pgm_line	712:8:21704:21729	10489795	1	True				
ANR	10490405	AssignmentExpression	read_line = read_pgm_line		10489795	0		=			
ANR	10490406	Identifier	read_line		10489795	0					
ANR	10490407	Identifier	read_pgm_line		10489795	1					
ANR	10490408	ExpressionStatement	write_line = write_pgm_line	713:8:21739:21766	10489795	2	True				
ANR	10490409	AssignmentExpression	write_line = write_pgm_line		10489795	0		=			
ANR	10490410	Identifier	write_line		10489795	0					
ANR	10490411	Identifier	write_pgm_line		10489795	1					
ANR	10490412	ExpressionStatement	planes = 1	714:8:21776:21786	10489795	3	True				
ANR	10490413	AssignmentExpression	planes = 1		10489795	0		=			
ANR	10490414	Identifier	planes		10489795	0					
ANR	10490415	PrimaryExpression	1		10489795	1					
ANR	10490416	ExpressionStatement	finalize = NULL	715:8:21796:21812	10489795	4	True				
ANR	10490417	AssignmentExpression	finalize = NULL		10489795	0		=			
ANR	10490418	Identifier	finalize		10489795	0					
ANR	10490419	Identifier	NULL		10489795	1					
ANR	10490420	ExpressionStatement	polarity = ETS_BLACK_IS_ZERO	716:8:21822:21850	10489795	5	True				
ANR	10490421	AssignmentExpression	polarity = ETS_BLACK_IS_ZERO		10489795	0		=			
ANR	10490422	Identifier	polarity		10489795	0					
ANR	10490423	Identifier	ETS_BLACK_IS_ZERO		10489795	1					
ANR	10490424	ElseStatement	else		10489795	0					
ANR	10490425	IfStatement	if ( buf [ 0 ] == 'P' && buf [ 1 ] == '7' )		10489795	0					
ANR	10490426	Condition	buf [ 0 ] == 'P' && buf [ 1 ] == '7'	718:13:21871:21900	10489795	0	True				
ANR	10490427	AndExpression	buf [ 0 ] == 'P' && buf [ 1 ] == '7'		10489795	0		&&			
ANR	10490428	EqualityExpression	buf [ 0 ] == 'P'		10489795	0		==			
ANR	10490429	ArrayIndexing	buf [ 0 ]		10489795	0					
ANR	10490430	Identifier	buf		10489795	0					
ANR	10490431	PrimaryExpression	0		10489795	1					
ANR	10490432	PrimaryExpression	'P'		10489795	1					
ANR	10490433	EqualityExpression	buf [ 1 ] == '7'		10489795	1		==			
ANR	10490434	ArrayIndexing	buf [ 1 ]		10489795	0					
ANR	10490435	Identifier	buf		10489795	0					
ANR	10490436	PrimaryExpression	1		10489795	1					
ANR	10490437	PrimaryExpression	'7'		10489795	1					
ANR	10490438	CompoundStatement		115:4:3544:3544	10489795	1					
ANR	10490439	ExpressionStatement	"planes = read_pam ( fi , & xs , & ys , fo )"	720:8:21917:21952	10489795	0	True				
ANR	10490440	AssignmentExpression	"planes = read_pam ( fi , & xs , & ys , fo )"		10489795	0		=			
ANR	10490441	Identifier	planes		10489795	0					
ANR	10490442	CallExpression	"read_pam ( fi , & xs , & ys , fo )"		10489795	1					
ANR	10490443	Callee	read_pam		10489795	0					
ANR	10490444	Identifier	read_pam		10489795	0					
ANR	10490445	ArgumentList	fi		10489795	1					
ANR	10490446	Argument	fi		10489795	0					
ANR	10490447	Identifier	fi		10489795	0					
ANR	10490448	Argument	& xs		10489795	1					
ANR	10490449	UnaryOperationExpression	& xs		10489795	0					
ANR	10490450	UnaryOperator	&		10489795	0					
ANR	10490451	Identifier	xs		10489795	1					
ANR	10490452	Argument	& ys		10489795	2					
ANR	10490453	UnaryOperationExpression	& ys		10489795	0					
ANR	10490454	UnaryOperator	&		10489795	0					
ANR	10490455	Identifier	ys		10489795	1					
ANR	10490456	Argument	fo		10489795	3					
ANR	10490457	Identifier	fo		10489795	0					
ANR	10490458	ExpressionStatement	read_line = read_pam_line	721:8:21962:21987	10489795	1	True				
ANR	10490459	AssignmentExpression	read_line = read_pam_line		10489795	0		=			
ANR	10490460	Identifier	read_line		10489795	0					
ANR	10490461	Identifier	read_pam_line		10489795	1					
ANR	10490462	ExpressionStatement	write_line = write_pam_line	722:8:21997:22024	10489795	2	True				
ANR	10490463	AssignmentExpression	write_line = write_pam_line		10489795	0		=			
ANR	10490464	Identifier	write_line		10489795	0					
ANR	10490465	Identifier	write_pam_line		10489795	1					
ANR	10490466	ExpressionStatement	finalize = NULL	723:8:22034:22050	10489795	3	True				
ANR	10490467	AssignmentExpression	finalize = NULL		10489795	0		=			
ANR	10490468	Identifier	finalize		10489795	0					
ANR	10490469	Identifier	NULL		10489795	1					
ANR	10490470	ExpressionStatement	polarity = ETS_BLACK_IS_ZERO	724:8:22060:22088	10489795	4	True				
ANR	10490471	AssignmentExpression	polarity = ETS_BLACK_IS_ZERO		10489795	0		=			
ANR	10490472	Identifier	polarity		10489795	0					
ANR	10490473	Identifier	ETS_BLACK_IS_ZERO		10489795	1					
ANR	10490474	ElseStatement	else		10489795	0					
ANR	10490475	IfStatement	if ( buf [ 0 ] == '8' && buf [ 1 ] == 'B' && buf [ 2 ] == 'P' && buf [ 3 ] == 'S' )		10489795	0					
ANR	10490476	Condition	buf [ 0 ] == '8' && buf [ 1 ] == 'B' && buf [ 2 ] == 'P' && buf [ 3 ] == 'S'	726:13:22109:22172	10489795	0	True				
ANR	10490477	AndExpression	buf [ 0 ] == '8' && buf [ 1 ] == 'B' && buf [ 2 ] == 'P' && buf [ 3 ] == 'S'		10489795	0		&&			
ANR	10490478	EqualityExpression	buf [ 0 ] == '8'		10489795	0		==			
ANR	10490479	ArrayIndexing	buf [ 0 ]		10489795	0					
ANR	10490480	Identifier	buf		10489795	0					
ANR	10490481	PrimaryExpression	0		10489795	1					
ANR	10490482	PrimaryExpression	'8'		10489795	1					
ANR	10490483	AndExpression	buf [ 1 ] == 'B' && buf [ 2 ] == 'P' && buf [ 3 ] == 'S'		10489795	1		&&			
ANR	10490484	EqualityExpression	buf [ 1 ] == 'B'		10489795	0		==			
ANR	10490485	ArrayIndexing	buf [ 1 ]		10489795	0					
ANR	10490486	Identifier	buf		10489795	0					
ANR	10490487	PrimaryExpression	1		10489795	1					
ANR	10490488	PrimaryExpression	'B'		10489795	1					
ANR	10490489	AndExpression	buf [ 2 ] == 'P' && buf [ 3 ] == 'S'		10489795	1		&&			
ANR	10490490	EqualityExpression	buf [ 2 ] == 'P'		10489795	0		==			
ANR	10490491	ArrayIndexing	buf [ 2 ]		10489795	0					
ANR	10490492	Identifier	buf		10489795	0					
ANR	10490493	PrimaryExpression	2		10489795	1					
ANR	10490494	PrimaryExpression	'P'		10489795	1					
ANR	10490495	EqualityExpression	buf [ 3 ] == 'S'		10489795	1		==			
ANR	10490496	ArrayIndexing	buf [ 3 ]		10489795	0					
ANR	10490497	Identifier	buf		10489795	0					
ANR	10490498	PrimaryExpression	3		10489795	1					
ANR	10490499	PrimaryExpression	'S'		10489795	1					
ANR	10490500	CompoundStatement		123:4:3816:3816	10489795	1					
ANR	10490501	ExpressionStatement	"read_psd ( fi , & psd_ctx , fo )"	728:8:22189:22215	10489795	0	True				
ANR	10490502	CallExpression	"read_psd ( fi , & psd_ctx , fo )"		10489795	0					
ANR	10490503	Callee	read_psd		10489795	0					
ANR	10490504	Identifier	read_psd		10489795	0					
ANR	10490505	ArgumentList	fi		10489795	1					
ANR	10490506	Argument	fi		10489795	0					
ANR	10490507	Identifier	fi		10489795	0					
ANR	10490508	Argument	& psd_ctx		10489795	1					
ANR	10490509	UnaryOperationExpression	& psd_ctx		10489795	0					
ANR	10490510	UnaryOperator	&		10489795	0					
ANR	10490511	Identifier	psd_ctx		10489795	1					
ANR	10490512	Argument	fo		10489795	2					
ANR	10490513	Identifier	fo		10489795	0					
ANR	10490514	ExpressionStatement	read_line = psd_ctx . read_line	729:8:22225:22254	10489795	1	True				
ANR	10490515	AssignmentExpression	read_line = psd_ctx . read_line		10489795	0		=			
ANR	10490516	Identifier	read_line		10489795	0					
ANR	10490517	MemberAccess	psd_ctx . read_line		10489795	1					
ANR	10490518	Identifier	psd_ctx		10489795	0					
ANR	10490519	Identifier	read_line		10489795	1					
ANR	10490520	ExpressionStatement	write_line = psd_ctx . write_line	730:8:22264:22295	10489795	2	True				
ANR	10490521	AssignmentExpression	write_line = psd_ctx . write_line		10489795	0		=			
ANR	10490522	Identifier	write_line		10489795	0					
ANR	10490523	MemberAccess	psd_ctx . write_line		10489795	1					
ANR	10490524	Identifier	psd_ctx		10489795	0					
ANR	10490525	Identifier	write_line		10489795	1					
ANR	10490526	ExpressionStatement	finalize = psd_ctx . finalize	731:8:22305:22332	10489795	3	True				
ANR	10490527	AssignmentExpression	finalize = psd_ctx . finalize		10489795	0		=			
ANR	10490528	Identifier	finalize		10489795	0					
ANR	10490529	MemberAccess	psd_ctx . finalize		10489795	1					
ANR	10490530	Identifier	psd_ctx		10489795	0					
ANR	10490531	Identifier	finalize		10489795	1					
ANR	10490532	ExpressionStatement	planes = psd_ctx . num_channels	732:8:22342:22371	10489795	4	True				
ANR	10490533	AssignmentExpression	planes = psd_ctx . num_channels		10489795	0		=			
ANR	10490534	Identifier	planes		10489795	0					
ANR	10490535	MemberAccess	psd_ctx . num_channels		10489795	1					
ANR	10490536	Identifier	psd_ctx		10489795	0					
ANR	10490537	Identifier	num_channels		10489795	1					
ANR	10490538	ExpressionStatement	xs = psd_ctx . width	733:8:22381:22399	10489795	5	True				
ANR	10490539	AssignmentExpression	xs = psd_ctx . width		10489795	0		=			
ANR	10490540	Identifier	xs		10489795	0					
ANR	10490541	MemberAccess	psd_ctx . width		10489795	1					
ANR	10490542	Identifier	psd_ctx		10489795	0					
ANR	10490543	Identifier	width		10489795	1					
ANR	10490544	ExpressionStatement	ys = psd_ctx . height	734:8:22409:22428	10489795	6	True				
ANR	10490545	AssignmentExpression	ys = psd_ctx . height		10489795	0		=			
ANR	10490546	Identifier	ys		10489795	0					
ANR	10490547	MemberAccess	psd_ctx . height		10489795	1					
ANR	10490548	Identifier	psd_ctx		10489795	0					
ANR	10490549	Identifier	height		10489795	1					
ANR	10490550	ExpressionStatement	image_ctx = ( void * ) & psd_ctx	735:8:22438:22466	10489795	7	True				
ANR	10490551	AssignmentExpression	image_ctx = ( void * ) & psd_ctx		10489795	0		=			
ANR	10490552	Identifier	image_ctx		10489795	0					
ANR	10490553	CastExpression	( void * ) & psd_ctx		10489795	1					
ANR	10490554	CastTarget	void *		10489795	0					
ANR	10490555	UnaryOperationExpression	& psd_ctx		10489795	1					
ANR	10490556	UnaryOperator	&		10489795	0					
ANR	10490557	Identifier	psd_ctx		10489795	1					
ANR	10490558	IfStatement	if ( psd_ctx . depth == 16 )		10489795	8					
ANR	10490559	Condition	psd_ctx . depth == 16	736:12:22480:22498	10489795	0	True				
ANR	10490560	EqualityExpression	psd_ctx . depth == 16		10489795	0		==			
ANR	10490561	MemberAccess	psd_ctx . depth		10489795	0					
ANR	10490562	Identifier	psd_ctx		10489795	0					
ANR	10490563	Identifier	depth		10489795	1					
ANR	10490564	PrimaryExpression	16		10489795	1					
ANR	10490565	ExpressionStatement	byte_count = 2	737:12:22513:22527	10489795	1	True				
ANR	10490566	AssignmentExpression	byte_count = 2		10489795	0		=			
ANR	10490567	Identifier	byte_count		10489795	0					
ANR	10490568	PrimaryExpression	2		10489795	1					
ANR	10490569	ExpressionStatement	polarity = ETS_BLACK_IS_ONE	738:8:22537:22564	10489795	9	True				
ANR	10490570	AssignmentExpression	polarity = ETS_BLACK_IS_ONE		10489795	0		=			
ANR	10490571	Identifier	polarity		10489795	0					
ANR	10490572	Identifier	ETS_BLACK_IS_ONE		10489795	1					
ANR	10490573	IfStatement	if ( permutes [ planes - 1 ] != 0 )		10489795	10					
ANR	10490574	Condition	permutes [ planes - 1 ] != 0	740:12:22661:22683	10489795	0	True				
ANR	10490575	EqualityExpression	permutes [ planes - 1 ] != 0		10489795	0		!=			
ANR	10490576	ArrayIndexing	permutes [ planes - 1 ]		10489795	0					
ANR	10490577	Identifier	permutes		10489795	0					
ANR	10490578	AdditiveExpression	planes - 1		10489795	1		-			
ANR	10490579	Identifier	planes		10489795	0					
ANR	10490580	PrimaryExpression	1		10489795	1					
ANR	10490581	PrimaryExpression	0		10489795	1					
ANR	10490582	CompoundStatement		138:12:4345:4356	10489795	1					
ANR	10490583	IdentifierDeclStatement	int sum = 0 ;	742:12:22708:22719	10489795	0	True				
ANR	10490584	IdentifierDecl	sum = 0		10489795	0					
ANR	10490585	IdentifierDeclType	int		10489795	0					
ANR	10490586	Identifier	sum		10489795	1					
ANR	10490587	AssignmentExpression	sum = 0		10489795	2		=			
ANR	10490588	Identifier	sum		10489795	0					
ANR	10490589	PrimaryExpression	0		10489795	1					
ANR	10490590	ForStatement	for ( i = 0 ; i < planes ; i ++ )		10489795	1					
ANR	10490591	ForInit	i = 0 ;	743:17:22760:22765	10489795	0	True				
ANR	10490592	AssignmentExpression	i = 0		10489795	0		=			
ANR	10490593	Identifier	i		10489795	0					
ANR	10490594	PrimaryExpression	0		10489795	1					
ANR	10490595	Condition	i < planes	743:24:22767:22776	10489795	1	True				
ANR	10490596	RelationalExpression	i < planes		10489795	0		<			
ANR	10490597	Identifier	i		10489795	0					
ANR	10490598	Identifier	planes		10489795	1					
ANR	10490599	PostIncDecOperationExpression	i ++	743:36:22779:22781	10489795	2	True				
ANR	10490600	Identifier	i		10489795	0					
ANR	10490601	IncDec	++		10489795	1					
ANR	10490602	CompoundStatement		140:12:4434:4434	10489795	3					
ANR	10490603	ExpressionStatement	psd_ctx . permute [ i ] = permutes [ planes - 1 ] [ i ]	745:16:22815:22857	10489795	0	True				
ANR	10490604	AssignmentExpression	psd_ctx . permute [ i ] = permutes [ planes - 1 ] [ i ]		10489795	0		=			
ANR	10490605	ArrayIndexing	psd_ctx . permute [ i ]		10489795	0					
ANR	10490606	MemberAccess	psd_ctx . permute		10489795	0					
ANR	10490607	Identifier	psd_ctx		10489795	0					
ANR	10490608	Identifier	permute		10489795	1					
ANR	10490609	Identifier	i		10489795	1					
ANR	10490610	ArrayIndexing	permutes [ planes - 1 ] [ i ]		10489795	1					
ANR	10490611	ArrayIndexing	permutes [ planes - 1 ]		10489795	0					
ANR	10490612	Identifier	permutes		10489795	0					
ANR	10490613	AdditiveExpression	planes - 1		10489795	1		-			
ANR	10490614	Identifier	planes		10489795	0					
ANR	10490615	PrimaryExpression	1		10489795	1					
ANR	10490616	Identifier	i		10489795	1					
ANR	10490617	ExpressionStatement	sum += psd_ctx . permute [ i ]	746:16:22875:22900	10489795	1	True				
ANR	10490618	AssignmentExpression	sum += psd_ctx . permute [ i ]		10489795	0		+=			
ANR	10490619	Identifier	sum		10489795	0					
ANR	10490620	ArrayIndexing	psd_ctx . permute [ i ]		10489795	1					
ANR	10490621	MemberAccess	psd_ctx . permute		10489795	0					
ANR	10490622	Identifier	psd_ctx		10489795	0					
ANR	10490623	Identifier	permute		10489795	1					
ANR	10490624	Identifier	i		10489795	1					
ANR	10490625	IfStatement	if ( sum != ( ( float ) planes / 2.0 ) * ( float ) ( planes - 1.0 ) )		10489795	2					
ANR	10490626	Condition	sum != ( ( float ) planes / 2.0 ) * ( float ) ( planes - 1.0 )	748:16:22932:22983	10489795	0	True				
ANR	10490627	EqualityExpression	sum != ( ( float ) planes / 2.0 ) * ( float ) ( planes - 1.0 )		10489795	0		!=			
ANR	10490628	Identifier	sum		10489795	0					
ANR	10490629	MultiplicativeExpression	( ( float ) planes / 2.0 ) * ( float ) ( planes - 1.0 )		10489795	1		*			
ANR	10490630	MultiplicativeExpression	( float ) planes / 2.0		10489795	0		/			
ANR	10490631	CastExpression	( float ) planes		10489795	0					
ANR	10490632	CastTarget	float		10489795	0					
ANR	10490633	Identifier	planes		10489795	1					
ANR	10490634	PrimaryExpression	2.0		10489795	1					
ANR	10490635	CastExpression	( float ) ( planes - 1.0 )		10489795	1					
ANR	10490636	CastTarget	float		10489795	0					
ANR	10490637	AdditiveExpression	planes - 1.0		10489795	1		-			
ANR	10490638	Identifier	planes		10489795	0					
ANR	10490639	PrimaryExpression	1.0		10489795	1					
ANR	10490640	ExpressionStatement	"die ( ""Permutation vector values are not valid"" )"	749:16:23002:23049	10489795	1	True				
ANR	10490641	CallExpression	"die ( ""Permutation vector values are not valid"" )"		10489795	0					
ANR	10490642	Callee	die		10489795	0					
ANR	10490643	Identifier	die		10489795	0					
ANR	10490644	ArgumentList	"""Permutation vector values are not valid"""		10489795	1					
ANR	10490645	Argument	"""Permutation vector values are not valid"""		10489795	0					
ANR	10490646	PrimaryExpression	"""Permutation vector values are not valid"""		10489795	0					
ANR	10490647	ElseStatement	else		10489795	0					
ANR	10490648	ExpressionStatement	"die ( ""Need pgmraw, pamraw or psd image on input"" )"	753:8:23084:23132	10489795	0	True				
ANR	10490649	CallExpression	"die ( ""Need pgmraw, pamraw or psd image on input"" )"		10489795	0					
ANR	10490650	Callee	die		10489795	0					
ANR	10490651	Identifier	die		10489795	0					
ANR	10490652	ArgumentList	"""Need pgmraw, pamraw or psd image on input"""		10489795	1					
ANR	10490653	Argument	"""Need pgmraw, pamraw or psd image on input"""		10489795	0					
ANR	10490654	PrimaryExpression	"""Need pgmraw, pamraw or psd image on input"""		10489795	0					
ANR	10490655	ExpressionStatement	xsb = xs	755:4:23139:23147	10489795	57	True				
ANR	10490656	AssignmentExpression	xsb = xs		10489795	0		=			
ANR	10490657	Identifier	xsb		10489795	0					
ANR	10490658	Identifier	xs		10489795	1					
ANR	10490659	ForStatement	for ( i = 0 ; i < planes ; i ++ )		10489795	58					
ANR	10490660	ForInit	i = 0 ;	756:9:23158:23163	10489795	0	True				
ANR	10490661	AssignmentExpression	i = 0		10489795	0		=			
ANR	10490662	Identifier	i		10489795	0					
ANR	10490663	PrimaryExpression	0		10489795	1					
ANR	10490664	Condition	i < planes	756:16:23165:23174	10489795	1	True				
ANR	10490665	RelationalExpression	i < planes		10489795	0		<			
ANR	10490666	Identifier	i		10489795	0					
ANR	10490667	Identifier	planes		10489795	1					
ANR	10490668	PostIncDecOperationExpression	i ++	756:28:23177:23179	10489795	2	True				
ANR	10490669	Identifier	i		10489795	0					
ANR	10490670	IncDec	++		10489795	1					
ANR	10490671	CompoundStatement		153:4:4823:4823	10489795	3					
ANR	10490672	ExpressionStatement	ibufs [ i ] = ( ETS_SrcPixel * ) malloc ( xs * byte_count )	758:8:23196:23246	10489795	0	True				
ANR	10490673	AssignmentExpression	ibufs [ i ] = ( ETS_SrcPixel * ) malloc ( xs * byte_count )		10489795	0		=			
ANR	10490674	ArrayIndexing	ibufs [ i ]		10489795	0					
ANR	10490675	Identifier	ibufs		10489795	0					
ANR	10490676	Identifier	i		10489795	1					
ANR	10490677	CastExpression	( ETS_SrcPixel * ) malloc ( xs * byte_count )		10489795	1					
ANR	10490678	CastTarget	ETS_SrcPixel *		10489795	0					
ANR	10490679	CallExpression	malloc ( xs * byte_count )		10489795	1					
ANR	10490680	Callee	malloc		10489795	0					
ANR	10490681	Identifier	malloc		10489795	0					
ANR	10490682	ArgumentList	xs * byte_count		10489795	1					
ANR	10490683	Argument	xs * byte_count		10489795	0					
ANR	10490684	MultiplicativeExpression	xs * byte_count		10489795	0		*			
ANR	10490685	Identifier	xs		10489795	0					
ANR	10490686	Identifier	byte_count		10489795	1					
ANR	10490687	ExpressionStatement	"obufs [ i ] = ( uchar * ) ets_malloc_aligned ( xsb + 16 , 16 )"	759:8:23256:23308	10489795	1	True				
ANR	10490688	AssignmentExpression	"obufs [ i ] = ( uchar * ) ets_malloc_aligned ( xsb + 16 , 16 )"		10489795	0		=			
ANR	10490689	ArrayIndexing	obufs [ i ]		10489795	0					
ANR	10490690	Identifier	obufs		10489795	0					
ANR	10490691	Identifier	i		10489795	1					
ANR	10490692	CastExpression	"( uchar * ) ets_malloc_aligned ( xsb + 16 , 16 )"		10489795	1					
ANR	10490693	CastTarget	uchar *		10489795	0					
ANR	10490694	CallExpression	"ets_malloc_aligned ( xsb + 16 , 16 )"		10489795	1					
ANR	10490695	Callee	ets_malloc_aligned		10489795	0					
ANR	10490696	Identifier	ets_malloc_aligned		10489795	0					
ANR	10490697	ArgumentList	xsb + 16		10489795	1					
ANR	10490698	Argument	xsb + 16		10489795	0					
ANR	10490699	AdditiveExpression	xsb + 16		10489795	0		+			
ANR	10490700	Identifier	xsb		10489795	0					
ANR	10490701	PrimaryExpression	16		10489795	1					
ANR	10490702	Argument	16		10489795	1					
ANR	10490703	PrimaryExpression	16		10489795	0					
ANR	10490704	IfStatement	if ( gamma_tab )		10489795	59					
ANR	10490705	Condition	gamma_tab	763:8:23377:23385	10489795	0	True				
ANR	10490706	Identifier	gamma_tab		10489795	0					
ANR	10490707	CompoundStatement		161:8:5039:5073	10489795	1					
ANR	10490708	IdentifierDeclStatement	"FILE * lutf = fopen ( gamma_tab , ""r"" ) ;"	765:8:23402:23436	10489795	0	True				
ANR	10490709	IdentifierDecl	"* lutf = fopen ( gamma_tab , ""r"" )"		10489795	0					
ANR	10490710	IdentifierDeclType	FILE *		10489795	0					
ANR	10490711	Identifier	lutf		10489795	1					
ANR	10490712	AssignmentExpression	"* lutf = fopen ( gamma_tab , ""r"" )"		10489795	2		=			
ANR	10490713	Identifier	lutf		10489795	0					
ANR	10490714	CallExpression	"fopen ( gamma_tab , ""r"" )"		10489795	1					
ANR	10490715	Callee	fopen		10489795	0					
ANR	10490716	Identifier	fopen		10489795	0					
ANR	10490717	ArgumentList	gamma_tab		10489795	1					
ANR	10490718	Argument	gamma_tab		10489795	0					
ANR	10490719	Identifier	gamma_tab		10489795	0					
ANR	10490720	Argument	"""r"""		10489795	1					
ANR	10490721	PrimaryExpression	"""r"""		10489795	0					
ANR	10490722	ForStatement	for ( i = 0 ; i < ( ETS_SRC_MAX + 1 ) ; i ++ )		10489795	1					
ANR	10490723	ForInit	i = 0 ;	766:13:23451:23456	10489795	0	True				
ANR	10490724	AssignmentExpression	i = 0		10489795	0		=			
ANR	10490725	Identifier	i		10489795	0					
ANR	10490726	PrimaryExpression	0		10489795	1					
ANR	10490727	Condition	i < ( ETS_SRC_MAX + 1 )	766:20:23458:23476	10489795	1	True				
ANR	10490728	RelationalExpression	i < ( ETS_SRC_MAX + 1 )		10489795	0		<			
ANR	10490729	Identifier	i		10489795	0					
ANR	10490730	AdditiveExpression	ETS_SRC_MAX + 1		10489795	1		+			
ANR	10490731	Identifier	ETS_SRC_MAX		10489795	0					
ANR	10490732	PrimaryExpression	1		10489795	1					
ANR	10490733	PostIncDecOperationExpression	i ++	766:41:23479:23481	10489795	2	True				
ANR	10490734	Identifier	i		10489795	0					
ANR	10490735	IncDec	++		10489795	1					
ANR	10490736	ExpressionStatement	"fscanf ( lutf , ""%d"" , & lut [ i ] )"	767:12:23496:23523	10489795	3	True				
ANR	10490737	CallExpression	"fscanf ( lutf , ""%d"" , & lut [ i ] )"		10489795	0					
ANR	10490738	Callee	fscanf		10489795	0					
ANR	10490739	Identifier	fscanf		10489795	0					
ANR	10490740	ArgumentList	lutf		10489795	1					
ANR	10490741	Argument	lutf		10489795	0					
ANR	10490742	Identifier	lutf		10489795	0					
ANR	10490743	Argument	"""%d"""		10489795	1					
ANR	10490744	PrimaryExpression	"""%d"""		10489795	0					
ANR	10490745	Argument	& lut [ i ]		10489795	2					
ANR	10490746	UnaryOperationExpression	& lut [ i ]		10489795	0					
ANR	10490747	UnaryOperator	&		10489795	0					
ANR	10490748	ArrayIndexing	lut [ i ]		10489795	1					
ANR	10490749	Identifier	lut		10489795	0					
ANR	10490750	Identifier	i		10489795	1					
ANR	10490751	ExpressionStatement	fclose ( lutf )	768:8:23533:23545	10489795	2	True				
ANR	10490752	CallExpression	fclose ( lutf )		10489795	0					
ANR	10490753	Callee	fclose		10489795	0					
ANR	10490754	Identifier	fclose		10489795	0					
ANR	10490755	ArgumentList	lutf		10489795	1					
ANR	10490756	Argument	lutf		10489795	0					
ANR	10490757	Identifier	lutf		10489795	0					
ANR	10490758	ElseStatement	else		10489795	0					
ANR	10490759	CompoundStatement		168:8:5213:5239	10489795	0					
ANR	10490760	IdentifierDeclStatement	double scale = ETS_SRC_MAX ;	772:8:23576:23602	10489795	0	True				
ANR	10490761	IdentifierDecl	scale = ETS_SRC_MAX		10489795	0					
ANR	10490762	IdentifierDeclType	double		10489795	0					
ANR	10490763	Identifier	scale		10489795	1					
ANR	10490764	AssignmentExpression	scale = ETS_SRC_MAX		10489795	2		=			
ANR	10490765	Identifier	ETS_SRC_MAX		10489795	0					
ANR	10490766	Identifier	ETS_SRC_MAX		10489795	1					
ANR	10490767	ForStatement	for ( i = 0 ; i < ( ETS_SRC_MAX + 1 ) ; i ++ )		10489795	1					
ANR	10490768	ForInit	i = 0 ;	773:13:23617:23622	10489795	0	True				
ANR	10490769	AssignmentExpression	i = 0		10489795	0		=			
ANR	10490770	Identifier	i		10489795	0					
ANR	10490771	PrimaryExpression	0		10489795	1					
ANR	10490772	Condition	i < ( ETS_SRC_MAX + 1 )	773:20:23624:23642	10489795	1	True				
ANR	10490773	RelationalExpression	i < ( ETS_SRC_MAX + 1 )		10489795	0		<			
ANR	10490774	Identifier	i		10489795	0					
ANR	10490775	AdditiveExpression	ETS_SRC_MAX + 1		10489795	1		+			
ANR	10490776	Identifier	ETS_SRC_MAX		10489795	0					
ANR	10490777	PrimaryExpression	1		10489795	1					
ANR	10490778	PostIncDecOperationExpression	i ++	773:41:23645:23647	10489795	2	True				
ANR	10490779	Identifier	i		10489795	0					
ANR	10490780	IncDec	++		10489795	1					
ANR	10490781	ExpressionStatement	"lut [ i ] = ( int ) ( ( 1 << 24 ) * ( pow ( i / scale , 1.0 ) ) )"	775:12:23668:23718	10489795	3	True				
ANR	10490782	AssignmentExpression	"lut [ i ] = ( int ) ( ( 1 << 24 ) * ( pow ( i / scale , 1.0 ) ) )"		10489795	0		=			
ANR	10490783	ArrayIndexing	lut [ i ]		10489795	0					
ANR	10490784	Identifier	lut		10489795	0					
ANR	10490785	Identifier	i		10489795	1					
ANR	10490786	CastExpression	"( int ) ( ( 1 << 24 ) * ( pow ( i / scale , 1.0 ) ) )"		10489795	1					
ANR	10490787	CastTarget	int		10489795	0					
ANR	10490788	MultiplicativeExpression	"( 1 << 24 ) * ( pow ( i / scale , 1.0 ) )"		10489795	1		*			
ANR	10490789	ShiftExpression	1 << 24		10489795	0		<<			
ANR	10490790	PrimaryExpression	1		10489795	0					
ANR	10490791	PrimaryExpression	24		10489795	1					
ANR	10490792	CallExpression	"pow ( i / scale , 1.0 )"		10489795	1					
ANR	10490793	Callee	pow		10489795	0					
ANR	10490794	Identifier	pow		10489795	0					
ANR	10490795	ArgumentList	i / scale		10489795	1					
ANR	10490796	Argument	i / scale		10489795	0					
ANR	10490797	MultiplicativeExpression	i / scale		10489795	0		/			
ANR	10490798	Identifier	i		10489795	0					
ANR	10490799	Identifier	scale		10489795	1					
ANR	10490800	Argument	1.0		10489795	1					
ANR	10490801	PrimaryExpression	1.0		10489795	0					
ANR	10490802	ForStatement	for ( i = 0 ; i < ( ETS_SRC_MAX + 1 ) ; i ++ )		10489795	60					
ANR	10490803	ForInit	i = 0 ;	781:9:23809:23814	10489795	0	True				
ANR	10490804	AssignmentExpression	i = 0		10489795	0		=			
ANR	10490805	Identifier	i		10489795	0					
ANR	10490806	PrimaryExpression	0		10489795	1					
ANR	10490807	Condition	i < ( ETS_SRC_MAX + 1 )	781:16:23816:23834	10489795	1	True				
ANR	10490808	RelationalExpression	i < ( ETS_SRC_MAX + 1 )		10489795	0		<			
ANR	10490809	Identifier	i		10489795	0					
ANR	10490810	AdditiveExpression	ETS_SRC_MAX + 1		10489795	1		+			
ANR	10490811	Identifier	ETS_SRC_MAX		10489795	0					
ANR	10490812	PrimaryExpression	1		10489795	1					
ANR	10490813	PostIncDecOperationExpression	i ++	781:37:23837:23839	10489795	2	True				
ANR	10490814	Identifier	i		10489795	0					
ANR	10490815	IncDec	++		10489795	1					
ANR	10490816	ExpressionStatement	rs_lut [ i ] = 2 << 16	782:8:23850:23869	10489795	3	True				
ANR	10490817	AssignmentExpression	rs_lut [ i ] = 2 << 16		10489795	0		=			
ANR	10490818	ArrayIndexing	rs_lut [ i ]		10489795	0					
ANR	10490819	Identifier	rs_lut		10489795	0					
ANR	10490820	Identifier	i		10489795	1					
ANR	10490821	ShiftExpression	2 << 16		10489795	1		<<			
ANR	10490822	PrimaryExpression	2		10489795	0					
ANR	10490823	PrimaryExpression	16		10489795	1					
ANR	10490824	ExpressionStatement	"params . dump_file = fopen ( DUMP_FILE_NAME , ""wb"" )"	785:4:23898:23944	10489795	61	True				
ANR	10490825	AssignmentExpression	"params . dump_file = fopen ( DUMP_FILE_NAME , ""wb"" )"		10489795	0		=			
ANR	10490826	MemberAccess	params . dump_file		10489795	0					
ANR	10490827	Identifier	params		10489795	0					
ANR	10490828	Identifier	dump_file		10489795	1					
ANR	10490829	CallExpression	"fopen ( DUMP_FILE_NAME , ""wb"" )"		10489795	1					
ANR	10490830	Callee	fopen		10489795	0					
ANR	10490831	Identifier	fopen		10489795	0					
ANR	10490832	ArgumentList	DUMP_FILE_NAME		10489795	1					
ANR	10490833	Argument	DUMP_FILE_NAME		10489795	0					
ANR	10490834	Identifier	DUMP_FILE_NAME		10489795	0					
ANR	10490835	Argument	"""wb"""		10489795	1					
ANR	10490836	PrimaryExpression	"""wb"""		10489795	0					
ANR	10490837	ExpressionStatement	params . dump_level = ETS_DUMP_ALL	789:4:23992:24024	10489795	62	True				
ANR	10490838	AssignmentExpression	params . dump_level = ETS_DUMP_ALL		10489795	0		=			
ANR	10490839	MemberAccess	params . dump_level		10489795	0					
ANR	10490840	Identifier	params		10489795	0					
ANR	10490841	Identifier	dump_level		10489795	1					
ANR	10490842	Identifier	ETS_DUMP_ALL		10489795	1					
ANR	10490843	ExpressionStatement	params . width = xs	791:4:24031:24048	10489795	63	True				
ANR	10490844	AssignmentExpression	params . width = xs		10489795	0		=			
ANR	10490845	MemberAccess	params . width		10489795	0					
ANR	10490846	Identifier	params		10489795	0					
ANR	10490847	Identifier	width		10489795	1					
ANR	10490848	Identifier	xs		10489795	1					
ANR	10490849	ExpressionStatement	params . n_planes = planes	792:4:24054:24078	10489795	64	True				
ANR	10490850	AssignmentExpression	params . n_planes = planes		10489795	0		=			
ANR	10490851	MemberAccess	params . n_planes		10489795	0					
ANR	10490852	Identifier	params		10489795	0					
ANR	10490853	Identifier	n_planes		10489795	1					
ANR	10490854	Identifier	planes		10489795	1					
ANR	10490855	ExpressionStatement	params . levels = levels	793:4:24084:24106	10489795	65	True				
ANR	10490856	AssignmentExpression	params . levels = levels		10489795	0		=			
ANR	10490857	MemberAccess	params . levels		10489795	0					
ANR	10490858	Identifier	params		10489795	0					
ANR	10490859	Identifier	levels		10489795	1					
ANR	10490860	Identifier	levels		10489795	1					
ANR	10490861	ForStatement	for ( i = 0 ; i < planes ; i ++ )		10489795	66					
ANR	10490862	ForInit	i = 0 ;	794:9:24117:24122	10489795	0	True				
ANR	10490863	AssignmentExpression	i = 0		10489795	0		=			
ANR	10490864	Identifier	i		10489795	0					
ANR	10490865	PrimaryExpression	0		10489795	1					
ANR	10490866	Condition	i < planes	794:16:24124:24133	10489795	1	True				
ANR	10490867	RelationalExpression	i < planes		10489795	0		<			
ANR	10490868	Identifier	i		10489795	0					
ANR	10490869	Identifier	planes		10489795	1					
ANR	10490870	PostIncDecOperationExpression	i ++	794:28:24136:24138	10489795	2	True				
ANR	10490871	Identifier	i		10489795	0					
ANR	10490872	IncDec	++		10489795	1					
ANR	10490873	ExpressionStatement	luts [ i ] = lut	795:8:24149:24162	10489795	3	True				
ANR	10490874	AssignmentExpression	luts [ i ] = lut		10489795	0		=			
ANR	10490875	ArrayIndexing	luts [ i ]		10489795	0					
ANR	10490876	Identifier	luts		10489795	0					
ANR	10490877	Identifier	i		10489795	1					
ANR	10490878	Identifier	lut		10489795	1					
ANR	10490879	ExpressionStatement	params . luts = luts	796:4:24168:24186	10489795	67	True				
ANR	10490880	AssignmentExpression	params . luts = luts		10489795	0		=			
ANR	10490881	MemberAccess	params . luts		10489795	0					
ANR	10490882	Identifier	params		10489795	0					
ANR	10490883	Identifier	luts		10489795	1					
ANR	10490884	Identifier	luts		10489795	1					
ANR	10490885	ExpressionStatement	params . strengths = ( multiplane ? strengths [ planes - 1 ] : strengths [ 0 ] )	797:4:24192:24260	10489795	68	True				
ANR	10490886	AssignmentExpression	params . strengths = ( multiplane ? strengths [ planes - 1 ] : strengths [ 0 ] )		10489795	0		=			
ANR	10490887	MemberAccess	params . strengths		10489795	0					
ANR	10490888	Identifier	params		10489795	0					
ANR	10490889	Identifier	strengths		10489795	1					
ANR	10490890	ConditionalExpression	multiplane ? strengths [ planes - 1 ] : strengths [ 0 ]		10489795	1					
ANR	10490891	Condition	multiplane		10489795	0					
ANR	10490892	Identifier	multiplane		10489795	0					
ANR	10490893	ArrayIndexing	strengths [ planes - 1 ]		10489795	1					
ANR	10490894	Identifier	strengths		10489795	0					
ANR	10490895	AdditiveExpression	planes - 1		10489795	1		-			
ANR	10490896	Identifier	planes		10489795	0					
ANR	10490897	PrimaryExpression	1		10489795	1					
ANR	10490898	ArrayIndexing	strengths [ 0 ]		10489795	2					
ANR	10490899	Identifier	strengths		10489795	0					
ANR	10490900	PrimaryExpression	0		10489795	1					
ANR	10490901	ExpressionStatement	params . aspect_x = aspect_x	798:4:24266:24292	10489795	69	True				
ANR	10490902	AssignmentExpression	params . aspect_x = aspect_x		10489795	0		=			
ANR	10490903	MemberAccess	params . aspect_x		10489795	0					
ANR	10490904	Identifier	params		10489795	0					
ANR	10490905	Identifier	aspect_x		10489795	1					
ANR	10490906	Identifier	aspect_x		10489795	1					
ANR	10490907	ExpressionStatement	params . aspect_y = aspect_y	799:4:24298:24324	10489795	70	True				
ANR	10490908	AssignmentExpression	params . aspect_y = aspect_y		10489795	0		=			
ANR	10490909	MemberAccess	params . aspect_y		10489795	0					
ANR	10490910	Identifier	params		10489795	0					
ANR	10490911	Identifier	aspect_y		10489795	1					
ANR	10490912	Identifier	aspect_y		10489795	1					
ANR	10490913	ExpressionStatement	params . distscale = 0	800:4:24330:24350	10489795	71	True				
ANR	10490914	AssignmentExpression	params . distscale = 0		10489795	0		=			
ANR	10490915	MemberAccess	params . distscale		10489795	0					
ANR	10490916	Identifier	params		10489795	0					
ANR	10490917	Identifier	distscale		10489795	1					
ANR	10490918	PrimaryExpression	0		10489795	1					
ANR	10490919	ExpressionStatement	params . rand_scale = noise	801:4:24356:24381	10489795	72	True				
ANR	10490920	AssignmentExpression	params . rand_scale = noise		10489795	0		=			
ANR	10490921	MemberAccess	params . rand_scale		10489795	0					
ANR	10490922	Identifier	params		10489795	0					
ANR	10490923	Identifier	rand_scale		10489795	1					
ANR	10490924	Identifier	noise		10489795	1					
ANR	10490925	ExpressionStatement	params . c1_scale = c1_scale	802:4:24387:24413	10489795	73	True				
ANR	10490926	AssignmentExpression	params . c1_scale = c1_scale		10489795	0		=			
ANR	10490927	MemberAccess	params . c1_scale		10489795	0					
ANR	10490928	Identifier	params		10489795	0					
ANR	10490929	Identifier	c1_scale		10489795	1					
ANR	10490930	Identifier	c1_scale		10489795	1					
ANR	10490931	ExpressionStatement	params . ets_style = ets_style	803:4:24419:24447	10489795	74	True				
ANR	10490932	AssignmentExpression	params . ets_style = ets_style		10489795	0		=			
ANR	10490933	MemberAccess	params . ets_style		10489795	0					
ANR	10490934	Identifier	params		10489795	0					
ANR	10490935	Identifier	ets_style		10489795	1					
ANR	10490936	Identifier	ets_style		10489795	1					
ANR	10490937	ExpressionStatement	params . r_style = r_style	804:4:24453:24477	10489795	75	True				
ANR	10490938	AssignmentExpression	params . r_style = r_style		10489795	0		=			
ANR	10490939	MemberAccess	params . r_style		10489795	0					
ANR	10490940	Identifier	params		10489795	0					
ANR	10490941	Identifier	r_style		10489795	1					
ANR	10490942	Identifier	r_style		10489795	1					
ANR	10490943	ExpressionStatement	params . polarity = polarity	805:4:24483:24509	10489795	76	True				
ANR	10490944	AssignmentExpression	params . polarity = polarity		10489795	0		=			
ANR	10490945	MemberAccess	params . polarity		10489795	0					
ANR	10490946	Identifier	params		10489795	0					
ANR	10490947	Identifier	polarity		10489795	1					
ANR	10490948	Identifier	polarity		10489795	1					
ANR	10490949	ForStatement	for ( i = 0 ; i < planes ; i ++ )		10489795	77					
ANR	10490950	ForInit	i = 0 ;	806:9:24520:24525	10489795	0	True				
ANR	10490951	AssignmentExpression	i = 0		10489795	0		=			
ANR	10490952	Identifier	i		10489795	0					
ANR	10490953	PrimaryExpression	0		10489795	1					
ANR	10490954	Condition	i < planes	806:16:24527:24536	10489795	1	True				
ANR	10490955	RelationalExpression	i < planes		10489795	0		<			
ANR	10490956	Identifier	i		10489795	0					
ANR	10490957	Identifier	planes		10489795	1					
ANR	10490958	PostIncDecOperationExpression	i ++	806:28:24539:24541	10489795	2	True				
ANR	10490959	Identifier	i		10489795	0					
ANR	10490960	IncDec	++		10489795	1					
ANR	10490961	ExpressionStatement	rs_luts [ i ] = rs_lut	807:8:24552:24571	10489795	3	True				
ANR	10490962	AssignmentExpression	rs_luts [ i ] = rs_lut		10489795	0		=			
ANR	10490963	ArrayIndexing	rs_luts [ i ]		10489795	0					
ANR	10490964	Identifier	rs_luts		10489795	0					
ANR	10490965	Identifier	i		10489795	1					
ANR	10490966	Identifier	rs_lut		10489795	1					
ANR	10490967	ExpressionStatement	params . rand_scale_luts = rs_luts	808:4:24577:24609	10489795	78	True				
ANR	10490968	AssignmentExpression	params . rand_scale_luts = rs_luts		10489795	0		=			
ANR	10490969	MemberAccess	params . rand_scale_luts		10489795	0					
ANR	10490970	Identifier	params		10489795	0					
ANR	10490971	Identifier	rand_scale_luts		10489795	1					
ANR	10490972	Identifier	rs_luts		10489795	1					
ANR	10490973	ExpressionStatement	params . rand_scale_luts = NULL	809:4:24615:24644	10489795	79	True				
ANR	10490974	AssignmentExpression	params . rand_scale_luts = NULL		10489795	0		=			
ANR	10490975	MemberAccess	params . rand_scale_luts		10489795	0					
ANR	10490976	Identifier	params		10489795	0					
ANR	10490977	Identifier	rand_scale_luts		10489795	1					
ANR	10490978	Identifier	NULL		10489795	1					
ANR	10490979	ExpressionStatement	ctx = ets_new ( & params )	810:4:24650:24672	10489795	80	True				
ANR	10490980	AssignmentExpression	ctx = ets_new ( & params )		10489795	0		=			
ANR	10490981	Identifier	ctx		10489795	0					
ANR	10490982	CallExpression	ets_new ( & params )		10489795	1					
ANR	10490983	Callee	ets_new		10489795	0					
ANR	10490984	Identifier	ets_new		10489795	0					
ANR	10490985	ArgumentList	& params		10489795	1					
ANR	10490986	Argument	& params		10489795	0					
ANR	10490987	UnaryOperationExpression	& params		10489795	0					
ANR	10490988	UnaryOperator	&		10489795	0					
ANR	10490989	Identifier	params		10489795	1					
ANR	10490990	ForStatement	for ( y = 0 ; y < ys ; y ++ )		10489795	81					
ANR	10490991	ForInit	y = 0 ;	811:9:24683:24688	10489795	0	True				
ANR	10490992	AssignmentExpression	y = 0		10489795	0		=			
ANR	10490993	Identifier	y		10489795	0					
ANR	10490994	PrimaryExpression	0		10489795	1					
ANR	10490995	Condition	y < ys	811:16:24690:24695	10489795	1	True				
ANR	10490996	RelationalExpression	y < ys		10489795	0		<			
ANR	10490997	Identifier	y		10489795	0					
ANR	10490998	Identifier	ys		10489795	1					
ANR	10490999	PostIncDecOperationExpression	y ++	811:24:24698:24700	10489795	2	True				
ANR	10491000	Identifier	y		10489795	0					
ANR	10491001	IncDec	++		10489795	1					
ANR	10491002	CompoundStatement		209:8:6354:6359	10489795	3					
ANR	10491003	IdentifierDeclStatement	int x ;	813:8:24717:24722	10489795	0	True				
ANR	10491004	IdentifierDecl	x		10489795	0					
ANR	10491005	IdentifierDeclType	int		10489795	0					
ANR	10491006	Identifier	x		10489795	1					
ANR	10491007	ExpressionStatement	"read_line ( ibufs , xs , fi , planes , image_ctx )"	815:8:24733:24776	10489795	1	True				
ANR	10491008	CallExpression	"read_line ( ibufs , xs , fi , planes , image_ctx )"		10489795	0					
ANR	10491009	Callee	read_line		10489795	0					
ANR	10491010	Identifier	read_line		10489795	0					
ANR	10491011	ArgumentList	ibufs		10489795	1					
ANR	10491012	Argument	ibufs		10489795	0					
ANR	10491013	Identifier	ibufs		10489795	0					
ANR	10491014	Argument	xs		10489795	1					
ANR	10491015	Identifier	xs		10489795	0					
ANR	10491016	Argument	fi		10489795	2					
ANR	10491017	Identifier	fi		10489795	0					
ANR	10491018	Argument	planes		10489795	3					
ANR	10491019	Identifier	planes		10489795	0					
ANR	10491020	Argument	image_ctx		10489795	4					
ANR	10491021	Identifier	image_ctx		10489795	0					
ANR	10491022	Statement	ets_line	816:8:24786:24793	10489795	2	True				
ANR	10491023	Statement	(	816:16:24794:24794	10489795	3	True				
ANR	10491024	Statement	ctx	816:17:24795:24797	10489795	4	True				
ANR	10491025	Statement	","	816:20:24798:24798	10489795	5	True				
ANR	10491026	Statement	obufs	816:22:24800:24804	10489795	6	True				
ANR	10491027	Statement	","	816:27:24805:24805	10489795	7	True				
ANR	10491028	Statement	(	816:29:24807:24807	10489795	8	True				
ANR	10491029	Statement	const	816:30:24808:24812	10489795	9	True				
ANR	10491030	Statement	ETS_SrcPixel	816:36:24814:24825	10489795	10	True				
ANR	10491031	Statement	*	816:49:24827:24827	10489795	11	True				
ANR	10491032	Statement	const	816:50:24828:24832	10489795	12	True				
ANR	10491033	Statement	*	816:56:24834:24834	10489795	13	True				
ANR	10491034	Statement	)	816:57:24835:24835	10489795	14	True				
ANR	10491035	Statement	&	816:58:24836:24836	10489795	15	True				
ANR	10491036	Statement	ibufs	816:59:24837:24841	10489795	16	True				
ANR	10491037	Statement	)	816:64:24842:24842	10489795	17	True				
ANR	10491038	ExpressionStatement		816:65:24843:24843	10489795	18	True				
ANR	10491039	ForStatement	for ( i = 0 ; i < planes ; i ++ )		10489795	19					
ANR	10491040	ForInit	i = 0 ;	818:13:24867:24872	10489795	0	True				
ANR	10491041	AssignmentExpression	i = 0		10489795	0		=			
ANR	10491042	Identifier	i		10489795	0					
ANR	10491043	PrimaryExpression	0		10489795	1					
ANR	10491044	Condition	i < planes	818:20:24874:24883	10489795	1	True				
ANR	10491045	RelationalExpression	i < planes		10489795	0		<			
ANR	10491046	Identifier	i		10489795	0					
ANR	10491047	Identifier	planes		10489795	1					
ANR	10491048	PostIncDecOperationExpression	i ++	818:32:24886:24888	10489795	2	True				
ANR	10491049	Identifier	i		10489795	0					
ANR	10491050	IncDec	++		10489795	1					
ANR	10491051	CompoundStatement		216:12:6550:6572	10489795	3					
ANR	10491052	IdentifierDeclStatement	uchar * obuf = obufs [ i ] ;	820:12:24913:24935	10489795	0	True				
ANR	10491053	IdentifierDecl	* obuf = obufs [ i ]		10489795	0					
ANR	10491054	IdentifierDeclType	uchar *		10489795	0					
ANR	10491055	Identifier	obuf		10489795	1					
ANR	10491056	AssignmentExpression	* obuf = obufs [ i ]		10489795	2		=			
ANR	10491057	Identifier	obuf		10489795	0					
ANR	10491058	ArrayIndexing	obufs [ i ]		10489795	1					
ANR	10491059	Identifier	obufs		10489795	0					
ANR	10491060	Identifier	i		10489795	1					
ANR	10491061	IfStatement	if ( polarity == ETS_BLACK_IS_ONE )		10489795	1					
ANR	10491062	Condition	polarity == ETS_BLACK_IS_ONE	821:16:24953:24980	10489795	0	True				
ANR	10491063	EqualityExpression	polarity == ETS_BLACK_IS_ONE		10489795	0		==			
ANR	10491064	Identifier	polarity		10489795	0					
ANR	10491065	Identifier	ETS_BLACK_IS_ONE		10489795	1					
ANR	10491066	CompoundStatement		218:12:6632:6632	10489795	1					
ANR	10491067	ForStatement	for ( x = 0 ; x < xs ; x ++ )		10489795	0					
ANR	10491068	ForInit	x = 0 ;	823:21:25018:25023	10489795	0	True				
ANR	10491069	AssignmentExpression	x = 0		10489795	0		=			
ANR	10491070	Identifier	x		10489795	0					
ANR	10491071	PrimaryExpression	0		10489795	1					
ANR	10491072	Condition	x < xs	823:28:25025:25030	10489795	1	True				
ANR	10491073	RelationalExpression	x < xs		10489795	0		<			
ANR	10491074	Identifier	x		10489795	0					
ANR	10491075	Identifier	xs		10489795	1					
ANR	10491076	PostIncDecOperationExpression	x ++	823:36:25033:25035	10489795	2	True				
ANR	10491077	Identifier	x		10489795	0					
ANR	10491078	IncDec	++		10489795	1					
ANR	10491079	CompoundStatement		220:16:6691:6691	10489795	3					
ANR	10491080	ExpressionStatement	obuf [ x ] = obuf [ x ] * 255 / ( params . levels - 1 )	825:20:25076:25121	10489795	0	True				
ANR	10491081	AssignmentExpression	obuf [ x ] = obuf [ x ] * 255 / ( params . levels - 1 )		10489795	0		=			
ANR	10491082	ArrayIndexing	obuf [ x ]		10489795	0					
ANR	10491083	Identifier	obuf		10489795	0					
ANR	10491084	Identifier	x		10489795	1					
ANR	10491085	MultiplicativeExpression	obuf [ x ] * 255 / ( params . levels - 1 )		10489795	1		*			
ANR	10491086	ArrayIndexing	obuf [ x ]		10489795	0					
ANR	10491087	Identifier	obuf		10489795	0					
ANR	10491088	Identifier	x		10489795	1					
ANR	10491089	MultiplicativeExpression	255 / ( params . levels - 1 )		10489795	1		/			
ANR	10491090	PrimaryExpression	255		10489795	0					
ANR	10491091	AdditiveExpression	params . levels - 1		10489795	1		-			
ANR	10491092	MemberAccess	params . levels		10489795	0					
ANR	10491093	Identifier	params		10489795	0					
ANR	10491094	Identifier	levels		10489795	1					
ANR	10491095	PrimaryExpression	1		10489795	1					
ANR	10491096	ElseStatement	else		10489795	0					
ANR	10491097	CompoundStatement		225:12:6823:6823	10489795	0					
ANR	10491098	ForStatement	for ( x = 0 ; x < xs ; x ++ )		10489795	0					
ANR	10491099	ForInit	x = 0 ;	830:21:25209:25214	10489795	0	True				
ANR	10491100	AssignmentExpression	x = 0		10489795	0		=			
ANR	10491101	Identifier	x		10489795	0					
ANR	10491102	PrimaryExpression	0		10489795	1					
ANR	10491103	Condition	x < xs	830:28:25216:25221	10489795	1	True				
ANR	10491104	RelationalExpression	x < xs		10489795	0		<			
ANR	10491105	Identifier	x		10489795	0					
ANR	10491106	Identifier	xs		10489795	1					
ANR	10491107	PostIncDecOperationExpression	x ++	830:36:25224:25226	10489795	2	True				
ANR	10491108	Identifier	x		10489795	0					
ANR	10491109	IncDec	++		10489795	1					
ANR	10491110	CompoundStatement		227:16:6882:6882	10489795	3					
ANR	10491111	ExpressionStatement	obuf [ x ] = 255 - obuf [ x ] * 255 / ( params . levels - 1 )	832:20:25267:25318	10489795	0	True				
ANR	10491112	AssignmentExpression	obuf [ x ] = 255 - obuf [ x ] * 255 / ( params . levels - 1 )		10489795	0		=			
ANR	10491113	ArrayIndexing	obuf [ x ]		10489795	0					
ANR	10491114	Identifier	obuf		10489795	0					
ANR	10491115	Identifier	x		10489795	1					
ANR	10491116	AdditiveExpression	255 - obuf [ x ] * 255 / ( params . levels - 1 )		10489795	1		-			
ANR	10491117	PrimaryExpression	255		10489795	0					
ANR	10491118	MultiplicativeExpression	obuf [ x ] * 255 / ( params . levels - 1 )		10489795	1		*			
ANR	10491119	ArrayIndexing	obuf [ x ]		10489795	0					
ANR	10491120	Identifier	obuf		10489795	0					
ANR	10491121	Identifier	x		10489795	1					
ANR	10491122	MultiplicativeExpression	255 / ( params . levels - 1 )		10489795	1		/			
ANR	10491123	PrimaryExpression	255		10489795	0					
ANR	10491124	AdditiveExpression	params . levels - 1		10489795	1		-			
ANR	10491125	MemberAccess	params . levels		10489795	0					
ANR	10491126	Identifier	params		10489795	0					
ANR	10491127	Identifier	levels		10489795	1					
ANR	10491128	PrimaryExpression	1		10489795	1					
ANR	10491129	ExpressionStatement	"write_line ( obufs , xs , fo , planes , image_ctx )"	836:8:25370:25414	10489795	20	True				
ANR	10491130	CallExpression	"write_line ( obufs , xs , fo , planes , image_ctx )"		10489795	0					
ANR	10491131	Callee	write_line		10489795	0					
ANR	10491132	Identifier	write_line		10489795	0					
ANR	10491133	ArgumentList	obufs		10489795	1					
ANR	10491134	Argument	obufs		10489795	0					
ANR	10491135	Identifier	obufs		10489795	0					
ANR	10491136	Argument	xs		10489795	1					
ANR	10491137	Identifier	xs		10489795	0					
ANR	10491138	Argument	fo		10489795	2					
ANR	10491139	Identifier	fo		10489795	0					
ANR	10491140	Argument	planes		10489795	3					
ANR	10491141	Identifier	planes		10489795	0					
ANR	10491142	Argument	image_ctx		10489795	4					
ANR	10491143	Identifier	image_ctx		10489795	0					
ANR	10491144	IfStatement	if ( finalize != NULL )		10489795	82					
ANR	10491145	Condition	finalize != NULL	838:8:25430:25445	10489795	0	True				
ANR	10491146	EqualityExpression	finalize != NULL		10489795	0		!=			
ANR	10491147	Identifier	finalize		10489795	0					
ANR	10491148	Identifier	NULL		10489795	1					
ANR	10491149	ExpressionStatement	finalize ( image_ctx )	839:8:25456:25475	10489795	1	True				
ANR	10491150	CallExpression	finalize ( image_ctx )		10489795	0					
ANR	10491151	Callee	finalize		10489795	0					
ANR	10491152	Identifier	finalize		10489795	0					
ANR	10491153	ArgumentList	image_ctx		10489795	1					
ANR	10491154	Argument	image_ctx		10489795	0					
ANR	10491155	Identifier	image_ctx		10489795	0					
ANR	10491156	ExpressionStatement	ets_free ( ctx )	841:4:25482:25495	10489795	83	True				
ANR	10491157	CallExpression	ets_free ( ctx )		10489795	0					
ANR	10491158	Callee	ets_free		10489795	0					
ANR	10491159	Identifier	ets_free		10489795	0					
ANR	10491160	ArgumentList	ctx		10489795	1					
ANR	10491161	Argument	ctx		10489795	0					
ANR	10491162	Identifier	ctx		10489795	0					
ANR	10491163	ForStatement	for ( i = 0 ; i < planes ; i ++ )		10489795	84					
ANR	10491164	ForInit	i = 0 ;	842:9:25506:25509	10489795	0	True				
ANR	10491165	AssignmentExpression	i = 0		10489795	0		=			
ANR	10491166	Identifier	i		10489795	0					
ANR	10491167	PrimaryExpression	0		10489795	1					
ANR	10491168	Condition	i < planes	842:14:25511:25520	10489795	1	True				
ANR	10491169	RelationalExpression	i < planes		10489795	0		<			
ANR	10491170	Identifier	i		10489795	0					
ANR	10491171	Identifier	planes		10489795	1					
ANR	10491172	PostIncDecOperationExpression	i ++	842:26:25523:25525	10489795	2	True				
ANR	10491173	Identifier	i		10489795	0					
ANR	10491174	IncDec	++		10489795	1					
ANR	10491175	CompoundStatement		239:4:7169:7169	10489795	3					
ANR	10491176	ExpressionStatement	ets_free_aligned ( obufs [ i ] )	844:8:25542:25568	10489795	0	True				
ANR	10491177	CallExpression	ets_free_aligned ( obufs [ i ] )		10489795	0					
ANR	10491178	Callee	ets_free_aligned		10489795	0					
ANR	10491179	Identifier	ets_free_aligned		10489795	0					
ANR	10491180	ArgumentList	obufs [ i ]		10489795	1					
ANR	10491181	Argument	obufs [ i ]		10489795	0					
ANR	10491182	ArrayIndexing	obufs [ i ]		10489795	0					
ANR	10491183	Identifier	obufs		10489795	0					
ANR	10491184	Identifier	i		10489795	1					
ANR	10491185	ExpressionStatement	free ( ibufs [ i ] )	845:8:25578:25592	10489795	1	True				
ANR	10491186	CallExpression	free ( ibufs [ i ] )		10489795	0					
ANR	10491187	Callee	free		10489795	0					
ANR	10491188	Identifier	free		10489795	0					
ANR	10491189	ArgumentList	ibufs [ i ]		10489795	1					
ANR	10491190	Argument	ibufs [ i ]		10489795	0					
ANR	10491191	ArrayIndexing	ibufs [ i ]		10489795	0					
ANR	10491192	Identifier	ibufs		10489795	0					
ANR	10491193	Identifier	i		10489795	1					
ANR	10491194	IfStatement	if ( fi != stdin )		10489795	85					
ANR	10491195	Condition	fi != stdin	847:8:25609:25619	10489795	0	True				
ANR	10491196	EqualityExpression	fi != stdin		10489795	0		!=			
ANR	10491197	Identifier	fi		10489795	0					
ANR	10491198	Identifier	stdin		10489795	1					
ANR	10491199	ExpressionStatement	fclose ( fi )	848:8:25630:25640	10489795	1	True				
ANR	10491200	CallExpression	fclose ( fi )		10489795	0					
ANR	10491201	Callee	fclose		10489795	0					
ANR	10491202	Identifier	fclose		10489795	0					
ANR	10491203	ArgumentList	fi		10489795	1					
ANR	10491204	Argument	fi		10489795	0					
ANR	10491205	Identifier	fi		10489795	0					
ANR	10491206	IfStatement	if ( fo != stdout )		10489795	86					
ANR	10491207	Condition	fo != stdout	849:8:25650:25661	10489795	0	True				
ANR	10491208	EqualityExpression	fo != stdout		10489795	0		!=			
ANR	10491209	Identifier	fo		10489795	0					
ANR	10491210	Identifier	stdout		10489795	1					
ANR	10491211	ExpressionStatement	fclose ( fo )	850:8:25672:25682	10489795	1	True				
ANR	10491212	CallExpression	fclose ( fo )		10489795	0					
ANR	10491213	Callee	fclose		10489795	0					
ANR	10491214	Identifier	fclose		10489795	0					
ANR	10491215	ArgumentList	fo		10489795	1					
ANR	10491216	Argument	fo		10489795	0					
ANR	10491217	Identifier	fo		10489795	0					
ANR	10491218	ReturnStatement	return 0 ;	852:4:25689:25697	10489795	87	True				
ANR	10491219	PrimaryExpression	0		10489795	0					
ANR	10491220	Label	usage_exit :	853:1:25700:25710	10489795	88	True				
ANR	10491221	Identifier	usage_exit		10489795	0					
ANR	10491222	ReturnStatement	return usage ( ) ;	854:4:25716:25730	10489795	89	True				
ANR	10491223	CallExpression	usage ( )		10489795	0					
ANR	10491224	Callee	usage		10489795	0					
ANR	10491225	Identifier	usage		10489795	0					
ANR	10491226	ArgumentList			10489795	1					
ANR	10491227	ReturnType	int		10489795	1					
ANR	10491228	Identifier	main		10489795	2					
ANR	10491229	ParameterList	"int argc , char * * argv"		10489795	3					
ANR	10491230	Parameter	int argc	604:5:18339:18346	10489795	0	True				
ANR	10491231	ParameterType	int		10489795	0					
ANR	10491232	Identifier	argc		10489795	1					
ANR	10491233	Parameter	char * * argv	604:15:18349:18359	10489795	1	True				
ANR	10491234	ParameterType	char * *		10489795	0					
ANR	10491235	Identifier	argv		10489795	1					
ANR	10491236	CFGEntryNode	ENTRY		10489795		True				
ANR	10491237	CFGExitNode	EXIT		10489795		True				
ANR	10491238	Symbol	params . aspect_x		10489795						
ANR	10491239	Symbol	* permutes		10489795						
ANR	10491240	Symbol	* psd_ctx . permute		10489795						
ANR	10491241	Symbol	* rs_lut		10489795						
ANR	10491242	Symbol	stdin		10489795						
ANR	10491243	Symbol	* x		10489795						
ANR	10491244	Symbol	params . aspect_y		10489795						
ANR	10491245	Symbol	rs_lut		10489795						
ANR	10491246	Symbol	obufs		10489795						
ANR	10491247	Symbol	* * permutes		10489795						
ANR	10491248	Symbol	usage		10489795						
ANR	10491249	Symbol	lut		10489795						
ANR	10491250	Symbol	psd_ctx . finalize		10489795						
ANR	10491251	Symbol	psd_ctx		10489795						
ANR	10491252	Symbol	byte_count		10489795						
ANR	10491253	Symbol	params . levels		10489795						
ANR	10491254	Symbol	* * planes		10489795						
ANR	10491255	Symbol	params . r_style		10489795						
ANR	10491256	Symbol	DUMP_FILE_NAME		10489795						
ANR	10491257	Symbol	read_pam_line		10489795						
ANR	10491258	Symbol	ys		10489795						
ANR	10491259	Symbol	& aspect_x		10489795						
ANR	10491260	Symbol	& aspect_y		10489795						
ANR	10491261	Symbol	& params		10489795						
ANR	10491262	Symbol	* buf		10489795						
ANR	10491263	Symbol	ETS_BLACK_IS_ONE		10489795						
ANR	10491264	Symbol	& xs		10489795						
ANR	10491265	Symbol	ctx		10489795						
ANR	10491266	Symbol	params		10489795						
ANR	10491267	Symbol	rs_luts		10489795						
ANR	10491268	Symbol	c1_scale		10489795						
ANR	10491269	Symbol	read_pam		10489795						
ANR	10491270	Symbol	* arg		10489795						
ANR	10491271	Symbol	* strengths		10489795						
ANR	10491272	Symbol	& ys		10489795						
ANR	10491273	Symbol	write_line		10489795						
ANR	10491274	Symbol	ets_style		10489795						
ANR	10491275	Symbol	sum		10489795						
ANR	10491276	Symbol	ETS_DUMP_ALL		10489795						
ANR	10491277	Symbol	M		10489795						
ANR	10491278	Symbol	params . polarity		10489795						
ANR	10491279	Symbol	ets_malloc_aligned		10489795						
ANR	10491280	Symbol	arg		10489795						
ANR	10491281	Symbol	noise		10489795						
ANR	10491282	Symbol	pow		10489795						
ANR	10491283	Symbol	& psd_ctx		10489795						
ANR	10491284	Symbol	params . distscale		10489795						
ANR	10491285	Symbol	* luts		10489795						
ANR	10491286	Symbol	atoi		10489795						
ANR	10491287	Symbol	params . ets_style		10489795						
ANR	10491288	Symbol	fopen		10489795						
ANR	10491289	Symbol	malloc		10489795						
ANR	10491290	Symbol	ETS_SRC_MAX		10489795						
ANR	10491291	Symbol	read_line		10489795						
ANR	10491292	Symbol	permutes		10489795						
ANR	10491293	Symbol	get_arg		10489795						
ANR	10491294	Symbol	i		10489795						
ANR	10491295	Symbol	psd_ctx . permute		10489795						
ANR	10491296	Symbol	write_pam_line		10489795						
ANR	10491297	Symbol	buf		10489795						
ANR	10491298	Symbol	* obufs		10489795						
ANR	10491299	Symbol	* lut		10489795						
ANR	10491300	Symbol	x		10489795						
ANR	10491301	Symbol	* obuf		10489795						
ANR	10491302	Symbol	y		10489795						
ANR	10491303	Symbol	read_pgm_line		10489795						
ANR	10491304	Symbol	finalize		10489795						
ANR	10491305	Symbol	write_pgm_line		10489795						
ANR	10491306	Symbol	levels		10489795						
ANR	10491307	Symbol	params . dump_level		10489795						
ANR	10491308	Symbol	psd_ctx . write_line		10489795						
ANR	10491309	Symbol	params . luts		10489795						
ANR	10491310	Symbol	* rs_luts		10489795						
ANR	10491311	Symbol	params . c1_scale		10489795						
ANR	10491312	Symbol	params . rand_scale_luts		10489795						
ANR	10491313	Symbol	stdout		10489795						
ANR	10491314	Symbol	* ibufs		10489795						
ANR	10491315	Symbol	r_style		10489795						
ANR	10491316	Symbol	lutf		10489795						
ANR	10491317	Symbol	* argv		10489795						
ANR	10491318	Symbol	psd_ctx . num_channels		10489795						
ANR	10491319	Symbol	psd_ctx . depth		10489795						
ANR	10491320	Symbol	obuf		10489795						
ANR	10491321	Symbol	gamma_tab		10489795						
ANR	10491322	Symbol	psd_ctx . height		10489795						
ANR	10491323	Symbol	params . dump_file		10489795						
ANR	10491324	Symbol	polarity		10489795						
ANR	10491325	Symbol	params . rand_scale		10489795						
ANR	10491326	Symbol	NULL		10489795						
ANR	10491327	Symbol	multiplane		10489795						
ANR	10491328	Symbol	params . n_planes		10489795						
ANR	10491329	Symbol	planes		10489795						
ANR	10491330	Symbol	params . strengths		10489795						
ANR	10491331	Symbol	strengths		10489795						
ANR	10491332	Symbol	* psd_ctx		10489795						
ANR	10491333	Symbol	psd_ctx . width		10489795						
ANR	10491334	Symbol	* planes		10489795						
ANR	10491335	Symbol	ibufs		10489795						
ANR	10491336	Symbol	fi		10489795						
ANR	10491337	Symbol	xsb		10489795						
ANR	10491338	Symbol	fo		10489795						
ANR	10491339	Symbol	aspect_y		10489795						
ANR	10491340	Symbol	scale		10489795						
ANR	10491341	Symbol	aspect_x		10489795						
ANR	10491342	Symbol	argv		10489795						
ANR	10491343	Symbol	ets_new		10489795						
ANR	10491344	Symbol	arg_value		10489795						
ANR	10491345	Symbol	argc		10489795						
ANR	10491346	Symbol	params . width		10489795						
ANR	10491347	Symbol	ETS_BLACK_IS_ZERO		10489795						
ANR	10491348	Symbol	image_ctx		10489795						
ANR	10491349	Symbol	& i		10489795						
ANR	10491350	Symbol	* i		10489795						
ANR	10491351	Symbol	psd_ctx . read_line		10489795						
ANR	10491352	Symbol	luts		10489795						
ANR	10491353	Symbol	xs		10489795						
