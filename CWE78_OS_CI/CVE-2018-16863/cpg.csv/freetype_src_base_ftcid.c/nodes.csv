command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3334614	File	data/converged/CVE-2018-16863_ghostpdl/freetype_src_base_ftcid.c								
ANR	3334615	Function	FT_Get_CID_Registry_Ordering_Supplement	28:2:1416:2187							
ANR	3334616	FunctionDef	"FT_Get_CID_Registry_Ordering_Supplement (FT_Face face , const char * * registry , const char * * ordering , FT_Int * supplement)"		3334615	0					
ANR	3334617	CompoundStatement		32:2:1682:2187	3334615	0					
ANR	3334618	IdentifierDeclStatement	FT_Error error ;	33:4:1688:1706	3334615	0	True				
ANR	3334619	IdentifierDecl	error		3334615	0					
ANR	3334620	IdentifierDeclType	FT_Error		3334615	0					
ANR	3334621	Identifier	error		3334615	1					
ANR	3334622	IdentifierDeclStatement	const char * r = NULL ;	34:4:1712:1733	3334615	1	True				
ANR	3334623	IdentifierDecl	* r = NULL		3334615	0					
ANR	3334624	IdentifierDeclType	const char *		3334615	0					
ANR	3334625	Identifier	r		3334615	1					
ANR	3334626	AssignmentExpression	* r = NULL		3334615	2		=			
ANR	3334627	Identifier	NULL		3334615	0					
ANR	3334628	Identifier	NULL		3334615	1					
ANR	3334629	IdentifierDeclStatement	const char * o = NULL ;	35:4:1739:1760	3334615	2	True				
ANR	3334630	IdentifierDecl	* o = NULL		3334615	0					
ANR	3334631	IdentifierDeclType	const char *		3334615	0					
ANR	3334632	Identifier	o		3334615	1					
ANR	3334633	AssignmentExpression	* o = NULL		3334615	2		=			
ANR	3334634	Identifier	NULL		3334615	0					
ANR	3334635	Identifier	NULL		3334615	1					
ANR	3334636	IdentifierDeclStatement	FT_Int s = 0 ;	36:4:1766:1784	3334615	3	True				
ANR	3334637	IdentifierDecl	s = 0		3334615	0					
ANR	3334638	IdentifierDeclType	FT_Int		3334615	0					
ANR	3334639	Identifier	s		3334615	1					
ANR	3334640	AssignmentExpression	s = 0		3334615	2		=			
ANR	3334641	Identifier	s		3334615	0					
ANR	3334642	PrimaryExpression	0		3334615	1					
ANR	3334643	ExpressionStatement	error = FT_ERR ( Invalid_Argument )	39:4:1792:1826	3334615	4	True				
ANR	3334644	AssignmentExpression	error = FT_ERR ( Invalid_Argument )		3334615	0		=			
ANR	3334645	Identifier	error		3334615	0					
ANR	3334646	CallExpression	FT_ERR ( Invalid_Argument )		3334615	1					
ANR	3334647	Callee	FT_ERR		3334615	0					
ANR	3334648	Identifier	FT_ERR		3334615	0					
ANR	3334649	ArgumentList	Invalid_Argument		3334615	1					
ANR	3334650	Argument	Invalid_Argument		3334615	0					
ANR	3334651	Identifier	Invalid_Argument		3334615	0					
ANR	3334652	IfStatement	if ( face )		3334615	5					
ANR	3334653	Condition	face	41:9:1838:1841	3334615	0	True				
ANR	3334654	Identifier	face		3334615	0					
ANR	3334655	CompoundStatement		12:6:174:197	3334615	1					
ANR	3334656	IdentifierDeclStatement	FT_Service_CID service ;	43:6:1857:1880	3334615	0	True				
ANR	3334657	IdentifierDecl	service		3334615	0					
ANR	3334658	IdentifierDeclType	FT_Service_CID		3334615	0					
ANR	3334659	Identifier	service		3334615	1					
ANR	3334660	ExpressionStatement	"FT_FACE_FIND_SERVICE ( face , service , CID )"	46:6:1890:1932	3334615	1	True				
ANR	3334661	CallExpression	"FT_FACE_FIND_SERVICE ( face , service , CID )"		3334615	0					
ANR	3334662	Callee	FT_FACE_FIND_SERVICE		3334615	0					
ANR	3334663	Identifier	FT_FACE_FIND_SERVICE		3334615	0					
ANR	3334664	ArgumentList	face		3334615	1					
ANR	3334665	Argument	face		3334615	0					
ANR	3334666	Identifier	face		3334615	0					
ANR	3334667	Argument	service		3334615	1					
ANR	3334668	Identifier	service		3334615	0					
ANR	3334669	Argument	CID		3334615	2					
ANR	3334670	Identifier	CID		3334615	0					
ANR	3334671	IfStatement	if ( service && service -> get_ros )		3334615	2					
ANR	3334672	Condition	service && service -> get_ros	48:11:1946:1972	3334615	0	True				
ANR	3334673	AndExpression	service && service -> get_ros		3334615	0		&&			
ANR	3334674	Identifier	service		3334615	0					
ANR	3334675	PtrMemberAccess	service -> get_ros		3334615	1					
ANR	3334676	Identifier	service		3334615	0					
ANR	3334677	Identifier	get_ros		3334615	1					
ANR	3334678	ExpressionStatement	"error = service -> get_ros ( face , & r , & o , & s )"	49:8:1984:2028	3334615	1	True				
ANR	3334679	AssignmentExpression	"error = service -> get_ros ( face , & r , & o , & s )"		3334615	0		=			
ANR	3334680	Identifier	error		3334615	0					
ANR	3334681	CallExpression	"service -> get_ros ( face , & r , & o , & s )"		3334615	1					
ANR	3334682	Callee	service -> get_ros		3334615	0					
ANR	3334683	PtrMemberAccess	service -> get_ros		3334615	0					
ANR	3334684	Identifier	service		3334615	0					
ANR	3334685	Identifier	get_ros		3334615	1					
ANR	3334686	ArgumentList	face		3334615	1					
ANR	3334687	Argument	face		3334615	0					
ANR	3334688	Identifier	face		3334615	0					
ANR	3334689	Argument	& r		3334615	1					
ANR	3334690	UnaryOperationExpression	& r		3334615	0					
ANR	3334691	UnaryOperator	&		3334615	0					
ANR	3334692	Identifier	r		3334615	1					
ANR	3334693	Argument	& o		3334615	2					
ANR	3334694	UnaryOperationExpression	& o		3334615	0					
ANR	3334695	UnaryOperator	&		3334615	0					
ANR	3334696	Identifier	o		3334615	1					
ANR	3334697	Argument	& s		3334615	3					
ANR	3334698	UnaryOperationExpression	& s		3334615	0					
ANR	3334699	UnaryOperator	&		3334615	0					
ANR	3334700	Identifier	s		3334615	1					
ANR	3334701	IfStatement	if ( registry )		3334615	6					
ANR	3334702	Condition	registry	52:9:2046:2053	3334615	0	True				
ANR	3334703	Identifier	registry		3334615	0					
ANR	3334704	ExpressionStatement	* registry = r	53:6:2063:2076	3334615	1	True				
ANR	3334705	AssignmentExpression	* registry = r		3334615	0		=			
ANR	3334706	UnaryOperationExpression	* registry		3334615	0					
ANR	3334707	UnaryOperator	*		3334615	0					
ANR	3334708	Identifier	registry		3334615	1					
ANR	3334709	Identifier	r		3334615	1					
ANR	3334710	IfStatement	if ( ordering )		3334615	7					
ANR	3334711	Condition	ordering	55:9:2088:2095	3334615	0	True				
ANR	3334712	Identifier	ordering		3334615	0					
ANR	3334713	ExpressionStatement	* ordering = o	56:6:2105:2118	3334615	1	True				
ANR	3334714	AssignmentExpression	* ordering = o		3334615	0		=			
ANR	3334715	UnaryOperationExpression	* ordering		3334615	0					
ANR	3334716	UnaryOperator	*		3334615	0					
ANR	3334717	Identifier	ordering		3334615	1					
ANR	3334718	Identifier	o		3334615	1					
ANR	3334719	IfStatement	if ( supplement )		3334615	8					
ANR	3334720	Condition	supplement	58:9:2130:2139	3334615	0	True				
ANR	3334721	Identifier	supplement		3334615	0					
ANR	3334722	ExpressionStatement	* supplement = s	59:6:2149:2164	3334615	1	True				
ANR	3334723	AssignmentExpression	* supplement = s		3334615	0		=			
ANR	3334724	UnaryOperationExpression	* supplement		3334615	0					
ANR	3334725	UnaryOperator	*		3334615	0					
ANR	3334726	Identifier	supplement		3334615	1					
ANR	3334727	Identifier	s		3334615	1					
ANR	3334728	ReturnStatement	return error ;	61:4:2171:2183	3334615	9	True				
ANR	3334729	Identifier	error		3334615	0					
ANR	3334730	Identifier	FT_Get_CID_Registry_Ordering_Supplement		3334615	1					
ANR	3334731	ParameterList	"FT_Face face , const char * * registry , const char * * ordering , FT_Int * supplement"		3334615	2					
ANR	3334732	Parameter	FT_Face face	28:43:1457:1474	3334615	0	True				
ANR	3334733	ParameterType	FT_Face		3334615	0					
ANR	3334734	Identifier	face		3334615	1					
ANR	3334735	Parameter	const char * * registry	29:43:1520:1541	3334615	1	True				
ANR	3334736	ParameterType	const char * *		3334615	0					
ANR	3334737	Identifier	registry		3334615	1					
ANR	3334738	Parameter	const char * * ordering	30:43:1587:1608	3334615	2	True				
ANR	3334739	ParameterType	const char * *		3334615	0					
ANR	3334740	Identifier	ordering		3334615	1					
ANR	3334741	Parameter	FT_Int * supplement	31:43:1654:1677	3334615	3	True				
ANR	3334742	ParameterType	FT_Int *		3334615	0					
ANR	3334743	Identifier	supplement		3334615	1					
ANR	3334744	CFGEntryNode	ENTRY		3334615		True				
ANR	3334745	CFGExitNode	EXIT		3334615		True				
ANR	3334746	Symbol	registry		3334615						
ANR	3334747	Symbol	NULL		3334615						
ANR	3334748	Symbol	* supplement		3334615						
ANR	3334749	Symbol	* registry		3334615						
ANR	3334750	Symbol	ordering		3334615						
ANR	3334751	Symbol	* ordering		3334615						
ANR	3334752	Symbol	service -> get_ros		3334615						
ANR	3334753	Symbol	Invalid_Argument		3334615						
ANR	3334754	Symbol	FT_ERR		3334615						
ANR	3334755	Symbol	error		3334615						
ANR	3334756	Symbol	o		3334615						
ANR	3334757	Symbol	face		3334615						
ANR	3334758	Symbol	r		3334615						
ANR	3334759	Symbol	s		3334615						
ANR	3334760	Symbol	& o		3334615						
ANR	3334761	Symbol	supplement		3334615						
ANR	3334762	Symbol	service		3334615						
ANR	3334763	Symbol	& r		3334615						
ANR	3334764	Symbol	& s		3334615						
ANR	3334765	Symbol	* service		3334615						
ANR	3334766	Symbol	CID		3334615						
ANR	3334767	Function	FT_Get_CID_Is_Internally_CID_Keyed	66:2:2221:2673							
ANR	3334768	FunctionDef	"FT_Get_CID_Is_Internally_CID_Keyed (FT_Face face , FT_Bool * is_cid)"		3334767	0					
ANR	3334769	CompoundStatement		68:2:2332:2673	3334767	0					
ANR	3334770	IdentifierDeclStatement	FT_Error error = FT_ERR ( Invalid_Argument ) ;	69:4:2338:2382	3334767	0	True				
ANR	3334771	IdentifierDecl	error = FT_ERR ( Invalid_Argument )		3334767	0					
ANR	3334772	IdentifierDeclType	FT_Error		3334767	0					
ANR	3334773	Identifier	error		3334767	1					
ANR	3334774	AssignmentExpression	error = FT_ERR ( Invalid_Argument )		3334767	2		=			
ANR	3334775	Identifier	error		3334767	0					
ANR	3334776	CallExpression	FT_ERR ( Invalid_Argument )		3334767	1					
ANR	3334777	Callee	FT_ERR		3334767	0					
ANR	3334778	Identifier	FT_ERR		3334767	0					
ANR	3334779	ArgumentList	Invalid_Argument		3334767	1					
ANR	3334780	Argument	Invalid_Argument		3334767	0					
ANR	3334781	Identifier	Invalid_Argument		3334767	0					
ANR	3334782	IdentifierDeclStatement	FT_Bool ic = 0 ;	70:4:2388:2404	3334767	1	True				
ANR	3334783	IdentifierDecl	ic = 0		3334767	0					
ANR	3334784	IdentifierDeclType	FT_Bool		3334767	0					
ANR	3334785	Identifier	ic		3334767	1					
ANR	3334786	AssignmentExpression	ic = 0		3334767	2		=			
ANR	3334787	Identifier	ic		3334767	0					
ANR	3334788	PrimaryExpression	0		3334767	1					
ANR	3334789	IfStatement	if ( face )		3334767	2					
ANR	3334790	Condition	face	73:9:2417:2420	3334767	0	True				
ANR	3334791	Identifier	face		3334767	0					
ANR	3334792	CompoundStatement		8:6:103:126	3334767	1					
ANR	3334793	IdentifierDeclStatement	FT_Service_CID service ;	75:6:2436:2459	3334767	0	True				
ANR	3334794	IdentifierDecl	service		3334767	0					
ANR	3334795	IdentifierDeclType	FT_Service_CID		3334767	0					
ANR	3334796	Identifier	service		3334767	1					
ANR	3334797	ExpressionStatement	"FT_FACE_FIND_SERVICE ( face , service , CID )"	78:6:2469:2511	3334767	1	True				
ANR	3334798	CallExpression	"FT_FACE_FIND_SERVICE ( face , service , CID )"		3334767	0					
ANR	3334799	Callee	FT_FACE_FIND_SERVICE		3334767	0					
ANR	3334800	Identifier	FT_FACE_FIND_SERVICE		3334767	0					
ANR	3334801	ArgumentList	face		3334767	1					
ANR	3334802	Argument	face		3334767	0					
ANR	3334803	Identifier	face		3334767	0					
ANR	3334804	Argument	service		3334767	1					
ANR	3334805	Identifier	service		3334767	0					
ANR	3334806	Argument	CID		3334767	2					
ANR	3334807	Identifier	CID		3334767	0					
ANR	3334808	IfStatement	if ( service && service -> get_is_cid )		3334767	2					
ANR	3334809	Condition	service && service -> get_is_cid	80:11:2525:2554	3334767	0	True				
ANR	3334810	AndExpression	service && service -> get_is_cid		3334767	0		&&			
ANR	3334811	Identifier	service		3334767	0					
ANR	3334812	PtrMemberAccess	service -> get_is_cid		3334767	1					
ANR	3334813	Identifier	service		3334767	0					
ANR	3334814	Identifier	get_is_cid		3334767	1					
ANR	3334815	ExpressionStatement	"error = service -> get_is_cid ( face , & ic )"	81:8:2566:2605	3334767	1	True				
ANR	3334816	AssignmentExpression	"error = service -> get_is_cid ( face , & ic )"		3334767	0		=			
ANR	3334817	Identifier	error		3334767	0					
ANR	3334818	CallExpression	"service -> get_is_cid ( face , & ic )"		3334767	1					
ANR	3334819	Callee	service -> get_is_cid		3334767	0					
ANR	3334820	PtrMemberAccess	service -> get_is_cid		3334767	0					
ANR	3334821	Identifier	service		3334767	0					
ANR	3334822	Identifier	get_is_cid		3334767	1					
ANR	3334823	ArgumentList	face		3334767	1					
ANR	3334824	Argument	face		3334767	0					
ANR	3334825	Identifier	face		3334767	0					
ANR	3334826	Argument	& ic		3334767	1					
ANR	3334827	UnaryOperationExpression	& ic		3334767	0					
ANR	3334828	UnaryOperator	&		3334767	0					
ANR	3334829	Identifier	ic		3334767	1					
ANR	3334830	IfStatement	if ( is_cid )		3334767	3					
ANR	3334831	Condition	is_cid	84:9:2623:2628	3334767	0	True				
ANR	3334832	Identifier	is_cid		3334767	0					
ANR	3334833	ExpressionStatement	* is_cid = ic	85:6:2638:2650	3334767	1	True				
ANR	3334834	AssignmentExpression	* is_cid = ic		3334767	0		=			
ANR	3334835	UnaryOperationExpression	* is_cid		3334767	0					
ANR	3334836	UnaryOperator	*		3334767	0					
ANR	3334837	Identifier	is_cid		3334767	1					
ANR	3334838	Identifier	ic		3334767	1					
ANR	3334839	ReturnStatement	return error ;	87:4:2657:2669	3334767	4	True				
ANR	3334840	Identifier	error		3334767	0					
ANR	3334841	Identifier	FT_Get_CID_Is_Internally_CID_Keyed		3334767	1					
ANR	3334842	ParameterList	"FT_Face face , FT_Bool * is_cid"		3334767	2					
ANR	3334843	Parameter	FT_Face face	66:38:2257:2270	3334767	0	True				
ANR	3334844	ParameterType	FT_Face		3334767	0					
ANR	3334845	Identifier	face		3334767	1					
ANR	3334846	Parameter	FT_Bool * is_cid	67:38:2311:2326	3334767	1	True				
ANR	3334847	ParameterType	FT_Bool *		3334767	0					
ANR	3334848	Identifier	is_cid		3334767	1					
ANR	3334849	CFGEntryNode	ENTRY		3334767		True				
ANR	3334850	CFGExitNode	EXIT		3334767		True				
ANR	3334851	Symbol	face		3334767						
ANR	3334852	Symbol	service -> get_is_cid		3334767						
ANR	3334853	Symbol	& ic		3334767						
ANR	3334854	Symbol	service		3334767						
ANR	3334855	Symbol	is_cid		3334767						
ANR	3334856	Symbol	* is_cid		3334767						
ANR	3334857	Symbol	ic		3334767						
ANR	3334858	Symbol	FT_ERR		3334767						
ANR	3334859	Symbol	Invalid_Argument		3334767						
ANR	3334860	Symbol	error		3334767						
ANR	3334861	Symbol	* service		3334767						
ANR	3334862	Symbol	CID		3334767						
ANR	3334863	Function	FT_Get_CID_From_Glyph_Index	92:2:2707:3228							
ANR	3334864	FunctionDef	"FT_Get_CID_From_Glyph_Index (FT_Face face , FT_UInt glyph_index , FT_UInt * cid)"		3334863	0					
ANR	3334865	CompoundStatement		95:2:2855:3228	3334863	0					
ANR	3334866	IdentifierDeclStatement	FT_Error error = FT_ERR ( Invalid_Argument ) ;	96:4:2861:2905	3334863	0	True				
ANR	3334867	IdentifierDecl	error = FT_ERR ( Invalid_Argument )		3334863	0					
ANR	3334868	IdentifierDeclType	FT_Error		3334863	0					
ANR	3334869	Identifier	error		3334863	1					
ANR	3334870	AssignmentExpression	error = FT_ERR ( Invalid_Argument )		3334863	2		=			
ANR	3334871	Identifier	error		3334863	0					
ANR	3334872	CallExpression	FT_ERR ( Invalid_Argument )		3334863	1					
ANR	3334873	Callee	FT_ERR		3334863	0					
ANR	3334874	Identifier	FT_ERR		3334863	0					
ANR	3334875	ArgumentList	Invalid_Argument		3334863	1					
ANR	3334876	Argument	Invalid_Argument		3334863	0					
ANR	3334877	Identifier	Invalid_Argument		3334863	0					
ANR	3334878	IdentifierDeclStatement	FT_UInt c = 0 ;	97:4:2911:2926	3334863	1	True				
ANR	3334879	IdentifierDecl	c = 0		3334863	0					
ANR	3334880	IdentifierDeclType	FT_UInt		3334863	0					
ANR	3334881	Identifier	c		3334863	1					
ANR	3334882	AssignmentExpression	c = 0		3334863	2		=			
ANR	3334883	Identifier	c		3334863	0					
ANR	3334884	PrimaryExpression	0		3334863	1					
ANR	3334885	IfStatement	if ( face )		3334863	2					
ANR	3334886	Condition	face	100:9:2939:2942	3334863	0	True				
ANR	3334887	Identifier	face		3334863	0					
ANR	3334888	CompoundStatement		8:6:102:125	3334863	1					
ANR	3334889	IdentifierDeclStatement	FT_Service_CID service ;	102:6:2958:2981	3334863	0	True				
ANR	3334890	IdentifierDecl	service		3334863	0					
ANR	3334891	IdentifierDeclType	FT_Service_CID		3334863	0					
ANR	3334892	Identifier	service		3334863	1					
ANR	3334893	ExpressionStatement	"FT_FACE_FIND_SERVICE ( face , service , CID )"	105:6:2991:3033	3334863	1	True				
ANR	3334894	CallExpression	"FT_FACE_FIND_SERVICE ( face , service , CID )"		3334863	0					
ANR	3334895	Callee	FT_FACE_FIND_SERVICE		3334863	0					
ANR	3334896	Identifier	FT_FACE_FIND_SERVICE		3334863	0					
ANR	3334897	ArgumentList	face		3334863	1					
ANR	3334898	Argument	face		3334863	0					
ANR	3334899	Identifier	face		3334863	0					
ANR	3334900	Argument	service		3334863	1					
ANR	3334901	Identifier	service		3334863	0					
ANR	3334902	Argument	CID		3334863	2					
ANR	3334903	Identifier	CID		3334863	0					
ANR	3334904	IfStatement	if ( service && service -> get_cid_from_glyph_index )		3334863	2					
ANR	3334905	Condition	service && service -> get_cid_from_glyph_index	107:11:3047:3090	3334863	0	True				
ANR	3334906	AndExpression	service && service -> get_cid_from_glyph_index		3334863	0		&&			
ANR	3334907	Identifier	service		3334863	0					
ANR	3334908	PtrMemberAccess	service -> get_cid_from_glyph_index		3334863	1					
ANR	3334909	Identifier	service		3334863	0					
ANR	3334910	Identifier	get_cid_from_glyph_index		3334863	1					
ANR	3334911	ExpressionStatement	"error = service -> get_cid_from_glyph_index ( face , glyph_index , & c )"	108:8:3102:3167	3334863	1	True				
ANR	3334912	AssignmentExpression	"error = service -> get_cid_from_glyph_index ( face , glyph_index , & c )"		3334863	0		=			
ANR	3334913	Identifier	error		3334863	0					
ANR	3334914	CallExpression	"service -> get_cid_from_glyph_index ( face , glyph_index , & c )"		3334863	1					
ANR	3334915	Callee	service -> get_cid_from_glyph_index		3334863	0					
ANR	3334916	PtrMemberAccess	service -> get_cid_from_glyph_index		3334863	0					
ANR	3334917	Identifier	service		3334863	0					
ANR	3334918	Identifier	get_cid_from_glyph_index		3334863	1					
ANR	3334919	ArgumentList	face		3334863	1					
ANR	3334920	Argument	face		3334863	0					
ANR	3334921	Identifier	face		3334863	0					
ANR	3334922	Argument	glyph_index		3334863	1					
ANR	3334923	Identifier	glyph_index		3334863	0					
ANR	3334924	Argument	& c		3334863	2					
ANR	3334925	UnaryOperationExpression	& c		3334863	0					
ANR	3334926	UnaryOperator	&		3334863	0					
ANR	3334927	Identifier	c		3334863	1					
ANR	3334928	IfStatement	if ( cid )		3334863	3					
ANR	3334929	Condition	cid	111:9:3185:3187	3334863	0	True				
ANR	3334930	Identifier	cid		3334863	0					
ANR	3334931	ExpressionStatement	* cid = c	112:6:3197:3205	3334863	1	True				
ANR	3334932	AssignmentExpression	* cid = c		3334863	0		=			
ANR	3334933	UnaryOperationExpression	* cid		3334863	0					
ANR	3334934	UnaryOperator	*		3334863	0					
ANR	3334935	Identifier	cid		3334863	1					
ANR	3334936	Identifier	c		3334863	1					
ANR	3334937	ReturnStatement	return error ;	114:4:3212:3224	3334863	4	True				
ANR	3334938	Identifier	error		3334863	0					
ANR	3334939	Identifier	FT_Get_CID_From_Glyph_Index		3334863	1					
ANR	3334940	ParameterList	"FT_Face face , FT_UInt glyph_index , FT_UInt * cid"		3334863	2					
ANR	3334941	Parameter	FT_Face face	92:31:2736:2749	3334863	0	True				
ANR	3334942	ParameterType	FT_Face		3334863	0					
ANR	3334943	Identifier	face		3334863	1					
ANR	3334944	Parameter	FT_UInt glyph_index	93:31:2783:2803	3334863	1	True				
ANR	3334945	ParameterType	FT_UInt		3334863	0					
ANR	3334946	Identifier	glyph_index		3334863	1					
ANR	3334947	Parameter	FT_UInt * cid	94:31:2837:2849	3334863	2	True				
ANR	3334948	ParameterType	FT_UInt *		3334863	0					
ANR	3334949	Identifier	cid		3334863	1					
ANR	3334950	CFGEntryNode	ENTRY		3334863		True				
ANR	3334951	CFGExitNode	EXIT		3334863		True				
ANR	3334952	Symbol	c		3334863						
ANR	3334953	Symbol	glyph_index		3334863						
ANR	3334954	Symbol	& c		3334863						
ANR	3334955	Symbol	FT_ERR		3334863						
ANR	3334956	Symbol	Invalid_Argument		3334863						
ANR	3334957	Symbol	error		3334863						
ANR	3334958	Symbol	face		3334863						
ANR	3334959	Symbol	service		3334863						
ANR	3334960	Symbol	* cid		3334863						
ANR	3334961	Symbol	service -> get_cid_from_glyph_index		3334863						
ANR	3334962	Symbol	* service		3334863						
ANR	3334963	Symbol	cid		3334863						
ANR	3334964	Symbol	CID		3334863						
