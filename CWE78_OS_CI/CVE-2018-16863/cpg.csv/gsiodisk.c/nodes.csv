command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5200474	File	data/converged/CVE-2018-16863_ghostpdl/gsiodisk.c								
ANR	5200475	DeclStmt									
ANR	5200476	Decl							const gx_io_device	const gx_io_device	varname
ANR	5200477	ClassDef	diskn_state_s	154:8:6376:6570							
ANR	5200478	DeclStmt									
ANR	5200479	Decl							int	int	root_size
ANR	5200480	DeclStmt									
ANR	5200481	Decl							char	char *	root
ANR	5200482	DeclStmt									
ANR	5200483	Decl							gs_memory_t	gs_memory_t *	memory
ANR	5200484	DeclStmt									
ANR	5200485	Decl							diskn_state_s	diskn_state_s	diskn_state
ANR	5200486	ClassDef	map_file_enum_s	168:8:6830:7085							
ANR	5200487	DeclStmt									
ANR	5200488	Decl							FILE	FILE *	stream
ANR	5200489	DeclStmt									
ANR	5200490	Decl							char	char *	pattern
ANR	5200491	DeclStmt									
ANR	5200492	Decl							char	char *	root
ANR	5200493	DeclStmt									
ANR	5200494	Decl							gs_memory_t	gs_memory_t *	memory
ANR	5200495	DeclStmt									
ANR	5200496	Decl							map_file_enum_s	map_file_enum_s	map_file_enum
ANR	5200497	DeclStmt									
ANR	5200498	Decl							void	"void * ( gs_memory_t * , const char * , const char * , uint )"	map_file_enum_init
ANR	5200499	DeclStmt									
ANR	5200500	Decl							bool	"bool ( void * , char * )"	map_file_enum_next
ANR	5200501	DeclStmt									
ANR	5200502	Decl							void	void ( void * )	map_file_enum_close
ANR	5200503	DeclStmt									
ANR	5200504	Decl							bool	"bool ( gs_memory_t * , const char * , const char * , char * )"	map_file_name_get
ANR	5200505	DeclStmt									
ANR	5200506	Decl							void	"void ( gs_memory_t * , const char * , const char * )"	map_file_name_add
ANR	5200507	DeclStmt									
ANR	5200508	Decl							void	"void ( gs_memory_t * , const char * , const char * , const char * )"	map_file_name_ren
ANR	5200509	DeclStmt									
ANR	5200510	Decl							void	"void ( gs_memory_t * , const char * , const char * )"	map_file_name_del
ANR	5200511	Function	iodev_diskn_init	186:0:7729:8130							
ANR	5200512	FunctionDef	"iodev_diskn_init (gx_io_device * iodev , gs_memory_t * mem)"		5200511	0					
ANR	5200513	CompoundStatement		188:0:7798:8130	5200511	0					
ANR	5200514	IdentifierDeclStatement	"diskn_state * pstate = gs_alloc_struct ( mem , diskn_state , & st_diskn_state , ""iodev_diskn_init(state)"" ) ;"	189:4:7804:7952	5200511	0	True				
ANR	5200515	IdentifierDecl	"* pstate = gs_alloc_struct ( mem , diskn_state , & st_diskn_state , ""iodev_diskn_init(state)"" )"		5200511	0					
ANR	5200516	IdentifierDeclType	diskn_state *		5200511	0					
ANR	5200517	Identifier	pstate		5200511	1					
ANR	5200518	AssignmentExpression	"* pstate = gs_alloc_struct ( mem , diskn_state , & st_diskn_state , ""iodev_diskn_init(state)"" )"		5200511	2		=			
ANR	5200519	Identifier	pstate		5200511	0					
ANR	5200520	CallExpression	"gs_alloc_struct ( mem , diskn_state , & st_diskn_state , ""iodev_diskn_init(state)"" )"		5200511	1					
ANR	5200521	Callee	gs_alloc_struct		5200511	0					
ANR	5200522	Identifier	gs_alloc_struct		5200511	0					
ANR	5200523	ArgumentList	mem		5200511	1					
ANR	5200524	Argument	mem		5200511	0					
ANR	5200525	Identifier	mem		5200511	0					
ANR	5200526	Argument	diskn_state		5200511	1					
ANR	5200527	Identifier	diskn_state		5200511	0					
ANR	5200528	Argument	& st_diskn_state		5200511	2					
ANR	5200529	UnaryOperationExpression	& st_diskn_state		5200511	0					
ANR	5200530	UnaryOperator	&		5200511	0					
ANR	5200531	Identifier	st_diskn_state		5200511	1					
ANR	5200532	Argument	"""iodev_diskn_init(state)"""		5200511	3					
ANR	5200533	PrimaryExpression	"""iodev_diskn_init(state)"""		5200511	0					
ANR	5200534	IfStatement	if ( ! pstate )		5200511	1					
ANR	5200535	Condition	! pstate	191:8:7962:7968	5200511	0	True				
ANR	5200536	UnaryOperationExpression	! pstate		5200511	0					
ANR	5200537	UnaryOperator	!		5200511	0					
ANR	5200538	Identifier	pstate		5200511	1					
ANR	5200539	ExpressionStatement	return_error ( gs_error_VMerror )	192:8:7979:8009	5200511	1	True				
ANR	5200540	CallExpression	return_error ( gs_error_VMerror )		5200511	0					
ANR	5200541	Callee	return_error		5200511	0					
ANR	5200542	Identifier	return_error		5200511	0					
ANR	5200543	ArgumentList	gs_error_VMerror		5200511	1					
ANR	5200544	Argument	gs_error_VMerror		5200511	0					
ANR	5200545	Identifier	gs_error_VMerror		5200511	0					
ANR	5200546	ExpressionStatement	pstate -> root_size = 0	193:4:8015:8036	5200511	2	True				
ANR	5200547	AssignmentExpression	pstate -> root_size = 0		5200511	0		=			
ANR	5200548	PtrMemberAccess	pstate -> root_size		5200511	0					
ANR	5200549	Identifier	pstate		5200511	0					
ANR	5200550	Identifier	root_size		5200511	1					
ANR	5200551	PrimaryExpression	0		5200511	1					
ANR	5200552	ExpressionStatement	pstate -> root = NULL	194:4:8042:8061	5200511	3	True				
ANR	5200553	AssignmentExpression	pstate -> root = NULL		5200511	0		=			
ANR	5200554	PtrMemberAccess	pstate -> root		5200511	0					
ANR	5200555	Identifier	pstate		5200511	0					
ANR	5200556	Identifier	root		5200511	1					
ANR	5200557	Identifier	NULL		5200511	1					
ANR	5200558	ExpressionStatement	pstate -> memory = mem	195:4:8067:8087	5200511	4	True				
ANR	5200559	AssignmentExpression	pstate -> memory = mem		5200511	0		=			
ANR	5200560	PtrMemberAccess	pstate -> memory		5200511	0					
ANR	5200561	Identifier	pstate		5200511	0					
ANR	5200562	Identifier	memory		5200511	1					
ANR	5200563	Identifier	mem		5200511	1					
ANR	5200564	ExpressionStatement	iodev -> state = pstate	196:4:8093:8114	5200511	5	True				
ANR	5200565	AssignmentExpression	iodev -> state = pstate		5200511	0		=			
ANR	5200566	PtrMemberAccess	iodev -> state		5200511	0					
ANR	5200567	Identifier	iodev		5200511	0					
ANR	5200568	Identifier	state		5200511	1					
ANR	5200569	Identifier	pstate		5200511	1					
ANR	5200570	ReturnStatement	return 0 ;	197:4:8120:8128	5200511	6	True				
ANR	5200571	PrimaryExpression	0		5200511	0					
ANR	5200572	ReturnType	static int		5200511	1					
ANR	5200573	Identifier	iodev_diskn_init		5200511	2					
ANR	5200574	ParameterList	"gx_io_device * iodev , gs_memory_t * mem"		5200511	3					
ANR	5200575	Parameter	gx_io_device * iodev	187:17:7757:7776	5200511	0	True				
ANR	5200576	ParameterType	gx_io_device *		5200511	0					
ANR	5200577	Identifier	iodev		5200511	1					
ANR	5200578	Parameter	gs_memory_t * mem	187:39:7779:7795	5200511	1	True				
ANR	5200579	ParameterType	gs_memory_t *		5200511	0					
ANR	5200580	Identifier	mem		5200511	1					
ANR	5200581	CFGEntryNode	ENTRY		5200511		True				
ANR	5200582	CFGExitNode	EXIT		5200511		True				
ANR	5200583	Symbol	NULL		5200511						
ANR	5200584	Symbol	* iodev		5200511						
ANR	5200585	Symbol	diskn_state		5200511						
ANR	5200586	Symbol	pstate -> root		5200511						
ANR	5200587	Symbol	gs_alloc_struct		5200511						
ANR	5200588	Symbol	pstate		5200511						
ANR	5200589	Symbol	gs_error_VMerror		5200511						
ANR	5200590	Symbol	pstate -> root_size		5200511						
ANR	5200591	Symbol	iodev		5200511						
ANR	5200592	Symbol	mem		5200511						
ANR	5200593	Symbol	* pstate		5200511						
ANR	5200594	Symbol	iodev -> state		5200511						
ANR	5200595	Symbol	& st_diskn_state		5200511						
ANR	5200596	Symbol	pstate -> memory		5200511						
ANR	5200597	Function	iodev_diskn_finit	200:0:8133:8303							
ANR	5200598	FunctionDef	"iodev_diskn_finit (gx_io_device * iodev , gs_memory_t * mem)"		5200597	0					
ANR	5200599	CompoundStatement		202:0:8204:8303	5200597	0					
ANR	5200600	ExpressionStatement	"gs_object_free ( mem , iodev -> state , ""iodev_diskn_finit"" )"	203:4:8210:8264	5200597	0	True				
ANR	5200601	CallExpression	"gs_object_free ( mem , iodev -> state , ""iodev_diskn_finit"" )"		5200597	0					
ANR	5200602	Callee	gs_object_free		5200597	0					
ANR	5200603	Identifier	gs_object_free		5200597	0					
ANR	5200604	ArgumentList	mem		5200597	1					
ANR	5200605	Argument	mem		5200597	0					
ANR	5200606	Identifier	mem		5200597	0					
ANR	5200607	Argument	iodev -> state		5200597	1					
ANR	5200608	PtrMemberAccess	iodev -> state		5200597	0					
ANR	5200609	Identifier	iodev		5200597	0					
ANR	5200610	Identifier	state		5200597	1					
ANR	5200611	Argument	"""iodev_diskn_finit"""		5200597	2					
ANR	5200612	PrimaryExpression	"""iodev_diskn_finit"""		5200597	0					
ANR	5200613	ExpressionStatement	iodev -> state = NULL	204:4:8270:8289	5200597	1	True				
ANR	5200614	AssignmentExpression	iodev -> state = NULL		5200597	0		=			
ANR	5200615	PtrMemberAccess	iodev -> state		5200597	0					
ANR	5200616	Identifier	iodev		5200597	0					
ANR	5200617	Identifier	state		5200597	1					
ANR	5200618	Identifier	NULL		5200597	1					
ANR	5200619	ReturnStatement	return ;	205:4:8295:8301	5200597	2	True				
ANR	5200620	ReturnType	static void		5200597	1					
ANR	5200621	Identifier	iodev_diskn_finit		5200597	2					
ANR	5200622	ParameterList	"gx_io_device * iodev , gs_memory_t * mem"		5200597	3					
ANR	5200623	Parameter	gx_io_device * iodev	201:18:8163:8182	5200597	0	True				
ANR	5200624	ParameterType	gx_io_device *		5200597	0					
ANR	5200625	Identifier	iodev		5200597	1					
ANR	5200626	Parameter	gs_memory_t * mem	201:40:8185:8201	5200597	1	True				
ANR	5200627	ParameterType	gs_memory_t *		5200597	0					
ANR	5200628	Identifier	mem		5200597	1					
ANR	5200629	CFGEntryNode	ENTRY		5200597		True				
ANR	5200630	CFGExitNode	EXIT		5200597		True				
ANR	5200631	Symbol	NULL		5200597						
ANR	5200632	Symbol	iodev		5200597						
ANR	5200633	Symbol	mem		5200597						
ANR	5200634	Symbol	* iodev		5200597						
ANR	5200635	Symbol	iodev -> state		5200597						
ANR	5200636	Function	iodev_diskn_fopen	208:0:8306:9552							
ANR	5200637	FunctionDef	"iodev_diskn_fopen (gx_io_device * iodev , const char * fname , const char * access , FILE * * pfile , char * rfname , uint rnamelen)"		5200636	0					
ANR	5200638	CompoundStatement		211:0:8455:9552	5200636	0					
ANR	5200639	IdentifierDeclStatement	diskn_state * pstate = ( diskn_state * ) iodev -> state ;	212:4:8461:8511	5200636	0	True				
ANR	5200640	IdentifierDecl	* pstate = ( diskn_state * ) iodev -> state		5200636	0					
ANR	5200641	IdentifierDeclType	diskn_state *		5200636	0					
ANR	5200642	Identifier	pstate		5200636	1					
ANR	5200643	AssignmentExpression	* pstate = ( diskn_state * ) iodev -> state		5200636	2		=			
ANR	5200644	Identifier	pstate		5200636	0					
ANR	5200645	CastExpression	( diskn_state * ) iodev -> state		5200636	1					
ANR	5200646	CastTarget	diskn_state *		5200636	0					
ANR	5200647	PtrMemberAccess	iodev -> state		5200636	1					
ANR	5200648	Identifier	iodev		5200636	0					
ANR	5200649	Identifier	state		5200636	1					
ANR	5200650	IdentifierDeclStatement	"char * realname = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""iodev_diskn_fopen(realname)"" ) ;"	213:4:8517:8624	5200636	1	True				
ANR	5200651	IdentifierDecl	"* realname = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""iodev_diskn_fopen(realname)"" )"		5200636	0					
ANR	5200652	IdentifierDeclType	char *		5200636	0					
ANR	5200653	Identifier	realname		5200636	1					
ANR	5200654	AssignmentExpression	"* realname = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""iodev_diskn_fopen(realname)"" )"		5200636	2		=			
ANR	5200655	Identifier	realname		5200636	0					
ANR	5200656	CastExpression	"( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""iodev_diskn_fopen(realname)"" )"		5200636	1					
ANR	5200657	CastTarget	char *		5200636	0					
ANR	5200658	CallExpression	"gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""iodev_diskn_fopen(realname)"" )"		5200636	1					
ANR	5200659	Callee	gs_alloc_bytes		5200636	0					
ANR	5200660	Identifier	gs_alloc_bytes		5200636	0					
ANR	5200661	ArgumentList	pstate -> memory		5200636	1					
ANR	5200662	Argument	pstate -> memory		5200636	0					
ANR	5200663	PtrMemberAccess	pstate -> memory		5200636	0					
ANR	5200664	Identifier	pstate		5200636	0					
ANR	5200665	Identifier	memory		5200636	1					
ANR	5200666	Argument	gp_file_name_sizeof		5200636	1					
ANR	5200667	Identifier	gp_file_name_sizeof		5200636	0					
ANR	5200668	Argument	"""iodev_diskn_fopen(realname)"""		5200636	2					
ANR	5200669	PrimaryExpression	"""iodev_diskn_fopen(realname)"""		5200636	0					
ANR	5200670	IdentifierDeclStatement	int code = 0 ;	214:4:8630:8642	5200636	2	True				
ANR	5200671	IdentifierDecl	code = 0		5200636	0					
ANR	5200672	IdentifierDeclType	int		5200636	0					
ANR	5200673	Identifier	code		5200636	1					
ANR	5200674	AssignmentExpression	code = 0		5200636	2		=			
ANR	5200675	Identifier	code		5200636	0					
ANR	5200676	PrimaryExpression	0		5200636	1					
ANR	5200677	IfStatement	if ( realname == NULL )		5200636	3					
ANR	5200678	Condition	realname == NULL	216:8:8653:8668	5200636	0	True				
ANR	5200679	EqualityExpression	realname == NULL		5200636	0		==			
ANR	5200680	Identifier	realname		5200636	0					
ANR	5200681	Identifier	NULL		5200636	1					
ANR	5200682	CompoundStatement		6:26:215:215	5200636	1					
ANR	5200683	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	217:8:8681:8719	5200636	0	True				
ANR	5200684	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		5200636	0		=			
ANR	5200685	Identifier	code		5200636	0					
ANR	5200686	CallExpression	gs_note_error ( gs_error_VMerror )		5200636	1					
ANR	5200687	Callee	gs_note_error		5200636	0					
ANR	5200688	Identifier	gs_note_error		5200636	0					
ANR	5200689	ArgumentList	gs_error_VMerror		5200636	1					
ANR	5200690	Argument	gs_error_VMerror		5200636	0					
ANR	5200691	Identifier	gs_error_VMerror		5200636	0					
ANR	5200692	GotoStatement	goto done ;	218:1:8722:8731	5200636	1	True				
ANR	5200693	Identifier	done		5200636	0					
ANR	5200694	IfStatement	if ( ! pstate -> root )		5200636	4					
ANR	5200695	Condition	! pstate -> root	222:8:8797:8809	5200636	0	True				
ANR	5200696	UnaryOperationExpression	! pstate -> root		5200636	0					
ANR	5200697	UnaryOperator	!		5200636	0					
ANR	5200698	PtrMemberAccess	pstate -> root		5200636	1					
ANR	5200699	Identifier	pstate		5200636	0					
ANR	5200700	Identifier	root		5200636	1					
ANR	5200701	CompoundStatement		12:23:356:356	5200636	1					
ANR	5200702	ExpressionStatement	code = gs_note_error ( gs_error_undefinedfilename )	223:8:8822:8870	5200636	0	True				
ANR	5200703	AssignmentExpression	code = gs_note_error ( gs_error_undefinedfilename )		5200636	0		=			
ANR	5200704	Identifier	code		5200636	0					
ANR	5200705	CallExpression	gs_note_error ( gs_error_undefinedfilename )		5200636	1					
ANR	5200706	Callee	gs_note_error		5200636	0					
ANR	5200707	Identifier	gs_note_error		5200636	0					
ANR	5200708	ArgumentList	gs_error_undefinedfilename		5200636	1					
ANR	5200709	Argument	gs_error_undefinedfilename		5200636	0					
ANR	5200710	Identifier	gs_error_undefinedfilename		5200636	0					
ANR	5200711	GotoStatement	goto done ;	224:1:8873:8882	5200636	1	True				
ANR	5200712	Identifier	done		5200636	0					
ANR	5200713	IfStatement	"if ( ! map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname ) )"		5200636	5					
ANR	5200714	Condition	"! map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname )"	228:8:8940:9012	5200636	0	True				
ANR	5200715	UnaryOperationExpression	"! map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname )"		5200636	0					
ANR	5200716	UnaryOperator	!		5200636	0					
ANR	5200717	CallExpression	"map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname )"		5200636	1					
ANR	5200718	Callee	map_file_name_get		5200636	0					
ANR	5200719	Identifier	map_file_name_get		5200636	0					
ANR	5200720	ArgumentList	pstate -> memory		5200636	1					
ANR	5200721	Argument	pstate -> memory		5200636	0					
ANR	5200722	PtrMemberAccess	pstate -> memory		5200636	0					
ANR	5200723	Identifier	pstate		5200636	0					
ANR	5200724	Identifier	memory		5200636	1					
ANR	5200725	Argument	( char * ) pstate -> root		5200636	1					
ANR	5200726	CastExpression	( char * ) pstate -> root		5200636	0					
ANR	5200727	CastTarget	char *		5200636	0					
ANR	5200728	PtrMemberAccess	pstate -> root		5200636	1					
ANR	5200729	Identifier	pstate		5200636	0					
ANR	5200730	Identifier	root		5200636	1					
ANR	5200731	Argument	fname		5200636	2					
ANR	5200732	Identifier	fname		5200636	0					
ANR	5200733	Argument	realname		5200636	3					
ANR	5200734	Identifier	realname		5200636	0					
ANR	5200735	CompoundStatement		18:83:559:559	5200636	1					
ANR	5200736	IfStatement	"if ( strchr ( access , 'w' ) )"		5200636	0					
ANR	5200737	Condition	"strchr ( access , 'w' )"	229:12:9029:9047	5200636	0	True				
ANR	5200738	CallExpression	"strchr ( access , 'w' )"		5200636	0					
ANR	5200739	Callee	strchr		5200636	0					
ANR	5200740	Identifier	strchr		5200636	0					
ANR	5200741	ArgumentList	access		5200636	1					
ANR	5200742	Argument	access		5200636	0					
ANR	5200743	Identifier	access		5200636	0					
ANR	5200744	Argument	'w'		5200636	1					
ANR	5200745	PrimaryExpression	'w'		5200636	0					
ANR	5200746	CompoundStatement		19:33:594:594	5200636	1					
ANR	5200747	ExpressionStatement	"map_file_name_add ( pstate -> memory , pstate -> root , fname )"	230:12:9064:9118	5200636	0	True				
ANR	5200748	CallExpression	"map_file_name_add ( pstate -> memory , pstate -> root , fname )"		5200636	0					
ANR	5200749	Callee	map_file_name_add		5200636	0					
ANR	5200750	Identifier	map_file_name_add		5200636	0					
ANR	5200751	ArgumentList	pstate -> memory		5200636	1					
ANR	5200752	Argument	pstate -> memory		5200636	0					
ANR	5200753	PtrMemberAccess	pstate -> memory		5200636	0					
ANR	5200754	Identifier	pstate		5200636	0					
ANR	5200755	Identifier	memory		5200636	1					
ANR	5200756	Argument	pstate -> root		5200636	1					
ANR	5200757	PtrMemberAccess	pstate -> root		5200636	0					
ANR	5200758	Identifier	pstate		5200636	0					
ANR	5200759	Identifier	root		5200636	1					
ANR	5200760	Argument	fname		5200636	2					
ANR	5200761	Identifier	fname		5200636	0					
ANR	5200762	ExpressionStatement	"map_file_name_get ( pstate -> memory , pstate -> root , fname , realname )"	231:12:9132:9196	5200636	1	True				
ANR	5200763	CallExpression	"map_file_name_get ( pstate -> memory , pstate -> root , fname , realname )"		5200636	0					
ANR	5200764	Callee	map_file_name_get		5200636	0					
ANR	5200765	Identifier	map_file_name_get		5200636	0					
ANR	5200766	ArgumentList	pstate -> memory		5200636	1					
ANR	5200767	Argument	pstate -> memory		5200636	0					
ANR	5200768	PtrMemberAccess	pstate -> memory		5200636	0					
ANR	5200769	Identifier	pstate		5200636	0					
ANR	5200770	Identifier	memory		5200636	1					
ANR	5200771	Argument	pstate -> root		5200636	1					
ANR	5200772	PtrMemberAccess	pstate -> root		5200636	0					
ANR	5200773	Identifier	pstate		5200636	0					
ANR	5200774	Identifier	root		5200636	1					
ANR	5200775	Argument	fname		5200636	2					
ANR	5200776	Identifier	fname		5200636	0					
ANR	5200777	Argument	realname		5200636	3					
ANR	5200778	Identifier	realname		5200636	0					
ANR	5200779	ElseStatement	else		5200636	0					
ANR	5200780	CompoundStatement		23:13:765:765	5200636	0					
ANR	5200781	ExpressionStatement	code = gs_note_error ( gs_error_undefinedfilename )	234:12:9235:9283	5200636	0	True				
ANR	5200782	AssignmentExpression	code = gs_note_error ( gs_error_undefinedfilename )		5200636	0		=			
ANR	5200783	Identifier	code		5200636	0					
ANR	5200784	CallExpression	gs_note_error ( gs_error_undefinedfilename )		5200636	1					
ANR	5200785	Callee	gs_note_error		5200636	0					
ANR	5200786	Identifier	gs_note_error		5200636	0					
ANR	5200787	ArgumentList	gs_error_undefinedfilename		5200636	1					
ANR	5200788	Argument	gs_error_undefinedfilename		5200636	0					
ANR	5200789	Identifier	gs_error_undefinedfilename		5200636	0					
ANR	5200790	GotoStatement	goto done ;	235:5:9290:9299	5200636	1	True				
ANR	5200791	Identifier	done		5200636	0					
ANR	5200792	ExpressionStatement	"code = iodev_os_gp_fopen ( iodev_default ( pstate -> memory ) , realname , access , pfile , rfname , rnamelen )"	239:4:9315:9413	5200636	6	True				
ANR	5200793	AssignmentExpression	"code = iodev_os_gp_fopen ( iodev_default ( pstate -> memory ) , realname , access , pfile , rfname , rnamelen )"		5200636	0		=			
ANR	5200794	Identifier	code		5200636	0					
ANR	5200795	CallExpression	"iodev_os_gp_fopen ( iodev_default ( pstate -> memory ) , realname , access , pfile , rfname , rnamelen )"		5200636	1					
ANR	5200796	Callee	iodev_os_gp_fopen		5200636	0					
ANR	5200797	Identifier	iodev_os_gp_fopen		5200636	0					
ANR	5200798	ArgumentList	iodev_default ( pstate -> memory )		5200636	1					
ANR	5200799	Argument	iodev_default ( pstate -> memory )		5200636	0					
ANR	5200800	CallExpression	iodev_default ( pstate -> memory )		5200636	0					
ANR	5200801	Callee	iodev_default		5200636	0					
ANR	5200802	Identifier	iodev_default		5200636	0					
ANR	5200803	ArgumentList	pstate -> memory		5200636	1					
ANR	5200804	Argument	pstate -> memory		5200636	0					
ANR	5200805	PtrMemberAccess	pstate -> memory		5200636	0					
ANR	5200806	Identifier	pstate		5200636	0					
ANR	5200807	Identifier	memory		5200636	1					
ANR	5200808	Argument	realname		5200636	1					
ANR	5200809	Identifier	realname		5200636	0					
ANR	5200810	Argument	access		5200636	2					
ANR	5200811	Identifier	access		5200636	0					
ANR	5200812	Argument	pfile		5200636	3					
ANR	5200813	Identifier	pfile		5200636	0					
ANR	5200814	Argument	rfname		5200636	4					
ANR	5200815	Identifier	rfname		5200636	0					
ANR	5200816	Argument	rnamelen		5200636	5					
ANR	5200817	Identifier	rnamelen		5200636	0					
ANR	5200818	Label	done :	241:0:9420:9424	5200636	7	True				
ANR	5200819	Identifier	done		5200636	0					
ANR	5200820	IfStatement	if ( realname != NULL )		5200636	8					
ANR	5200821	Condition	realname != NULL	242:8:9434:9449	5200636	0	True				
ANR	5200822	EqualityExpression	realname != NULL		5200636	0		!=			
ANR	5200823	Identifier	realname		5200636	0					
ANR	5200824	Identifier	NULL		5200636	1					
ANR	5200825	ExpressionStatement	"gs_free_object ( pstate -> memory , realname , ""iodev_diskn_fopen(realname)"" )"	243:8:9460:9531	5200636	1	True				
ANR	5200826	CallExpression	"gs_free_object ( pstate -> memory , realname , ""iodev_diskn_fopen(realname)"" )"		5200636	0					
ANR	5200827	Callee	gs_free_object		5200636	0					
ANR	5200828	Identifier	gs_free_object		5200636	0					
ANR	5200829	ArgumentList	pstate -> memory		5200636	1					
ANR	5200830	Argument	pstate -> memory		5200636	0					
ANR	5200831	PtrMemberAccess	pstate -> memory		5200636	0					
ANR	5200832	Identifier	pstate		5200636	0					
ANR	5200833	Identifier	memory		5200636	1					
ANR	5200834	Argument	realname		5200636	1					
ANR	5200835	Identifier	realname		5200636	0					
ANR	5200836	Argument	"""iodev_diskn_fopen(realname)"""		5200636	2					
ANR	5200837	PrimaryExpression	"""iodev_diskn_fopen(realname)"""		5200636	0					
ANR	5200838	ReturnStatement	return ( code ) ;	245:4:9538:9550	5200636	9	True				
ANR	5200839	Identifier	code		5200636	0					
ANR	5200840	ReturnType	static int		5200636	1					
ANR	5200841	Identifier	iodev_diskn_fopen		5200636	2					
ANR	5200842	ParameterList	"gx_io_device * iodev , const char * fname , const char * access , FILE * * pfile , char * rfname , uint rnamelen"		5200636	3					
ANR	5200843	Parameter	gx_io_device * iodev	209:18:8335:8354	5200636	0	True				
ANR	5200844	ParameterType	gx_io_device *		5200636	0					
ANR	5200845	Identifier	iodev		5200636	1					
ANR	5200846	Parameter	const char * fname	209:40:8357:8373	5200636	1	True				
ANR	5200847	ParameterType	const char *		5200636	0					
ANR	5200848	Identifier	fname		5200636	1					
ANR	5200849	Parameter	const char * access	209:59:8376:8393	5200636	2	True				
ANR	5200850	ParameterType	const char *		5200636	0					
ANR	5200851	Identifier	access		5200636	1					
ANR	5200852	Parameter	FILE * * pfile	210:15:8411:8423	5200636	3	True				
ANR	5200853	ParameterType	FILE * *		5200636	0					
ANR	5200854	Identifier	pfile		5200636	1					
ANR	5200855	Parameter	char * rfname	210:30:8426:8437	5200636	4	True				
ANR	5200856	ParameterType	char *		5200636	0					
ANR	5200857	Identifier	rfname		5200636	1					
ANR	5200858	Parameter	uint rnamelen	210:44:8440:8452	5200636	5	True				
ANR	5200859	ParameterType	uint		5200636	0					
ANR	5200860	Identifier	rnamelen		5200636	1					
ANR	5200861	CFGEntryNode	ENTRY		5200636		True				
ANR	5200862	CFGExitNode	EXIT		5200636		True				
ANR	5200863	Symbol	fname		5200636						
ANR	5200864	Symbol	gs_alloc_bytes		5200636						
ANR	5200865	Symbol	access		5200636						
ANR	5200866	Symbol	code		5200636						
ANR	5200867	Symbol	NULL		5200636						
ANR	5200868	Symbol	* iodev		5200636						
ANR	5200869	Symbol	iodev_os_gp_fopen		5200636						
ANR	5200870	Symbol	rfname		5200636						
ANR	5200871	Symbol	pstate -> root		5200636						
ANR	5200872	Symbol	pstate		5200636						
ANR	5200873	Symbol	map_file_name_get		5200636						
ANR	5200874	Symbol	gp_file_name_sizeof		5200636						
ANR	5200875	Symbol	strchr		5200636						
ANR	5200876	Symbol	gs_error_undefinedfilename		5200636						
ANR	5200877	Symbol	realname		5200636						
ANR	5200878	Symbol	rnamelen		5200636						
ANR	5200879	Symbol	gs_error_VMerror		5200636						
ANR	5200880	Symbol	gs_note_error		5200636						
ANR	5200881	Symbol	iodev_default		5200636						
ANR	5200882	Symbol	iodev		5200636						
ANR	5200883	Symbol	* pstate		5200636						
ANR	5200884	Symbol	pfile		5200636						
ANR	5200885	Symbol	iodev -> state		5200636						
ANR	5200886	Symbol	pstate -> memory		5200636						
ANR	5200887	Function	diskn_delete	248:0:9555:10536							
ANR	5200888	FunctionDef	"diskn_delete (gx_io_device * iodev , const char * fname)"		5200887	0					
ANR	5200889	CompoundStatement		250:0:9620:10536	5200887	0					
ANR	5200890	IdentifierDeclStatement	diskn_state * pstate = ( diskn_state * ) iodev -> state ;	251:4:9626:9676	5200887	0	True				
ANR	5200891	IdentifierDecl	* pstate = ( diskn_state * ) iodev -> state		5200887	0					
ANR	5200892	IdentifierDeclType	diskn_state *		5200887	0					
ANR	5200893	Identifier	pstate		5200887	1					
ANR	5200894	AssignmentExpression	* pstate = ( diskn_state * ) iodev -> state		5200887	2		=			
ANR	5200895	Identifier	pstate		5200887	0					
ANR	5200896	CastExpression	( diskn_state * ) iodev -> state		5200887	1					
ANR	5200897	CastTarget	diskn_state *		5200887	0					
ANR	5200898	PtrMemberAccess	iodev -> state		5200887	1					
ANR	5200899	Identifier	iodev		5200887	0					
ANR	5200900	Identifier	state		5200887	1					
ANR	5200901	IdentifierDeclStatement	"char * realname = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_delete(realname)"" ) ;"	252:4:9682:9784	5200887	1	True				
ANR	5200902	IdentifierDecl	"* realname = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_delete(realname)"" )"		5200887	0					
ANR	5200903	IdentifierDeclType	char *		5200887	0					
ANR	5200904	Identifier	realname		5200887	1					
ANR	5200905	AssignmentExpression	"* realname = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_delete(realname)"" )"		5200887	2		=			
ANR	5200906	Identifier	realname		5200887	0					
ANR	5200907	CastExpression	"( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_delete(realname)"" )"		5200887	1					
ANR	5200908	CastTarget	char *		5200887	0					
ANR	5200909	CallExpression	"gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_delete(realname)"" )"		5200887	1					
ANR	5200910	Callee	gs_alloc_bytes		5200887	0					
ANR	5200911	Identifier	gs_alloc_bytes		5200887	0					
ANR	5200912	ArgumentList	pstate -> memory		5200887	1					
ANR	5200913	Argument	pstate -> memory		5200887	0					
ANR	5200914	PtrMemberAccess	pstate -> memory		5200887	0					
ANR	5200915	Identifier	pstate		5200887	0					
ANR	5200916	Identifier	memory		5200887	1					
ANR	5200917	Argument	gp_file_name_sizeof		5200887	1					
ANR	5200918	Identifier	gp_file_name_sizeof		5200887	0					
ANR	5200919	Argument	"""diskn_delete(realname)"""		5200887	2					
ANR	5200920	PrimaryExpression	"""diskn_delete(realname)"""		5200887	0					
ANR	5200921	IdentifierDeclStatement	int code = 0 ;	253:4:9790:9802	5200887	2	True				
ANR	5200922	IdentifierDecl	code = 0		5200887	0					
ANR	5200923	IdentifierDeclType	int		5200887	0					
ANR	5200924	Identifier	code		5200887	1					
ANR	5200925	AssignmentExpression	code = 0		5200887	2		=			
ANR	5200926	Identifier	code		5200887	0					
ANR	5200927	PrimaryExpression	0		5200887	1					
ANR	5200928	IfStatement	if ( realname == NULL )		5200887	3					
ANR	5200929	Condition	realname == NULL	255:8:9813:9828	5200887	0	True				
ANR	5200930	EqualityExpression	realname == NULL		5200887	0		==			
ANR	5200931	Identifier	realname		5200887	0					
ANR	5200932	Identifier	NULL		5200887	1					
ANR	5200933	CompoundStatement		6:26:210:210	5200887	1					
ANR	5200934	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	256:8:9841:9879	5200887	0	True				
ANR	5200935	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		5200887	0		=			
ANR	5200936	Identifier	code		5200887	0					
ANR	5200937	CallExpression	gs_note_error ( gs_error_VMerror )		5200887	1					
ANR	5200938	Callee	gs_note_error		5200887	0					
ANR	5200939	Identifier	gs_note_error		5200887	0					
ANR	5200940	ArgumentList	gs_error_VMerror		5200887	1					
ANR	5200941	Argument	gs_error_VMerror		5200887	0					
ANR	5200942	Identifier	gs_error_VMerror		5200887	0					
ANR	5200943	GotoStatement	goto done ;	257:1:9882:9891	5200887	1	True				
ANR	5200944	Identifier	done		5200887	0					
ANR	5200945	IfStatement	if ( ! pstate -> root )		5200887	4					
ANR	5200946	Condition	! pstate -> root	261:8:9957:9969	5200887	0	True				
ANR	5200947	UnaryOperationExpression	! pstate -> root		5200887	0					
ANR	5200948	UnaryOperator	!		5200887	0					
ANR	5200949	PtrMemberAccess	pstate -> root		5200887	1					
ANR	5200950	Identifier	pstate		5200887	0					
ANR	5200951	Identifier	root		5200887	1					
ANR	5200952	CompoundStatement		12:23:351:351	5200887	1					
ANR	5200953	ExpressionStatement	code = gs_note_error ( gs_error_undefinedfilename )	262:8:9982:10030	5200887	0	True				
ANR	5200954	AssignmentExpression	code = gs_note_error ( gs_error_undefinedfilename )		5200887	0		=			
ANR	5200955	Identifier	code		5200887	0					
ANR	5200956	CallExpression	gs_note_error ( gs_error_undefinedfilename )		5200887	1					
ANR	5200957	Callee	gs_note_error		5200887	0					
ANR	5200958	Identifier	gs_note_error		5200887	0					
ANR	5200959	ArgumentList	gs_error_undefinedfilename		5200887	1					
ANR	5200960	Argument	gs_error_undefinedfilename		5200887	0					
ANR	5200961	Identifier	gs_error_undefinedfilename		5200887	0					
ANR	5200962	GotoStatement	goto done ;	263:8:10040:10049	5200887	1	True				
ANR	5200963	Identifier	done		5200887	0					
ANR	5200964	IfStatement	"if ( ! map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname ) )"		5200887	5					
ANR	5200965	Condition	"! map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname )"	267:8:10105:10177	5200887	0	True				
ANR	5200966	UnaryOperationExpression	"! map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname )"		5200887	0					
ANR	5200967	UnaryOperator	!		5200887	0					
ANR	5200968	CallExpression	"map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname )"		5200887	1					
ANR	5200969	Callee	map_file_name_get		5200887	0					
ANR	5200970	Identifier	map_file_name_get		5200887	0					
ANR	5200971	ArgumentList	pstate -> memory		5200887	1					
ANR	5200972	Argument	pstate -> memory		5200887	0					
ANR	5200973	PtrMemberAccess	pstate -> memory		5200887	0					
ANR	5200974	Identifier	pstate		5200887	0					
ANR	5200975	Identifier	memory		5200887	1					
ANR	5200976	Argument	( char * ) pstate -> root		5200887	1					
ANR	5200977	CastExpression	( char * ) pstate -> root		5200887	0					
ANR	5200978	CastTarget	char *		5200887	0					
ANR	5200979	PtrMemberAccess	pstate -> root		5200887	1					
ANR	5200980	Identifier	pstate		5200887	0					
ANR	5200981	Identifier	root		5200887	1					
ANR	5200982	Argument	fname		5200887	2					
ANR	5200983	Identifier	fname		5200887	0					
ANR	5200984	Argument	realname		5200887	3					
ANR	5200985	Identifier	realname		5200887	0					
ANR	5200986	CompoundStatement		18:83:559:559	5200887	1					
ANR	5200987	ExpressionStatement	code = gs_note_error ( gs_error_undefinedfilename )	268:8:10190:10238	5200887	0	True				
ANR	5200988	AssignmentExpression	code = gs_note_error ( gs_error_undefinedfilename )		5200887	0		=			
ANR	5200989	Identifier	code		5200887	0					
ANR	5200990	CallExpression	gs_note_error ( gs_error_undefinedfilename )		5200887	1					
ANR	5200991	Callee	gs_note_error		5200887	0					
ANR	5200992	Identifier	gs_note_error		5200887	0					
ANR	5200993	ArgumentList	gs_error_undefinedfilename		5200887	1					
ANR	5200994	Argument	gs_error_undefinedfilename		5200887	0					
ANR	5200995	Identifier	gs_error_undefinedfilename		5200887	0					
ANR	5200996	GotoStatement	goto done ;	269:8:10248:10257	5200887	1	True				
ANR	5200997	Identifier	done		5200887	0					
ANR	5200998	ExpressionStatement	"map_file_name_del ( pstate -> memory , ( char * ) pstate -> root , fname )"	272:4:10270:10332	5200887	6	True				
ANR	5200999	CallExpression	"map_file_name_del ( pstate -> memory , ( char * ) pstate -> root , fname )"		5200887	0					
ANR	5201000	Callee	map_file_name_del		5200887	0					
ANR	5201001	Identifier	map_file_name_del		5200887	0					
ANR	5201002	ArgumentList	pstate -> memory		5200887	1					
ANR	5201003	Argument	pstate -> memory		5200887	0					
ANR	5201004	PtrMemberAccess	pstate -> memory		5200887	0					
ANR	5201005	Identifier	pstate		5200887	0					
ANR	5201006	Identifier	memory		5200887	1					
ANR	5201007	Argument	( char * ) pstate -> root		5200887	1					
ANR	5201008	CastExpression	( char * ) pstate -> root		5200887	0					
ANR	5201009	CastTarget	char *		5200887	0					
ANR	5201010	PtrMemberAccess	pstate -> root		5200887	1					
ANR	5201011	Identifier	pstate		5200887	0					
ANR	5201012	Identifier	root		5200887	1					
ANR	5201013	Argument	fname		5200887	2					
ANR	5201014	Identifier	fname		5200887	0					
ANR	5201015	ExpressionStatement	code = ( unlink ( realname ) == 0 ? 0 : gs_note_error ( gs_error_ioerror ) )	273:4:10338:10406	5200887	7	True				
ANR	5201016	AssignmentExpression	code = ( unlink ( realname ) == 0 ? 0 : gs_note_error ( gs_error_ioerror ) )		5200887	0		=			
ANR	5201017	Identifier	code		5200887	0					
ANR	5201018	ConditionalExpression	unlink ( realname ) == 0 ? 0 : gs_note_error ( gs_error_ioerror )		5200887	1					
ANR	5201019	Condition	unlink ( realname ) == 0		5200887	0					
ANR	5201020	EqualityExpression	unlink ( realname ) == 0		5200887	0		==			
ANR	5201021	CallExpression	unlink ( realname )		5200887	0					
ANR	5201022	Callee	unlink		5200887	0					
ANR	5201023	Identifier	unlink		5200887	0					
ANR	5201024	ArgumentList	realname		5200887	1					
ANR	5201025	Argument	realname		5200887	0					
ANR	5201026	Identifier	realname		5200887	0					
ANR	5201027	PrimaryExpression	0		5200887	1					
ANR	5201028	PrimaryExpression	0		5200887	1					
ANR	5201029	CallExpression	gs_note_error ( gs_error_ioerror )		5200887	2					
ANR	5201030	Callee	gs_note_error		5200887	0					
ANR	5201031	Identifier	gs_note_error		5200887	0					
ANR	5201032	ArgumentList	gs_error_ioerror		5200887	1					
ANR	5201033	Argument	gs_error_ioerror		5200887	0					
ANR	5201034	Identifier	gs_error_ioerror		5200887	0					
ANR	5201035	Label	done :	275:0:10409:10413	5200887	8	True				
ANR	5201036	Identifier	done		5200887	0					
ANR	5201037	IfStatement	if ( realname != NULL )		5200887	9					
ANR	5201038	Condition	realname != NULL	276:8:10423:10438	5200887	0	True				
ANR	5201039	EqualityExpression	realname != NULL		5200887	0		!=			
ANR	5201040	Identifier	realname		5200887	0					
ANR	5201041	Identifier	NULL		5200887	1					
ANR	5201042	ExpressionStatement	"gs_free_object ( pstate -> memory , realname , ""diskn_delete(realname)"" )"	277:8:10449:10515	5200887	1	True				
ANR	5201043	CallExpression	"gs_free_object ( pstate -> memory , realname , ""diskn_delete(realname)"" )"		5200887	0					
ANR	5201044	Callee	gs_free_object		5200887	0					
ANR	5201045	Identifier	gs_free_object		5200887	0					
ANR	5201046	ArgumentList	pstate -> memory		5200887	1					
ANR	5201047	Argument	pstate -> memory		5200887	0					
ANR	5201048	PtrMemberAccess	pstate -> memory		5200887	0					
ANR	5201049	Identifier	pstate		5200887	0					
ANR	5201050	Identifier	memory		5200887	1					
ANR	5201051	Argument	realname		5200887	1					
ANR	5201052	Identifier	realname		5200887	0					
ANR	5201053	Argument	"""diskn_delete(realname)"""		5200887	2					
ANR	5201054	PrimaryExpression	"""diskn_delete(realname)"""		5200887	0					
ANR	5201055	ReturnStatement	return ( code ) ;	279:4:10522:10534	5200887	10	True				
ANR	5201056	Identifier	code		5200887	0					
ANR	5201057	ReturnType	static int		5200887	1					
ANR	5201058	Identifier	diskn_delete		5200887	2					
ANR	5201059	ParameterList	"gx_io_device * iodev , const char * fname"		5200887	3					
ANR	5201060	Parameter	gx_io_device * iodev	249:13:9579:9598	5200887	0	True				
ANR	5201061	ParameterType	gx_io_device *		5200887	0					
ANR	5201062	Identifier	iodev		5200887	1					
ANR	5201063	Parameter	const char * fname	249:35:9601:9617	5200887	1	True				
ANR	5201064	ParameterType	const char *		5200887	0					
ANR	5201065	Identifier	fname		5200887	1					
ANR	5201066	CFGEntryNode	ENTRY		5200887		True				
ANR	5201067	CFGExitNode	EXIT		5200887		True				
ANR	5201068	Symbol	fname		5200887						
ANR	5201069	Symbol	gs_alloc_bytes		5200887						
ANR	5201070	Symbol	code		5200887						
ANR	5201071	Symbol	NULL		5200887						
ANR	5201072	Symbol	* iodev		5200887						
ANR	5201073	Symbol	pstate -> root		5200887						
ANR	5201074	Symbol	pstate		5200887						
ANR	5201075	Symbol	map_file_name_get		5200887						
ANR	5201076	Symbol	gp_file_name_sizeof		5200887						
ANR	5201077	Symbol	gs_error_ioerror		5200887						
ANR	5201078	Symbol	gs_error_undefinedfilename		5200887						
ANR	5201079	Symbol	realname		5200887						
ANR	5201080	Symbol	gs_error_VMerror		5200887						
ANR	5201081	Symbol	gs_note_error		5200887						
ANR	5201082	Symbol	iodev		5200887						
ANR	5201083	Symbol	unlink		5200887						
ANR	5201084	Symbol	* pstate		5200887						
ANR	5201085	Symbol	iodev -> state		5200887						
ANR	5201086	Symbol	pstate -> memory		5200887						
ANR	5201087	Function	diskn_rename	282:0:10539:11693							
ANR	5201088	FunctionDef	"diskn_rename (gx_io_device * iodev , const char * from , const char * to)"		5201087	0					
ANR	5201089	CompoundStatement		284:0:10619:11693	5201087	0					
ANR	5201090	IdentifierDeclStatement	diskn_state * pstate = ( diskn_state * ) iodev -> state ;	285:4:10625:10675	5201087	0	True				
ANR	5201091	IdentifierDecl	* pstate = ( diskn_state * ) iodev -> state		5201087	0					
ANR	5201092	IdentifierDeclType	diskn_state *		5201087	0					
ANR	5201093	Identifier	pstate		5201087	1					
ANR	5201094	AssignmentExpression	* pstate = ( diskn_state * ) iodev -> state		5201087	2		=			
ANR	5201095	Identifier	pstate		5201087	0					
ANR	5201096	CastExpression	( diskn_state * ) iodev -> state		5201087	1					
ANR	5201097	CastTarget	diskn_state *		5201087	0					
ANR	5201098	PtrMemberAccess	iodev -> state		5201087	1					
ANR	5201099	Identifier	iodev		5201087	0					
ANR	5201100	Identifier	state		5201087	1					
ANR	5201101	IdentifierDeclStatement	"char * toreal = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_rename(toreal)"" ) ;"	286:4:10681:10779	5201087	1	True				
ANR	5201102	IdentifierDecl	"* toreal = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_rename(toreal)"" )"		5201087	0					
ANR	5201103	IdentifierDeclType	char *		5201087	0					
ANR	5201104	Identifier	toreal		5201087	1					
ANR	5201105	AssignmentExpression	"* toreal = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_rename(toreal)"" )"		5201087	2		=			
ANR	5201106	Identifier	toreal		5201087	0					
ANR	5201107	CastExpression	"( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_rename(toreal)"" )"		5201087	1					
ANR	5201108	CastTarget	char *		5201087	0					
ANR	5201109	CallExpression	"gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_rename(toreal)"" )"		5201087	1					
ANR	5201110	Callee	gs_alloc_bytes		5201087	0					
ANR	5201111	Identifier	gs_alloc_bytes		5201087	0					
ANR	5201112	ArgumentList	pstate -> memory		5201087	1					
ANR	5201113	Argument	pstate -> memory		5201087	0					
ANR	5201114	PtrMemberAccess	pstate -> memory		5201087	0					
ANR	5201115	Identifier	pstate		5201087	0					
ANR	5201116	Identifier	memory		5201087	1					
ANR	5201117	Argument	gp_file_name_sizeof		5201087	1					
ANR	5201118	Identifier	gp_file_name_sizeof		5201087	0					
ANR	5201119	Argument	"""diskn_rename(toreal)"""		5201087	2					
ANR	5201120	PrimaryExpression	"""diskn_rename(toreal)"""		5201087	0					
ANR	5201121	IdentifierDeclStatement	int code = 0 ;	287:4:10785:10797	5201087	2	True				
ANR	5201122	IdentifierDecl	code = 0		5201087	0					
ANR	5201123	IdentifierDeclType	int		5201087	0					
ANR	5201124	Identifier	code		5201087	1					
ANR	5201125	AssignmentExpression	code = 0		5201087	2		=			
ANR	5201126	Identifier	code		5201087	0					
ANR	5201127	PrimaryExpression	0		5201087	1					
ANR	5201128	IfStatement	if ( toreal == NULL )		5201087	3					
ANR	5201129	Condition	toreal == NULL	289:8:10808:10821	5201087	0	True				
ANR	5201130	EqualityExpression	toreal == NULL		5201087	0		==			
ANR	5201131	Identifier	toreal		5201087	0					
ANR	5201132	Identifier	NULL		5201087	1					
ANR	5201133	CompoundStatement		6:24:204:204	5201087	1					
ANR	5201134	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	290:8:10834:10872	5201087	0	True				
ANR	5201135	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		5201087	0		=			
ANR	5201136	Identifier	code		5201087	0					
ANR	5201137	CallExpression	gs_note_error ( gs_error_VMerror )		5201087	1					
ANR	5201138	Callee	gs_note_error		5201087	0					
ANR	5201139	Identifier	gs_note_error		5201087	0					
ANR	5201140	ArgumentList	gs_error_VMerror		5201087	1					
ANR	5201141	Argument	gs_error_VMerror		5201087	0					
ANR	5201142	Identifier	gs_error_VMerror		5201087	0					
ANR	5201143	GotoStatement	goto done ;	291:1:10875:10884	5201087	1	True				
ANR	5201144	Identifier	done		5201087	0					
ANR	5201145	IfStatement	if ( ! pstate -> root )		5201087	4					
ANR	5201146	Condition	! pstate -> root	295:8:10950:10962	5201087	0	True				
ANR	5201147	UnaryOperationExpression	! pstate -> root		5201087	0					
ANR	5201148	UnaryOperator	!		5201087	0					
ANR	5201149	PtrMemberAccess	pstate -> root		5201087	1					
ANR	5201150	Identifier	pstate		5201087	0					
ANR	5201151	Identifier	root		5201087	1					
ANR	5201152	CompoundStatement		12:23:345:345	5201087	1					
ANR	5201153	ExpressionStatement	code = gs_note_error ( gs_error_undefinedfilename )	296:8:10975:11023	5201087	0	True				
ANR	5201154	AssignmentExpression	code = gs_note_error ( gs_error_undefinedfilename )		5201087	0		=			
ANR	5201155	Identifier	code		5201087	0					
ANR	5201156	CallExpression	gs_note_error ( gs_error_undefinedfilename )		5201087	1					
ANR	5201157	Callee	gs_note_error		5201087	0					
ANR	5201158	Identifier	gs_note_error		5201087	0					
ANR	5201159	ArgumentList	gs_error_undefinedfilename		5201087	1					
ANR	5201160	Argument	gs_error_undefinedfilename		5201087	0					
ANR	5201161	Identifier	gs_error_undefinedfilename		5201087	0					
ANR	5201162	GotoStatement	goto done ;	297:8:11033:11042	5201087	1	True				
ANR	5201163	Identifier	done		5201087	0					
ANR	5201164	IfStatement	"if ( strcmp ( to , from ) == 0 )"		5201087	5					
ANR	5201165	Condition	"strcmp ( to , from ) == 0"	301:8:11113:11133	5201087	0	True				
ANR	5201166	EqualityExpression	"strcmp ( to , from ) == 0"		5201087	0		==			
ANR	5201167	CallExpression	"strcmp ( to , from )"		5201087	0					
ANR	5201168	Callee	strcmp		5201087	0					
ANR	5201169	Identifier	strcmp		5201087	0					
ANR	5201170	ArgumentList	to		5201087	1					
ANR	5201171	Argument	to		5201087	0					
ANR	5201172	Identifier	to		5201087	0					
ANR	5201173	Argument	from		5201087	1					
ANR	5201174	Identifier	from		5201087	0					
ANR	5201175	PrimaryExpression	0		5201087	1					
ANR	5201176	CompoundStatement		18:31:516:516	5201087	1					
ANR	5201177	ExpressionStatement	code = 0	302:8:11146:11154	5201087	0	True				
ANR	5201178	AssignmentExpression	code = 0		5201087	0		=			
ANR	5201179	Identifier	code		5201087	0					
ANR	5201180	PrimaryExpression	0		5201087	1					
ANR	5201181	GotoStatement	goto done ;	303:8:11164:11173	5201087	1	True				
ANR	5201182	Identifier	done		5201087	0					
ANR	5201183	IfStatement	"if ( map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , to , toreal ) )"		5201087	6					
ANR	5201184	Condition	"map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , to , toreal )"	309:8:11279:11345	5201087	0	True				
ANR	5201185	CallExpression	"map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , to , toreal )"		5201087	0					
ANR	5201186	Callee	map_file_name_get		5201087	0					
ANR	5201187	Identifier	map_file_name_get		5201087	0					
ANR	5201188	ArgumentList	pstate -> memory		5201087	1					
ANR	5201189	Argument	pstate -> memory		5201087	0					
ANR	5201190	PtrMemberAccess	pstate -> memory		5201087	0					
ANR	5201191	Identifier	pstate		5201087	0					
ANR	5201192	Identifier	memory		5201087	1					
ANR	5201193	Argument	( char * ) pstate -> root		5201087	1					
ANR	5201194	CastExpression	( char * ) pstate -> root		5201087	0					
ANR	5201195	CastTarget	char *		5201087	0					
ANR	5201196	PtrMemberAccess	pstate -> root		5201087	1					
ANR	5201197	Identifier	pstate		5201087	0					
ANR	5201198	Identifier	root		5201087	1					
ANR	5201199	Argument	to		5201087	2					
ANR	5201200	Identifier	to		5201087	0					
ANR	5201201	Argument	toreal		5201087	3					
ANR	5201202	Identifier	toreal		5201087	0					
ANR	5201203	CompoundStatement		26:77:728:728	5201087	1					
ANR	5201204	ExpressionStatement	"map_file_name_del ( pstate -> memory , ( char * ) pstate -> root , to )"	310:8:11358:11417	5201087	0	True				
ANR	5201205	CallExpression	"map_file_name_del ( pstate -> memory , ( char * ) pstate -> root , to )"		5201087	0					
ANR	5201206	Callee	map_file_name_del		5201087	0					
ANR	5201207	Identifier	map_file_name_del		5201087	0					
ANR	5201208	ArgumentList	pstate -> memory		5201087	1					
ANR	5201209	Argument	pstate -> memory		5201087	0					
ANR	5201210	PtrMemberAccess	pstate -> memory		5201087	0					
ANR	5201211	Identifier	pstate		5201087	0					
ANR	5201212	Identifier	memory		5201087	1					
ANR	5201213	Argument	( char * ) pstate -> root		5201087	1					
ANR	5201214	CastExpression	( char * ) pstate -> root		5201087	0					
ANR	5201215	CastTarget	char *		5201087	0					
ANR	5201216	PtrMemberAccess	pstate -> root		5201087	1					
ANR	5201217	Identifier	pstate		5201087	0					
ANR	5201218	Identifier	root		5201087	1					
ANR	5201219	Argument	to		5201087	2					
ANR	5201220	Identifier	to		5201087	0					
ANR	5201221	ExpressionStatement	code = unlink ( toreal ) == 0 ? 0 : gs_note_error ( gs_error_ioerror )	311:8:11427:11491	5201087	1	True				
ANR	5201222	AssignmentExpression	code = unlink ( toreal ) == 0 ? 0 : gs_note_error ( gs_error_ioerror )		5201087	0		=			
ANR	5201223	Identifier	code		5201087	0					
ANR	5201224	ConditionalExpression	unlink ( toreal ) == 0 ? 0 : gs_note_error ( gs_error_ioerror )		5201087	1					
ANR	5201225	Condition	unlink ( toreal ) == 0		5201087	0					
ANR	5201226	EqualityExpression	unlink ( toreal ) == 0		5201087	0		==			
ANR	5201227	CallExpression	unlink ( toreal )		5201087	0					
ANR	5201228	Callee	unlink		5201087	0					
ANR	5201229	Identifier	unlink		5201087	0					
ANR	5201230	ArgumentList	toreal		5201087	1					
ANR	5201231	Argument	toreal		5201087	0					
ANR	5201232	Identifier	toreal		5201087	0					
ANR	5201233	PrimaryExpression	0		5201087	1					
ANR	5201234	PrimaryExpression	0		5201087	1					
ANR	5201235	CallExpression	gs_note_error ( gs_error_ioerror )		5201087	2					
ANR	5201236	Callee	gs_note_error		5201087	0					
ANR	5201237	Identifier	gs_note_error		5201087	0					
ANR	5201238	ArgumentList	gs_error_ioerror		5201087	1					
ANR	5201239	Argument	gs_error_ioerror		5201087	0					
ANR	5201240	Identifier	gs_error_ioerror		5201087	0					
ANR	5201241	ExpressionStatement	"map_file_name_ren ( pstate -> memory , ( char * ) pstate -> root , from , to )"	314:4:11504:11569	5201087	7	True				
ANR	5201242	CallExpression	"map_file_name_ren ( pstate -> memory , ( char * ) pstate -> root , from , to )"		5201087	0					
ANR	5201243	Callee	map_file_name_ren		5201087	0					
ANR	5201244	Identifier	map_file_name_ren		5201087	0					
ANR	5201245	ArgumentList	pstate -> memory		5201087	1					
ANR	5201246	Argument	pstate -> memory		5201087	0					
ANR	5201247	PtrMemberAccess	pstate -> memory		5201087	0					
ANR	5201248	Identifier	pstate		5201087	0					
ANR	5201249	Identifier	memory		5201087	1					
ANR	5201250	Argument	( char * ) pstate -> root		5201087	1					
ANR	5201251	CastExpression	( char * ) pstate -> root		5201087	0					
ANR	5201252	CastTarget	char *		5201087	0					
ANR	5201253	PtrMemberAccess	pstate -> root		5201087	1					
ANR	5201254	Identifier	pstate		5201087	0					
ANR	5201255	Identifier	root		5201087	1					
ANR	5201256	Argument	from		5201087	2					
ANR	5201257	Identifier	from		5201087	0					
ANR	5201258	Argument	to		5201087	3					
ANR	5201259	Identifier	to		5201087	0					
ANR	5201260	Label	done :	316:0:11572:11576	5201087	8	True				
ANR	5201261	Identifier	done		5201087	0					
ANR	5201262	IfStatement	if ( toreal != NULL )		5201087	9					
ANR	5201263	Condition	toreal != NULL	317:8:11586:11599	5201087	0	True				
ANR	5201264	EqualityExpression	toreal != NULL		5201087	0		!=			
ANR	5201265	Identifier	toreal		5201087	0					
ANR	5201266	Identifier	NULL		5201087	1					
ANR	5201267	ExpressionStatement	"gs_free_object ( pstate -> memory , toreal , ""diskn_rename(toreal)"" )"	318:8:11610:11672	5201087	1	True				
ANR	5201268	CallExpression	"gs_free_object ( pstate -> memory , toreal , ""diskn_rename(toreal)"" )"		5201087	0					
ANR	5201269	Callee	gs_free_object		5201087	0					
ANR	5201270	Identifier	gs_free_object		5201087	0					
ANR	5201271	ArgumentList	pstate -> memory		5201087	1					
ANR	5201272	Argument	pstate -> memory		5201087	0					
ANR	5201273	PtrMemberAccess	pstate -> memory		5201087	0					
ANR	5201274	Identifier	pstate		5201087	0					
ANR	5201275	Identifier	memory		5201087	1					
ANR	5201276	Argument	toreal		5201087	1					
ANR	5201277	Identifier	toreal		5201087	0					
ANR	5201278	Argument	"""diskn_rename(toreal)"""		5201087	2					
ANR	5201279	PrimaryExpression	"""diskn_rename(toreal)"""		5201087	0					
ANR	5201280	ReturnStatement	return ( code ) ;	320:4:11679:11691	5201087	10	True				
ANR	5201281	Identifier	code		5201087	0					
ANR	5201282	ReturnType	static int		5201087	1					
ANR	5201283	Identifier	diskn_rename		5201087	2					
ANR	5201284	ParameterList	"gx_io_device * iodev , const char * from , const char * to"		5201087	3					
ANR	5201285	Parameter	gx_io_device * iodev	283:13:10563:10582	5201087	0	True				
ANR	5201286	ParameterType	gx_io_device *		5201087	0					
ANR	5201287	Identifier	iodev		5201087	1					
ANR	5201288	Parameter	const char * from	283:35:10585:10600	5201087	1	True				
ANR	5201289	ParameterType	const char *		5201087	0					
ANR	5201290	Identifier	from		5201087	1					
ANR	5201291	Parameter	const char * to	283:53:10603:10616	5201087	2	True				
ANR	5201292	ParameterType	const char *		5201087	0					
ANR	5201293	Identifier	to		5201087	1					
ANR	5201294	CFGEntryNode	ENTRY		5201087		True				
ANR	5201295	CFGExitNode	EXIT		5201087		True				
ANR	5201296	Symbol	strcmp		5201087						
ANR	5201297	Symbol	gs_alloc_bytes		5201087						
ANR	5201298	Symbol	code		5201087						
ANR	5201299	Symbol	NULL		5201087						
ANR	5201300	Symbol	* iodev		5201087						
ANR	5201301	Symbol	pstate -> root		5201087						
ANR	5201302	Symbol	pstate		5201087						
ANR	5201303	Symbol	map_file_name_get		5201087						
ANR	5201304	Symbol	gp_file_name_sizeof		5201087						
ANR	5201305	Symbol	gs_error_ioerror		5201087						
ANR	5201306	Symbol	gs_error_undefinedfilename		5201087						
ANR	5201307	Symbol	gs_error_VMerror		5201087						
ANR	5201308	Symbol	gs_note_error		5201087						
ANR	5201309	Symbol	iodev		5201087						
ANR	5201310	Symbol	unlink		5201087						
ANR	5201311	Symbol	* pstate		5201087						
ANR	5201312	Symbol	iodev -> state		5201087						
ANR	5201313	Symbol	pstate -> memory		5201087						
ANR	5201314	Symbol	from		5201087						
ANR	5201315	Symbol	toreal		5201087						
ANR	5201316	Symbol	to		5201087						
ANR	5201317	Function	diskn_status	323:0:11696:12630							
ANR	5201318	FunctionDef	"diskn_status (gx_io_device * iodev , const char * fname , struct stat * pstat)"		5201317	0					
ANR	5201319	CompoundStatement		325:0:11781:12630	5201317	0					
ANR	5201320	IdentifierDeclStatement	diskn_state * pstate = ( diskn_state * ) iodev -> state ;	326:4:11787:11837	5201317	0	True				
ANR	5201321	IdentifierDecl	* pstate = ( diskn_state * ) iodev -> state		5201317	0					
ANR	5201322	IdentifierDeclType	diskn_state *		5201317	0					
ANR	5201323	Identifier	pstate		5201317	1					
ANR	5201324	AssignmentExpression	* pstate = ( diskn_state * ) iodev -> state		5201317	2		=			
ANR	5201325	Identifier	pstate		5201317	0					
ANR	5201326	CastExpression	( diskn_state * ) iodev -> state		5201317	1					
ANR	5201327	CastTarget	diskn_state *		5201317	0					
ANR	5201328	PtrMemberAccess	iodev -> state		5201317	1					
ANR	5201329	Identifier	iodev		5201317	0					
ANR	5201330	Identifier	state		5201317	1					
ANR	5201331	IdentifierDeclStatement	"char * realname = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_status(realname)"" ) ;"	327:4:11843:11945	5201317	1	True				
ANR	5201332	IdentifierDecl	"* realname = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_status(realname)"" )"		5201317	0					
ANR	5201333	IdentifierDeclType	char *		5201317	0					
ANR	5201334	Identifier	realname		5201317	1					
ANR	5201335	AssignmentExpression	"* realname = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_status(realname)"" )"		5201317	2		=			
ANR	5201336	Identifier	realname		5201317	0					
ANR	5201337	CastExpression	"( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_status(realname)"" )"		5201317	1					
ANR	5201338	CastTarget	char *		5201317	0					
ANR	5201339	CallExpression	"gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_status(realname)"" )"		5201317	1					
ANR	5201340	Callee	gs_alloc_bytes		5201317	0					
ANR	5201341	Identifier	gs_alloc_bytes		5201317	0					
ANR	5201342	ArgumentList	pstate -> memory		5201317	1					
ANR	5201343	Argument	pstate -> memory		5201317	0					
ANR	5201344	PtrMemberAccess	pstate -> memory		5201317	0					
ANR	5201345	Identifier	pstate		5201317	0					
ANR	5201346	Identifier	memory		5201317	1					
ANR	5201347	Argument	gp_file_name_sizeof		5201317	1					
ANR	5201348	Identifier	gp_file_name_sizeof		5201317	0					
ANR	5201349	Argument	"""diskn_status(realname)"""		5201317	2					
ANR	5201350	PrimaryExpression	"""diskn_status(realname)"""		5201317	0					
ANR	5201351	IdentifierDeclStatement	int code = 0 ;	328:4:11951:11963	5201317	2	True				
ANR	5201352	IdentifierDecl	code = 0		5201317	0					
ANR	5201353	IdentifierDeclType	int		5201317	0					
ANR	5201354	Identifier	code		5201317	1					
ANR	5201355	AssignmentExpression	code = 0		5201317	2		=			
ANR	5201356	Identifier	code		5201317	0					
ANR	5201357	PrimaryExpression	0		5201317	1					
ANR	5201358	IfStatement	if ( realname == NULL )		5201317	3					
ANR	5201359	Condition	realname == NULL	330:8:11974:11989	5201317	0	True				
ANR	5201360	EqualityExpression	realname == NULL		5201317	0		==			
ANR	5201361	Identifier	realname		5201317	0					
ANR	5201362	Identifier	NULL		5201317	1					
ANR	5201363	CompoundStatement		6:26:210:210	5201317	1					
ANR	5201364	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	331:8:12002:12040	5201317	0	True				
ANR	5201365	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		5201317	0		=			
ANR	5201366	Identifier	code		5201317	0					
ANR	5201367	CallExpression	gs_note_error ( gs_error_VMerror )		5201317	1					
ANR	5201368	Callee	gs_note_error		5201317	0					
ANR	5201369	Identifier	gs_note_error		5201317	0					
ANR	5201370	ArgumentList	gs_error_VMerror		5201317	1					
ANR	5201371	Argument	gs_error_VMerror		5201317	0					
ANR	5201372	Identifier	gs_error_VMerror		5201317	0					
ANR	5201373	GotoStatement	goto done ;	332:1:12043:12052	5201317	1	True				
ANR	5201374	Identifier	done		5201317	0					
ANR	5201375	IfStatement	if ( ! pstate -> root )		5201317	4					
ANR	5201376	Condition	! pstate -> root	336:8:12118:12130	5201317	0	True				
ANR	5201377	UnaryOperationExpression	! pstate -> root		5201317	0					
ANR	5201378	UnaryOperator	!		5201317	0					
ANR	5201379	PtrMemberAccess	pstate -> root		5201317	1					
ANR	5201380	Identifier	pstate		5201317	0					
ANR	5201381	Identifier	root		5201317	1					
ANR	5201382	CompoundStatement		12:23:351:351	5201317	1					
ANR	5201383	ExpressionStatement	code = gs_note_error ( gs_error_undefinedfilename )	337:8:12143:12191	5201317	0	True				
ANR	5201384	AssignmentExpression	code = gs_note_error ( gs_error_undefinedfilename )		5201317	0		=			
ANR	5201385	Identifier	code		5201317	0					
ANR	5201386	CallExpression	gs_note_error ( gs_error_undefinedfilename )		5201317	1					
ANR	5201387	Callee	gs_note_error		5201317	0					
ANR	5201388	Identifier	gs_note_error		5201317	0					
ANR	5201389	ArgumentList	gs_error_undefinedfilename		5201317	1					
ANR	5201390	Argument	gs_error_undefinedfilename		5201317	0					
ANR	5201391	Identifier	gs_error_undefinedfilename		5201317	0					
ANR	5201392	GotoStatement	goto done ;	338:8:12201:12210	5201317	1	True				
ANR	5201393	Identifier	done		5201317	0					
ANR	5201394	IfStatement	"if ( ! map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname ) )"		5201317	5					
ANR	5201395	Condition	"! map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname )"	342:8:12266:12338	5201317	0	True				
ANR	5201396	UnaryOperationExpression	"! map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname )"		5201317	0					
ANR	5201397	UnaryOperator	!		5201317	0					
ANR	5201398	CallExpression	"map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname )"		5201317	1					
ANR	5201399	Callee	map_file_name_get		5201317	0					
ANR	5201400	Identifier	map_file_name_get		5201317	0					
ANR	5201401	ArgumentList	pstate -> memory		5201317	1					
ANR	5201402	Argument	pstate -> memory		5201317	0					
ANR	5201403	PtrMemberAccess	pstate -> memory		5201317	0					
ANR	5201404	Identifier	pstate		5201317	0					
ANR	5201405	Identifier	memory		5201317	1					
ANR	5201406	Argument	( char * ) pstate -> root		5201317	1					
ANR	5201407	CastExpression	( char * ) pstate -> root		5201317	0					
ANR	5201408	CastTarget	char *		5201317	0					
ANR	5201409	PtrMemberAccess	pstate -> root		5201317	1					
ANR	5201410	Identifier	pstate		5201317	0					
ANR	5201411	Identifier	root		5201317	1					
ANR	5201412	Argument	fname		5201317	2					
ANR	5201413	Identifier	fname		5201317	0					
ANR	5201414	Argument	realname		5201317	3					
ANR	5201415	Identifier	realname		5201317	0					
ANR	5201416	CompoundStatement		18:83:559:559	5201317	1					
ANR	5201417	ExpressionStatement	code = gs_note_error ( gs_error_undefinedfilename )	343:8:12351:12399	5201317	0	True				
ANR	5201418	AssignmentExpression	code = gs_note_error ( gs_error_undefinedfilename )		5201317	0		=			
ANR	5201419	Identifier	code		5201317	0					
ANR	5201420	CallExpression	gs_note_error ( gs_error_undefinedfilename )		5201317	1					
ANR	5201421	Callee	gs_note_error		5201317	0					
ANR	5201422	Identifier	gs_note_error		5201317	0					
ANR	5201423	ArgumentList	gs_error_undefinedfilename		5201317	1					
ANR	5201424	Argument	gs_error_undefinedfilename		5201317	0					
ANR	5201425	Identifier	gs_error_undefinedfilename		5201317	0					
ANR	5201426	ExpressionStatement	"code = stat ( ( char * ) realname , pstat ) < 0 ? gs_note_error ( gs_error_undefinedfilename ) : 0"	346:4:12412:12500	5201317	6	True				
ANR	5201427	AssignmentExpression	"code = stat ( ( char * ) realname , pstat ) < 0 ? gs_note_error ( gs_error_undefinedfilename ) : 0"		5201317	0		=			
ANR	5201428	Identifier	code		5201317	0					
ANR	5201429	ConditionalExpression	"stat ( ( char * ) realname , pstat ) < 0 ? gs_note_error ( gs_error_undefinedfilename ) : 0"		5201317	1					
ANR	5201430	Condition	"stat ( ( char * ) realname , pstat ) < 0"		5201317	0					
ANR	5201431	RelationalExpression	"stat ( ( char * ) realname , pstat ) < 0"		5201317	0		<			
ANR	5201432	CallExpression	"stat ( ( char * ) realname , pstat )"		5201317	0					
ANR	5201433	Callee	stat		5201317	0					
ANR	5201434	Identifier	stat		5201317	0					
ANR	5201435	ArgumentList	( char * ) realname		5201317	1					
ANR	5201436	Argument	( char * ) realname		5201317	0					
ANR	5201437	CastExpression	( char * ) realname		5201317	0					
ANR	5201438	CastTarget	char *		5201317	0					
ANR	5201439	Identifier	realname		5201317	1					
ANR	5201440	Argument	pstat		5201317	1					
ANR	5201441	Identifier	pstat		5201317	0					
ANR	5201442	PrimaryExpression	0		5201317	1					
ANR	5201443	CallExpression	gs_note_error ( gs_error_undefinedfilename )		5201317	1					
ANR	5201444	Callee	gs_note_error		5201317	0					
ANR	5201445	Identifier	gs_note_error		5201317	0					
ANR	5201446	ArgumentList	gs_error_undefinedfilename		5201317	1					
ANR	5201447	Argument	gs_error_undefinedfilename		5201317	0					
ANR	5201448	Identifier	gs_error_undefinedfilename		5201317	0					
ANR	5201449	PrimaryExpression	0		5201317	2					
ANR	5201450	Label	done :	348:0:12503:12507	5201317	7	True				
ANR	5201451	Identifier	done		5201317	0					
ANR	5201452	IfStatement	if ( realname != NULL )		5201317	8					
ANR	5201453	Condition	realname != NULL	349:8:12517:12532	5201317	0	True				
ANR	5201454	EqualityExpression	realname != NULL		5201317	0		!=			
ANR	5201455	Identifier	realname		5201317	0					
ANR	5201456	Identifier	NULL		5201317	1					
ANR	5201457	ExpressionStatement	"gs_free_object ( pstate -> memory , realname , ""diskn_status(realname)"" )"	350:8:12543:12609	5201317	1	True				
ANR	5201458	CallExpression	"gs_free_object ( pstate -> memory , realname , ""diskn_status(realname)"" )"		5201317	0					
ANR	5201459	Callee	gs_free_object		5201317	0					
ANR	5201460	Identifier	gs_free_object		5201317	0					
ANR	5201461	ArgumentList	pstate -> memory		5201317	1					
ANR	5201462	Argument	pstate -> memory		5201317	0					
ANR	5201463	PtrMemberAccess	pstate -> memory		5201317	0					
ANR	5201464	Identifier	pstate		5201317	0					
ANR	5201465	Identifier	memory		5201317	1					
ANR	5201466	Argument	realname		5201317	1					
ANR	5201467	Identifier	realname		5201317	0					
ANR	5201468	Argument	"""diskn_status(realname)"""		5201317	2					
ANR	5201469	PrimaryExpression	"""diskn_status(realname)"""		5201317	0					
ANR	5201470	ReturnStatement	return ( code ) ;	352:4:12616:12628	5201317	9	True				
ANR	5201471	Identifier	code		5201317	0					
ANR	5201472	ReturnType	static int		5201317	1					
ANR	5201473	Identifier	diskn_status		5201317	2					
ANR	5201474	ParameterList	"gx_io_device * iodev , const char * fname , struct stat * pstat"		5201317	3					
ANR	5201475	Parameter	gx_io_device * iodev	324:13:11720:11739	5201317	0	True				
ANR	5201476	ParameterType	gx_io_device *		5201317	0					
ANR	5201477	Identifier	iodev		5201317	1					
ANR	5201478	Parameter	const char * fname	324:35:11742:11758	5201317	1	True				
ANR	5201479	ParameterType	const char *		5201317	0					
ANR	5201480	Identifier	fname		5201317	1					
ANR	5201481	Parameter	struct stat * pstat	324:54:11761:11778	5201317	2	True				
ANR	5201482	ParameterType	struct stat *		5201317	0					
ANR	5201483	Identifier	pstat		5201317	1					
ANR	5201484	CFGEntryNode	ENTRY		5201317		True				
ANR	5201485	CFGExitNode	EXIT		5201317		True				
ANR	5201486	Symbol	fname		5201317						
ANR	5201487	Symbol	gs_alloc_bytes		5201317						
ANR	5201488	Symbol	stat		5201317						
ANR	5201489	Symbol	code		5201317						
ANR	5201490	Symbol	NULL		5201317						
ANR	5201491	Symbol	pstat		5201317						
ANR	5201492	Symbol	* iodev		5201317						
ANR	5201493	Symbol	pstate -> root		5201317						
ANR	5201494	Symbol	pstate		5201317						
ANR	5201495	Symbol	map_file_name_get		5201317						
ANR	5201496	Symbol	gp_file_name_sizeof		5201317						
ANR	5201497	Symbol	gs_error_undefinedfilename		5201317						
ANR	5201498	Symbol	realname		5201317						
ANR	5201499	Symbol	gs_error_VMerror		5201317						
ANR	5201500	Symbol	gs_note_error		5201317						
ANR	5201501	Symbol	iodev		5201317						
ANR	5201502	Symbol	* pstate		5201317						
ANR	5201503	Symbol	iodev -> state		5201317						
ANR	5201504	Symbol	pstate -> memory		5201317						
ANR	5201505	Function	diskn_enumerate_files	355:0:12633:12905							
ANR	5201506	FunctionDef	"diskn_enumerate_files (gx_io_device * iodev , const char * pat , uint patlen , gs_memory_t * mem)"		5201505	0					
ANR	5201507	CompoundStatement		358:0:12758:12905	5201505	0					
ANR	5201508	IdentifierDeclStatement	diskn_state * pstate = ( diskn_state * ) iodev -> state ;	359:4:12764:12814	5201505	0	True				
ANR	5201509	IdentifierDecl	* pstate = ( diskn_state * ) iodev -> state		5201505	0					
ANR	5201510	IdentifierDeclType	diskn_state *		5201505	0					
ANR	5201511	Identifier	pstate		5201505	1					
ANR	5201512	AssignmentExpression	* pstate = ( diskn_state * ) iodev -> state		5201505	2		=			
ANR	5201513	Identifier	pstate		5201505	0					
ANR	5201514	CastExpression	( diskn_state * ) iodev -> state		5201505	1					
ANR	5201515	CastTarget	diskn_state *		5201505	0					
ANR	5201516	PtrMemberAccess	iodev -> state		5201505	1					
ANR	5201517	Identifier	iodev		5201505	0					
ANR	5201518	Identifier	state		5201505	1					
ANR	5201519	ReturnStatement	"return ( file_enum * ) map_file_enum_init ( mem , ( char * ) pstate -> root , pat , patlen ) ;"	361:4:12825:12903	5201505	1	True				
ANR	5201520	CastExpression	"( file_enum * ) map_file_enum_init ( mem , ( char * ) pstate -> root , pat , patlen )"		5201505	0					
ANR	5201521	CastTarget	file_enum *		5201505	0					
ANR	5201522	CallExpression	"map_file_enum_init ( mem , ( char * ) pstate -> root , pat , patlen )"		5201505	1					
ANR	5201523	Callee	map_file_enum_init		5201505	0					
ANR	5201524	Identifier	map_file_enum_init		5201505	0					
ANR	5201525	ArgumentList	mem		5201505	1					
ANR	5201526	Argument	mem		5201505	0					
ANR	5201527	Identifier	mem		5201505	0					
ANR	5201528	Argument	( char * ) pstate -> root		5201505	1					
ANR	5201529	CastExpression	( char * ) pstate -> root		5201505	0					
ANR	5201530	CastTarget	char *		5201505	0					
ANR	5201531	PtrMemberAccess	pstate -> root		5201505	1					
ANR	5201532	Identifier	pstate		5201505	0					
ANR	5201533	Identifier	root		5201505	1					
ANR	5201534	Argument	pat		5201505	2					
ANR	5201535	Identifier	pat		5201505	0					
ANR	5201536	Argument	patlen		5201505	3					
ANR	5201537	Identifier	patlen		5201505	0					
ANR	5201538	ReturnType	static file_enum *		5201505	1					
ANR	5201539	Identifier	diskn_enumerate_files		5201505	2					
ANR	5201540	ParameterList	"gx_io_device * iodev , const char * pat , uint patlen , gs_memory_t * mem"		5201505	3					
ANR	5201541	Parameter	gx_io_device * iodev	356:22:12674:12693	5201505	0	True				
ANR	5201542	ParameterType	gx_io_device *		5201505	0					
ANR	5201543	Identifier	iodev		5201505	1					
ANR	5201544	Parameter	const char * pat	356:44:12696:12710	5201505	1	True				
ANR	5201545	ParameterType	const char *		5201505	0					
ANR	5201546	Identifier	pat		5201505	1					
ANR	5201547	Parameter	uint patlen	356:61:12713:12723	5201505	2	True				
ANR	5201548	ParameterType	uint		5201505	0					
ANR	5201549	Identifier	patlen		5201505	1					
ANR	5201550	Parameter	gs_memory_t * mem	357:13:12739:12755	5201505	3	True				
ANR	5201551	ParameterType	gs_memory_t *		5201505	0					
ANR	5201552	Identifier	mem		5201505	1					
ANR	5201553	CFGEntryNode	ENTRY		5201505		True				
ANR	5201554	CFGExitNode	EXIT		5201505		True				
ANR	5201555	Symbol	pat		5201505						
ANR	5201556	Symbol	iodev		5201505						
ANR	5201557	Symbol	mem		5201505						
ANR	5201558	Symbol	* iodev		5201505						
ANR	5201559	Symbol	* pstate		5201505						
ANR	5201560	Symbol	pstate -> root		5201505						
ANR	5201561	Symbol	pstate		5201505						
ANR	5201562	Symbol	iodev -> state		5201505						
ANR	5201563	Symbol	map_file_enum_init		5201505						
ANR	5201564	Symbol	patlen		5201505						
ANR	5201565	Function	diskn_enumerate_close	364:0:12908:13000							
ANR	5201566	FunctionDef	diskn_enumerate_close (file_enum * pfen)		5201565	0					
ANR	5201567	CompoundStatement		366:0:12959:13000	5201565	0					
ANR	5201568	ExpressionStatement	map_file_enum_close ( ( void * ) pfen )	367:4:12965:12998	5201565	0	True				
ANR	5201569	CallExpression	map_file_enum_close ( ( void * ) pfen )		5201565	0					
ANR	5201570	Callee	map_file_enum_close		5201565	0					
ANR	5201571	Identifier	map_file_enum_close		5201565	0					
ANR	5201572	ArgumentList	( void * ) pfen		5201565	1					
ANR	5201573	Argument	( void * ) pfen		5201565	0					
ANR	5201574	CastExpression	( void * ) pfen		5201565	0					
ANR	5201575	CastTarget	void *		5201565	0					
ANR	5201576	Identifier	pfen		5201565	1					
ANR	5201577	ReturnType	static void		5201565	1					
ANR	5201578	Identifier	diskn_enumerate_close		5201565	2					
ANR	5201579	ParameterList	file_enum * pfen		5201565	3					
ANR	5201580	Parameter	file_enum * pfen	365:22:12942:12956	5201565	0	True				
ANR	5201581	ParameterType	file_enum *		5201565	0					
ANR	5201582	Identifier	pfen		5201565	1					
ANR	5201583	CFGEntryNode	ENTRY		5201565		True				
ANR	5201584	CFGExitNode	EXIT		5201565		True				
ANR	5201585	Symbol	pfen		5201565						
ANR	5201586	Function	diskn_enumerate_next	370:0:13003:13259							
ANR	5201587	FunctionDef	"diskn_enumerate_next (file_enum * pfen , char * ptr , uint maxlen)"		5201586	0					
ANR	5201588	CompoundStatement		372:0:13077:13259	5201586	0					
ANR	5201589	IfStatement	"if ( map_file_enum_next ( ( void * ) pfen , ptr ) )"		5201586	0					
ANR	5201590	Condition	"map_file_enum_next ( ( void * ) pfen , ptr )"	373:8:13087:13123	5201586	0	True				
ANR	5201591	CallExpression	"map_file_enum_next ( ( void * ) pfen , ptr )"		5201586	0					
ANR	5201592	Callee	map_file_enum_next		5201586	0					
ANR	5201593	Identifier	map_file_enum_next		5201586	0					
ANR	5201594	ArgumentList	( void * ) pfen		5201586	1					
ANR	5201595	Argument	( void * ) pfen		5201586	0					
ANR	5201596	CastExpression	( void * ) pfen		5201586	0					
ANR	5201597	CastTarget	void *		5201586	0					
ANR	5201598	Identifier	pfen		5201586	1					
ANR	5201599	Argument	ptr		5201586	1					
ANR	5201600	Identifier	ptr		5201586	0					
ANR	5201601	ReturnStatement	return strlen ( ptr ) ;	374:8:13134:13152	5201586	1	True				
ANR	5201602	CallExpression	strlen ( ptr )		5201586	0					
ANR	5201603	Callee	strlen		5201586	0					
ANR	5201604	Identifier	strlen		5201586	0					
ANR	5201605	ArgumentList	ptr		5201586	1					
ANR	5201606	Argument	ptr		5201586	0					
ANR	5201607	Identifier	ptr		5201586	0					
ANR	5201608	ExpressionStatement	diskn_enumerate_close ( pfen )	376:4:13208:13235	5201586	1	True				
ANR	5201609	CallExpression	diskn_enumerate_close ( pfen )		5201586	0					
ANR	5201610	Callee	diskn_enumerate_close		5201586	0					
ANR	5201611	Identifier	diskn_enumerate_close		5201586	0					
ANR	5201612	ArgumentList	pfen		5201586	1					
ANR	5201613	Argument	pfen		5201586	0					
ANR	5201614	Identifier	pfen		5201586	0					
ANR	5201615	ReturnStatement	return ~ ( uint ) 0 ;	377:4:13241:13257	5201586	2	True				
ANR	5201616	UnaryOperationExpression	~ ( uint ) 0		5201586	0					
ANR	5201617	UnaryOperator	~		5201586	0					
ANR	5201618	CastExpression	( uint ) 0		5201586	1					
ANR	5201619	CastTarget	uint		5201586	0					
ANR	5201620	PrimaryExpression	0		5201586	1					
ANR	5201621	ReturnType	static uint		5201586	1					
ANR	5201622	Identifier	diskn_enumerate_next		5201586	2					
ANR	5201623	ParameterList	"file_enum * pfen , char * ptr , uint maxlen"		5201586	3					
ANR	5201624	Parameter	file_enum * pfen	371:21:13036:13050	5201586	0	True				
ANR	5201625	ParameterType	file_enum *		5201586	0					
ANR	5201626	Identifier	pfen		5201586	1					
ANR	5201627	Parameter	char * ptr	371:38:13053:13061	5201586	1	True				
ANR	5201628	ParameterType	char *		5201586	0					
ANR	5201629	Identifier	ptr		5201586	1					
ANR	5201630	Parameter	uint maxlen	371:49:13064:13074	5201586	2	True				
ANR	5201631	ParameterType	uint		5201586	0					
ANR	5201632	Identifier	maxlen		5201586	1					
ANR	5201633	CFGEntryNode	ENTRY		5201586		True				
ANR	5201634	CFGExitNode	EXIT		5201586		True				
ANR	5201635	Symbol	strlen		5201586						
ANR	5201636	Symbol	map_file_enum_next		5201586						
ANR	5201637	Symbol	pfen		5201586						
ANR	5201638	Symbol	maxlen		5201586						
ANR	5201639	Symbol	ptr		5201586						
ANR	5201640	Function	diskn_get_params	380:0:13262:14919							
ANR	5201641	FunctionDef	"diskn_get_params (gx_io_device * iodev , gs_param_list * plist)"		5201640	0					
ANR	5201642	CompoundStatement		382:0:13335:14919	5201640	0					
ANR	5201643	IdentifierDeclStatement	int code ;	383:4:13341:13349	5201640	0	True				
ANR	5201644	IdentifierDecl	code		5201640	0					
ANR	5201645	IdentifierDeclType	int		5201640	0					
ANR	5201646	Identifier	code		5201640	1					
ANR	5201647	IdentifierDeclStatement	"int i0 = 0 , so = 1 ;"	384:4:13355:13373	5201640	1	True				
ANR	5201648	IdentifierDecl	i0 = 0		5201640	0					
ANR	5201649	IdentifierDeclType	int		5201640	0					
ANR	5201650	Identifier	i0		5201640	1					
ANR	5201651	AssignmentExpression	i0 = 0		5201640	2		=			
ANR	5201652	Identifier	i0		5201640	0					
ANR	5201653	PrimaryExpression	0		5201640	1					
ANR	5201654	IdentifierDecl	so = 1		5201640	1					
ANR	5201655	IdentifierDeclType	int		5201640	0					
ANR	5201656	Identifier	so		5201640	1					
ANR	5201657	AssignmentExpression	so = 1		5201640	2		=			
ANR	5201658	Identifier	so		5201640	0					
ANR	5201659	PrimaryExpression	1		5201640	1					
ANR	5201660	IdentifierDeclStatement	"bool btrue = true , bfalse = false ;"	385:4:13379:13412	5201640	2	True				
ANR	5201661	IdentifierDecl	btrue = true		5201640	0					
ANR	5201662	IdentifierDeclType	bool		5201640	0					
ANR	5201663	Identifier	btrue		5201640	1					
ANR	5201664	AssignmentExpression	btrue = true		5201640	2		=			
ANR	5201665	Identifier	true		5201640	0					
ANR	5201666	Identifier	true		5201640	1					
ANR	5201667	IdentifierDecl	bfalse = false		5201640	1					
ANR	5201668	IdentifierDeclType	bool		5201640	0					
ANR	5201669	Identifier	bfalse		5201640	1					
ANR	5201670	AssignmentExpression	bfalse = false		5201640	2		=			
ANR	5201671	Identifier	false		5201640	0					
ANR	5201672	Identifier	false		5201640	1					
ANR	5201673	IdentifierDeclStatement	diskn_state * pstate = ( diskn_state * ) iodev -> state ;	386:4:13418:13468	5201640	3	True				
ANR	5201674	IdentifierDecl	* pstate = ( diskn_state * ) iodev -> state		5201640	0					
ANR	5201675	IdentifierDeclType	diskn_state *		5201640	0					
ANR	5201676	Identifier	pstate		5201640	1					
ANR	5201677	AssignmentExpression	* pstate = ( diskn_state * ) iodev -> state		5201640	2		=			
ANR	5201678	Identifier	pstate		5201640	0					
ANR	5201679	CastExpression	( diskn_state * ) iodev -> state		5201640	1					
ANR	5201680	CastTarget	diskn_state *		5201640	0					
ANR	5201681	PtrMemberAccess	iodev -> state		5201640	1					
ANR	5201682	Identifier	iodev		5201640	0					
ANR	5201683	Identifier	state		5201640	1					
ANR	5201684	IdentifierDeclStatement	bool bsearch = pstate -> root != 0 ;	387:4:13474:13506	5201640	4	True				
ANR	5201685	IdentifierDecl	bsearch = pstate -> root != 0		5201640	0					
ANR	5201686	IdentifierDeclType	bool		5201640	0					
ANR	5201687	Identifier	bsearch		5201640	1					
ANR	5201688	AssignmentExpression	bsearch = pstate -> root != 0		5201640	2		=			
ANR	5201689	Identifier	bsearch		5201640	0					
ANR	5201690	EqualityExpression	pstate -> root != 0		5201640	1		!=			
ANR	5201691	PtrMemberAccess	pstate -> root		5201640	0					
ANR	5201692	Identifier	pstate		5201640	0					
ANR	5201693	Identifier	root		5201640	1					
ANR	5201694	PrimaryExpression	0		5201640	1					
ANR	5201695	IdentifierDeclStatement	int BlockSize ;	388:4:13512:13525	5201640	5	True				
ANR	5201696	IdentifierDecl	BlockSize		5201640	0					
ANR	5201697	IdentifierDeclType	int		5201640	0					
ANR	5201698	Identifier	BlockSize		5201640	1					
ANR	5201699	IdentifierDeclStatement	"long Free , LogicalSize ;"	389:4:13531:13553	5201640	6	True				
ANR	5201700	IdentifierDecl	Free		5201640	0					
ANR	5201701	IdentifierDeclType	long		5201640	0					
ANR	5201702	Identifier	Free		5201640	1					
ANR	5201703	IdentifierDecl	LogicalSize		5201640	1					
ANR	5201704	IdentifierDeclType	long		5201640	0					
ANR	5201705	Identifier	LogicalSize		5201640	1					
ANR	5201706	IdentifierDeclStatement	gs_param_string rootstring ;	390:4:13559:13585	5201640	7	True				
ANR	5201707	IdentifierDecl	rootstring		5201640	0					
ANR	5201708	IdentifierDeclType	gs_param_string		5201640	0					
ANR	5201709	Identifier	rootstring		5201640	1					
ANR	5201710	ExpressionStatement	BlockSize = 1024	396:4:13736:13752	5201640	8	True				
ANR	5201711	AssignmentExpression	BlockSize = 1024		5201640	0		=			
ANR	5201712	Identifier	BlockSize		5201640	0					
ANR	5201713	PrimaryExpression	1024		5201640	1					
ANR	5201714	ExpressionStatement	LogicalSize = bsearch ? 2000000000 / BlockSize : 0	397:4:13758:13808	5201640	9	True				
ANR	5201715	AssignmentExpression	LogicalSize = bsearch ? 2000000000 / BlockSize : 0		5201640	0		=			
ANR	5201716	Identifier	LogicalSize		5201640	0					
ANR	5201717	ConditionalExpression	bsearch ? 2000000000 / BlockSize : 0		5201640	1					
ANR	5201718	Condition	bsearch		5201640	0					
ANR	5201719	Identifier	bsearch		5201640	0					
ANR	5201720	MultiplicativeExpression	2000000000 / BlockSize		5201640	1		/			
ANR	5201721	PrimaryExpression	2000000000		5201640	0					
ANR	5201722	Identifier	BlockSize		5201640	1					
ANR	5201723	PrimaryExpression	0		5201640	2					
ANR	5201724	ExpressionStatement	Free = LogicalSize * 3 / 4	398:4:13831:13857	5201640	10	True				
ANR	5201725	AssignmentExpression	Free = LogicalSize * 3 / 4		5201640	0		=			
ANR	5201726	Identifier	Free		5201640	0					
ANR	5201727	MultiplicativeExpression	LogicalSize * 3 / 4		5201640	1		*			
ANR	5201728	Identifier	LogicalSize		5201640	0					
ANR	5201729	MultiplicativeExpression	3 / 4		5201640	1		/			
ANR	5201730	PrimaryExpression	3		5201640	0					
ANR	5201731	PrimaryExpression	4		5201640	1					
ANR	5201732	IfStatement	"if ( ( code = param_write_bool ( plist , ""HasNames"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0 || ( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & bsearch ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & bsearch ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0 )"		5201640	11					
ANR	5201733	Condition	"( code = param_write_bool ( plist , ""HasNames"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0 || ( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & bsearch ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & bsearch ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"	401:8:13898:14586	5201640	0	True				
ANR	5201734	OrExpression	"( code = param_write_bool ( plist , ""HasNames"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0 || ( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & bsearch ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & bsearch ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5201640	0		||			
ANR	5201735	RelationalExpression	"( code = param_write_bool ( plist , ""HasNames"" , & btrue ) ) < 0"		5201640	0		<			
ANR	5201736	AssignmentExpression	"code = param_write_bool ( plist , ""HasNames"" , & btrue )"		5201640	0		=			
ANR	5201737	Identifier	code		5201640	0					
ANR	5201738	CallExpression	"param_write_bool ( plist , ""HasNames"" , & btrue )"		5201640	1					
ANR	5201739	Callee	param_write_bool		5201640	0					
ANR	5201740	Identifier	param_write_bool		5201640	0					
ANR	5201741	ArgumentList	plist		5201640	1					
ANR	5201742	Argument	plist		5201640	0					
ANR	5201743	Identifier	plist		5201640	0					
ANR	5201744	Argument	"""HasNames"""		5201640	1					
ANR	5201745	PrimaryExpression	"""HasNames"""		5201640	0					
ANR	5201746	Argument	& btrue		5201640	2					
ANR	5201747	UnaryOperationExpression	& btrue		5201640	0					
ANR	5201748	UnaryOperator	&		5201640	0					
ANR	5201749	Identifier	btrue		5201640	1					
ANR	5201750	PrimaryExpression	0		5201640	1					
ANR	5201751	OrExpression	"( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0 || ( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & bsearch ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & bsearch ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5201640	1		||			
ANR	5201752	RelationalExpression	"( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0"		5201640	0		<			
ANR	5201753	AssignmentExpression	"code = param_write_int ( plist , ""BlockSize"" , & BlockSize )"		5201640	0		=			
ANR	5201754	Identifier	code		5201640	0					
ANR	5201755	CallExpression	"param_write_int ( plist , ""BlockSize"" , & BlockSize )"		5201640	1					
ANR	5201756	Callee	param_write_int		5201640	0					
ANR	5201757	Identifier	param_write_int		5201640	0					
ANR	5201758	ArgumentList	plist		5201640	1					
ANR	5201759	Argument	plist		5201640	0					
ANR	5201760	Identifier	plist		5201640	0					
ANR	5201761	Argument	"""BlockSize"""		5201640	1					
ANR	5201762	PrimaryExpression	"""BlockSize"""		5201640	0					
ANR	5201763	Argument	& BlockSize		5201640	2					
ANR	5201764	UnaryOperationExpression	& BlockSize		5201640	0					
ANR	5201765	UnaryOperator	&		5201640	0					
ANR	5201766	Identifier	BlockSize		5201640	1					
ANR	5201767	PrimaryExpression	0		5201640	1					
ANR	5201768	OrExpression	"( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & bsearch ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & bsearch ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5201640	1		||			
ANR	5201769	RelationalExpression	"( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0"		5201640	0		<			
ANR	5201770	AssignmentExpression	"code = param_write_long ( plist , ""Free"" , & Free )"		5201640	0		=			
ANR	5201771	Identifier	code		5201640	0					
ANR	5201772	CallExpression	"param_write_long ( plist , ""Free"" , & Free )"		5201640	1					
ANR	5201773	Callee	param_write_long		5201640	0					
ANR	5201774	Identifier	param_write_long		5201640	0					
ANR	5201775	ArgumentList	plist		5201640	1					
ANR	5201776	Argument	plist		5201640	0					
ANR	5201777	Identifier	plist		5201640	0					
ANR	5201778	Argument	"""Free"""		5201640	1					
ANR	5201779	PrimaryExpression	"""Free"""		5201640	0					
ANR	5201780	Argument	& Free		5201640	2					
ANR	5201781	UnaryOperationExpression	& Free		5201640	0					
ANR	5201782	UnaryOperator	&		5201640	0					
ANR	5201783	Identifier	Free		5201640	1					
ANR	5201784	PrimaryExpression	0		5201640	1					
ANR	5201785	OrExpression	"( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & bsearch ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & bsearch ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5201640	1		||			
ANR	5201786	RelationalExpression	"( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0"		5201640	0		<			
ANR	5201787	AssignmentExpression	"code = param_write_int ( plist , ""InitializeAction"" , & i0 )"		5201640	0		=			
ANR	5201788	Identifier	code		5201640	0					
ANR	5201789	CallExpression	"param_write_int ( plist , ""InitializeAction"" , & i0 )"		5201640	1					
ANR	5201790	Callee	param_write_int		5201640	0					
ANR	5201791	Identifier	param_write_int		5201640	0					
ANR	5201792	ArgumentList	plist		5201640	1					
ANR	5201793	Argument	plist		5201640	0					
ANR	5201794	Identifier	plist		5201640	0					
ANR	5201795	Argument	"""InitializeAction"""		5201640	1					
ANR	5201796	PrimaryExpression	"""InitializeAction"""		5201640	0					
ANR	5201797	Argument	& i0		5201640	2					
ANR	5201798	UnaryOperationExpression	& i0		5201640	0					
ANR	5201799	UnaryOperator	&		5201640	0					
ANR	5201800	Identifier	i0		5201640	1					
ANR	5201801	PrimaryExpression	0		5201640	1					
ANR	5201802	OrExpression	"( code = param_write_bool ( plist , ""Mounted"" , & bsearch ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & bsearch ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5201640	1		||			
ANR	5201803	RelationalExpression	"( code = param_write_bool ( plist , ""Mounted"" , & bsearch ) ) < 0"		5201640	0		<			
ANR	5201804	AssignmentExpression	"code = param_write_bool ( plist , ""Mounted"" , & bsearch )"		5201640	0		=			
ANR	5201805	Identifier	code		5201640	0					
ANR	5201806	CallExpression	"param_write_bool ( plist , ""Mounted"" , & bsearch )"		5201640	1					
ANR	5201807	Callee	param_write_bool		5201640	0					
ANR	5201808	Identifier	param_write_bool		5201640	0					
ANR	5201809	ArgumentList	plist		5201640	1					
ANR	5201810	Argument	plist		5201640	0					
ANR	5201811	Identifier	plist		5201640	0					
ANR	5201812	Argument	"""Mounted"""		5201640	1					
ANR	5201813	PrimaryExpression	"""Mounted"""		5201640	0					
ANR	5201814	Argument	& bsearch		5201640	2					
ANR	5201815	UnaryOperationExpression	& bsearch		5201640	0					
ANR	5201816	UnaryOperator	&		5201640	0					
ANR	5201817	Identifier	bsearch		5201640	1					
ANR	5201818	PrimaryExpression	0		5201640	1					
ANR	5201819	OrExpression	"( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & bsearch ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5201640	1		||			
ANR	5201820	RelationalExpression	"( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0"		5201640	0		<			
ANR	5201821	AssignmentExpression	"code = param_write_bool ( plist , ""Removable"" , & bfalse )"		5201640	0		=			
ANR	5201822	Identifier	code		5201640	0					
ANR	5201823	CallExpression	"param_write_bool ( plist , ""Removable"" , & bfalse )"		5201640	1					
ANR	5201824	Callee	param_write_bool		5201640	0					
ANR	5201825	Identifier	param_write_bool		5201640	0					
ANR	5201826	ArgumentList	plist		5201640	1					
ANR	5201827	Argument	plist		5201640	0					
ANR	5201828	Identifier	plist		5201640	0					
ANR	5201829	Argument	"""Removable"""		5201640	1					
ANR	5201830	PrimaryExpression	"""Removable"""		5201640	0					
ANR	5201831	Argument	& bfalse		5201640	2					
ANR	5201832	UnaryOperationExpression	& bfalse		5201640	0					
ANR	5201833	UnaryOperator	&		5201640	0					
ANR	5201834	Identifier	bfalse		5201640	1					
ANR	5201835	PrimaryExpression	0		5201640	1					
ANR	5201836	OrExpression	"( code = param_write_bool ( plist , ""Searchable"" , & bsearch ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5201640	1		||			
ANR	5201837	RelationalExpression	"( code = param_write_bool ( plist , ""Searchable"" , & bsearch ) ) < 0"		5201640	0		<			
ANR	5201838	AssignmentExpression	"code = param_write_bool ( plist , ""Searchable"" , & bsearch )"		5201640	0		=			
ANR	5201839	Identifier	code		5201640	0					
ANR	5201840	CallExpression	"param_write_bool ( plist , ""Searchable"" , & bsearch )"		5201640	1					
ANR	5201841	Callee	param_write_bool		5201640	0					
ANR	5201842	Identifier	param_write_bool		5201640	0					
ANR	5201843	ArgumentList	plist		5201640	1					
ANR	5201844	Argument	plist		5201640	0					
ANR	5201845	Identifier	plist		5201640	0					
ANR	5201846	Argument	"""Searchable"""		5201640	1					
ANR	5201847	PrimaryExpression	"""Searchable"""		5201640	0					
ANR	5201848	Argument	& bsearch		5201640	2					
ANR	5201849	UnaryOperationExpression	& bsearch		5201640	0					
ANR	5201850	UnaryOperator	&		5201640	0					
ANR	5201851	Identifier	bsearch		5201640	1					
ANR	5201852	PrimaryExpression	0		5201640	1					
ANR	5201853	OrExpression	"( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5201640	1		||			
ANR	5201854	RelationalExpression	"( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0"		5201640	0		<			
ANR	5201855	AssignmentExpression	"code = param_write_int ( plist , ""SearchOrder"" , & so )"		5201640	0		=			
ANR	5201856	Identifier	code		5201640	0					
ANR	5201857	CallExpression	"param_write_int ( plist , ""SearchOrder"" , & so )"		5201640	1					
ANR	5201858	Callee	param_write_int		5201640	0					
ANR	5201859	Identifier	param_write_int		5201640	0					
ANR	5201860	ArgumentList	plist		5201640	1					
ANR	5201861	Argument	plist		5201640	0					
ANR	5201862	Identifier	plist		5201640	0					
ANR	5201863	Argument	"""SearchOrder"""		5201640	1					
ANR	5201864	PrimaryExpression	"""SearchOrder"""		5201640	0					
ANR	5201865	Argument	& so		5201640	2					
ANR	5201866	UnaryOperationExpression	& so		5201640	0					
ANR	5201867	UnaryOperator	&		5201640	0					
ANR	5201868	Identifier	so		5201640	1					
ANR	5201869	PrimaryExpression	0		5201640	1					
ANR	5201870	OrExpression	"( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5201640	1		||			
ANR	5201871	RelationalExpression	"( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0"		5201640	0		<			
ANR	5201872	AssignmentExpression	"code = param_write_bool ( plist , ""Writeable"" , & bsearch )"		5201640	0		=			
ANR	5201873	Identifier	code		5201640	0					
ANR	5201874	CallExpression	"param_write_bool ( plist , ""Writeable"" , & bsearch )"		5201640	1					
ANR	5201875	Callee	param_write_bool		5201640	0					
ANR	5201876	Identifier	param_write_bool		5201640	0					
ANR	5201877	ArgumentList	plist		5201640	1					
ANR	5201878	Argument	plist		5201640	0					
ANR	5201879	Identifier	plist		5201640	0					
ANR	5201880	Argument	"""Writeable"""		5201640	1					
ANR	5201881	PrimaryExpression	"""Writeable"""		5201640	0					
ANR	5201882	Argument	& bsearch		5201640	2					
ANR	5201883	UnaryOperationExpression	& bsearch		5201640	0					
ANR	5201884	UnaryOperator	&		5201640	0					
ANR	5201885	Identifier	bsearch		5201640	1					
ANR	5201886	PrimaryExpression	0		5201640	1					
ANR	5201887	RelationalExpression	"( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5201640	1		<			
ANR	5201888	AssignmentExpression	"code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize )"		5201640	0		=			
ANR	5201889	Identifier	code		5201640	0					
ANR	5201890	CallExpression	"param_write_long ( plist , ""LogicalSize"" , & LogicalSize )"		5201640	1					
ANR	5201891	Callee	param_write_long		5201640	0					
ANR	5201892	Identifier	param_write_long		5201640	0					
ANR	5201893	ArgumentList	plist		5201640	1					
ANR	5201894	Argument	plist		5201640	0					
ANR	5201895	Identifier	plist		5201640	0					
ANR	5201896	Argument	"""LogicalSize"""		5201640	1					
ANR	5201897	PrimaryExpression	"""LogicalSize"""		5201640	0					
ANR	5201898	Argument	& LogicalSize		5201640	2					
ANR	5201899	UnaryOperationExpression	& LogicalSize		5201640	0					
ANR	5201900	UnaryOperator	&		5201640	0					
ANR	5201901	Identifier	LogicalSize		5201640	1					
ANR	5201902	PrimaryExpression	0		5201640	1					
ANR	5201903	ReturnStatement	return code ;	412:8:14606:14617	5201640	1	True				
ANR	5201904	Identifier	code		5201640	0					
ANR	5201905	IfStatement	if ( pstate -> root )		5201640	12					
ANR	5201906	Condition	pstate -> root	414:8:14628:14639	5201640	0	True				
ANR	5201907	PtrMemberAccess	pstate -> root		5201640	0					
ANR	5201908	Identifier	pstate		5201640	0					
ANR	5201909	Identifier	root		5201640	1					
ANR	5201910	CompoundStatement		33:22:1306:1306	5201640	1					
ANR	5201911	ExpressionStatement	rootstring . data = ( const byte * ) pstate -> root	415:8:14652:14696	5201640	0	True				
ANR	5201912	AssignmentExpression	rootstring . data = ( const byte * ) pstate -> root		5201640	0		=			
ANR	5201913	MemberAccess	rootstring . data		5201640	0					
ANR	5201914	Identifier	rootstring		5201640	0					
ANR	5201915	Identifier	data		5201640	1					
ANR	5201916	CastExpression	( const byte * ) pstate -> root		5201640	1					
ANR	5201917	CastTarget	const byte *		5201640	0					
ANR	5201918	PtrMemberAccess	pstate -> root		5201640	1					
ANR	5201919	Identifier	pstate		5201640	0					
ANR	5201920	Identifier	root		5201640	1					
ANR	5201921	ExpressionStatement	rootstring . size = strlen ( pstate -> root )	416:8:14706:14744	5201640	1	True				
ANR	5201922	AssignmentExpression	rootstring . size = strlen ( pstate -> root )		5201640	0		=			
ANR	5201923	MemberAccess	rootstring . size		5201640	0					
ANR	5201924	Identifier	rootstring		5201640	0					
ANR	5201925	Identifier	size		5201640	1					
ANR	5201926	CallExpression	strlen ( pstate -> root )		5201640	1					
ANR	5201927	Callee	strlen		5201640	0					
ANR	5201928	Identifier	strlen		5201640	0					
ANR	5201929	ArgumentList	pstate -> root		5201640	1					
ANR	5201930	Argument	pstate -> root		5201640	0					
ANR	5201931	PtrMemberAccess	pstate -> root		5201640	0					
ANR	5201932	Identifier	pstate		5201640	0					
ANR	5201933	Identifier	root		5201640	1					
ANR	5201934	ExpressionStatement	rootstring . persistent = false	417:8:14754:14783	5201640	2	True				
ANR	5201935	AssignmentExpression	rootstring . persistent = false		5201640	0		=			
ANR	5201936	MemberAccess	rootstring . persistent		5201640	0					
ANR	5201937	Identifier	rootstring		5201640	0					
ANR	5201938	Identifier	persistent		5201640	1					
ANR	5201939	Identifier	false		5201640	1					
ANR	5201940	ReturnStatement	"return param_write_string ( plist , ""Root"" , & rootstring ) ;"	418:8:14793:14846	5201640	3	True				
ANR	5201941	CallExpression	"param_write_string ( plist , ""Root"" , & rootstring )"		5201640	0					
ANR	5201942	Callee	param_write_string		5201640	0					
ANR	5201943	Identifier	param_write_string		5201640	0					
ANR	5201944	ArgumentList	plist		5201640	1					
ANR	5201945	Argument	plist		5201640	0					
ANR	5201946	Identifier	plist		5201640	0					
ANR	5201947	Argument	"""Root"""		5201640	1					
ANR	5201948	PrimaryExpression	"""Root"""		5201640	0					
ANR	5201949	Argument	& rootstring		5201640	2					
ANR	5201950	UnaryOperationExpression	& rootstring		5201640	0					
ANR	5201951	UnaryOperator	&		5201640	0					
ANR	5201952	Identifier	rootstring		5201640	1					
ANR	5201953	ElseStatement	else		5201640	0					
ANR	5201954	CompoundStatement		39:9:1527:1527	5201640	0					
ANR	5201955	ReturnStatement	"return param_write_null ( plist , ""Root"" ) ;"	421:8:14873:14911	5201640	0	True				
ANR	5201956	CallExpression	"param_write_null ( plist , ""Root"" )"		5201640	0					
ANR	5201957	Callee	param_write_null		5201640	0					
ANR	5201958	Identifier	param_write_null		5201640	0					
ANR	5201959	ArgumentList	plist		5201640	1					
ANR	5201960	Argument	plist		5201640	0					
ANR	5201961	Identifier	plist		5201640	0					
ANR	5201962	Argument	"""Root"""		5201640	1					
ANR	5201963	PrimaryExpression	"""Root"""		5201640	0					
ANR	5201964	ReturnType	static int		5201640	1					
ANR	5201965	Identifier	diskn_get_params		5201640	2					
ANR	5201966	ParameterList	"gx_io_device * iodev , gs_param_list * plist"		5201640	3					
ANR	5201967	Parameter	gx_io_device * iodev	381:17:13290:13309	5201640	0	True				
ANR	5201968	ParameterType	gx_io_device *		5201640	0					
ANR	5201969	Identifier	iodev		5201640	1					
ANR	5201970	Parameter	gs_param_list * plist	381:39:13312:13332	5201640	1	True				
ANR	5201971	ParameterType	gs_param_list *		5201640	0					
ANR	5201972	Identifier	plist		5201640	1					
ANR	5201973	CFGEntryNode	ENTRY		5201640		True				
ANR	5201974	CFGExitNode	EXIT		5201640		True				
ANR	5201975	Symbol	& bfalse		5201640						
ANR	5201976	Symbol	code		5201640						
ANR	5201977	Symbol	LogicalSize		5201640						
ANR	5201978	Symbol	pstate -> root		5201640						
ANR	5201979	Symbol	& BlockSize		5201640						
ANR	5201980	Symbol	bfalse		5201640						
ANR	5201981	Symbol	& so		5201640						
ANR	5201982	Symbol	pstate		5201640						
ANR	5201983	Symbol	& rootstring		5201640						
ANR	5201984	Symbol	param_write_bool		5201640						
ANR	5201985	Symbol	strlen		5201640						
ANR	5201986	Symbol	plist		5201640						
ANR	5201987	Symbol	iodev		5201640						
ANR	5201988	Symbol	& btrue		5201640						
ANR	5201989	Symbol	bsearch		5201640						
ANR	5201990	Symbol	rootstring		5201640						
ANR	5201991	Symbol	rootstring . size		5201640						
ANR	5201992	Symbol	so		5201640						
ANR	5201993	Symbol	param_write_string		5201640						
ANR	5201994	Symbol	param_write_int		5201640						
ANR	5201995	Symbol	rootstring . persistent		5201640						
ANR	5201996	Symbol	& LogicalSize		5201640						
ANR	5201997	Symbol	* iodev		5201640						
ANR	5201998	Symbol	i0		5201640						
ANR	5201999	Symbol	false		5201640						
ANR	5202000	Symbol	btrue		5201640						
ANR	5202001	Symbol	param_write_null		5201640						
ANR	5202002	Symbol	Free		5201640						
ANR	5202003	Symbol	& i0		5201640						
ANR	5202004	Symbol	* pstate		5201640						
ANR	5202005	Symbol	true		5201640						
ANR	5202006	Symbol	iodev -> state		5201640						
ANR	5202007	Symbol	rootstring . data		5201640						
ANR	5202008	Symbol	& Free		5201640						
ANR	5202009	Symbol	& bsearch		5201640						
ANR	5202010	Symbol	BlockSize		5201640						
ANR	5202011	Symbol	param_write_long		5201640						
ANR	5202012	Function	diskn_put_params	425:0:14922:16340							
ANR	5202013	FunctionDef	"diskn_put_params (gx_io_device * iodev , gs_param_list * plist)"		5202012	0					
ANR	5202014	CompoundStatement		427:0:14993:16340	5202012	0					
ANR	5202015	IdentifierDeclStatement	gs_param_string rootstr ;	428:4:14999:15022	5202012	0	True				
ANR	5202016	IdentifierDecl	rootstr		5202012	0					
ANR	5202017	IdentifierDeclType	gs_param_string		5202012	0					
ANR	5202018	Identifier	rootstr		5202012	1					
ANR	5202019	IdentifierDeclStatement	int code ;	429:4:15028:15036	5202012	1	True				
ANR	5202020	IdentifierDecl	code		5202012	0					
ANR	5202021	IdentifierDeclType	int		5202012	0					
ANR	5202022	Identifier	code		5202012	1					
ANR	5202023	IdentifierDeclStatement	diskn_state * pstate = ( diskn_state * ) iodev -> state ;	430:4:15042:15092	5202012	2	True				
ANR	5202024	IdentifierDecl	* pstate = ( diskn_state * ) iodev -> state		5202012	0					
ANR	5202025	IdentifierDeclType	diskn_state *		5202012	0					
ANR	5202026	Identifier	pstate		5202012	1					
ANR	5202027	AssignmentExpression	* pstate = ( diskn_state * ) iodev -> state		5202012	2		=			
ANR	5202028	Identifier	pstate		5202012	0					
ANR	5202029	CastExpression	( diskn_state * ) iodev -> state		5202012	1					
ANR	5202030	CastTarget	diskn_state *		5202012	0					
ANR	5202031	PtrMemberAccess	iodev -> state		5202012	1					
ANR	5202032	Identifier	iodev		5202012	0					
ANR	5202033	Identifier	state		5202012	1					
ANR	5202034	SwitchStatement	"switch ( code = param_read_string ( plist , ""Root"" , & rootstr ) )"		5202012	3					
ANR	5202035	Condition	"code = param_read_string ( plist , ""Root"" , & rootstr )"	432:12:15107:15155	5202012	0	True				
ANR	5202036	AssignmentExpression	"code = param_read_string ( plist , ""Root"" , & rootstr )"		5202012	0		=			
ANR	5202037	Identifier	code		5202012	0					
ANR	5202038	CallExpression	"param_read_string ( plist , ""Root"" , & rootstr )"		5202012	1					
ANR	5202039	Callee	param_read_string		5202012	0					
ANR	5202040	Identifier	param_read_string		5202012	0					
ANR	5202041	ArgumentList	plist		5202012	1					
ANR	5202042	Argument	plist		5202012	0					
ANR	5202043	Identifier	plist		5202012	0					
ANR	5202044	Argument	"""Root"""		5202012	1					
ANR	5202045	PrimaryExpression	"""Root"""		5202012	0					
ANR	5202046	Argument	& rootstr		5202012	2					
ANR	5202047	UnaryOperationExpression	& rootstr		5202012	0					
ANR	5202048	UnaryOperator	&		5202012	0					
ANR	5202049	Identifier	rootstr		5202012	1					
ANR	5202050	CompoundStatement		6:63:164:164	5202012	1					
ANR	5202051	Label	case 0 :	433:8:15168:15174	5202012	0	True				
ANR	5202052	BreakStatement	break ;	434:12:15188:15193	5202012	1	True				
ANR	5202053	Label	default :	435:8:15203:15210	5202012	2	True				
ANR	5202054	Identifier	default		5202012	0					
ANR	5202055	ExpressionStatement	"param_signal_error ( plist , ""Root"" , code )"	436:12:15224:15263	5202012	3	True				
ANR	5202056	CallExpression	"param_signal_error ( plist , ""Root"" , code )"		5202012	0					
ANR	5202057	Callee	param_signal_error		5202012	0					
ANR	5202058	Identifier	param_signal_error		5202012	0					
ANR	5202059	ArgumentList	plist		5202012	1					
ANR	5202060	Argument	plist		5202012	0					
ANR	5202061	Identifier	plist		5202012	0					
ANR	5202062	Argument	"""Root"""		5202012	1					
ANR	5202063	PrimaryExpression	"""Root"""		5202012	0					
ANR	5202064	Argument	code		5202012	2					
ANR	5202065	Identifier	code		5202012	0					
ANR	5202066	Label	case 1 :	437:8:15273:15279	5202012	4	True				
ANR	5202067	ExpressionStatement	rootstr . data = 0	438:12:15293:15309	5202012	5	True				
ANR	5202068	AssignmentExpression	rootstr . data = 0		5202012	0		=			
ANR	5202069	MemberAccess	rootstr . data		5202012	0					
ANR	5202070	Identifier	rootstr		5202012	0					
ANR	5202071	Identifier	data		5202012	1					
ANR	5202072	PrimaryExpression	0		5202012	1					
ANR	5202073	BreakStatement	break ;	439:12:15323:15328	5202012	6	True				
ANR	5202074	ExpressionStatement	"code = iodev_no_put_params ( iodev , plist )"	443:4:15387:15427	5202012	4	True				
ANR	5202075	AssignmentExpression	"code = iodev_no_put_params ( iodev , plist )"		5202012	0		=			
ANR	5202076	Identifier	code		5202012	0					
ANR	5202077	CallExpression	"iodev_no_put_params ( iodev , plist )"		5202012	1					
ANR	5202078	Callee	iodev_no_put_params		5202012	0					
ANR	5202079	Identifier	iodev_no_put_params		5202012	0					
ANR	5202080	ArgumentList	iodev		5202012	1					
ANR	5202081	Argument	iodev		5202012	0					
ANR	5202082	Identifier	iodev		5202012	0					
ANR	5202083	Argument	plist		5202012	1					
ANR	5202084	Identifier	plist		5202012	0					
ANR	5202085	IfStatement	if ( code < 0 )		5202012	5					
ANR	5202086	Condition	code < 0	444:8:15437:15444	5202012	0	True				
ANR	5202087	RelationalExpression	code < 0		5202012	0		<			
ANR	5202088	Identifier	code		5202012	0					
ANR	5202089	PrimaryExpression	0		5202012	1					
ANR	5202090	ReturnStatement	return code ;	445:8:15455:15466	5202012	1	True				
ANR	5202091	Identifier	code		5202012	0					
ANR	5202092	IfStatement	if ( rootstr . data )		5202012	6					
ANR	5202093	Condition	rootstr . data	449:8:15514:15525	5202012	0	True				
ANR	5202094	MemberAccess	rootstr . data		5202012	0					
ANR	5202095	Identifier	rootstr		5202012	0					
ANR	5202096	Identifier	data		5202012	1					
ANR	5202097	CompoundStatement		23:22:534:534	5202012	1					
ANR	5202098	IfStatement	if ( ! pstate -> root || pstate -> root_size <= rootstr . size )		5202012	0					
ANR	5202099	Condition	! pstate -> root || pstate -> root_size <= rootstr . size	451:12:15604:15653	5202012	0	True				
ANR	5202100	OrExpression	! pstate -> root || pstate -> root_size <= rootstr . size		5202012	0		||			
ANR	5202101	UnaryOperationExpression	! pstate -> root		5202012	0					
ANR	5202102	UnaryOperator	!		5202012	0					
ANR	5202103	PtrMemberAccess	pstate -> root		5202012	1					
ANR	5202104	Identifier	pstate		5202012	0					
ANR	5202105	Identifier	root		5202012	1					
ANR	5202106	RelationalExpression	pstate -> root_size <= rootstr . size		5202012	1		<=			
ANR	5202107	PtrMemberAccess	pstate -> root_size		5202012	0					
ANR	5202108	Identifier	pstate		5202012	0					
ANR	5202109	Identifier	root_size		5202012	1					
ANR	5202110	MemberAccess	rootstr . size		5202012	1					
ANR	5202111	Identifier	rootstr		5202012	0					
ANR	5202112	Identifier	size		5202012	1					
ANR	5202113	CompoundStatement		25:64:662:662	5202012	1					
ANR	5202114	IfStatement	if ( pstate -> root )		5202012	0					
ANR	5202115	Condition	pstate -> root	452:16:15674:15685	5202012	0	True				
ANR	5202116	PtrMemberAccess	pstate -> root		5202012	0					
ANR	5202117	Identifier	pstate		5202012	0					
ANR	5202118	Identifier	root		5202012	1					
ANR	5202119	ExpressionStatement	"gs_free_object ( pstate -> memory , pstate -> root , ""diskn(rootdir)"" )"	453:16:15742:15804	5202012	1	True				
ANR	5202120	CallExpression	"gs_free_object ( pstate -> memory , pstate -> root , ""diskn(rootdir)"" )"		5202012	0					
ANR	5202121	Callee	gs_free_object		5202012	0					
ANR	5202122	Identifier	gs_free_object		5202012	0					
ANR	5202123	ArgumentList	pstate -> memory		5202012	1					
ANR	5202124	Argument	pstate -> memory		5202012	0					
ANR	5202125	PtrMemberAccess	pstate -> memory		5202012	0					
ANR	5202126	Identifier	pstate		5202012	0					
ANR	5202127	Identifier	memory		5202012	1					
ANR	5202128	Argument	pstate -> root		5202012	1					
ANR	5202129	PtrMemberAccess	pstate -> root		5202012	0					
ANR	5202130	Identifier	pstate		5202012	0					
ANR	5202131	Identifier	root		5202012	1					
ANR	5202132	Argument	"""diskn(rootdir)"""		5202012	2					
ANR	5202133	PrimaryExpression	"""diskn(rootdir)"""		5202012	0					
ANR	5202134	ExpressionStatement	"pstate -> root = ( char * ) gs_alloc_byte_array ( pstate -> memory , gp_file_name_sizeof , sizeof ( char ) , ""diskn(rootdir)"" )"	454:12:15818:15953	5202012	1	True				
ANR	5202135	AssignmentExpression	"pstate -> root = ( char * ) gs_alloc_byte_array ( pstate -> memory , gp_file_name_sizeof , sizeof ( char ) , ""diskn(rootdir)"" )"		5202012	0		=			
ANR	5202136	PtrMemberAccess	pstate -> root		5202012	0					
ANR	5202137	Identifier	pstate		5202012	0					
ANR	5202138	Identifier	root		5202012	1					
ANR	5202139	CastExpression	"( char * ) gs_alloc_byte_array ( pstate -> memory , gp_file_name_sizeof , sizeof ( char ) , ""diskn(rootdir)"" )"		5202012	1					
ANR	5202140	CastTarget	char *		5202012	0					
ANR	5202141	CallExpression	"gs_alloc_byte_array ( pstate -> memory , gp_file_name_sizeof , sizeof ( char ) , ""diskn(rootdir)"" )"		5202012	1					
ANR	5202142	Callee	gs_alloc_byte_array		5202012	0					
ANR	5202143	Identifier	gs_alloc_byte_array		5202012	0					
ANR	5202144	ArgumentList	pstate -> memory		5202012	1					
ANR	5202145	Argument	pstate -> memory		5202012	0					
ANR	5202146	PtrMemberAccess	pstate -> memory		5202012	0					
ANR	5202147	Identifier	pstate		5202012	0					
ANR	5202148	Identifier	memory		5202012	1					
ANR	5202149	Argument	gp_file_name_sizeof		5202012	1					
ANR	5202150	Identifier	gp_file_name_sizeof		5202012	0					
ANR	5202151	Argument	sizeof ( char )		5202012	2					
ANR	5202152	SizeofExpression	sizeof ( char )		5202012	0					
ANR	5202153	Sizeof	sizeof		5202012	0					
ANR	5202154	SizeofOperand	char		5202012	1					
ANR	5202155	Argument	"""diskn(rootdir)"""		5202012	3					
ANR	5202156	PrimaryExpression	"""diskn(rootdir)"""		5202012	0					
ANR	5202157	IfStatement	if ( ! pstate -> root )		5202012	2					
ANR	5202158	Condition	! pstate -> root	456:16:15971:15983	5202012	0	True				
ANR	5202159	UnaryOperationExpression	! pstate -> root		5202012	0					
ANR	5202160	UnaryOperator	!		5202012	0					
ANR	5202161	PtrMemberAccess	pstate -> root		5202012	1					
ANR	5202162	Identifier	pstate		5202012	0					
ANR	5202163	Identifier	root		5202012	1					
ANR	5202164	ExpressionStatement	return_error ( gs_error_VMerror )	457:16:16002:16032	5202012	1	True				
ANR	5202165	CallExpression	return_error ( gs_error_VMerror )		5202012	0					
ANR	5202166	Callee	return_error		5202012	0					
ANR	5202167	Identifier	return_error		5202012	0					
ANR	5202168	ArgumentList	gs_error_VMerror		5202012	1					
ANR	5202169	Argument	gs_error_VMerror		5202012	0					
ANR	5202170	Identifier	gs_error_VMerror		5202012	0					
ANR	5202171	ExpressionStatement	pstate -> root_size = rootstr . size + 1	458:12:16046:16082	5202012	3	True				
ANR	5202172	AssignmentExpression	pstate -> root_size = rootstr . size + 1		5202012	0		=			
ANR	5202173	PtrMemberAccess	pstate -> root_size		5202012	0					
ANR	5202174	Identifier	pstate		5202012	0					
ANR	5202175	Identifier	root_size		5202012	1					
ANR	5202176	AdditiveExpression	rootstr . size + 1		5202012	1		+			
ANR	5202177	MemberAccess	rootstr . size		5202012	0					
ANR	5202178	Identifier	rootstr		5202012	0					
ANR	5202179	Identifier	size		5202012	1					
ANR	5202180	PrimaryExpression	1		5202012	1					
ANR	5202181	ExpressionStatement	iodev -> procs . enumerate_files = diskn_enumerate_files	460:12:16157:16209	5202012	4	True				
ANR	5202182	AssignmentExpression	iodev -> procs . enumerate_files = diskn_enumerate_files		5202012	0		=			
ANR	5202183	MemberAccess	iodev -> procs . enumerate_files		5202012	0					
ANR	5202184	PtrMemberAccess	iodev -> procs		5202012	0					
ANR	5202185	Identifier	iodev		5202012	0					
ANR	5202186	Identifier	procs		5202012	1					
ANR	5202187	Identifier	enumerate_files		5202012	1					
ANR	5202188	Identifier	diskn_enumerate_files		5202012	1					
ANR	5202189	ExpressionStatement	"memcpy ( pstate -> root , rootstr . data , rootstr . size )"	463:8:16230:16278	5202012	1	True				
ANR	5202190	CallExpression	"memcpy ( pstate -> root , rootstr . data , rootstr . size )"		5202012	0					
ANR	5202191	Callee	memcpy		5202012	0					
ANR	5202192	Identifier	memcpy		5202012	0					
ANR	5202193	ArgumentList	pstate -> root		5202012	1					
ANR	5202194	Argument	pstate -> root		5202012	0					
ANR	5202195	PtrMemberAccess	pstate -> root		5202012	0					
ANR	5202196	Identifier	pstate		5202012	0					
ANR	5202197	Identifier	root		5202012	1					
ANR	5202198	Argument	rootstr . data		5202012	1					
ANR	5202199	MemberAccess	rootstr . data		5202012	0					
ANR	5202200	Identifier	rootstr		5202012	0					
ANR	5202201	Identifier	data		5202012	1					
ANR	5202202	Argument	rootstr . size		5202012	2					
ANR	5202203	MemberAccess	rootstr . size		5202012	0					
ANR	5202204	Identifier	rootstr		5202012	0					
ANR	5202205	Identifier	size		5202012	1					
ANR	5202206	ExpressionStatement	pstate -> root [ rootstr . size ] = 0	464:8:16288:16318	5202012	2	True				
ANR	5202207	AssignmentExpression	pstate -> root [ rootstr . size ] = 0		5202012	0		=			
ANR	5202208	ArrayIndexing	pstate -> root [ rootstr . size ]		5202012	0					
ANR	5202209	PtrMemberAccess	pstate -> root		5202012	0					
ANR	5202210	Identifier	pstate		5202012	0					
ANR	5202211	Identifier	root		5202012	1					
ANR	5202212	MemberAccess	rootstr . size		5202012	1					
ANR	5202213	Identifier	rootstr		5202012	0					
ANR	5202214	Identifier	size		5202012	1					
ANR	5202215	PrimaryExpression	0		5202012	1					
ANR	5202216	ReturnStatement	return 0 ;	466:4:16330:16338	5202012	7	True				
ANR	5202217	PrimaryExpression	0		5202012	0					
ANR	5202218	ReturnType	static int		5202012	1					
ANR	5202219	Identifier	diskn_put_params		5202012	2					
ANR	5202220	ParameterList	"gx_io_device * iodev , gs_param_list * plist"		5202012	3					
ANR	5202221	Parameter	gx_io_device * iodev	426:17:14950:14968	5202012	0	True				
ANR	5202222	ParameterType	gx_io_device *		5202012	0					
ANR	5202223	Identifier	iodev		5202012	1					
ANR	5202224	Parameter	gs_param_list * plist	426:38:14971:14990	5202012	1	True				
ANR	5202225	ParameterType	gs_param_list *		5202012	0					
ANR	5202226	Identifier	plist		5202012	1					
ANR	5202227	CFGEntryNode	ENTRY		5202012		True				
ANR	5202228	CFGExitNode	EXIT		5202012		True				
ANR	5202229	Symbol	code		5202012						
ANR	5202230	Symbol	& rootstr		5202012						
ANR	5202231	Symbol	diskn_enumerate_files		5202012						
ANR	5202232	Symbol	pstate -> root		5202012						
ANR	5202233	Symbol	* rootstr . size		5202012						
ANR	5202234	Symbol	pstate		5202012						
ANR	5202235	Symbol	rootstr		5202012						
ANR	5202236	Symbol	plist		5202012						
ANR	5202237	Symbol	pstate -> root_size		5202012						
ANR	5202238	Symbol	iodev		5202012						
ANR	5202239	Symbol	pstate -> memory		5202012						
ANR	5202240	Symbol	iodev_no_put_params		5202012						
ANR	5202241	Symbol	iodev -> procs		5202012						
ANR	5202242	Symbol	rootstr . size		5202012						
ANR	5202243	Symbol	* iodev		5202012						
ANR	5202244	Symbol	gp_file_name_sizeof		5202012						
ANR	5202245	Symbol	param_read_string		5202012						
ANR	5202246	Symbol	gs_error_VMerror		5202012						
ANR	5202247	Symbol	* * pstate		5202012						
ANR	5202248	Symbol	rootstr . data		5202012						
ANR	5202249	Symbol	iodev -> procs . enumerate_files		5202012						
ANR	5202250	Symbol	* pstate		5202012						
ANR	5202251	Symbol	iodev -> state		5202012						
ANR	5202252	Symbol	* pstate -> root		5202012						
ANR	5202253	Symbol	* rootstr		5202012						
ANR	5202254	Symbol	gs_alloc_byte_array		5202012						
ANR	5202255	Function	MapFileOpen	477:0:16582:17154							
ANR	5202256	FunctionDef	"MapFileOpen (gs_memory_t * mem , const char * rootpath , const char * filename , const char * attributes)"		5202255	0					
ANR	5202257	CompoundStatement		479:0:16697:17154	5202255	0					
ANR	5202258	IdentifierDeclStatement	char * fullname = NULL ;	480:4:16703:16724	5202255	0	True				
ANR	5202259	IdentifierDecl	* fullname = NULL		5202255	0					
ANR	5202260	IdentifierDeclType	char *		5202255	0					
ANR	5202261	Identifier	fullname		5202255	1					
ANR	5202262	AssignmentExpression	* fullname = NULL		5202255	2		=			
ANR	5202263	Identifier	NULL		5202255	0					
ANR	5202264	Identifier	NULL		5202255	1					
ANR	5202265	IdentifierDeclStatement	FILE * f = NULL ;	481:4:16730:16744	5202255	1	True				
ANR	5202266	IdentifierDecl	* f = NULL		5202255	0					
ANR	5202267	IdentifierDeclType	FILE *		5202255	0					
ANR	5202268	Identifier	f		5202255	1					
ANR	5202269	AssignmentExpression	* f = NULL		5202255	2		=			
ANR	5202270	Identifier	NULL		5202255	0					
ANR	5202271	Identifier	NULL		5202255	1					
ANR	5202272	IdentifierDeclStatement	int totlen = strlen ( rootpath ) + strlen ( filename ) + 1 ;	482:4:16750:16802	5202255	2	True				
ANR	5202273	IdentifierDecl	totlen = strlen ( rootpath ) + strlen ( filename ) + 1		5202255	0					
ANR	5202274	IdentifierDeclType	int		5202255	0					
ANR	5202275	Identifier	totlen		5202255	1					
ANR	5202276	AssignmentExpression	totlen = strlen ( rootpath ) + strlen ( filename ) + 1		5202255	2		=			
ANR	5202277	Identifier	totlen		5202255	0					
ANR	5202278	AdditiveExpression	strlen ( rootpath ) + strlen ( filename ) + 1		5202255	1		+			
ANR	5202279	CallExpression	strlen ( rootpath )		5202255	0					
ANR	5202280	Callee	strlen		5202255	0					
ANR	5202281	Identifier	strlen		5202255	0					
ANR	5202282	ArgumentList	rootpath		5202255	1					
ANR	5202283	Argument	rootpath		5202255	0					
ANR	5202284	Identifier	rootpath		5202255	0					
ANR	5202285	AdditiveExpression	strlen ( filename ) + 1		5202255	1		+			
ANR	5202286	CallExpression	strlen ( filename )		5202255	0					
ANR	5202287	Callee	strlen		5202255	0					
ANR	5202288	Identifier	strlen		5202255	0					
ANR	5202289	ArgumentList	filename		5202255	1					
ANR	5202290	Argument	filename		5202255	0					
ANR	5202291	Identifier	filename		5202255	0					
ANR	5202292	PrimaryExpression	1		5202255	1					
ANR	5202293	IfStatement	if ( totlen >= gp_file_name_sizeof )		5202255	3					
ANR	5202294	Condition	totlen >= gp_file_name_sizeof	484:8:16813:16841	5202255	0	True				
ANR	5202295	RelationalExpression	totlen >= gp_file_name_sizeof		5202255	0		>=			
ANR	5202296	Identifier	totlen		5202255	0					
ANR	5202297	Identifier	gp_file_name_sizeof		5202255	1					
ANR	5202298	ReturnStatement	return NULL ;	485:8:16852:16863	5202255	1	True				
ANR	5202299	Identifier	NULL		5202255	0					
ANR	5202300	ExpressionStatement	"fullname = ( char * ) gs_alloc_bytes ( mem , totlen , ""MapFileOpen(fullname)"" )"	487:4:16870:16941	5202255	4	True				
ANR	5202301	AssignmentExpression	"fullname = ( char * ) gs_alloc_bytes ( mem , totlen , ""MapFileOpen(fullname)"" )"		5202255	0		=			
ANR	5202302	Identifier	fullname		5202255	0					
ANR	5202303	CastExpression	"( char * ) gs_alloc_bytes ( mem , totlen , ""MapFileOpen(fullname)"" )"		5202255	1					
ANR	5202304	CastTarget	char *		5202255	0					
ANR	5202305	CallExpression	"gs_alloc_bytes ( mem , totlen , ""MapFileOpen(fullname)"" )"		5202255	1					
ANR	5202306	Callee	gs_alloc_bytes		5202255	0					
ANR	5202307	Identifier	gs_alloc_bytes		5202255	0					
ANR	5202308	ArgumentList	mem		5202255	1					
ANR	5202309	Argument	mem		5202255	0					
ANR	5202310	Identifier	mem		5202255	0					
ANR	5202311	Argument	totlen		5202255	1					
ANR	5202312	Identifier	totlen		5202255	0					
ANR	5202313	Argument	"""MapFileOpen(fullname)"""		5202255	2					
ANR	5202314	PrimaryExpression	"""MapFileOpen(fullname)"""		5202255	0					
ANR	5202315	IfStatement	if ( fullname )		5202255	5					
ANR	5202316	Condition	fullname	488:8:16951:16958	5202255	0	True				
ANR	5202317	Identifier	fullname		5202255	0					
ANR	5202318	CompoundStatement		10:18:263:263	5202255	1					
ANR	5202319	ExpressionStatement	"gs_sprintf ( fullname , ""%s%s"" , rootpath , filename )"	490:8:16972:17020	5202255	0	True				
ANR	5202320	CallExpression	"gs_sprintf ( fullname , ""%s%s"" , rootpath , filename )"		5202255	0					
ANR	5202321	Callee	gs_sprintf		5202255	0					
ANR	5202322	Identifier	gs_sprintf		5202255	0					
ANR	5202323	ArgumentList	fullname		5202255	1					
ANR	5202324	Argument	fullname		5202255	0					
ANR	5202325	Identifier	fullname		5202255	0					
ANR	5202326	Argument	"""%s%s"""		5202255	1					
ANR	5202327	PrimaryExpression	"""%s%s"""		5202255	0					
ANR	5202328	Argument	rootpath		5202255	2					
ANR	5202329	Identifier	rootpath		5202255	0					
ANR	5202330	Argument	filename		5202255	3					
ANR	5202331	Identifier	filename		5202255	0					
ANR	5202332	ExpressionStatement	"f = gp_fopen ( fullname , attributes )"	491:8:17030:17064	5202255	1	True				
ANR	5202333	AssignmentExpression	"f = gp_fopen ( fullname , attributes )"		5202255	0		=			
ANR	5202334	Identifier	f		5202255	0					
ANR	5202335	CallExpression	"gp_fopen ( fullname , attributes )"		5202255	1					
ANR	5202336	Callee	gp_fopen		5202255	0					
ANR	5202337	Identifier	gp_fopen		5202255	0					
ANR	5202338	ArgumentList	fullname		5202255	1					
ANR	5202339	Argument	fullname		5202255	0					
ANR	5202340	Identifier	fullname		5202255	0					
ANR	5202341	Argument	attributes		5202255	1					
ANR	5202342	Identifier	attributes		5202255	0					
ANR	5202343	ExpressionStatement	"gs_free_object ( mem , fullname , ""MapFileOpen(fullname)"" )"	493:8:17075:17130	5202255	2	True				
ANR	5202344	CallExpression	"gs_free_object ( mem , fullname , ""MapFileOpen(fullname)"" )"		5202255	0					
ANR	5202345	Callee	gs_free_object		5202255	0					
ANR	5202346	Identifier	gs_free_object		5202255	0					
ANR	5202347	ArgumentList	mem		5202255	1					
ANR	5202348	Argument	mem		5202255	0					
ANR	5202349	Identifier	mem		5202255	0					
ANR	5202350	Argument	fullname		5202255	1					
ANR	5202351	Identifier	fullname		5202255	0					
ANR	5202352	Argument	"""MapFileOpen(fullname)"""		5202255	2					
ANR	5202353	PrimaryExpression	"""MapFileOpen(fullname)"""		5202255	0					
ANR	5202354	ReturnStatement	return ( f ) ;	496:4:17143:17152	5202255	6	True				
ANR	5202355	Identifier	f		5202255	0					
ANR	5202356	ReturnType	static FILE *		5202255	1					
ANR	5202357	Identifier	MapFileOpen		5202255	2					
ANR	5202358	ParameterList	"gs_memory_t * mem , const char * rootpath , const char * filename , const char * attributes"		5202255	3					
ANR	5202359	Parameter	gs_memory_t * mem	478:12:16608:16623	5202255	0	True				
ANR	5202360	ParameterType	gs_memory_t *		5202255	0					
ANR	5202361	Identifier	mem		5202255	1					
ANR	5202362	Parameter	const char * rootpath	478:30:16626:16646	5202255	1	True				
ANR	5202363	ParameterType	const char *		5202255	0					
ANR	5202364	Identifier	rootpath		5202255	1					
ANR	5202365	Parameter	const char * filename	478:53:16649:16669	5202255	2	True				
ANR	5202366	ParameterType	const char *		5202255	0					
ANR	5202367	Identifier	filename		5202255	1					
ANR	5202368	Parameter	const char * attributes	478:76:16672:16694	5202255	3	True				
ANR	5202369	ParameterType	const char *		5202255	0					
ANR	5202370	Identifier	attributes		5202255	1					
ANR	5202371	CFGEntryNode	ENTRY		5202255		True				
ANR	5202372	CFGExitNode	EXIT		5202255		True				
ANR	5202373	Symbol	strlen		5202255						
ANR	5202374	Symbol	gs_alloc_bytes		5202255						
ANR	5202375	Symbol	filename		5202255						
ANR	5202376	Symbol	NULL		5202255						
ANR	5202377	Symbol	mem		5202255						
ANR	5202378	Symbol	f		5202255						
ANR	5202379	Symbol	totlen		5202255						
ANR	5202380	Symbol	gp_file_name_sizeof		5202255						
ANR	5202381	Symbol	attributes		5202255						
ANR	5202382	Symbol	gp_fopen		5202255						
ANR	5202383	Symbol	fullname		5202255						
ANR	5202384	Symbol	rootpath		5202255						
ANR	5202385	Function	MapFileReadVersion	506:0:17337:17775							
ANR	5202386	FunctionDef	"MapFileReadVersion (FILE * mapfile , int * value)"		5202385	0					
ANR	5202387	CompoundStatement		508:0:17396:17775	5202385	0					
ANR	5202388	IdentifierDeclStatement	"int code = fscanf ( mapfile , ""FileVersion\\t%d\\t"" , value ) == 1 ? 1 : 0 ;"	509:4:17402:17469	5202385	0	True				
ANR	5202389	IdentifierDecl	"code = fscanf ( mapfile , ""FileVersion\\t%d\\t"" , value ) == 1 ? 1 : 0"		5202385	0					
ANR	5202390	IdentifierDeclType	int		5202385	0					
ANR	5202391	Identifier	code		5202385	1					
ANR	5202392	AssignmentExpression	"code = fscanf ( mapfile , ""FileVersion\\t%d\\t"" , value ) == 1 ? 1 : 0"		5202385	2		=			
ANR	5202393	Identifier	code		5202385	0					
ANR	5202394	ConditionalExpression	"fscanf ( mapfile , ""FileVersion\\t%d\\t"" , value ) == 1 ? 1 : 0"		5202385	1					
ANR	5202395	Condition	"fscanf ( mapfile , ""FileVersion\\t%d\\t"" , value ) == 1"		5202385	0					
ANR	5202396	EqualityExpression	"fscanf ( mapfile , ""FileVersion\\t%d\\t"" , value ) == 1"		5202385	0		==			
ANR	5202397	CallExpression	"fscanf ( mapfile , ""FileVersion\\t%d\\t"" , value )"		5202385	0					
ANR	5202398	Callee	fscanf		5202385	0					
ANR	5202399	Identifier	fscanf		5202385	0					
ANR	5202400	ArgumentList	mapfile		5202385	1					
ANR	5202401	Argument	mapfile		5202385	0					
ANR	5202402	Identifier	mapfile		5202385	0					
ANR	5202403	Argument	"""FileVersion\\t%d\\t"""		5202385	1					
ANR	5202404	PrimaryExpression	"""FileVersion\\t%d\\t"""		5202385	0					
ANR	5202405	Argument	value		5202385	2					
ANR	5202406	Identifier	value		5202385	0					
ANR	5202407	PrimaryExpression	1		5202385	1					
ANR	5202408	PrimaryExpression	1		5202385	1					
ANR	5202409	PrimaryExpression	0		5202385	2					
ANR	5202410	IdentifierDeclStatement	int c ;	510:4:17475:17480	5202385	1	True				
ANR	5202411	IdentifierDecl	c		5202385	0					
ANR	5202412	IdentifierDeclType	int		5202385	0					
ANR	5202413	Identifier	c		5202385	1					
ANR	5202414	DoStatement	do		5202385	2					
ANR	5202415	CompoundStatement		6:7:133:133	5202385	0					
ANR	5202416	ExpressionStatement	c = fgetc ( mapfile )	514:8:17540:17558	5202385	0	True				
ANR	5202417	AssignmentExpression	c = fgetc ( mapfile )		5202385	0		=			
ANR	5202418	Identifier	c		5202385	0					
ANR	5202419	CallExpression	fgetc ( mapfile )		5202385	1					
ANR	5202420	Callee	fgetc		5202385	0					
ANR	5202421	Identifier	fgetc		5202385	0					
ANR	5202422	ArgumentList	mapfile		5202385	1					
ANR	5202423	Argument	mapfile		5202385	0					
ANR	5202424	Identifier	mapfile		5202385	0					
ANR	5202425	Condition	c != EOF && c != '\\n' && c != '\\r'	515:13:17573:17606	5202385	1	True				
ANR	5202426	AndExpression	c != EOF && c != '\\n' && c != '\\r'		5202385	0		&&			
ANR	5202427	EqualityExpression	c != EOF		5202385	0		!=			
ANR	5202428	Identifier	c		5202385	0					
ANR	5202429	Identifier	EOF		5202385	1					
ANR	5202430	AndExpression	c != '\\n' && c != '\\r'		5202385	1		&&			
ANR	5202431	EqualityExpression	c != '\\n'		5202385	0		!=			
ANR	5202432	Identifier	c		5202385	0					
ANR	5202433	PrimaryExpression	'\\n'		5202385	1					
ANR	5202434	EqualityExpression	c != '\\r'		5202385	1		!=			
ANR	5202435	Identifier	c		5202385	0					
ANR	5202436	PrimaryExpression	'\\r'		5202385	1					
ANR	5202437	WhileStatement	while ( c != EOF && ( c == '\\n' || c == '\\r' ) )		5202385	3					
ANR	5202438	Condition	c != EOF && ( c == '\\n' || c == '\\r' )	518:11:17684:17719	5202385	0	True				
ANR	5202439	AndExpression	c != EOF && ( c == '\\n' || c == '\\r' )		5202385	0		&&			
ANR	5202440	EqualityExpression	c != EOF		5202385	0		!=			
ANR	5202441	Identifier	c		5202385	0					
ANR	5202442	Identifier	EOF		5202385	1					
ANR	5202443	OrExpression	c == '\\n' || c == '\\r'		5202385	1		||			
ANR	5202444	EqualityExpression	c == '\\n'		5202385	0		==			
ANR	5202445	Identifier	c		5202385	0					
ANR	5202446	PrimaryExpression	'\\n'		5202385	1					
ANR	5202447	EqualityExpression	c == '\\r'		5202385	1		==			
ANR	5202448	Identifier	c		5202385	0					
ANR	5202449	PrimaryExpression	'\\r'		5202385	1					
ANR	5202450	CompoundStatement		11:49:325:325	5202385	1					
ANR	5202451	ExpressionStatement	c = fgetc ( mapfile )	519:8:17732:17750	5202385	0	True				
ANR	5202452	AssignmentExpression	c = fgetc ( mapfile )		5202385	0		=			
ANR	5202453	Identifier	c		5202385	0					
ANR	5202454	CallExpression	fgetc ( mapfile )		5202385	1					
ANR	5202455	Callee	fgetc		5202385	0					
ANR	5202456	Identifier	fgetc		5202385	0					
ANR	5202457	ArgumentList	mapfile		5202385	1					
ANR	5202458	Argument	mapfile		5202385	0					
ANR	5202459	Identifier	mapfile		5202385	0					
ANR	5202460	ReturnStatement	return code ;	521:4:17762:17773	5202385	4	True				
ANR	5202461	Identifier	code		5202385	0					
ANR	5202462	ReturnType	static int		5202385	1					
ANR	5202463	Identifier	MapFileReadVersion		5202385	2					
ANR	5202464	ParameterList	"FILE * mapfile , int * value"		5202385	3					
ANR	5202465	Parameter	FILE * mapfile	507:19:17367:17380	5202385	0	True				
ANR	5202466	ParameterType	FILE *		5202385	0					
ANR	5202467	Identifier	mapfile		5202385	1					
ANR	5202468	Parameter	int * value	507:35:17383:17393	5202385	1	True				
ANR	5202469	ParameterType	int *		5202385	0					
ANR	5202470	Identifier	value		5202385	1					
ANR	5202471	CFGEntryNode	ENTRY		5202385		True				
ANR	5202472	CFGExitNode	EXIT		5202385		True				
ANR	5202473	Symbol	fscanf		5202385						
ANR	5202474	Symbol	code		5202385						
ANR	5202475	Symbol	c		5202385						
ANR	5202476	Symbol	value		5202385						
ANR	5202477	Symbol	EOF		5202385						
ANR	5202478	Symbol	fgetc		5202385						
ANR	5202479	Symbol	mapfile		5202385						
ANR	5202480	Function	MapFileWriteVersion	530:0:17908:18082							
ANR	5202481	FunctionDef	"MapFileWriteVersion (FILE * mapfile , int value)"		5202480	0					
ANR	5202482	CompoundStatement		532:0:17967:18082	5202480	0					
ANR	5202483	ExpressionStatement	"fprintf ( mapfile , ""FileVersion\\t%d\\tThis file is machine generated.  Do not edit.\\n"" , value )"	533:4:17973:18080	5202480	0	True				
ANR	5202484	CallExpression	"fprintf ( mapfile , ""FileVersion\\t%d\\tThis file is machine generated.  Do not edit.\\n"" , value )"		5202480	0					
ANR	5202485	Callee	fprintf		5202480	0					
ANR	5202486	Identifier	fprintf		5202480	0					
ANR	5202487	ArgumentList	mapfile		5202480	1					
ANR	5202488	Argument	mapfile		5202480	0					
ANR	5202489	Identifier	mapfile		5202480	0					
ANR	5202490	Argument	"""FileVersion\\t%d\\tThis file is machine generated.  Do not edit.\\n"""		5202480	1					
ANR	5202491	PrimaryExpression	"""FileVersion\\t%d\\tThis file is machine generated.  Do not edit.\\n"""		5202480	0					
ANR	5202492	Argument	value		5202480	2					
ANR	5202493	Identifier	value		5202480	0					
ANR	5202494	ReturnType	static void		5202480	1					
ANR	5202495	Identifier	MapFileWriteVersion		5202480	2					
ANR	5202496	ParameterList	"FILE * mapfile , int value"		5202480	3					
ANR	5202497	Parameter	FILE * mapfile	531:20:17940:17953	5202480	0	True				
ANR	5202498	ParameterType	FILE *		5202480	0					
ANR	5202499	Identifier	mapfile		5202480	1					
ANR	5202500	Parameter	int value	531:36:17956:17964	5202480	1	True				
ANR	5202501	ParameterType	int		5202480	0					
ANR	5202502	Identifier	value		5202480	1					
ANR	5202503	CFGEntryNode	ENTRY		5202480		True				
ANR	5202504	CFGExitNode	EXIT		5202480		True				
ANR	5202505	Symbol	value		5202480						
ANR	5202506	Symbol	mapfile		5202480						
ANR	5202507	Function	MapFileRead	546:0:18303:18897							
ANR	5202508	FunctionDef	"MapFileRead (FILE * mapfile , char * namebuf , int * value)"		5202507	0					
ANR	5202509	CompoundStatement		548:0:18371:18897	5202507	0					
ANR	5202510	IdentifierDeclStatement	int count = 0 ;	549:4:18377:18390	5202507	0	True				
ANR	5202511	IdentifierDecl	count = 0		5202507	0					
ANR	5202512	IdentifierDeclType	int		5202507	0					
ANR	5202513	Identifier	count		5202507	1					
ANR	5202514	AssignmentExpression	count = 0		5202507	2		=			
ANR	5202515	Identifier	count		5202507	0					
ANR	5202516	PrimaryExpression	0		5202507	1					
ANR	5202517	IdentifierDeclStatement	int c ;	550:4:18396:18401	5202507	1	True				
ANR	5202518	IdentifierDecl	c		5202507	0					
ANR	5202519	IdentifierDeclType	int		5202507	0					
ANR	5202520	Identifier	c		5202507	1					
ANR	5202521	IfStatement	"if ( fscanf ( mapfile , ""%d\\t"" , value ) != 1 )"		5202507	2					
ANR	5202522	Condition	"fscanf ( mapfile , ""%d\\t"" , value ) != 1"	553:8:18442:18476	5202507	0	True				
ANR	5202523	EqualityExpression	"fscanf ( mapfile , ""%d\\t"" , value ) != 1"		5202507	0		!=			
ANR	5202524	CallExpression	"fscanf ( mapfile , ""%d\\t"" , value )"		5202507	0					
ANR	5202525	Callee	fscanf		5202507	0					
ANR	5202526	Identifier	fscanf		5202507	0					
ANR	5202527	ArgumentList	mapfile		5202507	1					
ANR	5202528	Argument	mapfile		5202507	0					
ANR	5202529	Identifier	mapfile		5202507	0					
ANR	5202530	Argument	"""%d\\t"""		5202507	1					
ANR	5202531	PrimaryExpression	"""%d\\t"""		5202507	0					
ANR	5202532	Argument	value		5202507	2					
ANR	5202533	Identifier	value		5202507	0					
ANR	5202534	PrimaryExpression	1		5202507	1					
ANR	5202535	ReturnStatement	return 0 ;	554:8:18487:18495	5202507	1	True				
ANR	5202536	PrimaryExpression	0		5202507	0					
ANR	5202537	DoStatement	do		5202507	3					
ANR	5202538	CompoundStatement		10:7:161:161	5202507	0					
ANR	5202539	ExpressionStatement	namebuf [ count ++ ] = c = fgetc ( mapfile )	558:8:18543:18580	5202507	0	True				
ANR	5202540	AssignmentExpression	namebuf [ count ++ ] = c = fgetc ( mapfile )		5202507	0		=			
ANR	5202541	ArrayIndexing	namebuf [ count ++ ]		5202507	0					
ANR	5202542	Identifier	namebuf		5202507	0					
ANR	5202543	PostIncDecOperationExpression	count ++		5202507	1					
ANR	5202544	Identifier	count		5202507	0					
ANR	5202545	IncDec	++		5202507	1					
ANR	5202546	AssignmentExpression	c = fgetc ( mapfile )		5202507	1		=			
ANR	5202547	Identifier	c		5202507	0					
ANR	5202548	CallExpression	fgetc ( mapfile )		5202507	1					
ANR	5202549	Callee	fgetc		5202507	0					
ANR	5202550	Identifier	fgetc		5202507	0					
ANR	5202551	ArgumentList	mapfile		5202507	1					
ANR	5202552	Argument	mapfile		5202507	0					
ANR	5202553	Identifier	mapfile		5202507	0					
ANR	5202554	Condition	count < gp_file_name_sizeof && c != EOF && c != '\\n' && c != '\\r'	559:13:18595:18659	5202507	1	True				
ANR	5202555	AndExpression	count < gp_file_name_sizeof && c != EOF && c != '\\n' && c != '\\r'		5202507	0		&&			
ANR	5202556	RelationalExpression	count < gp_file_name_sizeof		5202507	0		<			
ANR	5202557	Identifier	count		5202507	0					
ANR	5202558	Identifier	gp_file_name_sizeof		5202507	1					
ANR	5202559	AndExpression	c != EOF && c != '\\n' && c != '\\r'		5202507	1		&&			
ANR	5202560	EqualityExpression	c != EOF		5202507	0		!=			
ANR	5202561	Identifier	c		5202507	0					
ANR	5202562	Identifier	EOF		5202507	1					
ANR	5202563	AndExpression	c != '\\n' && c != '\\r'		5202507	1		&&			
ANR	5202564	EqualityExpression	c != '\\n'		5202507	0		!=			
ANR	5202565	Identifier	c		5202507	0					
ANR	5202566	PrimaryExpression	'\\n'		5202507	1					
ANR	5202567	EqualityExpression	c != '\\r'		5202507	1		!=			
ANR	5202568	Identifier	c		5202507	0					
ANR	5202569	PrimaryExpression	'\\r'		5202507	1					
ANR	5202570	ExpressionStatement	namebuf [ -- count ] = 0	560:4:18667:18687	5202507	4	True				
ANR	5202571	AssignmentExpression	namebuf [ -- count ] = 0		5202507	0		=			
ANR	5202572	ArrayIndexing	namebuf [ -- count ]		5202507	0					
ANR	5202573	Identifier	namebuf		5202507	0					
ANR	5202574	UnaryExpression	-- count		5202507	1					
ANR	5202575	IncDec	--		5202507	0					
ANR	5202576	Identifier	count		5202507	1					
ANR	5202577	PrimaryExpression	0		5202507	1					
ANR	5202578	WhileStatement	while ( c != EOF && ( c == '\\n' || c == '\\r' ) )		5202507	5					
ANR	5202579	Condition	c != EOF && ( c == '\\n' || c == '\\r' )	563:11:18792:18827	5202507	0	True				
ANR	5202580	AndExpression	c != EOF && ( c == '\\n' || c == '\\r' )		5202507	0		&&			
ANR	5202581	EqualityExpression	c != EOF		5202507	0		!=			
ANR	5202582	Identifier	c		5202507	0					
ANR	5202583	Identifier	EOF		5202507	1					
ANR	5202584	OrExpression	c == '\\n' || c == '\\r'		5202507	1		||			
ANR	5202585	EqualityExpression	c == '\\n'		5202507	0		==			
ANR	5202586	Identifier	c		5202507	0					
ANR	5202587	PrimaryExpression	'\\n'		5202507	1					
ANR	5202588	EqualityExpression	c == '\\r'		5202507	1		==			
ANR	5202589	Identifier	c		5202507	0					
ANR	5202590	PrimaryExpression	'\\r'		5202507	1					
ANR	5202591	CompoundStatement		16:49:458:458	5202507	1					
ANR	5202592	ExpressionStatement	c = fgetc ( mapfile )	564:8:18840:18858	5202507	0	True				
ANR	5202593	AssignmentExpression	c = fgetc ( mapfile )		5202507	0		=			
ANR	5202594	Identifier	c		5202507	0					
ANR	5202595	CallExpression	fgetc ( mapfile )		5202507	1					
ANR	5202596	Callee	fgetc		5202507	0					
ANR	5202597	Identifier	fgetc		5202507	0					
ANR	5202598	ArgumentList	mapfile		5202507	1					
ANR	5202599	Argument	mapfile		5202507	0					
ANR	5202600	Identifier	mapfile		5202507	0					
ANR	5202601	ReturnStatement	return count != 0 ? 1 : 0 ;	567:4:18871:18895	5202507	6	True				
ANR	5202602	ConditionalExpression	count != 0 ? 1 : 0		5202507	0					
ANR	5202603	Condition	count != 0		5202507	0					
ANR	5202604	EqualityExpression	count != 0		5202507	0		!=			
ANR	5202605	Identifier	count		5202507	0					
ANR	5202606	PrimaryExpression	0		5202507	1					
ANR	5202607	PrimaryExpression	1		5202507	1					
ANR	5202608	PrimaryExpression	0		5202507	2					
ANR	5202609	ReturnType	static int		5202507	1					
ANR	5202610	Identifier	MapFileRead		5202507	2					
ANR	5202611	ParameterList	"FILE * mapfile , char * namebuf , int * value"		5202507	3					
ANR	5202612	Parameter	FILE * mapfile	547:12:18326:18339	5202507	0	True				
ANR	5202613	ParameterType	FILE *		5202507	0					
ANR	5202614	Identifier	mapfile		5202507	1					
ANR	5202615	Parameter	char * namebuf	547:28:18342:18355	5202507	1	True				
ANR	5202616	ParameterType	char *		5202507	0					
ANR	5202617	Identifier	namebuf		5202507	1					
ANR	5202618	Parameter	int * value	547:44:18358:18368	5202507	2	True				
ANR	5202619	ParameterType	int *		5202507	0					
ANR	5202620	Identifier	value		5202507	1					
ANR	5202621	CFGEntryNode	ENTRY		5202507		True				
ANR	5202622	CFGExitNode	EXIT		5202507		True				
ANR	5202623	Symbol	* namebuf		5202507						
ANR	5202624	Symbol	* count		5202507						
ANR	5202625	Symbol	fscanf		5202507						
ANR	5202626	Symbol	c		5202507						
ANR	5202627	Symbol	count		5202507						
ANR	5202628	Symbol	gp_file_name_sizeof		5202507						
ANR	5202629	Symbol	namebuf		5202507						
ANR	5202630	Symbol	value		5202507						
ANR	5202631	Symbol	EOF		5202507						
ANR	5202632	Symbol	fgetc		5202507						
ANR	5202633	Symbol	mapfile		5202507						
ANR	5202634	Function	MapFileWrite	577:0:19048:19175							
ANR	5202635	FunctionDef	"MapFileWrite (FILE * mapfile , const char * namebuf , int value)"		5202634	0					
ANR	5202636	CompoundStatement		579:0:19122:19175	5202634	0					
ANR	5202637	ExpressionStatement	"fprintf ( mapfile , "" %d\\t%s\\n"" , value , namebuf )"	580:4:19128:19173	5202634	0	True				
ANR	5202638	CallExpression	"fprintf ( mapfile , "" %d\\t%s\\n"" , value , namebuf )"		5202634	0					
ANR	5202639	Callee	fprintf		5202634	0					
ANR	5202640	Identifier	fprintf		5202634	0					
ANR	5202641	ArgumentList	mapfile		5202634	1					
ANR	5202642	Argument	mapfile		5202634	0					
ANR	5202643	Identifier	mapfile		5202634	0					
ANR	5202644	Argument	""" %d\\t%s\\n"""		5202634	1					
ANR	5202645	PrimaryExpression	""" %d\\t%s\\n"""		5202634	0					
ANR	5202646	Argument	value		5202634	2					
ANR	5202647	Identifier	value		5202634	0					
ANR	5202648	Argument	namebuf		5202634	3					
ANR	5202649	Identifier	namebuf		5202634	0					
ANR	5202650	ReturnType	static void		5202634	1					
ANR	5202651	Identifier	MapFileWrite		5202634	2					
ANR	5202652	ParameterList	"FILE * mapfile , const char * namebuf , int value"		5202634	3					
ANR	5202653	Parameter	FILE * mapfile	578:13:19073:19086	5202634	0	True				
ANR	5202654	ParameterType	FILE *		5202634	0					
ANR	5202655	Identifier	mapfile		5202634	1					
ANR	5202656	Parameter	const char * namebuf	578:29:19089:19108	5202634	1	True				
ANR	5202657	ParameterType	const char *		5202634	0					
ANR	5202658	Identifier	namebuf		5202634	1					
ANR	5202659	Parameter	int value	578:51:19111:19119	5202634	2	True				
ANR	5202660	ParameterType	int		5202634	0					
ANR	5202661	Identifier	value		5202634	1					
ANR	5202662	CFGEntryNode	ENTRY		5202634		True				
ANR	5202663	CFGExitNode	EXIT		5202634		True				
ANR	5202664	Symbol	namebuf		5202634						
ANR	5202665	Symbol	value		5202634						
ANR	5202666	Symbol	mapfile		5202634						
ANR	5202667	Function	MapFileUnlink	589:0:19290:19781							
ANR	5202668	FunctionDef	"MapFileUnlink (gs_memory_t * mem , const char * rootpath , const char * filename)"		5202667	0					
ANR	5202669	CompoundStatement		591:0:19380:19781	5202667	0					
ANR	5202670	IdentifierDeclStatement	char * fullname = NULL ;	592:4:19386:19407	5202667	0	True				
ANR	5202671	IdentifierDecl	* fullname = NULL		5202667	0					
ANR	5202672	IdentifierDeclType	char *		5202667	0					
ANR	5202673	Identifier	fullname		5202667	1					
ANR	5202674	AssignmentExpression	* fullname = NULL		5202667	2		=			
ANR	5202675	Identifier	NULL		5202667	0					
ANR	5202676	Identifier	NULL		5202667	1					
ANR	5202677	IdentifierDeclStatement	int totlen = strlen ( rootpath ) + strlen ( filename ) + 1 ;	593:4:19413:19465	5202667	1	True				
ANR	5202678	IdentifierDecl	totlen = strlen ( rootpath ) + strlen ( filename ) + 1		5202667	0					
ANR	5202679	IdentifierDeclType	int		5202667	0					
ANR	5202680	Identifier	totlen		5202667	1					
ANR	5202681	AssignmentExpression	totlen = strlen ( rootpath ) + strlen ( filename ) + 1		5202667	2		=			
ANR	5202682	Identifier	totlen		5202667	0					
ANR	5202683	AdditiveExpression	strlen ( rootpath ) + strlen ( filename ) + 1		5202667	1		+			
ANR	5202684	CallExpression	strlen ( rootpath )		5202667	0					
ANR	5202685	Callee	strlen		5202667	0					
ANR	5202686	Identifier	strlen		5202667	0					
ANR	5202687	ArgumentList	rootpath		5202667	1					
ANR	5202688	Argument	rootpath		5202667	0					
ANR	5202689	Identifier	rootpath		5202667	0					
ANR	5202690	AdditiveExpression	strlen ( filename ) + 1		5202667	1		+			
ANR	5202691	CallExpression	strlen ( filename )		5202667	0					
ANR	5202692	Callee	strlen		5202667	0					
ANR	5202693	Identifier	strlen		5202667	0					
ANR	5202694	ArgumentList	filename		5202667	1					
ANR	5202695	Argument	filename		5202667	0					
ANR	5202696	Identifier	filename		5202667	0					
ANR	5202697	PrimaryExpression	1		5202667	1					
ANR	5202698	IfStatement	if ( totlen >= gp_file_name_sizeof )		5202667	2					
ANR	5202699	Condition	totlen >= gp_file_name_sizeof	595:8:19476:19504	5202667	0	True				
ANR	5202700	RelationalExpression	totlen >= gp_file_name_sizeof		5202667	0		>=			
ANR	5202701	Identifier	totlen		5202667	0					
ANR	5202702	Identifier	gp_file_name_sizeof		5202667	1					
ANR	5202703	ReturnStatement	return ;	596:8:19515:19521	5202667	1	True				
ANR	5202704	ExpressionStatement	"fullname = ( char * ) gs_alloc_bytes ( mem , totlen , ""MapFileUnlink(fullname)"" )"	597:4:19527:19600	5202667	3	True				
ANR	5202705	AssignmentExpression	"fullname = ( char * ) gs_alloc_bytes ( mem , totlen , ""MapFileUnlink(fullname)"" )"		5202667	0		=			
ANR	5202706	Identifier	fullname		5202667	0					
ANR	5202707	CastExpression	"( char * ) gs_alloc_bytes ( mem , totlen , ""MapFileUnlink(fullname)"" )"		5202667	1					
ANR	5202708	CastTarget	char *		5202667	0					
ANR	5202709	CallExpression	"gs_alloc_bytes ( mem , totlen , ""MapFileUnlink(fullname)"" )"		5202667	1					
ANR	5202710	Callee	gs_alloc_bytes		5202667	0					
ANR	5202711	Identifier	gs_alloc_bytes		5202667	0					
ANR	5202712	ArgumentList	mem		5202667	1					
ANR	5202713	Argument	mem		5202667	0					
ANR	5202714	Identifier	mem		5202667	0					
ANR	5202715	Argument	totlen		5202667	1					
ANR	5202716	Identifier	totlen		5202667	0					
ANR	5202717	Argument	"""MapFileUnlink(fullname)"""		5202667	2					
ANR	5202718	PrimaryExpression	"""MapFileUnlink(fullname)"""		5202667	0					
ANR	5202719	IfStatement	if ( fullname )		5202667	4					
ANR	5202720	Condition	fullname	598:8:19610:19617	5202667	0	True				
ANR	5202721	Identifier	fullname		5202667	0					
ANR	5202722	CompoundStatement		8:18:239:239	5202667	1					
ANR	5202723	ExpressionStatement	"gs_sprintf ( fullname , ""%s%s"" , rootpath , filename )"	599:8:19630:19678	5202667	0	True				
ANR	5202724	CallExpression	"gs_sprintf ( fullname , ""%s%s"" , rootpath , filename )"		5202667	0					
ANR	5202725	Callee	gs_sprintf		5202667	0					
ANR	5202726	Identifier	gs_sprintf		5202667	0					
ANR	5202727	ArgumentList	fullname		5202667	1					
ANR	5202728	Argument	fullname		5202667	0					
ANR	5202729	Identifier	fullname		5202667	0					
ANR	5202730	Argument	"""%s%s"""		5202667	1					
ANR	5202731	PrimaryExpression	"""%s%s"""		5202667	0					
ANR	5202732	Argument	rootpath		5202667	2					
ANR	5202733	Identifier	rootpath		5202667	0					
ANR	5202734	Argument	filename		5202667	3					
ANR	5202735	Identifier	filename		5202667	0					
ANR	5202736	ExpressionStatement	unlink ( fullname )	601:8:19689:19705	5202667	1	True				
ANR	5202737	CallExpression	unlink ( fullname )		5202667	0					
ANR	5202738	Callee	unlink		5202667	0					
ANR	5202739	Identifier	unlink		5202667	0					
ANR	5202740	ArgumentList	fullname		5202667	1					
ANR	5202741	Argument	fullname		5202667	0					
ANR	5202742	Identifier	fullname		5202667	0					
ANR	5202743	ExpressionStatement	"gs_free_object ( mem , fullname , ""MapFileUnlink(fullname)"" )"	603:8:19716:19773	5202667	2	True				
ANR	5202744	CallExpression	"gs_free_object ( mem , fullname , ""MapFileUnlink(fullname)"" )"		5202667	0					
ANR	5202745	Callee	gs_free_object		5202667	0					
ANR	5202746	Identifier	gs_free_object		5202667	0					
ANR	5202747	ArgumentList	mem		5202667	1					
ANR	5202748	Argument	mem		5202667	0					
ANR	5202749	Identifier	mem		5202667	0					
ANR	5202750	Argument	fullname		5202667	1					
ANR	5202751	Identifier	fullname		5202667	0					
ANR	5202752	Argument	"""MapFileUnlink(fullname)"""		5202667	2					
ANR	5202753	PrimaryExpression	"""MapFileUnlink(fullname)"""		5202667	0					
ANR	5202754	ReturnType	static void		5202667	1					
ANR	5202755	Identifier	MapFileUnlink		5202667	2					
ANR	5202756	ParameterList	"gs_memory_t * mem , const char * rootpath , const char * filename"		5202667	3					
ANR	5202757	Parameter	gs_memory_t * mem	590:14:19316:19331	5202667	0	True				
ANR	5202758	ParameterType	gs_memory_t *		5202667	0					
ANR	5202759	Identifier	mem		5202667	1					
ANR	5202760	Parameter	const char * rootpath	590:32:19334:19354	5202667	1	True				
ANR	5202761	ParameterType	const char *		5202667	0					
ANR	5202762	Identifier	rootpath		5202667	1					
ANR	5202763	Parameter	const char * filename	590:55:19357:19377	5202667	2	True				
ANR	5202764	ParameterType	const char *		5202667	0					
ANR	5202765	Identifier	filename		5202667	1					
ANR	5202766	CFGEntryNode	ENTRY		5202667		True				
ANR	5202767	CFGExitNode	EXIT		5202667		True				
ANR	5202768	Symbol	strlen		5202667						
ANR	5202769	Symbol	gs_alloc_bytes		5202667						
ANR	5202770	Symbol	filename		5202667						
ANR	5202771	Symbol	NULL		5202667						
ANR	5202772	Symbol	mem		5202667						
ANR	5202773	Symbol	totlen		5202667						
ANR	5202774	Symbol	gp_file_name_sizeof		5202667						
ANR	5202775	Symbol	fullname		5202667						
ANR	5202776	Symbol	rootpath		5202667						
ANR	5202777	Function	MapFileRename	614:0:19963:20911							
ANR	5202778	FunctionDef	"MapFileRename (gs_memory_t * mem , const char * rootpath , const char * newfilename , const char * oldfilename)"		5202777	0					
ANR	5202779	CompoundStatement		616:0:20082:20911	5202777	0					
ANR	5202780	IdentifierDeclStatement	char * oldfullname = NULL ;	617:4:20088:20112	5202777	0	True				
ANR	5202781	IdentifierDecl	* oldfullname = NULL		5202777	0					
ANR	5202782	IdentifierDeclType	char *		5202777	0					
ANR	5202783	Identifier	oldfullname		5202777	1					
ANR	5202784	AssignmentExpression	* oldfullname = NULL		5202777	2		=			
ANR	5202785	Identifier	NULL		5202777	0					
ANR	5202786	Identifier	NULL		5202777	1					
ANR	5202787	IdentifierDeclStatement	char * newfullname = NULL ;	618:4:20118:20142	5202777	1	True				
ANR	5202788	IdentifierDecl	* newfullname = NULL		5202777	0					
ANR	5202789	IdentifierDeclType	char *		5202777	0					
ANR	5202790	Identifier	newfullname		5202777	1					
ANR	5202791	AssignmentExpression	* newfullname = NULL		5202777	2		=			
ANR	5202792	Identifier	NULL		5202777	0					
ANR	5202793	Identifier	NULL		5202777	1					
ANR	5202794	IdentifierDeclStatement	int ototlen = strlen ( rootpath ) + strlen ( oldfilename ) + 1 ;	619:4:20148:20204	5202777	2	True				
ANR	5202795	IdentifierDecl	ototlen = strlen ( rootpath ) + strlen ( oldfilename ) + 1		5202777	0					
ANR	5202796	IdentifierDeclType	int		5202777	0					
ANR	5202797	Identifier	ototlen		5202777	1					
ANR	5202798	AssignmentExpression	ototlen = strlen ( rootpath ) + strlen ( oldfilename ) + 1		5202777	2		=			
ANR	5202799	Identifier	ototlen		5202777	0					
ANR	5202800	AdditiveExpression	strlen ( rootpath ) + strlen ( oldfilename ) + 1		5202777	1		+			
ANR	5202801	CallExpression	strlen ( rootpath )		5202777	0					
ANR	5202802	Callee	strlen		5202777	0					
ANR	5202803	Identifier	strlen		5202777	0					
ANR	5202804	ArgumentList	rootpath		5202777	1					
ANR	5202805	Argument	rootpath		5202777	0					
ANR	5202806	Identifier	rootpath		5202777	0					
ANR	5202807	AdditiveExpression	strlen ( oldfilename ) + 1		5202777	1		+			
ANR	5202808	CallExpression	strlen ( oldfilename )		5202777	0					
ANR	5202809	Callee	strlen		5202777	0					
ANR	5202810	Identifier	strlen		5202777	0					
ANR	5202811	ArgumentList	oldfilename		5202777	1					
ANR	5202812	Argument	oldfilename		5202777	0					
ANR	5202813	Identifier	oldfilename		5202777	0					
ANR	5202814	PrimaryExpression	1		5202777	1					
ANR	5202815	IdentifierDeclStatement	int ntotlen = strlen ( rootpath ) + strlen ( newfilename ) + 1 ;	620:4:20210:20266	5202777	3	True				
ANR	5202816	IdentifierDecl	ntotlen = strlen ( rootpath ) + strlen ( newfilename ) + 1		5202777	0					
ANR	5202817	IdentifierDeclType	int		5202777	0					
ANR	5202818	Identifier	ntotlen		5202777	1					
ANR	5202819	AssignmentExpression	ntotlen = strlen ( rootpath ) + strlen ( newfilename ) + 1		5202777	2		=			
ANR	5202820	Identifier	ntotlen		5202777	0					
ANR	5202821	AdditiveExpression	strlen ( rootpath ) + strlen ( newfilename ) + 1		5202777	1		+			
ANR	5202822	CallExpression	strlen ( rootpath )		5202777	0					
ANR	5202823	Callee	strlen		5202777	0					
ANR	5202824	Identifier	strlen		5202777	0					
ANR	5202825	ArgumentList	rootpath		5202777	1					
ANR	5202826	Argument	rootpath		5202777	0					
ANR	5202827	Identifier	rootpath		5202777	0					
ANR	5202828	AdditiveExpression	strlen ( newfilename ) + 1		5202777	1		+			
ANR	5202829	CallExpression	strlen ( newfilename )		5202777	0					
ANR	5202830	Callee	strlen		5202777	0					
ANR	5202831	Identifier	strlen		5202777	0					
ANR	5202832	ArgumentList	newfilename		5202777	1					
ANR	5202833	Argument	newfilename		5202777	0					
ANR	5202834	Identifier	newfilename		5202777	0					
ANR	5202835	PrimaryExpression	1		5202777	1					
ANR	5202836	IfStatement	if ( ototlen >= gp_file_name_sizeof )		5202777	4					
ANR	5202837	Condition	ototlen >= gp_file_name_sizeof	622:8:20277:20306	5202777	0	True				
ANR	5202838	RelationalExpression	ototlen >= gp_file_name_sizeof		5202777	0		>=			
ANR	5202839	Identifier	ototlen		5202777	0					
ANR	5202840	Identifier	gp_file_name_sizeof		5202777	1					
ANR	5202841	ReturnStatement	return ;	623:8:20317:20323	5202777	1	True				
ANR	5202842	IfStatement	if ( ntotlen >= gp_file_name_sizeof )		5202777	5					
ANR	5202843	Condition	ntotlen >= gp_file_name_sizeof	624:8:20333:20362	5202777	0	True				
ANR	5202844	RelationalExpression	ntotlen >= gp_file_name_sizeof		5202777	0		>=			
ANR	5202845	Identifier	ntotlen		5202777	0					
ANR	5202846	Identifier	gp_file_name_sizeof		5202777	1					
ANR	5202847	ReturnStatement	return ;	625:8:20373:20379	5202777	1	True				
ANR	5202848	ExpressionStatement	"oldfullname = ( char * ) gs_alloc_bytes ( mem , ototlen , ""MapFileRename(oldfullname)"" )"	626:4:20385:20465	5202777	6	True				
ANR	5202849	AssignmentExpression	"oldfullname = ( char * ) gs_alloc_bytes ( mem , ototlen , ""MapFileRename(oldfullname)"" )"		5202777	0		=			
ANR	5202850	Identifier	oldfullname		5202777	0					
ANR	5202851	CastExpression	"( char * ) gs_alloc_bytes ( mem , ototlen , ""MapFileRename(oldfullname)"" )"		5202777	1					
ANR	5202852	CastTarget	char *		5202777	0					
ANR	5202853	CallExpression	"gs_alloc_bytes ( mem , ototlen , ""MapFileRename(oldfullname)"" )"		5202777	1					
ANR	5202854	Callee	gs_alloc_bytes		5202777	0					
ANR	5202855	Identifier	gs_alloc_bytes		5202777	0					
ANR	5202856	ArgumentList	mem		5202777	1					
ANR	5202857	Argument	mem		5202777	0					
ANR	5202858	Identifier	mem		5202777	0					
ANR	5202859	Argument	ototlen		5202777	1					
ANR	5202860	Identifier	ototlen		5202777	0					
ANR	5202861	Argument	"""MapFileRename(oldfullname)"""		5202777	2					
ANR	5202862	PrimaryExpression	"""MapFileRename(oldfullname)"""		5202777	0					
ANR	5202863	ExpressionStatement	"newfullname = ( char * ) gs_alloc_bytes ( mem , ntotlen , ""MapFileRename(newfullname)"" )"	627:4:20471:20551	5202777	7	True				
ANR	5202864	AssignmentExpression	"newfullname = ( char * ) gs_alloc_bytes ( mem , ntotlen , ""MapFileRename(newfullname)"" )"		5202777	0		=			
ANR	5202865	Identifier	newfullname		5202777	0					
ANR	5202866	CastExpression	"( char * ) gs_alloc_bytes ( mem , ntotlen , ""MapFileRename(newfullname)"" )"		5202777	1					
ANR	5202867	CastTarget	char *		5202777	0					
ANR	5202868	CallExpression	"gs_alloc_bytes ( mem , ntotlen , ""MapFileRename(newfullname)"" )"		5202777	1					
ANR	5202869	Callee	gs_alloc_bytes		5202777	0					
ANR	5202870	Identifier	gs_alloc_bytes		5202777	0					
ANR	5202871	ArgumentList	mem		5202777	1					
ANR	5202872	Argument	mem		5202777	0					
ANR	5202873	Identifier	mem		5202777	0					
ANR	5202874	Argument	ntotlen		5202777	1					
ANR	5202875	Identifier	ntotlen		5202777	0					
ANR	5202876	Argument	"""MapFileRename(newfullname)"""		5202777	2					
ANR	5202877	PrimaryExpression	"""MapFileRename(newfullname)"""		5202777	0					
ANR	5202878	IfStatement	if ( oldfullname && newfullname )		5202777	8					
ANR	5202879	Condition	oldfullname && newfullname	629:8:20562:20587	5202777	0	True				
ANR	5202880	AndExpression	oldfullname && newfullname		5202777	0		&&			
ANR	5202881	Identifier	oldfullname		5202777	0					
ANR	5202882	Identifier	newfullname		5202777	1					
ANR	5202883	CompoundStatement		14:36:507:507	5202777	1					
ANR	5202884	ExpressionStatement	"gs_sprintf ( oldfullname , ""%s%s"" , rootpath , oldfilename )"	630:8:20604:20658	5202777	0	True				
ANR	5202885	CallExpression	"gs_sprintf ( oldfullname , ""%s%s"" , rootpath , oldfilename )"		5202777	0					
ANR	5202886	Callee	gs_sprintf		5202777	0					
ANR	5202887	Identifier	gs_sprintf		5202777	0					
ANR	5202888	ArgumentList	oldfullname		5202777	1					
ANR	5202889	Argument	oldfullname		5202777	0					
ANR	5202890	Identifier	oldfullname		5202777	0					
ANR	5202891	Argument	"""%s%s"""		5202777	1					
ANR	5202892	PrimaryExpression	"""%s%s"""		5202777	0					
ANR	5202893	Argument	rootpath		5202777	2					
ANR	5202894	Identifier	rootpath		5202777	0					
ANR	5202895	Argument	oldfilename		5202777	3					
ANR	5202896	Identifier	oldfilename		5202777	0					
ANR	5202897	ExpressionStatement	"gs_sprintf ( newfullname , ""%s%s"" , rootpath , newfilename )"	631:8:20668:20722	5202777	1	True				
ANR	5202898	CallExpression	"gs_sprintf ( newfullname , ""%s%s"" , rootpath , newfilename )"		5202777	0					
ANR	5202899	Callee	gs_sprintf		5202777	0					
ANR	5202900	Identifier	gs_sprintf		5202777	0					
ANR	5202901	ArgumentList	newfullname		5202777	1					
ANR	5202902	Argument	newfullname		5202777	0					
ANR	5202903	Identifier	newfullname		5202777	0					
ANR	5202904	Argument	"""%s%s"""		5202777	1					
ANR	5202905	PrimaryExpression	"""%s%s"""		5202777	0					
ANR	5202906	Argument	rootpath		5202777	2					
ANR	5202907	Identifier	rootpath		5202777	0					
ANR	5202908	Argument	newfilename		5202777	3					
ANR	5202909	Identifier	newfilename		5202777	0					
ANR	5202910	ExpressionStatement	"rename ( oldfullname , newfullname )"	632:8:20732:20764	5202777	2	True				
ANR	5202911	CallExpression	"rename ( oldfullname , newfullname )"		5202777	0					
ANR	5202912	Callee	rename		5202777	0					
ANR	5202913	Identifier	rename		5202777	0					
ANR	5202914	ArgumentList	oldfullname		5202777	1					
ANR	5202915	Argument	oldfullname		5202777	0					
ANR	5202916	Identifier	oldfullname		5202777	0					
ANR	5202917	Argument	newfullname		5202777	1					
ANR	5202918	Identifier	newfullname		5202777	0					
ANR	5202919	ExpressionStatement	"gs_free_object ( mem , oldfullname , ""MapFileRename(oldfullname)"" )"	635:4:20777:20840	5202777	9	True				
ANR	5202920	CallExpression	"gs_free_object ( mem , oldfullname , ""MapFileRename(oldfullname)"" )"		5202777	0					
ANR	5202921	Callee	gs_free_object		5202777	0					
ANR	5202922	Identifier	gs_free_object		5202777	0					
ANR	5202923	ArgumentList	mem		5202777	1					
ANR	5202924	Argument	mem		5202777	0					
ANR	5202925	Identifier	mem		5202777	0					
ANR	5202926	Argument	oldfullname		5202777	1					
ANR	5202927	Identifier	oldfullname		5202777	0					
ANR	5202928	Argument	"""MapFileRename(oldfullname)"""		5202777	2					
ANR	5202929	PrimaryExpression	"""MapFileRename(oldfullname)"""		5202777	0					
ANR	5202930	ExpressionStatement	"gs_free_object ( mem , newfullname , ""MapFileRename(newfullname)"" )"	636:4:20846:20909	5202777	10	True				
ANR	5202931	CallExpression	"gs_free_object ( mem , newfullname , ""MapFileRename(newfullname)"" )"		5202777	0					
ANR	5202932	Callee	gs_free_object		5202777	0					
ANR	5202933	Identifier	gs_free_object		5202777	0					
ANR	5202934	ArgumentList	mem		5202777	1					
ANR	5202935	Argument	mem		5202777	0					
ANR	5202936	Identifier	mem		5202777	0					
ANR	5202937	Argument	newfullname		5202777	1					
ANR	5202938	Identifier	newfullname		5202777	0					
ANR	5202939	Argument	"""MapFileRename(newfullname)"""		5202777	2					
ANR	5202940	PrimaryExpression	"""MapFileRename(newfullname)"""		5202777	0					
ANR	5202941	ReturnType	static void		5202777	1					
ANR	5202942	Identifier	MapFileRename		5202777	2					
ANR	5202943	ParameterList	"gs_memory_t * mem , const char * rootpath , const char * newfilename , const char * oldfilename"		5202777	3					
ANR	5202944	Parameter	gs_memory_t * mem	615:14:19989:20004	5202777	0	True				
ANR	5202945	ParameterType	gs_memory_t *		5202777	0					
ANR	5202946	Identifier	mem		5202777	1					
ANR	5202947	Parameter	const char * rootpath	615:32:20007:20027	5202777	1	True				
ANR	5202948	ParameterType	const char *		5202777	0					
ANR	5202949	Identifier	rootpath		5202777	1					
ANR	5202950	Parameter	const char * newfilename	615:55:20030:20053	5202777	2	True				
ANR	5202951	ParameterType	const char *		5202777	0					
ANR	5202952	Identifier	newfilename		5202777	1					
ANR	5202953	Parameter	const char * oldfilename	615:81:20056:20079	5202777	3	True				
ANR	5202954	ParameterType	const char *		5202777	0					
ANR	5202955	Identifier	oldfilename		5202777	1					
ANR	5202956	CFGEntryNode	ENTRY		5202777		True				
ANR	5202957	CFGExitNode	EXIT		5202777		True				
ANR	5202958	Symbol	strlen		5202777						
ANR	5202959	Symbol	gs_alloc_bytes		5202777						
ANR	5202960	Symbol	oldfullname		5202777						
ANR	5202961	Symbol	NULL		5202777						
ANR	5202962	Symbol	ototlen		5202777						
ANR	5202963	Symbol	mem		5202777						
ANR	5202964	Symbol	newfilename		5202777						
ANR	5202965	Symbol	newfullname		5202777						
ANR	5202966	Symbol	ntotlen		5202777						
ANR	5202967	Symbol	gp_file_name_sizeof		5202777						
ANR	5202968	Symbol	oldfilename		5202777						
ANR	5202969	Symbol	rootpath		5202777						
ANR	5202970	Function	MapToFile	648:0:21295:22132							
ANR	5202971	FunctionDef	"MapToFile (gs_memory_t * mem , const char * rootpath , const char * name)"		5202970	0					
ANR	5202972	CompoundStatement		650:0:21374:22132	5202970	0					
ANR	5202973	IdentifierDeclStatement	FILE * mapfile ;	651:4:21380:21394	5202970	0	True				
ANR	5202974	IdentifierDecl	* mapfile		5202970	0					
ANR	5202975	IdentifierDeclType	FILE *		5202970	0					
ANR	5202976	Identifier	mapfile		5202970	1					
ANR	5202977	IdentifierDeclStatement	int d = - 1 ;	652:4:21400:21410	5202970	1	True				
ANR	5202978	IdentifierDecl	d = - 1		5202970	0					
ANR	5202979	IdentifierDeclType	int		5202970	0					
ANR	5202980	Identifier	d		5202970	1					
ANR	5202981	AssignmentExpression	d = - 1		5202970	2		=			
ANR	5202982	Identifier	d		5202970	0					
ANR	5202983	UnaryOperationExpression	- 1		5202970	1					
ANR	5202984	UnaryOperator	-		5202970	0					
ANR	5202985	PrimaryExpression	1		5202970	1					
ANR	5202986	IdentifierDeclStatement	char * filename = NULL ;	653:4:21416:21437	5202970	2	True				
ANR	5202987	IdentifierDecl	* filename = NULL		5202970	0					
ANR	5202988	IdentifierDeclType	char *		5202970	0					
ANR	5202989	Identifier	filename		5202970	1					
ANR	5202990	AssignmentExpression	* filename = NULL		5202970	2		=			
ANR	5202991	Identifier	NULL		5202970	0					
ANR	5202992	Identifier	NULL		5202970	1					
ANR	5202993	IdentifierDeclStatement	int file_version ;	654:4:21443:21459	5202970	3	True				
ANR	5202994	IdentifierDecl	file_version		5202970	0					
ANR	5202995	IdentifierDeclType	int		5202970	0					
ANR	5202996	Identifier	file_version		5202970	1					
ANR	5202997	ExpressionStatement	"mapfile = MapFileOpen ( mem , rootpath , MAP_FILE_NAME , ""r"" )"	656:4:21466:21522	5202970	4	True				
ANR	5202998	AssignmentExpression	"mapfile = MapFileOpen ( mem , rootpath , MAP_FILE_NAME , ""r"" )"		5202970	0		=			
ANR	5202999	Identifier	mapfile		5202970	0					
ANR	5203000	CallExpression	"MapFileOpen ( mem , rootpath , MAP_FILE_NAME , ""r"" )"		5202970	1					
ANR	5203001	Callee	MapFileOpen		5202970	0					
ANR	5203002	Identifier	MapFileOpen		5202970	0					
ANR	5203003	ArgumentList	mem		5202970	1					
ANR	5203004	Argument	mem		5202970	0					
ANR	5203005	Identifier	mem		5202970	0					
ANR	5203006	Argument	rootpath		5202970	1					
ANR	5203007	Identifier	rootpath		5202970	0					
ANR	5203008	Argument	MAP_FILE_NAME		5202970	2					
ANR	5203009	Identifier	MAP_FILE_NAME		5202970	0					
ANR	5203010	Argument	"""r"""		5202970	3					
ANR	5203011	PrimaryExpression	"""r"""		5202970	0					
ANR	5203012	IfStatement	if ( mapfile == NULL )		5202970	5					
ANR	5203013	Condition	mapfile == NULL	657:8:21532:21546	5202970	0	True				
ANR	5203014	EqualityExpression	mapfile == NULL		5202970	0		==			
ANR	5203015	Identifier	mapfile		5202970	0					
ANR	5203016	Identifier	NULL		5202970	1					
ANR	5203017	ReturnStatement	return - 1 ;	658:8:21557:21566	5202970	1	True				
ANR	5203018	UnaryOperationExpression	- 1		5202970	0					
ANR	5203019	UnaryOperator	-		5202970	0					
ANR	5203020	PrimaryExpression	1		5202970	1					
ANR	5203021	IfStatement	"if ( MapFileReadVersion ( mapfile , & file_version ) && file_version == MAP_FILE_VERSION )"		5202970	6					
ANR	5203022	Condition	"MapFileReadVersion ( mapfile , & file_version ) && file_version == MAP_FILE_VERSION"	662:8:21627:21712	5202970	0	True				
ANR	5203023	AndExpression	"MapFileReadVersion ( mapfile , & file_version ) && file_version == MAP_FILE_VERSION"		5202970	0		&&			
ANR	5203024	CallExpression	"MapFileReadVersion ( mapfile , & file_version )"		5202970	0					
ANR	5203025	Callee	MapFileReadVersion		5202970	0					
ANR	5203026	Identifier	MapFileReadVersion		5202970	0					
ANR	5203027	ArgumentList	mapfile		5202970	1					
ANR	5203028	Argument	mapfile		5202970	0					
ANR	5203029	Identifier	mapfile		5202970	0					
ANR	5203030	Argument	& file_version		5202970	1					
ANR	5203031	UnaryOperationExpression	& file_version		5202970	0					
ANR	5203032	UnaryOperator	&		5202970	0					
ANR	5203033	Identifier	file_version		5202970	1					
ANR	5203034	EqualityExpression	file_version == MAP_FILE_VERSION		5202970	1		==			
ANR	5203035	Identifier	file_version		5202970	0					
ANR	5203036	Identifier	MAP_FILE_VERSION		5202970	1					
ANR	5203037	CompoundStatement		14:45:340:340	5202970	1					
ANR	5203038	ExpressionStatement	"filename = ( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""MapToFile(filename)"" )"	665:8:21726:21808	5202970	0	True				
ANR	5203039	AssignmentExpression	"filename = ( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""MapToFile(filename)"" )"		5202970	0		=			
ANR	5203040	Identifier	filename		5202970	0					
ANR	5203041	CastExpression	"( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""MapToFile(filename)"" )"		5202970	1					
ANR	5203042	CastTarget	char *		5202970	0					
ANR	5203043	CallExpression	"gs_alloc_bytes ( mem , gp_file_name_sizeof , ""MapToFile(filename)"" )"		5202970	1					
ANR	5203044	Callee	gs_alloc_bytes		5202970	0					
ANR	5203045	Identifier	gs_alloc_bytes		5202970	0					
ANR	5203046	ArgumentList	mem		5202970	1					
ANR	5203047	Argument	mem		5202970	0					
ANR	5203048	Identifier	mem		5202970	0					
ANR	5203049	Argument	gp_file_name_sizeof		5202970	1					
ANR	5203050	Identifier	gp_file_name_sizeof		5202970	0					
ANR	5203051	Argument	"""MapToFile(filename)"""		5202970	2					
ANR	5203052	PrimaryExpression	"""MapToFile(filename)"""		5202970	0					
ANR	5203053	WhileStatement	"while ( filename && MapFileRead ( mapfile , filename , & d ) )"		5202970	1					
ANR	5203054	Condition	"filename && MapFileRead ( mapfile , filename , & d )"	668:15:21881:21926	5202970	0	True				
ANR	5203055	AndExpression	"filename && MapFileRead ( mapfile , filename , & d )"		5202970	0		&&			
ANR	5203056	Identifier	filename		5202970	0					
ANR	5203057	CallExpression	"MapFileRead ( mapfile , filename , & d )"		5202970	1					
ANR	5203058	Callee	MapFileRead		5202970	0					
ANR	5203059	Identifier	MapFileRead		5202970	0					
ANR	5203060	ArgumentList	mapfile		5202970	1					
ANR	5203061	Argument	mapfile		5202970	0					
ANR	5203062	Identifier	mapfile		5202970	0					
ANR	5203063	Argument	filename		5202970	1					
ANR	5203064	Identifier	filename		5202970	0					
ANR	5203065	Argument	& d		5202970	2					
ANR	5203066	UnaryOperationExpression	& d		5202970	0					
ANR	5203067	UnaryOperator	&		5202970	0					
ANR	5203068	Identifier	d		5202970	1					
ANR	5203069	CompoundStatement		19:63:554:554	5202970	1					
ANR	5203070	IfStatement	"if ( strcmp ( filename , name ) == 0 )"		5202970	0					
ANR	5203071	Condition	"strcmp ( filename , name ) == 0"	669:16:21947:21973	5202970	0	True				
ANR	5203072	EqualityExpression	"strcmp ( filename , name ) == 0"		5202970	0		==			
ANR	5203073	CallExpression	"strcmp ( filename , name )"		5202970	0					
ANR	5203074	Callee	strcmp		5202970	0					
ANR	5203075	Identifier	strcmp		5202970	0					
ANR	5203076	ArgumentList	filename		5202970	1					
ANR	5203077	Argument	filename		5202970	0					
ANR	5203078	Identifier	filename		5202970	0					
ANR	5203079	Argument	name		5202970	1					
ANR	5203080	Identifier	name		5202970	0					
ANR	5203081	PrimaryExpression	0		5202970	1					
ANR	5203082	BreakStatement	break ;	670:16:21992:21997	5202970	1	True				
ANR	5203083	ExpressionStatement	d = - 1	671:12:22011:22017	5202970	1	True				
ANR	5203084	AssignmentExpression	d = - 1		5202970	0		=			
ANR	5203085	Identifier	d		5202970	0					
ANR	5203086	UnaryOperationExpression	- 1		5202970	1					
ANR	5203087	UnaryOperator	-		5202970	0					
ANR	5203088	PrimaryExpression	1		5202970	1					
ANR	5203089	ExpressionStatement	"gs_free_object ( mem , filename , ""MapToFile(filename)"" )"	673:8:22037:22089	5202970	2	True				
ANR	5203090	CallExpression	"gs_free_object ( mem , filename , ""MapToFile(filename)"" )"		5202970	0					
ANR	5203091	Callee	gs_free_object		5202970	0					
ANR	5203092	Identifier	gs_free_object		5202970	0					
ANR	5203093	ArgumentList	mem		5202970	1					
ANR	5203094	Argument	mem		5202970	0					
ANR	5203095	Identifier	mem		5202970	0					
ANR	5203096	Argument	filename		5202970	1					
ANR	5203097	Identifier	filename		5202970	0					
ANR	5203098	Argument	"""MapToFile(filename)"""		5202970	2					
ANR	5203099	PrimaryExpression	"""MapToFile(filename)"""		5202970	0					
ANR	5203100	ExpressionStatement	fclose ( mapfile )	675:4:22101:22116	5202970	7	True				
ANR	5203101	CallExpression	fclose ( mapfile )		5202970	0					
ANR	5203102	Callee	fclose		5202970	0					
ANR	5203103	Identifier	fclose		5202970	0					
ANR	5203104	ArgumentList	mapfile		5202970	1					
ANR	5203105	Argument	mapfile		5202970	0					
ANR	5203106	Identifier	mapfile		5202970	0					
ANR	5203107	ReturnStatement	return d ;	676:4:22122:22130	5202970	8	True				
ANR	5203108	Identifier	d		5202970	0					
ANR	5203109	ReturnType	static int		5202970	1					
ANR	5203110	Identifier	MapToFile		5202970	2					
ANR	5203111	ParameterList	"gs_memory_t * mem , const char * rootpath , const char * name"		5202970	3					
ANR	5203112	Parameter	gs_memory_t * mem	649:10:21316:21331	5202970	0	True				
ANR	5203113	ParameterType	gs_memory_t *		5202970	0					
ANR	5203114	Identifier	mem		5202970	1					
ANR	5203115	Parameter	const char * rootpath	649:28:21334:21353	5202970	1	True				
ANR	5203116	ParameterType	const char *		5202970	0					
ANR	5203117	Identifier	rootpath		5202970	1					
ANR	5203118	Parameter	const char * name	649:50:21356:21371	5202970	2	True				
ANR	5203119	ParameterType	const char *		5202970	0					
ANR	5203120	Identifier	name		5202970	1					
ANR	5203121	CFGEntryNode	ENTRY		5202970		True				
ANR	5203122	CFGExitNode	EXIT		5202970		True				
ANR	5203123	Symbol	file_version		5202970						
ANR	5203124	Symbol	strcmp		5202970						
ANR	5203125	Symbol	gs_alloc_bytes		5202970						
ANR	5203126	Symbol	NULL		5202970						
ANR	5203127	Symbol	d		5202970						
ANR	5203128	Symbol	MapFileReadVersion		5202970						
ANR	5203129	Symbol	MAP_FILE_VERSION		5202970						
ANR	5203130	Symbol	gp_file_name_sizeof		5202970						
ANR	5203131	Symbol	& d		5202970						
ANR	5203132	Symbol	MAP_FILE_NAME		5202970						
ANR	5203133	Symbol	MapFileOpen		5202970						
ANR	5203134	Symbol	& file_version		5202970						
ANR	5203135	Symbol	filename		5202970						
ANR	5203136	Symbol	mem		5202970						
ANR	5203137	Symbol	name		5202970						
ANR	5203138	Symbol	rootpath		5202970						
ANR	5203139	Symbol	MapFileRead		5202970						
ANR	5203140	Symbol	mapfile		5202970						
ANR	5203141	Function	map_file_enum_init	689:0:22591:24352							
ANR	5203142	FunctionDef	"map_file_enum_init (gs_memory_t * mem , const char * root_name , const char * search_pattern , uint search_pattern_len)"		5203141	0					
ANR	5203143	CompoundStatement		691:0:22720:24352	5203141	0					
ANR	5203144	IdentifierDeclStatement	int file_version ;	692:4:22726:22742	5203141	0	True				
ANR	5203145	IdentifierDecl	file_version		5203141	0					
ANR	5203146	IdentifierDeclType	int		5203141	0					
ANR	5203147	Identifier	file_version		5203141	1					
ANR	5203148	IdentifierDeclStatement	"map_file_enum * mapfileenum = gs_alloc_struct ( mem , map_file_enum , & st_map_file_enum , ""diskn:enum_init(file_enum)"" ) ;"	693:4:22748:22918	5203141	1	True				
ANR	5203149	IdentifierDecl	"* mapfileenum = gs_alloc_struct ( mem , map_file_enum , & st_map_file_enum , ""diskn:enum_init(file_enum)"" )"		5203141	0					
ANR	5203150	IdentifierDeclType	map_file_enum *		5203141	0					
ANR	5203151	Identifier	mapfileenum		5203141	1					
ANR	5203152	AssignmentExpression	"* mapfileenum = gs_alloc_struct ( mem , map_file_enum , & st_map_file_enum , ""diskn:enum_init(file_enum)"" )"		5203141	2		=			
ANR	5203153	Identifier	mapfileenum		5203141	0					
ANR	5203154	CallExpression	"gs_alloc_struct ( mem , map_file_enum , & st_map_file_enum , ""diskn:enum_init(file_enum)"" )"		5203141	1					
ANR	5203155	Callee	gs_alloc_struct		5203141	0					
ANR	5203156	Identifier	gs_alloc_struct		5203141	0					
ANR	5203157	ArgumentList	mem		5203141	1					
ANR	5203158	Argument	mem		5203141	0					
ANR	5203159	Identifier	mem		5203141	0					
ANR	5203160	Argument	map_file_enum		5203141	1					
ANR	5203161	Identifier	map_file_enum		5203141	0					
ANR	5203162	Argument	& st_map_file_enum		5203141	2					
ANR	5203163	UnaryOperationExpression	& st_map_file_enum		5203141	0					
ANR	5203164	UnaryOperator	&		5203141	0					
ANR	5203165	Identifier	st_map_file_enum		5203141	1					
ANR	5203166	Argument	"""diskn:enum_init(file_enum)"""		5203141	3					
ANR	5203167	PrimaryExpression	"""diskn:enum_init(file_enum)"""		5203141	0					
ANR	5203168	IfStatement	if ( mapfileenum == NULL )		5203141	2					
ANR	5203169	Condition	mapfileenum == NULL	696:8:22929:22947	5203141	0	True				
ANR	5203170	EqualityExpression	mapfileenum == NULL		5203141	0		==			
ANR	5203171	Identifier	mapfileenum		5203141	0					
ANR	5203172	Identifier	NULL		5203141	1					
ANR	5203173	ReturnStatement	return NULL ;	697:8:22958:22969	5203141	1	True				
ANR	5203174	Identifier	NULL		5203141	0					
ANR	5203175	ExpressionStatement	"memset ( mapfileenum , 0 , sizeof ( map_file_enum ) )"	698:4:22975:23020	5203141	3	True				
ANR	5203176	CallExpression	"memset ( mapfileenum , 0 , sizeof ( map_file_enum ) )"		5203141	0					
ANR	5203177	Callee	memset		5203141	0					
ANR	5203178	Identifier	memset		5203141	0					
ANR	5203179	ArgumentList	mapfileenum		5203141	1					
ANR	5203180	Argument	mapfileenum		5203141	0					
ANR	5203181	Identifier	mapfileenum		5203141	0					
ANR	5203182	Argument	0		5203141	1					
ANR	5203183	PrimaryExpression	0		5203141	0					
ANR	5203184	Argument	sizeof ( map_file_enum )		5203141	2					
ANR	5203185	SizeofExpression	sizeof ( map_file_enum )		5203141	0					
ANR	5203186	Sizeof	sizeof		5203141	0					
ANR	5203187	SizeofOperand	map_file_enum		5203141	1					
ANR	5203188	ExpressionStatement	mapfileenum -> memory = mem	699:4:23026:23051	5203141	4	True				
ANR	5203189	AssignmentExpression	mapfileenum -> memory = mem		5203141	0		=			
ANR	5203190	PtrMemberAccess	mapfileenum -> memory		5203141	0					
ANR	5203191	Identifier	mapfileenum		5203141	0					
ANR	5203192	Identifier	memory		5203141	1					
ANR	5203193	Identifier	mem		5203141	1					
ANR	5203194	IfStatement	if ( search_pattern )		5203141	5					
ANR	5203195	Condition	search_pattern	701:8:23062:23075	5203141	0	True				
ANR	5203196	Identifier	search_pattern		5203141	0					
ANR	5203197	CompoundStatement		11:24:357:357	5203141	1					
ANR	5203198	ExpressionStatement	"mapfileenum -> pattern = ( char * ) gs_alloc_bytes ( mem , search_pattern_len + 1 , ""diskn:enum_init(pattern)"" )"	702:8:23088:23246	5203141	0	True				
ANR	5203199	AssignmentExpression	"mapfileenum -> pattern = ( char * ) gs_alloc_bytes ( mem , search_pattern_len + 1 , ""diskn:enum_init(pattern)"" )"		5203141	0		=			
ANR	5203200	PtrMemberAccess	mapfileenum -> pattern		5203141	0					
ANR	5203201	Identifier	mapfileenum		5203141	0					
ANR	5203202	Identifier	pattern		5203141	1					
ANR	5203203	CastExpression	"( char * ) gs_alloc_bytes ( mem , search_pattern_len + 1 , ""diskn:enum_init(pattern)"" )"		5203141	1					
ANR	5203204	CastTarget	char *		5203141	0					
ANR	5203205	CallExpression	"gs_alloc_bytes ( mem , search_pattern_len + 1 , ""diskn:enum_init(pattern)"" )"		5203141	1					
ANR	5203206	Callee	gs_alloc_bytes		5203141	0					
ANR	5203207	Identifier	gs_alloc_bytes		5203141	0					
ANR	5203208	ArgumentList	mem		5203141	1					
ANR	5203209	Argument	mem		5203141	0					
ANR	5203210	Identifier	mem		5203141	0					
ANR	5203211	Argument	search_pattern_len + 1		5203141	1					
ANR	5203212	AdditiveExpression	search_pattern_len + 1		5203141	0		+			
ANR	5203213	Identifier	search_pattern_len		5203141	0					
ANR	5203214	PrimaryExpression	1		5203141	1					
ANR	5203215	Argument	"""diskn:enum_init(pattern)"""		5203141	2					
ANR	5203216	PrimaryExpression	"""diskn:enum_init(pattern)"""		5203141	0					
ANR	5203217	IfStatement	if ( mapfileenum -> pattern == NULL )		5203141	1					
ANR	5203218	Condition	mapfileenum -> pattern == NULL	704:12:23260:23287	5203141	0	True				
ANR	5203219	EqualityExpression	mapfileenum -> pattern == NULL		5203141	0		==			
ANR	5203220	PtrMemberAccess	mapfileenum -> pattern		5203141	0					
ANR	5203221	Identifier	mapfileenum		5203141	0					
ANR	5203222	Identifier	pattern		5203141	1					
ANR	5203223	Identifier	NULL		5203141	1					
ANR	5203224	CompoundStatement		14:42:569:569	5203141	1					
ANR	5203225	ExpressionStatement	map_file_enum_close ( ( file_enum * ) mapfileenum )	705:12:23304:23350	5203141	0	True				
ANR	5203226	CallExpression	map_file_enum_close ( ( file_enum * ) mapfileenum )		5203141	0					
ANR	5203227	Callee	map_file_enum_close		5203141	0					
ANR	5203228	Identifier	map_file_enum_close		5203141	0					
ANR	5203229	ArgumentList	( file_enum * ) mapfileenum		5203141	1					
ANR	5203230	Argument	( file_enum * ) mapfileenum		5203141	0					
ANR	5203231	CastExpression	( file_enum * ) mapfileenum		5203141	0					
ANR	5203232	CastTarget	file_enum *		5203141	0					
ANR	5203233	Identifier	mapfileenum		5203141	1					
ANR	5203234	ReturnStatement	return NULL ;	706:12:23364:23375	5203141	1	True				
ANR	5203235	Identifier	NULL		5203141	0					
ANR	5203236	ExpressionStatement	"memcpy ( mapfileenum -> pattern , search_pattern , search_pattern_len )"	708:8:23395:23459	5203141	2	True				
ANR	5203237	CallExpression	"memcpy ( mapfileenum -> pattern , search_pattern , search_pattern_len )"		5203141	0					
ANR	5203238	Callee	memcpy		5203141	0					
ANR	5203239	Identifier	memcpy		5203141	0					
ANR	5203240	ArgumentList	mapfileenum -> pattern		5203141	1					
ANR	5203241	Argument	mapfileenum -> pattern		5203141	0					
ANR	5203242	PtrMemberAccess	mapfileenum -> pattern		5203141	0					
ANR	5203243	Identifier	mapfileenum		5203141	0					
ANR	5203244	Identifier	pattern		5203141	1					
ANR	5203245	Argument	search_pattern		5203141	1					
ANR	5203246	Identifier	search_pattern		5203141	0					
ANR	5203247	Argument	search_pattern_len		5203141	2					
ANR	5203248	Identifier	search_pattern_len		5203141	0					
ANR	5203249	ExpressionStatement	mapfileenum -> pattern [ search_pattern_len ] = '\\0'	710:8:23500:23547	5203141	3	True				
ANR	5203250	AssignmentExpression	mapfileenum -> pattern [ search_pattern_len ] = '\\0'		5203141	0		=			
ANR	5203251	ArrayIndexing	mapfileenum -> pattern [ search_pattern_len ]		5203141	0					
ANR	5203252	PtrMemberAccess	mapfileenum -> pattern		5203141	0					
ANR	5203253	Identifier	mapfileenum		5203141	0					
ANR	5203254	Identifier	pattern		5203141	1					
ANR	5203255	Identifier	search_pattern_len		5203141	1					
ANR	5203256	PrimaryExpression	'\\0'		5203141	1					
ANR	5203257	ExpressionStatement	"mapfileenum -> root = ( char * ) gs_alloc_bytes ( mem , strlen ( root_name ) + 1 , ""diskn:enum_init(root)"" )"	713:4:23560:23703	5203141	6	True				
ANR	5203258	AssignmentExpression	"mapfileenum -> root = ( char * ) gs_alloc_bytes ( mem , strlen ( root_name ) + 1 , ""diskn:enum_init(root)"" )"		5203141	0		=			
ANR	5203259	PtrMemberAccess	mapfileenum -> root		5203141	0					
ANR	5203260	Identifier	mapfileenum		5203141	0					
ANR	5203261	Identifier	root		5203141	1					
ANR	5203262	CastExpression	"( char * ) gs_alloc_bytes ( mem , strlen ( root_name ) + 1 , ""diskn:enum_init(root)"" )"		5203141	1					
ANR	5203263	CastTarget	char *		5203141	0					
ANR	5203264	CallExpression	"gs_alloc_bytes ( mem , strlen ( root_name ) + 1 , ""diskn:enum_init(root)"" )"		5203141	1					
ANR	5203265	Callee	gs_alloc_bytes		5203141	0					
ANR	5203266	Identifier	gs_alloc_bytes		5203141	0					
ANR	5203267	ArgumentList	mem		5203141	1					
ANR	5203268	Argument	mem		5203141	0					
ANR	5203269	Identifier	mem		5203141	0					
ANR	5203270	Argument	strlen ( root_name ) + 1		5203141	1					
ANR	5203271	AdditiveExpression	strlen ( root_name ) + 1		5203141	0		+			
ANR	5203272	CallExpression	strlen ( root_name )		5203141	0					
ANR	5203273	Callee	strlen		5203141	0					
ANR	5203274	Identifier	strlen		5203141	0					
ANR	5203275	ArgumentList	root_name		5203141	1					
ANR	5203276	Argument	root_name		5203141	0					
ANR	5203277	Identifier	root_name		5203141	0					
ANR	5203278	PrimaryExpression	1		5203141	1					
ANR	5203279	Argument	"""diskn:enum_init(root)"""		5203141	2					
ANR	5203280	PrimaryExpression	"""diskn:enum_init(root)"""		5203141	0					
ANR	5203281	IfStatement	if ( mapfileenum -> root == NULL )		5203141	7					
ANR	5203282	Condition	mapfileenum -> root == NULL	715:8:23713:23737	5203141	0	True				
ANR	5203283	EqualityExpression	mapfileenum -> root == NULL		5203141	0		==			
ANR	5203284	PtrMemberAccess	mapfileenum -> root		5203141	0					
ANR	5203285	Identifier	mapfileenum		5203141	0					
ANR	5203286	Identifier	root		5203141	1					
ANR	5203287	Identifier	NULL		5203141	1					
ANR	5203288	CompoundStatement		25:35:1019:1019	5203141	1					
ANR	5203289	ExpressionStatement	map_file_enum_close ( ( file_enum * ) mapfileenum )	716:8:23750:23796	5203141	0	True				
ANR	5203290	CallExpression	map_file_enum_close ( ( file_enum * ) mapfileenum )		5203141	0					
ANR	5203291	Callee	map_file_enum_close		5203141	0					
ANR	5203292	Identifier	map_file_enum_close		5203141	0					
ANR	5203293	ArgumentList	( file_enum * ) mapfileenum		5203141	1					
ANR	5203294	Argument	( file_enum * ) mapfileenum		5203141	0					
ANR	5203295	CastExpression	( file_enum * ) mapfileenum		5203141	0					
ANR	5203296	CastTarget	file_enum *		5203141	0					
ANR	5203297	Identifier	mapfileenum		5203141	1					
ANR	5203298	ReturnStatement	return NULL ;	717:8:23806:23817	5203141	1	True				
ANR	5203299	Identifier	NULL		5203141	0					
ANR	5203300	IfStatement	if ( strlen ( root_name ) >= gp_file_name_sizeof )		5203141	8					
ANR	5203301	Condition	strlen ( root_name ) >= gp_file_name_sizeof	720:8:23834:23873	5203141	0	True				
ANR	5203302	RelationalExpression	strlen ( root_name ) >= gp_file_name_sizeof		5203141	0		>=			
ANR	5203303	CallExpression	strlen ( root_name )		5203141	0					
ANR	5203304	Callee	strlen		5203141	0					
ANR	5203305	Identifier	strlen		5203141	0					
ANR	5203306	ArgumentList	root_name		5203141	1					
ANR	5203307	Argument	root_name		5203141	0					
ANR	5203308	Identifier	root_name		5203141	0					
ANR	5203309	Identifier	gp_file_name_sizeof		5203141	1					
ANR	5203310	ReturnStatement	return NULL ;	721:8:23884:23895	5203141	1	True				
ANR	5203311	Identifier	NULL		5203141	0					
ANR	5203312	ExpressionStatement	"strcpy ( mapfileenum -> root , root_name )"	722:4:23901:23937	5203141	9	True				
ANR	5203313	CallExpression	"strcpy ( mapfileenum -> root , root_name )"		5203141	0					
ANR	5203314	Callee	strcpy		5203141	0					
ANR	5203315	Identifier	strcpy		5203141	0					
ANR	5203316	ArgumentList	mapfileenum -> root		5203141	1					
ANR	5203317	Argument	mapfileenum -> root		5203141	0					
ANR	5203318	PtrMemberAccess	mapfileenum -> root		5203141	0					
ANR	5203319	Identifier	mapfileenum		5203141	0					
ANR	5203320	Identifier	root		5203141	1					
ANR	5203321	Argument	root_name		5203141	1					
ANR	5203322	Identifier	root_name		5203141	0					
ANR	5203323	ExpressionStatement	"mapfileenum -> stream = MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"	723:4:23943:24012	5203141	10	True				
ANR	5203324	AssignmentExpression	"mapfileenum -> stream = MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"		5203141	0		=			
ANR	5203325	PtrMemberAccess	mapfileenum -> stream		5203141	0					
ANR	5203326	Identifier	mapfileenum		5203141	0					
ANR	5203327	Identifier	stream		5203141	1					
ANR	5203328	CallExpression	"MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"		5203141	1					
ANR	5203329	Callee	MapFileOpen		5203141	0					
ANR	5203330	Identifier	MapFileOpen		5203141	0					
ANR	5203331	ArgumentList	mem		5203141	1					
ANR	5203332	Argument	mem		5203141	0					
ANR	5203333	Identifier	mem		5203141	0					
ANR	5203334	Argument	root_name		5203141	1					
ANR	5203335	Identifier	root_name		5203141	0					
ANR	5203336	Argument	MAP_FILE_NAME		5203141	2					
ANR	5203337	Identifier	MAP_FILE_NAME		5203141	0					
ANR	5203338	Argument	"""r"""		5203141	3					
ANR	5203339	PrimaryExpression	"""r"""		5203141	0					
ANR	5203340	IfStatement	"if ( mapfileenum -> stream != NULL && ( ! MapFileReadVersion ( mapfileenum -> stream , & file_version ) || file_version != MAP_FILE_VERSION ) )"		5203141	11					
ANR	5203341	Condition	"mapfileenum -> stream != NULL && ( ! MapFileReadVersion ( mapfileenum -> stream , & file_version ) || file_version != MAP_FILE_VERSION )"	726:8:24071:24214	5203141	0	True				
ANR	5203342	AndExpression	"mapfileenum -> stream != NULL && ( ! MapFileReadVersion ( mapfileenum -> stream , & file_version ) || file_version != MAP_FILE_VERSION )"		5203141	0		&&			
ANR	5203343	EqualityExpression	mapfileenum -> stream != NULL		5203141	0		!=			
ANR	5203344	PtrMemberAccess	mapfileenum -> stream		5203141	0					
ANR	5203345	Identifier	mapfileenum		5203141	0					
ANR	5203346	Identifier	stream		5203141	1					
ANR	5203347	Identifier	NULL		5203141	1					
ANR	5203348	OrExpression	"! MapFileReadVersion ( mapfileenum -> stream , & file_version ) || file_version != MAP_FILE_VERSION"		5203141	1		||			
ANR	5203349	UnaryOperationExpression	"! MapFileReadVersion ( mapfileenum -> stream , & file_version )"		5203141	0					
ANR	5203350	UnaryOperator	!		5203141	0					
ANR	5203351	CallExpression	"MapFileReadVersion ( mapfileenum -> stream , & file_version )"		5203141	1					
ANR	5203352	Callee	MapFileReadVersion		5203141	0					
ANR	5203353	Identifier	MapFileReadVersion		5203141	0					
ANR	5203354	ArgumentList	mapfileenum -> stream		5203141	1					
ANR	5203355	Argument	mapfileenum -> stream		5203141	0					
ANR	5203356	PtrMemberAccess	mapfileenum -> stream		5203141	0					
ANR	5203357	Identifier	mapfileenum		5203141	0					
ANR	5203358	Identifier	stream		5203141	1					
ANR	5203359	Argument	& file_version		5203141	1					
ANR	5203360	UnaryOperationExpression	& file_version		5203141	0					
ANR	5203361	UnaryOperator	&		5203141	0					
ANR	5203362	Identifier	file_version		5203141	1					
ANR	5203363	EqualityExpression	file_version != MAP_FILE_VERSION		5203141	1		!=			
ANR	5203364	Identifier	file_version		5203141	0					
ANR	5203365	Identifier	MAP_FILE_VERSION		5203141	1					
ANR	5203366	CompoundStatement		38:50:1496:1496	5203141	1					
ANR	5203367	ExpressionStatement	fclose ( mapfileenum -> stream )	729:8:24227:24254	5203141	0	True				
ANR	5203368	CallExpression	fclose ( mapfileenum -> stream )		5203141	0					
ANR	5203369	Callee	fclose		5203141	0					
ANR	5203370	Identifier	fclose		5203141	0					
ANR	5203371	ArgumentList	mapfileenum -> stream		5203141	1					
ANR	5203372	Argument	mapfileenum -> stream		5203141	0					
ANR	5203373	PtrMemberAccess	mapfileenum -> stream		5203141	0					
ANR	5203374	Identifier	mapfileenum		5203141	0					
ANR	5203375	Identifier	stream		5203141	1					
ANR	5203376	ExpressionStatement	mapfileenum -> stream = NULL	730:8:24293:24319	5203141	1	True				
ANR	5203377	AssignmentExpression	mapfileenum -> stream = NULL		5203141	0		=			
ANR	5203378	PtrMemberAccess	mapfileenum -> stream		5203141	0					
ANR	5203379	Identifier	mapfileenum		5203141	0					
ANR	5203380	Identifier	stream		5203141	1					
ANR	5203381	Identifier	NULL		5203141	1					
ANR	5203382	ReturnStatement	return mapfileenum ;	733:4:24332:24350	5203141	12	True				
ANR	5203383	Identifier	mapfileenum		5203141	0					
ANR	5203384	ReturnType	static void *		5203141	1					
ANR	5203385	Identifier	map_file_enum_init		5203141	2					
ANR	5203386	ParameterList	"gs_memory_t * mem , const char * root_name , const char * search_pattern , uint search_pattern_len"		5203141	3					
ANR	5203387	Parameter	gs_memory_t * mem	690:19:22624:22639	5203141	0	True				
ANR	5203388	ParameterType	gs_memory_t *		5203141	0					
ANR	5203389	Identifier	mem		5203141	1					
ANR	5203390	Parameter	const char * root_name	690:37:22642:22663	5203141	1	True				
ANR	5203391	ParameterType	const char *		5203141	0					
ANR	5203392	Identifier	root_name		5203141	1					
ANR	5203393	Parameter	const char * search_pattern	690:61:22666:22692	5203141	2	True				
ANR	5203394	ParameterType	const char *		5203141	0					
ANR	5203395	Identifier	search_pattern		5203141	1					
ANR	5203396	Parameter	uint search_pattern_len	690:90:22695:22717	5203141	3	True				
ANR	5203397	ParameterType	uint		5203141	0					
ANR	5203398	Identifier	search_pattern_len		5203141	1					
ANR	5203399	CFGEntryNode	ENTRY		5203141		True				
ANR	5203400	CFGExitNode	EXIT		5203141		True				
ANR	5203401	Symbol	file_version		5203141						
ANR	5203402	Symbol	mapfileenum -> memory		5203141						
ANR	5203403	Symbol	MapFileReadVersion		5203141						
ANR	5203404	Symbol	MAP_FILE_VERSION		5203141						
ANR	5203405	Symbol	root_name		5203141						
ANR	5203406	Symbol	gs_alloc_struct		5203141						
ANR	5203407	Symbol	MAP_FILE_NAME		5203141						
ANR	5203408	Symbol	mapfileenum		5203141						
ANR	5203409	Symbol	& st_map_file_enum		5203141						
ANR	5203410	Symbol	MapFileOpen		5203141						
ANR	5203411	Symbol	strlen		5203141						
ANR	5203412	Symbol	mem		5203141						
ANR	5203413	Symbol	mapfileenum -> stream		5203141						
ANR	5203414	Symbol	* search_pattern_len		5203141						
ANR	5203415	Symbol	mapfileenum -> pattern		5203141						
ANR	5203416	Symbol	mapfileenum -> root		5203141						
ANR	5203417	Symbol	gs_alloc_bytes		5203141						
ANR	5203418	Symbol	NULL		5203141						
ANR	5203419	Symbol	gp_file_name_sizeof		5203141						
ANR	5203420	Symbol	* mapfileenum		5203141						
ANR	5203421	Symbol	map_file_enum		5203141						
ANR	5203422	Symbol	* * mapfileenum		5203141						
ANR	5203423	Symbol	& file_version		5203141						
ANR	5203424	Symbol	search_pattern		5203141						
ANR	5203425	Symbol	* mapfileenum -> pattern		5203141						
ANR	5203426	Symbol	search_pattern_len		5203141						
ANR	5203427	Function	map_file_enum_next	742:0:24506:25301							
ANR	5203428	FunctionDef	"map_file_enum_next (void * enum_mem , char * target)"		5203427	0					
ANR	5203429	CompoundStatement		744:0:24568:25301	5203427	0					
ANR	5203430	IdentifierDeclStatement	int d = - 1 ;	745:4:24574:24584	5203427	0	True				
ANR	5203431	IdentifierDecl	d = - 1		5203427	0					
ANR	5203432	IdentifierDeclType	int		5203427	0					
ANR	5203433	Identifier	d		5203427	1					
ANR	5203434	AssignmentExpression	d = - 1		5203427	2		=			
ANR	5203435	Identifier	d		5203427	0					
ANR	5203436	UnaryOperationExpression	- 1		5203427	1					
ANR	5203437	UnaryOperator	-		5203427	0					
ANR	5203438	PrimaryExpression	1		5203427	1					
ANR	5203439	IdentifierDeclStatement	map_file_enum * mapfileenum ;	746:4:24590:24617	5203427	1	True				
ANR	5203440	IdentifierDecl	* mapfileenum		5203427	0					
ANR	5203441	IdentifierDeclType	map_file_enum *		5203427	0					
ANR	5203442	Identifier	mapfileenum		5203427	1					
ANR	5203443	IfStatement	if ( enum_mem == NULL )		5203427	2					
ANR	5203444	Condition	enum_mem == NULL	748:8:24628:24643	5203427	0	True				
ANR	5203445	EqualityExpression	enum_mem == NULL		5203427	0		==			
ANR	5203446	Identifier	enum_mem		5203427	0					
ANR	5203447	Identifier	NULL		5203427	1					
ANR	5203448	ReturnStatement	return false ;	749:8:24654:24666	5203427	1	True				
ANR	5203449	Identifier	false		5203427	0					
ANR	5203450	ExpressionStatement	mapfileenum = ( map_file_enum * ) enum_mem	751:4:24673:24711	5203427	3	True				
ANR	5203451	AssignmentExpression	mapfileenum = ( map_file_enum * ) enum_mem		5203427	0		=			
ANR	5203452	Identifier	mapfileenum		5203427	0					
ANR	5203453	CastExpression	( map_file_enum * ) enum_mem		5203427	1					
ANR	5203454	CastTarget	map_file_enum *		5203427	0					
ANR	5203455	Identifier	enum_mem		5203427	1					
ANR	5203456	IfStatement	if ( mapfileenum -> stream == NULL )		5203427	4					
ANR	5203457	Condition	mapfileenum -> stream == NULL	752:8:24721:24747	5203427	0	True				
ANR	5203458	EqualityExpression	mapfileenum -> stream == NULL		5203427	0		==			
ANR	5203459	PtrMemberAccess	mapfileenum -> stream		5203427	0					
ANR	5203460	Identifier	mapfileenum		5203427	0					
ANR	5203461	Identifier	stream		5203427	1					
ANR	5203462	Identifier	NULL		5203427	1					
ANR	5203463	ReturnStatement	return false ;	753:8:24758:24770	5203427	1	True				
ANR	5203464	Identifier	false		5203427	0					
ANR	5203465	IfStatement	if ( mapfileenum -> pattern )		5203427	5					
ANR	5203466	Condition	mapfileenum -> pattern	755:8:24781:24800	5203427	0	True				
ANR	5203467	PtrMemberAccess	mapfileenum -> pattern		5203427	0					
ANR	5203468	Identifier	mapfileenum		5203427	0					
ANR	5203469	Identifier	pattern		5203427	1					
ANR	5203470	CompoundStatement		12:30:234:234	5203427	1					
ANR	5203471	WhileStatement	"while ( MapFileRead ( mapfileenum -> stream , target , & d ) )"		5203427	0					
ANR	5203472	Condition	"MapFileRead ( mapfileenum -> stream , target , & d )"	757:15:24878:24921	5203427	0	True				
ANR	5203473	CallExpression	"MapFileRead ( mapfileenum -> stream , target , & d )"		5203427	0					
ANR	5203474	Callee	MapFileRead		5203427	0					
ANR	5203475	Identifier	MapFileRead		5203427	0					
ANR	5203476	ArgumentList	mapfileenum -> stream		5203427	1					
ANR	5203477	Argument	mapfileenum -> stream		5203427	0					
ANR	5203478	PtrMemberAccess	mapfileenum -> stream		5203427	0					
ANR	5203479	Identifier	mapfileenum		5203427	0					
ANR	5203480	Identifier	stream		5203427	1					
ANR	5203481	Argument	target		5203427	1					
ANR	5203482	Identifier	target		5203427	0					
ANR	5203483	Argument	& d		5203427	2					
ANR	5203484	UnaryOperationExpression	& d		5203427	0					
ANR	5203485	UnaryOperator	&		5203427	0					
ANR	5203486	Identifier	d		5203427	1					
ANR	5203487	CompoundStatement		14:61:355:355	5203427	1					
ANR	5203488	IfStatement	"if ( string_match ( ( byte * ) target , strlen ( target ) , ( byte * ) mapfileenum -> pattern , strlen ( mapfileenum -> pattern ) , 0 ) )"		5203427	0					
ANR	5203489	Condition	"string_match ( ( byte * ) target , strlen ( target ) , ( byte * ) mapfileenum -> pattern , strlen ( mapfileenum -> pattern ) , 0 )"	758:16:24942:25106	5203427	0	True				
ANR	5203490	CallExpression	"string_match ( ( byte * ) target , strlen ( target ) , ( byte * ) mapfileenum -> pattern , strlen ( mapfileenum -> pattern ) , 0 )"		5203427	0					
ANR	5203491	Callee	string_match		5203427	0					
ANR	5203492	Identifier	string_match		5203427	0					
ANR	5203493	ArgumentList	( byte * ) target		5203427	1					
ANR	5203494	Argument	( byte * ) target		5203427	0					
ANR	5203495	CastExpression	( byte * ) target		5203427	0					
ANR	5203496	CastTarget	byte *		5203427	0					
ANR	5203497	Identifier	target		5203427	1					
ANR	5203498	Argument	strlen ( target )		5203427	1					
ANR	5203499	CallExpression	strlen ( target )		5203427	0					
ANR	5203500	Callee	strlen		5203427	0					
ANR	5203501	Identifier	strlen		5203427	0					
ANR	5203502	ArgumentList	target		5203427	1					
ANR	5203503	Argument	target		5203427	0					
ANR	5203504	Identifier	target		5203427	0					
ANR	5203505	Argument	( byte * ) mapfileenum -> pattern		5203427	2					
ANR	5203506	CastExpression	( byte * ) mapfileenum -> pattern		5203427	0					
ANR	5203507	CastTarget	byte *		5203427	0					
ANR	5203508	PtrMemberAccess	mapfileenum -> pattern		5203427	1					
ANR	5203509	Identifier	mapfileenum		5203427	0					
ANR	5203510	Identifier	pattern		5203427	1					
ANR	5203511	Argument	strlen ( mapfileenum -> pattern )		5203427	3					
ANR	5203512	CallExpression	strlen ( mapfileenum -> pattern )		5203427	0					
ANR	5203513	Callee	strlen		5203427	0					
ANR	5203514	Identifier	strlen		5203427	0					
ANR	5203515	ArgumentList	mapfileenum -> pattern		5203427	1					
ANR	5203516	Argument	mapfileenum -> pattern		5203427	0					
ANR	5203517	PtrMemberAccess	mapfileenum -> pattern		5203427	0					
ANR	5203518	Identifier	mapfileenum		5203427	0					
ANR	5203519	Identifier	pattern		5203427	1					
ANR	5203520	Argument	0		5203427	4					
ANR	5203521	PrimaryExpression	0		5203427	0					
ANR	5203522	ReturnStatement	return true ;	761:16:25125:25136	5203427	1	True				
ANR	5203523	Identifier	true		5203427	0					
ANR	5203524	ElseStatement	else		5203427	0					
ANR	5203525	CompoundStatement		21:9:594:594	5203427	0					
ANR	5203526	IfStatement	"if ( MapFileRead ( mapfileenum -> stream , target , & d ) )"		5203427	0					
ANR	5203527	Condition	"MapFileRead ( mapfileenum -> stream , target , & d )"	766:12:25206:25249	5203427	0	True				
ANR	5203528	CallExpression	"MapFileRead ( mapfileenum -> stream , target , & d )"		5203427	0					
ANR	5203529	Callee	MapFileRead		5203427	0					
ANR	5203530	Identifier	MapFileRead		5203427	0					
ANR	5203531	ArgumentList	mapfileenum -> stream		5203427	1					
ANR	5203532	Argument	mapfileenum -> stream		5203427	0					
ANR	5203533	PtrMemberAccess	mapfileenum -> stream		5203427	0					
ANR	5203534	Identifier	mapfileenum		5203427	0					
ANR	5203535	Identifier	stream		5203427	1					
ANR	5203536	Argument	target		5203427	1					
ANR	5203537	Identifier	target		5203427	0					
ANR	5203538	Argument	& d		5203427	2					
ANR	5203539	UnaryOperationExpression	& d		5203427	0					
ANR	5203540	UnaryOperator	&		5203427	0					
ANR	5203541	Identifier	d		5203427	1					
ANR	5203542	ReturnStatement	return true ;	767:12:25264:25275	5203427	1	True				
ANR	5203543	Identifier	true		5203427	0					
ANR	5203544	ReturnStatement	return false ;	769:4:25287:25299	5203427	6	True				
ANR	5203545	Identifier	false		5203427	0					
ANR	5203546	ReturnType	static bool		5203427	1					
ANR	5203547	Identifier	map_file_enum_next		5203427	2					
ANR	5203548	ParameterList	"void * enum_mem , char * target"		5203427	3					
ANR	5203549	Parameter	void * enum_mem	743:19:24537:24551	5203427	0	True				
ANR	5203550	ParameterType	void *		5203427	0					
ANR	5203551	Identifier	enum_mem		5203427	1					
ANR	5203552	Parameter	char * target	743:36:24554:24565	5203427	1	True				
ANR	5203553	ParameterType	char *		5203427	0					
ANR	5203554	Identifier	target		5203427	1					
ANR	5203555	CFGEntryNode	ENTRY		5203427		True				
ANR	5203556	CFGExitNode	EXIT		5203427		True				
ANR	5203557	Symbol	NULL		5203427						
ANR	5203558	Symbol	d		5203427						
ANR	5203559	Symbol	false		5203427						
ANR	5203560	Symbol	& d		5203427						
ANR	5203561	Symbol	* mapfileenum		5203427						
ANR	5203562	Symbol	mapfileenum		5203427						
ANR	5203563	Symbol	enum_mem		5203427						
ANR	5203564	Symbol	target		5203427						
ANR	5203565	Symbol	strlen		5203427						
ANR	5203566	Symbol	mapfileenum -> stream		5203427						
ANR	5203567	Symbol	string_match		5203427						
ANR	5203568	Symbol	true		5203427						
ANR	5203569	Symbol	mapfileenum -> pattern		5203427						
ANR	5203570	Symbol	MapFileRead		5203427						
ANR	5203571	Function	map_file_enum_close	778:0:25434:25938							
ANR	5203572	FunctionDef	map_file_enum_close (void * enum_mem)		5203571	0					
ANR	5203573	CompoundStatement		780:0:25483:25938	5203571	0					
ANR	5203574	IdentifierDeclStatement	map_file_enum * mapfileenum = ( map_file_enum * ) enum_mem ;	781:4:25489:25545	5203571	0	True				
ANR	5203575	IdentifierDecl	* mapfileenum = ( map_file_enum * ) enum_mem		5203571	0					
ANR	5203576	IdentifierDeclType	map_file_enum *		5203571	0					
ANR	5203577	Identifier	mapfileenum		5203571	1					
ANR	5203578	AssignmentExpression	* mapfileenum = ( map_file_enum * ) enum_mem		5203571	2		=			
ANR	5203579	Identifier	mapfileenum		5203571	0					
ANR	5203580	CastExpression	( map_file_enum * ) enum_mem		5203571	1					
ANR	5203581	CastTarget	map_file_enum *		5203571	0					
ANR	5203582	Identifier	enum_mem		5203571	1					
ANR	5203583	IdentifierDeclStatement	gs_memory_t * mem = mapfileenum -> memory ;	782:4:25551:25590	5203571	1	True				
ANR	5203584	IdentifierDecl	* mem = mapfileenum -> memory		5203571	0					
ANR	5203585	IdentifierDeclType	gs_memory_t *		5203571	0					
ANR	5203586	Identifier	mem		5203571	1					
ANR	5203587	AssignmentExpression	* mem = mapfileenum -> memory		5203571	2		=			
ANR	5203588	Identifier	mem		5203571	0					
ANR	5203589	PtrMemberAccess	mapfileenum -> memory		5203571	1					
ANR	5203590	Identifier	mapfileenum		5203571	0					
ANR	5203591	Identifier	memory		5203571	1					
ANR	5203592	IfStatement	if ( mapfileenum -> stream )		5203571	2					
ANR	5203593	Condition	mapfileenum -> stream	784:8:25601:25619	5203571	0	True				
ANR	5203594	PtrMemberAccess	mapfileenum -> stream		5203571	0					
ANR	5203595	Identifier	mapfileenum		5203571	0					
ANR	5203596	Identifier	stream		5203571	1					
ANR	5203597	ExpressionStatement	fclose ( mapfileenum -> stream )	785:8:25630:25657	5203571	1	True				
ANR	5203598	CallExpression	fclose ( mapfileenum -> stream )		5203571	0					
ANR	5203599	Callee	fclose		5203571	0					
ANR	5203600	Identifier	fclose		5203571	0					
ANR	5203601	ArgumentList	mapfileenum -> stream		5203571	1					
ANR	5203602	Argument	mapfileenum -> stream		5203571	0					
ANR	5203603	PtrMemberAccess	mapfileenum -> stream		5203571	0					
ANR	5203604	Identifier	mapfileenum		5203571	0					
ANR	5203605	Identifier	stream		5203571	1					
ANR	5203606	IfStatement	if ( mapfileenum -> root )		5203571	3					
ANR	5203607	Condition	mapfileenum -> root	786:8:25667:25683	5203571	0	True				
ANR	5203608	PtrMemberAccess	mapfileenum -> root		5203571	0					
ANR	5203609	Identifier	mapfileenum		5203571	0					
ANR	5203610	Identifier	root		5203571	1					
ANR	5203611	ExpressionStatement	"gs_free_object ( mem , mapfileenum -> root , ""diskn_enum_init(root)"" )"	787:8:25694:25757	5203571	1	True				
ANR	5203612	CallExpression	"gs_free_object ( mem , mapfileenum -> root , ""diskn_enum_init(root)"" )"		5203571	0					
ANR	5203613	Callee	gs_free_object		5203571	0					
ANR	5203614	Identifier	gs_free_object		5203571	0					
ANR	5203615	ArgumentList	mem		5203571	1					
ANR	5203616	Argument	mem		5203571	0					
ANR	5203617	Identifier	mem		5203571	0					
ANR	5203618	Argument	mapfileenum -> root		5203571	1					
ANR	5203619	PtrMemberAccess	mapfileenum -> root		5203571	0					
ANR	5203620	Identifier	mapfileenum		5203571	0					
ANR	5203621	Identifier	root		5203571	1					
ANR	5203622	Argument	"""diskn_enum_init(root)"""		5203571	2					
ANR	5203623	PrimaryExpression	"""diskn_enum_init(root)"""		5203571	0					
ANR	5203624	IfStatement	if ( mapfileenum -> pattern )		5203571	4					
ANR	5203625	Condition	mapfileenum -> pattern	788:8:25767:25786	5203571	0	True				
ANR	5203626	PtrMemberAccess	mapfileenum -> pattern		5203571	0					
ANR	5203627	Identifier	mapfileenum		5203571	0					
ANR	5203628	Identifier	pattern		5203571	1					
ANR	5203629	ExpressionStatement	"gs_free_object ( mem , mapfileenum -> pattern , ""diskn_enum_init(pattern)"" )"	789:8:25797:25866	5203571	1	True				
ANR	5203630	CallExpression	"gs_free_object ( mem , mapfileenum -> pattern , ""diskn_enum_init(pattern)"" )"		5203571	0					
ANR	5203631	Callee	gs_free_object		5203571	0					
ANR	5203632	Identifier	gs_free_object		5203571	0					
ANR	5203633	ArgumentList	mem		5203571	1					
ANR	5203634	Argument	mem		5203571	0					
ANR	5203635	Identifier	mem		5203571	0					
ANR	5203636	Argument	mapfileenum -> pattern		5203571	1					
ANR	5203637	PtrMemberAccess	mapfileenum -> pattern		5203571	0					
ANR	5203638	Identifier	mapfileenum		5203571	0					
ANR	5203639	Identifier	pattern		5203571	1					
ANR	5203640	Argument	"""diskn_enum_init(pattern)"""		5203571	2					
ANR	5203641	PrimaryExpression	"""diskn_enum_init(pattern)"""		5203571	0					
ANR	5203642	ExpressionStatement	"gs_free_object ( mem , mapfileenum , ""diskn_enum_init(mapfileenum)"" )"	790:4:25872:25936	5203571	5	True				
ANR	5203643	CallExpression	"gs_free_object ( mem , mapfileenum , ""diskn_enum_init(mapfileenum)"" )"		5203571	0					
ANR	5203644	Callee	gs_free_object		5203571	0					
ANR	5203645	Identifier	gs_free_object		5203571	0					
ANR	5203646	ArgumentList	mem		5203571	1					
ANR	5203647	Argument	mem		5203571	0					
ANR	5203648	Identifier	mem		5203571	0					
ANR	5203649	Argument	mapfileenum		5203571	1					
ANR	5203650	Identifier	mapfileenum		5203571	0					
ANR	5203651	Argument	"""diskn_enum_init(mapfileenum)"""		5203571	2					
ANR	5203652	PrimaryExpression	"""diskn_enum_init(mapfileenum)"""		5203571	0					
ANR	5203653	ReturnType	static void		5203571	1					
ANR	5203654	Identifier	map_file_enum_close		5203571	2					
ANR	5203655	ParameterList	void * enum_mem		5203571	3					
ANR	5203656	Parameter	void * enum_mem	779:20:25466:25480	5203571	0	True				
ANR	5203657	ParameterType	void *		5203571	0					
ANR	5203658	Identifier	enum_mem		5203571	1					
ANR	5203659	CFGEntryNode	ENTRY		5203571		True				
ANR	5203660	CFGExitNode	EXIT		5203571		True				
ANR	5203661	Symbol	mapfileenum -> memory		5203571						
ANR	5203662	Symbol	mem		5203571						
ANR	5203663	Symbol	mapfileenum -> stream		5203571						
ANR	5203664	Symbol	* mapfileenum		5203571						
ANR	5203665	Symbol	mapfileenum		5203571						
ANR	5203666	Symbol	mapfileenum -> pattern		5203571						
ANR	5203667	Symbol	mapfileenum -> root		5203571						
ANR	5203668	Symbol	enum_mem		5203571						
ANR	5203669	Function	map_file_name_get	804:0:26405:26838							
ANR	5203670	FunctionDef	"map_file_name_get (gs_memory_t * mem , const char * root_name , const char * Fname , char * osname)"		5203669	0					
ANR	5203671	CompoundStatement		806:0:26512:26838	5203669	0					
ANR	5203672	IdentifierDeclStatement	"int d = MapToFile ( mem , root_name , Fname ) ;"	807:4:26518:26558	5203669	0	True				
ANR	5203673	IdentifierDecl	"d = MapToFile ( mem , root_name , Fname )"		5203669	0					
ANR	5203674	IdentifierDeclType	int		5203669	0					
ANR	5203675	Identifier	d		5203669	1					
ANR	5203676	AssignmentExpression	"d = MapToFile ( mem , root_name , Fname )"		5203669	2		=			
ANR	5203677	Identifier	d		5203669	0					
ANR	5203678	CallExpression	"MapToFile ( mem , root_name , Fname )"		5203669	1					
ANR	5203679	Callee	MapToFile		5203669	0					
ANR	5203680	Identifier	MapToFile		5203669	0					
ANR	5203681	ArgumentList	mem		5203669	1					
ANR	5203682	Argument	mem		5203669	0					
ANR	5203683	Identifier	mem		5203669	0					
ANR	5203684	Argument	root_name		5203669	1					
ANR	5203685	Identifier	root_name		5203669	0					
ANR	5203686	Argument	Fname		5203669	2					
ANR	5203687	Identifier	Fname		5203669	0					
ANR	5203688	IfStatement	if ( d != - 1 )		5203669	1					
ANR	5203689	Condition	d != - 1	809:8:26569:26575	5203669	0	True				
ANR	5203690	EqualityExpression	d != - 1		5203669	0		!=			
ANR	5203691	Identifier	d		5203669	0					
ANR	5203692	UnaryOperationExpression	- 1		5203669	1					
ANR	5203693	UnaryOperator	-		5203669	0					
ANR	5203694	PrimaryExpression	1		5203669	1					
ANR	5203695	CompoundStatement		4:17:65:65	5203669	1					
ANR	5203696	IfStatement	if ( ( strlen ( root_name ) + 20 ) < gp_file_name_sizeof )		5203669	0					
ANR	5203697	Condition	( strlen ( root_name ) + 20 ) < gp_file_name_sizeof	811:12:26657:26702	5203669	0	True				
ANR	5203698	RelationalExpression	( strlen ( root_name ) + 20 ) < gp_file_name_sizeof		5203669	0		<			
ANR	5203699	AdditiveExpression	strlen ( root_name ) + 20		5203669	0		+			
ANR	5203700	CallExpression	strlen ( root_name )		5203669	0					
ANR	5203701	Callee	strlen		5203669	0					
ANR	5203702	Identifier	strlen		5203669	0					
ANR	5203703	ArgumentList	root_name		5203669	1					
ANR	5203704	Argument	root_name		5203669	0					
ANR	5203705	Identifier	root_name		5203669	0					
ANR	5203706	PrimaryExpression	20		5203669	1					
ANR	5203707	Identifier	gp_file_name_sizeof		5203669	1					
ANR	5203708	CompoundStatement		6:60:192:192	5203669	1					
ANR	5203709	ExpressionStatement	"gs_sprintf ( osname , ""%s%d"" , root_name , d )"	812:12:26719:26759	5203669	0	True				
ANR	5203710	CallExpression	"gs_sprintf ( osname , ""%s%d"" , root_name , d )"		5203669	0					
ANR	5203711	Callee	gs_sprintf		5203669	0					
ANR	5203712	Identifier	gs_sprintf		5203669	0					
ANR	5203713	ArgumentList	osname		5203669	1					
ANR	5203714	Argument	osname		5203669	0					
ANR	5203715	Identifier	osname		5203669	0					
ANR	5203716	Argument	"""%s%d"""		5203669	1					
ANR	5203717	PrimaryExpression	"""%s%d"""		5203669	0					
ANR	5203718	Argument	root_name		5203669	2					
ANR	5203719	Identifier	root_name		5203669	0					
ANR	5203720	Argument	d		5203669	3					
ANR	5203721	Identifier	d		5203669	0					
ANR	5203722	ReturnStatement	return true ;	813:12:26773:26784	5203669	1	True				
ANR	5203723	Identifier	true		5203669	0					
ANR	5203724	ExpressionStatement	* osname = 0	817:4:26807:26818	5203669	2	True				
ANR	5203725	AssignmentExpression	* osname = 0		5203669	0		=			
ANR	5203726	UnaryOperationExpression	* osname		5203669	0					
ANR	5203727	UnaryOperator	*		5203669	0					
ANR	5203728	Identifier	osname		5203669	1					
ANR	5203729	PrimaryExpression	0		5203669	1					
ANR	5203730	ReturnStatement	return false ;	818:4:26824:26836	5203669	3	True				
ANR	5203731	Identifier	false		5203669	0					
ANR	5203732	ReturnType	static bool		5203669	1					
ANR	5203733	Identifier	map_file_name_get		5203669	2					
ANR	5203734	ParameterList	"gs_memory_t * mem , const char * root_name , const char * Fname , char * osname"		5203669	3					
ANR	5203735	Parameter	gs_memory_t * mem	805:18:26435:26450	5203669	0	True				
ANR	5203736	ParameterType	gs_memory_t *		5203669	0					
ANR	5203737	Identifier	mem		5203669	1					
ANR	5203738	Parameter	const char * root_name	805:36:26453:26474	5203669	1	True				
ANR	5203739	ParameterType	const char *		5203669	0					
ANR	5203740	Identifier	root_name		5203669	1					
ANR	5203741	Parameter	const char * Fname	805:60:26477:26494	5203669	2	True				
ANR	5203742	ParameterType	const char *		5203669	0					
ANR	5203743	Identifier	Fname		5203669	1					
ANR	5203744	Parameter	char * osname	805:80:26497:26509	5203669	3	True				
ANR	5203745	ParameterType	char *		5203669	0					
ANR	5203746	Identifier	osname		5203669	1					
ANR	5203747	CFGEntryNode	ENTRY		5203669		True				
ANR	5203748	CFGExitNode	EXIT		5203669		True				
ANR	5203749	Symbol	strlen		5203669						
ANR	5203750	Symbol	mem		5203669						
ANR	5203751	Symbol	d		5203669						
ANR	5203752	Symbol	MapToFile		5203669						
ANR	5203753	Symbol	root_name		5203669						
ANR	5203754	Symbol	true		5203669						
ANR	5203755	Symbol	false		5203669						
ANR	5203756	Symbol	gp_file_name_sizeof		5203669						
ANR	5203757	Symbol	Fname		5203669						
ANR	5203758	Symbol	osname		5203669						
ANR	5203759	Symbol	* osname		5203669						
ANR	5203760	Function	map_file_name_del	829:0:27155:28849							
ANR	5203761	FunctionDef	"map_file_name_del (gs_memory_t * mem , const char * root_name , const char * Fname)"		5203760	0					
ANR	5203762	CompoundStatement		831:0:27247:28849	5203760	0					
ANR	5203763	IdentifierDeclStatement	"int d = MapToFile ( mem , root_name , Fname ) ;"	833:4:27288:27328	5203760	0	True				
ANR	5203764	IdentifierDecl	"d = MapToFile ( mem , root_name , Fname )"		5203760	0					
ANR	5203765	IdentifierDeclType	int		5203760	0					
ANR	5203766	Identifier	d		5203760	1					
ANR	5203767	AssignmentExpression	"d = MapToFile ( mem , root_name , Fname )"		5203760	2		=			
ANR	5203768	Identifier	d		5203760	0					
ANR	5203769	CallExpression	"MapToFile ( mem , root_name , Fname )"		5203760	1					
ANR	5203770	Callee	MapToFile		5203760	0					
ANR	5203771	Identifier	MapToFile		5203760	0					
ANR	5203772	ArgumentList	mem		5203760	1					
ANR	5203773	Argument	mem		5203760	0					
ANR	5203774	Identifier	mem		5203760	0					
ANR	5203775	Argument	root_name		5203760	1					
ANR	5203776	Identifier	root_name		5203760	0					
ANR	5203777	Argument	Fname		5203760	2					
ANR	5203778	Identifier	Fname		5203760	0					
ANR	5203779	IdentifierDeclStatement	int file_version ;	834:4:27334:27350	5203760	1	True				
ANR	5203780	IdentifierDecl	file_version		5203760	0					
ANR	5203781	IdentifierDeclType	int		5203760	0					
ANR	5203782	Identifier	file_version		5203760	1					
ANR	5203783	IdentifierDeclStatement	char * name = NULL ;	835:4:27356:27373	5203760	2	True				
ANR	5203784	IdentifierDecl	* name = NULL		5203760	0					
ANR	5203785	IdentifierDeclType	char *		5203760	0					
ANR	5203786	Identifier	name		5203760	1					
ANR	5203787	AssignmentExpression	* name = NULL		5203760	2		=			
ANR	5203788	Identifier	NULL		5203760	0					
ANR	5203789	Identifier	NULL		5203760	1					
ANR	5203790	ExpressionStatement	"name = ( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_del(name)"" )"	837:4:27380:27462	5203760	3	True				
ANR	5203791	AssignmentExpression	"name = ( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_del(name)"" )"		5203760	0		=			
ANR	5203792	Identifier	name		5203760	0					
ANR	5203793	CastExpression	"( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_del(name)"" )"		5203760	1					
ANR	5203794	CastTarget	char *		5203760	0					
ANR	5203795	CallExpression	"gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_del(name)"" )"		5203760	1					
ANR	5203796	Callee	gs_alloc_bytes		5203760	0					
ANR	5203797	Identifier	gs_alloc_bytes		5203760	0					
ANR	5203798	ArgumentList	mem		5203760	1					
ANR	5203799	Argument	mem		5203760	0					
ANR	5203800	Identifier	mem		5203760	0					
ANR	5203801	Argument	gp_file_name_sizeof		5203760	1					
ANR	5203802	Identifier	gp_file_name_sizeof		5203760	0					
ANR	5203803	Argument	"""map_file_name_del(name)"""		5203760	2					
ANR	5203804	PrimaryExpression	"""map_file_name_del(name)"""		5203760	0					
ANR	5203805	IfStatement	if ( name && d != - 1 )		5203760	4					
ANR	5203806	Condition	name && d != - 1	839:8:27473:27487	5203760	0	True				
ANR	5203807	AndExpression	name && d != - 1		5203760	0		&&			
ANR	5203808	Identifier	name		5203760	0					
ANR	5203809	EqualityExpression	d != - 1		5203760	1		!=			
ANR	5203810	Identifier	d		5203760	0					
ANR	5203811	UnaryOperationExpression	- 1		5203760	1					
ANR	5203812	UnaryOperator	-		5203760	0					
ANR	5203813	PrimaryExpression	1		5203760	1					
ANR	5203814	CompoundStatement		11:8:308:322	5203760	1					
ANR	5203815	IdentifierDeclStatement	FILE * newMap ;	840:8:27532:27546	5203760	0	True				
ANR	5203816	IdentifierDecl	* newMap		5203760	0					
ANR	5203817	IdentifierDeclType	FILE *		5203760	0					
ANR	5203818	Identifier	newMap		5203760	1					
ANR	5203819	IdentifierDeclStatement	FILE * oldMap ;	841:8:27556:27570	5203760	1	True				
ANR	5203820	IdentifierDecl	* oldMap		5203760	0					
ANR	5203821	IdentifierDeclType	FILE *		5203760	0					
ANR	5203822	Identifier	oldMap		5203760	1					
ANR	5203823	ExpressionStatement	"MapFileUnlink ( mem , root_name , TEMP_FILE_NAME )"	845:8:27637:27683	5203760	2	True				
ANR	5203824	CallExpression	"MapFileUnlink ( mem , root_name , TEMP_FILE_NAME )"		5203760	0					
ANR	5203825	Callee	MapFileUnlink		5203760	0					
ANR	5203826	Identifier	MapFileUnlink		5203760	0					
ANR	5203827	ArgumentList	mem		5203760	1					
ANR	5203828	Argument	mem		5203760	0					
ANR	5203829	Identifier	mem		5203760	0					
ANR	5203830	Argument	root_name		5203760	1					
ANR	5203831	Identifier	root_name		5203760	0					
ANR	5203832	Argument	TEMP_FILE_NAME		5203760	2					
ANR	5203833	Identifier	TEMP_FILE_NAME		5203760	0					
ANR	5203834	ExpressionStatement	"newMap = MapFileOpen ( mem , root_name , TEMP_FILE_NAME , ""w"" )"	846:8:27693:27750	5203760	3	True				
ANR	5203835	AssignmentExpression	"newMap = MapFileOpen ( mem , root_name , TEMP_FILE_NAME , ""w"" )"		5203760	0		=			
ANR	5203836	Identifier	newMap		5203760	0					
ANR	5203837	CallExpression	"MapFileOpen ( mem , root_name , TEMP_FILE_NAME , ""w"" )"		5203760	1					
ANR	5203838	Callee	MapFileOpen		5203760	0					
ANR	5203839	Identifier	MapFileOpen		5203760	0					
ANR	5203840	ArgumentList	mem		5203760	1					
ANR	5203841	Argument	mem		5203760	0					
ANR	5203842	Identifier	mem		5203760	0					
ANR	5203843	Argument	root_name		5203760	1					
ANR	5203844	Identifier	root_name		5203760	0					
ANR	5203845	Argument	TEMP_FILE_NAME		5203760	2					
ANR	5203846	Identifier	TEMP_FILE_NAME		5203760	0					
ANR	5203847	Argument	"""w"""		5203760	3					
ANR	5203848	PrimaryExpression	"""w"""		5203760	0					
ANR	5203849	IfStatement	if ( newMap == NULL )		5203760	4					
ANR	5203850	Condition	newMap == NULL	847:12:27764:27777	5203760	0	True				
ANR	5203851	EqualityExpression	newMap == NULL		5203760	0		==			
ANR	5203852	Identifier	newMap		5203760	0					
ANR	5203853	Identifier	NULL		5203760	1					
ANR	5203854	CompoundStatement		17:28:532:532	5203760	1					
ANR	5203855	ExpressionStatement	"gs_free_object ( mem , name , ""map_file_name_del(name)"" )"	848:12:27794:27847	5203760	0	True				
ANR	5203856	CallExpression	"gs_free_object ( mem , name , ""map_file_name_del(name)"" )"		5203760	0					
ANR	5203857	Callee	gs_free_object		5203760	0					
ANR	5203858	Identifier	gs_free_object		5203760	0					
ANR	5203859	ArgumentList	mem		5203760	1					
ANR	5203860	Argument	mem		5203760	0					
ANR	5203861	Identifier	mem		5203760	0					
ANR	5203862	Argument	name		5203760	1					
ANR	5203863	Identifier	name		5203760	0					
ANR	5203864	Argument	"""map_file_name_del(name)"""		5203760	2					
ANR	5203865	PrimaryExpression	"""map_file_name_del(name)"""		5203760	0					
ANR	5203866	ReturnStatement	return ;	849:12:27861:27867	5203760	1	True				
ANR	5203867	ExpressionStatement	"oldMap = MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"	851:8:27887:27943	5203760	5	True				
ANR	5203868	AssignmentExpression	"oldMap = MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"		5203760	0		=			
ANR	5203869	Identifier	oldMap		5203760	0					
ANR	5203870	CallExpression	"MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"		5203760	1					
ANR	5203871	Callee	MapFileOpen		5203760	0					
ANR	5203872	Identifier	MapFileOpen		5203760	0					
ANR	5203873	ArgumentList	mem		5203760	1					
ANR	5203874	Argument	mem		5203760	0					
ANR	5203875	Identifier	mem		5203760	0					
ANR	5203876	Argument	root_name		5203760	1					
ANR	5203877	Identifier	root_name		5203760	0					
ANR	5203878	Argument	MAP_FILE_NAME		5203760	2					
ANR	5203879	Identifier	MAP_FILE_NAME		5203760	0					
ANR	5203880	Argument	"""r"""		5203760	3					
ANR	5203881	PrimaryExpression	"""r"""		5203760	0					
ANR	5203882	IfStatement	"if ( oldMap != NULL && ( ! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION ) )"		5203760	6					
ANR	5203883	Condition	"oldMap != NULL && ( ! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION )"	852:12:27957:28066	5203760	0	True				
ANR	5203884	AndExpression	"oldMap != NULL && ( ! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION )"		5203760	0		&&			
ANR	5203885	EqualityExpression	oldMap != NULL		5203760	0		!=			
ANR	5203886	Identifier	oldMap		5203760	0					
ANR	5203887	Identifier	NULL		5203760	1					
ANR	5203888	OrExpression	"! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION"		5203760	1		||			
ANR	5203889	UnaryOperationExpression	"! MapFileReadVersion ( oldMap , & file_version )"		5203760	0					
ANR	5203890	UnaryOperator	!		5203760	0					
ANR	5203891	CallExpression	"MapFileReadVersion ( oldMap , & file_version )"		5203760	1					
ANR	5203892	Callee	MapFileReadVersion		5203760	0					
ANR	5203893	Identifier	MapFileReadVersion		5203760	0					
ANR	5203894	ArgumentList	oldMap		5203760	1					
ANR	5203895	Argument	oldMap		5203760	0					
ANR	5203896	Identifier	oldMap		5203760	0					
ANR	5203897	Argument	& file_version		5203760	1					
ANR	5203898	UnaryOperationExpression	& file_version		5203760	0					
ANR	5203899	UnaryOperator	&		5203760	0					
ANR	5203900	Identifier	file_version		5203760	1					
ANR	5203901	EqualityExpression	file_version != MAP_FILE_VERSION		5203760	1		!=			
ANR	5203902	Identifier	file_version		5203760	0					
ANR	5203903	Identifier	MAP_FILE_VERSION		5203760	1					
ANR	5203904	CompoundStatement		23:50:821:821	5203760	1					
ANR	5203905	ExpressionStatement	fclose ( oldMap )	854:12:28083:28097	5203760	0	True				
ANR	5203906	CallExpression	fclose ( oldMap )		5203760	0					
ANR	5203907	Callee	fclose		5203760	0					
ANR	5203908	Identifier	fclose		5203760	0					
ANR	5203909	ArgumentList	oldMap		5203760	1					
ANR	5203910	Argument	oldMap		5203760	0					
ANR	5203911	Identifier	oldMap		5203760	0					
ANR	5203912	ExpressionStatement	oldMap = NULL	855:12:28111:28123	5203760	1	True				
ANR	5203913	AssignmentExpression	oldMap = NULL		5203760	0		=			
ANR	5203914	Identifier	oldMap		5203760	0					
ANR	5203915	Identifier	NULL		5203760	1					
ANR	5203916	IfStatement	if ( oldMap == NULL )		5203760	7					
ANR	5203917	Condition	oldMap == NULL	857:12:28147:28160	5203760	0	True				
ANR	5203918	EqualityExpression	oldMap == NULL		5203760	0		==			
ANR	5203919	Identifier	oldMap		5203760	0					
ANR	5203920	Identifier	NULL		5203760	1					
ANR	5203921	CompoundStatement		27:28:915:915	5203760	1					
ANR	5203922	ExpressionStatement	"gs_free_object ( mem , name , ""map_file_name_del(name)"" )"	858:12:28177:28230	5203760	0	True				
ANR	5203923	CallExpression	"gs_free_object ( mem , name , ""map_file_name_del(name)"" )"		5203760	0					
ANR	5203924	Callee	gs_free_object		5203760	0					
ANR	5203925	Identifier	gs_free_object		5203760	0					
ANR	5203926	ArgumentList	mem		5203760	1					
ANR	5203927	Argument	mem		5203760	0					
ANR	5203928	Identifier	mem		5203760	0					
ANR	5203929	Argument	name		5203760	1					
ANR	5203930	Identifier	name		5203760	0					
ANR	5203931	Argument	"""map_file_name_del(name)"""		5203760	2					
ANR	5203932	PrimaryExpression	"""map_file_name_del(name)"""		5203760	0					
ANR	5203933	ExpressionStatement	fclose ( newMap )	859:12:28244:28258	5203760	1	True				
ANR	5203934	CallExpression	fclose ( newMap )		5203760	0					
ANR	5203935	Callee	fclose		5203760	0					
ANR	5203936	Identifier	fclose		5203760	0					
ANR	5203937	ArgumentList	newMap		5203760	1					
ANR	5203938	Argument	newMap		5203760	0					
ANR	5203939	Identifier	newMap		5203760	0					
ANR	5203940	ExpressionStatement	"MapFileUnlink ( mem , root_name , TEMP_FILE_NAME )"	860:12:28272:28317	5203760	2	True				
ANR	5203941	CallExpression	"MapFileUnlink ( mem , root_name , TEMP_FILE_NAME )"		5203760	0					
ANR	5203942	Callee	MapFileUnlink		5203760	0					
ANR	5203943	Identifier	MapFileUnlink		5203760	0					
ANR	5203944	ArgumentList	mem		5203760	1					
ANR	5203945	Argument	mem		5203760	0					
ANR	5203946	Identifier	mem		5203760	0					
ANR	5203947	Argument	root_name		5203760	1					
ANR	5203948	Identifier	root_name		5203760	0					
ANR	5203949	Argument	TEMP_FILE_NAME		5203760	2					
ANR	5203950	Identifier	TEMP_FILE_NAME		5203760	0					
ANR	5203951	ReturnStatement	return ;	861:12:28331:28337	5203760	3	True				
ANR	5203952	ExpressionStatement	"MapFileWriteVersion ( newMap , MAP_FILE_VERSION )"	866:8:28436:28481	5203760	8	True				
ANR	5203953	CallExpression	"MapFileWriteVersion ( newMap , MAP_FILE_VERSION )"		5203760	0					
ANR	5203954	Callee	MapFileWriteVersion		5203760	0					
ANR	5203955	Identifier	MapFileWriteVersion		5203760	0					
ANR	5203956	ArgumentList	newMap		5203760	1					
ANR	5203957	Argument	newMap		5203760	0					
ANR	5203958	Identifier	newMap		5203760	0					
ANR	5203959	Argument	MAP_FILE_VERSION		5203760	1					
ANR	5203960	Identifier	MAP_FILE_VERSION		5203760	0					
ANR	5203961	WhileStatement	"while ( MapFileRead ( oldMap , name , & d ) )"		5203760	9					
ANR	5203962	Condition	"MapFileRead ( oldMap , name , & d )"	867:15:28498:28526	5203760	0	True				
ANR	5203963	CallExpression	"MapFileRead ( oldMap , name , & d )"		5203760	0					
ANR	5203964	Callee	MapFileRead		5203760	0					
ANR	5203965	Identifier	MapFileRead		5203760	0					
ANR	5203966	ArgumentList	oldMap		5203760	1					
ANR	5203967	Argument	oldMap		5203760	0					
ANR	5203968	Identifier	oldMap		5203760	0					
ANR	5203969	Argument	name		5203760	1					
ANR	5203970	Identifier	name		5203760	0					
ANR	5203971	Argument	& d		5203760	2					
ANR	5203972	UnaryOperationExpression	& d		5203760	0					
ANR	5203973	UnaryOperator	&		5203760	0					
ANR	5203974	Identifier	d		5203760	1					
ANR	5203975	IfStatement	"if ( strcmp ( name , Fname ) )"		5203760	1					
ANR	5203976	Condition	"strcmp ( name , Fname )"	868:16:28545:28563	5203760	0	True				
ANR	5203977	CallExpression	"strcmp ( name , Fname )"		5203760	0					
ANR	5203978	Callee	strcmp		5203760	0					
ANR	5203979	Identifier	strcmp		5203760	0					
ANR	5203980	ArgumentList	name		5203760	1					
ANR	5203981	Argument	name		5203760	0					
ANR	5203982	Identifier	name		5203760	0					
ANR	5203983	Argument	Fname		5203760	1					
ANR	5203984	Identifier	Fname		5203760	0					
ANR	5203985	ExpressionStatement	"MapFileWrite ( newMap , name , d )"	869:16:28582:28611	5203760	1	True				
ANR	5203986	CallExpression	"MapFileWrite ( newMap , name , d )"		5203760	0					
ANR	5203987	Callee	MapFileWrite		5203760	0					
ANR	5203988	Identifier	MapFileWrite		5203760	0					
ANR	5203989	ArgumentList	newMap		5203760	1					
ANR	5203990	Argument	newMap		5203760	0					
ANR	5203991	Identifier	newMap		5203760	0					
ANR	5203992	Argument	name		5203760	1					
ANR	5203993	Identifier	name		5203760	0					
ANR	5203994	Argument	d		5203760	2					
ANR	5203995	Identifier	d		5203760	0					
ANR	5203996	ExpressionStatement	fclose ( newMap )	870:8:28621:28635	5203760	10	True				
ANR	5203997	CallExpression	fclose ( newMap )		5203760	0					
ANR	5203998	Callee	fclose		5203760	0					
ANR	5203999	Identifier	fclose		5203760	0					
ANR	5204000	ArgumentList	newMap		5203760	1					
ANR	5204001	Argument	newMap		5203760	0					
ANR	5204002	Identifier	newMap		5203760	0					
ANR	5204003	ExpressionStatement	fclose ( oldMap )	871:8:28645:28659	5203760	11	True				
ANR	5204004	CallExpression	fclose ( oldMap )		5203760	0					
ANR	5204005	Callee	fclose		5203760	0					
ANR	5204006	Identifier	fclose		5203760	0					
ANR	5204007	ArgumentList	oldMap		5203760	1					
ANR	5204008	Argument	oldMap		5203760	0					
ANR	5204009	Identifier	oldMap		5203760	0					
ANR	5204010	ExpressionStatement	"MapFileUnlink ( mem , root_name , MAP_FILE_NAME )"	872:8:28669:28713	5203760	12	True				
ANR	5204011	CallExpression	"MapFileUnlink ( mem , root_name , MAP_FILE_NAME )"		5203760	0					
ANR	5204012	Callee	MapFileUnlink		5203760	0					
ANR	5204013	Identifier	MapFileUnlink		5203760	0					
ANR	5204014	ArgumentList	mem		5203760	1					
ANR	5204015	Argument	mem		5203760	0					
ANR	5204016	Identifier	mem		5203760	0					
ANR	5204017	Argument	root_name		5203760	1					
ANR	5204018	Identifier	root_name		5203760	0					
ANR	5204019	Argument	MAP_FILE_NAME		5203760	2					
ANR	5204020	Identifier	MAP_FILE_NAME		5203760	0					
ANR	5204021	ExpressionStatement	"MapFileRename ( mem , root_name , MAP_FILE_NAME , TEMP_FILE_NAME )"	873:8:28723:28783	5203760	13	True				
ANR	5204022	CallExpression	"MapFileRename ( mem , root_name , MAP_FILE_NAME , TEMP_FILE_NAME )"		5203760	0					
ANR	5204023	Callee	MapFileRename		5203760	0					
ANR	5204024	Identifier	MapFileRename		5203760	0					
ANR	5204025	ArgumentList	mem		5203760	1					
ANR	5204026	Argument	mem		5203760	0					
ANR	5204027	Identifier	mem		5203760	0					
ANR	5204028	Argument	root_name		5203760	1					
ANR	5204029	Identifier	root_name		5203760	0					
ANR	5204030	Argument	MAP_FILE_NAME		5203760	2					
ANR	5204031	Identifier	MAP_FILE_NAME		5203760	0					
ANR	5204032	Argument	TEMP_FILE_NAME		5203760	3					
ANR	5204033	Identifier	TEMP_FILE_NAME		5203760	0					
ANR	5204034	ExpressionStatement	"gs_free_object ( mem , name , ""map_file_name_del(name)"" )"	875:4:28795:28847	5203760	5	True				
ANR	5204035	CallExpression	"gs_free_object ( mem , name , ""map_file_name_del(name)"" )"		5203760	0					
ANR	5204036	Callee	gs_free_object		5203760	0					
ANR	5204037	Identifier	gs_free_object		5203760	0					
ANR	5204038	ArgumentList	mem		5203760	1					
ANR	5204039	Argument	mem		5203760	0					
ANR	5204040	Identifier	mem		5203760	0					
ANR	5204041	Argument	name		5203760	1					
ANR	5204042	Identifier	name		5203760	0					
ANR	5204043	Argument	"""map_file_name_del(name)"""		5203760	2					
ANR	5204044	PrimaryExpression	"""map_file_name_del(name)"""		5203760	0					
ANR	5204045	ReturnType	static void		5203760	1					
ANR	5204046	Identifier	map_file_name_del		5203760	2					
ANR	5204047	ParameterList	"gs_memory_t * mem , const char * root_name , const char * Fname"		5203760	3					
ANR	5204048	Parameter	gs_memory_t * mem	830:18:27185:27200	5203760	0	True				
ANR	5204049	ParameterType	gs_memory_t *		5203760	0					
ANR	5204050	Identifier	mem		5203760	1					
ANR	5204051	Parameter	const char * root_name	830:36:27203:27224	5203760	1	True				
ANR	5204052	ParameterType	const char *		5203760	0					
ANR	5204053	Identifier	root_name		5203760	1					
ANR	5204054	Parameter	const char * Fname	830:60:27227:27244	5203760	2	True				
ANR	5204055	ParameterType	const char *		5203760	0					
ANR	5204056	Identifier	Fname		5203760	1					
ANR	5204057	CFGEntryNode	ENTRY		5203760		True				
ANR	5204058	CFGExitNode	EXIT		5203760		True				
ANR	5204059	Symbol	file_version		5203760						
ANR	5204060	Symbol	strcmp		5203760						
ANR	5204061	Symbol	gs_alloc_bytes		5203760						
ANR	5204062	Symbol	TEMP_FILE_NAME		5203760						
ANR	5204063	Symbol	NULL		5203760						
ANR	5204064	Symbol	d		5203760						
ANR	5204065	Symbol	MapFileReadVersion		5203760						
ANR	5204066	Symbol	MapToFile		5203760						
ANR	5204067	Symbol	MAP_FILE_VERSION		5203760						
ANR	5204068	Symbol	root_name		5203760						
ANR	5204069	Symbol	newMap		5203760						
ANR	5204070	Symbol	gp_file_name_sizeof		5203760						
ANR	5204071	Symbol	& d		5203760						
ANR	5204072	Symbol	MAP_FILE_NAME		5203760						
ANR	5204073	Symbol	MapFileOpen		5203760						
ANR	5204074	Symbol	& file_version		5203760						
ANR	5204075	Symbol	mem		5203760						
ANR	5204076	Symbol	name		5203760						
ANR	5204077	Symbol	Fname		5203760						
ANR	5204078	Symbol	MapFileRead		5203760						
ANR	5204079	Symbol	oldMap		5203760						
ANR	5204080	Function	map_file_name_add	886:0:29163:30946							
ANR	5204081	FunctionDef	"map_file_name_add (gs_memory_t * mem , const char * root_name , const char * Fname)"		5204080	0					
ANR	5204082	CompoundStatement		888:0:29255:30946	5204080	0					
ANR	5204083	IdentifierDeclStatement	char * name = NULL ;	893:4:29360:29377	5204080	0	True				
ANR	5204084	IdentifierDecl	* name = NULL		5204080	0					
ANR	5204085	IdentifierDeclType	char *		5204080	0					
ANR	5204086	Identifier	name		5204080	1					
ANR	5204087	AssignmentExpression	* name = NULL		5204080	2		=			
ANR	5204088	Identifier	NULL		5204080	0					
ANR	5204089	Identifier	NULL		5204080	1					
ANR	5204090	IdentifierDeclStatement	int d ;	894:4:29383:29388	5204080	1	True				
ANR	5204091	IdentifierDecl	d		5204080	0					
ANR	5204092	IdentifierDeclType	int		5204080	0					
ANR	5204093	Identifier	d		5204080	1					
ANR	5204094	IdentifierDeclStatement	int dmax = - 1 ;	895:4:29394:29407	5204080	2	True				
ANR	5204095	IdentifierDecl	dmax = - 1		5204080	0					
ANR	5204096	IdentifierDeclType	int		5204080	0					
ANR	5204097	Identifier	dmax		5204080	1					
ANR	5204098	AssignmentExpression	dmax = - 1		5204080	2		=			
ANR	5204099	Identifier	dmax		5204080	0					
ANR	5204100	UnaryOperationExpression	- 1		5204080	1					
ANR	5204101	UnaryOperator	-		5204080	0					
ANR	5204102	PrimaryExpression	1		5204080	1					
ANR	5204103	IdentifierDeclStatement	int file_version ;	896:4:29413:29429	5204080	3	True				
ANR	5204104	IdentifierDecl	file_version		5204080	0					
ANR	5204105	IdentifierDeclType	int		5204080	0					
ANR	5204106	Identifier	file_version		5204080	1					
ANR	5204107	IdentifierDeclStatement	FILE * newMap ;	897:4:29435:29449	5204080	4	True				
ANR	5204108	IdentifierDecl	* newMap		5204080	0					
ANR	5204109	IdentifierDeclType	FILE *		5204080	0					
ANR	5204110	Identifier	newMap		5204080	1					
ANR	5204111	IdentifierDeclStatement	FILE * oldMap ;	898:4:29455:29469	5204080	5	True				
ANR	5204112	IdentifierDecl	* oldMap		5204080	0					
ANR	5204113	IdentifierDeclType	FILE *		5204080	0					
ANR	5204114	Identifier	oldMap		5204080	1					
ANR	5204115	ExpressionStatement	"name = ( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_add(name)"" )"	900:4:29476:29558	5204080	6	True				
ANR	5204116	AssignmentExpression	"name = ( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_add(name)"" )"		5204080	0		=			
ANR	5204117	Identifier	name		5204080	0					
ANR	5204118	CastExpression	"( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_add(name)"" )"		5204080	1					
ANR	5204119	CastTarget	char *		5204080	0					
ANR	5204120	CallExpression	"gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_add(name)"" )"		5204080	1					
ANR	5204121	Callee	gs_alloc_bytes		5204080	0					
ANR	5204122	Identifier	gs_alloc_bytes		5204080	0					
ANR	5204123	ArgumentList	mem		5204080	1					
ANR	5204124	Argument	mem		5204080	0					
ANR	5204125	Identifier	mem		5204080	0					
ANR	5204126	Argument	gp_file_name_sizeof		5204080	1					
ANR	5204127	Identifier	gp_file_name_sizeof		5204080	0					
ANR	5204128	Argument	"""map_file_name_add(name)"""		5204080	2					
ANR	5204129	PrimaryExpression	"""map_file_name_add(name)"""		5204080	0					
ANR	5204130	IfStatement	if ( name )		5204080	7					
ANR	5204131	Condition	name	901:8:29568:29571	5204080	0	True				
ANR	5204132	Identifier	name		5204080	0					
ANR	5204133	CompoundStatement		14:14:318:318	5204080	1					
ANR	5204134	ExpressionStatement	"oldMap = MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"	902:8:29584:29640	5204080	0	True				
ANR	5204135	AssignmentExpression	"oldMap = MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"		5204080	0		=			
ANR	5204136	Identifier	oldMap		5204080	0					
ANR	5204137	CallExpression	"MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"		5204080	1					
ANR	5204138	Callee	MapFileOpen		5204080	0					
ANR	5204139	Identifier	MapFileOpen		5204080	0					
ANR	5204140	ArgumentList	mem		5204080	1					
ANR	5204141	Argument	mem		5204080	0					
ANR	5204142	Identifier	mem		5204080	0					
ANR	5204143	Argument	root_name		5204080	1					
ANR	5204144	Identifier	root_name		5204080	0					
ANR	5204145	Argument	MAP_FILE_NAME		5204080	2					
ANR	5204146	Identifier	MAP_FILE_NAME		5204080	0					
ANR	5204147	Argument	"""r"""		5204080	3					
ANR	5204148	PrimaryExpression	"""r"""		5204080	0					
ANR	5204149	IfStatement	"if ( oldMap != NULL && ( ! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION ) )"		5204080	1					
ANR	5204150	Condition	"oldMap != NULL && ( ! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION )"	903:12:29654:29763	5204080	0	True				
ANR	5204151	AndExpression	"oldMap != NULL && ( ! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION )"		5204080	0		&&			
ANR	5204152	EqualityExpression	oldMap != NULL		5204080	0		!=			
ANR	5204153	Identifier	oldMap		5204080	0					
ANR	5204154	Identifier	NULL		5204080	1					
ANR	5204155	OrExpression	"! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION"		5204080	1		||			
ANR	5204156	UnaryOperationExpression	"! MapFileReadVersion ( oldMap , & file_version )"		5204080	0					
ANR	5204157	UnaryOperator	!		5204080	0					
ANR	5204158	CallExpression	"MapFileReadVersion ( oldMap , & file_version )"		5204080	1					
ANR	5204159	Callee	MapFileReadVersion		5204080	0					
ANR	5204160	Identifier	MapFileReadVersion		5204080	0					
ANR	5204161	ArgumentList	oldMap		5204080	1					
ANR	5204162	Argument	oldMap		5204080	0					
ANR	5204163	Identifier	oldMap		5204080	0					
ANR	5204164	Argument	& file_version		5204080	1					
ANR	5204165	UnaryOperationExpression	& file_version		5204080	0					
ANR	5204166	UnaryOperator	&		5204080	0					
ANR	5204167	Identifier	file_version		5204080	1					
ANR	5204168	EqualityExpression	file_version != MAP_FILE_VERSION		5204080	1		!=			
ANR	5204169	Identifier	file_version		5204080	0					
ANR	5204170	Identifier	MAP_FILE_VERSION		5204080	1					
ANR	5204171	CompoundStatement		17:50:510:510	5204080	1					
ANR	5204172	ExpressionStatement	fclose ( oldMap )	905:12:29780:29794	5204080	0	True				
ANR	5204173	CallExpression	fclose ( oldMap )		5204080	0					
ANR	5204174	Callee	fclose		5204080	0					
ANR	5204175	Identifier	fclose		5204080	0					
ANR	5204176	ArgumentList	oldMap		5204080	1					
ANR	5204177	Argument	oldMap		5204080	0					
ANR	5204178	Identifier	oldMap		5204080	0					
ANR	5204179	ExpressionStatement	oldMap = NULL	906:12:29808:29821	5204080	1	True				
ANR	5204180	AssignmentExpression	oldMap = NULL		5204080	0		=			
ANR	5204181	Identifier	oldMap		5204080	0					
ANR	5204182	Identifier	NULL		5204080	1					
ANR	5204183	IfStatement	if ( oldMap == NULL )		5204080	2					
ANR	5204184	Condition	oldMap == NULL	908:12:29845:29858	5204080	0	True				
ANR	5204185	EqualityExpression	oldMap == NULL		5204080	0		==			
ANR	5204186	Identifier	oldMap		5204080	0					
ANR	5204187	Identifier	NULL		5204080	1					
ANR	5204188	CompoundStatement		21:28:605:605	5204080	1					
ANR	5204189	ExpressionStatement	"oldMap = MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""w"" )"	909:12:29875:29931	5204080	0	True				
ANR	5204190	AssignmentExpression	"oldMap = MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""w"" )"		5204080	0		=			
ANR	5204191	Identifier	oldMap		5204080	0					
ANR	5204192	CallExpression	"MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""w"" )"		5204080	1					
ANR	5204193	Callee	MapFileOpen		5204080	0					
ANR	5204194	Identifier	MapFileOpen		5204080	0					
ANR	5204195	ArgumentList	mem		5204080	1					
ANR	5204196	Argument	mem		5204080	0					
ANR	5204197	Identifier	mem		5204080	0					
ANR	5204198	Argument	root_name		5204080	1					
ANR	5204199	Identifier	root_name		5204080	0					
ANR	5204200	Argument	MAP_FILE_NAME		5204080	2					
ANR	5204201	Identifier	MAP_FILE_NAME		5204080	0					
ANR	5204202	Argument	"""w"""		5204080	3					
ANR	5204203	PrimaryExpression	"""w"""		5204080	0					
ANR	5204204	IfStatement	if ( ! oldMap )		5204080	1					
ANR	5204205	Condition	! oldMap	910:16:29949:29955	5204080	0	True				
ANR	5204206	UnaryOperationExpression	! oldMap		5204080	0					
ANR	5204207	UnaryOperator	!		5204080	0					
ANR	5204208	Identifier	oldMap		5204080	1					
ANR	5204209	ReturnStatement	return ;	911:16:29974:29980	5204080	1	True				
ANR	5204210	ExpressionStatement	"MapFileWriteVersion ( oldMap , MAP_FILE_VERSION )"	912:12:29994:30039	5204080	2	True				
ANR	5204211	CallExpression	"MapFileWriteVersion ( oldMap , MAP_FILE_VERSION )"		5204080	0					
ANR	5204212	Callee	MapFileWriteVersion		5204080	0					
ANR	5204213	Identifier	MapFileWriteVersion		5204080	0					
ANR	5204214	ArgumentList	oldMap		5204080	1					
ANR	5204215	Argument	oldMap		5204080	0					
ANR	5204216	Identifier	oldMap		5204080	0					
ANR	5204217	Argument	MAP_FILE_VERSION		5204080	1					
ANR	5204218	Identifier	MAP_FILE_VERSION		5204080	0					
ANR	5204219	ExpressionStatement	"MapFileWrite ( oldMap , Fname , InitialNumber )"	913:12:30053:30095	5204080	3	True				
ANR	5204220	CallExpression	"MapFileWrite ( oldMap , Fname , InitialNumber )"		5204080	0					
ANR	5204221	Callee	MapFileWrite		5204080	0					
ANR	5204222	Identifier	MapFileWrite		5204080	0					
ANR	5204223	ArgumentList	oldMap		5204080	1					
ANR	5204224	Argument	oldMap		5204080	0					
ANR	5204225	Identifier	oldMap		5204080	0					
ANR	5204226	Argument	Fname		5204080	1					
ANR	5204227	Identifier	Fname		5204080	0					
ANR	5204228	Argument	InitialNumber		5204080	2					
ANR	5204229	Identifier	InitialNumber		5204080	0					
ANR	5204230	ExpressionStatement	fclose ( oldMap )	914:12:30109:30123	5204080	4	True				
ANR	5204231	CallExpression	fclose ( oldMap )		5204080	0					
ANR	5204232	Callee	fclose		5204080	0					
ANR	5204233	Identifier	fclose		5204080	0					
ANR	5204234	ArgumentList	oldMap		5204080	1					
ANR	5204235	Argument	oldMap		5204080	0					
ANR	5204236	Identifier	oldMap		5204080	0					
ANR	5204237	ElseStatement	else		5204080	0					
ANR	5204238	CompoundStatement		29:13:892:892	5204080	0					
ANR	5204239	ExpressionStatement	"MapFileUnlink ( mem , root_name , TEMP_FILE_NAME )"	917:12:30162:30207	5204080	0	True				
ANR	5204240	CallExpression	"MapFileUnlink ( mem , root_name , TEMP_FILE_NAME )"		5204080	0					
ANR	5204241	Callee	MapFileUnlink		5204080	0					
ANR	5204242	Identifier	MapFileUnlink		5204080	0					
ANR	5204243	ArgumentList	mem		5204080	1					
ANR	5204244	Argument	mem		5204080	0					
ANR	5204245	Identifier	mem		5204080	0					
ANR	5204246	Argument	root_name		5204080	1					
ANR	5204247	Identifier	root_name		5204080	0					
ANR	5204248	Argument	TEMP_FILE_NAME		5204080	2					
ANR	5204249	Identifier	TEMP_FILE_NAME		5204080	0					
ANR	5204250	ExpressionStatement	"newMap = MapFileOpen ( mem , root_name , TEMP_FILE_NAME , ""w"" )"	918:12:30221:30278	5204080	1	True				
ANR	5204251	AssignmentExpression	"newMap = MapFileOpen ( mem , root_name , TEMP_FILE_NAME , ""w"" )"		5204080	0		=			
ANR	5204252	Identifier	newMap		5204080	0					
ANR	5204253	CallExpression	"MapFileOpen ( mem , root_name , TEMP_FILE_NAME , ""w"" )"		5204080	1					
ANR	5204254	Callee	MapFileOpen		5204080	0					
ANR	5204255	Identifier	MapFileOpen		5204080	0					
ANR	5204256	ArgumentList	mem		5204080	1					
ANR	5204257	Argument	mem		5204080	0					
ANR	5204258	Identifier	mem		5204080	0					
ANR	5204259	Argument	root_name		5204080	1					
ANR	5204260	Identifier	root_name		5204080	0					
ANR	5204261	Argument	TEMP_FILE_NAME		5204080	2					
ANR	5204262	Identifier	TEMP_FILE_NAME		5204080	0					
ANR	5204263	Argument	"""w"""		5204080	3					
ANR	5204264	PrimaryExpression	"""w"""		5204080	0					
ANR	5204265	IfStatement	if ( newMap != NULL )		5204080	2					
ANR	5204266	Condition	newMap != NULL	919:16:30296:30309	5204080	0	True				
ANR	5204267	EqualityExpression	newMap != NULL		5204080	0		!=			
ANR	5204268	Identifier	newMap		5204080	0					
ANR	5204269	Identifier	NULL		5204080	1					
ANR	5204270	CompoundStatement		32:32:1056:1056	5204080	1					
ANR	5204271	ExpressionStatement	"MapFileWriteVersion ( newMap , MAP_FILE_VERSION )"	920:16:30330:30375	5204080	0	True				
ANR	5204272	CallExpression	"MapFileWriteVersion ( newMap , MAP_FILE_VERSION )"		5204080	0					
ANR	5204273	Callee	MapFileWriteVersion		5204080	0					
ANR	5204274	Identifier	MapFileWriteVersion		5204080	0					
ANR	5204275	ArgumentList	newMap		5204080	1					
ANR	5204276	Argument	newMap		5204080	0					
ANR	5204277	Identifier	newMap		5204080	0					
ANR	5204278	Argument	MAP_FILE_VERSION		5204080	1					
ANR	5204279	Identifier	MAP_FILE_VERSION		5204080	0					
ANR	5204280	WhileStatement	"while ( MapFileRead ( oldMap , name , & d ) )"		5204080	1					
ANR	5204281	Condition	"MapFileRead ( oldMap , name , & d )"	921:23:30400:30428	5204080	0	True				
ANR	5204282	CallExpression	"MapFileRead ( oldMap , name , & d )"		5204080	0					
ANR	5204283	Callee	MapFileRead		5204080	0					
ANR	5204284	Identifier	MapFileRead		5204080	0					
ANR	5204285	ArgumentList	oldMap		5204080	1					
ANR	5204286	Argument	oldMap		5204080	0					
ANR	5204287	Identifier	oldMap		5204080	0					
ANR	5204288	Argument	name		5204080	1					
ANR	5204289	Identifier	name		5204080	0					
ANR	5204290	Argument	& d		5204080	2					
ANR	5204291	UnaryOperationExpression	& d		5204080	0					
ANR	5204292	UnaryOperator	&		5204080	0					
ANR	5204293	Identifier	d		5204080	1					
ANR	5204294	CompoundStatement		34:54:1175:1175	5204080	1					
ANR	5204295	ExpressionStatement	"MapFileWrite ( newMap , name , d )"	922:20:30453:30482	5204080	0	True				
ANR	5204296	CallExpression	"MapFileWrite ( newMap , name , d )"		5204080	0					
ANR	5204297	Callee	MapFileWrite		5204080	0					
ANR	5204298	Identifier	MapFileWrite		5204080	0					
ANR	5204299	ArgumentList	newMap		5204080	1					
ANR	5204300	Argument	newMap		5204080	0					
ANR	5204301	Identifier	newMap		5204080	0					
ANR	5204302	Argument	name		5204080	1					
ANR	5204303	Identifier	name		5204080	0					
ANR	5204304	Argument	d		5204080	2					
ANR	5204305	Identifier	d		5204080	0					
ANR	5204306	IfStatement	if ( dmax < d )		5204080	1					
ANR	5204307	Condition	dmax < d	923:24:30508:30515	5204080	0	True				
ANR	5204308	RelationalExpression	dmax < d		5204080	0		<			
ANR	5204309	Identifier	dmax		5204080	0					
ANR	5204310	Identifier	d		5204080	1					
ANR	5204311	ExpressionStatement	dmax = d	924:24:30542:30550	5204080	1	True				
ANR	5204312	AssignmentExpression	dmax = d		5204080	0		=			
ANR	5204313	Identifier	dmax		5204080	0					
ANR	5204314	Identifier	d		5204080	1					
ANR	5204315	ExpressionStatement	dmax += 1	927:16:30587:30596	5204080	2	True				
ANR	5204316	AssignmentExpression	dmax += 1		5204080	0		+=			
ANR	5204317	Identifier	dmax		5204080	0					
ANR	5204318	PrimaryExpression	1		5204080	1					
ANR	5204319	ExpressionStatement	"MapFileWrite ( newMap , Fname , dmax )"	928:16:30614:30647	5204080	3	True				
ANR	5204320	CallExpression	"MapFileWrite ( newMap , Fname , dmax )"		5204080	0					
ANR	5204321	Callee	MapFileWrite		5204080	0					
ANR	5204322	Identifier	MapFileWrite		5204080	0					
ANR	5204323	ArgumentList	newMap		5204080	1					
ANR	5204324	Argument	newMap		5204080	0					
ANR	5204325	Identifier	newMap		5204080	0					
ANR	5204326	Argument	Fname		5204080	1					
ANR	5204327	Identifier	Fname		5204080	0					
ANR	5204328	Argument	dmax		5204080	2					
ANR	5204329	Identifier	dmax		5204080	0					
ANR	5204330	ExpressionStatement	fclose ( newMap )	929:16:30665:30679	5204080	4	True				
ANR	5204331	CallExpression	fclose ( newMap )		5204080	0					
ANR	5204332	Callee	fclose		5204080	0					
ANR	5204333	Identifier	fclose		5204080	0					
ANR	5204334	ArgumentList	newMap		5204080	1					
ANR	5204335	Argument	newMap		5204080	0					
ANR	5204336	Identifier	newMap		5204080	0					
ANR	5204337	ExpressionStatement	fclose ( oldMap )	930:16:30697:30711	5204080	5	True				
ANR	5204338	CallExpression	fclose ( oldMap )		5204080	0					
ANR	5204339	Callee	fclose		5204080	0					
ANR	5204340	Identifier	fclose		5204080	0					
ANR	5204341	ArgumentList	oldMap		5204080	1					
ANR	5204342	Argument	oldMap		5204080	0					
ANR	5204343	Identifier	oldMap		5204080	0					
ANR	5204344	ExpressionStatement	"MapFileUnlink ( mem , root_name , MAP_FILE_NAME )"	931:16:30729:30773	5204080	6	True				
ANR	5204345	CallExpression	"MapFileUnlink ( mem , root_name , MAP_FILE_NAME )"		5204080	0					
ANR	5204346	Callee	MapFileUnlink		5204080	0					
ANR	5204347	Identifier	MapFileUnlink		5204080	0					
ANR	5204348	ArgumentList	mem		5204080	1					
ANR	5204349	Argument	mem		5204080	0					
ANR	5204350	Identifier	mem		5204080	0					
ANR	5204351	Argument	root_name		5204080	1					
ANR	5204352	Identifier	root_name		5204080	0					
ANR	5204353	Argument	MAP_FILE_NAME		5204080	2					
ANR	5204354	Identifier	MAP_FILE_NAME		5204080	0					
ANR	5204355	ExpressionStatement	"MapFileRename ( mem , root_name , MAP_FILE_NAME , TEMP_FILE_NAME )"	932:16:30791:30851	5204080	7	True				
ANR	5204356	CallExpression	"MapFileRename ( mem , root_name , MAP_FILE_NAME , TEMP_FILE_NAME )"		5204080	0					
ANR	5204357	Callee	MapFileRename		5204080	0					
ANR	5204358	Identifier	MapFileRename		5204080	0					
ANR	5204359	ArgumentList	mem		5204080	1					
ANR	5204360	Argument	mem		5204080	0					
ANR	5204361	Identifier	mem		5204080	0					
ANR	5204362	Argument	root_name		5204080	1					
ANR	5204363	Identifier	root_name		5204080	0					
ANR	5204364	Argument	MAP_FILE_NAME		5204080	2					
ANR	5204365	Identifier	MAP_FILE_NAME		5204080	0					
ANR	5204366	Argument	TEMP_FILE_NAME		5204080	3					
ANR	5204367	Identifier	TEMP_FILE_NAME		5204080	0					
ANR	5204368	ExpressionStatement	"gs_free_object ( mem , name , ""map_file_name_add(name)"" )"	935:8:30885:30938	5204080	3	True				
ANR	5204369	CallExpression	"gs_free_object ( mem , name , ""map_file_name_add(name)"" )"		5204080	0					
ANR	5204370	Callee	gs_free_object		5204080	0					
ANR	5204371	Identifier	gs_free_object		5204080	0					
ANR	5204372	ArgumentList	mem		5204080	1					
ANR	5204373	Argument	mem		5204080	0					
ANR	5204374	Identifier	mem		5204080	0					
ANR	5204375	Argument	name		5204080	1					
ANR	5204376	Identifier	name		5204080	0					
ANR	5204377	Argument	"""map_file_name_add(name)"""		5204080	2					
ANR	5204378	PrimaryExpression	"""map_file_name_add(name)"""		5204080	0					
ANR	5204379	ReturnType	static void		5204080	1					
ANR	5204380	Identifier	map_file_name_add		5204080	2					
ANR	5204381	ParameterList	"gs_memory_t * mem , const char * root_name , const char * Fname"		5204080	3					
ANR	5204382	Parameter	gs_memory_t * mem	887:18:29193:29208	5204080	0	True				
ANR	5204383	ParameterType	gs_memory_t *		5204080	0					
ANR	5204384	Identifier	mem		5204080	1					
ANR	5204385	Parameter	const char * root_name	887:36:29211:29232	5204080	1	True				
ANR	5204386	ParameterType	const char *		5204080	0					
ANR	5204387	Identifier	root_name		5204080	1					
ANR	5204388	Parameter	const char * Fname	887:60:29235:29252	5204080	2	True				
ANR	5204389	ParameterType	const char *		5204080	0					
ANR	5204390	Identifier	Fname		5204080	1					
ANR	5204391	CFGEntryNode	ENTRY		5204080		True				
ANR	5204392	CFGExitNode	EXIT		5204080		True				
ANR	5204393	Symbol	file_version		5204080						
ANR	5204394	Symbol	gs_alloc_bytes		5204080						
ANR	5204395	Symbol	TEMP_FILE_NAME		5204080						
ANR	5204396	Symbol	NULL		5204080						
ANR	5204397	Symbol	d		5204080						
ANR	5204398	Symbol	MapFileReadVersion		5204080						
ANR	5204399	Symbol	InitialNumber		5204080						
ANR	5204400	Symbol	MAP_FILE_VERSION		5204080						
ANR	5204401	Symbol	root_name		5204080						
ANR	5204402	Symbol	newMap		5204080						
ANR	5204403	Symbol	gp_file_name_sizeof		5204080						
ANR	5204404	Symbol	& d		5204080						
ANR	5204405	Symbol	MAP_FILE_NAME		5204080						
ANR	5204406	Symbol	MapFileOpen		5204080						
ANR	5204407	Symbol	& file_version		5204080						
ANR	5204408	Symbol	dmax		5204080						
ANR	5204409	Symbol	mem		5204080						
ANR	5204410	Symbol	name		5204080						
ANR	5204411	Symbol	Fname		5204080						
ANR	5204412	Symbol	MapFileRead		5204080						
ANR	5204413	Symbol	oldMap		5204080						
ANR	5204414	Function	map_file_name_ren	948:0:31378:33027							
ANR	5204415	FunctionDef	"map_file_name_ren (gs_memory_t * mem , const char * root_name , const char * oldname , const char * newname)"		5204414	0					
ANR	5204416	CompoundStatement		950:0:31493:33027	5204414	0					
ANR	5204417	IdentifierDeclStatement	"int d = MapToFile ( mem , root_name , oldname ) ;"	953:4:31535:31577	5204414	0	True				
ANR	5204418	IdentifierDecl	"d = MapToFile ( mem , root_name , oldname )"		5204414	0					
ANR	5204419	IdentifierDeclType	int		5204414	0					
ANR	5204420	Identifier	d		5204414	1					
ANR	5204421	AssignmentExpression	"d = MapToFile ( mem , root_name , oldname )"		5204414	2		=			
ANR	5204422	Identifier	d		5204414	0					
ANR	5204423	CallExpression	"MapToFile ( mem , root_name , oldname )"		5204414	1					
ANR	5204424	Callee	MapToFile		5204414	0					
ANR	5204425	Identifier	MapToFile		5204414	0					
ANR	5204426	ArgumentList	mem		5204414	1					
ANR	5204427	Argument	mem		5204414	0					
ANR	5204428	Identifier	mem		5204414	0					
ANR	5204429	Argument	root_name		5204414	1					
ANR	5204430	Identifier	root_name		5204414	0					
ANR	5204431	Argument	oldname		5204414	2					
ANR	5204432	Identifier	oldname		5204414	0					
ANR	5204433	IdentifierDeclStatement	int file_version ;	954:4:31583:31599	5204414	1	True				
ANR	5204434	IdentifierDecl	file_version		5204414	0					
ANR	5204435	IdentifierDeclType	int		5204414	0					
ANR	5204436	Identifier	file_version		5204414	1					
ANR	5204437	IdentifierDeclStatement	"char * name = ( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_ren(name)"" ) ;"	955:4:31605:31693	5204414	2	True				
ANR	5204438	IdentifierDecl	"* name = ( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_ren(name)"" )"		5204414	0					
ANR	5204439	IdentifierDeclType	char *		5204414	0					
ANR	5204440	Identifier	name		5204414	1					
ANR	5204441	AssignmentExpression	"* name = ( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_ren(name)"" )"		5204414	2		=			
ANR	5204442	Identifier	name		5204414	0					
ANR	5204443	CastExpression	"( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_ren(name)"" )"		5204414	1					
ANR	5204444	CastTarget	char *		5204414	0					
ANR	5204445	CallExpression	"gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_ren(name)"" )"		5204414	1					
ANR	5204446	Callee	gs_alloc_bytes		5204414	0					
ANR	5204447	Identifier	gs_alloc_bytes		5204414	0					
ANR	5204448	ArgumentList	mem		5204414	1					
ANR	5204449	Argument	mem		5204414	0					
ANR	5204450	Identifier	mem		5204414	0					
ANR	5204451	Argument	gp_file_name_sizeof		5204414	1					
ANR	5204452	Identifier	gp_file_name_sizeof		5204414	0					
ANR	5204453	Argument	"""map_file_name_ren(name)"""		5204414	2					
ANR	5204454	PrimaryExpression	"""map_file_name_ren(name)"""		5204414	0					
ANR	5204455	IfStatement	if ( name && d != - 1 )		5204414	3					
ANR	5204456	Condition	name && d != - 1	957:8:31704:31718	5204414	0	True				
ANR	5204457	AndExpression	name && d != - 1		5204414	0		&&			
ANR	5204458	Identifier	name		5204414	0					
ANR	5204459	EqualityExpression	d != - 1		5204414	1		!=			
ANR	5204460	Identifier	d		5204414	0					
ANR	5204461	UnaryOperationExpression	- 1		5204414	1					
ANR	5204462	UnaryOperator	-		5204414	0					
ANR	5204463	PrimaryExpression	1		5204414	1					
ANR	5204464	CompoundStatement		10:8:290:304	5204414	1					
ANR	5204465	IdentifierDeclStatement	FILE * newMap ;	958:8:31760:31774	5204414	0	True				
ANR	5204466	IdentifierDecl	* newMap		5204414	0					
ANR	5204467	IdentifierDeclType	FILE *		5204414	0					
ANR	5204468	Identifier	newMap		5204414	1					
ANR	5204469	IdentifierDeclStatement	FILE * oldMap ;	959:8:31784:31798	5204414	1	True				
ANR	5204470	IdentifierDecl	* oldMap		5204414	0					
ANR	5204471	IdentifierDeclType	FILE *		5204414	0					
ANR	5204472	Identifier	oldMap		5204414	1					
ANR	5204473	ExpressionStatement	"MapFileUnlink ( mem , root_name , TEMP_FILE_NAME )"	963:8:31865:31911	5204414	2	True				
ANR	5204474	CallExpression	"MapFileUnlink ( mem , root_name , TEMP_FILE_NAME )"		5204414	0					
ANR	5204475	Callee	MapFileUnlink		5204414	0					
ANR	5204476	Identifier	MapFileUnlink		5204414	0					
ANR	5204477	ArgumentList	mem		5204414	1					
ANR	5204478	Argument	mem		5204414	0					
ANR	5204479	Identifier	mem		5204414	0					
ANR	5204480	Argument	root_name		5204414	1					
ANR	5204481	Identifier	root_name		5204414	0					
ANR	5204482	Argument	TEMP_FILE_NAME		5204414	2					
ANR	5204483	Identifier	TEMP_FILE_NAME		5204414	0					
ANR	5204484	ExpressionStatement	"newMap = MapFileOpen ( mem , root_name , TEMP_FILE_NAME , ""w"" )"	964:8:31921:31978	5204414	3	True				
ANR	5204485	AssignmentExpression	"newMap = MapFileOpen ( mem , root_name , TEMP_FILE_NAME , ""w"" )"		5204414	0		=			
ANR	5204486	Identifier	newMap		5204414	0					
ANR	5204487	CallExpression	"MapFileOpen ( mem , root_name , TEMP_FILE_NAME , ""w"" )"		5204414	1					
ANR	5204488	Callee	MapFileOpen		5204414	0					
ANR	5204489	Identifier	MapFileOpen		5204414	0					
ANR	5204490	ArgumentList	mem		5204414	1					
ANR	5204491	Argument	mem		5204414	0					
ANR	5204492	Identifier	mem		5204414	0					
ANR	5204493	Argument	root_name		5204414	1					
ANR	5204494	Identifier	root_name		5204414	0					
ANR	5204495	Argument	TEMP_FILE_NAME		5204414	2					
ANR	5204496	Identifier	TEMP_FILE_NAME		5204414	0					
ANR	5204497	Argument	"""w"""		5204414	3					
ANR	5204498	PrimaryExpression	"""w"""		5204414	0					
ANR	5204499	IfStatement	if ( newMap == NULL )		5204414	4					
ANR	5204500	Condition	newMap == NULL	965:12:31992:32005	5204414	0	True				
ANR	5204501	EqualityExpression	newMap == NULL		5204414	0		==			
ANR	5204502	Identifier	newMap		5204414	0					
ANR	5204503	Identifier	NULL		5204414	1					
ANR	5204504	ReturnStatement	return ;	966:12:32020:32026	5204414	1	True				
ANR	5204505	ExpressionStatement	"oldMap = MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"	967:8:32036:32092	5204414	5	True				
ANR	5204506	AssignmentExpression	"oldMap = MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"		5204414	0		=			
ANR	5204507	Identifier	oldMap		5204414	0					
ANR	5204508	CallExpression	"MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"		5204414	1					
ANR	5204509	Callee	MapFileOpen		5204414	0					
ANR	5204510	Identifier	MapFileOpen		5204414	0					
ANR	5204511	ArgumentList	mem		5204414	1					
ANR	5204512	Argument	mem		5204414	0					
ANR	5204513	Identifier	mem		5204414	0					
ANR	5204514	Argument	root_name		5204414	1					
ANR	5204515	Identifier	root_name		5204414	0					
ANR	5204516	Argument	MAP_FILE_NAME		5204414	2					
ANR	5204517	Identifier	MAP_FILE_NAME		5204414	0					
ANR	5204518	Argument	"""r"""		5204414	3					
ANR	5204519	PrimaryExpression	"""r"""		5204414	0					
ANR	5204520	IfStatement	"if ( oldMap != NULL && ( ! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION ) )"		5204414	6					
ANR	5204521	Condition	"oldMap != NULL && ( ! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION )"	968:12:32106:32215	5204414	0	True				
ANR	5204522	AndExpression	"oldMap != NULL && ( ! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION )"		5204414	0		&&			
ANR	5204523	EqualityExpression	oldMap != NULL		5204414	0		!=			
ANR	5204524	Identifier	oldMap		5204414	0					
ANR	5204525	Identifier	NULL		5204414	1					
ANR	5204526	OrExpression	"! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION"		5204414	1		||			
ANR	5204527	UnaryOperationExpression	"! MapFileReadVersion ( oldMap , & file_version )"		5204414	0					
ANR	5204528	UnaryOperator	!		5204414	0					
ANR	5204529	CallExpression	"MapFileReadVersion ( oldMap , & file_version )"		5204414	1					
ANR	5204530	Callee	MapFileReadVersion		5204414	0					
ANR	5204531	Identifier	MapFileReadVersion		5204414	0					
ANR	5204532	ArgumentList	oldMap		5204414	1					
ANR	5204533	Argument	oldMap		5204414	0					
ANR	5204534	Identifier	oldMap		5204414	0					
ANR	5204535	Argument	& file_version		5204414	1					
ANR	5204536	UnaryOperationExpression	& file_version		5204414	0					
ANR	5204537	UnaryOperator	&		5204414	0					
ANR	5204538	Identifier	file_version		5204414	1					
ANR	5204539	EqualityExpression	file_version != MAP_FILE_VERSION		5204414	1		!=			
ANR	5204540	Identifier	file_version		5204414	0					
ANR	5204541	Identifier	MAP_FILE_VERSION		5204414	1					
ANR	5204542	CompoundStatement		20:50:724:724	5204414	1					
ANR	5204543	ExpressionStatement	fclose ( oldMap )	970:12:32232:32246	5204414	0	True				
ANR	5204544	CallExpression	fclose ( oldMap )		5204414	0					
ANR	5204545	Callee	fclose		5204414	0					
ANR	5204546	Identifier	fclose		5204414	0					
ANR	5204547	ArgumentList	oldMap		5204414	1					
ANR	5204548	Argument	oldMap		5204414	0					
ANR	5204549	Identifier	oldMap		5204414	0					
ANR	5204550	ExpressionStatement	oldMap = NULL	971:12:32260:32272	5204414	1	True				
ANR	5204551	AssignmentExpression	oldMap = NULL		5204414	0		=			
ANR	5204552	Identifier	oldMap		5204414	0					
ANR	5204553	Identifier	NULL		5204414	1					
ANR	5204554	IfStatement	if ( oldMap == NULL )		5204414	7					
ANR	5204555	Condition	oldMap == NULL	973:12:32296:32309	5204414	0	True				
ANR	5204556	EqualityExpression	oldMap == NULL		5204414	0		==			
ANR	5204557	Identifier	oldMap		5204414	0					
ANR	5204558	Identifier	NULL		5204414	1					
ANR	5204559	CompoundStatement		24:28:818:818	5204414	1					
ANR	5204560	ExpressionStatement	fclose ( newMap )	974:12:32326:32340	5204414	0	True				
ANR	5204561	CallExpression	fclose ( newMap )		5204414	0					
ANR	5204562	Callee	fclose		5204414	0					
ANR	5204563	Identifier	fclose		5204414	0					
ANR	5204564	ArgumentList	newMap		5204414	1					
ANR	5204565	Argument	newMap		5204414	0					
ANR	5204566	Identifier	newMap		5204414	0					
ANR	5204567	ExpressionStatement	"MapFileUnlink ( mem , root_name , TEMP_FILE_NAME )"	975:12:32354:32399	5204414	1	True				
ANR	5204568	CallExpression	"MapFileUnlink ( mem , root_name , TEMP_FILE_NAME )"		5204414	0					
ANR	5204569	Callee	MapFileUnlink		5204414	0					
ANR	5204570	Identifier	MapFileUnlink		5204414	0					
ANR	5204571	ArgumentList	mem		5204414	1					
ANR	5204572	Argument	mem		5204414	0					
ANR	5204573	Identifier	mem		5204414	0					
ANR	5204574	Argument	root_name		5204414	1					
ANR	5204575	Identifier	root_name		5204414	0					
ANR	5204576	Argument	TEMP_FILE_NAME		5204414	2					
ANR	5204577	Identifier	TEMP_FILE_NAME		5204414	0					
ANR	5204578	ReturnStatement	return ;	976:12:32413:32419	5204414	2	True				
ANR	5204579	ExpressionStatement	"MapFileWriteVersion ( newMap , MAP_FILE_VERSION )"	981:8:32514:32559	5204414	8	True				
ANR	5204580	CallExpression	"MapFileWriteVersion ( newMap , MAP_FILE_VERSION )"		5204414	0					
ANR	5204581	Callee	MapFileWriteVersion		5204414	0					
ANR	5204582	Identifier	MapFileWriteVersion		5204414	0					
ANR	5204583	ArgumentList	newMap		5204414	1					
ANR	5204584	Argument	newMap		5204414	0					
ANR	5204585	Identifier	newMap		5204414	0					
ANR	5204586	Argument	MAP_FILE_VERSION		5204414	1					
ANR	5204587	Identifier	MAP_FILE_VERSION		5204414	0					
ANR	5204588	WhileStatement	"while ( MapFileRead ( oldMap , name , & d ) )"		5204414	9					
ANR	5204589	Condition	"MapFileRead ( oldMap , name , & d )"	982:15:32607:32635	5204414	0	True				
ANR	5204590	CallExpression	"MapFileRead ( oldMap , name , & d )"		5204414	0					
ANR	5204591	Callee	MapFileRead		5204414	0					
ANR	5204592	Identifier	MapFileRead		5204414	0					
ANR	5204593	ArgumentList	oldMap		5204414	1					
ANR	5204594	Argument	oldMap		5204414	0					
ANR	5204595	Identifier	oldMap		5204414	0					
ANR	5204596	Argument	name		5204414	1					
ANR	5204597	Identifier	name		5204414	0					
ANR	5204598	Argument	& d		5204414	2					
ANR	5204599	UnaryOperationExpression	& d		5204414	0					
ANR	5204600	UnaryOperator	&		5204414	0					
ANR	5204601	Identifier	d		5204414	1					
ANR	5204602	IfStatement	"if ( strcmp ( name , oldname ) )"		5204414	1					
ANR	5204603	Condition	"strcmp ( name , oldname )"	983:16:32654:32674	5204414	0	True				
ANR	5204604	CallExpression	"strcmp ( name , oldname )"		5204414	0					
ANR	5204605	Callee	strcmp		5204414	0					
ANR	5204606	Identifier	strcmp		5204414	0					
ANR	5204607	ArgumentList	name		5204414	1					
ANR	5204608	Argument	name		5204414	0					
ANR	5204609	Identifier	name		5204414	0					
ANR	5204610	Argument	oldname		5204414	1					
ANR	5204611	Identifier	oldname		5204414	0					
ANR	5204612	ExpressionStatement	"MapFileWrite ( newMap , name , d )"	984:16:32693:32722	5204414	1	True				
ANR	5204613	CallExpression	"MapFileWrite ( newMap , name , d )"		5204414	0					
ANR	5204614	Callee	MapFileWrite		5204414	0					
ANR	5204615	Identifier	MapFileWrite		5204414	0					
ANR	5204616	ArgumentList	newMap		5204414	1					
ANR	5204617	Argument	newMap		5204414	0					
ANR	5204618	Identifier	newMap		5204414	0					
ANR	5204619	Argument	name		5204414	1					
ANR	5204620	Identifier	name		5204414	0					
ANR	5204621	Argument	d		5204414	2					
ANR	5204622	Identifier	d		5204414	0					
ANR	5204623	ElseStatement	else		5204414	0					
ANR	5204624	ExpressionStatement	"MapFileWrite ( newMap , newname , d )"	986:16:32757:32789	5204414	0	True				
ANR	5204625	CallExpression	"MapFileWrite ( newMap , newname , d )"		5204414	0					
ANR	5204626	Callee	MapFileWrite		5204414	0					
ANR	5204627	Identifier	MapFileWrite		5204414	0					
ANR	5204628	ArgumentList	newMap		5204414	1					
ANR	5204629	Argument	newMap		5204414	0					
ANR	5204630	Identifier	newMap		5204414	0					
ANR	5204631	Argument	newname		5204414	1					
ANR	5204632	Identifier	newname		5204414	0					
ANR	5204633	Argument	d		5204414	2					
ANR	5204634	Identifier	d		5204414	0					
ANR	5204635	ExpressionStatement	fclose ( newMap )	987:8:32799:32813	5204414	10	True				
ANR	5204636	CallExpression	fclose ( newMap )		5204414	0					
ANR	5204637	Callee	fclose		5204414	0					
ANR	5204638	Identifier	fclose		5204414	0					
ANR	5204639	ArgumentList	newMap		5204414	1					
ANR	5204640	Argument	newMap		5204414	0					
ANR	5204641	Identifier	newMap		5204414	0					
ANR	5204642	ExpressionStatement	fclose ( oldMap )	988:8:32823:32837	5204414	11	True				
ANR	5204643	CallExpression	fclose ( oldMap )		5204414	0					
ANR	5204644	Callee	fclose		5204414	0					
ANR	5204645	Identifier	fclose		5204414	0					
ANR	5204646	ArgumentList	oldMap		5204414	1					
ANR	5204647	Argument	oldMap		5204414	0					
ANR	5204648	Identifier	oldMap		5204414	0					
ANR	5204649	ExpressionStatement	"MapFileUnlink ( mem , root_name , MAP_FILE_NAME )"	989:8:32847:32891	5204414	12	True				
ANR	5204650	CallExpression	"MapFileUnlink ( mem , root_name , MAP_FILE_NAME )"		5204414	0					
ANR	5204651	Callee	MapFileUnlink		5204414	0					
ANR	5204652	Identifier	MapFileUnlink		5204414	0					
ANR	5204653	ArgumentList	mem		5204414	1					
ANR	5204654	Argument	mem		5204414	0					
ANR	5204655	Identifier	mem		5204414	0					
ANR	5204656	Argument	root_name		5204414	1					
ANR	5204657	Identifier	root_name		5204414	0					
ANR	5204658	Argument	MAP_FILE_NAME		5204414	2					
ANR	5204659	Identifier	MAP_FILE_NAME		5204414	0					
ANR	5204660	ExpressionStatement	"MapFileRename ( mem , root_name , MAP_FILE_NAME , TEMP_FILE_NAME )"	990:8:32901:32961	5204414	13	True				
ANR	5204661	CallExpression	"MapFileRename ( mem , root_name , MAP_FILE_NAME , TEMP_FILE_NAME )"		5204414	0					
ANR	5204662	Callee	MapFileRename		5204414	0					
ANR	5204663	Identifier	MapFileRename		5204414	0					
ANR	5204664	ArgumentList	mem		5204414	1					
ANR	5204665	Argument	mem		5204414	0					
ANR	5204666	Identifier	mem		5204414	0					
ANR	5204667	Argument	root_name		5204414	1					
ANR	5204668	Identifier	root_name		5204414	0					
ANR	5204669	Argument	MAP_FILE_NAME		5204414	2					
ANR	5204670	Identifier	MAP_FILE_NAME		5204414	0					
ANR	5204671	Argument	TEMP_FILE_NAME		5204414	3					
ANR	5204672	Identifier	TEMP_FILE_NAME		5204414	0					
ANR	5204673	ExpressionStatement	"gs_free_object ( mem , name , ""map_file_name_ren(name)"" )"	992:4:32973:33025	5204414	4	True				
ANR	5204674	CallExpression	"gs_free_object ( mem , name , ""map_file_name_ren(name)"" )"		5204414	0					
ANR	5204675	Callee	gs_free_object		5204414	0					
ANR	5204676	Identifier	gs_free_object		5204414	0					
ANR	5204677	ArgumentList	mem		5204414	1					
ANR	5204678	Argument	mem		5204414	0					
ANR	5204679	Identifier	mem		5204414	0					
ANR	5204680	Argument	name		5204414	1					
ANR	5204681	Identifier	name		5204414	0					
ANR	5204682	Argument	"""map_file_name_ren(name)"""		5204414	2					
ANR	5204683	PrimaryExpression	"""map_file_name_ren(name)"""		5204414	0					
ANR	5204684	ReturnType	static void		5204414	1					
ANR	5204685	Identifier	map_file_name_ren		5204414	2					
ANR	5204686	ParameterList	"gs_memory_t * mem , const char * root_name , const char * oldname , const char * newname"		5204414	3					
ANR	5204687	Parameter	gs_memory_t * mem	949:18:31408:31423	5204414	0	True				
ANR	5204688	ParameterType	gs_memory_t *		5204414	0					
ANR	5204689	Identifier	mem		5204414	1					
ANR	5204690	Parameter	const char * root_name	949:36:31426:31446	5204414	1	True				
ANR	5204691	ParameterType	const char *		5204414	0					
ANR	5204692	Identifier	root_name		5204414	1					
ANR	5204693	Parameter	const char * oldname	949:59:31449:31468	5204414	2	True				
ANR	5204694	ParameterType	const char *		5204414	0					
ANR	5204695	Identifier	oldname		5204414	1					
ANR	5204696	Parameter	const char * newname	949:81:31471:31490	5204414	3	True				
ANR	5204697	ParameterType	const char *		5204414	0					
ANR	5204698	Identifier	newname		5204414	1					
ANR	5204699	CFGEntryNode	ENTRY		5204414		True				
ANR	5204700	CFGExitNode	EXIT		5204414		True				
ANR	5204701	Symbol	file_version		5204414						
ANR	5204702	Symbol	strcmp		5204414						
ANR	5204703	Symbol	oldname		5204414						
ANR	5204704	Symbol	gs_alloc_bytes		5204414						
ANR	5204705	Symbol	TEMP_FILE_NAME		5204414						
ANR	5204706	Symbol	NULL		5204414						
ANR	5204707	Symbol	d		5204414						
ANR	5204708	Symbol	MapFileReadVersion		5204414						
ANR	5204709	Symbol	MapToFile		5204414						
ANR	5204710	Symbol	MAP_FILE_VERSION		5204414						
ANR	5204711	Symbol	root_name		5204414						
ANR	5204712	Symbol	newMap		5204414						
ANR	5204713	Symbol	gp_file_name_sizeof		5204414						
ANR	5204714	Symbol	& d		5204414						
ANR	5204715	Symbol	MAP_FILE_NAME		5204414						
ANR	5204716	Symbol	newname		5204414						
ANR	5204717	Symbol	MapFileOpen		5204414						
ANR	5204718	Symbol	& file_version		5204414						
ANR	5204719	Symbol	mem		5204414						
ANR	5204720	Symbol	name		5204414						
ANR	5204721	Symbol	MapFileRead		5204414						
ANR	5204722	Symbol	oldMap		5204414						
