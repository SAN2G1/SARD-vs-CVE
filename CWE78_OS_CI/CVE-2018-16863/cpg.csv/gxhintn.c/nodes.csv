command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5613930	File	data/converged/CVE-2018-16863_ghostpdl/gxhintn.c								
ANR	5613931	DeclStmt									
ANR	5613932	Decl							const char	const char *	s_pole_array
ANR	5613933	DeclStmt									
ANR	5613934	Decl							const char	const char *	s_zone_array
ANR	5613935	DeclStmt									
ANR	5613936	Decl							const char	const char *	s_hint_array
ANR	5613937	DeclStmt									
ANR	5613938	Decl							const char	const char *	s_contour_array
ANR	5613939	DeclStmt									
ANR	5613940	Decl							const char	const char *	s_subglyph_array
ANR	5613941	DeclStmt									
ANR	5613942	Decl							const char	const char *	s_hint_range_array
ANR	5613943	DeclStmt									
ANR	5613944	Decl							const char	const char *	s_hint_applying_array
ANR	5613945	DeclStmt									
ANR	5613946	Decl							const char	const char *	s_stem_snap_array
ANR	5613947	DeclStmt									
ANR	5613948	Decl							const char	const char *	s_stem_snap_vote_array
ANR	5613949	DeclStmt									
ANR	5613950	Decl							int32_t	int32_t	int24
ANR	5613951	DeclStmt									
ANR	5613952	Decl							const unsigned int	const unsigned int	split_bits
ANR	5613953	DeclStmt									
ANR	5613954	Decl							const unsigned int	const unsigned int	max_coord_bits
ANR	5613955	DeclStmt									
ANR	5613956	Decl							const unsigned int	const unsigned int	matrix_bits
ANR	5613957	DeclStmt									
ANR	5613958	Decl							const unsigned int	const unsigned int	g2o_bitshift
ANR	5613959	DeclStmt									
ANR	5613960	Decl							const int32_t	const int32_t	FFFFF000
ANR	5613961	Function	mul_shift	152:0:5629:5958							
ANR	5613962	FunctionDef	"mul_shift (int24 a , int19 b , unsigned int s)"		5613961	0					
ANR	5613963	CompoundStatement		153:0:5695:5958	5613961	0					
ANR	5613964	ReturnStatement	return ( ( int64_t ) a * ( int64_t ) b ) >> s ;	155:4:5721:5760	5613961	0	True				
ANR	5613965	ShiftExpression	( ( int64_t ) a * ( int64_t ) b ) >> s		5613961	0		>>			
ANR	5613966	MultiplicativeExpression	( int64_t ) a * ( int64_t ) b		5613961	0		*			
ANR	5613967	CastExpression	( int64_t ) a		5613961	0					
ANR	5613968	CastTarget	int64_t		5613961	0					
ANR	5613969	Identifier	a		5613961	1					
ANR	5613970	CastExpression	( int64_t ) b		5613961	1					
ANR	5613971	CastTarget	int64_t		5613961	0					
ANR	5613972	Identifier	b		5613961	1					
ANR	5613973	Identifier	s		5613961	1					
ANR	5613974	ReturnType	static inline int32_t		5613961	1					
ANR	5613975	Identifier	mul_shift		5613961	2					
ANR	5613976	ParameterList	"int24 a , int19 b , unsigned int s"		5613961	3					
ANR	5613977	Parameter	int24 a	152:32:5661:5667	5613961	0	True				
ANR	5613978	ParameterType	int24		5613961	0					
ANR	5613979	Identifier	a		5613961	1					
ANR	5613980	Parameter	int19 b	152:41:5670:5676	5613961	1	True				
ANR	5613981	ParameterType	int19		5613961	0					
ANR	5613982	Identifier	b		5613961	1					
ANR	5613983	Parameter	unsigned int s	152:50:5679:5692	5613961	2	True				
ANR	5613984	ParameterType	unsigned int		5613961	0					
ANR	5613985	Identifier	s		5613961	1					
ANR	5613986	CFGEntryNode	ENTRY		5613961		True				
ANR	5613987	CFGExitNode	EXIT		5613961		True				
ANR	5613988	Symbol	a		5613961						
ANR	5613989	Symbol	b		5613961						
ANR	5613990	Symbol	s		5613961						
ANR	5613991	Function	mul_shift_round	165:0:6009:6357							
ANR	5613992	FunctionDef	"mul_shift_round (int24 a , int19 b , unsigned int s)"		5613991	0					
ANR	5613993	CompoundStatement		166:0:6081:6357	5613991	0					
ANR	5613994	ReturnStatement	return ( ( ( ( int64_t ) a * ( int64_t ) b ) >> ( s - 1 ) ) + 1 ) >> 1 ;	168:4:6107:6166	5613991	0	True				
ANR	5613995	ShiftExpression	( ( ( ( int64_t ) a * ( int64_t ) b ) >> ( s - 1 ) ) + 1 ) >> 1		5613991	0		>>			
ANR	5613996	AdditiveExpression	( ( ( int64_t ) a * ( int64_t ) b ) >> ( s - 1 ) ) + 1		5613991	0		+			
ANR	5613997	ShiftExpression	( ( int64_t ) a * ( int64_t ) b ) >> ( s - 1 )		5613991	0		>>			
ANR	5613998	MultiplicativeExpression	( int64_t ) a * ( int64_t ) b		5613991	0		*			
ANR	5613999	CastExpression	( int64_t ) a		5613991	0					
ANR	5614000	CastTarget	int64_t		5613991	0					
ANR	5614001	Identifier	a		5613991	1					
ANR	5614002	CastExpression	( int64_t ) b		5613991	1					
ANR	5614003	CastTarget	int64_t		5613991	0					
ANR	5614004	Identifier	b		5613991	1					
ANR	5614005	AdditiveExpression	s - 1		5613991	1		-			
ANR	5614006	Identifier	s		5613991	0					
ANR	5614007	PrimaryExpression	1		5613991	1					
ANR	5614008	PrimaryExpression	1		5613991	1					
ANR	5614009	PrimaryExpression	1		5613991	1					
ANR	5614010	ReturnType	static inline int32_t		5613991	1					
ANR	5614011	Identifier	mul_shift_round		5613991	2					
ANR	5614012	ParameterList	"int24 a , int19 b , unsigned int s"		5613991	3					
ANR	5614013	Parameter	int24 a	165:38:6047:6053	5613991	0	True				
ANR	5614014	ParameterType	int24		5613991	0					
ANR	5614015	Identifier	a		5613991	1					
ANR	5614016	Parameter	int19 b	165:47:6056:6062	5613991	1	True				
ANR	5614017	ParameterType	int19		5613991	0					
ANR	5614018	Identifier	b		5613991	1					
ANR	5614019	Parameter	unsigned int s	165:56:6065:6078	5613991	2	True				
ANR	5614020	ParameterType	unsigned int		5613991	0					
ANR	5614021	Identifier	s		5613991	1					
ANR	5614022	CFGEntryNode	ENTRY		5613991		True				
ANR	5614023	CFGExitNode	EXIT		5613991		True				
ANR	5614024	Symbol	a		5613991						
ANR	5614025	Symbol	b		5613991						
ANR	5614026	Symbol	s		5613991						
ANR	5614027	Function	shift_rounded	177:0:6360:6461							
ANR	5614028	FunctionDef	"shift_rounded (int32_t v , unsigned int s)"		5614027	0					
ANR	5614029	CompoundStatement		178:0:6423:6461	5614027	0					
ANR	5614030	ReturnStatement	return ( ( v >> ( s - 1 ) ) + 1 ) >> 1 ;	178:3:6427:6459	5614027	0	True				
ANR	5614031	ShiftExpression	( ( v >> ( s - 1 ) ) + 1 ) >> 1		5614027	0		>>			
ANR	5614032	AdditiveExpression	( v >> ( s - 1 ) ) + 1		5614027	0		+			
ANR	5614033	ShiftExpression	v >> ( s - 1 )		5614027	0		>>			
ANR	5614034	Identifier	v		5614027	0					
ANR	5614035	AdditiveExpression	s - 1		5614027	1		-			
ANR	5614036	Identifier	s		5614027	0					
ANR	5614037	PrimaryExpression	1		5614027	1					
ANR	5614038	PrimaryExpression	1		5614027	1					
ANR	5614039	PrimaryExpression	1		5614027	1					
ANR	5614040	ReturnType	static inline int32_t		5614027	1					
ANR	5614041	Identifier	shift_rounded		5614027	2					
ANR	5614042	ParameterList	"int32_t v , unsigned int s"		5614027	3					
ANR	5614043	Parameter	int32_t v	177:36:6396:6404	5614027	0	True				
ANR	5614044	ParameterType	int32_t		5614027	0					
ANR	5614045	Identifier	v		5614027	1					
ANR	5614046	Parameter	unsigned int s	177:47:6407:6420	5614027	1	True				
ANR	5614047	ParameterType	unsigned int		5614027	0					
ANR	5614048	Identifier	s		5614027	1					
ANR	5614049	CFGEntryNode	ENTRY		5614027		True				
ANR	5614050	CFGExitNode	EXIT		5614027		True				
ANR	5614051	Symbol	s		5614027						
ANR	5614052	Symbol	v		5614027						
ANR	5614053	Function	Max	181:0:6464:6538							
ANR	5614054	FunctionDef	"Max (int32_t a , int32_t b)"		5614053	0					
ANR	5614055	CompoundStatement		182:0:6512:6538	5614053	0					
ANR	5614056	ReturnStatement	return a > b ? a : b ;	182:3:6516:6536	5614053	0	True				
ANR	5614057	ConditionalExpression	a > b ? a : b		5614053	0					
ANR	5614058	Condition	a > b		5614053	0					
ANR	5614059	RelationalExpression	a > b		5614053	0		>			
ANR	5614060	Identifier	a		5614053	0					
ANR	5614061	Identifier	b		5614053	1					
ANR	5614062	Identifier	a		5614053	1					
ANR	5614063	Identifier	b		5614053	2					
ANR	5614064	ReturnType	static inline int32_t		5614053	1					
ANR	5614065	Identifier	Max		5614053	2					
ANR	5614066	ParameterList	"int32_t a , int32_t b"		5614053	3					
ANR	5614067	Parameter	int32_t a	181:26:6490:6498	5614053	0	True				
ANR	5614068	ParameterType	int32_t		5614053	0					
ANR	5614069	Identifier	a		5614053	1					
ANR	5614070	Parameter	int32_t b	181:37:6501:6509	5614053	1	True				
ANR	5614071	ParameterType	int32_t		5614053	0					
ANR	5614072	Identifier	b		5614053	1					
ANR	5614073	CFGEntryNode	ENTRY		5614053		True				
ANR	5614074	CFGExitNode	EXIT		5614053		True				
ANR	5614075	Symbol	a		5614053						
ANR	5614076	Symbol	b		5614053						
ANR	5614077	Function	rshift	185:0:6541:6619							
ANR	5614078	FunctionDef	"rshift (long a , int b)"		5614077	0					
ANR	5614079	CompoundStatement		186:0:6582:6619	5614077	0					
ANR	5614080	ReturnStatement	return b > 0 ? a << b : a >> - b ;	186:3:6586:6617	5614077	0	True				
ANR	5614081	ConditionalExpression	b > 0 ? a << b : a >> - b		5614077	0					
ANR	5614082	Condition	b > 0		5614077	0					
ANR	5614083	RelationalExpression	b > 0		5614077	0		>			
ANR	5614084	Identifier	b		5614077	0					
ANR	5614085	PrimaryExpression	0		5614077	1					
ANR	5614086	ShiftExpression	a << b		5614077	1		<<			
ANR	5614087	Identifier	a		5614077	0					
ANR	5614088	Identifier	b		5614077	1					
ANR	5614089	ShiftExpression	a >> - b		5614077	2		>>			
ANR	5614090	Identifier	a		5614077	0					
ANR	5614091	UnaryOperationExpression	- b		5614077	1					
ANR	5614092	UnaryOperator	-		5614077	0					
ANR	5614093	Identifier	b		5614077	1					
ANR	5614094	ReturnType	static inline long		5614077	1					
ANR	5614095	Identifier	rshift		5614077	2					
ANR	5614096	ParameterList	"long a , int b"		5614077	3					
ANR	5614097	Parameter	long a	185:26:6567:6572	5614077	0	True				
ANR	5614098	ParameterType	long		5614077	0					
ANR	5614099	Identifier	a		5614077	1					
ANR	5614100	Parameter	int b	185:34:6575:6579	5614077	1	True				
ANR	5614101	ParameterType	int		5614077	0					
ANR	5614102	Identifier	b		5614077	1					
ANR	5614103	CFGEntryNode	ENTRY		5614077		True				
ANR	5614104	CFGExitNode	EXIT		5614077		True				
ANR	5614105	Symbol	a		5614077						
ANR	5614106	Symbol	b		5614077						
ANR	5614107	Function	double_matrix__set	190:0:6701:6876							
ANR	5614108	FunctionDef	"double_matrix__set (double_matrix * self , const gs_matrix_fixed * m)"		5614107	0					
ANR	5614109	CompoundStatement		191:0:6788:6876	5614107	0					
ANR	5614110	ExpressionStatement	self -> xx = m -> xx	191:3:6792:6808	5614107	0	True				
ANR	5614111	AssignmentExpression	self -> xx = m -> xx		5614107	0		=			
ANR	5614112	PtrMemberAccess	self -> xx		5614107	0					
ANR	5614113	Identifier	self		5614107	0					
ANR	5614114	Identifier	xx		5614107	1					
ANR	5614115	PtrMemberAccess	m -> xx		5614107	1					
ANR	5614116	Identifier	m		5614107	0					
ANR	5614117	Identifier	xx		5614107	1					
ANR	5614118	ExpressionStatement	self -> xy = m -> xy	192:4:6814:6830	5614107	1	True				
ANR	5614119	AssignmentExpression	self -> xy = m -> xy		5614107	0		=			
ANR	5614120	PtrMemberAccess	self -> xy		5614107	0					
ANR	5614121	Identifier	self		5614107	0					
ANR	5614122	Identifier	xy		5614107	1					
ANR	5614123	PtrMemberAccess	m -> xy		5614107	1					
ANR	5614124	Identifier	m		5614107	0					
ANR	5614125	Identifier	xy		5614107	1					
ANR	5614126	ExpressionStatement	self -> yx = m -> yx	193:4:6836:6852	5614107	2	True				
ANR	5614127	AssignmentExpression	self -> yx = m -> yx		5614107	0		=			
ANR	5614128	PtrMemberAccess	self -> yx		5614107	0					
ANR	5614129	Identifier	self		5614107	0					
ANR	5614130	Identifier	yx		5614107	1					
ANR	5614131	PtrMemberAccess	m -> yx		5614107	1					
ANR	5614132	Identifier	m		5614107	0					
ANR	5614133	Identifier	yx		5614107	1					
ANR	5614134	ExpressionStatement	self -> yy = m -> yy	194:4:6858:6874	5614107	3	True				
ANR	5614135	AssignmentExpression	self -> yy = m -> yy		5614107	0		=			
ANR	5614136	PtrMemberAccess	self -> yy		5614107	0					
ANR	5614137	Identifier	self		5614107	0					
ANR	5614138	Identifier	yy		5614107	1					
ANR	5614139	PtrMemberAccess	m -> yy		5614107	1					
ANR	5614140	Identifier	m		5614107	0					
ANR	5614141	Identifier	yy		5614107	1					
ANR	5614142	ReturnType	static inline void		5614107	1					
ANR	5614143	Identifier	double_matrix__set		5614107	2					
ANR	5614144	ParameterList	"double_matrix * self , const gs_matrix_fixed * m"		5614107	3					
ANR	5614145	Parameter	double_matrix * self	190:38:6739:6758	5614107	0	True				
ANR	5614146	ParameterType	double_matrix *		5614107	0					
ANR	5614147	Identifier	self		5614107	1					
ANR	5614148	Parameter	const gs_matrix_fixed * m	190:60:6761:6785	5614107	1	True				
ANR	5614149	ParameterType	const gs_matrix_fixed *		5614107	0					
ANR	5614150	Identifier	m		5614107	1					
ANR	5614151	CFGEntryNode	ENTRY		5614107		True				
ANR	5614152	CFGExitNode	EXIT		5614107		True				
ANR	5614153	Symbol	self -> yx		5614107						
ANR	5614154	Symbol	self -> xx		5614107						
ANR	5614155	Symbol	self -> yy		5614107						
ANR	5614156	Symbol	m -> yx		5614107						
ANR	5614157	Symbol	m -> xy		5614107						
ANR	5614158	Symbol	m -> xx		5614107						
ANR	5614159	Symbol	m -> yy		5614107						
ANR	5614160	Symbol	* self		5614107						
ANR	5614161	Symbol	self -> xy		5614107						
ANR	5614162	Symbol	* m		5614107						
ANR	5614163	Symbol	self		5614107						
ANR	5614164	Symbol	m		5614107						
ANR	5614165	Function	double_matrix__invert_to	197:0:6879:7301							
ANR	5614166	FunctionDef	"double_matrix__invert_to (const double_matrix * self , double_matrix * m)"		5614165	0					
ANR	5614167	CompoundStatement		198:0:6969:7301	5614165	0					
ANR	5614168	IdentifierDeclStatement	double det = self -> xx * self -> yy - self -> xy * self -> yx ;	198:3:6973:7027	5614165	0	True				
ANR	5614169	IdentifierDecl	det = self -> xx * self -> yy - self -> xy * self -> yx		5614165	0					
ANR	5614170	IdentifierDeclType	double		5614165	0					
ANR	5614171	Identifier	det		5614165	1					
ANR	5614172	AssignmentExpression	det = self -> xx * self -> yy - self -> xy * self -> yx		5614165	2		=			
ANR	5614173	Identifier	det		5614165	0					
ANR	5614174	AdditiveExpression	self -> xx * self -> yy - self -> xy * self -> yx		5614165	1		-			
ANR	5614175	MultiplicativeExpression	self -> xx * self -> yy		5614165	0		*			
ANR	5614176	PtrMemberAccess	self -> xx		5614165	0					
ANR	5614177	Identifier	self		5614165	0					
ANR	5614178	Identifier	xx		5614165	1					
ANR	5614179	PtrMemberAccess	self -> yy		5614165	1					
ANR	5614180	Identifier	self		5614165	0					
ANR	5614181	Identifier	yy		5614165	1					
ANR	5614182	MultiplicativeExpression	self -> xy * self -> yx		5614165	1		*			
ANR	5614183	PtrMemberAccess	self -> xy		5614165	0					
ANR	5614184	Identifier	self		5614165	0					
ANR	5614185	Identifier	xy		5614165	1					
ANR	5614186	PtrMemberAccess	self -> yx		5614165	1					
ANR	5614187	Identifier	self		5614165	0					
ANR	5614188	Identifier	yx		5614165	1					
ANR	5614189	IfStatement	if ( fabs ( det ) * 1000000 <= fabs ( self -> xx ) + fabs ( self -> xy ) + fabs ( self -> yx ) + fabs ( self -> yy ) )		5614165	1					
ANR	5614190	Condition	fabs ( det ) * 1000000 <= fabs ( self -> xx ) + fabs ( self -> xy ) + fabs ( self -> yx ) + fabs ( self -> yy )	200:8:7038:7125	5614165	0	True				
ANR	5614191	RelationalExpression	fabs ( det ) * 1000000 <= fabs ( self -> xx ) + fabs ( self -> xy ) + fabs ( self -> yx ) + fabs ( self -> yy )		5614165	0		<=			
ANR	5614192	MultiplicativeExpression	fabs ( det ) * 1000000		5614165	0		*			
ANR	5614193	CallExpression	fabs ( det )		5614165	0					
ANR	5614194	Callee	fabs		5614165	0					
ANR	5614195	Identifier	fabs		5614165	0					
ANR	5614196	ArgumentList	det		5614165	1					
ANR	5614197	Argument	det		5614165	0					
ANR	5614198	Identifier	det		5614165	0					
ANR	5614199	PrimaryExpression	1000000		5614165	1					
ANR	5614200	AdditiveExpression	fabs ( self -> xx ) + fabs ( self -> xy ) + fabs ( self -> yx ) + fabs ( self -> yy )		5614165	1		+			
ANR	5614201	CallExpression	fabs ( self -> xx )		5614165	0					
ANR	5614202	Callee	fabs		5614165	0					
ANR	5614203	Identifier	fabs		5614165	0					
ANR	5614204	ArgumentList	self -> xx		5614165	1					
ANR	5614205	Argument	self -> xx		5614165	0					
ANR	5614206	PtrMemberAccess	self -> xx		5614165	0					
ANR	5614207	Identifier	self		5614165	0					
ANR	5614208	Identifier	xx		5614165	1					
ANR	5614209	AdditiveExpression	fabs ( self -> xy ) + fabs ( self -> yx ) + fabs ( self -> yy )		5614165	1		+			
ANR	5614210	CallExpression	fabs ( self -> xy )		5614165	0					
ANR	5614211	Callee	fabs		5614165	0					
ANR	5614212	Identifier	fabs		5614165	0					
ANR	5614213	ArgumentList	self -> xy		5614165	1					
ANR	5614214	Argument	self -> xy		5614165	0					
ANR	5614215	PtrMemberAccess	self -> xy		5614165	0					
ANR	5614216	Identifier	self		5614165	0					
ANR	5614217	Identifier	xy		5614165	1					
ANR	5614218	AdditiveExpression	fabs ( self -> yx ) + fabs ( self -> yy )		5614165	1		+			
ANR	5614219	CallExpression	fabs ( self -> yx )		5614165	0					
ANR	5614220	Callee	fabs		5614165	0					
ANR	5614221	Identifier	fabs		5614165	0					
ANR	5614222	ArgumentList	self -> yx		5614165	1					
ANR	5614223	Argument	self -> yx		5614165	0					
ANR	5614224	PtrMemberAccess	self -> yx		5614165	0					
ANR	5614225	Identifier	self		5614165	0					
ANR	5614226	Identifier	yx		5614165	1					
ANR	5614227	CallExpression	fabs ( self -> yy )		5614165	1					
ANR	5614228	Callee	fabs		5614165	0					
ANR	5614229	Identifier	fabs		5614165	0					
ANR	5614230	ArgumentList	self -> yy		5614165	1					
ANR	5614231	Argument	self -> yy		5614165	0					
ANR	5614232	PtrMemberAccess	self -> yy		5614165	0					
ANR	5614233	Identifier	self		5614165	0					
ANR	5614234	Identifier	yy		5614165	1					
ANR	5614235	ExpressionStatement	return_error ( gs_error_rangecheck )	201:8:7136:7169	5614165	1	True				
ANR	5614236	CallExpression	return_error ( gs_error_rangecheck )		5614165	0					
ANR	5614237	Callee	return_error		5614165	0					
ANR	5614238	Identifier	return_error		5614165	0					
ANR	5614239	ArgumentList	gs_error_rangecheck		5614165	1					
ANR	5614240	Argument	gs_error_rangecheck		5614165	0					
ANR	5614241	Identifier	gs_error_rangecheck		5614165	0					
ANR	5614242	ExpressionStatement	m -> xx = self -> yy / det	202:4:7175:7198	5614165	2	True				
ANR	5614243	AssignmentExpression	m -> xx = self -> yy / det		5614165	0		=			
ANR	5614244	PtrMemberAccess	m -> xx		5614165	0					
ANR	5614245	Identifier	m		5614165	0					
ANR	5614246	Identifier	xx		5614165	1					
ANR	5614247	MultiplicativeExpression	self -> yy / det		5614165	1		/			
ANR	5614248	PtrMemberAccess	self -> yy		5614165	0					
ANR	5614249	Identifier	self		5614165	0					
ANR	5614250	Identifier	yy		5614165	1					
ANR	5614251	Identifier	det		5614165	1					
ANR	5614252	ExpressionStatement	m -> xy = - self -> xy / det	203:4:7204:7227	5614165	3	True				
ANR	5614253	AssignmentExpression	m -> xy = - self -> xy / det		5614165	0		=			
ANR	5614254	PtrMemberAccess	m -> xy		5614165	0					
ANR	5614255	Identifier	m		5614165	0					
ANR	5614256	Identifier	xy		5614165	1					
ANR	5614257	MultiplicativeExpression	- self -> xy / det		5614165	1		/			
ANR	5614258	UnaryOperationExpression	- self -> xy		5614165	0					
ANR	5614259	UnaryOperator	-		5614165	0					
ANR	5614260	PtrMemberAccess	self -> xy		5614165	1					
ANR	5614261	Identifier	self		5614165	0					
ANR	5614262	Identifier	xy		5614165	1					
ANR	5614263	Identifier	det		5614165	1					
ANR	5614264	ExpressionStatement	m -> yx = - self -> yx / det	204:4:7233:7256	5614165	4	True				
ANR	5614265	AssignmentExpression	m -> yx = - self -> yx / det		5614165	0		=			
ANR	5614266	PtrMemberAccess	m -> yx		5614165	0					
ANR	5614267	Identifier	m		5614165	0					
ANR	5614268	Identifier	yx		5614165	1					
ANR	5614269	MultiplicativeExpression	- self -> yx / det		5614165	1		/			
ANR	5614270	UnaryOperationExpression	- self -> yx		5614165	0					
ANR	5614271	UnaryOperator	-		5614165	0					
ANR	5614272	PtrMemberAccess	self -> yx		5614165	1					
ANR	5614273	Identifier	self		5614165	0					
ANR	5614274	Identifier	yx		5614165	1					
ANR	5614275	Identifier	det		5614165	1					
ANR	5614276	ExpressionStatement	m -> yy = self -> xx / det	205:4:7262:7285	5614165	5	True				
ANR	5614277	AssignmentExpression	m -> yy = self -> xx / det		5614165	0		=			
ANR	5614278	PtrMemberAccess	m -> yy		5614165	0					
ANR	5614279	Identifier	m		5614165	0					
ANR	5614280	Identifier	yy		5614165	1					
ANR	5614281	MultiplicativeExpression	self -> xx / det		5614165	1		/			
ANR	5614282	PtrMemberAccess	self -> xx		5614165	0					
ANR	5614283	Identifier	self		5614165	0					
ANR	5614284	Identifier	xx		5614165	1					
ANR	5614285	Identifier	det		5614165	1					
ANR	5614286	ReturnStatement	return 0 ;	206:4:7291:7299	5614165	6	True				
ANR	5614287	PrimaryExpression	0		5614165	0					
ANR	5614288	ReturnType	static inline int		5614165	1					
ANR	5614289	Identifier	double_matrix__invert_to		5614165	2					
ANR	5614290	ParameterList	"const double_matrix * self , double_matrix * m"		5614165	3					
ANR	5614291	Parameter	const double_matrix * self	197:43:6922:6947	5614165	0	True				
ANR	5614292	ParameterType	const double_matrix *		5614165	0					
ANR	5614293	Identifier	self		5614165	1					
ANR	5614294	Parameter	double_matrix * m	197:71:6950:6966	5614165	1	True				
ANR	5614295	ParameterType	double_matrix *		5614165	0					
ANR	5614296	Identifier	m		5614165	1					
ANR	5614297	CFGEntryNode	ENTRY		5614165		True				
ANR	5614298	CFGExitNode	EXIT		5614165		True				
ANR	5614299	Symbol	m -> yx		5614165						
ANR	5614300	Symbol	fabs		5614165						
ANR	5614301	Symbol	gs_error_rangecheck		5614165						
ANR	5614302	Symbol	m -> xy		5614165						
ANR	5614303	Symbol	m -> xx		5614165						
ANR	5614304	Symbol	m -> yy		5614165						
ANR	5614305	Symbol	* self		5614165						
ANR	5614306	Symbol	m		5614165						
ANR	5614307	Symbol	self -> yx		5614165						
ANR	5614308	Symbol	self -> xx		5614165						
ANR	5614309	Symbol	self -> yy		5614165						
ANR	5614310	Symbol	det		5614165						
ANR	5614311	Symbol	self -> xy		5614165						
ANR	5614312	Symbol	* m		5614165						
ANR	5614313	Symbol	self		5614165						
ANR	5614314	Function	fraction_matrix__drop_bits	209:0:7304:7630							
ANR	5614315	FunctionDef	"fraction_matrix__drop_bits (fraction_matrix * self , unsigned int bits)"		5614314	0					
ANR	5614316	CompoundStatement		210:0:7386:7630	5614314	0					
ANR	5614317	ExpressionStatement	"self -> xx = shift_rounded ( self -> xx , bits )"	210:3:7390:7430	5614314	0	True				
ANR	5614318	AssignmentExpression	"self -> xx = shift_rounded ( self -> xx , bits )"		5614314	0		=			
ANR	5614319	PtrMemberAccess	self -> xx		5614314	0					
ANR	5614320	Identifier	self		5614314	0					
ANR	5614321	Identifier	xx		5614314	1					
ANR	5614322	CallExpression	"shift_rounded ( self -> xx , bits )"		5614314	1					
ANR	5614323	Callee	shift_rounded		5614314	0					
ANR	5614324	Identifier	shift_rounded		5614314	0					
ANR	5614325	ArgumentList	self -> xx		5614314	1					
ANR	5614326	Argument	self -> xx		5614314	0					
ANR	5614327	PtrMemberAccess	self -> xx		5614314	0					
ANR	5614328	Identifier	self		5614314	0					
ANR	5614329	Identifier	xx		5614314	1					
ANR	5614330	Argument	bits		5614314	1					
ANR	5614331	Identifier	bits		5614314	0					
ANR	5614332	ExpressionStatement	"self -> xy = shift_rounded ( self -> xy , bits )"	211:4:7436:7476	5614314	1	True				
ANR	5614333	AssignmentExpression	"self -> xy = shift_rounded ( self -> xy , bits )"		5614314	0		=			
ANR	5614334	PtrMemberAccess	self -> xy		5614314	0					
ANR	5614335	Identifier	self		5614314	0					
ANR	5614336	Identifier	xy		5614314	1					
ANR	5614337	CallExpression	"shift_rounded ( self -> xy , bits )"		5614314	1					
ANR	5614338	Callee	shift_rounded		5614314	0					
ANR	5614339	Identifier	shift_rounded		5614314	0					
ANR	5614340	ArgumentList	self -> xy		5614314	1					
ANR	5614341	Argument	self -> xy		5614314	0					
ANR	5614342	PtrMemberAccess	self -> xy		5614314	0					
ANR	5614343	Identifier	self		5614314	0					
ANR	5614344	Identifier	xy		5614314	1					
ANR	5614345	Argument	bits		5614314	1					
ANR	5614346	Identifier	bits		5614314	0					
ANR	5614347	ExpressionStatement	"self -> yx = shift_rounded ( self -> yx , bits )"	212:4:7482:7522	5614314	2	True				
ANR	5614348	AssignmentExpression	"self -> yx = shift_rounded ( self -> yx , bits )"		5614314	0		=			
ANR	5614349	PtrMemberAccess	self -> yx		5614314	0					
ANR	5614350	Identifier	self		5614314	0					
ANR	5614351	Identifier	yx		5614314	1					
ANR	5614352	CallExpression	"shift_rounded ( self -> yx , bits )"		5614314	1					
ANR	5614353	Callee	shift_rounded		5614314	0					
ANR	5614354	Identifier	shift_rounded		5614314	0					
ANR	5614355	ArgumentList	self -> yx		5614314	1					
ANR	5614356	Argument	self -> yx		5614314	0					
ANR	5614357	PtrMemberAccess	self -> yx		5614314	0					
ANR	5614358	Identifier	self		5614314	0					
ANR	5614359	Identifier	yx		5614314	1					
ANR	5614360	Argument	bits		5614314	1					
ANR	5614361	Identifier	bits		5614314	0					
ANR	5614362	ExpressionStatement	"self -> yy = shift_rounded ( self -> yy , bits )"	213:4:7528:7568	5614314	3	True				
ANR	5614363	AssignmentExpression	"self -> yy = shift_rounded ( self -> yy , bits )"		5614314	0		=			
ANR	5614364	PtrMemberAccess	self -> yy		5614314	0					
ANR	5614365	Identifier	self		5614314	0					
ANR	5614366	Identifier	yy		5614314	1					
ANR	5614367	CallExpression	"shift_rounded ( self -> yy , bits )"		5614314	1					
ANR	5614368	Callee	shift_rounded		5614314	0					
ANR	5614369	Identifier	shift_rounded		5614314	0					
ANR	5614370	ArgumentList	self -> yy		5614314	1					
ANR	5614371	Argument	self -> yy		5614314	0					
ANR	5614372	PtrMemberAccess	self -> yy		5614314	0					
ANR	5614373	Identifier	self		5614314	0					
ANR	5614374	Identifier	yy		5614314	1					
ANR	5614375	Argument	bits		5614314	1					
ANR	5614376	Identifier	bits		5614314	0					
ANR	5614377	ExpressionStatement	self -> denominator >>= bits	214:4:7574:7600	5614314	4	True				
ANR	5614378	AssignmentExpression	self -> denominator >>= bits		5614314	0		>>=			
ANR	5614379	PtrMemberAccess	self -> denominator		5614314	0					
ANR	5614380	Identifier	self		5614314	0					
ANR	5614381	Identifier	denominator		5614314	1					
ANR	5614382	Identifier	bits		5614314	1					
ANR	5614383	ExpressionStatement	self -> bitshift -= bits	215:4:7606:7628	5614314	5	True				
ANR	5614384	AssignmentExpression	self -> bitshift -= bits		5614314	0		-=			
ANR	5614385	PtrMemberAccess	self -> bitshift		5614314	0					
ANR	5614386	Identifier	self		5614314	0					
ANR	5614387	Identifier	bitshift		5614314	1					
ANR	5614388	Identifier	bits		5614314	1					
ANR	5614389	ReturnType	static void		5614314	1					
ANR	5614390	Identifier	fraction_matrix__drop_bits		5614314	2					
ANR	5614391	ParameterList	"fraction_matrix * self , unsigned int bits"		5614314	3					
ANR	5614392	Parameter	fraction_matrix * self	209:39:7343:7364	5614314	0	True				
ANR	5614393	ParameterType	fraction_matrix *		5614314	0					
ANR	5614394	Identifier	self		5614314	1					
ANR	5614395	Parameter	unsigned int bits	209:63:7367:7383	5614314	1	True				
ANR	5614396	ParameterType	unsigned int		5614314	0					
ANR	5614397	Identifier	bits		5614314	1					
ANR	5614398	CFGEntryNode	ENTRY		5614314		True				
ANR	5614399	CFGExitNode	EXIT		5614314		True				
ANR	5614400	Symbol	self -> yx		5614314						
ANR	5614401	Symbol	self -> xx		5614314						
ANR	5614402	Symbol	self -> yy		5614314						
ANR	5614403	Symbol	self -> bitshift		5614314						
ANR	5614404	Symbol	* self		5614314						
ANR	5614405	Symbol	self -> xy		5614314						
ANR	5614406	Symbol	bits		5614314						
ANR	5614407	Symbol	self -> denominator		5614314						
ANR	5614408	Symbol	self		5614314						
ANR	5614409	Symbol	shift_rounded		5614314						
ANR	5614410	Function	fraction_matrix__set	218:0:7633:8786							
ANR	5614411	FunctionDef	"fraction_matrix__set (fraction_matrix * self , const double_matrix * pmat)"		5614410	0					
ANR	5614412	CompoundStatement		219:0:7718:8786	5614410	0					
ANR	5614413	IdentifierDeclStatement	"double axx = fabs ( pmat -> xx ) , axy = fabs ( pmat -> xy ) ;"	219:3:7722:7771	5614410	0	True				
ANR	5614414	IdentifierDecl	axx = fabs ( pmat -> xx )		5614410	0					
ANR	5614415	IdentifierDeclType	double		5614410	0					
ANR	5614416	Identifier	axx		5614410	1					
ANR	5614417	AssignmentExpression	axx = fabs ( pmat -> xx )		5614410	2		=			
ANR	5614418	Identifier	axx		5614410	0					
ANR	5614419	CallExpression	fabs ( pmat -> xx )		5614410	1					
ANR	5614420	Callee	fabs		5614410	0					
ANR	5614421	Identifier	fabs		5614410	0					
ANR	5614422	ArgumentList	pmat -> xx		5614410	1					
ANR	5614423	Argument	pmat -> xx		5614410	0					
ANR	5614424	PtrMemberAccess	pmat -> xx		5614410	0					
ANR	5614425	Identifier	pmat		5614410	0					
ANR	5614426	Identifier	xx		5614410	1					
ANR	5614427	IdentifierDecl	axy = fabs ( pmat -> xy )		5614410	1					
ANR	5614428	IdentifierDeclType	double		5614410	0					
ANR	5614429	Identifier	axy		5614410	1					
ANR	5614430	AssignmentExpression	axy = fabs ( pmat -> xy )		5614410	2		=			
ANR	5614431	Identifier	axy		5614410	0					
ANR	5614432	CallExpression	fabs ( pmat -> xy )		5614410	1					
ANR	5614433	Callee	fabs		5614410	0					
ANR	5614434	Identifier	fabs		5614410	0					
ANR	5614435	ArgumentList	pmat -> xy		5614410	1					
ANR	5614436	Argument	pmat -> xy		5614410	0					
ANR	5614437	PtrMemberAccess	pmat -> xy		5614410	0					
ANR	5614438	Identifier	pmat		5614410	0					
ANR	5614439	Identifier	xy		5614410	1					
ANR	5614440	IdentifierDeclStatement	"double ayx = fabs ( pmat -> yx ) , ayy = fabs ( pmat -> yy ) ;"	220:4:7777:7826	5614410	1	True				
ANR	5614441	IdentifierDecl	ayx = fabs ( pmat -> yx )		5614410	0					
ANR	5614442	IdentifierDeclType	double		5614410	0					
ANR	5614443	Identifier	ayx		5614410	1					
ANR	5614444	AssignmentExpression	ayx = fabs ( pmat -> yx )		5614410	2		=			
ANR	5614445	Identifier	ayx		5614410	0					
ANR	5614446	CallExpression	fabs ( pmat -> yx )		5614410	1					
ANR	5614447	Callee	fabs		5614410	0					
ANR	5614448	Identifier	fabs		5614410	0					
ANR	5614449	ArgumentList	pmat -> yx		5614410	1					
ANR	5614450	Argument	pmat -> yx		5614410	0					
ANR	5614451	PtrMemberAccess	pmat -> yx		5614410	0					
ANR	5614452	Identifier	pmat		5614410	0					
ANR	5614453	Identifier	yx		5614410	1					
ANR	5614454	IdentifierDecl	ayy = fabs ( pmat -> yy )		5614410	1					
ANR	5614455	IdentifierDeclType	double		5614410	0					
ANR	5614456	Identifier	ayy		5614410	1					
ANR	5614457	AssignmentExpression	ayy = fabs ( pmat -> yy )		5614410	2		=			
ANR	5614458	Identifier	ayy		5614410	0					
ANR	5614459	CallExpression	fabs ( pmat -> yy )		5614410	1					
ANR	5614460	Callee	fabs		5614410	0					
ANR	5614461	Identifier	fabs		5614410	0					
ANR	5614462	ArgumentList	pmat -> yy		5614410	1					
ANR	5614463	Argument	pmat -> yy		5614410	0					
ANR	5614464	PtrMemberAccess	pmat -> yy		5614410	0					
ANR	5614465	Identifier	pmat		5614410	0					
ANR	5614466	Identifier	yy		5614410	1					
ANR	5614467	IdentifierDeclStatement	"double scale = max ( axx + axy , ayx + ayy ) ;"	221:4:7832:7872	5614410	2	True				
ANR	5614468	IdentifierDecl	"scale = max ( axx + axy , ayx + ayy )"		5614410	0					
ANR	5614469	IdentifierDeclType	double		5614410	0					
ANR	5614470	Identifier	scale		5614410	1					
ANR	5614471	AssignmentExpression	"scale = max ( axx + axy , ayx + ayy )"		5614410	2		=			
ANR	5614472	Identifier	scale		5614410	0					
ANR	5614473	CallExpression	"max ( axx + axy , ayx + ayy )"		5614410	1					
ANR	5614474	Callee	max		5614410	0					
ANR	5614475	Identifier	max		5614410	0					
ANR	5614476	ArgumentList	axx + axy		5614410	1					
ANR	5614477	Argument	axx + axy		5614410	0					
ANR	5614478	AdditiveExpression	axx + axy		5614410	0		+			
ANR	5614479	Identifier	axx		5614410	0					
ANR	5614480	Identifier	axy		5614410	1					
ANR	5614481	Argument	ayx + ayy		5614410	1					
ANR	5614482	AdditiveExpression	ayx + ayy		5614410	0		+			
ANR	5614483	Identifier	ayx		5614410	0					
ANR	5614484	Identifier	ayy		5614410	1					
ANR	5614485	IdentifierDeclStatement	"int matrix_exp , m ;"	222:4:7878:7895	5614410	3	True				
ANR	5614486	IdentifierDecl	matrix_exp		5614410	0					
ANR	5614487	IdentifierDeclType	int		5614410	0					
ANR	5614488	Identifier	matrix_exp		5614410	1					
ANR	5614489	IdentifierDecl	m		5614410	1					
ANR	5614490	IdentifierDeclType	int		5614410	0					
ANR	5614491	Identifier	m		5614410	1					
ANR	5614492	ExpressionStatement	"( void ) frexp ( scale , & matrix_exp )"	224:4:7902:7933	5614410	4	True				
ANR	5614493	CastExpression	"( void ) frexp ( scale , & matrix_exp )"		5614410	0					
ANR	5614494	CastTarget	void		5614410	0					
ANR	5614495	CallExpression	"frexp ( scale , & matrix_exp )"		5614410	1					
ANR	5614496	Callee	frexp		5614410	0					
ANR	5614497	Identifier	frexp		5614410	0					
ANR	5614498	ArgumentList	scale		5614410	1					
ANR	5614499	Argument	scale		5614410	0					
ANR	5614500	Identifier	scale		5614410	0					
ANR	5614501	Argument	& matrix_exp		5614410	1					
ANR	5614502	UnaryOperationExpression	& matrix_exp		5614410	0					
ANR	5614503	UnaryOperator	&		5614410	0					
ANR	5614504	Identifier	matrix_exp		5614410	1					
ANR	5614505	ExpressionStatement	self -> bitshift = matrix_bits - matrix_exp	225:4:7939:7980	5614410	5	True				
ANR	5614506	AssignmentExpression	self -> bitshift = matrix_bits - matrix_exp		5614410	0		=			
ANR	5614507	PtrMemberAccess	self -> bitshift		5614410	0					
ANR	5614508	Identifier	self		5614410	0					
ANR	5614509	Identifier	bitshift		5614410	1					
ANR	5614510	AdditiveExpression	matrix_bits - matrix_exp		5614410	1		-			
ANR	5614511	Identifier	matrix_bits		5614410	0					
ANR	5614512	Identifier	matrix_exp		5614410	1					
ANR	5614513	IfStatement	if ( self -> bitshift >= sizeof ( self -> denominator ) * 8 )		5614410	6					
ANR	5614514	Condition	self -> bitshift >= sizeof ( self -> denominator ) * 8	226:8:7990:8037	5614410	0	True				
ANR	5614515	RelationalExpression	self -> bitshift >= sizeof ( self -> denominator ) * 8		5614410	0		>=			
ANR	5614516	PtrMemberAccess	self -> bitshift		5614410	0					
ANR	5614517	Identifier	self		5614410	0					
ANR	5614518	Identifier	bitshift		5614410	1					
ANR	5614519	MultiplicativeExpression	sizeof ( self -> denominator ) * 8		5614410	1		*			
ANR	5614520	SizeofExpression	sizeof ( self -> denominator )		5614410	0					
ANR	5614521	Sizeof	sizeof		5614410	0					
ANR	5614522	PtrMemberAccess	self -> denominator		5614410	1					
ANR	5614523	Identifier	self		5614410	0					
ANR	5614524	Identifier	denominator		5614410	1					
ANR	5614525	PrimaryExpression	8		5614410	1					
ANR	5614526	CompoundStatement		8:58:321:321	5614410	1					
ANR	5614527	ExpressionStatement	self -> denominator = 0	227:8:8050:8071	5614410	0	True				
ANR	5614528	AssignmentExpression	self -> denominator = 0		5614410	0		=			
ANR	5614529	PtrMemberAccess	self -> denominator		5614410	0					
ANR	5614530	Identifier	self		5614410	0					
ANR	5614531	Identifier	denominator		5614410	1					
ANR	5614532	PrimaryExpression	0		5614410	1					
ANR	5614533	ExpressionStatement	self -> xx = self -> xy = self -> yx = self -> yy = 0	228:8:8081:8126	5614410	1	True				
ANR	5614534	AssignmentExpression	self -> xx = self -> xy = self -> yx = self -> yy = 0		5614410	0		=			
ANR	5614535	PtrMemberAccess	self -> xx		5614410	0					
ANR	5614536	Identifier	self		5614410	0					
ANR	5614537	Identifier	xx		5614410	1					
ANR	5614538	AssignmentExpression	self -> xy = self -> yx = self -> yy = 0		5614410	1		=			
ANR	5614539	PtrMemberAccess	self -> xy		5614410	0					
ANR	5614540	Identifier	self		5614410	0					
ANR	5614541	Identifier	xy		5614410	1					
ANR	5614542	AssignmentExpression	self -> yx = self -> yy = 0		5614410	1		=			
ANR	5614543	PtrMemberAccess	self -> yx		5614410	0					
ANR	5614544	Identifier	self		5614410	0					
ANR	5614545	Identifier	yx		5614410	1					
ANR	5614546	AssignmentExpression	self -> yy = 0		5614410	1		=			
ANR	5614547	PtrMemberAccess	self -> yy		5614410	0					
ANR	5614548	Identifier	self		5614410	0					
ANR	5614549	Identifier	yy		5614410	1					
ANR	5614550	PrimaryExpression	0		5614410	1					
ANR	5614551	ElseStatement	else		5614410	0					
ANR	5614552	CompoundStatement		11:11:420:420	5614410	0					
ANR	5614553	ExpressionStatement	self -> denominator = 1 << self -> bitshift	230:8:8149:8188	5614410	0	True				
ANR	5614554	AssignmentExpression	self -> denominator = 1 << self -> bitshift		5614410	0		=			
ANR	5614555	PtrMemberAccess	self -> denominator		5614410	0					
ANR	5614556	Identifier	self		5614410	0					
ANR	5614557	Identifier	denominator		5614410	1					
ANR	5614558	ShiftExpression	1 << self -> bitshift		5614410	1		<<			
ANR	5614559	PrimaryExpression	1		5614410	0					
ANR	5614560	PtrMemberAccess	self -> bitshift		5614410	1					
ANR	5614561	Identifier	self		5614410	0					
ANR	5614562	Identifier	bitshift		5614410	1					
ANR	5614563	ExpressionStatement	self -> xx = ( int32_t ) ( pmat -> xx * self -> denominator + 0.5 )	232:8:8274:8330	5614410	1	True				
ANR	5614564	AssignmentExpression	self -> xx = ( int32_t ) ( pmat -> xx * self -> denominator + 0.5 )		5614410	0		=			
ANR	5614565	PtrMemberAccess	self -> xx		5614410	0					
ANR	5614566	Identifier	self		5614410	0					
ANR	5614567	Identifier	xx		5614410	1					
ANR	5614568	CastExpression	( int32_t ) ( pmat -> xx * self -> denominator + 0.5 )		5614410	1					
ANR	5614569	CastTarget	int32_t		5614410	0					
ANR	5614570	AdditiveExpression	pmat -> xx * self -> denominator + 0.5		5614410	1		+			
ANR	5614571	MultiplicativeExpression	pmat -> xx * self -> denominator		5614410	0		*			
ANR	5614572	PtrMemberAccess	pmat -> xx		5614410	0					
ANR	5614573	Identifier	pmat		5614410	0					
ANR	5614574	Identifier	xx		5614410	1					
ANR	5614575	PtrMemberAccess	self -> denominator		5614410	1					
ANR	5614576	Identifier	self		5614410	0					
ANR	5614577	Identifier	denominator		5614410	1					
ANR	5614578	PrimaryExpression	0.5		5614410	1					
ANR	5614579	ExpressionStatement	self -> xy = ( int32_t ) ( pmat -> xy * self -> denominator + 0.5 )	233:8:8340:8396	5614410	2	True				
ANR	5614580	AssignmentExpression	self -> xy = ( int32_t ) ( pmat -> xy * self -> denominator + 0.5 )		5614410	0		=			
ANR	5614581	PtrMemberAccess	self -> xy		5614410	0					
ANR	5614582	Identifier	self		5614410	0					
ANR	5614583	Identifier	xy		5614410	1					
ANR	5614584	CastExpression	( int32_t ) ( pmat -> xy * self -> denominator + 0.5 )		5614410	1					
ANR	5614585	CastTarget	int32_t		5614410	0					
ANR	5614586	AdditiveExpression	pmat -> xy * self -> denominator + 0.5		5614410	1		+			
ANR	5614587	MultiplicativeExpression	pmat -> xy * self -> denominator		5614410	0		*			
ANR	5614588	PtrMemberAccess	pmat -> xy		5614410	0					
ANR	5614589	Identifier	pmat		5614410	0					
ANR	5614590	Identifier	xy		5614410	1					
ANR	5614591	PtrMemberAccess	self -> denominator		5614410	1					
ANR	5614592	Identifier	self		5614410	0					
ANR	5614593	Identifier	denominator		5614410	1					
ANR	5614594	PrimaryExpression	0.5		5614410	1					
ANR	5614595	ExpressionStatement	self -> yx = ( int32_t ) ( pmat -> yx * self -> denominator + 0.5 )	234:8:8406:8462	5614410	3	True				
ANR	5614596	AssignmentExpression	self -> yx = ( int32_t ) ( pmat -> yx * self -> denominator + 0.5 )		5614410	0		=			
ANR	5614597	PtrMemberAccess	self -> yx		5614410	0					
ANR	5614598	Identifier	self		5614410	0					
ANR	5614599	Identifier	yx		5614410	1					
ANR	5614600	CastExpression	( int32_t ) ( pmat -> yx * self -> denominator + 0.5 )		5614410	1					
ANR	5614601	CastTarget	int32_t		5614410	0					
ANR	5614602	AdditiveExpression	pmat -> yx * self -> denominator + 0.5		5614410	1		+			
ANR	5614603	MultiplicativeExpression	pmat -> yx * self -> denominator		5614410	0		*			
ANR	5614604	PtrMemberAccess	pmat -> yx		5614410	0					
ANR	5614605	Identifier	pmat		5614410	0					
ANR	5614606	Identifier	yx		5614410	1					
ANR	5614607	PtrMemberAccess	self -> denominator		5614410	1					
ANR	5614608	Identifier	self		5614410	0					
ANR	5614609	Identifier	denominator		5614410	1					
ANR	5614610	PrimaryExpression	0.5		5614410	1					
ANR	5614611	ExpressionStatement	self -> yy = ( int32_t ) ( pmat -> yy * self -> denominator + 0.5 )	235:8:8472:8528	5614410	4	True				
ANR	5614612	AssignmentExpression	self -> yy = ( int32_t ) ( pmat -> yy * self -> denominator + 0.5 )		5614410	0		=			
ANR	5614613	PtrMemberAccess	self -> yy		5614410	0					
ANR	5614614	Identifier	self		5614410	0					
ANR	5614615	Identifier	yy		5614410	1					
ANR	5614616	CastExpression	( int32_t ) ( pmat -> yy * self -> denominator + 0.5 )		5614410	1					
ANR	5614617	CastTarget	int32_t		5614410	0					
ANR	5614618	AdditiveExpression	pmat -> yy * self -> denominator + 0.5		5614410	1		+			
ANR	5614619	MultiplicativeExpression	pmat -> yy * self -> denominator		5614410	0		*			
ANR	5614620	PtrMemberAccess	pmat -> yy		5614410	0					
ANR	5614621	Identifier	pmat		5614410	0					
ANR	5614622	Identifier	yy		5614410	1					
ANR	5614623	PtrMemberAccess	self -> denominator		5614410	1					
ANR	5614624	Identifier	self		5614410	0					
ANR	5614625	Identifier	denominator		5614410	1					
ANR	5614626	PrimaryExpression	0.5		5614410	1					
ANR	5614627	ExpressionStatement	"m = Max ( Max ( any_abs ( self -> xx ) , any_abs ( self -> xy ) ) , Max ( any_abs ( self -> yx ) , any_abs ( self -> yy ) ) )"	236:8:8538:8631	5614410	5	True				
ANR	5614628	AssignmentExpression	"m = Max ( Max ( any_abs ( self -> xx ) , any_abs ( self -> xy ) ) , Max ( any_abs ( self -> yx ) , any_abs ( self -> yy ) ) )"		5614410	0		=			
ANR	5614629	Identifier	m		5614410	0					
ANR	5614630	CallExpression	"Max ( Max ( any_abs ( self -> xx ) , any_abs ( self -> xy ) ) , Max ( any_abs ( self -> yx ) , any_abs ( self -> yy ) ) )"		5614410	1					
ANR	5614631	Callee	Max		5614410	0					
ANR	5614632	Identifier	Max		5614410	0					
ANR	5614633	ArgumentList	"Max ( any_abs ( self -> xx ) , any_abs ( self -> xy ) )"		5614410	1					
ANR	5614634	Argument	"Max ( any_abs ( self -> xx ) , any_abs ( self -> xy ) )"		5614410	0					
ANR	5614635	CallExpression	"Max ( any_abs ( self -> xx ) , any_abs ( self -> xy ) )"		5614410	0					
ANR	5614636	Callee	Max		5614410	0					
ANR	5614637	Identifier	Max		5614410	0					
ANR	5614638	ArgumentList	any_abs ( self -> xx )		5614410	1					
ANR	5614639	Argument	any_abs ( self -> xx )		5614410	0					
ANR	5614640	CallExpression	any_abs ( self -> xx )		5614410	0					
ANR	5614641	Callee	any_abs		5614410	0					
ANR	5614642	Identifier	any_abs		5614410	0					
ANR	5614643	ArgumentList	self -> xx		5614410	1					
ANR	5614644	Argument	self -> xx		5614410	0					
ANR	5614645	PtrMemberAccess	self -> xx		5614410	0					
ANR	5614646	Identifier	self		5614410	0					
ANR	5614647	Identifier	xx		5614410	1					
ANR	5614648	Argument	any_abs ( self -> xy )		5614410	1					
ANR	5614649	CallExpression	any_abs ( self -> xy )		5614410	0					
ANR	5614650	Callee	any_abs		5614410	0					
ANR	5614651	Identifier	any_abs		5614410	0					
ANR	5614652	ArgumentList	self -> xy		5614410	1					
ANR	5614653	Argument	self -> xy		5614410	0					
ANR	5614654	PtrMemberAccess	self -> xy		5614410	0					
ANR	5614655	Identifier	self		5614410	0					
ANR	5614656	Identifier	xy		5614410	1					
ANR	5614657	Argument	"Max ( any_abs ( self -> yx ) , any_abs ( self -> yy ) )"		5614410	1					
ANR	5614658	CallExpression	"Max ( any_abs ( self -> yx ) , any_abs ( self -> yy ) )"		5614410	0					
ANR	5614659	Callee	Max		5614410	0					
ANR	5614660	Identifier	Max		5614410	0					
ANR	5614661	ArgumentList	any_abs ( self -> yx )		5614410	1					
ANR	5614662	Argument	any_abs ( self -> yx )		5614410	0					
ANR	5614663	CallExpression	any_abs ( self -> yx )		5614410	0					
ANR	5614664	Callee	any_abs		5614410	0					
ANR	5614665	Identifier	any_abs		5614410	0					
ANR	5614666	ArgumentList	self -> yx		5614410	1					
ANR	5614667	Argument	self -> yx		5614410	0					
ANR	5614668	PtrMemberAccess	self -> yx		5614410	0					
ANR	5614669	Identifier	self		5614410	0					
ANR	5614670	Identifier	yx		5614410	1					
ANR	5614671	Argument	any_abs ( self -> yy )		5614410	1					
ANR	5614672	CallExpression	any_abs ( self -> yy )		5614410	0					
ANR	5614673	Callee	any_abs		5614410	0					
ANR	5614674	Identifier	any_abs		5614410	0					
ANR	5614675	ArgumentList	self -> yy		5614410	1					
ANR	5614676	Argument	self -> yy		5614410	0					
ANR	5614677	PtrMemberAccess	self -> yy		5614410	0					
ANR	5614678	Identifier	self		5614410	0					
ANR	5614679	Identifier	yy		5614410	1					
ANR	5614680	ExpressionStatement	"( void ) frexp ( m , & matrix_exp )"	237:8:8641:8668	5614410	6	True				
ANR	5614681	CastExpression	"( void ) frexp ( m , & matrix_exp )"		5614410	0					
ANR	5614682	CastTarget	void		5614410	0					
ANR	5614683	CallExpression	"frexp ( m , & matrix_exp )"		5614410	1					
ANR	5614684	Callee	frexp		5614410	0					
ANR	5614685	Identifier	frexp		5614410	0					
ANR	5614686	ArgumentList	m		5614410	1					
ANR	5614687	Argument	m		5614410	0					
ANR	5614688	Identifier	m		5614410	0					
ANR	5614689	Argument	& matrix_exp		5614410	1					
ANR	5614690	UnaryOperationExpression	& matrix_exp		5614410	0					
ANR	5614691	UnaryOperator	&		5614410	0					
ANR	5614692	Identifier	matrix_exp		5614410	1					
ANR	5614693	IfStatement	if ( matrix_exp > matrix_bits )		5614410	7					
ANR	5614694	Condition	matrix_exp > matrix_bits	238:12:8682:8705	5614410	0	True				
ANR	5614695	RelationalExpression	matrix_exp > matrix_bits		5614410	0		>			
ANR	5614696	Identifier	matrix_exp		5614410	0					
ANR	5614697	Identifier	matrix_bits		5614410	1					
ANR	5614698	ExpressionStatement	"fraction_matrix__drop_bits ( self , matrix_exp - matrix_bits )"	239:12:8720:8778	5614410	1	True				
ANR	5614699	CallExpression	"fraction_matrix__drop_bits ( self , matrix_exp - matrix_bits )"		5614410	0					
ANR	5614700	Callee	fraction_matrix__drop_bits		5614410	0					
ANR	5614701	Identifier	fraction_matrix__drop_bits		5614410	0					
ANR	5614702	ArgumentList	self		5614410	1					
ANR	5614703	Argument	self		5614410	0					
ANR	5614704	Identifier	self		5614410	0					
ANR	5614705	Argument	matrix_exp - matrix_bits		5614410	1					
ANR	5614706	AdditiveExpression	matrix_exp - matrix_bits		5614410	0		-			
ANR	5614707	Identifier	matrix_exp		5614410	0					
ANR	5614708	Identifier	matrix_bits		5614410	1					
ANR	5614709	ReturnType	static void		5614410	1					
ANR	5614710	Identifier	fraction_matrix__set		5614410	2					
ANR	5614711	ParameterList	"fraction_matrix * self , const double_matrix * pmat"		5614410	3					
ANR	5614712	Parameter	fraction_matrix * self	218:33:7666:7687	5614410	0	True				
ANR	5614713	ParameterType	fraction_matrix *		5614410	0					
ANR	5614714	Identifier	self		5614410	1					
ANR	5614715	Parameter	const double_matrix * pmat	218:57:7690:7715	5614410	1	True				
ANR	5614716	ParameterType	const double_matrix *		5614410	0					
ANR	5614717	Identifier	pmat		5614410	1					
ANR	5614718	CFGEntryNode	ENTRY		5614410		True				
ANR	5614719	CFGExitNode	EXIT		5614410		True				
ANR	5614720	Symbol	ayy		5614410						
ANR	5614721	Symbol	ayx		5614410						
ANR	5614722	Symbol	pmat		5614410						
ANR	5614723	Symbol	pmat -> xx		5614410						
ANR	5614724	Symbol	* pmat		5614410						
ANR	5614725	Symbol	Max		5614410						
ANR	5614726	Symbol	self -> denominator		5614410						
ANR	5614727	Symbol	scale		5614410						
ANR	5614728	Symbol	self -> xx		5614410						
ANR	5614729	Symbol	self -> xy		5614410						
ANR	5614730	Symbol	any_abs		5614410						
ANR	5614731	Symbol	matrix_bits		5614410						
ANR	5614732	Symbol	axx		5614410						
ANR	5614733	Symbol	fabs		5614410						
ANR	5614734	Symbol	axy		5614410						
ANR	5614735	Symbol	pmat -> yy		5614410						
ANR	5614736	Symbol	pmat -> yx		5614410						
ANR	5614737	Symbol	max		5614410						
ANR	5614738	Symbol	self -> bitshift		5614410						
ANR	5614739	Symbol	* self		5614410						
ANR	5614740	Symbol	matrix_exp		5614410						
ANR	5614741	Symbol	m		5614410						
ANR	5614742	Symbol	self -> yx		5614410						
ANR	5614743	Symbol	self -> yy		5614410						
ANR	5614744	Symbol	& matrix_exp		5614410						
ANR	5614745	Symbol	self		5614410						
ANR	5614746	Symbol	pmat -> xy		5614410						
ANR	5614747	Function	fraction_matrix__to_double	243:0:8789:9189							
ANR	5614748	FunctionDef	"fraction_matrix__to_double (const fraction_matrix * self , double_matrix * pmat)"		5614747	0					
ANR	5614749	CompoundStatement		244:0:8886:9189	5614747	0					
ANR	5614750	IfStatement	if ( self -> denominator == 0 )		5614747	0					
ANR	5614751	Condition	self -> denominator == 0	245:8:8896:8917	5614747	0	True				
ANR	5614752	EqualityExpression	self -> denominator == 0		5614747	0		==			
ANR	5614753	PtrMemberAccess	self -> denominator		5614747	0					
ANR	5614754	Identifier	self		5614747	0					
ANR	5614755	Identifier	denominator		5614747	1					
ANR	5614756	PrimaryExpression	0		5614747	1					
ANR	5614757	ExpressionStatement	return_error ( gs_error_rangecheck )	246:8:8928:8961	5614747	1	True				
ANR	5614758	CallExpression	return_error ( gs_error_rangecheck )		5614747	0					
ANR	5614759	Callee	return_error		5614747	0					
ANR	5614760	Identifier	return_error		5614747	0					
ANR	5614761	ArgumentList	gs_error_rangecheck		5614747	1					
ANR	5614762	Argument	gs_error_rangecheck		5614747	0					
ANR	5614763	Identifier	gs_error_rangecheck		5614747	0					
ANR	5614764	ExpressionStatement	pmat -> xx = ( double ) self -> xx / self -> denominator	247:4:8967:9014	5614747	1	True				
ANR	5614765	AssignmentExpression	pmat -> xx = ( double ) self -> xx / self -> denominator		5614747	0		=			
ANR	5614766	PtrMemberAccess	pmat -> xx		5614747	0					
ANR	5614767	Identifier	pmat		5614747	0					
ANR	5614768	Identifier	xx		5614747	1					
ANR	5614769	MultiplicativeExpression	( double ) self -> xx / self -> denominator		5614747	1		/			
ANR	5614770	CastExpression	( double ) self -> xx		5614747	0					
ANR	5614771	CastTarget	double		5614747	0					
ANR	5614772	PtrMemberAccess	self -> xx		5614747	1					
ANR	5614773	Identifier	self		5614747	0					
ANR	5614774	Identifier	xx		5614747	1					
ANR	5614775	PtrMemberAccess	self -> denominator		5614747	1					
ANR	5614776	Identifier	self		5614747	0					
ANR	5614777	Identifier	denominator		5614747	1					
ANR	5614778	ExpressionStatement	pmat -> xy = ( double ) self -> xy / self -> denominator	248:4:9020:9067	5614747	2	True				
ANR	5614779	AssignmentExpression	pmat -> xy = ( double ) self -> xy / self -> denominator		5614747	0		=			
ANR	5614780	PtrMemberAccess	pmat -> xy		5614747	0					
ANR	5614781	Identifier	pmat		5614747	0					
ANR	5614782	Identifier	xy		5614747	1					
ANR	5614783	MultiplicativeExpression	( double ) self -> xy / self -> denominator		5614747	1		/			
ANR	5614784	CastExpression	( double ) self -> xy		5614747	0					
ANR	5614785	CastTarget	double		5614747	0					
ANR	5614786	PtrMemberAccess	self -> xy		5614747	1					
ANR	5614787	Identifier	self		5614747	0					
ANR	5614788	Identifier	xy		5614747	1					
ANR	5614789	PtrMemberAccess	self -> denominator		5614747	1					
ANR	5614790	Identifier	self		5614747	0					
ANR	5614791	Identifier	denominator		5614747	1					
ANR	5614792	ExpressionStatement	pmat -> yx = ( double ) self -> yx / self -> denominator	249:4:9073:9120	5614747	3	True				
ANR	5614793	AssignmentExpression	pmat -> yx = ( double ) self -> yx / self -> denominator		5614747	0		=			
ANR	5614794	PtrMemberAccess	pmat -> yx		5614747	0					
ANR	5614795	Identifier	pmat		5614747	0					
ANR	5614796	Identifier	yx		5614747	1					
ANR	5614797	MultiplicativeExpression	( double ) self -> yx / self -> denominator		5614747	1		/			
ANR	5614798	CastExpression	( double ) self -> yx		5614747	0					
ANR	5614799	CastTarget	double		5614747	0					
ANR	5614800	PtrMemberAccess	self -> yx		5614747	1					
ANR	5614801	Identifier	self		5614747	0					
ANR	5614802	Identifier	yx		5614747	1					
ANR	5614803	PtrMemberAccess	self -> denominator		5614747	1					
ANR	5614804	Identifier	self		5614747	0					
ANR	5614805	Identifier	denominator		5614747	1					
ANR	5614806	ExpressionStatement	pmat -> yy = ( double ) self -> yy / self -> denominator	250:4:9126:9173	5614747	4	True				
ANR	5614807	AssignmentExpression	pmat -> yy = ( double ) self -> yy / self -> denominator		5614747	0		=			
ANR	5614808	PtrMemberAccess	pmat -> yy		5614747	0					
ANR	5614809	Identifier	pmat		5614747	0					
ANR	5614810	Identifier	yy		5614747	1					
ANR	5614811	MultiplicativeExpression	( double ) self -> yy / self -> denominator		5614747	1		/			
ANR	5614812	CastExpression	( double ) self -> yy		5614747	0					
ANR	5614813	CastTarget	double		5614747	0					
ANR	5614814	PtrMemberAccess	self -> yy		5614747	1					
ANR	5614815	Identifier	self		5614747	0					
ANR	5614816	Identifier	yy		5614747	1					
ANR	5614817	PtrMemberAccess	self -> denominator		5614747	1					
ANR	5614818	Identifier	self		5614747	0					
ANR	5614819	Identifier	denominator		5614747	1					
ANR	5614820	ReturnStatement	return 0 ;	251:4:9179:9187	5614747	5	True				
ANR	5614821	PrimaryExpression	0		5614747	0					
ANR	5614822	ReturnType	static inline int		5614747	1					
ANR	5614823	Identifier	fraction_matrix__to_double		5614747	2					
ANR	5614824	ParameterList	"const fraction_matrix * self , double_matrix * pmat"		5614747	3					
ANR	5614825	Parameter	const fraction_matrix * self	243:45:8834:8861	5614747	0	True				
ANR	5614826	ParameterType	const fraction_matrix *		5614747	0					
ANR	5614827	Identifier	self		5614747	1					
ANR	5614828	Parameter	double_matrix * pmat	243:75:8864:8883	5614747	1	True				
ANR	5614829	ParameterType	double_matrix *		5614747	0					
ANR	5614830	Identifier	pmat		5614747	1					
ANR	5614831	CFGEntryNode	ENTRY		5614747		True				
ANR	5614832	CFGExitNode	EXIT		5614747		True				
ANR	5614833	Symbol	pmat		5614747						
ANR	5614834	Symbol	gs_error_rangecheck		5614747						
ANR	5614835	Symbol	pmat -> xx		5614747						
ANR	5614836	Symbol	pmat -> yy		5614747						
ANR	5614837	Symbol	* pmat		5614747						
ANR	5614838	Symbol	pmat -> yx		5614747						
ANR	5614839	Symbol	* self		5614747						
ANR	5614840	Symbol	self -> denominator		5614747						
ANR	5614841	Symbol	self -> yx		5614747						
ANR	5614842	Symbol	self -> xx		5614747						
ANR	5614843	Symbol	self -> yy		5614747						
ANR	5614844	Symbol	self -> xy		5614747						
ANR	5614845	Symbol	self		5614747						
ANR	5614846	Symbol	pmat -> xy		5614747						
ANR	5614847	Function	fraction_matrix__invert_to	254:0:9192:9545							
ANR	5614848	FunctionDef	"fraction_matrix__invert_to (const fraction_matrix * self , fraction_matrix * pmat)"		5614847	0					
ANR	5614849	CompoundStatement		255:0:9284:9545	5614847	0					
ANR	5614850	IdentifierDeclStatement	"double_matrix m , M ;"	255:3:9288:9306	5614847	0	True				
ANR	5614851	IdentifierDecl	m		5614847	0					
ANR	5614852	IdentifierDeclType	double_matrix		5614847	0					
ANR	5614853	Identifier	m		5614847	1					
ANR	5614854	IdentifierDecl	M		5614847	1					
ANR	5614855	IdentifierDeclType	double_matrix		5614847	0					
ANR	5614856	Identifier	M		5614847	1					
ANR	5614857	IdentifierDeclStatement	int code ;	256:4:9312:9320	5614847	1	True				
ANR	5614858	IdentifierDecl	code		5614847	0					
ANR	5614859	IdentifierDeclType	int		5614847	0					
ANR	5614860	Identifier	code		5614847	1					
ANR	5614861	ExpressionStatement	"code = fraction_matrix__to_double ( self , & M )"	258:4:9327:9370	5614847	2	True				
ANR	5614862	AssignmentExpression	"code = fraction_matrix__to_double ( self , & M )"		5614847	0		=			
ANR	5614863	Identifier	code		5614847	0					
ANR	5614864	CallExpression	"fraction_matrix__to_double ( self , & M )"		5614847	1					
ANR	5614865	Callee	fraction_matrix__to_double		5614847	0					
ANR	5614866	Identifier	fraction_matrix__to_double		5614847	0					
ANR	5614867	ArgumentList	self		5614847	1					
ANR	5614868	Argument	self		5614847	0					
ANR	5614869	Identifier	self		5614847	0					
ANR	5614870	Argument	& M		5614847	1					
ANR	5614871	UnaryOperationExpression	& M		5614847	0					
ANR	5614872	UnaryOperator	&		5614847	0					
ANR	5614873	Identifier	M		5614847	1					
ANR	5614874	IfStatement	if ( code < 0 )		5614847	3					
ANR	5614875	Condition	code < 0	259:8:9380:9387	5614847	0	True				
ANR	5614876	RelationalExpression	code < 0		5614847	0		<			
ANR	5614877	Identifier	code		5614847	0					
ANR	5614878	PrimaryExpression	0		5614847	1					
ANR	5614879	ReturnStatement	return code ;	260:8:9398:9409	5614847	1	True				
ANR	5614880	Identifier	code		5614847	0					
ANR	5614881	ExpressionStatement	"code = double_matrix__invert_to ( & M , & m )"	261:4:9415:9454	5614847	4	True				
ANR	5614882	AssignmentExpression	"code = double_matrix__invert_to ( & M , & m )"		5614847	0		=			
ANR	5614883	Identifier	code		5614847	0					
ANR	5614884	CallExpression	"double_matrix__invert_to ( & M , & m )"		5614847	1					
ANR	5614885	Callee	double_matrix__invert_to		5614847	0					
ANR	5614886	Identifier	double_matrix__invert_to		5614847	0					
ANR	5614887	ArgumentList	& M		5614847	1					
ANR	5614888	Argument	& M		5614847	0					
ANR	5614889	UnaryOperationExpression	& M		5614847	0					
ANR	5614890	UnaryOperator	&		5614847	0					
ANR	5614891	Identifier	M		5614847	1					
ANR	5614892	Argument	& m		5614847	1					
ANR	5614893	UnaryOperationExpression	& m		5614847	0					
ANR	5614894	UnaryOperator	&		5614847	0					
ANR	5614895	Identifier	m		5614847	1					
ANR	5614896	IfStatement	if ( code < 0 )		5614847	5					
ANR	5614897	Condition	code < 0	262:8:9464:9471	5614847	0	True				
ANR	5614898	RelationalExpression	code < 0		5614847	0		<			
ANR	5614899	Identifier	code		5614847	0					
ANR	5614900	PrimaryExpression	0		5614847	1					
ANR	5614901	ReturnStatement	return code ;	263:8:9482:9493	5614847	1	True				
ANR	5614902	Identifier	code		5614847	0					
ANR	5614903	ExpressionStatement	"fraction_matrix__set ( pmat , & m )"	264:4:9499:9529	5614847	6	True				
ANR	5614904	CallExpression	"fraction_matrix__set ( pmat , & m )"		5614847	0					
ANR	5614905	Callee	fraction_matrix__set		5614847	0					
ANR	5614906	Identifier	fraction_matrix__set		5614847	0					
ANR	5614907	ArgumentList	pmat		5614847	1					
ANR	5614908	Argument	pmat		5614847	0					
ANR	5614909	Identifier	pmat		5614847	0					
ANR	5614910	Argument	& m		5614847	1					
ANR	5614911	UnaryOperationExpression	& m		5614847	0					
ANR	5614912	UnaryOperator	&		5614847	0					
ANR	5614913	Identifier	m		5614847	1					
ANR	5614914	ReturnStatement	return 0 ;	265:4:9535:9543	5614847	7	True				
ANR	5614915	PrimaryExpression	0		5614847	0					
ANR	5614916	ReturnType	static int		5614847	1					
ANR	5614917	Identifier	fraction_matrix__invert_to		5614847	2					
ANR	5614918	ParameterList	"const fraction_matrix * self , fraction_matrix * pmat"		5614847	3					
ANR	5614919	Parameter	const fraction_matrix * self	254:38:9230:9257	5614847	0	True				
ANR	5614920	ParameterType	const fraction_matrix *		5614847	0					
ANR	5614921	Identifier	self		5614847	1					
ANR	5614922	Parameter	fraction_matrix * pmat	254:68:9260:9281	5614847	1	True				
ANR	5614923	ParameterType	fraction_matrix *		5614847	0					
ANR	5614924	Identifier	pmat		5614847	1					
ANR	5614925	CFGEntryNode	ENTRY		5614847		True				
ANR	5614926	CFGExitNode	EXIT		5614847		True				
ANR	5614927	Symbol	code		5614847						
ANR	5614928	Symbol	& M		5614847						
ANR	5614929	Symbol	& m		5614847						
ANR	5614930	Symbol	pmat		5614847						
ANR	5614931	Symbol	fraction_matrix__to_double		5614847						
ANR	5614932	Symbol	self		5614847						
ANR	5614933	Symbol	double_matrix__invert_to		5614847						
ANR	5614934	Symbol	m		5614847						
ANR	5614935	Symbol	M		5614847						
ANR	5614936	Function	fraction_matrix__transform_x	268:0:9548:9734							
ANR	5614937	FunctionDef	"fraction_matrix__transform_x (fraction_matrix * self , int24 x , int24 y , unsigned int s)"		5614936	0					
ANR	5614938	CompoundStatement		269:0:9656:9734	5614936	0					
ANR	5614939	ReturnStatement	"return mul_shift_round ( x , self -> xx , s ) + mul_shift_round ( y , self -> yx , s ) ;"	269:3:9660:9732	5614936	0	True				
ANR	5614940	AdditiveExpression	"mul_shift_round ( x , self -> xx , s ) + mul_shift_round ( y , self -> yx , s )"		5614936	0		+			
ANR	5614941	CallExpression	"mul_shift_round ( x , self -> xx , s )"		5614936	0					
ANR	5614942	Callee	mul_shift_round		5614936	0					
ANR	5614943	Identifier	mul_shift_round		5614936	0					
ANR	5614944	ArgumentList	x		5614936	1					
ANR	5614945	Argument	x		5614936	0					
ANR	5614946	Identifier	x		5614936	0					
ANR	5614947	Argument	self -> xx		5614936	1					
ANR	5614948	PtrMemberAccess	self -> xx		5614936	0					
ANR	5614949	Identifier	self		5614936	0					
ANR	5614950	Identifier	xx		5614936	1					
ANR	5614951	Argument	s		5614936	2					
ANR	5614952	Identifier	s		5614936	0					
ANR	5614953	CallExpression	"mul_shift_round ( y , self -> yx , s )"		5614936	1					
ANR	5614954	Callee	mul_shift_round		5614936	0					
ANR	5614955	Identifier	mul_shift_round		5614936	0					
ANR	5614956	ArgumentList	y		5614936	1					
ANR	5614957	Argument	y		5614936	0					
ANR	5614958	Identifier	y		5614936	0					
ANR	5614959	Argument	self -> yx		5614936	1					
ANR	5614960	PtrMemberAccess	self -> yx		5614936	0					
ANR	5614961	Identifier	self		5614936	0					
ANR	5614962	Identifier	yx		5614936	1					
ANR	5614963	Argument	s		5614936	2					
ANR	5614964	Identifier	s		5614936	0					
ANR	5614965	ReturnType	static inline int32_t		5614936	1					
ANR	5614966	Identifier	fraction_matrix__transform_x		5614936	2					
ANR	5614967	ParameterList	"fraction_matrix * self , int24 x , int24 y , unsigned int s"		5614936	3					
ANR	5614968	Parameter	fraction_matrix * self	268:51:9599:9619	5614936	0	True				
ANR	5614969	ParameterType	fraction_matrix *		5614936	0					
ANR	5614970	Identifier	self		5614936	1					
ANR	5614971	Parameter	int24 x	268:74:9622:9628	5614936	1	True				
ANR	5614972	ParameterType	int24		5614936	0					
ANR	5614973	Identifier	x		5614936	1					
ANR	5614974	Parameter	int24 y	268:83:9631:9637	5614936	2	True				
ANR	5614975	ParameterType	int24		5614936	0					
ANR	5614976	Identifier	y		5614936	1					
ANR	5614977	Parameter	unsigned int s	268:92:9640:9653	5614936	3	True				
ANR	5614978	ParameterType	unsigned int		5614936	0					
ANR	5614979	Identifier	s		5614936	1					
ANR	5614980	CFGEntryNode	ENTRY		5614936		True				
ANR	5614981	CFGExitNode	EXIT		5614936		True				
ANR	5614982	Symbol	self -> yx		5614936						
ANR	5614983	Symbol	self -> xx		5614936						
ANR	5614984	Symbol	s		5614936						
ANR	5614985	Symbol	mul_shift_round		5614936						
ANR	5614986	Symbol	* self		5614936						
ANR	5614987	Symbol	x		5614936						
ANR	5614988	Symbol	self		5614936						
ANR	5614989	Symbol	y		5614936						
ANR	5614990	Function	fraction_matrix__transform_y	271:0:9736:9922							
ANR	5614991	FunctionDef	"fraction_matrix__transform_y (fraction_matrix * self , int24 x , int24 y , unsigned int s)"		5614990	0					
ANR	5614992	CompoundStatement		272:0:9844:9922	5614990	0					
ANR	5614993	ReturnStatement	"return mul_shift_round ( x , self -> xy , s ) + mul_shift_round ( y , self -> yy , s ) ;"	272:3:9848:9920	5614990	0	True				
ANR	5614994	AdditiveExpression	"mul_shift_round ( x , self -> xy , s ) + mul_shift_round ( y , self -> yy , s )"		5614990	0		+			
ANR	5614995	CallExpression	"mul_shift_round ( x , self -> xy , s )"		5614990	0					
ANR	5614996	Callee	mul_shift_round		5614990	0					
ANR	5614997	Identifier	mul_shift_round		5614990	0					
ANR	5614998	ArgumentList	x		5614990	1					
ANR	5614999	Argument	x		5614990	0					
ANR	5615000	Identifier	x		5614990	0					
ANR	5615001	Argument	self -> xy		5614990	1					
ANR	5615002	PtrMemberAccess	self -> xy		5614990	0					
ANR	5615003	Identifier	self		5614990	0					
ANR	5615004	Identifier	xy		5614990	1					
ANR	5615005	Argument	s		5614990	2					
ANR	5615006	Identifier	s		5614990	0					
ANR	5615007	CallExpression	"mul_shift_round ( y , self -> yy , s )"		5614990	1					
ANR	5615008	Callee	mul_shift_round		5614990	0					
ANR	5615009	Identifier	mul_shift_round		5614990	0					
ANR	5615010	ArgumentList	y		5614990	1					
ANR	5615011	Argument	y		5614990	0					
ANR	5615012	Identifier	y		5614990	0					
ANR	5615013	Argument	self -> yy		5614990	1					
ANR	5615014	PtrMemberAccess	self -> yy		5614990	0					
ANR	5615015	Identifier	self		5614990	0					
ANR	5615016	Identifier	yy		5614990	1					
ANR	5615017	Argument	s		5614990	2					
ANR	5615018	Identifier	s		5614990	0					
ANR	5615019	ReturnType	static inline int32_t		5614990	1					
ANR	5615020	Identifier	fraction_matrix__transform_y		5614990	2					
ANR	5615021	ParameterList	"fraction_matrix * self , int24 x , int24 y , unsigned int s"		5614990	3					
ANR	5615022	Parameter	fraction_matrix * self	271:51:9787:9807	5614990	0	True				
ANR	5615023	ParameterType	fraction_matrix *		5614990	0					
ANR	5615024	Identifier	self		5614990	1					
ANR	5615025	Parameter	int24 x	271:74:9810:9816	5614990	1	True				
ANR	5615026	ParameterType	int24		5614990	0					
ANR	5615027	Identifier	x		5614990	1					
ANR	5615028	Parameter	int24 y	271:83:9819:9825	5614990	2	True				
ANR	5615029	ParameterType	int24		5614990	0					
ANR	5615030	Identifier	y		5614990	1					
ANR	5615031	Parameter	unsigned int s	271:92:9828:9841	5614990	3	True				
ANR	5615032	ParameterType	unsigned int		5614990	0					
ANR	5615033	Identifier	s		5614990	1					
ANR	5615034	CFGEntryNode	ENTRY		5614990		True				
ANR	5615035	CFGExitNode	EXIT		5614990		True				
ANR	5615036	Symbol	self -> yy		5614990						
ANR	5615037	Symbol	s		5614990						
ANR	5615038	Symbol	mul_shift_round		5614990						
ANR	5615039	Symbol	self -> xy		5614990						
ANR	5615040	Symbol	* self		5614990						
ANR	5615041	Symbol	x		5614990						
ANR	5615042	Symbol	self		5614990						
ANR	5615043	Symbol	y		5614990						
ANR	5615044	Function	ranger_step_f	277:0:9997:10091							
ANR	5615045	FunctionDef	"ranger_step_f (int i , int beg , int end)"		5615044	0					
ANR	5615046	CompoundStatement		278:0:10054:10091	5615044	0					
ANR	5615047	ReturnStatement	return ( i == end ? beg : i + 1 ) ;	278:3:10058:10089	5615044	0	True				
ANR	5615048	ConditionalExpression	i == end ? beg : i + 1		5615044	0					
ANR	5615049	Condition	i == end		5615044	0					
ANR	5615050	EqualityExpression	i == end		5615044	0		==			
ANR	5615051	Identifier	i		5615044	0					
ANR	5615052	Identifier	end		5615044	1					
ANR	5615053	Identifier	beg		5615044	1					
ANR	5615054	AdditiveExpression	i + 1		5615044	2		+			
ANR	5615055	Identifier	i		5615044	0					
ANR	5615056	PrimaryExpression	1		5615044	1					
ANR	5615057	ReturnType	static inline int		5615044	1					
ANR	5615058	Identifier	ranger_step_f		5615044	2					
ANR	5615059	ParameterList	"int i , int beg , int end"		5615044	3					
ANR	5615060	Parameter	int i	277:32:10029:10033	5615044	0	True				
ANR	5615061	ParameterType	int		5615044	0					
ANR	5615062	Identifier	i		5615044	1					
ANR	5615063	Parameter	int beg	277:39:10036:10042	5615044	1	True				
ANR	5615064	ParameterType	int		5615044	0					
ANR	5615065	Identifier	beg		5615044	1					
ANR	5615066	Parameter	int end	277:48:10045:10051	5615044	2	True				
ANR	5615067	ParameterType	int		5615044	0					
ANR	5615068	Identifier	end		5615044	1					
ANR	5615069	CFGEntryNode	ENTRY		5615044		True				
ANR	5615070	CFGExitNode	EXIT		5615044		True				
ANR	5615071	Symbol	beg		5615044						
ANR	5615072	Symbol	i		5615044						
ANR	5615073	Symbol	end		5615044						
ANR	5615074	Function	ranger_step_b	281:0:10094:10188							
ANR	5615075	FunctionDef	"ranger_step_b (int i , int beg , int end)"		5615074	0					
ANR	5615076	CompoundStatement		282:0:10151:10188	5615074	0					
ANR	5615077	ReturnStatement	return ( i == beg ? end : i - 1 ) ;	282:3:10155:10186	5615074	0	True				
ANR	5615078	ConditionalExpression	i == beg ? end : i - 1		5615074	0					
ANR	5615079	Condition	i == beg		5615074	0					
ANR	5615080	EqualityExpression	i == beg		5615074	0		==			
ANR	5615081	Identifier	i		5615074	0					
ANR	5615082	Identifier	beg		5615074	1					
ANR	5615083	Identifier	end		5615074	1					
ANR	5615084	AdditiveExpression	i - 1		5615074	2		-			
ANR	5615085	Identifier	i		5615074	0					
ANR	5615086	PrimaryExpression	1		5615074	1					
ANR	5615087	ReturnType	static inline int		5615074	1					
ANR	5615088	Identifier	ranger_step_b		5615074	2					
ANR	5615089	ParameterList	"int i , int beg , int end"		5615074	3					
ANR	5615090	Parameter	int i	281:32:10126:10130	5615074	0	True				
ANR	5615091	ParameterType	int		5615074	0					
ANR	5615092	Identifier	i		5615074	1					
ANR	5615093	Parameter	int beg	281:39:10133:10139	5615074	1	True				
ANR	5615094	ParameterType	int		5615074	0					
ANR	5615095	Identifier	beg		5615074	1					
ANR	5615096	Parameter	int end	281:48:10142:10148	5615074	2	True				
ANR	5615097	ParameterType	int		5615074	0					
ANR	5615098	Identifier	end		5615074	1					
ANR	5615099	CFGEntryNode	ENTRY		5615074		True				
ANR	5615100	CFGExitNode	EXIT		5615074		True				
ANR	5615101	Symbol	beg		5615074						
ANR	5615102	Symbol	i		5615074						
ANR	5615103	Symbol	end		5615074						
ANR	5615104	Function	o2d	285:0:10191:10476							
ANR	5615105	FunctionDef	"o2d (const t1_hinter * h , t1_hinter_space_coord v)"		5615104	0					
ANR	5615106	CompoundStatement		286:0:10260:10476	5615104	0					
ANR	5615107	IdentifierDeclStatement	int s = h -> g2o_fraction_bits - _fixed_shift ;	287:4:10266:10309	5615104	0	True				
ANR	5615108	IdentifierDecl	s = h -> g2o_fraction_bits - _fixed_shift		5615104	0					
ANR	5615109	IdentifierDeclType	int		5615104	0					
ANR	5615110	Identifier	s		5615104	1					
ANR	5615111	AssignmentExpression	s = h -> g2o_fraction_bits - _fixed_shift		5615104	2		=			
ANR	5615112	Identifier	s		5615104	0					
ANR	5615113	AdditiveExpression	h -> g2o_fraction_bits - _fixed_shift		5615104	1		-			
ANR	5615114	PtrMemberAccess	h -> g2o_fraction_bits		5615104	0					
ANR	5615115	Identifier	h		5615104	0					
ANR	5615116	Identifier	g2o_fraction_bits		5615104	1					
ANR	5615117	Identifier	_fixed_shift		5615104	1					
ANR	5615118	IfStatement	if ( s >= 1 )		5615104	1					
ANR	5615119	Condition	s >= 1	289:8:10320:10325	5615104	0	True				
ANR	5615120	RelationalExpression	s >= 1		5615104	0		>=			
ANR	5615121	Identifier	s		5615104	0					
ANR	5615122	PrimaryExpression	1		5615104	1					
ANR	5615123	ReturnStatement	return ( ( v >> ( h -> g2o_fraction_bits - _fixed_shift - 1 ) ) + 1 ) >> 1 ;	290:8:10336:10402	5615104	1	True				
ANR	5615124	ShiftExpression	( ( v >> ( h -> g2o_fraction_bits - _fixed_shift - 1 ) ) + 1 ) >> 1		5615104	0		>>			
ANR	5615125	AdditiveExpression	( v >> ( h -> g2o_fraction_bits - _fixed_shift - 1 ) ) + 1		5615104	0		+			
ANR	5615126	ShiftExpression	v >> ( h -> g2o_fraction_bits - _fixed_shift - 1 )		5615104	0		>>			
ANR	5615127	Identifier	v		5615104	0					
ANR	5615128	AdditiveExpression	h -> g2o_fraction_bits - _fixed_shift - 1		5615104	1		-			
ANR	5615129	PtrMemberAccess	h -> g2o_fraction_bits		5615104	0					
ANR	5615130	Identifier	h		5615104	0					
ANR	5615131	Identifier	g2o_fraction_bits		5615104	1					
ANR	5615132	AdditiveExpression	_fixed_shift - 1		5615104	1		-			
ANR	5615133	Identifier	_fixed_shift		5615104	0					
ANR	5615134	PrimaryExpression	1		5615104	1					
ANR	5615135	PrimaryExpression	1		5615104	1					
ANR	5615136	PrimaryExpression	1		5615104	1					
ANR	5615137	ElseStatement	else		5615104	0					
ANR	5615138	IfStatement	if ( s == 0 )		5615104	0					
ANR	5615139	Condition	s == 0	291:13:10417:10422	5615104	0	True				
ANR	5615140	EqualityExpression	s == 0		5615104	0		==			
ANR	5615141	Identifier	s		5615104	0					
ANR	5615142	PrimaryExpression	0		5615104	1					
ANR	5615143	ReturnStatement	return v ;	292:8:10433:10441	5615104	1	True				
ANR	5615144	Identifier	v		5615104	0					
ANR	5615145	ElseStatement	else		5615104	0					
ANR	5615146	ReturnStatement	return v << - s ;	294:8:10460:10474	5615104	0	True				
ANR	5615147	ShiftExpression	v << - s		5615104	0		<<			
ANR	5615148	Identifier	v		5615104	0					
ANR	5615149	UnaryOperationExpression	- s		5615104	1					
ANR	5615150	UnaryOperator	-		5615104	0					
ANR	5615151	Identifier	s		5615104	1					
ANR	5615152	ReturnType	static inline fixed		5615104	1					
ANR	5615153	Identifier	o2d		5615104	2					
ANR	5615154	ParameterList	"const t1_hinter * h , t1_hinter_space_coord v"		5615104	3					
ANR	5615155	Parameter	const t1_hinter * h	285:24:10215:10232	5615104	0	True				
ANR	5615156	ParameterType	const t1_hinter *		5615104	0					
ANR	5615157	Identifier	h		5615104	1					
ANR	5615158	Parameter	t1_hinter_space_coord v	285:44:10235:10257	5615104	1	True				
ANR	5615159	ParameterType	t1_hinter_space_coord		5615104	0					
ANR	5615160	Identifier	v		5615104	1					
ANR	5615161	CFGEntryNode	ENTRY		5615104		True				
ANR	5615162	CFGExitNode	EXIT		5615104		True				
ANR	5615163	Symbol	* h		5615104						
ANR	5615164	Symbol	s		5615104						
ANR	5615165	Symbol	v		5615104						
ANR	5615166	Symbol	h		5615104						
ANR	5615167	Symbol	h -> g2o_fraction_bits		5615104						
ANR	5615168	Symbol	_fixed_shift		5615104						
ANR	5615169	Function	d2o	297:0:10479:10670							
ANR	5615170	FunctionDef	"d2o (const t1_hinter * h , t1_hinter_space_coord v)"		5615169	0					
ANR	5615171	CompoundStatement		298:0:10548:10670	5615169	0					
ANR	5615172	IdentifierDeclStatement	int s = h -> g2o_fraction_bits - _fixed_shift ;	298:3:10552:10595	5615169	0	True				
ANR	5615173	IdentifierDecl	s = h -> g2o_fraction_bits - _fixed_shift		5615169	0					
ANR	5615174	IdentifierDeclType	int		5615169	0					
ANR	5615175	Identifier	s		5615169	1					
ANR	5615176	AssignmentExpression	s = h -> g2o_fraction_bits - _fixed_shift		5615169	2		=			
ANR	5615177	Identifier	s		5615169	0					
ANR	5615178	AdditiveExpression	h -> g2o_fraction_bits - _fixed_shift		5615169	1		-			
ANR	5615179	PtrMemberAccess	h -> g2o_fraction_bits		5615169	0					
ANR	5615180	Identifier	h		5615169	0					
ANR	5615181	Identifier	g2o_fraction_bits		5615169	1					
ANR	5615182	Identifier	_fixed_shift		5615169	1					
ANR	5615183	IfStatement	if ( s >= 0 )		5615169	1					
ANR	5615184	Condition	s >= 0	300:8:10606:10611	5615169	0	True				
ANR	5615185	RelationalExpression	s >= 0		5615169	0		>=			
ANR	5615186	Identifier	s		5615169	0					
ANR	5615187	PrimaryExpression	0		5615169	1					
ANR	5615188	ReturnStatement	return v << s ;	301:8:10622:10635	5615169	1	True				
ANR	5615189	ShiftExpression	v << s		5615169	0		<<			
ANR	5615190	Identifier	v		5615169	0					
ANR	5615191	Identifier	s		5615169	1					
ANR	5615192	ElseStatement	else		5615169	0					
ANR	5615193	ReturnStatement	return v >> - s ;	303:8:10654:10668	5615169	0	True				
ANR	5615194	ShiftExpression	v >> - s		5615169	0		>>			
ANR	5615195	Identifier	v		5615169	0					
ANR	5615196	UnaryOperationExpression	- s		5615169	1					
ANR	5615197	UnaryOperator	-		5615169	0					
ANR	5615198	Identifier	s		5615169	1					
ANR	5615199	ReturnType	static inline fixed		5615169	1					
ANR	5615200	Identifier	d2o		5615169	2					
ANR	5615201	ParameterList	"const t1_hinter * h , t1_hinter_space_coord v"		5615169	3					
ANR	5615202	Parameter	const t1_hinter * h	297:24:10503:10520	5615169	0	True				
ANR	5615203	ParameterType	const t1_hinter *		5615169	0					
ANR	5615204	Identifier	h		5615169	1					
ANR	5615205	Parameter	t1_hinter_space_coord v	297:44:10523:10545	5615169	1	True				
ANR	5615206	ParameterType	t1_hinter_space_coord		5615169	0					
ANR	5615207	Identifier	v		5615169	1					
ANR	5615208	CFGEntryNode	ENTRY		5615169		True				
ANR	5615209	CFGExitNode	EXIT		5615169		True				
ANR	5615210	Symbol	* h		5615169						
ANR	5615211	Symbol	s		5615169						
ANR	5615212	Symbol	v		5615169						
ANR	5615213	Symbol	h		5615169						
ANR	5615214	Symbol	h -> g2o_fraction_bits		5615169						
ANR	5615215	Symbol	_fixed_shift		5615169						
ANR	5615216	Function	g2o	306:0:10673:10959							
ANR	5615217	FunctionDef	"g2o (t1_hinter * h , t1_glyph_space_coord gx , t1_glyph_space_coord gy , t1_hinter_space_coord * ox , t1_hinter_space_coord * oy)"		5615216	0					
ANR	5615218	CompoundStatement		307:0:10815:10959	5615216	0					
ANR	5615219	ExpressionStatement	"* ox = fraction_matrix__transform_x ( & h -> ctmf , gx , gy , g2o_bitshift )"	307:3:10819:10885	5615216	0	True				
ANR	5615220	AssignmentExpression	"* ox = fraction_matrix__transform_x ( & h -> ctmf , gx , gy , g2o_bitshift )"		5615216	0		=			
ANR	5615221	UnaryOperationExpression	* ox		5615216	0					
ANR	5615222	UnaryOperator	*		5615216	0					
ANR	5615223	Identifier	ox		5615216	1					
ANR	5615224	CallExpression	"fraction_matrix__transform_x ( & h -> ctmf , gx , gy , g2o_bitshift )"		5615216	1					
ANR	5615225	Callee	fraction_matrix__transform_x		5615216	0					
ANR	5615226	Identifier	fraction_matrix__transform_x		5615216	0					
ANR	5615227	ArgumentList	& h -> ctmf		5615216	1					
ANR	5615228	Argument	& h -> ctmf		5615216	0					
ANR	5615229	UnaryOperationExpression	& h -> ctmf		5615216	0					
ANR	5615230	UnaryOperator	&		5615216	0					
ANR	5615231	PtrMemberAccess	h -> ctmf		5615216	1					
ANR	5615232	Identifier	h		5615216	0					
ANR	5615233	Identifier	ctmf		5615216	1					
ANR	5615234	Argument	gx		5615216	1					
ANR	5615235	Identifier	gx		5615216	0					
ANR	5615236	Argument	gy		5615216	2					
ANR	5615237	Identifier	gy		5615216	0					
ANR	5615238	Argument	g2o_bitshift		5615216	3					
ANR	5615239	Identifier	g2o_bitshift		5615216	0					
ANR	5615240	ExpressionStatement	"* oy = fraction_matrix__transform_y ( & h -> ctmf , gx , gy , g2o_bitshift )"	308:4:10891:10957	5615216	1	True				
ANR	5615241	AssignmentExpression	"* oy = fraction_matrix__transform_y ( & h -> ctmf , gx , gy , g2o_bitshift )"		5615216	0		=			
ANR	5615242	UnaryOperationExpression	* oy		5615216	0					
ANR	5615243	UnaryOperator	*		5615216	0					
ANR	5615244	Identifier	oy		5615216	1					
ANR	5615245	CallExpression	"fraction_matrix__transform_y ( & h -> ctmf , gx , gy , g2o_bitshift )"		5615216	1					
ANR	5615246	Callee	fraction_matrix__transform_y		5615216	0					
ANR	5615247	Identifier	fraction_matrix__transform_y		5615216	0					
ANR	5615248	ArgumentList	& h -> ctmf		5615216	1					
ANR	5615249	Argument	& h -> ctmf		5615216	0					
ANR	5615250	UnaryOperationExpression	& h -> ctmf		5615216	0					
ANR	5615251	UnaryOperator	&		5615216	0					
ANR	5615252	PtrMemberAccess	h -> ctmf		5615216	1					
ANR	5615253	Identifier	h		5615216	0					
ANR	5615254	Identifier	ctmf		5615216	1					
ANR	5615255	Argument	gx		5615216	1					
ANR	5615256	Identifier	gx		5615216	0					
ANR	5615257	Argument	gy		5615216	2					
ANR	5615258	Identifier	gy		5615216	0					
ANR	5615259	Argument	g2o_bitshift		5615216	3					
ANR	5615260	Identifier	g2o_bitshift		5615216	0					
ANR	5615261	ReturnType	static inline void		5615216	1					
ANR	5615262	Identifier	g2o		5615216	2					
ANR	5615263	ParameterList	"t1_hinter * h , t1_glyph_space_coord gx , t1_glyph_space_coord gy , t1_hinter_space_coord * ox , t1_hinter_space_coord * oy"		5615216	3					
ANR	5615264	Parameter	t1_hinter * h	306:23:10696:10708	5615216	0	True				
ANR	5615265	ParameterType	t1_hinter *		5615216	0					
ANR	5615266	Identifier	h		5615216	1					
ANR	5615267	Parameter	t1_glyph_space_coord gx	306:38:10711:10733	5615216	1	True				
ANR	5615268	ParameterType	t1_glyph_space_coord		5615216	0					
ANR	5615269	Identifier	gx		5615216	1					
ANR	5615270	Parameter	t1_glyph_space_coord gy	306:63:10736:10758	5615216	2	True				
ANR	5615271	ParameterType	t1_glyph_space_coord		5615216	0					
ANR	5615272	Identifier	gy		5615216	1					
ANR	5615273	Parameter	t1_hinter_space_coord * ox	306:88:10761:10785	5615216	3	True				
ANR	5615274	ParameterType	t1_hinter_space_coord *		5615216	0					
ANR	5615275	Identifier	ox		5615216	1					
ANR	5615276	Parameter	t1_hinter_space_coord * oy	306:115:10788:10812	5615216	4	True				
ANR	5615277	ParameterType	t1_hinter_space_coord *		5615216	0					
ANR	5615278	Identifier	oy		5615216	1					
ANR	5615279	CFGEntryNode	ENTRY		5615216		True				
ANR	5615280	CFGExitNode	EXIT		5615216		True				
ANR	5615281	Symbol	gx		5615216						
ANR	5615282	Symbol	gy		5615216						
ANR	5615283	Symbol	* oy		5615216						
ANR	5615284	Symbol	fraction_matrix__transform_y		5615216						
ANR	5615285	Symbol	h		5615216						
ANR	5615286	Symbol	ox		5615216						
ANR	5615287	Symbol	oy		5615216						
ANR	5615288	Symbol	g2o_bitshift		5615216						
ANR	5615289	Symbol	fraction_matrix__transform_x		5615216						
ANR	5615290	Symbol	* ox		5615216						
ANR	5615291	Symbol	& h -> ctmf		5615216						
ANR	5615292	Function	g2o_dist	311:0:10962:11090							
ANR	5615293	FunctionDef	"g2o_dist (t1_glyph_space_coord gd , int19 coef)"		5615292	0					
ANR	5615294	CompoundStatement		312:0:11044:11090	5615292	0					
ANR	5615295	ReturnStatement	"return mul_shift ( gd , coef , g2o_bitshift ) ;"	312:3:11048:11088	5615292	0	True				
ANR	5615296	CallExpression	"mul_shift ( gd , coef , g2o_bitshift )"		5615292	0					
ANR	5615297	Callee	mul_shift		5615292	0					
ANR	5615298	Identifier	mul_shift		5615292	0					
ANR	5615299	ArgumentList	gd		5615292	1					
ANR	5615300	Argument	gd		5615292	0					
ANR	5615301	Identifier	gd		5615292	0					
ANR	5615302	Argument	coef		5615292	1					
ANR	5615303	Identifier	coef		5615292	0					
ANR	5615304	Argument	g2o_bitshift		5615292	2					
ANR	5615305	Identifier	g2o_bitshift		5615292	0					
ANR	5615306	ReturnType	static inline t1_hinter_space_coord		5615292	1					
ANR	5615307	Identifier	g2o_dist		5615292	2					
ANR	5615308	ParameterList	"t1_glyph_space_coord gd , int19 coef"		5615292	3					
ANR	5615309	Parameter	t1_glyph_space_coord gd	311:45:11007:11029	5615292	0	True				
ANR	5615310	ParameterType	t1_glyph_space_coord		5615292	0					
ANR	5615311	Identifier	gd		5615292	1					
ANR	5615312	Parameter	int19 coef	311:70:11032:11041	5615292	1	True				
ANR	5615313	ParameterType	int19		5615292	0					
ANR	5615314	Identifier	coef		5615292	1					
ANR	5615315	CFGEntryNode	ENTRY		5615292		True				
ANR	5615316	CFGExitNode	EXIT		5615292		True				
ANR	5615317	Symbol	coef		5615292						
ANR	5615318	Symbol	mul_shift		5615292						
ANR	5615319	Symbol	g2o_bitshift		5615292						
ANR	5615320	Symbol	gd		5615292						
ANR	5615321	Function	g2d	315:0:11093:11441							
ANR	5615322	FunctionDef	"g2d (t1_hinter * h , t1_glyph_space_coord gx , t1_glyph_space_coord gy , fixed * dx , fixed * dy)"		5615321	0					
ANR	5615323	CompoundStatement		316:0:11203:11441	5615321	0					
ANR	5615324	ExpressionStatement	"* dx = fraction_matrix__transform_x ( & h -> ctmf , gx , gy , g2o_bitshift )"	317:4:11209:11275	5615321	0	True				
ANR	5615325	AssignmentExpression	"* dx = fraction_matrix__transform_x ( & h -> ctmf , gx , gy , g2o_bitshift )"		5615321	0		=			
ANR	5615326	UnaryOperationExpression	* dx		5615321	0					
ANR	5615327	UnaryOperator	*		5615321	0					
ANR	5615328	Identifier	dx		5615321	1					
ANR	5615329	CallExpression	"fraction_matrix__transform_x ( & h -> ctmf , gx , gy , g2o_bitshift )"		5615321	1					
ANR	5615330	Callee	fraction_matrix__transform_x		5615321	0					
ANR	5615331	Identifier	fraction_matrix__transform_x		5615321	0					
ANR	5615332	ArgumentList	& h -> ctmf		5615321	1					
ANR	5615333	Argument	& h -> ctmf		5615321	0					
ANR	5615334	UnaryOperationExpression	& h -> ctmf		5615321	0					
ANR	5615335	UnaryOperator	&		5615321	0					
ANR	5615336	PtrMemberAccess	h -> ctmf		5615321	1					
ANR	5615337	Identifier	h		5615321	0					
ANR	5615338	Identifier	ctmf		5615321	1					
ANR	5615339	Argument	gx		5615321	1					
ANR	5615340	Identifier	gx		5615321	0					
ANR	5615341	Argument	gy		5615321	2					
ANR	5615342	Identifier	gy		5615321	0					
ANR	5615343	Argument	g2o_bitshift		5615321	3					
ANR	5615344	Identifier	g2o_bitshift		5615321	0					
ANR	5615345	ExpressionStatement	"* dy = fraction_matrix__transform_y ( & h -> ctmf , gx , gy , g2o_bitshift )"	318:4:11281:11347	5615321	1	True				
ANR	5615346	AssignmentExpression	"* dy = fraction_matrix__transform_y ( & h -> ctmf , gx , gy , g2o_bitshift )"		5615321	0		=			
ANR	5615347	UnaryOperationExpression	* dy		5615321	0					
ANR	5615348	UnaryOperator	*		5615321	0					
ANR	5615349	Identifier	dy		5615321	1					
ANR	5615350	CallExpression	"fraction_matrix__transform_y ( & h -> ctmf , gx , gy , g2o_bitshift )"		5615321	1					
ANR	5615351	Callee	fraction_matrix__transform_y		5615321	0					
ANR	5615352	Identifier	fraction_matrix__transform_y		5615321	0					
ANR	5615353	ArgumentList	& h -> ctmf		5615321	1					
ANR	5615354	Argument	& h -> ctmf		5615321	0					
ANR	5615355	UnaryOperationExpression	& h -> ctmf		5615321	0					
ANR	5615356	UnaryOperator	&		5615321	0					
ANR	5615357	PtrMemberAccess	h -> ctmf		5615321	1					
ANR	5615358	Identifier	h		5615321	0					
ANR	5615359	Identifier	ctmf		5615321	1					
ANR	5615360	Argument	gx		5615321	1					
ANR	5615361	Identifier	gx		5615321	0					
ANR	5615362	Argument	gy		5615321	2					
ANR	5615363	Identifier	gy		5615321	0					
ANR	5615364	Argument	g2o_bitshift		5615321	3					
ANR	5615365	Identifier	g2o_bitshift		5615321	0					
ANR	5615366	ExpressionStatement	"* dx = o2d ( h , * dx )"	319:4:11353:11370	5615321	2	True				
ANR	5615367	AssignmentExpression	"* dx = o2d ( h , * dx )"		5615321	0		=			
ANR	5615368	UnaryOperationExpression	* dx		5615321	0					
ANR	5615369	UnaryOperator	*		5615321	0					
ANR	5615370	Identifier	dx		5615321	1					
ANR	5615371	CallExpression	"o2d ( h , * dx )"		5615321	1					
ANR	5615372	Callee	o2d		5615321	0					
ANR	5615373	Identifier	o2d		5615321	0					
ANR	5615374	ArgumentList	h		5615321	1					
ANR	5615375	Argument	h		5615321	0					
ANR	5615376	Identifier	h		5615321	0					
ANR	5615377	Argument	* dx		5615321	1					
ANR	5615378	UnaryOperationExpression	* dx		5615321	0					
ANR	5615379	UnaryOperator	*		5615321	0					
ANR	5615380	Identifier	dx		5615321	1					
ANR	5615381	ExpressionStatement	"* dy = o2d ( h , * dy )"	320:4:11376:11393	5615321	3	True				
ANR	5615382	AssignmentExpression	"* dy = o2d ( h , * dy )"		5615321	0		=			
ANR	5615383	UnaryOperationExpression	* dy		5615321	0					
ANR	5615384	UnaryOperator	*		5615321	0					
ANR	5615385	Identifier	dy		5615321	1					
ANR	5615386	CallExpression	"o2d ( h , * dy )"		5615321	1					
ANR	5615387	Callee	o2d		5615321	0					
ANR	5615388	Identifier	o2d		5615321	0					
ANR	5615389	ArgumentList	h		5615321	1					
ANR	5615390	Argument	h		5615321	0					
ANR	5615391	Identifier	h		5615321	0					
ANR	5615392	Argument	* dy		5615321	1					
ANR	5615393	UnaryOperationExpression	* dy		5615321	0					
ANR	5615394	UnaryOperator	*		5615321	0					
ANR	5615395	Identifier	dy		5615321	1					
ANR	5615396	ExpressionStatement	* dx += h -> orig_dx	321:4:11399:11416	5615321	4	True				
ANR	5615397	AssignmentExpression	* dx += h -> orig_dx		5615321	0		+=			
ANR	5615398	UnaryOperationExpression	* dx		5615321	0					
ANR	5615399	UnaryOperator	*		5615321	0					
ANR	5615400	Identifier	dx		5615321	1					
ANR	5615401	PtrMemberAccess	h -> orig_dx		5615321	1					
ANR	5615402	Identifier	h		5615321	0					
ANR	5615403	Identifier	orig_dx		5615321	1					
ANR	5615404	ExpressionStatement	* dy += h -> orig_dy	322:4:11422:11439	5615321	5	True				
ANR	5615405	AssignmentExpression	* dy += h -> orig_dy		5615321	0		+=			
ANR	5615406	UnaryOperationExpression	* dy		5615321	0					
ANR	5615407	UnaryOperator	*		5615321	0					
ANR	5615408	Identifier	dy		5615321	1					
ANR	5615409	PtrMemberAccess	h -> orig_dy		5615321	1					
ANR	5615410	Identifier	h		5615321	0					
ANR	5615411	Identifier	orig_dy		5615321	1					
ANR	5615412	ReturnType	static inline void		5615321	1					
ANR	5615413	Identifier	g2d		5615321	2					
ANR	5615414	ParameterList	"t1_hinter * h , t1_glyph_space_coord gx , t1_glyph_space_coord gy , fixed * dx , fixed * dy"		5615321	3					
ANR	5615415	Parameter	t1_hinter * h	315:23:11116:11128	5615321	0	True				
ANR	5615416	ParameterType	t1_hinter *		5615321	0					
ANR	5615417	Identifier	h		5615321	1					
ANR	5615418	Parameter	t1_glyph_space_coord gx	315:38:11131:11153	5615321	1	True				
ANR	5615419	ParameterType	t1_glyph_space_coord		5615321	0					
ANR	5615420	Identifier	gx		5615321	1					
ANR	5615421	Parameter	t1_glyph_space_coord gy	315:63:11156:11178	5615321	2	True				
ANR	5615422	ParameterType	t1_glyph_space_coord		5615321	0					
ANR	5615423	Identifier	gy		5615321	1					
ANR	5615424	Parameter	fixed * dx	315:88:11181:11189	5615321	3	True				
ANR	5615425	ParameterType	fixed *		5615321	0					
ANR	5615426	Identifier	dx		5615321	1					
ANR	5615427	Parameter	fixed * dy	315:99:11192:11200	5615321	4	True				
ANR	5615428	ParameterType	fixed *		5615321	0					
ANR	5615429	Identifier	dy		5615321	1					
ANR	5615430	CFGEntryNode	ENTRY		5615321		True				
ANR	5615431	CFGExitNode	EXIT		5615321		True				
ANR	5615432	Symbol	o2d		5615321						
ANR	5615433	Symbol	fraction_matrix__transform_y		5615321						
ANR	5615434	Symbol	h		5615321						
ANR	5615435	Symbol	g2o_bitshift		5615321						
ANR	5615436	Symbol	h -> orig_dy		5615321						
ANR	5615437	Symbol	fraction_matrix__transform_x		5615321						
ANR	5615438	Symbol	h -> orig_dx		5615321						
ANR	5615439	Symbol	& h -> ctmf		5615321						
ANR	5615440	Symbol	gx		5615321						
ANR	5615441	Symbol	gy		5615321						
ANR	5615442	Symbol	* h		5615321						
ANR	5615443	Symbol	dx		5615321						
ANR	5615444	Symbol	dy		5615321						
ANR	5615445	Symbol	* dy		5615321						
ANR	5615446	Symbol	* dx		5615321						
ANR	5615447	Function	o2g	325:0:11444:11924							
ANR	5615448	FunctionDef	"o2g (t1_hinter * h , t1_hinter_space_coord ox , t1_hinter_space_coord oy , t1_glyph_space_coord * gx , t1_glyph_space_coord * gy)"		5615447	0					
ANR	5615449	CompoundStatement		326:0:11586:11924	5615447	0					
ANR	5615450	ExpressionStatement	"* gx = fraction_matrix__transform_x ( & h -> ctmi , ox , oy , split_bits )"	326:3:11590:11654	5615447	0	True				
ANR	5615451	AssignmentExpression	"* gx = fraction_matrix__transform_x ( & h -> ctmi , ox , oy , split_bits )"		5615447	0		=			
ANR	5615452	UnaryOperationExpression	* gx		5615447	0					
ANR	5615453	UnaryOperator	*		5615447	0					
ANR	5615454	Identifier	gx		5615447	1					
ANR	5615455	CallExpression	"fraction_matrix__transform_x ( & h -> ctmi , ox , oy , split_bits )"		5615447	1					
ANR	5615456	Callee	fraction_matrix__transform_x		5615447	0					
ANR	5615457	Identifier	fraction_matrix__transform_x		5615447	0					
ANR	5615458	ArgumentList	& h -> ctmi		5615447	1					
ANR	5615459	Argument	& h -> ctmi		5615447	0					
ANR	5615460	UnaryOperationExpression	& h -> ctmi		5615447	0					
ANR	5615461	UnaryOperator	&		5615447	0					
ANR	5615462	PtrMemberAccess	h -> ctmi		5615447	1					
ANR	5615463	Identifier	h		5615447	0					
ANR	5615464	Identifier	ctmi		5615447	1					
ANR	5615465	Argument	ox		5615447	1					
ANR	5615466	Identifier	ox		5615447	0					
ANR	5615467	Argument	oy		5615447	2					
ANR	5615468	Identifier	oy		5615447	0					
ANR	5615469	Argument	split_bits		5615447	3					
ANR	5615470	Identifier	split_bits		5615447	0					
ANR	5615471	ExpressionStatement	"* gy = fraction_matrix__transform_y ( & h -> ctmi , ox , oy , split_bits )"	327:4:11660:11724	5615447	1	True				
ANR	5615472	AssignmentExpression	"* gy = fraction_matrix__transform_y ( & h -> ctmi , ox , oy , split_bits )"		5615447	0		=			
ANR	5615473	UnaryOperationExpression	* gy		5615447	0					
ANR	5615474	UnaryOperator	*		5615447	0					
ANR	5615475	Identifier	gy		5615447	1					
ANR	5615476	CallExpression	"fraction_matrix__transform_y ( & h -> ctmi , ox , oy , split_bits )"		5615447	1					
ANR	5615477	Callee	fraction_matrix__transform_y		5615447	0					
ANR	5615478	Identifier	fraction_matrix__transform_y		5615447	0					
ANR	5615479	ArgumentList	& h -> ctmi		5615447	1					
ANR	5615480	Argument	& h -> ctmi		5615447	0					
ANR	5615481	UnaryOperationExpression	& h -> ctmi		5615447	0					
ANR	5615482	UnaryOperator	&		5615447	0					
ANR	5615483	PtrMemberAccess	h -> ctmi		5615447	1					
ANR	5615484	Identifier	h		5615447	0					
ANR	5615485	Identifier	ctmi		5615447	1					
ANR	5615486	Argument	ox		5615447	1					
ANR	5615487	Identifier	ox		5615447	0					
ANR	5615488	Argument	oy		5615447	2					
ANR	5615489	Identifier	oy		5615447	0					
ANR	5615490	Argument	split_bits		5615447	3					
ANR	5615491	Identifier	split_bits		5615447	0					
ANR	5615492	ExpressionStatement	"* gx = shift_rounded ( * gx , h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits )"	328:4:11730:11823	5615447	2	True				
ANR	5615493	AssignmentExpression	"* gx = shift_rounded ( * gx , h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits )"		5615447	0		=			
ANR	5615494	UnaryOperationExpression	* gx		5615447	0					
ANR	5615495	UnaryOperator	*		5615447	0					
ANR	5615496	Identifier	gx		5615447	1					
ANR	5615497	CallExpression	"shift_rounded ( * gx , h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits )"		5615447	1					
ANR	5615498	Callee	shift_rounded		5615447	0					
ANR	5615499	Identifier	shift_rounded		5615447	0					
ANR	5615500	ArgumentList	* gx		5615447	1					
ANR	5615501	Argument	* gx		5615447	0					
ANR	5615502	UnaryOperationExpression	* gx		5615447	0					
ANR	5615503	UnaryOperator	*		5615447	0					
ANR	5615504	Identifier	gx		5615447	1					
ANR	5615505	Argument	h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits		5615447	1					
ANR	5615506	AdditiveExpression	h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits		5615447	0		+			
ANR	5615507	PtrMemberAccess	h -> g2o_fraction_bits		5615447	0					
ANR	5615508	Identifier	h		5615447	0					
ANR	5615509	Identifier	g2o_fraction_bits		5615447	1					
ANR	5615510	AdditiveExpression	h -> ctmi . bitshift - _fixed_shift - split_bits		5615447	1		-			
ANR	5615511	MemberAccess	h -> ctmi . bitshift		5615447	0					
ANR	5615512	PtrMemberAccess	h -> ctmi		5615447	0					
ANR	5615513	Identifier	h		5615447	0					
ANR	5615514	Identifier	ctmi		5615447	1					
ANR	5615515	Identifier	bitshift		5615447	1					
ANR	5615516	AdditiveExpression	_fixed_shift - split_bits		5615447	1		-			
ANR	5615517	Identifier	_fixed_shift		5615447	0					
ANR	5615518	Identifier	split_bits		5615447	1					
ANR	5615519	ExpressionStatement	"* gy = shift_rounded ( * gy , h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits )"	329:4:11829:11922	5615447	3	True				
ANR	5615520	AssignmentExpression	"* gy = shift_rounded ( * gy , h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits )"		5615447	0		=			
ANR	5615521	UnaryOperationExpression	* gy		5615447	0					
ANR	5615522	UnaryOperator	*		5615447	0					
ANR	5615523	Identifier	gy		5615447	1					
ANR	5615524	CallExpression	"shift_rounded ( * gy , h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits )"		5615447	1					
ANR	5615525	Callee	shift_rounded		5615447	0					
ANR	5615526	Identifier	shift_rounded		5615447	0					
ANR	5615527	ArgumentList	* gy		5615447	1					
ANR	5615528	Argument	* gy		5615447	0					
ANR	5615529	UnaryOperationExpression	* gy		5615447	0					
ANR	5615530	UnaryOperator	*		5615447	0					
ANR	5615531	Identifier	gy		5615447	1					
ANR	5615532	Argument	h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits		5615447	1					
ANR	5615533	AdditiveExpression	h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits		5615447	0		+			
ANR	5615534	PtrMemberAccess	h -> g2o_fraction_bits		5615447	0					
ANR	5615535	Identifier	h		5615447	0					
ANR	5615536	Identifier	g2o_fraction_bits		5615447	1					
ANR	5615537	AdditiveExpression	h -> ctmi . bitshift - _fixed_shift - split_bits		5615447	1		-			
ANR	5615538	MemberAccess	h -> ctmi . bitshift		5615447	0					
ANR	5615539	PtrMemberAccess	h -> ctmi		5615447	0					
ANR	5615540	Identifier	h		5615447	0					
ANR	5615541	Identifier	ctmi		5615447	1					
ANR	5615542	Identifier	bitshift		5615447	1					
ANR	5615543	AdditiveExpression	_fixed_shift - split_bits		5615447	1		-			
ANR	5615544	Identifier	_fixed_shift		5615447	0					
ANR	5615545	Identifier	split_bits		5615447	1					
ANR	5615546	ReturnType	static inline void		5615447	1					
ANR	5615547	Identifier	o2g		5615447	2					
ANR	5615548	ParameterList	"t1_hinter * h , t1_hinter_space_coord ox , t1_hinter_space_coord oy , t1_glyph_space_coord * gx , t1_glyph_space_coord * gy"		5615447	3					
ANR	5615549	Parameter	t1_hinter * h	325:23:11467:11479	5615447	0	True				
ANR	5615550	ParameterType	t1_hinter *		5615447	0					
ANR	5615551	Identifier	h		5615447	1					
ANR	5615552	Parameter	t1_hinter_space_coord ox	325:38:11482:11505	5615447	1	True				
ANR	5615553	ParameterType	t1_hinter_space_coord		5615447	0					
ANR	5615554	Identifier	ox		5615447	1					
ANR	5615555	Parameter	t1_hinter_space_coord oy	325:64:11508:11531	5615447	2	True				
ANR	5615556	ParameterType	t1_hinter_space_coord		5615447	0					
ANR	5615557	Identifier	oy		5615447	1					
ANR	5615558	Parameter	t1_glyph_space_coord * gx	325:90:11534:11557	5615447	3	True				
ANR	5615559	ParameterType	t1_glyph_space_coord *		5615447	0					
ANR	5615560	Identifier	gx		5615447	1					
ANR	5615561	Parameter	t1_glyph_space_coord * gy	325:116:11560:11583	5615447	4	True				
ANR	5615562	ParameterType	t1_glyph_space_coord *		5615447	0					
ANR	5615563	Identifier	gy		5615447	1					
ANR	5615564	CFGEntryNode	ENTRY		5615447		True				
ANR	5615565	CFGExitNode	EXIT		5615447		True				
ANR	5615566	Symbol	& h -> ctmi		5615447						
ANR	5615567	Symbol	fraction_matrix__transform_y		5615447						
ANR	5615568	Symbol	h		5615447						
ANR	5615569	Symbol	h -> g2o_fraction_bits		5615447						
ANR	5615570	Symbol	ox		5615447						
ANR	5615571	Symbol	oy		5615447						
ANR	5615572	Symbol	fraction_matrix__transform_x		5615447						
ANR	5615573	Symbol	h -> ctmi		5615447						
ANR	5615574	Symbol	shift_rounded		5615447						
ANR	5615575	Symbol	gx		5615447						
ANR	5615576	Symbol	gy		5615447						
ANR	5615577	Symbol	* h		5615447						
ANR	5615578	Symbol	* gx		5615447						
ANR	5615579	Symbol	* gy		5615447						
ANR	5615580	Symbol	h -> ctmi . bitshift		5615447						
ANR	5615581	Symbol	split_bits		5615447						
ANR	5615582	Symbol	_fixed_shift		5615447						
ANR	5615583	Function	o2g_dist	332:0:11927:12152							
ANR	5615584	FunctionDef	"o2g_dist (t1_hinter * h , t1_hinter_space_coord od , int19 coef)"		5615583	0					
ANR	5615585	CompoundStatement		333:0:12024:12152	5615583	0					
ANR	5615586	ReturnStatement	"return shift_rounded ( mul_shift ( od , coef , split_bits ) , h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits ) ;"	333:3:12028:12150	5615583	0	True				
ANR	5615587	CallExpression	"shift_rounded ( mul_shift ( od , coef , split_bits ) , h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits )"		5615583	0					
ANR	5615588	Callee	shift_rounded		5615583	0					
ANR	5615589	Identifier	shift_rounded		5615583	0					
ANR	5615590	ArgumentList	"mul_shift ( od , coef , split_bits )"		5615583	1					
ANR	5615591	Argument	"mul_shift ( od , coef , split_bits )"		5615583	0					
ANR	5615592	CallExpression	"mul_shift ( od , coef , split_bits )"		5615583	0					
ANR	5615593	Callee	mul_shift		5615583	0					
ANR	5615594	Identifier	mul_shift		5615583	0					
ANR	5615595	ArgumentList	od		5615583	1					
ANR	5615596	Argument	od		5615583	0					
ANR	5615597	Identifier	od		5615583	0					
ANR	5615598	Argument	coef		5615583	1					
ANR	5615599	Identifier	coef		5615583	0					
ANR	5615600	Argument	split_bits		5615583	2					
ANR	5615601	Identifier	split_bits		5615583	0					
ANR	5615602	Argument	h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits		5615583	1					
ANR	5615603	AdditiveExpression	h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits		5615583	0		+			
ANR	5615604	PtrMemberAccess	h -> g2o_fraction_bits		5615583	0					
ANR	5615605	Identifier	h		5615583	0					
ANR	5615606	Identifier	g2o_fraction_bits		5615583	1					
ANR	5615607	AdditiveExpression	h -> ctmi . bitshift - _fixed_shift - split_bits		5615583	1		-			
ANR	5615608	MemberAccess	h -> ctmi . bitshift		5615583	0					
ANR	5615609	PtrMemberAccess	h -> ctmi		5615583	0					
ANR	5615610	Identifier	h		5615583	0					
ANR	5615611	Identifier	ctmi		5615583	1					
ANR	5615612	Identifier	bitshift		5615583	1					
ANR	5615613	AdditiveExpression	_fixed_shift - split_bits		5615583	1		-			
ANR	5615614	Identifier	_fixed_shift		5615583	0					
ANR	5615615	Identifier	split_bits		5615583	1					
ANR	5615616	ReturnType	static inline t1_glyph_space_coord		5615583	1					
ANR	5615617	Identifier	o2g_dist		5615583	2					
ANR	5615618	ParameterList	"t1_hinter * h , t1_hinter_space_coord od , int19 coef"		5615583	3					
ANR	5615619	Parameter	t1_hinter * h	332:44:11971:11983	5615583	0	True				
ANR	5615620	ParameterType	t1_hinter *		5615583	0					
ANR	5615621	Identifier	h		5615583	1					
ANR	5615622	Parameter	t1_hinter_space_coord od	332:59:11986:12009	5615583	1	True				
ANR	5615623	ParameterType	t1_hinter_space_coord		5615583	0					
ANR	5615624	Identifier	od		5615583	1					
ANR	5615625	Parameter	int19 coef	332:85:12012:12021	5615583	2	True				
ANR	5615626	ParameterType	int19		5615583	0					
ANR	5615627	Identifier	coef		5615583	1					
ANR	5615628	CFGEntryNode	ENTRY		5615583		True				
ANR	5615629	CFGExitNode	EXIT		5615583		True				
ANR	5615630	Symbol	* h		5615583						
ANR	5615631	Symbol	coef		5615583						
ANR	5615632	Symbol	od		5615583						
ANR	5615633	Symbol	h		5615583						
ANR	5615634	Symbol	mul_shift		5615583						
ANR	5615635	Symbol	h -> g2o_fraction_bits		5615583						
ANR	5615636	Symbol	h -> ctmi . bitshift		5615583						
ANR	5615637	Symbol	split_bits		5615583						
ANR	5615638	Symbol	h -> ctmi		5615583						
ANR	5615639	Symbol	_fixed_shift		5615583						
ANR	5615640	Symbol	shift_rounded		5615583						
ANR	5615641	Function	t1_hint__set_aligned_coord	338:0:12227:12775							
ANR	5615642	FunctionDef	"t1_hint__set_aligned_coord (t1_hint * self , t1_glyph_space_coord gc , t1_pole * pole , enum t1_align_type align , int quality)"		5615641	0					
ANR	5615643	CompoundStatement		339:0:12362:12775	5615641	0					
ANR	5615644	IdentifierDeclStatement	t1_glyph_space_coord g = ( self -> type == hstem ? pole -> gy : pole -> gx ) ;	339:3:12366:12434	5615641	0	True				
ANR	5615645	IdentifierDecl	g = ( self -> type == hstem ? pole -> gy : pole -> gx )		5615641	0					
ANR	5615646	IdentifierDeclType	t1_glyph_space_coord		5615641	0					
ANR	5615647	Identifier	g		5615641	1					
ANR	5615648	AssignmentExpression	g = ( self -> type == hstem ? pole -> gy : pole -> gx )		5615641	2		=			
ANR	5615649	Identifier	g		5615641	0					
ANR	5615650	ConditionalExpression	self -> type == hstem ? pole -> gy : pole -> gx		5615641	1					
ANR	5615651	Condition	self -> type == hstem		5615641	0					
ANR	5615652	EqualityExpression	self -> type == hstem		5615641	0		==			
ANR	5615653	PtrMemberAccess	self -> type		5615641	0					
ANR	5615654	Identifier	self		5615641	0					
ANR	5615655	Identifier	type		5615641	1					
ANR	5615656	Identifier	hstem		5615641	1					
ANR	5615657	PtrMemberAccess	pole -> gy		5615641	1					
ANR	5615658	Identifier	pole		5615641	0					
ANR	5615659	Identifier	gy		5615641	1					
ANR	5615660	PtrMemberAccess	pole -> gx		5615641	2					
ANR	5615661	Identifier	pole		5615641	0					
ANR	5615662	Identifier	gx		5615641	1					
ANR	5615663	IfStatement	if ( any_abs ( self -> g0 - g ) < any_abs ( self -> g1 - g ) )		5615641	1					
ANR	5615664	Condition	any_abs ( self -> g0 - g ) < any_abs ( self -> g1 - g )	341:8:12445:12489	5615641	0	True				
ANR	5615665	RelationalExpression	any_abs ( self -> g0 - g ) < any_abs ( self -> g1 - g )		5615641	0		<			
ANR	5615666	CallExpression	any_abs ( self -> g0 - g )		5615641	0					
ANR	5615667	Callee	any_abs		5615641	0					
ANR	5615668	Identifier	any_abs		5615641	0					
ANR	5615669	ArgumentList	self -> g0 - g		5615641	1					
ANR	5615670	Argument	self -> g0 - g		5615641	0					
ANR	5615671	AdditiveExpression	self -> g0 - g		5615641	0		-			
ANR	5615672	PtrMemberAccess	self -> g0		5615641	0					
ANR	5615673	Identifier	self		5615641	0					
ANR	5615674	Identifier	g0		5615641	1					
ANR	5615675	Identifier	g		5615641	1					
ANR	5615676	CallExpression	any_abs ( self -> g1 - g )		5615641	1					
ANR	5615677	Callee	any_abs		5615641	0					
ANR	5615678	Identifier	any_abs		5615641	0					
ANR	5615679	ArgumentList	self -> g1 - g		5615641	1					
ANR	5615680	Argument	self -> g1 - g		5615641	0					
ANR	5615681	AdditiveExpression	self -> g1 - g		5615641	0		-			
ANR	5615682	PtrMemberAccess	self -> g1		5615641	0					
ANR	5615683	Identifier	self		5615641	0					
ANR	5615684	Identifier	g1		5615641	1					
ANR	5615685	Identifier	g		5615641	1					
ANR	5615686	CompoundStatement		3:55:129:129	5615641	1					
ANR	5615687	IfStatement	if ( self -> aligned0 <= align && self -> q0 > quality )		5615641	0					
ANR	5615688	Condition	self -> aligned0 <= align && self -> q0 > quality	342:12:12506:12550	5615641	0	True				
ANR	5615689	AndExpression	self -> aligned0 <= align && self -> q0 > quality		5615641	0		&&			
ANR	5615690	RelationalExpression	self -> aligned0 <= align		5615641	0		<=			
ANR	5615691	PtrMemberAccess	self -> aligned0		5615641	0					
ANR	5615692	Identifier	self		5615641	0					
ANR	5615693	Identifier	aligned0		5615641	1					
ANR	5615694	Identifier	align		5615641	1					
ANR	5615695	RelationalExpression	self -> q0 > quality		5615641	1		>			
ANR	5615696	PtrMemberAccess	self -> q0		5615641	0					
ANR	5615697	Identifier	self		5615641	0					
ANR	5615698	Identifier	q0		5615641	1					
ANR	5615699	Identifier	quality		5615641	1					
ANR	5615700	ExpressionStatement	"self -> ag0 = gc , self -> aligned0 = align , self -> q0 = quality"	343:12:12565:12623	5615641	1	True				
ANR	5615701	Expression	"self -> ag0 = gc , self -> aligned0 = align , self -> q0 = quality"		5615641	0					
ANR	5615702	AssignmentExpression	self -> ag0 = gc		5615641	0		=			
ANR	5615703	PtrMemberAccess	self -> ag0		5615641	0					
ANR	5615704	Identifier	self		5615641	0					
ANR	5615705	Identifier	ag0		5615641	1					
ANR	5615706	Identifier	gc		5615641	1					
ANR	5615707	Expression	"self -> aligned0 = align , self -> q0 = quality"		5615641	1					
ANR	5615708	AssignmentExpression	self -> aligned0 = align		5615641	0		=			
ANR	5615709	PtrMemberAccess	self -> aligned0		5615641	0					
ANR	5615710	Identifier	self		5615641	0					
ANR	5615711	Identifier	aligned0		5615641	1					
ANR	5615712	Identifier	align		5615641	1					
ANR	5615713	AssignmentExpression	self -> q0 = quality		5615641	1		=			
ANR	5615714	PtrMemberAccess	self -> q0		5615641	0					
ANR	5615715	Identifier	self		5615641	0					
ANR	5615716	Identifier	q0		5615641	1					
ANR	5615717	Identifier	quality		5615641	1					
ANR	5615718	ElseStatement	else		5615641	0					
ANR	5615719	CompoundStatement		6:11:273:273	5615641	0					
ANR	5615720	IfStatement	if ( self -> aligned1 <= align && self -> q1 > quality )		5615641	0					
ANR	5615721	Condition	self -> aligned1 <= align && self -> q1 > quality	345:12:12650:12694	5615641	0	True				
ANR	5615722	AndExpression	self -> aligned1 <= align && self -> q1 > quality		5615641	0		&&			
ANR	5615723	RelationalExpression	self -> aligned1 <= align		5615641	0		<=			
ANR	5615724	PtrMemberAccess	self -> aligned1		5615641	0					
ANR	5615725	Identifier	self		5615641	0					
ANR	5615726	Identifier	aligned1		5615641	1					
ANR	5615727	Identifier	align		5615641	1					
ANR	5615728	RelationalExpression	self -> q1 > quality		5615641	1		>			
ANR	5615729	PtrMemberAccess	self -> q1		5615641	0					
ANR	5615730	Identifier	self		5615641	0					
ANR	5615731	Identifier	q1		5615641	1					
ANR	5615732	Identifier	quality		5615641	1					
ANR	5615733	ExpressionStatement	"self -> ag1 = gc , self -> aligned1 = align , self -> q1 = quality"	346:12:12709:12767	5615641	1	True				
ANR	5615734	Expression	"self -> ag1 = gc , self -> aligned1 = align , self -> q1 = quality"		5615641	0					
ANR	5615735	AssignmentExpression	self -> ag1 = gc		5615641	0		=			
ANR	5615736	PtrMemberAccess	self -> ag1		5615641	0					
ANR	5615737	Identifier	self		5615641	0					
ANR	5615738	Identifier	ag1		5615641	1					
ANR	5615739	Identifier	gc		5615641	1					
ANR	5615740	Expression	"self -> aligned1 = align , self -> q1 = quality"		5615641	1					
ANR	5615741	AssignmentExpression	self -> aligned1 = align		5615641	0		=			
ANR	5615742	PtrMemberAccess	self -> aligned1		5615641	0					
ANR	5615743	Identifier	self		5615641	0					
ANR	5615744	Identifier	aligned1		5615641	1					
ANR	5615745	Identifier	align		5615641	1					
ANR	5615746	AssignmentExpression	self -> q1 = quality		5615641	1		=			
ANR	5615747	PtrMemberAccess	self -> q1		5615641	0					
ANR	5615748	Identifier	self		5615641	0					
ANR	5615749	Identifier	q1		5615641	1					
ANR	5615750	Identifier	quality		5615641	1					
ANR	5615751	ReturnType	static void		5615641	1					
ANR	5615752	Identifier	t1_hint__set_aligned_coord		5615641	2					
ANR	5615753	ParameterList	"t1_hint * self , t1_glyph_space_coord gc , t1_pole * pole , enum t1_align_type align , int quality"		5615641	3					
ANR	5615754	Parameter	t1_hint * self	338:39:12266:12279	5615641	0	True				
ANR	5615755	ParameterType	t1_hint *		5615641	0					
ANR	5615756	Identifier	self		5615641	1					
ANR	5615757	Parameter	t1_glyph_space_coord gc	338:55:12282:12304	5615641	1	True				
ANR	5615758	ParameterType	t1_glyph_space_coord		5615641	0					
ANR	5615759	Identifier	gc		5615641	1					
ANR	5615760	Parameter	t1_pole * pole	338:80:12307:12320	5615641	2	True				
ANR	5615761	ParameterType	t1_pole *		5615641	0					
ANR	5615762	Identifier	pole		5615641	1					
ANR	5615763	Parameter	enum t1_align_type align	338:96:12323:12346	5615641	3	True				
ANR	5615764	ParameterType	enum t1_align_type		5615641	0					
ANR	5615765	Identifier	align		5615641	1					
ANR	5615766	Parameter	int quality	338:122:12349:12359	5615641	4	True				
ANR	5615767	ParameterType	int		5615641	0					
ANR	5615768	Identifier	quality		5615641	1					
ANR	5615769	CFGEntryNode	ENTRY		5615641		True				
ANR	5615770	CFGExitNode	EXIT		5615641		True				
ANR	5615771	Symbol	* self		5615641						
ANR	5615772	Symbol	g		5615641						
ANR	5615773	Symbol	self -> ag1		5615641						
ANR	5615774	Symbol	pole -> gy		5615641						
ANR	5615775	Symbol	pole -> gx		5615641						
ANR	5615776	Symbol	pole		5615641						
ANR	5615777	Symbol	align		5615641						
ANR	5615778	Symbol	* pole		5615641						
ANR	5615779	Symbol	self -> g0		5615641						
ANR	5615780	Symbol	quality		5615641						
ANR	5615781	Symbol	self -> g1		5615641						
ANR	5615782	Symbol	self -> q0		5615641						
ANR	5615783	Symbol	self -> q1		5615641						
ANR	5615784	Symbol	self -> aligned1		5615641						
ANR	5615785	Symbol	any_abs		5615641						
ANR	5615786	Symbol	self -> ag0		5615641						
ANR	5615787	Symbol	self		5615641						
ANR	5615788	Symbol	gc		5615641						
ANR	5615789	Symbol	self -> aligned0		5615641						
ANR	5615790	Symbol	self -> type		5615641						
ANR	5615791	Symbol	hstem		5615641						
ANR	5615792	Function	t1_hinter__init	352:0:12860:15364							
ANR	5615793	FunctionDef	"t1_hinter__init (t1_hinter * self , gx_path * output_path)"		5615792	0					
ANR	5615794	CompoundStatement		353:0:12921:15364	5615792	0					
ANR	5615795	ExpressionStatement	self -> max_import_coord = ( 1 << max_coord_bits )	354:4:12927:12973	5615792	0	True				
ANR	5615796	AssignmentExpression	self -> max_import_coord = ( 1 << max_coord_bits )		5615792	0		=			
ANR	5615797	PtrMemberAccess	self -> max_import_coord		5615792	0					
ANR	5615798	Identifier	self		5615792	0					
ANR	5615799	Identifier	max_import_coord		5615792	1					
ANR	5615800	ShiftExpression	1 << max_coord_bits		5615792	1		<<			
ANR	5615801	PrimaryExpression	1		5615792	0					
ANR	5615802	Identifier	max_coord_bits		5615792	1					
ANR	5615803	ExpressionStatement	self -> stem_snap_count [ 0 ] = self -> stem_snap_count [ 1 ] = 0	355:4:12979:13034	5615792	1	True				
ANR	5615804	AssignmentExpression	self -> stem_snap_count [ 0 ] = self -> stem_snap_count [ 1 ] = 0		5615792	0		=			
ANR	5615805	ArrayIndexing	self -> stem_snap_count [ 0 ]		5615792	0					
ANR	5615806	PtrMemberAccess	self -> stem_snap_count		5615792	0					
ANR	5615807	Identifier	self		5615792	0					
ANR	5615808	Identifier	stem_snap_count		5615792	1					
ANR	5615809	PrimaryExpression	0		5615792	1					
ANR	5615810	AssignmentExpression	self -> stem_snap_count [ 1 ] = 0		5615792	1		=			
ANR	5615811	ArrayIndexing	self -> stem_snap_count [ 1 ]		5615792	0					
ANR	5615812	PtrMemberAccess	self -> stem_snap_count		5615792	0					
ANR	5615813	Identifier	self		5615792	0					
ANR	5615814	Identifier	stem_snap_count		5615792	1					
ANR	5615815	PrimaryExpression	1		5615792	1					
ANR	5615816	PrimaryExpression	0		5615792	1					
ANR	5615817	ExpressionStatement	self -> stem_snap_vote_count = 0	356:4:13040:13070	5615792	2	True				
ANR	5615818	AssignmentExpression	self -> stem_snap_vote_count = 0		5615792	0		=			
ANR	5615819	PtrMemberAccess	self -> stem_snap_vote_count		5615792	0					
ANR	5615820	Identifier	self		5615792	0					
ANR	5615821	Identifier	stem_snap_vote_count		5615792	1					
ANR	5615822	PrimaryExpression	0		5615792	1					
ANR	5615823	ExpressionStatement	self -> zone_count = 0	357:4:13076:13096	5615792	3	True				
ANR	5615824	AssignmentExpression	self -> zone_count = 0		5615792	0		=			
ANR	5615825	PtrMemberAccess	self -> zone_count		5615792	0					
ANR	5615826	Identifier	self		5615792	0					
ANR	5615827	Identifier	zone_count		5615792	1					
ANR	5615828	PrimaryExpression	0		5615792	1					
ANR	5615829	ExpressionStatement	self -> pole_count = 0	358:4:13102:13122	5615792	4	True				
ANR	5615830	AssignmentExpression	self -> pole_count = 0		5615792	0		=			
ANR	5615831	PtrMemberAccess	self -> pole_count		5615792	0					
ANR	5615832	Identifier	self		5615792	0					
ANR	5615833	Identifier	pole_count		5615792	1					
ANR	5615834	PrimaryExpression	0		5615792	1					
ANR	5615835	ExpressionStatement	self -> hint_count = 0	359:4:13128:13148	5615792	5	True				
ANR	5615836	AssignmentExpression	self -> hint_count = 0		5615792	0		=			
ANR	5615837	PtrMemberAccess	self -> hint_count		5615792	0					
ANR	5615838	Identifier	self		5615792	0					
ANR	5615839	Identifier	hint_count		5615792	1					
ANR	5615840	PrimaryExpression	0		5615792	1					
ANR	5615841	ExpressionStatement	self -> contour_count = 0	360:4:13154:13177	5615792	6	True				
ANR	5615842	AssignmentExpression	self -> contour_count = 0		5615792	0		=			
ANR	5615843	PtrMemberAccess	self -> contour_count		5615792	0					
ANR	5615844	Identifier	self		5615792	0					
ANR	5615845	Identifier	contour_count		5615792	1					
ANR	5615846	PrimaryExpression	0		5615792	1					
ANR	5615847	ExpressionStatement	self -> subglyph_count = 0	361:4:13183:13207	5615792	7	True				
ANR	5615848	AssignmentExpression	self -> subglyph_count = 0		5615792	0		=			
ANR	5615849	PtrMemberAccess	self -> subglyph_count		5615792	0					
ANR	5615850	Identifier	self		5615792	0					
ANR	5615851	Identifier	subglyph_count		5615792	1					
ANR	5615852	PrimaryExpression	0		5615792	1					
ANR	5615853	ExpressionStatement	self -> hint_range_count = 0	362:4:13213:13239	5615792	8	True				
ANR	5615854	AssignmentExpression	self -> hint_range_count = 0		5615792	0		=			
ANR	5615855	PtrMemberAccess	self -> hint_range_count		5615792	0					
ANR	5615856	Identifier	self		5615792	0					
ANR	5615857	Identifier	hint_range_count		5615792	1					
ANR	5615858	PrimaryExpression	0		5615792	1					
ANR	5615859	ExpressionStatement	self -> flex_count = 0	363:4:13245:13265	5615792	9	True				
ANR	5615860	AssignmentExpression	self -> flex_count = 0		5615792	0		=			
ANR	5615861	PtrMemberAccess	self -> flex_count		5615792	0					
ANR	5615862	Identifier	self		5615792	0					
ANR	5615863	Identifier	flex_count		5615792	1					
ANR	5615864	PrimaryExpression	0		5615792	1					
ANR	5615865	ExpressionStatement	self -> have_flex = false	364:4:13271:13294	5615792	10	True				
ANR	5615866	AssignmentExpression	self -> have_flex = false		5615792	0		=			
ANR	5615867	PtrMemberAccess	self -> have_flex		5615792	0					
ANR	5615868	Identifier	self		5615792	0					
ANR	5615869	Identifier	have_flex		5615792	1					
ANR	5615870	Identifier	false		5615792	1					
ANR	5615871	ExpressionStatement	self -> max_subglyph_count = count_of ( self -> subglyph0 )	366:4:13301:13353	5615792	11	True				
ANR	5615872	AssignmentExpression	self -> max_subglyph_count = count_of ( self -> subglyph0 )		5615792	0		=			
ANR	5615873	PtrMemberAccess	self -> max_subglyph_count		5615792	0					
ANR	5615874	Identifier	self		5615792	0					
ANR	5615875	Identifier	max_subglyph_count		5615792	1					
ANR	5615876	CallExpression	count_of ( self -> subglyph0 )		5615792	1					
ANR	5615877	Callee	count_of		5615792	0					
ANR	5615878	Identifier	count_of		5615792	0					
ANR	5615879	ArgumentList	self -> subglyph0		5615792	1					
ANR	5615880	Argument	self -> subglyph0		5615792	0					
ANR	5615881	PtrMemberAccess	self -> subglyph0		5615792	0					
ANR	5615882	Identifier	self		5615792	0					
ANR	5615883	Identifier	subglyph0		5615792	1					
ANR	5615884	ExpressionStatement	self -> max_contour_count = count_of ( self -> contour0 )	367:4:13359:13409	5615792	12	True				
ANR	5615885	AssignmentExpression	self -> max_contour_count = count_of ( self -> contour0 )		5615792	0		=			
ANR	5615886	PtrMemberAccess	self -> max_contour_count		5615792	0					
ANR	5615887	Identifier	self		5615792	0					
ANR	5615888	Identifier	max_contour_count		5615792	1					
ANR	5615889	CallExpression	count_of ( self -> contour0 )		5615792	1					
ANR	5615890	Callee	count_of		5615792	0					
ANR	5615891	Identifier	count_of		5615792	0					
ANR	5615892	ArgumentList	self -> contour0		5615792	1					
ANR	5615893	Argument	self -> contour0		5615792	0					
ANR	5615894	PtrMemberAccess	self -> contour0		5615792	0					
ANR	5615895	Identifier	self		5615792	0					
ANR	5615896	Identifier	contour0		5615792	1					
ANR	5615897	ExpressionStatement	self -> max_zone_count = count_of ( self -> zone0 )	368:4:13415:13459	5615792	13	True				
ANR	5615898	AssignmentExpression	self -> max_zone_count = count_of ( self -> zone0 )		5615792	0		=			
ANR	5615899	PtrMemberAccess	self -> max_zone_count		5615792	0					
ANR	5615900	Identifier	self		5615792	0					
ANR	5615901	Identifier	max_zone_count		5615792	1					
ANR	5615902	CallExpression	count_of ( self -> zone0 )		5615792	1					
ANR	5615903	Callee	count_of		5615792	0					
ANR	5615904	Identifier	count_of		5615792	0					
ANR	5615905	ArgumentList	self -> zone0		5615792	1					
ANR	5615906	Argument	self -> zone0		5615792	0					
ANR	5615907	PtrMemberAccess	self -> zone0		5615792	0					
ANR	5615908	Identifier	self		5615792	0					
ANR	5615909	Identifier	zone0		5615792	1					
ANR	5615910	ExpressionStatement	self -> max_pole_count = count_of ( self -> pole0 )	369:4:13465:13509	5615792	14	True				
ANR	5615911	AssignmentExpression	self -> max_pole_count = count_of ( self -> pole0 )		5615792	0		=			
ANR	5615912	PtrMemberAccess	self -> max_pole_count		5615792	0					
ANR	5615913	Identifier	self		5615792	0					
ANR	5615914	Identifier	max_pole_count		5615792	1					
ANR	5615915	CallExpression	count_of ( self -> pole0 )		5615792	1					
ANR	5615916	Callee	count_of		5615792	0					
ANR	5615917	Identifier	count_of		5615792	0					
ANR	5615918	ArgumentList	self -> pole0		5615792	1					
ANR	5615919	Argument	self -> pole0		5615792	0					
ANR	5615920	PtrMemberAccess	self -> pole0		5615792	0					
ANR	5615921	Identifier	self		5615792	0					
ANR	5615922	Identifier	pole0		5615792	1					
ANR	5615923	ExpressionStatement	self -> max_hint_count = count_of ( self -> hint0 )	370:4:13515:13559	5615792	15	True				
ANR	5615924	AssignmentExpression	self -> max_hint_count = count_of ( self -> hint0 )		5615792	0		=			
ANR	5615925	PtrMemberAccess	self -> max_hint_count		5615792	0					
ANR	5615926	Identifier	self		5615792	0					
ANR	5615927	Identifier	max_hint_count		5615792	1					
ANR	5615928	CallExpression	count_of ( self -> hint0 )		5615792	1					
ANR	5615929	Callee	count_of		5615792	0					
ANR	5615930	Identifier	count_of		5615792	0					
ANR	5615931	ArgumentList	self -> hint0		5615792	1					
ANR	5615932	Argument	self -> hint0		5615792	0					
ANR	5615933	PtrMemberAccess	self -> hint0		5615792	0					
ANR	5615934	Identifier	self		5615792	0					
ANR	5615935	Identifier	hint0		5615792	1					
ANR	5615936	ExpressionStatement	self -> max_hint_range_count = count_of ( self -> hint_range0 )	371:4:13565:13621	5615792	16	True				
ANR	5615937	AssignmentExpression	self -> max_hint_range_count = count_of ( self -> hint_range0 )		5615792	0		=			
ANR	5615938	PtrMemberAccess	self -> max_hint_range_count		5615792	0					
ANR	5615939	Identifier	self		5615792	0					
ANR	5615940	Identifier	max_hint_range_count		5615792	1					
ANR	5615941	CallExpression	count_of ( self -> hint_range0 )		5615792	1					
ANR	5615942	Callee	count_of		5615792	0					
ANR	5615943	Identifier	count_of		5615792	0					
ANR	5615944	ArgumentList	self -> hint_range0		5615792	1					
ANR	5615945	Argument	self -> hint_range0		5615792	0					
ANR	5615946	PtrMemberAccess	self -> hint_range0		5615792	0					
ANR	5615947	Identifier	self		5615792	0					
ANR	5615948	Identifier	hint_range0		5615792	1					
ANR	5615949	ExpressionStatement	self -> max_hint_applying_count = count_of ( self -> hint_applying0 )	372:4:13627:13689	5615792	17	True				
ANR	5615950	AssignmentExpression	self -> max_hint_applying_count = count_of ( self -> hint_applying0 )		5615792	0		=			
ANR	5615951	PtrMemberAccess	self -> max_hint_applying_count		5615792	0					
ANR	5615952	Identifier	self		5615792	0					
ANR	5615953	Identifier	max_hint_applying_count		5615792	1					
ANR	5615954	CallExpression	count_of ( self -> hint_applying0 )		5615792	1					
ANR	5615955	Callee	count_of		5615792	0					
ANR	5615956	Identifier	count_of		5615792	0					
ANR	5615957	ArgumentList	self -> hint_applying0		5615792	1					
ANR	5615958	Argument	self -> hint_applying0		5615792	0					
ANR	5615959	PtrMemberAccess	self -> hint_applying0		5615792	0					
ANR	5615960	Identifier	self		5615792	0					
ANR	5615961	Identifier	hint_applying0		5615792	1					
ANR	5615962	ExpressionStatement	self -> max_stem_snap_count [ 0 ] = count_of ( self -> stem_snap0 [ 0 ] )	373:4:13695:13755	5615792	18	True				
ANR	5615963	AssignmentExpression	self -> max_stem_snap_count [ 0 ] = count_of ( self -> stem_snap0 [ 0 ] )		5615792	0		=			
ANR	5615964	ArrayIndexing	self -> max_stem_snap_count [ 0 ]		5615792	0					
ANR	5615965	PtrMemberAccess	self -> max_stem_snap_count		5615792	0					
ANR	5615966	Identifier	self		5615792	0					
ANR	5615967	Identifier	max_stem_snap_count		5615792	1					
ANR	5615968	PrimaryExpression	0		5615792	1					
ANR	5615969	CallExpression	count_of ( self -> stem_snap0 [ 0 ] )		5615792	1					
ANR	5615970	Callee	count_of		5615792	0					
ANR	5615971	Identifier	count_of		5615792	0					
ANR	5615972	ArgumentList	self -> stem_snap0 [ 0 ]		5615792	1					
ANR	5615973	Argument	self -> stem_snap0 [ 0 ]		5615792	0					
ANR	5615974	ArrayIndexing	self -> stem_snap0 [ 0 ]		5615792	0					
ANR	5615975	PtrMemberAccess	self -> stem_snap0		5615792	0					
ANR	5615976	Identifier	self		5615792	0					
ANR	5615977	Identifier	stem_snap0		5615792	1					
ANR	5615978	PrimaryExpression	0		5615792	1					
ANR	5615979	ExpressionStatement	self -> max_stem_snap_count [ 1 ] = count_of ( self -> stem_snap0 [ 1 ] )	374:4:13761:13821	5615792	19	True				
ANR	5615980	AssignmentExpression	self -> max_stem_snap_count [ 1 ] = count_of ( self -> stem_snap0 [ 1 ] )		5615792	0		=			
ANR	5615981	ArrayIndexing	self -> max_stem_snap_count [ 1 ]		5615792	0					
ANR	5615982	PtrMemberAccess	self -> max_stem_snap_count		5615792	0					
ANR	5615983	Identifier	self		5615792	0					
ANR	5615984	Identifier	max_stem_snap_count		5615792	1					
ANR	5615985	PrimaryExpression	1		5615792	1					
ANR	5615986	CallExpression	count_of ( self -> stem_snap0 [ 1 ] )		5615792	1					
ANR	5615987	Callee	count_of		5615792	0					
ANR	5615988	Identifier	count_of		5615792	0					
ANR	5615989	ArgumentList	self -> stem_snap0 [ 1 ]		5615792	1					
ANR	5615990	Argument	self -> stem_snap0 [ 1 ]		5615792	0					
ANR	5615991	ArrayIndexing	self -> stem_snap0 [ 1 ]		5615792	0					
ANR	5615992	PtrMemberAccess	self -> stem_snap0		5615792	0					
ANR	5615993	Identifier	self		5615792	0					
ANR	5615994	Identifier	stem_snap0		5615792	1					
ANR	5615995	PrimaryExpression	1		5615792	1					
ANR	5615996	ExpressionStatement	self -> max_stem_snap_vote_count = count_of ( self -> stem_snap_vote0 )	375:4:13827:13891	5615792	20	True				
ANR	5615997	AssignmentExpression	self -> max_stem_snap_vote_count = count_of ( self -> stem_snap_vote0 )		5615792	0		=			
ANR	5615998	PtrMemberAccess	self -> max_stem_snap_vote_count		5615792	0					
ANR	5615999	Identifier	self		5615792	0					
ANR	5616000	Identifier	max_stem_snap_vote_count		5615792	1					
ANR	5616001	CallExpression	count_of ( self -> stem_snap_vote0 )		5615792	1					
ANR	5616002	Callee	count_of		5615792	0					
ANR	5616003	Identifier	count_of		5615792	0					
ANR	5616004	ArgumentList	self -> stem_snap_vote0		5615792	1					
ANR	5616005	Argument	self -> stem_snap_vote0		5615792	0					
ANR	5616006	PtrMemberAccess	self -> stem_snap_vote0		5615792	0					
ANR	5616007	Identifier	self		5615792	0					
ANR	5616008	Identifier	stem_snap_vote0		5615792	1					
ANR	5616009	ExpressionStatement	self -> pole = self -> pole0	377:4:13898:13922	5615792	21	True				
ANR	5616010	AssignmentExpression	self -> pole = self -> pole0		5615792	0		=			
ANR	5616011	PtrMemberAccess	self -> pole		5615792	0					
ANR	5616012	Identifier	self		5615792	0					
ANR	5616013	Identifier	pole		5615792	1					
ANR	5616014	PtrMemberAccess	self -> pole0		5615792	1					
ANR	5616015	Identifier	self		5615792	0					
ANR	5616016	Identifier	pole0		5615792	1					
ANR	5616017	ExpressionStatement	self -> hint = self -> hint0	378:4:13928:13952	5615792	22	True				
ANR	5616018	AssignmentExpression	self -> hint = self -> hint0		5615792	0		=			
ANR	5616019	PtrMemberAccess	self -> hint		5615792	0					
ANR	5616020	Identifier	self		5615792	0					
ANR	5616021	Identifier	hint		5615792	1					
ANR	5616022	PtrMemberAccess	self -> hint0		5615792	1					
ANR	5616023	Identifier	self		5615792	0					
ANR	5616024	Identifier	hint0		5615792	1					
ANR	5616025	ExpressionStatement	self -> zone = self -> zone0	379:4:13958:13982	5615792	23	True				
ANR	5616026	AssignmentExpression	self -> zone = self -> zone0		5615792	0		=			
ANR	5616027	PtrMemberAccess	self -> zone		5615792	0					
ANR	5616028	Identifier	self		5615792	0					
ANR	5616029	Identifier	zone		5615792	1					
ANR	5616030	PtrMemberAccess	self -> zone0		5615792	1					
ANR	5616031	Identifier	self		5615792	0					
ANR	5616032	Identifier	zone0		5615792	1					
ANR	5616033	ExpressionStatement	self -> contour = self -> contour0	380:4:13988:14018	5615792	24	True				
ANR	5616034	AssignmentExpression	self -> contour = self -> contour0		5615792	0		=			
ANR	5616035	PtrMemberAccess	self -> contour		5615792	0					
ANR	5616036	Identifier	self		5615792	0					
ANR	5616037	Identifier	contour		5615792	1					
ANR	5616038	PtrMemberAccess	self -> contour0		5615792	1					
ANR	5616039	Identifier	self		5615792	0					
ANR	5616040	Identifier	contour0		5615792	1					
ANR	5616041	ExpressionStatement	self -> subglyph = self -> subglyph0	381:4:14024:14056	5615792	25	True				
ANR	5616042	AssignmentExpression	self -> subglyph = self -> subglyph0		5615792	0		=			
ANR	5616043	PtrMemberAccess	self -> subglyph		5615792	0					
ANR	5616044	Identifier	self		5615792	0					
ANR	5616045	Identifier	subglyph		5615792	1					
ANR	5616046	PtrMemberAccess	self -> subglyph0		5615792	1					
ANR	5616047	Identifier	self		5615792	0					
ANR	5616048	Identifier	subglyph0		5615792	1					
ANR	5616049	ExpressionStatement	self -> hint_range = self -> hint_range0	382:4:14062:14098	5615792	26	True				
ANR	5616050	AssignmentExpression	self -> hint_range = self -> hint_range0		5615792	0		=			
ANR	5616051	PtrMemberAccess	self -> hint_range		5615792	0					
ANR	5616052	Identifier	self		5615792	0					
ANR	5616053	Identifier	hint_range		5615792	1					
ANR	5616054	PtrMemberAccess	self -> hint_range0		5615792	1					
ANR	5616055	Identifier	self		5615792	0					
ANR	5616056	Identifier	hint_range0		5615792	1					
ANR	5616057	ExpressionStatement	self -> hint_applying = self -> hint_applying0	383:4:14104:14146	5615792	27	True				
ANR	5616058	AssignmentExpression	self -> hint_applying = self -> hint_applying0		5615792	0		=			
ANR	5616059	PtrMemberAccess	self -> hint_applying		5615792	0					
ANR	5616060	Identifier	self		5615792	0					
ANR	5616061	Identifier	hint_applying		5615792	1					
ANR	5616062	PtrMemberAccess	self -> hint_applying0		5615792	1					
ANR	5616063	Identifier	self		5615792	0					
ANR	5616064	Identifier	hint_applying0		5615792	1					
ANR	5616065	ExpressionStatement	self -> stem_snap [ 0 ] = self -> stem_snap0 [ 0 ]	384:4:14152:14192	5615792	28	True				
ANR	5616066	AssignmentExpression	self -> stem_snap [ 0 ] = self -> stem_snap0 [ 0 ]		5615792	0		=			
ANR	5616067	ArrayIndexing	self -> stem_snap [ 0 ]		5615792	0					
ANR	5616068	PtrMemberAccess	self -> stem_snap		5615792	0					
ANR	5616069	Identifier	self		5615792	0					
ANR	5616070	Identifier	stem_snap		5615792	1					
ANR	5616071	PrimaryExpression	0		5615792	1					
ANR	5616072	ArrayIndexing	self -> stem_snap0 [ 0 ]		5615792	1					
ANR	5616073	PtrMemberAccess	self -> stem_snap0		5615792	0					
ANR	5616074	Identifier	self		5615792	0					
ANR	5616075	Identifier	stem_snap0		5615792	1					
ANR	5616076	PrimaryExpression	0		5615792	1					
ANR	5616077	ExpressionStatement	self -> stem_snap [ 1 ] = self -> stem_snap0 [ 1 ]	385:4:14198:14238	5615792	29	True				
ANR	5616078	AssignmentExpression	self -> stem_snap [ 1 ] = self -> stem_snap0 [ 1 ]		5615792	0		=			
ANR	5616079	ArrayIndexing	self -> stem_snap [ 1 ]		5615792	0					
ANR	5616080	PtrMemberAccess	self -> stem_snap		5615792	0					
ANR	5616081	Identifier	self		5615792	0					
ANR	5616082	Identifier	stem_snap		5615792	1					
ANR	5616083	PrimaryExpression	1		5615792	1					
ANR	5616084	ArrayIndexing	self -> stem_snap0 [ 1 ]		5615792	1					
ANR	5616085	PtrMemberAccess	self -> stem_snap0		5615792	0					
ANR	5616086	Identifier	self		5615792	0					
ANR	5616087	Identifier	stem_snap0		5615792	1					
ANR	5616088	PrimaryExpression	1		5615792	1					
ANR	5616089	ExpressionStatement	self -> stem_snap_vote = self -> stem_snap_vote0	386:4:14244:14288	5615792	30	True				
ANR	5616090	AssignmentExpression	self -> stem_snap_vote = self -> stem_snap_vote0		5615792	0		=			
ANR	5616091	PtrMemberAccess	self -> stem_snap_vote		5615792	0					
ANR	5616092	Identifier	self		5615792	0					
ANR	5616093	Identifier	stem_snap_vote		5615792	1					
ANR	5616094	PtrMemberAccess	self -> stem_snap_vote0		5615792	1					
ANR	5616095	Identifier	self		5615792	0					
ANR	5616096	Identifier	stem_snap_vote0		5615792	1					
ANR	5616097	ExpressionStatement	self -> FontType = 1	388:4:14295:14313	5615792	31	True				
ANR	5616098	AssignmentExpression	self -> FontType = 1		5615792	0		=			
ANR	5616099	PtrMemberAccess	self -> FontType		5615792	0					
ANR	5616100	Identifier	self		5615792	0					
ANR	5616101	Identifier	FontType		5615792	1					
ANR	5616102	PrimaryExpression	1		5615792	1					
ANR	5616103	ExpressionStatement	self -> ForceBold = false	389:4:14319:14342	5615792	32	True				
ANR	5616104	AssignmentExpression	self -> ForceBold = false		5615792	0		=			
ANR	5616105	PtrMemberAccess	self -> ForceBold		5615792	0					
ANR	5616106	Identifier	self		5615792	0					
ANR	5616107	Identifier	ForceBold		5615792	1					
ANR	5616108	Identifier	false		5615792	1					
ANR	5616109	ExpressionStatement	self -> base_font_scale = 0	390:4:14348:14373	5615792	33	True				
ANR	5616110	AssignmentExpression	self -> base_font_scale = 0		5615792	0		=			
ANR	5616111	PtrMemberAccess	self -> base_font_scale		5615792	0					
ANR	5616112	Identifier	self		5615792	0					
ANR	5616113	Identifier	base_font_scale		5615792	1					
ANR	5616114	PrimaryExpression	0		5615792	1					
ANR	5616115	ExpressionStatement	self -> resolution = 0	391:4:14379:14399	5615792	34	True				
ANR	5616116	AssignmentExpression	self -> resolution = 0		5615792	0		=			
ANR	5616117	PtrMemberAccess	self -> resolution		5615792	0					
ANR	5616118	Identifier	self		5615792	0					
ANR	5616119	Identifier	resolution		5615792	1					
ANR	5616120	PrimaryExpression	0		5615792	1					
ANR	5616121	ExpressionStatement	self -> heigt_transform_coef = self -> width_transform_coef = 0	392:4:14405:14464	5615792	35	True				
ANR	5616122	AssignmentExpression	self -> heigt_transform_coef = self -> width_transform_coef = 0		5615792	0		=			
ANR	5616123	PtrMemberAccess	self -> heigt_transform_coef		5615792	0					
ANR	5616124	Identifier	self		5615792	0					
ANR	5616125	Identifier	heigt_transform_coef		5615792	1					
ANR	5616126	AssignmentExpression	self -> width_transform_coef = 0		5615792	1		=			
ANR	5616127	PtrMemberAccess	self -> width_transform_coef		5615792	0					
ANR	5616128	Identifier	self		5615792	0					
ANR	5616129	Identifier	width_transform_coef		5615792	1					
ANR	5616130	PrimaryExpression	0		5615792	1					
ANR	5616131	ExpressionStatement	self -> heigt_transform_coef_rat = self -> width_transform_coef_rat = 0	393:4:14470:14537	5615792	36	True				
ANR	5616132	AssignmentExpression	self -> heigt_transform_coef_rat = self -> width_transform_coef_rat = 0		5615792	0		=			
ANR	5616133	PtrMemberAccess	self -> heigt_transform_coef_rat		5615792	0					
ANR	5616134	Identifier	self		5615792	0					
ANR	5616135	Identifier	heigt_transform_coef_rat		5615792	1					
ANR	5616136	AssignmentExpression	self -> width_transform_coef_rat = 0		5615792	1		=			
ANR	5616137	PtrMemberAccess	self -> width_transform_coef_rat		5615792	0					
ANR	5616138	Identifier	self		5615792	0					
ANR	5616139	Identifier	width_transform_coef_rat		5615792	1					
ANR	5616140	PrimaryExpression	0		5615792	1					
ANR	5616141	ExpressionStatement	self -> heigt_transform_coef_inv = self -> width_transform_coef_inv = 0	394:4:14543:14610	5615792	37	True				
ANR	5616142	AssignmentExpression	self -> heigt_transform_coef_inv = self -> width_transform_coef_inv = 0		5615792	0		=			
ANR	5616143	PtrMemberAccess	self -> heigt_transform_coef_inv		5615792	0					
ANR	5616144	Identifier	self		5615792	0					
ANR	5616145	Identifier	heigt_transform_coef_inv		5615792	1					
ANR	5616146	AssignmentExpression	self -> width_transform_coef_inv = 0		5615792	1		=			
ANR	5616147	PtrMemberAccess	self -> width_transform_coef_inv		5615792	0					
ANR	5616148	Identifier	self		5615792	0					
ANR	5616149	Identifier	width_transform_coef_inv		5615792	1					
ANR	5616150	PrimaryExpression	0		5615792	1					
ANR	5616151	ExpressionStatement	self -> cx = self -> cy = 0	395:4:14616:14639	5615792	38	True				
ANR	5616152	AssignmentExpression	self -> cx = self -> cy = 0		5615792	0		=			
ANR	5616153	PtrMemberAccess	self -> cx		5615792	0					
ANR	5616154	Identifier	self		5615792	0					
ANR	5616155	Identifier	cx		5615792	1					
ANR	5616156	AssignmentExpression	self -> cy = 0		5615792	1		=			
ANR	5616157	PtrMemberAccess	self -> cy		5615792	0					
ANR	5616158	Identifier	self		5615792	0					
ANR	5616159	Identifier	cy		5615792	1					
ANR	5616160	PrimaryExpression	0		5615792	1					
ANR	5616161	ExpressionStatement	self -> contour [ 0 ] = 0	396:4:14645:14665	5615792	39	True				
ANR	5616162	AssignmentExpression	self -> contour [ 0 ] = 0		5615792	0		=			
ANR	5616163	ArrayIndexing	self -> contour [ 0 ]		5615792	0					
ANR	5616164	PtrMemberAccess	self -> contour		5615792	0					
ANR	5616165	Identifier	self		5615792	0					
ANR	5616166	Identifier	contour		5615792	1					
ANR	5616167	PrimaryExpression	0		5615792	1					
ANR	5616168	PrimaryExpression	0		5615792	1					
ANR	5616169	ExpressionStatement	self -> subglyph [ 0 ] = 0	397:4:14671:14692	5615792	40	True				
ANR	5616170	AssignmentExpression	self -> subglyph [ 0 ] = 0		5615792	0		=			
ANR	5616171	ArrayIndexing	self -> subglyph [ 0 ]		5615792	0					
ANR	5616172	PtrMemberAccess	self -> subglyph		5615792	0					
ANR	5616173	Identifier	self		5615792	0					
ANR	5616174	Identifier	subglyph		5615792	1					
ANR	5616175	PrimaryExpression	0		5615792	1					
ANR	5616176	PrimaryExpression	0		5615792	1					
ANR	5616177	ExpressionStatement	self -> keep_stem_width = false	398:4:14698:14727	5615792	41	True				
ANR	5616178	AssignmentExpression	self -> keep_stem_width = false		5615792	0		=			
ANR	5616179	PtrMemberAccess	self -> keep_stem_width		5615792	0					
ANR	5616180	Identifier	self		5615792	0					
ANR	5616181	Identifier	keep_stem_width		5615792	1					
ANR	5616182	Identifier	false		5615792	1					
ANR	5616183	ExpressionStatement	self -> charpath_flag = false	399:4:14733:14760	5615792	42	True				
ANR	5616184	AssignmentExpression	self -> charpath_flag = false		5615792	0		=			
ANR	5616185	PtrMemberAccess	self -> charpath_flag		5615792	0					
ANR	5616186	Identifier	self		5615792	0					
ANR	5616187	Identifier	charpath_flag		5615792	1					
ANR	5616188	Identifier	false		5615792	1					
ANR	5616189	ExpressionStatement	self -> grid_fit_x = self -> grid_fit_y = true	400:4:14766:14808	5615792	43	True				
ANR	5616190	AssignmentExpression	self -> grid_fit_x = self -> grid_fit_y = true		5615792	0		=			
ANR	5616191	PtrMemberAccess	self -> grid_fit_x		5615792	0					
ANR	5616192	Identifier	self		5615792	0					
ANR	5616193	Identifier	grid_fit_x		5615792	1					
ANR	5616194	AssignmentExpression	self -> grid_fit_y = true		5615792	1		=			
ANR	5616195	PtrMemberAccess	self -> grid_fit_y		5615792	0					
ANR	5616196	Identifier	self		5615792	0					
ANR	5616197	Identifier	grid_fit_y		5615792	1					
ANR	5616198	Identifier	true		5615792	1					
ANR	5616199	ExpressionStatement	self -> output_path = output_path	401:4:14814:14845	5615792	44	True				
ANR	5616200	AssignmentExpression	self -> output_path = output_path		5615792	0		=			
ANR	5616201	PtrMemberAccess	self -> output_path		5615792	0					
ANR	5616202	Identifier	self		5615792	0					
ANR	5616203	Identifier	output_path		5615792	1					
ANR	5616204	Identifier	output_path		5615792	1					
ANR	5616205	ExpressionStatement	self -> memory = ( output_path == 0 ? 0 : output_path -> memory )	402:4:14851:14910	5615792	45	True				
ANR	5616206	AssignmentExpression	self -> memory = ( output_path == 0 ? 0 : output_path -> memory )		5615792	0		=			
ANR	5616207	PtrMemberAccess	self -> memory		5615792	0					
ANR	5616208	Identifier	self		5615792	0					
ANR	5616209	Identifier	memory		5615792	1					
ANR	5616210	ConditionalExpression	output_path == 0 ? 0 : output_path -> memory		5615792	1					
ANR	5616211	Condition	output_path == 0		5615792	0					
ANR	5616212	EqualityExpression	output_path == 0		5615792	0		==			
ANR	5616213	Identifier	output_path		5615792	0					
ANR	5616214	PrimaryExpression	0		5615792	1					
ANR	5616215	PrimaryExpression	0		5615792	1					
ANR	5616216	PtrMemberAccess	output_path -> memory		5615792	2					
ANR	5616217	Identifier	output_path		5615792	0					
ANR	5616218	Identifier	memory		5615792	1					
ANR	5616219	ExpressionStatement	self -> disable_hinting = ( self -> memory == NULL )	403:4:14916:14962	5615792	46	True				
ANR	5616220	AssignmentExpression	self -> disable_hinting = ( self -> memory == NULL )		5615792	0		=			
ANR	5616221	PtrMemberAccess	self -> disable_hinting		5615792	0					
ANR	5616222	Identifier	self		5615792	0					
ANR	5616223	Identifier	disable_hinting		5615792	1					
ANR	5616224	EqualityExpression	self -> memory == NULL		5615792	1		==			
ANR	5616225	PtrMemberAccess	self -> memory		5615792	0					
ANR	5616226	Identifier	self		5615792	0					
ANR	5616227	Identifier	memory		5615792	1					
ANR	5616228	Identifier	NULL		5615792	1					
ANR	5616229	ExpressionStatement	self -> pass_through = self -> disable_hinting	404:4:14968:15010	5615792	47	True				
ANR	5616230	AssignmentExpression	self -> pass_through = self -> disable_hinting		5615792	0		=			
ANR	5616231	PtrMemberAccess	self -> pass_through		5615792	0					
ANR	5616232	Identifier	self		5615792	0					
ANR	5616233	Identifier	pass_through		5615792	1					
ANR	5616234	PtrMemberAccess	self -> disable_hinting		5615792	1					
ANR	5616235	Identifier	self		5615792	0					
ANR	5616236	Identifier	disable_hinting		5615792	1					
ANR	5616237	ExpressionStatement	self -> autohinting = false	405:4:15016:15041	5615792	48	True				
ANR	5616238	AssignmentExpression	self -> autohinting = false		5615792	0		=			
ANR	5616239	PtrMemberAccess	self -> autohinting		5615792	0					
ANR	5616240	Identifier	self		5615792	0					
ANR	5616241	Identifier	autohinting		5615792	1					
ANR	5616242	Identifier	false		5615792	1					
ANR	5616243	ExpressionStatement	self -> fix_contour_sign = false	406:4:15047:15077	5615792	49	True				
ANR	5616244	AssignmentExpression	self -> fix_contour_sign = false		5615792	0		=			
ANR	5616245	PtrMemberAccess	self -> fix_contour_sign		5615792	0					
ANR	5616246	Identifier	self		5615792	0					
ANR	5616247	Identifier	fix_contour_sign		5615792	1					
ANR	5616248	Identifier	false		5615792	1					
ANR	5616249	ExpressionStatement	self -> path_opened = false	407:4:15083:15108	5615792	50	True				
ANR	5616250	AssignmentExpression	self -> path_opened = false		5615792	0		=			
ANR	5616251	PtrMemberAccess	self -> path_opened		5615792	0					
ANR	5616252	Identifier	self		5615792	0					
ANR	5616253	Identifier	path_opened		5615792	1					
ANR	5616254	Identifier	false		5615792	1					
ANR	5616255	ExpressionStatement	self -> orig_dx = 0	408:4:15114:15131	5615792	51	True				
ANR	5616256	AssignmentExpression	self -> orig_dx = 0		5615792	0		=			
ANR	5616257	PtrMemberAccess	self -> orig_dx		5615792	0					
ANR	5616258	Identifier	self		5615792	0					
ANR	5616259	Identifier	orig_dx		5615792	1					
ANR	5616260	PrimaryExpression	0		5615792	1					
ANR	5616261	ExpressionStatement	self -> orig_dy = 0	409:4:15137:15154	5615792	52	True				
ANR	5616262	AssignmentExpression	self -> orig_dy = 0		5615792	0		=			
ANR	5616263	PtrMemberAccess	self -> orig_dy		5615792	0					
ANR	5616264	Identifier	self		5615792	0					
ANR	5616265	Identifier	orig_dy		5615792	1					
ANR	5616266	PrimaryExpression	0		5615792	1					
ANR	5616267	ExpressionStatement	self -> g2o_fraction_bits = 0	410:4:15160:15187	5615792	53	True				
ANR	5616268	AssignmentExpression	self -> g2o_fraction_bits = 0		5615792	0		=			
ANR	5616269	PtrMemberAccess	self -> g2o_fraction_bits		5615792	0					
ANR	5616270	Identifier	self		5615792	0					
ANR	5616271	Identifier	g2o_fraction_bits		5615792	1					
ANR	5616272	PrimaryExpression	0		5615792	1					
ANR	5616273	ExpressionStatement	self -> stem_snap [ 0 ] [ 0 ] = self -> stem_snap [ 1 ] [ 0 ] = 100	412:4:15194:15245	5615792	54	True				
ANR	5616274	AssignmentExpression	self -> stem_snap [ 0 ] [ 0 ] = self -> stem_snap [ 1 ] [ 0 ] = 100		5615792	0		=			
ANR	5616275	ArrayIndexing	self -> stem_snap [ 0 ] [ 0 ]		5615792	0					
ANR	5616276	ArrayIndexing	self -> stem_snap [ 0 ]		5615792	0					
ANR	5616277	PtrMemberAccess	self -> stem_snap		5615792	0					
ANR	5616278	Identifier	self		5615792	0					
ANR	5616279	Identifier	stem_snap		5615792	1					
ANR	5616280	PrimaryExpression	0		5615792	1					
ANR	5616281	PrimaryExpression	0		5615792	1					
ANR	5616282	AssignmentExpression	self -> stem_snap [ 1 ] [ 0 ] = 100		5615792	1		=			
ANR	5616283	ArrayIndexing	self -> stem_snap [ 1 ] [ 0 ]		5615792	0					
ANR	5616284	ArrayIndexing	self -> stem_snap [ 1 ]		5615792	0					
ANR	5616285	PtrMemberAccess	self -> stem_snap		5615792	0					
ANR	5616286	Identifier	self		5615792	0					
ANR	5616287	Identifier	stem_snap		5615792	1					
ANR	5616288	PrimaryExpression	1		5615792	1					
ANR	5616289	PrimaryExpression	0		5615792	1					
ANR	5616290	PrimaryExpression	100		5615792	1					
ANR	5616291	ExpressionStatement	"memset ( & self -> ctmf , 0x00 , sizeof ( self -> ctmf ) )"	414:4:15266:15311	5615792	55	True				
ANR	5616292	CallExpression	"memset ( & self -> ctmf , 0x00 , sizeof ( self -> ctmf ) )"		5615792	0					
ANR	5616293	Callee	memset		5615792	0					
ANR	5616294	Identifier	memset		5615792	0					
ANR	5616295	ArgumentList	& self -> ctmf		5615792	1					
ANR	5616296	Argument	& self -> ctmf		5615792	0					
ANR	5616297	UnaryOperationExpression	& self -> ctmf		5615792	0					
ANR	5616298	UnaryOperator	&		5615792	0					
ANR	5616299	PtrMemberAccess	self -> ctmf		5615792	1					
ANR	5616300	Identifier	self		5615792	0					
ANR	5616301	Identifier	ctmf		5615792	1					
ANR	5616302	Argument	0x00		5615792	1					
ANR	5616303	PrimaryExpression	0x00		5615792	0					
ANR	5616304	Argument	sizeof ( self -> ctmf )		5615792	2					
ANR	5616305	SizeofExpression	sizeof ( self -> ctmf )		5615792	0					
ANR	5616306	Sizeof	sizeof		5615792	0					
ANR	5616307	PtrMemberAccess	self -> ctmf		5615792	1					
ANR	5616308	Identifier	self		5615792	0					
ANR	5616309	Identifier	ctmf		5615792	1					
ANR	5616310	ExpressionStatement	"memset ( & self -> ctmi , 0x00 , sizeof ( self -> ctmi ) )"	415:4:15317:15362	5615792	56	True				
ANR	5616311	CallExpression	"memset ( & self -> ctmi , 0x00 , sizeof ( self -> ctmi ) )"		5615792	0					
ANR	5616312	Callee	memset		5615792	0					
ANR	5616313	Identifier	memset		5615792	0					
ANR	5616314	ArgumentList	& self -> ctmi		5615792	1					
ANR	5616315	Argument	& self -> ctmi		5615792	0					
ANR	5616316	UnaryOperationExpression	& self -> ctmi		5615792	0					
ANR	5616317	UnaryOperator	&		5615792	0					
ANR	5616318	PtrMemberAccess	self -> ctmi		5615792	1					
ANR	5616319	Identifier	self		5615792	0					
ANR	5616320	Identifier	ctmi		5615792	1					
ANR	5616321	Argument	0x00		5615792	1					
ANR	5616322	PrimaryExpression	0x00		5615792	0					
ANR	5616323	Argument	sizeof ( self -> ctmi )		5615792	2					
ANR	5616324	SizeofExpression	sizeof ( self -> ctmi )		5615792	0					
ANR	5616325	Sizeof	sizeof		5615792	0					
ANR	5616326	PtrMemberAccess	self -> ctmi		5615792	1					
ANR	5616327	Identifier	self		5615792	0					
ANR	5616328	Identifier	ctmi		5615792	1					
ANR	5616329	ReturnType	void		5615792	1					
ANR	5616330	Identifier	t1_hinter__init		5615792	2					
ANR	5616331	ParameterList	"t1_hinter * self , gx_path * output_path"		5615792	3					
ANR	5616332	Parameter	t1_hinter * self	352:21:12881:12896	5615792	0	True				
ANR	5616333	ParameterType	t1_hinter *		5615792	0					
ANR	5616334	Identifier	self		5615792	1					
ANR	5616335	Parameter	gx_path * output_path	352:39:12899:12918	5615792	1	True				
ANR	5616336	ParameterType	gx_path *		5615792	0					
ANR	5616337	Identifier	output_path		5615792	1					
ANR	5616338	CFGEntryNode	ENTRY		5615792		True				
ANR	5616339	CFGExitNode	EXIT		5615792		True				
ANR	5616340	Symbol	self -> max_contour_count		5615792						
ANR	5616341	Symbol	self -> contour0		5615792						
ANR	5616342	Symbol	self -> pole_count		5615792						
ANR	5616343	Symbol	self -> hint_range0		5615792						
ANR	5616344	Symbol	self -> max_hint_applying_count		5615792						
ANR	5616345	Symbol	self -> max_import_coord		5615792						
ANR	5616346	Symbol	* self -> stem_snap_count		5615792						
ANR	5616347	Symbol	self -> width_transform_coef_inv		5615792						
ANR	5616348	Symbol	self -> stem_snap_vote0		5615792						
ANR	5616349	Symbol	self -> grid_fit_x		5615792						
ANR	5616350	Symbol	self -> grid_fit_y		5615792						
ANR	5616351	Symbol	self -> pole0		5615792						
ANR	5616352	Symbol	self -> orig_dy		5615792						
ANR	5616353	Symbol	self -> max_subglyph_count		5615792						
ANR	5616354	Symbol	* * * self		5615792						
ANR	5616355	Symbol	self -> cx		5615792						
ANR	5616356	Symbol	self -> cy		5615792						
ANR	5616357	Symbol	* self -> stem_snap		5615792						
ANR	5616358	Symbol	self -> output_path		5615792						
ANR	5616359	Symbol	self -> orig_dx		5615792						
ANR	5616360	Symbol	* self -> subglyph		5615792						
ANR	5616361	Symbol	self -> max_stem_snap_vote_count		5615792						
ANR	5616362	Symbol	self -> stem_snap_count		5615792						
ANR	5616363	Symbol	* output_path		5615792						
ANR	5616364	Symbol	NULL		5615792						
ANR	5616365	Symbol	self -> resolution		5615792						
ANR	5616366	Symbol	* self		5615792						
ANR	5616367	Symbol	self -> stem_snap		5615792						
ANR	5616368	Symbol	self -> ctmf		5615792						
ANR	5616369	Symbol	self -> pass_through		5615792						
ANR	5616370	Symbol	self -> ctmi		5615792						
ANR	5616371	Symbol	self -> charpath_flag		5615792						
ANR	5616372	Symbol	self -> contour		5615792						
ANR	5616373	Symbol	self -> subglyph		5615792						
ANR	5616374	Symbol	self -> width_transform_coef_rat		5615792						
ANR	5616375	Symbol	& self -> ctmi		5615792						
ANR	5616376	Symbol	self -> stem_snap_vote_count		5615792						
ANR	5616377	Symbol	self -> base_font_scale		5615792						
ANR	5616378	Symbol	self -> zone0		5615792						
ANR	5616379	Symbol	self -> hint0		5615792						
ANR	5616380	Symbol	self -> max_stem_snap_count		5615792						
ANR	5616381	Symbol	self -> stem_snap_vote		5615792						
ANR	5616382	Symbol	self -> max_hint_range_count		5615792						
ANR	5616383	Symbol	true		5615792						
ANR	5616384	Symbol	self -> hint_applying		5615792						
ANR	5616385	Symbol	self -> keep_stem_width		5615792						
ANR	5616386	Symbol	self -> heigt_transform_coef_rat		5615792						
ANR	5616387	Symbol	* * self -> stem_snap		5615792						
ANR	5616388	Symbol	self -> autohinting		5615792						
ANR	5616389	Symbol	self -> FontType		5615792						
ANR	5616390	Symbol	output_path -> memory		5615792						
ANR	5616391	Symbol	self -> subglyph0		5615792						
ANR	5616392	Symbol	self -> stem_snap0		5615792						
ANR	5616393	Symbol	self -> zone		5615792						
ANR	5616394	Symbol	max_coord_bits		5615792						
ANR	5616395	Symbol	self -> flex_count		5615792						
ANR	5616396	Symbol	self -> disable_hinting		5615792						
ANR	5616397	Symbol	* self -> max_stem_snap_count		5615792						
ANR	5616398	Symbol	& self -> ctmf		5615792						
ANR	5616399	Symbol	self -> zone_count		5615792						
ANR	5616400	Symbol	self -> memory		5615792						
ANR	5616401	Symbol	count_of		5615792						
ANR	5616402	Symbol	self -> pole		5615792						
ANR	5616403	Symbol	* self -> stem_snap0		5615792						
ANR	5616404	Symbol	self -> max_zone_count		5615792						
ANR	5616405	Symbol	* self -> contour		5615792						
ANR	5616406	Symbol	self -> ForceBold		5615792						
ANR	5616407	Symbol	self -> contour_count		5615792						
ANR	5616408	Symbol	self -> hint		5615792						
ANR	5616409	Symbol	self -> path_opened		5615792						
ANR	5616410	Symbol	* * self		5615792						
ANR	5616411	Symbol	self -> heigt_transform_coef		5615792						
ANR	5616412	Symbol	self -> g2o_fraction_bits		5615792						
ANR	5616413	Symbol	false		5615792						
ANR	5616414	Symbol	self -> max_hint_count		5615792						
ANR	5616415	Symbol	self -> width_transform_coef		5615792						
ANR	5616416	Symbol	self -> heigt_transform_coef_inv		5615792						
ANR	5616417	Symbol	self -> have_flex		5615792						
ANR	5616418	Symbol	self -> subglyph_count		5615792						
ANR	5616419	Symbol	self -> hint_range_count		5615792						
ANR	5616420	Symbol	self -> hint_range		5615792						
ANR	5616421	Symbol	self -> hint_applying0		5615792						
ANR	5616422	Symbol	self -> hint_count		5615792						
ANR	5616423	Symbol	self -> max_pole_count		5615792						
ANR	5616424	Symbol	self -> fix_contour_sign		5615792						
ANR	5616425	Symbol	self		5615792						
ANR	5616426	Symbol	output_path		5615792						
ANR	5616427	Function	t1_hinter__free_arrays	418:0:15367:16820							
ANR	5616428	FunctionDef	t1_hinter__free_arrays (t1_hinter * self)		5616427	0					
ANR	5616429	CompoundStatement		419:0:15427:16820	5616427	0					
ANR	5616430	IfStatement	if ( self -> pole != self -> pole0 )		5616427	0					
ANR	5616431	Condition	self -> pole != self -> pole0	419:7:15435:15459	5616427	0	True				
ANR	5616432	EqualityExpression	self -> pole != self -> pole0		5616427	0		!=			
ANR	5616433	PtrMemberAccess	self -> pole		5616427	0					
ANR	5616434	Identifier	self		5616427	0					
ANR	5616435	Identifier	pole		5616427	1					
ANR	5616436	PtrMemberAccess	self -> pole0		5616427	1					
ANR	5616437	Identifier	self		5616427	0					
ANR	5616438	Identifier	pole0		5616427	1					
ANR	5616439	ExpressionStatement	"gs_free_object ( self -> memory , self -> pole , s_pole_array )"	420:8:15470:15524	5616427	1	True				
ANR	5616440	CallExpression	"gs_free_object ( self -> memory , self -> pole , s_pole_array )"		5616427	0					
ANR	5616441	Callee	gs_free_object		5616427	0					
ANR	5616442	Identifier	gs_free_object		5616427	0					
ANR	5616443	ArgumentList	self -> memory		5616427	1					
ANR	5616444	Argument	self -> memory		5616427	0					
ANR	5616445	PtrMemberAccess	self -> memory		5616427	0					
ANR	5616446	Identifier	self		5616427	0					
ANR	5616447	Identifier	memory		5616427	1					
ANR	5616448	Argument	self -> pole		5616427	1					
ANR	5616449	PtrMemberAccess	self -> pole		5616427	0					
ANR	5616450	Identifier	self		5616427	0					
ANR	5616451	Identifier	pole		5616427	1					
ANR	5616452	Argument	s_pole_array		5616427	2					
ANR	5616453	Identifier	s_pole_array		5616427	0					
ANR	5616454	IfStatement	if ( self -> hint != self -> hint0 )		5616427	1					
ANR	5616455	Condition	self -> hint != self -> hint0	421:8:15534:15558	5616427	0	True				
ANR	5616456	EqualityExpression	self -> hint != self -> hint0		5616427	0		!=			
ANR	5616457	PtrMemberAccess	self -> hint		5616427	0					
ANR	5616458	Identifier	self		5616427	0					
ANR	5616459	Identifier	hint		5616427	1					
ANR	5616460	PtrMemberAccess	self -> hint0		5616427	1					
ANR	5616461	Identifier	self		5616427	0					
ANR	5616462	Identifier	hint0		5616427	1					
ANR	5616463	ExpressionStatement	"gs_free_object ( self -> memory , self -> hint , s_hint_array )"	422:8:15569:15623	5616427	1	True				
ANR	5616464	CallExpression	"gs_free_object ( self -> memory , self -> hint , s_hint_array )"		5616427	0					
ANR	5616465	Callee	gs_free_object		5616427	0					
ANR	5616466	Identifier	gs_free_object		5616427	0					
ANR	5616467	ArgumentList	self -> memory		5616427	1					
ANR	5616468	Argument	self -> memory		5616427	0					
ANR	5616469	PtrMemberAccess	self -> memory		5616427	0					
ANR	5616470	Identifier	self		5616427	0					
ANR	5616471	Identifier	memory		5616427	1					
ANR	5616472	Argument	self -> hint		5616427	1					
ANR	5616473	PtrMemberAccess	self -> hint		5616427	0					
ANR	5616474	Identifier	self		5616427	0					
ANR	5616475	Identifier	hint		5616427	1					
ANR	5616476	Argument	s_hint_array		5616427	2					
ANR	5616477	Identifier	s_hint_array		5616427	0					
ANR	5616478	IfStatement	if ( self -> zone != self -> zone0 )		5616427	2					
ANR	5616479	Condition	self -> zone != self -> zone0	423:8:15633:15657	5616427	0	True				
ANR	5616480	EqualityExpression	self -> zone != self -> zone0		5616427	0		!=			
ANR	5616481	PtrMemberAccess	self -> zone		5616427	0					
ANR	5616482	Identifier	self		5616427	0					
ANR	5616483	Identifier	zone		5616427	1					
ANR	5616484	PtrMemberAccess	self -> zone0		5616427	1					
ANR	5616485	Identifier	self		5616427	0					
ANR	5616486	Identifier	zone0		5616427	1					
ANR	5616487	ExpressionStatement	"gs_free_object ( self -> memory , self -> zone , s_zone_array )"	424:8:15668:15722	5616427	1	True				
ANR	5616488	CallExpression	"gs_free_object ( self -> memory , self -> zone , s_zone_array )"		5616427	0					
ANR	5616489	Callee	gs_free_object		5616427	0					
ANR	5616490	Identifier	gs_free_object		5616427	0					
ANR	5616491	ArgumentList	self -> memory		5616427	1					
ANR	5616492	Argument	self -> memory		5616427	0					
ANR	5616493	PtrMemberAccess	self -> memory		5616427	0					
ANR	5616494	Identifier	self		5616427	0					
ANR	5616495	Identifier	memory		5616427	1					
ANR	5616496	Argument	self -> zone		5616427	1					
ANR	5616497	PtrMemberAccess	self -> zone		5616427	0					
ANR	5616498	Identifier	self		5616427	0					
ANR	5616499	Identifier	zone		5616427	1					
ANR	5616500	Argument	s_zone_array		5616427	2					
ANR	5616501	Identifier	s_zone_array		5616427	0					
ANR	5616502	IfStatement	if ( self -> contour != self -> contour0 )		5616427	3					
ANR	5616503	Condition	self -> contour != self -> contour0	425:8:15732:15762	5616427	0	True				
ANR	5616504	EqualityExpression	self -> contour != self -> contour0		5616427	0		!=			
ANR	5616505	PtrMemberAccess	self -> contour		5616427	0					
ANR	5616506	Identifier	self		5616427	0					
ANR	5616507	Identifier	contour		5616427	1					
ANR	5616508	PtrMemberAccess	self -> contour0		5616427	1					
ANR	5616509	Identifier	self		5616427	0					
ANR	5616510	Identifier	contour0		5616427	1					
ANR	5616511	ExpressionStatement	"gs_free_object ( self -> memory , self -> contour , s_contour_array )"	426:8:15773:15833	5616427	1	True				
ANR	5616512	CallExpression	"gs_free_object ( self -> memory , self -> contour , s_contour_array )"		5616427	0					
ANR	5616513	Callee	gs_free_object		5616427	0					
ANR	5616514	Identifier	gs_free_object		5616427	0					
ANR	5616515	ArgumentList	self -> memory		5616427	1					
ANR	5616516	Argument	self -> memory		5616427	0					
ANR	5616517	PtrMemberAccess	self -> memory		5616427	0					
ANR	5616518	Identifier	self		5616427	0					
ANR	5616519	Identifier	memory		5616427	1					
ANR	5616520	Argument	self -> contour		5616427	1					
ANR	5616521	PtrMemberAccess	self -> contour		5616427	0					
ANR	5616522	Identifier	self		5616427	0					
ANR	5616523	Identifier	contour		5616427	1					
ANR	5616524	Argument	s_contour_array		5616427	2					
ANR	5616525	Identifier	s_contour_array		5616427	0					
ANR	5616526	IfStatement	if ( self -> subglyph != self -> subglyph0 )		5616427	4					
ANR	5616527	Condition	self -> subglyph != self -> subglyph0	427:8:15843:15875	5616427	0	True				
ANR	5616528	EqualityExpression	self -> subglyph != self -> subglyph0		5616427	0		!=			
ANR	5616529	PtrMemberAccess	self -> subglyph		5616427	0					
ANR	5616530	Identifier	self		5616427	0					
ANR	5616531	Identifier	subglyph		5616427	1					
ANR	5616532	PtrMemberAccess	self -> subglyph0		5616427	1					
ANR	5616533	Identifier	self		5616427	0					
ANR	5616534	Identifier	subglyph0		5616427	1					
ANR	5616535	ExpressionStatement	"gs_free_object ( self -> memory , self -> subglyph , s_subglyph_array )"	428:8:15886:15948	5616427	1	True				
ANR	5616536	CallExpression	"gs_free_object ( self -> memory , self -> subglyph , s_subglyph_array )"		5616427	0					
ANR	5616537	Callee	gs_free_object		5616427	0					
ANR	5616538	Identifier	gs_free_object		5616427	0					
ANR	5616539	ArgumentList	self -> memory		5616427	1					
ANR	5616540	Argument	self -> memory		5616427	0					
ANR	5616541	PtrMemberAccess	self -> memory		5616427	0					
ANR	5616542	Identifier	self		5616427	0					
ANR	5616543	Identifier	memory		5616427	1					
ANR	5616544	Argument	self -> subglyph		5616427	1					
ANR	5616545	PtrMemberAccess	self -> subglyph		5616427	0					
ANR	5616546	Identifier	self		5616427	0					
ANR	5616547	Identifier	subglyph		5616427	1					
ANR	5616548	Argument	s_subglyph_array		5616427	2					
ANR	5616549	Identifier	s_subglyph_array		5616427	0					
ANR	5616550	IfStatement	if ( self -> hint_range != self -> hint_range0 )		5616427	5					
ANR	5616551	Condition	self -> hint_range != self -> hint_range0	429:8:15958:15994	5616427	0	True				
ANR	5616552	EqualityExpression	self -> hint_range != self -> hint_range0		5616427	0		!=			
ANR	5616553	PtrMemberAccess	self -> hint_range		5616427	0					
ANR	5616554	Identifier	self		5616427	0					
ANR	5616555	Identifier	hint_range		5616427	1					
ANR	5616556	PtrMemberAccess	self -> hint_range0		5616427	1					
ANR	5616557	Identifier	self		5616427	0					
ANR	5616558	Identifier	hint_range0		5616427	1					
ANR	5616559	ExpressionStatement	"gs_free_object ( self -> memory , self -> hint_range , s_hint_range_array )"	430:8:16005:16071	5616427	1	True				
ANR	5616560	CallExpression	"gs_free_object ( self -> memory , self -> hint_range , s_hint_range_array )"		5616427	0					
ANR	5616561	Callee	gs_free_object		5616427	0					
ANR	5616562	Identifier	gs_free_object		5616427	0					
ANR	5616563	ArgumentList	self -> memory		5616427	1					
ANR	5616564	Argument	self -> memory		5616427	0					
ANR	5616565	PtrMemberAccess	self -> memory		5616427	0					
ANR	5616566	Identifier	self		5616427	0					
ANR	5616567	Identifier	memory		5616427	1					
ANR	5616568	Argument	self -> hint_range		5616427	1					
ANR	5616569	PtrMemberAccess	self -> hint_range		5616427	0					
ANR	5616570	Identifier	self		5616427	0					
ANR	5616571	Identifier	hint_range		5616427	1					
ANR	5616572	Argument	s_hint_range_array		5616427	2					
ANR	5616573	Identifier	s_hint_range_array		5616427	0					
ANR	5616574	IfStatement	if ( self -> hint_applying != self -> hint_applying0 )		5616427	6					
ANR	5616575	Condition	self -> hint_applying != self -> hint_applying0	431:8:16081:16123	5616427	0	True				
ANR	5616576	EqualityExpression	self -> hint_applying != self -> hint_applying0		5616427	0		!=			
ANR	5616577	PtrMemberAccess	self -> hint_applying		5616427	0					
ANR	5616578	Identifier	self		5616427	0					
ANR	5616579	Identifier	hint_applying		5616427	1					
ANR	5616580	PtrMemberAccess	self -> hint_applying0		5616427	1					
ANR	5616581	Identifier	self		5616427	0					
ANR	5616582	Identifier	hint_applying0		5616427	1					
ANR	5616583	ExpressionStatement	"gs_free_object ( self -> memory , self -> hint_applying , s_hint_applying_array )"	432:8:16134:16206	5616427	1	True				
ANR	5616584	CallExpression	"gs_free_object ( self -> memory , self -> hint_applying , s_hint_applying_array )"		5616427	0					
ANR	5616585	Callee	gs_free_object		5616427	0					
ANR	5616586	Identifier	gs_free_object		5616427	0					
ANR	5616587	ArgumentList	self -> memory		5616427	1					
ANR	5616588	Argument	self -> memory		5616427	0					
ANR	5616589	PtrMemberAccess	self -> memory		5616427	0					
ANR	5616590	Identifier	self		5616427	0					
ANR	5616591	Identifier	memory		5616427	1					
ANR	5616592	Argument	self -> hint_applying		5616427	1					
ANR	5616593	PtrMemberAccess	self -> hint_applying		5616427	0					
ANR	5616594	Identifier	self		5616427	0					
ANR	5616595	Identifier	hint_applying		5616427	1					
ANR	5616596	Argument	s_hint_applying_array		5616427	2					
ANR	5616597	Identifier	s_hint_applying_array		5616427	0					
ANR	5616598	IfStatement	if ( self -> stem_snap [ 0 ] != self -> stem_snap0 [ 0 ] )		5616427	7					
ANR	5616599	Condition	self -> stem_snap [ 0 ] != self -> stem_snap0 [ 0 ]	433:8:16216:16256	5616427	0	True				
ANR	5616600	EqualityExpression	self -> stem_snap [ 0 ] != self -> stem_snap0 [ 0 ]		5616427	0		!=			
ANR	5616601	ArrayIndexing	self -> stem_snap [ 0 ]		5616427	0					
ANR	5616602	PtrMemberAccess	self -> stem_snap		5616427	0					
ANR	5616603	Identifier	self		5616427	0					
ANR	5616604	Identifier	stem_snap		5616427	1					
ANR	5616605	PrimaryExpression	0		5616427	1					
ANR	5616606	ArrayIndexing	self -> stem_snap0 [ 0 ]		5616427	1					
ANR	5616607	PtrMemberAccess	self -> stem_snap0		5616427	0					
ANR	5616608	Identifier	self		5616427	0					
ANR	5616609	Identifier	stem_snap0		5616427	1					
ANR	5616610	PrimaryExpression	0		5616427	1					
ANR	5616611	ExpressionStatement	"gs_free_object ( self -> memory , self -> stem_snap [ 0 ] , s_stem_snap_array )"	434:8:16267:16334	5616427	1	True				
ANR	5616612	CallExpression	"gs_free_object ( self -> memory , self -> stem_snap [ 0 ] , s_stem_snap_array )"		5616427	0					
ANR	5616613	Callee	gs_free_object		5616427	0					
ANR	5616614	Identifier	gs_free_object		5616427	0					
ANR	5616615	ArgumentList	self -> memory		5616427	1					
ANR	5616616	Argument	self -> memory		5616427	0					
ANR	5616617	PtrMemberAccess	self -> memory		5616427	0					
ANR	5616618	Identifier	self		5616427	0					
ANR	5616619	Identifier	memory		5616427	1					
ANR	5616620	Argument	self -> stem_snap [ 0 ]		5616427	1					
ANR	5616621	ArrayIndexing	self -> stem_snap [ 0 ]		5616427	0					
ANR	5616622	PtrMemberAccess	self -> stem_snap		5616427	0					
ANR	5616623	Identifier	self		5616427	0					
ANR	5616624	Identifier	stem_snap		5616427	1					
ANR	5616625	PrimaryExpression	0		5616427	1					
ANR	5616626	Argument	s_stem_snap_array		5616427	2					
ANR	5616627	Identifier	s_stem_snap_array		5616427	0					
ANR	5616628	IfStatement	if ( self -> stem_snap [ 1 ] != self -> stem_snap0 [ 1 ] )		5616427	8					
ANR	5616629	Condition	self -> stem_snap [ 1 ] != self -> stem_snap0 [ 1 ]	435:8:16344:16384	5616427	0	True				
ANR	5616630	EqualityExpression	self -> stem_snap [ 1 ] != self -> stem_snap0 [ 1 ]		5616427	0		!=			
ANR	5616631	ArrayIndexing	self -> stem_snap [ 1 ]		5616427	0					
ANR	5616632	PtrMemberAccess	self -> stem_snap		5616427	0					
ANR	5616633	Identifier	self		5616427	0					
ANR	5616634	Identifier	stem_snap		5616427	1					
ANR	5616635	PrimaryExpression	1		5616427	1					
ANR	5616636	ArrayIndexing	self -> stem_snap0 [ 1 ]		5616427	1					
ANR	5616637	PtrMemberAccess	self -> stem_snap0		5616427	0					
ANR	5616638	Identifier	self		5616427	0					
ANR	5616639	Identifier	stem_snap0		5616427	1					
ANR	5616640	PrimaryExpression	1		5616427	1					
ANR	5616641	ExpressionStatement	"gs_free_object ( self -> memory , self -> stem_snap [ 1 ] , s_stem_snap_array )"	436:8:16395:16462	5616427	1	True				
ANR	5616642	CallExpression	"gs_free_object ( self -> memory , self -> stem_snap [ 1 ] , s_stem_snap_array )"		5616427	0					
ANR	5616643	Callee	gs_free_object		5616427	0					
ANR	5616644	Identifier	gs_free_object		5616427	0					
ANR	5616645	ArgumentList	self -> memory		5616427	1					
ANR	5616646	Argument	self -> memory		5616427	0					
ANR	5616647	PtrMemberAccess	self -> memory		5616427	0					
ANR	5616648	Identifier	self		5616427	0					
ANR	5616649	Identifier	memory		5616427	1					
ANR	5616650	Argument	self -> stem_snap [ 1 ]		5616427	1					
ANR	5616651	ArrayIndexing	self -> stem_snap [ 1 ]		5616427	0					
ANR	5616652	PtrMemberAccess	self -> stem_snap		5616427	0					
ANR	5616653	Identifier	self		5616427	0					
ANR	5616654	Identifier	stem_snap		5616427	1					
ANR	5616655	PrimaryExpression	1		5616427	1					
ANR	5616656	Argument	s_stem_snap_array		5616427	2					
ANR	5616657	Identifier	s_stem_snap_array		5616427	0					
ANR	5616658	IfStatement	if ( self -> stem_snap_vote != self -> stem_snap_vote0 )		5616427	9					
ANR	5616659	Condition	self -> stem_snap_vote != self -> stem_snap_vote0	437:8:16472:16516	5616427	0	True				
ANR	5616660	EqualityExpression	self -> stem_snap_vote != self -> stem_snap_vote0		5616427	0		!=			
ANR	5616661	PtrMemberAccess	self -> stem_snap_vote		5616427	0					
ANR	5616662	Identifier	self		5616427	0					
ANR	5616663	Identifier	stem_snap_vote		5616427	1					
ANR	5616664	PtrMemberAccess	self -> stem_snap_vote0		5616427	1					
ANR	5616665	Identifier	self		5616427	0					
ANR	5616666	Identifier	stem_snap_vote0		5616427	1					
ANR	5616667	ExpressionStatement	"gs_free_object ( self -> memory , self -> stem_snap_vote , s_stem_snap_vote_array )"	438:8:16527:16601	5616427	1	True				
ANR	5616668	CallExpression	"gs_free_object ( self -> memory , self -> stem_snap_vote , s_stem_snap_vote_array )"		5616427	0					
ANR	5616669	Callee	gs_free_object		5616427	0					
ANR	5616670	Identifier	gs_free_object		5616427	0					
ANR	5616671	ArgumentList	self -> memory		5616427	1					
ANR	5616672	Argument	self -> memory		5616427	0					
ANR	5616673	PtrMemberAccess	self -> memory		5616427	0					
ANR	5616674	Identifier	self		5616427	0					
ANR	5616675	Identifier	memory		5616427	1					
ANR	5616676	Argument	self -> stem_snap_vote		5616427	1					
ANR	5616677	PtrMemberAccess	self -> stem_snap_vote		5616427	0					
ANR	5616678	Identifier	self		5616427	0					
ANR	5616679	Identifier	stem_snap_vote		5616427	1					
ANR	5616680	Argument	s_stem_snap_vote_array		5616427	2					
ANR	5616681	Identifier	s_stem_snap_vote_array		5616427	0					
ANR	5616682	ExpressionStatement	self -> pole = 0	439:4:16607:16621	5616427	10	True				
ANR	5616683	AssignmentExpression	self -> pole = 0		5616427	0		=			
ANR	5616684	PtrMemberAccess	self -> pole		5616427	0					
ANR	5616685	Identifier	self		5616427	0					
ANR	5616686	Identifier	pole		5616427	1					
ANR	5616687	PrimaryExpression	0		5616427	1					
ANR	5616688	ExpressionStatement	self -> hint = 0	440:4:16627:16641	5616427	11	True				
ANR	5616689	AssignmentExpression	self -> hint = 0		5616427	0		=			
ANR	5616690	PtrMemberAccess	self -> hint		5616427	0					
ANR	5616691	Identifier	self		5616427	0					
ANR	5616692	Identifier	hint		5616427	1					
ANR	5616693	PrimaryExpression	0		5616427	1					
ANR	5616694	ExpressionStatement	self -> zone = 0	441:4:16647:16661	5616427	12	True				
ANR	5616695	AssignmentExpression	self -> zone = 0		5616427	0		=			
ANR	5616696	PtrMemberAccess	self -> zone		5616427	0					
ANR	5616697	Identifier	self		5616427	0					
ANR	5616698	Identifier	zone		5616427	1					
ANR	5616699	PrimaryExpression	0		5616427	1					
ANR	5616700	ExpressionStatement	self -> contour = 0	442:4:16667:16684	5616427	13	True				
ANR	5616701	AssignmentExpression	self -> contour = 0		5616427	0		=			
ANR	5616702	PtrMemberAccess	self -> contour		5616427	0					
ANR	5616703	Identifier	self		5616427	0					
ANR	5616704	Identifier	contour		5616427	1					
ANR	5616705	PrimaryExpression	0		5616427	1					
ANR	5616706	ExpressionStatement	self -> hint_range = 0	443:4:16690:16710	5616427	14	True				
ANR	5616707	AssignmentExpression	self -> hint_range = 0		5616427	0		=			
ANR	5616708	PtrMemberAccess	self -> hint_range		5616427	0					
ANR	5616709	Identifier	self		5616427	0					
ANR	5616710	Identifier	hint_range		5616427	1					
ANR	5616711	PrimaryExpression	0		5616427	1					
ANR	5616712	ExpressionStatement	self -> hint_applying = 0	444:4:16716:16739	5616427	15	True				
ANR	5616713	AssignmentExpression	self -> hint_applying = 0		5616427	0		=			
ANR	5616714	PtrMemberAccess	self -> hint_applying		5616427	0					
ANR	5616715	Identifier	self		5616427	0					
ANR	5616716	Identifier	hint_applying		5616427	1					
ANR	5616717	PrimaryExpression	0		5616427	1					
ANR	5616718	ExpressionStatement	self -> stem_snap [ 0 ] = self -> stem_snap [ 1 ] = 0	445:4:16745:16788	5616427	16	True				
ANR	5616719	AssignmentExpression	self -> stem_snap [ 0 ] = self -> stem_snap [ 1 ] = 0		5616427	0		=			
ANR	5616720	ArrayIndexing	self -> stem_snap [ 0 ]		5616427	0					
ANR	5616721	PtrMemberAccess	self -> stem_snap		5616427	0					
ANR	5616722	Identifier	self		5616427	0					
ANR	5616723	Identifier	stem_snap		5616427	1					
ANR	5616724	PrimaryExpression	0		5616427	1					
ANR	5616725	AssignmentExpression	self -> stem_snap [ 1 ] = 0		5616427	1		=			
ANR	5616726	ArrayIndexing	self -> stem_snap [ 1 ]		5616427	0					
ANR	5616727	PtrMemberAccess	self -> stem_snap		5616427	0					
ANR	5616728	Identifier	self		5616427	0					
ANR	5616729	Identifier	stem_snap		5616427	1					
ANR	5616730	PrimaryExpression	1		5616427	1					
ANR	5616731	PrimaryExpression	0		5616427	1					
ANR	5616732	ExpressionStatement	self -> stem_snap_vote = 0	446:4:16794:16818	5616427	17	True				
ANR	5616733	AssignmentExpression	self -> stem_snap_vote = 0		5616427	0		=			
ANR	5616734	PtrMemberAccess	self -> stem_snap_vote		5616427	0					
ANR	5616735	Identifier	self		5616427	0					
ANR	5616736	Identifier	stem_snap_vote		5616427	1					
ANR	5616737	PrimaryExpression	0		5616427	1					
ANR	5616738	ReturnType	static inline void		5616427	1					
ANR	5616739	Identifier	t1_hinter__free_arrays		5616427	2					
ANR	5616740	ParameterList	t1_hinter * self		5616427	3					
ANR	5616741	Parameter	t1_hinter * self	418:42:15409:15424	5616427	0	True				
ANR	5616742	ParameterType	t1_hinter *		5616427	0					
ANR	5616743	Identifier	self		5616427	1					
ANR	5616744	CFGEntryNode	ENTRY		5616427		True				
ANR	5616745	CFGExitNode	EXIT		5616427		True				
ANR	5616746	Symbol	self -> contour0		5616427						
ANR	5616747	Symbol	s_hint_applying_array		5616427						
ANR	5616748	Symbol	s_stem_snap_array		5616427						
ANR	5616749	Symbol	s_zone_array		5616427						
ANR	5616750	Symbol	self -> hint_range0		5616427						
ANR	5616751	Symbol	self -> subglyph0		5616427						
ANR	5616752	Symbol	self -> stem_snap0		5616427						
ANR	5616753	Symbol	self -> zone		5616427						
ANR	5616754	Symbol	s_contour_array		5616427						
ANR	5616755	Symbol	s_stem_snap_vote_array		5616427						
ANR	5616756	Symbol	self -> stem_snap_vote0		5616427						
ANR	5616757	Symbol	self -> memory		5616427						
ANR	5616758	Symbol	self -> pole0		5616427						
ANR	5616759	Symbol	s_subglyph_array		5616427						
ANR	5616760	Symbol	self -> pole		5616427						
ANR	5616761	Symbol	* self -> stem_snap		5616427						
ANR	5616762	Symbol	* self -> stem_snap0		5616427						
ANR	5616763	Symbol	self -> hint		5616427						
ANR	5616764	Symbol	* * self		5616427						
ANR	5616765	Symbol	* self		5616427						
ANR	5616766	Symbol	self -> stem_snap		5616427						
ANR	5616767	Symbol	s_pole_array		5616427						
ANR	5616768	Symbol	self -> hint_range		5616427						
ANR	5616769	Symbol	self -> contour		5616427						
ANR	5616770	Symbol	self -> subglyph		5616427						
ANR	5616771	Symbol	self -> hint_applying0		5616427						
ANR	5616772	Symbol	self -> hint0		5616427						
ANR	5616773	Symbol	self -> zone0		5616427						
ANR	5616774	Symbol	self -> stem_snap_vote		5616427						
ANR	5616775	Symbol	self		5616427						
ANR	5616776	Symbol	self -> hint_applying		5616427						
ANR	5616777	Symbol	s_hint_array		5616427						
ANR	5616778	Symbol	s_hint_range_array		5616427						
ANR	5616779	Function	t1_hinter__init_outline	449:0:16823:17098							
ANR	5616780	FunctionDef	t1_hinter__init_outline (t1_hinter * self)		5616779	0					
ANR	5616781	CompoundStatement		450:0:16884:17098	5616779	0					
ANR	5616782	ExpressionStatement	self -> contour_count = 0	451:4:16890:16913	5616779	0	True				
ANR	5616783	AssignmentExpression	self -> contour_count = 0		5616779	0		=			
ANR	5616784	PtrMemberAccess	self -> contour_count		5616779	0					
ANR	5616785	Identifier	self		5616779	0					
ANR	5616786	Identifier	contour_count		5616779	1					
ANR	5616787	PrimaryExpression	0		5616779	1					
ANR	5616788	ExpressionStatement	self -> pole_count = 0	452:4:16919:16939	5616779	1	True				
ANR	5616789	AssignmentExpression	self -> pole_count = 0		5616779	0		=			
ANR	5616790	PtrMemberAccess	self -> pole_count		5616779	0					
ANR	5616791	Identifier	self		5616779	0					
ANR	5616792	Identifier	pole_count		5616779	1					
ANR	5616793	PrimaryExpression	0		5616779	1					
ANR	5616794	ExpressionStatement	self -> contour [ 0 ] = 0	453:4:16945:16965	5616779	2	True				
ANR	5616795	AssignmentExpression	self -> contour [ 0 ] = 0		5616779	0		=			
ANR	5616796	ArrayIndexing	self -> contour [ 0 ]		5616779	0					
ANR	5616797	PtrMemberAccess	self -> contour		5616779	0					
ANR	5616798	Identifier	self		5616779	0					
ANR	5616799	Identifier	contour		5616779	1					
ANR	5616800	PrimaryExpression	0		5616779	1					
ANR	5616801	PrimaryExpression	0		5616779	1					
ANR	5616802	ExpressionStatement	self -> hint_count = 0	454:4:16971:16991	5616779	3	True				
ANR	5616803	AssignmentExpression	self -> hint_count = 0		5616779	0		=			
ANR	5616804	PtrMemberAccess	self -> hint_count		5616779	0					
ANR	5616805	Identifier	self		5616779	0					
ANR	5616806	Identifier	hint_count		5616779	1					
ANR	5616807	PrimaryExpression	0		5616779	1					
ANR	5616808	ExpressionStatement	self -> primary_hint_count = - 1	455:4:16997:17026	5616779	4	True				
ANR	5616809	AssignmentExpression	self -> primary_hint_count = - 1		5616779	0		=			
ANR	5616810	PtrMemberAccess	self -> primary_hint_count		5616779	0					
ANR	5616811	Identifier	self		5616779	0					
ANR	5616812	Identifier	primary_hint_count		5616779	1					
ANR	5616813	UnaryOperationExpression	- 1		5616779	1					
ANR	5616814	UnaryOperator	-		5616779	0					
ANR	5616815	PrimaryExpression	1		5616779	1					
ANR	5616816	ExpressionStatement	self -> suppress_overshoots = false	456:4:17032:17065	5616779	5	True				
ANR	5616817	AssignmentExpression	self -> suppress_overshoots = false		5616779	0		=			
ANR	5616818	PtrMemberAccess	self -> suppress_overshoots		5616779	0					
ANR	5616819	Identifier	self		5616779	0					
ANR	5616820	Identifier	suppress_overshoots		5616779	1					
ANR	5616821	Identifier	false		5616779	1					
ANR	5616822	ExpressionStatement	self -> path_opened = false	457:4:17071:17096	5616779	6	True				
ANR	5616823	AssignmentExpression	self -> path_opened = false		5616779	0		=			
ANR	5616824	PtrMemberAccess	self -> path_opened		5616779	0					
ANR	5616825	Identifier	self		5616779	0					
ANR	5616826	Identifier	path_opened		5616779	1					
ANR	5616827	Identifier	false		5616779	1					
ANR	5616828	ReturnType	static inline void		5616779	1					
ANR	5616829	Identifier	t1_hinter__init_outline		5616779	2					
ANR	5616830	ParameterList	t1_hinter * self		5616779	3					
ANR	5616831	Parameter	t1_hinter * self	449:43:16866:16881	5616779	0	True				
ANR	5616832	ParameterType	t1_hinter *		5616779	0					
ANR	5616833	Identifier	self		5616779	1					
ANR	5616834	CFGEntryNode	ENTRY		5616779		True				
ANR	5616835	CFGExitNode	EXIT		5616779		True				
ANR	5616836	Symbol	* self -> contour		5616779						
ANR	5616837	Symbol	self -> contour		5616779						
ANR	5616838	Symbol	self -> hint_count		5616779						
ANR	5616839	Symbol	self -> suppress_overshoots		5616779						
ANR	5616840	Symbol	self -> contour_count		5616779						
ANR	5616841	Symbol	self -> path_opened		5616779						
ANR	5616842	Symbol	self -> pole_count		5616779						
ANR	5616843	Symbol	* * self		5616779						
ANR	5616844	Symbol	* self		5616779						
ANR	5616845	Symbol	false		5616779						
ANR	5616846	Symbol	self		5616779						
ANR	5616847	Symbol	self -> primary_hint_count		5616779						
ANR	5616848	Function	t1_hinter__compute_rat_transform_coef	460:0:17101:17663							
ANR	5616849	FunctionDef	t1_hinter__compute_rat_transform_coef (t1_hinter * self)		5616848	0					
ANR	5616850	CompoundStatement		461:0:17169:17663	5616848	0					
ANR	5616851	ExpressionStatement	self -> heigt_transform_coef_rat = ( int19 ) ( self -> heigt_transform_coef * self -> ctmf . denominator + 0.5 )	463:4:17247:17346	5616848	0	True				
ANR	5616852	AssignmentExpression	self -> heigt_transform_coef_rat = ( int19 ) ( self -> heigt_transform_coef * self -> ctmf . denominator + 0.5 )		5616848	0		=			
ANR	5616853	PtrMemberAccess	self -> heigt_transform_coef_rat		5616848	0					
ANR	5616854	Identifier	self		5616848	0					
ANR	5616855	Identifier	heigt_transform_coef_rat		5616848	1					
ANR	5616856	CastExpression	( int19 ) ( self -> heigt_transform_coef * self -> ctmf . denominator + 0.5 )		5616848	1					
ANR	5616857	CastTarget	int19		5616848	0					
ANR	5616858	AdditiveExpression	self -> heigt_transform_coef * self -> ctmf . denominator + 0.5		5616848	1		+			
ANR	5616859	MultiplicativeExpression	self -> heigt_transform_coef * self -> ctmf . denominator		5616848	0		*			
ANR	5616860	PtrMemberAccess	self -> heigt_transform_coef		5616848	0					
ANR	5616861	Identifier	self		5616848	0					
ANR	5616862	Identifier	heigt_transform_coef		5616848	1					
ANR	5616863	MemberAccess	self -> ctmf . denominator		5616848	1					
ANR	5616864	PtrMemberAccess	self -> ctmf		5616848	0					
ANR	5616865	Identifier	self		5616848	0					
ANR	5616866	Identifier	ctmf		5616848	1					
ANR	5616867	Identifier	denominator		5616848	1					
ANR	5616868	PrimaryExpression	0.5		5616848	1					
ANR	5616869	ExpressionStatement	self -> width_transform_coef_rat = ( int19 ) ( self -> width_transform_coef * self -> ctmf . denominator + 0.5 )	464:4:17352:17451	5616848	1	True				
ANR	5616870	AssignmentExpression	self -> width_transform_coef_rat = ( int19 ) ( self -> width_transform_coef * self -> ctmf . denominator + 0.5 )		5616848	0		=			
ANR	5616871	PtrMemberAccess	self -> width_transform_coef_rat		5616848	0					
ANR	5616872	Identifier	self		5616848	0					
ANR	5616873	Identifier	width_transform_coef_rat		5616848	1					
ANR	5616874	CastExpression	( int19 ) ( self -> width_transform_coef * self -> ctmf . denominator + 0.5 )		5616848	1					
ANR	5616875	CastTarget	int19		5616848	0					
ANR	5616876	AdditiveExpression	self -> width_transform_coef * self -> ctmf . denominator + 0.5		5616848	1		+			
ANR	5616877	MultiplicativeExpression	self -> width_transform_coef * self -> ctmf . denominator		5616848	0		*			
ANR	5616878	PtrMemberAccess	self -> width_transform_coef		5616848	0					
ANR	5616879	Identifier	self		5616848	0					
ANR	5616880	Identifier	width_transform_coef		5616848	1					
ANR	5616881	MemberAccess	self -> ctmf . denominator		5616848	1					
ANR	5616882	PtrMemberAccess	self -> ctmf		5616848	0					
ANR	5616883	Identifier	self		5616848	0					
ANR	5616884	Identifier	ctmf		5616848	1					
ANR	5616885	Identifier	denominator		5616848	1					
ANR	5616886	PrimaryExpression	0.5		5616848	1					
ANR	5616887	ExpressionStatement	self -> heigt_transform_coef_inv = ( int19 ) ( self -> ctmi . denominator / self -> heigt_transform_coef + 0.5 )	465:4:17457:17556	5616848	2	True				
ANR	5616888	AssignmentExpression	self -> heigt_transform_coef_inv = ( int19 ) ( self -> ctmi . denominator / self -> heigt_transform_coef + 0.5 )		5616848	0		=			
ANR	5616889	PtrMemberAccess	self -> heigt_transform_coef_inv		5616848	0					
ANR	5616890	Identifier	self		5616848	0					
ANR	5616891	Identifier	heigt_transform_coef_inv		5616848	1					
ANR	5616892	CastExpression	( int19 ) ( self -> ctmi . denominator / self -> heigt_transform_coef + 0.5 )		5616848	1					
ANR	5616893	CastTarget	int19		5616848	0					
ANR	5616894	AdditiveExpression	self -> ctmi . denominator / self -> heigt_transform_coef + 0.5		5616848	1		+			
ANR	5616895	MultiplicativeExpression	self -> ctmi . denominator / self -> heigt_transform_coef		5616848	0		/			
ANR	5616896	MemberAccess	self -> ctmi . denominator		5616848	0					
ANR	5616897	PtrMemberAccess	self -> ctmi		5616848	0					
ANR	5616898	Identifier	self		5616848	0					
ANR	5616899	Identifier	ctmi		5616848	1					
ANR	5616900	Identifier	denominator		5616848	1					
ANR	5616901	PtrMemberAccess	self -> heigt_transform_coef		5616848	1					
ANR	5616902	Identifier	self		5616848	0					
ANR	5616903	Identifier	heigt_transform_coef		5616848	1					
ANR	5616904	PrimaryExpression	0.5		5616848	1					
ANR	5616905	ExpressionStatement	self -> width_transform_coef_inv = ( int19 ) ( self -> ctmi . denominator / self -> width_transform_coef + 0.5 )	466:4:17562:17661	5616848	3	True				
ANR	5616906	AssignmentExpression	self -> width_transform_coef_inv = ( int19 ) ( self -> ctmi . denominator / self -> width_transform_coef + 0.5 )		5616848	0		=			
ANR	5616907	PtrMemberAccess	self -> width_transform_coef_inv		5616848	0					
ANR	5616908	Identifier	self		5616848	0					
ANR	5616909	Identifier	width_transform_coef_inv		5616848	1					
ANR	5616910	CastExpression	( int19 ) ( self -> ctmi . denominator / self -> width_transform_coef + 0.5 )		5616848	1					
ANR	5616911	CastTarget	int19		5616848	0					
ANR	5616912	AdditiveExpression	self -> ctmi . denominator / self -> width_transform_coef + 0.5		5616848	1		+			
ANR	5616913	MultiplicativeExpression	self -> ctmi . denominator / self -> width_transform_coef		5616848	0		/			
ANR	5616914	MemberAccess	self -> ctmi . denominator		5616848	0					
ANR	5616915	PtrMemberAccess	self -> ctmi		5616848	0					
ANR	5616916	Identifier	self		5616848	0					
ANR	5616917	Identifier	ctmi		5616848	1					
ANR	5616918	Identifier	denominator		5616848	1					
ANR	5616919	PtrMemberAccess	self -> width_transform_coef		5616848	1					
ANR	5616920	Identifier	self		5616848	0					
ANR	5616921	Identifier	width_transform_coef		5616848	1					
ANR	5616922	PrimaryExpression	0.5		5616848	1					
ANR	5616923	ReturnType	static void		5616848	1					
ANR	5616924	Identifier	t1_hinter__compute_rat_transform_coef		5616848	2					
ANR	5616925	ParameterList	t1_hinter * self		5616848	3					
ANR	5616926	Parameter	t1_hinter * self	460:50:17151:17166	5616848	0	True				
ANR	5616927	ParameterType	t1_hinter *		5616848	0					
ANR	5616928	Identifier	self		5616848	1					
ANR	5616929	CFGEntryNode	ENTRY		5616848		True				
ANR	5616930	CFGExitNode	EXIT		5616848		True				
ANR	5616931	Symbol	self -> width_transform_coef_rat		5616848						
ANR	5616932	Symbol	* self		5616848						
ANR	5616933	Symbol	self -> ctmf		5616848						
ANR	5616934	Symbol	self -> heigt_transform_coef		5616848						
ANR	5616935	Symbol	self -> width_transform_coef		5616848						
ANR	5616936	Symbol	self -> heigt_transform_coef_inv		5616848						
ANR	5616937	Symbol	self		5616848						
ANR	5616938	Symbol	self -> ctmf . denominator		5616848						
ANR	5616939	Symbol	self -> ctmi		5616848						
ANR	5616940	Symbol	self -> heigt_transform_coef_rat		5616848						
ANR	5616941	Symbol	self -> width_transform_coef_inv		5616848						
ANR	5616942	Symbol	self -> ctmi . denominator		5616848						
ANR	5616943	Function	t1_hinter__adjust_matrix_precision	469:0:17666:18354							
ANR	5616944	FunctionDef	"t1_hinter__adjust_matrix_precision (t1_hinter * self , fixed xx , fixed yy)"		5616943	0					
ANR	5616945	CompoundStatement		470:0:17758:18354	5616943	0					
ANR	5616946	IdentifierDeclStatement	"fixed x = any_abs ( xx ) , y = any_abs ( yy ) ;"	470:3:17762:17800	5616943	0	True				
ANR	5616947	IdentifierDecl	x = any_abs ( xx )		5616943	0					
ANR	5616948	IdentifierDeclType	fixed		5616943	0					
ANR	5616949	Identifier	x		5616943	1					
ANR	5616950	AssignmentExpression	x = any_abs ( xx )		5616943	2		=			
ANR	5616951	Identifier	x		5616943	0					
ANR	5616952	CallExpression	any_abs ( xx )		5616943	1					
ANR	5616953	Callee	any_abs		5616943	0					
ANR	5616954	Identifier	any_abs		5616943	0					
ANR	5616955	ArgumentList	xx		5616943	1					
ANR	5616956	Argument	xx		5616943	0					
ANR	5616957	Identifier	xx		5616943	0					
ANR	5616958	IdentifierDecl	y = any_abs ( yy )		5616943	1					
ANR	5616959	IdentifierDeclType	fixed		5616943	0					
ANR	5616960	Identifier	y		5616943	1					
ANR	5616961	AssignmentExpression	y = any_abs ( yy )		5616943	2		=			
ANR	5616962	Identifier	y		5616943	0					
ANR	5616963	CallExpression	any_abs ( yy )		5616943	1					
ANR	5616964	Callee	any_abs		5616943	0					
ANR	5616965	Identifier	any_abs		5616943	0					
ANR	5616966	ArgumentList	yy		5616943	1					
ANR	5616967	Argument	yy		5616943	0					
ANR	5616968	Identifier	yy		5616943	0					
ANR	5616969	IdentifierDeclStatement	fixed c = ( x > y ? x : y ) ;	471:4:17806:17831	5616943	1	True				
ANR	5616970	IdentifierDecl	c = ( x > y ? x : y )		5616943	0					
ANR	5616971	IdentifierDeclType	fixed		5616943	0					
ANR	5616972	Identifier	c		5616943	1					
ANR	5616973	AssignmentExpression	c = ( x > y ? x : y )		5616943	2		=			
ANR	5616974	Identifier	c		5616943	0					
ANR	5616975	ConditionalExpression	x > y ? x : y		5616943	1					
ANR	5616976	Condition	x > y		5616943	0					
ANR	5616977	RelationalExpression	x > y		5616943	0		>			
ANR	5616978	Identifier	x		5616943	0					
ANR	5616979	Identifier	y		5616943	1					
ANR	5616980	Identifier	x		5616943	1					
ANR	5616981	Identifier	y		5616943	2					
ANR	5616982	WhileStatement	while ( c >= self -> max_import_coord )		5616943	2					
ANR	5616983	Condition	c >= self -> max_import_coord	473:11:17845:17871	5616943	0	True				
ANR	5616984	RelationalExpression	c >= self -> max_import_coord		5616943	0		>=			
ANR	5616985	Identifier	c		5616943	0					
ANR	5616986	PtrMemberAccess	self -> max_import_coord		5616943	1					
ANR	5616987	Identifier	self		5616943	0					
ANR	5616988	Identifier	max_import_coord		5616943	1					
ANR	5616989	CompoundStatement		4:40:115:115	5616943	1					
ANR	5616990	ExpressionStatement	self -> max_import_coord <<= 1	475:8:17967:17995	5616943	0	True				
ANR	5616991	AssignmentExpression	self -> max_import_coord <<= 1		5616943	0		<<=			
ANR	5616992	PtrMemberAccess	self -> max_import_coord		5616943	0					
ANR	5616993	Identifier	self		5616943	0					
ANR	5616994	Identifier	max_import_coord		5616943	1					
ANR	5616995	PrimaryExpression	1		5616943	1					
ANR	5616996	ExpressionStatement	"fraction_matrix__drop_bits ( & self -> ctmf , 1 )"	476:8:18005:18047	5616943	1	True				
ANR	5616997	CallExpression	"fraction_matrix__drop_bits ( & self -> ctmf , 1 )"		5616943	0					
ANR	5616998	Callee	fraction_matrix__drop_bits		5616943	0					
ANR	5616999	Identifier	fraction_matrix__drop_bits		5616943	0					
ANR	5617000	ArgumentList	& self -> ctmf		5616943	1					
ANR	5617001	Argument	& self -> ctmf		5616943	0					
ANR	5617002	UnaryOperationExpression	& self -> ctmf		5616943	0					
ANR	5617003	UnaryOperator	&		5616943	0					
ANR	5617004	PtrMemberAccess	self -> ctmf		5616943	1					
ANR	5617005	Identifier	self		5616943	0					
ANR	5617006	Identifier	ctmf		5616943	1					
ANR	5617007	Argument	1		5616943	1					
ANR	5617008	PrimaryExpression	1		5616943	0					
ANR	5617009	ExpressionStatement	"fraction_matrix__drop_bits ( & self -> ctmi , 1 )"	477:8:18057:18099	5616943	2	True				
ANR	5617010	CallExpression	"fraction_matrix__drop_bits ( & self -> ctmi , 1 )"		5616943	0					
ANR	5617011	Callee	fraction_matrix__drop_bits		5616943	0					
ANR	5617012	Identifier	fraction_matrix__drop_bits		5616943	0					
ANR	5617013	ArgumentList	& self -> ctmi		5616943	1					
ANR	5617014	Argument	& self -> ctmi		5616943	0					
ANR	5617015	UnaryOperationExpression	& self -> ctmi		5616943	0					
ANR	5617016	UnaryOperator	&		5616943	0					
ANR	5617017	PtrMemberAccess	self -> ctmi		5616943	1					
ANR	5617018	Identifier	self		5616943	0					
ANR	5617019	Identifier	ctmi		5616943	1					
ANR	5617020	Argument	1		5616943	1					
ANR	5617021	PrimaryExpression	1		5616943	0					
ANR	5617022	ExpressionStatement	self -> g2o_fraction_bits -= 1	478:8:18109:18137	5616943	3	True				
ANR	5617023	AssignmentExpression	self -> g2o_fraction_bits -= 1		5616943	0		-=			
ANR	5617024	PtrMemberAccess	self -> g2o_fraction_bits		5616943	0					
ANR	5617025	Identifier	self		5616943	0					
ANR	5617026	Identifier	g2o_fraction_bits		5616943	1					
ANR	5617027	PrimaryExpression	1		5616943	1					
ANR	5617028	ExpressionStatement	self -> g2o_fraction >>= 1	479:8:18147:18171	5616943	4	True				
ANR	5617029	AssignmentExpression	self -> g2o_fraction >>= 1		5616943	0		>>=			
ANR	5617030	PtrMemberAccess	self -> g2o_fraction		5616943	0					
ANR	5617031	Identifier	self		5616943	0					
ANR	5617032	Identifier	g2o_fraction		5616943	1					
ANR	5617033	PrimaryExpression	1		5616943	1					
ANR	5617034	ExpressionStatement	t1_hinter__compute_rat_transform_coef ( self )	480:8:18181:18224	5616943	5	True				
ANR	5617035	CallExpression	t1_hinter__compute_rat_transform_coef ( self )		5616943	0					
ANR	5617036	Callee	t1_hinter__compute_rat_transform_coef		5616943	0					
ANR	5617037	Identifier	t1_hinter__compute_rat_transform_coef		5616943	0					
ANR	5617038	ArgumentList	self		5616943	1					
ANR	5617039	Argument	self		5616943	0					
ANR	5617040	Identifier	self		5616943	0					
ANR	5617041	IfStatement	if ( self -> ctmf . denominator == 0 )		5616943	3					
ANR	5617042	Condition	self -> ctmf . denominator == 0	482:8:18240:18266	5616943	0	True				
ANR	5617043	EqualityExpression	self -> ctmf . denominator == 0		5616943	0		==			
ANR	5617044	MemberAccess	self -> ctmf . denominator		5616943	0					
ANR	5617045	PtrMemberAccess	self -> ctmf		5616943	0					
ANR	5617046	Identifier	self		5616943	0					
ANR	5617047	Identifier	ctmf		5616943	1					
ANR	5617048	Identifier	denominator		5616943	1					
ANR	5617049	PrimaryExpression	0		5616943	1					
ANR	5617050	CompoundStatement		13:37:510:510	5616943	1					
ANR	5617051	ExpressionStatement	self -> ctmf . denominator = 1	484:8:18320:18346	5616943	0	True				
ANR	5617052	AssignmentExpression	self -> ctmf . denominator = 1		5616943	0		=			
ANR	5617053	MemberAccess	self -> ctmf . denominator		5616943	0					
ANR	5617054	PtrMemberAccess	self -> ctmf		5616943	0					
ANR	5617055	Identifier	self		5616943	0					
ANR	5617056	Identifier	ctmf		5616943	1					
ANR	5617057	Identifier	denominator		5616943	1					
ANR	5617058	PrimaryExpression	1		5616943	1					
ANR	5617059	ReturnType	static inline void		5616943	1					
ANR	5617060	Identifier	t1_hinter__adjust_matrix_precision		5616943	2					
ANR	5617061	ParameterList	"t1_hinter * self , fixed xx , fixed yy"		5616943	3					
ANR	5617062	Parameter	t1_hinter * self	469:54:17720:17735	5616943	0	True				
ANR	5617063	ParameterType	t1_hinter *		5616943	0					
ANR	5617064	Identifier	self		5616943	1					
ANR	5617065	Parameter	fixed xx	469:72:17738:17745	5616943	1	True				
ANR	5617066	ParameterType	fixed		5616943	0					
ANR	5617067	Identifier	xx		5616943	1					
ANR	5617068	Parameter	fixed yy	469:82:17748:17755	5616943	2	True				
ANR	5617069	ParameterType	fixed		5616943	0					
ANR	5617070	Identifier	yy		5616943	1					
ANR	5617071	CFGEntryNode	ENTRY		5616943		True				
ANR	5617072	CFGExitNode	EXIT		5616943		True				
ANR	5617073	Symbol	xx		5616943						
ANR	5617074	Symbol	yy		5616943						
ANR	5617075	Symbol	self -> g2o_fraction		5616943						
ANR	5617076	Symbol	c		5616943						
ANR	5617077	Symbol	* self		5616943						
ANR	5617078	Symbol	self -> ctmf		5616943						
ANR	5617079	Symbol	self -> g2o_fraction_bits		5616943						
ANR	5617080	Symbol	self -> max_import_coord		5616943						
ANR	5617081	Symbol	& self -> ctmf		5616943						
ANR	5617082	Symbol	& self -> ctmi		5616943						
ANR	5617083	Symbol	x		5616943						
ANR	5617084	Symbol	any_abs		5616943						
ANR	5617085	Symbol	self		5616943						
ANR	5617086	Symbol	y		5616943						
ANR	5617087	Symbol	self -> ctmf . denominator		5616943						
ANR	5617088	Function	t1_hinter__set_origin	488:0:18357:19498							
ANR	5617089	FunctionDef	"t1_hinter__set_origin (t1_hinter * self , fixed dx , fixed dy)"		5617088	0					
ANR	5617090	CompoundStatement		489:0:18436:19498	5617088	0					
ANR	5617091	IdentifierDeclStatement	"fixed align_x = rshift ( fixed_1 , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x ) ) ;"	490:4:18442:18550	5617088	0	True				
ANR	5617092	IdentifierDecl	"align_x = rshift ( fixed_1 , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x ) )"		5617088	0					
ANR	5617093	IdentifierDeclType	fixed		5617088	0					
ANR	5617094	Identifier	align_x		5617088	1					
ANR	5617095	AssignmentExpression	"align_x = rshift ( fixed_1 , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x ) )"		5617088	2		=			
ANR	5617096	Identifier	align_x		5617088	0					
ANR	5617097	CallExpression	"rshift ( fixed_1 , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x ) )"		5617088	1					
ANR	5617098	Callee	rshift		5617088	0					
ANR	5617099	Identifier	rshift		5617088	0					
ANR	5617100	ArgumentList	fixed_1		5617088	1					
ANR	5617101	Argument	fixed_1		5617088	0					
ANR	5617102	Identifier	fixed_1		5617088	0					
ANR	5617103	Argument	self -> align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x		5617088	1					
ANR	5617104	ConditionalExpression	self -> align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x		5617088	0					
ANR	5617105	Condition	self -> align_to_pixels		5617088	0					
ANR	5617106	PtrMemberAccess	self -> align_to_pixels		5617088	0					
ANR	5617107	Identifier	self		5617088	0					
ANR	5617108	Identifier	align_to_pixels		5617088	1					
ANR	5617109	CastExpression	( int ) self -> log2_pixels_x		5617088	1					
ANR	5617110	CastTarget	int		5617088	0					
ANR	5617111	PtrMemberAccess	self -> log2_pixels_x		5617088	1					
ANR	5617112	Identifier	self		5617088	0					
ANR	5617113	Identifier	log2_pixels_x		5617088	1					
ANR	5617114	PtrMemberAccess	self -> log2_subpixels_x		5617088	2					
ANR	5617115	Identifier	self		5617088	0					
ANR	5617116	Identifier	log2_subpixels_x		5617088	1					
ANR	5617117	IdentifierDeclStatement	"fixed align_y = rshift ( fixed_1 , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y ) ) ;"	491:4:18556:18664	5617088	1	True				
ANR	5617118	IdentifierDecl	"align_y = rshift ( fixed_1 , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y ) )"		5617088	0					
ANR	5617119	IdentifierDeclType	fixed		5617088	0					
ANR	5617120	Identifier	align_y		5617088	1					
ANR	5617121	AssignmentExpression	"align_y = rshift ( fixed_1 , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y ) )"		5617088	2		=			
ANR	5617122	Identifier	align_y		5617088	0					
ANR	5617123	CallExpression	"rshift ( fixed_1 , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y ) )"		5617088	1					
ANR	5617124	Callee	rshift		5617088	0					
ANR	5617125	Identifier	rshift		5617088	0					
ANR	5617126	ArgumentList	fixed_1		5617088	1					
ANR	5617127	Argument	fixed_1		5617088	0					
ANR	5617128	Identifier	fixed_1		5617088	0					
ANR	5617129	Argument	self -> align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y		5617088	1					
ANR	5617130	ConditionalExpression	self -> align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y		5617088	0					
ANR	5617131	Condition	self -> align_to_pixels		5617088	0					
ANR	5617132	PtrMemberAccess	self -> align_to_pixels		5617088	0					
ANR	5617133	Identifier	self		5617088	0					
ANR	5617134	Identifier	align_to_pixels		5617088	1					
ANR	5617135	CastExpression	( int ) self -> log2_pixels_y		5617088	1					
ANR	5617136	CastTarget	int		5617088	0					
ANR	5617137	PtrMemberAccess	self -> log2_pixels_y		5617088	1					
ANR	5617138	Identifier	self		5617088	0					
ANR	5617139	Identifier	log2_pixels_y		5617088	1					
ANR	5617140	PtrMemberAccess	self -> log2_subpixels_y		5617088	2					
ANR	5617141	Identifier	self		5617088	0					
ANR	5617142	Identifier	log2_subpixels_y		5617088	1					
ANR	5617143	ExpressionStatement	self -> orig_dx = ( dx + align_x / 2 ) & ~ ( align_x - 1 )	493:4:18671:18722	5617088	2	True				
ANR	5617144	AssignmentExpression	self -> orig_dx = ( dx + align_x / 2 ) & ~ ( align_x - 1 )		5617088	0		=			
ANR	5617145	PtrMemberAccess	self -> orig_dx		5617088	0					
ANR	5617146	Identifier	self		5617088	0					
ANR	5617147	Identifier	orig_dx		5617088	1					
ANR	5617148	BitAndExpression	( dx + align_x / 2 ) & ~ ( align_x - 1 )		5617088	1		&			
ANR	5617149	AdditiveExpression	dx + align_x / 2		5617088	0		+			
ANR	5617150	Identifier	dx		5617088	0					
ANR	5617151	MultiplicativeExpression	align_x / 2		5617088	1		/			
ANR	5617152	Identifier	align_x		5617088	0					
ANR	5617153	PrimaryExpression	2		5617088	1					
ANR	5617154	UnaryOperationExpression	~ ( align_x - 1 )		5617088	1					
ANR	5617155	UnaryOperator	~		5617088	0					
ANR	5617156	AdditiveExpression	align_x - 1		5617088	1		-			
ANR	5617157	Identifier	align_x		5617088	0					
ANR	5617158	PrimaryExpression	1		5617088	1					
ANR	5617159	ExpressionStatement	self -> orig_dy = ( dy + align_y / 2 ) & ~ ( align_y - 1 )	494:4:18728:18779	5617088	3	True				
ANR	5617160	AssignmentExpression	self -> orig_dy = ( dy + align_y / 2 ) & ~ ( align_y - 1 )		5617088	0		=			
ANR	5617161	PtrMemberAccess	self -> orig_dy		5617088	0					
ANR	5617162	Identifier	self		5617088	0					
ANR	5617163	Identifier	orig_dy		5617088	1					
ANR	5617164	BitAndExpression	( dy + align_y / 2 ) & ~ ( align_y - 1 )		5617088	1		&			
ANR	5617165	AdditiveExpression	dy + align_y / 2		5617088	0		+			
ANR	5617166	Identifier	dy		5617088	0					
ANR	5617167	MultiplicativeExpression	align_y / 2		5617088	1		/			
ANR	5617168	Identifier	align_y		5617088	0					
ANR	5617169	PrimaryExpression	2		5617088	1					
ANR	5617170	UnaryOperationExpression	~ ( align_y - 1 )		5617088	1					
ANR	5617171	UnaryOperator	~		5617088	0					
ANR	5617172	AdditiveExpression	align_y - 1		5617088	1		-			
ANR	5617173	Identifier	align_y		5617088	0					
ANR	5617174	PrimaryExpression	1		5617088	1					
ANR	5617175	ExpressionStatement	"t1_hinter__adjust_matrix_precision ( self , self -> orig_dx , self -> orig_dy )"	495:4:18785:18855	5617088	4	True				
ANR	5617176	CallExpression	"t1_hinter__adjust_matrix_precision ( self , self -> orig_dx , self -> orig_dy )"		5617088	0					
ANR	5617177	Callee	t1_hinter__adjust_matrix_precision		5617088	0					
ANR	5617178	Identifier	t1_hinter__adjust_matrix_precision		5617088	0					
ANR	5617179	ArgumentList	self		5617088	1					
ANR	5617180	Argument	self		5617088	0					
ANR	5617181	Identifier	self		5617088	0					
ANR	5617182	Argument	self -> orig_dx		5617088	1					
ANR	5617183	PtrMemberAccess	self -> orig_dx		5617088	0					
ANR	5617184	Identifier	self		5617088	0					
ANR	5617185	Identifier	orig_dx		5617088	1					
ANR	5617186	Argument	self -> orig_dy		5617088	2					
ANR	5617187	PtrMemberAccess	self -> orig_dy		5617088	0					
ANR	5617188	Identifier	self		5617088	0					
ANR	5617189	Identifier	orig_dy		5617088	1					
ANR	5617190	ExpressionStatement	"self -> orig_ox = d2o ( self , self -> orig_dx )"	496:4:18861:18901	5617088	5	True				
ANR	5617191	AssignmentExpression	"self -> orig_ox = d2o ( self , self -> orig_dx )"		5617088	0		=			
ANR	5617192	PtrMemberAccess	self -> orig_ox		5617088	0					
ANR	5617193	Identifier	self		5617088	0					
ANR	5617194	Identifier	orig_ox		5617088	1					
ANR	5617195	CallExpression	"d2o ( self , self -> orig_dx )"		5617088	1					
ANR	5617196	Callee	d2o		5617088	0					
ANR	5617197	Identifier	d2o		5617088	0					
ANR	5617198	ArgumentList	self		5617088	1					
ANR	5617199	Argument	self		5617088	0					
ANR	5617200	Identifier	self		5617088	0					
ANR	5617201	Argument	self -> orig_dx		5617088	1					
ANR	5617202	PtrMemberAccess	self -> orig_dx		5617088	0					
ANR	5617203	Identifier	self		5617088	0					
ANR	5617204	Identifier	orig_dx		5617088	1					
ANR	5617205	ExpressionStatement	"self -> orig_oy = d2o ( self , self -> orig_dy )"	497:4:18907:18947	5617088	6	True				
ANR	5617206	AssignmentExpression	"self -> orig_oy = d2o ( self , self -> orig_dy )"		5617088	0		=			
ANR	5617207	PtrMemberAccess	self -> orig_oy		5617088	0					
ANR	5617208	Identifier	self		5617088	0					
ANR	5617209	Identifier	orig_oy		5617088	1					
ANR	5617210	CallExpression	"d2o ( self , self -> orig_dy )"		5617088	1					
ANR	5617211	Callee	d2o		5617088	0					
ANR	5617212	Identifier	d2o		5617088	0					
ANR	5617213	ArgumentList	self		5617088	1					
ANR	5617214	Argument	self		5617088	0					
ANR	5617215	Identifier	self		5617088	0					
ANR	5617216	Argument	self -> orig_dy		5617088	1					
ANR	5617217	PtrMemberAccess	self -> orig_dy		5617088	0					
ANR	5617218	Identifier	self		5617088	0					
ANR	5617219	Identifier	orig_dy		5617088	1					
ANR	5617220	Statement	if	498:4:18953:18954	5617088	7	True				
ANR	5617221	Statement	ADOBE_SHIFT_CHARPATH	498:7:18956:18975	5617088	8	True				
ANR	5617222	IfStatement	if ( self -> charpath_flag )		5617088	9					
ANR	5617223	Condition	self -> charpath_flag	503:12:19119:19137	5617088	0	True				
ANR	5617224	PtrMemberAccess	self -> charpath_flag		5617088	0					
ANR	5617225	Identifier	self		5617088	0					
ANR	5617226	Identifier	charpath_flag		5617088	1					
ANR	5617227	CompoundStatement		15:33:703:703	5617088	1					
ANR	5617228	ExpressionStatement	self -> orig_dx += fixed_half	504:12:19154:19181	5617088	0	True				
ANR	5617229	AssignmentExpression	self -> orig_dx += fixed_half		5617088	0		+=			
ANR	5617230	PtrMemberAccess	self -> orig_dx		5617088	0					
ANR	5617231	Identifier	self		5617088	0					
ANR	5617232	Identifier	orig_dx		5617088	1					
ANR	5617233	Identifier	fixed_half		5617088	1					
ANR	5617234	ExpressionStatement	self -> orig_dx &= ~ ( fixed_1 - 1 )	505:12:19195:19226	5617088	1	True				
ANR	5617235	AssignmentExpression	self -> orig_dx &= ~ ( fixed_1 - 1 )		5617088	0		&=			
ANR	5617236	PtrMemberAccess	self -> orig_dx		5617088	0					
ANR	5617237	Identifier	self		5617088	0					
ANR	5617238	Identifier	orig_dx		5617088	1					
ANR	5617239	UnaryOperationExpression	~ ( fixed_1 - 1 )		5617088	1					
ANR	5617240	UnaryOperator	~		5617088	0					
ANR	5617241	AdditiveExpression	fixed_1 - 1		5617088	1		-			
ANR	5617242	Identifier	fixed_1		5617088	0					
ANR	5617243	PrimaryExpression	1		5617088	1					
ANR	5617244	ExpressionStatement	self -> orig_dy &= ~ ( fixed_1 - 1 )	506:12:19240:19271	5617088	2	True				
ANR	5617245	AssignmentExpression	self -> orig_dy &= ~ ( fixed_1 - 1 )		5617088	0		&=			
ANR	5617246	PtrMemberAccess	self -> orig_dy		5617088	0					
ANR	5617247	Identifier	self		5617088	0					
ANR	5617248	Identifier	orig_dy		5617088	1					
ANR	5617249	UnaryOperationExpression	~ ( fixed_1 - 1 )		5617088	1					
ANR	5617250	UnaryOperator	~		5617088	0					
ANR	5617251	AdditiveExpression	fixed_1 - 1		5617088	1		-			
ANR	5617252	Identifier	fixed_1		5617088	0					
ANR	5617253	PrimaryExpression	1		5617088	1					
ANR	5617254	ExpressionStatement	self -> orig_dy += fixed_half	507:12:19285:19312	5617088	3	True				
ANR	5617255	AssignmentExpression	self -> orig_dy += fixed_half		5617088	0		+=			
ANR	5617256	PtrMemberAccess	self -> orig_dy		5617088	0					
ANR	5617257	Identifier	self		5617088	0					
ANR	5617258	Identifier	orig_dy		5617088	1					
ANR	5617259	Identifier	fixed_half		5617088	1					
ANR	5617260	ElseStatement	else		5617088	0					
ANR	5617261	CompoundStatement		20:15:892:892	5617088	0					
ANR	5617262	ExpressionStatement	self -> orig_dy += fixed_1	509:12:19343:19367	5617088	0	True				
ANR	5617263	AssignmentExpression	self -> orig_dy += fixed_1		5617088	0		+=			
ANR	5617264	PtrMemberAccess	self -> orig_dy		5617088	0					
ANR	5617265	Identifier	self		5617088	0					
ANR	5617266	Identifier	orig_dy		5617088	1					
ANR	5617267	Identifier	fixed_1		5617088	1					
ANR	5617268	Statement	endif	513:4:19492:19496	5617088	10	True				
ANR	5617269	ReturnType	static inline void		5617088	1					
ANR	5617270	Identifier	t1_hinter__set_origin		5617088	2					
ANR	5617271	ParameterList	"t1_hinter * self , fixed dx , fixed dy"		5617088	3					
ANR	5617272	Parameter	t1_hinter * self	488:41:18398:18413	5617088	0	True				
ANR	5617273	ParameterType	t1_hinter *		5617088	0					
ANR	5617274	Identifier	self		5617088	1					
ANR	5617275	Parameter	fixed dx	488:59:18416:18423	5617088	1	True				
ANR	5617276	ParameterType	fixed		5617088	0					
ANR	5617277	Identifier	dx		5617088	1					
ANR	5617278	Parameter	fixed dy	488:69:18426:18433	5617088	2	True				
ANR	5617279	ParameterType	fixed		5617088	0					
ANR	5617280	Identifier	dy		5617088	1					
ANR	5617281	CFGEntryNode	ENTRY		5617088		True				
ANR	5617282	CFGExitNode	EXIT		5617088		True				
ANR	5617283	Symbol	align_y		5617088						
ANR	5617284	Symbol	d2o		5617088						
ANR	5617285	Symbol	align_x		5617088						
ANR	5617286	Symbol	* self		5617088						
ANR	5617287	Symbol	self -> orig_oy		5617088						
ANR	5617288	Symbol	self -> orig_ox		5617088						
ANR	5617289	Symbol	self -> log2_pixels_x		5617088						
ANR	5617290	Symbol	self -> log2_pixels_y		5617088						
ANR	5617291	Symbol	self -> charpath_flag		5617088						
ANR	5617292	Symbol	self -> orig_dy		5617088						
ANR	5617293	Symbol	dx		5617088						
ANR	5617294	Symbol	fixed_1		5617088						
ANR	5617295	Symbol	self -> log2_subpixels_y		5617088						
ANR	5617296	Symbol	dy		5617088						
ANR	5617297	Symbol	self -> log2_subpixels_x		5617088						
ANR	5617298	Symbol	self		5617088						
ANR	5617299	Symbol	fixed_half		5617088						
ANR	5617300	Symbol	self -> orig_dx		5617088						
ANR	5617301	Symbol	rshift		5617088						
ANR	5617302	Symbol	self -> align_to_pixels		5617088						
ANR	5617303	Function	t1_hinter__set_mapping	516:0:19501:24953							
ANR	5617304	FunctionDef	"t1_hinter__set_mapping (t1_hinter * self , gs_matrix_fixed * ctm , gs_matrix * FontMatrix , gs_matrix * baseFontMatrix , int log2_pixels_x , int log2_pixels_y , int log2_subpixels_x , int log2_subpixels_y , fixed origin_x , fixed origin_y , bool align_to_pixels)"		5617303	0					
ANR	5617305	CompoundStatement		521:0:19837:24953	5617303	0					
ANR	5617306	IdentifierDeclStatement	"float axx = fabs ( ctm -> xx ) , axy = fabs ( ctm -> xy ) ;"	521:3:19841:19887	5617303	0	True				
ANR	5617307	IdentifierDecl	axx = fabs ( ctm -> xx )		5617303	0					
ANR	5617308	IdentifierDeclType	float		5617303	0					
ANR	5617309	Identifier	axx		5617303	1					
ANR	5617310	AssignmentExpression	axx = fabs ( ctm -> xx )		5617303	2		=			
ANR	5617311	Identifier	axx		5617303	0					
ANR	5617312	CallExpression	fabs ( ctm -> xx )		5617303	1					
ANR	5617313	Callee	fabs		5617303	0					
ANR	5617314	Identifier	fabs		5617303	0					
ANR	5617315	ArgumentList	ctm -> xx		5617303	1					
ANR	5617316	Argument	ctm -> xx		5617303	0					
ANR	5617317	PtrMemberAccess	ctm -> xx		5617303	0					
ANR	5617318	Identifier	ctm		5617303	0					
ANR	5617319	Identifier	xx		5617303	1					
ANR	5617320	IdentifierDecl	axy = fabs ( ctm -> xy )		5617303	1					
ANR	5617321	IdentifierDeclType	float		5617303	0					
ANR	5617322	Identifier	axy		5617303	1					
ANR	5617323	AssignmentExpression	axy = fabs ( ctm -> xy )		5617303	2		=			
ANR	5617324	Identifier	axy		5617303	0					
ANR	5617325	CallExpression	fabs ( ctm -> xy )		5617303	1					
ANR	5617326	Callee	fabs		5617303	0					
ANR	5617327	Identifier	fabs		5617303	0					
ANR	5617328	ArgumentList	ctm -> xy		5617303	1					
ANR	5617329	Argument	ctm -> xy		5617303	0					
ANR	5617330	PtrMemberAccess	ctm -> xy		5617303	0					
ANR	5617331	Identifier	ctm		5617303	0					
ANR	5617332	Identifier	xy		5617303	1					
ANR	5617333	IdentifierDeclStatement	"float ayx = fabs ( ctm -> xx ) , ayy = fabs ( ctm -> xy ) ;"	522:4:19893:19939	5617303	1	True				
ANR	5617334	IdentifierDecl	ayx = fabs ( ctm -> xx )		5617303	0					
ANR	5617335	IdentifierDeclType	float		5617303	0					
ANR	5617336	Identifier	ayx		5617303	1					
ANR	5617337	AssignmentExpression	ayx = fabs ( ctm -> xx )		5617303	2		=			
ANR	5617338	Identifier	ayx		5617303	0					
ANR	5617339	CallExpression	fabs ( ctm -> xx )		5617303	1					
ANR	5617340	Callee	fabs		5617303	0					
ANR	5617341	Identifier	fabs		5617303	0					
ANR	5617342	ArgumentList	ctm -> xx		5617303	1					
ANR	5617343	Argument	ctm -> xx		5617303	0					
ANR	5617344	PtrMemberAccess	ctm -> xx		5617303	0					
ANR	5617345	Identifier	ctm		5617303	0					
ANR	5617346	Identifier	xx		5617303	1					
ANR	5617347	IdentifierDecl	ayy = fabs ( ctm -> xy )		5617303	1					
ANR	5617348	IdentifierDeclType	float		5617303	0					
ANR	5617349	Identifier	ayy		5617303	1					
ANR	5617350	AssignmentExpression	ayy = fabs ( ctm -> xy )		5617303	2		=			
ANR	5617351	Identifier	ayy		5617303	0					
ANR	5617352	CallExpression	fabs ( ctm -> xy )		5617303	1					
ANR	5617353	Callee	fabs		5617303	0					
ANR	5617354	Identifier	fabs		5617303	0					
ANR	5617355	ArgumentList	ctm -> xy		5617303	1					
ANR	5617356	Argument	ctm -> xy		5617303	0					
ANR	5617357	PtrMemberAccess	ctm -> xy		5617303	0					
ANR	5617358	Identifier	ctm		5617303	0					
ANR	5617359	Identifier	xy		5617303	1					
ANR	5617360	IdentifierDeclStatement	"float scale = max ( axx + axy , ayx + ayy ) ;"	523:4:19945:19984	5617303	2	True				
ANR	5617361	IdentifierDecl	"scale = max ( axx + axy , ayx + ayy )"		5617303	0					
ANR	5617362	IdentifierDeclType	float		5617303	0					
ANR	5617363	Identifier	scale		5617303	1					
ANR	5617364	AssignmentExpression	"scale = max ( axx + axy , ayx + ayy )"		5617303	2		=			
ANR	5617365	Identifier	scale		5617303	0					
ANR	5617366	CallExpression	"max ( axx + axy , ayx + ayy )"		5617303	1					
ANR	5617367	Callee	max		5617303	0					
ANR	5617368	Identifier	max		5617303	0					
ANR	5617369	ArgumentList	axx + axy		5617303	1					
ANR	5617370	Argument	axx + axy		5617303	0					
ANR	5617371	AdditiveExpression	axx + axy		5617303	0		+			
ANR	5617372	Identifier	axx		5617303	0					
ANR	5617373	Identifier	axy		5617303	1					
ANR	5617374	Argument	ayx + ayy		5617303	1					
ANR	5617375	AdditiveExpression	ayx + ayy		5617303	0		+			
ANR	5617376	Identifier	ayx		5617303	0					
ANR	5617377	Identifier	ayy		5617303	1					
ANR	5617378	IdentifierDeclStatement	double_matrix CTM ;	524:4:19990:20007	5617303	3	True				
ANR	5617379	IdentifierDecl	CTM		5617303	0					
ANR	5617380	IdentifierDeclType	double_matrix		5617303	0					
ANR	5617381	Identifier	CTM		5617303	1					
ANR	5617382	IdentifierDeclStatement	int code ;	525:4:20013:20021	5617303	4	True				
ANR	5617383	IdentifierDecl	code		5617303	0					
ANR	5617384	IdentifierDeclType	int		5617303	0					
ANR	5617385	Identifier	code		5617303	1					
ANR	5617386	ExpressionStatement	self -> disable_hinting |= ( scale < 1 / 1024. || scale > 4 )	527:4:20028:20083	5617303	5	True				
ANR	5617387	AssignmentExpression	self -> disable_hinting |= ( scale < 1 / 1024. || scale > 4 )		5617303	0		|=			
ANR	5617388	PtrMemberAccess	self -> disable_hinting		5617303	0					
ANR	5617389	Identifier	self		5617303	0					
ANR	5617390	Identifier	disable_hinting		5617303	1					
ANR	5617391	OrExpression	scale < 1 / 1024. || scale > 4		5617303	1		||			
ANR	5617392	RelationalExpression	scale < 1 / 1024.		5617303	0		<			
ANR	5617393	Identifier	scale		5617303	0					
ANR	5617394	MultiplicativeExpression	1 / 1024.		5617303	1		/			
ANR	5617395	PrimaryExpression	1		5617303	0					
ANR	5617396	PrimaryExpression	1024.		5617303	1					
ANR	5617397	RelationalExpression	scale > 4		5617303	1		>			
ANR	5617398	Identifier	scale		5617303	0					
ANR	5617399	PrimaryExpression	4		5617303	1					
ANR	5617400	ExpressionStatement	self -> pass_through |= self -> disable_hinting	528:4:20089:20132	5617303	6	True				
ANR	5617401	AssignmentExpression	self -> pass_through |= self -> disable_hinting		5617303	0		|=			
ANR	5617402	PtrMemberAccess	self -> pass_through		5617303	0					
ANR	5617403	Identifier	self		5617303	0					
ANR	5617404	Identifier	pass_through		5617303	1					
ANR	5617405	PtrMemberAccess	self -> disable_hinting		5617303	1					
ANR	5617406	Identifier	self		5617303	0					
ANR	5617407	Identifier	disable_hinting		5617303	1					
ANR	5617408	ExpressionStatement	self -> log2_pixels_x = log2_pixels_x	529:4:20138:20173	5617303	7	True				
ANR	5617409	AssignmentExpression	self -> log2_pixels_x = log2_pixels_x		5617303	0		=			
ANR	5617410	PtrMemberAccess	self -> log2_pixels_x		5617303	0					
ANR	5617411	Identifier	self		5617303	0					
ANR	5617412	Identifier	log2_pixels_x		5617303	1					
ANR	5617413	Identifier	log2_pixels_x		5617303	1					
ANR	5617414	ExpressionStatement	self -> log2_pixels_y = log2_pixels_y	530:4:20179:20214	5617303	8	True				
ANR	5617415	AssignmentExpression	self -> log2_pixels_y = log2_pixels_y		5617303	0		=			
ANR	5617416	PtrMemberAccess	self -> log2_pixels_y		5617303	0					
ANR	5617417	Identifier	self		5617303	0					
ANR	5617418	Identifier	log2_pixels_y		5617303	1					
ANR	5617419	Identifier	log2_pixels_y		5617303	1					
ANR	5617420	ExpressionStatement	self -> log2_subpixels_x = log2_subpixels_x	531:4:20220:20261	5617303	9	True				
ANR	5617421	AssignmentExpression	self -> log2_subpixels_x = log2_subpixels_x		5617303	0		=			
ANR	5617422	PtrMemberAccess	self -> log2_subpixels_x		5617303	0					
ANR	5617423	Identifier	self		5617303	0					
ANR	5617424	Identifier	log2_subpixels_x		5617303	1					
ANR	5617425	Identifier	log2_subpixels_x		5617303	1					
ANR	5617426	ExpressionStatement	self -> log2_subpixels_y = log2_subpixels_y	532:4:20267:20308	5617303	10	True				
ANR	5617427	AssignmentExpression	self -> log2_subpixels_y = log2_subpixels_y		5617303	0		=			
ANR	5617428	PtrMemberAccess	self -> log2_subpixels_y		5617303	0					
ANR	5617429	Identifier	self		5617303	0					
ANR	5617430	Identifier	log2_subpixels_y		5617303	1					
ANR	5617431	Identifier	log2_subpixels_y		5617303	1					
ANR	5617432	ExpressionStatement	"double_matrix__set ( & CTM , ctm )"	533:4:20314:20343	5617303	11	True				
ANR	5617433	CallExpression	"double_matrix__set ( & CTM , ctm )"		5617303	0					
ANR	5617434	Callee	double_matrix__set		5617303	0					
ANR	5617435	Identifier	double_matrix__set		5617303	0					
ANR	5617436	ArgumentList	& CTM		5617303	1					
ANR	5617437	Argument	& CTM		5617303	0					
ANR	5617438	UnaryOperationExpression	& CTM		5617303	0					
ANR	5617439	UnaryOperator	&		5617303	0					
ANR	5617440	Identifier	CTM		5617303	1					
ANR	5617441	Argument	ctm		5617303	1					
ANR	5617442	Identifier	ctm		5617303	0					
ANR	5617443	ExpressionStatement	"fraction_matrix__set ( & self -> ctmf , & CTM )"	534:4:20349:20388	5617303	12	True				
ANR	5617444	CallExpression	"fraction_matrix__set ( & self -> ctmf , & CTM )"		5617303	0					
ANR	5617445	Callee	fraction_matrix__set		5617303	0					
ANR	5617446	Identifier	fraction_matrix__set		5617303	0					
ANR	5617447	ArgumentList	& self -> ctmf		5617303	1					
ANR	5617448	Argument	& self -> ctmf		5617303	0					
ANR	5617449	UnaryOperationExpression	& self -> ctmf		5617303	0					
ANR	5617450	UnaryOperator	&		5617303	0					
ANR	5617451	PtrMemberAccess	self -> ctmf		5617303	1					
ANR	5617452	Identifier	self		5617303	0					
ANR	5617453	Identifier	ctmf		5617303	1					
ANR	5617454	Argument	& CTM		5617303	1					
ANR	5617455	UnaryOperationExpression	& CTM		5617303	0					
ANR	5617456	UnaryOperator	&		5617303	0					
ANR	5617457	Identifier	CTM		5617303	1					
ANR	5617458	ExpressionStatement	self -> g2o_fraction_bits = self -> ctmf . bitshift - g2o_bitshift + _fixed_shift	535:4:20394:20469	5617303	13	True				
ANR	5617459	AssignmentExpression	self -> g2o_fraction_bits = self -> ctmf . bitshift - g2o_bitshift + _fixed_shift		5617303	0		=			
ANR	5617460	PtrMemberAccess	self -> g2o_fraction_bits		5617303	0					
ANR	5617461	Identifier	self		5617303	0					
ANR	5617462	Identifier	g2o_fraction_bits		5617303	1					
ANR	5617463	AdditiveExpression	self -> ctmf . bitshift - g2o_bitshift + _fixed_shift		5617303	1		-			
ANR	5617464	MemberAccess	self -> ctmf . bitshift		5617303	0					
ANR	5617465	PtrMemberAccess	self -> ctmf		5617303	0					
ANR	5617466	Identifier	self		5617303	0					
ANR	5617467	Identifier	ctmf		5617303	1					
ANR	5617468	Identifier	bitshift		5617303	1					
ANR	5617469	AdditiveExpression	g2o_bitshift + _fixed_shift		5617303	1		+			
ANR	5617470	Identifier	g2o_bitshift		5617303	0					
ANR	5617471	Identifier	_fixed_shift		5617303	1					
ANR	5617472	IfStatement	if ( self -> g2o_fraction_bits > max_coord_bits )		5617303	14					
ANR	5617473	Condition	self -> g2o_fraction_bits > max_coord_bits	536:8:20479:20518	5617303	0	True				
ANR	5617474	RelationalExpression	self -> g2o_fraction_bits > max_coord_bits		5617303	0		>			
ANR	5617475	PtrMemberAccess	self -> g2o_fraction_bits		5617303	0					
ANR	5617476	Identifier	self		5617303	0					
ANR	5617477	Identifier	g2o_fraction_bits		5617303	1					
ANR	5617478	Identifier	max_coord_bits		5617303	1					
ANR	5617479	CompoundStatement		16:50:683:683	5617303	1					
ANR	5617480	ExpressionStatement	"fraction_matrix__drop_bits ( & self -> ctmf , self -> g2o_fraction_bits - max_coord_bits )"	537:8:20531:20612	5617303	0	True				
ANR	5617481	CallExpression	"fraction_matrix__drop_bits ( & self -> ctmf , self -> g2o_fraction_bits - max_coord_bits )"		5617303	0					
ANR	5617482	Callee	fraction_matrix__drop_bits		5617303	0					
ANR	5617483	Identifier	fraction_matrix__drop_bits		5617303	0					
ANR	5617484	ArgumentList	& self -> ctmf		5617303	1					
ANR	5617485	Argument	& self -> ctmf		5617303	0					
ANR	5617486	UnaryOperationExpression	& self -> ctmf		5617303	0					
ANR	5617487	UnaryOperator	&		5617303	0					
ANR	5617488	PtrMemberAccess	self -> ctmf		5617303	1					
ANR	5617489	Identifier	self		5617303	0					
ANR	5617490	Identifier	ctmf		5617303	1					
ANR	5617491	Argument	self -> g2o_fraction_bits - max_coord_bits		5617303	1					
ANR	5617492	AdditiveExpression	self -> g2o_fraction_bits - max_coord_bits		5617303	0		-			
ANR	5617493	PtrMemberAccess	self -> g2o_fraction_bits		5617303	0					
ANR	5617494	Identifier	self		5617303	0					
ANR	5617495	Identifier	g2o_fraction_bits		5617303	1					
ANR	5617496	Identifier	max_coord_bits		5617303	1					
ANR	5617497	ExpressionStatement	self -> g2o_fraction_bits = max_coord_bits	538:8:20622:20662	5617303	1	True				
ANR	5617498	AssignmentExpression	self -> g2o_fraction_bits = max_coord_bits		5617303	0		=			
ANR	5617499	PtrMemberAccess	self -> g2o_fraction_bits		5617303	0					
ANR	5617500	Identifier	self		5617303	0					
ANR	5617501	Identifier	g2o_fraction_bits		5617303	1					
ANR	5617502	Identifier	max_coord_bits		5617303	1					
ANR	5617503	IfStatement	if ( self -> ctmf . denominator != 0 )		5617303	15					
ANR	5617504	Condition	self -> ctmf . denominator != 0	540:8:20678:20704	5617303	0	True				
ANR	5617505	EqualityExpression	self -> ctmf . denominator != 0		5617303	0		!=			
ANR	5617506	MemberAccess	self -> ctmf . denominator		5617303	0					
ANR	5617507	PtrMemberAccess	self -> ctmf		5617303	0					
ANR	5617508	Identifier	self		5617303	0					
ANR	5617509	Identifier	ctmf		5617303	1					
ANR	5617510	Identifier	denominator		5617303	1					
ANR	5617511	PrimaryExpression	0		5617303	1					
ANR	5617512	CompoundStatement		20:37:869:869	5617303	1					
ANR	5617513	ExpressionStatement	"code = fraction_matrix__invert_to ( & self -> ctmf , & self -> ctmi )"	541:8:20717:20776	5617303	0	True				
ANR	5617514	AssignmentExpression	"code = fraction_matrix__invert_to ( & self -> ctmf , & self -> ctmi )"		5617303	0		=			
ANR	5617515	Identifier	code		5617303	0					
ANR	5617516	CallExpression	"fraction_matrix__invert_to ( & self -> ctmf , & self -> ctmi )"		5617303	1					
ANR	5617517	Callee	fraction_matrix__invert_to		5617303	0					
ANR	5617518	Identifier	fraction_matrix__invert_to		5617303	0					
ANR	5617519	ArgumentList	& self -> ctmf		5617303	1					
ANR	5617520	Argument	& self -> ctmf		5617303	0					
ANR	5617521	UnaryOperationExpression	& self -> ctmf		5617303	0					
ANR	5617522	UnaryOperator	&		5617303	0					
ANR	5617523	PtrMemberAccess	self -> ctmf		5617303	1					
ANR	5617524	Identifier	self		5617303	0					
ANR	5617525	Identifier	ctmf		5617303	1					
ANR	5617526	Argument	& self -> ctmi		5617303	1					
ANR	5617527	UnaryOperationExpression	& self -> ctmi		5617303	0					
ANR	5617528	UnaryOperator	&		5617303	0					
ANR	5617529	PtrMemberAccess	self -> ctmi		5617303	1					
ANR	5617530	Identifier	self		5617303	0					
ANR	5617531	Identifier	ctmi		5617303	1					
ANR	5617532	IfStatement	if ( code == gs_error_rangecheck )		5617303	1					
ANR	5617533	Condition	code == gs_error_rangecheck	542:12:20838:20864	5617303	0	True				
ANR	5617534	EqualityExpression	code == gs_error_rangecheck		5617303	0		==			
ANR	5617535	Identifier	code		5617303	0					
ANR	5617536	Identifier	gs_error_rangecheck		5617303	1					
ANR	5617537	ExpressionStatement	self -> ctmf . denominator = 0	543:12:20879:20905	5617303	1	True				
ANR	5617538	AssignmentExpression	self -> ctmf . denominator = 0		5617303	0		=			
ANR	5617539	MemberAccess	self -> ctmf . denominator		5617303	0					
ANR	5617540	PtrMemberAccess	self -> ctmf		5617303	0					
ANR	5617541	Identifier	self		5617303	0					
ANR	5617542	Identifier	ctmf		5617303	1					
ANR	5617543	Identifier	denominator		5617303	1					
ANR	5617544	PrimaryExpression	0		5617303	1					
ANR	5617545	ElseStatement	else		5617303	0					
ANR	5617546	IfStatement	if ( code < 0 )		5617303	0					
ANR	5617547	Condition	code < 0	544:17:20924:20931	5617303	0	True				
ANR	5617548	RelationalExpression	code < 0		5617303	0		<			
ANR	5617549	Identifier	code		5617303	0					
ANR	5617550	PrimaryExpression	0		5617303	1					
ANR	5617551	ReturnStatement	return code ;	545:12:20946:20957	5617303	1	True				
ANR	5617552	Identifier	code		5617303	0					
ANR	5617553	IfStatement	if ( self -> ctmf . denominator != 0 )		5617303	16					
ANR	5617554	Condition	self -> ctmf . denominator != 0	547:8:20973:20999	5617303	0	True				
ANR	5617555	EqualityExpression	self -> ctmf . denominator != 0		5617303	0		!=			
ANR	5617556	MemberAccess	self -> ctmf . denominator		5617303	0					
ANR	5617557	PtrMemberAccess	self -> ctmf		5617303	0					
ANR	5617558	Identifier	self		5617303	0					
ANR	5617559	Identifier	ctmf		5617303	1					
ANR	5617560	Identifier	denominator		5617303	1					
ANR	5617561	PrimaryExpression	0		5617303	1					
ANR	5617562	CompoundStatement		27:37:1164:1164	5617303	1					
ANR	5617563	ExpressionStatement	self -> g2o_fraction = 1 << self -> g2o_fraction_bits	548:8:21012:21061	5617303	0	True				
ANR	5617564	AssignmentExpression	self -> g2o_fraction = 1 << self -> g2o_fraction_bits		5617303	0		=			
ANR	5617565	PtrMemberAccess	self -> g2o_fraction		5617303	0					
ANR	5617566	Identifier	self		5617303	0					
ANR	5617567	Identifier	g2o_fraction		5617303	1					
ANR	5617568	ShiftExpression	1 << self -> g2o_fraction_bits		5617303	1		<<			
ANR	5617569	PrimaryExpression	1		5617303	0					
ANR	5617570	PtrMemberAccess	self -> g2o_fraction_bits		5617303	1					
ANR	5617571	Identifier	self		5617303	0					
ANR	5617572	Identifier	g2o_fraction_bits		5617303	1					
ANR	5617573	IfStatement	if ( self -> g2o_fraction == 0 )		5617303	1					
ANR	5617574	Condition	self -> g2o_fraction == 0	551:12:21218:21240	5617303	0	True				
ANR	5617575	EqualityExpression	self -> g2o_fraction == 0		5617303	0		==			
ANR	5617576	PtrMemberAccess	self -> g2o_fraction		5617303	0					
ANR	5617577	Identifier	self		5617303	0					
ANR	5617578	Identifier	g2o_fraction		5617303	1					
ANR	5617579	PrimaryExpression	0		5617303	1					
ANR	5617580	ExpressionStatement	return_error ( gs_error_limitcheck )	552:12:21255:21288	5617303	1	True				
ANR	5617581	CallExpression	return_error ( gs_error_limitcheck )		5617303	0					
ANR	5617582	Callee	return_error		5617303	0					
ANR	5617583	Identifier	return_error		5617303	0					
ANR	5617584	ArgumentList	gs_error_limitcheck		5617303	1					
ANR	5617585	Argument	gs_error_limitcheck		5617303	0					
ANR	5617586	Identifier	gs_error_limitcheck		5617303	0					
ANR	5617587	IfStatement	if ( self -> ctmf . denominator == 0 || self -> ctmi . denominator == 0 )		5617303	17					
ANR	5617588	Condition	self -> ctmf . denominator == 0 || self -> ctmi . denominator == 0	554:8:21304:21361	5617303	0	True				
ANR	5617589	OrExpression	self -> ctmf . denominator == 0 || self -> ctmi . denominator == 0		5617303	0		||			
ANR	5617590	EqualityExpression	self -> ctmf . denominator == 0		5617303	0		==			
ANR	5617591	MemberAccess	self -> ctmf . denominator		5617303	0					
ANR	5617592	PtrMemberAccess	self -> ctmf		5617303	0					
ANR	5617593	Identifier	self		5617303	0					
ANR	5617594	Identifier	ctmf		5617303	1					
ANR	5617595	Identifier	denominator		5617303	1					
ANR	5617596	PrimaryExpression	0		5617303	1					
ANR	5617597	EqualityExpression	self -> ctmi . denominator == 0		5617303	1		==			
ANR	5617598	MemberAccess	self -> ctmi . denominator		5617303	0					
ANR	5617599	PtrMemberAccess	self -> ctmi		5617303	0					
ANR	5617600	Identifier	self		5617303	0					
ANR	5617601	Identifier	ctmi		5617303	1					
ANR	5617602	Identifier	denominator		5617303	1					
ANR	5617603	PrimaryExpression	0		5617303	1					
ANR	5617604	CompoundStatement		34:68:1526:1526	5617303	1					
ANR	5617605	ExpressionStatement	self -> disable_hinting = true	556:8:21415:21443	5617303	0	True				
ANR	5617606	AssignmentExpression	self -> disable_hinting = true		5617303	0		=			
ANR	5617607	PtrMemberAccess	self -> disable_hinting		5617303	0					
ANR	5617608	Identifier	self		5617303	0					
ANR	5617609	Identifier	disable_hinting		5617303	1					
ANR	5617610	Identifier	true		5617303	1					
ANR	5617611	ExpressionStatement	self -> pass_through = true	557:8:21453:21478	5617303	1	True				
ANR	5617612	AssignmentExpression	self -> pass_through = true		5617303	0		=			
ANR	5617613	PtrMemberAccess	self -> pass_through		5617303	0					
ANR	5617614	Identifier	self		5617303	0					
ANR	5617615	Identifier	pass_through		5617303	1					
ANR	5617616	Identifier	true		5617303	1					
ANR	5617617	ExpressionStatement	self -> ctmf . denominator = 1	558:8:21488:21514	5617303	2	True				
ANR	5617618	AssignmentExpression	self -> ctmf . denominator = 1		5617303	0		=			
ANR	5617619	MemberAccess	self -> ctmf . denominator		5617303	0					
ANR	5617620	PtrMemberAccess	self -> ctmf		5617303	0					
ANR	5617621	Identifier	self		5617303	0					
ANR	5617622	Identifier	ctmf		5617303	1					
ANR	5617623	Identifier	denominator		5617303	1					
ANR	5617624	PrimaryExpression	1		5617303	1					
ANR	5617625	ExpressionStatement	self -> transposed = ( any_abs ( self -> ctmf . xy ) * 10 > any_abs ( self -> ctmf . xx ) )	560:4:21526:21599	5617303	18	True				
ANR	5617626	AssignmentExpression	self -> transposed = ( any_abs ( self -> ctmf . xy ) * 10 > any_abs ( self -> ctmf . xx ) )		5617303	0		=			
ANR	5617627	PtrMemberAccess	self -> transposed		5617303	0					
ANR	5617628	Identifier	self		5617303	0					
ANR	5617629	Identifier	transposed		5617303	1					
ANR	5617630	RelationalExpression	any_abs ( self -> ctmf . xy ) * 10 > any_abs ( self -> ctmf . xx )		5617303	1		>			
ANR	5617631	MultiplicativeExpression	any_abs ( self -> ctmf . xy ) * 10		5617303	0		*			
ANR	5617632	CallExpression	any_abs ( self -> ctmf . xy )		5617303	0					
ANR	5617633	Callee	any_abs		5617303	0					
ANR	5617634	Identifier	any_abs		5617303	0					
ANR	5617635	ArgumentList	self -> ctmf . xy		5617303	1					
ANR	5617636	Argument	self -> ctmf . xy		5617303	0					
ANR	5617637	MemberAccess	self -> ctmf . xy		5617303	0					
ANR	5617638	PtrMemberAccess	self -> ctmf		5617303	0					
ANR	5617639	Identifier	self		5617303	0					
ANR	5617640	Identifier	ctmf		5617303	1					
ANR	5617641	Identifier	xy		5617303	1					
ANR	5617642	PrimaryExpression	10		5617303	1					
ANR	5617643	CallExpression	any_abs ( self -> ctmf . xx )		5617303	1					
ANR	5617644	Callee	any_abs		5617303	0					
ANR	5617645	Identifier	any_abs		5617303	0					
ANR	5617646	ArgumentList	self -> ctmf . xx		5617303	1					
ANR	5617647	Argument	self -> ctmf . xx		5617303	0					
ANR	5617648	MemberAccess	self -> ctmf . xx		5617303	0					
ANR	5617649	PtrMemberAccess	self -> ctmf		5617303	0					
ANR	5617650	Identifier	self		5617303	0					
ANR	5617651	Identifier	ctmf		5617303	1					
ANR	5617652	Identifier	xx		5617303	1					
ANR	5617653	CompoundStatement		46:8:1984:2011	5617303	19					
ANR	5617654	IdentifierDeclStatement	double_matrix m ;	565:8:21797:21812	5617303	0	True				
ANR	5617655	IdentifierDecl	m		5617303	0					
ANR	5617656	IdentifierDeclType	double_matrix		5617303	0					
ANR	5617657	Identifier	m		5617303	1					
ANR	5617658	IdentifierDeclStatement	"double vp , sp , div_x , div_y ;"	566:8:21822:21849	5617303	1	True				
ANR	5617659	IdentifierDecl	vp		5617303	0					
ANR	5617660	IdentifierDeclType	double		5617303	0					
ANR	5617661	Identifier	vp		5617303	1					
ANR	5617662	IdentifierDecl	sp		5617303	1					
ANR	5617663	IdentifierDeclType	double		5617303	0					
ANR	5617664	Identifier	sp		5617303	1					
ANR	5617665	IdentifierDecl	div_x		5617303	2					
ANR	5617666	IdentifierDeclType	double		5617303	0					
ANR	5617667	Identifier	div_x		5617303	1					
ANR	5617668	IdentifierDecl	div_y		5617303	3					
ANR	5617669	IdentifierDeclType	double		5617303	0					
ANR	5617670	Identifier	div_y		5617303	1					
ANR	5617671	ExpressionStatement	"code = fraction_matrix__to_double ( & self -> ctmf , & m )"	568:8:21860:21910	5617303	2	True				
ANR	5617672	AssignmentExpression	"code = fraction_matrix__to_double ( & self -> ctmf , & m )"		5617303	0		=			
ANR	5617673	Identifier	code		5617303	0					
ANR	5617674	CallExpression	"fraction_matrix__to_double ( & self -> ctmf , & m )"		5617303	1					
ANR	5617675	Callee	fraction_matrix__to_double		5617303	0					
ANR	5617676	Identifier	fraction_matrix__to_double		5617303	0					
ANR	5617677	ArgumentList	& self -> ctmf		5617303	1					
ANR	5617678	Argument	& self -> ctmf		5617303	0					
ANR	5617679	UnaryOperationExpression	& self -> ctmf		5617303	0					
ANR	5617680	UnaryOperator	&		5617303	0					
ANR	5617681	PtrMemberAccess	self -> ctmf		5617303	1					
ANR	5617682	Identifier	self		5617303	0					
ANR	5617683	Identifier	ctmf		5617303	1					
ANR	5617684	Argument	& m		5617303	1					
ANR	5617685	UnaryOperationExpression	& m		5617303	0					
ANR	5617686	UnaryOperator	&		5617303	0					
ANR	5617687	Identifier	m		5617303	1					
ANR	5617688	IfStatement	if ( code < 0 )		5617303	3					
ANR	5617689	Condition	code < 0	569:12:21924:21931	5617303	0	True				
ANR	5617690	RelationalExpression	code < 0		5617303	0		<			
ANR	5617691	Identifier	code		5617303	0					
ANR	5617692	PrimaryExpression	0		5617303	1					
ANR	5617693	ReturnStatement	return code ;	570:12:21946:21957	5617303	1	True				
ANR	5617694	Identifier	code		5617303	0					
ANR	5617695	ExpressionStatement	vp = any_abs ( m . xx * m . yy - m . yx * m . xy )	571:8:21967:22006	5617303	4	True				
ANR	5617696	AssignmentExpression	vp = any_abs ( m . xx * m . yy - m . yx * m . xy )		5617303	0		=			
ANR	5617697	Identifier	vp		5617303	0					
ANR	5617698	CallExpression	any_abs ( m . xx * m . yy - m . yx * m . xy )		5617303	1					
ANR	5617699	Callee	any_abs		5617303	0					
ANR	5617700	Identifier	any_abs		5617303	0					
ANR	5617701	ArgumentList	m . xx * m . yy - m . yx * m . xy		5617303	1					
ANR	5617702	Argument	m . xx * m . yy - m . yx * m . xy		5617303	0					
ANR	5617703	AdditiveExpression	m . xx * m . yy - m . yx * m . xy		5617303	0		-			
ANR	5617704	MultiplicativeExpression	m . xx * m . yy		5617303	0		*			
ANR	5617705	MemberAccess	m . xx		5617303	0					
ANR	5617706	Identifier	m		5617303	0					
ANR	5617707	Identifier	xx		5617303	1					
ANR	5617708	MemberAccess	m . yy		5617303	1					
ANR	5617709	Identifier	m		5617303	0					
ANR	5617710	Identifier	yy		5617303	1					
ANR	5617711	MultiplicativeExpression	m . yx * m . xy		5617303	1		*			
ANR	5617712	MemberAccess	m . yx		5617303	0					
ANR	5617713	Identifier	m		5617303	0					
ANR	5617714	Identifier	yx		5617303	1					
ANR	5617715	MemberAccess	m . xy		5617303	1					
ANR	5617716	Identifier	m		5617303	0					
ANR	5617717	Identifier	xy		5617303	1					
ANR	5617718	ExpressionStatement	sp = any_abs ( m . xx * m . yx + m . xy * m . yy )	572:8:22016:22055	5617303	5	True				
ANR	5617719	AssignmentExpression	sp = any_abs ( m . xx * m . yx + m . xy * m . yy )		5617303	0		=			
ANR	5617720	Identifier	sp		5617303	0					
ANR	5617721	CallExpression	any_abs ( m . xx * m . yx + m . xy * m . yy )		5617303	1					
ANR	5617722	Callee	any_abs		5617303	0					
ANR	5617723	Identifier	any_abs		5617303	0					
ANR	5617724	ArgumentList	m . xx * m . yx + m . xy * m . yy		5617303	1					
ANR	5617725	Argument	m . xx * m . yx + m . xy * m . yy		5617303	0					
ANR	5617726	AdditiveExpression	m . xx * m . yx + m . xy * m . yy		5617303	0		+			
ANR	5617727	MultiplicativeExpression	m . xx * m . yx		5617303	0		*			
ANR	5617728	MemberAccess	m . xx		5617303	0					
ANR	5617729	Identifier	m		5617303	0					
ANR	5617730	Identifier	xx		5617303	1					
ANR	5617731	MemberAccess	m . yx		5617303	1					
ANR	5617732	Identifier	m		5617303	0					
ANR	5617733	Identifier	yx		5617303	1					
ANR	5617734	MultiplicativeExpression	m . xy * m . yy		5617303	1		*			
ANR	5617735	MemberAccess	m . xy		5617303	0					
ANR	5617736	Identifier	m		5617303	0					
ANR	5617737	Identifier	xy		5617303	1					
ANR	5617738	MemberAccess	m . yy		5617303	1					
ANR	5617739	Identifier	m		5617303	0					
ANR	5617740	Identifier	yy		5617303	1					
ANR	5617741	ExpressionStatement	"div_x = hypot ( m . xx , m . yx )"	573:8:22065:22090	5617303	6	True				
ANR	5617742	AssignmentExpression	"div_x = hypot ( m . xx , m . yx )"		5617303	0		=			
ANR	5617743	Identifier	div_x		5617303	0					
ANR	5617744	CallExpression	"hypot ( m . xx , m . yx )"		5617303	1					
ANR	5617745	Callee	hypot		5617303	0					
ANR	5617746	Identifier	hypot		5617303	0					
ANR	5617747	ArgumentList	m . xx		5617303	1					
ANR	5617748	Argument	m . xx		5617303	0					
ANR	5617749	MemberAccess	m . xx		5617303	0					
ANR	5617750	Identifier	m		5617303	0					
ANR	5617751	Identifier	xx		5617303	1					
ANR	5617752	Argument	m . yx		5617303	1					
ANR	5617753	MemberAccess	m . yx		5617303	0					
ANR	5617754	Identifier	m		5617303	0					
ANR	5617755	Identifier	yx		5617303	1					
ANR	5617756	ExpressionStatement	"div_y = hypot ( m . xy , m . yy )"	574:8:22100:22125	5617303	7	True				
ANR	5617757	AssignmentExpression	"div_y = hypot ( m . xy , m . yy )"		5617303	0		=			
ANR	5617758	Identifier	div_y		5617303	0					
ANR	5617759	CallExpression	"hypot ( m . xy , m . yy )"		5617303	1					
ANR	5617760	Callee	hypot		5617303	0					
ANR	5617761	Identifier	hypot		5617303	0					
ANR	5617762	ArgumentList	m . xy		5617303	1					
ANR	5617763	Argument	m . xy		5617303	0					
ANR	5617764	MemberAccess	m . xy		5617303	0					
ANR	5617765	Identifier	m		5617303	0					
ANR	5617766	Identifier	xy		5617303	1					
ANR	5617767	Argument	m . yy		5617303	1					
ANR	5617768	MemberAccess	m . yy		5617303	0					
ANR	5617769	Identifier	m		5617303	0					
ANR	5617770	Identifier	yy		5617303	1					
ANR	5617771	IfStatement	if ( vp != 0 && div_x != 0 && div_y != 0 )		5617303	8					
ANR	5617772	Condition	vp != 0 && div_x != 0 && div_y != 0	575:12:22139:22173	5617303	0	True				
ANR	5617773	AndExpression	vp != 0 && div_x != 0 && div_y != 0		5617303	0		&&			
ANR	5617774	EqualityExpression	vp != 0		5617303	0		!=			
ANR	5617775	Identifier	vp		5617303	0					
ANR	5617776	PrimaryExpression	0		5617303	1					
ANR	5617777	AndExpression	div_x != 0 && div_y != 0		5617303	1		&&			
ANR	5617778	EqualityExpression	div_x != 0		5617303	0		!=			
ANR	5617779	Identifier	div_x		5617303	0					
ANR	5617780	PrimaryExpression	0		5617303	1					
ANR	5617781	EqualityExpression	div_y != 0		5617303	1		!=			
ANR	5617782	Identifier	div_y		5617303	0					
ANR	5617783	PrimaryExpression	0		5617303	1					
ANR	5617784	CompoundStatement		55:49:2338:2338	5617303	1					
ANR	5617785	IfStatement	if ( ! self -> transposed )		5617303	0					
ANR	5617786	Condition	! self -> transposed	576:16:22194:22210	5617303	0	True				
ANR	5617787	UnaryOperationExpression	! self -> transposed		5617303	0					
ANR	5617788	UnaryOperator	!		5617303	0					
ANR	5617789	PtrMemberAccess	self -> transposed		5617303	1					
ANR	5617790	Identifier	self		5617303	0					
ANR	5617791	Identifier	transposed		5617303	1					
ANR	5617792	CompoundStatement		56:35:2375:2375	5617303	1					
ANR	5617793	ExpressionStatement	self -> heigt_transform_coef = vp / div_x	577:16:22231:22270	5617303	0	True				
ANR	5617794	AssignmentExpression	self -> heigt_transform_coef = vp / div_x		5617303	0		=			
ANR	5617795	PtrMemberAccess	self -> heigt_transform_coef		5617303	0					
ANR	5617796	Identifier	self		5617303	0					
ANR	5617797	Identifier	heigt_transform_coef		5617303	1					
ANR	5617798	MultiplicativeExpression	vp / div_x		5617303	1		/			
ANR	5617799	Identifier	vp		5617303	0					
ANR	5617800	Identifier	div_x		5617303	1					
ANR	5617801	ExpressionStatement	self -> width_transform_coef = vp / div_y	578:16:22288:22327	5617303	1	True				
ANR	5617802	AssignmentExpression	self -> width_transform_coef = vp / div_y		5617303	0		=			
ANR	5617803	PtrMemberAccess	self -> width_transform_coef		5617303	0					
ANR	5617804	Identifier	self		5617303	0					
ANR	5617805	Identifier	width_transform_coef		5617303	1					
ANR	5617806	MultiplicativeExpression	vp / div_y		5617303	1		/			
ANR	5617807	Identifier	vp		5617303	0					
ANR	5617808	Identifier	div_y		5617303	1					
ANR	5617809	ElseStatement	else		5617303	0					
ANR	5617810	CompoundStatement		59:19:2510:2510	5617303	0					
ANR	5617811	ExpressionStatement	self -> heigt_transform_coef = vp / div_y	580:16:22366:22405	5617303	0	True				
ANR	5617812	AssignmentExpression	self -> heigt_transform_coef = vp / div_y		5617303	0		=			
ANR	5617813	PtrMemberAccess	self -> heigt_transform_coef		5617303	0					
ANR	5617814	Identifier	self		5617303	0					
ANR	5617815	Identifier	heigt_transform_coef		5617303	1					
ANR	5617816	MultiplicativeExpression	vp / div_y		5617303	1		/			
ANR	5617817	Identifier	vp		5617303	0					
ANR	5617818	Identifier	div_y		5617303	1					
ANR	5617819	ExpressionStatement	self -> width_transform_coef = vp / div_x	581:16:22423:22462	5617303	1	True				
ANR	5617820	AssignmentExpression	self -> width_transform_coef = vp / div_x		5617303	0		=			
ANR	5617821	PtrMemberAccess	self -> width_transform_coef		5617303	0					
ANR	5617822	Identifier	self		5617303	0					
ANR	5617823	Identifier	width_transform_coef		5617303	1					
ANR	5617824	MultiplicativeExpression	vp / div_x		5617303	1		/			
ANR	5617825	Identifier	vp		5617303	0					
ANR	5617826	Identifier	div_x		5617303	1					
ANR	5617827	ExpressionStatement	t1_hinter__compute_rat_transform_coef ( self )	583:12:22490:22533	5617303	1	True				
ANR	5617828	CallExpression	t1_hinter__compute_rat_transform_coef ( self )		5617303	0					
ANR	5617829	Callee	t1_hinter__compute_rat_transform_coef		5617303	0					
ANR	5617830	Identifier	t1_hinter__compute_rat_transform_coef		5617303	0					
ANR	5617831	ArgumentList	self		5617303	1					
ANR	5617832	Argument	self		5617303	0					
ANR	5617833	Identifier	self		5617303	0					
ANR	5617834	ExpressionStatement	self -> keep_stem_width = ( sp <= vp / 3 )	584:12:22547:22585	5617303	2	True				
ANR	5617835	AssignmentExpression	self -> keep_stem_width = ( sp <= vp / 3 )		5617303	0		=			
ANR	5617836	PtrMemberAccess	self -> keep_stem_width		5617303	0					
ANR	5617837	Identifier	self		5617303	0					
ANR	5617838	Identifier	keep_stem_width		5617303	1					
ANR	5617839	RelationalExpression	sp <= vp / 3		5617303	1		<=			
ANR	5617840	Identifier	sp		5617303	0					
ANR	5617841	MultiplicativeExpression	vp / 3		5617303	1		/			
ANR	5617842	Identifier	vp		5617303	0					
ANR	5617843	PrimaryExpression	3		5617303	1					
ANR	5617844	CompoundStatement		69:8:2868:2885	5617303	20					
ANR	5617845	IdentifierDeclStatement	"gs_point p0 , p1 , p2 ;"	588:8:22677:22696	5617303	0	True				
ANR	5617846	IdentifierDecl	p0		5617303	0					
ANR	5617847	IdentifierDeclType	gs_point		5617303	0					
ANR	5617848	Identifier	p0		5617303	1					
ANR	5617849	IdentifierDecl	p1		5617303	1					
ANR	5617850	IdentifierDeclType	gs_point		5617303	0					
ANR	5617851	Identifier	p1		5617303	1					
ANR	5617852	IdentifierDecl	p2		5617303	2					
ANR	5617853	IdentifierDeclType	gs_point		5617303	0					
ANR	5617854	Identifier	p2		5617303	1					
ANR	5617855	IdentifierDeclStatement	"double d0 , d1 , d2 ;"	589:8:22706:22723	5617303	1	True				
ANR	5617856	IdentifierDecl	d0		5617303	0					
ANR	5617857	IdentifierDeclType	double		5617303	0					
ANR	5617858	Identifier	d0		5617303	1					
ANR	5617859	IdentifierDecl	d1		5617303	1					
ANR	5617860	IdentifierDeclType	double		5617303	0					
ANR	5617861	Identifier	d1		5617303	1					
ANR	5617862	IdentifierDecl	d2		5617303	2					
ANR	5617863	IdentifierDeclType	double		5617303	0					
ANR	5617864	Identifier	d2		5617303	1					
ANR	5617865	ExpressionStatement	"gs_distance_transform ( 0 , 1 , baseFontMatrix , & p0 )"	591:8:22734:22782	5617303	2	True				
ANR	5617866	CallExpression	"gs_distance_transform ( 0 , 1 , baseFontMatrix , & p0 )"		5617303	0					
ANR	5617867	Callee	gs_distance_transform		5617303	0					
ANR	5617868	Identifier	gs_distance_transform		5617303	0					
ANR	5617869	ArgumentList	0		5617303	1					
ANR	5617870	Argument	0		5617303	0					
ANR	5617871	PrimaryExpression	0		5617303	0					
ANR	5617872	Argument	1		5617303	1					
ANR	5617873	PrimaryExpression	1		5617303	0					
ANR	5617874	Argument	baseFontMatrix		5617303	2					
ANR	5617875	Identifier	baseFontMatrix		5617303	0					
ANR	5617876	Argument	& p0		5617303	3					
ANR	5617877	UnaryOperationExpression	& p0		5617303	0					
ANR	5617878	UnaryOperator	&		5617303	0					
ANR	5617879	Identifier	p0		5617303	1					
ANR	5617880	ExpressionStatement	"gs_distance_transform ( 0 , 1 , FontMatrix , & p1 )"	592:8:22792:22836	5617303	3	True				
ANR	5617881	CallExpression	"gs_distance_transform ( 0 , 1 , FontMatrix , & p1 )"		5617303	0					
ANR	5617882	Callee	gs_distance_transform		5617303	0					
ANR	5617883	Identifier	gs_distance_transform		5617303	0					
ANR	5617884	ArgumentList	0		5617303	1					
ANR	5617885	Argument	0		5617303	0					
ANR	5617886	PrimaryExpression	0		5617303	0					
ANR	5617887	Argument	1		5617303	1					
ANR	5617888	PrimaryExpression	1		5617303	0					
ANR	5617889	Argument	FontMatrix		5617303	2					
ANR	5617890	Identifier	FontMatrix		5617303	0					
ANR	5617891	Argument	& p1		5617303	3					
ANR	5617892	UnaryOperationExpression	& p1		5617303	0					
ANR	5617893	UnaryOperator	&		5617303	0					
ANR	5617894	Identifier	p1		5617303	1					
ANR	5617895	ExpressionStatement	"gs_distance_transform ( 0 , 1 , ( gs_matrix * ) ctm , & p2 )"	593:8:22846:22896	5617303	4	True				
ANR	5617896	CallExpression	"gs_distance_transform ( 0 , 1 , ( gs_matrix * ) ctm , & p2 )"		5617303	0					
ANR	5617897	Callee	gs_distance_transform		5617303	0					
ANR	5617898	Identifier	gs_distance_transform		5617303	0					
ANR	5617899	ArgumentList	0		5617303	1					
ANR	5617900	Argument	0		5617303	0					
ANR	5617901	PrimaryExpression	0		5617303	0					
ANR	5617902	Argument	1		5617303	1					
ANR	5617903	PrimaryExpression	1		5617303	0					
ANR	5617904	Argument	( gs_matrix * ) ctm		5617303	2					
ANR	5617905	CastExpression	( gs_matrix * ) ctm		5617303	0					
ANR	5617906	CastTarget	gs_matrix *		5617303	0					
ANR	5617907	Identifier	ctm		5617303	1					
ANR	5617908	Argument	& p2		5617303	3					
ANR	5617909	UnaryOperationExpression	& p2		5617303	0					
ANR	5617910	UnaryOperator	&		5617303	0					
ANR	5617911	Identifier	p2		5617303	1					
ANR	5617912	ExpressionStatement	"d0 = hypot ( p0 . x , p0 . y )"	594:8:22906:22928	5617303	5	True				
ANR	5617913	AssignmentExpression	"d0 = hypot ( p0 . x , p0 . y )"		5617303	0		=			
ANR	5617914	Identifier	d0		5617303	0					
ANR	5617915	CallExpression	"hypot ( p0 . x , p0 . y )"		5617303	1					
ANR	5617916	Callee	hypot		5617303	0					
ANR	5617917	Identifier	hypot		5617303	0					
ANR	5617918	ArgumentList	p0 . x		5617303	1					
ANR	5617919	Argument	p0 . x		5617303	0					
ANR	5617920	MemberAccess	p0 . x		5617303	0					
ANR	5617921	Identifier	p0		5617303	0					
ANR	5617922	Identifier	x		5617303	1					
ANR	5617923	Argument	p0 . y		5617303	1					
ANR	5617924	MemberAccess	p0 . y		5617303	0					
ANR	5617925	Identifier	p0		5617303	0					
ANR	5617926	Identifier	y		5617303	1					
ANR	5617927	ExpressionStatement	"d1 = hypot ( p1 . x , p1 . y )"	595:8:22938:22960	5617303	6	True				
ANR	5617928	AssignmentExpression	"d1 = hypot ( p1 . x , p1 . y )"		5617303	0		=			
ANR	5617929	Identifier	d1		5617303	0					
ANR	5617930	CallExpression	"hypot ( p1 . x , p1 . y )"		5617303	1					
ANR	5617931	Callee	hypot		5617303	0					
ANR	5617932	Identifier	hypot		5617303	0					
ANR	5617933	ArgumentList	p1 . x		5617303	1					
ANR	5617934	Argument	p1 . x		5617303	0					
ANR	5617935	MemberAccess	p1 . x		5617303	0					
ANR	5617936	Identifier	p1		5617303	0					
ANR	5617937	Identifier	x		5617303	1					
ANR	5617938	Argument	p1 . y		5617303	1					
ANR	5617939	MemberAccess	p1 . y		5617303	0					
ANR	5617940	Identifier	p1		5617303	0					
ANR	5617941	Identifier	y		5617303	1					
ANR	5617942	ExpressionStatement	"d2 = hypot ( p2 . x , p2 . y )"	596:8:22970:22992	5617303	7	True				
ANR	5617943	AssignmentExpression	"d2 = hypot ( p2 . x , p2 . y )"		5617303	0		=			
ANR	5617944	Identifier	d2		5617303	0					
ANR	5617945	CallExpression	"hypot ( p2 . x , p2 . y )"		5617303	1					
ANR	5617946	Callee	hypot		5617303	0					
ANR	5617947	Identifier	hypot		5617303	0					
ANR	5617948	ArgumentList	p2 . x		5617303	1					
ANR	5617949	Argument	p2 . x		5617303	0					
ANR	5617950	MemberAccess	p2 . x		5617303	0					
ANR	5617951	Identifier	p2		5617303	0					
ANR	5617952	Identifier	x		5617303	1					
ANR	5617953	Argument	p2 . y		5617303	1					
ANR	5617954	MemberAccess	p2 . y		5617303	0					
ANR	5617955	Identifier	p2		5617303	0					
ANR	5617956	Identifier	y		5617303	1					
ANR	5617957	ExpressionStatement	self -> base_font_scale = d0	597:8:23002:23028	5617303	8	True				
ANR	5617958	AssignmentExpression	self -> base_font_scale = d0		5617303	0		=			
ANR	5617959	PtrMemberAccess	self -> base_font_scale		5617303	0					
ANR	5617960	Identifier	self		5617303	0					
ANR	5617961	Identifier	base_font_scale		5617303	1					
ANR	5617962	Identifier	d0		5617303	1					
ANR	5617963	ExpressionStatement	self -> font_size = floor ( d1 / d0 * 10000 + 0.5 ) / 10000	598:8:23038:23093	5617303	9	True				
ANR	5617964	AssignmentExpression	self -> font_size = floor ( d1 / d0 * 10000 + 0.5 ) / 10000		5617303	0		=			
ANR	5617965	PtrMemberAccess	self -> font_size		5617303	0					
ANR	5617966	Identifier	self		5617303	0					
ANR	5617967	Identifier	font_size		5617303	1					
ANR	5617968	MultiplicativeExpression	floor ( d1 / d0 * 10000 + 0.5 ) / 10000		5617303	1		/			
ANR	5617969	CallExpression	floor ( d1 / d0 * 10000 + 0.5 )		5617303	0					
ANR	5617970	Callee	floor		5617303	0					
ANR	5617971	Identifier	floor		5617303	0					
ANR	5617972	ArgumentList	d1 / d0 * 10000 + 0.5		5617303	1					
ANR	5617973	Argument	d1 / d0 * 10000 + 0.5		5617303	0					
ANR	5617974	AdditiveExpression	d1 / d0 * 10000 + 0.5		5617303	0		+			
ANR	5617975	MultiplicativeExpression	d1 / d0 * 10000		5617303	0		/			
ANR	5617976	Identifier	d1		5617303	0					
ANR	5617977	MultiplicativeExpression	d0 * 10000		5617303	1		*			
ANR	5617978	Identifier	d0		5617303	0					
ANR	5617979	PrimaryExpression	10000		5617303	1					
ANR	5617980	PrimaryExpression	0.5		5617303	1					
ANR	5617981	PrimaryExpression	10000		5617303	1					
ANR	5617982	ExpressionStatement	self -> resolution = floor ( d2 / d1 * 10000000 + 0.5 ) / 10000000	599:8:23103:23164	5617303	10	True				
ANR	5617983	AssignmentExpression	self -> resolution = floor ( d2 / d1 * 10000000 + 0.5 ) / 10000000		5617303	0		=			
ANR	5617984	PtrMemberAccess	self -> resolution		5617303	0					
ANR	5617985	Identifier	self		5617303	0					
ANR	5617986	Identifier	resolution		5617303	1					
ANR	5617987	MultiplicativeExpression	floor ( d2 / d1 * 10000000 + 0.5 ) / 10000000		5617303	1		/			
ANR	5617988	CallExpression	floor ( d2 / d1 * 10000000 + 0.5 )		5617303	0					
ANR	5617989	Callee	floor		5617303	0					
ANR	5617990	Identifier	floor		5617303	0					
ANR	5617991	ArgumentList	d2 / d1 * 10000000 + 0.5		5617303	1					
ANR	5617992	Argument	d2 / d1 * 10000000 + 0.5		5617303	0					
ANR	5617993	AdditiveExpression	d2 / d1 * 10000000 + 0.5		5617303	0		+			
ANR	5617994	MultiplicativeExpression	d2 / d1 * 10000000		5617303	0		/			
ANR	5617995	Identifier	d2		5617303	0					
ANR	5617996	MultiplicativeExpression	d1 * 10000000		5617303	1		*			
ANR	5617997	Identifier	d1		5617303	0					
ANR	5617998	PrimaryExpression	10000000		5617303	1					
ANR	5617999	PrimaryExpression	0.5		5617303	1					
ANR	5618000	PrimaryExpression	10000000		5617303	1					
ANR	5618001	IfStatement	if ( 1 || self -> resolution * self -> font_size >= 2 )		5617303	21					
ANR	5618002	Condition	1 || self -> resolution * self -> font_size >= 2	614:8:23770:23865	5617303	0	True				
ANR	5618003	OrExpression	1 || self -> resolution * self -> font_size >= 2		5617303	0		||			
ANR	5618004	PrimaryExpression	1		5617303	0					
ANR	5618005	RelationalExpression	self -> resolution * self -> font_size >= 2		5617303	1		>=			
ANR	5618006	MultiplicativeExpression	self -> resolution * self -> font_size		5617303	0		*			
ANR	5618007	PtrMemberAccess	self -> resolution		5617303	0					
ANR	5618008	Identifier	self		5617303	0					
ANR	5618009	Identifier	resolution		5617303	1					
ANR	5618010	PtrMemberAccess	self -> font_size		5617303	1					
ANR	5618011	Identifier	self		5617303	0					
ANR	5618012	Identifier	font_size		5617303	1					
ANR	5618013	PrimaryExpression	2		5617303	1					
ANR	5618014	CompoundStatement		95:53:4030:4030	5617303	1					
ANR	5618015	ExpressionStatement	self -> grid_fit_y = ( any_abs ( self -> ctmf . xy ) * 10 < any_abs ( self -> ctmf . xx ) || any_abs ( self -> ctmf . xx ) * 10 < any_abs ( self -> ctmf . xy ) )	617:8:23938:24095	5617303	0	True				
ANR	5618016	AssignmentExpression	self -> grid_fit_y = ( any_abs ( self -> ctmf . xy ) * 10 < any_abs ( self -> ctmf . xx ) || any_abs ( self -> ctmf . xx ) * 10 < any_abs ( self -> ctmf . xy ) )		5617303	0		=			
ANR	5618017	PtrMemberAccess	self -> grid_fit_y		5617303	0					
ANR	5618018	Identifier	self		5617303	0					
ANR	5618019	Identifier	grid_fit_y		5617303	1					
ANR	5618020	OrExpression	any_abs ( self -> ctmf . xy ) * 10 < any_abs ( self -> ctmf . xx ) || any_abs ( self -> ctmf . xx ) * 10 < any_abs ( self -> ctmf . xy )		5617303	1		||			
ANR	5618021	RelationalExpression	any_abs ( self -> ctmf . xy ) * 10 < any_abs ( self -> ctmf . xx )		5617303	0		<			
ANR	5618022	MultiplicativeExpression	any_abs ( self -> ctmf . xy ) * 10		5617303	0		*			
ANR	5618023	CallExpression	any_abs ( self -> ctmf . xy )		5617303	0					
ANR	5618024	Callee	any_abs		5617303	0					
ANR	5618025	Identifier	any_abs		5617303	0					
ANR	5618026	ArgumentList	self -> ctmf . xy		5617303	1					
ANR	5618027	Argument	self -> ctmf . xy		5617303	0					
ANR	5618028	MemberAccess	self -> ctmf . xy		5617303	0					
ANR	5618029	PtrMemberAccess	self -> ctmf		5617303	0					
ANR	5618030	Identifier	self		5617303	0					
ANR	5618031	Identifier	ctmf		5617303	1					
ANR	5618032	Identifier	xy		5617303	1					
ANR	5618033	PrimaryExpression	10		5617303	1					
ANR	5618034	CallExpression	any_abs ( self -> ctmf . xx )		5617303	1					
ANR	5618035	Callee	any_abs		5617303	0					
ANR	5618036	Identifier	any_abs		5617303	0					
ANR	5618037	ArgumentList	self -> ctmf . xx		5617303	1					
ANR	5618038	Argument	self -> ctmf . xx		5617303	0					
ANR	5618039	MemberAccess	self -> ctmf . xx		5617303	0					
ANR	5618040	PtrMemberAccess	self -> ctmf		5617303	0					
ANR	5618041	Identifier	self		5617303	0					
ANR	5618042	Identifier	ctmf		5617303	1					
ANR	5618043	Identifier	xx		5617303	1					
ANR	5618044	RelationalExpression	any_abs ( self -> ctmf . xx ) * 10 < any_abs ( self -> ctmf . xy )		5617303	1		<			
ANR	5618045	MultiplicativeExpression	any_abs ( self -> ctmf . xx ) * 10		5617303	0		*			
ANR	5618046	CallExpression	any_abs ( self -> ctmf . xx )		5617303	0					
ANR	5618047	Callee	any_abs		5617303	0					
ANR	5618048	Identifier	any_abs		5617303	0					
ANR	5618049	ArgumentList	self -> ctmf . xx		5617303	1					
ANR	5618050	Argument	self -> ctmf . xx		5617303	0					
ANR	5618051	MemberAccess	self -> ctmf . xx		5617303	0					
ANR	5618052	PtrMemberAccess	self -> ctmf		5617303	0					
ANR	5618053	Identifier	self		5617303	0					
ANR	5618054	Identifier	ctmf		5617303	1					
ANR	5618055	Identifier	xx		5617303	1					
ANR	5618056	PrimaryExpression	10		5617303	1					
ANR	5618057	CallExpression	any_abs ( self -> ctmf . xy )		5617303	1					
ANR	5618058	Callee	any_abs		5617303	0					
ANR	5618059	Identifier	any_abs		5617303	0					
ANR	5618060	ArgumentList	self -> ctmf . xy		5617303	1					
ANR	5618061	Argument	self -> ctmf . xy		5617303	0					
ANR	5618062	MemberAccess	self -> ctmf . xy		5617303	0					
ANR	5618063	PtrMemberAccess	self -> ctmf		5617303	0					
ANR	5618064	Identifier	self		5617303	0					
ANR	5618065	Identifier	ctmf		5617303	1					
ANR	5618066	Identifier	xy		5617303	1					
ANR	5618067	ExpressionStatement	self -> grid_fit_x = ( any_abs ( self -> ctmf . yx ) * 10 < any_abs ( self -> ctmf . yy ) || any_abs ( self -> ctmf . yy ) * 10 < any_abs ( self -> ctmf . yx ) )	619:8:24105:24262	5617303	1	True				
ANR	5618068	AssignmentExpression	self -> grid_fit_x = ( any_abs ( self -> ctmf . yx ) * 10 < any_abs ( self -> ctmf . yy ) || any_abs ( self -> ctmf . yy ) * 10 < any_abs ( self -> ctmf . yx ) )		5617303	0		=			
ANR	5618069	PtrMemberAccess	self -> grid_fit_x		5617303	0					
ANR	5618070	Identifier	self		5617303	0					
ANR	5618071	Identifier	grid_fit_x		5617303	1					
ANR	5618072	OrExpression	any_abs ( self -> ctmf . yx ) * 10 < any_abs ( self -> ctmf . yy ) || any_abs ( self -> ctmf . yy ) * 10 < any_abs ( self -> ctmf . yx )		5617303	1		||			
ANR	5618073	RelationalExpression	any_abs ( self -> ctmf . yx ) * 10 < any_abs ( self -> ctmf . yy )		5617303	0		<			
ANR	5618074	MultiplicativeExpression	any_abs ( self -> ctmf . yx ) * 10		5617303	0		*			
ANR	5618075	CallExpression	any_abs ( self -> ctmf . yx )		5617303	0					
ANR	5618076	Callee	any_abs		5617303	0					
ANR	5618077	Identifier	any_abs		5617303	0					
ANR	5618078	ArgumentList	self -> ctmf . yx		5617303	1					
ANR	5618079	Argument	self -> ctmf . yx		5617303	0					
ANR	5618080	MemberAccess	self -> ctmf . yx		5617303	0					
ANR	5618081	PtrMemberAccess	self -> ctmf		5617303	0					
ANR	5618082	Identifier	self		5617303	0					
ANR	5618083	Identifier	ctmf		5617303	1					
ANR	5618084	Identifier	yx		5617303	1					
ANR	5618085	PrimaryExpression	10		5617303	1					
ANR	5618086	CallExpression	any_abs ( self -> ctmf . yy )		5617303	1					
ANR	5618087	Callee	any_abs		5617303	0					
ANR	5618088	Identifier	any_abs		5617303	0					
ANR	5618089	ArgumentList	self -> ctmf . yy		5617303	1					
ANR	5618090	Argument	self -> ctmf . yy		5617303	0					
ANR	5618091	MemberAccess	self -> ctmf . yy		5617303	0					
ANR	5618092	PtrMemberAccess	self -> ctmf		5617303	0					
ANR	5618093	Identifier	self		5617303	0					
ANR	5618094	Identifier	ctmf		5617303	1					
ANR	5618095	Identifier	yy		5617303	1					
ANR	5618096	RelationalExpression	any_abs ( self -> ctmf . yy ) * 10 < any_abs ( self -> ctmf . yx )		5617303	1		<			
ANR	5618097	MultiplicativeExpression	any_abs ( self -> ctmf . yy ) * 10		5617303	0		*			
ANR	5618098	CallExpression	any_abs ( self -> ctmf . yy )		5617303	0					
ANR	5618099	Callee	any_abs		5617303	0					
ANR	5618100	Identifier	any_abs		5617303	0					
ANR	5618101	ArgumentList	self -> ctmf . yy		5617303	1					
ANR	5618102	Argument	self -> ctmf . yy		5617303	0					
ANR	5618103	MemberAccess	self -> ctmf . yy		5617303	0					
ANR	5618104	PtrMemberAccess	self -> ctmf		5617303	0					
ANR	5618105	Identifier	self		5617303	0					
ANR	5618106	Identifier	ctmf		5617303	1					
ANR	5618107	Identifier	yy		5617303	1					
ANR	5618108	PrimaryExpression	10		5617303	1					
ANR	5618109	CallExpression	any_abs ( self -> ctmf . yx )		5617303	1					
ANR	5618110	Callee	any_abs		5617303	0					
ANR	5618111	Identifier	any_abs		5617303	0					
ANR	5618112	ArgumentList	self -> ctmf . yx		5617303	1					
ANR	5618113	Argument	self -> ctmf . yx		5617303	0					
ANR	5618114	MemberAccess	self -> ctmf . yx		5617303	0					
ANR	5618115	PtrMemberAccess	self -> ctmf		5617303	0					
ANR	5618116	Identifier	self		5617303	0					
ANR	5618117	Identifier	ctmf		5617303	1					
ANR	5618118	Identifier	yx		5617303	1					
ANR	5618119	ElseStatement	else		5617303	0					
ANR	5618120	CompoundStatement		101:11:4437:4437	5617303	0					
ANR	5618121	ExpressionStatement	self -> grid_fit_x = self -> grid_fit_y = false	623:8:24346:24389	5617303	0	True				
ANR	5618122	AssignmentExpression	self -> grid_fit_x = self -> grid_fit_y = false		5617303	0		=			
ANR	5618123	PtrMemberAccess	self -> grid_fit_x		5617303	0					
ANR	5618124	Identifier	self		5617303	0					
ANR	5618125	Identifier	grid_fit_x		5617303	1					
ANR	5618126	AssignmentExpression	self -> grid_fit_y = false		5617303	1		=			
ANR	5618127	PtrMemberAccess	self -> grid_fit_y		5617303	0					
ANR	5618128	Identifier	self		5617303	0					
ANR	5618129	Identifier	grid_fit_y		5617303	1					
ANR	5618130	Identifier	false		5617303	1					
ANR	5618131	ExpressionStatement	self -> align_to_pixels = align_to_pixels	625:4:24401:24440	5617303	22	True				
ANR	5618132	AssignmentExpression	self -> align_to_pixels = align_to_pixels		5617303	0		=			
ANR	5618133	PtrMemberAccess	self -> align_to_pixels		5617303	0					
ANR	5618134	Identifier	self		5617303	0					
ANR	5618135	Identifier	align_to_pixels		5617303	1					
ANR	5618136	Identifier	align_to_pixels		5617303	1					
ANR	5618137	ExpressionStatement	"t1_hinter__set_origin ( self , origin_x , origin_y )"	626:4:24446:24493	5617303	23	True				
ANR	5618138	CallExpression	"t1_hinter__set_origin ( self , origin_x , origin_y )"		5617303	0					
ANR	5618139	Callee	t1_hinter__set_origin		5617303	0					
ANR	5618140	Identifier	t1_hinter__set_origin		5617303	0					
ANR	5618141	ArgumentList	self		5617303	1					
ANR	5618142	Argument	self		5617303	0					
ANR	5618143	Identifier	self		5617303	0					
ANR	5618144	Argument	origin_x		5617303	1					
ANR	5618145	Identifier	origin_x		5617303	0					
ANR	5618146	Argument	origin_y		5617303	2					
ANR	5618147	Identifier	origin_y		5617303	0					
ANR	5618148	ExpressionStatement	"self -> pixel_o_x = rshift ( self -> g2o_fraction , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x ) )"	627:4:24499:24620	5617303	24	True				
ANR	5618149	AssignmentExpression	"self -> pixel_o_x = rshift ( self -> g2o_fraction , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x ) )"		5617303	0		=			
ANR	5618150	PtrMemberAccess	self -> pixel_o_x		5617303	0					
ANR	5618151	Identifier	self		5617303	0					
ANR	5618152	Identifier	pixel_o_x		5617303	1					
ANR	5618153	CallExpression	"rshift ( self -> g2o_fraction , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x ) )"		5617303	1					
ANR	5618154	Callee	rshift		5617303	0					
ANR	5618155	Identifier	rshift		5617303	0					
ANR	5618156	ArgumentList	self -> g2o_fraction		5617303	1					
ANR	5618157	Argument	self -> g2o_fraction		5617303	0					
ANR	5618158	PtrMemberAccess	self -> g2o_fraction		5617303	0					
ANR	5618159	Identifier	self		5617303	0					
ANR	5618160	Identifier	g2o_fraction		5617303	1					
ANR	5618161	Argument	self -> align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x		5617303	1					
ANR	5618162	ConditionalExpression	self -> align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x		5617303	0					
ANR	5618163	Condition	self -> align_to_pixels		5617303	0					
ANR	5618164	PtrMemberAccess	self -> align_to_pixels		5617303	0					
ANR	5618165	Identifier	self		5617303	0					
ANR	5618166	Identifier	align_to_pixels		5617303	1					
ANR	5618167	CastExpression	( int ) self -> log2_pixels_x		5617303	1					
ANR	5618168	CastTarget	int		5617303	0					
ANR	5618169	PtrMemberAccess	self -> log2_pixels_x		5617303	1					
ANR	5618170	Identifier	self		5617303	0					
ANR	5618171	Identifier	log2_pixels_x		5617303	1					
ANR	5618172	PtrMemberAccess	self -> log2_subpixels_x		5617303	2					
ANR	5618173	Identifier	self		5617303	0					
ANR	5618174	Identifier	log2_subpixels_x		5617303	1					
ANR	5618175	ExpressionStatement	"self -> pixel_o_y = rshift ( self -> g2o_fraction , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y ) )"	628:4:24626:24747	5617303	25	True				
ANR	5618176	AssignmentExpression	"self -> pixel_o_y = rshift ( self -> g2o_fraction , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y ) )"		5617303	0		=			
ANR	5618177	PtrMemberAccess	self -> pixel_o_y		5617303	0					
ANR	5618178	Identifier	self		5617303	0					
ANR	5618179	Identifier	pixel_o_y		5617303	1					
ANR	5618180	CallExpression	"rshift ( self -> g2o_fraction , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y ) )"		5617303	1					
ANR	5618181	Callee	rshift		5617303	0					
ANR	5618182	Identifier	rshift		5617303	0					
ANR	5618183	ArgumentList	self -> g2o_fraction		5617303	1					
ANR	5618184	Argument	self -> g2o_fraction		5617303	0					
ANR	5618185	PtrMemberAccess	self -> g2o_fraction		5617303	0					
ANR	5618186	Identifier	self		5617303	0					
ANR	5618187	Identifier	g2o_fraction		5617303	1					
ANR	5618188	Argument	self -> align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y		5617303	1					
ANR	5618189	ConditionalExpression	self -> align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y		5617303	0					
ANR	5618190	Condition	self -> align_to_pixels		5617303	0					
ANR	5618191	PtrMemberAccess	self -> align_to_pixels		5617303	0					
ANR	5618192	Identifier	self		5617303	0					
ANR	5618193	Identifier	align_to_pixels		5617303	1					
ANR	5618194	CastExpression	( int ) self -> log2_pixels_y		5617303	1					
ANR	5618195	CastTarget	int		5617303	0					
ANR	5618196	PtrMemberAccess	self -> log2_pixels_y		5617303	1					
ANR	5618197	Identifier	self		5617303	0					
ANR	5618198	Identifier	log2_pixels_y		5617303	1					
ANR	5618199	PtrMemberAccess	self -> log2_subpixels_y		5617303	2					
ANR	5618200	Identifier	self		5617303	0					
ANR	5618201	Identifier	log2_subpixels_y		5617303	1					
ANR	5618202	ExpressionStatement	"self -> pixel_gh = any_abs ( o2g_dist ( self , self -> pixel_o_x , self -> heigt_transform_coef_inv ) )"	629:4:24753:24842	5617303	26	True				
ANR	5618203	AssignmentExpression	"self -> pixel_gh = any_abs ( o2g_dist ( self , self -> pixel_o_x , self -> heigt_transform_coef_inv ) )"		5617303	0		=			
ANR	5618204	PtrMemberAccess	self -> pixel_gh		5617303	0					
ANR	5618205	Identifier	self		5617303	0					
ANR	5618206	Identifier	pixel_gh		5617303	1					
ANR	5618207	CallExpression	"any_abs ( o2g_dist ( self , self -> pixel_o_x , self -> heigt_transform_coef_inv ) )"		5617303	1					
ANR	5618208	Callee	any_abs		5617303	0					
ANR	5618209	Identifier	any_abs		5617303	0					
ANR	5618210	ArgumentList	"o2g_dist ( self , self -> pixel_o_x , self -> heigt_transform_coef_inv )"		5617303	1					
ANR	5618211	Argument	"o2g_dist ( self , self -> pixel_o_x , self -> heigt_transform_coef_inv )"		5617303	0					
ANR	5618212	CallExpression	"o2g_dist ( self , self -> pixel_o_x , self -> heigt_transform_coef_inv )"		5617303	0					
ANR	5618213	Callee	o2g_dist		5617303	0					
ANR	5618214	Identifier	o2g_dist		5617303	0					
ANR	5618215	ArgumentList	self		5617303	1					
ANR	5618216	Argument	self		5617303	0					
ANR	5618217	Identifier	self		5617303	0					
ANR	5618218	Argument	self -> pixel_o_x		5617303	1					
ANR	5618219	PtrMemberAccess	self -> pixel_o_x		5617303	0					
ANR	5618220	Identifier	self		5617303	0					
ANR	5618221	Identifier	pixel_o_x		5617303	1					
ANR	5618222	Argument	self -> heigt_transform_coef_inv		5617303	2					
ANR	5618223	PtrMemberAccess	self -> heigt_transform_coef_inv		5617303	0					
ANR	5618224	Identifier	self		5617303	0					
ANR	5618225	Identifier	heigt_transform_coef_inv		5617303	1					
ANR	5618226	ExpressionStatement	"self -> pixel_gw = any_abs ( o2g_dist ( self , self -> pixel_o_y , self -> width_transform_coef_inv ) )"	630:4:24848:24937	5617303	27	True				
ANR	5618227	AssignmentExpression	"self -> pixel_gw = any_abs ( o2g_dist ( self , self -> pixel_o_y , self -> width_transform_coef_inv ) )"		5617303	0		=			
ANR	5618228	PtrMemberAccess	self -> pixel_gw		5617303	0					
ANR	5618229	Identifier	self		5617303	0					
ANR	5618230	Identifier	pixel_gw		5617303	1					
ANR	5618231	CallExpression	"any_abs ( o2g_dist ( self , self -> pixel_o_y , self -> width_transform_coef_inv ) )"		5617303	1					
ANR	5618232	Callee	any_abs		5617303	0					
ANR	5618233	Identifier	any_abs		5617303	0					
ANR	5618234	ArgumentList	"o2g_dist ( self , self -> pixel_o_y , self -> width_transform_coef_inv )"		5617303	1					
ANR	5618235	Argument	"o2g_dist ( self , self -> pixel_o_y , self -> width_transform_coef_inv )"		5617303	0					
ANR	5618236	CallExpression	"o2g_dist ( self , self -> pixel_o_y , self -> width_transform_coef_inv )"		5617303	0					
ANR	5618237	Callee	o2g_dist		5617303	0					
ANR	5618238	Identifier	o2g_dist		5617303	0					
ANR	5618239	ArgumentList	self		5617303	1					
ANR	5618240	Argument	self		5617303	0					
ANR	5618241	Identifier	self		5617303	0					
ANR	5618242	Argument	self -> pixel_o_y		5617303	1					
ANR	5618243	PtrMemberAccess	self -> pixel_o_y		5617303	0					
ANR	5618244	Identifier	self		5617303	0					
ANR	5618245	Identifier	pixel_o_y		5617303	1					
ANR	5618246	Argument	self -> width_transform_coef_inv		5617303	2					
ANR	5618247	PtrMemberAccess	self -> width_transform_coef_inv		5617303	0					
ANR	5618248	Identifier	self		5617303	0					
ANR	5618249	Identifier	width_transform_coef_inv		5617303	1					
ANR	5618250	ReturnStatement	return 0 ;	631:4:24943:24951	5617303	28	True				
ANR	5618251	PrimaryExpression	0		5617303	0					
ANR	5618252	ReturnType	int		5617303	1					
ANR	5618253	Identifier	t1_hinter__set_mapping		5617303	2					
ANR	5618254	ParameterList	"t1_hinter * self , gs_matrix_fixed * ctm , gs_matrix * FontMatrix , gs_matrix * baseFontMatrix , int log2_pixels_x , int log2_pixels_y , int log2_subpixels_x , int log2_subpixels_y , fixed origin_x , fixed origin_y , bool align_to_pixels"		5617303	3					
ANR	5618255	Parameter	t1_hinter * self	516:27:19528:19543	5617303	0	True				
ANR	5618256	ParameterType	t1_hinter *		5617303	0					
ANR	5618257	Identifier	self		5617303	1					
ANR	5618258	Parameter	gs_matrix_fixed * ctm	516:45:19546:19566	5617303	1	True				
ANR	5618259	ParameterType	gs_matrix_fixed *		5617303	0					
ANR	5618260	Identifier	ctm		5617303	1					
ANR	5618261	Parameter	gs_matrix * FontMatrix	517:20:19589:19610	5617303	2	True				
ANR	5618262	ParameterType	gs_matrix *		5617303	0					
ANR	5618263	Identifier	FontMatrix		5617303	1					
ANR	5618264	Parameter	gs_matrix * baseFontMatrix	517:44:19613:19638	5617303	3	True				
ANR	5618265	ParameterType	gs_matrix *		5617303	0					
ANR	5618266	Identifier	baseFontMatrix		5617303	1					
ANR	5618267	Parameter	int log2_pixels_x	518:20:19661:19677	5617303	4	True				
ANR	5618268	ParameterType	int		5617303	0					
ANR	5618269	Identifier	log2_pixels_x		5617303	1					
ANR	5618270	Parameter	int log2_pixels_y	518:39:19680:19696	5617303	5	True				
ANR	5618271	ParameterType	int		5617303	0					
ANR	5618272	Identifier	log2_pixels_y		5617303	1					
ANR	5618273	Parameter	int log2_subpixels_x	519:20:19719:19738	5617303	6	True				
ANR	5618274	ParameterType	int		5617303	0					
ANR	5618275	Identifier	log2_subpixels_x		5617303	1					
ANR	5618276	Parameter	int log2_subpixels_y	519:42:19741:19760	5617303	7	True				
ANR	5618277	ParameterType	int		5617303	0					
ANR	5618278	Identifier	log2_subpixels_y		5617303	1					
ANR	5618279	Parameter	fixed origin_x	520:20:19783:19796	5617303	8	True				
ANR	5618280	ParameterType	fixed		5617303	0					
ANR	5618281	Identifier	origin_x		5617303	1					
ANR	5618282	Parameter	fixed origin_y	520:36:19799:19812	5617303	9	True				
ANR	5618283	ParameterType	fixed		5617303	0					
ANR	5618284	Identifier	origin_y		5617303	1					
ANR	5618285	Parameter	bool align_to_pixels	520:52:19815:19834	5617303	10	True				
ANR	5618286	ParameterType	bool		5617303	0					
ANR	5618287	Identifier	align_to_pixels		5617303	1					
ANR	5618288	CFGEntryNode	ENTRY		5617303		True				
ANR	5618289	CFGExitNode	EXIT		5617303		True				
ANR	5618290	Symbol	self -> ctmf . xy		5617303						
ANR	5618291	Symbol	self -> ctmf . xx		5617303						
ANR	5618292	Symbol	self -> pixel_gw		5617303						
ANR	5618293	Symbol	ctm		5617303						
ANR	5618294	Symbol	self -> align_to_pixels		5617303						
ANR	5618295	Symbol	axx		5617303						
ANR	5618296	Symbol	self -> g2o_fraction		5617303						
ANR	5618297	Symbol	axy		5617303						
ANR	5618298	Symbol	& CTM		5617303						
ANR	5618299	Symbol	self -> resolution		5617303						
ANR	5618300	Symbol	* self		5617303						
ANR	5618301	Symbol	o2g_dist		5617303						
ANR	5618302	Symbol	self -> pass_through		5617303						
ANR	5618303	Symbol	g2o_bitshift		5617303						
ANR	5618304	Symbol	fraction_matrix__invert_to		5617303						
ANR	5618305	Symbol	log2_subpixels_x		5617303						
ANR	5618306	Symbol	& self -> ctmi		5617303						
ANR	5618307	Symbol	log2_subpixels_y		5617303						
ANR	5618308	Symbol	self -> transposed		5617303						
ANR	5618309	Symbol	self -> keep_stem_width		5617303						
ANR	5618310	Symbol	ayy		5617303						
ANR	5618311	Symbol	ayx		5617303						
ANR	5618312	Symbol	p2 . x		5617303						
ANR	5618313	Symbol	p2 . y		5617303						
ANR	5618314	Symbol	max_coord_bits		5617303						
ANR	5618315	Symbol	d0		5617303						
ANR	5618316	Symbol	d1		5617303						
ANR	5618317	Symbol	d2		5617303						
ANR	5618318	Symbol	& self -> ctmf		5617303						
ANR	5618319	Symbol	hypot		5617303						
ANR	5618320	Symbol	gs_error_limitcheck		5617303						
ANR	5618321	Symbol	any_abs		5617303						
ANR	5618322	Symbol	sp		5617303						
ANR	5618323	Symbol	rshift		5617303						
ANR	5618324	Symbol	fabs		5617303						
ANR	5618325	Symbol	max		5617303						
ANR	5618326	Symbol	self -> heigt_transform_coef		5617303						
ANR	5618327	Symbol	self -> g2o_fraction_bits		5617303						
ANR	5618328	Symbol	fraction_matrix__to_double		5617303						
ANR	5618329	Symbol	m		5617303						
ANR	5618330	Symbol	ctm -> xx		5617303						
ANR	5618331	Symbol	ctm -> xy		5617303						
ANR	5618332	Symbol	p0 . x		5617303						
ANR	5618333	Symbol	p0 . y		5617303						
ANR	5618334	Symbol	self		5617303						
ANR	5618335	Symbol	* ctm		5617303						
ANR	5618336	Symbol	gs_error_rangecheck		5617303						
ANR	5618337	Symbol	self -> width_transform_coef_inv		5617303						
ANR	5618338	Symbol	log2_pixels_y		5617303						
ANR	5618339	Symbol	self -> grid_fit_x		5617303						
ANR	5618340	Symbol	self -> grid_fit_y		5617303						
ANR	5618341	Symbol	origin_y		5617303						
ANR	5618342	Symbol	align_to_pixels		5617303						
ANR	5618343	Symbol	_fixed_shift		5617303						
ANR	5618344	Symbol	log2_pixels_x		5617303						
ANR	5618345	Symbol	self -> ctmf		5617303						
ANR	5618346	Symbol	self -> ctmi		5617303						
ANR	5618347	Symbol	origin_x		5617303						
ANR	5618348	Symbol	self -> ctmi . denominator		5617303						
ANR	5618349	Symbol	self -> pixel_o_x		5617303						
ANR	5618350	Symbol	self -> pixel_o_y		5617303						
ANR	5618351	Symbol	self -> base_font_scale		5617303						
ANR	5618352	Symbol	true		5617303						
ANR	5618353	Symbol	vp		5617303						
ANR	5618354	Symbol	self -> font_size		5617303						
ANR	5618355	Symbol	p0		5617303						
ANR	5618356	Symbol	p1		5617303						
ANR	5618357	Symbol	p2		5617303						
ANR	5618358	Symbol	code		5617303						
ANR	5618359	Symbol	p1 . x		5617303						
ANR	5618360	Symbol	p1 . y		5617303						
ANR	5618361	Symbol	scale		5617303						
ANR	5618362	Symbol	self -> disable_hinting		5617303						
ANR	5618363	Symbol	self -> log2_subpixels_y		5617303						
ANR	5618364	Symbol	self -> log2_subpixels_x		5617303						
ANR	5618365	Symbol	FontMatrix		5617303						
ANR	5618366	Symbol	floor		5617303						
ANR	5618367	Symbol	m . xx		5617303						
ANR	5618368	Symbol	m . xy		5617303						
ANR	5618369	Symbol	self -> pixel_gh		5617303						
ANR	5618370	Symbol	self -> width_transform_coef		5617303						
ANR	5618371	Symbol	false		5617303						
ANR	5618372	Symbol	self -> heigt_transform_coef_inv		5617303						
ANR	5618373	Symbol	self -> log2_pixels_x		5617303						
ANR	5618374	Symbol	& p1		5617303						
ANR	5618375	Symbol	self -> log2_pixels_y		5617303						
ANR	5618376	Symbol	& p0		5617303						
ANR	5618377	Symbol	& p2		5617303						
ANR	5618378	Symbol	self -> ctmf . yy		5617303						
ANR	5618379	Symbol	self -> ctmf . yx		5617303						
ANR	5618380	Symbol	& m		5617303						
ANR	5618381	Symbol	div_x		5617303						
ANR	5618382	Symbol	self -> ctmf . denominator		5617303						
ANR	5618383	Symbol	div_y		5617303						
ANR	5618384	Symbol	self -> ctmf . bitshift		5617303						
ANR	5618385	Symbol	m . yx		5617303						
ANR	5618386	Symbol	baseFontMatrix		5617303						
ANR	5618387	Symbol	CTM		5617303						
ANR	5618388	Symbol	m . yy		5617303						
ANR	5618389	Function	t1_hinter__make_zone	634:0:24956:25619							
ANR	5618390	FunctionDef	"t1_hinter__make_zone (t1_hinter * self , t1_zone * zone , float * blues , enum t1_zone_type type , t1_glyph_space_coord blue_fuzz)"		5618389	0					
ANR	5618391	CompoundStatement		635:0:25093:25619	5618389	0					
ANR	5618392	IdentifierDeclStatement	t1_glyph_space_coord d = 0 ;	635:3:25097:25123	5618389	0	True				
ANR	5618393	IdentifierDecl	d = 0		5618389	0					
ANR	5618394	IdentifierDeclType	t1_glyph_space_coord		5618389	0					
ANR	5618395	Identifier	d		5618389	1					
ANR	5618396	AssignmentExpression	d = 0		5618389	2		=			
ANR	5618397	Identifier	d		5618389	0					
ANR	5618398	PrimaryExpression	0		5618389	1					
ANR	5618399	ExpressionStatement	zone -> type = type	637:4:25130:25147	5618389	1	True				
ANR	5618400	AssignmentExpression	zone -> type = type		5618389	0		=			
ANR	5618401	PtrMemberAccess	zone -> type		5618389	0					
ANR	5618402	Identifier	zone		5618389	0					
ANR	5618403	Identifier	type		5618389	1					
ANR	5618404	Identifier	type		5618389	1					
ANR	5618405	ExpressionStatement	zone -> y = float2fixed ( blues [ 0 ] + d )	638:4:25153:25198	5618389	2	True				
ANR	5618406	AssignmentExpression	zone -> y = float2fixed ( blues [ 0 ] + d )		5618389	0		=			
ANR	5618407	PtrMemberAccess	zone -> y		5618389	0					
ANR	5618408	Identifier	zone		5618389	0					
ANR	5618409	Identifier	y		5618389	1					
ANR	5618410	CallExpression	float2fixed ( blues [ 0 ] + d )		5618389	1					
ANR	5618411	Callee	float2fixed		5618389	0					
ANR	5618412	Identifier	float2fixed		5618389	0					
ANR	5618413	ArgumentList	blues [ 0 ] + d		5618389	1					
ANR	5618414	Argument	blues [ 0 ] + d		5618389	0					
ANR	5618415	AdditiveExpression	blues [ 0 ] + d		5618389	0		+			
ANR	5618416	ArrayIndexing	blues [ 0 ]		5618389	0					
ANR	5618417	Identifier	blues		5618389	0					
ANR	5618418	PrimaryExpression	0		5618389	1					
ANR	5618419	Identifier	d		5618389	1					
ANR	5618420	ExpressionStatement	zone -> overshoot_y = float2fixed ( blues [ 1 ] + d )	639:4:25204:25249	5618389	3	True				
ANR	5618421	AssignmentExpression	zone -> overshoot_y = float2fixed ( blues [ 1 ] + d )		5618389	0		=			
ANR	5618422	PtrMemberAccess	zone -> overshoot_y		5618389	0					
ANR	5618423	Identifier	zone		5618389	0					
ANR	5618424	Identifier	overshoot_y		5618389	1					
ANR	5618425	CallExpression	float2fixed ( blues [ 1 ] + d )		5618389	1					
ANR	5618426	Callee	float2fixed		5618389	0					
ANR	5618427	Identifier	float2fixed		5618389	0					
ANR	5618428	ArgumentList	blues [ 1 ] + d		5618389	1					
ANR	5618429	Argument	blues [ 1 ] + d		5618389	0					
ANR	5618430	AdditiveExpression	blues [ 1 ] + d		5618389	0		+			
ANR	5618431	ArrayIndexing	blues [ 1 ]		5618389	0					
ANR	5618432	Identifier	blues		5618389	0					
ANR	5618433	PrimaryExpression	1		5618389	1					
ANR	5618434	Identifier	d		5618389	1					
ANR	5618435	ExpressionStatement	"zone -> y_min = min ( zone -> y , zone -> overshoot_y ) - blue_fuzz"	640:4:25255:25312	5618389	4	True				
ANR	5618436	AssignmentExpression	"zone -> y_min = min ( zone -> y , zone -> overshoot_y ) - blue_fuzz"		5618389	0		=			
ANR	5618437	PtrMemberAccess	zone -> y_min		5618389	0					
ANR	5618438	Identifier	zone		5618389	0					
ANR	5618439	Identifier	y_min		5618389	1					
ANR	5618440	AdditiveExpression	"min ( zone -> y , zone -> overshoot_y ) - blue_fuzz"		5618389	1		-			
ANR	5618441	CallExpression	"min ( zone -> y , zone -> overshoot_y )"		5618389	0					
ANR	5618442	Callee	min		5618389	0					
ANR	5618443	Identifier	min		5618389	0					
ANR	5618444	ArgumentList	zone -> y		5618389	1					
ANR	5618445	Argument	zone -> y		5618389	0					
ANR	5618446	PtrMemberAccess	zone -> y		5618389	0					
ANR	5618447	Identifier	zone		5618389	0					
ANR	5618448	Identifier	y		5618389	1					
ANR	5618449	Argument	zone -> overshoot_y		5618389	1					
ANR	5618450	PtrMemberAccess	zone -> overshoot_y		5618389	0					
ANR	5618451	Identifier	zone		5618389	0					
ANR	5618452	Identifier	overshoot_y		5618389	1					
ANR	5618453	Identifier	blue_fuzz		5618389	1					
ANR	5618454	ExpressionStatement	"zone -> y_max = max ( zone -> y , zone -> overshoot_y ) + blue_fuzz"	641:4:25318:25375	5618389	5	True				
ANR	5618455	AssignmentExpression	"zone -> y_max = max ( zone -> y , zone -> overshoot_y ) + blue_fuzz"		5618389	0		=			
ANR	5618456	PtrMemberAccess	zone -> y_max		5618389	0					
ANR	5618457	Identifier	zone		5618389	0					
ANR	5618458	Identifier	y_max		5618389	1					
ANR	5618459	AdditiveExpression	"max ( zone -> y , zone -> overshoot_y ) + blue_fuzz"		5618389	1		+			
ANR	5618460	CallExpression	"max ( zone -> y , zone -> overshoot_y )"		5618389	0					
ANR	5618461	Callee	max		5618389	0					
ANR	5618462	Identifier	max		5618389	0					
ANR	5618463	ArgumentList	zone -> y		5618389	1					
ANR	5618464	Argument	zone -> y		5618389	0					
ANR	5618465	PtrMemberAccess	zone -> y		5618389	0					
ANR	5618466	Identifier	zone		5618389	0					
ANR	5618467	Identifier	y		5618389	1					
ANR	5618468	Argument	zone -> overshoot_y		5618389	1					
ANR	5618469	PtrMemberAccess	zone -> overshoot_y		5618389	0					
ANR	5618470	Identifier	zone		5618389	0					
ANR	5618471	Identifier	overshoot_y		5618389	1					
ANR	5618472	Identifier	blue_fuzz		5618389	1					
ANR	5618473	IfStatement	if ( type == botzone ? zone -> overshoot_y > zone -> y : zone -> overshoot_y < zone -> y )		5618389	6					
ANR	5618474	Condition	type == botzone ? zone -> overshoot_y > zone -> y : zone -> overshoot_y < zone -> y	642:8:25385:25459	5618389	0	True				
ANR	5618475	ConditionalExpression	type == botzone ? zone -> overshoot_y > zone -> y : zone -> overshoot_y < zone -> y		5618389	0					
ANR	5618476	Condition	type == botzone		5618389	0					
ANR	5618477	EqualityExpression	type == botzone		5618389	0		==			
ANR	5618478	Identifier	type		5618389	0					
ANR	5618479	Identifier	botzone		5618389	1					
ANR	5618480	RelationalExpression	zone -> overshoot_y > zone -> y		5618389	1		>			
ANR	5618481	PtrMemberAccess	zone -> overshoot_y		5618389	0					
ANR	5618482	Identifier	zone		5618389	0					
ANR	5618483	Identifier	overshoot_y		5618389	1					
ANR	5618484	PtrMemberAccess	zone -> y		5618389	1					
ANR	5618485	Identifier	zone		5618389	0					
ANR	5618486	Identifier	y		5618389	1					
ANR	5618487	RelationalExpression	zone -> overshoot_y < zone -> y		5618389	2		<			
ANR	5618488	PtrMemberAccess	zone -> overshoot_y		5618389	0					
ANR	5618489	Identifier	zone		5618389	0					
ANR	5618490	Identifier	overshoot_y		5618389	1					
ANR	5618491	PtrMemberAccess	zone -> y		5618389	1					
ANR	5618492	Identifier	zone		5618389	0					
ANR	5618493	Identifier	y		5618389	1					
ANR	5618494	CompoundStatement		9:8:378:403	5618389	1					
ANR	5618495	IdentifierDeclStatement	int v = zone -> overshoot_y ;	643:8:25472:25497	5618389	0	True				
ANR	5618496	IdentifierDecl	v = zone -> overshoot_y		5618389	0					
ANR	5618497	IdentifierDeclType	int		5618389	0					
ANR	5618498	Identifier	v		5618389	1					
ANR	5618499	AssignmentExpression	v = zone -> overshoot_y		5618389	2		=			
ANR	5618500	Identifier	v		5618389	0					
ANR	5618501	PtrMemberAccess	zone -> overshoot_y		5618389	1					
ANR	5618502	Identifier	zone		5618389	0					
ANR	5618503	Identifier	overshoot_y		5618389	1					
ANR	5618504	ExpressionStatement	zone -> overshoot_y = zone -> y	643:35:25499:25526	5618389	1	True				
ANR	5618505	AssignmentExpression	zone -> overshoot_y = zone -> y		5618389	0		=			
ANR	5618506	PtrMemberAccess	zone -> overshoot_y		5618389	0					
ANR	5618507	Identifier	zone		5618389	0					
ANR	5618508	Identifier	overshoot_y		5618389	1					
ANR	5618509	PtrMemberAccess	zone -> y		5618389	1					
ANR	5618510	Identifier	zone		5618389	0					
ANR	5618511	Identifier	y		5618389	1					
ANR	5618512	ExpressionStatement	zone -> y = v	643:64:25528:25539	5618389	2	True				
ANR	5618513	AssignmentExpression	zone -> y = v		5618389	0		=			
ANR	5618514	PtrMemberAccess	zone -> y		5618389	0					
ANR	5618515	Identifier	zone		5618389	0					
ANR	5618516	Identifier	y		5618389	1					
ANR	5618517	Identifier	v		5618389	1					
ANR	5618518	ExpressionStatement	"t1_hinter__adjust_matrix_precision ( self , zone -> y_min , zone -> y_max )"	645:4:25551:25617	5618389	7	True				
ANR	5618519	CallExpression	"t1_hinter__adjust_matrix_precision ( self , zone -> y_min , zone -> y_max )"		5618389	0					
ANR	5618520	Callee	t1_hinter__adjust_matrix_precision		5618389	0					
ANR	5618521	Identifier	t1_hinter__adjust_matrix_precision		5618389	0					
ANR	5618522	ArgumentList	self		5618389	1					
ANR	5618523	Argument	self		5618389	0					
ANR	5618524	Identifier	self		5618389	0					
ANR	5618525	Argument	zone -> y_min		5618389	1					
ANR	5618526	PtrMemberAccess	zone -> y_min		5618389	0					
ANR	5618527	Identifier	zone		5618389	0					
ANR	5618528	Identifier	y_min		5618389	1					
ANR	5618529	Argument	zone -> y_max		5618389	2					
ANR	5618530	PtrMemberAccess	zone -> y_max		5618389	0					
ANR	5618531	Identifier	zone		5618389	0					
ANR	5618532	Identifier	y_max		5618389	1					
ANR	5618533	ReturnType	static void		5618389	1					
ANR	5618534	Identifier	t1_hinter__make_zone		5618389	2					
ANR	5618535	ParameterList	"t1_hinter * self , t1_zone * zone , float * blues , enum t1_zone_type type , t1_glyph_space_coord blue_fuzz"		5618389	3					
ANR	5618536	Parameter	t1_hinter * self	634:33:24989:25004	5618389	0	True				
ANR	5618537	ParameterType	t1_hinter *		5618389	0					
ANR	5618538	Identifier	self		5618389	1					
ANR	5618539	Parameter	t1_zone * zone	634:51:25007:25019	5618389	1	True				
ANR	5618540	ParameterType	t1_zone *		5618389	0					
ANR	5618541	Identifier	zone		5618389	1					
ANR	5618542	Parameter	float * blues	634:66:25022:25034	5618389	2	True				
ANR	5618543	ParameterType	float *		5618389	0					
ANR	5618544	Identifier	blues		5618389	1					
ANR	5618545	Parameter	enum t1_zone_type type	634:81:25037:25058	5618389	3	True				
ANR	5618546	ParameterType	enum t1_zone_type		5618389	0					
ANR	5618547	Identifier	type		5618389	1					
ANR	5618548	Parameter	t1_glyph_space_coord blue_fuzz	634:105:25061:25090	5618389	4	True				
ANR	5618549	ParameterType	t1_glyph_space_coord		5618389	0					
ANR	5618550	Identifier	blue_fuzz		5618389	1					
ANR	5618551	CFGEntryNode	ENTRY		5618389		True				
ANR	5618552	CFGExitNode	EXIT		5618389		True				
ANR	5618553	Symbol	zone -> y		5618389						
ANR	5618554	Symbol	d		5618389						
ANR	5618555	Symbol	* zone		5618389						
ANR	5618556	Symbol	max		5618389						
ANR	5618557	Symbol	type		5618389						
ANR	5618558	Symbol	blues		5618389						
ANR	5618559	Symbol	zone -> y_max		5618389						
ANR	5618560	Symbol	zone -> type		5618389						
ANR	5618561	Symbol	float2fixed		5618389						
ANR	5618562	Symbol	min		5618389						
ANR	5618563	Symbol	zone		5618389						
ANR	5618564	Symbol	v		5618389						
ANR	5618565	Symbol	self		5618389						
ANR	5618566	Symbol	blue_fuzz		5618389						
ANR	5618567	Symbol	* blues		5618389						
ANR	5618568	Symbol	botzone		5618389						
ANR	5618569	Symbol	zone -> y_min		5618389						
ANR	5618570	Symbol	zone -> overshoot_y		5618389						
ANR	5618571	Function	t1_hinter__realloc_array	648:0:25622:26063							
ANR	5618572	FunctionDef	"t1_hinter__realloc_array (gs_memory_t * mem , void * * a , void * a0 , int * max_count , int elem_size , int enhancement , const char * cname)"		5618571	0					
ANR	5618573	CompoundStatement		649:0:25764:26063	5618571	0					
ANR	5618574	IdentifierDeclStatement	"void * aa = gs_alloc_bytes ( mem , ( * max_count + enhancement * 2 ) * elem_size , cname ) ;"	650:4:25770:25851	5618571	0	True				
ANR	5618575	IdentifierDecl	"* aa = gs_alloc_bytes ( mem , ( * max_count + enhancement * 2 ) * elem_size , cname )"		5618571	0					
ANR	5618576	IdentifierDeclType	void *		5618571	0					
ANR	5618577	Identifier	aa		5618571	1					
ANR	5618578	AssignmentExpression	"* aa = gs_alloc_bytes ( mem , ( * max_count + enhancement * 2 ) * elem_size , cname )"		5618571	2		=			
ANR	5618579	Identifier	aa		5618571	0					
ANR	5618580	CallExpression	"gs_alloc_bytes ( mem , ( * max_count + enhancement * 2 ) * elem_size , cname )"		5618571	1					
ANR	5618581	Callee	gs_alloc_bytes		5618571	0					
ANR	5618582	Identifier	gs_alloc_bytes		5618571	0					
ANR	5618583	ArgumentList	mem		5618571	1					
ANR	5618584	Argument	mem		5618571	0					
ANR	5618585	Identifier	mem		5618571	0					
ANR	5618586	Argument	( * max_count + enhancement * 2 ) * elem_size		5618571	1					
ANR	5618587	MultiplicativeExpression	( * max_count + enhancement * 2 ) * elem_size		5618571	0		*			
ANR	5618588	AdditiveExpression	* max_count + enhancement * 2		5618571	0		+			
ANR	5618589	UnaryOperationExpression	* max_count		5618571	0					
ANR	5618590	UnaryOperator	*		5618571	0					
ANR	5618591	Identifier	max_count		5618571	1					
ANR	5618592	MultiplicativeExpression	enhancement * 2		5618571	1		*			
ANR	5618593	Identifier	enhancement		5618571	0					
ANR	5618594	PrimaryExpression	2		5618571	1					
ANR	5618595	Identifier	elem_size		5618571	1					
ANR	5618596	Argument	cname		5618571	2					
ANR	5618597	Identifier	cname		5618571	0					
ANR	5618598	IfStatement	if ( aa == NULL )		5618571	1					
ANR	5618599	Condition	aa == NULL	652:8:25862:25871	5618571	0	True				
ANR	5618600	EqualityExpression	aa == NULL		5618571	0		==			
ANR	5618601	Identifier	aa		5618571	0					
ANR	5618602	Identifier	NULL		5618571	1					
ANR	5618603	ReturnStatement	return true ;	653:8:25882:25893	5618571	1	True				
ANR	5618604	Identifier	true		5618571	0					
ANR	5618605	ExpressionStatement	"memcpy ( aa , * a , * max_count * elem_size )"	654:4:25899:25937	5618571	2	True				
ANR	5618606	CallExpression	"memcpy ( aa , * a , * max_count * elem_size )"		5618571	0					
ANR	5618607	Callee	memcpy		5618571	0					
ANR	5618608	Identifier	memcpy		5618571	0					
ANR	5618609	ArgumentList	aa		5618571	1					
ANR	5618610	Argument	aa		5618571	0					
ANR	5618611	Identifier	aa		5618571	0					
ANR	5618612	Argument	* a		5618571	1					
ANR	5618613	UnaryOperationExpression	* a		5618571	0					
ANR	5618614	UnaryOperator	*		5618571	0					
ANR	5618615	Identifier	a		5618571	1					
ANR	5618616	Argument	* max_count * elem_size		5618571	2					
ANR	5618617	MultiplicativeExpression	* max_count * elem_size		5618571	0		*			
ANR	5618618	UnaryOperationExpression	* max_count		5618571	0					
ANR	5618619	UnaryOperator	*		5618571	0					
ANR	5618620	Identifier	max_count		5618571	1					
ANR	5618621	Identifier	elem_size		5618571	1					
ANR	5618622	IfStatement	if ( * a != a0 )		5618571	3					
ANR	5618623	Condition	* a != a0	655:8:25947:25954	5618571	0	True				
ANR	5618624	EqualityExpression	* a != a0		5618571	0		!=			
ANR	5618625	UnaryOperationExpression	* a		5618571	0					
ANR	5618626	UnaryOperator	*		5618571	0					
ANR	5618627	Identifier	a		5618571	1					
ANR	5618628	Identifier	a0		5618571	1					
ANR	5618629	ExpressionStatement	"gs_free_object ( mem , * a , cname )"	656:8:25965:25995	5618571	1	True				
ANR	5618630	CallExpression	"gs_free_object ( mem , * a , cname )"		5618571	0					
ANR	5618631	Callee	gs_free_object		5618571	0					
ANR	5618632	Identifier	gs_free_object		5618571	0					
ANR	5618633	ArgumentList	mem		5618571	1					
ANR	5618634	Argument	mem		5618571	0					
ANR	5618635	Identifier	mem		5618571	0					
ANR	5618636	Argument	* a		5618571	1					
ANR	5618637	UnaryOperationExpression	* a		5618571	0					
ANR	5618638	UnaryOperator	*		5618571	0					
ANR	5618639	Identifier	a		5618571	1					
ANR	5618640	Argument	cname		5618571	2					
ANR	5618641	Identifier	cname		5618571	0					
ANR	5618642	ExpressionStatement	* a = aa	657:4:26001:26008	5618571	4	True				
ANR	5618643	AssignmentExpression	* a = aa		5618571	0		=			
ANR	5618644	UnaryOperationExpression	* a		5618571	0					
ANR	5618645	UnaryOperator	*		5618571	0					
ANR	5618646	Identifier	a		5618571	1					
ANR	5618647	Identifier	aa		5618571	1					
ANR	5618648	ExpressionStatement	* max_count += enhancement * 2	658:4:26014:26043	5618571	5	True				
ANR	5618649	AssignmentExpression	* max_count += enhancement * 2		5618571	0		+=			
ANR	5618650	UnaryOperationExpression	* max_count		5618571	0					
ANR	5618651	UnaryOperator	*		5618571	0					
ANR	5618652	Identifier	max_count		5618571	1					
ANR	5618653	MultiplicativeExpression	enhancement * 2		5618571	1		*			
ANR	5618654	Identifier	enhancement		5618571	0					
ANR	5618655	PrimaryExpression	2		5618571	1					
ANR	5618656	ReturnStatement	return false ;	659:4:26049:26061	5618571	6	True				
ANR	5618657	Identifier	false		5618571	0					
ANR	5618658	ReturnType	static bool		5618571	1					
ANR	5618659	Identifier	t1_hinter__realloc_array		5618571	2					
ANR	5618660	ParameterList	"gs_memory_t * mem , void * * a , void * a0 , int * max_count , int elem_size , int enhancement , const char * cname"		5618571	3					
ANR	5618661	Parameter	gs_memory_t * mem	648:37:25659:25674	5618571	0	True				
ANR	5618662	ParameterType	gs_memory_t *		5618571	0					
ANR	5618663	Identifier	mem		5618571	1					
ANR	5618664	Parameter	void * * a	648:55:25677:25684	5618571	1	True				
ANR	5618665	ParameterType	void * *		5618571	0					
ANR	5618666	Identifier	a		5618571	1					
ANR	5618667	Parameter	void * a0	648:65:25687:25694	5618571	2	True				
ANR	5618668	ParameterType	void *		5618571	0					
ANR	5618669	Identifier	a0		5618571	1					
ANR	5618670	Parameter	int * max_count	648:75:25697:25710	5618571	3	True				
ANR	5618671	ParameterType	int *		5618571	0					
ANR	5618672	Identifier	max_count		5618571	1					
ANR	5618673	Parameter	int elem_size	648:91:25713:25725	5618571	4	True				
ANR	5618674	ParameterType	int		5618571	0					
ANR	5618675	Identifier	elem_size		5618571	1					
ANR	5618676	Parameter	int enhancement	648:106:25728:25742	5618571	5	True				
ANR	5618677	ParameterType	int		5618571	0					
ANR	5618678	Identifier	enhancement		5618571	1					
ANR	5618679	Parameter	const char * cname	648:123:25745:25761	5618571	6	True				
ANR	5618680	ParameterType	const char *		5618571	0					
ANR	5618681	Identifier	cname		5618571	1					
ANR	5618682	CFGEntryNode	ENTRY		5618571		True				
ANR	5618683	CFGExitNode	EXIT		5618571		True				
ANR	5618684	Symbol	aa		5618571						
ANR	5618685	Symbol	a		5618571						
ANR	5618686	Symbol	gs_alloc_bytes		5618571						
ANR	5618687	Symbol	NULL		5618571						
ANR	5618688	Symbol	* max_count		5618571						
ANR	5618689	Symbol	cname		5618571						
ANR	5618690	Symbol	false		5618571						
ANR	5618691	Symbol	enhancement		5618571						
ANR	5618692	Symbol	* a		5618571						
ANR	5618693	Symbol	a0		5618571						
ANR	5618694	Symbol	max_count		5618571						
ANR	5618695	Symbol	mem		5618571						
ANR	5618696	Symbol	elem_size		5618571						
ANR	5618697	Symbol	true		5618571						
ANR	5618698	Function	t1_hinter__set_alignment_zones	662:0:26066:27458							
ANR	5618699	FunctionDef	"t1_hinter__set_alignment_zones (gs_memory_t * mem , t1_hinter * self , float * blues , int count , enum t1_zone_type type , bool family)"		5618698	0					
ANR	5618700	CompoundStatement		663:0:26207:27458	5618698	0					
ANR	5618701	IdentifierDeclStatement	"int count2 = count / 2 , i , j ;"	663:3:26211:26239	5618698	0	True				
ANR	5618702	IdentifierDecl	count2 = count / 2		5618698	0					
ANR	5618703	IdentifierDeclType	int		5618698	0					
ANR	5618704	Identifier	count2		5618698	1					
ANR	5618705	AssignmentExpression	count2 = count / 2		5618698	2		=			
ANR	5618706	Identifier	count2		5618698	0					
ANR	5618707	MultiplicativeExpression	count / 2		5618698	1		/			
ANR	5618708	Identifier	count		5618698	0					
ANR	5618709	PrimaryExpression	2		5618698	1					
ANR	5618710	IdentifierDecl	i		5618698	1					
ANR	5618711	IdentifierDeclType	int		5618698	0					
ANR	5618712	Identifier	i		5618698	1					
ANR	5618713	IdentifierDecl	j		5618698	2					
ANR	5618714	IdentifierDeclType	int		5618698	0					
ANR	5618715	Identifier	j		5618698	1					
ANR	5618716	IfStatement	if ( ! family )		5618698	1					
ANR	5618717	Condition	! family	665:8:26250:26256	5618698	0	True				
ANR	5618718	UnaryOperationExpression	! family		5618698	0					
ANR	5618719	UnaryOperator	!		5618698	0					
ANR	5618720	Identifier	family		5618698	1					
ANR	5618721	CompoundStatement		3:17:51:51	5618698	1					
ANR	5618722	IfStatement	if ( count2 + self -> zone_count >= self -> max_zone_count )		5618698	0					
ANR	5618723	Condition	count2 + self -> zone_count >= self -> max_zone_count	667:12:26301:26349	5618698	0	True				
ANR	5618724	RelationalExpression	count2 + self -> zone_count >= self -> max_zone_count		5618698	0		>=			
ANR	5618725	AdditiveExpression	count2 + self -> zone_count		5618698	0		+			
ANR	5618726	Identifier	count2		5618698	0					
ANR	5618727	PtrMemberAccess	self -> zone_count		5618698	1					
ANR	5618728	Identifier	self		5618698	0					
ANR	5618729	Identifier	zone_count		5618698	1					
ANR	5618730	PtrMemberAccess	self -> max_zone_count		5618698	1					
ANR	5618731	Identifier	self		5618698	0					
ANR	5618732	Identifier	max_zone_count		5618698	1					
ANR	5618733	IfStatement	"if ( t1_hinter__realloc_array ( mem , ( void * * ) & self -> zone , self -> zone0 , & self -> max_zone_count , sizeof ( self -> zone0 ) / count_of ( self -> zone0 ) , max ( T1_MAX_ALIGNMENT_ZONES , count ) , s_zone_array ) )"		5618698	1					
ANR	5618734	Condition	"t1_hinter__realloc_array ( mem , ( void * * ) & self -> zone , self -> zone0 , & self -> max_zone_count , sizeof ( self -> zone0 ) / count_of ( self -> zone0 ) , max ( T1_MAX_ALIGNMENT_ZONES , count ) , s_zone_array )"	668:15:26367:26628	5618698	0	True				
ANR	5618735	CallExpression	"t1_hinter__realloc_array ( mem , ( void * * ) & self -> zone , self -> zone0 , & self -> max_zone_count , sizeof ( self -> zone0 ) / count_of ( self -> zone0 ) , max ( T1_MAX_ALIGNMENT_ZONES , count ) , s_zone_array )"		5618698	0					
ANR	5618736	Callee	t1_hinter__realloc_array		5618698	0					
ANR	5618737	Identifier	t1_hinter__realloc_array		5618698	0					
ANR	5618738	ArgumentList	mem		5618698	1					
ANR	5618739	Argument	mem		5618698	0					
ANR	5618740	Identifier	mem		5618698	0					
ANR	5618741	Argument	( void * * ) & self -> zone		5618698	1					
ANR	5618742	CastExpression	( void * * ) & self -> zone		5618698	0					
ANR	5618743	CastTarget	void * *		5618698	0					
ANR	5618744	UnaryOperationExpression	& self -> zone		5618698	1					
ANR	5618745	UnaryOperator	&		5618698	0					
ANR	5618746	PtrMemberAccess	self -> zone		5618698	1					
ANR	5618747	Identifier	self		5618698	0					
ANR	5618748	Identifier	zone		5618698	1					
ANR	5618749	Argument	self -> zone0		5618698	2					
ANR	5618750	PtrMemberAccess	self -> zone0		5618698	0					
ANR	5618751	Identifier	self		5618698	0					
ANR	5618752	Identifier	zone0		5618698	1					
ANR	5618753	Argument	& self -> max_zone_count		5618698	3					
ANR	5618754	UnaryOperationExpression	& self -> max_zone_count		5618698	0					
ANR	5618755	UnaryOperator	&		5618698	0					
ANR	5618756	PtrMemberAccess	self -> max_zone_count		5618698	1					
ANR	5618757	Identifier	self		5618698	0					
ANR	5618758	Identifier	max_zone_count		5618698	1					
ANR	5618759	Argument	sizeof ( self -> zone0 ) / count_of ( self -> zone0 )		5618698	4					
ANR	5618760	MultiplicativeExpression	sizeof ( self -> zone0 ) / count_of ( self -> zone0 )		5618698	0		/			
ANR	5618761	SizeofExpression	sizeof ( self -> zone0 )		5618698	0					
ANR	5618762	Sizeof	sizeof		5618698	0					
ANR	5618763	PtrMemberAccess	self -> zone0		5618698	1					
ANR	5618764	Identifier	self		5618698	0					
ANR	5618765	Identifier	zone0		5618698	1					
ANR	5618766	CallExpression	count_of ( self -> zone0 )		5618698	1					
ANR	5618767	Callee	count_of		5618698	0					
ANR	5618768	Identifier	count_of		5618698	0					
ANR	5618769	ArgumentList	self -> zone0		5618698	1					
ANR	5618770	Argument	self -> zone0		5618698	0					
ANR	5618771	PtrMemberAccess	self -> zone0		5618698	0					
ANR	5618772	Identifier	self		5618698	0					
ANR	5618773	Identifier	zone0		5618698	1					
ANR	5618774	Argument	"max ( T1_MAX_ALIGNMENT_ZONES , count )"		5618698	5					
ANR	5618775	CallExpression	"max ( T1_MAX_ALIGNMENT_ZONES , count )"		5618698	0					
ANR	5618776	Callee	max		5618698	0					
ANR	5618777	Identifier	max		5618698	0					
ANR	5618778	ArgumentList	T1_MAX_ALIGNMENT_ZONES		5618698	1					
ANR	5618779	Argument	T1_MAX_ALIGNMENT_ZONES		5618698	0					
ANR	5618780	Identifier	T1_MAX_ALIGNMENT_ZONES		5618698	0					
ANR	5618781	Argument	count		5618698	1					
ANR	5618782	Identifier	count		5618698	0					
ANR	5618783	Argument	s_zone_array		5618698	6					
ANR	5618784	Identifier	s_zone_array		5618698	0					
ANR	5618785	ExpressionStatement	return_error ( gs_error_VMerror )	671:16:26647:26677	5618698	1	True				
ANR	5618786	CallExpression	return_error ( gs_error_VMerror )		5618698	0					
ANR	5618787	Callee	return_error		5618698	0					
ANR	5618788	Identifier	return_error		5618698	0					
ANR	5618789	ArgumentList	gs_error_VMerror		5618698	1					
ANR	5618790	Argument	gs_error_VMerror		5618698	0					
ANR	5618791	Identifier	gs_error_VMerror		5618698	0					
ANR	5618792	ForStatement	for ( i = 0 ; i < count2 ; i ++ )		5618698	1					
ANR	5618793	ForInit	i = 0 ;	672:13:26692:26697	5618698	0	True				
ANR	5618794	AssignmentExpression	i = 0		5618698	0		=			
ANR	5618795	Identifier	i		5618698	0					
ANR	5618796	PrimaryExpression	0		5618698	1					
ANR	5618797	Condition	i < count2	672:20:26699:26708	5618698	1	True				
ANR	5618798	RelationalExpression	i < count2		5618698	0		<			
ANR	5618799	Identifier	i		5618698	0					
ANR	5618800	Identifier	count2		5618698	1					
ANR	5618801	PostIncDecOperationExpression	i ++	672:32:26711:26713	5618698	2	True				
ANR	5618802	Identifier	i		5618698	0					
ANR	5618803	IncDec	++		5618698	1					
ANR	5618804	ExpressionStatement	"t1_hinter__make_zone ( self , & self -> zone [ self -> zone_count + i ] , blues + i + i , type , self -> blue_fuzz )"	673:12:26728:26827	5618698	3	True				
ANR	5618805	CallExpression	"t1_hinter__make_zone ( self , & self -> zone [ self -> zone_count + i ] , blues + i + i , type , self -> blue_fuzz )"		5618698	0					
ANR	5618806	Callee	t1_hinter__make_zone		5618698	0					
ANR	5618807	Identifier	t1_hinter__make_zone		5618698	0					
ANR	5618808	ArgumentList	self		5618698	1					
ANR	5618809	Argument	self		5618698	0					
ANR	5618810	Identifier	self		5618698	0					
ANR	5618811	Argument	& self -> zone [ self -> zone_count + i ]		5618698	1					
ANR	5618812	UnaryOperationExpression	& self -> zone [ self -> zone_count + i ]		5618698	0					
ANR	5618813	UnaryOperator	&		5618698	0					
ANR	5618814	ArrayIndexing	self -> zone [ self -> zone_count + i ]		5618698	1					
ANR	5618815	PtrMemberAccess	self -> zone		5618698	0					
ANR	5618816	Identifier	self		5618698	0					
ANR	5618817	Identifier	zone		5618698	1					
ANR	5618818	AdditiveExpression	self -> zone_count + i		5618698	1		+			
ANR	5618819	PtrMemberAccess	self -> zone_count		5618698	0					
ANR	5618820	Identifier	self		5618698	0					
ANR	5618821	Identifier	zone_count		5618698	1					
ANR	5618822	Identifier	i		5618698	1					
ANR	5618823	Argument	blues + i + i		5618698	2					
ANR	5618824	AdditiveExpression	blues + i + i		5618698	0		+			
ANR	5618825	Identifier	blues		5618698	0					
ANR	5618826	AdditiveExpression	i + i		5618698	1		+			
ANR	5618827	Identifier	i		5618698	0					
ANR	5618828	Identifier	i		5618698	1					
ANR	5618829	Argument	type		5618698	3					
ANR	5618830	Identifier	type		5618698	0					
ANR	5618831	Argument	self -> blue_fuzz		5618698	4					
ANR	5618832	PtrMemberAccess	self -> blue_fuzz		5618698	0					
ANR	5618833	Identifier	self		5618698	0					
ANR	5618834	Identifier	blue_fuzz		5618698	1					
ANR	5618835	ExpressionStatement	self -> zone_count += count2	674:8:26837:26863	5618698	2	True				
ANR	5618836	AssignmentExpression	self -> zone_count += count2		5618698	0		+=			
ANR	5618837	PtrMemberAccess	self -> zone_count		5618698	0					
ANR	5618838	Identifier	self		5618698	0					
ANR	5618839	Identifier	zone_count		5618698	1					
ANR	5618840	Identifier	count2		5618698	1					
ANR	5618841	ElseStatement	else		5618698	0					
ANR	5618842	CompoundStatement		15:8:731:743	5618698	0					
ANR	5618843	IdentifierDeclStatement	t1_zone zone ;	677:8:26939:26951	5618698	0	True				
ANR	5618844	IdentifierDecl	zone		5618698	0					
ANR	5618845	IdentifierDeclType	t1_zone		5618698	0					
ANR	5618846	Identifier	zone		5618698	1					
ANR	5618847	ForStatement	for ( i = 0 ; i < count2 ; i ++ )		5618698	1					
ANR	5618848	ForInit	i = 0 ;	678:13:26966:26971	5618698	0	True				
ANR	5618849	AssignmentExpression	i = 0		5618698	0		=			
ANR	5618850	Identifier	i		5618698	0					
ANR	5618851	PrimaryExpression	0		5618698	1					
ANR	5618852	Condition	i < count2	678:20:26973:26982	5618698	1	True				
ANR	5618853	RelationalExpression	i < count2		5618698	0		<			
ANR	5618854	Identifier	i		5618698	0					
ANR	5618855	Identifier	count2		5618698	1					
ANR	5618856	PostIncDecOperationExpression	i ++	678:32:26985:26987	5618698	2	True				
ANR	5618857	Identifier	i		5618698	0					
ANR	5618858	IncDec	++		5618698	1					
ANR	5618859	CompoundStatement		16:37:782:782	5618698	3					
ANR	5618860	ExpressionStatement	"t1_hinter__make_zone ( self , & zone , blues + i , type , self -> blue_fuzz )"	679:12:27004:27071	5618698	0	True				
ANR	5618861	CallExpression	"t1_hinter__make_zone ( self , & zone , blues + i , type , self -> blue_fuzz )"		5618698	0					
ANR	5618862	Callee	t1_hinter__make_zone		5618698	0					
ANR	5618863	Identifier	t1_hinter__make_zone		5618698	0					
ANR	5618864	ArgumentList	self		5618698	1					
ANR	5618865	Argument	self		5618698	0					
ANR	5618866	Identifier	self		5618698	0					
ANR	5618867	Argument	& zone		5618698	1					
ANR	5618868	UnaryOperationExpression	& zone		5618698	0					
ANR	5618869	UnaryOperator	&		5618698	0					
ANR	5618870	Identifier	zone		5618698	1					
ANR	5618871	Argument	blues + i		5618698	2					
ANR	5618872	AdditiveExpression	blues + i		5618698	0		+			
ANR	5618873	Identifier	blues		5618698	0					
ANR	5618874	Identifier	i		5618698	1					
ANR	5618875	Argument	type		5618698	3					
ANR	5618876	Identifier	type		5618698	0					
ANR	5618877	Argument	self -> blue_fuzz		5618698	4					
ANR	5618878	PtrMemberAccess	self -> blue_fuzz		5618698	0					
ANR	5618879	Identifier	self		5618698	0					
ANR	5618880	Identifier	blue_fuzz		5618698	1					
ANR	5618881	ForStatement	for ( j = 0 ; j < self -> zone_count ; j ++ )		5618698	1					
ANR	5618882	ForInit	j = 0 ;	680:17:27090:27095	5618698	0	True				
ANR	5618883	AssignmentExpression	j = 0		5618698	0		=			
ANR	5618884	Identifier	j		5618698	0					
ANR	5618885	PrimaryExpression	0		5618698	1					
ANR	5618886	Condition	j < self -> zone_count	680:24:27097:27114	5618698	1	True				
ANR	5618887	RelationalExpression	j < self -> zone_count		5618698	0		<			
ANR	5618888	Identifier	j		5618698	0					
ANR	5618889	PtrMemberAccess	self -> zone_count		5618698	1					
ANR	5618890	Identifier	self		5618698	0					
ANR	5618891	Identifier	zone_count		5618698	1					
ANR	5618892	PostIncDecOperationExpression	j ++	680:44:27117:27119	5618698	2	True				
ANR	5618893	Identifier	j		5618698	0					
ANR	5618894	IncDec	++		5618698	1					
ANR	5618895	CompoundStatement		19:16:932:963	5618698	3					
ANR	5618896	IdentifierDeclStatement	t1_zone * zone1 = & self -> zone [ j ] ;	681:16:27140:27171	5618698	0	True				
ANR	5618897	IdentifierDecl	* zone1 = & self -> zone [ j ]		5618698	0					
ANR	5618898	IdentifierDeclType	t1_zone *		5618698	0					
ANR	5618899	Identifier	zone1		5618698	1					
ANR	5618900	AssignmentExpression	* zone1 = & self -> zone [ j ]		5618698	2		=			
ANR	5618901	Identifier	zone1		5618698	0					
ANR	5618902	UnaryOperationExpression	& self -> zone [ j ]		5618698	1					
ANR	5618903	UnaryOperator	&		5618698	0					
ANR	5618904	ArrayIndexing	self -> zone [ j ]		5618698	1					
ANR	5618905	PtrMemberAccess	self -> zone		5618698	0					
ANR	5618906	Identifier	self		5618698	0					
ANR	5618907	Identifier	zone		5618698	1					
ANR	5618908	Identifier	j		5618698	1					
ANR	5618909	IfStatement	if ( any_abs ( zone . y - zone1 -> y ) * self -> heigt_transform_coef <= 1 && any_abs ( zone . overshoot_y - zone1 -> overshoot_y ) * self -> heigt_transform_coef <= 1 )		5618698	1					
ANR	5618910	Condition	any_abs ( zone . y - zone1 -> y ) * self -> heigt_transform_coef <= 1 && any_abs ( zone . overshoot_y - zone1 -> overshoot_y ) * self -> heigt_transform_coef <= 1	682:20:27193:27376	5618698	0	True				
ANR	5618911	AndExpression	any_abs ( zone . y - zone1 -> y ) * self -> heigt_transform_coef <= 1 && any_abs ( zone . overshoot_y - zone1 -> overshoot_y ) * self -> heigt_transform_coef <= 1		5618698	0		&&			
ANR	5618912	RelationalExpression	any_abs ( zone . y - zone1 -> y ) * self -> heigt_transform_coef <= 1		5618698	0		<=			
ANR	5618913	MultiplicativeExpression	any_abs ( zone . y - zone1 -> y ) * self -> heigt_transform_coef		5618698	0		*			
ANR	5618914	CallExpression	any_abs ( zone . y - zone1 -> y )		5618698	0					
ANR	5618915	Callee	any_abs		5618698	0					
ANR	5618916	Identifier	any_abs		5618698	0					
ANR	5618917	ArgumentList	zone . y - zone1 -> y		5618698	1					
ANR	5618918	Argument	zone . y - zone1 -> y		5618698	0					
ANR	5618919	AdditiveExpression	zone . y - zone1 -> y		5618698	0		-			
ANR	5618920	MemberAccess	zone . y		5618698	0					
ANR	5618921	Identifier	zone		5618698	0					
ANR	5618922	Identifier	y		5618698	1					
ANR	5618923	PtrMemberAccess	zone1 -> y		5618698	1					
ANR	5618924	Identifier	zone1		5618698	0					
ANR	5618925	Identifier	y		5618698	1					
ANR	5618926	PtrMemberAccess	self -> heigt_transform_coef		5618698	1					
ANR	5618927	Identifier	self		5618698	0					
ANR	5618928	Identifier	heigt_transform_coef		5618698	1					
ANR	5618929	PrimaryExpression	1		5618698	1					
ANR	5618930	RelationalExpression	any_abs ( zone . overshoot_y - zone1 -> overshoot_y ) * self -> heigt_transform_coef <= 1		5618698	1		<=			
ANR	5618931	MultiplicativeExpression	any_abs ( zone . overshoot_y - zone1 -> overshoot_y ) * self -> heigt_transform_coef		5618698	0		*			
ANR	5618932	CallExpression	any_abs ( zone . overshoot_y - zone1 -> overshoot_y )		5618698	0					
ANR	5618933	Callee	any_abs		5618698	0					
ANR	5618934	Identifier	any_abs		5618698	0					
ANR	5618935	ArgumentList	zone . overshoot_y - zone1 -> overshoot_y		5618698	1					
ANR	5618936	Argument	zone . overshoot_y - zone1 -> overshoot_y		5618698	0					
ANR	5618937	AdditiveExpression	zone . overshoot_y - zone1 -> overshoot_y		5618698	0		-			
ANR	5618938	MemberAccess	zone . overshoot_y		5618698	0					
ANR	5618939	Identifier	zone		5618698	0					
ANR	5618940	Identifier	overshoot_y		5618698	1					
ANR	5618941	PtrMemberAccess	zone1 -> overshoot_y		5618698	1					
ANR	5618942	Identifier	zone1		5618698	0					
ANR	5618943	Identifier	overshoot_y		5618698	1					
ANR	5618944	PtrMemberAccess	self -> heigt_transform_coef		5618698	1					
ANR	5618945	Identifier	self		5618698	0					
ANR	5618946	Identifier	heigt_transform_coef		5618698	1					
ANR	5618947	PrimaryExpression	1		5618698	1					
ANR	5618948	ExpressionStatement	* zone1 = zone	684:20:27399:27412	5618698	1	True				
ANR	5618949	AssignmentExpression	* zone1 = zone		5618698	0		=			
ANR	5618950	UnaryOperationExpression	* zone1		5618698	0					
ANR	5618951	UnaryOperator	*		5618698	0					
ANR	5618952	Identifier	zone1		5618698	1					
ANR	5618953	Identifier	zone		5618698	1					
ANR	5618954	ReturnStatement	return 0 ;	688:4:27448:27456	5618698	2	True				
ANR	5618955	PrimaryExpression	0		5618698	0					
ANR	5618956	ReturnType	static int		5618698	1					
ANR	5618957	Identifier	t1_hinter__set_alignment_zones		5618698	2					
ANR	5618958	ParameterList	"gs_memory_t * mem , t1_hinter * self , float * blues , int count , enum t1_zone_type type , bool family"		5618698	3					
ANR	5618959	Parameter	gs_memory_t * mem	662:42:26108:26123	5618698	0	True				
ANR	5618960	ParameterType	gs_memory_t *		5618698	0					
ANR	5618961	Identifier	mem		5618698	1					
ANR	5618962	Parameter	t1_hinter * self	662:60:26126:26141	5618698	1	True				
ANR	5618963	ParameterType	t1_hinter *		5618698	0					
ANR	5618964	Identifier	self		5618698	1					
ANR	5618965	Parameter	float * blues	662:78:26144:26156	5618698	2	True				
ANR	5618966	ParameterType	float *		5618698	0					
ANR	5618967	Identifier	blues		5618698	1					
ANR	5618968	Parameter	int count	662:93:26159:26167	5618698	3	True				
ANR	5618969	ParameterType	int		5618698	0					
ANR	5618970	Identifier	count		5618698	1					
ANR	5618971	Parameter	enum t1_zone_type type	662:104:26170:26191	5618698	4	True				
ANR	5618972	ParameterType	enum t1_zone_type		5618698	0					
ANR	5618973	Identifier	type		5618698	1					
ANR	5618974	Parameter	bool family	662:128:26194:26204	5618698	5	True				
ANR	5618975	ParameterType	bool		5618698	0					
ANR	5618976	Identifier	family		5618698	1					
ANR	5618977	CFGEntryNode	ENTRY		5618698		True				
ANR	5618978	CFGExitNode	EXIT		5618698		True				
ANR	5618979	Symbol	count2		5618698						
ANR	5618980	Symbol	* zone1		5618698						
ANR	5618981	Symbol	T1_MAX_ALIGNMENT_ZONES		5618698						
ANR	5618982	Symbol	s_zone_array		5618698						
ANR	5618983	Symbol	t1_hinter__realloc_array		5618698						
ANR	5618984	Symbol	self -> zone		5618698						
ANR	5618985	Symbol	type		5618698						
ANR	5618986	Symbol	blues		5618698						
ANR	5618987	Symbol	self -> zone_count		5618698						
ANR	5618988	Symbol	mem		5618698						
ANR	5618989	Symbol	count_of		5618698						
ANR	5618990	Symbol	zone		5618698						
ANR	5618991	Symbol	any_abs		5618698						
ANR	5618992	Symbol	& self -> zone		5618698						
ANR	5618993	Symbol	self -> blue_fuzz		5618698						
ANR	5618994	Symbol	self -> max_zone_count		5618698						
ANR	5618995	Symbol	max		5618698						
ANR	5618996	Symbol	zone . y		5618698						
ANR	5618997	Symbol	* self		5618698						
ANR	5618998	Symbol	self -> heigt_transform_coef		5618698						
ANR	5618999	Symbol	count		5618698						
ANR	5619000	Symbol	i		5618698						
ANR	5619001	Symbol	zone1 -> overshoot_y		5618698						
ANR	5619002	Symbol	j		5618698						
ANR	5619003	Symbol	zone1		5618698						
ANR	5619004	Symbol	gs_error_VMerror		5618698						
ANR	5619005	Symbol	& zone		5618698						
ANR	5619006	Symbol	self -> zone0		5618698						
ANR	5619007	Symbol	& self -> max_zone_count		5618698						
ANR	5619008	Symbol	self		5618698						
ANR	5619009	Symbol	family		5618698						
ANR	5619010	Symbol	zone1 -> y		5618698						
ANR	5619011	Symbol	zone . overshoot_y		5618698						
ANR	5619012	Function	t1_hinter__set_stem_snap	691:0:27461:30489							
ANR	5619013	FunctionDef	"t1_hinter__set_stem_snap (gs_memory_t * mem , t1_hinter * self , float * value , int count , unsigned short hv)"		5619012	0					
ANR	5619014	CompoundStatement		692:0:27578:30489	5619012	0					
ANR	5619015	IdentifierDeclStatement	"int count0 = self -> stem_snap_count [ hv ] , i , j ;"	692:3:27582:27626	5619012	0	True				
ANR	5619016	IdentifierDecl	count0 = self -> stem_snap_count [ hv ]		5619012	0					
ANR	5619017	IdentifierDeclType	int		5619012	0					
ANR	5619018	Identifier	count0		5619012	1					
ANR	5619019	AssignmentExpression	count0 = self -> stem_snap_count [ hv ]		5619012	2		=			
ANR	5619020	Identifier	count0		5619012	0					
ANR	5619021	ArrayIndexing	self -> stem_snap_count [ hv ]		5619012	1					
ANR	5619022	PtrMemberAccess	self -> stem_snap_count		5619012	0					
ANR	5619023	Identifier	self		5619012	0					
ANR	5619024	Identifier	stem_snap_count		5619012	1					
ANR	5619025	Identifier	hv		5619012	1					
ANR	5619026	IdentifierDecl	i		5619012	1					
ANR	5619027	IdentifierDeclType	int		5619012	0					
ANR	5619028	Identifier	i		5619012	1					
ANR	5619029	IdentifierDecl	j		5619012	2					
ANR	5619030	IdentifierDeclType	int		5619012	0					
ANR	5619031	Identifier	j		5619012	1					
ANR	5619032	IdentifierDeclStatement	t1_glyph_space_coord pixel_g = ( ! hv ? self -> pixel_gh : self -> pixel_gw ) ;	693:4:27632:27702	5619012	1	True				
ANR	5619033	IdentifierDecl	pixel_g = ( ! hv ? self -> pixel_gh : self -> pixel_gw )		5619012	0					
ANR	5619034	IdentifierDeclType	t1_glyph_space_coord		5619012	0					
ANR	5619035	Identifier	pixel_g		5619012	1					
ANR	5619036	AssignmentExpression	pixel_g = ( ! hv ? self -> pixel_gh : self -> pixel_gw )		5619012	2		=			
ANR	5619037	Identifier	pixel_g		5619012	0					
ANR	5619038	ConditionalExpression	! hv ? self -> pixel_gh : self -> pixel_gw		5619012	1					
ANR	5619039	Condition	! hv		5619012	0					
ANR	5619040	UnaryOperationExpression	! hv		5619012	0					
ANR	5619041	UnaryOperator	!		5619012	0					
ANR	5619042	Identifier	hv		5619012	1					
ANR	5619043	PtrMemberAccess	self -> pixel_gh		5619012	1					
ANR	5619044	Identifier	self		5619012	0					
ANR	5619045	Identifier	pixel_gh		5619012	1					
ANR	5619046	PtrMemberAccess	self -> pixel_gw		5619012	2					
ANR	5619047	Identifier	self		5619012	0					
ANR	5619048	Identifier	pixel_gw		5619012	1					
ANR	5619049	IfStatement	if ( pixel_g == 0 )		5619012	2					
ANR	5619050	Condition	pixel_g == 0	695:8:27713:27724	5619012	0	True				
ANR	5619051	EqualityExpression	pixel_g == 0		5619012	0		==			
ANR	5619052	Identifier	pixel_g		5619012	0					
ANR	5619053	PrimaryExpression	0		5619012	1					
ANR	5619054	ReturnStatement	return 0 ;	696:8:27735:27743	5619012	1	True				
ANR	5619055	PrimaryExpression	0		5619012	0					
ANR	5619056	IfStatement	if ( count + count0 >= self -> max_stem_snap_count [ hv ] )		5619012	3					
ANR	5619057	Condition	count + count0 >= self -> max_stem_snap_count [ hv ]	697:8:27753:27799	5619012	0	True				
ANR	5619058	RelationalExpression	count + count0 >= self -> max_stem_snap_count [ hv ]		5619012	0		>=			
ANR	5619059	AdditiveExpression	count + count0		5619012	0		+			
ANR	5619060	Identifier	count		5619012	0					
ANR	5619061	Identifier	count0		5619012	1					
ANR	5619062	ArrayIndexing	self -> max_stem_snap_count [ hv ]		5619012	1					
ANR	5619063	PtrMemberAccess	self -> max_stem_snap_count		5619012	0					
ANR	5619064	Identifier	self		5619012	0					
ANR	5619065	Identifier	max_stem_snap_count		5619012	1					
ANR	5619066	Identifier	hv		5619012	1					
ANR	5619067	IfStatement	"if ( t1_hinter__realloc_array ( mem , ( void * * ) & self -> stem_snap [ hv ] , self -> stem_snap0 [ hv ] , & self -> max_stem_snap_count [ hv ] , sizeof ( self -> stem_snap0 [ 0 ] ) / count_of ( self -> stem_snap0 [ 0 ] ) , max ( T1_MAX_STEM_SNAPS , count ) , s_stem_snap_array ) )"		5619012	1					
ANR	5619068	Condition	"t1_hinter__realloc_array ( mem , ( void * * ) & self -> stem_snap [ hv ] , self -> stem_snap0 [ hv ] , & self -> max_stem_snap_count [ hv ] , sizeof ( self -> stem_snap0 [ 0 ] ) / count_of ( self -> stem_snap0 [ 0 ] ) , max ( T1_MAX_STEM_SNAPS , count ) , s_stem_snap_array )"	698:11:27813:28117	5619012	0	True				
ANR	5619069	CallExpression	"t1_hinter__realloc_array ( mem , ( void * * ) & self -> stem_snap [ hv ] , self -> stem_snap0 [ hv ] , & self -> max_stem_snap_count [ hv ] , sizeof ( self -> stem_snap0 [ 0 ] ) / count_of ( self -> stem_snap0 [ 0 ] ) , max ( T1_MAX_STEM_SNAPS , count ) , s_stem_snap_array )"		5619012	0					
ANR	5619070	Callee	t1_hinter__realloc_array		5619012	0					
ANR	5619071	Identifier	t1_hinter__realloc_array		5619012	0					
ANR	5619072	ArgumentList	mem		5619012	1					
ANR	5619073	Argument	mem		5619012	0					
ANR	5619074	Identifier	mem		5619012	0					
ANR	5619075	Argument	( void * * ) & self -> stem_snap [ hv ]		5619012	1					
ANR	5619076	CastExpression	( void * * ) & self -> stem_snap [ hv ]		5619012	0					
ANR	5619077	CastTarget	void * *		5619012	0					
ANR	5619078	UnaryOperationExpression	& self -> stem_snap [ hv ]		5619012	1					
ANR	5619079	UnaryOperator	&		5619012	0					
ANR	5619080	ArrayIndexing	self -> stem_snap [ hv ]		5619012	1					
ANR	5619081	PtrMemberAccess	self -> stem_snap		5619012	0					
ANR	5619082	Identifier	self		5619012	0					
ANR	5619083	Identifier	stem_snap		5619012	1					
ANR	5619084	Identifier	hv		5619012	1					
ANR	5619085	Argument	self -> stem_snap0 [ hv ]		5619012	2					
ANR	5619086	ArrayIndexing	self -> stem_snap0 [ hv ]		5619012	0					
ANR	5619087	PtrMemberAccess	self -> stem_snap0		5619012	0					
ANR	5619088	Identifier	self		5619012	0					
ANR	5619089	Identifier	stem_snap0		5619012	1					
ANR	5619090	Identifier	hv		5619012	1					
ANR	5619091	Argument	& self -> max_stem_snap_count [ hv ]		5619012	3					
ANR	5619092	UnaryOperationExpression	& self -> max_stem_snap_count [ hv ]		5619012	0					
ANR	5619093	UnaryOperator	&		5619012	0					
ANR	5619094	ArrayIndexing	self -> max_stem_snap_count [ hv ]		5619012	1					
ANR	5619095	PtrMemberAccess	self -> max_stem_snap_count		5619012	0					
ANR	5619096	Identifier	self		5619012	0					
ANR	5619097	Identifier	max_stem_snap_count		5619012	1					
ANR	5619098	Identifier	hv		5619012	1					
ANR	5619099	Argument	sizeof ( self -> stem_snap0 [ 0 ] ) / count_of ( self -> stem_snap0 [ 0 ] )		5619012	4					
ANR	5619100	MultiplicativeExpression	sizeof ( self -> stem_snap0 [ 0 ] ) / count_of ( self -> stem_snap0 [ 0 ] )		5619012	0		/			
ANR	5619101	SizeofExpression	sizeof ( self -> stem_snap0 [ 0 ] )		5619012	0					
ANR	5619102	Sizeof	sizeof		5619012	0					
ANR	5619103	ArrayIndexing	self -> stem_snap0 [ 0 ]		5619012	1					
ANR	5619104	PtrMemberAccess	self -> stem_snap0		5619012	0					
ANR	5619105	Identifier	self		5619012	0					
ANR	5619106	Identifier	stem_snap0		5619012	1					
ANR	5619107	PrimaryExpression	0		5619012	1					
ANR	5619108	CallExpression	count_of ( self -> stem_snap0 [ 0 ] )		5619012	1					
ANR	5619109	Callee	count_of		5619012	0					
ANR	5619110	Identifier	count_of		5619012	0					
ANR	5619111	ArgumentList	self -> stem_snap0 [ 0 ]		5619012	1					
ANR	5619112	Argument	self -> stem_snap0 [ 0 ]		5619012	0					
ANR	5619113	ArrayIndexing	self -> stem_snap0 [ 0 ]		5619012	0					
ANR	5619114	PtrMemberAccess	self -> stem_snap0		5619012	0					
ANR	5619115	Identifier	self		5619012	0					
ANR	5619116	Identifier	stem_snap0		5619012	1					
ANR	5619117	PrimaryExpression	0		5619012	1					
ANR	5619118	Argument	"max ( T1_MAX_STEM_SNAPS , count )"		5619012	5					
ANR	5619119	CallExpression	"max ( T1_MAX_STEM_SNAPS , count )"		5619012	0					
ANR	5619120	Callee	max		5619012	0					
ANR	5619121	Identifier	max		5619012	0					
ANR	5619122	ArgumentList	T1_MAX_STEM_SNAPS		5619012	1					
ANR	5619123	Argument	T1_MAX_STEM_SNAPS		5619012	0					
ANR	5619124	Identifier	T1_MAX_STEM_SNAPS		5619012	0					
ANR	5619125	Argument	count		5619012	1					
ANR	5619126	Identifier	count		5619012	0					
ANR	5619127	Argument	s_stem_snap_array		5619012	6					
ANR	5619128	Identifier	s_stem_snap_array		5619012	0					
ANR	5619129	ExpressionStatement	return_error ( gs_error_VMerror )	701:12:28132:28162	5619012	1	True				
ANR	5619130	CallExpression	return_error ( gs_error_VMerror )		5619012	0					
ANR	5619131	Callee	return_error		5619012	0					
ANR	5619132	Identifier	return_error		5619012	0					
ANR	5619133	ArgumentList	gs_error_VMerror		5619012	1					
ANR	5619134	Argument	gs_error_VMerror		5619012	0					
ANR	5619135	Identifier	gs_error_VMerror		5619012	0					
ANR	5619136	IfStatement	if ( count + count0 >= self -> max_stem_snap_vote_count )		5619012	4					
ANR	5619137	Condition	count + count0 >= self -> max_stem_snap_vote_count	702:8:28172:28219	5619012	0	True				
ANR	5619138	RelationalExpression	count + count0 >= self -> max_stem_snap_vote_count		5619012	0		>=			
ANR	5619139	AdditiveExpression	count + count0		5619012	0		+			
ANR	5619140	Identifier	count		5619012	0					
ANR	5619141	Identifier	count0		5619012	1					
ANR	5619142	PtrMemberAccess	self -> max_stem_snap_vote_count		5619012	1					
ANR	5619143	Identifier	self		5619012	0					
ANR	5619144	Identifier	max_stem_snap_vote_count		5619012	1					
ANR	5619145	IfStatement	"if ( t1_hinter__realloc_array ( mem , ( void * * ) & self -> stem_snap_vote , self -> stem_snap_vote0 , & self -> max_stem_snap_vote_count , sizeof ( self -> stem_snap_vote0 ) / count_of ( self -> stem_snap_vote0 ) , max ( T1_MAX_STEM_SNAPS , count ) , s_stem_snap_vote_array ) )"		5619012	1					
ANR	5619146	Condition	"t1_hinter__realloc_array ( mem , ( void * * ) & self -> stem_snap_vote , self -> stem_snap_vote0 , & self -> max_stem_snap_vote_count , sizeof ( self -> stem_snap_vote0 ) / count_of ( self -> stem_snap_vote0 ) , max ( T1_MAX_STEM_SNAPS , count ) , s_stem_snap_vote_array )"	703:11:28233:28549	5619012	0	True				
ANR	5619147	CallExpression	"t1_hinter__realloc_array ( mem , ( void * * ) & self -> stem_snap_vote , self -> stem_snap_vote0 , & self -> max_stem_snap_vote_count , sizeof ( self -> stem_snap_vote0 ) / count_of ( self -> stem_snap_vote0 ) , max ( T1_MAX_STEM_SNAPS , count ) , s_stem_snap_vote_array )"		5619012	0					
ANR	5619148	Callee	t1_hinter__realloc_array		5619012	0					
ANR	5619149	Identifier	t1_hinter__realloc_array		5619012	0					
ANR	5619150	ArgumentList	mem		5619012	1					
ANR	5619151	Argument	mem		5619012	0					
ANR	5619152	Identifier	mem		5619012	0					
ANR	5619153	Argument	( void * * ) & self -> stem_snap_vote		5619012	1					
ANR	5619154	CastExpression	( void * * ) & self -> stem_snap_vote		5619012	0					
ANR	5619155	CastTarget	void * *		5619012	0					
ANR	5619156	UnaryOperationExpression	& self -> stem_snap_vote		5619012	1					
ANR	5619157	UnaryOperator	&		5619012	0					
ANR	5619158	PtrMemberAccess	self -> stem_snap_vote		5619012	1					
ANR	5619159	Identifier	self		5619012	0					
ANR	5619160	Identifier	stem_snap_vote		5619012	1					
ANR	5619161	Argument	self -> stem_snap_vote0		5619012	2					
ANR	5619162	PtrMemberAccess	self -> stem_snap_vote0		5619012	0					
ANR	5619163	Identifier	self		5619012	0					
ANR	5619164	Identifier	stem_snap_vote0		5619012	1					
ANR	5619165	Argument	& self -> max_stem_snap_vote_count		5619012	3					
ANR	5619166	UnaryOperationExpression	& self -> max_stem_snap_vote_count		5619012	0					
ANR	5619167	UnaryOperator	&		5619012	0					
ANR	5619168	PtrMemberAccess	self -> max_stem_snap_vote_count		5619012	1					
ANR	5619169	Identifier	self		5619012	0					
ANR	5619170	Identifier	max_stem_snap_vote_count		5619012	1					
ANR	5619171	Argument	sizeof ( self -> stem_snap_vote0 ) / count_of ( self -> stem_snap_vote0 )		5619012	4					
ANR	5619172	MultiplicativeExpression	sizeof ( self -> stem_snap_vote0 ) / count_of ( self -> stem_snap_vote0 )		5619012	0		/			
ANR	5619173	SizeofExpression	sizeof ( self -> stem_snap_vote0 )		5619012	0					
ANR	5619174	Sizeof	sizeof		5619012	0					
ANR	5619175	PtrMemberAccess	self -> stem_snap_vote0		5619012	1					
ANR	5619176	Identifier	self		5619012	0					
ANR	5619177	Identifier	stem_snap_vote0		5619012	1					
ANR	5619178	CallExpression	count_of ( self -> stem_snap_vote0 )		5619012	1					
ANR	5619179	Callee	count_of		5619012	0					
ANR	5619180	Identifier	count_of		5619012	0					
ANR	5619181	ArgumentList	self -> stem_snap_vote0		5619012	1					
ANR	5619182	Argument	self -> stem_snap_vote0		5619012	0					
ANR	5619183	PtrMemberAccess	self -> stem_snap_vote0		5619012	0					
ANR	5619184	Identifier	self		5619012	0					
ANR	5619185	Identifier	stem_snap_vote0		5619012	1					
ANR	5619186	Argument	"max ( T1_MAX_STEM_SNAPS , count )"		5619012	5					
ANR	5619187	CallExpression	"max ( T1_MAX_STEM_SNAPS , count )"		5619012	0					
ANR	5619188	Callee	max		5619012	0					
ANR	5619189	Identifier	max		5619012	0					
ANR	5619190	ArgumentList	T1_MAX_STEM_SNAPS		5619012	1					
ANR	5619191	Argument	T1_MAX_STEM_SNAPS		5619012	0					
ANR	5619192	Identifier	T1_MAX_STEM_SNAPS		5619012	0					
ANR	5619193	Argument	count		5619012	1					
ANR	5619194	Identifier	count		5619012	0					
ANR	5619195	Argument	s_stem_snap_vote_array		5619012	6					
ANR	5619196	Identifier	s_stem_snap_vote_array		5619012	0					
ANR	5619197	ExpressionStatement	return_error ( gs_error_VMerror )	706:12:28564:28594	5619012	1	True				
ANR	5619198	CallExpression	return_error ( gs_error_VMerror )		5619012	0					
ANR	5619199	Callee	return_error		5619012	0					
ANR	5619200	Identifier	return_error		5619012	0					
ANR	5619201	ArgumentList	gs_error_VMerror		5619012	1					
ANR	5619202	Argument	gs_error_VMerror		5619012	0					
ANR	5619203	Identifier	gs_error_VMerror		5619012	0					
ANR	5619204	IfStatement	if ( count == 1 || ( count > 0 && float2fixed ( value [ count - 1 ] - value [ 0 ] ) > pixel_g ) )		5619012	5					
ANR	5619205	Condition	count == 1 || ( count > 0 && float2fixed ( value [ count - 1 ] - value [ 0 ] ) > pixel_g )	707:8:28604:28682	5619012	0	True				
ANR	5619206	OrExpression	count == 1 || ( count > 0 && float2fixed ( value [ count - 1 ] - value [ 0 ] ) > pixel_g )		5619012	0		||			
ANR	5619207	EqualityExpression	count == 1		5619012	0		==			
ANR	5619208	Identifier	count		5619012	0					
ANR	5619209	PrimaryExpression	1		5619012	1					
ANR	5619210	AndExpression	count > 0 && float2fixed ( value [ count - 1 ] - value [ 0 ] ) > pixel_g		5619012	1		&&			
ANR	5619211	RelationalExpression	count > 0		5619012	0		>			
ANR	5619212	Identifier	count		5619012	0					
ANR	5619213	PrimaryExpression	0		5619012	1					
ANR	5619214	RelationalExpression	float2fixed ( value [ count - 1 ] - value [ 0 ] ) > pixel_g		5619012	1		>			
ANR	5619215	CallExpression	float2fixed ( value [ count - 1 ] - value [ 0 ] )		5619012	0					
ANR	5619216	Callee	float2fixed		5619012	0					
ANR	5619217	Identifier	float2fixed		5619012	0					
ANR	5619218	ArgumentList	value [ count - 1 ] - value [ 0 ]		5619012	1					
ANR	5619219	Argument	value [ count - 1 ] - value [ 0 ]		5619012	0					
ANR	5619220	AdditiveExpression	value [ count - 1 ] - value [ 0 ]		5619012	0		-			
ANR	5619221	ArrayIndexing	value [ count - 1 ]		5619012	0					
ANR	5619222	Identifier	value		5619012	0					
ANR	5619223	AdditiveExpression	count - 1		5619012	1		-			
ANR	5619224	Identifier	count		5619012	0					
ANR	5619225	PrimaryExpression	1		5619012	1					
ANR	5619226	ArrayIndexing	value [ 0 ]		5619012	1					
ANR	5619227	Identifier	value		5619012	0					
ANR	5619228	PrimaryExpression	0		5619012	1					
ANR	5619229	Identifier	pixel_g		5619012	1					
ANR	5619230	CompoundStatement		16:89:1106:1106	5619012	1					
ANR	5619231	ForStatement	for ( i = 0 ; i < count ; i ++ )		5619012	0					
ANR	5619232	ForInit	i = 0 ;	708:13:28700:28705	5619012	0	True				
ANR	5619233	AssignmentExpression	i = 0		5619012	0		=			
ANR	5619234	Identifier	i		5619012	0					
ANR	5619235	PrimaryExpression	0		5619012	1					
ANR	5619236	Condition	i < count	708:20:28707:28715	5619012	1	True				
ANR	5619237	RelationalExpression	i < count		5619012	0		<			
ANR	5619238	Identifier	i		5619012	0					
ANR	5619239	Identifier	count		5619012	1					
ANR	5619240	PostIncDecOperationExpression	i ++	708:31:28718:28720	5619012	2	True				
ANR	5619241	Identifier	i		5619012	0					
ANR	5619242	IncDec	++		5619012	1					
ANR	5619243	ExpressionStatement	self -> stem_snap [ hv ] [ i ] = float2fixed ( value [ i ] )	709:12:28735:28781	5619012	3	True				
ANR	5619244	AssignmentExpression	self -> stem_snap [ hv ] [ i ] = float2fixed ( value [ i ] )		5619012	0		=			
ANR	5619245	ArrayIndexing	self -> stem_snap [ hv ] [ i ]		5619012	0					
ANR	5619246	ArrayIndexing	self -> stem_snap [ hv ]		5619012	0					
ANR	5619247	PtrMemberAccess	self -> stem_snap		5619012	0					
ANR	5619248	Identifier	self		5619012	0					
ANR	5619249	Identifier	stem_snap		5619012	1					
ANR	5619250	Identifier	hv		5619012	1					
ANR	5619251	Identifier	i		5619012	1					
ANR	5619252	CallExpression	float2fixed ( value [ i ] )		5619012	1					
ANR	5619253	Callee	float2fixed		5619012	0					
ANR	5619254	Identifier	float2fixed		5619012	0					
ANR	5619255	ArgumentList	value [ i ]		5619012	1					
ANR	5619256	Argument	value [ i ]		5619012	0					
ANR	5619257	ArrayIndexing	value [ i ]		5619012	0					
ANR	5619258	Identifier	value		5619012	0					
ANR	5619259	Identifier	i		5619012	1					
ANR	5619260	ExpressionStatement	self -> stem_snap_count [ hv ] = count	710:8:28791:28824	5619012	1	True				
ANR	5619261	AssignmentExpression	self -> stem_snap_count [ hv ] = count		5619012	0		=			
ANR	5619262	ArrayIndexing	self -> stem_snap_count [ hv ]		5619012	0					
ANR	5619263	PtrMemberAccess	self -> stem_snap_count		5619012	0					
ANR	5619264	Identifier	self		5619012	0					
ANR	5619265	Identifier	stem_snap_count		5619012	1					
ANR	5619266	Identifier	hv		5619012	1					
ANR	5619267	Identifier	count		5619012	1					
ANR	5619268	ForStatement	for ( i = 0 ; i < count ; i ++ )		5619012	2					
ANR	5619269	ForInit	i = 0 ;	711:13:28839:28844	5619012	0	True				
ANR	5619270	AssignmentExpression	i = 0		5619012	0		=			
ANR	5619271	Identifier	i		5619012	0					
ANR	5619272	PrimaryExpression	0		5619012	1					
ANR	5619273	Condition	i < count	711:20:28846:28854	5619012	1	True				
ANR	5619274	RelationalExpression	i < count		5619012	0		<			
ANR	5619275	Identifier	i		5619012	0					
ANR	5619276	Identifier	count		5619012	1					
ANR	5619277	PostIncDecOperationExpression	i ++	711:31:28857:28859	5619012	2	True				
ANR	5619278	Identifier	i		5619012	0					
ANR	5619279	IncDec	++		5619012	1					
ANR	5619280	CompoundStatement		20:36:1283:1283	5619012	3					
ANR	5619281	ForStatement	for ( j = i + 1 ; j < count ; j ++ )		5619012	0					
ANR	5619282	ForInit	j = i + 1 ;	712:17:28881:28890	5619012	0	True				
ANR	5619283	AssignmentExpression	j = i + 1		5619012	0		=			
ANR	5619284	Identifier	j		5619012	0					
ANR	5619285	AdditiveExpression	i + 1		5619012	1		+			
ANR	5619286	Identifier	i		5619012	0					
ANR	5619287	PrimaryExpression	1		5619012	1					
ANR	5619288	Condition	j < count	712:28:28892:28900	5619012	1	True				
ANR	5619289	RelationalExpression	j < count		5619012	0		<			
ANR	5619290	Identifier	j		5619012	0					
ANR	5619291	Identifier	count		5619012	1					
ANR	5619292	PostIncDecOperationExpression	j ++	712:39:28903:28905	5619012	2	True				
ANR	5619293	Identifier	j		5619012	0					
ANR	5619294	IncDec	++		5619012	1					
ANR	5619295	IfStatement	if ( self -> stem_snap [ hv ] [ i ] > self -> stem_snap [ hv ] [ j ] )		5619012	3					
ANR	5619296	Condition	self -> stem_snap [ hv ] [ i ] > self -> stem_snap [ hv ] [ j ]	713:20:28928:28974	5619012	0	True				
ANR	5619297	RelationalExpression	self -> stem_snap [ hv ] [ i ] > self -> stem_snap [ hv ] [ j ]		5619012	0		>			
ANR	5619298	ArrayIndexing	self -> stem_snap [ hv ] [ i ]		5619012	0					
ANR	5619299	ArrayIndexing	self -> stem_snap [ hv ]		5619012	0					
ANR	5619300	PtrMemberAccess	self -> stem_snap		5619012	0					
ANR	5619301	Identifier	self		5619012	0					
ANR	5619302	Identifier	stem_snap		5619012	1					
ANR	5619303	Identifier	hv		5619012	1					
ANR	5619304	Identifier	i		5619012	1					
ANR	5619305	ArrayIndexing	self -> stem_snap [ hv ] [ j ]		5619012	1					
ANR	5619306	ArrayIndexing	self -> stem_snap [ hv ]		5619012	0					
ANR	5619307	PtrMemberAccess	self -> stem_snap		5619012	0					
ANR	5619308	Identifier	self		5619012	0					
ANR	5619309	Identifier	stem_snap		5619012	1					
ANR	5619310	Identifier	hv		5619012	1					
ANR	5619311	Identifier	j		5619012	1					
ANR	5619312	CompoundStatement		23:20:1420:1467	5619012	1					
ANR	5619313	IdentifierDeclStatement	t1_glyph_space_coord v = self -> stem_snap [ hv ] [ i ] ;	714:20:28999:29046	5619012	0	True				
ANR	5619314	IdentifierDecl	v = self -> stem_snap [ hv ] [ i ]		5619012	0					
ANR	5619315	IdentifierDeclType	t1_glyph_space_coord		5619012	0					
ANR	5619316	Identifier	v		5619012	1					
ANR	5619317	AssignmentExpression	v = self -> stem_snap [ hv ] [ i ]		5619012	2		=			
ANR	5619318	Identifier	v		5619012	0					
ANR	5619319	ArrayIndexing	self -> stem_snap [ hv ] [ i ]		5619012	1					
ANR	5619320	ArrayIndexing	self -> stem_snap [ hv ]		5619012	0					
ANR	5619321	PtrMemberAccess	self -> stem_snap		5619012	0					
ANR	5619322	Identifier	self		5619012	0					
ANR	5619323	Identifier	stem_snap		5619012	1					
ANR	5619324	Identifier	hv		5619012	1					
ANR	5619325	Identifier	i		5619012	1					
ANR	5619326	ExpressionStatement	self -> stem_snap [ hv ] [ i ] = self -> stem_snap [ hv ] [ j ]	716:20:29069:29116	5619012	1	True				
ANR	5619327	AssignmentExpression	self -> stem_snap [ hv ] [ i ] = self -> stem_snap [ hv ] [ j ]		5619012	0		=			
ANR	5619328	ArrayIndexing	self -> stem_snap [ hv ] [ i ]		5619012	0					
ANR	5619329	ArrayIndexing	self -> stem_snap [ hv ]		5619012	0					
ANR	5619330	PtrMemberAccess	self -> stem_snap		5619012	0					
ANR	5619331	Identifier	self		5619012	0					
ANR	5619332	Identifier	stem_snap		5619012	1					
ANR	5619333	Identifier	hv		5619012	1					
ANR	5619334	Identifier	i		5619012	1					
ANR	5619335	ArrayIndexing	self -> stem_snap [ hv ] [ j ]		5619012	1					
ANR	5619336	ArrayIndexing	self -> stem_snap [ hv ]		5619012	0					
ANR	5619337	PtrMemberAccess	self -> stem_snap		5619012	0					
ANR	5619338	Identifier	self		5619012	0					
ANR	5619339	Identifier	stem_snap		5619012	1					
ANR	5619340	Identifier	hv		5619012	1					
ANR	5619341	Identifier	j		5619012	1					
ANR	5619342	ExpressionStatement	self -> stem_snap [ hv ] [ j ] = v	717:20:29138:29164	5619012	2	True				
ANR	5619343	AssignmentExpression	self -> stem_snap [ hv ] [ j ] = v		5619012	0		=			
ANR	5619344	ArrayIndexing	self -> stem_snap [ hv ] [ j ]		5619012	0					
ANR	5619345	ArrayIndexing	self -> stem_snap [ hv ]		5619012	0					
ANR	5619346	PtrMemberAccess	self -> stem_snap		5619012	0					
ANR	5619347	Identifier	self		5619012	0					
ANR	5619348	Identifier	stem_snap		5619012	1					
ANR	5619349	Identifier	hv		5619012	1					
ANR	5619350	Identifier	j		5619012	1					
ANR	5619351	Identifier	v		5619012	1					
ANR	5619352	ForStatement	"for ( i = 1 , j = 0 ; i < count ; i ++ )"		5619012	3					
ANR	5619353	ForInit	"i = 1 , j = 0 ;"	720:13:29207:29219	5619012	0	True				
ANR	5619354	Expression	"i = 1 , j = 0"		5619012	0					
ANR	5619355	AssignmentExpression	i = 1		5619012	0		=			
ANR	5619356	Identifier	i		5619012	0					
ANR	5619357	PrimaryExpression	1		5619012	1					
ANR	5619358	AssignmentExpression	j = 0		5619012	1		=			
ANR	5619359	Identifier	j		5619012	0					
ANR	5619360	PrimaryExpression	0		5619012	1					
ANR	5619361	Condition	i < count	720:27:29221:29229	5619012	1	True				
ANR	5619362	RelationalExpression	i < count		5619012	0		<			
ANR	5619363	Identifier	i		5619012	0					
ANR	5619364	Identifier	count		5619012	1					
ANR	5619365	PostIncDecOperationExpression	i ++	720:38:29232:29234	5619012	2	True				
ANR	5619366	Identifier	i		5619012	0					
ANR	5619367	IncDec	++		5619012	1					
ANR	5619368	CompoundStatement		29:43:1658:1658	5619012	3					
ANR	5619369	IfStatement	if ( self -> stem_snap [ hv ] [ j ] != self -> stem_snap [ hv ] [ i ] )		5619012	0					
ANR	5619370	Condition	self -> stem_snap [ hv ] [ j ] != self -> stem_snap [ hv ] [ i ]	721:16:29255:29302	5619012	0	True				
ANR	5619371	EqualityExpression	self -> stem_snap [ hv ] [ j ] != self -> stem_snap [ hv ] [ i ]		5619012	0		!=			
ANR	5619372	ArrayIndexing	self -> stem_snap [ hv ] [ j ]		5619012	0					
ANR	5619373	ArrayIndexing	self -> stem_snap [ hv ]		5619012	0					
ANR	5619374	PtrMemberAccess	self -> stem_snap		5619012	0					
ANR	5619375	Identifier	self		5619012	0					
ANR	5619376	Identifier	stem_snap		5619012	1					
ANR	5619377	Identifier	hv		5619012	1					
ANR	5619378	Identifier	j		5619012	1					
ANR	5619379	ArrayIndexing	self -> stem_snap [ hv ] [ i ]		5619012	1					
ANR	5619380	ArrayIndexing	self -> stem_snap [ hv ]		5619012	0					
ANR	5619381	PtrMemberAccess	self -> stem_snap		5619012	0					
ANR	5619382	Identifier	self		5619012	0					
ANR	5619383	Identifier	stem_snap		5619012	1					
ANR	5619384	Identifier	hv		5619012	1					
ANR	5619385	Identifier	i		5619012	1					
ANR	5619386	CompoundStatement		30:66:1726:1726	5619012	1					
ANR	5619387	ExpressionStatement	j ++	722:16:29323:29326	5619012	0	True				
ANR	5619388	PostIncDecOperationExpression	j ++		5619012	0					
ANR	5619389	Identifier	j		5619012	0					
ANR	5619390	IncDec	++		5619012	1					
ANR	5619391	ExpressionStatement	self -> stem_snap [ hv ] [ j ] = self -> stem_snap [ hv ] [ i ]	723:16:29344:29391	5619012	1	True				
ANR	5619392	AssignmentExpression	self -> stem_snap [ hv ] [ j ] = self -> stem_snap [ hv ] [ i ]		5619012	0		=			
ANR	5619393	ArrayIndexing	self -> stem_snap [ hv ] [ j ]		5619012	0					
ANR	5619394	ArrayIndexing	self -> stem_snap [ hv ]		5619012	0					
ANR	5619395	PtrMemberAccess	self -> stem_snap		5619012	0					
ANR	5619396	Identifier	self		5619012	0					
ANR	5619397	Identifier	stem_snap		5619012	1					
ANR	5619398	Identifier	hv		5619012	1					
ANR	5619399	Identifier	j		5619012	1					
ANR	5619400	ArrayIndexing	self -> stem_snap [ hv ] [ i ]		5619012	1					
ANR	5619401	ArrayIndexing	self -> stem_snap [ hv ]		5619012	0					
ANR	5619402	PtrMemberAccess	self -> stem_snap		5619012	0					
ANR	5619403	Identifier	self		5619012	0					
ANR	5619404	Identifier	stem_snap		5619012	1					
ANR	5619405	Identifier	hv		5619012	1					
ANR	5619406	Identifier	i		5619012	1					
ANR	5619407	ExpressionStatement	self -> stem_snap_count [ hv ] = j + 1	726:8:29425:29458	5619012	4	True				
ANR	5619408	AssignmentExpression	self -> stem_snap_count [ hv ] = j + 1		5619012	0		=			
ANR	5619409	ArrayIndexing	self -> stem_snap_count [ hv ]		5619012	0					
ANR	5619410	PtrMemberAccess	self -> stem_snap_count		5619012	0					
ANR	5619411	Identifier	self		5619012	0					
ANR	5619412	Identifier	stem_snap_count		5619012	1					
ANR	5619413	Identifier	hv		5619012	1					
ANR	5619414	AdditiveExpression	j + 1		5619012	1		+			
ANR	5619415	Identifier	j		5619012	0					
ANR	5619416	PrimaryExpression	1		5619012	1					
ANR	5619417	ReturnStatement	return 0 ;	728:4:29470:29478	5619012	6	True				
ANR	5619418	PrimaryExpression	0		5619012	0					
ANR	5619419	ReturnType	static int		5619012	1					
ANR	5619420	Identifier	t1_hinter__set_stem_snap		5619012	2					
ANR	5619421	ParameterList	"gs_memory_t * mem , t1_hinter * self , float * value , int count , unsigned short hv"		5619012	3					
ANR	5619422	Parameter	gs_memory_t * mem	691:36:27497:27512	5619012	0	True				
ANR	5619423	ParameterType	gs_memory_t *		5619012	0					
ANR	5619424	Identifier	mem		5619012	1					
ANR	5619425	Parameter	t1_hinter * self	691:54:27515:27530	5619012	1	True				
ANR	5619426	ParameterType	t1_hinter *		5619012	0					
ANR	5619427	Identifier	self		5619012	1					
ANR	5619428	Parameter	float * value	691:72:27533:27545	5619012	2	True				
ANR	5619429	ParameterType	float *		5619012	0					
ANR	5619430	Identifier	value		5619012	1					
ANR	5619431	Parameter	int count	691:87:27548:27556	5619012	3	True				
ANR	5619432	ParameterType	int		5619012	0					
ANR	5619433	Identifier	count		5619012	1					
ANR	5619434	Parameter	unsigned short hv	691:98:27559:27575	5619012	4	True				
ANR	5619435	ParameterType	unsigned short		5619012	0					
ANR	5619436	Identifier	hv		5619012	1					
ANR	5619437	CFGEntryNode	ENTRY		5619012		True				
ANR	5619438	CFGExitNode	EXIT		5619012		True				
ANR	5619439	Symbol	count0		5619012						
ANR	5619440	Symbol	s_stem_snap_array		5619012						
ANR	5619441	Symbol	t1_hinter__realloc_array		5619012						
ANR	5619442	Symbol	self -> stem_snap0		5619012						
ANR	5619443	Symbol	s_stem_snap_vote_array		5619012						
ANR	5619444	Symbol	* self -> stem_snap_count		5619012						
ANR	5619445	Symbol	hv		5619012						
ANR	5619446	Symbol	self -> stem_snap_vote0		5619012						
ANR	5619447	Symbol	* self -> max_stem_snap_count		5619012						
ANR	5619448	Symbol	self -> pixel_gw		5619012						
ANR	5619449	Symbol	* count		5619012						
ANR	5619450	Symbol	float2fixed		5619012						
ANR	5619451	Symbol	mem		5619012						
ANR	5619452	Symbol	count_of		5619012						
ANR	5619453	Symbol	T1_MAX_STEM_SNAPS		5619012						
ANR	5619454	Symbol	* hv		5619012						
ANR	5619455	Symbol	* * * self		5619012						
ANR	5619456	Symbol	* self -> stem_snap		5619012						
ANR	5619457	Symbol	value		5619012						
ANR	5619458	Symbol	* self -> stem_snap0		5619012						
ANR	5619459	Symbol	self -> max_stem_snap_vote_count		5619012						
ANR	5619460	Symbol	pixel_g		5619012						
ANR	5619461	Symbol	& self -> stem_snap_vote		5619012						
ANR	5619462	Symbol	self -> pixel_gh		5619012						
ANR	5619463	Symbol	self -> stem_snap_count		5619012						
ANR	5619464	Symbol	* * self		5619012						
ANR	5619465	Symbol	max		5619012						
ANR	5619466	Symbol	* self		5619012						
ANR	5619467	Symbol	self -> stem_snap		5619012						
ANR	5619468	Symbol	count		5619012						
ANR	5619469	Symbol	i		5619012						
ANR	5619470	Symbol	j		5619012						
ANR	5619471	Symbol	gs_error_VMerror		5619012						
ANR	5619472	Symbol	* i		5619012						
ANR	5619473	Symbol	* j		5619012						
ANR	5619474	Symbol	self -> max_stem_snap_count		5619012						
ANR	5619475	Symbol	& self -> max_stem_snap_vote_count		5619012						
ANR	5619476	Symbol	* value		5619012						
ANR	5619477	Symbol	v		5619012						
ANR	5619478	Symbol	* * hv		5619012						
ANR	5619479	Symbol	self		5619012						
ANR	5619480	Symbol	* * self -> stem_snap		5619012						
ANR	5619481	Function	t1_hinter__set_font_data	749:0:30492:32883							
ANR	5619482	FunctionDef	"t1_hinter__set_font_data (gs_memory_t * mem , t1_hinter * self , int FontType , gs_type1_data * pdata , bool no_grid_fitting , bool is_resource)"		5619481	0					
ANR	5619483	CompoundStatement		750:0:30633:32883	5619481	0					
ANR	5619484	IdentifierDeclStatement	int code ;	750:3:30637:30645	5619481	0	True				
ANR	5619485	IdentifierDecl	code		5619481	0					
ANR	5619486	IdentifierDeclType	int		5619481	0					
ANR	5619487	Identifier	code		5619481	1					
ANR	5619488	ExpressionStatement	t1_hinter__init_outline ( self )	752:4:30652:30681	5619481	1	True				
ANR	5619489	CallExpression	t1_hinter__init_outline ( self )		5619481	0					
ANR	5619490	Callee	t1_hinter__init_outline		5619481	0					
ANR	5619491	Identifier	t1_hinter__init_outline		5619481	0					
ANR	5619492	ArgumentList	self		5619481	1					
ANR	5619493	Argument	self		5619481	0					
ANR	5619494	Identifier	self		5619481	0					
ANR	5619495	ExpressionStatement	self -> FontType = FontType	753:4:30687:30712	5619481	2	True				
ANR	5619496	AssignmentExpression	self -> FontType = FontType		5619481	0		=			
ANR	5619497	PtrMemberAccess	self -> FontType		5619481	0					
ANR	5619498	Identifier	self		5619481	0					
ANR	5619499	Identifier	FontType		5619481	1					
ANR	5619500	Identifier	FontType		5619481	1					
ANR	5619501	ExpressionStatement	self -> BlueScale = pdata -> BlueScale	754:4:30718:30752	5619481	3	True				
ANR	5619502	AssignmentExpression	self -> BlueScale = pdata -> BlueScale		5619481	0		=			
ANR	5619503	PtrMemberAccess	self -> BlueScale		5619481	0					
ANR	5619504	Identifier	self		5619481	0					
ANR	5619505	Identifier	BlueScale		5619481	1					
ANR	5619506	PtrMemberAccess	pdata -> BlueScale		5619481	1					
ANR	5619507	Identifier	pdata		5619481	0					
ANR	5619508	Identifier	BlueScale		5619481	1					
ANR	5619509	ExpressionStatement	self -> blue_shift = float2fixed ( pdata -> BlueShift )	755:4:30758:30806	5619481	4	True				
ANR	5619510	AssignmentExpression	self -> blue_shift = float2fixed ( pdata -> BlueShift )		5619481	0		=			
ANR	5619511	PtrMemberAccess	self -> blue_shift		5619481	0					
ANR	5619512	Identifier	self		5619481	0					
ANR	5619513	Identifier	blue_shift		5619481	1					
ANR	5619514	CallExpression	float2fixed ( pdata -> BlueShift )		5619481	1					
ANR	5619515	Callee	float2fixed		5619481	0					
ANR	5619516	Identifier	float2fixed		5619481	0					
ANR	5619517	ArgumentList	pdata -> BlueShift		5619481	1					
ANR	5619518	Argument	pdata -> BlueShift		5619481	0					
ANR	5619519	PtrMemberAccess	pdata -> BlueShift		5619481	0					
ANR	5619520	Identifier	pdata		5619481	0					
ANR	5619521	Identifier	BlueShift		5619481	1					
ANR	5619522	ExpressionStatement	self -> blue_fuzz = float2fixed ( pdata -> BlueFuzz )	756:4:30812:30859	5619481	5	True				
ANR	5619523	AssignmentExpression	self -> blue_fuzz = float2fixed ( pdata -> BlueFuzz )		5619481	0		=			
ANR	5619524	PtrMemberAccess	self -> blue_fuzz		5619481	0					
ANR	5619525	Identifier	self		5619481	0					
ANR	5619526	Identifier	blue_fuzz		5619481	1					
ANR	5619527	CallExpression	float2fixed ( pdata -> BlueFuzz )		5619481	1					
ANR	5619528	Callee	float2fixed		5619481	0					
ANR	5619529	Identifier	float2fixed		5619481	0					
ANR	5619530	ArgumentList	pdata -> BlueFuzz		5619481	1					
ANR	5619531	Argument	pdata -> BlueFuzz		5619481	0					
ANR	5619532	PtrMemberAccess	pdata -> BlueFuzz		5619481	0					
ANR	5619533	Identifier	pdata		5619481	0					
ANR	5619534	Identifier	BlueFuzz		5619481	1					
ANR	5619535	ExpressionStatement	self -> suppress_overshoots = ( self -> BlueScale > self -> heigt_transform_coef / ( 1 << self -> log2_pixels_y ) - 0.00020417 )	757:4:30865:30981	5619481	6	True				
ANR	5619536	AssignmentExpression	self -> suppress_overshoots = ( self -> BlueScale > self -> heigt_transform_coef / ( 1 << self -> log2_pixels_y ) - 0.00020417 )		5619481	0		=			
ANR	5619537	PtrMemberAccess	self -> suppress_overshoots		5619481	0					
ANR	5619538	Identifier	self		5619481	0					
ANR	5619539	Identifier	suppress_overshoots		5619481	1					
ANR	5619540	RelationalExpression	self -> BlueScale > self -> heigt_transform_coef / ( 1 << self -> log2_pixels_y ) - 0.00020417		5619481	1		>			
ANR	5619541	PtrMemberAccess	self -> BlueScale		5619481	0					
ANR	5619542	Identifier	self		5619481	0					
ANR	5619543	Identifier	BlueScale		5619481	1					
ANR	5619544	AdditiveExpression	self -> heigt_transform_coef / ( 1 << self -> log2_pixels_y ) - 0.00020417		5619481	1		-			
ANR	5619545	MultiplicativeExpression	self -> heigt_transform_coef / ( 1 << self -> log2_pixels_y )		5619481	0		/			
ANR	5619546	PtrMemberAccess	self -> heigt_transform_coef		5619481	0					
ANR	5619547	Identifier	self		5619481	0					
ANR	5619548	Identifier	heigt_transform_coef		5619481	1					
ANR	5619549	ShiftExpression	1 << self -> log2_pixels_y		5619481	1		<<			
ANR	5619550	PrimaryExpression	1		5619481	0					
ANR	5619551	PtrMemberAccess	self -> log2_pixels_y		5619481	1					
ANR	5619552	Identifier	self		5619481	0					
ANR	5619553	Identifier	log2_pixels_y		5619481	1					
ANR	5619554	PrimaryExpression	0.00020417		5619481	1					
ANR	5619555	ExpressionStatement	self -> overshoot_threshold = ( self -> heigt_transform_coef != 0 ? ( t1_glyph_space_coord ) ( fixed_half * ( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef ) : 0 )	758:4:30987:31147	5619481	7	True				
ANR	5619556	AssignmentExpression	self -> overshoot_threshold = ( self -> heigt_transform_coef != 0 ? ( t1_glyph_space_coord ) ( fixed_half * ( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef ) : 0 )		5619481	0		=			
ANR	5619557	PtrMemberAccess	self -> overshoot_threshold		5619481	0					
ANR	5619558	Identifier	self		5619481	0					
ANR	5619559	Identifier	overshoot_threshold		5619481	1					
ANR	5619560	ConditionalExpression	self -> heigt_transform_coef != 0 ? ( t1_glyph_space_coord ) ( fixed_half * ( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef ) : 0		5619481	1					
ANR	5619561	Condition	self -> heigt_transform_coef != 0		5619481	0					
ANR	5619562	EqualityExpression	self -> heigt_transform_coef != 0		5619481	0		!=			
ANR	5619563	PtrMemberAccess	self -> heigt_transform_coef		5619481	0					
ANR	5619564	Identifier	self		5619481	0					
ANR	5619565	Identifier	heigt_transform_coef		5619481	1					
ANR	5619566	PrimaryExpression	0		5619481	1					
ANR	5619567	CastExpression	( t1_glyph_space_coord ) ( fixed_half * ( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef )		5619481	1					
ANR	5619568	CastTarget	t1_glyph_space_coord		5619481	0					
ANR	5619569	MultiplicativeExpression	fixed_half * ( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef		5619481	1		*			
ANR	5619570	Identifier	fixed_half		5619481	0					
ANR	5619571	MultiplicativeExpression	( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef		5619481	1		/			
ANR	5619572	ShiftExpression	1 << self -> log2_pixels_y		5619481	0		<<			
ANR	5619573	PrimaryExpression	1		5619481	0					
ANR	5619574	PtrMemberAccess	self -> log2_pixels_y		5619481	1					
ANR	5619575	Identifier	self		5619481	0					
ANR	5619576	Identifier	log2_pixels_y		5619481	1					
ANR	5619577	PtrMemberAccess	self -> heigt_transform_coef		5619481	1					
ANR	5619578	Identifier	self		5619481	0					
ANR	5619579	Identifier	heigt_transform_coef		5619481	1					
ANR	5619580	PrimaryExpression	0		5619481	2					
ANR	5619581	ExpressionStatement	self -> ForceBold = pdata -> ForceBold	759:4:31153:31187	5619481	8	True				
ANR	5619582	AssignmentExpression	self -> ForceBold = pdata -> ForceBold		5619481	0		=			
ANR	5619583	PtrMemberAccess	self -> ForceBold		5619481	0					
ANR	5619584	Identifier	self		5619481	0					
ANR	5619585	Identifier	ForceBold		5619481	1					
ANR	5619586	PtrMemberAccess	pdata -> ForceBold		5619481	1					
ANR	5619587	Identifier	pdata		5619481	0					
ANR	5619588	Identifier	ForceBold		5619481	1					
ANR	5619589	ExpressionStatement	self -> disable_hinting |= no_grid_fitting	760:4:31193:31233	5619481	9	True				
ANR	5619590	AssignmentExpression	self -> disable_hinting |= no_grid_fitting		5619481	0		|=			
ANR	5619591	PtrMemberAccess	self -> disable_hinting		5619481	0					
ANR	5619592	Identifier	self		5619481	0					
ANR	5619593	Identifier	disable_hinting		5619481	1					
ANR	5619594	Identifier	no_grid_fitting		5619481	1					
ANR	5619595	ExpressionStatement	self -> pass_through |= no_grid_fitting	761:4:31239:31276	5619481	10	True				
ANR	5619596	AssignmentExpression	self -> pass_through |= no_grid_fitting		5619481	0		|=			
ANR	5619597	PtrMemberAccess	self -> pass_through		5619481	0					
ANR	5619598	Identifier	self		5619481	0					
ANR	5619599	Identifier	pass_through		5619481	1					
ANR	5619600	Identifier	no_grid_fitting		5619481	1					
ANR	5619601	ExpressionStatement	self -> charpath_flag = no_grid_fitting	762:4:31282:31319	5619481	11	True				
ANR	5619602	AssignmentExpression	self -> charpath_flag = no_grid_fitting		5619481	0		=			
ANR	5619603	PtrMemberAccess	self -> charpath_flag		5619481	0					
ANR	5619604	Identifier	self		5619481	0					
ANR	5619605	Identifier	charpath_flag		5619481	1					
ANR	5619606	Identifier	no_grid_fitting		5619481	1					
ANR	5619607	ExpressionStatement	self -> fix_contour_sign = ( ! is_resource && self -> memory != NULL )	763:4:31325:31388	5619481	12	True				
ANR	5619608	AssignmentExpression	self -> fix_contour_sign = ( ! is_resource && self -> memory != NULL )		5619481	0		=			
ANR	5619609	PtrMemberAccess	self -> fix_contour_sign		5619481	0					
ANR	5619610	Identifier	self		5619481	0					
ANR	5619611	Identifier	fix_contour_sign		5619481	1					
ANR	5619612	AndExpression	! is_resource && self -> memory != NULL		5619481	1		&&			
ANR	5619613	UnaryOperationExpression	! is_resource		5619481	0					
ANR	5619614	UnaryOperator	!		5619481	0					
ANR	5619615	Identifier	is_resource		5619481	1					
ANR	5619616	EqualityExpression	self -> memory != NULL		5619481	1		!=			
ANR	5619617	PtrMemberAccess	self -> memory		5619481	0					
ANR	5619618	Identifier	self		5619481	0					
ANR	5619619	Identifier	memory		5619481	1					
ANR	5619620	Identifier	NULL		5619481	1					
ANR	5619621	IfStatement	if ( self -> fix_contour_sign )		5619481	13					
ANR	5619622	Condition	self -> fix_contour_sign	764:8:31398:31419	5619481	0	True				
ANR	5619623	PtrMemberAccess	self -> fix_contour_sign		5619481	0					
ANR	5619624	Identifier	self		5619481	0					
ANR	5619625	Identifier	fix_contour_sign		5619481	1					
ANR	5619626	ExpressionStatement	self -> pass_through = false	765:8:31430:31456	5619481	1	True				
ANR	5619627	AssignmentExpression	self -> pass_through = false		5619481	0		=			
ANR	5619628	PtrMemberAccess	self -> pass_through		5619481	0					
ANR	5619629	Identifier	self		5619481	0					
ANR	5619630	Identifier	pass_through		5619481	1					
ANR	5619631	Identifier	false		5619481	1					
ANR	5619632	IfStatement	if ( self -> pass_through )		5619481	14					
ANR	5619633	Condition	self -> pass_through	766:8:31466:31483	5619481	0	True				
ANR	5619634	PtrMemberAccess	self -> pass_through		5619481	0					
ANR	5619635	Identifier	self		5619481	0					
ANR	5619636	Identifier	pass_through		5619481	1					
ANR	5619637	ReturnStatement	return 0 ;	767:8:31494:31502	5619481	1	True				
ANR	5619638	PrimaryExpression	0		5619481	0					
ANR	5619639	ExpressionStatement	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> OtherBlues . values , pdata -> OtherBlues . count , botzone , false )"	768:4:31508:31623	5619481	15	True				
ANR	5619640	AssignmentExpression	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> OtherBlues . values , pdata -> OtherBlues . count , botzone , false )"		5619481	0		=			
ANR	5619641	Identifier	code		5619481	0					
ANR	5619642	CallExpression	"t1_hinter__set_alignment_zones ( mem , self , pdata -> OtherBlues . values , pdata -> OtherBlues . count , botzone , false )"		5619481	1					
ANR	5619643	Callee	t1_hinter__set_alignment_zones		5619481	0					
ANR	5619644	Identifier	t1_hinter__set_alignment_zones		5619481	0					
ANR	5619645	ArgumentList	mem		5619481	1					
ANR	5619646	Argument	mem		5619481	0					
ANR	5619647	Identifier	mem		5619481	0					
ANR	5619648	Argument	self		5619481	1					
ANR	5619649	Identifier	self		5619481	0					
ANR	5619650	Argument	pdata -> OtherBlues . values		5619481	2					
ANR	5619651	MemberAccess	pdata -> OtherBlues . values		5619481	0					
ANR	5619652	PtrMemberAccess	pdata -> OtherBlues		5619481	0					
ANR	5619653	Identifier	pdata		5619481	0					
ANR	5619654	Identifier	OtherBlues		5619481	1					
ANR	5619655	Identifier	values		5619481	1					
ANR	5619656	Argument	pdata -> OtherBlues . count		5619481	3					
ANR	5619657	MemberAccess	pdata -> OtherBlues . count		5619481	0					
ANR	5619658	PtrMemberAccess	pdata -> OtherBlues		5619481	0					
ANR	5619659	Identifier	pdata		5619481	0					
ANR	5619660	Identifier	OtherBlues		5619481	1					
ANR	5619661	Identifier	count		5619481	1					
ANR	5619662	Argument	botzone		5619481	4					
ANR	5619663	Identifier	botzone		5619481	0					
ANR	5619664	Argument	false		5619481	5					
ANR	5619665	Identifier	false		5619481	0					
ANR	5619666	IfStatement	if ( code >= 0 )		5619481	16					
ANR	5619667	Condition	code >= 0	769:8:31633:31641	5619481	0	True				
ANR	5619668	RelationalExpression	code >= 0		5619481	0		>=			
ANR	5619669	Identifier	code		5619481	0					
ANR	5619670	PrimaryExpression	0		5619481	1					
ANR	5619671	ExpressionStatement	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> BlueValues . values , min ( 2 , pdata -> BlueValues . count ) , botzone , false )"	770:8:31652:31775	5619481	1	True				
ANR	5619672	AssignmentExpression	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> BlueValues . values , min ( 2 , pdata -> BlueValues . count ) , botzone , false )"		5619481	0		=			
ANR	5619673	Identifier	code		5619481	0					
ANR	5619674	CallExpression	"t1_hinter__set_alignment_zones ( mem , self , pdata -> BlueValues . values , min ( 2 , pdata -> BlueValues . count ) , botzone , false )"		5619481	1					
ANR	5619675	Callee	t1_hinter__set_alignment_zones		5619481	0					
ANR	5619676	Identifier	t1_hinter__set_alignment_zones		5619481	0					
ANR	5619677	ArgumentList	mem		5619481	1					
ANR	5619678	Argument	mem		5619481	0					
ANR	5619679	Identifier	mem		5619481	0					
ANR	5619680	Argument	self		5619481	1					
ANR	5619681	Identifier	self		5619481	0					
ANR	5619682	Argument	pdata -> BlueValues . values		5619481	2					
ANR	5619683	MemberAccess	pdata -> BlueValues . values		5619481	0					
ANR	5619684	PtrMemberAccess	pdata -> BlueValues		5619481	0					
ANR	5619685	Identifier	pdata		5619481	0					
ANR	5619686	Identifier	BlueValues		5619481	1					
ANR	5619687	Identifier	values		5619481	1					
ANR	5619688	Argument	"min ( 2 , pdata -> BlueValues . count )"		5619481	3					
ANR	5619689	CallExpression	"min ( 2 , pdata -> BlueValues . count )"		5619481	0					
ANR	5619690	Callee	min		5619481	0					
ANR	5619691	Identifier	min		5619481	0					
ANR	5619692	ArgumentList	2		5619481	1					
ANR	5619693	Argument	2		5619481	0					
ANR	5619694	PrimaryExpression	2		5619481	0					
ANR	5619695	Argument	pdata -> BlueValues . count		5619481	1					
ANR	5619696	MemberAccess	pdata -> BlueValues . count		5619481	0					
ANR	5619697	PtrMemberAccess	pdata -> BlueValues		5619481	0					
ANR	5619698	Identifier	pdata		5619481	0					
ANR	5619699	Identifier	BlueValues		5619481	1					
ANR	5619700	Identifier	count		5619481	1					
ANR	5619701	Argument	botzone		5619481	4					
ANR	5619702	Identifier	botzone		5619481	0					
ANR	5619703	Argument	false		5619481	5					
ANR	5619704	Identifier	false		5619481	0					
ANR	5619705	IfStatement	if ( code >= 0 )		5619481	17					
ANR	5619706	Condition	code >= 0	771:8:31785:31793	5619481	0	True				
ANR	5619707	RelationalExpression	code >= 0		5619481	0		>=			
ANR	5619708	Identifier	code		5619481	0					
ANR	5619709	PrimaryExpression	0		5619481	1					
ANR	5619710	ExpressionStatement	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> BlueValues . values + 2 , pdata -> BlueValues . count - 2 , topzone , false )"	772:8:31804:31927	5619481	1	True				
ANR	5619711	AssignmentExpression	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> BlueValues . values + 2 , pdata -> BlueValues . count - 2 , topzone , false )"		5619481	0		=			
ANR	5619712	Identifier	code		5619481	0					
ANR	5619713	CallExpression	"t1_hinter__set_alignment_zones ( mem , self , pdata -> BlueValues . values + 2 , pdata -> BlueValues . count - 2 , topzone , false )"		5619481	1					
ANR	5619714	Callee	t1_hinter__set_alignment_zones		5619481	0					
ANR	5619715	Identifier	t1_hinter__set_alignment_zones		5619481	0					
ANR	5619716	ArgumentList	mem		5619481	1					
ANR	5619717	Argument	mem		5619481	0					
ANR	5619718	Identifier	mem		5619481	0					
ANR	5619719	Argument	self		5619481	1					
ANR	5619720	Identifier	self		5619481	0					
ANR	5619721	Argument	pdata -> BlueValues . values + 2		5619481	2					
ANR	5619722	AdditiveExpression	pdata -> BlueValues . values + 2		5619481	0		+			
ANR	5619723	MemberAccess	pdata -> BlueValues . values		5619481	0					
ANR	5619724	PtrMemberAccess	pdata -> BlueValues		5619481	0					
ANR	5619725	Identifier	pdata		5619481	0					
ANR	5619726	Identifier	BlueValues		5619481	1					
ANR	5619727	Identifier	values		5619481	1					
ANR	5619728	PrimaryExpression	2		5619481	1					
ANR	5619729	Argument	pdata -> BlueValues . count - 2		5619481	3					
ANR	5619730	AdditiveExpression	pdata -> BlueValues . count - 2		5619481	0		-			
ANR	5619731	MemberAccess	pdata -> BlueValues . count		5619481	0					
ANR	5619732	PtrMemberAccess	pdata -> BlueValues		5619481	0					
ANR	5619733	Identifier	pdata		5619481	0					
ANR	5619734	Identifier	BlueValues		5619481	1					
ANR	5619735	Identifier	count		5619481	1					
ANR	5619736	PrimaryExpression	2		5619481	1					
ANR	5619737	Argument	topzone		5619481	4					
ANR	5619738	Identifier	topzone		5619481	0					
ANR	5619739	Argument	false		5619481	5					
ANR	5619740	Identifier	false		5619481	0					
ANR	5619741	IfStatement	if ( code >= 0 )		5619481	18					
ANR	5619742	Condition	code >= 0	773:8:31937:31945	5619481	0	True				
ANR	5619743	RelationalExpression	code >= 0		5619481	0		>=			
ANR	5619744	Identifier	code		5619481	0					
ANR	5619745	PrimaryExpression	0		5619481	1					
ANR	5619746	ExpressionStatement	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> FamilyOtherBlues . values , pdata -> FamilyOtherBlues . count , botzone , true )"	774:8:31956:32082	5619481	1	True				
ANR	5619747	AssignmentExpression	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> FamilyOtherBlues . values , pdata -> FamilyOtherBlues . count , botzone , true )"		5619481	0		=			
ANR	5619748	Identifier	code		5619481	0					
ANR	5619749	CallExpression	"t1_hinter__set_alignment_zones ( mem , self , pdata -> FamilyOtherBlues . values , pdata -> FamilyOtherBlues . count , botzone , true )"		5619481	1					
ANR	5619750	Callee	t1_hinter__set_alignment_zones		5619481	0					
ANR	5619751	Identifier	t1_hinter__set_alignment_zones		5619481	0					
ANR	5619752	ArgumentList	mem		5619481	1					
ANR	5619753	Argument	mem		5619481	0					
ANR	5619754	Identifier	mem		5619481	0					
ANR	5619755	Argument	self		5619481	1					
ANR	5619756	Identifier	self		5619481	0					
ANR	5619757	Argument	pdata -> FamilyOtherBlues . values		5619481	2					
ANR	5619758	MemberAccess	pdata -> FamilyOtherBlues . values		5619481	0					
ANR	5619759	PtrMemberAccess	pdata -> FamilyOtherBlues		5619481	0					
ANR	5619760	Identifier	pdata		5619481	0					
ANR	5619761	Identifier	FamilyOtherBlues		5619481	1					
ANR	5619762	Identifier	values		5619481	1					
ANR	5619763	Argument	pdata -> FamilyOtherBlues . count		5619481	3					
ANR	5619764	MemberAccess	pdata -> FamilyOtherBlues . count		5619481	0					
ANR	5619765	PtrMemberAccess	pdata -> FamilyOtherBlues		5619481	0					
ANR	5619766	Identifier	pdata		5619481	0					
ANR	5619767	Identifier	FamilyOtherBlues		5619481	1					
ANR	5619768	Identifier	count		5619481	1					
ANR	5619769	Argument	botzone		5619481	4					
ANR	5619770	Identifier	botzone		5619481	0					
ANR	5619771	Argument	true		5619481	5					
ANR	5619772	Identifier	true		5619481	0					
ANR	5619773	IfStatement	if ( code >= 0 )		5619481	19					
ANR	5619774	Condition	code >= 0	775:8:32092:32100	5619481	0	True				
ANR	5619775	RelationalExpression	code >= 0		5619481	0		>=			
ANR	5619776	Identifier	code		5619481	0					
ANR	5619777	PrimaryExpression	0		5619481	1					
ANR	5619778	ExpressionStatement	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> FamilyBlues . values , min ( 2 , pdata -> FamilyBlues . count ) , botzone , true )"	776:8:32111:32235	5619481	1	True				
ANR	5619779	AssignmentExpression	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> FamilyBlues . values , min ( 2 , pdata -> FamilyBlues . count ) , botzone , true )"		5619481	0		=			
ANR	5619780	Identifier	code		5619481	0					
ANR	5619781	CallExpression	"t1_hinter__set_alignment_zones ( mem , self , pdata -> FamilyBlues . values , min ( 2 , pdata -> FamilyBlues . count ) , botzone , true )"		5619481	1					
ANR	5619782	Callee	t1_hinter__set_alignment_zones		5619481	0					
ANR	5619783	Identifier	t1_hinter__set_alignment_zones		5619481	0					
ANR	5619784	ArgumentList	mem		5619481	1					
ANR	5619785	Argument	mem		5619481	0					
ANR	5619786	Identifier	mem		5619481	0					
ANR	5619787	Argument	self		5619481	1					
ANR	5619788	Identifier	self		5619481	0					
ANR	5619789	Argument	pdata -> FamilyBlues . values		5619481	2					
ANR	5619790	MemberAccess	pdata -> FamilyBlues . values		5619481	0					
ANR	5619791	PtrMemberAccess	pdata -> FamilyBlues		5619481	0					
ANR	5619792	Identifier	pdata		5619481	0					
ANR	5619793	Identifier	FamilyBlues		5619481	1					
ANR	5619794	Identifier	values		5619481	1					
ANR	5619795	Argument	"min ( 2 , pdata -> FamilyBlues . count )"		5619481	3					
ANR	5619796	CallExpression	"min ( 2 , pdata -> FamilyBlues . count )"		5619481	0					
ANR	5619797	Callee	min		5619481	0					
ANR	5619798	Identifier	min		5619481	0					
ANR	5619799	ArgumentList	2		5619481	1					
ANR	5619800	Argument	2		5619481	0					
ANR	5619801	PrimaryExpression	2		5619481	0					
ANR	5619802	Argument	pdata -> FamilyBlues . count		5619481	1					
ANR	5619803	MemberAccess	pdata -> FamilyBlues . count		5619481	0					
ANR	5619804	PtrMemberAccess	pdata -> FamilyBlues		5619481	0					
ANR	5619805	Identifier	pdata		5619481	0					
ANR	5619806	Identifier	FamilyBlues		5619481	1					
ANR	5619807	Identifier	count		5619481	1					
ANR	5619808	Argument	botzone		5619481	4					
ANR	5619809	Identifier	botzone		5619481	0					
ANR	5619810	Argument	true		5619481	5					
ANR	5619811	Identifier	true		5619481	0					
ANR	5619812	IfStatement	if ( code >= 0 )		5619481	20					
ANR	5619813	Condition	code >= 0	777:8:32245:32253	5619481	0	True				
ANR	5619814	RelationalExpression	code >= 0		5619481	0		>=			
ANR	5619815	Identifier	code		5619481	0					
ANR	5619816	PrimaryExpression	0		5619481	1					
ANR	5619817	ExpressionStatement	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> FamilyBlues . values + 2 , pdata -> FamilyBlues . count - 2 , topzone , true )"	778:8:32264:32388	5619481	1	True				
ANR	5619818	AssignmentExpression	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> FamilyBlues . values + 2 , pdata -> FamilyBlues . count - 2 , topzone , true )"		5619481	0		=			
ANR	5619819	Identifier	code		5619481	0					
ANR	5619820	CallExpression	"t1_hinter__set_alignment_zones ( mem , self , pdata -> FamilyBlues . values + 2 , pdata -> FamilyBlues . count - 2 , topzone , true )"		5619481	1					
ANR	5619821	Callee	t1_hinter__set_alignment_zones		5619481	0					
ANR	5619822	Identifier	t1_hinter__set_alignment_zones		5619481	0					
ANR	5619823	ArgumentList	mem		5619481	1					
ANR	5619824	Argument	mem		5619481	0					
ANR	5619825	Identifier	mem		5619481	0					
ANR	5619826	Argument	self		5619481	1					
ANR	5619827	Identifier	self		5619481	0					
ANR	5619828	Argument	pdata -> FamilyBlues . values + 2		5619481	2					
ANR	5619829	AdditiveExpression	pdata -> FamilyBlues . values + 2		5619481	0		+			
ANR	5619830	MemberAccess	pdata -> FamilyBlues . values		5619481	0					
ANR	5619831	PtrMemberAccess	pdata -> FamilyBlues		5619481	0					
ANR	5619832	Identifier	pdata		5619481	0					
ANR	5619833	Identifier	FamilyBlues		5619481	1					
ANR	5619834	Identifier	values		5619481	1					
ANR	5619835	PrimaryExpression	2		5619481	1					
ANR	5619836	Argument	pdata -> FamilyBlues . count - 2		5619481	3					
ANR	5619837	AdditiveExpression	pdata -> FamilyBlues . count - 2		5619481	0		-			
ANR	5619838	MemberAccess	pdata -> FamilyBlues . count		5619481	0					
ANR	5619839	PtrMemberAccess	pdata -> FamilyBlues		5619481	0					
ANR	5619840	Identifier	pdata		5619481	0					
ANR	5619841	Identifier	FamilyBlues		5619481	1					
ANR	5619842	Identifier	count		5619481	1					
ANR	5619843	PrimaryExpression	2		5619481	1					
ANR	5619844	Argument	topzone		5619481	4					
ANR	5619845	Identifier	topzone		5619481	0					
ANR	5619846	Argument	true		5619481	5					
ANR	5619847	Identifier	true		5619481	0					
ANR	5619848	IfStatement	if ( code >= 0 )		5619481	21					
ANR	5619849	Condition	code >= 0	779:8:32398:32406	5619481	0	True				
ANR	5619850	RelationalExpression	code >= 0		5619481	0		>=			
ANR	5619851	Identifier	code		5619481	0					
ANR	5619852	PrimaryExpression	0		5619481	1					
ANR	5619853	ExpressionStatement	"code = t1_hinter__set_stem_snap ( mem , self , pdata -> StdHW . values , pdata -> StdHW . count , 0 )"	780:8:32417:32503	5619481	1	True				
ANR	5619854	AssignmentExpression	"code = t1_hinter__set_stem_snap ( mem , self , pdata -> StdHW . values , pdata -> StdHW . count , 0 )"		5619481	0		=			
ANR	5619855	Identifier	code		5619481	0					
ANR	5619856	CallExpression	"t1_hinter__set_stem_snap ( mem , self , pdata -> StdHW . values , pdata -> StdHW . count , 0 )"		5619481	1					
ANR	5619857	Callee	t1_hinter__set_stem_snap		5619481	0					
ANR	5619858	Identifier	t1_hinter__set_stem_snap		5619481	0					
ANR	5619859	ArgumentList	mem		5619481	1					
ANR	5619860	Argument	mem		5619481	0					
ANR	5619861	Identifier	mem		5619481	0					
ANR	5619862	Argument	self		5619481	1					
ANR	5619863	Identifier	self		5619481	0					
ANR	5619864	Argument	pdata -> StdHW . values		5619481	2					
ANR	5619865	MemberAccess	pdata -> StdHW . values		5619481	0					
ANR	5619866	PtrMemberAccess	pdata -> StdHW		5619481	0					
ANR	5619867	Identifier	pdata		5619481	0					
ANR	5619868	Identifier	StdHW		5619481	1					
ANR	5619869	Identifier	values		5619481	1					
ANR	5619870	Argument	pdata -> StdHW . count		5619481	3					
ANR	5619871	MemberAccess	pdata -> StdHW . count		5619481	0					
ANR	5619872	PtrMemberAccess	pdata -> StdHW		5619481	0					
ANR	5619873	Identifier	pdata		5619481	0					
ANR	5619874	Identifier	StdHW		5619481	1					
ANR	5619875	Identifier	count		5619481	1					
ANR	5619876	Argument	0		5619481	4					
ANR	5619877	PrimaryExpression	0		5619481	0					
ANR	5619878	IfStatement	if ( code >= 0 )		5619481	22					
ANR	5619879	Condition	code >= 0	781:8:32513:32521	5619481	0	True				
ANR	5619880	RelationalExpression	code >= 0		5619481	0		>=			
ANR	5619881	Identifier	code		5619481	0					
ANR	5619882	PrimaryExpression	0		5619481	1					
ANR	5619883	ExpressionStatement	"code = t1_hinter__set_stem_snap ( mem , self , pdata -> StdVW . values , pdata -> StdVW . count , 1 )"	782:8:32532:32618	5619481	1	True				
ANR	5619884	AssignmentExpression	"code = t1_hinter__set_stem_snap ( mem , self , pdata -> StdVW . values , pdata -> StdVW . count , 1 )"		5619481	0		=			
ANR	5619885	Identifier	code		5619481	0					
ANR	5619886	CallExpression	"t1_hinter__set_stem_snap ( mem , self , pdata -> StdVW . values , pdata -> StdVW . count , 1 )"		5619481	1					
ANR	5619887	Callee	t1_hinter__set_stem_snap		5619481	0					
ANR	5619888	Identifier	t1_hinter__set_stem_snap		5619481	0					
ANR	5619889	ArgumentList	mem		5619481	1					
ANR	5619890	Argument	mem		5619481	0					
ANR	5619891	Identifier	mem		5619481	0					
ANR	5619892	Argument	self		5619481	1					
ANR	5619893	Identifier	self		5619481	0					
ANR	5619894	Argument	pdata -> StdVW . values		5619481	2					
ANR	5619895	MemberAccess	pdata -> StdVW . values		5619481	0					
ANR	5619896	PtrMemberAccess	pdata -> StdVW		5619481	0					
ANR	5619897	Identifier	pdata		5619481	0					
ANR	5619898	Identifier	StdVW		5619481	1					
ANR	5619899	Identifier	values		5619481	1					
ANR	5619900	Argument	pdata -> StdVW . count		5619481	3					
ANR	5619901	MemberAccess	pdata -> StdVW . count		5619481	0					
ANR	5619902	PtrMemberAccess	pdata -> StdVW		5619481	0					
ANR	5619903	Identifier	pdata		5619481	0					
ANR	5619904	Identifier	StdVW		5619481	1					
ANR	5619905	Identifier	count		5619481	1					
ANR	5619906	Argument	1		5619481	4					
ANR	5619907	PrimaryExpression	1		5619481	0					
ANR	5619908	IfStatement	if ( code >= 0 )		5619481	23					
ANR	5619909	Condition	code >= 0	783:8:32628:32636	5619481	0	True				
ANR	5619910	RelationalExpression	code >= 0		5619481	0		>=			
ANR	5619911	Identifier	code		5619481	0					
ANR	5619912	PrimaryExpression	0		5619481	1					
ANR	5619913	ExpressionStatement	"code = t1_hinter__set_stem_snap ( mem , self , pdata -> StemSnapH . values , pdata -> StemSnapH . count , 0 )"	784:8:32647:32741	5619481	1	True				
ANR	5619914	AssignmentExpression	"code = t1_hinter__set_stem_snap ( mem , self , pdata -> StemSnapH . values , pdata -> StemSnapH . count , 0 )"		5619481	0		=			
ANR	5619915	Identifier	code		5619481	0					
ANR	5619916	CallExpression	"t1_hinter__set_stem_snap ( mem , self , pdata -> StemSnapH . values , pdata -> StemSnapH . count , 0 )"		5619481	1					
ANR	5619917	Callee	t1_hinter__set_stem_snap		5619481	0					
ANR	5619918	Identifier	t1_hinter__set_stem_snap		5619481	0					
ANR	5619919	ArgumentList	mem		5619481	1					
ANR	5619920	Argument	mem		5619481	0					
ANR	5619921	Identifier	mem		5619481	0					
ANR	5619922	Argument	self		5619481	1					
ANR	5619923	Identifier	self		5619481	0					
ANR	5619924	Argument	pdata -> StemSnapH . values		5619481	2					
ANR	5619925	MemberAccess	pdata -> StemSnapH . values		5619481	0					
ANR	5619926	PtrMemberAccess	pdata -> StemSnapH		5619481	0					
ANR	5619927	Identifier	pdata		5619481	0					
ANR	5619928	Identifier	StemSnapH		5619481	1					
ANR	5619929	Identifier	values		5619481	1					
ANR	5619930	Argument	pdata -> StemSnapH . count		5619481	3					
ANR	5619931	MemberAccess	pdata -> StemSnapH . count		5619481	0					
ANR	5619932	PtrMemberAccess	pdata -> StemSnapH		5619481	0					
ANR	5619933	Identifier	pdata		5619481	0					
ANR	5619934	Identifier	StemSnapH		5619481	1					
ANR	5619935	Identifier	count		5619481	1					
ANR	5619936	Argument	0		5619481	4					
ANR	5619937	PrimaryExpression	0		5619481	0					
ANR	5619938	IfStatement	if ( code >= 0 )		5619481	24					
ANR	5619939	Condition	code >= 0	785:8:32751:32759	5619481	0	True				
ANR	5619940	RelationalExpression	code >= 0		5619481	0		>=			
ANR	5619941	Identifier	code		5619481	0					
ANR	5619942	PrimaryExpression	0		5619481	1					
ANR	5619943	ExpressionStatement	"code = t1_hinter__set_stem_snap ( mem , self , pdata -> StemSnapV . values , pdata -> StemSnapV . count , 1 )"	786:8:32770:32864	5619481	1	True				
ANR	5619944	AssignmentExpression	"code = t1_hinter__set_stem_snap ( mem , self , pdata -> StemSnapV . values , pdata -> StemSnapV . count , 1 )"		5619481	0		=			
ANR	5619945	Identifier	code		5619481	0					
ANR	5619946	CallExpression	"t1_hinter__set_stem_snap ( mem , self , pdata -> StemSnapV . values , pdata -> StemSnapV . count , 1 )"		5619481	1					
ANR	5619947	Callee	t1_hinter__set_stem_snap		5619481	0					
ANR	5619948	Identifier	t1_hinter__set_stem_snap		5619481	0					
ANR	5619949	ArgumentList	mem		5619481	1					
ANR	5619950	Argument	mem		5619481	0					
ANR	5619951	Identifier	mem		5619481	0					
ANR	5619952	Argument	self		5619481	1					
ANR	5619953	Identifier	self		5619481	0					
ANR	5619954	Argument	pdata -> StemSnapV . values		5619481	2					
ANR	5619955	MemberAccess	pdata -> StemSnapV . values		5619481	0					
ANR	5619956	PtrMemberAccess	pdata -> StemSnapV		5619481	0					
ANR	5619957	Identifier	pdata		5619481	0					
ANR	5619958	Identifier	StemSnapV		5619481	1					
ANR	5619959	Identifier	values		5619481	1					
ANR	5619960	Argument	pdata -> StemSnapV . count		5619481	3					
ANR	5619961	MemberAccess	pdata -> StemSnapV . count		5619481	0					
ANR	5619962	PtrMemberAccess	pdata -> StemSnapV		5619481	0					
ANR	5619963	Identifier	pdata		5619481	0					
ANR	5619964	Identifier	StemSnapV		5619481	1					
ANR	5619965	Identifier	count		5619481	1					
ANR	5619966	Argument	1		5619481	4					
ANR	5619967	PrimaryExpression	1		5619481	0					
ANR	5619968	ReturnStatement	return code ;	787:4:32870:32881	5619481	25	True				
ANR	5619969	Identifier	code		5619481	0					
ANR	5619970	ReturnType	int		5619481	1					
ANR	5619971	Identifier	t1_hinter__set_font_data		5619481	2					
ANR	5619972	ParameterList	"gs_memory_t * mem , t1_hinter * self , int FontType , gs_type1_data * pdata , bool no_grid_fitting , bool is_resource"		5619481	3					
ANR	5619973	Parameter	gs_memory_t * mem	749:29:30521:30536	5619481	0	True				
ANR	5619974	ParameterType	gs_memory_t *		5619481	0					
ANR	5619975	Identifier	mem		5619481	1					
ANR	5619976	Parameter	t1_hinter * self	749:47:30539:30554	5619481	1	True				
ANR	5619977	ParameterType	t1_hinter *		5619481	0					
ANR	5619978	Identifier	self		5619481	1					
ANR	5619979	Parameter	int FontType	749:65:30557:30568	5619481	2	True				
ANR	5619980	ParameterType	int		5619481	0					
ANR	5619981	Identifier	FontType		5619481	1					
ANR	5619982	Parameter	gs_type1_data * pdata	749:79:30571:30590	5619481	3	True				
ANR	5619983	ParameterType	gs_type1_data *		5619481	0					
ANR	5619984	Identifier	pdata		5619481	1					
ANR	5619985	Parameter	bool no_grid_fitting	749:101:30593:30612	5619481	4	True				
ANR	5619986	ParameterType	bool		5619481	0					
ANR	5619987	Identifier	no_grid_fitting		5619481	1					
ANR	5619988	Parameter	bool is_resource	749:123:30615:30630	5619481	5	True				
ANR	5619989	ParameterType	bool		5619481	0					
ANR	5619990	Identifier	is_resource		5619481	1					
ANR	5619991	CFGEntryNode	ENTRY		5619481		True				
ANR	5619992	CFGExitNode	EXIT		5619481		True				
ANR	5619993	Symbol	pdata -> FamilyBlues . values		5619481						
ANR	5619994	Symbol	pdata -> FamilyBlues		5619481						
ANR	5619995	Symbol	no_grid_fitting		5619481						
ANR	5619996	Symbol	pdata -> StemSnapH		5619481						
ANR	5619997	Symbol	pdata -> BlueScale		5619481						
ANR	5619998	Symbol	self -> suppress_overshoots		5619481						
ANR	5619999	Symbol	pdata -> ForceBold		5619481						
ANR	5620000	Symbol	pdata -> FamilyBlues . count		5619481						
ANR	5620001	Symbol	self -> blue_fuzz		5619481						
ANR	5620002	Symbol	pdata -> OtherBlues . count		5619481						
ANR	5620003	Symbol	pdata -> StemSnapV		5619481						
ANR	5620004	Symbol	* pdata		5619481						
ANR	5620005	Symbol	topzone		5619481						
ANR	5620006	Symbol	self -> overshoot_threshold		5619481						
ANR	5620007	Symbol	NULL		5619481						
ANR	5620008	Symbol	* self		5619481						
ANR	5620009	Symbol	self -> pass_through		5619481						
ANR	5620010	Symbol	pdata -> StdHW		5619481						
ANR	5620011	Symbol	pdata -> BlueFuzz		5619481						
ANR	5620012	Symbol	self -> charpath_flag		5619481						
ANR	5620013	Symbol	pdata -> StdHW . count		5619481						
ANR	5620014	Symbol	t1_hinter__set_stem_snap		5619481						
ANR	5620015	Symbol	pdata -> BlueShift		5619481						
ANR	5620016	Symbol	true		5619481						
ANR	5620017	Symbol	pdata -> FamilyOtherBlues		5619481						
ANR	5620018	Symbol	pdata -> BlueValues . values		5619481						
ANR	5620019	Symbol	pdata -> StemSnapV . count		5619481						
ANR	5620020	Symbol	pdata		5619481						
ANR	5620021	Symbol	code		5619481						
ANR	5620022	Symbol	pdata -> OtherBlues		5619481						
ANR	5620023	Symbol	self -> FontType		5619481						
ANR	5620024	Symbol	self -> disable_hinting		5619481						
ANR	5620025	Symbol	pdata -> OtherBlues . values		5619481						
ANR	5620026	Symbol	self -> memory		5619481						
ANR	5620027	Symbol	pdata -> BlueValues		5619481						
ANR	5620028	Symbol	float2fixed		5619481						
ANR	5620029	Symbol	min		5619481						
ANR	5620030	Symbol	mem		5619481						
ANR	5620031	Symbol	pdata -> StemSnapV . values		5619481						
ANR	5620032	Symbol	pdata -> FamilyOtherBlues . count		5619481						
ANR	5620033	Symbol	pdata -> StdVW . count		5619481						
ANR	5620034	Symbol	pdata -> StdVW		5619481						
ANR	5620035	Symbol	fixed_half		5619481						
ANR	5620036	Symbol	botzone		5619481						
ANR	5620037	Symbol	pdata -> BlueValues . count		5619481						
ANR	5620038	Symbol	is_resource		5619481						
ANR	5620039	Symbol	self -> ForceBold		5619481						
ANR	5620040	Symbol	pdata -> StemSnapH . values		5619481						
ANR	5620041	Symbol	pdata -> StemSnapH . count		5619481						
ANR	5620042	Symbol	self -> blue_shift		5619481						
ANR	5620043	Symbol	self -> heigt_transform_coef		5619481						
ANR	5620044	Symbol	false		5619481						
ANR	5620045	Symbol	self -> log2_pixels_y		5619481						
ANR	5620046	Symbol	FontType		5619481						
ANR	5620047	Symbol	pdata -> StdHW . values		5619481						
ANR	5620048	Symbol	t1_hinter__set_alignment_zones		5619481						
ANR	5620049	Symbol	pdata -> StdVW . values		5619481						
ANR	5620050	Symbol	self -> fix_contour_sign		5619481						
ANR	5620051	Symbol	pdata -> FamilyOtherBlues . values		5619481						
ANR	5620052	Symbol	self		5619481						
ANR	5620053	Symbol	self -> BlueScale		5619481						
ANR	5620054	Function	t1_hinter__set_font42_data	790:0:32886:33794							
ANR	5620055	FunctionDef	"t1_hinter__set_font42_data (t1_hinter * self , int FontType , gs_type42_data * pdata , bool no_grid_fitting)"		5620054	0					
ANR	5620056	CompoundStatement		791:0:32994:33794	5620054	0					
ANR	5620057	ExpressionStatement	t1_hinter__init_outline ( self )	792:4:33000:33029	5620054	0	True				
ANR	5620058	CallExpression	t1_hinter__init_outline ( self )		5620054	0					
ANR	5620059	Callee	t1_hinter__init_outline		5620054	0					
ANR	5620060	Identifier	t1_hinter__init_outline		5620054	0					
ANR	5620061	ArgumentList	self		5620054	1					
ANR	5620062	Argument	self		5620054	0					
ANR	5620063	Identifier	self		5620054	0					
ANR	5620064	ExpressionStatement	self -> FontType = FontType	793:4:33035:33060	5620054	1	True				
ANR	5620065	AssignmentExpression	self -> FontType = FontType		5620054	0		=			
ANR	5620066	PtrMemberAccess	self -> FontType		5620054	0					
ANR	5620067	Identifier	self		5620054	0					
ANR	5620068	Identifier	FontType		5620054	1					
ANR	5620069	Identifier	FontType		5620054	1					
ANR	5620070	ExpressionStatement	self -> BlueScale = 0.039625	794:4:33066:33092	5620054	2	True				
ANR	5620071	AssignmentExpression	self -> BlueScale = 0.039625		5620054	0		=			
ANR	5620072	PtrMemberAccess	self -> BlueScale		5620054	0					
ANR	5620073	Identifier	self		5620054	0					
ANR	5620074	Identifier	BlueScale		5620054	1					
ANR	5620075	PrimaryExpression	0.039625		5620054	1					
ANR	5620076	ExpressionStatement	self -> blue_shift = 7	795:4:33127:33147	5620054	3	True				
ANR	5620077	AssignmentExpression	self -> blue_shift = 7		5620054	0		=			
ANR	5620078	PtrMemberAccess	self -> blue_shift		5620054	0					
ANR	5620079	Identifier	self		5620054	0					
ANR	5620080	Identifier	blue_shift		5620054	1					
ANR	5620081	PrimaryExpression	7		5620054	1					
ANR	5620082	ExpressionStatement	self -> blue_fuzz = 1	796:4:33182:33202	5620054	4	True				
ANR	5620083	AssignmentExpression	self -> blue_fuzz = 1		5620054	0		=			
ANR	5620084	PtrMemberAccess	self -> blue_fuzz		5620054	0					
ANR	5620085	Identifier	self		5620054	0					
ANR	5620086	Identifier	blue_fuzz		5620054	1					
ANR	5620087	PrimaryExpression	1		5620054	1					
ANR	5620088	ExpressionStatement	self -> suppress_overshoots = ( self -> BlueScale > self -> heigt_transform_coef / ( 1 << self -> log2_pixels_y ) - 0.00020417 )	797:4:33237:33353	5620054	5	True				
ANR	5620089	AssignmentExpression	self -> suppress_overshoots = ( self -> BlueScale > self -> heigt_transform_coef / ( 1 << self -> log2_pixels_y ) - 0.00020417 )		5620054	0		=			
ANR	5620090	PtrMemberAccess	self -> suppress_overshoots		5620054	0					
ANR	5620091	Identifier	self		5620054	0					
ANR	5620092	Identifier	suppress_overshoots		5620054	1					
ANR	5620093	RelationalExpression	self -> BlueScale > self -> heigt_transform_coef / ( 1 << self -> log2_pixels_y ) - 0.00020417		5620054	1		>			
ANR	5620094	PtrMemberAccess	self -> BlueScale		5620054	0					
ANR	5620095	Identifier	self		5620054	0					
ANR	5620096	Identifier	BlueScale		5620054	1					
ANR	5620097	AdditiveExpression	self -> heigt_transform_coef / ( 1 << self -> log2_pixels_y ) - 0.00020417		5620054	1		-			
ANR	5620098	MultiplicativeExpression	self -> heigt_transform_coef / ( 1 << self -> log2_pixels_y )		5620054	0		/			
ANR	5620099	PtrMemberAccess	self -> heigt_transform_coef		5620054	0					
ANR	5620100	Identifier	self		5620054	0					
ANR	5620101	Identifier	heigt_transform_coef		5620054	1					
ANR	5620102	ShiftExpression	1 << self -> log2_pixels_y		5620054	1		<<			
ANR	5620103	PrimaryExpression	1		5620054	0					
ANR	5620104	PtrMemberAccess	self -> log2_pixels_y		5620054	1					
ANR	5620105	Identifier	self		5620054	0					
ANR	5620106	Identifier	log2_pixels_y		5620054	1					
ANR	5620107	PrimaryExpression	0.00020417		5620054	1					
ANR	5620108	ExpressionStatement	self -> overshoot_threshold = ( self -> heigt_transform_coef != 0 ? ( t1_glyph_space_coord ) ( fixed_half * ( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef ) : 0 )	798:4:33359:33519	5620054	6	True				
ANR	5620109	AssignmentExpression	self -> overshoot_threshold = ( self -> heigt_transform_coef != 0 ? ( t1_glyph_space_coord ) ( fixed_half * ( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef ) : 0 )		5620054	0		=			
ANR	5620110	PtrMemberAccess	self -> overshoot_threshold		5620054	0					
ANR	5620111	Identifier	self		5620054	0					
ANR	5620112	Identifier	overshoot_threshold		5620054	1					
ANR	5620113	ConditionalExpression	self -> heigt_transform_coef != 0 ? ( t1_glyph_space_coord ) ( fixed_half * ( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef ) : 0		5620054	1					
ANR	5620114	Condition	self -> heigt_transform_coef != 0		5620054	0					
ANR	5620115	EqualityExpression	self -> heigt_transform_coef != 0		5620054	0		!=			
ANR	5620116	PtrMemberAccess	self -> heigt_transform_coef		5620054	0					
ANR	5620117	Identifier	self		5620054	0					
ANR	5620118	Identifier	heigt_transform_coef		5620054	1					
ANR	5620119	PrimaryExpression	0		5620054	1					
ANR	5620120	CastExpression	( t1_glyph_space_coord ) ( fixed_half * ( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef )		5620054	1					
ANR	5620121	CastTarget	t1_glyph_space_coord		5620054	0					
ANR	5620122	MultiplicativeExpression	fixed_half * ( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef		5620054	1		*			
ANR	5620123	Identifier	fixed_half		5620054	0					
ANR	5620124	MultiplicativeExpression	( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef		5620054	1		/			
ANR	5620125	ShiftExpression	1 << self -> log2_pixels_y		5620054	0		<<			
ANR	5620126	PrimaryExpression	1		5620054	0					
ANR	5620127	PtrMemberAccess	self -> log2_pixels_y		5620054	1					
ANR	5620128	Identifier	self		5620054	0					
ANR	5620129	Identifier	log2_pixels_y		5620054	1					
ANR	5620130	PtrMemberAccess	self -> heigt_transform_coef		5620054	1					
ANR	5620131	Identifier	self		5620054	0					
ANR	5620132	Identifier	heigt_transform_coef		5620054	1					
ANR	5620133	PrimaryExpression	0		5620054	2					
ANR	5620134	ExpressionStatement	self -> ForceBold = false	799:4:33525:33548	5620054	7	True				
ANR	5620135	AssignmentExpression	self -> ForceBold = false		5620054	0		=			
ANR	5620136	PtrMemberAccess	self -> ForceBold		5620054	0					
ANR	5620137	Identifier	self		5620054	0					
ANR	5620138	Identifier	ForceBold		5620054	1					
ANR	5620139	Identifier	false		5620054	1					
ANR	5620140	ExpressionStatement	self -> pass_through |= no_grid_fitting	800:4:33554:33591	5620054	8	True				
ANR	5620141	AssignmentExpression	self -> pass_through |= no_grid_fitting		5620054	0		|=			
ANR	5620142	PtrMemberAccess	self -> pass_through		5620054	0					
ANR	5620143	Identifier	self		5620054	0					
ANR	5620144	Identifier	pass_through		5620054	1					
ANR	5620145	Identifier	no_grid_fitting		5620054	1					
ANR	5620146	ExpressionStatement	self -> charpath_flag = no_grid_fitting	801:4:33597:33634	5620054	9	True				
ANR	5620147	AssignmentExpression	self -> charpath_flag = no_grid_fitting		5620054	0		=			
ANR	5620148	PtrMemberAccess	self -> charpath_flag		5620054	0					
ANR	5620149	Identifier	self		5620054	0					
ANR	5620150	Identifier	charpath_flag		5620054	1					
ANR	5620151	Identifier	no_grid_fitting		5620054	1					
ANR	5620152	ExpressionStatement	self -> autohinting = true	802:4:33640:33664	5620054	10	True				
ANR	5620153	AssignmentExpression	self -> autohinting = true		5620054	0		=			
ANR	5620154	PtrMemberAccess	self -> autohinting		5620054	0					
ANR	5620155	Identifier	self		5620054	0					
ANR	5620156	Identifier	autohinting		5620054	1					
ANR	5620157	Identifier	true		5620054	1					
ANR	5620158	IfStatement	if ( self -> pass_through )		5620054	11					
ANR	5620159	Condition	self -> pass_through	803:8:33674:33691	5620054	0	True				
ANR	5620160	PtrMemberAccess	self -> pass_through		5620054	0					
ANR	5620161	Identifier	self		5620054	0					
ANR	5620162	Identifier	pass_through		5620054	1					
ANR	5620163	ReturnStatement	return 0 ;	804:8:33702:33710	5620054	1	True				
ANR	5620164	PrimaryExpression	0		5620054	0					
ANR	5620165	ReturnStatement	return 0 ;	806:4:33784:33792	5620054	12	True				
ANR	5620166	PrimaryExpression	0		5620054	0					
ANR	5620167	ReturnType	int		5620054	1					
ANR	5620168	Identifier	t1_hinter__set_font42_data		5620054	2					
ANR	5620169	ParameterList	"t1_hinter * self , int FontType , gs_type42_data * pdata , bool no_grid_fitting"		5620054	3					
ANR	5620170	Parameter	t1_hinter * self	790:31:32917:32932	5620054	0	True				
ANR	5620171	ParameterType	t1_hinter *		5620054	0					
ANR	5620172	Identifier	self		5620054	1					
ANR	5620173	Parameter	int FontType	790:49:32935:32946	5620054	1	True				
ANR	5620174	ParameterType	int		5620054	0					
ANR	5620175	Identifier	FontType		5620054	1					
ANR	5620176	Parameter	gs_type42_data * pdata	790:63:32949:32969	5620054	2	True				
ANR	5620177	ParameterType	gs_type42_data *		5620054	0					
ANR	5620178	Identifier	pdata		5620054	1					
ANR	5620179	Parameter	bool no_grid_fitting	790:86:32972:32991	5620054	3	True				
ANR	5620180	ParameterType	bool		5620054	0					
ANR	5620181	Identifier	no_grid_fitting		5620054	1					
ANR	5620182	CFGEntryNode	ENTRY		5620054		True				
ANR	5620183	CFGExitNode	EXIT		5620054		True				
ANR	5620184	Symbol	self -> ForceBold		5620054						
ANR	5620185	Symbol	self -> autohinting		5620054						
ANR	5620186	Symbol	pdata		5620054						
ANR	5620187	Symbol	self -> overshoot_threshold		5620054						
ANR	5620188	Symbol	self -> blue_shift		5620054						
ANR	5620189	Symbol	* self		5620054						
ANR	5620190	Symbol	self -> FontType		5620054						
ANR	5620191	Symbol	self -> heigt_transform_coef		5620054						
ANR	5620192	Symbol	false		5620054						
ANR	5620193	Symbol	self -> pass_through		5620054						
ANR	5620194	Symbol	no_grid_fitting		5620054						
ANR	5620195	Symbol	self -> log2_pixels_y		5620054						
ANR	5620196	Symbol	FontType		5620054						
ANR	5620197	Symbol	self -> charpath_flag		5620054						
ANR	5620198	Symbol	self -> suppress_overshoots		5620054						
ANR	5620199	Symbol	true		5620054						
ANR	5620200	Symbol	self		5620054						
ANR	5620201	Symbol	self -> BlueScale		5620054						
ANR	5620202	Symbol	fixed_half		5620054						
ANR	5620203	Symbol	self -> blue_fuzz		5620054						
ANR	5620204	Function	t1_hinter__can_add_pole	809:0:33797:34242							
ANR	5620205	FunctionDef	"t1_hinter__can_add_pole (t1_hinter * self , t1_pole * * pole)"		5620204	0					
ANR	5620206	CompoundStatement		810:0:33873:34242	5620204	0					
ANR	5620207	IfStatement	if ( self -> pole_count >= self -> max_pole_count )		5620204	0					
ANR	5620208	Condition	self -> pole_count >= self -> max_pole_count	810:7:33881:33920	5620204	0	True				
ANR	5620209	RelationalExpression	self -> pole_count >= self -> max_pole_count		5620204	0		>=			
ANR	5620210	PtrMemberAccess	self -> pole_count		5620204	0					
ANR	5620211	Identifier	self		5620204	0					
ANR	5620212	Identifier	pole_count		5620204	1					
ANR	5620213	PtrMemberAccess	self -> max_pole_count		5620204	1					
ANR	5620214	Identifier	self		5620204	0					
ANR	5620215	Identifier	max_pole_count		5620204	1					
ANR	5620216	IfStatement	"if ( t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> pole , self -> pole0 , & self -> max_pole_count , sizeof ( self -> pole0 ) / count_of ( self -> pole0 ) , T1_MAX_POLES , s_pole_array ) )"		5620204	1					
ANR	5620217	Condition	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> pole , self -> pole0 , & self -> max_pole_count , sizeof ( self -> pole0 ) / count_of ( self -> pole0 ) , T1_MAX_POLES , s_pole_array )"	811:11:33934:34138	5620204	0	True				
ANR	5620218	CallExpression	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> pole , self -> pole0 , & self -> max_pole_count , sizeof ( self -> pole0 ) / count_of ( self -> pole0 ) , T1_MAX_POLES , s_pole_array )"		5620204	0					
ANR	5620219	Callee	t1_hinter__realloc_array		5620204	0					
ANR	5620220	Identifier	t1_hinter__realloc_array		5620204	0					
ANR	5620221	ArgumentList	self -> memory		5620204	1					
ANR	5620222	Argument	self -> memory		5620204	0					
ANR	5620223	PtrMemberAccess	self -> memory		5620204	0					
ANR	5620224	Identifier	self		5620204	0					
ANR	5620225	Identifier	memory		5620204	1					
ANR	5620226	Argument	( void * * ) & self -> pole		5620204	1					
ANR	5620227	CastExpression	( void * * ) & self -> pole		5620204	0					
ANR	5620228	CastTarget	void * *		5620204	0					
ANR	5620229	UnaryOperationExpression	& self -> pole		5620204	1					
ANR	5620230	UnaryOperator	&		5620204	0					
ANR	5620231	PtrMemberAccess	self -> pole		5620204	1					
ANR	5620232	Identifier	self		5620204	0					
ANR	5620233	Identifier	pole		5620204	1					
ANR	5620234	Argument	self -> pole0		5620204	2					
ANR	5620235	PtrMemberAccess	self -> pole0		5620204	0					
ANR	5620236	Identifier	self		5620204	0					
ANR	5620237	Identifier	pole0		5620204	1					
ANR	5620238	Argument	& self -> max_pole_count		5620204	3					
ANR	5620239	UnaryOperationExpression	& self -> max_pole_count		5620204	0					
ANR	5620240	UnaryOperator	&		5620204	0					
ANR	5620241	PtrMemberAccess	self -> max_pole_count		5620204	1					
ANR	5620242	Identifier	self		5620204	0					
ANR	5620243	Identifier	max_pole_count		5620204	1					
ANR	5620244	Argument	sizeof ( self -> pole0 ) / count_of ( self -> pole0 )		5620204	4					
ANR	5620245	MultiplicativeExpression	sizeof ( self -> pole0 ) / count_of ( self -> pole0 )		5620204	0		/			
ANR	5620246	SizeofExpression	sizeof ( self -> pole0 )		5620204	0					
ANR	5620247	Sizeof	sizeof		5620204	0					
ANR	5620248	PtrMemberAccess	self -> pole0		5620204	1					
ANR	5620249	Identifier	self		5620204	0					
ANR	5620250	Identifier	pole0		5620204	1					
ANR	5620251	CallExpression	count_of ( self -> pole0 )		5620204	1					
ANR	5620252	Callee	count_of		5620204	0					
ANR	5620253	Identifier	count_of		5620204	0					
ANR	5620254	ArgumentList	self -> pole0		5620204	1					
ANR	5620255	Argument	self -> pole0		5620204	0					
ANR	5620256	PtrMemberAccess	self -> pole0		5620204	0					
ANR	5620257	Identifier	self		5620204	0					
ANR	5620258	Identifier	pole0		5620204	1					
ANR	5620259	Argument	T1_MAX_POLES		5620204	5					
ANR	5620260	Identifier	T1_MAX_POLES		5620204	0					
ANR	5620261	Argument	s_pole_array		5620204	6					
ANR	5620262	Identifier	s_pole_array		5620204	0					
ANR	5620263	ExpressionStatement	return_error ( gs_error_VMerror )	813:12:34153:34183	5620204	1	True				
ANR	5620264	CallExpression	return_error ( gs_error_VMerror )		5620204	0					
ANR	5620265	Callee	return_error		5620204	0					
ANR	5620266	Identifier	return_error		5620204	0					
ANR	5620267	ArgumentList	gs_error_VMerror		5620204	1					
ANR	5620268	Argument	gs_error_VMerror		5620204	0					
ANR	5620269	Identifier	gs_error_VMerror		5620204	0					
ANR	5620270	ExpressionStatement	* pole = & self -> pole [ self -> pole_count ]	814:4:34189:34226	5620204	1	True				
ANR	5620271	AssignmentExpression	* pole = & self -> pole [ self -> pole_count ]		5620204	0		=			
ANR	5620272	UnaryOperationExpression	* pole		5620204	0					
ANR	5620273	UnaryOperator	*		5620204	0					
ANR	5620274	Identifier	pole		5620204	1					
ANR	5620275	UnaryOperationExpression	& self -> pole [ self -> pole_count ]		5620204	1					
ANR	5620276	UnaryOperator	&		5620204	0					
ANR	5620277	ArrayIndexing	self -> pole [ self -> pole_count ]		5620204	1					
ANR	5620278	PtrMemberAccess	self -> pole		5620204	0					
ANR	5620279	Identifier	self		5620204	0					
ANR	5620280	Identifier	pole		5620204	1					
ANR	5620281	PtrMemberAccess	self -> pole_count		5620204	1					
ANR	5620282	Identifier	self		5620204	0					
ANR	5620283	Identifier	pole_count		5620204	1					
ANR	5620284	ReturnStatement	return 0 ;	815:4:34232:34240	5620204	2	True				
ANR	5620285	PrimaryExpression	0		5620204	0					
ANR	5620286	ReturnType	static inline int		5620204	1					
ANR	5620287	Identifier	t1_hinter__can_add_pole		5620204	2					
ANR	5620288	ParameterList	"t1_hinter * self , t1_pole * * pole"		5620204	3					
ANR	5620289	Parameter	t1_hinter * self	809:42:33839:33854	5620204	0	True				
ANR	5620290	ParameterType	t1_hinter *		5620204	0					
ANR	5620291	Identifier	self		5620204	1					
ANR	5620292	Parameter	t1_pole * * pole	809:60:33857:33870	5620204	1	True				
ANR	5620293	ParameterType	t1_pole * *		5620204	0					
ANR	5620294	Identifier	pole		5620204	1					
ANR	5620295	CFGEntryNode	ENTRY		5620204		True				
ANR	5620296	CFGExitNode	EXIT		5620204		True				
ANR	5620297	Symbol	& self -> max_pole_count		5620204						
ANR	5620298	Symbol	self -> pole_count		5620204						
ANR	5620299	Symbol	* self		5620204						
ANR	5620300	Symbol	t1_hinter__realloc_array		5620204						
ANR	5620301	Symbol	s_pole_array		5620204						
ANR	5620302	Symbol	pole		5620204						
ANR	5620303	Symbol	* pole		5620204						
ANR	5620304	Symbol	self -> memory		5620204						
ANR	5620305	Symbol	gs_error_VMerror		5620204						
ANR	5620306	Symbol	self -> max_pole_count		5620204						
ANR	5620307	Symbol	self -> pole0		5620204						
ANR	5620308	Symbol	count_of		5620204						
ANR	5620309	Symbol	self		5620204						
ANR	5620310	Symbol	self -> pole		5620204						
ANR	5620311	Symbol	& self -> pole		5620204						
ANR	5620312	Symbol	T1_MAX_POLES		5620204						
ANR	5620313	Function	t1_hinter__add_pole	818:0:34245:34818							
ANR	5620314	FunctionDef	"t1_hinter__add_pole (t1_hinter * self , t1_glyph_space_coord xx , t1_glyph_space_coord yy , enum t1_pole_type type)"		5620313	0					
ANR	5620315	CompoundStatement		819:0:34375:34818	5620313	0					
ANR	5620316	IdentifierDeclStatement	t1_pole * pole ;	819:3:34379:34392	5620313	0	True				
ANR	5620317	IdentifierDecl	* pole		5620313	0					
ANR	5620318	IdentifierDeclType	t1_pole *		5620313	0					
ANR	5620319	Identifier	pole		5620313	1					
ANR	5620320	IdentifierDeclStatement	"int code = t1_hinter__can_add_pole ( self , & pole ) ;"	820:4:34398:34445	5620313	1	True				
ANR	5620321	IdentifierDecl	"code = t1_hinter__can_add_pole ( self , & pole )"		5620313	0					
ANR	5620322	IdentifierDeclType	int		5620313	0					
ANR	5620323	Identifier	code		5620313	1					
ANR	5620324	AssignmentExpression	"code = t1_hinter__can_add_pole ( self , & pole )"		5620313	2		=			
ANR	5620325	Identifier	code		5620313	0					
ANR	5620326	CallExpression	"t1_hinter__can_add_pole ( self , & pole )"		5620313	1					
ANR	5620327	Callee	t1_hinter__can_add_pole		5620313	0					
ANR	5620328	Identifier	t1_hinter__can_add_pole		5620313	0					
ANR	5620329	ArgumentList	self		5620313	1					
ANR	5620330	Argument	self		5620313	0					
ANR	5620331	Identifier	self		5620313	0					
ANR	5620332	Argument	& pole		5620313	1					
ANR	5620333	UnaryOperationExpression	& pole		5620313	0					
ANR	5620334	UnaryOperator	&		5620313	0					
ANR	5620335	Identifier	pole		5620313	1					
ANR	5620336	IfStatement	if ( code < 0 )		5620313	2					
ANR	5620337	Condition	code < 0	822:8:34456:34463	5620313	0	True				
ANR	5620338	RelationalExpression	code < 0		5620313	0		<			
ANR	5620339	Identifier	code		5620313	0					
ANR	5620340	PrimaryExpression	0		5620313	1					
ANR	5620341	ReturnStatement	return code ;	823:8:34474:34485	5620313	1	True				
ANR	5620342	Identifier	code		5620313	0					
ANR	5620343	ExpressionStatement	pole -> gx = pole -> ax = self -> cx += xx	824:4:34491:34527	5620313	3	True				
ANR	5620344	AssignmentExpression	pole -> gx = pole -> ax = self -> cx += xx		5620313	0		=			
ANR	5620345	PtrMemberAccess	pole -> gx		5620313	0					
ANR	5620346	Identifier	pole		5620313	0					
ANR	5620347	Identifier	gx		5620313	1					
ANR	5620348	AssignmentExpression	pole -> ax = self -> cx += xx		5620313	1		=			
ANR	5620349	PtrMemberAccess	pole -> ax		5620313	0					
ANR	5620350	Identifier	pole		5620313	0					
ANR	5620351	Identifier	ax		5620313	1					
ANR	5620352	AssignmentExpression	self -> cx += xx		5620313	1		+=			
ANR	5620353	PtrMemberAccess	self -> cx		5620313	0					
ANR	5620354	Identifier	self		5620313	0					
ANR	5620355	Identifier	cx		5620313	1					
ANR	5620356	Identifier	xx		5620313	1					
ANR	5620357	ExpressionStatement	pole -> gy = pole -> ay = self -> cy += yy	825:4:34533:34569	5620313	4	True				
ANR	5620358	AssignmentExpression	pole -> gy = pole -> ay = self -> cy += yy		5620313	0		=			
ANR	5620359	PtrMemberAccess	pole -> gy		5620313	0					
ANR	5620360	Identifier	pole		5620313	0					
ANR	5620361	Identifier	gy		5620313	1					
ANR	5620362	AssignmentExpression	pole -> ay = self -> cy += yy		5620313	1		=			
ANR	5620363	PtrMemberAccess	pole -> ay		5620313	0					
ANR	5620364	Identifier	pole		5620313	0					
ANR	5620365	Identifier	ay		5620313	1					
ANR	5620366	AssignmentExpression	self -> cy += yy		5620313	1		+=			
ANR	5620367	PtrMemberAccess	self -> cy		5620313	0					
ANR	5620368	Identifier	self		5620313	0					
ANR	5620369	Identifier	cy		5620313	1					
ANR	5620370	Identifier	yy		5620313	1					
ANR	5620371	ExpressionStatement	pole -> ox = pole -> oy = 0	826:4:34575:34598	5620313	5	True				
ANR	5620372	AssignmentExpression	pole -> ox = pole -> oy = 0		5620313	0		=			
ANR	5620373	PtrMemberAccess	pole -> ox		5620313	0					
ANR	5620374	Identifier	pole		5620313	0					
ANR	5620375	Identifier	ox		5620313	1					
ANR	5620376	AssignmentExpression	pole -> oy = 0		5620313	1		=			
ANR	5620377	PtrMemberAccess	pole -> oy		5620313	0					
ANR	5620378	Identifier	pole		5620313	0					
ANR	5620379	Identifier	oy		5620313	1					
ANR	5620380	PrimaryExpression	0		5620313	1					
ANR	5620381	ExpressionStatement	pole -> type = type	827:4:34604:34621	5620313	6	True				
ANR	5620382	AssignmentExpression	pole -> type = type		5620313	0		=			
ANR	5620383	PtrMemberAccess	pole -> type		5620313	0					
ANR	5620384	Identifier	pole		5620313	0					
ANR	5620385	Identifier	type		5620313	1					
ANR	5620386	Identifier	type		5620313	1					
ANR	5620387	ExpressionStatement	pole -> contour_index = self -> contour_count	828:4:34627:34668	5620313	7	True				
ANR	5620388	AssignmentExpression	pole -> contour_index = self -> contour_count		5620313	0		=			
ANR	5620389	PtrMemberAccess	pole -> contour_index		5620313	0					
ANR	5620390	Identifier	pole		5620313	0					
ANR	5620391	Identifier	contour_index		5620313	1					
ANR	5620392	PtrMemberAccess	self -> contour_count		5620313	1					
ANR	5620393	Identifier	self		5620313	0					
ANR	5620394	Identifier	contour_count		5620313	1					
ANR	5620395	ExpressionStatement	pole -> aligned_x = pole -> aligned_y = unaligned	829:4:34674:34719	5620313	8	True				
ANR	5620396	AssignmentExpression	pole -> aligned_x = pole -> aligned_y = unaligned		5620313	0		=			
ANR	5620397	PtrMemberAccess	pole -> aligned_x		5620313	0					
ANR	5620398	Identifier	pole		5620313	0					
ANR	5620399	Identifier	aligned_x		5620313	1					
ANR	5620400	AssignmentExpression	pole -> aligned_y = unaligned		5620313	1		=			
ANR	5620401	PtrMemberAccess	pole -> aligned_y		5620313	0					
ANR	5620402	Identifier	pole		5620313	0					
ANR	5620403	Identifier	aligned_y		5620313	1					
ANR	5620404	Identifier	unaligned		5620313	1					
ANR	5620405	ExpressionStatement	pole -> boundary_length_x = pole -> boundary_length_y = 0	830:4:34725:34778	5620313	9	True				
ANR	5620406	AssignmentExpression	pole -> boundary_length_x = pole -> boundary_length_y = 0		5620313	0		=			
ANR	5620407	PtrMemberAccess	pole -> boundary_length_x		5620313	0					
ANR	5620408	Identifier	pole		5620313	0					
ANR	5620409	Identifier	boundary_length_x		5620313	1					
ANR	5620410	AssignmentExpression	pole -> boundary_length_y = 0		5620313	1		=			
ANR	5620411	PtrMemberAccess	pole -> boundary_length_y		5620313	0					
ANR	5620412	Identifier	pole		5620313	0					
ANR	5620413	Identifier	boundary_length_y		5620313	1					
ANR	5620414	PrimaryExpression	0		5620313	1					
ANR	5620415	ExpressionStatement	self -> pole_count ++	831:4:34784:34802	5620313	10	True				
ANR	5620416	PostIncDecOperationExpression	self -> pole_count ++		5620313	0					
ANR	5620417	PtrMemberAccess	self -> pole_count		5620313	0					
ANR	5620418	Identifier	self		5620313	0					
ANR	5620419	Identifier	pole_count		5620313	1					
ANR	5620420	IncDec	++		5620313	1					
ANR	5620421	ReturnStatement	return 0 ;	832:4:34808:34816	5620313	11	True				
ANR	5620422	PrimaryExpression	0		5620313	0					
ANR	5620423	ReturnType	static inline int		5620313	1					
ANR	5620424	Identifier	t1_hinter__add_pole		5620313	2					
ANR	5620425	ParameterList	"t1_hinter * self , t1_glyph_space_coord xx , t1_glyph_space_coord yy , enum t1_pole_type type"		5620313	3					
ANR	5620426	Parameter	t1_hinter * self	818:38:34283:34298	5620313	0	True				
ANR	5620427	ParameterType	t1_hinter *		5620313	0					
ANR	5620428	Identifier	self		5620313	1					
ANR	5620429	Parameter	t1_glyph_space_coord xx	818:56:34301:34323	5620313	1	True				
ANR	5620430	ParameterType	t1_glyph_space_coord		5620313	0					
ANR	5620431	Identifier	xx		5620313	1					
ANR	5620432	Parameter	t1_glyph_space_coord yy	818:81:34326:34348	5620313	2	True				
ANR	5620433	ParameterType	t1_glyph_space_coord		5620313	0					
ANR	5620434	Identifier	yy		5620313	1					
ANR	5620435	Parameter	enum t1_pole_type type	818:106:34351:34372	5620313	3	True				
ANR	5620436	ParameterType	enum t1_pole_type		5620313	0					
ANR	5620437	Identifier	type		5620313	1					
ANR	5620438	CFGEntryNode	ENTRY		5620313		True				
ANR	5620439	CFGExitNode	EXIT		5620313		True				
ANR	5620440	Symbol	xx		5620313						
ANR	5620441	Symbol	pole -> oy		5620313						
ANR	5620442	Symbol	code		5620313						
ANR	5620443	Symbol	pole -> ox		5620313						
ANR	5620444	Symbol	self -> pole_count		5620313						
ANR	5620445	Symbol	pole -> boundary_length_y		5620313						
ANR	5620446	Symbol	pole -> gy		5620313						
ANR	5620447	Symbol	t1_hinter__can_add_pole		5620313						
ANR	5620448	Symbol	pole -> gx		5620313						
ANR	5620449	Symbol	pole -> boundary_length_x		5620313						
ANR	5620450	Symbol	type		5620313						
ANR	5620451	Symbol	pole		5620313						
ANR	5620452	Symbol	pole -> ay		5620313						
ANR	5620453	Symbol	* pole		5620313						
ANR	5620454	Symbol	pole -> ax		5620313						
ANR	5620455	Symbol	pole -> contour_index		5620313						
ANR	5620456	Symbol	self -> cx		5620313						
ANR	5620457	Symbol	self -> cy		5620313						
ANR	5620458	Symbol	yy		5620313						
ANR	5620459	Symbol	pole -> type		5620313						
ANR	5620460	Symbol	self -> contour_count		5620313						
ANR	5620461	Symbol	* self		5620313						
ANR	5620462	Symbol	unaligned		5620313						
ANR	5620463	Symbol	self		5620313						
ANR	5620464	Symbol	& pole		5620313						
ANR	5620465	Symbol	pole -> aligned_y		5620313						
ANR	5620466	Symbol	pole -> aligned_x		5620313						
ANR	5620467	Function	t1_hinter__sbw	835:0:34821:35087							
ANR	5620468	FunctionDef	"t1_hinter__sbw (t1_hinter * self , fixed sbx , fixed sby , fixed wx , fixed wy)"		5620467	0					
ANR	5620469	CompoundStatement		836:0:34901:35087	5620467	0					
ANR	5620470	ExpressionStatement	self -> cx = self -> orig_gx = self -> subglyph_orig_gx = sbx	836:3:34905:34960	5620467	0	True				
ANR	5620471	AssignmentExpression	self -> cx = self -> orig_gx = self -> subglyph_orig_gx = sbx		5620467	0		=			
ANR	5620472	PtrMemberAccess	self -> cx		5620467	0					
ANR	5620473	Identifier	self		5620467	0					
ANR	5620474	Identifier	cx		5620467	1					
ANR	5620475	AssignmentExpression	self -> orig_gx = self -> subglyph_orig_gx = sbx		5620467	1		=			
ANR	5620476	PtrMemberAccess	self -> orig_gx		5620467	0					
ANR	5620477	Identifier	self		5620467	0					
ANR	5620478	Identifier	orig_gx		5620467	1					
ANR	5620479	AssignmentExpression	self -> subglyph_orig_gx = sbx		5620467	1		=			
ANR	5620480	PtrMemberAccess	self -> subglyph_orig_gx		5620467	0					
ANR	5620481	Identifier	self		5620467	0					
ANR	5620482	Identifier	subglyph_orig_gx		5620467	1					
ANR	5620483	Identifier	sbx		5620467	1					
ANR	5620484	ExpressionStatement	self -> cy = self -> orig_gy = self -> subglyph_orig_gy = sby	837:4:34966:35021	5620467	1	True				
ANR	5620485	AssignmentExpression	self -> cy = self -> orig_gy = self -> subglyph_orig_gy = sby		5620467	0		=			
ANR	5620486	PtrMemberAccess	self -> cy		5620467	0					
ANR	5620487	Identifier	self		5620467	0					
ANR	5620488	Identifier	cy		5620467	1					
ANR	5620489	AssignmentExpression	self -> orig_gy = self -> subglyph_orig_gy = sby		5620467	1		=			
ANR	5620490	PtrMemberAccess	self -> orig_gy		5620467	0					
ANR	5620491	Identifier	self		5620467	0					
ANR	5620492	Identifier	orig_gy		5620467	1					
ANR	5620493	AssignmentExpression	self -> subglyph_orig_gy = sby		5620467	1		=			
ANR	5620494	PtrMemberAccess	self -> subglyph_orig_gy		5620467	0					
ANR	5620495	Identifier	self		5620467	0					
ANR	5620496	Identifier	subglyph_orig_gy		5620467	1					
ANR	5620497	Identifier	sby		5620467	1					
ANR	5620498	ExpressionStatement	self -> width_gx = wx	838:4:35027:35046	5620467	2	True				
ANR	5620499	AssignmentExpression	self -> width_gx = wx		5620467	0		=			
ANR	5620500	PtrMemberAccess	self -> width_gx		5620467	0					
ANR	5620501	Identifier	self		5620467	0					
ANR	5620502	Identifier	width_gx		5620467	1					
ANR	5620503	Identifier	wx		5620467	1					
ANR	5620504	ExpressionStatement	self -> width_gy = wy	839:4:35052:35071	5620467	3	True				
ANR	5620505	AssignmentExpression	self -> width_gy = wy		5620467	0		=			
ANR	5620506	PtrMemberAccess	self -> width_gy		5620467	0					
ANR	5620507	Identifier	self		5620467	0					
ANR	5620508	Identifier	width_gy		5620467	1					
ANR	5620509	Identifier	wy		5620467	1					
ANR	5620510	ReturnStatement	return 0 ;	840:4:35077:35085	5620467	4	True				
ANR	5620511	PrimaryExpression	0		5620467	0					
ANR	5620512	ReturnType	int		5620467	1					
ANR	5620513	Identifier	t1_hinter__sbw		5620467	2					
ANR	5620514	ParameterList	"t1_hinter * self , fixed sbx , fixed sby , fixed wx , fixed wy"		5620467	3					
ANR	5620515	Parameter	t1_hinter * self	835:19:34840:34855	5620467	0	True				
ANR	5620516	ParameterType	t1_hinter *		5620467	0					
ANR	5620517	Identifier	self		5620467	1					
ANR	5620518	Parameter	fixed sbx	835:37:34858:34866	5620467	1	True				
ANR	5620519	ParameterType	fixed		5620467	0					
ANR	5620520	Identifier	sbx		5620467	1					
ANR	5620521	Parameter	fixed sby	835:48:34869:34877	5620467	2	True				
ANR	5620522	ParameterType	fixed		5620467	0					
ANR	5620523	Identifier	sby		5620467	1					
ANR	5620524	Parameter	fixed wx	835:59:34880:34887	5620467	3	True				
ANR	5620525	ParameterType	fixed		5620467	0					
ANR	5620526	Identifier	wx		5620467	1					
ANR	5620527	Parameter	fixed wy	835:70:34891:34898	5620467	4	True				
ANR	5620528	ParameterType	fixed		5620467	0					
ANR	5620529	Identifier	wy		5620467	1					
ANR	5620530	CFGEntryNode	ENTRY		5620467		True				
ANR	5620531	CFGExitNode	EXIT		5620467		True				
ANR	5620532	Symbol	wx		5620467						
ANR	5620533	Symbol	wy		5620467						
ANR	5620534	Symbol	* self		5620467						
ANR	5620535	Symbol	sbx		5620467						
ANR	5620536	Symbol	self -> width_gy		5620467						
ANR	5620537	Symbol	sby		5620467						
ANR	5620538	Symbol	self -> width_gx		5620467						
ANR	5620539	Symbol	self -> subglyph_orig_gy		5620467						
ANR	5620540	Symbol	self		5620467						
ANR	5620541	Symbol	self -> cx		5620467						
ANR	5620542	Symbol	self -> cy		5620467						
ANR	5620543	Symbol	self -> subglyph_orig_gx		5620467						
ANR	5620544	Symbol	self -> orig_gy		5620467						
ANR	5620545	Symbol	self -> orig_gx		5620467						
ANR	5620546	Function	t1_hinter__sbw_seac	843:0:35090:35346							
ANR	5620547	FunctionDef	"t1_hinter__sbw_seac (t1_hinter * self , fixed sbx , fixed sby)"		5620546	0					
ANR	5620548	CompoundStatement		844:0:35154:35346	5620546	0					
ANR	5620549	ExpressionStatement	"t1_hinter__adjust_matrix_precision ( self , sbx , sby )"	844:3:35158:35208	5620546	0	True				
ANR	5620550	CallExpression	"t1_hinter__adjust_matrix_precision ( self , sbx , sby )"		5620546	0					
ANR	5620551	Callee	t1_hinter__adjust_matrix_precision		5620546	0					
ANR	5620552	Identifier	t1_hinter__adjust_matrix_precision		5620546	0					
ANR	5620553	ArgumentList	self		5620546	1					
ANR	5620554	Argument	self		5620546	0					
ANR	5620555	Identifier	self		5620546	0					
ANR	5620556	Argument	sbx		5620546	1					
ANR	5620557	Identifier	sbx		5620546	0					
ANR	5620558	Argument	sby		5620546	2					
ANR	5620559	Identifier	sby		5620546	0					
ANR	5620560	ExpressionStatement	self -> cx = self -> subglyph_orig_gx = self -> orig_gx + sbx	845:4:35214:35269	5620546	1	True				
ANR	5620561	AssignmentExpression	self -> cx = self -> subglyph_orig_gx = self -> orig_gx + sbx		5620546	0		=			
ANR	5620562	PtrMemberAccess	self -> cx		5620546	0					
ANR	5620563	Identifier	self		5620546	0					
ANR	5620564	Identifier	cx		5620546	1					
ANR	5620565	AssignmentExpression	self -> subglyph_orig_gx = self -> orig_gx + sbx		5620546	1		=			
ANR	5620566	PtrMemberAccess	self -> subglyph_orig_gx		5620546	0					
ANR	5620567	Identifier	self		5620546	0					
ANR	5620568	Identifier	subglyph_orig_gx		5620546	1					
ANR	5620569	AdditiveExpression	self -> orig_gx + sbx		5620546	1		+			
ANR	5620570	PtrMemberAccess	self -> orig_gx		5620546	0					
ANR	5620571	Identifier	self		5620546	0					
ANR	5620572	Identifier	orig_gx		5620546	1					
ANR	5620573	Identifier	sbx		5620546	1					
ANR	5620574	ExpressionStatement	self -> cy = self -> subglyph_orig_gy = self -> orig_gy + sby	846:4:35275:35330	5620546	2	True				
ANR	5620575	AssignmentExpression	self -> cy = self -> subglyph_orig_gy = self -> orig_gy + sby		5620546	0		=			
ANR	5620576	PtrMemberAccess	self -> cy		5620546	0					
ANR	5620577	Identifier	self		5620546	0					
ANR	5620578	Identifier	cy		5620546	1					
ANR	5620579	AssignmentExpression	self -> subglyph_orig_gy = self -> orig_gy + sby		5620546	1		=			
ANR	5620580	PtrMemberAccess	self -> subglyph_orig_gy		5620546	0					
ANR	5620581	Identifier	self		5620546	0					
ANR	5620582	Identifier	subglyph_orig_gy		5620546	1					
ANR	5620583	AdditiveExpression	self -> orig_gy + sby		5620546	1		+			
ANR	5620584	PtrMemberAccess	self -> orig_gy		5620546	0					
ANR	5620585	Identifier	self		5620546	0					
ANR	5620586	Identifier	orig_gy		5620546	1					
ANR	5620587	Identifier	sby		5620546	1					
ANR	5620588	ReturnStatement	return 0 ;	847:4:35336:35344	5620546	3	True				
ANR	5620589	PrimaryExpression	0		5620546	0					
ANR	5620590	ReturnType	int		5620546	1					
ANR	5620591	Identifier	t1_hinter__sbw_seac		5620546	2					
ANR	5620592	ParameterList	"t1_hinter * self , fixed sbx , fixed sby"		5620546	3					
ANR	5620593	Parameter	t1_hinter * self	843:24:35114:35129	5620546	0	True				
ANR	5620594	ParameterType	t1_hinter *		5620546	0					
ANR	5620595	Identifier	self		5620546	1					
ANR	5620596	Parameter	fixed sbx	843:42:35132:35140	5620546	1	True				
ANR	5620597	ParameterType	fixed		5620546	0					
ANR	5620598	Identifier	sbx		5620546	1					
ANR	5620599	Parameter	fixed sby	843:53:35143:35151	5620546	2	True				
ANR	5620600	ParameterType	fixed		5620546	0					
ANR	5620601	Identifier	sby		5620546	1					
ANR	5620602	CFGEntryNode	ENTRY		5620546		True				
ANR	5620603	CFGExitNode	EXIT		5620546		True				
ANR	5620604	Symbol	self -> subglyph_orig_gy		5620546						
ANR	5620605	Symbol	* self		5620546						
ANR	5620606	Symbol	sbx		5620546						
ANR	5620607	Symbol	self		5620546						
ANR	5620608	Symbol	self -> cx		5620546						
ANR	5620609	Symbol	sby		5620546						
ANR	5620610	Symbol	self -> cy		5620546						
ANR	5620611	Symbol	self -> subglyph_orig_gx		5620546						
ANR	5620612	Symbol	self -> orig_gy		5620546						
ANR	5620613	Symbol	self -> orig_gx		5620546						
ANR	5620614	Function	t1_hinter__find_flex	850:0:35349:39956							
ANR	5620615	FunctionDef	"t1_hinter__find_flex (t1_hinter * self , int k , int contour_beg , int contour_end , t1_glyph_space_coord pixel_g , t1_glyph_space_coord threshold , int i0 , int i1 , int N , int * j0 , int * j1 , t1_glyph_space_coord * gm)"		5620614	0					
ANR	5620616	CompoundStatement		854:0:35639:39956	5620614	0					
ANR	5620617	IdentifierDeclStatement	"int i , j , n = N - 5 , m , l ;"	855:4:35645:35670	5620614	0	True				
ANR	5620618	IdentifierDecl	i		5620614	0					
ANR	5620619	IdentifierDeclType	int		5620614	0					
ANR	5620620	Identifier	i		5620614	1					
ANR	5620621	IdentifierDecl	j		5620614	1					
ANR	5620622	IdentifierDeclType	int		5620614	0					
ANR	5620623	Identifier	j		5620614	1					
ANR	5620624	IdentifierDecl	n = N - 5		5620614	2					
ANR	5620625	IdentifierDeclType	int		5620614	0					
ANR	5620626	Identifier	n		5620614	1					
ANR	5620627	AssignmentExpression	n = N - 5		5620614	2		=			
ANR	5620628	Identifier	n		5620614	0					
ANR	5620629	AdditiveExpression	N - 5		5620614	1		-			
ANR	5620630	Identifier	N		5620614	0					
ANR	5620631	PrimaryExpression	5		5620614	1					
ANR	5620632	IdentifierDecl	m		5620614	3					
ANR	5620633	IdentifierDeclType	int		5620614	0					
ANR	5620634	Identifier	m		5620614	1					
ANR	5620635	IdentifierDecl	l		5620614	4					
ANR	5620636	IdentifierDeclType	int		5620614	0					
ANR	5620637	Identifier	l		5620614	1					
ANR	5620638	IdentifierDeclStatement	t1_glyph_space_coord * p_gc = ( ! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy ) ;	856:4:35676:35749	5620614	1	True				
ANR	5620639	IdentifierDecl	* p_gc = ( ! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy )		5620614	0					
ANR	5620640	IdentifierDeclType	t1_glyph_space_coord *		5620614	0					
ANR	5620641	Identifier	p_gc		5620614	1					
ANR	5620642	AssignmentExpression	* p_gc = ( ! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy )		5620614	2		=			
ANR	5620643	Identifier	p_gc		5620614	0					
ANR	5620644	ConditionalExpression	! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy		5620614	1					
ANR	5620645	Condition	! k		5620614	0					
ANR	5620646	UnaryOperationExpression	! k		5620614	0					
ANR	5620647	UnaryOperator	!		5620614	0					
ANR	5620648	Identifier	k		5620614	1					
ANR	5620649	UnaryOperationExpression	& self -> pole [ 0 ] . gx		5620614	1					
ANR	5620650	UnaryOperator	&		5620614	0					
ANR	5620651	MemberAccess	self -> pole [ 0 ] . gx		5620614	1					
ANR	5620652	ArrayIndexing	self -> pole [ 0 ]		5620614	0					
ANR	5620653	PtrMemberAccess	self -> pole		5620614	0					
ANR	5620654	Identifier	self		5620614	0					
ANR	5620655	Identifier	pole		5620614	1					
ANR	5620656	PrimaryExpression	0		5620614	1					
ANR	5620657	Identifier	gx		5620614	1					
ANR	5620658	UnaryOperationExpression	& self -> pole [ 0 ] . gy		5620614	2					
ANR	5620659	UnaryOperator	&		5620614	0					
ANR	5620660	MemberAccess	self -> pole [ 0 ] . gy		5620614	1					
ANR	5620661	ArrayIndexing	self -> pole [ 0 ]		5620614	0					
ANR	5620662	PtrMemberAccess	self -> pole		5620614	0					
ANR	5620663	Identifier	self		5620614	0					
ANR	5620664	Identifier	pole		5620614	1					
ANR	5620665	PrimaryExpression	0		5620614	1					
ANR	5620666	Identifier	gy		5620614	1					
ANR	5620667	IdentifierDeclStatement	t1_glyph_space_coord * p_gd = ( ! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx ) ;	857:4:35755:35828	5620614	2	True				
ANR	5620668	IdentifierDecl	* p_gd = ( ! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx )		5620614	0					
ANR	5620669	IdentifierDeclType	t1_glyph_space_coord *		5620614	0					
ANR	5620670	Identifier	p_gd		5620614	1					
ANR	5620671	AssignmentExpression	* p_gd = ( ! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx )		5620614	2		=			
ANR	5620672	Identifier	p_gd		5620614	0					
ANR	5620673	ConditionalExpression	! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx		5620614	1					
ANR	5620674	Condition	! k		5620614	0					
ANR	5620675	UnaryOperationExpression	! k		5620614	0					
ANR	5620676	UnaryOperator	!		5620614	0					
ANR	5620677	Identifier	k		5620614	1					
ANR	5620678	UnaryOperationExpression	& self -> pole [ 0 ] . gy		5620614	1					
ANR	5620679	UnaryOperator	&		5620614	0					
ANR	5620680	MemberAccess	self -> pole [ 0 ] . gy		5620614	1					
ANR	5620681	ArrayIndexing	self -> pole [ 0 ]		5620614	0					
ANR	5620682	PtrMemberAccess	self -> pole		5620614	0					
ANR	5620683	Identifier	self		5620614	0					
ANR	5620684	Identifier	pole		5620614	1					
ANR	5620685	PrimaryExpression	0		5620614	1					
ANR	5620686	Identifier	gy		5620614	1					
ANR	5620687	UnaryOperationExpression	& self -> pole [ 0 ] . gx		5620614	2					
ANR	5620688	UnaryOperator	&		5620614	0					
ANR	5620689	MemberAccess	self -> pole [ 0 ] . gx		5620614	1					
ANR	5620690	ArrayIndexing	self -> pole [ 0 ]		5620614	0					
ANR	5620691	PtrMemberAccess	self -> pole		5620614	0					
ANR	5620692	Identifier	self		5620614	0					
ANR	5620693	Identifier	pole		5620614	1					
ANR	5620694	PrimaryExpression	0		5620614	1					
ANR	5620695	Identifier	gx		5620614	1					
ANR	5620696	IdentifierDeclStatement	int offset_gc = ( char * ) p_gc - ( char * ) & self -> pole [ 0 ] ;	858:4:35834:35887	5620614	3	True				
ANR	5620697	IdentifierDecl	offset_gc = ( char * ) p_gc - ( char * ) & self -> pole [ 0 ]		5620614	0					
ANR	5620698	IdentifierDeclType	int		5620614	0					
ANR	5620699	Identifier	offset_gc		5620614	1					
ANR	5620700	AssignmentExpression	offset_gc = ( char * ) p_gc - ( char * ) & self -> pole [ 0 ]		5620614	2		=			
ANR	5620701	Identifier	offset_gc		5620614	0					
ANR	5620702	AdditiveExpression	( char * ) p_gc - ( char * ) & self -> pole [ 0 ]		5620614	1		-			
ANR	5620703	CastExpression	( char * ) p_gc		5620614	0					
ANR	5620704	CastTarget	char *		5620614	0					
ANR	5620705	Identifier	p_gc		5620614	1					
ANR	5620706	CastExpression	( char * ) & self -> pole [ 0 ]		5620614	1					
ANR	5620707	CastTarget	char *		5620614	0					
ANR	5620708	UnaryOperationExpression	& self -> pole [ 0 ]		5620614	1					
ANR	5620709	UnaryOperator	&		5620614	0					
ANR	5620710	ArrayIndexing	self -> pole [ 0 ]		5620614	1					
ANR	5620711	PtrMemberAccess	self -> pole		5620614	0					
ANR	5620712	Identifier	self		5620614	0					
ANR	5620713	Identifier	pole		5620614	1					
ANR	5620714	PrimaryExpression	0		5620614	1					
ANR	5620715	IdentifierDeclStatement	int offset_gd = ( char * ) p_gd - ( char * ) & self -> pole [ 0 ] ;	859:4:35893:35946	5620614	4	True				
ANR	5620716	IdentifierDecl	offset_gd = ( char * ) p_gd - ( char * ) & self -> pole [ 0 ]		5620614	0					
ANR	5620717	IdentifierDeclType	int		5620614	0					
ANR	5620718	Identifier	offset_gd		5620614	1					
ANR	5620719	AssignmentExpression	offset_gd = ( char * ) p_gd - ( char * ) & self -> pole [ 0 ]		5620614	2		=			
ANR	5620720	Identifier	offset_gd		5620614	0					
ANR	5620721	AdditiveExpression	( char * ) p_gd - ( char * ) & self -> pole [ 0 ]		5620614	1		-			
ANR	5620722	CastExpression	( char * ) p_gd		5620614	0					
ANR	5620723	CastTarget	char *		5620614	0					
ANR	5620724	Identifier	p_gd		5620614	1					
ANR	5620725	CastExpression	( char * ) & self -> pole [ 0 ]		5620614	1					
ANR	5620726	CastTarget	char *		5620614	0					
ANR	5620727	UnaryOperationExpression	& self -> pole [ 0 ]		5620614	1					
ANR	5620728	UnaryOperator	&		5620614	0					
ANR	5620729	ArrayIndexing	self -> pole [ 0 ]		5620614	1					
ANR	5620730	PtrMemberAccess	self -> pole		5620614	0					
ANR	5620731	Identifier	self		5620614	0					
ANR	5620732	Identifier	pole		5620614	1					
ANR	5620733	PrimaryExpression	0		5620614	1					
ANR	5620734	IdentifierDeclStatement	"t1_glyph_space_coord gc0 , gc1 , gd0 , gd1 , gcl , gdl , gcp = 0 , gdp = 0 , gcd , gcm = 0 ;"	860:4:35952:36033	5620614	5	True				
ANR	5620735	IdentifierDecl	gc0		5620614	0					
ANR	5620736	IdentifierDeclType	t1_glyph_space_coord		5620614	0					
ANR	5620737	Identifier	gc0		5620614	1					
ANR	5620738	IdentifierDecl	gc1		5620614	1					
ANR	5620739	IdentifierDeclType	t1_glyph_space_coord		5620614	0					
ANR	5620740	Identifier	gc1		5620614	1					
ANR	5620741	IdentifierDecl	gd0		5620614	2					
ANR	5620742	IdentifierDeclType	t1_glyph_space_coord		5620614	0					
ANR	5620743	Identifier	gd0		5620614	1					
ANR	5620744	IdentifierDecl	gd1		5620614	3					
ANR	5620745	IdentifierDeclType	t1_glyph_space_coord		5620614	0					
ANR	5620746	Identifier	gd1		5620614	1					
ANR	5620747	IdentifierDecl	gcl		5620614	4					
ANR	5620748	IdentifierDeclType	t1_glyph_space_coord		5620614	0					
ANR	5620749	Identifier	gcl		5620614	1					
ANR	5620750	IdentifierDecl	gdl		5620614	5					
ANR	5620751	IdentifierDeclType	t1_glyph_space_coord		5620614	0					
ANR	5620752	Identifier	gdl		5620614	1					
ANR	5620753	IdentifierDecl	gcp = 0		5620614	6					
ANR	5620754	IdentifierDeclType	t1_glyph_space_coord		5620614	0					
ANR	5620755	Identifier	gcp		5620614	1					
ANR	5620756	AssignmentExpression	gcp = 0		5620614	2		=			
ANR	5620757	Identifier	gcp		5620614	0					
ANR	5620758	PrimaryExpression	0		5620614	1					
ANR	5620759	IdentifierDecl	gdp = 0		5620614	7					
ANR	5620760	IdentifierDeclType	t1_glyph_space_coord		5620614	0					
ANR	5620761	Identifier	gdp		5620614	1					
ANR	5620762	AssignmentExpression	gdp = 0		5620614	2		=			
ANR	5620763	Identifier	gdp		5620614	0					
ANR	5620764	PrimaryExpression	0		5620614	1					
ANR	5620765	IdentifierDecl	gcd		5620614	8					
ANR	5620766	IdentifierDeclType	t1_glyph_space_coord		5620614	0					
ANR	5620767	Identifier	gcd		5620614	1					
ANR	5620768	IdentifierDecl	gcm = 0		5620614	9					
ANR	5620769	IdentifierDeclType	t1_glyph_space_coord		5620614	0					
ANR	5620770	Identifier	gcm		5620614	1					
ANR	5620771	AssignmentExpression	gcm = 0		5620614	2		=			
ANR	5620772	Identifier	gcm		5620614	0					
ANR	5620773	PrimaryExpression	0		5620614	1					
ANR	5620774	ForStatement	"for ( i = i0 ; n ; n -- , i = i + 1 )"		5620614	6					
ANR	5620775	ForInit	i = i0 ;	862:9:36045:36051	5620614	0	True				
ANR	5620776	AssignmentExpression	i = i0		5620614	0		=			
ANR	5620777	Identifier	i		5620614	0					
ANR	5620778	Identifier	i0		5620614	1					
ANR	5620779	Condition	n	862:17:36053:36053	5620614	1	True				
ANR	5620780	Identifier	n		5620614	0					
ANR	5620781	Expression	"n -- , i = i + 1"	862:20:36056:36069	5620614	2	True				
ANR	5620782	PostIncDecOperationExpression	n --		5620614	0					
ANR	5620783	Identifier	n		5620614	0					
ANR	5620784	IncDec	--		5620614	1					
ANR	5620785	AssignmentExpression	i = i + 1		5620614	1		=			
ANR	5620786	Identifier	i		5620614	0					
ANR	5620787	AdditiveExpression	i + 1		5620614	1		+			
ANR	5620788	Identifier	i		5620614	0					
ANR	5620789	PrimaryExpression	1		5620614	1					
ANR	5620790	CompoundStatement		9:36:432:432	5620614	3					
ANR	5620791	IfStatement	if ( i == contour_end )		5620614	0					
ANR	5620792	Condition	i == contour_end	863:12:36086:36101	5620614	0	True				
ANR	5620793	EqualityExpression	i == contour_end		5620614	0		==			
ANR	5620794	Identifier	i		5620614	0					
ANR	5620795	Identifier	contour_end		5620614	1					
ANR	5620796	ExpressionStatement	i = contour_beg	864:12:36116:36131	5620614	1	True				
ANR	5620797	AssignmentExpression	i = contour_beg		5620614	0		=			
ANR	5620798	Identifier	i		5620614	0					
ANR	5620799	Identifier	contour_beg		5620614	1					
ANR	5620800	IfStatement	if ( self -> pole [ i ] . type == offcurve )		5620614	1					
ANR	5620801	Condition	self -> pole [ i ] . type == offcurve	865:12:36145:36174	5620614	0	True				
ANR	5620802	EqualityExpression	self -> pole [ i ] . type == offcurve		5620614	0		==			
ANR	5620803	MemberAccess	self -> pole [ i ] . type		5620614	0					
ANR	5620804	ArrayIndexing	self -> pole [ i ]		5620614	0					
ANR	5620805	PtrMemberAccess	self -> pole		5620614	0					
ANR	5620806	Identifier	self		5620614	0					
ANR	5620807	Identifier	pole		5620614	1					
ANR	5620808	Identifier	i		5620614	1					
ANR	5620809	Identifier	type		5620614	1					
ANR	5620810	Identifier	offcurve		5620614	1					
ANR	5620811	ContinueStatement	continue ;	866:12:36189:36197	5620614	1	True				
ANR	5620812	ExpressionStatement	"gc0 = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"	867:8:36207:36273	5620614	2	True				
ANR	5620813	AssignmentExpression	"gc0 = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"		5620614	0		=			
ANR	5620814	Identifier	gc0		5620614	0					
ANR	5620815	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"		5620614	1					
ANR	5620816	UnaryOperator	*		5620614	0					
ANR	5620817	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"		5620614	1					
ANR	5620818	Callee	member_prt		5620614	0					
ANR	5620819	Identifier	member_prt		5620614	0					
ANR	5620820	ArgumentList	t1_glyph_space_coord		5620614	1					
ANR	5620821	Argument	t1_glyph_space_coord		5620614	0					
ANR	5620822	Identifier	t1_glyph_space_coord		5620614	0					
ANR	5620823	Argument	& self -> pole [ i ]		5620614	1					
ANR	5620824	UnaryOperationExpression	& self -> pole [ i ]		5620614	0					
ANR	5620825	UnaryOperator	&		5620614	0					
ANR	5620826	ArrayIndexing	self -> pole [ i ]		5620614	1					
ANR	5620827	PtrMemberAccess	self -> pole		5620614	0					
ANR	5620828	Identifier	self		5620614	0					
ANR	5620829	Identifier	pole		5620614	1					
ANR	5620830	Identifier	i		5620614	1					
ANR	5620831	Argument	offset_gc		5620614	2					
ANR	5620832	Identifier	offset_gc		5620614	0					
ANR	5620833	ExpressionStatement	"gd0 = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"	868:8:36283:36349	5620614	3	True				
ANR	5620834	AssignmentExpression	"gd0 = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"		5620614	0		=			
ANR	5620835	Identifier	gd0		5620614	0					
ANR	5620836	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"		5620614	1					
ANR	5620837	UnaryOperator	*		5620614	0					
ANR	5620838	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"		5620614	1					
ANR	5620839	Callee	member_prt		5620614	0					
ANR	5620840	Identifier	member_prt		5620614	0					
ANR	5620841	ArgumentList	t1_glyph_space_coord		5620614	1					
ANR	5620842	Argument	t1_glyph_space_coord		5620614	0					
ANR	5620843	Identifier	t1_glyph_space_coord		5620614	0					
ANR	5620844	Argument	& self -> pole [ i ]		5620614	1					
ANR	5620845	UnaryOperationExpression	& self -> pole [ i ]		5620614	0					
ANR	5620846	UnaryOperator	&		5620614	0					
ANR	5620847	ArrayIndexing	self -> pole [ i ]		5620614	1					
ANR	5620848	PtrMemberAccess	self -> pole		5620614	0					
ANR	5620849	Identifier	self		5620614	0					
ANR	5620850	Identifier	pole		5620614	1					
ANR	5620851	Identifier	i		5620614	1					
ANR	5620852	Argument	offset_gd		5620614	2					
ANR	5620853	Identifier	offset_gd		5620614	0					
ANR	5620854	ForStatement	"for ( j = i1 , m = n ; m ; m -- , j -- )"		5620614	4					
ANR	5620855	ForInit	"j = i1 , m = n ;"	869:13:36364:36377	5620614	0	True				
ANR	5620856	Expression	"j = i1 , m = n"		5620614	0					
ANR	5620857	AssignmentExpression	j = i1		5620614	0		=			
ANR	5620858	Identifier	j		5620614	0					
ANR	5620859	Identifier	i1		5620614	1					
ANR	5620860	AssignmentExpression	m = n		5620614	1		=			
ANR	5620861	Identifier	m		5620614	0					
ANR	5620862	Identifier	n		5620614	1					
ANR	5620863	Condition	m	869:28:36379:36379	5620614	1	True				
ANR	5620864	Identifier	m		5620614	0					
ANR	5620865	Expression	"m -- , j --"	869:31:36382:36389	5620614	2	True				
ANR	5620866	PostIncDecOperationExpression	m --		5620614	0					
ANR	5620867	Identifier	m		5620614	0					
ANR	5620868	IncDec	--		5620614	1					
ANR	5620869	PostIncDecOperationExpression	j --		5620614	1					
ANR	5620870	Identifier	j		5620614	0					
ANR	5620871	IncDec	--		5620614	1					
ANR	5620872	CompoundStatement		16:41:752:752	5620614	3					
ANR	5620873	IfStatement	if ( j < contour_beg )		5620614	0					
ANR	5620874	Condition	j < contour_beg	870:16:36410:36424	5620614	0	True				
ANR	5620875	RelationalExpression	j < contour_beg		5620614	0		<			
ANR	5620876	Identifier	j		5620614	0					
ANR	5620877	Identifier	contour_beg		5620614	1					
ANR	5620878	ExpressionStatement	j = contour_end - 1	871:16:36443:36462	5620614	1	True				
ANR	5620879	AssignmentExpression	j = contour_end - 1		5620614	0		=			
ANR	5620880	Identifier	j		5620614	0					
ANR	5620881	AdditiveExpression	contour_end - 1		5620614	1		-			
ANR	5620882	Identifier	contour_end		5620614	0					
ANR	5620883	PrimaryExpression	1		5620614	1					
ANR	5620884	IfStatement	if ( self -> pole [ j ] . type == offcurve )		5620614	1					
ANR	5620885	Condition	self -> pole [ j ] . type == offcurve	872:16:36480:36509	5620614	0	True				
ANR	5620886	EqualityExpression	self -> pole [ j ] . type == offcurve		5620614	0		==			
ANR	5620887	MemberAccess	self -> pole [ j ] . type		5620614	0					
ANR	5620888	ArrayIndexing	self -> pole [ j ]		5620614	0					
ANR	5620889	PtrMemberAccess	self -> pole		5620614	0					
ANR	5620890	Identifier	self		5620614	0					
ANR	5620891	Identifier	pole		5620614	1					
ANR	5620892	Identifier	j		5620614	1					
ANR	5620893	Identifier	type		5620614	1					
ANR	5620894	Identifier	offcurve		5620614	1					
ANR	5620895	ContinueStatement	continue ;	873:16:36528:36536	5620614	1	True				
ANR	5620896	ExpressionStatement	"gc1 = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"	874:12:36550:36616	5620614	2	True				
ANR	5620897	AssignmentExpression	"gc1 = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5620614	0		=			
ANR	5620898	Identifier	gc1		5620614	0					
ANR	5620899	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5620614	1					
ANR	5620900	UnaryOperator	*		5620614	0					
ANR	5620901	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5620614	1					
ANR	5620902	Callee	member_prt		5620614	0					
ANR	5620903	Identifier	member_prt		5620614	0					
ANR	5620904	ArgumentList	t1_glyph_space_coord		5620614	1					
ANR	5620905	Argument	t1_glyph_space_coord		5620614	0					
ANR	5620906	Identifier	t1_glyph_space_coord		5620614	0					
ANR	5620907	Argument	& self -> pole [ j ]		5620614	1					
ANR	5620908	UnaryOperationExpression	& self -> pole [ j ]		5620614	0					
ANR	5620909	UnaryOperator	&		5620614	0					
ANR	5620910	ArrayIndexing	self -> pole [ j ]		5620614	1					
ANR	5620911	PtrMemberAccess	self -> pole		5620614	0					
ANR	5620912	Identifier	self		5620614	0					
ANR	5620913	Identifier	pole		5620614	1					
ANR	5620914	Identifier	j		5620614	1					
ANR	5620915	Argument	offset_gc		5620614	2					
ANR	5620916	Identifier	offset_gc		5620614	0					
ANR	5620917	ExpressionStatement	"gd1 = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gd )"	875:12:36630:36696	5620614	3	True				
ANR	5620918	AssignmentExpression	"gd1 = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gd )"		5620614	0		=			
ANR	5620919	Identifier	gd1		5620614	0					
ANR	5620920	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gd )"		5620614	1					
ANR	5620921	UnaryOperator	*		5620614	0					
ANR	5620922	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gd )"		5620614	1					
ANR	5620923	Callee	member_prt		5620614	0					
ANR	5620924	Identifier	member_prt		5620614	0					
ANR	5620925	ArgumentList	t1_glyph_space_coord		5620614	1					
ANR	5620926	Argument	t1_glyph_space_coord		5620614	0					
ANR	5620927	Identifier	t1_glyph_space_coord		5620614	0					
ANR	5620928	Argument	& self -> pole [ j ]		5620614	1					
ANR	5620929	UnaryOperationExpression	& self -> pole [ j ]		5620614	0					
ANR	5620930	UnaryOperator	&		5620614	0					
ANR	5620931	ArrayIndexing	self -> pole [ j ]		5620614	1					
ANR	5620932	PtrMemberAccess	self -> pole		5620614	0					
ANR	5620933	Identifier	self		5620614	0					
ANR	5620934	Identifier	pole		5620614	1					
ANR	5620935	Identifier	j		5620614	1					
ANR	5620936	Argument	offset_gd		5620614	2					
ANR	5620937	Identifier	offset_gd		5620614	0					
ANR	5620938	IfStatement	if ( any_abs ( gd1 - gd0 ) < pixel_g * 4 )		5620614	4					
ANR	5620939	Condition	any_abs ( gd1 - gd0 ) < pixel_g * 4	876:16:36714:36745	5620614	0	True				
ANR	5620940	RelationalExpression	any_abs ( gd1 - gd0 ) < pixel_g * 4		5620614	0		<			
ANR	5620941	CallExpression	any_abs ( gd1 - gd0 )		5620614	0					
ANR	5620942	Callee	any_abs		5620614	0					
ANR	5620943	Identifier	any_abs		5620614	0					
ANR	5620944	ArgumentList	gd1 - gd0		5620614	1					
ANR	5620945	Argument	gd1 - gd0		5620614	0					
ANR	5620946	AdditiveExpression	gd1 - gd0		5620614	0		-			
ANR	5620947	Identifier	gd1		5620614	0					
ANR	5620948	Identifier	gd0		5620614	1					
ANR	5620949	MultiplicativeExpression	pixel_g * 4		5620614	1		*			
ANR	5620950	Identifier	pixel_g		5620614	0					
ANR	5620951	PrimaryExpression	4		5620614	1					
ANR	5620952	ContinueStatement	continue ;	877:16:36807:36815	5620614	1	True				
ANR	5620953	IfStatement	if ( gc0 == gc1 )		5620614	5					
ANR	5620954	Condition	gc0 == gc1	878:16:36833:36842	5620614	0	True				
ANR	5620955	EqualityExpression	gc0 == gc1		5620614	0		==			
ANR	5620956	Identifier	gc0		5620614	0					
ANR	5620957	Identifier	gc1		5620614	1					
ANR	5620958	CompoundStatement		29:16:1433:1474	5620614	1					
ANR	5620959	IdentifierDeclStatement	"bool gt = false , lt = false ;"	880:16:36988:37015	5620614	0	True				
ANR	5620960	IdentifierDecl	gt = false		5620614	0					
ANR	5620961	IdentifierDeclType	bool		5620614	0					
ANR	5620962	Identifier	gt		5620614	1					
ANR	5620963	AssignmentExpression	gt = false		5620614	2		=			
ANR	5620964	Identifier	false		5620614	0					
ANR	5620965	Identifier	false		5620614	1					
ANR	5620966	IdentifierDecl	lt = false		5620614	1					
ANR	5620967	IdentifierDeclType	bool		5620614	0					
ANR	5620968	Identifier	lt		5620614	1					
ANR	5620969	AssignmentExpression	lt = false		5620614	2		=			
ANR	5620970	Identifier	false		5620614	0					
ANR	5620971	Identifier	false		5620614	1					
ANR	5620972	IdentifierDeclStatement	"double area = 0 , area0 ;"	881:16:37033:37055	5620614	1	True				
ANR	5620973	IdentifierDecl	area = 0		5620614	0					
ANR	5620974	IdentifierDeclType	double		5620614	0					
ANR	5620975	Identifier	area		5620614	1					
ANR	5620976	AssignmentExpression	area = 0		5620614	2		=			
ANR	5620977	Identifier	area		5620614	0					
ANR	5620978	PrimaryExpression	0		5620614	1					
ANR	5620979	IdentifierDecl	area0		5620614	1					
ANR	5620980	IdentifierDeclType	double		5620614	0					
ANR	5620981	Identifier	area0		5620614	1					
ANR	5620982	IdentifierDeclStatement	"int dir = 0 , prev_dir = 0 , dir_change = 0 ;"	882:16:37073:37114	5620614	2	True				
ANR	5620983	IdentifierDecl	dir = 0		5620614	0					
ANR	5620984	IdentifierDeclType	int		5620614	0					
ANR	5620985	Identifier	dir		5620614	1					
ANR	5620986	AssignmentExpression	dir = 0		5620614	2		=			
ANR	5620987	Identifier	dir		5620614	0					
ANR	5620988	PrimaryExpression	0		5620614	1					
ANR	5620989	IdentifierDecl	prev_dir = 0		5620614	1					
ANR	5620990	IdentifierDeclType	int		5620614	0					
ANR	5620991	Identifier	prev_dir		5620614	1					
ANR	5620992	AssignmentExpression	prev_dir = 0		5620614	2		=			
ANR	5620993	Identifier	prev_dir		5620614	0					
ANR	5620994	PrimaryExpression	0		5620614	1					
ANR	5620995	IdentifierDecl	dir_change = 0		5620614	2					
ANR	5620996	IdentifierDeclType	int		5620614	0					
ANR	5620997	Identifier	dir_change		5620614	1					
ANR	5620998	AssignmentExpression	dir_change = 0		5620614	2		=			
ANR	5620999	Identifier	dir_change		5620614	0					
ANR	5621000	PrimaryExpression	0		5620614	1					
ANR	5621001	ExpressionStatement	* gm = gc0	884:16:37133:37142	5620614	3	True				
ANR	5621002	AssignmentExpression	* gm = gc0		5620614	0		=			
ANR	5621003	UnaryOperationExpression	* gm		5620614	0					
ANR	5621004	UnaryOperator	*		5620614	0					
ANR	5621005	Identifier	gm		5620614	1					
ANR	5621006	Identifier	gc0		5620614	1					
ANR	5621007	ForStatement	"for ( l = i ; ; gcp = gcl , gdp = gdl , prev_dir = dir , l ++ )"		5620614	4					
ANR	5621008	ForInit	l = i ;	888:21:37413:37418	5620614	0	True				
ANR	5621009	AssignmentExpression	l = i		5620614	0		=			
ANR	5621010	Identifier	l		5620614	0					
ANR	5621011	Identifier	i		5620614	1					
ANR	5621012	Expression	"gcp = gcl , gdp = gdl , prev_dir = dir , l ++"	888:30:37422:37462	5620614	1	True				
ANR	5621013	AssignmentExpression	gcp = gcl		5620614	0		=			
ANR	5621014	Identifier	gcp		5620614	0					
ANR	5621015	Identifier	gcl		5620614	1					
ANR	5621016	Expression	"gdp = gdl , prev_dir = dir , l ++"		5620614	1					
ANR	5621017	AssignmentExpression	gdp = gdl		5620614	0		=			
ANR	5621018	Identifier	gdp		5620614	0					
ANR	5621019	Identifier	gdl		5620614	1					
ANR	5621020	Expression	"prev_dir = dir , l ++"		5620614	1					
ANR	5621021	AssignmentExpression	prev_dir = dir		5620614	0		=			
ANR	5621022	Identifier	prev_dir		5620614	0					
ANR	5621023	Identifier	dir		5620614	1					
ANR	5621024	PostIncDecOperationExpression	l ++		5620614	1					
ANR	5621025	Identifier	l		5620614	0					
ANR	5621026	IncDec	++		5620614	1					
ANR	5621027	CompoundStatement		35:73:1825:1825	5620614	2					
ANR	5621028	IfStatement	if ( l == contour_end )		5620614	0					
ANR	5621029	Condition	l == contour_end	889:24:37491:37506	5620614	0	True				
ANR	5621030	EqualityExpression	l == contour_end		5620614	0		==			
ANR	5621031	Identifier	l		5620614	0					
ANR	5621032	Identifier	contour_end		5620614	1					
ANR	5621033	ExpressionStatement	l = contour_beg	890:24:37533:37548	5620614	1	True				
ANR	5621034	AssignmentExpression	l = contour_beg		5620614	0		=			
ANR	5621035	Identifier	l		5620614	0					
ANR	5621036	Identifier	contour_beg		5620614	1					
ANR	5621037	ExpressionStatement	"gcl = * member_prt ( t1_glyph_space_coord , & self -> pole [ l ] , offset_gc )"	891:20:37570:37636	5620614	1	True				
ANR	5621038	AssignmentExpression	"gcl = * member_prt ( t1_glyph_space_coord , & self -> pole [ l ] , offset_gc )"		5620614	0		=			
ANR	5621039	Identifier	gcl		5620614	0					
ANR	5621040	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ l ] , offset_gc )"		5620614	1					
ANR	5621041	UnaryOperator	*		5620614	0					
ANR	5621042	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ l ] , offset_gc )"		5620614	1					
ANR	5621043	Callee	member_prt		5620614	0					
ANR	5621044	Identifier	member_prt		5620614	0					
ANR	5621045	ArgumentList	t1_glyph_space_coord		5620614	1					
ANR	5621046	Argument	t1_glyph_space_coord		5620614	0					
ANR	5621047	Identifier	t1_glyph_space_coord		5620614	0					
ANR	5621048	Argument	& self -> pole [ l ]		5620614	1					
ANR	5621049	UnaryOperationExpression	& self -> pole [ l ]		5620614	0					
ANR	5621050	UnaryOperator	&		5620614	0					
ANR	5621051	ArrayIndexing	self -> pole [ l ]		5620614	1					
ANR	5621052	PtrMemberAccess	self -> pole		5620614	0					
ANR	5621053	Identifier	self		5620614	0					
ANR	5621054	Identifier	pole		5620614	1					
ANR	5621055	Identifier	l		5620614	1					
ANR	5621056	Argument	offset_gc		5620614	2					
ANR	5621057	Identifier	offset_gc		5620614	0					
ANR	5621058	ExpressionStatement	"gdl = * member_prt ( t1_glyph_space_coord , & self -> pole [ l ] , offset_gd )"	892:20:37658:37724	5620614	2	True				
ANR	5621059	AssignmentExpression	"gdl = * member_prt ( t1_glyph_space_coord , & self -> pole [ l ] , offset_gd )"		5620614	0		=			
ANR	5621060	Identifier	gdl		5620614	0					
ANR	5621061	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ l ] , offset_gd )"		5620614	1					
ANR	5621062	UnaryOperator	*		5620614	0					
ANR	5621063	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ l ] , offset_gd )"		5620614	1					
ANR	5621064	Callee	member_prt		5620614	0					
ANR	5621065	Identifier	member_prt		5620614	0					
ANR	5621066	ArgumentList	t1_glyph_space_coord		5620614	1					
ANR	5621067	Argument	t1_glyph_space_coord		5620614	0					
ANR	5621068	Identifier	t1_glyph_space_coord		5620614	0					
ANR	5621069	Argument	& self -> pole [ l ]		5620614	1					
ANR	5621070	UnaryOperationExpression	& self -> pole [ l ]		5620614	0					
ANR	5621071	UnaryOperator	&		5620614	0					
ANR	5621072	ArrayIndexing	self -> pole [ l ]		5620614	1					
ANR	5621073	PtrMemberAccess	self -> pole		5620614	0					
ANR	5621074	Identifier	self		5620614	0					
ANR	5621075	Identifier	pole		5620614	1					
ANR	5621076	Identifier	l		5620614	1					
ANR	5621077	Argument	offset_gd		5620614	2					
ANR	5621078	Identifier	offset_gd		5620614	0					
ANR	5621079	IfStatement	if ( l != i )		5620614	3					
ANR	5621080	Condition	l != i	893:24:37750:37755	5620614	0	True				
ANR	5621081	EqualityExpression	l != i		5620614	0		!=			
ANR	5621082	Identifier	l		5620614	0					
ANR	5621083	Identifier	i		5620614	1					
ANR	5621084	CompoundStatement		40:32:2118:2118	5620614	1					
ANR	5621085	ExpressionStatement	area += ( double ) ( gcp - gc0 ) * ( gdl - gdp ) - ( double ) ( gdp - gd0 ) * ( gcl - gcp )	894:24:37784:37861	5620614	0	True				
ANR	5621086	AssignmentExpression	area += ( double ) ( gcp - gc0 ) * ( gdl - gdp ) - ( double ) ( gdp - gd0 ) * ( gcl - gcp )		5620614	0		+=			
ANR	5621087	Identifier	area		5620614	0					
ANR	5621088	AdditiveExpression	( double ) ( gcp - gc0 ) * ( gdl - gdp ) - ( double ) ( gdp - gd0 ) * ( gcl - gcp )		5620614	1		-			
ANR	5621089	MultiplicativeExpression	( double ) ( gcp - gc0 ) * ( gdl - gdp )		5620614	0		*			
ANR	5621090	CastExpression	( double ) ( gcp - gc0 )		5620614	0					
ANR	5621091	CastTarget	double		5620614	0					
ANR	5621092	AdditiveExpression	gcp - gc0		5620614	1		-			
ANR	5621093	Identifier	gcp		5620614	0					
ANR	5621094	Identifier	gc0		5620614	1					
ANR	5621095	AdditiveExpression	gdl - gdp		5620614	1		-			
ANR	5621096	Identifier	gdl		5620614	0					
ANR	5621097	Identifier	gdp		5620614	1					
ANR	5621098	MultiplicativeExpression	( double ) ( gdp - gd0 ) * ( gcl - gcp )		5620614	1		*			
ANR	5621099	CastExpression	( double ) ( gdp - gd0 )		5620614	0					
ANR	5621100	CastTarget	double		5620614	0					
ANR	5621101	AdditiveExpression	gdp - gd0		5620614	1		-			
ANR	5621102	Identifier	gdp		5620614	0					
ANR	5621103	Identifier	gd0		5620614	1					
ANR	5621104	AdditiveExpression	gcl - gcp		5620614	1		-			
ANR	5621105	Identifier	gcl		5620614	0					
ANR	5621106	Identifier	gcp		5620614	1					
ANR	5621107	ExpressionStatement	gcd = gcl - gc0	895:24:37887:37902	5620614	1	True				
ANR	5621108	AssignmentExpression	gcd = gcl - gc0		5620614	0		=			
ANR	5621109	Identifier	gcd		5620614	0					
ANR	5621110	AdditiveExpression	gcl - gc0		5620614	1		-			
ANR	5621111	Identifier	gcl		5620614	0					
ANR	5621112	Identifier	gc0		5620614	1					
ANR	5621113	ExpressionStatement	gcd = any_abs ( gcd )	896:24:37928:37946	5620614	2	True				
ANR	5621114	AssignmentExpression	gcd = any_abs ( gcd )		5620614	0		=			
ANR	5621115	Identifier	gcd		5620614	0					
ANR	5621116	CallExpression	any_abs ( gcd )		5620614	1					
ANR	5621117	Callee	any_abs		5620614	0					
ANR	5621118	Identifier	any_abs		5620614	0					
ANR	5621119	ArgumentList	gcd		5620614	1					
ANR	5621120	Argument	gcd		5620614	0					
ANR	5621121	Identifier	gcd		5620614	0					
ANR	5621122	IfStatement	if ( gcm < gcd )		5620614	3					
ANR	5621123	Condition	gcm < gcd	897:28:37976:37984	5620614	0	True				
ANR	5621124	RelationalExpression	gcm < gcd		5620614	0		<			
ANR	5621125	Identifier	gcm		5620614	0					
ANR	5621126	Identifier	gcd		5620614	1					
ANR	5621127	CompoundStatement		44:39:2347:2347	5620614	1					
ANR	5621128	ExpressionStatement	* gm = gcl	898:28:38017:38026	5620614	0	True				
ANR	5621129	AssignmentExpression	* gm = gcl		5620614	0		=			
ANR	5621130	UnaryOperationExpression	* gm		5620614	0					
ANR	5621131	UnaryOperator	*		5620614	0					
ANR	5621132	Identifier	gm		5620614	1					
ANR	5621133	Identifier	gcl		5620614	1					
ANR	5621134	ExpressionStatement	gcm = gcd	899:28:38056:38065	5620614	1	True				
ANR	5621135	AssignmentExpression	gcm = gcd		5620614	0		=			
ANR	5621136	Identifier	gcm		5620614	0					
ANR	5621137	Identifier	gcd		5620614	1					
ANR	5621138	ExpressionStatement	dir = ( gcp < gcl ? 1 : gcp > gcl ? - 1 : prev_dir )	901:24:38117:38166	5620614	4	True				
ANR	5621139	AssignmentExpression	dir = ( gcp < gcl ? 1 : gcp > gcl ? - 1 : prev_dir )		5620614	0		=			
ANR	5621140	Identifier	dir		5620614	0					
ANR	5621141	ConditionalExpression	gcp < gcl ? 1 : gcp > gcl ? - 1 : prev_dir		5620614	1					
ANR	5621142	Condition	gcp < gcl		5620614	0					
ANR	5621143	RelationalExpression	gcp < gcl		5620614	0		<			
ANR	5621144	Identifier	gcp		5620614	0					
ANR	5621145	Identifier	gcl		5620614	1					
ANR	5621146	PrimaryExpression	1		5620614	1					
ANR	5621147	ConditionalExpression	gcp > gcl ? - 1 : prev_dir		5620614	2					
ANR	5621148	Condition	gcp > gcl		5620614	0					
ANR	5621149	RelationalExpression	gcp > gcl		5620614	0		>			
ANR	5621150	Identifier	gcp		5620614	0					
ANR	5621151	Identifier	gcl		5620614	1					
ANR	5621152	UnaryOperationExpression	- 1		5620614	1					
ANR	5621153	UnaryOperator	-		5620614	0					
ANR	5621154	PrimaryExpression	1		5620614	1					
ANR	5621155	Identifier	prev_dir		5620614	2					
ANR	5621156	IfStatement	if ( dir * prev_dir < 0 )		5620614	5					
ANR	5621157	Condition	dir * prev_dir < 0	902:28:38196:38213	5620614	0	True				
ANR	5621158	RelationalExpression	dir * prev_dir < 0		5620614	0		<			
ANR	5621159	MultiplicativeExpression	dir * prev_dir		5620614	0		*			
ANR	5621160	Identifier	dir		5620614	0					
ANR	5621161	Identifier	prev_dir		5620614	1					
ANR	5621162	PrimaryExpression	0		5620614	1					
ANR	5621163	ExpressionStatement	dir_change ++	903:28:38244:38256	5620614	1	True				
ANR	5621164	PostIncDecOperationExpression	dir_change ++		5620614	0					
ANR	5621165	Identifier	dir_change		5620614	0					
ANR	5621166	IncDec	++		5620614	1					
ANR	5621167	IfStatement	if ( l == j )		5620614	4					
ANR	5621168	Condition	l == j	905:24:38304:38309	5620614	0	True				
ANR	5621169	EqualityExpression	l == j		5620614	0		==			
ANR	5621170	Identifier	l		5620614	0					
ANR	5621171	Identifier	j		5620614	1					
ANR	5621172	BreakStatement	break ;	906:24:38336:38341	5620614	1	True				
ANR	5621173	IfStatement	if ( gcl < gc0 )		5620614	5					
ANR	5621174	Condition	gcl < gc0	907:24:38367:38375	5620614	0	True				
ANR	5621175	RelationalExpression	gcl < gc0		5620614	0		<			
ANR	5621176	Identifier	gcl		5620614	0					
ANR	5621177	Identifier	gc0		5620614	1					
ANR	5621178	ExpressionStatement	lt = true	908:24:38402:38411	5620614	1	True				
ANR	5621179	AssignmentExpression	lt = true		5620614	0		=			
ANR	5621180	Identifier	lt		5620614	0					
ANR	5621181	Identifier	true		5620614	1					
ANR	5621182	IfStatement	if ( gcl > gc0 )		5620614	6					
ANR	5621183	Condition	gcl > gc0	909:24:38437:38445	5620614	0	True				
ANR	5621184	RelationalExpression	gcl > gc0		5620614	0		>			
ANR	5621185	Identifier	gcl		5620614	0					
ANR	5621186	Identifier	gc0		5620614	1					
ANR	5621187	ExpressionStatement	gt = true	910:24:38472:38481	5620614	1	True				
ANR	5621188	AssignmentExpression	gt = true		5620614	0		=			
ANR	5621189	Identifier	gt		5620614	0					
ANR	5621190	Identifier	true		5620614	1					
ANR	5621191	IfStatement	if ( dir_change > 1 )		5620614	5					
ANR	5621192	Condition	dir_change > 1	912:20:38521:38534	5620614	0	True				
ANR	5621193	RelationalExpression	dir_change > 1		5620614	0		>			
ANR	5621194	Identifier	dir_change		5620614	0					
ANR	5621195	PrimaryExpression	1		5620614	1					
ANR	5621196	ContinueStatement	continue ;	913:20:38557:38565	5620614	1	True				
ANR	5621197	IfStatement	if ( gcm > threshold )		5620614	6					
ANR	5621198	Condition	gcm > threshold	914:20:38587:38601	5620614	0	True				
ANR	5621199	RelationalExpression	gcm > threshold		5620614	0		>			
ANR	5621200	Identifier	gcm		5620614	0					
ANR	5621201	Identifier	threshold		5620614	1					
ANR	5621202	ContinueStatement	continue ;	915:20:38624:38632	5620614	1	True				
ANR	5621203	ExpressionStatement	area = any_abs ( area ) / 2	916:16:38650:38674	5620614	7	True				
ANR	5621204	AssignmentExpression	area = any_abs ( area ) / 2		5620614	0		=			
ANR	5621205	Identifier	area		5620614	0					
ANR	5621206	MultiplicativeExpression	any_abs ( area ) / 2		5620614	1		/			
ANR	5621207	CallExpression	any_abs ( area )		5620614	0					
ANR	5621208	Callee	any_abs		5620614	0					
ANR	5621209	Identifier	any_abs		5620614	0					
ANR	5621210	ArgumentList	area		5620614	1					
ANR	5621211	Argument	area		5620614	0					
ANR	5621212	Identifier	area		5620614	0					
ANR	5621213	PrimaryExpression	2		5620614	1					
ANR	5621214	ExpressionStatement	area0 = ( double ) ( gd1 - gd0 ) * gcm	917:16:38709:38742	5620614	8	True				
ANR	5621215	AssignmentExpression	area0 = ( double ) ( gd1 - gd0 ) * gcm		5620614	0		=			
ANR	5621216	Identifier	area0		5620614	0					
ANR	5621217	MultiplicativeExpression	( double ) ( gd1 - gd0 ) * gcm		5620614	1		*			
ANR	5621218	CastExpression	( double ) ( gd1 - gd0 )		5620614	0					
ANR	5621219	CastTarget	double		5620614	0					
ANR	5621220	AdditiveExpression	gd1 - gd0		5620614	1		-			
ANR	5621221	Identifier	gd1		5620614	0					
ANR	5621222	Identifier	gd0		5620614	1					
ANR	5621223	Identifier	gcm		5620614	1					
ANR	5621224	ExpressionStatement	area0 = any_abs ( area0 )	918:16:38789:38811	5620614	9	True				
ANR	5621225	AssignmentExpression	area0 = any_abs ( area0 )		5620614	0		=			
ANR	5621226	Identifier	area0		5620614	0					
ANR	5621227	CallExpression	any_abs ( area0 )		5620614	1					
ANR	5621228	Callee	any_abs		5620614	0					
ANR	5621229	Identifier	any_abs		5620614	0					
ANR	5621230	ArgumentList	area0		5620614	1					
ANR	5621231	Argument	area0		5620614	0					
ANR	5621232	Identifier	area0		5620614	0					
ANR	5621233	IfStatement	if ( area > area0 * 0.75 )		5620614	10					
ANR	5621234	Condition	area > area0 * 0.75	919:20:38833:38851	5620614	0	True				
ANR	5621235	RelationalExpression	area > area0 * 0.75		5620614	0		>			
ANR	5621236	Identifier	area		5620614	0					
ANR	5621237	MultiplicativeExpression	area0 * 0.75		5620614	1		*			
ANR	5621238	Identifier	area0		5620614	0					
ANR	5621239	PrimaryExpression	0.75		5620614	1					
ANR	5621240	ContinueStatement	continue ;	920:20:38874:38882	5620614	1	True				
ANR	5621241	IfStatement	if ( ! lt || ! gt )		5620614	11					
ANR	5621242	Condition	! lt || ! gt	921:20:38940:38949	5620614	0	True				
ANR	5621243	OrExpression	! lt || ! gt		5620614	0		||			
ANR	5621244	UnaryOperationExpression	! lt		5620614	0					
ANR	5621245	UnaryOperator	!		5620614	0					
ANR	5621246	Identifier	lt		5620614	1					
ANR	5621247	UnaryOperationExpression	! gt		5620614	1					
ANR	5621248	UnaryOperator	!		5620614	0					
ANR	5621249	Identifier	gt		5620614	1					
ANR	5621250	CompoundStatement		70:20:3382:3411	5620614	1					
ANR	5621251	IdentifierDeclStatement	"int ii = i - 1 , jj = j + 1 ;"	922:20:38974:39000	5620614	0	True				
ANR	5621252	IdentifierDecl	ii = i - 1		5620614	0					
ANR	5621253	IdentifierDeclType	int		5620614	0					
ANR	5621254	Identifier	ii		5620614	1					
ANR	5621255	AssignmentExpression	ii = i - 1		5620614	2		=			
ANR	5621256	Identifier	ii		5620614	0					
ANR	5621257	AdditiveExpression	i - 1		5620614	1		-			
ANR	5621258	Identifier	i		5620614	0					
ANR	5621259	PrimaryExpression	1		5620614	1					
ANR	5621260	IdentifierDecl	jj = j + 1		5620614	1					
ANR	5621261	IdentifierDeclType	int		5620614	0					
ANR	5621262	Identifier	jj		5620614	1					
ANR	5621263	AssignmentExpression	jj = j + 1		5620614	2		=			
ANR	5621264	Identifier	jj		5620614	0					
ANR	5621265	AdditiveExpression	j + 1		5620614	1		+			
ANR	5621266	Identifier	j		5620614	0					
ANR	5621267	PrimaryExpression	1		5620614	1					
ANR	5621268	IdentifierDeclStatement	"t1_glyph_space_coord gii , gjj ;"	923:20:39022:39051	5620614	1	True				
ANR	5621269	IdentifierDecl	gii		5620614	0					
ANR	5621270	IdentifierDeclType	t1_glyph_space_coord		5620614	0					
ANR	5621271	Identifier	gii		5620614	1					
ANR	5621272	IdentifierDecl	gjj		5620614	1					
ANR	5621273	IdentifierDeclType	t1_glyph_space_coord		5620614	0					
ANR	5621274	Identifier	gjj		5620614	1					
ANR	5621275	IfStatement	if ( ii < contour_beg )		5620614	2					
ANR	5621276	Condition	ii < contour_beg	925:24:39078:39093	5620614	0	True				
ANR	5621277	RelationalExpression	ii < contour_beg		5620614	0		<			
ANR	5621278	Identifier	ii		5620614	0					
ANR	5621279	Identifier	contour_beg		5620614	1					
ANR	5621280	ExpressionStatement	ii = contour_end - 1	926:24:39120:39140	5620614	1	True				
ANR	5621281	AssignmentExpression	ii = contour_end - 1		5620614	0		=			
ANR	5621282	Identifier	ii		5620614	0					
ANR	5621283	AdditiveExpression	contour_end - 1		5620614	1		-			
ANR	5621284	Identifier	contour_end		5620614	0					
ANR	5621285	PrimaryExpression	1		5620614	1					
ANR	5621286	IfStatement	if ( jj == contour_end )		5620614	3					
ANR	5621287	Condition	jj == contour_end	927:24:39166:39182	5620614	0	True				
ANR	5621288	EqualityExpression	jj == contour_end		5620614	0		==			
ANR	5621289	Identifier	jj		5620614	0					
ANR	5621290	Identifier	contour_end		5620614	1					
ANR	5621291	ExpressionStatement	jj = contour_beg	928:24:39209:39225	5620614	1	True				
ANR	5621292	AssignmentExpression	jj = contour_beg		5620614	0		=			
ANR	5621293	Identifier	jj		5620614	0					
ANR	5621294	Identifier	contour_beg		5620614	1					
ANR	5621295	ExpressionStatement	"gii = * member_prt ( t1_glyph_space_coord , & self -> pole [ ii ] , offset_gc )"	929:20:39247:39314	5620614	4	True				
ANR	5621296	AssignmentExpression	"gii = * member_prt ( t1_glyph_space_coord , & self -> pole [ ii ] , offset_gc )"		5620614	0		=			
ANR	5621297	Identifier	gii		5620614	0					
ANR	5621298	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ ii ] , offset_gc )"		5620614	1					
ANR	5621299	UnaryOperator	*		5620614	0					
ANR	5621300	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ ii ] , offset_gc )"		5620614	1					
ANR	5621301	Callee	member_prt		5620614	0					
ANR	5621302	Identifier	member_prt		5620614	0					
ANR	5621303	ArgumentList	t1_glyph_space_coord		5620614	1					
ANR	5621304	Argument	t1_glyph_space_coord		5620614	0					
ANR	5621305	Identifier	t1_glyph_space_coord		5620614	0					
ANR	5621306	Argument	& self -> pole [ ii ]		5620614	1					
ANR	5621307	UnaryOperationExpression	& self -> pole [ ii ]		5620614	0					
ANR	5621308	UnaryOperator	&		5620614	0					
ANR	5621309	ArrayIndexing	self -> pole [ ii ]		5620614	1					
ANR	5621310	PtrMemberAccess	self -> pole		5620614	0					
ANR	5621311	Identifier	self		5620614	0					
ANR	5621312	Identifier	pole		5620614	1					
ANR	5621313	Identifier	ii		5620614	1					
ANR	5621314	Argument	offset_gc		5620614	2					
ANR	5621315	Identifier	offset_gc		5620614	0					
ANR	5621316	ExpressionStatement	"gjj = * member_prt ( t1_glyph_space_coord , & self -> pole [ jj ] , offset_gc )"	930:20:39336:39403	5620614	5	True				
ANR	5621317	AssignmentExpression	"gjj = * member_prt ( t1_glyph_space_coord , & self -> pole [ jj ] , offset_gc )"		5620614	0		=			
ANR	5621318	Identifier	gjj		5620614	0					
ANR	5621319	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ jj ] , offset_gc )"		5620614	1					
ANR	5621320	UnaryOperator	*		5620614	0					
ANR	5621321	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ jj ] , offset_gc )"		5620614	1					
ANR	5621322	Callee	member_prt		5620614	0					
ANR	5621323	Identifier	member_prt		5620614	0					
ANR	5621324	ArgumentList	t1_glyph_space_coord		5620614	1					
ANR	5621325	Argument	t1_glyph_space_coord		5620614	0					
ANR	5621326	Identifier	t1_glyph_space_coord		5620614	0					
ANR	5621327	Argument	& self -> pole [ jj ]		5620614	1					
ANR	5621328	UnaryOperationExpression	& self -> pole [ jj ]		5620614	0					
ANR	5621329	UnaryOperator	&		5620614	0					
ANR	5621330	ArrayIndexing	self -> pole [ jj ]		5620614	1					
ANR	5621331	PtrMemberAccess	self -> pole		5620614	0					
ANR	5621332	Identifier	self		5620614	0					
ANR	5621333	Identifier	pole		5620614	1					
ANR	5621334	Identifier	jj		5620614	1					
ANR	5621335	Argument	offset_gc		5620614	2					
ANR	5621336	Identifier	offset_gc		5620614	0					
ANR	5621337	IfStatement	if ( ( lt && gii <= gc0 && gjj <= gc0 ) || ( gt && gii >= gc0 && gjj >= gc0 ) )		5620614	6					
ANR	5621338	Condition	( lt && gii <= gc0 && gjj <= gc0 ) || ( gt && gii >= gc0 && gjj >= gc0 )	931:24:39429:39520	5620614	0	True				
ANR	5621339	OrExpression	( lt && gii <= gc0 && gjj <= gc0 ) || ( gt && gii >= gc0 && gjj >= gc0 )		5620614	0		||			
ANR	5621340	AndExpression	lt && gii <= gc0 && gjj <= gc0		5620614	0		&&			
ANR	5621341	Identifier	lt		5620614	0					
ANR	5621342	AndExpression	gii <= gc0 && gjj <= gc0		5620614	1		&&			
ANR	5621343	RelationalExpression	gii <= gc0		5620614	0		<=			
ANR	5621344	Identifier	gii		5620614	0					
ANR	5621345	Identifier	gc0		5620614	1					
ANR	5621346	RelationalExpression	gjj <= gc0		5620614	1		<=			
ANR	5621347	Identifier	gjj		5620614	0					
ANR	5621348	Identifier	gc0		5620614	1					
ANR	5621349	AndExpression	gt && gii >= gc0 && gjj >= gc0		5620614	1		&&			
ANR	5621350	Identifier	gt		5620614	0					
ANR	5621351	AndExpression	gii >= gc0 && gjj >= gc0		5620614	1		&&			
ANR	5621352	RelationalExpression	gii >= gc0		5620614	0		>=			
ANR	5621353	Identifier	gii		5620614	0					
ANR	5621354	Identifier	gc0		5620614	1					
ANR	5621355	RelationalExpression	gjj >= gc0		5620614	1		>=			
ANR	5621356	Identifier	gjj		5620614	0					
ANR	5621357	Identifier	gc0		5620614	1					
ANR	5621358	CompoundStatement		79:58:3883:3883	5620614	1					
ANR	5621359	ExpressionStatement	* j0 = i	933:24:39549:39556	5620614	0	True				
ANR	5621360	AssignmentExpression	* j0 = i		5620614	0		=			
ANR	5621361	UnaryOperationExpression	* j0		5620614	0					
ANR	5621362	UnaryOperator	*		5620614	0					
ANR	5621363	Identifier	j0		5620614	1					
ANR	5621364	Identifier	i		5620614	1					
ANR	5621365	ExpressionStatement	* j1 = j	934:24:39582:39589	5620614	1	True				
ANR	5621366	AssignmentExpression	* j1 = j		5620614	0		=			
ANR	5621367	UnaryOperationExpression	* j1		5620614	0					
ANR	5621368	UnaryOperator	*		5620614	0					
ANR	5621369	Identifier	j1		5620614	1					
ANR	5621370	Identifier	j		5620614	1					
ANR	5621371	ReturnStatement	return true ;	935:24:39615:39626	5620614	2	True				
ANR	5621372	Identifier	true		5620614	0					
ANR	5621373	BreakStatement	break ;	944:8:39925:39930	5620614	5	True				
ANR	5621374	ReturnStatement	return false ;	946:4:39942:39954	5620614	7	True				
ANR	5621375	Identifier	false		5620614	0					
ANR	5621376	ReturnType	static bool		5620614	1					
ANR	5621377	Identifier	t1_hinter__find_flex		5620614	2					
ANR	5621378	ParameterList	"t1_hinter * self , int k , int contour_beg , int contour_end , t1_glyph_space_coord pixel_g , t1_glyph_space_coord threshold , int i0 , int i1 , int N , int * j0 , int * j1 , t1_glyph_space_coord * gm"		5620614	3					
ANR	5621379	Parameter	t1_hinter * self	850:33:35382:35397	5620614	0	True				
ANR	5621380	ParameterType	t1_hinter *		5620614	0					
ANR	5621381	Identifier	self		5620614	1					
ANR	5621382	Parameter	int k	850:51:35400:35404	5620614	1	True				
ANR	5621383	ParameterType	int		5620614	0					
ANR	5621384	Identifier	k		5620614	1					
ANR	5621385	Parameter	int contour_beg	850:58:35407:35421	5620614	2	True				
ANR	5621386	ParameterType	int		5620614	0					
ANR	5621387	Identifier	contour_beg		5620614	1					
ANR	5621388	Parameter	int contour_end	850:75:35424:35438	5620614	3	True				
ANR	5621389	ParameterType	int		5620614	0					
ANR	5621390	Identifier	contour_end		5620614	1					
ANR	5621391	Parameter	t1_glyph_space_coord pixel_g	851:23:35464:35491	5620614	4	True				
ANR	5621392	ParameterType	t1_glyph_space_coord		5620614	0					
ANR	5621393	Identifier	pixel_g		5620614	1					
ANR	5621394	Parameter	t1_glyph_space_coord threshold	851:53:35494:35523	5620614	5	True				
ANR	5621395	ParameterType	t1_glyph_space_coord		5620614	0					
ANR	5621396	Identifier	threshold		5620614	1					
ANR	5621397	Parameter	int i0	852:23:35549:35554	5620614	6	True				
ANR	5621398	ParameterType	int		5620614	0					
ANR	5621399	Identifier	i0		5620614	1					
ANR	5621400	Parameter	int i1	852:31:35557:35562	5620614	7	True				
ANR	5621401	ParameterType	int		5620614	0					
ANR	5621402	Identifier	i1		5620614	1					
ANR	5621403	Parameter	int N	852:39:35565:35569	5620614	8	True				
ANR	5621404	ParameterType	int		5620614	0					
ANR	5621405	Identifier	N		5620614	1					
ANR	5621406	Parameter	int * j0	852:46:35572:35578	5620614	9	True				
ANR	5621407	ParameterType	int *		5620614	0					
ANR	5621408	Identifier	j0		5620614	1					
ANR	5621409	Parameter	int * j1	852:55:35581:35587	5620614	10	True				
ANR	5621410	ParameterType	int *		5620614	0					
ANR	5621411	Identifier	j1		5620614	1					
ANR	5621412	Parameter	t1_glyph_space_coord * gm	853:23:35613:35636	5620614	11	True				
ANR	5621413	ParameterType	t1_glyph_space_coord *		5620614	0					
ANR	5621414	Identifier	gm		5620614	1					
ANR	5621415	CFGEntryNode	ENTRY		5620614		True				
ANR	5621416	CFGExitNode	EXIT		5620614		True				
ANR	5621417	InfiniteForNode	true		5620614		True				
ANR	5621418	Symbol	j0		5620614						
ANR	5621419	Symbol	j1		5620614						
ANR	5621420	Symbol	lt		5620614						
ANR	5621421	Symbol	gcd		5620614						
ANR	5621422	Symbol	threshold		5620614						
ANR	5621423	Symbol	dir		5620614						
ANR	5621424	Symbol	prev_dir		5620614						
ANR	5621425	Symbol	* gm		5620614						
ANR	5621426	Symbol	gcm		5620614						
ANR	5621427	Symbol	gcl		5620614						
ANR	5621428	Symbol	* member_prt		5620614						
ANR	5621429	Symbol	gcp		5620614						
ANR	5621430	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gd )"		5620614						
ANR	5621431	Symbol	member_prt		5620614						
ANR	5621432	Symbol	area		5620614						
ANR	5621433	Symbol	ii		5620614						
ANR	5621434	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ l ] , offset_gd )"		5620614						
ANR	5621435	Symbol	* self		5620614						
ANR	5621436	Symbol	offset_gc		5620614						
ANR	5621437	Symbol	offset_gd		5620614						
ANR	5621438	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"		5620614						
ANR	5621439	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ ii ] , offset_gc )"		5620614						
ANR	5621440	Symbol	gdl		5620614						
ANR	5621441	Symbol	* j1		5620614						
ANR	5621442	Symbol	self -> pole [ j ] . type		5620614						
ANR	5621443	Symbol	* j0		5620614						
ANR	5621444	Symbol	gdp		5620614						
ANR	5621445	Symbol	t1_glyph_space_coord		5620614						
ANR	5621446	Symbol	contour_beg		5620614						
ANR	5621447	Symbol	p_gd		5620614						
ANR	5621448	Symbol	true		5620614						
ANR	5621449	Symbol	p_gc		5620614						
ANR	5621450	Symbol	jj		5620614						
ANR	5621451	Symbol	* self -> pole		5620614						
ANR	5621452	Symbol	gii		5620614						
ANR	5621453	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ jj ] , offset_gc )"		5620614						
ANR	5621454	Symbol	N		5620614						
ANR	5621455	Symbol	area0		5620614						
ANR	5621456	Symbol	contour_end		5620614						
ANR	5621457	Symbol	gc1		5620614						
ANR	5621458	Symbol	gc0		5620614						
ANR	5621459	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5620614						
ANR	5621460	Symbol	self -> pole [ i ] . type		5620614						
ANR	5621461	Symbol	any_abs		5620614						
ANR	5621462	Symbol	self -> pole		5620614						
ANR	5621463	Symbol	pixel_g		5620614						
ANR	5621464	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ l ] , offset_gc )"		5620614						
ANR	5621465	Symbol	& self -> pole [ 0 ] . gy		5620614						
ANR	5621466	Symbol	& self -> pole [ 0 ] . gx		5620614						
ANR	5621467	Symbol	* * self		5620614						
ANR	5621468	Symbol	gm		5620614						
ANR	5621469	Symbol	gjj		5620614						
ANR	5621470	Symbol	i0		5620614						
ANR	5621471	Symbol	i1		5620614						
ANR	5621472	Symbol	false		5620614						
ANR	5621473	Symbol	i		5620614						
ANR	5621474	Symbol	j		5620614						
ANR	5621475	Symbol	k		5620614						
ANR	5621476	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"		5620614						
ANR	5621477	Symbol	l		5620614						
ANR	5621478	Symbol	dir_change		5620614						
ANR	5621479	Symbol	m		5620614						
ANR	5621480	Symbol	gt		5620614						
ANR	5621481	Symbol	n		5620614						
ANR	5621482	Symbol	gd0		5620614						
ANR	5621483	Symbol	* i		5620614						
ANR	5621484	Symbol	* j		5620614						
ANR	5621485	Symbol	gd1		5620614						
ANR	5621486	Symbol	offcurve		5620614						
ANR	5621487	Symbol	self		5620614						
ANR	5621488	Function	t1_hinter__compact_flex	949:0:39959:41104							
ANR	5621489	FunctionDef	"t1_hinter__compact_flex (t1_hinter * self , int contour_beg , int contour_end , int i0 , int i1 , int * pi)"		5621488	0					
ANR	5621490	CompoundStatement		950:0:40072:41104	5621488	0					
ANR	5621491	IfStatement	if ( i0 > i1 )		5621488	0					
ANR	5621492	Condition	i0 > i1	951:8:40082:40088	5621488	0	True				
ANR	5621493	RelationalExpression	i0 > i1		5621488	0		>			
ANR	5621494	Identifier	i0		5621488	0					
ANR	5621495	Identifier	i1		5621488	1					
ANR	5621496	CompoundStatement		2:17:18:18	5621488	1					
ANR	5621497	ExpressionStatement	"t1_hinter__compact_flex ( self , contour_beg , contour_end , i0 , contour_end , pi )"	952:8:40101:40177	5621488	0	True				
ANR	5621498	CallExpression	"t1_hinter__compact_flex ( self , contour_beg , contour_end , i0 , contour_end , pi )"		5621488	0					
ANR	5621499	Callee	t1_hinter__compact_flex		5621488	0					
ANR	5621500	Identifier	t1_hinter__compact_flex		5621488	0					
ANR	5621501	ArgumentList	self		5621488	1					
ANR	5621502	Argument	self		5621488	0					
ANR	5621503	Identifier	self		5621488	0					
ANR	5621504	Argument	contour_beg		5621488	1					
ANR	5621505	Identifier	contour_beg		5621488	0					
ANR	5621506	Argument	contour_end		5621488	2					
ANR	5621507	Identifier	contour_end		5621488	0					
ANR	5621508	Argument	i0		5621488	3					
ANR	5621509	Identifier	i0		5621488	0					
ANR	5621510	Argument	contour_end		5621488	4					
ANR	5621511	Identifier	contour_end		5621488	0					
ANR	5621512	Argument	pi		5621488	5					
ANR	5621513	Identifier	pi		5621488	0					
ANR	5621514	ExpressionStatement	"t1_hinter__compact_flex ( self , contour_beg , contour_end , contour_beg , i1 , pi )"	953:8:40187:40263	5621488	1	True				
ANR	5621515	CallExpression	"t1_hinter__compact_flex ( self , contour_beg , contour_end , contour_beg , i1 , pi )"		5621488	0					
ANR	5621516	Callee	t1_hinter__compact_flex		5621488	0					
ANR	5621517	Identifier	t1_hinter__compact_flex		5621488	0					
ANR	5621518	ArgumentList	self		5621488	1					
ANR	5621519	Argument	self		5621488	0					
ANR	5621520	Identifier	self		5621488	0					
ANR	5621521	Argument	contour_beg		5621488	1					
ANR	5621522	Identifier	contour_beg		5621488	0					
ANR	5621523	Argument	contour_end		5621488	2					
ANR	5621524	Identifier	contour_end		5621488	0					
ANR	5621525	Argument	contour_beg		5621488	3					
ANR	5621526	Identifier	contour_beg		5621488	0					
ANR	5621527	Argument	i1		5621488	4					
ANR	5621528	Identifier	i1		5621488	0					
ANR	5621529	Argument	pi		5621488	5					
ANR	5621530	Identifier	pi		5621488	0					
ANR	5621531	ElseStatement	else		5621488	0					
ANR	5621532	IfStatement	if ( i0 < i1 )		5621488	0					
ANR	5621533	Condition	i0 < i1	954:15:40280:40286	5621488	0	True				
ANR	5621534	RelationalExpression	i0 < i1		5621488	0		<			
ANR	5621535	Identifier	i0		5621488	0					
ANR	5621536	Identifier	i1		5621488	1					
ANR	5621537	CompoundStatement		7:8:241:260	5621488	1					
ANR	5621538	IdentifierDeclStatement	int j ;	955:8:40299:40304	5621488	0	True				
ANR	5621539	IdentifierDecl	j		5621488	0					
ANR	5621540	IdentifierDeclType	int		5621488	0					
ANR	5621541	Identifier	j		5621488	1					
ANR	5621542	IdentifierDeclStatement	int s = i1 - i0 - 1 ;	956:8:40314:40333	5621488	1	True				
ANR	5621543	IdentifierDecl	s = i1 - i0 - 1		5621488	0					
ANR	5621544	IdentifierDeclType	int		5621488	0					
ANR	5621545	Identifier	s		5621488	1					
ANR	5621546	AssignmentExpression	s = i1 - i0 - 1		5621488	2		=			
ANR	5621547	Identifier	s		5621488	0					
ANR	5621548	AdditiveExpression	i1 - i0 - 1		5621488	1		-			
ANR	5621549	Identifier	i1		5621488	0					
ANR	5621550	AdditiveExpression	i0 - 1		5621488	1		-			
ANR	5621551	Identifier	i0		5621488	0					
ANR	5621552	PrimaryExpression	1		5621488	1					
ANR	5621553	ForStatement	for ( j = 0 ; j < self -> hint_range_count ; j ++ )		5621488	2					
ANR	5621554	ForInit	j = 0 ;	958:13:40349:40354	5621488	0	True				
ANR	5621555	AssignmentExpression	j = 0		5621488	0		=			
ANR	5621556	Identifier	j		5621488	0					
ANR	5621557	PrimaryExpression	0		5621488	1					
ANR	5621558	Condition	j < self -> hint_range_count	958:20:40356:40381	5621488	1	True				
ANR	5621559	RelationalExpression	j < self -> hint_range_count		5621488	0		<			
ANR	5621560	Identifier	j		5621488	0					
ANR	5621561	PtrMemberAccess	self -> hint_range_count		5621488	1					
ANR	5621562	Identifier	self		5621488	0					
ANR	5621563	Identifier	hint_range_count		5621488	1					
ANR	5621564	PostIncDecOperationExpression	j ++	958:48:40384:40386	5621488	2	True				
ANR	5621565	Identifier	j		5621488	0					
ANR	5621566	IncDec	++		5621488	1					
ANR	5621567	CompoundStatement		9:53:316:316	5621488	3					
ANR	5621568	IfStatement	if ( self -> hint_range [ j ] . beg_pole >= i1 )		5621488	0					
ANR	5621569	Condition	self -> hint_range [ j ] . beg_pole >= i1	959:16:40407:40440	5621488	0	True				
ANR	5621570	RelationalExpression	self -> hint_range [ j ] . beg_pole >= i1		5621488	0		>=			
ANR	5621571	MemberAccess	self -> hint_range [ j ] . beg_pole		5621488	0					
ANR	5621572	ArrayIndexing	self -> hint_range [ j ]		5621488	0					
ANR	5621573	PtrMemberAccess	self -> hint_range		5621488	0					
ANR	5621574	Identifier	self		5621488	0					
ANR	5621575	Identifier	hint_range		5621488	1					
ANR	5621576	Identifier	j		5621488	1					
ANR	5621577	Identifier	beg_pole		5621488	1					
ANR	5621578	Identifier	i1		5621488	1					
ANR	5621579	ExpressionStatement	self -> hint_range [ j ] . beg_pole -= s	960:16:40459:40492	5621488	1	True				
ANR	5621580	AssignmentExpression	self -> hint_range [ j ] . beg_pole -= s		5621488	0		-=			
ANR	5621581	MemberAccess	self -> hint_range [ j ] . beg_pole		5621488	0					
ANR	5621582	ArrayIndexing	self -> hint_range [ j ]		5621488	0					
ANR	5621583	PtrMemberAccess	self -> hint_range		5621488	0					
ANR	5621584	Identifier	self		5621488	0					
ANR	5621585	Identifier	hint_range		5621488	1					
ANR	5621586	Identifier	j		5621488	1					
ANR	5621587	Identifier	beg_pole		5621488	1					
ANR	5621588	Identifier	s		5621488	1					
ANR	5621589	ElseStatement	else		5621488	0					
ANR	5621590	IfStatement	if ( self -> hint_range [ j ] . beg_pole > i0 )		5621488	0					
ANR	5621591	Condition	self -> hint_range [ j ] . beg_pole > i0	961:21:40515:40547	5621488	0	True				
ANR	5621592	RelationalExpression	self -> hint_range [ j ] . beg_pole > i0		5621488	0		>			
ANR	5621593	MemberAccess	self -> hint_range [ j ] . beg_pole		5621488	0					
ANR	5621594	ArrayIndexing	self -> hint_range [ j ]		5621488	0					
ANR	5621595	PtrMemberAccess	self -> hint_range		5621488	0					
ANR	5621596	Identifier	self		5621488	0					
ANR	5621597	Identifier	hint_range		5621488	1					
ANR	5621598	Identifier	j		5621488	1					
ANR	5621599	Identifier	beg_pole		5621488	1					
ANR	5621600	Identifier	i0		5621488	1					
ANR	5621601	ExpressionStatement	self -> hint_range [ j ] . beg_pole = i0	962:16:40566:40599	5621488	1	True				
ANR	5621602	AssignmentExpression	self -> hint_range [ j ] . beg_pole = i0		5621488	0		=			
ANR	5621603	MemberAccess	self -> hint_range [ j ] . beg_pole		5621488	0					
ANR	5621604	ArrayIndexing	self -> hint_range [ j ]		5621488	0					
ANR	5621605	PtrMemberAccess	self -> hint_range		5621488	0					
ANR	5621606	Identifier	self		5621488	0					
ANR	5621607	Identifier	hint_range		5621488	1					
ANR	5621608	Identifier	j		5621488	1					
ANR	5621609	Identifier	beg_pole		5621488	1					
ANR	5621610	Identifier	i0		5621488	1					
ANR	5621611	IfStatement	if ( self -> hint_range [ j ] . end_pole >= i1 )		5621488	1					
ANR	5621612	Condition	self -> hint_range [ j ] . end_pole >= i1	963:16:40617:40650	5621488	0	True				
ANR	5621613	RelationalExpression	self -> hint_range [ j ] . end_pole >= i1		5621488	0		>=			
ANR	5621614	MemberAccess	self -> hint_range [ j ] . end_pole		5621488	0					
ANR	5621615	ArrayIndexing	self -> hint_range [ j ]		5621488	0					
ANR	5621616	PtrMemberAccess	self -> hint_range		5621488	0					
ANR	5621617	Identifier	self		5621488	0					
ANR	5621618	Identifier	hint_range		5621488	1					
ANR	5621619	Identifier	j		5621488	1					
ANR	5621620	Identifier	end_pole		5621488	1					
ANR	5621621	Identifier	i1		5621488	1					
ANR	5621622	ExpressionStatement	self -> hint_range [ j ] . end_pole -= s	964:16:40669:40702	5621488	1	True				
ANR	5621623	AssignmentExpression	self -> hint_range [ j ] . end_pole -= s		5621488	0		-=			
ANR	5621624	MemberAccess	self -> hint_range [ j ] . end_pole		5621488	0					
ANR	5621625	ArrayIndexing	self -> hint_range [ j ]		5621488	0					
ANR	5621626	PtrMemberAccess	self -> hint_range		5621488	0					
ANR	5621627	Identifier	self		5621488	0					
ANR	5621628	Identifier	hint_range		5621488	1					
ANR	5621629	Identifier	j		5621488	1					
ANR	5621630	Identifier	end_pole		5621488	1					
ANR	5621631	Identifier	s		5621488	1					
ANR	5621632	ElseStatement	else		5621488	0					
ANR	5621633	IfStatement	if ( self -> hint_range [ j ] . end_pole > i0 )		5621488	0					
ANR	5621634	Condition	self -> hint_range [ j ] . end_pole > i0	965:21:40725:40757	5621488	0	True				
ANR	5621635	RelationalExpression	self -> hint_range [ j ] . end_pole > i0		5621488	0		>			
ANR	5621636	MemberAccess	self -> hint_range [ j ] . end_pole		5621488	0					
ANR	5621637	ArrayIndexing	self -> hint_range [ j ]		5621488	0					
ANR	5621638	PtrMemberAccess	self -> hint_range		5621488	0					
ANR	5621639	Identifier	self		5621488	0					
ANR	5621640	Identifier	hint_range		5621488	1					
ANR	5621641	Identifier	j		5621488	1					
ANR	5621642	Identifier	end_pole		5621488	1					
ANR	5621643	Identifier	i0		5621488	1					
ANR	5621644	ExpressionStatement	self -> hint_range [ j ] . end_pole = i0	966:16:40776:40809	5621488	1	True				
ANR	5621645	AssignmentExpression	self -> hint_range [ j ] . end_pole = i0		5621488	0		=			
ANR	5621646	MemberAccess	self -> hint_range [ j ] . end_pole		5621488	0					
ANR	5621647	ArrayIndexing	self -> hint_range [ j ]		5621488	0					
ANR	5621648	PtrMemberAccess	self -> hint_range		5621488	0					
ANR	5621649	Identifier	self		5621488	0					
ANR	5621650	Identifier	hint_range		5621488	1					
ANR	5621651	Identifier	j		5621488	1					
ANR	5621652	Identifier	end_pole		5621488	1					
ANR	5621653	Identifier	i0		5621488	1					
ANR	5621654	ExpressionStatement	"memmove ( & self -> pole [ i0 + 1 ] , & self -> pole [ i1 ] , sizeof ( * self -> pole ) * ( self -> pole_count - i1 ) )"	968:8:40829:40921	5621488	3	True				
ANR	5621655	CallExpression	"memmove ( & self -> pole [ i0 + 1 ] , & self -> pole [ i1 ] , sizeof ( * self -> pole ) * ( self -> pole_count - i1 ) )"		5621488	0					
ANR	5621656	Callee	memmove		5621488	0					
ANR	5621657	Identifier	memmove		5621488	0					
ANR	5621658	ArgumentList	& self -> pole [ i0 + 1 ]		5621488	1					
ANR	5621659	Argument	& self -> pole [ i0 + 1 ]		5621488	0					
ANR	5621660	UnaryOperationExpression	& self -> pole [ i0 + 1 ]		5621488	0					
ANR	5621661	UnaryOperator	&		5621488	0					
ANR	5621662	ArrayIndexing	self -> pole [ i0 + 1 ]		5621488	1					
ANR	5621663	PtrMemberAccess	self -> pole		5621488	0					
ANR	5621664	Identifier	self		5621488	0					
ANR	5621665	Identifier	pole		5621488	1					
ANR	5621666	AdditiveExpression	i0 + 1		5621488	1		+			
ANR	5621667	Identifier	i0		5621488	0					
ANR	5621668	PrimaryExpression	1		5621488	1					
ANR	5621669	Argument	& self -> pole [ i1 ]		5621488	1					
ANR	5621670	UnaryOperationExpression	& self -> pole [ i1 ]		5621488	0					
ANR	5621671	UnaryOperator	&		5621488	0					
ANR	5621672	ArrayIndexing	self -> pole [ i1 ]		5621488	1					
ANR	5621673	PtrMemberAccess	self -> pole		5621488	0					
ANR	5621674	Identifier	self		5621488	0					
ANR	5621675	Identifier	pole		5621488	1					
ANR	5621676	Identifier	i1		5621488	1					
ANR	5621677	Argument	sizeof ( * self -> pole ) * ( self -> pole_count - i1 )		5621488	2					
ANR	5621678	MultiplicativeExpression	sizeof ( * self -> pole ) * ( self -> pole_count - i1 )		5621488	0		*			
ANR	5621679	SizeofExpression	sizeof ( * self -> pole )		5621488	0					
ANR	5621680	Sizeof	sizeof		5621488	0					
ANR	5621681	UnaryOperationExpression	* self -> pole		5621488	1					
ANR	5621682	UnaryOperator	*		5621488	0					
ANR	5621683	PtrMemberAccess	self -> pole		5621488	1					
ANR	5621684	Identifier	self		5621488	0					
ANR	5621685	Identifier	pole		5621488	1					
ANR	5621686	AdditiveExpression	self -> pole_count - i1		5621488	1		-			
ANR	5621687	PtrMemberAccess	self -> pole_count		5621488	0					
ANR	5621688	Identifier	self		5621488	0					
ANR	5621689	Identifier	pole_count		5621488	1					
ANR	5621690	Identifier	i1		5621488	1					
ANR	5621691	ExpressionStatement	self -> contour [ self -> contour_count ] -= s	969:8:40931:40970	5621488	4	True				
ANR	5621692	AssignmentExpression	self -> contour [ self -> contour_count ] -= s		5621488	0		-=			
ANR	5621693	ArrayIndexing	self -> contour [ self -> contour_count ]		5621488	0					
ANR	5621694	PtrMemberAccess	self -> contour		5621488	0					
ANR	5621695	Identifier	self		5621488	0					
ANR	5621696	Identifier	contour		5621488	1					
ANR	5621697	PtrMemberAccess	self -> contour_count		5621488	1					
ANR	5621698	Identifier	self		5621488	0					
ANR	5621699	Identifier	contour_count		5621488	1					
ANR	5621700	Identifier	s		5621488	1					
ANR	5621701	ExpressionStatement	self -> pole_count -= s	970:8:40980:41001	5621488	5	True				
ANR	5621702	AssignmentExpression	self -> pole_count -= s		5621488	0		-=			
ANR	5621703	PtrMemberAccess	self -> pole_count		5621488	0					
ANR	5621704	Identifier	self		5621488	0					
ANR	5621705	Identifier	pole_count		5621488	1					
ANR	5621706	Identifier	s		5621488	1					
ANR	5621707	IfStatement	if ( * pi >= i1 )		5621488	6					
ANR	5621708	Condition	* pi >= i1	971:12:41015:41023	5621488	0	True				
ANR	5621709	RelationalExpression	* pi >= i1		5621488	0		>=			
ANR	5621710	UnaryOperationExpression	* pi		5621488	0					
ANR	5621711	UnaryOperator	*		5621488	0					
ANR	5621712	Identifier	pi		5621488	1					
ANR	5621713	Identifier	i1		5621488	1					
ANR	5621714	ExpressionStatement	* pi -= s	972:12:41038:41046	5621488	1	True				
ANR	5621715	AssignmentExpression	* pi -= s		5621488	0		-=			
ANR	5621716	UnaryOperationExpression	* pi		5621488	0					
ANR	5621717	UnaryOperator	*		5621488	0					
ANR	5621718	Identifier	pi		5621488	1					
ANR	5621719	Identifier	s		5621488	1					
ANR	5621720	ElseStatement	else		5621488	0					
ANR	5621721	IfStatement	if ( i0 <= * pi )		5621488	0					
ANR	5621722	Condition	i0 <= * pi	973:17:41065:41073	5621488	0	True				
ANR	5621723	RelationalExpression	i0 <= * pi		5621488	0		<=			
ANR	5621724	Identifier	i0		5621488	0					
ANR	5621725	UnaryOperationExpression	* pi		5621488	1					
ANR	5621726	UnaryOperator	*		5621488	0					
ANR	5621727	Identifier	pi		5621488	1					
ANR	5621728	ExpressionStatement	* pi = i0	974:12:41088:41096	5621488	1	True				
ANR	5621729	AssignmentExpression	* pi = i0		5621488	0		=			
ANR	5621730	UnaryOperationExpression	* pi		5621488	0					
ANR	5621731	UnaryOperator	*		5621488	0					
ANR	5621732	Identifier	pi		5621488	1					
ANR	5621733	Identifier	i0		5621488	1					
ANR	5621734	ReturnType	static void		5621488	1					
ANR	5621735	Identifier	t1_hinter__compact_flex		5621488	2					
ANR	5621736	ParameterList	"t1_hinter * self , int contour_beg , int contour_end , int i0 , int i1 , int * pi"		5621488	3					
ANR	5621737	Parameter	t1_hinter * self	949:36:39995:40010	5621488	0	True				
ANR	5621738	ParameterType	t1_hinter *		5621488	0					
ANR	5621739	Identifier	self		5621488	1					
ANR	5621740	Parameter	int contour_beg	949:54:40013:40027	5621488	1	True				
ANR	5621741	ParameterType	int		5621488	0					
ANR	5621742	Identifier	contour_beg		5621488	1					
ANR	5621743	Parameter	int contour_end	949:71:40030:40044	5621488	2	True				
ANR	5621744	ParameterType	int		5621488	0					
ANR	5621745	Identifier	contour_end		5621488	1					
ANR	5621746	Parameter	int i0	949:88:40047:40052	5621488	3	True				
ANR	5621747	ParameterType	int		5621488	0					
ANR	5621748	Identifier	i0		5621488	1					
ANR	5621749	Parameter	int i1	949:96:40055:40060	5621488	4	True				
ANR	5621750	ParameterType	int		5621488	0					
ANR	5621751	Identifier	i1		5621488	1					
ANR	5621752	Parameter	int * pi	949:104:40063:40069	5621488	5	True				
ANR	5621753	ParameterType	int *		5621488	0					
ANR	5621754	Identifier	pi		5621488	1					
ANR	5621755	CFGEntryNode	ENTRY		5621488		True				
ANR	5621756	CFGExitNode	EXIT		5621488		True				
ANR	5621757	Symbol	* self -> contour		5621488						
ANR	5621758	Symbol	* self -> pole		5621488						
ANR	5621759	Symbol	self -> contour_count		5621488						
ANR	5621760	Symbol	* * self		5621488						
ANR	5621761	Symbol	self -> pole_count		5621488						
ANR	5621762	Symbol	* self		5621488						
ANR	5621763	Symbol	i0		5621488						
ANR	5621764	Symbol	i1		5621488						
ANR	5621765	Symbol	j		5621488						
ANR	5621766	Symbol	self -> hint_range_count		5621488						
ANR	5621767	Symbol	self -> hint_range		5621488						
ANR	5621768	Symbol	* self -> hint_range		5621488						
ANR	5621769	Symbol	contour_end		5621488						
ANR	5621770	Symbol	self -> contour		5621488						
ANR	5621771	Symbol	s		5621488						
ANR	5621772	Symbol	* j		5621488						
ANR	5621773	Symbol	self -> hint_range [ j ] . end_pole		5621488						
ANR	5621774	Symbol	contour_beg		5621488						
ANR	5621775	Symbol	self -> hint_range [ j ] . beg_pole		5621488						
ANR	5621776	Symbol	self		5621488						
ANR	5621777	Symbol	pi		5621488						
ANR	5621778	Symbol	self -> pole		5621488						
ANR	5621779	Symbol	* pi		5621488						
ANR	5621780	Symbol	* self -> contour_count		5621488						
ANR	5621781	Function	t1_hinter__adjust_stem_hints_by_missed_flex	978:0:41107:42371							
ANR	5621782	FunctionDef	"t1_hinter__adjust_stem_hints_by_missed_flex (t1_hinter * self , t1_glyph_space_coord g0 , t1_glyph_space_coord gm , int k)"		5621781	0					
ANR	5621783	CompoundStatement		980:0:41295:42371	5621781	0					
ANR	5621784	IdentifierDeclStatement	t1_glyph_space_coord gg = g0 ;	992:4:41920:41948	5621781	0	True				
ANR	5621785	IdentifierDecl	gg = g0		5621781	0					
ANR	5621786	IdentifierDeclType	t1_glyph_space_coord		5621781	0					
ANR	5621787	Identifier	gg		5621781	1					
ANR	5621788	AssignmentExpression	gg = g0		5621781	2		=			
ANR	5621789	Identifier	g0		5621781	0					
ANR	5621790	Identifier	g0		5621781	1					
ANR	5621791	IdentifierDeclStatement	int i ;	993:4:41954:41959	5621781	1	True				
ANR	5621792	IdentifierDecl	i		5621781	0					
ANR	5621793	IdentifierDeclType	int		5621781	0					
ANR	5621794	Identifier	i		5621781	1					
ANR	5621795	ExpressionStatement	k = ! k	995:4:41966:41972	5621781	2	True				
ANR	5621796	AssignmentExpression	k = ! k		5621781	0		=			
ANR	5621797	Identifier	k		5621781	0					
ANR	5621798	UnaryOperationExpression	! k		5621781	1					
ANR	5621799	UnaryOperator	!		5621781	0					
ANR	5621800	Identifier	k		5621781	1					
ANR	5621801	IfStatement	if ( gm < g0 )		5621781	3					
ANR	5621802	Condition	gm < g0	996:8:41982:41988	5621781	0	True				
ANR	5621803	RelationalExpression	gm < g0		5621781	0		<			
ANR	5621804	Identifier	gm		5621781	0					
ANR	5621805	Identifier	g0		5621781	1					
ANR	5621806	CompoundStatement		17:17:695:695	5621781	1					
ANR	5621807	ExpressionStatement	g0 ^= gm	997:8:42001:42009	5621781	0	True				
ANR	5621808	AssignmentExpression	g0 ^= gm		5621781	0		^=			
ANR	5621809	Identifier	g0		5621781	0					
ANR	5621810	Identifier	gm		5621781	1					
ANR	5621811	ExpressionStatement	gm ^= g0	997:18:42011:42019	5621781	1	True				
ANR	5621812	AssignmentExpression	gm ^= g0		5621781	0		^=			
ANR	5621813	Identifier	gm		5621781	0					
ANR	5621814	Identifier	g0		5621781	1					
ANR	5621815	ExpressionStatement	g0 ^= gm	997:28:42021:42029	5621781	2	True				
ANR	5621816	AssignmentExpression	g0 ^= gm		5621781	0		^=			
ANR	5621817	Identifier	g0		5621781	0					
ANR	5621818	Identifier	gm		5621781	1					
ANR	5621819	ForStatement	for ( i = 0 ; i < self -> hint_count ; i ++ )		5621781	4					
ANR	5621820	ForInit	i = 0 ;	999:9:42046:42051	5621781	0	True				
ANR	5621821	AssignmentExpression	i = 0		5621781	0		=			
ANR	5621822	Identifier	i		5621781	0					
ANR	5621823	PrimaryExpression	0		5621781	1					
ANR	5621824	Condition	i < self -> hint_count	999:16:42053:42072	5621781	1	True				
ANR	5621825	RelationalExpression	i < self -> hint_count		5621781	0		<			
ANR	5621826	Identifier	i		5621781	0					
ANR	5621827	PtrMemberAccess	self -> hint_count		5621781	1					
ANR	5621828	Identifier	self		5621781	0					
ANR	5621829	Identifier	hint_count		5621781	1					
ANR	5621830	PostIncDecOperationExpression	i ++	999:38:42075:42077	5621781	2	True				
ANR	5621831	Identifier	i		5621781	0					
ANR	5621832	IncDec	++		5621781	1					
ANR	5621833	IfStatement	if ( k == ( self -> hint [ i ] . type != hstem ) )		5621781	3					
ANR	5621834	Condition	k == ( self -> hint [ i ] . type != hstem )	1000:12:42092:42125	5621781	0	True				
ANR	5621835	EqualityExpression	k == ( self -> hint [ i ] . type != hstem )		5621781	0		==			
ANR	5621836	Identifier	k		5621781	0					
ANR	5621837	EqualityExpression	self -> hint [ i ] . type != hstem		5621781	1		!=			
ANR	5621838	MemberAccess	self -> hint [ i ] . type		5621781	0					
ANR	5621839	ArrayIndexing	self -> hint [ i ]		5621781	0					
ANR	5621840	PtrMemberAccess	self -> hint		5621781	0					
ANR	5621841	Identifier	self		5621781	0					
ANR	5621842	Identifier	hint		5621781	1					
ANR	5621843	Identifier	i		5621781	1					
ANR	5621844	Identifier	type		5621781	1					
ANR	5621845	Identifier	hstem		5621781	1					
ANR	5621846	CompoundStatement		22:12:846:876	5621781	1					
ANR	5621847	IdentifierDeclStatement	t1_hint * hint = & self -> hint [ i ] ;	1001:12:42142:42172	5621781	0	True				
ANR	5621848	IdentifierDecl	* hint = & self -> hint [ i ]		5621781	0					
ANR	5621849	IdentifierDeclType	t1_hint *		5621781	0					
ANR	5621850	Identifier	hint		5621781	1					
ANR	5621851	AssignmentExpression	* hint = & self -> hint [ i ]		5621781	2		=			
ANR	5621852	Identifier	hint		5621781	0					
ANR	5621853	UnaryOperationExpression	& self -> hint [ i ]		5621781	1					
ANR	5621854	UnaryOperator	&		5621781	0					
ANR	5621855	ArrayIndexing	self -> hint [ i ]		5621781	1					
ANR	5621856	PtrMemberAccess	self -> hint		5621781	0					
ANR	5621857	Identifier	self		5621781	0					
ANR	5621858	Identifier	hint		5621781	1					
ANR	5621859	Identifier	i		5621781	1					
ANR	5621860	IfStatement	if ( g0 <= hint -> g0 && hint -> g0 <= gm )		5621781	1					
ANR	5621861	Condition	g0 <= hint -> g0 && hint -> g0 <= gm	1003:16:42191:42222	5621781	0	True				
ANR	5621862	AndExpression	g0 <= hint -> g0 && hint -> g0 <= gm		5621781	0		&&			
ANR	5621863	RelationalExpression	g0 <= hint -> g0		5621781	0		<=			
ANR	5621864	Identifier	g0		5621781	0					
ANR	5621865	PtrMemberAccess	hint -> g0		5621781	1					
ANR	5621866	Identifier	hint		5621781	0					
ANR	5621867	Identifier	g0		5621781	1					
ANR	5621868	RelationalExpression	hint -> g0 <= gm		5621781	1		<=			
ANR	5621869	PtrMemberAccess	hint -> g0		5621781	0					
ANR	5621870	Identifier	hint		5621781	0					
ANR	5621871	Identifier	g0		5621781	1					
ANR	5621872	Identifier	gm		5621781	1					
ANR	5621873	ExpressionStatement	hint -> g0 = hint -> ag0 = gg	1004:16:42241:42266	5621781	1	True				
ANR	5621874	AssignmentExpression	hint -> g0 = hint -> ag0 = gg		5621781	0		=			
ANR	5621875	PtrMemberAccess	hint -> g0		5621781	0					
ANR	5621876	Identifier	hint		5621781	0					
ANR	5621877	Identifier	g0		5621781	1					
ANR	5621878	AssignmentExpression	hint -> ag0 = gg		5621781	1		=			
ANR	5621879	PtrMemberAccess	hint -> ag0		5621781	0					
ANR	5621880	Identifier	hint		5621781	0					
ANR	5621881	Identifier	ag0		5621781	1					
ANR	5621882	Identifier	gg		5621781	1					
ANR	5621883	IfStatement	if ( g0 <= hint -> g1 && hint -> g1 <= gm )		5621781	2					
ANR	5621884	Condition	g0 <= hint -> g1 && hint -> g1 <= gm	1005:16:42284:42315	5621781	0	True				
ANR	5621885	AndExpression	g0 <= hint -> g1 && hint -> g1 <= gm		5621781	0		&&			
ANR	5621886	RelationalExpression	g0 <= hint -> g1		5621781	0		<=			
ANR	5621887	Identifier	g0		5621781	0					
ANR	5621888	PtrMemberAccess	hint -> g1		5621781	1					
ANR	5621889	Identifier	hint		5621781	0					
ANR	5621890	Identifier	g1		5621781	1					
ANR	5621891	RelationalExpression	hint -> g1 <= gm		5621781	1		<=			
ANR	5621892	PtrMemberAccess	hint -> g1		5621781	0					
ANR	5621893	Identifier	hint		5621781	0					
ANR	5621894	Identifier	g1		5621781	1					
ANR	5621895	Identifier	gm		5621781	1					
ANR	5621896	ExpressionStatement	hint -> g1 = hint -> ag1 = gg	1006:16:42334:42359	5621781	1	True				
ANR	5621897	AssignmentExpression	hint -> g1 = hint -> ag1 = gg		5621781	0		=			
ANR	5621898	PtrMemberAccess	hint -> g1		5621781	0					
ANR	5621899	Identifier	hint		5621781	0					
ANR	5621900	Identifier	g1		5621781	1					
ANR	5621901	AssignmentExpression	hint -> ag1 = gg		5621781	1		=			
ANR	5621902	PtrMemberAccess	hint -> ag1		5621781	0					
ANR	5621903	Identifier	hint		5621781	0					
ANR	5621904	Identifier	ag1		5621781	1					
ANR	5621905	Identifier	gg		5621781	1					
ANR	5621906	ReturnType	static void		5621781	1					
ANR	5621907	Identifier	t1_hinter__adjust_stem_hints_by_missed_flex		5621781	2					
ANR	5621908	ParameterList	"t1_hinter * self , t1_glyph_space_coord g0 , t1_glyph_space_coord gm , int k"		5621781	3					
ANR	5621909	Parameter	t1_hinter * self	978:56:41163:41178	5621781	0	True				
ANR	5621910	ParameterType	t1_hinter *		5621781	0					
ANR	5621911	Identifier	self		5621781	1					
ANR	5621912	Parameter	t1_glyph_space_coord g0	978:74:41181:41203	5621781	1	True				
ANR	5621913	ParameterType	t1_glyph_space_coord		5621781	0					
ANR	5621914	Identifier	g0		5621781	1					
ANR	5621915	Parameter	t1_glyph_space_coord gm	979:57:41263:41285	5621781	2	True				
ANR	5621916	ParameterType	t1_glyph_space_coord		5621781	0					
ANR	5621917	Identifier	gm		5621781	1					
ANR	5621918	Parameter	int k	979:82:41288:41292	5621781	3	True				
ANR	5621919	ParameterType	int		5621781	0					
ANR	5621920	Identifier	k		5621781	1					
ANR	5621921	CFGEntryNode	ENTRY		5621781		True				
ANR	5621922	CFGExitNode	EXIT		5621781		True				
ANR	5621923	Symbol	gg		5621781						
ANR	5621924	Symbol	* hint		5621781						
ANR	5621925	Symbol	self -> hint [ i ] . type		5621781						
ANR	5621926	Symbol	self -> hint		5621781						
ANR	5621927	Symbol	* * self		5621781						
ANR	5621928	Symbol	gm		5621781						
ANR	5621929	Symbol	* self		5621781						
ANR	5621930	Symbol	g0		5621781						
ANR	5621931	Symbol	i		5621781						
ANR	5621932	Symbol	k		5621781						
ANR	5621933	Symbol	hint -> g1		5621781						
ANR	5621934	Symbol	* self -> hint		5621781						
ANR	5621935	Symbol	self -> hint_count		5621781						
ANR	5621936	Symbol	hint -> g0		5621781						
ANR	5621937	Symbol	* i		5621781						
ANR	5621938	Symbol	hint -> ag1		5621781						
ANR	5621939	Symbol	hint		5621781						
ANR	5621940	Symbol	hint -> ag0		5621781						
ANR	5621941	Symbol	self		5621781						
ANR	5621942	Symbol	hstem		5621781						
ANR	5621943	Function	t1_hinter__fix_missed_flex	1010:0:42374:45551							
ANR	5621944	FunctionDef	t1_hinter__fix_missed_flex (t1_hinter * self)		5621943	0					
ANR	5621945	CompoundStatement		1011:0:42431:45551	5621943	0					
ANR	5621946	IdentifierDeclStatement	"int contour_beg , contour_end ;"	1012:4:42437:42465	5621943	0	True				
ANR	5621947	IdentifierDecl	contour_beg		5621943	0					
ANR	5621948	IdentifierDeclType	int		5621943	0					
ANR	5621949	Identifier	contour_beg		5621943	1					
ANR	5621950	IdentifierDecl	contour_end		5621943	1					
ANR	5621951	IdentifierDeclType	int		5621943	0					
ANR	5621952	Identifier	contour_end		5621943	1					
ANR	5621953	IdentifierDeclStatement	"int i , j , k , pj , n , j0 , j1 ;"	1013:4:42471:42497	5621943	1	True				
ANR	5621954	IdentifierDecl	i		5621943	0					
ANR	5621955	IdentifierDeclType	int		5621943	0					
ANR	5621956	Identifier	i		5621943	1					
ANR	5621957	IdentifierDecl	j		5621943	1					
ANR	5621958	IdentifierDeclType	int		5621943	0					
ANR	5621959	Identifier	j		5621943	1					
ANR	5621960	IdentifierDecl	k		5621943	2					
ANR	5621961	IdentifierDeclType	int		5621943	0					
ANR	5621962	Identifier	k		5621943	1					
ANR	5621963	IdentifierDecl	pj		5621943	3					
ANR	5621964	IdentifierDeclType	int		5621943	0					
ANR	5621965	Identifier	pj		5621943	1					
ANR	5621966	IdentifierDecl	n		5621943	4					
ANR	5621967	IdentifierDeclType	int		5621943	0					
ANR	5621968	Identifier	n		5621943	1					
ANR	5621969	IdentifierDecl	j0		5621943	5					
ANR	5621970	IdentifierDeclType	int		5621943	0					
ANR	5621971	Identifier	j0		5621943	1					
ANR	5621972	IdentifierDecl	j1		5621943	6					
ANR	5621973	IdentifierDeclType	int		5621943	0					
ANR	5621974	Identifier	j1		5621943	1					
ANR	5621975	IfStatement	if ( self -> contour_count == 0 )		5621943	2					
ANR	5621976	Condition	self -> contour_count == 0	1015:8:42508:42531	5621943	0	True				
ANR	5621977	EqualityExpression	self -> contour_count == 0		5621943	0		==			
ANR	5621978	PtrMemberAccess	self -> contour_count		5621943	0					
ANR	5621979	Identifier	self		5621943	0					
ANR	5621980	Identifier	contour_count		5621943	1					
ANR	5621981	PrimaryExpression	0		5621943	1					
ANR	5621982	ReturnStatement	return ;	1016:8:42542:42548	5621943	1	True				
ANR	5621983	ExpressionStatement	contour_beg = self -> contour [ self -> contour_count - 1 ]	1017:4:42554:42605	5621943	3	True				
ANR	5621984	AssignmentExpression	contour_beg = self -> contour [ self -> contour_count - 1 ]		5621943	0		=			
ANR	5621985	Identifier	contour_beg		5621943	0					
ANR	5621986	ArrayIndexing	self -> contour [ self -> contour_count - 1 ]		5621943	1					
ANR	5621987	PtrMemberAccess	self -> contour		5621943	0					
ANR	5621988	Identifier	self		5621943	0					
ANR	5621989	Identifier	contour		5621943	1					
ANR	5621990	AdditiveExpression	self -> contour_count - 1		5621943	1		-			
ANR	5621991	PtrMemberAccess	self -> contour_count		5621943	0					
ANR	5621992	Identifier	self		5621943	0					
ANR	5621993	Identifier	contour_count		5621943	1					
ANR	5621994	PrimaryExpression	1		5621943	1					
ANR	5621995	ExpressionStatement	contour_end = self -> pole_count - 1	1018:4:42611:42645	5621943	4	True				
ANR	5621996	AssignmentExpression	contour_end = self -> pole_count - 1		5621943	0		=			
ANR	5621997	Identifier	contour_end		5621943	0					
ANR	5621998	AdditiveExpression	self -> pole_count - 1		5621943	1		-			
ANR	5621999	PtrMemberAccess	self -> pole_count		5621943	0					
ANR	5622000	Identifier	self		5621943	0					
ANR	5622001	Identifier	pole_count		5621943	1					
ANR	5622002	PrimaryExpression	1		5621943	1					
ANR	5622003	IfStatement	if ( contour_beg + 8 >= contour_end )		5621943	5					
ANR	5622004	Condition	contour_beg + 8 >= contour_end	1019:8:42693:42722	5621943	0	True				
ANR	5622005	RelationalExpression	contour_beg + 8 >= contour_end		5621943	0		>=			
ANR	5622006	AdditiveExpression	contour_beg + 8		5621943	0		+			
ANR	5622007	Identifier	contour_beg		5621943	0					
ANR	5622008	PrimaryExpression	8		5621943	1					
ANR	5622009	Identifier	contour_end		5621943	1					
ANR	5622010	ReturnStatement	return ;	1020:8:42733:42739	5621943	1	True				
ANR	5622011	ForStatement	for ( k = 0 ; k < 2 ; k ++ )		5621943	6					
ANR	5622012	ForInit	k = 0 ;	1021:9:42750:42755	5621943	0	True				
ANR	5622013	AssignmentExpression	k = 0		5621943	0		=			
ANR	5622014	Identifier	k		5621943	0					
ANR	5622015	PrimaryExpression	0		5621943	1					
ANR	5622016	Condition	k < 2	1021:16:42757:42761	5621943	1	True				
ANR	5622017	RelationalExpression	k < 2		5621943	0		<			
ANR	5622018	Identifier	k		5621943	0					
ANR	5622019	PrimaryExpression	2		5621943	1					
ANR	5622020	PostIncDecOperationExpression	k ++	1021:23:42764:42766	5621943	2	True				
ANR	5622021	Identifier	k		5621943	0					
ANR	5622022	IncDec	++		5621943	1					
ANR	5622023	CompoundStatement		20:8:872:892	5621943	3					
ANR	5622024	IdentifierDeclStatement	t1_glyph_space_coord * p_gc = ( ! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy ) ;	1022:8:42779:42852	5621943	0	True				
ANR	5622025	IdentifierDecl	* p_gc = ( ! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy )		5621943	0					
ANR	5622026	IdentifierDeclType	t1_glyph_space_coord *		5621943	0					
ANR	5622027	Identifier	p_gc		5621943	1					
ANR	5622028	AssignmentExpression	* p_gc = ( ! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy )		5621943	2		=			
ANR	5622029	Identifier	p_gc		5621943	0					
ANR	5622030	ConditionalExpression	! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy		5621943	1					
ANR	5622031	Condition	! k		5621943	0					
ANR	5622032	UnaryOperationExpression	! k		5621943	0					
ANR	5622033	UnaryOperator	!		5621943	0					
ANR	5622034	Identifier	k		5621943	1					
ANR	5622035	UnaryOperationExpression	& self -> pole [ 0 ] . gx		5621943	1					
ANR	5622036	UnaryOperator	&		5621943	0					
ANR	5622037	MemberAccess	self -> pole [ 0 ] . gx		5621943	1					
ANR	5622038	ArrayIndexing	self -> pole [ 0 ]		5621943	0					
ANR	5622039	PtrMemberAccess	self -> pole		5621943	0					
ANR	5622040	Identifier	self		5621943	0					
ANR	5622041	Identifier	pole		5621943	1					
ANR	5622042	PrimaryExpression	0		5621943	1					
ANR	5622043	Identifier	gx		5621943	1					
ANR	5622044	UnaryOperationExpression	& self -> pole [ 0 ] . gy		5621943	2					
ANR	5622045	UnaryOperator	&		5621943	0					
ANR	5622046	MemberAccess	self -> pole [ 0 ] . gy		5621943	1					
ANR	5622047	ArrayIndexing	self -> pole [ 0 ]		5621943	0					
ANR	5622048	PtrMemberAccess	self -> pole		5621943	0					
ANR	5622049	Identifier	self		5621943	0					
ANR	5622050	Identifier	pole		5621943	1					
ANR	5622051	PrimaryExpression	0		5621943	1					
ANR	5622052	Identifier	gy		5621943	1					
ANR	5622053	IdentifierDeclStatement	t1_glyph_space_coord * p_gd = ( ! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx ) ;	1023:8:42862:42935	5621943	1	True				
ANR	5622054	IdentifierDecl	* p_gd = ( ! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx )		5621943	0					
ANR	5622055	IdentifierDeclType	t1_glyph_space_coord *		5621943	0					
ANR	5622056	Identifier	p_gd		5621943	1					
ANR	5622057	AssignmentExpression	* p_gd = ( ! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx )		5621943	2		=			
ANR	5622058	Identifier	p_gd		5621943	0					
ANR	5622059	ConditionalExpression	! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx		5621943	1					
ANR	5622060	Condition	! k		5621943	0					
ANR	5622061	UnaryOperationExpression	! k		5621943	0					
ANR	5622062	UnaryOperator	!		5621943	0					
ANR	5622063	Identifier	k		5621943	1					
ANR	5622064	UnaryOperationExpression	& self -> pole [ 0 ] . gy		5621943	1					
ANR	5622065	UnaryOperator	&		5621943	0					
ANR	5622066	MemberAccess	self -> pole [ 0 ] . gy		5621943	1					
ANR	5622067	ArrayIndexing	self -> pole [ 0 ]		5621943	0					
ANR	5622068	PtrMemberAccess	self -> pole		5621943	0					
ANR	5622069	Identifier	self		5621943	0					
ANR	5622070	Identifier	pole		5621943	1					
ANR	5622071	PrimaryExpression	0		5621943	1					
ANR	5622072	Identifier	gy		5621943	1					
ANR	5622073	UnaryOperationExpression	& self -> pole [ 0 ] . gx		5621943	2					
ANR	5622074	UnaryOperator	&		5621943	0					
ANR	5622075	MemberAccess	self -> pole [ 0 ] . gx		5621943	1					
ANR	5622076	ArrayIndexing	self -> pole [ 0 ]		5621943	0					
ANR	5622077	PtrMemberAccess	self -> pole		5621943	0					
ANR	5622078	Identifier	self		5621943	0					
ANR	5622079	Identifier	pole		5621943	1					
ANR	5622080	PrimaryExpression	0		5621943	1					
ANR	5622081	Identifier	gx		5621943	1					
ANR	5622082	IdentifierDeclStatement	int offset_gc = ( char * ) p_gc - ( char * ) & self -> pole [ 0 ] ;	1024:8:42945:42998	5621943	2	True				
ANR	5622083	IdentifierDecl	offset_gc = ( char * ) p_gc - ( char * ) & self -> pole [ 0 ]		5621943	0					
ANR	5622084	IdentifierDeclType	int		5621943	0					
ANR	5622085	Identifier	offset_gc		5621943	1					
ANR	5622086	AssignmentExpression	offset_gc = ( char * ) p_gc - ( char * ) & self -> pole [ 0 ]		5621943	2		=			
ANR	5622087	Identifier	offset_gc		5621943	0					
ANR	5622088	AdditiveExpression	( char * ) p_gc - ( char * ) & self -> pole [ 0 ]		5621943	1		-			
ANR	5622089	CastExpression	( char * ) p_gc		5621943	0					
ANR	5622090	CastTarget	char *		5621943	0					
ANR	5622091	Identifier	p_gc		5621943	1					
ANR	5622092	CastExpression	( char * ) & self -> pole [ 0 ]		5621943	1					
ANR	5622093	CastTarget	char *		5621943	0					
ANR	5622094	UnaryOperationExpression	& self -> pole [ 0 ]		5621943	1					
ANR	5622095	UnaryOperator	&		5621943	0					
ANR	5622096	ArrayIndexing	self -> pole [ 0 ]		5621943	1					
ANR	5622097	PtrMemberAccess	self -> pole		5621943	0					
ANR	5622098	Identifier	self		5621943	0					
ANR	5622099	Identifier	pole		5621943	1					
ANR	5622100	PrimaryExpression	0		5621943	1					
ANR	5622101	IdentifierDeclStatement	int offset_gd = ( char * ) p_gd - ( char * ) & self -> pole [ 0 ] ;	1025:8:43008:43061	5621943	3	True				
ANR	5622102	IdentifierDecl	offset_gd = ( char * ) p_gd - ( char * ) & self -> pole [ 0 ]		5621943	0					
ANR	5622103	IdentifierDeclType	int		5621943	0					
ANR	5622104	Identifier	offset_gd		5621943	1					
ANR	5622105	AssignmentExpression	offset_gd = ( char * ) p_gd - ( char * ) & self -> pole [ 0 ]		5621943	2		=			
ANR	5622106	Identifier	offset_gd		5621943	0					
ANR	5622107	AdditiveExpression	( char * ) p_gd - ( char * ) & self -> pole [ 0 ]		5621943	1		-			
ANR	5622108	CastExpression	( char * ) p_gd		5621943	0					
ANR	5622109	CastTarget	char *		5621943	0					
ANR	5622110	Identifier	p_gd		5621943	1					
ANR	5622111	CastExpression	( char * ) & self -> pole [ 0 ]		5621943	1					
ANR	5622112	CastTarget	char *		5621943	0					
ANR	5622113	UnaryOperationExpression	& self -> pole [ 0 ]		5621943	1					
ANR	5622114	UnaryOperator	&		5621943	0					
ANR	5622115	ArrayIndexing	self -> pole [ 0 ]		5621943	1					
ANR	5622116	PtrMemberAccess	self -> pole		5621943	0					
ANR	5622117	Identifier	self		5621943	0					
ANR	5622118	Identifier	pole		5621943	1					
ANR	5622119	PrimaryExpression	0		5621943	1					
ANR	5622120	IdentifierDeclStatement	t1_glyph_space_coord pixel_g = ( ! k ? self -> pixel_gw : self -> pixel_gh ) ;	1026:8:43071:43140	5621943	4	True				
ANR	5622121	IdentifierDecl	pixel_g = ( ! k ? self -> pixel_gw : self -> pixel_gh )		5621943	0					
ANR	5622122	IdentifierDeclType	t1_glyph_space_coord		5621943	0					
ANR	5622123	Identifier	pixel_g		5621943	1					
ANR	5622124	AssignmentExpression	pixel_g = ( ! k ? self -> pixel_gw : self -> pixel_gh )		5621943	2		=			
ANR	5622125	Identifier	pixel_g		5621943	0					
ANR	5622126	ConditionalExpression	! k ? self -> pixel_gw : self -> pixel_gh		5621943	1					
ANR	5622127	Condition	! k		5621943	0					
ANR	5622128	UnaryOperationExpression	! k		5621943	0					
ANR	5622129	UnaryOperator	!		5621943	0					
ANR	5622130	Identifier	k		5621943	1					
ANR	5622131	PtrMemberAccess	self -> pixel_gw		5621943	1					
ANR	5622132	Identifier	self		5621943	0					
ANR	5622133	Identifier	pixel_gw		5621943	1					
ANR	5622134	PtrMemberAccess	self -> pixel_gh		5621943	2					
ANR	5622135	Identifier	self		5621943	0					
ANR	5622136	Identifier	pixel_gh		5621943	1					
ANR	5622137	IdentifierDeclStatement	t1_glyph_space_coord threshold = pixel_g * 5 / 10 ;	1027:8:43150:43199	5621943	5	True				
ANR	5622138	IdentifierDecl	threshold = pixel_g * 5 / 10		5621943	0					
ANR	5622139	IdentifierDeclType	t1_glyph_space_coord		5621943	0					
ANR	5622140	Identifier	threshold		5621943	1					
ANR	5622141	AssignmentExpression	threshold = pixel_g * 5 / 10		5621943	2		=			
ANR	5622142	Identifier	threshold		5621943	0					
ANR	5622143	MultiplicativeExpression	pixel_g * 5 / 10		5621943	1		*			
ANR	5622144	Identifier	pixel_g		5621943	0					
ANR	5622145	MultiplicativeExpression	5 / 10		5621943	1		/			
ANR	5622146	PrimaryExpression	5		5621943	0					
ANR	5622147	PrimaryExpression	10		5621943	1					
ANR	5622148	IdentifierDeclStatement	"t1_glyph_space_coord gc0 , gc1 , gc , gcj , gd = 0 , ge , gm ;"	1028:8:43209:43263	5621943	6	True				
ANR	5622149	IdentifierDecl	gc0		5621943	0					
ANR	5622150	IdentifierDeclType	t1_glyph_space_coord		5621943	0					
ANR	5622151	Identifier	gc0		5621943	1					
ANR	5622152	IdentifierDecl	gc1		5621943	1					
ANR	5622153	IdentifierDeclType	t1_glyph_space_coord		5621943	0					
ANR	5622154	Identifier	gc1		5621943	1					
ANR	5622155	IdentifierDecl	gc		5621943	2					
ANR	5622156	IdentifierDeclType	t1_glyph_space_coord		5621943	0					
ANR	5622157	Identifier	gc		5621943	1					
ANR	5622158	IdentifierDecl	gcj		5621943	3					
ANR	5622159	IdentifierDeclType	t1_glyph_space_coord		5621943	0					
ANR	5622160	Identifier	gcj		5621943	1					
ANR	5622161	IdentifierDecl	gd = 0		5621943	4					
ANR	5622162	IdentifierDeclType	t1_glyph_space_coord		5621943	0					
ANR	5622163	Identifier	gd		5621943	1					
ANR	5622164	AssignmentExpression	gd = 0		5621943	2		=			
ANR	5622165	Identifier	gd		5621943	0					
ANR	5622166	PrimaryExpression	0		5621943	1					
ANR	5622167	IdentifierDecl	ge		5621943	5					
ANR	5622168	IdentifierDeclType	t1_glyph_space_coord		5621943	0					
ANR	5622169	Identifier	ge		5621943	1					
ANR	5622170	IdentifierDecl	gm		5621943	6					
ANR	5622171	IdentifierDeclType	t1_glyph_space_coord		5621943	0					
ANR	5622172	Identifier	gm		5621943	1					
ANR	5622173	IdentifierDeclStatement	"int dir = 0 , prev_dir ;"	1029:8:43273:43294	5621943	7	True				
ANR	5622174	IdentifierDecl	dir = 0		5621943	0					
ANR	5622175	IdentifierDeclType	int		5621943	0					
ANR	5622176	Identifier	dir		5621943	1					
ANR	5622177	AssignmentExpression	dir = 0		5621943	2		=			
ANR	5622178	Identifier	dir		5621943	0					
ANR	5622179	PrimaryExpression	0		5621943	1					
ANR	5622180	IdentifierDecl	prev_dir		5621943	1					
ANR	5622181	IdentifierDeclType	int		5621943	0					
ANR	5622182	Identifier	prev_dir		5621943	1					
ANR	5622183	IdentifierDeclStatement	bool wrapped = false ;	1030:8:43304:43324	5621943	8	True				
ANR	5622184	IdentifierDecl	wrapped = false		5621943	0					
ANR	5622185	IdentifierDeclType	bool		5621943	0					
ANR	5622186	Identifier	wrapped		5621943	1					
ANR	5622187	AssignmentExpression	wrapped = false		5621943	2		=			
ANR	5622188	Identifier	false		5621943	0					
ANR	5622189	Identifier	false		5621943	1					
ANR	5622190	ExpressionStatement	"gc = * member_prt ( t1_glyph_space_coord , & self -> pole [ contour_beg ] , offset_gc )"	1032:8:43335:43410	5621943	9	True				
ANR	5622191	AssignmentExpression	"gc = * member_prt ( t1_glyph_space_coord , & self -> pole [ contour_beg ] , offset_gc )"		5621943	0		=			
ANR	5622192	Identifier	gc		5621943	0					
ANR	5622193	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ contour_beg ] , offset_gc )"		5621943	1					
ANR	5622194	UnaryOperator	*		5621943	0					
ANR	5622195	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ contour_beg ] , offset_gc )"		5621943	1					
ANR	5622196	Callee	member_prt		5621943	0					
ANR	5622197	Identifier	member_prt		5621943	0					
ANR	5622198	ArgumentList	t1_glyph_space_coord		5621943	1					
ANR	5622199	Argument	t1_glyph_space_coord		5621943	0					
ANR	5622200	Identifier	t1_glyph_space_coord		5621943	0					
ANR	5622201	Argument	& self -> pole [ contour_beg ]		5621943	1					
ANR	5622202	UnaryOperationExpression	& self -> pole [ contour_beg ]		5621943	0					
ANR	5622203	UnaryOperator	&		5621943	0					
ANR	5622204	ArrayIndexing	self -> pole [ contour_beg ]		5621943	1					
ANR	5622205	PtrMemberAccess	self -> pole		5621943	0					
ANR	5622206	Identifier	self		5621943	0					
ANR	5622207	Identifier	pole		5621943	1					
ANR	5622208	Identifier	contour_beg		5621943	1					
ANR	5622209	Argument	offset_gc		5621943	2					
ANR	5622210	Identifier	offset_gc		5621943	0					
ANR	5622211	ExpressionStatement	gc0 = gc - threshold	1033:8:43420:43440	5621943	10	True				
ANR	5622212	AssignmentExpression	gc0 = gc - threshold		5621943	0		=			
ANR	5622213	Identifier	gc0		5621943	0					
ANR	5622214	AdditiveExpression	gc - threshold		5621943	1		-			
ANR	5622215	Identifier	gc		5621943	0					
ANR	5622216	Identifier	threshold		5621943	1					
ANR	5622217	ExpressionStatement	gc1 = gc + threshold	1034:8:43450:43470	5621943	11	True				
ANR	5622218	AssignmentExpression	gc1 = gc + threshold		5621943	0		=			
ANR	5622219	Identifier	gc1		5621943	0					
ANR	5622220	AdditiveExpression	gc + threshold		5621943	1		+			
ANR	5622221	Identifier	gc		5621943	0					
ANR	5622222	Identifier	threshold		5621943	1					
ANR	5622223	ForStatement	for ( i = contour_end ; i > contour_beg ; i -- )		5621943	12					
ANR	5622224	ForInit	i = contour_end ;	1036:13:43536:43551	5621943	0	True				
ANR	5622225	AssignmentExpression	i = contour_end		5621943	0		=			
ANR	5622226	Identifier	i		5621943	0					
ANR	5622227	Identifier	contour_end		5621943	1					
ANR	5622228	Condition	i > contour_beg	1036:30:43553:43567	5621943	1	True				
ANR	5622229	RelationalExpression	i > contour_beg		5621943	0		>			
ANR	5622230	Identifier	i		5621943	0					
ANR	5622231	Identifier	contour_beg		5621943	1					
ANR	5622232	PostIncDecOperationExpression	i --	1036:47:43570:43572	5621943	2	True				
ANR	5622233	Identifier	i		5621943	0					
ANR	5622234	IncDec	--		5621943	1					
ANR	5622235	CompoundStatement		26:52:1143:1143	5621943	3					
ANR	5622236	ExpressionStatement	"gcj = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"	1037:12:43589:43655	5621943	0	True				
ANR	5622237	AssignmentExpression	"gcj = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"		5621943	0		=			
ANR	5622238	Identifier	gcj		5621943	0					
ANR	5622239	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"		5621943	1					
ANR	5622240	UnaryOperator	*		5621943	0					
ANR	5622241	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"		5621943	1					
ANR	5622242	Callee	member_prt		5621943	0					
ANR	5622243	Identifier	member_prt		5621943	0					
ANR	5622244	ArgumentList	t1_glyph_space_coord		5621943	1					
ANR	5622245	Argument	t1_glyph_space_coord		5621943	0					
ANR	5622246	Identifier	t1_glyph_space_coord		5621943	0					
ANR	5622247	Argument	& self -> pole [ i ]		5621943	1					
ANR	5622248	UnaryOperationExpression	& self -> pole [ i ]		5621943	0					
ANR	5622249	UnaryOperator	&		5621943	0					
ANR	5622250	ArrayIndexing	self -> pole [ i ]		5621943	1					
ANR	5622251	PtrMemberAccess	self -> pole		5621943	0					
ANR	5622252	Identifier	self		5621943	0					
ANR	5622253	Identifier	pole		5621943	1					
ANR	5622254	Identifier	i		5621943	1					
ANR	5622255	Argument	offset_gc		5621943	2					
ANR	5622256	Identifier	offset_gc		5621943	0					
ANR	5622257	IfStatement	if ( self -> pole [ i ] . type == offcurve )		5621943	1					
ANR	5622258	Condition	self -> pole [ i ] . type == offcurve	1038:16:43673:43702	5621943	0	True				
ANR	5622259	EqualityExpression	self -> pole [ i ] . type == offcurve		5621943	0		==			
ANR	5622260	MemberAccess	self -> pole [ i ] . type		5621943	0					
ANR	5622261	ArrayIndexing	self -> pole [ i ]		5621943	0					
ANR	5622262	PtrMemberAccess	self -> pole		5621943	0					
ANR	5622263	Identifier	self		5621943	0					
ANR	5622264	Identifier	pole		5621943	1					
ANR	5622265	Identifier	i		5621943	1					
ANR	5622266	Identifier	type		5621943	1					
ANR	5622267	Identifier	offcurve		5621943	1					
ANR	5622268	ContinueStatement	continue ;	1039:16:43721:43729	5621943	1	True				
ANR	5622269	IfStatement	if ( gcj < gc0 || gcj > gc1 )		5621943	2					
ANR	5622270	Condition	gcj < gc0 || gcj > gc1	1040:16:43747:43768	5621943	0	True				
ANR	5622271	OrExpression	gcj < gc0 || gcj > gc1		5621943	0		||			
ANR	5622272	RelationalExpression	gcj < gc0		5621943	0		<			
ANR	5622273	Identifier	gcj		5621943	0					
ANR	5622274	Identifier	gc0		5621943	1					
ANR	5622275	RelationalExpression	gcj > gc1		5621943	1		>			
ANR	5622276	Identifier	gcj		5621943	0					
ANR	5622277	Identifier	gc1		5621943	1					
ANR	5622278	BreakStatement	break ;	1041:16:43787:43792	5621943	1	True				
ANR	5622279	IfStatement	if ( i == contour_end )		5621943	13					
ANR	5622280	Condition	i == contour_end	1043:12:43816:43831	5621943	0	True				
ANR	5622281	EqualityExpression	i == contour_end		5621943	0		==			
ANR	5622282	Identifier	i		5621943	0					
ANR	5622283	Identifier	contour_end		5621943	1					
ANR	5622284	CompoundStatement		33:30:1402:1402	5621943	1					
ANR	5622285	ExpressionStatement	i = contour_beg	1044:12:43848:43863	5621943	0	True				
ANR	5622286	AssignmentExpression	i = contour_beg		5621943	0		=			
ANR	5622287	Identifier	i		5621943	0					
ANR	5622288	Identifier	contour_beg		5621943	1					
ANR	5622289	ExpressionStatement	wrapped = true	1045:12:43877:43891	5621943	1	True				
ANR	5622290	AssignmentExpression	wrapped = true		5621943	0		=			
ANR	5622291	Identifier	wrapped		5621943	0					
ANR	5622292	Identifier	true		5621943	1					
ANR	5622293	ElseStatement	else		5621943	0					
ANR	5622294	ExpressionStatement	i ++	1047:12:43920:43923	5621943	0	True				
ANR	5622295	PostIncDecOperationExpression	i ++		5621943	0					
ANR	5622296	Identifier	i		5621943	0					
ANR	5622297	IncDec	++		5621943	1					
ANR	5622298	ForStatement	for ( ; ; i ++ )		5621943	14					
ANR	5622299	PostIncDecOperationExpression	i ++	1049:15:43986:43988	5621943	0	True				
ANR	5622300	Identifier	i		5621943	0					
ANR	5622301	IncDec	++		5621943	1					
ANR	5622302	CompoundStatement		39:20:1559:1559	5621943	1					
ANR	5622303	ExpressionStatement	prev_dir = 0	1050:12:44005:44017	5621943	0	True				
ANR	5622304	AssignmentExpression	prev_dir = 0		5621943	0		=			
ANR	5622305	Identifier	prev_dir		5621943	0					
ANR	5622306	PrimaryExpression	0		5621943	1					
ANR	5622307	IfStatement	if ( i == contour_end )		5621943	1					
ANR	5622308	Condition	i == contour_end	1051:16:44035:44050	5621943	0	True				
ANR	5622309	EqualityExpression	i == contour_end		5621943	0		==			
ANR	5622310	Identifier	i		5621943	0					
ANR	5622311	Identifier	contour_end		5621943	1					
ANR	5622312	CompoundStatement		41:34:1621:1621	5621943	1					
ANR	5622313	IfStatement	if ( wrapped )		5621943	0					
ANR	5622314	Condition	wrapped	1052:20:44075:44081	5621943	0	True				
ANR	5622315	Identifier	wrapped		5621943	0					
ANR	5622316	BreakStatement	break ;	1053:20:44104:44109	5621943	1	True				
ANR	5622317	ExpressionStatement	wrapped = true	1054:16:44127:44141	5621943	1	True				
ANR	5622318	AssignmentExpression	wrapped = true		5621943	0		=			
ANR	5622319	Identifier	wrapped		5621943	0					
ANR	5622320	Identifier	true		5621943	1					
ANR	5622321	ExpressionStatement	i = contour_beg	1055:16:44159:44174	5621943	2	True				
ANR	5622322	AssignmentExpression	i = contour_beg		5621943	0		=			
ANR	5622323	Identifier	i		5621943	0					
ANR	5622324	Identifier	contour_beg		5621943	1					
ANR	5622325	ExpressionStatement	"gc = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"	1057:12:44202:44267	5621943	2	True				
ANR	5622326	AssignmentExpression	"gc = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"		5621943	0		=			
ANR	5622327	Identifier	gc		5621943	0					
ANR	5622328	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"		5621943	1					
ANR	5622329	UnaryOperator	*		5621943	0					
ANR	5622330	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"		5621943	1					
ANR	5622331	Callee	member_prt		5621943	0					
ANR	5622332	Identifier	member_prt		5621943	0					
ANR	5622333	ArgumentList	t1_glyph_space_coord		5621943	1					
ANR	5622334	Argument	t1_glyph_space_coord		5621943	0					
ANR	5622335	Identifier	t1_glyph_space_coord		5621943	0					
ANR	5622336	Argument	& self -> pole [ i ]		5621943	1					
ANR	5622337	UnaryOperationExpression	& self -> pole [ i ]		5621943	0					
ANR	5622338	UnaryOperator	&		5621943	0					
ANR	5622339	ArrayIndexing	self -> pole [ i ]		5621943	1					
ANR	5622340	PtrMemberAccess	self -> pole		5621943	0					
ANR	5622341	Identifier	self		5621943	0					
ANR	5622342	Identifier	pole		5621943	1					
ANR	5622343	Identifier	i		5621943	1					
ANR	5622344	Argument	offset_gc		5621943	2					
ANR	5622345	Identifier	offset_gc		5621943	0					
ANR	5622346	ExpressionStatement	"ge = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"	1058:12:44281:44346	5621943	3	True				
ANR	5622347	AssignmentExpression	"ge = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"		5621943	0		=			
ANR	5622348	Identifier	ge		5621943	0					
ANR	5622349	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"		5621943	1					
ANR	5622350	UnaryOperator	*		5621943	0					
ANR	5622351	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"		5621943	1					
ANR	5622352	Callee	member_prt		5621943	0					
ANR	5622353	Identifier	member_prt		5621943	0					
ANR	5622354	ArgumentList	t1_glyph_space_coord		5621943	1					
ANR	5622355	Argument	t1_glyph_space_coord		5621943	0					
ANR	5622356	Identifier	t1_glyph_space_coord		5621943	0					
ANR	5622357	Argument	& self -> pole [ i ]		5621943	1					
ANR	5622358	UnaryOperationExpression	& self -> pole [ i ]		5621943	0					
ANR	5622359	UnaryOperator	&		5621943	0					
ANR	5622360	ArrayIndexing	self -> pole [ i ]		5621943	1					
ANR	5622361	PtrMemberAccess	self -> pole		5621943	0					
ANR	5622362	Identifier	self		5621943	0					
ANR	5622363	Identifier	pole		5621943	1					
ANR	5622364	Identifier	i		5621943	1					
ANR	5622365	Argument	offset_gd		5621943	2					
ANR	5622366	Identifier	offset_gd		5621943	0					
ANR	5622367	ExpressionStatement	gc0 = gc - threshold	1059:12:44360:44380	5621943	4	True				
ANR	5622368	AssignmentExpression	gc0 = gc - threshold		5621943	0		=			
ANR	5622369	Identifier	gc0		5621943	0					
ANR	5622370	AdditiveExpression	gc - threshold		5621943	1		-			
ANR	5622371	Identifier	gc		5621943	0					
ANR	5622372	Identifier	threshold		5621943	1					
ANR	5622373	ExpressionStatement	gc1 = gc + threshold	1060:12:44394:44414	5621943	5	True				
ANR	5622374	AssignmentExpression	gc1 = gc + threshold		5621943	0		=			
ANR	5622375	Identifier	gc1		5621943	0					
ANR	5622376	AdditiveExpression	gc + threshold		5621943	1		+			
ANR	5622377	Identifier	gc		5621943	0					
ANR	5622378	Identifier	threshold		5621943	1					
ANR	5622379	ForStatement	"for ( pj = i , j = i + 1 , n = 0 ; ; pj = j , j ++ , n ++ )"		5621943	6					
ANR	5622380	ForInit	"pj = i , j = i + 1 , n = 0 ;"	1061:17:44433:44457	5621943	0	True				
ANR	5622381	Expression	"pj = i , j = i + 1 , n = 0"		5621943	0					
ANR	5622382	AssignmentExpression	pj = i		5621943	0		=			
ANR	5622383	Identifier	pj		5621943	0					
ANR	5622384	Identifier	i		5621943	1					
ANR	5622385	Expression	"j = i + 1 , n = 0"		5621943	1					
ANR	5622386	AssignmentExpression	j = i + 1		5621943	0		=			
ANR	5622387	Identifier	j		5621943	0					
ANR	5622388	AdditiveExpression	i + 1		5621943	1		+			
ANR	5622389	Identifier	i		5621943	0					
ANR	5622390	PrimaryExpression	1		5621943	1					
ANR	5622391	AssignmentExpression	n = 0		5621943	1		=			
ANR	5622392	Identifier	n		5621943	0					
ANR	5622393	PrimaryExpression	0		5621943	1					
ANR	5622394	Expression	"pj = j , j ++ , n ++"	1061:45:44461:44476	5621943	1	True				
ANR	5622395	AssignmentExpression	pj = j		5621943	0		=			
ANR	5622396	Identifier	pj		5621943	0					
ANR	5622397	Identifier	j		5621943	1					
ANR	5622398	Expression	"j ++ , n ++"		5621943	1					
ANR	5622399	PostIncDecOperationExpression	j ++		5621943	0					
ANR	5622400	Identifier	j		5621943	0					
ANR	5622401	IncDec	++		5621943	1					
ANR	5622402	PostIncDecOperationExpression	n ++		5621943	1					
ANR	5622403	Identifier	n		5621943	0					
ANR	5622404	IncDec	++		5621943	1					
ANR	5622405	CompoundStatement		51:63:2047:2047	5621943	2					
ANR	5622406	IfStatement	if ( j == contour_end )		5621943	0					
ANR	5622407	Condition	j == contour_end	1062:20:44501:44516	5621943	0	True				
ANR	5622408	EqualityExpression	j == contour_end		5621943	0		==			
ANR	5622409	Identifier	j		5621943	0					
ANR	5622410	Identifier	contour_end		5621943	1					
ANR	5622411	ExpressionStatement	j = contour_beg	1063:20:44539:44554	5621943	1	True				
ANR	5622412	AssignmentExpression	j = contour_beg		5621943	0		=			
ANR	5622413	Identifier	j		5621943	0					
ANR	5622414	Identifier	contour_beg		5621943	1					
ANR	5622415	IfStatement	if ( j == i )		5621943	1					
ANR	5622416	Condition	j == i	1064:20:44576:44581	5621943	0	True				
ANR	5622417	EqualityExpression	j == i		5621943	0		==			
ANR	5622418	Identifier	j		5621943	0					
ANR	5622419	Identifier	i		5621943	1					
ANR	5622420	BreakStatement	break ;	1065:20:44604:44609	5621943	1	True				
ANR	5622421	IfStatement	if ( self -> pole [ j ] . type == offcurve )		5621943	2					
ANR	5622422	Condition	self -> pole [ j ] . type == offcurve	1066:20:44657:44686	5621943	0	True				
ANR	5622423	EqualityExpression	self -> pole [ j ] . type == offcurve		5621943	0		==			
ANR	5622424	MemberAccess	self -> pole [ j ] . type		5621943	0					
ANR	5622425	ArrayIndexing	self -> pole [ j ]		5621943	0					
ANR	5622426	PtrMemberAccess	self -> pole		5621943	0					
ANR	5622427	Identifier	self		5621943	0					
ANR	5622428	Identifier	pole		5621943	1					
ANR	5622429	Identifier	j		5621943	1					
ANR	5622430	Identifier	type		5621943	1					
ANR	5622431	Identifier	offcurve		5621943	1					
ANR	5622432	ContinueStatement	continue ;	1067:20:44709:44717	5621943	1	True				
ANR	5622433	ExpressionStatement	"gcj = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"	1068:16:44735:44801	5621943	3	True				
ANR	5622434	AssignmentExpression	"gcj = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5621943	0		=			
ANR	5622435	Identifier	gcj		5621943	0					
ANR	5622436	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5621943	1					
ANR	5622437	UnaryOperator	*		5621943	0					
ANR	5622438	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5621943	1					
ANR	5622439	Callee	member_prt		5621943	0					
ANR	5622440	Identifier	member_prt		5621943	0					
ANR	5622441	ArgumentList	t1_glyph_space_coord		5621943	1					
ANR	5622442	Argument	t1_glyph_space_coord		5621943	0					
ANR	5622443	Identifier	t1_glyph_space_coord		5621943	0					
ANR	5622444	Argument	& self -> pole [ j ]		5621943	1					
ANR	5622445	UnaryOperationExpression	& self -> pole [ j ]		5621943	0					
ANR	5622446	UnaryOperator	&		5621943	0					
ANR	5622447	ArrayIndexing	self -> pole [ j ]		5621943	1					
ANR	5622448	PtrMemberAccess	self -> pole		5621943	0					
ANR	5622449	Identifier	self		5621943	0					
ANR	5622450	Identifier	pole		5621943	1					
ANR	5622451	Identifier	j		5621943	1					
ANR	5622452	Argument	offset_gc		5621943	2					
ANR	5622453	Identifier	offset_gc		5621943	0					
ANR	5622454	IfStatement	if ( gcj < gc0 || gcj > gc1 )		5621943	4					
ANR	5622455	Condition	gcj < gc0 || gcj > gc1	1069:20:44823:44844	5621943	0	True				
ANR	5622456	OrExpression	gcj < gc0 || gcj > gc1		5621943	0		||			
ANR	5622457	RelationalExpression	gcj < gc0		5621943	0		<			
ANR	5622458	Identifier	gcj		5621943	0					
ANR	5622459	Identifier	gc0		5621943	1					
ANR	5622460	RelationalExpression	gcj > gc1		5621943	1		>			
ANR	5622461	Identifier	gcj		5621943	0					
ANR	5622462	Identifier	gc1		5621943	1					
ANR	5622463	BreakStatement	break ;	1070:20:44867:44872	5621943	1	True				
ANR	5622464	ExpressionStatement	"gd = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"	1071:16:44890:44955	5621943	5	True				
ANR	5622465	AssignmentExpression	"gd = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"		5621943	0		=			
ANR	5622466	Identifier	gd		5621943	0					
ANR	5622467	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"		5621943	1					
ANR	5622468	UnaryOperator	*		5621943	0					
ANR	5622469	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"		5621943	1					
ANR	5622470	Callee	member_prt		5621943	0					
ANR	5622471	Identifier	member_prt		5621943	0					
ANR	5622472	ArgumentList	t1_glyph_space_coord		5621943	1					
ANR	5622473	Argument	t1_glyph_space_coord		5621943	0					
ANR	5622474	Identifier	t1_glyph_space_coord		5621943	0					
ANR	5622475	Argument	& self -> pole [ i ]		5621943	1					
ANR	5622476	UnaryOperationExpression	& self -> pole [ i ]		5621943	0					
ANR	5622477	UnaryOperator	&		5621943	0					
ANR	5622478	ArrayIndexing	self -> pole [ i ]		5621943	1					
ANR	5622479	PtrMemberAccess	self -> pole		5621943	0					
ANR	5622480	Identifier	self		5621943	0					
ANR	5622481	Identifier	pole		5621943	1					
ANR	5622482	Identifier	i		5621943	1					
ANR	5622483	Argument	offset_gd		5621943	2					
ANR	5622484	Identifier	offset_gd		5621943	0					
ANR	5622485	ExpressionStatement	dir = ( gd > ge ? 1 : - 1 )	1072:16:44973:44997	5621943	6	True				
ANR	5622486	AssignmentExpression	dir = ( gd > ge ? 1 : - 1 )		5621943	0		=			
ANR	5622487	Identifier	dir		5621943	0					
ANR	5622488	ConditionalExpression	gd > ge ? 1 : - 1		5621943	1					
ANR	5622489	Condition	gd > ge		5621943	0					
ANR	5622490	RelationalExpression	gd > ge		5621943	0		>			
ANR	5622491	Identifier	gd		5621943	0					
ANR	5622492	Identifier	ge		5621943	1					
ANR	5622493	PrimaryExpression	1		5621943	1					
ANR	5622494	UnaryOperationExpression	- 1		5621943	2					
ANR	5622495	UnaryOperator	-		5621943	0					
ANR	5622496	PrimaryExpression	1		5621943	1					
ANR	5622497	IfStatement	if ( dir * prev_dir < 0 )		5621943	7					
ANR	5622498	Condition	dir * prev_dir < 0	1073:20:45019:45036	5621943	0	True				
ANR	5622499	RelationalExpression	dir * prev_dir < 0		5621943	0		<			
ANR	5622500	MultiplicativeExpression	dir * prev_dir		5621943	0		*			
ANR	5622501	Identifier	dir		5621943	0					
ANR	5622502	Identifier	prev_dir		5621943	1					
ANR	5622503	PrimaryExpression	0		5621943	1					
ANR	5622504	BreakStatement	break ;	1074:20:45059:45064	5621943	1	True				
ANR	5622505	ExpressionStatement	ge = gd	1075:16:45082:45089	5621943	8	True				
ANR	5622506	AssignmentExpression	ge = gd		5621943	0		=			
ANR	5622507	Identifier	ge		5621943	0					
ANR	5622508	Identifier	gd		5621943	1					
ANR	5622509	ExpressionStatement	prev_dir = dir	1076:16:45107:45121	5621943	9	True				
ANR	5622510	AssignmentExpression	prev_dir = dir		5621943	0		=			
ANR	5622511	Identifier	prev_dir		5621943	0					
ANR	5622512	Identifier	dir		5621943	1					
ANR	5622513	IfStatement	if ( n < 6 )		5621943	7					
ANR	5622514	Condition	n < 6	1078:16:45153:45157	5621943	0	True				
ANR	5622515	RelationalExpression	n < 6		5621943	0		<			
ANR	5622516	Identifier	n		5621943	0					
ANR	5622517	PrimaryExpression	6		5621943	1					
ANR	5622518	ContinueStatement	continue ;	1079:16:45176:45184	5621943	1	True				
ANR	5622519	IfStatement	"if ( t1_hinter__find_flex ( self , k , contour_beg , contour_end , pixel_g , threshold , i , pj , n , & j0 , & j1 , & gm ) )"		5621943	8					
ANR	5622520	Condition	"t1_hinter__find_flex ( self , k , contour_beg , contour_end , pixel_g , threshold , i , pj , n , & j0 , & j1 , & gm )"	1080:16:45202:45301	5621943	0	True				
ANR	5622521	CallExpression	"t1_hinter__find_flex ( self , k , contour_beg , contour_end , pixel_g , threshold , i , pj , n , & j0 , & j1 , & gm )"		5621943	0					
ANR	5622522	Callee	t1_hinter__find_flex		5621943	0					
ANR	5622523	Identifier	t1_hinter__find_flex		5621943	0					
ANR	5622524	ArgumentList	self		5621943	1					
ANR	5622525	Argument	self		5621943	0					
ANR	5622526	Identifier	self		5621943	0					
ANR	5622527	Argument	k		5621943	1					
ANR	5622528	Identifier	k		5621943	0					
ANR	5622529	Argument	contour_beg		5621943	2					
ANR	5622530	Identifier	contour_beg		5621943	0					
ANR	5622531	Argument	contour_end		5621943	3					
ANR	5622532	Identifier	contour_end		5621943	0					
ANR	5622533	Argument	pixel_g		5621943	4					
ANR	5622534	Identifier	pixel_g		5621943	0					
ANR	5622535	Argument	threshold		5621943	5					
ANR	5622536	Identifier	threshold		5621943	0					
ANR	5622537	Argument	i		5621943	6					
ANR	5622538	Identifier	i		5621943	0					
ANR	5622539	Argument	pj		5621943	7					
ANR	5622540	Identifier	pj		5621943	0					
ANR	5622541	Argument	n		5621943	8					
ANR	5622542	Identifier	n		5621943	0					
ANR	5622543	Argument	& j0		5621943	9					
ANR	5622544	UnaryOperationExpression	& j0		5621943	0					
ANR	5622545	UnaryOperator	&		5621943	0					
ANR	5622546	Identifier	j0		5621943	1					
ANR	5622547	Argument	& j1		5621943	10					
ANR	5622548	UnaryOperationExpression	& j1		5621943	0					
ANR	5622549	UnaryOperator	&		5621943	0					
ANR	5622550	Identifier	j1		5621943	1					
ANR	5622551	Argument	& gm		5621943	11					
ANR	5622552	UnaryOperationExpression	& gm		5621943	0					
ANR	5622553	UnaryOperator	&		5621943	0					
ANR	5622554	Identifier	gm		5621943	1					
ANR	5622555	CompoundStatement		70:118:2872:2872	5621943	1					
ANR	5622556	ExpressionStatement	"t1_hinter__compact_flex ( self , contour_beg , contour_end , j0 , j1 , & i )"	1081:16:45322:45389	5621943	0	True				
ANR	5622557	CallExpression	"t1_hinter__compact_flex ( self , contour_beg , contour_end , j0 , j1 , & i )"		5621943	0					
ANR	5622558	Callee	t1_hinter__compact_flex		5621943	0					
ANR	5622559	Identifier	t1_hinter__compact_flex		5621943	0					
ANR	5622560	ArgumentList	self		5621943	1					
ANR	5622561	Argument	self		5621943	0					
ANR	5622562	Identifier	self		5621943	0					
ANR	5622563	Argument	contour_beg		5621943	1					
ANR	5622564	Identifier	contour_beg		5621943	0					
ANR	5622565	Argument	contour_end		5621943	2					
ANR	5622566	Identifier	contour_end		5621943	0					
ANR	5622567	Argument	j0		5621943	3					
ANR	5622568	Identifier	j0		5621943	0					
ANR	5622569	Argument	j1		5621943	4					
ANR	5622570	Identifier	j1		5621943	0					
ANR	5622571	Argument	& i		5621943	5					
ANR	5622572	UnaryOperationExpression	& i		5621943	0					
ANR	5622573	UnaryOperator	&		5621943	0					
ANR	5622574	Identifier	i		5621943	1					
ANR	5622575	ExpressionStatement	"t1_hinter__adjust_stem_hints_by_missed_flex ( self , gc , gm , k )"	1082:16:45407:45467	5621943	1	True				
ANR	5622576	CallExpression	"t1_hinter__adjust_stem_hints_by_missed_flex ( self , gc , gm , k )"		5621943	0					
ANR	5622577	Callee	t1_hinter__adjust_stem_hints_by_missed_flex		5621943	0					
ANR	5622578	Identifier	t1_hinter__adjust_stem_hints_by_missed_flex		5621943	0					
ANR	5622579	ArgumentList	self		5621943	1					
ANR	5622580	Argument	self		5621943	0					
ANR	5622581	Identifier	self		5621943	0					
ANR	5622582	Argument	gc		5621943	1					
ANR	5622583	Identifier	gc		5621943	0					
ANR	5622584	Argument	gm		5621943	2					
ANR	5622585	Identifier	gm		5621943	0					
ANR	5622586	Argument	k		5621943	3					
ANR	5622587	Identifier	k		5621943	0					
ANR	5622588	ExpressionStatement	contour_end = self -> pole_count - 1	1083:16:45485:45519	5621943	2	True				
ANR	5622589	AssignmentExpression	contour_end = self -> pole_count - 1		5621943	0		=			
ANR	5622590	Identifier	contour_end		5621943	0					
ANR	5622591	AdditiveExpression	self -> pole_count - 1		5621943	1		-			
ANR	5622592	PtrMemberAccess	self -> pole_count		5621943	0					
ANR	5622593	Identifier	self		5621943	0					
ANR	5622594	Identifier	pole_count		5621943	1					
ANR	5622595	PrimaryExpression	1		5621943	1					
ANR	5622596	ReturnType	static void		5621943	1					
ANR	5622597	Identifier	t1_hinter__fix_missed_flex		5621943	2					
ANR	5622598	ParameterList	t1_hinter * self		5621943	3					
ANR	5622599	Parameter	t1_hinter * self	1010:39:42413:42428	5621943	0	True				
ANR	5622600	ParameterType	t1_hinter *		5621943	0					
ANR	5622601	Identifier	self		5621943	1					
ANR	5622602	CFGEntryNode	ENTRY		5621943		True				
ANR	5622603	CFGExitNode	EXIT		5621943		True				
ANR	5622604	InfiniteForNode	true		5621943		True				
ANR	5622605	InfiniteForNode	true		5621943		True				
ANR	5622606	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ contour_beg ] , offset_gc )"		5621943						
ANR	5622607	Symbol	self -> pole_count		5621943						
ANR	5622608	Symbol	j0		5621943						
ANR	5622609	Symbol	j1		5621943						
ANR	5622610	Symbol	threshold		5621943						
ANR	5622611	Symbol	dir		5621943						
ANR	5622612	Symbol	prev_dir		5621943						
ANR	5622613	Symbol	gcj		5621943						
ANR	5622614	Symbol	self -> pixel_gw		5621943						
ANR	5622615	Symbol	* member_prt		5621943						
ANR	5622616	Symbol	member_prt		5621943						
ANR	5622617	Symbol	wrapped		5621943						
ANR	5622618	Symbol	* self		5621943						
ANR	5622619	Symbol	offset_gc		5621943						
ANR	5622620	Symbol	offset_gd		5621943						
ANR	5622621	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"		5621943						
ANR	5622622	Symbol	self -> pole [ j ] . type		5621943						
ANR	5622623	Symbol	self -> contour		5621943						
ANR	5622624	Symbol	& gm		5621943						
ANR	5622625	Symbol	t1_glyph_space_coord		5621943						
ANR	5622626	Symbol	contour_beg		5621943						
ANR	5622627	Symbol	p_gd		5621943						
ANR	5622628	Symbol	true		5621943						
ANR	5622629	Symbol	p_gc		5621943						
ANR	5622630	Symbol	* self -> pole		5621943						
ANR	5622631	Symbol	& j1		5621943						
ANR	5622632	Symbol	contour_end		5621943						
ANR	5622633	Symbol	& j0		5621943						
ANR	5622634	Symbol	t1_hinter__find_flex		5621943						
ANR	5622635	Symbol	gc1		5621943						
ANR	5622636	Symbol	gc0		5621943						
ANR	5622637	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5621943						
ANR	5622638	Symbol	self -> pole [ i ] . type		5621943						
ANR	5622639	Symbol	self -> pole		5621943						
ANR	5622640	Symbol	gc		5621943						
ANR	5622641	Symbol	gd		5621943						
ANR	5622642	Symbol	ge		5621943						
ANR	5622643	Symbol	* self -> contour_count		5621943						
ANR	5622644	Symbol	pixel_g		5621943						
ANR	5622645	Symbol	* self -> contour		5621943						
ANR	5622646	Symbol	self -> pixel_gh		5621943						
ANR	5622647	Symbol	self -> contour_count		5621943						
ANR	5622648	Symbol	& self -> pole [ 0 ] . gy		5621943						
ANR	5622649	Symbol	* * self		5621943						
ANR	5622650	Symbol	& self -> pole [ 0 ] . gx		5621943						
ANR	5622651	Symbol	gm		5621943						
ANR	5622652	Symbol	false		5621943						
ANR	5622653	Symbol	i		5621943						
ANR	5622654	Symbol	j		5621943						
ANR	5622655	Symbol	k		5621943						
ANR	5622656	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"		5621943						
ANR	5622657	Symbol	n		5621943						
ANR	5622658	Symbol	& i		5621943						
ANR	5622659	Symbol	* i		5621943						
ANR	5622660	Symbol	* j		5621943						
ANR	5622661	Symbol	offcurve		5621943						
ANR	5622662	Symbol	self		5621943						
ANR	5622663	Symbol	pj		5621943						
ANR	5622664	Function	t1_hinter__rmoveto	1089:0:45554:46947							
ANR	5622665	FunctionDef	"t1_hinter__rmoveto (t1_hinter * self , fixed xx , fixed yy)"		5622664	0					
ANR	5622666	CompoundStatement		1090:0:45615:46947	5622664	0					
ANR	5622667	IdentifierDeclStatement	int code ;	1090:3:45619:45627	5622664	0	True				
ANR	5622668	IdentifierDecl	code		5622664	0					
ANR	5622669	IdentifierDeclType	int		5622664	0					
ANR	5622670	Identifier	code		5622664	1					
ANR	5622671	ExpressionStatement	"t1_hinter__adjust_matrix_precision ( self , xx , yy )"	1092:4:45634:45682	5622664	1	True				
ANR	5622672	CallExpression	"t1_hinter__adjust_matrix_precision ( self , xx , yy )"		5622664	0					
ANR	5622673	Callee	t1_hinter__adjust_matrix_precision		5622664	0					
ANR	5622674	Identifier	t1_hinter__adjust_matrix_precision		5622664	0					
ANR	5622675	ArgumentList	self		5622664	1					
ANR	5622676	Argument	self		5622664	0					
ANR	5622677	Identifier	self		5622664	0					
ANR	5622678	Argument	xx		5622664	1					
ANR	5622679	Identifier	xx		5622664	0					
ANR	5622680	Argument	yy		5622664	2					
ANR	5622681	Identifier	yy		5622664	0					
ANR	5622682	IfStatement	if ( self -> flex_count == 0 )		5622664	2					
ANR	5622683	Condition	self -> flex_count == 0	1093:8:45692:45712	5622664	0	True				
ANR	5622684	EqualityExpression	self -> flex_count == 0		5622664	0		==			
ANR	5622685	PtrMemberAccess	self -> flex_count		5622664	0					
ANR	5622686	Identifier	self		5622664	0					
ANR	5622687	Identifier	flex_count		5622664	1					
ANR	5622688	PrimaryExpression	0		5622664	1					
ANR	5622689	CompoundStatement		4:31:99:99	5622664	1					
ANR	5622690	IfStatement	if ( self -> pass_through )		5622664	0					
ANR	5622691	Condition	self -> pass_through	1094:12:45729:45746	5622664	0	True				
ANR	5622692	PtrMemberAccess	self -> pass_through		5622664	0					
ANR	5622693	Identifier	self		5622664	0					
ANR	5622694	Identifier	pass_through		5622664	1					
ANR	5622695	CompoundStatement		8:12:255:267	5622664	1					
ANR	5622696	IdentifierDeclStatement	t1_glyph_space_coord gx = self -> cx += xx ;	1095:12:45763:45803	5622664	0	True				
ANR	5622697	IdentifierDecl	gx = self -> cx += xx		5622664	0					
ANR	5622698	IdentifierDeclType	t1_glyph_space_coord		5622664	0					
ANR	5622699	Identifier	gx		5622664	1					
ANR	5622700	AssignmentExpression	gx = self -> cx += xx		5622664	2		=			
ANR	5622701	Identifier	gx		5622664	0					
ANR	5622702	AssignmentExpression	self -> cx += xx		5622664	1		+=			
ANR	5622703	PtrMemberAccess	self -> cx		5622664	0					
ANR	5622704	Identifier	self		5622664	0					
ANR	5622705	Identifier	cx		5622664	1					
ANR	5622706	Identifier	xx		5622664	1					
ANR	5622707	IdentifierDeclStatement	t1_glyph_space_coord gy = self -> cy += yy ;	1096:12:45817:45857	5622664	1	True				
ANR	5622708	IdentifierDecl	gy = self -> cy += yy		5622664	0					
ANR	5622709	IdentifierDeclType	t1_glyph_space_coord		5622664	0					
ANR	5622710	Identifier	gy		5622664	1					
ANR	5622711	AssignmentExpression	gy = self -> cy += yy		5622664	2		=			
ANR	5622712	Identifier	gy		5622664	0					
ANR	5622713	AssignmentExpression	self -> cy += yy		5622664	1		+=			
ANR	5622714	PtrMemberAccess	self -> cy		5622664	0					
ANR	5622715	Identifier	self		5622664	0					
ANR	5622716	Identifier	cy		5622664	1					
ANR	5622717	Identifier	yy		5622664	1					
ANR	5622718	IdentifierDeclStatement	"fixed fx , fy ;"	1097:12:45871:45883	5622664	2	True				
ANR	5622719	IdentifierDecl	fx		5622664	0					
ANR	5622720	IdentifierDeclType	fixed		5622664	0					
ANR	5622721	Identifier	fx		5622664	1					
ANR	5622722	IdentifierDecl	fy		5622664	1					
ANR	5622723	IdentifierDeclType	fixed		5622664	0					
ANR	5622724	Identifier	fy		5622664	1					
ANR	5622725	IfStatement	if ( self -> path_opened )		5622664	3					
ANR	5622726	Condition	self -> path_opened	1099:16:45902:45918	5622664	0	True				
ANR	5622727	PtrMemberAccess	self -> path_opened		5622664	0					
ANR	5622728	Identifier	self		5622664	0					
ANR	5622729	Identifier	path_opened		5622664	1					
ANR	5622730	CompoundStatement		10:35:305:305	5622664	1					
ANR	5622731	ExpressionStatement	code = gx_path_close_subpath ( self -> output_path )	1100:16:45939:45986	5622664	0	True				
ANR	5622732	AssignmentExpression	code = gx_path_close_subpath ( self -> output_path )		5622664	0		=			
ANR	5622733	Identifier	code		5622664	0					
ANR	5622734	CallExpression	gx_path_close_subpath ( self -> output_path )		5622664	1					
ANR	5622735	Callee	gx_path_close_subpath		5622664	0					
ANR	5622736	Identifier	gx_path_close_subpath		5622664	0					
ANR	5622737	ArgumentList	self -> output_path		5622664	1					
ANR	5622738	Argument	self -> output_path		5622664	0					
ANR	5622739	PtrMemberAccess	self -> output_path		5622664	0					
ANR	5622740	Identifier	self		5622664	0					
ANR	5622741	Identifier	output_path		5622664	1					
ANR	5622742	IfStatement	if ( code < 0 )		5622664	1					
ANR	5622743	Condition	code < 0	1101:20:46008:46015	5622664	0	True				
ANR	5622744	RelationalExpression	code < 0		5622664	0		<			
ANR	5622745	Identifier	code		5622664	0					
ANR	5622746	PrimaryExpression	0		5622664	1					
ANR	5622747	ReturnStatement	return code ;	1102:20:46038:46049	5622664	1	True				
ANR	5622748	Identifier	code		5622664	0					
ANR	5622749	ExpressionStatement	self -> path_opened = false	1103:16:46067:46092	5622664	2	True				
ANR	5622750	AssignmentExpression	self -> path_opened = false		5622664	0		=			
ANR	5622751	PtrMemberAccess	self -> path_opened		5622664	0					
ANR	5622752	Identifier	self		5622664	0					
ANR	5622753	Identifier	path_opened		5622664	1					
ANR	5622754	Identifier	false		5622664	1					
ANR	5622755	ExpressionStatement	"g2d ( self , gx , gy , & fx , & fy )"	1105:12:46120:46147	5622664	4	True				
ANR	5622756	CallExpression	"g2d ( self , gx , gy , & fx , & fy )"		5622664	0					
ANR	5622757	Callee	g2d		5622664	0					
ANR	5622758	Identifier	g2d		5622664	0					
ANR	5622759	ArgumentList	self		5622664	1					
ANR	5622760	Argument	self		5622664	0					
ANR	5622761	Identifier	self		5622664	0					
ANR	5622762	Argument	gx		5622664	1					
ANR	5622763	Identifier	gx		5622664	0					
ANR	5622764	Argument	gy		5622664	2					
ANR	5622765	Identifier	gy		5622664	0					
ANR	5622766	Argument	& fx		5622664	3					
ANR	5622767	UnaryOperationExpression	& fx		5622664	0					
ANR	5622768	UnaryOperator	&		5622664	0					
ANR	5622769	Identifier	fx		5622664	1					
ANR	5622770	Argument	& fy		5622664	4					
ANR	5622771	UnaryOperationExpression	& fy		5622664	0					
ANR	5622772	UnaryOperator	&		5622664	0					
ANR	5622773	Identifier	fy		5622664	1					
ANR	5622774	ExpressionStatement	"code = gx_path_add_point ( self -> output_path , fx , fy )"	1106:12:46161:46212	5622664	5	True				
ANR	5622775	AssignmentExpression	"code = gx_path_add_point ( self -> output_path , fx , fy )"		5622664	0		=			
ANR	5622776	Identifier	code		5622664	0					
ANR	5622777	CallExpression	"gx_path_add_point ( self -> output_path , fx , fy )"		5622664	1					
ANR	5622778	Callee	gx_path_add_point		5622664	0					
ANR	5622779	Identifier	gx_path_add_point		5622664	0					
ANR	5622780	ArgumentList	self -> output_path		5622664	1					
ANR	5622781	Argument	self -> output_path		5622664	0					
ANR	5622782	PtrMemberAccess	self -> output_path		5622664	0					
ANR	5622783	Identifier	self		5622664	0					
ANR	5622784	Identifier	output_path		5622664	1					
ANR	5622785	Argument	fx		5622664	1					
ANR	5622786	Identifier	fx		5622664	0					
ANR	5622787	Argument	fy		5622664	2					
ANR	5622788	Identifier	fy		5622664	0					
ANR	5622789	IfStatement	if ( self -> flex_count == 0 )		5622664	6					
ANR	5622790	Condition	self -> flex_count == 0	1107:16:46230:46250	5622664	0	True				
ANR	5622791	EqualityExpression	self -> flex_count == 0		5622664	0		==			
ANR	5622792	PtrMemberAccess	self -> flex_count		5622664	0					
ANR	5622793	Identifier	self		5622664	0					
ANR	5622794	Identifier	flex_count		5622664	1					
ANR	5622795	PrimaryExpression	0		5622664	1					
ANR	5622796	CompoundStatement		18:39:637:637	5622664	1					
ANR	5622797	ExpressionStatement	self -> bx = self -> cx	1108:16:46271:46290	5622664	0	True				
ANR	5622798	AssignmentExpression	self -> bx = self -> cx		5622664	0		=			
ANR	5622799	PtrMemberAccess	self -> bx		5622664	0					
ANR	5622800	Identifier	self		5622664	0					
ANR	5622801	Identifier	bx		5622664	1					
ANR	5622802	PtrMemberAccess	self -> cx		5622664	1					
ANR	5622803	Identifier	self		5622664	0					
ANR	5622804	Identifier	cx		5622664	1					
ANR	5622805	ExpressionStatement	self -> by = self -> cy	1109:16:46308:46327	5622664	1	True				
ANR	5622806	AssignmentExpression	self -> by = self -> cy		5622664	0		=			
ANR	5622807	PtrMemberAccess	self -> by		5622664	0					
ANR	5622808	Identifier	self		5622664	0					
ANR	5622809	Identifier	by		5622664	1					
ANR	5622810	PtrMemberAccess	self -> cy		5622664	1					
ANR	5622811	Identifier	self		5622664	0					
ANR	5622812	Identifier	cy		5622664	1					
ANR	5622813	ReturnStatement	return code ;	1111:12:46355:46366	5622664	7	True				
ANR	5622814	Identifier	code		5622664	0					
ANR	5622815	IfStatement	if ( self -> pole_count > 0 && self -> pole [ self -> pole_count - 1 ] . type == moveto )		5622664	1					
ANR	5622816	Condition	self -> pole_count > 0 && self -> pole [ self -> pole_count - 1 ] . type == moveto	1113:12:46390:46460	5622664	0	True				
ANR	5622817	AndExpression	self -> pole_count > 0 && self -> pole [ self -> pole_count - 1 ] . type == moveto		5622664	0		&&			
ANR	5622818	RelationalExpression	self -> pole_count > 0		5622664	0		>			
ANR	5622819	PtrMemberAccess	self -> pole_count		5622664	0					
ANR	5622820	Identifier	self		5622664	0					
ANR	5622821	Identifier	pole_count		5622664	1					
ANR	5622822	PrimaryExpression	0		5622664	1					
ANR	5622823	EqualityExpression	self -> pole [ self -> pole_count - 1 ] . type == moveto		5622664	1		==			
ANR	5622824	MemberAccess	self -> pole [ self -> pole_count - 1 ] . type		5622664	0					
ANR	5622825	ArrayIndexing	self -> pole [ self -> pole_count - 1 ]		5622664	0					
ANR	5622826	PtrMemberAccess	self -> pole		5622664	0					
ANR	5622827	Identifier	self		5622664	0					
ANR	5622828	Identifier	pole		5622664	1					
ANR	5622829	AdditiveExpression	self -> pole_count - 1		5622664	1		-			
ANR	5622830	PtrMemberAccess	self -> pole_count		5622664	0					
ANR	5622831	Identifier	self		5622664	0					
ANR	5622832	Identifier	pole_count		5622664	1					
ANR	5622833	PrimaryExpression	1		5622664	1					
ANR	5622834	Identifier	type		5622664	1					
ANR	5622835	Identifier	moveto		5622664	1					
ANR	5622836	ExpressionStatement	self -> pole_count --	1114:12:46475:46493	5622664	1	True				
ANR	5622837	PostIncDecOperationExpression	self -> pole_count --		5622664	0					
ANR	5622838	PtrMemberAccess	self -> pole_count		5622664	0					
ANR	5622839	Identifier	self		5622664	0					
ANR	5622840	Identifier	pole_count		5622664	1					
ANR	5622841	IncDec	--		5622664	1					
ANR	5622842	IfStatement	if ( self -> pole_count > 0 && self -> pole [ self -> pole_count - 1 ] . type != closepath )		5622664	2					
ANR	5622843	Condition	self -> pole_count > 0 && self -> pole [ self -> pole_count - 1 ] . type != closepath	1115:12:46507:46580	5622664	0	True				
ANR	5622844	AndExpression	self -> pole_count > 0 && self -> pole [ self -> pole_count - 1 ] . type != closepath		5622664	0		&&			
ANR	5622845	RelationalExpression	self -> pole_count > 0		5622664	0		>			
ANR	5622846	PtrMemberAccess	self -> pole_count		5622664	0					
ANR	5622847	Identifier	self		5622664	0					
ANR	5622848	Identifier	pole_count		5622664	1					
ANR	5622849	PrimaryExpression	0		5622664	1					
ANR	5622850	EqualityExpression	self -> pole [ self -> pole_count - 1 ] . type != closepath		5622664	1		!=			
ANR	5622851	MemberAccess	self -> pole [ self -> pole_count - 1 ] . type		5622664	0					
ANR	5622852	ArrayIndexing	self -> pole [ self -> pole_count - 1 ]		5622664	0					
ANR	5622853	PtrMemberAccess	self -> pole		5622664	0					
ANR	5622854	Identifier	self		5622664	0					
ANR	5622855	Identifier	pole		5622664	1					
ANR	5622856	AdditiveExpression	self -> pole_count - 1		5622664	1		-			
ANR	5622857	PtrMemberAccess	self -> pole_count		5622664	0					
ANR	5622858	Identifier	self		5622664	0					
ANR	5622859	Identifier	pole_count		5622664	1					
ANR	5622860	PrimaryExpression	1		5622664	1					
ANR	5622861	Identifier	type		5622664	1					
ANR	5622862	Identifier	closepath		5622664	1					
ANR	5622863	CompoundStatement		26:88:967:967	5622664	1					
ANR	5622864	ExpressionStatement	code = t1_hinter__closepath ( self )	1116:12:46597:46630	5622664	0	True				
ANR	5622865	AssignmentExpression	code = t1_hinter__closepath ( self )		5622664	0		=			
ANR	5622866	Identifier	code		5622664	0					
ANR	5622867	CallExpression	t1_hinter__closepath ( self )		5622664	1					
ANR	5622868	Callee	t1_hinter__closepath		5622664	0					
ANR	5622869	Identifier	t1_hinter__closepath		5622664	0					
ANR	5622870	ArgumentList	self		5622664	1					
ANR	5622871	Argument	self		5622664	0					
ANR	5622872	Identifier	self		5622664	0					
ANR	5622873	IfStatement	if ( code < 0 )		5622664	1					
ANR	5622874	Condition	code < 0	1117:16:46648:46655	5622664	0	True				
ANR	5622875	RelationalExpression	code < 0		5622664	0		<			
ANR	5622876	Identifier	code		5622664	0					
ANR	5622877	PrimaryExpression	0		5622664	1					
ANR	5622878	ReturnStatement	return code ;	1118:16:46674:46685	5622664	1	True				
ANR	5622879	Identifier	code		5622664	0					
ANR	5622880	IfStatement	if ( ! self -> have_flex )		5622664	3					
ANR	5622881	Condition	! self -> have_flex	1120:12:46709:46724	5622664	0	True				
ANR	5622882	UnaryOperationExpression	! self -> have_flex		5622664	0					
ANR	5622883	UnaryOperator	!		5622664	0					
ANR	5622884	PtrMemberAccess	self -> have_flex		5622664	1					
ANR	5622885	Identifier	self		5622664	0					
ANR	5622886	Identifier	have_flex		5622664	1					
ANR	5622887	ExpressionStatement	t1_hinter__fix_missed_flex ( self )	1121:12:46739:46771	5622664	1	True				
ANR	5622888	CallExpression	t1_hinter__fix_missed_flex ( self )		5622664	0					
ANR	5622889	Callee	t1_hinter__fix_missed_flex		5622664	0					
ANR	5622890	Identifier	t1_hinter__fix_missed_flex		5622664	0					
ANR	5622891	ArgumentList	self		5622664	1					
ANR	5622892	Argument	self		5622664	0					
ANR	5622893	Identifier	self		5622664	0					
ANR	5622894	ExpressionStatement	"code = t1_hinter__add_pole ( self , xx , yy , moveto )"	1123:4:46783:46831	5622664	3	True				
ANR	5622895	AssignmentExpression	"code = t1_hinter__add_pole ( self , xx , yy , moveto )"		5622664	0		=			
ANR	5622896	Identifier	code		5622664	0					
ANR	5622897	CallExpression	"t1_hinter__add_pole ( self , xx , yy , moveto )"		5622664	1					
ANR	5622898	Callee	t1_hinter__add_pole		5622664	0					
ANR	5622899	Identifier	t1_hinter__add_pole		5622664	0					
ANR	5622900	ArgumentList	self		5622664	1					
ANR	5622901	Argument	self		5622664	0					
ANR	5622902	Identifier	self		5622664	0					
ANR	5622903	Argument	xx		5622664	1					
ANR	5622904	Identifier	xx		5622664	0					
ANR	5622905	Argument	yy		5622664	2					
ANR	5622906	Identifier	yy		5622664	0					
ANR	5622907	Argument	moveto		5622664	3					
ANR	5622908	Identifier	moveto		5622664	0					
ANR	5622909	IfStatement	if ( self -> flex_count == 0 )		5622664	4					
ANR	5622910	Condition	self -> flex_count == 0	1124:8:46841:46861	5622664	0	True				
ANR	5622911	EqualityExpression	self -> flex_count == 0		5622664	0		==			
ANR	5622912	PtrMemberAccess	self -> flex_count		5622664	0					
ANR	5622913	Identifier	self		5622664	0					
ANR	5622914	Identifier	flex_count		5622664	1					
ANR	5622915	PrimaryExpression	0		5622664	1					
ANR	5622916	CompoundStatement		35:31:1248:1248	5622664	1					
ANR	5622917	ExpressionStatement	self -> bx = self -> cx	1125:8:46874:46893	5622664	0	True				
ANR	5622918	AssignmentExpression	self -> bx = self -> cx		5622664	0		=			
ANR	5622919	PtrMemberAccess	self -> bx		5622664	0					
ANR	5622920	Identifier	self		5622664	0					
ANR	5622921	Identifier	bx		5622664	1					
ANR	5622922	PtrMemberAccess	self -> cx		5622664	1					
ANR	5622923	Identifier	self		5622664	0					
ANR	5622924	Identifier	cx		5622664	1					
ANR	5622925	ExpressionStatement	self -> by = self -> cy	1126:8:46903:46922	5622664	1	True				
ANR	5622926	AssignmentExpression	self -> by = self -> cy		5622664	0		=			
ANR	5622927	PtrMemberAccess	self -> by		5622664	0					
ANR	5622928	Identifier	self		5622664	0					
ANR	5622929	Identifier	by		5622664	1					
ANR	5622930	PtrMemberAccess	self -> cy		5622664	1					
ANR	5622931	Identifier	self		5622664	0					
ANR	5622932	Identifier	cy		5622664	1					
ANR	5622933	ReturnStatement	return code ;	1128:4:46934:46945	5622664	5	True				
ANR	5622934	Identifier	code		5622664	0					
ANR	5622935	ReturnType	int		5622664	1					
ANR	5622936	Identifier	t1_hinter__rmoveto		5622664	2					
ANR	5622937	ParameterList	"t1_hinter * self , fixed xx , fixed yy"		5622664	3					
ANR	5622938	Parameter	t1_hinter * self	1089:23:45577:45592	5622664	0	True				
ANR	5622939	ParameterType	t1_hinter *		5622664	0					
ANR	5622940	Identifier	self		5622664	1					
ANR	5622941	Parameter	fixed xx	1089:41:45595:45602	5622664	1	True				
ANR	5622942	ParameterType	fixed		5622664	0					
ANR	5622943	Identifier	xx		5622664	1					
ANR	5622944	Parameter	fixed yy	1089:51:45605:45612	5622664	2	True				
ANR	5622945	ParameterType	fixed		5622664	0					
ANR	5622946	Identifier	yy		5622664	1					
ANR	5622947	CFGEntryNode	ENTRY		5622664		True				
ANR	5622948	CFGExitNode	EXIT		5622664		True				
ANR	5622949	Symbol	xx		5622664						
ANR	5622950	Symbol	code		5622664						
ANR	5622951	Symbol	* self -> pole		5622664						
ANR	5622952	Symbol	self -> pole_count		5622664						
ANR	5622953	Symbol	self -> pole [ self -> pole_count - 1 ] . type		5622664						
ANR	5622954	Symbol	self -> flex_count		5622664						
ANR	5622955	Symbol	gx_path_close_subpath		5622664						
ANR	5622956	Symbol	fx		5622664						
ANR	5622957	Symbol	fy		5622664						
ANR	5622958	Symbol	t1_hinter__add_pole		5622664						
ANR	5622959	Symbol	closepath		5622664						
ANR	5622960	Symbol	self -> cx		5622664						
ANR	5622961	Symbol	self -> pole		5622664						
ANR	5622962	Symbol	self -> cy		5622664						
ANR	5622963	Symbol	self -> output_path		5622664						
ANR	5622964	Symbol	& fy		5622664						
ANR	5622965	Symbol	& fx		5622664						
ANR	5622966	Symbol	moveto		5622664						
ANR	5622967	Symbol	yy		5622664						
ANR	5622968	Symbol	self -> path_opened		5622664						
ANR	5622969	Symbol	* * self		5622664						
ANR	5622970	Symbol	* self		5622664						
ANR	5622971	Symbol	* self -> pole_count		5622664						
ANR	5622972	Symbol	false		5622664						
ANR	5622973	Symbol	self -> pass_through		5622664						
ANR	5622974	Symbol	self -> have_flex		5622664						
ANR	5622975	Symbol	gx_path_add_point		5622664						
ANR	5622976	Symbol	t1_hinter__closepath		5622664						
ANR	5622977	Symbol	gx		5622664						
ANR	5622978	Symbol	gy		5622664						
ANR	5622979	Symbol	self -> by		5622664						
ANR	5622980	Symbol	self		5622664						
ANR	5622981	Symbol	self -> bx		5622664						
ANR	5622982	Function	t1_hinter__skip_degenerate_segnment	1131:0:46950:47442							
ANR	5622983	FunctionDef	"t1_hinter__skip_degenerate_segnment (t1_hinter * self , int npoles)"		5622982	0					
ANR	5622984	CompoundStatement		1132:0:47035:47442	5622982	0					
ANR	5622985	IdentifierDeclStatement	"int contour_beg = self -> contour [ self -> contour_count ] , i ;"	1133:4:47117:47172	5622982	0	True				
ANR	5622986	IdentifierDecl	contour_beg = self -> contour [ self -> contour_count ]		5622982	0					
ANR	5622987	IdentifierDeclType	int		5622982	0					
ANR	5622988	Identifier	contour_beg		5622982	1					
ANR	5622989	AssignmentExpression	contour_beg = self -> contour [ self -> contour_count ]		5622982	2		=			
ANR	5622990	Identifier	contour_beg		5622982	0					
ANR	5622991	ArrayIndexing	self -> contour [ self -> contour_count ]		5622982	1					
ANR	5622992	PtrMemberAccess	self -> contour		5622982	0					
ANR	5622993	Identifier	self		5622982	0					
ANR	5622994	Identifier	contour		5622982	1					
ANR	5622995	PtrMemberAccess	self -> contour_count		5622982	1					
ANR	5622996	Identifier	self		5622982	0					
ANR	5622997	Identifier	contour_count		5622982	1					
ANR	5622998	IdentifierDecl	i		5622982	1					
ANR	5622999	IdentifierDeclType	int		5622982	0					
ANR	5623000	Identifier	i		5622982	1					
ANR	5623001	IfStatement	if ( contour_beg >= self -> pole_count - npoles )		5622982	1					
ANR	5623002	Condition	contour_beg >= self -> pole_count - npoles	1135:8:47183:47222	5622982	0	True				
ANR	5623003	RelationalExpression	contour_beg >= self -> pole_count - npoles		5622982	0		>=			
ANR	5623004	Identifier	contour_beg		5622982	0					
ANR	5623005	AdditiveExpression	self -> pole_count - npoles		5622982	1		-			
ANR	5623006	PtrMemberAccess	self -> pole_count		5622982	0					
ANR	5623007	Identifier	self		5622982	0					
ANR	5623008	Identifier	pole_count		5622982	1					
ANR	5623009	Identifier	npoles		5622982	1					
ANR	5623010	ReturnStatement	return ;	1136:8:47233:47239	5622982	1	True				
ANR	5623011	ForStatement	for ( i = self -> pole_count - npoles - 1 ; i < self -> pole_count - 1 ; i ++ )		5622982	2					
ANR	5623012	ForInit	i = self -> pole_count - npoles - 1 ;	1137:9:47250:47283	5622982	0	True				
ANR	5623013	AssignmentExpression	i = self -> pole_count - npoles - 1		5622982	0		=			
ANR	5623014	Identifier	i		5622982	0					
ANR	5623015	AdditiveExpression	self -> pole_count - npoles - 1		5622982	1		-			
ANR	5623016	PtrMemberAccess	self -> pole_count		5622982	0					
ANR	5623017	Identifier	self		5622982	0					
ANR	5623018	Identifier	pole_count		5622982	1					
ANR	5623019	AdditiveExpression	npoles - 1		5622982	1		-			
ANR	5623020	Identifier	npoles		5622982	0					
ANR	5623021	PrimaryExpression	1		5622982	1					
ANR	5623022	Condition	i < self -> pole_count - 1	1137:44:47285:47308	5622982	1	True				
ANR	5623023	RelationalExpression	i < self -> pole_count - 1		5622982	0		<			
ANR	5623024	Identifier	i		5622982	0					
ANR	5623025	AdditiveExpression	self -> pole_count - 1		5622982	1		-			
ANR	5623026	PtrMemberAccess	self -> pole_count		5622982	0					
ANR	5623027	Identifier	self		5622982	0					
ANR	5623028	Identifier	pole_count		5622982	1					
ANR	5623029	PrimaryExpression	1		5622982	1					
ANR	5623030	PostIncDecOperationExpression	i ++	1137:70:47311:47313	5622982	2	True				
ANR	5623031	Identifier	i		5622982	0					
ANR	5623032	IncDec	++		5622982	1					
ANR	5623033	IfStatement	if ( self -> pole [ i ] . ax != self -> cx || self -> pole [ i ] . ay != self -> cy )		5622982	3					
ANR	5623034	Condition	self -> pole [ i ] . ax != self -> cx || self -> pole [ i ] . ay != self -> cy	1138:12:47328:47387	5622982	0	True				
ANR	5623035	OrExpression	self -> pole [ i ] . ax != self -> cx || self -> pole [ i ] . ay != self -> cy		5622982	0		||			
ANR	5623036	EqualityExpression	self -> pole [ i ] . ax != self -> cx		5622982	0		!=			
ANR	5623037	MemberAccess	self -> pole [ i ] . ax		5622982	0					
ANR	5623038	ArrayIndexing	self -> pole [ i ]		5622982	0					
ANR	5623039	PtrMemberAccess	self -> pole		5622982	0					
ANR	5623040	Identifier	self		5622982	0					
ANR	5623041	Identifier	pole		5622982	1					
ANR	5623042	Identifier	i		5622982	1					
ANR	5623043	Identifier	ax		5622982	1					
ANR	5623044	PtrMemberAccess	self -> cx		5622982	1					
ANR	5623045	Identifier	self		5622982	0					
ANR	5623046	Identifier	cx		5622982	1					
ANR	5623047	EqualityExpression	self -> pole [ i ] . ay != self -> cy		5622982	1		!=			
ANR	5623048	MemberAccess	self -> pole [ i ] . ay		5622982	0					
ANR	5623049	ArrayIndexing	self -> pole [ i ]		5622982	0					
ANR	5623050	PtrMemberAccess	self -> pole		5622982	0					
ANR	5623051	Identifier	self		5622982	0					
ANR	5623052	Identifier	pole		5622982	1					
ANR	5623053	Identifier	i		5622982	1					
ANR	5623054	Identifier	ay		5622982	1					
ANR	5623055	PtrMemberAccess	self -> cy		5622982	1					
ANR	5623056	Identifier	self		5622982	0					
ANR	5623057	Identifier	cy		5622982	1					
ANR	5623058	ReturnStatement	return ;	1139:12:47402:47408	5622982	1	True				
ANR	5623059	ExpressionStatement	self -> pole_count -= npoles	1140:4:47414:47440	5622982	3	True				
ANR	5623060	AssignmentExpression	self -> pole_count -= npoles		5622982	0		-=			
ANR	5623061	PtrMemberAccess	self -> pole_count		5622982	0					
ANR	5623062	Identifier	self		5622982	0					
ANR	5623063	Identifier	pole_count		5622982	1					
ANR	5623064	Identifier	npoles		5622982	1					
ANR	5623065	ReturnType	static inline void		5622982	1					
ANR	5623066	Identifier	t1_hinter__skip_degenerate_segnment		5622982	2					
ANR	5623067	ParameterList	"t1_hinter * self , int npoles"		5622982	3					
ANR	5623068	Parameter	t1_hinter * self	1131:55:47005:47020	5622982	0	True				
ANR	5623069	ParameterType	t1_hinter *		5622982	0					
ANR	5623070	Identifier	self		5622982	1					
ANR	5623071	Parameter	int npoles	1131:73:47023:47032	5622982	1	True				
ANR	5623072	ParameterType	int		5622982	0					
ANR	5623073	Identifier	npoles		5622982	1					
ANR	5623074	CFGEntryNode	ENTRY		5622982		True				
ANR	5623075	CFGExitNode	EXIT		5622982		True				
ANR	5623076	Symbol	* self -> contour		5622982						
ANR	5623077	Symbol	self -> contour_count		5622982						
ANR	5623078	Symbol	* self -> pole		5622982						
ANR	5623079	Symbol	self -> pole [ i ] . ax		5622982						
ANR	5623080	Symbol	* * self		5622982						
ANR	5623081	Symbol	self -> pole_count		5622982						
ANR	5623082	Symbol	* self		5622982						
ANR	5623083	Symbol	self -> pole [ i ] . ay		5622982						
ANR	5623084	Symbol	i		5622982						
ANR	5623085	Symbol	self -> contour		5622982						
ANR	5623086	Symbol	* i		5622982						
ANR	5623087	Symbol	contour_beg		5622982						
ANR	5623088	Symbol	self		5622982						
ANR	5623089	Symbol	self -> cx		5622982						
ANR	5623090	Symbol	self -> pole		5622982						
ANR	5623091	Symbol	self -> cy		5622982						
ANR	5623092	Symbol	npoles		5622982						
ANR	5623093	Symbol	* self -> contour_count		5622982						
ANR	5623094	Function	t1_hinter__rlineto	1143:0:47445:48048							
ANR	5623095	FunctionDef	"t1_hinter__rlineto (t1_hinter * self , fixed xx , fixed yy)"		5623094	0					
ANR	5623096	CompoundStatement		1144:0:47506:48048	5623094	0					
ANR	5623097	ExpressionStatement	"t1_hinter__adjust_matrix_precision ( self , xx , yy )"	1145:4:47512:47560	5623094	0	True				
ANR	5623098	CallExpression	"t1_hinter__adjust_matrix_precision ( self , xx , yy )"		5623094	0					
ANR	5623099	Callee	t1_hinter__adjust_matrix_precision		5623094	0					
ANR	5623100	Identifier	t1_hinter__adjust_matrix_precision		5623094	0					
ANR	5623101	ArgumentList	self		5623094	1					
ANR	5623102	Argument	self		5623094	0					
ANR	5623103	Identifier	self		5623094	0					
ANR	5623104	Argument	xx		5623094	1					
ANR	5623105	Identifier	xx		5623094	0					
ANR	5623106	Argument	yy		5623094	2					
ANR	5623107	Identifier	yy		5623094	0					
ANR	5623108	IfStatement	if ( self -> pass_through )		5623094	1					
ANR	5623109	Condition	self -> pass_through	1146:8:47570:47587	5623094	0	True				
ANR	5623110	PtrMemberAccess	self -> pass_through		5623094	0					
ANR	5623111	Identifier	self		5623094	0					
ANR	5623112	Identifier	pass_through		5623094	1					
ANR	5623113	CompoundStatement		6:8:193:205	5623094	1					
ANR	5623114	IdentifierDeclStatement	t1_glyph_space_coord gx = self -> cx += xx ;	1147:8:47600:47640	5623094	0	True				
ANR	5623115	IdentifierDecl	gx = self -> cx += xx		5623094	0					
ANR	5623116	IdentifierDeclType	t1_glyph_space_coord		5623094	0					
ANR	5623117	Identifier	gx		5623094	1					
ANR	5623118	AssignmentExpression	gx = self -> cx += xx		5623094	2		=			
ANR	5623119	Identifier	gx		5623094	0					
ANR	5623120	AssignmentExpression	self -> cx += xx		5623094	1		+=			
ANR	5623121	PtrMemberAccess	self -> cx		5623094	0					
ANR	5623122	Identifier	self		5623094	0					
ANR	5623123	Identifier	cx		5623094	1					
ANR	5623124	Identifier	xx		5623094	1					
ANR	5623125	IdentifierDeclStatement	t1_glyph_space_coord gy = self -> cy += yy ;	1148:8:47650:47690	5623094	1	True				
ANR	5623126	IdentifierDecl	gy = self -> cy += yy		5623094	0					
ANR	5623127	IdentifierDeclType	t1_glyph_space_coord		5623094	0					
ANR	5623128	Identifier	gy		5623094	1					
ANR	5623129	AssignmentExpression	gy = self -> cy += yy		5623094	2		=			
ANR	5623130	Identifier	gy		5623094	0					
ANR	5623131	AssignmentExpression	self -> cy += yy		5623094	1		+=			
ANR	5623132	PtrMemberAccess	self -> cy		5623094	0					
ANR	5623133	Identifier	self		5623094	0					
ANR	5623134	Identifier	cy		5623094	1					
ANR	5623135	Identifier	yy		5623094	1					
ANR	5623136	IdentifierDeclStatement	"fixed fx , fy ;"	1149:8:47700:47712	5623094	2	True				
ANR	5623137	IdentifierDecl	fx		5623094	0					
ANR	5623138	IdentifierDeclType	fixed		5623094	0					
ANR	5623139	Identifier	fx		5623094	1					
ANR	5623140	IdentifierDecl	fy		5623094	1					
ANR	5623141	IdentifierDeclType	fixed		5623094	0					
ANR	5623142	Identifier	fy		5623094	1					
ANR	5623143	ExpressionStatement	self -> path_opened = true	1151:8:47723:47747	5623094	3	True				
ANR	5623144	AssignmentExpression	self -> path_opened = true		5623094	0		=			
ANR	5623145	PtrMemberAccess	self -> path_opened		5623094	0					
ANR	5623146	Identifier	self		5623094	0					
ANR	5623147	Identifier	path_opened		5623094	1					
ANR	5623148	Identifier	true		5623094	1					
ANR	5623149	ExpressionStatement	"g2d ( self , gx , gy , & fx , & fy )"	1152:8:47757:47784	5623094	4	True				
ANR	5623150	CallExpression	"g2d ( self , gx , gy , & fx , & fy )"		5623094	0					
ANR	5623151	Callee	g2d		5623094	0					
ANR	5623152	Identifier	g2d		5623094	0					
ANR	5623153	ArgumentList	self		5623094	1					
ANR	5623154	Argument	self		5623094	0					
ANR	5623155	Identifier	self		5623094	0					
ANR	5623156	Argument	gx		5623094	1					
ANR	5623157	Identifier	gx		5623094	0					
ANR	5623158	Argument	gy		5623094	2					
ANR	5623159	Identifier	gy		5623094	0					
ANR	5623160	Argument	& fx		5623094	3					
ANR	5623161	UnaryOperationExpression	& fx		5623094	0					
ANR	5623162	UnaryOperator	&		5623094	0					
ANR	5623163	Identifier	fx		5623094	1					
ANR	5623164	Argument	& fy		5623094	4					
ANR	5623165	UnaryOperationExpression	& fy		5623094	0					
ANR	5623166	UnaryOperator	&		5623094	0					
ANR	5623167	Identifier	fy		5623094	1					
ANR	5623168	ReturnStatement	"return gx_path_add_line ( self -> output_path , fx , fy ) ;"	1153:8:47794:47844	5623094	5	True				
ANR	5623169	CallExpression	"gx_path_add_line ( self -> output_path , fx , fy )"		5623094	0					
ANR	5623170	Callee	gx_path_add_line		5623094	0					
ANR	5623171	Identifier	gx_path_add_line		5623094	0					
ANR	5623172	ArgumentList	self -> output_path		5623094	1					
ANR	5623173	Argument	self -> output_path		5623094	0					
ANR	5623174	PtrMemberAccess	self -> output_path		5623094	0					
ANR	5623175	Identifier	self		5623094	0					
ANR	5623176	Identifier	output_path		5623094	1					
ANR	5623177	Argument	fx		5623094	1					
ANR	5623178	Identifier	fx		5623094	0					
ANR	5623179	Argument	fy		5623094	2					
ANR	5623180	Identifier	fy		5623094	0					
ANR	5623181	ElseStatement	else		5623094	0					
ANR	5623182	CompoundStatement		12:8:360:413	5623094	0					
ANR	5623183	IdentifierDeclStatement	"int code = t1_hinter__add_pole ( self , xx , yy , oncurve ) ;"	1155:8:47867:47920	5623094	0	True				
ANR	5623184	IdentifierDecl	"code = t1_hinter__add_pole ( self , xx , yy , oncurve )"		5623094	0					
ANR	5623185	IdentifierDeclType	int		5623094	0					
ANR	5623186	Identifier	code		5623094	1					
ANR	5623187	AssignmentExpression	"code = t1_hinter__add_pole ( self , xx , yy , oncurve )"		5623094	2		=			
ANR	5623188	Identifier	code		5623094	0					
ANR	5623189	CallExpression	"t1_hinter__add_pole ( self , xx , yy , oncurve )"		5623094	1					
ANR	5623190	Callee	t1_hinter__add_pole		5623094	0					
ANR	5623191	Identifier	t1_hinter__add_pole		5623094	0					
ANR	5623192	ArgumentList	self		5623094	1					
ANR	5623193	Argument	self		5623094	0					
ANR	5623194	Identifier	self		5623094	0					
ANR	5623195	Argument	xx		5623094	1					
ANR	5623196	Identifier	xx		5623094	0					
ANR	5623197	Argument	yy		5623094	2					
ANR	5623198	Identifier	yy		5623094	0					
ANR	5623199	Argument	oncurve		5623094	3					
ANR	5623200	Identifier	oncurve		5623094	0					
ANR	5623201	IfStatement	if ( code < 0 )		5623094	1					
ANR	5623202	Condition	code < 0	1157:12:47935:47942	5623094	0	True				
ANR	5623203	RelationalExpression	code < 0		5623094	0		<			
ANR	5623204	Identifier	code		5623094	0					
ANR	5623205	PrimaryExpression	0		5623094	1					
ANR	5623206	ReturnStatement	return code ;	1158:12:47957:47968	5623094	1	True				
ANR	5623207	Identifier	code		5623094	0					
ANR	5623208	ExpressionStatement	"t1_hinter__skip_degenerate_segnment ( self , 1 )"	1159:8:47978:48022	5623094	2	True				
ANR	5623209	CallExpression	"t1_hinter__skip_degenerate_segnment ( self , 1 )"		5623094	0					
ANR	5623210	Callee	t1_hinter__skip_degenerate_segnment		5623094	0					
ANR	5623211	Identifier	t1_hinter__skip_degenerate_segnment		5623094	0					
ANR	5623212	ArgumentList	self		5623094	1					
ANR	5623213	Argument	self		5623094	0					
ANR	5623214	Identifier	self		5623094	0					
ANR	5623215	Argument	1		5623094	1					
ANR	5623216	PrimaryExpression	1		5623094	0					
ANR	5623217	ReturnStatement	return 0 ;	1160:8:48032:48040	5623094	3	True				
ANR	5623218	PrimaryExpression	0		5623094	0					
ANR	5623219	ReturnType	int		5623094	1					
ANR	5623220	Identifier	t1_hinter__rlineto		5623094	2					
ANR	5623221	ParameterList	"t1_hinter * self , fixed xx , fixed yy"		5623094	3					
ANR	5623222	Parameter	t1_hinter * self	1143:23:47468:47483	5623094	0	True				
ANR	5623223	ParameterType	t1_hinter *		5623094	0					
ANR	5623224	Identifier	self		5623094	1					
ANR	5623225	Parameter	fixed xx	1143:41:47486:47493	5623094	1	True				
ANR	5623226	ParameterType	fixed		5623094	0					
ANR	5623227	Identifier	xx		5623094	1					
ANR	5623228	Parameter	fixed yy	1143:51:47496:47503	5623094	2	True				
ANR	5623229	ParameterType	fixed		5623094	0					
ANR	5623230	Identifier	yy		5623094	1					
ANR	5623231	CFGEntryNode	ENTRY		5623094		True				
ANR	5623232	CFGExitNode	EXIT		5623094		True				
ANR	5623233	Symbol	xx		5623094						
ANR	5623234	Symbol	yy		5623094						
ANR	5623235	Symbol	oncurve		5623094						
ANR	5623236	Symbol	code		5623094						
ANR	5623237	Symbol	self -> path_opened		5623094						
ANR	5623238	Symbol	* self		5623094						
ANR	5623239	Symbol	self -> pass_through		5623094						
ANR	5623240	Symbol	gx		5623094						
ANR	5623241	Symbol	gy		5623094						
ANR	5623242	Symbol	fx		5623094						
ANR	5623243	Symbol	fy		5623094						
ANR	5623244	Symbol	t1_hinter__add_pole		5623094						
ANR	5623245	Symbol	gx_path_add_line		5623094						
ANR	5623246	Symbol	true		5623094						
ANR	5623247	Symbol	self		5623094						
ANR	5623248	Symbol	self -> cx		5623094						
ANR	5623249	Symbol	self -> cy		5623094						
ANR	5623250	Symbol	& fy		5623094						
ANR	5623251	Symbol	self -> output_path		5623094						
ANR	5623252	Symbol	& fx		5623094						
ANR	5623253	Function	t1_hinter__rcurveto	1164:0:48051:49392							
ANR	5623254	FunctionDef	"t1_hinter__rcurveto (t1_hinter * self , fixed xx0 , fixed yy0 , fixed xx1 , fixed yy1 , fixed xx2 , fixed yy2)"		5623253	0					
ANR	5623255	CompoundStatement		1165:0:48159:49392	5623253	0					
ANR	5623256	ExpressionStatement	"t1_hinter__adjust_matrix_precision ( self , xx0 , yy0 )"	1166:4:48165:48215	5623253	0	True				
ANR	5623257	CallExpression	"t1_hinter__adjust_matrix_precision ( self , xx0 , yy0 )"		5623253	0					
ANR	5623258	Callee	t1_hinter__adjust_matrix_precision		5623253	0					
ANR	5623259	Identifier	t1_hinter__adjust_matrix_precision		5623253	0					
ANR	5623260	ArgumentList	self		5623253	1					
ANR	5623261	Argument	self		5623253	0					
ANR	5623262	Identifier	self		5623253	0					
ANR	5623263	Argument	xx0		5623253	1					
ANR	5623264	Identifier	xx0		5623253	0					
ANR	5623265	Argument	yy0		5623253	2					
ANR	5623266	Identifier	yy0		5623253	0					
ANR	5623267	ExpressionStatement	"t1_hinter__adjust_matrix_precision ( self , xx1 , yy1 )"	1167:4:48221:48271	5623253	1	True				
ANR	5623268	CallExpression	"t1_hinter__adjust_matrix_precision ( self , xx1 , yy1 )"		5623253	0					
ANR	5623269	Callee	t1_hinter__adjust_matrix_precision		5623253	0					
ANR	5623270	Identifier	t1_hinter__adjust_matrix_precision		5623253	0					
ANR	5623271	ArgumentList	self		5623253	1					
ANR	5623272	Argument	self		5623253	0					
ANR	5623273	Identifier	self		5623253	0					
ANR	5623274	Argument	xx1		5623253	1					
ANR	5623275	Identifier	xx1		5623253	0					
ANR	5623276	Argument	yy1		5623253	2					
ANR	5623277	Identifier	yy1		5623253	0					
ANR	5623278	ExpressionStatement	"t1_hinter__adjust_matrix_precision ( self , xx2 , yy2 )"	1168:4:48277:48327	5623253	2	True				
ANR	5623279	CallExpression	"t1_hinter__adjust_matrix_precision ( self , xx2 , yy2 )"		5623253	0					
ANR	5623280	Callee	t1_hinter__adjust_matrix_precision		5623253	0					
ANR	5623281	Identifier	t1_hinter__adjust_matrix_precision		5623253	0					
ANR	5623282	ArgumentList	self		5623253	1					
ANR	5623283	Argument	self		5623253	0					
ANR	5623284	Identifier	self		5623253	0					
ANR	5623285	Argument	xx2		5623253	1					
ANR	5623286	Identifier	xx2		5623253	0					
ANR	5623287	Argument	yy2		5623253	2					
ANR	5623288	Identifier	yy2		5623253	0					
ANR	5623289	IfStatement	if ( self -> pass_through )		5623253	3					
ANR	5623290	Condition	self -> pass_through	1169:8:48337:48354	5623253	0	True				
ANR	5623291	PtrMemberAccess	self -> pass_through		5623253	0					
ANR	5623292	Identifier	self		5623253	0					
ANR	5623293	Identifier	pass_through		5623253	1					
ANR	5623294	CompoundStatement		12:8:519:553	5623253	1					
ANR	5623295	IdentifierDeclStatement	t1_glyph_space_coord gx0 = self -> cx += xx0 ;	1170:8:48367:48409	5623253	0	True				
ANR	5623296	IdentifierDecl	gx0 = self -> cx += xx0		5623253	0					
ANR	5623297	IdentifierDeclType	t1_glyph_space_coord		5623253	0					
ANR	5623298	Identifier	gx0		5623253	1					
ANR	5623299	AssignmentExpression	gx0 = self -> cx += xx0		5623253	2		=			
ANR	5623300	Identifier	gx0		5623253	0					
ANR	5623301	AssignmentExpression	self -> cx += xx0		5623253	1		+=			
ANR	5623302	PtrMemberAccess	self -> cx		5623253	0					
ANR	5623303	Identifier	self		5623253	0					
ANR	5623304	Identifier	cx		5623253	1					
ANR	5623305	Identifier	xx0		5623253	1					
ANR	5623306	IdentifierDeclStatement	t1_glyph_space_coord gy0 = self -> cy += yy0 ;	1171:8:48419:48461	5623253	1	True				
ANR	5623307	IdentifierDecl	gy0 = self -> cy += yy0		5623253	0					
ANR	5623308	IdentifierDeclType	t1_glyph_space_coord		5623253	0					
ANR	5623309	Identifier	gy0		5623253	1					
ANR	5623310	AssignmentExpression	gy0 = self -> cy += yy0		5623253	2		=			
ANR	5623311	Identifier	gy0		5623253	0					
ANR	5623312	AssignmentExpression	self -> cy += yy0		5623253	1		+=			
ANR	5623313	PtrMemberAccess	self -> cy		5623253	0					
ANR	5623314	Identifier	self		5623253	0					
ANR	5623315	Identifier	cy		5623253	1					
ANR	5623316	Identifier	yy0		5623253	1					
ANR	5623317	IdentifierDeclStatement	t1_glyph_space_coord gx1 = self -> cx += xx1 ;	1172:8:48471:48513	5623253	2	True				
ANR	5623318	IdentifierDecl	gx1 = self -> cx += xx1		5623253	0					
ANR	5623319	IdentifierDeclType	t1_glyph_space_coord		5623253	0					
ANR	5623320	Identifier	gx1		5623253	1					
ANR	5623321	AssignmentExpression	gx1 = self -> cx += xx1		5623253	2		=			
ANR	5623322	Identifier	gx1		5623253	0					
ANR	5623323	AssignmentExpression	self -> cx += xx1		5623253	1		+=			
ANR	5623324	PtrMemberAccess	self -> cx		5623253	0					
ANR	5623325	Identifier	self		5623253	0					
ANR	5623326	Identifier	cx		5623253	1					
ANR	5623327	Identifier	xx1		5623253	1					
ANR	5623328	IdentifierDeclStatement	t1_glyph_space_coord gy1 = self -> cy += yy1 ;	1173:8:48523:48565	5623253	3	True				
ANR	5623329	IdentifierDecl	gy1 = self -> cy += yy1		5623253	0					
ANR	5623330	IdentifierDeclType	t1_glyph_space_coord		5623253	0					
ANR	5623331	Identifier	gy1		5623253	1					
ANR	5623332	AssignmentExpression	gy1 = self -> cy += yy1		5623253	2		=			
ANR	5623333	Identifier	gy1		5623253	0					
ANR	5623334	AssignmentExpression	self -> cy += yy1		5623253	1		+=			
ANR	5623335	PtrMemberAccess	self -> cy		5623253	0					
ANR	5623336	Identifier	self		5623253	0					
ANR	5623337	Identifier	cy		5623253	1					
ANR	5623338	Identifier	yy1		5623253	1					
ANR	5623339	IdentifierDeclStatement	t1_glyph_space_coord gx2 = self -> cx += xx2 ;	1174:8:48575:48617	5623253	4	True				
ANR	5623340	IdentifierDecl	gx2 = self -> cx += xx2		5623253	0					
ANR	5623341	IdentifierDeclType	t1_glyph_space_coord		5623253	0					
ANR	5623342	Identifier	gx2		5623253	1					
ANR	5623343	AssignmentExpression	gx2 = self -> cx += xx2		5623253	2		=			
ANR	5623344	Identifier	gx2		5623253	0					
ANR	5623345	AssignmentExpression	self -> cx += xx2		5623253	1		+=			
ANR	5623346	PtrMemberAccess	self -> cx		5623253	0					
ANR	5623347	Identifier	self		5623253	0					
ANR	5623348	Identifier	cx		5623253	1					
ANR	5623349	Identifier	xx2		5623253	1					
ANR	5623350	IdentifierDeclStatement	t1_glyph_space_coord gy2 = self -> cy += yy2 ;	1175:8:48627:48669	5623253	5	True				
ANR	5623351	IdentifierDecl	gy2 = self -> cy += yy2		5623253	0					
ANR	5623352	IdentifierDeclType	t1_glyph_space_coord		5623253	0					
ANR	5623353	Identifier	gy2		5623253	1					
ANR	5623354	AssignmentExpression	gy2 = self -> cy += yy2		5623253	2		=			
ANR	5623355	Identifier	gy2		5623253	0					
ANR	5623356	AssignmentExpression	self -> cy += yy2		5623253	1		+=			
ANR	5623357	PtrMemberAccess	self -> cy		5623253	0					
ANR	5623358	Identifier	self		5623253	0					
ANR	5623359	Identifier	cy		5623253	1					
ANR	5623360	Identifier	yy2		5623253	1					
ANR	5623361	IdentifierDeclStatement	"fixed fx0 , fy0 , fx1 , fy1 , fx2 , fy2 ;"	1176:8:48679:48713	5623253	6	True				
ANR	5623362	IdentifierDecl	fx0		5623253	0					
ANR	5623363	IdentifierDeclType	fixed		5623253	0					
ANR	5623364	Identifier	fx0		5623253	1					
ANR	5623365	IdentifierDecl	fy0		5623253	1					
ANR	5623366	IdentifierDeclType	fixed		5623253	0					
ANR	5623367	Identifier	fy0		5623253	1					
ANR	5623368	IdentifierDecl	fx1		5623253	2					
ANR	5623369	IdentifierDeclType	fixed		5623253	0					
ANR	5623370	Identifier	fx1		5623253	1					
ANR	5623371	IdentifierDecl	fy1		5623253	3					
ANR	5623372	IdentifierDeclType	fixed		5623253	0					
ANR	5623373	Identifier	fy1		5623253	1					
ANR	5623374	IdentifierDecl	fx2		5623253	4					
ANR	5623375	IdentifierDeclType	fixed		5623253	0					
ANR	5623376	Identifier	fx2		5623253	1					
ANR	5623377	IdentifierDecl	fy2		5623253	5					
ANR	5623378	IdentifierDeclType	fixed		5623253	0					
ANR	5623379	Identifier	fy2		5623253	1					
ANR	5623380	ExpressionStatement	self -> path_opened = true	1178:8:48724:48748	5623253	7	True				
ANR	5623381	AssignmentExpression	self -> path_opened = true		5623253	0		=			
ANR	5623382	PtrMemberAccess	self -> path_opened		5623253	0					
ANR	5623383	Identifier	self		5623253	0					
ANR	5623384	Identifier	path_opened		5623253	1					
ANR	5623385	Identifier	true		5623253	1					
ANR	5623386	ExpressionStatement	"g2d ( self , gx0 , gy0 , & fx0 , & fy0 )"	1179:8:48758:48789	5623253	8	True				
ANR	5623387	CallExpression	"g2d ( self , gx0 , gy0 , & fx0 , & fy0 )"		5623253	0					
ANR	5623388	Callee	g2d		5623253	0					
ANR	5623389	Identifier	g2d		5623253	0					
ANR	5623390	ArgumentList	self		5623253	1					
ANR	5623391	Argument	self		5623253	0					
ANR	5623392	Identifier	self		5623253	0					
ANR	5623393	Argument	gx0		5623253	1					
ANR	5623394	Identifier	gx0		5623253	0					
ANR	5623395	Argument	gy0		5623253	2					
ANR	5623396	Identifier	gy0		5623253	0					
ANR	5623397	Argument	& fx0		5623253	3					
ANR	5623398	UnaryOperationExpression	& fx0		5623253	0					
ANR	5623399	UnaryOperator	&		5623253	0					
ANR	5623400	Identifier	fx0		5623253	1					
ANR	5623401	Argument	& fy0		5623253	4					
ANR	5623402	UnaryOperationExpression	& fy0		5623253	0					
ANR	5623403	UnaryOperator	&		5623253	0					
ANR	5623404	Identifier	fy0		5623253	1					
ANR	5623405	ExpressionStatement	"g2d ( self , gx1 , gy1 , & fx1 , & fy1 )"	1180:8:48799:48830	5623253	9	True				
ANR	5623406	CallExpression	"g2d ( self , gx1 , gy1 , & fx1 , & fy1 )"		5623253	0					
ANR	5623407	Callee	g2d		5623253	0					
ANR	5623408	Identifier	g2d		5623253	0					
ANR	5623409	ArgumentList	self		5623253	1					
ANR	5623410	Argument	self		5623253	0					
ANR	5623411	Identifier	self		5623253	0					
ANR	5623412	Argument	gx1		5623253	1					
ANR	5623413	Identifier	gx1		5623253	0					
ANR	5623414	Argument	gy1		5623253	2					
ANR	5623415	Identifier	gy1		5623253	0					
ANR	5623416	Argument	& fx1		5623253	3					
ANR	5623417	UnaryOperationExpression	& fx1		5623253	0					
ANR	5623418	UnaryOperator	&		5623253	0					
ANR	5623419	Identifier	fx1		5623253	1					
ANR	5623420	Argument	& fy1		5623253	4					
ANR	5623421	UnaryOperationExpression	& fy1		5623253	0					
ANR	5623422	UnaryOperator	&		5623253	0					
ANR	5623423	Identifier	fy1		5623253	1					
ANR	5623424	ExpressionStatement	"g2d ( self , gx2 , gy2 , & fx2 , & fy2 )"	1181:8:48840:48871	5623253	10	True				
ANR	5623425	CallExpression	"g2d ( self , gx2 , gy2 , & fx2 , & fy2 )"		5623253	0					
ANR	5623426	Callee	g2d		5623253	0					
ANR	5623427	Identifier	g2d		5623253	0					
ANR	5623428	ArgumentList	self		5623253	1					
ANR	5623429	Argument	self		5623253	0					
ANR	5623430	Identifier	self		5623253	0					
ANR	5623431	Argument	gx2		5623253	1					
ANR	5623432	Identifier	gx2		5623253	0					
ANR	5623433	Argument	gy2		5623253	2					
ANR	5623434	Identifier	gy2		5623253	0					
ANR	5623435	Argument	& fx2		5623253	3					
ANR	5623436	UnaryOperationExpression	& fx2		5623253	0					
ANR	5623437	UnaryOperator	&		5623253	0					
ANR	5623438	Identifier	fx2		5623253	1					
ANR	5623439	Argument	& fy2		5623253	4					
ANR	5623440	UnaryOperationExpression	& fy2		5623253	0					
ANR	5623441	UnaryOperator	&		5623253	0					
ANR	5623442	Identifier	fy2		5623253	1					
ANR	5623443	ReturnStatement	"return gx_path_add_curve ( self -> output_path , fx0 , fy0 , fx1 , fy1 , fx2 , fy2 ) ;"	1182:8:48881:48954	5623253	11	True				
ANR	5623444	CallExpression	"gx_path_add_curve ( self -> output_path , fx0 , fy0 , fx1 , fy1 , fx2 , fy2 )"		5623253	0					
ANR	5623445	Callee	gx_path_add_curve		5623253	0					
ANR	5623446	Identifier	gx_path_add_curve		5623253	0					
ANR	5623447	ArgumentList	self -> output_path		5623253	1					
ANR	5623448	Argument	self -> output_path		5623253	0					
ANR	5623449	PtrMemberAccess	self -> output_path		5623253	0					
ANR	5623450	Identifier	self		5623253	0					
ANR	5623451	Identifier	output_path		5623253	1					
ANR	5623452	Argument	fx0		5623253	1					
ANR	5623453	Identifier	fx0		5623253	0					
ANR	5623454	Argument	fy0		5623253	2					
ANR	5623455	Identifier	fy0		5623253	0					
ANR	5623456	Argument	fx1		5623253	3					
ANR	5623457	Identifier	fx1		5623253	0					
ANR	5623458	Argument	fy1		5623253	4					
ANR	5623459	Identifier	fy1		5623253	0					
ANR	5623460	Argument	fx2		5623253	5					
ANR	5623461	Identifier	fx2		5623253	0					
ANR	5623462	Argument	fy2		5623253	6					
ANR	5623463	Identifier	fy2		5623253	0					
ANR	5623464	ElseStatement	else		5623253	0					
ANR	5623465	CompoundStatement		20:8:817:825	5623253	0					
ANR	5623466	IdentifierDeclStatement	int code ;	1184:8:48977:48985	5623253	0	True				
ANR	5623467	IdentifierDecl	code		5623253	0					
ANR	5623468	IdentifierDeclType	int		5623253	0					
ANR	5623469	Identifier	code		5623253	1					
ANR	5623470	ExpressionStatement	"code = t1_hinter__add_pole ( self , xx0 , yy0 , offcurve )"	1186:8:48996:49048	5623253	1	True				
ANR	5623471	AssignmentExpression	"code = t1_hinter__add_pole ( self , xx0 , yy0 , offcurve )"		5623253	0		=			
ANR	5623472	Identifier	code		5623253	0					
ANR	5623473	CallExpression	"t1_hinter__add_pole ( self , xx0 , yy0 , offcurve )"		5623253	1					
ANR	5623474	Callee	t1_hinter__add_pole		5623253	0					
ANR	5623475	Identifier	t1_hinter__add_pole		5623253	0					
ANR	5623476	ArgumentList	self		5623253	1					
ANR	5623477	Argument	self		5623253	0					
ANR	5623478	Identifier	self		5623253	0					
ANR	5623479	Argument	xx0		5623253	1					
ANR	5623480	Identifier	xx0		5623253	0					
ANR	5623481	Argument	yy0		5623253	2					
ANR	5623482	Identifier	yy0		5623253	0					
ANR	5623483	Argument	offcurve		5623253	3					
ANR	5623484	Identifier	offcurve		5623253	0					
ANR	5623485	IfStatement	if ( code < 0 )		5623253	2					
ANR	5623486	Condition	code < 0	1187:12:49062:49069	5623253	0	True				
ANR	5623487	RelationalExpression	code < 0		5623253	0		<			
ANR	5623488	Identifier	code		5623253	0					
ANR	5623489	PrimaryExpression	0		5623253	1					
ANR	5623490	ReturnStatement	return code ;	1188:12:49084:49095	5623253	1	True				
ANR	5623491	Identifier	code		5623253	0					
ANR	5623492	ExpressionStatement	"code = t1_hinter__add_pole ( self , xx1 , yy1 , offcurve )"	1189:8:49105:49157	5623253	3	True				
ANR	5623493	AssignmentExpression	"code = t1_hinter__add_pole ( self , xx1 , yy1 , offcurve )"		5623253	0		=			
ANR	5623494	Identifier	code		5623253	0					
ANR	5623495	CallExpression	"t1_hinter__add_pole ( self , xx1 , yy1 , offcurve )"		5623253	1					
ANR	5623496	Callee	t1_hinter__add_pole		5623253	0					
ANR	5623497	Identifier	t1_hinter__add_pole		5623253	0					
ANR	5623498	ArgumentList	self		5623253	1					
ANR	5623499	Argument	self		5623253	0					
ANR	5623500	Identifier	self		5623253	0					
ANR	5623501	Argument	xx1		5623253	1					
ANR	5623502	Identifier	xx1		5623253	0					
ANR	5623503	Argument	yy1		5623253	2					
ANR	5623504	Identifier	yy1		5623253	0					
ANR	5623505	Argument	offcurve		5623253	3					
ANR	5623506	Identifier	offcurve		5623253	0					
ANR	5623507	IfStatement	if ( code < 0 )		5623253	4					
ANR	5623508	Condition	code < 0	1190:12:49171:49178	5623253	0	True				
ANR	5623509	RelationalExpression	code < 0		5623253	0		<			
ANR	5623510	Identifier	code		5623253	0					
ANR	5623511	PrimaryExpression	0		5623253	1					
ANR	5623512	ReturnStatement	return code ;	1191:12:49193:49204	5623253	1	True				
ANR	5623513	Identifier	code		5623253	0					
ANR	5623514	ExpressionStatement	"code = t1_hinter__add_pole ( self , xx2 , yy2 , oncurve )"	1192:8:49214:49265	5623253	5	True				
ANR	5623515	AssignmentExpression	"code = t1_hinter__add_pole ( self , xx2 , yy2 , oncurve )"		5623253	0		=			
ANR	5623516	Identifier	code		5623253	0					
ANR	5623517	CallExpression	"t1_hinter__add_pole ( self , xx2 , yy2 , oncurve )"		5623253	1					
ANR	5623518	Callee	t1_hinter__add_pole		5623253	0					
ANR	5623519	Identifier	t1_hinter__add_pole		5623253	0					
ANR	5623520	ArgumentList	self		5623253	1					
ANR	5623521	Argument	self		5623253	0					
ANR	5623522	Identifier	self		5623253	0					
ANR	5623523	Argument	xx2		5623253	1					
ANR	5623524	Identifier	xx2		5623253	0					
ANR	5623525	Argument	yy2		5623253	2					
ANR	5623526	Identifier	yy2		5623253	0					
ANR	5623527	Argument	oncurve		5623253	3					
ANR	5623528	Identifier	oncurve		5623253	0					
ANR	5623529	IfStatement	if ( code < 0 )		5623253	6					
ANR	5623530	Condition	code < 0	1193:12:49279:49286	5623253	0	True				
ANR	5623531	RelationalExpression	code < 0		5623253	0		<			
ANR	5623532	Identifier	code		5623253	0					
ANR	5623533	PrimaryExpression	0		5623253	1					
ANR	5623534	ReturnStatement	return code ;	1194:12:49301:49312	5623253	1	True				
ANR	5623535	Identifier	code		5623253	0					
ANR	5623536	ExpressionStatement	"t1_hinter__skip_degenerate_segnment ( self , 3 )"	1195:8:49322:49366	5623253	7	True				
ANR	5623537	CallExpression	"t1_hinter__skip_degenerate_segnment ( self , 3 )"		5623253	0					
ANR	5623538	Callee	t1_hinter__skip_degenerate_segnment		5623253	0					
ANR	5623539	Identifier	t1_hinter__skip_degenerate_segnment		5623253	0					
ANR	5623540	ArgumentList	self		5623253	1					
ANR	5623541	Argument	self		5623253	0					
ANR	5623542	Identifier	self		5623253	0					
ANR	5623543	Argument	3		5623253	1					
ANR	5623544	PrimaryExpression	3		5623253	0					
ANR	5623545	ReturnStatement	return 0 ;	1196:8:49376:49384	5623253	8	True				
ANR	5623546	PrimaryExpression	0		5623253	0					
ANR	5623547	ReturnType	int		5623253	1					
ANR	5623548	Identifier	t1_hinter__rcurveto		5623253	2					
ANR	5623549	ParameterList	"t1_hinter * self , fixed xx0 , fixed yy0 , fixed xx1 , fixed yy1 , fixed xx2 , fixed yy2"		5623253	3					
ANR	5623550	Parameter	t1_hinter * self	1164:24:48075:48090	5623253	0	True				
ANR	5623551	ParameterType	t1_hinter *		5623253	0					
ANR	5623552	Identifier	self		5623253	1					
ANR	5623553	Parameter	fixed xx0	1164:42:48093:48101	5623253	1	True				
ANR	5623554	ParameterType	fixed		5623253	0					
ANR	5623555	Identifier	xx0		5623253	1					
ANR	5623556	Parameter	fixed yy0	1164:53:48104:48112	5623253	2	True				
ANR	5623557	ParameterType	fixed		5623253	0					
ANR	5623558	Identifier	yy0		5623253	1					
ANR	5623559	Parameter	fixed xx1	1164:64:48115:48123	5623253	3	True				
ANR	5623560	ParameterType	fixed		5623253	0					
ANR	5623561	Identifier	xx1		5623253	1					
ANR	5623562	Parameter	fixed yy1	1164:75:48126:48134	5623253	4	True				
ANR	5623563	ParameterType	fixed		5623253	0					
ANR	5623564	Identifier	yy1		5623253	1					
ANR	5623565	Parameter	fixed xx2	1164:86:48137:48145	5623253	5	True				
ANR	5623566	ParameterType	fixed		5623253	0					
ANR	5623567	Identifier	xx2		5623253	1					
ANR	5623568	Parameter	fixed yy2	1164:97:48148:48156	5623253	6	True				
ANR	5623569	ParameterType	fixed		5623253	0					
ANR	5623570	Identifier	yy2		5623253	1					
ANR	5623571	CFGEntryNode	ENTRY		5623253		True				
ANR	5623572	CFGExitNode	EXIT		5623253		True				
ANR	5623573	Symbol	gy2		5623253						
ANR	5623574	Symbol	& fx2		5623253						
ANR	5623575	Symbol	& fx1		5623253						
ANR	5623576	Symbol	oncurve		5623253						
ANR	5623577	Symbol	& fx0		5623253						
ANR	5623578	Symbol	code		5623253						
ANR	5623579	Symbol	yy1		5623253						
ANR	5623580	Symbol	yy0		5623253						
ANR	5623581	Symbol	gx_path_add_curve		5623253						
ANR	5623582	Symbol	yy2		5623253						
ANR	5623583	Symbol	t1_hinter__add_pole		5623253						
ANR	5623584	Symbol	self -> cx		5623253						
ANR	5623585	Symbol	self -> cy		5623253						
ANR	5623586	Symbol	self -> output_path		5623253						
ANR	5623587	Symbol	gx0		5623253						
ANR	5623588	Symbol	fx1		5623253						
ANR	5623589	Symbol	fx0		5623253						
ANR	5623590	Symbol	gx2		5623253						
ANR	5623591	Symbol	gx1		5623253						
ANR	5623592	Symbol	fx2		5623253						
ANR	5623593	Symbol	& fy2		5623253						
ANR	5623594	Symbol	& fy1		5623253						
ANR	5623595	Symbol	self -> path_opened		5623253						
ANR	5623596	Symbol	& fy0		5623253						
ANR	5623597	Symbol	* self		5623253						
ANR	5623598	Symbol	self -> pass_through		5623253						
ANR	5623599	Symbol	xx1		5623253						
ANR	5623600	Symbol	xx0		5623253						
ANR	5623601	Symbol	xx2		5623253						
ANR	5623602	Symbol	offcurve		5623253						
ANR	5623603	Symbol	true		5623253						
ANR	5623604	Symbol	self		5623253						
ANR	5623605	Symbol	fy0		5623253						
ANR	5623606	Symbol	gy1		5623253						
ANR	5623607	Symbol	fy2		5623253						
ANR	5623608	Symbol	gy0		5623253						
ANR	5623609	Symbol	fy1		5623253						
ANR	5623610	Function	t1_hinter__setcurrentpoint	1200:0:49395:50313							
ANR	5623611	FunctionDef	"t1_hinter__setcurrentpoint (t1_hinter * self , fixed xx , fixed yy)"		5623610	0					
ANR	5623612	CompoundStatement		1201:0:49465:50313	5623610	0					
ANR	5623613	ExpressionStatement	"t1_hinter__adjust_matrix_precision ( self , xx , yy )"	1202:4:49471:49519	5623610	0	True				
ANR	5623614	CallExpression	"t1_hinter__adjust_matrix_precision ( self , xx , yy )"		5623610	0					
ANR	5623615	Callee	t1_hinter__adjust_matrix_precision		5623610	0					
ANR	5623616	Identifier	t1_hinter__adjust_matrix_precision		5623610	0					
ANR	5623617	ArgumentList	self		5623610	1					
ANR	5623618	Argument	self		5623610	0					
ANR	5623619	Identifier	self		5623610	0					
ANR	5623620	Argument	xx		5623610	1					
ANR	5623621	Identifier	xx		5623610	0					
ANR	5623622	Argument	yy		5623610	2					
ANR	5623623	Identifier	yy		5623610	0					
ANR	5623624	IfStatement	if ( self -> FontType != 2 )		5623610	1					
ANR	5623625	Condition	self -> FontType != 2	1203:8:49529:49547	5623610	0	True				
ANR	5623626	EqualityExpression	self -> FontType != 2		5623610	0		!=			
ANR	5623627	PtrMemberAccess	self -> FontType		5623610	0					
ANR	5623628	Identifier	self		5623610	0					
ANR	5623629	Identifier	FontType		5623610	1					
ANR	5623630	PrimaryExpression	2		5623610	1					
ANR	5623631	CompoundStatement		3:29:84:84	5623610	1					
ANR	5623632	ExpressionStatement	self -> cx = xx	1207:8:49678:49691	5623610	0	True				
ANR	5623633	AssignmentExpression	self -> cx = xx		5623610	0		=			
ANR	5623634	PtrMemberAccess	self -> cx		5623610	0					
ANR	5623635	Identifier	self		5623610	0					
ANR	5623636	Identifier	cx		5623610	1					
ANR	5623637	Identifier	xx		5623610	1					
ANR	5623638	ExpressionStatement	self -> cy = yy	1208:8:49701:49714	5623610	1	True				
ANR	5623639	AssignmentExpression	self -> cy = yy		5623610	0		=			
ANR	5623640	PtrMemberAccess	self -> cy		5623610	0					
ANR	5623641	Identifier	self		5623610	0					
ANR	5623642	Identifier	cy		5623610	1					
ANR	5623643	Identifier	yy		5623610	1					
ANR	5623644	ElseStatement	else		5623610	0					
ANR	5623645	IfStatement	if ( self -> cx != xx || self -> cy != yy )		5623610	0					
ANR	5623646	Condition	self -> cx != xx || self -> cy != yy	1209:15:49731:49762	5623610	0	True				
ANR	5623647	OrExpression	self -> cx != xx || self -> cy != yy		5623610	0		||			
ANR	5623648	EqualityExpression	self -> cx != xx		5623610	0		!=			
ANR	5623649	PtrMemberAccess	self -> cx		5623610	0					
ANR	5623650	Identifier	self		5623610	0					
ANR	5623651	Identifier	cx		5623610	1					
ANR	5623652	Identifier	xx		5623610	1					
ANR	5623653	EqualityExpression	self -> cy != yy		5623610	1		!=			
ANR	5623654	PtrMemberAccess	self -> cy		5623610	0					
ANR	5623655	Identifier	self		5623610	0					
ANR	5623656	Identifier	cy		5623610	1					
ANR	5623657	Identifier	yy		5623610	1					
ANR	5623658	CompoundStatement		9:49:299:299	5623610	1					
ANR	5623659	ExpressionStatement	self -> cx = xx	1218:8:50269:50282	5623610	0	True				
ANR	5623660	AssignmentExpression	self -> cx = xx		5623610	0		=			
ANR	5623661	PtrMemberAccess	self -> cx		5623610	0					
ANR	5623662	Identifier	self		5623610	0					
ANR	5623663	Identifier	cx		5623610	1					
ANR	5623664	Identifier	xx		5623610	1					
ANR	5623665	ExpressionStatement	self -> cy = yy	1219:8:50292:50305	5623610	1	True				
ANR	5623666	AssignmentExpression	self -> cy = yy		5623610	0		=			
ANR	5623667	PtrMemberAccess	self -> cy		5623610	0					
ANR	5623668	Identifier	self		5623610	0					
ANR	5623669	Identifier	cy		5623610	1					
ANR	5623670	Identifier	yy		5623610	1					
ANR	5623671	ReturnType	void		5623610	1					
ANR	5623672	Identifier	t1_hinter__setcurrentpoint		5623610	2					
ANR	5623673	ParameterList	"t1_hinter * self , fixed xx , fixed yy"		5623610	3					
ANR	5623674	Parameter	t1_hinter * self	1200:32:49427:49442	5623610	0	True				
ANR	5623675	ParameterType	t1_hinter *		5623610	0					
ANR	5623676	Identifier	self		5623610	1					
ANR	5623677	Parameter	fixed xx	1200:50:49445:49452	5623610	1	True				
ANR	5623678	ParameterType	fixed		5623610	0					
ANR	5623679	Identifier	xx		5623610	1					
ANR	5623680	Parameter	fixed yy	1200:60:49455:49462	5623610	2	True				
ANR	5623681	ParameterType	fixed		5623610	0					
ANR	5623682	Identifier	yy		5623610	1					
ANR	5623683	CFGEntryNode	ENTRY		5623610		True				
ANR	5623684	CFGExitNode	EXIT		5623610		True				
ANR	5623685	Symbol	xx		5623610						
ANR	5623686	Symbol	yy		5623610						
ANR	5623687	Symbol	* self		5623610						
ANR	5623688	Symbol	self -> FontType		5623610						
ANR	5623689	Symbol	self		5623610						
ANR	5623690	Symbol	self -> cx		5623610						
ANR	5623691	Symbol	self -> cy		5623610						
ANR	5623692	Function	t1_hinter__closepath	1223:0:50316:51642							
ANR	5623693	FunctionDef	t1_hinter__closepath (t1_hinter * self)		5623692	0					
ANR	5623694	CompoundStatement		1224:0:50359:51642	5623692	0					
ANR	5623695	IfStatement	if ( self -> pass_through )		5623692	0					
ANR	5623696	Condition	self -> pass_through	1224:7:50367:50384	5623692	0	True				
ANR	5623697	PtrMemberAccess	self -> pass_through		5623692	0					
ANR	5623698	Identifier	self		5623692	0					
ANR	5623699	Identifier	pass_through		5623692	1					
ANR	5623700	CompoundStatement		1:27:27:27	5623692	1					
ANR	5623701	ExpressionStatement	self -> path_opened = false	1225:8:50397:50422	5623692	0	True				
ANR	5623702	AssignmentExpression	self -> path_opened = false		5623692	0		=			
ANR	5623703	PtrMemberAccess	self -> path_opened		5623692	0					
ANR	5623704	Identifier	self		5623692	0					
ANR	5623705	Identifier	path_opened		5623692	1					
ANR	5623706	Identifier	false		5623692	1					
ANR	5623707	ReturnStatement	return gx_path_close_subpath ( self -> output_path ) ;	1226:8:50432:50479	5623692	1	True				
ANR	5623708	CallExpression	gx_path_close_subpath ( self -> output_path )		5623692	0					
ANR	5623709	Callee	gx_path_close_subpath		5623692	0					
ANR	5623710	Identifier	gx_path_close_subpath		5623692	0					
ANR	5623711	ArgumentList	self -> output_path		5623692	1					
ANR	5623712	Argument	self -> output_path		5623692	0					
ANR	5623713	PtrMemberAccess	self -> output_path		5623692	0					
ANR	5623714	Identifier	self		5623692	0					
ANR	5623715	Identifier	output_path		5623692	1					
ANR	5623716	ElseStatement	else		5623692	0					
ANR	5623717	CompoundStatement		5:8:142:200	5623692	0					
ANR	5623718	IdentifierDeclStatement	"int contour_beg = self -> contour [ self -> contour_count ] , code ;"	1228:8:50502:50560	5623692	0	True				
ANR	5623719	IdentifierDecl	contour_beg = self -> contour [ self -> contour_count ]		5623692	0					
ANR	5623720	IdentifierDeclType	int		5623692	0					
ANR	5623721	Identifier	contour_beg		5623692	1					
ANR	5623722	AssignmentExpression	contour_beg = self -> contour [ self -> contour_count ]		5623692	2		=			
ANR	5623723	Identifier	contour_beg		5623692	0					
ANR	5623724	ArrayIndexing	self -> contour [ self -> contour_count ]		5623692	1					
ANR	5623725	PtrMemberAccess	self -> contour		5623692	0					
ANR	5623726	Identifier	self		5623692	0					
ANR	5623727	Identifier	contour		5623692	1					
ANR	5623728	PtrMemberAccess	self -> contour_count		5623692	1					
ANR	5623729	Identifier	self		5623692	0					
ANR	5623730	Identifier	contour_count		5623692	1					
ANR	5623731	IdentifierDecl	code		5623692	1					
ANR	5623732	IdentifierDeclType	int		5623692	0					
ANR	5623733	Identifier	code		5623692	1					
ANR	5623734	IfStatement	if ( contour_beg == self -> pole_count )		5623692	1					
ANR	5623735	Condition	contour_beg == self -> pole_count	1230:12:50575:50605	5623692	0	True				
ANR	5623736	EqualityExpression	contour_beg == self -> pole_count		5623692	0		==			
ANR	5623737	Identifier	contour_beg		5623692	0					
ANR	5623738	PtrMemberAccess	self -> pole_count		5623692	1					
ANR	5623739	Identifier	self		5623692	0					
ANR	5623740	Identifier	pole_count		5623692	1					
ANR	5623741	ReturnStatement	return 0 ;	1231:12:50620:50628	5623692	1	True				
ANR	5623742	PrimaryExpression	0		5623692	0					
ANR	5623743	IfStatement	if ( self -> bx == self -> cx && self -> by == self -> cy )		5623692	2					
ANR	5623744	Condition	self -> bx == self -> cx && self -> by == self -> cy	1232:12:50679:50722	5623692	0	True				
ANR	5623745	AndExpression	self -> bx == self -> cx && self -> by == self -> cy		5623692	0		&&			
ANR	5623746	EqualityExpression	self -> bx == self -> cx		5623692	0		==			
ANR	5623747	PtrMemberAccess	self -> bx		5623692	0					
ANR	5623748	Identifier	self		5623692	0					
ANR	5623749	Identifier	bx		5623692	1					
ANR	5623750	PtrMemberAccess	self -> cx		5623692	1					
ANR	5623751	Identifier	self		5623692	0					
ANR	5623752	Identifier	cx		5623692	1					
ANR	5623753	EqualityExpression	self -> by == self -> cy		5623692	1		==			
ANR	5623754	PtrMemberAccess	self -> by		5623692	0					
ANR	5623755	Identifier	self		5623692	0					
ANR	5623756	Identifier	by		5623692	1					
ANR	5623757	PtrMemberAccess	self -> cy		5623692	1					
ANR	5623758	Identifier	self		5623692	0					
ANR	5623759	Identifier	cy		5623692	1					
ANR	5623760	CompoundStatement		9:58:365:365	5623692	1					
ANR	5623761	ExpressionStatement	self -> pole [ self -> pole_count - 1 ] . type = closepath	1234:12:50789:50838	5623692	0	True				
ANR	5623762	AssignmentExpression	self -> pole [ self -> pole_count - 1 ] . type = closepath		5623692	0		=			
ANR	5623763	MemberAccess	self -> pole [ self -> pole_count - 1 ] . type		5623692	0					
ANR	5623764	ArrayIndexing	self -> pole [ self -> pole_count - 1 ]		5623692	0					
ANR	5623765	PtrMemberAccess	self -> pole		5623692	0					
ANR	5623766	Identifier	self		5623692	0					
ANR	5623767	Identifier	pole		5623692	1					
ANR	5623768	AdditiveExpression	self -> pole_count - 1		5623692	1		-			
ANR	5623769	PtrMemberAccess	self -> pole_count		5623692	0					
ANR	5623770	Identifier	self		5623692	0					
ANR	5623771	Identifier	pole_count		5623692	1					
ANR	5623772	PrimaryExpression	1		5623692	1					
ANR	5623773	Identifier	type		5623692	1					
ANR	5623774	Identifier	closepath		5623692	1					
ANR	5623775	ElseStatement	else		5623692	0					
ANR	5623776	CompoundStatement		13:12:509:558	5623692	0					
ANR	5623777	IdentifierDeclStatement	"t1_glyph_space_coord cx = self -> cx , cy = self -> cy ;"	1236:12:50869:50918	5623692	0	True				
ANR	5623778	IdentifierDecl	cx = self -> cx		5623692	0					
ANR	5623779	IdentifierDeclType	t1_glyph_space_coord		5623692	0					
ANR	5623780	Identifier	cx		5623692	1					
ANR	5623781	AssignmentExpression	cx = self -> cx		5623692	2		=			
ANR	5623782	Identifier	cx		5623692	0					
ANR	5623783	PtrMemberAccess	self -> cx		5623692	1					
ANR	5623784	Identifier	self		5623692	0					
ANR	5623785	Identifier	cx		5623692	1					
ANR	5623786	IdentifierDecl	cy = self -> cy		5623692	1					
ANR	5623787	IdentifierDeclType	t1_glyph_space_coord		5623692	0					
ANR	5623788	Identifier	cy		5623692	1					
ANR	5623789	AssignmentExpression	cy = self -> cy		5623692	2		=			
ANR	5623790	Identifier	cy		5623692	0					
ANR	5623791	PtrMemberAccess	self -> cy		5623692	1					
ANR	5623792	Identifier	self		5623692	0					
ANR	5623793	Identifier	cy		5623692	1					
ANR	5623794	ExpressionStatement	self -> cx = self -> bx	1238:12:50933:50952	5623692	1	True				
ANR	5623795	AssignmentExpression	self -> cx = self -> bx		5623692	0		=			
ANR	5623796	PtrMemberAccess	self -> cx		5623692	0					
ANR	5623797	Identifier	self		5623692	0					
ANR	5623798	Identifier	cx		5623692	1					
ANR	5623799	PtrMemberAccess	self -> bx		5623692	1					
ANR	5623800	Identifier	self		5623692	0					
ANR	5623801	Identifier	bx		5623692	1					
ANR	5623802	ExpressionStatement	self -> cy = self -> by	1239:12:50966:50985	5623692	2	True				
ANR	5623803	AssignmentExpression	self -> cy = self -> by		5623692	0		=			
ANR	5623804	PtrMemberAccess	self -> cy		5623692	0					
ANR	5623805	Identifier	self		5623692	0					
ANR	5623806	Identifier	cy		5623692	1					
ANR	5623807	PtrMemberAccess	self -> by		5623692	1					
ANR	5623808	Identifier	self		5623692	0					
ANR	5623809	Identifier	by		5623692	1					
ANR	5623810	ExpressionStatement	"code = t1_hinter__add_pole ( self , 0 , 0 , closepath )"	1240:12:50999:51048	5623692	3	True				
ANR	5623811	AssignmentExpression	"code = t1_hinter__add_pole ( self , 0 , 0 , closepath )"		5623692	0		=			
ANR	5623812	Identifier	code		5623692	0					
ANR	5623813	CallExpression	"t1_hinter__add_pole ( self , 0 , 0 , closepath )"		5623692	1					
ANR	5623814	Callee	t1_hinter__add_pole		5623692	0					
ANR	5623815	Identifier	t1_hinter__add_pole		5623692	0					
ANR	5623816	ArgumentList	self		5623692	1					
ANR	5623817	Argument	self		5623692	0					
ANR	5623818	Identifier	self		5623692	0					
ANR	5623819	Argument	0		5623692	1					
ANR	5623820	PrimaryExpression	0		5623692	0					
ANR	5623821	Argument	0		5623692	2					
ANR	5623822	PrimaryExpression	0		5623692	0					
ANR	5623823	Argument	closepath		5623692	3					
ANR	5623824	Identifier	closepath		5623692	0					
ANR	5623825	IfStatement	if ( code < 0 )		5623692	4					
ANR	5623826	Condition	code < 0	1241:16:51066:51073	5623692	0	True				
ANR	5623827	RelationalExpression	code < 0		5623692	0		<			
ANR	5623828	Identifier	code		5623692	0					
ANR	5623829	PrimaryExpression	0		5623692	1					
ANR	5623830	ReturnStatement	return code ;	1242:16:51092:51103	5623692	1	True				
ANR	5623831	Identifier	code		5623692	0					
ANR	5623832	ExpressionStatement	self -> cx = cx	1243:12:51117:51130	5623692	5	True				
ANR	5623833	AssignmentExpression	self -> cx = cx		5623692	0		=			
ANR	5623834	PtrMemberAccess	self -> cx		5623692	0					
ANR	5623835	Identifier	self		5623692	0					
ANR	5623836	Identifier	cx		5623692	1					
ANR	5623837	Identifier	cx		5623692	1					
ANR	5623838	ExpressionStatement	self -> cy = cy	1244:12:51144:51157	5623692	6	True				
ANR	5623839	AssignmentExpression	self -> cy = cy		5623692	0		=			
ANR	5623840	PtrMemberAccess	self -> cy		5623692	0					
ANR	5623841	Identifier	self		5623692	0					
ANR	5623842	Identifier	cy		5623692	1					
ANR	5623843	Identifier	cy		5623692	1					
ANR	5623844	ExpressionStatement	self -> contour_count ++	1246:8:51177:51198	5623692	3	True				
ANR	5623845	PostIncDecOperationExpression	self -> contour_count ++		5623692	0					
ANR	5623846	PtrMemberAccess	self -> contour_count		5623692	0					
ANR	5623847	Identifier	self		5623692	0					
ANR	5623848	Identifier	contour_count		5623692	1					
ANR	5623849	IncDec	++		5623692	1					
ANR	5623850	IfStatement	if ( self -> contour_count >= self -> max_contour_count )		5623692	4					
ANR	5623851	Condition	self -> contour_count >= self -> max_contour_count	1247:12:51212:51257	5623692	0	True				
ANR	5623852	RelationalExpression	self -> contour_count >= self -> max_contour_count		5623692	0		>=			
ANR	5623853	PtrMemberAccess	self -> contour_count		5623692	0					
ANR	5623854	Identifier	self		5623692	0					
ANR	5623855	Identifier	contour_count		5623692	1					
ANR	5623856	PtrMemberAccess	self -> max_contour_count		5623692	1					
ANR	5623857	Identifier	self		5623692	0					
ANR	5623858	Identifier	max_contour_count		5623692	1					
ANR	5623859	IfStatement	"if ( t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> contour , self -> contour0 , & self -> max_contour_count , sizeof ( self -> contour0 ) / count_of ( self -> contour0 ) , T1_MAX_CONTOURS , s_contour_array ) )"		5623692	1					
ANR	5623860	Condition	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> contour , self -> contour0 , & self -> max_contour_count , sizeof ( self -> contour0 ) / count_of ( self -> contour0 ) , T1_MAX_CONTOURS , s_contour_array )"	1248:15:51275:51504	5623692	0	True				
ANR	5623861	CallExpression	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> contour , self -> contour0 , & self -> max_contour_count , sizeof ( self -> contour0 ) / count_of ( self -> contour0 ) , T1_MAX_CONTOURS , s_contour_array )"		5623692	0					
ANR	5623862	Callee	t1_hinter__realloc_array		5623692	0					
ANR	5623863	Identifier	t1_hinter__realloc_array		5623692	0					
ANR	5623864	ArgumentList	self -> memory		5623692	1					
ANR	5623865	Argument	self -> memory		5623692	0					
ANR	5623866	PtrMemberAccess	self -> memory		5623692	0					
ANR	5623867	Identifier	self		5623692	0					
ANR	5623868	Identifier	memory		5623692	1					
ANR	5623869	Argument	( void * * ) & self -> contour		5623692	1					
ANR	5623870	CastExpression	( void * * ) & self -> contour		5623692	0					
ANR	5623871	CastTarget	void * *		5623692	0					
ANR	5623872	UnaryOperationExpression	& self -> contour		5623692	1					
ANR	5623873	UnaryOperator	&		5623692	0					
ANR	5623874	PtrMemberAccess	self -> contour		5623692	1					
ANR	5623875	Identifier	self		5623692	0					
ANR	5623876	Identifier	contour		5623692	1					
ANR	5623877	Argument	self -> contour0		5623692	2					
ANR	5623878	PtrMemberAccess	self -> contour0		5623692	0					
ANR	5623879	Identifier	self		5623692	0					
ANR	5623880	Identifier	contour0		5623692	1					
ANR	5623881	Argument	& self -> max_contour_count		5623692	3					
ANR	5623882	UnaryOperationExpression	& self -> max_contour_count		5623692	0					
ANR	5623883	UnaryOperator	&		5623692	0					
ANR	5623884	PtrMemberAccess	self -> max_contour_count		5623692	1					
ANR	5623885	Identifier	self		5623692	0					
ANR	5623886	Identifier	max_contour_count		5623692	1					
ANR	5623887	Argument	sizeof ( self -> contour0 ) / count_of ( self -> contour0 )		5623692	4					
ANR	5623888	MultiplicativeExpression	sizeof ( self -> contour0 ) / count_of ( self -> contour0 )		5623692	0		/			
ANR	5623889	SizeofExpression	sizeof ( self -> contour0 )		5623692	0					
ANR	5623890	Sizeof	sizeof		5623692	0					
ANR	5623891	PtrMemberAccess	self -> contour0		5623692	1					
ANR	5623892	Identifier	self		5623692	0					
ANR	5623893	Identifier	contour0		5623692	1					
ANR	5623894	CallExpression	count_of ( self -> contour0 )		5623692	1					
ANR	5623895	Callee	count_of		5623692	0					
ANR	5623896	Identifier	count_of		5623692	0					
ANR	5623897	ArgumentList	self -> contour0		5623692	1					
ANR	5623898	Argument	self -> contour0		5623692	0					
ANR	5623899	PtrMemberAccess	self -> contour0		5623692	0					
ANR	5623900	Identifier	self		5623692	0					
ANR	5623901	Identifier	contour0		5623692	1					
ANR	5623902	Argument	T1_MAX_CONTOURS		5623692	5					
ANR	5623903	Identifier	T1_MAX_CONTOURS		5623692	0					
ANR	5623904	Argument	s_contour_array		5623692	6					
ANR	5623905	Identifier	s_contour_array		5623692	0					
ANR	5623906	ExpressionStatement	return_error ( gs_error_VMerror )	1250:16:51523:51553	5623692	1	True				
ANR	5623907	CallExpression	return_error ( gs_error_VMerror )		5623692	0					
ANR	5623908	Callee	return_error		5623692	0					
ANR	5623909	Identifier	return_error		5623692	0					
ANR	5623910	ArgumentList	gs_error_VMerror		5623692	1					
ANR	5623911	Argument	gs_error_VMerror		5623692	0					
ANR	5623912	Identifier	gs_error_VMerror		5623692	0					
ANR	5623913	ExpressionStatement	self -> contour [ self -> contour_count ] = self -> pole_count	1251:8:51563:51616	5623692	5	True				
ANR	5623914	AssignmentExpression	self -> contour [ self -> contour_count ] = self -> pole_count		5623692	0		=			
ANR	5623915	ArrayIndexing	self -> contour [ self -> contour_count ]		5623692	0					
ANR	5623916	PtrMemberAccess	self -> contour		5623692	0					
ANR	5623917	Identifier	self		5623692	0					
ANR	5623918	Identifier	contour		5623692	1					
ANR	5623919	PtrMemberAccess	self -> contour_count		5623692	1					
ANR	5623920	Identifier	self		5623692	0					
ANR	5623921	Identifier	contour_count		5623692	1					
ANR	5623922	PtrMemberAccess	self -> pole_count		5623692	1					
ANR	5623923	Identifier	self		5623692	0					
ANR	5623924	Identifier	pole_count		5623692	1					
ANR	5623925	ReturnStatement	return 0 ;	1252:8:51626:51634	5623692	6	True				
ANR	5623926	PrimaryExpression	0		5623692	0					
ANR	5623927	ReturnType	int		5623692	1					
ANR	5623928	Identifier	t1_hinter__closepath		5623692	2					
ANR	5623929	ParameterList	t1_hinter * self		5623692	3					
ANR	5623930	Parameter	t1_hinter * self	1223:25:50341:50356	5623692	0	True				
ANR	5623931	ParameterType	t1_hinter *		5623692	0					
ANR	5623932	Identifier	self		5623692	1					
ANR	5623933	CFGEntryNode	ENTRY		5623692		True				
ANR	5623934	CFGExitNode	EXIT		5623692		True				
ANR	5623935	Symbol	self -> max_contour_count		5623692						
ANR	5623936	Symbol	self -> contour0		5623692						
ANR	5623937	Symbol	code		5623692						
ANR	5623938	Symbol	* self -> pole		5623692						
ANR	5623939	Symbol	& self -> contour		5623692						
ANR	5623940	Symbol	self -> pole_count		5623692						
ANR	5623941	Symbol	T1_MAX_CONTOURS		5623692						
ANR	5623942	Symbol	t1_hinter__realloc_array		5623692						
ANR	5623943	Symbol	s_contour_array		5623692						
ANR	5623944	Symbol	self -> pole [ self -> pole_count - 1 ] . type		5623692						
ANR	5623945	Symbol	gx_path_close_subpath		5623692						
ANR	5623946	Symbol	self -> memory		5623692						
ANR	5623947	Symbol	t1_hinter__add_pole		5623692						
ANR	5623948	Symbol	count_of		5623692						
ANR	5623949	Symbol	closepath		5623692						
ANR	5623950	Symbol	self -> cx		5623692						
ANR	5623951	Symbol	self -> pole		5623692						
ANR	5623952	Symbol	self -> cy		5623692						
ANR	5623953	Symbol	self -> output_path		5623692						
ANR	5623954	Symbol	& self -> max_contour_count		5623692						
ANR	5623955	Symbol	* self -> contour_count		5623692						
ANR	5623956	Symbol	* self -> contour		5623692						
ANR	5623957	Symbol	self -> path_opened		5623692						
ANR	5623958	Symbol	self -> contour_count		5623692						
ANR	5623959	Symbol	* * self		5623692						
ANR	5623960	Symbol	* self		5623692						
ANR	5623961	Symbol	* self -> pole_count		5623692						
ANR	5623962	Symbol	false		5623692						
ANR	5623963	Symbol	self -> pass_through		5623692						
ANR	5623964	Symbol	self -> contour		5623692						
ANR	5623965	Symbol	gs_error_VMerror		5623692						
ANR	5623966	Symbol	cx		5623692						
ANR	5623967	Symbol	cy		5623692						
ANR	5623968	Symbol	contour_beg		5623692						
ANR	5623969	Symbol	self -> by		5623692						
ANR	5623970	Symbol	self		5623692						
ANR	5623971	Symbol	self -> bx		5623692						
ANR	5623972	Function	t1_hinter__end_subglyph	1256:0:51645:52193							
ANR	5623973	FunctionDef	t1_hinter__end_subglyph (t1_hinter * self)		5623972	0					
ANR	5623974	CompoundStatement		1257:0:51691:52193	5623972	0					
ANR	5623975	IfStatement	if ( self -> pass_through )		5623972	0					
ANR	5623976	Condition	self -> pass_through	1258:8:51701:51718	5623972	0	True				
ANR	5623977	PtrMemberAccess	self -> pass_through		5623972	0					
ANR	5623978	Identifier	self		5623972	0					
ANR	5623979	Identifier	pass_through		5623972	1					
ANR	5623980	ReturnStatement	return 0 ;	1259:8:51729:51737	5623972	1	True				
ANR	5623981	PrimaryExpression	0		5623972	0					
ANR	5623982	ExpressionStatement	self -> subglyph_count ++	1260:4:51743:51765	5623972	1	True				
ANR	5623983	PostIncDecOperationExpression	self -> subglyph_count ++		5623972	0					
ANR	5623984	PtrMemberAccess	self -> subglyph_count		5623972	0					
ANR	5623985	Identifier	self		5623972	0					
ANR	5623986	Identifier	subglyph_count		5623972	1					
ANR	5623987	IncDec	++		5623972	1					
ANR	5623988	IfStatement	if ( self -> subglyph_count >= self -> max_subglyph_count )		5623972	2					
ANR	5623989	Condition	self -> subglyph_count >= self -> max_subglyph_count	1261:8:51775:51822	5623972	0	True				
ANR	5623990	RelationalExpression	self -> subglyph_count >= self -> max_subglyph_count		5623972	0		>=			
ANR	5623991	PtrMemberAccess	self -> subglyph_count		5623972	0					
ANR	5623992	Identifier	self		5623972	0					
ANR	5623993	Identifier	subglyph_count		5623972	1					
ANR	5623994	PtrMemberAccess	self -> max_subglyph_count		5623972	1					
ANR	5623995	Identifier	self		5623972	0					
ANR	5623996	Identifier	max_subglyph_count		5623972	1					
ANR	5623997	IfStatement	"if ( t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> subglyph , self -> subglyph0 , & self -> max_subglyph_count , sizeof ( self -> subglyph0 ) / count_of ( self -> subglyph0 ) , T1_MAX_SUBGLYPHS , s_subglyph_array ) )"		5623972	1					
ANR	5623998	Condition	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> subglyph , self -> subglyph0 , & self -> max_subglyph_count , sizeof ( self -> subglyph0 ) / count_of ( self -> subglyph0 ) , T1_MAX_SUBGLYPHS , s_subglyph_array )"	1262:11:51836:52068	5623972	0	True				
ANR	5623999	CallExpression	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> subglyph , self -> subglyph0 , & self -> max_subglyph_count , sizeof ( self -> subglyph0 ) / count_of ( self -> subglyph0 ) , T1_MAX_SUBGLYPHS , s_subglyph_array )"		5623972	0					
ANR	5624000	Callee	t1_hinter__realloc_array		5623972	0					
ANR	5624001	Identifier	t1_hinter__realloc_array		5623972	0					
ANR	5624002	ArgumentList	self -> memory		5623972	1					
ANR	5624003	Argument	self -> memory		5623972	0					
ANR	5624004	PtrMemberAccess	self -> memory		5623972	0					
ANR	5624005	Identifier	self		5623972	0					
ANR	5624006	Identifier	memory		5623972	1					
ANR	5624007	Argument	( void * * ) & self -> subglyph		5623972	1					
ANR	5624008	CastExpression	( void * * ) & self -> subglyph		5623972	0					
ANR	5624009	CastTarget	void * *		5623972	0					
ANR	5624010	UnaryOperationExpression	& self -> subglyph		5623972	1					
ANR	5624011	UnaryOperator	&		5623972	0					
ANR	5624012	PtrMemberAccess	self -> subglyph		5623972	1					
ANR	5624013	Identifier	self		5623972	0					
ANR	5624014	Identifier	subglyph		5623972	1					
ANR	5624015	Argument	self -> subglyph0		5623972	2					
ANR	5624016	PtrMemberAccess	self -> subglyph0		5623972	0					
ANR	5624017	Identifier	self		5623972	0					
ANR	5624018	Identifier	subglyph0		5623972	1					
ANR	5624019	Argument	& self -> max_subglyph_count		5623972	3					
ANR	5624020	UnaryOperationExpression	& self -> max_subglyph_count		5623972	0					
ANR	5624021	UnaryOperator	&		5623972	0					
ANR	5624022	PtrMemberAccess	self -> max_subglyph_count		5623972	1					
ANR	5624023	Identifier	self		5623972	0					
ANR	5624024	Identifier	max_subglyph_count		5623972	1					
ANR	5624025	Argument	sizeof ( self -> subglyph0 ) / count_of ( self -> subglyph0 )		5623972	4					
ANR	5624026	MultiplicativeExpression	sizeof ( self -> subglyph0 ) / count_of ( self -> subglyph0 )		5623972	0		/			
ANR	5624027	SizeofExpression	sizeof ( self -> subglyph0 )		5623972	0					
ANR	5624028	Sizeof	sizeof		5623972	0					
ANR	5624029	PtrMemberAccess	self -> subglyph0		5623972	1					
ANR	5624030	Identifier	self		5623972	0					
ANR	5624031	Identifier	subglyph0		5623972	1					
ANR	5624032	CallExpression	count_of ( self -> subglyph0 )		5623972	1					
ANR	5624033	Callee	count_of		5623972	0					
ANR	5624034	Identifier	count_of		5623972	0					
ANR	5624035	ArgumentList	self -> subglyph0		5623972	1					
ANR	5624036	Argument	self -> subglyph0		5623972	0					
ANR	5624037	PtrMemberAccess	self -> subglyph0		5623972	0					
ANR	5624038	Identifier	self		5623972	0					
ANR	5624039	Identifier	subglyph0		5623972	1					
ANR	5624040	Argument	T1_MAX_SUBGLYPHS		5623972	5					
ANR	5624041	Identifier	T1_MAX_SUBGLYPHS		5623972	0					
ANR	5624042	Argument	s_subglyph_array		5623972	6					
ANR	5624043	Identifier	s_subglyph_array		5623972	0					
ANR	5624044	ExpressionStatement	return_error ( gs_error_VMerror )	1264:12:52083:52113	5623972	1	True				
ANR	5624045	CallExpression	return_error ( gs_error_VMerror )		5623972	0					
ANR	5624046	Callee	return_error		5623972	0					
ANR	5624047	Identifier	return_error		5623972	0					
ANR	5624048	ArgumentList	gs_error_VMerror		5623972	1					
ANR	5624049	Argument	gs_error_VMerror		5623972	0					
ANR	5624050	Identifier	gs_error_VMerror		5623972	0					
ANR	5624051	ExpressionStatement	self -> subglyph [ self -> subglyph_count ] = self -> contour_count	1265:4:52119:52177	5623972	3	True				
ANR	5624052	AssignmentExpression	self -> subglyph [ self -> subglyph_count ] = self -> contour_count		5623972	0		=			
ANR	5624053	ArrayIndexing	self -> subglyph [ self -> subglyph_count ]		5623972	0					
ANR	5624054	PtrMemberAccess	self -> subglyph		5623972	0					
ANR	5624055	Identifier	self		5623972	0					
ANR	5624056	Identifier	subglyph		5623972	1					
ANR	5624057	PtrMemberAccess	self -> subglyph_count		5623972	1					
ANR	5624058	Identifier	self		5623972	0					
ANR	5624059	Identifier	subglyph_count		5623972	1					
ANR	5624060	PtrMemberAccess	self -> contour_count		5623972	1					
ANR	5624061	Identifier	self		5623972	0					
ANR	5624062	Identifier	contour_count		5623972	1					
ANR	5624063	ReturnStatement	return 0 ;	1266:4:52183:52191	5623972	4	True				
ANR	5624064	PrimaryExpression	0		5623972	0					
ANR	5624065	ReturnType	int		5623972	1					
ANR	5624066	Identifier	t1_hinter__end_subglyph		5623972	2					
ANR	5624067	ParameterList	t1_hinter * self		5623972	3					
ANR	5624068	Parameter	t1_hinter * self	1256:28:51673:51688	5623972	0	True				
ANR	5624069	ParameterType	t1_hinter *		5623972	0					
ANR	5624070	Identifier	self		5623972	1					
ANR	5624071	CFGEntryNode	ENTRY		5623972		True				
ANR	5624072	CFGExitNode	EXIT		5623972		True				
ANR	5624073	Symbol	* self -> subglyph_count		5623972						
ANR	5624074	Symbol	& self -> max_subglyph_count		5623972						
ANR	5624075	Symbol	self -> contour_count		5623972						
ANR	5624076	Symbol	* * self		5623972						
ANR	5624077	Symbol	* self		5623972						
ANR	5624078	Symbol	self -> subglyph0		5623972						
ANR	5624079	Symbol	t1_hinter__realloc_array		5623972						
ANR	5624080	Symbol	self -> pass_through		5623972						
ANR	5624081	Symbol	self -> subglyph_count		5623972						
ANR	5624082	Symbol	self -> memory		5623972						
ANR	5624083	Symbol	gs_error_VMerror		5623972						
ANR	5624084	Symbol	self -> subglyph		5623972						
ANR	5624085	Symbol	count_of		5623972						
ANR	5624086	Symbol	T1_MAX_SUBGLYPHS		5623972						
ANR	5624087	Symbol	s_subglyph_array		5623972						
ANR	5624088	Symbol	self -> max_subglyph_count		5623972						
ANR	5624089	Symbol	& self -> subglyph		5623972						
ANR	5624090	Symbol	self		5623972						
ANR	5624091	Symbol	* self -> subglyph		5623972						
ANR	5624092	Function	t1_hinter__can_add_hint	1269:0:52196:52641							
ANR	5624093	FunctionDef	"t1_hinter__can_add_hint (t1_hinter * self , t1_hint * * hint)"		5624092	0					
ANR	5624094	CompoundStatement		1270:0:52272:52641	5624092	0					
ANR	5624095	IfStatement	if ( self -> hint_count >= self -> max_hint_count )		5624092	0					
ANR	5624096	Condition	self -> hint_count >= self -> max_hint_count	1270:7:52280:52319	5624092	0	True				
ANR	5624097	RelationalExpression	self -> hint_count >= self -> max_hint_count		5624092	0		>=			
ANR	5624098	PtrMemberAccess	self -> hint_count		5624092	0					
ANR	5624099	Identifier	self		5624092	0					
ANR	5624100	Identifier	hint_count		5624092	1					
ANR	5624101	PtrMemberAccess	self -> max_hint_count		5624092	1					
ANR	5624102	Identifier	self		5624092	0					
ANR	5624103	Identifier	max_hint_count		5624092	1					
ANR	5624104	IfStatement	"if ( t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> hint , self -> hint0 , & self -> max_hint_count , sizeof ( self -> hint0 ) / count_of ( self -> hint0 ) , T1_MAX_HINTS , s_hint_array ) )"		5624092	1					
ANR	5624105	Condition	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> hint , self -> hint0 , & self -> max_hint_count , sizeof ( self -> hint0 ) / count_of ( self -> hint0 ) , T1_MAX_HINTS , s_hint_array )"	1271:11:52333:52537	5624092	0	True				
ANR	5624106	CallExpression	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> hint , self -> hint0 , & self -> max_hint_count , sizeof ( self -> hint0 ) / count_of ( self -> hint0 ) , T1_MAX_HINTS , s_hint_array )"		5624092	0					
ANR	5624107	Callee	t1_hinter__realloc_array		5624092	0					
ANR	5624108	Identifier	t1_hinter__realloc_array		5624092	0					
ANR	5624109	ArgumentList	self -> memory		5624092	1					
ANR	5624110	Argument	self -> memory		5624092	0					
ANR	5624111	PtrMemberAccess	self -> memory		5624092	0					
ANR	5624112	Identifier	self		5624092	0					
ANR	5624113	Identifier	memory		5624092	1					
ANR	5624114	Argument	( void * * ) & self -> hint		5624092	1					
ANR	5624115	CastExpression	( void * * ) & self -> hint		5624092	0					
ANR	5624116	CastTarget	void * *		5624092	0					
ANR	5624117	UnaryOperationExpression	& self -> hint		5624092	1					
ANR	5624118	UnaryOperator	&		5624092	0					
ANR	5624119	PtrMemberAccess	self -> hint		5624092	1					
ANR	5624120	Identifier	self		5624092	0					
ANR	5624121	Identifier	hint		5624092	1					
ANR	5624122	Argument	self -> hint0		5624092	2					
ANR	5624123	PtrMemberAccess	self -> hint0		5624092	0					
ANR	5624124	Identifier	self		5624092	0					
ANR	5624125	Identifier	hint0		5624092	1					
ANR	5624126	Argument	& self -> max_hint_count		5624092	3					
ANR	5624127	UnaryOperationExpression	& self -> max_hint_count		5624092	0					
ANR	5624128	UnaryOperator	&		5624092	0					
ANR	5624129	PtrMemberAccess	self -> max_hint_count		5624092	1					
ANR	5624130	Identifier	self		5624092	0					
ANR	5624131	Identifier	max_hint_count		5624092	1					
ANR	5624132	Argument	sizeof ( self -> hint0 ) / count_of ( self -> hint0 )		5624092	4					
ANR	5624133	MultiplicativeExpression	sizeof ( self -> hint0 ) / count_of ( self -> hint0 )		5624092	0		/			
ANR	5624134	SizeofExpression	sizeof ( self -> hint0 )		5624092	0					
ANR	5624135	Sizeof	sizeof		5624092	0					
ANR	5624136	PtrMemberAccess	self -> hint0		5624092	1					
ANR	5624137	Identifier	self		5624092	0					
ANR	5624138	Identifier	hint0		5624092	1					
ANR	5624139	CallExpression	count_of ( self -> hint0 )		5624092	1					
ANR	5624140	Callee	count_of		5624092	0					
ANR	5624141	Identifier	count_of		5624092	0					
ANR	5624142	ArgumentList	self -> hint0		5624092	1					
ANR	5624143	Argument	self -> hint0		5624092	0					
ANR	5624144	PtrMemberAccess	self -> hint0		5624092	0					
ANR	5624145	Identifier	self		5624092	0					
ANR	5624146	Identifier	hint0		5624092	1					
ANR	5624147	Argument	T1_MAX_HINTS		5624092	5					
ANR	5624148	Identifier	T1_MAX_HINTS		5624092	0					
ANR	5624149	Argument	s_hint_array		5624092	6					
ANR	5624150	Identifier	s_hint_array		5624092	0					
ANR	5624151	ExpressionStatement	return_error ( gs_error_VMerror )	1273:12:52552:52582	5624092	1	True				
ANR	5624152	CallExpression	return_error ( gs_error_VMerror )		5624092	0					
ANR	5624153	Callee	return_error		5624092	0					
ANR	5624154	Identifier	return_error		5624092	0					
ANR	5624155	ArgumentList	gs_error_VMerror		5624092	1					
ANR	5624156	Argument	gs_error_VMerror		5624092	0					
ANR	5624157	Identifier	gs_error_VMerror		5624092	0					
ANR	5624158	ExpressionStatement	* hint = & self -> hint [ self -> hint_count ]	1274:4:52588:52625	5624092	1	True				
ANR	5624159	AssignmentExpression	* hint = & self -> hint [ self -> hint_count ]		5624092	0		=			
ANR	5624160	UnaryOperationExpression	* hint		5624092	0					
ANR	5624161	UnaryOperator	*		5624092	0					
ANR	5624162	Identifier	hint		5624092	1					
ANR	5624163	UnaryOperationExpression	& self -> hint [ self -> hint_count ]		5624092	1					
ANR	5624164	UnaryOperator	&		5624092	0					
ANR	5624165	ArrayIndexing	self -> hint [ self -> hint_count ]		5624092	1					
ANR	5624166	PtrMemberAccess	self -> hint		5624092	0					
ANR	5624167	Identifier	self		5624092	0					
ANR	5624168	Identifier	hint		5624092	1					
ANR	5624169	PtrMemberAccess	self -> hint_count		5624092	1					
ANR	5624170	Identifier	self		5624092	0					
ANR	5624171	Identifier	hint_count		5624092	1					
ANR	5624172	ReturnStatement	return 0 ;	1275:4:52631:52639	5624092	2	True				
ANR	5624173	PrimaryExpression	0		5624092	0					
ANR	5624174	ReturnType	static inline int		5624092	1					
ANR	5624175	Identifier	t1_hinter__can_add_hint		5624092	2					
ANR	5624176	ParameterList	"t1_hinter * self , t1_hint * * hint"		5624092	3					
ANR	5624177	Parameter	t1_hinter * self	1269:42:52238:52253	5624092	0	True				
ANR	5624178	ParameterType	t1_hinter *		5624092	0					
ANR	5624179	Identifier	self		5624092	1					
ANR	5624180	Parameter	t1_hint * * hint	1269:60:52256:52269	5624092	1	True				
ANR	5624181	ParameterType	t1_hint * *		5624092	0					
ANR	5624182	Identifier	hint		5624092	1					
ANR	5624183	CFGEntryNode	ENTRY		5624092		True				
ANR	5624184	CFGExitNode	EXIT		5624092		True				
ANR	5624185	Symbol	* hint		5624092						
ANR	5624186	Symbol	T1_MAX_HINTS		5624092						
ANR	5624187	Symbol	self -> hint		5624092						
ANR	5624188	Symbol	* self		5624092						
ANR	5624189	Symbol	t1_hinter__realloc_array		5624092						
ANR	5624190	Symbol	self -> max_hint_count		5624092						
ANR	5624191	Symbol	& self -> hint		5624092						
ANR	5624192	Symbol	self -> memory		5624092						
ANR	5624193	Symbol	gs_error_VMerror		5624092						
ANR	5624194	Symbol	self -> hint_count		5624092						
ANR	5624195	Symbol	& self -> max_hint_count		5624092						
ANR	5624196	Symbol	count_of		5624092						
ANR	5624197	Symbol	self -> hint0		5624092						
ANR	5624198	Symbol	hint		5624092						
ANR	5624199	Symbol	self		5624092						
ANR	5624200	Symbol	s_hint_array		5624092						
ANR	5624201	Function	t1_hinter__flex_beg	1278:0:52644:52902							
ANR	5624202	FunctionDef	t1_hinter__flex_beg (t1_hinter * self)		5624201	0					
ANR	5624203	CompoundStatement		1279:0:52686:52902	5624201	0					
ANR	5624204	IfStatement	if ( self -> flex_count != 0 )		5624201	0					
ANR	5624205	Condition	self -> flex_count != 0	1279:7:52694:52714	5624201	0	True				
ANR	5624206	EqualityExpression	self -> flex_count != 0		5624201	0		!=			
ANR	5624207	PtrMemberAccess	self -> flex_count		5624201	0					
ANR	5624208	Identifier	self		5624201	0					
ANR	5624209	Identifier	flex_count		5624201	1					
ANR	5624210	PrimaryExpression	0		5624201	1					
ANR	5624211	ExpressionStatement	return_error ( gs_error_invalidfont )	1280:8:52725:52759	5624201	1	True				
ANR	5624212	CallExpression	return_error ( gs_error_invalidfont )		5624201	0					
ANR	5624213	Callee	return_error		5624201	0					
ANR	5624214	Identifier	return_error		5624201	0					
ANR	5624215	ArgumentList	gs_error_invalidfont		5624201	1					
ANR	5624216	Argument	gs_error_invalidfont		5624201	0					
ANR	5624217	Identifier	gs_error_invalidfont		5624201	0					
ANR	5624218	ExpressionStatement	self -> flex_count ++	1281:4:52765:52783	5624201	1	True				
ANR	5624219	PostIncDecOperationExpression	self -> flex_count ++		5624201	0					
ANR	5624220	PtrMemberAccess	self -> flex_count		5624201	0					
ANR	5624221	Identifier	self		5624201	0					
ANR	5624222	Identifier	flex_count		5624201	1					
ANR	5624223	IncDec	++		5624201	1					
ANR	5624224	ExpressionStatement	self -> have_flex = true	1282:4:52789:52811	5624201	2	True				
ANR	5624225	AssignmentExpression	self -> have_flex = true		5624201	0		=			
ANR	5624226	PtrMemberAccess	self -> have_flex		5624201	0					
ANR	5624227	Identifier	self		5624201	0					
ANR	5624228	Identifier	have_flex		5624201	1					
ANR	5624229	Identifier	true		5624201	1					
ANR	5624230	IfStatement	if ( self -> pass_through )		5624201	3					
ANR	5624231	Condition	self -> pass_through	1283:8:52821:52838	5624201	0	True				
ANR	5624232	PtrMemberAccess	self -> pass_through		5624201	0					
ANR	5624233	Identifier	self		5624201	0					
ANR	5624234	Identifier	pass_through		5624201	1					
ANR	5624235	ReturnStatement	"return t1_hinter__rmoveto ( self , 0 , 0 ) ;"	1284:8:52849:52886	5624201	1	True				
ANR	5624236	CallExpression	"t1_hinter__rmoveto ( self , 0 , 0 )"		5624201	0					
ANR	5624237	Callee	t1_hinter__rmoveto		5624201	0					
ANR	5624238	Identifier	t1_hinter__rmoveto		5624201	0					
ANR	5624239	ArgumentList	self		5624201	1					
ANR	5624240	Argument	self		5624201	0					
ANR	5624241	Identifier	self		5624201	0					
ANR	5624242	Argument	0		5624201	1					
ANR	5624243	PrimaryExpression	0		5624201	0					
ANR	5624244	Argument	0		5624201	2					
ANR	5624245	PrimaryExpression	0		5624201	0					
ANR	5624246	ReturnStatement	return 0 ;	1285:4:52892:52900	5624201	4	True				
ANR	5624247	PrimaryExpression	0		5624201	0					
ANR	5624248	ReturnType	int		5624201	1					
ANR	5624249	Identifier	t1_hinter__flex_beg		5624201	2					
ANR	5624250	ParameterList	t1_hinter * self		5624201	3					
ANR	5624251	Parameter	t1_hinter * self	1278:24:52668:52683	5624201	0	True				
ANR	5624252	ParameterType	t1_hinter *		5624201	0					
ANR	5624253	Identifier	self		5624201	1					
ANR	5624254	CFGEntryNode	ENTRY		5624201		True				
ANR	5624255	CFGExitNode	EXIT		5624201		True				
ANR	5624256	Symbol	* self		5624201						
ANR	5624257	Symbol	true		5624201						
ANR	5624258	Symbol	self		5624201						
ANR	5624259	Symbol	self -> pass_through		5624201						
ANR	5624260	Symbol	t1_hinter__rmoveto		5624201						
ANR	5624261	Symbol	self -> flex_count		5624201						
ANR	5624262	Symbol	gs_error_invalidfont		5624201						
ANR	5624263	Symbol	self -> have_flex		5624201						
ANR	5624264	Function	t1_hinter__flex_point	1288:0:52905:53062							
ANR	5624265	FunctionDef	t1_hinter__flex_point (t1_hinter * self)		5624264	0					
ANR	5624266	CompoundStatement		1289:0:52949:53062	5624264	0					
ANR	5624267	IfStatement	if ( self -> flex_count == 0 )		5624264	0					
ANR	5624268	Condition	self -> flex_count == 0	1289:7:52957:52977	5624264	0	True				
ANR	5624269	EqualityExpression	self -> flex_count == 0		5624264	0		==			
ANR	5624270	PtrMemberAccess	self -> flex_count		5624264	0					
ANR	5624271	Identifier	self		5624264	0					
ANR	5624272	Identifier	flex_count		5624264	1					
ANR	5624273	PrimaryExpression	0		5624264	1					
ANR	5624274	ExpressionStatement	return_error ( gs_error_invalidfont )	1290:8:52988:53022	5624264	1	True				
ANR	5624275	CallExpression	return_error ( gs_error_invalidfont )		5624264	0					
ANR	5624276	Callee	return_error		5624264	0					
ANR	5624277	Identifier	return_error		5624264	0					
ANR	5624278	ArgumentList	gs_error_invalidfont		5624264	1					
ANR	5624279	Argument	gs_error_invalidfont		5624264	0					
ANR	5624280	Identifier	gs_error_invalidfont		5624264	0					
ANR	5624281	ExpressionStatement	self -> flex_count ++	1291:4:53028:53046	5624264	1	True				
ANR	5624282	PostIncDecOperationExpression	self -> flex_count ++		5624264	0					
ANR	5624283	PtrMemberAccess	self -> flex_count		5624264	0					
ANR	5624284	Identifier	self		5624264	0					
ANR	5624285	Identifier	flex_count		5624264	1					
ANR	5624286	IncDec	++		5624264	1					
ANR	5624287	ReturnStatement	return 0 ;	1292:4:53052:53060	5624264	2	True				
ANR	5624288	PrimaryExpression	0		5624264	0					
ANR	5624289	ReturnType	int		5624264	1					
ANR	5624290	Identifier	t1_hinter__flex_point		5624264	2					
ANR	5624291	ParameterList	t1_hinter * self		5624264	3					
ANR	5624292	Parameter	t1_hinter * self	1288:26:52931:52946	5624264	0	True				
ANR	5624293	ParameterType	t1_hinter *		5624264	0					
ANR	5624294	Identifier	self		5624264	1					
ANR	5624295	CFGEntryNode	ENTRY		5624264		True				
ANR	5624296	CFGExitNode	EXIT		5624264		True				
ANR	5624297	Symbol	* self		5624264						
ANR	5624298	Symbol	self		5624264						
ANR	5624299	Symbol	self -> flex_count		5624264						
ANR	5624300	Symbol	gs_error_invalidfont		5624264						
ANR	5624301	Function	t1_hinter__flex_end	1295:0:53065:55403							
ANR	5624302	FunctionDef	"t1_hinter__flex_end (t1_hinter * self , fixed flex_height)"		5624301	0					
ANR	5624303	CompoundStatement		1296:0:53126:55403	5624301	0					
ANR	5624304	IdentifierDeclStatement	"t1_pole * pole0 , * pole1 , * pole4 ;"	1296:3:53130:53160	5624301	0	True				
ANR	5624305	IdentifierDecl	* pole0		5624301	0					
ANR	5624306	IdentifierDeclType	t1_pole *		5624301	0					
ANR	5624307	Identifier	pole0		5624301	1					
ANR	5624308	IdentifierDecl	* pole1		5624301	1					
ANR	5624309	IdentifierDeclType	t1_pole *		5624301	0					
ANR	5624310	Identifier	pole1		5624301	1					
ANR	5624311	IdentifierDecl	* pole4		5624301	2					
ANR	5624312	IdentifierDeclType	t1_pole *		5624301	0					
ANR	5624313	Identifier	pole4		5624301	1					
ANR	5624314	IdentifierDeclStatement	"t1_hinter_space_coord ox , oy ;"	1297:4:53166:53194	5624301	1	True				
ANR	5624315	IdentifierDecl	ox		5624301	0					
ANR	5624316	IdentifierDeclType	t1_hinter_space_coord		5624301	0					
ANR	5624317	Identifier	ox		5624301	1					
ANR	5624318	IdentifierDecl	oy		5624301	1					
ANR	5624319	IdentifierDeclType	t1_hinter_space_coord		5624301	0					
ANR	5624320	Identifier	oy		5624301	1					
ANR	5624321	IdentifierDeclStatement	const int32_t div_x = self -> g2o_fraction << self -> log2_pixels_x ;	1298:4:53200:53263	5624301	2	True				
ANR	5624322	IdentifierDecl	div_x = self -> g2o_fraction << self -> log2_pixels_x		5624301	0					
ANR	5624323	IdentifierDeclType	const int32_t		5624301	0					
ANR	5624324	Identifier	div_x		5624301	1					
ANR	5624325	AssignmentExpression	div_x = self -> g2o_fraction << self -> log2_pixels_x		5624301	2		=			
ANR	5624326	Identifier	div_x		5624301	0					
ANR	5624327	ShiftExpression	self -> g2o_fraction << self -> log2_pixels_x		5624301	1		<<			
ANR	5624328	PtrMemberAccess	self -> g2o_fraction		5624301	0					
ANR	5624329	Identifier	self		5624301	0					
ANR	5624330	Identifier	g2o_fraction		5624301	1					
ANR	5624331	PtrMemberAccess	self -> log2_pixels_x		5624301	1					
ANR	5624332	Identifier	self		5624301	0					
ANR	5624333	Identifier	log2_pixels_x		5624301	1					
ANR	5624334	IdentifierDeclStatement	const int32_t div_y = self -> g2o_fraction << self -> log2_pixels_y ;	1299:4:53269:53332	5624301	3	True				
ANR	5624335	IdentifierDecl	div_y = self -> g2o_fraction << self -> log2_pixels_y		5624301	0					
ANR	5624336	IdentifierDeclType	const int32_t		5624301	0					
ANR	5624337	Identifier	div_y		5624301	1					
ANR	5624338	AssignmentExpression	div_y = self -> g2o_fraction << self -> log2_pixels_y		5624301	2		=			
ANR	5624339	Identifier	div_y		5624301	0					
ANR	5624340	ShiftExpression	self -> g2o_fraction << self -> log2_pixels_y		5624301	1		<<			
ANR	5624341	PtrMemberAccess	self -> g2o_fraction		5624301	0					
ANR	5624342	Identifier	self		5624301	0					
ANR	5624343	Identifier	g2o_fraction		5624301	1					
ANR	5624344	PtrMemberAccess	self -> log2_pixels_y		5624301	1					
ANR	5624345	Identifier	self		5624301	0					
ANR	5624346	Identifier	log2_pixels_y		5624301	1					
ANR	5624347	IfStatement	if ( self -> flex_count != 8 )		5624301	4					
ANR	5624348	Condition	self -> flex_count != 8	1301:8:53343:53363	5624301	0	True				
ANR	5624349	EqualityExpression	self -> flex_count != 8		5624301	0		!=			
ANR	5624350	PtrMemberAccess	self -> flex_count		5624301	0					
ANR	5624351	Identifier	self		5624301	0					
ANR	5624352	Identifier	flex_count		5624301	1					
ANR	5624353	PrimaryExpression	8		5624301	1					
ANR	5624354	ExpressionStatement	return_error ( gs_error_invalidfont )	1302:8:53374:53408	5624301	1	True				
ANR	5624355	CallExpression	return_error ( gs_error_invalidfont )		5624301	0					
ANR	5624356	Callee	return_error		5624301	0					
ANR	5624357	Identifier	return_error		5624301	0					
ANR	5624358	ArgumentList	gs_error_invalidfont		5624301	1					
ANR	5624359	Argument	gs_error_invalidfont		5624301	0					
ANR	5624360	Identifier	gs_error_invalidfont		5624301	0					
ANR	5624361	ExpressionStatement	pole0 = & self -> pole [ self -> pole_count - 8 ]	1304:4:53469:53510	5624301	5	True				
ANR	5624362	AssignmentExpression	pole0 = & self -> pole [ self -> pole_count - 8 ]		5624301	0		=			
ANR	5624363	Identifier	pole0		5624301	0					
ANR	5624364	UnaryOperationExpression	& self -> pole [ self -> pole_count - 8 ]		5624301	1					
ANR	5624365	UnaryOperator	&		5624301	0					
ANR	5624366	ArrayIndexing	self -> pole [ self -> pole_count - 8 ]		5624301	1					
ANR	5624367	PtrMemberAccess	self -> pole		5624301	0					
ANR	5624368	Identifier	self		5624301	0					
ANR	5624369	Identifier	pole		5624301	1					
ANR	5624370	AdditiveExpression	self -> pole_count - 8		5624301	1		-			
ANR	5624371	PtrMemberAccess	self -> pole_count		5624301	0					
ANR	5624372	Identifier	self		5624301	0					
ANR	5624373	Identifier	pole_count		5624301	1					
ANR	5624374	PrimaryExpression	8		5624301	1					
ANR	5624375	ExpressionStatement	pole1 = & self -> pole [ self -> pole_count - 7 ]	1305:4:53516:53557	5624301	6	True				
ANR	5624376	AssignmentExpression	pole1 = & self -> pole [ self -> pole_count - 7 ]		5624301	0		=			
ANR	5624377	Identifier	pole1		5624301	0					
ANR	5624378	UnaryOperationExpression	& self -> pole [ self -> pole_count - 7 ]		5624301	1					
ANR	5624379	UnaryOperator	&		5624301	0					
ANR	5624380	ArrayIndexing	self -> pole [ self -> pole_count - 7 ]		5624301	1					
ANR	5624381	PtrMemberAccess	self -> pole		5624301	0					
ANR	5624382	Identifier	self		5624301	0					
ANR	5624383	Identifier	pole		5624301	1					
ANR	5624384	AdditiveExpression	self -> pole_count - 7		5624301	1		-			
ANR	5624385	PtrMemberAccess	self -> pole_count		5624301	0					
ANR	5624386	Identifier	self		5624301	0					
ANR	5624387	Identifier	pole_count		5624301	1					
ANR	5624388	PrimaryExpression	7		5624301	1					
ANR	5624389	ExpressionStatement	pole4 = & self -> pole [ self -> pole_count - 4 ]	1306:4:53563:53604	5624301	7	True				
ANR	5624390	AssignmentExpression	pole4 = & self -> pole [ self -> pole_count - 4 ]		5624301	0		=			
ANR	5624391	Identifier	pole4		5624301	0					
ANR	5624392	UnaryOperationExpression	& self -> pole [ self -> pole_count - 4 ]		5624301	1					
ANR	5624393	UnaryOperator	&		5624301	0					
ANR	5624394	ArrayIndexing	self -> pole [ self -> pole_count - 4 ]		5624301	1					
ANR	5624395	PtrMemberAccess	self -> pole		5624301	0					
ANR	5624396	Identifier	self		5624301	0					
ANR	5624397	Identifier	pole		5624301	1					
ANR	5624398	AdditiveExpression	self -> pole_count - 4		5624301	1		-			
ANR	5624399	PtrMemberAccess	self -> pole_count		5624301	0					
ANR	5624400	Identifier	self		5624301	0					
ANR	5624401	Identifier	pole_count		5624301	1					
ANR	5624402	PrimaryExpression	4		5624301	1					
ANR	5624403	ExpressionStatement	"g2o ( self , pole4 -> gx - pole1 -> gx , pole4 -> gy - pole1 -> gy , & ox , & oy )"	1307:4:53610:53675	5624301	8	True				
ANR	5624404	CallExpression	"g2o ( self , pole4 -> gx - pole1 -> gx , pole4 -> gy - pole1 -> gy , & ox , & oy )"		5624301	0					
ANR	5624405	Callee	g2o		5624301	0					
ANR	5624406	Identifier	g2o		5624301	0					
ANR	5624407	ArgumentList	self		5624301	1					
ANR	5624408	Argument	self		5624301	0					
ANR	5624409	Identifier	self		5624301	0					
ANR	5624410	Argument	pole4 -> gx - pole1 -> gx		5624301	1					
ANR	5624411	AdditiveExpression	pole4 -> gx - pole1 -> gx		5624301	0		-			
ANR	5624412	PtrMemberAccess	pole4 -> gx		5624301	0					
ANR	5624413	Identifier	pole4		5624301	0					
ANR	5624414	Identifier	gx		5624301	1					
ANR	5624415	PtrMemberAccess	pole1 -> gx		5624301	1					
ANR	5624416	Identifier	pole1		5624301	0					
ANR	5624417	Identifier	gx		5624301	1					
ANR	5624418	Argument	pole4 -> gy - pole1 -> gy		5624301	2					
ANR	5624419	AdditiveExpression	pole4 -> gy - pole1 -> gy		5624301	0		-			
ANR	5624420	PtrMemberAccess	pole4 -> gy		5624301	0					
ANR	5624421	Identifier	pole4		5624301	0					
ANR	5624422	Identifier	gy		5624301	1					
ANR	5624423	PtrMemberAccess	pole1 -> gy		5624301	1					
ANR	5624424	Identifier	pole1		5624301	0					
ANR	5624425	Identifier	gy		5624301	1					
ANR	5624426	Argument	& ox		5624301	3					
ANR	5624427	UnaryOperationExpression	& ox		5624301	0					
ANR	5624428	UnaryOperator	&		5624301	0					
ANR	5624429	Identifier	ox		5624301	1					
ANR	5624430	Argument	& oy		5624301	4					
ANR	5624431	UnaryOperationExpression	& oy		5624301	0					
ANR	5624432	UnaryOperator	&		5624301	0					
ANR	5624433	Identifier	oy		5624301	1					
ANR	5624434	IfStatement	if ( any_abs ( ox ) > div_x * fixed2float ( flex_height ) / 100 || any_abs ( oy ) > div_y * fixed2float ( flex_height ) / 100 )		5624301	9					
ANR	5624435	Condition	any_abs ( ox ) > div_x * fixed2float ( flex_height ) / 100 || any_abs ( oy ) > div_y * fixed2float ( flex_height ) / 100	1308:8:53685:53800	5624301	0	True				
ANR	5624436	OrExpression	any_abs ( ox ) > div_x * fixed2float ( flex_height ) / 100 || any_abs ( oy ) > div_y * fixed2float ( flex_height ) / 100		5624301	0		||			
ANR	5624437	RelationalExpression	any_abs ( ox ) > div_x * fixed2float ( flex_height ) / 100		5624301	0		>			
ANR	5624438	CallExpression	any_abs ( ox )		5624301	0					
ANR	5624439	Callee	any_abs		5624301	0					
ANR	5624440	Identifier	any_abs		5624301	0					
ANR	5624441	ArgumentList	ox		5624301	1					
ANR	5624442	Argument	ox		5624301	0					
ANR	5624443	Identifier	ox		5624301	0					
ANR	5624444	MultiplicativeExpression	div_x * fixed2float ( flex_height ) / 100		5624301	1		*			
ANR	5624445	Identifier	div_x		5624301	0					
ANR	5624446	MultiplicativeExpression	fixed2float ( flex_height ) / 100		5624301	1		/			
ANR	5624447	CallExpression	fixed2float ( flex_height )		5624301	0					
ANR	5624448	Callee	fixed2float		5624301	0					
ANR	5624449	Identifier	fixed2float		5624301	0					
ANR	5624450	ArgumentList	flex_height		5624301	1					
ANR	5624451	Argument	flex_height		5624301	0					
ANR	5624452	Identifier	flex_height		5624301	0					
ANR	5624453	PrimaryExpression	100		5624301	1					
ANR	5624454	RelationalExpression	any_abs ( oy ) > div_y * fixed2float ( flex_height ) / 100		5624301	1		>			
ANR	5624455	CallExpression	any_abs ( oy )		5624301	0					
ANR	5624456	Callee	any_abs		5624301	0					
ANR	5624457	Identifier	any_abs		5624301	0					
ANR	5624458	ArgumentList	oy		5624301	1					
ANR	5624459	Argument	oy		5624301	0					
ANR	5624460	Identifier	oy		5624301	0					
ANR	5624461	MultiplicativeExpression	div_y * fixed2float ( flex_height ) / 100		5624301	1		*			
ANR	5624462	Identifier	div_y		5624301	0					
ANR	5624463	MultiplicativeExpression	fixed2float ( flex_height ) / 100		5624301	1		/			
ANR	5624464	CallExpression	fixed2float ( flex_height )		5624301	0					
ANR	5624465	Callee	fixed2float		5624301	0					
ANR	5624466	Identifier	fixed2float		5624301	0					
ANR	5624467	ArgumentList	flex_height		5624301	1					
ANR	5624468	Argument	flex_height		5624301	0					
ANR	5624469	Identifier	flex_height		5624301	0					
ANR	5624470	PrimaryExpression	100		5624301	1					
ANR	5624471	CompoundStatement		14:62:676:676	5624301	1					
ANR	5624472	IfStatement	if ( self -> pass_through )		5624301	0					
ANR	5624473	Condition	self -> pass_through	1311:12:53846:53863	5624301	0	True				
ANR	5624474	PtrMemberAccess	self -> pass_through		5624301	0					
ANR	5624475	Identifier	self		5624301	0					
ANR	5624476	Identifier	pass_through		5624301	1					
ANR	5624477	CompoundStatement		18:12:801:809	5624301	1					
ANR	5624478	IdentifierDeclStatement	"fixed fx0 , fy0 , fx1 , fy1 , fx2 , fy2 ;"	1312:12:53880:53914	5624301	0	True				
ANR	5624479	IdentifierDecl	fx0		5624301	0					
ANR	5624480	IdentifierDeclType	fixed		5624301	0					
ANR	5624481	Identifier	fx0		5624301	1					
ANR	5624482	IdentifierDecl	fy0		5624301	1					
ANR	5624483	IdentifierDeclType	fixed		5624301	0					
ANR	5624484	Identifier	fy0		5624301	1					
ANR	5624485	IdentifierDecl	fx1		5624301	2					
ANR	5624486	IdentifierDeclType	fixed		5624301	0					
ANR	5624487	Identifier	fx1		5624301	1					
ANR	5624488	IdentifierDecl	fy1		5624301	3					
ANR	5624489	IdentifierDeclType	fixed		5624301	0					
ANR	5624490	Identifier	fy1		5624301	1					
ANR	5624491	IdentifierDecl	fx2		5624301	4					
ANR	5624492	IdentifierDeclType	fixed		5624301	0					
ANR	5624493	Identifier	fx2		5624301	1					
ANR	5624494	IdentifierDecl	fy2		5624301	5					
ANR	5624495	IdentifierDeclType	fixed		5624301	0					
ANR	5624496	Identifier	fy2		5624301	1					
ANR	5624497	IdentifierDeclStatement	int code ;	1313:12:53928:53936	5624301	1	True				
ANR	5624498	IdentifierDecl	code		5624301	0					
ANR	5624499	IdentifierDeclType	int		5624301	0					
ANR	5624500	Identifier	code		5624301	1					
ANR	5624501	ExpressionStatement	"g2d ( self , pole0 [ 2 ] . gx , pole0 [ 2 ] . gy , & fx0 , & fy0 )"	1315:12:53951:53998	5624301	2	True				
ANR	5624502	CallExpression	"g2d ( self , pole0 [ 2 ] . gx , pole0 [ 2 ] . gy , & fx0 , & fy0 )"		5624301	0					
ANR	5624503	Callee	g2d		5624301	0					
ANR	5624504	Identifier	g2d		5624301	0					
ANR	5624505	ArgumentList	self		5624301	1					
ANR	5624506	Argument	self		5624301	0					
ANR	5624507	Identifier	self		5624301	0					
ANR	5624508	Argument	pole0 [ 2 ] . gx		5624301	1					
ANR	5624509	MemberAccess	pole0 [ 2 ] . gx		5624301	0					
ANR	5624510	ArrayIndexing	pole0 [ 2 ]		5624301	0					
ANR	5624511	Identifier	pole0		5624301	0					
ANR	5624512	PrimaryExpression	2		5624301	1					
ANR	5624513	Identifier	gx		5624301	1					
ANR	5624514	Argument	pole0 [ 2 ] . gy		5624301	2					
ANR	5624515	MemberAccess	pole0 [ 2 ] . gy		5624301	0					
ANR	5624516	ArrayIndexing	pole0 [ 2 ]		5624301	0					
ANR	5624517	Identifier	pole0		5624301	0					
ANR	5624518	PrimaryExpression	2		5624301	1					
ANR	5624519	Identifier	gy		5624301	1					
ANR	5624520	Argument	& fx0		5624301	3					
ANR	5624521	UnaryOperationExpression	& fx0		5624301	0					
ANR	5624522	UnaryOperator	&		5624301	0					
ANR	5624523	Identifier	fx0		5624301	1					
ANR	5624524	Argument	& fy0		5624301	4					
ANR	5624525	UnaryOperationExpression	& fy0		5624301	0					
ANR	5624526	UnaryOperator	&		5624301	0					
ANR	5624527	Identifier	fy0		5624301	1					
ANR	5624528	ExpressionStatement	"g2d ( self , pole0 [ 3 ] . gx , pole0 [ 3 ] . gy , & fx1 , & fy1 )"	1316:12:54012:54059	5624301	3	True				
ANR	5624529	CallExpression	"g2d ( self , pole0 [ 3 ] . gx , pole0 [ 3 ] . gy , & fx1 , & fy1 )"		5624301	0					
ANR	5624530	Callee	g2d		5624301	0					
ANR	5624531	Identifier	g2d		5624301	0					
ANR	5624532	ArgumentList	self		5624301	1					
ANR	5624533	Argument	self		5624301	0					
ANR	5624534	Identifier	self		5624301	0					
ANR	5624535	Argument	pole0 [ 3 ] . gx		5624301	1					
ANR	5624536	MemberAccess	pole0 [ 3 ] . gx		5624301	0					
ANR	5624537	ArrayIndexing	pole0 [ 3 ]		5624301	0					
ANR	5624538	Identifier	pole0		5624301	0					
ANR	5624539	PrimaryExpression	3		5624301	1					
ANR	5624540	Identifier	gx		5624301	1					
ANR	5624541	Argument	pole0 [ 3 ] . gy		5624301	2					
ANR	5624542	MemberAccess	pole0 [ 3 ] . gy		5624301	0					
ANR	5624543	ArrayIndexing	pole0 [ 3 ]		5624301	0					
ANR	5624544	Identifier	pole0		5624301	0					
ANR	5624545	PrimaryExpression	3		5624301	1					
ANR	5624546	Identifier	gy		5624301	1					
ANR	5624547	Argument	& fx1		5624301	3					
ANR	5624548	UnaryOperationExpression	& fx1		5624301	0					
ANR	5624549	UnaryOperator	&		5624301	0					
ANR	5624550	Identifier	fx1		5624301	1					
ANR	5624551	Argument	& fy1		5624301	4					
ANR	5624552	UnaryOperationExpression	& fy1		5624301	0					
ANR	5624553	UnaryOperator	&		5624301	0					
ANR	5624554	Identifier	fy1		5624301	1					
ANR	5624555	ExpressionStatement	"g2d ( self , pole0 [ 4 ] . gx , pole0 [ 4 ] . gy , & fx2 , & fy2 )"	1317:12:54073:54120	5624301	4	True				
ANR	5624556	CallExpression	"g2d ( self , pole0 [ 4 ] . gx , pole0 [ 4 ] . gy , & fx2 , & fy2 )"		5624301	0					
ANR	5624557	Callee	g2d		5624301	0					
ANR	5624558	Identifier	g2d		5624301	0					
ANR	5624559	ArgumentList	self		5624301	1					
ANR	5624560	Argument	self		5624301	0					
ANR	5624561	Identifier	self		5624301	0					
ANR	5624562	Argument	pole0 [ 4 ] . gx		5624301	1					
ANR	5624563	MemberAccess	pole0 [ 4 ] . gx		5624301	0					
ANR	5624564	ArrayIndexing	pole0 [ 4 ]		5624301	0					
ANR	5624565	Identifier	pole0		5624301	0					
ANR	5624566	PrimaryExpression	4		5624301	1					
ANR	5624567	Identifier	gx		5624301	1					
ANR	5624568	Argument	pole0 [ 4 ] . gy		5624301	2					
ANR	5624569	MemberAccess	pole0 [ 4 ] . gy		5624301	0					
ANR	5624570	ArrayIndexing	pole0 [ 4 ]		5624301	0					
ANR	5624571	Identifier	pole0		5624301	0					
ANR	5624572	PrimaryExpression	4		5624301	1					
ANR	5624573	Identifier	gy		5624301	1					
ANR	5624574	Argument	& fx2		5624301	3					
ANR	5624575	UnaryOperationExpression	& fx2		5624301	0					
ANR	5624576	UnaryOperator	&		5624301	0					
ANR	5624577	Identifier	fx2		5624301	1					
ANR	5624578	Argument	& fy2		5624301	4					
ANR	5624579	UnaryOperationExpression	& fy2		5624301	0					
ANR	5624580	UnaryOperator	&		5624301	0					
ANR	5624581	Identifier	fy2		5624301	1					
ANR	5624582	ExpressionStatement	"code = gx_path_add_curve ( self -> output_path , fx0 , fy0 , fx1 , fy1 , fx2 , fy2 )"	1318:12:54134:54207	5624301	5	True				
ANR	5624583	AssignmentExpression	"code = gx_path_add_curve ( self -> output_path , fx0 , fy0 , fx1 , fy1 , fx2 , fy2 )"		5624301	0		=			
ANR	5624584	Identifier	code		5624301	0					
ANR	5624585	CallExpression	"gx_path_add_curve ( self -> output_path , fx0 , fy0 , fx1 , fy1 , fx2 , fy2 )"		5624301	1					
ANR	5624586	Callee	gx_path_add_curve		5624301	0					
ANR	5624587	Identifier	gx_path_add_curve		5624301	0					
ANR	5624588	ArgumentList	self -> output_path		5624301	1					
ANR	5624589	Argument	self -> output_path		5624301	0					
ANR	5624590	PtrMemberAccess	self -> output_path		5624301	0					
ANR	5624591	Identifier	self		5624301	0					
ANR	5624592	Identifier	output_path		5624301	1					
ANR	5624593	Argument	fx0		5624301	1					
ANR	5624594	Identifier	fx0		5624301	0					
ANR	5624595	Argument	fy0		5624301	2					
ANR	5624596	Identifier	fy0		5624301	0					
ANR	5624597	Argument	fx1		5624301	3					
ANR	5624598	Identifier	fx1		5624301	0					
ANR	5624599	Argument	fy1		5624301	4					
ANR	5624600	Identifier	fy1		5624301	0					
ANR	5624601	Argument	fx2		5624301	5					
ANR	5624602	Identifier	fx2		5624301	0					
ANR	5624603	Argument	fy2		5624301	6					
ANR	5624604	Identifier	fy2		5624301	0					
ANR	5624605	IfStatement	if ( code < 0 )		5624301	6					
ANR	5624606	Condition	code < 0	1319:16:54225:54232	5624301	0	True				
ANR	5624607	RelationalExpression	code < 0		5624301	0		<			
ANR	5624608	Identifier	code		5624301	0					
ANR	5624609	PrimaryExpression	0		5624301	1					
ANR	5624610	ReturnStatement	return code ;	1320:16:54251:54262	5624301	1	True				
ANR	5624611	Identifier	code		5624301	0					
ANR	5624612	ExpressionStatement	"g2d ( self , pole0 [ 5 ] . gx , pole0 [ 5 ] . gy , & fx0 , & fy0 )"	1321:12:54276:54323	5624301	7	True				
ANR	5624613	CallExpression	"g2d ( self , pole0 [ 5 ] . gx , pole0 [ 5 ] . gy , & fx0 , & fy0 )"		5624301	0					
ANR	5624614	Callee	g2d		5624301	0					
ANR	5624615	Identifier	g2d		5624301	0					
ANR	5624616	ArgumentList	self		5624301	1					
ANR	5624617	Argument	self		5624301	0					
ANR	5624618	Identifier	self		5624301	0					
ANR	5624619	Argument	pole0 [ 5 ] . gx		5624301	1					
ANR	5624620	MemberAccess	pole0 [ 5 ] . gx		5624301	0					
ANR	5624621	ArrayIndexing	pole0 [ 5 ]		5624301	0					
ANR	5624622	Identifier	pole0		5624301	0					
ANR	5624623	PrimaryExpression	5		5624301	1					
ANR	5624624	Identifier	gx		5624301	1					
ANR	5624625	Argument	pole0 [ 5 ] . gy		5624301	2					
ANR	5624626	MemberAccess	pole0 [ 5 ] . gy		5624301	0					
ANR	5624627	ArrayIndexing	pole0 [ 5 ]		5624301	0					
ANR	5624628	Identifier	pole0		5624301	0					
ANR	5624629	PrimaryExpression	5		5624301	1					
ANR	5624630	Identifier	gy		5624301	1					
ANR	5624631	Argument	& fx0		5624301	3					
ANR	5624632	UnaryOperationExpression	& fx0		5624301	0					
ANR	5624633	UnaryOperator	&		5624301	0					
ANR	5624634	Identifier	fx0		5624301	1					
ANR	5624635	Argument	& fy0		5624301	4					
ANR	5624636	UnaryOperationExpression	& fy0		5624301	0					
ANR	5624637	UnaryOperator	&		5624301	0					
ANR	5624638	Identifier	fy0		5624301	1					
ANR	5624639	ExpressionStatement	"g2d ( self , pole0 [ 6 ] . gx , pole0 [ 6 ] . gy , & fx1 , & fy1 )"	1322:12:54337:54384	5624301	8	True				
ANR	5624640	CallExpression	"g2d ( self , pole0 [ 6 ] . gx , pole0 [ 6 ] . gy , & fx1 , & fy1 )"		5624301	0					
ANR	5624641	Callee	g2d		5624301	0					
ANR	5624642	Identifier	g2d		5624301	0					
ANR	5624643	ArgumentList	self		5624301	1					
ANR	5624644	Argument	self		5624301	0					
ANR	5624645	Identifier	self		5624301	0					
ANR	5624646	Argument	pole0 [ 6 ] . gx		5624301	1					
ANR	5624647	MemberAccess	pole0 [ 6 ] . gx		5624301	0					
ANR	5624648	ArrayIndexing	pole0 [ 6 ]		5624301	0					
ANR	5624649	Identifier	pole0		5624301	0					
ANR	5624650	PrimaryExpression	6		5624301	1					
ANR	5624651	Identifier	gx		5624301	1					
ANR	5624652	Argument	pole0 [ 6 ] . gy		5624301	2					
ANR	5624653	MemberAccess	pole0 [ 6 ] . gy		5624301	0					
ANR	5624654	ArrayIndexing	pole0 [ 6 ]		5624301	0					
ANR	5624655	Identifier	pole0		5624301	0					
ANR	5624656	PrimaryExpression	6		5624301	1					
ANR	5624657	Identifier	gy		5624301	1					
ANR	5624658	Argument	& fx1		5624301	3					
ANR	5624659	UnaryOperationExpression	& fx1		5624301	0					
ANR	5624660	UnaryOperator	&		5624301	0					
ANR	5624661	Identifier	fx1		5624301	1					
ANR	5624662	Argument	& fy1		5624301	4					
ANR	5624663	UnaryOperationExpression	& fy1		5624301	0					
ANR	5624664	UnaryOperator	&		5624301	0					
ANR	5624665	Identifier	fy1		5624301	1					
ANR	5624666	ExpressionStatement	"g2d ( self , pole0 [ 7 ] . gx , pole0 [ 7 ] . gy , & fx2 , & fy2 )"	1323:12:54398:54445	5624301	9	True				
ANR	5624667	CallExpression	"g2d ( self , pole0 [ 7 ] . gx , pole0 [ 7 ] . gy , & fx2 , & fy2 )"		5624301	0					
ANR	5624668	Callee	g2d		5624301	0					
ANR	5624669	Identifier	g2d		5624301	0					
ANR	5624670	ArgumentList	self		5624301	1					
ANR	5624671	Argument	self		5624301	0					
ANR	5624672	Identifier	self		5624301	0					
ANR	5624673	Argument	pole0 [ 7 ] . gx		5624301	1					
ANR	5624674	MemberAccess	pole0 [ 7 ] . gx		5624301	0					
ANR	5624675	ArrayIndexing	pole0 [ 7 ]		5624301	0					
ANR	5624676	Identifier	pole0		5624301	0					
ANR	5624677	PrimaryExpression	7		5624301	1					
ANR	5624678	Identifier	gx		5624301	1					
ANR	5624679	Argument	pole0 [ 7 ] . gy		5624301	2					
ANR	5624680	MemberAccess	pole0 [ 7 ] . gy		5624301	0					
ANR	5624681	ArrayIndexing	pole0 [ 7 ]		5624301	0					
ANR	5624682	Identifier	pole0		5624301	0					
ANR	5624683	PrimaryExpression	7		5624301	1					
ANR	5624684	Identifier	gy		5624301	1					
ANR	5624685	Argument	& fx2		5624301	3					
ANR	5624686	UnaryOperationExpression	& fx2		5624301	0					
ANR	5624687	UnaryOperator	&		5624301	0					
ANR	5624688	Identifier	fx2		5624301	1					
ANR	5624689	Argument	& fy2		5624301	4					
ANR	5624690	UnaryOperationExpression	& fy2		5624301	0					
ANR	5624691	UnaryOperator	&		5624301	0					
ANR	5624692	Identifier	fy2		5624301	1					
ANR	5624693	ExpressionStatement	self -> flex_count = 0	1324:12:54459:54479	5624301	10	True				
ANR	5624694	AssignmentExpression	self -> flex_count = 0		5624301	0		=			
ANR	5624695	PtrMemberAccess	self -> flex_count		5624301	0					
ANR	5624696	Identifier	self		5624301	0					
ANR	5624697	Identifier	flex_count		5624301	1					
ANR	5624698	PrimaryExpression	0		5624301	1					
ANR	5624699	ExpressionStatement	self -> pole_count = 0	1325:12:54493:54513	5624301	11	True				
ANR	5624700	AssignmentExpression	self -> pole_count = 0		5624301	0		=			
ANR	5624701	PtrMemberAccess	self -> pole_count		5624301	0					
ANR	5624702	Identifier	self		5624301	0					
ANR	5624703	Identifier	pole_count		5624301	1					
ANR	5624704	PrimaryExpression	0		5624301	1					
ANR	5624705	ReturnStatement	"return gx_path_add_curve ( self -> output_path , fx0 , fy0 , fx1 , fy1 , fx2 , fy2 ) ;"	1326:12:54527:54600	5624301	12	True				
ANR	5624706	CallExpression	"gx_path_add_curve ( self -> output_path , fx0 , fy0 , fx1 , fy1 , fx2 , fy2 )"		5624301	0					
ANR	5624707	Callee	gx_path_add_curve		5624301	0					
ANR	5624708	Identifier	gx_path_add_curve		5624301	0					
ANR	5624709	ArgumentList	self -> output_path		5624301	1					
ANR	5624710	Argument	self -> output_path		5624301	0					
ANR	5624711	PtrMemberAccess	self -> output_path		5624301	0					
ANR	5624712	Identifier	self		5624301	0					
ANR	5624713	Identifier	output_path		5624301	1					
ANR	5624714	Argument	fx0		5624301	1					
ANR	5624715	Identifier	fx0		5624301	0					
ANR	5624716	Argument	fy0		5624301	2					
ANR	5624717	Identifier	fy0		5624301	0					
ANR	5624718	Argument	fx1		5624301	3					
ANR	5624719	Identifier	fx1		5624301	0					
ANR	5624720	Argument	fy1		5624301	4					
ANR	5624721	Identifier	fy1		5624301	0					
ANR	5624722	Argument	fx2		5624301	5					
ANR	5624723	Identifier	fx2		5624301	0					
ANR	5624724	Argument	fy2		5624301	6					
ANR	5624725	Identifier	fy2		5624301	0					
ANR	5624726	ElseStatement	else		5624301	0					
ANR	5624727	CompoundStatement		32:15:1490:1490	5624301	0					
ANR	5624728	ExpressionStatement	"memmove ( pole1 , pole1 + 1 , ( sizeof ( self -> pole0 ) / count_of ( self -> pole0 ) ) * 7 )"	1328:12:54631:54707	5624301	0	True				
ANR	5624729	CallExpression	"memmove ( pole1 , pole1 + 1 , ( sizeof ( self -> pole0 ) / count_of ( self -> pole0 ) ) * 7 )"		5624301	0					
ANR	5624730	Callee	memmove		5624301	0					
ANR	5624731	Identifier	memmove		5624301	0					
ANR	5624732	ArgumentList	pole1		5624301	1					
ANR	5624733	Argument	pole1		5624301	0					
ANR	5624734	Identifier	pole1		5624301	0					
ANR	5624735	Argument	pole1 + 1		5624301	1					
ANR	5624736	AdditiveExpression	pole1 + 1		5624301	0		+			
ANR	5624737	Identifier	pole1		5624301	0					
ANR	5624738	PrimaryExpression	1		5624301	1					
ANR	5624739	Argument	( sizeof ( self -> pole0 ) / count_of ( self -> pole0 ) ) * 7		5624301	2					
ANR	5624740	MultiplicativeExpression	( sizeof ( self -> pole0 ) / count_of ( self -> pole0 ) ) * 7		5624301	0		*			
ANR	5624741	MultiplicativeExpression	sizeof ( self -> pole0 ) / count_of ( self -> pole0 )		5624301	0		/			
ANR	5624742	SizeofExpression	sizeof ( self -> pole0 )		5624301	0					
ANR	5624743	Sizeof	sizeof		5624301	0					
ANR	5624744	PtrMemberAccess	self -> pole0		5624301	1					
ANR	5624745	Identifier	self		5624301	0					
ANR	5624746	Identifier	pole0		5624301	1					
ANR	5624747	CallExpression	count_of ( self -> pole0 )		5624301	1					
ANR	5624748	Callee	count_of		5624301	0					
ANR	5624749	Identifier	count_of		5624301	0					
ANR	5624750	ArgumentList	self -> pole0		5624301	1					
ANR	5624751	Argument	self -> pole0		5624301	0					
ANR	5624752	PtrMemberAccess	self -> pole0		5624301	0					
ANR	5624753	Identifier	self		5624301	0					
ANR	5624754	Identifier	pole0		5624301	1					
ANR	5624755	PrimaryExpression	7		5624301	1					
ANR	5624756	ExpressionStatement	pole0 [ 1 ] . type = pole0 [ 2 ] . type = offcurve	1329:12:54721:54761	5624301	1	True				
ANR	5624757	AssignmentExpression	pole0 [ 1 ] . type = pole0 [ 2 ] . type = offcurve		5624301	0		=			
ANR	5624758	MemberAccess	pole0 [ 1 ] . type		5624301	0					
ANR	5624759	ArrayIndexing	pole0 [ 1 ]		5624301	0					
ANR	5624760	Identifier	pole0		5624301	0					
ANR	5624761	PrimaryExpression	1		5624301	1					
ANR	5624762	Identifier	type		5624301	1					
ANR	5624763	AssignmentExpression	pole0 [ 2 ] . type = offcurve		5624301	1		=			
ANR	5624764	MemberAccess	pole0 [ 2 ] . type		5624301	0					
ANR	5624765	ArrayIndexing	pole0 [ 2 ]		5624301	0					
ANR	5624766	Identifier	pole0		5624301	0					
ANR	5624767	PrimaryExpression	2		5624301	1					
ANR	5624768	Identifier	type		5624301	1					
ANR	5624769	Identifier	offcurve		5624301	1					
ANR	5624770	ExpressionStatement	pole0 [ 3 ] . type = oncurve	1330:12:54775:54798	5624301	2	True				
ANR	5624771	AssignmentExpression	pole0 [ 3 ] . type = oncurve		5624301	0		=			
ANR	5624772	MemberAccess	pole0 [ 3 ] . type		5624301	0					
ANR	5624773	ArrayIndexing	pole0 [ 3 ]		5624301	0					
ANR	5624774	Identifier	pole0		5624301	0					
ANR	5624775	PrimaryExpression	3		5624301	1					
ANR	5624776	Identifier	type		5624301	1					
ANR	5624777	Identifier	oncurve		5624301	1					
ANR	5624778	ExpressionStatement	pole0 [ 4 ] . type = pole0 [ 5 ] . type = offcurve	1331:12:54812:54852	5624301	3	True				
ANR	5624779	AssignmentExpression	pole0 [ 4 ] . type = pole0 [ 5 ] . type = offcurve		5624301	0		=			
ANR	5624780	MemberAccess	pole0 [ 4 ] . type		5624301	0					
ANR	5624781	ArrayIndexing	pole0 [ 4 ]		5624301	0					
ANR	5624782	Identifier	pole0		5624301	0					
ANR	5624783	PrimaryExpression	4		5624301	1					
ANR	5624784	Identifier	type		5624301	1					
ANR	5624785	AssignmentExpression	pole0 [ 5 ] . type = offcurve		5624301	1		=			
ANR	5624786	MemberAccess	pole0 [ 5 ] . type		5624301	0					
ANR	5624787	ArrayIndexing	pole0 [ 5 ]		5624301	0					
ANR	5624788	Identifier	pole0		5624301	0					
ANR	5624789	PrimaryExpression	5		5624301	1					
ANR	5624790	Identifier	type		5624301	1					
ANR	5624791	Identifier	offcurve		5624301	1					
ANR	5624792	ExpressionStatement	pole0 [ 6 ] . type = oncurve	1332:12:54866:54889	5624301	4	True				
ANR	5624793	AssignmentExpression	pole0 [ 6 ] . type = oncurve		5624301	0		=			
ANR	5624794	MemberAccess	pole0 [ 6 ] . type		5624301	0					
ANR	5624795	ArrayIndexing	pole0 [ 6 ]		5624301	0					
ANR	5624796	Identifier	pole0		5624301	0					
ANR	5624797	PrimaryExpression	6		5624301	1					
ANR	5624798	Identifier	type		5624301	1					
ANR	5624799	Identifier	oncurve		5624301	1					
ANR	5624800	ExpressionStatement	self -> pole_count --	1333:12:54903:54921	5624301	5	True				
ANR	5624801	PostIncDecOperationExpression	self -> pole_count --		5624301	0					
ANR	5624802	PtrMemberAccess	self -> pole_count		5624301	0					
ANR	5624803	Identifier	self		5624301	0					
ANR	5624804	Identifier	pole_count		5624301	1					
ANR	5624805	IncDec	--		5624301	1					
ANR	5624806	ElseStatement	else		5624301	0					
ANR	5624807	CompoundStatement		40:11:1817:1817	5624301	0					
ANR	5624808	IfStatement	if ( self -> pass_through )		5624301	0					
ANR	5624809	Condition	self -> pass_through	1337:12:54985:55002	5624301	0	True				
ANR	5624810	PtrMemberAccess	self -> pass_through		5624301	0					
ANR	5624811	Identifier	self		5624301	0					
ANR	5624812	Identifier	pass_through		5624301	1					
ANR	5624813	CompoundStatement		43:12:1892:1904	5624301	1					
ANR	5624814	IdentifierDeclStatement	"fixed fx , fy ;"	1338:12:55019:55031	5624301	0	True				
ANR	5624815	IdentifierDecl	fx		5624301	0					
ANR	5624816	IdentifierDeclType	fixed		5624301	0					
ANR	5624817	Identifier	fx		5624301	1					
ANR	5624818	IdentifierDecl	fy		5624301	1					
ANR	5624819	IdentifierDeclType	fixed		5624301	0					
ANR	5624820	Identifier	fy		5624301	1					
ANR	5624821	ExpressionStatement	"g2d ( self , pole0 [ 7 ] . gx , pole0 [ 7 ] . gy , & fx , & fy )"	1340:12:55046:55091	5624301	1	True				
ANR	5624822	CallExpression	"g2d ( self , pole0 [ 7 ] . gx , pole0 [ 7 ] . gy , & fx , & fy )"		5624301	0					
ANR	5624823	Callee	g2d		5624301	0					
ANR	5624824	Identifier	g2d		5624301	0					
ANR	5624825	ArgumentList	self		5624301	1					
ANR	5624826	Argument	self		5624301	0					
ANR	5624827	Identifier	self		5624301	0					
ANR	5624828	Argument	pole0 [ 7 ] . gx		5624301	1					
ANR	5624829	MemberAccess	pole0 [ 7 ] . gx		5624301	0					
ANR	5624830	ArrayIndexing	pole0 [ 7 ]		5624301	0					
ANR	5624831	Identifier	pole0		5624301	0					
ANR	5624832	PrimaryExpression	7		5624301	1					
ANR	5624833	Identifier	gx		5624301	1					
ANR	5624834	Argument	pole0 [ 7 ] . gy		5624301	2					
ANR	5624835	MemberAccess	pole0 [ 7 ] . gy		5624301	0					
ANR	5624836	ArrayIndexing	pole0 [ 7 ]		5624301	0					
ANR	5624837	Identifier	pole0		5624301	0					
ANR	5624838	PrimaryExpression	7		5624301	1					
ANR	5624839	Identifier	gy		5624301	1					
ANR	5624840	Argument	& fx		5624301	3					
ANR	5624841	UnaryOperationExpression	& fx		5624301	0					
ANR	5624842	UnaryOperator	&		5624301	0					
ANR	5624843	Identifier	fx		5624301	1					
ANR	5624844	Argument	& fy		5624301	4					
ANR	5624845	UnaryOperationExpression	& fy		5624301	0					
ANR	5624846	UnaryOperator	&		5624301	0					
ANR	5624847	Identifier	fy		5624301	1					
ANR	5624848	ExpressionStatement	self -> flex_count = 0	1341:12:55105:55125	5624301	2	True				
ANR	5624849	AssignmentExpression	self -> flex_count = 0		5624301	0		=			
ANR	5624850	PtrMemberAccess	self -> flex_count		5624301	0					
ANR	5624851	Identifier	self		5624301	0					
ANR	5624852	Identifier	flex_count		5624301	1					
ANR	5624853	PrimaryExpression	0		5624301	1					
ANR	5624854	ExpressionStatement	self -> pole_count = 0	1342:12:55139:55159	5624301	3	True				
ANR	5624855	AssignmentExpression	self -> pole_count = 0		5624301	0		=			
ANR	5624856	PtrMemberAccess	self -> pole_count		5624301	0					
ANR	5624857	Identifier	self		5624301	0					
ANR	5624858	Identifier	pole_count		5624301	1					
ANR	5624859	PrimaryExpression	0		5624301	1					
ANR	5624860	ReturnStatement	"return gx_path_add_line ( self -> output_path , fx , fy ) ;"	1343:12:55173:55223	5624301	4	True				
ANR	5624861	CallExpression	"gx_path_add_line ( self -> output_path , fx , fy )"		5624301	0					
ANR	5624862	Callee	gx_path_add_line		5624301	0					
ANR	5624863	Identifier	gx_path_add_line		5624301	0					
ANR	5624864	ArgumentList	self -> output_path		5624301	1					
ANR	5624865	Argument	self -> output_path		5624301	0					
ANR	5624866	PtrMemberAccess	self -> output_path		5624301	0					
ANR	5624867	Identifier	self		5624301	0					
ANR	5624868	Identifier	output_path		5624301	1					
ANR	5624869	Argument	fx		5624301	1					
ANR	5624870	Identifier	fx		5624301	0					
ANR	5624871	Argument	fy		5624301	2					
ANR	5624872	Identifier	fy		5624301	0					
ANR	5624873	ElseStatement	else		5624301	0					
ANR	5624874	CompoundStatement		49:15:2113:2113	5624301	0					
ANR	5624875	ExpressionStatement	pole0 [ 1 ] = pole0 [ 7 ]	1345:12:55254:55273	5624301	0	True				
ANR	5624876	AssignmentExpression	pole0 [ 1 ] = pole0 [ 7 ]		5624301	0		=			
ANR	5624877	ArrayIndexing	pole0 [ 1 ]		5624301	0					
ANR	5624878	Identifier	pole0		5624301	0					
ANR	5624879	PrimaryExpression	1		5624301	1					
ANR	5624880	ArrayIndexing	pole0 [ 7 ]		5624301	1					
ANR	5624881	Identifier	pole0		5624301	0					
ANR	5624882	PrimaryExpression	7		5624301	1					
ANR	5624883	ExpressionStatement	pole0 [ 1 ] . type = oncurve	1346:12:55287:55310	5624301	1	True				
ANR	5624884	AssignmentExpression	pole0 [ 1 ] . type = oncurve		5624301	0		=			
ANR	5624885	MemberAccess	pole0 [ 1 ] . type		5624301	0					
ANR	5624886	ArrayIndexing	pole0 [ 1 ]		5624301	0					
ANR	5624887	Identifier	pole0		5624301	0					
ANR	5624888	PrimaryExpression	1		5624301	1					
ANR	5624889	Identifier	type		5624301	1					
ANR	5624890	Identifier	oncurve		5624301	1					
ANR	5624891	ExpressionStatement	self -> pole_count -= 6	1347:12:55324:55345	5624301	2	True				
ANR	5624892	AssignmentExpression	self -> pole_count -= 6		5624301	0		-=			
ANR	5624893	PtrMemberAccess	self -> pole_count		5624301	0					
ANR	5624894	Identifier	self		5624301	0					
ANR	5624895	Identifier	pole_count		5624301	1					
ANR	5624896	PrimaryExpression	6		5624301	1					
ANR	5624897	ExpressionStatement	self -> flex_count = 0	1350:4:55367:55387	5624301	10	True				
ANR	5624898	AssignmentExpression	self -> flex_count = 0		5624301	0		=			
ANR	5624899	PtrMemberAccess	self -> flex_count		5624301	0					
ANR	5624900	Identifier	self		5624301	0					
ANR	5624901	Identifier	flex_count		5624301	1					
ANR	5624902	PrimaryExpression	0		5624301	1					
ANR	5624903	ReturnStatement	return 0 ;	1351:4:55393:55401	5624301	11	True				
ANR	5624904	PrimaryExpression	0		5624301	0					
ANR	5624905	ReturnType	int		5624301	1					
ANR	5624906	Identifier	t1_hinter__flex_end		5624301	2					
ANR	5624907	ParameterList	"t1_hinter * self , fixed flex_height"		5624301	3					
ANR	5624908	Parameter	t1_hinter * self	1295:24:53089:53104	5624301	0	True				
ANR	5624909	ParameterType	t1_hinter *		5624301	0					
ANR	5624910	Identifier	self		5624301	1					
ANR	5624911	Parameter	fixed flex_height	1295:42:53107:53123	5624301	1	True				
ANR	5624912	ParameterType	fixed		5624301	0					
ANR	5624913	Identifier	flex_height		5624301	1					
ANR	5624914	CFGEntryNode	ENTRY		5624301		True				
ANR	5624915	CFGExitNode	EXIT		5624301		True				
ANR	5624916	Symbol	& fx2		5624301						
ANR	5624917	Symbol	& fx1		5624301						
ANR	5624918	Symbol	& fx0		5624301						
ANR	5624919	Symbol	self -> pole_count		5624301						
ANR	5624920	Symbol	pole1 -> gy		5624301						
ANR	5624921	Symbol	pole1 -> gx		5624301						
ANR	5624922	Symbol	pole4 -> gy		5624301						
ANR	5624923	Symbol	pole4 -> gx		5624301						
ANR	5624924	Symbol	pole0 [ 2 ] . gy		5624301						
ANR	5624925	Symbol	pole0 [ 3 ] . gy		5624301						
ANR	5624926	Symbol	self -> pole0		5624301						
ANR	5624927	Symbol	pole0 [ 2 ] . gx		5624301						
ANR	5624928	Symbol	pole0 [ 3 ] . gx		5624301						
ANR	5624929	Symbol	pole0 [ 4 ] . gy		5624301						
ANR	5624930	Symbol	self -> output_path		5624301						
ANR	5624931	Symbol	& fy		5624301						
ANR	5624932	Symbol	& fx		5624301						
ANR	5624933	Symbol	fx1		5624301						
ANR	5624934	Symbol	fx0		5624301						
ANR	5624935	Symbol	fx2		5624301						
ANR	5624936	Symbol	pole4		5624301						
ANR	5624937	Symbol	self -> g2o_fraction		5624301						
ANR	5624938	Symbol	pole0 [ 7 ] . gx		5624301						
ANR	5624939	Symbol	pole0 [ 7 ] . gy		5624301						
ANR	5624940	Symbol	pole0		5624301						
ANR	5624941	Symbol	* self		5624301						
ANR	5624942	Symbol	pole0 [ 6 ] . type		5624301						
ANR	5624943	Symbol	pole1		5624301						
ANR	5624944	Symbol	self -> pass_through		5624301						
ANR	5624945	Symbol	pole0 [ 5 ] . gy		5624301						
ANR	5624946	Symbol	pole0 [ 5 ] . gx		5624301						
ANR	5624947	Symbol	pole0 [ 5 ] . type		5624301						
ANR	5624948	Symbol	& ox		5624301						
ANR	5624949	Symbol	& oy		5624301						
ANR	5624950	Symbol	* pole4		5624301						
ANR	5624951	Symbol	* pole1		5624301						
ANR	5624952	Symbol	fy0		5624301						
ANR	5624953	Symbol	* pole0		5624301						
ANR	5624954	Symbol	fy2		5624301						
ANR	5624955	Symbol	fy1		5624301						
ANR	5624956	Symbol	oncurve		5624301						
ANR	5624957	Symbol	code		5624301						
ANR	5624958	Symbol	pole0 [ 4 ] . type		5624301						
ANR	5624959	Symbol	self -> flex_count		5624301						
ANR	5624960	Symbol	gx_path_add_curve		5624301						
ANR	5624961	Symbol	fx		5624301						
ANR	5624962	Symbol	fy		5624301						
ANR	5624963	Symbol	count_of		5624301						
ANR	5624964	Symbol	any_abs		5624301						
ANR	5624965	Symbol	self -> pole		5624301						
ANR	5624966	Symbol	pole0 [ 1 ] . type		5624301						
ANR	5624967	Symbol	gs_error_invalidfont		5624301						
ANR	5624968	Symbol	& fy2		5624301						
ANR	5624969	Symbol	& fy1		5624301						
ANR	5624970	Symbol	fixed2float		5624301						
ANR	5624971	Symbol	& fy0		5624301						
ANR	5624972	Symbol	ox		5624301						
ANR	5624973	Symbol	pole0 [ 6 ] . gy		5624301						
ANR	5624974	Symbol	oy		5624301						
ANR	5624975	Symbol	self -> log2_pixels_x		5624301						
ANR	5624976	Symbol	pole0 [ 6 ] . gx		5624301						
ANR	5624977	Symbol	pole0 [ 3 ] . type		5624301						
ANR	5624978	Symbol	self -> log2_pixels_y		5624301						
ANR	5624979	Symbol	pole0 [ 4 ] . gx		5624301						
ANR	5624980	Symbol	pole0 [ 2 ] . type		5624301						
ANR	5624981	Symbol	offcurve		5624301						
ANR	5624982	Symbol	gx_path_add_line		5624301						
ANR	5624983	Symbol	div_x		5624301						
ANR	5624984	Symbol	self		5624301						
ANR	5624985	Symbol	div_y		5624301						
ANR	5624986	Symbol	flex_height		5624301						
ANR	5624987	Function	t1_hinter__can_add_hint_range	1354:0:55406:55935							
ANR	5624988	FunctionDef	"t1_hinter__can_add_hint_range (t1_hinter * self , t1_hint_range * * hint_range)"		5624987	0					
ANR	5624989	CompoundStatement		1355:0:55500:55935	5624987	0					
ANR	5624990	IfStatement	if ( self -> hint_range_count >= self -> max_hint_range_count )		5624987	0					
ANR	5624991	Condition	self -> hint_range_count >= self -> max_hint_range_count	1355:7:55508:55559	5624987	0	True				
ANR	5624992	RelationalExpression	self -> hint_range_count >= self -> max_hint_range_count		5624987	0		>=			
ANR	5624993	PtrMemberAccess	self -> hint_range_count		5624987	0					
ANR	5624994	Identifier	self		5624987	0					
ANR	5624995	Identifier	hint_range_count		5624987	1					
ANR	5624996	PtrMemberAccess	self -> max_hint_range_count		5624987	1					
ANR	5624997	Identifier	self		5624987	0					
ANR	5624998	Identifier	max_hint_range_count		5624987	1					
ANR	5624999	IfStatement	"if ( t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> hint_range , self -> hint_range0 , & self -> max_hint_range_count , sizeof ( self -> hint_range0 ) / count_of ( self -> hint_range0 ) , T1_MAX_HINTS , s_hint_range_array ) )"		5624987	1					
ANR	5625000	Condition	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> hint_range , self -> hint_range0 , & self -> max_hint_range_count , sizeof ( self -> hint_range0 ) / count_of ( self -> hint_range0 ) , T1_MAX_HINTS , s_hint_range_array )"	1356:11:55573:55813	5624987	0	True				
ANR	5625001	CallExpression	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> hint_range , self -> hint_range0 , & self -> max_hint_range_count , sizeof ( self -> hint_range0 ) / count_of ( self -> hint_range0 ) , T1_MAX_HINTS , s_hint_range_array )"		5624987	0					
ANR	5625002	Callee	t1_hinter__realloc_array		5624987	0					
ANR	5625003	Identifier	t1_hinter__realloc_array		5624987	0					
ANR	5625004	ArgumentList	self -> memory		5624987	1					
ANR	5625005	Argument	self -> memory		5624987	0					
ANR	5625006	PtrMemberAccess	self -> memory		5624987	0					
ANR	5625007	Identifier	self		5624987	0					
ANR	5625008	Identifier	memory		5624987	1					
ANR	5625009	Argument	( void * * ) & self -> hint_range		5624987	1					
ANR	5625010	CastExpression	( void * * ) & self -> hint_range		5624987	0					
ANR	5625011	CastTarget	void * *		5624987	0					
ANR	5625012	UnaryOperationExpression	& self -> hint_range		5624987	1					
ANR	5625013	UnaryOperator	&		5624987	0					
ANR	5625014	PtrMemberAccess	self -> hint_range		5624987	1					
ANR	5625015	Identifier	self		5624987	0					
ANR	5625016	Identifier	hint_range		5624987	1					
ANR	5625017	Argument	self -> hint_range0		5624987	2					
ANR	5625018	PtrMemberAccess	self -> hint_range0		5624987	0					
ANR	5625019	Identifier	self		5624987	0					
ANR	5625020	Identifier	hint_range0		5624987	1					
ANR	5625021	Argument	& self -> max_hint_range_count		5624987	3					
ANR	5625022	UnaryOperationExpression	& self -> max_hint_range_count		5624987	0					
ANR	5625023	UnaryOperator	&		5624987	0					
ANR	5625024	PtrMemberAccess	self -> max_hint_range_count		5624987	1					
ANR	5625025	Identifier	self		5624987	0					
ANR	5625026	Identifier	max_hint_range_count		5624987	1					
ANR	5625027	Argument	sizeof ( self -> hint_range0 ) / count_of ( self -> hint_range0 )		5624987	4					
ANR	5625028	MultiplicativeExpression	sizeof ( self -> hint_range0 ) / count_of ( self -> hint_range0 )		5624987	0		/			
ANR	5625029	SizeofExpression	sizeof ( self -> hint_range0 )		5624987	0					
ANR	5625030	Sizeof	sizeof		5624987	0					
ANR	5625031	PtrMemberAccess	self -> hint_range0		5624987	1					
ANR	5625032	Identifier	self		5624987	0					
ANR	5625033	Identifier	hint_range0		5624987	1					
ANR	5625034	CallExpression	count_of ( self -> hint_range0 )		5624987	1					
ANR	5625035	Callee	count_of		5624987	0					
ANR	5625036	Identifier	count_of		5624987	0					
ANR	5625037	ArgumentList	self -> hint_range0		5624987	1					
ANR	5625038	Argument	self -> hint_range0		5624987	0					
ANR	5625039	PtrMemberAccess	self -> hint_range0		5624987	0					
ANR	5625040	Identifier	self		5624987	0					
ANR	5625041	Identifier	hint_range0		5624987	1					
ANR	5625042	Argument	T1_MAX_HINTS		5624987	5					
ANR	5625043	Identifier	T1_MAX_HINTS		5624987	0					
ANR	5625044	Argument	s_hint_range_array		5624987	6					
ANR	5625045	Identifier	s_hint_range_array		5624987	0					
ANR	5625046	ExpressionStatement	return_error ( gs_error_VMerror )	1358:12:55828:55858	5624987	1	True				
ANR	5625047	CallExpression	return_error ( gs_error_VMerror )		5624987	0					
ANR	5625048	Callee	return_error		5624987	0					
ANR	5625049	Identifier	return_error		5624987	0					
ANR	5625050	ArgumentList	gs_error_VMerror		5624987	1					
ANR	5625051	Argument	gs_error_VMerror		5624987	0					
ANR	5625052	Identifier	gs_error_VMerror		5624987	0					
ANR	5625053	ExpressionStatement	* hint_range = & self -> hint_range [ self -> hint_range_count ]	1359:4:55864:55919	5624987	1	True				
ANR	5625054	AssignmentExpression	* hint_range = & self -> hint_range [ self -> hint_range_count ]		5624987	0		=			
ANR	5625055	UnaryOperationExpression	* hint_range		5624987	0					
ANR	5625056	UnaryOperator	*		5624987	0					
ANR	5625057	Identifier	hint_range		5624987	1					
ANR	5625058	UnaryOperationExpression	& self -> hint_range [ self -> hint_range_count ]		5624987	1					
ANR	5625059	UnaryOperator	&		5624987	0					
ANR	5625060	ArrayIndexing	self -> hint_range [ self -> hint_range_count ]		5624987	1					
ANR	5625061	PtrMemberAccess	self -> hint_range		5624987	0					
ANR	5625062	Identifier	self		5624987	0					
ANR	5625063	Identifier	hint_range		5624987	1					
ANR	5625064	PtrMemberAccess	self -> hint_range_count		5624987	1					
ANR	5625065	Identifier	self		5624987	0					
ANR	5625066	Identifier	hint_range_count		5624987	1					
ANR	5625067	ReturnStatement	return 0 ;	1360:4:55925:55933	5624987	2	True				
ANR	5625068	PrimaryExpression	0		5624987	0					
ANR	5625069	ReturnType	static inline int		5624987	1					
ANR	5625070	Identifier	t1_hinter__can_add_hint_range		5624987	2					
ANR	5625071	ParameterList	"t1_hinter * self , t1_hint_range * * hint_range"		5624987	3					
ANR	5625072	Parameter	t1_hinter * self	1354:48:55454:55469	5624987	0	True				
ANR	5625073	ParameterType	t1_hinter *		5624987	0					
ANR	5625074	Identifier	self		5624987	1					
ANR	5625075	Parameter	t1_hint_range * * hint_range	1354:66:55472:55497	5624987	1	True				
ANR	5625076	ParameterType	t1_hint_range * *		5624987	0					
ANR	5625077	Identifier	hint_range		5624987	1					
ANR	5625078	CFGEntryNode	ENTRY		5624987		True				
ANR	5625079	CFGExitNode	EXIT		5624987		True				
ANR	5625080	Symbol	T1_MAX_HINTS		5624987						
ANR	5625081	Symbol	self -> hint_range0		5624987						
ANR	5625082	Symbol	& self -> hint_range		5624987						
ANR	5625083	Symbol	* self		5624987						
ANR	5625084	Symbol	t1_hinter__realloc_array		5624987						
ANR	5625085	Symbol	hint_range		5624987						
ANR	5625086	Symbol	self -> hint_range_count		5624987						
ANR	5625087	Symbol	self -> hint_range		5624987						
ANR	5625088	Symbol	self -> memory		5624987						
ANR	5625089	Symbol	gs_error_VMerror		5624987						
ANR	5625090	Symbol	count_of		5624987						
ANR	5625091	Symbol	self -> max_hint_range_count		5624987						
ANR	5625092	Symbol	self		5624987						
ANR	5625093	Symbol	* hint_range		5624987						
ANR	5625094	Symbol	s_hint_range_array		5624987						
ANR	5625095	Symbol	& self -> max_hint_range_count		5624987						
ANR	5625096	Function	t1_hinter__can_add_hint_applying	1363:0:55938:56509							
ANR	5625097	FunctionDef	"t1_hinter__can_add_hint_applying (t1_hinter * self , t1_hint_applying * * hint_applying)"		5625096	0					
ANR	5625098	CompoundStatement		1364:0:56041:56509	5625096	0					
ANR	5625099	IfStatement	if ( self -> hint_applying_count >= self -> max_hint_applying_count )		5625096	0					
ANR	5625100	Condition	self -> hint_applying_count >= self -> max_hint_applying_count	1364:7:56049:56106	5625096	0	True				
ANR	5625101	RelationalExpression	self -> hint_applying_count >= self -> max_hint_applying_count		5625096	0		>=			
ANR	5625102	PtrMemberAccess	self -> hint_applying_count		5625096	0					
ANR	5625103	Identifier	self		5625096	0					
ANR	5625104	Identifier	hint_applying_count		5625096	1					
ANR	5625105	PtrMemberAccess	self -> max_hint_applying_count		5625096	1					
ANR	5625106	Identifier	self		5625096	0					
ANR	5625107	Identifier	max_hint_applying_count		5625096	1					
ANR	5625108	IfStatement	"if ( t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> hint_applying , self -> hint_applying0 , & self -> max_hint_applying_count , sizeof ( self -> hint_applying0 ) / count_of ( self -> hint_applying0 ) , T1_MAX_HINTS , s_hint_applying_array ) )"		5625096	1					
ANR	5625109	Condition	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> hint_applying , self -> hint_applying0 , & self -> max_hint_applying_count , sizeof ( self -> hint_applying0 ) / count_of ( self -> hint_applying0 ) , T1_MAX_HINTS , s_hint_applying_array )"	1365:11:56120:56378	5625096	0	True				
ANR	5625110	CallExpression	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> hint_applying , self -> hint_applying0 , & self -> max_hint_applying_count , sizeof ( self -> hint_applying0 ) / count_of ( self -> hint_applying0 ) , T1_MAX_HINTS , s_hint_applying_array )"		5625096	0					
ANR	5625111	Callee	t1_hinter__realloc_array		5625096	0					
ANR	5625112	Identifier	t1_hinter__realloc_array		5625096	0					
ANR	5625113	ArgumentList	self -> memory		5625096	1					
ANR	5625114	Argument	self -> memory		5625096	0					
ANR	5625115	PtrMemberAccess	self -> memory		5625096	0					
ANR	5625116	Identifier	self		5625096	0					
ANR	5625117	Identifier	memory		5625096	1					
ANR	5625118	Argument	( void * * ) & self -> hint_applying		5625096	1					
ANR	5625119	CastExpression	( void * * ) & self -> hint_applying		5625096	0					
ANR	5625120	CastTarget	void * *		5625096	0					
ANR	5625121	UnaryOperationExpression	& self -> hint_applying		5625096	1					
ANR	5625122	UnaryOperator	&		5625096	0					
ANR	5625123	PtrMemberAccess	self -> hint_applying		5625096	1					
ANR	5625124	Identifier	self		5625096	0					
ANR	5625125	Identifier	hint_applying		5625096	1					
ANR	5625126	Argument	self -> hint_applying0		5625096	2					
ANR	5625127	PtrMemberAccess	self -> hint_applying0		5625096	0					
ANR	5625128	Identifier	self		5625096	0					
ANR	5625129	Identifier	hint_applying0		5625096	1					
ANR	5625130	Argument	& self -> max_hint_applying_count		5625096	3					
ANR	5625131	UnaryOperationExpression	& self -> max_hint_applying_count		5625096	0					
ANR	5625132	UnaryOperator	&		5625096	0					
ANR	5625133	PtrMemberAccess	self -> max_hint_applying_count		5625096	1					
ANR	5625134	Identifier	self		5625096	0					
ANR	5625135	Identifier	max_hint_applying_count		5625096	1					
ANR	5625136	Argument	sizeof ( self -> hint_applying0 ) / count_of ( self -> hint_applying0 )		5625096	4					
ANR	5625137	MultiplicativeExpression	sizeof ( self -> hint_applying0 ) / count_of ( self -> hint_applying0 )		5625096	0		/			
ANR	5625138	SizeofExpression	sizeof ( self -> hint_applying0 )		5625096	0					
ANR	5625139	Sizeof	sizeof		5625096	0					
ANR	5625140	PtrMemberAccess	self -> hint_applying0		5625096	1					
ANR	5625141	Identifier	self		5625096	0					
ANR	5625142	Identifier	hint_applying0		5625096	1					
ANR	5625143	CallExpression	count_of ( self -> hint_applying0 )		5625096	1					
ANR	5625144	Callee	count_of		5625096	0					
ANR	5625145	Identifier	count_of		5625096	0					
ANR	5625146	ArgumentList	self -> hint_applying0		5625096	1					
ANR	5625147	Argument	self -> hint_applying0		5625096	0					
ANR	5625148	PtrMemberAccess	self -> hint_applying0		5625096	0					
ANR	5625149	Identifier	self		5625096	0					
ANR	5625150	Identifier	hint_applying0		5625096	1					
ANR	5625151	Argument	T1_MAX_HINTS		5625096	5					
ANR	5625152	Identifier	T1_MAX_HINTS		5625096	0					
ANR	5625153	Argument	s_hint_applying_array		5625096	6					
ANR	5625154	Identifier	s_hint_applying_array		5625096	0					
ANR	5625155	ExpressionStatement	return_error ( gs_error_VMerror )	1367:12:56393:56423	5625096	1	True				
ANR	5625156	CallExpression	return_error ( gs_error_VMerror )		5625096	0					
ANR	5625157	Callee	return_error		5625096	0					
ANR	5625158	Identifier	return_error		5625096	0					
ANR	5625159	ArgumentList	gs_error_VMerror		5625096	1					
ANR	5625160	Argument	gs_error_VMerror		5625096	0					
ANR	5625161	Identifier	gs_error_VMerror		5625096	0					
ANR	5625162	ExpressionStatement	* hint_applying = & self -> hint_applying [ self -> hint_applying_count ]	1368:4:56429:56493	5625096	1	True				
ANR	5625163	AssignmentExpression	* hint_applying = & self -> hint_applying [ self -> hint_applying_count ]		5625096	0		=			
ANR	5625164	UnaryOperationExpression	* hint_applying		5625096	0					
ANR	5625165	UnaryOperator	*		5625096	0					
ANR	5625166	Identifier	hint_applying		5625096	1					
ANR	5625167	UnaryOperationExpression	& self -> hint_applying [ self -> hint_applying_count ]		5625096	1					
ANR	5625168	UnaryOperator	&		5625096	0					
ANR	5625169	ArrayIndexing	self -> hint_applying [ self -> hint_applying_count ]		5625096	1					
ANR	5625170	PtrMemberAccess	self -> hint_applying		5625096	0					
ANR	5625171	Identifier	self		5625096	0					
ANR	5625172	Identifier	hint_applying		5625096	1					
ANR	5625173	PtrMemberAccess	self -> hint_applying_count		5625096	1					
ANR	5625174	Identifier	self		5625096	0					
ANR	5625175	Identifier	hint_applying_count		5625096	1					
ANR	5625176	ReturnStatement	return 0 ;	1369:4:56499:56507	5625096	2	True				
ANR	5625177	PrimaryExpression	0		5625096	0					
ANR	5625178	ReturnType	static inline int		5625096	1					
ANR	5625179	Identifier	t1_hinter__can_add_hint_applying		5625096	2					
ANR	5625180	ParameterList	"t1_hinter * self , t1_hint_applying * * hint_applying"		5625096	3					
ANR	5625181	Parameter	t1_hinter * self	1363:51:55989:56004	5625096	0	True				
ANR	5625182	ParameterType	t1_hinter *		5625096	0					
ANR	5625183	Identifier	self		5625096	1					
ANR	5625184	Parameter	t1_hint_applying * * hint_applying	1363:69:56007:56038	5625096	1	True				
ANR	5625185	ParameterType	t1_hint_applying * *		5625096	0					
ANR	5625186	Identifier	hint_applying		5625096	1					
ANR	5625187	CFGEntryNode	ENTRY		5625096		True				
ANR	5625188	CFGExitNode	EXIT		5625096		True				
ANR	5625189	Symbol	* hint_applying		5625096						
ANR	5625190	Symbol	s_hint_applying_array		5625096						
ANR	5625191	Symbol	T1_MAX_HINTS		5625096						
ANR	5625192	Symbol	self -> max_hint_applying_count		5625096						
ANR	5625193	Symbol	* self		5625096						
ANR	5625194	Symbol	t1_hinter__realloc_array		5625096						
ANR	5625195	Symbol	& self -> hint_applying		5625096						
ANR	5625196	Symbol	self -> hint_applying_count		5625096						
ANR	5625197	Symbol	self -> memory		5625096						
ANR	5625198	Symbol	hint_applying		5625096						
ANR	5625199	Symbol	self -> hint_applying0		5625096						
ANR	5625200	Symbol	gs_error_VMerror		5625096						
ANR	5625201	Symbol	count_of		5625096						
ANR	5625202	Symbol	self		5625096						
ANR	5625203	Symbol	self -> hint_applying		5625096						
ANR	5625204	Symbol	& self -> max_hint_applying_count		5625096						
ANR	5625205	Function	t1_hinter__hint_mask	1372:0:56512:58002							
ANR	5625206	FunctionDef	"t1_hinter__hint_mask (t1_hinter * self , byte * mask)"		5625205	0					
ANR	5625207	CompoundStatement		1373:0:56567:58002	5625205	0					
ANR	5625208	IdentifierDeclStatement	"int hint_count , i ;"	1373:3:56571:56588	5625205	0	True				
ANR	5625209	IdentifierDecl	hint_count		5625205	0					
ANR	5625210	IdentifierDeclType	int		5625205	0					
ANR	5625211	Identifier	hint_count		5625205	1					
ANR	5625212	IdentifierDecl	i		5625205	1					
ANR	5625213	IdentifierDeclType	int		5625205	0					
ANR	5625214	Identifier	i		5625205	1					
ANR	5625215	IfStatement	if ( self -> disable_hinting )		5625205	1					
ANR	5625216	Condition	self -> disable_hinting	1375:8:56599:56619	5625205	0	True				
ANR	5625217	PtrMemberAccess	self -> disable_hinting		5625205	0					
ANR	5625218	Identifier	self		5625205	0					
ANR	5625219	Identifier	disable_hinting		5625205	1					
ANR	5625220	ReturnStatement	return 0 ;	1376:8:56630:56638	5625205	1	True				
ANR	5625221	PrimaryExpression	0		5625205	0					
ANR	5625222	ExpressionStatement	hint_count = self -> hint_count	1377:4:56644:56673	5625205	2	True				
ANR	5625223	AssignmentExpression	hint_count = self -> hint_count		5625205	0		=			
ANR	5625224	Identifier	hint_count		5625205	0					
ANR	5625225	PtrMemberAccess	self -> hint_count		5625205	1					
ANR	5625226	Identifier	self		5625205	0					
ANR	5625227	Identifier	hint_count		5625205	1					
ANR	5625228	ForStatement	for ( i = 0 ; i < hint_count ; i ++ )		5625205	3					
ANR	5625229	ForInit	i = 0 ;	1379:8:56684:56689	5625205	0	True				
ANR	5625230	AssignmentExpression	i = 0		5625205	0		=			
ANR	5625231	Identifier	i		5625205	0					
ANR	5625232	PrimaryExpression	0		5625205	1					
ANR	5625233	Condition	i < hint_count	1379:15:56691:56704	5625205	1	True				
ANR	5625234	RelationalExpression	i < hint_count		5625205	0		<			
ANR	5625235	Identifier	i		5625205	0					
ANR	5625236	Identifier	hint_count		5625205	1					
ANR	5625237	PostIncDecOperationExpression	i ++	1379:31:56707:56709	5625205	2	True				
ANR	5625238	Identifier	i		5625205	0					
ANR	5625239	IncDec	++		5625205	1					
ANR	5625240	CompoundStatement		9:8:237:267	5625205	3					
ANR	5625241	IdentifierDeclStatement	bool activate = ( mask != NULL && ( mask [ i >> 3 ] & ( 0x80 >> ( i & 7 ) ) ) != 0 ) ;	1380:8:56722:56795	5625205	0	True				
ANR	5625242	IdentifierDecl	activate = ( mask != NULL && ( mask [ i >> 3 ] & ( 0x80 >> ( i & 7 ) ) ) != 0 )		5625205	0					
ANR	5625243	IdentifierDeclType	bool		5625205	0					
ANR	5625244	Identifier	activate		5625205	1					
ANR	5625245	AssignmentExpression	activate = ( mask != NULL && ( mask [ i >> 3 ] & ( 0x80 >> ( i & 7 ) ) ) != 0 )		5625205	2		=			
ANR	5625246	Identifier	activate		5625205	0					
ANR	5625247	AndExpression	mask != NULL && ( mask [ i >> 3 ] & ( 0x80 >> ( i & 7 ) ) ) != 0		5625205	1		&&			
ANR	5625248	EqualityExpression	mask != NULL		5625205	0		!=			
ANR	5625249	Identifier	mask		5625205	0					
ANR	5625250	Identifier	NULL		5625205	1					
ANR	5625251	EqualityExpression	( mask [ i >> 3 ] & ( 0x80 >> ( i & 7 ) ) ) != 0		5625205	1		!=			
ANR	5625252	BitAndExpression	mask [ i >> 3 ] & ( 0x80 >> ( i & 7 ) )		5625205	0		&			
ANR	5625253	ArrayIndexing	mask [ i >> 3 ]		5625205	0					
ANR	5625254	Identifier	mask		5625205	0					
ANR	5625255	ShiftExpression	i >> 3		5625205	1		>>			
ANR	5625256	Identifier	i		5625205	0					
ANR	5625257	PrimaryExpression	3		5625205	1					
ANR	5625258	ShiftExpression	0x80 >> ( i & 7 )		5625205	1		>>			
ANR	5625259	PrimaryExpression	0x80		5625205	0					
ANR	5625260	BitAndExpression	i & 7		5625205	1		&			
ANR	5625261	Identifier	i		5625205	0					
ANR	5625262	PrimaryExpression	7		5625205	1					
ANR	5625263	PrimaryExpression	0		5625205	1					
ANR	5625264	IdentifierDeclStatement	t1_hint * hint = & self -> hint [ i ] ;	1381:8:56805:56835	5625205	1	True				
ANR	5625265	IdentifierDecl	* hint = & self -> hint [ i ]		5625205	0					
ANR	5625266	IdentifierDeclType	t1_hint *		5625205	0					
ANR	5625267	Identifier	hint		5625205	1					
ANR	5625268	AssignmentExpression	* hint = & self -> hint [ i ]		5625205	2		=			
ANR	5625269	Identifier	hint		5625205	0					
ANR	5625270	UnaryOperationExpression	& self -> hint [ i ]		5625205	1					
ANR	5625271	UnaryOperator	&		5625205	0					
ANR	5625272	ArrayIndexing	self -> hint [ i ]		5625205	1					
ANR	5625273	PtrMemberAccess	self -> hint		5625205	0					
ANR	5625274	Identifier	self		5625205	0					
ANR	5625275	Identifier	hint		5625205	1					
ANR	5625276	Identifier	i		5625205	1					
ANR	5625277	IfStatement	if ( activate )		5625205	2					
ANR	5625278	Condition	activate	1383:12:56850:56857	5625205	0	True				
ANR	5625279	Identifier	activate		5625205	0					
ANR	5625280	CompoundStatement		11:22:292:292	5625205	1					
ANR	5625281	IfStatement	if ( hint -> range_index != - 1 && ( self -> hint_range [ hint -> range_index ] . end_pole == - 1 || self -> hint_range [ hint -> range_index ] . end_pole == self -> pole_count ) )		5625205	0					
ANR	5625282	Condition	hint -> range_index != - 1 && ( self -> hint_range [ hint -> range_index ] . end_pole == - 1 || self -> hint_range [ hint -> range_index ] . end_pole == self -> pole_count )	1384:16:56878:57057	5625205	0	True				
ANR	5625283	AndExpression	hint -> range_index != - 1 && ( self -> hint_range [ hint -> range_index ] . end_pole == - 1 || self -> hint_range [ hint -> range_index ] . end_pole == self -> pole_count )		5625205	0		&&			
ANR	5625284	EqualityExpression	hint -> range_index != - 1		5625205	0		!=			
ANR	5625285	PtrMemberAccess	hint -> range_index		5625205	0					
ANR	5625286	Identifier	hint		5625205	0					
ANR	5625287	Identifier	range_index		5625205	1					
ANR	5625288	UnaryOperationExpression	- 1		5625205	1					
ANR	5625289	UnaryOperator	-		5625205	0					
ANR	5625290	PrimaryExpression	1		5625205	1					
ANR	5625291	OrExpression	self -> hint_range [ hint -> range_index ] . end_pole == - 1 || self -> hint_range [ hint -> range_index ] . end_pole == self -> pole_count		5625205	1		||			
ANR	5625292	EqualityExpression	self -> hint_range [ hint -> range_index ] . end_pole == - 1		5625205	0		==			
ANR	5625293	MemberAccess	self -> hint_range [ hint -> range_index ] . end_pole		5625205	0					
ANR	5625294	ArrayIndexing	self -> hint_range [ hint -> range_index ]		5625205	0					
ANR	5625295	PtrMemberAccess	self -> hint_range		5625205	0					
ANR	5625296	Identifier	self		5625205	0					
ANR	5625297	Identifier	hint_range		5625205	1					
ANR	5625298	PtrMemberAccess	hint -> range_index		5625205	1					
ANR	5625299	Identifier	hint		5625205	0					
ANR	5625300	Identifier	range_index		5625205	1					
ANR	5625301	Identifier	end_pole		5625205	1					
ANR	5625302	UnaryOperationExpression	- 1		5625205	1					
ANR	5625303	UnaryOperator	-		5625205	0					
ANR	5625304	PrimaryExpression	1		5625205	1					
ANR	5625305	EqualityExpression	self -> hint_range [ hint -> range_index ] . end_pole == self -> pole_count		5625205	1		==			
ANR	5625306	MemberAccess	self -> hint_range [ hint -> range_index ] . end_pole		5625205	0					
ANR	5625307	ArrayIndexing	self -> hint_range [ hint -> range_index ]		5625205	0					
ANR	5625308	PtrMemberAccess	self -> hint_range		5625205	0					
ANR	5625309	Identifier	self		5625205	0					
ANR	5625310	Identifier	hint_range		5625205	1					
ANR	5625311	PtrMemberAccess	hint -> range_index		5625205	1					
ANR	5625312	Identifier	hint		5625205	0					
ANR	5625313	Identifier	range_index		5625205	1					
ANR	5625314	Identifier	end_pole		5625205	1					
ANR	5625315	PtrMemberAccess	self -> pole_count		5625205	1					
ANR	5625316	Identifier	self		5625205	0					
ANR	5625317	Identifier	pole_count		5625205	1					
ANR	5625318	CompoundStatement		14:84:492:492	5625205	1					
ANR	5625319	ExpressionStatement	self -> hint_range [ hint -> range_index ] . end_pole = - 1	1388:16:57120:57169	5625205	0	True				
ANR	5625320	AssignmentExpression	self -> hint_range [ hint -> range_index ] . end_pole = - 1		5625205	0		=			
ANR	5625321	MemberAccess	self -> hint_range [ hint -> range_index ] . end_pole		5625205	0					
ANR	5625322	ArrayIndexing	self -> hint_range [ hint -> range_index ]		5625205	0					
ANR	5625323	PtrMemberAccess	self -> hint_range		5625205	0					
ANR	5625324	Identifier	self		5625205	0					
ANR	5625325	Identifier	hint_range		5625205	1					
ANR	5625326	PtrMemberAccess	hint -> range_index		5625205	1					
ANR	5625327	Identifier	hint		5625205	0					
ANR	5625328	Identifier	range_index		5625205	1					
ANR	5625329	Identifier	end_pole		5625205	1					
ANR	5625330	UnaryOperationExpression	- 1		5625205	1					
ANR	5625331	UnaryOperator	-		5625205	0					
ANR	5625332	PrimaryExpression	1		5625205	1					
ANR	5625333	ElseStatement	else		5625205	0					
ANR	5625334	CompoundStatement		20:16:719:778	5625205	0					
ANR	5625335	IdentifierDeclStatement	t1_hint_range * hint_range ;	1391:16:57244:57269	5625205	0	True				
ANR	5625336	IdentifierDecl	* hint_range		5625205	0					
ANR	5625337	IdentifierDeclType	t1_hint_range *		5625205	0					
ANR	5625338	Identifier	hint_range		5625205	1					
ANR	5625339	IdentifierDeclStatement	"int code = t1_hinter__can_add_hint_range ( self , & hint_range ) ;"	1392:16:57287:57346	5625205	1	True				
ANR	5625340	IdentifierDecl	"code = t1_hinter__can_add_hint_range ( self , & hint_range )"		5625205	0					
ANR	5625341	IdentifierDeclType	int		5625205	0					
ANR	5625342	Identifier	code		5625205	1					
ANR	5625343	AssignmentExpression	"code = t1_hinter__can_add_hint_range ( self , & hint_range )"		5625205	2		=			
ANR	5625344	Identifier	code		5625205	0					
ANR	5625345	CallExpression	"t1_hinter__can_add_hint_range ( self , & hint_range )"		5625205	1					
ANR	5625346	Callee	t1_hinter__can_add_hint_range		5625205	0					
ANR	5625347	Identifier	t1_hinter__can_add_hint_range		5625205	0					
ANR	5625348	ArgumentList	self		5625205	1					
ANR	5625349	Argument	self		5625205	0					
ANR	5625350	Identifier	self		5625205	0					
ANR	5625351	Argument	& hint_range		5625205	1					
ANR	5625352	UnaryOperationExpression	& hint_range		5625205	0					
ANR	5625353	UnaryOperator	&		5625205	0					
ANR	5625354	Identifier	hint_range		5625205	1					
ANR	5625355	IfStatement	if ( code < 0 )		5625205	2					
ANR	5625356	Condition	code < 0	1394:20:57369:57376	5625205	0	True				
ANR	5625357	RelationalExpression	code < 0		5625205	0		<			
ANR	5625358	Identifier	code		5625205	0					
ANR	5625359	PrimaryExpression	0		5625205	1					
ANR	5625360	ReturnStatement	return code ;	1395:19:57398:57409	5625205	1	True				
ANR	5625361	Identifier	code		5625205	0					
ANR	5625362	ExpressionStatement	hint_range -> beg_pole = self -> pole_count	1396:16:57427:57466	5625205	3	True				
ANR	5625363	AssignmentExpression	hint_range -> beg_pole = self -> pole_count		5625205	0		=			
ANR	5625364	PtrMemberAccess	hint_range -> beg_pole		5625205	0					
ANR	5625365	Identifier	hint_range		5625205	0					
ANR	5625366	Identifier	beg_pole		5625205	1					
ANR	5625367	PtrMemberAccess	self -> pole_count		5625205	1					
ANR	5625368	Identifier	self		5625205	0					
ANR	5625369	Identifier	pole_count		5625205	1					
ANR	5625370	ExpressionStatement	hint_range -> end_pole = - 1	1397:16:57484:57509	5625205	4	True				
ANR	5625371	AssignmentExpression	hint_range -> end_pole = - 1		5625205	0		=			
ANR	5625372	PtrMemberAccess	hint_range -> end_pole		5625205	0					
ANR	5625373	Identifier	hint_range		5625205	0					
ANR	5625374	Identifier	end_pole		5625205	1					
ANR	5625375	UnaryOperationExpression	- 1		5625205	1					
ANR	5625376	UnaryOperator	-		5625205	0					
ANR	5625377	PrimaryExpression	1		5625205	1					
ANR	5625378	ExpressionStatement	hint_range -> next = hint -> range_index	1398:16:57527:57563	5625205	5	True				
ANR	5625379	AssignmentExpression	hint_range -> next = hint -> range_index		5625205	0		=			
ANR	5625380	PtrMemberAccess	hint_range -> next		5625205	0					
ANR	5625381	Identifier	hint_range		5625205	0					
ANR	5625382	Identifier	next		5625205	1					
ANR	5625383	PtrMemberAccess	hint -> range_index		5625205	1					
ANR	5625384	Identifier	hint		5625205	0					
ANR	5625385	Identifier	range_index		5625205	1					
ANR	5625386	ExpressionStatement	hint -> range_index = self -> hint_range_count	1399:16:57581:57623	5625205	6	True				
ANR	5625387	AssignmentExpression	hint -> range_index = self -> hint_range_count		5625205	0		=			
ANR	5625388	PtrMemberAccess	hint -> range_index		5625205	0					
ANR	5625389	Identifier	hint		5625205	0					
ANR	5625390	Identifier	range_index		5625205	1					
ANR	5625391	PtrMemberAccess	self -> hint_range_count		5625205	1					
ANR	5625392	Identifier	self		5625205	0					
ANR	5625393	Identifier	hint_range_count		5625205	1					
ANR	5625394	ExpressionStatement	self -> hint_range_count ++	1400:16:57641:57665	5625205	7	True				
ANR	5625395	PostIncDecOperationExpression	self -> hint_range_count ++		5625205	0					
ANR	5625396	PtrMemberAccess	self -> hint_range_count		5625205	0					
ANR	5625397	Identifier	self		5625205	0					
ANR	5625398	Identifier	hint_range_count		5625205	1					
ANR	5625399	IncDec	++		5625205	1					
ANR	5625400	ElseStatement	else		5625205	0					
ANR	5625401	CompoundStatement		30:15:1128:1128	5625205	0					
ANR	5625402	IfStatement	if ( hint -> range_index != - 1 && self -> hint_range [ hint -> range_index ] . end_pole == - 1 )		5625205	0					
ANR	5625403	Condition	hint -> range_index != - 1 && self -> hint_range [ hint -> range_index ] . end_pole == - 1	1403:16:57714:57806	5625205	0	True				
ANR	5625404	AndExpression	hint -> range_index != - 1 && self -> hint_range [ hint -> range_index ] . end_pole == - 1		5625205	0		&&			
ANR	5625405	EqualityExpression	hint -> range_index != - 1		5625205	0		!=			
ANR	5625406	PtrMemberAccess	hint -> range_index		5625205	0					
ANR	5625407	Identifier	hint		5625205	0					
ANR	5625408	Identifier	range_index		5625205	1					
ANR	5625409	UnaryOperationExpression	- 1		5625205	1					
ANR	5625410	UnaryOperator	-		5625205	0					
ANR	5625411	PrimaryExpression	1		5625205	1					
ANR	5625412	EqualityExpression	self -> hint_range [ hint -> range_index ] . end_pole == - 1		5625205	1		==			
ANR	5625413	MemberAccess	self -> hint_range [ hint -> range_index ] . end_pole		5625205	0					
ANR	5625414	ArrayIndexing	self -> hint_range [ hint -> range_index ]		5625205	0					
ANR	5625415	PtrMemberAccess	self -> hint_range		5625205	0					
ANR	5625416	Identifier	self		5625205	0					
ANR	5625417	Identifier	hint_range		5625205	1					
ANR	5625418	PtrMemberAccess	hint -> range_index		5625205	1					
ANR	5625419	Identifier	hint		5625205	0					
ANR	5625420	Identifier	range_index		5625205	1					
ANR	5625421	Identifier	end_pole		5625205	1					
ANR	5625422	UnaryOperationExpression	- 1		5625205	1					
ANR	5625423	UnaryOperator	-		5625205	0					
ANR	5625424	PrimaryExpression	1		5625205	1					
ANR	5625425	CompoundStatement		32:68:1241:1241	5625205	1					
ANR	5625426	ExpressionStatement	self -> hint_range [ hint -> range_index ] . end_pole = self -> pole_count	1406:16:57860:57923	5625205	0	True				
ANR	5625427	AssignmentExpression	self -> hint_range [ hint -> range_index ] . end_pole = self -> pole_count		5625205	0		=			
ANR	5625428	MemberAccess	self -> hint_range [ hint -> range_index ] . end_pole		5625205	0					
ANR	5625429	ArrayIndexing	self -> hint_range [ hint -> range_index ]		5625205	0					
ANR	5625430	PtrMemberAccess	self -> hint_range		5625205	0					
ANR	5625431	Identifier	self		5625205	0					
ANR	5625432	Identifier	hint_range		5625205	1					
ANR	5625433	PtrMemberAccess	hint -> range_index		5625205	1					
ANR	5625434	Identifier	hint		5625205	0					
ANR	5625435	Identifier	range_index		5625205	1					
ANR	5625436	Identifier	end_pole		5625205	1					
ANR	5625437	PtrMemberAccess	self -> pole_count		5625205	1					
ANR	5625438	Identifier	self		5625205	0					
ANR	5625439	Identifier	pole_count		5625205	1					
ANR	5625440	ElseStatement	else		5625205	0					
ANR	5625441	ExpressionStatement	DO_NOTHING	1408:16:57960:57970	5625205	0	True				
ANR	5625442	Identifier	DO_NOTHING		5625205	0					
ANR	5625443	ReturnStatement	return 0 ;	1411:4:57992:58000	5625205	4	True				
ANR	5625444	PrimaryExpression	0		5625205	0					
ANR	5625445	ReturnType	int		5625205	1					
ANR	5625446	Identifier	t1_hinter__hint_mask		5625205	2					
ANR	5625447	ParameterList	"t1_hinter * self , byte * mask"		5625205	3					
ANR	5625448	Parameter	t1_hinter * self	1372:25:56537:56552	5625205	0	True				
ANR	5625449	ParameterType	t1_hinter *		5625205	0					
ANR	5625450	Identifier	self		5625205	1					
ANR	5625451	Parameter	byte * mask	1372:43:56555:56564	5625205	1	True				
ANR	5625452	ParameterType	byte *		5625205	0					
ANR	5625453	Identifier	mask		5625205	1					
ANR	5625454	CFGEntryNode	ENTRY		5625205		True				
ANR	5625455	CFGExitNode	EXIT		5625205		True				
ANR	5625456	Symbol	* mask		5625205						
ANR	5625457	Symbol	code		5625205						
ANR	5625458	Symbol	self -> pole_count		5625205						
ANR	5625459	Symbol	hint_range		5625205						
ANR	5625460	Symbol	hint -> range_index		5625205						
ANR	5625461	Symbol	hint_range -> beg_pole		5625205						
ANR	5625462	Symbol	* hint -> range_index		5625205						
ANR	5625463	Symbol	self -> disable_hinting		5625205						
ANR	5625464	Symbol	self -> hint_range [ hint -> range_index ] . end_pole		5625205						
ANR	5625465	Symbol	t1_hinter__can_add_hint_range		5625205						
ANR	5625466	Symbol	hint_range -> next		5625205						
ANR	5625467	Symbol	mask		5625205						
ANR	5625468	Symbol	* hint		5625205						
ANR	5625469	Symbol	NULL		5625205						
ANR	5625470	Symbol	self -> hint		5625205						
ANR	5625471	Symbol	* * self		5625205						
ANR	5625472	Symbol	* self		5625205						
ANR	5625473	Symbol	hint_count		5625205						
ANR	5625474	Symbol	i		5625205						
ANR	5625475	Symbol	* * hint		5625205						
ANR	5625476	Symbol	self -> hint_range		5625205						
ANR	5625477	Symbol	self -> hint_range_count		5625205						
ANR	5625478	Symbol	* self -> hint_range		5625205						
ANR	5625479	Symbol	self -> hint_count		5625205						
ANR	5625480	Symbol	* i		5625205						
ANR	5625481	Symbol	hint		5625205						
ANR	5625482	Symbol	activate		5625205						
ANR	5625483	Symbol	hint_range -> end_pole		5625205						
ANR	5625484	Symbol	self		5625205						
ANR	5625485	Symbol	* hint_range		5625205						
ANR	5625486	Symbol	& hint_range		5625205						
ANR	5625487	Function	t1_hinter__drop_hints	1414:0:58005:58242							
ANR	5625488	FunctionDef	t1_hinter__drop_hints (t1_hinter * self)		5625487	0					
ANR	5625489	CompoundStatement		1415:0:58049:58242	5625487	0					
ANR	5625490	IfStatement	if ( self -> disable_hinting )		5625487	0					
ANR	5625491	Condition	self -> disable_hinting	1415:7:58057:58077	5625487	0	True				
ANR	5625492	PtrMemberAccess	self -> disable_hinting		5625487	0					
ANR	5625493	Identifier	self		5625487	0					
ANR	5625494	Identifier	disable_hinting		5625487	1					
ANR	5625495	ReturnStatement	return 0 ;	1416:8:58088:58096	5625487	1	True				
ANR	5625496	PrimaryExpression	0		5625487	0					
ANR	5625497	IfStatement	if ( self -> primary_hint_count == - 1 )		5625487	1					
ANR	5625498	Condition	self -> primary_hint_count == - 1	1417:8:58106:58135	5625487	0	True				
ANR	5625499	EqualityExpression	self -> primary_hint_count == - 1		5625487	0		==			
ANR	5625500	PtrMemberAccess	self -> primary_hint_count		5625487	0					
ANR	5625501	Identifier	self		5625487	0					
ANR	5625502	Identifier	primary_hint_count		5625487	1					
ANR	5625503	UnaryOperationExpression	- 1		5625487	1					
ANR	5625504	UnaryOperator	-		5625487	0					
ANR	5625505	PrimaryExpression	1		5625487	1					
ANR	5625506	ExpressionStatement	self -> primary_hint_count = self -> hint_range_count	1418:8:58146:58195	5625487	1	True				
ANR	5625507	AssignmentExpression	self -> primary_hint_count = self -> hint_range_count		5625487	0		=			
ANR	5625508	PtrMemberAccess	self -> primary_hint_count		5625487	0					
ANR	5625509	Identifier	self		5625487	0					
ANR	5625510	Identifier	primary_hint_count		5625487	1					
ANR	5625511	PtrMemberAccess	self -> hint_range_count		5625487	1					
ANR	5625512	Identifier	self		5625487	0					
ANR	5625513	Identifier	hint_range_count		5625487	1					
ANR	5625514	ReturnStatement	"return t1_hinter__hint_mask ( self , NULL ) ;"	1419:4:58201:58240	5625487	2	True				
ANR	5625515	CallExpression	"t1_hinter__hint_mask ( self , NULL )"		5625487	0					
ANR	5625516	Callee	t1_hinter__hint_mask		5625487	0					
ANR	5625517	Identifier	t1_hinter__hint_mask		5625487	0					
ANR	5625518	ArgumentList	self		5625487	1					
ANR	5625519	Argument	self		5625487	0					
ANR	5625520	Identifier	self		5625487	0					
ANR	5625521	Argument	NULL		5625487	1					
ANR	5625522	Identifier	NULL		5625487	0					
ANR	5625523	ReturnType	int		5625487	1					
ANR	5625524	Identifier	t1_hinter__drop_hints		5625487	2					
ANR	5625525	ParameterList	t1_hinter * self		5625487	3					
ANR	5625526	Parameter	t1_hinter * self	1414:26:58031:58046	5625487	0	True				
ANR	5625527	ParameterType	t1_hinter *		5625487	0					
ANR	5625528	Identifier	self		5625487	1					
ANR	5625529	CFGEntryNode	ENTRY		5625487		True				
ANR	5625530	CFGExitNode	EXIT		5625487		True				
ANR	5625531	Symbol	NULL		5625487						
ANR	5625532	Symbol	* self		5625487						
ANR	5625533	Symbol	self		5625487						
ANR	5625534	Symbol	t1_hinter__hint_mask		5625487						
ANR	5625535	Symbol	self -> hint_range_count		5625487						
ANR	5625536	Symbol	self -> disable_hinting		5625487						
ANR	5625537	Symbol	self -> primary_hint_count		5625487						
ANR	5625538	Function	t1_hinter__stem	1422:0:58245:59984							
ANR	5625539	FunctionDef	"t1_hinter__stem (t1_hinter * self , enum t1_hint_type type , unsigned short stem3_index , fixed v0 , fixed v1 , int side_mask)"		5625538	0					
ANR	5625540	CompoundStatement		1424:0:58435:59984	5625538	0					
ANR	5625541	IdentifierDeclStatement	t1_hint * hint ;	1424:3:58439:58452	5625538	0	True				
ANR	5625542	IdentifierDecl	* hint		5625538	0					
ANR	5625543	IdentifierDeclType	t1_hint *		5625538	0					
ANR	5625544	Identifier	hint		5625538	1					
ANR	5625545	IdentifierDeclStatement	t1_glyph_space_coord s = ( type == hstem ? self -> subglyph_orig_gy : self -> subglyph_orig_gx ) ;	1425:4:58458:58548	5625538	1	True				
ANR	5625546	IdentifierDecl	s = ( type == hstem ? self -> subglyph_orig_gy : self -> subglyph_orig_gx )		5625538	0					
ANR	5625547	IdentifierDeclType	t1_glyph_space_coord		5625538	0					
ANR	5625548	Identifier	s		5625538	1					
ANR	5625549	AssignmentExpression	s = ( type == hstem ? self -> subglyph_orig_gy : self -> subglyph_orig_gx )		5625538	2		=			
ANR	5625550	Identifier	s		5625538	0					
ANR	5625551	ConditionalExpression	type == hstem ? self -> subglyph_orig_gy : self -> subglyph_orig_gx		5625538	1					
ANR	5625552	Condition	type == hstem		5625538	0					
ANR	5625553	EqualityExpression	type == hstem		5625538	0		==			
ANR	5625554	Identifier	type		5625538	0					
ANR	5625555	Identifier	hstem		5625538	1					
ANR	5625556	PtrMemberAccess	self -> subglyph_orig_gy		5625538	1					
ANR	5625557	Identifier	self		5625538	0					
ANR	5625558	Identifier	subglyph_orig_gy		5625538	1					
ANR	5625559	PtrMemberAccess	self -> subglyph_orig_gx		5625538	2					
ANR	5625560	Identifier	self		5625538	0					
ANR	5625561	Identifier	subglyph_orig_gx		5625538	1					
ANR	5625562	IdentifierDeclStatement	t1_glyph_space_coord g0 = s + v0 ;	1426:4:58554:58586	5625538	2	True				
ANR	5625563	IdentifierDecl	g0 = s + v0		5625538	0					
ANR	5625564	IdentifierDeclType	t1_glyph_space_coord		5625538	0					
ANR	5625565	Identifier	g0		5625538	1					
ANR	5625566	AssignmentExpression	g0 = s + v0		5625538	2		=			
ANR	5625567	Identifier	g0		5625538	0					
ANR	5625568	AdditiveExpression	s + v0		5625538	1		+			
ANR	5625569	Identifier	s		5625538	0					
ANR	5625570	Identifier	v0		5625538	1					
ANR	5625571	IdentifierDeclStatement	t1_glyph_space_coord g1 = s + v0 + v1 ;	1427:4:58592:58629	5625538	3	True				
ANR	5625572	IdentifierDecl	g1 = s + v0 + v1		5625538	0					
ANR	5625573	IdentifierDeclType	t1_glyph_space_coord		5625538	0					
ANR	5625574	Identifier	g1		5625538	1					
ANR	5625575	AssignmentExpression	g1 = s + v0 + v1		5625538	2		=			
ANR	5625576	Identifier	g1		5625538	0					
ANR	5625577	AdditiveExpression	s + v0 + v1		5625538	1		+			
ANR	5625578	Identifier	s		5625538	0					
ANR	5625579	AdditiveExpression	v0 + v1		5625538	1		+			
ANR	5625580	Identifier	v0		5625538	0					
ANR	5625581	Identifier	v1		5625538	1					
ANR	5625582	IdentifierDeclStatement	t1_hint_range * range ;	1428:4:58635:58655	5625538	4	True				
ANR	5625583	IdentifierDecl	* range		5625538	0					
ANR	5625584	IdentifierDeclType	t1_hint_range *		5625538	0					
ANR	5625585	Identifier	range		5625538	1					
ANR	5625586	IdentifierDeclStatement	"int i , code ;"	1429:0:58657:58668	5625538	5	True				
ANR	5625587	IdentifierDecl	i		5625538	0					
ANR	5625588	IdentifierDeclType	int		5625538	0					
ANR	5625589	Identifier	i		5625538	1					
ANR	5625590	IdentifierDecl	code		5625538	1					
ANR	5625591	IdentifierDeclType	int		5625538	0					
ANR	5625592	Identifier	code		5625538	1					
ANR	5625593	ExpressionStatement	"t1_hinter__adjust_matrix_precision ( self , ( side_mask & 1 ? g0 : g1 ) , ( side_mask & 2 ? g1 : g0 ) )"	1431:4:58675:58769	5625538	6	True				
ANR	5625594	CallExpression	"t1_hinter__adjust_matrix_precision ( self , ( side_mask & 1 ? g0 : g1 ) , ( side_mask & 2 ? g1 : g0 ) )"		5625538	0					
ANR	5625595	Callee	t1_hinter__adjust_matrix_precision		5625538	0					
ANR	5625596	Identifier	t1_hinter__adjust_matrix_precision		5625538	0					
ANR	5625597	ArgumentList	self		5625538	1					
ANR	5625598	Argument	self		5625538	0					
ANR	5625599	Identifier	self		5625538	0					
ANR	5625600	Argument	side_mask & 1 ? g0 : g1		5625538	1					
ANR	5625601	ConditionalExpression	side_mask & 1 ? g0 : g1		5625538	0					
ANR	5625602	Condition	side_mask & 1		5625538	0					
ANR	5625603	BitAndExpression	side_mask & 1		5625538	0		&			
ANR	5625604	Identifier	side_mask		5625538	0					
ANR	5625605	PrimaryExpression	1		5625538	1					
ANR	5625606	Identifier	g0		5625538	1					
ANR	5625607	Identifier	g1		5625538	2					
ANR	5625608	Argument	side_mask & 2 ? g1 : g0		5625538	2					
ANR	5625609	ConditionalExpression	side_mask & 2 ? g1 : g0		5625538	0					
ANR	5625610	Condition	side_mask & 2		5625538	0					
ANR	5625611	BitAndExpression	side_mask & 2		5625538	0		&			
ANR	5625612	Identifier	side_mask		5625538	0					
ANR	5625613	PrimaryExpression	2		5625538	1					
ANR	5625614	Identifier	g1		5625538	1					
ANR	5625615	Identifier	g0		5625538	2					
ANR	5625616	ForStatement	for ( i = 0 ; i < self -> hint_count ; i ++ )		5625538	7					
ANR	5625617	ForInit	i = 0 ;	1432:9:58780:58785	5625538	0	True				
ANR	5625618	AssignmentExpression	i = 0		5625538	0		=			
ANR	5625619	Identifier	i		5625538	0					
ANR	5625620	PrimaryExpression	0		5625538	1					
ANR	5625621	Condition	i < self -> hint_count	1432:16:58787:58806	5625538	1	True				
ANR	5625622	RelationalExpression	i < self -> hint_count		5625538	0		<			
ANR	5625623	Identifier	i		5625538	0					
ANR	5625624	PtrMemberAccess	self -> hint_count		5625538	1					
ANR	5625625	Identifier	self		5625538	0					
ANR	5625626	Identifier	hint_count		5625538	1					
ANR	5625627	PostIncDecOperationExpression	i ++	1432:38:58809:58811	5625538	2	True				
ANR	5625628	Identifier	i		5625538	0					
ANR	5625629	IncDec	++		5625538	1					
ANR	5625630	IfStatement	if ( self -> hint [ i ] . type == type && self -> hint [ i ] . g0 == g0 && self -> hint [ i ] . g1 == g1 && self -> hint [ i ] . side_mask == side_mask )		5625538	3					
ANR	5625631	Condition	self -> hint [ i ] . type == type && self -> hint [ i ] . g0 == g0 && self -> hint [ i ] . g1 == g1 && self -> hint [ i ] . side_mask == side_mask	1433:12:58826:58975	5625538	0	True				
ANR	5625632	AndExpression	self -> hint [ i ] . type == type && self -> hint [ i ] . g0 == g0 && self -> hint [ i ] . g1 == g1 && self -> hint [ i ] . side_mask == side_mask		5625538	0		&&			
ANR	5625633	EqualityExpression	self -> hint [ i ] . type == type		5625538	0		==			
ANR	5625634	MemberAccess	self -> hint [ i ] . type		5625538	0					
ANR	5625635	ArrayIndexing	self -> hint [ i ]		5625538	0					
ANR	5625636	PtrMemberAccess	self -> hint		5625538	0					
ANR	5625637	Identifier	self		5625538	0					
ANR	5625638	Identifier	hint		5625538	1					
ANR	5625639	Identifier	i		5625538	1					
ANR	5625640	Identifier	type		5625538	1					
ANR	5625641	Identifier	type		5625538	1					
ANR	5625642	AndExpression	self -> hint [ i ] . g0 == g0 && self -> hint [ i ] . g1 == g1 && self -> hint [ i ] . side_mask == side_mask		5625538	1		&&			
ANR	5625643	EqualityExpression	self -> hint [ i ] . g0 == g0		5625538	0		==			
ANR	5625644	MemberAccess	self -> hint [ i ] . g0		5625538	0					
ANR	5625645	ArrayIndexing	self -> hint [ i ]		5625538	0					
ANR	5625646	PtrMemberAccess	self -> hint		5625538	0					
ANR	5625647	Identifier	self		5625538	0					
ANR	5625648	Identifier	hint		5625538	1					
ANR	5625649	Identifier	i		5625538	1					
ANR	5625650	Identifier	g0		5625538	1					
ANR	5625651	Identifier	g0		5625538	1					
ANR	5625652	AndExpression	self -> hint [ i ] . g1 == g1 && self -> hint [ i ] . side_mask == side_mask		5625538	1		&&			
ANR	5625653	EqualityExpression	self -> hint [ i ] . g1 == g1		5625538	0		==			
ANR	5625654	MemberAccess	self -> hint [ i ] . g1		5625538	0					
ANR	5625655	ArrayIndexing	self -> hint [ i ]		5625538	0					
ANR	5625656	PtrMemberAccess	self -> hint		5625538	0					
ANR	5625657	Identifier	self		5625538	0					
ANR	5625658	Identifier	hint		5625538	1					
ANR	5625659	Identifier	i		5625538	1					
ANR	5625660	Identifier	g1		5625538	1					
ANR	5625661	Identifier	g1		5625538	1					
ANR	5625662	EqualityExpression	self -> hint [ i ] . side_mask == side_mask		5625538	1		==			
ANR	5625663	MemberAccess	self -> hint [ i ] . side_mask		5625538	0					
ANR	5625664	ArrayIndexing	self -> hint [ i ]		5625538	0					
ANR	5625665	PtrMemberAccess	self -> hint		5625538	0					
ANR	5625666	Identifier	self		5625538	0					
ANR	5625667	Identifier	hint		5625538	1					
ANR	5625668	Identifier	i		5625538	1					
ANR	5625669	Identifier	side_mask		5625538	1					
ANR	5625670	Identifier	side_mask		5625538	1					
ANR	5625671	BreakStatement	break ;	1436:12:58990:58995	5625538	1	True				
ANR	5625672	IfStatement	if ( i < self -> hint_count )		5625538	8					
ANR	5625673	Condition	i < self -> hint_count	1437:8:59005:59024	5625538	0	True				
ANR	5625674	RelationalExpression	i < self -> hint_count		5625538	0		<			
ANR	5625675	Identifier	i		5625538	0					
ANR	5625676	PtrMemberAccess	self -> hint_count		5625538	1					
ANR	5625677	Identifier	self		5625538	0					
ANR	5625678	Identifier	hint_count		5625538	1					
ANR	5625679	ExpressionStatement	hint = & self -> hint [ i ]	1438:8:59035:59056	5625538	1	True				
ANR	5625680	AssignmentExpression	hint = & self -> hint [ i ]		5625538	0		=			
ANR	5625681	Identifier	hint		5625538	0					
ANR	5625682	UnaryOperationExpression	& self -> hint [ i ]		5625538	1					
ANR	5625683	UnaryOperator	&		5625538	0					
ANR	5625684	ArrayIndexing	self -> hint [ i ]		5625538	1					
ANR	5625685	PtrMemberAccess	self -> hint		5625538	0					
ANR	5625686	Identifier	self		5625538	0					
ANR	5625687	Identifier	hint		5625538	1					
ANR	5625688	Identifier	i		5625538	1					
ANR	5625689	ElseStatement	else		5625538	0					
ANR	5625690	CompoundStatement		16:9:631:631	5625538	0					
ANR	5625691	ExpressionStatement	"code = t1_hinter__can_add_hint ( self , & hint )"	1440:8:59077:59120	5625538	0	True				
ANR	5625692	AssignmentExpression	"code = t1_hinter__can_add_hint ( self , & hint )"		5625538	0		=			
ANR	5625693	Identifier	code		5625538	0					
ANR	5625694	CallExpression	"t1_hinter__can_add_hint ( self , & hint )"		5625538	1					
ANR	5625695	Callee	t1_hinter__can_add_hint		5625538	0					
ANR	5625696	Identifier	t1_hinter__can_add_hint		5625538	0					
ANR	5625697	ArgumentList	self		5625538	1					
ANR	5625698	Argument	self		5625538	0					
ANR	5625699	Identifier	self		5625538	0					
ANR	5625700	Argument	& hint		5625538	1					
ANR	5625701	UnaryOperationExpression	& hint		5625538	0					
ANR	5625702	UnaryOperator	&		5625538	0					
ANR	5625703	Identifier	hint		5625538	1					
ANR	5625704	IfStatement	if ( code < 0 )		5625538	1					
ANR	5625705	Condition	code < 0	1441:12:59134:59141	5625538	0	True				
ANR	5625706	RelationalExpression	code < 0		5625538	0		<			
ANR	5625707	Identifier	code		5625538	0					
ANR	5625708	PrimaryExpression	0		5625538	1					
ANR	5625709	ReturnStatement	return code ;	1442:12:59156:59167	5625538	1	True				
ANR	5625710	Identifier	code		5625538	0					
ANR	5625711	ExpressionStatement	hint -> type = type	1443:8:59177:59194	5625538	2	True				
ANR	5625712	AssignmentExpression	hint -> type = type		5625538	0		=			
ANR	5625713	PtrMemberAccess	hint -> type		5625538	0					
ANR	5625714	Identifier	hint		5625538	0					
ANR	5625715	Identifier	type		5625538	1					
ANR	5625716	Identifier	type		5625538	1					
ANR	5625717	ExpressionStatement	hint -> g0 = hint -> ag0 = g0	1444:8:59204:59229	5625538	3	True				
ANR	5625718	AssignmentExpression	hint -> g0 = hint -> ag0 = g0		5625538	0		=			
ANR	5625719	PtrMemberAccess	hint -> g0		5625538	0					
ANR	5625720	Identifier	hint		5625538	0					
ANR	5625721	Identifier	g0		5625538	1					
ANR	5625722	AssignmentExpression	hint -> ag0 = g0		5625538	1		=			
ANR	5625723	PtrMemberAccess	hint -> ag0		5625538	0					
ANR	5625724	Identifier	hint		5625538	0					
ANR	5625725	Identifier	ag0		5625538	1					
ANR	5625726	Identifier	g0		5625538	1					
ANR	5625727	ExpressionStatement	hint -> g1 = hint -> ag1 = g1	1445:8:59239:59264	5625538	4	True				
ANR	5625728	AssignmentExpression	hint -> g1 = hint -> ag1 = g1		5625538	0		=			
ANR	5625729	PtrMemberAccess	hint -> g1		5625538	0					
ANR	5625730	Identifier	hint		5625538	0					
ANR	5625731	Identifier	g1		5625538	1					
ANR	5625732	AssignmentExpression	hint -> ag1 = g1		5625538	1		=			
ANR	5625733	PtrMemberAccess	hint -> ag1		5625538	0					
ANR	5625734	Identifier	hint		5625538	0					
ANR	5625735	Identifier	ag1		5625538	1					
ANR	5625736	Identifier	g1		5625538	1					
ANR	5625737	ExpressionStatement	hint -> aligned0 = hint -> aligned1 = unaligned	1446:8:59274:59317	5625538	5	True				
ANR	5625738	AssignmentExpression	hint -> aligned0 = hint -> aligned1 = unaligned		5625538	0		=			
ANR	5625739	PtrMemberAccess	hint -> aligned0		5625538	0					
ANR	5625740	Identifier	hint		5625538	0					
ANR	5625741	Identifier	aligned0		5625538	1					
ANR	5625742	AssignmentExpression	hint -> aligned1 = unaligned		5625538	1		=			
ANR	5625743	PtrMemberAccess	hint -> aligned1		5625538	0					
ANR	5625744	Identifier	hint		5625538	0					
ANR	5625745	Identifier	aligned1		5625538	1					
ANR	5625746	Identifier	unaligned		5625538	1					
ANR	5625747	ExpressionStatement	hint -> q0 = hint -> q1 = max_int	1447:8:59327:59356	5625538	6	True				
ANR	5625748	AssignmentExpression	hint -> q0 = hint -> q1 = max_int		5625538	0		=			
ANR	5625749	PtrMemberAccess	hint -> q0		5625538	0					
ANR	5625750	Identifier	hint		5625538	0					
ANR	5625751	Identifier	q0		5625538	1					
ANR	5625752	AssignmentExpression	hint -> q1 = max_int		5625538	1		=			
ANR	5625753	PtrMemberAccess	hint -> q1		5625538	0					
ANR	5625754	Identifier	hint		5625538	0					
ANR	5625755	Identifier	q1		5625538	1					
ANR	5625756	Identifier	max_int		5625538	1					
ANR	5625757	ExpressionStatement	hint -> b0 = hint -> b1 = false	1448:8:59366:59393	5625538	7	True				
ANR	5625758	AssignmentExpression	hint -> b0 = hint -> b1 = false		5625538	0		=			
ANR	5625759	PtrMemberAccess	hint -> b0		5625538	0					
ANR	5625760	Identifier	hint		5625538	0					
ANR	5625761	Identifier	b0		5625538	1					
ANR	5625762	AssignmentExpression	hint -> b1 = false		5625538	1		=			
ANR	5625763	PtrMemberAccess	hint -> b1		5625538	0					
ANR	5625764	Identifier	hint		5625538	0					
ANR	5625765	Identifier	b1		5625538	1					
ANR	5625766	Identifier	false		5625538	1					
ANR	5625767	ExpressionStatement	hint -> stem3_index = stem3_index	1449:8:59403:59434	5625538	8	True				
ANR	5625768	AssignmentExpression	hint -> stem3_index = stem3_index		5625538	0		=			
ANR	5625769	PtrMemberAccess	hint -> stem3_index		5625538	0					
ANR	5625770	Identifier	hint		5625538	0					
ANR	5625771	Identifier	stem3_index		5625538	1					
ANR	5625772	Identifier	stem3_index		5625538	1					
ANR	5625773	ExpressionStatement	hint -> range_index = - 1	1450:8:59444:59466	5625538	9	True				
ANR	5625774	AssignmentExpression	hint -> range_index = - 1		5625538	0		=			
ANR	5625775	PtrMemberAccess	hint -> range_index		5625538	0					
ANR	5625776	Identifier	hint		5625538	0					
ANR	5625777	Identifier	range_index		5625538	1					
ANR	5625778	UnaryOperationExpression	- 1		5625538	1					
ANR	5625779	UnaryOperator	-		5625538	0					
ANR	5625780	PrimaryExpression	1		5625538	1					
ANR	5625781	ExpressionStatement	hint -> side_mask = side_mask	1451:8:59476:59503	5625538	10	True				
ANR	5625782	AssignmentExpression	hint -> side_mask = side_mask		5625538	0		=			
ANR	5625783	PtrMemberAccess	hint -> side_mask		5625538	0					
ANR	5625784	Identifier	hint		5625538	0					
ANR	5625785	Identifier	side_mask		5625538	1					
ANR	5625786	Identifier	side_mask		5625538	1					
ANR	5625787	ExpressionStatement	hint -> stem_snap_index0 = hint -> stem_snap_index1 = 0	1452:8:59513:59564	5625538	11	True				
ANR	5625788	AssignmentExpression	hint -> stem_snap_index0 = hint -> stem_snap_index1 = 0		5625538	0		=			
ANR	5625789	PtrMemberAccess	hint -> stem_snap_index0		5625538	0					
ANR	5625790	Identifier	hint		5625538	0					
ANR	5625791	Identifier	stem_snap_index0		5625538	1					
ANR	5625792	AssignmentExpression	hint -> stem_snap_index1 = 0		5625538	1		=			
ANR	5625793	PtrMemberAccess	hint -> stem_snap_index1		5625538	0					
ANR	5625794	Identifier	hint		5625538	0					
ANR	5625795	Identifier	stem_snap_index1		5625538	1					
ANR	5625796	PrimaryExpression	0		5625538	1					
ANR	5625797	ExpressionStatement	hint -> boundary_length0 = hint -> boundary_length1 = 0	1453:8:59574:59625	5625538	12	True				
ANR	5625798	AssignmentExpression	hint -> boundary_length0 = hint -> boundary_length1 = 0		5625538	0		=			
ANR	5625799	PtrMemberAccess	hint -> boundary_length0		5625538	0					
ANR	5625800	Identifier	hint		5625538	0					
ANR	5625801	Identifier	boundary_length0		5625538	1					
ANR	5625802	AssignmentExpression	hint -> boundary_length1 = 0		5625538	1		=			
ANR	5625803	PtrMemberAccess	hint -> boundary_length1		5625538	0					
ANR	5625804	Identifier	hint		5625538	0					
ANR	5625805	Identifier	boundary_length1		5625538	1					
ANR	5625806	PrimaryExpression	0		5625538	1					
ANR	5625807	ExpressionStatement	"code = t1_hinter__can_add_hint_range ( self , & range )"	1455:4:59637:59687	5625538	9	True				
ANR	5625808	AssignmentExpression	"code = t1_hinter__can_add_hint_range ( self , & range )"		5625538	0		=			
ANR	5625809	Identifier	code		5625538	0					
ANR	5625810	CallExpression	"t1_hinter__can_add_hint_range ( self , & range )"		5625538	1					
ANR	5625811	Callee	t1_hinter__can_add_hint_range		5625538	0					
ANR	5625812	Identifier	t1_hinter__can_add_hint_range		5625538	0					
ANR	5625813	ArgumentList	self		5625538	1					
ANR	5625814	Argument	self		5625538	0					
ANR	5625815	Identifier	self		5625538	0					
ANR	5625816	Argument	& range		5625538	1					
ANR	5625817	UnaryOperationExpression	& range		5625538	0					
ANR	5625818	UnaryOperator	&		5625538	0					
ANR	5625819	Identifier	range		5625538	1					
ANR	5625820	IfStatement	if ( code < 0 )		5625538	10					
ANR	5625821	Condition	code < 0	1456:8:59697:59704	5625538	0	True				
ANR	5625822	RelationalExpression	code < 0		5625538	0		<			
ANR	5625823	Identifier	code		5625538	0					
ANR	5625824	PrimaryExpression	0		5625538	1					
ANR	5625825	ReturnStatement	return code ;	1457:8:59715:59726	5625538	1	True				
ANR	5625826	Identifier	code		5625538	0					
ANR	5625827	ExpressionStatement	range -> beg_pole = self -> pole_count	1458:4:59732:59766	5625538	11	True				
ANR	5625828	AssignmentExpression	range -> beg_pole = self -> pole_count		5625538	0		=			
ANR	5625829	PtrMemberAccess	range -> beg_pole		5625538	0					
ANR	5625830	Identifier	range		5625538	0					
ANR	5625831	Identifier	beg_pole		5625538	1					
ANR	5625832	PtrMemberAccess	self -> pole_count		5625538	1					
ANR	5625833	Identifier	self		5625538	0					
ANR	5625834	Identifier	pole_count		5625538	1					
ANR	5625835	ExpressionStatement	range -> end_pole = - 1	1459:4:59772:59792	5625538	12	True				
ANR	5625836	AssignmentExpression	range -> end_pole = - 1		5625538	0		=			
ANR	5625837	PtrMemberAccess	range -> end_pole		5625538	0					
ANR	5625838	Identifier	range		5625538	0					
ANR	5625839	Identifier	end_pole		5625538	1					
ANR	5625840	UnaryOperationExpression	- 1		5625538	1					
ANR	5625841	UnaryOperator	-		5625538	0					
ANR	5625842	PrimaryExpression	1		5625538	1					
ANR	5625843	ExpressionStatement	range -> next = hint -> range_index	1460:4:59798:59829	5625538	13	True				
ANR	5625844	AssignmentExpression	range -> next = hint -> range_index		5625538	0		=			
ANR	5625845	PtrMemberAccess	range -> next		5625538	0					
ANR	5625846	Identifier	range		5625538	0					
ANR	5625847	Identifier	next		5625538	1					
ANR	5625848	PtrMemberAccess	hint -> range_index		5625538	1					
ANR	5625849	Identifier	hint		5625538	0					
ANR	5625850	Identifier	range_index		5625538	1					
ANR	5625851	ExpressionStatement	hint -> range_index = range - self -> hint_range	1461:4:59835:59879	5625538	14	True				
ANR	5625852	AssignmentExpression	hint -> range_index = range - self -> hint_range		5625538	0		=			
ANR	5625853	PtrMemberAccess	hint -> range_index		5625538	0					
ANR	5625854	Identifier	hint		5625538	0					
ANR	5625855	Identifier	range_index		5625538	1					
ANR	5625856	AdditiveExpression	range - self -> hint_range		5625538	1		-			
ANR	5625857	Identifier	range		5625538	0					
ANR	5625858	PtrMemberAccess	self -> hint_range		5625538	1					
ANR	5625859	Identifier	self		5625538	0					
ANR	5625860	Identifier	hint_range		5625538	1					
ANR	5625861	IfStatement	if ( i >= self -> hint_count )		5625538	15					
ANR	5625862	Condition	i >= self -> hint_count	1462:8:59889:59909	5625538	0	True				
ANR	5625863	RelationalExpression	i >= self -> hint_count		5625538	0		>=			
ANR	5625864	Identifier	i		5625538	0					
ANR	5625865	PtrMemberAccess	self -> hint_count		5625538	1					
ANR	5625866	Identifier	self		5625538	0					
ANR	5625867	Identifier	hint_count		5625538	1					
ANR	5625868	ExpressionStatement	self -> hint_count ++	1463:8:59920:59938	5625538	1	True				
ANR	5625869	PostIncDecOperationExpression	self -> hint_count ++		5625538	0					
ANR	5625870	PtrMemberAccess	self -> hint_count		5625538	0					
ANR	5625871	Identifier	self		5625538	0					
ANR	5625872	Identifier	hint_count		5625538	1					
ANR	5625873	IncDec	++		5625538	1					
ANR	5625874	ExpressionStatement	self -> hint_range_count ++	1464:4:59944:59968	5625538	16	True				
ANR	5625875	PostIncDecOperationExpression	self -> hint_range_count ++		5625538	0					
ANR	5625876	PtrMemberAccess	self -> hint_range_count		5625538	0					
ANR	5625877	Identifier	self		5625538	0					
ANR	5625878	Identifier	hint_range_count		5625538	1					
ANR	5625879	IncDec	++		5625538	1					
ANR	5625880	ReturnStatement	return 0 ;	1465:4:59974:59982	5625538	17	True				
ANR	5625881	PrimaryExpression	0		5625538	0					
ANR	5625882	ReturnType	static inline int		5625538	1					
ANR	5625883	Identifier	t1_hinter__stem		5625538	2					
ANR	5625884	ParameterList	"t1_hinter * self , enum t1_hint_type type , unsigned short stem3_index , fixed v0 , fixed v1 , int side_mask"		5625538	3					
ANR	5625885	Parameter	t1_hinter * self	1422:34:58279:58294	5625538	0	True				
ANR	5625886	ParameterType	t1_hinter *		5625538	0					
ANR	5625887	Identifier	self		5625538	1					
ANR	5625888	Parameter	enum t1_hint_type type	1422:52:58297:58318	5625538	1	True				
ANR	5625889	ParameterType	enum t1_hint_type		5625538	0					
ANR	5625890	Identifier	type		5625538	1					
ANR	5625891	Parameter	unsigned short stem3_index	1422:76:58321:58346	5625538	2	True				
ANR	5625892	ParameterType	unsigned short		5625538	0					
ANR	5625893	Identifier	stem3_index		5625538	1					
ANR	5625894	Parameter	fixed v0	1423:52:58400:58407	5625538	3	True				
ANR	5625895	ParameterType	fixed		5625538	0					
ANR	5625896	Identifier	v0		5625538	1					
ANR	5625897	Parameter	fixed v1	1423:62:58410:58417	5625538	4	True				
ANR	5625898	ParameterType	fixed		5625538	0					
ANR	5625899	Identifier	v1		5625538	1					
ANR	5625900	Parameter	int side_mask	1423:72:58420:58432	5625538	5	True				
ANR	5625901	ParameterType	int		5625538	0					
ANR	5625902	Identifier	side_mask		5625538	1					
ANR	5625903	CFGEntryNode	ENTRY		5625538		True				
ANR	5625904	CFGExitNode	EXIT		5625538		True				
ANR	5625905	Symbol	stem3_index		5625538						
ANR	5625906	Symbol	self -> pole_count		5625538						
ANR	5625907	Symbol	hint -> side_mask		5625538						
ANR	5625908	Symbol	hint -> stem_snap_index1		5625538						
ANR	5625909	Symbol	& hint		5625538						
ANR	5625910	Symbol	type		5625538						
ANR	5625911	Symbol	hint -> range_index		5625538						
ANR	5625912	Symbol	hint -> g1		5625538						
ANR	5625913	Symbol	hint -> stem_snap_index0		5625538						
ANR	5625914	Symbol	* self -> hint		5625538						
ANR	5625915	Symbol	* range		5625538						
ANR	5625916	Symbol	hint -> ag1		5625538						
ANR	5625917	Symbol	self -> hint [ i ] . side_mask		5625538						
ANR	5625918	Symbol	hint -> ag0		5625538						
ANR	5625919	Symbol	side_mask		5625538						
ANR	5625920	Symbol	* hint		5625538						
ANR	5625921	Symbol	* self		5625538						
ANR	5625922	Symbol	range -> beg_pole		5625538						
ANR	5625923	Symbol	self -> hint [ i ] . g1		5625538						
ANR	5625924	Symbol	hint -> b1		5625538						
ANR	5625925	Symbol	g0		5625538						
ANR	5625926	Symbol	self -> hint [ i ] . g0		5625538						
ANR	5625927	Symbol	hint -> b0		5625538						
ANR	5625928	Symbol	g1		5625538						
ANR	5625929	Symbol	unaligned		5625538						
ANR	5625930	Symbol	self -> subglyph_orig_gy		5625538						
ANR	5625931	Symbol	hint -> g0		5625538						
ANR	5625932	Symbol	hint		5625538						
ANR	5625933	Symbol	self -> subglyph_orig_gx		5625538						
ANR	5625934	Symbol	max_int		5625538						
ANR	5625935	Symbol	code		5625538						
ANR	5625936	Symbol	range -> next		5625538						
ANR	5625937	Symbol	range		5625538						
ANR	5625938	Symbol	t1_hinter__can_add_hint_range		5625538						
ANR	5625939	Symbol	hint -> type		5625538						
ANR	5625940	Symbol	hstem		5625538						
ANR	5625941	Symbol	self -> hint [ i ] . type		5625538						
ANR	5625942	Symbol	self -> hint		5625538						
ANR	5625943	Symbol	* * self		5625538						
ANR	5625944	Symbol	t1_hinter__can_add_hint		5625538						
ANR	5625945	Symbol	hint -> aligned0		5625538						
ANR	5625946	Symbol	false		5625538						
ANR	5625947	Symbol	hint -> boundary_length0		5625538						
ANR	5625948	Symbol	i		5625538						
ANR	5625949	Symbol	hint -> aligned1		5625538						
ANR	5625950	Symbol	self -> hint_range		5625538						
ANR	5625951	Symbol	self -> hint_range_count		5625538						
ANR	5625952	Symbol	hint -> boundary_length1		5625538						
ANR	5625953	Symbol	hint -> stem3_index		5625538						
ANR	5625954	Symbol	self -> hint_count		5625538						
ANR	5625955	Symbol	s		5625538						
ANR	5625956	Symbol	* i		5625538						
ANR	5625957	Symbol	hint -> q0		5625538						
ANR	5625958	Symbol	self		5625538						
ANR	5625959	Symbol	v0		5625538						
ANR	5625960	Symbol	v1		5625538						
ANR	5625961	Symbol	hint -> q1		5625538						
ANR	5625962	Symbol	range -> end_pole		5625538						
ANR	5625963	Symbol	& range		5625538						
ANR	5625964	Function	t1_hinter__dotsection	1468:0:59987:60279							
ANR	5625965	FunctionDef	t1_hinter__dotsection (t1_hinter * self)		5625964	0					
ANR	5625966	CompoundStatement		1469:0:60031:60279	5625964	0					
ANR	5625967	IfStatement	if ( self -> pole_count == 0 || self -> pole [ self -> pole_count - 1 ] . type != moveto )		5625964	0					
ANR	5625968	Condition	self -> pole_count == 0 || self -> pole [ self -> pole_count - 1 ] . type != moveto	1469:7:60039:60110	5625964	0	True				
ANR	5625969	OrExpression	self -> pole_count == 0 || self -> pole [ self -> pole_count - 1 ] . type != moveto		5625964	0		||			
ANR	5625970	EqualityExpression	self -> pole_count == 0		5625964	0		==			
ANR	5625971	PtrMemberAccess	self -> pole_count		5625964	0					
ANR	5625972	Identifier	self		5625964	0					
ANR	5625973	Identifier	pole_count		5625964	1					
ANR	5625974	PrimaryExpression	0		5625964	1					
ANR	5625975	EqualityExpression	self -> pole [ self -> pole_count - 1 ] . type != moveto		5625964	1		!=			
ANR	5625976	MemberAccess	self -> pole [ self -> pole_count - 1 ] . type		5625964	0					
ANR	5625977	ArrayIndexing	self -> pole [ self -> pole_count - 1 ]		5625964	0					
ANR	5625978	PtrMemberAccess	self -> pole		5625964	0					
ANR	5625979	Identifier	self		5625964	0					
ANR	5625980	Identifier	pole		5625964	1					
ANR	5625981	AdditiveExpression	self -> pole_count - 1		5625964	1		-			
ANR	5625982	PtrMemberAccess	self -> pole_count		5625964	0					
ANR	5625983	Identifier	self		5625964	0					
ANR	5625984	Identifier	pole_count		5625964	1					
ANR	5625985	PrimaryExpression	1		5625964	1					
ANR	5625986	Identifier	type		5625964	1					
ANR	5625987	Identifier	moveto		5625964	1					
ANR	5625988	ReturnStatement	return 0 ;	1470:8:60121:60129	5625964	1	True				
ANR	5625989	PrimaryExpression	0		5625964	0					
ANR	5625990	IfStatement	if ( self -> disable_hinting )		5625964	1					
ANR	5625991	Condition	self -> disable_hinting	1471:8:60187:60207	5625964	0	True				
ANR	5625992	PtrMemberAccess	self -> disable_hinting		5625964	0					
ANR	5625993	Identifier	self		5625964	0					
ANR	5625994	Identifier	disable_hinting		5625964	1					
ANR	5625995	ReturnStatement	return 0 ;	1472:8:60218:60226	5625964	1	True				
ANR	5625996	PrimaryExpression	0		5625964	0					
ANR	5625997	ReturnStatement	"return t1_hinter__stem ( self , dot , 0 , 0 , 0 , 0 ) ;"	1473:4:60232:60277	5625964	2	True				
ANR	5625998	CallExpression	"t1_hinter__stem ( self , dot , 0 , 0 , 0 , 0 )"		5625964	0					
ANR	5625999	Callee	t1_hinter__stem		5625964	0					
ANR	5626000	Identifier	t1_hinter__stem		5625964	0					
ANR	5626001	ArgumentList	self		5625964	1					
ANR	5626002	Argument	self		5625964	0					
ANR	5626003	Identifier	self		5625964	0					
ANR	5626004	Argument	dot		5625964	1					
ANR	5626005	Identifier	dot		5625964	0					
ANR	5626006	Argument	0		5625964	2					
ANR	5626007	PrimaryExpression	0		5625964	0					
ANR	5626008	Argument	0		5625964	3					
ANR	5626009	PrimaryExpression	0		5625964	0					
ANR	5626010	Argument	0		5625964	4					
ANR	5626011	PrimaryExpression	0		5625964	0					
ANR	5626012	Argument	0		5625964	5					
ANR	5626013	PrimaryExpression	0		5625964	0					
ANR	5626014	ReturnType	int		5625964	1					
ANR	5626015	Identifier	t1_hinter__dotsection		5625964	2					
ANR	5626016	ParameterList	t1_hinter * self		5625964	3					
ANR	5626017	Parameter	t1_hinter * self	1468:26:60013:60028	5625964	0	True				
ANR	5626018	ParameterType	t1_hinter *		5625964	0					
ANR	5626019	Identifier	self		5625964	1					
ANR	5626020	CFGEntryNode	ENTRY		5625964		True				
ANR	5626021	CFGExitNode	EXIT		5625964		True				
ANR	5626022	Symbol	* self -> pole		5625964						
ANR	5626023	Symbol	* * self		5625964						
ANR	5626024	Symbol	self -> pole_count		5625964						
ANR	5626025	Symbol	* self -> pole_count		5625964						
ANR	5626026	Symbol	* self		5625964						
ANR	5626027	Symbol	dot		5625964						
ANR	5626028	Symbol	self		5625964						
ANR	5626029	Symbol	self -> pole		5625964						
ANR	5626030	Symbol	self -> pole [ self -> pole_count - 1 ] . type		5625964						
ANR	5626031	Symbol	t1_hinter__stem		5625964						
ANR	5626032	Symbol	self -> disable_hinting		5625964						
ANR	5626033	Symbol	moveto		5625964						
ANR	5626034	Function	t1_hinter__hstem	1476:0:60282:60445							
ANR	5626035	FunctionDef	"t1_hinter__hstem (t1_hinter * self , fixed x0 , fixed x1)"		5626034	0					
ANR	5626036	CompoundStatement		1477:0:60341:60445	5626034	0					
ANR	5626037	IfStatement	if ( self -> disable_hinting )		5626034	0					
ANR	5626038	Condition	self -> disable_hinting	1477:7:60349:60369	5626034	0	True				
ANR	5626039	PtrMemberAccess	self -> disable_hinting		5626034	0					
ANR	5626040	Identifier	self		5626034	0					
ANR	5626041	Identifier	disable_hinting		5626034	1					
ANR	5626042	ReturnStatement	return 0 ;	1478:8:60380:60388	5626034	1	True				
ANR	5626043	PrimaryExpression	0		5626034	0					
ANR	5626044	ReturnStatement	"return t1_hinter__stem ( self , hstem , 0 , x0 , x1 , 3 ) ;"	1479:4:60394:60443	5626034	1	True				
ANR	5626045	CallExpression	"t1_hinter__stem ( self , hstem , 0 , x0 , x1 , 3 )"		5626034	0					
ANR	5626046	Callee	t1_hinter__stem		5626034	0					
ANR	5626047	Identifier	t1_hinter__stem		5626034	0					
ANR	5626048	ArgumentList	self		5626034	1					
ANR	5626049	Argument	self		5626034	0					
ANR	5626050	Identifier	self		5626034	0					
ANR	5626051	Argument	hstem		5626034	1					
ANR	5626052	Identifier	hstem		5626034	0					
ANR	5626053	Argument	0		5626034	2					
ANR	5626054	PrimaryExpression	0		5626034	0					
ANR	5626055	Argument	x0		5626034	3					
ANR	5626056	Identifier	x0		5626034	0					
ANR	5626057	Argument	x1		5626034	4					
ANR	5626058	Identifier	x1		5626034	0					
ANR	5626059	Argument	3		5626034	5					
ANR	5626060	PrimaryExpression	3		5626034	0					
ANR	5626061	ReturnType	int		5626034	1					
ANR	5626062	Identifier	t1_hinter__hstem		5626034	2					
ANR	5626063	ParameterList	"t1_hinter * self , fixed x0 , fixed x1"		5626034	3					
ANR	5626064	Parameter	t1_hinter * self	1476:21:60303:60318	5626034	0	True				
ANR	5626065	ParameterType	t1_hinter *		5626034	0					
ANR	5626066	Identifier	self		5626034	1					
ANR	5626067	Parameter	fixed x0	1476:39:60321:60328	5626034	1	True				
ANR	5626068	ParameterType	fixed		5626034	0					
ANR	5626069	Identifier	x0		5626034	1					
ANR	5626070	Parameter	fixed x1	1476:49:60331:60338	5626034	2	True				
ANR	5626071	ParameterType	fixed		5626034	0					
ANR	5626072	Identifier	x1		5626034	1					
ANR	5626073	CFGEntryNode	ENTRY		5626034		True				
ANR	5626074	CFGExitNode	EXIT		5626034		True				
ANR	5626075	Symbol	* self		5626034						
ANR	5626076	Symbol	x0		5626034						
ANR	5626077	Symbol	self		5626034						
ANR	5626078	Symbol	x1		5626034						
ANR	5626079	Symbol	t1_hinter__stem		5626034						
ANR	5626080	Symbol	self -> disable_hinting		5626034						
ANR	5626081	Symbol	hstem		5626034						
ANR	5626082	Function	t1_hinter__overall_hstem	1482:0:60448:60680							
ANR	5626083	FunctionDef	"t1_hinter__overall_hstem (t1_hinter * self , fixed x0 , fixed x1 , int side_mask)"		5626082	0					
ANR	5626084	CompoundStatement		1483:0:60530:60680	5626082	0					
ANR	5626085	IfStatement	if ( self -> disable_hinting )		5626082	0					
ANR	5626086	Condition	self -> disable_hinting	1484:8:60576:60596	5626082	0	True				
ANR	5626087	PtrMemberAccess	self -> disable_hinting		5626082	0					
ANR	5626088	Identifier	self		5626082	0					
ANR	5626089	Identifier	disable_hinting		5626082	1					
ANR	5626090	ReturnStatement	return 0 ;	1485:8:60607:60615	5626082	1	True				
ANR	5626091	PrimaryExpression	0		5626082	0					
ANR	5626092	ReturnStatement	"return t1_hinter__stem ( self , hstem , 0 , x0 , x1 , side_mask ) ;"	1486:4:60621:60678	5626082	1	True				
ANR	5626093	CallExpression	"t1_hinter__stem ( self , hstem , 0 , x0 , x1 , side_mask )"		5626082	0					
ANR	5626094	Callee	t1_hinter__stem		5626082	0					
ANR	5626095	Identifier	t1_hinter__stem		5626082	0					
ANR	5626096	ArgumentList	self		5626082	1					
ANR	5626097	Argument	self		5626082	0					
ANR	5626098	Identifier	self		5626082	0					
ANR	5626099	Argument	hstem		5626082	1					
ANR	5626100	Identifier	hstem		5626082	0					
ANR	5626101	Argument	0		5626082	2					
ANR	5626102	PrimaryExpression	0		5626082	0					
ANR	5626103	Argument	x0		5626082	3					
ANR	5626104	Identifier	x0		5626082	0					
ANR	5626105	Argument	x1		5626082	4					
ANR	5626106	Identifier	x1		5626082	0					
ANR	5626107	Argument	side_mask		5626082	5					
ANR	5626108	Identifier	side_mask		5626082	0					
ANR	5626109	ReturnType	int		5626082	1					
ANR	5626110	Identifier	t1_hinter__overall_hstem		5626082	2					
ANR	5626111	ParameterList	"t1_hinter * self , fixed x0 , fixed x1 , int side_mask"		5626082	3					
ANR	5626112	Parameter	t1_hinter * self	1482:29:60477:60492	5626082	0	True				
ANR	5626113	ParameterType	t1_hinter *		5626082	0					
ANR	5626114	Identifier	self		5626082	1					
ANR	5626115	Parameter	fixed x0	1482:47:60495:60502	5626082	1	True				
ANR	5626116	ParameterType	fixed		5626082	0					
ANR	5626117	Identifier	x0		5626082	1					
ANR	5626118	Parameter	fixed x1	1482:57:60505:60512	5626082	2	True				
ANR	5626119	ParameterType	fixed		5626082	0					
ANR	5626120	Identifier	x1		5626082	1					
ANR	5626121	Parameter	int side_mask	1482:67:60515:60527	5626082	3	True				
ANR	5626122	ParameterType	int		5626082	0					
ANR	5626123	Identifier	side_mask		5626082	1					
ANR	5626124	CFGEntryNode	ENTRY		5626082		True				
ANR	5626125	CFGExitNode	EXIT		5626082		True				
ANR	5626126	Symbol	* self		5626082						
ANR	5626127	Symbol	x0		5626082						
ANR	5626128	Symbol	self		5626082						
ANR	5626129	Symbol	x1		5626082						
ANR	5626130	Symbol	side_mask		5626082						
ANR	5626131	Symbol	t1_hinter__stem		5626082						
ANR	5626132	Symbol	self -> disable_hinting		5626082						
ANR	5626133	Symbol	hstem		5626082						
ANR	5626134	Function	t1_hinter__vstem	1489:0:60683:60846							
ANR	5626135	FunctionDef	"t1_hinter__vstem (t1_hinter * self , fixed y0 , fixed y1)"		5626134	0					
ANR	5626136	CompoundStatement		1490:0:60742:60846	5626134	0					
ANR	5626137	IfStatement	if ( self -> disable_hinting )		5626134	0					
ANR	5626138	Condition	self -> disable_hinting	1490:7:60750:60770	5626134	0	True				
ANR	5626139	PtrMemberAccess	self -> disable_hinting		5626134	0					
ANR	5626140	Identifier	self		5626134	0					
ANR	5626141	Identifier	disable_hinting		5626134	1					
ANR	5626142	ReturnStatement	return 0 ;	1491:8:60781:60789	5626134	1	True				
ANR	5626143	PrimaryExpression	0		5626134	0					
ANR	5626144	ReturnStatement	"return t1_hinter__stem ( self , vstem , 0 , y0 , y1 , 3 ) ;"	1492:4:60795:60844	5626134	1	True				
ANR	5626145	CallExpression	"t1_hinter__stem ( self , vstem , 0 , y0 , y1 , 3 )"		5626134	0					
ANR	5626146	Callee	t1_hinter__stem		5626134	0					
ANR	5626147	Identifier	t1_hinter__stem		5626134	0					
ANR	5626148	ArgumentList	self		5626134	1					
ANR	5626149	Argument	self		5626134	0					
ANR	5626150	Identifier	self		5626134	0					
ANR	5626151	Argument	vstem		5626134	1					
ANR	5626152	Identifier	vstem		5626134	0					
ANR	5626153	Argument	0		5626134	2					
ANR	5626154	PrimaryExpression	0		5626134	0					
ANR	5626155	Argument	y0		5626134	3					
ANR	5626156	Identifier	y0		5626134	0					
ANR	5626157	Argument	y1		5626134	4					
ANR	5626158	Identifier	y1		5626134	0					
ANR	5626159	Argument	3		5626134	5					
ANR	5626160	PrimaryExpression	3		5626134	0					
ANR	5626161	ReturnType	int		5626134	1					
ANR	5626162	Identifier	t1_hinter__vstem		5626134	2					
ANR	5626163	ParameterList	"t1_hinter * self , fixed y0 , fixed y1"		5626134	3					
ANR	5626164	Parameter	t1_hinter * self	1489:21:60704:60719	5626134	0	True				
ANR	5626165	ParameterType	t1_hinter *		5626134	0					
ANR	5626166	Identifier	self		5626134	1					
ANR	5626167	Parameter	fixed y0	1489:39:60722:60729	5626134	1	True				
ANR	5626168	ParameterType	fixed		5626134	0					
ANR	5626169	Identifier	y0		5626134	1					
ANR	5626170	Parameter	fixed y1	1489:49:60732:60739	5626134	2	True				
ANR	5626171	ParameterType	fixed		5626134	0					
ANR	5626172	Identifier	y1		5626134	1					
ANR	5626173	CFGEntryNode	ENTRY		5626134		True				
ANR	5626174	CFGExitNode	EXIT		5626134		True				
ANR	5626175	Symbol	* self		5626134						
ANR	5626176	Symbol	y0		5626134						
ANR	5626177	Symbol	y1		5626134						
ANR	5626178	Symbol	self		5626134						
ANR	5626179	Symbol	vstem		5626134						
ANR	5626180	Symbol	t1_hinter__stem		5626134						
ANR	5626181	Symbol	self -> disable_hinting		5626134						
ANR	5626182	Function	t1_hinter__hstem3	1495:0:60849:61256							
ANR	5626183	FunctionDef	"t1_hinter__hstem3 (t1_hinter * self , fixed x0 , fixed x1 , fixed x2 , fixed x3 , fixed x4 , fixed x5)"		5626182	0					
ANR	5626184	CompoundStatement		1496:0:60949:61256	5626182	0					
ANR	5626185	IdentifierDeclStatement	int code ;	1496:3:60953:60961	5626182	0	True				
ANR	5626186	IdentifierDecl	code		5626182	0					
ANR	5626187	IdentifierDeclType	int		5626182	0					
ANR	5626188	Identifier	code		5626182	1					
ANR	5626189	IfStatement	if ( self -> disable_hinting )		5626182	1					
ANR	5626190	Condition	self -> disable_hinting	1498:8:60972:60992	5626182	0	True				
ANR	5626191	PtrMemberAccess	self -> disable_hinting		5626182	0					
ANR	5626192	Identifier	self		5626182	0					
ANR	5626193	Identifier	disable_hinting		5626182	1					
ANR	5626194	ReturnStatement	return 0 ;	1499:8:61003:61011	5626182	1	True				
ANR	5626195	PrimaryExpression	0		5626182	0					
ANR	5626196	ExpressionStatement	"code = t1_hinter__stem ( self , hstem , 1 , x0 , x1 , 3 )"	1500:4:61017:61066	5626182	2	True				
ANR	5626197	AssignmentExpression	"code = t1_hinter__stem ( self , hstem , 1 , x0 , x1 , 3 )"		5626182	0		=			
ANR	5626198	Identifier	code		5626182	0					
ANR	5626199	CallExpression	"t1_hinter__stem ( self , hstem , 1 , x0 , x1 , 3 )"		5626182	1					
ANR	5626200	Callee	t1_hinter__stem		5626182	0					
ANR	5626201	Identifier	t1_hinter__stem		5626182	0					
ANR	5626202	ArgumentList	self		5626182	1					
ANR	5626203	Argument	self		5626182	0					
ANR	5626204	Identifier	self		5626182	0					
ANR	5626205	Argument	hstem		5626182	1					
ANR	5626206	Identifier	hstem		5626182	0					
ANR	5626207	Argument	1		5626182	2					
ANR	5626208	PrimaryExpression	1		5626182	0					
ANR	5626209	Argument	x0		5626182	3					
ANR	5626210	Identifier	x0		5626182	0					
ANR	5626211	Argument	x1		5626182	4					
ANR	5626212	Identifier	x1		5626182	0					
ANR	5626213	Argument	3		5626182	5					
ANR	5626214	PrimaryExpression	3		5626182	0					
ANR	5626215	IfStatement	if ( code < 0 )		5626182	3					
ANR	5626216	Condition	code < 0	1501:8:61076:61083	5626182	0	True				
ANR	5626217	RelationalExpression	code < 0		5626182	0		<			
ANR	5626218	Identifier	code		5626182	0					
ANR	5626219	PrimaryExpression	0		5626182	1					
ANR	5626220	ReturnStatement	return code ;	1502:8:61094:61105	5626182	1	True				
ANR	5626221	Identifier	code		5626182	0					
ANR	5626222	ExpressionStatement	"code = t1_hinter__stem ( self , hstem , 2 , x2 , x3 , 3 )"	1503:4:61111:61160	5626182	4	True				
ANR	5626223	AssignmentExpression	"code = t1_hinter__stem ( self , hstem , 2 , x2 , x3 , 3 )"		5626182	0		=			
ANR	5626224	Identifier	code		5626182	0					
ANR	5626225	CallExpression	"t1_hinter__stem ( self , hstem , 2 , x2 , x3 , 3 )"		5626182	1					
ANR	5626226	Callee	t1_hinter__stem		5626182	0					
ANR	5626227	Identifier	t1_hinter__stem		5626182	0					
ANR	5626228	ArgumentList	self		5626182	1					
ANR	5626229	Argument	self		5626182	0					
ANR	5626230	Identifier	self		5626182	0					
ANR	5626231	Argument	hstem		5626182	1					
ANR	5626232	Identifier	hstem		5626182	0					
ANR	5626233	Argument	2		5626182	2					
ANR	5626234	PrimaryExpression	2		5626182	0					
ANR	5626235	Argument	x2		5626182	3					
ANR	5626236	Identifier	x2		5626182	0					
ANR	5626237	Argument	x3		5626182	4					
ANR	5626238	Identifier	x3		5626182	0					
ANR	5626239	Argument	3		5626182	5					
ANR	5626240	PrimaryExpression	3		5626182	0					
ANR	5626241	IfStatement	if ( code < 0 )		5626182	5					
ANR	5626242	Condition	code < 0	1504:8:61170:61177	5626182	0	True				
ANR	5626243	RelationalExpression	code < 0		5626182	0		<			
ANR	5626244	Identifier	code		5626182	0					
ANR	5626245	PrimaryExpression	0		5626182	1					
ANR	5626246	ReturnStatement	return code ;	1505:8:61188:61199	5626182	1	True				
ANR	5626247	Identifier	code		5626182	0					
ANR	5626248	ReturnStatement	"return t1_hinter__stem ( self , hstem , 3 , x4 , x5 , 3 ) ;"	1506:4:61205:61254	5626182	6	True				
ANR	5626249	CallExpression	"t1_hinter__stem ( self , hstem , 3 , x4 , x5 , 3 )"		5626182	0					
ANR	5626250	Callee	t1_hinter__stem		5626182	0					
ANR	5626251	Identifier	t1_hinter__stem		5626182	0					
ANR	5626252	ArgumentList	self		5626182	1					
ANR	5626253	Argument	self		5626182	0					
ANR	5626254	Identifier	self		5626182	0					
ANR	5626255	Argument	hstem		5626182	1					
ANR	5626256	Identifier	hstem		5626182	0					
ANR	5626257	Argument	3		5626182	2					
ANR	5626258	PrimaryExpression	3		5626182	0					
ANR	5626259	Argument	x4		5626182	3					
ANR	5626260	Identifier	x4		5626182	0					
ANR	5626261	Argument	x5		5626182	4					
ANR	5626262	Identifier	x5		5626182	0					
ANR	5626263	Argument	3		5626182	5					
ANR	5626264	PrimaryExpression	3		5626182	0					
ANR	5626265	ReturnType	int		5626182	1					
ANR	5626266	Identifier	t1_hinter__hstem3		5626182	2					
ANR	5626267	ParameterList	"t1_hinter * self , fixed x0 , fixed x1 , fixed x2 , fixed x3 , fixed x4 , fixed x5"		5626182	3					
ANR	5626268	Parameter	t1_hinter * self	1495:22:60871:60886	5626182	0	True				
ANR	5626269	ParameterType	t1_hinter *		5626182	0					
ANR	5626270	Identifier	self		5626182	1					
ANR	5626271	Parameter	fixed x0	1495:40:60889:60896	5626182	1	True				
ANR	5626272	ParameterType	fixed		5626182	0					
ANR	5626273	Identifier	x0		5626182	1					
ANR	5626274	Parameter	fixed x1	1495:50:60899:60906	5626182	2	True				
ANR	5626275	ParameterType	fixed		5626182	0					
ANR	5626276	Identifier	x1		5626182	1					
ANR	5626277	Parameter	fixed x2	1495:60:60909:60916	5626182	3	True				
ANR	5626278	ParameterType	fixed		5626182	0					
ANR	5626279	Identifier	x2		5626182	1					
ANR	5626280	Parameter	fixed x3	1495:70:60919:60926	5626182	4	True				
ANR	5626281	ParameterType	fixed		5626182	0					
ANR	5626282	Identifier	x3		5626182	1					
ANR	5626283	Parameter	fixed x4	1495:80:60929:60936	5626182	5	True				
ANR	5626284	ParameterType	fixed		5626182	0					
ANR	5626285	Identifier	x4		5626182	1					
ANR	5626286	Parameter	fixed x5	1495:90:60939:60946	5626182	6	True				
ANR	5626287	ParameterType	fixed		5626182	0					
ANR	5626288	Identifier	x5		5626182	1					
ANR	5626289	CFGEntryNode	ENTRY		5626182		True				
ANR	5626290	CFGExitNode	EXIT		5626182		True				
ANR	5626291	Symbol	code		5626182						
ANR	5626292	Symbol	* self		5626182						
ANR	5626293	Symbol	x0		5626182						
ANR	5626294	Symbol	self		5626182						
ANR	5626295	Symbol	x1		5626182						
ANR	5626296	Symbol	x2		5626182						
ANR	5626297	Symbol	x3		5626182						
ANR	5626298	Symbol	x4		5626182						
ANR	5626299	Symbol	x5		5626182						
ANR	5626300	Symbol	t1_hinter__stem		5626182						
ANR	5626301	Symbol	self -> disable_hinting		5626182						
ANR	5626302	Symbol	hstem		5626182						
ANR	5626303	Function	t1_hinter__vstem3	1509:0:61259:61666							
ANR	5626304	FunctionDef	"t1_hinter__vstem3 (t1_hinter * self , fixed y0 , fixed y1 , fixed y2 , fixed y3 , fixed y4 , fixed y5)"		5626303	0					
ANR	5626305	CompoundStatement		1510:0:61359:61666	5626303	0					
ANR	5626306	IdentifierDeclStatement	int code ;	1510:3:61363:61371	5626303	0	True				
ANR	5626307	IdentifierDecl	code		5626303	0					
ANR	5626308	IdentifierDeclType	int		5626303	0					
ANR	5626309	Identifier	code		5626303	1					
ANR	5626310	IfStatement	if ( self -> disable_hinting )		5626303	1					
ANR	5626311	Condition	self -> disable_hinting	1512:8:61382:61402	5626303	0	True				
ANR	5626312	PtrMemberAccess	self -> disable_hinting		5626303	0					
ANR	5626313	Identifier	self		5626303	0					
ANR	5626314	Identifier	disable_hinting		5626303	1					
ANR	5626315	ReturnStatement	return 0 ;	1513:8:61413:61421	5626303	1	True				
ANR	5626316	PrimaryExpression	0		5626303	0					
ANR	5626317	ExpressionStatement	"code = t1_hinter__stem ( self , vstem , 1 , y0 , y1 , 3 )"	1514:4:61427:61476	5626303	2	True				
ANR	5626318	AssignmentExpression	"code = t1_hinter__stem ( self , vstem , 1 , y0 , y1 , 3 )"		5626303	0		=			
ANR	5626319	Identifier	code		5626303	0					
ANR	5626320	CallExpression	"t1_hinter__stem ( self , vstem , 1 , y0 , y1 , 3 )"		5626303	1					
ANR	5626321	Callee	t1_hinter__stem		5626303	0					
ANR	5626322	Identifier	t1_hinter__stem		5626303	0					
ANR	5626323	ArgumentList	self		5626303	1					
ANR	5626324	Argument	self		5626303	0					
ANR	5626325	Identifier	self		5626303	0					
ANR	5626326	Argument	vstem		5626303	1					
ANR	5626327	Identifier	vstem		5626303	0					
ANR	5626328	Argument	1		5626303	2					
ANR	5626329	PrimaryExpression	1		5626303	0					
ANR	5626330	Argument	y0		5626303	3					
ANR	5626331	Identifier	y0		5626303	0					
ANR	5626332	Argument	y1		5626303	4					
ANR	5626333	Identifier	y1		5626303	0					
ANR	5626334	Argument	3		5626303	5					
ANR	5626335	PrimaryExpression	3		5626303	0					
ANR	5626336	IfStatement	if ( code < 0 )		5626303	3					
ANR	5626337	Condition	code < 0	1515:8:61486:61493	5626303	0	True				
ANR	5626338	RelationalExpression	code < 0		5626303	0		<			
ANR	5626339	Identifier	code		5626303	0					
ANR	5626340	PrimaryExpression	0		5626303	1					
ANR	5626341	ReturnStatement	return code ;	1516:8:61504:61515	5626303	1	True				
ANR	5626342	Identifier	code		5626303	0					
ANR	5626343	ExpressionStatement	"code = t1_hinter__stem ( self , vstem , 2 , y2 , y3 , 3 )"	1517:4:61521:61570	5626303	4	True				
ANR	5626344	AssignmentExpression	"code = t1_hinter__stem ( self , vstem , 2 , y2 , y3 , 3 )"		5626303	0		=			
ANR	5626345	Identifier	code		5626303	0					
ANR	5626346	CallExpression	"t1_hinter__stem ( self , vstem , 2 , y2 , y3 , 3 )"		5626303	1					
ANR	5626347	Callee	t1_hinter__stem		5626303	0					
ANR	5626348	Identifier	t1_hinter__stem		5626303	0					
ANR	5626349	ArgumentList	self		5626303	1					
ANR	5626350	Argument	self		5626303	0					
ANR	5626351	Identifier	self		5626303	0					
ANR	5626352	Argument	vstem		5626303	1					
ANR	5626353	Identifier	vstem		5626303	0					
ANR	5626354	Argument	2		5626303	2					
ANR	5626355	PrimaryExpression	2		5626303	0					
ANR	5626356	Argument	y2		5626303	3					
ANR	5626357	Identifier	y2		5626303	0					
ANR	5626358	Argument	y3		5626303	4					
ANR	5626359	Identifier	y3		5626303	0					
ANR	5626360	Argument	3		5626303	5					
ANR	5626361	PrimaryExpression	3		5626303	0					
ANR	5626362	IfStatement	if ( code < 0 )		5626303	5					
ANR	5626363	Condition	code < 0	1518:8:61580:61587	5626303	0	True				
ANR	5626364	RelationalExpression	code < 0		5626303	0		<			
ANR	5626365	Identifier	code		5626303	0					
ANR	5626366	PrimaryExpression	0		5626303	1					
ANR	5626367	ReturnStatement	return code ;	1519:8:61598:61609	5626303	1	True				
ANR	5626368	Identifier	code		5626303	0					
ANR	5626369	ReturnStatement	"return t1_hinter__stem ( self , vstem , 3 , y4 , y5 , 3 ) ;"	1520:4:61615:61664	5626303	6	True				
ANR	5626370	CallExpression	"t1_hinter__stem ( self , vstem , 3 , y4 , y5 , 3 )"		5626303	0					
ANR	5626371	Callee	t1_hinter__stem		5626303	0					
ANR	5626372	Identifier	t1_hinter__stem		5626303	0					
ANR	5626373	ArgumentList	self		5626303	1					
ANR	5626374	Argument	self		5626303	0					
ANR	5626375	Identifier	self		5626303	0					
ANR	5626376	Argument	vstem		5626303	1					
ANR	5626377	Identifier	vstem		5626303	0					
ANR	5626378	Argument	3		5626303	2					
ANR	5626379	PrimaryExpression	3		5626303	0					
ANR	5626380	Argument	y4		5626303	3					
ANR	5626381	Identifier	y4		5626303	0					
ANR	5626382	Argument	y5		5626303	4					
ANR	5626383	Identifier	y5		5626303	0					
ANR	5626384	Argument	3		5626303	5					
ANR	5626385	PrimaryExpression	3		5626303	0					
ANR	5626386	ReturnType	int		5626303	1					
ANR	5626387	Identifier	t1_hinter__vstem3		5626303	2					
ANR	5626388	ParameterList	"t1_hinter * self , fixed y0 , fixed y1 , fixed y2 , fixed y3 , fixed y4 , fixed y5"		5626303	3					
ANR	5626389	Parameter	t1_hinter * self	1509:22:61281:61296	5626303	0	True				
ANR	5626390	ParameterType	t1_hinter *		5626303	0					
ANR	5626391	Identifier	self		5626303	1					
ANR	5626392	Parameter	fixed y0	1509:40:61299:61306	5626303	1	True				
ANR	5626393	ParameterType	fixed		5626303	0					
ANR	5626394	Identifier	y0		5626303	1					
ANR	5626395	Parameter	fixed y1	1509:50:61309:61316	5626303	2	True				
ANR	5626396	ParameterType	fixed		5626303	0					
ANR	5626397	Identifier	y1		5626303	1					
ANR	5626398	Parameter	fixed y2	1509:60:61319:61326	5626303	3	True				
ANR	5626399	ParameterType	fixed		5626303	0					
ANR	5626400	Identifier	y2		5626303	1					
ANR	5626401	Parameter	fixed y3	1509:70:61329:61336	5626303	4	True				
ANR	5626402	ParameterType	fixed		5626303	0					
ANR	5626403	Identifier	y3		5626303	1					
ANR	5626404	Parameter	fixed y4	1509:80:61339:61346	5626303	5	True				
ANR	5626405	ParameterType	fixed		5626303	0					
ANR	5626406	Identifier	y4		5626303	1					
ANR	5626407	Parameter	fixed y5	1509:90:61349:61356	5626303	6	True				
ANR	5626408	ParameterType	fixed		5626303	0					
ANR	5626409	Identifier	y5		5626303	1					
ANR	5626410	CFGEntryNode	ENTRY		5626303		True				
ANR	5626411	CFGExitNode	EXIT		5626303		True				
ANR	5626412	Symbol	code		5626303						
ANR	5626413	Symbol	* self		5626303						
ANR	5626414	Symbol	y0		5626303						
ANR	5626415	Symbol	y1		5626303						
ANR	5626416	Symbol	self		5626303						
ANR	5626417	Symbol	y2		5626303						
ANR	5626418	Symbol	y3		5626303						
ANR	5626419	Symbol	y4		5626303						
ANR	5626420	Symbol	vstem		5626303						
ANR	5626421	Symbol	y5		5626303						
ANR	5626422	Symbol	t1_hinter__stem		5626303						
ANR	5626423	Symbol	self -> disable_hinting		5626303						
ANR	5626424	Function	t1_hinter__is_x_fitting	1525:0:61756:61831							
ANR	5626425	FunctionDef	t1_hinter__is_x_fitting (t1_hinter * self)		5626424	0					
ANR	5626426	CompoundStatement		1526:0:61802:61831	5626424	0					
ANR	5626427	ReturnStatement	return self -> grid_fit_x ;	1526:3:61806:61829	5626424	0	True				
ANR	5626428	PtrMemberAccess	self -> grid_fit_x		5626424	0					
ANR	5626429	Identifier	self		5626424	0					
ANR	5626430	Identifier	grid_fit_x		5626424	1					
ANR	5626431	ReturnType	int		5626424	1					
ANR	5626432	Identifier	t1_hinter__is_x_fitting		5626424	2					
ANR	5626433	ParameterList	t1_hinter * self		5626424	3					
ANR	5626434	Parameter	t1_hinter * self	1525:28:61784:61799	5626424	0	True				
ANR	5626435	ParameterType	t1_hinter *		5626424	0					
ANR	5626436	Identifier	self		5626424	1					
ANR	5626437	CFGEntryNode	ENTRY		5626424		True				
ANR	5626438	CFGExitNode	EXIT		5626424		True				
ANR	5626439	Symbol	self -> grid_fit_x		5626424						
ANR	5626440	Symbol	* self		5626424						
ANR	5626441	Symbol	self		5626424						
ANR	5626442	Function	t1_hinter__segment_beg	1531:0:61921:62394							
ANR	5626443	FunctionDef	"t1_hinter__segment_beg (t1_hinter * self , int pole_index)"		5626442	0					
ANR	5626444	CompoundStatement		1532:0:61996:62394	5626442	0					
ANR	5626445	IdentifierDeclStatement	int contour_index = self -> pole [ pole_index ] . contour_index ;	1532:3:62000:62056	5626442	0	True				
ANR	5626446	IdentifierDecl	contour_index = self -> pole [ pole_index ] . contour_index		5626442	0					
ANR	5626447	IdentifierDeclType	int		5626442	0					
ANR	5626448	Identifier	contour_index		5626442	1					
ANR	5626449	AssignmentExpression	contour_index = self -> pole [ pole_index ] . contour_index		5626442	2		=			
ANR	5626450	Identifier	contour_index		5626442	0					
ANR	5626451	MemberAccess	self -> pole [ pole_index ] . contour_index		5626442	1					
ANR	5626452	ArrayIndexing	self -> pole [ pole_index ]		5626442	0					
ANR	5626453	PtrMemberAccess	self -> pole		5626442	0					
ANR	5626454	Identifier	self		5626442	0					
ANR	5626455	Identifier	pole		5626442	1					
ANR	5626456	Identifier	pole_index		5626442	1					
ANR	5626457	Identifier	contour_index		5626442	1					
ANR	5626458	IdentifierDeclStatement	int beg_contour_pole = self -> contour [ contour_index ] ;	1533:4:62062:62113	5626442	1	True				
ANR	5626459	IdentifierDecl	beg_contour_pole = self -> contour [ contour_index ]		5626442	0					
ANR	5626460	IdentifierDeclType	int		5626442	0					
ANR	5626461	Identifier	beg_contour_pole		5626442	1					
ANR	5626462	AssignmentExpression	beg_contour_pole = self -> contour [ contour_index ]		5626442	2		=			
ANR	5626463	Identifier	beg_contour_pole		5626442	0					
ANR	5626464	ArrayIndexing	self -> contour [ contour_index ]		5626442	1					
ANR	5626465	PtrMemberAccess	self -> contour		5626442	0					
ANR	5626466	Identifier	self		5626442	0					
ANR	5626467	Identifier	contour		5626442	1					
ANR	5626468	Identifier	contour_index		5626442	1					
ANR	5626469	IdentifierDeclStatement	int end_contour_pole = self -> contour [ contour_index + 1 ] - 2 ;	1534:4:62119:62178	5626442	2	True				
ANR	5626470	IdentifierDecl	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		5626442	0					
ANR	5626471	IdentifierDeclType	int		5626442	0					
ANR	5626472	Identifier	end_contour_pole		5626442	1					
ANR	5626473	AssignmentExpression	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		5626442	2		=			
ANR	5626474	Identifier	end_contour_pole		5626442	0					
ANR	5626475	AdditiveExpression	self -> contour [ contour_index + 1 ] - 2		5626442	1		-			
ANR	5626476	ArrayIndexing	self -> contour [ contour_index + 1 ]		5626442	0					
ANR	5626477	PtrMemberAccess	self -> contour		5626442	0					
ANR	5626478	Identifier	self		5626442	0					
ANR	5626479	Identifier	contour		5626442	1					
ANR	5626480	AdditiveExpression	contour_index + 1		5626442	1		+			
ANR	5626481	Identifier	contour_index		5626442	0					
ANR	5626482	PrimaryExpression	1		5626442	1					
ANR	5626483	PrimaryExpression	2		5626442	1					
ANR	5626484	IdentifierDeclStatement	"int prev = ranger_step_b ( pole_index , beg_contour_pole , end_contour_pole ) ;"	1535:4:62184:62256	5626442	3	True				
ANR	5626485	IdentifierDecl	"prev = ranger_step_b ( pole_index , beg_contour_pole , end_contour_pole )"		5626442	0					
ANR	5626486	IdentifierDeclType	int		5626442	0					
ANR	5626487	Identifier	prev		5626442	1					
ANR	5626488	AssignmentExpression	"prev = ranger_step_b ( pole_index , beg_contour_pole , end_contour_pole )"		5626442	2		=			
ANR	5626489	Identifier	prev		5626442	0					
ANR	5626490	CallExpression	"ranger_step_b ( pole_index , beg_contour_pole , end_contour_pole )"		5626442	1					
ANR	5626491	Callee	ranger_step_b		5626442	0					
ANR	5626492	Identifier	ranger_step_b		5626442	0					
ANR	5626493	ArgumentList	pole_index		5626442	1					
ANR	5626494	Argument	pole_index		5626442	0					
ANR	5626495	Identifier	pole_index		5626442	0					
ANR	5626496	Argument	beg_contour_pole		5626442	1					
ANR	5626497	Identifier	beg_contour_pole		5626442	0					
ANR	5626498	Argument	end_contour_pole		5626442	2					
ANR	5626499	Identifier	end_contour_pole		5626442	0					
ANR	5626500	WhileStatement	while ( self -> pole [ prev ] . type == offcurve )		5626442	4					
ANR	5626501	Condition	self -> pole [ prev ] . type == offcurve	1537:11:62270:62302	5626442	0	True				
ANR	5626502	EqualityExpression	self -> pole [ prev ] . type == offcurve		5626442	0		==			
ANR	5626503	MemberAccess	self -> pole [ prev ] . type		5626442	0					
ANR	5626504	ArrayIndexing	self -> pole [ prev ]		5626442	0					
ANR	5626505	PtrMemberAccess	self -> pole		5626442	0					
ANR	5626506	Identifier	self		5626442	0					
ANR	5626507	Identifier	pole		5626442	1					
ANR	5626508	Identifier	prev		5626442	1					
ANR	5626509	Identifier	type		5626442	1					
ANR	5626510	Identifier	offcurve		5626442	1					
ANR	5626511	ExpressionStatement	"prev = ranger_step_b ( prev , beg_contour_pole , end_contour_pole )"	1538:8:62313:62375	5626442	1	True				
ANR	5626512	AssignmentExpression	"prev = ranger_step_b ( prev , beg_contour_pole , end_contour_pole )"		5626442	0		=			
ANR	5626513	Identifier	prev		5626442	0					
ANR	5626514	CallExpression	"ranger_step_b ( prev , beg_contour_pole , end_contour_pole )"		5626442	1					
ANR	5626515	Callee	ranger_step_b		5626442	0					
ANR	5626516	Identifier	ranger_step_b		5626442	0					
ANR	5626517	ArgumentList	prev		5626442	1					
ANR	5626518	Argument	prev		5626442	0					
ANR	5626519	Identifier	prev		5626442	0					
ANR	5626520	Argument	beg_contour_pole		5626442	1					
ANR	5626521	Identifier	beg_contour_pole		5626442	0					
ANR	5626522	Argument	end_contour_pole		5626442	2					
ANR	5626523	Identifier	end_contour_pole		5626442	0					
ANR	5626524	ReturnStatement	return prev ;	1539:4:62381:62392	5626442	5	True				
ANR	5626525	Identifier	prev		5626442	0					
ANR	5626526	ReturnType	static inline int		5626442	1					
ANR	5626527	Identifier	t1_hinter__segment_beg		5626442	2					
ANR	5626528	ParameterList	"t1_hinter * self , int pole_index"		5626442	3					
ANR	5626529	Parameter	t1_hinter * self	1531:41:61962:61977	5626442	0	True				
ANR	5626530	ParameterType	t1_hinter *		5626442	0					
ANR	5626531	Identifier	self		5626442	1					
ANR	5626532	Parameter	int pole_index	1531:59:61980:61993	5626442	1	True				
ANR	5626533	ParameterType	int		5626442	0					
ANR	5626534	Identifier	pole_index		5626442	1					
ANR	5626535	CFGEntryNode	ENTRY		5626442		True				
ANR	5626536	CFGExitNode	EXIT		5626442		True				
ANR	5626537	Symbol	* self -> contour		5626442						
ANR	5626538	Symbol	self -> pole [ prev ] . type		5626442						
ANR	5626539	Symbol	self -> pole [ pole_index ] . contour_index		5626442						
ANR	5626540	Symbol	* self -> pole		5626442						
ANR	5626541	Symbol	* * self		5626442						
ANR	5626542	Symbol	* self		5626442						
ANR	5626543	Symbol	ranger_step_b		5626442						
ANR	5626544	Symbol	prev		5626442						
ANR	5626545	Symbol	* prev		5626442						
ANR	5626546	Symbol	self -> contour		5626442						
ANR	5626547	Symbol	pole_index		5626442						
ANR	5626548	Symbol	* pole_index		5626442						
ANR	5626549	Symbol	end_contour_pole		5626442						
ANR	5626550	Symbol	offcurve		5626442						
ANR	5626551	Symbol	self		5626442						
ANR	5626552	Symbol	self -> pole		5626442						
ANR	5626553	Symbol	contour_index		5626442						
ANR	5626554	Symbol	beg_contour_pole		5626442						
ANR	5626555	Symbol	* contour_index		5626442						
ANR	5626556	Function	t1_hinter__segment_end	1542:0:62397:62870							
ANR	5626557	FunctionDef	"t1_hinter__segment_end (t1_hinter * self , int pole_index)"		5626556	0					
ANR	5626558	CompoundStatement		1543:0:62472:62870	5626556	0					
ANR	5626559	IdentifierDeclStatement	int contour_index = self -> pole [ pole_index ] . contour_index ;	1543:3:62476:62532	5626556	0	True				
ANR	5626560	IdentifierDecl	contour_index = self -> pole [ pole_index ] . contour_index		5626556	0					
ANR	5626561	IdentifierDeclType	int		5626556	0					
ANR	5626562	Identifier	contour_index		5626556	1					
ANR	5626563	AssignmentExpression	contour_index = self -> pole [ pole_index ] . contour_index		5626556	2		=			
ANR	5626564	Identifier	contour_index		5626556	0					
ANR	5626565	MemberAccess	self -> pole [ pole_index ] . contour_index		5626556	1					
ANR	5626566	ArrayIndexing	self -> pole [ pole_index ]		5626556	0					
ANR	5626567	PtrMemberAccess	self -> pole		5626556	0					
ANR	5626568	Identifier	self		5626556	0					
ANR	5626569	Identifier	pole		5626556	1					
ANR	5626570	Identifier	pole_index		5626556	1					
ANR	5626571	Identifier	contour_index		5626556	1					
ANR	5626572	IdentifierDeclStatement	int beg_contour_pole = self -> contour [ contour_index ] ;	1544:4:62538:62589	5626556	1	True				
ANR	5626573	IdentifierDecl	beg_contour_pole = self -> contour [ contour_index ]		5626556	0					
ANR	5626574	IdentifierDeclType	int		5626556	0					
ANR	5626575	Identifier	beg_contour_pole		5626556	1					
ANR	5626576	AssignmentExpression	beg_contour_pole = self -> contour [ contour_index ]		5626556	2		=			
ANR	5626577	Identifier	beg_contour_pole		5626556	0					
ANR	5626578	ArrayIndexing	self -> contour [ contour_index ]		5626556	1					
ANR	5626579	PtrMemberAccess	self -> contour		5626556	0					
ANR	5626580	Identifier	self		5626556	0					
ANR	5626581	Identifier	contour		5626556	1					
ANR	5626582	Identifier	contour_index		5626556	1					
ANR	5626583	IdentifierDeclStatement	int end_contour_pole = self -> contour [ contour_index + 1 ] - 2 ;	1545:4:62595:62654	5626556	2	True				
ANR	5626584	IdentifierDecl	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		5626556	0					
ANR	5626585	IdentifierDeclType	int		5626556	0					
ANR	5626586	Identifier	end_contour_pole		5626556	1					
ANR	5626587	AssignmentExpression	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		5626556	2		=			
ANR	5626588	Identifier	end_contour_pole		5626556	0					
ANR	5626589	AdditiveExpression	self -> contour [ contour_index + 1 ] - 2		5626556	1		-			
ANR	5626590	ArrayIndexing	self -> contour [ contour_index + 1 ]		5626556	0					
ANR	5626591	PtrMemberAccess	self -> contour		5626556	0					
ANR	5626592	Identifier	self		5626556	0					
ANR	5626593	Identifier	contour		5626556	1					
ANR	5626594	AdditiveExpression	contour_index + 1		5626556	1		+			
ANR	5626595	Identifier	contour_index		5626556	0					
ANR	5626596	PrimaryExpression	1		5626556	1					
ANR	5626597	PrimaryExpression	2		5626556	1					
ANR	5626598	IdentifierDeclStatement	"int next = ranger_step_f ( pole_index , beg_contour_pole , end_contour_pole ) ;"	1546:4:62660:62732	5626556	3	True				
ANR	5626599	IdentifierDecl	"next = ranger_step_f ( pole_index , beg_contour_pole , end_contour_pole )"		5626556	0					
ANR	5626600	IdentifierDeclType	int		5626556	0					
ANR	5626601	Identifier	next		5626556	1					
ANR	5626602	AssignmentExpression	"next = ranger_step_f ( pole_index , beg_contour_pole , end_contour_pole )"		5626556	2		=			
ANR	5626603	Identifier	next		5626556	0					
ANR	5626604	CallExpression	"ranger_step_f ( pole_index , beg_contour_pole , end_contour_pole )"		5626556	1					
ANR	5626605	Callee	ranger_step_f		5626556	0					
ANR	5626606	Identifier	ranger_step_f		5626556	0					
ANR	5626607	ArgumentList	pole_index		5626556	1					
ANR	5626608	Argument	pole_index		5626556	0					
ANR	5626609	Identifier	pole_index		5626556	0					
ANR	5626610	Argument	beg_contour_pole		5626556	1					
ANR	5626611	Identifier	beg_contour_pole		5626556	0					
ANR	5626612	Argument	end_contour_pole		5626556	2					
ANR	5626613	Identifier	end_contour_pole		5626556	0					
ANR	5626614	WhileStatement	while ( self -> pole [ next ] . type == offcurve )		5626556	4					
ANR	5626615	Condition	self -> pole [ next ] . type == offcurve	1548:11:62746:62778	5626556	0	True				
ANR	5626616	EqualityExpression	self -> pole [ next ] . type == offcurve		5626556	0		==			
ANR	5626617	MemberAccess	self -> pole [ next ] . type		5626556	0					
ANR	5626618	ArrayIndexing	self -> pole [ next ]		5626556	0					
ANR	5626619	PtrMemberAccess	self -> pole		5626556	0					
ANR	5626620	Identifier	self		5626556	0					
ANR	5626621	Identifier	pole		5626556	1					
ANR	5626622	Identifier	next		5626556	1					
ANR	5626623	Identifier	type		5626556	1					
ANR	5626624	Identifier	offcurve		5626556	1					
ANR	5626625	ExpressionStatement	"next = ranger_step_f ( next , beg_contour_pole , end_contour_pole )"	1549:8:62789:62851	5626556	1	True				
ANR	5626626	AssignmentExpression	"next = ranger_step_f ( next , beg_contour_pole , end_contour_pole )"		5626556	0		=			
ANR	5626627	Identifier	next		5626556	0					
ANR	5626628	CallExpression	"ranger_step_f ( next , beg_contour_pole , end_contour_pole )"		5626556	1					
ANR	5626629	Callee	ranger_step_f		5626556	0					
ANR	5626630	Identifier	ranger_step_f		5626556	0					
ANR	5626631	ArgumentList	next		5626556	1					
ANR	5626632	Argument	next		5626556	0					
ANR	5626633	Identifier	next		5626556	0					
ANR	5626634	Argument	beg_contour_pole		5626556	1					
ANR	5626635	Identifier	beg_contour_pole		5626556	0					
ANR	5626636	Argument	end_contour_pole		5626556	2					
ANR	5626637	Identifier	end_contour_pole		5626556	0					
ANR	5626638	ReturnStatement	return next ;	1550:4:62857:62868	5626556	5	True				
ANR	5626639	Identifier	next		5626556	0					
ANR	5626640	ReturnType	static inline int		5626556	1					
ANR	5626641	Identifier	t1_hinter__segment_end		5626556	2					
ANR	5626642	ParameterList	"t1_hinter * self , int pole_index"		5626556	3					
ANR	5626643	Parameter	t1_hinter * self	1542:41:62438:62453	5626556	0	True				
ANR	5626644	ParameterType	t1_hinter *		5626556	0					
ANR	5626645	Identifier	self		5626556	1					
ANR	5626646	Parameter	int pole_index	1542:59:62456:62469	5626556	1	True				
ANR	5626647	ParameterType	int		5626556	0					
ANR	5626648	Identifier	pole_index		5626556	1					
ANR	5626649	CFGEntryNode	ENTRY		5626556		True				
ANR	5626650	CFGExitNode	EXIT		5626556		True				
ANR	5626651	Symbol	* self -> contour		5626556						
ANR	5626652	Symbol	next		5626556						
ANR	5626653	Symbol	ranger_step_f		5626556						
ANR	5626654	Symbol	self -> pole [ pole_index ] . contour_index		5626556						
ANR	5626655	Symbol	* self -> pole		5626556						
ANR	5626656	Symbol	* * self		5626556						
ANR	5626657	Symbol	* self		5626556						
ANR	5626658	Symbol	* next		5626556						
ANR	5626659	Symbol	self -> pole [ next ] . type		5626556						
ANR	5626660	Symbol	self -> contour		5626556						
ANR	5626661	Symbol	pole_index		5626556						
ANR	5626662	Symbol	* pole_index		5626556						
ANR	5626663	Symbol	end_contour_pole		5626556						
ANR	5626664	Symbol	offcurve		5626556						
ANR	5626665	Symbol	self		5626556						
ANR	5626666	Symbol	self -> pole		5626556						
ANR	5626667	Symbol	contour_index		5626556						
ANR	5626668	Symbol	beg_contour_pole		5626556						
ANR	5626669	Symbol	* contour_index		5626556						
ANR	5626670	Function	t1_hinter__compute_y_span	1553:0:62873:63628							
ANR	5626671	FunctionDef	t1_hinter__compute_y_span (t1_hinter * self)		5626670	0					
ANR	5626672	CompoundStatement		1554:0:62929:63628	5626670	0					
ANR	5626673	IdentifierDeclStatement	int n = self -> pole_count - 1 ;	1555:4:62935:62963	5626670	0	True				
ANR	5626674	IdentifierDecl	n = self -> pole_count - 1		5626670	0					
ANR	5626675	IdentifierDeclType	int		5626670	0					
ANR	5626676	Identifier	n		5626670	1					
ANR	5626677	AssignmentExpression	n = self -> pole_count - 1		5626670	2		=			
ANR	5626678	Identifier	n		5626670	0					
ANR	5626679	AdditiveExpression	self -> pole_count - 1		5626670	1		-			
ANR	5626680	PtrMemberAccess	self -> pole_count		5626670	0					
ANR	5626681	Identifier	self		5626670	0					
ANR	5626682	Identifier	pole_count		5626670	1					
ANR	5626683	PrimaryExpression	1		5626670	1					
ANR	5626684	IdentifierDeclStatement	int i ;	1556:4:62969:62974	5626670	1	True				
ANR	5626685	IdentifierDecl	i		5626670	0					
ANR	5626686	IdentifierDeclType	int		5626670	0					
ANR	5626687	Identifier	i		5626670	1					
ANR	5626688	IfStatement	if ( n > 1 )		5626670	2					
ANR	5626689	Condition	n > 1	1558:8:62985:62989	5626670	0	True				
ANR	5626690	RelationalExpression	n > 1		5626670	0		>			
ANR	5626691	Identifier	n		5626670	0					
ANR	5626692	PrimaryExpression	1		5626670	1					
ANR	5626693	CompoundStatement		5:15:62:62	5626670	1					
ANR	5626694	ExpressionStatement	n --	1564:8:63255:63258	5626670	0	True				
ANR	5626695	PostIncDecOperationExpression	n --		5626670	0					
ANR	5626696	Identifier	n		5626670	0					
ANR	5626697	IncDec	--		5626670	1					
ANR	5626698	ElseStatement	else		5626670	0					
ANR	5626699	IfStatement	if ( n < 0 )		5626670	0					
ANR	5626700	Condition	n < 0	1565:15:63275:63279	5626670	0	True				
ANR	5626701	RelationalExpression	n < 0		5626670	0		<			
ANR	5626702	Identifier	n		5626670	0					
ANR	5626703	PrimaryExpression	0		5626670	1					
ANR	5626704	CompoundStatement		12:22:352:352	5626670	1					
ANR	5626705	ReturnStatement	return ;	1566:8:63292:63298	5626670	0	True				
ANR	5626706	ExpressionStatement	self -> ymin = self -> ymax = self -> pole [ 0 ] . gy	1568:4:63328:63370	5626670	3	True				
ANR	5626707	AssignmentExpression	self -> ymin = self -> ymax = self -> pole [ 0 ] . gy		5626670	0		=			
ANR	5626708	PtrMemberAccess	self -> ymin		5626670	0					
ANR	5626709	Identifier	self		5626670	0					
ANR	5626710	Identifier	ymin		5626670	1					
ANR	5626711	AssignmentExpression	self -> ymax = self -> pole [ 0 ] . gy		5626670	1		=			
ANR	5626712	PtrMemberAccess	self -> ymax		5626670	0					
ANR	5626713	Identifier	self		5626670	0					
ANR	5626714	Identifier	ymax		5626670	1					
ANR	5626715	MemberAccess	self -> pole [ 0 ] . gy		5626670	1					
ANR	5626716	ArrayIndexing	self -> pole [ 0 ]		5626670	0					
ANR	5626717	PtrMemberAccess	self -> pole		5626670	0					
ANR	5626718	Identifier	self		5626670	0					
ANR	5626719	Identifier	pole		5626670	1					
ANR	5626720	PrimaryExpression	0		5626670	1					
ANR	5626721	Identifier	gy		5626670	1					
ANR	5626722	ForStatement	for ( i = 1 ; i < n ; i ++ )		5626670	4					
ANR	5626723	ForInit	i = 1 ;	1569:9:63381:63386	5626670	0	True				
ANR	5626724	AssignmentExpression	i = 1		5626670	0		=			
ANR	5626725	Identifier	i		5626670	0					
ANR	5626726	PrimaryExpression	1		5626670	1					
ANR	5626727	Condition	i < n	1569:16:63388:63392	5626670	1	True				
ANR	5626728	RelationalExpression	i < n		5626670	0		<			
ANR	5626729	Identifier	i		5626670	0					
ANR	5626730	Identifier	n		5626670	1					
ANR	5626731	PostIncDecOperationExpression	i ++	1569:23:63395:63397	5626670	2	True				
ANR	5626732	Identifier	i		5626670	0					
ANR	5626733	IncDec	++		5626670	1					
ANR	5626734	CompoundStatement		16:28:470:470	5626670	3					
ANR	5626735	IfStatement	if ( self -> ymin > self -> pole [ i ] . gy )		5626670	0					
ANR	5626736	Condition	self -> ymin > self -> pole [ i ] . gy	1570:12:63414:63442	5626670	0	True				
ANR	5626737	RelationalExpression	self -> ymin > self -> pole [ i ] . gy		5626670	0		>			
ANR	5626738	PtrMemberAccess	self -> ymin		5626670	0					
ANR	5626739	Identifier	self		5626670	0					
ANR	5626740	Identifier	ymin		5626670	1					
ANR	5626741	MemberAccess	self -> pole [ i ] . gy		5626670	1					
ANR	5626742	ArrayIndexing	self -> pole [ i ]		5626670	0					
ANR	5626743	PtrMemberAccess	self -> pole		5626670	0					
ANR	5626744	Identifier	self		5626670	0					
ANR	5626745	Identifier	pole		5626670	1					
ANR	5626746	Identifier	i		5626670	1					
ANR	5626747	Identifier	gy		5626670	1					
ANR	5626748	ExpressionStatement	self -> ymin = self -> pole [ i ] . gy	1571:12:63457:63486	5626670	1	True				
ANR	5626749	AssignmentExpression	self -> ymin = self -> pole [ i ] . gy		5626670	0		=			
ANR	5626750	PtrMemberAccess	self -> ymin		5626670	0					
ANR	5626751	Identifier	self		5626670	0					
ANR	5626752	Identifier	ymin		5626670	1					
ANR	5626753	MemberAccess	self -> pole [ i ] . gy		5626670	1					
ANR	5626754	ArrayIndexing	self -> pole [ i ]		5626670	0					
ANR	5626755	PtrMemberAccess	self -> pole		5626670	0					
ANR	5626756	Identifier	self		5626670	0					
ANR	5626757	Identifier	pole		5626670	1					
ANR	5626758	Identifier	i		5626670	1					
ANR	5626759	Identifier	gy		5626670	1					
ANR	5626760	IfStatement	if ( self -> ymax < self -> pole [ i ] . gy )		5626670	1					
ANR	5626761	Condition	self -> ymax < self -> pole [ i ] . gy	1572:12:63500:63528	5626670	0	True				
ANR	5626762	RelationalExpression	self -> ymax < self -> pole [ i ] . gy		5626670	0		<			
ANR	5626763	PtrMemberAccess	self -> ymax		5626670	0					
ANR	5626764	Identifier	self		5626670	0					
ANR	5626765	Identifier	ymax		5626670	1					
ANR	5626766	MemberAccess	self -> pole [ i ] . gy		5626670	1					
ANR	5626767	ArrayIndexing	self -> pole [ i ]		5626670	0					
ANR	5626768	PtrMemberAccess	self -> pole		5626670	0					
ANR	5626769	Identifier	self		5626670	0					
ANR	5626770	Identifier	pole		5626670	1					
ANR	5626771	Identifier	i		5626670	1					
ANR	5626772	Identifier	gy		5626670	1					
ANR	5626773	ExpressionStatement	self -> ymax = self -> pole [ i ] . gy	1573:12:63543:63572	5626670	1	True				
ANR	5626774	AssignmentExpression	self -> ymax = self -> pole [ i ] . gy		5626670	0		=			
ANR	5626775	PtrMemberAccess	self -> ymax		5626670	0					
ANR	5626776	Identifier	self		5626670	0					
ANR	5626777	Identifier	ymax		5626670	1					
ANR	5626778	MemberAccess	self -> pole [ i ] . gy		5626670	1					
ANR	5626779	ArrayIndexing	self -> pole [ i ]		5626670	0					
ANR	5626780	PtrMemberAccess	self -> pole		5626670	0					
ANR	5626781	Identifier	self		5626670	0					
ANR	5626782	Identifier	pole		5626670	1					
ANR	5626783	Identifier	i		5626670	1					
ANR	5626784	Identifier	gy		5626670	1					
ANR	5626785	ExpressionStatement	self -> ymid = ( self -> ymax + self -> ymin ) / 2	1575:4:63584:63626	5626670	5	True				
ANR	5626786	AssignmentExpression	self -> ymid = ( self -> ymax + self -> ymin ) / 2		5626670	0		=			
ANR	5626787	PtrMemberAccess	self -> ymid		5626670	0					
ANR	5626788	Identifier	self		5626670	0					
ANR	5626789	Identifier	ymid		5626670	1					
ANR	5626790	MultiplicativeExpression	( self -> ymax + self -> ymin ) / 2		5626670	1		/			
ANR	5626791	AdditiveExpression	self -> ymax + self -> ymin		5626670	0		+			
ANR	5626792	PtrMemberAccess	self -> ymax		5626670	0					
ANR	5626793	Identifier	self		5626670	0					
ANR	5626794	Identifier	ymax		5626670	1					
ANR	5626795	PtrMemberAccess	self -> ymin		5626670	1					
ANR	5626796	Identifier	self		5626670	0					
ANR	5626797	Identifier	ymin		5626670	1					
ANR	5626798	PrimaryExpression	2		5626670	1					
ANR	5626799	ReturnType	static void		5626670	1					
ANR	5626800	Identifier	t1_hinter__compute_y_span		5626670	2					
ANR	5626801	ParameterList	t1_hinter * self		5626670	3					
ANR	5626802	Parameter	t1_hinter * self	1553:38:62911:62926	5626670	0	True				
ANR	5626803	ParameterType	t1_hinter *		5626670	0					
ANR	5626804	Identifier	self		5626670	1					
ANR	5626805	CFGEntryNode	ENTRY		5626670		True				
ANR	5626806	CFGExitNode	EXIT		5626670		True				
ANR	5626807	Symbol	self -> pole [ i ] . gy		5626670						
ANR	5626808	Symbol	* self -> pole		5626670						
ANR	5626809	Symbol	self -> pole_count		5626670						
ANR	5626810	Symbol	* * self		5626670						
ANR	5626811	Symbol	* self		5626670						
ANR	5626812	Symbol	self -> pole [ 0 ] . gy		5626670						
ANR	5626813	Symbol	self -> ymid		5626670						
ANR	5626814	Symbol	i		5626670						
ANR	5626815	Symbol	self -> ymax		5626670						
ANR	5626816	Symbol	n		5626670						
ANR	5626817	Symbol	* i		5626670						
ANR	5626818	Symbol	self		5626670						
ANR	5626819	Symbol	self -> ymin		5626670						
ANR	5626820	Symbol	self -> pole		5626670						
ANR	5626821	Function	t1_hinter__simplify_representation	1578:0:63631:66288							
ANR	5626822	FunctionDef	t1_hinter__simplify_representation (t1_hinter * self)		5626821	0					
ANR	5626823	CompoundStatement		1579:0:63696:66288	5626821	0					
ANR	5626824	IdentifierDeclStatement	"int i , j ;"	1579:3:63700:63708	5626821	0	True				
ANR	5626825	IdentifierDecl	i		5626821	0					
ANR	5626826	IdentifierDeclType	int		5626821	0					
ANR	5626827	Identifier	i		5626821	1					
ANR	5626828	IdentifierDecl	j		5626821	1					
ANR	5626829	IdentifierDeclType	int		5626821	0					
ANR	5626830	Identifier	j		5626821	1					
ANR	5626831	IdentifierDeclStatement	int last_pole = self -> pole_count - 1 ;	1580:4:63714:63750	5626821	1	True				
ANR	5626832	IdentifierDecl	last_pole = self -> pole_count - 1		5626821	0					
ANR	5626833	IdentifierDeclType	int		5626821	0					
ANR	5626834	Identifier	last_pole		5626821	1					
ANR	5626835	AssignmentExpression	last_pole = self -> pole_count - 1		5626821	2		=			
ANR	5626836	Identifier	last_pole		5626821	0					
ANR	5626837	AdditiveExpression	self -> pole_count - 1		5626821	1		-			
ANR	5626838	PtrMemberAccess	self -> pole_count		5626821	0					
ANR	5626839	Identifier	self		5626821	0					
ANR	5626840	Identifier	pole_count		5626821	1					
ANR	5626841	PrimaryExpression	1		5626821	1					
ANR	5626842	IdentifierDeclStatement	int primary_hint_count = self -> primary_hint_count ;	1581:4:63756:63805	5626821	2	True				
ANR	5626843	IdentifierDecl	primary_hint_count = self -> primary_hint_count		5626821	0					
ANR	5626844	IdentifierDeclType	int		5626821	0					
ANR	5626845	Identifier	primary_hint_count		5626821	1					
ANR	5626846	AssignmentExpression	primary_hint_count = self -> primary_hint_count		5626821	2		=			
ANR	5626847	Identifier	primary_hint_count		5626821	0					
ANR	5626848	PtrMemberAccess	self -> primary_hint_count		5626821	1					
ANR	5626849	Identifier	self		5626821	0					
ANR	5626850	Identifier	primary_hint_count		5626821	1					
ANR	5626851	IfStatement	if ( last_pole > 1 && self -> pole [ last_pole - 1 ] . type == closepath )		5626821	3					
ANR	5626852	Condition	last_pole > 1 && self -> pole [ last_pole - 1 ] . type == closepath	1583:8:63816:63874	5626821	0	True				
ANR	5626853	AndExpression	last_pole > 1 && self -> pole [ last_pole - 1 ] . type == closepath		5626821	0		&&			
ANR	5626854	RelationalExpression	last_pole > 1		5626821	0		>			
ANR	5626855	Identifier	last_pole		5626821	0					
ANR	5626856	PrimaryExpression	1		5626821	1					
ANR	5626857	EqualityExpression	self -> pole [ last_pole - 1 ] . type == closepath		5626821	1		==			
ANR	5626858	MemberAccess	self -> pole [ last_pole - 1 ] . type		5626821	0					
ANR	5626859	ArrayIndexing	self -> pole [ last_pole - 1 ]		5626821	0					
ANR	5626860	PtrMemberAccess	self -> pole		5626821	0					
ANR	5626861	Identifier	self		5626821	0					
ANR	5626862	Identifier	pole		5626821	1					
ANR	5626863	AdditiveExpression	last_pole - 1		5626821	1		-			
ANR	5626864	Identifier	last_pole		5626821	0					
ANR	5626865	PrimaryExpression	1		5626821	1					
ANR	5626866	Identifier	type		5626821	1					
ANR	5626867	Identifier	closepath		5626821	1					
ANR	5626868	ExpressionStatement	last_pole -= 2	1584:8:63885:63899	5626821	1	True				
ANR	5626869	AssignmentExpression	last_pole -= 2		5626821	0		-=			
ANR	5626870	Identifier	last_pole		5626821	0					
ANR	5626871	PrimaryExpression	2		5626821	1					
ANR	5626872	IfStatement	if ( self -> pole_count <= 1 )		5626821	4					
ANR	5626873	Condition	self -> pole_count <= 1	1585:8:63941:63961	5626821	0	True				
ANR	5626874	RelationalExpression	self -> pole_count <= 1		5626821	0		<=			
ANR	5626875	PtrMemberAccess	self -> pole_count		5626821	0					
ANR	5626876	Identifier	self		5626821	0					
ANR	5626877	Identifier	pole_count		5626821	1					
ANR	5626878	PrimaryExpression	1		5626821	1					
ANR	5626879	ReturnStatement	return ;	1586:8:63972:63978	5626821	1	True				
ANR	5626880	IfStatement	if ( ! self -> grid_fit_x || ! self -> grid_fit_y )		5626821	5					
ANR	5626881	Condition	! self -> grid_fit_x || ! self -> grid_fit_y	1590:8:64186:64223	5626821	0	True				
ANR	5626882	OrExpression	! self -> grid_fit_x || ! self -> grid_fit_y		5626821	0		||			
ANR	5626883	UnaryOperationExpression	! self -> grid_fit_x		5626821	0					
ANR	5626884	UnaryOperator	!		5626821	0					
ANR	5626885	PtrMemberAccess	self -> grid_fit_x		5626821	1					
ANR	5626886	Identifier	self		5626821	0					
ANR	5626887	Identifier	grid_fit_x		5626821	1					
ANR	5626888	UnaryOperationExpression	! self -> grid_fit_y		5626821	1					
ANR	5626889	UnaryOperator	!		5626821	0					
ANR	5626890	PtrMemberAccess	self -> grid_fit_y		5626821	1					
ANR	5626891	Identifier	self		5626821	0					
ANR	5626892	Identifier	grid_fit_y		5626821	1					
ANR	5626893	CompoundStatement		12:48:529:529	5626821	1					
ANR	5626894	ForStatement	for ( i = j = 0 ; i < self -> hint_count ; i ++ )		5626821	0					
ANR	5626895	ForInit	i = j = 0 ;	1591:13:64241:64250	5626821	0	True				
ANR	5626896	AssignmentExpression	i = j = 0		5626821	0		=			
ANR	5626897	Identifier	i		5626821	0					
ANR	5626898	AssignmentExpression	j = 0		5626821	1		=			
ANR	5626899	Identifier	j		5626821	0					
ANR	5626900	PrimaryExpression	0		5626821	1					
ANR	5626901	Condition	i < self -> hint_count	1591:24:64252:64271	5626821	1	True				
ANR	5626902	RelationalExpression	i < self -> hint_count		5626821	0		<			
ANR	5626903	Identifier	i		5626821	0					
ANR	5626904	PtrMemberAccess	self -> hint_count		5626821	1					
ANR	5626905	Identifier	self		5626821	0					
ANR	5626906	Identifier	hint_count		5626821	1					
ANR	5626907	PostIncDecOperationExpression	i ++	1591:46:64274:64276	5626821	2	True				
ANR	5626908	Identifier	i		5626821	0					
ANR	5626909	IncDec	++		5626821	1					
ANR	5626910	IfStatement	if ( ( self -> hint [ i ] . type == vstem && ! self -> grid_fit_x ) || ( self -> hint [ i ] . type == hstem && ! self -> grid_fit_y ) )		5626821	3					
ANR	5626911	Condition	( self -> hint [ i ] . type == vstem && ! self -> grid_fit_x ) || ( self -> hint [ i ] . type == hstem && ! self -> grid_fit_y )	1592:16:64295:64414	5626821	0	True				
ANR	5626912	OrExpression	( self -> hint [ i ] . type == vstem && ! self -> grid_fit_x ) || ( self -> hint [ i ] . type == hstem && ! self -> grid_fit_y )		5626821	0		||			
ANR	5626913	AndExpression	self -> hint [ i ] . type == vstem && ! self -> grid_fit_x		5626821	0		&&			
ANR	5626914	EqualityExpression	self -> hint [ i ] . type == vstem		5626821	0		==			
ANR	5626915	MemberAccess	self -> hint [ i ] . type		5626821	0					
ANR	5626916	ArrayIndexing	self -> hint [ i ]		5626821	0					
ANR	5626917	PtrMemberAccess	self -> hint		5626821	0					
ANR	5626918	Identifier	self		5626821	0					
ANR	5626919	Identifier	hint		5626821	1					
ANR	5626920	Identifier	i		5626821	1					
ANR	5626921	Identifier	type		5626821	1					
ANR	5626922	Identifier	vstem		5626821	1					
ANR	5626923	UnaryOperationExpression	! self -> grid_fit_x		5626821	1					
ANR	5626924	UnaryOperator	!		5626821	0					
ANR	5626925	PtrMemberAccess	self -> grid_fit_x		5626821	1					
ANR	5626926	Identifier	self		5626821	0					
ANR	5626927	Identifier	grid_fit_x		5626821	1					
ANR	5626928	AndExpression	self -> hint [ i ] . type == hstem && ! self -> grid_fit_y		5626821	1		&&			
ANR	5626929	EqualityExpression	self -> hint [ i ] . type == hstem		5626821	0		==			
ANR	5626930	MemberAccess	self -> hint [ i ] . type		5626821	0					
ANR	5626931	ArrayIndexing	self -> hint [ i ]		5626821	0					
ANR	5626932	PtrMemberAccess	self -> hint		5626821	0					
ANR	5626933	Identifier	self		5626821	0					
ANR	5626934	Identifier	hint		5626821	1					
ANR	5626935	Identifier	i		5626821	1					
ANR	5626936	Identifier	type		5626821	1					
ANR	5626937	Identifier	hstem		5626821	1					
ANR	5626938	UnaryOperationExpression	! self -> grid_fit_y		5626821	1					
ANR	5626939	UnaryOperator	!		5626821	0					
ANR	5626940	PtrMemberAccess	self -> grid_fit_y		5626821	1					
ANR	5626941	Identifier	self		5626821	0					
ANR	5626942	Identifier	grid_fit_y		5626821	1					
ANR	5626943	CompoundStatement		15:68:720:720	5626821	1					
ANR	5626944	IfStatement	if ( i < primary_hint_count )		5626821	0					
ANR	5626945	Condition	i < primary_hint_count	1594:20:64439:64460	5626821	0	True				
ANR	5626946	RelationalExpression	i < primary_hint_count		5626821	0		<			
ANR	5626947	Identifier	i		5626821	0					
ANR	5626948	Identifier	primary_hint_count		5626821	1					
ANR	5626949	ExpressionStatement	self -> primary_hint_count --	1595:20:64483:64509	5626821	1	True				
ANR	5626950	PostIncDecOperationExpression	self -> primary_hint_count --		5626821	0					
ANR	5626951	PtrMemberAccess	self -> primary_hint_count		5626821	0					
ANR	5626952	Identifier	self		5626821	0					
ANR	5626953	Identifier	primary_hint_count		5626821	1					
ANR	5626954	IncDec	--		5626821	1					
ANR	5626955	ContinueStatement	continue ;	1596:16:64527:64535	5626821	1	True				
ANR	5626956	ElseStatement	else		5626821	0					
ANR	5626957	CompoundStatement		19:19:874:874	5626821	0					
ANR	5626958	IfStatement	if ( i != j )		5626821	0					
ANR	5626959	Condition	i != j	1598:20:64593:64598	5626821	0	True				
ANR	5626960	EqualityExpression	i != j		5626821	0		!=			
ANR	5626961	Identifier	i		5626821	0					
ANR	5626962	Identifier	j		5626821	1					
ANR	5626963	ExpressionStatement	self -> hint [ j ] = self -> hint [ i ]	1599:20:64641:64670	5626821	1	True				
ANR	5626964	AssignmentExpression	self -> hint [ j ] = self -> hint [ i ]		5626821	0		=			
ANR	5626965	ArrayIndexing	self -> hint [ j ]		5626821	0					
ANR	5626966	PtrMemberAccess	self -> hint		5626821	0					
ANR	5626967	Identifier	self		5626821	0					
ANR	5626968	Identifier	hint		5626821	1					
ANR	5626969	Identifier	j		5626821	1					
ANR	5626970	ArrayIndexing	self -> hint [ i ]		5626821	1					
ANR	5626971	PtrMemberAccess	self -> hint		5626821	0					
ANR	5626972	Identifier	self		5626821	0					
ANR	5626973	Identifier	hint		5626821	1					
ANR	5626974	Identifier	i		5626821	1					
ANR	5626975	ExpressionStatement	j ++	1600:16:64688:64691	5626821	1	True				
ANR	5626976	PostIncDecOperationExpression	j ++		5626821	0					
ANR	5626977	Identifier	j		5626821	0					
ANR	5626978	IncDec	++		5626821	1					
ANR	5626979	ExpressionStatement	self -> hint_count = j	1602:8:64715:64735	5626821	1	True				
ANR	5626980	AssignmentExpression	self -> hint_count = j		5626821	0		=			
ANR	5626981	PtrMemberAccess	self -> hint_count		5626821	0					
ANR	5626982	Identifier	self		5626821	0					
ANR	5626983	Identifier	hint_count		5626821	1					
ANR	5626984	Identifier	j		5626821	1					
ANR	5626985	ForStatement	for ( i = 0 ; i < self -> hint_range_count ; i ++ )		5626821	6					
ANR	5626986	ForInit	i = 0 ;	1604:9:64752:64757	5626821	0	True				
ANR	5626987	AssignmentExpression	i = 0		5626821	0		=			
ANR	5626988	Identifier	i		5626821	0					
ANR	5626989	PrimaryExpression	0		5626821	1					
ANR	5626990	Condition	i < self -> hint_range_count	1604:16:64759:64784	5626821	1	True				
ANR	5626991	RelationalExpression	i < self -> hint_range_count		5626821	0		<			
ANR	5626992	Identifier	i		5626821	0					
ANR	5626993	PtrMemberAccess	self -> hint_range_count		5626821	1					
ANR	5626994	Identifier	self		5626821	0					
ANR	5626995	Identifier	hint_range_count		5626821	1					
ANR	5626996	PostIncDecOperationExpression	i ++	1604:44:64787:64789	5626821	2	True				
ANR	5626997	Identifier	i		5626821	0					
ANR	5626998	IncDec	++		5626821	1					
ANR	5626999	CompoundStatement		27:8:1105:1153	5626821	3					
ANR	5627000	IdentifierDeclStatement	t1_hint_range * hint_range = & self -> hint_range [ i ] ;	1605:8:64802:64850	5626821	0	True				
ANR	5627001	IdentifierDecl	* hint_range = & self -> hint_range [ i ]		5626821	0					
ANR	5627002	IdentifierDeclType	t1_hint_range *		5626821	0					
ANR	5627003	Identifier	hint_range		5626821	1					
ANR	5627004	AssignmentExpression	* hint_range = & self -> hint_range [ i ]		5626821	2		=			
ANR	5627005	Identifier	hint_range		5626821	0					
ANR	5627006	UnaryOperationExpression	& self -> hint_range [ i ]		5626821	1					
ANR	5627007	UnaryOperator	&		5626821	0					
ANR	5627008	ArrayIndexing	self -> hint_range [ i ]		5626821	1					
ANR	5627009	PtrMemberAccess	self -> hint_range		5626821	0					
ANR	5627010	Identifier	self		5626821	0					
ANR	5627011	Identifier	hint_range		5626821	1					
ANR	5627012	Identifier	i		5626821	1					
ANR	5627013	ExpressionStatement	j = hint_range -> beg_pole	1607:8:64861:64885	5626821	1	True				
ANR	5627014	AssignmentExpression	j = hint_range -> beg_pole		5626821	0		=			
ANR	5627015	Identifier	j		5626821	0					
ANR	5627016	PtrMemberAccess	hint_range -> beg_pole		5626821	1					
ANR	5627017	Identifier	hint_range		5626821	0					
ANR	5627018	Identifier	beg_pole		5626821	1					
ANR	5627019	IfStatement	if ( self -> pole [ j ] . type == closepath )		5626821	2					
ANR	5627020	Condition	self -> pole [ j ] . type == closepath	1608:12:64899:64929	5626821	0	True				
ANR	5627021	EqualityExpression	self -> pole [ j ] . type == closepath		5626821	0		==			
ANR	5627022	MemberAccess	self -> pole [ j ] . type		5626821	0					
ANR	5627023	ArrayIndexing	self -> pole [ j ]		5626821	0					
ANR	5627024	PtrMemberAccess	self -> pole		5626821	0					
ANR	5627025	Identifier	self		5626821	0					
ANR	5627026	Identifier	pole		5626821	1					
ANR	5627027	Identifier	j		5626821	1					
ANR	5627028	Identifier	type		5626821	1					
ANR	5627029	Identifier	closepath		5626821	1					
ANR	5627030	ExpressionStatement	hint_range -> beg_pole = ++ j	1609:12:64944:64970	5626821	1	True				
ANR	5627031	AssignmentExpression	hint_range -> beg_pole = ++ j		5626821	0		=			
ANR	5627032	PtrMemberAccess	hint_range -> beg_pole		5626821	0					
ANR	5627033	Identifier	hint_range		5626821	0					
ANR	5627034	Identifier	beg_pole		5626821	1					
ANR	5627035	UnaryExpression	++ j		5626821	1					
ANR	5627036	IncDec	++		5626821	0					
ANR	5627037	Identifier	j		5626821	1					
ANR	5627038	ElseStatement	else		5626821	0					
ANR	5627039	CompoundStatement		32:13:1288:1288	5626821	0					
ANR	5627040	IfStatement	if ( self -> pole [ j ] . type == offcurve )		5626821	0					
ANR	5627041	Condition	self -> pole [ j ] . type == offcurve	1611:16:65003:65032	5626821	0	True				
ANR	5627042	EqualityExpression	self -> pole [ j ] . type == offcurve		5626821	0		==			
ANR	5627043	MemberAccess	self -> pole [ j ] . type		5626821	0					
ANR	5627044	ArrayIndexing	self -> pole [ j ]		5626821	0					
ANR	5627045	PtrMemberAccess	self -> pole		5626821	0					
ANR	5627046	Identifier	self		5626821	0					
ANR	5627047	Identifier	pole		5626821	1					
ANR	5627048	Identifier	j		5626821	1					
ANR	5627049	Identifier	type		5626821	1					
ANR	5627050	Identifier	offcurve		5626821	1					
ANR	5627051	ExpressionStatement	hint_range -> beg_pole = -- j	1612:16:65051:65077	5626821	1	True				
ANR	5627052	AssignmentExpression	hint_range -> beg_pole = -- j		5626821	0		=			
ANR	5627053	PtrMemberAccess	hint_range -> beg_pole		5626821	0					
ANR	5627054	Identifier	hint_range		5626821	0					
ANR	5627055	Identifier	beg_pole		5626821	1					
ANR	5627056	UnaryExpression	-- j		5626821	1					
ANR	5627057	IncDec	--		5626821	0					
ANR	5627058	Identifier	j		5626821	1					
ANR	5627059	IfStatement	if ( self -> pole [ j ] . type == offcurve )		5626821	1					
ANR	5627060	Condition	self -> pole [ j ] . type == offcurve	1613:16:65095:65124	5626821	0	True				
ANR	5627061	EqualityExpression	self -> pole [ j ] . type == offcurve		5626821	0		==			
ANR	5627062	MemberAccess	self -> pole [ j ] . type		5626821	0					
ANR	5627063	ArrayIndexing	self -> pole [ j ]		5626821	0					
ANR	5627064	PtrMemberAccess	self -> pole		5626821	0					
ANR	5627065	Identifier	self		5626821	0					
ANR	5627066	Identifier	pole		5626821	1					
ANR	5627067	Identifier	j		5626821	1					
ANR	5627068	Identifier	type		5626821	1					
ANR	5627069	Identifier	offcurve		5626821	1					
ANR	5627070	ExpressionStatement	hint_range -> beg_pole = -- j	1614:16:65143:65169	5626821	1	True				
ANR	5627071	AssignmentExpression	hint_range -> beg_pole = -- j		5626821	0		=			
ANR	5627072	PtrMemberAccess	hint_range -> beg_pole		5626821	0					
ANR	5627073	Identifier	hint_range		5626821	0					
ANR	5627074	Identifier	beg_pole		5626821	1					
ANR	5627075	UnaryExpression	-- j		5626821	1					
ANR	5627076	IncDec	--		5626821	0					
ANR	5627077	Identifier	j		5626821	1					
ANR	5627078	ExpressionStatement	j = hint_range -> end_pole	1616:8:65189:65213	5626821	3	True				
ANR	5627079	AssignmentExpression	j = hint_range -> end_pole		5626821	0		=			
ANR	5627080	Identifier	j		5626821	0					
ANR	5627081	PtrMemberAccess	hint_range -> end_pole		5626821	1					
ANR	5627082	Identifier	hint_range		5626821	0					
ANR	5627083	Identifier	end_pole		5626821	1					
ANR	5627084	IfStatement	if ( j == - 1 )		5626821	4					
ANR	5627085	Condition	j == - 1	1617:12:65227:65233	5626821	0	True				
ANR	5627086	EqualityExpression	j == - 1		5626821	0		==			
ANR	5627087	Identifier	j		5626821	0					
ANR	5627088	UnaryOperationExpression	- 1		5626821	1					
ANR	5627089	UnaryOperator	-		5626821	0					
ANR	5627090	PrimaryExpression	1		5626821	1					
ANR	5627091	ExpressionStatement	hint_range -> end_pole = j = last_pole	1618:12:65248:65284	5626821	1	True				
ANR	5627092	AssignmentExpression	hint_range -> end_pole = j = last_pole		5626821	0		=			
ANR	5627093	PtrMemberAccess	hint_range -> end_pole		5626821	0					
ANR	5627094	Identifier	hint_range		5626821	0					
ANR	5627095	Identifier	end_pole		5626821	1					
ANR	5627096	AssignmentExpression	j = last_pole		5626821	1		=			
ANR	5627097	Identifier	j		5626821	0					
ANR	5627098	Identifier	last_pole		5626821	1					
ANR	5627099	IfStatement	if ( self -> pole [ j ] . type == offcurve )		5626821	5					
ANR	5627100	Condition	self -> pole [ j ] . type == offcurve	1619:12:65298:65327	5626821	0	True				
ANR	5627101	EqualityExpression	self -> pole [ j ] . type == offcurve		5626821	0		==			
ANR	5627102	MemberAccess	self -> pole [ j ] . type		5626821	0					
ANR	5627103	ArrayIndexing	self -> pole [ j ]		5626821	0					
ANR	5627104	PtrMemberAccess	self -> pole		5626821	0					
ANR	5627105	Identifier	self		5626821	0					
ANR	5627106	Identifier	pole		5626821	1					
ANR	5627107	Identifier	j		5626821	1					
ANR	5627108	Identifier	type		5626821	1					
ANR	5627109	Identifier	offcurve		5626821	1					
ANR	5627110	ExpressionStatement	hint_range -> end_pole = ++ j	1620:12:65342:65368	5626821	1	True				
ANR	5627111	AssignmentExpression	hint_range -> end_pole = ++ j		5626821	0		=			
ANR	5627112	PtrMemberAccess	hint_range -> end_pole		5626821	0					
ANR	5627113	Identifier	hint_range		5626821	0					
ANR	5627114	Identifier	end_pole		5626821	1					
ANR	5627115	UnaryExpression	++ j		5626821	1					
ANR	5627116	IncDec	++		5626821	0					
ANR	5627117	Identifier	j		5626821	1					
ANR	5627118	IfStatement	if ( self -> pole [ j ] . type == offcurve )		5626821	6					
ANR	5627119	Condition	self -> pole [ j ] . type == offcurve	1621:12:65382:65411	5626821	0	True				
ANR	5627120	EqualityExpression	self -> pole [ j ] . type == offcurve		5626821	0		==			
ANR	5627121	MemberAccess	self -> pole [ j ] . type		5626821	0					
ANR	5627122	ArrayIndexing	self -> pole [ j ]		5626821	0					
ANR	5627123	PtrMemberAccess	self -> pole		5626821	0					
ANR	5627124	Identifier	self		5626821	0					
ANR	5627125	Identifier	pole		5626821	1					
ANR	5627126	Identifier	j		5626821	1					
ANR	5627127	Identifier	type		5626821	1					
ANR	5627128	Identifier	offcurve		5626821	1					
ANR	5627129	ExpressionStatement	hint_range -> end_pole = ++ j	1622:12:65426:65452	5626821	1	True				
ANR	5627130	AssignmentExpression	hint_range -> end_pole = ++ j		5626821	0		=			
ANR	5627131	PtrMemberAccess	hint_range -> end_pole		5626821	0					
ANR	5627132	Identifier	hint_range		5626821	0					
ANR	5627133	Identifier	end_pole		5626821	1					
ANR	5627134	UnaryExpression	++ j		5626821	1					
ANR	5627135	IncDec	++		5626821	0					
ANR	5627136	Identifier	j		5626821	1					
ANR	5627137	ForStatement	for ( i = 0 ; i <= self -> contour_count ; i ++ )		5626821	7					
ANR	5627138	ForInit	i = 0 ;	1628:9:65608:65613	5626821	0	True				
ANR	5627139	AssignmentExpression	i = 0		5626821	0		=			
ANR	5627140	Identifier	i		5626821	0					
ANR	5627141	PrimaryExpression	0		5626821	1					
ANR	5627142	Condition	i <= self -> contour_count	1628:16:65615:65638	5626821	1	True				
ANR	5627143	RelationalExpression	i <= self -> contour_count		5626821	0		<=			
ANR	5627144	Identifier	i		5626821	0					
ANR	5627145	PtrMemberAccess	self -> contour_count		5626821	1					
ANR	5627146	Identifier	self		5626821	0					
ANR	5627147	Identifier	contour_count		5626821	1					
ANR	5627148	PostIncDecOperationExpression	i ++	1628:42:65641:65643	5626821	2	True				
ANR	5627149	Identifier	i		5626821	0					
ANR	5627150	IncDec	++		5626821	1					
ANR	5627151	IfStatement	if ( self -> pole [ self -> contour [ i ] ] . type == moveto )		5626821	3					
ANR	5627152	Condition	self -> pole [ self -> contour [ i ] ] . type == moveto	1629:12:65658:65700	5626821	0	True				
ANR	5627153	EqualityExpression	self -> pole [ self -> contour [ i ] ] . type == moveto		5626821	0		==			
ANR	5627154	MemberAccess	self -> pole [ self -> contour [ i ] ] . type		5626821	0					
ANR	5627155	ArrayIndexing	self -> pole [ self -> contour [ i ] ]		5626821	0					
ANR	5627156	PtrMemberAccess	self -> pole		5626821	0					
ANR	5627157	Identifier	self		5626821	0					
ANR	5627158	Identifier	pole		5626821	1					
ANR	5627159	ArrayIndexing	self -> contour [ i ]		5626821	1					
ANR	5627160	PtrMemberAccess	self -> contour		5626821	0					
ANR	5627161	Identifier	self		5626821	0					
ANR	5627162	Identifier	contour		5626821	1					
ANR	5627163	Identifier	i		5626821	1					
ANR	5627164	Identifier	type		5626821	1					
ANR	5627165	Identifier	moveto		5626821	1					
ANR	5627166	ExpressionStatement	self -> pole [ self -> contour [ i ] ] . type = oncurve	1630:12:65715:65758	5626821	1	True				
ANR	5627167	AssignmentExpression	self -> pole [ self -> contour [ i ] ] . type = oncurve		5626821	0		=			
ANR	5627168	MemberAccess	self -> pole [ self -> contour [ i ] ] . type		5626821	0					
ANR	5627169	ArrayIndexing	self -> pole [ self -> contour [ i ] ]		5626821	0					
ANR	5627170	PtrMemberAccess	self -> pole		5626821	0					
ANR	5627171	Identifier	self		5626821	0					
ANR	5627172	Identifier	pole		5626821	1					
ANR	5627173	ArrayIndexing	self -> contour [ i ]		5626821	1					
ANR	5627174	PtrMemberAccess	self -> contour		5626821	0					
ANR	5627175	Identifier	self		5626821	0					
ANR	5627176	Identifier	contour		5626821	1					
ANR	5627177	Identifier	i		5626821	1					
ANR	5627178	Identifier	type		5626821	1					
ANR	5627179	Identifier	oncurve		5626821	1					
ANR	5627180	ForStatement	for ( j = 0 ; j < self -> hint_range_count ; j ++ )		5626821	8					
ANR	5627181	ForInit	j = 0 ;	1634:9:65913:65918	5626821	0	True				
ANR	5627182	AssignmentExpression	j = 0		5626821	0		=			
ANR	5627183	Identifier	j		5626821	0					
ANR	5627184	PrimaryExpression	0		5626821	1					
ANR	5627185	Condition	j < self -> hint_range_count	1634:16:65920:65945	5626821	1	True				
ANR	5627186	RelationalExpression	j < self -> hint_range_count		5626821	0		<			
ANR	5627187	Identifier	j		5626821	0					
ANR	5627188	PtrMemberAccess	self -> hint_range_count		5626821	1					
ANR	5627189	Identifier	self		5626821	0					
ANR	5627190	Identifier	hint_range_count		5626821	1					
ANR	5627191	PostIncDecOperationExpression	j ++	1634:44:65948:65950	5626821	2	True				
ANR	5627192	Identifier	j		5626821	0					
ANR	5627193	IncDec	++		5626821	1					
ANR	5627194	CompoundStatement		59:8:2383:2434	5626821	3					
ANR	5627195	IdentifierDeclStatement	int beg_pole = self -> hint_range [ j ] . beg_pole ;	1635:8:65963:66006	5626821	0	True				
ANR	5627196	IdentifierDecl	beg_pole = self -> hint_range [ j ] . beg_pole		5626821	0					
ANR	5627197	IdentifierDeclType	int		5626821	0					
ANR	5627198	Identifier	beg_pole		5626821	1					
ANR	5627199	AssignmentExpression	beg_pole = self -> hint_range [ j ] . beg_pole		5626821	2		=			
ANR	5627200	Identifier	beg_pole		5626821	0					
ANR	5627201	MemberAccess	self -> hint_range [ j ] . beg_pole		5626821	1					
ANR	5627202	ArrayIndexing	self -> hint_range [ j ]		5626821	0					
ANR	5627203	PtrMemberAccess	self -> hint_range		5626821	0					
ANR	5627204	Identifier	self		5626821	0					
ANR	5627205	Identifier	hint_range		5626821	1					
ANR	5627206	Identifier	j		5626821	1					
ANR	5627207	Identifier	beg_pole		5626821	1					
ANR	5627208	IdentifierDeclStatement	int contour_index = self -> pole [ beg_pole ] . contour_index ;	1636:8:66016:66070	5626821	1	True				
ANR	5627209	IdentifierDecl	contour_index = self -> pole [ beg_pole ] . contour_index		5626821	0					
ANR	5627210	IdentifierDeclType	int		5626821	0					
ANR	5627211	Identifier	contour_index		5626821	1					
ANR	5627212	AssignmentExpression	contour_index = self -> pole [ beg_pole ] . contour_index		5626821	2		=			
ANR	5627213	Identifier	contour_index		5626821	0					
ANR	5627214	MemberAccess	self -> pole [ beg_pole ] . contour_index		5626821	1					
ANR	5627215	ArrayIndexing	self -> pole [ beg_pole ]		5626821	0					
ANR	5627216	PtrMemberAccess	self -> pole		5626821	0					
ANR	5627217	Identifier	self		5626821	0					
ANR	5627218	Identifier	pole		5626821	1					
ANR	5627219	Identifier	beg_pole		5626821	1					
ANR	5627220	Identifier	contour_index		5626821	1					
ANR	5627221	IdentifierDeclStatement	int contour_beg_pole = self -> contour [ contour_index ] ;	1637:8:66080:66131	5626821	2	True				
ANR	5627222	IdentifierDecl	contour_beg_pole = self -> contour [ contour_index ]		5626821	0					
ANR	5627223	IdentifierDeclType	int		5626821	0					
ANR	5627224	Identifier	contour_beg_pole		5626821	1					
ANR	5627225	AssignmentExpression	contour_beg_pole = self -> contour [ contour_index ]		5626821	2		=			
ANR	5627226	Identifier	contour_beg_pole		5626821	0					
ANR	5627227	ArrayIndexing	self -> contour [ contour_index ]		5626821	1					
ANR	5627228	PtrMemberAccess	self -> contour		5626821	0					
ANR	5627229	Identifier	self		5626821	0					
ANR	5627230	Identifier	contour		5626821	1					
ANR	5627231	Identifier	contour_index		5626821	1					
ANR	5627232	IfStatement	if ( beg_pole > contour_beg_pole && beg_pole < last_pole )		5626821	3					
ANR	5627233	Condition	beg_pole > contour_beg_pole && beg_pole < last_pole	1639:12:66146:66196	5626821	0	True				
ANR	5627234	AndExpression	beg_pole > contour_beg_pole && beg_pole < last_pole		5626821	0		&&			
ANR	5627235	RelationalExpression	beg_pole > contour_beg_pole		5626821	0		>			
ANR	5627236	Identifier	beg_pole		5626821	0					
ANR	5627237	Identifier	contour_beg_pole		5626821	1					
ANR	5627238	RelationalExpression	beg_pole < last_pole		5626821	1		<			
ANR	5627239	Identifier	beg_pole		5626821	0					
ANR	5627240	Identifier	last_pole		5626821	1					
ANR	5627241	ExpressionStatement	"self -> hint_range [ j ] . beg_pole = t1_hinter__segment_beg ( self , beg_pole )"	1640:12:66211:66280	5626821	1	True				
ANR	5627242	AssignmentExpression	"self -> hint_range [ j ] . beg_pole = t1_hinter__segment_beg ( self , beg_pole )"		5626821	0		=			
ANR	5627243	MemberAccess	self -> hint_range [ j ] . beg_pole		5626821	0					
ANR	5627244	ArrayIndexing	self -> hint_range [ j ]		5626821	0					
ANR	5627245	PtrMemberAccess	self -> hint_range		5626821	0					
ANR	5627246	Identifier	self		5626821	0					
ANR	5627247	Identifier	hint_range		5626821	1					
ANR	5627248	Identifier	j		5626821	1					
ANR	5627249	Identifier	beg_pole		5626821	1					
ANR	5627250	CallExpression	"t1_hinter__segment_beg ( self , beg_pole )"		5626821	1					
ANR	5627251	Callee	t1_hinter__segment_beg		5626821	0					
ANR	5627252	Identifier	t1_hinter__segment_beg		5626821	0					
ANR	5627253	ArgumentList	self		5626821	1					
ANR	5627254	Argument	self		5626821	0					
ANR	5627255	Identifier	self		5626821	0					
ANR	5627256	Argument	beg_pole		5626821	1					
ANR	5627257	Identifier	beg_pole		5626821	0					
ANR	5627258	ReturnType	static void		5626821	1					
ANR	5627259	Identifier	t1_hinter__simplify_representation		5626821	2					
ANR	5627260	ParameterList	t1_hinter * self		5626821	3					
ANR	5627261	Parameter	t1_hinter * self	1578:47:63678:63693	5626821	0	True				
ANR	5627262	ParameterType	t1_hinter *		5626821	0					
ANR	5627263	Identifier	self		5626821	1					
ANR	5627264	CFGEntryNode	ENTRY		5626821		True				
ANR	5627265	CFGExitNode	EXIT		5626821		True				
ANR	5627266	Symbol	self -> pole_count		5626821						
ANR	5627267	Symbol	t1_hinter__segment_beg		5626821						
ANR	5627268	Symbol	hint_range		5626821						
ANR	5627269	Symbol	self -> pole [ beg_pole ] . contour_index		5626821						
ANR	5627270	Symbol	* * self -> contour		5626821						
ANR	5627271	Symbol	vstem		5626821						
ANR	5627272	Symbol	hint_range -> beg_pole		5626821						
ANR	5627273	Symbol	self -> grid_fit_x		5626821						
ANR	5627274	Symbol	self -> grid_fit_y		5626821						
ANR	5627275	Symbol	* self -> hint		5626821						
ANR	5627276	Symbol	self -> hint_range [ j ] . beg_pole		5626821						
ANR	5627277	Symbol	* * * self		5626821						
ANR	5627278	Symbol	primary_hint_count		5626821						
ANR	5627279	Symbol	* beg_pole		5626821						
ANR	5627280	Symbol	* contour_index		5626821						
ANR	5627281	Symbol	* * i		5626821						
ANR	5627282	Symbol	* self		5626821						
ANR	5627283	Symbol	beg_pole		5626821						
ANR	5627284	Symbol	self -> pole [ j ] . type		5626821						
ANR	5627285	Symbol	self -> contour		5626821						
ANR	5627286	Symbol	hint_range -> end_pole		5626821						
ANR	5627287	Symbol	self -> pole [ self -> contour [ i ] ] . type		5626821						
ANR	5627288	Symbol	last_pole		5626821						
ANR	5627289	Symbol	contour_beg_pole		5626821						
ANR	5627290	Symbol	oncurve		5626821						
ANR	5627291	Symbol	* self -> pole		5626821						
ANR	5627292	Symbol	self -> primary_hint_count		5626821						
ANR	5627293	Symbol	closepath		5626821						
ANR	5627294	Symbol	self -> pole		5626821						
ANR	5627295	Symbol	contour_index		5626821						
ANR	5627296	Symbol	hstem		5626821						
ANR	5627297	Symbol	moveto		5626821						
ANR	5627298	Symbol	* self -> contour		5626821						
ANR	5627299	Symbol	self -> hint [ i ] . type		5626821						
ANR	5627300	Symbol	self -> hint		5626821						
ANR	5627301	Symbol	self -> contour_count		5626821						
ANR	5627302	Symbol	* * self		5626821						
ANR	5627303	Symbol	i		5626821						
ANR	5627304	Symbol	j		5626821						
ANR	5627305	Symbol	self -> pole [ last_pole - 1 ] . type		5626821						
ANR	5627306	Symbol	self -> hint_range_count		5626821						
ANR	5627307	Symbol	self -> hint_range		5626821						
ANR	5627308	Symbol	* self -> hint_range		5626821						
ANR	5627309	Symbol	self -> hint_count		5626821						
ANR	5627310	Symbol	* i		5626821						
ANR	5627311	Symbol	* j		5626821						
ANR	5627312	Symbol	offcurve		5626821						
ANR	5627313	Symbol	self		5626821						
ANR	5627314	Symbol	* last_pole		5626821						
ANR	5627315	Symbol	* hint_range		5626821						
ANR	5627316	Function	t1_hinter__is_small_angle	1644:0:66291:67163							
ANR	5627317	FunctionDef	"t1_hinter__is_small_angle (t1_hinter * self , int pole_index0 , int pole_index1 , long tan_x , long tan_y , int alpha , int alpha_div , int * quality)"		5627316	0					
ANR	5627318	CompoundStatement		1646:0:66460:67163	5627316	0					
ANR	5627319	IdentifierDeclStatement	long gx = self -> pole [ pole_index1 ] . gx - self -> pole [ pole_index0 ] . gx ;	1646:3:66464:66529	5627316	0	True				
ANR	5627320	IdentifierDecl	gx = self -> pole [ pole_index1 ] . gx - self -> pole [ pole_index0 ] . gx		5627316	0					
ANR	5627321	IdentifierDeclType	long		5627316	0					
ANR	5627322	Identifier	gx		5627316	1					
ANR	5627323	AssignmentExpression	gx = self -> pole [ pole_index1 ] . gx - self -> pole [ pole_index0 ] . gx		5627316	2		=			
ANR	5627324	Identifier	gx		5627316	0					
ANR	5627325	AdditiveExpression	self -> pole [ pole_index1 ] . gx - self -> pole [ pole_index0 ] . gx		5627316	1		-			
ANR	5627326	MemberAccess	self -> pole [ pole_index1 ] . gx		5627316	0					
ANR	5627327	ArrayIndexing	self -> pole [ pole_index1 ]		5627316	0					
ANR	5627328	PtrMemberAccess	self -> pole		5627316	0					
ANR	5627329	Identifier	self		5627316	0					
ANR	5627330	Identifier	pole		5627316	1					
ANR	5627331	Identifier	pole_index1		5627316	1					
ANR	5627332	Identifier	gx		5627316	1					
ANR	5627333	MemberAccess	self -> pole [ pole_index0 ] . gx		5627316	1					
ANR	5627334	ArrayIndexing	self -> pole [ pole_index0 ]		5627316	0					
ANR	5627335	PtrMemberAccess	self -> pole		5627316	0					
ANR	5627336	Identifier	self		5627316	0					
ANR	5627337	Identifier	pole		5627316	1					
ANR	5627338	Identifier	pole_index0		5627316	1					
ANR	5627339	Identifier	gx		5627316	1					
ANR	5627340	IdentifierDeclStatement	long gy = self -> pole [ pole_index1 ] . gy - self -> pole [ pole_index0 ] . gy ;	1647:4:66535:66600	5627316	1	True				
ANR	5627341	IdentifierDecl	gy = self -> pole [ pole_index1 ] . gy - self -> pole [ pole_index0 ] . gy		5627316	0					
ANR	5627342	IdentifierDeclType	long		5627316	0					
ANR	5627343	Identifier	gy		5627316	1					
ANR	5627344	AssignmentExpression	gy = self -> pole [ pole_index1 ] . gy - self -> pole [ pole_index0 ] . gy		5627316	2		=			
ANR	5627345	Identifier	gy		5627316	0					
ANR	5627346	AdditiveExpression	self -> pole [ pole_index1 ] . gy - self -> pole [ pole_index0 ] . gy		5627316	1		-			
ANR	5627347	MemberAccess	self -> pole [ pole_index1 ] . gy		5627316	0					
ANR	5627348	ArrayIndexing	self -> pole [ pole_index1 ]		5627316	0					
ANR	5627349	PtrMemberAccess	self -> pole		5627316	0					
ANR	5627350	Identifier	self		5627316	0					
ANR	5627351	Identifier	pole		5627316	1					
ANR	5627352	Identifier	pole_index1		5627316	1					
ANR	5627353	Identifier	gy		5627316	1					
ANR	5627354	MemberAccess	self -> pole [ pole_index0 ] . gy		5627316	1					
ANR	5627355	ArrayIndexing	self -> pole [ pole_index0 ]		5627316	0					
ANR	5627356	PtrMemberAccess	self -> pole		5627316	0					
ANR	5627357	Identifier	self		5627316	0					
ANR	5627358	Identifier	pole		5627316	1					
ANR	5627359	Identifier	pole_index0		5627316	1					
ANR	5627360	Identifier	gy		5627316	1					
ANR	5627361	IdentifierDeclStatement	"long vp = mul_shift ( gx , tan_y , _fixed_shift ) - mul_shift ( gy , tan_x , _fixed_shift ) ;"	1648:4:66606:66687	5627316	2	True				
ANR	5627362	IdentifierDecl	"vp = mul_shift ( gx , tan_y , _fixed_shift ) - mul_shift ( gy , tan_x , _fixed_shift )"		5627316	0					
ANR	5627363	IdentifierDeclType	long		5627316	0					
ANR	5627364	Identifier	vp		5627316	1					
ANR	5627365	AssignmentExpression	"vp = mul_shift ( gx , tan_y , _fixed_shift ) - mul_shift ( gy , tan_x , _fixed_shift )"		5627316	2		=			
ANR	5627366	Identifier	vp		5627316	0					
ANR	5627367	AdditiveExpression	"mul_shift ( gx , tan_y , _fixed_shift ) - mul_shift ( gy , tan_x , _fixed_shift )"		5627316	1		-			
ANR	5627368	CallExpression	"mul_shift ( gx , tan_y , _fixed_shift )"		5627316	0					
ANR	5627369	Callee	mul_shift		5627316	0					
ANR	5627370	Identifier	mul_shift		5627316	0					
ANR	5627371	ArgumentList	gx		5627316	1					
ANR	5627372	Argument	gx		5627316	0					
ANR	5627373	Identifier	gx		5627316	0					
ANR	5627374	Argument	tan_y		5627316	1					
ANR	5627375	Identifier	tan_y		5627316	0					
ANR	5627376	Argument	_fixed_shift		5627316	2					
ANR	5627377	Identifier	_fixed_shift		5627316	0					
ANR	5627378	CallExpression	"mul_shift ( gy , tan_x , _fixed_shift )"		5627316	1					
ANR	5627379	Callee	mul_shift		5627316	0					
ANR	5627380	Identifier	mul_shift		5627316	0					
ANR	5627381	ArgumentList	gy		5627316	1					
ANR	5627382	Argument	gy		5627316	0					
ANR	5627383	Identifier	gy		5627316	0					
ANR	5627384	Argument	tan_x		5627316	1					
ANR	5627385	Identifier	tan_x		5627316	0					
ANR	5627386	Argument	_fixed_shift		5627316	2					
ANR	5627387	Identifier	_fixed_shift		5627316	0					
ANR	5627388	IdentifierDeclStatement	"long sp = mul_shift ( gx , tan_x , _fixed_shift ) + mul_shift ( gy , tan_y , _fixed_shift ) ;"	1649:4:66693:66774	5627316	3	True				
ANR	5627389	IdentifierDecl	"sp = mul_shift ( gx , tan_x , _fixed_shift ) + mul_shift ( gy , tan_y , _fixed_shift )"		5627316	0					
ANR	5627390	IdentifierDeclType	long		5627316	0					
ANR	5627391	Identifier	sp		5627316	1					
ANR	5627392	AssignmentExpression	"sp = mul_shift ( gx , tan_x , _fixed_shift ) + mul_shift ( gy , tan_y , _fixed_shift )"		5627316	2		=			
ANR	5627393	Identifier	sp		5627316	0					
ANR	5627394	AdditiveExpression	"mul_shift ( gx , tan_x , _fixed_shift ) + mul_shift ( gy , tan_y , _fixed_shift )"		5627316	1		+			
ANR	5627395	CallExpression	"mul_shift ( gx , tan_x , _fixed_shift )"		5627316	0					
ANR	5627396	Callee	mul_shift		5627316	0					
ANR	5627397	Identifier	mul_shift		5627316	0					
ANR	5627398	ArgumentList	gx		5627316	1					
ANR	5627399	Argument	gx		5627316	0					
ANR	5627400	Identifier	gx		5627316	0					
ANR	5627401	Argument	tan_x		5627316	1					
ANR	5627402	Identifier	tan_x		5627316	0					
ANR	5627403	Argument	_fixed_shift		5627316	2					
ANR	5627404	Identifier	_fixed_shift		5627316	0					
ANR	5627405	CallExpression	"mul_shift ( gy , tan_y , _fixed_shift )"		5627316	1					
ANR	5627406	Callee	mul_shift		5627316	0					
ANR	5627407	Identifier	mul_shift		5627316	0					
ANR	5627408	ArgumentList	gy		5627316	1					
ANR	5627409	Argument	gy		5627316	0					
ANR	5627410	Identifier	gy		5627316	0					
ANR	5627411	Argument	tan_y		5627316	1					
ANR	5627412	Identifier	tan_y		5627316	0					
ANR	5627413	Argument	_fixed_shift		5627316	2					
ANR	5627414	Identifier	_fixed_shift		5627316	0					
ANR	5627415	IdentifierDeclStatement	"long vp1 = any_abs ( vp ) , sp1 = any_abs ( sp ) ;"	1650:4:66780:66821	5627316	4	True				
ANR	5627416	IdentifierDecl	vp1 = any_abs ( vp )		5627316	0					
ANR	5627417	IdentifierDeclType	long		5627316	0					
ANR	5627418	Identifier	vp1		5627316	1					
ANR	5627419	AssignmentExpression	vp1 = any_abs ( vp )		5627316	2		=			
ANR	5627420	Identifier	vp1		5627316	0					
ANR	5627421	CallExpression	any_abs ( vp )		5627316	1					
ANR	5627422	Callee	any_abs		5627316	0					
ANR	5627423	Identifier	any_abs		5627316	0					
ANR	5627424	ArgumentList	vp		5627316	1					
ANR	5627425	Argument	vp		5627316	0					
ANR	5627426	Identifier	vp		5627316	0					
ANR	5627427	IdentifierDecl	sp1 = any_abs ( sp )		5627316	1					
ANR	5627428	IdentifierDeclType	long		5627316	0					
ANR	5627429	Identifier	sp1		5627316	1					
ANR	5627430	AssignmentExpression	sp1 = any_abs ( sp )		5627316	2		=			
ANR	5627431	Identifier	sp1		5627316	0					
ANR	5627432	CallExpression	any_abs ( sp )		5627316	1					
ANR	5627433	Callee	any_abs		5627316	0					
ANR	5627434	Identifier	any_abs		5627316	0					
ANR	5627435	ArgumentList	sp		5627316	1					
ANR	5627436	Argument	sp		5627316	0					
ANR	5627437	Identifier	sp		5627316	0					
ANR	5627438	IfStatement	if ( gx == 0 && gy == 0 )		5627316	5					
ANR	5627439	Condition	gx == 0 && gy == 0	1652:8:66832:66849	5627316	0	True				
ANR	5627440	AndExpression	gx == 0 && gy == 0		5627316	0		&&			
ANR	5627441	EqualityExpression	gx == 0		5627316	0		==			
ANR	5627442	Identifier	gx		5627316	0					
ANR	5627443	PrimaryExpression	0		5627316	1					
ANR	5627444	EqualityExpression	gy == 0		5627316	1		==			
ANR	5627445	Identifier	gy		5627316	0					
ANR	5627446	PrimaryExpression	0		5627316	1					
ANR	5627447	CompoundStatement		7:28:391:391	5627316	1					
ANR	5627448	ExpressionStatement	* quality = max_int	1653:8:66862:66880	5627316	0	True				
ANR	5627449	AssignmentExpression	* quality = max_int		5627316	0		=			
ANR	5627450	UnaryOperationExpression	* quality		5627316	0					
ANR	5627451	UnaryOperator	*		5627316	0					
ANR	5627452	Identifier	quality		5627316	1					
ANR	5627453	Identifier	max_int		5627316	1					
ANR	5627454	ReturnStatement	return false ;	1654:8:66890:66902	5627316	1	True				
ANR	5627455	Identifier	false		5627316	0					
ANR	5627456	IfStatement	if ( vp1 >= sp1 )		5627316	6					
ANR	5627457	Condition	vp1 >= sp1	1656:8:66918:66927	5627316	0	True				
ANR	5627458	RelationalExpression	vp1 >= sp1		5627316	0		>=			
ANR	5627459	Identifier	vp1		5627316	0					
ANR	5627460	Identifier	sp1		5627316	1					
ANR	5627461	CompoundStatement		11:20:469:469	5627316	1					
ANR	5627462	ExpressionStatement	* quality = max_int	1657:8:66940:66958	5627316	0	True				
ANR	5627463	AssignmentExpression	* quality = max_int		5627316	0		=			
ANR	5627464	UnaryOperationExpression	* quality		5627316	0					
ANR	5627465	UnaryOperator	*		5627316	0					
ANR	5627466	Identifier	quality		5627316	1					
ANR	5627467	Identifier	max_int		5627316	1					
ANR	5627468	ReturnStatement	return false ;	1658:8:66968:66980	5627316	1	True				
ANR	5627469	Identifier	false		5627316	0					
ANR	5627470	IfStatement	if ( vp1 / alpha_div > sp1 / alpha )		5627316	7					
ANR	5627471	Condition	vp1 / alpha_div > sp1 / alpha	1660:8:66996:67024	5627316	0	True				
ANR	5627472	RelationalExpression	vp1 / alpha_div > sp1 / alpha		5627316	0		>			
ANR	5627473	MultiplicativeExpression	vp1 / alpha_div		5627316	0		/			
ANR	5627474	Identifier	vp1		5627316	0					
ANR	5627475	Identifier	alpha_div		5627316	1					
ANR	5627476	MultiplicativeExpression	sp1 / alpha		5627316	1		/			
ANR	5627477	Identifier	sp1		5627316	0					
ANR	5627478	Identifier	alpha		5627316	1					
ANR	5627479	CompoundStatement		15:39:566:566	5627316	1					
ANR	5627480	ExpressionStatement	* quality = max_int	1661:8:67037:67055	5627316	0	True				
ANR	5627481	AssignmentExpression	* quality = max_int		5627316	0		=			
ANR	5627482	UnaryOperationExpression	* quality		5627316	0					
ANR	5627483	UnaryOperator	*		5627316	0					
ANR	5627484	Identifier	quality		5627316	1					
ANR	5627485	Identifier	max_int		5627316	1					
ANR	5627486	ReturnStatement	return false ;	1662:8:67065:67077	5627316	1	True				
ANR	5627487	Identifier	false		5627316	0					
ANR	5627488	ExpressionStatement	* quality = vp1 * 100 / sp1	1664:4:67089:67115	5627316	8	True				
ANR	5627489	AssignmentExpression	* quality = vp1 * 100 / sp1		5627316	0		=			
ANR	5627490	UnaryOperationExpression	* quality		5627316	0					
ANR	5627491	UnaryOperator	*		5627316	0					
ANR	5627492	Identifier	quality		5627316	1					
ANR	5627493	MultiplicativeExpression	vp1 * 100 / sp1		5627316	1		*			
ANR	5627494	Identifier	vp1		5627316	0					
ANR	5627495	MultiplicativeExpression	100 / sp1		5627316	1		/			
ANR	5627496	PrimaryExpression	100		5627316	0					
ANR	5627497	Identifier	sp1		5627316	1					
ANR	5627498	ReturnStatement	return true ;	1665:4:67150:67161	5627316	9	True				
ANR	5627499	Identifier	true		5627316	0					
ANR	5627500	ReturnType	static inline bool		5627316	1					
ANR	5627501	Identifier	t1_hinter__is_small_angle		5627316	2					
ANR	5627502	ParameterList	"t1_hinter * self , int pole_index0 , int pole_index1 , long tan_x , long tan_y , int alpha , int alpha_div , int * quality"		5627316	3					
ANR	5627503	Parameter	t1_hinter * self	1644:45:66336:66351	5627316	0	True				
ANR	5627504	ParameterType	t1_hinter *		5627316	0					
ANR	5627505	Identifier	self		5627316	1					
ANR	5627506	Parameter	int pole_index0	1644:63:66354:66368	5627316	1	True				
ANR	5627507	ParameterType	int		5627316	0					
ANR	5627508	Identifier	pole_index0		5627316	1					
ANR	5627509	Parameter	int pole_index1	1644:80:66371:66385	5627316	2	True				
ANR	5627510	ParameterType	int		5627316	0					
ANR	5627511	Identifier	pole_index1		5627316	1					
ANR	5627512	Parameter	long tan_x	1645:8:66396:66405	5627316	3	True				
ANR	5627513	ParameterType	long		5627316	0					
ANR	5627514	Identifier	tan_x		5627316	1					
ANR	5627515	Parameter	long tan_y	1645:20:66408:66417	5627316	4	True				
ANR	5627516	ParameterType	long		5627316	0					
ANR	5627517	Identifier	tan_y		5627316	1					
ANR	5627518	Parameter	int alpha	1645:32:66420:66428	5627316	5	True				
ANR	5627519	ParameterType	int		5627316	0					
ANR	5627520	Identifier	alpha		5627316	1					
ANR	5627521	Parameter	int alpha_div	1645:43:66431:66443	5627316	6	True				
ANR	5627522	ParameterType	int		5627316	0					
ANR	5627523	Identifier	alpha_div		5627316	1					
ANR	5627524	Parameter	int * quality	1645:58:66446:66457	5627316	7	True				
ANR	5627525	ParameterType	int *		5627316	0					
ANR	5627526	Identifier	quality		5627316	1					
ANR	5627527	CFGEntryNode	ENTRY		5627316		True				
ANR	5627528	CFGExitNode	EXIT		5627316		True				
ANR	5627529	Symbol	max_int		5627316						
ANR	5627530	Symbol	* self -> pole		5627316						
ANR	5627531	Symbol	mul_shift		5627316						
ANR	5627532	Symbol	tan_x		5627316						
ANR	5627533	Symbol	tan_y		5627316						
ANR	5627534	Symbol	alpha_div		5627316						
ANR	5627535	Symbol	alpha		5627316						
ANR	5627536	Symbol	any_abs		5627316						
ANR	5627537	Symbol	self -> pole		5627316						
ANR	5627538	Symbol	sp		5627316						
ANR	5627539	Symbol	_fixed_shift		5627316						
ANR	5627540	Symbol	* * self		5627316						
ANR	5627541	Symbol	* pole_index0		5627316						
ANR	5627542	Symbol	* self		5627316						
ANR	5627543	Symbol	false		5627316						
ANR	5627544	Symbol	quality		5627316						
ANR	5627545	Symbol	pole_index0		5627316						
ANR	5627546	Symbol	gx		5627316						
ANR	5627547	Symbol	gy		5627316						
ANR	5627548	Symbol	pole_index1		5627316						
ANR	5627549	Symbol	sp1		5627316						
ANR	5627550	Symbol	vp1		5627316						
ANR	5627551	Symbol	true		5627316						
ANR	5627552	Symbol	self		5627316						
ANR	5627553	Symbol	* pole_index1		5627316						
ANR	5627554	Symbol	* quality		5627316						
ANR	5627555	Symbol	self -> pole [ pole_index0 ] . gy		5627316						
ANR	5627556	Symbol	vp		5627316						
ANR	5627557	Symbol	self -> pole [ pole_index1 ] . gy		5627316						
ANR	5627558	Symbol	self -> pole [ pole_index0 ] . gx		5627316						
ANR	5627559	Symbol	self -> pole [ pole_index1 ] . gx		5627316						
ANR	5627560	Function	t1_hinter__next_contour_pole	1668:0:67166:67507							
ANR	5627561	FunctionDef	"t1_hinter__next_contour_pole (t1_hinter * self , int pole_index)"		5627560	0					
ANR	5627562	CompoundStatement		1669:0:67248:67507	5627560	0					
ANR	5627563	IdentifierDeclStatement	int contour_index = self -> pole [ pole_index ] . contour_index ;	1669:3:67252:67308	5627560	0	True				
ANR	5627564	IdentifierDecl	contour_index = self -> pole [ pole_index ] . contour_index		5627560	0					
ANR	5627565	IdentifierDeclType	int		5627560	0					
ANR	5627566	Identifier	contour_index		5627560	1					
ANR	5627567	AssignmentExpression	contour_index = self -> pole [ pole_index ] . contour_index		5627560	2		=			
ANR	5627568	Identifier	contour_index		5627560	0					
ANR	5627569	MemberAccess	self -> pole [ pole_index ] . contour_index		5627560	1					
ANR	5627570	ArrayIndexing	self -> pole [ pole_index ]		5627560	0					
ANR	5627571	PtrMemberAccess	self -> pole		5627560	0					
ANR	5627572	Identifier	self		5627560	0					
ANR	5627573	Identifier	pole		5627560	1					
ANR	5627574	Identifier	pole_index		5627560	1					
ANR	5627575	Identifier	contour_index		5627560	1					
ANR	5627576	IdentifierDeclStatement	int beg_contour_pole = self -> contour [ contour_index ] ;	1670:4:67314:67365	5627560	1	True				
ANR	5627577	IdentifierDecl	beg_contour_pole = self -> contour [ contour_index ]		5627560	0					
ANR	5627578	IdentifierDeclType	int		5627560	0					
ANR	5627579	Identifier	beg_contour_pole		5627560	1					
ANR	5627580	AssignmentExpression	beg_contour_pole = self -> contour [ contour_index ]		5627560	2		=			
ANR	5627581	Identifier	beg_contour_pole		5627560	0					
ANR	5627582	ArrayIndexing	self -> contour [ contour_index ]		5627560	1					
ANR	5627583	PtrMemberAccess	self -> contour		5627560	0					
ANR	5627584	Identifier	self		5627560	0					
ANR	5627585	Identifier	contour		5627560	1					
ANR	5627586	Identifier	contour_index		5627560	1					
ANR	5627587	IdentifierDeclStatement	int end_contour_pole = self -> contour [ contour_index + 1 ] - 2 ;	1671:4:67371:67430	5627560	2	True				
ANR	5627588	IdentifierDecl	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		5627560	0					
ANR	5627589	IdentifierDeclType	int		5627560	0					
ANR	5627590	Identifier	end_contour_pole		5627560	1					
ANR	5627591	AssignmentExpression	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		5627560	2		=			
ANR	5627592	Identifier	end_contour_pole		5627560	0					
ANR	5627593	AdditiveExpression	self -> contour [ contour_index + 1 ] - 2		5627560	1		-			
ANR	5627594	ArrayIndexing	self -> contour [ contour_index + 1 ]		5627560	0					
ANR	5627595	PtrMemberAccess	self -> contour		5627560	0					
ANR	5627596	Identifier	self		5627560	0					
ANR	5627597	Identifier	contour		5627560	1					
ANR	5627598	AdditiveExpression	contour_index + 1		5627560	1		+			
ANR	5627599	Identifier	contour_index		5627560	0					
ANR	5627600	PrimaryExpression	1		5627560	1					
ANR	5627601	PrimaryExpression	2		5627560	1					
ANR	5627602	ReturnStatement	"return ranger_step_f ( pole_index , beg_contour_pole , end_contour_pole ) ;"	1673:4:67437:67505	5627560	3	True				
ANR	5627603	CallExpression	"ranger_step_f ( pole_index , beg_contour_pole , end_contour_pole )"		5627560	0					
ANR	5627604	Callee	ranger_step_f		5627560	0					
ANR	5627605	Identifier	ranger_step_f		5627560	0					
ANR	5627606	ArgumentList	pole_index		5627560	1					
ANR	5627607	Argument	pole_index		5627560	0					
ANR	5627608	Identifier	pole_index		5627560	0					
ANR	5627609	Argument	beg_contour_pole		5627560	1					
ANR	5627610	Identifier	beg_contour_pole		5627560	0					
ANR	5627611	Argument	end_contour_pole		5627560	2					
ANR	5627612	Identifier	end_contour_pole		5627560	0					
ANR	5627613	ReturnType	static inline bool		5627560	1					
ANR	5627614	Identifier	t1_hinter__next_contour_pole		5627560	2					
ANR	5627615	ParameterList	"t1_hinter * self , int pole_index"		5627560	3					
ANR	5627616	Parameter	t1_hinter * self	1668:48:67214:67229	5627560	0	True				
ANR	5627617	ParameterType	t1_hinter *		5627560	0					
ANR	5627618	Identifier	self		5627560	1					
ANR	5627619	Parameter	int pole_index	1668:66:67232:67245	5627560	1	True				
ANR	5627620	ParameterType	int		5627560	0					
ANR	5627621	Identifier	pole_index		5627560	1					
ANR	5627622	CFGEntryNode	ENTRY		5627560		True				
ANR	5627623	CFGExitNode	EXIT		5627560		True				
ANR	5627624	Symbol	* self -> contour		5627560						
ANR	5627625	Symbol	ranger_step_f		5627560						
ANR	5627626	Symbol	self -> pole [ pole_index ] . contour_index		5627560						
ANR	5627627	Symbol	* self -> pole		5627560						
ANR	5627628	Symbol	* * self		5627560						
ANR	5627629	Symbol	* self		5627560						
ANR	5627630	Symbol	self -> contour		5627560						
ANR	5627631	Symbol	pole_index		5627560						
ANR	5627632	Symbol	* pole_index		5627560						
ANR	5627633	Symbol	end_contour_pole		5627560						
ANR	5627634	Symbol	self		5627560						
ANR	5627635	Symbol	self -> pole		5627560						
ANR	5627636	Symbol	contour_index		5627560						
ANR	5627637	Symbol	beg_contour_pole		5627560						
ANR	5627638	Symbol	* contour_index		5627560						
ANR	5627639	Function	t1_hinter__is_good_tangent	1676:0:67510:68418							
ANR	5627640	FunctionDef	"t1_hinter__is_good_tangent (t1_hinter * self , int pole_index , long tan_x , long tan_y , int * quality)"		5627639	0					
ANR	5627641	CompoundStatement		1677:0:67628:68418	5627639	0					
ANR	5627642	IdentifierDeclStatement	int contour_index = self -> pole [ pole_index ] . contour_index ;	1677:3:67632:67688	5627639	0	True				
ANR	5627643	IdentifierDecl	contour_index = self -> pole [ pole_index ] . contour_index		5627639	0					
ANR	5627644	IdentifierDeclType	int		5627639	0					
ANR	5627645	Identifier	contour_index		5627639	1					
ANR	5627646	AssignmentExpression	contour_index = self -> pole [ pole_index ] . contour_index		5627639	2		=			
ANR	5627647	Identifier	contour_index		5627639	0					
ANR	5627648	MemberAccess	self -> pole [ pole_index ] . contour_index		5627639	1					
ANR	5627649	ArrayIndexing	self -> pole [ pole_index ]		5627639	0					
ANR	5627650	PtrMemberAccess	self -> pole		5627639	0					
ANR	5627651	Identifier	self		5627639	0					
ANR	5627652	Identifier	pole		5627639	1					
ANR	5627653	Identifier	pole_index		5627639	1					
ANR	5627654	Identifier	contour_index		5627639	1					
ANR	5627655	IdentifierDeclStatement	int beg_contour_pole = self -> contour [ contour_index ] ;	1678:4:67694:67745	5627639	1	True				
ANR	5627656	IdentifierDecl	beg_contour_pole = self -> contour [ contour_index ]		5627639	0					
ANR	5627657	IdentifierDeclType	int		5627639	0					
ANR	5627658	Identifier	beg_contour_pole		5627639	1					
ANR	5627659	AssignmentExpression	beg_contour_pole = self -> contour [ contour_index ]		5627639	2		=			
ANR	5627660	Identifier	beg_contour_pole		5627639	0					
ANR	5627661	ArrayIndexing	self -> contour [ contour_index ]		5627639	1					
ANR	5627662	PtrMemberAccess	self -> contour		5627639	0					
ANR	5627663	Identifier	self		5627639	0					
ANR	5627664	Identifier	contour		5627639	1					
ANR	5627665	Identifier	contour_index		5627639	1					
ANR	5627666	IdentifierDeclStatement	"int end_contour_pole = self -> contour [ contour_index + 1 ] - 2 , prev , next ;"	1679:4:67751:67822	5627639	2	True				
ANR	5627667	IdentifierDecl	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		5627639	0					
ANR	5627668	IdentifierDeclType	int		5627639	0					
ANR	5627669	Identifier	end_contour_pole		5627639	1					
ANR	5627670	AssignmentExpression	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		5627639	2		=			
ANR	5627671	Identifier	end_contour_pole		5627639	0					
ANR	5627672	AdditiveExpression	self -> contour [ contour_index + 1 ] - 2		5627639	1		-			
ANR	5627673	ArrayIndexing	self -> contour [ contour_index + 1 ]		5627639	0					
ANR	5627674	PtrMemberAccess	self -> contour		5627639	0					
ANR	5627675	Identifier	self		5627639	0					
ANR	5627676	Identifier	contour		5627639	1					
ANR	5627677	AdditiveExpression	contour_index + 1		5627639	1		+			
ANR	5627678	Identifier	contour_index		5627639	0					
ANR	5627679	PrimaryExpression	1		5627639	1					
ANR	5627680	PrimaryExpression	2		5627639	1					
ANR	5627681	IdentifierDecl	prev		5627639	1					
ANR	5627682	IdentifierDeclType	int		5627639	0					
ANR	5627683	Identifier	prev		5627639	1					
ANR	5627684	IdentifierDecl	next		5627639	2					
ANR	5627685	IdentifierDeclType	int		5627639	0					
ANR	5627686	Identifier	next		5627639	1					
ANR	5627687	IdentifierDeclStatement	"int const alpha = 9 , alpha_div = 10 ;"	1680:4:67828:67863	5627639	3	True				
ANR	5627688	IdentifierDecl	alpha = 9		5627639	0					
ANR	5627689	IdentifierDeclType	int const		5627639	0					
ANR	5627690	Identifier	alpha		5627639	1					
ANR	5627691	AssignmentExpression	alpha = 9		5627639	2		=			
ANR	5627692	Identifier	alpha		5627639	0					
ANR	5627693	PrimaryExpression	9		5627639	1					
ANR	5627694	IdentifierDecl	alpha_div = 10		5627639	1					
ANR	5627695	IdentifierDeclType	int const		5627639	0					
ANR	5627696	Identifier	alpha_div		5627639	1					
ANR	5627697	AssignmentExpression	alpha_div = 10		5627639	2		=			
ANR	5627698	Identifier	alpha_div		5627639	0					
ANR	5627699	PrimaryExpression	10		5627639	1					
ANR	5627700	IdentifierDeclStatement	"int quality0 , quality1 ;"	1681:4:67869:67891	5627639	4	True				
ANR	5627701	IdentifierDecl	quality0		5627639	0					
ANR	5627702	IdentifierDeclType	int		5627639	0					
ANR	5627703	Identifier	quality0		5627639	1					
ANR	5627704	IdentifierDecl	quality1		5627639	1					
ANR	5627705	IdentifierDeclType	int		5627639	0					
ANR	5627706	Identifier	quality1		5627639	1					
ANR	5627707	IdentifierDeclStatement	"bool good0 , good1 ;"	1682:4:67897:67914	5627639	5	True				
ANR	5627708	IdentifierDecl	good0		5627639	0					
ANR	5627709	IdentifierDeclType	bool		5627639	0					
ANR	5627710	Identifier	good0		5627639	1					
ANR	5627711	IdentifierDecl	good1		5627639	1					
ANR	5627712	IdentifierDeclType	bool		5627639	0					
ANR	5627713	Identifier	good1		5627639	1					
ANR	5627714	ExpressionStatement	"prev = ranger_step_b ( pole_index , beg_contour_pole , end_contour_pole )"	1684:4:67921:67989	5627639	6	True				
ANR	5627715	AssignmentExpression	"prev = ranger_step_b ( pole_index , beg_contour_pole , end_contour_pole )"		5627639	0		=			
ANR	5627716	Identifier	prev		5627639	0					
ANR	5627717	CallExpression	"ranger_step_b ( pole_index , beg_contour_pole , end_contour_pole )"		5627639	1					
ANR	5627718	Callee	ranger_step_b		5627639	0					
ANR	5627719	Identifier	ranger_step_b		5627639	0					
ANR	5627720	ArgumentList	pole_index		5627639	1					
ANR	5627721	Argument	pole_index		5627639	0					
ANR	5627722	Identifier	pole_index		5627639	0					
ANR	5627723	Argument	beg_contour_pole		5627639	1					
ANR	5627724	Identifier	beg_contour_pole		5627639	0					
ANR	5627725	Argument	end_contour_pole		5627639	2					
ANR	5627726	Identifier	end_contour_pole		5627639	0					
ANR	5627727	ExpressionStatement	"good0 = t1_hinter__is_small_angle ( self , prev , pole_index , tan_x , tan_y , alpha , alpha_div , & quality0 )"	1685:4:67995:68095	5627639	7	True				
ANR	5627728	AssignmentExpression	"good0 = t1_hinter__is_small_angle ( self , prev , pole_index , tan_x , tan_y , alpha , alpha_div , & quality0 )"		5627639	0		=			
ANR	5627729	Identifier	good0		5627639	0					
ANR	5627730	CallExpression	"t1_hinter__is_small_angle ( self , prev , pole_index , tan_x , tan_y , alpha , alpha_div , & quality0 )"		5627639	1					
ANR	5627731	Callee	t1_hinter__is_small_angle		5627639	0					
ANR	5627732	Identifier	t1_hinter__is_small_angle		5627639	0					
ANR	5627733	ArgumentList	self		5627639	1					
ANR	5627734	Argument	self		5627639	0					
ANR	5627735	Identifier	self		5627639	0					
ANR	5627736	Argument	prev		5627639	1					
ANR	5627737	Identifier	prev		5627639	0					
ANR	5627738	Argument	pole_index		5627639	2					
ANR	5627739	Identifier	pole_index		5627639	0					
ANR	5627740	Argument	tan_x		5627639	3					
ANR	5627741	Identifier	tan_x		5627639	0					
ANR	5627742	Argument	tan_y		5627639	4					
ANR	5627743	Identifier	tan_y		5627639	0					
ANR	5627744	Argument	alpha		5627639	5					
ANR	5627745	Identifier	alpha		5627639	0					
ANR	5627746	Argument	alpha_div		5627639	6					
ANR	5627747	Identifier	alpha_div		5627639	0					
ANR	5627748	Argument	& quality0		5627639	7					
ANR	5627749	UnaryOperationExpression	& quality0		5627639	0					
ANR	5627750	UnaryOperator	&		5627639	0					
ANR	5627751	Identifier	quality0		5627639	1					
ANR	5627752	IfStatement	if ( quality0 == 0 )		5627639	8					
ANR	5627753	Condition	quality0 == 0	1686:8:68105:68117	5627639	0	True				
ANR	5627754	EqualityExpression	quality0 == 0		5627639	0		==			
ANR	5627755	Identifier	quality0		5627639	0					
ANR	5627756	PrimaryExpression	0		5627639	1					
ANR	5627757	CompoundStatement		10:23:491:491	5627639	1					
ANR	5627758	ExpressionStatement	* quality = 0	1687:8:68130:68142	5627639	0	True				
ANR	5627759	AssignmentExpression	* quality = 0		5627639	0		=			
ANR	5627760	UnaryOperationExpression	* quality		5627639	0					
ANR	5627761	UnaryOperator	*		5627639	0					
ANR	5627762	Identifier	quality		5627639	1					
ANR	5627763	PrimaryExpression	0		5627639	1					
ANR	5627764	ReturnStatement	return true ;	1688:8:68152:68163	5627639	1	True				
ANR	5627765	Identifier	true		5627639	0					
ANR	5627766	ExpressionStatement	"next = ranger_step_f ( pole_index , beg_contour_pole , end_contour_pole )"	1690:4:68175:68243	5627639	9	True				
ANR	5627767	AssignmentExpression	"next = ranger_step_f ( pole_index , beg_contour_pole , end_contour_pole )"		5627639	0		=			
ANR	5627768	Identifier	next		5627639	0					
ANR	5627769	CallExpression	"ranger_step_f ( pole_index , beg_contour_pole , end_contour_pole )"		5627639	1					
ANR	5627770	Callee	ranger_step_f		5627639	0					
ANR	5627771	Identifier	ranger_step_f		5627639	0					
ANR	5627772	ArgumentList	pole_index		5627639	1					
ANR	5627773	Argument	pole_index		5627639	0					
ANR	5627774	Identifier	pole_index		5627639	0					
ANR	5627775	Argument	beg_contour_pole		5627639	1					
ANR	5627776	Identifier	beg_contour_pole		5627639	0					
ANR	5627777	Argument	end_contour_pole		5627639	2					
ANR	5627778	Identifier	end_contour_pole		5627639	0					
ANR	5627779	ExpressionStatement	"good1 = t1_hinter__is_small_angle ( self , next , pole_index , tan_x , tan_y , alpha , alpha_div , & quality1 )"	1691:4:68249:68349	5627639	10	True				
ANR	5627780	AssignmentExpression	"good1 = t1_hinter__is_small_angle ( self , next , pole_index , tan_x , tan_y , alpha , alpha_div , & quality1 )"		5627639	0		=			
ANR	5627781	Identifier	good1		5627639	0					
ANR	5627782	CallExpression	"t1_hinter__is_small_angle ( self , next , pole_index , tan_x , tan_y , alpha , alpha_div , & quality1 )"		5627639	1					
ANR	5627783	Callee	t1_hinter__is_small_angle		5627639	0					
ANR	5627784	Identifier	t1_hinter__is_small_angle		5627639	0					
ANR	5627785	ArgumentList	self		5627639	1					
ANR	5627786	Argument	self		5627639	0					
ANR	5627787	Identifier	self		5627639	0					
ANR	5627788	Argument	next		5627639	1					
ANR	5627789	Identifier	next		5627639	0					
ANR	5627790	Argument	pole_index		5627639	2					
ANR	5627791	Identifier	pole_index		5627639	0					
ANR	5627792	Argument	tan_x		5627639	3					
ANR	5627793	Identifier	tan_x		5627639	0					
ANR	5627794	Argument	tan_y		5627639	4					
ANR	5627795	Identifier	tan_y		5627639	0					
ANR	5627796	Argument	alpha		5627639	5					
ANR	5627797	Identifier	alpha		5627639	0					
ANR	5627798	Argument	alpha_div		5627639	6					
ANR	5627799	Identifier	alpha_div		5627639	0					
ANR	5627800	Argument	& quality1		5627639	7					
ANR	5627801	UnaryOperationExpression	& quality1		5627639	0					
ANR	5627802	UnaryOperator	&		5627639	0					
ANR	5627803	Identifier	quality1		5627639	1					
ANR	5627804	ExpressionStatement	"* quality = min ( quality0 , quality1 )"	1692:4:68355:68389	5627639	11	True				
ANR	5627805	AssignmentExpression	"* quality = min ( quality0 , quality1 )"		5627639	0		=			
ANR	5627806	UnaryOperationExpression	* quality		5627639	0					
ANR	5627807	UnaryOperator	*		5627639	0					
ANR	5627808	Identifier	quality		5627639	1					
ANR	5627809	CallExpression	"min ( quality0 , quality1 )"		5627639	1					
ANR	5627810	Callee	min		5627639	0					
ANR	5627811	Identifier	min		5627639	0					
ANR	5627812	ArgumentList	quality0		5627639	1					
ANR	5627813	Argument	quality0		5627639	0					
ANR	5627814	Identifier	quality0		5627639	0					
ANR	5627815	Argument	quality1		5627639	1					
ANR	5627816	Identifier	quality1		5627639	0					
ANR	5627817	ReturnStatement	return good0 || good1 ;	1693:4:68395:68416	5627639	12	True				
ANR	5627818	OrExpression	good0 || good1		5627639	0		||			
ANR	5627819	Identifier	good0		5627639	0					
ANR	5627820	Identifier	good1		5627639	1					
ANR	5627821	ReturnType	static inline bool		5627639	1					
ANR	5627822	Identifier	t1_hinter__is_good_tangent		5627639	2					
ANR	5627823	ParameterList	"t1_hinter * self , int pole_index , long tan_x , long tan_y , int * quality"		5627639	3					
ANR	5627824	Parameter	t1_hinter * self	1676:46:67556:67571	5627639	0	True				
ANR	5627825	ParameterType	t1_hinter *		5627639	0					
ANR	5627826	Identifier	self		5627639	1					
ANR	5627827	Parameter	int pole_index	1676:64:67574:67587	5627639	1	True				
ANR	5627828	ParameterType	int		5627639	0					
ANR	5627829	Identifier	pole_index		5627639	1					
ANR	5627830	Parameter	long tan_x	1676:80:67590:67599	5627639	2	True				
ANR	5627831	ParameterType	long		5627639	0					
ANR	5627832	Identifier	tan_x		5627639	1					
ANR	5627833	Parameter	long tan_y	1676:92:67602:67611	5627639	3	True				
ANR	5627834	ParameterType	long		5627639	0					
ANR	5627835	Identifier	tan_y		5627639	1					
ANR	5627836	Parameter	int * quality	1676:104:67614:67625	5627639	4	True				
ANR	5627837	ParameterType	int *		5627639	0					
ANR	5627838	Identifier	quality		5627639	1					
ANR	5627839	CFGEntryNode	ENTRY		5627639		True				
ANR	5627840	CFGExitNode	EXIT		5627639		True				
ANR	5627841	Symbol	next		5627639						
ANR	5627842	Symbol	t1_hinter__is_small_angle		5627639						
ANR	5627843	Symbol	self -> pole [ pole_index ] . contour_index		5627639						
ANR	5627844	Symbol	* self -> pole		5627639						
ANR	5627845	Symbol	prev		5627639						
ANR	5627846	Symbol	tan_x		5627639						
ANR	5627847	Symbol	tan_y		5627639						
ANR	5627848	Symbol	good1		5627639						
ANR	5627849	Symbol	good0		5627639						
ANR	5627850	Symbol	alpha_div		5627639						
ANR	5627851	Symbol	min		5627639						
ANR	5627852	Symbol	quality1		5627639						
ANR	5627853	Symbol	quality0		5627639						
ANR	5627854	Symbol	alpha		5627639						
ANR	5627855	Symbol	self -> pole		5627639						
ANR	5627856	Symbol	contour_index		5627639						
ANR	5627857	Symbol	beg_contour_pole		5627639						
ANR	5627858	Symbol	* contour_index		5627639						
ANR	5627859	Symbol	* self -> contour		5627639						
ANR	5627860	Symbol	ranger_step_f		5627639						
ANR	5627861	Symbol	* * self		5627639						
ANR	5627862	Symbol	* self		5627639						
ANR	5627863	Symbol	ranger_step_b		5627639						
ANR	5627864	Symbol	quality		5627639						
ANR	5627865	Symbol	& quality1		5627639						
ANR	5627866	Symbol	self -> contour		5627639						
ANR	5627867	Symbol	pole_index		5627639						
ANR	5627868	Symbol	* pole_index		5627639						
ANR	5627869	Symbol	end_contour_pole		5627639						
ANR	5627870	Symbol	& quality0		5627639						
ANR	5627871	Symbol	true		5627639						
ANR	5627872	Symbol	self		5627639						
ANR	5627873	Symbol	* quality		5627639						
ANR	5627874	Function	t1_hinter__compute_type1_stem_ranges	1696:0:68421:69165							
ANR	5627875	FunctionDef	t1_hinter__compute_type1_stem_ranges (t1_hinter * self)		5627874	0					
ANR	5627876	CompoundStatement		1697:0:68488:69165	5627874	0					
ANR	5627877	IdentifierDeclStatement	int j ;	1697:3:68492:68497	5627874	0	True				
ANR	5627878	IdentifierDecl	j		5627874	0					
ANR	5627879	IdentifierDeclType	int		5627874	0					
ANR	5627880	Identifier	j		5627874	1					
ANR	5627881	IdentifierDeclStatement	int end_range_pole = self -> pole_count - 3 ;	1698:4:68503:68544	5627874	1	True				
ANR	5627882	IdentifierDecl	end_range_pole = self -> pole_count - 3		5627874	0					
ANR	5627883	IdentifierDeclType	int		5627874	0					
ANR	5627884	Identifier	end_range_pole		5627874	1					
ANR	5627885	AssignmentExpression	end_range_pole = self -> pole_count - 3		5627874	2		=			
ANR	5627886	Identifier	end_range_pole		5627874	0					
ANR	5627887	AdditiveExpression	self -> pole_count - 3		5627874	1		-			
ANR	5627888	PtrMemberAccess	self -> pole_count		5627874	0					
ANR	5627889	Identifier	self		5627874	0					
ANR	5627890	Identifier	pole_count		5627874	1					
ANR	5627891	PrimaryExpression	3		5627874	1					
ANR	5627892	IdentifierDeclStatement	int primary_hint_count = self -> primary_hint_count ;	1699:4:68550:68599	5627874	2	True				
ANR	5627893	IdentifierDecl	primary_hint_count = self -> primary_hint_count		5627874	0					
ANR	5627894	IdentifierDeclType	int		5627874	0					
ANR	5627895	Identifier	primary_hint_count		5627874	1					
ANR	5627896	AssignmentExpression	primary_hint_count = self -> primary_hint_count		5627874	2		=			
ANR	5627897	Identifier	primary_hint_count		5627874	0					
ANR	5627898	PtrMemberAccess	self -> primary_hint_count		5627874	1					
ANR	5627899	Identifier	self		5627874	0					
ANR	5627900	Identifier	primary_hint_count		5627874	1					
ANR	5627901	IfStatement	if ( self -> hint_count == 0 )		5627874	3					
ANR	5627902	Condition	self -> hint_count == 0	1701:8:68610:68630	5627874	0	True				
ANR	5627903	EqualityExpression	self -> hint_count == 0		5627874	0		==			
ANR	5627904	PtrMemberAccess	self -> hint_count		5627874	0					
ANR	5627905	Identifier	self		5627874	0					
ANR	5627906	Identifier	hint_count		5627874	1					
ANR	5627907	PrimaryExpression	0		5627874	1					
ANR	5627908	ReturnStatement	return ;	1702:8:68641:68647	5627874	1	True				
ANR	5627909	IfStatement	if ( primary_hint_count == - 1 )		5627874	4					
ANR	5627910	Condition	primary_hint_count == - 1	1703:8:68657:68680	5627874	0	True				
ANR	5627911	EqualityExpression	primary_hint_count == - 1		5627874	0		==			
ANR	5627912	Identifier	primary_hint_count		5627874	0					
ANR	5627913	UnaryOperationExpression	- 1		5627874	1					
ANR	5627914	UnaryOperator	-		5627874	0					
ANR	5627915	PrimaryExpression	1		5627874	1					
ANR	5627916	ExpressionStatement	primary_hint_count = self -> hint_range_count	1704:8:68691:68734	5627874	1	True				
ANR	5627917	AssignmentExpression	primary_hint_count = self -> hint_range_count		5627874	0		=			
ANR	5627918	Identifier	primary_hint_count		5627874	0					
ANR	5627919	PtrMemberAccess	self -> hint_range_count		5627874	1					
ANR	5627920	Identifier	self		5627874	0					
ANR	5627921	Identifier	hint_range_count		5627874	1					
ANR	5627922	ForStatement	for ( j = 0 ; j < primary_hint_count ; j ++ )		5627874	5					
ANR	5627923	ForInit	j = 0 ;	1706:8:68804:68809	5627874	0	True				
ANR	5627924	AssignmentExpression	j = 0		5627874	0		=			
ANR	5627925	Identifier	j		5627874	0					
ANR	5627926	PrimaryExpression	0		5627874	1					
ANR	5627927	Condition	j < primary_hint_count	1706:15:68811:68832	5627874	1	True				
ANR	5627928	RelationalExpression	j < primary_hint_count		5627874	0		<			
ANR	5627929	Identifier	j		5627874	0					
ANR	5627930	Identifier	primary_hint_count		5627874	1					
ANR	5627931	PostIncDecOperationExpression	j ++	1706:39:68835:68837	5627874	2	True				
ANR	5627932	Identifier	j		5627874	0					
ANR	5627933	IncDec	++		5627874	1					
ANR	5627934	CompoundStatement		10:49:356:356	5627874	3					
ANR	5627935	ExpressionStatement	self -> hint_range [ j ] . beg_pole = 0	1707:8:68855:68887	5627874	0	True				
ANR	5627936	AssignmentExpression	self -> hint_range [ j ] . beg_pole = 0		5627874	0		=			
ANR	5627937	MemberAccess	self -> hint_range [ j ] . beg_pole		5627874	0					
ANR	5627938	ArrayIndexing	self -> hint_range [ j ]		5627874	0					
ANR	5627939	PtrMemberAccess	self -> hint_range		5627874	0					
ANR	5627940	Identifier	self		5627874	0					
ANR	5627941	Identifier	hint_range		5627874	1					
ANR	5627942	Identifier	j		5627874	1					
ANR	5627943	Identifier	beg_pole		5627874	1					
ANR	5627944	PrimaryExpression	0		5627874	1					
ANR	5627945	ExpressionStatement	self -> hint_range [ j ] . end_pole = end_range_pole	1708:8:68897:68942	5627874	1	True				
ANR	5627946	AssignmentExpression	self -> hint_range [ j ] . end_pole = end_range_pole		5627874	0		=			
ANR	5627947	MemberAccess	self -> hint_range [ j ] . end_pole		5627874	0					
ANR	5627948	ArrayIndexing	self -> hint_range [ j ]		5627874	0					
ANR	5627949	PtrMemberAccess	self -> hint_range		5627874	0					
ANR	5627950	Identifier	self		5627874	0					
ANR	5627951	Identifier	hint_range		5627874	1					
ANR	5627952	Identifier	j		5627874	1					
ANR	5627953	Identifier	end_pole		5627874	1					
ANR	5627954	Identifier	end_range_pole		5627874	1					
ANR	5627955	ReturnType	static void		5627874	1					
ANR	5627956	Identifier	t1_hinter__compute_type1_stem_ranges		5627874	2					
ANR	5627957	ParameterList	t1_hinter * self		5627874	3					
ANR	5627958	Parameter	t1_hinter * self	1696:49:68470:68485	5627874	0	True				
ANR	5627959	ParameterType	t1_hinter *		5627874	0					
ANR	5627960	Identifier	self		5627874	1					
ANR	5627961	CFGEntryNode	ENTRY		5627874		True				
ANR	5627962	CFGExitNode	EXIT		5627874		True				
ANR	5627963	Symbol	end_range_pole		5627874						
ANR	5627964	Symbol	self -> pole_count		5627874						
ANR	5627965	Symbol	* * self		5627874						
ANR	5627966	Symbol	* self		5627874						
ANR	5627967	Symbol	j		5627874						
ANR	5627968	Symbol	self -> hint_range_count		5627874						
ANR	5627969	Symbol	self -> hint_range		5627874						
ANR	5627970	Symbol	self -> primary_hint_count		5627874						
ANR	5627971	Symbol	* self -> hint_range		5627874						
ANR	5627972	Symbol	self -> hint_count		5627874						
ANR	5627973	Symbol	* j		5627874						
ANR	5627974	Symbol	self -> hint_range [ j ] . end_pole		5627874						
ANR	5627975	Symbol	self -> hint_range [ j ] . beg_pole		5627874						
ANR	5627976	Symbol	self		5627874						
ANR	5627977	Symbol	primary_hint_count		5627874						
ANR	5627978	Function	t1_hinter__compute_type2_stem_ranges	1716:0:69168:69409							
ANR	5627979	FunctionDef	t1_hinter__compute_type2_stem_ranges (t1_hinter * self)		5627978	0					
ANR	5627980	CompoundStatement		1717:0:69235:69409	5627978	0					
ANR	5627981	IdentifierDeclStatement	int i ;	1717:3:69239:69244	5627978	0	True				
ANR	5627982	IdentifierDecl	i		5627978	0					
ANR	5627983	IdentifierDeclType	int		5627978	0					
ANR	5627984	Identifier	i		5627978	1					
ANR	5627985	ForStatement	for ( i = 0 ; i < self -> hint_range_count ; i ++ )		5627978	1					
ANR	5627986	ForInit	i = 0 ;	1719:9:69256:69261	5627978	0	True				
ANR	5627987	AssignmentExpression	i = 0		5627978	0		=			
ANR	5627988	Identifier	i		5627978	0					
ANR	5627989	PrimaryExpression	0		5627978	1					
ANR	5627990	Condition	i < self -> hint_range_count	1719:16:69263:69288	5627978	1	True				
ANR	5627991	RelationalExpression	i < self -> hint_range_count		5627978	0		<			
ANR	5627992	Identifier	i		5627978	0					
ANR	5627993	PtrMemberAccess	self -> hint_range_count		5627978	1					
ANR	5627994	Identifier	self		5627978	0					
ANR	5627995	Identifier	hint_range_count		5627978	1					
ANR	5627996	PostIncDecOperationExpression	i ++	1719:44:69291:69293	5627978	2	True				
ANR	5627997	Identifier	i		5627978	0					
ANR	5627998	IncDec	++		5627978	1					
ANR	5627999	IfStatement	if ( self -> hint_range [ i ] . end_pole == - 1 )		5627978	3					
ANR	5628000	Condition	self -> hint_range [ i ] . end_pole == - 1	1720:12:69308:69341	5627978	0	True				
ANR	5628001	EqualityExpression	self -> hint_range [ i ] . end_pole == - 1		5627978	0		==			
ANR	5628002	MemberAccess	self -> hint_range [ i ] . end_pole		5627978	0					
ANR	5628003	ArrayIndexing	self -> hint_range [ i ]		5627978	0					
ANR	5628004	PtrMemberAccess	self -> hint_range		5627978	0					
ANR	5628005	Identifier	self		5627978	0					
ANR	5628006	Identifier	hint_range		5627978	1					
ANR	5628007	Identifier	i		5627978	1					
ANR	5628008	Identifier	end_pole		5627978	1					
ANR	5628009	UnaryOperationExpression	- 1		5627978	1					
ANR	5628010	UnaryOperator	-		5627978	0					
ANR	5628011	PrimaryExpression	1		5627978	1					
ANR	5628012	ExpressionStatement	self -> hint_range [ i ] . end_pole = self -> pole_count - 2	1721:12:69356:69407	5627978	1	True				
ANR	5628013	AssignmentExpression	self -> hint_range [ i ] . end_pole = self -> pole_count - 2		5627978	0		=			
ANR	5628014	MemberAccess	self -> hint_range [ i ] . end_pole		5627978	0					
ANR	5628015	ArrayIndexing	self -> hint_range [ i ]		5627978	0					
ANR	5628016	PtrMemberAccess	self -> hint_range		5627978	0					
ANR	5628017	Identifier	self		5627978	0					
ANR	5628018	Identifier	hint_range		5627978	1					
ANR	5628019	Identifier	i		5627978	1					
ANR	5628020	Identifier	end_pole		5627978	1					
ANR	5628021	AdditiveExpression	self -> pole_count - 2		5627978	1		-			
ANR	5628022	PtrMemberAccess	self -> pole_count		5627978	0					
ANR	5628023	Identifier	self		5627978	0					
ANR	5628024	Identifier	pole_count		5627978	1					
ANR	5628025	PrimaryExpression	2		5627978	1					
ANR	5628026	ReturnType	static void		5627978	1					
ANR	5628027	Identifier	t1_hinter__compute_type2_stem_ranges		5627978	2					
ANR	5628028	ParameterList	t1_hinter * self		5627978	3					
ANR	5628029	Parameter	t1_hinter * self	1716:49:69217:69232	5627978	0	True				
ANR	5628030	ParameterType	t1_hinter *		5627978	0					
ANR	5628031	Identifier	self		5627978	1					
ANR	5628032	CFGEntryNode	ENTRY		5627978		True				
ANR	5628033	CFGExitNode	EXIT		5627978		True				
ANR	5628034	Symbol	* self -> hint_range		5627978						
ANR	5628035	Symbol	* i		5627978						
ANR	5628036	Symbol	* * self		5627978						
ANR	5628037	Symbol	self -> pole_count		5627978						
ANR	5628038	Symbol	* self		5627978						
ANR	5628039	Symbol	self -> hint_range [ i ] . end_pole		5627978						
ANR	5628040	Symbol	self		5627978						
ANR	5628041	Symbol	i		5627978						
ANR	5628042	Symbol	self -> hint_range_count		5627978						
ANR	5628043	Symbol	self -> hint_range		5627978						
ANR	5628044	Function	t1_hinter__is_stem_boundary_near	1724:0:69412:69701							
ANR	5628045	FunctionDef	"t1_hinter__is_stem_boundary_near (t1_hinter * self , const t1_hint * hint , t1_glyph_space_coord g , int boundary)"		5628044	0					
ANR	5628046	CompoundStatement		1726:0:69550:69701	5628044	0					
ANR	5628047	IdentifierDeclStatement	t1_glyph_space_coord const fuzz = self -> blue_fuzz ;	1727:4:69556:69605	5628044	0	True				
ANR	5628048	IdentifierDecl	fuzz = self -> blue_fuzz		5628044	0					
ANR	5628049	IdentifierDeclType	t1_glyph_space_coord const		5628044	0					
ANR	5628050	Identifier	fuzz		5628044	1					
ANR	5628051	AssignmentExpression	fuzz = self -> blue_fuzz		5628044	2		=			
ANR	5628052	Identifier	fuzz		5628044	0					
ANR	5628053	PtrMemberAccess	self -> blue_fuzz		5628044	1					
ANR	5628054	Identifier	self		5628044	0					
ANR	5628055	Identifier	blue_fuzz		5628044	1					
ANR	5628056	ReturnStatement	return any_abs ( g - ( boundary ? hint -> g1 : hint -> g0 ) ) <= fuzz ;	1729:4:69639:69699	5628044	1	True				
ANR	5628057	RelationalExpression	any_abs ( g - ( boundary ? hint -> g1 : hint -> g0 ) ) <= fuzz		5628044	0		<=			
ANR	5628058	CallExpression	any_abs ( g - ( boundary ? hint -> g1 : hint -> g0 ) )		5628044	0					
ANR	5628059	Callee	any_abs		5628044	0					
ANR	5628060	Identifier	any_abs		5628044	0					
ANR	5628061	ArgumentList	g - ( boundary ? hint -> g1 : hint -> g0 )		5628044	1					
ANR	5628062	Argument	g - ( boundary ? hint -> g1 : hint -> g0 )		5628044	0					
ANR	5628063	AdditiveExpression	g - ( boundary ? hint -> g1 : hint -> g0 )		5628044	0		-			
ANR	5628064	Identifier	g		5628044	0					
ANR	5628065	ConditionalExpression	boundary ? hint -> g1 : hint -> g0		5628044	1					
ANR	5628066	Condition	boundary		5628044	0					
ANR	5628067	Identifier	boundary		5628044	0					
ANR	5628068	PtrMemberAccess	hint -> g1		5628044	1					
ANR	5628069	Identifier	hint		5628044	0					
ANR	5628070	Identifier	g1		5628044	1					
ANR	5628071	PtrMemberAccess	hint -> g0		5628044	2					
ANR	5628072	Identifier	hint		5628044	0					
ANR	5628073	Identifier	g0		5628044	1					
ANR	5628074	Identifier	fuzz		5628044	1					
ANR	5628075	ReturnType	static bool		5628044	1					
ANR	5628076	Identifier	t1_hinter__is_stem_boundary_near		5628044	2					
ANR	5628077	ParameterList	"t1_hinter * self , const t1_hint * hint , t1_glyph_space_coord g , int boundary"		5628044	3					
ANR	5628078	Parameter	t1_hinter * self	1724:45:69457:69472	5628044	0	True				
ANR	5628079	ParameterType	t1_hinter *		5628044	0					
ANR	5628080	Identifier	self		5628044	1					
ANR	5628081	Parameter	const t1_hint * hint	1724:63:69475:69493	5628044	1	True				
ANR	5628082	ParameterType	const t1_hint *		5628044	0					
ANR	5628083	Identifier	hint		5628044	1					
ANR	5628084	Parameter	t1_glyph_space_coord g	1725:16:69512:69533	5628044	2	True				
ANR	5628085	ParameterType	t1_glyph_space_coord		5628044	0					
ANR	5628086	Identifier	g		5628044	1					
ANR	5628087	Parameter	int boundary	1725:40:69536:69547	5628044	3	True				
ANR	5628088	ParameterType	int		5628044	0					
ANR	5628089	Identifier	boundary		5628044	1					
ANR	5628090	CFGEntryNode	ENTRY		5628044		True				
ANR	5628091	CFGExitNode	EXIT		5628044		True				
ANR	5628092	Symbol	boundary		5628044						
ANR	5628093	Symbol	* hint		5628044						
ANR	5628094	Symbol	hint -> g0		5628044						
ANR	5628095	Symbol	* self		5628044						
ANR	5628096	Symbol	hint		5628044						
ANR	5628097	Symbol	g		5628044						
ANR	5628098	Symbol	any_abs		5628044						
ANR	5628099	Symbol	self		5628044						
ANR	5628100	Symbol	self -> blue_fuzz		5628044						
ANR	5628101	Symbol	hint -> g1		5628044						
ANR	5628102	Symbol	fuzz		5628044						
ANR	5628103	Function	t1_hinter__is_stem_hint_applicable	1732:0:69704:70592							
ANR	5628104	FunctionDef	"t1_hinter__is_stem_hint_applicable (t1_hinter * self , t1_hint * hint , int pole_index , int * quality)"		5628103	0					
ANR	5628105	CompoundStatement		1733:0:69813:70592	5628103	0					
ANR	5628106	IdentifierDeclStatement	int k ;	1734:4:69918:69923	5628103	0	True				
ANR	5628107	IdentifierDecl	k		5628103	0					
ANR	5628108	IdentifierDeclType	int		5628103	0					
ANR	5628109	Identifier	k		5628103	1					
ANR	5628110	IfStatement	"if ( hint -> type == hstem && ( ( k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 0 ) ) || ( k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 1 ) ) ) && t1_hinter__is_good_tangent ( self , pole_index , 1 , 0 , quality ) )"		5628103	1					
ANR	5628111	Condition	"hint -> type == hstem && ( ( k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 0 ) ) || ( k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 1 ) ) ) && t1_hinter__is_good_tangent ( self , pole_index , 1 , 0 , quality )"	1736:8:69934:70231	5628103	0	True				
ANR	5628112	AndExpression	"hint -> type == hstem && ( ( k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 0 ) ) || ( k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 1 ) ) ) && t1_hinter__is_good_tangent ( self , pole_index , 1 , 0 , quality )"		5628103	0		&&			
ANR	5628113	EqualityExpression	hint -> type == hstem		5628103	0		==			
ANR	5628114	PtrMemberAccess	hint -> type		5628103	0					
ANR	5628115	Identifier	hint		5628103	0					
ANR	5628116	Identifier	type		5628103	1					
ANR	5628117	Identifier	hstem		5628103	1					
ANR	5628118	AndExpression	"( ( k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 0 ) ) || ( k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 1 ) ) ) && t1_hinter__is_good_tangent ( self , pole_index , 1 , 0 , quality )"		5628103	1		&&			
ANR	5628119	OrExpression	"( k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 0 ) ) || ( k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 1 ) )"		5628103	0		||			
ANR	5628120	Expression	"k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 0 )"		5628103	0					
ANR	5628121	AssignmentExpression	k = 1		5628103	0		=			
ANR	5628122	Identifier	k		5628103	0					
ANR	5628123	PrimaryExpression	1		5628103	1					
ANR	5628124	CallExpression	"t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 0 )"		5628103	1					
ANR	5628125	Callee	t1_hinter__is_stem_boundary_near		5628103	0					
ANR	5628126	Identifier	t1_hinter__is_stem_boundary_near		5628103	0					
ANR	5628127	ArgumentList	self		5628103	1					
ANR	5628128	Argument	self		5628103	0					
ANR	5628129	Identifier	self		5628103	0					
ANR	5628130	Argument	hint		5628103	1					
ANR	5628131	Identifier	hint		5628103	0					
ANR	5628132	Argument	self -> pole [ pole_index ] . gy		5628103	2					
ANR	5628133	MemberAccess	self -> pole [ pole_index ] . gy		5628103	0					
ANR	5628134	ArrayIndexing	self -> pole [ pole_index ]		5628103	0					
ANR	5628135	PtrMemberAccess	self -> pole		5628103	0					
ANR	5628136	Identifier	self		5628103	0					
ANR	5628137	Identifier	pole		5628103	1					
ANR	5628138	Identifier	pole_index		5628103	1					
ANR	5628139	Identifier	gy		5628103	1					
ANR	5628140	Argument	0		5628103	3					
ANR	5628141	PrimaryExpression	0		5628103	0					
ANR	5628142	Expression	"k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 1 )"		5628103	1					
ANR	5628143	AssignmentExpression	k = 2		5628103	0		=			
ANR	5628144	Identifier	k		5628103	0					
ANR	5628145	PrimaryExpression	2		5628103	1					
ANR	5628146	CallExpression	"t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 1 )"		5628103	1					
ANR	5628147	Callee	t1_hinter__is_stem_boundary_near		5628103	0					
ANR	5628148	Identifier	t1_hinter__is_stem_boundary_near		5628103	0					
ANR	5628149	ArgumentList	self		5628103	1					
ANR	5628150	Argument	self		5628103	0					
ANR	5628151	Identifier	self		5628103	0					
ANR	5628152	Argument	hint		5628103	1					
ANR	5628153	Identifier	hint		5628103	0					
ANR	5628154	Argument	self -> pole [ pole_index ] . gy		5628103	2					
ANR	5628155	MemberAccess	self -> pole [ pole_index ] . gy		5628103	0					
ANR	5628156	ArrayIndexing	self -> pole [ pole_index ]		5628103	0					
ANR	5628157	PtrMemberAccess	self -> pole		5628103	0					
ANR	5628158	Identifier	self		5628103	0					
ANR	5628159	Identifier	pole		5628103	1					
ANR	5628160	Identifier	pole_index		5628103	1					
ANR	5628161	Identifier	gy		5628103	1					
ANR	5628162	Argument	1		5628103	3					
ANR	5628163	PrimaryExpression	1		5628103	0					
ANR	5628164	CallExpression	"t1_hinter__is_good_tangent ( self , pole_index , 1 , 0 , quality )"		5628103	1					
ANR	5628165	Callee	t1_hinter__is_good_tangent		5628103	0					
ANR	5628166	Identifier	t1_hinter__is_good_tangent		5628103	0					
ANR	5628167	ArgumentList	self		5628103	1					
ANR	5628168	Argument	self		5628103	0					
ANR	5628169	Identifier	self		5628103	0					
ANR	5628170	Argument	pole_index		5628103	1					
ANR	5628171	Identifier	pole_index		5628103	0					
ANR	5628172	Argument	1		5628103	2					
ANR	5628173	PrimaryExpression	1		5628103	0					
ANR	5628174	Argument	0		5628103	3					
ANR	5628175	PrimaryExpression	0		5628103	0					
ANR	5628176	Argument	quality		5628103	4					
ANR	5628177	Identifier	quality		5628103	0					
ANR	5628178	ReturnStatement	return k ;	1740:8:70242:70250	5628103	1	True				
ANR	5628179	Identifier	k		5628103	0					
ANR	5628180	IfStatement	"if ( hint -> type == vstem && ( ( k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 0 ) ) || ( k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 1 ) ) ) && t1_hinter__is_good_tangent ( self , pole_index , 0 , 1 , quality ) )"		5628103	2					
ANR	5628181	Condition	"hint -> type == vstem && ( ( k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 0 ) ) || ( k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 1 ) ) ) && t1_hinter__is_good_tangent ( self , pole_index , 0 , 1 , quality )"	1741:8:70260:70557	5628103	0	True				
ANR	5628182	AndExpression	"hint -> type == vstem && ( ( k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 0 ) ) || ( k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 1 ) ) ) && t1_hinter__is_good_tangent ( self , pole_index , 0 , 1 , quality )"		5628103	0		&&			
ANR	5628183	EqualityExpression	hint -> type == vstem		5628103	0		==			
ANR	5628184	PtrMemberAccess	hint -> type		5628103	0					
ANR	5628185	Identifier	hint		5628103	0					
ANR	5628186	Identifier	type		5628103	1					
ANR	5628187	Identifier	vstem		5628103	1					
ANR	5628188	AndExpression	"( ( k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 0 ) ) || ( k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 1 ) ) ) && t1_hinter__is_good_tangent ( self , pole_index , 0 , 1 , quality )"		5628103	1		&&			
ANR	5628189	OrExpression	"( k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 0 ) ) || ( k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 1 ) )"		5628103	0		||			
ANR	5628190	Expression	"k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 0 )"		5628103	0					
ANR	5628191	AssignmentExpression	k = 1		5628103	0		=			
ANR	5628192	Identifier	k		5628103	0					
ANR	5628193	PrimaryExpression	1		5628103	1					
ANR	5628194	CallExpression	"t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 0 )"		5628103	1					
ANR	5628195	Callee	t1_hinter__is_stem_boundary_near		5628103	0					
ANR	5628196	Identifier	t1_hinter__is_stem_boundary_near		5628103	0					
ANR	5628197	ArgumentList	self		5628103	1					
ANR	5628198	Argument	self		5628103	0					
ANR	5628199	Identifier	self		5628103	0					
ANR	5628200	Argument	hint		5628103	1					
ANR	5628201	Identifier	hint		5628103	0					
ANR	5628202	Argument	self -> pole [ pole_index ] . gx		5628103	2					
ANR	5628203	MemberAccess	self -> pole [ pole_index ] . gx		5628103	0					
ANR	5628204	ArrayIndexing	self -> pole [ pole_index ]		5628103	0					
ANR	5628205	PtrMemberAccess	self -> pole		5628103	0					
ANR	5628206	Identifier	self		5628103	0					
ANR	5628207	Identifier	pole		5628103	1					
ANR	5628208	Identifier	pole_index		5628103	1					
ANR	5628209	Identifier	gx		5628103	1					
ANR	5628210	Argument	0		5628103	3					
ANR	5628211	PrimaryExpression	0		5628103	0					
ANR	5628212	Expression	"k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 1 )"		5628103	1					
ANR	5628213	AssignmentExpression	k = 2		5628103	0		=			
ANR	5628214	Identifier	k		5628103	0					
ANR	5628215	PrimaryExpression	2		5628103	1					
ANR	5628216	CallExpression	"t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 1 )"		5628103	1					
ANR	5628217	Callee	t1_hinter__is_stem_boundary_near		5628103	0					
ANR	5628218	Identifier	t1_hinter__is_stem_boundary_near		5628103	0					
ANR	5628219	ArgumentList	self		5628103	1					
ANR	5628220	Argument	self		5628103	0					
ANR	5628221	Identifier	self		5628103	0					
ANR	5628222	Argument	hint		5628103	1					
ANR	5628223	Identifier	hint		5628103	0					
ANR	5628224	Argument	self -> pole [ pole_index ] . gx		5628103	2					
ANR	5628225	MemberAccess	self -> pole [ pole_index ] . gx		5628103	0					
ANR	5628226	ArrayIndexing	self -> pole [ pole_index ]		5628103	0					
ANR	5628227	PtrMemberAccess	self -> pole		5628103	0					
ANR	5628228	Identifier	self		5628103	0					
ANR	5628229	Identifier	pole		5628103	1					
ANR	5628230	Identifier	pole_index		5628103	1					
ANR	5628231	Identifier	gx		5628103	1					
ANR	5628232	Argument	1		5628103	3					
ANR	5628233	PrimaryExpression	1		5628103	0					
ANR	5628234	CallExpression	"t1_hinter__is_good_tangent ( self , pole_index , 0 , 1 , quality )"		5628103	1					
ANR	5628235	Callee	t1_hinter__is_good_tangent		5628103	0					
ANR	5628236	Identifier	t1_hinter__is_good_tangent		5628103	0					
ANR	5628237	ArgumentList	self		5628103	1					
ANR	5628238	Argument	self		5628103	0					
ANR	5628239	Identifier	self		5628103	0					
ANR	5628240	Argument	pole_index		5628103	1					
ANR	5628241	Identifier	pole_index		5628103	0					
ANR	5628242	Argument	0		5628103	2					
ANR	5628243	PrimaryExpression	0		5628103	0					
ANR	5628244	Argument	1		5628103	3					
ANR	5628245	PrimaryExpression	1		5628103	0					
ANR	5628246	Argument	quality		5628103	4					
ANR	5628247	Identifier	quality		5628103	0					
ANR	5628248	ReturnStatement	return k ;	1745:8:70568:70576	5628103	1	True				
ANR	5628249	Identifier	k		5628103	0					
ANR	5628250	ReturnStatement	return 0 ;	1746:4:70582:70590	5628103	3	True				
ANR	5628251	PrimaryExpression	0		5628103	0					
ANR	5628252	ReturnType	static int		5628103	1					
ANR	5628253	Identifier	t1_hinter__is_stem_hint_applicable		5628103	2					
ANR	5628254	ParameterList	"t1_hinter * self , t1_hint * hint , int pole_index , int * quality"		5628103	3					
ANR	5628255	Parameter	t1_hinter * self	1732:46:69750:69765	5628103	0	True				
ANR	5628256	ParameterType	t1_hinter *		5628103	0					
ANR	5628257	Identifier	self		5628103	1					
ANR	5628258	Parameter	t1_hint * hint	1732:64:69768:69780	5628103	1	True				
ANR	5628259	ParameterType	t1_hint *		5628103	0					
ANR	5628260	Identifier	hint		5628103	1					
ANR	5628261	Parameter	int pole_index	1732:79:69783:69796	5628103	2	True				
ANR	5628262	ParameterType	int		5628103	0					
ANR	5628263	Identifier	pole_index		5628103	1					
ANR	5628264	Parameter	int * quality	1732:95:69799:69810	5628103	3	True				
ANR	5628265	ParameterType	int *		5628103	0					
ANR	5628266	Identifier	quality		5628103	1					
ANR	5628267	CFGEntryNode	ENTRY		5628103		True				
ANR	5628268	CFGExitNode	EXIT		5628103		True				
ANR	5628269	Symbol	self -> pole [ pole_index ] . gy		5628103						
ANR	5628270	Symbol	* hint		5628103						
ANR	5628271	Symbol	self -> pole [ pole_index ] . gx		5628103						
ANR	5628272	Symbol	* self -> pole		5628103						
ANR	5628273	Symbol	* * self		5628103						
ANR	5628274	Symbol	* self		5628103						
ANR	5628275	Symbol	k		5628103						
ANR	5628276	Symbol	vstem		5628103						
ANR	5628277	Symbol	quality		5628103						
ANR	5628278	Symbol	pole_index		5628103						
ANR	5628279	Symbol	t1_hinter__is_good_tangent		5628103						
ANR	5628280	Symbol	* pole_index		5628103						
ANR	5628281	Symbol	hint		5628103						
ANR	5628282	Symbol	self		5628103						
ANR	5628283	Symbol	self -> pole		5628103						
ANR	5628284	Symbol	hint -> type		5628103						
ANR	5628285	Symbol	hstem		5628103						
ANR	5628286	Symbol	t1_hinter__is_stem_boundary_near		5628103						
ANR	5628287	Function	t1_hinter__find_zone	1749:0:70595:71152							
ANR	5628288	FunctionDef	"t1_hinter__find_zone (t1_hinter * self , t1_glyph_space_coord pole_y , bool curve , bool convex , bool concave)"		5628287	0					
ANR	5628289	CompoundStatement		1750:0:70719:71152	5628287	0					
ANR	5628290	IdentifierDeclStatement	bool maybe_top = ! curve || convex ;	1750:3:70723:70756	5628287	0	True				
ANR	5628291	IdentifierDecl	maybe_top = ! curve || convex		5628287	0					
ANR	5628292	IdentifierDeclType	bool		5628287	0					
ANR	5628293	Identifier	maybe_top		5628287	1					
ANR	5628294	AssignmentExpression	maybe_top = ! curve || convex		5628287	2		=			
ANR	5628295	Identifier	maybe_top		5628287	0					
ANR	5628296	OrExpression	! curve || convex		5628287	1		||			
ANR	5628297	UnaryOperationExpression	! curve		5628287	0					
ANR	5628298	UnaryOperator	!		5628287	0					
ANR	5628299	Identifier	curve		5628287	1					
ANR	5628300	Identifier	convex		5628287	1					
ANR	5628301	IdentifierDeclStatement	bool maybe_bot = ! curve || concave ;	1751:4:70762:70796	5628287	1	True				
ANR	5628302	IdentifierDecl	maybe_bot = ! curve || concave		5628287	0					
ANR	5628303	IdentifierDeclType	bool		5628287	0					
ANR	5628304	Identifier	maybe_bot		5628287	1					
ANR	5628305	AssignmentExpression	maybe_bot = ! curve || concave		5628287	2		=			
ANR	5628306	Identifier	maybe_bot		5628287	0					
ANR	5628307	OrExpression	! curve || concave		5628287	1		||			
ANR	5628308	UnaryOperationExpression	! curve		5628287	0					
ANR	5628309	UnaryOperator	!		5628287	0					
ANR	5628310	Identifier	curve		5628287	1					
ANR	5628311	Identifier	concave		5628287	1					
ANR	5628312	IdentifierDeclStatement	int i ;	1752:4:70802:70807	5628287	2	True				
ANR	5628313	IdentifierDecl	i		5628287	0					
ANR	5628314	IdentifierDeclType	int		5628287	0					
ANR	5628315	Identifier	i		5628287	1					
ANR	5628316	ForStatement	for ( i = 0 ; i < self -> zone_count ; i ++ )		5628287	3					
ANR	5628317	ForInit	i = 0 ;	1754:9:70819:70824	5628287	0	True				
ANR	5628318	AssignmentExpression	i = 0		5628287	0		=			
ANR	5628319	Identifier	i		5628287	0					
ANR	5628320	PrimaryExpression	0		5628287	1					
ANR	5628321	Condition	i < self -> zone_count	1754:16:70826:70845	5628287	1	True				
ANR	5628322	RelationalExpression	i < self -> zone_count		5628287	0		<			
ANR	5628323	Identifier	i		5628287	0					
ANR	5628324	PtrMemberAccess	self -> zone_count		5628287	1					
ANR	5628325	Identifier	self		5628287	0					
ANR	5628326	Identifier	zone_count		5628287	1					
ANR	5628327	PostIncDecOperationExpression	i ++	1754:38:70848:70850	5628287	2	True				
ANR	5628328	Identifier	i		5628287	0					
ANR	5628329	IncDec	++		5628287	1					
ANR	5628330	CompoundStatement		6:8:143:173	5628287	3					
ANR	5628331	IdentifierDeclStatement	t1_zone * zone = & self -> zone [ i ] ;	1755:8:70863:70893	5628287	0	True				
ANR	5628332	IdentifierDecl	* zone = & self -> zone [ i ]		5628287	0					
ANR	5628333	IdentifierDeclType	t1_zone *		5628287	0					
ANR	5628334	Identifier	zone		5628287	1					
ANR	5628335	AssignmentExpression	* zone = & self -> zone [ i ]		5628287	2		=			
ANR	5628336	Identifier	zone		5628287	0					
ANR	5628337	UnaryOperationExpression	& self -> zone [ i ]		5628287	1					
ANR	5628338	UnaryOperator	&		5628287	0					
ANR	5628339	ArrayIndexing	self -> zone [ i ]		5628287	1					
ANR	5628340	PtrMemberAccess	self -> zone		5628287	0					
ANR	5628341	Identifier	self		5628287	0					
ANR	5628342	Identifier	zone		5628287	1					
ANR	5628343	Identifier	i		5628287	1					
ANR	5628344	IfStatement	if ( ( maybe_top && zone -> type == topzone ) || ( maybe_bot && zone -> type == botzone ) )		5628287	1					
ANR	5628345	Condition	( maybe_top && zone -> type == topzone ) || ( maybe_bot && zone -> type == botzone )	1756:12:70907:70982	5628287	0	True				
ANR	5628346	OrExpression	( maybe_top && zone -> type == topzone ) || ( maybe_bot && zone -> type == botzone )		5628287	0		||			
ANR	5628347	AndExpression	maybe_top && zone -> type == topzone		5628287	0		&&			
ANR	5628348	Identifier	maybe_top		5628287	0					
ANR	5628349	EqualityExpression	zone -> type == topzone		5628287	1		==			
ANR	5628350	PtrMemberAccess	zone -> type		5628287	0					
ANR	5628351	Identifier	zone		5628287	0					
ANR	5628352	Identifier	type		5628287	1					
ANR	5628353	Identifier	topzone		5628287	1					
ANR	5628354	AndExpression	maybe_bot && zone -> type == botzone		5628287	1		&&			
ANR	5628355	Identifier	maybe_bot		5628287	0					
ANR	5628356	EqualityExpression	zone -> type == botzone		5628287	1		==			
ANR	5628357	PtrMemberAccess	zone -> type		5628287	0					
ANR	5628358	Identifier	zone		5628287	0					
ANR	5628359	Identifier	type		5628287	1					
ANR	5628360	Identifier	botzone		5628287	1					
ANR	5628361	IfStatement	if ( zone -> y_min <= pole_y && pole_y <= zone -> y_max )		5628287	1					
ANR	5628362	Condition	zone -> y_min <= pole_y && pole_y <= zone -> y_max	1757:16:71001:71046	5628287	0	True				
ANR	5628363	AndExpression	zone -> y_min <= pole_y && pole_y <= zone -> y_max		5628287	0		&&			
ANR	5628364	RelationalExpression	zone -> y_min <= pole_y		5628287	0		<=			
ANR	5628365	PtrMemberAccess	zone -> y_min		5628287	0					
ANR	5628366	Identifier	zone		5628287	0					
ANR	5628367	Identifier	y_min		5628287	1					
ANR	5628368	Identifier	pole_y		5628287	1					
ANR	5628369	RelationalExpression	pole_y <= zone -> y_max		5628287	1		<=			
ANR	5628370	Identifier	pole_y		5628287	0					
ANR	5628371	PtrMemberAccess	zone -> y_max		5628287	1					
ANR	5628372	Identifier	zone		5628287	0					
ANR	5628373	Identifier	y_max		5628287	1					
ANR	5628374	ReturnStatement	return zone ;	1758:16:71065:71076	5628287	1	True				
ANR	5628375	Identifier	zone		5628287	0					
ANR	5628376	ReturnStatement	return NULL ;	1760:4:71088:71099	5628287	4	True				
ANR	5628377	Identifier	NULL		5628287	0					
ANR	5628378	ReturnType	static t1_zone *		5628287	1					
ANR	5628379	Identifier	t1_hinter__find_zone		5628287	2					
ANR	5628380	ParameterList	"t1_hinter * self , t1_glyph_space_coord pole_y , bool curve , bool convex , bool concave"		5628287	3					
ANR	5628381	Parameter	t1_hinter * self	1749:38:70633:70648	5628287	0	True				
ANR	5628382	ParameterType	t1_hinter *		5628287	0					
ANR	5628383	Identifier	self		5628287	1					
ANR	5628384	Parameter	t1_glyph_space_coord pole_y	1749:56:70651:70677	5628287	1	True				
ANR	5628385	ParameterType	t1_glyph_space_coord		5628287	0					
ANR	5628386	Identifier	pole_y		5628287	1					
ANR	5628387	Parameter	bool curve	1749:85:70680:70689	5628287	2	True				
ANR	5628388	ParameterType	bool		5628287	0					
ANR	5628389	Identifier	curve		5628287	1					
ANR	5628390	Parameter	bool convex	1749:97:70692:70702	5628287	3	True				
ANR	5628391	ParameterType	bool		5628287	0					
ANR	5628392	Identifier	convex		5628287	1					
ANR	5628393	Parameter	bool concave	1749:110:70705:70716	5628287	4	True				
ANR	5628394	ParameterType	bool		5628287	0					
ANR	5628395	Identifier	concave		5628287	1					
ANR	5628396	CFGEntryNode	ENTRY		5628287		True				
ANR	5628397	CFGExitNode	EXIT		5628287		True				
ANR	5628398	Symbol	concave		5628287						
ANR	5628399	Symbol	maybe_top		5628287						
ANR	5628400	Symbol	topzone		5628287						
ANR	5628401	Symbol	NULL		5628287						
ANR	5628402	Symbol	curve		5628287						
ANR	5628403	Symbol	* zone		5628287						
ANR	5628404	Symbol	* self		5628287						
ANR	5628405	Symbol	i		5628287						
ANR	5628406	Symbol	self -> zone		5628287						
ANR	5628407	Symbol	maybe_bot		5628287						
ANR	5628408	Symbol	zone -> y_max		5628287						
ANR	5628409	Symbol	self -> zone_count		5628287						
ANR	5628410	Symbol	zone -> type		5628287						
ANR	5628411	Symbol	zone		5628287						
ANR	5628412	Symbol	convex		5628287						
ANR	5628413	Symbol	self		5628287						
ANR	5628414	Symbol	botzone		5628287						
ANR	5628415	Symbol	zone -> y_min		5628287						
ANR	5628416	Symbol	pole_y		5628287						
ANR	5628417	Function	t1_hinter__align_to_grid__general	1764:0:71155:72100							
ANR	5628418	FunctionDef	"t1_hinter__align_to_grid__general (t1_hinter * self , int32_t unit , t1_glyph_space_coord gx , t1_glyph_space_coord gy , t1_hinter_space_coord * pdx , t1_hinter_space_coord * pdy , bool align_to_pixels , bool absolute)"		5628417	0					
ANR	5628419	CompoundStatement		1768:0:71412:72100	5628417	0					
ANR	5628420	IdentifierDeclStatement	"long div_x = rshift ( unit , ( align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x ) ) ;"	1769:4:71418:71514	5628417	0	True				
ANR	5628421	IdentifierDecl	"div_x = rshift ( unit , ( align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x ) )"		5628417	0					
ANR	5628422	IdentifierDeclType	long		5628417	0					
ANR	5628423	Identifier	div_x		5628417	1					
ANR	5628424	AssignmentExpression	"div_x = rshift ( unit , ( align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x ) )"		5628417	2		=			
ANR	5628425	Identifier	div_x		5628417	0					
ANR	5628426	CallExpression	"rshift ( unit , ( align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x ) )"		5628417	1					
ANR	5628427	Callee	rshift		5628417	0					
ANR	5628428	Identifier	rshift		5628417	0					
ANR	5628429	ArgumentList	unit		5628417	1					
ANR	5628430	Argument	unit		5628417	0					
ANR	5628431	Identifier	unit		5628417	0					
ANR	5628432	Argument	align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x		5628417	1					
ANR	5628433	ConditionalExpression	align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x		5628417	0					
ANR	5628434	Condition	align_to_pixels		5628417	0					
ANR	5628435	Identifier	align_to_pixels		5628417	0					
ANR	5628436	CastExpression	( int ) self -> log2_pixels_x		5628417	1					
ANR	5628437	CastTarget	int		5628417	0					
ANR	5628438	PtrMemberAccess	self -> log2_pixels_x		5628417	1					
ANR	5628439	Identifier	self		5628417	0					
ANR	5628440	Identifier	log2_pixels_x		5628417	1					
ANR	5628441	PtrMemberAccess	self -> log2_subpixels_x		5628417	2					
ANR	5628442	Identifier	self		5628417	0					
ANR	5628443	Identifier	log2_subpixels_x		5628417	1					
ANR	5628444	IdentifierDeclStatement	"long div_y = rshift ( unit , ( align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y ) ) ;"	1770:4:71520:71616	5628417	1	True				
ANR	5628445	IdentifierDecl	"div_y = rshift ( unit , ( align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y ) )"		5628417	0					
ANR	5628446	IdentifierDeclType	long		5628417	0					
ANR	5628447	Identifier	div_y		5628417	1					
ANR	5628448	AssignmentExpression	"div_y = rshift ( unit , ( align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y ) )"		5628417	2		=			
ANR	5628449	Identifier	div_y		5628417	0					
ANR	5628450	CallExpression	"rshift ( unit , ( align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y ) )"		5628417	1					
ANR	5628451	Callee	rshift		5628417	0					
ANR	5628452	Identifier	rshift		5628417	0					
ANR	5628453	ArgumentList	unit		5628417	1					
ANR	5628454	Argument	unit		5628417	0					
ANR	5628455	Identifier	unit		5628417	0					
ANR	5628456	Argument	align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y		5628417	1					
ANR	5628457	ConditionalExpression	align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y		5628417	0					
ANR	5628458	Condition	align_to_pixels		5628417	0					
ANR	5628459	Identifier	align_to_pixels		5628417	0					
ANR	5628460	CastExpression	( int ) self -> log2_pixels_y		5628417	1					
ANR	5628461	CastTarget	int		5628417	0					
ANR	5628462	PtrMemberAccess	self -> log2_pixels_y		5628417	1					
ANR	5628463	Identifier	self		5628417	0					
ANR	5628464	Identifier	log2_pixels_y		5628417	1					
ANR	5628465	PtrMemberAccess	self -> log2_subpixels_y		5628417	2					
ANR	5628466	Identifier	self		5628417	0					
ANR	5628467	Identifier	log2_subpixels_y		5628417	1					
ANR	5628468	IdentifierDeclStatement	"t1_hinter_space_coord ox , oy , dx , dy ;"	1771:4:71622:71658	5628417	2	True				
ANR	5628469	IdentifierDecl	ox		5628417	0					
ANR	5628470	IdentifierDeclType	t1_hinter_space_coord		5628417	0					
ANR	5628471	Identifier	ox		5628417	1					
ANR	5628472	IdentifierDecl	oy		5628417	1					
ANR	5628473	IdentifierDeclType	t1_hinter_space_coord		5628417	0					
ANR	5628474	Identifier	oy		5628417	1					
ANR	5628475	IdentifierDecl	dx		5628417	2					
ANR	5628476	IdentifierDeclType	t1_hinter_space_coord		5628417	0					
ANR	5628477	Identifier	dx		5628417	1					
ANR	5628478	IdentifierDecl	dy		5628417	3					
ANR	5628479	IdentifierDeclType	t1_hinter_space_coord		5628417	0					
ANR	5628480	Identifier	dy		5628417	1					
ANR	5628481	ExpressionStatement	"g2o ( self , gx , gy , & ox , & oy )"	1773:4:71665:71692	5628417	3	True				
ANR	5628482	CallExpression	"g2o ( self , gx , gy , & ox , & oy )"		5628417	0					
ANR	5628483	Callee	g2o		5628417	0					
ANR	5628484	Identifier	g2o		5628417	0					
ANR	5628485	ArgumentList	self		5628417	1					
ANR	5628486	Argument	self		5628417	0					
ANR	5628487	Identifier	self		5628417	0					
ANR	5628488	Argument	gx		5628417	1					
ANR	5628489	Identifier	gx		5628417	0					
ANR	5628490	Argument	gy		5628417	2					
ANR	5628491	Identifier	gy		5628417	0					
ANR	5628492	Argument	& ox		5628417	3					
ANR	5628493	UnaryOperationExpression	& ox		5628417	0					
ANR	5628494	UnaryOperator	&		5628417	0					
ANR	5628495	Identifier	ox		5628417	1					
ANR	5628496	Argument	& oy		5628417	4					
ANR	5628497	UnaryOperationExpression	& oy		5628417	0					
ANR	5628498	UnaryOperator	&		5628417	0					
ANR	5628499	Identifier	oy		5628417	1					
ANR	5628500	IfStatement	if ( absolute )		5628417	4					
ANR	5628501	Condition	absolute	1774:8:71702:71709	5628417	0	True				
ANR	5628502	Identifier	absolute		5628417	0					
ANR	5628503	CompoundStatement		7:18:299:299	5628417	1					
ANR	5628504	ExpressionStatement	ox += self -> orig_ox	1775:8:71722:71741	5628417	0	True				
ANR	5628505	AssignmentExpression	ox += self -> orig_ox		5628417	0		+=			
ANR	5628506	Identifier	ox		5628417	0					
ANR	5628507	PtrMemberAccess	self -> orig_ox		5628417	1					
ANR	5628508	Identifier	self		5628417	0					
ANR	5628509	Identifier	orig_ox		5628417	1					
ANR	5628510	ExpressionStatement	oy += self -> orig_oy	1776:8:71751:71770	5628417	1	True				
ANR	5628511	AssignmentExpression	oy += self -> orig_oy		5628417	0		+=			
ANR	5628512	Identifier	oy		5628417	0					
ANR	5628513	PtrMemberAccess	self -> orig_oy		5628417	1					
ANR	5628514	Identifier	self		5628417	0					
ANR	5628515	Identifier	orig_oy		5628417	1					
ANR	5628516	ExpressionStatement	dx = ox % div_x	1778:4:71782:71797	5628417	5	True				
ANR	5628517	AssignmentExpression	dx = ox % div_x		5628417	0		=			
ANR	5628518	Identifier	dx		5628417	0					
ANR	5628519	MultiplicativeExpression	ox % div_x		5628417	1		%			
ANR	5628520	Identifier	ox		5628417	0					
ANR	5628521	Identifier	div_x		5628417	1					
ANR	5628522	ExpressionStatement	dy = oy % div_y	1779:4:71803:71818	5628417	6	True				
ANR	5628523	AssignmentExpression	dy = oy % div_y		5628417	0		=			
ANR	5628524	Identifier	dy		5628417	0					
ANR	5628525	MultiplicativeExpression	oy % div_y		5628417	1		%			
ANR	5628526	Identifier	oy		5628417	0					
ANR	5628527	Identifier	div_y		5628417	1					
ANR	5628528	IfStatement	if ( dx > div_x / 2 )		5628417	7					
ANR	5628529	Condition	dx > div_x / 2	1780:8:71863:71876	5628417	0	True				
ANR	5628530	RelationalExpression	dx > div_x / 2		5628417	0		>			
ANR	5628531	Identifier	dx		5628417	0					
ANR	5628532	MultiplicativeExpression	div_x / 2		5628417	1		/			
ANR	5628533	Identifier	div_x		5628417	0					
ANR	5628534	PrimaryExpression	2		5628417	1					
ANR	5628535	ExpressionStatement	dx = - div_x + dx	1781:8:71888:71905	5628417	1	True				
ANR	5628536	AssignmentExpression	dx = - div_x + dx		5628417	0		=			
ANR	5628537	Identifier	dx		5628417	0					
ANR	5628538	AdditiveExpression	- div_x + dx		5628417	1		+			
ANR	5628539	UnaryOperationExpression	- div_x		5628417	0					
ANR	5628540	UnaryOperator	-		5628417	0					
ANR	5628541	Identifier	div_x		5628417	1					
ANR	5628542	Identifier	dx		5628417	1					
ANR	5628543	ElseStatement	else		5628417	0					
ANR	5628544	IfStatement	if ( dx < - div_x / 2 )		5628417	0					
ANR	5628545	Condition	dx < - div_x / 2	1782:13:71920:71935	5628417	0	True				
ANR	5628546	RelationalExpression	dx < - div_x / 2		5628417	0		<			
ANR	5628547	Identifier	dx		5628417	0					
ANR	5628548	MultiplicativeExpression	- div_x / 2		5628417	1		/			
ANR	5628549	UnaryOperationExpression	- div_x		5628417	0					
ANR	5628550	UnaryOperator	-		5628417	0					
ANR	5628551	Identifier	div_x		5628417	1					
ANR	5628552	PrimaryExpression	2		5628417	1					
ANR	5628553	ExpressionStatement	dx = div_x + dx	1783:8:71946:71961	5628417	1	True				
ANR	5628554	AssignmentExpression	dx = div_x + dx		5628417	0		=			
ANR	5628555	Identifier	dx		5628417	0					
ANR	5628556	AdditiveExpression	div_x + dx		5628417	1		+			
ANR	5628557	Identifier	div_x		5628417	0					
ANR	5628558	Identifier	dx		5628417	1					
ANR	5628559	IfStatement	if ( dy > div_y / 2 )		5628417	8					
ANR	5628560	Condition	dy > div_y / 2	1784:8:71971:71984	5628417	0	True				
ANR	5628561	RelationalExpression	dy > div_y / 2		5628417	0		>			
ANR	5628562	Identifier	dy		5628417	0					
ANR	5628563	MultiplicativeExpression	div_y / 2		5628417	1		/			
ANR	5628564	Identifier	div_y		5628417	0					
ANR	5628565	PrimaryExpression	2		5628417	1					
ANR	5628566	ExpressionStatement	dy = - div_y + dy	1785:8:71995:72012	5628417	1	True				
ANR	5628567	AssignmentExpression	dy = - div_y + dy		5628417	0		=			
ANR	5628568	Identifier	dy		5628417	0					
ANR	5628569	AdditiveExpression	- div_y + dy		5628417	1		+			
ANR	5628570	UnaryOperationExpression	- div_y		5628417	0					
ANR	5628571	UnaryOperator	-		5628417	0					
ANR	5628572	Identifier	div_y		5628417	1					
ANR	5628573	Identifier	dy		5628417	1					
ANR	5628574	ElseStatement	else		5628417	0					
ANR	5628575	IfStatement	if ( dy < - div_y / 2 )		5628417	0					
ANR	5628576	Condition	dy < - div_y / 2	1786:13:72027:72042	5628417	0	True				
ANR	5628577	RelationalExpression	dy < - div_y / 2		5628417	0		<			
ANR	5628578	Identifier	dy		5628417	0					
ANR	5628579	MultiplicativeExpression	- div_y / 2		5628417	1		/			
ANR	5628580	UnaryOperationExpression	- div_y		5628417	0					
ANR	5628581	UnaryOperator	-		5628417	0					
ANR	5628582	Identifier	div_y		5628417	1					
ANR	5628583	PrimaryExpression	2		5628417	1					
ANR	5628584	ExpressionStatement	dy = div_y + dy	1787:8:72053:72068	5628417	1	True				
ANR	5628585	AssignmentExpression	dy = div_y + dy		5628417	0		=			
ANR	5628586	Identifier	dy		5628417	0					
ANR	5628587	AdditiveExpression	div_y + dy		5628417	1		+			
ANR	5628588	Identifier	div_y		5628417	0					
ANR	5628589	Identifier	dy		5628417	1					
ANR	5628590	ExpressionStatement	* pdx = dx	1788:4:72074:72083	5628417	9	True				
ANR	5628591	AssignmentExpression	* pdx = dx		5628417	0		=			
ANR	5628592	UnaryOperationExpression	* pdx		5628417	0					
ANR	5628593	UnaryOperator	*		5628417	0					
ANR	5628594	Identifier	pdx		5628417	1					
ANR	5628595	Identifier	dx		5628417	1					
ANR	5628596	ExpressionStatement	* pdy = dy	1789:4:72089:72098	5628417	10	True				
ANR	5628597	AssignmentExpression	* pdy = dy		5628417	0		=			
ANR	5628598	UnaryOperationExpression	* pdy		5628417	0					
ANR	5628599	UnaryOperator	*		5628417	0					
ANR	5628600	Identifier	pdy		5628417	1					
ANR	5628601	Identifier	dy		5628417	1					
ANR	5628602	ReturnType	static void		5628417	1					
ANR	5628603	Identifier	t1_hinter__align_to_grid__general		5628417	2					
ANR	5628604	ParameterList	"t1_hinter * self , int32_t unit , t1_glyph_space_coord gx , t1_glyph_space_coord gy , t1_hinter_space_coord * pdx , t1_hinter_space_coord * pdy , bool align_to_pixels , bool absolute"		5628417	3					
ANR	5628605	Parameter	t1_hinter * self	1764:46:71201:71216	5628417	0	True				
ANR	5628606	ParameterType	t1_hinter *		5628417	0					
ANR	5628607	Identifier	self		5628417	1					
ANR	5628608	Parameter	int32_t unit	1764:64:71219:71230	5628417	1	True				
ANR	5628609	ParameterType	int32_t		5628417	0					
ANR	5628610	Identifier	unit		5628417	1					
ANR	5628611	Parameter	t1_glyph_space_coord gx	1765:12:71245:71267	5628417	2	True				
ANR	5628612	ParameterType	t1_glyph_space_coord		5628417	0					
ANR	5628613	Identifier	gx		5628417	1					
ANR	5628614	Parameter	t1_glyph_space_coord gy	1765:37:71270:71292	5628417	3	True				
ANR	5628615	ParameterType	t1_glyph_space_coord		5628417	0					
ANR	5628616	Identifier	gy		5628417	1					
ANR	5628617	Parameter	t1_hinter_space_coord * pdx	1766:12:71307:71332	5628417	4	True				
ANR	5628618	ParameterType	t1_hinter_space_coord *		5628417	0					
ANR	5628619	Identifier	pdx		5628417	1					
ANR	5628620	Parameter	t1_hinter_space_coord * pdy	1766:40:71335:71360	5628417	5	True				
ANR	5628621	ParameterType	t1_hinter_space_coord *		5628417	0					
ANR	5628622	Identifier	pdy		5628417	1					
ANR	5628623	Parameter	bool align_to_pixels	1767:12:71375:71394	5628417	6	True				
ANR	5628624	ParameterType	bool		5628417	0					
ANR	5628625	Identifier	align_to_pixels		5628417	1					
ANR	5628626	Parameter	bool absolute	1767:34:71397:71409	5628417	7	True				
ANR	5628627	ParameterType	bool		5628417	0					
ANR	5628628	Identifier	absolute		5628417	1					
ANR	5628629	CFGEntryNode	ENTRY		5628417		True				
ANR	5628630	CFGExitNode	EXIT		5628417		True				
ANR	5628631	Symbol	pdy		5628417						
ANR	5628632	Symbol	pdx		5628417						
ANR	5628633	Symbol	align_to_pixels		5628417						
ANR	5628634	Symbol	self -> log2_subpixels_y		5628417						
ANR	5628635	Symbol	dx		5628417						
ANR	5628636	Symbol	self -> log2_subpixels_x		5628417						
ANR	5628637	Symbol	dy		5628417						
ANR	5628638	Symbol	rshift		5628417						
ANR	5628639	Symbol	* self		5628417						
ANR	5628640	Symbol	self -> orig_oy		5628417						
ANR	5628641	Symbol	self -> orig_ox		5628417						
ANR	5628642	Symbol	ox		5628417						
ANR	5628643	Symbol	self -> log2_pixels_x		5628417						
ANR	5628644	Symbol	oy		5628417						
ANR	5628645	Symbol	self -> log2_pixels_y		5628417						
ANR	5628646	Symbol	* pdx		5628417						
ANR	5628647	Symbol	* pdy		5628417						
ANR	5628648	Symbol	gx		5628417						
ANR	5628649	Symbol	unit		5628417						
ANR	5628650	Symbol	gy		5628417						
ANR	5628651	Symbol	& ox		5628417						
ANR	5628652	Symbol	& oy		5628417						
ANR	5628653	Symbol	absolute		5628417						
ANR	5628654	Symbol	div_x		5628417						
ANR	5628655	Symbol	self		5628417						
ANR	5628656	Symbol	div_y		5628417						
ANR	5628657	Function	t1_hinter__align_to_grid__final	1792:0:72103:72604							
ANR	5628658	FunctionDef	"t1_hinter__align_to_grid__final (t1_hinter * self , t1_glyph_space_coord * x , t1_glyph_space_coord * y , t1_hinter_space_coord dx , t1_hinter_space_coord dy)"		5628657	0					
ANR	5628659	CompoundStatement		1795:0:72291:72604	5628657	0					
ANR	5628660	IdentifierDeclStatement	"t1_glyph_space_coord gxd , gyd ;"	1796:4:72297:72326	5628657	0	True				
ANR	5628661	IdentifierDecl	gxd		5628657	0					
ANR	5628662	IdentifierDeclType	t1_glyph_space_coord		5628657	0					
ANR	5628663	Identifier	gxd		5628657	1					
ANR	5628664	IdentifierDecl	gyd		5628657	1					
ANR	5628665	IdentifierDeclType	t1_glyph_space_coord		5628657	0					
ANR	5628666	Identifier	gyd		5628657	1					
ANR	5628667	ExpressionStatement	"o2g ( self , dx , dy , & gxd , & gyd )"	1798:4:72333:72362	5628657	1	True				
ANR	5628668	CallExpression	"o2g ( self , dx , dy , & gxd , & gyd )"		5628657	0					
ANR	5628669	Callee	o2g		5628657	0					
ANR	5628670	Identifier	o2g		5628657	0					
ANR	5628671	ArgumentList	self		5628657	1					
ANR	5628672	Argument	self		5628657	0					
ANR	5628673	Identifier	self		5628657	0					
ANR	5628674	Argument	dx		5628657	1					
ANR	5628675	Identifier	dx		5628657	0					
ANR	5628676	Argument	dy		5628657	2					
ANR	5628677	Identifier	dy		5628657	0					
ANR	5628678	Argument	& gxd		5628657	3					
ANR	5628679	UnaryOperationExpression	& gxd		5628657	0					
ANR	5628680	UnaryOperator	&		5628657	0					
ANR	5628681	Identifier	gxd		5628657	1					
ANR	5628682	Argument	& gyd		5628657	4					
ANR	5628683	UnaryOperationExpression	& gyd		5628657	0					
ANR	5628684	UnaryOperator	&		5628657	0					
ANR	5628685	Identifier	gyd		5628657	1					
ANR	5628686	IfStatement	if ( self -> grid_fit_x )		5628657	2					
ANR	5628687	Condition	self -> grid_fit_x	1799:8:72372:72387	5628657	0	True				
ANR	5628688	PtrMemberAccess	self -> grid_fit_x		5628657	0					
ANR	5628689	Identifier	self		5628657	0					
ANR	5628690	Identifier	grid_fit_x		5628657	1					
ANR	5628691	CompoundStatement		5:26:98:98	5628657	1					
ANR	5628692	ExpressionStatement	* x -= gxd	1800:8:72400:72409	5628657	0	True				
ANR	5628693	AssignmentExpression	* x -= gxd		5628657	0		-=			
ANR	5628694	UnaryOperationExpression	* x		5628657	0					
ANR	5628695	UnaryOperator	*		5628657	0					
ANR	5628696	Identifier	x		5628657	1					
ANR	5628697	Identifier	gxd		5628657	1					
ANR	5628698	ExpressionStatement	* x = ( * x + 7 ) & ~15	1801:8:72419:72438	5628657	1	True				
ANR	5628699	AssignmentExpression	* x = ( * x + 7 ) & ~15		5628657	0		=			
ANR	5628700	UnaryOperationExpression	* x		5628657	0					
ANR	5628701	UnaryOperator	*		5628657	0					
ANR	5628702	Identifier	x		5628657	1					
ANR	5628703	BitAndExpression	( * x + 7 ) & ~15		5628657	1		&			
ANR	5628704	AdditiveExpression	* x + 7		5628657	0		+			
ANR	5628705	UnaryOperationExpression	* x		5628657	0					
ANR	5628706	UnaryOperator	*		5628657	0					
ANR	5628707	Identifier	x		5628657	1					
ANR	5628708	PrimaryExpression	7		5628657	1					
ANR	5628709	Identifier	~15		5628657	1					
ANR	5628710	IfStatement	if ( self -> grid_fit_y )		5628657	3					
ANR	5628711	Condition	self -> grid_fit_y	1803:8:72492:72507	5628657	0	True				
ANR	5628712	PtrMemberAccess	self -> grid_fit_y		5628657	0					
ANR	5628713	Identifier	self		5628657	0					
ANR	5628714	Identifier	grid_fit_y		5628657	1					
ANR	5628715	CompoundStatement		9:26:218:218	5628657	1					
ANR	5628716	ExpressionStatement	* y -= gyd	1804:8:72520:72529	5628657	0	True				
ANR	5628717	AssignmentExpression	* y -= gyd		5628657	0		-=			
ANR	5628718	UnaryOperationExpression	* y		5628657	0					
ANR	5628719	UnaryOperator	*		5628657	0					
ANR	5628720	Identifier	y		5628657	1					
ANR	5628721	Identifier	gyd		5628657	1					
ANR	5628722	ExpressionStatement	* y = ( * y + 7 ) & ~15	1805:8:72539:72558	5628657	1	True				
ANR	5628723	AssignmentExpression	* y = ( * y + 7 ) & ~15		5628657	0		=			
ANR	5628724	UnaryOperationExpression	* y		5628657	0					
ANR	5628725	UnaryOperator	*		5628657	0					
ANR	5628726	Identifier	y		5628657	1					
ANR	5628727	BitAndExpression	( * y + 7 ) & ~15		5628657	1		&			
ANR	5628728	AdditiveExpression	* y + 7		5628657	0		+			
ANR	5628729	UnaryOperationExpression	* y		5628657	0					
ANR	5628730	UnaryOperator	*		5628657	0					
ANR	5628731	Identifier	y		5628657	1					
ANR	5628732	PrimaryExpression	7		5628657	1					
ANR	5628733	Identifier	~15		5628657	1					
ANR	5628734	ReturnType	static void		5628657	1					
ANR	5628735	Identifier	t1_hinter__align_to_grid__final		5628657	2					
ANR	5628736	ParameterList	"t1_hinter * self , t1_glyph_space_coord * x , t1_glyph_space_coord * y , t1_hinter_space_coord dx , t1_hinter_space_coord dy"		5628657	3					
ANR	5628737	Parameter	t1_hinter * self	1792:44:72147:72162	5628657	0	True				
ANR	5628738	ParameterType	t1_hinter *		5628657	0					
ANR	5628739	Identifier	self		5628657	1					
ANR	5628740	Parameter	t1_glyph_space_coord * x	1793:12:72177:72199	5628657	1	True				
ANR	5628741	ParameterType	t1_glyph_space_coord *		5628657	0					
ANR	5628742	Identifier	x		5628657	1					
ANR	5628743	Parameter	t1_glyph_space_coord * y	1793:37:72202:72224	5628657	2	True				
ANR	5628744	ParameterType	t1_glyph_space_coord *		5628657	0					
ANR	5628745	Identifier	y		5628657	1					
ANR	5628746	Parameter	t1_hinter_space_coord dx	1794:12:72239:72262	5628657	3	True				
ANR	5628747	ParameterType	t1_hinter_space_coord		5628657	0					
ANR	5628748	Identifier	dx		5628657	1					
ANR	5628749	Parameter	t1_hinter_space_coord dy	1794:38:72265:72288	5628657	4	True				
ANR	5628750	ParameterType	t1_hinter_space_coord		5628657	0					
ANR	5628751	Identifier	dy		5628657	1					
ANR	5628752	CFGEntryNode	ENTRY		5628657		True				
ANR	5628753	CFGExitNode	EXIT		5628657		True				
ANR	5628754	Symbol	* x		5628657						
ANR	5628755	Symbol	~15		5628657						
ANR	5628756	Symbol	* y		5628657						
ANR	5628757	Symbol	* self		5628657						
ANR	5628758	Symbol	self -> grid_fit_x		5628657						
ANR	5628759	Symbol	self -> grid_fit_y		5628657						
ANR	5628760	Symbol	gxd		5628657						
ANR	5628761	Symbol	gyd		5628657						
ANR	5628762	Symbol	dx		5628657						
ANR	5628763	Symbol	dy		5628657						
ANR	5628764	Symbol	x		5628657						
ANR	5628765	Symbol	self		5628657						
ANR	5628766	Symbol	y		5628657						
ANR	5628767	Symbol	& gxd		5628657						
ANR	5628768	Symbol	& gyd		5628657						
ANR	5628769	Function	t1_hinter__hint_stem_snap_range	1809:0:72607:73232							
ANR	5628770	FunctionDef	"t1_hinter__hint_stem_snap_range (t1_hinter * self , t1_glyph_space_coord w0 , t1_glyph_space_coord w1 , bool horiz , short * index0 , short * index1)"		5628769	0					
ANR	5628771	CompoundStatement		1812:0:72841:73232	5628769	0					
ANR	5628772	IdentifierDeclStatement	"int k = ( horiz ? 0 : 1 ) , i ;"	1812:3:72845:72871	5628769	0	True				
ANR	5628773	IdentifierDecl	k = ( horiz ? 0 : 1 )		5628769	0					
ANR	5628774	IdentifierDeclType	int		5628769	0					
ANR	5628775	Identifier	k		5628769	1					
ANR	5628776	AssignmentExpression	k = ( horiz ? 0 : 1 )		5628769	2		=			
ANR	5628777	Identifier	k		5628769	0					
ANR	5628778	ConditionalExpression	horiz ? 0 : 1		5628769	1					
ANR	5628779	Condition	horiz		5628769	0					
ANR	5628780	Identifier	horiz		5628769	0					
ANR	5628781	PrimaryExpression	0		5628769	1					
ANR	5628782	PrimaryExpression	1		5628769	2					
ANR	5628783	IdentifierDecl	i		5628769	1					
ANR	5628784	IdentifierDeclType	int		5628769	0					
ANR	5628785	Identifier	i		5628769	1					
ANR	5628786	IdentifierDeclStatement	bool index0_set = false ;	1813:4:72877:72900	5628769	1	True				
ANR	5628787	IdentifierDecl	index0_set = false		5628769	0					
ANR	5628788	IdentifierDeclType	bool		5628769	0					
ANR	5628789	Identifier	index0_set		5628769	1					
ANR	5628790	AssignmentExpression	index0_set = false		5628769	2		=			
ANR	5628791	Identifier	false		5628769	0					
ANR	5628792	Identifier	false		5628769	1					
ANR	5628793	ExpressionStatement	* index0 = 0	1815:4:72907:72918	5628769	2	True				
ANR	5628794	AssignmentExpression	* index0 = 0		5628769	0		=			
ANR	5628795	UnaryOperationExpression	* index0		5628769	0					
ANR	5628796	UnaryOperator	*		5628769	0					
ANR	5628797	Identifier	index0		5628769	1					
ANR	5628798	PrimaryExpression	0		5628769	1					
ANR	5628799	ExpressionStatement	* index1 = - 1	1816:4:72924:72936	5628769	3	True				
ANR	5628800	AssignmentExpression	* index1 = - 1		5628769	0		=			
ANR	5628801	UnaryOperationExpression	* index1		5628769	0					
ANR	5628802	UnaryOperator	*		5628769	0					
ANR	5628803	Identifier	index1		5628769	1					
ANR	5628804	UnaryOperationExpression	- 1		5628769	1					
ANR	5628805	UnaryOperator	-		5628769	0					
ANR	5628806	PrimaryExpression	1		5628769	1					
ANR	5628807	ForStatement	for ( i = 0 ; i < self -> stem_snap_count [ k ] ; i ++ )		5628769	4					
ANR	5628808	ForInit	i = 0 ;	1817:9:72947:72952	5628769	0	True				
ANR	5628809	AssignmentExpression	i = 0		5628769	0		=			
ANR	5628810	Identifier	i		5628769	0					
ANR	5628811	PrimaryExpression	0		5628769	1					
ANR	5628812	Condition	i < self -> stem_snap_count [ k ]	1817:16:72954:72981	5628769	1	True				
ANR	5628813	RelationalExpression	i < self -> stem_snap_count [ k ]		5628769	0		<			
ANR	5628814	Identifier	i		5628769	0					
ANR	5628815	ArrayIndexing	self -> stem_snap_count [ k ]		5628769	1					
ANR	5628816	PtrMemberAccess	self -> stem_snap_count		5628769	0					
ANR	5628817	Identifier	self		5628769	0					
ANR	5628818	Identifier	stem_snap_count		5628769	1					
ANR	5628819	Identifier	k		5628769	1					
ANR	5628820	PostIncDecOperationExpression	i ++	1817:46:72984:72986	5628769	2	True				
ANR	5628821	Identifier	i		5628769	0					
ANR	5628822	IncDec	++		5628769	1					
ANR	5628823	CompoundStatement		6:51:147:147	5628769	3					
ANR	5628824	IfStatement	if ( w0 > self -> stem_snap [ k ] [ i ] )		5628769	0					
ANR	5628825	Condition	w0 > self -> stem_snap [ k ] [ i ]	1818:12:73003:73028	5628769	0	True				
ANR	5628826	RelationalExpression	w0 > self -> stem_snap [ k ] [ i ]		5628769	0		>			
ANR	5628827	Identifier	w0		5628769	0					
ANR	5628828	ArrayIndexing	self -> stem_snap [ k ] [ i ]		5628769	1					
ANR	5628829	ArrayIndexing	self -> stem_snap [ k ]		5628769	0					
ANR	5628830	PtrMemberAccess	self -> stem_snap		5628769	0					
ANR	5628831	Identifier	self		5628769	0					
ANR	5628832	Identifier	stem_snap		5628769	1					
ANR	5628833	Identifier	k		5628769	1					
ANR	5628834	Identifier	i		5628769	1					
ANR	5628835	ContinueStatement	continue ;	1819:12:73043:73051	5628769	1	True				
ANR	5628836	IfStatement	if ( ! index0_set )		5628769	1					
ANR	5628837	Condition	! index0_set	1820:12:73065:73075	5628769	0	True				
ANR	5628838	UnaryOperationExpression	! index0_set		5628769	0					
ANR	5628839	UnaryOperator	!		5628769	0					
ANR	5628840	Identifier	index0_set		5628769	1					
ANR	5628841	CompoundStatement		9:25:236:236	5628769	1					
ANR	5628842	ExpressionStatement	index0_set = true	1821:12:73092:73109	5628769	0	True				
ANR	5628843	AssignmentExpression	index0_set = true		5628769	0		=			
ANR	5628844	Identifier	index0_set		5628769	0					
ANR	5628845	Identifier	true		5628769	1					
ANR	5628846	ExpressionStatement	* index0 = i	1822:12:73123:73134	5628769	1	True				
ANR	5628847	AssignmentExpression	* index0 = i		5628769	0		=			
ANR	5628848	UnaryOperationExpression	* index0		5628769	0					
ANR	5628849	UnaryOperator	*		5628769	0					
ANR	5628850	Identifier	index0		5628769	1					
ANR	5628851	Identifier	i		5628769	1					
ANR	5628852	IfStatement	if ( w1 < self -> stem_snap [ k ] [ i ] )		5628769	2					
ANR	5628853	Condition	w1 < self -> stem_snap [ k ] [ i ]	1824:12:73158:73183	5628769	0	True				
ANR	5628854	RelationalExpression	w1 < self -> stem_snap [ k ] [ i ]		5628769	0		<			
ANR	5628855	Identifier	w1		5628769	0					
ANR	5628856	ArrayIndexing	self -> stem_snap [ k ] [ i ]		5628769	1					
ANR	5628857	ArrayIndexing	self -> stem_snap [ k ]		5628769	0					
ANR	5628858	PtrMemberAccess	self -> stem_snap		5628769	0					
ANR	5628859	Identifier	self		5628769	0					
ANR	5628860	Identifier	stem_snap		5628769	1					
ANR	5628861	Identifier	k		5628769	1					
ANR	5628862	Identifier	i		5628769	1					
ANR	5628863	BreakStatement	break ;	1825:12:73198:73203	5628769	1	True				
ANR	5628864	ExpressionStatement	* index1 = i	1826:8:73213:73224	5628769	3	True				
ANR	5628865	AssignmentExpression	* index1 = i		5628769	0		=			
ANR	5628866	UnaryOperationExpression	* index1		5628769	0					
ANR	5628867	UnaryOperator	*		5628769	0					
ANR	5628868	Identifier	index1		5628769	1					
ANR	5628869	Identifier	i		5628769	1					
ANR	5628870	ReturnType	static void		5628769	1					
ANR	5628871	Identifier	t1_hinter__hint_stem_snap_range		5628769	2					
ANR	5628872	ParameterList	"t1_hinter * self , t1_glyph_space_coord w0 , t1_glyph_space_coord w1 , bool horiz , short * index0 , short * index1"		5628769	3					
ANR	5628873	Parameter	t1_hinter * self	1809:44:72651:72666	5628769	0	True				
ANR	5628874	ParameterType	t1_hinter *		5628769	0					
ANR	5628875	Identifier	self		5628769	1					
ANR	5628876	Parameter	t1_glyph_space_coord w0	1810:40:72709:72731	5628769	1	True				
ANR	5628877	ParameterType	t1_glyph_space_coord		5628769	0					
ANR	5628878	Identifier	w0		5628769	1					
ANR	5628879	Parameter	t1_glyph_space_coord w1	1810:65:72734:72756	5628769	2	True				
ANR	5628880	ParameterType	t1_glyph_space_coord		5628769	0					
ANR	5628881	Identifier	w1		5628769	1					
ANR	5628882	Parameter	bool horiz	1810:90:72759:72768	5628769	3	True				
ANR	5628883	ParameterType	bool		5628769	0					
ANR	5628884	Identifier	horiz		5628769	1					
ANR	5628885	Parameter	short * index0	1811:40:72811:72823	5628769	4	True				
ANR	5628886	ParameterType	short *		5628769	0					
ANR	5628887	Identifier	index0		5628769	1					
ANR	5628888	Parameter	short * index1	1811:55:72826:72838	5628769	5	True				
ANR	5628889	ParameterType	short *		5628769	0					
ANR	5628890	Identifier	index1		5628769	1					
ANR	5628891	CFGEntryNode	ENTRY		5628769		True				
ANR	5628892	CFGExitNode	EXIT		5628769		True				
ANR	5628893	Symbol	* * k		5628769						
ANR	5628894	Symbol	self -> stem_snap_count		5628769						
ANR	5628895	Symbol	* * self		5628769						
ANR	5628896	Symbol	* self		5628769						
ANR	5628897	Symbol	self -> stem_snap		5628769						
ANR	5628898	Symbol	false		5628769						
ANR	5628899	Symbol	i		5628769						
ANR	5628900	Symbol	index0_set		5628769						
ANR	5628901	Symbol	k		5628769						
ANR	5628902	Symbol	* self -> stem_snap_count		5628769						
ANR	5628903	Symbol	horiz		5628769						
ANR	5628904	Symbol	* i		5628769						
ANR	5628905	Symbol	* k		5628769						
ANR	5628906	Symbol	index1		5628769						
ANR	5628907	Symbol	* index0		5628769						
ANR	5628908	Symbol	index0		5628769						
ANR	5628909	Symbol	* index1		5628769						
ANR	5628910	Symbol	true		5628769						
ANR	5628911	Symbol	self		5628769						
ANR	5628912	Symbol	w0		5628769						
ANR	5628913	Symbol	* * * self		5628769						
ANR	5628914	Symbol	w1		5628769						
ANR	5628915	Symbol	* self -> stem_snap		5628769						
ANR	5628916	Symbol	* * self -> stem_snap		5628769						
ANR	5628917	Function	t1_hinter__align_to_grid	1830:0:73235:73621							
ANR	5628918	FunctionDef	"t1_hinter__align_to_grid (t1_hinter * self , int32_t unit , t1_glyph_space_coord * x , t1_glyph_space_coord * y , bool align_to_pixels)"		5628917	0					
ANR	5628919	CompoundStatement		1832:0:73388:73621	5628917	0					
ANR	5628920	IfStatement	if ( unit > 0 )		5628917	0					
ANR	5628921	Condition	unit > 0	1832:7:73396:73403	5628917	0	True				
ANR	5628922	RelationalExpression	unit > 0		5628917	0		>			
ANR	5628923	Identifier	unit		5628917	0					
ANR	5628924	PrimaryExpression	0		5628917	1					
ANR	5628925	CompoundStatement		2:8:27:55	5628917	1					
ANR	5628926	IdentifierDeclStatement	"t1_hinter_space_coord dx , dy ;"	1833:8:73416:73444	5628917	0	True				
ANR	5628927	IdentifierDecl	dx		5628917	0					
ANR	5628928	IdentifierDeclType	t1_hinter_space_coord		5628917	0					
ANR	5628929	Identifier	dx		5628917	1					
ANR	5628930	IdentifierDecl	dy		5628917	1					
ANR	5628931	IdentifierDeclType	t1_hinter_space_coord		5628917	0					
ANR	5628932	Identifier	dy		5628917	1					
ANR	5628933	ExpressionStatement	"t1_hinter__align_to_grid__general ( self , unit , * x , * y , & dx , & dy , align_to_pixels , align_to_pixels )"	1835:8:73455:73552	5628917	1	True				
ANR	5628934	CallExpression	"t1_hinter__align_to_grid__general ( self , unit , * x , * y , & dx , & dy , align_to_pixels , align_to_pixels )"		5628917	0					
ANR	5628935	Callee	t1_hinter__align_to_grid__general		5628917	0					
ANR	5628936	Identifier	t1_hinter__align_to_grid__general		5628917	0					
ANR	5628937	ArgumentList	self		5628917	1					
ANR	5628938	Argument	self		5628917	0					
ANR	5628939	Identifier	self		5628917	0					
ANR	5628940	Argument	unit		5628917	1					
ANR	5628941	Identifier	unit		5628917	0					
ANR	5628942	Argument	* x		5628917	2					
ANR	5628943	UnaryOperationExpression	* x		5628917	0					
ANR	5628944	UnaryOperator	*		5628917	0					
ANR	5628945	Identifier	x		5628917	1					
ANR	5628946	Argument	* y		5628917	3					
ANR	5628947	UnaryOperationExpression	* y		5628917	0					
ANR	5628948	UnaryOperator	*		5628917	0					
ANR	5628949	Identifier	y		5628917	1					
ANR	5628950	Argument	& dx		5628917	4					
ANR	5628951	UnaryOperationExpression	& dx		5628917	0					
ANR	5628952	UnaryOperator	&		5628917	0					
ANR	5628953	Identifier	dx		5628917	1					
ANR	5628954	Argument	& dy		5628917	5					
ANR	5628955	UnaryOperationExpression	& dy		5628917	0					
ANR	5628956	UnaryOperator	&		5628917	0					
ANR	5628957	Identifier	dy		5628917	1					
ANR	5628958	Argument	align_to_pixels		5628917	6					
ANR	5628959	Identifier	align_to_pixels		5628917	0					
ANR	5628960	Argument	align_to_pixels		5628917	7					
ANR	5628961	Identifier	align_to_pixels		5628917	0					
ANR	5628962	ExpressionStatement	"t1_hinter__align_to_grid__final ( self , x , y , dx , dy )"	1836:8:73562:73613	5628917	2	True				
ANR	5628963	CallExpression	"t1_hinter__align_to_grid__final ( self , x , y , dx , dy )"		5628917	0					
ANR	5628964	Callee	t1_hinter__align_to_grid__final		5628917	0					
ANR	5628965	Identifier	t1_hinter__align_to_grid__final		5628917	0					
ANR	5628966	ArgumentList	self		5628917	1					
ANR	5628967	Argument	self		5628917	0					
ANR	5628968	Identifier	self		5628917	0					
ANR	5628969	Argument	x		5628917	1					
ANR	5628970	Identifier	x		5628917	0					
ANR	5628971	Argument	y		5628917	2					
ANR	5628972	Identifier	y		5628917	0					
ANR	5628973	Argument	dx		5628917	3					
ANR	5628974	Identifier	dx		5628917	0					
ANR	5628975	Argument	dy		5628917	4					
ANR	5628976	Identifier	dy		5628917	0					
ANR	5628977	ReturnType	static void		5628917	1					
ANR	5628978	Identifier	t1_hinter__align_to_grid		5628917	2					
ANR	5628979	ParameterList	"t1_hinter * self , int32_t unit , t1_glyph_space_coord * x , t1_glyph_space_coord * y , bool align_to_pixels"		5628917	3					
ANR	5628980	Parameter	t1_hinter * self	1830:37:73272:73287	5628917	0	True				
ANR	5628981	ParameterType	t1_hinter *		5628917	0					
ANR	5628982	Identifier	self		5628917	1					
ANR	5628983	Parameter	int32_t unit	1830:55:73290:73301	5628917	1	True				
ANR	5628984	ParameterType	int32_t		5628917	0					
ANR	5628985	Identifier	unit		5628917	1					
ANR	5628986	Parameter	t1_glyph_space_coord * x	1831:12:73316:73338	5628917	2	True				
ANR	5628987	ParameterType	t1_glyph_space_coord *		5628917	0					
ANR	5628988	Identifier	x		5628917	1					
ANR	5628989	Parameter	t1_glyph_space_coord * y	1831:37:73341:73363	5628917	3	True				
ANR	5628990	ParameterType	t1_glyph_space_coord *		5628917	0					
ANR	5628991	Identifier	y		5628917	1					
ANR	5628992	Parameter	bool align_to_pixels	1831:62:73366:73385	5628917	4	True				
ANR	5628993	ParameterType	bool		5628917	0					
ANR	5628994	Identifier	align_to_pixels		5628917	1					
ANR	5628995	CFGEntryNode	ENTRY		5628917		True				
ANR	5628996	CFGExitNode	EXIT		5628917		True				
ANR	5628997	Symbol	unit		5628917						
ANR	5628998	Symbol	* x		5628917						
ANR	5628999	Symbol	align_to_pixels		5628917						
ANR	5629000	Symbol	* y		5628917						
ANR	5629001	Symbol	dx		5628917						
ANR	5629002	Symbol	dy		5628917						
ANR	5629003	Symbol	x		5628917						
ANR	5629004	Symbol	self		5628917						
ANR	5629005	Symbol	y		5628917						
ANR	5629006	Symbol	& dy		5628917						
ANR	5629007	Symbol	& dx		5628917						
ANR	5629008	Function	t1_hinter_compute_stem_snap_range_hv	1840:0:73624:75391							
ANR	5629009	FunctionDef	"t1_hinter_compute_stem_snap_range_hv (t1_hinter * self , int hv)"		5629008	0					
ANR	5629010	CompoundStatement		1841:0:73699:75391	5629008	0					
ANR	5629011	IdentifierDeclStatement	"const enum t1_hint_type T [ ] = { hstem , vstem } ;"	1842:4:73705:73749	5629008	0	True				
ANR	5629012	IdentifierDecl	"T [ ] = { hstem , vstem }"		5629008	0					
ANR	5629013	IdentifierDeclType	const enum t1_hint_type [ ]		5629008	0					
ANR	5629014	Identifier	T		5629008	1					
ANR	5629015	AssignmentExpression	"T [ ] = { hstem , vstem }"		5629008	2		=			
ANR	5629016	Identifier	T		5629008	0					
ANR	5629017	InitializerList	hstem		5629008	1					
ANR	5629018	Identifier	hstem		5629008	0					
ANR	5629019	Identifier	vstem		5629008	1					
ANR	5629020	IdentifierDeclStatement	"int i , j ;"	1843:4:73755:73763	5629008	1	True				
ANR	5629021	IdentifierDecl	i		5629008	0					
ANR	5629022	IdentifierDeclType	int		5629008	0					
ANR	5629023	Identifier	i		5629008	1					
ANR	5629024	IdentifierDecl	j		5629008	1					
ANR	5629025	IdentifierDeclType	int		5629008	0					
ANR	5629026	Identifier	j		5629008	1					
ANR	5629027	IdentifierDeclStatement	enum t1_hint_type t = T [ hv ] ;	1844:4:73769:73796	5629008	2	True				
ANR	5629028	IdentifierDecl	t = T [ hv ]		5629008	0					
ANR	5629029	IdentifierDeclType	enum t1_hint_type		5629008	0					
ANR	5629030	Identifier	t		5629008	1					
ANR	5629031	AssignmentExpression	t = T [ hv ]		5629008	2		=			
ANR	5629032	Identifier	t		5629008	0					
ANR	5629033	ArrayIndexing	T [ hv ]		5629008	1					
ANR	5629034	Identifier	T		5629008	0					
ANR	5629035	Identifier	hv		5629008	1					
ANR	5629036	IdentifierDeclStatement	bool horiz = ( t == hstem ) ;	1845:4:73802:73827	5629008	3	True				
ANR	5629037	IdentifierDecl	horiz = ( t == hstem )		5629008	0					
ANR	5629038	IdentifierDeclType	bool		5629008	0					
ANR	5629039	Identifier	horiz		5629008	1					
ANR	5629040	AssignmentExpression	horiz = ( t == hstem )		5629008	2		=			
ANR	5629041	Identifier	horiz		5629008	0					
ANR	5629042	EqualityExpression	t == hstem		5629008	1		==			
ANR	5629043	Identifier	t		5629008	0					
ANR	5629044	Identifier	hstem		5629008	1					
ANR	5629045	IdentifierDeclStatement	t1_glyph_space_coord pixel_g = ( horiz ? self -> pixel_gh : self -> pixel_gw ) ;	1846:4:73833:73905	5629008	4	True				
ANR	5629046	IdentifierDecl	pixel_g = ( horiz ? self -> pixel_gh : self -> pixel_gw )		5629008	0					
ANR	5629047	IdentifierDeclType	t1_glyph_space_coord		5629008	0					
ANR	5629048	Identifier	pixel_g		5629008	1					
ANR	5629049	AssignmentExpression	pixel_g = ( horiz ? self -> pixel_gh : self -> pixel_gw )		5629008	2		=			
ANR	5629050	Identifier	pixel_g		5629008	0					
ANR	5629051	ConditionalExpression	horiz ? self -> pixel_gh : self -> pixel_gw		5629008	1					
ANR	5629052	Condition	horiz		5629008	0					
ANR	5629053	Identifier	horiz		5629008	0					
ANR	5629054	PtrMemberAccess	self -> pixel_gh		5629008	1					
ANR	5629055	Identifier	self		5629008	0					
ANR	5629056	Identifier	pixel_gh		5629008	1					
ANR	5629057	PtrMemberAccess	self -> pixel_gw		5629008	2					
ANR	5629058	Identifier	self		5629008	0					
ANR	5629059	Identifier	pixel_gw		5629008	1					
ANR	5629060	IdentifierDeclStatement	int stem_snap_count = self -> stem_snap_count [ hv ] ;	1847:4:73911:73958	5629008	5	True				
ANR	5629061	IdentifierDecl	stem_snap_count = self -> stem_snap_count [ hv ]		5629008	0					
ANR	5629062	IdentifierDeclType	int		5629008	0					
ANR	5629063	Identifier	stem_snap_count		5629008	1					
ANR	5629064	AssignmentExpression	stem_snap_count = self -> stem_snap_count [ hv ]		5629008	2		=			
ANR	5629065	Identifier	stem_snap_count		5629008	0					
ANR	5629066	ArrayIndexing	self -> stem_snap_count [ hv ]		5629008	1					
ANR	5629067	PtrMemberAccess	self -> stem_snap_count		5629008	0					
ANR	5629068	Identifier	self		5629008	0					
ANR	5629069	Identifier	stem_snap_count		5629008	1					
ANR	5629070	Identifier	hv		5629008	1					
ANR	5629071	ExpressionStatement	"memset ( self -> stem_snap_vote , 0 , stem_snap_count * sizeof ( self -> stem_snap_vote [ 0 ] ) )"	1849:4:73965:74047	5629008	6	True				
ANR	5629072	CallExpression	"memset ( self -> stem_snap_vote , 0 , stem_snap_count * sizeof ( self -> stem_snap_vote [ 0 ] ) )"		5629008	0					
ANR	5629073	Callee	memset		5629008	0					
ANR	5629074	Identifier	memset		5629008	0					
ANR	5629075	ArgumentList	self -> stem_snap_vote		5629008	1					
ANR	5629076	Argument	self -> stem_snap_vote		5629008	0					
ANR	5629077	PtrMemberAccess	self -> stem_snap_vote		5629008	0					
ANR	5629078	Identifier	self		5629008	0					
ANR	5629079	Identifier	stem_snap_vote		5629008	1					
ANR	5629080	Argument	0		5629008	1					
ANR	5629081	PrimaryExpression	0		5629008	0					
ANR	5629082	Argument	stem_snap_count * sizeof ( self -> stem_snap_vote [ 0 ] )		5629008	2					
ANR	5629083	MultiplicativeExpression	stem_snap_count * sizeof ( self -> stem_snap_vote [ 0 ] )		5629008	0		*			
ANR	5629084	Identifier	stem_snap_count		5629008	0					
ANR	5629085	SizeofExpression	sizeof ( self -> stem_snap_vote [ 0 ] )		5629008	1					
ANR	5629086	Sizeof	sizeof		5629008	0					
ANR	5629087	ArrayIndexing	self -> stem_snap_vote [ 0 ]		5629008	1					
ANR	5629088	PtrMemberAccess	self -> stem_snap_vote		5629008	0					
ANR	5629089	Identifier	self		5629008	0					
ANR	5629090	Identifier	stem_snap_vote		5629008	1					
ANR	5629091	PrimaryExpression	0		5629008	1					
ANR	5629092	ForStatement	for ( i = 0 ; i < self -> hint_count ; i ++ )		5629008	7					
ANR	5629093	ForInit	i = 0 ;	1850:9:74058:74063	5629008	0	True				
ANR	5629094	AssignmentExpression	i = 0		5629008	0		=			
ANR	5629095	Identifier	i		5629008	0					
ANR	5629096	PrimaryExpression	0		5629008	1					
ANR	5629097	Condition	i < self -> hint_count	1850:16:74065:74084	5629008	1	True				
ANR	5629098	RelationalExpression	i < self -> hint_count		5629008	0		<			
ANR	5629099	Identifier	i		5629008	0					
ANR	5629100	PtrMemberAccess	self -> hint_count		5629008	1					
ANR	5629101	Identifier	self		5629008	0					
ANR	5629102	Identifier	hint_count		5629008	1					
ANR	5629103	PostIncDecOperationExpression	i ++	1850:38:74087:74089	5629008	2	True				
ANR	5629104	Identifier	i		5629008	0					
ANR	5629105	IncDec	++		5629008	1					
ANR	5629106	CompoundStatement		10:43:392:392	5629008	3					
ANR	5629107	IfStatement	if ( self -> hint [ i ] . type == t )		5629008	0					
ANR	5629108	Condition	self -> hint [ i ] . type == t	1851:12:74106:74128	5629008	0	True				
ANR	5629109	EqualityExpression	self -> hint [ i ] . type == t		5629008	0		==			
ANR	5629110	MemberAccess	self -> hint [ i ] . type		5629008	0					
ANR	5629111	ArrayIndexing	self -> hint [ i ]		5629008	0					
ANR	5629112	PtrMemberAccess	self -> hint		5629008	0					
ANR	5629113	Identifier	self		5629008	0					
ANR	5629114	Identifier	hint		5629008	1					
ANR	5629115	Identifier	i		5629008	1					
ANR	5629116	Identifier	type		5629008	1					
ANR	5629117	Identifier	t		5629008	1					
ANR	5629118	CompoundStatement		12:12:445:515	5629008	1					
ANR	5629119	IdentifierDeclStatement	t1_glyph_space_coord gw = any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 ) ;	1852:12:74145:74215	5629008	0	True				
ANR	5629120	IdentifierDecl	gw = any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )		5629008	0					
ANR	5629121	IdentifierDeclType	t1_glyph_space_coord		5629008	0					
ANR	5629122	Identifier	gw		5629008	1					
ANR	5629123	AssignmentExpression	gw = any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )		5629008	2		=			
ANR	5629124	Identifier	gw		5629008	0					
ANR	5629125	CallExpression	any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )		5629008	1					
ANR	5629126	Callee	any_abs		5629008	0					
ANR	5629127	Identifier	any_abs		5629008	0					
ANR	5629128	ArgumentList	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		5629008	1					
ANR	5629129	Argument	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		5629008	0					
ANR	5629130	AdditiveExpression	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		5629008	0		-			
ANR	5629131	MemberAccess	self -> hint [ i ] . g1		5629008	0					
ANR	5629132	ArrayIndexing	self -> hint [ i ]		5629008	0					
ANR	5629133	PtrMemberAccess	self -> hint		5629008	0					
ANR	5629134	Identifier	self		5629008	0					
ANR	5629135	Identifier	hint		5629008	1					
ANR	5629136	Identifier	i		5629008	1					
ANR	5629137	Identifier	g1		5629008	1					
ANR	5629138	MemberAccess	self -> hint [ i ] . g0		5629008	1					
ANR	5629139	ArrayIndexing	self -> hint [ i ]		5629008	0					
ANR	5629140	PtrMemberAccess	self -> hint		5629008	0					
ANR	5629141	Identifier	self		5629008	0					
ANR	5629142	Identifier	hint		5629008	1					
ANR	5629143	Identifier	i		5629008	1					
ANR	5629144	Identifier	g0		5629008	1					
ANR	5629145	ExpressionStatement	"t1_hinter__hint_stem_snap_range ( self , gw - pixel_g + 1 , gw + pixel_g - 1 , horiz , & self -> hint [ i ] . stem_snap_index0 , & self -> hint [ i ] . stem_snap_index1 )"	1854:12:74230:74392	5629008	1	True				
ANR	5629146	CallExpression	"t1_hinter__hint_stem_snap_range ( self , gw - pixel_g + 1 , gw + pixel_g - 1 , horiz , & self -> hint [ i ] . stem_snap_index0 , & self -> hint [ i ] . stem_snap_index1 )"		5629008	0					
ANR	5629147	Callee	t1_hinter__hint_stem_snap_range		5629008	0					
ANR	5629148	Identifier	t1_hinter__hint_stem_snap_range		5629008	0					
ANR	5629149	ArgumentList	self		5629008	1					
ANR	5629150	Argument	self		5629008	0					
ANR	5629151	Identifier	self		5629008	0					
ANR	5629152	Argument	gw - pixel_g + 1		5629008	1					
ANR	5629153	AdditiveExpression	gw - pixel_g + 1		5629008	0		-			
ANR	5629154	Identifier	gw		5629008	0					
ANR	5629155	AdditiveExpression	pixel_g + 1		5629008	1		+			
ANR	5629156	Identifier	pixel_g		5629008	0					
ANR	5629157	PrimaryExpression	1		5629008	1					
ANR	5629158	Argument	gw + pixel_g - 1		5629008	2					
ANR	5629159	AdditiveExpression	gw + pixel_g - 1		5629008	0		+			
ANR	5629160	Identifier	gw		5629008	0					
ANR	5629161	AdditiveExpression	pixel_g - 1		5629008	1		-			
ANR	5629162	Identifier	pixel_g		5629008	0					
ANR	5629163	PrimaryExpression	1		5629008	1					
ANR	5629164	Argument	horiz		5629008	3					
ANR	5629165	Identifier	horiz		5629008	0					
ANR	5629166	Argument	& self -> hint [ i ] . stem_snap_index0		5629008	4					
ANR	5629167	UnaryOperationExpression	& self -> hint [ i ] . stem_snap_index0		5629008	0					
ANR	5629168	UnaryOperator	&		5629008	0					
ANR	5629169	MemberAccess	self -> hint [ i ] . stem_snap_index0		5629008	1					
ANR	5629170	ArrayIndexing	self -> hint [ i ]		5629008	0					
ANR	5629171	PtrMemberAccess	self -> hint		5629008	0					
ANR	5629172	Identifier	self		5629008	0					
ANR	5629173	Identifier	hint		5629008	1					
ANR	5629174	Identifier	i		5629008	1					
ANR	5629175	Identifier	stem_snap_index0		5629008	1					
ANR	5629176	Argument	& self -> hint [ i ] . stem_snap_index1		5629008	5					
ANR	5629177	UnaryOperationExpression	& self -> hint [ i ] . stem_snap_index1		5629008	0					
ANR	5629178	UnaryOperator	&		5629008	0					
ANR	5629179	MemberAccess	self -> hint [ i ] . stem_snap_index1		5629008	1					
ANR	5629180	ArrayIndexing	self -> hint [ i ]		5629008	0					
ANR	5629181	PtrMemberAccess	self -> hint		5629008	0					
ANR	5629182	Identifier	self		5629008	0					
ANR	5629183	Identifier	hint		5629008	1					
ANR	5629184	Identifier	i		5629008	1					
ANR	5629185	Identifier	stem_snap_index1		5629008	1					
ANR	5629186	ForStatement	for ( j = self -> hint [ i ] . stem_snap_index0 ; j <= self -> hint [ i ] . stem_snap_index1 ; j ++ )		5629008	2					
ANR	5629187	ForInit	j = self -> hint [ i ] . stem_snap_index0 ;	1856:17:74411:74445	5629008	0	True				
ANR	5629188	AssignmentExpression	j = self -> hint [ i ] . stem_snap_index0		5629008	0		=			
ANR	5629189	Identifier	j		5629008	0					
ANR	5629190	MemberAccess	self -> hint [ i ] . stem_snap_index0		5629008	1					
ANR	5629191	ArrayIndexing	self -> hint [ i ]		5629008	0					
ANR	5629192	PtrMemberAccess	self -> hint		5629008	0					
ANR	5629193	Identifier	self		5629008	0					
ANR	5629194	Identifier	hint		5629008	1					
ANR	5629195	Identifier	i		5629008	1					
ANR	5629196	Identifier	stem_snap_index0		5629008	1					
ANR	5629197	Condition	j <= self -> hint [ i ] . stem_snap_index1	1856:53:74447:74481	5629008	1	True				
ANR	5629198	RelationalExpression	j <= self -> hint [ i ] . stem_snap_index1		5629008	0		<=			
ANR	5629199	Identifier	j		5629008	0					
ANR	5629200	MemberAccess	self -> hint [ i ] . stem_snap_index1		5629008	1					
ANR	5629201	ArrayIndexing	self -> hint [ i ]		5629008	0					
ANR	5629202	PtrMemberAccess	self -> hint		5629008	0					
ANR	5629203	Identifier	self		5629008	0					
ANR	5629204	Identifier	hint		5629008	1					
ANR	5629205	Identifier	i		5629008	1					
ANR	5629206	Identifier	stem_snap_index1		5629008	1					
ANR	5629207	PostIncDecOperationExpression	j ++	1856:90:74484:74486	5629008	2	True				
ANR	5629208	Identifier	j		5629008	0					
ANR	5629209	IncDec	++		5629008	1					
ANR	5629210	ExpressionStatement	self -> stem_snap_vote [ j ] ++	1857:16:74505:74530	5629008	3	True				
ANR	5629211	PostIncDecOperationExpression	self -> stem_snap_vote [ j ] ++		5629008	0					
ANR	5629212	ArrayIndexing	self -> stem_snap_vote [ j ]		5629008	0					
ANR	5629213	PtrMemberAccess	self -> stem_snap_vote		5629008	0					
ANR	5629214	Identifier	self		5629008	0					
ANR	5629215	Identifier	stem_snap_vote		5629008	1					
ANR	5629216	Identifier	j		5629008	1					
ANR	5629217	IncDec	++		5629008	1					
ANR	5629218	ForStatement	for ( i = 0 ; i < self -> hint_count ; i ++ )		5629008	8					
ANR	5629219	ForInit	i = 0 ;	1860:9:74557:74562	5629008	0	True				
ANR	5629220	AssignmentExpression	i = 0		5629008	0		=			
ANR	5629221	Identifier	i		5629008	0					
ANR	5629222	PrimaryExpression	0		5629008	1					
ANR	5629223	Condition	i < self -> hint_count	1860:16:74564:74583	5629008	1	True				
ANR	5629224	RelationalExpression	i < self -> hint_count		5629008	0		<			
ANR	5629225	Identifier	i		5629008	0					
ANR	5629226	PtrMemberAccess	self -> hint_count		5629008	1					
ANR	5629227	Identifier	self		5629008	0					
ANR	5629228	Identifier	hint_count		5629008	1					
ANR	5629229	PostIncDecOperationExpression	i ++	1860:38:74586:74588	5629008	2	True				
ANR	5629230	Identifier	i		5629008	0					
ANR	5629231	IncDec	++		5629008	1					
ANR	5629232	CompoundStatement		20:43:891:891	5629008	3					
ANR	5629233	IfStatement	if ( self -> hint [ i ] . type == t )		5629008	0					
ANR	5629234	Condition	self -> hint [ i ] . type == t	1861:12:74605:74627	5629008	0	True				
ANR	5629235	EqualityExpression	self -> hint [ i ] . type == t		5629008	0		==			
ANR	5629236	MemberAccess	self -> hint [ i ] . type		5629008	0					
ANR	5629237	ArrayIndexing	self -> hint [ i ]		5629008	0					
ANR	5629238	PtrMemberAccess	self -> hint		5629008	0					
ANR	5629239	Identifier	self		5629008	0					
ANR	5629240	Identifier	hint		5629008	1					
ANR	5629241	Identifier	i		5629008	1					
ANR	5629242	Identifier	type		5629008	1					
ANR	5629243	Identifier	t		5629008	1					
ANR	5629244	CompoundStatement		23:12:997:1067	5629008	1					
ANR	5629245	IdentifierDeclStatement	"int m = 0 , mj = - 1 , d , md = pixel_g * 2 ;"	1862:12:74644:74683	5629008	0	True				
ANR	5629246	IdentifierDecl	m = 0		5629008	0					
ANR	5629247	IdentifierDeclType	int		5629008	0					
ANR	5629248	Identifier	m		5629008	1					
ANR	5629249	AssignmentExpression	m = 0		5629008	2		=			
ANR	5629250	Identifier	m		5629008	0					
ANR	5629251	PrimaryExpression	0		5629008	1					
ANR	5629252	IdentifierDecl	mj = - 1		5629008	1					
ANR	5629253	IdentifierDeclType	int		5629008	0					
ANR	5629254	Identifier	mj		5629008	1					
ANR	5629255	AssignmentExpression	mj = - 1		5629008	2		=			
ANR	5629256	Identifier	mj		5629008	0					
ANR	5629257	UnaryOperationExpression	- 1		5629008	1					
ANR	5629258	UnaryOperator	-		5629008	0					
ANR	5629259	PrimaryExpression	1		5629008	1					
ANR	5629260	IdentifierDecl	d		5629008	2					
ANR	5629261	IdentifierDeclType	int		5629008	0					
ANR	5629262	Identifier	d		5629008	1					
ANR	5629263	IdentifierDecl	md = pixel_g * 2		5629008	3					
ANR	5629264	IdentifierDeclType	int		5629008	0					
ANR	5629265	Identifier	md		5629008	1					
ANR	5629266	AssignmentExpression	md = pixel_g * 2		5629008	2		=			
ANR	5629267	Identifier	md		5629008	0					
ANR	5629268	MultiplicativeExpression	pixel_g * 2		5629008	1		*			
ANR	5629269	Identifier	pixel_g		5629008	0					
ANR	5629270	PrimaryExpression	2		5629008	1					
ANR	5629271	IdentifierDeclStatement	t1_glyph_space_coord gw = any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 ) ;	1863:12:74697:74767	5629008	1	True				
ANR	5629272	IdentifierDecl	gw = any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )		5629008	0					
ANR	5629273	IdentifierDeclType	t1_glyph_space_coord		5629008	0					
ANR	5629274	Identifier	gw		5629008	1					
ANR	5629275	AssignmentExpression	gw = any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )		5629008	2		=			
ANR	5629276	Identifier	gw		5629008	0					
ANR	5629277	CallExpression	any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )		5629008	1					
ANR	5629278	Callee	any_abs		5629008	0					
ANR	5629279	Identifier	any_abs		5629008	0					
ANR	5629280	ArgumentList	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		5629008	1					
ANR	5629281	Argument	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		5629008	0					
ANR	5629282	AdditiveExpression	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		5629008	0		-			
ANR	5629283	MemberAccess	self -> hint [ i ] . g1		5629008	0					
ANR	5629284	ArrayIndexing	self -> hint [ i ]		5629008	0					
ANR	5629285	PtrMemberAccess	self -> hint		5629008	0					
ANR	5629286	Identifier	self		5629008	0					
ANR	5629287	Identifier	hint		5629008	1					
ANR	5629288	Identifier	i		5629008	1					
ANR	5629289	Identifier	g1		5629008	1					
ANR	5629290	MemberAccess	self -> hint [ i ] . g0		5629008	1					
ANR	5629291	ArrayIndexing	self -> hint [ i ]		5629008	0					
ANR	5629292	PtrMemberAccess	self -> hint		5629008	0					
ANR	5629293	Identifier	self		5629008	0					
ANR	5629294	Identifier	hint		5629008	1					
ANR	5629295	Identifier	i		5629008	1					
ANR	5629296	Identifier	g0		5629008	1					
ANR	5629297	ForStatement	for ( j = self -> hint [ i ] . stem_snap_index0 ; j <= self -> hint [ i ] . stem_snap_index1 ; j ++ )		5629008	2					
ANR	5629298	ForInit	j = self -> hint [ i ] . stem_snap_index0 ;	1865:17:74787:74821	5629008	0	True				
ANR	5629299	AssignmentExpression	j = self -> hint [ i ] . stem_snap_index0		5629008	0		=			
ANR	5629300	Identifier	j		5629008	0					
ANR	5629301	MemberAccess	self -> hint [ i ] . stem_snap_index0		5629008	1					
ANR	5629302	ArrayIndexing	self -> hint [ i ]		5629008	0					
ANR	5629303	PtrMemberAccess	self -> hint		5629008	0					
ANR	5629304	Identifier	self		5629008	0					
ANR	5629305	Identifier	hint		5629008	1					
ANR	5629306	Identifier	i		5629008	1					
ANR	5629307	Identifier	stem_snap_index0		5629008	1					
ANR	5629308	Condition	j <= self -> hint [ i ] . stem_snap_index1	1865:53:74823:74857	5629008	1	True				
ANR	5629309	RelationalExpression	j <= self -> hint [ i ] . stem_snap_index1		5629008	0		<=			
ANR	5629310	Identifier	j		5629008	0					
ANR	5629311	MemberAccess	self -> hint [ i ] . stem_snap_index1		5629008	1					
ANR	5629312	ArrayIndexing	self -> hint [ i ]		5629008	0					
ANR	5629313	PtrMemberAccess	self -> hint		5629008	0					
ANR	5629314	Identifier	self		5629008	0					
ANR	5629315	Identifier	hint		5629008	1					
ANR	5629316	Identifier	i		5629008	1					
ANR	5629317	Identifier	stem_snap_index1		5629008	1					
ANR	5629318	PostIncDecOperationExpression	j ++	1865:90:74860:74862	5629008	2	True				
ANR	5629319	Identifier	j		5629008	0					
ANR	5629320	IncDec	++		5629008	1					
ANR	5629321	CompoundStatement		25:95:1165:1165	5629008	3					
ANR	5629322	IfStatement	if ( m < self -> stem_snap_vote [ j ] )		5629008	0					
ANR	5629323	Condition	m < self -> stem_snap_vote [ j ]	1866:20:74887:74913	5629008	0	True				
ANR	5629324	RelationalExpression	m < self -> stem_snap_vote [ j ]		5629008	0		<			
ANR	5629325	Identifier	m		5629008	0					
ANR	5629326	ArrayIndexing	self -> stem_snap_vote [ j ]		5629008	1					
ANR	5629327	PtrMemberAccess	self -> stem_snap_vote		5629008	0					
ANR	5629328	Identifier	self		5629008	0					
ANR	5629329	Identifier	stem_snap_vote		5629008	1					
ANR	5629330	Identifier	j		5629008	1					
ANR	5629331	CompoundStatement		26:49:1216:1216	5629008	1					
ANR	5629332	ExpressionStatement	m = self -> stem_snap_vote [ j ]	1867:20:74938:74965	5629008	0	True				
ANR	5629333	AssignmentExpression	m = self -> stem_snap_vote [ j ]		5629008	0		=			
ANR	5629334	Identifier	m		5629008	0					
ANR	5629335	ArrayIndexing	self -> stem_snap_vote [ j ]		5629008	1					
ANR	5629336	PtrMemberAccess	self -> stem_snap_vote		5629008	0					
ANR	5629337	Identifier	self		5629008	0					
ANR	5629338	Identifier	stem_snap_vote		5629008	1					
ANR	5629339	Identifier	j		5629008	1					
ANR	5629340	ExpressionStatement	mj = j	1868:20:74987:74993	5629008	1	True				
ANR	5629341	AssignmentExpression	mj = j		5629008	0		=			
ANR	5629342	Identifier	mj		5629008	0					
ANR	5629343	Identifier	j		5629008	1					
ANR	5629344	ExpressionStatement	md = any_abs ( gw - pixel_g / 5 - self -> stem_snap [ hv ] [ mj ] )	1869:20:75015:75071	5629008	2	True				
ANR	5629345	AssignmentExpression	md = any_abs ( gw - pixel_g / 5 - self -> stem_snap [ hv ] [ mj ] )		5629008	0		=			
ANR	5629346	Identifier	md		5629008	0					
ANR	5629347	CallExpression	any_abs ( gw - pixel_g / 5 - self -> stem_snap [ hv ] [ mj ] )		5629008	1					
ANR	5629348	Callee	any_abs		5629008	0					
ANR	5629349	Identifier	any_abs		5629008	0					
ANR	5629350	ArgumentList	gw - pixel_g / 5 - self -> stem_snap [ hv ] [ mj ]		5629008	1					
ANR	5629351	Argument	gw - pixel_g / 5 - self -> stem_snap [ hv ] [ mj ]		5629008	0					
ANR	5629352	AdditiveExpression	gw - pixel_g / 5 - self -> stem_snap [ hv ] [ mj ]		5629008	0		-			
ANR	5629353	Identifier	gw		5629008	0					
ANR	5629354	AdditiveExpression	pixel_g / 5 - self -> stem_snap [ hv ] [ mj ]		5629008	1		-			
ANR	5629355	MultiplicativeExpression	pixel_g / 5		5629008	0		/			
ANR	5629356	Identifier	pixel_g		5629008	0					
ANR	5629357	PrimaryExpression	5		5629008	1					
ANR	5629358	ArrayIndexing	self -> stem_snap [ hv ] [ mj ]		5629008	1					
ANR	5629359	ArrayIndexing	self -> stem_snap [ hv ]		5629008	0					
ANR	5629360	PtrMemberAccess	self -> stem_snap		5629008	0					
ANR	5629361	Identifier	self		5629008	0					
ANR	5629362	Identifier	stem_snap		5629008	1					
ANR	5629363	Identifier	hv		5629008	1					
ANR	5629364	Identifier	mj		5629008	1					
ANR	5629365	ElseStatement	else		5629008	0					
ANR	5629366	CompoundStatement		30:23:1396:1396	5629008	0					
ANR	5629367	ExpressionStatement	d = any_abs ( gw - pixel_g / 5 - self -> stem_snap [ hv ] [ j ] )	1871:20:75118:75172	5629008	0	True				
ANR	5629368	AssignmentExpression	d = any_abs ( gw - pixel_g / 5 - self -> stem_snap [ hv ] [ j ] )		5629008	0		=			
ANR	5629369	Identifier	d		5629008	0					
ANR	5629370	CallExpression	any_abs ( gw - pixel_g / 5 - self -> stem_snap [ hv ] [ j ] )		5629008	1					
ANR	5629371	Callee	any_abs		5629008	0					
ANR	5629372	Identifier	any_abs		5629008	0					
ANR	5629373	ArgumentList	gw - pixel_g / 5 - self -> stem_snap [ hv ] [ j ]		5629008	1					
ANR	5629374	Argument	gw - pixel_g / 5 - self -> stem_snap [ hv ] [ j ]		5629008	0					
ANR	5629375	AdditiveExpression	gw - pixel_g / 5 - self -> stem_snap [ hv ] [ j ]		5629008	0		-			
ANR	5629376	Identifier	gw		5629008	0					
ANR	5629377	AdditiveExpression	pixel_g / 5 - self -> stem_snap [ hv ] [ j ]		5629008	1		-			
ANR	5629378	MultiplicativeExpression	pixel_g / 5		5629008	0		/			
ANR	5629379	Identifier	pixel_g		5629008	0					
ANR	5629380	PrimaryExpression	5		5629008	1					
ANR	5629381	ArrayIndexing	self -> stem_snap [ hv ] [ j ]		5629008	1					
ANR	5629382	ArrayIndexing	self -> stem_snap [ hv ]		5629008	0					
ANR	5629383	PtrMemberAccess	self -> stem_snap		5629008	0					
ANR	5629384	Identifier	self		5629008	0					
ANR	5629385	Identifier	stem_snap		5629008	1					
ANR	5629386	Identifier	hv		5629008	1					
ANR	5629387	Identifier	j		5629008	1					
ANR	5629388	IfStatement	if ( md > d )		5629008	1					
ANR	5629389	Condition	md > d	1872:24:75198:75203	5629008	0	True				
ANR	5629390	RelationalExpression	md > d		5629008	0		>			
ANR	5629391	Identifier	md		5629008	0					
ANR	5629392	Identifier	d		5629008	1					
ANR	5629393	CompoundStatement		32:32:1506:1506	5629008	1					
ANR	5629394	ExpressionStatement	md = d	1873:24:75232:75238	5629008	0	True				
ANR	5629395	AssignmentExpression	md = d		5629008	0		=			
ANR	5629396	Identifier	md		5629008	0					
ANR	5629397	Identifier	d		5629008	1					
ANR	5629398	ExpressionStatement	mj = j	1874:24:75264:75270	5629008	1	True				
ANR	5629399	AssignmentExpression	mj = j		5629008	0		=			
ANR	5629400	Identifier	mj		5629008	0					
ANR	5629401	Identifier	j		5629008	1					
ANR	5629402	ExpressionStatement	self -> hint [ i ] . stem_snap_index0 = mj	1878:12:75338:75373	5629008	3	True				
ANR	5629403	AssignmentExpression	self -> hint [ i ] . stem_snap_index0 = mj		5629008	0		=			
ANR	5629404	MemberAccess	self -> hint [ i ] . stem_snap_index0		5629008	0					
ANR	5629405	ArrayIndexing	self -> hint [ i ]		5629008	0					
ANR	5629406	PtrMemberAccess	self -> hint		5629008	0					
ANR	5629407	Identifier	self		5629008	0					
ANR	5629408	Identifier	hint		5629008	1					
ANR	5629409	Identifier	i		5629008	1					
ANR	5629410	Identifier	stem_snap_index0		5629008	1					
ANR	5629411	Identifier	mj		5629008	1					
ANR	5629412	ReturnType	static void		5629008	1					
ANR	5629413	Identifier	t1_hinter_compute_stem_snap_range_hv		5629008	2					
ANR	5629414	ParameterList	"t1_hinter * self , int hv"		5629008	3					
ANR	5629415	Parameter	t1_hinter * self	1840:49:73673:73688	5629008	0	True				
ANR	5629416	ParameterType	t1_hinter *		5629008	0					
ANR	5629417	Identifier	self		5629008	1					
ANR	5629418	Parameter	int hv	1840:67:73691:73696	5629008	1	True				
ANR	5629419	ParameterType	int		5629008	0					
ANR	5629420	Identifier	hv		5629008	1					
ANR	5629421	CFGEntryNode	ENTRY		5629008		True				
ANR	5629422	CFGExitNode	EXIT		5629008		True				
ANR	5629423	Symbol	* mj		5629008						
ANR	5629424	Symbol	vstem		5629008						
ANR	5629425	Symbol	* self -> stem_snap_count		5629008						
ANR	5629426	Symbol	hv		5629008						
ANR	5629427	Symbol	self -> hint [ i ] . stem_snap_index0		5629008						
ANR	5629428	Symbol	self -> hint [ i ] . stem_snap_index1		5629008						
ANR	5629429	Symbol	horiz		5629008						
ANR	5629430	Symbol	self -> pixel_gw		5629008						
ANR	5629431	Symbol	* self -> hint		5629008						
ANR	5629432	Symbol	T		5629008						
ANR	5629433	Symbol	* hv		5629008						
ANR	5629434	Symbol	md		5629008						
ANR	5629435	Symbol	any_abs		5629008						
ANR	5629436	Symbol	* * * self		5629008						
ANR	5629437	Symbol	* self -> stem_snap		5629008						
ANR	5629438	Symbol	* self -> stem_snap_vote		5629008						
ANR	5629439	Symbol	mj		5629008						
ANR	5629440	Symbol	hstem		5629008						
ANR	5629441	Symbol	* T		5629008						
ANR	5629442	Symbol	pixel_g		5629008						
ANR	5629443	Symbol	self -> pixel_gh		5629008						
ANR	5629444	Symbol	self -> stem_snap_count		5629008						
ANR	5629445	Symbol	self -> hint [ i ] . type		5629008						
ANR	5629446	Symbol	self -> hint		5629008						
ANR	5629447	Symbol	d		5629008						
ANR	5629448	Symbol	* * self		5629008						
ANR	5629449	Symbol	* self		5629008						
ANR	5629450	Symbol	self -> stem_snap		5629008						
ANR	5629451	Symbol	stem_snap_count		5629008						
ANR	5629452	Symbol	self -> hint [ i ] . g1		5629008						
ANR	5629453	Symbol	& self -> hint [ i ] . stem_snap_index1		5629008						
ANR	5629454	Symbol	i		5629008						
ANR	5629455	Symbol	self -> hint [ i ] . g0		5629008						
ANR	5629456	Symbol	& self -> hint [ i ] . stem_snap_index0		5629008						
ANR	5629457	Symbol	j		5629008						
ANR	5629458	Symbol	m		5629008						
ANR	5629459	Symbol	gw		5629008						
ANR	5629460	Symbol	self -> hint_count		5629008						
ANR	5629461	Symbol	* i		5629008						
ANR	5629462	Symbol	t		5629008						
ANR	5629463	Symbol	* j		5629008						
ANR	5629464	Symbol	self -> stem_snap_vote		5629008						
ANR	5629465	Symbol	* * hv		5629008						
ANR	5629466	Symbol	self		5629008						
ANR	5629467	Symbol	* * self -> stem_snap		5629008						
ANR	5629468	Function	t1_hinter_compute_stem_snap_range	1883:0:75394:75646							
ANR	5629469	FunctionDef	t1_hinter_compute_stem_snap_range (t1_hinter * self)		5629468	0					
ANR	5629470	CompoundStatement		1884:0:75458:75646	5629468	0					
ANR	5629471	IfStatement	if ( self -> stem_snap_count [ 0 ] > 1 )		5629468	0					
ANR	5629472	Condition	self -> stem_snap_count [ 0 ] > 1	1885:8:75468:75495	5629468	0	True				
ANR	5629473	RelationalExpression	self -> stem_snap_count [ 0 ] > 1		5629468	0		>			
ANR	5629474	ArrayIndexing	self -> stem_snap_count [ 0 ]		5629468	0					
ANR	5629475	PtrMemberAccess	self -> stem_snap_count		5629468	0					
ANR	5629476	Identifier	self		5629468	0					
ANR	5629477	Identifier	stem_snap_count		5629468	1					
ANR	5629478	PrimaryExpression	0		5629468	1					
ANR	5629479	PrimaryExpression	1		5629468	1					
ANR	5629480	ExpressionStatement	"t1_hinter_compute_stem_snap_range_hv ( self , 0 )"	1886:8:75506:75551	5629468	1	True				
ANR	5629481	CallExpression	"t1_hinter_compute_stem_snap_range_hv ( self , 0 )"		5629468	0					
ANR	5629482	Callee	t1_hinter_compute_stem_snap_range_hv		5629468	0					
ANR	5629483	Identifier	t1_hinter_compute_stem_snap_range_hv		5629468	0					
ANR	5629484	ArgumentList	self		5629468	1					
ANR	5629485	Argument	self		5629468	0					
ANR	5629486	Identifier	self		5629468	0					
ANR	5629487	Argument	0		5629468	1					
ANR	5629488	PrimaryExpression	0		5629468	0					
ANR	5629489	IfStatement	if ( self -> stem_snap_count [ 1 ] > 1 )		5629468	1					
ANR	5629490	Condition	self -> stem_snap_count [ 1 ] > 1	1887:8:75561:75588	5629468	0	True				
ANR	5629491	RelationalExpression	self -> stem_snap_count [ 1 ] > 1		5629468	0		>			
ANR	5629492	ArrayIndexing	self -> stem_snap_count [ 1 ]		5629468	0					
ANR	5629493	PtrMemberAccess	self -> stem_snap_count		5629468	0					
ANR	5629494	Identifier	self		5629468	0					
ANR	5629495	Identifier	stem_snap_count		5629468	1					
ANR	5629496	PrimaryExpression	1		5629468	1					
ANR	5629497	PrimaryExpression	1		5629468	1					
ANR	5629498	ExpressionStatement	"t1_hinter_compute_stem_snap_range_hv ( self , 1 )"	1888:8:75599:75644	5629468	1	True				
ANR	5629499	CallExpression	"t1_hinter_compute_stem_snap_range_hv ( self , 1 )"		5629468	0					
ANR	5629500	Callee	t1_hinter_compute_stem_snap_range_hv		5629468	0					
ANR	5629501	Identifier	t1_hinter_compute_stem_snap_range_hv		5629468	0					
ANR	5629502	ArgumentList	self		5629468	1					
ANR	5629503	Argument	self		5629468	0					
ANR	5629504	Identifier	self		5629468	0					
ANR	5629505	Argument	1		5629468	1					
ANR	5629506	PrimaryExpression	1		5629468	0					
ANR	5629507	ReturnType	static void		5629468	1					
ANR	5629508	Identifier	t1_hinter_compute_stem_snap_range		5629468	2					
ANR	5629509	ParameterList	t1_hinter * self		5629468	3					
ANR	5629510	Parameter	t1_hinter * self	1883:46:75440:75455	5629468	0	True				
ANR	5629511	ParameterType	t1_hinter *		5629468	0					
ANR	5629512	Identifier	self		5629468	1					
ANR	5629513	CFGEntryNode	ENTRY		5629468		True				
ANR	5629514	CFGExitNode	EXIT		5629468		True				
ANR	5629515	Symbol	self -> stem_snap_count		5629468						
ANR	5629516	Symbol	* * self		5629468						
ANR	5629517	Symbol	* self		5629468						
ANR	5629518	Symbol	self		5629468						
ANR	5629519	Symbol	* self -> stem_snap_count		5629468						
ANR	5629520	Function	t1_hinter__align_stem_width	1891:0:75649:76478							
ANR	5629521	FunctionDef	"t1_hinter__align_stem_width (t1_hinter * self , t1_glyph_space_coord * pgw , const t1_hint * hint)"		5629520	0					
ANR	5629522	CompoundStatement		1892:0:75755:76478	5629520	0					
ANR	5629523	IdentifierDeclStatement	bool horiz = ( hint -> type == hstem ) ;	1893:4:75761:75795	5629520	0	True				
ANR	5629524	IdentifierDecl	horiz = ( hint -> type == hstem )		5629520	0					
ANR	5629525	IdentifierDeclType	bool		5629520	0					
ANR	5629526	Identifier	horiz		5629520	1					
ANR	5629527	AssignmentExpression	horiz = ( hint -> type == hstem )		5629520	2		=			
ANR	5629528	Identifier	horiz		5629520	0					
ANR	5629529	EqualityExpression	hint -> type == hstem		5629520	1		==			
ANR	5629530	PtrMemberAccess	hint -> type		5629520	0					
ANR	5629531	Identifier	hint		5629520	0					
ANR	5629532	Identifier	type		5629520	1					
ANR	5629533	Identifier	hstem		5629520	1					
ANR	5629534	IdentifierDeclStatement	t1_glyph_space_coord gw = * pgw ;	1894:4:75801:75831	5629520	1	True				
ANR	5629535	IdentifierDecl	gw = * pgw		5629520	0					
ANR	5629536	IdentifierDeclType	t1_glyph_space_coord		5629520	0					
ANR	5629537	Identifier	gw		5629520	1					
ANR	5629538	AssignmentExpression	gw = * pgw		5629520	2		=			
ANR	5629539	Identifier	gw		5629520	0					
ANR	5629540	UnaryOperationExpression	* pgw		5629520	1					
ANR	5629541	UnaryOperator	*		5629520	0					
ANR	5629542	Identifier	pgw		5629520	1					
ANR	5629543	IdentifierDeclStatement	t1_glyph_space_coord pixel_g = ( horiz ? self -> pixel_gh : self -> pixel_gw ) ;	1895:4:75837:75909	5629520	2	True				
ANR	5629544	IdentifierDecl	pixel_g = ( horiz ? self -> pixel_gh : self -> pixel_gw )		5629520	0					
ANR	5629545	IdentifierDeclType	t1_glyph_space_coord		5629520	0					
ANR	5629546	Identifier	pixel_g		5629520	1					
ANR	5629547	AssignmentExpression	pixel_g = ( horiz ? self -> pixel_gh : self -> pixel_gw )		5629520	2		=			
ANR	5629548	Identifier	pixel_g		5629520	0					
ANR	5629549	ConditionalExpression	horiz ? self -> pixel_gh : self -> pixel_gw		5629520	1					
ANR	5629550	Condition	horiz		5629520	0					
ANR	5629551	Identifier	horiz		5629520	0					
ANR	5629552	PtrMemberAccess	self -> pixel_gh		5629520	1					
ANR	5629553	Identifier	self		5629520	0					
ANR	5629554	Identifier	pixel_gh		5629520	1					
ANR	5629555	PtrMemberAccess	self -> pixel_gw		5629520	2					
ANR	5629556	Identifier	self		5629520	0					
ANR	5629557	Identifier	pixel_gw		5629520	1					
ANR	5629558	IdentifierDeclStatement	t1_glyph_space_coord gwe ;	1896:4:75915:75939	5629520	3	True				
ANR	5629559	IdentifierDecl	gwe		5629520	0					
ANR	5629560	IdentifierDeclType	t1_glyph_space_coord		5629520	0					
ANR	5629561	Identifier	gwe		5629520	1					
ANR	5629562	IfStatement	if ( ! self -> keep_stem_width || pixel_g == 0 )		5629520	4					
ANR	5629563	Condition	! self -> keep_stem_width || pixel_g == 0	1898:8:75950:75987	5629520	0	True				
ANR	5629564	OrExpression	! self -> keep_stem_width || pixel_g == 0		5629520	0		||			
ANR	5629565	UnaryOperationExpression	! self -> keep_stem_width		5629520	0					
ANR	5629566	UnaryOperator	!		5629520	0					
ANR	5629567	PtrMemberAccess	self -> keep_stem_width		5629520	1					
ANR	5629568	Identifier	self		5629520	0					
ANR	5629569	Identifier	keep_stem_width		5629520	1					
ANR	5629570	EqualityExpression	pixel_g == 0		5629520	1		==			
ANR	5629571	Identifier	pixel_g		5629520	0					
ANR	5629572	PrimaryExpression	0		5629520	1					
ANR	5629573	ReturnStatement	return ;	1899:8:75998:76004	5629520	1	True				
ANR	5629574	IfStatement	if ( hint -> stem_snap_index0 >= 0 && self -> stem_snap_count [ horiz ? 0 : 1 ] > 0 )		5629520	5					
ANR	5629575	Condition	hint -> stem_snap_index0 >= 0 && self -> stem_snap_count [ horiz ? 0 : 1 ] > 0	1900:8:76014:76084	5629520	0	True				
ANR	5629576	AndExpression	hint -> stem_snap_index0 >= 0 && self -> stem_snap_count [ horiz ? 0 : 1 ] > 0		5629520	0		&&			
ANR	5629577	RelationalExpression	hint -> stem_snap_index0 >= 0		5629520	0		>=			
ANR	5629578	PtrMemberAccess	hint -> stem_snap_index0		5629520	0					
ANR	5629579	Identifier	hint		5629520	0					
ANR	5629580	Identifier	stem_snap_index0		5629520	1					
ANR	5629581	PrimaryExpression	0		5629520	1					
ANR	5629582	RelationalExpression	self -> stem_snap_count [ horiz ? 0 : 1 ] > 0		5629520	1		>			
ANR	5629583	ArrayIndexing	self -> stem_snap_count [ horiz ? 0 : 1 ]		5629520	0					
ANR	5629584	PtrMemberAccess	self -> stem_snap_count		5629520	0					
ANR	5629585	Identifier	self		5629520	0					
ANR	5629586	Identifier	stem_snap_count		5629520	1					
ANR	5629587	ConditionalExpression	horiz ? 0 : 1		5629520	1					
ANR	5629588	Condition	horiz		5629520	0					
ANR	5629589	Identifier	horiz		5629520	0					
ANR	5629590	PrimaryExpression	0		5629520	1					
ANR	5629591	PrimaryExpression	1		5629520	2					
ANR	5629592	PrimaryExpression	0		5629520	1					
ANR	5629593	CompoundStatement		11:8:431:504	5629520	1					
ANR	5629594	IdentifierDeclStatement	t1_glyph_space_coord w0 = self -> stem_snap [ horiz ? 0 : 1 ] [ hint -> stem_snap_index0 ] ;	1901:8:76097:76177	5629520	0	True				
ANR	5629595	IdentifierDecl	w0 = self -> stem_snap [ horiz ? 0 : 1 ] [ hint -> stem_snap_index0 ]		5629520	0					
ANR	5629596	IdentifierDeclType	t1_glyph_space_coord		5629520	0					
ANR	5629597	Identifier	w0		5629520	1					
ANR	5629598	AssignmentExpression	w0 = self -> stem_snap [ horiz ? 0 : 1 ] [ hint -> stem_snap_index0 ]		5629520	2		=			
ANR	5629599	Identifier	w0		5629520	0					
ANR	5629600	ArrayIndexing	self -> stem_snap [ horiz ? 0 : 1 ] [ hint -> stem_snap_index0 ]		5629520	1					
ANR	5629601	ArrayIndexing	self -> stem_snap [ horiz ? 0 : 1 ]		5629520	0					
ANR	5629602	PtrMemberAccess	self -> stem_snap		5629520	0					
ANR	5629603	Identifier	self		5629520	0					
ANR	5629604	Identifier	stem_snap		5629520	1					
ANR	5629605	ConditionalExpression	horiz ? 0 : 1		5629520	1					
ANR	5629606	Condition	horiz		5629520	0					
ANR	5629607	Identifier	horiz		5629520	0					
ANR	5629608	PrimaryExpression	0		5629520	1					
ANR	5629609	PrimaryExpression	1		5629520	2					
ANR	5629610	PtrMemberAccess	hint -> stem_snap_index0		5629520	1					
ANR	5629611	Identifier	hint		5629520	0					
ANR	5629612	Identifier	stem_snap_index0		5629520	1					
ANR	5629613	IdentifierDeclStatement	"t1_glyph_space_coord thr0 = pixel_g * 70 / 100 , thr1 = pixel_g * 35 / 100 ;"	1902:8:76187:76260	5629520	1	True				
ANR	5629614	IdentifierDecl	thr0 = pixel_g * 70 / 100		5629520	0					
ANR	5629615	IdentifierDeclType	t1_glyph_space_coord		5629520	0					
ANR	5629616	Identifier	thr0		5629520	1					
ANR	5629617	AssignmentExpression	thr0 = pixel_g * 70 / 100		5629520	2		=			
ANR	5629618	Identifier	thr0		5629520	0					
ANR	5629619	MultiplicativeExpression	pixel_g * 70 / 100		5629520	1		*			
ANR	5629620	Identifier	pixel_g		5629520	0					
ANR	5629621	MultiplicativeExpression	70 / 100		5629520	1		/			
ANR	5629622	PrimaryExpression	70		5629520	0					
ANR	5629623	PrimaryExpression	100		5629520	1					
ANR	5629624	IdentifierDecl	thr1 = pixel_g * 35 / 100		5629520	1					
ANR	5629625	IdentifierDeclType	t1_glyph_space_coord		5629520	0					
ANR	5629626	Identifier	thr1		5629520	1					
ANR	5629627	AssignmentExpression	thr1 = pixel_g * 35 / 100		5629520	2		=			
ANR	5629628	Identifier	thr1		5629520	0					
ANR	5629629	MultiplicativeExpression	pixel_g * 35 / 100		5629520	1		*			
ANR	5629630	Identifier	pixel_g		5629520	0					
ANR	5629631	MultiplicativeExpression	35 / 100		5629520	1		/			
ANR	5629632	PrimaryExpression	35		5629520	0					
ANR	5629633	PrimaryExpression	100		5629520	1					
ANR	5629634	IfStatement	if ( gw - thr0 <= w0 && w0 <= gw + thr1 )		5629520	2					
ANR	5629635	Condition	gw - thr0 <= w0 && w0 <= gw + thr1	1904:12:76275:76308	5629520	0	True				
ANR	5629636	AndExpression	gw - thr0 <= w0 && w0 <= gw + thr1		5629520	0		&&			
ANR	5629637	RelationalExpression	gw - thr0 <= w0		5629520	0		<=			
ANR	5629638	AdditiveExpression	gw - thr0		5629520	0		-			
ANR	5629639	Identifier	gw		5629520	0					
ANR	5629640	Identifier	thr0		5629520	1					
ANR	5629641	Identifier	w0		5629520	1					
ANR	5629642	RelationalExpression	w0 <= gw + thr1		5629520	1		<=			
ANR	5629643	Identifier	w0		5629520	0					
ANR	5629644	AdditiveExpression	gw + thr1		5629520	1		+			
ANR	5629645	Identifier	gw		5629520	0					
ANR	5629646	Identifier	thr1		5629520	1					
ANR	5629647	ExpressionStatement	gw = w0	1905:12:76323:76330	5629520	1	True				
ANR	5629648	AssignmentExpression	gw = w0		5629520	0		=			
ANR	5629649	Identifier	gw		5629520	0					
ANR	5629650	Identifier	w0		5629520	1					
ANR	5629651	ExpressionStatement	gwe = gw % pixel_g	1907:4:76342:76360	5629520	6	True				
ANR	5629652	AssignmentExpression	gwe = gw % pixel_g		5629520	0		=			
ANR	5629653	Identifier	gwe		5629520	0					
ANR	5629654	MultiplicativeExpression	gw % pixel_g		5629520	1		%			
ANR	5629655	Identifier	gw		5629520	0					
ANR	5629656	Identifier	pixel_g		5629520	1					
ANR	5629657	IfStatement	if ( gw >= pixel_g && gwe < pixel_g / 2 )		5629520	7					
ANR	5629658	Condition	gw >= pixel_g && gwe < pixel_g / 2	1908:8:76370:76403	5629520	0	True				
ANR	5629659	AndExpression	gw >= pixel_g && gwe < pixel_g / 2		5629520	0		&&			
ANR	5629660	RelationalExpression	gw >= pixel_g		5629520	0		>=			
ANR	5629661	Identifier	gw		5629520	0					
ANR	5629662	Identifier	pixel_g		5629520	1					
ANR	5629663	RelationalExpression	gwe < pixel_g / 2		5629520	1		<			
ANR	5629664	Identifier	gwe		5629520	0					
ANR	5629665	MultiplicativeExpression	pixel_g / 2		5629520	1		/			
ANR	5629666	Identifier	pixel_g		5629520	0					
ANR	5629667	PrimaryExpression	2		5629520	1					
ANR	5629668	ExpressionStatement	gw -= gwe	1909:8:76414:76423	5629520	1	True				
ANR	5629669	AssignmentExpression	gw -= gwe		5629520	0		-=			
ANR	5629670	Identifier	gw		5629520	0					
ANR	5629671	Identifier	gwe		5629520	1					
ANR	5629672	ElseStatement	else		5629520	0					
ANR	5629673	ExpressionStatement	gw += pixel_g - gwe	1911:8:76442:76461	5629520	0	True				
ANR	5629674	AssignmentExpression	gw += pixel_g - gwe		5629520	0		+=			
ANR	5629675	Identifier	gw		5629520	0					
ANR	5629676	AdditiveExpression	pixel_g - gwe		5629520	1		-			
ANR	5629677	Identifier	pixel_g		5629520	0					
ANR	5629678	Identifier	gwe		5629520	1					
ANR	5629679	ExpressionStatement	* pgw = gw	1912:4:76467:76476	5629520	8	True				
ANR	5629680	AssignmentExpression	* pgw = gw		5629520	0		=			
ANR	5629681	UnaryOperationExpression	* pgw		5629520	0					
ANR	5629682	UnaryOperator	*		5629520	0					
ANR	5629683	Identifier	pgw		5629520	1					
ANR	5629684	Identifier	gw		5629520	1					
ANR	5629685	ReturnType	static void		5629520	1					
ANR	5629686	Identifier	t1_hinter__align_stem_width		5629520	2					
ANR	5629687	ParameterList	"t1_hinter * self , t1_glyph_space_coord * pgw , const t1_hint * hint"		5629520	3					
ANR	5629688	Parameter	t1_hinter * self	1891:40:75689:75704	5629520	0	True				
ANR	5629689	ParameterType	t1_hinter *		5629520	0					
ANR	5629690	Identifier	self		5629520	1					
ANR	5629691	Parameter	t1_glyph_space_coord * pgw	1891:58:75707:75731	5629520	1	True				
ANR	5629692	ParameterType	t1_glyph_space_coord *		5629520	0					
ANR	5629693	Identifier	pgw		5629520	1					
ANR	5629694	Parameter	const t1_hint * hint	1891:85:75734:75752	5629520	2	True				
ANR	5629695	ParameterType	const t1_hint *		5629520	0					
ANR	5629696	Identifier	hint		5629520	1					
ANR	5629697	CFGEntryNode	ENTRY		5629520		True				
ANR	5629698	CFGExitNode	EXIT		5629520		True				
ANR	5629699	Symbol	thr0		5629520						
ANR	5629700	Symbol	thr1		5629520						
ANR	5629701	Symbol	* hint -> stem_snap_index0		5629520						
ANR	5629702	Symbol	* horiz		5629520						
ANR	5629703	Symbol	* pgw		5629520						
ANR	5629704	Symbol	* self -> stem_snap_count		5629520						
ANR	5629705	Symbol	hint -> stem_snap_index0		5629520						
ANR	5629706	Symbol	horiz		5629520						
ANR	5629707	Symbol	self -> pixel_gw		5629520						
ANR	5629708	Symbol	* * * self		5629520						
ANR	5629709	Symbol	w0		5629520						
ANR	5629710	Symbol	* self -> stem_snap		5629520						
ANR	5629711	Symbol	hint -> type		5629520						
ANR	5629712	Symbol	hstem		5629520						
ANR	5629713	Symbol	pixel_g		5629520						
ANR	5629714	Symbol	self -> pixel_gh		5629520						
ANR	5629715	Symbol	pgw		5629520						
ANR	5629716	Symbol	* hint		5629520						
ANR	5629717	Symbol	self -> stem_snap_count		5629520						
ANR	5629718	Symbol	* * self		5629520						
ANR	5629719	Symbol	* self		5629520						
ANR	5629720	Symbol	self -> stem_snap		5629520						
ANR	5629721	Symbol	* * hint		5629520						
ANR	5629722	Symbol	gw		5629520						
ANR	5629723	Symbol	gwe		5629520						
ANR	5629724	Symbol	hint		5629520						
ANR	5629725	Symbol	self		5629520						
ANR	5629726	Symbol	self -> keep_stem_width		5629520						
ANR	5629727	Symbol	* * horiz		5629520						
ANR	5629728	Symbol	* * self -> stem_snap		5629520						
ANR	5629729	Function	t1_hinter__align_stem_to_grid	1915:0:76481:78300							
ANR	5629730	FunctionDef	"t1_hinter__align_stem_to_grid (t1_hinter * self , int32_t unit , t1_glyph_space_coord * x0 , t1_glyph_space_coord * y0 , t1_glyph_space_coord x1 , t1_glyph_space_coord y1 , bool align_to_pixels , const t1_hint * hint)"		5629729	0					
ANR	5629731	CompoundStatement		1919:0:76738:78300	5629729	0					
ANR	5629732	IfStatement	if ( unit > 0 )		5629729	0					
ANR	5629733	Condition	unit > 0	1921:8:76843:76850	5629729	0	True				
ANR	5629734	RelationalExpression	unit > 0		5629729	0		>			
ANR	5629735	Identifier	unit		5629729	0					
ANR	5629736	PrimaryExpression	0		5629729	1					
ANR	5629737	CompoundStatement		9:8:419:464	5629729	1					
ANR	5629738	IdentifierDeclStatement	bool horiz = ( hint -> type == hstem ) ;	1922:8:76863:76897	5629729	0	True				
ANR	5629739	IdentifierDecl	horiz = ( hint -> type == hstem )		5629729	0					
ANR	5629740	IdentifierDeclType	bool		5629729	0					
ANR	5629741	Identifier	horiz		5629729	1					
ANR	5629742	AssignmentExpression	horiz = ( hint -> type == hstem )		5629729	2		=			
ANR	5629743	Identifier	horiz		5629729	0					
ANR	5629744	EqualityExpression	hint -> type == hstem		5629729	1		==			
ANR	5629745	PtrMemberAccess	hint -> type		5629729	0					
ANR	5629746	Identifier	hint		5629729	0					
ANR	5629747	Identifier	type		5629729	1					
ANR	5629748	Identifier	hstem		5629729	1					
ANR	5629749	IdentifierDeclStatement	t1_glyph_space_coord gw = ( horiz ? y1 - * y0 : x1 - * x0 ) ;	1923:8:76907:76962	5629729	1	True				
ANR	5629750	IdentifierDecl	gw = ( horiz ? y1 - * y0 : x1 - * x0 )		5629729	0					
ANR	5629751	IdentifierDeclType	t1_glyph_space_coord		5629729	0					
ANR	5629752	Identifier	gw		5629729	1					
ANR	5629753	AssignmentExpression	gw = ( horiz ? y1 - * y0 : x1 - * x0 )		5629729	2		=			
ANR	5629754	Identifier	gw		5629729	0					
ANR	5629755	ConditionalExpression	horiz ? y1 - * y0 : x1 - * x0		5629729	1					
ANR	5629756	Condition	horiz		5629729	0					
ANR	5629757	Identifier	horiz		5629729	0					
ANR	5629758	AdditiveExpression	y1 - * y0		5629729	1		-			
ANR	5629759	Identifier	y1		5629729	0					
ANR	5629760	UnaryOperationExpression	* y0		5629729	1					
ANR	5629761	UnaryOperator	*		5629729	0					
ANR	5629762	Identifier	y0		5629729	1					
ANR	5629763	AdditiveExpression	x1 - * x0		5629729	2		-			
ANR	5629764	Identifier	x1		5629729	0					
ANR	5629765	UnaryOperationExpression	* x0		5629729	1					
ANR	5629766	UnaryOperator	*		5629729	0					
ANR	5629767	Identifier	x0		5629729	1					
ANR	5629768	IdentifierDeclStatement	"t1_glyph_space_coord GW = any_abs ( gw ) , GW0 = GW ;"	1924:8:76972:77019	5629729	2	True				
ANR	5629769	IdentifierDecl	GW = any_abs ( gw )		5629729	0					
ANR	5629770	IdentifierDeclType	t1_glyph_space_coord		5629729	0					
ANR	5629771	Identifier	GW		5629729	1					
ANR	5629772	AssignmentExpression	GW = any_abs ( gw )		5629729	2		=			
ANR	5629773	Identifier	GW		5629729	0					
ANR	5629774	CallExpression	any_abs ( gw )		5629729	1					
ANR	5629775	Callee	any_abs		5629729	0					
ANR	5629776	Identifier	any_abs		5629729	0					
ANR	5629777	ArgumentList	gw		5629729	1					
ANR	5629778	Argument	gw		5629729	0					
ANR	5629779	Identifier	gw		5629729	0					
ANR	5629780	IdentifierDecl	GW0 = GW		5629729	1					
ANR	5629781	IdentifierDeclType	t1_glyph_space_coord		5629729	0					
ANR	5629782	Identifier	GW0		5629729	1					
ANR	5629783	AssignmentExpression	GW0 = GW		5629729	2		=			
ANR	5629784	Identifier	GW		5629729	0					
ANR	5629785	Identifier	GW		5629729	1					
ANR	5629786	IdentifierDeclStatement	bool positive = ( gw >= 0 ) ;	1925:8:77029:77054	5629729	3	True				
ANR	5629787	IdentifierDecl	positive = ( gw >= 0 )		5629729	0					
ANR	5629788	IdentifierDeclType	bool		5629729	0					
ANR	5629789	Identifier	positive		5629729	1					
ANR	5629790	AssignmentExpression	positive = ( gw >= 0 )		5629729	2		=			
ANR	5629791	Identifier	positive		5629729	0					
ANR	5629792	RelationalExpression	gw >= 0		5629729	1		>=			
ANR	5629793	Identifier	gw		5629729	0					
ANR	5629794	PrimaryExpression	0		5629729	1					
ANR	5629795	IdentifierDeclStatement	int19 cf = ( horiz ? self -> heigt_transform_coef_rat : self -> width_transform_coef_rat ) ;	1926:8:77064:77148	5629729	4	True				
ANR	5629796	IdentifierDecl	cf = ( horiz ? self -> heigt_transform_coef_rat : self -> width_transform_coef_rat )		5629729	0					
ANR	5629797	IdentifierDeclType	int19		5629729	0					
ANR	5629798	Identifier	cf		5629729	1					
ANR	5629799	AssignmentExpression	cf = ( horiz ? self -> heigt_transform_coef_rat : self -> width_transform_coef_rat )		5629729	2		=			
ANR	5629800	Identifier	cf		5629729	0					
ANR	5629801	ConditionalExpression	horiz ? self -> heigt_transform_coef_rat : self -> width_transform_coef_rat		5629729	1					
ANR	5629802	Condition	horiz		5629729	0					
ANR	5629803	Identifier	horiz		5629729	0					
ANR	5629804	PtrMemberAccess	self -> heigt_transform_coef_rat		5629729	1					
ANR	5629805	Identifier	self		5629729	0					
ANR	5629806	Identifier	heigt_transform_coef_rat		5629729	1					
ANR	5629807	PtrMemberAccess	self -> width_transform_coef_rat		5629729	2					
ANR	5629808	Identifier	self		5629729	0					
ANR	5629809	Identifier	width_transform_coef_rat		5629729	1					
ANR	5629810	IdentifierDeclStatement	"t1_hinter_space_coord dx0 , dy0 , dx1 , dy1 , dgw ;"	1927:8:77158:77203	5629729	5	True				
ANR	5629811	IdentifierDecl	dx0		5629729	0					
ANR	5629812	IdentifierDeclType	t1_hinter_space_coord		5629729	0					
ANR	5629813	Identifier	dx0		5629729	1					
ANR	5629814	IdentifierDecl	dy0		5629729	1					
ANR	5629815	IdentifierDeclType	t1_hinter_space_coord		5629729	0					
ANR	5629816	Identifier	dy0		5629729	1					
ANR	5629817	IdentifierDecl	dx1		5629729	2					
ANR	5629818	IdentifierDeclType	t1_hinter_space_coord		5629729	0					
ANR	5629819	Identifier	dx1		5629729	1					
ANR	5629820	IdentifierDecl	dy1		5629729	3					
ANR	5629821	IdentifierDeclType	t1_hinter_space_coord		5629729	0					
ANR	5629822	Identifier	dy1		5629729	1					
ANR	5629823	IdentifierDecl	dgw		5629729	4					
ANR	5629824	IdentifierDeclType	t1_hinter_space_coord		5629729	0					
ANR	5629825	Identifier	dgw		5629729	1					
ANR	5629826	ExpressionStatement	"t1_hinter__align_to_grid__general ( self , unit , * x0 , * y0 , & dx0 , & dy0 , align_to_pixels , align_to_pixels )"	1929:8:77214:77315	5629729	6	True				
ANR	5629827	CallExpression	"t1_hinter__align_to_grid__general ( self , unit , * x0 , * y0 , & dx0 , & dy0 , align_to_pixels , align_to_pixels )"		5629729	0					
ANR	5629828	Callee	t1_hinter__align_to_grid__general		5629729	0					
ANR	5629829	Identifier	t1_hinter__align_to_grid__general		5629729	0					
ANR	5629830	ArgumentList	self		5629729	1					
ANR	5629831	Argument	self		5629729	0					
ANR	5629832	Identifier	self		5629729	0					
ANR	5629833	Argument	unit		5629729	1					
ANR	5629834	Identifier	unit		5629729	0					
ANR	5629835	Argument	* x0		5629729	2					
ANR	5629836	UnaryOperationExpression	* x0		5629729	0					
ANR	5629837	UnaryOperator	*		5629729	0					
ANR	5629838	Identifier	x0		5629729	1					
ANR	5629839	Argument	* y0		5629729	3					
ANR	5629840	UnaryOperationExpression	* y0		5629729	0					
ANR	5629841	UnaryOperator	*		5629729	0					
ANR	5629842	Identifier	y0		5629729	1					
ANR	5629843	Argument	& dx0		5629729	4					
ANR	5629844	UnaryOperationExpression	& dx0		5629729	0					
ANR	5629845	UnaryOperator	&		5629729	0					
ANR	5629846	Identifier	dx0		5629729	1					
ANR	5629847	Argument	& dy0		5629729	5					
ANR	5629848	UnaryOperationExpression	& dy0		5629729	0					
ANR	5629849	UnaryOperator	&		5629729	0					
ANR	5629850	Identifier	dy0		5629729	1					
ANR	5629851	Argument	align_to_pixels		5629729	6					
ANR	5629852	Identifier	align_to_pixels		5629729	0					
ANR	5629853	Argument	align_to_pixels		5629729	7					
ANR	5629854	Identifier	align_to_pixels		5629729	0					
ANR	5629855	ExpressionStatement	"t1_hinter__align_to_grid__general ( self , unit , x1 , y1 , & dx1 , & dy1 , align_to_pixels , align_to_pixels )"	1930:8:77325:77426	5629729	7	True				
ANR	5629856	CallExpression	"t1_hinter__align_to_grid__general ( self , unit , x1 , y1 , & dx1 , & dy1 , align_to_pixels , align_to_pixels )"		5629729	0					
ANR	5629857	Callee	t1_hinter__align_to_grid__general		5629729	0					
ANR	5629858	Identifier	t1_hinter__align_to_grid__general		5629729	0					
ANR	5629859	ArgumentList	self		5629729	1					
ANR	5629860	Argument	self		5629729	0					
ANR	5629861	Identifier	self		5629729	0					
ANR	5629862	Argument	unit		5629729	1					
ANR	5629863	Identifier	unit		5629729	0					
ANR	5629864	Argument	x1		5629729	2					
ANR	5629865	Identifier	x1		5629729	0					
ANR	5629866	Argument	y1		5629729	3					
ANR	5629867	Identifier	y1		5629729	0					
ANR	5629868	Argument	& dx1		5629729	4					
ANR	5629869	UnaryOperationExpression	& dx1		5629729	0					
ANR	5629870	UnaryOperator	&		5629729	0					
ANR	5629871	Identifier	dx1		5629729	1					
ANR	5629872	Argument	& dy1		5629729	5					
ANR	5629873	UnaryOperationExpression	& dy1		5629729	0					
ANR	5629874	UnaryOperator	&		5629729	0					
ANR	5629875	Identifier	dy1		5629729	1					
ANR	5629876	Argument	align_to_pixels		5629729	6					
ANR	5629877	Identifier	align_to_pixels		5629729	0					
ANR	5629878	Argument	align_to_pixels		5629729	7					
ANR	5629879	Identifier	align_to_pixels		5629729	0					
ANR	5629880	ExpressionStatement	"t1_hinter__align_stem_width ( self , & GW , hint )"	1931:8:77436:77480	5629729	8	True				
ANR	5629881	CallExpression	"t1_hinter__align_stem_width ( self , & GW , hint )"		5629729	0					
ANR	5629882	Callee	t1_hinter__align_stem_width		5629729	0					
ANR	5629883	Identifier	t1_hinter__align_stem_width		5629729	0					
ANR	5629884	ArgumentList	self		5629729	1					
ANR	5629885	Argument	self		5629729	0					
ANR	5629886	Identifier	self		5629729	0					
ANR	5629887	Argument	& GW		5629729	1					
ANR	5629888	UnaryOperationExpression	& GW		5629729	0					
ANR	5629889	UnaryOperator	&		5629729	0					
ANR	5629890	Identifier	GW		5629729	1					
ANR	5629891	Argument	hint		5629729	2					
ANR	5629892	Identifier	hint		5629729	0					
ANR	5629893	ExpressionStatement	"dgw = g2o_dist ( GW - GW0 , cf )"	1932:8:77490:77518	5629729	9	True				
ANR	5629894	AssignmentExpression	"dgw = g2o_dist ( GW - GW0 , cf )"		5629729	0		=			
ANR	5629895	Identifier	dgw		5629729	0					
ANR	5629896	CallExpression	"g2o_dist ( GW - GW0 , cf )"		5629729	1					
ANR	5629897	Callee	g2o_dist		5629729	0					
ANR	5629898	Identifier	g2o_dist		5629729	0					
ANR	5629899	ArgumentList	GW - GW0		5629729	1					
ANR	5629900	Argument	GW - GW0		5629729	0					
ANR	5629901	AdditiveExpression	GW - GW0		5629729	0		-			
ANR	5629902	Identifier	GW		5629729	0					
ANR	5629903	Identifier	GW0		5629729	1					
ANR	5629904	Argument	cf		5629729	1					
ANR	5629905	Identifier	cf		5629729	0					
ANR	5629906	IfStatement	if ( ( horiz ? ( ! self -> transposed ? self -> ctmf . yy : self -> ctmf . xy ) : ( ! self -> transposed ? self -> ctmf . xx : self -> ctmf . yx ) ) < 0 )		5629729	10					
ANR	5629907	Condition	( horiz ? ( ! self -> transposed ? self -> ctmf . yy : self -> ctmf . xy ) : ( ! self -> transposed ? self -> ctmf . xx : self -> ctmf . yx ) ) < 0	1933:12:77532:77669	5629729	0	True				
ANR	5629908	RelationalExpression	( horiz ? ( ! self -> transposed ? self -> ctmf . yy : self -> ctmf . xy ) : ( ! self -> transposed ? self -> ctmf . xx : self -> ctmf . yx ) ) < 0		5629729	0		<			
ANR	5629909	ConditionalExpression	horiz ? ( ! self -> transposed ? self -> ctmf . yy : self -> ctmf . xy ) : ( ! self -> transposed ? self -> ctmf . xx : self -> ctmf . yx )		5629729	0					
ANR	5629910	Condition	horiz		5629729	0					
ANR	5629911	Identifier	horiz		5629729	0					
ANR	5629912	ConditionalExpression	! self -> transposed ? self -> ctmf . yy : self -> ctmf . xy		5629729	1					
ANR	5629913	Condition	! self -> transposed		5629729	0					
ANR	5629914	UnaryOperationExpression	! self -> transposed		5629729	0					
ANR	5629915	UnaryOperator	!		5629729	0					
ANR	5629916	PtrMemberAccess	self -> transposed		5629729	1					
ANR	5629917	Identifier	self		5629729	0					
ANR	5629918	Identifier	transposed		5629729	1					
ANR	5629919	MemberAccess	self -> ctmf . yy		5629729	1					
ANR	5629920	PtrMemberAccess	self -> ctmf		5629729	0					
ANR	5629921	Identifier	self		5629729	0					
ANR	5629922	Identifier	ctmf		5629729	1					
ANR	5629923	Identifier	yy		5629729	1					
ANR	5629924	MemberAccess	self -> ctmf . xy		5629729	2					
ANR	5629925	PtrMemberAccess	self -> ctmf		5629729	0					
ANR	5629926	Identifier	self		5629729	0					
ANR	5629927	Identifier	ctmf		5629729	1					
ANR	5629928	Identifier	xy		5629729	1					
ANR	5629929	ConditionalExpression	! self -> transposed ? self -> ctmf . xx : self -> ctmf . yx		5629729	2					
ANR	5629930	Condition	! self -> transposed		5629729	0					
ANR	5629931	UnaryOperationExpression	! self -> transposed		5629729	0					
ANR	5629932	UnaryOperator	!		5629729	0					
ANR	5629933	PtrMemberAccess	self -> transposed		5629729	1					
ANR	5629934	Identifier	self		5629729	0					
ANR	5629935	Identifier	transposed		5629729	1					
ANR	5629936	MemberAccess	self -> ctmf . xx		5629729	1					
ANR	5629937	PtrMemberAccess	self -> ctmf		5629729	0					
ANR	5629938	Identifier	self		5629729	0					
ANR	5629939	Identifier	ctmf		5629729	1					
ANR	5629940	Identifier	xx		5629729	1					
ANR	5629941	MemberAccess	self -> ctmf . yx		5629729	2					
ANR	5629942	PtrMemberAccess	self -> ctmf		5629729	0					
ANR	5629943	Identifier	self		5629729	0					
ANR	5629944	Identifier	ctmf		5629729	1					
ANR	5629945	Identifier	yx		5629729	1					
ANR	5629946	PrimaryExpression	0		5629729	1					
ANR	5629947	ExpressionStatement	dgw = - dgw	1935:12:77684:77695	5629729	1	True				
ANR	5629948	AssignmentExpression	dgw = - dgw		5629729	0		=			
ANR	5629949	Identifier	dgw		5629729	0					
ANR	5629950	UnaryOperationExpression	- dgw		5629729	1					
ANR	5629951	UnaryOperator	-		5629729	0					
ANR	5629952	Identifier	dgw		5629729	1					
ANR	5629953	IfStatement	if ( horiz )		5629729	11					
ANR	5629954	Condition	horiz	1936:12:77709:77713	5629729	0	True				
ANR	5629955	Identifier	horiz		5629729	0					
ANR	5629956	CompoundStatement		20:12:1068:1131	5629729	1					
ANR	5629957	IdentifierDeclStatement	t1_hinter_space_coord ddy1 = ( positive ? dy0 - dgw : dy0 + dgw ) ;	1937:12:77730:77793	5629729	0	True				
ANR	5629958	IdentifierDecl	ddy1 = ( positive ? dy0 - dgw : dy0 + dgw )		5629729	0					
ANR	5629959	IdentifierDeclType	t1_hinter_space_coord		5629729	0					
ANR	5629960	Identifier	ddy1		5629729	1					
ANR	5629961	AssignmentExpression	ddy1 = ( positive ? dy0 - dgw : dy0 + dgw )		5629729	2		=			
ANR	5629962	Identifier	ddy1		5629729	0					
ANR	5629963	ConditionalExpression	positive ? dy0 - dgw : dy0 + dgw		5629729	1					
ANR	5629964	Condition	positive		5629729	0					
ANR	5629965	Identifier	positive		5629729	0					
ANR	5629966	AdditiveExpression	dy0 - dgw		5629729	1		-			
ANR	5629967	Identifier	dy0		5629729	0					
ANR	5629968	Identifier	dgw		5629729	1					
ANR	5629969	AdditiveExpression	dy0 + dgw		5629729	2		+			
ANR	5629970	Identifier	dy0		5629729	0					
ANR	5629971	Identifier	dgw		5629729	1					
ANR	5629972	IdentifierDeclStatement	t1_hinter_space_coord ddy0 = ( positive ? dy1 + dgw : dy1 - dgw ) ;	1938:12:77807:77870	5629729	1	True				
ANR	5629973	IdentifierDecl	ddy0 = ( positive ? dy1 + dgw : dy1 - dgw )		5629729	0					
ANR	5629974	IdentifierDeclType	t1_hinter_space_coord		5629729	0					
ANR	5629975	Identifier	ddy0		5629729	1					
ANR	5629976	AssignmentExpression	ddy0 = ( positive ? dy1 + dgw : dy1 - dgw )		5629729	2		=			
ANR	5629977	Identifier	ddy0		5629729	0					
ANR	5629978	ConditionalExpression	positive ? dy1 + dgw : dy1 - dgw		5629729	1					
ANR	5629979	Condition	positive		5629729	0					
ANR	5629980	Identifier	positive		5629729	0					
ANR	5629981	AdditiveExpression	dy1 + dgw		5629729	1		+			
ANR	5629982	Identifier	dy1		5629729	0					
ANR	5629983	Identifier	dgw		5629729	1					
ANR	5629984	AdditiveExpression	dy1 - dgw		5629729	2		-			
ANR	5629985	Identifier	dy1		5629729	0					
ANR	5629986	Identifier	dgw		5629729	1					
ANR	5629987	IfStatement	if ( any_abs ( dy0 + ddy1 ) > any_abs ( dy1 + ddy0 ) )		5629729	2					
ANR	5629988	Condition	any_abs ( dy0 + ddy1 ) > any_abs ( dy1 + ddy0 )	1940:16:77889:77929	5629729	0	True				
ANR	5629989	RelationalExpression	any_abs ( dy0 + ddy1 ) > any_abs ( dy1 + ddy0 )		5629729	0		>			
ANR	5629990	CallExpression	any_abs ( dy0 + ddy1 )		5629729	0					
ANR	5629991	Callee	any_abs		5629729	0					
ANR	5629992	Identifier	any_abs		5629729	0					
ANR	5629993	ArgumentList	dy0 + ddy1		5629729	1					
ANR	5629994	Argument	dy0 + ddy1		5629729	0					
ANR	5629995	AdditiveExpression	dy0 + ddy1		5629729	0		+			
ANR	5629996	Identifier	dy0		5629729	0					
ANR	5629997	Identifier	ddy1		5629729	1					
ANR	5629998	CallExpression	any_abs ( dy1 + ddy0 )		5629729	1					
ANR	5629999	Callee	any_abs		5629729	0					
ANR	5630000	Identifier	any_abs		5629729	0					
ANR	5630001	ArgumentList	dy1 + ddy0		5629729	1					
ANR	5630002	Argument	dy1 + ddy0		5629729	0					
ANR	5630003	AdditiveExpression	dy1 + ddy0		5629729	0		+			
ANR	5630004	Identifier	dy1		5629729	0					
ANR	5630005	Identifier	ddy0		5629729	1					
ANR	5630006	ExpressionStatement	dy0 = ddy0	1941:16:77948:77958	5629729	1	True				
ANR	5630007	AssignmentExpression	dy0 = ddy0		5629729	0		=			
ANR	5630008	Identifier	dy0		5629729	0					
ANR	5630009	Identifier	ddy0		5629729	1					
ANR	5630010	ElseStatement	else		5629729	0					
ANR	5630011	CompoundStatement		26:12:1327:1390	5629729	0					
ANR	5630012	IdentifierDeclStatement	t1_hinter_space_coord ddx1 = ( positive ? dx0 - dgw : dx0 + dgw ) ;	1943:12:77989:78052	5629729	0	True				
ANR	5630013	IdentifierDecl	ddx1 = ( positive ? dx0 - dgw : dx0 + dgw )		5629729	0					
ANR	5630014	IdentifierDeclType	t1_hinter_space_coord		5629729	0					
ANR	5630015	Identifier	ddx1		5629729	1					
ANR	5630016	AssignmentExpression	ddx1 = ( positive ? dx0 - dgw : dx0 + dgw )		5629729	2		=			
ANR	5630017	Identifier	ddx1		5629729	0					
ANR	5630018	ConditionalExpression	positive ? dx0 - dgw : dx0 + dgw		5629729	1					
ANR	5630019	Condition	positive		5629729	0					
ANR	5630020	Identifier	positive		5629729	0					
ANR	5630021	AdditiveExpression	dx0 - dgw		5629729	1		-			
ANR	5630022	Identifier	dx0		5629729	0					
ANR	5630023	Identifier	dgw		5629729	1					
ANR	5630024	AdditiveExpression	dx0 + dgw		5629729	2		+			
ANR	5630025	Identifier	dx0		5629729	0					
ANR	5630026	Identifier	dgw		5629729	1					
ANR	5630027	IdentifierDeclStatement	t1_hinter_space_coord ddx0 = ( positive ? dx1 + dgw : dx1 - dgw ) ;	1944:12:78066:78129	5629729	1	True				
ANR	5630028	IdentifierDecl	ddx0 = ( positive ? dx1 + dgw : dx1 - dgw )		5629729	0					
ANR	5630029	IdentifierDeclType	t1_hinter_space_coord		5629729	0					
ANR	5630030	Identifier	ddx0		5629729	1					
ANR	5630031	AssignmentExpression	ddx0 = ( positive ? dx1 + dgw : dx1 - dgw )		5629729	2		=			
ANR	5630032	Identifier	ddx0		5629729	0					
ANR	5630033	ConditionalExpression	positive ? dx1 + dgw : dx1 - dgw		5629729	1					
ANR	5630034	Condition	positive		5629729	0					
ANR	5630035	Identifier	positive		5629729	0					
ANR	5630036	AdditiveExpression	dx1 + dgw		5629729	1		+			
ANR	5630037	Identifier	dx1		5629729	0					
ANR	5630038	Identifier	dgw		5629729	1					
ANR	5630039	AdditiveExpression	dx1 - dgw		5629729	2		-			
ANR	5630040	Identifier	dx1		5629729	0					
ANR	5630041	Identifier	dgw		5629729	1					
ANR	5630042	IfStatement	if ( any_abs ( dx0 + ddx1 ) > any_abs ( dx1 + ddx0 ) )		5629729	2					
ANR	5630043	Condition	any_abs ( dx0 + ddx1 ) > any_abs ( dx1 + ddx0 )	1946:16:78148:78188	5629729	0	True				
ANR	5630044	RelationalExpression	any_abs ( dx0 + ddx1 ) > any_abs ( dx1 + ddx0 )		5629729	0		>			
ANR	5630045	CallExpression	any_abs ( dx0 + ddx1 )		5629729	0					
ANR	5630046	Callee	any_abs		5629729	0					
ANR	5630047	Identifier	any_abs		5629729	0					
ANR	5630048	ArgumentList	dx0 + ddx1		5629729	1					
ANR	5630049	Argument	dx0 + ddx1		5629729	0					
ANR	5630050	AdditiveExpression	dx0 + ddx1		5629729	0		+			
ANR	5630051	Identifier	dx0		5629729	0					
ANR	5630052	Identifier	ddx1		5629729	1					
ANR	5630053	CallExpression	any_abs ( dx1 + ddx0 )		5629729	1					
ANR	5630054	Callee	any_abs		5629729	0					
ANR	5630055	Identifier	any_abs		5629729	0					
ANR	5630056	ArgumentList	dx1 + ddx0		5629729	1					
ANR	5630057	Argument	dx1 + ddx0		5629729	0					
ANR	5630058	AdditiveExpression	dx1 + ddx0		5629729	0		+			
ANR	5630059	Identifier	dx1		5629729	0					
ANR	5630060	Identifier	ddx0		5629729	1					
ANR	5630061	ExpressionStatement	dx0 = ddx0	1947:16:78207:78217	5629729	1	True				
ANR	5630062	AssignmentExpression	dx0 = ddx0		5629729	0		=			
ANR	5630063	Identifier	dx0		5629729	0					
ANR	5630064	Identifier	ddx0		5629729	1					
ANR	5630065	ExpressionStatement	"t1_hinter__align_to_grid__final ( self , x0 , y0 , dx0 , dy0 )"	1949:8:78237:78292	5629729	12	True				
ANR	5630066	CallExpression	"t1_hinter__align_to_grid__final ( self , x0 , y0 , dx0 , dy0 )"		5629729	0					
ANR	5630067	Callee	t1_hinter__align_to_grid__final		5629729	0					
ANR	5630068	Identifier	t1_hinter__align_to_grid__final		5629729	0					
ANR	5630069	ArgumentList	self		5629729	1					
ANR	5630070	Argument	self		5629729	0					
ANR	5630071	Identifier	self		5629729	0					
ANR	5630072	Argument	x0		5629729	1					
ANR	5630073	Identifier	x0		5629729	0					
ANR	5630074	Argument	y0		5629729	2					
ANR	5630075	Identifier	y0		5629729	0					
ANR	5630076	Argument	dx0		5629729	3					
ANR	5630077	Identifier	dx0		5629729	0					
ANR	5630078	Argument	dy0		5629729	4					
ANR	5630079	Identifier	dy0		5629729	0					
ANR	5630080	ReturnType	static void		5629729	1					
ANR	5630081	Identifier	t1_hinter__align_stem_to_grid		5629729	2					
ANR	5630082	ParameterList	"t1_hinter * self , int32_t unit , t1_glyph_space_coord * x0 , t1_glyph_space_coord * y0 , t1_glyph_space_coord x1 , t1_glyph_space_coord y1 , bool align_to_pixels , const t1_hint * hint"		5629729	3					
ANR	5630083	Parameter	t1_hinter * self	1915:42:76523:76538	5629729	0	True				
ANR	5630084	ParameterType	t1_hinter *		5629729	0					
ANR	5630085	Identifier	self		5629729	1					
ANR	5630086	Parameter	int32_t unit	1915:60:76541:76552	5629729	1	True				
ANR	5630087	ParameterType	int32_t		5629729	0					
ANR	5630088	Identifier	unit		5629729	1					
ANR	5630089	Parameter	t1_glyph_space_coord * x0	1916:12:76567:76590	5629729	2	True				
ANR	5630090	ParameterType	t1_glyph_space_coord *		5629729	0					
ANR	5630091	Identifier	x0		5629729	1					
ANR	5630092	Parameter	t1_glyph_space_coord * y0	1916:38:76593:76616	5629729	3	True				
ANR	5630093	ParameterType	t1_glyph_space_coord *		5629729	0					
ANR	5630094	Identifier	y0		5629729	1					
ANR	5630095	Parameter	t1_glyph_space_coord x1	1917:12:76631:76654	5629729	4	True				
ANR	5630096	ParameterType	t1_glyph_space_coord		5629729	0					
ANR	5630097	Identifier	x1		5629729	1					
ANR	5630098	Parameter	t1_glyph_space_coord y1	1917:38:76657:76680	5629729	5	True				
ANR	5630099	ParameterType	t1_glyph_space_coord		5629729	0					
ANR	5630100	Identifier	y1		5629729	1					
ANR	5630101	Parameter	bool align_to_pixels	1918:12:76695:76714	5629729	6	True				
ANR	5630102	ParameterType	bool		5629729	0					
ANR	5630103	Identifier	align_to_pixels		5629729	1					
ANR	5630104	Parameter	const t1_hint * hint	1918:34:76717:76735	5629729	7	True				
ANR	5630105	ParameterType	const t1_hint *		5629729	0					
ANR	5630106	Identifier	hint		5629729	1					
ANR	5630107	CFGEntryNode	ENTRY		5629729		True				
ANR	5630108	CFGExitNode	EXIT		5629729		True				
ANR	5630109	Symbol	GW0		5629729						
ANR	5630110	Symbol	& dx1		5629729						
ANR	5630111	Symbol	& dx0		5629729						
ANR	5630112	Symbol	g2o_dist		5629729						
ANR	5630113	Symbol	self -> ctmf . xy		5629729						
ANR	5630114	Symbol	self -> ctmf . xx		5629729						
ANR	5630115	Symbol	horiz		5629729						
ANR	5630116	Symbol	align_to_pixels		5629729						
ANR	5630117	Symbol	dgw		5629729						
ANR	5630118	Symbol	ddx0		5629729						
ANR	5630119	Symbol	y0		5629729						
ANR	5630120	Symbol	ddx1		5629729						
ANR	5630121	Symbol	y1		5629729						
ANR	5630122	Symbol	any_abs		5629729						
ANR	5630123	Symbol	dx1		5629729						
ANR	5630124	Symbol	hint -> type		5629729						
ANR	5630125	Symbol	dx0		5629729						
ANR	5630126	Symbol	hstem		5629729						
ANR	5630127	Symbol	* y0		5629729						
ANR	5630128	Symbol	* hint		5629729						
ANR	5630129	Symbol	cf		5629729						
ANR	5630130	Symbol	& dy1		5629729						
ANR	5630131	Symbol	* self		5629729						
ANR	5630132	Symbol	& dy0		5629729						
ANR	5630133	Symbol	self -> ctmf		5629729						
ANR	5630134	Symbol	positive		5629729						
ANR	5630135	Symbol	self -> ctmf . yy		5629729						
ANR	5630136	Symbol	self -> ctmf . yx		5629729						
ANR	5630137	Symbol	gw		5629729						
ANR	5630138	Symbol	GW		5629729						
ANR	5630139	Symbol	self -> width_transform_coef_rat		5629729						
ANR	5630140	Symbol	unit		5629729						
ANR	5630141	Symbol	ddy1		5629729						
ANR	5630142	Symbol	hint		5629729						
ANR	5630143	Symbol	x0		5629729						
ANR	5630144	Symbol	self		5629729						
ANR	5630145	Symbol	x1		5629729						
ANR	5630146	Symbol	ddy0		5629729						
ANR	5630147	Symbol	dy0		5629729						
ANR	5630148	Symbol	self -> transposed		5629729						
ANR	5630149	Symbol	& GW		5629729						
ANR	5630150	Symbol	self -> heigt_transform_coef_rat		5629729						
ANR	5630151	Symbol	* x0		5629729						
ANR	5630152	Symbol	dy1		5629729						
ANR	5630153	Function	g2o_dist_blue	1954:0:78336:78647							
ANR	5630154	FunctionDef	"g2o_dist_blue (t1_hinter * h , t1_glyph_space_coord gw)"		5630153	0					
ANR	5630155	CompoundStatement		1955:0:78426:78647	5630153	0					
ANR	5630156	IdentifierDeclStatement	double W = fixed2float ( gw ) ;	1955:3:78430:78456	5630153	0	True				
ANR	5630157	IdentifierDecl	W = fixed2float ( gw )		5630153	0					
ANR	5630158	IdentifierDeclType	double		5630153	0					
ANR	5630159	Identifier	W		5630153	1					
ANR	5630160	AssignmentExpression	W = fixed2float ( gw )		5630153	2		=			
ANR	5630161	Identifier	W		5630153	0					
ANR	5630162	CallExpression	fixed2float ( gw )		5630153	1					
ANR	5630163	Callee	fixed2float		5630153	0					
ANR	5630164	Identifier	fixed2float		5630153	0					
ANR	5630165	ArgumentList	gw		5630153	1					
ANR	5630166	Argument	gw		5630153	0					
ANR	5630167	Identifier	gw		5630153	0					
ANR	5630168	IdentifierDeclStatement	double w = W * ( h -> resolution * h -> font_size * h -> base_font_scale - h -> BlueScale ) + 1 ;	1956:4:78462:78547	5630153	1	True				
ANR	5630169	IdentifierDecl	w = W * ( h -> resolution * h -> font_size * h -> base_font_scale - h -> BlueScale ) + 1		5630153	0					
ANR	5630170	IdentifierDeclType	double		5630153	0					
ANR	5630171	Identifier	w		5630153	1					
ANR	5630172	AssignmentExpression	w = W * ( h -> resolution * h -> font_size * h -> base_font_scale - h -> BlueScale ) + 1		5630153	2		=			
ANR	5630173	Identifier	w		5630153	0					
ANR	5630174	AdditiveExpression	W * ( h -> resolution * h -> font_size * h -> base_font_scale - h -> BlueScale ) + 1		5630153	1		+			
ANR	5630175	MultiplicativeExpression	W * ( h -> resolution * h -> font_size * h -> base_font_scale - h -> BlueScale )		5630153	0		*			
ANR	5630176	Identifier	W		5630153	0					
ANR	5630177	AdditiveExpression	h -> resolution * h -> font_size * h -> base_font_scale - h -> BlueScale		5630153	1		-			
ANR	5630178	MultiplicativeExpression	h -> resolution * h -> font_size * h -> base_font_scale		5630153	0		*			
ANR	5630179	PtrMemberAccess	h -> resolution		5630153	0					
ANR	5630180	Identifier	h		5630153	0					
ANR	5630181	Identifier	resolution		5630153	1					
ANR	5630182	MultiplicativeExpression	h -> font_size * h -> base_font_scale		5630153	1		*			
ANR	5630183	PtrMemberAccess	h -> font_size		5630153	0					
ANR	5630184	Identifier	h		5630153	0					
ANR	5630185	Identifier	font_size		5630153	1					
ANR	5630186	PtrMemberAccess	h -> base_font_scale		5630153	1					
ANR	5630187	Identifier	h		5630153	0					
ANR	5630188	Identifier	base_font_scale		5630153	1					
ANR	5630189	PtrMemberAccess	h -> BlueScale		5630153	1					
ANR	5630190	Identifier	h		5630153	0					
ANR	5630191	Identifier	BlueScale		5630153	1					
ANR	5630192	PrimaryExpression	1		5630153	1					
ANR	5630193	ReturnStatement	return ( t1_hinter_space_coord ) ( w * h -> g2o_fraction ) ;	1958:4:78554:78605	5630153	2	True				
ANR	5630194	CastExpression	( t1_hinter_space_coord ) ( w * h -> g2o_fraction )		5630153	0					
ANR	5630195	CastTarget	t1_hinter_space_coord		5630153	0					
ANR	5630196	MultiplicativeExpression	w * h -> g2o_fraction		5630153	1		*			
ANR	5630197	Identifier	w		5630153	0					
ANR	5630198	PtrMemberAccess	h -> g2o_fraction		5630153	1					
ANR	5630199	Identifier	h		5630153	0					
ANR	5630200	Identifier	g2o_fraction		5630153	1					
ANR	5630201	ReturnType	static inline t1_hinter_space_coord		5630153	1					
ANR	5630202	Identifier	g2o_dist_blue		5630153	2					
ANR	5630203	ParameterList	"t1_hinter * h , t1_glyph_space_coord gw"		5630153	3					
ANR	5630204	Parameter	t1_hinter * h	1954:50:78386:78398	5630153	0	True				
ANR	5630205	ParameterType	t1_hinter *		5630153	0					
ANR	5630206	Identifier	h		5630153	1					
ANR	5630207	Parameter	t1_glyph_space_coord gw	1954:65:78401:78423	5630153	1	True				
ANR	5630208	ParameterType	t1_glyph_space_coord		5630153	0					
ANR	5630209	Identifier	gw		5630153	1					
ANR	5630210	CFGEntryNode	ENTRY		5630153		True				
ANR	5630211	CFGExitNode	EXIT		5630153		True				
ANR	5630212	Symbol	gw		5630153						
ANR	5630213	Symbol	h -> resolution		5630153						
ANR	5630214	Symbol	* h		5630153						
ANR	5630215	Symbol	h -> g2o_fraction		5630153						
ANR	5630216	Symbol	fixed2float		5630153						
ANR	5630217	Symbol	h -> BlueScale		5630153						
ANR	5630218	Symbol	W		5630153						
ANR	5630219	Symbol	h -> font_size		5630153						
ANR	5630220	Symbol	w		5630153						
ANR	5630221	Symbol	h		5630153						
ANR	5630222	Symbol	h -> base_font_scale		5630153						
ANR	5630223	Function	t1_hinter__add_overshoot	1962:0:78650:79210							
ANR	5630224	FunctionDef	"t1_hinter__add_overshoot (t1_hinter * self , t1_zone * zone , t1_glyph_space_coord * x , t1_glyph_space_coord * y)"		5630223	0					
ANR	5630225	CompoundStatement		1963:0:78773:79210	5630223	0					
ANR	5630226	IdentifierDeclStatement	t1_glyph_space_coord gy = * y ;	1963:3:78777:78805	5630223	0	True				
ANR	5630227	IdentifierDecl	gy = * y		5630223	0					
ANR	5630228	IdentifierDeclType	t1_glyph_space_coord		5630223	0					
ANR	5630229	Identifier	gy		5630223	1					
ANR	5630230	AssignmentExpression	gy = * y		5630223	2		=			
ANR	5630231	Identifier	gy		5630223	0					
ANR	5630232	UnaryOperationExpression	* y		5630223	1					
ANR	5630233	UnaryOperator	*		5630223	0					
ANR	5630234	Identifier	y		5630223	1					
ANR	5630235	IdentifierDeclStatement	t1_glyph_space_coord gw = any_abs ( gy - zone -> y ) ;	1965:4:78885:78932	5630223	1	True				
ANR	5630236	IdentifierDecl	gw = any_abs ( gy - zone -> y )		5630223	0					
ANR	5630237	IdentifierDeclType	t1_glyph_space_coord		5630223	0					
ANR	5630238	Identifier	gw		5630223	1					
ANR	5630239	AssignmentExpression	gw = any_abs ( gy - zone -> y )		5630223	2		=			
ANR	5630240	Identifier	gw		5630223	0					
ANR	5630241	CallExpression	any_abs ( gy - zone -> y )		5630223	1					
ANR	5630242	Callee	any_abs		5630223	0					
ANR	5630243	Identifier	any_abs		5630223	0					
ANR	5630244	ArgumentList	gy - zone -> y		5630223	1					
ANR	5630245	Argument	gy - zone -> y		5630223	0					
ANR	5630246	AdditiveExpression	gy - zone -> y		5630223	0		-			
ANR	5630247	Identifier	gy		5630223	0					
ANR	5630248	PtrMemberAccess	zone -> y		5630223	1					
ANR	5630249	Identifier	zone		5630223	0					
ANR	5630250	Identifier	y		5630223	1					
ANR	5630251	IdentifierDeclStatement	"t1_hinter_space_coord ow = g2o_dist_blue ( self , gw ) ;"	1966:4:78938:78988	5630223	2	True				
ANR	5630252	IdentifierDecl	"ow = g2o_dist_blue ( self , gw )"		5630223	0					
ANR	5630253	IdentifierDeclType	t1_hinter_space_coord		5630223	0					
ANR	5630254	Identifier	ow		5630223	1					
ANR	5630255	AssignmentExpression	"ow = g2o_dist_blue ( self , gw )"		5630223	2		=			
ANR	5630256	Identifier	ow		5630223	0					
ANR	5630257	CallExpression	"g2o_dist_blue ( self , gw )"		5630223	1					
ANR	5630258	Callee	g2o_dist_blue		5630223	0					
ANR	5630259	Identifier	g2o_dist_blue		5630223	0					
ANR	5630260	ArgumentList	self		5630223	1					
ANR	5630261	Argument	self		5630223	0					
ANR	5630262	Identifier	self		5630223	0					
ANR	5630263	Argument	gw		5630223	1					
ANR	5630264	Identifier	gw		5630223	0					
ANR	5630265	IdentifierDeclStatement	t1_hinter_space_coord ow1 = ow / self -> g2o_fraction * self -> g2o_fraction ;	1967:4:78994:79066	5630223	3	True				
ANR	5630266	IdentifierDecl	ow1 = ow / self -> g2o_fraction * self -> g2o_fraction		5630223	0					
ANR	5630267	IdentifierDeclType	t1_hinter_space_coord		5630223	0					
ANR	5630268	Identifier	ow1		5630223	1					
ANR	5630269	AssignmentExpression	ow1 = ow / self -> g2o_fraction * self -> g2o_fraction		5630223	2		=			
ANR	5630270	Identifier	ow1		5630223	0					
ANR	5630271	MultiplicativeExpression	ow / self -> g2o_fraction * self -> g2o_fraction		5630223	1		/			
ANR	5630272	Identifier	ow		5630223	0					
ANR	5630273	MultiplicativeExpression	self -> g2o_fraction * self -> g2o_fraction		5630223	1		*			
ANR	5630274	PtrMemberAccess	self -> g2o_fraction		5630223	0					
ANR	5630275	Identifier	self		5630223	0					
ANR	5630276	Identifier	g2o_fraction		5630223	1					
ANR	5630277	PtrMemberAccess	self -> g2o_fraction		5630223	1					
ANR	5630278	Identifier	self		5630223	0					
ANR	5630279	Identifier	g2o_fraction		5630223	1					
ANR	5630280	IdentifierDeclStatement	"t1_glyph_space_coord gw1 = o2g_dist ( self , ow1 , self -> heigt_transform_coef_inv ) ;"	1968:4:79072:79150	5630223	4	True				
ANR	5630281	IdentifierDecl	"gw1 = o2g_dist ( self , ow1 , self -> heigt_transform_coef_inv )"		5630223	0					
ANR	5630282	IdentifierDeclType	t1_glyph_space_coord		5630223	0					
ANR	5630283	Identifier	gw1		5630223	1					
ANR	5630284	AssignmentExpression	"gw1 = o2g_dist ( self , ow1 , self -> heigt_transform_coef_inv )"		5630223	2		=			
ANR	5630285	Identifier	gw1		5630223	0					
ANR	5630286	CallExpression	"o2g_dist ( self , ow1 , self -> heigt_transform_coef_inv )"		5630223	1					
ANR	5630287	Callee	o2g_dist		5630223	0					
ANR	5630288	Identifier	o2g_dist		5630223	0					
ANR	5630289	ArgumentList	self		5630223	1					
ANR	5630290	Argument	self		5630223	0					
ANR	5630291	Identifier	self		5630223	0					
ANR	5630292	Argument	ow1		5630223	1					
ANR	5630293	Identifier	ow1		5630223	0					
ANR	5630294	Argument	self -> heigt_transform_coef_inv		5630223	2					
ANR	5630295	PtrMemberAccess	self -> heigt_transform_coef_inv		5630223	0					
ANR	5630296	Identifier	self		5630223	0					
ANR	5630297	Identifier	heigt_transform_coef_inv		5630223	1					
ANR	5630298	ExpressionStatement	* y = zone -> y + ( zone -> type == topzone ? gw1 : - gw1 )	1970:4:79157:79208	5630223	5	True				
ANR	5630299	AssignmentExpression	* y = zone -> y + ( zone -> type == topzone ? gw1 : - gw1 )		5630223	0		=			
ANR	5630300	UnaryOperationExpression	* y		5630223	0					
ANR	5630301	UnaryOperator	*		5630223	0					
ANR	5630302	Identifier	y		5630223	1					
ANR	5630303	AdditiveExpression	zone -> y + ( zone -> type == topzone ? gw1 : - gw1 )		5630223	1		+			
ANR	5630304	PtrMemberAccess	zone -> y		5630223	0					
ANR	5630305	Identifier	zone		5630223	0					
ANR	5630306	Identifier	y		5630223	1					
ANR	5630307	ConditionalExpression	zone -> type == topzone ? gw1 : - gw1		5630223	1					
ANR	5630308	Condition	zone -> type == topzone		5630223	0					
ANR	5630309	EqualityExpression	zone -> type == topzone		5630223	0		==			
ANR	5630310	PtrMemberAccess	zone -> type		5630223	0					
ANR	5630311	Identifier	zone		5630223	0					
ANR	5630312	Identifier	type		5630223	1					
ANR	5630313	Identifier	topzone		5630223	1					
ANR	5630314	Identifier	gw1		5630223	1					
ANR	5630315	UnaryOperationExpression	- gw1		5630223	2					
ANR	5630316	UnaryOperator	-		5630223	0					
ANR	5630317	Identifier	gw1		5630223	1					
ANR	5630318	ReturnType	static void		5630223	1					
ANR	5630319	Identifier	t1_hinter__add_overshoot		5630223	2					
ANR	5630320	ParameterList	"t1_hinter * self , t1_zone * zone , t1_glyph_space_coord * x , t1_glyph_space_coord * y"		5630223	3					
ANR	5630321	Parameter	t1_hinter * self	1962:37:78687:78702	5630223	0	True				
ANR	5630322	ParameterType	t1_hinter *		5630223	0					
ANR	5630323	Identifier	self		5630223	1					
ANR	5630324	Parameter	t1_zone * zone	1962:55:78705:78718	5630223	1	True				
ANR	5630325	ParameterType	t1_zone *		5630223	0					
ANR	5630326	Identifier	zone		5630223	1					
ANR	5630327	Parameter	t1_glyph_space_coord * x	1962:71:78721:78744	5630223	2	True				
ANR	5630328	ParameterType	t1_glyph_space_coord *		5630223	0					
ANR	5630329	Identifier	x		5630223	1					
ANR	5630330	Parameter	t1_glyph_space_coord * y	1962:97:78747:78770	5630223	3	True				
ANR	5630331	ParameterType	t1_glyph_space_coord *		5630223	0					
ANR	5630332	Identifier	y		5630223	1					
ANR	5630333	CFGEntryNode	ENTRY		5630223		True				
ANR	5630334	CFGExitNode	EXIT		5630223		True				
ANR	5630335	Symbol	zone -> y		5630223						
ANR	5630336	Symbol	gw1		5630223						
ANR	5630337	Symbol	topzone		5630223						
ANR	5630338	Symbol	self -> g2o_fraction		5630223						
ANR	5630339	Symbol	* y		5630223						
ANR	5630340	Symbol	* zone		5630223						
ANR	5630341	Symbol	* self		5630223						
ANR	5630342	Symbol	o2g_dist		5630223						
ANR	5630343	Symbol	ow		5630223						
ANR	5630344	Symbol	ow1		5630223						
ANR	5630345	Symbol	self -> heigt_transform_coef_inv		5630223						
ANR	5630346	Symbol	g2o_dist_blue		5630223						
ANR	5630347	Symbol	gw		5630223						
ANR	5630348	Symbol	zone -> type		5630223						
ANR	5630349	Symbol	gy		5630223						
ANR	5630350	Symbol	zone		5630223						
ANR	5630351	Symbol	x		5630223						
ANR	5630352	Symbol	any_abs		5630223						
ANR	5630353	Symbol	self		5630223						
ANR	5630354	Symbol	y		5630223						
ANR	5630355	Function	t1_hinter__compute_aligned_coord	1974:0:79220:85436							
ANR	5630356	FunctionDef	"t1_hinter__compute_aligned_coord (t1_hinter * self , t1_glyph_space_coord * gc , int segment_index , fixed t , const t1_hint * hint , enum t1_align_type align0)"		5630355	0					
ANR	5630357	CompoundStatement		1977:0:79424:85436	5630355	0					
ANR	5630358	IdentifierDeclStatement	bool horiz = ( hint -> type == hstem ) ;	1979:4:79538:79572	5630355	0	True				
ANR	5630359	IdentifierDecl	horiz = ( hint -> type == hstem )		5630355	0					
ANR	5630360	IdentifierDeclType	bool		5630355	0					
ANR	5630361	Identifier	horiz		5630355	1					
ANR	5630362	AssignmentExpression	horiz = ( hint -> type == hstem )		5630355	2		=			
ANR	5630363	Identifier	horiz		5630355	0					
ANR	5630364	EqualityExpression	hint -> type == hstem		5630355	1		==			
ANR	5630365	PtrMemberAccess	hint -> type		5630355	0					
ANR	5630366	Identifier	hint		5630355	0					
ANR	5630367	Identifier	type		5630355	1					
ANR	5630368	Identifier	hstem		5630355	1					
ANR	5630369	IdentifierDeclStatement	enum t1_align_type align = align0 ;	1980:4:79578:79611	5630355	1	True				
ANR	5630370	IdentifierDecl	align = align0		5630355	0					
ANR	5630371	IdentifierDeclType	enum t1_align_type		5630355	0					
ANR	5630372	Identifier	align		5630355	1					
ANR	5630373	AssignmentExpression	align = align0		5630355	2		=			
ANR	5630374	Identifier	align0		5630355	0					
ANR	5630375	Identifier	align0		5630355	1					
ANR	5630376	IdentifierDeclStatement	"t1_glyph_space_coord gx = self -> pole [ segment_index ] . gx , gx0 ;"	1981:4:79617:79676	5630355	2	True				
ANR	5630377	IdentifierDecl	gx = self -> pole [ segment_index ] . gx		5630355	0					
ANR	5630378	IdentifierDeclType	t1_glyph_space_coord		5630355	0					
ANR	5630379	Identifier	gx		5630355	1					
ANR	5630380	AssignmentExpression	gx = self -> pole [ segment_index ] . gx		5630355	2		=			
ANR	5630381	Identifier	gx		5630355	0					
ANR	5630382	MemberAccess	self -> pole [ segment_index ] . gx		5630355	1					
ANR	5630383	ArrayIndexing	self -> pole [ segment_index ]		5630355	0					
ANR	5630384	PtrMemberAccess	self -> pole		5630355	0					
ANR	5630385	Identifier	self		5630355	0					
ANR	5630386	Identifier	pole		5630355	1					
ANR	5630387	Identifier	segment_index		5630355	1					
ANR	5630388	Identifier	gx		5630355	1					
ANR	5630389	IdentifierDecl	gx0		5630355	1					
ANR	5630390	IdentifierDeclType	t1_glyph_space_coord		5630355	0					
ANR	5630391	Identifier	gx0		5630355	1					
ANR	5630392	IdentifierDeclStatement	"t1_glyph_space_coord gy = self -> pole [ segment_index ] . gy , gy0 ;"	1982:4:79682:79741	5630355	3	True				
ANR	5630393	IdentifierDecl	gy = self -> pole [ segment_index ] . gy		5630355	0					
ANR	5630394	IdentifierDeclType	t1_glyph_space_coord		5630355	0					
ANR	5630395	Identifier	gy		5630355	1					
ANR	5630396	AssignmentExpression	gy = self -> pole [ segment_index ] . gy		5630355	2		=			
ANR	5630397	Identifier	gy		5630355	0					
ANR	5630398	MemberAccess	self -> pole [ segment_index ] . gy		5630355	1					
ANR	5630399	ArrayIndexing	self -> pole [ segment_index ]		5630355	0					
ANR	5630400	PtrMemberAccess	self -> pole		5630355	0					
ANR	5630401	Identifier	self		5630355	0					
ANR	5630402	Identifier	pole		5630355	1					
ANR	5630403	Identifier	segment_index		5630355	1					
ANR	5630404	Identifier	gy		5630355	1					
ANR	5630405	IdentifierDecl	gy0		5630355	1					
ANR	5630406	IdentifierDeclType	t1_glyph_space_coord		5630355	0					
ANR	5630407	Identifier	gy0		5630355	1					
ANR	5630408	IdentifierDeclStatement	t1_glyph_space_coord gc0 = ( horiz ? gy : gx ) ;	1983:4:79747:79791	5630355	4	True				
ANR	5630409	IdentifierDecl	gc0 = ( horiz ? gy : gx )		5630355	0					
ANR	5630410	IdentifierDeclType	t1_glyph_space_coord		5630355	0					
ANR	5630411	Identifier	gc0		5630355	1					
ANR	5630412	AssignmentExpression	gc0 = ( horiz ? gy : gx )		5630355	2		=			
ANR	5630413	Identifier	gc0		5630355	0					
ANR	5630414	ConditionalExpression	horiz ? gy : gx		5630355	1					
ANR	5630415	Condition	horiz		5630355	0					
ANR	5630416	Identifier	horiz		5630355	0					
ANR	5630417	Identifier	gy		5630355	1					
ANR	5630418	Identifier	gx		5630355	2					
ANR	5630419	IdentifierDeclStatement	bool align_by_stem = align0 == unaligned && hint -> b0 && hint -> b1 ;	1984:4:79797:80003	5630355	5	True				
ANR	5630420	IdentifierDecl	align_by_stem = align0 == unaligned && hint -> b0 && hint -> b1		5630355	0					
ANR	5630421	IdentifierDeclType	bool		5630355	0					
ANR	5630422	Identifier	align_by_stem		5630355	1					
ANR	5630423	AssignmentExpression	align_by_stem = align0 == unaligned && hint -> b0 && hint -> b1		5630355	2		=			
ANR	5630424	Identifier	align_by_stem		5630355	0					
ANR	5630425	AndExpression	align0 == unaligned && hint -> b0 && hint -> b1		5630355	1		&&			
ANR	5630426	EqualityExpression	align0 == unaligned		5630355	0		==			
ANR	5630427	Identifier	align0		5630355	0					
ANR	5630428	Identifier	unaligned		5630355	1					
ANR	5630429	AndExpression	hint -> b0 && hint -> b1		5630355	1		&&			
ANR	5630430	PtrMemberAccess	hint -> b0		5630355	0					
ANR	5630431	Identifier	hint		5630355	0					
ANR	5630432	Identifier	b0		5630355	1					
ANR	5630433	PtrMemberAccess	hint -> b1		5630355	1					
ANR	5630434	Identifier	hint		5630355	0					
ANR	5630435	Identifier	b1		5630355	1					
ANR	5630436	IfStatement	if ( t )		5630355	6					
ANR	5630437	Condition	t	1994:8:80453:80453	5630355	0	True				
ANR	5630438	Identifier	t		5630355	0					
ANR	5630439	CompoundStatement		21:8:1161:1207	5630355	1					
ANR	5630440	IdentifierDeclStatement	"int next = t1_hinter__segment_end ( self , segment_index ) ;"	1995:8:80466:80520	5630355	0	True				
ANR	5630441	IdentifierDecl	"next = t1_hinter__segment_end ( self , segment_index )"		5630355	0					
ANR	5630442	IdentifierDeclType	int		5630355	0					
ANR	5630443	Identifier	next		5630355	1					
ANR	5630444	AssignmentExpression	"next = t1_hinter__segment_end ( self , segment_index )"		5630355	2		=			
ANR	5630445	Identifier	next		5630355	0					
ANR	5630446	CallExpression	"t1_hinter__segment_end ( self , segment_index )"		5630355	1					
ANR	5630447	Callee	t1_hinter__segment_end		5630355	0					
ANR	5630448	Identifier	t1_hinter__segment_end		5630355	0					
ANR	5630449	ArgumentList	self		5630355	1					
ANR	5630450	Argument	self		5630355	0					
ANR	5630451	Identifier	self		5630355	0					
ANR	5630452	Argument	segment_index		5630355	1					
ANR	5630453	Identifier	segment_index		5630355	0					
ANR	5630454	IdentifierDeclStatement	t1_glyph_space_coord gx1 = self -> pole [ next ] . gx ;	1996:8:80530:80576	5630355	1	True				
ANR	5630455	IdentifierDecl	gx1 = self -> pole [ next ] . gx		5630355	0					
ANR	5630456	IdentifierDeclType	t1_glyph_space_coord		5630355	0					
ANR	5630457	Identifier	gx1		5630355	1					
ANR	5630458	AssignmentExpression	gx1 = self -> pole [ next ] . gx		5630355	2		=			
ANR	5630459	Identifier	gx1		5630355	0					
ANR	5630460	MemberAccess	self -> pole [ next ] . gx		5630355	1					
ANR	5630461	ArrayIndexing	self -> pole [ next ]		5630355	0					
ANR	5630462	PtrMemberAccess	self -> pole		5630355	0					
ANR	5630463	Identifier	self		5630355	0					
ANR	5630464	Identifier	pole		5630355	1					
ANR	5630465	Identifier	next		5630355	1					
ANR	5630466	Identifier	gx		5630355	1					
ANR	5630467	IdentifierDeclStatement	t1_glyph_space_coord gy1 = self -> pole [ next ] . gy ;	1997:8:80586:80632	5630355	2	True				
ANR	5630468	IdentifierDecl	gy1 = self -> pole [ next ] . gy		5630355	0					
ANR	5630469	IdentifierDeclType	t1_glyph_space_coord		5630355	0					
ANR	5630470	Identifier	gy1		5630355	1					
ANR	5630471	AssignmentExpression	gy1 = self -> pole [ next ] . gy		5630355	2		=			
ANR	5630472	Identifier	gy1		5630355	0					
ANR	5630473	MemberAccess	self -> pole [ next ] . gy		5630355	1					
ANR	5630474	ArrayIndexing	self -> pole [ next ]		5630355	0					
ANR	5630475	PtrMemberAccess	self -> pole		5630355	0					
ANR	5630476	Identifier	self		5630355	0					
ANR	5630477	Identifier	pole		5630355	1					
ANR	5630478	Identifier	next		5630355	1					
ANR	5630479	Identifier	gy		5630355	1					
ANR	5630480	ExpressionStatement	gx = ( gx + gx1 ) / 2	1999:8:80643:80662	5630355	3	True				
ANR	5630481	AssignmentExpression	gx = ( gx + gx1 ) / 2		5630355	0		=			
ANR	5630482	Identifier	gx		5630355	0					
ANR	5630483	MultiplicativeExpression	( gx + gx1 ) / 2		5630355	1		/			
ANR	5630484	AdditiveExpression	gx + gx1		5630355	0		+			
ANR	5630485	Identifier	gx		5630355	0					
ANR	5630486	Identifier	gx1		5630355	1					
ANR	5630487	PrimaryExpression	2		5630355	1					
ANR	5630488	ExpressionStatement	gy = ( gy + gy1 ) / 2	2000:8:80672:80691	5630355	4	True				
ANR	5630489	AssignmentExpression	gy = ( gy + gy1 ) / 2		5630355	0		=			
ANR	5630490	Identifier	gy		5630355	0					
ANR	5630491	MultiplicativeExpression	( gy + gy1 ) / 2		5630355	1		/			
ANR	5630492	AdditiveExpression	gy + gy1		5630355	0		+			
ANR	5630493	Identifier	gy		5630355	0					
ANR	5630494	Identifier	gy1		5630355	1					
ANR	5630495	PrimaryExpression	2		5630355	1					
ANR	5630496	ExpressionStatement	gx0 = gx	2002:4:80703:80711	5630355	7	True				
ANR	5630497	AssignmentExpression	gx0 = gx		5630355	0		=			
ANR	5630498	Identifier	gx0		5630355	0					
ANR	5630499	Identifier	gx		5630355	1					
ANR	5630500	ExpressionStatement	gy0 = gy	2003:4:80717:80725	5630355	8	True				
ANR	5630501	AssignmentExpression	gy0 = gy		5630355	0		=			
ANR	5630502	Identifier	gy0		5630355	0					
ANR	5630503	Identifier	gy		5630355	1					
ANR	5630504	IfStatement	if ( horiz )		5630355	9					
ANR	5630505	Condition	horiz	2004:8:80735:80739	5630355	0	True				
ANR	5630506	Identifier	horiz		5630355	0					
ANR	5630507	CompoundStatement		43:8:2344:2459	5630355	1					
ANR	5630508	IdentifierDeclStatement	t1_pole * pole = & self -> pole [ segment_index ] ;	2005:8:80752:80795	5630355	0	True				
ANR	5630509	IdentifierDecl	* pole = & self -> pole [ segment_index ]		5630355	0					
ANR	5630510	IdentifierDeclType	t1_pole *		5630355	0					
ANR	5630511	Identifier	pole		5630355	1					
ANR	5630512	AssignmentExpression	* pole = & self -> pole [ segment_index ]		5630355	2		=			
ANR	5630513	Identifier	pole		5630355	0					
ANR	5630514	UnaryOperationExpression	& self -> pole [ segment_index ]		5630355	1					
ANR	5630515	UnaryOperator	&		5630355	0					
ANR	5630516	ArrayIndexing	self -> pole [ segment_index ]		5630355	1					
ANR	5630517	PtrMemberAccess	self -> pole		5630355	0					
ANR	5630518	Identifier	self		5630355	0					
ANR	5630519	Identifier	pole		5630355	1					
ANR	5630520	Identifier	segment_index		5630355	1					
ANR	5630521	IdentifierDeclStatement	int contour_index = pole -> contour_index ;	2006:8:80805:80844	5630355	1	True				
ANR	5630522	IdentifierDecl	contour_index = pole -> contour_index		5630355	0					
ANR	5630523	IdentifierDeclType	int		5630355	0					
ANR	5630524	Identifier	contour_index		5630355	1					
ANR	5630525	AssignmentExpression	contour_index = pole -> contour_index		5630355	2		=			
ANR	5630526	Identifier	contour_index		5630355	0					
ANR	5630527	PtrMemberAccess	pole -> contour_index		5630355	1					
ANR	5630528	Identifier	pole		5630355	0					
ANR	5630529	Identifier	contour_index		5630355	1					
ANR	5630530	IdentifierDeclStatement	int beg_contour_pole = self -> contour [ contour_index ] ;	2007:8:80854:80905	5630355	2	True				
ANR	5630531	IdentifierDecl	beg_contour_pole = self -> contour [ contour_index ]		5630355	0					
ANR	5630532	IdentifierDeclType	int		5630355	0					
ANR	5630533	Identifier	beg_contour_pole		5630355	1					
ANR	5630534	AssignmentExpression	beg_contour_pole = self -> contour [ contour_index ]		5630355	2		=			
ANR	5630535	Identifier	beg_contour_pole		5630355	0					
ANR	5630536	ArrayIndexing	self -> contour [ contour_index ]		5630355	1					
ANR	5630537	PtrMemberAccess	self -> contour		5630355	0					
ANR	5630538	Identifier	self		5630355	0					
ANR	5630539	Identifier	contour		5630355	1					
ANR	5630540	Identifier	contour_index		5630355	1					
ANR	5630541	IdentifierDeclStatement	int end_contour_pole = self -> contour [ contour_index + 1 ] - 2 ;	2008:8:80915:80974	5630355	3	True				
ANR	5630542	IdentifierDecl	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		5630355	0					
ANR	5630543	IdentifierDeclType	int		5630355	0					
ANR	5630544	Identifier	end_contour_pole		5630355	1					
ANR	5630545	AssignmentExpression	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		5630355	2		=			
ANR	5630546	Identifier	end_contour_pole		5630355	0					
ANR	5630547	AdditiveExpression	self -> contour [ contour_index + 1 ] - 2		5630355	1		-			
ANR	5630548	ArrayIndexing	self -> contour [ contour_index + 1 ]		5630355	0					
ANR	5630549	PtrMemberAccess	self -> contour		5630355	0					
ANR	5630550	Identifier	self		5630355	0					
ANR	5630551	Identifier	contour		5630355	1					
ANR	5630552	AdditiveExpression	contour_index + 1		5630355	1		+			
ANR	5630553	Identifier	contour_index		5630355	0					
ANR	5630554	PrimaryExpression	1		5630355	1					
ANR	5630555	PrimaryExpression	2		5630355	1					
ANR	5630556	IdentifierDeclStatement	"int prev1 = ranger_step_b ( segment_index , beg_contour_pole , end_contour_pole ) ;"	2009:8:80984:81060	5630355	4	True				
ANR	5630557	IdentifierDecl	"prev1 = ranger_step_b ( segment_index , beg_contour_pole , end_contour_pole )"		5630355	0					
ANR	5630558	IdentifierDeclType	int		5630355	0					
ANR	5630559	Identifier	prev1		5630355	1					
ANR	5630560	AssignmentExpression	"prev1 = ranger_step_b ( segment_index , beg_contour_pole , end_contour_pole )"		5630355	2		=			
ANR	5630561	Identifier	prev1		5630355	0					
ANR	5630562	CallExpression	"ranger_step_b ( segment_index , beg_contour_pole , end_contour_pole )"		5630355	1					
ANR	5630563	Callee	ranger_step_b		5630355	0					
ANR	5630564	Identifier	ranger_step_b		5630355	0					
ANR	5630565	ArgumentList	segment_index		5630355	1					
ANR	5630566	Argument	segment_index		5630355	0					
ANR	5630567	Identifier	segment_index		5630355	0					
ANR	5630568	Argument	beg_contour_pole		5630355	1					
ANR	5630569	Identifier	beg_contour_pole		5630355	0					
ANR	5630570	Argument	end_contour_pole		5630355	2					
ANR	5630571	Identifier	end_contour_pole		5630355	0					
ANR	5630572	IdentifierDeclStatement	"int prev2 = ranger_step_b ( prev1 , beg_contour_pole , end_contour_pole ) ;"	2010:8:81070:81146	5630355	5	True				
ANR	5630573	IdentifierDecl	"prev2 = ranger_step_b ( prev1 , beg_contour_pole , end_contour_pole )"		5630355	0					
ANR	5630574	IdentifierDeclType	int		5630355	0					
ANR	5630575	Identifier	prev2		5630355	1					
ANR	5630576	AssignmentExpression	"prev2 = ranger_step_b ( prev1 , beg_contour_pole , end_contour_pole )"		5630355	2		=			
ANR	5630577	Identifier	prev2		5630355	0					
ANR	5630578	CallExpression	"ranger_step_b ( prev1 , beg_contour_pole , end_contour_pole )"		5630355	1					
ANR	5630579	Callee	ranger_step_b		5630355	0					
ANR	5630580	Identifier	ranger_step_b		5630355	0					
ANR	5630581	ArgumentList	prev1		5630355	1					
ANR	5630582	Argument	prev1		5630355	0					
ANR	5630583	Identifier	prev1		5630355	0					
ANR	5630584	Argument	beg_contour_pole		5630355	1					
ANR	5630585	Identifier	beg_contour_pole		5630355	0					
ANR	5630586	Argument	end_contour_pole		5630355	2					
ANR	5630587	Identifier	end_contour_pole		5630355	0					
ANR	5630588	IdentifierDeclStatement	"int next1 = ranger_step_f ( segment_index , beg_contour_pole , end_contour_pole ) ;"	2011:8:81156:81232	5630355	6	True				
ANR	5630589	IdentifierDecl	"next1 = ranger_step_f ( segment_index , beg_contour_pole , end_contour_pole )"		5630355	0					
ANR	5630590	IdentifierDeclType	int		5630355	0					
ANR	5630591	Identifier	next1		5630355	1					
ANR	5630592	AssignmentExpression	"next1 = ranger_step_f ( segment_index , beg_contour_pole , end_contour_pole )"		5630355	2		=			
ANR	5630593	Identifier	next1		5630355	0					
ANR	5630594	CallExpression	"ranger_step_f ( segment_index , beg_contour_pole , end_contour_pole )"		5630355	1					
ANR	5630595	Callee	ranger_step_f		5630355	0					
ANR	5630596	Identifier	ranger_step_f		5630355	0					
ANR	5630597	ArgumentList	segment_index		5630355	1					
ANR	5630598	Argument	segment_index		5630355	0					
ANR	5630599	Identifier	segment_index		5630355	0					
ANR	5630600	Argument	beg_contour_pole		5630355	1					
ANR	5630601	Identifier	beg_contour_pole		5630355	0					
ANR	5630602	Argument	end_contour_pole		5630355	2					
ANR	5630603	Identifier	end_contour_pole		5630355	0					
ANR	5630604	IdentifierDeclStatement	"int next2 = ranger_step_f ( next1 , beg_contour_pole , end_contour_pole ) ;"	2012:8:81242:81318	5630355	7	True				
ANR	5630605	IdentifierDecl	"next2 = ranger_step_f ( next1 , beg_contour_pole , end_contour_pole )"		5630355	0					
ANR	5630606	IdentifierDeclType	int		5630355	0					
ANR	5630607	Identifier	next2		5630355	1					
ANR	5630608	AssignmentExpression	"next2 = ranger_step_f ( next1 , beg_contour_pole , end_contour_pole )"		5630355	2		=			
ANR	5630609	Identifier	next2		5630355	0					
ANR	5630610	CallExpression	"ranger_step_f ( next1 , beg_contour_pole , end_contour_pole )"		5630355	1					
ANR	5630611	Callee	ranger_step_f		5630355	0					
ANR	5630612	Identifier	ranger_step_f		5630355	0					
ANR	5630613	ArgumentList	next1		5630355	1					
ANR	5630614	Argument	next1		5630355	0					
ANR	5630615	Identifier	next1		5630355	0					
ANR	5630616	Argument	beg_contour_pole		5630355	1					
ANR	5630617	Identifier	beg_contour_pole		5630355	0					
ANR	5630618	Argument	end_contour_pole		5630355	2					
ANR	5630619	Identifier	end_contour_pole		5630355	0					
ANR	5630620	IdentifierDeclStatement	"bool forwd_horiz = ( any_abs ( self -> pole [ next1 ] . gy - pole -> gy ) <= max ( self -> blue_fuzz , any_abs ( self -> pole [ next1 ] . gx - pole -> gx ) / 10 ) ) ;"	2013:8:81328:81476	5630355	8	True				
ANR	5630621	IdentifierDecl	"forwd_horiz = ( any_abs ( self -> pole [ next1 ] . gy - pole -> gy ) <= max ( self -> blue_fuzz , any_abs ( self -> pole [ next1 ] . gx - pole -> gx ) / 10 ) )"		5630355	0					
ANR	5630622	IdentifierDeclType	bool		5630355	0					
ANR	5630623	Identifier	forwd_horiz		5630355	1					
ANR	5630624	AssignmentExpression	"forwd_horiz = ( any_abs ( self -> pole [ next1 ] . gy - pole -> gy ) <= max ( self -> blue_fuzz , any_abs ( self -> pole [ next1 ] . gx - pole -> gx ) / 10 ) )"		5630355	2		=			
ANR	5630625	Identifier	forwd_horiz		5630355	0					
ANR	5630626	RelationalExpression	"any_abs ( self -> pole [ next1 ] . gy - pole -> gy ) <= max ( self -> blue_fuzz , any_abs ( self -> pole [ next1 ] . gx - pole -> gx ) / 10 )"		5630355	1		<=			
ANR	5630627	CallExpression	any_abs ( self -> pole [ next1 ] . gy - pole -> gy )		5630355	0					
ANR	5630628	Callee	any_abs		5630355	0					
ANR	5630629	Identifier	any_abs		5630355	0					
ANR	5630630	ArgumentList	self -> pole [ next1 ] . gy - pole -> gy		5630355	1					
ANR	5630631	Argument	self -> pole [ next1 ] . gy - pole -> gy		5630355	0					
ANR	5630632	AdditiveExpression	self -> pole [ next1 ] . gy - pole -> gy		5630355	0		-			
ANR	5630633	MemberAccess	self -> pole [ next1 ] . gy		5630355	0					
ANR	5630634	ArrayIndexing	self -> pole [ next1 ]		5630355	0					
ANR	5630635	PtrMemberAccess	self -> pole		5630355	0					
ANR	5630636	Identifier	self		5630355	0					
ANR	5630637	Identifier	pole		5630355	1					
ANR	5630638	Identifier	next1		5630355	1					
ANR	5630639	Identifier	gy		5630355	1					
ANR	5630640	PtrMemberAccess	pole -> gy		5630355	1					
ANR	5630641	Identifier	pole		5630355	0					
ANR	5630642	Identifier	gy		5630355	1					
ANR	5630643	CallExpression	"max ( self -> blue_fuzz , any_abs ( self -> pole [ next1 ] . gx - pole -> gx ) / 10 )"		5630355	1					
ANR	5630644	Callee	max		5630355	0					
ANR	5630645	Identifier	max		5630355	0					
ANR	5630646	ArgumentList	self -> blue_fuzz		5630355	1					
ANR	5630647	Argument	self -> blue_fuzz		5630355	0					
ANR	5630648	PtrMemberAccess	self -> blue_fuzz		5630355	0					
ANR	5630649	Identifier	self		5630355	0					
ANR	5630650	Identifier	blue_fuzz		5630355	1					
ANR	5630651	Argument	any_abs ( self -> pole [ next1 ] . gx - pole -> gx ) / 10		5630355	1					
ANR	5630652	MultiplicativeExpression	any_abs ( self -> pole [ next1 ] . gx - pole -> gx ) / 10		5630355	0		/			
ANR	5630653	CallExpression	any_abs ( self -> pole [ next1 ] . gx - pole -> gx )		5630355	0					
ANR	5630654	Callee	any_abs		5630355	0					
ANR	5630655	Identifier	any_abs		5630355	0					
ANR	5630656	ArgumentList	self -> pole [ next1 ] . gx - pole -> gx		5630355	1					
ANR	5630657	Argument	self -> pole [ next1 ] . gx - pole -> gx		5630355	0					
ANR	5630658	AdditiveExpression	self -> pole [ next1 ] . gx - pole -> gx		5630355	0		-			
ANR	5630659	MemberAccess	self -> pole [ next1 ] . gx		5630355	0					
ANR	5630660	ArrayIndexing	self -> pole [ next1 ]		5630355	0					
ANR	5630661	PtrMemberAccess	self -> pole		5630355	0					
ANR	5630662	Identifier	self		5630355	0					
ANR	5630663	Identifier	pole		5630355	1					
ANR	5630664	Identifier	next1		5630355	1					
ANR	5630665	Identifier	gx		5630355	1					
ANR	5630666	PtrMemberAccess	pole -> gx		5630355	1					
ANR	5630667	Identifier	pole		5630355	0					
ANR	5630668	Identifier	gx		5630355	1					
ANR	5630669	PrimaryExpression	10		5630355	1					
ANR	5630670	IdentifierDeclStatement	"bool bckwd_horiz = ( any_abs ( self -> pole [ prev1 ] . gy - pole -> gy ) <= max ( self -> blue_fuzz , any_abs ( self -> pole [ prev1 ] . gx - pole -> gx ) / 10 ) ) ;"	2015:8:81486:81634	5630355	9	True				
ANR	5630671	IdentifierDecl	"bckwd_horiz = ( any_abs ( self -> pole [ prev1 ] . gy - pole -> gy ) <= max ( self -> blue_fuzz , any_abs ( self -> pole [ prev1 ] . gx - pole -> gx ) / 10 ) )"		5630355	0					
ANR	5630672	IdentifierDeclType	bool		5630355	0					
ANR	5630673	Identifier	bckwd_horiz		5630355	1					
ANR	5630674	AssignmentExpression	"bckwd_horiz = ( any_abs ( self -> pole [ prev1 ] . gy - pole -> gy ) <= max ( self -> blue_fuzz , any_abs ( self -> pole [ prev1 ] . gx - pole -> gx ) / 10 ) )"		5630355	2		=			
ANR	5630675	Identifier	bckwd_horiz		5630355	0					
ANR	5630676	RelationalExpression	"any_abs ( self -> pole [ prev1 ] . gy - pole -> gy ) <= max ( self -> blue_fuzz , any_abs ( self -> pole [ prev1 ] . gx - pole -> gx ) / 10 )"		5630355	1		<=			
ANR	5630677	CallExpression	any_abs ( self -> pole [ prev1 ] . gy - pole -> gy )		5630355	0					
ANR	5630678	Callee	any_abs		5630355	0					
ANR	5630679	Identifier	any_abs		5630355	0					
ANR	5630680	ArgumentList	self -> pole [ prev1 ] . gy - pole -> gy		5630355	1					
ANR	5630681	Argument	self -> pole [ prev1 ] . gy - pole -> gy		5630355	0					
ANR	5630682	AdditiveExpression	self -> pole [ prev1 ] . gy - pole -> gy		5630355	0		-			
ANR	5630683	MemberAccess	self -> pole [ prev1 ] . gy		5630355	0					
ANR	5630684	ArrayIndexing	self -> pole [ prev1 ]		5630355	0					
ANR	5630685	PtrMemberAccess	self -> pole		5630355	0					
ANR	5630686	Identifier	self		5630355	0					
ANR	5630687	Identifier	pole		5630355	1					
ANR	5630688	Identifier	prev1		5630355	1					
ANR	5630689	Identifier	gy		5630355	1					
ANR	5630690	PtrMemberAccess	pole -> gy		5630355	1					
ANR	5630691	Identifier	pole		5630355	0					
ANR	5630692	Identifier	gy		5630355	1					
ANR	5630693	CallExpression	"max ( self -> blue_fuzz , any_abs ( self -> pole [ prev1 ] . gx - pole -> gx ) / 10 )"		5630355	1					
ANR	5630694	Callee	max		5630355	0					
ANR	5630695	Identifier	max		5630355	0					
ANR	5630696	ArgumentList	self -> blue_fuzz		5630355	1					
ANR	5630697	Argument	self -> blue_fuzz		5630355	0					
ANR	5630698	PtrMemberAccess	self -> blue_fuzz		5630355	0					
ANR	5630699	Identifier	self		5630355	0					
ANR	5630700	Identifier	blue_fuzz		5630355	1					
ANR	5630701	Argument	any_abs ( self -> pole [ prev1 ] . gx - pole -> gx ) / 10		5630355	1					
ANR	5630702	MultiplicativeExpression	any_abs ( self -> pole [ prev1 ] . gx - pole -> gx ) / 10		5630355	0		/			
ANR	5630703	CallExpression	any_abs ( self -> pole [ prev1 ] . gx - pole -> gx )		5630355	0					
ANR	5630704	Callee	any_abs		5630355	0					
ANR	5630705	Identifier	any_abs		5630355	0					
ANR	5630706	ArgumentList	self -> pole [ prev1 ] . gx - pole -> gx		5630355	1					
ANR	5630707	Argument	self -> pole [ prev1 ] . gx - pole -> gx		5630355	0					
ANR	5630708	AdditiveExpression	self -> pole [ prev1 ] . gx - pole -> gx		5630355	0		-			
ANR	5630709	MemberAccess	self -> pole [ prev1 ] . gx		5630355	0					
ANR	5630710	ArrayIndexing	self -> pole [ prev1 ]		5630355	0					
ANR	5630711	PtrMemberAccess	self -> pole		5630355	0					
ANR	5630712	Identifier	self		5630355	0					
ANR	5630713	Identifier	pole		5630355	1					
ANR	5630714	Identifier	prev1		5630355	1					
ANR	5630715	Identifier	gx		5630355	1					
ANR	5630716	PtrMemberAccess	pole -> gx		5630355	1					
ANR	5630717	Identifier	pole		5630355	0					
ANR	5630718	Identifier	gx		5630355	1					
ANR	5630719	PrimaryExpression	10		5630355	1					
ANR	5630720	IdentifierDeclStatement	bool maximum = ( self -> pole [ next1 ] . gy - pole -> gy < 0 && self -> pole [ prev1 ] . gy - pole -> gy < 0 ) ;	2017:8:81644:81759	5630355	10	True				
ANR	5630721	IdentifierDecl	maximum = ( self -> pole [ next1 ] . gy - pole -> gy < 0 && self -> pole [ prev1 ] . gy - pole -> gy < 0 )		5630355	0					
ANR	5630722	IdentifierDeclType	bool		5630355	0					
ANR	5630723	Identifier	maximum		5630355	1					
ANR	5630724	AssignmentExpression	maximum = ( self -> pole [ next1 ] . gy - pole -> gy < 0 && self -> pole [ prev1 ] . gy - pole -> gy < 0 )		5630355	2		=			
ANR	5630725	Identifier	maximum		5630355	0					
ANR	5630726	AndExpression	self -> pole [ next1 ] . gy - pole -> gy < 0 && self -> pole [ prev1 ] . gy - pole -> gy < 0		5630355	1		&&			
ANR	5630727	RelationalExpression	self -> pole [ next1 ] . gy - pole -> gy < 0		5630355	0		<			
ANR	5630728	AdditiveExpression	self -> pole [ next1 ] . gy - pole -> gy		5630355	0		-			
ANR	5630729	MemberAccess	self -> pole [ next1 ] . gy		5630355	0					
ANR	5630730	ArrayIndexing	self -> pole [ next1 ]		5630355	0					
ANR	5630731	PtrMemberAccess	self -> pole		5630355	0					
ANR	5630732	Identifier	self		5630355	0					
ANR	5630733	Identifier	pole		5630355	1					
ANR	5630734	Identifier	next1		5630355	1					
ANR	5630735	Identifier	gy		5630355	1					
ANR	5630736	PtrMemberAccess	pole -> gy		5630355	1					
ANR	5630737	Identifier	pole		5630355	0					
ANR	5630738	Identifier	gy		5630355	1					
ANR	5630739	PrimaryExpression	0		5630355	1					
ANR	5630740	RelationalExpression	self -> pole [ prev1 ] . gy - pole -> gy < 0		5630355	1		<			
ANR	5630741	AdditiveExpression	self -> pole [ prev1 ] . gy - pole -> gy		5630355	0		-			
ANR	5630742	MemberAccess	self -> pole [ prev1 ] . gy		5630355	0					
ANR	5630743	ArrayIndexing	self -> pole [ prev1 ]		5630355	0					
ANR	5630744	PtrMemberAccess	self -> pole		5630355	0					
ANR	5630745	Identifier	self		5630355	0					
ANR	5630746	Identifier	pole		5630355	1					
ANR	5630747	Identifier	prev1		5630355	1					
ANR	5630748	Identifier	gy		5630355	1					
ANR	5630749	PtrMemberAccess	pole -> gy		5630355	1					
ANR	5630750	Identifier	pole		5630355	0					
ANR	5630751	Identifier	gy		5630355	1					
ANR	5630752	PrimaryExpression	0		5630355	1					
ANR	5630753	IdentifierDeclStatement	bool minimum = ( self -> pole [ next1 ] . gy - pole -> gy > 0 && self -> pole [ prev1 ] . gy - pole -> gy > 0 ) ;	2019:8:81769:81884	5630355	11	True				
ANR	5630754	IdentifierDecl	minimum = ( self -> pole [ next1 ] . gy - pole -> gy > 0 && self -> pole [ prev1 ] . gy - pole -> gy > 0 )		5630355	0					
ANR	5630755	IdentifierDeclType	bool		5630355	0					
ANR	5630756	Identifier	minimum		5630355	1					
ANR	5630757	AssignmentExpression	minimum = ( self -> pole [ next1 ] . gy - pole -> gy > 0 && self -> pole [ prev1 ] . gy - pole -> gy > 0 )		5630355	2		=			
ANR	5630758	Identifier	minimum		5630355	0					
ANR	5630759	AndExpression	self -> pole [ next1 ] . gy - pole -> gy > 0 && self -> pole [ prev1 ] . gy - pole -> gy > 0		5630355	1		&&			
ANR	5630760	RelationalExpression	self -> pole [ next1 ] . gy - pole -> gy > 0		5630355	0		>			
ANR	5630761	AdditiveExpression	self -> pole [ next1 ] . gy - pole -> gy		5630355	0		-			
ANR	5630762	MemberAccess	self -> pole [ next1 ] . gy		5630355	0					
ANR	5630763	ArrayIndexing	self -> pole [ next1 ]		5630355	0					
ANR	5630764	PtrMemberAccess	self -> pole		5630355	0					
ANR	5630765	Identifier	self		5630355	0					
ANR	5630766	Identifier	pole		5630355	1					
ANR	5630767	Identifier	next1		5630355	1					
ANR	5630768	Identifier	gy		5630355	1					
ANR	5630769	PtrMemberAccess	pole -> gy		5630355	1					
ANR	5630770	Identifier	pole		5630355	0					
ANR	5630771	Identifier	gy		5630355	1					
ANR	5630772	PrimaryExpression	0		5630355	1					
ANR	5630773	RelationalExpression	self -> pole [ prev1 ] . gy - pole -> gy > 0		5630355	1		>			
ANR	5630774	AdditiveExpression	self -> pole [ prev1 ] . gy - pole -> gy		5630355	0		-			
ANR	5630775	MemberAccess	self -> pole [ prev1 ] . gy		5630355	0					
ANR	5630776	ArrayIndexing	self -> pole [ prev1 ]		5630355	0					
ANR	5630777	PtrMemberAccess	self -> pole		5630355	0					
ANR	5630778	Identifier	self		5630355	0					
ANR	5630779	Identifier	pole		5630355	1					
ANR	5630780	Identifier	prev1		5630355	1					
ANR	5630781	Identifier	gy		5630355	1					
ANR	5630782	PtrMemberAccess	pole -> gy		5630355	1					
ANR	5630783	Identifier	pole		5630355	0					
ANR	5630784	Identifier	gy		5630355	1					
ANR	5630785	PrimaryExpression	0		5630355	1					
ANR	5630786	IfStatement	if ( forwd_horiz || bckwd_horiz || maximum || minimum )		5630355	12					
ANR	5630787	Condition	forwd_horiz || bckwd_horiz || maximum || minimum	2022:12:81899:81946	5630355	0	True				
ANR	5630788	OrExpression	forwd_horiz || bckwd_horiz || maximum || minimum		5630355	0		||			
ANR	5630789	Identifier	forwd_horiz		5630355	0					
ANR	5630790	OrExpression	bckwd_horiz || maximum || minimum		5630355	1		||			
ANR	5630791	Identifier	bckwd_horiz		5630355	0					
ANR	5630792	OrExpression	maximum || minimum		5630355	1		||			
ANR	5630793	Identifier	maximum		5630355	0					
ANR	5630794	Identifier	minimum		5630355	1					
ANR	5630795	CompoundStatement		54:12:3021:3189	5630355	1					
ANR	5630796	IdentifierDeclStatement	bool forwd_curve = ( self -> pole [ next1 ] . type == offcurve ) ;	2023:12:81963:82018	5630355	0	True				
ANR	5630797	IdentifierDecl	forwd_curve = ( self -> pole [ next1 ] . type == offcurve )		5630355	0					
ANR	5630798	IdentifierDeclType	bool		5630355	0					
ANR	5630799	Identifier	forwd_curve		5630355	1					
ANR	5630800	AssignmentExpression	forwd_curve = ( self -> pole [ next1 ] . type == offcurve )		5630355	2		=			
ANR	5630801	Identifier	forwd_curve		5630355	0					
ANR	5630802	EqualityExpression	self -> pole [ next1 ] . type == offcurve		5630355	1		==			
ANR	5630803	MemberAccess	self -> pole [ next1 ] . type		5630355	0					
ANR	5630804	ArrayIndexing	self -> pole [ next1 ]		5630355	0					
ANR	5630805	PtrMemberAccess	self -> pole		5630355	0					
ANR	5630806	Identifier	self		5630355	0					
ANR	5630807	Identifier	pole		5630355	1					
ANR	5630808	Identifier	next1		5630355	1					
ANR	5630809	Identifier	type		5630355	1					
ANR	5630810	Identifier	offcurve		5630355	1					
ANR	5630811	IdentifierDeclStatement	bool bckwd_curve = ( self -> pole [ prev1 ] . type == offcurve ) ;	2024:12:82032:82087	5630355	1	True				
ANR	5630812	IdentifierDecl	bckwd_curve = ( self -> pole [ prev1 ] . type == offcurve )		5630355	0					
ANR	5630813	IdentifierDeclType	bool		5630355	0					
ANR	5630814	Identifier	bckwd_curve		5630355	1					
ANR	5630815	AssignmentExpression	bckwd_curve = ( self -> pole [ prev1 ] . type == offcurve )		5630355	2		=			
ANR	5630816	Identifier	bckwd_curve		5630355	0					
ANR	5630817	EqualityExpression	self -> pole [ prev1 ] . type == offcurve		5630355	1		==			
ANR	5630818	MemberAccess	self -> pole [ prev1 ] . type		5630355	0					
ANR	5630819	ArrayIndexing	self -> pole [ prev1 ]		5630355	0					
ANR	5630820	PtrMemberAccess	self -> pole		5630355	0					
ANR	5630821	Identifier	self		5630355	0					
ANR	5630822	Identifier	pole		5630355	1					
ANR	5630823	Identifier	prev1		5630355	1					
ANR	5630824	Identifier	type		5630355	1					
ANR	5630825	Identifier	offcurve		5630355	1					
ANR	5630826	IdentifierDeclStatement	bool curve = ( bckwd_curve && forwd_curve ) ;	2025:12:82101:82142	5630355	2	True				
ANR	5630827	IdentifierDecl	curve = ( bckwd_curve && forwd_curve )		5630355	0					
ANR	5630828	IdentifierDeclType	bool		5630355	0					
ANR	5630829	Identifier	curve		5630355	1					
ANR	5630830	AssignmentExpression	curve = ( bckwd_curve && forwd_curve )		5630355	2		=			
ANR	5630831	Identifier	curve		5630355	0					
ANR	5630832	AndExpression	bckwd_curve && forwd_curve		5630355	1		&&			
ANR	5630833	Identifier	bckwd_curve		5630355	0					
ANR	5630834	Identifier	forwd_curve		5630355	1					
ANR	5630835	IdentifierDeclStatement	bool convex = ( curve && self -> pole [ prev2 ] . gy <= pole -> gy && self -> pole [ next2 ] . gy <= pole -> gy ) ;	2026:12:82156:82287	5630355	3	True				
ANR	5630836	IdentifierDecl	convex = ( curve && self -> pole [ prev2 ] . gy <= pole -> gy && self -> pole [ next2 ] . gy <= pole -> gy )		5630355	0					
ANR	5630837	IdentifierDeclType	bool		5630355	0					
ANR	5630838	Identifier	convex		5630355	1					
ANR	5630839	AssignmentExpression	convex = ( curve && self -> pole [ prev2 ] . gy <= pole -> gy && self -> pole [ next2 ] . gy <= pole -> gy )		5630355	2		=			
ANR	5630840	Identifier	convex		5630355	0					
ANR	5630841	AndExpression	curve && self -> pole [ prev2 ] . gy <= pole -> gy && self -> pole [ next2 ] . gy <= pole -> gy		5630355	1		&&			
ANR	5630842	Identifier	curve		5630355	0					
ANR	5630843	AndExpression	self -> pole [ prev2 ] . gy <= pole -> gy && self -> pole [ next2 ] . gy <= pole -> gy		5630355	1		&&			
ANR	5630844	RelationalExpression	self -> pole [ prev2 ] . gy <= pole -> gy		5630355	0		<=			
ANR	5630845	MemberAccess	self -> pole [ prev2 ] . gy		5630355	0					
ANR	5630846	ArrayIndexing	self -> pole [ prev2 ]		5630355	0					
ANR	5630847	PtrMemberAccess	self -> pole		5630355	0					
ANR	5630848	Identifier	self		5630355	0					
ANR	5630849	Identifier	pole		5630355	1					
ANR	5630850	Identifier	prev2		5630355	1					
ANR	5630851	Identifier	gy		5630355	1					
ANR	5630852	PtrMemberAccess	pole -> gy		5630355	1					
ANR	5630853	Identifier	pole		5630355	0					
ANR	5630854	Identifier	gy		5630355	1					
ANR	5630855	RelationalExpression	self -> pole [ next2 ] . gy <= pole -> gy		5630355	1		<=			
ANR	5630856	MemberAccess	self -> pole [ next2 ] . gy		5630355	0					
ANR	5630857	ArrayIndexing	self -> pole [ next2 ]		5630355	0					
ANR	5630858	PtrMemberAccess	self -> pole		5630355	0					
ANR	5630859	Identifier	self		5630355	0					
ANR	5630860	Identifier	pole		5630355	1					
ANR	5630861	Identifier	next2		5630355	1					
ANR	5630862	Identifier	gy		5630355	1					
ANR	5630863	PtrMemberAccess	pole -> gy		5630355	1					
ANR	5630864	Identifier	pole		5630355	0					
ANR	5630865	Identifier	gy		5630355	1					
ANR	5630866	IdentifierDeclStatement	bool concave = ( curve && self -> pole [ prev2 ] . gy >= pole -> gy && self -> pole [ next2 ] . gy >= pole -> gy ) ;	2028:12:82301:82432	5630355	4	True				
ANR	5630867	IdentifierDecl	concave = ( curve && self -> pole [ prev2 ] . gy >= pole -> gy && self -> pole [ next2 ] . gy >= pole -> gy )		5630355	0					
ANR	5630868	IdentifierDeclType	bool		5630355	0					
ANR	5630869	Identifier	concave		5630355	1					
ANR	5630870	AssignmentExpression	concave = ( curve && self -> pole [ prev2 ] . gy >= pole -> gy && self -> pole [ next2 ] . gy >= pole -> gy )		5630355	2		=			
ANR	5630871	Identifier	concave		5630355	0					
ANR	5630872	AndExpression	curve && self -> pole [ prev2 ] . gy >= pole -> gy && self -> pole [ next2 ] . gy >= pole -> gy		5630355	1		&&			
ANR	5630873	Identifier	curve		5630355	0					
ANR	5630874	AndExpression	self -> pole [ prev2 ] . gy >= pole -> gy && self -> pole [ next2 ] . gy >= pole -> gy		5630355	1		&&			
ANR	5630875	RelationalExpression	self -> pole [ prev2 ] . gy >= pole -> gy		5630355	0		>=			
ANR	5630876	MemberAccess	self -> pole [ prev2 ] . gy		5630355	0					
ANR	5630877	ArrayIndexing	self -> pole [ prev2 ]		5630355	0					
ANR	5630878	PtrMemberAccess	self -> pole		5630355	0					
ANR	5630879	Identifier	self		5630355	0					
ANR	5630880	Identifier	pole		5630355	1					
ANR	5630881	Identifier	prev2		5630355	1					
ANR	5630882	Identifier	gy		5630355	1					
ANR	5630883	PtrMemberAccess	pole -> gy		5630355	1					
ANR	5630884	Identifier	pole		5630355	0					
ANR	5630885	Identifier	gy		5630355	1					
ANR	5630886	RelationalExpression	self -> pole [ next2 ] . gy >= pole -> gy		5630355	1		>=			
ANR	5630887	MemberAccess	self -> pole [ next2 ] . gy		5630355	0					
ANR	5630888	ArrayIndexing	self -> pole [ next2 ]		5630355	0					
ANR	5630889	PtrMemberAccess	self -> pole		5630355	0					
ANR	5630890	Identifier	self		5630355	0					
ANR	5630891	Identifier	pole		5630355	1					
ANR	5630892	Identifier	next2		5630355	1					
ANR	5630893	Identifier	gy		5630355	1					
ANR	5630894	PtrMemberAccess	pole -> gy		5630355	1					
ANR	5630895	Identifier	pole		5630355	0					
ANR	5630896	Identifier	gy		5630355	1					
ANR	5630897	IdentifierDeclStatement	"t1_zone * zone = t1_hinter__find_zone ( self , pole -> gy , curve || maximum || minimum , convex || maximum , concave || minimum ) ;"	2030:12:82446:82614	5630355	5	True				
ANR	5630898	IdentifierDecl	"* zone = t1_hinter__find_zone ( self , pole -> gy , curve || maximum || minimum , convex || maximum , concave || minimum )"		5630355	0					
ANR	5630899	IdentifierDeclType	t1_zone *		5630355	0					
ANR	5630900	Identifier	zone		5630355	1					
ANR	5630901	AssignmentExpression	"* zone = t1_hinter__find_zone ( self , pole -> gy , curve || maximum || minimum , convex || maximum , concave || minimum )"		5630355	2		=			
ANR	5630902	Identifier	zone		5630355	0					
ANR	5630903	CallExpression	"t1_hinter__find_zone ( self , pole -> gy , curve || maximum || minimum , convex || maximum , concave || minimum )"		5630355	1					
ANR	5630904	Callee	t1_hinter__find_zone		5630355	0					
ANR	5630905	Identifier	t1_hinter__find_zone		5630355	0					
ANR	5630906	ArgumentList	self		5630355	1					
ANR	5630907	Argument	self		5630355	0					
ANR	5630908	Identifier	self		5630355	0					
ANR	5630909	Argument	pole -> gy		5630355	1					
ANR	5630910	PtrMemberAccess	pole -> gy		5630355	0					
ANR	5630911	Identifier	pole		5630355	0					
ANR	5630912	Identifier	gy		5630355	1					
ANR	5630913	Argument	curve || maximum || minimum		5630355	2					
ANR	5630914	OrExpression	curve || maximum || minimum		5630355	0		||			
ANR	5630915	Identifier	curve		5630355	0					
ANR	5630916	OrExpression	maximum || minimum		5630355	1		||			
ANR	5630917	Identifier	maximum		5630355	0					
ANR	5630918	Identifier	minimum		5630355	1					
ANR	5630919	Argument	convex || maximum		5630355	3					
ANR	5630920	OrExpression	convex || maximum		5630355	0		||			
ANR	5630921	Identifier	convex		5630355	0					
ANR	5630922	Identifier	maximum		5630355	1					
ANR	5630923	Argument	concave || minimum		5630355	4					
ANR	5630924	OrExpression	concave || minimum		5630355	0		||			
ANR	5630925	Identifier	concave		5630355	0					
ANR	5630926	Identifier	minimum		5630355	1					
ANR	5630927	IfStatement	if ( zone != NULL && ( forwd_horiz || bckwd_horiz || ( maximum && zone -> type == topzone ) || ( minimum && zone -> type == botzone ) ) )		5630355	6					
ANR	5630928	Condition	zone != NULL && ( forwd_horiz || bckwd_horiz || ( maximum && zone -> type == topzone ) || ( minimum && zone -> type == botzone ) )	2033:16:82633:82811	5630355	0	True				
ANR	5630929	AndExpression	zone != NULL && ( forwd_horiz || bckwd_horiz || ( maximum && zone -> type == topzone ) || ( minimum && zone -> type == botzone ) )		5630355	0		&&			
ANR	5630930	EqualityExpression	zone != NULL		5630355	0		!=			
ANR	5630931	Identifier	zone		5630355	0					
ANR	5630932	Identifier	NULL		5630355	1					
ANR	5630933	OrExpression	forwd_horiz || bckwd_horiz || ( maximum && zone -> type == topzone ) || ( minimum && zone -> type == botzone )		5630355	1		||			
ANR	5630934	Identifier	forwd_horiz		5630355	0					
ANR	5630935	OrExpression	bckwd_horiz || ( maximum && zone -> type == topzone ) || ( minimum && zone -> type == botzone )		5630355	1		||			
ANR	5630936	Identifier	bckwd_horiz		5630355	0					
ANR	5630937	OrExpression	( maximum && zone -> type == topzone ) || ( minimum && zone -> type == botzone )		5630355	1		||			
ANR	5630938	AndExpression	maximum && zone -> type == topzone		5630355	0		&&			
ANR	5630939	Identifier	maximum		5630355	0					
ANR	5630940	EqualityExpression	zone -> type == topzone		5630355	1		==			
ANR	5630941	PtrMemberAccess	zone -> type		5630355	0					
ANR	5630942	Identifier	zone		5630355	0					
ANR	5630943	Identifier	type		5630355	1					
ANR	5630944	Identifier	topzone		5630355	1					
ANR	5630945	AndExpression	minimum && zone -> type == botzone		5630355	1		&&			
ANR	5630946	Identifier	minimum		5630355	0					
ANR	5630947	EqualityExpression	zone -> type == botzone		5630355	1		==			
ANR	5630948	PtrMemberAccess	zone -> type		5630355	0					
ANR	5630949	Identifier	zone		5630355	0					
ANR	5630950	Identifier	type		5630355	1					
ANR	5630951	Identifier	botzone		5630355	1					
ANR	5630952	CompoundStatement		62:23:3461:3572	5630355	1					
ANR	5630953	IfStatement	if ( self -> suppress_overshoots )		5630355	0					
ANR	5630954	Condition	self -> suppress_overshoots	2037:20:82836:82860	5630355	0	True				
ANR	5630955	PtrMemberAccess	self -> suppress_overshoots		5630355	0					
ANR	5630956	Identifier	self		5630355	0					
ANR	5630957	Identifier	suppress_overshoots		5630355	1					
ANR	5630958	Statement	if	2038:20:82883:82884	5630355	1	True				
ANR	5630959	ElseStatement	else		5630355	0					
ANR	5630960	ExpressionStatement	gy = zone -> y	2041:24:83048:83060	5630355	0	True				
ANR	5630961	AssignmentExpression	gy = zone -> y		5630355	0		=			
ANR	5630962	Identifier	gy		5630355	0					
ANR	5630963	PtrMemberAccess	zone -> y		5630355	1					
ANR	5630964	Identifier	zone		5630355	0					
ANR	5630965	Identifier	y		5630355	1					
ANR	5630966	IdentifierDeclStatement	ADOBE_OVERSHOOT_COMPATIBILIY gy = ( zone -> type == topzone ? zone -> overshoot_y : zone -> y ) ;	2038:23:82886:82997	5630355	1	True				
ANR	5630967	IdentifierDecl	gy = ( zone -> type == topzone ? zone -> overshoot_y : zone -> y )		5630355	0					
ANR	5630968	IdentifierDeclType	ADOBE_OVERSHOOT_COMPATIBILIY		5630355	0					
ANR	5630969	Identifier	gy		5630355	1					
ANR	5630970	AssignmentExpression	gy = ( zone -> type == topzone ? zone -> overshoot_y : zone -> y )		5630355	2		=			
ANR	5630971	Identifier	gy		5630355	0					
ANR	5630972	ConditionalExpression	zone -> type == topzone ? zone -> overshoot_y : zone -> y		5630355	1					
ANR	5630973	Condition	zone -> type == topzone		5630355	0					
ANR	5630974	EqualityExpression	zone -> type == topzone		5630355	0		==			
ANR	5630975	PtrMemberAccess	zone -> type		5630355	0					
ANR	5630976	Identifier	zone		5630355	0					
ANR	5630977	Identifier	type		5630355	1					
ANR	5630978	Identifier	topzone		5630355	1					
ANR	5630979	PtrMemberAccess	zone -> overshoot_y		5630355	1					
ANR	5630980	Identifier	zone		5630355	0					
ANR	5630981	Identifier	overshoot_y		5630355	1					
ANR	5630982	PtrMemberAccess	zone -> y		5630355	2					
ANR	5630983	Identifier	zone		5630355	0					
ANR	5630984	Identifier	y		5630355	1					
ANR	5630985	Statement	endif	2042:20:83082:83086	5630355	2	True				
ANR	5630986	ExpressionStatement	align = ( zone -> type == topzone ? topzn : botzn )	2061:16:83939:83986	5630355	3	True				
ANR	5630987	AssignmentExpression	align = ( zone -> type == topzone ? topzn : botzn )		5630355	0		=			
ANR	5630988	Identifier	align		5630355	0					
ANR	5630989	ConditionalExpression	zone -> type == topzone ? topzn : botzn		5630355	1					
ANR	5630990	Condition	zone -> type == topzone		5630355	0					
ANR	5630991	EqualityExpression	zone -> type == topzone		5630355	0		==			
ANR	5630992	PtrMemberAccess	zone -> type		5630355	0					
ANR	5630993	Identifier	zone		5630355	0					
ANR	5630994	Identifier	type		5630355	1					
ANR	5630995	Identifier	topzone		5630355	1					
ANR	5630996	Identifier	topzn		5630355	1					
ANR	5630997	Identifier	botzn		5630355	2					
ANR	5630998	ExpressionStatement	align_by_stem = false	2062:16:84004:84025	5630355	4	True				
ANR	5630999	AssignmentExpression	align_by_stem = false		5630355	0		=			
ANR	5631000	Identifier	align_by_stem		5630355	0					
ANR	5631001	Identifier	false		5630355	1					
ANR	5631002	ElseStatement	else		5630355	0					
ANR	5631003	CompoundStatement		68:20:3706:3749	5630355	0					
ANR	5631004	IdentifierDeclStatement	t1_glyph_space_coord s = zone -> y - pole -> gy ;	2044:20:83131:83174	5630355	0	True				
ANR	5631005	IdentifierDecl	s = zone -> y - pole -> gy		5630355	0					
ANR	5631006	IdentifierDeclType	t1_glyph_space_coord		5630355	0					
ANR	5631007	Identifier	s		5630355	1					
ANR	5631008	AssignmentExpression	s = zone -> y - pole -> gy		5630355	2		=			
ANR	5631009	Identifier	s		5630355	0					
ANR	5631010	AdditiveExpression	zone -> y - pole -> gy		5630355	1		-			
ANR	5631011	PtrMemberAccess	zone -> y		5630355	0					
ANR	5631012	Identifier	zone		5630355	0					
ANR	5631013	Identifier	y		5630355	1					
ANR	5631014	PtrMemberAccess	pole -> gy		5630355	1					
ANR	5631015	Identifier	pole		5630355	0					
ANR	5631016	Identifier	gy		5630355	1					
ANR	5631017	IfStatement	if ( zone -> type == topzone )		5630355	1					
ANR	5631018	Condition	zone -> type == topzone	2045:24:83200:83220	5630355	0	True				
ANR	5631019	EqualityExpression	zone -> type == topzone		5630355	0		==			
ANR	5631020	PtrMemberAccess	zone -> type		5630355	0					
ANR	5631021	Identifier	zone		5630355	0					
ANR	5631022	Identifier	type		5630355	1					
ANR	5631023	Identifier	topzone		5630355	1					
ANR	5631024	ExpressionStatement	s = - s	2046:24:83247:83253	5630355	1	True				
ANR	5631025	AssignmentExpression	s = - s		5630355	0		=			
ANR	5631026	Identifier	s		5630355	0					
ANR	5631027	UnaryOperationExpression	- s		5630355	1					
ANR	5631028	UnaryOperator	-		5630355	0					
ANR	5631029	Identifier	s		5630355	1					
ANR	5631030	IfStatement	if ( ! curve && s < self -> overshoot_threshold )		5630355	2					
ANR	5631031	Condition	! curve && s < self -> overshoot_threshold	2047:24:83279:83317	5630355	0	True				
ANR	5631032	AndExpression	! curve && s < self -> overshoot_threshold		5630355	0		&&			
ANR	5631033	UnaryOperationExpression	! curve		5630355	0					
ANR	5631034	UnaryOperator	!		5630355	0					
ANR	5631035	Identifier	curve		5630355	1					
ANR	5631036	RelationalExpression	s < self -> overshoot_threshold		5630355	1		<			
ANR	5631037	Identifier	s		5630355	0					
ANR	5631038	PtrMemberAccess	self -> overshoot_threshold		5630355	1					
ANR	5631039	Identifier	self		5630355	0					
ANR	5631040	Identifier	overshoot_threshold		5630355	1					
ANR	5631041	ExpressionStatement	gy = zone -> y	2048:24:83344:83356	5630355	1	True				
ANR	5631042	AssignmentExpression	gy = zone -> y		5630355	0		=			
ANR	5631043	Identifier	gy		5630355	0					
ANR	5631044	PtrMemberAccess	zone -> y		5630355	1					
ANR	5631045	Identifier	zone		5630355	0					
ANR	5631046	Identifier	y		5630355	1					
ANR	5631047	ElseStatement	else		5630355	0					
ANR	5631048	IfStatement	if ( s > self -> overshoot_threshold )		5630355	0					
ANR	5631049	Condition	s > self -> overshoot_threshold	2049:29:83387:83415	5630355	0	True				
ANR	5631050	RelationalExpression	s > self -> overshoot_threshold		5630355	0		>			
ANR	5631051	Identifier	s		5630355	0					
ANR	5631052	PtrMemberAccess	self -> overshoot_threshold		5630355	1					
ANR	5631053	Identifier	self		5630355	0					
ANR	5631054	Identifier	overshoot_threshold		5630355	1					
ANR	5631055	CompoundStatement		74:24:4019:4074	5630355	1					
ANR	5631056	IdentifierDeclStatement	t1_glyph_space_coord ss = self -> overshoot_threshold * 2 ;	2050:24:83444:83499	5630355	0	True				
ANR	5631057	IdentifierDecl	ss = self -> overshoot_threshold * 2		5630355	0					
ANR	5631058	IdentifierDeclType	t1_glyph_space_coord		5630355	0					
ANR	5631059	Identifier	ss		5630355	1					
ANR	5631060	AssignmentExpression	ss = self -> overshoot_threshold * 2		5630355	2		=			
ANR	5631061	Identifier	ss		5630355	0					
ANR	5631062	MultiplicativeExpression	self -> overshoot_threshold * 2		5630355	1		*			
ANR	5631063	PtrMemberAccess	self -> overshoot_threshold		5630355	0					
ANR	5631064	Identifier	self		5630355	0					
ANR	5631065	Identifier	overshoot_threshold		5630355	1					
ANR	5631066	PrimaryExpression	2		5630355	1					
ANR	5631067	IfStatement	if ( s < ss )		5630355	1					
ANR	5631068	Condition	s < ss	2052:28:83530:83535	5630355	0	True				
ANR	5631069	RelationalExpression	s < ss		5630355	0		<			
ANR	5631070	Identifier	s		5630355	0					
ANR	5631071	Identifier	ss		5630355	1					
ANR	5631072	ExpressionStatement	gy = ( zone -> type == topzone ? zone -> y + ss : zone -> y - ss )	2053:28:83592:83650	5630355	1	True				
ANR	5631073	AssignmentExpression	gy = ( zone -> type == topzone ? zone -> y + ss : zone -> y - ss )		5630355	0		=			
ANR	5631074	Identifier	gy		5630355	0					
ANR	5631075	ConditionalExpression	zone -> type == topzone ? zone -> y + ss : zone -> y - ss		5630355	1					
ANR	5631076	Condition	zone -> type == topzone		5630355	0					
ANR	5631077	EqualityExpression	zone -> type == topzone		5630355	0		==			
ANR	5631078	PtrMemberAccess	zone -> type		5630355	0					
ANR	5631079	Identifier	zone		5630355	0					
ANR	5631080	Identifier	type		5630355	1					
ANR	5631081	Identifier	topzone		5630355	1					
ANR	5631082	AdditiveExpression	zone -> y + ss		5630355	1		+			
ANR	5631083	PtrMemberAccess	zone -> y		5630355	0					
ANR	5631084	Identifier	zone		5630355	0					
ANR	5631085	Identifier	y		5630355	1					
ANR	5631086	Identifier	ss		5630355	1					
ANR	5631087	AdditiveExpression	zone -> y - ss		5630355	2		-			
ANR	5631088	PtrMemberAccess	zone -> y		5630355	0					
ANR	5631089	Identifier	zone		5630355	0					
ANR	5631090	Identifier	y		5630355	1					
ANR	5631091	Identifier	ss		5630355	1					
ANR	5631092	ElseStatement	else		5630355	0					
ANR	5631093	CompoundStatement		79:31:4289:4396	5630355	0					
ANR	5631094	Statement	if	2055:28:83711:83712	5630355	0	True				
ANR	5631095	IdentifierDeclStatement	"ADOBE_OVERSHOOT_COMPATIBILIY t1_hinter__add_overshoot ( self , zone , & gx , & gy ) ;"	2055:31:83714:83821	5630355	1	True				
ANR	5631096	IdentifierDecl	"t1_hinter__add_overshoot ( self , zone , & gx , & gy )"		5630355	0					
ANR	5631097	IdentifierDeclType	ADOBE_OVERSHOOT_COMPATIBILIY		5630355	0					
ANR	5631098	Identifier	t1_hinter__add_overshoot		5630355	1					
ANR	5631099	Expression	"self , zone , & gx , & gy"		5630355	2					
ANR	5631100	Identifier	self		5630355	0					
ANR	5631101	Expression	"zone , & gx , & gy"		5630355	1					
ANR	5631102	Identifier	zone		5630355	0					
ANR	5631103	Expression	"& gx , & gy"		5630355	1					
ANR	5631104	UnaryOperationExpression	& gx		5630355	0					
ANR	5631105	UnaryOperator	&		5630355	0					
ANR	5631106	Identifier	gx		5630355	1					
ANR	5631107	UnaryOperationExpression	& gy		5630355	1					
ANR	5631108	UnaryOperator	&		5630355	0					
ANR	5631109	Identifier	gy		5630355	1					
ANR	5631110	Statement	endif	2057:28:83851:83855	5630355	2	True				
ANR	5631111	IfStatement	if ( align_by_stem )		5630355	10					
ANR	5631112	Condition	align_by_stem	2066:8:84065:84077	5630355	0	True				
ANR	5631113	Identifier	align_by_stem		5630355	0					
ANR	5631114	CompoundStatement		91:8:4665:4694	5630355	1					
ANR	5631115	IdentifierDeclStatement	"t1_glyph_space_coord gx1 , gy1 ;"	2067:8:84090:84119	5630355	0	True				
ANR	5631116	IdentifierDecl	gx1		5630355	0					
ANR	5631117	IdentifierDeclType	t1_glyph_space_coord		5630355	0					
ANR	5631118	Identifier	gx1		5630355	1					
ANR	5631119	IdentifierDecl	gy1		5630355	1					
ANR	5631120	IdentifierDeclType	t1_glyph_space_coord		5630355	0					
ANR	5631121	Identifier	gy1		5630355	1					
ANR	5631122	IfStatement	if ( horiz )		5630355	1					
ANR	5631123	Condition	horiz	2069:12:84134:84138	5630355	0	True				
ANR	5631124	Identifier	horiz		5630355	0					
ANR	5631125	CompoundStatement		95:12:4805:4866	5630355	1					
ANR	5631126	IdentifierDeclStatement	"bool b0 = t1_hinter__is_stem_boundary_near ( self , hint , gy , 0 ) ;"	2070:12:84155:84216	5630355	0	True				
ANR	5631127	IdentifierDecl	"b0 = t1_hinter__is_stem_boundary_near ( self , hint , gy , 0 )"		5630355	0					
ANR	5631128	IdentifierDeclType	bool		5630355	0					
ANR	5631129	Identifier	b0		5630355	1					
ANR	5631130	AssignmentExpression	"b0 = t1_hinter__is_stem_boundary_near ( self , hint , gy , 0 )"		5630355	2		=			
ANR	5631131	Identifier	b0		5630355	0					
ANR	5631132	CallExpression	"t1_hinter__is_stem_boundary_near ( self , hint , gy , 0 )"		5630355	1					
ANR	5631133	Callee	t1_hinter__is_stem_boundary_near		5630355	0					
ANR	5631134	Identifier	t1_hinter__is_stem_boundary_near		5630355	0					
ANR	5631135	ArgumentList	self		5630355	1					
ANR	5631136	Argument	self		5630355	0					
ANR	5631137	Identifier	self		5630355	0					
ANR	5631138	Argument	hint		5630355	1					
ANR	5631139	Identifier	hint		5630355	0					
ANR	5631140	Argument	gy		5630355	2					
ANR	5631141	Identifier	gy		5630355	0					
ANR	5631142	Argument	0		5630355	3					
ANR	5631143	PrimaryExpression	0		5630355	0					
ANR	5631144	IdentifierDeclStatement	"bool b1 = t1_hinter__is_stem_boundary_near ( self , hint , gy , 1 ) ;"	2071:12:84230:84291	5630355	1	True				
ANR	5631145	IdentifierDecl	"b1 = t1_hinter__is_stem_boundary_near ( self , hint , gy , 1 )"		5630355	0					
ANR	5631146	IdentifierDeclType	bool		5630355	0					
ANR	5631147	Identifier	b1		5630355	1					
ANR	5631148	AssignmentExpression	"b1 = t1_hinter__is_stem_boundary_near ( self , hint , gy , 1 )"		5630355	2		=			
ANR	5631149	Identifier	b1		5630355	0					
ANR	5631150	CallExpression	"t1_hinter__is_stem_boundary_near ( self , hint , gy , 1 )"		5630355	1					
ANR	5631151	Callee	t1_hinter__is_stem_boundary_near		5630355	0					
ANR	5631152	Identifier	t1_hinter__is_stem_boundary_near		5630355	0					
ANR	5631153	ArgumentList	self		5630355	1					
ANR	5631154	Argument	self		5630355	0					
ANR	5631155	Identifier	self		5630355	0					
ANR	5631156	Argument	hint		5630355	1					
ANR	5631157	Identifier	hint		5630355	0					
ANR	5631158	Argument	gy		5630355	2					
ANR	5631159	Identifier	gy		5630355	0					
ANR	5631160	Argument	1		5630355	3					
ANR	5631161	PrimaryExpression	1		5630355	0					
ANR	5631162	ExpressionStatement	gx1 = gx	2073:12:84306:84314	5630355	2	True				
ANR	5631163	AssignmentExpression	gx1 = gx		5630355	0		=			
ANR	5631164	Identifier	gx1		5630355	0					
ANR	5631165	Identifier	gx		5630355	1					
ANR	5631166	IfStatement	if ( b0 && ! b1 )		5630355	3					
ANR	5631167	Condition	b0 && ! b1	2074:16:84332:84340	5630355	0	True				
ANR	5631168	AndExpression	b0 && ! b1		5630355	0		&&			
ANR	5631169	Identifier	b0		5630355	0					
ANR	5631170	UnaryOperationExpression	! b1		5630355	1					
ANR	5631171	UnaryOperator	!		5630355	0					
ANR	5631172	Identifier	b1		5630355	1					
ANR	5631173	ExpressionStatement	"gy1 = hint -> g1 , align_by_stem = true"	2075:16:84359:84395	5630355	1	True				
ANR	5631174	Expression	"gy1 = hint -> g1 , align_by_stem = true"		5630355	0					
ANR	5631175	AssignmentExpression	gy1 = hint -> g1		5630355	0		=			
ANR	5631176	Identifier	gy1		5630355	0					
ANR	5631177	PtrMemberAccess	hint -> g1		5630355	1					
ANR	5631178	Identifier	hint		5630355	0					
ANR	5631179	Identifier	g1		5630355	1					
ANR	5631180	AssignmentExpression	align_by_stem = true		5630355	1		=			
ANR	5631181	Identifier	align_by_stem		5630355	0					
ANR	5631182	Identifier	true		5630355	1					
ANR	5631183	ElseStatement	else		5630355	0					
ANR	5631184	IfStatement	if ( ! b0 && b1 )		5630355	0					
ANR	5631185	Condition	! b0 && b1	2076:21:84418:84426	5630355	0	True				
ANR	5631186	AndExpression	! b0 && b1		5630355	0		&&			
ANR	5631187	UnaryOperationExpression	! b0		5630355	0					
ANR	5631188	UnaryOperator	!		5630355	0					
ANR	5631189	Identifier	b0		5630355	1					
ANR	5631190	Identifier	b1		5630355	1					
ANR	5631191	ExpressionStatement	"gy1 = hint -> g0 , align_by_stem = true"	2077:16:84445:84481	5630355	1	True				
ANR	5631192	Expression	"gy1 = hint -> g0 , align_by_stem = true"		5630355	0					
ANR	5631193	AssignmentExpression	gy1 = hint -> g0		5630355	0		=			
ANR	5631194	Identifier	gy1		5630355	0					
ANR	5631195	PtrMemberAccess	hint -> g0		5630355	1					
ANR	5631196	Identifier	hint		5630355	0					
ANR	5631197	Identifier	g0		5630355	1					
ANR	5631198	AssignmentExpression	align_by_stem = true		5630355	1		=			
ANR	5631199	Identifier	align_by_stem		5630355	0					
ANR	5631200	Identifier	true		5630355	1					
ANR	5631201	ElseStatement	else		5630355	0					
ANR	5631202	ExpressionStatement	gy1 = 0	2079:16:84516:84523	5630355	0	True				
ANR	5631203	AssignmentExpression	gy1 = 0		5630355	0		=			
ANR	5631204	Identifier	gy1		5630355	0					
ANR	5631205	PrimaryExpression	0		5630355	1					
ANR	5631206	ElseStatement	else		5630355	0					
ANR	5631207	CompoundStatement		106:12:5230:5291	5630355	0					
ANR	5631208	IdentifierDeclStatement	"bool b0 = t1_hinter__is_stem_boundary_near ( self , hint , gx , 0 ) ;"	2081:12:84580:84641	5630355	0	True				
ANR	5631209	IdentifierDecl	"b0 = t1_hinter__is_stem_boundary_near ( self , hint , gx , 0 )"		5630355	0					
ANR	5631210	IdentifierDeclType	bool		5630355	0					
ANR	5631211	Identifier	b0		5630355	1					
ANR	5631212	AssignmentExpression	"b0 = t1_hinter__is_stem_boundary_near ( self , hint , gx , 0 )"		5630355	2		=			
ANR	5631213	Identifier	b0		5630355	0					
ANR	5631214	CallExpression	"t1_hinter__is_stem_boundary_near ( self , hint , gx , 0 )"		5630355	1					
ANR	5631215	Callee	t1_hinter__is_stem_boundary_near		5630355	0					
ANR	5631216	Identifier	t1_hinter__is_stem_boundary_near		5630355	0					
ANR	5631217	ArgumentList	self		5630355	1					
ANR	5631218	Argument	self		5630355	0					
ANR	5631219	Identifier	self		5630355	0					
ANR	5631220	Argument	hint		5630355	1					
ANR	5631221	Identifier	hint		5630355	0					
ANR	5631222	Argument	gx		5630355	2					
ANR	5631223	Identifier	gx		5630355	0					
ANR	5631224	Argument	0		5630355	3					
ANR	5631225	PrimaryExpression	0		5630355	0					
ANR	5631226	IdentifierDeclStatement	"bool b1 = t1_hinter__is_stem_boundary_near ( self , hint , gx , 1 ) ;"	2082:12:84655:84716	5630355	1	True				
ANR	5631227	IdentifierDecl	"b1 = t1_hinter__is_stem_boundary_near ( self , hint , gx , 1 )"		5630355	0					
ANR	5631228	IdentifierDeclType	bool		5630355	0					
ANR	5631229	Identifier	b1		5630355	1					
ANR	5631230	AssignmentExpression	"b1 = t1_hinter__is_stem_boundary_near ( self , hint , gx , 1 )"		5630355	2		=			
ANR	5631231	Identifier	b1		5630355	0					
ANR	5631232	CallExpression	"t1_hinter__is_stem_boundary_near ( self , hint , gx , 1 )"		5630355	1					
ANR	5631233	Callee	t1_hinter__is_stem_boundary_near		5630355	0					
ANR	5631234	Identifier	t1_hinter__is_stem_boundary_near		5630355	0					
ANR	5631235	ArgumentList	self		5630355	1					
ANR	5631236	Argument	self		5630355	0					
ANR	5631237	Identifier	self		5630355	0					
ANR	5631238	Argument	hint		5630355	1					
ANR	5631239	Identifier	hint		5630355	0					
ANR	5631240	Argument	gx		5630355	2					
ANR	5631241	Identifier	gx		5630355	0					
ANR	5631242	Argument	1		5630355	3					
ANR	5631243	PrimaryExpression	1		5630355	0					
ANR	5631244	ExpressionStatement	gy1 = gy	2084:12:84731:84739	5630355	2	True				
ANR	5631245	AssignmentExpression	gy1 = gy		5630355	0		=			
ANR	5631246	Identifier	gy1		5630355	0					
ANR	5631247	Identifier	gy		5630355	1					
ANR	5631248	IfStatement	if ( b0 && ! b1 )		5630355	3					
ANR	5631249	Condition	b0 && ! b1	2085:16:84757:84765	5630355	0	True				
ANR	5631250	AndExpression	b0 && ! b1		5630355	0		&&			
ANR	5631251	Identifier	b0		5630355	0					
ANR	5631252	UnaryOperationExpression	! b1		5630355	1					
ANR	5631253	UnaryOperator	!		5630355	0					
ANR	5631254	Identifier	b1		5630355	1					
ANR	5631255	ExpressionStatement	"gx1 = hint -> g1 , align_by_stem = true"	2086:16:84784:84820	5630355	1	True				
ANR	5631256	Expression	"gx1 = hint -> g1 , align_by_stem = true"		5630355	0					
ANR	5631257	AssignmentExpression	gx1 = hint -> g1		5630355	0		=			
ANR	5631258	Identifier	gx1		5630355	0					
ANR	5631259	PtrMemberAccess	hint -> g1		5630355	1					
ANR	5631260	Identifier	hint		5630355	0					
ANR	5631261	Identifier	g1		5630355	1					
ANR	5631262	AssignmentExpression	align_by_stem = true		5630355	1		=			
ANR	5631263	Identifier	align_by_stem		5630355	0					
ANR	5631264	Identifier	true		5630355	1					
ANR	5631265	ElseStatement	else		5630355	0					
ANR	5631266	IfStatement	if ( ! b0 && b1 )		5630355	0					
ANR	5631267	Condition	! b0 && b1	2087:21:84843:84851	5630355	0	True				
ANR	5631268	AndExpression	! b0 && b1		5630355	0		&&			
ANR	5631269	UnaryOperationExpression	! b0		5630355	0					
ANR	5631270	UnaryOperator	!		5630355	0					
ANR	5631271	Identifier	b0		5630355	1					
ANR	5631272	Identifier	b1		5630355	1					
ANR	5631273	ExpressionStatement	"gx1 = hint -> g0 , align_by_stem = true"	2088:16:84870:84906	5630355	1	True				
ANR	5631274	Expression	"gx1 = hint -> g0 , align_by_stem = true"		5630355	0					
ANR	5631275	AssignmentExpression	gx1 = hint -> g0		5630355	0		=			
ANR	5631276	Identifier	gx1		5630355	0					
ANR	5631277	PtrMemberAccess	hint -> g0		5630355	1					
ANR	5631278	Identifier	hint		5630355	0					
ANR	5631279	Identifier	g0		5630355	1					
ANR	5631280	AssignmentExpression	align_by_stem = true		5630355	1		=			
ANR	5631281	Identifier	align_by_stem		5630355	0					
ANR	5631282	Identifier	true		5630355	1					
ANR	5631283	ElseStatement	else		5630355	0					
ANR	5631284	ExpressionStatement	gx1 = 0	2090:16:84941:84948	5630355	0	True				
ANR	5631285	AssignmentExpression	gx1 = 0		5630355	0		=			
ANR	5631286	Identifier	gx1		5630355	0					
ANR	5631287	PrimaryExpression	0		5630355	1					
ANR	5631288	IfStatement	if ( align_by_stem )		5630355	2					
ANR	5631289	Condition	align_by_stem	2092:12:84998:85010	5630355	0	True				
ANR	5631290	Identifier	align_by_stem		5630355	0					
ANR	5631291	ExpressionStatement	"t1_hinter__align_stem_to_grid ( self , self -> g2o_fraction , & gx , & gy , gx1 , gy1 , CONTRAST_STEMS || self -> align_to_pixels , hint )"	2093:12:85025:85167	5630355	1	True				
ANR	5631292	CallExpression	"t1_hinter__align_stem_to_grid ( self , self -> g2o_fraction , & gx , & gy , gx1 , gy1 , CONTRAST_STEMS || self -> align_to_pixels , hint )"		5630355	0					
ANR	5631293	Callee	t1_hinter__align_stem_to_grid		5630355	0					
ANR	5631294	Identifier	t1_hinter__align_stem_to_grid		5630355	0					
ANR	5631295	ArgumentList	self		5630355	1					
ANR	5631296	Argument	self		5630355	0					
ANR	5631297	Identifier	self		5630355	0					
ANR	5631298	Argument	self -> g2o_fraction		5630355	1					
ANR	5631299	PtrMemberAccess	self -> g2o_fraction		5630355	0					
ANR	5631300	Identifier	self		5630355	0					
ANR	5631301	Identifier	g2o_fraction		5630355	1					
ANR	5631302	Argument	& gx		5630355	2					
ANR	5631303	UnaryOperationExpression	& gx		5630355	0					
ANR	5631304	UnaryOperator	&		5630355	0					
ANR	5631305	Identifier	gx		5630355	1					
ANR	5631306	Argument	& gy		5630355	3					
ANR	5631307	UnaryOperationExpression	& gy		5630355	0					
ANR	5631308	UnaryOperator	&		5630355	0					
ANR	5631309	Identifier	gy		5630355	1					
ANR	5631310	Argument	gx1		5630355	4					
ANR	5631311	Identifier	gx1		5630355	0					
ANR	5631312	Argument	gy1		5630355	5					
ANR	5631313	Identifier	gy1		5630355	0					
ANR	5631314	Argument	CONTRAST_STEMS || self -> align_to_pixels		5630355	6					
ANR	5631315	OrExpression	CONTRAST_STEMS || self -> align_to_pixels		5630355	0		||			
ANR	5631316	Identifier	CONTRAST_STEMS		5630355	0					
ANR	5631317	PtrMemberAccess	self -> align_to_pixels		5630355	1					
ANR	5631318	Identifier	self		5630355	0					
ANR	5631319	Identifier	align_to_pixels		5630355	1					
ANR	5631320	Argument	hint		5630355	7					
ANR	5631321	Identifier	hint		5630355	0					
ANR	5631322	IfStatement	if ( ! align_by_stem )		5630355	11					
ANR	5631323	Condition	! align_by_stem	2096:8:85183:85196	5630355	0	True				
ANR	5631324	UnaryOperationExpression	! align_by_stem		5630355	0					
ANR	5631325	UnaryOperator	!		5630355	0					
ANR	5631326	Identifier	align_by_stem		5630355	1					
ANR	5631327	ExpressionStatement	"t1_hinter__align_to_grid ( self , self -> g2o_fraction , & gx , & gy , CONTRAST_STEMS || self -> align_to_pixels )"	2097:8:85207:85336	5630355	1	True				
ANR	5631328	CallExpression	"t1_hinter__align_to_grid ( self , self -> g2o_fraction , & gx , & gy , CONTRAST_STEMS || self -> align_to_pixels )"		5630355	0					
ANR	5631329	Callee	t1_hinter__align_to_grid		5630355	0					
ANR	5631330	Identifier	t1_hinter__align_to_grid		5630355	0					
ANR	5631331	ArgumentList	self		5630355	1					
ANR	5631332	Argument	self		5630355	0					
ANR	5631333	Identifier	self		5630355	0					
ANR	5631334	Argument	self -> g2o_fraction		5630355	1					
ANR	5631335	PtrMemberAccess	self -> g2o_fraction		5630355	0					
ANR	5631336	Identifier	self		5630355	0					
ANR	5631337	Identifier	g2o_fraction		5630355	1					
ANR	5631338	Argument	& gx		5630355	2					
ANR	5631339	UnaryOperationExpression	& gx		5630355	0					
ANR	5631340	UnaryOperator	&		5630355	0					
ANR	5631341	Identifier	gx		5630355	1					
ANR	5631342	Argument	& gy		5630355	3					
ANR	5631343	UnaryOperationExpression	& gy		5630355	0					
ANR	5631344	UnaryOperator	&		5630355	0					
ANR	5631345	Identifier	gy		5630355	1					
ANR	5631346	Argument	CONTRAST_STEMS || self -> align_to_pixels		5630355	4					
ANR	5631347	OrExpression	CONTRAST_STEMS || self -> align_to_pixels		5630355	0		||			
ANR	5631348	Identifier	CONTRAST_STEMS		5630355	0					
ANR	5631349	PtrMemberAccess	self -> align_to_pixels		5630355	1					
ANR	5631350	Identifier	self		5630355	0					
ANR	5631351	Identifier	align_to_pixels		5630355	1					
ANR	5631352	ExpressionStatement	* gc = gc0 + ( horiz ? gy - gy0 : gx - gx0 )	2099:4:85342:85383	5630355	12	True				
ANR	5631353	AssignmentExpression	* gc = gc0 + ( horiz ? gy - gy0 : gx - gx0 )		5630355	0		=			
ANR	5631354	UnaryOperationExpression	* gc		5630355	0					
ANR	5631355	UnaryOperator	*		5630355	0					
ANR	5631356	Identifier	gc		5630355	1					
ANR	5631357	AdditiveExpression	gc0 + ( horiz ? gy - gy0 : gx - gx0 )		5630355	1		+			
ANR	5631358	Identifier	gc0		5630355	0					
ANR	5631359	ConditionalExpression	horiz ? gy - gy0 : gx - gx0		5630355	1					
ANR	5631360	Condition	horiz		5630355	0					
ANR	5631361	Identifier	horiz		5630355	0					
ANR	5631362	AdditiveExpression	gy - gy0		5630355	1		-			
ANR	5631363	Identifier	gy		5630355	0					
ANR	5631364	Identifier	gy0		5630355	1					
ANR	5631365	AdditiveExpression	gx - gx0		5630355	2		-			
ANR	5631366	Identifier	gx		5630355	0					
ANR	5631367	Identifier	gx0		5630355	1					
ANR	5631368	ReturnStatement	return ( align == unaligned ? aligned : align ) ;	2100:4:85389:85434	5630355	13	True				
ANR	5631369	ConditionalExpression	align == unaligned ? aligned : align		5630355	0					
ANR	5631370	Condition	align == unaligned		5630355	0					
ANR	5631371	EqualityExpression	align == unaligned		5630355	0		==			
ANR	5631372	Identifier	align		5630355	0					
ANR	5631373	Identifier	unaligned		5630355	1					
ANR	5631374	Identifier	aligned		5630355	1					
ANR	5631375	Identifier	align		5630355	2					
ANR	5631376	ReturnType	static enum t1_align_type		5630355	1					
ANR	5631377	Identifier	t1_hinter__compute_aligned_coord		5630355	2					
ANR	5631378	ParameterList	"t1_hinter * self , t1_glyph_space_coord * gc , int segment_index , fixed t , const t1_hint * hint , enum t1_align_type align0"		5630355	3					
ANR	5631379	Parameter	t1_hinter * self	1974:59:79279:79294	5630355	0	True				
ANR	5631380	ParameterType	t1_hinter *		5630355	0					
ANR	5631381	Identifier	self		5630355	1					
ANR	5631382	Parameter	t1_glyph_space_coord * gc	1975:12:79309:79333	5630355	1	True				
ANR	5631383	ParameterType	t1_glyph_space_coord *		5630355	0					
ANR	5631384	Identifier	gc		5630355	1					
ANR	5631385	Parameter	int segment_index	1975:39:79336:79352	5630355	2	True				
ANR	5631386	ParameterType	int		5630355	0					
ANR	5631387	Identifier	segment_index		5630355	1					
ANR	5631388	Parameter	fixed t	1975:58:79355:79361	5630355	3	True				
ANR	5631389	ParameterType	fixed		5630355	0					
ANR	5631390	Identifier	t		5630355	1					
ANR	5631391	Parameter	const t1_hint * hint	1975:67:79364:79382	5630355	4	True				
ANR	5631392	ParameterType	const t1_hint *		5630355	0					
ANR	5631393	Identifier	hint		5630355	1					
ANR	5631394	Parameter	enum t1_align_type align0	1976:12:79397:79421	5630355	5	True				
ANR	5631395	ParameterType	enum t1_align_type		5630355	0					
ANR	5631396	Identifier	align0		5630355	1					
ANR	5631397	CFGEntryNode	ENTRY		5630355		True				
ANR	5631398	CFGExitNode	EXIT		5630355		True				
ANR	5631399	Symbol	prev2		5630355						
ANR	5631400	Symbol	t1_hinter__add_overshoot		5630355						
ANR	5631401	Symbol	prev1		5630355						
ANR	5631402	Symbol	self -> pole [ next1 ] . gx		5630355						
ANR	5631403	Symbol	b0		5630355						
ANR	5631404	Symbol	self -> pole [ next1 ] . gy		5630355						
ANR	5631405	Symbol	self -> pole [ next2 ] . gy		5630355						
ANR	5631406	Symbol	b1		5630355						
ANR	5631407	Symbol	zone -> type		5630355						
ANR	5631408	Symbol	self -> suppress_overshoots		5630355						
ANR	5631409	Symbol	forwd_curve		5630355						
ANR	5631410	Symbol	aligned		5630355						
ANR	5631411	Symbol	self -> align_to_pixels		5630355						
ANR	5631412	Symbol	* hint		5630355						
ANR	5631413	Symbol	self -> pole [ segment_index ] . gy		5630355						
ANR	5631414	Symbol	self -> g2o_fraction		5630355						
ANR	5631415	Symbol	self -> pole [ segment_index ] . gx		5630355						
ANR	5631416	Symbol	self -> overshoot_threshold		5630355						
ANR	5631417	Symbol	* self		5630355						
ANR	5631418	Symbol	bckwd_horiz		5630355						
ANR	5631419	Symbol	hint -> b1		5630355						
ANR	5631420	Symbol	* prev1		5630355						
ANR	5631421	Symbol	hint -> b0		5630355						
ANR	5631422	Symbol	* prev2		5630355						
ANR	5631423	Symbol	unaligned		5630355						
ANR	5631424	Symbol	self -> pole [ prev1 ] . gx		5630355						
ANR	5631425	Symbol	self -> pole [ prev1 ] . gy		5630355						
ANR	5631426	Symbol	& gx		5630355						
ANR	5631427	Symbol	& gy		5630355						
ANR	5631428	Symbol	* self -> pole		5630355						
ANR	5631429	Symbol	curve		5630355						
ANR	5631430	Symbol	* zone		5630355						
ANR	5631431	Symbol	self -> pole [ prev1 ] . type		5630355						
ANR	5631432	Symbol	* pole		5630355						
ANR	5631433	Symbol	* segment_index		5630355						
ANR	5631434	Symbol	horiz		5630355						
ANR	5631435	Symbol	any_abs		5630355						
ANR	5631436	Symbol	t1_hinter__find_zone		5630355						
ANR	5631437	Symbol	self -> pole		5630355						
ANR	5631438	Symbol	contour_index		5630355						
ANR	5631439	Symbol	beg_contour_pole		5630355						
ANR	5631440	Symbol	hint -> type		5630355						
ANR	5631441	Symbol	gx0		5630355						
ANR	5631442	Symbol	ss		5630355						
ANR	5631443	Symbol	gx1		5630355						
ANR	5631444	Symbol	align0		5630355						
ANR	5631445	Symbol	* * self		5630355						
ANR	5631446	Symbol	max		5630355						
ANR	5631447	Symbol	self -> pole [ prev2 ] . gy		5630355						
ANR	5631448	Symbol	s		5630355						
ANR	5631449	Symbol	t		5630355						
ANR	5631450	Symbol	self		5630355						
ANR	5631451	Symbol	maximum		5630355						
ANR	5631452	Symbol	minimum		5630355						
ANR	5631453	Symbol	gy1		5630355						
ANR	5631454	Symbol	gy0		5630355						
ANR	5631455	Symbol	align_by_stem		5630355						
ANR	5631456	Symbol	* gc		5630355						
ANR	5631457	Symbol	forwd_horiz		5630355						
ANR	5631458	Symbol	pole -> gy		5630355						
ANR	5631459	Symbol	* next		5630355						
ANR	5631460	Symbol	pole -> gx		5630355						
ANR	5631461	Symbol	self -> pole [ next1 ] . type		5630355						
ANR	5631462	Symbol	align		5630355						
ANR	5631463	Symbol	pole		5630355						
ANR	5631464	Symbol	hint -> g1		5630355						
ANR	5631465	Symbol	zone		5630355						
ANR	5631466	Symbol	self -> blue_fuzz		5630355						
ANR	5631467	Symbol	* contour_index		5630355						
ANR	5631468	Symbol	segment_index		5630355						
ANR	5631469	Symbol	concave		5630355						
ANR	5631470	Symbol	topzone		5630355						
ANR	5631471	Symbol	ranger_step_f		5630355						
ANR	5631472	Symbol	next2		5630355						
ANR	5631473	Symbol	botzn		5630355						
ANR	5631474	Symbol	next1		5630355						
ANR	5631475	Symbol	NULL		5630355						
ANR	5631476	Symbol	ranger_step_b		5630355						
ANR	5631477	Symbol	bckwd_curve		5630355						
ANR	5631478	Symbol	self -> contour		5630355						
ANR	5631479	Symbol	hint -> g0		5630355						
ANR	5631480	Symbol	end_contour_pole		5630355						
ANR	5631481	Symbol	* next1		5630355						
ANR	5631482	Symbol	hint		5630355						
ANR	5631483	Symbol	* next2		5630355						
ANR	5631484	Symbol	true		5630355						
ANR	5631485	Symbol	next		5630355						
ANR	5631486	Symbol	CONTRAST_STEMS		5630355						
ANR	5631487	Symbol	t1_hinter__segment_end		5630355						
ANR	5631488	Symbol	pole -> contour_index		5630355						
ANR	5631489	Symbol	self -> pole [ next ] . gx		5630355						
ANR	5631490	Symbol	gc0		5630355						
ANR	5631491	Symbol	self -> pole [ next ] . gy		5630355						
ANR	5631492	Symbol	convex		5630355						
ANR	5631493	Symbol	botzone		5630355						
ANR	5631494	Symbol	gc		5630355						
ANR	5631495	Symbol	hstem		5630355						
ANR	5631496	Symbol	zone -> overshoot_y		5630355						
ANR	5631497	Symbol	topzn		5630355						
ANR	5631498	Symbol	* self -> contour		5630355						
ANR	5631499	Symbol	zone -> y		5630355						
ANR	5631500	Symbol	false		5630355						
ANR	5631501	Symbol	gx		5630355						
ANR	5631502	Symbol	gy		5630355						
ANR	5631503	Symbol	offcurve		5630355						
ANR	5631504	Symbol	t1_hinter__is_stem_boundary_near		5630355						
ANR	5631505	Function	t1_hinter__find_stem_middle	2107:0:85629:86911							
ANR	5631506	FunctionDef	"t1_hinter__find_stem_middle (t1_hinter * self , fixed * t , int pole_index , bool horiz)"		5631505	0					
ANR	5631507	CompoundStatement		2108:0:85724:86911	5631505	0					
ANR	5631508	IfStatement	if ( PRESERVE_STEM_SLANT == 2 )		5631505	0					
ANR	5631509	Condition	PRESERVE_STEM_SLANT == 2	2110:8:85826:85849	5631505	0	True				
ANR	5631510	EqualityExpression	PRESERVE_STEM_SLANT == 2		5631505	0		==			
ANR	5631511	Identifier	PRESERVE_STEM_SLANT		5631505	0					
ANR	5631512	PrimaryExpression	2		5631505	1					
ANR	5631513	CompoundStatement		3:34:127:127	5631505	1					
ANR	5631514	ExpressionStatement	* t = 0	2111:8:85862:85868	5631505	0	True				
ANR	5631515	AssignmentExpression	* t = 0		5631505	0		=			
ANR	5631516	UnaryOperationExpression	* t		5631505	0					
ANR	5631517	UnaryOperator	*		5631505	0					
ANR	5631518	Identifier	t		5631505	1					
ANR	5631519	PrimaryExpression	0		5631505	1					
ANR	5631520	ReturnStatement	return pole_index ;	2112:8:85878:85895	5631505	1	True				
ANR	5631521	Identifier	pole_index		5631505	0					
ANR	5631522	ElseStatement	else		5631505	0					
ANR	5631523	CompoundStatement		18:8:780:1004	5631505	0					
ANR	5631524	IdentifierDeclStatement	"int next = t1_hinter__next_contour_pole ( self , pole_index ) ;"	2121:8:86326:86383	5631505	0	True				
ANR	5631525	IdentifierDecl	"next = t1_hinter__next_contour_pole ( self , pole_index )"		5631505	0					
ANR	5631526	IdentifierDeclType	int		5631505	0					
ANR	5631527	Identifier	next		5631505	1					
ANR	5631528	AssignmentExpression	"next = t1_hinter__next_contour_pole ( self , pole_index )"		5631505	2		=			
ANR	5631529	Identifier	next		5631505	0					
ANR	5631530	CallExpression	"t1_hinter__next_contour_pole ( self , pole_index )"		5631505	1					
ANR	5631531	Callee	t1_hinter__next_contour_pole		5631505	0					
ANR	5631532	Identifier	t1_hinter__next_contour_pole		5631505	0					
ANR	5631533	ArgumentList	self		5631505	1					
ANR	5631534	Argument	self		5631505	0					
ANR	5631535	Identifier	self		5631505	0					
ANR	5631536	Argument	pole_index		5631505	1					
ANR	5631537	Identifier	pole_index		5631505	0					
ANR	5631538	IdentifierDeclStatement	const int alpha = 10 ;	2122:8:86393:86413	5631505	1	True				
ANR	5631539	IdentifierDecl	alpha = 10		5631505	0					
ANR	5631540	IdentifierDeclType	const int		5631505	0					
ANR	5631541	Identifier	alpha		5631505	1					
ANR	5631542	AssignmentExpression	alpha = 10		5631505	2		=			
ANR	5631543	Identifier	alpha		5631505	0					
ANR	5631544	PrimaryExpression	10		5631505	1					
ANR	5631545	IdentifierDeclStatement	int design_slant ;	2123:8:86423:86439	5631505	2	True				
ANR	5631546	IdentifierDecl	design_slant		5631505	0					
ANR	5631547	IdentifierDeclType	int		5631505	0					
ANR	5631548	Identifier	design_slant		5631505	1					
ANR	5631549	IdentifierDeclStatement	bool curve = self -> pole [ next ] . type == offcurve ;	2124:8:86449:86495	5631505	3	True				
ANR	5631550	IdentifierDecl	curve = self -> pole [ next ] . type == offcurve		5631505	0					
ANR	5631551	IdentifierDeclType	bool		5631505	0					
ANR	5631552	Identifier	curve		5631505	1					
ANR	5631553	AssignmentExpression	curve = self -> pole [ next ] . type == offcurve		5631505	2		=			
ANR	5631554	Identifier	curve		5631505	0					
ANR	5631555	EqualityExpression	self -> pole [ next ] . type == offcurve		5631505	1		==			
ANR	5631556	MemberAccess	self -> pole [ next ] . type		5631505	0					
ANR	5631557	ArrayIndexing	self -> pole [ next ]		5631505	0					
ANR	5631558	PtrMemberAccess	self -> pole		5631505	0					
ANR	5631559	Identifier	self		5631505	0					
ANR	5631560	Identifier	pole		5631505	1					
ANR	5631561	Identifier	next		5631505	1					
ANR	5631562	Identifier	type		5631505	1					
ANR	5631563	Identifier	offcurve		5631505	1					
ANR	5631564	IdentifierDeclStatement	"bool continuing = ( horiz ? t1_hinter__is_small_angle ( self , next , pole_index , 1 , 0 , alpha , 1 , & design_slant ) : t1_hinter__is_small_angle ( self , next , pole_index , 0 , 1 , alpha , 1 , & design_slant ) ) ;"	2125:8:86505:86729	5631505	4	True				
ANR	5631565	IdentifierDecl	"continuing = ( horiz ? t1_hinter__is_small_angle ( self , next , pole_index , 1 , 0 , alpha , 1 , & design_slant ) : t1_hinter__is_small_angle ( self , next , pole_index , 0 , 1 , alpha , 1 , & design_slant ) )"		5631505	0					
ANR	5631566	IdentifierDeclType	bool		5631505	0					
ANR	5631567	Identifier	continuing		5631505	1					
ANR	5631568	AssignmentExpression	"continuing = ( horiz ? t1_hinter__is_small_angle ( self , next , pole_index , 1 , 0 , alpha , 1 , & design_slant ) : t1_hinter__is_small_angle ( self , next , pole_index , 0 , 1 , alpha , 1 , & design_slant ) )"		5631505	2		=			
ANR	5631569	Identifier	continuing		5631505	0					
ANR	5631570	ConditionalExpression	"horiz ? t1_hinter__is_small_angle ( self , next , pole_index , 1 , 0 , alpha , 1 , & design_slant ) : t1_hinter__is_small_angle ( self , next , pole_index , 0 , 1 , alpha , 1 , & design_slant )"		5631505	1					
ANR	5631571	Condition	horiz		5631505	0					
ANR	5631572	Identifier	horiz		5631505	0					
ANR	5631573	CallExpression	"t1_hinter__is_small_angle ( self , next , pole_index , 1 , 0 , alpha , 1 , & design_slant )"		5631505	1					
ANR	5631574	Callee	t1_hinter__is_small_angle		5631505	0					
ANR	5631575	Identifier	t1_hinter__is_small_angle		5631505	0					
ANR	5631576	ArgumentList	self		5631505	1					
ANR	5631577	Argument	self		5631505	0					
ANR	5631578	Identifier	self		5631505	0					
ANR	5631579	Argument	next		5631505	1					
ANR	5631580	Identifier	next		5631505	0					
ANR	5631581	Argument	pole_index		5631505	2					
ANR	5631582	Identifier	pole_index		5631505	0					
ANR	5631583	Argument	1		5631505	3					
ANR	5631584	PrimaryExpression	1		5631505	0					
ANR	5631585	Argument	0		5631505	4					
ANR	5631586	PrimaryExpression	0		5631505	0					
ANR	5631587	Argument	alpha		5631505	5					
ANR	5631588	Identifier	alpha		5631505	0					
ANR	5631589	Argument	1		5631505	6					
ANR	5631590	PrimaryExpression	1		5631505	0					
ANR	5631591	Argument	& design_slant		5631505	7					
ANR	5631592	UnaryOperationExpression	& design_slant		5631505	0					
ANR	5631593	UnaryOperator	&		5631505	0					
ANR	5631594	Identifier	design_slant		5631505	1					
ANR	5631595	CallExpression	"t1_hinter__is_small_angle ( self , next , pole_index , 0 , 1 , alpha , 1 , & design_slant )"		5631505	2					
ANR	5631596	Callee	t1_hinter__is_small_angle		5631505	0					
ANR	5631597	Identifier	t1_hinter__is_small_angle		5631505	0					
ANR	5631598	ArgumentList	self		5631505	1					
ANR	5631599	Argument	self		5631505	0					
ANR	5631600	Identifier	self		5631505	0					
ANR	5631601	Argument	next		5631505	1					
ANR	5631602	Identifier	next		5631505	0					
ANR	5631603	Argument	pole_index		5631505	2					
ANR	5631604	Identifier	pole_index		5631505	0					
ANR	5631605	Argument	0		5631505	3					
ANR	5631606	PrimaryExpression	0		5631505	0					
ANR	5631607	Argument	1		5631505	4					
ANR	5631608	PrimaryExpression	1		5631505	0					
ANR	5631609	Argument	alpha		5631505	5					
ANR	5631610	Identifier	alpha		5631505	0					
ANR	5631611	Argument	1		5631505	6					
ANR	5631612	PrimaryExpression	1		5631505	0					
ANR	5631613	Argument	& design_slant		5631505	7					
ANR	5631614	UnaryOperationExpression	& design_slant		5631505	0					
ANR	5631615	UnaryOperator	&		5631505	0					
ANR	5631616	Identifier	design_slant		5631505	1					
ANR	5631617	IfStatement	if ( ! PRESERVE_STEM_SLANT || design_slant == 0 )		5631505	5					
ANR	5631618	Condition	! PRESERVE_STEM_SLANT || design_slant == 0	2128:12:86744:86784	5631505	0	True				
ANR	5631619	OrExpression	! PRESERVE_STEM_SLANT || design_slant == 0		5631505	0		||			
ANR	5631620	UnaryOperationExpression	! PRESERVE_STEM_SLANT		5631505	0					
ANR	5631621	UnaryOperator	!		5631505	0					
ANR	5631622	Identifier	PRESERVE_STEM_SLANT		5631505	1					
ANR	5631623	EqualityExpression	design_slant == 0		5631505	1		==			
ANR	5631624	Identifier	design_slant		5631505	0					
ANR	5631625	PrimaryExpression	0		5631505	1					
ANR	5631626	ExpressionStatement	* t = ( ! curve && continuing ? fixed_half : 0 )	2129:12:86799:86843	5631505	1	True				
ANR	5631627	AssignmentExpression	* t = ( ! curve && continuing ? fixed_half : 0 )		5631505	0		=			
ANR	5631628	UnaryOperationExpression	* t		5631505	0					
ANR	5631629	UnaryOperator	*		5631505	0					
ANR	5631630	Identifier	t		5631505	1					
ANR	5631631	ConditionalExpression	! curve && continuing ? fixed_half : 0		5631505	1					
ANR	5631632	Condition	! curve && continuing		5631505	0					
ANR	5631633	AndExpression	! curve && continuing		5631505	0		&&			
ANR	5631634	UnaryOperationExpression	! curve		5631505	0					
ANR	5631635	UnaryOperator	!		5631505	0					
ANR	5631636	Identifier	curve		5631505	1					
ANR	5631637	Identifier	continuing		5631505	1					
ANR	5631638	Identifier	fixed_half		5631505	1					
ANR	5631639	PrimaryExpression	0		5631505	2					
ANR	5631640	ElseStatement	else		5631505	0					
ANR	5631641	ExpressionStatement	* t = 0	2131:12:86870:86876	5631505	0	True				
ANR	5631642	AssignmentExpression	* t = 0		5631505	0		=			
ANR	5631643	UnaryOperationExpression	* t		5631505	0					
ANR	5631644	UnaryOperator	*		5631505	0					
ANR	5631645	Identifier	t		5631505	1					
ANR	5631646	PrimaryExpression	0		5631505	1					
ANR	5631647	ReturnStatement	return pole_index ;	2132:8:86886:86903	5631505	6	True				
ANR	5631648	Identifier	pole_index		5631505	0					
ANR	5631649	ReturnType	static int		5631505	1					
ANR	5631650	Identifier	t1_hinter__find_stem_middle		5631505	2					
ANR	5631651	ParameterList	"t1_hinter * self , fixed * t , int pole_index , bool horiz"		5631505	3					
ANR	5631652	Parameter	t1_hinter * self	2107:39:85668:85683	5631505	0	True				
ANR	5631653	ParameterType	t1_hinter *		5631505	0					
ANR	5631654	Identifier	self		5631505	1					
ANR	5631655	Parameter	fixed * t	2107:57:85686:85693	5631505	1	True				
ANR	5631656	ParameterType	fixed *		5631505	0					
ANR	5631657	Identifier	t		5631505	1					
ANR	5631658	Parameter	int pole_index	2107:67:85696:85709	5631505	2	True				
ANR	5631659	ParameterType	int		5631505	0					
ANR	5631660	Identifier	pole_index		5631505	1					
ANR	5631661	Parameter	bool horiz	2107:83:85712:85721	5631505	3	True				
ANR	5631662	ParameterType	bool		5631505	0					
ANR	5631663	Identifier	horiz		5631505	1					
ANR	5631664	CFGEntryNode	ENTRY		5631505		True				
ANR	5631665	CFGExitNode	EXIT		5631505		True				
ANR	5631666	Symbol	next		5631505						
ANR	5631667	Symbol	t1_hinter__is_small_angle		5631505						
ANR	5631668	Symbol	& design_slant		5631505						
ANR	5631669	Symbol	t1_hinter__next_contour_pole		5631505						
ANR	5631670	Symbol	* self -> pole		5631505						
ANR	5631671	Symbol	curve		5631505						
ANR	5631672	Symbol	* * self		5631505						
ANR	5631673	Symbol	* self		5631505						
ANR	5631674	Symbol	* next		5631505						
ANR	5631675	Symbol	self -> pole [ next ] . type		5631505						
ANR	5631676	Symbol	PRESERVE_STEM_SLANT		5631505						
ANR	5631677	Symbol	horiz		5631505						
ANR	5631678	Symbol	pole_index		5631505						
ANR	5631679	Symbol	t		5631505						
ANR	5631680	Symbol	design_slant		5631505						
ANR	5631681	Symbol	offcurve		5631505						
ANR	5631682	Symbol	alpha		5631505						
ANR	5631683	Symbol	self		5631505						
ANR	5631684	Symbol	fixed_half		5631505						
ANR	5631685	Symbol	self -> pole		5631505						
ANR	5631686	Symbol	continuing		5631505						
ANR	5631687	Symbol	* t		5631505						
ANR	5631688	Function	t1_hinter__skip_stem	2136:0:86914:87827							
ANR	5631689	FunctionDef	"t1_hinter__skip_stem (t1_hinter * self , int pole_index , bool horiz)"		5631688	0					
ANR	5631690	CompoundStatement		2137:0:86992:87827	5631688	0					
ANR	5631691	IdentifierDeclStatement	int i = pole_index ;	2138:4:87059:87077	5631688	0	True				
ANR	5631692	IdentifierDecl	i = pole_index		5631688	0					
ANR	5631693	IdentifierDeclType	int		5631688	0					
ANR	5631694	Identifier	i		5631688	1					
ANR	5631695	AssignmentExpression	i = pole_index		5631688	2		=			
ANR	5631696	Identifier	pole_index		5631688	0					
ANR	5631697	Identifier	pole_index		5631688	1					
ANR	5631698	IdentifierDeclStatement	"int next_pole = t1_hinter__next_contour_pole ( self , i ) ;"	2139:4:87083:87136	5631688	1	True				
ANR	5631699	IdentifierDecl	"next_pole = t1_hinter__next_contour_pole ( self , i )"		5631688	0					
ANR	5631700	IdentifierDeclType	int		5631688	0					
ANR	5631701	Identifier	next_pole		5631688	1					
ANR	5631702	AssignmentExpression	"next_pole = t1_hinter__next_contour_pole ( self , i )"		5631688	2		=			
ANR	5631703	Identifier	next_pole		5631688	0					
ANR	5631704	CallExpression	"t1_hinter__next_contour_pole ( self , i )"		5631688	1					
ANR	5631705	Callee	t1_hinter__next_contour_pole		5631688	0					
ANR	5631706	Identifier	t1_hinter__next_contour_pole		5631688	0					
ANR	5631707	ArgumentList	self		5631688	1					
ANR	5631708	Argument	self		5631688	0					
ANR	5631709	Identifier	self		5631688	0					
ANR	5631710	Argument	i		5631688	1					
ANR	5631711	Identifier	i		5631688	0					
ANR	5631712	IdentifierDeclStatement	"int next_segm = t1_hinter__segment_end ( self , i ) ;"	2140:4:87142:87189	5631688	2	True				
ANR	5631713	IdentifierDecl	"next_segm = t1_hinter__segment_end ( self , i )"		5631688	0					
ANR	5631714	IdentifierDeclType	int		5631688	0					
ANR	5631715	Identifier	next_segm		5631688	1					
ANR	5631716	AssignmentExpression	"next_segm = t1_hinter__segment_end ( self , i )"		5631688	2		=			
ANR	5631717	Identifier	next_segm		5631688	0					
ANR	5631718	CallExpression	"t1_hinter__segment_end ( self , i )"		5631688	1					
ANR	5631719	Callee	t1_hinter__segment_end		5631688	0					
ANR	5631720	Identifier	t1_hinter__segment_end		5631688	0					
ANR	5631721	ArgumentList	self		5631688	1					
ANR	5631722	Argument	self		5631688	0					
ANR	5631723	Identifier	self		5631688	0					
ANR	5631724	Argument	i		5631688	1					
ANR	5631725	Identifier	i		5631688	0					
ANR	5631726	IdentifierDeclStatement	long tan_x = ( horiz ? 1 : 0 ) ;	2141:4:87195:87223	5631688	3	True				
ANR	5631727	IdentifierDecl	tan_x = ( horiz ? 1 : 0 )		5631688	0					
ANR	5631728	IdentifierDeclType	long		5631688	0					
ANR	5631729	Identifier	tan_x		5631688	1					
ANR	5631730	AssignmentExpression	tan_x = ( horiz ? 1 : 0 )		5631688	2		=			
ANR	5631731	Identifier	tan_x		5631688	0					
ANR	5631732	ConditionalExpression	horiz ? 1 : 0		5631688	1					
ANR	5631733	Condition	horiz		5631688	0					
ANR	5631734	Identifier	horiz		5631688	0					
ANR	5631735	PrimaryExpression	1		5631688	1					
ANR	5631736	PrimaryExpression	0		5631688	2					
ANR	5631737	IdentifierDeclStatement	long tan_y = ( horiz ? 0 : 1 ) ;	2142:4:87229:87257	5631688	4	True				
ANR	5631738	IdentifierDecl	tan_y = ( horiz ? 0 : 1 )		5631688	0					
ANR	5631739	IdentifierDeclType	long		5631688	0					
ANR	5631740	Identifier	tan_y		5631688	1					
ANR	5631741	AssignmentExpression	tan_y = ( horiz ? 0 : 1 )		5631688	2		=			
ANR	5631742	Identifier	tan_y		5631688	0					
ANR	5631743	ConditionalExpression	horiz ? 0 : 1		5631688	1					
ANR	5631744	Condition	horiz		5631688	0					
ANR	5631745	Identifier	horiz		5631688	0					
ANR	5631746	PrimaryExpression	0		5631688	1					
ANR	5631747	PrimaryExpression	1		5631688	2					
ANR	5631748	IdentifierDeclStatement	int quality ;	2143:4:87263:87274	5631688	5	True				
ANR	5631749	IdentifierDecl	quality		5631688	0					
ANR	5631750	IdentifierDeclType	int		5631688	0					
ANR	5631751	Identifier	quality		5631688	1					
ANR	5631752	WhileStatement	"while ( t1_hinter__is_small_angle ( self , i , next_pole , tan_x , tan_y , 1000 , 1 , & quality ) && t1_hinter__is_small_angle ( self , i , next_segm , tan_x , tan_y , 1000 , 1 , & quality ) )"		5631688	6					
ANR	5631753	Condition	"t1_hinter__is_small_angle ( self , i , next_pole , tan_x , tan_y , 1000 , 1 , & quality ) && t1_hinter__is_small_angle ( self , i , next_segm , tan_x , tan_y , 1000 , 1 , & quality )"	2145:11:87288:87501	5631688	0	True				
ANR	5631754	AndExpression	"t1_hinter__is_small_angle ( self , i , next_pole , tan_x , tan_y , 1000 , 1 , & quality ) && t1_hinter__is_small_angle ( self , i , next_segm , tan_x , tan_y , 1000 , 1 , & quality )"		5631688	0		&&			
ANR	5631755	CallExpression	"t1_hinter__is_small_angle ( self , i , next_pole , tan_x , tan_y , 1000 , 1 , & quality )"		5631688	0					
ANR	5631756	Callee	t1_hinter__is_small_angle		5631688	0					
ANR	5631757	Identifier	t1_hinter__is_small_angle		5631688	0					
ANR	5631758	ArgumentList	self		5631688	1					
ANR	5631759	Argument	self		5631688	0					
ANR	5631760	Identifier	self		5631688	0					
ANR	5631761	Argument	i		5631688	1					
ANR	5631762	Identifier	i		5631688	0					
ANR	5631763	Argument	next_pole		5631688	2					
ANR	5631764	Identifier	next_pole		5631688	0					
ANR	5631765	Argument	tan_x		5631688	3					
ANR	5631766	Identifier	tan_x		5631688	0					
ANR	5631767	Argument	tan_y		5631688	4					
ANR	5631768	Identifier	tan_y		5631688	0					
ANR	5631769	Argument	1000		5631688	5					
ANR	5631770	PrimaryExpression	1000		5631688	0					
ANR	5631771	Argument	1		5631688	6					
ANR	5631772	PrimaryExpression	1		5631688	0					
ANR	5631773	Argument	& quality		5631688	7					
ANR	5631774	UnaryOperationExpression	& quality		5631688	0					
ANR	5631775	UnaryOperator	&		5631688	0					
ANR	5631776	Identifier	quality		5631688	1					
ANR	5631777	CallExpression	"t1_hinter__is_small_angle ( self , i , next_segm , tan_x , tan_y , 1000 , 1 , & quality )"		5631688	1					
ANR	5631778	Callee	t1_hinter__is_small_angle		5631688	0					
ANR	5631779	Identifier	t1_hinter__is_small_angle		5631688	0					
ANR	5631780	ArgumentList	self		5631688	1					
ANR	5631781	Argument	self		5631688	0					
ANR	5631782	Identifier	self		5631688	0					
ANR	5631783	Argument	i		5631688	1					
ANR	5631784	Identifier	i		5631688	0					
ANR	5631785	Argument	next_segm		5631688	2					
ANR	5631786	Identifier	next_segm		5631688	0					
ANR	5631787	Argument	tan_x		5631688	3					
ANR	5631788	Identifier	tan_x		5631688	0					
ANR	5631789	Argument	tan_y		5631688	4					
ANR	5631790	Identifier	tan_y		5631688	0					
ANR	5631791	Argument	1000		5631688	5					
ANR	5631792	PrimaryExpression	1000		5631688	0					
ANR	5631793	Argument	1		5631688	6					
ANR	5631794	PrimaryExpression	1		5631688	0					
ANR	5631795	Argument	& quality		5631688	7					
ANR	5631796	UnaryOperationExpression	& quality		5631688	0					
ANR	5631797	UnaryOperator	&		5631688	0					
ANR	5631798	Identifier	quality		5631688	1					
ANR	5631799	CompoundStatement		10:91:511:511	5631688	1					
ANR	5631800	ExpressionStatement	"i = t1_hinter__segment_end ( self , i )"	2147:8:87514:87549	5631688	0	True				
ANR	5631801	AssignmentExpression	"i = t1_hinter__segment_end ( self , i )"		5631688	0		=			
ANR	5631802	Identifier	i		5631688	0					
ANR	5631803	CallExpression	"t1_hinter__segment_end ( self , i )"		5631688	1					
ANR	5631804	Callee	t1_hinter__segment_end		5631688	0					
ANR	5631805	Identifier	t1_hinter__segment_end		5631688	0					
ANR	5631806	ArgumentList	self		5631688	1					
ANR	5631807	Argument	self		5631688	0					
ANR	5631808	Identifier	self		5631688	0					
ANR	5631809	Argument	i		5631688	1					
ANR	5631810	Identifier	i		5631688	0					
ANR	5631811	IfStatement	if ( i == pole_index )		5631688	1					
ANR	5631812	Condition	i == pole_index	2148:12:87563:87577	5631688	0	True				
ANR	5631813	EqualityExpression	i == pole_index		5631688	0		==			
ANR	5631814	Identifier	i		5631688	0					
ANR	5631815	Identifier	pole_index		5631688	1					
ANR	5631816	CompoundStatement		12:29:587:587	5631688	1					
ANR	5631817	BreakStatement	break ;	2150:12:87678:87683	5631688	0	True				
ANR	5631818	ExpressionStatement	"next_pole = t1_hinter__next_contour_pole ( self , i )"	2152:8:87703:87752	5631688	2	True				
ANR	5631819	AssignmentExpression	"next_pole = t1_hinter__next_contour_pole ( self , i )"		5631688	0		=			
ANR	5631820	Identifier	next_pole		5631688	0					
ANR	5631821	CallExpression	"t1_hinter__next_contour_pole ( self , i )"		5631688	1					
ANR	5631822	Callee	t1_hinter__next_contour_pole		5631688	0					
ANR	5631823	Identifier	t1_hinter__next_contour_pole		5631688	0					
ANR	5631824	ArgumentList	self		5631688	1					
ANR	5631825	Argument	self		5631688	0					
ANR	5631826	Identifier	self		5631688	0					
ANR	5631827	Argument	i		5631688	1					
ANR	5631828	Identifier	i		5631688	0					
ANR	5631829	ExpressionStatement	"next_segm = t1_hinter__segment_end ( self , i )"	2153:8:87762:87805	5631688	3	True				
ANR	5631830	AssignmentExpression	"next_segm = t1_hinter__segment_end ( self , i )"		5631688	0		=			
ANR	5631831	Identifier	next_segm		5631688	0					
ANR	5631832	CallExpression	"t1_hinter__segment_end ( self , i )"		5631688	1					
ANR	5631833	Callee	t1_hinter__segment_end		5631688	0					
ANR	5631834	Identifier	t1_hinter__segment_end		5631688	0					
ANR	5631835	ArgumentList	self		5631688	1					
ANR	5631836	Argument	self		5631688	0					
ANR	5631837	Identifier	self		5631688	0					
ANR	5631838	Argument	i		5631688	1					
ANR	5631839	Identifier	i		5631688	0					
ANR	5631840	ReturnStatement	return i ;	2155:4:87817:87825	5631688	7	True				
ANR	5631841	Identifier	i		5631688	0					
ANR	5631842	ReturnType	static int		5631688	1					
ANR	5631843	Identifier	t1_hinter__skip_stem		5631688	2					
ANR	5631844	ParameterList	"t1_hinter * self , int pole_index , bool horiz"		5631688	3					
ANR	5631845	Parameter	t1_hinter * self	2136:32:86946:86961	5631688	0	True				
ANR	5631846	ParameterType	t1_hinter *		5631688	0					
ANR	5631847	Identifier	self		5631688	1					
ANR	5631848	Parameter	int pole_index	2136:50:86964:86977	5631688	1	True				
ANR	5631849	ParameterType	int		5631688	0					
ANR	5631850	Identifier	pole_index		5631688	1					
ANR	5631851	Parameter	bool horiz	2136:66:86980:86989	5631688	2	True				
ANR	5631852	ParameterType	bool		5631688	0					
ANR	5631853	Identifier	horiz		5631688	1					
ANR	5631854	CFGEntryNode	ENTRY		5631688		True				
ANR	5631855	CFGExitNode	EXIT		5631688		True				
ANR	5631856	Symbol	t1_hinter__is_small_angle		5631688						
ANR	5631857	Symbol	t1_hinter__next_contour_pole		5631688						
ANR	5631858	Symbol	next_segm		5631688						
ANR	5631859	Symbol	i		5631688						
ANR	5631860	Symbol	tan_x		5631688						
ANR	5631861	Symbol	tan_y		5631688						
ANR	5631862	Symbol	next_pole		5631688						
ANR	5631863	Symbol	quality		5631688						
ANR	5631864	Symbol	horiz		5631688						
ANR	5631865	Symbol	pole_index		5631688						
ANR	5631866	Symbol	t1_hinter__segment_end		5631688						
ANR	5631867	Symbol	self		5631688						
ANR	5631868	Symbol	& quality		5631688						
ANR	5631869	Function	t1_hinter__mark_existing_stems	2158:0:87830:89434							
ANR	5631870	FunctionDef	t1_hinter__mark_existing_stems (t1_hinter * self)		5631869	0					
ANR	5631871	CompoundStatement		2159:0:87891:89434	5631869	0					
ANR	5631872	IdentifierDeclStatement	"int i , j , jj , k ;"	2160:4:87965:87980	5631869	0	True				
ANR	5631873	IdentifierDecl	i		5631869	0					
ANR	5631874	IdentifierDeclType	int		5631869	0					
ANR	5631875	Identifier	i		5631869	1					
ANR	5631876	IdentifierDecl	j		5631869	1					
ANR	5631877	IdentifierDeclType	int		5631869	0					
ANR	5631878	Identifier	j		5631869	1					
ANR	5631879	IdentifierDecl	jj		5631869	2					
ANR	5631880	IdentifierDeclType	int		5631869	0					
ANR	5631881	Identifier	jj		5631869	1					
ANR	5631882	IdentifierDecl	k		5631869	3					
ANR	5631883	IdentifierDeclType	int		5631869	0					
ANR	5631884	Identifier	k		5631869	1					
ANR	5631885	ForStatement	for ( i = 0 ; i < self -> hint_count ; i ++ )		5631869	1					
ANR	5631886	ForInit	i = 0 ;	2162:8:87991:87996	5631869	0	True				
ANR	5631887	AssignmentExpression	i = 0		5631869	0		=			
ANR	5631888	Identifier	i		5631869	0					
ANR	5631889	PrimaryExpression	0		5631869	1					
ANR	5631890	Condition	i < self -> hint_count	2162:15:87998:88017	5631869	1	True				
ANR	5631891	RelationalExpression	i < self -> hint_count		5631869	0		<			
ANR	5631892	Identifier	i		5631869	0					
ANR	5631893	PtrMemberAccess	self -> hint_count		5631869	1					
ANR	5631894	Identifier	self		5631869	0					
ANR	5631895	Identifier	hint_count		5631869	1					
ANR	5631896	PostIncDecOperationExpression	i ++	2162:37:88020:88022	5631869	2	True				
ANR	5631897	Identifier	i		5631869	0					
ANR	5631898	IncDec	++		5631869	1					
ANR	5631899	IfStatement	if ( self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem )		5631869	3					
ANR	5631900	Condition	self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem	2163:12:88037:88094	5631869	0	True				
ANR	5631901	OrExpression	self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem		5631869	0		||			
ANR	5631902	EqualityExpression	self -> hint [ i ] . type == vstem		5631869	0		==			
ANR	5631903	MemberAccess	self -> hint [ i ] . type		5631869	0					
ANR	5631904	ArrayIndexing	self -> hint [ i ]		5631869	0					
ANR	5631905	PtrMemberAccess	self -> hint		5631869	0					
ANR	5631906	Identifier	self		5631869	0					
ANR	5631907	Identifier	hint		5631869	1					
ANR	5631908	Identifier	i		5631869	1					
ANR	5631909	Identifier	type		5631869	1					
ANR	5631910	Identifier	vstem		5631869	1					
ANR	5631911	EqualityExpression	self -> hint [ i ] . type == hstem		5631869	1		==			
ANR	5631912	MemberAccess	self -> hint [ i ] . type		5631869	0					
ANR	5631913	ArrayIndexing	self -> hint [ i ]		5631869	0					
ANR	5631914	PtrMemberAccess	self -> hint		5631869	0					
ANR	5631915	Identifier	self		5631869	0					
ANR	5631916	Identifier	hint		5631869	1					
ANR	5631917	Identifier	i		5631869	1					
ANR	5631918	Identifier	type		5631869	1					
ANR	5631919	Identifier	hstem		5631869	1					
ANR	5631920	ForStatement	for ( k = self -> hint [ i ] . range_index ; k != - 1 ; k = self -> hint_range [ k ] . next )		5631869	1					
ANR	5631921	ForInit	k = self -> hint [ i ] . range_index ;	2164:17:88114:88143	5631869	0	True				
ANR	5631922	AssignmentExpression	k = self -> hint [ i ] . range_index		5631869	0		=			
ANR	5631923	Identifier	k		5631869	0					
ANR	5631924	MemberAccess	self -> hint [ i ] . range_index		5631869	1					
ANR	5631925	ArrayIndexing	self -> hint [ i ]		5631869	0					
ANR	5631926	PtrMemberAccess	self -> hint		5631869	0					
ANR	5631927	Identifier	self		5631869	0					
ANR	5631928	Identifier	hint		5631869	1					
ANR	5631929	Identifier	i		5631869	1					
ANR	5631930	Identifier	range_index		5631869	1					
ANR	5631931	Condition	k != - 1	2164:48:88145:88151	5631869	1	True				
ANR	5631932	EqualityExpression	k != - 1		5631869	0		!=			
ANR	5631933	Identifier	k		5631869	0					
ANR	5631934	UnaryOperationExpression	- 1		5631869	1					
ANR	5631935	UnaryOperator	-		5631869	0					
ANR	5631936	PrimaryExpression	1		5631869	1					
ANR	5631937	AssignmentExpression	k = self -> hint_range [ k ] . next	2164:57:88154:88181	5631869	2	True	=			
ANR	5631938	Identifier	k		5631869	0					
ANR	5631939	MemberAccess	self -> hint_range [ k ] . next		5631869	1					
ANR	5631940	ArrayIndexing	self -> hint_range [ k ]		5631869	0					
ANR	5631941	PtrMemberAccess	self -> hint_range		5631869	0					
ANR	5631942	Identifier	self		5631869	0					
ANR	5631943	Identifier	hint_range		5631869	1					
ANR	5631944	Identifier	k		5631869	1					
ANR	5631945	Identifier	next		5631869	1					
ANR	5631946	CompoundStatement		9:16:444:455	5631869	3					
ANR	5631947	IdentifierDeclStatement	int beg_range_pole = self -> hint_range [ k ] . beg_pole ;	2165:16:88202:88251	5631869	0	True				
ANR	5631948	IdentifierDecl	beg_range_pole = self -> hint_range [ k ] . beg_pole		5631869	0					
ANR	5631949	IdentifierDeclType	int		5631869	0					
ANR	5631950	Identifier	beg_range_pole		5631869	1					
ANR	5631951	AssignmentExpression	beg_range_pole = self -> hint_range [ k ] . beg_pole		5631869	2		=			
ANR	5631952	Identifier	beg_range_pole		5631869	0					
ANR	5631953	MemberAccess	self -> hint_range [ k ] . beg_pole		5631869	1					
ANR	5631954	ArrayIndexing	self -> hint_range [ k ]		5631869	0					
ANR	5631955	PtrMemberAccess	self -> hint_range		5631869	0					
ANR	5631956	Identifier	self		5631869	0					
ANR	5631957	Identifier	hint_range		5631869	1					
ANR	5631958	Identifier	k		5631869	1					
ANR	5631959	Identifier	beg_pole		5631869	1					
ANR	5631960	IdentifierDeclStatement	int end_range_pole = self -> hint_range [ k ] . end_pole ;	2166:16:88269:88318	5631869	1	True				
ANR	5631961	IdentifierDecl	end_range_pole = self -> hint_range [ k ] . end_pole		5631869	0					
ANR	5631962	IdentifierDeclType	int		5631869	0					
ANR	5631963	Identifier	end_range_pole		5631869	1					
ANR	5631964	AssignmentExpression	end_range_pole = self -> hint_range [ k ] . end_pole		5631869	2		=			
ANR	5631965	Identifier	end_range_pole		5631869	0					
ANR	5631966	MemberAccess	self -> hint_range [ k ] . end_pole		5631869	1					
ANR	5631967	ArrayIndexing	self -> hint_range [ k ]		5631869	0					
ANR	5631968	PtrMemberAccess	self -> hint_range		5631869	0					
ANR	5631969	Identifier	self		5631869	0					
ANR	5631970	Identifier	hint_range		5631869	1					
ANR	5631971	Identifier	k		5631869	1					
ANR	5631972	Identifier	end_pole		5631869	1					
ANR	5631973	IdentifierDeclStatement	int quality ;	2167:16:88336:88347	5631869	2	True				
ANR	5631974	IdentifierDecl	quality		5631869	0					
ANR	5631975	IdentifierDeclType	int		5631869	0					
ANR	5631976	Identifier	quality		5631869	1					
ANR	5631977	IfStatement	if ( self -> pole [ beg_range_pole ] . type == closepath )		5631869	3					
ANR	5631978	Condition	self -> pole [ beg_range_pole ] . type == closepath	2169:20:88370:88413	5631869	0	True				
ANR	5631979	EqualityExpression	self -> pole [ beg_range_pole ] . type == closepath		5631869	0		==			
ANR	5631980	MemberAccess	self -> pole [ beg_range_pole ] . type		5631869	0					
ANR	5631981	ArrayIndexing	self -> pole [ beg_range_pole ]		5631869	0					
ANR	5631982	PtrMemberAccess	self -> pole		5631869	0					
ANR	5631983	Identifier	self		5631869	0					
ANR	5631984	Identifier	pole		5631869	1					
ANR	5631985	Identifier	beg_range_pole		5631869	1					
ANR	5631986	Identifier	type		5631869	1					
ANR	5631987	Identifier	closepath		5631869	1					
ANR	5631988	CompoundStatement		11:66:524:524	5631869	1					
ANR	5631989	ExpressionStatement	beg_range_pole ++	2172:20:88583:88599	5631869	0	True				
ANR	5631990	PostIncDecOperationExpression	beg_range_pole ++		5631869	0					
ANR	5631991	Identifier	beg_range_pole		5631869	0					
ANR	5631992	IncDec	++		5631869	1					
ANR	5631993	IfStatement	if ( beg_range_pole > end_range_pole )		5631869	1					
ANR	5631994	Condition	beg_range_pole > end_range_pole	2173:24:88625:88655	5631869	0	True				
ANR	5631995	RelationalExpression	beg_range_pole > end_range_pole		5631869	0		>			
ANR	5631996	Identifier	beg_range_pole		5631869	0					
ANR	5631997	Identifier	end_range_pole		5631869	1					
ANR	5631998	ContinueStatement	continue ;	2174:24:88682:88690	5631869	1	True				
ANR	5631999	ForStatement	for ( j = beg_range_pole ; j <= end_range_pole ; )		5631869	4					
ANR	5632000	ForInit	j = beg_range_pole ;	2176:21:88731:88749	5631869	0	True				
ANR	5632001	AssignmentExpression	j = beg_range_pole		5631869	0		=			
ANR	5632002	Identifier	j		5631869	0					
ANR	5632003	Identifier	beg_range_pole		5631869	1					
ANR	5632004	Condition	j <= end_range_pole	2176:41:88751:88769	5631869	1	True				
ANR	5632005	RelationalExpression	j <= end_range_pole		5631869	0		<=			
ANR	5632006	Identifier	j		5631869	0					
ANR	5632007	Identifier	end_range_pole		5631869	1					
ANR	5632008	CompoundStatement		19:20:903:980	5631869	2					
ANR	5632009	IdentifierDeclStatement	"int k = t1_hinter__is_stem_hint_applicable ( self , & self -> hint [ i ] , j , & quality ) ;"	2177:20:88795:88872	5631869	0	True				
ANR	5632010	IdentifierDecl	"k = t1_hinter__is_stem_hint_applicable ( self , & self -> hint [ i ] , j , & quality )"		5631869	0					
ANR	5632011	IdentifierDeclType	int		5631869	0					
ANR	5632012	Identifier	k		5631869	1					
ANR	5632013	AssignmentExpression	"k = t1_hinter__is_stem_hint_applicable ( self , & self -> hint [ i ] , j , & quality )"		5631869	2		=			
ANR	5632014	Identifier	k		5631869	0					
ANR	5632015	CallExpression	"t1_hinter__is_stem_hint_applicable ( self , & self -> hint [ i ] , j , & quality )"		5631869	1					
ANR	5632016	Callee	t1_hinter__is_stem_hint_applicable		5631869	0					
ANR	5632017	Identifier	t1_hinter__is_stem_hint_applicable		5631869	0					
ANR	5632018	ArgumentList	self		5631869	1					
ANR	5632019	Argument	self		5631869	0					
ANR	5632020	Identifier	self		5631869	0					
ANR	5632021	Argument	& self -> hint [ i ]		5631869	1					
ANR	5632022	UnaryOperationExpression	& self -> hint [ i ]		5631869	0					
ANR	5632023	UnaryOperator	&		5631869	0					
ANR	5632024	ArrayIndexing	self -> hint [ i ]		5631869	1					
ANR	5632025	PtrMemberAccess	self -> hint		5631869	0					
ANR	5632026	Identifier	self		5631869	0					
ANR	5632027	Identifier	hint		5631869	1					
ANR	5632028	Identifier	i		5631869	1					
ANR	5632029	Argument	j		5631869	2					
ANR	5632030	Identifier	j		5631869	0					
ANR	5632031	Argument	& quality		5631869	3					
ANR	5632032	UnaryOperationExpression	& quality		5631869	0					
ANR	5632033	UnaryOperator	&		5631869	0					
ANR	5632034	Identifier	quality		5631869	1					
ANR	5632035	IfStatement	if ( k == 1 )		5631869	1					
ANR	5632036	Condition	k == 1	2178:24:88898:88903	5631869	0	True				
ANR	5632037	EqualityExpression	k == 1		5631869	0		==			
ANR	5632038	Identifier	k		5631869	0					
ANR	5632039	PrimaryExpression	1		5631869	1					
ANR	5632040	ExpressionStatement	self -> hint [ i ] . b0 = true	2179:24:88930:88953	5631869	1	True				
ANR	5632041	AssignmentExpression	self -> hint [ i ] . b0 = true		5631869	0		=			
ANR	5632042	MemberAccess	self -> hint [ i ] . b0		5631869	0					
ANR	5632043	ArrayIndexing	self -> hint [ i ]		5631869	0					
ANR	5632044	PtrMemberAccess	self -> hint		5631869	0					
ANR	5632045	Identifier	self		5631869	0					
ANR	5632046	Identifier	hint		5631869	1					
ANR	5632047	Identifier	i		5631869	1					
ANR	5632048	Identifier	b0		5631869	1					
ANR	5632049	Identifier	true		5631869	1					
ANR	5632050	ElseStatement	else		5631869	0					
ANR	5632051	IfStatement	if ( k == 2 )		5631869	0					
ANR	5632052	Condition	k == 2	2180:29:88984:88989	5631869	0	True				
ANR	5632053	EqualityExpression	k == 2		5631869	0		==			
ANR	5632054	Identifier	k		5631869	0					
ANR	5632055	PrimaryExpression	2		5631869	1					
ANR	5632056	ExpressionStatement	self -> hint [ i ] . b1 = true	2181:24:89016:89039	5631869	1	True				
ANR	5632057	AssignmentExpression	self -> hint [ i ] . b1 = true		5631869	0		=			
ANR	5632058	MemberAccess	self -> hint [ i ] . b1		5631869	0					
ANR	5632059	ArrayIndexing	self -> hint [ i ]		5631869	0					
ANR	5632060	PtrMemberAccess	self -> hint		5631869	0					
ANR	5632061	Identifier	self		5631869	0					
ANR	5632062	Identifier	hint		5631869	1					
ANR	5632063	Identifier	i		5631869	1					
ANR	5632064	Identifier	b1		5631869	1					
ANR	5632065	Identifier	true		5631869	1					
ANR	5632066	CompoundStatement		24:20:1169:1169	5631869	2					
ANR	5632067	ExpressionStatement	jj = j	2183:24:89132:89138	5631869	0	True				
ANR	5632068	AssignmentExpression	jj = j		5631869	0		=			
ANR	5632069	Identifier	jj		5631869	0					
ANR	5632070	Identifier	j		5631869	1					
ANR	5632071	ExpressionStatement	"j = t1_hinter__segment_end ( self , j )"	2184:24:89164:89199	5631869	1	True				
ANR	5632072	AssignmentExpression	"j = t1_hinter__segment_end ( self , j )"		5631869	0		=			
ANR	5632073	Identifier	j		5631869	0					
ANR	5632074	CallExpression	"t1_hinter__segment_end ( self , j )"		5631869	1					
ANR	5632075	Callee	t1_hinter__segment_end		5631869	0					
ANR	5632076	Identifier	t1_hinter__segment_end		5631869	0					
ANR	5632077	ArgumentList	self		5631869	1					
ANR	5632078	Argument	self		5631869	0					
ANR	5632079	Identifier	self		5631869	0					
ANR	5632080	Argument	j		5631869	1					
ANR	5632081	Identifier	j		5631869	0					
ANR	5632082	IfStatement	if ( j <= jj )		5631869	2					
ANR	5632083	Condition	j <= jj	2185:28:89229:89235	5631869	0	True				
ANR	5632084	RelationalExpression	j <= jj		5631869	0		<=			
ANR	5632085	Identifier	j		5631869	0					
ANR	5632086	Identifier	jj		5631869	1					
ANR	5632087	ExpressionStatement	j = self -> contour [ self -> pole [ j ] . contour_index + 1 ]	2186:28:89298:89348	5631869	1	True				
ANR	5632088	AssignmentExpression	j = self -> contour [ self -> pole [ j ] . contour_index + 1 ]		5631869	0		=			
ANR	5632089	Identifier	j		5631869	0					
ANR	5632090	ArrayIndexing	self -> contour [ self -> pole [ j ] . contour_index + 1 ]		5631869	1					
ANR	5632091	PtrMemberAccess	self -> contour		5631869	0					
ANR	5632092	Identifier	self		5631869	0					
ANR	5632093	Identifier	contour		5631869	1					
ANR	5632094	AdditiveExpression	self -> pole [ j ] . contour_index + 1		5631869	1		+			
ANR	5632095	MemberAccess	self -> pole [ j ] . contour_index		5631869	0					
ANR	5632096	ArrayIndexing	self -> pole [ j ]		5631869	0					
ANR	5632097	PtrMemberAccess	self -> pole		5631869	0					
ANR	5632098	Identifier	self		5631869	0					
ANR	5632099	Identifier	pole		5631869	1					
ANR	5632100	Identifier	j		5631869	1					
ANR	5632101	Identifier	contour_index		5631869	1					
ANR	5632102	PrimaryExpression	1		5631869	1					
ANR	5632103	ReturnType	static void		5631869	1					
ANR	5632104	Identifier	t1_hinter__mark_existing_stems		5631869	2					
ANR	5632105	ParameterList	t1_hinter * self		5631869	3					
ANR	5632106	Parameter	t1_hinter * self	2158:43:87873:87888	5631869	0	True				
ANR	5632107	ParameterType	t1_hinter *		5631869	0					
ANR	5632108	Identifier	self		5631869	1					
ANR	5632109	CFGEntryNode	ENTRY		5631869		True				
ANR	5632110	CFGExitNode	EXIT		5631869		True				
ANR	5632111	Symbol	jj		5631869						
ANR	5632112	Symbol	self -> hint_range [ k ] . next		5631869						
ANR	5632113	Symbol	end_range_pole		5631869						
ANR	5632114	Symbol	* self -> pole		5631869						
ANR	5632115	Symbol	vstem		5631869						
ANR	5632116	Symbol	self -> hint [ i ] . b0		5631869						
ANR	5632117	Symbol	self -> hint [ i ] . b1		5631869						
ANR	5632118	Symbol	* self -> hint		5631869						
ANR	5632119	Symbol	* beg_range_pole		5631869						
ANR	5632120	Symbol	self -> pole [ j ] . contour_index		5631869						
ANR	5632121	Symbol	t1_hinter__segment_end		5631869						
ANR	5632122	Symbol	self -> pole [ beg_range_pole ] . type		5631869						
ANR	5632123	Symbol	* * self -> pole		5631869						
ANR	5632124	Symbol	closepath		5631869						
ANR	5632125	Symbol	* * * self		5631869						
ANR	5632126	Symbol	self -> pole		5631869						
ANR	5632127	Symbol	self -> hint_range [ k ] . beg_pole		5631869						
ANR	5632128	Symbol	& quality		5631869						
ANR	5632129	Symbol	hstem		5631869						
ANR	5632130	Symbol	t1_hinter__is_stem_hint_applicable		5631869						
ANR	5632131	Symbol	* self -> contour		5631869						
ANR	5632132	Symbol	* * j		5631869						
ANR	5632133	Symbol	self -> hint [ i ] . type		5631869						
ANR	5632134	Symbol	self -> hint		5631869						
ANR	5632135	Symbol	* * self		5631869						
ANR	5632136	Symbol	* self		5631869						
ANR	5632137	Symbol	i		5631869						
ANR	5632138	Symbol	j		5631869						
ANR	5632139	Symbol	k		5631869						
ANR	5632140	Symbol	beg_range_pole		5631869						
ANR	5632141	Symbol	self -> hint_range		5631869						
ANR	5632142	Symbol	quality		5631869						
ANR	5632143	Symbol	* self -> hint_range		5631869						
ANR	5632144	Symbol	self -> contour		5631869						
ANR	5632145	Symbol	self -> hint_count		5631869						
ANR	5632146	Symbol	* i		5631869						
ANR	5632147	Symbol	* j		5631869						
ANR	5632148	Symbol	self -> hint [ i ] . range_index		5631869						
ANR	5632149	Symbol	* k		5631869						
ANR	5632150	Symbol	true		5631869						
ANR	5632151	Symbol	self		5631869						
ANR	5632152	Symbol	self -> hint_range [ k ] . end_pole		5631869						
ANR	5632153	Symbol	* self -> pole [ j ] . contour_index		5631869						
ANR	5632154	Function	t1_hinter__add_boundary_length	2192:0:89437:90440							
ANR	5632155	FunctionDef	"t1_hinter__add_boundary_length (t1_hinter * self , t1_hint * hint , int pole_index0 , int pole_index1)"		5632154	0					
ANR	5632156	CompoundStatement		2194:0:89591:90440	5632154	0					
ANR	5632157	IdentifierDeclStatement	const t1_pole * pole = & self -> pole [ pole_index0 ] ;	2194:3:89595:89641	5632154	0	True				
ANR	5632158	IdentifierDecl	* pole = & self -> pole [ pole_index0 ]		5632154	0					
ANR	5632159	IdentifierDeclType	const t1_pole *		5632154	0					
ANR	5632160	Identifier	pole		5632154	1					
ANR	5632161	AssignmentExpression	* pole = & self -> pole [ pole_index0 ]		5632154	2		=			
ANR	5632162	Identifier	pole		5632154	0					
ANR	5632163	UnaryOperationExpression	& self -> pole [ pole_index0 ]		5632154	1					
ANR	5632164	UnaryOperator	&		5632154	0					
ANR	5632165	ArrayIndexing	self -> pole [ pole_index0 ]		5632154	1					
ANR	5632166	PtrMemberAccess	self -> pole		5632154	0					
ANR	5632167	Identifier	self		5632154	0					
ANR	5632168	Identifier	pole		5632154	1					
ANR	5632169	Identifier	pole_index0		5632154	1					
ANR	5632170	IdentifierDeclStatement	int contour_index = pole -> contour_index ;	2195:4:89647:89686	5632154	1	True				
ANR	5632171	IdentifierDecl	contour_index = pole -> contour_index		5632154	0					
ANR	5632172	IdentifierDeclType	int		5632154	0					
ANR	5632173	Identifier	contour_index		5632154	1					
ANR	5632174	AssignmentExpression	contour_index = pole -> contour_index		5632154	2		=			
ANR	5632175	Identifier	contour_index		5632154	0					
ANR	5632176	PtrMemberAccess	pole -> contour_index		5632154	1					
ANR	5632177	Identifier	pole		5632154	0					
ANR	5632178	Identifier	contour_index		5632154	1					
ANR	5632179	IdentifierDeclStatement	int beg_contour_pole = self -> contour [ contour_index ] ;	2196:4:89692:89743	5632154	2	True				
ANR	5632180	IdentifierDecl	beg_contour_pole = self -> contour [ contour_index ]		5632154	0					
ANR	5632181	IdentifierDeclType	int		5632154	0					
ANR	5632182	Identifier	beg_contour_pole		5632154	1					
ANR	5632183	AssignmentExpression	beg_contour_pole = self -> contour [ contour_index ]		5632154	2		=			
ANR	5632184	Identifier	beg_contour_pole		5632154	0					
ANR	5632185	ArrayIndexing	self -> contour [ contour_index ]		5632154	1					
ANR	5632186	PtrMemberAccess	self -> contour		5632154	0					
ANR	5632187	Identifier	self		5632154	0					
ANR	5632188	Identifier	contour		5632154	1					
ANR	5632189	Identifier	contour_index		5632154	1					
ANR	5632190	IdentifierDeclStatement	int end_contour_pole = self -> contour [ contour_index + 1 ] - 2 ;	2197:4:89749:89808	5632154	3	True				
ANR	5632191	IdentifierDecl	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		5632154	0					
ANR	5632192	IdentifierDeclType	int		5632154	0					
ANR	5632193	Identifier	end_contour_pole		5632154	1					
ANR	5632194	AssignmentExpression	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		5632154	2		=			
ANR	5632195	Identifier	end_contour_pole		5632154	0					
ANR	5632196	AdditiveExpression	self -> contour [ contour_index + 1 ] - 2		5632154	1		-			
ANR	5632197	ArrayIndexing	self -> contour [ contour_index + 1 ]		5632154	0					
ANR	5632198	PtrMemberAccess	self -> contour		5632154	0					
ANR	5632199	Identifier	self		5632154	0					
ANR	5632200	Identifier	contour		5632154	1					
ANR	5632201	AdditiveExpression	contour_index + 1		5632154	1		+			
ANR	5632202	Identifier	contour_index		5632154	0					
ANR	5632203	PrimaryExpression	1		5632154	1					
ANR	5632204	PrimaryExpression	2		5632154	1					
ANR	5632205	IdentifierDeclStatement	"int i0 = ranger_step_b ( pole_index0 , beg_contour_pole , end_contour_pole ) ;"	2198:4:89814:89885	5632154	4	True				
ANR	5632206	IdentifierDecl	"i0 = ranger_step_b ( pole_index0 , beg_contour_pole , end_contour_pole )"		5632154	0					
ANR	5632207	IdentifierDeclType	int		5632154	0					
ANR	5632208	Identifier	i0		5632154	1					
ANR	5632209	AssignmentExpression	"i0 = ranger_step_b ( pole_index0 , beg_contour_pole , end_contour_pole )"		5632154	2		=			
ANR	5632210	Identifier	i0		5632154	0					
ANR	5632211	CallExpression	"ranger_step_b ( pole_index0 , beg_contour_pole , end_contour_pole )"		5632154	1					
ANR	5632212	Callee	ranger_step_b		5632154	0					
ANR	5632213	Identifier	ranger_step_b		5632154	0					
ANR	5632214	ArgumentList	pole_index0		5632154	1					
ANR	5632215	Argument	pole_index0		5632154	0					
ANR	5632216	Identifier	pole_index0		5632154	0					
ANR	5632217	Argument	beg_contour_pole		5632154	1					
ANR	5632218	Identifier	beg_contour_pole		5632154	0					
ANR	5632219	Argument	end_contour_pole		5632154	2					
ANR	5632220	Identifier	end_contour_pole		5632154	0					
ANR	5632221	IdentifierDeclStatement	"int i1 = ranger_step_f ( pole_index1 , beg_contour_pole , end_contour_pole ) ;"	2199:4:89891:89962	5632154	5	True				
ANR	5632222	IdentifierDecl	"i1 = ranger_step_f ( pole_index1 , beg_contour_pole , end_contour_pole )"		5632154	0					
ANR	5632223	IdentifierDeclType	int		5632154	0					
ANR	5632224	Identifier	i1		5632154	1					
ANR	5632225	AssignmentExpression	"i1 = ranger_step_f ( pole_index1 , beg_contour_pole , end_contour_pole )"		5632154	2		=			
ANR	5632226	Identifier	i1		5632154	0					
ANR	5632227	CallExpression	"ranger_step_f ( pole_index1 , beg_contour_pole , end_contour_pole )"		5632154	1					
ANR	5632228	Callee	ranger_step_f		5632154	0					
ANR	5632229	Identifier	ranger_step_f		5632154	0					
ANR	5632230	ArgumentList	pole_index1		5632154	1					
ANR	5632231	Argument	pole_index1		5632154	0					
ANR	5632232	Identifier	pole_index1		5632154	0					
ANR	5632233	Argument	beg_contour_pole		5632154	1					
ANR	5632234	Identifier	beg_contour_pole		5632154	0					
ANR	5632235	Argument	end_contour_pole		5632154	2					
ANR	5632236	Identifier	end_contour_pole		5632154	0					
ANR	5632237	IdentifierDeclStatement	t1_glyph_space_coord g = ( hint -> type == hstem ? pole -> gy : pole -> gx ) ;	2200:4:89968:90036	5632154	6	True				
ANR	5632238	IdentifierDecl	g = ( hint -> type == hstem ? pole -> gy : pole -> gx )		5632154	0					
ANR	5632239	IdentifierDeclType	t1_glyph_space_coord		5632154	0					
ANR	5632240	Identifier	g		5632154	1					
ANR	5632241	AssignmentExpression	g = ( hint -> type == hstem ? pole -> gy : pole -> gx )		5632154	2		=			
ANR	5632242	Identifier	g		5632154	0					
ANR	5632243	ConditionalExpression	hint -> type == hstem ? pole -> gy : pole -> gx		5632154	1					
ANR	5632244	Condition	hint -> type == hstem		5632154	0					
ANR	5632245	EqualityExpression	hint -> type == hstem		5632154	0		==			
ANR	5632246	PtrMemberAccess	hint -> type		5632154	0					
ANR	5632247	Identifier	hint		5632154	0					
ANR	5632248	Identifier	type		5632154	1					
ANR	5632249	Identifier	hstem		5632154	1					
ANR	5632250	PtrMemberAccess	pole -> gy		5632154	1					
ANR	5632251	Identifier	pole		5632154	0					
ANR	5632252	Identifier	gy		5632154	1					
ANR	5632253	PtrMemberAccess	pole -> gx		5632154	2					
ANR	5632254	Identifier	pole		5632154	0					
ANR	5632255	Identifier	gx		5632154	1					
ANR	5632256	IfStatement	if ( self -> pole [ i0 ] . type == oncurve )		5632154	7					
ANR	5632257	Condition	self -> pole [ i0 ] . type == oncurve	2202:8:90047:90076	5632154	0	True				
ANR	5632258	EqualityExpression	self -> pole [ i0 ] . type == oncurve		5632154	0		==			
ANR	5632259	MemberAccess	self -> pole [ i0 ] . type		5632154	0					
ANR	5632260	ArrayIndexing	self -> pole [ i0 ]		5632154	0					
ANR	5632261	PtrMemberAccess	self -> pole		5632154	0					
ANR	5632262	Identifier	self		5632154	0					
ANR	5632263	Identifier	pole		5632154	1					
ANR	5632264	Identifier	i0		5632154	1					
ANR	5632265	Identifier	type		5632154	1					
ANR	5632266	Identifier	oncurve		5632154	1					
ANR	5632267	ExpressionStatement	i0 = pole_index0	2203:8:90087:90103	5632154	1	True				
ANR	5632268	AssignmentExpression	i0 = pole_index0		5632154	0		=			
ANR	5632269	Identifier	i0		5632154	0					
ANR	5632270	Identifier	pole_index0		5632154	1					
ANR	5632271	IfStatement	if ( self -> pole [ i1 ] . type == oncurve )		5632154	8					
ANR	5632272	Condition	self -> pole [ i1 ] . type == oncurve	2204:8:90113:90142	5632154	0	True				
ANR	5632273	EqualityExpression	self -> pole [ i1 ] . type == oncurve		5632154	0		==			
ANR	5632274	MemberAccess	self -> pole [ i1 ] . type		5632154	0					
ANR	5632275	ArrayIndexing	self -> pole [ i1 ]		5632154	0					
ANR	5632276	PtrMemberAccess	self -> pole		5632154	0					
ANR	5632277	Identifier	self		5632154	0					
ANR	5632278	Identifier	pole		5632154	1					
ANR	5632279	Identifier	i1		5632154	1					
ANR	5632280	Identifier	type		5632154	1					
ANR	5632281	Identifier	oncurve		5632154	1					
ANR	5632282	ExpressionStatement	i1 = pole_index1	2205:8:90153:90169	5632154	1	True				
ANR	5632283	AssignmentExpression	i1 = pole_index1		5632154	0		=			
ANR	5632284	Identifier	i1		5632154	0					
ANR	5632285	Identifier	pole_index1		5632154	1					
ANR	5632286	ExpressionStatement	* ( any_abs ( hint -> g0 - g ) < any_abs ( hint -> g1 - g ) ? & hint -> boundary_length0 : & hint -> boundary_length1 ) += ( hint -> type == hstem ? any_abs ( self -> pole [ i0 ] . gx - self -> pole [ i1 ] . gx ) : any_abs ( self -> pole [ i0 ] . gy - self -> pole [ i1 ] . gy ) )	2206:4:90175:90438	5632154	9	True				
ANR	5632287	AssignmentExpression	* ( any_abs ( hint -> g0 - g ) < any_abs ( hint -> g1 - g ) ? & hint -> boundary_length0 : & hint -> boundary_length1 ) += ( hint -> type == hstem ? any_abs ( self -> pole [ i0 ] . gx - self -> pole [ i1 ] . gx ) : any_abs ( self -> pole [ i0 ] . gy - self -> pole [ i1 ] . gy ) )		5632154	0		+=			
ANR	5632288	UnaryOperationExpression	* ( any_abs ( hint -> g0 - g ) < any_abs ( hint -> g1 - g ) ? & hint -> boundary_length0 : & hint -> boundary_length1 )		5632154	0					
ANR	5632289	UnaryOperator	*		5632154	0					
ANR	5632290	ConditionalExpression	any_abs ( hint -> g0 - g ) < any_abs ( hint -> g1 - g ) ? & hint -> boundary_length0 : & hint -> boundary_length1		5632154	1					
ANR	5632291	Condition	any_abs ( hint -> g0 - g ) < any_abs ( hint -> g1 - g )		5632154	0					
ANR	5632292	RelationalExpression	any_abs ( hint -> g0 - g ) < any_abs ( hint -> g1 - g )		5632154	0		<			
ANR	5632293	CallExpression	any_abs ( hint -> g0 - g )		5632154	0					
ANR	5632294	Callee	any_abs		5632154	0					
ANR	5632295	Identifier	any_abs		5632154	0					
ANR	5632296	ArgumentList	hint -> g0 - g		5632154	1					
ANR	5632297	Argument	hint -> g0 - g		5632154	0					
ANR	5632298	AdditiveExpression	hint -> g0 - g		5632154	0		-			
ANR	5632299	PtrMemberAccess	hint -> g0		5632154	0					
ANR	5632300	Identifier	hint		5632154	0					
ANR	5632301	Identifier	g0		5632154	1					
ANR	5632302	Identifier	g		5632154	1					
ANR	5632303	CallExpression	any_abs ( hint -> g1 - g )		5632154	1					
ANR	5632304	Callee	any_abs		5632154	0					
ANR	5632305	Identifier	any_abs		5632154	0					
ANR	5632306	ArgumentList	hint -> g1 - g		5632154	1					
ANR	5632307	Argument	hint -> g1 - g		5632154	0					
ANR	5632308	AdditiveExpression	hint -> g1 - g		5632154	0		-			
ANR	5632309	PtrMemberAccess	hint -> g1		5632154	0					
ANR	5632310	Identifier	hint		5632154	0					
ANR	5632311	Identifier	g1		5632154	1					
ANR	5632312	Identifier	g		5632154	1					
ANR	5632313	UnaryOperationExpression	& hint -> boundary_length0		5632154	1					
ANR	5632314	UnaryOperator	&		5632154	0					
ANR	5632315	PtrMemberAccess	hint -> boundary_length0		5632154	1					
ANR	5632316	Identifier	hint		5632154	0					
ANR	5632317	Identifier	boundary_length0		5632154	1					
ANR	5632318	UnaryOperationExpression	& hint -> boundary_length1		5632154	2					
ANR	5632319	UnaryOperator	&		5632154	0					
ANR	5632320	PtrMemberAccess	hint -> boundary_length1		5632154	1					
ANR	5632321	Identifier	hint		5632154	0					
ANR	5632322	Identifier	boundary_length1		5632154	1					
ANR	5632323	ConditionalExpression	hint -> type == hstem ? any_abs ( self -> pole [ i0 ] . gx - self -> pole [ i1 ] . gx ) : any_abs ( self -> pole [ i0 ] . gy - self -> pole [ i1 ] . gy )		5632154	1					
ANR	5632324	Condition	hint -> type == hstem		5632154	0					
ANR	5632325	EqualityExpression	hint -> type == hstem		5632154	0		==			
ANR	5632326	PtrMemberAccess	hint -> type		5632154	0					
ANR	5632327	Identifier	hint		5632154	0					
ANR	5632328	Identifier	type		5632154	1					
ANR	5632329	Identifier	hstem		5632154	1					
ANR	5632330	CallExpression	any_abs ( self -> pole [ i0 ] . gx - self -> pole [ i1 ] . gx )		5632154	1					
ANR	5632331	Callee	any_abs		5632154	0					
ANR	5632332	Identifier	any_abs		5632154	0					
ANR	5632333	ArgumentList	self -> pole [ i0 ] . gx - self -> pole [ i1 ] . gx		5632154	1					
ANR	5632334	Argument	self -> pole [ i0 ] . gx - self -> pole [ i1 ] . gx		5632154	0					
ANR	5632335	AdditiveExpression	self -> pole [ i0 ] . gx - self -> pole [ i1 ] . gx		5632154	0		-			
ANR	5632336	MemberAccess	self -> pole [ i0 ] . gx		5632154	0					
ANR	5632337	ArrayIndexing	self -> pole [ i0 ]		5632154	0					
ANR	5632338	PtrMemberAccess	self -> pole		5632154	0					
ANR	5632339	Identifier	self		5632154	0					
ANR	5632340	Identifier	pole		5632154	1					
ANR	5632341	Identifier	i0		5632154	1					
ANR	5632342	Identifier	gx		5632154	1					
ANR	5632343	MemberAccess	self -> pole [ i1 ] . gx		5632154	1					
ANR	5632344	ArrayIndexing	self -> pole [ i1 ]		5632154	0					
ANR	5632345	PtrMemberAccess	self -> pole		5632154	0					
ANR	5632346	Identifier	self		5632154	0					
ANR	5632347	Identifier	pole		5632154	1					
ANR	5632348	Identifier	i1		5632154	1					
ANR	5632349	Identifier	gx		5632154	1					
ANR	5632350	CallExpression	any_abs ( self -> pole [ i0 ] . gy - self -> pole [ i1 ] . gy )		5632154	2					
ANR	5632351	Callee	any_abs		5632154	0					
ANR	5632352	Identifier	any_abs		5632154	0					
ANR	5632353	ArgumentList	self -> pole [ i0 ] . gy - self -> pole [ i1 ] . gy		5632154	1					
ANR	5632354	Argument	self -> pole [ i0 ] . gy - self -> pole [ i1 ] . gy		5632154	0					
ANR	5632355	AdditiveExpression	self -> pole [ i0 ] . gy - self -> pole [ i1 ] . gy		5632154	0		-			
ANR	5632356	MemberAccess	self -> pole [ i0 ] . gy		5632154	0					
ANR	5632357	ArrayIndexing	self -> pole [ i0 ]		5632154	0					
ANR	5632358	PtrMemberAccess	self -> pole		5632154	0					
ANR	5632359	Identifier	self		5632154	0					
ANR	5632360	Identifier	pole		5632154	1					
ANR	5632361	Identifier	i0		5632154	1					
ANR	5632362	Identifier	gy		5632154	1					
ANR	5632363	MemberAccess	self -> pole [ i1 ] . gy		5632154	1					
ANR	5632364	ArrayIndexing	self -> pole [ i1 ]		5632154	0					
ANR	5632365	PtrMemberAccess	self -> pole		5632154	0					
ANR	5632366	Identifier	self		5632154	0					
ANR	5632367	Identifier	pole		5632154	1					
ANR	5632368	Identifier	i1		5632154	1					
ANR	5632369	Identifier	gy		5632154	1					
ANR	5632370	ReturnType	static void		5632154	1					
ANR	5632371	Identifier	t1_hinter__add_boundary_length		5632154	2					
ANR	5632372	ParameterList	"t1_hinter * self , t1_hint * hint , int pole_index0 , int pole_index1"		5632154	3					
ANR	5632373	Parameter	t1_hinter * self	2192:43:89480:89495	5632154	0	True				
ANR	5632374	ParameterType	t1_hinter *		5632154	0					
ANR	5632375	Identifier	self		5632154	1					
ANR	5632376	Parameter	t1_hint * hint	2192:61:89498:89510	5632154	1	True				
ANR	5632377	ParameterType	t1_hint *		5632154	0					
ANR	5632378	Identifier	hint		5632154	1					
ANR	5632379	Parameter	int pole_index0	2193:44:89557:89571	5632154	2	True				
ANR	5632380	ParameterType	int		5632154	0					
ANR	5632381	Identifier	pole_index0		5632154	1					
ANR	5632382	Parameter	int pole_index1	2193:61:89574:89588	5632154	3	True				
ANR	5632383	ParameterType	int		5632154	0					
ANR	5632384	Identifier	pole_index1		5632154	1					
ANR	5632385	CFGEntryNode	ENTRY		5632154		True				
ANR	5632386	CFGExitNode	EXIT		5632154		True				
ANR	5632387	Symbol	self -> pole [ i0 ] . type		5632154						
ANR	5632388	Symbol	oncurve		5632154						
ANR	5632389	Symbol	* self -> pole		5632154						
ANR	5632390	Symbol	* ( any_abs ( hint -> g0 - g ) < any_abs ( hint -> g1 - g ) ? & hint -> boundary_length0 : & hint -> boundary_length1 )		5632154						
ANR	5632391	Symbol	pole -> gy		5632154						
ANR	5632392	Symbol	pole -> gx		5632154						
ANR	5632393	Symbol	pole		5632154						
ANR	5632394	Symbol	self -> pole [ i0 ] . gx		5632154						
ANR	5632395	Symbol	* pole		5632154						
ANR	5632396	Symbol	* i1		5632154						
ANR	5632397	Symbol	hint -> g1		5632154						
ANR	5632398	Symbol	* i0		5632154						
ANR	5632399	Symbol	* any_abs		5632154						
ANR	5632400	Symbol	self -> pole [ i1 ] . gx		5632154						
ANR	5632401	Symbol	self -> pole [ i0 ] . gy		5632154						
ANR	5632402	Symbol	self -> pole [ i1 ] . gy		5632154						
ANR	5632403	Symbol	pole -> contour_index		5632154						
ANR	5632404	Symbol	any_abs		5632154						
ANR	5632405	Symbol	self -> pole		5632154						
ANR	5632406	Symbol	contour_index		5632154						
ANR	5632407	Symbol	beg_contour_pole		5632154						
ANR	5632408	Symbol	* contour_index		5632154						
ANR	5632409	Symbol	hint -> type		5632154						
ANR	5632410	Symbol	hstem		5632154						
ANR	5632411	Symbol	* self -> contour		5632154						
ANR	5632412	Symbol	ranger_step_f		5632154						
ANR	5632413	Symbol	* hint		5632154						
ANR	5632414	Symbol	* * self		5632154						
ANR	5632415	Symbol	* self		5632154						
ANR	5632416	Symbol	ranger_step_b		5632154						
ANR	5632417	Symbol	i0		5632154						
ANR	5632418	Symbol	g		5632154						
ANR	5632419	Symbol	i1		5632154						
ANR	5632420	Symbol	hint -> boundary_length0		5632154						
ANR	5632421	Symbol	& hint -> boundary_length1		5632154						
ANR	5632422	Symbol	self -> pole [ i1 ] . type		5632154						
ANR	5632423	Symbol	& hint -> boundary_length0		5632154						
ANR	5632424	Symbol	hint -> boundary_length1		5632154						
ANR	5632425	Symbol	pole_index0		5632154						
ANR	5632426	Symbol	self -> contour		5632154						
ANR	5632427	Symbol	hint -> g0		5632154						
ANR	5632428	Symbol	pole_index1		5632154						
ANR	5632429	Symbol	end_contour_pole		5632154						
ANR	5632430	Symbol	hint		5632154						
ANR	5632431	Symbol	self		5632154						
ANR	5632432	Function	t1_hinter__align_stem_commands	2211:0:90443:93724							
ANR	5632433	FunctionDef	t1_hinter__align_stem_commands (t1_hinter * self)		5632432	0					
ANR	5632434	CompoundStatement		2212:0:90504:93724	5632432	0					
ANR	5632435	IdentifierDeclStatement	"int i , j , jj , k ;"	2212:3:90508:90523	5632432	0	True				
ANR	5632436	IdentifierDecl	i		5632432	0					
ANR	5632437	IdentifierDeclType	int		5632432	0					
ANR	5632438	Identifier	i		5632432	1					
ANR	5632439	IdentifierDecl	j		5632432	1					
ANR	5632440	IdentifierDeclType	int		5632432	0					
ANR	5632441	Identifier	j		5632432	1					
ANR	5632442	IdentifierDecl	jj		5632432	2					
ANR	5632443	IdentifierDeclType	int		5632432	0					
ANR	5632444	Identifier	jj		5632432	1					
ANR	5632445	IdentifierDecl	k		5632432	3					
ANR	5632446	IdentifierDeclType	int		5632432	0					
ANR	5632447	Identifier	k		5632432	1					
ANR	5632448	ForStatement	for ( i = 0 ; i < self -> hint_count ; i ++ )		5632432	1					
ANR	5632449	ForInit	i = 0 ;	2214:8:90534:90539	5632432	0	True				
ANR	5632450	AssignmentExpression	i = 0		5632432	0		=			
ANR	5632451	Identifier	i		5632432	0					
ANR	5632452	PrimaryExpression	0		5632432	1					
ANR	5632453	Condition	i < self -> hint_count	2214:15:90541:90560	5632432	1	True				
ANR	5632454	RelationalExpression	i < self -> hint_count		5632432	0		<			
ANR	5632455	Identifier	i		5632432	0					
ANR	5632456	PtrMemberAccess	self -> hint_count		5632432	1					
ANR	5632457	Identifier	self		5632432	0					
ANR	5632458	Identifier	hint_count		5632432	1					
ANR	5632459	PostIncDecOperationExpression	i ++	2214:37:90563:90565	5632432	2	True				
ANR	5632460	Identifier	i		5632432	0					
ANR	5632461	IncDec	++		5632432	1					
ANR	5632462	CompoundStatement		3:42:63:63	5632432	3					
ANR	5632463	ExpressionStatement	self -> hint [ i ] . boundary_length0 = self -> hint [ i ] . boundary_length1 = 0	2215:8:90578:90645	5632432	0	True				
ANR	5632464	AssignmentExpression	self -> hint [ i ] . boundary_length0 = self -> hint [ i ] . boundary_length1 = 0		5632432	0		=			
ANR	5632465	MemberAccess	self -> hint [ i ] . boundary_length0		5632432	0					
ANR	5632466	ArrayIndexing	self -> hint [ i ]		5632432	0					
ANR	5632467	PtrMemberAccess	self -> hint		5632432	0					
ANR	5632468	Identifier	self		5632432	0					
ANR	5632469	Identifier	hint		5632432	1					
ANR	5632470	Identifier	i		5632432	1					
ANR	5632471	Identifier	boundary_length0		5632432	1					
ANR	5632472	AssignmentExpression	self -> hint [ i ] . boundary_length1 = 0		5632432	1		=			
ANR	5632473	MemberAccess	self -> hint [ i ] . boundary_length1		5632432	0					
ANR	5632474	ArrayIndexing	self -> hint [ i ]		5632432	0					
ANR	5632475	PtrMemberAccess	self -> hint		5632432	0					
ANR	5632476	Identifier	self		5632432	0					
ANR	5632477	Identifier	hint		5632432	1					
ANR	5632478	Identifier	i		5632432	1					
ANR	5632479	Identifier	boundary_length1		5632432	1					
ANR	5632480	PrimaryExpression	0		5632432	1					
ANR	5632481	IfStatement	if ( self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem )		5632432	1					
ANR	5632482	Condition	self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem	2216:12:90659:90716	5632432	0	True				
ANR	5632483	OrExpression	self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem		5632432	0		||			
ANR	5632484	EqualityExpression	self -> hint [ i ] . type == vstem		5632432	0		==			
ANR	5632485	MemberAccess	self -> hint [ i ] . type		5632432	0					
ANR	5632486	ArrayIndexing	self -> hint [ i ]		5632432	0					
ANR	5632487	PtrMemberAccess	self -> hint		5632432	0					
ANR	5632488	Identifier	self		5632432	0					
ANR	5632489	Identifier	hint		5632432	1					
ANR	5632490	Identifier	i		5632432	1					
ANR	5632491	Identifier	type		5632432	1					
ANR	5632492	Identifier	vstem		5632432	1					
ANR	5632493	EqualityExpression	self -> hint [ i ] . type == hstem		5632432	1		==			
ANR	5632494	MemberAccess	self -> hint [ i ] . type		5632432	0					
ANR	5632495	ArrayIndexing	self -> hint [ i ]		5632432	0					
ANR	5632496	PtrMemberAccess	self -> hint		5632432	0					
ANR	5632497	Identifier	self		5632432	0					
ANR	5632498	Identifier	hint		5632432	1					
ANR	5632499	Identifier	i		5632432	1					
ANR	5632500	Identifier	type		5632432	1					
ANR	5632501	Identifier	hstem		5632432	1					
ANR	5632502	ForStatement	for ( k = self -> hint [ i ] . range_index ; k != - 1 ; k = self -> hint_range [ k ] . next )		5632432	1					
ANR	5632503	ForInit	k = self -> hint [ i ] . range_index ;	2217:17:90736:90765	5632432	0	True				
ANR	5632504	AssignmentExpression	k = self -> hint [ i ] . range_index		5632432	0		=			
ANR	5632505	Identifier	k		5632432	0					
ANR	5632506	MemberAccess	self -> hint [ i ] . range_index		5632432	1					
ANR	5632507	ArrayIndexing	self -> hint [ i ]		5632432	0					
ANR	5632508	PtrMemberAccess	self -> hint		5632432	0					
ANR	5632509	Identifier	self		5632432	0					
ANR	5632510	Identifier	hint		5632432	1					
ANR	5632511	Identifier	i		5632432	1					
ANR	5632512	Identifier	range_index		5632432	1					
ANR	5632513	Condition	k != - 1	2217:48:90767:90773	5632432	1	True				
ANR	5632514	EqualityExpression	k != - 1		5632432	0		!=			
ANR	5632515	Identifier	k		5632432	0					
ANR	5632516	UnaryOperationExpression	- 1		5632432	1					
ANR	5632517	UnaryOperator	-		5632432	0					
ANR	5632518	PrimaryExpression	1		5632432	1					
ANR	5632519	AssignmentExpression	k = self -> hint_range [ k ] . next	2217:57:90776:90803	5632432	2	True	=			
ANR	5632520	Identifier	k		5632432	0					
ANR	5632521	MemberAccess	self -> hint_range [ k ] . next		5632432	1					
ANR	5632522	ArrayIndexing	self -> hint_range [ k ]		5632432	0					
ANR	5632523	PtrMemberAccess	self -> hint_range		5632432	0					
ANR	5632524	Identifier	self		5632432	0					
ANR	5632525	Identifier	hint_range		5632432	1					
ANR	5632526	Identifier	k		5632432	1					
ANR	5632527	Identifier	next		5632432	1					
ANR	5632528	CompoundStatement		10:16:513:534	5632432	3					
ANR	5632529	IdentifierDeclStatement	int beg_range_pole = self -> hint_range [ k ] . beg_pole ;	2218:16:90824:90873	5632432	0	True				
ANR	5632530	IdentifierDecl	beg_range_pole = self -> hint_range [ k ] . beg_pole		5632432	0					
ANR	5632531	IdentifierDeclType	int		5632432	0					
ANR	5632532	Identifier	beg_range_pole		5632432	1					
ANR	5632533	AssignmentExpression	beg_range_pole = self -> hint_range [ k ] . beg_pole		5632432	2		=			
ANR	5632534	Identifier	beg_range_pole		5632432	0					
ANR	5632535	MemberAccess	self -> hint_range [ k ] . beg_pole		5632432	1					
ANR	5632536	ArrayIndexing	self -> hint_range [ k ]		5632432	0					
ANR	5632537	PtrMemberAccess	self -> hint_range		5632432	0					
ANR	5632538	Identifier	self		5632432	0					
ANR	5632539	Identifier	hint_range		5632432	1					
ANR	5632540	Identifier	k		5632432	1					
ANR	5632541	Identifier	beg_pole		5632432	1					
ANR	5632542	IdentifierDeclStatement	int end_range_pole = self -> hint_range [ k ] . end_pole ;	2219:16:90891:90940	5632432	1	True				
ANR	5632543	IdentifierDecl	end_range_pole = self -> hint_range [ k ] . end_pole		5632432	0					
ANR	5632544	IdentifierDeclType	int		5632432	0					
ANR	5632545	Identifier	end_range_pole		5632432	1					
ANR	5632546	AssignmentExpression	end_range_pole = self -> hint_range [ k ] . end_pole		5632432	2		=			
ANR	5632547	Identifier	end_range_pole		5632432	0					
ANR	5632548	MemberAccess	self -> hint_range [ k ] . end_pole		5632432	1					
ANR	5632549	ArrayIndexing	self -> hint_range [ k ]		5632432	0					
ANR	5632550	PtrMemberAccess	self -> hint_range		5632432	0					
ANR	5632551	Identifier	self		5632432	0					
ANR	5632552	Identifier	hint_range		5632432	1					
ANR	5632553	Identifier	k		5632432	1					
ANR	5632554	Identifier	end_pole		5632432	1					
ANR	5632555	IdentifierDeclStatement	bool horiz = ( self -> hint [ i ] . type == hstem ) ;	2220:16:90958:91000	5632432	2	True				
ANR	5632556	IdentifierDecl	horiz = ( self -> hint [ i ] . type == hstem )		5632432	0					
ANR	5632557	IdentifierDeclType	bool		5632432	0					
ANR	5632558	Identifier	horiz		5632432	1					
ANR	5632559	AssignmentExpression	horiz = ( self -> hint [ i ] . type == hstem )		5632432	2		=			
ANR	5632560	Identifier	horiz		5632432	0					
ANR	5632561	EqualityExpression	self -> hint [ i ] . type == hstem		5632432	1		==			
ANR	5632562	MemberAccess	self -> hint [ i ] . type		5632432	0					
ANR	5632563	ArrayIndexing	self -> hint [ i ]		5632432	0					
ANR	5632564	PtrMemberAccess	self -> hint		5632432	0					
ANR	5632565	Identifier	self		5632432	0					
ANR	5632566	Identifier	hint		5632432	1					
ANR	5632567	Identifier	i		5632432	1					
ANR	5632568	Identifier	type		5632432	1					
ANR	5632569	Identifier	hstem		5632432	1					
ANR	5632570	IdentifierDeclStatement	int quality = max_int ;	2221:16:91018:91039	5632432	3	True				
ANR	5632571	IdentifierDecl	quality = max_int		5632432	0					
ANR	5632572	IdentifierDeclType	int		5632432	0					
ANR	5632573	Identifier	quality		5632432	1					
ANR	5632574	AssignmentExpression	quality = max_int		5632432	2		=			
ANR	5632575	Identifier	max_int		5632432	0					
ANR	5632576	Identifier	max_int		5632432	1					
ANR	5632577	IfStatement	if ( self -> pole [ beg_range_pole ] . type == closepath )		5632432	4					
ANR	5632578	Condition	self -> pole [ beg_range_pole ] . type == closepath	2223:20:91062:91105	5632432	0	True				
ANR	5632579	EqualityExpression	self -> pole [ beg_range_pole ] . type == closepath		5632432	0		==			
ANR	5632580	MemberAccess	self -> pole [ beg_range_pole ] . type		5632432	0					
ANR	5632581	ArrayIndexing	self -> pole [ beg_range_pole ]		5632432	0					
ANR	5632582	PtrMemberAccess	self -> pole		5632432	0					
ANR	5632583	Identifier	self		5632432	0					
ANR	5632584	Identifier	pole		5632432	1					
ANR	5632585	Identifier	beg_range_pole		5632432	1					
ANR	5632586	Identifier	type		5632432	1					
ANR	5632587	Identifier	closepath		5632432	1					
ANR	5632588	CompoundStatement		12:66:603:603	5632432	1					
ANR	5632589	ExpressionStatement	beg_range_pole ++	2226:20:91275:91291	5632432	0	True				
ANR	5632590	PostIncDecOperationExpression	beg_range_pole ++		5632432	0					
ANR	5632591	Identifier	beg_range_pole		5632432	0					
ANR	5632592	IncDec	++		5632432	1					
ANR	5632593	IfStatement	if ( beg_range_pole > end_range_pole )		5632432	1					
ANR	5632594	Condition	beg_range_pole > end_range_pole	2227:24:91317:91347	5632432	0	True				
ANR	5632595	RelationalExpression	beg_range_pole > end_range_pole		5632432	0		>			
ANR	5632596	Identifier	beg_range_pole		5632432	0					
ANR	5632597	Identifier	end_range_pole		5632432	1					
ANR	5632598	ContinueStatement	continue ;	2228:24:91374:91382	5632432	1	True				
ANR	5632599	ForStatement	for ( j = beg_range_pole ; j <= end_range_pole ; )		5632432	5					
ANR	5632600	ForInit	j = beg_range_pole ;	2230:21:91423:91441	5632432	0	True				
ANR	5632601	AssignmentExpression	j = beg_range_pole		5632432	0		=			
ANR	5632602	Identifier	j		5632432	0					
ANR	5632603	Identifier	beg_range_pole		5632432	1					
ANR	5632604	Condition	j <= end_range_pole	2230:41:91443:91461	5632432	1	True				
ANR	5632605	RelationalExpression	j <= end_range_pole		5632432	0		<=			
ANR	5632606	Identifier	j		5632432	0					
ANR	5632607	Identifier	end_range_pole		5632432	1					
ANR	5632608	CompoundStatement		19:63:960:960	5632432	2					
ANR	5632609	IfStatement	if ( self -> pole [ j ] . type == closepath )		5632432	0					
ANR	5632610	Condition	self -> pole [ j ] . type == closepath	2231:24:91491:91521	5632432	0	True				
ANR	5632611	EqualityExpression	self -> pole [ j ] . type == closepath		5632432	0		==			
ANR	5632612	MemberAccess	self -> pole [ j ] . type		5632432	0					
ANR	5632613	ArrayIndexing	self -> pole [ j ]		5632432	0					
ANR	5632614	PtrMemberAccess	self -> pole		5632432	0					
ANR	5632615	Identifier	self		5632432	0					
ANR	5632616	Identifier	pole		5632432	1					
ANR	5632617	Identifier	j		5632432	1					
ANR	5632618	Identifier	type		5632432	1					
ANR	5632619	Identifier	closepath		5632432	1					
ANR	5632620	CompoundStatement		20:57:1019:1019	5632432	1					
ANR	5632621	ExpressionStatement	j ++	2232:24:91550:91553	5632432	0	True				
ANR	5632622	PostIncDecOperationExpression	j ++		5632432	0					
ANR	5632623	Identifier	j		5632432	0					
ANR	5632624	IncDec	++		5632432	1					
ANR	5632625	ContinueStatement	continue ;	2233:24:91579:91587	5632432	1	True				
ANR	5632626	IfStatement	"if ( t1_hinter__is_stem_hint_applicable ( self , & self -> hint [ i ] , j , & quality ) )"		5632432	1					
ANR	5632627	Condition	"t1_hinter__is_stem_hint_applicable ( self , & self -> hint [ i ] , j , & quality )"	2235:24:91635:91703	5632432	0	True				
ANR	5632628	CallExpression	"t1_hinter__is_stem_hint_applicable ( self , & self -> hint [ i ] , j , & quality )"		5632432	0					
ANR	5632629	Callee	t1_hinter__is_stem_hint_applicable		5632432	0					
ANR	5632630	Identifier	t1_hinter__is_stem_hint_applicable		5632432	0					
ANR	5632631	ArgumentList	self		5632432	1					
ANR	5632632	Argument	self		5632432	0					
ANR	5632633	Identifier	self		5632432	0					
ANR	5632634	Argument	& self -> hint [ i ]		5632432	1					
ANR	5632635	UnaryOperationExpression	& self -> hint [ i ]		5632432	0					
ANR	5632636	UnaryOperator	&		5632432	0					
ANR	5632637	ArrayIndexing	self -> hint [ i ]		5632432	1					
ANR	5632638	PtrMemberAccess	self -> hint		5632432	0					
ANR	5632639	Identifier	self		5632432	0					
ANR	5632640	Identifier	hint		5632432	1					
ANR	5632641	Identifier	i		5632432	1					
ANR	5632642	Argument	j		5632432	2					
ANR	5632643	Identifier	j		5632432	0					
ANR	5632644	Argument	& quality		5632432	3					
ANR	5632645	UnaryOperationExpression	& quality		5632432	0					
ANR	5632646	UnaryOperator	&		5632432	0					
ANR	5632647	Identifier	quality		5632432	1					
ANR	5632648	CompoundStatement		28:24:1466:1502	5632432	1					
ANR	5632649	IdentifierDeclStatement	fixed t ;	2236:24:91732:91739	5632432	0	True				
ANR	5632650	IdentifierDecl	t		5632432	0					
ANR	5632651	IdentifierDeclType	fixed		5632432	0					
ANR	5632652	Identifier	t		5632432	1					
ANR	5632653	IdentifierDeclStatement	"int segment_index = t1_hinter__find_stem_middle ( self , & t , j , horiz ) ;"	2237:24:91829:91896	5632432	1	True				
ANR	5632654	IdentifierDecl	"segment_index = t1_hinter__find_stem_middle ( self , & t , j , horiz )"		5632432	0					
ANR	5632655	IdentifierDeclType	int		5632432	0					
ANR	5632656	Identifier	segment_index		5632432	1					
ANR	5632657	AssignmentExpression	"segment_index = t1_hinter__find_stem_middle ( self , & t , j , horiz )"		5632432	2		=			
ANR	5632658	Identifier	segment_index		5632432	0					
ANR	5632659	CallExpression	"t1_hinter__find_stem_middle ( self , & t , j , horiz )"		5632432	1					
ANR	5632660	Callee	t1_hinter__find_stem_middle		5632432	0					
ANR	5632661	Identifier	t1_hinter__find_stem_middle		5632432	0					
ANR	5632662	ArgumentList	self		5632432	1					
ANR	5632663	Argument	self		5632432	0					
ANR	5632664	Identifier	self		5632432	0					
ANR	5632665	Argument	& t		5632432	1					
ANR	5632666	UnaryOperationExpression	& t		5632432	0					
ANR	5632667	UnaryOperator	&		5632432	0					
ANR	5632668	Identifier	t		5632432	1					
ANR	5632669	Argument	j		5632432	2					
ANR	5632670	Identifier	j		5632432	0					
ANR	5632671	Argument	horiz		5632432	3					
ANR	5632672	Identifier	horiz		5632432	0					
ANR	5632673	IdentifierDeclStatement	t1_glyph_space_coord gc ;	2238:24:91922:91945	5632432	2	True				
ANR	5632674	IdentifierDecl	gc		5632432	0					
ANR	5632675	IdentifierDeclType	t1_glyph_space_coord		5632432	0					
ANR	5632676	Identifier	gc		5632432	1					
ANR	5632677	IdentifierDeclStatement	enum t1_align_type align = unaligned ;	2239:24:91971:92007	5632432	3	True				
ANR	5632678	IdentifierDecl	align = unaligned		5632432	0					
ANR	5632679	IdentifierDeclType	enum t1_align_type		5632432	0					
ANR	5632680	Identifier	align		5632432	1					
ANR	5632681	AssignmentExpression	align = unaligned		5632432	2		=			
ANR	5632682	Identifier	unaligned		5632432	0					
ANR	5632683	Identifier	unaligned		5632432	1					
ANR	5632684	IfStatement	if ( self -> hint [ i ] . side_mask != 3 )		5632432	4					
ANR	5632685	Condition	self -> hint [ i ] . side_mask != 3	2241:28:92038:92065	5632432	0	True				
ANR	5632686	EqualityExpression	self -> hint [ i ] . side_mask != 3		5632432	0		!=			
ANR	5632687	MemberAccess	self -> hint [ i ] . side_mask		5632432	0					
ANR	5632688	ArrayIndexing	self -> hint [ i ]		5632432	0					
ANR	5632689	PtrMemberAccess	self -> hint		5632432	0					
ANR	5632690	Identifier	self		5632432	0					
ANR	5632691	Identifier	hint		5632432	1					
ANR	5632692	Identifier	i		5632432	1					
ANR	5632693	Identifier	side_mask		5632432	1					
ANR	5632694	PrimaryExpression	3		5632432	1					
ANR	5632695	CompoundStatement		30:58:1563:1563	5632432	1					
ANR	5632696	ExpressionStatement	align = ( self -> hint [ i ] . side_mask & 2 ? topzn : botzn )	2243:28:92178:92231	5632432	0	True				
ANR	5632697	AssignmentExpression	align = ( self -> hint [ i ] . side_mask & 2 ? topzn : botzn )		5632432	0		=			
ANR	5632698	Identifier	align		5632432	0					
ANR	5632699	ConditionalExpression	self -> hint [ i ] . side_mask & 2 ? topzn : botzn		5632432	1					
ANR	5632700	Condition	self -> hint [ i ] . side_mask & 2		5632432	0					
ANR	5632701	BitAndExpression	self -> hint [ i ] . side_mask & 2		5632432	0		&			
ANR	5632702	MemberAccess	self -> hint [ i ] . side_mask		5632432	0					
ANR	5632703	ArrayIndexing	self -> hint [ i ]		5632432	0					
ANR	5632704	PtrMemberAccess	self -> hint		5632432	0					
ANR	5632705	Identifier	self		5632432	0					
ANR	5632706	Identifier	hint		5632432	1					
ANR	5632707	Identifier	i		5632432	1					
ANR	5632708	Identifier	side_mask		5632432	1					
ANR	5632709	PrimaryExpression	2		5632432	1					
ANR	5632710	Identifier	topzn		5632432	1					
ANR	5632711	Identifier	botzn		5632432	2					
ANR	5632712	ElseStatement	else		5632432	0					
ANR	5632713	IfStatement	if ( self -> autohinting && horiz )		5632432	0					
ANR	5632714	Condition	self -> autohinting && horiz	2244:35:92268:92293	5632432	0	True				
ANR	5632715	AndExpression	self -> autohinting && horiz		5632432	0		&&			
ANR	5632716	PtrMemberAccess	self -> autohinting		5632432	0					
ANR	5632717	Identifier	self		5632432	0					
ANR	5632718	Identifier	autohinting		5632432	1					
ANR	5632719	Identifier	horiz		5632432	1					
ANR	5632720	CompoundStatement		33:63:1791:1791	5632432	1					
ANR	5632721	IfStatement	if ( self -> pole [ segment_index ] . gy == self -> hint [ i ] . g0 )		5632432	0					
ANR	5632722	Condition	self -> pole [ segment_index ] . gy == self -> hint [ i ] . g0	2245:32:92330:92377	5632432	0	True				
ANR	5632723	EqualityExpression	self -> pole [ segment_index ] . gy == self -> hint [ i ] . g0		5632432	0		==			
ANR	5632724	MemberAccess	self -> pole [ segment_index ] . gy		5632432	0					
ANR	5632725	ArrayIndexing	self -> pole [ segment_index ]		5632432	0					
ANR	5632726	PtrMemberAccess	self -> pole		5632432	0					
ANR	5632727	Identifier	self		5632432	0					
ANR	5632728	Identifier	pole		5632432	1					
ANR	5632729	Identifier	segment_index		5632432	1					
ANR	5632730	Identifier	gy		5632432	1					
ANR	5632731	MemberAccess	self -> hint [ i ] . g0		5632432	1					
ANR	5632732	ArrayIndexing	self -> hint [ i ]		5632432	0					
ANR	5632733	PtrMemberAccess	self -> hint		5632432	0					
ANR	5632734	Identifier	self		5632432	0					
ANR	5632735	Identifier	hint		5632432	1					
ANR	5632736	Identifier	i		5632432	1					
ANR	5632737	Identifier	g0		5632432	1					
ANR	5632738	ExpressionStatement	align = ( self -> hint [ i ] . g0 > self -> hint [ i ] . g1 ? topzn : botzn )	2246:32:92412:92473	5632432	1	True				
ANR	5632739	AssignmentExpression	align = ( self -> hint [ i ] . g0 > self -> hint [ i ] . g1 ? topzn : botzn )		5632432	0		=			
ANR	5632740	Identifier	align		5632432	0					
ANR	5632741	ConditionalExpression	self -> hint [ i ] . g0 > self -> hint [ i ] . g1 ? topzn : botzn		5632432	1					
ANR	5632742	Condition	self -> hint [ i ] . g0 > self -> hint [ i ] . g1		5632432	0					
ANR	5632743	RelationalExpression	self -> hint [ i ] . g0 > self -> hint [ i ] . g1		5632432	0		>			
ANR	5632744	MemberAccess	self -> hint [ i ] . g0		5632432	0					
ANR	5632745	ArrayIndexing	self -> hint [ i ]		5632432	0					
ANR	5632746	PtrMemberAccess	self -> hint		5632432	0					
ANR	5632747	Identifier	self		5632432	0					
ANR	5632748	Identifier	hint		5632432	1					
ANR	5632749	Identifier	i		5632432	1					
ANR	5632750	Identifier	g0		5632432	1					
ANR	5632751	MemberAccess	self -> hint [ i ] . g1		5632432	1					
ANR	5632752	ArrayIndexing	self -> hint [ i ]		5632432	0					
ANR	5632753	PtrMemberAccess	self -> hint		5632432	0					
ANR	5632754	Identifier	self		5632432	0					
ANR	5632755	Identifier	hint		5632432	1					
ANR	5632756	Identifier	i		5632432	1					
ANR	5632757	Identifier	g1		5632432	1					
ANR	5632758	Identifier	topzn		5632432	1					
ANR	5632759	Identifier	botzn		5632432	2					
ANR	5632760	ExpressionStatement	"align = t1_hinter__compute_aligned_coord ( self , & gc , segment_index , t , & self -> hint [ i ] , align )"	2248:24:92525:92653	5632432	5	True				
ANR	5632761	AssignmentExpression	"align = t1_hinter__compute_aligned_coord ( self , & gc , segment_index , t , & self -> hint [ i ] , align )"		5632432	0		=			
ANR	5632762	Identifier	align		5632432	0					
ANR	5632763	CallExpression	"t1_hinter__compute_aligned_coord ( self , & gc , segment_index , t , & self -> hint [ i ] , align )"		5632432	1					
ANR	5632764	Callee	t1_hinter__compute_aligned_coord		5632432	0					
ANR	5632765	Identifier	t1_hinter__compute_aligned_coord		5632432	0					
ANR	5632766	ArgumentList	self		5632432	1					
ANR	5632767	Argument	self		5632432	0					
ANR	5632768	Identifier	self		5632432	0					
ANR	5632769	Argument	& gc		5632432	1					
ANR	5632770	UnaryOperationExpression	& gc		5632432	0					
ANR	5632771	UnaryOperator	&		5632432	0					
ANR	5632772	Identifier	gc		5632432	1					
ANR	5632773	Argument	segment_index		5632432	2					
ANR	5632774	Identifier	segment_index		5632432	0					
ANR	5632775	Argument	t		5632432	3					
ANR	5632776	Identifier	t		5632432	0					
ANR	5632777	Argument	& self -> hint [ i ]		5632432	4					
ANR	5632778	UnaryOperationExpression	& self -> hint [ i ]		5632432	0					
ANR	5632779	UnaryOperator	&		5632432	0					
ANR	5632780	ArrayIndexing	self -> hint [ i ]		5632432	1					
ANR	5632781	PtrMemberAccess	self -> hint		5632432	0					
ANR	5632782	Identifier	self		5632432	0					
ANR	5632783	Identifier	hint		5632432	1					
ANR	5632784	Identifier	i		5632432	1					
ANR	5632785	Argument	align		5632432	5					
ANR	5632786	Identifier	align		5632432	0					
ANR	5632787	ExpressionStatement	"t1_hint__set_aligned_coord ( & self -> hint [ i ] , gc , & self -> pole [ j ] , align , quality )"	2251:24:92796:92874	5632432	6	True				
ANR	5632788	CallExpression	"t1_hint__set_aligned_coord ( & self -> hint [ i ] , gc , & self -> pole [ j ] , align , quality )"		5632432	0					
ANR	5632789	Callee	t1_hint__set_aligned_coord		5632432	0					
ANR	5632790	Identifier	t1_hint__set_aligned_coord		5632432	0					
ANR	5632791	ArgumentList	& self -> hint [ i ]		5632432	1					
ANR	5632792	Argument	& self -> hint [ i ]		5632432	0					
ANR	5632793	UnaryOperationExpression	& self -> hint [ i ]		5632432	0					
ANR	5632794	UnaryOperator	&		5632432	0					
ANR	5632795	ArrayIndexing	self -> hint [ i ]		5632432	1					
ANR	5632796	PtrMemberAccess	self -> hint		5632432	0					
ANR	5632797	Identifier	self		5632432	0					
ANR	5632798	Identifier	hint		5632432	1					
ANR	5632799	Identifier	i		5632432	1					
ANR	5632800	Argument	gc		5632432	1					
ANR	5632801	Identifier	gc		5632432	0					
ANR	5632802	Argument	& self -> pole [ j ]		5632432	2					
ANR	5632803	UnaryOperationExpression	& self -> pole [ j ]		5632432	0					
ANR	5632804	UnaryOperator	&		5632432	0					
ANR	5632805	ArrayIndexing	self -> pole [ j ]		5632432	1					
ANR	5632806	PtrMemberAccess	self -> pole		5632432	0					
ANR	5632807	Identifier	self		5632432	0					
ANR	5632808	Identifier	pole		5632432	1					
ANR	5632809	Identifier	j		5632432	1					
ANR	5632810	Argument	align		5632432	3					
ANR	5632811	Identifier	align		5632432	0					
ANR	5632812	Argument	quality		5632432	4					
ANR	5632813	Identifier	quality		5632432	0					
ANR	5632814	ExpressionStatement	jj = j	2252:24:92900:92906	5632432	7	True				
ANR	5632815	AssignmentExpression	jj = j		5632432	0		=			
ANR	5632816	Identifier	jj		5632432	0					
ANR	5632817	Identifier	j		5632432	1					
ANR	5632818	ExpressionStatement	"j = t1_hinter__skip_stem ( self , j , horiz )"	2253:24:92932:92972	5632432	8	True				
ANR	5632819	AssignmentExpression	"j = t1_hinter__skip_stem ( self , j , horiz )"		5632432	0		=			
ANR	5632820	Identifier	j		5632432	0					
ANR	5632821	CallExpression	"t1_hinter__skip_stem ( self , j , horiz )"		5632432	1					
ANR	5632822	Callee	t1_hinter__skip_stem		5632432	0					
ANR	5632823	Identifier	t1_hinter__skip_stem		5632432	0					
ANR	5632824	ArgumentList	self		5632432	1					
ANR	5632825	Argument	self		5632432	0					
ANR	5632826	Identifier	self		5632432	0					
ANR	5632827	Argument	j		5632432	1					
ANR	5632828	Identifier	j		5632432	0					
ANR	5632829	Argument	horiz		5632432	2					
ANR	5632830	Identifier	horiz		5632432	0					
ANR	5632831	ExpressionStatement	"t1_hinter__add_boundary_length ( self , & self -> hint [ i ] , jj , j )"	2254:24:92998:93057	5632432	9	True				
ANR	5632832	CallExpression	"t1_hinter__add_boundary_length ( self , & self -> hint [ i ] , jj , j )"		5632432	0					
ANR	5632833	Callee	t1_hinter__add_boundary_length		5632432	0					
ANR	5632834	Identifier	t1_hinter__add_boundary_length		5632432	0					
ANR	5632835	ArgumentList	self		5632432	1					
ANR	5632836	Argument	self		5632432	0					
ANR	5632837	Identifier	self		5632432	0					
ANR	5632838	Argument	& self -> hint [ i ]		5632432	1					
ANR	5632839	UnaryOperationExpression	& self -> hint [ i ]		5632432	0					
ANR	5632840	UnaryOperator	&		5632432	0					
ANR	5632841	ArrayIndexing	self -> hint [ i ]		5632432	1					
ANR	5632842	PtrMemberAccess	self -> hint		5632432	0					
ANR	5632843	Identifier	self		5632432	0					
ANR	5632844	Identifier	hint		5632432	1					
ANR	5632845	Identifier	i		5632432	1					
ANR	5632846	Argument	jj		5632432	2					
ANR	5632847	Identifier	jj		5632432	0					
ANR	5632848	Argument	j		5632432	3					
ANR	5632849	Identifier	j		5632432	0					
ANR	5632850	IfStatement	if ( j < jj )		5632432	10					
ANR	5632851	Condition	j < jj	2255:28:93087:93092	5632432	0	True				
ANR	5632852	RelationalExpression	j < jj		5632432	0		<			
ANR	5632853	Identifier	j		5632432	0					
ANR	5632854	Identifier	jj		5632432	1					
ANR	5632855	CompoundStatement		44:36:2590:2590	5632432	1					
ANR	5632856	ExpressionStatement	j = self -> contour [ self -> pole [ j ] . contour_index + 1 ]	2256:28:93157:93207	5632432	0	True				
ANR	5632857	AssignmentExpression	j = self -> contour [ self -> pole [ j ] . contour_index + 1 ]		5632432	0		=			
ANR	5632858	Identifier	j		5632432	0					
ANR	5632859	ArrayIndexing	self -> contour [ self -> pole [ j ] . contour_index + 1 ]		5632432	1					
ANR	5632860	PtrMemberAccess	self -> contour		5632432	0					
ANR	5632861	Identifier	self		5632432	0					
ANR	5632862	Identifier	contour		5632432	1					
ANR	5632863	AdditiveExpression	self -> pole [ j ] . contour_index + 1		5632432	1		+			
ANR	5632864	MemberAccess	self -> pole [ j ] . contour_index		5632432	0					
ANR	5632865	ArrayIndexing	self -> pole [ j ]		5632432	0					
ANR	5632866	PtrMemberAccess	self -> pole		5632432	0					
ANR	5632867	Identifier	self		5632432	0					
ANR	5632868	Identifier	pole		5632432	1					
ANR	5632869	Identifier	j		5632432	1					
ANR	5632870	Identifier	contour_index		5632432	1					
ANR	5632871	PrimaryExpression	1		5632432	1					
ANR	5632872	ContinueStatement	continue ;	2257:28:93267:93275	5632432	1	True				
ANR	5632873	CompoundStatement		49:20:2840:2840	5632432	2					
ANR	5632874	ExpressionStatement	jj = j	2261:24:93416:93422	5632432	0	True				
ANR	5632875	AssignmentExpression	jj = j		5632432	0		=			
ANR	5632876	Identifier	jj		5632432	0					
ANR	5632877	Identifier	j		5632432	1					
ANR	5632878	ExpressionStatement	"j = t1_hinter__segment_end ( self , j )"	2262:24:93448:93483	5632432	1	True				
ANR	5632879	AssignmentExpression	"j = t1_hinter__segment_end ( self , j )"		5632432	0		=			
ANR	5632880	Identifier	j		5632432	0					
ANR	5632881	CallExpression	"t1_hinter__segment_end ( self , j )"		5632432	1					
ANR	5632882	Callee	t1_hinter__segment_end		5632432	0					
ANR	5632883	Identifier	t1_hinter__segment_end		5632432	0					
ANR	5632884	ArgumentList	self		5632432	1					
ANR	5632885	Argument	self		5632432	0					
ANR	5632886	Identifier	self		5632432	0					
ANR	5632887	Argument	j		5632432	1					
ANR	5632888	Identifier	j		5632432	0					
ANR	5632889	IfStatement	if ( j <= jj )		5632432	2					
ANR	5632890	Condition	j <= jj	2263:28:93513:93519	5632432	0	True				
ANR	5632891	RelationalExpression	j <= jj		5632432	0		<=			
ANR	5632892	Identifier	j		5632432	0					
ANR	5632893	Identifier	jj		5632432	1					
ANR	5632894	ExpressionStatement	j = self -> contour [ self -> pole [ j ] . contour_index + 1 ]	2264:28:93582:93632	5632432	1	True				
ANR	5632895	AssignmentExpression	j = self -> contour [ self -> pole [ j ] . contour_index + 1 ]		5632432	0		=			
ANR	5632896	Identifier	j		5632432	0					
ANR	5632897	ArrayIndexing	self -> contour [ self -> pole [ j ] . contour_index + 1 ]		5632432	1					
ANR	5632898	PtrMemberAccess	self -> contour		5632432	0					
ANR	5632899	Identifier	self		5632432	0					
ANR	5632900	Identifier	contour		5632432	1					
ANR	5632901	AdditiveExpression	self -> pole [ j ] . contour_index + 1		5632432	1		+			
ANR	5632902	MemberAccess	self -> pole [ j ] . contour_index		5632432	0					
ANR	5632903	ArrayIndexing	self -> pole [ j ]		5632432	0					
ANR	5632904	PtrMemberAccess	self -> pole		5632432	0					
ANR	5632905	Identifier	self		5632432	0					
ANR	5632906	Identifier	pole		5632432	1					
ANR	5632907	Identifier	j		5632432	1					
ANR	5632908	Identifier	contour_index		5632432	1					
ANR	5632909	PrimaryExpression	1		5632432	1					
ANR	5632910	ReturnType	static void		5632432	1					
ANR	5632911	Identifier	t1_hinter__align_stem_commands		5632432	2					
ANR	5632912	ParameterList	t1_hinter * self		5632432	3					
ANR	5632913	Parameter	t1_hinter * self	2211:43:90486:90501	5632432	0	True				
ANR	5632914	ParameterType	t1_hinter *		5632432	0					
ANR	5632915	Identifier	self		5632432	1					
ANR	5632916	CFGEntryNode	ENTRY		5632432		True				
ANR	5632917	CFGExitNode	EXIT		5632432		True				
ANR	5632918	Symbol	self -> hint_range [ k ] . next		5632432						
ANR	5632919	Symbol	end_range_pole		5632432						
ANR	5632920	Symbol	& gc		5632432						
ANR	5632921	Symbol	t1_hinter__compute_aligned_coord		5632432						
ANR	5632922	Symbol	vstem		5632432						
ANR	5632923	Symbol	self -> hint [ i ] . boundary_length0		5632432						
ANR	5632924	Symbol	align		5632432						
ANR	5632925	Symbol	self -> hint [ i ] . boundary_length1		5632432						
ANR	5632926	Symbol	* self -> hint		5632432						
ANR	5632927	Symbol	* * self -> pole		5632432						
ANR	5632928	Symbol	self -> hint [ i ] . side_mask		5632432						
ANR	5632929	Symbol	* * * self		5632432						
ANR	5632930	Symbol	& quality		5632432						
ANR	5632931	Symbol	segment_index		5632432						
ANR	5632932	Symbol	* * j		5632432						
ANR	5632933	Symbol	botzn		5632432						
ANR	5632934	Symbol	self -> pole [ segment_index ] . gy		5632432						
ANR	5632935	Symbol	* self		5632432						
ANR	5632936	Symbol	self -> hint [ i ] . g1		5632432						
ANR	5632937	Symbol	self -> hint [ i ] . g0		5632432						
ANR	5632938	Symbol	beg_range_pole		5632432						
ANR	5632939	Symbol	unaligned		5632432						
ANR	5632940	Symbol	quality		5632432						
ANR	5632941	Symbol	self -> pole [ j ] . type		5632432						
ANR	5632942	Symbol	self -> contour		5632432						
ANR	5632943	Symbol	jj		5632432						
ANR	5632944	Symbol	max_int		5632432						
ANR	5632945	Symbol	self -> autohinting		5632432						
ANR	5632946	Symbol	* self -> pole		5632432						
ANR	5632947	Symbol	t1_hinter__skip_stem		5632432						
ANR	5632948	Symbol	* segment_index		5632432						
ANR	5632949	Symbol	horiz		5632432						
ANR	5632950	Symbol	* beg_range_pole		5632432						
ANR	5632951	Symbol	self -> pole [ j ] . contour_index		5632432						
ANR	5632952	Symbol	t1_hinter__segment_end		5632432						
ANR	5632953	Symbol	self -> pole [ beg_range_pole ] . type		5632432						
ANR	5632954	Symbol	closepath		5632432						
ANR	5632955	Symbol	self -> pole		5632432						
ANR	5632956	Symbol	self -> hint_range [ k ] . beg_pole		5632432						
ANR	5632957	Symbol	gc		5632432						
ANR	5632958	Symbol	hstem		5632432						
ANR	5632959	Symbol	t1_hinter__is_stem_hint_applicable		5632432						
ANR	5632960	Symbol	topzn		5632432						
ANR	5632961	Symbol	* self -> contour		5632432						
ANR	5632962	Symbol	self -> hint [ i ] . type		5632432						
ANR	5632963	Symbol	self -> hint		5632432						
ANR	5632964	Symbol	* * self		5632432						
ANR	5632965	Symbol	i		5632432						
ANR	5632966	Symbol	j		5632432						
ANR	5632967	Symbol	k		5632432						
ANR	5632968	Symbol	self -> hint_range		5632432						
ANR	5632969	Symbol	t1_hinter__find_stem_middle		5632432						
ANR	5632970	Symbol	* self -> hint_range		5632432						
ANR	5632971	Symbol	self -> hint_count		5632432						
ANR	5632972	Symbol	* i		5632432						
ANR	5632973	Symbol	* j		5632432						
ANR	5632974	Symbol	t		5632432						
ANR	5632975	Symbol	self -> hint [ i ] . range_index		5632432						
ANR	5632976	Symbol	* k		5632432						
ANR	5632977	Symbol	self		5632432						
ANR	5632978	Symbol	& t		5632432						
ANR	5632979	Symbol	self -> hint_range [ k ] . end_pole		5632432						
ANR	5632980	Symbol	* self -> pole [ j ] . contour_index		5632432						
ANR	5632981	Function	t1_hinter__unfix_opposite_to_common	2271:0:93727:96632							
ANR	5632982	FunctionDef	t1_hinter__unfix_opposite_to_common (t1_hinter * self)		5632981	0					
ANR	5632983	CompoundStatement		2272:0:93793:96632	5632981	0					
ANR	5632984	IdentifierDeclStatement	"int i , j , k , m , n ;"	2273:4:93868:93885	5632981	0	True				
ANR	5632985	IdentifierDecl	i		5632981	0					
ANR	5632986	IdentifierDeclType	int		5632981	0					
ANR	5632987	Identifier	i		5632981	1					
ANR	5632988	IdentifierDecl	j		5632981	1					
ANR	5632989	IdentifierDeclType	int		5632981	0					
ANR	5632990	Identifier	j		5632981	1					
ANR	5632991	IdentifierDecl	k		5632981	2					
ANR	5632992	IdentifierDeclType	int		5632981	0					
ANR	5632993	Identifier	k		5632981	1					
ANR	5632994	IdentifierDecl	m		5632981	3					
ANR	5632995	IdentifierDeclType	int		5632981	0					
ANR	5632996	Identifier	m		5632981	1					
ANR	5632997	IdentifierDecl	n		5632981	4					
ANR	5632998	IdentifierDeclType	int		5632981	0					
ANR	5632999	Identifier	n		5632981	1					
ANR	5633000	IdentifierDeclStatement	"t1_glyph_space_coord d , md ;"	2274:4:93891:93917	5632981	1	True				
ANR	5633001	IdentifierDecl	d		5632981	0					
ANR	5633002	IdentifierDeclType	t1_glyph_space_coord		5632981	0					
ANR	5633003	Identifier	d		5632981	1					
ANR	5633004	IdentifierDecl	md		5632981	1					
ANR	5633005	IdentifierDeclType	t1_glyph_space_coord		5632981	0					
ANR	5633006	Identifier	md		5632981	1					
ANR	5633007	IdentifierDeclStatement	"t1_glyph_space_coord * p_ci , * p_cj , * p_agj , agm ;"	2275:4:93923:93969	5632981	2	True				
ANR	5633008	IdentifierDecl	* p_ci		5632981	0					
ANR	5633009	IdentifierDeclType	t1_glyph_space_coord *		5632981	0					
ANR	5633010	Identifier	p_ci		5632981	1					
ANR	5633011	IdentifierDecl	* p_cj		5632981	1					
ANR	5633012	IdentifierDeclType	t1_glyph_space_coord *		5632981	0					
ANR	5633013	Identifier	p_cj		5632981	1					
ANR	5633014	IdentifierDecl	* p_agj		5632981	2					
ANR	5633015	IdentifierDeclType	t1_glyph_space_coord *		5632981	0					
ANR	5633016	Identifier	p_agj		5632981	1					
ANR	5633017	IdentifierDecl	agm		5632981	3					
ANR	5633018	IdentifierDeclType	t1_glyph_space_coord		5632981	0					
ANR	5633019	Identifier	agm		5632981	1					
ANR	5633020	IdentifierDeclStatement	"enum t1_align_type * p_aj , * p_ai , * p_oi , * p_oj , am ;"	2276:4:93975:94024	5632981	3	True				
ANR	5633021	IdentifierDecl	* p_aj		5632981	0					
ANR	5633022	IdentifierDeclType	enum t1_align_type *		5632981	0					
ANR	5633023	Identifier	p_aj		5632981	1					
ANR	5633024	IdentifierDecl	* p_ai		5632981	1					
ANR	5633025	IdentifierDeclType	enum t1_align_type *		5632981	0					
ANR	5633026	Identifier	p_ai		5632981	1					
ANR	5633027	IdentifierDecl	* p_oi		5632981	2					
ANR	5633028	IdentifierDeclType	enum t1_align_type *		5632981	0					
ANR	5633029	Identifier	p_oi		5632981	1					
ANR	5633030	IdentifierDecl	* p_oj		5632981	3					
ANR	5633031	IdentifierDeclType	enum t1_align_type *		5632981	0					
ANR	5633032	Identifier	p_oj		5632981	1					
ANR	5633033	IdentifierDecl	am		5632981	4					
ANR	5633034	IdentifierDeclType	enum t1_align_type		5632981	0					
ANR	5633035	Identifier	am		5632981	1					
ANR	5633036	ForStatement	for ( k = 0 ; k < 2 ; k ++ )		5632981	4					
ANR	5633037	ForInit	k = 0 ;	2278:9:94036:94041	5632981	0	True				
ANR	5633038	AssignmentExpression	k = 0		5632981	0		=			
ANR	5633039	Identifier	k		5632981	0					
ANR	5633040	PrimaryExpression	0		5632981	1					
ANR	5633041	Condition	k < 2	2278:16:94043:94047	5632981	1	True				
ANR	5633042	RelationalExpression	k < 2		5632981	0		<			
ANR	5633043	Identifier	k		5632981	0					
ANR	5633044	PrimaryExpression	2		5632981	1					
ANR	5633045	PostIncDecOperationExpression	k ++	2278:23:94050:94052	5632981	2	True				
ANR	5633046	Identifier	k		5632981	0					
ANR	5633047	IncDec	++		5632981	1					
ANR	5633048	CompoundStatement		7:28:261:261	5632981	3					
ANR	5633049	ForStatement	for ( i = 0 ; i < self -> hint_count ; i ++ )		5632981	0					
ANR	5633050	ForInit	i = 0 ;	2281:12:94208:94213	5632981	0	True				
ANR	5633051	AssignmentExpression	i = 0		5632981	0		=			
ANR	5633052	Identifier	i		5632981	0					
ANR	5633053	PrimaryExpression	0		5632981	1					
ANR	5633054	Condition	i < self -> hint_count	2281:19:94215:94234	5632981	1	True				
ANR	5633055	RelationalExpression	i < self -> hint_count		5632981	0		<			
ANR	5633056	Identifier	i		5632981	0					
ANR	5633057	PtrMemberAccess	self -> hint_count		5632981	1					
ANR	5633058	Identifier	self		5632981	0					
ANR	5633059	Identifier	hint_count		5632981	1					
ANR	5633060	PostIncDecOperationExpression	i ++	2281:41:94237:94239	5632981	2	True				
ANR	5633061	Identifier	i		5632981	0					
ANR	5633062	IncDec	++		5632981	1					
ANR	5633063	CompoundStatement		10:46:448:448	5632981	3					
ANR	5633064	IfStatement	if ( self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem )		5632981	0					
ANR	5633065	Condition	self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem	2282:16:94260:94317	5632981	0	True				
ANR	5633066	OrExpression	self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem		5632981	0		||			
ANR	5633067	EqualityExpression	self -> hint [ i ] . type == vstem		5632981	0		==			
ANR	5633068	MemberAccess	self -> hint [ i ] . type		5632981	0					
ANR	5633069	ArrayIndexing	self -> hint [ i ]		5632981	0					
ANR	5633070	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633071	Identifier	self		5632981	0					
ANR	5633072	Identifier	hint		5632981	1					
ANR	5633073	Identifier	i		5632981	1					
ANR	5633074	Identifier	type		5632981	1					
ANR	5633075	Identifier	vstem		5632981	1					
ANR	5633076	EqualityExpression	self -> hint [ i ] . type == hstem		5632981	1		==			
ANR	5633077	MemberAccess	self -> hint [ i ] . type		5632981	0					
ANR	5633078	ArrayIndexing	self -> hint [ i ]		5632981	0					
ANR	5633079	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633080	Identifier	self		5632981	0					
ANR	5633081	Identifier	hint		5632981	1					
ANR	5633082	Identifier	i		5632981	1					
ANR	5633083	Identifier	type		5632981	1					
ANR	5633084	Identifier	hstem		5632981	1					
ANR	5633085	CompoundStatement		11:76:526:526	5632981	1					
ANR	5633086	ExpressionStatement	p_ai = ( ! k ? & self -> hint [ i ] . aligned0 : & self -> hint [ i ] . aligned1 )	2283:16:94338:94401	5632981	0	True				
ANR	5633087	AssignmentExpression	p_ai = ( ! k ? & self -> hint [ i ] . aligned0 : & self -> hint [ i ] . aligned1 )		5632981	0		=			
ANR	5633088	Identifier	p_ai		5632981	0					
ANR	5633089	ConditionalExpression	! k ? & self -> hint [ i ] . aligned0 : & self -> hint [ i ] . aligned1		5632981	1					
ANR	5633090	Condition	! k		5632981	0					
ANR	5633091	UnaryOperationExpression	! k		5632981	0					
ANR	5633092	UnaryOperator	!		5632981	0					
ANR	5633093	Identifier	k		5632981	1					
ANR	5633094	UnaryOperationExpression	& self -> hint [ i ] . aligned0		5632981	1					
ANR	5633095	UnaryOperator	&		5632981	0					
ANR	5633096	MemberAccess	self -> hint [ i ] . aligned0		5632981	1					
ANR	5633097	ArrayIndexing	self -> hint [ i ]		5632981	0					
ANR	5633098	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633099	Identifier	self		5632981	0					
ANR	5633100	Identifier	hint		5632981	1					
ANR	5633101	Identifier	i		5632981	1					
ANR	5633102	Identifier	aligned0		5632981	1					
ANR	5633103	UnaryOperationExpression	& self -> hint [ i ] . aligned1		5632981	2					
ANR	5633104	UnaryOperator	&		5632981	0					
ANR	5633105	MemberAccess	self -> hint [ i ] . aligned1		5632981	1					
ANR	5633106	ArrayIndexing	self -> hint [ i ]		5632981	0					
ANR	5633107	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633108	Identifier	self		5632981	0					
ANR	5633109	Identifier	hint		5632981	1					
ANR	5633110	Identifier	i		5632981	1					
ANR	5633111	Identifier	aligned1		5632981	1					
ANR	5633112	ExpressionStatement	p_oi = ( ! k ? & self -> hint [ i ] . aligned1 : & self -> hint [ i ] . aligned0 )	2284:16:94419:94482	5632981	1	True				
ANR	5633113	AssignmentExpression	p_oi = ( ! k ? & self -> hint [ i ] . aligned1 : & self -> hint [ i ] . aligned0 )		5632981	0		=			
ANR	5633114	Identifier	p_oi		5632981	0					
ANR	5633115	ConditionalExpression	! k ? & self -> hint [ i ] . aligned1 : & self -> hint [ i ] . aligned0		5632981	1					
ANR	5633116	Condition	! k		5632981	0					
ANR	5633117	UnaryOperationExpression	! k		5632981	0					
ANR	5633118	UnaryOperator	!		5632981	0					
ANR	5633119	Identifier	k		5632981	1					
ANR	5633120	UnaryOperationExpression	& self -> hint [ i ] . aligned1		5632981	1					
ANR	5633121	UnaryOperator	&		5632981	0					
ANR	5633122	MemberAccess	self -> hint [ i ] . aligned1		5632981	1					
ANR	5633123	ArrayIndexing	self -> hint [ i ]		5632981	0					
ANR	5633124	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633125	Identifier	self		5632981	0					
ANR	5633126	Identifier	hint		5632981	1					
ANR	5633127	Identifier	i		5632981	1					
ANR	5633128	Identifier	aligned1		5632981	1					
ANR	5633129	UnaryOperationExpression	& self -> hint [ i ] . aligned0		5632981	2					
ANR	5633130	UnaryOperator	&		5632981	0					
ANR	5633131	MemberAccess	self -> hint [ i ] . aligned0		5632981	1					
ANR	5633132	ArrayIndexing	self -> hint [ i ]		5632981	0					
ANR	5633133	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633134	Identifier	self		5632981	0					
ANR	5633135	Identifier	hint		5632981	1					
ANR	5633136	Identifier	i		5632981	1					
ANR	5633137	Identifier	aligned0		5632981	1					
ANR	5633138	IfStatement	if ( * p_ai > weak && * p_ai == * p_oi )		5632981	2					
ANR	5633139	Condition	* p_ai > weak && * p_ai == * p_oi	2285:20:94504:94533	5632981	0	True				
ANR	5633140	AndExpression	* p_ai > weak && * p_ai == * p_oi		5632981	0		&&			
ANR	5633141	RelationalExpression	* p_ai > weak		5632981	0		>			
ANR	5633142	UnaryOperationExpression	* p_ai		5632981	0					
ANR	5633143	UnaryOperator	*		5632981	0					
ANR	5633144	Identifier	p_ai		5632981	1					
ANR	5633145	Identifier	weak		5632981	1					
ANR	5633146	EqualityExpression	* p_ai == * p_oi		5632981	1		==			
ANR	5633147	UnaryOperationExpression	* p_ai		5632981	0					
ANR	5633148	UnaryOperator	*		5632981	0					
ANR	5633149	Identifier	p_ai		5632981	1					
ANR	5633150	UnaryOperationExpression	* p_oi		5632981	1					
ANR	5633151	UnaryOperator	*		5632981	0					
ANR	5633152	Identifier	p_oi		5632981	1					
ANR	5633153	CompoundStatement		14:52:742:742	5632981	1					
ANR	5633154	ExpressionStatement	p_ci = ( ! k ? & self -> hint [ i ] . g0 : & self -> hint [ i ] . g1 )	2286:20:94558:94609	5632981	0	True				
ANR	5633155	AssignmentExpression	p_ci = ( ! k ? & self -> hint [ i ] . g0 : & self -> hint [ i ] . g1 )		5632981	0		=			
ANR	5633156	Identifier	p_ci		5632981	0					
ANR	5633157	ConditionalExpression	! k ? & self -> hint [ i ] . g0 : & self -> hint [ i ] . g1		5632981	1					
ANR	5633158	Condition	! k		5632981	0					
ANR	5633159	UnaryOperationExpression	! k		5632981	0					
ANR	5633160	UnaryOperator	!		5632981	0					
ANR	5633161	Identifier	k		5632981	1					
ANR	5633162	UnaryOperationExpression	& self -> hint [ i ] . g0		5632981	1					
ANR	5633163	UnaryOperator	&		5632981	0					
ANR	5633164	MemberAccess	self -> hint [ i ] . g0		5632981	1					
ANR	5633165	ArrayIndexing	self -> hint [ i ]		5632981	0					
ANR	5633166	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633167	Identifier	self		5632981	0					
ANR	5633168	Identifier	hint		5632981	1					
ANR	5633169	Identifier	i		5632981	1					
ANR	5633170	Identifier	g0		5632981	1					
ANR	5633171	UnaryOperationExpression	& self -> hint [ i ] . g1		5632981	2					
ANR	5633172	UnaryOperator	&		5632981	0					
ANR	5633173	MemberAccess	self -> hint [ i ] . g1		5632981	1					
ANR	5633174	ArrayIndexing	self -> hint [ i ]		5632981	0					
ANR	5633175	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633176	Identifier	self		5632981	0					
ANR	5633177	Identifier	hint		5632981	1					
ANR	5633178	Identifier	i		5632981	1					
ANR	5633179	Identifier	g1		5632981	1					
ANR	5633180	ExpressionStatement	md = any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )	2287:20:94631:94680	5632981	1	True				
ANR	5633181	AssignmentExpression	md = any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )		5632981	0		=			
ANR	5633182	Identifier	md		5632981	0					
ANR	5633183	CallExpression	any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )		5632981	1					
ANR	5633184	Callee	any_abs		5632981	0					
ANR	5633185	Identifier	any_abs		5632981	0					
ANR	5633186	ArgumentList	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		5632981	1					
ANR	5633187	Argument	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		5632981	0					
ANR	5633188	AdditiveExpression	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		5632981	0		-			
ANR	5633189	MemberAccess	self -> hint [ i ] . g1		5632981	0					
ANR	5633190	ArrayIndexing	self -> hint [ i ]		5632981	0					
ANR	5633191	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633192	Identifier	self		5632981	0					
ANR	5633193	Identifier	hint		5632981	1					
ANR	5633194	Identifier	i		5632981	1					
ANR	5633195	Identifier	g1		5632981	1					
ANR	5633196	MemberAccess	self -> hint [ i ] . g0		5632981	1					
ANR	5633197	ArrayIndexing	self -> hint [ i ]		5632981	0					
ANR	5633198	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633199	Identifier	self		5632981	0					
ANR	5633200	Identifier	hint		5632981	1					
ANR	5633201	Identifier	i		5632981	1					
ANR	5633202	Identifier	g0		5632981	1					
ANR	5633203	ExpressionStatement	m = i	2288:20:94702:94707	5632981	2	True				
ANR	5633204	AssignmentExpression	m = i		5632981	0		=			
ANR	5633205	Identifier	m		5632981	0					
ANR	5633206	Identifier	i		5632981	1					
ANR	5633207	ExpressionStatement	am = * p_ai	2289:20:94729:94739	5632981	3	True				
ANR	5633208	AssignmentExpression	am = * p_ai		5632981	0		=			
ANR	5633209	Identifier	am		5632981	0					
ANR	5633210	UnaryOperationExpression	* p_ai		5632981	1					
ANR	5633211	UnaryOperator	*		5632981	0					
ANR	5633212	Identifier	p_ai		5632981	1					
ANR	5633213	ExpressionStatement	agm = ( ! k ? self -> hint [ m ] . ag0 : self -> hint [ m ] . ag1 )	2290:20:94761:94811	5632981	4	True				
ANR	5633214	AssignmentExpression	agm = ( ! k ? self -> hint [ m ] . ag0 : self -> hint [ m ] . ag1 )		5632981	0		=			
ANR	5633215	Identifier	agm		5632981	0					
ANR	5633216	ConditionalExpression	! k ? self -> hint [ m ] . ag0 : self -> hint [ m ] . ag1		5632981	1					
ANR	5633217	Condition	! k		5632981	0					
ANR	5633218	UnaryOperationExpression	! k		5632981	0					
ANR	5633219	UnaryOperator	!		5632981	0					
ANR	5633220	Identifier	k		5632981	1					
ANR	5633221	MemberAccess	self -> hint [ m ] . ag0		5632981	1					
ANR	5633222	ArrayIndexing	self -> hint [ m ]		5632981	0					
ANR	5633223	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633224	Identifier	self		5632981	0					
ANR	5633225	Identifier	hint		5632981	1					
ANR	5633226	Identifier	m		5632981	1					
ANR	5633227	Identifier	ag0		5632981	1					
ANR	5633228	MemberAccess	self -> hint [ m ] . ag1		5632981	2					
ANR	5633229	ArrayIndexing	self -> hint [ m ]		5632981	0					
ANR	5633230	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633231	Identifier	self		5632981	0					
ANR	5633232	Identifier	hint		5632981	1					
ANR	5633233	Identifier	m		5632981	1					
ANR	5633234	Identifier	ag1		5632981	1					
ANR	5633235	ExpressionStatement	n = 0	2291:20:94833:94838	5632981	5	True				
ANR	5633236	AssignmentExpression	n = 0		5632981	0		=			
ANR	5633237	Identifier	n		5632981	0					
ANR	5633238	PrimaryExpression	0		5632981	1					
ANR	5633239	ForStatement	for ( j = 0 ; j < self -> hint_count ; j ++ )		5632981	6					
ANR	5633240	ForInit	j = 0 ;	2292:24:94864:94869	5632981	0	True				
ANR	5633241	AssignmentExpression	j = 0		5632981	0		=			
ANR	5633242	Identifier	j		5632981	0					
ANR	5633243	PrimaryExpression	0		5632981	1					
ANR	5633244	Condition	j < self -> hint_count	2292:31:94871:94890	5632981	1	True				
ANR	5633245	RelationalExpression	j < self -> hint_count		5632981	0		<			
ANR	5633246	Identifier	j		5632981	0					
ANR	5633247	PtrMemberAccess	self -> hint_count		5632981	1					
ANR	5633248	Identifier	self		5632981	0					
ANR	5633249	Identifier	hint_count		5632981	1					
ANR	5633250	PostIncDecOperationExpression	j ++	2292:53:94893:94895	5632981	2	True				
ANR	5633251	Identifier	j		5632981	0					
ANR	5633252	IncDec	++		5632981	1					
ANR	5633253	CompoundStatement		21:58:1104:1104	5632981	3					
ANR	5633254	IfStatement	if ( j != i && self -> hint [ i ] . type == self -> hint [ j ] . type )		5632981	0					
ANR	5633255	Condition	j != i && self -> hint [ i ] . type == self -> hint [ j ] . type	2293:28:94928:94977	5632981	0	True				
ANR	5633256	AndExpression	j != i && self -> hint [ i ] . type == self -> hint [ j ] . type		5632981	0		&&			
ANR	5633257	EqualityExpression	j != i		5632981	0		!=			
ANR	5633258	Identifier	j		5632981	0					
ANR	5633259	Identifier	i		5632981	1					
ANR	5633260	EqualityExpression	self -> hint [ i ] . type == self -> hint [ j ] . type		5632981	1		==			
ANR	5633261	MemberAccess	self -> hint [ i ] . type		5632981	0					
ANR	5633262	ArrayIndexing	self -> hint [ i ]		5632981	0					
ANR	5633263	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633264	Identifier	self		5632981	0					
ANR	5633265	Identifier	hint		5632981	1					
ANR	5633266	Identifier	i		5632981	1					
ANR	5633267	Identifier	type		5632981	1					
ANR	5633268	MemberAccess	self -> hint [ j ] . type		5632981	1					
ANR	5633269	ArrayIndexing	self -> hint [ j ]		5632981	0					
ANR	5633270	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633271	Identifier	self		5632981	0					
ANR	5633272	Identifier	hint		5632981	1					
ANR	5633273	Identifier	j		5632981	1					
ANR	5633274	Identifier	type		5632981	1					
ANR	5633275	CompoundStatement		22:80:1186:1186	5632981	1					
ANR	5633276	ExpressionStatement	p_cj = ( ! k ? & self -> hint [ j ] . g0 : & self -> hint [ j ] . g1 )	2294:28:95010:95061	5632981	0	True				
ANR	5633277	AssignmentExpression	p_cj = ( ! k ? & self -> hint [ j ] . g0 : & self -> hint [ j ] . g1 )		5632981	0		=			
ANR	5633278	Identifier	p_cj		5632981	0					
ANR	5633279	ConditionalExpression	! k ? & self -> hint [ j ] . g0 : & self -> hint [ j ] . g1		5632981	1					
ANR	5633280	Condition	! k		5632981	0					
ANR	5633281	UnaryOperationExpression	! k		5632981	0					
ANR	5633282	UnaryOperator	!		5632981	0					
ANR	5633283	Identifier	k		5632981	1					
ANR	5633284	UnaryOperationExpression	& self -> hint [ j ] . g0		5632981	1					
ANR	5633285	UnaryOperator	&		5632981	0					
ANR	5633286	MemberAccess	self -> hint [ j ] . g0		5632981	1					
ANR	5633287	ArrayIndexing	self -> hint [ j ]		5632981	0					
ANR	5633288	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633289	Identifier	self		5632981	0					
ANR	5633290	Identifier	hint		5632981	1					
ANR	5633291	Identifier	j		5632981	1					
ANR	5633292	Identifier	g0		5632981	1					
ANR	5633293	UnaryOperationExpression	& self -> hint [ j ] . g1		5632981	2					
ANR	5633294	UnaryOperator	&		5632981	0					
ANR	5633295	MemberAccess	self -> hint [ j ] . g1		5632981	1					
ANR	5633296	ArrayIndexing	self -> hint [ j ]		5632981	0					
ANR	5633297	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633298	Identifier	self		5632981	0					
ANR	5633299	Identifier	hint		5632981	1					
ANR	5633300	Identifier	j		5632981	1					
ANR	5633301	Identifier	g1		5632981	1					
ANR	5633302	IfStatement	if ( * p_ci == * p_cj )		5632981	1					
ANR	5633303	Condition	* p_ci == * p_cj	2295:32:95095:95108	5632981	0	True				
ANR	5633304	EqualityExpression	* p_ci == * p_cj		5632981	0		==			
ANR	5633305	UnaryOperationExpression	* p_ci		5632981	0					
ANR	5633306	UnaryOperator	*		5632981	0					
ANR	5633307	Identifier	p_ci		5632981	1					
ANR	5633308	UnaryOperationExpression	* p_cj		5632981	1					
ANR	5633309	UnaryOperator	*		5632981	0					
ANR	5633310	Identifier	p_cj		5632981	1					
ANR	5633311	CompoundStatement		24:48:1317:1317	5632981	1					
ANR	5633312	ExpressionStatement	n ++	2296:32:95145:95148	5632981	0	True				
ANR	5633313	PostIncDecOperationExpression	n ++		5632981	0					
ANR	5633314	Identifier	n		5632981	0					
ANR	5633315	IncDec	++		5632981	1					
ANR	5633316	ExpressionStatement	p_aj = ( ! k ? & self -> hint [ j ] . aligned0 : & self -> hint [ j ] . aligned1 )	2297:32:95182:95245	5632981	1	True				
ANR	5633317	AssignmentExpression	p_aj = ( ! k ? & self -> hint [ j ] . aligned0 : & self -> hint [ j ] . aligned1 )		5632981	0		=			
ANR	5633318	Identifier	p_aj		5632981	0					
ANR	5633319	ConditionalExpression	! k ? & self -> hint [ j ] . aligned0 : & self -> hint [ j ] . aligned1		5632981	1					
ANR	5633320	Condition	! k		5632981	0					
ANR	5633321	UnaryOperationExpression	! k		5632981	0					
ANR	5633322	UnaryOperator	!		5632981	0					
ANR	5633323	Identifier	k		5632981	1					
ANR	5633324	UnaryOperationExpression	& self -> hint [ j ] . aligned0		5632981	1					
ANR	5633325	UnaryOperator	&		5632981	0					
ANR	5633326	MemberAccess	self -> hint [ j ] . aligned0		5632981	1					
ANR	5633327	ArrayIndexing	self -> hint [ j ]		5632981	0					
ANR	5633328	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633329	Identifier	self		5632981	0					
ANR	5633330	Identifier	hint		5632981	1					
ANR	5633331	Identifier	j		5632981	1					
ANR	5633332	Identifier	aligned0		5632981	1					
ANR	5633333	UnaryOperationExpression	& self -> hint [ j ] . aligned1		5632981	2					
ANR	5633334	UnaryOperator	&		5632981	0					
ANR	5633335	MemberAccess	self -> hint [ j ] . aligned1		5632981	1					
ANR	5633336	ArrayIndexing	self -> hint [ j ]		5632981	0					
ANR	5633337	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633338	Identifier	self		5632981	0					
ANR	5633339	Identifier	hint		5632981	1					
ANR	5633340	Identifier	j		5632981	1					
ANR	5633341	Identifier	aligned1		5632981	1					
ANR	5633342	ExpressionStatement	d = any_abs ( self -> hint [ j ] . g1 - self -> hint [ j ] . g0 )	2298:32:95279:95327	5632981	2	True				
ANR	5633343	AssignmentExpression	d = any_abs ( self -> hint [ j ] . g1 - self -> hint [ j ] . g0 )		5632981	0		=			
ANR	5633344	Identifier	d		5632981	0					
ANR	5633345	CallExpression	any_abs ( self -> hint [ j ] . g1 - self -> hint [ j ] . g0 )		5632981	1					
ANR	5633346	Callee	any_abs		5632981	0					
ANR	5633347	Identifier	any_abs		5632981	0					
ANR	5633348	ArgumentList	self -> hint [ j ] . g1 - self -> hint [ j ] . g0		5632981	1					
ANR	5633349	Argument	self -> hint [ j ] . g1 - self -> hint [ j ] . g0		5632981	0					
ANR	5633350	AdditiveExpression	self -> hint [ j ] . g1 - self -> hint [ j ] . g0		5632981	0		-			
ANR	5633351	MemberAccess	self -> hint [ j ] . g1		5632981	0					
ANR	5633352	ArrayIndexing	self -> hint [ j ]		5632981	0					
ANR	5633353	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633354	Identifier	self		5632981	0					
ANR	5633355	Identifier	hint		5632981	1					
ANR	5633356	Identifier	j		5632981	1					
ANR	5633357	Identifier	g1		5632981	1					
ANR	5633358	MemberAccess	self -> hint [ j ] . g0		5632981	1					
ANR	5633359	ArrayIndexing	self -> hint [ j ]		5632981	0					
ANR	5633360	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633361	Identifier	self		5632981	0					
ANR	5633362	Identifier	hint		5632981	1					
ANR	5633363	Identifier	j		5632981	1					
ANR	5633364	Identifier	g0		5632981	1					
ANR	5633365	IfStatement	if ( am < * p_aj )		5632981	3					
ANR	5633366	Condition	am < * p_aj	2299:36:95365:95374	5632981	0	True				
ANR	5633367	RelationalExpression	am < * p_aj		5632981	0		<			
ANR	5633368	Identifier	am		5632981	0					
ANR	5633369	UnaryOperationExpression	* p_aj		5632981	1					
ANR	5633370	UnaryOperator	*		5632981	0					
ANR	5633371	Identifier	p_aj		5632981	1					
ANR	5633372	CompoundStatement		28:48:1583:1583	5632981	1					
ANR	5633373	ExpressionStatement	md = d	2300:36:95415:95421	5632981	0	True				
ANR	5633374	AssignmentExpression	md = d		5632981	0		=			
ANR	5633375	Identifier	md		5632981	0					
ANR	5633376	Identifier	d		5632981	1					
ANR	5633377	ExpressionStatement	m = j	2301:36:95459:95464	5632981	1	True				
ANR	5633378	AssignmentExpression	m = j		5632981	0		=			
ANR	5633379	Identifier	m		5632981	0					
ANR	5633380	Identifier	j		5632981	1					
ANR	5633381	ExpressionStatement	am = * p_aj	2302:36:95502:95512	5632981	2	True				
ANR	5633382	AssignmentExpression	am = * p_aj		5632981	0		=			
ANR	5633383	Identifier	am		5632981	0					
ANR	5633384	UnaryOperationExpression	* p_aj		5632981	1					
ANR	5633385	UnaryOperator	*		5632981	0					
ANR	5633386	Identifier	p_aj		5632981	1					
ANR	5633387	ExpressionStatement	agm = ( ! k ? self -> hint [ m ] . ag0 : self -> hint [ m ] . ag1 )	2303:36:95550:95600	5632981	3	True				
ANR	5633388	AssignmentExpression	agm = ( ! k ? self -> hint [ m ] . ag0 : self -> hint [ m ] . ag1 )		5632981	0		=			
ANR	5633389	Identifier	agm		5632981	0					
ANR	5633390	ConditionalExpression	! k ? self -> hint [ m ] . ag0 : self -> hint [ m ] . ag1		5632981	1					
ANR	5633391	Condition	! k		5632981	0					
ANR	5633392	UnaryOperationExpression	! k		5632981	0					
ANR	5633393	UnaryOperator	!		5632981	0					
ANR	5633394	Identifier	k		5632981	1					
ANR	5633395	MemberAccess	self -> hint [ m ] . ag0		5632981	1					
ANR	5633396	ArrayIndexing	self -> hint [ m ]		5632981	0					
ANR	5633397	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633398	Identifier	self		5632981	0					
ANR	5633399	Identifier	hint		5632981	1					
ANR	5633400	Identifier	m		5632981	1					
ANR	5633401	Identifier	ag0		5632981	1					
ANR	5633402	MemberAccess	self -> hint [ m ] . ag1		5632981	2					
ANR	5633403	ArrayIndexing	self -> hint [ m ]		5632981	0					
ANR	5633404	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633405	Identifier	self		5632981	0					
ANR	5633406	Identifier	hint		5632981	1					
ANR	5633407	Identifier	m		5632981	1					
ANR	5633408	Identifier	ag1		5632981	1					
ANR	5633409	IfStatement	if ( md < d )		5632981	4					
ANR	5633410	Condition	md < d	2304:38:95640:95645	5632981	0	True				
ANR	5633411	RelationalExpression	md < d		5632981	0		<			
ANR	5633412	Identifier	md		5632981	0					
ANR	5633413	Identifier	d		5632981	1					
ANR	5633414	CompoundStatement		33:46:1854:1854	5632981	1					
ANR	5633415	ExpressionStatement	md = d	2305:36:95686:95692	5632981	0	True				
ANR	5633416	AssignmentExpression	md = d		5632981	0		=			
ANR	5633417	Identifier	md		5632981	0					
ANR	5633418	Identifier	d		5632981	1					
ANR	5633419	IfStatement	if ( n )		5632981	7					
ANR	5633420	Condition	n	2310:24:95830:95830	5632981	0	True				
ANR	5633421	Identifier	n		5632981	0					
ANR	5633422	CompoundStatement		39:27:2039:2039	5632981	1					
ANR	5633423	ForStatement	for ( j = 0 ; j < self -> hint_count ; j ++ )		5632981	0					
ANR	5633424	ForInit	j = 0 ;	2311:28:95863:95868	5632981	0	True				
ANR	5633425	AssignmentExpression	j = 0		5632981	0		=			
ANR	5633426	Identifier	j		5632981	0					
ANR	5633427	PrimaryExpression	0		5632981	1					
ANR	5633428	Condition	j < self -> hint_count	2311:35:95870:95889	5632981	1	True				
ANR	5633429	RelationalExpression	j < self -> hint_count		5632981	0		<			
ANR	5633430	Identifier	j		5632981	0					
ANR	5633431	PtrMemberAccess	self -> hint_count		5632981	1					
ANR	5633432	Identifier	self		5632981	0					
ANR	5633433	Identifier	hint_count		5632981	1					
ANR	5633434	PostIncDecOperationExpression	j ++	2311:57:95892:95894	5632981	2	True				
ANR	5633435	Identifier	j		5632981	0					
ANR	5633436	IncDec	++		5632981	1					
ANR	5633437	CompoundStatement		40:62:2103:2103	5632981	3					
ANR	5633438	ExpressionStatement	p_cj = ( ! k ? & self -> hint [ j ] . g0 : & self -> hint [ j ] . g1 )	2312:28:95927:95978	5632981	0	True				
ANR	5633439	AssignmentExpression	p_cj = ( ! k ? & self -> hint [ j ] . g0 : & self -> hint [ j ] . g1 )		5632981	0		=			
ANR	5633440	Identifier	p_cj		5632981	0					
ANR	5633441	ConditionalExpression	! k ? & self -> hint [ j ] . g0 : & self -> hint [ j ] . g1		5632981	1					
ANR	5633442	Condition	! k		5632981	0					
ANR	5633443	UnaryOperationExpression	! k		5632981	0					
ANR	5633444	UnaryOperator	!		5632981	0					
ANR	5633445	Identifier	k		5632981	1					
ANR	5633446	UnaryOperationExpression	& self -> hint [ j ] . g0		5632981	1					
ANR	5633447	UnaryOperator	&		5632981	0					
ANR	5633448	MemberAccess	self -> hint [ j ] . g0		5632981	1					
ANR	5633449	ArrayIndexing	self -> hint [ j ]		5632981	0					
ANR	5633450	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633451	Identifier	self		5632981	0					
ANR	5633452	Identifier	hint		5632981	1					
ANR	5633453	Identifier	j		5632981	1					
ANR	5633454	Identifier	g0		5632981	1					
ANR	5633455	UnaryOperationExpression	& self -> hint [ j ] . g1		5632981	2					
ANR	5633456	UnaryOperator	&		5632981	0					
ANR	5633457	MemberAccess	self -> hint [ j ] . g1		5632981	1					
ANR	5633458	ArrayIndexing	self -> hint [ j ]		5632981	0					
ANR	5633459	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633460	Identifier	self		5632981	0					
ANR	5633461	Identifier	hint		5632981	1					
ANR	5633462	Identifier	j		5632981	1					
ANR	5633463	Identifier	g1		5632981	1					
ANR	5633464	IfStatement	if ( * p_ci == * p_cj )		5632981	1					
ANR	5633465	Condition	* p_ci == * p_cj	2313:32:96012:96025	5632981	0	True				
ANR	5633466	EqualityExpression	* p_ci == * p_cj		5632981	0		==			
ANR	5633467	UnaryOperationExpression	* p_ci		5632981	0					
ANR	5633468	UnaryOperator	*		5632981	0					
ANR	5633469	Identifier	p_ci		5632981	1					
ANR	5633470	UnaryOperationExpression	* p_cj		5632981	1					
ANR	5633471	UnaryOperator	*		5632981	0					
ANR	5633472	Identifier	p_cj		5632981	1					
ANR	5633473	CompoundStatement		42:48:2234:2234	5632981	1					
ANR	5633474	ExpressionStatement	p_aj = ( ! k ? & self -> hint [ j ] . aligned0 : & self -> hint [ j ] . aligned1 )	2314:32:96062:96125	5632981	0	True				
ANR	5633475	AssignmentExpression	p_aj = ( ! k ? & self -> hint [ j ] . aligned0 : & self -> hint [ j ] . aligned1 )		5632981	0		=			
ANR	5633476	Identifier	p_aj		5632981	0					
ANR	5633477	ConditionalExpression	! k ? & self -> hint [ j ] . aligned0 : & self -> hint [ j ] . aligned1		5632981	1					
ANR	5633478	Condition	! k		5632981	0					
ANR	5633479	UnaryOperationExpression	! k		5632981	0					
ANR	5633480	UnaryOperator	!		5632981	0					
ANR	5633481	Identifier	k		5632981	1					
ANR	5633482	UnaryOperationExpression	& self -> hint [ j ] . aligned0		5632981	1					
ANR	5633483	UnaryOperator	&		5632981	0					
ANR	5633484	MemberAccess	self -> hint [ j ] . aligned0		5632981	1					
ANR	5633485	ArrayIndexing	self -> hint [ j ]		5632981	0					
ANR	5633486	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633487	Identifier	self		5632981	0					
ANR	5633488	Identifier	hint		5632981	1					
ANR	5633489	Identifier	j		5632981	1					
ANR	5633490	Identifier	aligned0		5632981	1					
ANR	5633491	UnaryOperationExpression	& self -> hint [ j ] . aligned1		5632981	2					
ANR	5633492	UnaryOperator	&		5632981	0					
ANR	5633493	MemberAccess	self -> hint [ j ] . aligned1		5632981	1					
ANR	5633494	ArrayIndexing	self -> hint [ j ]		5632981	0					
ANR	5633495	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633496	Identifier	self		5632981	0					
ANR	5633497	Identifier	hint		5632981	1					
ANR	5633498	Identifier	j		5632981	1					
ANR	5633499	Identifier	aligned1		5632981	1					
ANR	5633500	ExpressionStatement	p_oj = ( ! k ? & self -> hint [ j ] . aligned1 : & self -> hint [ j ] . aligned0 )	2315:32:96159:96222	5632981	1	True				
ANR	5633501	AssignmentExpression	p_oj = ( ! k ? & self -> hint [ j ] . aligned1 : & self -> hint [ j ] . aligned0 )		5632981	0		=			
ANR	5633502	Identifier	p_oj		5632981	0					
ANR	5633503	ConditionalExpression	! k ? & self -> hint [ j ] . aligned1 : & self -> hint [ j ] . aligned0		5632981	1					
ANR	5633504	Condition	! k		5632981	0					
ANR	5633505	UnaryOperationExpression	! k		5632981	0					
ANR	5633506	UnaryOperator	!		5632981	0					
ANR	5633507	Identifier	k		5632981	1					
ANR	5633508	UnaryOperationExpression	& self -> hint [ j ] . aligned1		5632981	1					
ANR	5633509	UnaryOperator	&		5632981	0					
ANR	5633510	MemberAccess	self -> hint [ j ] . aligned1		5632981	1					
ANR	5633511	ArrayIndexing	self -> hint [ j ]		5632981	0					
ANR	5633512	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633513	Identifier	self		5632981	0					
ANR	5633514	Identifier	hint		5632981	1					
ANR	5633515	Identifier	j		5632981	1					
ANR	5633516	Identifier	aligned1		5632981	1					
ANR	5633517	UnaryOperationExpression	& self -> hint [ j ] . aligned0		5632981	2					
ANR	5633518	UnaryOperator	&		5632981	0					
ANR	5633519	MemberAccess	self -> hint [ j ] . aligned0		5632981	1					
ANR	5633520	ArrayIndexing	self -> hint [ j ]		5632981	0					
ANR	5633521	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633522	Identifier	self		5632981	0					
ANR	5633523	Identifier	hint		5632981	1					
ANR	5633524	Identifier	j		5632981	1					
ANR	5633525	Identifier	aligned0		5632981	1					
ANR	5633526	ExpressionStatement	p_agj = ( ! k ? & self -> hint [ j ] . ag0 : & self -> hint [ j ] . ag1 )	2316:32:96256:96310	5632981	2	True				
ANR	5633527	AssignmentExpression	p_agj = ( ! k ? & self -> hint [ j ] . ag0 : & self -> hint [ j ] . ag1 )		5632981	0		=			
ANR	5633528	Identifier	p_agj		5632981	0					
ANR	5633529	ConditionalExpression	! k ? & self -> hint [ j ] . ag0 : & self -> hint [ j ] . ag1		5632981	1					
ANR	5633530	Condition	! k		5632981	0					
ANR	5633531	UnaryOperationExpression	! k		5632981	0					
ANR	5633532	UnaryOperator	!		5632981	0					
ANR	5633533	Identifier	k		5632981	1					
ANR	5633534	UnaryOperationExpression	& self -> hint [ j ] . ag0		5632981	1					
ANR	5633535	UnaryOperator	&		5632981	0					
ANR	5633536	MemberAccess	self -> hint [ j ] . ag0		5632981	1					
ANR	5633537	ArrayIndexing	self -> hint [ j ]		5632981	0					
ANR	5633538	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633539	Identifier	self		5632981	0					
ANR	5633540	Identifier	hint		5632981	1					
ANR	5633541	Identifier	j		5632981	1					
ANR	5633542	Identifier	ag0		5632981	1					
ANR	5633543	UnaryOperationExpression	& self -> hint [ j ] . ag1		5632981	2					
ANR	5633544	UnaryOperator	&		5632981	0					
ANR	5633545	MemberAccess	self -> hint [ j ] . ag1		5632981	1					
ANR	5633546	ArrayIndexing	self -> hint [ j ]		5632981	0					
ANR	5633547	PtrMemberAccess	self -> hint		5632981	0					
ANR	5633548	Identifier	self		5632981	0					
ANR	5633549	Identifier	hint		5632981	1					
ANR	5633550	Identifier	j		5632981	1					
ANR	5633551	Identifier	ag1		5632981	1					
ANR	5633552	ExpressionStatement	* p_aj = am	2317:32:96344:96354	5632981	3	True				
ANR	5633553	AssignmentExpression	* p_aj = am		5632981	0		=			
ANR	5633554	UnaryOperationExpression	* p_aj		5632981	0					
ANR	5633555	UnaryOperator	*		5632981	0					
ANR	5633556	Identifier	p_aj		5632981	1					
ANR	5633557	Identifier	am		5632981	1					
ANR	5633558	IfStatement	if ( * p_oj == aligned )		5632981	4					
ANR	5633559	Condition	* p_oj == aligned	2318:36:96392:96407	5632981	0	True				
ANR	5633560	EqualityExpression	* p_oj == aligned		5632981	0		==			
ANR	5633561	UnaryOperationExpression	* p_oj		5632981	0					
ANR	5633562	UnaryOperator	*		5632981	0					
ANR	5633563	Identifier	p_oj		5632981	1					
ANR	5633564	Identifier	aligned		5632981	1					
ANR	5633565	ExpressionStatement	* p_oj = weak	2319:36:96446:96458	5632981	1	True				
ANR	5633566	AssignmentExpression	* p_oj = weak		5632981	0		=			
ANR	5633567	UnaryOperationExpression	* p_oj		5632981	0					
ANR	5633568	UnaryOperator	*		5632981	0					
ANR	5633569	Identifier	p_oj		5632981	1					
ANR	5633570	Identifier	weak		5632981	1					
ANR	5633571	ExpressionStatement	* p_agj = agm	2320:32:96492:96504	5632981	5	True				
ANR	5633572	AssignmentExpression	* p_agj = agm		5632981	0		=			
ANR	5633573	UnaryOperationExpression	* p_agj		5632981	0					
ANR	5633574	UnaryOperator	*		5632981	0					
ANR	5633575	Identifier	p_agj		5632981	1					
ANR	5633576	Identifier	agm		5632981	1					
ANR	5633577	ReturnType	static void		5632981	1					
ANR	5633578	Identifier	t1_hinter__unfix_opposite_to_common		5632981	2					
ANR	5633579	ParameterList	t1_hinter * self		5632981	3					
ANR	5633580	Parameter	t1_hinter * self	2271:48:93775:93790	5632981	0	True				
ANR	5633581	ParameterType	t1_hinter *		5632981	0					
ANR	5633582	Identifier	self		5632981	1					
ANR	5633583	CFGEntryNode	ENTRY		5632981		True				
ANR	5633584	CFGExitNode	EXIT		5632981		True				
ANR	5633585	Symbol	agm		5632981						
ANR	5633586	Symbol	* p_agj		5632981						
ANR	5633587	Symbol	vstem		5632981						
ANR	5633588	Symbol	& self -> hint [ j ] . g0		5632981						
ANR	5633589	Symbol	& self -> hint [ j ] . g1		5632981						
ANR	5633590	Symbol	& self -> hint [ i ] . g1		5632981						
ANR	5633591	Symbol	* self -> hint		5632981						
ANR	5633592	Symbol	& self -> hint [ i ] . g0		5632981						
ANR	5633593	Symbol	md		5632981						
ANR	5633594	Symbol	aligned		5632981						
ANR	5633595	Symbol	* p_oi		5632981						
ANR	5633596	Symbol	& self -> hint [ j ] . aligned1		5632981						
ANR	5633597	Symbol	& self -> hint [ j ] . aligned0		5632981						
ANR	5633598	Symbol	p_ci		5632981						
ANR	5633599	Symbol	p_cj		5632981						
ANR	5633600	Symbol	self -> hint [ m ] . ag0		5632981						
ANR	5633601	Symbol	* self		5632981						
ANR	5633602	Symbol	self -> hint [ i ] . g1		5632981						
ANR	5633603	Symbol	self -> hint [ i ] . g0		5632981						
ANR	5633604	Symbol	am		5632981						
ANR	5633605	Symbol	* p_aj		5632981						
ANR	5633606	Symbol	* p_ai		5632981						
ANR	5633607	Symbol	p_oi		5632981						
ANR	5633608	Symbol	p_oj		5632981						
ANR	5633609	Symbol	weak		5632981						
ANR	5633610	Symbol	any_abs		5632981						
ANR	5633611	Symbol	self -> hint [ m ] . ag1		5632981						
ANR	5633612	Symbol	self -> hint [ j ] . type		5632981						
ANR	5633613	Symbol	hstem		5632981						
ANR	5633614	Symbol	& self -> hint [ i ] . aligned1		5632981						
ANR	5633615	Symbol	* p_oj		5632981						
ANR	5633616	Symbol	p_agj		5632981						
ANR	5633617	Symbol	p_ai		5632981						
ANR	5633618	Symbol	self -> hint [ i ] . type		5632981						
ANR	5633619	Symbol	& self -> hint [ i ] . aligned0		5632981						
ANR	5633620	Symbol	d		5632981						
ANR	5633621	Symbol	self -> hint		5632981						
ANR	5633622	Symbol	* * self		5632981						
ANR	5633623	Symbol	self -> hint [ j ] . g0		5632981						
ANR	5633624	Symbol	i		5632981						
ANR	5633625	Symbol	* p_ci		5632981						
ANR	5633626	Symbol	j		5632981						
ANR	5633627	Symbol	self -> hint [ j ] . g1		5632981						
ANR	5633628	Symbol	k		5632981						
ANR	5633629	Symbol	p_aj		5632981						
ANR	5633630	Symbol	m		5632981						
ANR	5633631	Symbol	n		5632981						
ANR	5633632	Symbol	* p_cj		5632981						
ANR	5633633	Symbol	& self -> hint [ j ] . ag0		5632981						
ANR	5633634	Symbol	& self -> hint [ j ] . ag1		5632981						
ANR	5633635	Symbol	self -> hint_count		5632981						
ANR	5633636	Symbol	* i		5632981						
ANR	5633637	Symbol	* j		5632981						
ANR	5633638	Symbol	* m		5632981						
ANR	5633639	Symbol	self		5632981						
ANR	5633640	Function	t1_hinter__compute_opposite_stem_coords	2330:0:96635:98735							
ANR	5633641	FunctionDef	t1_hinter__compute_opposite_stem_coords (t1_hinter * self)		5633640	0					
ANR	5633642	CompoundStatement		2331:0:96705:98735	5633640	0					
ANR	5633643	IdentifierDeclStatement	int i ;	2331:3:96709:96714	5633640	0	True				
ANR	5633644	IdentifierDecl	i		5633640	0					
ANR	5633645	IdentifierDeclType	int		5633640	0					
ANR	5633646	Identifier	i		5633640	1					
ANR	5633647	ForStatement	for ( i = 0 ; i < self -> hint_count ; i ++ )		5633640	1					
ANR	5633648	ForInit	i = 0 ;	2333:9:96726:96731	5633640	0	True				
ANR	5633649	AssignmentExpression	i = 0		5633640	0		=			
ANR	5633650	Identifier	i		5633640	0					
ANR	5633651	PrimaryExpression	0		5633640	1					
ANR	5633652	Condition	i < self -> hint_count	2333:16:96733:96752	5633640	1	True				
ANR	5633653	RelationalExpression	i < self -> hint_count		5633640	0		<			
ANR	5633654	Identifier	i		5633640	0					
ANR	5633655	PtrMemberAccess	self -> hint_count		5633640	1					
ANR	5633656	Identifier	self		5633640	0					
ANR	5633657	Identifier	hint_count		5633640	1					
ANR	5633658	PostIncDecOperationExpression	i ++	2333:38:96755:96757	5633640	2	True				
ANR	5633659	Identifier	i		5633640	0					
ANR	5633660	IncDec	++		5633640	1					
ANR	5633661	IfStatement	if ( ( self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem ) )		5633640	3					
ANR	5633662	Condition	self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem	2334:12:96772:96831	5633640	0	True				
ANR	5633663	OrExpression	self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem		5633640	0		||			
ANR	5633664	EqualityExpression	self -> hint [ i ] . type == vstem		5633640	0		==			
ANR	5633665	MemberAccess	self -> hint [ i ] . type		5633640	0					
ANR	5633666	ArrayIndexing	self -> hint [ i ]		5633640	0					
ANR	5633667	PtrMemberAccess	self -> hint		5633640	0					
ANR	5633668	Identifier	self		5633640	0					
ANR	5633669	Identifier	hint		5633640	1					
ANR	5633670	Identifier	i		5633640	1					
ANR	5633671	Identifier	type		5633640	1					
ANR	5633672	Identifier	vstem		5633640	1					
ANR	5633673	EqualityExpression	self -> hint [ i ] . type == hstem		5633640	1		==			
ANR	5633674	MemberAccess	self -> hint [ i ] . type		5633640	0					
ANR	5633675	ArrayIndexing	self -> hint [ i ]		5633640	0					
ANR	5633676	PtrMemberAccess	self -> hint		5633640	0					
ANR	5633677	Identifier	self		5633640	0					
ANR	5633678	Identifier	hint		5633640	1					
ANR	5633679	Identifier	i		5633640	1					
ANR	5633680	Identifier	type		5633640	1					
ANR	5633681	Identifier	hstem		5633640	1					
ANR	5633682	CompoundStatement		9:12:390:413	5633640	1					
ANR	5633683	IdentifierDeclStatement	t1_glyph_space_coord ag0 = self -> hint [ i ] . ag0 ;	2335:12:96848:96892	5633640	0	True				
ANR	5633684	IdentifierDecl	ag0 = self -> hint [ i ] . ag0		5633640	0					
ANR	5633685	IdentifierDeclType	t1_glyph_space_coord		5633640	0					
ANR	5633686	Identifier	ag0		5633640	1					
ANR	5633687	AssignmentExpression	ag0 = self -> hint [ i ] . ag0		5633640	2		=			
ANR	5633688	Identifier	ag0		5633640	0					
ANR	5633689	MemberAccess	self -> hint [ i ] . ag0		5633640	1					
ANR	5633690	ArrayIndexing	self -> hint [ i ]		5633640	0					
ANR	5633691	PtrMemberAccess	self -> hint		5633640	0					
ANR	5633692	Identifier	self		5633640	0					
ANR	5633693	Identifier	hint		5633640	1					
ANR	5633694	Identifier	i		5633640	1					
ANR	5633695	Identifier	ag0		5633640	1					
ANR	5633696	IdentifierDeclStatement	t1_glyph_space_coord ag1 = self -> hint [ i ] . ag1 ;	2336:12:96906:96950	5633640	1	True				
ANR	5633697	IdentifierDecl	ag1 = self -> hint [ i ] . ag1		5633640	0					
ANR	5633698	IdentifierDeclType	t1_glyph_space_coord		5633640	0					
ANR	5633699	Identifier	ag1		5633640	1					
ANR	5633700	AssignmentExpression	ag1 = self -> hint [ i ] . ag1		5633640	2		=			
ANR	5633701	Identifier	ag1		5633640	0					
ANR	5633702	MemberAccess	self -> hint [ i ] . ag1		5633640	1					
ANR	5633703	ArrayIndexing	self -> hint [ i ]		5633640	0					
ANR	5633704	PtrMemberAccess	self -> hint		5633640	0					
ANR	5633705	Identifier	self		5633640	0					
ANR	5633706	Identifier	hint		5633640	1					
ANR	5633707	Identifier	i		5633640	1					
ANR	5633708	Identifier	ag1		5633640	1					
ANR	5633709	IdentifierDeclStatement	enum t1_align_type aligned0 = self -> hint [ i ] . aligned0 ;	2337:12:96964:97016	5633640	2	True				
ANR	5633710	IdentifierDecl	aligned0 = self -> hint [ i ] . aligned0		5633640	0					
ANR	5633711	IdentifierDeclType	enum t1_align_type		5633640	0					
ANR	5633712	Identifier	aligned0		5633640	1					
ANR	5633713	AssignmentExpression	aligned0 = self -> hint [ i ] . aligned0		5633640	2		=			
ANR	5633714	Identifier	aligned0		5633640	0					
ANR	5633715	MemberAccess	self -> hint [ i ] . aligned0		5633640	1					
ANR	5633716	ArrayIndexing	self -> hint [ i ]		5633640	0					
ANR	5633717	PtrMemberAccess	self -> hint		5633640	0					
ANR	5633718	Identifier	self		5633640	0					
ANR	5633719	Identifier	hint		5633640	1					
ANR	5633720	Identifier	i		5633640	1					
ANR	5633721	Identifier	aligned0		5633640	1					
ANR	5633722	IdentifierDeclStatement	enum t1_align_type aligned1 = self -> hint [ i ] . aligned1 ;	2338:12:97030:97082	5633640	3	True				
ANR	5633723	IdentifierDecl	aligned1 = self -> hint [ i ] . aligned1		5633640	0					
ANR	5633724	IdentifierDeclType	enum t1_align_type		5633640	0					
ANR	5633725	Identifier	aligned1		5633640	1					
ANR	5633726	AssignmentExpression	aligned1 = self -> hint [ i ] . aligned1		5633640	2		=			
ANR	5633727	Identifier	aligned1		5633640	0					
ANR	5633728	MemberAccess	self -> hint [ i ] . aligned1		5633640	1					
ANR	5633729	ArrayIndexing	self -> hint [ i ]		5633640	0					
ANR	5633730	PtrMemberAccess	self -> hint		5633640	0					
ANR	5633731	Identifier	self		5633640	0					
ANR	5633732	Identifier	hint		5633640	1					
ANR	5633733	Identifier	i		5633640	1					
ANR	5633734	Identifier	aligned1		5633640	1					
ANR	5633735	IdentifierDeclStatement	t1_glyph_space_coord gw ;	2339:12:97096:97119	5633640	4	True				
ANR	5633736	IdentifierDecl	gw		5633640	0					
ANR	5633737	IdentifierDeclType	t1_glyph_space_coord		5633640	0					
ANR	5633738	Identifier	gw		5633640	1					
ANR	5633739	ExpressionStatement	gw = any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )	2341:12:97134:97183	5633640	5	True				
ANR	5633740	AssignmentExpression	gw = any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )		5633640	0		=			
ANR	5633741	Identifier	gw		5633640	0					
ANR	5633742	CallExpression	any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )		5633640	1					
ANR	5633743	Callee	any_abs		5633640	0					
ANR	5633744	Identifier	any_abs		5633640	0					
ANR	5633745	ArgumentList	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		5633640	1					
ANR	5633746	Argument	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		5633640	0					
ANR	5633747	AdditiveExpression	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		5633640	0		-			
ANR	5633748	MemberAccess	self -> hint [ i ] . g1		5633640	0					
ANR	5633749	ArrayIndexing	self -> hint [ i ]		5633640	0					
ANR	5633750	PtrMemberAccess	self -> hint		5633640	0					
ANR	5633751	Identifier	self		5633640	0					
ANR	5633752	Identifier	hint		5633640	1					
ANR	5633753	Identifier	i		5633640	1					
ANR	5633754	Identifier	g1		5633640	1					
ANR	5633755	MemberAccess	self -> hint [ i ] . g0		5633640	1					
ANR	5633756	ArrayIndexing	self -> hint [ i ]		5633640	0					
ANR	5633757	PtrMemberAccess	self -> hint		5633640	0					
ANR	5633758	Identifier	self		5633640	0					
ANR	5633759	Identifier	hint		5633640	1					
ANR	5633760	Identifier	i		5633640	1					
ANR	5633761	Identifier	g0		5633640	1					
ANR	5633762	ExpressionStatement	"t1_hinter__align_stem_width ( self , & gw , & self -> hint [ i ] )"	2342:12:97197:97251	5633640	6	True				
ANR	5633763	CallExpression	"t1_hinter__align_stem_width ( self , & gw , & self -> hint [ i ] )"		5633640	0					
ANR	5633764	Callee	t1_hinter__align_stem_width		5633640	0					
ANR	5633765	Identifier	t1_hinter__align_stem_width		5633640	0					
ANR	5633766	ArgumentList	self		5633640	1					
ANR	5633767	Argument	self		5633640	0					
ANR	5633768	Identifier	self		5633640	0					
ANR	5633769	Argument	& gw		5633640	1					
ANR	5633770	UnaryOperationExpression	& gw		5633640	0					
ANR	5633771	UnaryOperator	&		5633640	0					
ANR	5633772	Identifier	gw		5633640	1					
ANR	5633773	Argument	& self -> hint [ i ]		5633640	2					
ANR	5633774	UnaryOperationExpression	& self -> hint [ i ]		5633640	0					
ANR	5633775	UnaryOperator	&		5633640	0					
ANR	5633776	ArrayIndexing	self -> hint [ i ]		5633640	1					
ANR	5633777	PtrMemberAccess	self -> hint		5633640	0					
ANR	5633778	Identifier	self		5633640	0					
ANR	5633779	Identifier	hint		5633640	1					
ANR	5633780	Identifier	i		5633640	1					
ANR	5633781	IfStatement	if ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 < 0 )		5633640	7					
ANR	5633782	Condition	self -> hint [ i ] . g1 - self -> hint [ i ] . g0 < 0	2343:16:97269:97307	5633640	0	True				
ANR	5633783	RelationalExpression	self -> hint [ i ] . g1 - self -> hint [ i ] . g0 < 0		5633640	0		<			
ANR	5633784	AdditiveExpression	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		5633640	0		-			
ANR	5633785	MemberAccess	self -> hint [ i ] . g1		5633640	0					
ANR	5633786	ArrayIndexing	self -> hint [ i ]		5633640	0					
ANR	5633787	PtrMemberAccess	self -> hint		5633640	0					
ANR	5633788	Identifier	self		5633640	0					
ANR	5633789	Identifier	hint		5633640	1					
ANR	5633790	Identifier	i		5633640	1					
ANR	5633791	Identifier	g1		5633640	1					
ANR	5633792	MemberAccess	self -> hint [ i ] . g0		5633640	1					
ANR	5633793	ArrayIndexing	self -> hint [ i ]		5633640	0					
ANR	5633794	PtrMemberAccess	self -> hint		5633640	0					
ANR	5633795	Identifier	self		5633640	0					
ANR	5633796	Identifier	hint		5633640	1					
ANR	5633797	Identifier	i		5633640	1					
ANR	5633798	Identifier	g0		5633640	1					
ANR	5633799	PrimaryExpression	0		5633640	1					
ANR	5633800	ExpressionStatement	gw = - gw	2344:16:97326:97334	5633640	1	True				
ANR	5633801	AssignmentExpression	gw = - gw		5633640	0		=			
ANR	5633802	Identifier	gw		5633640	0					
ANR	5633803	UnaryOperationExpression	- gw		5633640	1					
ANR	5633804	UnaryOperator	-		5633640	0					
ANR	5633805	Identifier	gw		5633640	1					
ANR	5633806	IfStatement	if ( aligned0 > aligned1 )		5633640	8					
ANR	5633807	Condition	aligned0 > aligned1	2345:16:97352:97370	5633640	0	True				
ANR	5633808	RelationalExpression	aligned0 > aligned1		5633640	0		>			
ANR	5633809	Identifier	aligned0		5633640	0					
ANR	5633810	Identifier	aligned1		5633640	1					
ANR	5633811	ExpressionStatement	ag1 = ag0 + gw	2346:16:97389:97403	5633640	1	True				
ANR	5633812	AssignmentExpression	ag1 = ag0 + gw		5633640	0		=			
ANR	5633813	Identifier	ag1		5633640	0					
ANR	5633814	AdditiveExpression	ag0 + gw		5633640	1		+			
ANR	5633815	Identifier	ag0		5633640	0					
ANR	5633816	Identifier	gw		5633640	1					
ANR	5633817	ElseStatement	else		5633640	0					
ANR	5633818	IfStatement	if ( aligned0 < aligned1 )		5633640	0					
ANR	5633819	Condition	aligned0 < aligned1	2347:21:97426:97444	5633640	0	True				
ANR	5633820	RelationalExpression	aligned0 < aligned1		5633640	0		<			
ANR	5633821	Identifier	aligned0		5633640	0					
ANR	5633822	Identifier	aligned1		5633640	1					
ANR	5633823	ExpressionStatement	ag0 = ag1 - gw	2348:16:97463:97477	5633640	1	True				
ANR	5633824	AssignmentExpression	ag0 = ag1 - gw		5633640	0		=			
ANR	5633825	Identifier	ag0		5633640	0					
ANR	5633826	AdditiveExpression	ag1 - gw		5633640	1		-			
ANR	5633827	Identifier	ag1		5633640	0					
ANR	5633828	Identifier	gw		5633640	1					
ANR	5633829	ElseStatement	else		5633640	0					
ANR	5633830	CompoundStatement		21:16:883:940	5633640	0					
ANR	5633831	IdentifierDeclStatement	t1_glyph_space_coord d0 = any_abs ( ag0 - self -> hint [ i ] . g0 ) ;	2350:16:97514:97571	5633640	0	True				
ANR	5633832	IdentifierDecl	d0 = any_abs ( ag0 - self -> hint [ i ] . g0 )		5633640	0					
ANR	5633833	IdentifierDeclType	t1_glyph_space_coord		5633640	0					
ANR	5633834	Identifier	d0		5633640	1					
ANR	5633835	AssignmentExpression	d0 = any_abs ( ag0 - self -> hint [ i ] . g0 )		5633640	2		=			
ANR	5633836	Identifier	d0		5633640	0					
ANR	5633837	CallExpression	any_abs ( ag0 - self -> hint [ i ] . g0 )		5633640	1					
ANR	5633838	Callee	any_abs		5633640	0					
ANR	5633839	Identifier	any_abs		5633640	0					
ANR	5633840	ArgumentList	ag0 - self -> hint [ i ] . g0		5633640	1					
ANR	5633841	Argument	ag0 - self -> hint [ i ] . g0		5633640	0					
ANR	5633842	AdditiveExpression	ag0 - self -> hint [ i ] . g0		5633640	0		-			
ANR	5633843	Identifier	ag0		5633640	0					
ANR	5633844	MemberAccess	self -> hint [ i ] . g0		5633640	1					
ANR	5633845	ArrayIndexing	self -> hint [ i ]		5633640	0					
ANR	5633846	PtrMemberAccess	self -> hint		5633640	0					
ANR	5633847	Identifier	self		5633640	0					
ANR	5633848	Identifier	hint		5633640	1					
ANR	5633849	Identifier	i		5633640	1					
ANR	5633850	Identifier	g0		5633640	1					
ANR	5633851	IdentifierDeclStatement	t1_glyph_space_coord d1 = any_abs ( ag1 - self -> hint [ i ] . g1 ) ;	2351:16:97589:97646	5633640	1	True				
ANR	5633852	IdentifierDecl	d1 = any_abs ( ag1 - self -> hint [ i ] . g1 )		5633640	0					
ANR	5633853	IdentifierDeclType	t1_glyph_space_coord		5633640	0					
ANR	5633854	Identifier	d1		5633640	1					
ANR	5633855	AssignmentExpression	d1 = any_abs ( ag1 - self -> hint [ i ] . g1 )		5633640	2		=			
ANR	5633856	Identifier	d1		5633640	0					
ANR	5633857	CallExpression	any_abs ( ag1 - self -> hint [ i ] . g1 )		5633640	1					
ANR	5633858	Callee	any_abs		5633640	0					
ANR	5633859	Identifier	any_abs		5633640	0					
ANR	5633860	ArgumentList	ag1 - self -> hint [ i ] . g1		5633640	1					
ANR	5633861	Argument	ag1 - self -> hint [ i ] . g1		5633640	0					
ANR	5633862	AdditiveExpression	ag1 - self -> hint [ i ] . g1		5633640	0		-			
ANR	5633863	Identifier	ag1		5633640	0					
ANR	5633864	MemberAccess	self -> hint [ i ] . g1		5633640	1					
ANR	5633865	ArrayIndexing	self -> hint [ i ]		5633640	0					
ANR	5633866	PtrMemberAccess	self -> hint		5633640	0					
ANR	5633867	Identifier	self		5633640	0					
ANR	5633868	Identifier	hint		5633640	1					
ANR	5633869	Identifier	i		5633640	1					
ANR	5633870	Identifier	g1		5633640	1					
ANR	5633871	IfStatement	if ( aligned0 == topzn || aligned1 == topzn )		5633640	2					
ANR	5633872	Condition	aligned0 == topzn || aligned1 == topzn	2353:20:97669:97706	5633640	0	True				
ANR	5633873	OrExpression	aligned0 == topzn || aligned1 == topzn		5633640	0		||			
ANR	5633874	EqualityExpression	aligned0 == topzn		5633640	0		==			
ANR	5633875	Identifier	aligned0		5633640	0					
ANR	5633876	Identifier	topzn		5633640	1					
ANR	5633877	EqualityExpression	aligned1 == topzn		5633640	1		==			
ANR	5633878	Identifier	aligned1		5633640	0					
ANR	5633879	Identifier	topzn		5633640	1					
ANR	5633880	IfStatement	if ( gw > 0 )		5633640	1					
ANR	5633881	Condition	gw > 0	2354:24:97733:97738	5633640	0	True				
ANR	5633882	RelationalExpression	gw > 0		5633640	0		>			
ANR	5633883	Identifier	gw		5633640	0					
ANR	5633884	PrimaryExpression	0		5633640	1					
ANR	5633885	ExpressionStatement	ag0 = ag1 - gw	2355:24:97765:97779	5633640	1	True				
ANR	5633886	AssignmentExpression	ag0 = ag1 - gw		5633640	0		=			
ANR	5633887	Identifier	ag0		5633640	0					
ANR	5633888	AdditiveExpression	ag1 - gw		5633640	1		-			
ANR	5633889	Identifier	ag1		5633640	0					
ANR	5633890	Identifier	gw		5633640	1					
ANR	5633891	ElseStatement	else		5633640	0					
ANR	5633892	ExpressionStatement	ag1 = ag0 + gw	2357:24:97830:97844	5633640	0	True				
ANR	5633893	AssignmentExpression	ag1 = ag0 + gw		5633640	0		=			
ANR	5633894	Identifier	ag1		5633640	0					
ANR	5633895	AdditiveExpression	ag0 + gw		5633640	1		+			
ANR	5633896	Identifier	ag0		5633640	0					
ANR	5633897	Identifier	gw		5633640	1					
ANR	5633898	ElseStatement	else		5633640	0					
ANR	5633899	IfStatement	"if ( self -> hint [ i ] . type == hstem && min ( any_abs ( self -> hint [ i ] . g0 - self -> ymid ) , any_abs ( self -> hint [ i ] . g1 - self -> ymid ) ) > ( self -> ymax - self -> ymin ) / 5 )"		5633640	0					
ANR	5633900	Condition	"self -> hint [ i ] . type == hstem && min ( any_abs ( self -> hint [ i ] . g0 - self -> ymid ) , any_abs ( self -> hint [ i ] . g1 - self -> ymid ) ) > ( self -> ymax - self -> ymin ) / 5"	2363:25:98073:98266	5633640	0	True				
ANR	5633901	AndExpression	"self -> hint [ i ] . type == hstem && min ( any_abs ( self -> hint [ i ] . g0 - self -> ymid ) , any_abs ( self -> hint [ i ] . g1 - self -> ymid ) ) > ( self -> ymax - self -> ymin ) / 5"		5633640	0		&&			
ANR	5633902	EqualityExpression	self -> hint [ i ] . type == hstem		5633640	0		==			
ANR	5633903	MemberAccess	self -> hint [ i ] . type		5633640	0					
ANR	5633904	ArrayIndexing	self -> hint [ i ]		5633640	0					
ANR	5633905	PtrMemberAccess	self -> hint		5633640	0					
ANR	5633906	Identifier	self		5633640	0					
ANR	5633907	Identifier	hint		5633640	1					
ANR	5633908	Identifier	i		5633640	1					
ANR	5633909	Identifier	type		5633640	1					
ANR	5633910	Identifier	hstem		5633640	1					
ANR	5633911	RelationalExpression	"min ( any_abs ( self -> hint [ i ] . g0 - self -> ymid ) , any_abs ( self -> hint [ i ] . g1 - self -> ymid ) ) > ( self -> ymax - self -> ymin ) / 5"		5633640	1		>			
ANR	5633912	CallExpression	"min ( any_abs ( self -> hint [ i ] . g0 - self -> ymid ) , any_abs ( self -> hint [ i ] . g1 - self -> ymid ) )"		5633640	0					
ANR	5633913	Callee	min		5633640	0					
ANR	5633914	Identifier	min		5633640	0					
ANR	5633915	ArgumentList	any_abs ( self -> hint [ i ] . g0 - self -> ymid )		5633640	1					
ANR	5633916	Argument	any_abs ( self -> hint [ i ] . g0 - self -> ymid )		5633640	0					
ANR	5633917	CallExpression	any_abs ( self -> hint [ i ] . g0 - self -> ymid )		5633640	0					
ANR	5633918	Callee	any_abs		5633640	0					
ANR	5633919	Identifier	any_abs		5633640	0					
ANR	5633920	ArgumentList	self -> hint [ i ] . g0 - self -> ymid		5633640	1					
ANR	5633921	Argument	self -> hint [ i ] . g0 - self -> ymid		5633640	0					
ANR	5633922	AdditiveExpression	self -> hint [ i ] . g0 - self -> ymid		5633640	0		-			
ANR	5633923	MemberAccess	self -> hint [ i ] . g0		5633640	0					
ANR	5633924	ArrayIndexing	self -> hint [ i ]		5633640	0					
ANR	5633925	PtrMemberAccess	self -> hint		5633640	0					
ANR	5633926	Identifier	self		5633640	0					
ANR	5633927	Identifier	hint		5633640	1					
ANR	5633928	Identifier	i		5633640	1					
ANR	5633929	Identifier	g0		5633640	1					
ANR	5633930	PtrMemberAccess	self -> ymid		5633640	1					
ANR	5633931	Identifier	self		5633640	0					
ANR	5633932	Identifier	ymid		5633640	1					
ANR	5633933	Argument	any_abs ( self -> hint [ i ] . g1 - self -> ymid )		5633640	1					
ANR	5633934	CallExpression	any_abs ( self -> hint [ i ] . g1 - self -> ymid )		5633640	0					
ANR	5633935	Callee	any_abs		5633640	0					
ANR	5633936	Identifier	any_abs		5633640	0					
ANR	5633937	ArgumentList	self -> hint [ i ] . g1 - self -> ymid		5633640	1					
ANR	5633938	Argument	self -> hint [ i ] . g1 - self -> ymid		5633640	0					
ANR	5633939	AdditiveExpression	self -> hint [ i ] . g1 - self -> ymid		5633640	0		-			
ANR	5633940	MemberAccess	self -> hint [ i ] . g1		5633640	0					
ANR	5633941	ArrayIndexing	self -> hint [ i ]		5633640	0					
ANR	5633942	PtrMemberAccess	self -> hint		5633640	0					
ANR	5633943	Identifier	self		5633640	0					
ANR	5633944	Identifier	hint		5633640	1					
ANR	5633945	Identifier	i		5633640	1					
ANR	5633946	Identifier	g1		5633640	1					
ANR	5633947	PtrMemberAccess	self -> ymid		5633640	1					
ANR	5633948	Identifier	self		5633640	0					
ANR	5633949	Identifier	ymid		5633640	1					
ANR	5633950	MultiplicativeExpression	( self -> ymax - self -> ymin ) / 5		5633640	1		/			
ANR	5633951	AdditiveExpression	self -> ymax - self -> ymin		5633640	0		-			
ANR	5633952	PtrMemberAccess	self -> ymax		5633640	0					
ANR	5633953	Identifier	self		5633640	0					
ANR	5633954	Identifier	ymax		5633640	1					
ANR	5633955	PtrMemberAccess	self -> ymin		5633640	1					
ANR	5633956	Identifier	self		5633640	0					
ANR	5633957	Identifier	ymin		5633640	1					
ANR	5633958	PrimaryExpression	5		5633640	1					
ANR	5633959	CompoundStatement		35:55:1563:1563	5633640	1					
ANR	5633960	IfStatement	if ( ( self -> hint [ i ] . g1 + self -> hint [ i ] . g0 ) / 2 > self -> ymid )		5633640	0					
ANR	5633961	Condition	( self -> hint [ i ] . g1 + self -> hint [ i ] . g0 ) / 2 > self -> ymid	2366:24:98295:98348	5633640	0	True				
ANR	5633962	RelationalExpression	( self -> hint [ i ] . g1 + self -> hint [ i ] . g0 ) / 2 > self -> ymid		5633640	0		>			
ANR	5633963	MultiplicativeExpression	( self -> hint [ i ] . g1 + self -> hint [ i ] . g0 ) / 2		5633640	0		/			
ANR	5633964	AdditiveExpression	self -> hint [ i ] . g1 + self -> hint [ i ] . g0		5633640	0		+			
ANR	5633965	MemberAccess	self -> hint [ i ] . g1		5633640	0					
ANR	5633966	ArrayIndexing	self -> hint [ i ]		5633640	0					
ANR	5633967	PtrMemberAccess	self -> hint		5633640	0					
ANR	5633968	Identifier	self		5633640	0					
ANR	5633969	Identifier	hint		5633640	1					
ANR	5633970	Identifier	i		5633640	1					
ANR	5633971	Identifier	g1		5633640	1					
ANR	5633972	MemberAccess	self -> hint [ i ] . g0		5633640	1					
ANR	5633973	ArrayIndexing	self -> hint [ i ]		5633640	0					
ANR	5633974	PtrMemberAccess	self -> hint		5633640	0					
ANR	5633975	Identifier	self		5633640	0					
ANR	5633976	Identifier	hint		5633640	1					
ANR	5633977	Identifier	i		5633640	1					
ANR	5633978	Identifier	g0		5633640	1					
ANR	5633979	PrimaryExpression	2		5633640	1					
ANR	5633980	PtrMemberAccess	self -> ymid		5633640	1					
ANR	5633981	Identifier	self		5633640	0					
ANR	5633982	Identifier	ymid		5633640	1					
ANR	5633983	ExpressionStatement	ag0 = ag1 - gw	2367:24:98375:98389	5633640	1	True				
ANR	5633984	AssignmentExpression	ag0 = ag1 - gw		5633640	0		=			
ANR	5633985	Identifier	ag0		5633640	0					
ANR	5633986	AdditiveExpression	ag1 - gw		5633640	1		-			
ANR	5633987	Identifier	ag1		5633640	0					
ANR	5633988	Identifier	gw		5633640	1					
ANR	5633989	ElseStatement	else		5633640	0					
ANR	5633990	ExpressionStatement	ag1 = ag0 + gw	2369:24:98440:98454	5633640	0	True				
ANR	5633991	AssignmentExpression	ag1 = ag0 + gw		5633640	0		=			
ANR	5633992	Identifier	ag1		5633640	0					
ANR	5633993	AdditiveExpression	ag0 + gw		5633640	1		+			
ANR	5633994	Identifier	ag0		5633640	0					
ANR	5633995	Identifier	gw		5633640	1					
ANR	5633996	ElseStatement	else		5633640	0					
ANR	5633997	CompoundStatement		40:23:1773:1773	5633640	0					
ANR	5633998	IfStatement	if ( d0 < d1 )		5633640	0					
ANR	5633999	Condition	d0 < d1	2371:24:98505:98511	5633640	0	True				
ANR	5634000	RelationalExpression	d0 < d1		5633640	0		<			
ANR	5634001	Identifier	d0		5633640	0					
ANR	5634002	Identifier	d1		5633640	1					
ANR	5634003	ExpressionStatement	ag1 = ag0 + gw	2372:24:98538:98552	5633640	1	True				
ANR	5634004	AssignmentExpression	ag1 = ag0 + gw		5633640	0		=			
ANR	5634005	Identifier	ag1		5633640	0					
ANR	5634006	AdditiveExpression	ag0 + gw		5633640	1		+			
ANR	5634007	Identifier	ag0		5633640	0					
ANR	5634008	Identifier	gw		5633640	1					
ANR	5634009	ElseStatement	else		5633640	0					
ANR	5634010	ExpressionStatement	ag0 = ag1 - gw	2374:24:98603:98617	5633640	0	True				
ANR	5634011	AssignmentExpression	ag0 = ag1 - gw		5633640	0		=			
ANR	5634012	Identifier	ag0		5633640	0					
ANR	5634013	AdditiveExpression	ag1 - gw		5633640	1		-			
ANR	5634014	Identifier	ag1		5633640	0					
ANR	5634015	Identifier	gw		5633640	1					
ANR	5634016	ExpressionStatement	self -> hint [ i ] . ag0 = ag0	2377:12:98663:98686	5633640	9	True				
ANR	5634017	AssignmentExpression	self -> hint [ i ] . ag0 = ag0		5633640	0		=			
ANR	5634018	MemberAccess	self -> hint [ i ] . ag0		5633640	0					
ANR	5634019	ArrayIndexing	self -> hint [ i ]		5633640	0					
ANR	5634020	PtrMemberAccess	self -> hint		5633640	0					
ANR	5634021	Identifier	self		5633640	0					
ANR	5634022	Identifier	hint		5633640	1					
ANR	5634023	Identifier	i		5633640	1					
ANR	5634024	Identifier	ag0		5633640	1					
ANR	5634025	Identifier	ag0		5633640	1					
ANR	5634026	ExpressionStatement	self -> hint [ i ] . ag1 = ag1	2378:12:98700:98723	5633640	10	True				
ANR	5634027	AssignmentExpression	self -> hint [ i ] . ag1 = ag1		5633640	0		=			
ANR	5634028	MemberAccess	self -> hint [ i ] . ag1		5633640	0					
ANR	5634029	ArrayIndexing	self -> hint [ i ]		5633640	0					
ANR	5634030	PtrMemberAccess	self -> hint		5633640	0					
ANR	5634031	Identifier	self		5633640	0					
ANR	5634032	Identifier	hint		5633640	1					
ANR	5634033	Identifier	i		5633640	1					
ANR	5634034	Identifier	ag1		5633640	1					
ANR	5634035	Identifier	ag1		5633640	1					
ANR	5634036	ReturnType	static void		5633640	1					
ANR	5634037	Identifier	t1_hinter__compute_opposite_stem_coords		5633640	2					
ANR	5634038	ParameterList	t1_hinter * self		5633640	3					
ANR	5634039	Parameter	t1_hinter * self	2330:52:96687:96702	5633640	0	True				
ANR	5634040	ParameterType	t1_hinter *		5633640	0					
ANR	5634041	Identifier	self		5633640	1					
ANR	5634042	CFGEntryNode	ENTRY		5633640		True				
ANR	5634043	CFGExitNode	EXIT		5633640		True				
ANR	5634044	Symbol	self -> hint [ i ] . aligned1		5633640						
ANR	5634045	Symbol	self -> hint [ i ] . aligned0		5633640						
ANR	5634046	Symbol	self -> ymid		5633640						
ANR	5634047	Symbol	ag1		5633640						
ANR	5634048	Symbol	vstem		5633640						
ANR	5634049	Symbol	ag0		5633640						
ANR	5634050	Symbol	d0		5633640						
ANR	5634051	Symbol	d1		5633640						
ANR	5634052	Symbol	* self -> hint		5633640						
ANR	5634053	Symbol	min		5633640						
ANR	5634054	Symbol	any_abs		5633640						
ANR	5634055	Symbol	self -> ymin		5633640						
ANR	5634056	Symbol	hstem		5633640						
ANR	5634057	Symbol	topzn		5633640						
ANR	5634058	Symbol	self -> hint [ i ] . type		5633640						
ANR	5634059	Symbol	self -> hint		5633640						
ANR	5634060	Symbol	* * self		5633640						
ANR	5634061	Symbol	* self		5633640						
ANR	5634062	Symbol	self -> hint [ i ] . g1		5633640						
ANR	5634063	Symbol	i		5633640						
ANR	5634064	Symbol	self -> hint [ i ] . g0		5633640						
ANR	5634065	Symbol	self -> ymax		5633640						
ANR	5634066	Symbol	gw		5633640						
ANR	5634067	Symbol	self -> hint_count		5633640						
ANR	5634068	Symbol	aligned0		5633640						
ANR	5634069	Symbol	* i		5633640						
ANR	5634070	Symbol	self -> hint [ i ] . ag0		5633640						
ANR	5634071	Symbol	aligned1		5633640						
ANR	5634072	Symbol	self -> hint [ i ] . ag1		5633640						
ANR	5634073	Symbol	self		5633640						
ANR	5634074	Symbol	& gw		5633640						
ANR	5634075	Function	t1_hinter__store_hint_applying	2382:0:98738:99054							
ANR	5634076	FunctionDef	"t1_hinter__store_hint_applying (t1_hinter * self , t1_hint * hint , int pole_index)"		5634075	0					
ANR	5634077	CompoundStatement		2383:0:98829:99054	5634075	0					
ANR	5634078	IdentifierDeclStatement	t1_hint_applying * ha ;	2384:4:98835:98855	5634075	0	True				
ANR	5634079	IdentifierDecl	* ha		5634075	0					
ANR	5634080	IdentifierDeclType	t1_hint_applying *		5634075	0					
ANR	5634081	Identifier	ha		5634075	1					
ANR	5634082	IdentifierDeclStatement	"int code = t1_hinter__can_add_hint_applying ( self , & ha ) ;"	2385:4:98861:98915	5634075	1	True				
ANR	5634083	IdentifierDecl	"code = t1_hinter__can_add_hint_applying ( self , & ha )"		5634075	0					
ANR	5634084	IdentifierDeclType	int		5634075	0					
ANR	5634085	Identifier	code		5634075	1					
ANR	5634086	AssignmentExpression	"code = t1_hinter__can_add_hint_applying ( self , & ha )"		5634075	2		=			
ANR	5634087	Identifier	code		5634075	0					
ANR	5634088	CallExpression	"t1_hinter__can_add_hint_applying ( self , & ha )"		5634075	1					
ANR	5634089	Callee	t1_hinter__can_add_hint_applying		5634075	0					
ANR	5634090	Identifier	t1_hinter__can_add_hint_applying		5634075	0					
ANR	5634091	ArgumentList	self		5634075	1					
ANR	5634092	Argument	self		5634075	0					
ANR	5634093	Identifier	self		5634075	0					
ANR	5634094	Argument	& ha		5634075	1					
ANR	5634095	UnaryOperationExpression	& ha		5634075	0					
ANR	5634096	UnaryOperator	&		5634075	0					
ANR	5634097	Identifier	ha		5634075	1					
ANR	5634098	IfStatement	if ( code < 0 )		5634075	2					
ANR	5634099	Condition	code < 0	2387:8:98926:98933	5634075	0	True				
ANR	5634100	RelationalExpression	code < 0		5634075	0		<			
ANR	5634101	Identifier	code		5634075	0					
ANR	5634102	PrimaryExpression	0		5634075	1					
ANR	5634103	ReturnStatement	return code ;	2388:8:98944:98955	5634075	1	True				
ANR	5634104	Identifier	code		5634075	0					
ANR	5634105	ExpressionStatement	ha -> pole = pole_index	2389:4:98961:98982	5634075	3	True				
ANR	5634106	AssignmentExpression	ha -> pole = pole_index		5634075	0		=			
ANR	5634107	PtrMemberAccess	ha -> pole		5634075	0					
ANR	5634108	Identifier	ha		5634075	0					
ANR	5634109	Identifier	pole		5634075	1					
ANR	5634110	Identifier	pole_index		5634075	1					
ANR	5634111	ExpressionStatement	ha -> opposite = - 1	2390:4:98988:99005	5634075	4	True				
ANR	5634112	AssignmentExpression	ha -> opposite = - 1		5634075	0		=			
ANR	5634113	PtrMemberAccess	ha -> opposite		5634075	0					
ANR	5634114	Identifier	ha		5634075	0					
ANR	5634115	Identifier	opposite		5634075	1					
ANR	5634116	UnaryOperationExpression	- 1		5634075	1					
ANR	5634117	UnaryOperator	-		5634075	0					
ANR	5634118	PrimaryExpression	1		5634075	1					
ANR	5634119	ExpressionStatement	self -> hint_applying_count ++	2391:4:99011:99038	5634075	5	True				
ANR	5634120	PostIncDecOperationExpression	self -> hint_applying_count ++		5634075	0					
ANR	5634121	PtrMemberAccess	self -> hint_applying_count		5634075	0					
ANR	5634122	Identifier	self		5634075	0					
ANR	5634123	Identifier	hint_applying_count		5634075	1					
ANR	5634124	IncDec	++		5634075	1					
ANR	5634125	ReturnStatement	return 0 ;	2392:4:99044:99052	5634075	6	True				
ANR	5634126	PrimaryExpression	0		5634075	0					
ANR	5634127	ReturnType	static int		5634075	1					
ANR	5634128	Identifier	t1_hinter__store_hint_applying		5634075	2					
ANR	5634129	ParameterList	"t1_hinter * self , t1_hint * hint , int pole_index"		5634075	3					
ANR	5634130	Parameter	t1_hinter * self	2382:42:98780:98795	5634075	0	True				
ANR	5634131	ParameterType	t1_hinter *		5634075	0					
ANR	5634132	Identifier	self		5634075	1					
ANR	5634133	Parameter	t1_hint * hint	2382:60:98798:98810	5634075	1	True				
ANR	5634134	ParameterType	t1_hint *		5634075	0					
ANR	5634135	Identifier	hint		5634075	1					
ANR	5634136	Parameter	int pole_index	2382:75:98813:98826	5634075	2	True				
ANR	5634137	ParameterType	int		5634075	0					
ANR	5634138	Identifier	pole_index		5634075	1					
ANR	5634139	CFGEntryNode	ENTRY		5634075		True				
ANR	5634140	CFGExitNode	EXIT		5634075		True				
ANR	5634141	Symbol	self -> hint_applying_count		5634075						
ANR	5634142	Symbol	pole_index		5634075						
ANR	5634143	Symbol	& ha		5634075						
ANR	5634144	Symbol	code		5634075						
ANR	5634145	Symbol	ha -> opposite		5634075						
ANR	5634146	Symbol	ha -> pole		5634075						
ANR	5634147	Symbol	* self		5634075						
ANR	5634148	Symbol	hint		5634075						
ANR	5634149	Symbol	t1_hinter__can_add_hint_applying		5634075						
ANR	5634150	Symbol	self		5634075						
ANR	5634151	Symbol	ha		5634075						
ANR	5634152	Symbol	* ha		5634075						
ANR	5634153	Function	t1_hinter__align_stem_poles	2395:0:99057:103349							
ANR	5634154	FunctionDef	t1_hinter__align_stem_poles (t1_hinter * self)		5634153	0					
ANR	5634155	CompoundStatement		2396:0:99114:103349	5634153	0					
ANR	5634156	IdentifierDeclStatement	"int i , j , k ;"	2396:3:99118:99129	5634153	0	True				
ANR	5634157	IdentifierDecl	i		5634153	0					
ANR	5634158	IdentifierDeclType	int		5634153	0					
ANR	5634159	Identifier	i		5634153	1					
ANR	5634160	IdentifierDecl	j		5634153	1					
ANR	5634161	IdentifierDeclType	int		5634153	0					
ANR	5634162	Identifier	j		5634153	1					
ANR	5634163	IdentifierDecl	k		5634153	2					
ANR	5634164	IdentifierDeclType	int		5634153	0					
ANR	5634165	Identifier	k		5634153	1					
ANR	5634166	IdentifierDeclStatement	t1_glyph_space_coord const fuzz = self -> blue_fuzz ;	2397:4:99135:99184	5634153	1	True				
ANR	5634167	IdentifierDecl	fuzz = self -> blue_fuzz		5634153	0					
ANR	5634168	IdentifierDeclType	t1_glyph_space_coord const		5634153	0					
ANR	5634169	Identifier	fuzz		5634153	1					
ANR	5634170	AssignmentExpression	fuzz = self -> blue_fuzz		5634153	2		=			
ANR	5634171	Identifier	fuzz		5634153	0					
ANR	5634172	PtrMemberAccess	self -> blue_fuzz		5634153	1					
ANR	5634173	Identifier	self		5634153	0					
ANR	5634174	Identifier	blue_fuzz		5634153	1					
ANR	5634175	IdentifierDeclStatement	int code = 0 ;	2398:4:99217:99229	5634153	2	True				
ANR	5634176	IdentifierDecl	code = 0		5634153	0					
ANR	5634177	IdentifierDeclType	int		5634153	0					
ANR	5634178	Identifier	code		5634153	1					
ANR	5634179	AssignmentExpression	code = 0		5634153	2		=			
ANR	5634180	Identifier	code		5634153	0					
ANR	5634181	PrimaryExpression	0		5634153	1					
ANR	5634182	ForStatement	for ( i = 0 ; i < self -> hint_count ; i ++ )		5634153	3					
ANR	5634183	ForInit	i = 0 ;	2400:9:99241:99246	5634153	0	True				
ANR	5634184	AssignmentExpression	i = 0		5634153	0		=			
ANR	5634185	Identifier	i		5634153	0					
ANR	5634186	PrimaryExpression	0		5634153	1					
ANR	5634187	Condition	i < self -> hint_count	2400:16:99248:99267	5634153	1	True				
ANR	5634188	RelationalExpression	i < self -> hint_count		5634153	0		<			
ANR	5634189	Identifier	i		5634153	0					
ANR	5634190	PtrMemberAccess	self -> hint_count		5634153	1					
ANR	5634191	Identifier	self		5634153	0					
ANR	5634192	Identifier	hint_count		5634153	1					
ANR	5634193	PostIncDecOperationExpression	i ++	2400:38:99270:99272	5634153	2	True				
ANR	5634194	Identifier	i		5634153	0					
ANR	5634195	IncDec	++		5634153	1					
ANR	5634196	IfStatement	if ( self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem )		5634153	3					
ANR	5634197	Condition	self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem	2401:12:99287:99344	5634153	0	True				
ANR	5634198	OrExpression	self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem		5634153	0		||			
ANR	5634199	EqualityExpression	self -> hint [ i ] . type == vstem		5634153	0		==			
ANR	5634200	MemberAccess	self -> hint [ i ] . type		5634153	0					
ANR	5634201	ArrayIndexing	self -> hint [ i ]		5634153	0					
ANR	5634202	PtrMemberAccess	self -> hint		5634153	0					
ANR	5634203	Identifier	self		5634153	0					
ANR	5634204	Identifier	hint		5634153	1					
ANR	5634205	Identifier	i		5634153	1					
ANR	5634206	Identifier	type		5634153	1					
ANR	5634207	Identifier	vstem		5634153	1					
ANR	5634208	EqualityExpression	self -> hint [ i ] . type == hstem		5634153	1		==			
ANR	5634209	MemberAccess	self -> hint [ i ] . type		5634153	0					
ANR	5634210	ArrayIndexing	self -> hint [ i ]		5634153	0					
ANR	5634211	PtrMemberAccess	self -> hint		5634153	0					
ANR	5634212	Identifier	self		5634153	0					
ANR	5634213	Identifier	hint		5634153	1					
ANR	5634214	Identifier	i		5634153	1					
ANR	5634215	Identifier	type		5634153	1					
ANR	5634216	Identifier	hstem		5634153	1					
ANR	5634217	CompoundStatement		9:12:358:392	5634153	1					
ANR	5634218	IdentifierDeclStatement	t1_hint * hint = & self -> hint [ i ] ;	2402:12:99361:99392	5634153	0	True				
ANR	5634219	IdentifierDecl	* hint = & self -> hint [ i ]		5634153	0					
ANR	5634220	IdentifierDeclType	t1_hint *		5634153	0					
ANR	5634221	Identifier	hint		5634153	1					
ANR	5634222	AssignmentExpression	* hint = & self -> hint [ i ]		5634153	2		=			
ANR	5634223	Identifier	hint		5634153	0					
ANR	5634224	UnaryOperationExpression	& self -> hint [ i ]		5634153	1					
ANR	5634225	UnaryOperator	&		5634153	0					
ANR	5634226	ArrayIndexing	self -> hint [ i ]		5634153	1					
ANR	5634227	PtrMemberAccess	self -> hint		5634153	0					
ANR	5634228	Identifier	self		5634153	0					
ANR	5634229	Identifier	hint		5634153	1					
ANR	5634230	Identifier	i		5634153	1					
ANR	5634231	IdentifierDeclStatement	"t1_glyph_space_coord ag0 = hint -> ag0 , ag1 = hint -> ag1 ;"	2403:12:99406:99459	5634153	1	True				
ANR	5634232	IdentifierDecl	ag0 = hint -> ag0		5634153	0					
ANR	5634233	IdentifierDeclType	t1_glyph_space_coord		5634153	0					
ANR	5634234	Identifier	ag0		5634153	1					
ANR	5634235	AssignmentExpression	ag0 = hint -> ag0		5634153	2		=			
ANR	5634236	Identifier	ag0		5634153	0					
ANR	5634237	PtrMemberAccess	hint -> ag0		5634153	1					
ANR	5634238	Identifier	hint		5634153	0					
ANR	5634239	Identifier	ag0		5634153	1					
ANR	5634240	IdentifierDecl	ag1 = hint -> ag1		5634153	1					
ANR	5634241	IdentifierDeclType	t1_glyph_space_coord		5634153	0					
ANR	5634242	Identifier	ag1		5634153	1					
ANR	5634243	AssignmentExpression	ag1 = hint -> ag1		5634153	2		=			
ANR	5634244	Identifier	ag1		5634153	0					
ANR	5634245	PtrMemberAccess	hint -> ag1		5634153	1					
ANR	5634246	Identifier	hint		5634153	0					
ANR	5634247	Identifier	ag1		5634153	1					
ANR	5634248	IdentifierDeclStatement	bool horiz = ( hint -> type == hstem ) ;	2404:12:99473:99507	5634153	2	True				
ANR	5634249	IdentifierDecl	horiz = ( hint -> type == hstem )		5634153	0					
ANR	5634250	IdentifierDeclType	bool		5634153	0					
ANR	5634251	Identifier	horiz		5634153	1					
ANR	5634252	AssignmentExpression	horiz = ( hint -> type == hstem )		5634153	2		=			
ANR	5634253	Identifier	horiz		5634153	0					
ANR	5634254	EqualityExpression	hint -> type == hstem		5634153	1		==			
ANR	5634255	PtrMemberAccess	hint -> type		5634153	0					
ANR	5634256	Identifier	hint		5634153	0					
ANR	5634257	Identifier	type		5634153	1					
ANR	5634258	Identifier	hstem		5634153	1					
ANR	5634259	ExpressionStatement	self -> hint_applying_count = 0	2407:12:99618:99647	5634153	3	True				
ANR	5634260	AssignmentExpression	self -> hint_applying_count = 0		5634153	0		=			
ANR	5634261	PtrMemberAccess	self -> hint_applying_count		5634153	0					
ANR	5634262	Identifier	self		5634153	0					
ANR	5634263	Identifier	hint_applying_count		5634153	1					
ANR	5634264	PrimaryExpression	0		5634153	1					
ANR	5634265	ForStatement	for ( k = self -> hint [ i ] . range_index ; k != - 1 ; k = self -> hint_range [ k ] . next )		5634153	4					
ANR	5634266	ForInit	k = self -> hint [ i ] . range_index ;	2408:17:99666:99695	5634153	0	True				
ANR	5634267	AssignmentExpression	k = self -> hint [ i ] . range_index		5634153	0		=			
ANR	5634268	Identifier	k		5634153	0					
ANR	5634269	MemberAccess	self -> hint [ i ] . range_index		5634153	1					
ANR	5634270	ArrayIndexing	self -> hint [ i ]		5634153	0					
ANR	5634271	PtrMemberAccess	self -> hint		5634153	0					
ANR	5634272	Identifier	self		5634153	0					
ANR	5634273	Identifier	hint		5634153	1					
ANR	5634274	Identifier	i		5634153	1					
ANR	5634275	Identifier	range_index		5634153	1					
ANR	5634276	Condition	k != - 1	2408:48:99697:99703	5634153	1	True				
ANR	5634277	EqualityExpression	k != - 1		5634153	0		!=			
ANR	5634278	Identifier	k		5634153	0					
ANR	5634279	UnaryOperationExpression	- 1		5634153	1					
ANR	5634280	UnaryOperator	-		5634153	0					
ANR	5634281	PrimaryExpression	1		5634153	1					
ANR	5634282	AssignmentExpression	k = self -> hint_range [ k ] . next	2408:57:99706:99733	5634153	2	True	=			
ANR	5634283	Identifier	k		5634153	0					
ANR	5634284	MemberAccess	self -> hint_range [ k ] . next		5634153	1					
ANR	5634285	ArrayIndexing	self -> hint_range [ k ]		5634153	0					
ANR	5634286	PtrMemberAccess	self -> hint_range		5634153	0					
ANR	5634287	Identifier	self		5634153	0					
ANR	5634288	Identifier	hint_range		5634153	1					
ANR	5634289	Identifier	k		5634153	1					
ANR	5634290	Identifier	next		5634153	1					
ANR	5634291	CompoundStatement		15:16:706:755	5634153	3					
ANR	5634292	IdentifierDeclStatement	int beg_range_pole = self -> hint_range [ k ] . beg_pole ;	2409:16:99754:99803	5634153	0	True				
ANR	5634293	IdentifierDecl	beg_range_pole = self -> hint_range [ k ] . beg_pole		5634153	0					
ANR	5634294	IdentifierDeclType	int		5634153	0					
ANR	5634295	Identifier	beg_range_pole		5634153	1					
ANR	5634296	AssignmentExpression	beg_range_pole = self -> hint_range [ k ] . beg_pole		5634153	2		=			
ANR	5634297	Identifier	beg_range_pole		5634153	0					
ANR	5634298	MemberAccess	self -> hint_range [ k ] . beg_pole		5634153	1					
ANR	5634299	ArrayIndexing	self -> hint_range [ k ]		5634153	0					
ANR	5634300	PtrMemberAccess	self -> hint_range		5634153	0					
ANR	5634301	Identifier	self		5634153	0					
ANR	5634302	Identifier	hint_range		5634153	1					
ANR	5634303	Identifier	k		5634153	1					
ANR	5634304	Identifier	beg_pole		5634153	1					
ANR	5634305	IdentifierDeclStatement	int end_range_pole = self -> hint_range [ k ] . end_pole ;	2410:16:99821:99870	5634153	1	True				
ANR	5634306	IdentifierDecl	end_range_pole = self -> hint_range [ k ] . end_pole		5634153	0					
ANR	5634307	IdentifierDeclType	int		5634153	0					
ANR	5634308	Identifier	end_range_pole		5634153	1					
ANR	5634309	AssignmentExpression	end_range_pole = self -> hint_range [ k ] . end_pole		5634153	2		=			
ANR	5634310	Identifier	end_range_pole		5634153	0					
ANR	5634311	MemberAccess	self -> hint_range [ k ] . end_pole		5634153	1					
ANR	5634312	ArrayIndexing	self -> hint_range [ k ]		5634153	0					
ANR	5634313	PtrMemberAccess	self -> hint_range		5634153	0					
ANR	5634314	Identifier	self		5634153	0					
ANR	5634315	Identifier	hint_range		5634153	1					
ANR	5634316	Identifier	k		5634153	1					
ANR	5634317	Identifier	end_pole		5634153	1					
ANR	5634318	ForStatement	for ( j = beg_range_pole ; j <= end_range_pole ; j ++ )		5634153	2					
ANR	5634319	ForInit	j = beg_range_pole ;	2412:21:99894:99912	5634153	0	True				
ANR	5634320	AssignmentExpression	j = beg_range_pole		5634153	0		=			
ANR	5634321	Identifier	j		5634153	0					
ANR	5634322	Identifier	beg_range_pole		5634153	1					
ANR	5634323	Condition	j <= end_range_pole	2412:41:99914:99932	5634153	1	True				
ANR	5634324	RelationalExpression	j <= end_range_pole		5634153	0		<=			
ANR	5634325	Identifier	j		5634153	0					
ANR	5634326	Identifier	end_range_pole		5634153	1					
ANR	5634327	PostIncDecOperationExpression	j ++	2412:62:99935:99937	5634153	2	True				
ANR	5634328	Identifier	j		5634153	0					
ANR	5634329	IncDec	++		5634153	1					
ANR	5634330	CompoundStatement		18:20:847:878	5634153	3					
ANR	5634331	IdentifierDeclStatement	t1_pole * pole = & self -> pole [ j ] ;	2413:20:99962:99993	5634153	0	True				
ANR	5634332	IdentifierDecl	* pole = & self -> pole [ j ]		5634153	0					
ANR	5634333	IdentifierDeclType	t1_pole *		5634153	0					
ANR	5634334	Identifier	pole		5634153	1					
ANR	5634335	AssignmentExpression	* pole = & self -> pole [ j ]		5634153	2		=			
ANR	5634336	Identifier	pole		5634153	0					
ANR	5634337	UnaryOperationExpression	& self -> pole [ j ]		5634153	1					
ANR	5634338	UnaryOperator	&		5634153	0					
ANR	5634339	ArrayIndexing	self -> pole [ j ]		5634153	1					
ANR	5634340	PtrMemberAccess	self -> pole		5634153	0					
ANR	5634341	Identifier	self		5634153	0					
ANR	5634342	Identifier	pole		5634153	1					
ANR	5634343	Identifier	j		5634153	1					
ANR	5634344	IfStatement	if ( pole -> type != oncurve )		5634153	1					
ANR	5634345	Condition	pole -> type != oncurve	2415:24:100020:100040	5634153	0	True				
ANR	5634346	EqualityExpression	pole -> type != oncurve		5634153	0		!=			
ANR	5634347	PtrMemberAccess	pole -> type		5634153	0					
ANR	5634348	Identifier	pole		5634153	0					
ANR	5634349	Identifier	type		5634153	1					
ANR	5634350	Identifier	oncurve		5634153	1					
ANR	5634351	ContinueStatement	continue ;	2416:24:100067:100075	5634153	1	True				
ANR	5634352	IfStatement	if ( ! horiz && any_abs ( pole -> gx - hint -> g0 ) <= fuzz )		5634153	2					
ANR	5634353	Condition	! horiz && any_abs ( pole -> gx - hint -> g0 ) <= fuzz	2417:24:100101:100146	5634153	0	True				
ANR	5634354	AndExpression	! horiz && any_abs ( pole -> gx - hint -> g0 ) <= fuzz		5634153	0		&&			
ANR	5634355	UnaryOperationExpression	! horiz		5634153	0					
ANR	5634356	UnaryOperator	!		5634153	0					
ANR	5634357	Identifier	horiz		5634153	1					
ANR	5634358	RelationalExpression	any_abs ( pole -> gx - hint -> g0 ) <= fuzz		5634153	1		<=			
ANR	5634359	CallExpression	any_abs ( pole -> gx - hint -> g0 )		5634153	0					
ANR	5634360	Callee	any_abs		5634153	0					
ANR	5634361	Identifier	any_abs		5634153	0					
ANR	5634362	ArgumentList	pole -> gx - hint -> g0		5634153	1					
ANR	5634363	Argument	pole -> gx - hint -> g0		5634153	0					
ANR	5634364	AdditiveExpression	pole -> gx - hint -> g0		5634153	0		-			
ANR	5634365	PtrMemberAccess	pole -> gx		5634153	0					
ANR	5634366	Identifier	pole		5634153	0					
ANR	5634367	Identifier	gx		5634153	1					
ANR	5634368	PtrMemberAccess	hint -> g0		5634153	1					
ANR	5634369	Identifier	hint		5634153	0					
ANR	5634370	Identifier	g0		5634153	1					
ANR	5634371	Identifier	fuzz		5634153	1					
ANR	5634372	ExpressionStatement	"code = t1_hinter__store_hint_applying ( self , hint , j )"	2418:24:100173:100225	5634153	1	True				
ANR	5634373	AssignmentExpression	"code = t1_hinter__store_hint_applying ( self , hint , j )"		5634153	0		=			
ANR	5634374	Identifier	code		5634153	0					
ANR	5634375	CallExpression	"t1_hinter__store_hint_applying ( self , hint , j )"		5634153	1					
ANR	5634376	Callee	t1_hinter__store_hint_applying		5634153	0					
ANR	5634377	Identifier	t1_hinter__store_hint_applying		5634153	0					
ANR	5634378	ArgumentList	self		5634153	1					
ANR	5634379	Argument	self		5634153	0					
ANR	5634380	Identifier	self		5634153	0					
ANR	5634381	Argument	hint		5634153	1					
ANR	5634382	Identifier	hint		5634153	0					
ANR	5634383	Argument	j		5634153	2					
ANR	5634384	Identifier	j		5634153	0					
ANR	5634385	ElseStatement	else		5634153	0					
ANR	5634386	IfStatement	if ( ! horiz && any_abs ( pole -> gx - hint -> g1 ) <= fuzz )		5634153	0					
ANR	5634387	Condition	! horiz && any_abs ( pole -> gx - hint -> g1 ) <= fuzz	2419:29:100256:100301	5634153	0	True				
ANR	5634388	AndExpression	! horiz && any_abs ( pole -> gx - hint -> g1 ) <= fuzz		5634153	0		&&			
ANR	5634389	UnaryOperationExpression	! horiz		5634153	0					
ANR	5634390	UnaryOperator	!		5634153	0					
ANR	5634391	Identifier	horiz		5634153	1					
ANR	5634392	RelationalExpression	any_abs ( pole -> gx - hint -> g1 ) <= fuzz		5634153	1		<=			
ANR	5634393	CallExpression	any_abs ( pole -> gx - hint -> g1 )		5634153	0					
ANR	5634394	Callee	any_abs		5634153	0					
ANR	5634395	Identifier	any_abs		5634153	0					
ANR	5634396	ArgumentList	pole -> gx - hint -> g1		5634153	1					
ANR	5634397	Argument	pole -> gx - hint -> g1		5634153	0					
ANR	5634398	AdditiveExpression	pole -> gx - hint -> g1		5634153	0		-			
ANR	5634399	PtrMemberAccess	pole -> gx		5634153	0					
ANR	5634400	Identifier	pole		5634153	0					
ANR	5634401	Identifier	gx		5634153	1					
ANR	5634402	PtrMemberAccess	hint -> g1		5634153	1					
ANR	5634403	Identifier	hint		5634153	0					
ANR	5634404	Identifier	g1		5634153	1					
ANR	5634405	Identifier	fuzz		5634153	1					
ANR	5634406	ExpressionStatement	"code = t1_hinter__store_hint_applying ( self , hint , j )"	2420:24:100328:100380	5634153	1	True				
ANR	5634407	AssignmentExpression	"code = t1_hinter__store_hint_applying ( self , hint , j )"		5634153	0		=			
ANR	5634408	Identifier	code		5634153	0					
ANR	5634409	CallExpression	"t1_hinter__store_hint_applying ( self , hint , j )"		5634153	1					
ANR	5634410	Callee	t1_hinter__store_hint_applying		5634153	0					
ANR	5634411	Identifier	t1_hinter__store_hint_applying		5634153	0					
ANR	5634412	ArgumentList	self		5634153	1					
ANR	5634413	Argument	self		5634153	0					
ANR	5634414	Identifier	self		5634153	0					
ANR	5634415	Argument	hint		5634153	1					
ANR	5634416	Identifier	hint		5634153	0					
ANR	5634417	Argument	j		5634153	2					
ANR	5634418	Identifier	j		5634153	0					
ANR	5634419	ElseStatement	else		5634153	0					
ANR	5634420	IfStatement	if ( horiz && any_abs ( pole -> gy - hint -> g0 ) <= fuzz )		5634153	0					
ANR	5634421	Condition	horiz && any_abs ( pole -> gy - hint -> g0 ) <= fuzz	2421:30:100412:100456	5634153	0	True				
ANR	5634422	AndExpression	horiz && any_abs ( pole -> gy - hint -> g0 ) <= fuzz		5634153	0		&&			
ANR	5634423	Identifier	horiz		5634153	0					
ANR	5634424	RelationalExpression	any_abs ( pole -> gy - hint -> g0 ) <= fuzz		5634153	1		<=			
ANR	5634425	CallExpression	any_abs ( pole -> gy - hint -> g0 )		5634153	0					
ANR	5634426	Callee	any_abs		5634153	0					
ANR	5634427	Identifier	any_abs		5634153	0					
ANR	5634428	ArgumentList	pole -> gy - hint -> g0		5634153	1					
ANR	5634429	Argument	pole -> gy - hint -> g0		5634153	0					
ANR	5634430	AdditiveExpression	pole -> gy - hint -> g0		5634153	0		-			
ANR	5634431	PtrMemberAccess	pole -> gy		5634153	0					
ANR	5634432	Identifier	pole		5634153	0					
ANR	5634433	Identifier	gy		5634153	1					
ANR	5634434	PtrMemberAccess	hint -> g0		5634153	1					
ANR	5634435	Identifier	hint		5634153	0					
ANR	5634436	Identifier	g0		5634153	1					
ANR	5634437	Identifier	fuzz		5634153	1					
ANR	5634438	ExpressionStatement	"code = t1_hinter__store_hint_applying ( self , hint , j )"	2422:24:100483:100535	5634153	1	True				
ANR	5634439	AssignmentExpression	"code = t1_hinter__store_hint_applying ( self , hint , j )"		5634153	0		=			
ANR	5634440	Identifier	code		5634153	0					
ANR	5634441	CallExpression	"t1_hinter__store_hint_applying ( self , hint , j )"		5634153	1					
ANR	5634442	Callee	t1_hinter__store_hint_applying		5634153	0					
ANR	5634443	Identifier	t1_hinter__store_hint_applying		5634153	0					
ANR	5634444	ArgumentList	self		5634153	1					
ANR	5634445	Argument	self		5634153	0					
ANR	5634446	Identifier	self		5634153	0					
ANR	5634447	Argument	hint		5634153	1					
ANR	5634448	Identifier	hint		5634153	0					
ANR	5634449	Argument	j		5634153	2					
ANR	5634450	Identifier	j		5634153	0					
ANR	5634451	ElseStatement	else		5634153	0					
ANR	5634452	IfStatement	if ( horiz && any_abs ( pole -> gy - hint -> g1 ) <= fuzz )		5634153	0					
ANR	5634453	Condition	horiz && any_abs ( pole -> gy - hint -> g1 ) <= fuzz	2423:30:100567:100611	5634153	0	True				
ANR	5634454	AndExpression	horiz && any_abs ( pole -> gy - hint -> g1 ) <= fuzz		5634153	0		&&			
ANR	5634455	Identifier	horiz		5634153	0					
ANR	5634456	RelationalExpression	any_abs ( pole -> gy - hint -> g1 ) <= fuzz		5634153	1		<=			
ANR	5634457	CallExpression	any_abs ( pole -> gy - hint -> g1 )		5634153	0					
ANR	5634458	Callee	any_abs		5634153	0					
ANR	5634459	Identifier	any_abs		5634153	0					
ANR	5634460	ArgumentList	pole -> gy - hint -> g1		5634153	1					
ANR	5634461	Argument	pole -> gy - hint -> g1		5634153	0					
ANR	5634462	AdditiveExpression	pole -> gy - hint -> g1		5634153	0		-			
ANR	5634463	PtrMemberAccess	pole -> gy		5634153	0					
ANR	5634464	Identifier	pole		5634153	0					
ANR	5634465	Identifier	gy		5634153	1					
ANR	5634466	PtrMemberAccess	hint -> g1		5634153	1					
ANR	5634467	Identifier	hint		5634153	0					
ANR	5634468	Identifier	g1		5634153	1					
ANR	5634469	Identifier	fuzz		5634153	1					
ANR	5634470	ExpressionStatement	"code = t1_hinter__store_hint_applying ( self , hint , j )"	2424:24:100638:100690	5634153	1	True				
ANR	5634471	AssignmentExpression	"code = t1_hinter__store_hint_applying ( self , hint , j )"		5634153	0		=			
ANR	5634472	Identifier	code		5634153	0					
ANR	5634473	CallExpression	"t1_hinter__store_hint_applying ( self , hint , j )"		5634153	1					
ANR	5634474	Callee	t1_hinter__store_hint_applying		5634153	0					
ANR	5634475	Identifier	t1_hinter__store_hint_applying		5634153	0					
ANR	5634476	ArgumentList	self		5634153	1					
ANR	5634477	Argument	self		5634153	0					
ANR	5634478	Identifier	self		5634153	0					
ANR	5634479	Argument	hint		5634153	1					
ANR	5634480	Identifier	hint		5634153	0					
ANR	5634481	Argument	j		5634153	2					
ANR	5634482	Identifier	j		5634153	0					
ANR	5634483	IfStatement	if ( code < 0 )		5634153	3					
ANR	5634484	Condition	code < 0	2425:24:100716:100723	5634153	0	True				
ANR	5634485	RelationalExpression	code < 0		5634153	0		<			
ANR	5634486	Identifier	code		5634153	0					
ANR	5634487	PrimaryExpression	0		5634153	1					
ANR	5634488	ReturnStatement	return code ;	2426:24:100750:100761	5634153	1	True				
ANR	5634489	Identifier	code		5634153	0					
ANR	5634490	ForStatement	for ( k = 0 ; k < self -> hint_applying_count ; k ++ )		5634153	5					
ANR	5634491	ForInit	k = 0 ;	2429:17:100812:100817	5634153	0	True				
ANR	5634492	AssignmentExpression	k = 0		5634153	0		=			
ANR	5634493	Identifier	k		5634153	0					
ANR	5634494	PrimaryExpression	0		5634153	1					
ANR	5634495	Condition	k < self -> hint_applying_count	2429:24:100819:100847	5634153	1	True				
ANR	5634496	RelationalExpression	k < self -> hint_applying_count		5634153	0		<			
ANR	5634497	Identifier	k		5634153	0					
ANR	5634498	PtrMemberAccess	self -> hint_applying_count		5634153	1					
ANR	5634499	Identifier	self		5634153	0					
ANR	5634500	Identifier	hint_applying_count		5634153	1					
ANR	5634501	PostIncDecOperationExpression	k ++	2429:55:100850:100852	5634153	2	True				
ANR	5634502	Identifier	k		5634153	0					
ANR	5634503	IncDec	++		5634153	1					
ANR	5634504	CompoundStatement		42:16:2236:2247	5634153	3					
ANR	5634505	IdentifierDeclStatement	t1_hint_applying * ha0 = & self -> hint_applying [ k ] ;	2430:16:100873:100920	5634153	0	True				
ANR	5634506	IdentifierDecl	* ha0 = & self -> hint_applying [ k ]		5634153	0					
ANR	5634507	IdentifierDeclType	t1_hint_applying *		5634153	0					
ANR	5634508	Identifier	ha0		5634153	1					
ANR	5634509	AssignmentExpression	* ha0 = & self -> hint_applying [ k ]		5634153	2		=			
ANR	5634510	Identifier	ha0		5634153	0					
ANR	5634511	UnaryOperationExpression	& self -> hint_applying [ k ]		5634153	1					
ANR	5634512	UnaryOperator	&		5634153	0					
ANR	5634513	ArrayIndexing	self -> hint_applying [ k ]		5634153	1					
ANR	5634514	PtrMemberAccess	self -> hint_applying		5634153	0					
ANR	5634515	Identifier	self		5634153	0					
ANR	5634516	Identifier	hint_applying		5634153	1					
ANR	5634517	Identifier	k		5634153	1					
ANR	5634518	IdentifierDeclStatement	int pole_index0 = ha0 -> pole ;	2431:16:100938:100965	5634153	1	True				
ANR	5634519	IdentifierDecl	pole_index0 = ha0 -> pole		5634153	0					
ANR	5634520	IdentifierDeclType	int		5634153	0					
ANR	5634521	Identifier	pole_index0		5634153	1					
ANR	5634522	AssignmentExpression	pole_index0 = ha0 -> pole		5634153	2		=			
ANR	5634523	Identifier	pole_index0		5634153	0					
ANR	5634524	PtrMemberAccess	ha0 -> pole		5634153	1					
ANR	5634525	Identifier	ha0		5634153	0					
ANR	5634526	Identifier	pole		5634153	1					
ANR	5634527	IdentifierDeclStatement	t1_pole * pole0 = & self -> pole [ pole_index0 ] ;	2432:16:100983:101024	5634153	2	True				
ANR	5634528	IdentifierDecl	* pole0 = & self -> pole [ pole_index0 ]		5634153	0					
ANR	5634529	IdentifierDeclType	t1_pole *		5634153	0					
ANR	5634530	Identifier	pole0		5634153	1					
ANR	5634531	AssignmentExpression	* pole0 = & self -> pole [ pole_index0 ]		5634153	2		=			
ANR	5634532	Identifier	pole0		5634153	0					
ANR	5634533	UnaryOperationExpression	& self -> pole [ pole_index0 ]		5634153	1					
ANR	5634534	UnaryOperator	&		5634153	0					
ANR	5634535	ArrayIndexing	self -> pole [ pole_index0 ]		5634153	1					
ANR	5634536	PtrMemberAccess	self -> pole		5634153	0					
ANR	5634537	Identifier	self		5634153	0					
ANR	5634538	Identifier	pole		5634153	1					
ANR	5634539	Identifier	pole_index0		5634153	1					
ANR	5634540	IdentifierDeclStatement	t1_glyph_space_coord g0 = ( horiz ? pole0 -> gy : pole0 -> gx ) ;	2433:16:101042:101099	5634153	3	True				
ANR	5634541	IdentifierDecl	g0 = ( horiz ? pole0 -> gy : pole0 -> gx )		5634153	0					
ANR	5634542	IdentifierDeclType	t1_glyph_space_coord		5634153	0					
ANR	5634543	Identifier	g0		5634153	1					
ANR	5634544	AssignmentExpression	g0 = ( horiz ? pole0 -> gy : pole0 -> gx )		5634153	2		=			
ANR	5634545	Identifier	g0		5634153	0					
ANR	5634546	ConditionalExpression	horiz ? pole0 -> gy : pole0 -> gx		5634153	1					
ANR	5634547	Condition	horiz		5634153	0					
ANR	5634548	Identifier	horiz		5634153	0					
ANR	5634549	PtrMemberAccess	pole0 -> gy		5634153	1					
ANR	5634550	Identifier	pole0		5634153	0					
ANR	5634551	Identifier	gy		5634153	1					
ANR	5634552	PtrMemberAccess	pole0 -> gx		5634153	2					
ANR	5634553	Identifier	pole0		5634153	0					
ANR	5634554	Identifier	gx		5634153	1					
ANR	5634555	IdentifierDeclStatement	t1_glyph_space_coord t0 = ( horiz ? pole0 -> gx : pole0 -> gy ) ;	2434:16:101117:101174	5634153	4	True				
ANR	5634556	IdentifierDecl	t0 = ( horiz ? pole0 -> gx : pole0 -> gy )		5634153	0					
ANR	5634557	IdentifierDeclType	t1_glyph_space_coord		5634153	0					
ANR	5634558	Identifier	t0		5634153	1					
ANR	5634559	AssignmentExpression	t0 = ( horiz ? pole0 -> gx : pole0 -> gy )		5634153	2		=			
ANR	5634560	Identifier	t0		5634153	0					
ANR	5634561	ConditionalExpression	horiz ? pole0 -> gx : pole0 -> gy		5634153	1					
ANR	5634562	Condition	horiz		5634153	0					
ANR	5634563	Identifier	horiz		5634153	0					
ANR	5634564	PtrMemberAccess	pole0 -> gx		5634153	1					
ANR	5634565	Identifier	pole0		5634153	0					
ANR	5634566	Identifier	gx		5634153	1					
ANR	5634567	PtrMemberAccess	pole0 -> gy		5634153	2					
ANR	5634568	Identifier	pole0		5634153	0					
ANR	5634569	Identifier	gy		5634153	1					
ANR	5634570	IdentifierDeclStatement	bool gt0 = any_abs ( hint -> g0 - g0 ) > any_abs ( hint -> g1 - g0 ) ;	2435:16:101192:101250	5634153	5	True				
ANR	5634571	IdentifierDecl	gt0 = any_abs ( hint -> g0 - g0 ) > any_abs ( hint -> g1 - g0 )		5634153	0					
ANR	5634572	IdentifierDeclType	bool		5634153	0					
ANR	5634573	Identifier	gt0		5634153	1					
ANR	5634574	AssignmentExpression	gt0 = any_abs ( hint -> g0 - g0 ) > any_abs ( hint -> g1 - g0 )		5634153	2		=			
ANR	5634575	Identifier	gt0		5634153	0					
ANR	5634576	RelationalExpression	any_abs ( hint -> g0 - g0 ) > any_abs ( hint -> g1 - g0 )		5634153	1		>			
ANR	5634577	CallExpression	any_abs ( hint -> g0 - g0 )		5634153	0					
ANR	5634578	Callee	any_abs		5634153	0					
ANR	5634579	Identifier	any_abs		5634153	0					
ANR	5634580	ArgumentList	hint -> g0 - g0		5634153	1					
ANR	5634581	Argument	hint -> g0 - g0		5634153	0					
ANR	5634582	AdditiveExpression	hint -> g0 - g0		5634153	0		-			
ANR	5634583	PtrMemberAccess	hint -> g0		5634153	0					
ANR	5634584	Identifier	hint		5634153	0					
ANR	5634585	Identifier	g0		5634153	1					
ANR	5634586	Identifier	g0		5634153	1					
ANR	5634587	CallExpression	any_abs ( hint -> g1 - g0 )		5634153	1					
ANR	5634588	Callee	any_abs		5634153	0					
ANR	5634589	Identifier	any_abs		5634153	0					
ANR	5634590	ArgumentList	hint -> g1 - g0		5634153	1					
ANR	5634591	Argument	hint -> g1 - g0		5634153	0					
ANR	5634592	AdditiveExpression	hint -> g1 - g0		5634153	0		-			
ANR	5634593	PtrMemberAccess	hint -> g1		5634153	0					
ANR	5634594	Identifier	hint		5634153	0					
ANR	5634595	Identifier	g1		5634153	1					
ANR	5634596	Identifier	g0		5634153	1					
ANR	5634597	IdentifierDeclStatement	"t1_glyph_space_coord d , md = any_abs ( hint -> g1 - hint -> g0 ) * 5 / 4 ;"	2436:16:101268:101333	5634153	6	True				
ANR	5634598	IdentifierDecl	d		5634153	0					
ANR	5634599	IdentifierDeclType	t1_glyph_space_coord		5634153	0					
ANR	5634600	Identifier	d		5634153	1					
ANR	5634601	IdentifierDecl	md = any_abs ( hint -> g1 - hint -> g0 ) * 5 / 4		5634153	1					
ANR	5634602	IdentifierDeclType	t1_glyph_space_coord		5634153	0					
ANR	5634603	Identifier	md		5634153	1					
ANR	5634604	AssignmentExpression	md = any_abs ( hint -> g1 - hint -> g0 ) * 5 / 4		5634153	2		=			
ANR	5634605	Identifier	md		5634153	0					
ANR	5634606	MultiplicativeExpression	any_abs ( hint -> g1 - hint -> g0 ) * 5 / 4		5634153	1		*			
ANR	5634607	CallExpression	any_abs ( hint -> g1 - hint -> g0 )		5634153	0					
ANR	5634608	Callee	any_abs		5634153	0					
ANR	5634609	Identifier	any_abs		5634153	0					
ANR	5634610	ArgumentList	hint -> g1 - hint -> g0		5634153	1					
ANR	5634611	Argument	hint -> g1 - hint -> g0		5634153	0					
ANR	5634612	AdditiveExpression	hint -> g1 - hint -> g0		5634153	0		-			
ANR	5634613	PtrMemberAccess	hint -> g1		5634153	0					
ANR	5634614	Identifier	hint		5634153	0					
ANR	5634615	Identifier	g1		5634153	1					
ANR	5634616	PtrMemberAccess	hint -> g0		5634153	1					
ANR	5634617	Identifier	hint		5634153	0					
ANR	5634618	Identifier	g0		5634153	1					
ANR	5634619	MultiplicativeExpression	5 / 4		5634153	1		/			
ANR	5634620	PrimaryExpression	5		5634153	0					
ANR	5634621	PrimaryExpression	4		5634153	1					
ANR	5634622	IdentifierDeclStatement	int mj = - 1 ;	2437:16:101351:101362	5634153	7	True				
ANR	5634623	IdentifierDecl	mj = - 1		5634153	0					
ANR	5634624	IdentifierDeclType	int		5634153	0					
ANR	5634625	Identifier	mj		5634153	1					
ANR	5634626	AssignmentExpression	mj = - 1		5634153	2		=			
ANR	5634627	Identifier	mj		5634153	0					
ANR	5634628	UnaryOperationExpression	- 1		5634153	1					
ANR	5634629	UnaryOperator	-		5634153	0					
ANR	5634630	PrimaryExpression	1		5634153	1					
ANR	5634631	ForStatement	for ( j = 0 ; j < self -> hint_applying_count ; j ++ )		5634153	8					
ANR	5634632	ForInit	j = 0 ;	2439:21:101386:101391	5634153	0	True				
ANR	5634633	AssignmentExpression	j = 0		5634153	0		=			
ANR	5634634	Identifier	j		5634153	0					
ANR	5634635	PrimaryExpression	0		5634153	1					
ANR	5634636	Condition	j < self -> hint_applying_count	2439:28:101393:101421	5634153	1	True				
ANR	5634637	RelationalExpression	j < self -> hint_applying_count		5634153	0		<			
ANR	5634638	Identifier	j		5634153	0					
ANR	5634639	PtrMemberAccess	self -> hint_applying_count		5634153	1					
ANR	5634640	Identifier	self		5634153	0					
ANR	5634641	Identifier	hint_applying_count		5634153	1					
ANR	5634642	PostIncDecOperationExpression	j ++	2439:59:101424:101426	5634153	2	True				
ANR	5634643	Identifier	j		5634153	0					
ANR	5634644	IncDec	++		5634153	1					
ANR	5634645	CompoundStatement		50:20:2675:2733	5634153	3					
ANR	5634646	IdentifierDeclStatement	t1_hint_applying * ha1 = & self -> hint_applying [ j ] ;	2440:20:101451:101498	5634153	0	True				
ANR	5634647	IdentifierDecl	* ha1 = & self -> hint_applying [ j ]		5634153	0					
ANR	5634648	IdentifierDeclType	t1_hint_applying *		5634153	0					
ANR	5634649	Identifier	ha1		5634153	1					
ANR	5634650	AssignmentExpression	* ha1 = & self -> hint_applying [ j ]		5634153	2		=			
ANR	5634651	Identifier	ha1		5634153	0					
ANR	5634652	UnaryOperationExpression	& self -> hint_applying [ j ]		5634153	1					
ANR	5634653	UnaryOperator	&		5634153	0					
ANR	5634654	ArrayIndexing	self -> hint_applying [ j ]		5634153	1					
ANR	5634655	PtrMemberAccess	self -> hint_applying		5634153	0					
ANR	5634656	Identifier	self		5634153	0					
ANR	5634657	Identifier	hint_applying		5634153	1					
ANR	5634658	Identifier	j		5634153	1					
ANR	5634659	IdentifierDeclStatement	int pole_index1 = ha1 -> pole ;	2441:20:101520:101547	5634153	1	True				
ANR	5634660	IdentifierDecl	pole_index1 = ha1 -> pole		5634153	0					
ANR	5634661	IdentifierDeclType	int		5634153	0					
ANR	5634662	Identifier	pole_index1		5634153	1					
ANR	5634663	AssignmentExpression	pole_index1 = ha1 -> pole		5634153	2		=			
ANR	5634664	Identifier	pole_index1		5634153	0					
ANR	5634665	PtrMemberAccess	ha1 -> pole		5634153	1					
ANR	5634666	Identifier	ha1		5634153	0					
ANR	5634667	Identifier	pole		5634153	1					
ANR	5634668	IdentifierDeclStatement	t1_pole * pole1 = & self -> pole [ pole_index1 ] ;	2442:20:101569:101610	5634153	2	True				
ANR	5634669	IdentifierDecl	* pole1 = & self -> pole [ pole_index1 ]		5634153	0					
ANR	5634670	IdentifierDeclType	t1_pole *		5634153	0					
ANR	5634671	Identifier	pole1		5634153	1					
ANR	5634672	AssignmentExpression	* pole1 = & self -> pole [ pole_index1 ]		5634153	2		=			
ANR	5634673	Identifier	pole1		5634153	0					
ANR	5634674	UnaryOperationExpression	& self -> pole [ pole_index1 ]		5634153	1					
ANR	5634675	UnaryOperator	&		5634153	0					
ANR	5634676	ArrayIndexing	self -> pole [ pole_index1 ]		5634153	1					
ANR	5634677	PtrMemberAccess	self -> pole		5634153	0					
ANR	5634678	Identifier	self		5634153	0					
ANR	5634679	Identifier	pole		5634153	1					
ANR	5634680	Identifier	pole_index1		5634153	1					
ANR	5634681	IdentifierDeclStatement	t1_glyph_space_coord g1 = ( horiz ? pole1 -> gy : pole1 -> gx ) ;	2443:20:101632:101689	5634153	3	True				
ANR	5634682	IdentifierDecl	g1 = ( horiz ? pole1 -> gy : pole1 -> gx )		5634153	0					
ANR	5634683	IdentifierDeclType	t1_glyph_space_coord		5634153	0					
ANR	5634684	Identifier	g1		5634153	1					
ANR	5634685	AssignmentExpression	g1 = ( horiz ? pole1 -> gy : pole1 -> gx )		5634153	2		=			
ANR	5634686	Identifier	g1		5634153	0					
ANR	5634687	ConditionalExpression	horiz ? pole1 -> gy : pole1 -> gx		5634153	1					
ANR	5634688	Condition	horiz		5634153	0					
ANR	5634689	Identifier	horiz		5634153	0					
ANR	5634690	PtrMemberAccess	pole1 -> gy		5634153	1					
ANR	5634691	Identifier	pole1		5634153	0					
ANR	5634692	Identifier	gy		5634153	1					
ANR	5634693	PtrMemberAccess	pole1 -> gx		5634153	2					
ANR	5634694	Identifier	pole1		5634153	0					
ANR	5634695	Identifier	gx		5634153	1					
ANR	5634696	IdentifierDeclStatement	t1_glyph_space_coord t1 = ( horiz ? pole1 -> gx : pole1 -> gy ) ;	2444:20:101711:101768	5634153	4	True				
ANR	5634697	IdentifierDecl	t1 = ( horiz ? pole1 -> gx : pole1 -> gy )		5634153	0					
ANR	5634698	IdentifierDeclType	t1_glyph_space_coord		5634153	0					
ANR	5634699	Identifier	t1		5634153	1					
ANR	5634700	AssignmentExpression	t1 = ( horiz ? pole1 -> gx : pole1 -> gy )		5634153	2		=			
ANR	5634701	Identifier	t1		5634153	0					
ANR	5634702	ConditionalExpression	horiz ? pole1 -> gx : pole1 -> gy		5634153	1					
ANR	5634703	Condition	horiz		5634153	0					
ANR	5634704	Identifier	horiz		5634153	0					
ANR	5634705	PtrMemberAccess	pole1 -> gx		5634153	1					
ANR	5634706	Identifier	pole1		5634153	0					
ANR	5634707	Identifier	gx		5634153	1					
ANR	5634708	PtrMemberAccess	pole1 -> gy		5634153	2					
ANR	5634709	Identifier	pole1		5634153	0					
ANR	5634710	Identifier	gy		5634153	1					
ANR	5634711	IdentifierDeclStatement	bool gt1 = any_abs ( hint -> g0 - g1 ) > any_abs ( hint -> g1 - g1 ) ;	2445:20:101790:101848	5634153	5	True				
ANR	5634712	IdentifierDecl	gt1 = any_abs ( hint -> g0 - g1 ) > any_abs ( hint -> g1 - g1 )		5634153	0					
ANR	5634713	IdentifierDeclType	bool		5634153	0					
ANR	5634714	Identifier	gt1		5634153	1					
ANR	5634715	AssignmentExpression	gt1 = any_abs ( hint -> g0 - g1 ) > any_abs ( hint -> g1 - g1 )		5634153	2		=			
ANR	5634716	Identifier	gt1		5634153	0					
ANR	5634717	RelationalExpression	any_abs ( hint -> g0 - g1 ) > any_abs ( hint -> g1 - g1 )		5634153	1		>			
ANR	5634718	CallExpression	any_abs ( hint -> g0 - g1 )		5634153	0					
ANR	5634719	Callee	any_abs		5634153	0					
ANR	5634720	Identifier	any_abs		5634153	0					
ANR	5634721	ArgumentList	hint -> g0 - g1		5634153	1					
ANR	5634722	Argument	hint -> g0 - g1		5634153	0					
ANR	5634723	AdditiveExpression	hint -> g0 - g1		5634153	0		-			
ANR	5634724	PtrMemberAccess	hint -> g0		5634153	0					
ANR	5634725	Identifier	hint		5634153	0					
ANR	5634726	Identifier	g0		5634153	1					
ANR	5634727	Identifier	g1		5634153	1					
ANR	5634728	CallExpression	any_abs ( hint -> g1 - g1 )		5634153	1					
ANR	5634729	Callee	any_abs		5634153	0					
ANR	5634730	Identifier	any_abs		5634153	0					
ANR	5634731	ArgumentList	hint -> g1 - g1		5634153	1					
ANR	5634732	Argument	hint -> g1 - g1		5634153	0					
ANR	5634733	AdditiveExpression	hint -> g1 - g1		5634153	0		-			
ANR	5634734	PtrMemberAccess	hint -> g1		5634153	0					
ANR	5634735	Identifier	hint		5634153	0					
ANR	5634736	Identifier	g1		5634153	1					
ANR	5634737	Identifier	g1		5634153	1					
ANR	5634738	IfStatement	if ( gt0 != gt1 )		5634153	6					
ANR	5634739	Condition	gt0 != gt1	2447:24:101875:101884	5634153	0	True				
ANR	5634740	EqualityExpression	gt0 != gt1		5634153	0		!=			
ANR	5634741	Identifier	gt0		5634153	0					
ANR	5634742	Identifier	gt1		5634153	1					
ANR	5634743	CompoundStatement		52:36:2772:2772	5634153	1					
ANR	5634744	ExpressionStatement	d = any_abs ( t1 - t0 )	2448:24:101913:101933	5634153	0	True				
ANR	5634745	AssignmentExpression	d = any_abs ( t1 - t0 )		5634153	0		=			
ANR	5634746	Identifier	d		5634153	0					
ANR	5634747	CallExpression	any_abs ( t1 - t0 )		5634153	1					
ANR	5634748	Callee	any_abs		5634153	0					
ANR	5634749	Identifier	any_abs		5634153	0					
ANR	5634750	ArgumentList	t1 - t0		5634153	1					
ANR	5634751	Argument	t1 - t0		5634153	0					
ANR	5634752	AdditiveExpression	t1 - t0		5634153	0		-			
ANR	5634753	Identifier	t1		5634153	0					
ANR	5634754	Identifier	t0		5634153	1					
ANR	5634755	IfStatement	if ( md > d )		5634153	1					
ANR	5634756	Condition	md > d	2449:28:101963:101968	5634153	0	True				
ANR	5634757	RelationalExpression	md > d		5634153	0		>			
ANR	5634758	Identifier	md		5634153	0					
ANR	5634759	Identifier	d		5634153	1					
ANR	5634760	CompoundStatement		54:36:2856:2856	5634153	1					
ANR	5634761	ExpressionStatement	mj = j	2450:28:102001:102007	5634153	0	True				
ANR	5634762	AssignmentExpression	mj = j		5634153	0		=			
ANR	5634763	Identifier	mj		5634153	0					
ANR	5634764	Identifier	j		5634153	1					
ANR	5634765	IfStatement	if ( mj != - 1 )		5634153	9					
ANR	5634766	Condition	mj != - 1	2454:20:102095:102102	5634153	0	True				
ANR	5634767	EqualityExpression	mj != - 1		5634153	0		!=			
ANR	5634768	Identifier	mj		5634153	0					
ANR	5634769	UnaryOperationExpression	- 1		5634153	1					
ANR	5634770	UnaryOperator	-		5634153	0					
ANR	5634771	PrimaryExpression	1		5634153	1					
ANR	5634772	CompoundStatement		59:33:2993:2993	5634153	1					
ANR	5634773	ExpressionStatement	ha0 -> opposite = mj	2455:20:102130:102148	5634153	0	True				
ANR	5634774	AssignmentExpression	ha0 -> opposite = mj		5634153	0		=			
ANR	5634775	PtrMemberAccess	ha0 -> opposite		5634153	0					
ANR	5634776	Identifier	ha0		5634153	0					
ANR	5634777	Identifier	opposite		5634153	1					
ANR	5634778	Identifier	mj		5634153	1					
ANR	5634779	ExpressionStatement	self -> hint_applying [ mj ] . opposite = j	2456:20:102170:102206	5634153	1	True				
ANR	5634780	AssignmentExpression	self -> hint_applying [ mj ] . opposite = j		5634153	0		=			
ANR	5634781	MemberAccess	self -> hint_applying [ mj ] . opposite		5634153	0					
ANR	5634782	ArrayIndexing	self -> hint_applying [ mj ]		5634153	0					
ANR	5634783	PtrMemberAccess	self -> hint_applying		5634153	0					
ANR	5634784	Identifier	self		5634153	0					
ANR	5634785	Identifier	hint_applying		5634153	1					
ANR	5634786	Identifier	mj		5634153	1					
ANR	5634787	Identifier	opposite		5634153	1					
ANR	5634788	Identifier	j		5634153	1					
ANR	5634789	ForStatement	for ( k = 0 ; k < self -> hint_applying_count ; k ++ )		5634153	6					
ANR	5634790	ForInit	k = 0 ;	2459:17:102257:102262	5634153	0	True				
ANR	5634791	AssignmentExpression	k = 0		5634153	0		=			
ANR	5634792	Identifier	k		5634153	0					
ANR	5634793	PrimaryExpression	0		5634153	1					
ANR	5634794	Condition	k < self -> hint_applying_count	2459:24:102264:102292	5634153	1	True				
ANR	5634795	RelationalExpression	k < self -> hint_applying_count		5634153	0		<			
ANR	5634796	Identifier	k		5634153	0					
ANR	5634797	PtrMemberAccess	self -> hint_applying_count		5634153	1					
ANR	5634798	Identifier	self		5634153	0					
ANR	5634799	Identifier	hint_applying_count		5634153	1					
ANR	5634800	PostIncDecOperationExpression	k ++	2459:55:102295:102297	5634153	2	True				
ANR	5634801	Identifier	k		5634153	0					
ANR	5634802	IncDec	++		5634153	1					
ANR	5634803	CompoundStatement		72:16:3663:3745	5634153	3					
ANR	5634804	IdentifierDeclStatement	t1_hint_applying * ha = & self -> hint_applying [ k ] ;	2460:16:102318:102364	5634153	0	True				
ANR	5634805	IdentifierDecl	* ha = & self -> hint_applying [ k ]		5634153	0					
ANR	5634806	IdentifierDeclType	t1_hint_applying *		5634153	0					
ANR	5634807	Identifier	ha		5634153	1					
ANR	5634808	AssignmentExpression	* ha = & self -> hint_applying [ k ]		5634153	2		=			
ANR	5634809	Identifier	ha		5634153	0					
ANR	5634810	UnaryOperationExpression	& self -> hint_applying [ k ]		5634153	1					
ANR	5634811	UnaryOperator	&		5634153	0					
ANR	5634812	ArrayIndexing	self -> hint_applying [ k ]		5634153	1					
ANR	5634813	PtrMemberAccess	self -> hint_applying		5634153	0					
ANR	5634814	Identifier	self		5634153	0					
ANR	5634815	Identifier	hint_applying		5634153	1					
ANR	5634816	Identifier	k		5634153	1					
ANR	5634817	IdentifierDeclStatement	int pole_index = ha -> pole ;	2461:16:102382:102407	5634153	1	True				
ANR	5634818	IdentifierDecl	pole_index = ha -> pole		5634153	0					
ANR	5634819	IdentifierDeclType	int		5634153	0					
ANR	5634820	Identifier	pole_index		5634153	1					
ANR	5634821	AssignmentExpression	pole_index = ha -> pole		5634153	2		=			
ANR	5634822	Identifier	pole_index		5634153	0					
ANR	5634823	PtrMemberAccess	ha -> pole		5634153	1					
ANR	5634824	Identifier	ha		5634153	0					
ANR	5634825	Identifier	pole		5634153	1					
ANR	5634826	IdentifierDeclStatement	t1_pole * pole = & self -> pole [ pole_index ] ;	2462:16:102425:102464	5634153	2	True				
ANR	5634827	IdentifierDecl	* pole = & self -> pole [ pole_index ]		5634153	0					
ANR	5634828	IdentifierDeclType	t1_pole *		5634153	0					
ANR	5634829	Identifier	pole		5634153	1					
ANR	5634830	AssignmentExpression	* pole = & self -> pole [ pole_index ]		5634153	2		=			
ANR	5634831	Identifier	pole		5634153	0					
ANR	5634832	UnaryOperationExpression	& self -> pole [ pole_index ]		5634153	1					
ANR	5634833	UnaryOperator	&		5634153	0					
ANR	5634834	ArrayIndexing	self -> pole [ pole_index ]		5634153	1					
ANR	5634835	PtrMemberAccess	self -> pole		5634153	0					
ANR	5634836	Identifier	self		5634153	0					
ANR	5634837	Identifier	pole		5634153	1					
ANR	5634838	Identifier	pole_index		5634153	1					
ANR	5634839	IdentifierDeclStatement	t1_glyph_space_coord g0 = ( horiz ? pole -> gy : pole -> gx ) ;	2463:16:102482:102537	5634153	3	True				
ANR	5634840	IdentifierDecl	g0 = ( horiz ? pole -> gy : pole -> gx )		5634153	0					
ANR	5634841	IdentifierDeclType	t1_glyph_space_coord		5634153	0					
ANR	5634842	Identifier	g0		5634153	1					
ANR	5634843	AssignmentExpression	g0 = ( horiz ? pole -> gy : pole -> gx )		5634153	2		=			
ANR	5634844	Identifier	g0		5634153	0					
ANR	5634845	ConditionalExpression	horiz ? pole -> gy : pole -> gx		5634153	1					
ANR	5634846	Condition	horiz		5634153	0					
ANR	5634847	Identifier	horiz		5634153	0					
ANR	5634848	PtrMemberAccess	pole -> gy		5634153	1					
ANR	5634849	Identifier	pole		5634153	0					
ANR	5634850	Identifier	gy		5634153	1					
ANR	5634851	PtrMemberAccess	pole -> gx		5634153	2					
ANR	5634852	Identifier	pole		5634153	0					
ANR	5634853	Identifier	gx		5634153	1					
ANR	5634854	IdentifierDeclStatement	bool gt0 = any_abs ( hint -> g0 - g0 ) > any_abs ( hint -> g1 - g0 ) ;	2464:16:102555:102613	5634153	4	True				
ANR	5634855	IdentifierDecl	gt0 = any_abs ( hint -> g0 - g0 ) > any_abs ( hint -> g1 - g0 )		5634153	0					
ANR	5634856	IdentifierDeclType	bool		5634153	0					
ANR	5634857	Identifier	gt0		5634153	1					
ANR	5634858	AssignmentExpression	gt0 = any_abs ( hint -> g0 - g0 ) > any_abs ( hint -> g1 - g0 )		5634153	2		=			
ANR	5634859	Identifier	gt0		5634153	0					
ANR	5634860	RelationalExpression	any_abs ( hint -> g0 - g0 ) > any_abs ( hint -> g1 - g0 )		5634153	1		>			
ANR	5634861	CallExpression	any_abs ( hint -> g0 - g0 )		5634153	0					
ANR	5634862	Callee	any_abs		5634153	0					
ANR	5634863	Identifier	any_abs		5634153	0					
ANR	5634864	ArgumentList	hint -> g0 - g0		5634153	1					
ANR	5634865	Argument	hint -> g0 - g0		5634153	0					
ANR	5634866	AdditiveExpression	hint -> g0 - g0		5634153	0		-			
ANR	5634867	PtrMemberAccess	hint -> g0		5634153	0					
ANR	5634868	Identifier	hint		5634153	0					
ANR	5634869	Identifier	g0		5634153	1					
ANR	5634870	Identifier	g0		5634153	1					
ANR	5634871	CallExpression	any_abs ( hint -> g1 - g0 )		5634153	1					
ANR	5634872	Callee	any_abs		5634153	0					
ANR	5634873	Identifier	any_abs		5634153	0					
ANR	5634874	ArgumentList	hint -> g1 - g0		5634153	1					
ANR	5634875	Argument	hint -> g1 - g0		5634153	0					
ANR	5634876	AdditiveExpression	hint -> g1 - g0		5634153	0		-			
ANR	5634877	PtrMemberAccess	hint -> g1		5634153	0					
ANR	5634878	Identifier	hint		5634153	0					
ANR	5634879	Identifier	g1		5634153	1					
ANR	5634880	Identifier	g0		5634153	1					
ANR	5634881	IdentifierDeclStatement	enum t1_align_type align = ( ! gt0 ? hint -> aligned0 : hint -> aligned1 ) ;	2465:16:102631:102698	5634153	5	True				
ANR	5634882	IdentifierDecl	align = ( ! gt0 ? hint -> aligned0 : hint -> aligned1 )		5634153	0					
ANR	5634883	IdentifierDeclType	enum t1_align_type		5634153	0					
ANR	5634884	Identifier	align		5634153	1					
ANR	5634885	AssignmentExpression	align = ( ! gt0 ? hint -> aligned0 : hint -> aligned1 )		5634153	2		=			
ANR	5634886	Identifier	align		5634153	0					
ANR	5634887	ConditionalExpression	! gt0 ? hint -> aligned0 : hint -> aligned1		5634153	1					
ANR	5634888	Condition	! gt0		5634153	0					
ANR	5634889	UnaryOperationExpression	! gt0		5634153	0					
ANR	5634890	UnaryOperator	!		5634153	0					
ANR	5634891	Identifier	gt0		5634153	1					
ANR	5634892	PtrMemberAccess	hint -> aligned0		5634153	1					
ANR	5634893	Identifier	hint		5634153	0					
ANR	5634894	Identifier	aligned0		5634153	1					
ANR	5634895	PtrMemberAccess	hint -> aligned1		5634153	2					
ANR	5634896	Identifier	hint		5634153	0					
ANR	5634897	Identifier	aligned1		5634153	1					
ANR	5634898	IdentifierDeclStatement	t1_glyph_space_coord ag = ( ! gt0 ? ag0 : ag1 ) ;	2466:16:102716:102760	5634153	6	True				
ANR	5634899	IdentifierDecl	ag = ( ! gt0 ? ag0 : ag1 )		5634153	0					
ANR	5634900	IdentifierDeclType	t1_glyph_space_coord		5634153	0					
ANR	5634901	Identifier	ag		5634153	1					
ANR	5634902	AssignmentExpression	ag = ( ! gt0 ? ag0 : ag1 )		5634153	2		=			
ANR	5634903	Identifier	ag		5634153	0					
ANR	5634904	ConditionalExpression	! gt0 ? ag0 : ag1		5634153	1					
ANR	5634905	Condition	! gt0		5634153	0					
ANR	5634906	UnaryOperationExpression	! gt0		5634153	0					
ANR	5634907	UnaryOperator	!		5634153	0					
ANR	5634908	Identifier	gt0		5634153	1					
ANR	5634909	Identifier	ag0		5634153	1					
ANR	5634910	Identifier	ag1		5634153	2					
ANR	5634911	IdentifierDeclStatement	t1_glyph_space_coord bl = ( ! gt0 ? hint -> boundary_length1 : hint -> boundary_length0 ) ;	2467:16:102778:102860	5634153	7	True				
ANR	5634912	IdentifierDecl	bl = ( ! gt0 ? hint -> boundary_length1 : hint -> boundary_length0 )		5634153	0					
ANR	5634913	IdentifierDeclType	t1_glyph_space_coord		5634153	0					
ANR	5634914	Identifier	bl		5634153	1					
ANR	5634915	AssignmentExpression	bl = ( ! gt0 ? hint -> boundary_length1 : hint -> boundary_length0 )		5634153	2		=			
ANR	5634916	Identifier	bl		5634153	0					
ANR	5634917	ConditionalExpression	! gt0 ? hint -> boundary_length1 : hint -> boundary_length0		5634153	1					
ANR	5634918	Condition	! gt0		5634153	0					
ANR	5634919	UnaryOperationExpression	! gt0		5634153	0					
ANR	5634920	UnaryOperator	!		5634153	0					
ANR	5634921	Identifier	gt0		5634153	1					
ANR	5634922	PtrMemberAccess	hint -> boundary_length1		5634153	1					
ANR	5634923	Identifier	hint		5634153	0					
ANR	5634924	Identifier	boundary_length1		5634153	1					
ANR	5634925	PtrMemberAccess	hint -> boundary_length0		5634153	2					
ANR	5634926	Identifier	hint		5634153	0					
ANR	5634927	Identifier	boundary_length0		5634153	1					
ANR	5634928	IfStatement	if ( ha -> opposite == - 1 )		5634153	8					
ANR	5634929	Condition	ha -> opposite == - 1	2469:20:102898:102915	5634153	0	True				
ANR	5634930	EqualityExpression	ha -> opposite == - 1		5634153	0		==			
ANR	5634931	PtrMemberAccess	ha -> opposite		5634153	0					
ANR	5634932	Identifier	ha		5634153	0					
ANR	5634933	Identifier	opposite		5634153	1					
ANR	5634934	UnaryOperationExpression	- 1		5634153	1					
ANR	5634935	UnaryOperator	-		5634153	0					
ANR	5634936	PrimaryExpression	1		5634153	1					
ANR	5634937	ExpressionStatement	align = weak	2470:20:102938:102950	5634153	1	True				
ANR	5634938	AssignmentExpression	align = weak		5634153	0		=			
ANR	5634939	Identifier	align		5634153	0					
ANR	5634940	Identifier	weak		5634153	1					
ANR	5634941	IfStatement	if ( ! horiz )		5634153	9					
ANR	5634942	Condition	! horiz	2471:20:102972:102977	5634153	0	True				
ANR	5634943	UnaryOperationExpression	! horiz		5634153	0					
ANR	5634944	UnaryOperator	!		5634153	0					
ANR	5634945	Identifier	horiz		5634153	1					
ANR	5634946	CompoundStatement		76:28:3865:3865	5634153	1					
ANR	5634947	IfStatement	if ( pole -> aligned_x < align )		5634153	0					
ANR	5634948	Condition	pole -> aligned_x < align	2472:24:103006:103028	5634153	0	True				
ANR	5634949	RelationalExpression	pole -> aligned_x < align		5634153	0		<			
ANR	5634950	PtrMemberAccess	pole -> aligned_x		5634153	0					
ANR	5634951	Identifier	pole		5634153	0					
ANR	5634952	Identifier	aligned_x		5634153	1					
ANR	5634953	Identifier	align		5634153	1					
ANR	5634954	ExpressionStatement	"pole -> ax = ag , pole -> aligned_x = align , pole -> boundary_length_x = bl"	2473:24:103055:103123	5634153	1	True				
ANR	5634955	Expression	"pole -> ax = ag , pole -> aligned_x = align , pole -> boundary_length_x = bl"		5634153	0					
ANR	5634956	AssignmentExpression	pole -> ax = ag		5634153	0		=			
ANR	5634957	PtrMemberAccess	pole -> ax		5634153	0					
ANR	5634958	Identifier	pole		5634153	0					
ANR	5634959	Identifier	ax		5634153	1					
ANR	5634960	Identifier	ag		5634153	1					
ANR	5634961	Expression	"pole -> aligned_x = align , pole -> boundary_length_x = bl"		5634153	1					
ANR	5634962	AssignmentExpression	pole -> aligned_x = align		5634153	0		=			
ANR	5634963	PtrMemberAccess	pole -> aligned_x		5634153	0					
ANR	5634964	Identifier	pole		5634153	0					
ANR	5634965	Identifier	aligned_x		5634153	1					
ANR	5634966	Identifier	align		5634153	1					
ANR	5634967	AssignmentExpression	pole -> boundary_length_x = bl		5634153	1		=			
ANR	5634968	PtrMemberAccess	pole -> boundary_length_x		5634153	0					
ANR	5634969	Identifier	pole		5634153	0					
ANR	5634970	Identifier	boundary_length_x		5634153	1					
ANR	5634971	Identifier	bl		5634153	1					
ANR	5634972	ElseStatement	else		5634153	0					
ANR	5634973	CompoundStatement		79:23:4033:4033	5634153	0					
ANR	5634974	IfStatement	if ( pole -> aligned_y < align )		5634153	0					
ANR	5634975	Condition	pole -> aligned_y < align	2475:24:103174:103196	5634153	0	True				
ANR	5634976	RelationalExpression	pole -> aligned_y < align		5634153	0		<			
ANR	5634977	PtrMemberAccess	pole -> aligned_y		5634153	0					
ANR	5634978	Identifier	pole		5634153	0					
ANR	5634979	Identifier	aligned_y		5634153	1					
ANR	5634980	Identifier	align		5634153	1					
ANR	5634981	ExpressionStatement	"pole -> ay = ag , pole -> aligned_y = align , pole -> boundary_length_y = bl"	2476:24:103223:103291	5634153	1	True				
ANR	5634982	Expression	"pole -> ay = ag , pole -> aligned_y = align , pole -> boundary_length_y = bl"		5634153	0					
ANR	5634983	AssignmentExpression	pole -> ay = ag		5634153	0		=			
ANR	5634984	PtrMemberAccess	pole -> ay		5634153	0					
ANR	5634985	Identifier	pole		5634153	0					
ANR	5634986	Identifier	ay		5634153	1					
ANR	5634987	Identifier	ag		5634153	1					
ANR	5634988	Expression	"pole -> aligned_y = align , pole -> boundary_length_y = bl"		5634153	1					
ANR	5634989	AssignmentExpression	pole -> aligned_y = align		5634153	0		=			
ANR	5634990	PtrMemberAccess	pole -> aligned_y		5634153	0					
ANR	5634991	Identifier	pole		5634153	0					
ANR	5634992	Identifier	aligned_y		5634153	1					
ANR	5634993	Identifier	align		5634153	1					
ANR	5634994	AssignmentExpression	pole -> boundary_length_y = bl		5634153	1		=			
ANR	5634995	PtrMemberAccess	pole -> boundary_length_y		5634153	0					
ANR	5634996	Identifier	pole		5634153	0					
ANR	5634997	Identifier	boundary_length_y		5634153	1					
ANR	5634998	Identifier	bl		5634153	1					
ANR	5634999	ReturnStatement	return 0 ;	2480:4:103339:103347	5634153	4	True				
ANR	5635000	PrimaryExpression	0		5634153	0					
ANR	5635001	ReturnType	static int		5634153	1					
ANR	5635002	Identifier	t1_hinter__align_stem_poles		5634153	2					
ANR	5635003	ParameterList	t1_hinter * self		5634153	3					
ANR	5635004	Parameter	t1_hinter * self	2395:39:99096:99111	5634153	0	True				
ANR	5635005	ParameterType	t1_hinter *		5634153	0					
ANR	5635006	Identifier	self		5634153	1					
ANR	5635007	CFGEntryNode	ENTRY		5634153		True				
ANR	5635008	CFGExitNode	EXIT		5634153		True				
ANR	5635009	Symbol	self -> hint_range [ k ] . next		5634153						
ANR	5635010	Symbol	end_range_pole		5634153						
ANR	5635011	Symbol	ha -> opposite		5634153						
ANR	5635012	Symbol	pole1 -> gy		5634153						
ANR	5635013	Symbol	pole1 -> gx		5634153						
ANR	5635014	Symbol	ha -> pole		5634153						
ANR	5635015	Symbol	pole -> gy		5634153						
ANR	5635016	Symbol	vstem		5634153						
ANR	5635017	Symbol	pole -> gx		5634153						
ANR	5635018	Symbol	pole		5634153						
ANR	5635019	Symbol	align		5634153						
ANR	5635020	Symbol	hint -> g1		5634153						
ANR	5635021	Symbol	ha0 -> pole		5634153						
ANR	5635022	Symbol	self -> hint_applying [ mj ] . opposite		5634153						
ANR	5635023	Symbol	* self -> hint		5634153						
ANR	5635024	Symbol	hint -> ag1		5634153						
ANR	5635025	Symbol	hint -> ag0		5634153						
ANR	5635026	Symbol	md		5634153						
ANR	5635027	Symbol	self -> blue_fuzz		5634153						
ANR	5635028	Symbol	mj		5634153						
ANR	5635029	Symbol	* self -> hint_applying		5634153						
ANR	5635030	Symbol	pole -> type		5634153						
ANR	5635031	Symbol	* hint		5634153						
ANR	5635032	Symbol	* self		5634153						
ANR	5635033	Symbol	pole0		5634153						
ANR	5635034	Symbol	ag		5634153						
ANR	5635035	Symbol	pole1		5634153						
ANR	5635036	Symbol	g0		5634153						
ANR	5635037	Symbol	g1		5634153						
ANR	5635038	Symbol	beg_range_pole		5634153						
ANR	5635039	Symbol	hint -> g0		5634153						
ANR	5635040	Symbol	pole_index		5634153						
ANR	5635041	Symbol	hint		5634153						
ANR	5635042	Symbol	t1_hinter__store_hint_applying		5634153						
ANR	5635043	Symbol	self -> hint_applying		5634153						
ANR	5635044	Symbol	t0		5634153						
ANR	5635045	Symbol	* pole1		5634153						
ANR	5635046	Symbol	* ha		5634153						
ANR	5635047	Symbol	* pole0		5634153						
ANR	5635048	Symbol	* ha1		5634153						
ANR	5635049	Symbol	t1		5634153						
ANR	5635050	Symbol	* ha0		5634153						
ANR	5635051	Symbol	pole -> aligned_y		5634153						
ANR	5635052	Symbol	pole -> aligned_x		5634153						
ANR	5635053	Symbol	* mj		5634153						
ANR	5635054	Symbol	oncurve		5634153						
ANR	5635055	Symbol	code		5634153						
ANR	5635056	Symbol	ha1 -> pole		5634153						
ANR	5635057	Symbol	pole -> boundary_length_y		5634153						
ANR	5635058	Symbol	ag1		5634153						
ANR	5635059	Symbol	bl		5634153						
ANR	5635060	Symbol	ag0		5634153						
ANR	5635061	Symbol	pole -> boundary_length_x		5634153						
ANR	5635062	Symbol	pole -> ay		5634153						
ANR	5635063	Symbol	* pole		5634153						
ANR	5635064	Symbol	pole -> ax		5634153						
ANR	5635065	Symbol	weak		5634153						
ANR	5635066	Symbol	self -> hint_applying_count		5634153						
ANR	5635067	Symbol	horiz		5634153						
ANR	5635068	Symbol	ha0		5634153						
ANR	5635069	Symbol	any_abs		5634153						
ANR	5635070	Symbol	ha1		5634153						
ANR	5635071	Symbol	self -> pole		5634153						
ANR	5635072	Symbol	self -> hint_range [ k ] . beg_pole		5634153						
ANR	5635073	Symbol	hint -> type		5634153						
ANR	5635074	Symbol	hstem		5634153						
ANR	5635075	Symbol	pole0 -> gx		5634153						
ANR	5635076	Symbol	pole0 -> gy		5634153						
ANR	5635077	Symbol	gt0		5634153						
ANR	5635078	Symbol	self -> hint [ i ] . type		5634153						
ANR	5635079	Symbol	self -> hint		5634153						
ANR	5635080	Symbol	d		5634153						
ANR	5635081	Symbol	* * self		5634153						
ANR	5635082	Symbol	gt1		5634153						
ANR	5635083	Symbol	ha0 -> opposite		5634153						
ANR	5635084	Symbol	hint -> aligned0		5634153						
ANR	5635085	Symbol	hint -> boundary_length0		5634153						
ANR	5635086	Symbol	i		5634153						
ANR	5635087	Symbol	hint -> aligned1		5634153						
ANR	5635088	Symbol	j		5634153						
ANR	5635089	Symbol	k		5634153						
ANR	5635090	Symbol	self -> hint_range		5634153						
ANR	5635091	Symbol	hint -> boundary_length1		5634153						
ANR	5635092	Symbol	* self -> hint_range		5634153						
ANR	5635093	Symbol	pole_index0		5634153						
ANR	5635094	Symbol	self -> hint_count		5634153						
ANR	5635095	Symbol	* i		5634153						
ANR	5635096	Symbol	pole_index1		5634153						
ANR	5635097	Symbol	self -> hint [ i ] . range_index		5634153						
ANR	5635098	Symbol	* k		5634153						
ANR	5635099	Symbol	self		5634153						
ANR	5635100	Symbol	ha		5634153						
ANR	5635101	Symbol	self -> hint_range [ k ] . end_pole		5634153						
ANR	5635102	Symbol	fuzz		5634153						
ANR	5635103	Function	t1_hinter__find_vstem_by_center	2483:0:103352:103876							
ANR	5635104	FunctionDef	"t1_hinter__find_vstem_by_center (t1_hinter * self , t1_glyph_space_coord gx)"		5635103	0					
ANR	5635105	CompoundStatement		2484:0:103444:103876	5635103	0					
ANR	5635106	IdentifierDeclStatement	int i ;	2485:4:103489:103494	5635103	0	True				
ANR	5635107	IdentifierDecl	i		5635103	0					
ANR	5635108	IdentifierDeclType	int		5635103	0					
ANR	5635109	Identifier	i		5635103	1					
ANR	5635110	IdentifierDeclStatement	t1_hint * hint = NULL ;	2486:4:103500:103521	5635103	1	True				
ANR	5635111	IdentifierDecl	* hint = NULL		5635103	0					
ANR	5635112	IdentifierDeclType	t1_hint *		5635103	0					
ANR	5635113	Identifier	hint		5635103	1					
ANR	5635114	AssignmentExpression	* hint = NULL		5635103	2		=			
ANR	5635115	Identifier	NULL		5635103	0					
ANR	5635116	Identifier	NULL		5635103	1					
ANR	5635117	IdentifierDeclStatement	t1_glyph_space_coord dx = fixed_1 ;	2487:4:103527:103560	5635103	2	True				
ANR	5635118	IdentifierDecl	dx = fixed_1		5635103	0					
ANR	5635119	IdentifierDeclType	t1_glyph_space_coord		5635103	0					
ANR	5635120	Identifier	dx		5635103	1					
ANR	5635121	AssignmentExpression	dx = fixed_1		5635103	2		=			
ANR	5635122	Identifier	fixed_1		5635103	0					
ANR	5635123	Identifier	fixed_1		5635103	1					
ANR	5635124	ForStatement	for ( i = 0 ; i < self -> hint_count ; i ++ )		5635103	3					
ANR	5635125	ForInit	i = 0 ;	2489:9:103572:103577	5635103	0	True				
ANR	5635126	AssignmentExpression	i = 0		5635103	0		=			
ANR	5635127	Identifier	i		5635103	0					
ANR	5635128	PrimaryExpression	0		5635103	1					
ANR	5635129	Condition	i < self -> hint_count	2489:16:103579:103598	5635103	1	True				
ANR	5635130	RelationalExpression	i < self -> hint_count		5635103	0		<			
ANR	5635131	Identifier	i		5635103	0					
ANR	5635132	PtrMemberAccess	self -> hint_count		5635103	1					
ANR	5635133	Identifier	self		5635103	0					
ANR	5635134	Identifier	hint_count		5635103	1					
ANR	5635135	PostIncDecOperationExpression	i ++	2489:38:103601:103603	5635103	2	True				
ANR	5635136	Identifier	i		5635103	0					
ANR	5635137	IncDec	++		5635103	1					
ANR	5635138	IfStatement	if ( self -> hint [ i ] . type == vstem )		5635103	3					
ANR	5635139	Condition	self -> hint [ i ] . type == vstem	2490:12:103618:103644	5635103	0	True				
ANR	5635140	EqualityExpression	self -> hint [ i ] . type == vstem		5635103	0		==			
ANR	5635141	MemberAccess	self -> hint [ i ] . type		5635103	0					
ANR	5635142	ArrayIndexing	self -> hint [ i ]		5635103	0					
ANR	5635143	PtrMemberAccess	self -> hint		5635103	0					
ANR	5635144	Identifier	self		5635103	0					
ANR	5635145	Identifier	hint		5635103	1					
ANR	5635146	Identifier	i		5635103	1					
ANR	5635147	Identifier	type		5635103	1					
ANR	5635148	Identifier	vstem		5635103	1					
ANR	5635149	CompoundStatement		8:12:216:298	5635103	1					
ANR	5635150	IdentifierDeclStatement	t1_glyph_space_coord d = any_abs ( gx - ( self -> hint [ i ] . ag0 + self -> hint [ i ] . ag1 ) / 2 ) ;	2491:12:103661:103743	5635103	0	True				
ANR	5635151	IdentifierDecl	d = any_abs ( gx - ( self -> hint [ i ] . ag0 + self -> hint [ i ] . ag1 ) / 2 )		5635103	0					
ANR	5635152	IdentifierDeclType	t1_glyph_space_coord		5635103	0					
ANR	5635153	Identifier	d		5635103	1					
ANR	5635154	AssignmentExpression	d = any_abs ( gx - ( self -> hint [ i ] . ag0 + self -> hint [ i ] . ag1 ) / 2 )		5635103	2		=			
ANR	5635155	Identifier	d		5635103	0					
ANR	5635156	CallExpression	any_abs ( gx - ( self -> hint [ i ] . ag0 + self -> hint [ i ] . ag1 ) / 2 )		5635103	1					
ANR	5635157	Callee	any_abs		5635103	0					
ANR	5635158	Identifier	any_abs		5635103	0					
ANR	5635159	ArgumentList	gx - ( self -> hint [ i ] . ag0 + self -> hint [ i ] . ag1 ) / 2		5635103	1					
ANR	5635160	Argument	gx - ( self -> hint [ i ] . ag0 + self -> hint [ i ] . ag1 ) / 2		5635103	0					
ANR	5635161	AdditiveExpression	gx - ( self -> hint [ i ] . ag0 + self -> hint [ i ] . ag1 ) / 2		5635103	0		-			
ANR	5635162	Identifier	gx		5635103	0					
ANR	5635163	MultiplicativeExpression	( self -> hint [ i ] . ag0 + self -> hint [ i ] . ag1 ) / 2		5635103	1		/			
ANR	5635164	AdditiveExpression	self -> hint [ i ] . ag0 + self -> hint [ i ] . ag1		5635103	0		+			
ANR	5635165	MemberAccess	self -> hint [ i ] . ag0		5635103	0					
ANR	5635166	ArrayIndexing	self -> hint [ i ]		5635103	0					
ANR	5635167	PtrMemberAccess	self -> hint		5635103	0					
ANR	5635168	Identifier	self		5635103	0					
ANR	5635169	Identifier	hint		5635103	1					
ANR	5635170	Identifier	i		5635103	1					
ANR	5635171	Identifier	ag0		5635103	1					
ANR	5635172	MemberAccess	self -> hint [ i ] . ag1		5635103	1					
ANR	5635173	ArrayIndexing	self -> hint [ i ]		5635103	0					
ANR	5635174	PtrMemberAccess	self -> hint		5635103	0					
ANR	5635175	Identifier	self		5635103	0					
ANR	5635176	Identifier	hint		5635103	1					
ANR	5635177	Identifier	i		5635103	1					
ANR	5635178	Identifier	ag1		5635103	1					
ANR	5635179	PrimaryExpression	2		5635103	1					
ANR	5635180	IfStatement	if ( dx > d )		5635103	1					
ANR	5635181	Condition	dx > d	2493:16:103762:103767	5635103	0	True				
ANR	5635182	RelationalExpression	dx > d		5635103	0		>			
ANR	5635183	Identifier	dx		5635103	0					
ANR	5635184	Identifier	d		5635103	1					
ANR	5635185	CompoundStatement		10:24:325:325	5635103	1					
ANR	5635186	ExpressionStatement	dx = d	2494:16:103788:103794	5635103	0	True				
ANR	5635187	AssignmentExpression	dx = d		5635103	0		=			
ANR	5635188	Identifier	dx		5635103	0					
ANR	5635189	Identifier	d		5635103	1					
ANR	5635190	ExpressionStatement	hint = & self -> hint [ i ]	2495:16:103812:103833	5635103	1	True				
ANR	5635191	AssignmentExpression	hint = & self -> hint [ i ]		5635103	0		=			
ANR	5635192	Identifier	hint		5635103	0					
ANR	5635193	UnaryOperationExpression	& self -> hint [ i ]		5635103	1					
ANR	5635194	UnaryOperator	&		5635103	0					
ANR	5635195	ArrayIndexing	self -> hint [ i ]		5635103	1					
ANR	5635196	PtrMemberAccess	self -> hint		5635103	0					
ANR	5635197	Identifier	self		5635103	0					
ANR	5635198	Identifier	hint		5635103	1					
ANR	5635199	Identifier	i		5635103	1					
ANR	5635200	ReturnStatement	return hint ;	2498:4:103863:103874	5635103	4	True				
ANR	5635201	Identifier	hint		5635103	0					
ANR	5635202	ReturnType	static t1_hint *		5635103	1					
ANR	5635203	Identifier	t1_hinter__find_vstem_by_center		5635103	2					
ANR	5635204	ParameterList	"t1_hinter * self , t1_glyph_space_coord gx"		5635103	3					
ANR	5635205	Parameter	t1_hinter * self	2483:49:103401:103416	5635103	0	True				
ANR	5635206	ParameterType	t1_hinter *		5635103	0					
ANR	5635207	Identifier	self		5635103	1					
ANR	5635208	Parameter	t1_glyph_space_coord gx	2483:67:103419:103441	5635103	1	True				
ANR	5635209	ParameterType	t1_glyph_space_coord		5635103	0					
ANR	5635210	Identifier	gx		5635103	1					
ANR	5635211	CFGEntryNode	ENTRY		5635103		True				
ANR	5635212	CFGExitNode	EXIT		5635103		True				
ANR	5635213	Symbol	NULL		5635103						
ANR	5635214	Symbol	self -> hint [ i ] . type		5635103						
ANR	5635215	Symbol	self -> hint		5635103						
ANR	5635216	Symbol	d		5635103						
ANR	5635217	Symbol	* * self		5635103						
ANR	5635218	Symbol	* self		5635103						
ANR	5635219	Symbol	i		5635103						
ANR	5635220	Symbol	vstem		5635103						
ANR	5635221	Symbol	gx		5635103						
ANR	5635222	Symbol	* self -> hint		5635103						
ANR	5635223	Symbol	self -> hint_count		5635103						
ANR	5635224	Symbol	* i		5635103						
ANR	5635225	Symbol	self -> hint [ i ] . ag0		5635103						
ANR	5635226	Symbol	dx		5635103						
ANR	5635227	Symbol	fixed_1		5635103						
ANR	5635228	Symbol	self -> hint [ i ] . ag1		5635103						
ANR	5635229	Symbol	hint		5635103						
ANR	5635230	Symbol	any_abs		5635103						
ANR	5635231	Symbol	self		5635103						
ANR	5635232	Function	t1_hinter__process_dotsection	2501:0:103879:106481							
ANR	5635233	FunctionDef	"t1_hinter__process_dotsection (t1_hinter * self , int beg_pole , int end_pole)"		5635232	0					
ANR	5635234	CompoundStatement		2502:0:103967:106481	5635232	0					
ANR	5635235	IdentifierDeclStatement	int i ;	2505:4:104091:104096	5635232	0	True				
ANR	5635236	IdentifierDecl	i		5635232	0					
ANR	5635237	IdentifierDeclType	int		5635232	0					
ANR	5635238	Identifier	i		5635232	1					
ANR	5635239	IdentifierDeclStatement	"t1_glyph_space_coord min_gx = self -> pole [ beg_pole ] . gx , min_gy = self -> pole [ beg_pole ] . gy ;"	2506:4:104102:104189	5635232	1	True				
ANR	5635240	IdentifierDecl	min_gx = self -> pole [ beg_pole ] . gx		5635232	0					
ANR	5635241	IdentifierDeclType	t1_glyph_space_coord		5635232	0					
ANR	5635242	Identifier	min_gx		5635232	1					
ANR	5635243	AssignmentExpression	min_gx = self -> pole [ beg_pole ] . gx		5635232	2		=			
ANR	5635244	Identifier	min_gx		5635232	0					
ANR	5635245	MemberAccess	self -> pole [ beg_pole ] . gx		5635232	1					
ANR	5635246	ArrayIndexing	self -> pole [ beg_pole ]		5635232	0					
ANR	5635247	PtrMemberAccess	self -> pole		5635232	0					
ANR	5635248	Identifier	self		5635232	0					
ANR	5635249	Identifier	pole		5635232	1					
ANR	5635250	Identifier	beg_pole		5635232	1					
ANR	5635251	Identifier	gx		5635232	1					
ANR	5635252	IdentifierDecl	min_gy = self -> pole [ beg_pole ] . gy		5635232	1					
ANR	5635253	IdentifierDeclType	t1_glyph_space_coord		5635232	0					
ANR	5635254	Identifier	min_gy		5635232	1					
ANR	5635255	AssignmentExpression	min_gy = self -> pole [ beg_pole ] . gy		5635232	2		=			
ANR	5635256	Identifier	min_gy		5635232	0					
ANR	5635257	MemberAccess	self -> pole [ beg_pole ] . gy		5635232	1					
ANR	5635258	ArrayIndexing	self -> pole [ beg_pole ]		5635232	0					
ANR	5635259	PtrMemberAccess	self -> pole		5635232	0					
ANR	5635260	Identifier	self		5635232	0					
ANR	5635261	Identifier	pole		5635232	1					
ANR	5635262	Identifier	beg_pole		5635232	1					
ANR	5635263	Identifier	gy		5635232	1					
ANR	5635264	IdentifierDeclStatement	"t1_glyph_space_coord max_gx = min_gx , max_gy = min_gy ;"	2507:4:104195:104248	5635232	2	True				
ANR	5635265	IdentifierDecl	max_gx = min_gx		5635232	0					
ANR	5635266	IdentifierDeclType	t1_glyph_space_coord		5635232	0					
ANR	5635267	Identifier	max_gx		5635232	1					
ANR	5635268	AssignmentExpression	max_gx = min_gx		5635232	2		=			
ANR	5635269	Identifier	min_gx		5635232	0					
ANR	5635270	Identifier	min_gx		5635232	1					
ANR	5635271	IdentifierDecl	max_gy = min_gy		5635232	1					
ANR	5635272	IdentifierDeclType	t1_glyph_space_coord		5635232	0					
ANR	5635273	Identifier	max_gy		5635232	1					
ANR	5635274	AssignmentExpression	max_gy = min_gy		5635232	2		=			
ANR	5635275	Identifier	min_gy		5635232	0					
ANR	5635276	Identifier	min_gy		5635232	1					
ANR	5635277	IdentifierDeclStatement	"t1_glyph_space_coord center_gx , center_gy , center_agx , center_agy ;"	2508:4:104254:104319	5635232	3	True				
ANR	5635278	IdentifierDecl	center_gx		5635232	0					
ANR	5635279	IdentifierDeclType	t1_glyph_space_coord		5635232	0					
ANR	5635280	Identifier	center_gx		5635232	1					
ANR	5635281	IdentifierDecl	center_gy		5635232	1					
ANR	5635282	IdentifierDeclType	t1_glyph_space_coord		5635232	0					
ANR	5635283	Identifier	center_gy		5635232	1					
ANR	5635284	IdentifierDecl	center_agx		5635232	2					
ANR	5635285	IdentifierDeclType	t1_glyph_space_coord		5635232	0					
ANR	5635286	Identifier	center_agx		5635232	1					
ANR	5635287	IdentifierDecl	center_agy		5635232	3					
ANR	5635288	IdentifierDeclType	t1_glyph_space_coord		5635232	0					
ANR	5635289	Identifier	center_agy		5635232	1					
ANR	5635290	IdentifierDeclStatement	"t1_glyph_space_coord sx , sy ;"	2509:4:104325:104352	5635232	4	True				
ANR	5635291	IdentifierDecl	sx		5635232	0					
ANR	5635292	IdentifierDeclType	t1_glyph_space_coord		5635232	0					
ANR	5635293	Identifier	sx		5635232	1					
ANR	5635294	IdentifierDecl	sy		5635232	1					
ANR	5635295	IdentifierDeclType	t1_glyph_space_coord		5635232	0					
ANR	5635296	Identifier	sy		5635232	1					
ANR	5635297	IdentifierDeclStatement	"bool aligned_min_x = false , aligned_min_y = false , aligned_max_x = false , aligned_max_y = false ;"	2510:4:104358:104453	5635232	5	True				
ANR	5635298	IdentifierDecl	aligned_min_x = false		5635232	0					
ANR	5635299	IdentifierDeclType	bool		5635232	0					
ANR	5635300	Identifier	aligned_min_x		5635232	1					
ANR	5635301	AssignmentExpression	aligned_min_x = false		5635232	2		=			
ANR	5635302	Identifier	false		5635232	0					
ANR	5635303	Identifier	false		5635232	1					
ANR	5635304	IdentifierDecl	aligned_min_y = false		5635232	1					
ANR	5635305	IdentifierDeclType	bool		5635232	0					
ANR	5635306	Identifier	aligned_min_y		5635232	1					
ANR	5635307	AssignmentExpression	aligned_min_y = false		5635232	2		=			
ANR	5635308	Identifier	false		5635232	0					
ANR	5635309	Identifier	false		5635232	1					
ANR	5635310	IdentifierDecl	aligned_max_x = false		5635232	2					
ANR	5635311	IdentifierDeclType	bool		5635232	0					
ANR	5635312	Identifier	aligned_max_x		5635232	1					
ANR	5635313	AssignmentExpression	aligned_max_x = false		5635232	2		=			
ANR	5635314	Identifier	false		5635232	0					
ANR	5635315	Identifier	false		5635232	1					
ANR	5635316	IdentifierDecl	aligned_max_y = false		5635232	3					
ANR	5635317	IdentifierDeclType	bool		5635232	0					
ANR	5635318	Identifier	aligned_max_y		5635232	1					
ANR	5635319	AssignmentExpression	aligned_max_y = false		5635232	2		=			
ANR	5635320	Identifier	false		5635232	0					
ANR	5635321	Identifier	false		5635232	1					
ANR	5635322	IdentifierDeclStatement	"bool aligned_x , aligned_y ;"	2511:4:104459:104484	5635232	6	True				
ANR	5635323	IdentifierDecl	aligned_x		5635232	0					
ANR	5635324	IdentifierDeclType	bool		5635232	0					
ANR	5635325	Identifier	aligned_x		5635232	1					
ANR	5635326	IdentifierDecl	aligned_y		5635232	1					
ANR	5635327	IdentifierDeclType	bool		5635232	0					
ANR	5635328	Identifier	aligned_y		5635232	1					
ANR	5635329	ForStatement	for ( i = beg_pole + 1 ; i <= end_pole ; i ++ )		5635232	7					
ANR	5635330	ForInit	i = beg_pole + 1 ;	2513:9:104496:104512	5635232	0	True				
ANR	5635331	AssignmentExpression	i = beg_pole + 1		5635232	0		=			
ANR	5635332	Identifier	i		5635232	0					
ANR	5635333	AdditiveExpression	beg_pole + 1		5635232	1		+			
ANR	5635334	Identifier	beg_pole		5635232	0					
ANR	5635335	PrimaryExpression	1		5635232	1					
ANR	5635336	Condition	i <= end_pole	2513:27:104514:104526	5635232	1	True				
ANR	5635337	RelationalExpression	i <= end_pole		5635232	0		<=			
ANR	5635338	Identifier	i		5635232	0					
ANR	5635339	Identifier	end_pole		5635232	1					
ANR	5635340	PostIncDecOperationExpression	i ++	2513:42:104529:104531	5635232	2	True				
ANR	5635341	Identifier	i		5635232	0					
ANR	5635342	IncDec	++		5635232	1					
ANR	5635343	CompoundStatement		13:8:576:641	5635232	3					
ANR	5635344	IdentifierDeclStatement	"t1_glyph_space_coord gx = self -> pole [ i ] . gx , gy = self -> pole [ i ] . gy ;"	2514:8:104544:104609	5635232	0	True				
ANR	5635345	IdentifierDecl	gx = self -> pole [ i ] . gx		5635232	0					
ANR	5635346	IdentifierDeclType	t1_glyph_space_coord		5635232	0					
ANR	5635347	Identifier	gx		5635232	1					
ANR	5635348	AssignmentExpression	gx = self -> pole [ i ] . gx		5635232	2		=			
ANR	5635349	Identifier	gx		5635232	0					
ANR	5635350	MemberAccess	self -> pole [ i ] . gx		5635232	1					
ANR	5635351	ArrayIndexing	self -> pole [ i ]		5635232	0					
ANR	5635352	PtrMemberAccess	self -> pole		5635232	0					
ANR	5635353	Identifier	self		5635232	0					
ANR	5635354	Identifier	pole		5635232	1					
ANR	5635355	Identifier	i		5635232	1					
ANR	5635356	Identifier	gx		5635232	1					
ANR	5635357	IdentifierDecl	gy = self -> pole [ i ] . gy		5635232	1					
ANR	5635358	IdentifierDeclType	t1_glyph_space_coord		5635232	0					
ANR	5635359	Identifier	gy		5635232	1					
ANR	5635360	AssignmentExpression	gy = self -> pole [ i ] . gy		5635232	2		=			
ANR	5635361	Identifier	gy		5635232	0					
ANR	5635362	MemberAccess	self -> pole [ i ] . gy		5635232	1					
ANR	5635363	ArrayIndexing	self -> pole [ i ]		5635232	0					
ANR	5635364	PtrMemberAccess	self -> pole		5635232	0					
ANR	5635365	Identifier	self		5635232	0					
ANR	5635366	Identifier	pole		5635232	1					
ANR	5635367	Identifier	i		5635232	1					
ANR	5635368	Identifier	gy		5635232	1					
ANR	5635369	ExpressionStatement	"min_gx = min ( min_gx , gx )"	2516:8:104620:104644	5635232	1	True				
ANR	5635370	AssignmentExpression	"min_gx = min ( min_gx , gx )"		5635232	0		=			
ANR	5635371	Identifier	min_gx		5635232	0					
ANR	5635372	CallExpression	"min ( min_gx , gx )"		5635232	1					
ANR	5635373	Callee	min		5635232	0					
ANR	5635374	Identifier	min		5635232	0					
ANR	5635375	ArgumentList	min_gx		5635232	1					
ANR	5635376	Argument	min_gx		5635232	0					
ANR	5635377	Identifier	min_gx		5635232	0					
ANR	5635378	Argument	gx		5635232	1					
ANR	5635379	Identifier	gx		5635232	0					
ANR	5635380	ExpressionStatement	"min_gy = min ( min_gy , gy )"	2517:8:104654:104678	5635232	2	True				
ANR	5635381	AssignmentExpression	"min_gy = min ( min_gy , gy )"		5635232	0		=			
ANR	5635382	Identifier	min_gy		5635232	0					
ANR	5635383	CallExpression	"min ( min_gy , gy )"		5635232	1					
ANR	5635384	Callee	min		5635232	0					
ANR	5635385	Identifier	min		5635232	0					
ANR	5635386	ArgumentList	min_gy		5635232	1					
ANR	5635387	Argument	min_gy		5635232	0					
ANR	5635388	Identifier	min_gy		5635232	0					
ANR	5635389	Argument	gy		5635232	1					
ANR	5635390	Identifier	gy		5635232	0					
ANR	5635391	ExpressionStatement	"max_gx = max ( max_gx , gx )"	2518:8:104688:104712	5635232	3	True				
ANR	5635392	AssignmentExpression	"max_gx = max ( max_gx , gx )"		5635232	0		=			
ANR	5635393	Identifier	max_gx		5635232	0					
ANR	5635394	CallExpression	"max ( max_gx , gx )"		5635232	1					
ANR	5635395	Callee	max		5635232	0					
ANR	5635396	Identifier	max		5635232	0					
ANR	5635397	ArgumentList	max_gx		5635232	1					
ANR	5635398	Argument	max_gx		5635232	0					
ANR	5635399	Identifier	max_gx		5635232	0					
ANR	5635400	Argument	gx		5635232	1					
ANR	5635401	Identifier	gx		5635232	0					
ANR	5635402	ExpressionStatement	"max_gy = max ( max_gy , gy )"	2519:8:104722:104746	5635232	4	True				
ANR	5635403	AssignmentExpression	"max_gy = max ( max_gy , gy )"		5635232	0		=			
ANR	5635404	Identifier	max_gy		5635232	0					
ANR	5635405	CallExpression	"max ( max_gy , gy )"		5635232	1					
ANR	5635406	Callee	max		5635232	0					
ANR	5635407	Identifier	max		5635232	0					
ANR	5635408	ArgumentList	max_gy		5635232	1					
ANR	5635409	Argument	max_gy		5635232	0					
ANR	5635410	Identifier	max_gy		5635232	0					
ANR	5635411	Argument	gy		5635232	1					
ANR	5635412	Identifier	gy		5635232	0					
ANR	5635413	ForStatement	for ( i = beg_pole ; i <= end_pole ; i ++ )		5635232	8					
ANR	5635414	ForInit	i = beg_pole ;	2521:9:104763:104775	5635232	0	True				
ANR	5635415	AssignmentExpression	i = beg_pole		5635232	0		=			
ANR	5635416	Identifier	i		5635232	0					
ANR	5635417	Identifier	beg_pole		5635232	1					
ANR	5635418	Condition	i <= end_pole	2521:23:104777:104789	5635232	1	True				
ANR	5635419	RelationalExpression	i <= end_pole		5635232	0		<=			
ANR	5635420	Identifier	i		5635232	0					
ANR	5635421	Identifier	end_pole		5635232	1					
ANR	5635422	PostIncDecOperationExpression	i ++	2521:38:104792:104794	5635232	2	True				
ANR	5635423	Identifier	i		5635232	0					
ANR	5635424	IncDec	++		5635232	1					
ANR	5635425	CompoundStatement		20:43:829:829	5635232	3					
ANR	5635426	IfStatement	if ( self -> pole [ i ] . gx == min_gx )		5635232	0					
ANR	5635427	Condition	self -> pole [ i ] . gx == min_gx	2522:12:104811:104836	5635232	0	True				
ANR	5635428	EqualityExpression	self -> pole [ i ] . gx == min_gx		5635232	0		==			
ANR	5635429	MemberAccess	self -> pole [ i ] . gx		5635232	0					
ANR	5635430	ArrayIndexing	self -> pole [ i ]		5635232	0					
ANR	5635431	PtrMemberAccess	self -> pole		5635232	0					
ANR	5635432	Identifier	self		5635232	0					
ANR	5635433	Identifier	pole		5635232	1					
ANR	5635434	Identifier	i		5635232	1					
ANR	5635435	Identifier	gx		5635232	1					
ANR	5635436	Identifier	min_gx		5635232	1					
ANR	5635437	ExpressionStatement	aligned_min_x |= self -> pole [ i ] . aligned_x	2523:12:104851:104891	5635232	1	True				
ANR	5635438	AssignmentExpression	aligned_min_x |= self -> pole [ i ] . aligned_x		5635232	0		|=			
ANR	5635439	Identifier	aligned_min_x		5635232	0					
ANR	5635440	MemberAccess	self -> pole [ i ] . aligned_x		5635232	1					
ANR	5635441	ArrayIndexing	self -> pole [ i ]		5635232	0					
ANR	5635442	PtrMemberAccess	self -> pole		5635232	0					
ANR	5635443	Identifier	self		5635232	0					
ANR	5635444	Identifier	pole		5635232	1					
ANR	5635445	Identifier	i		5635232	1					
ANR	5635446	Identifier	aligned_x		5635232	1					
ANR	5635447	IfStatement	if ( self -> pole [ i ] . gy == min_gy )		5635232	1					
ANR	5635448	Condition	self -> pole [ i ] . gy == min_gy	2524:12:104905:104930	5635232	0	True				
ANR	5635449	EqualityExpression	self -> pole [ i ] . gy == min_gy		5635232	0		==			
ANR	5635450	MemberAccess	self -> pole [ i ] . gy		5635232	0					
ANR	5635451	ArrayIndexing	self -> pole [ i ]		5635232	0					
ANR	5635452	PtrMemberAccess	self -> pole		5635232	0					
ANR	5635453	Identifier	self		5635232	0					
ANR	5635454	Identifier	pole		5635232	1					
ANR	5635455	Identifier	i		5635232	1					
ANR	5635456	Identifier	gy		5635232	1					
ANR	5635457	Identifier	min_gy		5635232	1					
ANR	5635458	ExpressionStatement	aligned_min_y |= self -> pole [ i ] . aligned_y	2525:12:104945:104985	5635232	1	True				
ANR	5635459	AssignmentExpression	aligned_min_y |= self -> pole [ i ] . aligned_y		5635232	0		|=			
ANR	5635460	Identifier	aligned_min_y		5635232	0					
ANR	5635461	MemberAccess	self -> pole [ i ] . aligned_y		5635232	1					
ANR	5635462	ArrayIndexing	self -> pole [ i ]		5635232	0					
ANR	5635463	PtrMemberAccess	self -> pole		5635232	0					
ANR	5635464	Identifier	self		5635232	0					
ANR	5635465	Identifier	pole		5635232	1					
ANR	5635466	Identifier	i		5635232	1					
ANR	5635467	Identifier	aligned_y		5635232	1					
ANR	5635468	IfStatement	if ( self -> pole [ i ] . gx == max_gx )		5635232	2					
ANR	5635469	Condition	self -> pole [ i ] . gx == max_gx	2526:12:104999:105024	5635232	0	True				
ANR	5635470	EqualityExpression	self -> pole [ i ] . gx == max_gx		5635232	0		==			
ANR	5635471	MemberAccess	self -> pole [ i ] . gx		5635232	0					
ANR	5635472	ArrayIndexing	self -> pole [ i ]		5635232	0					
ANR	5635473	PtrMemberAccess	self -> pole		5635232	0					
ANR	5635474	Identifier	self		5635232	0					
ANR	5635475	Identifier	pole		5635232	1					
ANR	5635476	Identifier	i		5635232	1					
ANR	5635477	Identifier	gx		5635232	1					
ANR	5635478	Identifier	max_gx		5635232	1					
ANR	5635479	ExpressionStatement	aligned_max_x |= self -> pole [ i ] . aligned_x	2527:12:105039:105079	5635232	1	True				
ANR	5635480	AssignmentExpression	aligned_max_x |= self -> pole [ i ] . aligned_x		5635232	0		|=			
ANR	5635481	Identifier	aligned_max_x		5635232	0					
ANR	5635482	MemberAccess	self -> pole [ i ] . aligned_x		5635232	1					
ANR	5635483	ArrayIndexing	self -> pole [ i ]		5635232	0					
ANR	5635484	PtrMemberAccess	self -> pole		5635232	0					
ANR	5635485	Identifier	self		5635232	0					
ANR	5635486	Identifier	pole		5635232	1					
ANR	5635487	Identifier	i		5635232	1					
ANR	5635488	Identifier	aligned_x		5635232	1					
ANR	5635489	IfStatement	if ( self -> pole [ i ] . gy == max_gy )		5635232	3					
ANR	5635490	Condition	self -> pole [ i ] . gy == max_gy	2528:12:105093:105118	5635232	0	True				
ANR	5635491	EqualityExpression	self -> pole [ i ] . gy == max_gy		5635232	0		==			
ANR	5635492	MemberAccess	self -> pole [ i ] . gy		5635232	0					
ANR	5635493	ArrayIndexing	self -> pole [ i ]		5635232	0					
ANR	5635494	PtrMemberAccess	self -> pole		5635232	0					
ANR	5635495	Identifier	self		5635232	0					
ANR	5635496	Identifier	pole		5635232	1					
ANR	5635497	Identifier	i		5635232	1					
ANR	5635498	Identifier	gy		5635232	1					
ANR	5635499	Identifier	max_gy		5635232	1					
ANR	5635500	ExpressionStatement	aligned_max_y |= self -> pole [ i ] . aligned_y	2529:12:105133:105173	5635232	1	True				
ANR	5635501	AssignmentExpression	aligned_max_y |= self -> pole [ i ] . aligned_y		5635232	0		|=			
ANR	5635502	Identifier	aligned_max_y		5635232	0					
ANR	5635503	MemberAccess	self -> pole [ i ] . aligned_y		5635232	1					
ANR	5635504	ArrayIndexing	self -> pole [ i ]		5635232	0					
ANR	5635505	PtrMemberAccess	self -> pole		5635232	0					
ANR	5635506	Identifier	self		5635232	0					
ANR	5635507	Identifier	pole		5635232	1					
ANR	5635508	Identifier	i		5635232	1					
ANR	5635509	Identifier	aligned_y		5635232	1					
ANR	5635510	ExpressionStatement	aligned_x = aligned_min_x && aligned_max_x	2531:4:105185:105227	5635232	9	True				
ANR	5635511	AssignmentExpression	aligned_x = aligned_min_x && aligned_max_x		5635232	0		=			
ANR	5635512	Identifier	aligned_x		5635232	0					
ANR	5635513	AndExpression	aligned_min_x && aligned_max_x		5635232	1		&&			
ANR	5635514	Identifier	aligned_min_x		5635232	0					
ANR	5635515	Identifier	aligned_max_x		5635232	1					
ANR	5635516	ExpressionStatement	aligned_y = aligned_min_y && aligned_max_y	2532:4:105233:105275	5635232	10	True				
ANR	5635517	AssignmentExpression	aligned_y = aligned_min_y && aligned_max_y		5635232	0		=			
ANR	5635518	Identifier	aligned_y		5635232	0					
ANR	5635519	AndExpression	aligned_min_y && aligned_max_y		5635232	1		&&			
ANR	5635520	Identifier	aligned_min_y		5635232	0					
ANR	5635521	Identifier	aligned_max_y		5635232	1					
ANR	5635522	IfStatement	if ( aligned_x && aligned_y )		5635232	11					
ANR	5635523	Condition	aligned_x && aligned_y	2533:8:105285:105306	5635232	0	True				
ANR	5635524	AndExpression	aligned_x && aligned_y		5635232	0		&&			
ANR	5635525	Identifier	aligned_x		5635232	0					
ANR	5635526	Identifier	aligned_y		5635232	1					
ANR	5635527	ReturnStatement	return ;	2534:8:105317:105323	5635232	1	True				
ANR	5635528	ExpressionStatement	center_gx = center_agx = ( min_gx + max_gx ) / 2	2535:4:105395:105441	5635232	12	True				
ANR	5635529	AssignmentExpression	center_gx = center_agx = ( min_gx + max_gx ) / 2		5635232	0		=			
ANR	5635530	Identifier	center_gx		5635232	0					
ANR	5635531	AssignmentExpression	center_agx = ( min_gx + max_gx ) / 2		5635232	1		=			
ANR	5635532	Identifier	center_agx		5635232	0					
ANR	5635533	MultiplicativeExpression	( min_gx + max_gx ) / 2		5635232	1		/			
ANR	5635534	AdditiveExpression	min_gx + max_gx		5635232	0		+			
ANR	5635535	Identifier	min_gx		5635232	0					
ANR	5635536	Identifier	max_gx		5635232	1					
ANR	5635537	PrimaryExpression	2		5635232	1					
ANR	5635538	ExpressionStatement	center_gy = center_agy = ( min_gy + max_gy ) / 2	2536:4:105447:105493	5635232	13	True				
ANR	5635539	AssignmentExpression	center_gy = center_agy = ( min_gy + max_gy ) / 2		5635232	0		=			
ANR	5635540	Identifier	center_gy		5635232	0					
ANR	5635541	AssignmentExpression	center_agy = ( min_gy + max_gy ) / 2		5635232	1		=			
ANR	5635542	Identifier	center_agy		5635232	0					
ANR	5635543	MultiplicativeExpression	( min_gy + max_gy ) / 2		5635232	1		/			
ANR	5635544	AdditiveExpression	min_gy + max_gy		5635232	0		+			
ANR	5635545	Identifier	min_gy		5635232	0					
ANR	5635546	Identifier	max_gy		5635232	1					
ANR	5635547	PrimaryExpression	2		5635232	1					
ANR	5635548	IfStatement	if ( ! aligned_x )		5635232	14					
ANR	5635549	Condition	! aligned_x	2537:8:105503:105512	5635232	0	True				
ANR	5635550	UnaryOperationExpression	! aligned_x		5635232	0					
ANR	5635551	UnaryOperator	!		5635232	0					
ANR	5635552	Identifier	aligned_x		5635232	1					
ANR	5635553	CompoundStatement		38:8:1626:1691	5635232	1					
ANR	5635554	IdentifierDeclStatement	"t1_hint * hint = t1_hinter__find_vstem_by_center ( self , center_gx ) ;"	2539:8:105594:105659	5635232	0	True				
ANR	5635555	IdentifierDecl	"* hint = t1_hinter__find_vstem_by_center ( self , center_gx )"		5635232	0					
ANR	5635556	IdentifierDeclType	t1_hint *		5635232	0					
ANR	5635557	Identifier	hint		5635232	1					
ANR	5635558	AssignmentExpression	"* hint = t1_hinter__find_vstem_by_center ( self , center_gx )"		5635232	2		=			
ANR	5635559	Identifier	hint		5635232	0					
ANR	5635560	CallExpression	"t1_hinter__find_vstem_by_center ( self , center_gx )"		5635232	1					
ANR	5635561	Callee	t1_hinter__find_vstem_by_center		5635232	0					
ANR	5635562	Identifier	t1_hinter__find_vstem_by_center		5635232	0					
ANR	5635563	ArgumentList	self		5635232	1					
ANR	5635564	Argument	self		5635232	0					
ANR	5635565	Identifier	self		5635232	0					
ANR	5635566	Argument	center_gx		5635232	1					
ANR	5635567	Identifier	center_gx		5635232	0					
ANR	5635568	IfStatement	if ( hint != NULL )		5635232	1					
ANR	5635569	Condition	hint != NULL	2540:12:105673:105684	5635232	0	True				
ANR	5635570	EqualityExpression	hint != NULL		5635232	0		!=			
ANR	5635571	Identifier	hint		5635232	0					
ANR	5635572	Identifier	NULL		5635232	1					
ANR	5635573	CompoundStatement		39:26:1719:1719	5635232	1					
ANR	5635574	ExpressionStatement	center_agx = ( hint -> ag0 + hint -> ag1 ) / 2	2541:12:105701:105741	5635232	0	True				
ANR	5635575	AssignmentExpression	center_agx = ( hint -> ag0 + hint -> ag1 ) / 2		5635232	0		=			
ANR	5635576	Identifier	center_agx		5635232	0					
ANR	5635577	MultiplicativeExpression	( hint -> ag0 + hint -> ag1 ) / 2		5635232	1		/			
ANR	5635578	AdditiveExpression	hint -> ag0 + hint -> ag1		5635232	0		+			
ANR	5635579	PtrMemberAccess	hint -> ag0		5635232	0					
ANR	5635580	Identifier	hint		5635232	0					
ANR	5635581	Identifier	ag0		5635232	1					
ANR	5635582	PtrMemberAccess	hint -> ag1		5635232	1					
ANR	5635583	Identifier	hint		5635232	0					
ANR	5635584	Identifier	ag1		5635232	1					
ANR	5635585	PrimaryExpression	2		5635232	1					
ANR	5635586	ExpressionStatement	aligned_x = true	2542:12:105778:105794	5635232	1	True				
ANR	5635587	AssignmentExpression	aligned_x = true		5635232	0		=			
ANR	5635588	Identifier	aligned_x		5635232	0					
ANR	5635589	Identifier	true		5635232	1					
ANR	5635590	ExpressionStatement	"t1_hinter__align_to_grid ( self , self -> g2o_fraction / 2 , & center_agx , & center_agy , CONTRAST_STEMS || self -> align_to_pixels )"	2545:4:105816:105969	5635232	15	True				
ANR	5635591	CallExpression	"t1_hinter__align_to_grid ( self , self -> g2o_fraction / 2 , & center_agx , & center_agy , CONTRAST_STEMS || self -> align_to_pixels )"		5635232	0					
ANR	5635592	Callee	t1_hinter__align_to_grid		5635232	0					
ANR	5635593	Identifier	t1_hinter__align_to_grid		5635232	0					
ANR	5635594	ArgumentList	self		5635232	1					
ANR	5635595	Argument	self		5635232	0					
ANR	5635596	Identifier	self		5635232	0					
ANR	5635597	Argument	self -> g2o_fraction / 2		5635232	1					
ANR	5635598	MultiplicativeExpression	self -> g2o_fraction / 2		5635232	0		/			
ANR	5635599	PtrMemberAccess	self -> g2o_fraction		5635232	0					
ANR	5635600	Identifier	self		5635232	0					
ANR	5635601	Identifier	g2o_fraction		5635232	1					
ANR	5635602	PrimaryExpression	2		5635232	1					
ANR	5635603	Argument	& center_agx		5635232	2					
ANR	5635604	UnaryOperationExpression	& center_agx		5635232	0					
ANR	5635605	UnaryOperator	&		5635232	0					
ANR	5635606	Identifier	center_agx		5635232	1					
ANR	5635607	Argument	& center_agy		5635232	3					
ANR	5635608	UnaryOperationExpression	& center_agy		5635232	0					
ANR	5635609	UnaryOperator	&		5635232	0					
ANR	5635610	Identifier	center_agy		5635232	1					
ANR	5635611	Argument	CONTRAST_STEMS || self -> align_to_pixels		5635232	4					
ANR	5635612	OrExpression	CONTRAST_STEMS || self -> align_to_pixels		5635232	0		||			
ANR	5635613	Identifier	CONTRAST_STEMS		5635232	0					
ANR	5635614	PtrMemberAccess	self -> align_to_pixels		5635232	1					
ANR	5635615	Identifier	self		5635232	0					
ANR	5635616	Identifier	align_to_pixels		5635232	1					
ANR	5635617	ExpressionStatement	sx = center_agx - center_gx	2547:4:105975:106002	5635232	16	True				
ANR	5635618	AssignmentExpression	sx = center_agx - center_gx		5635232	0		=			
ANR	5635619	Identifier	sx		5635232	0					
ANR	5635620	AdditiveExpression	center_agx - center_gx		5635232	1		-			
ANR	5635621	Identifier	center_agx		5635232	0					
ANR	5635622	Identifier	center_gx		5635232	1					
ANR	5635623	ExpressionStatement	sy = center_agy - center_gy	2548:4:106008:106035	5635232	17	True				
ANR	5635624	AssignmentExpression	sy = center_agy - center_gy		5635232	0		=			
ANR	5635625	Identifier	sy		5635232	0					
ANR	5635626	AdditiveExpression	center_agy - center_gy		5635232	1		-			
ANR	5635627	Identifier	center_agy		5635232	0					
ANR	5635628	Identifier	center_gy		5635232	1					
ANR	5635629	IfStatement	if ( aligned_x )		5635232	18					
ANR	5635630	Condition	aligned_x	2549:8:106045:106053	5635232	0	True				
ANR	5635631	Identifier	aligned_x		5635232	0					
ANR	5635632	ExpressionStatement	sx = 0	2550:8:106064:106070	5635232	1	True				
ANR	5635633	AssignmentExpression	sx = 0		5635232	0		=			
ANR	5635634	Identifier	sx		5635232	0					
ANR	5635635	PrimaryExpression	0		5635232	1					
ANR	5635636	IfStatement	if ( aligned_y )		5635232	19					
ANR	5635637	Condition	aligned_y	2551:8:106080:106088	5635232	0	True				
ANR	5635638	Identifier	aligned_y		5635232	0					
ANR	5635639	ExpressionStatement	sy = 0	2552:8:106099:106105	5635232	1	True				
ANR	5635640	AssignmentExpression	sy = 0		5635232	0		=			
ANR	5635641	Identifier	sy		5635232	0					
ANR	5635642	PrimaryExpression	0		5635232	1					
ANR	5635643	ForStatement	for ( i = beg_pole ; i <= end_pole ; i ++ )		5635232	20					
ANR	5635644	ForInit	i = beg_pole ;	2554:9:106194:106206	5635232	0	True				
ANR	5635645	AssignmentExpression	i = beg_pole		5635232	0		=			
ANR	5635646	Identifier	i		5635232	0					
ANR	5635647	Identifier	beg_pole		5635232	1					
ANR	5635648	Condition	i <= end_pole	2554:23:106208:106220	5635232	1	True				
ANR	5635649	RelationalExpression	i <= end_pole		5635232	0		<=			
ANR	5635650	Identifier	i		5635232	0					
ANR	5635651	Identifier	end_pole		5635232	1					
ANR	5635652	PostIncDecOperationExpression	i ++	2554:38:106223:106225	5635232	2	True				
ANR	5635653	Identifier	i		5635232	0					
ANR	5635654	IncDec	++		5635232	1					
ANR	5635655	CompoundStatement		53:43:2260:2260	5635232	3					
ANR	5635656	ExpressionStatement	self -> pole [ i ] . ax = self -> pole [ i ] . gx + sx	2555:8:106238:106278	5635232	0	True				
ANR	5635657	AssignmentExpression	self -> pole [ i ] . ax = self -> pole [ i ] . gx + sx		5635232	0		=			
ANR	5635658	MemberAccess	self -> pole [ i ] . ax		5635232	0					
ANR	5635659	ArrayIndexing	self -> pole [ i ]		5635232	0					
ANR	5635660	PtrMemberAccess	self -> pole		5635232	0					
ANR	5635661	Identifier	self		5635232	0					
ANR	5635662	Identifier	pole		5635232	1					
ANR	5635663	Identifier	i		5635232	1					
ANR	5635664	Identifier	ax		5635232	1					
ANR	5635665	AdditiveExpression	self -> pole [ i ] . gx + sx		5635232	1		+			
ANR	5635666	MemberAccess	self -> pole [ i ] . gx		5635232	0					
ANR	5635667	ArrayIndexing	self -> pole [ i ]		5635232	0					
ANR	5635668	PtrMemberAccess	self -> pole		5635232	0					
ANR	5635669	Identifier	self		5635232	0					
ANR	5635670	Identifier	pole		5635232	1					
ANR	5635671	Identifier	i		5635232	1					
ANR	5635672	Identifier	gx		5635232	1					
ANR	5635673	Identifier	sx		5635232	1					
ANR	5635674	ExpressionStatement	self -> pole [ i ] . ay = self -> pole [ i ] . gy + sy	2556:8:106288:106328	5635232	1	True				
ANR	5635675	AssignmentExpression	self -> pole [ i ] . ay = self -> pole [ i ] . gy + sy		5635232	0		=			
ANR	5635676	MemberAccess	self -> pole [ i ] . ay		5635232	0					
ANR	5635677	ArrayIndexing	self -> pole [ i ]		5635232	0					
ANR	5635678	PtrMemberAccess	self -> pole		5635232	0					
ANR	5635679	Identifier	self		5635232	0					
ANR	5635680	Identifier	pole		5635232	1					
ANR	5635681	Identifier	i		5635232	1					
ANR	5635682	Identifier	ay		5635232	1					
ANR	5635683	AdditiveExpression	self -> pole [ i ] . gy + sy		5635232	1		+			
ANR	5635684	MemberAccess	self -> pole [ i ] . gy		5635232	0					
ANR	5635685	ArrayIndexing	self -> pole [ i ]		5635232	0					
ANR	5635686	PtrMemberAccess	self -> pole		5635232	0					
ANR	5635687	Identifier	self		5635232	0					
ANR	5635688	Identifier	pole		5635232	1					
ANR	5635689	Identifier	i		5635232	1					
ANR	5635690	Identifier	gy		5635232	1					
ANR	5635691	Identifier	sy		5635232	1					
ANR	5635692	ExpressionStatement	self -> pole [ i ] . aligned_x |= ! aligned_x	2557:8:106338:106375	5635232	2	True				
ANR	5635693	AssignmentExpression	self -> pole [ i ] . aligned_x |= ! aligned_x		5635232	0		|=			
ANR	5635694	MemberAccess	self -> pole [ i ] . aligned_x		5635232	0					
ANR	5635695	ArrayIndexing	self -> pole [ i ]		5635232	0					
ANR	5635696	PtrMemberAccess	self -> pole		5635232	0					
ANR	5635697	Identifier	self		5635232	0					
ANR	5635698	Identifier	pole		5635232	1					
ANR	5635699	Identifier	i		5635232	1					
ANR	5635700	Identifier	aligned_x		5635232	1					
ANR	5635701	UnaryOperationExpression	! aligned_x		5635232	1					
ANR	5635702	UnaryOperator	!		5635232	0					
ANR	5635703	Identifier	aligned_x		5635232	1					
ANR	5635704	ExpressionStatement	self -> pole [ i ] . aligned_y |= ! aligned_y	2558:8:106436:106473	5635232	3	True				
ANR	5635705	AssignmentExpression	self -> pole [ i ] . aligned_y |= ! aligned_y		5635232	0		|=			
ANR	5635706	MemberAccess	self -> pole [ i ] . aligned_y		5635232	0					
ANR	5635707	ArrayIndexing	self -> pole [ i ]		5635232	0					
ANR	5635708	PtrMemberAccess	self -> pole		5635232	0					
ANR	5635709	Identifier	self		5635232	0					
ANR	5635710	Identifier	pole		5635232	1					
ANR	5635711	Identifier	i		5635232	1					
ANR	5635712	Identifier	aligned_y		5635232	1					
ANR	5635713	UnaryOperationExpression	! aligned_y		5635232	1					
ANR	5635714	UnaryOperator	!		5635232	0					
ANR	5635715	Identifier	aligned_y		5635232	1					
ANR	5635716	ReturnType	static void		5635232	1					
ANR	5635717	Identifier	t1_hinter__process_dotsection		5635232	2					
ANR	5635718	ParameterList	"t1_hinter * self , int beg_pole , int end_pole"		5635232	3					
ANR	5635719	Parameter	t1_hinter * self	2501:42:103921:103936	5635232	0	True				
ANR	5635720	ParameterType	t1_hinter *		5635232	0					
ANR	5635721	Identifier	self		5635232	1					
ANR	5635722	Parameter	int beg_pole	2501:60:103939:103950	5635232	1	True				
ANR	5635723	ParameterType	int		5635232	0					
ANR	5635724	Identifier	beg_pole		5635232	1					
ANR	5635725	Parameter	int end_pole	2501:74:103953:103964	5635232	2	True				
ANR	5635726	ParameterType	int		5635232	0					
ANR	5635727	Identifier	end_pole		5635232	1					
ANR	5635728	CFGEntryNode	ENTRY		5635232		True				
ANR	5635729	CFGExitNode	EXIT		5635232		True				
ANR	5635730	Symbol	min_gy		5635232						
ANR	5635731	Symbol	self -> pole [ i ] . ax		5635232						
ANR	5635732	Symbol	min_gx		5635232						
ANR	5635733	Symbol	aligned_y		5635232						
ANR	5635734	Symbol	aligned_x		5635232						
ANR	5635735	Symbol	self -> pole [ i ] . ay		5635232						
ANR	5635736	Symbol	self -> pole [ beg_pole ] . gx		5635232						
ANR	5635737	Symbol	self -> pole [ beg_pole ] . gy		5635232						
ANR	5635738	Symbol	hint -> ag1		5635232						
ANR	5635739	Symbol	t1_hinter__find_vstem_by_center		5635232						
ANR	5635740	Symbol	hint -> ag0		5635232						
ANR	5635741	Symbol	* beg_pole		5635232						
ANR	5635742	Symbol	self -> align_to_pixels		5635232						
ANR	5635743	Symbol	max_gy		5635232						
ANR	5635744	Symbol	self -> pole [ i ] . aligned_y		5635232						
ANR	5635745	Symbol	* hint		5635232						
ANR	5635746	Symbol	self -> g2o_fraction		5635232						
ANR	5635747	Symbol	max_gx		5635232						
ANR	5635748	Symbol	NULL		5635232						
ANR	5635749	Symbol	* self		5635232						
ANR	5635750	Symbol	beg_pole		5635232						
ANR	5635751	Symbol	aligned_max_x		5635232						
ANR	5635752	Symbol	aligned_max_y		5635232						
ANR	5635753	Symbol	hint		5635232						
ANR	5635754	Symbol	true		5635232						
ANR	5635755	Symbol	self -> pole [ i ] . gy		5635232						
ANR	5635756	Symbol	CONTRAST_STEMS		5635232						
ANR	5635757	Symbol	end_pole		5635232						
ANR	5635758	Symbol	* self -> pole		5635232						
ANR	5635759	Symbol	min		5635232						
ANR	5635760	Symbol	self -> pole		5635232						
ANR	5635761	Symbol	aligned_min_x		5635232						
ANR	5635762	Symbol	aligned_min_y		5635232						
ANR	5635763	Symbol	self -> pole [ i ] . aligned_x		5635232						
ANR	5635764	Symbol	self -> pole [ i ] . gx		5635232						
ANR	5635765	Symbol	& center_agx		5635232						
ANR	5635766	Symbol	& center_agy		5635232						
ANR	5635767	Symbol	* * self		5635232						
ANR	5635768	Symbol	sx		5635232						
ANR	5635769	Symbol	max		5635232						
ANR	5635770	Symbol	sy		5635232						
ANR	5635771	Symbol	false		5635232						
ANR	5635772	Symbol	i		5635232						
ANR	5635773	Symbol	center_gx		5635232						
ANR	5635774	Symbol	center_gy		5635232						
ANR	5635775	Symbol	center_agy		5635232						
ANR	5635776	Symbol	center_agx		5635232						
ANR	5635777	Symbol	gx		5635232						
ANR	5635778	Symbol	gy		5635232						
ANR	5635779	Symbol	* i		5635232						
ANR	5635780	Symbol	self		5635232						
ANR	5635781	Function	t1_hinter__process_dotsections	2562:0:106484:106995							
ANR	5635782	FunctionDef	t1_hinter__process_dotsections (t1_hinter * self)		5635781	0					
ANR	5635783	CompoundStatement		2563:0:106545:106995	5635781	0					
ANR	5635784	IdentifierDeclStatement	int i ;	2563:3:106549:106554	5635781	0	True				
ANR	5635785	IdentifierDecl	i		5635781	0					
ANR	5635786	IdentifierDeclType	int		5635781	0					
ANR	5635787	Identifier	i		5635781	1					
ANR	5635788	ForStatement	for ( i = 0 ; i < self -> hint_count ; i ++ )		5635781	1					
ANR	5635789	ForInit	i = 0 ;	2565:8:106565:106570	5635781	0	True				
ANR	5635790	AssignmentExpression	i = 0		5635781	0		=			
ANR	5635791	Identifier	i		5635781	0					
ANR	5635792	PrimaryExpression	0		5635781	1					
ANR	5635793	Condition	i < self -> hint_count	2565:15:106572:106591	5635781	1	True				
ANR	5635794	RelationalExpression	i < self -> hint_count		5635781	0		<			
ANR	5635795	Identifier	i		5635781	0					
ANR	5635796	PtrMemberAccess	self -> hint_count		5635781	1					
ANR	5635797	Identifier	self		5635781	0					
ANR	5635798	Identifier	hint_count		5635781	1					
ANR	5635799	PostIncDecOperationExpression	i ++	2565:37:106594:106596	5635781	2	True				
ANR	5635800	Identifier	i		5635781	0					
ANR	5635801	IncDec	++		5635781	1					
ANR	5635802	IfStatement	if ( self -> hint [ i ] . type == dot )		5635781	3					
ANR	5635803	Condition	self -> hint [ i ] . type == dot	2566:12:106611:106635	5635781	0	True				
ANR	5635804	EqualityExpression	self -> hint [ i ] . type == dot		5635781	0		==			
ANR	5635805	MemberAccess	self -> hint [ i ] . type		5635781	0					
ANR	5635806	ArrayIndexing	self -> hint [ i ]		5635781	0					
ANR	5635807	PtrMemberAccess	self -> hint		5635781	0					
ANR	5635808	Identifier	self		5635781	0					
ANR	5635809	Identifier	hint		5635781	1					
ANR	5635810	Identifier	i		5635781	1					
ANR	5635811	Identifier	type		5635781	1					
ANR	5635812	Identifier	dot		5635781	1					
ANR	5635813	CompoundStatement		8:12:316:367	5635781	1					
ANR	5635814	IdentifierDeclStatement	int pole_index = self -> hint_range [ self -> hint [ i ] . range_index ] . beg_pole ;	2567:12:106652:106721	5635781	0	True				
ANR	5635815	IdentifierDecl	pole_index = self -> hint_range [ self -> hint [ i ] . range_index ] . beg_pole		5635781	0					
ANR	5635816	IdentifierDeclType	int		5635781	0					
ANR	5635817	Identifier	pole_index		5635781	1					
ANR	5635818	AssignmentExpression	pole_index = self -> hint_range [ self -> hint [ i ] . range_index ] . beg_pole		5635781	2		=			
ANR	5635819	Identifier	pole_index		5635781	0					
ANR	5635820	MemberAccess	self -> hint_range [ self -> hint [ i ] . range_index ] . beg_pole		5635781	1					
ANR	5635821	ArrayIndexing	self -> hint_range [ self -> hint [ i ] . range_index ]		5635781	0					
ANR	5635822	PtrMemberAccess	self -> hint_range		5635781	0					
ANR	5635823	Identifier	self		5635781	0					
ANR	5635824	Identifier	hint_range		5635781	1					
ANR	5635825	MemberAccess	self -> hint [ i ] . range_index		5635781	1					
ANR	5635826	ArrayIndexing	self -> hint [ i ]		5635781	0					
ANR	5635827	PtrMemberAccess	self -> hint		5635781	0					
ANR	5635828	Identifier	self		5635781	0					
ANR	5635829	Identifier	hint		5635781	1					
ANR	5635830	Identifier	i		5635781	1					
ANR	5635831	Identifier	range_index		5635781	1					
ANR	5635832	Identifier	beg_pole		5635781	1					
ANR	5635833	IdentifierDeclStatement	int contour_index = self -> pole [ pole_index ] . contour_index ;	2568:12:106735:106791	5635781	1	True				
ANR	5635834	IdentifierDecl	contour_index = self -> pole [ pole_index ] . contour_index		5635781	0					
ANR	5635835	IdentifierDeclType	int		5635781	0					
ANR	5635836	Identifier	contour_index		5635781	1					
ANR	5635837	AssignmentExpression	contour_index = self -> pole [ pole_index ] . contour_index		5635781	2		=			
ANR	5635838	Identifier	contour_index		5635781	0					
ANR	5635839	MemberAccess	self -> pole [ pole_index ] . contour_index		5635781	1					
ANR	5635840	ArrayIndexing	self -> pole [ pole_index ]		5635781	0					
ANR	5635841	PtrMemberAccess	self -> pole		5635781	0					
ANR	5635842	Identifier	self		5635781	0					
ANR	5635843	Identifier	pole		5635781	1					
ANR	5635844	Identifier	pole_index		5635781	1					
ANR	5635845	Identifier	contour_index		5635781	1					
ANR	5635846	IdentifierDeclStatement	int beg_pole = self -> contour [ contour_index ] ;	2569:12:106805:106848	5635781	2	True				
ANR	5635847	IdentifierDecl	beg_pole = self -> contour [ contour_index ]		5635781	0					
ANR	5635848	IdentifierDeclType	int		5635781	0					
ANR	5635849	Identifier	beg_pole		5635781	1					
ANR	5635850	AssignmentExpression	beg_pole = self -> contour [ contour_index ]		5635781	2		=			
ANR	5635851	Identifier	beg_pole		5635781	0					
ANR	5635852	ArrayIndexing	self -> contour [ contour_index ]		5635781	1					
ANR	5635853	PtrMemberAccess	self -> contour		5635781	0					
ANR	5635854	Identifier	self		5635781	0					
ANR	5635855	Identifier	contour		5635781	1					
ANR	5635856	Identifier	contour_index		5635781	1					
ANR	5635857	IdentifierDeclStatement	int end_pole = self -> contour [ contour_index + 1 ] - 2 ;	2570:12:106862:106913	5635781	3	True				
ANR	5635858	IdentifierDecl	end_pole = self -> contour [ contour_index + 1 ] - 2		5635781	0					
ANR	5635859	IdentifierDeclType	int		5635781	0					
ANR	5635860	Identifier	end_pole		5635781	1					
ANR	5635861	AssignmentExpression	end_pole = self -> contour [ contour_index + 1 ] - 2		5635781	2		=			
ANR	5635862	Identifier	end_pole		5635781	0					
ANR	5635863	AdditiveExpression	self -> contour [ contour_index + 1 ] - 2		5635781	1		-			
ANR	5635864	ArrayIndexing	self -> contour [ contour_index + 1 ]		5635781	0					
ANR	5635865	PtrMemberAccess	self -> contour		5635781	0					
ANR	5635866	Identifier	self		5635781	0					
ANR	5635867	Identifier	contour		5635781	1					
ANR	5635868	AdditiveExpression	contour_index + 1		5635781	1		+			
ANR	5635869	Identifier	contour_index		5635781	0					
ANR	5635870	PrimaryExpression	1		5635781	1					
ANR	5635871	PrimaryExpression	2		5635781	1					
ANR	5635872	ExpressionStatement	"t1_hinter__process_dotsection ( self , beg_pole , end_pole )"	2572:12:106928:106983	5635781	4	True				
ANR	5635873	CallExpression	"t1_hinter__process_dotsection ( self , beg_pole , end_pole )"		5635781	0					
ANR	5635874	Callee	t1_hinter__process_dotsection		5635781	0					
ANR	5635875	Identifier	t1_hinter__process_dotsection		5635781	0					
ANR	5635876	ArgumentList	self		5635781	1					
ANR	5635877	Argument	self		5635781	0					
ANR	5635878	Identifier	self		5635781	0					
ANR	5635879	Argument	beg_pole		5635781	1					
ANR	5635880	Identifier	beg_pole		5635781	0					
ANR	5635881	Argument	end_pole		5635781	2					
ANR	5635882	Identifier	end_pole		5635781	0					
ANR	5635883	ReturnType	static void		5635781	1					
ANR	5635884	Identifier	t1_hinter__process_dotsections		5635781	2					
ANR	5635885	ParameterList	t1_hinter * self		5635781	3					
ANR	5635886	Parameter	t1_hinter * self	2562:43:106527:106542	5635781	0	True				
ANR	5635887	ParameterType	t1_hinter *		5635781	0					
ANR	5635888	Identifier	self		5635781	1					
ANR	5635889	CFGEntryNode	ENTRY		5635781		True				
ANR	5635890	CFGExitNode	EXIT		5635781		True				
ANR	5635891	Symbol	self -> pole [ pole_index ] . contour_index		5635781						
ANR	5635892	Symbol	* self -> pole		5635781						
ANR	5635893	Symbol	end_pole		5635781						
ANR	5635894	Symbol	dot		5635781						
ANR	5635895	Symbol	* self -> hint		5635781						
ANR	5635896	Symbol	* self -> hint [ i ] . range_index		5635781						
ANR	5635897	Symbol	* * * self		5635781						
ANR	5635898	Symbol	self -> pole		5635781						
ANR	5635899	Symbol	contour_index		5635781						
ANR	5635900	Symbol	* contour_index		5635781						
ANR	5635901	Symbol	self -> hint_range [ self -> hint [ i ] . range_index ] . beg_pole		5635781						
ANR	5635902	Symbol	* self -> contour		5635781						
ANR	5635903	Symbol	* * i		5635781						
ANR	5635904	Symbol	self -> hint [ i ] . type		5635781						
ANR	5635905	Symbol	self -> hint		5635781						
ANR	5635906	Symbol	* * self		5635781						
ANR	5635907	Symbol	* self		5635781						
ANR	5635908	Symbol	beg_pole		5635781						
ANR	5635909	Symbol	i		5635781						
ANR	5635910	Symbol	* * self -> hint		5635781						
ANR	5635911	Symbol	self -> hint_range		5635781						
ANR	5635912	Symbol	* self -> hint_range		5635781						
ANR	5635913	Symbol	self -> contour		5635781						
ANR	5635914	Symbol	self -> hint_count		5635781						
ANR	5635915	Symbol	pole_index		5635781						
ANR	5635916	Symbol	* i		5635781						
ANR	5635917	Symbol	self -> hint [ i ] . range_index		5635781						
ANR	5635918	Symbol	* pole_index		5635781						
ANR	5635919	Symbol	self		5635781						
ANR	5635920	Function	t1_hinter__interpolate_other_poles	2576:0:106998:115479							
ANR	5635921	FunctionDef	t1_hinter__interpolate_other_poles (t1_hinter * self)		5635920	0					
ANR	5635922	CompoundStatement		2577:0:107063:115479	5635920	0					
ANR	5635923	IdentifierDeclStatement	"int i , j , k ;"	2577:3:107067:107078	5635920	0	True				
ANR	5635924	IdentifierDecl	i		5635920	0					
ANR	5635925	IdentifierDeclType	int		5635920	0					
ANR	5635926	Identifier	i		5635920	1					
ANR	5635927	IdentifierDecl	j		5635920	1					
ANR	5635928	IdentifierDeclType	int		5635920	0					
ANR	5635929	Identifier	j		5635920	1					
ANR	5635930	IdentifierDecl	k		5635920	2					
ANR	5635931	IdentifierDeclType	int		5635920	0					
ANR	5635932	Identifier	k		5635920	1					
ANR	5635933	ForStatement	for ( k = 0 ; k < 2 ; k ++ )		5635920	1					
ANR	5635934	ForInit	k = 0 ;	2579:9:107090:107095	5635920	0	True				
ANR	5635935	AssignmentExpression	k = 0		5635920	0		=			
ANR	5635936	Identifier	k		5635920	0					
ANR	5635937	PrimaryExpression	0		5635920	1					
ANR	5635938	Condition	k < 2	2579:16:107097:107099	5635920	1	True				
ANR	5635939	RelationalExpression	k < 2		5635920	0		<			
ANR	5635940	Identifier	k		5635920	0					
ANR	5635941	PrimaryExpression	2		5635920	1					
ANR	5635942	PostIncDecOperationExpression	k ++	2579:21:107102:107104	5635920	2	True				
ANR	5635943	Identifier	k		5635920	0					
ANR	5635944	IncDec	++		5635920	1					
ANR	5635945	CompoundStatement		13:8:772:825	5635920	3					
ANR	5635946	IdentifierDeclStatement	t1_glyph_space_coord * p_gc = ( ! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy ) ;	2580:8:107128:107201	5635920	0	True				
ANR	5635947	IdentifierDecl	* p_gc = ( ! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy )		5635920	0					
ANR	5635948	IdentifierDeclType	t1_glyph_space_coord *		5635920	0					
ANR	5635949	Identifier	p_gc		5635920	1					
ANR	5635950	AssignmentExpression	* p_gc = ( ! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy )		5635920	2		=			
ANR	5635951	Identifier	p_gc		5635920	0					
ANR	5635952	ConditionalExpression	! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy		5635920	1					
ANR	5635953	Condition	! k		5635920	0					
ANR	5635954	UnaryOperationExpression	! k		5635920	0					
ANR	5635955	UnaryOperator	!		5635920	0					
ANR	5635956	Identifier	k		5635920	1					
ANR	5635957	UnaryOperationExpression	& self -> pole [ 0 ] . gx		5635920	1					
ANR	5635958	UnaryOperator	&		5635920	0					
ANR	5635959	MemberAccess	self -> pole [ 0 ] . gx		5635920	1					
ANR	5635960	ArrayIndexing	self -> pole [ 0 ]		5635920	0					
ANR	5635961	PtrMemberAccess	self -> pole		5635920	0					
ANR	5635962	Identifier	self		5635920	0					
ANR	5635963	Identifier	pole		5635920	1					
ANR	5635964	PrimaryExpression	0		5635920	1					
ANR	5635965	Identifier	gx		5635920	1					
ANR	5635966	UnaryOperationExpression	& self -> pole [ 0 ] . gy		5635920	2					
ANR	5635967	UnaryOperator	&		5635920	0					
ANR	5635968	MemberAccess	self -> pole [ 0 ] . gy		5635920	1					
ANR	5635969	ArrayIndexing	self -> pole [ 0 ]		5635920	0					
ANR	5635970	PtrMemberAccess	self -> pole		5635920	0					
ANR	5635971	Identifier	self		5635920	0					
ANR	5635972	Identifier	pole		5635920	1					
ANR	5635973	PrimaryExpression	0		5635920	1					
ANR	5635974	Identifier	gy		5635920	1					
ANR	5635975	IdentifierDeclStatement	t1_glyph_space_coord * p_wc = ( ! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx ) ;	2581:8:107211:107284	5635920	1	True				
ANR	5635976	IdentifierDecl	* p_wc = ( ! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx )		5635920	0					
ANR	5635977	IdentifierDeclType	t1_glyph_space_coord *		5635920	0					
ANR	5635978	Identifier	p_wc		5635920	1					
ANR	5635979	AssignmentExpression	* p_wc = ( ! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx )		5635920	2		=			
ANR	5635980	Identifier	p_wc		5635920	0					
ANR	5635981	ConditionalExpression	! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx		5635920	1					
ANR	5635982	Condition	! k		5635920	0					
ANR	5635983	UnaryOperationExpression	! k		5635920	0					
ANR	5635984	UnaryOperator	!		5635920	0					
ANR	5635985	Identifier	k		5635920	1					
ANR	5635986	UnaryOperationExpression	& self -> pole [ 0 ] . gy		5635920	1					
ANR	5635987	UnaryOperator	&		5635920	0					
ANR	5635988	MemberAccess	self -> pole [ 0 ] . gy		5635920	1					
ANR	5635989	ArrayIndexing	self -> pole [ 0 ]		5635920	0					
ANR	5635990	PtrMemberAccess	self -> pole		5635920	0					
ANR	5635991	Identifier	self		5635920	0					
ANR	5635992	Identifier	pole		5635920	1					
ANR	5635993	PrimaryExpression	0		5635920	1					
ANR	5635994	Identifier	gy		5635920	1					
ANR	5635995	UnaryOperationExpression	& self -> pole [ 0 ] . gx		5635920	2					
ANR	5635996	UnaryOperator	&		5635920	0					
ANR	5635997	MemberAccess	self -> pole [ 0 ] . gx		5635920	1					
ANR	5635998	ArrayIndexing	self -> pole [ 0 ]		5635920	0					
ANR	5635999	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636000	Identifier	self		5635920	0					
ANR	5636001	Identifier	pole		5635920	1					
ANR	5636002	PrimaryExpression	0		5635920	1					
ANR	5636003	Identifier	gx		5635920	1					
ANR	5636004	IdentifierDeclStatement	t1_glyph_space_coord * p_ac = ( ! k ? & self -> pole [ 0 ] . ax : & self -> pole [ 0 ] . ay ) ;	2582:8:107294:107367	5635920	2	True				
ANR	5636005	IdentifierDecl	* p_ac = ( ! k ? & self -> pole [ 0 ] . ax : & self -> pole [ 0 ] . ay )		5635920	0					
ANR	5636006	IdentifierDeclType	t1_glyph_space_coord *		5635920	0					
ANR	5636007	Identifier	p_ac		5635920	1					
ANR	5636008	AssignmentExpression	* p_ac = ( ! k ? & self -> pole [ 0 ] . ax : & self -> pole [ 0 ] . ay )		5635920	2		=			
ANR	5636009	Identifier	p_ac		5635920	0					
ANR	5636010	ConditionalExpression	! k ? & self -> pole [ 0 ] . ax : & self -> pole [ 0 ] . ay		5635920	1					
ANR	5636011	Condition	! k		5635920	0					
ANR	5636012	UnaryOperationExpression	! k		5635920	0					
ANR	5636013	UnaryOperator	!		5635920	0					
ANR	5636014	Identifier	k		5635920	1					
ANR	5636015	UnaryOperationExpression	& self -> pole [ 0 ] . ax		5635920	1					
ANR	5636016	UnaryOperator	&		5635920	0					
ANR	5636017	MemberAccess	self -> pole [ 0 ] . ax		5635920	1					
ANR	5636018	ArrayIndexing	self -> pole [ 0 ]		5635920	0					
ANR	5636019	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636020	Identifier	self		5635920	0					
ANR	5636021	Identifier	pole		5635920	1					
ANR	5636022	PrimaryExpression	0		5635920	1					
ANR	5636023	Identifier	ax		5635920	1					
ANR	5636024	UnaryOperationExpression	& self -> pole [ 0 ] . ay		5635920	2					
ANR	5636025	UnaryOperator	&		5635920	0					
ANR	5636026	MemberAccess	self -> pole [ 0 ] . ay		5635920	1					
ANR	5636027	ArrayIndexing	self -> pole [ 0 ]		5635920	0					
ANR	5636028	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636029	Identifier	self		5635920	0					
ANR	5636030	Identifier	pole		5635920	1					
ANR	5636031	PrimaryExpression	0		5635920	1					
ANR	5636032	Identifier	ay		5635920	1					
ANR	5636033	IdentifierDeclStatement	t1_glyph_space_coord * p_bl = ( ! k ? & self -> pole [ 0 ] . boundary_length_x : & self -> pole [ 0 ] . boundary_length_y ) ;	2583:8:107377:107480	5635920	3	True				
ANR	5636034	IdentifierDecl	* p_bl = ( ! k ? & self -> pole [ 0 ] . boundary_length_x : & self -> pole [ 0 ] . boundary_length_y )		5635920	0					
ANR	5636035	IdentifierDeclType	t1_glyph_space_coord *		5635920	0					
ANR	5636036	Identifier	p_bl		5635920	1					
ANR	5636037	AssignmentExpression	* p_bl = ( ! k ? & self -> pole [ 0 ] . boundary_length_x : & self -> pole [ 0 ] . boundary_length_y )		5635920	2		=			
ANR	5636038	Identifier	p_bl		5635920	0					
ANR	5636039	ConditionalExpression	! k ? & self -> pole [ 0 ] . boundary_length_x : & self -> pole [ 0 ] . boundary_length_y		5635920	1					
ANR	5636040	Condition	! k		5635920	0					
ANR	5636041	UnaryOperationExpression	! k		5635920	0					
ANR	5636042	UnaryOperator	!		5635920	0					
ANR	5636043	Identifier	k		5635920	1					
ANR	5636044	UnaryOperationExpression	& self -> pole [ 0 ] . boundary_length_x		5635920	1					
ANR	5636045	UnaryOperator	&		5635920	0					
ANR	5636046	MemberAccess	self -> pole [ 0 ] . boundary_length_x		5635920	1					
ANR	5636047	ArrayIndexing	self -> pole [ 0 ]		5635920	0					
ANR	5636048	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636049	Identifier	self		5635920	0					
ANR	5636050	Identifier	pole		5635920	1					
ANR	5636051	PrimaryExpression	0		5635920	1					
ANR	5636052	Identifier	boundary_length_x		5635920	1					
ANR	5636053	UnaryOperationExpression	& self -> pole [ 0 ] . boundary_length_y		5635920	2					
ANR	5636054	UnaryOperator	&		5635920	0					
ANR	5636055	MemberAccess	self -> pole [ 0 ] . boundary_length_y		5635920	1					
ANR	5636056	ArrayIndexing	self -> pole [ 0 ]		5635920	0					
ANR	5636057	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636058	Identifier	self		5635920	0					
ANR	5636059	Identifier	pole		5635920	1					
ANR	5636060	PrimaryExpression	0		5635920	1					
ANR	5636061	Identifier	boundary_length_y		5635920	1					
ANR	5636062	IdentifierDeclStatement	enum t1_align_type * p_f = ( ! k ? & self -> pole [ 0 ] . aligned_x : & self -> pole [ 0 ] . aligned_y ) ;	2584:8:107490:107574	5635920	4	True				
ANR	5636063	IdentifierDecl	* p_f = ( ! k ? & self -> pole [ 0 ] . aligned_x : & self -> pole [ 0 ] . aligned_y )		5635920	0					
ANR	5636064	IdentifierDeclType	enum t1_align_type *		5635920	0					
ANR	5636065	Identifier	p_f		5635920	1					
ANR	5636066	AssignmentExpression	* p_f = ( ! k ? & self -> pole [ 0 ] . aligned_x : & self -> pole [ 0 ] . aligned_y )		5635920	2		=			
ANR	5636067	Identifier	p_f		5635920	0					
ANR	5636068	ConditionalExpression	! k ? & self -> pole [ 0 ] . aligned_x : & self -> pole [ 0 ] . aligned_y		5635920	1					
ANR	5636069	Condition	! k		5635920	0					
ANR	5636070	UnaryOperationExpression	! k		5635920	0					
ANR	5636071	UnaryOperator	!		5635920	0					
ANR	5636072	Identifier	k		5635920	1					
ANR	5636073	UnaryOperationExpression	& self -> pole [ 0 ] . aligned_x		5635920	1					
ANR	5636074	UnaryOperator	&		5635920	0					
ANR	5636075	MemberAccess	self -> pole [ 0 ] . aligned_x		5635920	1					
ANR	5636076	ArrayIndexing	self -> pole [ 0 ]		5635920	0					
ANR	5636077	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636078	Identifier	self		5635920	0					
ANR	5636079	Identifier	pole		5635920	1					
ANR	5636080	PrimaryExpression	0		5635920	1					
ANR	5636081	Identifier	aligned_x		5635920	1					
ANR	5636082	UnaryOperationExpression	& self -> pole [ 0 ] . aligned_y		5635920	2					
ANR	5636083	UnaryOperator	&		5635920	0					
ANR	5636084	MemberAccess	self -> pole [ 0 ] . aligned_y		5635920	1					
ANR	5636085	ArrayIndexing	self -> pole [ 0 ]		5635920	0					
ANR	5636086	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636087	Identifier	self		5635920	0					
ANR	5636088	Identifier	pole		5635920	1					
ANR	5636089	PrimaryExpression	0		5635920	1					
ANR	5636090	Identifier	aligned_y		5635920	1					
ANR	5636091	IdentifierDeclStatement	int offset_gc = ( char * ) p_gc - ( char * ) & self -> pole [ 0 ] ;	2585:8:107584:107637	5635920	5	True				
ANR	5636092	IdentifierDecl	offset_gc = ( char * ) p_gc - ( char * ) & self -> pole [ 0 ]		5635920	0					
ANR	5636093	IdentifierDeclType	int		5635920	0					
ANR	5636094	Identifier	offset_gc		5635920	1					
ANR	5636095	AssignmentExpression	offset_gc = ( char * ) p_gc - ( char * ) & self -> pole [ 0 ]		5635920	2		=			
ANR	5636096	Identifier	offset_gc		5635920	0					
ANR	5636097	AdditiveExpression	( char * ) p_gc - ( char * ) & self -> pole [ 0 ]		5635920	1		-			
ANR	5636098	CastExpression	( char * ) p_gc		5635920	0					
ANR	5636099	CastTarget	char *		5635920	0					
ANR	5636100	Identifier	p_gc		5635920	1					
ANR	5636101	CastExpression	( char * ) & self -> pole [ 0 ]		5635920	1					
ANR	5636102	CastTarget	char *		5635920	0					
ANR	5636103	UnaryOperationExpression	& self -> pole [ 0 ]		5635920	1					
ANR	5636104	UnaryOperator	&		5635920	0					
ANR	5636105	ArrayIndexing	self -> pole [ 0 ]		5635920	1					
ANR	5636106	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636107	Identifier	self		5635920	0					
ANR	5636108	Identifier	pole		5635920	1					
ANR	5636109	PrimaryExpression	0		5635920	1					
ANR	5636110	IdentifierDeclStatement	int offset_wc = ( char * ) p_wc - ( char * ) & self -> pole [ 0 ] ;	2586:8:107647:107700	5635920	6	True				
ANR	5636111	IdentifierDecl	offset_wc = ( char * ) p_wc - ( char * ) & self -> pole [ 0 ]		5635920	0					
ANR	5636112	IdentifierDeclType	int		5635920	0					
ANR	5636113	Identifier	offset_wc		5635920	1					
ANR	5636114	AssignmentExpression	offset_wc = ( char * ) p_wc - ( char * ) & self -> pole [ 0 ]		5635920	2		=			
ANR	5636115	Identifier	offset_wc		5635920	0					
ANR	5636116	AdditiveExpression	( char * ) p_wc - ( char * ) & self -> pole [ 0 ]		5635920	1		-			
ANR	5636117	CastExpression	( char * ) p_wc		5635920	0					
ANR	5636118	CastTarget	char *		5635920	0					
ANR	5636119	Identifier	p_wc		5635920	1					
ANR	5636120	CastExpression	( char * ) & self -> pole [ 0 ]		5635920	1					
ANR	5636121	CastTarget	char *		5635920	0					
ANR	5636122	UnaryOperationExpression	& self -> pole [ 0 ]		5635920	1					
ANR	5636123	UnaryOperator	&		5635920	0					
ANR	5636124	ArrayIndexing	self -> pole [ 0 ]		5635920	1					
ANR	5636125	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636126	Identifier	self		5635920	0					
ANR	5636127	Identifier	pole		5635920	1					
ANR	5636128	PrimaryExpression	0		5635920	1					
ANR	5636129	IdentifierDeclStatement	int offset_ac = ( char * ) p_ac - ( char * ) & self -> pole [ 0 ] ;	2587:8:107710:107763	5635920	7	True				
ANR	5636130	IdentifierDecl	offset_ac = ( char * ) p_ac - ( char * ) & self -> pole [ 0 ]		5635920	0					
ANR	5636131	IdentifierDeclType	int		5635920	0					
ANR	5636132	Identifier	offset_ac		5635920	1					
ANR	5636133	AssignmentExpression	offset_ac = ( char * ) p_ac - ( char * ) & self -> pole [ 0 ]		5635920	2		=			
ANR	5636134	Identifier	offset_ac		5635920	0					
ANR	5636135	AdditiveExpression	( char * ) p_ac - ( char * ) & self -> pole [ 0 ]		5635920	1		-			
ANR	5636136	CastExpression	( char * ) p_ac		5635920	0					
ANR	5636137	CastTarget	char *		5635920	0					
ANR	5636138	Identifier	p_ac		5635920	1					
ANR	5636139	CastExpression	( char * ) & self -> pole [ 0 ]		5635920	1					
ANR	5636140	CastTarget	char *		5635920	0					
ANR	5636141	UnaryOperationExpression	& self -> pole [ 0 ]		5635920	1					
ANR	5636142	UnaryOperator	&		5635920	0					
ANR	5636143	ArrayIndexing	self -> pole [ 0 ]		5635920	1					
ANR	5636144	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636145	Identifier	self		5635920	0					
ANR	5636146	Identifier	pole		5635920	1					
ANR	5636147	PrimaryExpression	0		5635920	1					
ANR	5636148	IdentifierDeclStatement	int offset_bl = ( char * ) p_bl - ( char * ) & self -> pole [ 0 ] ;	2588:8:107773:107826	5635920	8	True				
ANR	5636149	IdentifierDecl	offset_bl = ( char * ) p_bl - ( char * ) & self -> pole [ 0 ]		5635920	0					
ANR	5636150	IdentifierDeclType	int		5635920	0					
ANR	5636151	Identifier	offset_bl		5635920	1					
ANR	5636152	AssignmentExpression	offset_bl = ( char * ) p_bl - ( char * ) & self -> pole [ 0 ]		5635920	2		=			
ANR	5636153	Identifier	offset_bl		5635920	0					
ANR	5636154	AdditiveExpression	( char * ) p_bl - ( char * ) & self -> pole [ 0 ]		5635920	1		-			
ANR	5636155	CastExpression	( char * ) p_bl		5635920	0					
ANR	5636156	CastTarget	char *		5635920	0					
ANR	5636157	Identifier	p_bl		5635920	1					
ANR	5636158	CastExpression	( char * ) & self -> pole [ 0 ]		5635920	1					
ANR	5636159	CastTarget	char *		5635920	0					
ANR	5636160	UnaryOperationExpression	& self -> pole [ 0 ]		5635920	1					
ANR	5636161	UnaryOperator	&		5635920	0					
ANR	5636162	ArrayIndexing	self -> pole [ 0 ]		5635920	1					
ANR	5636163	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636164	Identifier	self		5635920	0					
ANR	5636165	Identifier	pole		5635920	1					
ANR	5636166	PrimaryExpression	0		5635920	1					
ANR	5636167	IdentifierDeclStatement	int offset_f = ( char * ) p_f - ( char * ) & self -> pole [ 0 ] ;	2589:8:107836:107889	5635920	9	True				
ANR	5636168	IdentifierDecl	offset_f = ( char * ) p_f - ( char * ) & self -> pole [ 0 ]		5635920	0					
ANR	5636169	IdentifierDeclType	int		5635920	0					
ANR	5636170	Identifier	offset_f		5635920	1					
ANR	5636171	AssignmentExpression	offset_f = ( char * ) p_f - ( char * ) & self -> pole [ 0 ]		5635920	2		=			
ANR	5636172	Identifier	offset_f		5635920	0					
ANR	5636173	AdditiveExpression	( char * ) p_f - ( char * ) & self -> pole [ 0 ]		5635920	1		-			
ANR	5636174	CastExpression	( char * ) p_f		5635920	0					
ANR	5636175	CastTarget	char *		5635920	0					
ANR	5636176	Identifier	p_f		5635920	1					
ANR	5636177	CastExpression	( char * ) & self -> pole [ 0 ]		5635920	1					
ANR	5636178	CastTarget	char *		5635920	0					
ANR	5636179	UnaryOperationExpression	& self -> pole [ 0 ]		5635920	1					
ANR	5636180	UnaryOperator	&		5635920	0					
ANR	5636181	ArrayIndexing	self -> pole [ 0 ]		5635920	1					
ANR	5636182	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636183	Identifier	self		5635920	0					
ANR	5636184	Identifier	pole		5635920	1					
ANR	5636185	PrimaryExpression	0		5635920	1					
ANR	5636186	ForStatement	for ( i = 0 ; i < self -> contour_count ; i ++ )		5635920	10					
ANR	5636187	ForInit	i = 0 ;	2591:13:107905:107910	5635920	0	True				
ANR	5636188	AssignmentExpression	i = 0		5635920	0		=			
ANR	5636189	Identifier	i		5635920	0					
ANR	5636190	PrimaryExpression	0		5635920	1					
ANR	5636191	Condition	i < self -> contour_count	2591:20:107912:107934	5635920	1	True				
ANR	5636192	RelationalExpression	i < self -> contour_count		5635920	0		<			
ANR	5636193	Identifier	i		5635920	0					
ANR	5636194	PtrMemberAccess	self -> contour_count		5635920	1					
ANR	5636195	Identifier	self		5635920	0					
ANR	5636196	Identifier	contour_count		5635920	1					
ANR	5636197	PostIncDecOperationExpression	i ++	2591:45:107937:107939	5635920	2	True				
ANR	5636198	Identifier	i		5635920	0					
ANR	5636199	IncDec	++		5635920	1					
ANR	5636200	CompoundStatement		18:12:1006:1019	5635920	3					
ANR	5636201	IdentifierDeclStatement	int beg_contour_pole = self -> contour [ i ] ;	2592:12:107956:107995	5635920	0	True				
ANR	5636202	IdentifierDecl	beg_contour_pole = self -> contour [ i ]		5635920	0					
ANR	5636203	IdentifierDeclType	int		5635920	0					
ANR	5636204	Identifier	beg_contour_pole		5635920	1					
ANR	5636205	AssignmentExpression	beg_contour_pole = self -> contour [ i ]		5635920	2		=			
ANR	5636206	Identifier	beg_contour_pole		5635920	0					
ANR	5636207	ArrayIndexing	self -> contour [ i ]		5635920	1					
ANR	5636208	PtrMemberAccess	self -> contour		5635920	0					
ANR	5636209	Identifier	self		5635920	0					
ANR	5636210	Identifier	contour		5635920	1					
ANR	5636211	Identifier	i		5635920	1					
ANR	5636212	IdentifierDeclStatement	int end_contour_pole = self -> contour [ i + 1 ] - 2 ;	2593:12:108009:108056	5635920	1	True				
ANR	5636213	IdentifierDecl	end_contour_pole = self -> contour [ i + 1 ] - 2		5635920	0					
ANR	5636214	IdentifierDeclType	int		5635920	0					
ANR	5636215	Identifier	end_contour_pole		5635920	1					
ANR	5636216	AssignmentExpression	end_contour_pole = self -> contour [ i + 1 ] - 2		5635920	2		=			
ANR	5636217	Identifier	end_contour_pole		5635920	0					
ANR	5636218	AdditiveExpression	self -> contour [ i + 1 ] - 2		5635920	1		-			
ANR	5636219	ArrayIndexing	self -> contour [ i + 1 ]		5635920	0					
ANR	5636220	PtrMemberAccess	self -> contour		5635920	0					
ANR	5636221	Identifier	self		5635920	0					
ANR	5636222	Identifier	contour		5635920	1					
ANR	5636223	AdditiveExpression	i + 1		5635920	1		+			
ANR	5636224	Identifier	i		5635920	0					
ANR	5636225	PrimaryExpression	1		5635920	1					
ANR	5636226	PrimaryExpression	2		5635920	1					
ANR	5636227	IdentifierDeclStatement	int range_beg ;	2594:12:108070:108083	5635920	2	True				
ANR	5636228	IdentifierDecl	range_beg		5635920	0					
ANR	5636229	IdentifierDeclType	int		5635920	0					
ANR	5636230	Identifier	range_beg		5635920	1					
ANR	5636231	ForStatement	for ( j = beg_contour_pole ; j <= end_contour_pole ; j ++ )		5635920	3					
ANR	5636232	ForInit	j = beg_contour_pole ;	2596:17:108103:108123	5635920	0	True				
ANR	5636233	AssignmentExpression	j = beg_contour_pole		5635920	0		=			
ANR	5636234	Identifier	j		5635920	0					
ANR	5636235	Identifier	beg_contour_pole		5635920	1					
ANR	5636236	Condition	j <= end_contour_pole	2596:39:108125:108145	5635920	1	True				
ANR	5636237	RelationalExpression	j <= end_contour_pole		5635920	0		<=			
ANR	5636238	Identifier	j		5635920	0					
ANR	5636239	Identifier	end_contour_pole		5635920	1					
ANR	5636240	PostIncDecOperationExpression	j ++	2596:62:108148:108150	5635920	2	True				
ANR	5636241	Identifier	j		5635920	0					
ANR	5636242	IncDec	++		5635920	1					
ANR	5636243	Statement	if	2597:16:108169:108170	5635920	3	True				
ANR	5636244	Statement	(	2597:19:108172:108172	5635920	4	True				
ANR	5636245	Statement	*	2597:20:108173:108173	5635920	5	True				
ANR	5636246	Statement	member_prt	2597:21:108174:108183	5635920	6	True				
ANR	5636247	Statement	(	2597:31:108184:108184	5635920	7	True				
ANR	5636248	Statement	enum	2597:32:108185:108188	5635920	8	True				
ANR	5636249	Statement	t1_align_type	2597:37:108190:108202	5635920	9	True				
ANR	5636250	Statement	","	2597:50:108203:108203	5635920	10	True				
ANR	5636251	Statement	&	2597:52:108205:108205	5635920	11	True				
ANR	5636252	Statement	self	2597:53:108206:108209	5635920	12	True				
ANR	5636253	Statement	->	2597:57:108210:108211	5635920	13	True				
ANR	5636254	Statement	pole	2597:59:108212:108215	5635920	14	True				
ANR	5636255	Statement	[	2597:63:108216:108216	5635920	15	True				
ANR	5636256	Statement	j	2597:64:108217:108217	5635920	16	True				
ANR	5636257	Statement	]	2597:65:108218:108218	5635920	17	True				
ANR	5636258	Statement	","	2597:66:108219:108219	5635920	18	True				
ANR	5636259	Statement	offset_f	2597:68:108221:108228	5635920	19	True				
ANR	5636260	Statement	)	2597:76:108229:108229	5635920	20	True				
ANR	5636261	Statement	)	2597:77:108230:108230	5635920	21	True				
ANR	5636262	BreakStatement	break ;	2598:20:108252:108257	5635920	22	True				
ANR	5636263	IfStatement	if ( j > end_contour_pole )		5635920	23					
ANR	5636264	Condition	j > end_contour_pole	2599:16:108275:108294	5635920	0	True				
ANR	5636265	RelationalExpression	j > end_contour_pole		5635920	0		>			
ANR	5636266	Identifier	j		5635920	0					
ANR	5636267	Identifier	end_contour_pole		5635920	1					
ANR	5636268	ContinueStatement	continue ;	2600:16:108313:108321	5635920	1	True				
ANR	5636269	ExpressionStatement	range_beg = j	2601:12:108335:108348	5635920	24	True				
ANR	5636270	AssignmentExpression	range_beg = j		5635920	0		=			
ANR	5636271	Identifier	range_beg		5635920	0					
ANR	5636272	Identifier	j		5635920	1					
ANR	5636273	DoStatement	do		5635920	25					
ANR	5636274	CompoundStatement		31:16:1559:1577	5635920	0					
ANR	5636275	IdentifierDeclStatement	"int start_pole = j , stop_pole = - 1 ;"	2603:16:108383:108417	5635920	0	True				
ANR	5636276	IdentifierDecl	start_pole = j		5635920	0					
ANR	5636277	IdentifierDeclType	int		5635920	0					
ANR	5636278	Identifier	start_pole		5635920	1					
ANR	5636279	AssignmentExpression	start_pole = j		5635920	2		=			
ANR	5636280	Identifier	j		5635920	0					
ANR	5636281	Identifier	j		5635920	1					
ANR	5636282	IdentifierDecl	stop_pole = - 1		5635920	1					
ANR	5636283	IdentifierDeclType	int		5635920	0					
ANR	5636284	Identifier	stop_pole		5635920	1					
ANR	5636285	AssignmentExpression	stop_pole = - 1		5635920	2		=			
ANR	5636286	Identifier	stop_pole		5635920	0					
ANR	5636287	UnaryOperationExpression	- 1		5635920	1					
ANR	5636288	UnaryOperator	-		5635920	0					
ANR	5636289	PrimaryExpression	1		5635920	1					
ANR	5636290	IdentifierDeclStatement	"t1_glyph_space_coord min_a , max_a ;"	2604:16:108435:108468	5635920	1	True				
ANR	5636291	IdentifierDecl	min_a		5635920	0					
ANR	5636292	IdentifierDeclType	t1_glyph_space_coord		5635920	0					
ANR	5636293	Identifier	min_a		5635920	1					
ANR	5636294	IdentifierDecl	max_a		5635920	1					
ANR	5636295	IdentifierDeclType	t1_glyph_space_coord		5635920	0					
ANR	5636296	Identifier	max_a		5635920	1					
ANR	5636297	IdentifierDeclStatement	"t1_glyph_space_coord min_g , max_g , g0 , g1 , a0 , a1 ;"	2605:16:108486:108535	5635920	2	True				
ANR	5636298	IdentifierDecl	min_g		5635920	0					
ANR	5636299	IdentifierDeclType	t1_glyph_space_coord		5635920	0					
ANR	5636300	Identifier	min_g		5635920	1					
ANR	5636301	IdentifierDecl	max_g		5635920	1					
ANR	5636302	IdentifierDeclType	t1_glyph_space_coord		5635920	0					
ANR	5636303	Identifier	max_g		5635920	1					
ANR	5636304	IdentifierDecl	g0		5635920	2					
ANR	5636305	IdentifierDeclType	t1_glyph_space_coord		5635920	0					
ANR	5636306	Identifier	g0		5635920	1					
ANR	5636307	IdentifierDecl	g1		5635920	3					
ANR	5636308	IdentifierDeclType	t1_glyph_space_coord		5635920	0					
ANR	5636309	Identifier	g1		5635920	1					
ANR	5636310	IdentifierDecl	a0		5635920	4					
ANR	5636311	IdentifierDeclType	t1_glyph_space_coord		5635920	0					
ANR	5636312	Identifier	a0		5635920	1					
ANR	5636313	IdentifierDecl	a1		5635920	5					
ANR	5636314	IdentifierDeclType	t1_glyph_space_coord		5635920	0					
ANR	5636315	Identifier	a1		5635920	1					
ANR	5636316	IdentifierDeclStatement	"int min_i = start_pole , max_i = start_pole , cut_l , l ;"	2606:16:108553:108605	5635920	3	True				
ANR	5636317	IdentifierDecl	min_i = start_pole		5635920	0					
ANR	5636318	IdentifierDeclType	int		5635920	0					
ANR	5636319	Identifier	min_i		5635920	1					
ANR	5636320	AssignmentExpression	min_i = start_pole		5635920	2		=			
ANR	5636321	Identifier	start_pole		5635920	0					
ANR	5636322	Identifier	start_pole		5635920	1					
ANR	5636323	IdentifierDecl	max_i = start_pole		5635920	1					
ANR	5636324	IdentifierDeclType	int		5635920	0					
ANR	5636325	Identifier	max_i		5635920	1					
ANR	5636326	AssignmentExpression	max_i = start_pole		5635920	2		=			
ANR	5636327	Identifier	start_pole		5635920	0					
ANR	5636328	Identifier	start_pole		5635920	1					
ANR	5636329	IdentifierDecl	cut_l		5635920	2					
ANR	5636330	IdentifierDeclType	int		5635920	0					
ANR	5636331	Identifier	cut_l		5635920	1					
ANR	5636332	IdentifierDecl	l		5635920	3					
ANR	5636333	IdentifierDeclType	int		5635920	0					
ANR	5636334	Identifier	l		5635920	1					
ANR	5636335	IdentifierDeclStatement	bool moved = false ;	2607:16:108623:108641	5635920	4	True				
ANR	5636336	IdentifierDecl	moved = false		5635920	0					
ANR	5636337	IdentifierDeclType	bool		5635920	0					
ANR	5636338	Identifier	moved		5635920	1					
ANR	5636339	AssignmentExpression	moved = false		5635920	2		=			
ANR	5636340	Identifier	false		5635920	0					
ANR	5636341	Identifier	false		5635920	1					
ANR	5636342	DoStatement	do		5635920	5					
ANR	5636343	CompoundStatement		35:20:1667:1687	5635920	0					
ANR	5636344	IdentifierDeclStatement	"int min_l = 0 , max_l = 0 ;"	2610:20:108685:108709	5635920	0	True				
ANR	5636345	IdentifierDecl	min_l = 0		5635920	0					
ANR	5636346	IdentifierDeclType	int		5635920	0					
ANR	5636347	Identifier	min_l		5635920	1					
ANR	5636348	AssignmentExpression	min_l = 0		5635920	2		=			
ANR	5636349	Identifier	min_l		5635920	0					
ANR	5636350	PrimaryExpression	0		5635920	1					
ANR	5636351	IdentifierDecl	max_l = 0		5635920	1					
ANR	5636352	IdentifierDeclType	int		5635920	0					
ANR	5636353	Identifier	max_l		5635920	1					
ANR	5636354	AssignmentExpression	max_l = 0		5635920	2		=			
ANR	5636355	Identifier	max_l		5635920	0					
ANR	5636356	PrimaryExpression	0		5635920	1					
ANR	5636357	IdentifierDeclStatement	"int min_w , max_w , w0 ;"	2611:20:108731:108751	5635920	1	True				
ANR	5636358	IdentifierDecl	min_w		5635920	0					
ANR	5636359	IdentifierDeclType	int		5635920	0					
ANR	5636360	Identifier	min_w		5635920	1					
ANR	5636361	IdentifierDecl	max_w		5635920	1					
ANR	5636362	IdentifierDeclType	int		5635920	0					
ANR	5636363	Identifier	max_w		5635920	1					
ANR	5636364	IdentifierDecl	w0		5635920	2					
ANR	5636365	IdentifierDeclType	int		5635920	0					
ANR	5636366	Identifier	w0		5635920	1					
ANR	5636367	ExpressionStatement	"g0 = * member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_gc )"	2613:20:108774:108848	5635920	2	True				
ANR	5636368	AssignmentExpression	"g0 = * member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_gc )"		5635920	0		=			
ANR	5636369	Identifier	g0		5635920	0					
ANR	5636370	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_gc )"		5635920	1					
ANR	5636371	UnaryOperator	*		5635920	0					
ANR	5636372	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_gc )"		5635920	1					
ANR	5636373	Callee	member_prt		5635920	0					
ANR	5636374	Identifier	member_prt		5635920	0					
ANR	5636375	ArgumentList	t1_glyph_space_coord		5635920	1					
ANR	5636376	Argument	t1_glyph_space_coord		5635920	0					
ANR	5636377	Identifier	t1_glyph_space_coord		5635920	0					
ANR	5636378	Argument	& self -> pole [ start_pole ]		5635920	1					
ANR	5636379	UnaryOperationExpression	& self -> pole [ start_pole ]		5635920	0					
ANR	5636380	UnaryOperator	&		5635920	0					
ANR	5636381	ArrayIndexing	self -> pole [ start_pole ]		5635920	1					
ANR	5636382	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636383	Identifier	self		5635920	0					
ANR	5636384	Identifier	pole		5635920	1					
ANR	5636385	Identifier	start_pole		5635920	1					
ANR	5636386	Argument	offset_gc		5635920	2					
ANR	5636387	Identifier	offset_gc		5635920	0					
ANR	5636388	ExpressionStatement	"w0 = * member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_wc )"	2614:20:108870:108944	5635920	3	True				
ANR	5636389	AssignmentExpression	"w0 = * member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_wc )"		5635920	0		=			
ANR	5636390	Identifier	w0		5635920	0					
ANR	5636391	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_wc )"		5635920	1					
ANR	5636392	UnaryOperator	*		5635920	0					
ANR	5636393	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_wc )"		5635920	1					
ANR	5636394	Callee	member_prt		5635920	0					
ANR	5636395	Identifier	member_prt		5635920	0					
ANR	5636396	ArgumentList	t1_glyph_space_coord		5635920	1					
ANR	5636397	Argument	t1_glyph_space_coord		5635920	0					
ANR	5636398	Identifier	t1_glyph_space_coord		5635920	0					
ANR	5636399	Argument	& self -> pole [ start_pole ]		5635920	1					
ANR	5636400	UnaryOperationExpression	& self -> pole [ start_pole ]		5635920	0					
ANR	5636401	UnaryOperator	&		5635920	0					
ANR	5636402	ArrayIndexing	self -> pole [ start_pole ]		5635920	1					
ANR	5636403	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636404	Identifier	self		5635920	0					
ANR	5636405	Identifier	pole		5635920	1					
ANR	5636406	Identifier	start_pole		5635920	1					
ANR	5636407	Argument	offset_wc		5635920	2					
ANR	5636408	Identifier	offset_wc		5635920	0					
ANR	5636409	ExpressionStatement	"a0 = * member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_ac )"	2615:20:108966:109040	5635920	4	True				
ANR	5636410	AssignmentExpression	"a0 = * member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_ac )"		5635920	0		=			
ANR	5636411	Identifier	a0		5635920	0					
ANR	5636412	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_ac )"		5635920	1					
ANR	5636413	UnaryOperator	*		5635920	0					
ANR	5636414	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_ac )"		5635920	1					
ANR	5636415	Callee	member_prt		5635920	0					
ANR	5636416	Identifier	member_prt		5635920	0					
ANR	5636417	ArgumentList	t1_glyph_space_coord		5635920	1					
ANR	5636418	Argument	t1_glyph_space_coord		5635920	0					
ANR	5636419	Identifier	t1_glyph_space_coord		5635920	0					
ANR	5636420	Argument	& self -> pole [ start_pole ]		5635920	1					
ANR	5636421	UnaryOperationExpression	& self -> pole [ start_pole ]		5635920	0					
ANR	5636422	UnaryOperator	&		5635920	0					
ANR	5636423	ArrayIndexing	self -> pole [ start_pole ]		5635920	1					
ANR	5636424	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636425	Identifier	self		5635920	0					
ANR	5636426	Identifier	pole		5635920	1					
ANR	5636427	Identifier	start_pole		5635920	1					
ANR	5636428	Argument	offset_ac		5635920	2					
ANR	5636429	Identifier	offset_ac		5635920	0					
ANR	5636430	ExpressionStatement	min_g = g0	2616:20:109062:109072	5635920	5	True				
ANR	5636431	AssignmentExpression	min_g = g0		5635920	0		=			
ANR	5636432	Identifier	min_g		5635920	0					
ANR	5636433	Identifier	g0		5635920	1					
ANR	5636434	ExpressionStatement	max_g = g0	2617:20:109094:109104	5635920	6	True				
ANR	5636435	AssignmentExpression	max_g = g0		5635920	0		=			
ANR	5636436	Identifier	max_g		5635920	0					
ANR	5636437	Identifier	g0		5635920	1					
ANR	5636438	ExpressionStatement	min_w = max_w = w0	2618:20:109126:109144	5635920	7	True				
ANR	5636439	AssignmentExpression	min_w = max_w = w0		5635920	0		=			
ANR	5636440	Identifier	min_w		5635920	0					
ANR	5636441	AssignmentExpression	max_w = w0		5635920	1		=			
ANR	5636442	Identifier	max_w		5635920	0					
ANR	5636443	Identifier	w0		5635920	1					
ANR	5636444	ForStatement	"for ( j = ranger_step_f ( start_pole , beg_contour_pole , end_contour_pole ) , l = 1 ; j != start_pole ; j = ranger_step_f ( j , beg_contour_pole , end_contour_pole ) , l ++ )"		5635920	8					
ANR	5636445	ForInit	"j = ranger_step_f ( start_pole , beg_contour_pole , end_contour_pole ) , l = 1 ;"	2619:25:109171:109244	5635920	0	True				
ANR	5636446	Expression	"j = ranger_step_f ( start_pole , beg_contour_pole , end_contour_pole ) , l = 1"		5635920	0					
ANR	5636447	AssignmentExpression	"j = ranger_step_f ( start_pole , beg_contour_pole , end_contour_pole )"		5635920	0		=			
ANR	5636448	Identifier	j		5635920	0					
ANR	5636449	CallExpression	"ranger_step_f ( start_pole , beg_contour_pole , end_contour_pole )"		5635920	1					
ANR	5636450	Callee	ranger_step_f		5635920	0					
ANR	5636451	Identifier	ranger_step_f		5635920	0					
ANR	5636452	ArgumentList	start_pole		5635920	1					
ANR	5636453	Argument	start_pole		5635920	0					
ANR	5636454	Identifier	start_pole		5635920	0					
ANR	5636455	Argument	beg_contour_pole		5635920	1					
ANR	5636456	Identifier	beg_contour_pole		5635920	0					
ANR	5636457	Argument	end_contour_pole		5635920	2					
ANR	5636458	Identifier	end_contour_pole		5635920	0					
ANR	5636459	AssignmentExpression	l = 1		5635920	1		=			
ANR	5636460	Identifier	l		5635920	0					
ANR	5636461	PrimaryExpression	1		5635920	1					
ANR	5636462	Condition	j != start_pole	2620:25:109271:109285	5635920	1	True				
ANR	5636463	EqualityExpression	j != start_pole		5635920	0		!=			
ANR	5636464	Identifier	j		5635920	0					
ANR	5636465	Identifier	start_pole		5635920	1					
ANR	5636466	Expression	"j = ranger_step_f ( j , beg_contour_pole , end_contour_pole ) , l ++"	2621:25:109313:109374	5635920	2	True				
ANR	5636467	AssignmentExpression	"j = ranger_step_f ( j , beg_contour_pole , end_contour_pole )"		5635920	0		=			
ANR	5636468	Identifier	j		5635920	0					
ANR	5636469	CallExpression	"ranger_step_f ( j , beg_contour_pole , end_contour_pole )"		5635920	1					
ANR	5636470	Callee	ranger_step_f		5635920	0					
ANR	5636471	Identifier	ranger_step_f		5635920	0					
ANR	5636472	ArgumentList	j		5635920	1					
ANR	5636473	Argument	j		5635920	0					
ANR	5636474	Identifier	j		5635920	0					
ANR	5636475	Argument	beg_contour_pole		5635920	1					
ANR	5636476	Identifier	beg_contour_pole		5635920	0					
ANR	5636477	Argument	end_contour_pole		5635920	2					
ANR	5636478	Identifier	end_contour_pole		5635920	0					
ANR	5636479	PostIncDecOperationExpression	l ++		5635920	1					
ANR	5636480	Identifier	l		5635920	0					
ANR	5636481	IncDec	++		5635920	1					
ANR	5636482	CompoundStatement		47:24:2451:2537	5635920	3					
ANR	5636483	IdentifierDeclStatement	"t1_glyph_space_coord g = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc ) ;"	2622:24:109403:109489	5635920	0	True				
ANR	5636484	IdentifierDecl	"g = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5635920	0					
ANR	5636485	IdentifierDeclType	t1_glyph_space_coord		5635920	0					
ANR	5636486	Identifier	g		5635920	1					
ANR	5636487	AssignmentExpression	"g = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5635920	2		=			
ANR	5636488	Identifier	g		5635920	0					
ANR	5636489	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5635920	1					
ANR	5636490	UnaryOperator	*		5635920	0					
ANR	5636491	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5635920	1					
ANR	5636492	Callee	member_prt		5635920	0					
ANR	5636493	Identifier	member_prt		5635920	0					
ANR	5636494	ArgumentList	t1_glyph_space_coord		5635920	1					
ANR	5636495	Argument	t1_glyph_space_coord		5635920	0					
ANR	5636496	Identifier	t1_glyph_space_coord		5635920	0					
ANR	5636497	Argument	& self -> pole [ j ]		5635920	1					
ANR	5636498	UnaryOperationExpression	& self -> pole [ j ]		5635920	0					
ANR	5636499	UnaryOperator	&		5635920	0					
ANR	5636500	ArrayIndexing	self -> pole [ j ]		5635920	1					
ANR	5636501	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636502	Identifier	self		5635920	0					
ANR	5636503	Identifier	pole		5635920	1					
ANR	5636504	Identifier	j		5635920	1					
ANR	5636505	Argument	offset_gc		5635920	2					
ANR	5636506	Identifier	offset_gc		5635920	0					
ANR	5636507	IdentifierDeclStatement	"t1_glyph_space_coord w = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_wc ) ;"	2623:24:109515:109601	5635920	1	True				
ANR	5636508	IdentifierDecl	"w = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_wc )"		5635920	0					
ANR	5636509	IdentifierDeclType	t1_glyph_space_coord		5635920	0					
ANR	5636510	Identifier	w		5635920	1					
ANR	5636511	AssignmentExpression	"w = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_wc )"		5635920	2		=			
ANR	5636512	Identifier	w		5635920	0					
ANR	5636513	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_wc )"		5635920	1					
ANR	5636514	UnaryOperator	*		5635920	0					
ANR	5636515	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_wc )"		5635920	1					
ANR	5636516	Callee	member_prt		5635920	0					
ANR	5636517	Identifier	member_prt		5635920	0					
ANR	5636518	ArgumentList	t1_glyph_space_coord		5635920	1					
ANR	5636519	Argument	t1_glyph_space_coord		5635920	0					
ANR	5636520	Identifier	t1_glyph_space_coord		5635920	0					
ANR	5636521	Argument	& self -> pole [ j ]		5635920	1					
ANR	5636522	UnaryOperationExpression	& self -> pole [ j ]		5635920	0					
ANR	5636523	UnaryOperator	&		5635920	0					
ANR	5636524	ArrayIndexing	self -> pole [ j ]		5635920	1					
ANR	5636525	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636526	Identifier	self		5635920	0					
ANR	5636527	Identifier	pole		5635920	1					
ANR	5636528	Identifier	j		5635920	1					
ANR	5636529	Argument	offset_wc		5635920	2					
ANR	5636530	Identifier	offset_wc		5635920	0					
ANR	5636531	IfStatement	if ( min_g > g )		5635920	2					
ANR	5636532	Condition	min_g > g	2625:28:109632:109640	5635920	0	True				
ANR	5636533	RelationalExpression	min_g > g		5635920	0		>			
ANR	5636534	Identifier	min_g		5635920	0					
ANR	5636535	Identifier	g		5635920	1					
ANR	5636536	ExpressionStatement	"min_g = g , min_i = j , min_l = l"	2626:28:109671:109702	5635920	1	True				
ANR	5636537	Expression	"min_g = g , min_i = j , min_l = l"		5635920	0					
ANR	5636538	AssignmentExpression	min_g = g		5635920	0		=			
ANR	5636539	Identifier	min_g		5635920	0					
ANR	5636540	Identifier	g		5635920	1					
ANR	5636541	Expression	"min_i = j , min_l = l"		5635920	1					
ANR	5636542	AssignmentExpression	min_i = j		5635920	0		=			
ANR	5636543	Identifier	min_i		5635920	0					
ANR	5636544	Identifier	j		5635920	1					
ANR	5636545	AssignmentExpression	min_l = l		5635920	1		=			
ANR	5636546	Identifier	min_l		5635920	0					
ANR	5636547	Identifier	l		5635920	1					
ANR	5636548	IfStatement	if ( max_g < g )		5635920	3					
ANR	5636549	Condition	max_g < g	2627:28:109732:109740	5635920	0	True				
ANR	5636550	RelationalExpression	max_g < g		5635920	0		<			
ANR	5636551	Identifier	max_g		5635920	0					
ANR	5636552	Identifier	g		5635920	1					
ANR	5636553	ExpressionStatement	"max_g = g , max_i = j , max_l = l"	2628:28:109771:109802	5635920	1	True				
ANR	5636554	Expression	"max_g = g , max_i = j , max_l = l"		5635920	0					
ANR	5636555	AssignmentExpression	max_g = g		5635920	0		=			
ANR	5636556	Identifier	max_g		5635920	0					
ANR	5636557	Identifier	g		5635920	1					
ANR	5636558	Expression	"max_i = j , max_l = l"		5635920	1					
ANR	5636559	AssignmentExpression	max_i = j		5635920	0		=			
ANR	5636560	Identifier	max_i		5635920	0					
ANR	5636561	Identifier	j		5635920	1					
ANR	5636562	AssignmentExpression	max_l = l		5635920	1		=			
ANR	5636563	Identifier	max_l		5635920	0					
ANR	5636564	Identifier	l		5635920	1					
ANR	5636565	IfStatement	if ( min_w > w )		5635920	4					
ANR	5636566	Condition	min_w > w	2629:28:109832:109840	5635920	0	True				
ANR	5636567	RelationalExpression	min_w > w		5635920	0		>			
ANR	5636568	Identifier	min_w		5635920	0					
ANR	5636569	Identifier	w		5635920	1					
ANR	5636570	ExpressionStatement	min_w = w	2630:28:109871:109880	5635920	1	True				
ANR	5636571	AssignmentExpression	min_w = w		5635920	0		=			
ANR	5636572	Identifier	min_w		5635920	0					
ANR	5636573	Identifier	w		5635920	1					
ANR	5636574	IfStatement	if ( max_w < w )		5635920	5					
ANR	5636575	Condition	max_w < w	2631:28:109910:109918	5635920	0	True				
ANR	5636576	RelationalExpression	max_w < w		5635920	0		<			
ANR	5636577	Identifier	max_w		5635920	0					
ANR	5636578	Identifier	w		5635920	1					
ANR	5636579	ExpressionStatement	max_w = w	2632:28:109949:109958	5635920	1	True				
ANR	5636580	AssignmentExpression	max_w = w		5635920	0		=			
ANR	5636581	Identifier	max_w		5635920	0					
ANR	5636582	Identifier	w		5635920	1					
ANR	5636583	Statement	if	2633:24:109984:109985	5635920	6	True				
ANR	5636584	Statement	(	2633:27:109987:109987	5635920	7	True				
ANR	5636585	Statement	*	2633:28:109988:109988	5635920	8	True				
ANR	5636586	Statement	member_prt	2633:29:109989:109998	5635920	9	True				
ANR	5636587	Statement	(	2633:39:109999:109999	5635920	10	True				
ANR	5636588	Statement	enum	2633:40:110000:110003	5635920	11	True				
ANR	5636589	Statement	t1_align_type	2633:45:110005:110017	5635920	12	True				
ANR	5636590	Statement	","	2633:58:110018:110018	5635920	13	True				
ANR	5636591	Statement	&	2633:60:110020:110020	5635920	14	True				
ANR	5636592	Statement	self	2633:61:110021:110024	5635920	15	True				
ANR	5636593	Statement	->	2633:65:110025:110026	5635920	16	True				
ANR	5636594	Statement	pole	2633:67:110027:110030	5635920	17	True				
ANR	5636595	Statement	[	2633:71:110031:110031	5635920	18	True				
ANR	5636596	Statement	j	2633:72:110032:110032	5635920	19	True				
ANR	5636597	Statement	]	2633:73:110033:110033	5635920	20	True				
ANR	5636598	Statement	","	2633:74:110034:110034	5635920	21	True				
ANR	5636599	Statement	offset_f	2633:76:110036:110043	5635920	22	True				
ANR	5636600	Statement	)	2633:84:110044:110044	5635920	23	True				
ANR	5636601	Statement	)	2633:85:110045:110045	5635920	24	True				
ANR	5636602	BreakStatement	break ;	2634:28:110075:110080	5635920	25	True				
ANR	5636603	IfStatement	if ( j == stop_pole )		5635920	26					
ANR	5636604	Condition	j == stop_pole	2635:28:110110:110123	5635920	0	True				
ANR	5636605	EqualityExpression	j == stop_pole		5635920	0		==			
ANR	5636606	Identifier	j		5635920	0					
ANR	5636607	Identifier	stop_pole		5635920	1					
ANR	5636608	BreakStatement	break ;	2636:28:110154:110159	5635920	1	True				
ANR	5636609	ExpressionStatement	stop_pole = j	2638:20:110203:110216	5635920	9	True				
ANR	5636610	AssignmentExpression	stop_pole = j		5635920	0		=			
ANR	5636611	Identifier	stop_pole		5635920	0					
ANR	5636612	Identifier	j		5635920	1					
ANR	5636613	ExpressionStatement	cut_l = l	2639:20:110238:110247	5635920	10	True				
ANR	5636614	AssignmentExpression	cut_l = l		5635920	0		=			
ANR	5636615	Identifier	cut_l		5635920	0					
ANR	5636616	Identifier	l		5635920	1					
ANR	5636617	ExpressionStatement	"g1 = * member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_gc )"	2640:20:110269:110343	5635920	11	True				
ANR	5636618	AssignmentExpression	"g1 = * member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_gc )"		5635920	0		=			
ANR	5636619	Identifier	g1		5635920	0					
ANR	5636620	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_gc )"		5635920	1					
ANR	5636621	UnaryOperator	*		5635920	0					
ANR	5636622	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_gc )"		5635920	1					
ANR	5636623	Callee	member_prt		5635920	0					
ANR	5636624	Identifier	member_prt		5635920	0					
ANR	5636625	ArgumentList	t1_glyph_space_coord		5635920	1					
ANR	5636626	Argument	t1_glyph_space_coord		5635920	0					
ANR	5636627	Identifier	t1_glyph_space_coord		5635920	0					
ANR	5636628	Argument	& self -> pole [ stop_pole ]		5635920	1					
ANR	5636629	UnaryOperationExpression	& self -> pole [ stop_pole ]		5635920	0					
ANR	5636630	UnaryOperator	&		5635920	0					
ANR	5636631	ArrayIndexing	self -> pole [ stop_pole ]		5635920	1					
ANR	5636632	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636633	Identifier	self		5635920	0					
ANR	5636634	Identifier	pole		5635920	1					
ANR	5636635	Identifier	stop_pole		5635920	1					
ANR	5636636	Argument	offset_gc		5635920	2					
ANR	5636637	Identifier	offset_gc		5635920	0					
ANR	5636638	ExpressionStatement	"a1 = * member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_ac )"	2641:20:110365:110439	5635920	12	True				
ANR	5636639	AssignmentExpression	"a1 = * member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_ac )"		5635920	0		=			
ANR	5636640	Identifier	a1		5635920	0					
ANR	5636641	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_ac )"		5635920	1					
ANR	5636642	UnaryOperator	*		5635920	0					
ANR	5636643	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_ac )"		5635920	1					
ANR	5636644	Callee	member_prt		5635920	0					
ANR	5636645	Identifier	member_prt		5635920	0					
ANR	5636646	ArgumentList	t1_glyph_space_coord		5635920	1					
ANR	5636647	Argument	t1_glyph_space_coord		5635920	0					
ANR	5636648	Identifier	t1_glyph_space_coord		5635920	0					
ANR	5636649	Argument	& self -> pole [ stop_pole ]		5635920	1					
ANR	5636650	UnaryOperationExpression	& self -> pole [ stop_pole ]		5635920	0					
ANR	5636651	UnaryOperator	&		5635920	0					
ANR	5636652	ArrayIndexing	self -> pole [ stop_pole ]		5635920	1					
ANR	5636653	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636654	Identifier	self		5635920	0					
ANR	5636655	Identifier	pole		5635920	1					
ANR	5636656	Identifier	stop_pole		5635920	1					
ANR	5636657	Argument	offset_ac		5635920	2					
ANR	5636658	Identifier	offset_ac		5635920	0					
ANR	5636659	IfStatement	if ( start_pole != stop_pole )		5635920	13					
ANR	5636660	Condition	start_pole != stop_pole	2643:24:110466:110488	5635920	0	True				
ANR	5636661	EqualityExpression	start_pole != stop_pole		5635920	0		!=			
ANR	5636662	Identifier	start_pole		5635920	0					
ANR	5636663	Identifier	stop_pole		5635920	1					
ANR	5636664	IfStatement	if ( any_abs ( g0 - g1 ) >= any_abs ( a0 - a1 ) / 10 )		5635920	1					
ANR	5636665	Condition	any_abs ( g0 - g1 ) >= any_abs ( a0 - a1 ) / 10	2644:28:110519:110559	5635920	0	True				
ANR	5636666	RelationalExpression	any_abs ( g0 - g1 ) >= any_abs ( a0 - a1 ) / 10		5635920	0		>=			
ANR	5636667	CallExpression	any_abs ( g0 - g1 )		5635920	0					
ANR	5636668	Callee	any_abs		5635920	0					
ANR	5636669	Identifier	any_abs		5635920	0					
ANR	5636670	ArgumentList	g0 - g1		5635920	1					
ANR	5636671	Argument	g0 - g1		5635920	0					
ANR	5636672	AdditiveExpression	g0 - g1		5635920	0		-			
ANR	5636673	Identifier	g0		5635920	0					
ANR	5636674	Identifier	g1		5635920	1					
ANR	5636675	MultiplicativeExpression	any_abs ( a0 - a1 ) / 10		5635920	1		/			
ANR	5636676	CallExpression	any_abs ( a0 - a1 )		5635920	0					
ANR	5636677	Callee	any_abs		5635920	0					
ANR	5636678	Identifier	any_abs		5635920	0					
ANR	5636679	ArgumentList	a0 - a1		5635920	1					
ANR	5636680	Argument	a0 - a1		5635920	0					
ANR	5636681	AdditiveExpression	a0 - a1		5635920	0		-			
ANR	5636682	Identifier	a0		5635920	0					
ANR	5636683	Identifier	a1		5635920	1					
ANR	5636684	PrimaryExpression	10		5635920	1					
ANR	5636685	IfStatement	if ( any_abs ( max_g - min_g ) <= any_abs ( max_w - min_w ) / 4 )		5635920	1					
ANR	5636686	Condition	any_abs ( max_g - min_g ) <= any_abs ( max_w - min_w ) / 4	2645:32:110594:110645	5635920	0	True				
ANR	5636687	RelationalExpression	any_abs ( max_g - min_g ) <= any_abs ( max_w - min_w ) / 4		5635920	0		<=			
ANR	5636688	CallExpression	any_abs ( max_g - min_g )		5635920	0					
ANR	5636689	Callee	any_abs		5635920	0					
ANR	5636690	Identifier	any_abs		5635920	0					
ANR	5636691	ArgumentList	max_g - min_g		5635920	1					
ANR	5636692	Argument	max_g - min_g		5635920	0					
ANR	5636693	AdditiveExpression	max_g - min_g		5635920	0		-			
ANR	5636694	Identifier	max_g		5635920	0					
ANR	5636695	Identifier	min_g		5635920	1					
ANR	5636696	MultiplicativeExpression	any_abs ( max_w - min_w ) / 4		5635920	1		/			
ANR	5636697	CallExpression	any_abs ( max_w - min_w )		5635920	0					
ANR	5636698	Callee	any_abs		5635920	0					
ANR	5636699	Identifier	any_abs		5635920	0					
ANR	5636700	ArgumentList	max_w - min_w		5635920	1					
ANR	5636701	Argument	max_w - min_w		5635920	0					
ANR	5636702	AdditiveExpression	max_w - min_w		5635920	0		-			
ANR	5636703	Identifier	max_w		5635920	0					
ANR	5636704	Identifier	min_w		5635920	1					
ANR	5636705	PrimaryExpression	4		5635920	1					
ANR	5636706	BreakStatement	break ;	2646:32:110680:110685	5635920	1	True				
ANR	5636707	IfStatement	if ( min_i != start_pole && min_l < cut_l && min_g != g0 && min_g != g1 )		5635920	14					
ANR	5636708	Condition	min_i != start_pole && min_l < cut_l && min_g != g0 && min_g != g1	2648:24:110795:110860	5635920	0	True				
ANR	5636709	AndExpression	min_i != start_pole && min_l < cut_l && min_g != g0 && min_g != g1		5635920	0		&&			
ANR	5636710	EqualityExpression	min_i != start_pole		5635920	0		!=			
ANR	5636711	Identifier	min_i		5635920	0					
ANR	5636712	Identifier	start_pole		5635920	1					
ANR	5636713	AndExpression	min_l < cut_l && min_g != g0 && min_g != g1		5635920	1		&&			
ANR	5636714	RelationalExpression	min_l < cut_l		5635920	0		<			
ANR	5636715	Identifier	min_l		5635920	0					
ANR	5636716	Identifier	cut_l		5635920	1					
ANR	5636717	AndExpression	min_g != g0 && min_g != g1		5635920	1		&&			
ANR	5636718	EqualityExpression	min_g != g0		5635920	0		!=			
ANR	5636719	Identifier	min_g		5635920	0					
ANR	5636720	Identifier	g0		5635920	1					
ANR	5636721	EqualityExpression	min_g != g1		5635920	1		!=			
ANR	5636722	Identifier	min_g		5635920	0					
ANR	5636723	Identifier	g1		5635920	1					
ANR	5636724	ExpressionStatement	"stop_pole = min_i , cut_l = min_l"	2649:24:110887:110919	5635920	1	True				
ANR	5636725	Expression	"stop_pole = min_i , cut_l = min_l"		5635920	0					
ANR	5636726	AssignmentExpression	stop_pole = min_i		5635920	0		=			
ANR	5636727	Identifier	stop_pole		5635920	0					
ANR	5636728	Identifier	min_i		5635920	1					
ANR	5636729	AssignmentExpression	cut_l = min_l		5635920	1		=			
ANR	5636730	Identifier	cut_l		5635920	0					
ANR	5636731	Identifier	min_l		5635920	1					
ANR	5636732	IfStatement	if ( max_i != start_pole && max_l < cut_l && max_g != g0 && max_g != g1 )		5635920	15					
ANR	5636733	Condition	max_i != start_pole && max_l < cut_l && max_g != g0 && max_g != g1	2650:24:110945:111010	5635920	0	True				
ANR	5636734	AndExpression	max_i != start_pole && max_l < cut_l && max_g != g0 && max_g != g1		5635920	0		&&			
ANR	5636735	EqualityExpression	max_i != start_pole		5635920	0		!=			
ANR	5636736	Identifier	max_i		5635920	0					
ANR	5636737	Identifier	start_pole		5635920	1					
ANR	5636738	AndExpression	max_l < cut_l && max_g != g0 && max_g != g1		5635920	1		&&			
ANR	5636739	RelationalExpression	max_l < cut_l		5635920	0		<			
ANR	5636740	Identifier	max_l		5635920	0					
ANR	5636741	Identifier	cut_l		5635920	1					
ANR	5636742	AndExpression	max_g != g0 && max_g != g1		5635920	1		&&			
ANR	5636743	EqualityExpression	max_g != g0		5635920	0		!=			
ANR	5636744	Identifier	max_g		5635920	0					
ANR	5636745	Identifier	g0		5635920	1					
ANR	5636746	EqualityExpression	max_g != g1		5635920	1		!=			
ANR	5636747	Identifier	max_g		5635920	0					
ANR	5636748	Identifier	g1		5635920	1					
ANR	5636749	ExpressionStatement	"stop_pole = max_i , cut_l = max_l"	2651:24:111037:111069	5635920	1	True				
ANR	5636750	Expression	"stop_pole = max_i , cut_l = max_l"		5635920	0					
ANR	5636751	AssignmentExpression	stop_pole = max_i		5635920	0		=			
ANR	5636752	Identifier	stop_pole		5635920	0					
ANR	5636753	Identifier	max_i		5635920	1					
ANR	5636754	AssignmentExpression	cut_l = max_l		5635920	1		=			
ANR	5636755	Identifier	cut_l		5635920	0					
ANR	5636756	Identifier	max_l		5635920	1					
ANR	5636757	Condition	cut_l < l	2652:25:111096:111104	5635920	1	True				
ANR	5636758	RelationalExpression	cut_l < l		5635920	0		<			
ANR	5636759	Identifier	cut_l		5635920	0					
ANR	5636760	Identifier	l		5635920	1					
ANR	5636761	IfStatement	if ( g0 < g1 )		5635920	6					
ANR	5636762	Condition	g0 < g1	2654:20:111228:111234	5635920	0	True				
ANR	5636763	RelationalExpression	g0 < g1		5635920	0		<			
ANR	5636764	Identifier	g0		5635920	0					
ANR	5636765	Identifier	g1		5635920	1					
ANR	5636766	CompoundStatement		78:29:4173:4173	5635920	1					
ANR	5636767	ExpressionStatement	min_g = g0	2655:20:111259:111269	5635920	0	True				
ANR	5636768	AssignmentExpression	min_g = g0		5635920	0		=			
ANR	5636769	Identifier	min_g		5635920	0					
ANR	5636770	Identifier	g0		5635920	1					
ANR	5636771	ExpressionStatement	max_g = g1	2656:20:111291:111301	5635920	1	True				
ANR	5636772	AssignmentExpression	max_g = g1		5635920	0		=			
ANR	5636773	Identifier	max_g		5635920	0					
ANR	5636774	Identifier	g1		5635920	1					
ANR	5636775	ExpressionStatement	min_a = a0	2657:20:111323:111333	5635920	2	True				
ANR	5636776	AssignmentExpression	min_a = a0		5635920	0		=			
ANR	5636777	Identifier	min_a		5635920	0					
ANR	5636778	Identifier	a0		5635920	1					
ANR	5636779	ExpressionStatement	max_a = a1	2658:20:111355:111365	5635920	3	True				
ANR	5636780	AssignmentExpression	max_a = a1		5635920	0		=			
ANR	5636781	Identifier	max_a		5635920	0					
ANR	5636782	Identifier	a1		5635920	1					
ANR	5636783	ElseStatement	else		5635920	0					
ANR	5636784	CompoundStatement		83:23:4326:4326	5635920	0					
ANR	5636785	ExpressionStatement	min_g = g1	2660:20:111412:111422	5635920	0	True				
ANR	5636786	AssignmentExpression	min_g = g1		5635920	0		=			
ANR	5636787	Identifier	min_g		5635920	0					
ANR	5636788	Identifier	g1		5635920	1					
ANR	5636789	ExpressionStatement	max_g = g0	2661:20:111444:111454	5635920	1	True				
ANR	5636790	AssignmentExpression	max_g = g0		5635920	0		=			
ANR	5636791	Identifier	max_g		5635920	0					
ANR	5636792	Identifier	g0		5635920	1					
ANR	5636793	ExpressionStatement	min_a = a1	2662:20:111476:111486	5635920	2	True				
ANR	5636794	AssignmentExpression	min_a = a1		5635920	0		=			
ANR	5636795	Identifier	min_a		5635920	0					
ANR	5636796	Identifier	a1		5635920	1					
ANR	5636797	ExpressionStatement	max_a = a0	2663:20:111508:111518	5635920	3	True				
ANR	5636798	AssignmentExpression	max_a = a0		5635920	0		=			
ANR	5636799	Identifier	max_a		5635920	0					
ANR	5636800	Identifier	a0		5635920	1					
ANR	5636801	IfStatement	if ( min_g == max_g && min_a != max_a )		5635920	7					
ANR	5636802	Condition	min_g == max_g && min_a != max_a	2665:20:111558:111589	5635920	0	True				
ANR	5636803	AndExpression	min_g == max_g && min_a != max_a		5635920	0		&&			
ANR	5636804	EqualityExpression	min_g == max_g		5635920	0		==			
ANR	5636805	Identifier	min_g		5635920	0					
ANR	5636806	Identifier	max_g		5635920	1					
ANR	5636807	EqualityExpression	min_a != max_a		5635920	1		!=			
ANR	5636808	Identifier	min_a		5635920	0					
ANR	5636809	Identifier	max_a		5635920	1					
ANR	5636810	CompoundStatement		89:54:4528:4528	5635920	1					
ANR	5636811	IfStatement	"if ( * member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_bl ) < * member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_bl ) )"		5635920	0					
ANR	5636812	Condition	"* member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_bl ) < * member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_bl )"	2667:24:111691:111856	5635920	0	True				
ANR	5636813	RelationalExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_bl ) < * member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_bl )"		5635920	0		<			
ANR	5636814	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_bl )"		5635920	0					
ANR	5636815	UnaryOperator	*		5635920	0					
ANR	5636816	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_bl )"		5635920	1					
ANR	5636817	Callee	member_prt		5635920	0					
ANR	5636818	Identifier	member_prt		5635920	0					
ANR	5636819	ArgumentList	t1_glyph_space_coord		5635920	1					
ANR	5636820	Argument	t1_glyph_space_coord		5635920	0					
ANR	5636821	Identifier	t1_glyph_space_coord		5635920	0					
ANR	5636822	Argument	& self -> pole [ start_pole ]		5635920	1					
ANR	5636823	UnaryOperationExpression	& self -> pole [ start_pole ]		5635920	0					
ANR	5636824	UnaryOperator	&		5635920	0					
ANR	5636825	ArrayIndexing	self -> pole [ start_pole ]		5635920	1					
ANR	5636826	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636827	Identifier	self		5635920	0					
ANR	5636828	Identifier	pole		5635920	1					
ANR	5636829	Identifier	start_pole		5635920	1					
ANR	5636830	Argument	offset_bl		5635920	2					
ANR	5636831	Identifier	offset_bl		5635920	0					
ANR	5636832	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_bl )"		5635920	1					
ANR	5636833	UnaryOperator	*		5635920	0					
ANR	5636834	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_bl )"		5635920	1					
ANR	5636835	Callee	member_prt		5635920	0					
ANR	5636836	Identifier	member_prt		5635920	0					
ANR	5636837	ArgumentList	t1_glyph_space_coord		5635920	1					
ANR	5636838	Argument	t1_glyph_space_coord		5635920	0					
ANR	5636839	Identifier	t1_glyph_space_coord		5635920	0					
ANR	5636840	Argument	& self -> pole [ stop_pole ]		5635920	1					
ANR	5636841	UnaryOperationExpression	& self -> pole [ stop_pole ]		5635920	0					
ANR	5636842	UnaryOperator	&		5635920	0					
ANR	5636843	ArrayIndexing	self -> pole [ stop_pole ]		5635920	1					
ANR	5636844	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636845	Identifier	self		5635920	0					
ANR	5636846	Identifier	pole		5635920	1					
ANR	5636847	Identifier	stop_pole		5635920	1					
ANR	5636848	Argument	offset_bl		5635920	2					
ANR	5636849	Identifier	offset_bl		5635920	0					
ANR	5636850	ExpressionStatement	min_a = max_a = a1	2669:24:111883:111901	5635920	1	True				
ANR	5636851	AssignmentExpression	min_a = max_a = a1		5635920	0		=			
ANR	5636852	Identifier	min_a		5635920	0					
ANR	5636853	AssignmentExpression	max_a = a1		5635920	1		=			
ANR	5636854	Identifier	max_a		5635920	0					
ANR	5636855	Identifier	a1		5635920	1					
ANR	5636856	ElseStatement	else		5635920	0					
ANR	5636857	ExpressionStatement	min_a = max_a = a0	2671:24:111952:111970	5635920	0	True				
ANR	5636858	AssignmentExpression	min_a = max_a = a0		5635920	0		=			
ANR	5636859	Identifier	min_a		5635920	0					
ANR	5636860	AssignmentExpression	max_a = a0		5635920	1		=			
ANR	5636861	Identifier	max_a		5635920	0					
ANR	5636862	Identifier	a0		5635920	1					
ANR	5636863	ForStatement	"for ( j = start_pole ; ; j = ranger_step_f ( j , beg_contour_pole , end_contour_pole ) )"		5635920	8					
ANR	5636864	ForInit	j = start_pole ;	2673:21:112011:112025	5635920	0	True				
ANR	5636865	AssignmentExpression	j = start_pole		5635920	0		=			
ANR	5636866	Identifier	j		5635920	0					
ANR	5636867	Identifier	start_pole		5635920	1					
ANR	5636868	AssignmentExpression	"j = ranger_step_f ( j , beg_contour_pole , end_contour_pole )"	2674:21:112050:112106	5635920	1	True	=			
ANR	5636869	Identifier	j		5635920	0					
ANR	5636870	CallExpression	"ranger_step_f ( j , beg_contour_pole , end_contour_pole )"		5635920	1					
ANR	5636871	Callee	ranger_step_f		5635920	0					
ANR	5636872	Identifier	ranger_step_f		5635920	0					
ANR	5636873	ArgumentList	j		5635920	1					
ANR	5636874	Argument	j		5635920	0					
ANR	5636875	Identifier	j		5635920	0					
ANR	5636876	Argument	beg_contour_pole		5635920	1					
ANR	5636877	Identifier	beg_contour_pole		5635920	0					
ANR	5636878	Argument	end_contour_pole		5635920	2					
ANR	5636879	Identifier	end_contour_pole		5635920	0					
ANR	5636880	CompoundStatement		99:20:5067:5153	5635920	2					
ANR	5636881	IdentifierDeclStatement	"t1_glyph_space_coord g = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc ) ;"	2675:20:112131:112217	5635920	0	True				
ANR	5636882	IdentifierDecl	"g = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5635920	0					
ANR	5636883	IdentifierDeclType	t1_glyph_space_coord		5635920	0					
ANR	5636884	Identifier	g		5635920	1					
ANR	5636885	AssignmentExpression	"g = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5635920	2		=			
ANR	5636886	Identifier	g		5635920	0					
ANR	5636887	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5635920	1					
ANR	5636888	UnaryOperator	*		5635920	0					
ANR	5636889	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5635920	1					
ANR	5636890	Callee	member_prt		5635920	0					
ANR	5636891	Identifier	member_prt		5635920	0					
ANR	5636892	ArgumentList	t1_glyph_space_coord		5635920	1					
ANR	5636893	Argument	t1_glyph_space_coord		5635920	0					
ANR	5636894	Identifier	t1_glyph_space_coord		5635920	0					
ANR	5636895	Argument	& self -> pole [ j ]		5635920	1					
ANR	5636896	UnaryOperationExpression	& self -> pole [ j ]		5635920	0					
ANR	5636897	UnaryOperator	&		5635920	0					
ANR	5636898	ArrayIndexing	self -> pole [ j ]		5635920	1					
ANR	5636899	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636900	Identifier	self		5635920	0					
ANR	5636901	Identifier	pole		5635920	1					
ANR	5636902	Identifier	j		5635920	1					
ANR	5636903	Argument	offset_gc		5635920	2					
ANR	5636904	Identifier	offset_gc		5635920	0					
ANR	5636905	IfStatement	if ( g <= min_g )		5635920	1					
ANR	5636906	Condition	g <= min_g	2677:24:112244:112253	5635920	0	True				
ANR	5636907	RelationalExpression	g <= min_g		5635920	0		<=			
ANR	5636908	Identifier	g		5635920	0					
ANR	5636909	Identifier	min_g		5635920	1					
ANR	5636910	ExpressionStatement	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac ) = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc ) + ( min_a - min_g )"	2678:24:112280:112447	5635920	1	True				
ANR	5636911	AssignmentExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac ) = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc ) + ( min_a - min_g )"		5635920	0		=			
ANR	5636912	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac )"		5635920	0					
ANR	5636913	UnaryOperator	*		5635920	0					
ANR	5636914	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac )"		5635920	1					
ANR	5636915	Callee	member_prt		5635920	0					
ANR	5636916	Identifier	member_prt		5635920	0					
ANR	5636917	ArgumentList	t1_glyph_space_coord		5635920	1					
ANR	5636918	Argument	t1_glyph_space_coord		5635920	0					
ANR	5636919	Identifier	t1_glyph_space_coord		5635920	0					
ANR	5636920	Argument	& self -> pole [ j ]		5635920	1					
ANR	5636921	UnaryOperationExpression	& self -> pole [ j ]		5635920	0					
ANR	5636922	UnaryOperator	&		5635920	0					
ANR	5636923	ArrayIndexing	self -> pole [ j ]		5635920	1					
ANR	5636924	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636925	Identifier	self		5635920	0					
ANR	5636926	Identifier	pole		5635920	1					
ANR	5636927	Identifier	j		5635920	1					
ANR	5636928	Argument	offset_ac		5635920	2					
ANR	5636929	Identifier	offset_ac		5635920	0					
ANR	5636930	AdditiveExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc ) + ( min_a - min_g )"		5635920	1		+			
ANR	5636931	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5635920	0					
ANR	5636932	UnaryOperator	*		5635920	0					
ANR	5636933	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5635920	1					
ANR	5636934	Callee	member_prt		5635920	0					
ANR	5636935	Identifier	member_prt		5635920	0					
ANR	5636936	ArgumentList	t1_glyph_space_coord		5635920	1					
ANR	5636937	Argument	t1_glyph_space_coord		5635920	0					
ANR	5636938	Identifier	t1_glyph_space_coord		5635920	0					
ANR	5636939	Argument	& self -> pole [ j ]		5635920	1					
ANR	5636940	UnaryOperationExpression	& self -> pole [ j ]		5635920	0					
ANR	5636941	UnaryOperator	&		5635920	0					
ANR	5636942	ArrayIndexing	self -> pole [ j ]		5635920	1					
ANR	5636943	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636944	Identifier	self		5635920	0					
ANR	5636945	Identifier	pole		5635920	1					
ANR	5636946	Identifier	j		5635920	1					
ANR	5636947	Argument	offset_gc		5635920	2					
ANR	5636948	Identifier	offset_gc		5635920	0					
ANR	5636949	AdditiveExpression	min_a - min_g		5635920	1		-			
ANR	5636950	Identifier	min_a		5635920	0					
ANR	5636951	Identifier	min_g		5635920	1					
ANR	5636952	ElseStatement	else		5635920	0					
ANR	5636953	IfStatement	if ( g >= max_g )		5635920	0					
ANR	5636954	Condition	g >= max_g	2680:29:112478:112487	5635920	0	True				
ANR	5636955	RelationalExpression	g >= max_g		5635920	0		>=			
ANR	5636956	Identifier	g		5635920	0					
ANR	5636957	Identifier	max_g		5635920	1					
ANR	5636958	ExpressionStatement	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac ) = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc ) + ( max_a - max_g )"	2681:24:112514:112681	5635920	1	True				
ANR	5636959	AssignmentExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac ) = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc ) + ( max_a - max_g )"		5635920	0		=			
ANR	5636960	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac )"		5635920	0					
ANR	5636961	UnaryOperator	*		5635920	0					
ANR	5636962	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac )"		5635920	1					
ANR	5636963	Callee	member_prt		5635920	0					
ANR	5636964	Identifier	member_prt		5635920	0					
ANR	5636965	ArgumentList	t1_glyph_space_coord		5635920	1					
ANR	5636966	Argument	t1_glyph_space_coord		5635920	0					
ANR	5636967	Identifier	t1_glyph_space_coord		5635920	0					
ANR	5636968	Argument	& self -> pole [ j ]		5635920	1					
ANR	5636969	UnaryOperationExpression	& self -> pole [ j ]		5635920	0					
ANR	5636970	UnaryOperator	&		5635920	0					
ANR	5636971	ArrayIndexing	self -> pole [ j ]		5635920	1					
ANR	5636972	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636973	Identifier	self		5635920	0					
ANR	5636974	Identifier	pole		5635920	1					
ANR	5636975	Identifier	j		5635920	1					
ANR	5636976	Argument	offset_ac		5635920	2					
ANR	5636977	Identifier	offset_ac		5635920	0					
ANR	5636978	AdditiveExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc ) + ( max_a - max_g )"		5635920	1		+			
ANR	5636979	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5635920	0					
ANR	5636980	UnaryOperator	*		5635920	0					
ANR	5636981	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5635920	1					
ANR	5636982	Callee	member_prt		5635920	0					
ANR	5636983	Identifier	member_prt		5635920	0					
ANR	5636984	ArgumentList	t1_glyph_space_coord		5635920	1					
ANR	5636985	Argument	t1_glyph_space_coord		5635920	0					
ANR	5636986	Identifier	t1_glyph_space_coord		5635920	0					
ANR	5636987	Argument	& self -> pole [ j ]		5635920	1					
ANR	5636988	UnaryOperationExpression	& self -> pole [ j ]		5635920	0					
ANR	5636989	UnaryOperator	&		5635920	0					
ANR	5636990	ArrayIndexing	self -> pole [ j ]		5635920	1					
ANR	5636991	PtrMemberAccess	self -> pole		5635920	0					
ANR	5636992	Identifier	self		5635920	0					
ANR	5636993	Identifier	pole		5635920	1					
ANR	5636994	Identifier	j		5635920	1					
ANR	5636995	Argument	offset_gc		5635920	2					
ANR	5636996	Identifier	offset_gc		5635920	0					
ANR	5636997	AdditiveExpression	max_a - max_g		5635920	1		-			
ANR	5636998	Identifier	max_a		5635920	0					
ANR	5636999	Identifier	max_g		5635920	1					
ANR	5637000	IfStatement	if ( moved && j == stop_pole )		5635920	2					
ANR	5637001	Condition	moved && j == stop_pole	2683:23:112706:112728	5635920	0	True				
ANR	5637002	AndExpression	moved && j == stop_pole		5635920	0		&&			
ANR	5637003	Identifier	moved		5635920	0					
ANR	5637004	EqualityExpression	j == stop_pole		5635920	1		==			
ANR	5637005	Identifier	j		5635920	0					
ANR	5637006	Identifier	stop_pole		5635920	1					
ANR	5637007	BreakStatement	break ;	2684:24:112755:112760	5635920	1	True				
ANR	5637008	ExpressionStatement	moved = true	2685:20:112782:112794	5635920	3	True				
ANR	5637009	AssignmentExpression	moved = true		5635920	0		=			
ANR	5637010	Identifier	moved		5635920	0					
ANR	5637011	Identifier	true		5635920	1					
ANR	5637012	IfStatement	if ( min_g < max_g )		5635920	9					
ANR	5637013	Condition	min_g < max_g	2687:20:112834:112846	5635920	0	True				
ANR	5637014	RelationalExpression	min_g < max_g		5635920	0		<			
ANR	5637015	Identifier	min_g		5635920	0					
ANR	5637016	Identifier	max_g		5635920	1					
ANR	5637017	CompoundStatement		139:20:7188:7230	5635920	1					
ANR	5637018	IdentifierDeclStatement	int24 div = max_g - min_g ;	2688:20:112871:112896	5635920	0	True				
ANR	5637019	IdentifierDecl	div = max_g - min_g		5635920	0					
ANR	5637020	IdentifierDeclType	int24		5635920	0					
ANR	5637021	Identifier	div		5635920	1					
ANR	5637022	AssignmentExpression	div = max_g - min_g		5635920	2		=			
ANR	5637023	Identifier	div		5635920	0					
ANR	5637024	AdditiveExpression	max_g - min_g		5635920	1		-			
ANR	5637025	Identifier	max_g		5635920	0					
ANR	5637026	Identifier	min_g		5635920	1					
ANR	5637027	IdentifierDeclStatement	int24 mul = max_a - min_a ;	2689:20:112918:112943	5635920	1	True				
ANR	5637028	IdentifierDecl	mul = max_a - min_a		5635920	0					
ANR	5637029	IdentifierDeclType	int24		5635920	0					
ANR	5637030	Identifier	mul		5635920	1					
ANR	5637031	AssignmentExpression	mul = max_a - min_a		5635920	2		=			
ANR	5637032	Identifier	mul		5635920	0					
ANR	5637033	AdditiveExpression	max_a - min_a		5635920	1		-			
ANR	5637034	Identifier	max_a		5635920	0					
ANR	5637035	Identifier	min_a		5635920	1					
ANR	5637036	IdentifierDeclStatement	"int24 m0 = mul , d = div , q1 , q2 , r1 , m1 , u ;"	2715:20:114252:114294	5635920	2	True				
ANR	5637037	IdentifierDecl	m0 = mul		5635920	0					
ANR	5637038	IdentifierDeclType	int24		5635920	0					
ANR	5637039	Identifier	m0		5635920	1					
ANR	5637040	AssignmentExpression	m0 = mul		5635920	2		=			
ANR	5637041	Identifier	mul		5635920	0					
ANR	5637042	Identifier	mul		5635920	1					
ANR	5637043	IdentifierDecl	d = div		5635920	1					
ANR	5637044	IdentifierDeclType	int24		5635920	0					
ANR	5637045	Identifier	d		5635920	1					
ANR	5637046	AssignmentExpression	d = div		5635920	2		=			
ANR	5637047	Identifier	div		5635920	0					
ANR	5637048	Identifier	div		5635920	1					
ANR	5637049	IdentifierDecl	q1		5635920	2					
ANR	5637050	IdentifierDeclType	int24		5635920	0					
ANR	5637051	Identifier	q1		5635920	1					
ANR	5637052	IdentifierDecl	q2		5635920	3					
ANR	5637053	IdentifierDeclType	int24		5635920	0					
ANR	5637054	Identifier	q2		5635920	1					
ANR	5637055	IdentifierDecl	r1		5635920	4					
ANR	5637056	IdentifierDeclType	int24		5635920	0					
ANR	5637057	Identifier	r1		5635920	1					
ANR	5637058	IdentifierDecl	m1		5635920	5					
ANR	5637059	IdentifierDeclType	int24		5635920	0					
ANR	5637060	Identifier	m1		5635920	1					
ANR	5637061	IdentifierDecl	u		5635920	6					
ANR	5637062	IdentifierDeclType	int24		5635920	0					
ANR	5637063	Identifier	u		5635920	1					
ANR	5637064	IfStatement	if ( m0 >= ( 1 << 19 ) || d >= ( 1 << 19 ) )		5635920	3					
ANR	5637065	Condition	m0 >= ( 1 << 19 ) || d >= ( 1 << 19 )	2717:24:114321:114353	5635920	0	True				
ANR	5637066	OrExpression	m0 >= ( 1 << 19 ) || d >= ( 1 << 19 )		5635920	0		||			
ANR	5637067	RelationalExpression	m0 >= ( 1 << 19 )		5635920	0		>=			
ANR	5637068	Identifier	m0		5635920	0					
ANR	5637069	ShiftExpression	1 << 19		5635920	1		<<			
ANR	5637070	PrimaryExpression	1		5635920	0					
ANR	5637071	PrimaryExpression	19		5635920	1					
ANR	5637072	RelationalExpression	d >= ( 1 << 19 )		5635920	1		>=			
ANR	5637073	Identifier	d		5635920	0					
ANR	5637074	ShiftExpression	1 << 19		5635920	1		<<			
ANR	5637075	PrimaryExpression	1		5635920	0					
ANR	5637076	PrimaryExpression	19		5635920	1					
ANR	5637077	ExpressionStatement	"m0 >>= 5 , d >>= 5"	2718:24:114380:114397	5635920	1	True				
ANR	5637078	Expression	"m0 >>= 5 , d >>= 5"		5635920	0					
ANR	5637079	AssignmentExpression	m0 >>= 5		5635920	0		>>=			
ANR	5637080	Identifier	m0		5635920	0					
ANR	5637081	PrimaryExpression	5		5635920	1					
ANR	5637082	AssignmentExpression	d >>= 5		5635920	1		>>=			
ANR	5637083	Identifier	d		5635920	0					
ANR	5637084	PrimaryExpression	5		5635920	1					
ANR	5637085	ExpressionStatement	"q1 = m0 / d , r1 = m0 % d , m1 = r1 << 12"	2719:20:114419:114458	5635920	4	True				
ANR	5637086	Expression	"q1 = m0 / d , r1 = m0 % d , m1 = r1 << 12"		5635920	0					
ANR	5637087	AssignmentExpression	q1 = m0 / d		5635920	0		=			
ANR	5637088	Identifier	q1		5635920	0					
ANR	5637089	MultiplicativeExpression	m0 / d		5635920	1		/			
ANR	5637090	Identifier	m0		5635920	0					
ANR	5637091	Identifier	d		5635920	1					
ANR	5637092	Expression	"r1 = m0 % d , m1 = r1 << 12"		5635920	1					
ANR	5637093	AssignmentExpression	r1 = m0 % d		5635920	0		=			
ANR	5637094	Identifier	r1		5635920	0					
ANR	5637095	MultiplicativeExpression	m0 % d		5635920	1		%			
ANR	5637096	Identifier	m0		5635920	0					
ANR	5637097	Identifier	d		5635920	1					
ANR	5637098	AssignmentExpression	m1 = r1 << 12		5635920	1		=			
ANR	5637099	Identifier	m1		5635920	0					
ANR	5637100	ShiftExpression	r1 << 12		5635920	1		<<			
ANR	5637101	Identifier	r1		5635920	0					
ANR	5637102	PrimaryExpression	12		5635920	1					
ANR	5637103	ExpressionStatement	q2 = m1 / d	2720:20:114480:114491	5635920	5	True				
ANR	5637104	AssignmentExpression	q2 = m1 / d		5635920	0		=			
ANR	5637105	Identifier	q2		5635920	0					
ANR	5637106	MultiplicativeExpression	m1 / d		5635920	1		/			
ANR	5637107	Identifier	m1		5635920	0					
ANR	5637108	Identifier	d		5635920	1					
ANR	5637109	ExpressionStatement	u = ( q1 << 12 ) + q2	2721:20:114513:114532	5635920	6	True				
ANR	5637110	AssignmentExpression	u = ( q1 << 12 ) + q2		5635920	0		=			
ANR	5637111	Identifier	u		5635920	0					
ANR	5637112	AdditiveExpression	( q1 << 12 ) + q2		5635920	1		+			
ANR	5637113	ShiftExpression	q1 << 12		5635920	0		<<			
ANR	5637114	Identifier	q1		5635920	0					
ANR	5637115	PrimaryExpression	12		5635920	1					
ANR	5637116	Identifier	q2		5635920	1					
ANR	5637117	ForStatement	"for ( j = ranger_step_f ( start_pole , beg_contour_pole , end_contour_pole ) ; j != stop_pole ; j = ranger_step_f ( j , beg_contour_pole , end_contour_pole ) )"		5635920	7					
ANR	5637118	ForInit	"j = ranger_step_f ( start_pole , beg_contour_pole , end_contour_pole ) ;"	2722:25:114559:114625	5635920	0	True				
ANR	5637119	AssignmentExpression	"j = ranger_step_f ( start_pole , beg_contour_pole , end_contour_pole )"		5635920	0		=			
ANR	5637120	Identifier	j		5635920	0					
ANR	5637121	CallExpression	"ranger_step_f ( start_pole , beg_contour_pole , end_contour_pole )"		5635920	1					
ANR	5637122	Callee	ranger_step_f		5635920	0					
ANR	5637123	Identifier	ranger_step_f		5635920	0					
ANR	5637124	ArgumentList	start_pole		5635920	1					
ANR	5637125	Argument	start_pole		5635920	0					
ANR	5637126	Identifier	start_pole		5635920	0					
ANR	5637127	Argument	beg_contour_pole		5635920	1					
ANR	5637128	Identifier	beg_contour_pole		5635920	0					
ANR	5637129	Argument	end_contour_pole		5635920	2					
ANR	5637130	Identifier	end_contour_pole		5635920	0					
ANR	5637131	Condition	j != stop_pole	2722:93:114627:114640	5635920	1	True				
ANR	5637132	EqualityExpression	j != stop_pole		5635920	0		!=			
ANR	5637133	Identifier	j		5635920	0					
ANR	5637134	Identifier	stop_pole		5635920	1					
ANR	5637135	AssignmentExpression	"j = ranger_step_f ( j , beg_contour_pole , end_contour_pole )"	2723:25:114668:114724	5635920	2	True	=			
ANR	5637136	Identifier	j		5635920	0					
ANR	5637137	CallExpression	"ranger_step_f ( j , beg_contour_pole , end_contour_pole )"		5635920	1					
ANR	5637138	Callee	ranger_step_f		5635920	0					
ANR	5637139	Identifier	ranger_step_f		5635920	0					
ANR	5637140	ArgumentList	j		5635920	1					
ANR	5637141	Argument	j		5635920	0					
ANR	5637142	Identifier	j		5635920	0					
ANR	5637143	Argument	beg_contour_pole		5635920	1					
ANR	5637144	Identifier	beg_contour_pole		5635920	0					
ANR	5637145	Argument	end_contour_pole		5635920	2					
ANR	5637146	Identifier	end_contour_pole		5635920	0					
ANR	5637147	CompoundStatement		148:24:7689:7774	5635920	3					
ANR	5637148	IdentifierDeclStatement	"t1_glyph_space_coord g = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc ) ;"	2724:24:114753:114838	5635920	0	True				
ANR	5637149	IdentifierDecl	"g = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5635920	0					
ANR	5637150	IdentifierDeclType	t1_glyph_space_coord		5635920	0					
ANR	5637151	Identifier	g		5635920	1					
ANR	5637152	AssignmentExpression	"g = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5635920	2		=			
ANR	5637153	Identifier	g		5635920	0					
ANR	5637154	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5635920	1					
ANR	5637155	UnaryOperator	*		5635920	0					
ANR	5637156	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5635920	1					
ANR	5637157	Callee	member_prt		5635920	0					
ANR	5637158	Identifier	member_prt		5635920	0					
ANR	5637159	ArgumentList	t1_glyph_space_coord		5635920	1					
ANR	5637160	Argument	t1_glyph_space_coord		5635920	0					
ANR	5637161	Identifier	t1_glyph_space_coord		5635920	0					
ANR	5637162	Argument	& self -> pole [ j ]		5635920	1					
ANR	5637163	UnaryOperationExpression	& self -> pole [ j ]		5635920	0					
ANR	5637164	UnaryOperator	&		5635920	0					
ANR	5637165	ArrayIndexing	self -> pole [ j ]		5635920	1					
ANR	5637166	PtrMemberAccess	self -> pole		5635920	0					
ANR	5637167	Identifier	self		5635920	0					
ANR	5637168	Identifier	pole		5635920	1					
ANR	5637169	Identifier	j		5635920	1					
ANR	5637170	Argument	offset_gc		5635920	2					
ANR	5637171	Identifier	offset_gc		5635920	0					
ANR	5637172	IfStatement	if ( min_g < g && g < max_g )		5635920	1					
ANR	5637173	Condition	min_g < g && g < max_g	2726:28:114869:114890	5635920	0	True				
ANR	5637174	AndExpression	min_g < g && g < max_g		5635920	0		&&			
ANR	5637175	RelationalExpression	min_g < g		5635920	0		<			
ANR	5637176	Identifier	min_g		5635920	0					
ANR	5637177	Identifier	g		5635920	1					
ANR	5637178	RelationalExpression	g < max_g		5635920	1		<			
ANR	5637179	Identifier	g		5635920	0					
ANR	5637180	Identifier	max_g		5635920	1					
ANR	5637181	CompoundStatement		153:28:8038:8082	5635920	1					
ANR	5637182	IdentifierDeclStatement	"t1_glyph_space_coord * a = member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac ) ;"	2727:28:114923:115008	5635920	0	True				
ANR	5637183	IdentifierDecl	"* a = member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac )"		5635920	0					
ANR	5637184	IdentifierDeclType	t1_glyph_space_coord *		5635920	0					
ANR	5637185	Identifier	a		5635920	1					
ANR	5637186	AssignmentExpression	"* a = member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac )"		5635920	2		=			
ANR	5637187	Identifier	a		5635920	0					
ANR	5637188	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac )"		5635920	1					
ANR	5637189	Callee	member_prt		5635920	0					
ANR	5637190	Identifier	member_prt		5635920	0					
ANR	5637191	ArgumentList	t1_glyph_space_coord		5635920	1					
ANR	5637192	Argument	t1_glyph_space_coord		5635920	0					
ANR	5637193	Identifier	t1_glyph_space_coord		5635920	0					
ANR	5637194	Argument	& self -> pole [ j ]		5635920	1					
ANR	5637195	UnaryOperationExpression	& self -> pole [ j ]		5635920	0					
ANR	5637196	UnaryOperator	&		5635920	0					
ANR	5637197	ArrayIndexing	self -> pole [ j ]		5635920	1					
ANR	5637198	PtrMemberAccess	self -> pole		5635920	0					
ANR	5637199	Identifier	self		5635920	0					
ANR	5637200	Identifier	pole		5635920	1					
ANR	5637201	Identifier	j		5635920	1					
ANR	5637202	Argument	offset_ac		5635920	2					
ANR	5637203	Identifier	offset_ac		5635920	0					
ANR	5637204	IdentifierDeclStatement	t1_glyph_space_coord x = g - min_g ;	2728:28:115038:115072	5635920	1	True				
ANR	5637205	IdentifierDecl	x = g - min_g		5635920	0					
ANR	5637206	IdentifierDeclType	t1_glyph_space_coord		5635920	0					
ANR	5637207	Identifier	x		5635920	1					
ANR	5637208	AssignmentExpression	x = g - min_g		5635920	2		=			
ANR	5637209	Identifier	x		5635920	0					
ANR	5637210	AdditiveExpression	g - min_g		5635920	1		-			
ANR	5637211	Identifier	g		5635920	0					
ANR	5637212	Identifier	min_g		5635920	1					
ANR	5637213	IdentifierDeclStatement	"t1_glyph_space_coord h = mul_shift ( x , u , 12 ) ;"	2729:28:115102:115146	5635920	2	True				
ANR	5637214	IdentifierDecl	"h = mul_shift ( x , u , 12 )"		5635920	0					
ANR	5637215	IdentifierDeclType	t1_glyph_space_coord		5635920	0					
ANR	5637216	Identifier	h		5635920	1					
ANR	5637217	AssignmentExpression	"h = mul_shift ( x , u , 12 )"		5635920	2		=			
ANR	5637218	Identifier	h		5635920	0					
ANR	5637219	CallExpression	"mul_shift ( x , u , 12 )"		5635920	1					
ANR	5637220	Callee	mul_shift		5635920	0					
ANR	5637221	Identifier	mul_shift		5635920	0					
ANR	5637222	ArgumentList	x		5635920	1					
ANR	5637223	Argument	x		5635920	0					
ANR	5637224	Identifier	x		5635920	0					
ANR	5637225	Argument	u		5635920	1					
ANR	5637226	Identifier	u		5635920	0					
ANR	5637227	Argument	12		5635920	2					
ANR	5637228	PrimaryExpression	12		5635920	0					
ANR	5637229	ExpressionStatement	* a = min_a + h	2732:28:115312:115326	5635920	3	True				
ANR	5637230	AssignmentExpression	* a = min_a + h		5635920	0		=			
ANR	5637231	UnaryOperationExpression	* a		5635920	0					
ANR	5637232	UnaryOperator	*		5635920	0					
ANR	5637233	Identifier	a		5635920	1					
ANR	5637234	AdditiveExpression	min_a + h		5635920	1		+			
ANR	5637235	Identifier	min_a		5635920	0					
ANR	5637236	Identifier	h		5635920	1					
ANR	5637237	ExpressionStatement	j = stop_pole	2736:16:115410:115423	5635920	10	True				
ANR	5637238	AssignmentExpression	j = stop_pole		5635920	0		=			
ANR	5637239	Identifier	j		5635920	0					
ANR	5637240	Identifier	stop_pole		5635920	1					
ANR	5637241	Condition	j != range_beg	2737:21:115446:115459	5635920	1	True				
ANR	5637242	EqualityExpression	j != range_beg		5635920	0		!=			
ANR	5637243	Identifier	j		5635920	0					
ANR	5637244	Identifier	range_beg		5635920	1					
ANR	5637245	ReturnType	static void		5635920	1					
ANR	5637246	Identifier	t1_hinter__interpolate_other_poles		5635920	2					
ANR	5637247	ParameterList	t1_hinter * self		5635920	3					
ANR	5637248	Parameter	t1_hinter * self	2576:47:107045:107060	5635920	0	True				
ANR	5637249	ParameterType	t1_hinter *		5635920	0					
ANR	5637250	Identifier	self		5635920	1					
ANR	5637251	CFGEntryNode	ENTRY		5635920		True				
ANR	5637252	CFGExitNode	EXIT		5635920		True				
ANR	5637253	InfiniteForNode	true		5635920		True				
ANR	5637254	Symbol	min_a		5635920						
ANR	5637255	Symbol	cut_l		5635920						
ANR	5637256	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac )"		5635920						
ANR	5637257	Symbol	moved		5635920						
ANR	5637258	Symbol	mul_shift		5635920						
ANR	5637259	Symbol	min_g		5635920						
ANR	5637260	Symbol	min_i		5635920						
ANR	5637261	Symbol	min_l		5635920						
ANR	5637262	Symbol	div		5635920						
ANR	5637263	Symbol	* member_prt		5635920						
ANR	5637264	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_wc )"		5635920						
ANR	5637265	Symbol	w0		5635920						
ANR	5637266	Symbol	member_prt		5635920						
ANR	5637267	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_ac )"		5635920						
ANR	5637268	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_bl )"		5635920						
ANR	5637269	Symbol	ranger_step_f		5635920						
ANR	5637270	Symbol	* self		5635920						
ANR	5637271	Symbol	g0		5635920						
ANR	5637272	Symbol	offset_gc		5635920						
ANR	5637273	Symbol	g1		5635920						
ANR	5637274	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_gc )"		5635920						
ANR	5637275	Symbol	self -> contour		5635920						
ANR	5637276	Symbol	t1_glyph_space_coord		5635920						
ANR	5637277	Symbol	range_beg		5635920						
ANR	5637278	Symbol	end_contour_pole		5635920						
ANR	5637279	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_bl )"		5635920						
ANR	5637280	Symbol	true		5635920						
ANR	5637281	Symbol	& self -> pole [ 0 ] . ay		5635920						
ANR	5637282	Symbol	p_gc		5635920						
ANR	5637283	Symbol	& self -> pole [ 0 ] . ax		5635920						
ANR	5637284	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_gc )"		5635920						
ANR	5637285	Symbol	* self -> pole		5635920						
ANR	5637286	Symbol	mul		5635920						
ANR	5637287	Symbol	& self -> pole [ 0 ] . aligned_x		5635920						
ANR	5637288	Symbol	offset_f		5635920						
ANR	5637289	Symbol	& self -> pole [ 0 ] . aligned_y		5635920						
ANR	5637290	Symbol	start_pole		5635920						
ANR	5637291	Symbol	p_bl		5635920						
ANR	5637292	Symbol	p_wc		5635920						
ANR	5637293	Symbol	offset_bl		5635920						
ANR	5637294	Symbol	p_f		5635920						
ANR	5637295	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		5635920						
ANR	5637296	Symbol	any_abs		5635920						
ANR	5637297	Symbol	self -> pole		5635920						
ANR	5637298	Symbol	offset_wc		5635920						
ANR	5637299	Symbol	beg_contour_pole		5635920						
ANR	5637300	Symbol	* self -> contour		5635920						
ANR	5637301	Symbol	q1		5635920						
ANR	5637302	Symbol	max_g		5635920						
ANR	5637303	Symbol	q2		5635920						
ANR	5637304	Symbol	a		5635920						
ANR	5637305	Symbol	& self -> pole [ 0 ] . boundary_length_y		5635920						
ANR	5637306	Symbol	max_i		5635920						
ANR	5637307	Symbol	m0		5635920						
ANR	5637308	Symbol	& self -> pole [ 0 ] . gy		5635920						
ANR	5637309	Symbol	self -> contour_count		5635920						
ANR	5637310	Symbol	m1		5635920						
ANR	5637311	Symbol	d		5635920						
ANR	5637312	Symbol	* * self		5635920						
ANR	5637313	Symbol	& self -> pole [ 0 ] . gx		5635920						
ANR	5637314	Symbol	p_ac		5635920						
ANR	5637315	Symbol	g		5635920						
ANR	5637316	Symbol	false		5635920						
ANR	5637317	Symbol	h		5635920						
ANR	5637318	Symbol	i		5635920						
ANR	5637319	Symbol	j		5635920						
ANR	5637320	Symbol	k		5635920						
ANR	5637321	Symbol	max_a		5635920						
ANR	5637322	Symbol	* a		5635920						
ANR	5637323	Symbol	& self -> pole [ 0 ] . boundary_length_x		5635920						
ANR	5637324	Symbol	offset_ac		5635920						
ANR	5637325	Symbol	l		5635920						
ANR	5637326	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_wc )"		5635920						
ANR	5637327	Symbol	a0		5635920						
ANR	5637328	Symbol	a1		5635920						
ANR	5637329	Symbol	max_w		5635920						
ANR	5637330	Symbol	stop_pole		5635920						
ANR	5637331	Symbol	* i		5635920						
ANR	5637332	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_ac )"		5635920						
ANR	5637333	Symbol	u		5635920						
ANR	5637334	Symbol	w		5635920						
ANR	5637335	Symbol	x		5635920						
ANR	5637336	Symbol	self		5635920						
ANR	5637337	Symbol	min_w		5635920						
ANR	5637338	Symbol	max_l		5635920						
ANR	5637339	Symbol	r1		5635920						
ANR	5637340	Function	t1_hinter__export	2742:0:115482:116880							
ANR	5637341	FunctionDef	t1_hinter__export (t1_hinter * self)		5637340	0					
ANR	5637342	CompoundStatement		2743:0:115529:116880	5637340	0					
ANR	5637343	IdentifierDeclStatement	"int i , j , code ;"	2743:3:115533:115547	5637340	0	True				
ANR	5637344	IdentifierDecl	i		5637340	0					
ANR	5637345	IdentifierDeclType	int		5637340	0					
ANR	5637346	Identifier	i		5637340	1					
ANR	5637347	IdentifierDecl	j		5637340	1					
ANR	5637348	IdentifierDeclType	int		5637340	0					
ANR	5637349	Identifier	j		5637340	1					
ANR	5637350	IdentifierDecl	code		5637340	2					
ANR	5637351	IdentifierDeclType	int		5637340	0					
ANR	5637352	Identifier	code		5637340	1					
ANR	5637353	IdentifierDeclStatement	"fixed fx , fy ;"	2744:4:115553:115565	5637340	1	True				
ANR	5637354	IdentifierDecl	fx		5637340	0					
ANR	5637355	IdentifierDeclType	fixed		5637340	0					
ANR	5637356	Identifier	fx		5637340	1					
ANR	5637357	IdentifierDecl	fy		5637340	1					
ANR	5637358	IdentifierDeclType	fixed		5637340	0					
ANR	5637359	Identifier	fy		5637340	1					
ANR	5637360	ForStatement	for ( i = 0 ; ; i ++ )		5637340	2					
ANR	5637361	ForInit	i = 0 ;	2746:8:115576:115581	5637340	0	True				
ANR	5637362	AssignmentExpression	i = 0		5637340	0		=			
ANR	5637363	Identifier	i		5637340	0					
ANR	5637364	PrimaryExpression	0		5637340	1					
ANR	5637365	PostIncDecOperationExpression	i ++	2746:17:115585:115587	5637340	1	True				
ANR	5637366	Identifier	i		5637340	0					
ANR	5637367	IncDec	++		5637340	1					
ANR	5637368	CompoundStatement		6:8:121:159	5637340	2					
ANR	5637369	IdentifierDeclStatement	"int end_pole , beg_pole = self -> contour [ i ] ;"	2747:8:115600:115641	5637340	0	True				
ANR	5637370	IdentifierDecl	end_pole		5637340	0					
ANR	5637371	IdentifierDeclType	int		5637340	0					
ANR	5637372	Identifier	end_pole		5637340	1					
ANR	5637373	IdentifierDecl	beg_pole = self -> contour [ i ]		5637340	1					
ANR	5637374	IdentifierDeclType	int		5637340	0					
ANR	5637375	Identifier	beg_pole		5637340	1					
ANR	5637376	AssignmentExpression	beg_pole = self -> contour [ i ]		5637340	2		=			
ANR	5637377	Identifier	beg_pole		5637340	0					
ANR	5637378	ArrayIndexing	self -> contour [ i ]		5637340	1					
ANR	5637379	PtrMemberAccess	self -> contour		5637340	0					
ANR	5637380	Identifier	self		5637340	0					
ANR	5637381	Identifier	contour		5637340	1					
ANR	5637382	Identifier	i		5637340	1					
ANR	5637383	IdentifierDeclStatement	t1_pole * pole = & self -> pole [ beg_pole ] ;	2748:8:115651:115689	5637340	1	True				
ANR	5637384	IdentifierDecl	* pole = & self -> pole [ beg_pole ]		5637340	0					
ANR	5637385	IdentifierDeclType	t1_pole *		5637340	0					
ANR	5637386	Identifier	pole		5637340	1					
ANR	5637387	AssignmentExpression	* pole = & self -> pole [ beg_pole ]		5637340	2		=			
ANR	5637388	Identifier	pole		5637340	0					
ANR	5637389	UnaryOperationExpression	& self -> pole [ beg_pole ]		5637340	1					
ANR	5637390	UnaryOperator	&		5637340	0					
ANR	5637391	ArrayIndexing	self -> pole [ beg_pole ]		5637340	1					
ANR	5637392	PtrMemberAccess	self -> pole		5637340	0					
ANR	5637393	Identifier	self		5637340	0					
ANR	5637394	Identifier	pole		5637340	1					
ANR	5637395	Identifier	beg_pole		5637340	1					
ANR	5637396	ExpressionStatement	"g2d ( self , pole -> ax , pole -> ay , & fx , & fy )"	2750:8:115700:115739	5637340	2	True				
ANR	5637397	CallExpression	"g2d ( self , pole -> ax , pole -> ay , & fx , & fy )"		5637340	0					
ANR	5637398	Callee	g2d		5637340	0					
ANR	5637399	Identifier	g2d		5637340	0					
ANR	5637400	ArgumentList	self		5637340	1					
ANR	5637401	Argument	self		5637340	0					
ANR	5637402	Identifier	self		5637340	0					
ANR	5637403	Argument	pole -> ax		5637340	1					
ANR	5637404	PtrMemberAccess	pole -> ax		5637340	0					
ANR	5637405	Identifier	pole		5637340	0					
ANR	5637406	Identifier	ax		5637340	1					
ANR	5637407	Argument	pole -> ay		5637340	2					
ANR	5637408	PtrMemberAccess	pole -> ay		5637340	0					
ANR	5637409	Identifier	pole		5637340	0					
ANR	5637410	Identifier	ay		5637340	1					
ANR	5637411	Argument	& fx		5637340	3					
ANR	5637412	UnaryOperationExpression	& fx		5637340	0					
ANR	5637413	UnaryOperator	&		5637340	0					
ANR	5637414	Identifier	fx		5637340	1					
ANR	5637415	Argument	& fy		5637340	4					
ANR	5637416	UnaryOperationExpression	& fy		5637340	0					
ANR	5637417	UnaryOperator	&		5637340	0					
ANR	5637418	Identifier	fy		5637340	1					
ANR	5637419	ExpressionStatement	"code = gx_path_add_point ( self -> output_path , fx , fy )"	2751:8:115749:115800	5637340	3	True				
ANR	5637420	AssignmentExpression	"code = gx_path_add_point ( self -> output_path , fx , fy )"		5637340	0		=			
ANR	5637421	Identifier	code		5637340	0					
ANR	5637422	CallExpression	"gx_path_add_point ( self -> output_path , fx , fy )"		5637340	1					
ANR	5637423	Callee	gx_path_add_point		5637340	0					
ANR	5637424	Identifier	gx_path_add_point		5637340	0					
ANR	5637425	ArgumentList	self -> output_path		5637340	1					
ANR	5637426	Argument	self -> output_path		5637340	0					
ANR	5637427	PtrMemberAccess	self -> output_path		5637340	0					
ANR	5637428	Identifier	self		5637340	0					
ANR	5637429	Identifier	output_path		5637340	1					
ANR	5637430	Argument	fx		5637340	1					
ANR	5637431	Identifier	fx		5637340	0					
ANR	5637432	Argument	fy		5637340	2					
ANR	5637433	Identifier	fy		5637340	0					
ANR	5637434	IfStatement	if ( code < 0 )		5637340	4					
ANR	5637435	Condition	code < 0	2752:12:115814:115821	5637340	0	True				
ANR	5637436	RelationalExpression	code < 0		5637340	0		<			
ANR	5637437	Identifier	code		5637340	0					
ANR	5637438	PrimaryExpression	0		5637340	1					
ANR	5637439	ReturnStatement	return code ;	2753:12:115836:115847	5637340	1	True				
ANR	5637440	Identifier	code		5637340	0					
ANR	5637441	IfStatement	if ( i >= self -> contour_count )		5637340	5					
ANR	5637442	Condition	i >= self -> contour_count	2754:12:115861:115884	5637340	0	True				
ANR	5637443	RelationalExpression	i >= self -> contour_count		5637340	0		>=			
ANR	5637444	Identifier	i		5637340	0					
ANR	5637445	PtrMemberAccess	self -> contour_count		5637340	1					
ANR	5637446	Identifier	self		5637340	0					
ANR	5637447	Identifier	contour_count		5637340	1					
ANR	5637448	BreakStatement	break ;	2755:12:115899:115904	5637340	1	True				
ANR	5637449	ExpressionStatement	end_pole = self -> contour [ i + 1 ] - 2	2756:8:115914:115949	5637340	6	True				
ANR	5637450	AssignmentExpression	end_pole = self -> contour [ i + 1 ] - 2		5637340	0		=			
ANR	5637451	Identifier	end_pole		5637340	0					
ANR	5637452	AdditiveExpression	self -> contour [ i + 1 ] - 2		5637340	1		-			
ANR	5637453	ArrayIndexing	self -> contour [ i + 1 ]		5637340	0					
ANR	5637454	PtrMemberAccess	self -> contour		5637340	0					
ANR	5637455	Identifier	self		5637340	0					
ANR	5637456	Identifier	contour		5637340	1					
ANR	5637457	AdditiveExpression	i + 1		5637340	1		+			
ANR	5637458	Identifier	i		5637340	0					
ANR	5637459	PrimaryExpression	1		5637340	1					
ANR	5637460	PrimaryExpression	2		5637340	1					
ANR	5637461	ForStatement	for ( j = beg_pole + 1 ; j <= end_pole ; j ++ )		5637340	7					
ANR	5637462	ForInit	j = beg_pole + 1 ;	2757:12:115963:115979	5637340	0	True				
ANR	5637463	AssignmentExpression	j = beg_pole + 1		5637340	0		=			
ANR	5637464	Identifier	j		5637340	0					
ANR	5637465	AdditiveExpression	beg_pole + 1		5637340	1		+			
ANR	5637466	Identifier	beg_pole		5637340	0					
ANR	5637467	PrimaryExpression	1		5637340	1					
ANR	5637468	Condition	j <= end_pole	2757:30:115981:115993	5637340	1	True				
ANR	5637469	RelationalExpression	j <= end_pole		5637340	0		<=			
ANR	5637470	Identifier	j		5637340	0					
ANR	5637471	Identifier	end_pole		5637340	1					
ANR	5637472	PostIncDecOperationExpression	j ++	2757:45:115996:115998	5637340	2	True				
ANR	5637473	Identifier	j		5637340	0					
ANR	5637474	IncDec	++		5637340	1					
ANR	5637475	CompoundStatement		15:50:471:471	5637340	3					
ANR	5637476	ExpressionStatement	pole = & self -> pole [ j ]	2758:12:116015:116037	5637340	0	True				
ANR	5637477	AssignmentExpression	pole = & self -> pole [ j ]		5637340	0		=			
ANR	5637478	Identifier	pole		5637340	0					
ANR	5637479	UnaryOperationExpression	& self -> pole [ j ]		5637340	1					
ANR	5637480	UnaryOperator	&		5637340	0					
ANR	5637481	ArrayIndexing	self -> pole [ j ]		5637340	1					
ANR	5637482	PtrMemberAccess	self -> pole		5637340	0					
ANR	5637483	Identifier	self		5637340	0					
ANR	5637484	Identifier	pole		5637340	1					
ANR	5637485	Identifier	j		5637340	1					
ANR	5637486	ExpressionStatement	"g2d ( self , pole -> ax , pole -> ay , & fx , & fy )"	2759:12:116051:116090	5637340	1	True				
ANR	5637487	CallExpression	"g2d ( self , pole -> ax , pole -> ay , & fx , & fy )"		5637340	0					
ANR	5637488	Callee	g2d		5637340	0					
ANR	5637489	Identifier	g2d		5637340	0					
ANR	5637490	ArgumentList	self		5637340	1					
ANR	5637491	Argument	self		5637340	0					
ANR	5637492	Identifier	self		5637340	0					
ANR	5637493	Argument	pole -> ax		5637340	1					
ANR	5637494	PtrMemberAccess	pole -> ax		5637340	0					
ANR	5637495	Identifier	pole		5637340	0					
ANR	5637496	Identifier	ax		5637340	1					
ANR	5637497	Argument	pole -> ay		5637340	2					
ANR	5637498	PtrMemberAccess	pole -> ay		5637340	0					
ANR	5637499	Identifier	pole		5637340	0					
ANR	5637500	Identifier	ay		5637340	1					
ANR	5637501	Argument	& fx		5637340	3					
ANR	5637502	UnaryOperationExpression	& fx		5637340	0					
ANR	5637503	UnaryOperator	&		5637340	0					
ANR	5637504	Identifier	fx		5637340	1					
ANR	5637505	Argument	& fy		5637340	4					
ANR	5637506	UnaryOperationExpression	& fy		5637340	0					
ANR	5637507	UnaryOperator	&		5637340	0					
ANR	5637508	Identifier	fy		5637340	1					
ANR	5637509	IfStatement	if ( pole -> type == oncurve )		5637340	2					
ANR	5637510	Condition	pole -> type == oncurve	2760:16:116108:116128	5637340	0	True				
ANR	5637511	EqualityExpression	pole -> type == oncurve		5637340	0		==			
ANR	5637512	PtrMemberAccess	pole -> type		5637340	0					
ANR	5637513	Identifier	pole		5637340	0					
ANR	5637514	Identifier	type		5637340	1					
ANR	5637515	Identifier	oncurve		5637340	1					
ANR	5637516	CompoundStatement		18:39:601:601	5637340	1					
ANR	5637517	ExpressionStatement	"code = gx_path_add_line ( self -> output_path , fx , fy )"	2761:16:116149:116199	5637340	0	True				
ANR	5637518	AssignmentExpression	"code = gx_path_add_line ( self -> output_path , fx , fy )"		5637340	0		=			
ANR	5637519	Identifier	code		5637340	0					
ANR	5637520	CallExpression	"gx_path_add_line ( self -> output_path , fx , fy )"		5637340	1					
ANR	5637521	Callee	gx_path_add_line		5637340	0					
ANR	5637522	Identifier	gx_path_add_line		5637340	0					
ANR	5637523	ArgumentList	self -> output_path		5637340	1					
ANR	5637524	Argument	self -> output_path		5637340	0					
ANR	5637525	PtrMemberAccess	self -> output_path		5637340	0					
ANR	5637526	Identifier	self		5637340	0					
ANR	5637527	Identifier	output_path		5637340	1					
ANR	5637528	Argument	fx		5637340	1					
ANR	5637529	Identifier	fx		5637340	0					
ANR	5637530	Argument	fy		5637340	2					
ANR	5637531	Identifier	fy		5637340	0					
ANR	5637532	IfStatement	if ( code < 0 )		5637340	1					
ANR	5637533	Condition	code < 0	2762:20:116221:116228	5637340	0	True				
ANR	5637534	RelationalExpression	code < 0		5637340	0		<			
ANR	5637535	Identifier	code		5637340	0					
ANR	5637536	PrimaryExpression	0		5637340	1					
ANR	5637537	ReturnStatement	return code ;	2763:20:116251:116262	5637340	1	True				
ANR	5637538	Identifier	code		5637340	0					
ANR	5637539	ElseStatement	else		5637340	0					
ANR	5637540	CompoundStatement		24:16:847:871	5637340	0					
ANR	5637541	IdentifierDeclStatement	"int j1 = j + 1 , j2 = ( j + 2 > end_pole ? beg_pole : j + 2 ) ;"	2765:16:116301:116359	5637340	0	True				
ANR	5637542	IdentifierDecl	j1 = j + 1		5637340	0					
ANR	5637543	IdentifierDeclType	int		5637340	0					
ANR	5637544	Identifier	j1		5637340	1					
ANR	5637545	AssignmentExpression	j1 = j + 1		5637340	2		=			
ANR	5637546	Identifier	j1		5637340	0					
ANR	5637547	AdditiveExpression	j + 1		5637340	1		+			
ANR	5637548	Identifier	j		5637340	0					
ANR	5637549	PrimaryExpression	1		5637340	1					
ANR	5637550	IdentifierDecl	j2 = ( j + 2 > end_pole ? beg_pole : j + 2 )		5637340	1					
ANR	5637551	IdentifierDeclType	int		5637340	0					
ANR	5637552	Identifier	j2		5637340	1					
ANR	5637553	AssignmentExpression	j2 = ( j + 2 > end_pole ? beg_pole : j + 2 )		5637340	2		=			
ANR	5637554	Identifier	j2		5637340	0					
ANR	5637555	ConditionalExpression	j + 2 > end_pole ? beg_pole : j + 2		5637340	1					
ANR	5637556	Condition	j + 2 > end_pole		5637340	0					
ANR	5637557	RelationalExpression	j + 2 > end_pole		5637340	0		>			
ANR	5637558	AdditiveExpression	j + 2		5637340	0		+			
ANR	5637559	Identifier	j		5637340	0					
ANR	5637560	PrimaryExpression	2		5637340	1					
ANR	5637561	Identifier	end_pole		5637340	1					
ANR	5637562	Identifier	beg_pole		5637340	1					
ANR	5637563	AdditiveExpression	j + 2		5637340	2		+			
ANR	5637564	Identifier	j		5637340	0					
ANR	5637565	PrimaryExpression	2		5637340	1					
ANR	5637566	IdentifierDeclStatement	"fixed fx1 , fy1 , fx2 , fy2 ;"	2766:16:116377:116401	5637340	1	True				
ANR	5637567	IdentifierDecl	fx1		5637340	0					
ANR	5637568	IdentifierDeclType	fixed		5637340	0					
ANR	5637569	Identifier	fx1		5637340	1					
ANR	5637570	IdentifierDecl	fy1		5637340	1					
ANR	5637571	IdentifierDeclType	fixed		5637340	0					
ANR	5637572	Identifier	fy1		5637340	1					
ANR	5637573	IdentifierDecl	fx2		5637340	2					
ANR	5637574	IdentifierDeclType	fixed		5637340	0					
ANR	5637575	Identifier	fx2		5637340	1					
ANR	5637576	IdentifierDecl	fy2		5637340	3					
ANR	5637577	IdentifierDeclType	fixed		5637340	0					
ANR	5637578	Identifier	fy2		5637340	1					
ANR	5637579	ExpressionStatement	"g2d ( self , self -> pole [ j1 ] . ax , self -> pole [ j1 ] . ay , & fx1 , & fy1 )"	2768:16:116420:116479	5637340	2	True				
ANR	5637580	CallExpression	"g2d ( self , self -> pole [ j1 ] . ax , self -> pole [ j1 ] . ay , & fx1 , & fy1 )"		5637340	0					
ANR	5637581	Callee	g2d		5637340	0					
ANR	5637582	Identifier	g2d		5637340	0					
ANR	5637583	ArgumentList	self		5637340	1					
ANR	5637584	Argument	self		5637340	0					
ANR	5637585	Identifier	self		5637340	0					
ANR	5637586	Argument	self -> pole [ j1 ] . ax		5637340	1					
ANR	5637587	MemberAccess	self -> pole [ j1 ] . ax		5637340	0					
ANR	5637588	ArrayIndexing	self -> pole [ j1 ]		5637340	0					
ANR	5637589	PtrMemberAccess	self -> pole		5637340	0					
ANR	5637590	Identifier	self		5637340	0					
ANR	5637591	Identifier	pole		5637340	1					
ANR	5637592	Identifier	j1		5637340	1					
ANR	5637593	Identifier	ax		5637340	1					
ANR	5637594	Argument	self -> pole [ j1 ] . ay		5637340	2					
ANR	5637595	MemberAccess	self -> pole [ j1 ] . ay		5637340	0					
ANR	5637596	ArrayIndexing	self -> pole [ j1 ]		5637340	0					
ANR	5637597	PtrMemberAccess	self -> pole		5637340	0					
ANR	5637598	Identifier	self		5637340	0					
ANR	5637599	Identifier	pole		5637340	1					
ANR	5637600	Identifier	j1		5637340	1					
ANR	5637601	Identifier	ay		5637340	1					
ANR	5637602	Argument	& fx1		5637340	3					
ANR	5637603	UnaryOperationExpression	& fx1		5637340	0					
ANR	5637604	UnaryOperator	&		5637340	0					
ANR	5637605	Identifier	fx1		5637340	1					
ANR	5637606	Argument	& fy1		5637340	4					
ANR	5637607	UnaryOperationExpression	& fy1		5637340	0					
ANR	5637608	UnaryOperator	&		5637340	0					
ANR	5637609	Identifier	fy1		5637340	1					
ANR	5637610	ExpressionStatement	"g2d ( self , self -> pole [ j2 ] . ax , self -> pole [ j2 ] . ay , & fx2 , & fy2 )"	2769:16:116497:116556	5637340	3	True				
ANR	5637611	CallExpression	"g2d ( self , self -> pole [ j2 ] . ax , self -> pole [ j2 ] . ay , & fx2 , & fy2 )"		5637340	0					
ANR	5637612	Callee	g2d		5637340	0					
ANR	5637613	Identifier	g2d		5637340	0					
ANR	5637614	ArgumentList	self		5637340	1					
ANR	5637615	Argument	self		5637340	0					
ANR	5637616	Identifier	self		5637340	0					
ANR	5637617	Argument	self -> pole [ j2 ] . ax		5637340	1					
ANR	5637618	MemberAccess	self -> pole [ j2 ] . ax		5637340	0					
ANR	5637619	ArrayIndexing	self -> pole [ j2 ]		5637340	0					
ANR	5637620	PtrMemberAccess	self -> pole		5637340	0					
ANR	5637621	Identifier	self		5637340	0					
ANR	5637622	Identifier	pole		5637340	1					
ANR	5637623	Identifier	j2		5637340	1					
ANR	5637624	Identifier	ax		5637340	1					
ANR	5637625	Argument	self -> pole [ j2 ] . ay		5637340	2					
ANR	5637626	MemberAccess	self -> pole [ j2 ] . ay		5637340	0					
ANR	5637627	ArrayIndexing	self -> pole [ j2 ]		5637340	0					
ANR	5637628	PtrMemberAccess	self -> pole		5637340	0					
ANR	5637629	Identifier	self		5637340	0					
ANR	5637630	Identifier	pole		5637340	1					
ANR	5637631	Identifier	j2		5637340	1					
ANR	5637632	Identifier	ay		5637340	1					
ANR	5637633	Argument	& fx2		5637340	3					
ANR	5637634	UnaryOperationExpression	& fx2		5637340	0					
ANR	5637635	UnaryOperator	&		5637340	0					
ANR	5637636	Identifier	fx2		5637340	1					
ANR	5637637	Argument	& fy2		5637340	4					
ANR	5637638	UnaryOperationExpression	& fy2		5637340	0					
ANR	5637639	UnaryOperator	&		5637340	0					
ANR	5637640	Identifier	fy2		5637340	1					
ANR	5637641	ExpressionStatement	"code = gx_path_add_curve ( self -> output_path , fx , fy , fx1 , fy1 , fx2 , fy2 )"	2770:16:116574:116645	5637340	4	True				
ANR	5637642	AssignmentExpression	"code = gx_path_add_curve ( self -> output_path , fx , fy , fx1 , fy1 , fx2 , fy2 )"		5637340	0		=			
ANR	5637643	Identifier	code		5637340	0					
ANR	5637644	CallExpression	"gx_path_add_curve ( self -> output_path , fx , fy , fx1 , fy1 , fx2 , fy2 )"		5637340	1					
ANR	5637645	Callee	gx_path_add_curve		5637340	0					
ANR	5637646	Identifier	gx_path_add_curve		5637340	0					
ANR	5637647	ArgumentList	self -> output_path		5637340	1					
ANR	5637648	Argument	self -> output_path		5637340	0					
ANR	5637649	PtrMemberAccess	self -> output_path		5637340	0					
ANR	5637650	Identifier	self		5637340	0					
ANR	5637651	Identifier	output_path		5637340	1					
ANR	5637652	Argument	fx		5637340	1					
ANR	5637653	Identifier	fx		5637340	0					
ANR	5637654	Argument	fy		5637340	2					
ANR	5637655	Identifier	fy		5637340	0					
ANR	5637656	Argument	fx1		5637340	3					
ANR	5637657	Identifier	fx1		5637340	0					
ANR	5637658	Argument	fy1		5637340	4					
ANR	5637659	Identifier	fy1		5637340	0					
ANR	5637660	Argument	fx2		5637340	5					
ANR	5637661	Identifier	fx2		5637340	0					
ANR	5637662	Argument	fy2		5637340	6					
ANR	5637663	Identifier	fy2		5637340	0					
ANR	5637664	IfStatement	if ( code < 0 )		5637340	5					
ANR	5637665	Condition	code < 0	2771:20:116667:116674	5637340	0	True				
ANR	5637666	RelationalExpression	code < 0		5637340	0		<			
ANR	5637667	Identifier	code		5637340	0					
ANR	5637668	PrimaryExpression	0		5637340	1					
ANR	5637669	ReturnStatement	return code ;	2772:20:116697:116708	5637340	1	True				
ANR	5637670	Identifier	code		5637340	0					
ANR	5637671	ExpressionStatement	j += 2	2773:16:116726:116730	5637340	6	True				
ANR	5637672	AssignmentExpression	j += 2		5637340	0		+=			
ANR	5637673	Identifier	j		5637340	0					
ANR	5637674	PrimaryExpression	2		5637340	1					
ANR	5637675	ExpressionStatement	code = gx_path_close_subpath ( self -> output_path )	2776:8:116764:116811	5637340	8	True				
ANR	5637676	AssignmentExpression	code = gx_path_close_subpath ( self -> output_path )		5637340	0		=			
ANR	5637677	Identifier	code		5637340	0					
ANR	5637678	CallExpression	gx_path_close_subpath ( self -> output_path )		5637340	1					
ANR	5637679	Callee	gx_path_close_subpath		5637340	0					
ANR	5637680	Identifier	gx_path_close_subpath		5637340	0					
ANR	5637681	ArgumentList	self -> output_path		5637340	1					
ANR	5637682	Argument	self -> output_path		5637340	0					
ANR	5637683	PtrMemberAccess	self -> output_path		5637340	0					
ANR	5637684	Identifier	self		5637340	0					
ANR	5637685	Identifier	output_path		5637340	1					
ANR	5637686	IfStatement	if ( code < 0 )		5637340	9					
ANR	5637687	Condition	code < 0	2777:12:116825:116832	5637340	0	True				
ANR	5637688	RelationalExpression	code < 0		5637340	0		<			
ANR	5637689	Identifier	code		5637340	0					
ANR	5637690	PrimaryExpression	0		5637340	1					
ANR	5637691	ReturnStatement	return code ;	2778:12:116847:116858	5637340	1	True				
ANR	5637692	Identifier	code		5637340	0					
ANR	5637693	ReturnStatement	return 0 ;	2780:4:116870:116878	5637340	3	True				
ANR	5637694	PrimaryExpression	0		5637340	0					
ANR	5637695	ReturnType	static int		5637340	1					
ANR	5637696	Identifier	t1_hinter__export		5637340	2					
ANR	5637697	ParameterList	t1_hinter * self		5637340	3					
ANR	5637698	Parameter	t1_hinter * self	2742:29:115511:115526	5637340	0	True				
ANR	5637699	ParameterType	t1_hinter *		5637340	0					
ANR	5637700	Identifier	self		5637340	1					
ANR	5637701	CFGEntryNode	ENTRY		5637340		True				
ANR	5637702	CFGExitNode	EXIT		5637340		True				
ANR	5637703	InfiniteForNode	true		5637340		True				
ANR	5637704	Symbol	& fx2		5637340						
ANR	5637705	Symbol	oncurve		5637340						
ANR	5637706	Symbol	& fx1		5637340						
ANR	5637707	Symbol	code		5637340						
ANR	5637708	Symbol	end_pole		5637340						
ANR	5637709	Symbol	* self -> pole		5637340						
ANR	5637710	Symbol	j1		5637340						
ANR	5637711	Symbol	j2		5637340						
ANR	5637712	Symbol	pole		5637340						
ANR	5637713	Symbol	pole -> ay		5637340						
ANR	5637714	Symbol	* pole		5637340						
ANR	5637715	Symbol	pole -> ax		5637340						
ANR	5637716	Symbol	gx_path_close_subpath		5637340						
ANR	5637717	Symbol	gx_path_add_curve		5637340						
ANR	5637718	Symbol	fx		5637340						
ANR	5637719	Symbol	self -> pole [ j1 ] . ay		5637340						
ANR	5637720	Symbol	fy		5637340						
ANR	5637721	Symbol	self -> pole [ j2 ] . ay		5637340						
ANR	5637722	Symbol	self -> pole [ j1 ] . ax		5637340						
ANR	5637723	Symbol	self -> pole [ j2 ] . ax		5637340						
ANR	5637724	Symbol	self -> pole		5637340						
ANR	5637725	Symbol	& fy		5637340						
ANR	5637726	Symbol	self -> output_path		5637340						
ANR	5637727	Symbol	& fx		5637340						
ANR	5637728	Symbol	fx1		5637340						
ANR	5637729	Symbol	* self -> contour		5637340						
ANR	5637730	Symbol	pole -> type		5637340						
ANR	5637731	Symbol	fx2		5637340						
ANR	5637732	Symbol	& fy2		5637340						
ANR	5637733	Symbol	& fy1		5637340						
ANR	5637734	Symbol	self -> contour_count		5637340						
ANR	5637735	Symbol	* * self		5637340						
ANR	5637736	Symbol	* self		5637340						
ANR	5637737	Symbol	beg_pole		5637340						
ANR	5637738	Symbol	i		5637340						
ANR	5637739	Symbol	j		5637340						
ANR	5637740	Symbol	* j2		5637340						
ANR	5637741	Symbol	gx_path_add_point		5637340						
ANR	5637742	Symbol	* j1		5637340						
ANR	5637743	Symbol	self -> contour		5637340						
ANR	5637744	Symbol	* i		5637340						
ANR	5637745	Symbol	gx_path_add_line		5637340						
ANR	5637746	Symbol	self		5637340						
ANR	5637747	Symbol	fy2		5637340						
ANR	5637748	Symbol	fy1		5637340						
ANR	5637749	Function	t1_hinter__add_trailing_moveto	2783:0:116883:117801							
ANR	5637750	FunctionDef	t1_hinter__add_trailing_moveto (t1_hinter * self)		5637749	0					
ANR	5637751	CompoundStatement		2784:0:116943:117801	5637749	0					
ANR	5637752	IdentifierDeclStatement	"t1_glyph_space_coord gx = self -> width_gx , gy = self -> width_gy ;"	2784:3:116947:117008	5637749	0	True				
ANR	5637753	IdentifierDecl	gx = self -> width_gx		5637749	0					
ANR	5637754	IdentifierDeclType	t1_glyph_space_coord		5637749	0					
ANR	5637755	Identifier	gx		5637749	1					
ANR	5637756	AssignmentExpression	gx = self -> width_gx		5637749	2		=			
ANR	5637757	Identifier	gx		5637749	0					
ANR	5637758	PtrMemberAccess	self -> width_gx		5637749	1					
ANR	5637759	Identifier	self		5637749	0					
ANR	5637760	Identifier	width_gx		5637749	1					
ANR	5637761	IdentifierDecl	gy = self -> width_gy		5637749	1					
ANR	5637762	IdentifierDeclType	t1_glyph_space_coord		5637749	0					
ANR	5637763	Identifier	gy		5637749	1					
ANR	5637764	AssignmentExpression	gy = self -> width_gy		5637749	2		=			
ANR	5637765	Identifier	gy		5637749	0					
ANR	5637766	PtrMemberAccess	self -> width_gy		5637749	1					
ANR	5637767	Identifier	self		5637749	0					
ANR	5637768	Identifier	width_gy		5637749	1					
ANR	5637769	Statement	1.	2787:9:117073:117074	5637749	1	True				
ANR	5637770	Statement	With	2787:12:117076:117079	5637749	2	True				
ANR	5637771	Statement	TextAlphaBits	2787:17:117081:117093	5637749	3	True				
ANR	5637772	Statement	=	2787:30:117094:117094	5637749	4	True				
ANR	5637773	Statement	1	2787:31:117095:117095	5637749	5	True				
ANR	5637774	Statement	","	2787:32:117096:117096	5637749	6	True				
ANR	5637775	Statement	AlignToPixels	2787:34:117098:117110	5637749	7	True				
ANR	5637776	Statement	must	2787:48:117112:117115	5637749	8	True				
ANR	5637777	Statement	have	2787:53:117117:117120	5637749	9	True				
ANR	5637778	Statement	no	2787:58:117122:117123	5637749	10	True				
ANR	5637779	Statement	effect	2787:61:117125:117130	5637749	11	True				
ANR	5637780	Statement	.	2787:67:117131:117131	5637749	12	True				
ANR	5637781	Statement	2.	2788:9:117142:117143	5637749	13	True				
ANR	5637782	Statement	ashow	2788:12:117145:117149	5637749	14	True				
ANR	5637783	Statement	","	2788:17:117150:117150	5637749	15	True				
ANR	5637784	Statement	awidthshow	2788:19:117152:117161	5637749	16	True				
ANR	5637785	Statement	must	2788:30:117163:117166	5637749	17	True				
ANR	5637786	Statement	add	2788:35:117168:117170	5637749	18	True				
ANR	5637787	Statement	the	2788:39:117172:117174	5637749	19	True				
ANR	5637788	Statement	width	2788:43:117176:117180	5637749	20	True				
ANR	5637789	Statement	before	2788:49:117182:117187	5637749	21	True				
ANR	5637790	Statement	alignment	2788:56:117189:117197	5637749	22	True				
ANR	5637791	Statement	.	2788:65:117198:117198	5637749	23	True				
ANR	5637792	Statement	4.	2789:9:117209:117210	5637749	24	True				
ANR	5637793	Statement	In	2789:12:117212:117213	5637749	25	True				
ANR	5637794	Statement	the	2789:15:117215:117217	5637749	26	True				
ANR	5637795	Statement	PDF	2789:19:117219:117221	5637749	27	True				
ANR	5637796	Statement	interpreter	2789:23:117223:117233	5637749	28	True				
ANR	5637797	Statement	","	2789:34:117234:117234	5637749	29	True				
ANR	5637798	Statement	Tc	2789:36:117236:117237	5637749	30	True				
ANR	5637799	Statement	must	2789:39:117239:117242	5637749	31	True				
ANR	5637800	Statement	add	2789:44:117244:117246	5637749	32	True				
ANR	5637801	Statement	before	2789:48:117248:117253	5637749	33	True				
ANR	5637802	Statement	alignment	2789:55:117255:117263	5637749	34	True				
ANR	5637803	Statement	.	2789:64:117264:117264	5637749	35	True				
ANR	5637804	Statement	5.	2790:9:117275:117276	5637749	36	True				
ANR	5637805	Statement	Since	2790:12:117278:117282	5637749	37	True				
ANR	5637806	Statement	a	2790:18:117284:117284	5637749	38	True				
ANR	5637807	Statement	character	2790:20:117286:117294	5637749	39	True				
ANR	5637808	Statement	origin	2790:30:117296:117301	5637749	40	True				
ANR	5637809	Statement	is	2790:37:117303:117304	5637749	41	True				
ANR	5637810	Statement	aligned	2790:40:117306:117312	5637749	42	True				
ANR	5637811	Statement	","	2790:47:117313:117313	5637749	43	True				
ANR	5637812	Statement	rounding	2791:12:117327:117334	5637749	44	True				
ANR	5637813	Statement	its	2791:21:117336:117338	5637749	45	True				
ANR	5637814	Statement	width	2791:25:117340:117344	5637749	46	True				
ANR	5637815	Statement	doesn	2791:31:117346:117350	5637749	47	True				
ANR	5637816	Statement	t	2791:37:117352:117352	5637749	48	True				
ANR	5637817	Statement	affect	2791:39:117354:117359	5637749	49	True				
ANR	5637818	Statement	subsequent	2791:46:117361:117370	5637749	50	True				
ANR	5637819	Statement	characters	2791:57:117372:117381	5637749	51	True				
ANR	5637820	Statement	.	2791:67:117382:117382	5637749	52	True				
ANR	5637821	Statement	6.	2792:9:117393:117394	5637749	53	True				
ANR	5637822	Statement	When	2792:12:117396:117399	5637749	54	True				
ANR	5637823	Statement	the	2792:17:117401:117403	5637749	55	True				
ANR	5637824	Statement	character	2792:21:117405:117413	5637749	56	True				
ANR	5637825	Statement	size	2792:31:117415:117418	5637749	57	True				
ANR	5637826	Statement	is	2792:36:117420:117421	5637749	58	True				
ANR	5637827	Statement	smaller	2792:39:117423:117429	5637749	59	True				
ANR	5637828	Statement	than	2792:47:117431:117434	5637749	60	True				
ANR	5637829	Statement	half	2792:52:117436:117439	5637749	61	True				
ANR	5637830	Statement	pixel	2792:57:117441:117445	5637749	62	True				
ANR	5637831	Statement	width	2792:63:117447:117451	5637749	63	True				
ANR	5637832	Statement	","	2792:68:117452:117452	5637749	64	True				
ANR	5637833	Statement	glyph	2793:12:117466:117470	5637749	65	True				
ANR	5637834	Statement	widths	2793:18:117472:117477	5637749	66	True				
ANR	5637835	Statement	rounds	2793:25:117479:117484	5637749	67	True				
ANR	5637836	Statement	to	2793:32:117486:117487	5637749	68	True				
ANR	5637837	Statement	zero	2793:35:117489:117492	5637749	69	True				
ANR	5637838	Statement	","	2793:39:117493:117493	5637749	70	True				
ANR	5637839	Statement	causing	2793:41:117495:117501	5637749	71	True				
ANR	5637840	Statement	overlapped	2793:49:117503:117512	5637749	72	True				
ANR	5637841	Statement	glyphs	2793:60:117514:117519	5637749	73	True				
ANR	5637842	Statement	.	2793:66:117520:117520	5637749	74	True				
ANR	5637843	Statement	(	2794:12:117534:117534	5637749	75	True				
ANR	5637844	Statement	Bug	2794:13:117535:117537	5637749	76	True				
ANR	5637845	Statement	687719	2794:17:117539:117544	5637749	77	True				
ANR	5637846	Statement	"""PDFWRITE corrupts letter spacing/placement"""	2794:24:117546:117589	5637749	78	True				
ANR	5637847	Statement	)	2794:68:117590:117590	5637749	79	True				
ANR	5637848	Statement	.	2794:69:117591:117591	5637749	80	True				
ANR	5637849	Statement	*	2795:7:117600:117600	5637749	81	True				
ANR	5637850	Statement	/	2795:8:117601:117601	5637749	82	True				
ANR	5637851	IfStatement	if ( self -> align_to_pixels )		5637749	83					
ANR	5637852	Condition	self -> align_to_pixels	2796:8:117611:117631	5637749	0	True				
ANR	5637853	PtrMemberAccess	self -> align_to_pixels		5637749	0					
ANR	5637854	Identifier	self		5637749	0					
ANR	5637855	Identifier	align_to_pixels		5637749	1					
ANR	5637856	ExpressionStatement	"t1_hinter__align_to_grid ( self , self -> g2o_fraction , & gx , & gy , self -> align_to_pixels )"	2797:8:117642:117725	5637749	1	True				
ANR	5637857	CallExpression	"t1_hinter__align_to_grid ( self , self -> g2o_fraction , & gx , & gy , self -> align_to_pixels )"		5637749	0					
ANR	5637858	Callee	t1_hinter__align_to_grid		5637749	0					
ANR	5637859	Identifier	t1_hinter__align_to_grid		5637749	0					
ANR	5637860	ArgumentList	self		5637749	1					
ANR	5637861	Argument	self		5637749	0					
ANR	5637862	Identifier	self		5637749	0					
ANR	5637863	Argument	self -> g2o_fraction		5637749	1					
ANR	5637864	PtrMemberAccess	self -> g2o_fraction		5637749	0					
ANR	5637865	Identifier	self		5637749	0					
ANR	5637866	Identifier	g2o_fraction		5637749	1					
ANR	5637867	Argument	& gx		5637749	2					
ANR	5637868	UnaryOperationExpression	& gx		5637749	0					
ANR	5637869	UnaryOperator	&		5637749	0					
ANR	5637870	Identifier	gx		5637749	1					
ANR	5637871	Argument	& gy		5637749	3					
ANR	5637872	UnaryOperationExpression	& gy		5637749	0					
ANR	5637873	UnaryOperator	&		5637749	0					
ANR	5637874	Identifier	gy		5637749	1					
ANR	5637875	Argument	self -> align_to_pixels		5637749	4					
ANR	5637876	PtrMemberAccess	self -> align_to_pixels		5637749	0					
ANR	5637877	Identifier	self		5637749	0					
ANR	5637878	Identifier	align_to_pixels		5637749	1					
ANR	5637879	ReturnStatement	"return t1_hinter__rmoveto ( self , gx - self -> cx , gy - self -> cy ) ;"	2799:4:117738:117799	5637749	84	True				
ANR	5637880	CallExpression	"t1_hinter__rmoveto ( self , gx - self -> cx , gy - self -> cy )"		5637749	0					
ANR	5637881	Callee	t1_hinter__rmoveto		5637749	0					
ANR	5637882	Identifier	t1_hinter__rmoveto		5637749	0					
ANR	5637883	ArgumentList	self		5637749	1					
ANR	5637884	Argument	self		5637749	0					
ANR	5637885	Identifier	self		5637749	0					
ANR	5637886	Argument	gx - self -> cx		5637749	1					
ANR	5637887	AdditiveExpression	gx - self -> cx		5637749	0		-			
ANR	5637888	Identifier	gx		5637749	0					
ANR	5637889	PtrMemberAccess	self -> cx		5637749	1					
ANR	5637890	Identifier	self		5637749	0					
ANR	5637891	Identifier	cx		5637749	1					
ANR	5637892	Argument	gy - self -> cy		5637749	2					
ANR	5637893	AdditiveExpression	gy - self -> cy		5637749	0		-			
ANR	5637894	Identifier	gy		5637749	0					
ANR	5637895	PtrMemberAccess	self -> cy		5637749	1					
ANR	5637896	Identifier	self		5637749	0					
ANR	5637897	Identifier	cy		5637749	1					
ANR	5637898	ReturnType	static int		5637749	1					
ANR	5637899	Identifier	t1_hinter__add_trailing_moveto		5637749	2					
ANR	5637900	ParameterList	t1_hinter * self		5637749	3					
ANR	5637901	Parameter	t1_hinter * self	2783:42:116925:116940	5637749	0	True				
ANR	5637902	ParameterType	t1_hinter *		5637749	0					
ANR	5637903	Identifier	self		5637749	1					
ANR	5637904	CFGEntryNode	ENTRY		5637749		True				
ANR	5637905	CFGExitNode	EXIT		5637749		True				
ANR	5637906	Symbol	self -> g2o_fraction		5637749						
ANR	5637907	Symbol	* self		5637749						
ANR	5637908	Symbol	self -> width_gy		5637749						
ANR	5637909	Symbol	self -> width_gx		5637749						
ANR	5637910	Symbol	t1_hinter__rmoveto		5637749						
ANR	5637911	Symbol	gx		5637749						
ANR	5637912	Symbol	gy		5637749						
ANR	5637913	Symbol	self		5637749						
ANR	5637914	Symbol	& gx		5637749						
ANR	5637915	Symbol	self -> cx		5637749						
ANR	5637916	Symbol	self -> cy		5637749						
ANR	5637917	Symbol	& gy		5637749						
ANR	5637918	Symbol	self -> align_to_pixels		5637749						
ANR	5637919	Function	t1_hinter__endglyph	2802:0:117804:119155							
ANR	5637920	FunctionDef	t1_hinter__endglyph (t1_hinter * self)		5637919	0					
ANR	5637921	CompoundStatement		2803:0:117846:119155	5637919	0					
ANR	5637922	IdentifierDeclStatement	int code = 0 ;	2803:3:117850:117862	5637919	0	True				
ANR	5637923	IdentifierDecl	code = 0		5637919	0					
ANR	5637924	IdentifierDeclType	int		5637919	0					
ANR	5637925	Identifier	code		5637919	1					
ANR	5637926	AssignmentExpression	code = 0		5637919	2		=			
ANR	5637927	Identifier	code		5637919	0					
ANR	5637928	PrimaryExpression	0		5637919	1					
ANR	5637929	ExpressionStatement	code = t1_hinter__add_trailing_moveto ( self )	2805:4:117869:117912	5637919	1	True				
ANR	5637930	AssignmentExpression	code = t1_hinter__add_trailing_moveto ( self )		5637919	0		=			
ANR	5637931	Identifier	code		5637919	0					
ANR	5637932	CallExpression	t1_hinter__add_trailing_moveto ( self )		5637919	1					
ANR	5637933	Callee	t1_hinter__add_trailing_moveto		5637919	0					
ANR	5637934	Identifier	t1_hinter__add_trailing_moveto		5637919	0					
ANR	5637935	ArgumentList	self		5637919	1					
ANR	5637936	Argument	self		5637919	0					
ANR	5637937	Identifier	self		5637919	0					
ANR	5637938	IfStatement	if ( code < 0 )		5637919	2					
ANR	5637939	Condition	code < 0	2806:8:117922:117929	5637919	0	True				
ANR	5637940	RelationalExpression	code < 0		5637919	0		<			
ANR	5637941	Identifier	code		5637919	0					
ANR	5637942	PrimaryExpression	0		5637919	1					
ANR	5637943	GotoStatement	goto exit ;	2807:8:117940:117949	5637919	1	True				
ANR	5637944	Identifier	exit		5637919	0					
ANR	5637945	ExpressionStatement	code = t1_hinter__end_subglyph ( self )	2808:4:117955:117991	5637919	3	True				
ANR	5637946	AssignmentExpression	code = t1_hinter__end_subglyph ( self )		5637919	0		=			
ANR	5637947	Identifier	code		5637919	0					
ANR	5637948	CallExpression	t1_hinter__end_subglyph ( self )		5637919	1					
ANR	5637949	Callee	t1_hinter__end_subglyph		5637919	0					
ANR	5637950	Identifier	t1_hinter__end_subglyph		5637919	0					
ANR	5637951	ArgumentList	self		5637919	1					
ANR	5637952	Argument	self		5637919	0					
ANR	5637953	Identifier	self		5637919	0					
ANR	5637954	IfStatement	if ( code < 0 )		5637919	4					
ANR	5637955	Condition	code < 0	2809:8:118001:118008	5637919	0	True				
ANR	5637956	RelationalExpression	code < 0		5637919	0		<			
ANR	5637957	Identifier	code		5637919	0					
ANR	5637958	PrimaryExpression	0		5637919	1					
ANR	5637959	GotoStatement	goto exit ;	2810:8:118019:118028	5637919	1	True				
ANR	5637960	Identifier	exit		5637919	0					
ANR	5637961	ExpressionStatement	"t1_hinter__adjust_matrix_precision ( self , self -> orig_gx , self -> orig_gy )"	2811:4:118034:118104	5637919	5	True				
ANR	5637962	CallExpression	"t1_hinter__adjust_matrix_precision ( self , self -> orig_gx , self -> orig_gy )"		5637919	0					
ANR	5637963	Callee	t1_hinter__adjust_matrix_precision		5637919	0					
ANR	5637964	Identifier	t1_hinter__adjust_matrix_precision		5637919	0					
ANR	5637965	ArgumentList	self		5637919	1					
ANR	5637966	Argument	self		5637919	0					
ANR	5637967	Identifier	self		5637919	0					
ANR	5637968	Argument	self -> orig_gx		5637919	1					
ANR	5637969	PtrMemberAccess	self -> orig_gx		5637919	0					
ANR	5637970	Identifier	self		5637919	0					
ANR	5637971	Identifier	orig_gx		5637919	1					
ANR	5637972	Argument	self -> orig_gy		5637919	2					
ANR	5637973	PtrMemberAccess	self -> orig_gy		5637919	0					
ANR	5637974	Identifier	self		5637919	0					
ANR	5637975	Identifier	orig_gy		5637919	1					
ANR	5637976	ExpressionStatement	t1_hinter__compute_y_span ( self )	2812:4:118110:118141	5637919	6	True				
ANR	5637977	CallExpression	t1_hinter__compute_y_span ( self )		5637919	0					
ANR	5637978	Callee	t1_hinter__compute_y_span		5637919	0					
ANR	5637979	Identifier	t1_hinter__compute_y_span		5637919	0					
ANR	5637980	ArgumentList	self		5637919	1					
ANR	5637981	Argument	self		5637919	0					
ANR	5637982	Identifier	self		5637919	0					
ANR	5637983	ExpressionStatement	t1_hinter__simplify_representation ( self )	2813:4:118147:118187	5637919	7	True				
ANR	5637984	CallExpression	t1_hinter__simplify_representation ( self )		5637919	0					
ANR	5637985	Callee	t1_hinter__simplify_representation		5637919	0					
ANR	5637986	Identifier	t1_hinter__simplify_representation		5637919	0					
ANR	5637987	ArgumentList	self		5637919	1					
ANR	5637988	Argument	self		5637919	0					
ANR	5637989	Identifier	self		5637919	0					
ANR	5637990	IfStatement	if ( ! self -> disable_hinting && ( self -> grid_fit_x || self -> grid_fit_y ) )		5637919	8					
ANR	5637991	Condition	! self -> disable_hinting && ( self -> grid_fit_x || self -> grid_fit_y )	2814:8:118197:118260	5637919	0	True				
ANR	5637992	AndExpression	! self -> disable_hinting && ( self -> grid_fit_x || self -> grid_fit_y )		5637919	0		&&			
ANR	5637993	UnaryOperationExpression	! self -> disable_hinting		5637919	0					
ANR	5637994	UnaryOperator	!		5637919	0					
ANR	5637995	PtrMemberAccess	self -> disable_hinting		5637919	1					
ANR	5637996	Identifier	self		5637919	0					
ANR	5637997	Identifier	disable_hinting		5637919	1					
ANR	5637998	OrExpression	self -> grid_fit_x || self -> grid_fit_y		5637919	1		||			
ANR	5637999	PtrMemberAccess	self -> grid_fit_x		5637919	0					
ANR	5638000	Identifier	self		5637919	0					
ANR	5638001	Identifier	grid_fit_x		5637919	1					
ANR	5638002	PtrMemberAccess	self -> grid_fit_y		5637919	1					
ANR	5638003	Identifier	self		5637919	0					
ANR	5638004	Identifier	grid_fit_y		5637919	1					
ANR	5638005	CompoundStatement		12:74:416:416	5637919	1					
ANR	5638006	IfStatement	if ( self -> FontType == 1 )		5637919	0					
ANR	5638007	Condition	self -> FontType == 1	2815:12:118277:118295	5637919	0	True				
ANR	5638008	EqualityExpression	self -> FontType == 1		5637919	0		==			
ANR	5638009	PtrMemberAccess	self -> FontType		5637919	0					
ANR	5638010	Identifier	self		5637919	0					
ANR	5638011	Identifier	FontType		5637919	1					
ANR	5638012	PrimaryExpression	1		5637919	1					
ANR	5638013	ExpressionStatement	t1_hinter__compute_type1_stem_ranges ( self )	2816:12:118310:118352	5637919	1	True				
ANR	5638014	CallExpression	t1_hinter__compute_type1_stem_ranges ( self )		5637919	0					
ANR	5638015	Callee	t1_hinter__compute_type1_stem_ranges		5637919	0					
ANR	5638016	Identifier	t1_hinter__compute_type1_stem_ranges		5637919	0					
ANR	5638017	ArgumentList	self		5637919	1					
ANR	5638018	Argument	self		5637919	0					
ANR	5638019	Identifier	self		5637919	0					
ANR	5638020	ElseStatement	else		5637919	0					
ANR	5638021	ExpressionStatement	t1_hinter__compute_type2_stem_ranges ( self )	2818:12:118379:118421	5637919	0	True				
ANR	5638022	CallExpression	t1_hinter__compute_type2_stem_ranges ( self )		5637919	0					
ANR	5638023	Callee	t1_hinter__compute_type2_stem_ranges		5637919	0					
ANR	5638024	Identifier	t1_hinter__compute_type2_stem_ranges		5637919	0					
ANR	5638025	ArgumentList	self		5637919	1					
ANR	5638026	Argument	self		5637919	0					
ANR	5638027	Identifier	self		5637919	0					
ANR	5638028	ExpressionStatement	t1_hinter__mark_existing_stems ( self )	2819:8:118431:118467	5637919	1	True				
ANR	5638029	CallExpression	t1_hinter__mark_existing_stems ( self )		5637919	0					
ANR	5638030	Callee	t1_hinter__mark_existing_stems		5637919	0					
ANR	5638031	Identifier	t1_hinter__mark_existing_stems		5637919	0					
ANR	5638032	ArgumentList	self		5637919	1					
ANR	5638033	Argument	self		5637919	0					
ANR	5638034	Identifier	self		5637919	0					
ANR	5638035	ExpressionStatement	t1_hinter_compute_stem_snap_range ( self )	2820:8:118477:118516	5637919	2	True				
ANR	5638036	CallExpression	t1_hinter_compute_stem_snap_range ( self )		5637919	0					
ANR	5638037	Callee	t1_hinter_compute_stem_snap_range		5637919	0					
ANR	5638038	Identifier	t1_hinter_compute_stem_snap_range		5637919	0					
ANR	5638039	ArgumentList	self		5637919	1					
ANR	5638040	Argument	self		5637919	0					
ANR	5638041	Identifier	self		5637919	0					
ANR	5638042	ExpressionStatement	t1_hinter__align_stem_commands ( self )	2821:8:118526:118562	5637919	3	True				
ANR	5638043	CallExpression	t1_hinter__align_stem_commands ( self )		5637919	0					
ANR	5638044	Callee	t1_hinter__align_stem_commands		5637919	0					
ANR	5638045	Identifier	t1_hinter__align_stem_commands		5637919	0					
ANR	5638046	ArgumentList	self		5637919	1					
ANR	5638047	Argument	self		5637919	0					
ANR	5638048	Identifier	self		5637919	0					
ANR	5638049	ExpressionStatement	t1_hinter__unfix_opposite_to_common ( self )	2822:8:118572:118613	5637919	4	True				
ANR	5638050	CallExpression	t1_hinter__unfix_opposite_to_common ( self )		5637919	0					
ANR	5638051	Callee	t1_hinter__unfix_opposite_to_common		5637919	0					
ANR	5638052	Identifier	t1_hinter__unfix_opposite_to_common		5637919	0					
ANR	5638053	ArgumentList	self		5637919	1					
ANR	5638054	Argument	self		5637919	0					
ANR	5638055	Identifier	self		5637919	0					
ANR	5638056	ExpressionStatement	t1_hinter__compute_opposite_stem_coords ( self )	2823:8:118623:118668	5637919	5	True				
ANR	5638057	CallExpression	t1_hinter__compute_opposite_stem_coords ( self )		5637919	0					
ANR	5638058	Callee	t1_hinter__compute_opposite_stem_coords		5637919	0					
ANR	5638059	Identifier	t1_hinter__compute_opposite_stem_coords		5637919	0					
ANR	5638060	ArgumentList	self		5637919	1					
ANR	5638061	Argument	self		5637919	0					
ANR	5638062	Identifier	self		5637919	0					
ANR	5638063	ExpressionStatement	code = t1_hinter__align_stem_poles ( self )	2825:8:118739:118779	5637919	6	True				
ANR	5638064	AssignmentExpression	code = t1_hinter__align_stem_poles ( self )		5637919	0		=			
ANR	5638065	Identifier	code		5637919	0					
ANR	5638066	CallExpression	t1_hinter__align_stem_poles ( self )		5637919	1					
ANR	5638067	Callee	t1_hinter__align_stem_poles		5637919	0					
ANR	5638068	Identifier	t1_hinter__align_stem_poles		5637919	0					
ANR	5638069	ArgumentList	self		5637919	1					
ANR	5638070	Argument	self		5637919	0					
ANR	5638071	Identifier	self		5637919	0					
ANR	5638072	IfStatement	if ( code < 0 )		5637919	7					
ANR	5638073	Condition	code < 0	2826:12:118793:118800	5637919	0	True				
ANR	5638074	RelationalExpression	code < 0		5637919	0		<			
ANR	5638075	Identifier	code		5637919	0					
ANR	5638076	PrimaryExpression	0		5637919	1					
ANR	5638077	GotoStatement	goto exit ;	2827:12:118815:118824	5637919	1	True				
ANR	5638078	Identifier	exit		5637919	0					
ANR	5638079	ExpressionStatement	t1_hinter__process_dotsections ( self )	2828:8:118834:118870	5637919	8	True				
ANR	5638080	CallExpression	t1_hinter__process_dotsections ( self )		5637919	0					
ANR	5638081	Callee	t1_hinter__process_dotsections		5637919	0					
ANR	5638082	Identifier	t1_hinter__process_dotsections		5637919	0					
ANR	5638083	ArgumentList	self		5637919	1					
ANR	5638084	Argument	self		5637919	0					
ANR	5638085	Identifier	self		5637919	0					
ANR	5638086	ExpressionStatement	t1_hinter__interpolate_other_poles ( self )	2829:8:118880:118920	5637919	9	True				
ANR	5638087	CallExpression	t1_hinter__interpolate_other_poles ( self )		5637919	0					
ANR	5638088	Callee	t1_hinter__interpolate_other_poles		5637919	0					
ANR	5638089	Identifier	t1_hinter__interpolate_other_poles		5637919	0					
ANR	5638090	ArgumentList	self		5637919	1					
ANR	5638091	Argument	self		5637919	0					
ANR	5638092	Identifier	self		5637919	0					
ANR	5638093	IfStatement	if ( self -> pole_count )		5637919	9					
ANR	5638094	Condition	self -> pole_count	2831:8:118936:118951	5637919	0	True				
ANR	5638095	PtrMemberAccess	self -> pole_count		5637919	0					
ANR	5638096	Identifier	self		5637919	0					
ANR	5638097	Identifier	pole_count		5637919	1					
ANR	5638098	CompoundStatement		29:26:1107:1107	5637919	1					
ANR	5638099	IfStatement	if ( self -> fix_contour_sign )		5637919	0					
ANR	5638100	Condition	self -> fix_contour_sign	2832:12:118968:118989	5637919	0	True				
ANR	5638101	PtrMemberAccess	self -> fix_contour_sign		5637919	0					
ANR	5638102	Identifier	self		5637919	0					
ANR	5638103	Identifier	fix_contour_sign		5637919	1					
ANR	5638104	CompoundStatement		30:36:1145:1145	5637919	1					
ANR	5638105	ExpressionStatement	t1_hinter__fix_contour_signs ( self )	2833:12:119006:119040	5637919	0	True				
ANR	5638106	CallExpression	t1_hinter__fix_contour_signs ( self )		5637919	0					
ANR	5638107	Callee	t1_hinter__fix_contour_signs		5637919	0					
ANR	5638108	Identifier	t1_hinter__fix_contour_signs		5637919	0					
ANR	5638109	ArgumentList	self		5637919	1					
ANR	5638110	Argument	self		5637919	0					
ANR	5638111	Identifier	self		5637919	0					
ANR	5638112	ExpressionStatement	code = t1_hinter__export ( self )	2835:8:119060:119090	5637919	1	True				
ANR	5638113	AssignmentExpression	code = t1_hinter__export ( self )		5637919	0		=			
ANR	5638114	Identifier	code		5637919	0					
ANR	5638115	CallExpression	t1_hinter__export ( self )		5637919	1					
ANR	5638116	Callee	t1_hinter__export		5637919	0					
ANR	5638117	Identifier	t1_hinter__export		5637919	0					
ANR	5638118	ArgumentList	self		5637919	1					
ANR	5638119	Argument	self		5637919	0					
ANR	5638120	Identifier	self		5637919	0					
ANR	5638121	Label	exit :	2837:0:119098:119102	5637919	10	True				
ANR	5638122	Identifier	exit		5637919	0					
ANR	5638123	ExpressionStatement	t1_hinter__free_arrays ( self )	2838:4:119108:119136	5637919	11	True				
ANR	5638124	CallExpression	t1_hinter__free_arrays ( self )		5637919	0					
ANR	5638125	Callee	t1_hinter__free_arrays		5637919	0					
ANR	5638126	Identifier	t1_hinter__free_arrays		5637919	0					
ANR	5638127	ArgumentList	self		5637919	1					
ANR	5638128	Argument	self		5637919	0					
ANR	5638129	Identifier	self		5637919	0					
ANR	5638130	ReturnStatement	return code ;	2839:4:119142:119153	5637919	12	True				
ANR	5638131	Identifier	code		5637919	0					
ANR	5638132	ReturnType	int		5637919	1					
ANR	5638133	Identifier	t1_hinter__endglyph		5637919	2					
ANR	5638134	ParameterList	t1_hinter * self		5637919	3					
ANR	5638135	Parameter	t1_hinter * self	2802:24:117828:117843	5637919	0	True				
ANR	5638136	ParameterType	t1_hinter *		5637919	0					
ANR	5638137	Identifier	self		5637919	1					
ANR	5638138	CFGEntryNode	ENTRY		5637919		True				
ANR	5638139	CFGExitNode	EXIT		5637919		True				
ANR	5638140	Symbol	t1_hinter__align_stem_poles		5637919						
ANR	5638141	Symbol	code		5637919						
ANR	5638142	Symbol	self -> pole_count		5637919						
ANR	5638143	Symbol	* self		5637919						
ANR	5638144	Symbol	self -> FontType		5637919						
ANR	5638145	Symbol	self -> disable_hinting		5637919						
ANR	5638146	Symbol	self -> grid_fit_x		5637919						
ANR	5638147	Symbol	t1_hinter__add_trailing_moveto		5637919						
ANR	5638148	Symbol	t1_hinter__end_subglyph		5637919						
ANR	5638149	Symbol	self -> grid_fit_y		5637919						
ANR	5638150	Symbol	self -> fix_contour_sign		5637919						
ANR	5638151	Symbol	t1_hinter__export		5637919						
ANR	5638152	Symbol	self		5637919						
ANR	5638153	Symbol	self -> orig_gy		5637919						
ANR	5638154	Symbol	self -> orig_gx		5637919						
