command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8326259	File	data/converged/CVE-2018-16863_ghostpdl/pcsfont.c								
ANR	8326260	ClassDef	<unnamed>	50:8:1451:1551							
ANR	8326261	DeclStmt									
ANR	8326262	Decl									pcl_character_format
ANR	8326263	Function	pcl_delete_soft_font	61:0:1738:3026							
ANR	8326264	FunctionDef	"pcl_delete_soft_font (pcl_state_t * pcs , const byte * key , uint ksize , void * value)"		8326263	0					
ANR	8326265	CompoundStatement		64:0:1853:3026	8326263	0					
ANR	8326266	IfStatement	if ( value == NULL )		8326263	0					
ANR	8326267	Condition	value == NULL	65:8:1863:1875	8326263	0	True				
ANR	8326268	EqualityExpression	value == NULL		8326263	0		==			
ANR	8326269	Identifier	value		8326263	0					
ANR	8326270	Identifier	NULL		8326263	1					
ANR	8326271	CompoundStatement		2:23:24:24	8326263	1					
ANR	8326272	IfStatement	"if ( ! pl_dict_find_no_stack ( & pcs -> soft_fonts , key , ksize , & value ) )"		8326263	0					
ANR	8326273	Condition	"! pl_dict_find_no_stack ( & pcs -> soft_fonts , key , ksize , & value )"	66:12:1892:1951	8326263	0	True				
ANR	8326274	UnaryOperationExpression	"! pl_dict_find_no_stack ( & pcs -> soft_fonts , key , ksize , & value )"		8326263	0					
ANR	8326275	UnaryOperator	!		8326263	0					
ANR	8326276	CallExpression	"pl_dict_find_no_stack ( & pcs -> soft_fonts , key , ksize , & value )"		8326263	1					
ANR	8326277	Callee	pl_dict_find_no_stack		8326263	0					
ANR	8326278	Identifier	pl_dict_find_no_stack		8326263	0					
ANR	8326279	ArgumentList	& pcs -> soft_fonts		8326263	1					
ANR	8326280	Argument	& pcs -> soft_fonts		8326263	0					
ANR	8326281	UnaryOperationExpression	& pcs -> soft_fonts		8326263	0					
ANR	8326282	UnaryOperator	&		8326263	0					
ANR	8326283	PtrMemberAccess	pcs -> soft_fonts		8326263	1					
ANR	8326284	Identifier	pcs		8326263	0					
ANR	8326285	Identifier	soft_fonts		8326263	1					
ANR	8326286	Argument	key		8326263	1					
ANR	8326287	Identifier	key		8326263	0					
ANR	8326288	Argument	ksize		8326263	2					
ANR	8326289	Identifier	ksize		8326263	0					
ANR	8326290	Argument	& value		8326263	3					
ANR	8326291	UnaryOperationExpression	& value		8326263	0					
ANR	8326292	UnaryOperator	&		8326263	0					
ANR	8326293	Identifier	value		8326263	1					
ANR	8326294	ReturnStatement	return 0 ;	67:12:1966:1974	8326263	1	True				
ANR	8326295	PrimaryExpression	0		8326263	0					
ANR	8326296	CompoundStatement		7:8:179:219	8326263	1					
ANR	8326297	IdentifierDeclStatement	pl_font_t * plfontp = ( pl_font_t * ) value ;	70:8:2033:2073	8326263	0	True				
ANR	8326298	IdentifierDecl	* plfontp = ( pl_font_t * ) value		8326263	0					
ANR	8326299	IdentifierDeclType	pl_font_t *		8326263	0					
ANR	8326300	Identifier	plfontp		8326263	1					
ANR	8326301	AssignmentExpression	* plfontp = ( pl_font_t * ) value		8326263	2		=			
ANR	8326302	Identifier	plfontp		8326263	0					
ANR	8326303	CastExpression	( pl_font_t * ) value		8326263	1					
ANR	8326304	CastTarget	pl_font_t *		8326263	0					
ANR	8326305	Identifier	value		8326263	1					
ANR	8326306	IfStatement	if ( pcs -> font_selection [ 0 ] . font == plfontp )		8326263	1					
ANR	8326307	Condition	pcs -> font_selection [ 0 ] . font == plfontp	72:12:2088:2125	8326263	0	True				
ANR	8326308	EqualityExpression	pcs -> font_selection [ 0 ] . font == plfontp		8326263	0		==			
ANR	8326309	MemberAccess	pcs -> font_selection [ 0 ] . font		8326263	0					
ANR	8326310	ArrayIndexing	pcs -> font_selection [ 0 ]		8326263	0					
ANR	8326311	PtrMemberAccess	pcs -> font_selection		8326263	0					
ANR	8326312	Identifier	pcs		8326263	0					
ANR	8326313	Identifier	font_selection		8326263	1					
ANR	8326314	PrimaryExpression	0		8326263	1					
ANR	8326315	Identifier	font		8326263	1					
ANR	8326316	Identifier	plfontp		8326263	1					
ANR	8326317	ExpressionStatement	pcs -> font_selection [ 0 ] . font = 0	73:12:2140:2171	8326263	1	True				
ANR	8326318	AssignmentExpression	pcs -> font_selection [ 0 ] . font = 0		8326263	0		=			
ANR	8326319	MemberAccess	pcs -> font_selection [ 0 ] . font		8326263	0					
ANR	8326320	ArrayIndexing	pcs -> font_selection [ 0 ]		8326263	0					
ANR	8326321	PtrMemberAccess	pcs -> font_selection		8326263	0					
ANR	8326322	Identifier	pcs		8326263	0					
ANR	8326323	Identifier	font_selection		8326263	1					
ANR	8326324	PrimaryExpression	0		8326263	1					
ANR	8326325	Identifier	font		8326263	1					
ANR	8326326	PrimaryExpression	0		8326263	1					
ANR	8326327	IfStatement	if ( pcs -> font_selection [ 1 ] . font == plfontp )		8326263	2					
ANR	8326328	Condition	pcs -> font_selection [ 1 ] . font == plfontp	74:12:2185:2222	8326263	0	True				
ANR	8326329	EqualityExpression	pcs -> font_selection [ 1 ] . font == plfontp		8326263	0		==			
ANR	8326330	MemberAccess	pcs -> font_selection [ 1 ] . font		8326263	0					
ANR	8326331	ArrayIndexing	pcs -> font_selection [ 1 ]		8326263	0					
ANR	8326332	PtrMemberAccess	pcs -> font_selection		8326263	0					
ANR	8326333	Identifier	pcs		8326263	0					
ANR	8326334	Identifier	font_selection		8326263	1					
ANR	8326335	PrimaryExpression	1		8326263	1					
ANR	8326336	Identifier	font		8326263	1					
ANR	8326337	Identifier	plfontp		8326263	1					
ANR	8326338	ExpressionStatement	pcs -> font_selection [ 1 ] . font = 0	75:12:2237:2268	8326263	1	True				
ANR	8326339	AssignmentExpression	pcs -> font_selection [ 1 ] . font = 0		8326263	0		=			
ANR	8326340	MemberAccess	pcs -> font_selection [ 1 ] . font		8326263	0					
ANR	8326341	ArrayIndexing	pcs -> font_selection [ 1 ]		8326263	0					
ANR	8326342	PtrMemberAccess	pcs -> font_selection		8326263	0					
ANR	8326343	Identifier	pcs		8326263	0					
ANR	8326344	Identifier	font_selection		8326263	1					
ANR	8326345	PrimaryExpression	1		8326263	1					
ANR	8326346	Identifier	font		8326263	1					
ANR	8326347	PrimaryExpression	0		8326263	1					
ANR	8326348	IfStatement	if ( plfontp -> storage & pcds_permanent )		8326263	3					
ANR	8326349	Condition	plfontp -> storage & pcds_permanent	78:12:2372:2404	8326263	0	True				
ANR	8326350	BitAndExpression	plfontp -> storage & pcds_permanent		8326263	0		&			
ANR	8326351	PtrMemberAccess	plfontp -> storage		8326263	0					
ANR	8326352	Identifier	plfontp		8326263	0					
ANR	8326353	Identifier	storage		8326263	1					
ANR	8326354	Identifier	pcds_permanent		8326263	1					
ANR	8326355	IfStatement	"if ( pjl_proc_register_permanent_soft_font_deletion ( pcs -> pjls , plfontp -> params . pjl_font_number ) > 0 )"		8326263	1					
ANR	8326356	Condition	"pjl_proc_register_permanent_soft_font_deletion ( pcs -> pjls , plfontp -> params . pjl_font_number ) > 0"	79:16:2423:2723	8326263	0	True				
ANR	8326357	RelationalExpression	"pjl_proc_register_permanent_soft_font_deletion ( pcs -> pjls , plfontp -> params . pjl_font_number ) > 0"		8326263	0		>			
ANR	8326358	CallExpression	"pjl_proc_register_permanent_soft_font_deletion ( pcs -> pjls , plfontp -> params . pjl_font_number )"		8326263	0					
ANR	8326359	Callee	pjl_proc_register_permanent_soft_font_deletion		8326263	0					
ANR	8326360	Identifier	pjl_proc_register_permanent_soft_font_deletion		8326263	0					
ANR	8326361	ArgumentList	pcs -> pjls		8326263	1					
ANR	8326362	Argument	pcs -> pjls		8326263	0					
ANR	8326363	PtrMemberAccess	pcs -> pjls		8326263	0					
ANR	8326364	Identifier	pcs		8326263	0					
ANR	8326365	Identifier	pjls		8326263	1					
ANR	8326366	Argument	plfontp -> params . pjl_font_number		8326263	1					
ANR	8326367	MemberAccess	plfontp -> params . pjl_font_number		8326263	0					
ANR	8326368	PtrMemberAccess	plfontp -> params		8326263	0					
ANR	8326369	Identifier	plfontp		8326263	0					
ANR	8326370	Identifier	params		8326263	1					
ANR	8326371	Identifier	pjl_font_number		8326263	1					
ANR	8326372	PrimaryExpression	0		8326263	1					
ANR	8326373	CompoundStatement		21:16:890:938	8326263	1					
ANR	8326374	IdentifierDeclStatement	int code = pcl_set_current_font_environment ( pcs ) ;	84:16:2744:2792	8326263	0	True				
ANR	8326375	IdentifierDecl	code = pcl_set_current_font_environment ( pcs )		8326263	0					
ANR	8326376	IdentifierDeclType	int		8326263	0					
ANR	8326377	Identifier	code		8326263	1					
ANR	8326378	AssignmentExpression	code = pcl_set_current_font_environment ( pcs )		8326263	2		=			
ANR	8326379	Identifier	code		8326263	0					
ANR	8326380	CallExpression	pcl_set_current_font_environment ( pcs )		8326263	1					
ANR	8326381	Callee	pcl_set_current_font_environment		8326263	0					
ANR	8326382	Identifier	pcl_set_current_font_environment		8326263	0					
ANR	8326383	ArgumentList	pcs		8326263	1					
ANR	8326384	Argument	pcs		8326263	0					
ANR	8326385	Identifier	pcs		8326263	0					
ANR	8326386	IfStatement	if ( code < 0 )		8326263	1					
ANR	8326387	Condition	code < 0	86:20:2815:2822	8326263	0	True				
ANR	8326388	RelationalExpression	code < 0		8326263	0		<			
ANR	8326389	Identifier	code		8326263	0					
ANR	8326390	PrimaryExpression	0		8326263	1					
ANR	8326391	ReturnStatement	return code ;	87:20:2845:2856	8326263	1	True				
ANR	8326392	Identifier	code		8326263	0					
ANR	8326393	ExpressionStatement	pcs -> font = pcs -> font_selection [ pcs -> font_selected ] . font	89:8:2880:2936	8326263	4	True				
ANR	8326394	AssignmentExpression	pcs -> font = pcs -> font_selection [ pcs -> font_selected ] . font		8326263	0		=			
ANR	8326395	PtrMemberAccess	pcs -> font		8326263	0					
ANR	8326396	Identifier	pcs		8326263	0					
ANR	8326397	Identifier	font		8326263	1					
ANR	8326398	MemberAccess	pcs -> font_selection [ pcs -> font_selected ] . font		8326263	1					
ANR	8326399	ArrayIndexing	pcs -> font_selection [ pcs -> font_selected ]		8326263	0					
ANR	8326400	PtrMemberAccess	pcs -> font_selection		8326263	0					
ANR	8326401	Identifier	pcs		8326263	0					
ANR	8326402	Identifier	font_selection		8326263	1					
ANR	8326403	PtrMemberAccess	pcs -> font_selected		8326263	1					
ANR	8326404	Identifier	pcs		8326263	0					
ANR	8326405	Identifier	font_selected		8326263	1					
ANR	8326406	Identifier	font		8326263	1					
ANR	8326407	ExpressionStatement	"pl_dict_undef_purge_synonyms ( & pcs -> soft_fonts , key , ksize )"	90:8:2946:3004	8326263	5	True				
ANR	8326408	CallExpression	"pl_dict_undef_purge_synonyms ( & pcs -> soft_fonts , key , ksize )"		8326263	0					
ANR	8326409	Callee	pl_dict_undef_purge_synonyms		8326263	0					
ANR	8326410	Identifier	pl_dict_undef_purge_synonyms		8326263	0					
ANR	8326411	ArgumentList	& pcs -> soft_fonts		8326263	1					
ANR	8326412	Argument	& pcs -> soft_fonts		8326263	0					
ANR	8326413	UnaryOperationExpression	& pcs -> soft_fonts		8326263	0					
ANR	8326414	UnaryOperator	&		8326263	0					
ANR	8326415	PtrMemberAccess	pcs -> soft_fonts		8326263	1					
ANR	8326416	Identifier	pcs		8326263	0					
ANR	8326417	Identifier	soft_fonts		8326263	1					
ANR	8326418	Argument	key		8326263	1					
ANR	8326419	Identifier	key		8326263	0					
ANR	8326420	Argument	ksize		8326263	2					
ANR	8326421	Identifier	ksize		8326263	0					
ANR	8326422	ReturnStatement	return 0 ;	92:4:3016:3024	8326263	2	True				
ANR	8326423	PrimaryExpression	0		8326263	0					
ANR	8326424	ReturnType	static int		8326263	1					
ANR	8326425	Identifier	pcl_delete_soft_font		8326263	2					
ANR	8326426	ParameterList	"pcl_state_t * pcs , const byte * key , uint ksize , void * value"		8326263	3					
ANR	8326427	Parameter	pcl_state_t * pcs	62:21:1770:1786	8326263	0	True				
ANR	8326428	ParameterType	pcl_state_t *		8326263	0					
ANR	8326429	Identifier	pcs		8326263	1					
ANR	8326430	Parameter	const byte * key	62:40:1789:1804	8326263	1	True				
ANR	8326431	ParameterType	const byte *		8326263	0					
ANR	8326432	Identifier	key		8326263	1					
ANR	8326433	Parameter	uint ksize	62:58:1807:1816	8326263	2	True				
ANR	8326434	ParameterType	uint		8326263	0					
ANR	8326435	Identifier	ksize		8326263	1					
ANR	8326436	Parameter	void * value	63:21:1840:1850	8326263	3	True				
ANR	8326437	ParameterType	void *		8326263	0					
ANR	8326438	Identifier	value		8326263	1					
ANR	8326439	CFGEntryNode	ENTRY		8326263		True				
ANR	8326440	CFGExitNode	EXIT		8326263		True				
ANR	8326441	Symbol	& value		8326263						
ANR	8326442	Symbol	code		8326263						
ANR	8326443	Symbol	pcs -> pjls		8326263						
ANR	8326444	Symbol	plfontp -> params		8326263						
ANR	8326445	Symbol	pcs -> font_selection [ 1 ] . font		8326263						
ANR	8326446	Symbol	pcl_set_current_font_environment		8326263						
ANR	8326447	Symbol	* pcs		8326263						
ANR	8326448	Symbol	plfontp -> storage		8326263						
ANR	8326449	Symbol	pcs -> font		8326263						
ANR	8326450	Symbol	plfontp		8326263						
ANR	8326451	Symbol	& pcs -> soft_fonts		8326263						
ANR	8326452	Symbol	pcs -> font_selection [ 0 ] . font		8326263						
ANR	8326453	Symbol	plfontp -> params . pjl_font_number		8326263						
ANR	8326454	Symbol	pcds_permanent		8326263						
ANR	8326455	Symbol	value		8326263						
ANR	8326456	Symbol	key		8326263						
ANR	8326457	Symbol	pcs		8326263						
ANR	8326458	Symbol	NULL		8326263						
ANR	8326459	Symbol	pjl_proc_register_permanent_soft_font_deletion		8326263						
ANR	8326460	Symbol	* pcs -> font_selection		8326263						
ANR	8326461	Symbol	pcs -> font_selection		8326263						
ANR	8326462	Symbol	* pcs -> font_selected		8326263						
ANR	8326463	Symbol	* * pcs		8326263						
ANR	8326464	Symbol	ksize		8326263						
ANR	8326465	Symbol	pl_dict_find_no_stack		8326263						
ANR	8326466	Symbol	pcs -> font_selected		8326263						
ANR	8326467	Symbol	pcs -> font_selection [ pcs -> font_selected ] . font		8326263						
ANR	8326468	Symbol	* plfontp		8326263						
ANR	8326469	Function	pcl_assign_font_id	97:0:3059:3334							
ANR	8326470	FunctionDef	"pcl_assign_font_id (pcl_args_t * pargs , pcl_state_t * pcs)"		8326469	0					
ANR	8326471	CompoundStatement		99:0:3170:3334	8326469	0					
ANR	8326472	IdentifierDeclStatement	uint id = uint_arg ( pargs ) ;	100:4:3176:3201	8326469	0	True				
ANR	8326473	IdentifierDecl	id = uint_arg ( pargs )		8326469	0					
ANR	8326474	IdentifierDeclType	uint		8326469	0					
ANR	8326475	Identifier	id		8326469	1					
ANR	8326476	AssignmentExpression	id = uint_arg ( pargs )		8326469	2		=			
ANR	8326477	Identifier	id		8326469	0					
ANR	8326478	CallExpression	uint_arg ( pargs )		8326469	1					
ANR	8326479	Callee	uint_arg		8326469	0					
ANR	8326480	Identifier	uint_arg		8326469	0					
ANR	8326481	ArgumentList	pargs		8326469	1					
ANR	8326482	Argument	pargs		8326469	0					
ANR	8326483	Identifier	pargs		8326469	0					
ANR	8326484	ExpressionStatement	"id_set_value ( pcs -> font_id , id )"	102:4:3208:3238	8326469	1	True				
ANR	8326485	CallExpression	"id_set_value ( pcs -> font_id , id )"		8326469	0					
ANR	8326486	Callee	id_set_value		8326469	0					
ANR	8326487	Identifier	id_set_value		8326469	0					
ANR	8326488	ArgumentList	pcs -> font_id		8326469	1					
ANR	8326489	Argument	pcs -> font_id		8326469	0					
ANR	8326490	PtrMemberAccess	pcs -> font_id		8326469	0					
ANR	8326491	Identifier	pcs		8326469	0					
ANR	8326492	Identifier	font_id		8326469	1					
ANR	8326493	Argument	id		8326469	1					
ANR	8326494	Identifier	id		8326469	0					
ANR	8326495	ExpressionStatement	pcs -> font_id_type = numeric_id	104:4:3288:3318	8326469	2	True				
ANR	8326496	AssignmentExpression	pcs -> font_id_type = numeric_id		8326469	0		=			
ANR	8326497	PtrMemberAccess	pcs -> font_id_type		8326469	0					
ANR	8326498	Identifier	pcs		8326469	0					
ANR	8326499	Identifier	font_id_type		8326469	1					
ANR	8326500	Identifier	numeric_id		8326469	1					
ANR	8326501	ReturnStatement	return 0 ;	105:4:3324:3332	8326469	3	True				
ANR	8326502	PrimaryExpression	0		8326469	0					
ANR	8326503	ReturnType	static int		8326469	1					
ANR	8326504	Identifier	pcl_assign_font_id		8326469	2					
ANR	8326505	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8326469	3					
ANR	8326506	Parameter	pcl_args_t * pargs	98:19:3131:3148	8326469	0	True				
ANR	8326507	ParameterType	pcl_args_t *		8326469	0					
ANR	8326508	Identifier	pargs		8326469	1					
ANR	8326509	Parameter	pcl_state_t * pcs	98:39:3151:3167	8326469	1	True				
ANR	8326510	ParameterType	pcl_state_t *		8326469	0					
ANR	8326511	Identifier	pcs		8326469	1					
ANR	8326512	CFGEntryNode	ENTRY		8326469		True				
ANR	8326513	CFGExitNode	EXIT		8326469		True				
ANR	8326514	Symbol	pcs		8326469						
ANR	8326515	Symbol	pcs -> font_id_type		8326469						
ANR	8326516	Symbol	numeric_id		8326469						
ANR	8326517	Symbol	pargs		8326469						
ANR	8326518	Symbol	* pcs		8326469						
ANR	8326519	Symbol	id		8326469						
ANR	8326520	Symbol	uint_arg		8326469						
ANR	8326521	Symbol	pcs -> font_id		8326469						
ANR	8326522	Function	pcl_make_resident_font_copy	112:0:3525:4476							
ANR	8326523	FunctionDef	pcl_make_resident_font_copy (pcl_state_t * pcs)		8326522	0					
ANR	8326524	CompoundStatement		114:0:3583:4476	8326522	0					
ANR	8326525	IdentifierDeclStatement	pl_dict_enum_t dictp ;	115:4:3589:3609	8326522	0	True				
ANR	8326526	IdentifierDecl	dictp		8326522	0					
ANR	8326527	IdentifierDeclType	pl_dict_enum_t		8326522	0					
ANR	8326528	Identifier	dictp		8326522	1					
ANR	8326529	IdentifierDeclStatement	gs_const_string key ;	116:4:3615:3634	8326522	1	True				
ANR	8326530	IdentifierDecl	key		8326522	0					
ANR	8326531	IdentifierDeclType	gs_const_string		8326522	0					
ANR	8326532	Identifier	key		8326522	1					
ANR	8326533	IdentifierDeclStatement	void * value ;	117:4:3640:3651	8326522	2	True				
ANR	8326534	IdentifierDecl	* value		8326522	0					
ANR	8326535	IdentifierDeclType	void *		8326522	0					
ANR	8326536	Identifier	value		8326522	1					
ANR	8326537	IdentifierDeclStatement	bool found = false ;	118:4:3657:3675	8326522	3	True				
ANR	8326538	IdentifierDecl	found = false		8326522	0					
ANR	8326539	IdentifierDeclType	bool		8326522	0					
ANR	8326540	Identifier	found		8326522	1					
ANR	8326541	AssignmentExpression	found = false		8326522	2		=			
ANR	8326542	Identifier	false		8326522	0					
ANR	8326543	Identifier	false		8326522	1					
ANR	8326544	IfStatement	"if ( pl_dict_lookup ( & pcs -> built_in_fonts , current_font_id , current_font_id_size , & value , false , ( pl_dict_t * * ) 0 ) )"		8326522	4					
ANR	8326545	Condition	"pl_dict_lookup ( & pcs -> built_in_fonts , current_font_id , current_font_id_size , & value , false , ( pl_dict_t * * ) 0 )"	121:8:3748:3873	8326522	0	True				
ANR	8326546	CallExpression	"pl_dict_lookup ( & pcs -> built_in_fonts , current_font_id , current_font_id_size , & value , false , ( pl_dict_t * * ) 0 )"		8326522	0					
ANR	8326547	Callee	pl_dict_lookup		8326522	0					
ANR	8326548	Identifier	pl_dict_lookup		8326522	0					
ANR	8326549	ArgumentList	& pcs -> built_in_fonts		8326522	1					
ANR	8326550	Argument	& pcs -> built_in_fonts		8326522	0					
ANR	8326551	UnaryOperationExpression	& pcs -> built_in_fonts		8326522	0					
ANR	8326552	UnaryOperator	&		8326522	0					
ANR	8326553	PtrMemberAccess	pcs -> built_in_fonts		8326522	1					
ANR	8326554	Identifier	pcs		8326522	0					
ANR	8326555	Identifier	built_in_fonts		8326522	1					
ANR	8326556	Argument	current_font_id		8326522	1					
ANR	8326557	Identifier	current_font_id		8326522	0					
ANR	8326558	Argument	current_font_id_size		8326522	2					
ANR	8326559	Identifier	current_font_id_size		8326522	0					
ANR	8326560	Argument	& value		8326522	3					
ANR	8326561	UnaryOperationExpression	& value		8326522	0					
ANR	8326562	UnaryOperator	&		8326522	0					
ANR	8326563	Identifier	value		8326522	1					
ANR	8326564	Argument	false		8326522	4					
ANR	8326565	Identifier	false		8326522	0					
ANR	8326566	Argument	( pl_dict_t * * ) 0		8326522	5					
ANR	8326567	CastExpression	( pl_dict_t * * ) 0		8326522	0					
ANR	8326568	CastTarget	pl_dict_t * *		8326522	0					
ANR	8326569	PrimaryExpression	0		8326522	1					
ANR	8326570	IfStatement	"if ( pl_dict_undef ( & pcs -> built_in_fonts , current_font_id , current_font_id_size ) == false )"		8326522	1					
ANR	8326571	Condition	"pl_dict_undef ( & pcs -> built_in_fonts , current_font_id , current_font_id_size ) == false"	124:12:3888:3996	8326522	0	True				
ANR	8326572	EqualityExpression	"pl_dict_undef ( & pcs -> built_in_fonts , current_font_id , current_font_id_size ) == false"		8326522	0		==			
ANR	8326573	CallExpression	"pl_dict_undef ( & pcs -> built_in_fonts , current_font_id , current_font_id_size )"		8326522	0					
ANR	8326574	Callee	pl_dict_undef		8326522	0					
ANR	8326575	Identifier	pl_dict_undef		8326522	0					
ANR	8326576	ArgumentList	& pcs -> built_in_fonts		8326522	1					
ANR	8326577	Argument	& pcs -> built_in_fonts		8326522	0					
ANR	8326578	UnaryOperationExpression	& pcs -> built_in_fonts		8326522	0					
ANR	8326579	UnaryOperator	&		8326522	0					
ANR	8326580	PtrMemberAccess	pcs -> built_in_fonts		8326522	1					
ANR	8326581	Identifier	pcs		8326522	0					
ANR	8326582	Identifier	built_in_fonts		8326522	1					
ANR	8326583	Argument	current_font_id		8326522	1					
ANR	8326584	Identifier	current_font_id		8326522	0					
ANR	8326585	Argument	current_font_id_size		8326522	2					
ANR	8326586	Identifier	current_font_id_size		8326522	0					
ANR	8326587	Identifier	false		8326522	1					
ANR	8326588	ReturnStatement	return - 1 ;	128:12:4044:4053	8326522	1	True				
ANR	8326589	UnaryOperationExpression	- 1		8326522	0					
ANR	8326590	UnaryOperator	-		8326522	0					
ANR	8326591	PrimaryExpression	1		8326522	1					
ANR	8326592	ExpressionStatement	"pl_dict_enum_begin ( & pcs -> built_in_fonts , & dictp )"	131:4:4095:4143	8326522	5	True				
ANR	8326593	CallExpression	"pl_dict_enum_begin ( & pcs -> built_in_fonts , & dictp )"		8326522	0					
ANR	8326594	Callee	pl_dict_enum_begin		8326522	0					
ANR	8326595	Identifier	pl_dict_enum_begin		8326522	0					
ANR	8326596	ArgumentList	& pcs -> built_in_fonts		8326522	1					
ANR	8326597	Argument	& pcs -> built_in_fonts		8326522	0					
ANR	8326598	UnaryOperationExpression	& pcs -> built_in_fonts		8326522	0					
ANR	8326599	UnaryOperator	&		8326522	0					
ANR	8326600	PtrMemberAccess	pcs -> built_in_fonts		8326522	1					
ANR	8326601	Identifier	pcs		8326522	0					
ANR	8326602	Identifier	built_in_fonts		8326522	1					
ANR	8326603	Argument	& dictp		8326522	1					
ANR	8326604	UnaryOperationExpression	& dictp		8326522	0					
ANR	8326605	UnaryOperator	&		8326522	0					
ANR	8326606	Identifier	dictp		8326522	1					
ANR	8326607	WhileStatement	"while ( pl_dict_enum_next ( & dictp , & key , & value ) )"		8326522	6					
ANR	8326608	Condition	"pl_dict_enum_next ( & dictp , & key , & value )"	132:11:4156:4194	8326522	0	True				
ANR	8326609	CallExpression	"pl_dict_enum_next ( & dictp , & key , & value )"		8326522	0					
ANR	8326610	Callee	pl_dict_enum_next		8326522	0					
ANR	8326611	Identifier	pl_dict_enum_next		8326522	0					
ANR	8326612	ArgumentList	& dictp		8326522	1					
ANR	8326613	Argument	& dictp		8326522	0					
ANR	8326614	UnaryOperationExpression	& dictp		8326522	0					
ANR	8326615	UnaryOperator	&		8326522	0					
ANR	8326616	Identifier	dictp		8326522	1					
ANR	8326617	Argument	& key		8326522	1					
ANR	8326618	UnaryOperationExpression	& key		8326522	0					
ANR	8326619	UnaryOperator	&		8326522	0					
ANR	8326620	Identifier	key		8326522	1					
ANR	8326621	Argument	& value		8326522	2					
ANR	8326622	UnaryOperationExpression	& value		8326522	0					
ANR	8326623	UnaryOperator	&		8326522	0					
ANR	8326624	Identifier	value		8326522	1					
ANR	8326625	IfStatement	if ( ( void * ) ( pcs -> font ) == value )		8326522	1					
ANR	8326626	Condition	( void * ) ( pcs -> font ) == value	133:12:4209:4236	8326522	0	True				
ANR	8326627	EqualityExpression	( void * ) ( pcs -> font ) == value		8326522	0		==			
ANR	8326628	CastExpression	( void * ) ( pcs -> font )		8326522	0					
ANR	8326629	CastTarget	void *		8326522	0					
ANR	8326630	PtrMemberAccess	pcs -> font		8326522	1					
ANR	8326631	Identifier	pcs		8326522	0					
ANR	8326632	Identifier	font		8326522	1					
ANR	8326633	Identifier	value		8326522	1					
ANR	8326634	CompoundStatement		20:42:655:655	8326522	1					
ANR	8326635	ExpressionStatement	found = true	134:12:4253:4265	8326522	0	True				
ANR	8326636	AssignmentExpression	found = true		8326522	0		=			
ANR	8326637	Identifier	found		8326522	0					
ANR	8326638	Identifier	true		8326522	1					
ANR	8326639	BreakStatement	break ;	135:12:4279:4284	8326522	1	True				
ANR	8326640	IfStatement	if ( found == false )		8326522	7					
ANR	8326641	Condition	found == false	137:8:4304:4317	8326522	0	True				
ANR	8326642	EqualityExpression	found == false		8326522	0		==			
ANR	8326643	Identifier	found		8326522	0					
ANR	8326644	Identifier	false		8326522	1					
ANR	8326645	ReturnStatement	return - 1 ;	138:8:4328:4337	8326522	1	True				
ANR	8326646	UnaryOperationExpression	- 1		8326522	0					
ANR	8326647	UnaryOperator	-		8326522	0					
ANR	8326648	PrimaryExpression	1		8326522	1					
ANR	8326649	ReturnStatement	"return pl_dict_put_synonym ( & pcs -> built_in_fonts , key . data , key . size , current_font_id , current_font_id_size ) ;"	139:4:4343:4474	8326522	8	True				
ANR	8326650	CallExpression	"pl_dict_put_synonym ( & pcs -> built_in_fonts , key . data , key . size , current_font_id , current_font_id_size )"		8326522	0					
ANR	8326651	Callee	pl_dict_put_synonym		8326522	0					
ANR	8326652	Identifier	pl_dict_put_synonym		8326522	0					
ANR	8326653	ArgumentList	& pcs -> built_in_fonts		8326522	1					
ANR	8326654	Argument	& pcs -> built_in_fonts		8326522	0					
ANR	8326655	UnaryOperationExpression	& pcs -> built_in_fonts		8326522	0					
ANR	8326656	UnaryOperator	&		8326522	0					
ANR	8326657	PtrMemberAccess	pcs -> built_in_fonts		8326522	1					
ANR	8326658	Identifier	pcs		8326522	0					
ANR	8326659	Identifier	built_in_fonts		8326522	1					
ANR	8326660	Argument	key . data		8326522	1					
ANR	8326661	MemberAccess	key . data		8326522	0					
ANR	8326662	Identifier	key		8326522	0					
ANR	8326663	Identifier	data		8326522	1					
ANR	8326664	Argument	key . size		8326522	2					
ANR	8326665	MemberAccess	key . size		8326522	0					
ANR	8326666	Identifier	key		8326522	0					
ANR	8326667	Identifier	size		8326522	1					
ANR	8326668	Argument	current_font_id		8326522	3					
ANR	8326669	Identifier	current_font_id		8326522	0					
ANR	8326670	Argument	current_font_id_size		8326522	4					
ANR	8326671	Identifier	current_font_id_size		8326522	0					
ANR	8326672	ReturnType	static int		8326522	1					
ANR	8326673	Identifier	pcl_make_resident_font_copy		8326522	2					
ANR	8326674	ParameterList	pcl_state_t * pcs		8326522	3					
ANR	8326675	Parameter	pcl_state_t * pcs	113:28:3564:3580	8326522	0	True				
ANR	8326676	ParameterType	pcl_state_t *		8326522	0					
ANR	8326677	Identifier	pcs		8326522	1					
ANR	8326678	CFGEntryNode	ENTRY		8326522		True				
ANR	8326679	CFGExitNode	EXIT		8326522		True				
ANR	8326680	Symbol	pcs		8326522						
ANR	8326681	Symbol	& key		8326522						
ANR	8326682	Symbol	& value		8326522						
ANR	8326683	Symbol	current_font_id_size		8326522						
ANR	8326684	Symbol	key . data		8326522						
ANR	8326685	Symbol	pl_dict_put_synonym		8326522						
ANR	8326686	Symbol	dictp		8326522						
ANR	8326687	Symbol	false		8326522						
ANR	8326688	Symbol	pl_dict_undef		8326522						
ANR	8326689	Symbol	* pcs		8326522						
ANR	8326690	Symbol	key . size		8326522						
ANR	8326691	Symbol	pl_dict_enum_next		8326522						
ANR	8326692	Symbol	pcs -> font		8326522						
ANR	8326693	Symbol	found		8326522						
ANR	8326694	Symbol	current_font_id		8326522						
ANR	8326695	Symbol	true		8326522						
ANR	8326696	Symbol	& dictp		8326522						
ANR	8326697	Symbol	pl_dict_lookup		8326522						
ANR	8326698	Symbol	value		8326522						
ANR	8326699	Symbol	& pcs -> built_in_fonts		8326522						
ANR	8326700	Symbol	key		8326522						
ANR	8326701	Function	pcl_font_control	143:0:4479:9210							
ANR	8326702	FunctionDef	"pcl_font_control (pcl_args_t * pargs , pcl_state_t * pcs)"		8326701	0					
ANR	8326703	CompoundStatement		145:0:4593:9210	8326701	0					
ANR	8326704	IdentifierDeclStatement	int code = 0 ;	146:4:4599:4611	8326701	0	True				
ANR	8326705	IdentifierDecl	code = 0		8326701	0					
ANR	8326706	IdentifierDeclType	int		8326701	0					
ANR	8326707	Identifier	code		8326701	1					
ANR	8326708	AssignmentExpression	code = 0		8326701	2		=			
ANR	8326709	Identifier	code		8326701	0					
ANR	8326710	PrimaryExpression	0		8326701	1					
ANR	8326711	IdentifierDeclStatement	gs_const_string key ;	147:4:4617:4636	8326701	1	True				
ANR	8326712	IdentifierDecl	key		8326701	0					
ANR	8326713	IdentifierDeclType	gs_const_string		8326701	0					
ANR	8326714	Identifier	key		8326701	1					
ANR	8326715	IdentifierDeclStatement	void * value ;	148:4:4642:4653	8326701	2	True				
ANR	8326716	IdentifierDecl	* value		8326701	0					
ANR	8326717	IdentifierDeclType	void *		8326701	0					
ANR	8326718	Identifier	value		8326701	1					
ANR	8326719	IdentifierDeclStatement	pl_dict_enum_t denum ;	149:4:4659:4679	8326701	3	True				
ANR	8326720	IdentifierDecl	denum		8326701	0					
ANR	8326721	IdentifierDeclType	pl_dict_enum_t		8326701	0					
ANR	8326722	Identifier	denum		8326701	1					
ANR	8326723	SwitchStatement	switch ( uint_arg ( pargs ) )		8326701	4					
ANR	8326724	Condition	uint_arg ( pargs )	151:12:4694:4708	8326701	0	True				
ANR	8326725	CallExpression	uint_arg ( pargs )		8326701	0					
ANR	8326726	Callee	uint_arg		8326701	0					
ANR	8326727	Identifier	uint_arg		8326701	0					
ANR	8326728	ArgumentList	pargs		8326701	1					
ANR	8326729	Argument	pargs		8326701	0					
ANR	8326730	Identifier	pargs		8326701	0					
ANR	8326731	CompoundStatement		7:29:117:117	8326701	1					
ANR	8326732	Label	case 0 :	152:8:4721:4727	8326701	0	True				
ANR	8326733	ExpressionStatement	pcs -> font = pcs -> font_selection [ pcs -> font_selected ] . font	154:12:4782:4838	8326701	1	True				
ANR	8326734	AssignmentExpression	pcs -> font = pcs -> font_selection [ pcs -> font_selected ] . font		8326701	0		=			
ANR	8326735	PtrMemberAccess	pcs -> font		8326701	0					
ANR	8326736	Identifier	pcs		8326701	0					
ANR	8326737	Identifier	font		8326701	1					
ANR	8326738	MemberAccess	pcs -> font_selection [ pcs -> font_selected ] . font		8326701	1					
ANR	8326739	ArrayIndexing	pcs -> font_selection [ pcs -> font_selected ]		8326701	0					
ANR	8326740	PtrMemberAccess	pcs -> font_selection		8326701	0					
ANR	8326741	Identifier	pcs		8326701	0					
ANR	8326742	Identifier	font_selection		8326701	1					
ANR	8326743	PtrMemberAccess	pcs -> font_selected		8326701	1					
ANR	8326744	Identifier	pcs		8326701	0					
ANR	8326745	Identifier	font_selected		8326701	1					
ANR	8326746	Identifier	font		8326701	1					
ANR	8326747	ExpressionStatement	"pl_dict_enum_stack_begin ( & pcs -> soft_fonts , & denum , false )"	155:12:4852:4909	8326701	2	True				
ANR	8326748	CallExpression	"pl_dict_enum_stack_begin ( & pcs -> soft_fonts , & denum , false )"		8326701	0					
ANR	8326749	Callee	pl_dict_enum_stack_begin		8326701	0					
ANR	8326750	Identifier	pl_dict_enum_stack_begin		8326701	0					
ANR	8326751	ArgumentList	& pcs -> soft_fonts		8326701	1					
ANR	8326752	Argument	& pcs -> soft_fonts		8326701	0					
ANR	8326753	UnaryOperationExpression	& pcs -> soft_fonts		8326701	0					
ANR	8326754	UnaryOperator	&		8326701	0					
ANR	8326755	PtrMemberAccess	pcs -> soft_fonts		8326701	1					
ANR	8326756	Identifier	pcs		8326701	0					
ANR	8326757	Identifier	soft_fonts		8326701	1					
ANR	8326758	Argument	& denum		8326701	1					
ANR	8326759	UnaryOperationExpression	& denum		8326701	0					
ANR	8326760	UnaryOperator	&		8326701	0					
ANR	8326761	Identifier	denum		8326701	1					
ANR	8326762	Argument	false		8326701	2					
ANR	8326763	Identifier	false		8326701	0					
ANR	8326764	WhileStatement	"while ( pl_dict_enum_next ( & denum , & key , & value ) )"		8326701	3					
ANR	8326765	Condition	"pl_dict_enum_next ( & denum , & key , & value )"	156:19:4930:4968	8326701	0	True				
ANR	8326766	CallExpression	"pl_dict_enum_next ( & denum , & key , & value )"		8326701	0					
ANR	8326767	Callee	pl_dict_enum_next		8326701	0					
ANR	8326768	Identifier	pl_dict_enum_next		8326701	0					
ANR	8326769	ArgumentList	& denum		8326701	1					
ANR	8326770	Argument	& denum		8326701	0					
ANR	8326771	UnaryOperationExpression	& denum		8326701	0					
ANR	8326772	UnaryOperator	&		8326701	0					
ANR	8326773	Identifier	denum		8326701	1					
ANR	8326774	Argument	& key		8326701	1					
ANR	8326775	UnaryOperationExpression	& key		8326701	0					
ANR	8326776	UnaryOperator	&		8326701	0					
ANR	8326777	Identifier	key		8326701	1					
ANR	8326778	Argument	& value		8326701	2					
ANR	8326779	UnaryOperationExpression	& value		8326701	0					
ANR	8326780	UnaryOperator	&		8326701	0					
ANR	8326781	Identifier	value		8326701	1					
ANR	8326782	CompoundStatement		12:60:377:377	8326701	1					
ANR	8326783	ExpressionStatement	"code = pcl_delete_soft_font ( pcs , key . data , key . size , value )"	157:16:4989:5048	8326701	0	True				
ANR	8326784	AssignmentExpression	"code = pcl_delete_soft_font ( pcs , key . data , key . size , value )"		8326701	0		=			
ANR	8326785	Identifier	code		8326701	0					
ANR	8326786	CallExpression	"pcl_delete_soft_font ( pcs , key . data , key . size , value )"		8326701	1					
ANR	8326787	Callee	pcl_delete_soft_font		8326701	0					
ANR	8326788	Identifier	pcl_delete_soft_font		8326701	0					
ANR	8326789	ArgumentList	pcs		8326701	1					
ANR	8326790	Argument	pcs		8326701	0					
ANR	8326791	Identifier	pcs		8326701	0					
ANR	8326792	Argument	key . data		8326701	1					
ANR	8326793	MemberAccess	key . data		8326701	0					
ANR	8326794	Identifier	key		8326701	0					
ANR	8326795	Identifier	data		8326701	1					
ANR	8326796	Argument	key . size		8326701	2					
ANR	8326797	MemberAccess	key . size		8326701	0					
ANR	8326798	Identifier	key		8326701	0					
ANR	8326799	Identifier	size		8326701	1					
ANR	8326800	Argument	value		8326701	3					
ANR	8326801	Identifier	value		8326701	0					
ANR	8326802	IfStatement	if ( code < 0 )		8326701	1					
ANR	8326803	Condition	code < 0	158:20:5070:5077	8326701	0	True				
ANR	8326804	RelationalExpression	code < 0		8326701	0		<			
ANR	8326805	Identifier	code		8326701	0					
ANR	8326806	PrimaryExpression	0		8326701	1					
ANR	8326807	ReturnStatement	return code ;	159:20:5100:5111	8326701	1	True				
ANR	8326808	Identifier	code		8326701	0					
ANR	8326809	ExpressionStatement	"pl_dict_enum_stack_begin ( & pcs -> soft_fonts , & denum , false )"	165:16:5483:5540	8326701	2	True				
ANR	8326810	CallExpression	"pl_dict_enum_stack_begin ( & pcs -> soft_fonts , & denum , false )"		8326701	0					
ANR	8326811	Callee	pl_dict_enum_stack_begin		8326701	0					
ANR	8326812	Identifier	pl_dict_enum_stack_begin		8326701	0					
ANR	8326813	ArgumentList	& pcs -> soft_fonts		8326701	1					
ANR	8326814	Argument	& pcs -> soft_fonts		8326701	0					
ANR	8326815	UnaryOperationExpression	& pcs -> soft_fonts		8326701	0					
ANR	8326816	UnaryOperator	&		8326701	0					
ANR	8326817	PtrMemberAccess	pcs -> soft_fonts		8326701	1					
ANR	8326818	Identifier	pcs		8326701	0					
ANR	8326819	Identifier	soft_fonts		8326701	1					
ANR	8326820	Argument	& denum		8326701	1					
ANR	8326821	UnaryOperationExpression	& denum		8326701	0					
ANR	8326822	UnaryOperator	&		8326701	0					
ANR	8326823	Identifier	denum		8326701	1					
ANR	8326824	Argument	false		8326701	2					
ANR	8326825	Identifier	false		8326701	0					
ANR	8326826	ExpressionStatement	pl_dict_release ( & pcs -> soft_fonts )	167:12:5568:5601	8326701	4	True				
ANR	8326827	CallExpression	pl_dict_release ( & pcs -> soft_fonts )		8326701	0					
ANR	8326828	Callee	pl_dict_release		8326701	0					
ANR	8326829	Identifier	pl_dict_release		8326701	0					
ANR	8326830	ArgumentList	& pcs -> soft_fonts		8326701	1					
ANR	8326831	Argument	& pcs -> soft_fonts		8326701	0					
ANR	8326832	UnaryOperationExpression	& pcs -> soft_fonts		8326701	0					
ANR	8326833	UnaryOperator	&		8326701	0					
ANR	8326834	PtrMemberAccess	pcs -> soft_fonts		8326701	1					
ANR	8326835	Identifier	pcs		8326701	0					
ANR	8326836	Identifier	soft_fonts		8326701	1					
ANR	8326837	BreakStatement	break ;	168:12:5615:5620	8326701	5	True				
ANR	8326838	Label	case 1 :	169:8:5630:5636	8326701	6	True				
ANR	8326839	ExpressionStatement	"pl_dict_enum_stack_begin ( & pcs -> soft_fonts , & denum , false )"	171:12:5701:5758	8326701	7	True				
ANR	8326840	CallExpression	"pl_dict_enum_stack_begin ( & pcs -> soft_fonts , & denum , false )"		8326701	0					
ANR	8326841	Callee	pl_dict_enum_stack_begin		8326701	0					
ANR	8326842	Identifier	pl_dict_enum_stack_begin		8326701	0					
ANR	8326843	ArgumentList	& pcs -> soft_fonts		8326701	1					
ANR	8326844	Argument	& pcs -> soft_fonts		8326701	0					
ANR	8326845	UnaryOperationExpression	& pcs -> soft_fonts		8326701	0					
ANR	8326846	UnaryOperator	&		8326701	0					
ANR	8326847	PtrMemberAccess	pcs -> soft_fonts		8326701	1					
ANR	8326848	Identifier	pcs		8326701	0					
ANR	8326849	Identifier	soft_fonts		8326701	1					
ANR	8326850	Argument	& denum		8326701	1					
ANR	8326851	UnaryOperationExpression	& denum		8326701	0					
ANR	8326852	UnaryOperator	&		8326701	0					
ANR	8326853	Identifier	denum		8326701	1					
ANR	8326854	Argument	false		8326701	2					
ANR	8326855	Identifier	false		8326701	0					
ANR	8326856	WhileStatement	"while ( pl_dict_enum_next ( & denum , & key , & value ) )"		8326701	8					
ANR	8326857	Condition	"pl_dict_enum_next ( & denum , & key , & value )"	172:19:5779:5817	8326701	0	True				
ANR	8326858	CallExpression	"pl_dict_enum_next ( & denum , & key , & value )"		8326701	0					
ANR	8326859	Callee	pl_dict_enum_next		8326701	0					
ANR	8326860	Identifier	pl_dict_enum_next		8326701	0					
ANR	8326861	ArgumentList	& denum		8326701	1					
ANR	8326862	Argument	& denum		8326701	0					
ANR	8326863	UnaryOperationExpression	& denum		8326701	0					
ANR	8326864	UnaryOperator	&		8326701	0					
ANR	8326865	Identifier	denum		8326701	1					
ANR	8326866	Argument	& key		8326701	1					
ANR	8326867	UnaryOperationExpression	& key		8326701	0					
ANR	8326868	UnaryOperator	&		8326701	0					
ANR	8326869	Identifier	key		8326701	1					
ANR	8326870	Argument	& value		8326701	2					
ANR	8326871	UnaryOperationExpression	& value		8326701	0					
ANR	8326872	UnaryOperator	&		8326701	0					
ANR	8326873	Identifier	value		8326701	1					
ANR	8326874	IfStatement	if ( ( ( pl_font_t * ) value ) -> storage == pcds_temporary )		8326701	1					
ANR	8326875	Condition	( ( pl_font_t * ) value ) -> storage == pcds_temporary	173:20:5840:5887	8326701	0	True				
ANR	8326876	EqualityExpression	( ( pl_font_t * ) value ) -> storage == pcds_temporary		8326701	0		==			
ANR	8326877	PtrMemberAccess	( ( pl_font_t * ) value ) -> storage		8326701	0					
ANR	8326878	CastExpression	( pl_font_t * ) value		8326701	0					
ANR	8326879	CastTarget	pl_font_t *		8326701	0					
ANR	8326880	Identifier	value		8326701	1					
ANR	8326881	Identifier	storage		8326701	1					
ANR	8326882	Identifier	pcds_temporary		8326701	1					
ANR	8326883	CompoundStatement		29:70:1296:1296	8326701	1					
ANR	8326884	ExpressionStatement	"code = pcl_delete_soft_font ( pcs , key . data , key . size , value )"	174:20:5912:5971	8326701	0	True				
ANR	8326885	AssignmentExpression	"code = pcl_delete_soft_font ( pcs , key . data , key . size , value )"		8326701	0		=			
ANR	8326886	Identifier	code		8326701	0					
ANR	8326887	CallExpression	"pcl_delete_soft_font ( pcs , key . data , key . size , value )"		8326701	1					
ANR	8326888	Callee	pcl_delete_soft_font		8326701	0					
ANR	8326889	Identifier	pcl_delete_soft_font		8326701	0					
ANR	8326890	ArgumentList	pcs		8326701	1					
ANR	8326891	Argument	pcs		8326701	0					
ANR	8326892	Identifier	pcs		8326701	0					
ANR	8326893	Argument	key . data		8326701	1					
ANR	8326894	MemberAccess	key . data		8326701	0					
ANR	8326895	Identifier	key		8326701	0					
ANR	8326896	Identifier	data		8326701	1					
ANR	8326897	Argument	key . size		8326701	2					
ANR	8326898	MemberAccess	key . size		8326701	0					
ANR	8326899	Identifier	key		8326701	0					
ANR	8326900	Identifier	size		8326701	1					
ANR	8326901	Argument	value		8326701	3					
ANR	8326902	Identifier	value		8326701	0					
ANR	8326903	IfStatement	if ( code < 0 )		8326701	1					
ANR	8326904	Condition	code < 0	175:24:5997:6004	8326701	0	True				
ANR	8326905	RelationalExpression	code < 0		8326701	0		<			
ANR	8326906	Identifier	code		8326701	0					
ANR	8326907	PrimaryExpression	0		8326701	1					
ANR	8326908	ReturnStatement	return code ;	176:24:6031:6042	8326701	1	True				
ANR	8326909	Identifier	code		8326701	0					
ANR	8326910	BreakStatement	break ;	178:12:6074:6079	8326701	9	True				
ANR	8326911	Label	case 2 :	179:8:6089:6095	8326701	10	True				
ANR	8326912	ExpressionStatement	"code = pcl_delete_soft_font ( pcs , current_font_id , current_font_id_size , NULL )"	181:12:6155:6265	8326701	11	True				
ANR	8326913	AssignmentExpression	"code = pcl_delete_soft_font ( pcs , current_font_id , current_font_id_size , NULL )"		8326701	0		=			
ANR	8326914	Identifier	code		8326701	0					
ANR	8326915	CallExpression	"pcl_delete_soft_font ( pcs , current_font_id , current_font_id_size , NULL )"		8326701	1					
ANR	8326916	Callee	pcl_delete_soft_font		8326701	0					
ANR	8326917	Identifier	pcl_delete_soft_font		8326701	0					
ANR	8326918	ArgumentList	pcs		8326701	1					
ANR	8326919	Argument	pcs		8326701	0					
ANR	8326920	Identifier	pcs		8326701	0					
ANR	8326921	Argument	current_font_id		8326701	1					
ANR	8326922	Identifier	current_font_id		8326701	0					
ANR	8326923	Argument	current_font_id_size		8326701	2					
ANR	8326924	Identifier	current_font_id_size		8326701	0					
ANR	8326925	Argument	NULL		8326701	3					
ANR	8326926	Identifier	NULL		8326701	0					
ANR	8326927	ExpressionStatement	"pcl_decache_font ( pcs , - 1 , true )"	184:12:6356:6387	8326701	12	True				
ANR	8326928	CallExpression	"pcl_decache_font ( pcs , - 1 , true )"		8326701	0					
ANR	8326929	Callee	pcl_decache_font		8326701	0					
ANR	8326930	Identifier	pcl_decache_font		8326701	0					
ANR	8326931	ArgumentList	pcs		8326701	1					
ANR	8326932	Argument	pcs		8326701	0					
ANR	8326933	Identifier	pcs		8326701	0					
ANR	8326934	Argument	- 1		8326701	1					
ANR	8326935	UnaryOperationExpression	- 1		8326701	0					
ANR	8326936	UnaryOperator	-		8326701	0					
ANR	8326937	PrimaryExpression	1		8326701	1					
ANR	8326938	Argument	true		8326701	2					
ANR	8326939	Identifier	true		8326701	0					
ANR	8326940	BreakStatement	break ;	186:12:6402:6407	8326701	13	True				
ANR	8326941	Label	case 3 :	187:8:6417:6423	8326701	14	True				
ANR	8326942	IfStatement	"if ( pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value ) )"		8326701	15					
ANR	8326943	Condition	"pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value )"	189:16:6503:6622	8326701	0	True				
ANR	8326944	CallExpression	"pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value )"		8326701	0					
ANR	8326945	Callee	pl_dict_find_no_stack		8326701	0					
ANR	8326946	Identifier	pl_dict_find_no_stack		8326701	0					
ANR	8326947	ArgumentList	& pcs -> soft_fonts		8326701	1					
ANR	8326948	Argument	& pcs -> soft_fonts		8326701	0					
ANR	8326949	UnaryOperationExpression	& pcs -> soft_fonts		8326701	0					
ANR	8326950	UnaryOperator	&		8326701	0					
ANR	8326951	PtrMemberAccess	pcs -> soft_fonts		8326701	1					
ANR	8326952	Identifier	pcs		8326701	0					
ANR	8326953	Identifier	soft_fonts		8326701	1					
ANR	8326954	Argument	current_font_id		8326701	1					
ANR	8326955	Identifier	current_font_id		8326701	0					
ANR	8326956	Argument	current_font_id_size		8326701	2					
ANR	8326957	Identifier	current_font_id_size		8326701	0					
ANR	8326958	Argument	& value		8326701	3					
ANR	8326959	UnaryOperationExpression	& value		8326701	0					
ANR	8326960	UnaryOperator	&		8326701	0					
ANR	8326961	Identifier	value		8326701	1					
ANR	8326962	ExpressionStatement	"pl_font_remove_glyph ( ( pl_font_t * ) value , pcs -> character_code )"	192:16:6641:6740	8326701	1	True				
ANR	8326963	CallExpression	"pl_font_remove_glyph ( ( pl_font_t * ) value , pcs -> character_code )"		8326701	0					
ANR	8326964	Callee	pl_font_remove_glyph		8326701	0					
ANR	8326965	Identifier	pl_font_remove_glyph		8326701	0					
ANR	8326966	ArgumentList	( pl_font_t * ) value		8326701	1					
ANR	8326967	Argument	( pl_font_t * ) value		8326701	0					
ANR	8326968	CastExpression	( pl_font_t * ) value		8326701	0					
ANR	8326969	CastTarget	pl_font_t *		8326701	0					
ANR	8326970	Identifier	value		8326701	1					
ANR	8326971	Argument	pcs -> character_code		8326701	1					
ANR	8326972	PtrMemberAccess	pcs -> character_code		8326701	0					
ANR	8326973	Identifier	pcs		8326701	0					
ANR	8326974	Identifier	character_code		8326701	1					
ANR	8326975	ReturnStatement	return 0 ;	194:12:6754:6762	8326701	16	True				
ANR	8326976	PrimaryExpression	0		8326701	0					
ANR	8326977	BreakStatement	break ;	196:12:6777:6782	8326701	17	True				
ANR	8326978	Label	case 4 :	197:8:6792:6798	8326701	18	True				
ANR	8326979	IfStatement	"if ( pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value ) )"		8326701	19					
ANR	8326980	Condition	"pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value )"	199:16:6870:6989	8326701	0	True				
ANR	8326981	CallExpression	"pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value )"		8326701	0					
ANR	8326982	Callee	pl_dict_find_no_stack		8326701	0					
ANR	8326983	Identifier	pl_dict_find_no_stack		8326701	0					
ANR	8326984	ArgumentList	& pcs -> soft_fonts		8326701	1					
ANR	8326985	Argument	& pcs -> soft_fonts		8326701	0					
ANR	8326986	UnaryOperationExpression	& pcs -> soft_fonts		8326701	0					
ANR	8326987	UnaryOperator	&		8326701	0					
ANR	8326988	PtrMemberAccess	pcs -> soft_fonts		8326701	1					
ANR	8326989	Identifier	pcs		8326701	0					
ANR	8326990	Identifier	soft_fonts		8326701	1					
ANR	8326991	Argument	current_font_id		8326701	1					
ANR	8326992	Identifier	current_font_id		8326701	0					
ANR	8326993	Argument	current_font_id_size		8326701	2					
ANR	8326994	Identifier	current_font_id_size		8326701	0					
ANR	8326995	Argument	& value		8326701	3					
ANR	8326996	UnaryOperationExpression	& value		8326701	0					
ANR	8326997	UnaryOperator	&		8326701	0					
ANR	8326998	Identifier	value		8326701	1					
ANR	8326999	ExpressionStatement	( ( pl_font_t * ) value ) -> storage = pcds_temporary	202:16:7008:7055	8326701	1	True				
ANR	8327000	AssignmentExpression	( ( pl_font_t * ) value ) -> storage = pcds_temporary		8326701	0		=			
ANR	8327001	PtrMemberAccess	( ( pl_font_t * ) value ) -> storage		8326701	0					
ANR	8327002	CastExpression	( pl_font_t * ) value		8326701	0					
ANR	8327003	CastTarget	pl_font_t *		8326701	0					
ANR	8327004	Identifier	value		8326701	1					
ANR	8327005	Identifier	storage		8326701	1					
ANR	8327006	Identifier	pcds_temporary		8326701	1					
ANR	8327007	BreakStatement	break ;	204:12:7070:7075	8326701	20	True				
ANR	8327008	Label	case 5 :	205:8:7085:7091	8326701	21	True				
ANR	8327009	IfStatement	"if ( pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value ) )"		8326701	22					
ANR	8327010	Condition	"pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value )"	207:16:7163:7282	8326701	0	True				
ANR	8327011	CallExpression	"pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value )"		8326701	0					
ANR	8327012	Callee	pl_dict_find_no_stack		8326701	0					
ANR	8327013	Identifier	pl_dict_find_no_stack		8326701	0					
ANR	8327014	ArgumentList	& pcs -> soft_fonts		8326701	1					
ANR	8327015	Argument	& pcs -> soft_fonts		8326701	0					
ANR	8327016	UnaryOperationExpression	& pcs -> soft_fonts		8326701	0					
ANR	8327017	UnaryOperator	&		8326701	0					
ANR	8327018	PtrMemberAccess	pcs -> soft_fonts		8326701	1					
ANR	8327019	Identifier	pcs		8326701	0					
ANR	8327020	Identifier	soft_fonts		8326701	1					
ANR	8327021	Argument	current_font_id		8326701	1					
ANR	8327022	Identifier	current_font_id		8326701	0					
ANR	8327023	Argument	current_font_id_size		8326701	2					
ANR	8327024	Identifier	current_font_id_size		8326701	0					
ANR	8327025	Argument	& value		8326701	3					
ANR	8327026	UnaryOperationExpression	& value		8326701	0					
ANR	8327027	UnaryOperator	&		8326701	0					
ANR	8327028	Identifier	value		8326701	1					
ANR	8327029	CompoundStatement		65:26:2691:2691	8326701	1					
ANR	8327030	ExpressionStatement	( ( pl_font_t * ) value ) -> storage = pcds_permanent	210:16:7303:7350	8326701	0	True				
ANR	8327031	AssignmentExpression	( ( pl_font_t * ) value ) -> storage = pcds_permanent		8326701	0		=			
ANR	8327032	PtrMemberAccess	( ( pl_font_t * ) value ) -> storage		8326701	0					
ANR	8327033	CastExpression	( pl_font_t * ) value		8326701	0					
ANR	8327034	CastTarget	pl_font_t *		8326701	0					
ANR	8327035	Identifier	value		8326701	1					
ANR	8327036	Identifier	storage		8326701	1					
ANR	8327037	Identifier	pcds_permanent		8326701	1					
ANR	8327038	ExpressionStatement	( ( pl_font_t * ) value ) -> params . pjl_font_number = pjl_proc_register_permanent_soft_font_addition ( pcs -> pjls )	211:16:7368:7493	8326701	1	True				
ANR	8327039	AssignmentExpression	( ( pl_font_t * ) value ) -> params . pjl_font_number = pjl_proc_register_permanent_soft_font_addition ( pcs -> pjls )		8326701	0		=			
ANR	8327040	MemberAccess	( ( pl_font_t * ) value ) -> params . pjl_font_number		8326701	0					
ANR	8327041	PtrMemberAccess	( ( pl_font_t * ) value ) -> params		8326701	0					
ANR	8327042	CastExpression	( pl_font_t * ) value		8326701	0					
ANR	8327043	CastTarget	pl_font_t *		8326701	0					
ANR	8327044	Identifier	value		8326701	1					
ANR	8327045	Identifier	params		8326701	1					
ANR	8327046	Identifier	pjl_font_number		8326701	1					
ANR	8327047	CallExpression	pjl_proc_register_permanent_soft_font_addition ( pcs -> pjls )		8326701	1					
ANR	8327048	Callee	pjl_proc_register_permanent_soft_font_addition		8326701	0					
ANR	8327049	Identifier	pjl_proc_register_permanent_soft_font_addition		8326701	0					
ANR	8327050	ArgumentList	pcs -> pjls		8326701	1					
ANR	8327051	Argument	pcs -> pjls		8326701	0					
ANR	8327052	PtrMemberAccess	pcs -> pjls		8326701	0					
ANR	8327053	Identifier	pcs		8326701	0					
ANR	8327054	Identifier	pjls		8326701	1					
ANR	8327055	BreakStatement	break ;	214:12:7521:7526	8326701	23	True				
ANR	8327056	Label	case 6 :	215:8:7536:7542	8326701	24	True				
ANR	8327057	CompoundStatement		72:12:2962:2962	8326701	25					
ANR	8327058	IfStatement	if ( pcs -> font == 0 )		8326701	0					
ANR	8327059	Condition	pcs -> font == 0	217:20:7578:7591	8326701	0	True				
ANR	8327060	EqualityExpression	pcs -> font == 0		8326701	0		==			
ANR	8327061	PtrMemberAccess	pcs -> font		8326701	0					
ANR	8327062	Identifier	pcs		8326701	0					
ANR	8327063	Identifier	font		8326701	1					
ANR	8327064	PrimaryExpression	0		8326701	1					
ANR	8327065	CompoundStatement		73:36:3000:3000	8326701	1					
ANR	8327066	ExpressionStatement	"code = pcl_recompute_font ( pcs , false )"	218:20:7616:7653	8326701	0	True				
ANR	8327067	AssignmentExpression	"code = pcl_recompute_font ( pcs , false )"		8326701	0		=			
ANR	8327068	Identifier	code		8326701	0					
ANR	8327069	CallExpression	"pcl_recompute_font ( pcs , false )"		8326701	1					
ANR	8327070	Callee	pcl_recompute_font		8326701	0					
ANR	8327071	Identifier	pcl_recompute_font		8326701	0					
ANR	8327072	ArgumentList	pcs		8326701	1					
ANR	8327073	Argument	pcs		8326701	0					
ANR	8327074	Identifier	pcs		8326701	0					
ANR	8327075	Argument	false		8326701	1					
ANR	8327076	Identifier	false		8326701	0					
ANR	8327077	IfStatement	if ( code < 0 )		8326701	1					
ANR	8327078	Condition	code < 0	219:24:7679:7686	8326701	0	True				
ANR	8327079	RelationalExpression	code < 0		8326701	0		<			
ANR	8327080	Identifier	code		8326701	0					
ANR	8327081	PrimaryExpression	0		8326701	1					
ANR	8327082	ReturnStatement	return code ;	220:24:7713:7724	8326701	1	True				
ANR	8327083	Identifier	code		8326701	0					
ANR	8327084	IfStatement	if ( pcs -> font -> storage == pcds_internal )		8326701	1					
ANR	8327085	Condition	pcs -> font -> storage == pcds_internal	222:20:7764:7798	8326701	0	True				
ANR	8327086	EqualityExpression	pcs -> font -> storage == pcds_internal		8326701	0		==			
ANR	8327087	PtrMemberAccess	pcs -> font -> storage		8326701	0					
ANR	8327088	PtrMemberAccess	pcs -> font		8326701	0					
ANR	8327089	Identifier	pcs		8326701	0					
ANR	8327090	Identifier	font		8326701	1					
ANR	8327091	Identifier	storage		8326701	1					
ANR	8327092	Identifier	pcds_internal		8326701	1					
ANR	8327093	CompoundStatement		78:57:3207:3207	8326701	1					
ANR	8327094	ReturnStatement	return pcl_make_resident_font_copy ( pcs ) ;	223:20:7823:7862	8326701	0	True				
ANR	8327095	CallExpression	pcl_make_resident_font_copy ( pcs )		8326701	0					
ANR	8327096	Callee	pcl_make_resident_font_copy		8326701	0					
ANR	8327097	Identifier	pcl_make_resident_font_copy		8326701	0					
ANR	8327098	ArgumentList	pcs		8326701	1					
ANR	8327099	Argument	pcs		8326701	0					
ANR	8327100	Identifier	pcs		8326701	0					
ANR	8327101	ElseStatement	else		8326701	0					
ANR	8327102	CompoundStatement		81:20:3315:3502	8326701	0					
ANR	8327103	IdentifierDeclStatement	"pl_font_t * plfont = pl_clone_font ( pcs -> font , pcs -> memory , ""pcl_font_control()"" ) ;"	225:20:7909:8096	8326701	0	True				
ANR	8327104	IdentifierDecl	"* plfont = pl_clone_font ( pcs -> font , pcs -> memory , ""pcl_font_control()"" )"		8326701	0					
ANR	8327105	IdentifierDeclType	pl_font_t *		8326701	0					
ANR	8327106	Identifier	plfont		8326701	1					
ANR	8327107	AssignmentExpression	"* plfont = pl_clone_font ( pcs -> font , pcs -> memory , ""pcl_font_control()"" )"		8326701	2		=			
ANR	8327108	Identifier	plfont		8326701	0					
ANR	8327109	CallExpression	"pl_clone_font ( pcs -> font , pcs -> memory , ""pcl_font_control()"" )"		8326701	1					
ANR	8327110	Callee	pl_clone_font		8326701	0					
ANR	8327111	Identifier	pl_clone_font		8326701	0					
ANR	8327112	ArgumentList	pcs -> font		8326701	1					
ANR	8327113	Argument	pcs -> font		8326701	0					
ANR	8327114	PtrMemberAccess	pcs -> font		8326701	0					
ANR	8327115	Identifier	pcs		8326701	0					
ANR	8327116	Identifier	font		8326701	1					
ANR	8327117	Argument	pcs -> memory		8326701	1					
ANR	8327118	PtrMemberAccess	pcs -> memory		8326701	0					
ANR	8327119	Identifier	pcs		8326701	0					
ANR	8327120	Identifier	memory		8326701	1					
ANR	8327121	Argument	"""pcl_font_control()"""		8326701	2					
ANR	8327122	PrimaryExpression	"""pcl_font_control()"""		8326701	0					
ANR	8327123	IfStatement	if ( plfont == 0 )		8326701	1					
ANR	8327124	Condition	plfont == 0	229:24:8123:8133	8326701	0	True				
ANR	8327125	EqualityExpression	plfont == 0		8326701	0		==			
ANR	8327126	Identifier	plfont		8326701	0					
ANR	8327127	PrimaryExpression	0		8326701	1					
ANR	8327128	CompoundStatement		85:37:3542:3542	8326701	1					
ANR	8327129	ExpressionStatement	"dmprintf ( pcs -> memory , ""pcsfont.c clone font FIXME\\n"" )"	230:24:8162:8215	8326701	0	True				
ANR	8327130	CallExpression	"dmprintf ( pcs -> memory , ""pcsfont.c clone font FIXME\\n"" )"		8326701	0					
ANR	8327131	Callee	dmprintf		8326701	0					
ANR	8327132	Identifier	dmprintf		8326701	0					
ANR	8327133	ArgumentList	pcs -> memory		8326701	1					
ANR	8327134	Argument	pcs -> memory		8326701	0					
ANR	8327135	PtrMemberAccess	pcs -> memory		8326701	0					
ANR	8327136	Identifier	pcs		8326701	0					
ANR	8327137	Identifier	memory		8326701	1					
ANR	8327138	Argument	"""pcsfont.c clone font FIXME\\n"""		8326701	1					
ANR	8327139	PrimaryExpression	"""pcsfont.c clone font FIXME\\n"""		8326701	0					
ANR	8327140	ReturnStatement	return 0 ;	231:24:8241:8249	8326701	1	True				
ANR	8327141	PrimaryExpression	0		8326701	0					
ANR	8327142	ExpressionStatement	"code = gs_definefont ( pcs -> font_dir , plfont -> pfont )"	233:20:8293:8343	8326701	2	True				
ANR	8327143	AssignmentExpression	"code = gs_definefont ( pcs -> font_dir , plfont -> pfont )"		8326701	0		=			
ANR	8327144	Identifier	code		8326701	0					
ANR	8327145	CallExpression	"gs_definefont ( pcs -> font_dir , plfont -> pfont )"		8326701	1					
ANR	8327146	Callee	gs_definefont		8326701	0					
ANR	8327147	Identifier	gs_definefont		8326701	0					
ANR	8327148	ArgumentList	pcs -> font_dir		8326701	1					
ANR	8327149	Argument	pcs -> font_dir		8326701	0					
ANR	8327150	PtrMemberAccess	pcs -> font_dir		8326701	0					
ANR	8327151	Identifier	pcs		8326701	0					
ANR	8327152	Identifier	font_dir		8326701	1					
ANR	8327153	Argument	plfont -> pfont		8326701	1					
ANR	8327154	PtrMemberAccess	plfont -> pfont		8326701	0					
ANR	8327155	Identifier	plfont		8326701	0					
ANR	8327156	Identifier	pfont		8326701	1					
ANR	8327157	IfStatement	if ( code < 0 )		8326701	3					
ANR	8327158	Condition	code < 0	234:24:8369:8376	8326701	0	True				
ANR	8327159	RelationalExpression	code < 0		8326701	0		<			
ANR	8327160	Identifier	code		8326701	0					
ANR	8327161	PrimaryExpression	0		8326701	1					
ANR	8327162	ReturnStatement	return code ;	235:24:8403:8414	8326701	1	True				
ANR	8327163	Identifier	code		8326701	0					
ANR	8327164	IfStatement	if ( plfont -> scaling_technology == plfst_TrueType )		8326701	4					
ANR	8327165	Condition	plfont -> scaling_technology == plfst_TrueType	236:24:8440:8483	8326701	0	True				
ANR	8327166	EqualityExpression	plfont -> scaling_technology == plfst_TrueType		8326701	0		==			
ANR	8327167	PtrMemberAccess	plfont -> scaling_technology		8326701	0					
ANR	8327168	Identifier	plfont		8326701	0					
ANR	8327169	Identifier	scaling_technology		8326701	1					
ANR	8327170	Identifier	plfst_TrueType		8326701	1					
ANR	8327171	ExpressionStatement	"code = pl_fapi_passfont ( plfont , 0 , NULL , NULL , NULL , 0 )"	237:24:8510:8565	8326701	1	True				
ANR	8327172	AssignmentExpression	"code = pl_fapi_passfont ( plfont , 0 , NULL , NULL , NULL , 0 )"		8326701	0		=			
ANR	8327173	Identifier	code		8326701	0					
ANR	8327174	CallExpression	"pl_fapi_passfont ( plfont , 0 , NULL , NULL , NULL , 0 )"		8326701	1					
ANR	8327175	Callee	pl_fapi_passfont		8326701	0					
ANR	8327176	Identifier	pl_fapi_passfont		8326701	0					
ANR	8327177	ArgumentList	plfont		8326701	1					
ANR	8327178	Argument	plfont		8326701	0					
ANR	8327179	Identifier	plfont		8326701	0					
ANR	8327180	Argument	0		8326701	1					
ANR	8327181	PrimaryExpression	0		8326701	0					
ANR	8327182	Argument	NULL		8326701	2					
ANR	8327183	Identifier	NULL		8326701	0					
ANR	8327184	Argument	NULL		8326701	3					
ANR	8327185	Identifier	NULL		8326701	0					
ANR	8327186	Argument	NULL		8326701	4					
ANR	8327187	Identifier	NULL		8326701	0					
ANR	8327188	Argument	0		8326701	5					
ANR	8327189	PrimaryExpression	0		8326701	0					
ANR	8327190	IfStatement	if ( code < 0 )		8326701	5					
ANR	8327191	Condition	code < 0	238:24:8591:8598	8326701	0	True				
ANR	8327192	RelationalExpression	code < 0		8326701	0		<			
ANR	8327193	Identifier	code		8326701	0					
ANR	8327194	PrimaryExpression	0		8326701	1					
ANR	8327195	ReturnStatement	return code ;	239:24:8625:8636	8326701	1	True				
ANR	8327196	Identifier	code		8326701	0					
ANR	8327197	ExpressionStatement	"code = pcl_delete_soft_font ( pcs , current_font_id , current_font_id_size , NULL )"	241:20:8659:8777	8326701	6	True				
ANR	8327198	AssignmentExpression	"code = pcl_delete_soft_font ( pcs , current_font_id , current_font_id_size , NULL )"		8326701	0		=			
ANR	8327199	Identifier	code		8326701	0					
ANR	8327200	CallExpression	"pcl_delete_soft_font ( pcs , current_font_id , current_font_id_size , NULL )"		8326701	1					
ANR	8327201	Callee	pcl_delete_soft_font		8326701	0					
ANR	8327202	Identifier	pcl_delete_soft_font		8326701	0					
ANR	8327203	ArgumentList	pcs		8326701	1					
ANR	8327204	Argument	pcs		8326701	0					
ANR	8327205	Identifier	pcs		8326701	0					
ANR	8327206	Argument	current_font_id		8326701	1					
ANR	8327207	Identifier	current_font_id		8326701	0					
ANR	8327208	Argument	current_font_id_size		8326701	2					
ANR	8327209	Identifier	current_font_id_size		8326701	0					
ANR	8327210	Argument	NULL		8326701	3					
ANR	8327211	Identifier	NULL		8326701	0					
ANR	8327212	IfStatement	if ( code < 0 )		8326701	7					
ANR	8327213	Condition	code < 0	243:24:8803:8810	8326701	0	True				
ANR	8327214	RelationalExpression	code < 0		8326701	0		<			
ANR	8327215	Identifier	code		8326701	0					
ANR	8327216	PrimaryExpression	0		8326701	1					
ANR	8327217	ReturnStatement	return code ;	244:24:8837:8848	8326701	1	True				
ANR	8327218	Identifier	code		8326701	0					
ANR	8327219	ExpressionStatement	plfont -> storage = pcds_temporary	245:20:8870:8902	8326701	8	True				
ANR	8327220	AssignmentExpression	plfont -> storage = pcds_temporary		8326701	0		=			
ANR	8327221	PtrMemberAccess	plfont -> storage		8326701	0					
ANR	8327222	Identifier	plfont		8326701	0					
ANR	8327223	Identifier	storage		8326701	1					
ANR	8327224	Identifier	pcds_temporary		8326701	1					
ANR	8327225	ExpressionStatement	plfont -> data_are_permanent = false	246:20:8924:8958	8326701	9	True				
ANR	8327226	AssignmentExpression	plfont -> data_are_permanent = false		8326701	0		=			
ANR	8327227	PtrMemberAccess	plfont -> data_are_permanent		8326701	0					
ANR	8327228	Identifier	plfont		8326701	0					
ANR	8327229	Identifier	data_are_permanent		8326701	1					
ANR	8327230	Identifier	false		8326701	1					
ANR	8327231	ExpressionStatement	"code = pl_dict_put ( & pcs -> soft_fonts , current_font_id , current_font_id_size , plfont )"	247:20:8980:9095	8326701	10	True				
ANR	8327232	AssignmentExpression	"code = pl_dict_put ( & pcs -> soft_fonts , current_font_id , current_font_id_size , plfont )"		8326701	0		=			
ANR	8327233	Identifier	code		8326701	0					
ANR	8327234	CallExpression	"pl_dict_put ( & pcs -> soft_fonts , current_font_id , current_font_id_size , plfont )"		8326701	1					
ANR	8327235	Callee	pl_dict_put		8326701	0					
ANR	8327236	Identifier	pl_dict_put		8326701	0					
ANR	8327237	ArgumentList	& pcs -> soft_fonts		8326701	1					
ANR	8327238	Argument	& pcs -> soft_fonts		8326701	0					
ANR	8327239	UnaryOperationExpression	& pcs -> soft_fonts		8326701	0					
ANR	8327240	UnaryOperator	&		8326701	0					
ANR	8327241	PtrMemberAccess	pcs -> soft_fonts		8326701	1					
ANR	8327242	Identifier	pcs		8326701	0					
ANR	8327243	Identifier	soft_fonts		8326701	1					
ANR	8327244	Argument	current_font_id		8326701	1					
ANR	8327245	Identifier	current_font_id		8326701	0					
ANR	8327246	Argument	current_font_id_size		8326701	2					
ANR	8327247	Identifier	current_font_id_size		8326701	0					
ANR	8327248	Argument	plfont		8326701	3					
ANR	8327249	Identifier	plfont		8326701	0					
ANR	8327250	BreakStatement	break ;	251:12:9141:9146	8326701	26	True				
ANR	8327251	Label	default :	252:8:9156:9163	8326701	27	True				
ANR	8327252	Identifier	default		8326701	0					
ANR	8327253	ReturnStatement	return 0 ;	253:12:9177:9185	8326701	28	True				
ANR	8327254	PrimaryExpression	0		8326701	0					
ANR	8327255	ReturnStatement	return code ;	255:4:9197:9208	8326701	5	True				
ANR	8327256	Identifier	code		8326701	0					
ANR	8327257	ReturnType	static int		8326701	1					
ANR	8327258	Identifier	pcl_font_control		8326701	2					
ANR	8327259	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8326701	3					
ANR	8327260	Parameter	pcl_args_t * pargs	144:17:4554:4571	8326701	0	True				
ANR	8327261	ParameterType	pcl_args_t *		8326701	0					
ANR	8327262	Identifier	pargs		8326701	1					
ANR	8327263	Parameter	pcl_state_t * pcs	144:37:4574:4590	8326701	1	True				
ANR	8327264	ParameterType	pcl_state_t *		8326701	0					
ANR	8327265	Identifier	pcs		8326701	1					
ANR	8327266	CFGEntryNode	ENTRY		8326701		True				
ANR	8327267	CFGExitNode	EXIT		8326701		True				
ANR	8327268	Symbol	pl_fapi_passfont		8326701						
ANR	8327269	Symbol	plfont -> scaling_technology		8326701						
ANR	8327270	Symbol	& value		8326701						
ANR	8327271	Symbol	* pcs		8326701						
ANR	8327272	Symbol	pjl_proc_register_permanent_soft_font_addition		8326701						
ANR	8327273	Symbol	plfont		8326701						
ANR	8327274	Symbol	plfont -> data_are_permanent		8326701						
ANR	8327275	Symbol	pcs -> font		8326701						
ANR	8327276	Symbol	gs_definefont		8326701						
ANR	8327277	Symbol	& denum		8326701						
ANR	8327278	Symbol	pargs		8326701						
ANR	8327279	Symbol	& pcs -> soft_fonts		8326701						
ANR	8327280	Symbol	pcs -> memory		8326701						
ANR	8327281	Symbol	pcds_permanent		8326701						
ANR	8327282	Symbol	( ( pl_font_t * ) value ) -> storage		8326701						
ANR	8327283	Symbol	current_font_id_size		8326701						
ANR	8327284	Symbol	NULL		8326701						
ANR	8327285	Symbol	pcds_internal		8326701						
ANR	8327286	Symbol	plfont -> storage		8326701						
ANR	8327287	Symbol	( ( pl_font_t * ) value ) -> params . pjl_font_number		8326701						
ANR	8327288	Symbol	pl_clone_font		8326701						
ANR	8327289	Symbol	pcs -> font_selection		8326701						
ANR	8327290	Symbol	pcl_recompute_font		8326701						
ANR	8327291	Symbol	* * pcs		8326701						
ANR	8327292	Symbol	pcs -> font_selected		8326701						
ANR	8327293	Symbol	current_font_id		8326701						
ANR	8327294	Symbol	true		8326701						
ANR	8327295	Symbol	pcs -> font -> storage		8326701						
ANR	8327296	Symbol	plfst_TrueType		8326701						
ANR	8327297	Symbol	pl_dict_put		8326701						
ANR	8327298	Symbol	pcl_make_resident_font_copy		8326701						
ANR	8327299	Symbol	& key		8326701						
ANR	8327300	Symbol	pcs -> font_dir		8326701						
ANR	8327301	Symbol	code		8326701						
ANR	8327302	Symbol	pcs -> pjls		8326701						
ANR	8327303	Symbol	key . size		8326701						
ANR	8327304	Symbol	pcl_delete_soft_font		8326701						
ANR	8327305	Symbol	denum		8326701						
ANR	8327306	Symbol	value		8326701						
ANR	8327307	Symbol	key		8326701						
ANR	8327308	Symbol	pcs		8326701						
ANR	8327309	Symbol	key . data		8326701						
ANR	8327310	Symbol	false		8326701						
ANR	8327311	Symbol	* pcs -> font_selection		8326701						
ANR	8327312	Symbol	* pcs -> font_selected		8326701						
ANR	8327313	Symbol	( ( pl_font_t * ) value ) -> params		8326701						
ANR	8327314	Symbol	* pcs -> font		8326701						
ANR	8327315	Symbol	uint_arg		8326701						
ANR	8327316	Symbol	pl_dict_enum_next		8326701						
ANR	8327317	Symbol	pcds_temporary		8326701						
ANR	8327318	Symbol	plfont -> pfont		8326701						
ANR	8327319	Symbol	pcs -> font_selection [ pcs -> font_selected ] . font		8326701						
ANR	8327320	Symbol	pl_dict_find_no_stack		8326701						
ANR	8327321	Symbol	* value		8326701						
ANR	8327322	Symbol	pcs -> character_code		8326701						
ANR	8327323	Symbol	* plfont		8326701						
ANR	8327324	Function	pcl_font_header	258:0:9213:19378							
ANR	8327325	FunctionDef	"pcl_font_header (pcl_args_t * pargs , pcl_state_t * pcs)"		8327324	0					
ANR	8327326	CompoundStatement		260:0:9324:19378	8327324	0					
ANR	8327327	IdentifierDeclStatement	uint count = uint_arg ( pargs ) ;	261:4:9330:9358	8327324	0	True				
ANR	8327328	IdentifierDecl	count = uint_arg ( pargs )		8327324	0					
ANR	8327329	IdentifierDeclType	uint		8327324	0					
ANR	8327330	Identifier	count		8327324	1					
ANR	8327331	AssignmentExpression	count = uint_arg ( pargs )		8327324	2		=			
ANR	8327332	Identifier	count		8327324	0					
ANR	8327333	CallExpression	uint_arg ( pargs )		8327324	1					
ANR	8327334	Callee	uint_arg		8327324	0					
ANR	8327335	Identifier	uint_arg		8327324	0					
ANR	8327336	ArgumentList	pargs		8327324	1					
ANR	8327337	Argument	pargs		8327324	0					
ANR	8327338	Identifier	pargs		8327324	0					
ANR	8327339	IdentifierDeclStatement	const byte * data = arg_data ( pargs ) ;	262:4:9364:9398	8327324	1	True				
ANR	8327340	IdentifierDecl	* data = arg_data ( pargs )		8327324	0					
ANR	8327341	IdentifierDeclType	const byte *		8327324	0					
ANR	8327342	Identifier	data		8327324	1					
ANR	8327343	AssignmentExpression	* data = arg_data ( pargs )		8327324	2		=			
ANR	8327344	Identifier	data		8327324	0					
ANR	8327345	CallExpression	arg_data ( pargs )		8327324	1					
ANR	8327346	Callee	arg_data		8327324	0					
ANR	8327347	Identifier	arg_data		8327324	0					
ANR	8327348	ArgumentList	pargs		8327324	1					
ANR	8327349	Argument	pargs		8327324	0					
ANR	8327350	Identifier	pargs		8327324	0					
ANR	8327351	IdentifierDeclStatement	pcl_font_header_t * pfh = ( pcl_font_header_t * ) data ;	263:4:9404:9455	8327324	2	True				
ANR	8327352	IdentifierDecl	* pfh = ( pcl_font_header_t * ) data		8327324	0					
ANR	8327353	IdentifierDeclType	pcl_font_header_t *		8327324	0					
ANR	8327354	Identifier	pfh		8327324	1					
ANR	8327355	AssignmentExpression	* pfh = ( pcl_font_header_t * ) data		8327324	2		=			
ANR	8327356	Identifier	pfh		8327324	0					
ANR	8327357	CastExpression	( pcl_font_header_t * ) data		8327324	1					
ANR	8327358	CastTarget	pcl_font_header_t *		8327324	0					
ANR	8327359	Identifier	data		8327324	1					
ANR	8327360	IdentifierDeclStatement	uint desc_size ;	264:4:9461:9475	8327324	3	True				
ANR	8327361	IdentifierDecl	desc_size		8327324	0					
ANR	8327362	IdentifierDeclType	uint		8327324	0					
ANR	8327363	Identifier	desc_size		8327324	1					
ANR	8327364	IdentifierDeclStatement	pl_font_scaling_technology_t fst ;	265:4:9481:9513	8327324	4	True				
ANR	8327365	IdentifierDecl	fst		8327324	0					
ANR	8327366	IdentifierDeclType	pl_font_scaling_technology_t		8327324	0					
ANR	8327367	Identifier	fst		8327324	1					
ANR	8327368	IdentifierDeclStatement	gs_memory_t * mem = pcs -> memory ;	266:4:9519:9549	8327324	5	True				
ANR	8327369	IdentifierDecl	* mem = pcs -> memory		8327324	0					
ANR	8327370	IdentifierDeclType	gs_memory_t *		8327324	0					
ANR	8327371	Identifier	mem		8327324	1					
ANR	8327372	AssignmentExpression	* mem = pcs -> memory		8327324	2		=			
ANR	8327373	Identifier	mem		8327324	0					
ANR	8327374	PtrMemberAccess	pcs -> memory		8327324	1					
ANR	8327375	Identifier	pcs		8327324	0					
ANR	8327376	Identifier	memory		8327324	1					
ANR	8327377	IdentifierDeclStatement	pl_font_t * plfont ;	267:4:9555:9572	8327324	6	True				
ANR	8327378	IdentifierDecl	* plfont		8327324	0					
ANR	8327379	IdentifierDeclType	pl_font_t *		8327324	0					
ANR	8327380	Identifier	plfont		8327324	1					
ANR	8327381	IdentifierDeclStatement	byte * header ;	268:4:9578:9590	8327324	7	True				
ANR	8327382	IdentifierDecl	* header		8327324	0					
ANR	8327383	IdentifierDeclType	byte *		8327324	0					
ANR	8327384	Identifier	header		8327324	1					
ANR	8327385	IdentifierDeclStatement	int code ;	269:4:9596:9604	8327324	8	True				
ANR	8327386	IdentifierDecl	code		8327324	0					
ANR	8327387	IdentifierDeclType	int		8327324	0					
ANR	8327388	Identifier	code		8327324	1					
ANR	8327389	IdentifierDeclStatement	bool has_checksum ;	270:4:9610:9627	8327324	9	True				
ANR	8327390	IdentifierDecl	has_checksum		8327324	0					
ANR	8327391	IdentifierDeclType	bool		8327324	0					
ANR	8327392	Identifier	has_checksum		8327324	1					
ANR	8327393	IfStatement	if ( gs_debug_c ( 'i' ) )		8327324	10					
ANR	8327394	Condition	gs_debug_c ( 'i' )	273:8:9651:9665	8327324	0	True				
ANR	8327395	CallExpression	gs_debug_c ( 'i' )		8327324	0					
ANR	8327396	Callee	gs_debug_c		8327324	0					
ANR	8327397	Identifier	gs_debug_c		8327324	0					
ANR	8327398	ArgumentList	'i'		8327324	1					
ANR	8327399	Argument	'i'		8327324	0					
ANR	8327400	PrimaryExpression	'i'		8327324	0					
ANR	8327401	CompoundStatement		14:25:343:343	8327324	1					
ANR	8327402	ExpressionStatement	"pcl_debug_dump_data ( pcs -> memory , arg_data ( pargs ) , uint_arg ( pargs ) )"	274:8:9678:9744	8327324	0	True				
ANR	8327403	CallExpression	"pcl_debug_dump_data ( pcs -> memory , arg_data ( pargs ) , uint_arg ( pargs ) )"		8327324	0					
ANR	8327404	Callee	pcl_debug_dump_data		8327324	0					
ANR	8327405	Identifier	pcl_debug_dump_data		8327324	0					
ANR	8327406	ArgumentList	pcs -> memory		8327324	1					
ANR	8327407	Argument	pcs -> memory		8327324	0					
ANR	8327408	PtrMemberAccess	pcs -> memory		8327324	0					
ANR	8327409	Identifier	pcs		8327324	0					
ANR	8327410	Identifier	memory		8327324	1					
ANR	8327411	Argument	arg_data ( pargs )		8327324	1					
ANR	8327412	CallExpression	arg_data ( pargs )		8327324	0					
ANR	8327413	Callee	arg_data		8327324	0					
ANR	8327414	Identifier	arg_data		8327324	0					
ANR	8327415	ArgumentList	pargs		8327324	1					
ANR	8327416	Argument	pargs		8327324	0					
ANR	8327417	Identifier	pargs		8327324	0					
ANR	8327418	Argument	uint_arg ( pargs )		8327324	2					
ANR	8327419	CallExpression	uint_arg ( pargs )		8327324	0					
ANR	8327420	Callee	uint_arg		8327324	0					
ANR	8327421	Identifier	uint_arg		8327324	0					
ANR	8327422	ArgumentList	pargs		8327324	1					
ANR	8327423	Argument	pargs		8327324	0					
ANR	8327424	Identifier	pargs		8327324	0					
ANR	8327425	IfStatement	if ( count < 64 && pfh -> HeaderFormat != pcfh_bitmap )		8327324	11					
ANR	8327426	Condition	count < 64 && pfh -> HeaderFormat != pcfh_bitmap	278:8:9768:9813	8327324	0	True				
ANR	8327427	AndExpression	count < 64 && pfh -> HeaderFormat != pcfh_bitmap		8327324	0		&&			
ANR	8327428	RelationalExpression	count < 64		8327324	0		<			
ANR	8327429	Identifier	count		8327324	0					
ANR	8327430	PrimaryExpression	64		8327324	1					
ANR	8327431	EqualityExpression	pfh -> HeaderFormat != pcfh_bitmap		8327324	1		!=			
ANR	8327432	PtrMemberAccess	pfh -> HeaderFormat		8327324	0					
ANR	8327433	Identifier	pfh		8327324	0					
ANR	8327434	Identifier	HeaderFormat		8327324	1					
ANR	8327435	Identifier	pcfh_bitmap		8327324	1					
ANR	8327436	ReturnStatement	return e_Range ;	279:8:9824:9838	8327324	1	True				
ANR	8327437	Identifier	e_Range		8327324	0					
ANR	8327438	ExpressionStatement	desc_size = ( pfh -> FontDescriptorSize [ 0 ] << 8 ) + pfh -> FontDescriptorSize [ 1 ]	280:4:9929:10011	8327324	12	True				
ANR	8327439	AssignmentExpression	desc_size = ( pfh -> FontDescriptorSize [ 0 ] << 8 ) + pfh -> FontDescriptorSize [ 1 ]		8327324	0		=			
ANR	8327440	Identifier	desc_size		8327324	0					
ANR	8327441	AdditiveExpression	( pfh -> FontDescriptorSize [ 0 ] << 8 ) + pfh -> FontDescriptorSize [ 1 ]		8327324	1		+			
ANR	8327442	ShiftExpression	pfh -> FontDescriptorSize [ 0 ] << 8		8327324	0		<<			
ANR	8327443	ArrayIndexing	pfh -> FontDescriptorSize [ 0 ]		8327324	0					
ANR	8327444	PtrMemberAccess	pfh -> FontDescriptorSize		8327324	0					
ANR	8327445	Identifier	pfh		8327324	0					
ANR	8327446	Identifier	FontDescriptorSize		8327324	1					
ANR	8327447	PrimaryExpression	0		8327324	1					
ANR	8327448	PrimaryExpression	8		8327324	1					
ANR	8327449	ArrayIndexing	pfh -> FontDescriptorSize [ 1 ]		8327324	1					
ANR	8327450	PtrMemberAccess	pfh -> FontDescriptorSize		8327324	0					
ANR	8327451	Identifier	pfh		8327324	0					
ANR	8327452	Identifier	FontDescriptorSize		8327324	1					
ANR	8327453	PrimaryExpression	1		8327324	1					
ANR	8327454	SwitchStatement	switch ( pfh -> HeaderFormat )		8327324	13					
ANR	8327455	Condition	pfh -> HeaderFormat	283:12:10066:10082	8327324	0	True				
ANR	8327456	PtrMemberAccess	pfh -> HeaderFormat		8327324	0					
ANR	8327457	Identifier	pfh		8327324	0					
ANR	8327458	Identifier	HeaderFormat		8327324	1					
ANR	8327459	CompoundStatement		24:31:760:760	8327324	1					
ANR	8327460	Label	case pcfh_bitmap :	284:8:10095:10111	8327324	0	True				
ANR	8327461	Identifier	pcfh_bitmap		8327324	0					
ANR	8327462	Label	case pcfh_resolution_bitmap :	285:8:10121:10148	8327324	1	True				
ANR	8327463	Identifier	pcfh_resolution_bitmap		8327324	0					
ANR	8327464	ExpressionStatement	fst = plfst_bitmap	286:12:10162:10180	8327324	2	True				
ANR	8327465	AssignmentExpression	fst = plfst_bitmap		8327324	0		=			
ANR	8327466	Identifier	fst		8327324	0					
ANR	8327467	Identifier	plfst_bitmap		8327324	1					
ANR	8327468	ExpressionStatement	has_checksum = false	287:12:10194:10214	8327324	3	True				
ANR	8327469	AssignmentExpression	has_checksum = false		8327324	0		=			
ANR	8327470	Identifier	has_checksum		8327324	0					
ANR	8327471	Identifier	false		8327324	1					
ANR	8327472	BreakStatement	break ;	288:12:10228:10233	8327324	4	True				
ANR	8327473	Label	case pcfh_intellifont_bound :	289:8:10243:10270	8327324	5	True				
ANR	8327474	Identifier	pcfh_intellifont_bound		8327324	0					
ANR	8327475	Label	case pcfh_intellifont_unbound :	290:8:10280:10309	8327324	6	True				
ANR	8327476	Identifier	pcfh_intellifont_unbound		8327324	0					
ANR	8327477	ExpressionStatement	fst = plfst_Intellifont	291:12:10323:10346	8327324	7	True				
ANR	8327478	AssignmentExpression	fst = plfst_Intellifont		8327324	0		=			
ANR	8327479	Identifier	fst		8327324	0					
ANR	8327480	Identifier	plfst_Intellifont		8327324	1					
ANR	8327481	ExpressionStatement	has_checksum = false	297:12:10663:10683	8327324	8	True				
ANR	8327482	AssignmentExpression	has_checksum = false		8327324	0		=			
ANR	8327483	Identifier	has_checksum		8327324	0					
ANR	8327484	Identifier	false		8327324	1					
ANR	8327485	BreakStatement	break ;	298:12:10697:10702	8327324	9	True				
ANR	8327486	Label	case pcfh_truetype :	299:8:10712:10730	8327324	10	True				
ANR	8327487	Identifier	pcfh_truetype		8327324	0					
ANR	8327488	Label	case pcfh_truetype_large :	300:8:10740:10764	8327324	11	True				
ANR	8327489	Identifier	pcfh_truetype_large		8327324	0					
ANR	8327490	ExpressionStatement	fst = plfst_TrueType	301:12:10778:10798	8327324	12	True				
ANR	8327491	AssignmentExpression	fst = plfst_TrueType		8327324	0		=			
ANR	8327492	Identifier	fst		8327324	0					
ANR	8327493	Identifier	plfst_TrueType		8327324	1					
ANR	8327494	ExpressionStatement	has_checksum = true	302:12:10812:10831	8327324	13	True				
ANR	8327495	AssignmentExpression	has_checksum = true		8327324	0		=			
ANR	8327496	Identifier	has_checksum		8327324	0					
ANR	8327497	Identifier	true		8327324	1					
ANR	8327498	BreakStatement	break ;	303:12:10845:10850	8327324	14	True				
ANR	8327499	Label	default :	304:8:10860:10867	8327324	15	True				
ANR	8327500	Identifier	default		8327324	0					
ANR	8327501	ReturnStatement	return 0 ;	306:12:10923:10931	8327324	16	True				
ANR	8327502	PrimaryExpression	0		8327324	0					
ANR	8327503	IfStatement	if ( has_checksum )		8327324	14					
ANR	8327504	Condition	has_checksum	318:8:11300:11311	8327324	0	True				
ANR	8327505	Identifier	has_checksum		8327324	0					
ANR	8327506	CompoundStatement		61:8:2022:2027	8327324	1					
ANR	8327507	IdentifierDeclStatement	ulong sum = 0 ;	319:8:11324:11337	8327324	0	True				
ANR	8327508	IdentifierDecl	sum = 0		8327324	0					
ANR	8327509	IdentifierDeclType	ulong		8327324	0					
ANR	8327510	Identifier	sum		8327324	1					
ANR	8327511	AssignmentExpression	sum = 0		8327324	2		=			
ANR	8327512	Identifier	sum		8327324	0					
ANR	8327513	PrimaryExpression	0		8327324	1					
ANR	8327514	IdentifierDeclStatement	int i ;	320:8:11347:11352	8327324	1	True				
ANR	8327515	IdentifierDecl	i		8327324	0					
ANR	8327516	IdentifierDeclType	int		8327324	0					
ANR	8327517	Identifier	i		8327324	1					
ANR	8327518	ForStatement	for ( i = count - 1 ; i >= 64 ; i -- )		8327324	2					
ANR	8327519	ForInit	i = count - 1 ;	322:13:11368:11381	8327324	0	True				
ANR	8327520	AssignmentExpression	i = count - 1		8327324	0		=			
ANR	8327521	Identifier	i		8327324	0					
ANR	8327522	AdditiveExpression	count - 1		8327324	1		-			
ANR	8327523	Identifier	count		8327324	0					
ANR	8327524	PrimaryExpression	1		8327324	1					
ANR	8327525	Condition	i >= 64	322:28:11383:11389	8327324	1	True				
ANR	8327526	RelationalExpression	i >= 64		8327324	0		>=			
ANR	8327527	Identifier	i		8327324	0					
ANR	8327528	PrimaryExpression	64		8327324	1					
ANR	8327529	PostIncDecOperationExpression	i --	322:37:11392:11394	8327324	2	True				
ANR	8327530	Identifier	i		8327324	0					
ANR	8327531	IncDec	--		8327324	1					
ANR	8327532	CompoundStatement		63:42:2072:2072	8327324	3					
ANR	8327533	ExpressionStatement	sum += data [ i ]	323:12:11411:11425	8327324	0	True				
ANR	8327534	AssignmentExpression	sum += data [ i ]		8327324	0		+=			
ANR	8327535	Identifier	sum		8327324	0					
ANR	8327536	ArrayIndexing	data [ i ]		8327324	1					
ANR	8327537	Identifier	data		8327324	0					
ANR	8327538	Identifier	i		8327324	1					
ANR	8327539	ExpressionStatement	sum %= 256	324:12:11439:11449	8327324	1	True				
ANR	8327540	AssignmentExpression	sum %= 256		8327324	0		%=			
ANR	8327541	Identifier	sum		8327324	0					
ANR	8327542	PrimaryExpression	256		8327324	1					
ANR	8327543	IfStatement	if ( sum != 0 )		8327324	3					
ANR	8327544	Condition	sum != 0	327:12:11474:11481	8327324	0	True				
ANR	8327545	EqualityExpression	sum != 0		8327324	0		!=			
ANR	8327546	Identifier	sum		8327324	0					
ANR	8327547	PrimaryExpression	0		8327324	1					
ANR	8327548	CompoundStatement		68:22:2159:2159	8327324	1					
ANR	8327549	ExpressionStatement	"dmprintf1 ( pcs -> memory , ""corrupt font sum=%ld\\n"" , sum )"	328:12:11498:11551	8327324	0	True				
ANR	8327550	CallExpression	"dmprintf1 ( pcs -> memory , ""corrupt font sum=%ld\\n"" , sum )"		8327324	0					
ANR	8327551	Callee	dmprintf1		8327324	0					
ANR	8327552	Identifier	dmprintf1		8327324	0					
ANR	8327553	ArgumentList	pcs -> memory		8327324	1					
ANR	8327554	Argument	pcs -> memory		8327324	0					
ANR	8327555	PtrMemberAccess	pcs -> memory		8327324	0					
ANR	8327556	Identifier	pcs		8327324	0					
ANR	8327557	Identifier	memory		8327324	1					
ANR	8327558	Argument	"""corrupt font sum=%ld\\n"""		8327324	1					
ANR	8327559	PrimaryExpression	"""corrupt font sum=%ld\\n"""		8327324	0					
ANR	8327560	Argument	sum		8327324	2					
ANR	8327561	Identifier	sum		8327324	0					
ANR	8327562	ExpressionStatement	return_error ( gs_error_invalidfont )	329:12:11565:11599	8327324	1	True				
ANR	8327563	CallExpression	return_error ( gs_error_invalidfont )		8327324	0					
ANR	8327564	Callee	return_error		8327324	0					
ANR	8327565	Identifier	return_error		8327324	0					
ANR	8327566	ArgumentList	gs_error_invalidfont		8327324	1					
ANR	8327567	Argument	gs_error_invalidfont		8327324	0					
ANR	8327568	Identifier	gs_error_invalidfont		8327324	0					
ANR	8327569	ExpressionStatement	"code = pcl_delete_soft_font ( pcs , current_font_id , current_font_id_size , NULL )"	333:4:11670:11747	8327324	15	True				
ANR	8327570	AssignmentExpression	"code = pcl_delete_soft_font ( pcs , current_font_id , current_font_id_size , NULL )"		8327324	0		=			
ANR	8327571	Identifier	code		8327324	0					
ANR	8327572	CallExpression	"pcl_delete_soft_font ( pcs , current_font_id , current_font_id_size , NULL )"		8327324	1					
ANR	8327573	Callee	pcl_delete_soft_font		8327324	0					
ANR	8327574	Identifier	pcl_delete_soft_font		8327324	0					
ANR	8327575	ArgumentList	pcs		8327324	1					
ANR	8327576	Argument	pcs		8327324	0					
ANR	8327577	Identifier	pcs		8327324	0					
ANR	8327578	Argument	current_font_id		8327324	1					
ANR	8327579	Identifier	current_font_id		8327324	0					
ANR	8327580	Argument	current_font_id_size		8327324	2					
ANR	8327581	Identifier	current_font_id_size		8327324	0					
ANR	8327582	Argument	NULL		8327324	3					
ANR	8327583	Identifier	NULL		8327324	0					
ANR	8327584	IfStatement	if ( code < 0 )		8327324	16					
ANR	8327585	Condition	code < 0	334:8:11757:11764	8327324	0	True				
ANR	8327586	RelationalExpression	code < 0		8327324	0		<			
ANR	8327587	Identifier	code		8327324	0					
ANR	8327588	PrimaryExpression	0		8327324	1					
ANR	8327589	ReturnStatement	return code ;	335:8:11775:11786	8327324	1	True				
ANR	8327590	Identifier	code		8327324	0					
ANR	8327591	ExpressionStatement	"plfont = pl_alloc_font ( mem , ""pcl_font_header(pl_font_t)"" )"	337:4:11839:11896	8327324	17	True				
ANR	8327592	AssignmentExpression	"plfont = pl_alloc_font ( mem , ""pcl_font_header(pl_font_t)"" )"		8327324	0		=			
ANR	8327593	Identifier	plfont		8327324	0					
ANR	8327594	CallExpression	"pl_alloc_font ( mem , ""pcl_font_header(pl_font_t)"" )"		8327324	1					
ANR	8327595	Callee	pl_alloc_font		8327324	0					
ANR	8327596	Identifier	pl_alloc_font		8327324	0					
ANR	8327597	ArgumentList	mem		8327324	1					
ANR	8327598	Argument	mem		8327324	0					
ANR	8327599	Identifier	mem		8327324	0					
ANR	8327600	Argument	"""pcl_font_header(pl_font_t)"""		8327324	1					
ANR	8327601	PrimaryExpression	"""pcl_font_header(pl_font_t)"""		8327324	0					
ANR	8327602	ExpressionStatement	"header = gs_alloc_bytes ( mem , count , ""pcl_font_header(header)"" )"	338:4:11902:11964	8327324	18	True				
ANR	8327603	AssignmentExpression	"header = gs_alloc_bytes ( mem , count , ""pcl_font_header(header)"" )"		8327324	0		=			
ANR	8327604	Identifier	header		8327324	0					
ANR	8327605	CallExpression	"gs_alloc_bytes ( mem , count , ""pcl_font_header(header)"" )"		8327324	1					
ANR	8327606	Callee	gs_alloc_bytes		8327324	0					
ANR	8327607	Identifier	gs_alloc_bytes		8327324	0					
ANR	8327608	ArgumentList	mem		8327324	1					
ANR	8327609	Argument	mem		8327324	0					
ANR	8327610	Identifier	mem		8327324	0					
ANR	8327611	Argument	count		8327324	1					
ANR	8327612	Identifier	count		8327324	0					
ANR	8327613	Argument	"""pcl_font_header(header)"""		8327324	2					
ANR	8327614	PrimaryExpression	"""pcl_font_header(header)"""		8327324	0					
ANR	8327615	IfStatement	if ( plfont == 0 || header == 0 )		8327324	19					
ANR	8327616	Condition	plfont == 0 || header == 0	339:8:11974:11999	8327324	0	True				
ANR	8327617	OrExpression	plfont == 0 || header == 0		8327324	0		||			
ANR	8327618	EqualityExpression	plfont == 0		8327324	0		==			
ANR	8327619	Identifier	plfont		8327324	0					
ANR	8327620	PrimaryExpression	0		8327324	1					
ANR	8327621	EqualityExpression	header == 0		8327324	1		==			
ANR	8327622	Identifier	header		8327324	0					
ANR	8327623	PrimaryExpression	0		8327324	1					
ANR	8327624	ExpressionStatement	return_error ( e_Memory )	340:8:12010:12032	8327324	1	True				
ANR	8327625	CallExpression	return_error ( e_Memory )		8327324	0					
ANR	8327626	Callee	return_error		8327324	0					
ANR	8327627	Identifier	return_error		8327324	0					
ANR	8327628	ArgumentList	e_Memory		8327324	1					
ANR	8327629	Argument	e_Memory		8327324	0					
ANR	8327630	Identifier	e_Memory		8327324	0					
ANR	8327631	ExpressionStatement	"memcpy ( header , data , count )"	341:4:12038:12065	8327324	20	True				
ANR	8327632	CallExpression	"memcpy ( header , data , count )"		8327324	0					
ANR	8327633	Callee	memcpy		8327324	0					
ANR	8327634	Identifier	memcpy		8327324	0					
ANR	8327635	ArgumentList	header		8327324	1					
ANR	8327636	Argument	header		8327324	0					
ANR	8327637	Identifier	header		8327324	0					
ANR	8327638	Argument	data		8327324	1					
ANR	8327639	Identifier	data		8327324	0					
ANR	8327640	Argument	count		8327324	2					
ANR	8327641	Identifier	count		8327324	0					
ANR	8327642	ExpressionStatement	plfont -> storage = pcds_temporary	342:4:12071:12103	8327324	21	True				
ANR	8327643	AssignmentExpression	plfont -> storage = pcds_temporary		8327324	0		=			
ANR	8327644	PtrMemberAccess	plfont -> storage		8327324	0					
ANR	8327645	Identifier	plfont		8327324	0					
ANR	8327646	Identifier	storage		8327324	1					
ANR	8327647	Identifier	pcds_temporary		8327324	1					
ANR	8327648	ExpressionStatement	plfont -> data_are_permanent = false	343:4:12109:12143	8327324	22	True				
ANR	8327649	AssignmentExpression	plfont -> data_are_permanent = false		8327324	0		=			
ANR	8327650	PtrMemberAccess	plfont -> data_are_permanent		8327324	0					
ANR	8327651	Identifier	plfont		8327324	0					
ANR	8327652	Identifier	data_are_permanent		8327324	1					
ANR	8327653	Identifier	false		8327324	1					
ANR	8327654	IfStatement	if ( fst == plfst_Intellifont )		8327324	23					
ANR	8327655	Condition	fst == plfst_Intellifont	344:8:12153:12176	8327324	0	True				
ANR	8327656	EqualityExpression	fst == plfst_Intellifont		8327324	0		==			
ANR	8327657	Identifier	fst		8327324	0					
ANR	8327658	Identifier	plfst_Intellifont		8327324	1					
ANR	8327659	CompoundStatement		85:34:2854:2854	8327324	1					
ANR	8327660	IfStatement	if ( pfh -> HeaderFormat != pcfh_intellifont_bound )		8327324	0					
ANR	8327661	Condition	pfh -> HeaderFormat != pcfh_intellifont_bound	345:12:12193:12235	8327324	0	True				
ANR	8327662	EqualityExpression	pfh -> HeaderFormat != pcfh_intellifont_bound		8327324	0		!=			
ANR	8327663	PtrMemberAccess	pfh -> HeaderFormat		8327324	0					
ANR	8327664	Identifier	pfh		8327324	0					
ANR	8327665	Identifier	HeaderFormat		8327324	1					
ANR	8327666	Identifier	pcfh_intellifont_bound		8327324	1					
ANR	8327667	CompoundStatement		86:57:2913:2913	8327324	1					
ANR	8327668	ExpressionStatement	"memcpy ( plfont -> character_complement , & data [ 78 ] , 8 )"	347:12:12312:12362	8327324	0	True				
ANR	8327669	CallExpression	"memcpy ( plfont -> character_complement , & data [ 78 ] , 8 )"		8327324	0					
ANR	8327670	Callee	memcpy		8327324	0					
ANR	8327671	Identifier	memcpy		8327324	0					
ANR	8327672	ArgumentList	plfont -> character_complement		8327324	1					
ANR	8327673	Argument	plfont -> character_complement		8327324	0					
ANR	8327674	PtrMemberAccess	plfont -> character_complement		8327324	0					
ANR	8327675	Identifier	plfont		8327324	0					
ANR	8327676	Identifier	character_complement		8327324	1					
ANR	8327677	Argument	& data [ 78 ]		8327324	1					
ANR	8327678	UnaryOperationExpression	& data [ 78 ]		8327324	0					
ANR	8327679	UnaryOperator	&		8327324	0					
ANR	8327680	ArrayIndexing	data [ 78 ]		8327324	1					
ANR	8327681	Identifier	data		8327324	0					
ANR	8327682	PrimaryExpression	78		8327324	1					
ANR	8327683	Argument	8		8327324	2					
ANR	8327684	PrimaryExpression	8		8327324	0					
ANR	8327685	ExpressionStatement	plfont -> header = header	350:4:12384:12407	8327324	24	True				
ANR	8327686	AssignmentExpression	plfont -> header = header		8327324	0		=			
ANR	8327687	PtrMemberAccess	plfont -> header		8327324	0					
ANR	8327688	Identifier	plfont		8327324	0					
ANR	8327689	Identifier	header		8327324	1					
ANR	8327690	Identifier	header		8327324	1					
ANR	8327691	ExpressionStatement	plfont -> header_size = count	351:4:12413:12440	8327324	25	True				
ANR	8327692	AssignmentExpression	plfont -> header_size = count		8327324	0		=			
ANR	8327693	PtrMemberAccess	plfont -> header_size		8327324	0					
ANR	8327694	Identifier	plfont		8327324	0					
ANR	8327695	Identifier	header_size		8327324	1					
ANR	8327696	Identifier	count		8327324	1					
ANR	8327697	ExpressionStatement	plfont -> is_xl_format = false	352:4:12446:12474	8327324	26	True				
ANR	8327698	AssignmentExpression	plfont -> is_xl_format = false		8327324	0		=			
ANR	8327699	PtrMemberAccess	plfont -> is_xl_format		8327324	0					
ANR	8327700	Identifier	plfont		8327324	0					
ANR	8327701	Identifier	is_xl_format		8327324	1					
ANR	8327702	Identifier	false		8327324	1					
ANR	8327703	ExpressionStatement	plfont -> scaling_technology = fst	353:4:12480:12512	8327324	27	True				
ANR	8327704	AssignmentExpression	plfont -> scaling_technology = fst		8327324	0		=			
ANR	8327705	PtrMemberAccess	plfont -> scaling_technology		8327324	0					
ANR	8327706	Identifier	plfont		8327324	0					
ANR	8327707	Identifier	scaling_technology		8327324	1					
ANR	8327708	Identifier	fst		8327324	1					
ANR	8327709	ExpressionStatement	plfont -> font_type = ( pl_font_type_t ) pfh -> FontType	354:4:12518:12568	8327324	28	True				
ANR	8327710	AssignmentExpression	plfont -> font_type = ( pl_font_type_t ) pfh -> FontType		8327324	0		=			
ANR	8327711	PtrMemberAccess	plfont -> font_type		8327324	0					
ANR	8327712	Identifier	plfont		8327324	0					
ANR	8327713	Identifier	font_type		8327324	1					
ANR	8327714	CastExpression	( pl_font_type_t ) pfh -> FontType		8327324	1					
ANR	8327715	CastTarget	pl_font_type_t		8327324	0					
ANR	8327716	PtrMemberAccess	pfh -> FontType		8327324	1					
ANR	8327717	Identifier	pfh		8327324	0					
ANR	8327718	Identifier	FontType		8327324	1					
ANR	8327719	ExpressionStatement	plfont -> font_file = ( char * ) 0	355:4:12574:12603	8327324	29	True				
ANR	8327720	AssignmentExpression	plfont -> font_file = ( char * ) 0		8327324	0		=			
ANR	8327721	PtrMemberAccess	plfont -> font_file		8327324	0					
ANR	8327722	Identifier	plfont		8327324	0					
ANR	8327723	Identifier	font_file		8327324	1					
ANR	8327724	CastExpression	( char * ) 0		8327324	1					
ANR	8327725	CastTarget	char *		8327324	0					
ANR	8327726	PrimaryExpression	0		8327324	1					
ANR	8327727	ExpressionStatement	"code = pl_font_alloc_glyph_table ( plfont , 256 , mem , ""pcl_font_header(char table)"" )"	356:4:12609:12727	8327324	30	True				
ANR	8327728	AssignmentExpression	"code = pl_font_alloc_glyph_table ( plfont , 256 , mem , ""pcl_font_header(char table)"" )"		8327324	0		=			
ANR	8327729	Identifier	code		8327324	0					
ANR	8327730	CallExpression	"pl_font_alloc_glyph_table ( plfont , 256 , mem , ""pcl_font_header(char table)"" )"		8327324	1					
ANR	8327731	Callee	pl_font_alloc_glyph_table		8327324	0					
ANR	8327732	Identifier	pl_font_alloc_glyph_table		8327324	0					
ANR	8327733	ArgumentList	plfont		8327324	1					
ANR	8327734	Argument	plfont		8327324	0					
ANR	8327735	Identifier	plfont		8327324	0					
ANR	8327736	Argument	256		8327324	1					
ANR	8327737	PrimaryExpression	256		8327324	0					
ANR	8327738	Argument	mem		8327324	2					
ANR	8327739	Identifier	mem		8327324	0					
ANR	8327740	Argument	"""pcl_font_header(char table)"""		8327324	3					
ANR	8327741	PrimaryExpression	"""pcl_font_header(char table)"""		8327324	0					
ANR	8327742	IfStatement	if ( code < 0 )		8327324	31					
ANR	8327743	Condition	code < 0	358:8:12737:12744	8327324	0	True				
ANR	8327744	RelationalExpression	code < 0		8327324	0		<			
ANR	8327745	Identifier	code		8327324	0					
ANR	8327746	PrimaryExpression	0		8327324	1					
ANR	8327747	ReturnStatement	return code ;	359:8:12755:12766	8327324	1	True				
ANR	8327748	Identifier	code		8327324	0					
ANR	8327749	SwitchStatement	switch ( fst )		8327324	32					
ANR	8327750	Condition	fst	361:12:12814:12816	8327324	0	True				
ANR	8327751	Identifier	fst		8327324	0					
ANR	8327752	CompoundStatement		102:17:3494:3494	8327324	1					
ANR	8327753	Label	case plfst_bitmap :	362:8:12829:12846	8327324	0	True				
ANR	8327754	Identifier	plfst_bitmap		8327324	0					
ANR	8327755	CompoundStatement		105:16:3553:3572	8327324	1					
ANR	8327756	IdentifierDeclStatement	gs_font_base * pfont ;	364:16:12878:12897	8327324	0	True				
ANR	8327757	IdentifierDecl	* pfont		8327324	0					
ANR	8327758	IdentifierDeclType	gs_font_base *		8327324	0					
ANR	8327759	Identifier	pfont		8327324	1					
ANR	8327760	Label	bitmap :	366:14:12914:12920	8327324	1	True				
ANR	8327761	Identifier	bitmap		8327324	0					
ANR	8327762	ExpressionStatement	"pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pcl_font_header(bitmap font)"" )"	366:21:12921:13053	8327324	2	True				
ANR	8327763	AssignmentExpression	"pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pcl_font_header(bitmap font)"" )"		8327324	0		=			
ANR	8327764	Identifier	pfont		8327324	0					
ANR	8327765	CallExpression	"gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pcl_font_header(bitmap font)"" )"		8327324	1					
ANR	8327766	Callee	gs_alloc_struct		8327324	0					
ANR	8327767	Identifier	gs_alloc_struct		8327324	0					
ANR	8327768	ArgumentList	mem		8327324	1					
ANR	8327769	Argument	mem		8327324	0					
ANR	8327770	Identifier	mem		8327324	0					
ANR	8327771	Argument	gs_font_base		8327324	1					
ANR	8327772	Identifier	gs_font_base		8327324	0					
ANR	8327773	Argument	& st_gs_font_base		8327324	2					
ANR	8327774	UnaryOperationExpression	& st_gs_font_base		8327324	0					
ANR	8327775	UnaryOperator	&		8327324	0					
ANR	8327776	Identifier	st_gs_font_base		8327324	1					
ANR	8327777	Argument	"""pcl_font_header(bitmap font)"""		8327324	3					
ANR	8327778	PrimaryExpression	"""pcl_font_header(bitmap font)"""		8327324	0					
ANR	8327779	IfStatement	if ( pfont == 0 )		8327324	3					
ANR	8327780	Condition	pfont == 0	369:20:13076:13085	8327324	0	True				
ANR	8327781	EqualityExpression	pfont == 0		8327324	0		==			
ANR	8327782	Identifier	pfont		8327324	0					
ANR	8327783	PrimaryExpression	0		8327324	1					
ANR	8327784	ExpressionStatement	return_error ( e_Memory )	370:20:13108:13130	8327324	1	True				
ANR	8327785	CallExpression	return_error ( e_Memory )		8327324	0					
ANR	8327786	Callee	return_error		8327324	0					
ANR	8327787	Identifier	return_error		8327324	0					
ANR	8327788	ArgumentList	e_Memory		8327324	1					
ANR	8327789	Argument	e_Memory		8327324	0					
ANR	8327790	Identifier	e_Memory		8327324	0					
ANR	8327791	ExpressionStatement	"code = pl_fill_in_font ( ( gs_font * ) pfont , plfont , pcs -> font_dir , mem , ""nameless_font"" )"	371:16:13148:13290	8327324	4	True				
ANR	8327792	AssignmentExpression	"code = pl_fill_in_font ( ( gs_font * ) pfont , plfont , pcs -> font_dir , mem , ""nameless_font"" )"		8327324	0		=			
ANR	8327793	Identifier	code		8327324	0					
ANR	8327794	CallExpression	"pl_fill_in_font ( ( gs_font * ) pfont , plfont , pcs -> font_dir , mem , ""nameless_font"" )"		8327324	1					
ANR	8327795	Callee	pl_fill_in_font		8327324	0					
ANR	8327796	Identifier	pl_fill_in_font		8327324	0					
ANR	8327797	ArgumentList	( gs_font * ) pfont		8327324	1					
ANR	8327798	Argument	( gs_font * ) pfont		8327324	0					
ANR	8327799	CastExpression	( gs_font * ) pfont		8327324	0					
ANR	8327800	CastTarget	gs_font *		8327324	0					
ANR	8327801	Identifier	pfont		8327324	1					
ANR	8327802	Argument	plfont		8327324	1					
ANR	8327803	Identifier	plfont		8327324	0					
ANR	8327804	Argument	pcs -> font_dir		8327324	2					
ANR	8327805	PtrMemberAccess	pcs -> font_dir		8327324	0					
ANR	8327806	Identifier	pcs		8327324	0					
ANR	8327807	Identifier	font_dir		8327324	1					
ANR	8327808	Argument	mem		8327324	3					
ANR	8327809	Identifier	mem		8327324	0					
ANR	8327810	Argument	"""nameless_font"""		8327324	4					
ANR	8327811	PrimaryExpression	"""nameless_font"""		8327324	0					
ANR	8327812	IfStatement	if ( code < 0 )		8327324	5					
ANR	8327813	Condition	code < 0	374:20:13312:13319	8327324	0	True				
ANR	8327814	RelationalExpression	code < 0		8327324	0		<			
ANR	8327815	Identifier	code		8327324	0					
ANR	8327816	PrimaryExpression	0		8327324	1					
ANR	8327817	ReturnStatement	return code ;	375:20:13342:13353	8327324	1	True				
ANR	8327818	Identifier	code		8327324	0					
ANR	8327819	ExpressionStatement	"pl_fill_in_bitmap_font ( pfont , gs_next_ids ( mem , 1 ) )"	376:16:13371:13421	8327324	6	True				
ANR	8327820	CallExpression	"pl_fill_in_bitmap_font ( pfont , gs_next_ids ( mem , 1 ) )"		8327324	0					
ANR	8327821	Callee	pl_fill_in_bitmap_font		8327324	0					
ANR	8327822	Identifier	pl_fill_in_bitmap_font		8327324	0					
ANR	8327823	ArgumentList	pfont		8327324	1					
ANR	8327824	Argument	pfont		8327324	0					
ANR	8327825	Identifier	pfont		8327324	0					
ANR	8327826	Argument	"gs_next_ids ( mem , 1 )"		8327324	1					
ANR	8327827	CallExpression	"gs_next_ids ( mem , 1 )"		8327324	0					
ANR	8327828	Callee	gs_next_ids		8327324	0					
ANR	8327829	Identifier	gs_next_ids		8327324	0					
ANR	8327830	ArgumentList	mem		8327324	1					
ANR	8327831	Argument	mem		8327324	0					
ANR	8327832	Identifier	mem		8327324	0					
ANR	8327833	Argument	1		8327324	1					
ANR	8327834	PrimaryExpression	1		8327324	0					
ANR	8327835	IfStatement	if ( pfh -> HeaderFormat == pcfh_resolution_bitmap )		8327324	7					
ANR	8327836	Condition	pfh -> HeaderFormat == pcfh_resolution_bitmap	378:20:13506:13548	8327324	0	True				
ANR	8327837	EqualityExpression	pfh -> HeaderFormat == pcfh_resolution_bitmap		8327324	0		==			
ANR	8327838	PtrMemberAccess	pfh -> HeaderFormat		8327324	0					
ANR	8327839	Identifier	pfh		8327324	0					
ANR	8327840	Identifier	HeaderFormat		8327324	1					
ANR	8327841	Identifier	pcfh_resolution_bitmap		8327324	1					
ANR	8327842	CompoundStatement		119:65:4226:4226	8327324	1					
ANR	8327843	Statement	define	379:1:13554:13559	8327324	0	True				
ANR	8327844	Statement	pfhx	379:8:13561:13564	8327324	1	True				
ANR	8327845	Statement	(	379:13:13566:13566	8327324	2	True				
ANR	8327846	Statement	(	379:14:13567:13567	8327324	3	True				
ANR	8327847	Statement	const	379:15:13568:13572	8327324	4	True				
ANR	8327848	Statement	pcl_resolution_bitmap_header_t	379:21:13574:13603	8327324	5	True				
ANR	8327849	Statement	*	379:52:13605:13605	8327324	6	True				
ANR	8327850	Statement	)	379:53:13606:13606	8327324	7	True				
ANR	8327851	Statement	pfh	379:54:13607:13609	8327324	8	True				
ANR	8327852	Statement	)	379:57:13610:13610	8327324	9	True				
ANR	8327853	ExpressionStatement	plfont -> resolution . x = pl_get_uint16 ( pfhx -> XResolution )	380:20:13632:13687	8327324	10	True				
ANR	8327854	AssignmentExpression	plfont -> resolution . x = pl_get_uint16 ( pfhx -> XResolution )		8327324	0		=			
ANR	8327855	MemberAccess	plfont -> resolution . x		8327324	0					
ANR	8327856	PtrMemberAccess	plfont -> resolution		8327324	0					
ANR	8327857	Identifier	plfont		8327324	0					
ANR	8327858	Identifier	resolution		8327324	1					
ANR	8327859	Identifier	x		8327324	1					
ANR	8327860	CallExpression	pl_get_uint16 ( pfhx -> XResolution )		8327324	1					
ANR	8327861	Callee	pl_get_uint16		8327324	0					
ANR	8327862	Identifier	pl_get_uint16		8327324	0					
ANR	8327863	ArgumentList	pfhx -> XResolution		8327324	1					
ANR	8327864	Argument	pfhx -> XResolution		8327324	0					
ANR	8327865	PtrMemberAccess	pfhx -> XResolution		8327324	0					
ANR	8327866	Identifier	pfhx		8327324	0					
ANR	8327867	Identifier	XResolution		8327324	1					
ANR	8327868	ExpressionStatement	plfont -> resolution . y = pl_get_uint16 ( pfhx -> YResolution )	381:20:13709:13764	8327324	11	True				
ANR	8327869	AssignmentExpression	plfont -> resolution . y = pl_get_uint16 ( pfhx -> YResolution )		8327324	0		=			
ANR	8327870	MemberAccess	plfont -> resolution . y		8327324	0					
ANR	8327871	PtrMemberAccess	plfont -> resolution		8327324	0					
ANR	8327872	Identifier	plfont		8327324	0					
ANR	8327873	Identifier	resolution		8327324	1					
ANR	8327874	Identifier	y		8327324	1					
ANR	8327875	CallExpression	pl_get_uint16 ( pfhx -> YResolution )		8327324	1					
ANR	8327876	Callee	pl_get_uint16		8327324	0					
ANR	8327877	Identifier	pl_get_uint16		8327324	0					
ANR	8327878	ArgumentList	pfhx -> YResolution		8327324	1					
ANR	8327879	Argument	pfhx -> YResolution		8327324	0					
ANR	8327880	PtrMemberAccess	pfhx -> YResolution		8327324	0					
ANR	8327881	Identifier	pfhx		8327324	0					
ANR	8327882	Identifier	YResolution		8327324	1					
ANR	8327883	Statement	undef	382:1:13767:13771	8327324	12	True				
ANR	8327884	Statement	pfhx	382:7:13773:13776	8327324	13	True				
ANR	8327885	ElseStatement	else		8327324	0					
ANR	8327886	IfStatement	if ( pfh -> HeaderFormat == pcfh_bitmap )		8327324	0					
ANR	8327887	Condition	pfh -> HeaderFormat == pcfh_bitmap	389:25:14167:14198	8327324	0	True				
ANR	8327888	EqualityExpression	pfh -> HeaderFormat == pcfh_bitmap		8327324	0		==			
ANR	8327889	PtrMemberAccess	pfh -> HeaderFormat		8327324	0					
ANR	8327890	Identifier	pfh		8327324	0					
ANR	8327891	Identifier	HeaderFormat		8327324	1					
ANR	8327892	Identifier	pcfh_bitmap		8327324	1					
ANR	8327893	ExpressionStatement	plfont -> resolution . x = plfont -> resolution . y = 300	390:20:14221:14270	8327324	1	True				
ANR	8327894	AssignmentExpression	plfont -> resolution . x = plfont -> resolution . y = 300		8327324	0		=			
ANR	8327895	MemberAccess	plfont -> resolution . x		8327324	0					
ANR	8327896	PtrMemberAccess	plfont -> resolution		8327324	0					
ANR	8327897	Identifier	plfont		8327324	0					
ANR	8327898	Identifier	resolution		8327324	1					
ANR	8327899	Identifier	x		8327324	1					
ANR	8327900	AssignmentExpression	plfont -> resolution . y = 300		8327324	1		=			
ANR	8327901	MemberAccess	plfont -> resolution . y		8327324	0					
ANR	8327902	PtrMemberAccess	plfont -> resolution		8327324	0					
ANR	8327903	Identifier	plfont		8327324	0					
ANR	8327904	Identifier	resolution		8327324	1					
ANR	8327905	Identifier	y		8327324	1					
ANR	8327906	PrimaryExpression	300		8327324	1					
ANR	8327907	CompoundStatement		136:20:5142:5334	8327324	8					
ANR	8327908	IdentifierDeclStatement	ulong pitch_1024th_dots = ( ( ulong ) pl_get_uint16 ( pfh -> Pitch ) << 8 ) + pfh -> PitchExtended ;	392:20:14310:14445	8327324	0	True				
ANR	8327909	IdentifierDecl	pitch_1024th_dots = ( ( ulong ) pl_get_uint16 ( pfh -> Pitch ) << 8 ) + pfh -> PitchExtended		8327324	0					
ANR	8327910	IdentifierDeclType	ulong		8327324	0					
ANR	8327911	Identifier	pitch_1024th_dots		8327324	1					
ANR	8327912	AssignmentExpression	pitch_1024th_dots = ( ( ulong ) pl_get_uint16 ( pfh -> Pitch ) << 8 ) + pfh -> PitchExtended		8327324	2		=			
ANR	8327913	Identifier	pitch_1024th_dots		8327324	0					
ANR	8327914	AdditiveExpression	( ( ulong ) pl_get_uint16 ( pfh -> Pitch ) << 8 ) + pfh -> PitchExtended		8327324	1		+			
ANR	8327915	ShiftExpression	( ulong ) pl_get_uint16 ( pfh -> Pitch ) << 8		8327324	0		<<			
ANR	8327916	CastExpression	( ulong ) pl_get_uint16 ( pfh -> Pitch )		8327324	0					
ANR	8327917	CastTarget	ulong		8327324	0					
ANR	8327918	CallExpression	pl_get_uint16 ( pfh -> Pitch )		8327324	1					
ANR	8327919	Callee	pl_get_uint16		8327324	0					
ANR	8327920	Identifier	pl_get_uint16		8327324	0					
ANR	8327921	ArgumentList	pfh -> Pitch		8327324	1					
ANR	8327922	Argument	pfh -> Pitch		8327324	0					
ANR	8327923	PtrMemberAccess	pfh -> Pitch		8327324	0					
ANR	8327924	Identifier	pfh		8327324	0					
ANR	8327925	Identifier	Pitch		8327324	1					
ANR	8327926	PrimaryExpression	8		8327324	1					
ANR	8327927	PtrMemberAccess	pfh -> PitchExtended		8327324	1					
ANR	8327928	Identifier	pfh		8327324	0					
ANR	8327929	Identifier	PitchExtended		8327324	1					
ANR	8327930	IdentifierDeclStatement	double pitch_cp = ( double ) ( pitch_1024th_dots / 1024.0 / plfont -> resolution . x * 7200.0 ) ;	395:20:14467:14659	8327324	1	True				
ANR	8327931	IdentifierDecl	pitch_cp = ( double ) ( pitch_1024th_dots / 1024.0 / plfont -> resolution . x * 7200.0 )		8327324	0					
ANR	8327932	IdentifierDeclType	double		8327324	0					
ANR	8327933	Identifier	pitch_cp		8327324	1					
ANR	8327934	AssignmentExpression	pitch_cp = ( double ) ( pitch_1024th_dots / 1024.0 / plfont -> resolution . x * 7200.0 )		8327324	2		=			
ANR	8327935	Identifier	pitch_cp		8327324	0					
ANR	8327936	CastExpression	( double ) ( pitch_1024th_dots / 1024.0 / plfont -> resolution . x * 7200.0 )		8327324	1					
ANR	8327937	CastTarget	double		8327324	0					
ANR	8327938	MultiplicativeExpression	pitch_1024th_dots / 1024.0 / plfont -> resolution . x * 7200.0		8327324	1		/			
ANR	8327939	Identifier	pitch_1024th_dots		8327324	0					
ANR	8327940	MultiplicativeExpression	1024.0 / plfont -> resolution . x * 7200.0		8327324	1		/			
ANR	8327941	PrimaryExpression	1024.0		8327324	0					
ANR	8327942	MultiplicativeExpression	plfont -> resolution . x * 7200.0		8327324	1		*			
ANR	8327943	MemberAccess	plfont -> resolution . x		8327324	0					
ANR	8327944	PtrMemberAccess	plfont -> resolution		8327324	0					
ANR	8327945	Identifier	plfont		8327324	0					
ANR	8327946	Identifier	resolution		8327324	1					
ANR	8327947	Identifier	x		8327324	1					
ANR	8327948	PrimaryExpression	7200.0		8327324	1					
ANR	8327949	ExpressionStatement	"pl_fp_set_pitch_cp ( & plfont -> params , pitch_cp )"	400:20:14682:14727	8327324	2	True				
ANR	8327950	CallExpression	"pl_fp_set_pitch_cp ( & plfont -> params , pitch_cp )"		8327324	0					
ANR	8327951	Callee	pl_fp_set_pitch_cp		8327324	0					
ANR	8327952	Identifier	pl_fp_set_pitch_cp		8327324	0					
ANR	8327953	ArgumentList	& plfont -> params		8327324	1					
ANR	8327954	Argument	& plfont -> params		8327324	0					
ANR	8327955	UnaryOperationExpression	& plfont -> params		8327324	0					
ANR	8327956	UnaryOperator	&		8327324	0					
ANR	8327957	PtrMemberAccess	plfont -> params		8327324	1					
ANR	8327958	Identifier	plfont		8327324	0					
ANR	8327959	Identifier	params		8327324	1					
ANR	8327960	Argument	pitch_cp		8327324	1					
ANR	8327961	Identifier	pitch_cp		8327324	0					
ANR	8327962	CompoundStatement		144:20:5460:5513	8327324	9					
ANR	8327963	IdentifierDeclStatement	uint height_quarter_dots = pl_get_uint16 ( pfh -> Height ) ;	403:20:14785:14838	8327324	0	True				
ANR	8327964	IdentifierDecl	height_quarter_dots = pl_get_uint16 ( pfh -> Height )		8327324	0					
ANR	8327965	IdentifierDeclType	uint		8327324	0					
ANR	8327966	Identifier	height_quarter_dots		8327324	1					
ANR	8327967	AssignmentExpression	height_quarter_dots = pl_get_uint16 ( pfh -> Height )		8327324	2		=			
ANR	8327968	Identifier	height_quarter_dots		8327324	0					
ANR	8327969	CallExpression	pl_get_uint16 ( pfh -> Height )		8327324	1					
ANR	8327970	Callee	pl_get_uint16		8327324	0					
ANR	8327971	Identifier	pl_get_uint16		8327324	0					
ANR	8327972	ArgumentList	pfh -> Height		8327324	1					
ANR	8327973	Argument	pfh -> Height		8327324	0					
ANR	8327974	PtrMemberAccess	pfh -> Height		8327324	0					
ANR	8327975	Identifier	pfh		8327324	0					
ANR	8327976	Identifier	Height		8327324	1					
ANR	8327977	ExpressionStatement	plfont -> params . height_4ths = ( uint ) ( floor ( ( double ) height_quarter_dots * 72.0 / ( double ) ( plfont -> resolution . x ) + 0.5 ) )	405:20:14861:15041	8327324	1	True				
ANR	8327978	AssignmentExpression	plfont -> params . height_4ths = ( uint ) ( floor ( ( double ) height_quarter_dots * 72.0 / ( double ) ( plfont -> resolution . x ) + 0.5 ) )		8327324	0		=			
ANR	8327979	MemberAccess	plfont -> params . height_4ths		8327324	0					
ANR	8327980	PtrMemberAccess	plfont -> params		8327324	0					
ANR	8327981	Identifier	plfont		8327324	0					
ANR	8327982	Identifier	params		8327324	1					
ANR	8327983	Identifier	height_4ths		8327324	1					
ANR	8327984	CastExpression	( uint ) ( floor ( ( double ) height_quarter_dots * 72.0 / ( double ) ( plfont -> resolution . x ) + 0.5 ) )		8327324	1					
ANR	8327985	CastTarget	uint		8327324	0					
ANR	8327986	CallExpression	floor ( ( double ) height_quarter_dots * 72.0 / ( double ) ( plfont -> resolution . x ) + 0.5 )		8327324	1					
ANR	8327987	Callee	floor		8327324	0					
ANR	8327988	Identifier	floor		8327324	0					
ANR	8327989	ArgumentList	( double ) height_quarter_dots * 72.0 / ( double ) ( plfont -> resolution . x ) + 0.5		8327324	1					
ANR	8327990	Argument	( double ) height_quarter_dots * 72.0 / ( double ) ( plfont -> resolution . x ) + 0.5		8327324	0					
ANR	8327991	AdditiveExpression	( double ) height_quarter_dots * 72.0 / ( double ) ( plfont -> resolution . x ) + 0.5		8327324	0		+			
ANR	8327992	MultiplicativeExpression	( double ) height_quarter_dots * 72.0 / ( double ) ( plfont -> resolution . x )		8327324	0		*			
ANR	8327993	CastExpression	( double ) height_quarter_dots		8327324	0					
ANR	8327994	CastTarget	double		8327324	0					
ANR	8327995	Identifier	height_quarter_dots		8327324	1					
ANR	8327996	MultiplicativeExpression	72.0 / ( double ) ( plfont -> resolution . x )		8327324	1		/			
ANR	8327997	PrimaryExpression	72.0		8327324	0					
ANR	8327998	CastExpression	( double ) ( plfont -> resolution . x )		8327324	1					
ANR	8327999	CastTarget	double		8327324	0					
ANR	8328000	MemberAccess	plfont -> resolution . x		8327324	1					
ANR	8328001	PtrMemberAccess	plfont -> resolution		8327324	0					
ANR	8328002	Identifier	plfont		8327324	0					
ANR	8328003	Identifier	resolution		8327324	1					
ANR	8328004	Identifier	x		8327324	1					
ANR	8328005	PrimaryExpression	0.5		8327324	1					
ANR	8328006	BreakStatement	break ;	409:16:15077:15082	8327324	10	True				
ANR	8328007	Label	case plfst_TrueType :	411:8:15106:15125	8327324	2	True				
ANR	8328008	Identifier	plfst_TrueType		8327324	0					
ANR	8328009	CompoundStatement		155:16:5833:5854	8327324	3					
ANR	8328010	IdentifierDeclStatement	gs_font_type42 * pfont ;	414:16:15158:15179	8327324	0	True				
ANR	8328011	IdentifierDecl	* pfont		8327324	0					
ANR	8328012	IdentifierDeclType	gs_font_type42 *		8327324	0					
ANR	8328013	Identifier	pfont		8327324	1					
ANR	8328014	CompoundStatement		158:27:5902:6012	8327324	1					
ANR	8328015	Statement	static	417:20:15220:15225	8327324	0	True				
ANR	8328016	IdentifierDeclStatement	"const pl_font_offset_errors_t errors = { gs_error_invalidfont , 0 } ;"	417:27:15227:15337	8327324	1	True				
ANR	8328017	IdentifierDecl	"errors = { gs_error_invalidfont , 0 }"		8327324	0					
ANR	8328018	IdentifierDeclType	const pl_font_offset_errors_t		8327324	0					
ANR	8328019	Identifier	errors		8327324	1					
ANR	8328020	AssignmentExpression	"errors = { gs_error_invalidfont , 0 }"		8327324	2		=			
ANR	8328021	Identifier	errors		8327324	0					
ANR	8328022	InitializerList	gs_error_invalidfont		8327324	1					
ANR	8328023	Identifier	gs_error_invalidfont		8327324	0					
ANR	8328024	PrimaryExpression	0		8327324	1					
ANR	8328025	ExpressionStatement	"code = pl_font_scan_segments ( mem , plfont , 70 , desc_size , ( ulong ) count - 2 , pfh -> HeaderFormat == pcfh_truetype_large , & errors )"	420:20:15359:15647	8327324	2	True				
ANR	8328026	AssignmentExpression	"code = pl_font_scan_segments ( mem , plfont , 70 , desc_size , ( ulong ) count - 2 , pfh -> HeaderFormat == pcfh_truetype_large , & errors )"		8327324	0		=			
ANR	8328027	Identifier	code		8327324	0					
ANR	8328028	CallExpression	"pl_font_scan_segments ( mem , plfont , 70 , desc_size , ( ulong ) count - 2 , pfh -> HeaderFormat == pcfh_truetype_large , & errors )"		8327324	1					
ANR	8328029	Callee	pl_font_scan_segments		8327324	0					
ANR	8328030	Identifier	pl_font_scan_segments		8327324	0					
ANR	8328031	ArgumentList	mem		8327324	1					
ANR	8328032	Argument	mem		8327324	0					
ANR	8328033	Identifier	mem		8327324	0					
ANR	8328034	Argument	plfont		8327324	1					
ANR	8328035	Identifier	plfont		8327324	0					
ANR	8328036	Argument	70		8327324	2					
ANR	8328037	PrimaryExpression	70		8327324	0					
ANR	8328038	Argument	desc_size		8327324	3					
ANR	8328039	Identifier	desc_size		8327324	0					
ANR	8328040	Argument	( ulong ) count - 2		8327324	4					
ANR	8328041	AdditiveExpression	( ulong ) count - 2		8327324	0		-			
ANR	8328042	CastExpression	( ulong ) count		8327324	0					
ANR	8328043	CastTarget	ulong		8327324	0					
ANR	8328044	Identifier	count		8327324	1					
ANR	8328045	PrimaryExpression	2		8327324	1					
ANR	8328046	Argument	pfh -> HeaderFormat == pcfh_truetype_large		8327324	5					
ANR	8328047	EqualityExpression	pfh -> HeaderFormat == pcfh_truetype_large		8327324	0		==			
ANR	8328048	PtrMemberAccess	pfh -> HeaderFormat		8327324	0					
ANR	8328049	Identifier	pfh		8327324	0					
ANR	8328050	Identifier	HeaderFormat		8327324	1					
ANR	8328051	Identifier	pcfh_truetype_large		8327324	1					
ANR	8328052	Argument	& errors		8327324	6					
ANR	8328053	UnaryOperationExpression	& errors		8327324	0					
ANR	8328054	UnaryOperator	&		8327324	0					
ANR	8328055	Identifier	errors		8327324	1					
ANR	8328056	IfStatement	if ( code < 0 )		8327324	3					
ANR	8328057	Condition	code < 0	425:24:15673:15680	8327324	0	True				
ANR	8328058	RelationalExpression	code < 0		8327324	0		<			
ANR	8328059	Identifier	code		8327324	0					
ANR	8328060	PrimaryExpression	0		8327324	1					
ANR	8328061	ReturnStatement	return code ;	426:24:15707:15718	8327324	1	True				
ANR	8328062	Identifier	code		8327324	0					
ANR	8328063	IfStatement	if ( ( pfh -> HeaderFormat == pcfh_truetype_large ) && ( plfont -> scaling_technology == plfst_bitmap ) )		8327324	4					
ANR	8328064	Condition	( pfh -> HeaderFormat == pcfh_truetype_large ) && ( plfont -> scaling_technology == plfst_bitmap )	429:24:15853:15966	8327324	0	True				
ANR	8328065	AndExpression	( pfh -> HeaderFormat == pcfh_truetype_large ) && ( plfont -> scaling_technology == plfst_bitmap )		8327324	0		&&			
ANR	8328066	EqualityExpression	pfh -> HeaderFormat == pcfh_truetype_large		8327324	0		==			
ANR	8328067	PtrMemberAccess	pfh -> HeaderFormat		8327324	0					
ANR	8328068	Identifier	pfh		8327324	0					
ANR	8328069	Identifier	HeaderFormat		8327324	1					
ANR	8328070	Identifier	pcfh_truetype_large		8327324	1					
ANR	8328071	EqualityExpression	plfont -> scaling_technology == plfst_bitmap		8327324	1		==			
ANR	8328072	PtrMemberAccess	plfont -> scaling_technology		8327324	0					
ANR	8328073	Identifier	plfont		8327324	0					
ANR	8328074	Identifier	scaling_technology		8327324	1					
ANR	8328075	Identifier	plfst_bitmap		8327324	1					
ANR	8328076	GotoStatement	goto bitmap ;	431:24:15993:16004	8327324	1	True				
ANR	8328077	Identifier	bitmap		8327324	0					
ANR	8328078	ExpressionStatement	"pfont = gs_alloc_struct ( mem , gs_font_type42 , & st_gs_font_type42 , ""pcl_font_header(truetype font)"" )"	434:16:16041:16195	8327324	2	True				
ANR	8328079	AssignmentExpression	"pfont = gs_alloc_struct ( mem , gs_font_type42 , & st_gs_font_type42 , ""pcl_font_header(truetype font)"" )"		8327324	0		=			
ANR	8328080	Identifier	pfont		8327324	0					
ANR	8328081	CallExpression	"gs_alloc_struct ( mem , gs_font_type42 , & st_gs_font_type42 , ""pcl_font_header(truetype font)"" )"		8327324	1					
ANR	8328082	Callee	gs_alloc_struct		8327324	0					
ANR	8328083	Identifier	gs_alloc_struct		8327324	0					
ANR	8328084	ArgumentList	mem		8327324	1					
ANR	8328085	Argument	mem		8327324	0					
ANR	8328086	Identifier	mem		8327324	0					
ANR	8328087	Argument	gs_font_type42		8327324	1					
ANR	8328088	Identifier	gs_font_type42		8327324	0					
ANR	8328089	Argument	& st_gs_font_type42		8327324	2					
ANR	8328090	UnaryOperationExpression	& st_gs_font_type42		8327324	0					
ANR	8328091	UnaryOperator	&		8327324	0					
ANR	8328092	Identifier	st_gs_font_type42		8327324	1					
ANR	8328093	Argument	"""pcl_font_header(truetype font)"""		8327324	3					
ANR	8328094	PrimaryExpression	"""pcl_font_header(truetype font)"""		8327324	0					
ANR	8328095	IfStatement	if ( pfont == 0 )		8327324	3					
ANR	8328096	Condition	pfont == 0	437:20:16217:16226	8327324	0	True				
ANR	8328097	EqualityExpression	pfont == 0		8327324	0		==			
ANR	8328098	Identifier	pfont		8327324	0					
ANR	8328099	PrimaryExpression	0		8327324	1					
ANR	8328100	ExpressionStatement	return_error ( e_Memory )	438:20:16249:16271	8327324	1	True				
ANR	8328101	CallExpression	return_error ( e_Memory )		8327324	0					
ANR	8328102	Callee	return_error		8327324	0					
ANR	8328103	Identifier	return_error		8327324	0					
ANR	8328104	ArgumentList	e_Memory		8327324	1					
ANR	8328105	Argument	e_Memory		8327324	0					
ANR	8328106	Identifier	e_Memory		8327324	0					
ANR	8328107	CompoundStatement		182:20:6987:7032	8327324	4					
ANR	8328108	IdentifierDeclStatement	uint num_chars = pl_get_uint16 ( pfh -> LastCode ) ;	441:20:16312:16357	8327324	0	True				
ANR	8328109	IdentifierDecl	num_chars = pl_get_uint16 ( pfh -> LastCode )		8327324	0					
ANR	8328110	IdentifierDeclType	uint		8327324	0					
ANR	8328111	Identifier	num_chars		8327324	1					
ANR	8328112	AssignmentExpression	num_chars = pl_get_uint16 ( pfh -> LastCode )		8327324	2		=			
ANR	8328113	Identifier	num_chars		8327324	0					
ANR	8328114	CallExpression	pl_get_uint16 ( pfh -> LastCode )		8327324	1					
ANR	8328115	Callee	pl_get_uint16		8327324	0					
ANR	8328116	Identifier	pl_get_uint16		8327324	0					
ANR	8328117	ArgumentList	pfh -> LastCode		8327324	1					
ANR	8328118	Argument	pfh -> LastCode		8327324	0					
ANR	8328119	PtrMemberAccess	pfh -> LastCode		8327324	0					
ANR	8328120	Identifier	pfh		8327324	0					
ANR	8328121	Identifier	LastCode		8327324	1					
ANR	8328122	IfStatement	if ( num_chars < 20 )		8327324	1					
ANR	8328123	Condition	num_chars < 20	443:24:16384:16397	8327324	0	True				
ANR	8328124	RelationalExpression	num_chars < 20		8327324	0		<			
ANR	8328125	Identifier	num_chars		8327324	0					
ANR	8328126	PrimaryExpression	20		8327324	1					
ANR	8328127	ExpressionStatement	num_chars = 20	444:24:16424:16438	8327324	1	True				
ANR	8328128	AssignmentExpression	num_chars = 20		8327324	0		=			
ANR	8328129	Identifier	num_chars		8327324	0					
ANR	8328130	PrimaryExpression	20		8327324	1					
ANR	8328131	ElseStatement	else		8327324	0					
ANR	8328132	IfStatement	if ( num_chars > 300 )		8327324	0					
ANR	8328133	Condition	num_chars > 300	445:29:16469:16483	8327324	0	True				
ANR	8328134	RelationalExpression	num_chars > 300		8327324	0		>			
ANR	8328135	Identifier	num_chars		8327324	0					
ANR	8328136	PrimaryExpression	300		8327324	1					
ANR	8328137	ExpressionStatement	num_chars = 300	446:24:16510:16525	8327324	1	True				
ANR	8328138	AssignmentExpression	num_chars = 300		8327324	0		=			
ANR	8328139	Identifier	num_chars		8327324	0					
ANR	8328140	PrimaryExpression	300		8327324	1					
ANR	8328141	ExpressionStatement	"code = pl_tt_alloc_char_glyphs ( plfont , num_chars , mem , ""pcl_font_header(char_glyphs)"" )"	447:20:16547:16684	8327324	2	True				
ANR	8328142	AssignmentExpression	"code = pl_tt_alloc_char_glyphs ( plfont , num_chars , mem , ""pcl_font_header(char_glyphs)"" )"		8327324	0		=			
ANR	8328143	Identifier	code		8327324	0					
ANR	8328144	CallExpression	"pl_tt_alloc_char_glyphs ( plfont , num_chars , mem , ""pcl_font_header(char_glyphs)"" )"		8327324	1					
ANR	8328145	Callee	pl_tt_alloc_char_glyphs		8327324	0					
ANR	8328146	Identifier	pl_tt_alloc_char_glyphs		8327324	0					
ANR	8328147	ArgumentList	plfont		8327324	1					
ANR	8328148	Argument	plfont		8327324	0					
ANR	8328149	Identifier	plfont		8327324	0					
ANR	8328150	Argument	num_chars		8327324	1					
ANR	8328151	Identifier	num_chars		8327324	0					
ANR	8328152	Argument	mem		8327324	2					
ANR	8328153	Identifier	mem		8327324	0					
ANR	8328154	Argument	"""pcl_font_header(char_glyphs)"""		8327324	3					
ANR	8328155	PrimaryExpression	"""pcl_font_header(char_glyphs)"""		8327324	0					
ANR	8328156	IfStatement	if ( code < 0 )		8327324	3					
ANR	8328157	Condition	code < 0	449:24:16710:16717	8327324	0	True				
ANR	8328158	RelationalExpression	code < 0		8327324	0		<			
ANR	8328159	Identifier	code		8327324	0					
ANR	8328160	PrimaryExpression	0		8327324	1					
ANR	8328161	ReturnStatement	return code ;	450:24:16744:16755	8327324	1	True				
ANR	8328162	Identifier	code		8327324	0					
ANR	8328163	ExpressionStatement	"code = pl_fill_in_font ( ( gs_font * ) pfont , plfont , pcs -> font_dir , mem , ""nameless_font"" )"	452:16:16791:16933	8327324	5	True				
ANR	8328164	AssignmentExpression	"code = pl_fill_in_font ( ( gs_font * ) pfont , plfont , pcs -> font_dir , mem , ""nameless_font"" )"		8327324	0		=			
ANR	8328165	Identifier	code		8327324	0					
ANR	8328166	CallExpression	"pl_fill_in_font ( ( gs_font * ) pfont , plfont , pcs -> font_dir , mem , ""nameless_font"" )"		8327324	1					
ANR	8328167	Callee	pl_fill_in_font		8327324	0					
ANR	8328168	Identifier	pl_fill_in_font		8327324	0					
ANR	8328169	ArgumentList	( gs_font * ) pfont		8327324	1					
ANR	8328170	Argument	( gs_font * ) pfont		8327324	0					
ANR	8328171	CastExpression	( gs_font * ) pfont		8327324	0					
ANR	8328172	CastTarget	gs_font *		8327324	0					
ANR	8328173	Identifier	pfont		8327324	1					
ANR	8328174	Argument	plfont		8327324	1					
ANR	8328175	Identifier	plfont		8327324	0					
ANR	8328176	Argument	pcs -> font_dir		8327324	2					
ANR	8328177	PtrMemberAccess	pcs -> font_dir		8327324	0					
ANR	8328178	Identifier	pcs		8327324	0					
ANR	8328179	Identifier	font_dir		8327324	1					
ANR	8328180	Argument	mem		8327324	3					
ANR	8328181	Identifier	mem		8327324	0					
ANR	8328182	Argument	"""nameless_font"""		8327324	4					
ANR	8328183	PrimaryExpression	"""nameless_font"""		8327324	0					
ANR	8328184	IfStatement	if ( code < 0 )		8327324	6					
ANR	8328185	Condition	code < 0	455:20:16955:16962	8327324	0	True				
ANR	8328186	RelationalExpression	code < 0		8327324	0		<			
ANR	8328187	Identifier	code		8327324	0					
ANR	8328188	PrimaryExpression	0		8327324	1					
ANR	8328189	ReturnStatement	return code ;	456:20:16985:16996	8327324	1	True				
ANR	8328190	Identifier	code		8327324	0					
ANR	8328191	ExpressionStatement	"code = pl_fill_in_tt_font ( pfont , NULL , gs_next_ids ( mem , 1 ) )"	457:16:17014:17073	8327324	7	True				
ANR	8328192	AssignmentExpression	"code = pl_fill_in_tt_font ( pfont , NULL , gs_next_ids ( mem , 1 ) )"		8327324	0		=			
ANR	8328193	Identifier	code		8327324	0					
ANR	8328194	CallExpression	"pl_fill_in_tt_font ( pfont , NULL , gs_next_ids ( mem , 1 ) )"		8327324	1					
ANR	8328195	Callee	pl_fill_in_tt_font		8327324	0					
ANR	8328196	Identifier	pl_fill_in_tt_font		8327324	0					
ANR	8328197	ArgumentList	pfont		8327324	1					
ANR	8328198	Argument	pfont		8327324	0					
ANR	8328199	Identifier	pfont		8327324	0					
ANR	8328200	Argument	NULL		8327324	1					
ANR	8328201	Identifier	NULL		8327324	0					
ANR	8328202	Argument	"gs_next_ids ( mem , 1 )"		8327324	2					
ANR	8328203	CallExpression	"gs_next_ids ( mem , 1 )"		8327324	0					
ANR	8328204	Callee	gs_next_ids		8327324	0					
ANR	8328205	Identifier	gs_next_ids		8327324	0					
ANR	8328206	ArgumentList	mem		8327324	1					
ANR	8328207	Argument	mem		8327324	0					
ANR	8328208	Identifier	mem		8327324	0					
ANR	8328209	Argument	1		8327324	1					
ANR	8328210	PrimaryExpression	1		8327324	0					
ANR	8328211	IfStatement	if ( code < 0 )		8327324	8					
ANR	8328212	Condition	code < 0	458:20:17095:17102	8327324	0	True				
ANR	8328213	RelationalExpression	code < 0		8327324	0		<			
ANR	8328214	Identifier	code		8327324	0					
ANR	8328215	PrimaryExpression	0		8327324	1					
ANR	8328216	ReturnStatement	return code ;	459:20:17125:17136	8327324	1	True				
ANR	8328217	Identifier	code		8327324	0					
ANR	8328218	CompoundStatement		202:20:7851:7991	8327324	9					
ANR	8328219	IdentifierDeclStatement	uint pitch_cp = ( uint ) ( pl_get_uint16 ( pfh -> Pitch ) * 1000.0 / pfont -> data . unitsPerEm ) ;	461:20:17176:17316	8327324	0	True				
ANR	8328220	IdentifierDecl	pitch_cp = ( uint ) ( pl_get_uint16 ( pfh -> Pitch ) * 1000.0 / pfont -> data . unitsPerEm )		8327324	0					
ANR	8328221	IdentifierDeclType	uint		8327324	0					
ANR	8328222	Identifier	pitch_cp		8327324	1					
ANR	8328223	AssignmentExpression	pitch_cp = ( uint ) ( pl_get_uint16 ( pfh -> Pitch ) * 1000.0 / pfont -> data . unitsPerEm )		8327324	2		=			
ANR	8328224	Identifier	pitch_cp		8327324	0					
ANR	8328225	CastExpression	( uint ) ( pl_get_uint16 ( pfh -> Pitch ) * 1000.0 / pfont -> data . unitsPerEm )		8327324	1					
ANR	8328226	CastTarget	uint		8327324	0					
ANR	8328227	MultiplicativeExpression	pl_get_uint16 ( pfh -> Pitch ) * 1000.0 / pfont -> data . unitsPerEm		8327324	1		*			
ANR	8328228	CallExpression	pl_get_uint16 ( pfh -> Pitch )		8327324	0					
ANR	8328229	Callee	pl_get_uint16		8327324	0					
ANR	8328230	Identifier	pl_get_uint16		8327324	0					
ANR	8328231	ArgumentList	pfh -> Pitch		8327324	1					
ANR	8328232	Argument	pfh -> Pitch		8327324	0					
ANR	8328233	PtrMemberAccess	pfh -> Pitch		8327324	0					
ANR	8328234	Identifier	pfh		8327324	0					
ANR	8328235	Identifier	Pitch		8327324	1					
ANR	8328236	MultiplicativeExpression	1000.0 / pfont -> data . unitsPerEm		8327324	1		/			
ANR	8328237	PrimaryExpression	1000.0		8327324	0					
ANR	8328238	MemberAccess	pfont -> data . unitsPerEm		8327324	1					
ANR	8328239	PtrMemberAccess	pfont -> data		8327324	0					
ANR	8328240	Identifier	pfont		8327324	0					
ANR	8328241	Identifier	data		8327324	1					
ANR	8328242	Identifier	unitsPerEm		8327324	1					
ANR	8328243	ExpressionStatement	"pl_fp_set_pitch_cp ( & plfont -> params , pitch_cp )"	464:20:17338:17383	8327324	1	True				
ANR	8328244	CallExpression	"pl_fp_set_pitch_cp ( & plfont -> params , pitch_cp )"		8327324	0					
ANR	8328245	Callee	pl_fp_set_pitch_cp		8327324	0					
ANR	8328246	Identifier	pl_fp_set_pitch_cp		8327324	0					
ANR	8328247	ArgumentList	& plfont -> params		8327324	1					
ANR	8328248	Argument	& plfont -> params		8327324	0					
ANR	8328249	UnaryOperationExpression	& plfont -> params		8327324	0					
ANR	8328250	UnaryOperator	&		8327324	0					
ANR	8328251	PtrMemberAccess	plfont -> params		8327324	1					
ANR	8328252	Identifier	plfont		8327324	0					
ANR	8328253	Identifier	params		8327324	1					
ANR	8328254	Argument	pitch_cp		8327324	1					
ANR	8328255	Identifier	pitch_cp		8327324	0					
ANR	8328256	BreakStatement	break ;	467:12:17429:17434	8327324	4	True				
ANR	8328257	Label	case plfst_Intellifont :	468:8:17444:17466	8327324	5	True				
ANR	8328258	Identifier	plfst_Intellifont		8327324	0					
ANR	8328259	CompoundStatement		211:16:8173:8335	8327324	6					
ANR	8328260	IdentifierDeclStatement	"gs_font_base * pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pcl_font_header(bitmap font)"" ) ;"	470:16:17498:17660	8327324	0	True				
ANR	8328261	IdentifierDecl	"* pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pcl_font_header(bitmap font)"" )"		8327324	0					
ANR	8328262	IdentifierDeclType	gs_font_base *		8327324	0					
ANR	8328263	Identifier	pfont		8327324	1					
ANR	8328264	AssignmentExpression	"* pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pcl_font_header(bitmap font)"" )"		8327324	2		=			
ANR	8328265	Identifier	pfont		8327324	0					
ANR	8328266	CallExpression	"gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pcl_font_header(bitmap font)"" )"		8327324	1					
ANR	8328267	Callee	gs_alloc_struct		8327324	0					
ANR	8328268	Identifier	gs_alloc_struct		8327324	0					
ANR	8328269	ArgumentList	mem		8327324	1					
ANR	8328270	Argument	mem		8327324	0					
ANR	8328271	Identifier	mem		8327324	0					
ANR	8328272	Argument	gs_font_base		8327324	1					
ANR	8328273	Identifier	gs_font_base		8327324	0					
ANR	8328274	Argument	& st_gs_font_base		8327324	2					
ANR	8328275	UnaryOperationExpression	& st_gs_font_base		8327324	0					
ANR	8328276	UnaryOperator	&		8327324	0					
ANR	8328277	Identifier	st_gs_font_base		8327324	1					
ANR	8328278	Argument	"""pcl_font_header(bitmap font)"""		8327324	3					
ANR	8328279	PrimaryExpression	"""pcl_font_header(bitmap font)"""		8327324	0					
ANR	8328280	IfStatement	if ( pfont == 0 )		8327324	1					
ANR	8328281	Condition	pfont == 0	474:20:17683:17692	8327324	0	True				
ANR	8328282	EqualityExpression	pfont == 0		8327324	0		==			
ANR	8328283	Identifier	pfont		8327324	0					
ANR	8328284	PrimaryExpression	0		8327324	1					
ANR	8328285	ExpressionStatement	return_error ( e_Memory )	475:20:17715:17737	8327324	1	True				
ANR	8328286	CallExpression	return_error ( e_Memory )		8327324	0					
ANR	8328287	Callee	return_error		8327324	0					
ANR	8328288	Identifier	return_error		8327324	0					
ANR	8328289	ArgumentList	e_Memory		8327324	1					
ANR	8328290	Argument	e_Memory		8327324	0					
ANR	8328291	Identifier	e_Memory		8327324	0					
ANR	8328292	ExpressionStatement	"code = pl_fill_in_font ( ( gs_font * ) pfont , plfont , pcs -> font_dir , mem , ""nameless_font"" )"	476:16:17755:17897	8327324	2	True				
ANR	8328293	AssignmentExpression	"code = pl_fill_in_font ( ( gs_font * ) pfont , plfont , pcs -> font_dir , mem , ""nameless_font"" )"		8327324	0		=			
ANR	8328294	Identifier	code		8327324	0					
ANR	8328295	CallExpression	"pl_fill_in_font ( ( gs_font * ) pfont , plfont , pcs -> font_dir , mem , ""nameless_font"" )"		8327324	1					
ANR	8328296	Callee	pl_fill_in_font		8327324	0					
ANR	8328297	Identifier	pl_fill_in_font		8327324	0					
ANR	8328298	ArgumentList	( gs_font * ) pfont		8327324	1					
ANR	8328299	Argument	( gs_font * ) pfont		8327324	0					
ANR	8328300	CastExpression	( gs_font * ) pfont		8327324	0					
ANR	8328301	CastTarget	gs_font *		8327324	0					
ANR	8328302	Identifier	pfont		8327324	1					
ANR	8328303	Argument	plfont		8327324	1					
ANR	8328304	Identifier	plfont		8327324	0					
ANR	8328305	Argument	pcs -> font_dir		8327324	2					
ANR	8328306	PtrMemberAccess	pcs -> font_dir		8327324	0					
ANR	8328307	Identifier	pcs		8327324	0					
ANR	8328308	Identifier	font_dir		8327324	1					
ANR	8328309	Argument	mem		8327324	3					
ANR	8328310	Identifier	mem		8327324	0					
ANR	8328311	Argument	"""nameless_font"""		8327324	4					
ANR	8328312	PrimaryExpression	"""nameless_font"""		8327324	0					
ANR	8328313	IfStatement	if ( code < 0 )		8327324	3					
ANR	8328314	Condition	code < 0	479:20:17919:17926	8327324	0	True				
ANR	8328315	RelationalExpression	code < 0		8327324	0		<			
ANR	8328316	Identifier	code		8327324	0					
ANR	8328317	PrimaryExpression	0		8327324	1					
ANR	8328318	ReturnStatement	return code ;	480:20:17949:17960	8327324	1	True				
ANR	8328319	Identifier	code		8327324	0					
ANR	8328320	ExpressionStatement	"pl_fill_in_intelli_font ( pfont , gs_next_ids ( mem , 1 ) )"	481:16:17978:18029	8327324	4	True				
ANR	8328321	CallExpression	"pl_fill_in_intelli_font ( pfont , gs_next_ids ( mem , 1 ) )"		8327324	0					
ANR	8328322	Callee	pl_fill_in_intelli_font		8327324	0					
ANR	8328323	Identifier	pl_fill_in_intelli_font		8327324	0					
ANR	8328324	ArgumentList	pfont		8327324	1					
ANR	8328325	Argument	pfont		8327324	0					
ANR	8328326	Identifier	pfont		8327324	0					
ANR	8328327	Argument	"gs_next_ids ( mem , 1 )"		8327324	1					
ANR	8328328	CallExpression	"gs_next_ids ( mem , 1 )"		8327324	0					
ANR	8328329	Callee	gs_next_ids		8327324	0					
ANR	8328330	Identifier	gs_next_ids		8327324	0					
ANR	8328331	ArgumentList	mem		8327324	1					
ANR	8328332	Argument	mem		8327324	0					
ANR	8328333	Identifier	mem		8327324	0					
ANR	8328334	Argument	1		8327324	1					
ANR	8328335	PrimaryExpression	1		8327324	0					
ANR	8328336	CompoundStatement		224:20:8744:8836	8327324	5					
ANR	8328337	IdentifierDeclStatement	uint pitch_cp = ( uint ) ( pl_get_uint16 ( pfh -> Pitch ) * 1000.0 / 8782.0 ) ;	483:20:18069:18161	8327324	0	True				
ANR	8328338	IdentifierDecl	pitch_cp = ( uint ) ( pl_get_uint16 ( pfh -> Pitch ) * 1000.0 / 8782.0 )		8327324	0					
ANR	8328339	IdentifierDeclType	uint		8327324	0					
ANR	8328340	Identifier	pitch_cp		8327324	1					
ANR	8328341	AssignmentExpression	pitch_cp = ( uint ) ( pl_get_uint16 ( pfh -> Pitch ) * 1000.0 / 8782.0 )		8327324	2		=			
ANR	8328342	Identifier	pitch_cp		8327324	0					
ANR	8328343	CastExpression	( uint ) ( pl_get_uint16 ( pfh -> Pitch ) * 1000.0 / 8782.0 )		8327324	1					
ANR	8328344	CastTarget	uint		8327324	0					
ANR	8328345	MultiplicativeExpression	pl_get_uint16 ( pfh -> Pitch ) * 1000.0 / 8782.0		8327324	1		*			
ANR	8328346	CallExpression	pl_get_uint16 ( pfh -> Pitch )		8327324	0					
ANR	8328347	Callee	pl_get_uint16		8327324	0					
ANR	8328348	Identifier	pl_get_uint16		8327324	0					
ANR	8328349	ArgumentList	pfh -> Pitch		8327324	1					
ANR	8328350	Argument	pfh -> Pitch		8327324	0					
ANR	8328351	PtrMemberAccess	pfh -> Pitch		8327324	0					
ANR	8328352	Identifier	pfh		8327324	0					
ANR	8328353	Identifier	Pitch		8327324	1					
ANR	8328354	MultiplicativeExpression	1000.0 / 8782.0		8327324	1		/			
ANR	8328355	PrimaryExpression	1000.0		8327324	0					
ANR	8328356	PrimaryExpression	8782.0		8327324	1					
ANR	8328357	ExpressionStatement	"pl_fp_set_pitch_cp ( & plfont -> params , pitch_cp )"	485:20:18183:18228	8327324	1	True				
ANR	8328358	CallExpression	"pl_fp_set_pitch_cp ( & plfont -> params , pitch_cp )"		8327324	0					
ANR	8328359	Callee	pl_fp_set_pitch_cp		8327324	0					
ANR	8328360	Identifier	pl_fp_set_pitch_cp		8327324	0					
ANR	8328361	ArgumentList	& plfont -> params		8327324	1					
ANR	8328362	Argument	& plfont -> params		8327324	0					
ANR	8328363	UnaryOperationExpression	& plfont -> params		8327324	0					
ANR	8328364	UnaryOperator	&		8327324	0					
ANR	8328365	PtrMemberAccess	plfont -> params		8327324	1					
ANR	8328366	Identifier	plfont		8327324	0					
ANR	8328367	Identifier	params		8327324	1					
ANR	8328368	Argument	pitch_cp		8327324	1					
ANR	8328369	Identifier	pitch_cp		8327324	0					
ANR	8328370	BreakStatement	break ;	487:16:18264:18269	8327324	6	True				
ANR	8328371	Label	default :	489:8:18293:18300	8327324	7	True				
ANR	8328372	Identifier	default		8327324	0					
ANR	8328373	ExpressionStatement	return_error ( gs_error_invalidfont )	490:12:18314:18348	8327324	8	True				
ANR	8328374	CallExpression	return_error ( gs_error_invalidfont )		8327324	0					
ANR	8328375	Callee	return_error		8327324	0					
ANR	8328376	Identifier	return_error		8327324	0					
ANR	8328377	ArgumentList	gs_error_invalidfont		8327324	1					
ANR	8328378	Argument	gs_error_invalidfont		8327324	0					
ANR	8328379	Identifier	gs_error_invalidfont		8327324	0					
ANR	8328380	ExpressionStatement	plfont -> params . symbol_set = pl_get_uint16 ( pfh -> SymbolSet )	493:4:18437:18494	8327324	33	True				
ANR	8328381	AssignmentExpression	plfont -> params . symbol_set = pl_get_uint16 ( pfh -> SymbolSet )		8327324	0		=			
ANR	8328382	MemberAccess	plfont -> params . symbol_set		8327324	0					
ANR	8328383	PtrMemberAccess	plfont -> params		8327324	0					
ANR	8328384	Identifier	plfont		8327324	0					
ANR	8328385	Identifier	params		8327324	1					
ANR	8328386	Identifier	symbol_set		8327324	1					
ANR	8328387	CallExpression	pl_get_uint16 ( pfh -> SymbolSet )		8327324	1					
ANR	8328388	Callee	pl_get_uint16		8327324	0					
ANR	8328389	Identifier	pl_get_uint16		8327324	0					
ANR	8328390	ArgumentList	pfh -> SymbolSet		8327324	1					
ANR	8328391	Argument	pfh -> SymbolSet		8327324	0					
ANR	8328392	PtrMemberAccess	pfh -> SymbolSet		8327324	0					
ANR	8328393	Identifier	pfh		8327324	0					
ANR	8328394	Identifier	SymbolSet		8327324	1					
ANR	8328395	IfStatement	if ( pfh -> Spacing > 1 )		8327324	34					
ANR	8328396	Condition	pfh -> Spacing > 1	494:8:18504:18519	8327324	0	True				
ANR	8328397	RelationalExpression	pfh -> Spacing > 1		8327324	0		>			
ANR	8328398	PtrMemberAccess	pfh -> Spacing		8327324	0					
ANR	8328399	Identifier	pfh		8327324	0					
ANR	8328400	Identifier	Spacing		8327324	1					
ANR	8328401	PrimaryExpression	1		8327324	1					
ANR	8328402	ExpressionStatement	return_error ( e_Range )	495:8:18530:18551	8327324	1	True				
ANR	8328403	CallExpression	return_error ( e_Range )		8327324	0					
ANR	8328404	Callee	return_error		8327324	0					
ANR	8328405	Identifier	return_error		8327324	0					
ANR	8328406	ArgumentList	e_Range		8327324	1					
ANR	8328407	Argument	e_Range		8327324	0					
ANR	8328408	Identifier	e_Range		8327324	0					
ANR	8328409	ExpressionStatement	plfont -> params . proportional_spacing = pfh -> Spacing	496:4:18557:18607	8327324	35	True				
ANR	8328410	AssignmentExpression	plfont -> params . proportional_spacing = pfh -> Spacing		8327324	0		=			
ANR	8328411	MemberAccess	plfont -> params . proportional_spacing		8327324	0					
ANR	8328412	PtrMemberAccess	plfont -> params		8327324	0					
ANR	8328413	Identifier	plfont		8327324	0					
ANR	8328414	Identifier	params		8327324	1					
ANR	8328415	Identifier	proportional_spacing		8327324	1					
ANR	8328416	PtrMemberAccess	pfh -> Spacing		8327324	1					
ANR	8328417	Identifier	pfh		8327324	0					
ANR	8328418	Identifier	Spacing		8327324	1					
ANR	8328419	ExpressionStatement	plfont -> params . style = ( pfh -> StyleMSB << 8 ) + pfh -> StyleLSB	497:4:18613:18672	8327324	36	True				
ANR	8328420	AssignmentExpression	plfont -> params . style = ( pfh -> StyleMSB << 8 ) + pfh -> StyleLSB		8327324	0		=			
ANR	8328421	MemberAccess	plfont -> params . style		8327324	0					
ANR	8328422	PtrMemberAccess	plfont -> params		8327324	0					
ANR	8328423	Identifier	plfont		8327324	0					
ANR	8328424	Identifier	params		8327324	1					
ANR	8328425	Identifier	style		8327324	1					
ANR	8328426	AdditiveExpression	( pfh -> StyleMSB << 8 ) + pfh -> StyleLSB		8327324	1		+			
ANR	8328427	ShiftExpression	pfh -> StyleMSB << 8		8327324	0		<<			
ANR	8328428	PtrMemberAccess	pfh -> StyleMSB		8327324	0					
ANR	8328429	Identifier	pfh		8327324	0					
ANR	8328430	Identifier	StyleMSB		8327324	1					
ANR	8328431	PrimaryExpression	8		8327324	1					
ANR	8328432	PtrMemberAccess	pfh -> StyleLSB		8327324	1					
ANR	8328433	Identifier	pfh		8327324	0					
ANR	8328434	Identifier	StyleLSB		8327324	1					
ANR	8328435	ExpressionStatement	plfont -> params . stroke_weight = ( int ) ( pfh -> StrokeWeight ^ 0x80 ) - 0x80	498:4:18678:18778	8327324	37	True				
ANR	8328436	AssignmentExpression	plfont -> params . stroke_weight = ( int ) ( pfh -> StrokeWeight ^ 0x80 ) - 0x80		8327324	0		=			
ANR	8328437	MemberAccess	plfont -> params . stroke_weight		8327324	0					
ANR	8328438	PtrMemberAccess	plfont -> params		8327324	0					
ANR	8328439	Identifier	plfont		8327324	0					
ANR	8328440	Identifier	params		8327324	1					
ANR	8328441	Identifier	stroke_weight		8327324	1					
ANR	8328442	AdditiveExpression	( int ) ( pfh -> StrokeWeight ^ 0x80 ) - 0x80		8327324	1		-			
ANR	8328443	CastExpression	( int ) ( pfh -> StrokeWeight ^ 0x80 )		8327324	0					
ANR	8328444	CastTarget	int		8327324	0					
ANR	8328445	ExclusiveOrExpression	pfh -> StrokeWeight ^ 0x80		8327324	1		^			
ANR	8328446	PtrMemberAccess	pfh -> StrokeWeight		8327324	0					
ANR	8328447	Identifier	pfh		8327324	0					
ANR	8328448	Identifier	StrokeWeight		8327324	1					
ANR	8328449	PrimaryExpression	0x80		8327324	1					
ANR	8328450	PrimaryExpression	0x80		8327324	1					
ANR	8328451	ExpressionStatement	plfont -> params . typeface_family = ( pfh -> TypefaceMSB << 8 ) + pfh -> TypefaceLSB	500:4:18784:18867	8327324	38	True				
ANR	8328452	AssignmentExpression	plfont -> params . typeface_family = ( pfh -> TypefaceMSB << 8 ) + pfh -> TypefaceLSB		8327324	0		=			
ANR	8328453	MemberAccess	plfont -> params . typeface_family		8327324	0					
ANR	8328454	PtrMemberAccess	plfont -> params		8327324	0					
ANR	8328455	Identifier	plfont		8327324	0					
ANR	8328456	Identifier	params		8327324	1					
ANR	8328457	Identifier	typeface_family		8327324	1					
ANR	8328458	AdditiveExpression	( pfh -> TypefaceMSB << 8 ) + pfh -> TypefaceLSB		8327324	1		+			
ANR	8328459	ShiftExpression	pfh -> TypefaceMSB << 8		8327324	0		<<			
ANR	8328460	PtrMemberAccess	pfh -> TypefaceMSB		8327324	0					
ANR	8328461	Identifier	pfh		8327324	0					
ANR	8328462	Identifier	TypefaceMSB		8327324	1					
ANR	8328463	PrimaryExpression	8		8327324	1					
ANR	8328464	PtrMemberAccess	pfh -> TypefaceLSB		8327324	1					
ANR	8328465	Identifier	pfh		8327324	0					
ANR	8328466	Identifier	TypefaceLSB		8327324	1					
ANR	8328467	ExpressionStatement	plfont -> params . pjl_font_number = pcs -> pjl_dlfont_number ++	502:4:18873:18930	8327324	39	True				
ANR	8328468	AssignmentExpression	plfont -> params . pjl_font_number = pcs -> pjl_dlfont_number ++		8327324	0		=			
ANR	8328469	MemberAccess	plfont -> params . pjl_font_number		8327324	0					
ANR	8328470	PtrMemberAccess	plfont -> params		8327324	0					
ANR	8328471	Identifier	plfont		8327324	0					
ANR	8328472	Identifier	params		8327324	1					
ANR	8328473	Identifier	pjl_font_number		8327324	1					
ANR	8328474	PostIncDecOperationExpression	pcs -> pjl_dlfont_number ++		8327324	1					
ANR	8328475	PtrMemberAccess	pcs -> pjl_dlfont_number		8327324	0					
ANR	8328476	Identifier	pcs		8327324	0					
ANR	8328477	Identifier	pjl_dlfont_number		8327324	1					
ANR	8328478	IncDec	++		8327324	1					
ANR	8328479	ExpressionStatement	"code = pl_dict_put ( & pcs -> soft_fonts , current_font_id , current_font_id_size , plfont )"	504:4:18941:19040	8327324	40	True				
ANR	8328480	AssignmentExpression	"code = pl_dict_put ( & pcs -> soft_fonts , current_font_id , current_font_id_size , plfont )"		8327324	0		=			
ANR	8328481	Identifier	code		8327324	0					
ANR	8328482	CallExpression	"pl_dict_put ( & pcs -> soft_fonts , current_font_id , current_font_id_size , plfont )"		8327324	1					
ANR	8328483	Callee	pl_dict_put		8327324	0					
ANR	8328484	Identifier	pl_dict_put		8327324	0					
ANR	8328485	ArgumentList	& pcs -> soft_fonts		8327324	1					
ANR	8328486	Argument	& pcs -> soft_fonts		8327324	0					
ANR	8328487	UnaryOperationExpression	& pcs -> soft_fonts		8327324	0					
ANR	8328488	UnaryOperator	&		8327324	0					
ANR	8328489	PtrMemberAccess	pcs -> soft_fonts		8327324	1					
ANR	8328490	Identifier	pcs		8327324	0					
ANR	8328491	Identifier	soft_fonts		8327324	1					
ANR	8328492	Argument	current_font_id		8327324	1					
ANR	8328493	Identifier	current_font_id		8327324	0					
ANR	8328494	Argument	current_font_id_size		8327324	2					
ANR	8328495	Identifier	current_font_id_size		8327324	0					
ANR	8328496	Argument	plfont		8327324	3					
ANR	8328497	Identifier	plfont		8327324	0					
ANR	8328498	IfStatement	if ( code < 0 )		8327324	41					
ANR	8328499	Condition	code < 0	506:8:19050:19057	8327324	0	True				
ANR	8328500	RelationalExpression	code < 0		8327324	0		<			
ANR	8328501	Identifier	code		8327324	0					
ANR	8328502	PrimaryExpression	0		8327324	1					
ANR	8328503	ReturnStatement	return code ;	507:8:19068:19079	8327324	1	True				
ANR	8328504	Identifier	code		8327324	0					
ANR	8328505	ExpressionStatement	plfont -> pfont -> procs . define_font = gs_no_define_font	508:4:19085:19137	8327324	42	True				
ANR	8328506	AssignmentExpression	plfont -> pfont -> procs . define_font = gs_no_define_font		8327324	0		=			
ANR	8328507	MemberAccess	plfont -> pfont -> procs . define_font		8327324	0					
ANR	8328508	PtrMemberAccess	plfont -> pfont -> procs		8327324	0					
ANR	8328509	PtrMemberAccess	plfont -> pfont		8327324	0					
ANR	8328510	Identifier	plfont		8327324	0					
ANR	8328511	Identifier	pfont		8327324	1					
ANR	8328512	Identifier	procs		8327324	1					
ANR	8328513	Identifier	define_font		8327324	1					
ANR	8328514	Identifier	gs_no_define_font		8327324	1					
ANR	8328515	IfStatement	"if ( ( code = gs_definefont ( pcs -> font_dir , plfont -> pfont ) ) != 0 )"		8327324	43					
ANR	8328516	Condition	"( code = gs_definefont ( pcs -> font_dir , plfont -> pfont ) ) != 0"	510:8:19148:19204	8327324	0	True				
ANR	8328517	EqualityExpression	"( code = gs_definefont ( pcs -> font_dir , plfont -> pfont ) ) != 0"		8327324	0		!=			
ANR	8328518	AssignmentExpression	"code = gs_definefont ( pcs -> font_dir , plfont -> pfont )"		8327324	0		=			
ANR	8328519	Identifier	code		8327324	0					
ANR	8328520	CallExpression	"gs_definefont ( pcs -> font_dir , plfont -> pfont )"		8327324	1					
ANR	8328521	Callee	gs_definefont		8327324	0					
ANR	8328522	Identifier	gs_definefont		8327324	0					
ANR	8328523	ArgumentList	pcs -> font_dir		8327324	1					
ANR	8328524	Argument	pcs -> font_dir		8327324	0					
ANR	8328525	PtrMemberAccess	pcs -> font_dir		8327324	0					
ANR	8328526	Identifier	pcs		8327324	0					
ANR	8328527	Identifier	font_dir		8327324	1					
ANR	8328528	Argument	plfont -> pfont		8327324	1					
ANR	8328529	PtrMemberAccess	plfont -> pfont		8327324	0					
ANR	8328530	Identifier	plfont		8327324	0					
ANR	8328531	Identifier	pfont		8327324	1					
ANR	8328532	PrimaryExpression	0		8327324	1					
ANR	8328533	CompoundStatement		251:67:9882:9882	8327324	1					
ANR	8328534	ReturnStatement	return ( code ) ;	511:8:19217:19230	8327324	0	True				
ANR	8328535	Identifier	code		8327324	0					
ANR	8328536	IfStatement	if ( plfont -> scaling_technology == plfst_TrueType )		8327324	44					
ANR	8328537	Condition	plfont -> scaling_technology == plfst_TrueType	514:8:19247:19290	8327324	0	True				
ANR	8328538	EqualityExpression	plfont -> scaling_technology == plfst_TrueType		8327324	0		==			
ANR	8328539	PtrMemberAccess	plfont -> scaling_technology		8327324	0					
ANR	8328540	Identifier	plfont		8327324	0					
ANR	8328541	Identifier	scaling_technology		8327324	1					
ANR	8328542	Identifier	plfst_TrueType		8327324	1					
ANR	8328543	ExpressionStatement	"code = pl_fapi_passfont ( plfont , 0 , NULL , NULL , NULL , 0 )"	515:8:19301:19356	8327324	1	True				
ANR	8328544	AssignmentExpression	"code = pl_fapi_passfont ( plfont , 0 , NULL , NULL , NULL , 0 )"		8327324	0		=			
ANR	8328545	Identifier	code		8327324	0					
ANR	8328546	CallExpression	"pl_fapi_passfont ( plfont , 0 , NULL , NULL , NULL , 0 )"		8327324	1					
ANR	8328547	Callee	pl_fapi_passfont		8327324	0					
ANR	8328548	Identifier	pl_fapi_passfont		8327324	0					
ANR	8328549	ArgumentList	plfont		8327324	1					
ANR	8328550	Argument	plfont		8327324	0					
ANR	8328551	Identifier	plfont		8327324	0					
ANR	8328552	Argument	0		8327324	1					
ANR	8328553	PrimaryExpression	0		8327324	0					
ANR	8328554	Argument	NULL		8327324	2					
ANR	8328555	Identifier	NULL		8327324	0					
ANR	8328556	Argument	NULL		8327324	3					
ANR	8328557	Identifier	NULL		8327324	0					
ANR	8328558	Argument	NULL		8327324	4					
ANR	8328559	Identifier	NULL		8327324	0					
ANR	8328560	Argument	0		8327324	5					
ANR	8328561	PrimaryExpression	0		8327324	0					
ANR	8328562	ReturnStatement	return ( code ) ;	517:4:19363:19376	8327324	45	True				
ANR	8328563	Identifier	code		8327324	0					
ANR	8328564	ReturnType	static int		8327324	1					
ANR	8328565	Identifier	pcl_font_header		8327324	2					
ANR	8328566	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8327324	3					
ANR	8328567	Parameter	pcl_args_t * pargs	259:16:9285:9302	8327324	0	True				
ANR	8328568	ParameterType	pcl_args_t *		8327324	0					
ANR	8328569	Identifier	pargs		8327324	1					
ANR	8328570	Parameter	pcl_state_t * pcs	259:36:9305:9321	8327324	1	True				
ANR	8328571	ParameterType	pcl_state_t *		8327324	0					
ANR	8328572	Identifier	pcs		8327324	1					
ANR	8328573	CFGEntryNode	ENTRY		8327324		True				
ANR	8328574	CFGExitNode	EXIT		8327324		True				
ANR	8328575	Symbol	* * pfh		8327324						
ANR	8328576	Symbol	plfont -> header		8327324						
ANR	8328577	Symbol	plfont		8327324						
ANR	8328578	Symbol	plfont -> data_are_permanent		8327324						
ANR	8328579	Symbol	gs_next_ids		8327324						
ANR	8328580	Symbol	pfh -> Height		8327324						
ANR	8328581	Symbol	gs_definefont		8327324						
ANR	8328582	Symbol	pargs		8327324						
ANR	8328583	Symbol	& pcs -> soft_fonts		8327324						
ANR	8328584	Symbol	pfh -> FontType		8327324						
ANR	8328585	Symbol	pcs -> memory		8327324						
ANR	8328586	Symbol	pfont -> data . unitsPerEm		8327324						
ANR	8328587	Symbol	plfont -> font_type		8327324						
ANR	8328588	Symbol	* pfhx		8327324						
ANR	8328589	Symbol	plfont -> params . proportional_spacing		8327324						
ANR	8328590	Symbol	* pfh -> FontDescriptorSize		8327324						
ANR	8328591	Symbol	current_font_id_size		8327324						
ANR	8328592	Symbol	plfont -> storage		8327324						
ANR	8328593	Symbol	plfont -> params . stroke_weight		8327324						
ANR	8328594	Symbol	plfont -> character_complement		8327324						
ANR	8328595	Symbol	pfh -> FontDescriptorSize		8327324						
ANR	8328596	Symbol	pfh		8327324						
ANR	8328597	Symbol	current_font_id		8327324						
ANR	8328598	Symbol	plfont -> resolution . x		8327324						
ANR	8328599	Symbol	plfont -> resolution . y		8327324						
ANR	8328600	Symbol	plfst_Intellifont		8327324						
ANR	8328601	Symbol	pl_alloc_font		8327324						
ANR	8328602	Symbol	pcfh_truetype_large		8327324						
ANR	8328603	Symbol	pfh -> StrokeWeight		8327324						
ANR	8328604	Symbol	fst		8327324						
ANR	8328605	Symbol	pfh -> LastCode		8327324						
ANR	8328606	Symbol	sum		8327324						
ANR	8328607	Symbol	pitch_cp		8327324						
ANR	8328608	Symbol	pfh -> StyleLSB		8327324						
ANR	8328609	Symbol	pfh -> HeaderFormat		8327324						
ANR	8328610	Symbol	pl_fill_in_tt_font		8327324						
ANR	8328611	Symbol	pcfh_intellifont_bound		8327324						
ANR	8328612	Symbol	e_Memory		8327324						
ANR	8328613	Symbol	plfont -> font_file		8327324						
ANR	8328614	Symbol	* pfh		8327324						
ANR	8328615	Symbol	gs_error_invalidfont		8327324						
ANR	8328616	Symbol	pl_font_alloc_glyph_table		8327324						
ANR	8328617	Symbol	e_Range		8327324						
ANR	8328618	Symbol	& plfont -> params		8327324						
ANR	8328619	Symbol	height_quarter_dots		8327324						
ANR	8328620	Symbol	pcfh_bitmap		8327324						
ANR	8328621	Symbol	i		8327324						
ANR	8328622	Symbol	pfont -> data		8327324						
ANR	8328623	Symbol	pl_fill_in_font		8327324						
ANR	8328624	Symbol	uint_arg		8327324						
ANR	8328625	Symbol	pcds_temporary		8327324						
ANR	8328626	Symbol	pfhx -> XResolution		8327324						
ANR	8328627	Symbol	& st_gs_font_type42		8327324						
ANR	8328628	Symbol	plfont -> params . pjl_font_number		8327324						
ANR	8328629	Symbol	* data		8327324						
ANR	8328630	Symbol	gs_no_define_font		8327324						
ANR	8328631	Symbol	pl_fapi_passfont		8327324						
ANR	8328632	Symbol	plfont -> scaling_technology		8327324						
ANR	8328633	Symbol	plfont -> params . height_4ths		8327324						
ANR	8328634	Symbol	data		8327324						
ANR	8328635	Symbol	* plfont -> pfont		8327324						
ANR	8328636	Symbol	* pcs		8327324						
ANR	8328637	Symbol	pfh -> StyleMSB		8327324						
ANR	8328638	Symbol	gs_font_base		8327324						
ANR	8328639	Symbol	pfh -> Spacing		8327324						
ANR	8328640	Symbol	pfhx -> YResolution		8327324						
ANR	8328641	Symbol	pfh -> TypefaceMSB		8327324						
ANR	8328642	Symbol	pcs -> pjl_dlfont_number		8327324						
ANR	8328643	Symbol	has_checksum		8327324						
ANR	8328644	Symbol	gs_debug_c		8327324						
ANR	8328645	Symbol	& st_gs_font_base		8327324						
ANR	8328646	Symbol	NULL		8327324						
ANR	8328647	Symbol	plfont -> header_size		8327324						
ANR	8328648	Symbol	* * plfont		8327324						
ANR	8328649	Symbol	count		8327324						
ANR	8328650	Symbol	plfont -> is_xl_format		8327324						
ANR	8328651	Symbol	& errors		8327324						
ANR	8328652	Symbol	pitch_1024th_dots		8327324						
ANR	8328653	Symbol	desc_size		8327324						
ANR	8328654	Symbol	pfhx		8327324						
ANR	8328655	Symbol	plfont -> params . style		8327324						
ANR	8328656	Symbol	pl_tt_alloc_char_glyphs		8327324						
ANR	8328657	Symbol	true		8327324						
ANR	8328658	Symbol	header		8327324						
ANR	8328659	Symbol	plfst_TrueType		8327324						
ANR	8328660	Symbol	pfh -> SymbolSet		8327324						
ANR	8328661	Symbol	pl_dict_put		8327324						
ANR	8328662	Symbol	errors		8327324						
ANR	8328663	Symbol	pcs -> font_dir		8327324						
ANR	8328664	Symbol	code		8327324						
ANR	8328665	Symbol	plfont -> pfont -> procs . define_font		8327324						
ANR	8328666	Symbol	plfst_bitmap		8327324						
ANR	8328667	Symbol	gs_alloc_struct		8327324						
ANR	8328668	Symbol	pfh -> TypefaceLSB		8327324						
ANR	8328669	Symbol	pcl_delete_soft_font		8327324						
ANR	8328670	Symbol	mem		8327324						
ANR	8328671	Symbol	plfont -> pfont -> procs		8327324						
ANR	8328672	Symbol	pfh -> Pitch		8327324						
ANR	8328673	Symbol	plfont -> params . typeface_family		8327324						
ANR	8328674	Symbol	floor		8327324						
ANR	8328675	Symbol	pfh -> PitchExtended		8327324						
ANR	8328676	Symbol	pcs		8327324						
ANR	8328677	Symbol	pcfh_resolution_bitmap		8327324						
ANR	8328678	Symbol	pl_font_scan_segments		8327324						
ANR	8328679	Symbol	gs_alloc_bytes		8327324						
ANR	8328680	Symbol	pl_get_uint16		8327324						
ANR	8328681	Symbol	plfont -> params . symbol_set		8327324						
ANR	8328682	Symbol	pfont		8327324						
ANR	8328683	Symbol	false		8327324						
ANR	8328684	Symbol	plfont -> resolution		8327324						
ANR	8328685	Symbol	* pfont		8327324						
ANR	8328686	Symbol	* i		8327324						
ANR	8328687	Symbol	plfont -> pfont		8327324						
ANR	8328688	Symbol	arg_data		8327324						
ANR	8328689	Symbol	plfont -> params		8327324						
ANR	8328690	Symbol	* plfont		8327324						
ANR	8328691	Symbol	num_chars		8327324						
ANR	8328692	Symbol	gs_font_type42		8327324						
ANR	8328693	Function	pcl_character_code	520:0:19381:19558							
ANR	8328694	FunctionDef	"pcl_character_code (pcl_args_t * pargs , pcl_state_t * pcs)"		8328693	0					
ANR	8328695	CompoundStatement		522:0:19499:19558	8328693	0					
ANR	8328696	ExpressionStatement	pcs -> character_code = uint_arg ( pargs )	523:4:19505:19542	8328693	0	True				
ANR	8328697	AssignmentExpression	pcs -> character_code = uint_arg ( pargs )		8328693	0		=			
ANR	8328698	PtrMemberAccess	pcs -> character_code		8328693	0					
ANR	8328699	Identifier	pcs		8328693	0					
ANR	8328700	Identifier	character_code		8328693	1					
ANR	8328701	CallExpression	uint_arg ( pargs )		8328693	1					
ANR	8328702	Callee	uint_arg		8328693	0					
ANR	8328703	Identifier	uint_arg		8328693	0					
ANR	8328704	ArgumentList	pargs		8328693	1					
ANR	8328705	Argument	pargs		8328693	0					
ANR	8328706	Identifier	pargs		8328693	0					
ANR	8328707	ReturnStatement	return 0 ;	524:4:19548:19556	8328693	1	True				
ANR	8328708	PrimaryExpression	0		8328693	0					
ANR	8328709	ReturnType	static int		8328693	1					
ANR	8328710	Identifier	pcl_character_code		8328693	2					
ANR	8328711	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8328693	3					
ANR	8328712	Parameter	pcl_args_t * pargs	521:19:19460:19477	8328693	0	True				
ANR	8328713	ParameterType	pcl_args_t *		8328693	0					
ANR	8328714	Identifier	pargs		8328693	1					
ANR	8328715	Parameter	pcl_state_t * pcs	521:39:19480:19496	8328693	1	True				
ANR	8328716	ParameterType	pcl_state_t *		8328693	0					
ANR	8328717	Identifier	pcs		8328693	1					
ANR	8328718	CFGEntryNode	ENTRY		8328693		True				
ANR	8328719	CFGExitNode	EXIT		8328693		True				
ANR	8328720	Symbol	pcs		8328693						
ANR	8328721	Symbol	pargs		8328693						
ANR	8328722	Symbol	pcs -> character_code		8328693						
ANR	8328723	Symbol	* pcs		8328693						
ANR	8328724	Symbol	uint_arg		8328693						
ANR	8328725	Function	pcl_character_data	527:0:19561:29058							
ANR	8328726	FunctionDef	"pcl_character_data (pcl_args_t * pargs , pcl_state_t * pcs)"		8328725	0					
ANR	8328727	CompoundStatement		529:0:19675:29058	8328725	0					
ANR	8328728	IdentifierDeclStatement	uint count = uint_arg ( pargs ) ;	530:4:19681:19709	8328725	0	True				
ANR	8328729	IdentifierDecl	count = uint_arg ( pargs )		8328725	0					
ANR	8328730	IdentifierDeclType	uint		8328725	0					
ANR	8328731	Identifier	count		8328725	1					
ANR	8328732	AssignmentExpression	count = uint_arg ( pargs )		8328725	2		=			
ANR	8328733	Identifier	count		8328725	0					
ANR	8328734	CallExpression	uint_arg ( pargs )		8328725	1					
ANR	8328735	Callee	uint_arg		8328725	0					
ANR	8328736	Identifier	uint_arg		8328725	0					
ANR	8328737	ArgumentList	pargs		8328725	1					
ANR	8328738	Argument	pargs		8328725	0					
ANR	8328739	Identifier	pargs		8328725	0					
ANR	8328740	IdentifierDeclStatement	uint font_data_size = count ;	531:4:19715:19742	8328725	1	True				
ANR	8328741	IdentifierDecl	font_data_size = count		8328725	0					
ANR	8328742	IdentifierDeclType	uint		8328725	0					
ANR	8328743	Identifier	font_data_size		8328725	1					
ANR	8328744	AssignmentExpression	font_data_size = count		8328725	2		=			
ANR	8328745	Identifier	count		8328725	0					
ANR	8328746	Identifier	count		8328725	1					
ANR	8328747	IdentifierDeclStatement	const byte * data = arg_data ( pargs ) ;	532:4:19748:19782	8328725	2	True				
ANR	8328748	IdentifierDecl	* data = arg_data ( pargs )		8328725	0					
ANR	8328749	IdentifierDeclType	const byte *		8328725	0					
ANR	8328750	Identifier	data		8328725	1					
ANR	8328751	AssignmentExpression	* data = arg_data ( pargs )		8328725	2		=			
ANR	8328752	Identifier	data		8328725	0					
ANR	8328753	CallExpression	arg_data ( pargs )		8328725	1					
ANR	8328754	Callee	arg_data		8328725	0					
ANR	8328755	Identifier	arg_data		8328725	0					
ANR	8328756	ArgumentList	pargs		8328725	1					
ANR	8328757	Argument	pargs		8328725	0					
ANR	8328758	Identifier	pargs		8328725	0					
ANR	8328759	IdentifierDeclStatement	void * value ;	533:4:19788:19799	8328725	3	True				
ANR	8328760	IdentifierDecl	* value		8328725	0					
ANR	8328761	IdentifierDeclType	void *		8328725	0					
ANR	8328762	Identifier	value		8328725	1					
ANR	8328763	IdentifierDeclStatement	pl_font_t * plfont ;	534:4:19805:19822	8328725	4	True				
ANR	8328764	IdentifierDecl	* plfont		8328725	0					
ANR	8328765	IdentifierDeclType	pl_font_t *		8328725	0					
ANR	8328766	Identifier	plfont		8328725	1					
ANR	8328767	IdentifierDeclStatement	pcl_font_header_format_t format ;	535:4:19828:19859	8328725	5	True				
ANR	8328768	IdentifierDecl	format		8328725	0					
ANR	8328769	IdentifierDeclType	pcl_font_header_format_t		8328725	0					
ANR	8328770	Identifier	format		8328725	1					
ANR	8328771	IdentifierDeclStatement	byte * char_data = 0 ;	536:4:19865:19884	8328725	6	True				
ANR	8328772	IdentifierDecl	* char_data = 0		8328725	0					
ANR	8328773	IdentifierDeclType	byte *		8328725	0					
ANR	8328774	Identifier	char_data		8328725	1					
ANR	8328775	AssignmentExpression	* char_data = 0		8328725	2		=			
ANR	8328776	Identifier	char_data		8328725	0					
ANR	8328777	PrimaryExpression	0		8328725	1					
ANR	8328778	IdentifierDeclStatement	int code ;	537:4:19890:19898	8328725	7	True				
ANR	8328779	IdentifierDecl	code		8328725	0					
ANR	8328780	IdentifierDeclType	int		8328725	0					
ANR	8328781	Identifier	code		8328725	1					
ANR	8328782	IfStatement	if ( gs_debug_c ( 'i' ) )		8328725	8					
ANR	8328783	Condition	gs_debug_c ( 'i' )	540:8:19922:19936	8328725	0	True				
ANR	8328784	CallExpression	gs_debug_c ( 'i' )		8328725	0					
ANR	8328785	Callee	gs_debug_c		8328725	0					
ANR	8328786	Identifier	gs_debug_c		8328725	0					
ANR	8328787	ArgumentList	'i'		8328725	1					
ANR	8328788	Argument	'i'		8328725	0					
ANR	8328789	PrimaryExpression	'i'		8328725	0					
ANR	8328790	CompoundStatement		12:25:263:263	8328725	1					
ANR	8328791	ExpressionStatement	"pcl_debug_dump_data ( pcs -> memory , arg_data ( pargs ) , uint_arg ( pargs ) )"	541:8:19949:20015	8328725	0	True				
ANR	8328792	CallExpression	"pcl_debug_dump_data ( pcs -> memory , arg_data ( pargs ) , uint_arg ( pargs ) )"		8328725	0					
ANR	8328793	Callee	pcl_debug_dump_data		8328725	0					
ANR	8328794	Identifier	pcl_debug_dump_data		8328725	0					
ANR	8328795	ArgumentList	pcs -> memory		8328725	1					
ANR	8328796	Argument	pcs -> memory		8328725	0					
ANR	8328797	PtrMemberAccess	pcs -> memory		8328725	0					
ANR	8328798	Identifier	pcs		8328725	0					
ANR	8328799	Identifier	memory		8328725	1					
ANR	8328800	Argument	arg_data ( pargs )		8328725	1					
ANR	8328801	CallExpression	arg_data ( pargs )		8328725	0					
ANR	8328802	Callee	arg_data		8328725	0					
ANR	8328803	Identifier	arg_data		8328725	0					
ANR	8328804	ArgumentList	pargs		8328725	1					
ANR	8328805	Argument	pargs		8328725	0					
ANR	8328806	Identifier	pargs		8328725	0					
ANR	8328807	Argument	uint_arg ( pargs )		8328725	2					
ANR	8328808	CallExpression	uint_arg ( pargs )		8328725	0					
ANR	8328809	Callee	uint_arg		8328725	0					
ANR	8328810	Identifier	uint_arg		8328725	0					
ANR	8328811	ArgumentList	pargs		8328725	1					
ANR	8328812	Argument	pargs		8328725	0					
ANR	8328813	Identifier	pargs		8328725	0					
ANR	8328814	IfStatement	"if ( ! pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value ) )"		8328725	9					
ANR	8328815	Condition	"! pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value )"	545:8:20039:20156	8328725	0	True				
ANR	8328816	UnaryOperationExpression	"! pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value )"		8328725	0					
ANR	8328817	UnaryOperator	!		8328725	0					
ANR	8328818	CallExpression	"pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value )"		8328725	1					
ANR	8328819	Callee	pl_dict_find_no_stack		8328725	0					
ANR	8328820	Identifier	pl_dict_find_no_stack		8328725	0					
ANR	8328821	ArgumentList	& pcs -> soft_fonts		8328725	1					
ANR	8328822	Argument	& pcs -> soft_fonts		8328725	0					
ANR	8328823	UnaryOperationExpression	& pcs -> soft_fonts		8328725	0					
ANR	8328824	UnaryOperator	&		8328725	0					
ANR	8328825	PtrMemberAccess	pcs -> soft_fonts		8328725	1					
ANR	8328826	Identifier	pcs		8328725	0					
ANR	8328827	Identifier	soft_fonts		8328725	1					
ANR	8328828	Argument	current_font_id		8328725	1					
ANR	8328829	Identifier	current_font_id		8328725	0					
ANR	8328830	Argument	current_font_id_size		8328725	2					
ANR	8328831	Identifier	current_font_id_size		8328725	0					
ANR	8328832	Argument	& value		8328725	3					
ANR	8328833	UnaryOperationExpression	& value		8328725	0					
ANR	8328834	UnaryOperator	&		8328725	0					
ANR	8328835	Identifier	value		8328725	1					
ANR	8328836	ReturnStatement	return 0 ;	547:8:20167:20175	8328725	1	True				
ANR	8328837	PrimaryExpression	0		8328725	0					
ANR	8328838	ExpressionStatement	plfont = ( ( pl_font_t * ) value )	549:4:20217:20247	8328725	10	True				
ANR	8328839	AssignmentExpression	plfont = ( ( pl_font_t * ) value )		8328725	0		=			
ANR	8328840	Identifier	plfont		8328725	0					
ANR	8328841	CastExpression	( pl_font_t * ) value		8328725	1					
ANR	8328842	CastTarget	pl_font_t *		8328725	0					
ANR	8328843	Identifier	value		8328725	1					
ANR	8328844	IfStatement	if ( count < 4 || data [ 2 ] > count - 2 )		8328725	11					
ANR	8328845	Condition	count < 4 || data [ 2 ] > count - 2	551:8:20258:20289	8328725	0	True				
ANR	8328846	OrExpression	count < 4 || data [ 2 ] > count - 2		8328725	0		||			
ANR	8328847	RelationalExpression	count < 4		8328725	0		<			
ANR	8328848	Identifier	count		8328725	0					
ANR	8328849	PrimaryExpression	4		8328725	1					
ANR	8328850	RelationalExpression	data [ 2 ] > count - 2		8328725	1		>			
ANR	8328851	ArrayIndexing	data [ 2 ]		8328725	0					
ANR	8328852	Identifier	data		8328725	0					
ANR	8328853	PrimaryExpression	2		8328725	1					
ANR	8328854	AdditiveExpression	count - 2		8328725	1		-			
ANR	8328855	Identifier	count		8328725	0					
ANR	8328856	PrimaryExpression	2		8328725	1					
ANR	8328857	ReturnStatement	return e_Range ;	552:8:20300:20314	8328725	1	True				
ANR	8328858	Identifier	e_Range		8328725	0					
ANR	8328859	IfStatement	if ( data [ 1 ] )		8328725	12					
ANR	8328860	Condition	data [ 1 ]	553:8:20324:20330	8328725	0	True				
ANR	8328861	ArrayIndexing	data [ 1 ]		8328725	0					
ANR	8328862	Identifier	data		8328725	0					
ANR	8328863	PrimaryExpression	1		8328725	1					
ANR	8328864	CompoundStatement		25:17:657:657	8328725	1					
ANR	8328865	IfStatement	if ( ( pcs -> soft_font_char_data == 0 ) )		8328725	0					
ANR	8328866	Condition	pcs -> soft_font_char_data == 0	558:12:20612:20642	8328725	0	True				
ANR	8328867	EqualityExpression	pcs -> soft_font_char_data == 0		8328725	0		==			
ANR	8328868	PtrMemberAccess	pcs -> soft_font_char_data		8328725	0					
ANR	8328869	Identifier	pcs		8328725	0					
ANR	8328870	Identifier	soft_font_char_data		8328725	1					
ANR	8328871	PrimaryExpression	0		8328725	1					
ANR	8328872	ReturnStatement	return e_Range ;	559:12:20657:20671	8328725	1	True				
ANR	8328873	Identifier	e_Range		8328725	0					
ANR	8328874	IfStatement	if ( data [ 0 ] != pccd_bitmap && data [ 3 ] != 1 )		8328725	1					
ANR	8328875	Condition	data [ 0 ] != pccd_bitmap && data [ 3 ] != 1	563:12:20862:20899	8328725	0	True				
ANR	8328876	AndExpression	data [ 0 ] != pccd_bitmap && data [ 3 ] != 1		8328725	0		&&			
ANR	8328877	EqualityExpression	data [ 0 ] != pccd_bitmap		8328725	0		!=			
ANR	8328878	ArrayIndexing	data [ 0 ]		8328725	0					
ANR	8328879	Identifier	data		8328725	0					
ANR	8328880	PrimaryExpression	0		8328725	1					
ANR	8328881	Identifier	pccd_bitmap		8328725	1					
ANR	8328882	EqualityExpression	data [ 3 ] != 1		8328725	1		!=			
ANR	8328883	ArrayIndexing	data [ 3 ]		8328725	0					
ANR	8328884	Identifier	data		8328725	0					
ANR	8328885	PrimaryExpression	3		8328725	1					
ANR	8328886	PrimaryExpression	1		8328725	1					
ANR	8328887	CompoundStatement		35:52:1226:1226	8328725	1					
ANR	8328888	ExpressionStatement	"dmprintf ( pcs -> memory , ""continuation not implemented for this font type\\n"" )"	564:12:20916:21011	8328725	0	True				
ANR	8328889	CallExpression	"dmprintf ( pcs -> memory , ""continuation not implemented for this font type\\n"" )"		8328725	0					
ANR	8328890	Callee	dmprintf		8328725	0					
ANR	8328891	Identifier	dmprintf		8328725	0					
ANR	8328892	ArgumentList	pcs -> memory		8328725	1					
ANR	8328893	Argument	pcs -> memory		8328725	0					
ANR	8328894	PtrMemberAccess	pcs -> memory		8328725	0					
ANR	8328895	Identifier	pcs		8328725	0					
ANR	8328896	Identifier	memory		8328725	1					
ANR	8328897	Argument	"""continuation not implemented for this font type\\n"""		8328725	1					
ANR	8328898	PrimaryExpression	"""continuation not implemented for this font type\\n"""		8328725	0					
ANR	8328899	ReturnStatement	return e_Unimplemented ;	566:12:21025:21047	8328725	1	True				
ANR	8328900	Identifier	e_Unimplemented		8328725	0					
ANR	8328901	IfStatement	"if ( pcs -> soft_font_count + count - 2 > gs_object_size ( pcs -> memory , pcs -> soft_font_char_data ) )"		8328725	2					
ANR	8328902	Condition	"pcs -> soft_font_count + count - 2 > gs_object_size ( pcs -> memory , pcs -> soft_font_char_data )"	569:12:21110:21197	8328725	0	True				
ANR	8328903	RelationalExpression	"pcs -> soft_font_count + count - 2 > gs_object_size ( pcs -> memory , pcs -> soft_font_char_data )"		8328725	0		>			
ANR	8328904	AdditiveExpression	pcs -> soft_font_count + count - 2		8328725	0		+			
ANR	8328905	PtrMemberAccess	pcs -> soft_font_count		8328725	0					
ANR	8328906	Identifier	pcs		8328725	0					
ANR	8328907	Identifier	soft_font_count		8328725	1					
ANR	8328908	AdditiveExpression	count - 2		8328725	1		-			
ANR	8328909	Identifier	count		8328725	0					
ANR	8328910	PrimaryExpression	2		8328725	1					
ANR	8328911	CallExpression	"gs_object_size ( pcs -> memory , pcs -> soft_font_char_data )"		8328725	1					
ANR	8328912	Callee	gs_object_size		8328725	0					
ANR	8328913	Identifier	gs_object_size		8328725	0					
ANR	8328914	ArgumentList	pcs -> memory		8328725	1					
ANR	8328915	Argument	pcs -> memory		8328725	0					
ANR	8328916	PtrMemberAccess	pcs -> memory		8328725	0					
ANR	8328917	Identifier	pcs		8328725	0					
ANR	8328918	Identifier	memory		8328725	1					
ANR	8328919	Argument	pcs -> soft_font_char_data		8328725	1					
ANR	8328920	PtrMemberAccess	pcs -> soft_font_char_data		8328725	0					
ANR	8328921	Identifier	pcs		8328725	0					
ANR	8328922	Identifier	soft_font_char_data		8328725	1					
ANR	8328923	ReturnStatement	return e_Range ;	570:12:21212:21226	8328725	1	True				
ANR	8328924	Identifier	e_Range		8328725	0					
ANR	8328925	ExpressionStatement	"memcpy ( pcs -> soft_font_char_data + pcs -> soft_font_count , data + 2 , count - 2 )"	573:8:21289:21380	8328725	3	True				
ANR	8328926	CallExpression	"memcpy ( pcs -> soft_font_char_data + pcs -> soft_font_count , data + 2 , count - 2 )"		8328725	0					
ANR	8328927	Callee	memcpy		8328725	0					
ANR	8328928	Identifier	memcpy		8328725	0					
ANR	8328929	ArgumentList	pcs -> soft_font_char_data + pcs -> soft_font_count		8328725	1					
ANR	8328930	Argument	pcs -> soft_font_char_data + pcs -> soft_font_count		8328725	0					
ANR	8328931	AdditiveExpression	pcs -> soft_font_char_data + pcs -> soft_font_count		8328725	0		+			
ANR	8328932	PtrMemberAccess	pcs -> soft_font_char_data		8328725	0					
ANR	8328933	Identifier	pcs		8328725	0					
ANR	8328934	Identifier	soft_font_char_data		8328725	1					
ANR	8328935	PtrMemberAccess	pcs -> soft_font_count		8328725	1					
ANR	8328936	Identifier	pcs		8328725	0					
ANR	8328937	Identifier	soft_font_count		8328725	1					
ANR	8328938	Argument	data + 2		8328725	1					
ANR	8328939	AdditiveExpression	data + 2		8328725	0		+			
ANR	8328940	Identifier	data		8328725	0					
ANR	8328941	PrimaryExpression	2		8328725	1					
ANR	8328942	Argument	count - 2		8328725	2					
ANR	8328943	AdditiveExpression	count - 2		8328725	0		-			
ANR	8328944	Identifier	count		8328725	0					
ANR	8328945	PrimaryExpression	2		8328725	1					
ANR	8328946	ExpressionStatement	pcs -> soft_font_count += ( count - 2 )	576:8:21434:21469	8328725	4	True				
ANR	8328947	AssignmentExpression	pcs -> soft_font_count += ( count - 2 )		8328725	0		+=			
ANR	8328948	PtrMemberAccess	pcs -> soft_font_count		8328725	0					
ANR	8328949	Identifier	pcs		8328725	0					
ANR	8328950	Identifier	soft_font_count		8328725	1					
ANR	8328951	AdditiveExpression	count - 2		8328725	1		-			
ANR	8328952	Identifier	count		8328725	0					
ANR	8328953	PrimaryExpression	2		8328725	1					
ANR	8328954	ReturnStatement	return 0 ;	577:8:21479:21487	8328725	5	True				
ANR	8328955	PrimaryExpression	0		8328725	0					
ANR	8328956	ElseStatement	else		8328725	0					
ANR	8328957	CompoundStatement		50:11:1824:1824	8328725	0					
ANR	8328958	ExpressionStatement	pcs -> soft_font_count = 0	579:8:21510:21534	8328725	0	True				
ANR	8328959	AssignmentExpression	pcs -> soft_font_count = 0		8328725	0		=			
ANR	8328960	PtrMemberAccess	pcs -> soft_font_count		8328725	0					
ANR	8328961	Identifier	pcs		8328725	0					
ANR	8328962	Identifier	soft_font_count		8328725	1					
ANR	8328963	PrimaryExpression	0		8328725	1					
ANR	8328964	ExpressionStatement	pcs -> soft_font_char_data = 0	580:8:21544:21572	8328725	1	True				
ANR	8328965	AssignmentExpression	pcs -> soft_font_char_data = 0		8328725	0		=			
ANR	8328966	PtrMemberAccess	pcs -> soft_font_char_data		8328725	0					
ANR	8328967	Identifier	pcs		8328725	0					
ANR	8328968	Identifier	soft_font_char_data		8328725	1					
ANR	8328969	PrimaryExpression	0		8328725	1					
ANR	8328970	ExpressionStatement	format = ( pcl_font_header_format_t ) ( ( const pcl_font_header_t * ) plfont -> header ) -> HeaderFormat	582:4:21584:21685	8328725	13	True				
ANR	8328971	AssignmentExpression	format = ( pcl_font_header_format_t ) ( ( const pcl_font_header_t * ) plfont -> header ) -> HeaderFormat		8328725	0		=			
ANR	8328972	Identifier	format		8328725	0					
ANR	8328973	CastExpression	( pcl_font_header_format_t ) ( ( const pcl_font_header_t * ) plfont -> header ) -> HeaderFormat		8328725	1					
ANR	8328974	CastTarget	pcl_font_header_format_t		8328725	0					
ANR	8328975	PtrMemberAccess	( ( const pcl_font_header_t * ) plfont -> header ) -> HeaderFormat		8328725	1					
ANR	8328976	CastExpression	( const pcl_font_header_t * ) plfont -> header		8328725	0					
ANR	8328977	CastTarget	const pcl_font_header_t *		8328725	0					
ANR	8328978	PtrMemberAccess	plfont -> header		8328725	1					
ANR	8328979	Identifier	plfont		8328725	0					
ANR	8328980	Identifier	header		8328725	1					
ANR	8328981	Identifier	HeaderFormat		8328725	1					
ANR	8328982	SwitchStatement	switch ( data [ 0 ] )		8328725	14					
ANR	8328983	Condition	data [ 0 ]	584:12:21699:21705	8328725	0	True				
ANR	8328984	ArrayIndexing	data [ 0 ]		8328725	0					
ANR	8328985	Identifier	data		8328725	0					
ANR	8328986	PrimaryExpression	0		8328725	1					
ANR	8328987	CompoundStatement		56:21:2032:2032	8328725	1					
ANR	8328988	Label	case pccd_bitmap :	585:8:21718:21734	8328725	0	True				
ANR	8328989	Identifier	pccd_bitmap		8328725	0					
ANR	8328990	CompoundStatement		59:16:2090:2108	8328725	1					
ANR	8328991	IdentifierDeclStatement	"uint width , height ;"	587:16:21766:21784	8328725	0	True				
ANR	8328992	IdentifierDecl	width		8328725	0					
ANR	8328993	IdentifierDeclType	uint		8328725	0					
ANR	8328994	Identifier	width		8328725	1					
ANR	8328995	IdentifierDecl	height		8328725	1					
ANR	8328996	IdentifierDeclType	uint		8328725	0					
ANR	8328997	Identifier	height		8328725	1					
ANR	8328998	IfStatement	if ( data [ 2 ] != 14 || ( format != pcfh_bitmap && format != pcfh_resolution_bitmap && format != pcfh_truetype_large ) )		8328725	1					
ANR	8328999	Condition	data [ 2 ] != 14 || ( format != pcfh_bitmap && format != pcfh_resolution_bitmap && format != pcfh_truetype_large )	589:20:21807:21977	8328725	0	True				
ANR	8329000	OrExpression	data [ 2 ] != 14 || ( format != pcfh_bitmap && format != pcfh_resolution_bitmap && format != pcfh_truetype_large )		8328725	0		||			
ANR	8329001	EqualityExpression	data [ 2 ] != 14		8328725	0		!=			
ANR	8329002	ArrayIndexing	data [ 2 ]		8328725	0					
ANR	8329003	Identifier	data		8328725	0					
ANR	8329004	PrimaryExpression	2		8328725	1					
ANR	8329005	PrimaryExpression	14		8328725	1					
ANR	8329006	AndExpression	format != pcfh_bitmap && format != pcfh_resolution_bitmap && format != pcfh_truetype_large		8328725	1		&&			
ANR	8329007	EqualityExpression	format != pcfh_bitmap		8328725	0		!=			
ANR	8329008	Identifier	format		8328725	0					
ANR	8329009	Identifier	pcfh_bitmap		8328725	1					
ANR	8329010	AndExpression	format != pcfh_resolution_bitmap && format != pcfh_truetype_large		8328725	1		&&			
ANR	8329011	EqualityExpression	format != pcfh_resolution_bitmap		8328725	0		!=			
ANR	8329012	Identifier	format		8328725	0					
ANR	8329013	Identifier	pcfh_resolution_bitmap		8328725	1					
ANR	8329014	EqualityExpression	format != pcfh_truetype_large		8328725	1		!=			
ANR	8329015	Identifier	format		8328725	0					
ANR	8329016	Identifier	pcfh_truetype_large		8328725	1					
ANR	8329017	ReturnStatement	return e_Range ;	594:20:22021:22035	8328725	1	True				
ANR	8329018	Identifier	e_Range		8328725	0					
ANR	8329019	ExpressionStatement	width = pl_get_uint16 ( data + 10 )	596:16:22054:22086	8328725	2	True				
ANR	8329020	AssignmentExpression	width = pl_get_uint16 ( data + 10 )		8328725	0		=			
ANR	8329021	Identifier	width		8328725	0					
ANR	8329022	CallExpression	pl_get_uint16 ( data + 10 )		8328725	1					
ANR	8329023	Callee	pl_get_uint16		8328725	0					
ANR	8329024	Identifier	pl_get_uint16		8328725	0					
ANR	8329025	ArgumentList	data + 10		8328725	1					
ANR	8329026	Argument	data + 10		8328725	0					
ANR	8329027	AdditiveExpression	data + 10		8328725	0		+			
ANR	8329028	Identifier	data		8328725	0					
ANR	8329029	PrimaryExpression	10		8328725	1					
ANR	8329030	IfStatement	if ( width < 1 || width > 16384 )		8328725	3					
ANR	8329031	Condition	width < 1 || width > 16384	597:20:22108:22133	8328725	0	True				
ANR	8329032	OrExpression	width < 1 || width > 16384		8328725	0		||			
ANR	8329033	RelationalExpression	width < 1		8328725	0		<			
ANR	8329034	Identifier	width		8328725	0					
ANR	8329035	PrimaryExpression	1		8328725	1					
ANR	8329036	RelationalExpression	width > 16384		8328725	1		>			
ANR	8329037	Identifier	width		8328725	0					
ANR	8329038	PrimaryExpression	16384		8328725	1					
ANR	8329039	ReturnStatement	return e_Range ;	598:20:22156:22170	8328725	1	True				
ANR	8329040	Identifier	e_Range		8328725	0					
ANR	8329041	ExpressionStatement	height = pl_get_uint16 ( data + 12 )	599:16:22188:22221	8328725	4	True				
ANR	8329042	AssignmentExpression	height = pl_get_uint16 ( data + 12 )		8328725	0		=			
ANR	8329043	Identifier	height		8328725	0					
ANR	8329044	CallExpression	pl_get_uint16 ( data + 12 )		8328725	1					
ANR	8329045	Callee	pl_get_uint16		8328725	0					
ANR	8329046	Identifier	pl_get_uint16		8328725	0					
ANR	8329047	ArgumentList	data + 12		8328725	1					
ANR	8329048	Argument	data + 12		8328725	0					
ANR	8329049	AdditiveExpression	data + 12		8328725	0		+			
ANR	8329050	Identifier	data		8328725	0					
ANR	8329051	PrimaryExpression	12		8328725	1					
ANR	8329052	IfStatement	if ( height < 1 || height > 16384 )		8328725	5					
ANR	8329053	Condition	height < 1 || height > 16384	600:20:22243:22270	8328725	0	True				
ANR	8329054	OrExpression	height < 1 || height > 16384		8328725	0		||			
ANR	8329055	RelationalExpression	height < 1		8328725	0		<			
ANR	8329056	Identifier	height		8328725	0					
ANR	8329057	PrimaryExpression	1		8328725	1					
ANR	8329058	RelationalExpression	height > 16384		8328725	1		>			
ANR	8329059	Identifier	height		8328725	0					
ANR	8329060	PrimaryExpression	16384		8328725	1					
ANR	8329061	ReturnStatement	return e_Range ;	601:20:22293:22307	8328725	1	True				
ANR	8329062	Identifier	e_Range		8328725	0					
ANR	8329063	CompoundStatement		77:20:2786:2796	8328725	6					
ANR	8329064	IdentifierDeclStatement	"int toff , loff ;"	604:20:22426:22440	8328725	0	True				
ANR	8329065	IdentifierDecl	toff		8328725	0					
ANR	8329066	IdentifierDeclType	int		8328725	0					
ANR	8329067	Identifier	toff		8328725	1					
ANR	8329068	IdentifierDecl	loff		8328725	1					
ANR	8329069	IdentifierDeclType	int		8328725	0					
ANR	8329070	Identifier	loff		8328725	1					
ANR	8329071	IdentifierDeclStatement	int deltax ;	605:20:22462:22472	8328725	1	True				
ANR	8329072	IdentifierDecl	deltax		8328725	0					
ANR	8329073	IdentifierDeclType	int		8328725	0					
ANR	8329074	Identifier	deltax		8328725	1					
ANR	8329075	ExpressionStatement	loff = pl_get_int16 ( data + 6 )	607:20:22495:22524	8328725	2	True				
ANR	8329076	AssignmentExpression	loff = pl_get_int16 ( data + 6 )		8328725	0		=			
ANR	8329077	Identifier	loff		8328725	0					
ANR	8329078	CallExpression	pl_get_int16 ( data + 6 )		8328725	1					
ANR	8329079	Callee	pl_get_int16		8328725	0					
ANR	8329080	Identifier	pl_get_int16		8328725	0					
ANR	8329081	ArgumentList	data + 6		8328725	1					
ANR	8329082	Argument	data + 6		8328725	0					
ANR	8329083	AdditiveExpression	data + 6		8328725	0		+			
ANR	8329084	Identifier	data		8328725	0					
ANR	8329085	PrimaryExpression	6		8328725	1					
ANR	8329086	IfStatement	if ( ( - 16384 > loff ) || ( loff > 16384 ) )		8328725	3					
ANR	8329087	Condition	( - 16384 > loff ) || ( loff > 16384 )	608:24:22550:22582	8328725	0	True				
ANR	8329088	OrExpression	( - 16384 > loff ) || ( loff > 16384 )		8328725	0		||			
ANR	8329089	RelationalExpression	- 16384 > loff		8328725	0		>			
ANR	8329090	UnaryOperationExpression	- 16384		8328725	0					
ANR	8329091	UnaryOperator	-		8328725	0					
ANR	8329092	PrimaryExpression	16384		8328725	1					
ANR	8329093	Identifier	loff		8328725	1					
ANR	8329094	RelationalExpression	loff > 16384		8328725	1		>			
ANR	8329095	Identifier	loff		8328725	0					
ANR	8329096	PrimaryExpression	16384		8328725	1					
ANR	8329097	ReturnStatement	return e_Range ;	609:24:22609:22623	8328725	1	True				
ANR	8329098	Identifier	e_Range		8328725	0					
ANR	8329099	ExpressionStatement	toff = pl_get_int16 ( data + 8 )	610:20:22645:22674	8328725	4	True				
ANR	8329100	AssignmentExpression	toff = pl_get_int16 ( data + 8 )		8328725	0		=			
ANR	8329101	Identifier	toff		8328725	0					
ANR	8329102	CallExpression	pl_get_int16 ( data + 8 )		8328725	1					
ANR	8329103	Callee	pl_get_int16		8328725	0					
ANR	8329104	Identifier	pl_get_int16		8328725	0					
ANR	8329105	ArgumentList	data + 8		8328725	1					
ANR	8329106	Argument	data + 8		8328725	0					
ANR	8329107	AdditiveExpression	data + 8		8328725	0		+			
ANR	8329108	Identifier	data		8328725	0					
ANR	8329109	PrimaryExpression	8		8328725	1					
ANR	8329110	IfStatement	if ( ( - 16384 > toff ) || ( toff > 16384 ) )		8328725	5					
ANR	8329111	Condition	( - 16384 > toff ) || ( toff > 16384 )	611:24:22700:22732	8328725	0	True				
ANR	8329112	OrExpression	( - 16384 > toff ) || ( toff > 16384 )		8328725	0		||			
ANR	8329113	RelationalExpression	- 16384 > toff		8328725	0		>			
ANR	8329114	UnaryOperationExpression	- 16384		8328725	0					
ANR	8329115	UnaryOperator	-		8328725	0					
ANR	8329116	PrimaryExpression	16384		8328725	1					
ANR	8329117	Identifier	toff		8328725	1					
ANR	8329118	RelationalExpression	toff > 16384		8328725	1		>			
ANR	8329119	Identifier	toff		8328725	0					
ANR	8329120	PrimaryExpression	16384		8328725	1					
ANR	8329121	ReturnStatement	return e_Range ;	612:24:22759:22773	8328725	1	True				
ANR	8329122	Identifier	e_Range		8328725	0					
ANR	8329123	ExpressionStatement	deltax = pl_get_int16 ( data + 14 )	613:20:22795:22827	8328725	6	True				
ANR	8329124	AssignmentExpression	deltax = pl_get_int16 ( data + 14 )		8328725	0		=			
ANR	8329125	Identifier	deltax		8328725	0					
ANR	8329126	CallExpression	pl_get_int16 ( data + 14 )		8328725	1					
ANR	8329127	Callee	pl_get_int16		8328725	0					
ANR	8329128	Identifier	pl_get_int16		8328725	0					
ANR	8329129	ArgumentList	data + 14		8328725	1					
ANR	8329130	Argument	data + 14		8328725	0					
ANR	8329131	AdditiveExpression	data + 14		8328725	0		+			
ANR	8329132	Identifier	data		8328725	0					
ANR	8329133	PrimaryExpression	14		8328725	1					
ANR	8329134	IfStatement	if ( ( - 32768 > deltax ) || ( deltax > 32767 ) )		8328725	7					
ANR	8329135	Condition	( - 32768 > deltax ) || ( deltax > 32767 )	614:24:22853:22889	8328725	0	True				
ANR	8329136	OrExpression	( - 32768 > deltax ) || ( deltax > 32767 )		8328725	0		||			
ANR	8329137	RelationalExpression	- 32768 > deltax		8328725	0		>			
ANR	8329138	UnaryOperationExpression	- 32768		8328725	0					
ANR	8329139	UnaryOperator	-		8328725	0					
ANR	8329140	PrimaryExpression	32768		8328725	1					
ANR	8329141	Identifier	deltax		8328725	1					
ANR	8329142	RelationalExpression	deltax > 32767		8328725	1		>			
ANR	8329143	Identifier	deltax		8328725	0					
ANR	8329144	PrimaryExpression	32767		8328725	1					
ANR	8329145	ReturnStatement	return e_Range ;	615:24:22916:22930	8328725	1	True				
ANR	8329146	Identifier	e_Range		8328725	0					
ANR	8329147	IfStatement	if ( ( width * height / 8 ) > 1024 * 1024 )		8328725	8					
ANR	8329148	Condition	( width * height / 8 ) > 1024 * 1024	617:24:23031:23064	8328725	0	True				
ANR	8329149	RelationalExpression	( width * height / 8 ) > 1024 * 1024		8328725	0		>			
ANR	8329150	MultiplicativeExpression	width * height / 8		8328725	0		*			
ANR	8329151	Identifier	width		8328725	0					
ANR	8329152	MultiplicativeExpression	height / 8		8328725	1		/			
ANR	8329153	Identifier	height		8328725	0					
ANR	8329154	PrimaryExpression	8		8328725	1					
ANR	8329155	MultiplicativeExpression	1024 * 1024		8328725	1		*			
ANR	8329156	PrimaryExpression	1024		8328725	0					
ANR	8329157	PrimaryExpression	1024		8328725	1					
ANR	8329158	ReturnStatement	return e_Range ;	618:24:23091:23105	8328725	1	True				
ANR	8329159	Identifier	e_Range		8328725	0					
ANR	8329160	SwitchStatement	switch ( data [ 3 ] )		8328725	7					
ANR	8329161	Condition	data [ 3 ]	621:24:23150:23156	8328725	0	True				
ANR	8329162	ArrayIndexing	data [ 3 ]		8328725	0					
ANR	8329163	Identifier	data		8328725	0					
ANR	8329164	PrimaryExpression	3		8328725	1					
ANR	8329165	CompoundStatement		93:33:3483:3483	8328725	1					
ANR	8329166	Label	case 1 :	622:20:23181:23187	8328725	0	True				
ANR	8329167	ExpressionStatement	font_data_size = 16 + ( ( ( width + 7 ) >> 3 ) * height )	623:24:23242:23293	8328725	1	True				
ANR	8329168	AssignmentExpression	font_data_size = 16 + ( ( ( width + 7 ) >> 3 ) * height )		8328725	0		=			
ANR	8329169	Identifier	font_data_size		8328725	0					
ANR	8329170	AdditiveExpression	16 + ( ( ( width + 7 ) >> 3 ) * height )		8328725	1		+			
ANR	8329171	PrimaryExpression	16		8328725	0					
ANR	8329172	MultiplicativeExpression	( ( width + 7 ) >> 3 ) * height		8328725	1		*			
ANR	8329173	ShiftExpression	( width + 7 ) >> 3		8328725	0		>>			
ANR	8329174	AdditiveExpression	width + 7		8328725	0		+			
ANR	8329175	Identifier	width		8328725	0					
ANR	8329176	PrimaryExpression	7		8328725	1					
ANR	8329177	PrimaryExpression	3		8328725	1					
ANR	8329178	Identifier	height		8328725	1					
ANR	8329179	BreakStatement	break ;	624:24:23319:23324	8328725	2	True				
ANR	8329180	Label	case 2 :	625:20:23346:23352	8328725	3	True				
ANR	8329181	CompoundStatement		103:28:3981:3990	8328725	4					
ANR	8329182	IdentifierDeclStatement	uint y = 0 ;	627:28:23435:23445	8328725	0	True				
ANR	8329183	IdentifierDecl	y = 0		8328725	0					
ANR	8329184	IdentifierDeclType	uint		8328725	0					
ANR	8329185	Identifier	y		8328725	1					
ANR	8329186	AssignmentExpression	y = 0		8328725	2		=			
ANR	8329187	Identifier	y		8328725	0					
ANR	8329188	PrimaryExpression	0		8328725	1					
ANR	8329189	IdentifierDeclStatement	const byte * src = data + 16 ;	628:28:23475:23502	8328725	1	True				
ANR	8329190	IdentifierDecl	* src = data + 16		8328725	0					
ANR	8329191	IdentifierDeclType	const byte *		8328725	0					
ANR	8329192	Identifier	src		8328725	1					
ANR	8329193	AssignmentExpression	* src = data + 16		8328725	2		=			
ANR	8329194	Identifier	src		8328725	0					
ANR	8329195	AdditiveExpression	data + 16		8328725	1		+			
ANR	8329196	Identifier	data		8328725	0					
ANR	8329197	PrimaryExpression	16		8328725	1					
ANR	8329198	IdentifierDeclStatement	const byte * end = data + count ;	629:28:23532:23562	8328725	2	True				
ANR	8329199	IdentifierDecl	* end = data + count		8328725	0					
ANR	8329200	IdentifierDeclType	const byte *		8328725	0					
ANR	8329201	Identifier	end		8328725	1					
ANR	8329202	AssignmentExpression	* end = data + count		8328725	2		=			
ANR	8329203	Identifier	end		8328725	0					
ANR	8329204	AdditiveExpression	data + count		8328725	1		+			
ANR	8329205	Identifier	data		8328725	0					
ANR	8329206	Identifier	count		8328725	1					
ANR	8329207	IdentifierDeclStatement	uint width_bytes = ( width + 7 ) >> 3 ;	630:28:23592:23627	8328725	3	True				
ANR	8329208	IdentifierDecl	width_bytes = ( width + 7 ) >> 3		8328725	0					
ANR	8329209	IdentifierDeclType	uint		8328725	0					
ANR	8329210	Identifier	width_bytes		8328725	1					
ANR	8329211	AssignmentExpression	width_bytes = ( width + 7 ) >> 3		8328725	2		=			
ANR	8329212	Identifier	width_bytes		8328725	0					
ANR	8329213	ShiftExpression	( width + 7 ) >> 3		8328725	1		>>			
ANR	8329214	AdditiveExpression	width + 7		8328725	0		+			
ANR	8329215	Identifier	width		8328725	0					
ANR	8329216	PrimaryExpression	7		8328725	1					
ANR	8329217	PrimaryExpression	3		8328725	1					
ANR	8329218	IdentifierDeclStatement	byte * row ;	631:28:23657:23666	8328725	4	True				
ANR	8329219	IdentifierDecl	* row		8328725	0					
ANR	8329220	IdentifierDeclType	byte *		8328725	0					
ANR	8329221	Identifier	row		8328725	1					
ANR	8329222	ExpressionStatement	font_data_size = 16 + width_bytes * height	633:28:23697:23739	8328725	5	True				
ANR	8329223	AssignmentExpression	font_data_size = 16 + width_bytes * height		8328725	0		=			
ANR	8329224	Identifier	font_data_size		8328725	0					
ANR	8329225	AdditiveExpression	16 + width_bytes * height		8328725	1		+			
ANR	8329226	PrimaryExpression	16		8328725	0					
ANR	8329227	MultiplicativeExpression	width_bytes * height		8328725	1		*			
ANR	8329228	Identifier	width_bytes		8328725	0					
ANR	8329229	Identifier	height		8328725	1					
ANR	8329230	ExpressionStatement	"char_data = gs_alloc_bytes ( pcs -> memory , font_data_size , ""pcl_character_data(compressed bitmap)"" )"	635:28:23770:23992	8328725	6	True				
ANR	8329231	AssignmentExpression	"char_data = gs_alloc_bytes ( pcs -> memory , font_data_size , ""pcl_character_data(compressed bitmap)"" )"		8328725	0		=			
ANR	8329232	Identifier	char_data		8328725	0					
ANR	8329233	CallExpression	"gs_alloc_bytes ( pcs -> memory , font_data_size , ""pcl_character_data(compressed bitmap)"" )"		8328725	1					
ANR	8329234	Callee	gs_alloc_bytes		8328725	0					
ANR	8329235	Identifier	gs_alloc_bytes		8328725	0					
ANR	8329236	ArgumentList	pcs -> memory		8328725	1					
ANR	8329237	Argument	pcs -> memory		8328725	0					
ANR	8329238	PtrMemberAccess	pcs -> memory		8328725	0					
ANR	8329239	Identifier	pcs		8328725	0					
ANR	8329240	Identifier	memory		8328725	1					
ANR	8329241	Argument	font_data_size		8328725	1					
ANR	8329242	Identifier	font_data_size		8328725	0					
ANR	8329243	Argument	"""pcl_character_data(compressed bitmap)"""		8328725	2					
ANR	8329244	PrimaryExpression	"""pcl_character_data(compressed bitmap)"""		8328725	0					
ANR	8329245	IfStatement	if ( char_data == 0 )		8328725	7					
ANR	8329246	Condition	char_data == 0	639:32:24026:24039	8328725	0	True				
ANR	8329247	EqualityExpression	char_data == 0		8328725	0		==			
ANR	8329248	Identifier	char_data		8328725	0					
ANR	8329249	PrimaryExpression	0		8328725	1					
ANR	8329250	ExpressionStatement	return_error ( e_Memory )	640:32:24074:24096	8328725	1	True				
ANR	8329251	CallExpression	return_error ( e_Memory )		8328725	0					
ANR	8329252	Callee	return_error		8328725	0					
ANR	8329253	Identifier	return_error		8328725	0					
ANR	8329254	ArgumentList	e_Memory		8328725	1					
ANR	8329255	Argument	e_Memory		8328725	0					
ANR	8329256	Identifier	e_Memory		8328725	0					
ANR	8329257	ExpressionStatement	"memcpy ( char_data , data , 16 )"	641:28:24126:24153	8328725	8	True				
ANR	8329258	CallExpression	"memcpy ( char_data , data , 16 )"		8328725	0					
ANR	8329259	Callee	memcpy		8328725	0					
ANR	8329260	Identifier	memcpy		8328725	0					
ANR	8329261	ArgumentList	char_data		8328725	1					
ANR	8329262	Argument	char_data		8328725	0					
ANR	8329263	Identifier	char_data		8328725	0					
ANR	8329264	Argument	data		8328725	1					
ANR	8329265	Identifier	data		8328725	0					
ANR	8329266	Argument	16		8328725	2					
ANR	8329267	PrimaryExpression	16		8328725	0					
ANR	8329268	ExpressionStatement	"memset ( char_data + 16 , 0 , width_bytes * height )"	642:28:24183:24230	8328725	9	True				
ANR	8329269	CallExpression	"memset ( char_data + 16 , 0 , width_bytes * height )"		8328725	0					
ANR	8329270	Callee	memset		8328725	0					
ANR	8329271	Identifier	memset		8328725	0					
ANR	8329272	ArgumentList	char_data + 16		8328725	1					
ANR	8329273	Argument	char_data + 16		8328725	0					
ANR	8329274	AdditiveExpression	char_data + 16		8328725	0		+			
ANR	8329275	Identifier	char_data		8328725	0					
ANR	8329276	PrimaryExpression	16		8328725	1					
ANR	8329277	Argument	0		8328725	1					
ANR	8329278	PrimaryExpression	0		8328725	0					
ANR	8329279	Argument	width_bytes * height		8328725	2					
ANR	8329280	MultiplicativeExpression	width_bytes * height		8328725	0		*			
ANR	8329281	Identifier	width_bytes		8328725	0					
ANR	8329282	Identifier	height		8328725	1					
ANR	8329283	ExpressionStatement	row = char_data + 16	643:28:24260:24280	8328725	10	True				
ANR	8329284	AssignmentExpression	row = char_data + 16		8328725	0		=			
ANR	8329285	Identifier	row		8328725	0					
ANR	8329286	AdditiveExpression	char_data + 16		8328725	1		+			
ANR	8329287	Identifier	char_data		8328725	0					
ANR	8329288	PrimaryExpression	16		8328725	1					
ANR	8329289	WhileStatement	while ( src < end && y < height )		8328725	11					
ANR	8329290	Condition	src < end && y < height	644:35:24317:24339	8328725	0	True				
ANR	8329291	AndExpression	src < end && y < height		8328725	0		&&			
ANR	8329292	RelationalExpression	src < end		8328725	0		<			
ANR	8329293	Identifier	src		8328725	0					
ANR	8329294	Identifier	end		8328725	1					
ANR	8329295	RelationalExpression	y < height		8328725	1		<			
ANR	8329296	Identifier	y		8328725	0					
ANR	8329297	Identifier	height		8328725	1					
ANR	8329298	CompoundStatement		119:32:4825:4843	8328725	1					
ANR	8329299	IdentifierDeclStatement	uint x ;	645:32:24414:24420	8328725	0	True				
ANR	8329300	IdentifierDecl	x		8328725	0					
ANR	8329301	IdentifierDeclType	uint		8328725	0					
ANR	8329302	Identifier	x		8328725	1					
ANR	8329303	IdentifierDeclStatement	int color = 0 ;	646:32:24454:24467	8328725	1	True				
ANR	8329304	IdentifierDecl	color = 0		8328725	0					
ANR	8329305	IdentifierDeclType	int		8328725	0					
ANR	8329306	Identifier	color		8328725	1					
ANR	8329307	AssignmentExpression	color = 0		8328725	2		=			
ANR	8329308	Identifier	color		8328725	0					
ANR	8329309	PrimaryExpression	0		8328725	1					
ANR	8329310	IdentifierDeclStatement	uint reps = * src ++ ;	647:32:24501:24519	8328725	2	True				
ANR	8329311	IdentifierDecl	reps = * src ++		8328725	0					
ANR	8329312	IdentifierDeclType	uint		8328725	0					
ANR	8329313	Identifier	reps		8328725	1					
ANR	8329314	AssignmentExpression	reps = * src ++		8328725	2		=			
ANR	8329315	Identifier	reps		8328725	0					
ANR	8329316	UnaryOperationExpression	* src ++		8328725	1					
ANR	8329317	UnaryOperator	*		8328725	0					
ANR	8329318	PostIncDecOperationExpression	src ++		8328725	1					
ANR	8329319	Identifier	src		8328725	0					
ANR	8329320	IncDec	++		8328725	1					
ANR	8329321	ForStatement	for ( x = 0 ; src < end && x < width ; color ^= 1 )		8328725	3					
ANR	8329322	ForInit	x = 0 ;	649:37:24559:24564	8328725	0	True				
ANR	8329323	AssignmentExpression	x = 0		8328725	0		=			
ANR	8329324	Identifier	x		8328725	0					
ANR	8329325	PrimaryExpression	0		8328725	1					
ANR	8329326	Condition	src < end && x < width	649:44:24566:24587	8328725	1	True				
ANR	8329327	AndExpression	src < end && x < width		8328725	0		&&			
ANR	8329328	RelationalExpression	src < end		8328725	0		<			
ANR	8329329	Identifier	src		8328725	0					
ANR	8329330	Identifier	end		8328725	1					
ANR	8329331	RelationalExpression	x < width		8328725	1		<			
ANR	8329332	Identifier	x		8328725	0					
ANR	8329333	Identifier	width		8328725	1					
ANR	8329334	AssignmentExpression	color ^= 1	649:68:24590:24599	8328725	2	True	^=			
ANR	8329335	Identifier	color		8328725	0					
ANR	8329336	PrimaryExpression	1		8328725	1					
ANR	8329337	CompoundStatement		122:36:4995:5013	8328725	3					
ANR	8329338	IdentifierDeclStatement	uint rlen = * src ++ ;	650:36:24671:24689	8328725	0	True				
ANR	8329339	IdentifierDecl	rlen = * src ++		8328725	0					
ANR	8329340	IdentifierDeclType	uint		8328725	0					
ANR	8329341	Identifier	rlen		8328725	1					
ANR	8329342	AssignmentExpression	rlen = * src ++		8328725	2		=			
ANR	8329343	Identifier	rlen		8328725	0					
ANR	8329344	UnaryOperationExpression	* src ++		8328725	1					
ANR	8329345	UnaryOperator	*		8328725	0					
ANR	8329346	PostIncDecOperationExpression	src ++		8328725	1					
ANR	8329347	Identifier	src		8328725	0					
ANR	8329348	IncDec	++		8328725	1					
ANR	8329349	IfStatement	if ( rlen > width - x )		8328725	1					
ANR	8329350	Condition	rlen > width - x	652:40:24732:24747	8328725	0	True				
ANR	8329351	RelationalExpression	rlen > width - x		8328725	0		>			
ANR	8329352	Identifier	rlen		8328725	0					
ANR	8329353	AdditiveExpression	width - x		8328725	1		-			
ANR	8329354	Identifier	width		8328725	0					
ANR	8329355	Identifier	x		8328725	1					
ANR	8329356	ReturnStatement	return e_Range ;	653:40:24790:24804	8328725	1	True				
ANR	8329357	Identifier	e_Range		8328725	0					
ANR	8329358	IfStatement	if ( color )		8328725	2					
ANR	8329359	Condition	color	654:40:24864:24868	8328725	0	True				
ANR	8329360	Identifier	color		8328725	0					
ANR	8329361	CompoundStatement		127:40:5272:5296	8328725	1					
ANR	8329362	IdentifierDeclStatement	char * data = ( char * ) row ;	655:40:24948:24972	8328725	0	True				
ANR	8329363	IdentifierDecl	* data = ( char * ) row		8328725	0					
ANR	8329364	IdentifierDeclType	char *		8328725	0					
ANR	8329365	Identifier	data		8328725	1					
ANR	8329366	AssignmentExpression	* data = ( char * ) row		8328725	2		=			
ANR	8329367	Identifier	data		8328725	0					
ANR	8329368	CastExpression	( char * ) row		8328725	1					
ANR	8329369	CastTarget	char *		8328725	0					
ANR	8329370	Identifier	row		8328725	1					
ANR	8329371	WhileStatement	while ( rlen -- )		8328725	1					
ANR	8329372	Condition	rlen --	657:47:25022:25027	8328725	0	True				
ANR	8329373	PostIncDecOperationExpression	rlen --		8328725	0					
ANR	8329374	Identifier	rlen		8328725	0					
ANR	8329375	IncDec	--		8328725	1					
ANR	8329376	CompoundStatement		129:55:5354:5354	8328725	1					
ANR	8329377	ExpressionStatement	data [ x >> 3 ] |= ( 128 >> ( x & 7 ) )	658:44:25076:25108	8328725	0	True				
ANR	8329378	AssignmentExpression	data [ x >> 3 ] |= ( 128 >> ( x & 7 ) )		8328725	0		|=			
ANR	8329379	ArrayIndexing	data [ x >> 3 ]		8328725	0					
ANR	8329380	Identifier	data		8328725	0					
ANR	8329381	ShiftExpression	x >> 3		8328725	1		>>			
ANR	8329382	Identifier	x		8328725	0					
ANR	8329383	PrimaryExpression	3		8328725	1					
ANR	8329384	ShiftExpression	128 >> ( x & 7 )		8328725	1		>>			
ANR	8329385	PrimaryExpression	128		8328725	0					
ANR	8329386	BitAndExpression	x & 7		8328725	1		&			
ANR	8329387	Identifier	x		8328725	0					
ANR	8329388	PrimaryExpression	7		8328725	1					
ANR	8329389	ExpressionStatement	x ++	659:44:25154:25157	8328725	1	True				
ANR	8329390	PostIncDecOperationExpression	x ++		8328725	0					
ANR	8329391	Identifier	x		8328725	0					
ANR	8329392	IncDec	++		8328725	1					
ANR	8329393	ElseStatement	else		8328725	0					
ANR	8329394	ExpressionStatement	x += rlen	662:40:25284:25293	8328725	0	True				
ANR	8329395	AssignmentExpression	x += rlen		8328725	0		+=			
ANR	8329396	Identifier	x		8328725	0					
ANR	8329397	Identifier	rlen		8328725	1					
ANR	8329398	ExpressionStatement	row += width_bytes	664:32:25361:25379	8328725	4	True				
ANR	8329399	AssignmentExpression	row += width_bytes		8328725	0		+=			
ANR	8329400	Identifier	row		8328725	0					
ANR	8329401	Identifier	width_bytes		8328725	1					
ANR	8329402	ExpressionStatement	++ y	665:32:25413:25416	8328725	5	True				
ANR	8329403	UnaryExpression	++ y		8328725	0					
ANR	8329404	IncDec	++		8328725	0					
ANR	8329405	Identifier	y		8328725	1					
ANR	8329406	ForStatement	"for ( ; reps > 0 && y < height ; -- reps , ++ y , row += width_bytes )"		8328725	6					
ANR	8329407	Condition	reps > 0 && y < height	667:39:25524:25545	8328725	0	True				
ANR	8329408	AndExpression	reps > 0 && y < height		8328725	0		&&			
ANR	8329409	RelationalExpression	reps > 0		8328725	0		>			
ANR	8329410	Identifier	reps		8328725	0					
ANR	8329411	PrimaryExpression	0		8328725	1					
ANR	8329412	RelationalExpression	y < height		8328725	1		<			
ANR	8329413	Identifier	y		8328725	0					
ANR	8329414	Identifier	height		8328725	1					
ANR	8329415	Expression	"-- reps , ++ y , row += width_bytes"	668:37:25585:25615	8328725	1	True				
ANR	8329416	UnaryExpression	-- reps		8328725	0					
ANR	8329417	IncDec	--		8328725	0					
ANR	8329418	Identifier	reps		8328725	1					
ANR	8329419	Expression	"++ y , row += width_bytes"		8328725	1					
ANR	8329420	UnaryExpression	++ y		8328725	0					
ANR	8329421	IncDec	++		8328725	0					
ANR	8329422	Identifier	y		8328725	1					
ANR	8329423	AssignmentExpression	row += width_bytes		8328725	1		+=			
ANR	8329424	Identifier	row		8328725	0					
ANR	8329425	Identifier	width_bytes		8328725	1					
ANR	8329426	ExpressionStatement	"memcpy ( row , row - width_bytes , width_bytes )"	669:36:25654:25740	8328725	2	True				
ANR	8329427	CallExpression	"memcpy ( row , row - width_bytes , width_bytes )"		8328725	0					
ANR	8329428	Callee	memcpy		8328725	0					
ANR	8329429	Identifier	memcpy		8328725	0					
ANR	8329430	ArgumentList	row		8328725	1					
ANR	8329431	Argument	row		8328725	0					
ANR	8329432	Identifier	row		8328725	0					
ANR	8329433	Argument	row - width_bytes		8328725	1					
ANR	8329434	AdditiveExpression	row - width_bytes		8328725	0		-			
ANR	8329435	Identifier	row		8328725	0					
ANR	8329436	Identifier	width_bytes		8328725	1					
ANR	8329437	Argument	width_bytes		8328725	2					
ANR	8329438	Identifier	width_bytes		8328725	0					
ANR	8329439	BreakStatement	break ;	673:24:25822:25827	8328725	5	True				
ANR	8329440	Label	default :	674:20:25849:25856	8328725	6	True				
ANR	8329441	Identifier	default		8328725	0					
ANR	8329442	ReturnStatement	return e_Range ;	675:24:25882:25896	8328725	7	True				
ANR	8329443	Identifier	e_Range		8328725	0					
ANR	8329444	BreakStatement	break ;	678:12:25942:25947	8328725	2	True				
ANR	8329445	Label	case pccd_intellifont :	679:8:25957:25978	8328725	3	True				
ANR	8329446	Identifier	pccd_intellifont		8328725	0					
ANR	8329447	IfStatement	if ( data [ 2 ] != 2 || ( format != pcfh_intellifont_bound && format != pcfh_intellifont_unbound ) )		8328725	4					
ANR	8329448	Condition	data [ 2 ] != 2 || ( format != pcfh_intellifont_bound && format != pcfh_intellifont_unbound )	680:16:25996:26116	8328725	0	True				
ANR	8329449	OrExpression	data [ 2 ] != 2 || ( format != pcfh_intellifont_bound && format != pcfh_intellifont_unbound )		8328725	0		||			
ANR	8329450	EqualityExpression	data [ 2 ] != 2		8328725	0		!=			
ANR	8329451	ArrayIndexing	data [ 2 ]		8328725	0					
ANR	8329452	Identifier	data		8328725	0					
ANR	8329453	PrimaryExpression	2		8328725	1					
ANR	8329454	PrimaryExpression	2		8328725	1					
ANR	8329455	AndExpression	format != pcfh_intellifont_bound && format != pcfh_intellifont_unbound		8328725	1		&&			
ANR	8329456	EqualityExpression	format != pcfh_intellifont_bound		8328725	0		!=			
ANR	8329457	Identifier	format		8328725	0					
ANR	8329458	Identifier	pcfh_intellifont_bound		8328725	1					
ANR	8329459	EqualityExpression	format != pcfh_intellifont_unbound		8328725	1		!=			
ANR	8329460	Identifier	format		8328725	0					
ANR	8329461	Identifier	pcfh_intellifont_unbound		8328725	1					
ANR	8329462	ReturnStatement	return e_Range ;	684:16:26152:26166	8328725	1	True				
ANR	8329463	Identifier	e_Range		8328725	0					
ANR	8329464	SwitchStatement	switch ( data [ 3 ] )		8328725	5					
ANR	8329465	Condition	data [ 3 ]	685:20:26188:26194	8328725	0	True				
ANR	8329466	ArrayIndexing	data [ 3 ]		8328725	0					
ANR	8329467	Identifier	data		8328725	0					
ANR	8329468	PrimaryExpression	3		8328725	1					
ANR	8329469	CompoundStatement		157:29:6521:6521	8328725	1					
ANR	8329470	Label	case 3 :	686:16:26215:26221	8328725	0	True				
ANR	8329471	IfStatement	if ( count < 14 )		8328725	1					
ANR	8329472	Condition	count < 14	688:24:26359:26368	8328725	0	True				
ANR	8329473	RelationalExpression	count < 14		8328725	0		<			
ANR	8329474	Identifier	count		8328725	0					
ANR	8329475	PrimaryExpression	14		8328725	1					
ANR	8329476	ReturnStatement	return e_Range ;	689:24:26395:26409	8328725	1	True				
ANR	8329477	Identifier	e_Range		8328725	0					
ANR	8329478	CompoundStatement		163:24:6781:6821	8328725	2					
ANR	8329479	IdentifierDeclStatement	uint data_size = pl_get_uint16 ( data + 4 ) ;	691:24:26457:26497	8328725	0	True				
ANR	8329480	IdentifierDecl	data_size = pl_get_uint16 ( data + 4 )		8328725	0					
ANR	8329481	IdentifierDeclType	uint		8328725	0					
ANR	8329482	Identifier	data_size		8328725	1					
ANR	8329483	AssignmentExpression	data_size = pl_get_uint16 ( data + 4 )		8328725	2		=			
ANR	8329484	Identifier	data_size		8328725	0					
ANR	8329485	CallExpression	pl_get_uint16 ( data + 4 )		8328725	1					
ANR	8329486	Callee	pl_get_uint16		8328725	0					
ANR	8329487	Identifier	pl_get_uint16		8328725	0					
ANR	8329488	ArgumentList	data + 4		8328725	1					
ANR	8329489	Argument	data + 4		8328725	0					
ANR	8329490	AdditiveExpression	data + 4		8328725	0		+			
ANR	8329491	Identifier	data		8328725	0					
ANR	8329492	PrimaryExpression	4		8328725	1					
ANR	8329493	IfStatement	if ( data_size != count - 6 )		8328725	1					
ANR	8329494	Condition	data_size != count - 6	695:28:26679:26700	8328725	0	True				
ANR	8329495	EqualityExpression	data_size != count - 6		8328725	0		!=			
ANR	8329496	Identifier	data_size		8328725	0					
ANR	8329497	AdditiveExpression	count - 6		8328725	1		-			
ANR	8329498	Identifier	count		8328725	0					
ANR	8329499	PrimaryExpression	6		8328725	1					
ANR	8329500	ReturnStatement	return e_Range ;	696:28:26731:26745	8328725	1	True				
ANR	8329501	Identifier	e_Range		8328725	0					
ANR	8329502	BreakStatement	break ;	698:20:26789:26794	8328725	3	True				
ANR	8329503	Label	case 4 :	699:16:26812:26818	8328725	4	True				
ANR	8329504	IfStatement	if ( count < 8 )		8328725	5					
ANR	8329505	Condition	count < 8	702:24:26989:26997	8328725	0	True				
ANR	8329506	RelationalExpression	count < 8		8328725	0		<			
ANR	8329507	Identifier	count		8328725	0					
ANR	8329508	PrimaryExpression	8		8328725	1					
ANR	8329509	ReturnStatement	return e_Range ;	703:24:27024:27038	8328725	1	True				
ANR	8329510	Identifier	e_Range		8328725	0					
ANR	8329511	CompoundStatement		177:24:7410:7439	8328725	6					
ANR	8329512	IdentifierDeclStatement	uint num_components = data [ 6 ] ;	705:24:27086:27115	8328725	0	True				
ANR	8329513	IdentifierDecl	num_components = data [ 6 ]		8328725	0					
ANR	8329514	IdentifierDeclType	uint		8328725	0					
ANR	8329515	Identifier	num_components		8328725	1					
ANR	8329516	AssignmentExpression	num_components = data [ 6 ]		8328725	2		=			
ANR	8329517	Identifier	num_components		8328725	0					
ANR	8329518	ArrayIndexing	data [ 6 ]		8328725	1					
ANR	8329519	Identifier	data		8328725	0					
ANR	8329520	PrimaryExpression	6		8328725	1					
ANR	8329521	IfStatement	if ( count != 8 + num_components * 6 + 2 )		8328725	1					
ANR	8329522	Condition	count != 8 + num_components * 6 + 2	707:28:27146:27180	8328725	0	True				
ANR	8329523	EqualityExpression	count != 8 + num_components * 6 + 2		8328725	0		!=			
ANR	8329524	Identifier	count		8328725	0					
ANR	8329525	AdditiveExpression	8 + num_components * 6 + 2		8328725	1		+			
ANR	8329526	PrimaryExpression	8		8328725	0					
ANR	8329527	AdditiveExpression	num_components * 6 + 2		8328725	1		+			
ANR	8329528	MultiplicativeExpression	num_components * 6		8328725	0		*			
ANR	8329529	Identifier	num_components		8328725	0					
ANR	8329530	PrimaryExpression	6		8328725	1					
ANR	8329531	PrimaryExpression	2		8328725	1					
ANR	8329532	ReturnStatement	return e_Range ;	708:28:27211:27225	8328725	1	True				
ANR	8329533	Identifier	e_Range		8328725	0					
ANR	8329534	BreakStatement	break ;	710:20:27269:27274	8328725	7	True				
ANR	8329535	Label	default :	711:16:27292:27299	8328725	8	True				
ANR	8329536	Identifier	default		8328725	0					
ANR	8329537	ReturnStatement	return e_Range ;	712:20:27321:27335	8328725	9	True				
ANR	8329538	Identifier	e_Range		8328725	0					
ANR	8329539	BreakStatement	break ;	714:12:27363:27368	8328725	6	True				
ANR	8329540	Label	case pccd_truetype :	715:8:27378:27396	8328725	7	True				
ANR	8329541	Identifier	pccd_truetype		8328725	0					
ANR	8329542	IfStatement	if ( format != pcfh_truetype && format != pcfh_truetype_large )		8328725	8					
ANR	8329543	Condition	format != pcfh_truetype && format != pcfh_truetype_large	716:16:27414:27469	8328725	0	True				
ANR	8329544	AndExpression	format != pcfh_truetype && format != pcfh_truetype_large		8328725	0		&&			
ANR	8329545	EqualityExpression	format != pcfh_truetype		8328725	0		!=			
ANR	8329546	Identifier	format		8328725	0					
ANR	8329547	Identifier	pcfh_truetype		8328725	1					
ANR	8329548	EqualityExpression	format != pcfh_truetype_large		8328725	1		!=			
ANR	8329549	Identifier	format		8328725	0					
ANR	8329550	Identifier	pcfh_truetype_large		8328725	1					
ANR	8329551	ReturnStatement	return e_Range ;	717:16:27488:27502	8328725	1	True				
ANR	8329552	Identifier	e_Range		8328725	0					
ANR	8329553	BreakStatement	break ;	718:12:27516:27521	8328725	9	True				
ANR	8329554	Label	default :	719:8:27531:27538	8328725	10	True				
ANR	8329555	Identifier	default		8328725	0					
ANR	8329556	ReturnStatement	return e_Range ;	720:12:27552:27566	8328725	11	True				
ANR	8329557	Identifier	e_Range		8328725	0					
ANR	8329558	IfStatement	if ( char_data == 0 )		8328725	15					
ANR	8329559	Condition	char_data == 0	726:8:27763:27776	8328725	0	True				
ANR	8329560	EqualityExpression	char_data == 0		8328725	0		==			
ANR	8329561	Identifier	char_data		8328725	0					
ANR	8329562	PrimaryExpression	0		8328725	1					
ANR	8329563	CompoundStatement		198:24:8103:8103	8328725	1					
ANR	8329564	ExpressionStatement	"char_data = gs_alloc_bytes ( pcs -> memory , font_data_size , ""pcl_character_data"" )"	727:8:27789:27901	8328725	0	True				
ANR	8329565	AssignmentExpression	"char_data = gs_alloc_bytes ( pcs -> memory , font_data_size , ""pcl_character_data"" )"		8328725	0		=			
ANR	8329566	Identifier	char_data		8328725	0					
ANR	8329567	CallExpression	"gs_alloc_bytes ( pcs -> memory , font_data_size , ""pcl_character_data"" )"		8328725	1					
ANR	8329568	Callee	gs_alloc_bytes		8328725	0					
ANR	8329569	Identifier	gs_alloc_bytes		8328725	0					
ANR	8329570	ArgumentList	pcs -> memory		8328725	1					
ANR	8329571	Argument	pcs -> memory		8328725	0					
ANR	8329572	PtrMemberAccess	pcs -> memory		8328725	0					
ANR	8329573	Identifier	pcs		8328725	0					
ANR	8329574	Identifier	memory		8328725	1					
ANR	8329575	Argument	font_data_size		8328725	1					
ANR	8329576	Identifier	font_data_size		8328725	0					
ANR	8329577	Argument	"""pcl_character_data"""		8328725	2					
ANR	8329578	PrimaryExpression	"""pcl_character_data"""		8328725	0					
ANR	8329579	IfStatement	if ( char_data == 0 )		8328725	1					
ANR	8329580	Condition	char_data == 0	729:12:27915:27928	8328725	0	True				
ANR	8329581	EqualityExpression	char_data == 0		8328725	0		==			
ANR	8329582	Identifier	char_data		8328725	0					
ANR	8329583	PrimaryExpression	0		8328725	1					
ANR	8329584	ExpressionStatement	return_error ( e_Memory )	730:12:27943:27965	8328725	1	True				
ANR	8329585	CallExpression	return_error ( e_Memory )		8328725	0					
ANR	8329586	Callee	return_error		8328725	0					
ANR	8329587	Identifier	return_error		8328725	0					
ANR	8329588	ArgumentList	e_Memory		8328725	1					
ANR	8329589	Argument	e_Memory		8328725	0					
ANR	8329590	Identifier	e_Memory		8328725	0					
ANR	8329591	ExpressionStatement	"memset ( char_data , 0 , font_data_size )"	731:8:27975:28011	8328725	2	True				
ANR	8329592	CallExpression	"memset ( char_data , 0 , font_data_size )"		8328725	0					
ANR	8329593	Callee	memset		8328725	0					
ANR	8329594	Identifier	memset		8328725	0					
ANR	8329595	ArgumentList	char_data		8328725	1					
ANR	8329596	Argument	char_data		8328725	0					
ANR	8329597	Identifier	char_data		8328725	0					
ANR	8329598	Argument	0		8328725	1					
ANR	8329599	PrimaryExpression	0		8328725	0					
ANR	8329600	Argument	font_data_size		8328725	2					
ANR	8329601	Identifier	font_data_size		8328725	0					
ANR	8329602	ExpressionStatement	"memcpy ( char_data , data , min ( count , font_data_size ) )"	733:8:28083:28134	8328725	3	True				
ANR	8329603	CallExpression	"memcpy ( char_data , data , min ( count , font_data_size ) )"		8328725	0					
ANR	8329604	Callee	memcpy		8328725	0					
ANR	8329605	Identifier	memcpy		8328725	0					
ANR	8329606	ArgumentList	char_data		8328725	1					
ANR	8329607	Argument	char_data		8328725	0					
ANR	8329608	Identifier	char_data		8328725	0					
ANR	8329609	Argument	data		8328725	1					
ANR	8329610	Identifier	data		8328725	0					
ANR	8329611	Argument	"min ( count , font_data_size )"		8328725	2					
ANR	8329612	CallExpression	"min ( count , font_data_size )"		8328725	0					
ANR	8329613	Callee	min		8328725	0					
ANR	8329614	Identifier	min		8328725	0					
ANR	8329615	ArgumentList	count		8328725	1					
ANR	8329616	Argument	count		8328725	0					
ANR	8329617	Identifier	count		8328725	0					
ANR	8329618	Argument	font_data_size		8328725	1					
ANR	8329619	Identifier	font_data_size		8328725	0					
ANR	8329620	IfStatement	if ( data [ 0 ] == pccd_bitmap && data [ 3 ] == 1 && font_data_size > count )		8328725	4					
ANR	8329621	Condition	data [ 0 ] == pccd_bitmap && data [ 3 ] == 1 && font_data_size > count	735:12:28228:28291	8328725	0	True				
ANR	8329622	AndExpression	data [ 0 ] == pccd_bitmap && data [ 3 ] == 1 && font_data_size > count		8328725	0		&&			
ANR	8329623	EqualityExpression	data [ 0 ] == pccd_bitmap		8328725	0		==			
ANR	8329624	ArrayIndexing	data [ 0 ]		8328725	0					
ANR	8329625	Identifier	data		8328725	0					
ANR	8329626	PrimaryExpression	0		8328725	1					
ANR	8329627	Identifier	pccd_bitmap		8328725	1					
ANR	8329628	AndExpression	data [ 3 ] == 1 && font_data_size > count		8328725	1		&&			
ANR	8329629	EqualityExpression	data [ 3 ] == 1		8328725	0		==			
ANR	8329630	ArrayIndexing	data [ 3 ]		8328725	0					
ANR	8329631	Identifier	data		8328725	0					
ANR	8329632	PrimaryExpression	3		8328725	1					
ANR	8329633	PrimaryExpression	1		8328725	1					
ANR	8329634	RelationalExpression	font_data_size > count		8328725	1		>			
ANR	8329635	Identifier	font_data_size		8328725	0					
ANR	8329636	Identifier	count		8328725	1					
ANR	8329637	CompoundStatement		208:14:8663:8663	8328725	1					
ANR	8329638	ExpressionStatement	pcs -> soft_font_char_data = char_data	737:12:28353:28389	8328725	0	True				
ANR	8329639	AssignmentExpression	pcs -> soft_font_char_data = char_data		8328725	0		=			
ANR	8329640	PtrMemberAccess	pcs -> soft_font_char_data		8328725	0					
ANR	8329641	Identifier	pcs		8328725	0					
ANR	8329642	Identifier	soft_font_char_data		8328725	1					
ANR	8329643	Identifier	char_data		8328725	1					
ANR	8329644	ExpressionStatement	pcs -> soft_font_count = count	738:12:28403:28431	8328725	1	True				
ANR	8329645	AssignmentExpression	pcs -> soft_font_count = count		8328725	0		=			
ANR	8329646	PtrMemberAccess	pcs -> soft_font_count		8328725	0					
ANR	8329647	Identifier	pcs		8328725	0					
ANR	8329648	Identifier	soft_font_count		8328725	1					
ANR	8329649	Identifier	count		8328725	1					
ANR	8329650	ElseStatement	else		8328725	0					
ANR	8329651	CompoundStatement		211:15:8772:8772	8328725	0					
ANR	8329652	ExpressionStatement	pcs -> soft_font_char_data = 0	740:12:28462:28490	8328725	0	True				
ANR	8329653	AssignmentExpression	pcs -> soft_font_char_data = 0		8328725	0		=			
ANR	8329654	PtrMemberAccess	pcs -> soft_font_char_data		8328725	0					
ANR	8329655	Identifier	pcs		8328725	0					
ANR	8329656	Identifier	soft_font_char_data		8328725	1					
ANR	8329657	PrimaryExpression	0		8328725	1					
ANR	8329658	ExpressionStatement	pcs -> soft_font_count = 0	741:12:28504:28528	8328725	1	True				
ANR	8329659	AssignmentExpression	pcs -> soft_font_count = 0		8328725	0		=			
ANR	8329660	PtrMemberAccess	pcs -> soft_font_count		8328725	0					
ANR	8329661	Identifier	pcs		8328725	0					
ANR	8329662	Identifier	soft_font_count		8328725	1					
ANR	8329663	PrimaryExpression	0		8328725	1					
ANR	8329664	CompoundStatement		218:8:8928:8992	8328725	16					
ANR	8329665	IdentifierDeclStatement	pcl_font_header_t * header = ( pcl_font_header_t * ) plfont -> header ;	746:8:28604:28668	8328725	0	True				
ANR	8329666	IdentifierDecl	* header = ( pcl_font_header_t * ) plfont -> header		8328725	0					
ANR	8329667	IdentifierDeclType	pcl_font_header_t *		8328725	0					
ANR	8329668	Identifier	header		8328725	1					
ANR	8329669	AssignmentExpression	* header = ( pcl_font_header_t * ) plfont -> header		8328725	2		=			
ANR	8329670	Identifier	header		8328725	0					
ANR	8329671	CastExpression	( pcl_font_header_t * ) plfont -> header		8328725	1					
ANR	8329672	CastTarget	pcl_font_header_t *		8328725	0					
ANR	8329673	PtrMemberAccess	plfont -> header		8328725	1					
ANR	8329674	Identifier	plfont		8328725	0					
ANR	8329675	Identifier	header		8328725	1					
ANR	8329676	ExpressionStatement	plfont -> orient = header -> Orientation	748:8:28679:28715	8328725	1	True				
ANR	8329677	AssignmentExpression	plfont -> orient = header -> Orientation		8328725	0		=			
ANR	8329678	PtrMemberAccess	plfont -> orient		8328725	0					
ANR	8329679	Identifier	plfont		8328725	0					
ANR	8329680	Identifier	orient		8328725	1					
ANR	8329681	PtrMemberAccess	header -> Orientation		8328725	1					
ANR	8329682	Identifier	header		8328725	0					
ANR	8329683	Identifier	Orientation		8328725	1					
ANR	8329684	ExpressionStatement	"code = pl_font_add_glyph ( plfont , pcs -> character_code , char_data , font_data_size )"	750:4:28727:28807	8328725	17	True				
ANR	8329685	AssignmentExpression	"code = pl_font_add_glyph ( plfont , pcs -> character_code , char_data , font_data_size )"		8328725	0		=			
ANR	8329686	Identifier	code		8328725	0					
ANR	8329687	CallExpression	"pl_font_add_glyph ( plfont , pcs -> character_code , char_data , font_data_size )"		8328725	1					
ANR	8329688	Callee	pl_font_add_glyph		8328725	0					
ANR	8329689	Identifier	pl_font_add_glyph		8328725	0					
ANR	8329690	ArgumentList	plfont		8328725	1					
ANR	8329691	Argument	plfont		8328725	0					
ANR	8329692	Identifier	plfont		8328725	0					
ANR	8329693	Argument	pcs -> character_code		8328725	1					
ANR	8329694	PtrMemberAccess	pcs -> character_code		8328725	0					
ANR	8329695	Identifier	pcs		8328725	0					
ANR	8329696	Identifier	character_code		8328725	1					
ANR	8329697	Argument	char_data		8328725	2					
ANR	8329698	Identifier	char_data		8328725	0					
ANR	8329699	Argument	font_data_size		8328725	3					
ANR	8329700	Identifier	font_data_size		8328725	0					
ANR	8329701	IfStatement	if ( code < 0 )		8328725	18					
ANR	8329702	Condition	code < 0	751:8:28817:28824	8328725	0	True				
ANR	8329703	RelationalExpression	code < 0		8328725	0		<			
ANR	8329704	Identifier	code		8328725	0					
ANR	8329705	PrimaryExpression	0		8328725	1					
ANR	8329706	ReturnStatement	return code ;	752:8:28835:28846	8328725	1	True				
ANR	8329707	Identifier	code		8328725	0					
ANR	8329708	IfStatement	if ( data [ 0 ] == pccd_truetype )		8328725	19					
ANR	8329709	Condition	data [ 0 ] == pccd_truetype	754:8:28886:28909	8328725	0	True				
ANR	8329710	EqualityExpression	data [ 0 ] == pccd_truetype		8328725	0		==			
ANR	8329711	ArrayIndexing	data [ 0 ]		8328725	0					
ANR	8329712	Identifier	data		8328725	0					
ANR	8329713	PrimaryExpression	0		8328725	1					
ANR	8329714	Identifier	pccd_truetype		8328725	1					
ANR	8329715	ExpressionStatement	"code = pl_font_disable_composite_metrics ( plfont , pcs -> character_code )"	755:8:28920:28989	8328725	1	True				
ANR	8329716	AssignmentExpression	"code = pl_font_disable_composite_metrics ( plfont , pcs -> character_code )"		8328725	0		=			
ANR	8329717	Identifier	code		8328725	0					
ANR	8329718	CallExpression	"pl_font_disable_composite_metrics ( plfont , pcs -> character_code )"		8328725	1					
ANR	8329719	Callee	pl_font_disable_composite_metrics		8328725	0					
ANR	8329720	Identifier	pl_font_disable_composite_metrics		8328725	0					
ANR	8329721	ArgumentList	plfont		8328725	1					
ANR	8329722	Argument	plfont		8328725	0					
ANR	8329723	Identifier	plfont		8328725	0					
ANR	8329724	Argument	pcs -> character_code		8328725	1					
ANR	8329725	PtrMemberAccess	pcs -> character_code		8328725	0					
ANR	8329726	Identifier	pcs		8328725	0					
ANR	8329727	Identifier	character_code		8328725	1					
ANR	8329728	ReturnStatement	return code ;	757:4:29031:29042	8328725	20	True				
ANR	8329729	Identifier	code		8328725	0					
ANR	8329730	Statement	undef	758:1:29045:29049	8328725	21	True				
ANR	8329731	Statement	plfont	758:7:29051:29056	8328725	22	True				
ANR	8329732	ReturnType	static int		8328725	1					
ANR	8329733	Identifier	pcl_character_data		8328725	2					
ANR	8329734	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8328725	3					
ANR	8329735	Parameter	pcl_args_t * pargs	528:19:19636:19653	8328725	0	True				
ANR	8329736	ParameterType	pcl_args_t *		8328725	0					
ANR	8329737	Identifier	pargs		8328725	1					
ANR	8329738	Parameter	pcl_state_t * pcs	528:39:19656:19672	8328725	1	True				
ANR	8329739	ParameterType	pcl_state_t *		8328725	0					
ANR	8329740	Identifier	pcs		8328725	1					
ANR	8329741	CFGEntryNode	ENTRY		8328725		True				
ANR	8329742	CFGExitNode	EXIT		8328725		True				
ANR	8329743	Symbol	e_Unimplemented		8328725						
ANR	8329744	Symbol	* x		8328725						
ANR	8329745	Symbol	& value		8328725						
ANR	8329746	Symbol	data		8328725						
ANR	8329747	Symbol	plfont -> header		8328725						
ANR	8329748	Symbol	pcfh_truetype		8328725						
ANR	8329749	Symbol	* pcs		8328725						
ANR	8329750	Symbol	plfont		8328725						
ANR	8329751	Symbol	plfont -> orient		8328725						
ANR	8329752	Symbol	pccd_truetype		8328725						
ANR	8329753	Symbol	pargs		8328725						
ANR	8329754	Symbol	& pcs -> soft_fonts		8328725						
ANR	8329755	Symbol	* plfont -> header		8328725						
ANR	8329756	Symbol	pl_get_int16		8328725						
ANR	8329757	Symbol	gs_debug_c		8328725						
ANR	8329758	Symbol	pcs -> memory		8328725						
ANR	8329759	Symbol	height		8328725						
ANR	8329760	Symbol	data_size		8328725						
ANR	8329761	Symbol	pl_font_disable_composite_metrics		8328725						
ANR	8329762	Symbol	current_font_id_size		8328725						
ANR	8329763	Symbol	* * plfont		8328725						
ANR	8329764	Symbol	deltax		8328725						
ANR	8329765	Symbol	count		8328725						
ANR	8329766	Symbol	format		8328725						
ANR	8329767	Symbol	* header		8328725						
ANR	8329768	Symbol	pccd_bitmap		8328725						
ANR	8329769	Symbol	loff		8328725						
ANR	8329770	Symbol	current_font_id		8328725						
ANR	8329771	Symbol	* src ++		8328725						
ANR	8329772	Symbol	pl_font_add_glyph		8328725						
ANR	8329773	Symbol	header		8328725						
ANR	8329774	Symbol	font_data_size		8328725						
ANR	8329775	Symbol	code		8328725						
ANR	8329776	Symbol	reps		8328725						
ANR	8329777	Symbol	pcfh_truetype_large		8328725						
ANR	8329778	Symbol	color		8328725						
ANR	8329779	Symbol	width_bytes		8328725						
ANR	8329780	Symbol	header -> Orientation		8328725						
ANR	8329781	Symbol	gs_object_size		8328725						
ANR	8329782	Symbol	toff		8328725						
ANR	8329783	Symbol	min		8328725						
ANR	8329784	Symbol	pcfh_intellifont_bound		8328725						
ANR	8329785	Symbol	e_Memory		8328725						
ANR	8329786	Symbol	rlen		8328725						
ANR	8329787	Symbol	end		8328725						
ANR	8329788	Symbol	row		8328725						
ANR	8329789	Symbol	value		8328725						
ANR	8329790	Symbol	e_Range		8328725						
ANR	8329791	Symbol	pcs		8328725						
ANR	8329792	Symbol	pcfh_resolution_bitmap		8328725						
ANR	8329793	Symbol	pl_get_uint16		8328725						
ANR	8329794	Symbol	gs_alloc_bytes		8328725						
ANR	8329795	Symbol	pcs -> soft_font_count		8328725						
ANR	8329796	Symbol	pcfh_bitmap		8328725						
ANR	8329797	Symbol	src		8328725						
ANR	8329798	Symbol	num_components		8328725						
ANR	8329799	Symbol	char_data		8328725						
ANR	8329800	Symbol	uint_arg		8328725						
ANR	8329801	Symbol	pl_dict_find_no_stack		8328725						
ANR	8329802	Symbol	arg_data		8328725						
ANR	8329803	Symbol	pcs -> character_code		8328725						
ANR	8329804	Symbol	* plfont		8328725						
ANR	8329805	Symbol	width		8328725						
ANR	8329806	Symbol	x		8328725						
ANR	8329807	Symbol	pcfh_intellifont_unbound		8328725						
ANR	8329808	Symbol	y		8328725						
ANR	8329809	Symbol	pcs -> soft_font_char_data		8328725						
ANR	8329810	Symbol	( ( const pcl_font_header_t * ) plfont -> header ) -> HeaderFormat		8328725						
ANR	8329811	Symbol	* data		8328725						
ANR	8329812	ClassDef	alphanumeric_data_s	762:8:29112:29207							
ANR	8329813	DeclStmt									
ANR	8329814	Decl							byte	byte	operation
ANR	8329815	DeclStmt									
ANR	8329816	Decl							byte	byte [ 512 ]	string_id
ANR	8329817	DeclStmt									
ANR	8329818	Decl							alphanumeric_data_s	alphanumeric_data_s	alphanumeric_data_t
ANR	8329819	ClassDef	resource_type_enum	768:8:29218:29299							
ANR	8329820	DeclStmt									
ANR	8329821	Decl							resource_type_enum	resource_type_enum	resource_type_t
ANR	8329822	Function	pcl_find_resource	778:0:29431:32458							
ANR	8329823	FunctionDef	"pcl_find_resource (pcl_state_t * pcs , const byte sid [ ] , int sid_size , resource_type_t resource_type)"		8329822	0					
ANR	8329824	CompoundStatement		782:0:29578:32458	8329822	0					
ANR	8329825	IdentifierDeclStatement	void * value = NULL ;	784:4:29589:29607	8329822	0	True				
ANR	8329826	IdentifierDecl	* value = NULL		8329822	0					
ANR	8329827	IdentifierDeclType	void *		8329822	0					
ANR	8329828	Identifier	value		8329822	1					
ANR	8329829	AssignmentExpression	* value = NULL		8329822	2		=			
ANR	8329830	Identifier	NULL		8329822	0					
ANR	8329831	Identifier	NULL		8329822	1					
ANR	8329832	IdentifierDeclStatement	char alphaname [ 512 + 1 ] ;	785:4:29613:29636	8329822	1	True				
ANR	8329833	IdentifierDecl	alphaname [ 512 + 1 ]		8329822	0					
ANR	8329834	IdentifierDeclType	char [ 512 + 1 ]		8329822	0					
ANR	8329835	Identifier	alphaname		8329822	1					
ANR	8329836	AdditiveExpression	512 + 1		8329822	2		+			
ANR	8329837	PrimaryExpression	512		8329822	0					
ANR	8329838	PrimaryExpression	1		8329822	1					
ANR	8329839	IdentifierDeclStatement	long int size ;	786:4:29642:29655	8329822	2	True				
ANR	8329840	IdentifierDecl	size		8329822	0					
ANR	8329841	IdentifierDeclType	long int		8329822	0					
ANR	8329842	Identifier	size		8329822	1					
ANR	8329843	IdentifierDeclStatement	int c ;	787:4:29661:29666	8329822	3	True				
ANR	8329844	IdentifierDecl	c		8329822	0					
ANR	8329845	IdentifierDeclType	int		8329822	0					
ANR	8329846	Identifier	c		8329822	1					
ANR	8329847	IdentifierDeclStatement	int code = 0 ;	788:4:29672:29684	8329822	4	True				
ANR	8329848	IdentifierDecl	code = 0		8329822	0					
ANR	8329849	IdentifierDeclType	int		8329822	0					
ANR	8329850	Identifier	code		8329822	1					
ANR	8329851	AssignmentExpression	code = 0		8329822	2		=			
ANR	8329852	Identifier	code		8329822	0					
ANR	8329853	PrimaryExpression	0		8329822	1					
ANR	8329854	ForStatement	for ( c = 0 ; c < sid_size && c < 512 ; c ++ )		8329822	5					
ANR	8329855	ForInit	c = 0 ;	791:9:29767:29772	8329822	0	True				
ANR	8329856	AssignmentExpression	c = 0		8329822	0		=			
ANR	8329857	Identifier	c		8329822	0					
ANR	8329858	PrimaryExpression	0		8329822	1					
ANR	8329859	Condition	c < sid_size && c < 512	791:16:29774:29796	8329822	1	True				
ANR	8329860	AndExpression	c < sid_size && c < 512		8329822	0		&&			
ANR	8329861	RelationalExpression	c < sid_size		8329822	0		<			
ANR	8329862	Identifier	c		8329822	0					
ANR	8329863	Identifier	sid_size		8329822	1					
ANR	8329864	RelationalExpression	c < 512		8329822	1		<			
ANR	8329865	Identifier	c		8329822	0					
ANR	8329866	PrimaryExpression	512		8329822	1					
ANR	8329867	PostIncDecOperationExpression	c ++	791:41:29799:29801	8329822	2	True				
ANR	8329868	Identifier	c		8329822	0					
ANR	8329869	IncDec	++		8329822	1					
ANR	8329870	ExpressionStatement	alphaname [ c ] = sid [ c ]	792:8:29812:29833	8329822	3	True				
ANR	8329871	AssignmentExpression	alphaname [ c ] = sid [ c ]		8329822	0		=			
ANR	8329872	ArrayIndexing	alphaname [ c ]		8329822	0					
ANR	8329873	Identifier	alphaname		8329822	0					
ANR	8329874	Identifier	c		8329822	1					
ANR	8329875	ArrayIndexing	sid [ c ]		8329822	1					
ANR	8329876	Identifier	sid		8329822	0					
ANR	8329877	Identifier	c		8329822	1					
ANR	8329878	ExpressionStatement	alphaname [ c ] = '\\0'	793:4:29839:29858	8329822	6	True				
ANR	8329879	AssignmentExpression	alphaname [ c ] = '\\0'		8329822	0		=			
ANR	8329880	ArrayIndexing	alphaname [ c ]		8329822	0					
ANR	8329881	Identifier	alphaname		8329822	0					
ANR	8329882	Identifier	c		8329822	1					
ANR	8329883	PrimaryExpression	'\\0'		8329822	1					
ANR	8329884	ExpressionStatement	"size = pjl_proc_get_named_resource_size ( pcs -> pjls , alphaname )"	795:4:29865:29926	8329822	7	True				
ANR	8329885	AssignmentExpression	"size = pjl_proc_get_named_resource_size ( pcs -> pjls , alphaname )"		8329822	0		=			
ANR	8329886	Identifier	size		8329822	0					
ANR	8329887	CallExpression	"pjl_proc_get_named_resource_size ( pcs -> pjls , alphaname )"		8329822	1					
ANR	8329888	Callee	pjl_proc_get_named_resource_size		8329822	0					
ANR	8329889	Identifier	pjl_proc_get_named_resource_size		8329822	0					
ANR	8329890	ArgumentList	pcs -> pjls		8329822	1					
ANR	8329891	Argument	pcs -> pjls		8329822	0					
ANR	8329892	PtrMemberAccess	pcs -> pjls		8329822	0					
ANR	8329893	Identifier	pcs		8329822	0					
ANR	8329894	Identifier	pjls		8329822	1					
ANR	8329895	Argument	alphaname		8329822	1					
ANR	8329896	Identifier	alphaname		8329822	0					
ANR	8329897	IfStatement	if ( size == 0 )		8329822	8					
ANR	8329898	Condition	size == 0	797:8:29965:29973	8329822	0	True				
ANR	8329899	EqualityExpression	size == 0		8329822	0		==			
ANR	8329900	Identifier	size		8329822	0					
ANR	8329901	PrimaryExpression	0		8329822	1					
ANR	8329902	ReturnStatement	return 0 ;	798:8:29984:29992	8329822	1	True				
ANR	8329903	PrimaryExpression	0		8329822	0					
ANR	8329904	ExpressionStatement	"value = gs_alloc_bytes ( pcs -> memory , size + ( resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0 ) , ""resource"" )"	802:4:30133:30357	8329822	9	True				
ANR	8329905	AssignmentExpression	"value = gs_alloc_bytes ( pcs -> memory , size + ( resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0 ) , ""resource"" )"		8329822	0		=			
ANR	8329906	Identifier	value		8329822	0					
ANR	8329907	CallExpression	"gs_alloc_bytes ( pcs -> memory , size + ( resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0 ) , ""resource"" )"		8329822	1					
ANR	8329908	Callee	gs_alloc_bytes		8329822	0					
ANR	8329909	Identifier	gs_alloc_bytes		8329822	0					
ANR	8329910	ArgumentList	pcs -> memory		8329822	1					
ANR	8329911	Argument	pcs -> memory		8329822	0					
ANR	8329912	PtrMemberAccess	pcs -> memory		8329822	0					
ANR	8329913	Identifier	pcs		8329822	0					
ANR	8329914	Identifier	memory		8329822	1					
ANR	8329915	Argument	size + ( resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0 )		8329822	1					
ANR	8329916	AdditiveExpression	size + ( resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0 )		8329822	0		+			
ANR	8329917	Identifier	size		8329822	0					
ANR	8329918	ConditionalExpression	resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0		8329822	1					
ANR	8329919	Condition	resource_type == macro_resource		8329822	0					
ANR	8329920	EqualityExpression	resource_type == macro_resource		8329822	0		==			
ANR	8329921	Identifier	resource_type		8329822	0					
ANR	8329922	Identifier	macro_resource		8329822	1					
ANR	8329923	SizeofExpression	sizeof ( pcl_macro_t )		8329822	1					
ANR	8329924	Sizeof	sizeof		8329822	0					
ANR	8329925	SizeofOperand	pcl_macro_t		8329822	1					
ANR	8329926	PrimaryExpression	0		8329822	2					
ANR	8329927	Argument	"""resource"""		8329822	2					
ANR	8329928	PrimaryExpression	"""resource"""		8329822	0					
ANR	8329929	IfStatement	if ( value == NULL )		8329822	10					
ANR	8329930	Condition	value == NULL	808:8:30376:30388	8329822	0	True				
ANR	8329931	EqualityExpression	value == NULL		8329822	0		==			
ANR	8329932	Identifier	value		8329822	0					
ANR	8329933	Identifier	NULL		8329822	1					
ANR	8329934	ExpressionStatement	return_error ( gs_error_Fatal )	809:8:30399:30427	8329822	1	True				
ANR	8329935	CallExpression	return_error ( gs_error_Fatal )		8329822	0					
ANR	8329936	Callee	return_error		8329822	0					
ANR	8329937	Identifier	return_error		8329822	0					
ANR	8329938	ArgumentList	gs_error_Fatal		8329822	1					
ANR	8329939	Argument	gs_error_Fatal		8329822	0					
ANR	8329940	Identifier	gs_error_Fatal		8329822	0					
ANR	8329941	IfStatement	"if ( pjl_proc_get_named_resource ( pcs -> pjls , alphaname , ( byte * ) value + ( resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0 ) ) < 0 )"		8329822	11					
ANR	8329942	Condition	"pjl_proc_get_named_resource ( pcs -> pjls , alphaname , ( byte * ) value + ( resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0 ) ) < 0"	812:8:30443:30694	8329822	0	True				
ANR	8329943	RelationalExpression	"pjl_proc_get_named_resource ( pcs -> pjls , alphaname , ( byte * ) value + ( resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0 ) ) < 0"		8329822	0		<			
ANR	8329944	CallExpression	"pjl_proc_get_named_resource ( pcs -> pjls , alphaname , ( byte * ) value + ( resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0 ) )"		8329822	0					
ANR	8329945	Callee	pjl_proc_get_named_resource		8329822	0					
ANR	8329946	Identifier	pjl_proc_get_named_resource		8329822	0					
ANR	8329947	ArgumentList	pcs -> pjls		8329822	1					
ANR	8329948	Argument	pcs -> pjls		8329822	0					
ANR	8329949	PtrMemberAccess	pcs -> pjls		8329822	0					
ANR	8329950	Identifier	pcs		8329822	0					
ANR	8329951	Identifier	pjls		8329822	1					
ANR	8329952	Argument	alphaname		8329822	1					
ANR	8329953	Identifier	alphaname		8329822	0					
ANR	8329954	Argument	( byte * ) value + ( resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0 )		8329822	2					
ANR	8329955	AdditiveExpression	( byte * ) value + ( resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0 )		8329822	0		+			
ANR	8329956	CastExpression	( byte * ) value		8329822	0					
ANR	8329957	CastTarget	byte *		8329822	0					
ANR	8329958	Identifier	value		8329822	1					
ANR	8329959	ConditionalExpression	resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0		8329822	1					
ANR	8329960	Condition	resource_type == macro_resource		8329822	0					
ANR	8329961	EqualityExpression	resource_type == macro_resource		8329822	0		==			
ANR	8329962	Identifier	resource_type		8329822	0					
ANR	8329963	Identifier	macro_resource		8329822	1					
ANR	8329964	SizeofExpression	sizeof ( pcl_macro_t )		8329822	1					
ANR	8329965	Sizeof	sizeof		8329822	0					
ANR	8329966	SizeofOperand	pcl_macro_t		8329822	1					
ANR	8329967	PrimaryExpression	0		8329822	2					
ANR	8329968	PrimaryExpression	0		8329822	1					
ANR	8329969	CompoundStatement		34:72:1118:1118	8329822	1					
ANR	8329970	ExpressionStatement	"gs_free_object ( pcs -> memory , value , ""resource"" )"	816:8:30707:30753	8329822	0	True				
ANR	8329971	CallExpression	"gs_free_object ( pcs -> memory , value , ""resource"" )"		8329822	0					
ANR	8329972	Callee	gs_free_object		8329822	0					
ANR	8329973	Identifier	gs_free_object		8329822	0					
ANR	8329974	ArgumentList	pcs -> memory		8329822	1					
ANR	8329975	Argument	pcs -> memory		8329822	0					
ANR	8329976	PtrMemberAccess	pcs -> memory		8329822	0					
ANR	8329977	Identifier	pcs		8329822	0					
ANR	8329978	Identifier	memory		8329822	1					
ANR	8329979	Argument	value		8329822	1					
ANR	8329980	Identifier	value		8329822	0					
ANR	8329981	Argument	"""resource"""		8329822	2					
ANR	8329982	PrimaryExpression	"""resource"""		8329822	0					
ANR	8329983	ExpressionStatement	return_error ( gs_error_Fatal )	817:8:30763:30791	8329822	1	True				
ANR	8329984	CallExpression	return_error ( gs_error_Fatal )		8329822	0					
ANR	8329985	Callee	return_error		8329822	0					
ANR	8329986	Identifier	return_error		8329822	0					
ANR	8329987	ArgumentList	gs_error_Fatal		8329822	1					
ANR	8329988	Argument	gs_error_Fatal		8329822	0					
ANR	8329989	Identifier	gs_error_Fatal		8329822	0					
ANR	8329990	IfStatement	if ( resource_type == font_resource )		8329822	12					
ANR	8329991	Condition	resource_type == font_resource	823:8:30952:30981	8329822	0	True				
ANR	8329992	EqualityExpression	resource_type == font_resource		8329822	0		==			
ANR	8329993	Identifier	resource_type		8329822	0					
ANR	8329994	Identifier	font_resource		8329822	1					
ANR	8329995	CompoundStatement		44:8:1445:1469	8329822	1					
ANR	8329996	IdentifierDeclStatement	stream_cursor_read r ;	824:8:30994:31014	8329822	0	True				
ANR	8329997	IdentifierDecl	r		8329822	0					
ANR	8329998	IdentifierDeclType	stream_cursor_read		8329822	0					
ANR	8329999	Identifier	r		8329822	1					
ANR	8330000	IdentifierDeclStatement	pcl_parser_state_t state ;	825:8:31024:31048	8329822	1	True				
ANR	8330001	IdentifierDecl	state		8329822	0					
ANR	8330002	IdentifierDeclType	pcl_parser_state_t		8329822	0					
ANR	8330003	Identifier	state		8329822	1					
ANR	8330004	ExpressionStatement	r . ptr = ( byte * ) value - 1	827:8:31071:31096	8329822	2	True				
ANR	8330005	AssignmentExpression	r . ptr = ( byte * ) value - 1		8329822	0		=			
ANR	8330006	MemberAccess	r . ptr		8329822	0					
ANR	8330007	Identifier	r		8329822	0					
ANR	8330008	Identifier	ptr		8329822	1					
ANR	8330009	AdditiveExpression	( byte * ) value - 1		8329822	1		-			
ANR	8330010	CastExpression	( byte * ) value		8329822	0					
ANR	8330011	CastTarget	byte *		8329822	0					
ANR	8330012	Identifier	value		8329822	1					
ANR	8330013	PrimaryExpression	1		8329822	1					
ANR	8330014	ExpressionStatement	r . limit = r . ptr + size	828:8:31106:31128	8329822	3	True				
ANR	8330015	AssignmentExpression	r . limit = r . ptr + size		8329822	0		=			
ANR	8330016	MemberAccess	r . limit		8329822	0					
ANR	8330017	Identifier	r		8329822	0					
ANR	8330018	Identifier	limit		8329822	1					
ANR	8330019	AdditiveExpression	r . ptr + size		8329822	1		+			
ANR	8330020	MemberAccess	r . ptr		8329822	0					
ANR	8330021	Identifier	r		8329822	0					
ANR	8330022	Identifier	ptr		8329822	1					
ANR	8330023	Identifier	size		8329822	1					
ANR	8330024	ExpressionStatement	state . definitions = pcs -> pcl_commands	829:8:31138:31175	8329822	4	True				
ANR	8330025	AssignmentExpression	state . definitions = pcs -> pcl_commands		8329822	0		=			
ANR	8330026	MemberAccess	state . definitions		8329822	0					
ANR	8330027	Identifier	state		8329822	0					
ANR	8330028	Identifier	definitions		8329822	1					
ANR	8330029	PtrMemberAccess	pcs -> pcl_commands		8329822	1					
ANR	8330030	Identifier	pcs		8329822	0					
ANR	8330031	Identifier	pcl_commands		8329822	1					
ANR	8330032	ExpressionStatement	pcl_process_init ( & state )	830:8:31185:31209	8329822	5	True				
ANR	8330033	CallExpression	pcl_process_init ( & state )		8329822	0					
ANR	8330034	Callee	pcl_process_init		8329822	0					
ANR	8330035	Identifier	pcl_process_init		8329822	0					
ANR	8330036	ArgumentList	& state		8329822	1					
ANR	8330037	Argument	& state		8329822	0					
ANR	8330038	UnaryOperationExpression	& state		8329822	0					
ANR	8330039	UnaryOperator	&		8329822	0					
ANR	8330040	Identifier	state		8329822	1					
ANR	8330041	ExpressionStatement	"code = pcl_process ( & state , pcs , & r )"	831:8:31219:31254	8329822	6	True				
ANR	8330042	AssignmentExpression	"code = pcl_process ( & state , pcs , & r )"		8329822	0		=			
ANR	8330043	Identifier	code		8329822	0					
ANR	8330044	CallExpression	"pcl_process ( & state , pcs , & r )"		8329822	1					
ANR	8330045	Callee	pcl_process		8329822	0					
ANR	8330046	Identifier	pcl_process		8329822	0					
ANR	8330047	ArgumentList	& state		8329822	1					
ANR	8330048	Argument	& state		8329822	0					
ANR	8330049	UnaryOperationExpression	& state		8329822	0					
ANR	8330050	UnaryOperator	&		8329822	0					
ANR	8330051	Identifier	state		8329822	1					
ANR	8330052	Argument	pcs		8329822	1					
ANR	8330053	Identifier	pcs		8329822	0					
ANR	8330054	Argument	& r		8329822	2					
ANR	8330055	UnaryOperationExpression	& r		8329822	0					
ANR	8330056	UnaryOperator	&		8329822	0					
ANR	8330057	Identifier	r		8329822	1					
ANR	8330058	IfStatement	if ( code < 0 )		8329822	7					
ANR	8330059	Condition	code < 0	832:12:31268:31275	8329822	0	True				
ANR	8330060	RelationalExpression	code < 0		8329822	0		<			
ANR	8330061	Identifier	code		8329822	0					
ANR	8330062	PrimaryExpression	0		8329822	1					
ANR	8330063	CompoundStatement		51:22:1699:1699	8329822	1					
ANR	8330064	ExpressionStatement	"gs_free_object ( pcs -> memory , value , ""resource"" )"	833:12:31292:31338	8329822	0	True				
ANR	8330065	CallExpression	"gs_free_object ( pcs -> memory , value , ""resource"" )"		8329822	0					
ANR	8330066	Callee	gs_free_object		8329822	0					
ANR	8330067	Identifier	gs_free_object		8329822	0					
ANR	8330068	ArgumentList	pcs -> memory		8329822	1					
ANR	8330069	Argument	pcs -> memory		8329822	0					
ANR	8330070	PtrMemberAccess	pcs -> memory		8329822	0					
ANR	8330071	Identifier	pcs		8329822	0					
ANR	8330072	Identifier	memory		8329822	1					
ANR	8330073	Argument	value		8329822	1					
ANR	8330074	Identifier	value		8329822	0					
ANR	8330075	Argument	"""resource"""		8329822	2					
ANR	8330076	PrimaryExpression	"""resource"""		8329822	0					
ANR	8330077	ExpressionStatement	return_error ( code )	834:12:31352:31370	8329822	1	True				
ANR	8330078	CallExpression	return_error ( code )		8329822	0					
ANR	8330079	Callee	return_error		8329822	0					
ANR	8330080	Identifier	return_error		8329822	0					
ANR	8330081	ArgumentList	code		8329822	1					
ANR	8330082	Argument	code		8329822	0					
ANR	8330083	Identifier	code		8329822	0					
ANR	8330084	IfStatement	if ( resource_type == macro_resource )		8329822	13					
ANR	8330085	Condition	resource_type == macro_resource	841:8:31603:31633	8329822	0	True				
ANR	8330086	EqualityExpression	resource_type == macro_resource		8329822	0		==			
ANR	8330087	Identifier	resource_type		8329822	0					
ANR	8330088	Identifier	macro_resource		8329822	1					
ANR	8330089	CompoundStatement		60:41:2057:2057	8329822	1					
ANR	8330090	ExpressionStatement	"code = pl_dict_put ( & pcs -> macros , current_macro_id , current_macro_id_size , value )"	842:8:31646:31726	8329822	0	True				
ANR	8330091	AssignmentExpression	"code = pl_dict_put ( & pcs -> macros , current_macro_id , current_macro_id_size , value )"		8329822	0		=			
ANR	8330092	Identifier	code		8329822	0					
ANR	8330093	CallExpression	"pl_dict_put ( & pcs -> macros , current_macro_id , current_macro_id_size , value )"		8329822	1					
ANR	8330094	Callee	pl_dict_put		8329822	0					
ANR	8330095	Identifier	pl_dict_put		8329822	0					
ANR	8330096	ArgumentList	& pcs -> macros		8329822	1					
ANR	8330097	Argument	& pcs -> macros		8329822	0					
ANR	8330098	UnaryOperationExpression	& pcs -> macros		8329822	0					
ANR	8330099	UnaryOperator	&		8329822	0					
ANR	8330100	PtrMemberAccess	pcs -> macros		8329822	1					
ANR	8330101	Identifier	pcs		8329822	0					
ANR	8330102	Identifier	macros		8329822	1					
ANR	8330103	Argument	current_macro_id		8329822	1					
ANR	8330104	Identifier	current_macro_id		8329822	0					
ANR	8330105	Argument	current_macro_id_size		8329822	2					
ANR	8330106	Identifier	current_macro_id_size		8329822	0					
ANR	8330107	Argument	value		8329822	3					
ANR	8330108	Identifier	value		8329822	0					
ANR	8330109	IfStatement	if ( code == 0 )		8329822	1					
ANR	8330110	Condition	code == 0	843:12:31740:31748	8329822	0	True				
ANR	8330111	EqualityExpression	code == 0		8329822	0		==			
ANR	8330112	Identifier	code		8329822	0					
ANR	8330113	PrimaryExpression	0		8329822	1					
ANR	8330114	ExpressionStatement	"code = pl_dict_put_synonym ( & pcs -> macros , current_macro_id , current_macro_id_size , sid , sid_size )"	844:12:31763:31898	8329822	1	True				
ANR	8330115	AssignmentExpression	"code = pl_dict_put_synonym ( & pcs -> macros , current_macro_id , current_macro_id_size , sid , sid_size )"		8329822	0		=			
ANR	8330116	Identifier	code		8329822	0					
ANR	8330117	CallExpression	"pl_dict_put_synonym ( & pcs -> macros , current_macro_id , current_macro_id_size , sid , sid_size )"		8329822	1					
ANR	8330118	Callee	pl_dict_put_synonym		8329822	0					
ANR	8330119	Identifier	pl_dict_put_synonym		8329822	0					
ANR	8330120	ArgumentList	& pcs -> macros		8329822	1					
ANR	8330121	Argument	& pcs -> macros		8329822	0					
ANR	8330122	UnaryOperationExpression	& pcs -> macros		8329822	0					
ANR	8330123	UnaryOperator	&		8329822	0					
ANR	8330124	PtrMemberAccess	pcs -> macros		8329822	1					
ANR	8330125	Identifier	pcs		8329822	0					
ANR	8330126	Identifier	macros		8329822	1					
ANR	8330127	Argument	current_macro_id		8329822	1					
ANR	8330128	Identifier	current_macro_id		8329822	0					
ANR	8330129	Argument	current_macro_id_size		8329822	2					
ANR	8330130	Identifier	current_macro_id_size		8329822	0					
ANR	8330131	Argument	sid		8329822	3					
ANR	8330132	Identifier	sid		8329822	0					
ANR	8330133	Argument	sid_size		8329822	4					
ANR	8330134	Identifier	sid_size		8329822	0					
ANR	8330135	IfStatement	if ( code < 0 )		8329822	2					
ANR	8330136	Condition	code < 0	846:12:31912:31919	8329822	0	True				
ANR	8330137	RelationalExpression	code < 0		8329822	0		<			
ANR	8330138	Identifier	code		8329822	0					
ANR	8330139	PrimaryExpression	0		8329822	1					
ANR	8330140	CompoundStatement		65:22:2343:2343	8329822	1					
ANR	8330141	ExpressionStatement	"gs_free_object ( pcs -> memory , value , ""resource"" )"	847:12:31936:31982	8329822	0	True				
ANR	8330142	CallExpression	"gs_free_object ( pcs -> memory , value , ""resource"" )"		8329822	0					
ANR	8330143	Callee	gs_free_object		8329822	0					
ANR	8330144	Identifier	gs_free_object		8329822	0					
ANR	8330145	ArgumentList	pcs -> memory		8329822	1					
ANR	8330146	Argument	pcs -> memory		8329822	0					
ANR	8330147	PtrMemberAccess	pcs -> memory		8329822	0					
ANR	8330148	Identifier	pcs		8329822	0					
ANR	8330149	Identifier	memory		8329822	1					
ANR	8330150	Argument	value		8329822	1					
ANR	8330151	Identifier	value		8329822	0					
ANR	8330152	Argument	"""resource"""		8329822	2					
ANR	8330153	PrimaryExpression	"""resource"""		8329822	0					
ANR	8330154	ExpressionStatement	return_error ( code )	848:12:31996:32014	8329822	1	True				
ANR	8330155	CallExpression	return_error ( code )		8329822	0					
ANR	8330156	Callee	return_error		8329822	0					
ANR	8330157	Identifier	return_error		8329822	0					
ANR	8330158	ArgumentList	code		8329822	1					
ANR	8330159	Argument	code		8329822	0					
ANR	8330160	Identifier	code		8329822	0					
ANR	8330161	ElseStatement	else		8329822	0					
ANR	8330162	CompoundStatement		69:11:2458:2458	8329822	0					
ANR	8330163	ExpressionStatement	"code = pl_dict_put_synonym ( & pcs -> soft_fonts , current_font_id , current_font_id_size , sid , sid_size )"	851:8:32047:32180	8329822	0	True				
ANR	8330164	AssignmentExpression	"code = pl_dict_put_synonym ( & pcs -> soft_fonts , current_font_id , current_font_id_size , sid , sid_size )"		8329822	0		=			
ANR	8330165	Identifier	code		8329822	0					
ANR	8330166	CallExpression	"pl_dict_put_synonym ( & pcs -> soft_fonts , current_font_id , current_font_id_size , sid , sid_size )"		8329822	1					
ANR	8330167	Callee	pl_dict_put_synonym		8329822	0					
ANR	8330168	Identifier	pl_dict_put_synonym		8329822	0					
ANR	8330169	ArgumentList	& pcs -> soft_fonts		8329822	1					
ANR	8330170	Argument	& pcs -> soft_fonts		8329822	0					
ANR	8330171	UnaryOperationExpression	& pcs -> soft_fonts		8329822	0					
ANR	8330172	UnaryOperator	&		8329822	0					
ANR	8330173	PtrMemberAccess	pcs -> soft_fonts		8329822	1					
ANR	8330174	Identifier	pcs		8329822	0					
ANR	8330175	Identifier	soft_fonts		8329822	1					
ANR	8330176	Argument	current_font_id		8329822	1					
ANR	8330177	Identifier	current_font_id		8329822	0					
ANR	8330178	Argument	current_font_id_size		8329822	2					
ANR	8330179	Identifier	current_font_id_size		8329822	0					
ANR	8330180	Argument	sid		8329822	3					
ANR	8330181	Identifier	sid		8329822	0					
ANR	8330182	Argument	sid_size		8329822	4					
ANR	8330183	Identifier	sid_size		8329822	0					
ANR	8330184	ExpressionStatement	"gs_free_object ( pcs -> memory , value , ""resource"" )"	856:8:32333:32379	8329822	1	True				
ANR	8330185	CallExpression	"gs_free_object ( pcs -> memory , value , ""resource"" )"		8329822	0					
ANR	8330186	Callee	gs_free_object		8329822	0					
ANR	8330187	Identifier	gs_free_object		8329822	0					
ANR	8330188	ArgumentList	pcs -> memory		8329822	1					
ANR	8330189	Argument	pcs -> memory		8329822	0					
ANR	8330190	PtrMemberAccess	pcs -> memory		8329822	0					
ANR	8330191	Identifier	pcs		8329822	0					
ANR	8330192	Identifier	memory		8329822	1					
ANR	8330193	Argument	value		8329822	1					
ANR	8330194	Identifier	value		8329822	0					
ANR	8330195	Argument	"""resource"""		8329822	2					
ANR	8330196	PrimaryExpression	"""resource"""		8329822	0					
ANR	8330197	IfStatement	if ( code < 0 )		8329822	2					
ANR	8330198	Condition	code < 0	857:12:32393:32400	8329822	0	True				
ANR	8330199	RelationalExpression	code < 0		8329822	0		<			
ANR	8330200	Identifier	code		8329822	0					
ANR	8330201	PrimaryExpression	0		8329822	1					
ANR	8330202	ExpressionStatement	return_error ( code )	858:12:32415:32433	8329822	1	True				
ANR	8330203	CallExpression	return_error ( code )		8329822	0					
ANR	8330204	Callee	return_error		8329822	0					
ANR	8330205	Identifier	return_error		8329822	0					
ANR	8330206	ArgumentList	code		8329822	1					
ANR	8330207	Argument	code		8329822	0					
ANR	8330208	Identifier	code		8329822	0					
ANR	8330209	ReturnStatement	return code ;	860:4:32445:32456	8329822	14	True				
ANR	8330210	Identifier	code		8329822	0					
ANR	8330211	ReturnType	static int		8329822	1					
ANR	8330212	Identifier	pcl_find_resource		8329822	2					
ANR	8330213	ParameterList	"pcl_state_t * pcs , const byte sid [ ] , int sid_size , resource_type_t resource_type"		8329822	3					
ANR	8330214	Parameter	pcl_state_t * pcs	779:18:29460:29476	8329822	0	True				
ANR	8330215	ParameterType	pcl_state_t *		8329822	0					
ANR	8330216	Identifier	pcs		8329822	1					
ANR	8330217	Parameter	const byte sid [ ]	780:18:29497:29512	8329822	1	True				
ANR	8330218	ParameterType	const byte [ ]		8329822	0					
ANR	8330219	Identifier	sid		8329822	1					
ANR	8330220	Parameter	int sid_size	781:18:29533:29544	8329822	2	True				
ANR	8330221	ParameterType	int		8329822	0					
ANR	8330222	Identifier	sid_size		8329822	1					
ANR	8330223	Parameter	resource_type_t resource_type	781:32:29547:29575	8329822	3	True				
ANR	8330224	ParameterType	resource_type_t		8329822	0					
ANR	8330225	Identifier	resource_type		8329822	1					
ANR	8330226	CFGEntryNode	ENTRY		8329822		True				
ANR	8330227	CFGExitNode	EXIT		8329822		True				
ANR	8330228	Symbol	alphaname		8329822						
ANR	8330229	Symbol	code		8329822						
ANR	8330230	Symbol	pcs -> pjls		8329822						
ANR	8330231	Symbol	& state		8329822						
ANR	8330232	Symbol	* pcs		8329822						
ANR	8330233	Symbol	pjl_proc_get_named_resource		8329822						
ANR	8330234	Symbol	sid		8329822						
ANR	8330235	Symbol	& pcs -> soft_fonts		8329822						
ANR	8330236	Symbol	pcs -> memory		8329822						
ANR	8330237	Symbol	state		8329822						
ANR	8330238	Symbol	value		8329822						
ANR	8330239	Symbol	gs_error_Fatal		8329822						
ANR	8330240	Symbol	pcs		8329822						
ANR	8330241	Symbol	gs_alloc_bytes		8329822						
ANR	8330242	Symbol	NULL		8329822						
ANR	8330243	Symbol	c		8329822						
ANR	8330244	Symbol	current_font_id_size		8329822						
ANR	8330245	Symbol	& pcs -> macros		8329822						
ANR	8330246	Symbol	macro_resource		8329822						
ANR	8330247	Symbol	font_resource		8329822						
ANR	8330248	Symbol	pl_dict_put_synonym		8329822						
ANR	8330249	Symbol	r . limit		8329822						
ANR	8330250	Symbol	resource_type		8329822						
ANR	8330251	Symbol	* c		8329822						
ANR	8330252	Symbol	* alphaname		8329822						
ANR	8330253	Symbol	current_macro_id		8329822						
ANR	8330254	Symbol	r		8329822						
ANR	8330255	Symbol	current_macro_id_size		8329822						
ANR	8330256	Symbol	size		8329822						
ANR	8330257	Symbol	pcs -> pcl_commands		8329822						
ANR	8330258	Symbol	current_font_id		8329822						
ANR	8330259	Symbol	r . ptr		8329822						
ANR	8330260	Symbol	sid_size		8329822						
ANR	8330261	Symbol	* sid		8329822						
ANR	8330262	Symbol	& r		8329822						
ANR	8330263	Symbol	pjl_proc_get_named_resource_size		8329822						
ANR	8330264	Symbol	pcl_process		8329822						
ANR	8330265	Symbol	pl_dict_put		8329822						
ANR	8330266	Symbol	state . definitions		8329822						
ANR	8330267	Function	pcl_alphanumeric_id_data	863:0:32461:39383							
ANR	8330268	FunctionDef	"pcl_alphanumeric_id_data (pcl_args_t * pargs , pcl_state_t * pcs)"		8330267	0					
ANR	8330269	CompoundStatement		865:0:32604:39383	8330267	0					
ANR	8330270	IdentifierDeclStatement	uint count = uint_arg ( pargs ) ;	866:4:32610:32638	8330267	0	True				
ANR	8330271	IdentifierDecl	count = uint_arg ( pargs )		8330267	0					
ANR	8330272	IdentifierDeclType	uint		8330267	0					
ANR	8330273	Identifier	count		8330267	1					
ANR	8330274	AssignmentExpression	count = uint_arg ( pargs )		8330267	2		=			
ANR	8330275	Identifier	count		8330267	0					
ANR	8330276	CallExpression	uint_arg ( pargs )		8330267	1					
ANR	8330277	Callee	uint_arg		8330267	0					
ANR	8330278	Identifier	uint_arg		8330267	0					
ANR	8330279	ArgumentList	pargs		8330267	1					
ANR	8330280	Argument	pargs		8330267	0					
ANR	8330281	Identifier	pargs		8330267	0					
ANR	8330282	IdentifierDeclStatement	const alphanumeric_data_t * alpha_data = ( const alphanumeric_data_t * ) arg_data ( pargs ) ;	868:4:32645:32737	8330267	1	True				
ANR	8330283	IdentifierDecl	* alpha_data = ( const alphanumeric_data_t * ) arg_data ( pargs )		8330267	0					
ANR	8330284	IdentifierDeclType	const alphanumeric_data_t *		8330267	0					
ANR	8330285	Identifier	alpha_data		8330267	1					
ANR	8330286	AssignmentExpression	* alpha_data = ( const alphanumeric_data_t * ) arg_data ( pargs )		8330267	2		=			
ANR	8330287	Identifier	alpha_data		8330267	0					
ANR	8330288	CastExpression	( const alphanumeric_data_t * ) arg_data ( pargs )		8330267	1					
ANR	8330289	CastTarget	const alphanumeric_data_t *		8330267	0					
ANR	8330290	CallExpression	arg_data ( pargs )		8330267	1					
ANR	8330291	Callee	arg_data		8330267	0					
ANR	8330292	Identifier	arg_data		8330267	0					
ANR	8330293	ArgumentList	pargs		8330267	1					
ANR	8330294	Argument	pargs		8330267	0					
ANR	8330295	Identifier	pargs		8330267	0					
ANR	8330296	IdentifierDeclStatement	int string_id_size = ( count - 1 ) ;	871:4:32744:32776	8330267	2	True				
ANR	8330297	IdentifierDecl	string_id_size = ( count - 1 )		8330267	0					
ANR	8330298	IdentifierDeclType	int		8330267	0					
ANR	8330299	Identifier	string_id_size		8330267	1					
ANR	8330300	AssignmentExpression	string_id_size = ( count - 1 )		8330267	2		=			
ANR	8330301	Identifier	string_id_size		8330267	0					
ANR	8330302	AdditiveExpression	count - 1		8330267	1		-			
ANR	8330303	Identifier	count		8330267	0					
ANR	8330304	PrimaryExpression	1		8330267	1					
ANR	8330305	IfStatement	if ( gs_debug_c ( 'i' ) )		8330267	3					
ANR	8330306	Condition	gs_debug_c ( 'i' )	874:8:32846:32860	8330267	0	True				
ANR	8330307	CallExpression	gs_debug_c ( 'i' )		8330267	0					
ANR	8330308	Callee	gs_debug_c		8330267	0					
ANR	8330309	Identifier	gs_debug_c		8330267	0					
ANR	8330310	ArgumentList	'i'		8330267	1					
ANR	8330311	Argument	'i'		8330267	0					
ANR	8330312	PrimaryExpression	'i'		8330267	0					
ANR	8330313	CompoundStatement		10:25:258:258	8330267	1					
ANR	8330314	ExpressionStatement	"pcl_debug_dump_data ( pcs -> memory , arg_data ( pargs ) , uint_arg ( pargs ) )"	875:8:32873:32939	8330267	0	True				
ANR	8330315	CallExpression	"pcl_debug_dump_data ( pcs -> memory , arg_data ( pargs ) , uint_arg ( pargs ) )"		8330267	0					
ANR	8330316	Callee	pcl_debug_dump_data		8330267	0					
ANR	8330317	Identifier	pcl_debug_dump_data		8330267	0					
ANR	8330318	ArgumentList	pcs -> memory		8330267	1					
ANR	8330319	Argument	pcs -> memory		8330267	0					
ANR	8330320	PtrMemberAccess	pcs -> memory		8330267	0					
ANR	8330321	Identifier	pcs		8330267	0					
ANR	8330322	Identifier	memory		8330267	1					
ANR	8330323	Argument	arg_data ( pargs )		8330267	1					
ANR	8330324	CallExpression	arg_data ( pargs )		8330267	0					
ANR	8330325	Callee	arg_data		8330267	0					
ANR	8330326	Identifier	arg_data		8330267	0					
ANR	8330327	ArgumentList	pargs		8330267	1					
ANR	8330328	Argument	pargs		8330267	0					
ANR	8330329	Identifier	pargs		8330267	0					
ANR	8330330	Argument	uint_arg ( pargs )		8330267	2					
ANR	8330331	CallExpression	uint_arg ( pargs )		8330267	0					
ANR	8330332	Callee	uint_arg		8330267	0					
ANR	8330333	Identifier	uint_arg		8330267	0					
ANR	8330334	ArgumentList	pargs		8330267	1					
ANR	8330335	Argument	pargs		8330267	0					
ANR	8330336	Identifier	pargs		8330267	0					
ANR	8330337	IfStatement	if ( count == 0 )		8330267	4					
ANR	8330338	Condition	count == 0	879:8:32963:32972	8330267	0	True				
ANR	8330339	EqualityExpression	count == 0		8330267	0		==			
ANR	8330340	Identifier	count		8330267	0					
ANR	8330341	PrimaryExpression	0		8330267	1					
ANR	8330342	ReturnStatement	return 0 ;	880:8:32983:32991	8330267	1	True				
ANR	8330343	PrimaryExpression	0		8330267	0					
ANR	8330344	IfStatement	if ( count < 1 || count > 512 )		8330267	5					
ANR	8330345	Condition	count < 1 || count > 512	881:8:33001:33024	8330267	0	True				
ANR	8330346	OrExpression	count < 1 || count > 512		8330267	0		||			
ANR	8330347	RelationalExpression	count < 1		8330267	0		<			
ANR	8330348	Identifier	count		8330267	0					
ANR	8330349	PrimaryExpression	1		8330267	1					
ANR	8330350	RelationalExpression	count > 512		8330267	1		>			
ANR	8330351	Identifier	count		8330267	0					
ANR	8330352	PrimaryExpression	512		8330267	1					
ANR	8330353	ReturnStatement	return e_Range ;	882:8:33035:33049	8330267	1	True				
ANR	8330354	Identifier	e_Range		8330267	0					
ANR	8330355	SwitchStatement	switch ( alpha_data -> operation )		8330267	6					
ANR	8330356	Condition	alpha_data -> operation	883:12:33063:33083	8330267	0	True				
ANR	8330357	PtrMemberAccess	alpha_data -> operation		8330267	0					
ANR	8330358	Identifier	alpha_data		8330267	0					
ANR	8330359	Identifier	operation		8330267	1					
ANR	8330360	CompoundStatement		19:35:481:481	8330267	1					
ANR	8330361	Label	case 0 :	884:8:33096:33102	8330267	0	True				
ANR	8330362	CompoundStatement		23:16:595:752	8330267	1					
ANR	8330363	IdentifierDeclStatement	"char * new_id = ( char * ) gs_alloc_bytes ( pcs -> memory , string_id_size , ""pcl_alphanumeric_id_data"" ) ;"	887:16:33200:33357	8330267	0	True				
ANR	8330364	IdentifierDecl	"* new_id = ( char * ) gs_alloc_bytes ( pcs -> memory , string_id_size , ""pcl_alphanumeric_id_data"" )"		8330267	0					
ANR	8330365	IdentifierDeclType	char *		8330267	0					
ANR	8330366	Identifier	new_id		8330267	1					
ANR	8330367	AssignmentExpression	"* new_id = ( char * ) gs_alloc_bytes ( pcs -> memory , string_id_size , ""pcl_alphanumeric_id_data"" )"		8330267	2		=			
ANR	8330368	Identifier	new_id		8330267	0					
ANR	8330369	CastExpression	"( char * ) gs_alloc_bytes ( pcs -> memory , string_id_size , ""pcl_alphanumeric_id_data"" )"		8330267	1					
ANR	8330370	CastTarget	char *		8330267	0					
ANR	8330371	CallExpression	"gs_alloc_bytes ( pcs -> memory , string_id_size , ""pcl_alphanumeric_id_data"" )"		8330267	1					
ANR	8330372	Callee	gs_alloc_bytes		8330267	0					
ANR	8330373	Identifier	gs_alloc_bytes		8330267	0					
ANR	8330374	ArgumentList	pcs -> memory		8330267	1					
ANR	8330375	Argument	pcs -> memory		8330267	0					
ANR	8330376	PtrMemberAccess	pcs -> memory		8330267	0					
ANR	8330377	Identifier	pcs		8330267	0					
ANR	8330378	Identifier	memory		8330267	1					
ANR	8330379	Argument	string_id_size		8330267	1					
ANR	8330380	Identifier	string_id_size		8330267	0					
ANR	8330381	Argument	"""pcl_alphanumeric_id_data"""		8330267	2					
ANR	8330382	PrimaryExpression	"""pcl_alphanumeric_id_data"""		8330267	0					
ANR	8330383	IfStatement	if ( new_id == 0 )		8330267	1					
ANR	8330384	Condition	new_id == 0	891:20:33380:33390	8330267	0	True				
ANR	8330385	EqualityExpression	new_id == 0		8330267	0		==			
ANR	8330386	Identifier	new_id		8330267	0					
ANR	8330387	PrimaryExpression	0		8330267	1					
ANR	8330388	ExpressionStatement	return_error ( e_Memory )	892:20:33413:33435	8330267	1	True				
ANR	8330389	CallExpression	return_error ( e_Memory )		8330267	0					
ANR	8330390	Callee	return_error		8330267	0					
ANR	8330391	Identifier	return_error		8330267	0					
ANR	8330392	ArgumentList	e_Memory		8330267	1					
ANR	8330393	Argument	e_Memory		8330267	0					
ANR	8330394	Identifier	e_Memory		8330267	0					
ANR	8330395	IfStatement	if ( pcs -> alpha_font_id . id )		8330267	2					
ANR	8330396	Condition	pcs -> alpha_font_id . id	894:20:33517:33537	8330267	0	True				
ANR	8330397	MemberAccess	pcs -> alpha_font_id . id		8330267	0					
ANR	8330398	PtrMemberAccess	pcs -> alpha_font_id		8330267	0					
ANR	8330399	Identifier	pcs		8330267	0					
ANR	8330400	Identifier	alpha_font_id		8330267	1					
ANR	8330401	Identifier	id		8330267	1					
ANR	8330402	ExpressionStatement	"gs_free_object ( pcs -> memory , pcs -> alpha_font_id . id , ""pcl_free_string_id"" )"	895:20:33560:33702	8330267	1	True				
ANR	8330403	CallExpression	"gs_free_object ( pcs -> memory , pcs -> alpha_font_id . id , ""pcl_free_string_id"" )"		8330267	0					
ANR	8330404	Callee	gs_free_object		8330267	0					
ANR	8330405	Identifier	gs_free_object		8330267	0					
ANR	8330406	ArgumentList	pcs -> memory		8330267	1					
ANR	8330407	Argument	pcs -> memory		8330267	0					
ANR	8330408	PtrMemberAccess	pcs -> memory		8330267	0					
ANR	8330409	Identifier	pcs		8330267	0					
ANR	8330410	Identifier	memory		8330267	1					
ANR	8330411	Argument	pcs -> alpha_font_id . id		8330267	1					
ANR	8330412	MemberAccess	pcs -> alpha_font_id . id		8330267	0					
ANR	8330413	PtrMemberAccess	pcs -> alpha_font_id		8330267	0					
ANR	8330414	Identifier	pcs		8330267	0					
ANR	8330415	Identifier	alpha_font_id		8330267	1					
ANR	8330416	Identifier	id		8330267	1					
ANR	8330417	Argument	"""pcl_free_string_id"""		8330267	2					
ANR	8330418	PrimaryExpression	"""pcl_free_string_id"""		8330267	0					
ANR	8330419	ExpressionStatement	"memcpy ( new_id , alpha_data -> string_id , string_id_size )"	899:16:33775:33828	8330267	3	True				
ANR	8330420	CallExpression	"memcpy ( new_id , alpha_data -> string_id , string_id_size )"		8330267	0					
ANR	8330421	Callee	memcpy		8330267	0					
ANR	8330422	Identifier	memcpy		8330267	0					
ANR	8330423	ArgumentList	new_id		8330267	1					
ANR	8330424	Argument	new_id		8330267	0					
ANR	8330425	Identifier	new_id		8330267	0					
ANR	8330426	Argument	alpha_data -> string_id		8330267	1					
ANR	8330427	PtrMemberAccess	alpha_data -> string_id		8330267	0					
ANR	8330428	Identifier	alpha_data		8330267	0					
ANR	8330429	Identifier	string_id		8330267	1					
ANR	8330430	Argument	string_id_size		8330267	2					
ANR	8330431	Identifier	string_id_size		8330267	0					
ANR	8330432	ExpressionStatement	pcs -> alpha_font_id . id = ( byte * ) new_id	901:16:33888:33927	8330267	4	True				
ANR	8330433	AssignmentExpression	pcs -> alpha_font_id . id = ( byte * ) new_id		8330267	0		=			
ANR	8330434	MemberAccess	pcs -> alpha_font_id . id		8330267	0					
ANR	8330435	PtrMemberAccess	pcs -> alpha_font_id		8330267	0					
ANR	8330436	Identifier	pcs		8330267	0					
ANR	8330437	Identifier	alpha_font_id		8330267	1					
ANR	8330438	Identifier	id		8330267	1					
ANR	8330439	CastExpression	( byte * ) new_id		8330267	1					
ANR	8330440	CastTarget	byte *		8330267	0					
ANR	8330441	Identifier	new_id		8330267	1					
ANR	8330442	ExpressionStatement	pcs -> alpha_font_id . size = string_id_size	902:16:33945:33985	8330267	5	True				
ANR	8330443	AssignmentExpression	pcs -> alpha_font_id . size = string_id_size		8330267	0		=			
ANR	8330444	MemberAccess	pcs -> alpha_font_id . size		8330267	0					
ANR	8330445	PtrMemberAccess	pcs -> alpha_font_id		8330267	0					
ANR	8330446	Identifier	pcs		8330267	0					
ANR	8330447	Identifier	alpha_font_id		8330267	1					
ANR	8330448	Identifier	size		8330267	1					
ANR	8330449	Identifier	string_id_size		8330267	1					
ANR	8330450	ExpressionStatement	pcs -> font_id_type = string_id	904:16:34065:34094	8330267	6	True				
ANR	8330451	AssignmentExpression	pcs -> font_id_type = string_id		8330267	0		=			
ANR	8330452	PtrMemberAccess	pcs -> font_id_type		8330267	0					
ANR	8330453	Identifier	pcs		8330267	0					
ANR	8330454	Identifier	font_id_type		8330267	1					
ANR	8330455	Identifier	string_id		8330267	1					
ANR	8330456	BreakStatement	break ;	906:12:34122:34127	8330267	2	True				
ANR	8330457	Label	case 1 :	907:8:34137:34143	8330267	3	True				
ANR	8330458	CompoundStatement		47:16:1681:1692	8330267	4					
ANR	8330459	IdentifierDeclStatement	void * value ;	911:16:34286:34297	8330267	0	True				
ANR	8330460	IdentifierDecl	* value		8330267	0					
ANR	8330461	IdentifierDeclType	void *		8330267	0					
ANR	8330462	Identifier	value		8330267	1					
ANR	8330463	IfStatement	"if ( pl_dict_find_no_stack ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , & value ) )"		8330267	1					
ANR	8330464	Condition	"pl_dict_find_no_stack ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , & value )"	913:20:34383:34468	8330267	0	True				
ANR	8330465	CallExpression	"pl_dict_find_no_stack ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , & value )"		8330267	0					
ANR	8330466	Callee	pl_dict_find_no_stack		8330267	0					
ANR	8330467	Identifier	pl_dict_find_no_stack		8330267	0					
ANR	8330468	ArgumentList	& pcs -> soft_fonts		8330267	1					
ANR	8330469	Argument	& pcs -> soft_fonts		8330267	0					
ANR	8330470	UnaryOperationExpression	& pcs -> soft_fonts		8330267	0					
ANR	8330471	UnaryOperator	&		8330267	0					
ANR	8330472	PtrMemberAccess	pcs -> soft_fonts		8330267	1					
ANR	8330473	Identifier	pcs		8330267	0					
ANR	8330474	Identifier	soft_fonts		8330267	1					
ANR	8330475	Argument	alpha_data -> string_id		8330267	1					
ANR	8330476	PtrMemberAccess	alpha_data -> string_id		8330267	0					
ANR	8330477	Identifier	alpha_data		8330267	0					
ANR	8330478	Identifier	string_id		8330267	1					
ANR	8330479	Argument	string_id_size		8330267	2					
ANR	8330480	Identifier	string_id_size		8330267	0					
ANR	8330481	Argument	& value		8330267	3					
ANR	8330482	UnaryOperationExpression	& value		8330267	0					
ANR	8330483	UnaryOperator	&		8330267	0					
ANR	8330484	Identifier	value		8330267	1					
ANR	8330485	CompoundStatement		49:108:1866:1866	8330267	1					
ANR	8330486	ReturnStatement	"return pl_dict_put_synonym ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , current_font_id , current_font_id_size ) ;"	914:20:34493:34709	8330267	0	True				
ANR	8330487	CallExpression	"pl_dict_put_synonym ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , current_font_id , current_font_id_size )"		8330267	0					
ANR	8330488	Callee	pl_dict_put_synonym		8330267	0					
ANR	8330489	Identifier	pl_dict_put_synonym		8330267	0					
ANR	8330490	ArgumentList	& pcs -> soft_fonts		8330267	1					
ANR	8330491	Argument	& pcs -> soft_fonts		8330267	0					
ANR	8330492	UnaryOperationExpression	& pcs -> soft_fonts		8330267	0					
ANR	8330493	UnaryOperator	&		8330267	0					
ANR	8330494	PtrMemberAccess	pcs -> soft_fonts		8330267	1					
ANR	8330495	Identifier	pcs		8330267	0					
ANR	8330496	Identifier	soft_fonts		8330267	1					
ANR	8330497	Argument	alpha_data -> string_id		8330267	1					
ANR	8330498	PtrMemberAccess	alpha_data -> string_id		8330267	0					
ANR	8330499	Identifier	alpha_data		8330267	0					
ANR	8330500	Identifier	string_id		8330267	1					
ANR	8330501	Argument	string_id_size		8330267	2					
ANR	8330502	Identifier	string_id_size		8330267	0					
ANR	8330503	Argument	current_font_id		8330267	3					
ANR	8330504	Identifier	current_font_id		8330267	0					
ANR	8330505	Argument	current_font_id_size		8330267	4					
ANR	8330506	Identifier	current_font_id_size		8330267	0					
ANR	8330507	ElseStatement	else		8330267	0					
ANR	8330508	CompoundStatement		53:23:2129:2129	8330267	0					
ANR	8330509	ReturnStatement	"return pcl_find_resource ( pcs , alpha_data -> string_id , string_id_size , font_resource ) ;"	919:20:34829:34957	8330267	0	True				
ANR	8330510	CallExpression	"pcl_find_resource ( pcs , alpha_data -> string_id , string_id_size , font_resource )"		8330267	0					
ANR	8330511	Callee	pcl_find_resource		8330267	0					
ANR	8330512	Identifier	pcl_find_resource		8330267	0					
ANR	8330513	ArgumentList	pcs		8330267	1					
ANR	8330514	Argument	pcs		8330267	0					
ANR	8330515	Identifier	pcs		8330267	0					
ANR	8330516	Argument	alpha_data -> string_id		8330267	1					
ANR	8330517	PtrMemberAccess	alpha_data -> string_id		8330267	0					
ANR	8330518	Identifier	alpha_data		8330267	0					
ANR	8330519	Identifier	string_id		8330267	1					
ANR	8330520	Argument	string_id_size		8330267	2					
ANR	8330521	Identifier	string_id_size		8330267	0					
ANR	8330522	Argument	font_resource		8330267	3					
ANR	8330523	Identifier	font_resource		8330267	0					
ANR	8330524	BreakStatement	break ;	923:12:35003:35008	8330267	5	True				
ANR	8330525	Label	case 2 :	924:8:35018:35024	8330267	6	True				
ANR	8330526	CompoundStatement		66:16:2676:2733	8330267	7					
ANR	8330527	IdentifierDeclStatement	void * value ;	929:16:35252:35263	8330267	0	True				
ANR	8330528	IdentifierDecl	* value		8330267	0					
ANR	8330529	IdentifierDeclType	void *		8330267	0					
ANR	8330530	Identifier	value		8330267	1					
ANR	8330531	IdentifierDeclStatement	pcl_font_selection_t * pfs = & pcs -> font_selection [ primary ] ;	930:16:35281:35338	8330267	1	True				
ANR	8330532	IdentifierDecl	* pfs = & pcs -> font_selection [ primary ]		8330267	0					
ANR	8330533	IdentifierDeclType	pcl_font_selection_t *		8330267	0					
ANR	8330534	Identifier	pfs		8330267	1					
ANR	8330535	AssignmentExpression	* pfs = & pcs -> font_selection [ primary ]		8330267	2		=			
ANR	8330536	Identifier	pfs		8330267	0					
ANR	8330537	UnaryOperationExpression	& pcs -> font_selection [ primary ]		8330267	1					
ANR	8330538	UnaryOperator	&		8330267	0					
ANR	8330539	ArrayIndexing	pcs -> font_selection [ primary ]		8330267	1					
ANR	8330540	PtrMemberAccess	pcs -> font_selection		8330267	0					
ANR	8330541	Identifier	pcs		8330267	0					
ANR	8330542	Identifier	font_selection		8330267	1					
ANR	8330543	Identifier	primary		8330267	1					
ANR	8330544	IfStatement	"if ( ! pl_dict_find_no_stack ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , & value ) )"		8330267	2					
ANR	8330545	Condition	"! pl_dict_find_no_stack ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , & value )"	932:20:35361:35533	8330267	0	True				
ANR	8330546	UnaryOperationExpression	"! pl_dict_find_no_stack ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , & value )"		8330267	0					
ANR	8330547	UnaryOperator	!		8330267	0					
ANR	8330548	CallExpression	"pl_dict_find_no_stack ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , & value )"		8330267	1					
ANR	8330549	Callee	pl_dict_find_no_stack		8330267	0					
ANR	8330550	Identifier	pl_dict_find_no_stack		8330267	0					
ANR	8330551	ArgumentList	& pcs -> soft_fonts		8330267	1					
ANR	8330552	Argument	& pcs -> soft_fonts		8330267	0					
ANR	8330553	UnaryOperationExpression	& pcs -> soft_fonts		8330267	0					
ANR	8330554	UnaryOperator	&		8330267	0					
ANR	8330555	PtrMemberAccess	pcs -> soft_fonts		8330267	1					
ANR	8330556	Identifier	pcs		8330267	0					
ANR	8330557	Identifier	soft_fonts		8330267	1					
ANR	8330558	Argument	alpha_data -> string_id		8330267	1					
ANR	8330559	PtrMemberAccess	alpha_data -> string_id		8330267	0					
ANR	8330560	Identifier	alpha_data		8330267	0					
ANR	8330561	Identifier	string_id		8330267	1					
ANR	8330562	Argument	string_id_size		8330267	2					
ANR	8330563	Identifier	string_id_size		8330267	0					
ANR	8330564	Argument	& value		8330267	3					
ANR	8330565	UnaryOperationExpression	& value		8330267	0					
ANR	8330566	UnaryOperator	&		8330267	0					
ANR	8330567	Identifier	value		8330267	1					
ANR	8330568	ReturnStatement	return 1 ;	935:20:35556:35564	8330267	1	True				
ANR	8330569	PrimaryExpression	1		8330267	0					
ANR	8330570	ExpressionStatement	"pcl_set_id_parameters ( pcs , pfs , ( pl_font_t * ) value , 0 )"	937:16:35613:35668	8330267	3	True				
ANR	8330571	CallExpression	"pcl_set_id_parameters ( pcs , pfs , ( pl_font_t * ) value , 0 )"		8330267	0					
ANR	8330572	Callee	pcl_set_id_parameters		8330267	0					
ANR	8330573	Identifier	pcl_set_id_parameters		8330267	0					
ANR	8330574	ArgumentList	pcs		8330267	1					
ANR	8330575	Argument	pcs		8330267	0					
ANR	8330576	Identifier	pcs		8330267	0					
ANR	8330577	Argument	pfs		8330267	1					
ANR	8330578	Identifier	pfs		8330267	0					
ANR	8330579	Argument	( pl_font_t * ) value		8330267	2					
ANR	8330580	CastExpression	( pl_font_t * ) value		8330267	0					
ANR	8330581	CastTarget	pl_font_t *		8330267	0					
ANR	8330582	Identifier	value		8330267	1					
ANR	8330583	Argument	0		8330267	3					
ANR	8330584	PrimaryExpression	0		8330267	0					
ANR	8330585	ExpressionStatement	"pcl_decache_font ( pcs , - 1 , true )"	938:16:35686:35717	8330267	4	True				
ANR	8330586	CallExpression	"pcl_decache_font ( pcs , - 1 , true )"		8330267	0					
ANR	8330587	Callee	pcl_decache_font		8330267	0					
ANR	8330588	Identifier	pcl_decache_font		8330267	0					
ANR	8330589	ArgumentList	pcs		8330267	1					
ANR	8330590	Argument	pcs		8330267	0					
ANR	8330591	Identifier	pcs		8330267	0					
ANR	8330592	Argument	- 1		8330267	1					
ANR	8330593	UnaryOperationExpression	- 1		8330267	0					
ANR	8330594	UnaryOperator	-		8330267	0					
ANR	8330595	PrimaryExpression	1		8330267	1					
ANR	8330596	Argument	true		8330267	2					
ANR	8330597	Identifier	true		8330267	0					
ANR	8330598	BreakStatement	break ;	940:12:35745:35750	8330267	8	True				
ANR	8330599	Label	case 3 :	941:8:35760:35766	8330267	9	True				
ANR	8330600	CompoundStatement		81:16:3283:3342	8330267	10					
ANR	8330601	IdentifierDeclStatement	void * value ;	944:16:35859:35870	8330267	0	True				
ANR	8330602	IdentifierDecl	* value		8330267	0					
ANR	8330603	IdentifierDeclType	void *		8330267	0					
ANR	8330604	Identifier	value		8330267	1					
ANR	8330605	IdentifierDeclStatement	pcl_font_selection_t * pfs = & pcs -> font_selection [ secondary ] ;	945:16:35888:35947	8330267	1	True				
ANR	8330606	IdentifierDecl	* pfs = & pcs -> font_selection [ secondary ]		8330267	0					
ANR	8330607	IdentifierDeclType	pcl_font_selection_t *		8330267	0					
ANR	8330608	Identifier	pfs		8330267	1					
ANR	8330609	AssignmentExpression	* pfs = & pcs -> font_selection [ secondary ]		8330267	2		=			
ANR	8330610	Identifier	pfs		8330267	0					
ANR	8330611	UnaryOperationExpression	& pcs -> font_selection [ secondary ]		8330267	1					
ANR	8330612	UnaryOperator	&		8330267	0					
ANR	8330613	ArrayIndexing	pcs -> font_selection [ secondary ]		8330267	1					
ANR	8330614	PtrMemberAccess	pcs -> font_selection		8330267	0					
ANR	8330615	Identifier	pcs		8330267	0					
ANR	8330616	Identifier	font_selection		8330267	1					
ANR	8330617	Identifier	secondary		8330267	1					
ANR	8330618	IfStatement	"if ( ! pl_dict_find_no_stack ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , & value ) )"		8330267	2					
ANR	8330619	Condition	"! pl_dict_find_no_stack ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , & value )"	947:20:35970:36142	8330267	0	True				
ANR	8330620	UnaryOperationExpression	"! pl_dict_find_no_stack ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , & value )"		8330267	0					
ANR	8330621	UnaryOperator	!		8330267	0					
ANR	8330622	CallExpression	"pl_dict_find_no_stack ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , & value )"		8330267	1					
ANR	8330623	Callee	pl_dict_find_no_stack		8330267	0					
ANR	8330624	Identifier	pl_dict_find_no_stack		8330267	0					
ANR	8330625	ArgumentList	& pcs -> soft_fonts		8330267	1					
ANR	8330626	Argument	& pcs -> soft_fonts		8330267	0					
ANR	8330627	UnaryOperationExpression	& pcs -> soft_fonts		8330267	0					
ANR	8330628	UnaryOperator	&		8330267	0					
ANR	8330629	PtrMemberAccess	pcs -> soft_fonts		8330267	1					
ANR	8330630	Identifier	pcs		8330267	0					
ANR	8330631	Identifier	soft_fonts		8330267	1					
ANR	8330632	Argument	alpha_data -> string_id		8330267	1					
ANR	8330633	PtrMemberAccess	alpha_data -> string_id		8330267	0					
ANR	8330634	Identifier	alpha_data		8330267	0					
ANR	8330635	Identifier	string_id		8330267	1					
ANR	8330636	Argument	string_id_size		8330267	2					
ANR	8330637	Identifier	string_id_size		8330267	0					
ANR	8330638	Argument	& value		8330267	3					
ANR	8330639	UnaryOperationExpression	& value		8330267	0					
ANR	8330640	UnaryOperator	&		8330267	0					
ANR	8330641	Identifier	value		8330267	1					
ANR	8330642	ReturnStatement	return 1 ;	950:20:36165:36173	8330267	1	True				
ANR	8330643	PrimaryExpression	1		8330267	0					
ANR	8330644	ExpressionStatement	"pcl_set_id_parameters ( pcs , pfs , ( pl_font_t * ) value , 0 )"	952:16:36222:36277	8330267	3	True				
ANR	8330645	CallExpression	"pcl_set_id_parameters ( pcs , pfs , ( pl_font_t * ) value , 0 )"		8330267	0					
ANR	8330646	Callee	pcl_set_id_parameters		8330267	0					
ANR	8330647	Identifier	pcl_set_id_parameters		8330267	0					
ANR	8330648	ArgumentList	pcs		8330267	1					
ANR	8330649	Argument	pcs		8330267	0					
ANR	8330650	Identifier	pcs		8330267	0					
ANR	8330651	Argument	pfs		8330267	1					
ANR	8330652	Identifier	pfs		8330267	0					
ANR	8330653	Argument	( pl_font_t * ) value		8330267	2					
ANR	8330654	CastExpression	( pl_font_t * ) value		8330267	0					
ANR	8330655	CastTarget	pl_font_t *		8330267	0					
ANR	8330656	Identifier	value		8330267	1					
ANR	8330657	Argument	0		8330267	3					
ANR	8330658	PrimaryExpression	0		8330267	0					
ANR	8330659	ExpressionStatement	"pcl_decache_font ( pcs , - 1 , true )"	953:16:36295:36326	8330267	4	True				
ANR	8330660	CallExpression	"pcl_decache_font ( pcs , - 1 , true )"		8330267	0					
ANR	8330661	Callee	pcl_decache_font		8330267	0					
ANR	8330662	Identifier	pcl_decache_font		8330267	0					
ANR	8330663	ArgumentList	pcs		8330267	1					
ANR	8330664	Argument	pcs		8330267	0					
ANR	8330665	Identifier	pcs		8330267	0					
ANR	8330666	Argument	- 1		8330267	1					
ANR	8330667	UnaryOperationExpression	- 1		8330267	0					
ANR	8330668	UnaryOperator	-		8330267	0					
ANR	8330669	PrimaryExpression	1		8330267	1					
ANR	8330670	Argument	true		8330267	2					
ANR	8330671	Identifier	true		8330267	0					
ANR	8330672	BreakStatement	break ;	955:12:36354:36359	8330267	11	True				
ANR	8330673	Label	case 4 :	956:8:36369:36375	8330267	12	True				
ANR	8330674	CompoundStatement		95:16:3867:4024	8330267	13					
ANR	8330675	IdentifierDeclStatement	"char * new_id = ( char * ) gs_alloc_bytes ( pcs -> memory , string_id_size , ""pcl_alphanumeric_id_data"" ) ;"	959:16:36472:36629	8330267	0	True				
ANR	8330676	IdentifierDecl	"* new_id = ( char * ) gs_alloc_bytes ( pcs -> memory , string_id_size , ""pcl_alphanumeric_id_data"" )"		8330267	0					
ANR	8330677	IdentifierDeclType	char *		8330267	0					
ANR	8330678	Identifier	new_id		8330267	1					
ANR	8330679	AssignmentExpression	"* new_id = ( char * ) gs_alloc_bytes ( pcs -> memory , string_id_size , ""pcl_alphanumeric_id_data"" )"		8330267	2		=			
ANR	8330680	Identifier	new_id		8330267	0					
ANR	8330681	CastExpression	"( char * ) gs_alloc_bytes ( pcs -> memory , string_id_size , ""pcl_alphanumeric_id_data"" )"		8330267	1					
ANR	8330682	CastTarget	char *		8330267	0					
ANR	8330683	CallExpression	"gs_alloc_bytes ( pcs -> memory , string_id_size , ""pcl_alphanumeric_id_data"" )"		8330267	1					
ANR	8330684	Callee	gs_alloc_bytes		8330267	0					
ANR	8330685	Identifier	gs_alloc_bytes		8330267	0					
ANR	8330686	ArgumentList	pcs -> memory		8330267	1					
ANR	8330687	Argument	pcs -> memory		8330267	0					
ANR	8330688	PtrMemberAccess	pcs -> memory		8330267	0					
ANR	8330689	Identifier	pcs		8330267	0					
ANR	8330690	Identifier	memory		8330267	1					
ANR	8330691	Argument	string_id_size		8330267	1					
ANR	8330692	Identifier	string_id_size		8330267	0					
ANR	8330693	Argument	"""pcl_alphanumeric_id_data"""		8330267	2					
ANR	8330694	PrimaryExpression	"""pcl_alphanumeric_id_data"""		8330267	0					
ANR	8330695	IfStatement	if ( new_id == 0 )		8330267	1					
ANR	8330696	Condition	new_id == 0	963:20:36652:36662	8330267	0	True				
ANR	8330697	EqualityExpression	new_id == 0		8330267	0		==			
ANR	8330698	Identifier	new_id		8330267	0					
ANR	8330699	PrimaryExpression	0		8330267	1					
ANR	8330700	ExpressionStatement	return_error ( e_Memory )	964:20:36685:36707	8330267	1	True				
ANR	8330701	CallExpression	return_error ( e_Memory )		8330267	0					
ANR	8330702	Callee	return_error		8330267	0					
ANR	8330703	Identifier	return_error		8330267	0					
ANR	8330704	ArgumentList	e_Memory		8330267	1					
ANR	8330705	Argument	e_Memory		8330267	0					
ANR	8330706	Identifier	e_Memory		8330267	0					
ANR	8330707	IfStatement	if ( pcs -> alpha_macro_id . id )		8330267	2					
ANR	8330708	Condition	pcs -> alpha_macro_id . id	966:20:36789:36810	8330267	0	True				
ANR	8330709	MemberAccess	pcs -> alpha_macro_id . id		8330267	0					
ANR	8330710	PtrMemberAccess	pcs -> alpha_macro_id		8330267	0					
ANR	8330711	Identifier	pcs		8330267	0					
ANR	8330712	Identifier	alpha_macro_id		8330267	1					
ANR	8330713	Identifier	id		8330267	1					
ANR	8330714	ExpressionStatement	"gs_free_object ( pcs -> memory , pcs -> alpha_macro_id . id , ""pcl_free_string_id"" )"	967:20:36833:36976	8330267	1	True				
ANR	8330715	CallExpression	"gs_free_object ( pcs -> memory , pcs -> alpha_macro_id . id , ""pcl_free_string_id"" )"		8330267	0					
ANR	8330716	Callee	gs_free_object		8330267	0					
ANR	8330717	Identifier	gs_free_object		8330267	0					
ANR	8330718	ArgumentList	pcs -> memory		8330267	1					
ANR	8330719	Argument	pcs -> memory		8330267	0					
ANR	8330720	PtrMemberAccess	pcs -> memory		8330267	0					
ANR	8330721	Identifier	pcs		8330267	0					
ANR	8330722	Identifier	memory		8330267	1					
ANR	8330723	Argument	pcs -> alpha_macro_id . id		8330267	1					
ANR	8330724	MemberAccess	pcs -> alpha_macro_id . id		8330267	0					
ANR	8330725	PtrMemberAccess	pcs -> alpha_macro_id		8330267	0					
ANR	8330726	Identifier	pcs		8330267	0					
ANR	8330727	Identifier	alpha_macro_id		8330267	1					
ANR	8330728	Identifier	id		8330267	1					
ANR	8330729	Argument	"""pcl_free_string_id"""		8330267	2					
ANR	8330730	PrimaryExpression	"""pcl_free_string_id"""		8330267	0					
ANR	8330731	ExpressionStatement	"memcpy ( new_id , alpha_data -> string_id , string_id_size )"	971:16:37049:37102	8330267	3	True				
ANR	8330732	CallExpression	"memcpy ( new_id , alpha_data -> string_id , string_id_size )"		8330267	0					
ANR	8330733	Callee	memcpy		8330267	0					
ANR	8330734	Identifier	memcpy		8330267	0					
ANR	8330735	ArgumentList	new_id		8330267	1					
ANR	8330736	Argument	new_id		8330267	0					
ANR	8330737	Identifier	new_id		8330267	0					
ANR	8330738	Argument	alpha_data -> string_id		8330267	1					
ANR	8330739	PtrMemberAccess	alpha_data -> string_id		8330267	0					
ANR	8330740	Identifier	alpha_data		8330267	0					
ANR	8330741	Identifier	string_id		8330267	1					
ANR	8330742	Argument	string_id_size		8330267	2					
ANR	8330743	Identifier	string_id_size		8330267	0					
ANR	8330744	ExpressionStatement	pcs -> alpha_macro_id . id = ( byte * ) new_id	973:16:37162:37202	8330267	4	True				
ANR	8330745	AssignmentExpression	pcs -> alpha_macro_id . id = ( byte * ) new_id		8330267	0		=			
ANR	8330746	MemberAccess	pcs -> alpha_macro_id . id		8330267	0					
ANR	8330747	PtrMemberAccess	pcs -> alpha_macro_id		8330267	0					
ANR	8330748	Identifier	pcs		8330267	0					
ANR	8330749	Identifier	alpha_macro_id		8330267	1					
ANR	8330750	Identifier	id		8330267	1					
ANR	8330751	CastExpression	( byte * ) new_id		8330267	1					
ANR	8330752	CastTarget	byte *		8330267	0					
ANR	8330753	Identifier	new_id		8330267	1					
ANR	8330754	ExpressionStatement	pcs -> alpha_macro_id . size = string_id_size	974:16:37220:37261	8330267	5	True				
ANR	8330755	AssignmentExpression	pcs -> alpha_macro_id . size = string_id_size		8330267	0		=			
ANR	8330756	MemberAccess	pcs -> alpha_macro_id . size		8330267	0					
ANR	8330757	PtrMemberAccess	pcs -> alpha_macro_id		8330267	0					
ANR	8330758	Identifier	pcs		8330267	0					
ANR	8330759	Identifier	alpha_macro_id		8330267	1					
ANR	8330760	Identifier	size		8330267	1					
ANR	8330761	Identifier	string_id_size		8330267	1					
ANR	8330762	ExpressionStatement	pcs -> macro_id_type = string_id	976:16:37341:37371	8330267	6	True				
ANR	8330763	AssignmentExpression	pcs -> macro_id_type = string_id		8330267	0		=			
ANR	8330764	PtrMemberAccess	pcs -> macro_id_type		8330267	0					
ANR	8330765	Identifier	pcs		8330267	0					
ANR	8330766	Identifier	macro_id_type		8330267	1					
ANR	8330767	Identifier	string_id		8330267	1					
ANR	8330768	BreakStatement	break ;	978:12:37399:37404	8330267	14	True				
ANR	8330769	Label	case 5 :	979:8:37414:37420	8330267	15	True				
ANR	8330770	CompoundStatement		118:16:4923:4934	8330267	16					
ANR	8330771	IdentifierDeclStatement	void * value ;	982:16:37528:37539	8330267	0	True				
ANR	8330772	IdentifierDecl	* value		8330267	0					
ANR	8330773	IdentifierDeclType	void *		8330267	0					
ANR	8330774	Identifier	value		8330267	1					
ANR	8330775	IfStatement	"if ( pl_dict_find_no_stack ( & pcs -> macros , alpha_data -> string_id , string_id_size , & value ) )"		8330267	1					
ANR	8330776	Condition	"pl_dict_find_no_stack ( & pcs -> macros , alpha_data -> string_id , string_id_size , & value )"	984:20:37628:37709	8330267	0	True				
ANR	8330777	CallExpression	"pl_dict_find_no_stack ( & pcs -> macros , alpha_data -> string_id , string_id_size , & value )"		8330267	0					
ANR	8330778	Callee	pl_dict_find_no_stack		8330267	0					
ANR	8330779	Identifier	pl_dict_find_no_stack		8330267	0					
ANR	8330780	ArgumentList	& pcs -> macros		8330267	1					
ANR	8330781	Argument	& pcs -> macros		8330267	0					
ANR	8330782	UnaryOperationExpression	& pcs -> macros		8330267	0					
ANR	8330783	UnaryOperator	&		8330267	0					
ANR	8330784	PtrMemberAccess	pcs -> macros		8330267	1					
ANR	8330785	Identifier	pcs		8330267	0					
ANR	8330786	Identifier	macros		8330267	1					
ANR	8330787	Argument	alpha_data -> string_id		8330267	1					
ANR	8330788	PtrMemberAccess	alpha_data -> string_id		8330267	0					
ANR	8330789	Identifier	alpha_data		8330267	0					
ANR	8330790	Identifier	string_id		8330267	1					
ANR	8330791	Argument	string_id_size		8330267	2					
ANR	8330792	Identifier	string_id_size		8330267	0					
ANR	8330793	Argument	& value		8330267	3					
ANR	8330794	UnaryOperationExpression	& value		8330267	0					
ANR	8330795	UnaryOperator	&		8330267	0					
ANR	8330796	Identifier	value		8330267	1					
ANR	8330797	CompoundStatement		120:104:5107:5107	8330267	1					
ANR	8330798	ReturnStatement	"return pl_dict_put_synonym ( & pcs -> macros , alpha_data -> string_id , string_id_size , current_macro_id , current_macro_id_size ) ;"	985:20:37734:37948	8330267	0	True				
ANR	8330799	CallExpression	"pl_dict_put_synonym ( & pcs -> macros , alpha_data -> string_id , string_id_size , current_macro_id , current_macro_id_size )"		8330267	0					
ANR	8330800	Callee	pl_dict_put_synonym		8330267	0					
ANR	8330801	Identifier	pl_dict_put_synonym		8330267	0					
ANR	8330802	ArgumentList	& pcs -> macros		8330267	1					
ANR	8330803	Argument	& pcs -> macros		8330267	0					
ANR	8330804	UnaryOperationExpression	& pcs -> macros		8330267	0					
ANR	8330805	UnaryOperator	&		8330267	0					
ANR	8330806	PtrMemberAccess	pcs -> macros		8330267	1					
ANR	8330807	Identifier	pcs		8330267	0					
ANR	8330808	Identifier	macros		8330267	1					
ANR	8330809	Argument	alpha_data -> string_id		8330267	1					
ANR	8330810	PtrMemberAccess	alpha_data -> string_id		8330267	0					
ANR	8330811	Identifier	alpha_data		8330267	0					
ANR	8330812	Identifier	string_id		8330267	1					
ANR	8330813	Argument	string_id_size		8330267	2					
ANR	8330814	Identifier	string_id_size		8330267	0					
ANR	8330815	Argument	current_macro_id		8330267	3					
ANR	8330816	Identifier	current_macro_id		8330267	0					
ANR	8330817	Argument	current_macro_id_size		8330267	4					
ANR	8330818	Identifier	current_macro_id_size		8330267	0					
ANR	8330819	ElseStatement	else		8330267	0					
ANR	8330820	CompoundStatement		124:23:5368:5368	8330267	0					
ANR	8330821	ReturnStatement	"return pcl_find_resource ( pcs , alpha_data -> string_id , string_id_size , macro_resource ) ;"	990:20:38069:38198	8330267	0	True				
ANR	8330822	CallExpression	"pcl_find_resource ( pcs , alpha_data -> string_id , string_id_size , macro_resource )"		8330267	0					
ANR	8330823	Callee	pcl_find_resource		8330267	0					
ANR	8330824	Identifier	pcl_find_resource		8330267	0					
ANR	8330825	ArgumentList	pcs		8330267	1					
ANR	8330826	Argument	pcs		8330267	0					
ANR	8330827	Identifier	pcs		8330267	0					
ANR	8330828	Argument	alpha_data -> string_id		8330267	1					
ANR	8330829	PtrMemberAccess	alpha_data -> string_id		8330267	0					
ANR	8330830	Identifier	alpha_data		8330267	0					
ANR	8330831	Identifier	string_id		8330267	1					
ANR	8330832	Argument	string_id_size		8330267	2					
ANR	8330833	Identifier	string_id_size		8330267	0					
ANR	8330834	Argument	macro_resource		8330267	3					
ANR	8330835	Identifier	macro_resource		8330267	0					
ANR	8330836	BreakStatement	break ;	994:12:38244:38249	8330267	17	True				
ANR	8330837	Label	case 20 :	995:8:38259:38266	8330267	18	True				
ANR	8330838	IfStatement	if ( pcs -> font_id_type == string_id )		8330267	19					
ANR	8330839	Condition	pcs -> font_id_type == string_id	997:16:38360:38389	8330267	0	True				
ANR	8330840	EqualityExpression	pcs -> font_id_type == string_id		8330267	0		==			
ANR	8330841	PtrMemberAccess	pcs -> font_id_type		8330267	0					
ANR	8330842	Identifier	pcs		8330267	0					
ANR	8330843	Identifier	font_id_type		8330267	1					
ANR	8330844	Identifier	string_id		8330267	1					
ANR	8330845	ReturnStatement	"return pcl_delete_soft_font ( pcs , current_font_id , current_font_id_size , NULL ) ;"	998:16:38408:38522	8330267	1	True				
ANR	8330846	CallExpression	"pcl_delete_soft_font ( pcs , current_font_id , current_font_id_size , NULL )"		8330267	0					
ANR	8330847	Callee	pcl_delete_soft_font		8330267	0					
ANR	8330848	Identifier	pcl_delete_soft_font		8330267	0					
ANR	8330849	ArgumentList	pcs		8330267	1					
ANR	8330850	Argument	pcs		8330267	0					
ANR	8330851	Identifier	pcs		8330267	0					
ANR	8330852	Argument	current_font_id		8330267	1					
ANR	8330853	Identifier	current_font_id		8330267	0					
ANR	8330854	Argument	current_font_id_size		8330267	2					
ANR	8330855	Identifier	current_font_id_size		8330267	0					
ANR	8330856	Argument	NULL		8330267	3					
ANR	8330857	Identifier	NULL		8330267	0					
ANR	8330858	BreakStatement	break ;	1000:12:38536:38541	8330267	20	True				
ANR	8330859	Label	case 21 :	1001:8:38551:38558	8330267	21	True				
ANR	8330860	IfStatement	if ( pcs -> macro_id_type == string_id )		8330267	22					
ANR	8330861	Condition	pcs -> macro_id_type == string_id	1003:16:38655:38685	8330267	0	True				
ANR	8330862	EqualityExpression	pcs -> macro_id_type == string_id		8330267	0		==			
ANR	8330863	PtrMemberAccess	pcs -> macro_id_type		8330267	0					
ANR	8330864	Identifier	pcs		8330267	0					
ANR	8330865	Identifier	macro_id_type		8330267	1					
ANR	8330866	Identifier	string_id		8330267	1					
ANR	8330867	ExpressionStatement	"pl_dict_undef ( & pcs -> macros , current_macro_id , current_macro_id_size )"	1004:16:38704:38802	8330267	1	True				
ANR	8330868	CallExpression	"pl_dict_undef ( & pcs -> macros , current_macro_id , current_macro_id_size )"		8330267	0					
ANR	8330869	Callee	pl_dict_undef		8330267	0					
ANR	8330870	Identifier	pl_dict_undef		8330267	0					
ANR	8330871	ArgumentList	& pcs -> macros		8330267	1					
ANR	8330872	Argument	& pcs -> macros		8330267	0					
ANR	8330873	UnaryOperationExpression	& pcs -> macros		8330267	0					
ANR	8330874	UnaryOperator	&		8330267	0					
ANR	8330875	PtrMemberAccess	pcs -> macros		8330267	1					
ANR	8330876	Identifier	pcs		8330267	0					
ANR	8330877	Identifier	macros		8330267	1					
ANR	8330878	Argument	current_macro_id		8330267	1					
ANR	8330879	Identifier	current_macro_id		8330267	0					
ANR	8330880	Argument	current_macro_id_size		8330267	2					
ANR	8330881	Identifier	current_macro_id_size		8330267	0					
ANR	8330882	BreakStatement	break ;	1006:12:38816:38821	8330267	23	True				
ANR	8330883	Label	case 100 :	1007:8:38831:38839	8330267	24	True				
ANR	8330884	CompoundStatement		151:16:6539:6577	8330267	25					
ANR	8330885	IdentifierDeclStatement	int code = pcl_end_page_if_marked ( pcs ) ;	1015:16:39144:39182	8330267	0	True				
ANR	8330886	IdentifierDecl	code = pcl_end_page_if_marked ( pcs )		8330267	0					
ANR	8330887	IdentifierDeclType	int		8330267	0					
ANR	8330888	Identifier	code		8330267	1					
ANR	8330889	AssignmentExpression	code = pcl_end_page_if_marked ( pcs )		8330267	2		=			
ANR	8330890	Identifier	code		8330267	0					
ANR	8330891	CallExpression	pcl_end_page_if_marked ( pcs )		8330267	1					
ANR	8330892	Callee	pcl_end_page_if_marked		8330267	0					
ANR	8330893	Identifier	pcl_end_page_if_marked		8330267	0					
ANR	8330894	ArgumentList	pcs		8330267	1					
ANR	8330895	Argument	pcs		8330267	0					
ANR	8330896	Identifier	pcs		8330267	0					
ANR	8330897	IfStatement	if ( code < 0 )		8330267	1					
ANR	8330898	Condition	code < 0	1016:20:39204:39211	8330267	0	True				
ANR	8330899	RelationalExpression	code < 0		8330267	0		<			
ANR	8330900	Identifier	code		8330267	0					
ANR	8330901	PrimaryExpression	0		8330267	1					
ANR	8330902	ReturnStatement	return code ;	1017:20:39234:39245	8330267	1	True				
ANR	8330903	Identifier	code		8330267	0					
ANR	8330904	ExpressionStatement	pcl_home_cursor ( pcs )	1018:16:39263:39283	8330267	2	True				
ANR	8330905	CallExpression	pcl_home_cursor ( pcs )		8330267	0					
ANR	8330906	Callee	pcl_home_cursor		8330267	0					
ANR	8330907	Identifier	pcl_home_cursor		8330267	0					
ANR	8330908	ArgumentList	pcs		8330267	1					
ANR	8330909	Argument	pcs		8330267	0					
ANR	8330910	Identifier	pcs		8330267	0					
ANR	8330911	BreakStatement	break ;	1020:12:39311:39316	8330267	26	True				
ANR	8330912	Label	default :	1021:8:39326:39333	8330267	27	True				
ANR	8330913	Identifier	default		8330267	0					
ANR	8330914	ReturnStatement	return e_Range ;	1022:12:39347:39361	8330267	28	True				
ANR	8330915	Identifier	e_Range		8330267	0					
ANR	8330916	ReturnStatement	return 0 ;	1024:4:39373:39381	8330267	7	True				
ANR	8330917	PrimaryExpression	0		8330267	0					
ANR	8330918	ReturnType	static int		8330267	1					
ANR	8330919	Identifier	pcl_alphanumeric_id_data		8330267	2					
ANR	8330920	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8330267	3					
ANR	8330921	Parameter	pcl_args_t * pargs	864:25:32565:32582	8330267	0	True				
ANR	8330922	ParameterType	pcl_args_t *		8330267	0					
ANR	8330923	Identifier	pargs		8330267	1					
ANR	8330924	Parameter	pcl_state_t * pcs	864:45:32585:32601	8330267	1	True				
ANR	8330925	ParameterType	pcl_state_t *		8330267	0					
ANR	8330926	Identifier	pcs		8330267	1					
ANR	8330927	CFGEntryNode	ENTRY		8330267		True				
ANR	8330928	CFGExitNode	EXIT		8330267		True				
ANR	8330929	Symbol	pcl_find_resource		8330267						
ANR	8330930	Symbol	pcs -> font_id_type		8330267						
ANR	8330931	Symbol	& value		8330267						
ANR	8330932	Symbol	code		8330267						
ANR	8330933	Symbol	alpha_data		8330267						
ANR	8330934	Symbol	* alpha_data		8330267						
ANR	8330935	Symbol	pcs -> macro_id_type		8330267						
ANR	8330936	Symbol	* pcs		8330267						
ANR	8330937	Symbol	pcl_delete_soft_font		8330267						
ANR	8330938	Symbol	pargs		8330267						
ANR	8330939	Symbol	e_Memory		8330267						
ANR	8330940	Symbol	& pcs -> soft_fonts		8330267						
ANR	8330941	Symbol	gs_debug_c		8330267						
ANR	8330942	Symbol	pcs -> memory		8330267						
ANR	8330943	Symbol	pcs -> alpha_macro_id . id		8330267						
ANR	8330944	Symbol	value		8330267						
ANR	8330945	Symbol	e_Range		8330267						
ANR	8330946	Symbol	pcs		8330267						
ANR	8330947	Symbol	new_id		8330267						
ANR	8330948	Symbol	gs_alloc_bytes		8330267						
ANR	8330949	Symbol	pcs -> alpha_font_id		8330267						
ANR	8330950	Symbol	alpha_data -> operation		8330267						
ANR	8330951	Symbol	current_font_id_size		8330267						
ANR	8330952	Symbol	NULL		8330267						
ANR	8330953	Symbol	string_id_size		8330267						
ANR	8330954	Symbol	alpha_data -> string_id		8330267						
ANR	8330955	Symbol	& pcs -> macros		8330267						
ANR	8330956	Symbol	pl_dict_put_synonym		8330267						
ANR	8330957	Symbol	font_resource		8330267						
ANR	8330958	Symbol	macro_resource		8330267						
ANR	8330959	Symbol	count		8330267						
ANR	8330960	Symbol	pcs -> font_selection		8330267						
ANR	8330961	Symbol	pcs -> alpha_macro_id		8330267						
ANR	8330962	Symbol	pcl_end_page_if_marked		8330267						
ANR	8330963	Symbol	uint_arg		8330267						
ANR	8330964	Symbol	current_macro_id		8330267						
ANR	8330965	Symbol	secondary		8330267						
ANR	8330966	Symbol	current_macro_id_size		8330267						
ANR	8330967	Symbol	pcs -> alpha_font_id . id		8330267						
ANR	8330968	Symbol	pl_dict_find_no_stack		8330267						
ANR	8330969	Symbol	current_font_id		8330267						
ANR	8330970	Symbol	arg_data		8330267						
ANR	8330971	Symbol	true		8330267						
ANR	8330972	Symbol	pcs -> alpha_macro_id . size		8330267						
ANR	8330973	Symbol	pfs		8330267						
ANR	8330974	Symbol	pcs -> alpha_font_id . size		8330267						
ANR	8330975	Symbol	string_id		8330267						
ANR	8330976	Symbol	primary		8330267						
ANR	8330977	Function	pcsfont_do_registration	1028:0:39407:40497							
ANR	8330978	FunctionDef	"pcsfont_do_registration (pcl_parser_state_t * pcl_parser_state , gs_memory_t * mem)"		8330977	0					
ANR	8330979	CompoundStatement		1031:0:39524:40497	8330977	0					
ANR	8330980	Statement	DEFINE_CLASS	1032:4:39584:39595	8330977	0	True				
ANR	8330981	Statement	(	1032:16:39596:39596	8330977	1	True				
ANR	8330982	Statement	'*'	1032:17:39597:39599	8330977	2	True				
ANR	8330983	Statement	)	1032:20:39600:39600	8330977	3	True				
ANR	8330984	CompoundStatement		2:22:77:77	8330977	4					
ANR	8330985	Statement	'c'	1033:4:39608:39610	8330977	0	True				
ANR	8330986	Statement	","	1033:7:39611:39611	8330977	1	True				
ANR	8330987	Statement	'D'	1033:9:39613:39615	8330977	2	True				
ANR	8330988	Statement	","	1033:12:39616:39616	8330977	3	True				
ANR	8330989	Statement	PCL_COMMAND	1034:12:39630:39640	8330977	4	True				
ANR	8330990	Statement	(	1034:23:39641:39641	8330977	5	True				
ANR	8330991	Statement	"""Assign Font ID"""	1034:24:39642:39657	8330977	6	True				
ANR	8330992	Statement	","	1034:40:39658:39658	8330977	7	True				
ANR	8330993	Statement	pcl_assign_font_id	1034:42:39660:39677	8330977	8	True				
ANR	8330994	Statement	","	1034:60:39678:39678	8330977	9	True				
ANR	8330995	Statement	pca_neg_error	1035:28:39708:39720	8330977	10	True				
ANR	8330996	Statement	|	1035:42:39722:39722	8330977	11	True				
ANR	8330997	Statement	pca_big_error	1035:44:39724:39736	8330977	12	True				
ANR	8330998	Statement	)	1035:57:39737:39737	8330977	13	True				
ANR	8330999	Statement	","	1035:59:39739:39739	8330977	5	True				
ANR	8331000	CompoundStatement		5:61:216:216	8330977	6					
ANR	8331001	Statement	'c'	1036:4:39747:39749	8330977	0	True				
ANR	8331002	Statement	","	1036:7:39750:39750	8330977	1	True				
ANR	8331003	Statement	'F'	1036:9:39752:39754	8330977	2	True				
ANR	8331004	Statement	","	1036:12:39755:39755	8330977	3	True				
ANR	8331005	Statement	PCL_COMMAND	1037:12:39769:39779	8330977	4	True				
ANR	8331006	Statement	(	1037:23:39780:39780	8330977	5	True				
ANR	8331007	Statement	"""Font Control"""	1037:24:39781:39794	8330977	6	True				
ANR	8331008	Statement	","	1037:38:39795:39795	8330977	7	True				
ANR	8331009	Statement	pcl_font_control	1037:40:39797:39812	8330977	8	True				
ANR	8331010	Statement	","	1037:56:39813:39813	8330977	9	True				
ANR	8331011	Statement	pca_neg_error	1038:28:39843:39855	8330977	10	True				
ANR	8331012	Statement	|	1038:42:39857:39857	8330977	11	True				
ANR	8331013	Statement	pca_big_error	1038:44:39859:39871	8330977	12	True				
ANR	8331014	Statement	)	1038:57:39872:39872	8330977	13	True				
ANR	8331015	Statement	","	1038:59:39874:39874	8330977	7	True				
ANR	8331016	Statement	END_CLASS	1039:8:39884:39892	8330977	8	True				
ANR	8331017	Statement	DEFINE_CLASS_COMMAND_ARGS	1040:8:39902:39926	8330977	9	True				
ANR	8331018	Statement	(	1040:33:39927:39927	8330977	10	True				
ANR	8331019	Statement	')'	1040:34:39928:39930	8330977	11	True				
ANR	8331020	Statement	","	1040:37:39931:39931	8330977	12	True				
ANR	8331021	Statement	's'	1040:39:39933:39935	8330977	13	True				
ANR	8331022	Statement	","	1040:42:39936:39936	8330977	14	True				
ANR	8331023	Statement	'W'	1040:44:39938:39940	8330977	15	True				
ANR	8331024	Statement	","	1040:47:39941:39941	8330977	16	True				
ANR	8331025	Statement	"""Font Header"""	1040:49:39943:39955	8330977	17	True				
ANR	8331026	Statement	","	1040:62:39956:39956	8330977	18	True				
ANR	8331027	Statement	pcl_font_header	1041:34:39992:40006	8330977	19	True				
ANR	8331028	Statement	","	1041:49:40007:40007	8330977	20	True				
ANR	8331029	Statement	pca_bytes	1041:51:40009:40017	8330977	21	True				
ANR	8331030	Statement	)	1041:60:40018:40018	8330977	22	True				
ANR	8331031	Statement	DEFINE_CLASS_COMMAND_ARGS	1042:8:40028:40052	8330977	23	True				
ANR	8331032	Statement	(	1042:33:40053:40053	8330977	24	True				
ANR	8331033	Statement	'*'	1042:34:40054:40056	8330977	25	True				
ANR	8331034	Statement	","	1042:37:40057:40057	8330977	26	True				
ANR	8331035	Statement	'c'	1042:39:40059:40061	8330977	27	True				
ANR	8331036	Statement	","	1042:42:40062:40062	8330977	28	True				
ANR	8331037	Statement	'E'	1042:44:40064:40066	8330977	29	True				
ANR	8331038	Statement	","	1042:47:40067:40067	8330977	30	True				
ANR	8331039	Statement	"""Character Code"""	1042:49:40069:40084	8330977	31	True				
ANR	8331040	Statement	","	1042:65:40085:40085	8330977	32	True				
ANR	8331041	Statement	pcl_character_code	1043:34:40121:40138	8330977	33	True				
ANR	8331042	Statement	","	1043:52:40139:40139	8330977	34	True				
ANR	8331043	Statement	pca_neg_error	1044:34:40175:40187	8330977	35	True				
ANR	8331044	Statement	|	1044:48:40189:40189	8330977	36	True				
ANR	8331045	Statement	pca_big_ok	1044:50:40191:40200	8330977	37	True				
ANR	8331046	Statement	)	1044:60:40201:40201	8330977	38	True				
ANR	8331047	Statement	DEFINE_CLASS_COMMAND_ARGS	1045:8:40211:40235	8330977	39	True				
ANR	8331048	Statement	(	1045:33:40236:40236	8330977	40	True				
ANR	8331049	Statement	'('	1045:34:40237:40239	8330977	41	True				
ANR	8331050	Statement	","	1045:37:40240:40240	8330977	42	True				
ANR	8331051	Statement	's'	1045:39:40242:40244	8330977	43	True				
ANR	8331052	Statement	","	1045:42:40245:40245	8330977	44	True				
ANR	8331053	Statement	'W'	1045:44:40247:40249	8330977	45	True				
ANR	8331054	Statement	","	1045:47:40250:40250	8330977	46	True				
ANR	8331055	Statement	"""Character Data"""	1045:49:40252:40267	8330977	47	True				
ANR	8331056	Statement	","	1045:65:40268:40268	8330977	48	True				
ANR	8331057	Statement	pcl_character_data	1046:34:40304:40321	8330977	49	True				
ANR	8331058	Statement	","	1046:52:40322:40322	8330977	50	True				
ANR	8331059	Statement	pca_bytes	1046:54:40324:40332	8330977	51	True				
ANR	8331060	Statement	)	1046:63:40333:40333	8330977	52	True				
ANR	8331061	Statement	DEFINE_CLASS_COMMAND_ARGS	1047:8:40343:40367	8330977	53	True				
ANR	8331062	Statement	(	1047:33:40368:40368	8330977	54	True				
ANR	8331063	Statement	'&'	1047:34:40369:40371	8330977	55	True				
ANR	8331064	Statement	","	1047:37:40372:40372	8330977	56	True				
ANR	8331065	Statement	'n'	1047:39:40374:40376	8330977	57	True				
ANR	8331066	Statement	","	1047:42:40377:40377	8330977	58	True				
ANR	8331067	Statement	'W'	1047:44:40379:40381	8330977	59	True				
ANR	8331068	Statement	","	1047:47:40382:40382	8330977	60	True				
ANR	8331069	Statement	"""Alphanumeric ID Data"""	1047:49:40384:40405	8330977	61	True				
ANR	8331070	Statement	","	1047:71:40406:40406	8330977	62	True				
ANR	8331071	Statement	pcl_alphanumeric_id_data	1048:34:40442:40465	8330977	63	True				
ANR	8331072	Statement	","	1048:58:40466:40466	8330977	64	True				
ANR	8331073	Statement	pca_bytes	1048:60:40468:40476	8330977	65	True				
ANR	8331074	Statement	)	1048:69:40477:40477	8330977	66	True				
ANR	8331075	ReturnStatement	return 0 ;	1049:8:40487:40495	8330977	67	True				
ANR	8331076	PrimaryExpression	0		8330977	0					
ANR	8331077	ReturnType	static int		8330977	1					
ANR	8331078	Identifier	pcsfont_do_registration		8330977	2					
ANR	8331079	ParameterList	"pcl_parser_state_t * pcl_parser_state , gs_memory_t * mem"		8330977	3					
ANR	8331080	Parameter	pcl_parser_state_t * pcl_parser_state	1029:24:39442:39478	8330977	0	True				
ANR	8331081	ParameterType	pcl_parser_state_t *		8330977	0					
ANR	8331082	Identifier	pcl_parser_state		8330977	1					
ANR	8331083	Parameter	gs_memory_t * mem	1030:24:39505:39521	8330977	1	True				
ANR	8331084	ParameterType	gs_memory_t *		8330977	0					
ANR	8331085	Identifier	mem		8330977	1					
ANR	8331086	CFGEntryNode	ENTRY		8330977		True				
ANR	8331087	CFGExitNode	EXIT		8330977		True				
ANR	8331088	Symbol	mem		8330977						
ANR	8331089	Symbol	pcl_parser_state		8330977						
ANR	8331090	Function	pcsfont_do_reset	1051:0:40499:41337							
ANR	8331091	FunctionDef	"pcsfont_do_reset (pcl_state_t * pcs , pcl_reset_type_t type)"		8331090	0					
ANR	8331092	CompoundStatement		1053:0:40569:41337	8331090	0					
ANR	8331093	IfStatement	if ( type & ( pcl_reset_initial | pcl_reset_printer | pcl_reset_overlay ) )		8331090	0					
ANR	8331094	Condition	type & ( pcl_reset_initial | pcl_reset_printer | pcl_reset_overlay )	1054:8:40579:40644	8331090	0	True				
ANR	8331095	BitAndExpression	type & ( pcl_reset_initial | pcl_reset_printer | pcl_reset_overlay )		8331090	0		&			
ANR	8331096	Identifier	type		8331090	0					
ANR	8331097	InclusiveOrExpression	pcl_reset_initial | pcl_reset_printer | pcl_reset_overlay		8331090	1		|			
ANR	8331098	Identifier	pcl_reset_initial		8331090	0					
ANR	8331099	InclusiveOrExpression	pcl_reset_printer | pcl_reset_overlay		8331090	1		|			
ANR	8331100	Identifier	pcl_reset_printer		8331090	0					
ANR	8331101	Identifier	pcl_reset_overlay		8331090	1					
ANR	8331102	CompoundStatement		2:76:77:77	8331090	1					
ANR	8331103	ExpressionStatement	pcs -> soft_font_char_data = 0	1055:8:40657:40685	8331090	0	True				
ANR	8331104	AssignmentExpression	pcs -> soft_font_char_data = 0		8331090	0		=			
ANR	8331105	PtrMemberAccess	pcs -> soft_font_char_data		8331090	0					
ANR	8331106	Identifier	pcs		8331090	0					
ANR	8331107	Identifier	soft_font_char_data		8331090	1					
ANR	8331108	PrimaryExpression	0		8331090	1					
ANR	8331109	ExpressionStatement	pcs -> soft_font_count = 0	1056:8:40695:40719	8331090	1	True				
ANR	8331110	AssignmentExpression	pcs -> soft_font_count = 0		8331090	0		=			
ANR	8331111	PtrMemberAccess	pcs -> soft_font_count		8331090	0					
ANR	8331112	Identifier	pcs		8331090	0					
ANR	8331113	Identifier	soft_font_count		8331090	1					
ANR	8331114	PrimaryExpression	0		8331090	1					
ANR	8331115	ExpressionStatement	"id_set_value ( pcs -> font_id , 0 )"	1057:8:40729:40758	8331090	2	True				
ANR	8331116	CallExpression	"id_set_value ( pcs -> font_id , 0 )"		8331090	0					
ANR	8331117	Callee	id_set_value		8331090	0					
ANR	8331118	Identifier	id_set_value		8331090	0					
ANR	8331119	ArgumentList	pcs -> font_id		8331090	1					
ANR	8331120	Argument	pcs -> font_id		8331090	0					
ANR	8331121	PtrMemberAccess	pcs -> font_id		8331090	0					
ANR	8331122	Identifier	pcs		8331090	0					
ANR	8331123	Identifier	font_id		8331090	1					
ANR	8331124	Argument	0		8331090	1					
ANR	8331125	PrimaryExpression	0		8331090	0					
ANR	8331126	ExpressionStatement	pcs -> character_code = 0	1058:8:40768:40791	8331090	3	True				
ANR	8331127	AssignmentExpression	pcs -> character_code = 0		8331090	0		=			
ANR	8331128	PtrMemberAccess	pcs -> character_code		8331090	0					
ANR	8331129	Identifier	pcs		8331090	0					
ANR	8331130	Identifier	character_code		8331090	1					
ANR	8331131	PrimaryExpression	0		8331090	1					
ANR	8331132	ExpressionStatement	pcs -> font_id_type = numeric_id	1059:8:40801:40831	8331090	4	True				
ANR	8331133	AssignmentExpression	pcs -> font_id_type = numeric_id		8331090	0		=			
ANR	8331134	PtrMemberAccess	pcs -> font_id_type		8331090	0					
ANR	8331135	Identifier	pcs		8331090	0					
ANR	8331136	Identifier	font_id_type		8331090	1					
ANR	8331137	Identifier	numeric_id		8331090	1					
ANR	8331138	IfStatement	if ( ( type & pcl_reset_printer ) != 0 )		8331090	5					
ANR	8331139	Condition	( type & pcl_reset_printer ) != 0	1060:12:40845:40875	8331090	0	True				
ANR	8331140	EqualityExpression	( type & pcl_reset_printer ) != 0		8331090	0		!=			
ANR	8331141	BitAndExpression	type & pcl_reset_printer		8331090	0		&			
ANR	8331142	Identifier	type		8331090	0					
ANR	8331143	Identifier	pcl_reset_printer		8331090	1					
ANR	8331144	PrimaryExpression	0		8331090	1					
ANR	8331145	CompoundStatement		10:12:348:363	8331090	1					
ANR	8331146	IdentifierDeclStatement	int code = 0 ;	1061:12:40892:40904	8331090	0	True				
ANR	8331147	IdentifierDecl	code = 0		8331090	0					
ANR	8331148	IdentifierDeclType	int		8331090	0					
ANR	8331149	Identifier	code		8331090	1					
ANR	8331150	AssignmentExpression	code = 0		8331090	2		=			
ANR	8331151	Identifier	code		8331090	0					
ANR	8331152	PrimaryExpression	0		8331090	1					
ANR	8331153	IdentifierDeclStatement	pcl_args_t args ;	1062:12:40918:40933	8331090	1	True				
ANR	8331154	IdentifierDecl	args		8331090	0					
ANR	8331155	IdentifierDeclType	pcl_args_t		8331090	0					
ANR	8331156	Identifier	args		8331090	1					
ANR	8331157	ExpressionStatement	"arg_set_uint ( & args , 1 )"	1064:12:40948:40970	8331090	2	True				
ANR	8331158	CallExpression	"arg_set_uint ( & args , 1 )"		8331090	0					
ANR	8331159	Callee	arg_set_uint		8331090	0					
ANR	8331160	Identifier	arg_set_uint		8331090	0					
ANR	8331161	ArgumentList	& args		8331090	1					
ANR	8331162	Argument	& args		8331090	0					
ANR	8331163	UnaryOperationExpression	& args		8331090	0					
ANR	8331164	UnaryOperator	&		8331090	0					
ANR	8331165	Identifier	args		8331090	1					
ANR	8331166	Argument	1		8331090	1					
ANR	8331167	PrimaryExpression	1		8331090	0					
ANR	8331168	ExpressionStatement	"code = pcl_font_control ( & args , pcs )"	1065:12:41017:41052	8331090	3	True				
ANR	8331169	AssignmentExpression	"code = pcl_font_control ( & args , pcs )"		8331090	0		=			
ANR	8331170	Identifier	code		8331090	0					
ANR	8331171	CallExpression	"pcl_font_control ( & args , pcs )"		8331090	1					
ANR	8331172	Callee	pcl_font_control		8331090	0					
ANR	8331173	Identifier	pcl_font_control		8331090	0					
ANR	8331174	ArgumentList	& args		8331090	1					
ANR	8331175	Argument	& args		8331090	0					
ANR	8331176	UnaryOperationExpression	& args		8331090	0					
ANR	8331177	UnaryOperator	&		8331090	0					
ANR	8331178	Identifier	args		8331090	1					
ANR	8331179	Argument	pcs		8331090	1					
ANR	8331180	Identifier	pcs		8331090	0					
ANR	8331181	IfStatement	if ( pcs -> alpha_font_id . id != 0 )		8331090	4					
ANR	8331182	Condition	pcs -> alpha_font_id . id != 0	1066:16:41070:41095	8331090	0	True				
ANR	8331183	EqualityExpression	pcs -> alpha_font_id . id != 0		8331090	0		!=			
ANR	8331184	MemberAccess	pcs -> alpha_font_id . id		8331090	0					
ANR	8331185	PtrMemberAccess	pcs -> alpha_font_id		8331090	0					
ANR	8331186	Identifier	pcs		8331090	0					
ANR	8331187	Identifier	alpha_font_id		8331090	1					
ANR	8331188	Identifier	id		8331090	1					
ANR	8331189	PrimaryExpression	0		8331090	1					
ANR	8331190	ExpressionStatement	"gs_free_object ( pcs -> memory , pcs -> alpha_font_id . id , ""pcsfont_do_reset"" )"	1067:16:41114:41215	8331090	1	True				
ANR	8331191	CallExpression	"gs_free_object ( pcs -> memory , pcs -> alpha_font_id . id , ""pcsfont_do_reset"" )"		8331090	0					
ANR	8331192	Callee	gs_free_object		8331090	0					
ANR	8331193	Identifier	gs_free_object		8331090	0					
ANR	8331194	ArgumentList	pcs -> memory		8331090	1					
ANR	8331195	Argument	pcs -> memory		8331090	0					
ANR	8331196	PtrMemberAccess	pcs -> memory		8331090	0					
ANR	8331197	Identifier	pcs		8331090	0					
ANR	8331198	Identifier	memory		8331090	1					
ANR	8331199	Argument	pcs -> alpha_font_id . id		8331090	1					
ANR	8331200	MemberAccess	pcs -> alpha_font_id . id		8331090	0					
ANR	8331201	PtrMemberAccess	pcs -> alpha_font_id		8331090	0					
ANR	8331202	Identifier	pcs		8331090	0					
ANR	8331203	Identifier	alpha_font_id		8331090	1					
ANR	8331204	Identifier	id		8331090	1					
ANR	8331205	Argument	"""pcsfont_do_reset"""		8331090	2					
ANR	8331206	PrimaryExpression	"""pcsfont_do_reset"""		8331090	0					
ANR	8331207	IfStatement	if ( code < 0 )		8331090	5					
ANR	8331208	Condition	code < 0	1069:16:41233:41240	8331090	0	True				
ANR	8331209	RelationalExpression	code < 0		8331090	0		<			
ANR	8331210	Identifier	code		8331090	0					
ANR	8331211	PrimaryExpression	0		8331090	1					
ANR	8331212	ReturnStatement	return code ;	1070:16:41259:41270	8331090	1	True				
ANR	8331213	Identifier	code		8331090	0					
ANR	8331214	ExpressionStatement	pcs -> alpha_font_id . id = 0	1072:8:41290:41315	8331090	6	True				
ANR	8331215	AssignmentExpression	pcs -> alpha_font_id . id = 0		8331090	0		=			
ANR	8331216	MemberAccess	pcs -> alpha_font_id . id		8331090	0					
ANR	8331217	PtrMemberAccess	pcs -> alpha_font_id		8331090	0					
ANR	8331218	Identifier	pcs		8331090	0					
ANR	8331219	Identifier	alpha_font_id		8331090	1					
ANR	8331220	Identifier	id		8331090	1					
ANR	8331221	PrimaryExpression	0		8331090	1					
ANR	8331222	ReturnStatement	return 0 ;	1074:4:41327:41335	8331090	1	True				
ANR	8331223	PrimaryExpression	0		8331090	0					
ANR	8331224	ReturnType	static int		8331090	1					
ANR	8331225	Identifier	pcsfont_do_reset		8331090	2					
ANR	8331226	ParameterList	"pcl_state_t * pcs , pcl_reset_type_t type"		8331090	3					
ANR	8331227	Parameter	pcl_state_t * pcs	1052:17:40527:40543	8331090	0	True				
ANR	8331228	ParameterType	pcl_state_t *		8331090	0					
ANR	8331229	Identifier	pcs		8331090	1					
ANR	8331230	Parameter	pcl_reset_type_t type	1052:36:40546:40566	8331090	1	True				
ANR	8331231	ParameterType	pcl_reset_type_t		8331090	0					
ANR	8331232	Identifier	type		8331090	1					
ANR	8331233	CFGEntryNode	ENTRY		8331090		True				
ANR	8331234	CFGExitNode	EXIT		8331090		True				
ANR	8331235	Symbol	pcs		8331090						
ANR	8331236	Symbol	pcs -> font_id_type		8331090						
ANR	8331237	Symbol	pcs -> alpha_font_id		8331090						
ANR	8331238	Symbol	code		8331090						
ANR	8331239	Symbol	numeric_id		8331090						
ANR	8331240	Symbol	pcs -> soft_font_count		8331090						
ANR	8331241	Symbol	pcl_reset_printer		8331090						
ANR	8331242	Symbol	* pcs		8331090						
ANR	8331243	Symbol	type		8331090						
ANR	8331244	Symbol	args		8331090						
ANR	8331245	Symbol	pcs -> alpha_font_id . id		8331090						
ANR	8331246	Symbol	pcs -> character_code		8331090						
ANR	8331247	Symbol	pcl_font_control		8331090						
ANR	8331248	Symbol	pcl_reset_overlay		8331090						
ANR	8331249	Symbol	pcs -> soft_font_char_data		8331090						
ANR	8331250	Symbol	pcs -> memory		8331090						
ANR	8331251	Symbol	pcl_reset_initial		8331090						
ANR	8331252	Symbol	pcs -> font_id		8331090						
ANR	8331253	Symbol	& args		8331090						
ANR	8331254	Function	pcsfont_do_copy	1076:0:41339:41662							
ANR	8331255	FunctionDef	"pcsfont_do_copy (pcl_state_t * psaved , const pcl_state_t * pcs , pcl_copy_operation_t operation)"		8331254	0					
ANR	8331256	CompoundStatement		1079:0:41461:41662	8331254	0					
ANR	8331257	IfStatement	if ( operation & pcl_copy_after )		8331254	0					
ANR	8331258	Condition	operation & pcl_copy_after	1080:8:41471:41496	8331254	0	True				
ANR	8331259	BitAndExpression	operation & pcl_copy_after		8331254	0		&			
ANR	8331260	Identifier	operation		8331254	0					
ANR	8331261	Identifier	pcl_copy_after		8331254	1					
ANR	8331262	CompoundStatement		2:36:37:37	8331254	1					
ANR	8331263	ExpressionStatement	psaved -> soft_fonts = pcs -> soft_fonts	1081:8:41550:41586	8331254	0	True				
ANR	8331264	AssignmentExpression	psaved -> soft_fonts = pcs -> soft_fonts		8331254	0		=			
ANR	8331265	PtrMemberAccess	psaved -> soft_fonts		8331254	0					
ANR	8331266	Identifier	psaved		8331254	0					
ANR	8331267	Identifier	soft_fonts		8331254	1					
ANR	8331268	PtrMemberAccess	pcs -> soft_fonts		8331254	1					
ANR	8331269	Identifier	pcs		8331254	0					
ANR	8331270	Identifier	soft_fonts		8331254	1					
ANR	8331271	ExpressionStatement	psaved -> built_in_fonts = pcs -> built_in_fonts	1082:8:41596:41640	8331254	1	True				
ANR	8331272	AssignmentExpression	psaved -> built_in_fonts = pcs -> built_in_fonts		8331254	0		=			
ANR	8331273	PtrMemberAccess	psaved -> built_in_fonts		8331254	0					
ANR	8331274	Identifier	psaved		8331254	0					
ANR	8331275	Identifier	built_in_fonts		8331254	1					
ANR	8331276	PtrMemberAccess	pcs -> built_in_fonts		8331254	1					
ANR	8331277	Identifier	pcs		8331254	0					
ANR	8331278	Identifier	built_in_fonts		8331254	1					
ANR	8331279	ReturnStatement	return 0 ;	1084:4:41652:41660	8331254	1	True				
ANR	8331280	PrimaryExpression	0		8331254	0					
ANR	8331281	ReturnType	static int		8331254	1					
ANR	8331282	Identifier	pcsfont_do_copy		8331254	2					
ANR	8331283	ParameterList	"pcl_state_t * psaved , const pcl_state_t * pcs , pcl_copy_operation_t operation"		8331254	3					
ANR	8331284	Parameter	pcl_state_t * psaved	1077:16:41366:41385	8331254	0	True				
ANR	8331285	ParameterType	pcl_state_t *		8331254	0					
ANR	8331286	Identifier	psaved		8331254	1					
ANR	8331287	Parameter	const pcl_state_t * pcs	1077:38:41388:41410	8331254	1	True				
ANR	8331288	ParameterType	const pcl_state_t *		8331254	0					
ANR	8331289	Identifier	pcs		8331254	1					
ANR	8331290	Parameter	pcl_copy_operation_t operation	1078:16:41429:41458	8331254	2	True				
ANR	8331291	ParameterType	pcl_copy_operation_t		8331254	0					
ANR	8331292	Identifier	operation		8331254	1					
ANR	8331293	CFGEntryNode	ENTRY		8331254		True				
ANR	8331294	CFGExitNode	EXIT		8331254		True				
ANR	8331295	Symbol	pcs		8331254						
ANR	8331296	Symbol	pcs -> built_in_fonts		8331254						
ANR	8331297	Symbol	pcs -> soft_fonts		8331254						
ANR	8331298	Symbol	* psaved		8331254						
ANR	8331299	Symbol	psaved		8331254						
ANR	8331300	Symbol	pcl_copy_after		8331254						
ANR	8331301	Symbol	psaved -> soft_fonts		8331254						
ANR	8331302	Symbol	psaved -> built_in_fonts		8331254						
ANR	8331303	Symbol	* pcs		8331254						
ANR	8331304	Symbol	operation		8331254						
ANR	8331305	DeclStmt									
ANR	8331306	Decl							const pcl_init_t	const pcl_init_t	pcsfont_init
