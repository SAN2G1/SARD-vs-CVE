command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8459337	File	data/converged/CVE-2018-16863_ghostpdl/plmain.c								
ANR	8459338	DeclStmt									
ANR	8459339	Decl							extern pl_interp_implementation_t	extern pl_interp_implementation_t * [ ]	pdl_implementations
ANR	8459340	DeclStmt									
ANR	8459341	Decl							const char	const char *	pl_usage
ANR	8459342	ClassDef	pl_main_instance_s	85:0:2464:3987							
ANR	8459343	DeclStmt									
ANR	8459344	Decl							gs_memory_t	gs_memory_t *	memory
ANR	8459345	DeclStmt									
ANR	8459346	Decl							long	long [ 2 ]	base_time
ANR	8459347	DeclStmt									
ANR	8459348	Decl							int	int	error_report
ANR	8459349	DeclStmt									
ANR	8459350	Decl							bool	bool	pause
ANR	8459351	DeclStmt									
ANR	8459352	Decl							int	int	first_page
ANR	8459353	DeclStmt									
ANR	8459354	Decl							int	int	last_page
ANR	8459355	DeclStmt									
ANR	8459356	Decl							gx_device	gx_device *	device
ANR	8459357	DeclStmt									
ANR	8459358	Decl							pl_interp_implementation_t	pl_interp_implementation_t *	implementation
ANR	8459359	DeclStmt									
ANR	8459360	Decl							char	char [ 6 ]	pcl_personality
ANR	8459361	DeclStmt									
ANR	8459362	Decl							bool	bool	interpolate
ANR	8459363	DeclStmt									
ANR	8459364	Decl							bool	bool	nocache
ANR	8459365	DeclStmt									
ANR	8459366	Decl							bool	bool	page_set_on_command_line
ANR	8459367	DeclStmt									
ANR	8459368	Decl							bool	bool	res_set_on_command_line
ANR	8459369	DeclStmt									
ANR	8459370	Decl							bool	bool	high_level_device
ANR	8459371	DeclStmt									
ANR	8459372	Decl							bool	bool	saved_pages_test_mode
ANR	8459373	DeclStmt									
ANR	8459374	Decl							bool	bool	pjl_from_args
ANR	8459375	DeclStmt									
ANR	8459376	Decl							int	int	scanconverter
ANR	8459377	DeclStmt									
ANR	8459378	Decl							char	char *	piccdir
ANR	8459379	DeclStmt									
ANR	8459380	Decl							char	char *	pdefault_gray_icc
ANR	8459381	DeclStmt									
ANR	8459382	Decl							char	char *	pdefault_rgb_icc
ANR	8459383	DeclStmt									
ANR	8459384	Decl							char	char *	pdefault_cmyk_icc
ANR	8459385	DeclStmt									
ANR	8459386	Decl							gs_c_param_list	gs_c_param_list	params
ANR	8459387	DeclStmt									
ANR	8459388	Decl							arg_list	arg_list	args
ANR	8459389	DeclStmt									
ANR	8459390	Decl							pl_interp_implementation_t	pl_interp_implementation_t * *	implementations
ANR	8459391	DeclStmt									
ANR	8459392	Decl							pl_interp_implementation_t	pl_interp_implementation_t *	curr_implementation
ANR	8459393	DeclStmt									
ANR	8459394	Decl							pl_interp_implementation_t	pl_interp_implementation_t *	desired_implementation
ANR	8459395	DeclStmt									
ANR	8459396	Decl							byte	byte [ 8192 ]	buf
ANR	8459397	DeclStmt									
ANR	8459398	Decl							void	void *	disp
ANR	8459399	DeclStmt									
ANR	8459400	Decl							gs_gc_root_t	gs_gc_root_t	device_root
ANR	8459401	DeclStmt									
ANR	8459402	Decl							int	"int ( gs_memory_t * mem , pl_main_instance_t * inst )"	pl_main_languages_init
ANR	8459403	DeclStmt									
ANR	8459404	Decl							pl_interp_implementation_t	"pl_interp_implementation_t * ( pl_interp_implementation_t * pjl_instance , pl_main_instance_t * pmi , pl_top_cursor_t r )"	pl_select_implementation
ANR	8459405	DeclStmt									
ANR	8459406	Decl							FILE	"FILE * ( const char * fname , void * ignore_data )"	pl_main_arg_fopen
ANR	8459407	DeclStmt									
ANR	8459408	Decl							int	"int ( pl_main_instance_t * pmi , arg_list * pal , pl_interp_implementation_t * pjl_instance )"	pl_main_process_options
ANR	8459409	DeclStmt									
ANR	8459410	Decl							pl_interp_implementation_t	"pl_interp_implementation_t * ( pl_main_instance_t * pmi , pl_interp_implementation_t * pjl_instance )"	pl_pjl_select
ANR	8459411	Function	get_device_index	151:0:4989:5417							
ANR	8459412	FunctionDef	"get_device_index (const gs_memory_t * mem , const char * value)"		8459411	0					
ANR	8459413	CompoundStatement		153:0:5068:5417	8459411	0					
ANR	8459414	Statement	const	154:4:5074:5078	8459411	0	True				
ANR	8459415	Statement	gx_device	154:10:5080:5088	8459411	1	True				
ANR	8459416	Statement	*	154:20:5090:5090	8459411	2	True				
ANR	8459417	Statement	const	154:21:5091:5095	8459411	3	True				
ANR	8459418	ExpressionStatement	* dev_list	154:27:5097:5106	8459411	4	True				
ANR	8459419	UnaryOperationExpression	* dev_list		8459411	0					
ANR	8459420	UnaryOperator	*		8459411	0					
ANR	8459421	Identifier	dev_list		8459411	1					
ANR	8459422	IdentifierDeclStatement	"int num_devs = gs_lib_device_list ( & dev_list , NULL ) ;"	155:4:5112:5162	8459411	5	True				
ANR	8459423	IdentifierDecl	"num_devs = gs_lib_device_list ( & dev_list , NULL )"		8459411	0					
ANR	8459424	IdentifierDeclType	int		8459411	0					
ANR	8459425	Identifier	num_devs		8459411	1					
ANR	8459426	AssignmentExpression	"num_devs = gs_lib_device_list ( & dev_list , NULL )"		8459411	2		=			
ANR	8459427	Identifier	num_devs		8459411	0					
ANR	8459428	CallExpression	"gs_lib_device_list ( & dev_list , NULL )"		8459411	1					
ANR	8459429	Callee	gs_lib_device_list		8459411	0					
ANR	8459430	Identifier	gs_lib_device_list		8459411	0					
ANR	8459431	ArgumentList	& dev_list		8459411	1					
ANR	8459432	Argument	& dev_list		8459411	0					
ANR	8459433	UnaryOperationExpression	& dev_list		8459411	0					
ANR	8459434	UnaryOperator	&		8459411	0					
ANR	8459435	Identifier	dev_list		8459411	1					
ANR	8459436	Argument	NULL		8459411	1					
ANR	8459437	Identifier	NULL		8459411	0					
ANR	8459438	IdentifierDeclStatement	int di ;	156:4:5168:5174	8459411	6	True				
ANR	8459439	IdentifierDecl	di		8459411	0					
ANR	8459440	IdentifierDeclType	int		8459411	0					
ANR	8459441	Identifier	di		8459411	1					
ANR	8459442	ForStatement	for ( di = 0 ; di < num_devs ; ++ di )		8459411	7					
ANR	8459443	ForInit	di = 0 ;	158:9:5186:5192	8459411	0	True				
ANR	8459444	AssignmentExpression	di = 0		8459411	0		=			
ANR	8459445	Identifier	di		8459411	0					
ANR	8459446	PrimaryExpression	0		8459411	1					
ANR	8459447	Condition	di < num_devs	158:17:5194:5206	8459411	1	True				
ANR	8459448	RelationalExpression	di < num_devs		8459411	0		<			
ANR	8459449	Identifier	di		8459411	0					
ANR	8459450	Identifier	num_devs		8459411	1					
ANR	8459451	UnaryExpression	++ di	158:32:5209:5212	8459411	2	True				
ANR	8459452	IncDec	++		8459411	0					
ANR	8459453	Identifier	di		8459411	1					
ANR	8459454	IfStatement	"if ( ! strcmp ( gs_devicename ( dev_list [ di ] ) , value ) )"		8459411	3					
ANR	8459455	Condition	"! strcmp ( gs_devicename ( dev_list [ di ] ) , value )"	159:12:5227:5269	8459411	0	True				
ANR	8459456	UnaryOperationExpression	"! strcmp ( gs_devicename ( dev_list [ di ] ) , value )"		8459411	0					
ANR	8459457	UnaryOperator	!		8459411	0					
ANR	8459458	CallExpression	"strcmp ( gs_devicename ( dev_list [ di ] ) , value )"		8459411	1					
ANR	8459459	Callee	strcmp		8459411	0					
ANR	8459460	Identifier	strcmp		8459411	0					
ANR	8459461	ArgumentList	gs_devicename ( dev_list [ di ] )		8459411	1					
ANR	8459462	Argument	gs_devicename ( dev_list [ di ] )		8459411	0					
ANR	8459463	CallExpression	gs_devicename ( dev_list [ di ] )		8459411	0					
ANR	8459464	Callee	gs_devicename		8459411	0					
ANR	8459465	Identifier	gs_devicename		8459411	0					
ANR	8459466	ArgumentList	dev_list [ di ]		8459411	1					
ANR	8459467	Argument	dev_list [ di ]		8459411	0					
ANR	8459468	ArrayIndexing	dev_list [ di ]		8459411	0					
ANR	8459469	Identifier	dev_list		8459411	0					
ANR	8459470	Identifier	di		8459411	1					
ANR	8459471	Argument	value		8459411	1					
ANR	8459472	Identifier	value		8459411	0					
ANR	8459473	BreakStatement	break ;	160:12:5284:5289	8459411	1	True				
ANR	8459474	IfStatement	if ( di == num_devs )		8459411	8					
ANR	8459475	Condition	di == num_devs	161:8:5299:5312	8459411	0	True				
ANR	8459476	EqualityExpression	di == num_devs		8459411	0		==			
ANR	8459477	Identifier	di		8459411	0					
ANR	8459478	Identifier	num_devs		8459411	1					
ANR	8459479	CompoundStatement		9:24:246:246	8459411	1					
ANR	8459480	ExpressionStatement	"errprintf ( mem , ""Unknown device name %s.\\n"" , value )"	162:8:5325:5375	8459411	0	True				
ANR	8459481	CallExpression	"errprintf ( mem , ""Unknown device name %s.\\n"" , value )"		8459411	0					
ANR	8459482	Callee	errprintf		8459411	0					
ANR	8459483	Identifier	errprintf		8459411	0					
ANR	8459484	ArgumentList	mem		8459411	1					
ANR	8459485	Argument	mem		8459411	0					
ANR	8459486	Identifier	mem		8459411	0					
ANR	8459487	Argument	"""Unknown device name %s.\\n"""		8459411	1					
ANR	8459488	PrimaryExpression	"""Unknown device name %s.\\n"""		8459411	0					
ANR	8459489	Argument	value		8459411	2					
ANR	8459490	Identifier	value		8459411	0					
ANR	8459491	ReturnStatement	return - 1 ;	163:8:5385:5394	8459411	1	True				
ANR	8459492	UnaryOperationExpression	- 1		8459411	0					
ANR	8459493	UnaryOperator	-		8459411	0					
ANR	8459494	PrimaryExpression	1		8459411	1					
ANR	8459495	ReturnStatement	return di ;	165:4:5406:5415	8459411	9	True				
ANR	8459496	Identifier	di		8459411	0					
ANR	8459497	ReturnType	static inline int		8459411	1					
ANR	8459498	Identifier	get_device_index		8459411	2					
ANR	8459499	ParameterList	"const gs_memory_t * mem , const char * value"		8459411	3					
ANR	8459500	Parameter	const gs_memory_t * mem	152:17:5024:5046	8459411	0	True				
ANR	8459501	ParameterType	const gs_memory_t *		8459411	0					
ANR	8459502	Identifier	mem		8459411	1					
ANR	8459503	Parameter	const char * value	152:42:5049:5065	8459411	1	True				
ANR	8459504	ParameterType	const char *		8459411	0					
ANR	8459505	Identifier	value		8459411	1					
ANR	8459506	CFGEntryNode	ENTRY		8459411		True				
ANR	8459507	CFGExitNode	EXIT		8459411		True				
ANR	8459508	Symbol	* dev_list		8459411						
ANR	8459509	Symbol	strcmp		8459411						
ANR	8459510	Symbol	num_devs		8459411						
ANR	8459511	Symbol	NULL		8459411						
ANR	8459512	Symbol	mem		8459411						
ANR	8459513	Symbol	di		8459411						
ANR	8459514	Symbol	* di		8459411						
ANR	8459515	Symbol	& dev_list		8459411						
ANR	8459516	Symbol	gs_devicename		8459411						
ANR	8459517	Symbol	dev_list		8459411						
ANR	8459518	Symbol	value		8459411						
ANR	8459519	Symbol	gs_lib_device_list		8459411						
ANR	8459520	Function	pl_main_set_display_callback	168:0:5420:5538							
ANR	8459521	FunctionDef	"pl_main_set_display_callback (pl_main_instance_t * inst , void * callback)"		8459520	0					
ANR	8459522	CompoundStatement		170:0:5495:5538	8459520	0					
ANR	8459523	ExpressionStatement	inst -> disp = callback	171:4:5501:5522	8459520	0	True				
ANR	8459524	AssignmentExpression	inst -> disp = callback		8459520	0		=			
ANR	8459525	PtrMemberAccess	inst -> disp		8459520	0					
ANR	8459526	Identifier	inst		8459520	0					
ANR	8459527	Identifier	disp		8459520	1					
ANR	8459528	Identifier	callback		8459520	1					
ANR	8459529	ReturnStatement	return 0 ;	172:4:5528:5536	8459520	1	True				
ANR	8459530	PrimaryExpression	0		8459520	0					
ANR	8459531	ReturnType	int		8459520	1					
ANR	8459532	Identifier	pl_main_set_display_callback		8459520	2					
ANR	8459533	ParameterList	"pl_main_instance_t * inst , void * callback"		8459520	3					
ANR	8459534	Parameter	pl_main_instance_t * inst	169:29:5453:5476	8459520	0	True				
ANR	8459535	ParameterType	pl_main_instance_t *		8459520	0					
ANR	8459536	Identifier	inst		8459520	1					
ANR	8459537	Parameter	void * callback	169:55:5479:5492	8459520	1	True				
ANR	8459538	ParameterType	void *		8459520	0					
ANR	8459539	Identifier	callback		8459520	1					
ANR	8459540	CFGEntryNode	ENTRY		8459520		True				
ANR	8459541	CFGExitNode	EXIT		8459520		True				
ANR	8459542	Symbol	* inst		8459520						
ANR	8459543	Symbol	inst		8459520						
ANR	8459544	Symbol	callback		8459520						
ANR	8459545	Symbol	inst -> disp		8459520						
ANR	8459546	Function	pl_main_init_with_args	175:0:5541:8318							
ANR	8459547	FunctionDef	"pl_main_init_with_args (pl_main_instance_t * inst , int argc , char * argv [ ])"		8459546	0					
ANR	8459548	CompoundStatement		177:0:5618:8318	8459546	0					
ANR	8459549	IdentifierDeclStatement	gs_memory_t * mem = inst -> memory ;	178:4:5624:5655	8459546	0	True				
ANR	8459550	IdentifierDecl	* mem = inst -> memory		8459546	0					
ANR	8459551	IdentifierDeclType	gs_memory_t *		8459546	0					
ANR	8459552	Identifier	mem		8459546	1					
ANR	8459553	AssignmentExpression	* mem = inst -> memory		8459546	2		=			
ANR	8459554	Identifier	mem		8459546	0					
ANR	8459555	PtrMemberAccess	inst -> memory		8459546	1					
ANR	8459556	Identifier	inst		8459546	0					
ANR	8459557	Identifier	memory		8459546	1					
ANR	8459558	IdentifierDeclStatement	"int ( * arg_get_codepoint ) ( FILE * file , const char * * astr ) = NULL ;"	179:4:5661:5725	8459546	1	True				
ANR	8459559	IdentifierDecl	"( * arg_get_codepoint ) ( FILE * file , const char * * astr ) = NULL"		8459546	0					
ANR	8459560	IdentifierDeclType	"int ( * ) ( FILE * file , const char * * astr )"		8459546	0					
ANR	8459561	Identifier	arg_get_codepoint		8459546	1					
ANR	8459562	Identifier	file		8459546	2					
ANR	8459563	Identifier	astr		8459546	3					
ANR	8459564	AssignmentExpression	"( * arg_get_codepoint ) ( FILE * file , const char * * astr ) = NULL"		8459546	4		=			
ANR	8459565	Identifier	NULL		8459546	0					
ANR	8459566	Identifier	NULL		8459546	1					
ANR	8459567	IdentifierDeclStatement	pl_interp_implementation_t * pjli ;	180:4:5731:5763	8459546	2	True				
ANR	8459568	IdentifierDecl	* pjli		8459546	0					
ANR	8459569	IdentifierDeclType	pl_interp_implementation_t *		8459546	0					
ANR	8459570	Identifier	pjli		8459546	1					
ANR	8459571	ExpressionStatement	gp_init ( )	182:4:5774:5783	8459546	3	True				
ANR	8459572	CallExpression	gp_init ( )		8459546	0					
ANR	8459573	Callee	gp_init		8459546	0					
ANR	8459574	Identifier	gp_init		8459546	0					
ANR	8459575	ArgumentList			8459546	1					
ANR	8459576	ExpressionStatement	"VALGRIND_HG_DISABLE_CHECKING ( gs_debug , 128 )"	187:4:6017:6060	8459546	4	True				
ANR	8459577	CallExpression	"VALGRIND_HG_DISABLE_CHECKING ( gs_debug , 128 )"		8459546	0					
ANR	8459578	Callee	VALGRIND_HG_DISABLE_CHECKING		8459546	0					
ANR	8459579	Identifier	VALGRIND_HG_DISABLE_CHECKING		8459546	0					
ANR	8459580	ArgumentList	gs_debug		8459546	1					
ANR	8459581	Argument	gs_debug		8459546	0					
ANR	8459582	Identifier	gs_debug		8459546	0					
ANR	8459583	Argument	128		8459546	1					
ANR	8459584	PrimaryExpression	128		8459546	0					
ANR	8459585	ExpressionStatement	"memset ( gs_debug , 0 , 128 )"	189:4:6073:6097	8459546	5	True				
ANR	8459586	CallExpression	"memset ( gs_debug , 0 , 128 )"		8459546	0					
ANR	8459587	Callee	memset		8459546	0					
ANR	8459588	Identifier	memset		8459546	0					
ANR	8459589	ArgumentList	gs_debug		8459546	1					
ANR	8459590	Argument	gs_debug		8459546	0					
ANR	8459591	Identifier	gs_debug		8459546	0					
ANR	8459592	Argument	0		8459546	1					
ANR	8459593	PrimaryExpression	0		8459546	0					
ANR	8459594	Argument	128		8459546	2					
ANR	8459595	PrimaryExpression	128		8459546	0					
ANR	8459596	ExpressionStatement	gs_log_errors = 0	190:4:6103:6120	8459546	6	True				
ANR	8459597	AssignmentExpression	gs_log_errors = 0		8459546	0		=			
ANR	8459598	Identifier	gs_log_errors		8459546	0					
ANR	8459599	PrimaryExpression	0		8459546	1					
ANR	8459600	IfStatement	if ( gs_lib_init1 ( mem ) < 0 )		8459546	7					
ANR	8459601	Condition	gs_lib_init1 ( mem ) < 0	192:8:6131:6151	8459546	0	True				
ANR	8459602	RelationalExpression	gs_lib_init1 ( mem ) < 0		8459546	0		<			
ANR	8459603	CallExpression	gs_lib_init1 ( mem )		8459546	0					
ANR	8459604	Callee	gs_lib_init1		8459546	0					
ANR	8459605	Identifier	gs_lib_init1		8459546	0					
ANR	8459606	ArgumentList	mem		8459546	1					
ANR	8459607	Argument	mem		8459546	0					
ANR	8459608	Identifier	mem		8459546	0					
ANR	8459609	PrimaryExpression	0		8459546	1					
ANR	8459610	ReturnStatement	return - 1 ;	193:8:6162:6171	8459546	1	True				
ANR	8459611	UnaryOperationExpression	- 1		8459546	0					
ANR	8459612	UnaryOperator	-		8459546	0					
ANR	8459613	PrimaryExpression	1		8459546	1					
ANR	8459614	CompoundStatement		19:4:559:559	8459546	8					
ANR	8459615	IfStatement	if ( gs_iodev_init ( mem ) < 0 )		8459546	0					
ANR	8459616	Condition	gs_iodev_init ( mem ) < 0	203:12:6442:6463	8459546	0	True				
ANR	8459617	RelationalExpression	gs_iodev_init ( mem ) < 0		8459546	0		<			
ANR	8459618	CallExpression	gs_iodev_init ( mem )		8459546	0					
ANR	8459619	Callee	gs_iodev_init		8459546	0					
ANR	8459620	Identifier	gs_iodev_init		8459546	0					
ANR	8459621	ArgumentList	mem		8459546	1					
ANR	8459622	Argument	mem		8459546	0					
ANR	8459623	Identifier	mem		8459546	0					
ANR	8459624	PrimaryExpression	0		8459546	1					
ANR	8459625	ReturnStatement	return gs_error_Fatal ;	204:12:6478:6499	8459546	1	True				
ANR	8459626	Identifier	gs_error_Fatal		8459546	0					
ANR	8459627	ExpressionStatement	gp_get_realtime ( inst -> base_time )	207:4:6516:6548	8459546	9	True				
ANR	8459628	CallExpression	gp_get_realtime ( inst -> base_time )		8459546	0					
ANR	8459629	Callee	gp_get_realtime		8459546	0					
ANR	8459630	Identifier	gp_get_realtime		8459546	0					
ANR	8459631	ArgumentList	inst -> base_time		8459546	1					
ANR	8459632	Argument	inst -> base_time		8459546	0					
ANR	8459633	PtrMemberAccess	inst -> base_time		8459546	0					
ANR	8459634	Identifier	inst		8459546	0					
ANR	8459635	Identifier	base_time		8459546	1					
ANR	8459636	ExpressionStatement	"gs_c_param_list_write ( & inst -> params , mem )"	208:4:6554:6595	8459546	10	True				
ANR	8459637	CallExpression	"gs_c_param_list_write ( & inst -> params , mem )"		8459546	0					
ANR	8459638	Callee	gs_c_param_list_write		8459546	0					
ANR	8459639	Identifier	gs_c_param_list_write		8459546	0					
ANR	8459640	ArgumentList	& inst -> params		8459546	1					
ANR	8459641	Argument	& inst -> params		8459546	0					
ANR	8459642	UnaryOperationExpression	& inst -> params		8459546	0					
ANR	8459643	UnaryOperator	&		8459546	0					
ANR	8459644	PtrMemberAccess	inst -> params		8459546	1					
ANR	8459645	Identifier	inst		8459546	0					
ANR	8459646	Identifier	params		8459546	1					
ANR	8459647	Argument	mem		8459546	1					
ANR	8459648	Identifier	mem		8459546	0					
ANR	8459649	ExpressionStatement	"gs_param_list_set_persistent_keys ( ( gs_param_list * ) & inst -> params , false )"	209:4:6601:6673	8459546	11	True				
ANR	8459650	CallExpression	"gs_param_list_set_persistent_keys ( ( gs_param_list * ) & inst -> params , false )"		8459546	0					
ANR	8459651	Callee	gs_param_list_set_persistent_keys		8459546	0					
ANR	8459652	Identifier	gs_param_list_set_persistent_keys		8459546	0					
ANR	8459653	ArgumentList	( gs_param_list * ) & inst -> params		8459546	1					
ANR	8459654	Argument	( gs_param_list * ) & inst -> params		8459546	0					
ANR	8459655	CastExpression	( gs_param_list * ) & inst -> params		8459546	0					
ANR	8459656	CastTarget	gs_param_list *		8459546	0					
ANR	8459657	UnaryOperationExpression	& inst -> params		8459546	1					
ANR	8459658	UnaryOperator	&		8459546	0					
ANR	8459659	PtrMemberAccess	inst -> params		8459546	1					
ANR	8459660	Identifier	inst		8459546	0					
ANR	8459661	Identifier	params		8459546	1					
ANR	8459662	Argument	false		8459546	1					
ANR	8459663	Identifier	false		8459546	0					
ANR	8459664	ExpressionStatement	arg_get_codepoint = gp_local_arg_encoding_get_codepoint	212:4:6726:6781	8459546	12	True				
ANR	8459665	AssignmentExpression	arg_get_codepoint = gp_local_arg_encoding_get_codepoint		8459546	0		=			
ANR	8459666	Identifier	arg_get_codepoint		8459546	0					
ANR	8459667	Identifier	gp_local_arg_encoding_get_codepoint		8459546	1					
ANR	8459668	ExpressionStatement	"arg_init ( & inst -> args , ( const char * * ) argv , argc , pl_main_arg_fopen , NULL , arg_get_codepoint , mem )"	216:4:6830:6940	8459546	13	True				
ANR	8459669	CallExpression	"arg_init ( & inst -> args , ( const char * * ) argv , argc , pl_main_arg_fopen , NULL , arg_get_codepoint , mem )"		8459546	0					
ANR	8459670	Callee	arg_init		8459546	0					
ANR	8459671	Identifier	arg_init		8459546	0					
ANR	8459672	ArgumentList	& inst -> args		8459546	1					
ANR	8459673	Argument	& inst -> args		8459546	0					
ANR	8459674	UnaryOperationExpression	& inst -> args		8459546	0					
ANR	8459675	UnaryOperator	&		8459546	0					
ANR	8459676	PtrMemberAccess	inst -> args		8459546	1					
ANR	8459677	Identifier	inst		8459546	0					
ANR	8459678	Identifier	args		8459546	1					
ANR	8459679	Argument	( const char * * ) argv		8459546	1					
ANR	8459680	CastExpression	( const char * * ) argv		8459546	0					
ANR	8459681	CastTarget	const char * *		8459546	0					
ANR	8459682	Identifier	argv		8459546	1					
ANR	8459683	Argument	argc		8459546	2					
ANR	8459684	Identifier	argc		8459546	0					
ANR	8459685	Argument	pl_main_arg_fopen		8459546	3					
ANR	8459686	Identifier	pl_main_arg_fopen		8459546	0					
ANR	8459687	Argument	NULL		8459546	4					
ANR	8459688	Identifier	NULL		8459546	0					
ANR	8459689	Argument	arg_get_codepoint		8459546	5					
ANR	8459690	Identifier	arg_get_codepoint		8459546	0					
ANR	8459691	Argument	mem		8459546	6					
ANR	8459692	Identifier	mem		8459546	0					
ANR	8459693	IfStatement	"if ( pl_main_languages_init ( mem , inst ) < 0 )"		8459546	14					
ANR	8459694	Condition	"pl_main_languages_init ( mem , inst ) < 0"	220:8:6987:7023	8459546	0	True				
ANR	8459695	RelationalExpression	"pl_main_languages_init ( mem , inst ) < 0"		8459546	0		<			
ANR	8459696	CallExpression	"pl_main_languages_init ( mem , inst )"		8459546	0					
ANR	8459697	Callee	pl_main_languages_init		8459546	0					
ANR	8459698	Identifier	pl_main_languages_init		8459546	0					
ANR	8459699	ArgumentList	mem		8459546	1					
ANR	8459700	Argument	mem		8459546	0					
ANR	8459701	Identifier	mem		8459546	0					
ANR	8459702	Argument	inst		8459546	1					
ANR	8459703	Identifier	inst		8459546	0					
ANR	8459704	PrimaryExpression	0		8459546	1					
ANR	8459705	CompoundStatement		44:47:1407:1407	8459546	1					
ANR	8459706	ReturnStatement	return gs_error_Fatal ;	221:8:7036:7057	8459546	0	True				
ANR	8459707	Identifier	gs_error_Fatal		8459546	0					
ANR	8459708	ExpressionStatement	inst -> curr_implementation = pjli = inst -> implementations [ 0 ]	224:4:7070:7129	8459546	15	True				
ANR	8459709	AssignmentExpression	inst -> curr_implementation = pjli = inst -> implementations [ 0 ]		8459546	0		=			
ANR	8459710	PtrMemberAccess	inst -> curr_implementation		8459546	0					
ANR	8459711	Identifier	inst		8459546	0					
ANR	8459712	Identifier	curr_implementation		8459546	1					
ANR	8459713	AssignmentExpression	pjli = inst -> implementations [ 0 ]		8459546	1		=			
ANR	8459714	Identifier	pjli		8459546	0					
ANR	8459715	ArrayIndexing	inst -> implementations [ 0 ]		8459546	1					
ANR	8459716	PtrMemberAccess	inst -> implementations		8459546	0					
ANR	8459717	Identifier	inst		8459546	0					
ANR	8459718	Identifier	implementations		8459546	1					
ANR	8459719	PrimaryExpression	0		8459546	1					
ANR	8459720	IfStatement	if ( pl_init_job ( pjli ) < 0 )		8459546	16					
ANR	8459721	Condition	pl_init_job ( pjli ) < 0	227:8:7200:7220	8459546	0	True				
ANR	8459722	RelationalExpression	pl_init_job ( pjli ) < 0		8459546	0		<			
ANR	8459723	CallExpression	pl_init_job ( pjli )		8459546	0					
ANR	8459724	Callee	pl_init_job		8459546	0					
ANR	8459725	Identifier	pl_init_job		8459546	0					
ANR	8459726	ArgumentList	pjli		8459546	1					
ANR	8459727	Argument	pjli		8459546	0					
ANR	8459728	Identifier	pjli		8459546	0					
ANR	8459729	PrimaryExpression	0		8459546	1					
ANR	8459730	CompoundStatement		51:31:1604:1604	8459546	1					
ANR	8459731	ReturnStatement	return gs_error_Fatal ;	228:8:7233:7254	8459546	0	True				
ANR	8459732	Identifier	gs_error_Fatal		8459546	0					
ANR	8459733	IfStatement	"if ( argc == 1 || pl_main_process_options ( inst , & inst -> args , pjli ) < 0 )"		8459546	17					
ANR	8459734	Condition	"argc == 1 || pl_main_process_options ( inst , & inst -> args , pjli ) < 0"	231:8:7271:7407	8459546	0	True				
ANR	8459735	OrExpression	"argc == 1 || pl_main_process_options ( inst , & inst -> args , pjli ) < 0"		8459546	0		||			
ANR	8459736	EqualityExpression	argc == 1		8459546	0		==			
ANR	8459737	Identifier	argc		8459546	0					
ANR	8459738	PrimaryExpression	1		8459546	1					
ANR	8459739	RelationalExpression	"pl_main_process_options ( inst , & inst -> args , pjli ) < 0"		8459546	1		<			
ANR	8459740	CallExpression	"pl_main_process_options ( inst , & inst -> args , pjli )"		8459546	0					
ANR	8459741	Callee	pl_main_process_options		8459546	0					
ANR	8459742	Identifier	pl_main_process_options		8459546	0					
ANR	8459743	ArgumentList	inst		8459546	1					
ANR	8459744	Argument	inst		8459546	0					
ANR	8459745	Identifier	inst		8459546	0					
ANR	8459746	Argument	& inst -> args		8459546	1					
ANR	8459747	UnaryOperationExpression	& inst -> args		8459546	0					
ANR	8459748	UnaryOperator	&		8459546	0					
ANR	8459749	PtrMemberAccess	inst -> args		8459546	1					
ANR	8459750	Identifier	inst		8459546	0					
ANR	8459751	Identifier	args		8459546	1					
ANR	8459752	Argument	pjli		8459546	2					
ANR	8459753	Identifier	pjli		8459546	0					
ANR	8459754	PrimaryExpression	0		8459546	1					
ANR	8459755	CompoundStatement		61:8:1861:1887	8459546	1					
ANR	8459756	IdentifierDeclStatement	int i ;	236:8:7465:7470	8459546	0	True				
ANR	8459757	IdentifierDecl	i		8459546	0					
ANR	8459758	IdentifierDeclType	int		8459546	0					
ANR	8459759	Identifier	i		8459546	1					
ANR	8459760	IdentifierDeclStatement	const gx_device * * dev_list ;	237:8:7480:7506	8459546	1	True				
ANR	8459761	IdentifierDecl	* * dev_list		8459546	0					
ANR	8459762	IdentifierDeclType	const gx_device * *		8459546	0					
ANR	8459763	Identifier	dev_list		8459546	1					
ANR	8459764	Statement	int	238:8:7516:7518	8459546	2	True				
ANR	8459765	Statement	num_devs	238:12:7520:7527	8459546	3	True				
ANR	8459766	Statement	=	238:21:7529:7529	8459546	4	True				
ANR	8459767	Statement	gs_lib_device_list	239:12:7543:7560	8459546	5	True				
ANR	8459768	Statement	(	239:30:7561:7561	8459546	6	True				
ANR	8459769	Statement	(	239:31:7562:7562	8459546	7	True				
ANR	8459770	Statement	const	239:32:7563:7567	8459546	8	True				
ANR	8459771	Statement	gx_device	239:38:7569:7577	8459546	9	True				
ANR	8459772	Statement	*	239:48:7579:7579	8459546	10	True				
ANR	8459773	Statement	const	239:50:7581:7585	8459546	11	True				
ANR	8459774	Statement	*	239:56:7587:7587	8459546	12	True				
ANR	8459775	Statement	*	239:57:7588:7588	8459546	13	True				
ANR	8459776	Statement	)	239:58:7589:7589	8459546	14	True				
ANR	8459777	Statement	&	239:59:7590:7590	8459546	15	True				
ANR	8459778	Statement	dev_list	239:60:7591:7598	8459546	16	True				
ANR	8459779	Statement	","	239:68:7599:7599	8459546	17	True				
ANR	8459780	Statement	NULL	240:31:7632:7635	8459546	18	True				
ANR	8459781	Statement	)	240:35:7636:7636	8459546	19	True				
ANR	8459782	ExpressionStatement		240:36:7637:7637	8459546	20	True				
ANR	8459783	ExpressionStatement	"errprintf ( mem , pl_usage , argv [ 0 ] )"	241:8:7647:7680	8459546	21	True				
ANR	8459784	CallExpression	"errprintf ( mem , pl_usage , argv [ 0 ] )"		8459546	0					
ANR	8459785	Callee	errprintf		8459546	0					
ANR	8459786	Identifier	errprintf		8459546	0					
ANR	8459787	ArgumentList	mem		8459546	1					
ANR	8459788	Argument	mem		8459546	0					
ANR	8459789	Identifier	mem		8459546	0					
ANR	8459790	Argument	pl_usage		8459546	1					
ANR	8459791	Identifier	pl_usage		8459546	0					
ANR	8459792	Argument	argv [ 0 ]		8459546	2					
ANR	8459793	ArrayIndexing	argv [ 0 ]		8459546	0					
ANR	8459794	Identifier	argv		8459546	0					
ANR	8459795	PrimaryExpression	0		8459546	1					
ANR	8459796	IfStatement	if ( pl_characteristics ( pjli ) -> version )		8459546	22					
ANR	8459797	Condition	pl_characteristics ( pjli ) -> version	243:12:7695:7727	8459546	0	True				
ANR	8459798	PtrMemberAccess	pl_characteristics ( pjli ) -> version		8459546	0					
ANR	8459799	CallExpression	pl_characteristics ( pjli )		8459546	0					
ANR	8459800	Callee	pl_characteristics		8459546	0					
ANR	8459801	Identifier	pl_characteristics		8459546	0					
ANR	8459802	ArgumentList	pjli		8459546	1					
ANR	8459803	Argument	pjli		8459546	0					
ANR	8459804	Identifier	pjli		8459546	0					
ANR	8459805	Identifier	version		8459546	1					
ANR	8459806	ExpressionStatement	"errprintf ( mem , ""Version: %s\\n"" , pl_characteristics ( pjli ) -> version )"	244:12:7742:7830	8459546	1	True				
ANR	8459807	CallExpression	"errprintf ( mem , ""Version: %s\\n"" , pl_characteristics ( pjli ) -> version )"		8459546	0					
ANR	8459808	Callee	errprintf		8459546	0					
ANR	8459809	Identifier	errprintf		8459546	0					
ANR	8459810	ArgumentList	mem		8459546	1					
ANR	8459811	Argument	mem		8459546	0					
ANR	8459812	Identifier	mem		8459546	0					
ANR	8459813	Argument	"""Version: %s\\n"""		8459546	1					
ANR	8459814	PrimaryExpression	"""Version: %s\\n"""		8459546	0					
ANR	8459815	Argument	pl_characteristics ( pjli ) -> version		8459546	2					
ANR	8459816	PtrMemberAccess	pl_characteristics ( pjli ) -> version		8459546	0					
ANR	8459817	CallExpression	pl_characteristics ( pjli )		8459546	0					
ANR	8459818	Callee	pl_characteristics		8459546	0					
ANR	8459819	Identifier	pl_characteristics		8459546	0					
ANR	8459820	ArgumentList	pjli		8459546	1					
ANR	8459821	Argument	pjli		8459546	0					
ANR	8459822	Identifier	pjli		8459546	0					
ANR	8459823	Identifier	version		8459546	1					
ANR	8459824	IfStatement	if ( pl_characteristics ( pjli ) -> build_date )		8459546	23					
ANR	8459825	Condition	pl_characteristics ( pjli ) -> build_date	246:12:7844:7879	8459546	0	True				
ANR	8459826	PtrMemberAccess	pl_characteristics ( pjli ) -> build_date		8459546	0					
ANR	8459827	CallExpression	pl_characteristics ( pjli )		8459546	0					
ANR	8459828	Callee	pl_characteristics		8459546	0					
ANR	8459829	Identifier	pl_characteristics		8459546	0					
ANR	8459830	ArgumentList	pjli		8459546	1					
ANR	8459831	Argument	pjli		8459546	0					
ANR	8459832	Identifier	pjli		8459546	0					
ANR	8459833	Identifier	build_date		8459546	1					
ANR	8459834	ExpressionStatement	"errprintf ( mem , ""Build date: %s\\n"" , pl_characteristics ( pjli ) -> build_date )"	247:12:7894:8011	8459546	1	True				
ANR	8459835	CallExpression	"errprintf ( mem , ""Build date: %s\\n"" , pl_characteristics ( pjli ) -> build_date )"		8459546	0					
ANR	8459836	Callee	errprintf		8459546	0					
ANR	8459837	Identifier	errprintf		8459546	0					
ANR	8459838	ArgumentList	mem		8459546	1					
ANR	8459839	Argument	mem		8459546	0					
ANR	8459840	Identifier	mem		8459546	0					
ANR	8459841	Argument	"""Build date: %s\\n"""		8459546	1					
ANR	8459842	PrimaryExpression	"""Build date: %s\\n"""		8459546	0					
ANR	8459843	Argument	pl_characteristics ( pjli ) -> build_date		8459546	2					
ANR	8459844	PtrMemberAccess	pl_characteristics ( pjli ) -> build_date		8459546	0					
ANR	8459845	CallExpression	pl_characteristics ( pjli )		8459546	0					
ANR	8459846	Callee	pl_characteristics		8459546	0					
ANR	8459847	Identifier	pl_characteristics		8459546	0					
ANR	8459848	ArgumentList	pjli		8459546	1					
ANR	8459849	Argument	pjli		8459546	0					
ANR	8459850	Identifier	pjli		8459546	0					
ANR	8459851	Identifier	build_date		8459546	1					
ANR	8459852	ExpressionStatement	"errprintf ( mem , ""Devices:"" )"	250:8:8021:8047	8459546	24	True				
ANR	8459853	CallExpression	"errprintf ( mem , ""Devices:"" )"		8459546	0					
ANR	8459854	Callee	errprintf		8459546	0					
ANR	8459855	Identifier	errprintf		8459546	0					
ANR	8459856	ArgumentList	mem		8459546	1					
ANR	8459857	Argument	mem		8459546	0					
ANR	8459858	Identifier	mem		8459546	0					
ANR	8459859	Argument	"""Devices:"""		8459546	1					
ANR	8459860	PrimaryExpression	"""Devices:"""		8459546	0					
ANR	8459861	ForStatement	for ( i = 0 ; i < num_devs ; ++ i )		8459546	25					
ANR	8459862	ForInit	i = 0 ;	251:13:8062:8067	8459546	0	True				
ANR	8459863	AssignmentExpression	i = 0		8459546	0		=			
ANR	8459864	Identifier	i		8459546	0					
ANR	8459865	PrimaryExpression	0		8459546	1					
ANR	8459866	Condition	i < num_devs	251:20:8069:8080	8459546	1	True				
ANR	8459867	RelationalExpression	i < num_devs		8459546	0		<			
ANR	8459868	Identifier	i		8459546	0					
ANR	8459869	Identifier	num_devs		8459546	1					
ANR	8459870	UnaryExpression	++ i	251:34:8083:8085	8459546	2	True				
ANR	8459871	IncDec	++		8459546	0					
ANR	8459872	Identifier	i		8459546	1					
ANR	8459873	CompoundStatement		75:39:2469:2469	8459546	3					
ANR	8459874	IfStatement	if ( ( ( i + 1 ) ) % 9 == 0 )		8459546	0					
ANR	8459875	Condition	( ( i + 1 ) ) % 9 == 0	252:16:8106:8123	8459546	0	True				
ANR	8459876	EqualityExpression	( ( i + 1 ) ) % 9 == 0		8459546	0		==			
ANR	8459877	MultiplicativeExpression	( ( i + 1 ) ) % 9		8459546	0		%			
ANR	8459878	AdditiveExpression	i + 1		8459546	0		+			
ANR	8459879	Identifier	i		8459546	0					
ANR	8459880	PrimaryExpression	1		8459546	1					
ANR	8459881	PrimaryExpression	9		8459546	1					
ANR	8459882	PrimaryExpression	0		8459546	1					
ANR	8459883	ExpressionStatement	"errprintf ( mem , ""\\n"" )"	253:16:8142:8162	8459546	1	True				
ANR	8459884	CallExpression	"errprintf ( mem , ""\\n"" )"		8459546	0					
ANR	8459885	Callee	errprintf		8459546	0					
ANR	8459886	Identifier	errprintf		8459546	0					
ANR	8459887	ArgumentList	mem		8459546	1					
ANR	8459888	Argument	mem		8459546	0					
ANR	8459889	Identifier	mem		8459546	0					
ANR	8459890	Argument	"""\\n"""		8459546	1					
ANR	8459891	PrimaryExpression	"""\\n"""		8459546	0					
ANR	8459892	ExpressionStatement	"errprintf ( mem , "" %s"" , gs_devicename ( dev_list [ i ] ) )"	254:12:8176:8225	8459546	1	True				
ANR	8459893	CallExpression	"errprintf ( mem , "" %s"" , gs_devicename ( dev_list [ i ] ) )"		8459546	0					
ANR	8459894	Callee	errprintf		8459546	0					
ANR	8459895	Identifier	errprintf		8459546	0					
ANR	8459896	ArgumentList	mem		8459546	1					
ANR	8459897	Argument	mem		8459546	0					
ANR	8459898	Identifier	mem		8459546	0					
ANR	8459899	Argument	""" %s"""		8459546	1					
ANR	8459900	PrimaryExpression	""" %s"""		8459546	0					
ANR	8459901	Argument	gs_devicename ( dev_list [ i ] )		8459546	2					
ANR	8459902	CallExpression	gs_devicename ( dev_list [ i ] )		8459546	0					
ANR	8459903	Callee	gs_devicename		8459546	0					
ANR	8459904	Identifier	gs_devicename		8459546	0					
ANR	8459905	ArgumentList	dev_list [ i ]		8459546	1					
ANR	8459906	Argument	dev_list [ i ]		8459546	0					
ANR	8459907	ArrayIndexing	dev_list [ i ]		8459546	0					
ANR	8459908	Identifier	dev_list		8459546	0					
ANR	8459909	Identifier	i		8459546	1					
ANR	8459910	ExpressionStatement	"errprintf ( mem , ""\\n"" )"	256:8:8245:8265	8459546	26	True				
ANR	8459911	CallExpression	"errprintf ( mem , ""\\n"" )"		8459546	0					
ANR	8459912	Callee	errprintf		8459546	0					
ANR	8459913	Identifier	errprintf		8459546	0					
ANR	8459914	ArgumentList	mem		8459546	1					
ANR	8459915	Argument	mem		8459546	0					
ANR	8459916	Identifier	mem		8459546	0					
ANR	8459917	Argument	"""\\n"""		8459546	1					
ANR	8459918	PrimaryExpression	"""\\n"""		8459546	0					
ANR	8459919	ReturnStatement	return gs_error_Fatal ;	257:8:8275:8296	8459546	27	True				
ANR	8459920	Identifier	gs_error_Fatal		8459546	0					
ANR	8459921	ReturnStatement	return 0 ;	259:4:8308:8316	8459546	18	True				
ANR	8459922	PrimaryExpression	0		8459546	0					
ANR	8459923	ReturnType	int		8459546	1					
ANR	8459924	Identifier	pl_main_init_with_args		8459546	2					
ANR	8459925	ParameterList	"pl_main_instance_t * inst , int argc , char * argv [ ]"		8459546	3					
ANR	8459926	Parameter	pl_main_instance_t * inst	176:23:5568:5591	8459546	0	True				
ANR	8459927	ParameterType	pl_main_instance_t *		8459546	0					
ANR	8459928	Identifier	inst		8459546	1					
ANR	8459929	Parameter	int argc	176:49:5594:5601	8459546	1	True				
ANR	8459930	ParameterType	int		8459546	0					
ANR	8459931	Identifier	argc		8459546	1					
ANR	8459932	Parameter	char * argv [ ]	176:59:5604:5615	8459546	2	True				
ANR	8459933	ParameterType	char * [ ]		8459546	0					
ANR	8459934	Identifier	argv		8459546	1					
ANR	8459935	CFGEntryNode	ENTRY		8459546		True				
ANR	8459936	CFGExitNode	EXIT		8459546		True				
ANR	8459937	Symbol	& inst -> params		8459546						
ANR	8459938	Symbol	pjli		8459546						
ANR	8459939	Symbol	& inst -> args		8459546						
ANR	8459940	Symbol	pl_init_job		8459546						
ANR	8459941	Symbol	pl_characteristics ( pjli ) -> build_date		8459546						
ANR	8459942	Symbol	* argv		8459546						
ANR	8459943	Symbol	argv		8459546						
ANR	8459944	Symbol	inst -> memory		8459546						
ANR	8459945	Symbol	pl_characteristics		8459546						
ANR	8459946	Symbol	gs_log_errors		8459546						
ANR	8459947	Symbol	* dev_list		8459546						
ANR	8459948	Symbol	gs_debug		8459546						
ANR	8459949	Symbol	gs_iodev_init		8459546						
ANR	8459950	Symbol	mem		8459546						
ANR	8459951	Symbol	gp_local_arg_encoding_get_codepoint		8459546						
ANR	8459952	Symbol	dev_list		8459546						
ANR	8459953	Symbol	* inst -> implementations		8459546						
ANR	8459954	Symbol	argc		8459546						
ANR	8459955	Symbol	gs_error_Fatal		8459546						
ANR	8459956	Symbol	pl_main_languages_init		8459546						
ANR	8459957	Symbol	* inst		8459546						
ANR	8459958	Symbol	NULL		8459546						
ANR	8459959	Symbol	pl_characteristics ( pjli ) -> version		8459546						
ANR	8459960	Symbol	pl_main_arg_fopen		8459546						
ANR	8459961	Symbol	inst -> implementations		8459546						
ANR	8459962	Symbol	arg_get_codepoint		8459546						
ANR	8459963	Symbol	false		8459546						
ANR	8459964	Symbol	i		8459546						
ANR	8459965	Symbol	* * inst		8459546						
ANR	8459966	Symbol	gs_devicename		8459546						
ANR	8459967	Symbol	num_devs		8459546						
ANR	8459968	Symbol	* i		8459546						
ANR	8459969	Symbol	pl_main_process_options		8459546						
ANR	8459970	Symbol	inst		8459546						
ANR	8459971	Symbol	inst -> base_time		8459546						
ANR	8459972	Symbol	pl_usage		8459546						
ANR	8459973	Symbol	* pl_characteristics		8459546						
ANR	8459974	Symbol	inst -> curr_implementation		8459546						
ANR	8459975	Symbol	gs_lib_init1		8459546						
ANR	8459976	Function	pl_main_run_string_begin	263:0:8322:8383							
ANR	8459977	FunctionDef	pl_main_run_string_begin (void * instance)		8459976	0					
ANR	8459978	CompoundStatement		265:0:8367:8383	8459976	0					
ANR	8459979	ReturnStatement	return 0 ;	266:4:8373:8381	8459976	0	True				
ANR	8459980	PrimaryExpression	0		8459976	0					
ANR	8459981	ReturnType	int		8459976	1					
ANR	8459982	Identifier	pl_main_run_string_begin		8459976	2					
ANR	8459983	ParameterList	void * instance		8459976	3					
ANR	8459984	Parameter	void * instance	264:25:8351:8364	8459976	0	True				
ANR	8459985	ParameterType	void *		8459976	0					
ANR	8459986	Identifier	instance		8459976	1					
ANR	8459987	CFGEntryNode	ENTRY		8459976		True				
ANR	8459988	CFGExitNode	EXIT		8459976		True				
ANR	8459989	Symbol	instance		8459976						
ANR	8459990	Function	pl_main_run_string_continue	269:0:8386:8488							
ANR	8459991	FunctionDef	"pl_main_run_string_continue (void * instance , const char * str , unsigned int length)"		8459990	0					
ANR	8459992	CompoundStatement		271:0:8472:8488	8459990	0					
ANR	8459993	ReturnStatement	return 0 ;	272:4:8478:8486	8459990	0	True				
ANR	8459994	PrimaryExpression	0		8459990	0					
ANR	8459995	ReturnType	int		8459990	1					
ANR	8459996	Identifier	pl_main_run_string_continue		8459990	2					
ANR	8459997	ParameterList	"void * instance , const char * str , unsigned int length"		8459990	3					
ANR	8459998	Parameter	void * instance	270:28:8418:8431	8459990	0	True				
ANR	8459999	ParameterType	void *		8459990	0					
ANR	8460000	Identifier	instance		8459990	1					
ANR	8460001	Parameter	const char * str	270:44:8434:8448	8459990	1	True				
ANR	8460002	ParameterType	const char *		8459990	0					
ANR	8460003	Identifier	str		8459990	1					
ANR	8460004	Parameter	unsigned int length	270:61:8451:8469	8459990	2	True				
ANR	8460005	ParameterType	unsigned int		8459990	0					
ANR	8460006	Identifier	length		8459990	1					
ANR	8460007	CFGEntryNode	ENTRY		8459990		True				
ANR	8460008	CFGExitNode	EXIT		8459990		True				
ANR	8460009	Symbol	str		8459990						
ANR	8460010	Symbol	instance		8459990						
ANR	8460011	Symbol	length		8459990						
ANR	8460012	Function	pl_main_run_string_end	275:0:8491:8550							
ANR	8460013	FunctionDef	pl_main_run_string_end (void * instance)		8460012	0					
ANR	8460014	CompoundStatement		277:0:8534:8550	8460012	0					
ANR	8460015	ReturnStatement	return 0 ;	278:4:8540:8548	8460012	0	True				
ANR	8460016	PrimaryExpression	0		8460012	0					
ANR	8460017	ReturnType	int		8460012	1					
ANR	8460018	Identifier	pl_main_run_string_end		8460012	2					
ANR	8460019	ParameterList	void * instance		8460012	3					
ANR	8460020	Parameter	void * instance	276:23:8518:8531	8460012	0	True				
ANR	8460021	ParameterType	void *		8460012	0					
ANR	8460022	Identifier	instance		8460012	1					
ANR	8460023	CFGEntryNode	ENTRY		8460012		True				
ANR	8460024	CFGExitNode	EXIT		8460012		True				
ANR	8460025	Symbol	instance		8460012						
ANR	8460026	Function	pl_main_run_file	281:0:8553:13343							
ANR	8460027	FunctionDef	"pl_main_run_file (pl_main_instance_t * minst , const char * filename)"		8460026	0					
ANR	8460028	CompoundStatement		283:0:8623:13343	8460026	0					
ANR	8460029	IdentifierDeclStatement	bool new_job = true ;	284:4:8629:8648	8460026	0	True				
ANR	8460030	IdentifierDecl	new_job = true		8460026	0					
ANR	8460031	IdentifierDeclType	bool		8460026	0					
ANR	8460032	Identifier	new_job		8460026	1					
ANR	8460033	AssignmentExpression	new_job = true		8460026	2		=			
ANR	8460034	Identifier	true		8460026	0					
ANR	8460035	Identifier	true		8460026	1					
ANR	8460036	IdentifierDeclStatement	pl_interp_implementation_t * pjli = minst -> implementations [ 0 ] ;	285:4:8654:8722	8460026	1	True				
ANR	8460037	IdentifierDecl	* pjli = minst -> implementations [ 0 ]		8460026	0					
ANR	8460038	IdentifierDeclType	pl_interp_implementation_t *		8460026	0					
ANR	8460039	Identifier	pjli		8460026	1					
ANR	8460040	AssignmentExpression	* pjli = minst -> implementations [ 0 ]		8460026	2		=			
ANR	8460041	Identifier	pjli		8460026	0					
ANR	8460042	ArrayIndexing	minst -> implementations [ 0 ]		8460026	1					
ANR	8460043	PtrMemberAccess	minst -> implementations		8460026	0					
ANR	8460044	Identifier	minst		8460026	0					
ANR	8460045	Identifier	implementations		8460026	1					
ANR	8460046	PrimaryExpression	0		8460026	1					
ANR	8460047	IdentifierDeclStatement	gs_memory_t * mem = minst -> memory ;	287:4:8728:8760	8460026	2	True				
ANR	8460048	IdentifierDecl	* mem = minst -> memory		8460026	0					
ANR	8460049	IdentifierDeclType	gs_memory_t *		8460026	0					
ANR	8460050	Identifier	mem		8460026	1					
ANR	8460051	AssignmentExpression	* mem = minst -> memory		8460026	2		=			
ANR	8460052	Identifier	mem		8460026	0					
ANR	8460053	PtrMemberAccess	minst -> memory		8460026	1					
ANR	8460054	Identifier	minst		8460026	0					
ANR	8460055	Identifier	memory		8460026	1					
ANR	8460056	IdentifierDeclStatement	pl_top_cursor_t r ;	288:4:8766:8783	8460026	3	True				
ANR	8460057	IdentifierDecl	r		8460026	0					
ANR	8460058	IdentifierDeclType	pl_top_cursor_t		8460026	0					
ANR	8460059	Identifier	r		8460026	1					
ANR	8460060	IdentifierDeclStatement	int code = 0 ;	289:4:8789:8801	8460026	4	True				
ANR	8460061	IdentifierDecl	code = 0		8460026	0					
ANR	8460062	IdentifierDeclType	int		8460026	0					
ANR	8460063	Identifier	code		8460026	1					
ANR	8460064	AssignmentExpression	code = 0		8460026	2		=			
ANR	8460065	Identifier	code		8460026	0					
ANR	8460066	PrimaryExpression	0		8460026	1					
ANR	8460067	Statement	define	291:1:8805:8810	8460026	5	True				
ANR	8460068	Statement	curr_implementation	291:8:8812:8830	8460026	6	True				
ANR	8460069	Statement	minst	291:28:8832:8836	8460026	7	True				
ANR	8460070	Statement	->	291:33:8837:8838	8460026	8	True				
ANR	8460071	Statement	curr_implementation	291:35:8839:8857	8460026	9	True				
ANR	8460072	Statement	define	292:1:8860:8865	8460026	10	True				
ANR	8460073	Statement	desired_implementation	292:8:8867:8888	8460026	11	True				
ANR	8460074	Statement	minst	292:31:8890:8894	8460026	12	True				
ANR	8460075	Statement	->	292:36:8895:8896	8460026	13	True				
ANR	8460076	Statement	desired_implementation	292:38:8897:8918	8460026	14	True				
ANR	8460077	IfStatement	"if ( pl_cursor_open ( mem , & r , filename , minst -> buf , sizeof ( minst -> buf ) ) < 0 )"		8460026	15					
ANR	8460078	Condition	"pl_cursor_open ( mem , & r , filename , minst -> buf , sizeof ( minst -> buf ) ) < 0"	294:8:8933:9001	8460026	0	True				
ANR	8460079	RelationalExpression	"pl_cursor_open ( mem , & r , filename , minst -> buf , sizeof ( minst -> buf ) ) < 0"		8460026	0		<			
ANR	8460080	CallExpression	"pl_cursor_open ( mem , & r , filename , minst -> buf , sizeof ( minst -> buf ) )"		8460026	0					
ANR	8460081	Callee	pl_cursor_open		8460026	0					
ANR	8460082	Identifier	pl_cursor_open		8460026	0					
ANR	8460083	ArgumentList	mem		8460026	1					
ANR	8460084	Argument	mem		8460026	0					
ANR	8460085	Identifier	mem		8460026	0					
ANR	8460086	Argument	& r		8460026	1					
ANR	8460087	UnaryOperationExpression	& r		8460026	0					
ANR	8460088	UnaryOperator	&		8460026	0					
ANR	8460089	Identifier	r		8460026	1					
ANR	8460090	Argument	filename		8460026	2					
ANR	8460091	Identifier	filename		8460026	0					
ANR	8460092	Argument	minst -> buf		8460026	3					
ANR	8460093	PtrMemberAccess	minst -> buf		8460026	0					
ANR	8460094	Identifier	minst		8460026	0					
ANR	8460095	Identifier	buf		8460026	1					
ANR	8460096	Argument	sizeof ( minst -> buf )		8460026	4					
ANR	8460097	SizeofExpression	sizeof ( minst -> buf )		8460026	0					
ANR	8460098	Sizeof	sizeof		8460026	0					
ANR	8460099	PtrMemberAccess	minst -> buf		8460026	1					
ANR	8460100	Identifier	minst		8460026	0					
ANR	8460101	Identifier	buf		8460026	1					
ANR	8460102	PrimaryExpression	0		8460026	1					
ANR	8460103	CompoundStatement		12:79:380:380	8460026	1					
ANR	8460104	ReturnStatement	return gs_error_Fatal ;	295:8:9014:9035	8460026	0	True				
ANR	8460105	Identifier	gs_error_Fatal		8460026	0					
ANR	8460106	ForStatement	for ( ; ; )		8460026	16					
ANR	8460107	CompoundStatement		16:13:433:433	8460026	0					
ANR	8460108	ExpressionStatement	"if_debug1m ( 'I' , mem , ""[i][file pos=%ld]\\n"" , pl_cursor_position ( & r ) )"	299:8:9067:9153	8460026	0	True				
ANR	8460109	CallExpression	"if_debug1m ( 'I' , mem , ""[i][file pos=%ld]\\n"" , pl_cursor_position ( & r ) )"		8460026	0					
ANR	8460110	Callee	if_debug1m		8460026	0					
ANR	8460111	Identifier	if_debug1m		8460026	0					
ANR	8460112	ArgumentList	'I'		8460026	1					
ANR	8460113	Argument	'I'		8460026	0					
ANR	8460114	PrimaryExpression	'I'		8460026	0					
ANR	8460115	Argument	mem		8460026	1					
ANR	8460116	Identifier	mem		8460026	0					
ANR	8460117	Argument	"""[i][file pos=%ld]\\n"""		8460026	2					
ANR	8460118	PrimaryExpression	"""[i][file pos=%ld]\\n"""		8460026	0					
ANR	8460119	Argument	pl_cursor_position ( & r )		8460026	3					
ANR	8460120	CallExpression	pl_cursor_position ( & r )		8460026	0					
ANR	8460121	Callee	pl_cursor_position		8460026	0					
ANR	8460122	Identifier	pl_cursor_position		8460026	0					
ANR	8460123	ArgumentList	& r		8460026	1					
ANR	8460124	Argument	& r		8460026	0					
ANR	8460125	UnaryOperationExpression	& r		8460026	0					
ANR	8460126	UnaryOperator	&		8460026	0					
ANR	8460127	Identifier	r		8460026	1					
ANR	8460128	IfStatement	if ( pl_cursor_next ( & r ) <= 0 )		8460026	1					
ANR	8460129	Condition	pl_cursor_next ( & r ) <= 0	302:12:9168:9190	8460026	0	True				
ANR	8460130	RelationalExpression	pl_cursor_next ( & r ) <= 0		8460026	0		<=			
ANR	8460131	CallExpression	pl_cursor_next ( & r )		8460026	0					
ANR	8460132	Callee	pl_cursor_next		8460026	0					
ANR	8460133	Identifier	pl_cursor_next		8460026	0					
ANR	8460134	ArgumentList	& r		8460026	1					
ANR	8460135	Argument	& r		8460026	0					
ANR	8460136	UnaryOperationExpression	& r		8460026	0					
ANR	8460137	UnaryOperator	&		8460026	0					
ANR	8460138	Identifier	r		8460026	1					
ANR	8460139	PrimaryExpression	0		8460026	1					
ANR	8460140	CompoundStatement		20:37:569:569	8460026	1					
ANR	8460141	ExpressionStatement	"if_debug0m ( 'I' , mem , ""End of of data\\n"" )"	303:12:9207:9247	8460026	0	True				
ANR	8460142	CallExpression	"if_debug0m ( 'I' , mem , ""End of of data\\n"" )"		8460026	0					
ANR	8460143	Callee	if_debug0m		8460026	0					
ANR	8460144	Identifier	if_debug0m		8460026	0					
ANR	8460145	ArgumentList	'I'		8460026	1					
ANR	8460146	Argument	'I'		8460026	0					
ANR	8460147	PrimaryExpression	'I'		8460026	0					
ANR	8460148	Argument	mem		8460026	1					
ANR	8460149	Identifier	mem		8460026	0					
ANR	8460150	Argument	"""End of of data\\n"""		8460026	2					
ANR	8460151	PrimaryExpression	"""End of of data\\n"""		8460026	0					
ANR	8460152	ExpressionStatement	pl_process_eof ( curr_implementation )	304:12:9261:9296	8460026	1	True				
ANR	8460153	CallExpression	pl_process_eof ( curr_implementation )		8460026	0					
ANR	8460154	Callee	pl_process_eof		8460026	0					
ANR	8460155	Identifier	pl_process_eof		8460026	0					
ANR	8460156	ArgumentList	curr_implementation		8460026	1					
ANR	8460157	Argument	curr_implementation		8460026	0					
ANR	8460158	Identifier	curr_implementation		8460026	0					
ANR	8460159	IfStatement	if ( pl_dnit_job ( curr_implementation ) < 0 )		8460026	2					
ANR	8460160	Condition	pl_dnit_job ( curr_implementation ) < 0	305:16:9314:9349	8460026	0	True				
ANR	8460161	RelationalExpression	pl_dnit_job ( curr_implementation ) < 0		8460026	0		<			
ANR	8460162	CallExpression	pl_dnit_job ( curr_implementation )		8460026	0					
ANR	8460163	Callee	pl_dnit_job		8460026	0					
ANR	8460164	Identifier	pl_dnit_job		8460026	0					
ANR	8460165	ArgumentList	curr_implementation		8460026	1					
ANR	8460166	Argument	curr_implementation		8460026	0					
ANR	8460167	Identifier	curr_implementation		8460026	0					
ANR	8460168	PrimaryExpression	0		8460026	1					
ANR	8460169	ReturnStatement	return gs_error_Fatal ;	306:16:9368:9389	8460026	1	True				
ANR	8460170	Identifier	gs_error_Fatal		8460026	0					
ANR	8460171	BreakStatement	break ;	307:12:9403:9408	8460026	3	True				
ANR	8460172	IfStatement	if ( new_job )		8460026	2					
ANR	8460173	Condition	new_job	310:12:9441:9447	8460026	0	True				
ANR	8460174	Identifier	new_job		8460026	0					
ANR	8460175	CompoundStatement		28:21:826:826	8460026	1					
ANR	8460176	ExpressionStatement	"if_debug0m ( 'I' , mem , ""Selecting PDL\\n"" )"	311:12:9464:9503	8460026	0	True				
ANR	8460177	CallExpression	"if_debug0m ( 'I' , mem , ""Selecting PDL\\n"" )"		8460026	0					
ANR	8460178	Callee	if_debug0m		8460026	0					
ANR	8460179	Identifier	if_debug0m		8460026	0					
ANR	8460180	ArgumentList	'I'		8460026	1					
ANR	8460181	Argument	'I'		8460026	0					
ANR	8460182	PrimaryExpression	'I'		8460026	0					
ANR	8460183	Argument	mem		8460026	1					
ANR	8460184	Identifier	mem		8460026	0					
ANR	8460185	Argument	"""Selecting PDL\\n"""		8460026	2					
ANR	8460186	PrimaryExpression	"""Selecting PDL\\n"""		8460026	0					
ANR	8460187	ExpressionStatement	"desired_implementation = pl_select_implementation ( pjli , minst , r )"	312:12:9517:9582	8460026	1	True				
ANR	8460188	AssignmentExpression	"desired_implementation = pl_select_implementation ( pjli , minst , r )"		8460026	0		=			
ANR	8460189	Identifier	desired_implementation		8460026	0					
ANR	8460190	CallExpression	"pl_select_implementation ( pjli , minst , r )"		8460026	1					
ANR	8460191	Callee	pl_select_implementation		8460026	0					
ANR	8460192	Identifier	pl_select_implementation		8460026	0					
ANR	8460193	ArgumentList	pjli		8460026	1					
ANR	8460194	Argument	pjli		8460026	0					
ANR	8460195	Identifier	pjli		8460026	0					
ANR	8460196	Argument	minst		8460026	1					
ANR	8460197	Identifier	minst		8460026	0					
ANR	8460198	Argument	r		8460026	2					
ANR	8460199	Identifier	r		8460026	0					
ANR	8460200	IfStatement	if ( curr_implementation != desired_implementation )		8460026	2					
ANR	8460201	Condition	curr_implementation != desired_implementation	313:16:9600:9644	8460026	0	True				
ANR	8460202	EqualityExpression	curr_implementation != desired_implementation		8460026	0		!=			
ANR	8460203	Identifier	curr_implementation		8460026	0					
ANR	8460204	Identifier	desired_implementation		8460026	1					
ANR	8460205	CompoundStatement		31:63:1023:1023	8460026	1					
ANR	8460206	ExpressionStatement	code = pl_remove_device ( curr_implementation )	314:16:9665:9709	8460026	0	True				
ANR	8460207	AssignmentExpression	code = pl_remove_device ( curr_implementation )		8460026	0		=			
ANR	8460208	Identifier	code		8460026	0					
ANR	8460209	CallExpression	pl_remove_device ( curr_implementation )		8460026	1					
ANR	8460210	Callee	pl_remove_device		8460026	0					
ANR	8460211	Identifier	pl_remove_device		8460026	0					
ANR	8460212	ArgumentList	curr_implementation		8460026	1					
ANR	8460213	Argument	curr_implementation		8460026	0					
ANR	8460214	Identifier	curr_implementation		8460026	0					
ANR	8460215	IfStatement	if ( code >= 0 )		8460026	1					
ANR	8460216	Condition	code >= 0	315:20:9731:9739	8460026	0	True				
ANR	8460217	RelationalExpression	code >= 0		8460026	0		>=			
ANR	8460218	Identifier	code		8460026	0					
ANR	8460219	PrimaryExpression	0		8460026	1					
ANR	8460220	ExpressionStatement	"code = pl_set_device ( desired_implementation , minst -> device )"	316:20:9762:9821	8460026	1	True				
ANR	8460221	AssignmentExpression	"code = pl_set_device ( desired_implementation , minst -> device )"		8460026	0		=			
ANR	8460222	Identifier	code		8460026	0					
ANR	8460223	CallExpression	"pl_set_device ( desired_implementation , minst -> device )"		8460026	1					
ANR	8460224	Callee	pl_set_device		8460026	0					
ANR	8460225	Identifier	pl_set_device		8460026	0					
ANR	8460226	ArgumentList	desired_implementation		8460026	1					
ANR	8460227	Argument	desired_implementation		8460026	0					
ANR	8460228	Identifier	desired_implementation		8460026	0					
ANR	8460229	Argument	minst -> device		8460026	1					
ANR	8460230	PtrMemberAccess	minst -> device		8460026	0					
ANR	8460231	Identifier	minst		8460026	0					
ANR	8460232	Identifier	device		8460026	1					
ANR	8460233	IfStatement	if ( code < 0 )		8460026	2					
ANR	8460234	Condition	code < 0	317:20:9843:9850	8460026	0	True				
ANR	8460235	RelationalExpression	code < 0		8460026	0		<			
ANR	8460236	Identifier	code		8460026	0					
ANR	8460237	PrimaryExpression	0		8460026	1					
ANR	8460238	CompoundStatement		35:30:1229:1229	8460026	1					
ANR	8460239	ExpressionStatement	curr_implementation = desired_implementation	318:20:9875:9919	8460026	0	True				
ANR	8460240	AssignmentExpression	curr_implementation = desired_implementation		8460026	0		=			
ANR	8460241	Identifier	curr_implementation		8460026	0					
ANR	8460242	Identifier	desired_implementation		8460026	1					
ANR	8460243	ReturnStatement	return gs_error_Fatal ;	319:20:9941:9962	8460026	1	True				
ANR	8460244	Identifier	gs_error_Fatal		8460026	0					
ANR	8460245	ExpressionStatement	curr_implementation = desired_implementation	323:12:10021:10065	8460026	3	True				
ANR	8460246	AssignmentExpression	curr_implementation = desired_implementation		8460026	0		=			
ANR	8460247	Identifier	curr_implementation		8460026	0					
ANR	8460248	Identifier	desired_implementation		8460026	1					
ANR	8460249	IfStatement	if ( curr_implementation == pjli )		8460026	4					
ANR	8460250	Condition	curr_implementation == pjli	326:16:10173:10199	8460026	0	True				
ANR	8460251	EqualityExpression	curr_implementation == pjli		8460026	0		==			
ANR	8460252	Identifier	curr_implementation		8460026	0					
ANR	8460253	Identifier	pjli		8460026	1					
ANR	8460254	CompoundStatement		44:45:1578:1578	8460026	1					
ANR	8460255	IfStatement	if ( minst -> pjl_from_args == false )		8460026	0					
ANR	8460256	Condition	minst -> pjl_from_args == false	327:20:10224:10252	8460026	0	True				
ANR	8460257	EqualityExpression	minst -> pjl_from_args == false		8460026	0		==			
ANR	8460258	PtrMemberAccess	minst -> pjl_from_args		8460026	0					
ANR	8460259	Identifier	minst		8460026	0					
ANR	8460260	Identifier	pjl_from_args		8460026	1					
ANR	8460261	Identifier	false		8460026	1					
ANR	8460262	CompoundStatement		45:51:1631:1631	8460026	1					
ANR	8460263	IfStatement	if ( pl_init_job ( pjli ) < 0 )		8460026	0					
ANR	8460264	Condition	pl_init_job ( pjli ) < 0	328:24:10281:10301	8460026	0	True				
ANR	8460265	RelationalExpression	pl_init_job ( pjli ) < 0		8460026	0		<			
ANR	8460266	CallExpression	pl_init_job ( pjli )		8460026	0					
ANR	8460267	Callee	pl_init_job		8460026	0					
ANR	8460268	Identifier	pl_init_job		8460026	0					
ANR	8460269	ArgumentList	pjli		8460026	1					
ANR	8460270	Argument	pjli		8460026	0					
ANR	8460271	Identifier	pjli		8460026	0					
ANR	8460272	PrimaryExpression	0		8460026	1					
ANR	8460273	ReturnStatement	return gs_error_Fatal ;	329:24:10328:10349	8460026	1	True				
ANR	8460274	Identifier	gs_error_Fatal		8460026	0					
ANR	8460275	ElseStatement	else		8460026	0					
ANR	8460276	ExpressionStatement	minst -> pjl_from_args = false	331:20:10394:10422	8460026	0	True				
ANR	8460277	AssignmentExpression	minst -> pjl_from_args = false		8460026	0		=			
ANR	8460278	PtrMemberAccess	minst -> pjl_from_args		8460026	0					
ANR	8460279	Identifier	minst		8460026	0					
ANR	8460280	Identifier	pjl_from_args		8460026	1					
ANR	8460281	Identifier	false		8460026	1					
ANR	8460282	ElseStatement	else		8460026	0					
ANR	8460283	CompoundStatement		50:19:1819:1819	8460026	0					
ANR	8460284	IfStatement	if ( pl_init_job ( curr_implementation ) < 0 )		8460026	0					
ANR	8460285	Condition	pl_init_job ( curr_implementation ) < 0	333:20:10465:10500	8460026	0	True				
ANR	8460286	RelationalExpression	pl_init_job ( curr_implementation ) < 0		8460026	0		<			
ANR	8460287	CallExpression	pl_init_job ( curr_implementation )		8460026	0					
ANR	8460288	Callee	pl_init_job		8460026	0					
ANR	8460289	Identifier	pl_init_job		8460026	0					
ANR	8460290	ArgumentList	curr_implementation		8460026	1					
ANR	8460291	Argument	curr_implementation		8460026	0					
ANR	8460292	Identifier	curr_implementation		8460026	0					
ANR	8460293	PrimaryExpression	0		8460026	1					
ANR	8460294	ReturnStatement	return gs_error_Fatal ;	334:20:10523:10544	8460026	1	True				
ANR	8460295	Identifier	gs_error_Fatal		8460026	0					
ANR	8460296	ExpressionStatement	"if_debug1m ( 'I' , mem , ""selected and initializing (%s)\\n"" , pl_characteristics ( curr_implementation ) -> language )"	337:12:10585:10715	8460026	5	True				
ANR	8460297	CallExpression	"if_debug1m ( 'I' , mem , ""selected and initializing (%s)\\n"" , pl_characteristics ( curr_implementation ) -> language )"		8460026	0					
ANR	8460298	Callee	if_debug1m		8460026	0					
ANR	8460299	Identifier	if_debug1m		8460026	0					
ANR	8460300	ArgumentList	'I'		8460026	1					
ANR	8460301	Argument	'I'		8460026	0					
ANR	8460302	PrimaryExpression	'I'		8460026	0					
ANR	8460303	Argument	mem		8460026	1					
ANR	8460304	Identifier	mem		8460026	0					
ANR	8460305	Argument	"""selected and initializing (%s)\\n"""		8460026	2					
ANR	8460306	PrimaryExpression	"""selected and initializing (%s)\\n"""		8460026	0					
ANR	8460307	Argument	pl_characteristics ( curr_implementation ) -> language		8460026	3					
ANR	8460308	PtrMemberAccess	pl_characteristics ( curr_implementation ) -> language		8460026	0					
ANR	8460309	CallExpression	pl_characteristics ( curr_implementation )		8460026	0					
ANR	8460310	Callee	pl_characteristics		8460026	0					
ANR	8460311	Identifier	pl_characteristics		8460026	0					
ANR	8460312	ArgumentList	curr_implementation		8460026	1					
ANR	8460313	Argument	curr_implementation		8460026	0					
ANR	8460314	Identifier	curr_implementation		8460026	0					
ANR	8460315	Identifier	language		8460026	1					
ANR	8460316	ExpressionStatement	new_job = false	339:12:10729:10744	8460026	6	True				
ANR	8460317	AssignmentExpression	new_job = false		8460026	0		=			
ANR	8460318	Identifier	new_job		8460026	0					
ANR	8460319	Identifier	false		8460026	1					
ANR	8460320	IfStatement	if ( curr_implementation )		8460026	3					
ANR	8460321	Condition	curr_implementation	342:12:10769:10787	8460026	0	True				
ANR	8460322	Identifier	curr_implementation		8460026	0					
ANR	8460323	CompoundStatement		60:33:2166:2166	8460026	1					
ANR	8460324	IfStatement	if ( curr_implementation -> proc_process_file && r . strm != mem -> gs_lib_ctx -> fstdin )		8460026	0					
ANR	8460325	Condition	curr_implementation -> proc_process_file && r . strm != mem -> gs_lib_ctx -> fstdin	346:16:10976:11066	8460026	0	True				
ANR	8460326	AndExpression	curr_implementation -> proc_process_file && r . strm != mem -> gs_lib_ctx -> fstdin		8460026	0		&&			
ANR	8460327	PtrMemberAccess	curr_implementation -> proc_process_file		8460026	0					
ANR	8460328	Identifier	curr_implementation		8460026	0					
ANR	8460329	Identifier	proc_process_file		8460026	1					
ANR	8460330	EqualityExpression	r . strm != mem -> gs_lib_ctx -> fstdin		8460026	1		!=			
ANR	8460331	MemberAccess	r . strm		8460026	0					
ANR	8460332	Identifier	r		8460026	0					
ANR	8460333	Identifier	strm		8460026	1					
ANR	8460334	PtrMemberAccess	mem -> gs_lib_ctx -> fstdin		8460026	1					
ANR	8460335	PtrMemberAccess	mem -> gs_lib_ctx		8460026	0					
ANR	8460336	Identifier	mem		8460026	0					
ANR	8460337	Identifier	gs_lib_ctx		8460026	1					
ANR	8460338	Identifier	fstdin		8460026	1					
ANR	8460339	CompoundStatement		65:54:2445:2445	8460026	1					
ANR	8460340	ExpressionStatement	"if_debug1m ( 'I' , mem , ""processing job from file (%s)\\n"" , filename )"	348:16:11087:11179	8460026	0	True				
ANR	8460341	CallExpression	"if_debug1m ( 'I' , mem , ""processing job from file (%s)\\n"" , filename )"		8460026	0					
ANR	8460342	Callee	if_debug1m		8460026	0					
ANR	8460343	Identifier	if_debug1m		8460026	0					
ANR	8460344	ArgumentList	'I'		8460026	1					
ANR	8460345	Argument	'I'		8460026	0					
ANR	8460346	PrimaryExpression	'I'		8460026	0					
ANR	8460347	Argument	mem		8460026	1					
ANR	8460348	Identifier	mem		8460026	0					
ANR	8460349	Argument	"""processing job from file (%s)\\n"""		8460026	2					
ANR	8460350	PrimaryExpression	"""processing job from file (%s)\\n"""		8460026	0					
ANR	8460351	Argument	filename		8460026	3					
ANR	8460352	Identifier	filename		8460026	0					
ANR	8460353	ExpressionStatement	"code = pl_process_file ( curr_implementation , ( char * ) filename )"	351:16:11198:11259	8460026	1	True				
ANR	8460354	AssignmentExpression	"code = pl_process_file ( curr_implementation , ( char * ) filename )"		8460026	0		=			
ANR	8460355	Identifier	code		8460026	0					
ANR	8460356	CallExpression	"pl_process_file ( curr_implementation , ( char * ) filename )"		8460026	1					
ANR	8460357	Callee	pl_process_file		8460026	0					
ANR	8460358	Identifier	pl_process_file		8460026	0					
ANR	8460359	ArgumentList	curr_implementation		8460026	1					
ANR	8460360	Argument	curr_implementation		8460026	0					
ANR	8460361	Identifier	curr_implementation		8460026	0					
ANR	8460362	Argument	( char * ) filename		8460026	1					
ANR	8460363	CastExpression	( char * ) filename		8460026	0					
ANR	8460364	CastTarget	char *		8460026	0					
ANR	8460365	Identifier	filename		8460026	1					
ANR	8460366	IfStatement	if ( code < 0 )		8460026	2					
ANR	8460367	Condition	code < 0	352:20:11281:11288	8460026	0	True				
ANR	8460368	RelationalExpression	code < 0		8460026	0		<			
ANR	8460369	Identifier	code		8460026	0					
ANR	8460370	PrimaryExpression	0		8460026	1					
ANR	8460371	CompoundStatement		70:30:2667:2667	8460026	1					
ANR	8460372	ExpressionStatement	"errprintf ( mem , ""Warning interpreter exited with error code %d\\n"" , code )"	353:20:11313:11414	8460026	0	True				
ANR	8460373	CallExpression	"errprintf ( mem , ""Warning interpreter exited with error code %d\\n"" , code )"		8460026	0					
ANR	8460374	Callee	errprintf		8460026	0					
ANR	8460375	Identifier	errprintf		8460026	0					
ANR	8460376	ArgumentList	mem		8460026	1					
ANR	8460377	Argument	mem		8460026	0					
ANR	8460378	Identifier	mem		8460026	0					
ANR	8460379	Argument	"""Warning interpreter exited with error code %d\\n"""		8460026	1					
ANR	8460380	PrimaryExpression	"""Warning interpreter exited with error code %d\\n"""		8460026	0					
ANR	8460381	Argument	code		8460026	2					
ANR	8460382	Identifier	code		8460026	0					
ANR	8460383	IfStatement	if ( pl_dnit_job ( curr_implementation ) < 0 )		8460026	3					
ANR	8460384	Condition	pl_dnit_job ( curr_implementation ) < 0	356:20:11454:11489	8460026	0	True				
ANR	8460385	RelationalExpression	pl_dnit_job ( curr_implementation ) < 0		8460026	0		<			
ANR	8460386	CallExpression	pl_dnit_job ( curr_implementation )		8460026	0					
ANR	8460387	Callee	pl_dnit_job		8460026	0					
ANR	8460388	Identifier	pl_dnit_job		8460026	0					
ANR	8460389	ArgumentList	curr_implementation		8460026	1					
ANR	8460390	Argument	curr_implementation		8460026	0					
ANR	8460391	Identifier	curr_implementation		8460026	0					
ANR	8460392	PrimaryExpression	0		8460026	1					
ANR	8460393	ReturnStatement	return gs_error_Fatal ;	357:20:11512:11533	8460026	1	True				
ANR	8460394	Identifier	gs_error_Fatal		8460026	0					
ANR	8460395	BreakStatement	break ;	359:16:11552:11557	8460026	4	True				
ANR	8460396	ExpressionStatement	"code = pl_process ( curr_implementation , & r . cursor )"	362:12:11644:11693	8460026	1	True				
ANR	8460397	AssignmentExpression	"code = pl_process ( curr_implementation , & r . cursor )"		8460026	0		=			
ANR	8460398	Identifier	code		8460026	0					
ANR	8460399	CallExpression	"pl_process ( curr_implementation , & r . cursor )"		8460026	1					
ANR	8460400	Callee	pl_process		8460026	0					
ANR	8460401	Identifier	pl_process		8460026	0					
ANR	8460402	ArgumentList	curr_implementation		8460026	1					
ANR	8460403	Argument	curr_implementation		8460026	0					
ANR	8460404	Identifier	curr_implementation		8460026	0					
ANR	8460405	Argument	& r . cursor		8460026	1					
ANR	8460406	UnaryOperationExpression	& r . cursor		8460026	0					
ANR	8460407	UnaryOperator	&		8460026	0					
ANR	8460408	MemberAccess	r . cursor		8460026	1					
ANR	8460409	Identifier	r		8460026	0					
ANR	8460410	Identifier	cursor		8460026	1					
ANR	8460411	ExpressionStatement	"if_debug1m ( 'I' , mem , ""processing (%s) job\\n"" , pl_characteristics ( curr_implementation ) -> language )"	363:12:11707:11826	8460026	2	True				
ANR	8460412	CallExpression	"if_debug1m ( 'I' , mem , ""processing (%s) job\\n"" , pl_characteristics ( curr_implementation ) -> language )"		8460026	0					
ANR	8460413	Callee	if_debug1m		8460026	0					
ANR	8460414	Identifier	if_debug1m		8460026	0					
ANR	8460415	ArgumentList	'I'		8460026	1					
ANR	8460416	Argument	'I'		8460026	0					
ANR	8460417	PrimaryExpression	'I'		8460026	0					
ANR	8460418	Argument	mem		8460026	1					
ANR	8460419	Identifier	mem		8460026	0					
ANR	8460420	Argument	"""processing (%s) job\\n"""		8460026	2					
ANR	8460421	PrimaryExpression	"""processing (%s) job\\n"""		8460026	0					
ANR	8460422	Argument	pl_characteristics ( curr_implementation ) -> language		8460026	3					
ANR	8460423	PtrMemberAccess	pl_characteristics ( curr_implementation ) -> language		8460026	0					
ANR	8460424	CallExpression	pl_characteristics ( curr_implementation )		8460026	0					
ANR	8460425	Callee	pl_characteristics		8460026	0					
ANR	8460426	Identifier	pl_characteristics		8460026	0					
ANR	8460427	ArgumentList	curr_implementation		8460026	1					
ANR	8460428	Argument	curr_implementation		8460026	0					
ANR	8460429	Identifier	curr_implementation		8460026	0					
ANR	8460430	Identifier	language		8460026	1					
ANR	8460431	IfStatement	if ( code == e_ExitLanguage )		8460026	3					
ANR	8460432	Condition	code == e_ExitLanguage	365:16:11844:11865	8460026	0	True				
ANR	8460433	EqualityExpression	code == e_ExitLanguage		8460026	0		==			
ANR	8460434	Identifier	code		8460026	0					
ANR	8460435	Identifier	e_ExitLanguage		8460026	1					
ANR	8460436	CompoundStatement		83:40:3244:3244	8460026	1					
ANR	8460437	IfStatement	if ( pl_dnit_job ( curr_implementation ) < 0 )		8460026	0					
ANR	8460438	Condition	pl_dnit_job ( curr_implementation ) < 0	366:20:11890:11925	8460026	0	True				
ANR	8460439	RelationalExpression	pl_dnit_job ( curr_implementation ) < 0		8460026	0		<			
ANR	8460440	CallExpression	pl_dnit_job ( curr_implementation )		8460026	0					
ANR	8460441	Callee	pl_dnit_job		8460026	0					
ANR	8460442	Identifier	pl_dnit_job		8460026	0					
ANR	8460443	ArgumentList	curr_implementation		8460026	1					
ANR	8460444	Argument	curr_implementation		8460026	0					
ANR	8460445	Identifier	curr_implementation		8460026	0					
ANR	8460446	PrimaryExpression	0		8460026	1					
ANR	8460447	ReturnStatement	return gs_error_Fatal ;	367:20:11948:11969	8460026	1	True				
ANR	8460448	Identifier	gs_error_Fatal		8460026	0					
ANR	8460449	ExpressionStatement	new_job = true	369:16:11988:12002	8460026	1	True				
ANR	8460450	AssignmentExpression	new_job = true		8460026	0		=			
ANR	8460451	Identifier	new_job		8460026	0					
ANR	8460452	Identifier	true		8460026	1					
ANR	8460453	IfStatement	if ( curr_implementation != pjli )		8460026	2					
ANR	8460454	Condition	curr_implementation != pjli	371:20:12025:12051	8460026	0	True				
ANR	8460455	EqualityExpression	curr_implementation != pjli		8460026	0		!=			
ANR	8460456	Identifier	curr_implementation		8460026	0					
ANR	8460457	Identifier	pjli		8460026	1					
ANR	8460458	IfStatement	if ( pl_init_job ( pjli ) < 0 )		8460026	1					
ANR	8460459	Condition	pl_init_job ( pjli ) < 0	372:24:12078:12098	8460026	0	True				
ANR	8460460	RelationalExpression	pl_init_job ( pjli ) < 0		8460026	0		<			
ANR	8460461	CallExpression	pl_init_job ( pjli )		8460026	0					
ANR	8460462	Callee	pl_init_job		8460026	0					
ANR	8460463	Identifier	pl_init_job		8460026	0					
ANR	8460464	ArgumentList	pjli		8460026	1					
ANR	8460465	Argument	pjli		8460026	0					
ANR	8460466	Identifier	pjli		8460026	0					
ANR	8460467	PrimaryExpression	0		8460026	1					
ANR	8460468	ReturnStatement	return gs_error_Fatal ;	373:24:12125:12146	8460026	1	True				
ANR	8460469	Identifier	gs_error_Fatal		8460026	0					
ANR	8460470	ElseStatement	else		8460026	0					
ANR	8460471	IfStatement	if ( code < 0 )		8460026	0					
ANR	8460472	Condition	code < 0	375:23:12172:12179	8460026	0	True				
ANR	8460473	RelationalExpression	code < 0		8460026	0		<			
ANR	8460474	Identifier	code		8460026	0					
ANR	8460475	PrimaryExpression	0		8460026	1					
ANR	8460476	CompoundStatement		93:33:3558:3558	8460026	1					
ANR	8460477	ExpressionStatement	"dmprintf1 ( mem , ""Warning interpreter exited with error code %d\\n"" , code )"	376:16:12235:12358	8460026	0	True				
ANR	8460478	CallExpression	"dmprintf1 ( mem , ""Warning interpreter exited with error code %d\\n"" , code )"		8460026	0					
ANR	8460479	Callee	dmprintf1		8460026	0					
ANR	8460480	Identifier	dmprintf1		8460026	0					
ANR	8460481	ArgumentList	mem		8460026	1					
ANR	8460482	Argument	mem		8460026	0					
ANR	8460483	Identifier	mem		8460026	0					
ANR	8460484	Argument	"""Warning interpreter exited with error code %d\\n"""		8460026	1					
ANR	8460485	PrimaryExpression	"""Warning interpreter exited with error code %d\\n"""		8460026	0					
ANR	8460486	Argument	code		8460026	2					
ANR	8460487	Identifier	code		8460026	0					
ANR	8460488	ExpressionStatement	"dmprintf ( mem , ""Flushing to end of job\\n"" )"	379:16:12376:12417	8460026	1	True				
ANR	8460489	CallExpression	"dmprintf ( mem , ""Flushing to end of job\\n"" )"		8460026	0					
ANR	8460490	Callee	dmprintf		8460026	0					
ANR	8460491	Identifier	dmprintf		8460026	0					
ANR	8460492	ArgumentList	mem		8460026	1					
ANR	8460493	Argument	mem		8460026	0					
ANR	8460494	Identifier	mem		8460026	0					
ANR	8460495	Argument	"""Flushing to end of job\\n"""		8460026	1					
ANR	8460496	PrimaryExpression	"""Flushing to end of job\\n"""		8460026	0					
ANR	8460497	WhileStatement	"while ( ( pl_flush_to_eoj ( curr_implementation , & r . cursor ) ) == 0 )"		8460026	2					
ANR	8460498	Condition	"( pl_flush_to_eoj ( curr_implementation , & r . cursor ) ) == 0"	381:23:12496:12549	8460026	0	True				
ANR	8460499	EqualityExpression	"( pl_flush_to_eoj ( curr_implementation , & r . cursor ) ) == 0"		8460026	0		==			
ANR	8460500	CallExpression	"pl_flush_to_eoj ( curr_implementation , & r . cursor )"		8460026	0					
ANR	8460501	Callee	pl_flush_to_eoj		8460026	0					
ANR	8460502	Identifier	pl_flush_to_eoj		8460026	0					
ANR	8460503	ArgumentList	curr_implementation		8460026	1					
ANR	8460504	Argument	curr_implementation		8460026	0					
ANR	8460505	Identifier	curr_implementation		8460026	0					
ANR	8460506	Argument	& r . cursor		8460026	1					
ANR	8460507	UnaryOperationExpression	& r . cursor		8460026	0					
ANR	8460508	UnaryOperator	&		8460026	0					
ANR	8460509	MemberAccess	r . cursor		8460026	1					
ANR	8460510	Identifier	r		8460026	0					
ANR	8460511	Identifier	cursor		8460026	1					
ANR	8460512	PrimaryExpression	0		8460026	1					
ANR	8460513	CompoundStatement		99:79:3928:3928	8460026	1					
ANR	8460514	IfStatement	if ( pl_cursor_next ( & r ) <= 0 )		8460026	0					
ANR	8460515	Condition	pl_cursor_next ( & r ) <= 0	382:24:12578:12600	8460026	0	True				
ANR	8460516	RelationalExpression	pl_cursor_next ( & r ) <= 0		8460026	0		<=			
ANR	8460517	CallExpression	pl_cursor_next ( & r )		8460026	0					
ANR	8460518	Callee	pl_cursor_next		8460026	0					
ANR	8460519	Identifier	pl_cursor_next		8460026	0					
ANR	8460520	ArgumentList	& r		8460026	1					
ANR	8460521	Argument	& r		8460026	0					
ANR	8460522	UnaryOperationExpression	& r		8460026	0					
ANR	8460523	UnaryOperator	&		8460026	0					
ANR	8460524	Identifier	r		8460026	1					
ANR	8460525	PrimaryExpression	0		8460026	1					
ANR	8460526	CompoundStatement		100:49:3979:3979	8460026	1					
ANR	8460527	ExpressionStatement	"if_debug0m ( 'I' , mem , ""end of data found while flushing\\n"" )"	383:24:12629:12722	8460026	0	True				
ANR	8460528	CallExpression	"if_debug0m ( 'I' , mem , ""end of data found while flushing\\n"" )"		8460026	0					
ANR	8460529	Callee	if_debug0m		8460026	0					
ANR	8460530	Identifier	if_debug0m		8460026	0					
ANR	8460531	ArgumentList	'I'		8460026	1					
ANR	8460532	Argument	'I'		8460026	0					
ANR	8460533	PrimaryExpression	'I'		8460026	0					
ANR	8460534	Argument	mem		8460026	1					
ANR	8460535	Identifier	mem		8460026	0					
ANR	8460536	Argument	"""end of data found while flushing\\n"""		8460026	2					
ANR	8460537	PrimaryExpression	"""end of data found while flushing\\n"""		8460026	0					
ANR	8460538	BreakStatement	break ;	385:24:12748:12753	8460026	1	True				
ANR	8460539	ExpressionStatement	"pl_report_errors ( curr_implementation , code , pl_cursor_position ( & r ) , minst -> error_report > 0 )"	388:16:12811:12969	8460026	3	True				
ANR	8460540	CallExpression	"pl_report_errors ( curr_implementation , code , pl_cursor_position ( & r ) , minst -> error_report > 0 )"		8460026	0					
ANR	8460541	Callee	pl_report_errors		8460026	0					
ANR	8460542	Identifier	pl_report_errors		8460026	0					
ANR	8460543	ArgumentList	curr_implementation		8460026	1					
ANR	8460544	Argument	curr_implementation		8460026	0					
ANR	8460545	Identifier	curr_implementation		8460026	0					
ANR	8460546	Argument	code		8460026	1					
ANR	8460547	Identifier	code		8460026	0					
ANR	8460548	Argument	pl_cursor_position ( & r )		8460026	2					
ANR	8460549	CallExpression	pl_cursor_position ( & r )		8460026	0					
ANR	8460550	Callee	pl_cursor_position		8460026	0					
ANR	8460551	Identifier	pl_cursor_position		8460026	0					
ANR	8460552	ArgumentList	& r		8460026	1					
ANR	8460553	Argument	& r		8460026	0					
ANR	8460554	UnaryOperationExpression	& r		8460026	0					
ANR	8460555	UnaryOperator	&		8460026	0					
ANR	8460556	Identifier	r		8460026	1					
ANR	8460557	Argument	minst -> error_report > 0		8460026	3					
ANR	8460558	RelationalExpression	minst -> error_report > 0		8460026	0		>			
ANR	8460559	PtrMemberAccess	minst -> error_report		8460026	0					
ANR	8460560	Identifier	minst		8460026	0					
ANR	8460561	Identifier	error_report		8460026	1					
ANR	8460562	PrimaryExpression	0		8460026	1					
ANR	8460563	IfStatement	if ( pl_dnit_job ( curr_implementation ) < 0 )		8460026	4					
ANR	8460564	Condition	pl_dnit_job ( curr_implementation ) < 0	391:20:12991:13026	8460026	0	True				
ANR	8460565	RelationalExpression	pl_dnit_job ( curr_implementation ) < 0		8460026	0		<			
ANR	8460566	CallExpression	pl_dnit_job ( curr_implementation )		8460026	0					
ANR	8460567	Callee	pl_dnit_job		8460026	0					
ANR	8460568	Identifier	pl_dnit_job		8460026	0					
ANR	8460569	ArgumentList	curr_implementation		8460026	1					
ANR	8460570	Argument	curr_implementation		8460026	0					
ANR	8460571	Identifier	curr_implementation		8460026	0					
ANR	8460572	PrimaryExpression	0		8460026	1					
ANR	8460573	ReturnStatement	return gs_error_Fatal ;	392:20:13049:13070	8460026	1	True				
ANR	8460574	Identifier	gs_error_Fatal		8460026	0					
ANR	8460575	IfStatement	if ( pl_init_job ( pjli ) < 0 )		8460026	5					
ANR	8460576	Condition	pl_init_job ( pjli ) < 0	393:20:13092:13112	8460026	0	True				
ANR	8460577	RelationalExpression	pl_init_job ( pjli ) < 0		8460026	0		<			
ANR	8460578	CallExpression	pl_init_job ( pjli )		8460026	0					
ANR	8460579	Callee	pl_init_job		8460026	0					
ANR	8460580	Identifier	pl_init_job		8460026	0					
ANR	8460581	ArgumentList	pjli		8460026	1					
ANR	8460582	Argument	pjli		8460026	0					
ANR	8460583	Identifier	pjli		8460026	0					
ANR	8460584	PrimaryExpression	0		8460026	1					
ANR	8460585	ReturnStatement	return gs_error_Fatal ;	394:20:13135:13156	8460026	1	True				
ANR	8460586	Identifier	gs_error_Fatal		8460026	0					
ANR	8460587	ExpressionStatement	code = 0	396:16:13175:13183	8460026	6	True				
ANR	8460588	AssignmentExpression	code = 0		8460026	0		=			
ANR	8460589	Identifier	code		8460026	0					
ANR	8460590	PrimaryExpression	0		8460026	1					
ANR	8460591	ExpressionStatement	new_job = true	397:16:13201:13215	8460026	7	True				
ANR	8460592	AssignmentExpression	new_job = true		8460026	0		=			
ANR	8460593	Identifier	new_job		8460026	0					
ANR	8460594	Identifier	true		8460026	1					
ANR	8460595	ExpressionStatement	pl_cursor_close ( & r )	401:4:13251:13270	8460026	17	True				
ANR	8460596	CallExpression	pl_cursor_close ( & r )		8460026	0					
ANR	8460597	Callee	pl_cursor_close		8460026	0					
ANR	8460598	Identifier	pl_cursor_close		8460026	0					
ANR	8460599	ArgumentList	& r		8460026	1					
ANR	8460600	Argument	& r		8460026	0					
ANR	8460601	UnaryOperationExpression	& r		8460026	0					
ANR	8460602	UnaryOperator	&		8460026	0					
ANR	8460603	Identifier	r		8460026	1					
ANR	8460604	ReturnStatement	return 0 ;	402:4:13276:13284	8460026	18	True				
ANR	8460605	PrimaryExpression	0		8460026	0					
ANR	8460606	Statement	undef	403:1:13287:13291	8460026	19	True				
ANR	8460607	Statement	curr_implementation	403:7:13293:13311	8460026	20	True				
ANR	8460608	Statement	undef	404:1:13314:13318	8460026	21	True				
ANR	8460609	Statement	desired_implementation	404:7:13320:13341	8460026	22	True				
ANR	8460610	ReturnType	int		8460026	1					
ANR	8460611	Identifier	pl_main_run_file		8460026	2					
ANR	8460612	ParameterList	"pl_main_instance_t * minst , const char * filename"		8460026	3					
ANR	8460613	Parameter	pl_main_instance_t * minst	282:17:8574:8598	8460026	0	True				
ANR	8460614	ParameterType	pl_main_instance_t *		8460026	0					
ANR	8460615	Identifier	minst		8460026	1					
ANR	8460616	Parameter	const char * filename	282:44:8601:8620	8460026	1	True				
ANR	8460617	ParameterType	const char *		8460026	0					
ANR	8460618	Identifier	filename		8460026	1					
ANR	8460619	CFGEntryNode	ENTRY		8460026		True				
ANR	8460620	CFGExitNode	EXIT		8460026		True				
ANR	8460621	InfiniteForNode	true		8460026		True				
ANR	8460622	Symbol	minst -> buf		8460026						
ANR	8460623	Symbol	minst		8460026						
ANR	8460624	Symbol	pjli		8460026						
ANR	8460625	Symbol	code		8460026						
ANR	8460626	Symbol	minst -> error_report		8460026						
ANR	8460627	Symbol	minst -> memory		8460026						
ANR	8460628	Symbol	pl_init_job		8460026						
ANR	8460629	Symbol	pl_characteristics		8460026						
ANR	8460630	Symbol	pl_characteristics ( curr_implementation ) -> language		8460026						
ANR	8460631	Symbol	pl_cursor_next		8460026						
ANR	8460632	Symbol	e_ExitLanguage		8460026						
ANR	8460633	Symbol	mem		8460026						
ANR	8460634	Symbol	desired_implementation		8460026						
ANR	8460635	Symbol	pl_select_implementation		8460026						
ANR	8460636	Symbol	pl_process_file		8460026						
ANR	8460637	Symbol	* curr_implementation		8460026						
ANR	8460638	Symbol	pl_dnit_job		8460026						
ANR	8460639	Symbol	pl_flush_to_eoj		8460026						
ANR	8460640	Symbol	new_job		8460026						
ANR	8460641	Symbol	minst -> pjl_from_args		8460026						
ANR	8460642	Symbol	curr_implementation -> proc_process_file		8460026						
ANR	8460643	Symbol	gs_error_Fatal		8460026						
ANR	8460644	Symbol	mem -> gs_lib_ctx -> fstdin		8460026						
ANR	8460645	Symbol	minst -> device		8460026						
ANR	8460646	Symbol	false		8460026						
ANR	8460647	Symbol	* * mem		8460026						
ANR	8460648	Symbol	minst -> implementations		8460026						
ANR	8460649	Symbol	* minst		8460026						
ANR	8460650	Symbol	* minst -> implementations		8460026						
ANR	8460651	Symbol	pl_process		8460026						
ANR	8460652	Symbol	r		8460026						
ANR	8460653	Symbol	filename		8460026						
ANR	8460654	Symbol	curr_implementation		8460026						
ANR	8460655	Symbol	* * minst		8460026						
ANR	8460656	Symbol	pl_set_device		8460026						
ANR	8460657	Symbol	true		8460026						
ANR	8460658	Symbol	& r		8460026						
ANR	8460659	Symbol	pl_cursor_open		8460026						
ANR	8460660	Symbol	* pl_characteristics		8460026						
ANR	8460661	Symbol	r . strm		8460026						
ANR	8460662	Symbol	& r . cursor		8460026						
ANR	8460663	Symbol	* mem -> gs_lib_ctx		8460026						
ANR	8460664	Symbol	pl_remove_device		8460026						
ANR	8460665	Symbol	mem -> gs_lib_ctx		8460026						
ANR	8460666	Symbol	pl_cursor_position		8460026						
ANR	8460667	Symbol	* mem		8460026						
ANR	8460668	Function	pl_main_delete_instance	407:0:13346:14591							
ANR	8460669	FunctionDef	pl_main_delete_instance (pl_main_instance_t * minst)		8460668	0					
ANR	8460670	CompoundStatement		409:0:13401:14591	8460668	0					
ANR	8460671	IdentifierDeclStatement	gs_memory_t * mem ;	411:4:13427:13443	8460668	0	True				
ANR	8460672	IdentifierDecl	* mem		8460668	0					
ANR	8460673	IdentifierDeclType	gs_memory_t *		8460668	0					
ANR	8460674	Identifier	mem		8460668	1					
ANR	8460675	IdentifierDeclStatement	pl_interp_implementation_t * * impl ;	412:4:13449:13482	8460668	1	True				
ANR	8460676	IdentifierDecl	* * impl		8460668	0					
ANR	8460677	IdentifierDeclType	pl_interp_implementation_t * *		8460668	0					
ANR	8460678	Identifier	impl		8460668	1					
ANR	8460679	IfStatement	if ( minst == NULL )		8460668	2					
ANR	8460680	Condition	minst == NULL	414:8:13493:13505	8460668	0	True				
ANR	8460681	EqualityExpression	minst == NULL		8460668	0		==			
ANR	8460682	Identifier	minst		8460668	0					
ANR	8460683	Identifier	NULL		8460668	1					
ANR	8460684	ReturnStatement	return 0 ;	415:8:13516:13524	8460668	1	True				
ANR	8460685	PrimaryExpression	0		8460668	0					
ANR	8460686	ExpressionStatement	mem = minst -> memory	417:4:13531:13550	8460668	3	True				
ANR	8460687	AssignmentExpression	mem = minst -> memory		8460668	0		=			
ANR	8460688	Identifier	mem		8460668	0					
ANR	8460689	PtrMemberAccess	minst -> memory		8460668	1					
ANR	8460690	Identifier	minst		8460668	0					
ANR	8460691	Identifier	memory		8460668	1					
ANR	8460692	ExpressionStatement	impl = minst -> implementations	418:4:13556:13585	8460668	4	True				
ANR	8460693	AssignmentExpression	impl = minst -> implementations		8460668	0		=			
ANR	8460694	Identifier	impl		8460668	0					
ANR	8460695	PtrMemberAccess	minst -> implementations		8460668	1					
ANR	8460696	Identifier	minst		8460668	0					
ANR	8460697	Identifier	implementations		8460668	1					
ANR	8460698	IfStatement	if ( impl != NULL )		8460668	5					
ANR	8460699	Condition	impl != NULL	419:8:13595:13606	8460668	0	True				
ANR	8460700	EqualityExpression	impl != NULL		8460668	0		!=			
ANR	8460701	Identifier	impl		8460668	0					
ANR	8460702	Identifier	NULL		8460668	1					
ANR	8460703	CompoundStatement		13:8:244:253	8460668	1					
ANR	8460704	IdentifierDeclStatement	int index ;	421:8:13646:13655	8460668	0	True				
ANR	8460705	IdentifierDecl	index		8460668	0					
ANR	8460706	IdentifierDeclType	int		8460668	0					
ANR	8460707	Identifier	index		8460668	1					
ANR	8460708	ForStatement	for ( index = 0 ; impl [ index ] != 0 ; ++ index )		8460668	1					
ANR	8460709	ForInit	index = 0 ;	422:13:13670:13679	8460668	0	True				
ANR	8460710	AssignmentExpression	index = 0		8460668	0		=			
ANR	8460711	Identifier	index		8460668	0					
ANR	8460712	PrimaryExpression	0		8460668	1					
ANR	8460713	Condition	impl [ index ] != 0	422:24:13681:13696	8460668	1	True				
ANR	8460714	EqualityExpression	impl [ index ] != 0		8460668	0		!=			
ANR	8460715	ArrayIndexing	impl [ index ]		8460668	0					
ANR	8460716	Identifier	impl		8460668	0					
ANR	8460717	Identifier	index		8460668	1					
ANR	8460718	PrimaryExpression	0		8460668	1					
ANR	8460719	UnaryExpression	++ index	422:42:13699:13705	8460668	2	True				
ANR	8460720	IncDec	++		8460668	0					
ANR	8460721	Identifier	index		8460668	1					
ANR	8460722	CompoundStatement		14:51:306:306	8460668	3					
ANR	8460723	IfStatement	if ( pl_deallocate_interp_instance ( impl [ index ] ) < 0 )		8460668	0					
ANR	8460724	Condition	pl_deallocate_interp_instance ( impl [ index ] ) < 0	423:16:13726:13771	8460668	0	True				
ANR	8460725	RelationalExpression	pl_deallocate_interp_instance ( impl [ index ] ) < 0		8460668	0		<			
ANR	8460726	CallExpression	pl_deallocate_interp_instance ( impl [ index ] )		8460668	0					
ANR	8460727	Callee	pl_deallocate_interp_instance		8460668	0					
ANR	8460728	Identifier	pl_deallocate_interp_instance		8460668	0					
ANR	8460729	ArgumentList	impl [ index ]		8460668	1					
ANR	8460730	Argument	impl [ index ]		8460668	0					
ANR	8460731	ArrayIndexing	impl [ index ]		8460668	0					
ANR	8460732	Identifier	impl		8460668	0					
ANR	8460733	Identifier	index		8460668	1					
ANR	8460734	PrimaryExpression	0		8460668	1					
ANR	8460735	CompoundStatement		15:64:372:372	8460668	1					
ANR	8460736	ReturnStatement	return - 1 ;	424:16:13792:13801	8460668	0	True				
ANR	8460737	UnaryOperationExpression	- 1		8460668	0					
ANR	8460738	UnaryOperator	-		8460668	0					
ANR	8460739	PrimaryExpression	1		8460668	1					
ANR	8460740	ExpressionStatement	"gs_free_object ( mem , impl [ index ] , ""pl_main_languages_init interp"" )"	426:12:13829:13894	8460668	1	True				
ANR	8460741	CallExpression	"gs_free_object ( mem , impl [ index ] , ""pl_main_languages_init interp"" )"		8460668	0					
ANR	8460742	Callee	gs_free_object		8460668	0					
ANR	8460743	Identifier	gs_free_object		8460668	0					
ANR	8460744	ArgumentList	mem		8460668	1					
ANR	8460745	Argument	mem		8460668	0					
ANR	8460746	Identifier	mem		8460668	0					
ANR	8460747	Argument	impl [ index ]		8460668	1					
ANR	8460748	ArrayIndexing	impl [ index ]		8460668	0					
ANR	8460749	Identifier	impl		8460668	0					
ANR	8460750	Identifier	index		8460668	1					
ANR	8460751	Argument	"""pl_main_languages_init interp"""		8460668	2					
ANR	8460752	PrimaryExpression	"""pl_main_languages_init interp"""		8460668	0					
ANR	8460753	ExpressionStatement	"gs_free_object ( mem , impl , ""pl_main_languages_delete_instance()"" )"	429:8:13915:13979	8460668	2	True				
ANR	8460754	CallExpression	"gs_free_object ( mem , impl , ""pl_main_languages_delete_instance()"" )"		8460668	0					
ANR	8460755	Callee	gs_free_object		8460668	0					
ANR	8460756	Identifier	gs_free_object		8460668	0					
ANR	8460757	ArgumentList	mem		8460668	1					
ANR	8460758	Argument	mem		8460668	0					
ANR	8460759	Identifier	mem		8460668	0					
ANR	8460760	Argument	impl		8460668	1					
ANR	8460761	Identifier	impl		8460668	0					
ANR	8460762	Argument	"""pl_main_languages_delete_instance()"""		8460668	2					
ANR	8460763	PrimaryExpression	"""pl_main_languages_delete_instance()"""		8460668	0					
ANR	8460764	IfStatement	if ( minst -> device )		8460668	6					
ANR	8460765	Condition	minst -> device	433:8:14038:14050	8460668	0	True				
ANR	8460766	PtrMemberAccess	minst -> device		8460668	0					
ANR	8460767	Identifier	minst		8460668	0					
ANR	8460768	Identifier	device		8460668	1					
ANR	8460769	CompoundStatement		25:23:651:651	8460668	1					
ANR	8460770	ExpressionStatement	gs_closedevice ( minst -> device )	434:8:14063:14092	8460668	0	True				
ANR	8460771	CallExpression	gs_closedevice ( minst -> device )		8460668	0					
ANR	8460772	Callee	gs_closedevice		8460668	0					
ANR	8460773	Identifier	gs_closedevice		8460668	0					
ANR	8460774	ArgumentList	minst -> device		8460668	1					
ANR	8460775	Argument	minst -> device		8460668	0					
ANR	8460776	PtrMemberAccess	minst -> device		8460668	0					
ANR	8460777	Identifier	minst		8460668	0					
ANR	8460778	Identifier	device		8460668	1					
ANR	8460779	ExpressionStatement	"gs_unregister_root ( minst -> device -> memory , & device_root , ""pl_main_languages_delete_instance"" )"	435:8:14102:14221	8460668	1	True				
ANR	8460780	CallExpression	"gs_unregister_root ( minst -> device -> memory , & device_root , ""pl_main_languages_delete_instance"" )"		8460668	0					
ANR	8460781	Callee	gs_unregister_root		8460668	0					
ANR	8460782	Identifier	gs_unregister_root		8460668	0					
ANR	8460783	ArgumentList	minst -> device -> memory		8460668	1					
ANR	8460784	Argument	minst -> device -> memory		8460668	0					
ANR	8460785	PtrMemberAccess	minst -> device -> memory		8460668	0					
ANR	8460786	PtrMemberAccess	minst -> device		8460668	0					
ANR	8460787	Identifier	minst		8460668	0					
ANR	8460788	Identifier	device		8460668	1					
ANR	8460789	Identifier	memory		8460668	1					
ANR	8460790	Argument	& device_root		8460668	1					
ANR	8460791	UnaryOperationExpression	& device_root		8460668	0					
ANR	8460792	UnaryOperator	&		8460668	0					
ANR	8460793	Identifier	device_root		8460668	1					
ANR	8460794	Argument	"""pl_main_languages_delete_instance"""		8460668	2					
ANR	8460795	PrimaryExpression	"""pl_main_languages_delete_instance"""		8460668	0					
ANR	8460796	ExpressionStatement	"gx_device_retain ( minst -> device , false )"	437:8:14231:14269	8460668	2	True				
ANR	8460797	CallExpression	"gx_device_retain ( minst -> device , false )"		8460668	0					
ANR	8460798	Callee	gx_device_retain		8460668	0					
ANR	8460799	Identifier	gx_device_retain		8460668	0					
ANR	8460800	ArgumentList	minst -> device		8460668	1					
ANR	8460801	Argument	minst -> device		8460668	0					
ANR	8460802	PtrMemberAccess	minst -> device		8460668	0					
ANR	8460803	Identifier	minst		8460668	0					
ANR	8460804	Identifier	device		8460668	1					
ANR	8460805	Argument	false		8460668	1					
ANR	8460806	Identifier	false		8460668	0					
ANR	8460807	ExpressionStatement	minst -> device = NULL	438:8:14279:14299	8460668	3	True				
ANR	8460808	AssignmentExpression	minst -> device = NULL		8460668	0		=			
ANR	8460809	PtrMemberAccess	minst -> device		8460668	0					
ANR	8460810	Identifier	minst		8460668	0					
ANR	8460811	Identifier	device		8460668	1					
ANR	8460812	Identifier	NULL		8460668	1					
ANR	8460813	ExpressionStatement	gs_iodev_finit ( mem )	441:4:14312:14331	8460668	7	True				
ANR	8460814	CallExpression	gs_iodev_finit ( mem )		8460668	0					
ANR	8460815	Callee	gs_iodev_finit		8460668	0					
ANR	8460816	Identifier	gs_iodev_finit		8460668	0					
ANR	8460817	ArgumentList	mem		8460668	1					
ANR	8460818	Argument	mem		8460668	0					
ANR	8460819	Identifier	mem		8460668	0					
ANR	8460820	ExpressionStatement	"gs_lib_finit ( 0 , 0 , mem )"	442:4:14337:14360	8460668	8	True				
ANR	8460821	CallExpression	"gs_lib_finit ( 0 , 0 , mem )"		8460668	0					
ANR	8460822	Callee	gs_lib_finit		8460668	0					
ANR	8460823	Identifier	gs_lib_finit		8460668	0					
ANR	8460824	ArgumentList	0		8460668	1					
ANR	8460825	Argument	0		8460668	0					
ANR	8460826	PrimaryExpression	0		8460668	0					
ANR	8460827	Argument	0		8460668	1					
ANR	8460828	PrimaryExpression	0		8460668	0					
ANR	8460829	Argument	mem		8460668	2					
ANR	8460830	Identifier	mem		8460668	0					
ANR	8460831	ExpressionStatement	"gs_free_object ( mem , minst , ""pl_main_instance"" )"	443:4:14366:14412	8460668	9	True				
ANR	8460832	CallExpression	"gs_free_object ( mem , minst , ""pl_main_instance"" )"		8460668	0					
ANR	8460833	Callee	gs_free_object		8460668	0					
ANR	8460834	Identifier	gs_free_object		8460668	0					
ANR	8460835	ArgumentList	mem		8460668	1					
ANR	8460836	Argument	mem		8460668	0					
ANR	8460837	Identifier	mem		8460668	0					
ANR	8460838	Argument	minst		8460668	1					
ANR	8460839	Identifier	minst		8460668	0					
ANR	8460840	Argument	"""pl_main_instance"""		8460668	2					
ANR	8460841	PrimaryExpression	"""pl_main_instance"""		8460668	0					
ANR	8460842	ExpressionStatement	mem -> gs_lib_ctx -> top_of_system = NULL	444:4:14418:14455	8460668	10	True				
ANR	8460843	AssignmentExpression	mem -> gs_lib_ctx -> top_of_system = NULL		8460668	0		=			
ANR	8460844	PtrMemberAccess	mem -> gs_lib_ctx -> top_of_system		8460668	0					
ANR	8460845	PtrMemberAccess	mem -> gs_lib_ctx		8460668	0					
ANR	8460846	Identifier	mem		8460668	0					
ANR	8460847	Identifier	gs_lib_ctx		8460668	1					
ANR	8460848	Identifier	top_of_system		8460668	1					
ANR	8460849	Identifier	NULL		8460668	1					
ANR	8460850	ExpressionStatement	gs_memory_chunk_dump_memory ( mem )	447:4:14483:14515	8460668	11	True				
ANR	8460851	CallExpression	gs_memory_chunk_dump_memory ( mem )		8460668	0					
ANR	8460852	Callee	gs_memory_chunk_dump_memory		8460668	0					
ANR	8460853	Identifier	gs_memory_chunk_dump_memory		8460668	0					
ANR	8460854	ArgumentList	mem		8460668	1					
ANR	8460855	Argument	mem		8460668	0					
ANR	8460856	Identifier	mem		8460668	0					
ANR	8460857	ExpressionStatement	gs_malloc_release ( gs_memory_chunk_unwrap ( mem ) )	449:4:14528:14574	8460668	12	True				
ANR	8460858	CallExpression	gs_malloc_release ( gs_memory_chunk_unwrap ( mem ) )		8460668	0					
ANR	8460859	Callee	gs_malloc_release		8460668	0					
ANR	8460860	Identifier	gs_malloc_release		8460668	0					
ANR	8460861	ArgumentList	gs_memory_chunk_unwrap ( mem )		8460668	1					
ANR	8460862	Argument	gs_memory_chunk_unwrap ( mem )		8460668	0					
ANR	8460863	CallExpression	gs_memory_chunk_unwrap ( mem )		8460668	0					
ANR	8460864	Callee	gs_memory_chunk_unwrap		8460668	0					
ANR	8460865	Identifier	gs_memory_chunk_unwrap		8460668	0					
ANR	8460866	ArgumentList	mem		8460668	1					
ANR	8460867	Argument	mem		8460668	0					
ANR	8460868	Identifier	mem		8460668	0					
ANR	8460869	ReturnStatement	return 0 ;	451:4:14581:14589	8460668	13	True				
ANR	8460870	PrimaryExpression	0		8460668	0					
ANR	8460871	ReturnType	int		8460668	1					
ANR	8460872	Identifier	pl_main_delete_instance		8460668	2					
ANR	8460873	ParameterList	pl_main_instance_t * minst		8460668	3					
ANR	8460874	Parameter	pl_main_instance_t * minst	408:24:13374:13398	8460668	0	True				
ANR	8460875	ParameterType	pl_main_instance_t *		8460668	0					
ANR	8460876	Identifier	minst		8460668	1					
ANR	8460877	CFGEntryNode	ENTRY		8460668		True				
ANR	8460878	CFGExitNode	EXIT		8460668		True				
ANR	8460879	Symbol	& device_root		8460668						
ANR	8460880	Symbol	minst		8460668						
ANR	8460881	Symbol	NULL		8460668						
ANR	8460882	Symbol	minst -> memory		8460668						
ANR	8460883	Symbol	pl_deallocate_interp_instance		8460668						
ANR	8460884	Symbol	* index		8460668						
ANR	8460885	Symbol	minst -> device		8460668						
ANR	8460886	Symbol	* minst -> device		8460668						
ANR	8460887	Symbol	false		8460668						
ANR	8460888	Symbol	index		8460668						
ANR	8460889	Symbol	* impl		8460668						
ANR	8460890	Symbol	mem -> gs_lib_ctx -> top_of_system		8460668						
ANR	8460891	Symbol	* * mem		8460668						
ANR	8460892	Symbol	minst -> implementations		8460668						
ANR	8460893	Symbol	* minst		8460668						
ANR	8460894	Symbol	impl		8460668						
ANR	8460895	Symbol	mem		8460668						
ANR	8460896	Symbol	* * minst		8460668						
ANR	8460897	Symbol	minst -> device -> memory		8460668						
ANR	8460898	Symbol	gs_memory_chunk_unwrap		8460668						
ANR	8460899	Symbol	* mem -> gs_lib_ctx		8460668						
ANR	8460900	Symbol	mem -> gs_lib_ctx		8460668						
ANR	8460901	Symbol	* mem		8460668						
ANR	8460902	Function	pl_to_exit	454:0:14594:14945							
ANR	8460903	FunctionDef	pl_to_exit (gs_memory_t * mem)		8460902	0					
ANR	8460904	CompoundStatement		456:0:14627:14945	8460902	0					
ANR	8460905	IdentifierDeclStatement	pl_main_instance_t * minst = mem -> gs_lib_ctx -> top_of_system ;	457:4:14633:14691	8460902	0	True				
ANR	8460906	IdentifierDecl	* minst = mem -> gs_lib_ctx -> top_of_system		8460902	0					
ANR	8460907	IdentifierDeclType	pl_main_instance_t *		8460902	0					
ANR	8460908	Identifier	minst		8460902	1					
ANR	8460909	AssignmentExpression	* minst = mem -> gs_lib_ctx -> top_of_system		8460902	2		=			
ANR	8460910	Identifier	minst		8460902	0					
ANR	8460911	PtrMemberAccess	mem -> gs_lib_ctx -> top_of_system		8460902	1					
ANR	8460912	PtrMemberAccess	mem -> gs_lib_ctx		8460902	0					
ANR	8460913	Identifier	mem		8460902	0					
ANR	8460914	Identifier	gs_lib_ctx		8460902	1					
ANR	8460915	Identifier	top_of_system		8460902	1					
ANR	8460916	IfStatement	if ( minst -> curr_implementation && pl_remove_device ( minst -> curr_implementation ) < 0 )		8460902	1					
ANR	8460917	Condition	minst -> curr_implementation && pl_remove_device ( minst -> curr_implementation ) < 0	459:8:14741:14826	8460902	0	True				
ANR	8460918	AndExpression	minst -> curr_implementation && pl_remove_device ( minst -> curr_implementation ) < 0		8460902	0		&&			
ANR	8460919	PtrMemberAccess	minst -> curr_implementation		8460902	0					
ANR	8460920	Identifier	minst		8460902	0					
ANR	8460921	Identifier	curr_implementation		8460902	1					
ANR	8460922	RelationalExpression	pl_remove_device ( minst -> curr_implementation ) < 0		8460902	1		<			
ANR	8460923	CallExpression	pl_remove_device ( minst -> curr_implementation )		8460902	0					
ANR	8460924	Callee	pl_remove_device		8460902	0					
ANR	8460925	Identifier	pl_remove_device		8460902	0					
ANR	8460926	ArgumentList	minst -> curr_implementation		8460902	1					
ANR	8460927	Argument	minst -> curr_implementation		8460902	0					
ANR	8460928	PtrMemberAccess	minst -> curr_implementation		8460902	0					
ANR	8460929	Identifier	minst		8460902	0					
ANR	8460930	Identifier	curr_implementation		8460902	1					
ANR	8460931	PrimaryExpression	0		8460902	1					
ANR	8460932	CompoundStatement		5:61:201:201	8460902	1					
ANR	8460933	ReturnStatement	return - 1 ;	461:8:14839:14848	8460902	0	True				
ANR	8460934	UnaryOperationExpression	- 1		8460902	0					
ANR	8460935	UnaryOperator	-		8460902	0					
ANR	8460936	PrimaryExpression	1		8460902	1					
ANR	8460937	ExpressionStatement	gs_c_param_list_release ( & minst -> params )	464:4:14861:14900	8460902	2	True				
ANR	8460938	CallExpression	gs_c_param_list_release ( & minst -> params )		8460902	0					
ANR	8460939	Callee	gs_c_param_list_release		8460902	0					
ANR	8460940	Identifier	gs_c_param_list_release		8460902	0					
ANR	8460941	ArgumentList	& minst -> params		8460902	1					
ANR	8460942	Argument	& minst -> params		8460902	0					
ANR	8460943	UnaryOperationExpression	& minst -> params		8460902	0					
ANR	8460944	UnaryOperator	&		8460902	0					
ANR	8460945	PtrMemberAccess	minst -> params		8460902	1					
ANR	8460946	Identifier	minst		8460902	0					
ANR	8460947	Identifier	params		8460902	1					
ANR	8460948	ExpressionStatement	arg_finit ( & minst -> args )	465:4:14906:14929	8460902	3	True				
ANR	8460949	CallExpression	arg_finit ( & minst -> args )		8460902	0					
ANR	8460950	Callee	arg_finit		8460902	0					
ANR	8460951	Identifier	arg_finit		8460902	0					
ANR	8460952	ArgumentList	& minst -> args		8460902	1					
ANR	8460953	Argument	& minst -> args		8460902	0					
ANR	8460954	UnaryOperationExpression	& minst -> args		8460902	0					
ANR	8460955	UnaryOperator	&		8460902	0					
ANR	8460956	PtrMemberAccess	minst -> args		8460902	1					
ANR	8460957	Identifier	minst		8460902	0					
ANR	8460958	Identifier	args		8460902	1					
ANR	8460959	ReturnStatement	return 0 ;	466:4:14935:14943	8460902	4	True				
ANR	8460960	PrimaryExpression	0		8460902	0					
ANR	8460961	ReturnType	int		8460902	1					
ANR	8460962	Identifier	pl_to_exit		8460902	2					
ANR	8460963	ParameterList	gs_memory_t * mem		8460902	3					
ANR	8460964	Parameter	gs_memory_t * mem	455:11:14609:14624	8460902	0	True				
ANR	8460965	ParameterType	gs_memory_t *		8460902	0					
ANR	8460966	Identifier	mem		8460902	1					
ANR	8460967	CFGEntryNode	ENTRY		8460902		True				
ANR	8460968	CFGExitNode	EXIT		8460902		True				
ANR	8460969	Symbol	minst		8460902						
ANR	8460970	Symbol	mem		8460902						
ANR	8460971	Symbol	& minst -> args		8460902						
ANR	8460972	Symbol	* * mem		8460902						
ANR	8460973	Symbol	mem -> gs_lib_ctx -> top_of_system		8460902						
ANR	8460974	Symbol	* mem -> gs_lib_ctx		8460902						
ANR	8460975	Symbol	& minst -> params		8460902						
ANR	8460976	Symbol	mem -> gs_lib_ctx		8460902						
ANR	8460977	Symbol	pl_remove_device		8460902						
ANR	8460978	Symbol	minst -> curr_implementation		8460902						
ANR	8460979	Symbol	* mem		8460902						
ANR	8460980	Symbol	* minst		8460902						
ANR	8460981	Function	pl_main_languages_init	469:0:14948:16984							
ANR	8460982	FunctionDef	"pl_main_languages_init (gs_memory_t * mem , pl_main_instance_t * minst)"		8460981	0					
ANR	8460983	CompoundStatement		473:0:15189:16984	8460981	0					
ANR	8460984	IdentifierDeclStatement	int index ;	474:4:15195:15204	8460981	0	True				
ANR	8460985	IdentifierDecl	index		8460981	0					
ANR	8460986	IdentifierDeclType	int		8460981	0					
ANR	8460987	Identifier	index		8460981	1					
ANR	8460988	IdentifierDeclStatement	int count ;	475:4:15210:15219	8460981	1	True				
ANR	8460989	IdentifierDecl	count		8460981	0					
ANR	8460990	IdentifierDeclType	int		8460981	0					
ANR	8460991	Identifier	count		8460981	1					
ANR	8460992	IdentifierDeclStatement	int sz ;	476:4:15225:15231	8460981	2	True				
ANR	8460993	IdentifierDecl	sz		8460981	0					
ANR	8460994	IdentifierDeclType	int		8460981	0					
ANR	8460995	Identifier	sz		8460981	1					
ANR	8460996	IdentifierDeclStatement	pl_interp_implementation_t * * impls ;	477:4:15237:15271	8460981	3	True				
ANR	8460997	IdentifierDecl	* * impls		8460981	0					
ANR	8460998	IdentifierDeclType	pl_interp_implementation_t * *		8460981	0					
ANR	8460999	Identifier	impls		8460981	1					
ANR	8461000	ForStatement	for ( count = 0 ; pdl_implementations [ count ] != 0 ; ++ count )		8460981	4					
ANR	8461001	ForInit	count = 0 ;	479:9:15283:15292	8460981	0	True				
ANR	8461002	AssignmentExpression	count = 0		8460981	0		=			
ANR	8461003	Identifier	count		8460981	0					
ANR	8461004	PrimaryExpression	0		8460981	1					
ANR	8461005	Condition	pdl_implementations [ count ] != 0	479:20:15294:15324	8460981	1	True				
ANR	8461006	EqualityExpression	pdl_implementations [ count ] != 0		8460981	0		!=			
ANR	8461007	ArrayIndexing	pdl_implementations [ count ]		8460981	0					
ANR	8461008	Identifier	pdl_implementations		8460981	0					
ANR	8461009	Identifier	count		8460981	1					
ANR	8461010	PrimaryExpression	0		8460981	1					
ANR	8461011	UnaryExpression	++ count	479:53:15327:15333	8460981	2	True				
ANR	8461012	IncDec	++		8460981	0					
ANR	8461013	Identifier	count		8460981	1					
ANR	8461014	ExpressionStatement		480:8:15344:15344	8460981	3	True				
ANR	8461015	ExpressionStatement	sz = sizeof ( pl_interp_implementation_t * ) * ( count + 1 )	483:4:15404:15459	8460981	5	True				
ANR	8461016	AssignmentExpression	sz = sizeof ( pl_interp_implementation_t * ) * ( count + 1 )		8460981	0		=			
ANR	8461017	Identifier	sz		8460981	0					
ANR	8461018	MultiplicativeExpression	sizeof ( pl_interp_implementation_t * ) * ( count + 1 )		8460981	1		*			
ANR	8461019	SizeofExpression	sizeof ( pl_interp_implementation_t * )		8460981	0					
ANR	8461020	Sizeof	sizeof		8460981	0					
ANR	8461021	SizeofOperand	pl_interp_implementation_t *		8460981	1					
ANR	8461022	AdditiveExpression	count + 1		8460981	1		+			
ANR	8461023	Identifier	count		8460981	0					
ANR	8461024	PrimaryExpression	1		8460981	1					
ANR	8461025	ExpressionStatement	"impls = ( pl_interp_implementation_t * * ) gs_alloc_bytes_immovable ( mem , sz , ""pl_main_languages_init"" )"	485:4:15466:15564	8460981	6	True				
ANR	8461026	AssignmentExpression	"impls = ( pl_interp_implementation_t * * ) gs_alloc_bytes_immovable ( mem , sz , ""pl_main_languages_init"" )"		8460981	0		=			
ANR	8461027	Identifier	impls		8460981	0					
ANR	8461028	CastExpression	"( pl_interp_implementation_t * * ) gs_alloc_bytes_immovable ( mem , sz , ""pl_main_languages_init"" )"		8460981	1					
ANR	8461029	CastTarget	pl_interp_implementation_t * *		8460981	0					
ANR	8461030	CallExpression	"gs_alloc_bytes_immovable ( mem , sz , ""pl_main_languages_init"" )"		8460981	1					
ANR	8461031	Callee	gs_alloc_bytes_immovable		8460981	0					
ANR	8461032	Identifier	gs_alloc_bytes_immovable		8460981	0					
ANR	8461033	ArgumentList	mem		8460981	1					
ANR	8461034	Argument	mem		8460981	0					
ANR	8461035	Identifier	mem		8460981	0					
ANR	8461036	Argument	sz		8460981	1					
ANR	8461037	Identifier	sz		8460981	0					
ANR	8461038	Argument	"""pl_main_languages_init"""		8460981	2					
ANR	8461039	PrimaryExpression	"""pl_main_languages_init"""		8460981	0					
ANR	8461040	IfStatement	if ( impls == NULL )		8460981	7					
ANR	8461041	Condition	impls == NULL	487:8:15575:15587	8460981	0	True				
ANR	8461042	EqualityExpression	impls == NULL		8460981	0		==			
ANR	8461043	Identifier	impls		8460981	0					
ANR	8461044	Identifier	NULL		8460981	1					
ANR	8461045	GotoStatement	goto pmui_err ;	488:8:15598:15611	8460981	1	True				
ANR	8461046	Identifier	pmui_err		8460981	0					
ANR	8461047	ExpressionStatement	minst -> implementations = impls	490:4:15618:15648	8460981	8	True				
ANR	8461048	AssignmentExpression	minst -> implementations = impls		8460981	0		=			
ANR	8461049	PtrMemberAccess	minst -> implementations		8460981	0					
ANR	8461050	Identifier	minst		8460981	0					
ANR	8461051	Identifier	implementations		8460981	1					
ANR	8461052	Identifier	impls		8460981	1					
ANR	8461053	ExpressionStatement	minst -> curr_implementation = minst -> desired_implementation = NULL	491:4:15654:15719	8460981	9	True				
ANR	8461054	AssignmentExpression	minst -> curr_implementation = minst -> desired_implementation = NULL		8460981	0		=			
ANR	8461055	PtrMemberAccess	minst -> curr_implementation		8460981	0					
ANR	8461056	Identifier	minst		8460981	0					
ANR	8461057	Identifier	curr_implementation		8460981	1					
ANR	8461058	AssignmentExpression	minst -> desired_implementation = NULL		8460981	1		=			
ANR	8461059	PtrMemberAccess	minst -> desired_implementation		8460981	0					
ANR	8461060	Identifier	minst		8460981	0					
ANR	8461061	Identifier	desired_implementation		8460981	1					
ANR	8461062	Identifier	NULL		8460981	1					
ANR	8461063	ExpressionStatement	"memset ( impls , 0 , sz )"	492:4:15725:15745	8460981	10	True				
ANR	8461064	CallExpression	"memset ( impls , 0 , sz )"		8460981	0					
ANR	8461065	Callee	memset		8460981	0					
ANR	8461066	Identifier	memset		8460981	0					
ANR	8461067	ArgumentList	impls		8460981	1					
ANR	8461068	Argument	impls		8460981	0					
ANR	8461069	Identifier	impls		8460981	0					
ANR	8461070	Argument	0		8460981	1					
ANR	8461071	PrimaryExpression	0		8460981	0					
ANR	8461072	Argument	sz		8460981	2					
ANR	8461073	Identifier	sz		8460981	0					
ANR	8461074	ForStatement	for ( index = 0 ; index < count ; ++ index )		8460981	11					
ANR	8461075	ForInit	index = 0 ;	496:9:15915:15924	8460981	0	True				
ANR	8461076	AssignmentExpression	index = 0		8460981	0		=			
ANR	8461077	Identifier	index		8460981	0					
ANR	8461078	PrimaryExpression	0		8460981	1					
ANR	8461079	Condition	index < count	496:20:15926:15938	8460981	1	True				
ANR	8461080	RelationalExpression	index < count		8460981	0		<			
ANR	8461081	Identifier	index		8460981	0					
ANR	8461082	Identifier	count		8460981	1					
ANR	8461083	UnaryExpression	++ index	496:35:15941:15947	8460981	2	True				
ANR	8461084	IncDec	++		8460981	0					
ANR	8461085	Identifier	index		8460981	1					
ANR	8461086	CompoundStatement		25:8:770:778	8460981	3					
ANR	8461087	IdentifierDeclStatement	int code ;	497:8:15960:15968	8460981	0	True				
ANR	8461088	IdentifierDecl	code		8460981	0					
ANR	8461089	IdentifierDeclType	int		8460981	0					
ANR	8461090	Identifier	code		8460981	1					
ANR	8461091	ExpressionStatement	"impls [ index ] = ( pl_interp_implementation_t * ) gs_alloc_bytes_immovable ( mem , sizeof ( pl_interp_implementation_t ) , ""pl_main_languages_init interp"" )"	498:8:15978:16208	8460981	1	True				
ANR	8461092	AssignmentExpression	"impls [ index ] = ( pl_interp_implementation_t * ) gs_alloc_bytes_immovable ( mem , sizeof ( pl_interp_implementation_t ) , ""pl_main_languages_init interp"" )"		8460981	0		=			
ANR	8461093	ArrayIndexing	impls [ index ]		8460981	0					
ANR	8461094	Identifier	impls		8460981	0					
ANR	8461095	Identifier	index		8460981	1					
ANR	8461096	CastExpression	"( pl_interp_implementation_t * ) gs_alloc_bytes_immovable ( mem , sizeof ( pl_interp_implementation_t ) , ""pl_main_languages_init interp"" )"		8460981	1					
ANR	8461097	CastTarget	pl_interp_implementation_t *		8460981	0					
ANR	8461098	CallExpression	"gs_alloc_bytes_immovable ( mem , sizeof ( pl_interp_implementation_t ) , ""pl_main_languages_init interp"" )"		8460981	1					
ANR	8461099	Callee	gs_alloc_bytes_immovable		8460981	0					
ANR	8461100	Identifier	gs_alloc_bytes_immovable		8460981	0					
ANR	8461101	ArgumentList	mem		8460981	1					
ANR	8461102	Argument	mem		8460981	0					
ANR	8461103	Identifier	mem		8460981	0					
ANR	8461104	Argument	sizeof ( pl_interp_implementation_t )		8460981	1					
ANR	8461105	SizeofExpression	sizeof ( pl_interp_implementation_t )		8460981	0					
ANR	8461106	Sizeof	sizeof		8460981	0					
ANR	8461107	SizeofOperand	pl_interp_implementation_t		8460981	1					
ANR	8461108	Argument	"""pl_main_languages_init interp"""		8460981	2					
ANR	8461109	PrimaryExpression	"""pl_main_languages_init interp"""		8460981	0					
ANR	8461110	IfStatement	if ( impls [ index ] == NULL )		8460981	2					
ANR	8461111	Condition	impls [ index ] == NULL	503:12:16231:16250	8460981	0	True				
ANR	8461112	EqualityExpression	impls [ index ] == NULL		8460981	0		==			
ANR	8461113	ArrayIndexing	impls [ index ]		8460981	0					
ANR	8461114	Identifier	impls		8460981	0					
ANR	8461115	Identifier	index		8460981	1					
ANR	8461116	Identifier	NULL		8460981	1					
ANR	8461117	GotoStatement	goto pmui_err ;	504:12:16265:16278	8460981	1	True				
ANR	8461118	Identifier	pmui_err		8460981	0					
ANR	8461119	ExpressionStatement	* impls [ index ] = * pdl_implementations [ index ]	506:8:16301:16344	8460981	3	True				
ANR	8461120	AssignmentExpression	* impls [ index ] = * pdl_implementations [ index ]		8460981	0		=			
ANR	8461121	UnaryOperationExpression	* impls [ index ]		8460981	0					
ANR	8461122	UnaryOperator	*		8460981	0					
ANR	8461123	ArrayIndexing	impls [ index ]		8460981	1					
ANR	8461124	Identifier	impls		8460981	0					
ANR	8461125	Identifier	index		8460981	1					
ANR	8461126	UnaryOperationExpression	* pdl_implementations [ index ]		8460981	1					
ANR	8461127	UnaryOperator	*		8460981	0					
ANR	8461128	ArrayIndexing	pdl_implementations [ index ]		8460981	1					
ANR	8461129	Identifier	pdl_implementations		8460981	0					
ANR	8461130	Identifier	index		8460981	1					
ANR	8461131	ExpressionStatement	"code = pl_allocate_interp_instance ( impls [ index ] , mem )"	511:8:16542:16595	8460981	4	True				
ANR	8461132	AssignmentExpression	"code = pl_allocate_interp_instance ( impls [ index ] , mem )"		8460981	0		=			
ANR	8461133	Identifier	code		8460981	0					
ANR	8461134	CallExpression	"pl_allocate_interp_instance ( impls [ index ] , mem )"		8460981	1					
ANR	8461135	Callee	pl_allocate_interp_instance		8460981	0					
ANR	8461136	Identifier	pl_allocate_interp_instance		8460981	0					
ANR	8461137	ArgumentList	impls [ index ]		8460981	1					
ANR	8461138	Argument	impls [ index ]		8460981	0					
ANR	8461139	ArrayIndexing	impls [ index ]		8460981	0					
ANR	8461140	Identifier	impls		8460981	0					
ANR	8461141	Identifier	index		8460981	1					
ANR	8461142	Argument	mem		8460981	1					
ANR	8461143	Identifier	mem		8460981	0					
ANR	8461144	IfStatement	if ( code < 0 )		8460981	5					
ANR	8461145	Condition	code < 0	513:12:16610:16617	8460981	0	True				
ANR	8461146	RelationalExpression	code < 0		8460981	0		<			
ANR	8461147	Identifier	code		8460981	0					
ANR	8461148	PrimaryExpression	0		8460981	1					
ANR	8461149	CompoundStatement		41:22:1430:1430	8460981	1					
ANR	8461150	ExpressionStatement	"errprintf ( mem , ""Unable to create %s interpreter.\\n"" , pl_characteristics ( impls [ index ] ) -> language )"	514:12:16634:16779	8460981	0	True				
ANR	8461151	CallExpression	"errprintf ( mem , ""Unable to create %s interpreter.\\n"" , pl_characteristics ( impls [ index ] ) -> language )"		8460981	0					
ANR	8461152	Callee	errprintf		8460981	0					
ANR	8461153	Identifier	errprintf		8460981	0					
ANR	8461154	ArgumentList	mem		8460981	1					
ANR	8461155	Argument	mem		8460981	0					
ANR	8461156	Identifier	mem		8460981	0					
ANR	8461157	Argument	"""Unable to create %s interpreter.\\n"""		8460981	1					
ANR	8461158	PrimaryExpression	"""Unable to create %s interpreter.\\n"""		8460981	0					
ANR	8461159	Argument	pl_characteristics ( impls [ index ] ) -> language		8460981	2					
ANR	8461160	PtrMemberAccess	pl_characteristics ( impls [ index ] ) -> language		8460981	0					
ANR	8461161	CallExpression	pl_characteristics ( impls [ index ] )		8460981	0					
ANR	8461162	Callee	pl_characteristics		8460981	0					
ANR	8461163	Identifier	pl_characteristics		8460981	0					
ANR	8461164	ArgumentList	impls [ index ]		8460981	1					
ANR	8461165	Argument	impls [ index ]		8460981	0					
ANR	8461166	ArrayIndexing	impls [ index ]		8460981	0					
ANR	8461167	Identifier	impls		8460981	0					
ANR	8461168	Identifier	index		8460981	1					
ANR	8461169	Identifier	language		8460981	1					
ANR	8461170	ExpressionStatement	"gs_free_object ( mem , impls [ index ] , ""pl_main_languages_init interp"" )"	517:12:16793:16859	8460981	1	True				
ANR	8461171	CallExpression	"gs_free_object ( mem , impls [ index ] , ""pl_main_languages_init interp"" )"		8460981	0					
ANR	8461172	Callee	gs_free_object		8460981	0					
ANR	8461173	Identifier	gs_free_object		8460981	0					
ANR	8461174	ArgumentList	mem		8460981	1					
ANR	8461175	Argument	mem		8460981	0					
ANR	8461176	Identifier	mem		8460981	0					
ANR	8461177	Argument	impls [ index ]		8460981	1					
ANR	8461178	ArrayIndexing	impls [ index ]		8460981	0					
ANR	8461179	Identifier	impls		8460981	0					
ANR	8461180	Identifier	index		8460981	1					
ANR	8461181	Argument	"""pl_main_languages_init interp"""		8460981	2					
ANR	8461182	PrimaryExpression	"""pl_main_languages_init interp"""		8460981	0					
ANR	8461183	ExpressionStatement	impls [ index ] = NULL	518:12:16873:16892	8460981	2	True				
ANR	8461184	AssignmentExpression	impls [ index ] = NULL		8460981	0		=			
ANR	8461185	ArrayIndexing	impls [ index ]		8460981	0					
ANR	8461186	Identifier	impls		8460981	0					
ANR	8461187	Identifier	index		8460981	1					
ANR	8461188	Identifier	NULL		8460981	1					
ANR	8461189	GotoStatement	goto pmui_err ;	519:12:16906:16919	8460981	3	True				
ANR	8461190	Identifier	pmui_err		8460981	0					
ANR	8461191	ReturnStatement	return 0 ;	524:4:16947:16955	8460981	12	True				
ANR	8461192	PrimaryExpression	0		8460981	0					
ANR	8461193	Label	pmui_err :	526:1:16959:16967	8460981	13	True				
ANR	8461194	Identifier	pmui_err		8460981	0					
ANR	8461195	ReturnStatement	return - 1 ;	527:4:16973:16982	8460981	14	True				
ANR	8461196	UnaryOperationExpression	- 1		8460981	0					
ANR	8461197	UnaryOperator	-		8460981	0					
ANR	8461198	PrimaryExpression	1		8460981	1					
ANR	8461199	ReturnType	static int		8460981	1					
ANR	8461200	Identifier	pl_main_languages_init		8460981	2					
ANR	8461201	ParameterList	"gs_memory_t * mem , pl_main_instance_t * minst"		8460981	3					
ANR	8461202	Parameter	gs_memory_t * mem	470:23:15036:15052	8460981	0	True				
ANR	8461203	ParameterType	gs_memory_t *		8460981	0					
ANR	8461204	Identifier	mem		8460981	1					
ANR	8461205	Parameter	pl_main_instance_t * minst	471:22:15114:15139	8460981	1	True				
ANR	8461206	ParameterType	pl_main_instance_t *		8460981	0					
ANR	8461207	Identifier	minst		8460981	1					
ANR	8461208	CFGEntryNode	ENTRY		8460981		True				
ANR	8461209	CFGExitNode	EXIT		8460981		True				
ANR	8461210	Symbol	* pdl_implementations		8460981						
ANR	8461211	Symbol	minst		8460981						
ANR	8461212	Symbol	code		8460981						
ANR	8461213	Symbol	* impls [ index ]		8460981						
ANR	8461214	Symbol	* impls		8460981						
ANR	8461215	Symbol	* index		8460981						
ANR	8461216	Symbol	pdl_implementations		8460981						
ANR	8461217	Symbol	minst -> curr_implementation		8460981						
ANR	8461218	Symbol	pl_characteristics		8460981						
ANR	8461219	Symbol	* count		8460981						
ANR	8461220	Symbol	* * pdl_implementations		8460981						
ANR	8461221	Symbol	mem		8460981						
ANR	8461222	Symbol	gs_alloc_bytes_immovable		8460981						
ANR	8461223	Symbol	* pdl_implementations [ index ]		8460981						
ANR	8461224	Symbol	* * impls		8460981						
ANR	8461225	Symbol	minst -> desired_implementation		8460981						
ANR	8461226	Symbol	* * index		8460981						
ANR	8461227	Symbol	NULL		8460981						
ANR	8461228	Symbol	sz		8460981						
ANR	8461229	Symbol	count		8460981						
ANR	8461230	Symbol	index		8460981						
ANR	8461231	Symbol	impls		8460981						
ANR	8461232	Symbol	minst -> implementations		8460981						
ANR	8461233	Symbol	* minst		8460981						
ANR	8461234	Symbol	pl_allocate_interp_instance		8460981						
ANR	8461235	Symbol	pl_characteristics ( impls [ index ] ) -> language		8460981						
ANR	8461236	Symbol	* pl_characteristics		8460981						
ANR	8461237	Function	pl_main_get_instance	530:0:16987:17098							
ANR	8461238	FunctionDef	pl_main_get_instance (const gs_memory_t * mem)		8461237	0					
ANR	8461239	CompoundStatement		532:0:17053:17098	8461237	0					
ANR	8461240	ReturnStatement	return mem -> gs_lib_ctx -> top_of_system ;	533:4:17059:17096	8461237	0	True				
ANR	8461241	PtrMemberAccess	mem -> gs_lib_ctx -> top_of_system		8461237	0					
ANR	8461242	PtrMemberAccess	mem -> gs_lib_ctx		8461237	0					
ANR	8461243	Identifier	mem		8461237	0					
ANR	8461244	Identifier	gs_lib_ctx		8461237	1					
ANR	8461245	Identifier	top_of_system		8461237	1					
ANR	8461246	ReturnType	pl_main_instance_t *		8461237	1					
ANR	8461247	Identifier	pl_main_get_instance		8461237	2					
ANR	8461248	ParameterList	const gs_memory_t * mem		8461237	3					
ANR	8461249	Parameter	const gs_memory_t * mem	531:21:17029:17050	8461237	0	True				
ANR	8461250	ParameterType	const gs_memory_t *		8461237	0					
ANR	8461251	Identifier	mem		8461237	1					
ANR	8461252	CFGEntryNode	ENTRY		8461237		True				
ANR	8461253	CFGExitNode	EXIT		8461237		True				
ANR	8461254	Symbol	mem		8461237						
ANR	8461255	Symbol	mem -> gs_lib_ctx -> top_of_system		8461237						
ANR	8461256	Symbol	* * mem		8461237						
ANR	8461257	Symbol	* mem -> gs_lib_ctx		8461237						
ANR	8461258	Symbol	mem -> gs_lib_ctx		8461237						
ANR	8461259	Symbol	* mem		8461237						
ANR	8461260	Function	pl_main_get_pcl_personality	536:0:17101:17217							
ANR	8461261	FunctionDef	pl_main_get_pcl_personality (const gs_memory_t * mem)		8461260	0					
ANR	8461262	CompoundStatement		538:0:17160:17217	8461260	0					
ANR	8461263	ReturnStatement	return pl_main_get_instance ( mem ) -> pcl_personality ;	539:4:17166:17215	8461260	0	True				
ANR	8461264	PtrMemberAccess	pl_main_get_instance ( mem ) -> pcl_personality		8461260	0					
ANR	8461265	CallExpression	pl_main_get_instance ( mem )		8461260	0					
ANR	8461266	Callee	pl_main_get_instance		8461260	0					
ANR	8461267	Identifier	pl_main_get_instance		8461260	0					
ANR	8461268	ArgumentList	mem		8461260	1					
ANR	8461269	Argument	mem		8461260	0					
ANR	8461270	Identifier	mem		8461260	0					
ANR	8461271	Identifier	pcl_personality		8461260	1					
ANR	8461272	ReturnType	char *		8461260	1					
ANR	8461273	Identifier	pl_main_get_pcl_personality		8461260	2					
ANR	8461274	ParameterList	const gs_memory_t * mem		8461260	3					
ANR	8461275	Parameter	const gs_memory_t * mem	537:28:17136:17157	8461260	0	True				
ANR	8461276	ParameterType	const gs_memory_t *		8461260	0					
ANR	8461277	Identifier	mem		8461260	1					
ANR	8461278	CFGEntryNode	ENTRY		8461260		True				
ANR	8461279	CFGExitNode	EXIT		8461260		True				
ANR	8461280	Symbol	mem		8461260						
ANR	8461281	Symbol	pl_main_get_instance ( mem ) -> pcl_personality		8461260						
ANR	8461282	Symbol	* pl_main_get_instance		8461260						
ANR	8461283	Symbol	pl_main_get_instance		8461260						
ANR	8461284	Function	pl_main_alloc_instance	545:0:17324:18620							
ANR	8461285	FunctionDef	pl_main_alloc_instance (gs_memory_t * mem)		8461284	0					
ANR	8461286	CompoundStatement		547:0:17387:18620	8461284	0					
ANR	8461287	IdentifierDeclStatement	pl_main_instance_t * minst ;	548:4:17393:17418	8461284	0	True				
ANR	8461288	IdentifierDecl	* minst		8461284	0					
ANR	8461289	IdentifierDeclType	pl_main_instance_t *		8461284	0					
ANR	8461290	Identifier	minst		8461284	1					
ANR	8461291	IfStatement	if ( mem == NULL )		8461284	1					
ANR	8461292	Condition	mem == NULL	549:8:17428:17438	8461284	0	True				
ANR	8461293	EqualityExpression	mem == NULL		8461284	0		==			
ANR	8461294	Identifier	mem		8461284	0					
ANR	8461295	Identifier	NULL		8461284	1					
ANR	8461296	ReturnStatement	return NULL ;	550:8:17449:17460	8461284	1	True				
ANR	8461297	Identifier	NULL		8461284	0					
ANR	8461298	ExpressionStatement	"minst = ( pl_main_instance_t * ) gs_alloc_bytes_immovable ( mem , sizeof ( pl_main_instance_t ) , ""pl_main_instance"" )"	552:4:17467:17692	8461284	2	True				
ANR	8461299	AssignmentExpression	"minst = ( pl_main_instance_t * ) gs_alloc_bytes_immovable ( mem , sizeof ( pl_main_instance_t ) , ""pl_main_instance"" )"		8461284	0		=			
ANR	8461300	Identifier	minst		8461284	0					
ANR	8461301	CastExpression	"( pl_main_instance_t * ) gs_alloc_bytes_immovable ( mem , sizeof ( pl_main_instance_t ) , ""pl_main_instance"" )"		8461284	1					
ANR	8461302	CastTarget	pl_main_instance_t *		8461284	0					
ANR	8461303	CallExpression	"gs_alloc_bytes_immovable ( mem , sizeof ( pl_main_instance_t ) , ""pl_main_instance"" )"		8461284	1					
ANR	8461304	Callee	gs_alloc_bytes_immovable		8461284	0					
ANR	8461305	Identifier	gs_alloc_bytes_immovable		8461284	0					
ANR	8461306	ArgumentList	mem		8461284	1					
ANR	8461307	Argument	mem		8461284	0					
ANR	8461308	Identifier	mem		8461284	0					
ANR	8461309	Argument	sizeof ( pl_main_instance_t )		8461284	1					
ANR	8461310	SizeofExpression	sizeof ( pl_main_instance_t )		8461284	0					
ANR	8461311	Sizeof	sizeof		8461284	0					
ANR	8461312	SizeofOperand	pl_main_instance_t		8461284	1					
ANR	8461313	Argument	"""pl_main_instance"""		8461284	2					
ANR	8461314	PrimaryExpression	"""pl_main_instance"""		8461284	0					
ANR	8461315	IfStatement	if ( minst == NULL )		8461284	3					
ANR	8461316	Condition	minst == NULL	555:8:17702:17714	8461284	0	True				
ANR	8461317	EqualityExpression	minst == NULL		8461284	0		==			
ANR	8461318	Identifier	minst		8461284	0					
ANR	8461319	Identifier	NULL		8461284	1					
ANR	8461320	ReturnStatement	return 0 ;	556:8:17725:17733	8461284	1	True				
ANR	8461321	PrimaryExpression	0		8461284	0					
ANR	8461322	ExpressionStatement	"memset ( minst , 0 , sizeof ( * minst ) )"	558:4:17740:17772	8461284	4	True				
ANR	8461323	CallExpression	"memset ( minst , 0 , sizeof ( * minst ) )"		8461284	0					
ANR	8461324	Callee	memset		8461284	0					
ANR	8461325	Identifier	memset		8461284	0					
ANR	8461326	ArgumentList	minst		8461284	1					
ANR	8461327	Argument	minst		8461284	0					
ANR	8461328	Identifier	minst		8461284	0					
ANR	8461329	Argument	0		8461284	1					
ANR	8461330	PrimaryExpression	0		8461284	0					
ANR	8461331	Argument	sizeof ( * minst )		8461284	2					
ANR	8461332	SizeofExpression	sizeof ( * minst )		8461284	0					
ANR	8461333	Sizeof	sizeof		8461284	0					
ANR	8461334	UnaryOperationExpression	* minst		8461284	1					
ANR	8461335	UnaryOperator	*		8461284	0					
ANR	8461336	Identifier	minst		8461284	1					
ANR	8461337	ExpressionStatement	minst -> memory = mem	560:4:17779:17798	8461284	5	True				
ANR	8461338	AssignmentExpression	minst -> memory = mem		8461284	0		=			
ANR	8461339	PtrMemberAccess	minst -> memory		8461284	0					
ANR	8461340	Identifier	minst		8461284	0					
ANR	8461341	Identifier	memory		8461284	1					
ANR	8461342	Identifier	mem		8461284	1					
ANR	8461343	ExpressionStatement	minst -> pjl_from_args = false	562:4:17809:17837	8461284	6	True				
ANR	8461344	AssignmentExpression	minst -> pjl_from_args = false		8461284	0		=			
ANR	8461345	PtrMemberAccess	minst -> pjl_from_args		8461284	0					
ANR	8461346	Identifier	minst		8461284	0					
ANR	8461347	Identifier	pjl_from_args		8461284	1					
ANR	8461348	Identifier	false		8461284	1					
ANR	8461349	ExpressionStatement	minst -> error_report = - 1	563:4:17843:17867	8461284	7	True				
ANR	8461350	AssignmentExpression	minst -> error_report = - 1		8461284	0		=			
ANR	8461351	PtrMemberAccess	minst -> error_report		8461284	0					
ANR	8461352	Identifier	minst		8461284	0					
ANR	8461353	Identifier	error_report		8461284	1					
ANR	8461354	UnaryOperationExpression	- 1		8461284	1					
ANR	8461355	UnaryOperator	-		8461284	0					
ANR	8461356	PrimaryExpression	1		8461284	1					
ANR	8461357	ExpressionStatement	minst -> pause = true	564:4:17873:17892	8461284	8	True				
ANR	8461358	AssignmentExpression	minst -> pause = true		8461284	0		=			
ANR	8461359	PtrMemberAccess	minst -> pause		8461284	0					
ANR	8461360	Identifier	minst		8461284	0					
ANR	8461361	Identifier	pause		8461284	1					
ANR	8461362	Identifier	true		8461284	1					
ANR	8461363	ExpressionStatement	minst -> device = 0	565:4:17898:17915	8461284	9	True				
ANR	8461364	AssignmentExpression	minst -> device = 0		8461284	0		=			
ANR	8461365	PtrMemberAccess	minst -> device		8461284	0					
ANR	8461366	Identifier	minst		8461284	0					
ANR	8461367	Identifier	device		8461284	1					
ANR	8461368	PrimaryExpression	0		8461284	1					
ANR	8461369	ExpressionStatement	minst -> implementation = 0	566:4:17921:17946	8461284	10	True				
ANR	8461370	AssignmentExpression	minst -> implementation = 0		8461284	0		=			
ANR	8461371	PtrMemberAccess	minst -> implementation		8461284	0					
ANR	8461372	Identifier	minst		8461284	0					
ANR	8461373	Identifier	implementation		8461284	1					
ANR	8461374	PrimaryExpression	0		8461284	1					
ANR	8461375	ExpressionStatement	minst -> base_time [ 0 ] = 0	567:4:17952:17975	8461284	11	True				
ANR	8461376	AssignmentExpression	minst -> base_time [ 0 ] = 0		8461284	0		=			
ANR	8461377	ArrayIndexing	minst -> base_time [ 0 ]		8461284	0					
ANR	8461378	PtrMemberAccess	minst -> base_time		8461284	0					
ANR	8461379	Identifier	minst		8461284	0					
ANR	8461380	Identifier	base_time		8461284	1					
ANR	8461381	PrimaryExpression	0		8461284	1					
ANR	8461382	PrimaryExpression	0		8461284	1					
ANR	8461383	ExpressionStatement	minst -> base_time [ 1 ] = 0	568:4:17981:18004	8461284	12	True				
ANR	8461384	AssignmentExpression	minst -> base_time [ 1 ] = 0		8461284	0		=			
ANR	8461385	ArrayIndexing	minst -> base_time [ 1 ]		8461284	0					
ANR	8461386	PtrMemberAccess	minst -> base_time		8461284	0					
ANR	8461387	Identifier	minst		8461284	0					
ANR	8461388	Identifier	base_time		8461284	1					
ANR	8461389	PrimaryExpression	1		8461284	1					
ANR	8461390	PrimaryExpression	0		8461284	1					
ANR	8461391	ExpressionStatement	minst -> interpolate = false	569:4:18010:18036	8461284	13	True				
ANR	8461392	AssignmentExpression	minst -> interpolate = false		8461284	0		=			
ANR	8461393	PtrMemberAccess	minst -> interpolate		8461284	0					
ANR	8461394	Identifier	minst		8461284	0					
ANR	8461395	Identifier	interpolate		8461284	1					
ANR	8461396	Identifier	false		8461284	1					
ANR	8461397	ExpressionStatement	minst -> nocache = false	570:4:18042:18064	8461284	14	True				
ANR	8461398	AssignmentExpression	minst -> nocache = false		8461284	0		=			
ANR	8461399	PtrMemberAccess	minst -> nocache		8461284	0					
ANR	8461400	Identifier	minst		8461284	0					
ANR	8461401	Identifier	nocache		8461284	1					
ANR	8461402	Identifier	false		8461284	1					
ANR	8461403	ExpressionStatement	minst -> page_set_on_command_line = false	571:4:18070:18109	8461284	15	True				
ANR	8461404	AssignmentExpression	minst -> page_set_on_command_line = false		8461284	0		=			
ANR	8461405	PtrMemberAccess	minst -> page_set_on_command_line		8461284	0					
ANR	8461406	Identifier	minst		8461284	0					
ANR	8461407	Identifier	page_set_on_command_line		8461284	1					
ANR	8461408	Identifier	false		8461284	1					
ANR	8461409	ExpressionStatement	minst -> res_set_on_command_line = false	572:4:18115:18153	8461284	16	True				
ANR	8461410	AssignmentExpression	minst -> res_set_on_command_line = false		8461284	0		=			
ANR	8461411	PtrMemberAccess	minst -> res_set_on_command_line		8461284	0					
ANR	8461412	Identifier	minst		8461284	0					
ANR	8461413	Identifier	res_set_on_command_line		8461284	1					
ANR	8461414	Identifier	false		8461284	1					
ANR	8461415	ExpressionStatement	minst -> high_level_device = false	573:4:18159:18191	8461284	17	True				
ANR	8461416	AssignmentExpression	minst -> high_level_device = false		8461284	0		=			
ANR	8461417	PtrMemberAccess	minst -> high_level_device		8461284	0					
ANR	8461418	Identifier	minst		8461284	0					
ANR	8461419	Identifier	high_level_device		8461284	1					
ANR	8461420	Identifier	false		8461284	1					
ANR	8461421	ExpressionStatement	minst -> saved_pages_test_mode = false	575:4:18227:18263	8461284	18	True				
ANR	8461422	AssignmentExpression	minst -> saved_pages_test_mode = false		8461284	0		=			
ANR	8461423	PtrMemberAccess	minst -> saved_pages_test_mode		8461284	0					
ANR	8461424	Identifier	minst		8461284	0					
ANR	8461425	Identifier	saved_pages_test_mode		8461284	1					
ANR	8461426	Identifier	false		8461284	1					
ANR	8461427	ExpressionStatement	minst -> scanconverter = GS_SCANCONVERTER_DEFAULT	577:4:18276:18323	8461284	19	True				
ANR	8461428	AssignmentExpression	minst -> scanconverter = GS_SCANCONVERTER_DEFAULT		8461284	0		=			
ANR	8461429	PtrMemberAccess	minst -> scanconverter		8461284	0					
ANR	8461430	Identifier	minst		8461284	0					
ANR	8461431	Identifier	scanconverter		8461284	1					
ANR	8461432	Identifier	GS_SCANCONVERTER_DEFAULT		8461284	1					
ANR	8461433	ExpressionStatement	minst -> piccdir = NULL	578:4:18329:18350	8461284	20	True				
ANR	8461434	AssignmentExpression	minst -> piccdir = NULL		8461284	0		=			
ANR	8461435	PtrMemberAccess	minst -> piccdir		8461284	0					
ANR	8461436	Identifier	minst		8461284	0					
ANR	8461437	Identifier	piccdir		8461284	1					
ANR	8461438	Identifier	NULL		8461284	1					
ANR	8461439	ExpressionStatement	minst -> pdefault_gray_icc = NULL	579:4:18356:18387	8461284	21	True				
ANR	8461440	AssignmentExpression	minst -> pdefault_gray_icc = NULL		8461284	0		=			
ANR	8461441	PtrMemberAccess	minst -> pdefault_gray_icc		8461284	0					
ANR	8461442	Identifier	minst		8461284	0					
ANR	8461443	Identifier	pdefault_gray_icc		8461284	1					
ANR	8461444	Identifier	NULL		8461284	1					
ANR	8461445	ExpressionStatement	minst -> pdefault_rgb_icc = NULL	580:4:18393:18423	8461284	22	True				
ANR	8461446	AssignmentExpression	minst -> pdefault_rgb_icc = NULL		8461284	0		=			
ANR	8461447	PtrMemberAccess	minst -> pdefault_rgb_icc		8461284	0					
ANR	8461448	Identifier	minst		8461284	0					
ANR	8461449	Identifier	pdefault_rgb_icc		8461284	1					
ANR	8461450	Identifier	NULL		8461284	1					
ANR	8461451	ExpressionStatement	minst -> pdefault_cmyk_icc = NULL	581:4:18429:18460	8461284	23	True				
ANR	8461452	AssignmentExpression	minst -> pdefault_cmyk_icc = NULL		8461284	0		=			
ANR	8461453	PtrMemberAccess	minst -> pdefault_cmyk_icc		8461284	0					
ANR	8461454	Identifier	minst		8461284	0					
ANR	8461455	Identifier	pdefault_cmyk_icc		8461284	1					
ANR	8461456	Identifier	NULL		8461284	1					
ANR	8461457	ExpressionStatement	"strncpy ( & minst -> pcl_personality [ 0 ] , ""PCL"" , sizeof ( minst -> pcl_personality ) - 1 )"	582:4:18466:18556	8461284	24	True				
ANR	8461458	CallExpression	"strncpy ( & minst -> pcl_personality [ 0 ] , ""PCL"" , sizeof ( minst -> pcl_personality ) - 1 )"		8461284	0					
ANR	8461459	Callee	strncpy		8461284	0					
ANR	8461460	Identifier	strncpy		8461284	0					
ANR	8461461	ArgumentList	& minst -> pcl_personality [ 0 ]		8461284	1					
ANR	8461462	Argument	& minst -> pcl_personality [ 0 ]		8461284	0					
ANR	8461463	UnaryOperationExpression	& minst -> pcl_personality [ 0 ]		8461284	0					
ANR	8461464	UnaryOperator	&		8461284	0					
ANR	8461465	ArrayIndexing	minst -> pcl_personality [ 0 ]		8461284	1					
ANR	8461466	PtrMemberAccess	minst -> pcl_personality		8461284	0					
ANR	8461467	Identifier	minst		8461284	0					
ANR	8461468	Identifier	pcl_personality		8461284	1					
ANR	8461469	PrimaryExpression	0		8461284	1					
ANR	8461470	Argument	"""PCL"""		8461284	1					
ANR	8461471	PrimaryExpression	"""PCL"""		8461284	0					
ANR	8461472	Argument	sizeof ( minst -> pcl_personality ) - 1		8461284	2					
ANR	8461473	AdditiveExpression	sizeof ( minst -> pcl_personality ) - 1		8461284	0		-			
ANR	8461474	SizeofExpression	sizeof ( minst -> pcl_personality )		8461284	0					
ANR	8461475	Sizeof	sizeof		8461284	0					
ANR	8461476	PtrMemberAccess	minst -> pcl_personality		8461284	1					
ANR	8461477	Identifier	minst		8461284	0					
ANR	8461478	Identifier	pcl_personality		8461284	1					
ANR	8461479	PrimaryExpression	1		8461284	1					
ANR	8461480	ExpressionStatement	mem -> gs_lib_ctx -> top_of_system = minst	584:4:18562:18600	8461284	25	True				
ANR	8461481	AssignmentExpression	mem -> gs_lib_ctx -> top_of_system = minst		8461284	0		=			
ANR	8461482	PtrMemberAccess	mem -> gs_lib_ctx -> top_of_system		8461284	0					
ANR	8461483	PtrMemberAccess	mem -> gs_lib_ctx		8461284	0					
ANR	8461484	Identifier	mem		8461284	0					
ANR	8461485	Identifier	gs_lib_ctx		8461284	1					
ANR	8461486	Identifier	top_of_system		8461284	1					
ANR	8461487	Identifier	minst		8461284	1					
ANR	8461488	ReturnStatement	return minst ;	585:4:18606:18618	8461284	26	True				
ANR	8461489	Identifier	minst		8461284	0					
ANR	8461490	ReturnType	pl_main_instance_t *		8461284	1					
ANR	8461491	Identifier	pl_main_alloc_instance		8461284	2					
ANR	8461492	ParameterList	gs_memory_t * mem		8461284	3					
ANR	8461493	Parameter	gs_memory_t * mem	546:23:17368:17384	8461284	0	True				
ANR	8461494	ParameterType	gs_memory_t *		8461284	0					
ANR	8461495	Identifier	mem		8461284	1					
ANR	8461496	CFGEntryNode	ENTRY		8461284		True				
ANR	8461497	CFGExitNode	EXIT		8461284		True				
ANR	8461498	Symbol	minst		8461284						
ANR	8461499	Symbol	minst -> error_report		8461284						
ANR	8461500	Symbol	minst -> memory		8461284						
ANR	8461501	Symbol	minst -> saved_pages_test_mode		8461284						
ANR	8461502	Symbol	minst -> pdefault_cmyk_icc		8461284						
ANR	8461503	Symbol	* minst -> base_time		8461284						
ANR	8461504	Symbol	minst -> pause		8461284						
ANR	8461505	Symbol	mem -> gs_lib_ctx -> top_of_system		8461284						
ANR	8461506	Symbol	minst -> nocache		8461284						
ANR	8461507	Symbol	minst -> pdefault_gray_icc		8461284						
ANR	8461508	Symbol	minst -> implementation		8461284						
ANR	8461509	Symbol	mem		8461284						
ANR	8461510	Symbol	gs_alloc_bytes_immovable		8461284						
ANR	8461511	Symbol	minst -> pdefault_rgb_icc		8461284						
ANR	8461512	Symbol	minst -> page_set_on_command_line		8461284						
ANR	8461513	Symbol	minst -> pjl_from_args		8461284						
ANR	8461514	Symbol	minst -> high_level_device		8461284						
ANR	8461515	Symbol	NULL		8461284						
ANR	8461516	Symbol	minst -> pcl_personality		8461284						
ANR	8461517	Symbol	minst -> scanconverter		8461284						
ANR	8461518	Symbol	false		8461284						
ANR	8461519	Symbol	minst -> device		8461284						
ANR	8461520	Symbol	* * mem		8461284						
ANR	8461521	Symbol	minst -> res_set_on_command_line		8461284						
ANR	8461522	Symbol	* minst		8461284						
ANR	8461523	Symbol	minst -> piccdir		8461284						
ANR	8461524	Symbol	* * minst		8461284						
ANR	8461525	Symbol	minst -> base_time		8461284						
ANR	8461526	Symbol	true		8461284						
ANR	8461527	Symbol	GS_SCANCONVERTER_DEFAULT		8461284						
ANR	8461528	Symbol	* mem -> gs_lib_ctx		8461284						
ANR	8461529	Symbol	minst -> interpolate		8461284						
ANR	8461530	Symbol	mem -> gs_lib_ctx		8461284						
ANR	8461531	Symbol	* mem		8461284						
ANR	8461532	Function	pl_top_create_device	591:0:18724:20881							
ANR	8461533	FunctionDef	"pl_top_create_device (pl_main_instance_t * pti , int index , bool is_default)"		8461532	0					
ANR	8461534	CompoundStatement		593:0:18810:20881	8461532	0					
ANR	8461535	IdentifierDeclStatement	int code = 0 ;	594:4:18816:18828	8461532	0	True				
ANR	8461536	IdentifierDecl	code = 0		8461532	0					
ANR	8461537	IdentifierDeclType	int		8461532	0					
ANR	8461538	Identifier	code		8461532	1					
ANR	8461539	AssignmentExpression	code = 0		8461532	2		=			
ANR	8461540	Identifier	code		8461532	0					
ANR	8461541	PrimaryExpression	0		8461532	1					
ANR	8461542	IfStatement	if ( ! is_default || ! pti -> device )		8461532	1					
ANR	8461543	Condition	! is_default || ! pti -> device	596:8:18839:18865	8461532	0	True				
ANR	8461544	OrExpression	! is_default || ! pti -> device		8461532	0		||			
ANR	8461545	UnaryOperationExpression	! is_default		8461532	0					
ANR	8461546	UnaryOperator	!		8461532	0					
ANR	8461547	Identifier	is_default		8461532	1					
ANR	8461548	UnaryOperationExpression	! pti -> device		8461532	1					
ANR	8461549	UnaryOperator	!		8461532	0					
ANR	8461550	PtrMemberAccess	pti -> device		8461532	1					
ANR	8461551	Identifier	pti		8461532	0					
ANR	8461552	Identifier	device		8461532	1					
ANR	8461553	CompoundStatement		5:8:67:87	8461532	1					
ANR	8461554	IdentifierDeclStatement	const gx_device * dev ;	597:8:18878:18898	8461532	0	True				
ANR	8461555	IdentifierDecl	* dev		8461532	0					
ANR	8461556	IdentifierDeclType	const gx_device *		8461532	0					
ANR	8461557	Identifier	dev		8461532	1					
ANR	8461558	IfStatement	if ( pti -> device != NULL )		8461532	1					
ANR	8461559	Condition	pti -> device != NULL	603:12:19188:19206	8461532	0	True				
ANR	8461560	EqualityExpression	pti -> device != NULL		8461532	0		!=			
ANR	8461561	PtrMemberAccess	pti -> device		8461532	0					
ANR	8461562	Identifier	pti		8461532	0					
ANR	8461563	Identifier	device		8461532	1					
ANR	8461564	Identifier	NULL		8461532	1					
ANR	8461565	ExpressionStatement	pti -> device = NULL	604:12:19221:19239	8461532	1	True				
ANR	8461566	AssignmentExpression	pti -> device = NULL		8461532	0		=			
ANR	8461567	PtrMemberAccess	pti -> device		8461532	0					
ANR	8461568	Identifier	pti		8461532	0					
ANR	8461569	Identifier	device		8461532	1					
ANR	8461570	Identifier	NULL		8461532	1					
ANR	8461571	IfStatement	if ( index == - 1 )		8461532	2					
ANR	8461572	Condition	index == - 1	606:12:19254:19264	8461532	0	True				
ANR	8461573	EqualityExpression	index == - 1		8461532	0		==			
ANR	8461574	Identifier	index		8461532	0					
ANR	8461575	UnaryOperationExpression	- 1		8461532	1					
ANR	8461576	UnaryOperator	-		8461532	0					
ANR	8461577	PrimaryExpression	1		8461532	1					
ANR	8461578	CompoundStatement		14:25:456:456	8461532	1					
ANR	8461579	ExpressionStatement	dev = gs_getdefaultlibdevice ( pti -> memory )	607:12:19281:19322	8461532	0	True				
ANR	8461580	AssignmentExpression	dev = gs_getdefaultlibdevice ( pti -> memory )		8461532	0		=			
ANR	8461581	Identifier	dev		8461532	0					
ANR	8461582	CallExpression	gs_getdefaultlibdevice ( pti -> memory )		8461532	1					
ANR	8461583	Callee	gs_getdefaultlibdevice		8461532	0					
ANR	8461584	Identifier	gs_getdefaultlibdevice		8461532	0					
ANR	8461585	ArgumentList	pti -> memory		8461532	1					
ANR	8461586	Argument	pti -> memory		8461532	0					
ANR	8461587	PtrMemberAccess	pti -> memory		8461532	0					
ANR	8461588	Identifier	pti		8461532	0					
ANR	8461589	Identifier	memory		8461532	1					
ANR	8461590	ElseStatement	else		8461532	0					
ANR	8461591	CompoundStatement		18:12:550:572	8461532	0					
ANR	8461592	IdentifierDeclStatement	const gx_device * * list ;	610:12:19361:19383	8461532	0	True				
ANR	8461593	IdentifierDecl	* * list		8461532	0					
ANR	8461594	IdentifierDeclType	const gx_device * *		8461532	0					
ANR	8461595	Identifier	list		8461532	1					
ANR	8461596	Statement	gs_lib_device_list	611:12:19397:19414	8461532	1	True				
ANR	8461597	Statement	(	611:30:19415:19415	8461532	2	True				
ANR	8461598	Statement	(	611:31:19416:19416	8461532	3	True				
ANR	8461599	Statement	const	611:32:19417:19421	8461532	4	True				
ANR	8461600	Statement	gx_device	611:38:19423:19431	8461532	5	True				
ANR	8461601	Statement	*	611:48:19433:19433	8461532	6	True				
ANR	8461602	Statement	const	611:50:19435:19439	8461532	7	True				
ANR	8461603	Statement	*	611:56:19441:19441	8461532	8	True				
ANR	8461604	Statement	*	611:57:19442:19442	8461532	9	True				
ANR	8461605	Statement	)	611:58:19443:19443	8461532	10	True				
ANR	8461606	Statement	&	611:59:19444:19444	8461532	11	True				
ANR	8461607	Statement	list	611:60:19445:19448	8461532	12	True				
ANR	8461608	Statement	","	611:64:19449:19449	8461532	13	True				
ANR	8461609	Statement	NULL	611:66:19451:19454	8461532	14	True				
ANR	8461610	Statement	)	611:70:19455:19455	8461532	15	True				
ANR	8461611	ExpressionStatement		611:71:19456:19456	8461532	16	True				
ANR	8461612	ExpressionStatement	dev = list [ index ]	612:12:19470:19487	8461532	17	True				
ANR	8461613	AssignmentExpression	dev = list [ index ]		8461532	0		=			
ANR	8461614	Identifier	dev		8461532	0					
ANR	8461615	ArrayIndexing	list [ index ]		8461532	1					
ANR	8461616	Identifier	list		8461532	0					
ANR	8461617	Identifier	index		8461532	1					
ANR	8461618	ExpressionStatement	"code = gs_copydevice ( & pti -> device , dev , pti -> memory )"	614:8:19507:19559	8461532	3	True				
ANR	8461619	AssignmentExpression	"code = gs_copydevice ( & pti -> device , dev , pti -> memory )"		8461532	0		=			
ANR	8461620	Identifier	code		8461532	0					
ANR	8461621	CallExpression	"gs_copydevice ( & pti -> device , dev , pti -> memory )"		8461532	1					
ANR	8461622	Callee	gs_copydevice		8461532	0					
ANR	8461623	Identifier	gs_copydevice		8461532	0					
ANR	8461624	ArgumentList	& pti -> device		8461532	1					
ANR	8461625	Argument	& pti -> device		8461532	0					
ANR	8461626	UnaryOperationExpression	& pti -> device		8461532	0					
ANR	8461627	UnaryOperator	&		8461532	0					
ANR	8461628	PtrMemberAccess	pti -> device		8461532	1					
ANR	8461629	Identifier	pti		8461532	0					
ANR	8461630	Identifier	device		8461532	1					
ANR	8461631	Argument	dev		8461532	1					
ANR	8461632	Identifier	dev		8461532	0					
ANR	8461633	Argument	pti -> memory		8461532	2					
ANR	8461634	PtrMemberAccess	pti -> memory		8461532	0					
ANR	8461635	Identifier	pti		8461532	0					
ANR	8461636	Identifier	memory		8461532	1					
ANR	8461637	IfStatement	if ( code < 0 )		8461532	4					
ANR	8461638	Condition	code < 0	616:12:19574:19581	8461532	0	True				
ANR	8461639	RelationalExpression	code < 0		8461532	0		<			
ANR	8461640	Identifier	code		8461532	0					
ANR	8461641	PrimaryExpression	0		8461532	1					
ANR	8461642	ReturnStatement	return code ;	617:12:19596:19607	8461532	1	True				
ANR	8461643	Identifier	code		8461532	0					
ANR	8461644	IfStatement	if ( pti -> device == NULL )		8461532	5					
ANR	8461645	Condition	pti -> device == NULL	619:12:19622:19640	8461532	0	True				
ANR	8461646	EqualityExpression	pti -> device == NULL		8461532	0		==			
ANR	8461647	PtrMemberAccess	pti -> device		8461532	0					
ANR	8461648	Identifier	pti		8461532	0					
ANR	8461649	Identifier	device		8461532	1					
ANR	8461650	Identifier	NULL		8461532	1					
ANR	8461651	ReturnStatement	return gs_error_VMerror ;	620:12:19655:19678	8461532	1	True				
ANR	8461652	Identifier	gs_error_VMerror		8461532	0					
ANR	8461653	ExpressionStatement	"gs_register_struct_root ( pti -> memory , & device_root , ( void * * ) & pti -> device , ""pl_top_create_device"" )"	622:8:19689:19850	8461532	6	True				
ANR	8461654	CallExpression	"gs_register_struct_root ( pti -> memory , & device_root , ( void * * ) & pti -> device , ""pl_top_create_device"" )"		8461532	0					
ANR	8461655	Callee	gs_register_struct_root		8461532	0					
ANR	8461656	Identifier	gs_register_struct_root		8461532	0					
ANR	8461657	ArgumentList	pti -> memory		8461532	1					
ANR	8461658	Argument	pti -> memory		8461532	0					
ANR	8461659	PtrMemberAccess	pti -> memory		8461532	0					
ANR	8461660	Identifier	pti		8461532	0					
ANR	8461661	Identifier	memory		8461532	1					
ANR	8461662	Argument	& device_root		8461532	1					
ANR	8461663	UnaryOperationExpression	& device_root		8461532	0					
ANR	8461664	UnaryOperator	&		8461532	0					
ANR	8461665	Identifier	device_root		8461532	1					
ANR	8461666	Argument	( void * * ) & pti -> device		8461532	2					
ANR	8461667	CastExpression	( void * * ) & pti -> device		8461532	0					
ANR	8461668	CastTarget	void * *		8461532	0					
ANR	8461669	UnaryOperationExpression	& pti -> device		8461532	1					
ANR	8461670	UnaryOperator	&		8461532	0					
ANR	8461671	PtrMemberAccess	pti -> device		8461532	1					
ANR	8461672	Identifier	pti		8461532	0					
ANR	8461673	Identifier	device		8461532	1					
ANR	8461674	Argument	"""pl_top_create_device"""		8461532	3					
ANR	8461675	PrimaryExpression	"""pl_top_create_device"""		8461532	0					
ANR	8461676	CompoundStatement		35:12:1072:1092	8461532	7					
ANR	8461677	IdentifierDeclStatement	gs_c_param_list list ;	627:12:19883:19903	8461532	0	True				
ANR	8461678	IdentifierDecl	list		8461532	0					
ANR	8461679	IdentifierDeclType	gs_c_param_list		8461532	0					
ANR	8461680	Identifier	list		8461532	1					
ANR	8461681	ExpressionStatement	"gs_c_param_list_write ( & list , pti -> device -> memory )"	630:12:19994:20043	8461532	1	True				
ANR	8461682	CallExpression	"gs_c_param_list_write ( & list , pti -> device -> memory )"		8461532	0					
ANR	8461683	Callee	gs_c_param_list_write		8461532	0					
ANR	8461684	Identifier	gs_c_param_list_write		8461532	0					
ANR	8461685	ArgumentList	& list		8461532	1					
ANR	8461686	Argument	& list		8461532	0					
ANR	8461687	UnaryOperationExpression	& list		8461532	0					
ANR	8461688	UnaryOperator	&		8461532	0					
ANR	8461689	Identifier	list		8461532	1					
ANR	8461690	Argument	pti -> device -> memory		8461532	1					
ANR	8461691	PtrMemberAccess	pti -> device -> memory		8461532	0					
ANR	8461692	PtrMemberAccess	pti -> device		8461532	0					
ANR	8461693	Identifier	pti		8461532	0					
ANR	8461694	Identifier	device		8461532	1					
ANR	8461695	Identifier	memory		8461532	1					
ANR	8461696	ExpressionStatement	"code = gs_getdeviceparams ( pti -> device , ( gs_param_list * ) & list )"	631:12:20057:20119	8461532	2	True				
ANR	8461697	AssignmentExpression	"code = gs_getdeviceparams ( pti -> device , ( gs_param_list * ) & list )"		8461532	0		=			
ANR	8461698	Identifier	code		8461532	0					
ANR	8461699	CallExpression	"gs_getdeviceparams ( pti -> device , ( gs_param_list * ) & list )"		8461532	1					
ANR	8461700	Callee	gs_getdeviceparams		8461532	0					
ANR	8461701	Identifier	gs_getdeviceparams		8461532	0					
ANR	8461702	ArgumentList	pti -> device		8461532	1					
ANR	8461703	Argument	pti -> device		8461532	0					
ANR	8461704	PtrMemberAccess	pti -> device		8461532	0					
ANR	8461705	Identifier	pti		8461532	0					
ANR	8461706	Identifier	device		8461532	1					
ANR	8461707	Argument	( gs_param_list * ) & list		8461532	1					
ANR	8461708	CastExpression	( gs_param_list * ) & list		8461532	0					
ANR	8461709	CastTarget	gs_param_list *		8461532	0					
ANR	8461710	UnaryOperationExpression	& list		8461532	1					
ANR	8461711	UnaryOperator	&		8461532	0					
ANR	8461712	Identifier	list		8461532	1					
ANR	8461713	IfStatement	if ( code >= 0 )		8461532	3					
ANR	8461714	Condition	code >= 0	632:16:20137:20145	8461532	0	True				
ANR	8461715	RelationalExpression	code >= 0		8461532	0		>=			
ANR	8461716	Identifier	code		8461532	0					
ANR	8461717	PrimaryExpression	0		8461532	1					
ANR	8461718	CompoundStatement		40:27:1337:1337	8461532	1					
ANR	8461719	ExpressionStatement	gs_c_param_list_read ( & list )	633:16:20166:20193	8461532	0	True				
ANR	8461720	CallExpression	gs_c_param_list_read ( & list )		8461532	0					
ANR	8461721	Callee	gs_c_param_list_read		8461532	0					
ANR	8461722	Identifier	gs_c_param_list_read		8461532	0					
ANR	8461723	ArgumentList	& list		8461532	1					
ANR	8461724	Argument	& list		8461532	0					
ANR	8461725	UnaryOperationExpression	& list		8461532	0					
ANR	8461726	UnaryOperator	&		8461532	0					
ANR	8461727	Identifier	list		8461532	1					
ANR	8461728	ExpressionStatement	"code = param_read_bool ( ( gs_param_list * ) & list , ""HighLevelDevice"" , & pti -> high_level_device )"	634:16:20211:20301	8461532	1	True				
ANR	8461729	AssignmentExpression	"code = param_read_bool ( ( gs_param_list * ) & list , ""HighLevelDevice"" , & pti -> high_level_device )"		8461532	0		=			
ANR	8461730	Identifier	code		8461532	0					
ANR	8461731	CallExpression	"param_read_bool ( ( gs_param_list * ) & list , ""HighLevelDevice"" , & pti -> high_level_device )"		8461532	1					
ANR	8461732	Callee	param_read_bool		8461532	0					
ANR	8461733	Identifier	param_read_bool		8461532	0					
ANR	8461734	ArgumentList	( gs_param_list * ) & list		8461532	1					
ANR	8461735	Argument	( gs_param_list * ) & list		8461532	0					
ANR	8461736	CastExpression	( gs_param_list * ) & list		8461532	0					
ANR	8461737	CastTarget	gs_param_list *		8461532	0					
ANR	8461738	UnaryOperationExpression	& list		8461532	1					
ANR	8461739	UnaryOperator	&		8461532	0					
ANR	8461740	Identifier	list		8461532	1					
ANR	8461741	Argument	"""HighLevelDevice"""		8461532	1					
ANR	8461742	PrimaryExpression	"""HighLevelDevice"""		8461532	0					
ANR	8461743	Argument	& pti -> high_level_device		8461532	2					
ANR	8461744	UnaryOperationExpression	& pti -> high_level_device		8461532	0					
ANR	8461745	UnaryOperator	&		8461532	0					
ANR	8461746	PtrMemberAccess	pti -> high_level_device		8461532	1					
ANR	8461747	Identifier	pti		8461532	0					
ANR	8461748	Identifier	high_level_device		8461532	1					
ANR	8461749	ExpressionStatement	gs_c_param_list_release ( & list )	636:12:20329:20359	8461532	4	True				
ANR	8461750	CallExpression	gs_c_param_list_release ( & list )		8461532	0					
ANR	8461751	Callee	gs_c_param_list_release		8461532	0					
ANR	8461752	Identifier	gs_c_param_list_release		8461532	0					
ANR	8461753	ArgumentList	& list		8461532	1					
ANR	8461754	Argument	& list		8461532	0					
ANR	8461755	UnaryOperationExpression	& list		8461532	0					
ANR	8461756	UnaryOperator	&		8461532	0					
ANR	8461757	Identifier	list		8461532	1					
ANR	8461758	IfStatement	if ( code < 0 )		8461532	5					
ANR	8461759	Condition	code < 0	637:16:20377:20384	8461532	0	True				
ANR	8461760	RelationalExpression	code < 0		8461532	0		<			
ANR	8461761	Identifier	code		8461532	0					
ANR	8461762	PrimaryExpression	0		8461532	1					
ANR	8461763	ReturnStatement	return code ;	638:16:20403:20414	8461532	1	True				
ANR	8461764	Identifier	code		8461532	0					
ANR	8461765	IfStatement	"if ( strcmp ( gs_devicename ( pti -> device ) , ""display"" ) == 0 )"		8461532	8					
ANR	8461766	Condition	"strcmp ( gs_devicename ( pti -> device ) , ""display"" ) == 0"	642:12:20532:20581	8461532	0	True				
ANR	8461767	EqualityExpression	"strcmp ( gs_devicename ( pti -> device ) , ""display"" ) == 0"		8461532	0		==			
ANR	8461768	CallExpression	"strcmp ( gs_devicename ( pti -> device ) , ""display"" )"		8461532	0					
ANR	8461769	Callee	strcmp		8461532	0					
ANR	8461770	Identifier	strcmp		8461532	0					
ANR	8461771	ArgumentList	gs_devicename ( pti -> device )		8461532	1					
ANR	8461772	Argument	gs_devicename ( pti -> device )		8461532	0					
ANR	8461773	CallExpression	gs_devicename ( pti -> device )		8461532	0					
ANR	8461774	Callee	gs_devicename		8461532	0					
ANR	8461775	Identifier	gs_devicename		8461532	0					
ANR	8461776	ArgumentList	pti -> device		8461532	1					
ANR	8461777	Argument	pti -> device		8461532	0					
ANR	8461778	PtrMemberAccess	pti -> device		8461532	0					
ANR	8461779	Identifier	pti		8461532	0					
ANR	8461780	Identifier	device		8461532	1					
ANR	8461781	Argument	"""display"""		8461532	1					
ANR	8461782	PrimaryExpression	"""display"""		8461532	0					
ANR	8461783	PrimaryExpression	0		8461532	1					
ANR	8461784	CompoundStatement		51:12:1787:1810	8461532	1					
ANR	8461785	IdentifierDeclStatement	gx_device_display * ddev ;	643:12:20598:20621	8461532	0	True				
ANR	8461786	IdentifierDecl	* ddev		8461532	0					
ANR	8461787	IdentifierDeclType	gx_device_display *		8461532	0					
ANR	8461788	Identifier	ddev		8461532	1					
ANR	8461789	IfStatement	if ( ! pti -> disp )		8461532	1					
ANR	8461790	Condition	! pti -> disp	645:16:20648:20657	8461532	0	True				
ANR	8461791	UnaryOperationExpression	! pti -> disp		8461532	0					
ANR	8461792	UnaryOperator	!		8461532	0					
ANR	8461793	PtrMemberAccess	pti -> disp		8461532	1					
ANR	8461794	Identifier	pti		8461532	0					
ANR	8461795	Identifier	disp		8461532	1					
ANR	8461796	CompoundStatement		53:28:1849:1849	8461532	1					
ANR	8461797	ExpressionStatement	code = - 1	646:16:20678:20687	8461532	0	True				
ANR	8461798	AssignmentExpression	code = - 1		8461532	0		=			
ANR	8461799	Identifier	code		8461532	0					
ANR	8461800	UnaryOperationExpression	- 1		8461532	1					
ANR	8461801	UnaryOperator	-		8461532	0					
ANR	8461802	PrimaryExpression	1		8461532	1					
ANR	8461803	ElseStatement	else		8461532	0					
ANR	8461804	CompoundStatement		55:19:1897:1897	8461532	0					
ANR	8461805	ExpressionStatement	ddev = ( gx_device_display * ) pti -> device	648:16:20726:20766	8461532	0	True				
ANR	8461806	AssignmentExpression	ddev = ( gx_device_display * ) pti -> device		8461532	0		=			
ANR	8461807	Identifier	ddev		8461532	0					
ANR	8461808	CastExpression	( gx_device_display * ) pti -> device		8461532	1					
ANR	8461809	CastTarget	gx_device_display *		8461532	0					
ANR	8461810	PtrMemberAccess	pti -> device		8461532	1					
ANR	8461811	Identifier	pti		8461532	0					
ANR	8461812	Identifier	device		8461532	1					
ANR	8461813	ExpressionStatement	ddev -> callback = ( display_callback * ) pti -> disp	649:16:20784:20831	8461532	1	True				
ANR	8461814	AssignmentExpression	ddev -> callback = ( display_callback * ) pti -> disp		8461532	0		=			
ANR	8461815	PtrMemberAccess	ddev -> callback		8461532	0					
ANR	8461816	Identifier	ddev		8461532	0					
ANR	8461817	Identifier	callback		8461532	1					
ANR	8461818	CastExpression	( display_callback * ) pti -> disp		8461532	1					
ANR	8461819	CastTarget	display_callback *		8461532	0					
ANR	8461820	PtrMemberAccess	pti -> disp		8461532	1					
ANR	8461821	Identifier	pti		8461532	0					
ANR	8461822	Identifier	disp		8461532	1					
ANR	8461823	ReturnStatement	return code ;	654:4:20868:20879	8461532	2	True				
ANR	8461824	Identifier	code		8461532	0					
ANR	8461825	ReturnType	static int		8461532	1					
ANR	8461826	Identifier	pl_top_create_device		8461532	2					
ANR	8461827	ParameterList	"pl_main_instance_t * pti , int index , bool is_default"		8461532	3					
ANR	8461828	Parameter	pl_main_instance_t * pti	592:21:18756:18779	8461532	0	True				
ANR	8461829	ParameterType	pl_main_instance_t *		8461532	0					
ANR	8461830	Identifier	pti		8461532	1					
ANR	8461831	Parameter	int index	592:47:18782:18790	8461532	1	True				
ANR	8461832	ParameterType	int		8461532	0					
ANR	8461833	Identifier	index		8461532	1					
ANR	8461834	Parameter	bool is_default	592:58:18793:18807	8461532	2	True				
ANR	8461835	ParameterType	bool		8461532	0					
ANR	8461836	Identifier	is_default		8461532	1					
ANR	8461837	CFGEntryNode	ENTRY		8461532		True				
ANR	8461838	CFGExitNode	EXIT		8461532		True				
ANR	8461839	Symbol	& device_root		8461532						
ANR	8461840	Symbol	& pti -> high_level_device		8461532						
ANR	8461841	Symbol	code		8461532						
ANR	8461842	Symbol	* index		8461532						
ANR	8461843	Symbol	gs_copydevice		8461532						
ANR	8461844	Symbol	gs_getdefaultlibdevice		8461532						
ANR	8461845	Symbol	* pti		8461532						
ANR	8461846	Symbol	dev		8461532						
ANR	8461847	Symbol	& list		8461532						
ANR	8461848	Symbol	pti -> device -> memory		8461532						
ANR	8461849	Symbol	ddev		8461532						
ANR	8461850	Symbol	strcmp		8461532						
ANR	8461851	Symbol	NULL		8461532						
ANR	8461852	Symbol	pti		8461532						
ANR	8461853	Symbol	index		8461532						
ANR	8461854	Symbol	param_read_bool		8461532						
ANR	8461855	Symbol	gs_devicename		8461532						
ANR	8461856	Symbol	& pti -> device		8461532						
ANR	8461857	Symbol	is_default		8461532						
ANR	8461858	Symbol	list		8461532						
ANR	8461859	Symbol	gs_error_VMerror		8461532						
ANR	8461860	Symbol	pti -> memory		8461532						
ANR	8461861	Symbol	ddev -> callback		8461532						
ANR	8461862	Symbol	* list		8461532						
ANR	8461863	Symbol	pti -> disp		8461532						
ANR	8461864	Symbol	gs_getdeviceparams		8461532						
ANR	8461865	Symbol	* * pti		8461532						
ANR	8461866	Symbol	pti -> device		8461532						
ANR	8461867	Symbol	* ddev		8461532						
ANR	8461868	Symbol	* pti -> device		8461532						
ANR	8461869	Function	pl_main_arg_fopen	658:0:20931:21036							
ANR	8461870	FunctionDef	"pl_main_arg_fopen (const char * fname , void * ignore_data)"		8461869	0					
ANR	8461871	CompoundStatement		660:0:21001:21036	8461869	0					
ANR	8461872	ReturnStatement	"return gp_fopen ( fname , ""r"" ) ;"	661:4:21007:21034	8461869	0	True				
ANR	8461873	CallExpression	"gp_fopen ( fname , ""r"" )"		8461869	0					
ANR	8461874	Callee	gp_fopen		8461869	0					
ANR	8461875	Identifier	gp_fopen		8461869	0					
ANR	8461876	ArgumentList	fname		8461869	1					
ANR	8461877	Argument	fname		8461869	0					
ANR	8461878	Identifier	fname		8461869	0					
ANR	8461879	Argument	"""r"""		8461869	1					
ANR	8461880	PrimaryExpression	"""r"""		8461869	0					
ANR	8461881	ReturnType	static FILE *		8461869	1					
ANR	8461882	Identifier	pl_main_arg_fopen		8461869	2					
ANR	8461883	ParameterList	"const char * fname , void * ignore_data"		8461869	3					
ANR	8461884	Parameter	const char * fname	659:18:20963:20979	8461869	0	True				
ANR	8461885	ParameterType	const char *		8461869	0					
ANR	8461886	Identifier	fname		8461869	1					
ANR	8461887	Parameter	void * ignore_data	659:37:20982:20998	8461869	1	True				
ANR	8461888	ParameterType	void *		8461869	0					
ANR	8461889	Identifier	ignore_data		8461869	1					
ANR	8461890	CFGEntryNode	ENTRY		8461869		True				
ANR	8461891	CFGExitNode	EXIT		8461869		True				
ANR	8461892	Symbol	fname		8461869						
ANR	8461893	Symbol	ignore_data		8461869						
ANR	8461894	Symbol	gp_fopen		8461869						
ANR	8461895	Function	set_debug_flags	664:0:21039:21206							
ANR	8461896	FunctionDef	"set_debug_flags (const char * arg , char * flags)"		8461895	0					
ANR	8461897	CompoundStatement		666:0:21097:21206	8461895	0					
ANR	8461898	IdentifierDeclStatement	"byte value = ( * arg == '-' ? ( ++ arg , 0 ) : 0xff ) ;"	667:4:21103:21149	8461895	0	True				
ANR	8461899	IdentifierDecl	"value = ( * arg == '-' ? ( ++ arg , 0 ) : 0xff )"		8461895	0					
ANR	8461900	IdentifierDeclType	byte		8461895	0					
ANR	8461901	Identifier	value		8461895	1					
ANR	8461902	AssignmentExpression	"value = ( * arg == '-' ? ( ++ arg , 0 ) : 0xff )"		8461895	2		=			
ANR	8461903	Identifier	value		8461895	0					
ANR	8461904	ConditionalExpression	"* arg == '-' ? ( ++ arg , 0 ) : 0xff"		8461895	1					
ANR	8461905	Condition	* arg == '-'		8461895	0					
ANR	8461906	EqualityExpression	* arg == '-'		8461895	0		==			
ANR	8461907	UnaryOperationExpression	* arg		8461895	0					
ANR	8461908	UnaryOperator	*		8461895	0					
ANR	8461909	Identifier	arg		8461895	1					
ANR	8461910	PrimaryExpression	'-'		8461895	1					
ANR	8461911	Expression	"++ arg , 0"		8461895	1					
ANR	8461912	UnaryExpression	++ arg		8461895	0					
ANR	8461913	IncDec	++		8461895	0					
ANR	8461914	Identifier	arg		8461895	1					
ANR	8461915	PrimaryExpression	0		8461895	1					
ANR	8461916	PrimaryExpression	0xff		8461895	2					
ANR	8461917	WhileStatement	while ( * arg )		8461895	1					
ANR	8461918	Condition	* arg	669:11:21163:21166	8461895	0	True				
ANR	8461919	UnaryOperationExpression	* arg		8461895	0					
ANR	8461920	UnaryOperator	*		8461895	0					
ANR	8461921	Identifier	arg		8461895	1					
ANR	8461922	ExpressionStatement	flags [ * arg ++ & 127 ] = value	670:8:21177:21204	8461895	1	True				
ANR	8461923	AssignmentExpression	flags [ * arg ++ & 127 ] = value		8461895	0		=			
ANR	8461924	ArrayIndexing	flags [ * arg ++ & 127 ]		8461895	0					
ANR	8461925	Identifier	flags		8461895	0					
ANR	8461926	BitAndExpression	* arg ++ & 127		8461895	1		&			
ANR	8461927	UnaryOperationExpression	* arg ++		8461895	0					
ANR	8461928	UnaryOperator	*		8461895	0					
ANR	8461929	PostIncDecOperationExpression	arg ++		8461895	1					
ANR	8461930	Identifier	arg		8461895	0					
ANR	8461931	IncDec	++		8461895	1					
ANR	8461932	PrimaryExpression	127		8461895	1					
ANR	8461933	Identifier	value		8461895	1					
ANR	8461934	ReturnType	static void		8461895	1					
ANR	8461935	Identifier	set_debug_flags		8461895	2					
ANR	8461936	ParameterList	"const char * arg , char * flags"		8461895	3					
ANR	8461937	Parameter	const char * arg	665:16:21067:21081	8461895	0	True				
ANR	8461938	ParameterType	const char *		8461895	0					
ANR	8461939	Identifier	arg		8461895	1					
ANR	8461940	Parameter	char * flags	665:33:21084:21094	8461895	1	True				
ANR	8461941	ParameterType	char *		8461895	0					
ANR	8461942	Identifier	flags		8461895	1					
ANR	8461943	CFGEntryNode	ENTRY		8461895		True				
ANR	8461944	CFGExitNode	EXIT		8461895		True				
ANR	8461945	Symbol	* flags		8461895						
ANR	8461946	Symbol	* arg ++		8461895						
ANR	8461947	Symbol	arg		8461895						
ANR	8461948	Symbol	flags		8461895						
ANR	8461949	Symbol	* * arg ++		8461895						
ANR	8461950	Symbol	value		8461895						
ANR	8461951	Symbol	* arg		8461895						
ANR	8461952	Function	parse_floats	678:0:21412:22034							
ANR	8461953	FunctionDef	"parse_floats (gs_memory_t * mem , uint arg_count , char * arg , float * f)"		8461952	0					
ANR	8461954	CompoundStatement		680:0:21492:22034	8461952	0					
ANR	8461955	IdentifierDeclStatement	int float_index = 0 ;	681:4:21498:21517	8461952	0	True				
ANR	8461956	IdentifierDecl	float_index = 0		8461952	0					
ANR	8461957	IdentifierDeclType	int		8461952	0					
ANR	8461958	Identifier	float_index		8461952	1					
ANR	8461959	AssignmentExpression	float_index = 0		8461952	2		=			
ANR	8461960	Identifier	float_index		8461952	0					
ANR	8461961	PrimaryExpression	0		8461952	1					
ANR	8461962	IdentifierDeclStatement	"char * tok , * l = NULL ;"	682:4:21523:21543	8461952	1	True				
ANR	8461963	IdentifierDecl	* tok		8461952	0					
ANR	8461964	IdentifierDeclType	char *		8461952	0					
ANR	8461965	Identifier	tok		8461952	1					
ANR	8461966	IdentifierDecl	* l = NULL		8461952	1					
ANR	8461967	IdentifierDeclType	char *		8461952	0					
ANR	8461968	Identifier	l		8461952	1					
ANR	8461969	AssignmentExpression	* l = NULL		8461952	2		=			
ANR	8461970	Identifier	NULL		8461952	0					
ANR	8461971	Identifier	NULL		8461952	1					
ANR	8461972	IdentifierDeclStatement	"char * s = arg_copy ( arg , mem ) ;"	684:4:21611:21639	8461952	2	True				
ANR	8461973	IdentifierDecl	"* s = arg_copy ( arg , mem )"		8461952	0					
ANR	8461974	IdentifierDeclType	char *		8461952	0					
ANR	8461975	Identifier	s		8461952	1					
ANR	8461976	AssignmentExpression	"* s = arg_copy ( arg , mem )"		8461952	2		=			
ANR	8461977	Identifier	s		8461952	0					
ANR	8461978	CallExpression	"arg_copy ( arg , mem )"		8461952	1					
ANR	8461979	Callee	arg_copy		8461952	0					
ANR	8461980	Identifier	arg_copy		8461952	0					
ANR	8461981	ArgumentList	arg		8461952	1					
ANR	8461982	Argument	arg		8461952	0					
ANR	8461983	Identifier	arg		8461952	0					
ANR	8461984	Argument	mem		8461952	1					
ANR	8461985	Identifier	mem		8461952	0					
ANR	8461986	IfStatement	if ( s == NULL )		8461952	3					
ANR	8461987	Condition	s == NULL	685:8:21649:21657	8461952	0	True				
ANR	8461988	EqualityExpression	s == NULL		8461952	0		==			
ANR	8461989	Identifier	s		8461952	0					
ANR	8461990	Identifier	NULL		8461952	1					
ANR	8461991	ReturnStatement	return - 1 ;	686:8:21668:21677	8461952	1	True				
ANR	8461992	UnaryOperationExpression	- 1		8461952	0					
ANR	8461993	UnaryOperator	-		8461952	0					
ANR	8461994	PrimaryExpression	1		8461952	1					
ANR	8461995	ExpressionStatement	"tok = gs_strtok ( s , "" \\tx"" , & l )"	689:4:21744:21774	8461952	4	True				
ANR	8461996	AssignmentExpression	"tok = gs_strtok ( s , "" \\tx"" , & l )"		8461952	0		=			
ANR	8461997	Identifier	tok		8461952	0					
ANR	8461998	CallExpression	"gs_strtok ( s , "" \\tx"" , & l )"		8461952	1					
ANR	8461999	Callee	gs_strtok		8461952	0					
ANR	8462000	Identifier	gs_strtok		8461952	0					
ANR	8462001	ArgumentList	s		8461952	1					
ANR	8462002	Argument	s		8461952	0					
ANR	8462003	Identifier	s		8461952	0					
ANR	8462004	Argument	""" \\tx"""		8461952	1					
ANR	8462005	PrimaryExpression	""" \\tx"""		8461952	0					
ANR	8462006	Argument	& l		8461952	2					
ANR	8462007	UnaryOperationExpression	& l		8461952	0					
ANR	8462008	UnaryOperator	&		8461952	0					
ANR	8462009	Identifier	l		8461952	1					
ANR	8462010	WhileStatement	while ( tok != NULL && float_index < arg_count )		8461952	5					
ANR	8462011	Condition	tok != NULL && float_index < arg_count	690:11:21787:21824	8461952	0	True				
ANR	8462012	AndExpression	tok != NULL && float_index < arg_count		8461952	0		&&			
ANR	8462013	EqualityExpression	tok != NULL		8461952	0		!=			
ANR	8462014	Identifier	tok		8461952	0					
ANR	8462015	Identifier	NULL		8461952	1					
ANR	8462016	RelationalExpression	float_index < arg_count		8461952	1		<			
ANR	8462017	Identifier	float_index		8461952	0					
ANR	8462018	Identifier	arg_count		8461952	1					
ANR	8462019	CompoundStatement		11:51:334:334	8461952	1					
ANR	8462020	ExpressionStatement	f [ float_index ++ ] = atof ( tok )	691:8:21837:21865	8461952	0	True				
ANR	8462021	AssignmentExpression	f [ float_index ++ ] = atof ( tok )		8461952	0		=			
ANR	8462022	ArrayIndexing	f [ float_index ++ ]		8461952	0					
ANR	8462023	Identifier	f		8461952	0					
ANR	8462024	PostIncDecOperationExpression	float_index ++		8461952	1					
ANR	8462025	Identifier	float_index		8461952	0					
ANR	8462026	IncDec	++		8461952	1					
ANR	8462027	CallExpression	atof ( tok )		8461952	1					
ANR	8462028	Callee	atof		8461952	0					
ANR	8462029	Identifier	atof		8461952	0					
ANR	8462030	ArgumentList	tok		8461952	1					
ANR	8462031	Argument	tok		8461952	0					
ANR	8462032	Identifier	tok		8461952	0					
ANR	8462033	ExpressionStatement	"tok = gs_strtok ( NULL , "" \\tx"" , & l )"	692:8:21875:21908	8461952	1	True				
ANR	8462034	AssignmentExpression	"tok = gs_strtok ( NULL , "" \\tx"" , & l )"		8461952	0		=			
ANR	8462035	Identifier	tok		8461952	0					
ANR	8462036	CallExpression	"gs_strtok ( NULL , "" \\tx"" , & l )"		8461952	1					
ANR	8462037	Callee	gs_strtok		8461952	0					
ANR	8462038	Identifier	gs_strtok		8461952	0					
ANR	8462039	ArgumentList	NULL		8461952	1					
ANR	8462040	Argument	NULL		8461952	0					
ANR	8462041	Identifier	NULL		8461952	0					
ANR	8462042	Argument	""" \\tx"""		8461952	1					
ANR	8462043	PrimaryExpression	""" \\tx"""		8461952	0					
ANR	8462044	Argument	& l		8461952	2					
ANR	8462045	UnaryOperationExpression	& l		8461952	0					
ANR	8462046	UnaryOperator	&		8461952	0					
ANR	8462047	Identifier	l		8461952	1					
ANR	8462048	ExpressionStatement	"gs_free_object ( mem , s , ""parse_floats()"" )"	695:4:21921:21961	8461952	6	True				
ANR	8462049	CallExpression	"gs_free_object ( mem , s , ""parse_floats()"" )"		8461952	0					
ANR	8462050	Callee	gs_free_object		8461952	0					
ANR	8462051	Identifier	gs_free_object		8461952	0					
ANR	8462052	ArgumentList	mem		8461952	1					
ANR	8462053	Argument	mem		8461952	0					
ANR	8462054	Identifier	mem		8461952	0					
ANR	8462055	Argument	s		8461952	1					
ANR	8462056	Identifier	s		8461952	0					
ANR	8462057	Argument	"""parse_floats()"""		8461952	2					
ANR	8462058	PrimaryExpression	"""parse_floats()"""		8461952	0					
ANR	8462059	ReturnStatement	return float_index ;	698:4:22014:22032	8461952	7	True				
ANR	8462060	Identifier	float_index		8461952	0					
ANR	8462061	ReturnType	static int		8461952	1					
ANR	8462062	Identifier	parse_floats		8461952	2					
ANR	8462063	ParameterList	"gs_memory_t * mem , uint arg_count , char * arg , float * f"		8461952	3					
ANR	8462064	Parameter	gs_memory_t * mem	679:13:21436:21452	8461952	0	True				
ANR	8462065	ParameterType	gs_memory_t *		8461952	0					
ANR	8462066	Identifier	mem		8461952	1					
ANR	8462067	Parameter	uint arg_count	679:32:21455:21468	8461952	1	True				
ANR	8462068	ParameterType	uint		8461952	0					
ANR	8462069	Identifier	arg_count		8461952	1					
ANR	8462070	Parameter	char * arg	679:48:21471:21479	8461952	2	True				
ANR	8462071	ParameterType	char *		8461952	0					
ANR	8462072	Identifier	arg		8461952	1					
ANR	8462073	Parameter	float * f	679:59:21482:21489	8461952	3	True				
ANR	8462074	ParameterType	float *		8461952	0					
ANR	8462075	Identifier	f		8461952	1					
ANR	8462076	CFGEntryNode	ENTRY		8461952		True				
ANR	8462077	CFGExitNode	EXIT		8461952		True				
ANR	8462078	Symbol	NULL		8461952						
ANR	8462079	Symbol	f		8461952						
ANR	8462080	Symbol	gs_strtok		8461952						
ANR	8462081	Symbol	atof		8461952						
ANR	8462082	Symbol	float_index		8461952						
ANR	8462083	Symbol	l		8461952						
ANR	8462084	Symbol	* f		8461952						
ANR	8462085	Symbol	tok		8461952						
ANR	8462086	Symbol	& l		8461952						
ANR	8462087	Symbol	s		8461952						
ANR	8462088	Symbol	mem		8461952						
ANR	8462089	Symbol	arg		8461952						
ANR	8462090	Symbol	arg_copy		8461952						
ANR	8462091	Symbol	arg_count		8461952						
ANR	8462092	Function	check_for_special_int	701:0:22037:22624							
ANR	8462093	FunctionDef	"check_for_special_int (pl_main_instance_t * pmi , const char * arg , int b)"		8462092	0					
ANR	8462094	CompoundStatement		702:0:22120:22624	8462092	0					
ANR	8462095	IfStatement	"if ( ! strncmp ( arg , ""BATCH"" , 5 ) )"		8462092	0					
ANR	8462096	Condition	"! strncmp ( arg , ""BATCH"" , 5 )"	703:8:22130:22154	8462092	0	True				
ANR	8462097	UnaryOperationExpression	"! strncmp ( arg , ""BATCH"" , 5 )"		8462092	0					
ANR	8462098	UnaryOperator	!		8462092	0					
ANR	8462099	CallExpression	"strncmp ( arg , ""BATCH"" , 5 )"		8462092	1					
ANR	8462100	Callee	strncmp		8462092	0					
ANR	8462101	Identifier	strncmp		8462092	0					
ANR	8462102	ArgumentList	arg		8462092	1					
ANR	8462103	Argument	arg		8462092	0					
ANR	8462104	Identifier	arg		8462092	0					
ANR	8462105	Argument	"""BATCH"""		8462092	1					
ANR	8462106	PrimaryExpression	"""BATCH"""		8462092	0					
ANR	8462107	Argument	5		8462092	2					
ANR	8462108	PrimaryExpression	5		8462092	0					
ANR	8462109	ReturnStatement	return ( b == 0 ) ? 0 : gs_note_error ( gs_error_rangecheck ) ;	704:8:22165:22221	8462092	1	True				
ANR	8462110	ConditionalExpression	( b == 0 ) ? 0 : gs_note_error ( gs_error_rangecheck )		8462092	0					
ANR	8462111	Condition	b == 0		8462092	0					
ANR	8462112	EqualityExpression	b == 0		8462092	0		==			
ANR	8462113	Identifier	b		8462092	0					
ANR	8462114	PrimaryExpression	0		8462092	1					
ANR	8462115	PrimaryExpression	0		8462092	1					
ANR	8462116	CallExpression	gs_note_error ( gs_error_rangecheck )		8462092	2					
ANR	8462117	Callee	gs_note_error		8462092	0					
ANR	8462118	Identifier	gs_note_error		8462092	0					
ANR	8462119	ArgumentList	gs_error_rangecheck		8462092	1					
ANR	8462120	Argument	gs_error_rangecheck		8462092	0					
ANR	8462121	Identifier	gs_error_rangecheck		8462092	0					
ANR	8462122	IfStatement	"if ( ! strncmp ( arg , ""NOPAUSE"" , 6 ) )"		8462092	1					
ANR	8462123	Condition	"! strncmp ( arg , ""NOPAUSE"" , 6 )"	705:8:22231:22257	8462092	0	True				
ANR	8462124	UnaryOperationExpression	"! strncmp ( arg , ""NOPAUSE"" , 6 )"		8462092	0					
ANR	8462125	UnaryOperator	!		8462092	0					
ANR	8462126	CallExpression	"strncmp ( arg , ""NOPAUSE"" , 6 )"		8462092	1					
ANR	8462127	Callee	strncmp		8462092	0					
ANR	8462128	Identifier	strncmp		8462092	0					
ANR	8462129	ArgumentList	arg		8462092	1					
ANR	8462130	Argument	arg		8462092	0					
ANR	8462131	Identifier	arg		8462092	0					
ANR	8462132	Argument	"""NOPAUSE"""		8462092	1					
ANR	8462133	PrimaryExpression	"""NOPAUSE"""		8462092	0					
ANR	8462134	Argument	6		8462092	2					
ANR	8462135	PrimaryExpression	6		8462092	0					
ANR	8462136	CompoundStatement		4:37:139:139	8462092	1					
ANR	8462137	ExpressionStatement	pmi -> pause = ! b	706:8:22270:22285	8462092	0	True				
ANR	8462138	AssignmentExpression	pmi -> pause = ! b		8462092	0		=			
ANR	8462139	PtrMemberAccess	pmi -> pause		8462092	0					
ANR	8462140	Identifier	pmi		8462092	0					
ANR	8462141	Identifier	pause		8462092	1					
ANR	8462142	UnaryOperationExpression	! b		8462092	1					
ANR	8462143	UnaryOperator	!		8462092	0					
ANR	8462144	Identifier	b		8462092	1					
ANR	8462145	ReturnStatement	return 0 ;	707:8:22295:22303	8462092	1	True				
ANR	8462146	PrimaryExpression	0		8462092	0					
ANR	8462147	IfStatement	"if ( ! strncmp ( arg , ""DOINTERPOLATE"" , 13 ) )"		8462092	2					
ANR	8462148	Condition	"! strncmp ( arg , ""DOINTERPOLATE"" , 13 )"	709:8:22319:22352	8462092	0	True				
ANR	8462149	UnaryOperationExpression	"! strncmp ( arg , ""DOINTERPOLATE"" , 13 )"		8462092	0					
ANR	8462150	UnaryOperator	!		8462092	0					
ANR	8462151	CallExpression	"strncmp ( arg , ""DOINTERPOLATE"" , 13 )"		8462092	1					
ANR	8462152	Callee	strncmp		8462092	0					
ANR	8462153	Identifier	strncmp		8462092	0					
ANR	8462154	ArgumentList	arg		8462092	1					
ANR	8462155	Argument	arg		8462092	0					
ANR	8462156	Identifier	arg		8462092	0					
ANR	8462157	Argument	"""DOINTERPOLATE"""		8462092	1					
ANR	8462158	PrimaryExpression	"""DOINTERPOLATE"""		8462092	0					
ANR	8462159	Argument	13		8462092	2					
ANR	8462160	PrimaryExpression	13		8462092	0					
ANR	8462161	CompoundStatement		8:44:234:234	8462092	1					
ANR	8462162	ExpressionStatement	pmi -> interpolate = ! ! b	710:8:22365:22387	8462092	0	True				
ANR	8462163	AssignmentExpression	pmi -> interpolate = ! ! b		8462092	0		=			
ANR	8462164	PtrMemberAccess	pmi -> interpolate		8462092	0					
ANR	8462165	Identifier	pmi		8462092	0					
ANR	8462166	Identifier	interpolate		8462092	1					
ANR	8462167	UnaryOperationExpression	! ! b		8462092	1					
ANR	8462168	UnaryOperator	!		8462092	0					
ANR	8462169	UnaryOperationExpression	! b		8462092	1					
ANR	8462170	UnaryOperator	!		8462092	0					
ANR	8462171	Identifier	b		8462092	1					
ANR	8462172	ReturnStatement	return 0 ;	711:8:22397:22405	8462092	1	True				
ANR	8462173	PrimaryExpression	0		8462092	0					
ANR	8462174	IfStatement	"if ( ! strncmp ( arg , ""NOCACHE"" , 7 ) )"		8462092	3					
ANR	8462175	Condition	"! strncmp ( arg , ""NOCACHE"" , 7 )"	713:8:22421:22447	8462092	0	True				
ANR	8462176	UnaryOperationExpression	"! strncmp ( arg , ""NOCACHE"" , 7 )"		8462092	0					
ANR	8462177	UnaryOperator	!		8462092	0					
ANR	8462178	CallExpression	"strncmp ( arg , ""NOCACHE"" , 7 )"		8462092	1					
ANR	8462179	Callee	strncmp		8462092	0					
ANR	8462180	Identifier	strncmp		8462092	0					
ANR	8462181	ArgumentList	arg		8462092	1					
ANR	8462182	Argument	arg		8462092	0					
ANR	8462183	Identifier	arg		8462092	0					
ANR	8462184	Argument	"""NOCACHE"""		8462092	1					
ANR	8462185	PrimaryExpression	"""NOCACHE"""		8462092	0					
ANR	8462186	Argument	7		8462092	2					
ANR	8462187	PrimaryExpression	7		8462092	0					
ANR	8462188	CompoundStatement		12:37:329:329	8462092	1					
ANR	8462189	ExpressionStatement	pmi -> nocache = ! ! b	714:8:22460:22478	8462092	0	True				
ANR	8462190	AssignmentExpression	pmi -> nocache = ! ! b		8462092	0		=			
ANR	8462191	PtrMemberAccess	pmi -> nocache		8462092	0					
ANR	8462192	Identifier	pmi		8462092	0					
ANR	8462193	Identifier	nocache		8462092	1					
ANR	8462194	UnaryOperationExpression	! ! b		8462092	1					
ANR	8462195	UnaryOperator	!		8462092	0					
ANR	8462196	UnaryOperationExpression	! b		8462092	1					
ANR	8462197	UnaryOperator	!		8462092	0					
ANR	8462198	Identifier	b		8462092	1					
ANR	8462199	ReturnStatement	return 0 ;	715:8:22488:22496	8462092	1	True				
ANR	8462200	PrimaryExpression	0		8462092	0					
ANR	8462201	IfStatement	"if ( ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 ) )"		8462092	4					
ANR	8462202	Condition	"! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"	717:8:22512:22549	8462092	0	True				
ANR	8462203	UnaryOperationExpression	"! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8462092	0					
ANR	8462204	UnaryOperator	!		8462092	0					
ANR	8462205	CallExpression	"strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8462092	1					
ANR	8462206	Callee	strncmp		8462092	0					
ANR	8462207	Identifier	strncmp		8462092	0					
ANR	8462208	ArgumentList	arg		8462092	1					
ANR	8462209	Argument	arg		8462092	0					
ANR	8462210	Identifier	arg		8462092	0					
ANR	8462211	Argument	"""SCANCONVERTERTYPE"""		8462092	1					
ANR	8462212	PrimaryExpression	"""SCANCONVERTERTYPE"""		8462092	0					
ANR	8462213	Argument	17		8462092	2					
ANR	8462214	PrimaryExpression	17		8462092	0					
ANR	8462215	CompoundStatement		16:48:431:431	8462092	1					
ANR	8462216	ExpressionStatement	pmi -> scanconverter = b	718:8:22562:22584	8462092	0	True				
ANR	8462217	AssignmentExpression	pmi -> scanconverter = b		8462092	0		=			
ANR	8462218	PtrMemberAccess	pmi -> scanconverter		8462092	0					
ANR	8462219	Identifier	pmi		8462092	0					
ANR	8462220	Identifier	scanconverter		8462092	1					
ANR	8462221	Identifier	b		8462092	1					
ANR	8462222	ReturnStatement	return 0 ;	719:8:22594:22602	8462092	1	True				
ANR	8462223	PrimaryExpression	0		8462092	0					
ANR	8462224	ReturnStatement	return 1 ;	721:4:22614:22622	8462092	5	True				
ANR	8462225	PrimaryExpression	1		8462092	0					
ANR	8462226	ReturnType	static int		8462092	1					
ANR	8462227	Identifier	check_for_special_int		8462092	2					
ANR	8462228	ParameterList	"pl_main_instance_t * pmi , const char * arg , int b"		8462092	3					
ANR	8462229	Parameter	pl_main_instance_t * pmi	701:33:22070:22093	8462092	0	True				
ANR	8462230	ParameterType	pl_main_instance_t *		8462092	0					
ANR	8462231	Identifier	pmi		8462092	1					
ANR	8462232	Parameter	const char * arg	701:59:22096:22110	8462092	1	True				
ANR	8462233	ParameterType	const char *		8462092	0					
ANR	8462234	Identifier	arg		8462092	1					
ANR	8462235	Parameter	int b	701:76:22113:22117	8462092	2	True				
ANR	8462236	ParameterType	int		8462092	0					
ANR	8462237	Identifier	b		8462092	1					
ANR	8462238	CFGEntryNode	ENTRY		8462092		True				
ANR	8462239	CFGExitNode	EXIT		8462092		True				
ANR	8462240	Symbol	pmi -> scanconverter		8462092						
ANR	8462241	Symbol	strncmp		8462092						
ANR	8462242	Symbol	b		8462092						
ANR	8462243	Symbol	gs_note_error		8462092						
ANR	8462244	Symbol	gs_error_rangecheck		8462092						
ANR	8462245	Symbol	* pmi		8462092						
ANR	8462246	Symbol	arg		8462092						
ANR	8462247	Symbol	pmi -> nocache		8462092						
ANR	8462248	Symbol	pmi -> pause		8462092						
ANR	8462249	Symbol	pmi -> interpolate		8462092						
ANR	8462250	Symbol	pmi		8462092						
ANR	8462251	Function	check_for_special_float	724:0:22627:22998							
ANR	8462252	FunctionDef	"check_for_special_float (pl_main_instance_t * pmi , const char * arg , float f)"		8462251	0					
ANR	8462253	CompoundStatement		725:0:22714:22998	8462251	0					
ANR	8462254	IfStatement	"if ( ! strncmp ( arg , ""BATCH"" , 5 ) || ! strncmp ( arg , ""NOPAUSE"" , 6 ) || ! strncmp ( arg , ""DOINTERPOLATE"" , 13 ) || ! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 ) )"		8462251	0					
ANR	8462255	Condition	"! strncmp ( arg , ""BATCH"" , 5 ) || ! strncmp ( arg , ""NOPAUSE"" , 6 ) || ! strncmp ( arg , ""DOINTERPOLATE"" , 13 ) || ! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"	726:8:22724:22922	8462251	0	True				
ANR	8462256	OrExpression	"! strncmp ( arg , ""BATCH"" , 5 ) || ! strncmp ( arg , ""NOPAUSE"" , 6 ) || ! strncmp ( arg , ""DOINTERPOLATE"" , 13 ) || ! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8462251	0		||			
ANR	8462257	UnaryOperationExpression	"! strncmp ( arg , ""BATCH"" , 5 )"		8462251	0					
ANR	8462258	UnaryOperator	!		8462251	0					
ANR	8462259	CallExpression	"strncmp ( arg , ""BATCH"" , 5 )"		8462251	1					
ANR	8462260	Callee	strncmp		8462251	0					
ANR	8462261	Identifier	strncmp		8462251	0					
ANR	8462262	ArgumentList	arg		8462251	1					
ANR	8462263	Argument	arg		8462251	0					
ANR	8462264	Identifier	arg		8462251	0					
ANR	8462265	Argument	"""BATCH"""		8462251	1					
ANR	8462266	PrimaryExpression	"""BATCH"""		8462251	0					
ANR	8462267	Argument	5		8462251	2					
ANR	8462268	PrimaryExpression	5		8462251	0					
ANR	8462269	OrExpression	"! strncmp ( arg , ""NOPAUSE"" , 6 ) || ! strncmp ( arg , ""DOINTERPOLATE"" , 13 ) || ! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8462251	1		||			
ANR	8462270	UnaryOperationExpression	"! strncmp ( arg , ""NOPAUSE"" , 6 )"		8462251	0					
ANR	8462271	UnaryOperator	!		8462251	0					
ANR	8462272	CallExpression	"strncmp ( arg , ""NOPAUSE"" , 6 )"		8462251	1					
ANR	8462273	Callee	strncmp		8462251	0					
ANR	8462274	Identifier	strncmp		8462251	0					
ANR	8462275	ArgumentList	arg		8462251	1					
ANR	8462276	Argument	arg		8462251	0					
ANR	8462277	Identifier	arg		8462251	0					
ANR	8462278	Argument	"""NOPAUSE"""		8462251	1					
ANR	8462279	PrimaryExpression	"""NOPAUSE"""		8462251	0					
ANR	8462280	Argument	6		8462251	2					
ANR	8462281	PrimaryExpression	6		8462251	0					
ANR	8462282	OrExpression	"! strncmp ( arg , ""DOINTERPOLATE"" , 13 ) || ! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8462251	1		||			
ANR	8462283	UnaryOperationExpression	"! strncmp ( arg , ""DOINTERPOLATE"" , 13 )"		8462251	0					
ANR	8462284	UnaryOperator	!		8462251	0					
ANR	8462285	CallExpression	"strncmp ( arg , ""DOINTERPOLATE"" , 13 )"		8462251	1					
ANR	8462286	Callee	strncmp		8462251	0					
ANR	8462287	Identifier	strncmp		8462251	0					
ANR	8462288	ArgumentList	arg		8462251	1					
ANR	8462289	Argument	arg		8462251	0					
ANR	8462290	Identifier	arg		8462251	0					
ANR	8462291	Argument	"""DOINTERPOLATE"""		8462251	1					
ANR	8462292	PrimaryExpression	"""DOINTERPOLATE"""		8462251	0					
ANR	8462293	Argument	13		8462251	2					
ANR	8462294	PrimaryExpression	13		8462251	0					
ANR	8462295	OrExpression	"! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8462251	1		||			
ANR	8462296	UnaryOperationExpression	"! strncmp ( arg , ""NOCACHE"" , 7 )"		8462251	0					
ANR	8462297	UnaryOperator	!		8462251	0					
ANR	8462298	CallExpression	"strncmp ( arg , ""NOCACHE"" , 7 )"		8462251	1					
ANR	8462299	Callee	strncmp		8462251	0					
ANR	8462300	Identifier	strncmp		8462251	0					
ANR	8462301	ArgumentList	arg		8462251	1					
ANR	8462302	Argument	arg		8462251	0					
ANR	8462303	Identifier	arg		8462251	0					
ANR	8462304	Argument	"""NOCACHE"""		8462251	1					
ANR	8462305	PrimaryExpression	"""NOCACHE"""		8462251	0					
ANR	8462306	Argument	7		8462251	2					
ANR	8462307	PrimaryExpression	7		8462251	0					
ANR	8462308	UnaryOperationExpression	"! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8462251	1					
ANR	8462309	UnaryOperator	!		8462251	0					
ANR	8462310	CallExpression	"strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8462251	1					
ANR	8462311	Callee	strncmp		8462251	0					
ANR	8462312	Identifier	strncmp		8462251	0					
ANR	8462313	ArgumentList	arg		8462251	1					
ANR	8462314	Argument	arg		8462251	0					
ANR	8462315	Identifier	arg		8462251	0					
ANR	8462316	Argument	"""SCANCONVERTERTYPE"""		8462251	1					
ANR	8462317	PrimaryExpression	"""SCANCONVERTERTYPE"""		8462251	0					
ANR	8462318	Argument	17		8462251	2					
ANR	8462319	PrimaryExpression	17		8462251	0					
ANR	8462320	CompoundStatement		6:48:210:210	8462251	1					
ANR	8462321	ReturnStatement	return gs_note_error ( gs_error_rangecheck ) ;	731:8:22935:22976	8462251	0	True				
ANR	8462322	CallExpression	gs_note_error ( gs_error_rangecheck )		8462251	0					
ANR	8462323	Callee	gs_note_error		8462251	0					
ANR	8462324	Identifier	gs_note_error		8462251	0					
ANR	8462325	ArgumentList	gs_error_rangecheck		8462251	1					
ANR	8462326	Argument	gs_error_rangecheck		8462251	0					
ANR	8462327	Identifier	gs_error_rangecheck		8462251	0					
ANR	8462328	ReturnStatement	return 1 ;	733:4:22988:22996	8462251	1	True				
ANR	8462329	PrimaryExpression	1		8462251	0					
ANR	8462330	ReturnType	static int		8462251	1					
ANR	8462331	Identifier	check_for_special_float		8462251	2					
ANR	8462332	ParameterList	"pl_main_instance_t * pmi , const char * arg , float f"		8462251	3					
ANR	8462333	Parameter	pl_main_instance_t * pmi	724:35:22662:22685	8462251	0	True				
ANR	8462334	ParameterType	pl_main_instance_t *		8462251	0					
ANR	8462335	Identifier	pmi		8462251	1					
ANR	8462336	Parameter	const char * arg	724:61:22688:22702	8462251	1	True				
ANR	8462337	ParameterType	const char *		8462251	0					
ANR	8462338	Identifier	arg		8462251	1					
ANR	8462339	Parameter	float f	724:78:22705:22711	8462251	2	True				
ANR	8462340	ParameterType	float		8462251	0					
ANR	8462341	Identifier	f		8462251	1					
ANR	8462342	CFGEntryNode	ENTRY		8462251		True				
ANR	8462343	CFGExitNode	EXIT		8462251		True				
ANR	8462344	Symbol	strncmp		8462251						
ANR	8462345	Symbol	gs_note_error		8462251						
ANR	8462346	Symbol	gs_error_rangecheck		8462251						
ANR	8462347	Symbol	f		8462251						
ANR	8462348	Symbol	arg		8462251						
ANR	8462349	Symbol	pmi		8462251						
ANR	8462350	Function	check_for_special_str	736:0:23001:23381							
ANR	8462351	FunctionDef	"check_for_special_str (pl_main_instance_t * pmi , const char * arg , gs_param_string * f)"		8462350	0					
ANR	8462352	CompoundStatement		737:0:23097:23381	8462350	0					
ANR	8462353	IfStatement	"if ( ! strncmp ( arg , ""BATCH"" , 5 ) || ! strncmp ( arg , ""NOPAUSE"" , 6 ) || ! strncmp ( arg , ""DOINTERPOLATE"" , 13 ) || ! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 ) )"		8462350	0					
ANR	8462354	Condition	"! strncmp ( arg , ""BATCH"" , 5 ) || ! strncmp ( arg , ""NOPAUSE"" , 6 ) || ! strncmp ( arg , ""DOINTERPOLATE"" , 13 ) || ! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"	738:8:23107:23305	8462350	0	True				
ANR	8462355	OrExpression	"! strncmp ( arg , ""BATCH"" , 5 ) || ! strncmp ( arg , ""NOPAUSE"" , 6 ) || ! strncmp ( arg , ""DOINTERPOLATE"" , 13 ) || ! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8462350	0		||			
ANR	8462356	UnaryOperationExpression	"! strncmp ( arg , ""BATCH"" , 5 )"		8462350	0					
ANR	8462357	UnaryOperator	!		8462350	0					
ANR	8462358	CallExpression	"strncmp ( arg , ""BATCH"" , 5 )"		8462350	1					
ANR	8462359	Callee	strncmp		8462350	0					
ANR	8462360	Identifier	strncmp		8462350	0					
ANR	8462361	ArgumentList	arg		8462350	1					
ANR	8462362	Argument	arg		8462350	0					
ANR	8462363	Identifier	arg		8462350	0					
ANR	8462364	Argument	"""BATCH"""		8462350	1					
ANR	8462365	PrimaryExpression	"""BATCH"""		8462350	0					
ANR	8462366	Argument	5		8462350	2					
ANR	8462367	PrimaryExpression	5		8462350	0					
ANR	8462368	OrExpression	"! strncmp ( arg , ""NOPAUSE"" , 6 ) || ! strncmp ( arg , ""DOINTERPOLATE"" , 13 ) || ! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8462350	1		||			
ANR	8462369	UnaryOperationExpression	"! strncmp ( arg , ""NOPAUSE"" , 6 )"		8462350	0					
ANR	8462370	UnaryOperator	!		8462350	0					
ANR	8462371	CallExpression	"strncmp ( arg , ""NOPAUSE"" , 6 )"		8462350	1					
ANR	8462372	Callee	strncmp		8462350	0					
ANR	8462373	Identifier	strncmp		8462350	0					
ANR	8462374	ArgumentList	arg		8462350	1					
ANR	8462375	Argument	arg		8462350	0					
ANR	8462376	Identifier	arg		8462350	0					
ANR	8462377	Argument	"""NOPAUSE"""		8462350	1					
ANR	8462378	PrimaryExpression	"""NOPAUSE"""		8462350	0					
ANR	8462379	Argument	6		8462350	2					
ANR	8462380	PrimaryExpression	6		8462350	0					
ANR	8462381	OrExpression	"! strncmp ( arg , ""DOINTERPOLATE"" , 13 ) || ! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8462350	1		||			
ANR	8462382	UnaryOperationExpression	"! strncmp ( arg , ""DOINTERPOLATE"" , 13 )"		8462350	0					
ANR	8462383	UnaryOperator	!		8462350	0					
ANR	8462384	CallExpression	"strncmp ( arg , ""DOINTERPOLATE"" , 13 )"		8462350	1					
ANR	8462385	Callee	strncmp		8462350	0					
ANR	8462386	Identifier	strncmp		8462350	0					
ANR	8462387	ArgumentList	arg		8462350	1					
ANR	8462388	Argument	arg		8462350	0					
ANR	8462389	Identifier	arg		8462350	0					
ANR	8462390	Argument	"""DOINTERPOLATE"""		8462350	1					
ANR	8462391	PrimaryExpression	"""DOINTERPOLATE"""		8462350	0					
ANR	8462392	Argument	13		8462350	2					
ANR	8462393	PrimaryExpression	13		8462350	0					
ANR	8462394	OrExpression	"! strncmp ( arg , ""NOCACHE"" , 7 ) || ! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8462350	1		||			
ANR	8462395	UnaryOperationExpression	"! strncmp ( arg , ""NOCACHE"" , 7 )"		8462350	0					
ANR	8462396	UnaryOperator	!		8462350	0					
ANR	8462397	CallExpression	"strncmp ( arg , ""NOCACHE"" , 7 )"		8462350	1					
ANR	8462398	Callee	strncmp		8462350	0					
ANR	8462399	Identifier	strncmp		8462350	0					
ANR	8462400	ArgumentList	arg		8462350	1					
ANR	8462401	Argument	arg		8462350	0					
ANR	8462402	Identifier	arg		8462350	0					
ANR	8462403	Argument	"""NOCACHE"""		8462350	1					
ANR	8462404	PrimaryExpression	"""NOCACHE"""		8462350	0					
ANR	8462405	Argument	7		8462350	2					
ANR	8462406	PrimaryExpression	7		8462350	0					
ANR	8462407	UnaryOperationExpression	"! strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8462350	1					
ANR	8462408	UnaryOperator	!		8462350	0					
ANR	8462409	CallExpression	"strncmp ( arg , ""SCANCONVERTERTYPE"" , 17 )"		8462350	1					
ANR	8462410	Callee	strncmp		8462350	0					
ANR	8462411	Identifier	strncmp		8462350	0					
ANR	8462412	ArgumentList	arg		8462350	1					
ANR	8462413	Argument	arg		8462350	0					
ANR	8462414	Identifier	arg		8462350	0					
ANR	8462415	Argument	"""SCANCONVERTERTYPE"""		8462350	1					
ANR	8462416	PrimaryExpression	"""SCANCONVERTERTYPE"""		8462350	0					
ANR	8462417	Argument	17		8462350	2					
ANR	8462418	PrimaryExpression	17		8462350	0					
ANR	8462419	CompoundStatement		6:48:210:210	8462350	1					
ANR	8462420	ReturnStatement	return gs_note_error ( gs_error_rangecheck ) ;	743:8:23318:23359	8462350	0	True				
ANR	8462421	CallExpression	gs_note_error ( gs_error_rangecheck )		8462350	0					
ANR	8462422	Callee	gs_note_error		8462350	0					
ANR	8462423	Identifier	gs_note_error		8462350	0					
ANR	8462424	ArgumentList	gs_error_rangecheck		8462350	1					
ANR	8462425	Argument	gs_error_rangecheck		8462350	0					
ANR	8462426	Identifier	gs_error_rangecheck		8462350	0					
ANR	8462427	ReturnStatement	return 1 ;	745:4:23371:23379	8462350	1	True				
ANR	8462428	PrimaryExpression	1		8462350	0					
ANR	8462429	ReturnType	static int		8462350	1					
ANR	8462430	Identifier	check_for_special_str		8462350	2					
ANR	8462431	ParameterList	"pl_main_instance_t * pmi , const char * arg , gs_param_string * f"		8462350	3					
ANR	8462432	Parameter	pl_main_instance_t * pmi	736:33:23034:23057	8462350	0	True				
ANR	8462433	ParameterType	pl_main_instance_t *		8462350	0					
ANR	8462434	Identifier	pmi		8462350	1					
ANR	8462435	Parameter	const char * arg	736:59:23060:23074	8462350	1	True				
ANR	8462436	ParameterType	const char *		8462350	0					
ANR	8462437	Identifier	arg		8462350	1					
ANR	8462438	Parameter	gs_param_string * f	736:76:23077:23094	8462350	2	True				
ANR	8462439	ParameterType	gs_param_string *		8462350	0					
ANR	8462440	Identifier	f		8462350	1					
ANR	8462441	CFGEntryNode	ENTRY		8462350		True				
ANR	8462442	CFGExitNode	EXIT		8462350		True				
ANR	8462443	Symbol	strncmp		8462350						
ANR	8462444	Symbol	gs_note_error		8462350						
ANR	8462445	Symbol	gs_error_rangecheck		8462350						
ANR	8462446	Symbol	f		8462350						
ANR	8462447	Symbol	arg		8462350						
ANR	8462448	Symbol	pmi		8462350						
ANR	8462449	Function	pl_main_process_options	748:0:23384:47560							
ANR	8462450	FunctionDef	"pl_main_process_options (pl_main_instance_t * pmi , arg_list * pal , pl_interp_implementation_t * pjli)"		8462449	0					
ANR	8462451	CompoundStatement		751:0:23520:47560	8462449	0					
ANR	8462452	IdentifierDeclStatement	int code = 0 ;	752:4:23526:23538	8462449	0	True				
ANR	8462453	IdentifierDecl	code = 0		8462449	0					
ANR	8462454	IdentifierDeclType	int		8462449	0					
ANR	8462455	Identifier	code		8462449	1					
ANR	8462456	AssignmentExpression	code = 0		8462449	2		=			
ANR	8462457	Identifier	code		8462449	0					
ANR	8462458	PrimaryExpression	0		8462449	1					
ANR	8462459	IdentifierDeclStatement	bool help = false ;	753:4:23544:23561	8462449	1	True				
ANR	8462460	IdentifierDecl	help = false		8462449	0					
ANR	8462461	IdentifierDeclType	bool		8462449	0					
ANR	8462462	Identifier	help		8462449	1					
ANR	8462463	AssignmentExpression	help = false		8462449	2		=			
ANR	8462464	Identifier	false		8462449	0					
ANR	8462465	Identifier	false		8462449	1					
ANR	8462466	IdentifierDeclStatement	char * arg ;	754:4:23567:23576	8462449	2	True				
ANR	8462467	IdentifierDecl	* arg		8462449	0					
ANR	8462468	IdentifierDeclType	char *		8462449	0					
ANR	8462469	Identifier	arg		8462449	1					
ANR	8462470	IdentifierDeclStatement	gs_c_param_list * params = & pmi -> params ;	755:4:23582:23620	8462449	3	True				
ANR	8462471	IdentifierDecl	* params = & pmi -> params		8462449	0					
ANR	8462472	IdentifierDeclType	gs_c_param_list *		8462449	0					
ANR	8462473	Identifier	params		8462449	1					
ANR	8462474	AssignmentExpression	* params = & pmi -> params		8462449	2		=			
ANR	8462475	Identifier	params		8462449	0					
ANR	8462476	UnaryOperationExpression	& pmi -> params		8462449	1					
ANR	8462477	UnaryOperator	&		8462449	0					
ANR	8462478	PtrMemberAccess	pmi -> params		8462449	1					
ANR	8462479	Identifier	pmi		8462449	0					
ANR	8462480	Identifier	params		8462449	1					
ANR	8462481	ExpressionStatement	gs_c_param_list_write_more ( params )	757:4:23631:23665	8462449	4	True				
ANR	8462482	CallExpression	gs_c_param_list_write_more ( params )		8462449	0					
ANR	8462483	Callee	gs_c_param_list_write_more		8462449	0					
ANR	8462484	Identifier	gs_c_param_list_write_more		8462449	0					
ANR	8462485	ArgumentList	params		8462449	1					
ANR	8462486	Argument	params		8462449	0					
ANR	8462487	Identifier	params		8462449	0					
ANR	8462488	WhileStatement	"while ( ( code = arg_next ( pal , ( const char * * ) & arg , pmi -> memory ) ) > 0 && * arg == '-' )"		8462449	5					
ANR	8462489	Condition	"( code = arg_next ( pal , ( const char * * ) & arg , pmi -> memory ) ) > 0 && * arg == '-'"	758:11:23678:23752	8462449	0	True				
ANR	8462490	AndExpression	"( code = arg_next ( pal , ( const char * * ) & arg , pmi -> memory ) ) > 0 && * arg == '-'"		8462449	0		&&			
ANR	8462491	RelationalExpression	"( code = arg_next ( pal , ( const char * * ) & arg , pmi -> memory ) ) > 0"		8462449	0		>			
ANR	8462492	AssignmentExpression	"code = arg_next ( pal , ( const char * * ) & arg , pmi -> memory )"		8462449	0		=			
ANR	8462493	Identifier	code		8462449	0					
ANR	8462494	CallExpression	"arg_next ( pal , ( const char * * ) & arg , pmi -> memory )"		8462449	1					
ANR	8462495	Callee	arg_next		8462449	0					
ANR	8462496	Identifier	arg_next		8462449	0					
ANR	8462497	ArgumentList	pal		8462449	1					
ANR	8462498	Argument	pal		8462449	0					
ANR	8462499	Identifier	pal		8462449	0					
ANR	8462500	Argument	( const char * * ) & arg		8462449	1					
ANR	8462501	CastExpression	( const char * * ) & arg		8462449	0					
ANR	8462502	CastTarget	const char * *		8462449	0					
ANR	8462503	UnaryOperationExpression	& arg		8462449	1					
ANR	8462504	UnaryOperator	&		8462449	0					
ANR	8462505	Identifier	arg		8462449	1					
ANR	8462506	Argument	pmi -> memory		8462449	2					
ANR	8462507	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8462508	Identifier	pmi		8462449	0					
ANR	8462509	Identifier	memory		8462449	1					
ANR	8462510	PrimaryExpression	0		8462449	1					
ANR	8462511	EqualityExpression	* arg == '-'		8462449	1		==			
ANR	8462512	UnaryOperationExpression	* arg		8462449	0					
ANR	8462513	UnaryOperator	*		8462449	0					
ANR	8462514	Identifier	arg		8462449	1					
ANR	8462515	PrimaryExpression	'-'		8462449	1					
ANR	8462516	CompoundStatement		8:88:234:234	8462449	1					
ANR	8462517	IfStatement	if ( arg [ 1 ] == '\\0' )		8462449	0					
ANR	8462518	Condition	arg [ 1 ] == '\\0'	759:12:23769:23782	8462449	0	True				
ANR	8462519	EqualityExpression	arg [ 1 ] == '\\0'		8462449	0		==			
ANR	8462520	ArrayIndexing	arg [ 1 ]		8462449	0					
ANR	8462521	Identifier	arg		8462449	0					
ANR	8462522	PrimaryExpression	1		8462449	1					
ANR	8462523	PrimaryExpression	'\\0'		8462449	1					
ANR	8462524	BreakStatement	break ;	760:12:23824:23829	8462449	1	True				
ANR	8462525	ExpressionStatement	arg += 2	761:8:23839:23847	8462449	1	True				
ANR	8462526	AssignmentExpression	arg += 2		8462449	0		+=			
ANR	8462527	Identifier	arg		8462449	0					
ANR	8462528	PrimaryExpression	2		8462449	1					
ANR	8462529	SwitchStatement	switch ( arg [ - 1 ] )		8462449	2					
ANR	8462530	Condition	arg [ - 1 ]	762:16:23865:23871	8462449	0	True				
ANR	8462531	ArrayIndexing	arg [ - 1 ]		8462449	0					
ANR	8462532	Identifier	arg		8462449	0					
ANR	8462533	UnaryOperationExpression	- 1		8462449	1					
ANR	8462534	UnaryOperator	-		8462449	0					
ANR	8462535	PrimaryExpression	1		8462449	1					
ANR	8462536	CompoundStatement		12:25:353:353	8462449	1					
ANR	8462537	Label	case '-' :	763:12:23888:23896	8462449	0	True				
ANR	8462538	IfStatement	"if ( strcmp ( arg , ""debug"" ) == 0 )"		8462449	1					
ANR	8462539	Condition	"strcmp ( arg , ""debug"" ) == 0"	764:20:23918:23942	8462449	0	True				
ANR	8462540	EqualityExpression	"strcmp ( arg , ""debug"" ) == 0"		8462449	0		==			
ANR	8462541	CallExpression	"strcmp ( arg , ""debug"" )"		8462449	0					
ANR	8462542	Callee	strcmp		8462449	0					
ANR	8462543	Identifier	strcmp		8462449	0					
ANR	8462544	ArgumentList	arg		8462449	1					
ANR	8462545	Argument	arg		8462449	0					
ANR	8462546	Identifier	arg		8462449	0					
ANR	8462547	Argument	"""debug"""		8462449	1					
ANR	8462548	PrimaryExpression	"""debug"""		8462449	0					
ANR	8462549	PrimaryExpression	0		8462449	1					
ANR	8462550	CompoundStatement		14:47:424:424	8462449	1					
ANR	8462551	ExpressionStatement	gs_debug_flags_list ( pmi -> memory )	765:20:23967:23999	8462449	0	True				
ANR	8462552	CallExpression	gs_debug_flags_list ( pmi -> memory )		8462449	0					
ANR	8462553	Callee	gs_debug_flags_list		8462449	0					
ANR	8462554	Identifier	gs_debug_flags_list		8462449	0					
ANR	8462555	ArgumentList	pmi -> memory		8462449	1					
ANR	8462556	Argument	pmi -> memory		8462449	0					
ANR	8462557	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8462558	Identifier	pmi		8462449	0					
ANR	8462559	Identifier	memory		8462449	1					
ANR	8462560	BreakStatement	break ;	766:20:24021:24026	8462449	1	True				
ANR	8462561	ElseStatement	else		8462449	0					
ANR	8462562	IfStatement	"if ( strncmp ( arg , ""debug="" , 6 ) == 0 )"		8462449	0					
ANR	8462563	Condition	"strncmp ( arg , ""debug="" , 6 ) == 0"	767:27:24055:24084	8462449	0	True				
ANR	8462564	EqualityExpression	"strncmp ( arg , ""debug="" , 6 ) == 0"		8462449	0		==			
ANR	8462565	CallExpression	"strncmp ( arg , ""debug="" , 6 )"		8462449	0					
ANR	8462566	Callee	strncmp		8462449	0					
ANR	8462567	Identifier	strncmp		8462449	0					
ANR	8462568	ArgumentList	arg		8462449	1					
ANR	8462569	Argument	arg		8462449	0					
ANR	8462570	Identifier	arg		8462449	0					
ANR	8462571	Argument	"""debug="""		8462449	1					
ANR	8462572	PrimaryExpression	"""debug="""		8462449	0					
ANR	8462573	Argument	6		8462449	2					
ANR	8462574	PrimaryExpression	6		8462449	0					
ANR	8462575	PrimaryExpression	0		8462449	1					
ANR	8462576	CompoundStatement		17:59:566:566	8462449	1					
ANR	8462577	ExpressionStatement	"gs_debug_flags_parse ( pmi -> memory , arg + 6 )"	768:20:24109:24151	8462449	0	True				
ANR	8462578	CallExpression	"gs_debug_flags_parse ( pmi -> memory , arg + 6 )"		8462449	0					
ANR	8462579	Callee	gs_debug_flags_parse		8462449	0					
ANR	8462580	Identifier	gs_debug_flags_parse		8462449	0					
ANR	8462581	ArgumentList	pmi -> memory		8462449	1					
ANR	8462582	Argument	pmi -> memory		8462449	0					
ANR	8462583	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8462584	Identifier	pmi		8462449	0					
ANR	8462585	Identifier	memory		8462449	1					
ANR	8462586	Argument	arg + 6		8462449	1					
ANR	8462587	AdditiveExpression	arg + 6		8462449	0		+			
ANR	8462588	Identifier	arg		8462449	0					
ANR	8462589	PrimaryExpression	6		8462449	1					
ANR	8462590	BreakStatement	break ;	769:20:24173:24178	8462449	1	True				
ANR	8462591	ElseStatement	else		8462449	0					
ANR	8462592	IfStatement	"if ( strncmp ( arg , ""saved-pages="" , 12 ) == 0 )"		8462449	0					
ANR	8462593	Condition	"strncmp ( arg , ""saved-pages="" , 12 ) == 0"	771:27:24242:24278	8462449	0	True				
ANR	8462594	EqualityExpression	"strncmp ( arg , ""saved-pages="" , 12 ) == 0"		8462449	0		==			
ANR	8462595	CallExpression	"strncmp ( arg , ""saved-pages="" , 12 )"		8462449	0					
ANR	8462596	Callee	strncmp		8462449	0					
ANR	8462597	Identifier	strncmp		8462449	0					
ANR	8462598	ArgumentList	arg		8462449	1					
ANR	8462599	Argument	arg		8462449	0					
ANR	8462600	Identifier	arg		8462449	0					
ANR	8462601	Argument	"""saved-pages="""		8462449	1					
ANR	8462602	PrimaryExpression	"""saved-pages="""		8462449	0					
ANR	8462603	Argument	12		8462449	2					
ANR	8462604	PrimaryExpression	12		8462449	0					
ANR	8462605	PrimaryExpression	0		8462449	1					
ANR	8462606	CompoundStatement		23:20:833:885	8462449	1					
ANR	8462607	IdentifierDeclStatement	gx_device * pdev = pmi -> device ;	772:20:24303:24332	8462449	0	True				
ANR	8462608	IdentifierDecl	* pdev = pmi -> device		8462449	0					
ANR	8462609	IdentifierDeclType	gx_device *		8462449	0					
ANR	8462610	Identifier	pdev		8462449	1					
ANR	8462611	AssignmentExpression	* pdev = pmi -> device		8462449	2		=			
ANR	8462612	Identifier	pdev		8462449	0					
ANR	8462613	PtrMemberAccess	pmi -> device		8462449	1					
ANR	8462614	Identifier	pmi		8462449	0					
ANR	8462615	Identifier	device		8462449	1					
ANR	8462616	IdentifierDeclStatement	gx_device_printer * ppdev = ( gx_device_printer * ) pdev ;	773:20:24354:24406	8462449	1	True				
ANR	8462617	IdentifierDecl	* ppdev = ( gx_device_printer * ) pdev		8462449	0					
ANR	8462618	IdentifierDeclType	gx_device_printer *		8462449	0					
ANR	8462619	Identifier	ppdev		8462449	1					
ANR	8462620	AssignmentExpression	* ppdev = ( gx_device_printer * ) pdev		8462449	2		=			
ANR	8462621	Identifier	ppdev		8462449	0					
ANR	8462622	CastExpression	( gx_device_printer * ) pdev		8462449	1					
ANR	8462623	CastTarget	gx_device_printer *		8462449	0					
ANR	8462624	Identifier	pdev		8462449	1					
ANR	8462625	IfStatement	if ( pdev -> is_open == 0 && ( code = gs_opendevice ( pdev ) ) < 0 )		8462449	2					
ANR	8462626	Condition	pdev -> is_open == 0 && ( code = gs_opendevice ( pdev ) ) < 0	776:24:24491:24544	8462449	0	True				
ANR	8462627	AndExpression	pdev -> is_open == 0 && ( code = gs_opendevice ( pdev ) ) < 0		8462449	0		&&			
ANR	8462628	EqualityExpression	pdev -> is_open == 0		8462449	0		==			
ANR	8462629	PtrMemberAccess	pdev -> is_open		8462449	0					
ANR	8462630	Identifier	pdev		8462449	0					
ANR	8462631	Identifier	is_open		8462449	1					
ANR	8462632	PrimaryExpression	0		8462449	1					
ANR	8462633	RelationalExpression	( code = gs_opendevice ( pdev ) ) < 0		8462449	1		<			
ANR	8462634	AssignmentExpression	code = gs_opendevice ( pdev )		8462449	0		=			
ANR	8462635	Identifier	code		8462449	0					
ANR	8462636	CallExpression	gs_opendevice ( pdev )		8462449	1					
ANR	8462637	Callee	gs_opendevice		8462449	0					
ANR	8462638	Identifier	gs_opendevice		8462449	0					
ANR	8462639	ArgumentList	pdev		8462449	1					
ANR	8462640	Argument	pdev		8462449	0					
ANR	8462641	Identifier	pdev		8462449	0					
ANR	8462642	PrimaryExpression	0		8462449	1					
ANR	8462643	CompoundStatement		26:80:1026:1026	8462449	1					
ANR	8462644	BreakStatement	break ;	777:24:24573:24578	8462449	0	True				
ANR	8462645	IfStatement	"if ( dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_supports_saved_pages , NULL , 0 ) <= 0 )"		8462449	3					
ANR	8462646	Condition	"dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_supports_saved_pages , NULL , 0 ) <= 0"	779:24:24626:24700	8462449	0	True				
ANR	8462647	RelationalExpression	"dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_supports_saved_pages , NULL , 0 ) <= 0"		8462449	0		<=			
ANR	8462648	CallExpression	"dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_supports_saved_pages , NULL , 0 )"		8462449	0					
ANR	8462649	Callee	"dev_proc ( pdev , dev_spec_op )"		8462449	0					
ANR	8462650	CallExpression	"dev_proc ( pdev , dev_spec_op )"		8462449	0					
ANR	8462651	Callee	dev_proc		8462449	0					
ANR	8462652	Identifier	dev_proc		8462449	0					
ANR	8462653	ArgumentList	pdev		8462449	1					
ANR	8462654	Argument	pdev		8462449	0					
ANR	8462655	Identifier	pdev		8462449	0					
ANR	8462656	Argument	dev_spec_op		8462449	1					
ANR	8462657	Identifier	dev_spec_op		8462449	0					
ANR	8462658	ArgumentList	pdev		8462449	1					
ANR	8462659	Argument	pdev		8462449	0					
ANR	8462660	Identifier	pdev		8462449	0					
ANR	8462661	Argument	gxdso_supports_saved_pages		8462449	1					
ANR	8462662	Identifier	gxdso_supports_saved_pages		8462449	0					
ANR	8462663	Argument	NULL		8462449	2					
ANR	8462664	Identifier	NULL		8462449	0					
ANR	8462665	Argument	0		8462449	3					
ANR	8462666	PrimaryExpression	0		8462449	0					
ANR	8462667	PrimaryExpression	0		8462449	1					
ANR	8462668	CompoundStatement		29:101:1182:1182	8462449	1					
ANR	8462669	ExpressionStatement	"errprintf ( pmi -> memory , ""   --saved-pages not supported by the '%s' device.\\n"" , pdev -> dname )"	780:24:24729:24854	8462449	0	True				
ANR	8462670	CallExpression	"errprintf ( pmi -> memory , ""   --saved-pages not supported by the '%s' device.\\n"" , pdev -> dname )"		8462449	0					
ANR	8462671	Callee	errprintf		8462449	0					
ANR	8462672	Identifier	errprintf		8462449	0					
ANR	8462673	ArgumentList	pmi -> memory		8462449	1					
ANR	8462674	Argument	pmi -> memory		8462449	0					
ANR	8462675	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8462676	Identifier	pmi		8462449	0					
ANR	8462677	Identifier	memory		8462449	1					
ANR	8462678	Argument	"""   --saved-pages not supported by the '%s' device.\\n"""		8462449	1					
ANR	8462679	PrimaryExpression	"""   --saved-pages not supported by the '%s' device.\\n"""		8462449	0					
ANR	8462680	Argument	pdev -> dname		8462449	2					
ANR	8462681	PtrMemberAccess	pdev -> dname		8462449	0					
ANR	8462682	Identifier	pdev		8462449	0					
ANR	8462683	Identifier	dname		8462449	1					
ANR	8462684	ReturnStatement	return - 1 ;	782:24:24880:24889	8462449	1	True				
ANR	8462685	UnaryOperationExpression	- 1		8462449	0					
ANR	8462686	UnaryOperator	-		8462449	0					
ANR	8462687	PrimaryExpression	1		8462449	1					
ANR	8462688	ExpressionStatement	"code = gx_saved_pages_param_process ( ppdev , ( byte * ) arg + 12 , strlen ( arg + 12 ) )"	784:20:24933:25007	8462449	4	True				
ANR	8462689	AssignmentExpression	"code = gx_saved_pages_param_process ( ppdev , ( byte * ) arg + 12 , strlen ( arg + 12 ) )"		8462449	0		=			
ANR	8462690	Identifier	code		8462449	0					
ANR	8462691	CallExpression	"gx_saved_pages_param_process ( ppdev , ( byte * ) arg + 12 , strlen ( arg + 12 ) )"		8462449	1					
ANR	8462692	Callee	gx_saved_pages_param_process		8462449	0					
ANR	8462693	Identifier	gx_saved_pages_param_process		8462449	0					
ANR	8462694	ArgumentList	ppdev		8462449	1					
ANR	8462695	Argument	ppdev		8462449	0					
ANR	8462696	Identifier	ppdev		8462449	0					
ANR	8462697	Argument	( byte * ) arg + 12		8462449	1					
ANR	8462698	AdditiveExpression	( byte * ) arg + 12		8462449	0		+			
ANR	8462699	CastExpression	( byte * ) arg		8462449	0					
ANR	8462700	CastTarget	byte *		8462449	0					
ANR	8462701	Identifier	arg		8462449	1					
ANR	8462702	PrimaryExpression	12		8462449	1					
ANR	8462703	Argument	strlen ( arg + 12 )		8462449	2					
ANR	8462704	CallExpression	strlen ( arg + 12 )		8462449	0					
ANR	8462705	Callee	strlen		8462449	0					
ANR	8462706	Identifier	strlen		8462449	0					
ANR	8462707	ArgumentList	arg + 12		8462449	1					
ANR	8462708	Argument	arg + 12		8462449	0					
ANR	8462709	AdditiveExpression	arg + 12		8462449	0		+			
ANR	8462710	Identifier	arg		8462449	0					
ANR	8462711	PrimaryExpression	12		8462449	1					
ANR	8462712	IfStatement	if ( code > 0 )		8462449	5					
ANR	8462713	Condition	code > 0	785:24:25033:25040	8462449	0	True				
ANR	8462714	RelationalExpression	code > 0		8462449	0		>			
ANR	8462715	Identifier	code		8462449	0					
ANR	8462716	PrimaryExpression	0		8462449	1					
ANR	8462717	CompoundStatement		39:24:1718:1763	8462449	1					
ANR	8462718	IdentifierDeclStatement	gx_color_index color ;	787:24:25114:25134	8462449	0	True				
ANR	8462719	IdentifierDecl	color		8462449	0					
ANR	8462720	IdentifierDeclType	gx_color_index		8462449	0					
ANR	8462721	Identifier	color		8462449	1					
ANR	8462722	IdentifierDeclStatement	"gx_color_value rgb_white [ 3 ] = { 65535 , 65535 , 65535 } ;"	788:24:25160:25213	8462449	1	True				
ANR	8462723	IdentifierDecl	"rgb_white [ 3 ] = { 65535 , 65535 , 65535 }"		8462449	0					
ANR	8462724	IdentifierDeclType	gx_color_value [ 3 ]		8462449	0					
ANR	8462725	Identifier	rgb_white		8462449	1					
ANR	8462726	PrimaryExpression	3		8462449	2					
ANR	8462727	AssignmentExpression	"rgb_white [ 3 ] = { 65535 , 65535 , 65535 }"		8462449	3		=			
ANR	8462728	Identifier	rgb_white		8462449	0					
ANR	8462729	InitializerList	65535		8462449	1					
ANR	8462730	PrimaryExpression	65535		8462449	0					
ANR	8462731	PrimaryExpression	65535		8462449	1					
ANR	8462732	PrimaryExpression	65535		8462449	2					
ANR	8462733	IdentifierDeclStatement	"gx_color_value cmyk_white [ 4 ] = { 0 , 0 , 0 , 0 } ;"	789:24:25239:25284	8462449	2	True				
ANR	8462734	IdentifierDecl	"cmyk_white [ 4 ] = { 0 , 0 , 0 , 0 }"		8462449	0					
ANR	8462735	IdentifierDeclType	gx_color_value [ 4 ]		8462449	0					
ANR	8462736	Identifier	cmyk_white		8462449	1					
ANR	8462737	PrimaryExpression	4		8462449	2					
ANR	8462738	AssignmentExpression	"cmyk_white [ 4 ] = { 0 , 0 , 0 , 0 }"		8462449	3		=			
ANR	8462739	Identifier	cmyk_white		8462449	0					
ANR	8462740	InitializerList	0		8462449	1					
ANR	8462741	PrimaryExpression	0		8462449	0					
ANR	8462742	PrimaryExpression	0		8462449	1					
ANR	8462743	PrimaryExpression	0		8462449	2					
ANR	8462744	PrimaryExpression	0		8462449	3					
ANR	8462745	IfStatement	if ( pdev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE )		8462449	3					
ANR	8462746	Condition	pdev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE	791:28:25315:25369	8462449	0	True				
ANR	8462747	EqualityExpression	pdev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		8462449	0		==			
ANR	8462748	MemberAccess	pdev -> color_info . polarity		8462449	0					
ANR	8462749	PtrMemberAccess	pdev -> color_info		8462449	0					
ANR	8462750	Identifier	pdev		8462449	0					
ANR	8462751	Identifier	color_info		8462449	1					
ANR	8462752	Identifier	polarity		8462449	1					
ANR	8462753	Identifier	GX_CINFO_POLARITY_ADDITIVE		8462449	1					
ANR	8462754	ExpressionStatement	"color = dev_proc ( pdev , map_rgb_color ) ( pdev , rgb_white )"	792:28:25400:25454	8462449	1	True				
ANR	8462755	AssignmentExpression	"color = dev_proc ( pdev , map_rgb_color ) ( pdev , rgb_white )"		8462449	0		=			
ANR	8462756	Identifier	color		8462449	0					
ANR	8462757	CallExpression	"dev_proc ( pdev , map_rgb_color ) ( pdev , rgb_white )"		8462449	1					
ANR	8462758	Callee	"dev_proc ( pdev , map_rgb_color )"		8462449	0					
ANR	8462759	CallExpression	"dev_proc ( pdev , map_rgb_color )"		8462449	0					
ANR	8462760	Callee	dev_proc		8462449	0					
ANR	8462761	Identifier	dev_proc		8462449	0					
ANR	8462762	ArgumentList	pdev		8462449	1					
ANR	8462763	Argument	pdev		8462449	0					
ANR	8462764	Identifier	pdev		8462449	0					
ANR	8462765	Argument	map_rgb_color		8462449	1					
ANR	8462766	Identifier	map_rgb_color		8462449	0					
ANR	8462767	ArgumentList	pdev		8462449	1					
ANR	8462768	Argument	pdev		8462449	0					
ANR	8462769	Identifier	pdev		8462449	0					
ANR	8462770	Argument	rgb_white		8462449	1					
ANR	8462771	Identifier	rgb_white		8462449	0					
ANR	8462772	ElseStatement	else		8462449	0					
ANR	8462773	ExpressionStatement	"color = dev_proc ( pdev , map_cmyk_color ) ( pdev , cmyk_white )"	794:28:25513:25569	8462449	0	True				
ANR	8462774	AssignmentExpression	"color = dev_proc ( pdev , map_cmyk_color ) ( pdev , cmyk_white )"		8462449	0		=			
ANR	8462775	Identifier	color		8462449	0					
ANR	8462776	CallExpression	"dev_proc ( pdev , map_cmyk_color ) ( pdev , cmyk_white )"		8462449	1					
ANR	8462777	Callee	"dev_proc ( pdev , map_cmyk_color )"		8462449	0					
ANR	8462778	CallExpression	"dev_proc ( pdev , map_cmyk_color )"		8462449	0					
ANR	8462779	Callee	dev_proc		8462449	0					
ANR	8462780	Identifier	dev_proc		8462449	0					
ANR	8462781	ArgumentList	pdev		8462449	1					
ANR	8462782	Argument	pdev		8462449	0					
ANR	8462783	Identifier	pdev		8462449	0					
ANR	8462784	Argument	map_cmyk_color		8462449	1					
ANR	8462785	Identifier	map_cmyk_color		8462449	0					
ANR	8462786	ArgumentList	pdev		8462449	1					
ANR	8462787	Argument	pdev		8462449	0					
ANR	8462788	Identifier	pdev		8462449	0					
ANR	8462789	Argument	cmyk_white		8462449	1					
ANR	8462790	Identifier	cmyk_white		8462449	0					
ANR	8462791	ExpressionStatement	"code = dev_proc ( pdev , fill_rectangle ) ( pdev , 0 , 0 , pdev -> width , pdev -> height , color )"	795:24:25595:25678	8462449	4	True				
ANR	8462792	AssignmentExpression	"code = dev_proc ( pdev , fill_rectangle ) ( pdev , 0 , 0 , pdev -> width , pdev -> height , color )"		8462449	0		=			
ANR	8462793	Identifier	code		8462449	0					
ANR	8462794	CallExpression	"dev_proc ( pdev , fill_rectangle ) ( pdev , 0 , 0 , pdev -> width , pdev -> height , color )"		8462449	1					
ANR	8462795	Callee	"dev_proc ( pdev , fill_rectangle )"		8462449	0					
ANR	8462796	CallExpression	"dev_proc ( pdev , fill_rectangle )"		8462449	0					
ANR	8462797	Callee	dev_proc		8462449	0					
ANR	8462798	Identifier	dev_proc		8462449	0					
ANR	8462799	ArgumentList	pdev		8462449	1					
ANR	8462800	Argument	pdev		8462449	0					
ANR	8462801	Identifier	pdev		8462449	0					
ANR	8462802	Argument	fill_rectangle		8462449	1					
ANR	8462803	Identifier	fill_rectangle		8462449	0					
ANR	8462804	ArgumentList	pdev		8462449	1					
ANR	8462805	Argument	pdev		8462449	0					
ANR	8462806	Identifier	pdev		8462449	0					
ANR	8462807	Argument	0		8462449	1					
ANR	8462808	PrimaryExpression	0		8462449	0					
ANR	8462809	Argument	0		8462449	2					
ANR	8462810	PrimaryExpression	0		8462449	0					
ANR	8462811	Argument	pdev -> width		8462449	3					
ANR	8462812	PtrMemberAccess	pdev -> width		8462449	0					
ANR	8462813	Identifier	pdev		8462449	0					
ANR	8462814	Identifier	width		8462449	1					
ANR	8462815	Argument	pdev -> height		8462449	4					
ANR	8462816	PtrMemberAccess	pdev -> height		8462449	0					
ANR	8462817	Identifier	pdev		8462449	0					
ANR	8462818	Identifier	height		8462449	1					
ANR	8462819	Argument	color		8462449	5					
ANR	8462820	Identifier	color		8462449	0					
ANR	8462821	BreakStatement	break ;	797:20:25722:25727	8462449	6	True				
ANR	8462822	ElseStatement	else		8462449	0					
ANR	8462823	IfStatement	"if ( strncmp ( arg , ""saved-pages-test"" , 16 ) == 0 )"		8462449	0					
ANR	8462824	Condition	"strncmp ( arg , ""saved-pages-test"" , 16 ) == 0"	801:27:25982:26022	8462449	0	True				
ANR	8462825	EqualityExpression	"strncmp ( arg , ""saved-pages-test"" , 16 ) == 0"		8462449	0		==			
ANR	8462826	CallExpression	"strncmp ( arg , ""saved-pages-test"" , 16 )"		8462449	0					
ANR	8462827	Callee	strncmp		8462449	0					
ANR	8462828	Identifier	strncmp		8462449	0					
ANR	8462829	ArgumentList	arg		8462449	1					
ANR	8462830	Argument	arg		8462449	0					
ANR	8462831	Identifier	arg		8462449	0					
ANR	8462832	Argument	"""saved-pages-test"""		8462449	1					
ANR	8462833	PrimaryExpression	"""saved-pages-test"""		8462449	0					
ANR	8462834	Argument	16		8462449	2					
ANR	8462835	PrimaryExpression	16		8462449	0					
ANR	8462836	PrimaryExpression	0		8462449	1					
ANR	8462837	CompoundStatement		53:20:2556:2585	8462449	1					
ANR	8462838	IdentifierDeclStatement	gx_device * pdev = pmi -> device ;	803:20:26077:26106	8462449	0	True				
ANR	8462839	IdentifierDecl	* pdev = pmi -> device		8462449	0					
ANR	8462840	IdentifierDeclType	gx_device *		8462449	0					
ANR	8462841	Identifier	pdev		8462449	1					
ANR	8462842	AssignmentExpression	* pdev = pmi -> device		8462449	2		=			
ANR	8462843	Identifier	pdev		8462449	0					
ANR	8462844	PtrMemberAccess	pmi -> device		8462449	1					
ANR	8462845	Identifier	pmi		8462449	0					
ANR	8462846	Identifier	device		8462449	1					
ANR	8462847	IfStatement	if ( ( code = gs_opendevice ( pdev ) ) < 0 )		8462449	1					
ANR	8462848	Condition	( code = gs_opendevice ( pdev ) ) < 0	805:24:26133:26164	8462449	0	True				
ANR	8462849	RelationalExpression	( code = gs_opendevice ( pdev ) ) < 0		8462449	0		<			
ANR	8462850	AssignmentExpression	code = gs_opendevice ( pdev )		8462449	0		=			
ANR	8462851	Identifier	code		8462449	0					
ANR	8462852	CallExpression	gs_opendevice ( pdev )		8462449	1					
ANR	8462853	Callee	gs_opendevice		8462449	0					
ANR	8462854	Identifier	gs_opendevice		8462449	0					
ANR	8462855	ArgumentList	pdev		8462449	1					
ANR	8462856	Argument	pdev		8462449	0					
ANR	8462857	Identifier	pdev		8462449	0					
ANR	8462858	PrimaryExpression	0		8462449	1					
ANR	8462859	BreakStatement	break ;	806:24:26191:26196	8462449	1	True				
ANR	8462860	IfStatement	"if ( dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_supports_saved_pages , NULL , 0 ) <= 0 )"		8462449	2					
ANR	8462861	Condition	"dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_supports_saved_pages , NULL , 0 ) <= 0"	808:24:26223:26297	8462449	0	True				
ANR	8462862	RelationalExpression	"dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_supports_saved_pages , NULL , 0 ) <= 0"		8462449	0		<=			
ANR	8462863	CallExpression	"dev_proc ( pdev , dev_spec_op ) ( pdev , gxdso_supports_saved_pages , NULL , 0 )"		8462449	0					
ANR	8462864	Callee	"dev_proc ( pdev , dev_spec_op )"		8462449	0					
ANR	8462865	CallExpression	"dev_proc ( pdev , dev_spec_op )"		8462449	0					
ANR	8462866	Callee	dev_proc		8462449	0					
ANR	8462867	Identifier	dev_proc		8462449	0					
ANR	8462868	ArgumentList	pdev		8462449	1					
ANR	8462869	Argument	pdev		8462449	0					
ANR	8462870	Identifier	pdev		8462449	0					
ANR	8462871	Argument	dev_spec_op		8462449	1					
ANR	8462872	Identifier	dev_spec_op		8462449	0					
ANR	8462873	ArgumentList	pdev		8462449	1					
ANR	8462874	Argument	pdev		8462449	0					
ANR	8462875	Identifier	pdev		8462449	0					
ANR	8462876	Argument	gxdso_supports_saved_pages		8462449	1					
ANR	8462877	Identifier	gxdso_supports_saved_pages		8462449	0					
ANR	8462878	Argument	NULL		8462449	2					
ANR	8462879	Identifier	NULL		8462449	0					
ANR	8462880	Argument	0		8462449	3					
ANR	8462881	PrimaryExpression	0		8462449	0					
ANR	8462882	PrimaryExpression	0		8462449	1					
ANR	8462883	CompoundStatement		58:101:2779:2779	8462449	1					
ANR	8462884	ExpressionStatement	"errprintf ( pmi -> memory , ""   --saved-pages-test not supported by the '%s' device.\\n"" , pdev -> dname )"	809:24:26326:26456	8462449	0	True				
ANR	8462885	CallExpression	"errprintf ( pmi -> memory , ""   --saved-pages-test not supported by the '%s' device.\\n"" , pdev -> dname )"		8462449	0					
ANR	8462886	Callee	errprintf		8462449	0					
ANR	8462887	Identifier	errprintf		8462449	0					
ANR	8462888	ArgumentList	pmi -> memory		8462449	1					
ANR	8462889	Argument	pmi -> memory		8462449	0					
ANR	8462890	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8462891	Identifier	pmi		8462449	0					
ANR	8462892	Identifier	memory		8462449	1					
ANR	8462893	Argument	"""   --saved-pages-test not supported by the '%s' device.\\n"""		8462449	1					
ANR	8462894	PrimaryExpression	"""   --saved-pages-test not supported by the '%s' device.\\n"""		8462449	0					
ANR	8462895	Argument	pdev -> dname		8462449	2					
ANR	8462896	PtrMemberAccess	pdev -> dname		8462449	0					
ANR	8462897	Identifier	pdev		8462449	0					
ANR	8462898	Identifier	dname		8462449	1					
ANR	8462899	BreakStatement	break ;	811:24:26482:26487	8462449	1	True				
ANR	8462900	ExpressionStatement	"code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""begin"" , 5 )"	813:20:26554:26636	8462449	3	True				
ANR	8462901	AssignmentExpression	"code = gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""begin"" , 5 )"		8462449	0		=			
ANR	8462902	Identifier	code		8462449	0					
ANR	8462903	CallExpression	"gx_saved_pages_param_process ( ( gx_device_printer * ) pdev , ( byte * ) ""begin"" , 5 )"		8462449	1					
ANR	8462904	Callee	gx_saved_pages_param_process		8462449	0					
ANR	8462905	Identifier	gx_saved_pages_param_process		8462449	0					
ANR	8462906	ArgumentList	( gx_device_printer * ) pdev		8462449	1					
ANR	8462907	Argument	( gx_device_printer * ) pdev		8462449	0					
ANR	8462908	CastExpression	( gx_device_printer * ) pdev		8462449	0					
ANR	8462909	CastTarget	gx_device_printer *		8462449	0					
ANR	8462910	Identifier	pdev		8462449	1					
ANR	8462911	Argument	"( byte * ) ""begin"""		8462449	1					
ANR	8462912	CastExpression	"( byte * ) ""begin"""		8462449	0					
ANR	8462913	CastTarget	byte *		8462449	0					
ANR	8462914	PrimaryExpression	"""begin"""		8462449	1					
ANR	8462915	Argument	5		8462449	2					
ANR	8462916	PrimaryExpression	5		8462449	0					
ANR	8462917	IfStatement	if ( code > 0 )		8462449	4					
ANR	8462918	Condition	code > 0	814:24:26662:26669	8462449	0	True				
ANR	8462919	RelationalExpression	code > 0		8462449	0		>			
ANR	8462920	Identifier	code		8462449	0					
ANR	8462921	PrimaryExpression	0		8462449	1					
ANR	8462922	CompoundStatement		68:24:3347:3392	8462449	1					
ANR	8462923	IdentifierDeclStatement	gx_color_index color ;	816:24:26743:26763	8462449	0	True				
ANR	8462924	IdentifierDecl	color		8462449	0					
ANR	8462925	IdentifierDeclType	gx_color_index		8462449	0					
ANR	8462926	Identifier	color		8462449	1					
ANR	8462927	IdentifierDeclStatement	"gx_color_value rgb_white [ 3 ] = { 65535 , 65535 , 65535 } ;"	817:24:26789:26842	8462449	1	True				
ANR	8462928	IdentifierDecl	"rgb_white [ 3 ] = { 65535 , 65535 , 65535 }"		8462449	0					
ANR	8462929	IdentifierDeclType	gx_color_value [ 3 ]		8462449	0					
ANR	8462930	Identifier	rgb_white		8462449	1					
ANR	8462931	PrimaryExpression	3		8462449	2					
ANR	8462932	AssignmentExpression	"rgb_white [ 3 ] = { 65535 , 65535 , 65535 }"		8462449	3		=			
ANR	8462933	Identifier	rgb_white		8462449	0					
ANR	8462934	InitializerList	65535		8462449	1					
ANR	8462935	PrimaryExpression	65535		8462449	0					
ANR	8462936	PrimaryExpression	65535		8462449	1					
ANR	8462937	PrimaryExpression	65535		8462449	2					
ANR	8462938	IdentifierDeclStatement	"gx_color_value cmyk_white [ 4 ] = { 0 , 0 , 0 , 0 } ;"	818:24:26868:26913	8462449	2	True				
ANR	8462939	IdentifierDecl	"cmyk_white [ 4 ] = { 0 , 0 , 0 , 0 }"		8462449	0					
ANR	8462940	IdentifierDeclType	gx_color_value [ 4 ]		8462449	0					
ANR	8462941	Identifier	cmyk_white		8462449	1					
ANR	8462942	PrimaryExpression	4		8462449	2					
ANR	8462943	AssignmentExpression	"cmyk_white [ 4 ] = { 0 , 0 , 0 , 0 }"		8462449	3		=			
ANR	8462944	Identifier	cmyk_white		8462449	0					
ANR	8462945	InitializerList	0		8462449	1					
ANR	8462946	PrimaryExpression	0		8462449	0					
ANR	8462947	PrimaryExpression	0		8462449	1					
ANR	8462948	PrimaryExpression	0		8462449	2					
ANR	8462949	PrimaryExpression	0		8462449	3					
ANR	8462950	IfStatement	if ( pdev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE )		8462449	3					
ANR	8462951	Condition	pdev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE	820:28:26944:26998	8462449	0	True				
ANR	8462952	EqualityExpression	pdev -> color_info . polarity == GX_CINFO_POLARITY_ADDITIVE		8462449	0		==			
ANR	8462953	MemberAccess	pdev -> color_info . polarity		8462449	0					
ANR	8462954	PtrMemberAccess	pdev -> color_info		8462449	0					
ANR	8462955	Identifier	pdev		8462449	0					
ANR	8462956	Identifier	color_info		8462449	1					
ANR	8462957	Identifier	polarity		8462449	1					
ANR	8462958	Identifier	GX_CINFO_POLARITY_ADDITIVE		8462449	1					
ANR	8462959	ExpressionStatement	"color = dev_proc ( pdev , map_rgb_color ) ( pdev , rgb_white )"	821:28:27029:27083	8462449	1	True				
ANR	8462960	AssignmentExpression	"color = dev_proc ( pdev , map_rgb_color ) ( pdev , rgb_white )"		8462449	0		=			
ANR	8462961	Identifier	color		8462449	0					
ANR	8462962	CallExpression	"dev_proc ( pdev , map_rgb_color ) ( pdev , rgb_white )"		8462449	1					
ANR	8462963	Callee	"dev_proc ( pdev , map_rgb_color )"		8462449	0					
ANR	8462964	CallExpression	"dev_proc ( pdev , map_rgb_color )"		8462449	0					
ANR	8462965	Callee	dev_proc		8462449	0					
ANR	8462966	Identifier	dev_proc		8462449	0					
ANR	8462967	ArgumentList	pdev		8462449	1					
ANR	8462968	Argument	pdev		8462449	0					
ANR	8462969	Identifier	pdev		8462449	0					
ANR	8462970	Argument	map_rgb_color		8462449	1					
ANR	8462971	Identifier	map_rgb_color		8462449	0					
ANR	8462972	ArgumentList	pdev		8462449	1					
ANR	8462973	Argument	pdev		8462449	0					
ANR	8462974	Identifier	pdev		8462449	0					
ANR	8462975	Argument	rgb_white		8462449	1					
ANR	8462976	Identifier	rgb_white		8462449	0					
ANR	8462977	ElseStatement	else		8462449	0					
ANR	8462978	ExpressionStatement	"color = dev_proc ( pdev , map_cmyk_color ) ( pdev , cmyk_white )"	823:28:27142:27198	8462449	0	True				
ANR	8462979	AssignmentExpression	"color = dev_proc ( pdev , map_cmyk_color ) ( pdev , cmyk_white )"		8462449	0		=			
ANR	8462980	Identifier	color		8462449	0					
ANR	8462981	CallExpression	"dev_proc ( pdev , map_cmyk_color ) ( pdev , cmyk_white )"		8462449	1					
ANR	8462982	Callee	"dev_proc ( pdev , map_cmyk_color )"		8462449	0					
ANR	8462983	CallExpression	"dev_proc ( pdev , map_cmyk_color )"		8462449	0					
ANR	8462984	Callee	dev_proc		8462449	0					
ANR	8462985	Identifier	dev_proc		8462449	0					
ANR	8462986	ArgumentList	pdev		8462449	1					
ANR	8462987	Argument	pdev		8462449	0					
ANR	8462988	Identifier	pdev		8462449	0					
ANR	8462989	Argument	map_cmyk_color		8462449	1					
ANR	8462990	Identifier	map_cmyk_color		8462449	0					
ANR	8462991	ArgumentList	pdev		8462449	1					
ANR	8462992	Argument	pdev		8462449	0					
ANR	8462993	Identifier	pdev		8462449	0					
ANR	8462994	Argument	cmyk_white		8462449	1					
ANR	8462995	Identifier	cmyk_white		8462449	0					
ANR	8462996	ExpressionStatement	"code = dev_proc ( pdev , fill_rectangle ) ( pdev , 0 , 0 , pdev -> width , pdev -> height , color )"	824:24:27224:27307	8462449	4	True				
ANR	8462997	AssignmentExpression	"code = dev_proc ( pdev , fill_rectangle ) ( pdev , 0 , 0 , pdev -> width , pdev -> height , color )"		8462449	0		=			
ANR	8462998	Identifier	code		8462449	0					
ANR	8462999	CallExpression	"dev_proc ( pdev , fill_rectangle ) ( pdev , 0 , 0 , pdev -> width , pdev -> height , color )"		8462449	1					
ANR	8463000	Callee	"dev_proc ( pdev , fill_rectangle )"		8462449	0					
ANR	8463001	CallExpression	"dev_proc ( pdev , fill_rectangle )"		8462449	0					
ANR	8463002	Callee	dev_proc		8462449	0					
ANR	8463003	Identifier	dev_proc		8462449	0					
ANR	8463004	ArgumentList	pdev		8462449	1					
ANR	8463005	Argument	pdev		8462449	0					
ANR	8463006	Identifier	pdev		8462449	0					
ANR	8463007	Argument	fill_rectangle		8462449	1					
ANR	8463008	Identifier	fill_rectangle		8462449	0					
ANR	8463009	ArgumentList	pdev		8462449	1					
ANR	8463010	Argument	pdev		8462449	0					
ANR	8463011	Identifier	pdev		8462449	0					
ANR	8463012	Argument	0		8462449	1					
ANR	8463013	PrimaryExpression	0		8462449	0					
ANR	8463014	Argument	0		8462449	2					
ANR	8463015	PrimaryExpression	0		8462449	0					
ANR	8463016	Argument	pdev -> width		8462449	3					
ANR	8463017	PtrMemberAccess	pdev -> width		8462449	0					
ANR	8463018	Identifier	pdev		8462449	0					
ANR	8463019	Identifier	width		8462449	1					
ANR	8463020	Argument	pdev -> height		8462449	4					
ANR	8463021	PtrMemberAccess	pdev -> height		8462449	0					
ANR	8463022	Identifier	pdev		8462449	0					
ANR	8463023	Identifier	height		8462449	1					
ANR	8463024	Argument	color		8462449	5					
ANR	8463025	Identifier	color		8462449	0					
ANR	8463026	IfStatement	if ( code >= 0 )		8462449	5					
ANR	8463027	Condition	code >= 0	826:24:27355:27363	8462449	0	True				
ANR	8463028	RelationalExpression	code >= 0		8462449	0		>=			
ANR	8463029	Identifier	code		8462449	0					
ANR	8463030	PrimaryExpression	0		8462449	1					
ANR	8463031	ExpressionStatement	pmi -> saved_pages_test_mode = true	827:24:27390:27423	8462449	1	True				
ANR	8463032	AssignmentExpression	pmi -> saved_pages_test_mode = true		8462449	0		=			
ANR	8463033	PtrMemberAccess	pmi -> saved_pages_test_mode		8462449	0					
ANR	8463034	Identifier	pmi		8462449	0					
ANR	8463035	Identifier	saved_pages_test_mode		8462449	1					
ANR	8463036	Identifier	true		8462449	1					
ANR	8463037	BreakStatement	break ;	829:20:27480:27485	8462449	6	True				
ANR	8463038	Label	default :	832:12:27551:27558	8462449	2	True				
ANR	8463039	Identifier	default		8462449	0					
ANR	8463040	ExpressionStatement	"dmprintf1 ( pmi -> memory , ""Unrecognized switch: %s\\n"" , arg )"	833:16:27576:27632	8462449	3	True				
ANR	8463041	CallExpression	"dmprintf1 ( pmi -> memory , ""Unrecognized switch: %s\\n"" , arg )"		8462449	0					
ANR	8463042	Callee	dmprintf1		8462449	0					
ANR	8463043	Identifier	dmprintf1		8462449	0					
ANR	8463044	ArgumentList	pmi -> memory		8462449	1					
ANR	8463045	Argument	pmi -> memory		8462449	0					
ANR	8463046	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8463047	Identifier	pmi		8462449	0					
ANR	8463048	Identifier	memory		8462449	1					
ANR	8463049	Argument	"""Unrecognized switch: %s\\n"""		8462449	1					
ANR	8463050	PrimaryExpression	"""Unrecognized switch: %s\\n"""		8462449	0					
ANR	8463051	Argument	arg		8462449	2					
ANR	8463052	Identifier	arg		8462449	0					
ANR	8463053	ExpressionStatement	code = - 1	834:16:27650:27659	8462449	4	True				
ANR	8463054	AssignmentExpression	code = - 1		8462449	0		=			
ANR	8463055	Identifier	code		8462449	0					
ANR	8463056	UnaryOperationExpression	- 1		8462449	1					
ANR	8463057	UnaryOperator	-		8462449	0					
ANR	8463058	PrimaryExpression	1		8462449	1					
ANR	8463059	Label	case '\\0' :	835:12:27673:27682	8462449	5	True				
ANR	8463060	ContinueStatement	continue ;	837:16:27757:27765	8462449	6	True				
ANR	8463061	Label	case 'd' :	838:12:27779:27787	8462449	7	True				
ANR	8463062	Label	case 'D' :	839:12:27801:27809	8462449	8	True				
ANR	8463063	CompoundStatement		97:20:4595:4611	8462449	9					
ANR	8463064	IdentifierDeclStatement	"char * eqp = strchr ( arg , '=' ) ;"	842:20:27931:27959	8462449	0	True				
ANR	8463065	IdentifierDecl	"* eqp = strchr ( arg , '=' )"		8462449	0					
ANR	8463066	IdentifierDeclType	char *		8462449	0					
ANR	8463067	Identifier	eqp		8462449	1					
ANR	8463068	AssignmentExpression	"* eqp = strchr ( arg , '=' )"		8462449	2		=			
ANR	8463069	Identifier	eqp		8462449	0					
ANR	8463070	CallExpression	"strchr ( arg , '=' )"		8462449	1					
ANR	8463071	Callee	strchr		8462449	0					
ANR	8463072	Identifier	strchr		8462449	0					
ANR	8463073	ArgumentList	arg		8462449	1					
ANR	8463074	Argument	arg		8462449	0					
ANR	8463075	Identifier	arg		8462449	0					
ANR	8463076	Argument	'='		8462449	1					
ANR	8463077	PrimaryExpression	'='		8462449	0					
ANR	8463078	IdentifierDeclStatement	const char * value ;	843:20:27981:27998	8462449	1	True				
ANR	8463079	IdentifierDecl	* value		8462449	0					
ANR	8463080	IdentifierDeclType	const char *		8462449	0					
ANR	8463081	Identifier	value		8462449	1					
ANR	8463082	IdentifierDeclStatement	int vi ;	844:20:28020:28026	8462449	2	True				
ANR	8463083	IdentifierDecl	vi		8462449	0					
ANR	8463084	IdentifierDeclType	int		8462449	0					
ANR	8463085	Identifier	vi		8462449	1					
ANR	8463086	IdentifierDeclStatement	float vf ;	845:20:28048:28056	8462449	3	True				
ANR	8463087	IdentifierDecl	vf		8462449	0					
ANR	8463088	IdentifierDeclType	float		8462449	0					
ANR	8463089	Identifier	vf		8462449	1					
ANR	8463090	IdentifierDeclStatement	bool bval = true ;	846:20:28078:28094	8462449	4	True				
ANR	8463091	IdentifierDecl	bval = true		8462449	0					
ANR	8463092	IdentifierDeclType	bool		8462449	0					
ANR	8463093	Identifier	bval		8462449	1					
ANR	8463094	AssignmentExpression	bval = true		8462449	2		=			
ANR	8463095	Identifier	true		8462449	0					
ANR	8463096	Identifier	true		8462449	1					
ANR	8463097	IdentifierDeclStatement	char buffer [ 128 ] ;	847:20:28116:28132	8462449	5	True				
ANR	8463098	IdentifierDecl	buffer [ 128 ]		8462449	0					
ANR	8463099	IdentifierDeclType	char [ 128 ]		8462449	0					
ANR	8463100	Identifier	buffer		8462449	1					
ANR	8463101	PrimaryExpression	128		8462449	2					
ANR	8463102	IfStatement	"if ( eqp || ( eqp = strchr ( arg , '#' ) ) )"		8462449	6					
ANR	8463103	Condition	"eqp || ( eqp = strchr ( arg , '#' ) )"	849:24:28159:28189	8462449	0	True				
ANR	8463104	OrExpression	"eqp || ( eqp = strchr ( arg , '#' ) )"		8462449	0		||			
ANR	8463105	Identifier	eqp		8462449	0					
ANR	8463106	AssignmentExpression	"eqp = strchr ( arg , '#' )"		8462449	1		=			
ANR	8463107	Identifier	eqp		8462449	0					
ANR	8463108	CallExpression	"strchr ( arg , '#' )"		8462449	1					
ANR	8463109	Callee	strchr		8462449	0					
ANR	8463110	Identifier	strchr		8462449	0					
ANR	8463111	ArgumentList	arg		8462449	1					
ANR	8463112	Argument	arg		8462449	0					
ANR	8463113	Identifier	arg		8462449	0					
ANR	8463114	Argument	'#'		8462449	1					
ANR	8463115	PrimaryExpression	'#'		8462449	0					
ANR	8463116	ExpressionStatement	value = eqp + 1	850:24:28216:28231	8462449	1	True				
ANR	8463117	AssignmentExpression	value = eqp + 1		8462449	0		=			
ANR	8463118	Identifier	value		8462449	0					
ANR	8463119	AdditiveExpression	eqp + 1		8462449	1		+			
ANR	8463120	Identifier	eqp		8462449	0					
ANR	8463121	PrimaryExpression	1		8462449	1					
ANR	8463122	ElseStatement	else		8462449	0					
ANR	8463123	CompoundStatement		101:25:4737:4737	8462449	0					
ANR	8463124	ExpressionStatement	"code = check_for_special_int ( pmi , arg , ( int ) bval )"	853:24:28338:28387	8462449	0	True				
ANR	8463125	AssignmentExpression	"code = check_for_special_int ( pmi , arg , ( int ) bval )"		8462449	0		=			
ANR	8463126	Identifier	code		8462449	0					
ANR	8463127	CallExpression	"check_for_special_int ( pmi , arg , ( int ) bval )"		8462449	1					
ANR	8463128	Callee	check_for_special_int		8462449	0					
ANR	8463129	Identifier	check_for_special_int		8462449	0					
ANR	8463130	ArgumentList	pmi		8462449	1					
ANR	8463131	Argument	pmi		8462449	0					
ANR	8463132	Identifier	pmi		8462449	0					
ANR	8463133	Argument	arg		8462449	1					
ANR	8463134	Identifier	arg		8462449	0					
ANR	8463135	Argument	( int ) bval		8462449	2					
ANR	8463136	CastExpression	( int ) bval		8462449	0					
ANR	8463137	CastTarget	int		8462449	0					
ANR	8463138	Identifier	bval		8462449	1					
ANR	8463139	IfStatement	if ( code < 0 )		8462449	1					
ANR	8463140	Condition	code < 0	854:28:28417:28424	8462449	0	True				
ANR	8463141	RelationalExpression	code < 0		8462449	0		<			
ANR	8463142	Identifier	code		8462449	0					
ANR	8463143	PrimaryExpression	0		8462449	1					
ANR	8463144	ExpressionStatement	code = 0	854:38:28427:28435	8462449	1	True				
ANR	8463145	AssignmentExpression	code = 0		8462449	0		=			
ANR	8463146	Identifier	code		8462449	0					
ANR	8463147	PrimaryExpression	0		8462449	1					
ANR	8463148	IfStatement	if ( code == 1 )		8462449	2					
ANR	8463149	Condition	code == 1	855:28:28465:28473	8462449	0	True				
ANR	8463150	EqualityExpression	code == 1		8462449	0		==			
ANR	8463151	Identifier	code		8462449	0					
ANR	8463152	PrimaryExpression	1		8462449	1					
ANR	8463153	ExpressionStatement	"code = param_write_bool ( ( gs_param_list * ) params , arg , & bval )"	856:28:28504:28646	8462449	1	True				
ANR	8463154	AssignmentExpression	"code = param_write_bool ( ( gs_param_list * ) params , arg , & bval )"		8462449	0		=			
ANR	8463155	Identifier	code		8462449	0					
ANR	8463156	CallExpression	"param_write_bool ( ( gs_param_list * ) params , arg , & bval )"		8462449	1					
ANR	8463157	Callee	param_write_bool		8462449	0					
ANR	8463158	Identifier	param_write_bool		8462449	0					
ANR	8463159	ArgumentList	( gs_param_list * ) params		8462449	1					
ANR	8463160	Argument	( gs_param_list * ) params		8462449	0					
ANR	8463161	CastExpression	( gs_param_list * ) params		8462449	0					
ANR	8463162	CastTarget	gs_param_list *		8462449	0					
ANR	8463163	Identifier	params		8462449	1					
ANR	8463164	Argument	arg		8462449	1					
ANR	8463165	Identifier	arg		8462449	0					
ANR	8463166	Argument	& bval		8462449	2					
ANR	8463167	UnaryOperationExpression	& bval		8462449	0					
ANR	8463168	UnaryOperator	&		8462449	0					
ANR	8463169	Identifier	bval		8462449	1					
ANR	8463170	BreakStatement	break ;	859:24:28672:28677	8462449	3	True				
ANR	8463171	IfStatement	if ( value && value [ 0 ] == '/' )		8462449	7					
ANR	8463172	Condition	value && value [ 0 ] == '/'	862:24:28726:28749	8462449	0	True				
ANR	8463173	AndExpression	value && value [ 0 ] == '/'		8462449	0		&&			
ANR	8463174	Identifier	value		8462449	0					
ANR	8463175	EqualityExpression	value [ 0 ] == '/'		8462449	1		==			
ANR	8463176	ArrayIndexing	value [ 0 ]		8462449	0					
ANR	8463177	Identifier	value		8462449	0					
ANR	8463178	PrimaryExpression	0		8462449	1					
ANR	8463179	PrimaryExpression	'/'		8462449	1					
ANR	8463180	CompoundStatement		113:24:5257:5276	8462449	1					
ANR	8463181	IdentifierDeclStatement	gs_param_string str ;	863:24:28778:28797	8462449	0	True				
ANR	8463182	IdentifierDecl	str		8462449	0					
ANR	8463183	IdentifierDeclType	gs_param_string		8462449	0					
ANR	8463184	Identifier	str		8462449	1					
ANR	8463185	ExpressionStatement	"strncpy ( buffer , arg , eqp - arg )"	865:24:28824:28855	8462449	1	True				
ANR	8463186	CallExpression	"strncpy ( buffer , arg , eqp - arg )"		8462449	0					
ANR	8463187	Callee	strncpy		8462449	0					
ANR	8463188	Identifier	strncpy		8462449	0					
ANR	8463189	ArgumentList	buffer		8462449	1					
ANR	8463190	Argument	buffer		8462449	0					
ANR	8463191	Identifier	buffer		8462449	0					
ANR	8463192	Argument	arg		8462449	1					
ANR	8463193	Identifier	arg		8462449	0					
ANR	8463194	Argument	eqp - arg		8462449	2					
ANR	8463195	AdditiveExpression	eqp - arg		8462449	0		-			
ANR	8463196	Identifier	eqp		8462449	0					
ANR	8463197	Identifier	arg		8462449	1					
ANR	8463198	ExpressionStatement	buffer [ eqp - arg ] = '\\0'	866:24:28881:28905	8462449	2	True				
ANR	8463199	AssignmentExpression	buffer [ eqp - arg ] = '\\0'		8462449	0		=			
ANR	8463200	ArrayIndexing	buffer [ eqp - arg ]		8462449	0					
ANR	8463201	Identifier	buffer		8462449	0					
ANR	8463202	AdditiveExpression	eqp - arg		8462449	1		-			
ANR	8463203	Identifier	eqp		8462449	0					
ANR	8463204	Identifier	arg		8462449	1					
ANR	8463205	PrimaryExpression	'\\0'		8462449	1					
ANR	8463206	ExpressionStatement	"param_string_from_transient_string ( str , value + 1 )"	867:24:28931:28981	8462449	3	True				
ANR	8463207	CallExpression	"param_string_from_transient_string ( str , value + 1 )"		8462449	0					
ANR	8463208	Callee	param_string_from_transient_string		8462449	0					
ANR	8463209	Identifier	param_string_from_transient_string		8462449	0					
ANR	8463210	ArgumentList	str		8462449	1					
ANR	8463211	Argument	str		8462449	0					
ANR	8463212	Identifier	str		8462449	0					
ANR	8463213	Argument	value + 1		8462449	1					
ANR	8463214	AdditiveExpression	value + 1		8462449	0		+			
ANR	8463215	Identifier	value		8462449	0					
ANR	8463216	PrimaryExpression	1		8462449	1					
ANR	8463217	ExpressionStatement	"code = check_for_special_str ( pmi , arg , & str )"	868:24:29007:29051	8462449	4	True				
ANR	8463218	AssignmentExpression	"code = check_for_special_str ( pmi , arg , & str )"		8462449	0		=			
ANR	8463219	Identifier	code		8462449	0					
ANR	8463220	CallExpression	"check_for_special_str ( pmi , arg , & str )"		8462449	1					
ANR	8463221	Callee	check_for_special_str		8462449	0					
ANR	8463222	Identifier	check_for_special_str		8462449	0					
ANR	8463223	ArgumentList	pmi		8462449	1					
ANR	8463224	Argument	pmi		8462449	0					
ANR	8463225	Identifier	pmi		8462449	0					
ANR	8463226	Argument	arg		8462449	1					
ANR	8463227	Identifier	arg		8462449	0					
ANR	8463228	Argument	& str		8462449	2					
ANR	8463229	UnaryOperationExpression	& str		8462449	0					
ANR	8463230	UnaryOperator	&		8462449	0					
ANR	8463231	Identifier	str		8462449	1					
ANR	8463232	IfStatement	if ( code == 1 )		8462449	5					
ANR	8463233	Condition	code == 1	869:28:29081:29089	8462449	0	True				
ANR	8463234	EqualityExpression	code == 1		8462449	0		==			
ANR	8463235	Identifier	code		8462449	0					
ANR	8463236	PrimaryExpression	1		8462449	1					
ANR	8463237	ExpressionStatement	"code = param_write_name ( ( gs_param_list * ) params , buffer , & str )"	870:28:29120:29235	8462449	1	True				
ANR	8463238	AssignmentExpression	"code = param_write_name ( ( gs_param_list * ) params , buffer , & str )"		8462449	0		=			
ANR	8463239	Identifier	code		8462449	0					
ANR	8463240	CallExpression	"param_write_name ( ( gs_param_list * ) params , buffer , & str )"		8462449	1					
ANR	8463241	Callee	param_write_name		8462449	0					
ANR	8463242	Identifier	param_write_name		8462449	0					
ANR	8463243	ArgumentList	( gs_param_list * ) params		8462449	1					
ANR	8463244	Argument	( gs_param_list * ) params		8462449	0					
ANR	8463245	CastExpression	( gs_param_list * ) params		8462449	0					
ANR	8463246	CastTarget	gs_param_list *		8462449	0					
ANR	8463247	Identifier	params		8462449	1					
ANR	8463248	Argument	buffer		8462449	1					
ANR	8463249	Identifier	buffer		8462449	0					
ANR	8463250	Argument	& str		8462449	2					
ANR	8463251	UnaryOperationExpression	& str		8462449	0					
ANR	8463252	UnaryOperator	&		8462449	0					
ANR	8463253	Identifier	str		8462449	1					
ANR	8463254	BreakStatement	break ;	872:24:29261:29266	8462449	6	True				
ANR	8463255	ElseStatement	else		8462449	0					
ANR	8463256	IfStatement	"if ( strchr ( value , '#' ) )"		8462449	0					
ANR	8463257	Condition	"strchr ( value , '#' )"	875:29:29385:29402	8462449	0	True				
ANR	8463258	CallExpression	"strchr ( value , '#' )"		8462449	0					
ANR	8463259	Callee	strchr		8462449	0					
ANR	8463260	Identifier	strchr		8462449	0					
ANR	8463261	ArgumentList	value		8462449	1					
ANR	8463262	Argument	value		8462449	0					
ANR	8463263	Identifier	value		8462449	0					
ANR	8463264	Argument	'#'		8462449	1					
ANR	8463265	PrimaryExpression	'#'		8462449	0					
ANR	8463266	CompoundStatement		127:24:5956:5986	8462449	1					
ANR	8463267	IdentifierDeclStatement	"int base , number = 0 ;"	876:24:29431:29451	8462449	0	True				
ANR	8463268	IdentifierDecl	base		8462449	0					
ANR	8463269	IdentifierDeclType	int		8462449	0					
ANR	8463270	Identifier	base		8462449	1					
ANR	8463271	IdentifierDecl	number = 0		8462449	1					
ANR	8463272	IdentifierDeclType	int		8462449	0					
ANR	8463273	Identifier	number		8462449	1					
ANR	8463274	AssignmentExpression	number = 0		8462449	2		=			
ANR	8463275	Identifier	number		8462449	0					
ANR	8463276	PrimaryExpression	0		8462449	1					
ANR	8463277	IdentifierDeclStatement	"char * val = strchr ( value , '#' ) ;"	877:24:29477:29507	8462449	1	True				
ANR	8463278	IdentifierDecl	"* val = strchr ( value , '#' )"		8462449	0					
ANR	8463279	IdentifierDeclType	char *		8462449	0					
ANR	8463280	Identifier	val		8462449	1					
ANR	8463281	AssignmentExpression	"* val = strchr ( value , '#' )"		8462449	2		=			
ANR	8463282	Identifier	val		8462449	0					
ANR	8463283	CallExpression	"strchr ( value , '#' )"		8462449	1					
ANR	8463284	Callee	strchr		8462449	0					
ANR	8463285	Identifier	strchr		8462449	0					
ANR	8463286	ArgumentList	value		8462449	1					
ANR	8463287	Argument	value		8462449	0					
ANR	8463288	Identifier	value		8462449	0					
ANR	8463289	Argument	'#'		8462449	1					
ANR	8463290	PrimaryExpression	'#'		8462449	0					
ANR	8463291	ExpressionStatement	* val ++ = 0x00	879:24:29534:29547	8462449	2	True				
ANR	8463292	AssignmentExpression	* val ++ = 0x00		8462449	0		=			
ANR	8463293	UnaryOperationExpression	* val ++		8462449	0					
ANR	8463294	UnaryOperator	*		8462449	0					
ANR	8463295	PostIncDecOperationExpression	val ++		8462449	1					
ANR	8463296	Identifier	val		8462449	0					
ANR	8463297	IncDec	++		8462449	1					
ANR	8463298	PrimaryExpression	0x00		8462449	1					
ANR	8463299	ExpressionStatement	"sscanf ( value , ""%d"" , & base )"	880:24:29573:29599	8462449	3	True				
ANR	8463300	CallExpression	"sscanf ( value , ""%d"" , & base )"		8462449	0					
ANR	8463301	Callee	sscanf		8462449	0					
ANR	8463302	Identifier	sscanf		8462449	0					
ANR	8463303	ArgumentList	value		8462449	1					
ANR	8463304	Argument	value		8462449	0					
ANR	8463305	Identifier	value		8462449	0					
ANR	8463306	Argument	"""%d"""		8462449	1					
ANR	8463307	PrimaryExpression	"""%d"""		8462449	0					
ANR	8463308	Argument	& base		8462449	2					
ANR	8463309	UnaryOperationExpression	& base		8462449	0					
ANR	8463310	UnaryOperator	&		8462449	0					
ANR	8463311	Identifier	base		8462449	1					
ANR	8463312	IfStatement	if ( base < 2 || base > 36 )		8462449	4					
ANR	8463313	Condition	base < 2 || base > 36	881:28:29629:29649	8462449	0	True				
ANR	8463314	OrExpression	base < 2 || base > 36		8462449	0		||			
ANR	8463315	RelationalExpression	base < 2		8462449	0		<			
ANR	8463316	Identifier	base		8462449	0					
ANR	8463317	PrimaryExpression	2		8462449	1					
ANR	8463318	RelationalExpression	base > 36		8462449	1		>			
ANR	8463319	Identifier	base		8462449	0					
ANR	8463320	PrimaryExpression	36		8462449	1					
ANR	8463321	CompoundStatement		131:51:6131:6131	8462449	1					
ANR	8463322	ExpressionStatement	"dmprintf1 ( pmi -> memory , ""Value out of range %s"" , value )"	882:28:29682:29774	8462449	0	True				
ANR	8463323	CallExpression	"dmprintf1 ( pmi -> memory , ""Value out of range %s"" , value )"		8462449	0					
ANR	8463324	Callee	dmprintf1		8462449	0					
ANR	8463325	Identifier	dmprintf1		8462449	0					
ANR	8463326	ArgumentList	pmi -> memory		8462449	1					
ANR	8463327	Argument	pmi -> memory		8462449	0					
ANR	8463328	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8463329	Identifier	pmi		8462449	0					
ANR	8463330	Identifier	memory		8462449	1					
ANR	8463331	Argument	"""Value out of range %s"""		8462449	1					
ANR	8463332	PrimaryExpression	"""Value out of range %s"""		8462449	0					
ANR	8463333	Argument	value		8462449	2					
ANR	8463334	Identifier	value		8462449	0					
ANR	8463335	ReturnStatement	return - 1 ;	884:28:29804:29813	8462449	1	True				
ANR	8463336	UnaryOperationExpression	- 1		8462449	0					
ANR	8463337	UnaryOperator	-		8462449	0					
ANR	8463338	PrimaryExpression	1		8462449	1					
ANR	8463339	WhileStatement	while ( * val )		8462449	5					
ANR	8463340	Condition	* val	886:31:29872:29875	8462449	0	True				
ANR	8463341	UnaryOperationExpression	* val		8462449	0					
ANR	8463342	UnaryOperator	*		8462449	0					
ANR	8463343	Identifier	val		8462449	1					
ANR	8463344	CompoundStatement		136:37:6357:6357	8462449	1					
ANR	8463345	IfStatement	if ( * val >= '0' && * val <= '9' )		8462449	0					
ANR	8463346	Condition	* val >= '0' && * val <= '9'	887:32:29912:29937	8462449	0	True				
ANR	8463347	AndExpression	* val >= '0' && * val <= '9'		8462449	0		&&			
ANR	8463348	RelationalExpression	* val >= '0'		8462449	0		>=			
ANR	8463349	UnaryOperationExpression	* val		8462449	0					
ANR	8463350	UnaryOperator	*		8462449	0					
ANR	8463351	Identifier	val		8462449	1					
ANR	8463352	PrimaryExpression	'0'		8462449	1					
ANR	8463353	RelationalExpression	* val <= '9'		8462449	1		<=			
ANR	8463354	UnaryOperationExpression	* val		8462449	0					
ANR	8463355	UnaryOperator	*		8462449	0					
ANR	8463356	Identifier	val		8462449	1					
ANR	8463357	PrimaryExpression	'9'		8462449	1					
ANR	8463358	CompoundStatement		137:60:6419:6419	8462449	1					
ANR	8463359	ExpressionStatement	number = number * base + ( * val - '0' )	888:32:29974:30011	8462449	0	True				
ANR	8463360	AssignmentExpression	number = number * base + ( * val - '0' )		8462449	0		=			
ANR	8463361	Identifier	number		8462449	0					
ANR	8463362	AdditiveExpression	number * base + ( * val - '0' )		8462449	1		+			
ANR	8463363	MultiplicativeExpression	number * base		8462449	0		*			
ANR	8463364	Identifier	number		8462449	0					
ANR	8463365	Identifier	base		8462449	1					
ANR	8463366	AdditiveExpression	* val - '0'		8462449	1		-			
ANR	8463367	UnaryOperationExpression	* val		8462449	0					
ANR	8463368	UnaryOperator	*		8462449	0					
ANR	8463369	Identifier	val		8462449	1					
ANR	8463370	PrimaryExpression	'0'		8462449	1					
ANR	8463371	ElseStatement	else		8462449	0					
ANR	8463372	CompoundStatement		139:35:6527:6527	8462449	0					
ANR	8463373	IfStatement	if ( * val >= 'A' && * val <= 'Z' )		8462449	0					
ANR	8463374	Condition	* val >= 'A' && * val <= 'Z'	890:36:30086:30111	8462449	0	True				
ANR	8463375	AndExpression	* val >= 'A' && * val <= 'Z'		8462449	0		&&			
ANR	8463376	RelationalExpression	* val >= 'A'		8462449	0		>=			
ANR	8463377	UnaryOperationExpression	* val		8462449	0					
ANR	8463378	UnaryOperator	*		8462449	0					
ANR	8463379	Identifier	val		8462449	1					
ANR	8463380	PrimaryExpression	'A'		8462449	1					
ANR	8463381	RelationalExpression	* val <= 'Z'		8462449	1		<=			
ANR	8463382	UnaryOperationExpression	* val		8462449	0					
ANR	8463383	UnaryOperator	*		8462449	0					
ANR	8463384	Identifier	val		8462449	1					
ANR	8463385	PrimaryExpression	'Z'		8462449	1					
ANR	8463386	CompoundStatement		140:64:6593:6593	8462449	1					
ANR	8463387	ExpressionStatement	number = number * base + ( * val - 'A' )	891:36:30152:30189	8462449	0	True				
ANR	8463388	AssignmentExpression	number = number * base + ( * val - 'A' )		8462449	0		=			
ANR	8463389	Identifier	number		8462449	0					
ANR	8463390	AdditiveExpression	number * base + ( * val - 'A' )		8462449	1		+			
ANR	8463391	MultiplicativeExpression	number * base		8462449	0		*			
ANR	8463392	Identifier	number		8462449	0					
ANR	8463393	Identifier	base		8462449	1					
ANR	8463394	AdditiveExpression	* val - 'A'		8462449	1		-			
ANR	8463395	UnaryOperationExpression	* val		8462449	0					
ANR	8463396	UnaryOperator	*		8462449	0					
ANR	8463397	Identifier	val		8462449	1					
ANR	8463398	PrimaryExpression	'A'		8462449	1					
ANR	8463399	ElseStatement	else		8462449	0					
ANR	8463400	CompoundStatement		142:39:6709:6709	8462449	0					
ANR	8463401	IfStatement	if ( * val >= 'a' && * val <= 'z' )		8462449	0					
ANR	8463402	Condition	* val >= 'a' && * val <= 'z'	893:40:30272:30297	8462449	0	True				
ANR	8463403	AndExpression	* val >= 'a' && * val <= 'z'		8462449	0		&&			
ANR	8463404	RelationalExpression	* val >= 'a'		8462449	0		>=			
ANR	8463405	UnaryOperationExpression	* val		8462449	0					
ANR	8463406	UnaryOperator	*		8462449	0					
ANR	8463407	Identifier	val		8462449	1					
ANR	8463408	PrimaryExpression	'a'		8462449	1					
ANR	8463409	RelationalExpression	* val <= 'z'		8462449	1		<=			
ANR	8463410	UnaryOperationExpression	* val		8462449	0					
ANR	8463411	UnaryOperator	*		8462449	0					
ANR	8463412	Identifier	val		8462449	1					
ANR	8463413	PrimaryExpression	'z'		8462449	1					
ANR	8463414	CompoundStatement		143:68:6779:6779	8462449	1					
ANR	8463415	ExpressionStatement	number = number * base + ( * val - 'a' )	894:40:30342:30379	8462449	0	True				
ANR	8463416	AssignmentExpression	number = number * base + ( * val - 'a' )		8462449	0		=			
ANR	8463417	Identifier	number		8462449	0					
ANR	8463418	AdditiveExpression	number * base + ( * val - 'a' )		8462449	1		+			
ANR	8463419	MultiplicativeExpression	number * base		8462449	0		*			
ANR	8463420	Identifier	number		8462449	0					
ANR	8463421	Identifier	base		8462449	1					
ANR	8463422	AdditiveExpression	* val - 'a'		8462449	1		-			
ANR	8463423	UnaryOperationExpression	* val		8462449	0					
ANR	8463424	UnaryOperator	*		8462449	0					
ANR	8463425	Identifier	val		8462449	1					
ANR	8463426	PrimaryExpression	'a'		8462449	1					
ANR	8463427	ElseStatement	else		8462449	0					
ANR	8463428	CompoundStatement		145:43:6903:6903	8462449	0					
ANR	8463429	ExpressionStatement	"dmprintf1 ( pmi -> memory , ""Value out of range %s"" , val )"	896:40:30466:30618	8462449	0	True				
ANR	8463430	CallExpression	"dmprintf1 ( pmi -> memory , ""Value out of range %s"" , val )"		8462449	0					
ANR	8463431	Callee	dmprintf1		8462449	0					
ANR	8463432	Identifier	dmprintf1		8462449	0					
ANR	8463433	ArgumentList	pmi -> memory		8462449	1					
ANR	8463434	Argument	pmi -> memory		8462449	0					
ANR	8463435	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8463436	Identifier	pmi		8462449	0					
ANR	8463437	Identifier	memory		8462449	1					
ANR	8463438	Argument	"""Value out of range %s"""		8462449	1					
ANR	8463439	PrimaryExpression	"""Value out of range %s"""		8462449	0					
ANR	8463440	Argument	val		8462449	2					
ANR	8463441	Identifier	val		8462449	0					
ANR	8463442	ReturnStatement	return - 1 ;	899:40:30660:30669	8462449	1	True				
ANR	8463443	UnaryOperationExpression	- 1		8462449	0					
ANR	8463444	UnaryOperator	-		8462449	0					
ANR	8463445	PrimaryExpression	1		8462449	1					
ANR	8463446	ExpressionStatement	val ++	903:28:30801:30806	8462449	1	True				
ANR	8463447	PostIncDecOperationExpression	val ++		8462449	0					
ANR	8463448	Identifier	val		8462449	0					
ANR	8463449	IncDec	++		8462449	1					
ANR	8463450	ExpressionStatement	"strncpy ( buffer , arg , eqp - arg )"	905:24:30858:30889	8462449	6	True				
ANR	8463451	CallExpression	"strncpy ( buffer , arg , eqp - arg )"		8462449	0					
ANR	8463452	Callee	strncpy		8462449	0					
ANR	8463453	Identifier	strncpy		8462449	0					
ANR	8463454	ArgumentList	buffer		8462449	1					
ANR	8463455	Argument	buffer		8462449	0					
ANR	8463456	Identifier	buffer		8462449	0					
ANR	8463457	Argument	arg		8462449	1					
ANR	8463458	Identifier	arg		8462449	0					
ANR	8463459	Argument	eqp - arg		8462449	2					
ANR	8463460	AdditiveExpression	eqp - arg		8462449	0		-			
ANR	8463461	Identifier	eqp		8462449	0					
ANR	8463462	Identifier	arg		8462449	1					
ANR	8463463	ExpressionStatement	buffer [ eqp - arg ] = '\\0'	906:24:30915:30939	8462449	7	True				
ANR	8463464	AssignmentExpression	buffer [ eqp - arg ] = '\\0'		8462449	0		=			
ANR	8463465	ArrayIndexing	buffer [ eqp - arg ]		8462449	0					
ANR	8463466	Identifier	buffer		8462449	0					
ANR	8463467	AdditiveExpression	eqp - arg		8462449	1		-			
ANR	8463468	Identifier	eqp		8462449	0					
ANR	8463469	Identifier	arg		8462449	1					
ANR	8463470	PrimaryExpression	'\\0'		8462449	1					
ANR	8463471	ExpressionStatement	"code = check_for_special_int ( pmi , arg , number )"	907:24:30965:31011	8462449	8	True				
ANR	8463472	AssignmentExpression	"code = check_for_special_int ( pmi , arg , number )"		8462449	0		=			
ANR	8463473	Identifier	code		8462449	0					
ANR	8463474	CallExpression	"check_for_special_int ( pmi , arg , number )"		8462449	1					
ANR	8463475	Callee	check_for_special_int		8462449	0					
ANR	8463476	Identifier	check_for_special_int		8462449	0					
ANR	8463477	ArgumentList	pmi		8462449	1					
ANR	8463478	Argument	pmi		8462449	0					
ANR	8463479	Identifier	pmi		8462449	0					
ANR	8463480	Argument	arg		8462449	1					
ANR	8463481	Identifier	arg		8462449	0					
ANR	8463482	Argument	number		8462449	2					
ANR	8463483	Identifier	number		8462449	0					
ANR	8463484	IfStatement	if ( code < 0 )		8462449	9					
ANR	8463485	Condition	code < 0	908:28:31041:31048	8462449	0	True				
ANR	8463486	RelationalExpression	code < 0		8462449	0		<			
ANR	8463487	Identifier	code		8462449	0					
ANR	8463488	PrimaryExpression	0		8462449	1					
ANR	8463489	ExpressionStatement	code = 0	908:38:31051:31059	8462449	1	True				
ANR	8463490	AssignmentExpression	code = 0		8462449	0		=			
ANR	8463491	Identifier	code		8462449	0					
ANR	8463492	PrimaryExpression	0		8462449	1					
ANR	8463493	IfStatement	if ( code == 1 )		8462449	10					
ANR	8463494	Condition	code == 1	909:28:31089:31097	8462449	0	True				
ANR	8463495	EqualityExpression	code == 1		8462449	0		==			
ANR	8463496	Identifier	code		8462449	0					
ANR	8463497	PrimaryExpression	1		8462449	1					
ANR	8463498	ExpressionStatement	"code = param_write_int ( ( gs_param_list * ) params , buffer , & number )"	910:28:31128:31273	8462449	1	True				
ANR	8463499	AssignmentExpression	"code = param_write_int ( ( gs_param_list * ) params , buffer , & number )"		8462449	0		=			
ANR	8463500	Identifier	code		8462449	0					
ANR	8463501	CallExpression	"param_write_int ( ( gs_param_list * ) params , buffer , & number )"		8462449	1					
ANR	8463502	Callee	param_write_int		8462449	0					
ANR	8463503	Identifier	param_write_int		8462449	0					
ANR	8463504	ArgumentList	( gs_param_list * ) params		8462449	1					
ANR	8463505	Argument	( gs_param_list * ) params		8462449	0					
ANR	8463506	CastExpression	( gs_param_list * ) params		8462449	0					
ANR	8463507	CastTarget	gs_param_list *		8462449	0					
ANR	8463508	Identifier	params		8462449	1					
ANR	8463509	Argument	buffer		8462449	1					
ANR	8463510	Identifier	buffer		8462449	0					
ANR	8463511	Argument	& number		8462449	2					
ANR	8463512	UnaryOperationExpression	& number		8462449	0					
ANR	8463513	UnaryOperator	&		8462449	0					
ANR	8463514	Identifier	number		8462449	1					
ANR	8463515	ElseStatement	else		8462449	0					
ANR	8463516	IfStatement	"if ( ( ! strchr ( value , '.' ) ) && ( sscanf ( value , ""%d"" , & vi ) == 1 ) )"		8462449	0					
ANR	8463517	Condition	"( ! strchr ( value , '.' ) ) && ( sscanf ( value , ""%d"" , & vi ) == 1 )"	913:31:31306:31481	8462449	0	True				
ANR	8463518	AndExpression	"( ! strchr ( value , '.' ) ) && ( sscanf ( value , ""%d"" , & vi ) == 1 )"		8462449	0		&&			
ANR	8463519	UnaryOperationExpression	"! strchr ( value , '.' )"		8462449	0					
ANR	8463520	UnaryOperator	!		8462449	0					
ANR	8463521	CallExpression	"strchr ( value , '.' )"		8462449	1					
ANR	8463522	Callee	strchr		8462449	0					
ANR	8463523	Identifier	strchr		8462449	0					
ANR	8463524	ArgumentList	value		8462449	1					
ANR	8463525	Argument	value		8462449	0					
ANR	8463526	Identifier	value		8462449	0					
ANR	8463527	Argument	'.'		8462449	1					
ANR	8463528	PrimaryExpression	'.'		8462449	0					
ANR	8463529	EqualityExpression	"sscanf ( value , ""%d"" , & vi ) == 1"		8462449	1		==			
ANR	8463530	CallExpression	"sscanf ( value , ""%d"" , & vi )"		8462449	0					
ANR	8463531	Callee	sscanf		8462449	0					
ANR	8463532	Identifier	sscanf		8462449	0					
ANR	8463533	ArgumentList	value		8462449	1					
ANR	8463534	Argument	value		8462449	0					
ANR	8463535	Identifier	value		8462449	0					
ANR	8463536	Argument	"""%d"""		8462449	1					
ANR	8463537	PrimaryExpression	"""%d"""		8462449	0					
ANR	8463538	Argument	& vi		8462449	2					
ANR	8463539	UnaryOperationExpression	& vi		8462449	0					
ANR	8463540	UnaryOperator	&		8462449	0					
ANR	8463541	Identifier	vi		8462449	1					
ANR	8463542	PrimaryExpression	1		8462449	1					
ANR	8463543	CompoundStatement		167:24:8069:8103	8462449	1					
ANR	8463544	IdentifierDeclStatement	char suffix = eqp [ strlen ( eqp ) - 1 ] ;	917:24:31590:31624	8462449	0	True				
ANR	8463545	IdentifierDecl	suffix = eqp [ strlen ( eqp ) - 1 ]		8462449	0					
ANR	8463546	IdentifierDeclType	char		8462449	0					
ANR	8463547	Identifier	suffix		8462449	1					
ANR	8463548	AssignmentExpression	suffix = eqp [ strlen ( eqp ) - 1 ]		8462449	2		=			
ANR	8463549	Identifier	suffix		8462449	0					
ANR	8463550	ArrayIndexing	eqp [ strlen ( eqp ) - 1 ]		8462449	1					
ANR	8463551	Identifier	eqp		8462449	0					
ANR	8463552	AdditiveExpression	strlen ( eqp ) - 1		8462449	1		-			
ANR	8463553	CallExpression	strlen ( eqp )		8462449	0					
ANR	8463554	Callee	strlen		8462449	0					
ANR	8463555	Identifier	strlen		8462449	0					
ANR	8463556	ArgumentList	eqp		8462449	1					
ANR	8463557	Argument	eqp		8462449	0					
ANR	8463558	Identifier	eqp		8462449	0					
ANR	8463559	PrimaryExpression	1		8462449	1					
ANR	8463560	SwitchStatement	switch ( suffix )		8462449	1					
ANR	8463561	Condition	suffix	919:32:31659:31664	8462449	0	True				
ANR	8463562	Identifier	suffix		8462449	0					
ANR	8463563	CompoundStatement		169:40:8146:8146	8462449	1					
ANR	8463564	Label	case 'k' :	920:28:31697:31705	8462449	0	True				
ANR	8463565	Label	case 'K' :	921:28:31735:31743	8462449	1	True				
ANR	8463566	ExpressionStatement	vi *= 1024	922:32:31777:31787	8462449	2	True				
ANR	8463567	AssignmentExpression	vi *= 1024		8462449	0		*=			
ANR	8463568	Identifier	vi		8462449	0					
ANR	8463569	PrimaryExpression	1024		8462449	1					
ANR	8463570	BreakStatement	break ;	923:32:31821:31826	8462449	3	True				
ANR	8463571	Label	case 'm' :	924:28:31856:31864	8462449	4	True				
ANR	8463572	Label	case 'M' :	925:28:31894:31902	8462449	5	True				
ANR	8463573	ExpressionStatement	vi *= 1024 * 1024	926:32:31936:31953	8462449	6	True				
ANR	8463574	AssignmentExpression	vi *= 1024 * 1024		8462449	0		*=			
ANR	8463575	Identifier	vi		8462449	0					
ANR	8463576	MultiplicativeExpression	1024 * 1024		8462449	1		*			
ANR	8463577	PrimaryExpression	1024		8462449	0					
ANR	8463578	PrimaryExpression	1024		8462449	1					
ANR	8463579	BreakStatement	break ;	927:32:31987:31992	8462449	7	True				
ANR	8463580	Label	case 'g' :	928:28:32022:32030	8462449	8	True				
ANR	8463581	Label	case 'G' :	929:28:32060:32068	8462449	9	True				
ANR	8463582	ExpressionStatement	vi *= 1024 * 1024 * 1024	932:32:32273:32297	8462449	10	True				
ANR	8463583	AssignmentExpression	vi *= 1024 * 1024 * 1024		8462449	0		*=			
ANR	8463584	Identifier	vi		8462449	0					
ANR	8463585	MultiplicativeExpression	1024 * 1024 * 1024		8462449	1		*			
ANR	8463586	PrimaryExpression	1024		8462449	0					
ANR	8463587	MultiplicativeExpression	1024 * 1024		8462449	1		*			
ANR	8463588	PrimaryExpression	1024		8462449	0					
ANR	8463589	PrimaryExpression	1024		8462449	1					
ANR	8463590	BreakStatement	break ;	933:32:32331:32336	8462449	11	True				
ANR	8463591	Label	default :	934:28:32366:32373	8462449	12	True				
ANR	8463592	Identifier	default		8462449	0					
ANR	8463593	BreakStatement	break ;	935:32:32407:32412	8462449	13	True				
ANR	8463594	ExpressionStatement	"strncpy ( buffer , arg , eqp - arg )"	938:24:32587:32618	8462449	2	True				
ANR	8463595	CallExpression	"strncpy ( buffer , arg , eqp - arg )"		8462449	0					
ANR	8463596	Callee	strncpy		8462449	0					
ANR	8463597	Identifier	strncpy		8462449	0					
ANR	8463598	ArgumentList	buffer		8462449	1					
ANR	8463599	Argument	buffer		8462449	0					
ANR	8463600	Identifier	buffer		8462449	0					
ANR	8463601	Argument	arg		8462449	1					
ANR	8463602	Identifier	arg		8462449	0					
ANR	8463603	Argument	eqp - arg		8462449	2					
ANR	8463604	AdditiveExpression	eqp - arg		8462449	0		-			
ANR	8463605	Identifier	eqp		8462449	0					
ANR	8463606	Identifier	arg		8462449	1					
ANR	8463607	ExpressionStatement	buffer [ eqp - arg ] = '\\0'	939:24:32644:32668	8462449	3	True				
ANR	8463608	AssignmentExpression	buffer [ eqp - arg ] = '\\0'		8462449	0		=			
ANR	8463609	ArrayIndexing	buffer [ eqp - arg ]		8462449	0					
ANR	8463610	Identifier	buffer		8462449	0					
ANR	8463611	AdditiveExpression	eqp - arg		8462449	1		-			
ANR	8463612	Identifier	eqp		8462449	0					
ANR	8463613	Identifier	arg		8462449	1					
ANR	8463614	PrimaryExpression	'\\0'		8462449	1					
ANR	8463615	ExpressionStatement	"code = check_for_special_int ( pmi , arg , vi )"	940:24:32694:32736	8462449	4	True				
ANR	8463616	AssignmentExpression	"code = check_for_special_int ( pmi , arg , vi )"		8462449	0		=			
ANR	8463617	Identifier	code		8462449	0					
ANR	8463618	CallExpression	"check_for_special_int ( pmi , arg , vi )"		8462449	1					
ANR	8463619	Callee	check_for_special_int		8462449	0					
ANR	8463620	Identifier	check_for_special_int		8462449	0					
ANR	8463621	ArgumentList	pmi		8462449	1					
ANR	8463622	Argument	pmi		8462449	0					
ANR	8463623	Identifier	pmi		8462449	0					
ANR	8463624	Argument	arg		8462449	1					
ANR	8463625	Identifier	arg		8462449	0					
ANR	8463626	Argument	vi		8462449	2					
ANR	8463627	Identifier	vi		8462449	0					
ANR	8463628	IfStatement	if ( code < 0 )		8462449	5					
ANR	8463629	Condition	code < 0	941:28:32766:32773	8462449	0	True				
ANR	8463630	RelationalExpression	code < 0		8462449	0		<			
ANR	8463631	Identifier	code		8462449	0					
ANR	8463632	PrimaryExpression	0		8462449	1					
ANR	8463633	ExpressionStatement	code = 0	941:38:32776:32784	8462449	1	True				
ANR	8463634	AssignmentExpression	code = 0		8462449	0		=			
ANR	8463635	Identifier	code		8462449	0					
ANR	8463636	PrimaryExpression	0		8462449	1					
ANR	8463637	IfStatement	if ( code == 1 )		8462449	6					
ANR	8463638	Condition	code == 1	942:28:32814:32822	8462449	0	True				
ANR	8463639	EqualityExpression	code == 1		8462449	0		==			
ANR	8463640	Identifier	code		8462449	0					
ANR	8463641	PrimaryExpression	1		8462449	1					
ANR	8463642	ExpressionStatement	"code = param_write_int ( ( gs_param_list * ) params , buffer , & vi )"	943:28:32853:32994	8462449	1	True				
ANR	8463643	AssignmentExpression	"code = param_write_int ( ( gs_param_list * ) params , buffer , & vi )"		8462449	0		=			
ANR	8463644	Identifier	code		8462449	0					
ANR	8463645	CallExpression	"param_write_int ( ( gs_param_list * ) params , buffer , & vi )"		8462449	1					
ANR	8463646	Callee	param_write_int		8462449	0					
ANR	8463647	Identifier	param_write_int		8462449	0					
ANR	8463648	ArgumentList	( gs_param_list * ) params		8462449	1					
ANR	8463649	Argument	( gs_param_list * ) params		8462449	0					
ANR	8463650	CastExpression	( gs_param_list * ) params		8462449	0					
ANR	8463651	CastTarget	gs_param_list *		8462449	0					
ANR	8463652	Identifier	params		8462449	1					
ANR	8463653	Argument	buffer		8462449	1					
ANR	8463654	Identifier	buffer		8462449	0					
ANR	8463655	Argument	& vi		8462449	2					
ANR	8463656	UnaryOperationExpression	& vi		8462449	0					
ANR	8463657	UnaryOperator	&		8462449	0					
ANR	8463658	Identifier	vi		8462449	1					
ANR	8463659	ElseStatement	else		8462449	0					
ANR	8463660	IfStatement	"if ( sscanf ( value , ""%f"" , & vf ) == 1 )"		8462449	0					
ANR	8463661	Condition	"sscanf ( value , ""%f"" , & vf ) == 1"	946:31:33027:33055	8462449	0	True				
ANR	8463662	EqualityExpression	"sscanf ( value , ""%f"" , & vf ) == 1"		8462449	0		==			
ANR	8463663	CallExpression	"sscanf ( value , ""%f"" , & vf )"		8462449	0					
ANR	8463664	Callee	sscanf		8462449	0					
ANR	8463665	Identifier	sscanf		8462449	0					
ANR	8463666	ArgumentList	value		8462449	1					
ANR	8463667	Argument	value		8462449	0					
ANR	8463668	Identifier	value		8462449	0					
ANR	8463669	Argument	"""%f"""		8462449	1					
ANR	8463670	PrimaryExpression	"""%f"""		8462449	0					
ANR	8463671	Argument	& vf		8462449	2					
ANR	8463672	UnaryOperationExpression	& vf		8462449	0					
ANR	8463673	UnaryOperator	&		8462449	0					
ANR	8463674	Identifier	vf		8462449	1					
ANR	8463675	PrimaryExpression	1		8462449	1					
ANR	8463676	CompoundStatement		196:62:9537:9537	8462449	1					
ANR	8463677	ExpressionStatement	"strncpy ( buffer , arg , eqp - arg )"	948:24:33168:33199	8462449	0	True				
ANR	8463678	CallExpression	"strncpy ( buffer , arg , eqp - arg )"		8462449	0					
ANR	8463679	Callee	strncpy		8462449	0					
ANR	8463680	Identifier	strncpy		8462449	0					
ANR	8463681	ArgumentList	buffer		8462449	1					
ANR	8463682	Argument	buffer		8462449	0					
ANR	8463683	Identifier	buffer		8462449	0					
ANR	8463684	Argument	arg		8462449	1					
ANR	8463685	Identifier	arg		8462449	0					
ANR	8463686	Argument	eqp - arg		8462449	2					
ANR	8463687	AdditiveExpression	eqp - arg		8462449	0		-			
ANR	8463688	Identifier	eqp		8462449	0					
ANR	8463689	Identifier	arg		8462449	1					
ANR	8463690	ExpressionStatement	buffer [ eqp - arg ] = '\\0'	949:24:33225:33249	8462449	1	True				
ANR	8463691	AssignmentExpression	buffer [ eqp - arg ] = '\\0'		8462449	0		=			
ANR	8463692	ArrayIndexing	buffer [ eqp - arg ]		8462449	0					
ANR	8463693	Identifier	buffer		8462449	0					
ANR	8463694	AdditiveExpression	eqp - arg		8462449	1		-			
ANR	8463695	Identifier	eqp		8462449	0					
ANR	8463696	Identifier	arg		8462449	1					
ANR	8463697	PrimaryExpression	'\\0'		8462449	1					
ANR	8463698	ExpressionStatement	"code = check_for_special_float ( pmi , arg , vf )"	950:24:33275:33319	8462449	2	True				
ANR	8463699	AssignmentExpression	"code = check_for_special_float ( pmi , arg , vf )"		8462449	0		=			
ANR	8463700	Identifier	code		8462449	0					
ANR	8463701	CallExpression	"check_for_special_float ( pmi , arg , vf )"		8462449	1					
ANR	8463702	Callee	check_for_special_float		8462449	0					
ANR	8463703	Identifier	check_for_special_float		8462449	0					
ANR	8463704	ArgumentList	pmi		8462449	1					
ANR	8463705	Argument	pmi		8462449	0					
ANR	8463706	Identifier	pmi		8462449	0					
ANR	8463707	Argument	arg		8462449	1					
ANR	8463708	Identifier	arg		8462449	0					
ANR	8463709	Argument	vf		8462449	2					
ANR	8463710	Identifier	vf		8462449	0					
ANR	8463711	IfStatement	if ( code == 1 )		8462449	3					
ANR	8463712	Condition	code == 1	951:28:33349:33357	8462449	0	True				
ANR	8463713	EqualityExpression	code == 1		8462449	0		==			
ANR	8463714	Identifier	code		8462449	0					
ANR	8463715	PrimaryExpression	1		8462449	1					
ANR	8463716	ExpressionStatement	"code = param_write_float ( ( gs_param_list * ) params , buffer , & vf )"	952:28:33388:33533	8462449	1	True				
ANR	8463717	AssignmentExpression	"code = param_write_float ( ( gs_param_list * ) params , buffer , & vf )"		8462449	0		=			
ANR	8463718	Identifier	code		8462449	0					
ANR	8463719	CallExpression	"param_write_float ( ( gs_param_list * ) params , buffer , & vf )"		8462449	1					
ANR	8463720	Callee	param_write_float		8462449	0					
ANR	8463721	Identifier	param_write_float		8462449	0					
ANR	8463722	ArgumentList	( gs_param_list * ) params		8462449	1					
ANR	8463723	Argument	( gs_param_list * ) params		8462449	0					
ANR	8463724	CastExpression	( gs_param_list * ) params		8462449	0					
ANR	8463725	CastTarget	gs_param_list *		8462449	0					
ANR	8463726	Identifier	params		8462449	1					
ANR	8463727	Argument	buffer		8462449	1					
ANR	8463728	Identifier	buffer		8462449	0					
ANR	8463729	Argument	& vf		8462449	2					
ANR	8463730	UnaryOperationExpression	& vf		8462449	0					
ANR	8463731	UnaryOperator	&		8462449	0					
ANR	8463732	Identifier	vf		8462449	1					
ANR	8463733	ElseStatement	else		8462449	0					
ANR	8463734	IfStatement	"if ( ! strcmp ( value , ""true"" ) )"		8462449	0					
ANR	8463735	Condition	"! strcmp ( value , ""true"" )"	955:31:33566:33587	8462449	0	True				
ANR	8463736	UnaryOperationExpression	"! strcmp ( value , ""true"" )"		8462449	0					
ANR	8463737	UnaryOperator	!		8462449	0					
ANR	8463738	CallExpression	"strcmp ( value , ""true"" )"		8462449	1					
ANR	8463739	Callee	strcmp		8462449	0					
ANR	8463740	Identifier	strcmp		8462449	0					
ANR	8463741	ArgumentList	value		8462449	1					
ANR	8463742	Argument	value		8462449	0					
ANR	8463743	Identifier	value		8462449	0					
ANR	8463744	Argument	"""true"""		8462449	1					
ANR	8463745	PrimaryExpression	"""true"""		8462449	0					
ANR	8463746	CompoundStatement		205:55:10069:10069	8462449	1					
ANR	8463747	ExpressionStatement	"strncpy ( buffer , arg , eqp - arg )"	957:24:33659:33690	8462449	0	True				
ANR	8463748	CallExpression	"strncpy ( buffer , arg , eqp - arg )"		8462449	0					
ANR	8463749	Callee	strncpy		8462449	0					
ANR	8463750	Identifier	strncpy		8462449	0					
ANR	8463751	ArgumentList	buffer		8462449	1					
ANR	8463752	Argument	buffer		8462449	0					
ANR	8463753	Identifier	buffer		8462449	0					
ANR	8463754	Argument	arg		8462449	1					
ANR	8463755	Identifier	arg		8462449	0					
ANR	8463756	Argument	eqp - arg		8462449	2					
ANR	8463757	AdditiveExpression	eqp - arg		8462449	0		-			
ANR	8463758	Identifier	eqp		8462449	0					
ANR	8463759	Identifier	arg		8462449	1					
ANR	8463760	ExpressionStatement	buffer [ eqp - arg ] = '\\0'	958:24:33716:33740	8462449	1	True				
ANR	8463761	AssignmentExpression	buffer [ eqp - arg ] = '\\0'		8462449	0		=			
ANR	8463762	ArrayIndexing	buffer [ eqp - arg ]		8462449	0					
ANR	8463763	Identifier	buffer		8462449	0					
ANR	8463764	AdditiveExpression	eqp - arg		8462449	1		-			
ANR	8463765	Identifier	eqp		8462449	0					
ANR	8463766	Identifier	arg		8462449	1					
ANR	8463767	PrimaryExpression	'\\0'		8462449	1					
ANR	8463768	ExpressionStatement	"code = check_for_special_int ( pmi , arg , ( int ) bval )"	959:24:33766:33815	8462449	2	True				
ANR	8463769	AssignmentExpression	"code = check_for_special_int ( pmi , arg , ( int ) bval )"		8462449	0		=			
ANR	8463770	Identifier	code		8462449	0					
ANR	8463771	CallExpression	"check_for_special_int ( pmi , arg , ( int ) bval )"		8462449	1					
ANR	8463772	Callee	check_for_special_int		8462449	0					
ANR	8463773	Identifier	check_for_special_int		8462449	0					
ANR	8463774	ArgumentList	pmi		8462449	1					
ANR	8463775	Argument	pmi		8462449	0					
ANR	8463776	Identifier	pmi		8462449	0					
ANR	8463777	Argument	arg		8462449	1					
ANR	8463778	Identifier	arg		8462449	0					
ANR	8463779	Argument	( int ) bval		8462449	2					
ANR	8463780	CastExpression	( int ) bval		8462449	0					
ANR	8463781	CastTarget	int		8462449	0					
ANR	8463782	Identifier	bval		8462449	1					
ANR	8463783	IfStatement	if ( code < 0 )		8462449	3					
ANR	8463784	Condition	code < 0	960:28:33845:33852	8462449	0	True				
ANR	8463785	RelationalExpression	code < 0		8462449	0		<			
ANR	8463786	Identifier	code		8462449	0					
ANR	8463787	PrimaryExpression	0		8462449	1					
ANR	8463788	ExpressionStatement	code = 0	960:38:33855:33863	8462449	1	True				
ANR	8463789	AssignmentExpression	code = 0		8462449	0		=			
ANR	8463790	Identifier	code		8462449	0					
ANR	8463791	PrimaryExpression	0		8462449	1					
ANR	8463792	IfStatement	if ( code == 1 )		8462449	4					
ANR	8463793	Condition	code == 1	961:28:33893:33901	8462449	0	True				
ANR	8463794	EqualityExpression	code == 1		8462449	0		==			
ANR	8463795	Identifier	code		8462449	0					
ANR	8463796	PrimaryExpression	1		8462449	1					
ANR	8463797	ExpressionStatement	"code = param_write_bool ( ( gs_param_list * ) params , buffer , & bval )"	962:28:33932:34077	8462449	1	True				
ANR	8463798	AssignmentExpression	"code = param_write_bool ( ( gs_param_list * ) params , buffer , & bval )"		8462449	0		=			
ANR	8463799	Identifier	code		8462449	0					
ANR	8463800	CallExpression	"param_write_bool ( ( gs_param_list * ) params , buffer , & bval )"		8462449	1					
ANR	8463801	Callee	param_write_bool		8462449	0					
ANR	8463802	Identifier	param_write_bool		8462449	0					
ANR	8463803	ArgumentList	( gs_param_list * ) params		8462449	1					
ANR	8463804	Argument	( gs_param_list * ) params		8462449	0					
ANR	8463805	CastExpression	( gs_param_list * ) params		8462449	0					
ANR	8463806	CastTarget	gs_param_list *		8462449	0					
ANR	8463807	Identifier	params		8462449	1					
ANR	8463808	Argument	buffer		8462449	1					
ANR	8463809	Identifier	buffer		8462449	0					
ANR	8463810	Argument	& bval		8462449	2					
ANR	8463811	UnaryOperationExpression	& bval		8462449	0					
ANR	8463812	UnaryOperator	&		8462449	0					
ANR	8463813	Identifier	bval		8462449	1					
ANR	8463814	ElseStatement	else		8462449	0					
ANR	8463815	IfStatement	"if ( ! strcmp ( value , ""false"" ) )"		8462449	0					
ANR	8463816	Condition	"! strcmp ( value , ""false"" )"	965:31:34110:34132	8462449	0	True				
ANR	8463817	UnaryOperationExpression	"! strcmp ( value , ""false"" )"		8462449	0					
ANR	8463818	UnaryOperator	!		8462449	0					
ANR	8463819	CallExpression	"strcmp ( value , ""false"" )"		8462449	1					
ANR	8463820	Callee	strcmp		8462449	0					
ANR	8463821	Identifier	strcmp		8462449	0					
ANR	8463822	ArgumentList	value		8462449	1					
ANR	8463823	Argument	value		8462449	0					
ANR	8463824	Identifier	value		8462449	0					
ANR	8463825	Argument	"""false"""		8462449	1					
ANR	8463826	PrimaryExpression	"""false"""		8462449	0					
ANR	8463827	CompoundStatement		215:56:10614:10614	8462449	1					
ANR	8463828	ExpressionStatement	bval = false	966:24:34161:34173	8462449	0	True				
ANR	8463829	AssignmentExpression	bval = false		8462449	0		=			
ANR	8463830	Identifier	bval		8462449	0					
ANR	8463831	Identifier	false		8462449	1					
ANR	8463832	ExpressionStatement	"strncpy ( buffer , arg , eqp - arg )"	967:24:34199:34230	8462449	1	True				
ANR	8463833	CallExpression	"strncpy ( buffer , arg , eqp - arg )"		8462449	0					
ANR	8463834	Callee	strncpy		8462449	0					
ANR	8463835	Identifier	strncpy		8462449	0					
ANR	8463836	ArgumentList	buffer		8462449	1					
ANR	8463837	Argument	buffer		8462449	0					
ANR	8463838	Identifier	buffer		8462449	0					
ANR	8463839	Argument	arg		8462449	1					
ANR	8463840	Identifier	arg		8462449	0					
ANR	8463841	Argument	eqp - arg		8462449	2					
ANR	8463842	AdditiveExpression	eqp - arg		8462449	0		-			
ANR	8463843	Identifier	eqp		8462449	0					
ANR	8463844	Identifier	arg		8462449	1					
ANR	8463845	ExpressionStatement	buffer [ eqp - arg ] = '\\0'	968:24:34256:34280	8462449	2	True				
ANR	8463846	AssignmentExpression	buffer [ eqp - arg ] = '\\0'		8462449	0		=			
ANR	8463847	ArrayIndexing	buffer [ eqp - arg ]		8462449	0					
ANR	8463848	Identifier	buffer		8462449	0					
ANR	8463849	AdditiveExpression	eqp - arg		8462449	1		-			
ANR	8463850	Identifier	eqp		8462449	0					
ANR	8463851	Identifier	arg		8462449	1					
ANR	8463852	PrimaryExpression	'\\0'		8462449	1					
ANR	8463853	ExpressionStatement	"code = check_for_special_int ( pmi , arg , ( int ) bval )"	969:24:34306:34355	8462449	3	True				
ANR	8463854	AssignmentExpression	"code = check_for_special_int ( pmi , arg , ( int ) bval )"		8462449	0		=			
ANR	8463855	Identifier	code		8462449	0					
ANR	8463856	CallExpression	"check_for_special_int ( pmi , arg , ( int ) bval )"		8462449	1					
ANR	8463857	Callee	check_for_special_int		8462449	0					
ANR	8463858	Identifier	check_for_special_int		8462449	0					
ANR	8463859	ArgumentList	pmi		8462449	1					
ANR	8463860	Argument	pmi		8462449	0					
ANR	8463861	Identifier	pmi		8462449	0					
ANR	8463862	Argument	arg		8462449	1					
ANR	8463863	Identifier	arg		8462449	0					
ANR	8463864	Argument	( int ) bval		8462449	2					
ANR	8463865	CastExpression	( int ) bval		8462449	0					
ANR	8463866	CastTarget	int		8462449	0					
ANR	8463867	Identifier	bval		8462449	1					
ANR	8463868	IfStatement	if ( code < 0 )		8462449	4					
ANR	8463869	Condition	code < 0	970:28:34385:34392	8462449	0	True				
ANR	8463870	RelationalExpression	code < 0		8462449	0		<			
ANR	8463871	Identifier	code		8462449	0					
ANR	8463872	PrimaryExpression	0		8462449	1					
ANR	8463873	ExpressionStatement	code = 0	970:38:34395:34403	8462449	1	True				
ANR	8463874	AssignmentExpression	code = 0		8462449	0		=			
ANR	8463875	Identifier	code		8462449	0					
ANR	8463876	PrimaryExpression	0		8462449	1					
ANR	8463877	IfStatement	if ( code == 1 )		8462449	5					
ANR	8463878	Condition	code == 1	971:28:34433:34441	8462449	0	True				
ANR	8463879	EqualityExpression	code == 1		8462449	0		==			
ANR	8463880	Identifier	code		8462449	0					
ANR	8463881	PrimaryExpression	1		8462449	1					
ANR	8463882	ExpressionStatement	"code = param_write_bool ( ( gs_param_list * ) params , buffer , & bval )"	972:28:34472:34617	8462449	1	True				
ANR	8463883	AssignmentExpression	"code = param_write_bool ( ( gs_param_list * ) params , buffer , & bval )"		8462449	0		=			
ANR	8463884	Identifier	code		8462449	0					
ANR	8463885	CallExpression	"param_write_bool ( ( gs_param_list * ) params , buffer , & bval )"		8462449	1					
ANR	8463886	Callee	param_write_bool		8462449	0					
ANR	8463887	Identifier	param_write_bool		8462449	0					
ANR	8463888	ArgumentList	( gs_param_list * ) params		8462449	1					
ANR	8463889	Argument	( gs_param_list * ) params		8462449	0					
ANR	8463890	CastExpression	( gs_param_list * ) params		8462449	0					
ANR	8463891	CastTarget	gs_param_list *		8462449	0					
ANR	8463892	Identifier	params		8462449	1					
ANR	8463893	Argument	buffer		8462449	1					
ANR	8463894	Identifier	buffer		8462449	0					
ANR	8463895	Argument	& bval		8462449	2					
ANR	8463896	UnaryOperationExpression	& bval		8462449	0					
ANR	8463897	UnaryOperator	&		8462449	0					
ANR	8463898	Identifier	bval		8462449	1					
ANR	8463899	ElseStatement	else		8462449	0					
ANR	8463900	CompoundStatement		225:27:11125:11125	8462449	0					
ANR	8463901	ExpressionStatement	"dmprintf ( pmi -> memory , ""Usage for -d is -d<option>=[<integer>|<float>|true|false]\\n"" )"	976:24:34672:34789	8462449	0	True				
ANR	8463902	CallExpression	"dmprintf ( pmi -> memory , ""Usage for -d is -d<option>=[<integer>|<float>|true|false]\\n"" )"		8462449	0					
ANR	8463903	Callee	dmprintf		8462449	0					
ANR	8463904	Identifier	dmprintf		8462449	0					
ANR	8463905	ArgumentList	pmi -> memory		8462449	1					
ANR	8463906	Argument	pmi -> memory		8462449	0					
ANR	8463907	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8463908	Identifier	pmi		8462449	0					
ANR	8463909	Identifier	memory		8462449	1					
ANR	8463910	Argument	"""Usage for -d is -d<option>=[<integer>|<float>|true|false]\\n"""		8462449	1					
ANR	8463911	PrimaryExpression	"""Usage for -d is -d<option>=[<integer>|<float>|true|false]\\n"""		8462449	0					
ANR	8463912	ContinueStatement	continue ;	978:24:34815:34823	8462449	1	True				
ANR	8463913	BreakStatement	break ;	981:16:34881:34886	8462449	10	True				
ANR	8463914	Label	case 'E' :	982:12:34900:34908	8462449	11	True				
ANR	8463915	IfStatement	if ( * arg == 0 )		8462449	12					
ANR	8463916	Condition	* arg == 0	983:20:34930:34938	8462449	0	True				
ANR	8463917	EqualityExpression	* arg == 0		8462449	0		==			
ANR	8463918	UnaryOperationExpression	* arg		8462449	0					
ANR	8463919	UnaryOperator	*		8462449	0					
ANR	8463920	Identifier	arg		8462449	1					
ANR	8463921	PrimaryExpression	0		8462449	1					
ANR	8463922	ExpressionStatement	gs_debug [ '#' ] = 1	984:20:34961:34978	8462449	1	True				
ANR	8463923	AssignmentExpression	gs_debug [ '#' ] = 1		8462449	0		=			
ANR	8463924	ArrayIndexing	gs_debug [ '#' ]		8462449	0					
ANR	8463925	Identifier	gs_debug		8462449	0					
ANR	8463926	PrimaryExpression	'#'		8462449	1					
ANR	8463927	PrimaryExpression	1		8462449	1					
ANR	8463928	ElseStatement	else		8462449	0					
ANR	8463929	ExpressionStatement	"sscanf ( arg , ""%d"" , & pmi -> error_report )"	986:20:35021:35058	8462449	0	True				
ANR	8463930	CallExpression	"sscanf ( arg , ""%d"" , & pmi -> error_report )"		8462449	0					
ANR	8463931	Callee	sscanf		8462449	0					
ANR	8463932	Identifier	sscanf		8462449	0					
ANR	8463933	ArgumentList	arg		8462449	1					
ANR	8463934	Argument	arg		8462449	0					
ANR	8463935	Identifier	arg		8462449	0					
ANR	8463936	Argument	"""%d"""		8462449	1					
ANR	8463937	PrimaryExpression	"""%d"""		8462449	0					
ANR	8463938	Argument	& pmi -> error_report		8462449	2					
ANR	8463939	UnaryOperationExpression	& pmi -> error_report		8462449	0					
ANR	8463940	UnaryOperator	&		8462449	0					
ANR	8463941	PtrMemberAccess	pmi -> error_report		8462449	1					
ANR	8463942	Identifier	pmi		8462449	0					
ANR	8463943	Identifier	error_report		8462449	1					
ANR	8463944	BreakStatement	break ;	987:16:35076:35081	8462449	13	True				
ANR	8463945	Label	case 'g' :	988:12:35095:35103	8462449	14	True				
ANR	8463946	CompoundStatement		241:20:11655:11676	8462449	15					
ANR	8463947	IdentifierDeclStatement	int geom [ 2 ] ;	990:20:35143:35154	8462449	0	True				
ANR	8463948	IdentifierDecl	geom [ 2 ]		8462449	0					
ANR	8463949	IdentifierDeclType	int [ 2 ]		8462449	0					
ANR	8463950	Identifier	geom		8462449	1					
ANR	8463951	PrimaryExpression	2		8462449	2					
ANR	8463952	IdentifierDeclStatement	gs_param_int_array ia ;	991:20:35176:35197	8462449	1	True				
ANR	8463953	IdentifierDecl	ia		8462449	0					
ANR	8463954	IdentifierDeclType	gs_param_int_array		8462449	0					
ANR	8463955	Identifier	ia		8462449	1					
ANR	8463956	IfStatement	"if ( sscanf ( arg , ""%ux%u"" , & geom [ 0 ] , & geom [ 1 ] ) != 2 )"		8462449	2					
ANR	8463957	Condition	"sscanf ( arg , ""%ux%u"" , & geom [ 0 ] , & geom [ 1 ] ) != 2"	993:24:35224:35268	8462449	0	True				
ANR	8463958	EqualityExpression	"sscanf ( arg , ""%ux%u"" , & geom [ 0 ] , & geom [ 1 ] ) != 2"		8462449	0		!=			
ANR	8463959	CallExpression	"sscanf ( arg , ""%ux%u"" , & geom [ 0 ] , & geom [ 1 ] )"		8462449	0					
ANR	8463960	Callee	sscanf		8462449	0					
ANR	8463961	Identifier	sscanf		8462449	0					
ANR	8463962	ArgumentList	arg		8462449	1					
ANR	8463963	Argument	arg		8462449	0					
ANR	8463964	Identifier	arg		8462449	0					
ANR	8463965	Argument	"""%ux%u"""		8462449	1					
ANR	8463966	PrimaryExpression	"""%ux%u"""		8462449	0					
ANR	8463967	Argument	& geom [ 0 ]		8462449	2					
ANR	8463968	UnaryOperationExpression	& geom [ 0 ]		8462449	0					
ANR	8463969	UnaryOperator	&		8462449	0					
ANR	8463970	ArrayIndexing	geom [ 0 ]		8462449	1					
ANR	8463971	Identifier	geom		8462449	0					
ANR	8463972	PrimaryExpression	0		8462449	1					
ANR	8463973	Argument	& geom [ 1 ]		8462449	3					
ANR	8463974	UnaryOperationExpression	& geom [ 1 ]		8462449	0					
ANR	8463975	UnaryOperator	&		8462449	0					
ANR	8463976	ArrayIndexing	geom [ 1 ]		8462449	1					
ANR	8463977	Identifier	geom		8462449	0					
ANR	8463978	PrimaryExpression	1		8462449	1					
ANR	8463979	PrimaryExpression	2		8462449	1					
ANR	8463980	CompoundStatement		243:71:11750:11750	8462449	1					
ANR	8463981	ExpressionStatement	"dmprintf ( pmi -> memory , ""-g must be followed by <width>x<height>\\n"" )"	994:24:35297:35396	8462449	0	True				
ANR	8463982	CallExpression	"dmprintf ( pmi -> memory , ""-g must be followed by <width>x<height>\\n"" )"		8462449	0					
ANR	8463983	Callee	dmprintf		8462449	0					
ANR	8463984	Identifier	dmprintf		8462449	0					
ANR	8463985	ArgumentList	pmi -> memory		8462449	1					
ANR	8463986	Argument	pmi -> memory		8462449	0					
ANR	8463987	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8463988	Identifier	pmi		8462449	0					
ANR	8463989	Identifier	memory		8462449	1					
ANR	8463990	Argument	"""-g must be followed by <width>x<height>\\n"""		8462449	1					
ANR	8463991	PrimaryExpression	"""-g must be followed by <width>x<height>\\n"""		8462449	0					
ANR	8463992	ReturnStatement	return - 1 ;	996:24:35422:35431	8462449	1	True				
ANR	8463993	UnaryOperationExpression	- 1		8462449	0					
ANR	8463994	UnaryOperator	-		8462449	0					
ANR	8463995	PrimaryExpression	1		8462449	1					
ANR	8463996	ExpressionStatement	ia . data = geom	998:20:35475:35489	8462449	3	True				
ANR	8463997	AssignmentExpression	ia . data = geom		8462449	0		=			
ANR	8463998	MemberAccess	ia . data		8462449	0					
ANR	8463999	Identifier	ia		8462449	0					
ANR	8464000	Identifier	data		8462449	1					
ANR	8464001	Identifier	geom		8462449	1					
ANR	8464002	ExpressionStatement	ia . size = 2	999:20:35511:35522	8462449	4	True				
ANR	8464003	AssignmentExpression	ia . size = 2		8462449	0		=			
ANR	8464004	MemberAccess	ia . size		8462449	0					
ANR	8464005	Identifier	ia		8462449	0					
ANR	8464006	Identifier	size		8462449	1					
ANR	8464007	PrimaryExpression	2		8462449	1					
ANR	8464008	ExpressionStatement	ia . persistent = false	1000:20:35544:35565	8462449	5	True				
ANR	8464009	AssignmentExpression	ia . persistent = false		8462449	0		=			
ANR	8464010	MemberAccess	ia . persistent		8462449	0					
ANR	8464011	Identifier	ia		8462449	0					
ANR	8464012	Identifier	persistent		8462449	1					
ANR	8464013	Identifier	false		8462449	1					
ANR	8464014	ExpressionStatement	"code = param_write_int_array ( ( gs_param_list * ) params , ""HWSize"" , & ia )"	1001:20:35587:35726	8462449	6	True				
ANR	8464015	AssignmentExpression	"code = param_write_int_array ( ( gs_param_list * ) params , ""HWSize"" , & ia )"		8462449	0		=			
ANR	8464016	Identifier	code		8462449	0					
ANR	8464017	CallExpression	"param_write_int_array ( ( gs_param_list * ) params , ""HWSize"" , & ia )"		8462449	1					
ANR	8464018	Callee	param_write_int_array		8462449	0					
ANR	8464019	Identifier	param_write_int_array		8462449	0					
ANR	8464020	ArgumentList	( gs_param_list * ) params		8462449	1					
ANR	8464021	Argument	( gs_param_list * ) params		8462449	0					
ANR	8464022	CastExpression	( gs_param_list * ) params		8462449	0					
ANR	8464023	CastTarget	gs_param_list *		8462449	0					
ANR	8464024	Identifier	params		8462449	1					
ANR	8464025	Argument	"""HWSize"""		8462449	1					
ANR	8464026	PrimaryExpression	"""HWSize"""		8462449	0					
ANR	8464027	Argument	& ia		8462449	2					
ANR	8464028	UnaryOperationExpression	& ia		8462449	0					
ANR	8464029	UnaryOperator	&		8462449	0					
ANR	8464030	Identifier	ia		8462449	1					
ANR	8464031	IfStatement	if ( code >= 0 )		8462449	7					
ANR	8464032	Condition	code >= 0	1004:24:35752:35760	8462449	0	True				
ANR	8464033	RelationalExpression	code >= 0		8462449	0		>=			
ANR	8464034	Identifier	code		8462449	0					
ANR	8464035	PrimaryExpression	0		8462449	1					
ANR	8464036	ExpressionStatement	pmi -> page_set_on_command_line = true	1005:24:35787:35823	8462449	1	True				
ANR	8464037	AssignmentExpression	pmi -> page_set_on_command_line = true		8462449	0		=			
ANR	8464038	PtrMemberAccess	pmi -> page_set_on_command_line		8462449	0					
ANR	8464039	Identifier	pmi		8462449	0					
ANR	8464040	Identifier	page_set_on_command_line		8462449	1					
ANR	8464041	Identifier	true		8462449	1					
ANR	8464042	BreakStatement	break ;	1007:16:35859:35864	8462449	16	True				
ANR	8464043	Label	case 'H' :	1008:12:35878:35886	8462449	17	True				
ANR	8464044	CompoundStatement		263:20:12534:12590	8462449	18					
ANR	8464045	IdentifierDeclStatement	float hwmarg [ 4 ] ;	1010:20:35926:35941	8462449	0	True				
ANR	8464046	IdentifierDecl	hwmarg [ 4 ]		8462449	0					
ANR	8464047	IdentifierDeclType	float [ 4 ]		8462449	0					
ANR	8464048	Identifier	hwmarg		8462449	1					
ANR	8464049	PrimaryExpression	4		8462449	2					
ANR	8464050	IdentifierDeclStatement	gs_param_float_array fa ;	1011:20:35963:35986	8462449	1	True				
ANR	8464051	IdentifierDecl	fa		8462449	0					
ANR	8464052	IdentifierDeclType	gs_param_float_array		8462449	0					
ANR	8464053	Identifier	fa		8462449	1					
ANR	8464054	IdentifierDeclStatement	uint sz = countof ( hwmarg ) ;	1012:20:36008:36033	8462449	2	True				
ANR	8464055	IdentifierDecl	sz = countof ( hwmarg )		8462449	0					
ANR	8464056	IdentifierDeclType	uint		8462449	0					
ANR	8464057	Identifier	sz		8462449	1					
ANR	8464058	AssignmentExpression	sz = countof ( hwmarg )		8462449	2		=			
ANR	8464059	Identifier	sz		8462449	0					
ANR	8464060	CallExpression	countof ( hwmarg )		8462449	1					
ANR	8464061	Callee	countof		8462449	0					
ANR	8464062	Identifier	countof		8462449	0					
ANR	8464063	ArgumentList	hwmarg		8462449	1					
ANR	8464064	Argument	hwmarg		8462449	0					
ANR	8464065	Identifier	hwmarg		8462449	0					
ANR	8464066	IdentifierDeclStatement	"uint parsed = parse_floats ( pmi -> memory , sz , arg , hwmarg ) ;"	1013:20:36055:36111	8462449	3	True				
ANR	8464067	IdentifierDecl	"parsed = parse_floats ( pmi -> memory , sz , arg , hwmarg )"		8462449	0					
ANR	8464068	IdentifierDeclType	uint		8462449	0					
ANR	8464069	Identifier	parsed		8462449	1					
ANR	8464070	AssignmentExpression	"parsed = parse_floats ( pmi -> memory , sz , arg , hwmarg )"		8462449	2		=			
ANR	8464071	Identifier	parsed		8462449	0					
ANR	8464072	CallExpression	"parse_floats ( pmi -> memory , sz , arg , hwmarg )"		8462449	1					
ANR	8464073	Callee	parse_floats		8462449	0					
ANR	8464074	Identifier	parse_floats		8462449	0					
ANR	8464075	ArgumentList	pmi -> memory		8462449	1					
ANR	8464076	Argument	pmi -> memory		8462449	0					
ANR	8464077	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8464078	Identifier	pmi		8462449	0					
ANR	8464079	Identifier	memory		8462449	1					
ANR	8464080	Argument	sz		8462449	1					
ANR	8464081	Identifier	sz		8462449	0					
ANR	8464082	Argument	arg		8462449	2					
ANR	8464083	Identifier	arg		8462449	0					
ANR	8464084	Argument	hwmarg		8462449	3					
ANR	8464085	Identifier	hwmarg		8462449	0					
ANR	8464086	IfStatement	if ( parsed != sz )		8462449	4					
ANR	8464087	Condition	parsed != sz	1014:24:36137:36148	8462449	0	True				
ANR	8464088	EqualityExpression	parsed != sz		8462449	0		!=			
ANR	8464089	Identifier	parsed		8462449	0					
ANR	8464090	Identifier	sz		8462449	1					
ANR	8464091	CompoundStatement		264:38:12630:12630	8462449	1					
ANR	8464092	ExpressionStatement	"dmprintf ( pmi -> memory , ""-H must be followed by <left>x<bottom>x<right>x<top>\\n"" )"	1015:24:36177:36289	8462449	0	True				
ANR	8464093	CallExpression	"dmprintf ( pmi -> memory , ""-H must be followed by <left>x<bottom>x<right>x<top>\\n"" )"		8462449	0					
ANR	8464094	Callee	dmprintf		8462449	0					
ANR	8464095	Identifier	dmprintf		8462449	0					
ANR	8464096	ArgumentList	pmi -> memory		8462449	1					
ANR	8464097	Argument	pmi -> memory		8462449	0					
ANR	8464098	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8464099	Identifier	pmi		8462449	0					
ANR	8464100	Identifier	memory		8462449	1					
ANR	8464101	Argument	"""-H must be followed by <left>x<bottom>x<right>x<top>\\n"""		8462449	1					
ANR	8464102	PrimaryExpression	"""-H must be followed by <left>x<bottom>x<right>x<top>\\n"""		8462449	0					
ANR	8464103	ReturnStatement	return - 1 ;	1017:24:36315:36324	8462449	1	True				
ANR	8464104	UnaryOperationExpression	- 1		8462449	0					
ANR	8464105	UnaryOperator	-		8462449	0					
ANR	8464106	PrimaryExpression	1		8462449	1					
ANR	8464107	ExpressionStatement	fa . data = hwmarg	1019:20:36368:36384	8462449	5	True				
ANR	8464108	AssignmentExpression	fa . data = hwmarg		8462449	0		=			
ANR	8464109	MemberAccess	fa . data		8462449	0					
ANR	8464110	Identifier	fa		8462449	0					
ANR	8464111	Identifier	data		8462449	1					
ANR	8464112	Identifier	hwmarg		8462449	1					
ANR	8464113	ExpressionStatement	fa . size = parsed	1020:20:36406:36422	8462449	6	True				
ANR	8464114	AssignmentExpression	fa . size = parsed		8462449	0		=			
ANR	8464115	MemberAccess	fa . size		8462449	0					
ANR	8464116	Identifier	fa		8462449	0					
ANR	8464117	Identifier	size		8462449	1					
ANR	8464118	Identifier	parsed		8462449	1					
ANR	8464119	ExpressionStatement	fa . persistent = false	1021:20:36444:36465	8462449	7	True				
ANR	8464120	AssignmentExpression	fa . persistent = false		8462449	0		=			
ANR	8464121	MemberAccess	fa . persistent		8462449	0					
ANR	8464122	Identifier	fa		8462449	0					
ANR	8464123	Identifier	persistent		8462449	1					
ANR	8464124	Identifier	false		8462449	1					
ANR	8464125	ExpressionStatement	"code = param_write_float_array ( ( gs_param_list * ) params , "".HWMargins"" , & fa )"	1022:20:36487:36632	8462449	8	True				
ANR	8464126	AssignmentExpression	"code = param_write_float_array ( ( gs_param_list * ) params , "".HWMargins"" , & fa )"		8462449	0		=			
ANR	8464127	Identifier	code		8462449	0					
ANR	8464128	CallExpression	"param_write_float_array ( ( gs_param_list * ) params , "".HWMargins"" , & fa )"		8462449	1					
ANR	8464129	Callee	param_write_float_array		8462449	0					
ANR	8464130	Identifier	param_write_float_array		8462449	0					
ANR	8464131	ArgumentList	( gs_param_list * ) params		8462449	1					
ANR	8464132	Argument	( gs_param_list * ) params		8462449	0					
ANR	8464133	CastExpression	( gs_param_list * ) params		8462449	0					
ANR	8464134	CastTarget	gs_param_list *		8462449	0					
ANR	8464135	Identifier	params		8462449	1					
ANR	8464136	Argument	""".HWMargins"""		8462449	1					
ANR	8464137	PrimaryExpression	""".HWMargins"""		8462449	0					
ANR	8464138	Argument	& fa		8462449	2					
ANR	8464139	UnaryOperationExpression	& fa		8462449	0					
ANR	8464140	UnaryOperator	&		8462449	0					
ANR	8464141	Identifier	fa		8462449	1					
ANR	8464142	BreakStatement	break ;	1026:16:36668:36673	8462449	19	True				
ANR	8464143	Label	case 'm' :	1027:12:36687:36695	8462449	20	True				
ANR	8464144	CompoundStatement		282:20:13339:13393	8462449	21					
ANR	8464145	IdentifierDeclStatement	float marg [ 2 ] ;	1029:20:36735:36748	8462449	0	True				
ANR	8464146	IdentifierDecl	marg [ 2 ]		8462449	0					
ANR	8464147	IdentifierDeclType	float [ 2 ]		8462449	0					
ANR	8464148	Identifier	marg		8462449	1					
ANR	8464149	PrimaryExpression	2		8462449	2					
ANR	8464150	IdentifierDeclStatement	gs_param_float_array fa ;	1030:20:36770:36793	8462449	1	True				
ANR	8464151	IdentifierDecl	fa		8462449	0					
ANR	8464152	IdentifierDeclType	gs_param_float_array		8462449	0					
ANR	8464153	Identifier	fa		8462449	1					
ANR	8464154	IdentifierDeclStatement	uint sz = countof ( marg ) ;	1031:20:36815:36838	8462449	2	True				
ANR	8464155	IdentifierDecl	sz = countof ( marg )		8462449	0					
ANR	8464156	IdentifierDeclType	uint		8462449	0					
ANR	8464157	Identifier	sz		8462449	1					
ANR	8464158	AssignmentExpression	sz = countof ( marg )		8462449	2		=			
ANR	8464159	Identifier	sz		8462449	0					
ANR	8464160	CallExpression	countof ( marg )		8462449	1					
ANR	8464161	Callee	countof		8462449	0					
ANR	8464162	Identifier	countof		8462449	0					
ANR	8464163	ArgumentList	marg		8462449	1					
ANR	8464164	Argument	marg		8462449	0					
ANR	8464165	Identifier	marg		8462449	0					
ANR	8464166	IdentifierDeclStatement	"uint parsed = parse_floats ( pmi -> memory , sz , arg , marg ) ;"	1032:20:36860:36914	8462449	3	True				
ANR	8464167	IdentifierDecl	"parsed = parse_floats ( pmi -> memory , sz , arg , marg )"		8462449	0					
ANR	8464168	IdentifierDeclType	uint		8462449	0					
ANR	8464169	Identifier	parsed		8462449	1					
ANR	8464170	AssignmentExpression	"parsed = parse_floats ( pmi -> memory , sz , arg , marg )"		8462449	2		=			
ANR	8464171	Identifier	parsed		8462449	0					
ANR	8464172	CallExpression	"parse_floats ( pmi -> memory , sz , arg , marg )"		8462449	1					
ANR	8464173	Callee	parse_floats		8462449	0					
ANR	8464174	Identifier	parse_floats		8462449	0					
ANR	8464175	ArgumentList	pmi -> memory		8462449	1					
ANR	8464176	Argument	pmi -> memory		8462449	0					
ANR	8464177	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8464178	Identifier	pmi		8462449	0					
ANR	8464179	Identifier	memory		8462449	1					
ANR	8464180	Argument	sz		8462449	1					
ANR	8464181	Identifier	sz		8462449	0					
ANR	8464182	Argument	arg		8462449	2					
ANR	8464183	Identifier	arg		8462449	0					
ANR	8464184	Argument	marg		8462449	3					
ANR	8464185	Identifier	marg		8462449	0					
ANR	8464186	IfStatement	if ( parsed != sz )		8462449	4					
ANR	8464187	Condition	parsed != sz	1033:24:36940:36951	8462449	0	True				
ANR	8464188	EqualityExpression	parsed != sz		8462449	0		!=			
ANR	8464189	Identifier	parsed		8462449	0					
ANR	8464190	Identifier	sz		8462449	1					
ANR	8464191	CompoundStatement		283:38:13433:13433	8462449	1					
ANR	8464192	ExpressionStatement	"dmprintf ( pmi -> memory , ""-m must be followed by <left>x<bottom>\\n"" )"	1034:24:36980:37078	8462449	0	True				
ANR	8464193	CallExpression	"dmprintf ( pmi -> memory , ""-m must be followed by <left>x<bottom>\\n"" )"		8462449	0					
ANR	8464194	Callee	dmprintf		8462449	0					
ANR	8464195	Identifier	dmprintf		8462449	0					
ANR	8464196	ArgumentList	pmi -> memory		8462449	1					
ANR	8464197	Argument	pmi -> memory		8462449	0					
ANR	8464198	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8464199	Identifier	pmi		8462449	0					
ANR	8464200	Identifier	memory		8462449	1					
ANR	8464201	Argument	"""-m must be followed by <left>x<bottom>\\n"""		8462449	1					
ANR	8464202	PrimaryExpression	"""-m must be followed by <left>x<bottom>\\n"""		8462449	0					
ANR	8464203	ReturnStatement	return - 1 ;	1036:24:37104:37113	8462449	1	True				
ANR	8464204	UnaryOperationExpression	- 1		8462449	0					
ANR	8464205	UnaryOperator	-		8462449	0					
ANR	8464206	PrimaryExpression	1		8462449	1					
ANR	8464207	ExpressionStatement	fa . data = marg	1038:20:37157:37171	8462449	5	True				
ANR	8464208	AssignmentExpression	fa . data = marg		8462449	0		=			
ANR	8464209	MemberAccess	fa . data		8462449	0					
ANR	8464210	Identifier	fa		8462449	0					
ANR	8464211	Identifier	data		8462449	1					
ANR	8464212	Identifier	marg		8462449	1					
ANR	8464213	ExpressionStatement	fa . size = parsed	1039:20:37193:37209	8462449	6	True				
ANR	8464214	AssignmentExpression	fa . size = parsed		8462449	0		=			
ANR	8464215	MemberAccess	fa . size		8462449	0					
ANR	8464216	Identifier	fa		8462449	0					
ANR	8464217	Identifier	size		8462449	1					
ANR	8464218	Identifier	parsed		8462449	1					
ANR	8464219	ExpressionStatement	fa . persistent = false	1040:20:37231:37252	8462449	7	True				
ANR	8464220	AssignmentExpression	fa . persistent = false		8462449	0		=			
ANR	8464221	MemberAccess	fa . persistent		8462449	0					
ANR	8464222	Identifier	fa		8462449	0					
ANR	8464223	Identifier	persistent		8462449	1					
ANR	8464224	Identifier	false		8462449	1					
ANR	8464225	ExpressionStatement	"code = param_write_float_array ( ( gs_param_list * ) params , ""Margins"" , & fa )"	1041:20:37274:37418	8462449	8	True				
ANR	8464226	AssignmentExpression	"code = param_write_float_array ( ( gs_param_list * ) params , ""Margins"" , & fa )"		8462449	0		=			
ANR	8464227	Identifier	code		8462449	0					
ANR	8464228	CallExpression	"param_write_float_array ( ( gs_param_list * ) params , ""Margins"" , & fa )"		8462449	1					
ANR	8464229	Callee	param_write_float_array		8462449	0					
ANR	8464230	Identifier	param_write_float_array		8462449	0					
ANR	8464231	ArgumentList	( gs_param_list * ) params		8462449	1					
ANR	8464232	Argument	( gs_param_list * ) params		8462449	0					
ANR	8464233	CastExpression	( gs_param_list * ) params		8462449	0					
ANR	8464234	CastTarget	gs_param_list *		8462449	0					
ANR	8464235	Identifier	params		8462449	1					
ANR	8464236	Argument	"""Margins"""		8462449	1					
ANR	8464237	PrimaryExpression	"""Margins"""		8462449	0					
ANR	8464238	Argument	& fa		8462449	2					
ANR	8464239	UnaryOperationExpression	& fa		8462449	0					
ANR	8464240	UnaryOperator	&		8462449	0					
ANR	8464241	Identifier	fa		8462449	1					
ANR	8464242	BreakStatement	break ;	1046:16:37455:37460	8462449	22	True				
ANR	8464243	Label	case 'h' :	1047:12:37474:37482	8462449	23	True				
ANR	8464244	ExpressionStatement	help = true	1048:16:37500:37511	8462449	24	True				
ANR	8464245	AssignmentExpression	help = true		8462449	0		=			
ANR	8464246	Identifier	help		8462449	0					
ANR	8464247	Identifier	true		8462449	1					
ANR	8464248	GotoStatement	goto out ;	1049:16:37529:37537	8462449	25	True				
ANR	8464249	Identifier	out		8462449	0					
ANR	8464250	Label	case 'j' :	1051:12:37604:37612	8462449	26	True				
ANR	8464251	Label	case 'J' :	1052:12:37626:37634	8462449	27	True				
ANR	8464252	CompoundStatement		309:20:14478:14507	8462449	28					
ANR	8464253	IdentifierDeclStatement	stream_cursor_read cursor ;	1055:20:37749:37774	8462449	0	True				
ANR	8464254	IdentifierDecl	cursor		8462449	0					
ANR	8464255	IdentifierDeclType	stream_cursor_read		8462449	0					
ANR	8464256	Identifier	cursor		8462449	1					
ANR	8464257	IdentifierDeclStatement	byte buf [ 512 ] ;	1057:20:37882:37895	8462449	1	True				
ANR	8464258	IdentifierDecl	buf [ 512 ]		8462449	0					
ANR	8464259	IdentifierDeclType	byte [ 512 ]		8462449	0					
ANR	8464260	Identifier	buf		8462449	1					
ANR	8464261	PrimaryExpression	512		8462449	2					
ANR	8464262	IdentifierDeclStatement	int buf_len = strlen ( arg ) + 2 ;	1059:20:37999:38028	8462449	2	True				
ANR	8464263	IdentifierDecl	buf_len = strlen ( arg ) + 2		8462449	0					
ANR	8464264	IdentifierDeclType	int		8462449	0					
ANR	8464265	Identifier	buf_len		8462449	1					
ANR	8464266	AssignmentExpression	buf_len = strlen ( arg ) + 2		8462449	2		=			
ANR	8464267	Identifier	buf_len		8462449	0					
ANR	8464268	AdditiveExpression	strlen ( arg ) + 2		8462449	1		+			
ANR	8464269	CallExpression	strlen ( arg )		8462449	0					
ANR	8464270	Callee	strlen		8462449	0					
ANR	8464271	Identifier	strlen		8462449	0					
ANR	8464272	ArgumentList	arg		8462449	1					
ANR	8464273	Argument	arg		8462449	0					
ANR	8464274	Identifier	arg		8462449	0					
ANR	8464275	PrimaryExpression	2		8462449	1					
ANR	8464276	IfStatement	if ( ( buf_len ) > sizeof ( buf ) )		8462449	3					
ANR	8464277	Condition	( buf_len ) > sizeof ( buf )	1060:24:38054:38076	8462449	0	True				
ANR	8464278	RelationalExpression	( buf_len ) > sizeof ( buf )		8462449	0		>			
ANR	8464279	Identifier	buf_len		8462449	0					
ANR	8464280	SizeofExpression	sizeof ( buf )		8462449	1					
ANR	8464281	Sizeof	sizeof		8462449	0					
ANR	8464282	SizeofOperand	buf		8462449	1					
ANR	8464283	CompoundStatement		310:49:14558:14558	8462449	1					
ANR	8464284	ExpressionStatement	"dmprintf ( pmi -> memory , ""pjl sequence too long\\n"" )"	1061:24:38105:38153	8462449	0	True				
ANR	8464285	CallExpression	"dmprintf ( pmi -> memory , ""pjl sequence too long\\n"" )"		8462449	0					
ANR	8464286	Callee	dmprintf		8462449	0					
ANR	8464287	Identifier	dmprintf		8462449	0					
ANR	8464288	ArgumentList	pmi -> memory		8462449	1					
ANR	8464289	Argument	pmi -> memory		8462449	0					
ANR	8464290	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8464291	Identifier	pmi		8462449	0					
ANR	8464292	Identifier	memory		8462449	1					
ANR	8464293	Argument	"""pjl sequence too long\\n"""		8462449	1					
ANR	8464294	PrimaryExpression	"""pjl sequence too long\\n"""		8462449	0					
ANR	8464295	ReturnStatement	return - 1 ;	1062:24:38179:38188	8462449	1	True				
ANR	8464296	UnaryOperationExpression	- 1		8462449	0					
ANR	8464297	UnaryOperator	-		8462449	0					
ANR	8464298	PrimaryExpression	1		8462449	1					
ANR	8464299	CompoundStatement		318:24:14853:14858	8462449	4					
ANR	8464300	IdentifierDeclStatement	int i ;	1068:24:38374:38379	8462449	0	True				
ANR	8464301	IdentifierDecl	i		8462449	0					
ANR	8464302	IdentifierDeclType	int		8462449	0					
ANR	8464303	Identifier	i		8462449	1					
ANR	8464304	ForStatement	for ( i = 0 ; i < buf_len - 2 ; i ++ )		8462449	1					
ANR	8464305	ForInit	i = 0 ;	1070:29:38411:38416	8462449	0	True				
ANR	8464306	AssignmentExpression	i = 0		8462449	0		=			
ANR	8464307	Identifier	i		8462449	0					
ANR	8464308	PrimaryExpression	0		8462449	1					
ANR	8464309	Condition	i < buf_len - 2	1070:36:38418:38432	8462449	1	True				
ANR	8464310	RelationalExpression	i < buf_len - 2		8462449	0		<			
ANR	8464311	Identifier	i		8462449	0					
ANR	8464312	AdditiveExpression	buf_len - 2		8462449	1		-			
ANR	8464313	Identifier	buf_len		8462449	0					
ANR	8464314	PrimaryExpression	2		8462449	1					
ANR	8464315	PostIncDecOperationExpression	i ++	1070:53:38435:38437	8462449	2	True				
ANR	8464316	Identifier	i		8462449	0					
ANR	8464317	IncDec	++		8462449	1					
ANR	8464318	CompoundStatement		320:58:14919:14919	8462449	3					
ANR	8464319	IfStatement	if ( arg [ i ] == ';' )		8462449	0					
ANR	8464320	Condition	arg [ i ] == ';'	1071:32:38474:38486	8462449	0	True				
ANR	8464321	EqualityExpression	arg [ i ] == ';'		8462449	0		==			
ANR	8464322	ArrayIndexing	arg [ i ]		8462449	0					
ANR	8464323	Identifier	arg		8462449	0					
ANR	8464324	Identifier	i		8462449	1					
ANR	8464325	PrimaryExpression	';'		8462449	1					
ANR	8464326	ExpressionStatement	buf [ i ] = '\\n'	1072:32:38521:38534	8462449	1	True				
ANR	8464327	AssignmentExpression	buf [ i ] = '\\n'		8462449	0		=			
ANR	8464328	ArrayIndexing	buf [ i ]		8462449	0					
ANR	8464329	Identifier	buf		8462449	0					
ANR	8464330	Identifier	i		8462449	1					
ANR	8464331	PrimaryExpression	'\\n'		8462449	1					
ANR	8464332	ElseStatement	else		8462449	0					
ANR	8464333	ExpressionStatement	buf [ i ] = arg [ i ]	1074:32:38601:38616	8462449	0	True				
ANR	8464334	AssignmentExpression	buf [ i ] = arg [ i ]		8462449	0		=			
ANR	8464335	ArrayIndexing	buf [ i ]		8462449	0					
ANR	8464336	Identifier	buf		8462449	0					
ANR	8464337	Identifier	i		8462449	1					
ANR	8464338	ArrayIndexing	arg [ i ]		8462449	1					
ANR	8464339	Identifier	arg		8462449	0					
ANR	8464340	Identifier	i		8462449	1					
ANR	8464341	ExpressionStatement	buf [ i ] = '\\n'	1076:24:38668:38681	8462449	2	True				
ANR	8464342	AssignmentExpression	buf [ i ] = '\\n'		8462449	0		=			
ANR	8464343	ArrayIndexing	buf [ i ]		8462449	0					
ANR	8464344	Identifier	buf		8462449	0					
ANR	8464345	Identifier	i		8462449	1					
ANR	8464346	PrimaryExpression	'\\n'		8462449	1					
ANR	8464347	ExpressionStatement	i ++	1077:24:38707:38710	8462449	3	True				
ANR	8464348	PostIncDecOperationExpression	i ++		8462449	0					
ANR	8464349	Identifier	i		8462449	0					
ANR	8464350	IncDec	++		8462449	1					
ANR	8464351	ExpressionStatement	buf [ i ] = '\\0'	1078:24:38736:38749	8462449	4	True				
ANR	8464352	AssignmentExpression	buf [ i ] = '\\0'		8462449	0		=			
ANR	8464353	ArrayIndexing	buf [ i ]		8462449	0					
ANR	8464354	Identifier	buf		8462449	0					
ANR	8464355	Identifier	i		8462449	1					
ANR	8464356	PrimaryExpression	'\\0'		8462449	1					
ANR	8464357	ExpressionStatement	cursor . ptr = buf - 1	1081:20:38872:38892	8462449	5	True				
ANR	8464358	AssignmentExpression	cursor . ptr = buf - 1		8462449	0		=			
ANR	8464359	MemberAccess	cursor . ptr		8462449	0					
ANR	8464360	Identifier	cursor		8462449	0					
ANR	8464361	Identifier	ptr		8462449	1					
ANR	8464362	AdditiveExpression	buf - 1		8462449	1		-			
ANR	8464363	Identifier	buf		8462449	0					
ANR	8464364	PrimaryExpression	1		8462449	1					
ANR	8464365	ExpressionStatement	cursor . limit = cursor . ptr + buf_len	1083:20:38968:39003	8462449	6	True				
ANR	8464366	AssignmentExpression	cursor . limit = cursor . ptr + buf_len		8462449	0		=			
ANR	8464367	MemberAccess	cursor . limit		8462449	0					
ANR	8464368	Identifier	cursor		8462449	0					
ANR	8464369	Identifier	limit		8462449	1					
ANR	8464370	AdditiveExpression	cursor . ptr + buf_len		8462449	1		+			
ANR	8464371	MemberAccess	cursor . ptr		8462449	0					
ANR	8464372	Identifier	cursor		8462449	0					
ANR	8464373	Identifier	ptr		8462449	1					
ANR	8464374	Identifier	buf_len		8462449	1					
ANR	8464375	ExpressionStatement	"code = pl_process ( pjli , & cursor )"	1085:20:39067:39099	8462449	7	True				
ANR	8464376	AssignmentExpression	"code = pl_process ( pjli , & cursor )"		8462449	0		=			
ANR	8464377	Identifier	code		8462449	0					
ANR	8464378	CallExpression	"pl_process ( pjli , & cursor )"		8462449	1					
ANR	8464379	Callee	pl_process		8462449	0					
ANR	8464380	Identifier	pl_process		8462449	0					
ANR	8464381	ArgumentList	pjli		8462449	1					
ANR	8464382	Argument	pjli		8462449	0					
ANR	8464383	Identifier	pjli		8462449	0					
ANR	8464384	Argument	& cursor		8462449	1					
ANR	8464385	UnaryOperationExpression	& cursor		8462449	0					
ANR	8464386	UnaryOperator	&		8462449	0					
ANR	8464387	Identifier	cursor		8462449	1					
ANR	8464388	ExpressionStatement	pmi -> pjl_from_args = true	1086:20:39121:39146	8462449	8	True				
ANR	8464389	AssignmentExpression	pmi -> pjl_from_args = true		8462449	0		=			
ANR	8464390	PtrMemberAccess	pmi -> pjl_from_args		8462449	0					
ANR	8464391	Identifier	pmi		8462449	0					
ANR	8464392	Identifier	pjl_from_args		8462449	1					
ANR	8464393	Identifier	true		8462449	1					
ANR	8464394	IfStatement	if ( code != e_ExitLanguage )		8462449	9					
ANR	8464395	Condition	code != e_ExitLanguage	1089:24:39302:39323	8462449	0	True				
ANR	8464396	EqualityExpression	code != e_ExitLanguage		8462449	0		!=			
ANR	8464397	Identifier	code		8462449	0					
ANR	8464398	Identifier	e_ExitLanguage		8462449	1					
ANR	8464399	IfStatement	if ( code == 0 )		8462449	1					
ANR	8464400	Condition	code == 0	1090:28:39354:39362	8462449	0	True				
ANR	8464401	EqualityExpression	code == 0		8462449	0		==			
ANR	8464402	Identifier	code		8462449	0					
ANR	8464403	PrimaryExpression	0		8462449	1					
ANR	8464404	ExpressionStatement	code = - 1	1090:39:39365:39374	8462449	1	True				
ANR	8464405	AssignmentExpression	code = - 1		8462449	0		=			
ANR	8464406	Identifier	code		8462449	0					
ANR	8464407	UnaryOperationExpression	- 1		8462449	1					
ANR	8464408	UnaryOperator	-		8462449	0					
ANR	8464409	PrimaryExpression	1		8462449	1					
ANR	8464410	ElseStatement	else		8462449	0					
ANR	8464411	ExpressionStatement	code = 0	1092:24:39425:39433	8462449	0	True				
ANR	8464412	AssignmentExpression	code = 0		8462449	0		=			
ANR	8464413	Identifier	code		8462449	0					
ANR	8464414	PrimaryExpression	0		8462449	1					
ANR	8464415	BreakStatement	break ;	1094:16:39469:39474	8462449	29	True				
ANR	8464416	Label	case 'K' :	1095:12:39488:39496	8462449	30	True				
ANR	8464417	CompoundStatement		348:20:16076:16299	8462449	31					
ANR	8464418	IdentifierDeclStatement	int maxk ;	1097:20:39567:39575	8462449	0	True				
ANR	8464419	IdentifierDecl	maxk		8462449	0					
ANR	8464420	IdentifierDeclType	int		8462449	0					
ANR	8464421	Identifier	maxk		8462449	1					
ANR	8464422	IdentifierDeclStatement	gs_malloc_memory_t * rawheap = ( gs_malloc_memory_t * ) gs_memory_chunk_target ( pmi -> memory ) -> non_gc_memory ;	1098:20:39597:39820	8462449	1	True				
ANR	8464423	IdentifierDecl	* rawheap = ( gs_malloc_memory_t * ) gs_memory_chunk_target ( pmi -> memory ) -> non_gc_memory		8462449	0					
ANR	8464424	IdentifierDeclType	gs_malloc_memory_t *		8462449	0					
ANR	8464425	Identifier	rawheap		8462449	1					
ANR	8464426	AssignmentExpression	* rawheap = ( gs_malloc_memory_t * ) gs_memory_chunk_target ( pmi -> memory ) -> non_gc_memory		8462449	2		=			
ANR	8464427	Identifier	rawheap		8462449	0					
ANR	8464428	CastExpression	( gs_malloc_memory_t * ) gs_memory_chunk_target ( pmi -> memory ) -> non_gc_memory		8462449	1					
ANR	8464429	CastTarget	gs_malloc_memory_t *		8462449	0					
ANR	8464430	PtrMemberAccess	gs_memory_chunk_target ( pmi -> memory ) -> non_gc_memory		8462449	1					
ANR	8464431	CallExpression	gs_memory_chunk_target ( pmi -> memory )		8462449	0					
ANR	8464432	Callee	gs_memory_chunk_target		8462449	0					
ANR	8464433	Identifier	gs_memory_chunk_target		8462449	0					
ANR	8464434	ArgumentList	pmi -> memory		8462449	1					
ANR	8464435	Argument	pmi -> memory		8462449	0					
ANR	8464436	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8464437	Identifier	pmi		8462449	0					
ANR	8464438	Identifier	memory		8462449	1					
ANR	8464439	Identifier	non_gc_memory		8462449	1					
ANR	8464440	IfStatement	"if ( sscanf ( arg , ""%d"" , & maxk ) != 1 )"		8462449	2					
ANR	8464441	Condition	"sscanf ( arg , ""%d"" , & maxk ) != 1"	1102:24:39846:39874	8462449	0	True				
ANR	8464442	EqualityExpression	"sscanf ( arg , ""%d"" , & maxk ) != 1"		8462449	0		!=			
ANR	8464443	CallExpression	"sscanf ( arg , ""%d"" , & maxk )"		8462449	0					
ANR	8464444	Callee	sscanf		8462449	0					
ANR	8464445	Identifier	sscanf		8462449	0					
ANR	8464446	ArgumentList	arg		8462449	1					
ANR	8464447	Argument	arg		8462449	0					
ANR	8464448	Identifier	arg		8462449	0					
ANR	8464449	Argument	"""%d"""		8462449	1					
ANR	8464450	PrimaryExpression	"""%d"""		8462449	0					
ANR	8464451	Argument	& maxk		8462449	2					
ANR	8464452	UnaryOperationExpression	& maxk		8462449	0					
ANR	8464453	UnaryOperator	&		8462449	0					
ANR	8464454	Identifier	maxk		8462449	1					
ANR	8464455	PrimaryExpression	1		8462449	1					
ANR	8464456	CompoundStatement		352:55:16356:16356	8462449	1					
ANR	8464457	ExpressionStatement	"dmprintf ( pmi -> memory , ""-K must be followed by a number\\n"" )"	1103:24:39903:39994	8462449	0	True				
ANR	8464458	CallExpression	"dmprintf ( pmi -> memory , ""-K must be followed by a number\\n"" )"		8462449	0					
ANR	8464459	Callee	dmprintf		8462449	0					
ANR	8464460	Identifier	dmprintf		8462449	0					
ANR	8464461	ArgumentList	pmi -> memory		8462449	1					
ANR	8464462	Argument	pmi -> memory		8462449	0					
ANR	8464463	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8464464	Identifier	pmi		8462449	0					
ANR	8464465	Identifier	memory		8462449	1					
ANR	8464466	Argument	"""-K must be followed by a number\\n"""		8462449	1					
ANR	8464467	PrimaryExpression	"""-K must be followed by a number\\n"""		8462449	0					
ANR	8464468	ExpressionStatement	code = - 1	1105:24:40020:40029	8462449	1	True				
ANR	8464469	AssignmentExpression	code = - 1		8462449	0		=			
ANR	8464470	Identifier	code		8462449	0					
ANR	8464471	UnaryOperationExpression	- 1		8462449	1					
ANR	8464472	UnaryOperator	-		8462449	0					
ANR	8464473	PrimaryExpression	1		8462449	1					
ANR	8464474	ElseStatement	else		8462449	0					
ANR	8464475	ExpressionStatement	rawheap -> limit = ( long ) maxk << 10	1108:24:40102:40135	8462449	0	True				
ANR	8464476	AssignmentExpression	rawheap -> limit = ( long ) maxk << 10		8462449	0		=			
ANR	8464477	PtrMemberAccess	rawheap -> limit		8462449	0					
ANR	8464478	Identifier	rawheap		8462449	0					
ANR	8464479	Identifier	limit		8462449	1					
ANR	8464480	ShiftExpression	( long ) maxk << 10		8462449	1		<<			
ANR	8464481	CastExpression	( long ) maxk		8462449	0					
ANR	8464482	CastTarget	long		8462449	0					
ANR	8464483	Identifier	maxk		8462449	1					
ANR	8464484	PrimaryExpression	10		8462449	1					
ANR	8464485	BreakStatement	break ;	1110:16:40171:40176	8462449	32	True				
ANR	8464486	Label	case 'o' :	1111:12:40190:40198	8462449	33	True				
ANR	8464487	CompoundStatement		364:20:16755:16774	8462449	34					
ANR	8464488	IdentifierDeclStatement	const char * adef ;	1113:20:40238:40254	8462449	0	True				
ANR	8464489	IdentifierDecl	* adef		8462449	0					
ANR	8464490	IdentifierDeclType	const char *		8462449	0					
ANR	8464491	Identifier	adef		8462449	1					
ANR	8464492	IdentifierDeclStatement	gs_param_string str ;	1114:20:40276:40295	8462449	1	True				
ANR	8464493	IdentifierDecl	str		8462449	0					
ANR	8464494	IdentifierDeclType	gs_param_string		8462449	0					
ANR	8464495	Identifier	str		8462449	1					
ANR	8464496	IfStatement	if ( arg [ 0 ] == 0 )		8462449	2					
ANR	8464497	Condition	arg [ 0 ] == 0	1116:24:40322:40332	8462449	0	True				
ANR	8464498	EqualityExpression	arg [ 0 ] == 0		8462449	0		==			
ANR	8464499	ArrayIndexing	arg [ 0 ]		8462449	0					
ANR	8464500	Identifier	arg		8462449	0					
ANR	8464501	PrimaryExpression	0		8462449	1					
ANR	8464502	PrimaryExpression	0		8462449	1					
ANR	8464503	CompoundStatement		366:37:16814:16814	8462449	1					
ANR	8464504	ExpressionStatement	"code = arg_next ( pal , ( const char * * ) & adef , pmi -> memory )"	1117:24:40361:40416	8462449	0	True				
ANR	8464505	AssignmentExpression	"code = arg_next ( pal , ( const char * * ) & adef , pmi -> memory )"		8462449	0		=			
ANR	8464506	Identifier	code		8462449	0					
ANR	8464507	CallExpression	"arg_next ( pal , ( const char * * ) & adef , pmi -> memory )"		8462449	1					
ANR	8464508	Callee	arg_next		8462449	0					
ANR	8464509	Identifier	arg_next		8462449	0					
ANR	8464510	ArgumentList	pal		8462449	1					
ANR	8464511	Argument	pal		8462449	0					
ANR	8464512	Identifier	pal		8462449	0					
ANR	8464513	Argument	( const char * * ) & adef		8462449	1					
ANR	8464514	CastExpression	( const char * * ) & adef		8462449	0					
ANR	8464515	CastTarget	const char * *		8462449	0					
ANR	8464516	UnaryOperationExpression	& adef		8462449	1					
ANR	8464517	UnaryOperator	&		8462449	0					
ANR	8464518	Identifier	adef		8462449	1					
ANR	8464519	Argument	pmi -> memory		8462449	2					
ANR	8464520	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8464521	Identifier	pmi		8462449	0					
ANR	8464522	Identifier	memory		8462449	1					
ANR	8464523	IfStatement	if ( code < 0 )		8462449	1					
ANR	8464524	Condition	code < 0	1118:28:40446:40453	8462449	0	True				
ANR	8464525	RelationalExpression	code < 0		8462449	0		<			
ANR	8464526	Identifier	code		8462449	0					
ANR	8464527	PrimaryExpression	0		8462449	1					
ANR	8464528	BreakStatement	break ;	1119:28:40484:40489	8462449	1	True				
ANR	8464529	ElseStatement	else		8462449	0					
ANR	8464530	ExpressionStatement	adef = arg	1121:24:40542:40552	8462449	0	True				
ANR	8464531	AssignmentExpression	adef = arg		8462449	0		=			
ANR	8464532	Identifier	adef		8462449	0					
ANR	8464533	Identifier	arg		8462449	1					
ANR	8464534	ExpressionStatement	"param_string_from_transient_string ( str , adef )"	1122:20:40574:40619	8462449	3	True				
ANR	8464535	CallExpression	"param_string_from_transient_string ( str , adef )"		8462449	0					
ANR	8464536	Callee	param_string_from_transient_string		8462449	0					
ANR	8464537	Identifier	param_string_from_transient_string		8462449	0					
ANR	8464538	ArgumentList	str		8462449	1					
ANR	8464539	Argument	str		8462449	0					
ANR	8464540	Identifier	str		8462449	0					
ANR	8464541	Argument	adef		8462449	1					
ANR	8464542	Identifier	adef		8462449	0					
ANR	8464543	ExpressionStatement	"code = param_write_string ( ( gs_param_list * ) params , ""OutputFile"" , & str )"	1123:20:40641:40779	8462449	4	True				
ANR	8464544	AssignmentExpression	"code = param_write_string ( ( gs_param_list * ) params , ""OutputFile"" , & str )"		8462449	0		=			
ANR	8464545	Identifier	code		8462449	0					
ANR	8464546	CallExpression	"param_write_string ( ( gs_param_list * ) params , ""OutputFile"" , & str )"		8462449	1					
ANR	8464547	Callee	param_write_string		8462449	0					
ANR	8464548	Identifier	param_write_string		8462449	0					
ANR	8464549	ArgumentList	( gs_param_list * ) params		8462449	1					
ANR	8464550	Argument	( gs_param_list * ) params		8462449	0					
ANR	8464551	CastExpression	( gs_param_list * ) params		8462449	0					
ANR	8464552	CastTarget	gs_param_list *		8462449	0					
ANR	8464553	Identifier	params		8462449	1					
ANR	8464554	Argument	"""OutputFile"""		8462449	1					
ANR	8464555	PrimaryExpression	"""OutputFile"""		8462449	0					
ANR	8464556	Argument	& str		8462449	2					
ANR	8464557	UnaryOperationExpression	& str		8462449	0					
ANR	8464558	UnaryOperator	&		8462449	0					
ANR	8464559	Identifier	str		8462449	1					
ANR	8464560	ExpressionStatement	pmi -> pause = false	1126:20:40801:40819	8462449	5	True				
ANR	8464561	AssignmentExpression	pmi -> pause = false		8462449	0		=			
ANR	8464562	PtrMemberAccess	pmi -> pause		8462449	0					
ANR	8464563	Identifier	pmi		8462449	0					
ANR	8464564	Identifier	pause		8462449	1					
ANR	8464565	Identifier	false		8462449	1					
ANR	8464566	BreakStatement	break ;	1127:20:40841:40846	8462449	6	True				
ANR	8464567	Label	case 'L' :	1129:12:40878:40886	8462449	35	True				
ANR	8464568	CompoundStatement		382:20:17460:17517	8462449	36					
ANR	8464569	IdentifierDeclStatement	int index ;	1131:20:40950:40959	8462449	0	True				
ANR	8464570	IdentifierDecl	index		8462449	0					
ANR	8464571	IdentifierDeclType	int		8462449	0					
ANR	8464572	Identifier	index		8462449	1					
ANR	8464573	IdentifierDeclStatement	pl_interp_implementation_t * * impls = pmi -> implementations ;	1132:20:40981:41038	8462449	1	True				
ANR	8464574	IdentifierDecl	* * impls = pmi -> implementations		8462449	0					
ANR	8464575	IdentifierDeclType	pl_interp_implementation_t * *		8462449	0					
ANR	8464576	Identifier	impls		8462449	1					
ANR	8464577	AssignmentExpression	* * impls = pmi -> implementations		8462449	2		=			
ANR	8464578	Identifier	impls		8462449	0					
ANR	8464579	PtrMemberAccess	pmi -> implementations		8462449	1					
ANR	8464580	Identifier	pmi		8462449	0					
ANR	8464581	Identifier	implementations		8462449	1					
ANR	8464582	ForStatement	for ( index = 1 ; impls [ index ] != 0 ; ++ index )		8462449	2					
ANR	8464583	ForInit	index = 1 ;	1139:25:41270:41279	8462449	0	True				
ANR	8464584	AssignmentExpression	index = 1		8462449	0		=			
ANR	8464585	Identifier	index		8462449	0					
ANR	8464586	PrimaryExpression	1		8462449	1					
ANR	8464587	Condition	impls [ index ] != 0	1139:36:41281:41297	8462449	1	True				
ANR	8464588	EqualityExpression	impls [ index ] != 0		8462449	0		!=			
ANR	8464589	ArrayIndexing	impls [ index ]		8462449	0					
ANR	8464590	Identifier	impls		8462449	0					
ANR	8464591	Identifier	index		8462449	1					
ANR	8464592	PrimaryExpression	0		8462449	1					
ANR	8464593	UnaryExpression	++ index	1139:55:41300:41306	8462449	2	True				
ANR	8464594	IncDec	++		8462449	0					
ANR	8464595	Identifier	index		8462449	1					
ANR	8464596	IfStatement	"if ( ! strcmp ( arg , pl_characteristics ( impls [ index ] ) -> language ) )"		8462449	3					
ANR	8464597	Condition	"! strcmp ( arg , pl_characteristics ( impls [ index ] ) -> language )"	1140:28:41337:41465	8462449	0	True				
ANR	8464598	UnaryOperationExpression	"! strcmp ( arg , pl_characteristics ( impls [ index ] ) -> language )"		8462449	0					
ANR	8464599	UnaryOperator	!		8462449	0					
ANR	8464600	CallExpression	"strcmp ( arg , pl_characteristics ( impls [ index ] ) -> language )"		8462449	1					
ANR	8464601	Callee	strcmp		8462449	0					
ANR	8464602	Identifier	strcmp		8462449	0					
ANR	8464603	ArgumentList	arg		8462449	1					
ANR	8464604	Argument	arg		8462449	0					
ANR	8464605	Identifier	arg		8462449	0					
ANR	8464606	Argument	pl_characteristics ( impls [ index ] ) -> language		8462449	1					
ANR	8464607	PtrMemberAccess	pl_characteristics ( impls [ index ] ) -> language		8462449	0					
ANR	8464608	CallExpression	pl_characteristics ( impls [ index ] )		8462449	0					
ANR	8464609	Callee	pl_characteristics		8462449	0					
ANR	8464610	Identifier	pl_characteristics		8462449	0					
ANR	8464611	ArgumentList	impls [ index ]		8462449	1					
ANR	8464612	Argument	impls [ index ]		8462449	0					
ANR	8464613	ArrayIndexing	impls [ index ]		8462449	0					
ANR	8464614	Identifier	impls		8462449	0					
ANR	8464615	Identifier	index		8462449	1					
ANR	8464616	Identifier	language		8462449	1					
ANR	8464617	BreakStatement	break ;	1143:28:41496:41501	8462449	1	True				
ANR	8464618	IfStatement	if ( impls [ index ] != 0 )		8462449	3					
ANR	8464619	Condition	impls [ index ] != 0	1144:24:41527:41543	8462449	0	True				
ANR	8464620	EqualityExpression	impls [ index ] != 0		8462449	0		!=			
ANR	8464621	ArrayIndexing	impls [ index ]		8462449	0					
ANR	8464622	Identifier	impls		8462449	0					
ANR	8464623	Identifier	index		8462449	1					
ANR	8464624	PrimaryExpression	0		8462449	1					
ANR	8464625	ExpressionStatement	pmi -> implementation = impls [ index ]	1145:24:41570:41604	8462449	1	True				
ANR	8464626	AssignmentExpression	pmi -> implementation = impls [ index ]		8462449	0		=			
ANR	8464627	PtrMemberAccess	pmi -> implementation		8462449	0					
ANR	8464628	Identifier	pmi		8462449	0					
ANR	8464629	Identifier	implementation		8462449	1					
ANR	8464630	ArrayIndexing	impls [ index ]		8462449	1					
ANR	8464631	Identifier	impls		8462449	0					
ANR	8464632	Identifier	index		8462449	1					
ANR	8464633	ElseStatement	else		8462449	0					
ANR	8464634	CompoundStatement		396:25:18110:18110	8462449	0					
ANR	8464635	ExpressionStatement	"dmprintf ( pmi -> memory , ""Choose language in -L<language> from: "" )"	1147:24:41657:41753	8462449	0	True				
ANR	8464636	CallExpression	"dmprintf ( pmi -> memory , ""Choose language in -L<language> from: "" )"		8462449	0					
ANR	8464637	Callee	dmprintf		8462449	0					
ANR	8464638	Identifier	dmprintf		8462449	0					
ANR	8464639	ArgumentList	pmi -> memory		8462449	1					
ANR	8464640	Argument	pmi -> memory		8462449	0					
ANR	8464641	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8464642	Identifier	pmi		8462449	0					
ANR	8464643	Identifier	memory		8462449	1					
ANR	8464644	Argument	"""Choose language in -L<language> from: """		8462449	1					
ANR	8464645	PrimaryExpression	"""Choose language in -L<language> from: """		8462449	0					
ANR	8464646	ForStatement	for ( index = 1 ; impls [ index ] != 0 ; ++ index )		8462449	1					
ANR	8464647	ForInit	index = 1 ;	1149:29:41784:41793	8462449	0	True				
ANR	8464648	AssignmentExpression	index = 1		8462449	0		=			
ANR	8464649	Identifier	index		8462449	0					
ANR	8464650	PrimaryExpression	1		8462449	1					
ANR	8464651	Condition	impls [ index ] != 0	1149:40:41795:41811	8462449	1	True				
ANR	8464652	EqualityExpression	impls [ index ] != 0		8462449	0		!=			
ANR	8464653	ArrayIndexing	impls [ index ]		8462449	0					
ANR	8464654	Identifier	impls		8462449	0					
ANR	8464655	Identifier	index		8462449	1					
ANR	8464656	PrimaryExpression	0		8462449	1					
ANR	8464657	UnaryExpression	++ index	1149:59:41814:41820	8462449	2	True				
ANR	8464658	IncDec	++		8462449	0					
ANR	8464659	Identifier	index		8462449	1					
ANR	8464660	ExpressionStatement	"dmprintf1 ( pmi -> memory , ""%s "" , pl_characteristics ( impls [ index ] ) -> language )"	1150:28:41851:42001	8462449	3	True				
ANR	8464661	CallExpression	"dmprintf1 ( pmi -> memory , ""%s "" , pl_characteristics ( impls [ index ] ) -> language )"		8462449	0					
ANR	8464662	Callee	dmprintf1		8462449	0					
ANR	8464663	Identifier	dmprintf1		8462449	0					
ANR	8464664	ArgumentList	pmi -> memory		8462449	1					
ANR	8464665	Argument	pmi -> memory		8462449	0					
ANR	8464666	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8464667	Identifier	pmi		8462449	0					
ANR	8464668	Identifier	memory		8462449	1					
ANR	8464669	Argument	"""%s """		8462449	1					
ANR	8464670	PrimaryExpression	"""%s """		8462449	0					
ANR	8464671	Argument	pl_characteristics ( impls [ index ] ) -> language		8462449	2					
ANR	8464672	PtrMemberAccess	pl_characteristics ( impls [ index ] ) -> language		8462449	0					
ANR	8464673	CallExpression	pl_characteristics ( impls [ index ] )		8462449	0					
ANR	8464674	Callee	pl_characteristics		8462449	0					
ANR	8464675	Identifier	pl_characteristics		8462449	0					
ANR	8464676	ArgumentList	impls [ index ]		8462449	1					
ANR	8464677	Argument	impls [ index ]		8462449	0					
ANR	8464678	ArrayIndexing	impls [ index ]		8462449	0					
ANR	8464679	Identifier	impls		8462449	0					
ANR	8464680	Identifier	index		8462449	1					
ANR	8464681	Identifier	language		8462449	1					
ANR	8464682	ExpressionStatement	"dmprintf ( pmi -> memory , ""\\n"" )"	1153:24:42027:42054	8462449	2	True				
ANR	8464683	CallExpression	"dmprintf ( pmi -> memory , ""\\n"" )"		8462449	0					
ANR	8464684	Callee	dmprintf		8462449	0					
ANR	8464685	Identifier	dmprintf		8462449	0					
ANR	8464686	ArgumentList	pmi -> memory		8462449	1					
ANR	8464687	Argument	pmi -> memory		8462449	0					
ANR	8464688	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8464689	Identifier	pmi		8462449	0					
ANR	8464690	Identifier	memory		8462449	1					
ANR	8464691	Argument	"""\\n"""		8462449	1					
ANR	8464692	PrimaryExpression	"""\\n"""		8462449	0					
ANR	8464693	ReturnStatement	return - 1 ;	1154:24:42080:42089	8462449	3	True				
ANR	8464694	UnaryOperationExpression	- 1		8462449	0					
ANR	8464695	UnaryOperator	-		8462449	0					
ANR	8464696	PrimaryExpression	1		8462449	1					
ANR	8464697	BreakStatement	break ;	1156:20:42133:42138	8462449	4	True				
ANR	8464698	Label	case 'l' :	1158:12:42170:42178	8462449	37	True				
ANR	8464699	CompoundStatement		409:16:18702:18702	8462449	38					
ANR	8464700	IfStatement	"if ( ! strcmp ( arg , ""RTL"" ) || ! strcmp ( arg , ""PCL5E"" ) || ! strcmp ( arg , ""PCL5C"" ) )"		8462449	0					
ANR	8464701	Condition	"! strcmp ( arg , ""RTL"" ) || ! strcmp ( arg , ""PCL5E"" ) || ! strcmp ( arg , ""PCL5C"" )"	1160:24:42249:42341	8462449	0	True				
ANR	8464702	OrExpression	"! strcmp ( arg , ""RTL"" ) || ! strcmp ( arg , ""PCL5E"" ) || ! strcmp ( arg , ""PCL5C"" )"		8462449	0		||			
ANR	8464703	UnaryOperationExpression	"! strcmp ( arg , ""RTL"" )"		8462449	0					
ANR	8464704	UnaryOperator	!		8462449	0					
ANR	8464705	CallExpression	"strcmp ( arg , ""RTL"" )"		8462449	1					
ANR	8464706	Callee	strcmp		8462449	0					
ANR	8464707	Identifier	strcmp		8462449	0					
ANR	8464708	ArgumentList	arg		8462449	1					
ANR	8464709	Argument	arg		8462449	0					
ANR	8464710	Identifier	arg		8462449	0					
ANR	8464711	Argument	"""RTL"""		8462449	1					
ANR	8464712	PrimaryExpression	"""RTL"""		8462449	0					
ANR	8464713	OrExpression	"! strcmp ( arg , ""PCL5E"" ) || ! strcmp ( arg , ""PCL5C"" )"		8462449	1		||			
ANR	8464714	UnaryOperationExpression	"! strcmp ( arg , ""PCL5E"" )"		8462449	0					
ANR	8464715	UnaryOperator	!		8462449	0					
ANR	8464716	CallExpression	"strcmp ( arg , ""PCL5E"" )"		8462449	1					
ANR	8464717	Callee	strcmp		8462449	0					
ANR	8464718	Identifier	strcmp		8462449	0					
ANR	8464719	ArgumentList	arg		8462449	1					
ANR	8464720	Argument	arg		8462449	0					
ANR	8464721	Identifier	arg		8462449	0					
ANR	8464722	Argument	"""PCL5E"""		8462449	1					
ANR	8464723	PrimaryExpression	"""PCL5E"""		8462449	0					
ANR	8464724	UnaryOperationExpression	"! strcmp ( arg , ""PCL5C"" )"		8462449	1					
ANR	8464725	UnaryOperator	!		8462449	0					
ANR	8464726	CallExpression	"strcmp ( arg , ""PCL5C"" )"		8462449	1					
ANR	8464727	Callee	strcmp		8462449	0					
ANR	8464728	Identifier	strcmp		8462449	0					
ANR	8464729	ArgumentList	arg		8462449	1					
ANR	8464730	Argument	arg		8462449	0					
ANR	8464731	Identifier	arg		8462449	0					
ANR	8464732	Argument	"""PCL5C"""		8462449	1					
ANR	8464733	PrimaryExpression	"""PCL5C"""		8462449	0					
ANR	8464734	ExpressionStatement	"strcpy ( pmi -> pcl_personality , arg )"	1162:24:42368:42401	8462449	1	True				
ANR	8464735	CallExpression	"strcpy ( pmi -> pcl_personality , arg )"		8462449	0					
ANR	8464736	Callee	strcpy		8462449	0					
ANR	8464737	Identifier	strcpy		8462449	0					
ANR	8464738	ArgumentList	pmi -> pcl_personality		8462449	1					
ANR	8464739	Argument	pmi -> pcl_personality		8462449	0					
ANR	8464740	PtrMemberAccess	pmi -> pcl_personality		8462449	0					
ANR	8464741	Identifier	pmi		8462449	0					
ANR	8464742	Identifier	pcl_personality		8462449	1					
ANR	8464743	Argument	arg		8462449	1					
ANR	8464744	Identifier	arg		8462449	0					
ANR	8464745	ElseStatement	else		8462449	0					
ANR	8464746	ExpressionStatement	"dmprintf ( pmi -> memory , ""PCL personality must be RTL, PCL5E or PCL5C\\n"" )"	1164:24:42452:42555	8462449	0	True				
ANR	8464747	CallExpression	"dmprintf ( pmi -> memory , ""PCL personality must be RTL, PCL5E or PCL5C\\n"" )"		8462449	0					
ANR	8464748	Callee	dmprintf		8462449	0					
ANR	8464749	Identifier	dmprintf		8462449	0					
ANR	8464750	ArgumentList	pmi -> memory		8462449	1					
ANR	8464751	Argument	pmi -> memory		8462449	0					
ANR	8464752	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8464753	Identifier	pmi		8462449	0					
ANR	8464754	Identifier	memory		8462449	1					
ANR	8464755	Argument	"""PCL personality must be RTL, PCL5E or PCL5C\\n"""		8462449	1					
ANR	8464756	PrimaryExpression	"""PCL personality must be RTL, PCL5E or PCL5C\\n"""		8462449	0					
ANR	8464757	BreakStatement	break ;	1167:16:42591:42596	8462449	39	True				
ANR	8464758	Label	case 'r' :	1168:12:42610:42618	8462449	40	True				
ANR	8464759	CompoundStatement		423:20:19260:19313	8462449	41					
ANR	8464760	IdentifierDeclStatement	float res [ 2 ] ;	1170:20:42658:42670	8462449	0	True				
ANR	8464761	IdentifierDecl	res [ 2 ]		8462449	0					
ANR	8464762	IdentifierDeclType	float [ 2 ]		8462449	0					
ANR	8464763	Identifier	res		8462449	1					
ANR	8464764	PrimaryExpression	2		8462449	2					
ANR	8464765	IdentifierDeclStatement	gs_param_float_array fa ;	1171:20:42692:42715	8462449	1	True				
ANR	8464766	IdentifierDecl	fa		8462449	0					
ANR	8464767	IdentifierDeclType	gs_param_float_array		8462449	0					
ANR	8464768	Identifier	fa		8462449	1					
ANR	8464769	IdentifierDeclStatement	uint sz = countof ( res ) ;	1172:20:42737:42759	8462449	2	True				
ANR	8464770	IdentifierDecl	sz = countof ( res )		8462449	0					
ANR	8464771	IdentifierDeclType	uint		8462449	0					
ANR	8464772	Identifier	sz		8462449	1					
ANR	8464773	AssignmentExpression	sz = countof ( res )		8462449	2		=			
ANR	8464774	Identifier	sz		8462449	0					
ANR	8464775	CallExpression	countof ( res )		8462449	1					
ANR	8464776	Callee	countof		8462449	0					
ANR	8464777	Identifier	countof		8462449	0					
ANR	8464778	ArgumentList	res		8462449	1					
ANR	8464779	Argument	res		8462449	0					
ANR	8464780	Identifier	res		8462449	0					
ANR	8464781	IdentifierDeclStatement	"uint parsed = parse_floats ( pmi -> memory , sz , arg , res ) ;"	1173:20:42781:42834	8462449	3	True				
ANR	8464782	IdentifierDecl	"parsed = parse_floats ( pmi -> memory , sz , arg , res )"		8462449	0					
ANR	8464783	IdentifierDeclType	uint		8462449	0					
ANR	8464784	Identifier	parsed		8462449	1					
ANR	8464785	AssignmentExpression	"parsed = parse_floats ( pmi -> memory , sz , arg , res )"		8462449	2		=			
ANR	8464786	Identifier	parsed		8462449	0					
ANR	8464787	CallExpression	"parse_floats ( pmi -> memory , sz , arg , res )"		8462449	1					
ANR	8464788	Callee	parse_floats		8462449	0					
ANR	8464789	Identifier	parse_floats		8462449	0					
ANR	8464790	ArgumentList	pmi -> memory		8462449	1					
ANR	8464791	Argument	pmi -> memory		8462449	0					
ANR	8464792	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8464793	Identifier	pmi		8462449	0					
ANR	8464794	Identifier	memory		8462449	1					
ANR	8464795	Argument	sz		8462449	1					
ANR	8464796	Identifier	sz		8462449	0					
ANR	8464797	Argument	arg		8462449	2					
ANR	8464798	Identifier	arg		8462449	0					
ANR	8464799	Argument	res		8462449	3					
ANR	8464800	Identifier	res		8462449	0					
ANR	8464801	SwitchStatement	switch ( parsed )		8462449	4					
ANR	8464802	Condition	parsed	1174:28:42864:42869	8462449	0	True				
ANR	8464803	Identifier	parsed		8462449	0					
ANR	8464804	CompoundStatement		424:36:19351:19351	8462449	1					
ANR	8464805	Label	default :	1175:24:42898:42905	8462449	0	True				
ANR	8464806	Identifier	default		8462449	0					
ANR	8464807	ExpressionStatement	"dmprintf ( pmi -> memory , ""-r must be followed by <res> or <xres>x<yres>\\n"" )"	1176:28:42935:43044	8462449	1	True				
ANR	8464808	CallExpression	"dmprintf ( pmi -> memory , ""-r must be followed by <res> or <xres>x<yres>\\n"" )"		8462449	0					
ANR	8464809	Callee	dmprintf		8462449	0					
ANR	8464810	Identifier	dmprintf		8462449	0					
ANR	8464811	ArgumentList	pmi -> memory		8462449	1					
ANR	8464812	Argument	pmi -> memory		8462449	0					
ANR	8464813	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8464814	Identifier	pmi		8462449	0					
ANR	8464815	Identifier	memory		8462449	1					
ANR	8464816	Argument	"""-r must be followed by <res> or <xres>x<yres>\\n"""		8462449	1					
ANR	8464817	PrimaryExpression	"""-r must be followed by <res> or <xres>x<yres>\\n"""		8462449	0					
ANR	8464818	ReturnStatement	return - 1 ;	1178:28:43074:43083	8462449	2	True				
ANR	8464819	UnaryOperationExpression	- 1		8462449	0					
ANR	8464820	UnaryOperator	-		8462449	0					
ANR	8464821	PrimaryExpression	1		8462449	1					
ANR	8464822	Label	case 1 :	1179:24:43109:43115	8462449	3	True				
ANR	8464823	ExpressionStatement	res [ 1 ] = res [ 0 ]	1180:28:43166:43181	8462449	4	True				
ANR	8464824	AssignmentExpression	res [ 1 ] = res [ 0 ]		8462449	0		=			
ANR	8464825	ArrayIndexing	res [ 1 ]		8462449	0					
ANR	8464826	Identifier	res		8462449	0					
ANR	8464827	PrimaryExpression	1		8462449	1					
ANR	8464828	ArrayIndexing	res [ 0 ]		8462449	1					
ANR	8464829	Identifier	res		8462449	0					
ANR	8464830	PrimaryExpression	0		8462449	1					
ANR	8464831	Label	case 2 :	1181:24:43207:43213	8462449	5	True				
ANR	8464832	ExpressionStatement		1182:28:43272:43272	8462449	6	True				
ANR	8464833	ExpressionStatement	fa . data = res	1184:20:43316:43329	8462449	5	True				
ANR	8464834	AssignmentExpression	fa . data = res		8462449	0		=			
ANR	8464835	MemberAccess	fa . data		8462449	0					
ANR	8464836	Identifier	fa		8462449	0					
ANR	8464837	Identifier	data		8462449	1					
ANR	8464838	Identifier	res		8462449	1					
ANR	8464839	ExpressionStatement	fa . size = sz	1185:20:43351:43363	8462449	6	True				
ANR	8464840	AssignmentExpression	fa . size = sz		8462449	0		=			
ANR	8464841	MemberAccess	fa . size		8462449	0					
ANR	8464842	Identifier	fa		8462449	0					
ANR	8464843	Identifier	size		8462449	1					
ANR	8464844	Identifier	sz		8462449	1					
ANR	8464845	ExpressionStatement	fa . persistent = false	1186:20:43385:43406	8462449	7	True				
ANR	8464846	AssignmentExpression	fa . persistent = false		8462449	0		=			
ANR	8464847	MemberAccess	fa . persistent		8462449	0					
ANR	8464848	Identifier	fa		8462449	0					
ANR	8464849	Identifier	persistent		8462449	1					
ANR	8464850	Identifier	false		8462449	1					
ANR	8464851	ExpressionStatement	"code = param_write_float_array ( ( gs_param_list * ) params , ""HWResolution"" , & fa )"	1187:20:43428:43577	8462449	8	True				
ANR	8464852	AssignmentExpression	"code = param_write_float_array ( ( gs_param_list * ) params , ""HWResolution"" , & fa )"		8462449	0		=			
ANR	8464853	Identifier	code		8462449	0					
ANR	8464854	CallExpression	"param_write_float_array ( ( gs_param_list * ) params , ""HWResolution"" , & fa )"		8462449	1					
ANR	8464855	Callee	param_write_float_array		8462449	0					
ANR	8464856	Identifier	param_write_float_array		8462449	0					
ANR	8464857	ArgumentList	( gs_param_list * ) params		8462449	1					
ANR	8464858	Argument	( gs_param_list * ) params		8462449	0					
ANR	8464859	CastExpression	( gs_param_list * ) params		8462449	0					
ANR	8464860	CastTarget	gs_param_list *		8462449	0					
ANR	8464861	Identifier	params		8462449	1					
ANR	8464862	Argument	"""HWResolution"""		8462449	1					
ANR	8464863	PrimaryExpression	"""HWResolution"""		8462449	0					
ANR	8464864	Argument	& fa		8462449	2					
ANR	8464865	UnaryOperationExpression	& fa		8462449	0					
ANR	8464866	UnaryOperator	&		8462449	0					
ANR	8464867	Identifier	fa		8462449	1					
ANR	8464868	IfStatement	if ( code == 0 )		8462449	9					
ANR	8464869	Condition	code == 0	1190:24:43603:43611	8462449	0	True				
ANR	8464870	EqualityExpression	code == 0		8462449	0		==			
ANR	8464871	Identifier	code		8462449	0					
ANR	8464872	PrimaryExpression	0		8462449	1					
ANR	8464873	ExpressionStatement	pmi -> res_set_on_command_line = true	1191:24:43638:43673	8462449	1	True				
ANR	8464874	AssignmentExpression	pmi -> res_set_on_command_line = true		8462449	0		=			
ANR	8464875	PtrMemberAccess	pmi -> res_set_on_command_line		8462449	0					
ANR	8464876	Identifier	pmi		8462449	0					
ANR	8464877	Identifier	res_set_on_command_line		8462449	1					
ANR	8464878	Identifier	true		8462449	1					
ANR	8464879	BreakStatement	break ;	1193:16:43709:43714	8462449	42	True				
ANR	8464880	Label	case 's' :	1194:12:43728:43736	8462449	43	True				
ANR	8464881	Label	case 'S' :	1195:12:43750:43758	8462449	44	True				
ANR	8464882	CompoundStatement		449:20:20421:20440	8462449	45					
ANR	8464883	IdentifierDeclStatement	char * eqp ;	1197:20:43872:43881	8462449	0	True				
ANR	8464884	IdentifierDecl	* eqp		8462449	0					
ANR	8464885	IdentifierDeclType	char *		8462449	0					
ANR	8464886	Identifier	eqp		8462449	1					
ANR	8464887	IdentifierDeclStatement	const char * value ;	1198:20:43903:43920	8462449	1	True				
ANR	8464888	IdentifierDecl	* value		8462449	0					
ANR	8464889	IdentifierDeclType	const char *		8462449	0					
ANR	8464890	Identifier	value		8462449	1					
ANR	8464891	IdentifierDeclStatement	gs_param_string str ;	1199:20:43942:43961	8462449	2	True				
ANR	8464892	IdentifierDecl	str		8462449	0					
ANR	8464893	IdentifierDeclType	gs_param_string		8462449	0					
ANR	8464894	Identifier	str		8462449	1					
ANR	8464895	ExpressionStatement	"eqp = strchr ( arg , '=' )"	1201:20:43984:44006	8462449	3	True				
ANR	8464896	AssignmentExpression	"eqp = strchr ( arg , '=' )"		8462449	0		=			
ANR	8464897	Identifier	eqp		8462449	0					
ANR	8464898	CallExpression	"strchr ( arg , '=' )"		8462449	1					
ANR	8464899	Callee	strchr		8462449	0					
ANR	8464900	Identifier	strchr		8462449	0					
ANR	8464901	ArgumentList	arg		8462449	1					
ANR	8464902	Argument	arg		8462449	0					
ANR	8464903	Identifier	arg		8462449	0					
ANR	8464904	Argument	'='		8462449	1					
ANR	8464905	PrimaryExpression	'='		8462449	0					
ANR	8464906	IfStatement	"if ( ! ( eqp || ( eqp = strchr ( arg , '#' ) ) ) )"		8462449	4					
ANR	8464907	Condition	"! ( eqp || ( eqp = strchr ( arg , '#' ) ) )"	1202:24:44032:44065	8462449	0	True				
ANR	8464908	UnaryOperationExpression	"! ( eqp || ( eqp = strchr ( arg , '#' ) ) )"		8462449	0					
ANR	8464909	UnaryOperator	!		8462449	0					
ANR	8464910	OrExpression	"eqp || ( eqp = strchr ( arg , '#' ) )"		8462449	1		||			
ANR	8464911	Identifier	eqp		8462449	0					
ANR	8464912	AssignmentExpression	"eqp = strchr ( arg , '#' )"		8462449	1		=			
ANR	8464913	Identifier	eqp		8462449	0					
ANR	8464914	CallExpression	"strchr ( arg , '#' )"		8462449	1					
ANR	8464915	Callee	strchr		8462449	0					
ANR	8464916	Identifier	strchr		8462449	0					
ANR	8464917	ArgumentList	arg		8462449	1					
ANR	8464918	Argument	arg		8462449	0					
ANR	8464919	Identifier	arg		8462449	0					
ANR	8464920	Argument	'#'		8462449	1					
ANR	8464921	PrimaryExpression	'#'		8462449	0					
ANR	8464922	CompoundStatement		452:60:20547:20547	8462449	1					
ANR	8464923	ExpressionStatement	"dmprintf ( pmi -> memory , ""Usage for -s is -s<option>=<string>\\n"" )"	1203:24:44094:44189	8462449	0	True				
ANR	8464924	CallExpression	"dmprintf ( pmi -> memory , ""Usage for -s is -s<option>=<string>\\n"" )"		8462449	0					
ANR	8464925	Callee	dmprintf		8462449	0					
ANR	8464926	Identifier	dmprintf		8462449	0					
ANR	8464927	ArgumentList	pmi -> memory		8462449	1					
ANR	8464928	Argument	pmi -> memory		8462449	0					
ANR	8464929	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8464930	Identifier	pmi		8462449	0					
ANR	8464931	Identifier	memory		8462449	1					
ANR	8464932	Argument	"""Usage for -s is -s<option>=<string>\\n"""		8462449	1					
ANR	8464933	PrimaryExpression	"""Usage for -s is -s<option>=<string>\\n"""		8462449	0					
ANR	8464934	ReturnStatement	return - 1 ;	1205:24:44215:44224	8462449	1	True				
ANR	8464935	UnaryOperationExpression	- 1		8462449	0					
ANR	8464936	UnaryOperator	-		8462449	0					
ANR	8464937	PrimaryExpression	1		8462449	1					
ANR	8464938	ExpressionStatement	value = eqp + 1	1207:20:44268:44283	8462449	5	True				
ANR	8464939	AssignmentExpression	value = eqp + 1		8462449	0		=			
ANR	8464940	Identifier	value		8462449	0					
ANR	8464941	AdditiveExpression	eqp + 1		8462449	1		+			
ANR	8464942	Identifier	eqp		8462449	0					
ANR	8464943	PrimaryExpression	1		8462449	1					
ANR	8464944	IfStatement	"if ( ! strncmp ( arg , ""DEVICE"" , 6 ) )"		8462449	6					
ANR	8464945	Condition	"! strncmp ( arg , ""DEVICE"" , 6 )"	1208:24:44309:44334	8462449	0	True				
ANR	8464946	UnaryOperationExpression	"! strncmp ( arg , ""DEVICE"" , 6 )"		8462449	0					
ANR	8464947	UnaryOperator	!		8462449	0					
ANR	8464948	CallExpression	"strncmp ( arg , ""DEVICE"" , 6 )"		8462449	1					
ANR	8464949	Callee	strncmp		8462449	0					
ANR	8464950	Identifier	strncmp		8462449	0					
ANR	8464951	ArgumentList	arg		8462449	1					
ANR	8464952	Argument	arg		8462449	0					
ANR	8464953	Identifier	arg		8462449	0					
ANR	8464954	Argument	"""DEVICE"""		8462449	1					
ANR	8464955	PrimaryExpression	"""DEVICE"""		8462449	0					
ANR	8464956	Argument	6		8462449	2					
ANR	8464957	PrimaryExpression	6		8462449	0					
ANR	8464958	CompoundStatement		458:52:20816:20816	8462449	1					
ANR	8464959	ExpressionStatement	"code = pl_top_create_device ( pmi , get_device_index ( pmi -> memory , value ) , false )"	1209:24:44363:44699	8462449	0	True				
ANR	8464960	AssignmentExpression	"code = pl_top_create_device ( pmi , get_device_index ( pmi -> memory , value ) , false )"		8462449	0		=			
ANR	8464961	Identifier	code		8462449	0					
ANR	8464962	CallExpression	"pl_top_create_device ( pmi , get_device_index ( pmi -> memory , value ) , false )"		8462449	1					
ANR	8464963	Callee	pl_top_create_device		8462449	0					
ANR	8464964	Identifier	pl_top_create_device		8462449	0					
ANR	8464965	ArgumentList	pmi		8462449	1					
ANR	8464966	Argument	pmi		8462449	0					
ANR	8464967	Identifier	pmi		8462449	0					
ANR	8464968	Argument	"get_device_index ( pmi -> memory , value )"		8462449	1					
ANR	8464969	CallExpression	"get_device_index ( pmi -> memory , value )"		8462449	0					
ANR	8464970	Callee	get_device_index		8462449	0					
ANR	8464971	Identifier	get_device_index		8462449	0					
ANR	8464972	ArgumentList	pmi -> memory		8462449	1					
ANR	8464973	Argument	pmi -> memory		8462449	0					
ANR	8464974	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8464975	Identifier	pmi		8462449	0					
ANR	8464976	Identifier	memory		8462449	1					
ANR	8464977	Argument	value		8462449	1					
ANR	8464978	Identifier	value		8462449	0					
ANR	8464979	Argument	false		8462449	2					
ANR	8464980	Identifier	false		8462449	0					
ANR	8464981	ElseStatement	else		8462449	0					
ANR	8464982	IfStatement	"if ( ! strncmp ( arg , ""DefaultGrayProfile"" , strlen ( ""DefaultGrayProfile"" ) ) )"		8462449	0					
ANR	8464983	Condition	"! strncmp ( arg , ""DefaultGrayProfile"" , strlen ( ""DefaultGrayProfile"" ) )"	1217:28:44810:44932	8462449	0	True				
ANR	8464984	UnaryOperationExpression	"! strncmp ( arg , ""DefaultGrayProfile"" , strlen ( ""DefaultGrayProfile"" ) )"		8462449	0					
ANR	8464985	UnaryOperator	!		8462449	0					
ANR	8464986	CallExpression	"strncmp ( arg , ""DefaultGrayProfile"" , strlen ( ""DefaultGrayProfile"" ) )"		8462449	1					
ANR	8464987	Callee	strncmp		8462449	0					
ANR	8464988	Identifier	strncmp		8462449	0					
ANR	8464989	ArgumentList	arg		8462449	1					
ANR	8464990	Argument	arg		8462449	0					
ANR	8464991	Identifier	arg		8462449	0					
ANR	8464992	Argument	"""DefaultGrayProfile"""		8462449	1					
ANR	8464993	PrimaryExpression	"""DefaultGrayProfile"""		8462449	0					
ANR	8464994	Argument	"strlen ( ""DefaultGrayProfile"" )"		8462449	2					
ANR	8464995	CallExpression	"strlen ( ""DefaultGrayProfile"" )"		8462449	0					
ANR	8464996	Callee	strlen		8462449	0					
ANR	8464997	Identifier	strlen		8462449	0					
ANR	8464998	ArgumentList	"""DefaultGrayProfile"""		8462449	1					
ANR	8464999	Argument	"""DefaultGrayProfile"""		8462449	0					
ANR	8465000	PrimaryExpression	"""DefaultGrayProfile"""		8462449	0					
ANR	8465001	CompoundStatement		469:60:21414:21414	8462449	1					
ANR	8465002	ExpressionStatement	"pmi -> pdefault_gray_icc = arg_copy ( value , pmi -> memory )"	1220:24:44961:45014	8462449	0	True				
ANR	8465003	AssignmentExpression	"pmi -> pdefault_gray_icc = arg_copy ( value , pmi -> memory )"		8462449	0		=			
ANR	8465004	PtrMemberAccess	pmi -> pdefault_gray_icc		8462449	0					
ANR	8465005	Identifier	pmi		8462449	0					
ANR	8465006	Identifier	pdefault_gray_icc		8462449	1					
ANR	8465007	CallExpression	"arg_copy ( value , pmi -> memory )"		8462449	1					
ANR	8465008	Callee	arg_copy		8462449	0					
ANR	8465009	Identifier	arg_copy		8462449	0					
ANR	8465010	ArgumentList	value		8462449	1					
ANR	8465011	Argument	value		8462449	0					
ANR	8465012	Identifier	value		8462449	0					
ANR	8465013	Argument	pmi -> memory		8462449	1					
ANR	8465014	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8465015	Identifier	pmi		8462449	0					
ANR	8465016	Identifier	memory		8462449	1					
ANR	8465017	ElseStatement	else		8462449	0					
ANR	8465018	IfStatement	"if ( ! strncmp ( arg , ""DefaultRGBProfile"" , strlen ( ""DefaultRGBProfile"" ) ) )"		8462449	0					
ANR	8465019	Condition	"! strncmp ( arg , ""DefaultRGBProfile"" , strlen ( ""DefaultRGBProfile"" ) )"	1222:28:45071:45191	8462449	0	True				
ANR	8465020	UnaryOperationExpression	"! strncmp ( arg , ""DefaultRGBProfile"" , strlen ( ""DefaultRGBProfile"" ) )"		8462449	0					
ANR	8465021	UnaryOperator	!		8462449	0					
ANR	8465022	CallExpression	"strncmp ( arg , ""DefaultRGBProfile"" , strlen ( ""DefaultRGBProfile"" ) )"		8462449	1					
ANR	8465023	Callee	strncmp		8462449	0					
ANR	8465024	Identifier	strncmp		8462449	0					
ANR	8465025	ArgumentList	arg		8462449	1					
ANR	8465026	Argument	arg		8462449	0					
ANR	8465027	Identifier	arg		8462449	0					
ANR	8465028	Argument	"""DefaultRGBProfile"""		8462449	1					
ANR	8465029	PrimaryExpression	"""DefaultRGBProfile"""		8462449	0					
ANR	8465030	Argument	"strlen ( ""DefaultRGBProfile"" )"		8462449	2					
ANR	8465031	CallExpression	"strlen ( ""DefaultRGBProfile"" )"		8462449	0					
ANR	8465032	Callee	strlen		8462449	0					
ANR	8465033	Identifier	strlen		8462449	0					
ANR	8465034	ArgumentList	"""DefaultRGBProfile"""		8462449	1					
ANR	8465035	Argument	"""DefaultRGBProfile"""		8462449	0					
ANR	8465036	PrimaryExpression	"""DefaultRGBProfile"""		8462449	0					
ANR	8465037	CompoundStatement		474:59:21673:21673	8462449	1					
ANR	8465038	ExpressionStatement	"pmi -> pdefault_rgb_icc = arg_copy ( value , pmi -> memory )"	1225:24:45220:45272	8462449	0	True				
ANR	8465039	AssignmentExpression	"pmi -> pdefault_rgb_icc = arg_copy ( value , pmi -> memory )"		8462449	0		=			
ANR	8465040	PtrMemberAccess	pmi -> pdefault_rgb_icc		8462449	0					
ANR	8465041	Identifier	pmi		8462449	0					
ANR	8465042	Identifier	pdefault_rgb_icc		8462449	1					
ANR	8465043	CallExpression	"arg_copy ( value , pmi -> memory )"		8462449	1					
ANR	8465044	Callee	arg_copy		8462449	0					
ANR	8465045	Identifier	arg_copy		8462449	0					
ANR	8465046	ArgumentList	value		8462449	1					
ANR	8465047	Argument	value		8462449	0					
ANR	8465048	Identifier	value		8462449	0					
ANR	8465049	Argument	pmi -> memory		8462449	1					
ANR	8465050	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8465051	Identifier	pmi		8462449	0					
ANR	8465052	Identifier	memory		8462449	1					
ANR	8465053	ElseStatement	else		8462449	0					
ANR	8465054	IfStatement	"if ( ! strncmp ( arg , ""DefaultCMYKProfile"" , strlen ( ""DefaultCMYKProfile"" ) ) )"		8462449	0					
ANR	8465055	Condition	"! strncmp ( arg , ""DefaultCMYKProfile"" , strlen ( ""DefaultCMYKProfile"" ) )"	1227:28:45329:45451	8462449	0	True				
ANR	8465056	UnaryOperationExpression	"! strncmp ( arg , ""DefaultCMYKProfile"" , strlen ( ""DefaultCMYKProfile"" ) )"		8462449	0					
ANR	8465057	UnaryOperator	!		8462449	0					
ANR	8465058	CallExpression	"strncmp ( arg , ""DefaultCMYKProfile"" , strlen ( ""DefaultCMYKProfile"" ) )"		8462449	1					
ANR	8465059	Callee	strncmp		8462449	0					
ANR	8465060	Identifier	strncmp		8462449	0					
ANR	8465061	ArgumentList	arg		8462449	1					
ANR	8465062	Argument	arg		8462449	0					
ANR	8465063	Identifier	arg		8462449	0					
ANR	8465064	Argument	"""DefaultCMYKProfile"""		8462449	1					
ANR	8465065	PrimaryExpression	"""DefaultCMYKProfile"""		8462449	0					
ANR	8465066	Argument	"strlen ( ""DefaultCMYKProfile"" )"		8462449	2					
ANR	8465067	CallExpression	"strlen ( ""DefaultCMYKProfile"" )"		8462449	0					
ANR	8465068	Callee	strlen		8462449	0					
ANR	8465069	Identifier	strlen		8462449	0					
ANR	8465070	ArgumentList	"""DefaultCMYKProfile"""		8462449	1					
ANR	8465071	Argument	"""DefaultCMYKProfile"""		8462449	0					
ANR	8465072	PrimaryExpression	"""DefaultCMYKProfile"""		8462449	0					
ANR	8465073	CompoundStatement		479:60:21933:21933	8462449	1					
ANR	8465074	ExpressionStatement	"pmi -> pdefault_cmyk_icc = arg_copy ( value , pmi -> memory )"	1230:24:45480:45533	8462449	0	True				
ANR	8465075	AssignmentExpression	"pmi -> pdefault_cmyk_icc = arg_copy ( value , pmi -> memory )"		8462449	0		=			
ANR	8465076	PtrMemberAccess	pmi -> pdefault_cmyk_icc		8462449	0					
ANR	8465077	Identifier	pmi		8462449	0					
ANR	8465078	Identifier	pdefault_cmyk_icc		8462449	1					
ANR	8465079	CallExpression	"arg_copy ( value , pmi -> memory )"		8462449	1					
ANR	8465080	Callee	arg_copy		8462449	0					
ANR	8465081	Identifier	arg_copy		8462449	0					
ANR	8465082	ArgumentList	value		8462449	1					
ANR	8465083	Argument	value		8462449	0					
ANR	8465084	Identifier	value		8462449	0					
ANR	8465085	Argument	pmi -> memory		8462449	1					
ANR	8465086	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8465087	Identifier	pmi		8462449	0					
ANR	8465088	Identifier	memory		8462449	1					
ANR	8465089	ElseStatement	else		8462449	0					
ANR	8465090	IfStatement	"if ( ! strncmp ( arg , ""ICCProfileDir"" , strlen ( ""ICCProfileDir"" ) ) )"		8462449	0					
ANR	8465091	Condition	"! strncmp ( arg , ""ICCProfileDir"" , strlen ( ""ICCProfileDir"" ) )"	1232:28:45590:45673	8462449	0	True				
ANR	8465092	UnaryOperationExpression	"! strncmp ( arg , ""ICCProfileDir"" , strlen ( ""ICCProfileDir"" ) )"		8462449	0					
ANR	8465093	UnaryOperator	!		8462449	0					
ANR	8465094	CallExpression	"strncmp ( arg , ""ICCProfileDir"" , strlen ( ""ICCProfileDir"" ) )"		8462449	1					
ANR	8465095	Callee	strncmp		8462449	0					
ANR	8465096	Identifier	strncmp		8462449	0					
ANR	8465097	ArgumentList	arg		8462449	1					
ANR	8465098	Argument	arg		8462449	0					
ANR	8465099	Identifier	arg		8462449	0					
ANR	8465100	Argument	"""ICCProfileDir"""		8462449	1					
ANR	8465101	PrimaryExpression	"""ICCProfileDir"""		8462449	0					
ANR	8465102	Argument	"strlen ( ""ICCProfileDir"" )"		8462449	2					
ANR	8465103	CallExpression	"strlen ( ""ICCProfileDir"" )"		8462449	0					
ANR	8465104	Callee	strlen		8462449	0					
ANR	8465105	Identifier	strlen		8462449	0					
ANR	8465106	ArgumentList	"""ICCProfileDir"""		8462449	1					
ANR	8465107	Argument	"""ICCProfileDir"""		8462449	0					
ANR	8465108	PrimaryExpression	"""ICCProfileDir"""		8462449	0					
ANR	8465109	CompoundStatement		483:77:22155:22155	8462449	1					
ANR	8465110	ExpressionStatement	"pmi -> piccdir = arg_copy ( value , pmi -> memory )"	1234:24:45702:45745	8462449	0	True				
ANR	8465111	AssignmentExpression	"pmi -> piccdir = arg_copy ( value , pmi -> memory )"		8462449	0		=			
ANR	8465112	PtrMemberAccess	pmi -> piccdir		8462449	0					
ANR	8465113	Identifier	pmi		8462449	0					
ANR	8465114	Identifier	piccdir		8462449	1					
ANR	8465115	CallExpression	"arg_copy ( value , pmi -> memory )"		8462449	1					
ANR	8465116	Callee	arg_copy		8462449	0					
ANR	8465117	Identifier	arg_copy		8462449	0					
ANR	8465118	ArgumentList	value		8462449	1					
ANR	8465119	Argument	value		8462449	0					
ANR	8465120	Identifier	value		8462449	0					
ANR	8465121	Argument	pmi -> memory		8462449	1					
ANR	8465122	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8465123	Identifier	pmi		8462449	0					
ANR	8465124	Identifier	memory		8462449	1					
ANR	8465125	ElseStatement	else		8462449	0					
ANR	8465126	CompoundStatement		486:24:22279:22295	8462449	0					
ANR	8465127	IdentifierDeclStatement	char buffer [ 128 ] ;	1236:24:45800:45816	8462449	0	True				
ANR	8465128	IdentifierDecl	buffer [ 128 ]		8462449	0					
ANR	8465129	IdentifierDeclType	char [ 128 ]		8462449	0					
ANR	8465130	Identifier	buffer		8462449	1					
ANR	8465131	PrimaryExpression	128		8462449	2					
ANR	8465132	ExpressionStatement	"strncpy ( buffer , arg , eqp - arg )"	1238:24:45843:45874	8462449	1	True				
ANR	8465133	CallExpression	"strncpy ( buffer , arg , eqp - arg )"		8462449	0					
ANR	8465134	Callee	strncpy		8462449	0					
ANR	8465135	Identifier	strncpy		8462449	0					
ANR	8465136	ArgumentList	buffer		8462449	1					
ANR	8465137	Argument	buffer		8462449	0					
ANR	8465138	Identifier	buffer		8462449	0					
ANR	8465139	Argument	arg		8462449	1					
ANR	8465140	Identifier	arg		8462449	0					
ANR	8465141	Argument	eqp - arg		8462449	2					
ANR	8465142	AdditiveExpression	eqp - arg		8462449	0		-			
ANR	8465143	Identifier	eqp		8462449	0					
ANR	8465144	Identifier	arg		8462449	1					
ANR	8465145	ExpressionStatement	buffer [ eqp - arg ] = '\\0'	1239:24:45900:45924	8462449	2	True				
ANR	8465146	AssignmentExpression	buffer [ eqp - arg ] = '\\0'		8462449	0		=			
ANR	8465147	ArrayIndexing	buffer [ eqp - arg ]		8462449	0					
ANR	8465148	Identifier	buffer		8462449	0					
ANR	8465149	AdditiveExpression	eqp - arg		8462449	1		-			
ANR	8465150	Identifier	eqp		8462449	0					
ANR	8465151	Identifier	arg		8462449	1					
ANR	8465152	PrimaryExpression	'\\0'		8462449	1					
ANR	8465153	ExpressionStatement	"param_string_from_transient_string ( str , value )"	1240:24:45950:45996	8462449	3	True				
ANR	8465154	CallExpression	"param_string_from_transient_string ( str , value )"		8462449	0					
ANR	8465155	Callee	param_string_from_transient_string		8462449	0					
ANR	8465156	Identifier	param_string_from_transient_string		8462449	0					
ANR	8465157	ArgumentList	str		8462449	1					
ANR	8465158	Argument	str		8462449	0					
ANR	8465159	Identifier	str		8462449	0					
ANR	8465160	Argument	value		8462449	1					
ANR	8465161	Identifier	value		8462449	0					
ANR	8465162	ExpressionStatement	"code = param_write_string ( ( gs_param_list * ) params , buffer , & str )"	1241:24:46022:46162	8462449	4	True				
ANR	8465163	AssignmentExpression	"code = param_write_string ( ( gs_param_list * ) params , buffer , & str )"		8462449	0		=			
ANR	8465164	Identifier	code		8462449	0					
ANR	8465165	CallExpression	"param_write_string ( ( gs_param_list * ) params , buffer , & str )"		8462449	1					
ANR	8465166	Callee	param_write_string		8462449	0					
ANR	8465167	Identifier	param_write_string		8462449	0					
ANR	8465168	ArgumentList	( gs_param_list * ) params		8462449	1					
ANR	8465169	Argument	( gs_param_list * ) params		8462449	0					
ANR	8465170	CastExpression	( gs_param_list * ) params		8462449	0					
ANR	8465171	CastTarget	gs_param_list *		8462449	0					
ANR	8465172	Identifier	params		8462449	1					
ANR	8465173	Argument	buffer		8462449	1					
ANR	8465174	Identifier	buffer		8462449	0					
ANR	8465175	Argument	& str		8462449	2					
ANR	8465176	UnaryOperationExpression	& str		8462449	0					
ANR	8465177	UnaryOperator	&		8462449	0					
ANR	8465178	Identifier	str		8462449	1					
ANR	8465179	BreakStatement	break ;	1246:16:46220:46225	8462449	46	True				
ANR	8465180	Label	case 'Z' :	1247:12:46239:46247	8462449	47	True				
ANR	8465181	ExpressionStatement	"set_debug_flags ( arg , gs_debug )"	1248:16:46265:46295	8462449	48	True				
ANR	8465182	CallExpression	"set_debug_flags ( arg , gs_debug )"		8462449	0					
ANR	8465183	Callee	set_debug_flags		8462449	0					
ANR	8465184	Identifier	set_debug_flags		8462449	0					
ANR	8465185	ArgumentList	arg		8462449	1					
ANR	8465186	Argument	arg		8462449	0					
ANR	8465187	Identifier	arg		8462449	0					
ANR	8465188	Argument	gs_debug		8462449	1					
ANR	8465189	Identifier	gs_debug		8462449	0					
ANR	8465190	BreakStatement	break ;	1249:16:46313:46318	8462449	49	True				
ANR	8465191	IfStatement	if ( code < 0 )		8462449	3					
ANR	8465192	Condition	code < 0	1251:12:46342:46349	8462449	0	True				
ANR	8465193	RelationalExpression	code < 0		8462449	0		<			
ANR	8465194	Identifier	code		8462449	0					
ANR	8465195	PrimaryExpression	0		8462449	1					
ANR	8465196	ReturnStatement	return code ;	1252:12:46364:46375	8462449	1	True				
ANR	8465197	Identifier	code		8462449	0					
ANR	8465198	Label	out :	1254:2:46385:46388	8462449	6	True				
ANR	8465199	Identifier	out		8462449	0					
ANR	8465200	IfStatement	if ( help )		8462449	7					
ANR	8465201	Condition	help	1254:10:46393:46396	8462449	0	True				
ANR	8465202	Identifier	help		8462449	0					
ANR	8465203	CompoundStatement		504:16:22878:22878	8462449	1					
ANR	8465204	ExpressionStatement	arg_finit ( pal )	1255:8:46409:46423	8462449	0	True				
ANR	8465205	CallExpression	arg_finit ( pal )		8462449	0					
ANR	8465206	Callee	arg_finit		8462449	0					
ANR	8465207	Identifier	arg_finit		8462449	0					
ANR	8465208	ArgumentList	pal		8462449	1					
ANR	8465209	Argument	pal		8462449	0					
ANR	8465210	Identifier	pal		8462449	0					
ANR	8465211	ExpressionStatement	gs_c_param_list_release ( params )	1256:8:46433:46464	8462449	1	True				
ANR	8465212	CallExpression	gs_c_param_list_release ( params )		8462449	0					
ANR	8465213	Callee	gs_c_param_list_release		8462449	0					
ANR	8465214	Identifier	gs_c_param_list_release		8462449	0					
ANR	8465215	ArgumentList	params		8462449	1					
ANR	8465216	Argument	params		8462449	0					
ANR	8465217	Identifier	params		8462449	0					
ANR	8465218	ReturnStatement	return - 1 ;	1257:8:46474:46483	8462449	2	True				
ANR	8465219	UnaryOperationExpression	- 1		8462449	0					
ANR	8465220	UnaryOperator	-		8462449	0					
ANR	8465221	PrimaryExpression	1		8462449	1					
ANR	8465222	CompoundStatement		515:8:23263:23280	8462449	8					
ANR	8465223	IdentifierDeclStatement	int num_spots = 0 ;	1265:8:46784:46801	8462449	0	True				
ANR	8465224	IdentifierDecl	num_spots = 0		8462449	0					
ANR	8465225	IdentifierDeclType	int		8462449	0					
ANR	8465226	Identifier	num_spots		8462449	1					
ANR	8465227	AssignmentExpression	num_spots = 0		8462449	2		=			
ANR	8465228	Identifier	num_spots		8462449	0					
ANR	8465229	PrimaryExpression	0		8462449	1					
ANR	8465230	ExpressionStatement	"code = param_write_int ( ( gs_param_list * ) params , ""PageSpotColors"" , & ( num_spots ) )"	1266:8:46811:46890	8462449	1	True				
ANR	8465231	AssignmentExpression	"code = param_write_int ( ( gs_param_list * ) params , ""PageSpotColors"" , & ( num_spots ) )"		8462449	0		=			
ANR	8465232	Identifier	code		8462449	0					
ANR	8465233	CallExpression	"param_write_int ( ( gs_param_list * ) params , ""PageSpotColors"" , & ( num_spots ) )"		8462449	1					
ANR	8465234	Callee	param_write_int		8462449	0					
ANR	8465235	Identifier	param_write_int		8462449	0					
ANR	8465236	ArgumentList	( gs_param_list * ) params		8462449	1					
ANR	8465237	Argument	( gs_param_list * ) params		8462449	0					
ANR	8465238	CastExpression	( gs_param_list * ) params		8462449	0					
ANR	8465239	CastTarget	gs_param_list *		8462449	0					
ANR	8465240	Identifier	params		8462449	1					
ANR	8465241	Argument	"""PageSpotColors"""		8462449	1					
ANR	8465242	PrimaryExpression	"""PageSpotColors"""		8462449	0					
ANR	8465243	Argument	& ( num_spots )		8462449	2					
ANR	8465244	UnaryOperationExpression	& ( num_spots )		8462449	0					
ANR	8465245	UnaryOperator	&		8462449	0					
ANR	8465246	Identifier	num_spots		8462449	1					
ANR	8465247	IfStatement	if ( code < 0 )		8462449	2					
ANR	8465248	Condition	code < 0	1267:12:46904:46911	8462449	0	True				
ANR	8465249	RelationalExpression	code < 0		8462449	0		<			
ANR	8465250	Identifier	code		8462449	0					
ANR	8465251	PrimaryExpression	0		8462449	1					
ANR	8465252	ReturnStatement	return code ;	1268:12:46926:46937	8462449	1	True				
ANR	8465253	Identifier	code		8462449	0					
ANR	8465254	ExpressionStatement	gs_c_param_list_read ( params )	1271:4:46950:46978	8462449	9	True				
ANR	8465255	CallExpression	gs_c_param_list_read ( params )		8462449	0					
ANR	8465256	Callee	gs_c_param_list_read		8462449	0					
ANR	8465257	Identifier	gs_c_param_list_read		8462449	0					
ANR	8465258	ArgumentList	params		8462449	1					
ANR	8465259	Argument	params		8462449	0					
ANR	8465260	Identifier	params		8462449	0					
ANR	8465261	ExpressionStatement	"code = pl_top_create_device ( pmi , - 1 , true )"	1272:4:46984:47026	8462449	10	True				
ANR	8465262	AssignmentExpression	"code = pl_top_create_device ( pmi , - 1 , true )"		8462449	0		=			
ANR	8465263	Identifier	code		8462449	0					
ANR	8465264	CallExpression	"pl_top_create_device ( pmi , - 1 , true )"		8462449	1					
ANR	8465265	Callee	pl_top_create_device		8462449	0					
ANR	8465266	Identifier	pl_top_create_device		8462449	0					
ANR	8465267	ArgumentList	pmi		8462449	1					
ANR	8465268	Argument	pmi		8462449	0					
ANR	8465269	Identifier	pmi		8462449	0					
ANR	8465270	Argument	- 1		8462449	1					
ANR	8465271	UnaryOperationExpression	- 1		8462449	0					
ANR	8465272	UnaryOperator	-		8462449	0					
ANR	8465273	PrimaryExpression	1		8462449	1					
ANR	8465274	Argument	true		8462449	2					
ANR	8465275	Identifier	true		8462449	0					
ANR	8465276	IfStatement	if ( code < 0 )		8462449	11					
ANR	8465277	Condition	code < 0	1273:8:47074:47081	8462449	0	True				
ANR	8465278	RelationalExpression	code < 0		8462449	0		<			
ANR	8465279	Identifier	code		8462449	0					
ANR	8465280	PrimaryExpression	0		8462449	1					
ANR	8465281	ReturnStatement	return code ;	1274:8:47092:47103	8462449	1	True				
ANR	8465282	Identifier	code		8462449	0					
ANR	8465283	ExpressionStatement	"code = gs_putdeviceparams ( pmi -> device , ( gs_param_list * ) params )"	1276:4:47110:47174	8462449	12	True				
ANR	8465284	AssignmentExpression	"code = gs_putdeviceparams ( pmi -> device , ( gs_param_list * ) params )"		8462449	0		=			
ANR	8465285	Identifier	code		8462449	0					
ANR	8465286	CallExpression	"gs_putdeviceparams ( pmi -> device , ( gs_param_list * ) params )"		8462449	1					
ANR	8465287	Callee	gs_putdeviceparams		8462449	0					
ANR	8465288	Identifier	gs_putdeviceparams		8462449	0					
ANR	8465289	ArgumentList	pmi -> device		8462449	1					
ANR	8465290	Argument	pmi -> device		8462449	0					
ANR	8465291	PtrMemberAccess	pmi -> device		8462449	0					
ANR	8465292	Identifier	pmi		8462449	0					
ANR	8465293	Identifier	device		8462449	1					
ANR	8465294	Argument	( gs_param_list * ) params		8462449	1					
ANR	8465295	CastExpression	( gs_param_list * ) params		8462449	0					
ANR	8465296	CastTarget	gs_param_list *		8462449	0					
ANR	8465297	Identifier	params		8462449	1					
ANR	8465298	IfStatement	if ( code < 0 )		8462449	13					
ANR	8465299	Condition	code < 0	1277:8:47184:47191	8462449	0	True				
ANR	8465300	RelationalExpression	code < 0		8462449	0		<			
ANR	8465301	Identifier	code		8462449	0					
ANR	8465302	PrimaryExpression	0		8462449	1					
ANR	8465303	ReturnStatement	return code ;	1278:8:47202:47213	8462449	1	True				
ANR	8465304	Identifier	code		8462449	0					
ANR	8465305	ExpressionStatement	code = gs_opendevice ( pmi -> device )	1280:4:47220:47253	8462449	14	True				
ANR	8465306	AssignmentExpression	code = gs_opendevice ( pmi -> device )		8462449	0		=			
ANR	8465307	Identifier	code		8462449	0					
ANR	8465308	CallExpression	gs_opendevice ( pmi -> device )		8462449	1					
ANR	8465309	Callee	gs_opendevice		8462449	0					
ANR	8465310	Identifier	gs_opendevice		8462449	0					
ANR	8465311	ArgumentList	pmi -> device		8462449	1					
ANR	8465312	Argument	pmi -> device		8462449	0					
ANR	8465313	PtrMemberAccess	pmi -> device		8462449	0					
ANR	8465314	Identifier	pmi		8462449	0					
ANR	8465315	Identifier	device		8462449	1					
ANR	8465316	IfStatement	if ( code < 0 )		8462449	15					
ANR	8465317	Condition	code < 0	1281:8:47263:47270	8462449	0	True				
ANR	8465318	RelationalExpression	code < 0		8462449	0		<			
ANR	8465319	Identifier	code		8462449	0					
ANR	8465320	PrimaryExpression	0		8462449	1					
ANR	8465321	ReturnStatement	return code ;	1282:8:47281:47292	8462449	1	True				
ANR	8465322	Identifier	code		8462449	0					
ANR	8465323	IfStatement	if ( ! arg )		8462449	16					
ANR	8465324	Condition	! arg	1285:8:47342:47345	8462449	0	True				
ANR	8465325	UnaryOperationExpression	! arg		8462449	0					
ANR	8465326	UnaryOperator	!		8462449	0					
ANR	8465327	Identifier	arg		8462449	1					
ANR	8465328	ReturnStatement	return 0 ;	1286:8:47356:47364	8462449	1	True				
ANR	8465329	PrimaryExpression	0		8462449	0					
ANR	8465330	DoStatement	do		8462449	17					
ANR	8465331	CompoundStatement		538:7:23853:23853	8462449	0					
ANR	8465332	ExpressionStatement	"code = pl_main_run_file ( pmi , arg )"	1289:8:47384:47417	8462449	0	True				
ANR	8465333	AssignmentExpression	"code = pl_main_run_file ( pmi , arg )"		8462449	0		=			
ANR	8465334	Identifier	code		8462449	0					
ANR	8465335	CallExpression	"pl_main_run_file ( pmi , arg )"		8462449	1					
ANR	8465336	Callee	pl_main_run_file		8462449	0					
ANR	8465337	Identifier	pl_main_run_file		8462449	0					
ANR	8465338	ArgumentList	pmi		8462449	1					
ANR	8465339	Argument	pmi		8462449	0					
ANR	8465340	Identifier	pmi		8462449	0					
ANR	8465341	Argument	arg		8462449	1					
ANR	8465342	Identifier	arg		8462449	0					
ANR	8465343	IfStatement	if ( code < 0 )		8462449	1					
ANR	8465344	Condition	code < 0	1290:12:47431:47438	8462449	0	True				
ANR	8465345	RelationalExpression	code < 0		8462449	0		<			
ANR	8465346	Identifier	code		8462449	0					
ANR	8465347	PrimaryExpression	0		8462449	1					
ANR	8465348	ReturnStatement	return code ;	1291:12:47453:47464	8462449	1	True				
ANR	8465349	Identifier	code		8462449	0					
ANR	8465350	Condition	"( code = arg_next ( pal , ( const char * * ) & arg , pmi -> memory ) ) > 0"	1292:13:47479:47538	8462449	1	True				
ANR	8465351	RelationalExpression	"( code = arg_next ( pal , ( const char * * ) & arg , pmi -> memory ) ) > 0"		8462449	0		>			
ANR	8465352	AssignmentExpression	"code = arg_next ( pal , ( const char * * ) & arg , pmi -> memory )"		8462449	0		=			
ANR	8465353	Identifier	code		8462449	0					
ANR	8465354	CallExpression	"arg_next ( pal , ( const char * * ) & arg , pmi -> memory )"		8462449	1					
ANR	8465355	Callee	arg_next		8462449	0					
ANR	8465356	Identifier	arg_next		8462449	0					
ANR	8465357	ArgumentList	pal		8462449	1					
ANR	8465358	Argument	pal		8462449	0					
ANR	8465359	Identifier	pal		8462449	0					
ANR	8465360	Argument	( const char * * ) & arg		8462449	1					
ANR	8465361	CastExpression	( const char * * ) & arg		8462449	0					
ANR	8465362	CastTarget	const char * *		8462449	0					
ANR	8465363	UnaryOperationExpression	& arg		8462449	1					
ANR	8465364	UnaryOperator	&		8462449	0					
ANR	8465365	Identifier	arg		8462449	1					
ANR	8465366	Argument	pmi -> memory		8462449	2					
ANR	8465367	PtrMemberAccess	pmi -> memory		8462449	0					
ANR	8465368	Identifier	pmi		8462449	0					
ANR	8465369	Identifier	memory		8462449	1					
ANR	8465370	PrimaryExpression	0		8462449	1					
ANR	8465371	ReturnStatement	return code ;	1294:4:47547:47558	8462449	18	True				
ANR	8465372	Identifier	code		8462449	0					
ANR	8465373	ReturnType	static int		8462449	1					
ANR	8465374	Identifier	pl_main_process_options		8462449	2					
ANR	8465375	ParameterList	"pl_main_instance_t * pmi , arg_list * pal , pl_interp_implementation_t * pjli"		8462449	3					
ANR	8465376	Parameter	pl_main_instance_t * pmi	749:24:23419:23442	8462449	0	True				
ANR	8465377	ParameterType	pl_main_instance_t *		8462449	0					
ANR	8465378	Identifier	pmi		8462449	1					
ANR	8465379	Parameter	arg_list * pal	749:50:23445:23458	8462449	1	True				
ANR	8465380	ParameterType	arg_list *		8462449	0					
ANR	8465381	Identifier	pal		8462449	1					
ANR	8465382	Parameter	pl_interp_implementation_t * pjli	750:24:23485:23517	8462449	2	True				
ANR	8465383	ParameterType	pl_interp_implementation_t *		8462449	0					
ANR	8465384	Identifier	pjli		8462449	1					
ANR	8465385	CFGEntryNode	ENTRY		8462449		True				
ANR	8465386	CFGExitNode	EXIT		8462449		True				
ANR	8465387	Symbol	pmi -> page_set_on_command_line		8462449						
ANR	8465388	Symbol	* index		8462449						
ANR	8465389	Symbol	gs_opendevice		8462449						
ANR	8465390	Symbol	dev_spec_op		8462449						
ANR	8465391	Symbol	strchr		8462449						
ANR	8465392	Symbol	pmi -> implementation		8462449						
ANR	8465393	Symbol	pmi -> res_set_on_command_line		8462449						
ANR	8465394	Symbol	GX_CINFO_POLARITY_ADDITIVE		8462449						
ANR	8465395	Symbol	geom		8462449						
ANR	8465396	Symbol	pmi		8462449						
ANR	8465397	Symbol	& number		8462449						
ANR	8465398	Symbol	& str		8462449						
ANR	8465399	Symbol	strncmp		8462449						
ANR	8465400	Symbol	* eqp		8462449						
ANR	8465401	Symbol	number		8462449						
ANR	8465402	Symbol	ia		8462449						
ANR	8465403	Symbol	ia . size		8462449						
ANR	8465404	Symbol	pmi -> saved_pages_test_mode		8462449						
ANR	8465405	Symbol	* gs_debug		8462449						
ANR	8465406	Symbol	param_write_string		8462449						
ANR	8465407	Symbol	gs_memory_chunk_target ( pmi -> memory ) -> non_gc_memory		8462449						
ANR	8465408	Symbol	get_device_index		8462449						
ANR	8465409	Symbol	gxdso_supports_saved_pages		8462449						
ANR	8465410	Symbol	val		8462449						
ANR	8465411	Symbol	& num_spots		8462449						
ANR	8465412	Symbol	* buf		8462449						
ANR	8465413	Symbol	pmi -> device		8462449						
ANR	8465414	Symbol	adef		8462449						
ANR	8465415	Symbol	index		8462449						
ANR	8465416	Symbol	pmi -> pcl_personality		8462449						
ANR	8465417	Symbol	cmyk_white		8462449						
ANR	8465418	Symbol	pmi -> pdefault_gray_icc		8462449						
ANR	8465419	Symbol	params		8462449						
ANR	8465420	Symbol	fill_rectangle		8462449						
ANR	8465421	Symbol	map_rgb_color		8462449						
ANR	8465422	Symbol	param_write_name		8462449						
ANR	8465423	Symbol	pmi -> memory		8462449						
ANR	8465424	Symbol	pdev -> color_info . polarity		8462449						
ANR	8465425	Symbol	str		8462449						
ANR	8465426	Symbol	countof		8462449						
ANR	8465427	Symbol	pl_process		8462449						
ANR	8465428	Symbol	* rawheap		8462449						
ANR	8465429	Symbol	arg_next		8462449						
ANR	8465430	Symbol	& pmi -> error_report		8462449						
ANR	8465431	Symbol	sscanf		8462449						
ANR	8465432	Symbol	pl_characteristics ( impls [ index ] ) -> language		8462449						
ANR	8465433	Symbol	check_for_special_int		8462449						
ANR	8465434	Symbol	rgb_white		8462449						
ANR	8465435	Symbol	pmi -> pjl_from_args		8462449						
ANR	8465436	Symbol	* arg		8462449						
ANR	8465437	Symbol	& base		8462449						
ANR	8465438	Symbol	& ia		8462449						
ANR	8465439	Symbol	eqp		8462449						
ANR	8465440	Symbol	num_spots		8462449						
ANR	8465441	Symbol	gs_memory_chunk_target		8462449						
ANR	8465442	Symbol	ppdev		8462449						
ANR	8465443	Symbol	* val		8462449						
ANR	8465444	Symbol	pmi -> pause		8462449						
ANR	8465445	Symbol	bval		8462449						
ANR	8465446	Symbol	e_ExitLanguage		8462449						
ANR	8465447	Symbol	arg		8462449						
ANR	8465448	Symbol	& cursor		8462449						
ANR	8465449	Symbol	pl_main_run_file		8462449						
ANR	8465450	Symbol	* buffer		8462449						
ANR	8465451	Symbol	gs_putdeviceparams		8462449						
ANR	8465452	Symbol	gx_saved_pages_param_process		8462449						
ANR	8465453	Symbol	sz		8462449						
ANR	8465454	Symbol	i		8462449						
ANR	8465455	Symbol	fa . size		8462449						
ANR	8465456	Symbol	cursor . limit		8462449						
ANR	8465457	Symbol	hwmarg		8462449						
ANR	8465458	Symbol	help		8462449						
ANR	8465459	Symbol	buf		8462449						
ANR	8465460	Symbol	* strlen		8462449						
ANR	8465461	Symbol	check_for_special_str		8462449						
ANR	8465462	Symbol	* pmi		8462449						
ANR	8465463	Symbol	& adef		8462449						
ANR	8465464	Symbol	& pmi -> params		8462449						
ANR	8465465	Symbol	* pdev		8462449						
ANR	8465466	Symbol	* gs_memory_chunk_target		8462449						
ANR	8465467	Symbol	& arg		8462449						
ANR	8465468	Symbol	map_cmyk_color		8462449						
ANR	8465469	Symbol	* impls		8462449						
ANR	8465470	Symbol	check_for_special_float		8462449						
ANR	8465471	Symbol	pdev -> color_info		8462449						
ANR	8465472	Symbol	suffix		8462449						
ANR	8465473	Symbol	pl_characteristics		8462449						
ANR	8465474	Symbol	& maxk		8462449						
ANR	8465475	Symbol	pdev		8462449						
ANR	8465476	Symbol	strlen		8462449						
ANR	8465477	Symbol	gs_debug		8462449						
ANR	8465478	Symbol	pmi -> implementations		8462449						
ANR	8465479	Symbol	pmi -> piccdir		8462449						
ANR	8465480	Symbol	pal		8462449						
ANR	8465481	Symbol	buffer		8462449						
ANR	8465482	Symbol	strcmp		8462449						
ANR	8465483	Symbol	param_write_float		8462449						
ANR	8465484	Symbol	res		8462449						
ANR	8465485	Symbol	NULL		8462449						
ANR	8465486	Symbol	ia . persistent		8462449						
ANR	8465487	Symbol	impls		8462449						
ANR	8465488	Symbol	pdev -> is_open		8462449						
ANR	8465489	Symbol	fa . data		8462449						
ANR	8465490	Symbol	vf		8462449						
ANR	8465491	Symbol	vi		8462449						
ANR	8465492	Symbol	maxk		8462449						
ANR	8465493	Symbol	cursor . ptr		8462449						
ANR	8465494	Symbol	pdev -> width		8462449						
ANR	8465495	Symbol	true		8462449						
ANR	8465496	Symbol	parsed		8462449						
ANR	8465497	Symbol	arg_copy		8462449						
ANR	8465498	Symbol	fa		8462449						
ANR	8465499	Symbol	param_write_float_array		8462449						
ANR	8465500	Symbol	pmi -> pdefault_rgb_icc		8462449						
ANR	8465501	Symbol	cursor		8462449						
ANR	8465502	Symbol	pjli		8462449						
ANR	8465503	Symbol	code		8462449						
ANR	8465504	Symbol	color		8462449						
ANR	8465505	Symbol	* res		8462449						
ANR	8465506	Symbol	pdev -> height		8462449						
ANR	8465507	Symbol	pmi -> pdefault_cmyk_icc		8462449						
ANR	8465508	Symbol	param_write_bool		8462449						
ANR	8465509	Symbol	pl_top_create_device		8462449						
ANR	8465510	Symbol	dev_proc		8462449						
ANR	8465511	Symbol	param_write_int_array		8462449						
ANR	8465512	Symbol	buf_len		8462449						
ANR	8465513	Symbol	pdev -> dname		8462449						
ANR	8465514	Symbol	value		8462449						
ANR	8465515	Symbol	param_write_int		8462449						
ANR	8465516	Symbol	rawheap		8462449						
ANR	8465517	Symbol	& fa		8462449						
ANR	8465518	Symbol	false		8462449						
ANR	8465519	Symbol	* val ++		8462449						
ANR	8465520	Symbol	fa . persistent		8462449						
ANR	8465521	Symbol	parse_floats		8462449						
ANR	8465522	Symbol	& bval		8462449						
ANR	8465523	Symbol	* i		8462449						
ANR	8465524	Symbol	* value		8462449						
ANR	8465525	Symbol	rawheap -> limit		8462449						
ANR	8465526	Symbol	* pl_characteristics		8462449						
ANR	8465527	Symbol	marg		8462449						
ANR	8465528	Symbol	& vf		8462449						
ANR	8465529	Symbol	& vi		8462449						
ANR	8465530	Symbol	base		8462449						
ANR	8465531	Symbol	ia . data		8462449						
ANR	8465532	Function	pl_auto_sense	1300:0:47638:48578							
ANR	8465533	FunctionDef	"pl_auto_sense (pl_main_instance_t * minst , const char * name , int buffer_length)"		8465532	0					
ANR	8465534	CompoundStatement		1302:0:47753:48578	8465532	0					
ANR	8465535	IdentifierDeclStatement	pl_interp_implementation_t * * impls = minst -> implementations ;	1304:4:47836:47895	8465532	0	True				
ANR	8465536	IdentifierDecl	* * impls = minst -> implementations		8465532	0					
ANR	8465537	IdentifierDeclType	pl_interp_implementation_t * *		8465532	0					
ANR	8465538	Identifier	impls		8465532	1					
ANR	8465539	AssignmentExpression	* * impls = minst -> implementations		8465532	2		=			
ANR	8465540	Identifier	impls		8465532	0					
ANR	8465541	PtrMemberAccess	minst -> implementations		8465532	1					
ANR	8465542	Identifier	minst		8465532	0					
ANR	8465543	Identifier	implementations		8465532	1					
ANR	8465544	IdentifierDeclStatement	pl_interp_implementation_t * * impl ;	1305:4:47901:47934	8465532	1	True				
ANR	8465545	IdentifierDecl	* * impl		8465532	0					
ANR	8465546	IdentifierDeclType	pl_interp_implementation_t * *		8465532	0					
ANR	8465547	Identifier	impl		8465532	1					
ANR	8465548	IdentifierDeclStatement	size_t uel_len = strlen ( PJL_UEL ) ;	1306:4:47940:47972	8465532	2	True				
ANR	8465549	IdentifierDecl	uel_len = strlen ( PJL_UEL )		8465532	0					
ANR	8465550	IdentifierDeclType	size_t		8465532	0					
ANR	8465551	Identifier	uel_len		8465532	1					
ANR	8465552	AssignmentExpression	uel_len = strlen ( PJL_UEL )		8465532	2		=			
ANR	8465553	Identifier	uel_len		8465532	0					
ANR	8465554	CallExpression	strlen ( PJL_UEL )		8465532	1					
ANR	8465555	Callee	strlen		8465532	0					
ANR	8465556	Identifier	strlen		8465532	0					
ANR	8465557	ArgumentList	PJL_UEL		8465532	1					
ANR	8465558	Argument	PJL_UEL		8465532	0					
ANR	8465559	Identifier	PJL_UEL		8465532	0					
ANR	8465560	IfStatement	if ( buffer_length >= uel_len )		8465532	3					
ANR	8465561	Condition	buffer_length >= uel_len	1309:8:48015:48038	8465532	0	True				
ANR	8465562	RelationalExpression	buffer_length >= uel_len		8465532	0		>=			
ANR	8465563	Identifier	buffer_length		8465532	0					
ANR	8465564	Identifier	uel_len		8465532	1					
ANR	8465565	CompoundStatement		8:34:287:287	8465532	1					
ANR	8465566	IfStatement	"if ( ! memcmp ( name , PJL_UEL , uel_len ) )"		8465532	0					
ANR	8465567	Condition	"! memcmp ( name , PJL_UEL , uel_len )"	1310:12:48055:48085	8465532	0	True				
ANR	8465568	UnaryOperationExpression	"! memcmp ( name , PJL_UEL , uel_len )"		8465532	0					
ANR	8465569	UnaryOperator	!		8465532	0					
ANR	8465570	CallExpression	"memcmp ( name , PJL_UEL , uel_len )"		8465532	1					
ANR	8465571	Callee	memcmp		8465532	0					
ANR	8465572	Identifier	memcmp		8465532	0					
ANR	8465573	ArgumentList	name		8465532	1					
ANR	8465574	Argument	name		8465532	0					
ANR	8465575	Identifier	name		8465532	0					
ANR	8465576	Argument	PJL_UEL		8465532	1					
ANR	8465577	Identifier	PJL_UEL		8465532	0					
ANR	8465578	Argument	uel_len		8465532	2					
ANR	8465579	Identifier	uel_len		8465532	0					
ANR	8465580	ReturnStatement	return impls [ 0 ] ;	1311:12:48100:48115	8465532	1	True				
ANR	8465581	ArrayIndexing	impls [ 0 ]		8465532	0					
ANR	8465582	Identifier	impls		8465532	0					
ANR	8465583	PrimaryExpression	0		8465532	1					
ANR	8465584	ForStatement	for ( impl = impls ; * impl != 0 ; ++ impl )		8465532	4					
ANR	8465585	ForInit	impl = impls ;	1314:9:48137:48149	8465532	0	True				
ANR	8465586	AssignmentExpression	impl = impls		8465532	0		=			
ANR	8465587	Identifier	impl		8465532	0					
ANR	8465588	Identifier	impls		8465532	1					
ANR	8465589	Condition	* impl != 0	1314:23:48151:48160	8465532	1	True				
ANR	8465590	EqualityExpression	* impl != 0		8465532	0		!=			
ANR	8465591	UnaryOperationExpression	* impl		8465532	0					
ANR	8465592	UnaryOperator	*		8465532	0					
ANR	8465593	Identifier	impl		8465532	1					
ANR	8465594	PrimaryExpression	0		8465532	1					
ANR	8465595	UnaryExpression	++ impl	1314:35:48163:48168	8465532	2	True				
ANR	8465596	IncDec	++		8465532	0					
ANR	8465597	Identifier	impl		8465532	1					
ANR	8465598	CompoundStatement		15:8:511:577	8465532	3					
ANR	8465599	IdentifierDeclStatement	int auto_string_len = strlen ( pl_characteristics ( * impl ) -> auto_sense_string ) ;	1315:8:48181:48255	8465532	0	True				
ANR	8465600	IdentifierDecl	auto_string_len = strlen ( pl_characteristics ( * impl ) -> auto_sense_string )		8465532	0					
ANR	8465601	IdentifierDeclType	int		8465532	0					
ANR	8465602	Identifier	auto_string_len		8465532	1					
ANR	8465603	AssignmentExpression	auto_string_len = strlen ( pl_characteristics ( * impl ) -> auto_sense_string )		8465532	2		=			
ANR	8465604	Identifier	auto_string_len		8465532	0					
ANR	8465605	CallExpression	strlen ( pl_characteristics ( * impl ) -> auto_sense_string )		8465532	1					
ANR	8465606	Callee	strlen		8465532	0					
ANR	8465607	Identifier	strlen		8465532	0					
ANR	8465608	ArgumentList	pl_characteristics ( * impl ) -> auto_sense_string		8465532	1					
ANR	8465609	Argument	pl_characteristics ( * impl ) -> auto_sense_string		8465532	0					
ANR	8465610	PtrMemberAccess	pl_characteristics ( * impl ) -> auto_sense_string		8465532	0					
ANR	8465611	CallExpression	pl_characteristics ( * impl )		8465532	0					
ANR	8465612	Callee	pl_characteristics		8465532	0					
ANR	8465613	Identifier	pl_characteristics		8465532	0					
ANR	8465614	ArgumentList	* impl		8465532	1					
ANR	8465615	Argument	* impl		8465532	0					
ANR	8465616	UnaryOperationExpression	* impl		8465532	0					
ANR	8465617	UnaryOperator	*		8465532	0					
ANR	8465618	Identifier	impl		8465532	1					
ANR	8465619	Identifier	auto_sense_string		8465532	1					
ANR	8465620	IdentifierDeclStatement	const char * sense = pl_characteristics ( * impl ) -> auto_sense_string ;	1316:8:48265:48331	8465532	1	True				
ANR	8465621	IdentifierDecl	* sense = pl_characteristics ( * impl ) -> auto_sense_string		8465532	0					
ANR	8465622	IdentifierDeclType	const char *		8465532	0					
ANR	8465623	Identifier	sense		8465532	1					
ANR	8465624	AssignmentExpression	* sense = pl_characteristics ( * impl ) -> auto_sense_string		8465532	2		=			
ANR	8465625	Identifier	sense		8465532	0					
ANR	8465626	PtrMemberAccess	pl_characteristics ( * impl ) -> auto_sense_string		8465532	1					
ANR	8465627	CallExpression	pl_characteristics ( * impl )		8465532	0					
ANR	8465628	Callee	pl_characteristics		8465532	0					
ANR	8465629	Identifier	pl_characteristics		8465532	0					
ANR	8465630	ArgumentList	* impl		8465532	1					
ANR	8465631	Argument	* impl		8465532	0					
ANR	8465632	UnaryOperationExpression	* impl		8465532	0					
ANR	8465633	UnaryOperator	*		8465532	0					
ANR	8465634	Identifier	impl		8465532	1					
ANR	8465635	Identifier	auto_sense_string		8465532	1					
ANR	8465636	IfStatement	if ( auto_string_len != 0 && buffer_length >= auto_string_len )		8465532	2					
ANR	8465637	Condition	auto_string_len != 0 && buffer_length >= auto_string_len	1317:12:48345:48400	8465532	0	True				
ANR	8465638	AndExpression	auto_string_len != 0 && buffer_length >= auto_string_len		8465532	0		&&			
ANR	8465639	EqualityExpression	auto_string_len != 0		8465532	0		!=			
ANR	8465640	Identifier	auto_string_len		8465532	0					
ANR	8465641	PrimaryExpression	0		8465532	1					
ANR	8465642	RelationalExpression	buffer_length >= auto_string_len		8465532	1		>=			
ANR	8465643	Identifier	buffer_length		8465532	0					
ANR	8465644	Identifier	auto_string_len		8465532	1					
ANR	8465645	IfStatement	"if ( ! memcmp ( sense , name , auto_string_len ) )"		8465532	1					
ANR	8465646	Condition	"! memcmp ( sense , name , auto_string_len )"	1318:16:48419:48455	8465532	0	True				
ANR	8465647	UnaryOperationExpression	"! memcmp ( sense , name , auto_string_len )"		8465532	0					
ANR	8465648	UnaryOperator	!		8465532	0					
ANR	8465649	CallExpression	"memcmp ( sense , name , auto_string_len )"		8465532	1					
ANR	8465650	Callee	memcmp		8465532	0					
ANR	8465651	Identifier	memcmp		8465532	0					
ANR	8465652	ArgumentList	sense		8465532	1					
ANR	8465653	Argument	sense		8465532	0					
ANR	8465654	Identifier	sense		8465532	0					
ANR	8465655	Argument	name		8465532	1					
ANR	8465656	Identifier	name		8465532	0					
ANR	8465657	Argument	auto_string_len		8465532	2					
ANR	8465658	Identifier	auto_string_len		8465532	0					
ANR	8465659	ReturnStatement	return * impl ;	1319:16:48474:48486	8465532	1	True				
ANR	8465660	UnaryOperationExpression	* impl		8465532	0					
ANR	8465661	UnaryOperator	*		8465532	0					
ANR	8465662	Identifier	impl		8465532	1					
ANR	8465663	ReturnStatement	return impls [ 1 ] ;	1322:4:48561:48576	8465532	5	True				
ANR	8465664	ArrayIndexing	impls [ 1 ]		8465532	0					
ANR	8465665	Identifier	impls		8465532	0					
ANR	8465666	PrimaryExpression	1		8465532	1					
ANR	8465667	ReturnType	static pl_interp_implementation_t *		8465532	1					
ANR	8465668	Identifier	pl_auto_sense		8465532	2					
ANR	8465669	ParameterList	"pl_main_instance_t * minst , const char * name , int buffer_length"		8465532	3					
ANR	8465670	Parameter	pl_main_instance_t * minst	1301:14:47688:47712	8465532	0	True				
ANR	8465671	ParameterType	pl_main_instance_t *		8465532	0					
ANR	8465672	Identifier	minst		8465532	1					
ANR	8465673	Parameter	const char * name	1301:41:47715:47730	8465532	1	True				
ANR	8465674	ParameterType	const char *		8465532	0					
ANR	8465675	Identifier	name		8465532	1					
ANR	8465676	Parameter	int buffer_length	1301:60:47734:47750	8465532	2	True				
ANR	8465677	ParameterType	int		8465532	0					
ANR	8465678	Identifier	buffer_length		8465532	1					
ANR	8465679	CFGEntryNode	ENTRY		8465532		True				
ANR	8465680	CFGExitNode	EXIT		8465532		True				
ANR	8465681	Symbol	minst		8465532						
ANR	8465682	Symbol	uel_len		8465532						
ANR	8465683	Symbol	pl_characteristics ( * impl ) -> auto_sense_string		8465532						
ANR	8465684	Symbol	* impls		8465532						
ANR	8465685	Symbol	impls		8465532						
ANR	8465686	Symbol	* impl		8465532						
ANR	8465687	Symbol	sense		8465532						
ANR	8465688	Symbol	minst -> implementations		8465532						
ANR	8465689	Symbol	pl_characteristics		8465532						
ANR	8465690	Symbol	* minst		8465532						
ANR	8465691	Symbol	impl		8465532						
ANR	8465692	Symbol	strlen		8465532						
ANR	8465693	Symbol	auto_string_len		8465532						
ANR	8465694	Symbol	memcmp		8465532						
ANR	8465695	Symbol	name		8465532						
ANR	8465696	Symbol	* pl_characteristics		8465532						
ANR	8465697	Symbol	buffer_length		8465532						
ANR	8465698	Symbol	PJL_UEL		8465532						
ANR	8465699	Function	pl_select_implementation	1327:0:48723:49545							
ANR	8465700	FunctionDef	"pl_select_implementation (pl_interp_implementation_t * pjli , pl_main_instance_t * pmi , pl_top_cursor_t r)"		8465699	0					
ANR	8465701	CompoundStatement		1330:0:48889:49545	8465699	0					
ANR	8465702	IdentifierDeclStatement	pl_interp_implementation_t * impl ;	1334:4:49126:49158	8465699	0	True				
ANR	8465703	IdentifierDecl	* impl		8465699	0					
ANR	8465704	IdentifierDeclType	pl_interp_implementation_t *		8465699	0					
ANR	8465705	Identifier	impl		8465699	1					
ANR	8465706	IfStatement	if ( pmi -> implementation )		8465699	1					
ANR	8465707	Condition	pmi -> implementation	1336:8:49169:49187	8465699	0	True				
ANR	8465708	PtrMemberAccess	pmi -> implementation		8465699	0					
ANR	8465709	Identifier	pmi		8465699	0					
ANR	8465710	Identifier	implementation		8465699	1					
ANR	8465711	ReturnStatement	return pmi -> implementation ;	1337:8:49198:49224	8465699	1	True				
ANR	8465712	PtrMemberAccess	pmi -> implementation		8465699	0					
ANR	8465713	Identifier	pmi		8465699	0					
ANR	8465714	Identifier	implementation		8465699	1					
ANR	8465715	IfStatement	"if ( ( impl = pl_pjl_select ( pmi , pjli ) ) != 0 )"		8465699	2					
ANR	8465716	Condition	"( impl = pl_pjl_select ( pmi , pjli ) ) != 0"	1339:8:49301:49338	8465699	0	True				
ANR	8465717	EqualityExpression	"( impl = pl_pjl_select ( pmi , pjli ) ) != 0"		8465699	0		!=			
ANR	8465718	AssignmentExpression	"impl = pl_pjl_select ( pmi , pjli )"		8465699	0		=			
ANR	8465719	Identifier	impl		8465699	0					
ANR	8465720	CallExpression	"pl_pjl_select ( pmi , pjli )"		8465699	1					
ANR	8465721	Callee	pl_pjl_select		8465699	0					
ANR	8465722	Identifier	pl_pjl_select		8465699	0					
ANR	8465723	ArgumentList	pmi		8465699	1					
ANR	8465724	Argument	pmi		8465699	0					
ANR	8465725	Identifier	pmi		8465699	0					
ANR	8465726	Argument	pjli		8465699	1					
ANR	8465727	Identifier	pjli		8465699	0					
ANR	8465728	PrimaryExpression	0		8465699	1					
ANR	8465729	ReturnStatement	return impl ;	1340:8:49349:49360	8465699	1	True				
ANR	8465730	Identifier	impl		8465699	0					
ANR	8465731	ReturnStatement	"return pl_auto_sense ( pmi , ( const char * ) r . cursor . ptr + 1 , ( r . cursor . limit - r . cursor . ptr ) ) ;"	1342:4:49428:49543	8465699	3	True				
ANR	8465732	CallExpression	"pl_auto_sense ( pmi , ( const char * ) r . cursor . ptr + 1 , ( r . cursor . limit - r . cursor . ptr ) )"		8465699	0					
ANR	8465733	Callee	pl_auto_sense		8465699	0					
ANR	8465734	Identifier	pl_auto_sense		8465699	0					
ANR	8465735	ArgumentList	pmi		8465699	1					
ANR	8465736	Argument	pmi		8465699	0					
ANR	8465737	Identifier	pmi		8465699	0					
ANR	8465738	Argument	( const char * ) r . cursor . ptr + 1		8465699	1					
ANR	8465739	AdditiveExpression	( const char * ) r . cursor . ptr + 1		8465699	0		+			
ANR	8465740	CastExpression	( const char * ) r . cursor . ptr		8465699	0					
ANR	8465741	CastTarget	const char *		8465699	0					
ANR	8465742	MemberAccess	r . cursor . ptr		8465699	1					
ANR	8465743	MemberAccess	r . cursor		8465699	0					
ANR	8465744	Identifier	r		8465699	0					
ANR	8465745	Identifier	cursor		8465699	1					
ANR	8465746	Identifier	ptr		8465699	1					
ANR	8465747	PrimaryExpression	1		8465699	1					
ANR	8465748	Argument	r . cursor . limit - r . cursor . ptr		8465699	2					
ANR	8465749	AdditiveExpression	r . cursor . limit - r . cursor . ptr		8465699	0		-			
ANR	8465750	MemberAccess	r . cursor . limit		8465699	0					
ANR	8465751	MemberAccess	r . cursor		8465699	0					
ANR	8465752	Identifier	r		8465699	0					
ANR	8465753	Identifier	cursor		8465699	1					
ANR	8465754	Identifier	limit		8465699	1					
ANR	8465755	MemberAccess	r . cursor . ptr		8465699	1					
ANR	8465756	MemberAccess	r . cursor		8465699	0					
ANR	8465757	Identifier	r		8465699	0					
ANR	8465758	Identifier	cursor		8465699	1					
ANR	8465759	Identifier	ptr		8465699	1					
ANR	8465760	ReturnType	static pl_interp_implementation_t *		8465699	1					
ANR	8465761	Identifier	pl_select_implementation		8465699	2					
ANR	8465762	ParameterList	"pl_interp_implementation_t * pjli , pl_main_instance_t * pmi , pl_top_cursor_t r"		8465699	3					
ANR	8465763	Parameter	pl_interp_implementation_t * pjli	1328:25:48784:48816	8465699	0	True				
ANR	8465764	ParameterType	pl_interp_implementation_t *		8465699	0					
ANR	8465765	Identifier	pjli		8465699	1					
ANR	8465766	Parameter	pl_main_instance_t * pmi	1329:25:48844:48867	8465699	1	True				
ANR	8465767	ParameterType	pl_main_instance_t *		8465699	0					
ANR	8465768	Identifier	pmi		8465699	1					
ANR	8465769	Parameter	pl_top_cursor_t r	1329:51:48870:48886	8465699	2	True				
ANR	8465770	ParameterType	pl_top_cursor_t		8465699	0					
ANR	8465771	Identifier	r		8465699	1					
ANR	8465772	CFGEntryNode	ENTRY		8465699		True				
ANR	8465773	CFGExitNode	EXIT		8465699		True				
ANR	8465774	Symbol	impl		8465699						
ANR	8465775	Symbol	r		8465699						
ANR	8465776	Symbol	pjli		8465699						
ANR	8465777	Symbol	r . cursor		8465699						
ANR	8465778	Symbol	pl_pjl_select		8465699						
ANR	8465779	Symbol	* pmi		8465699						
ANR	8465780	Symbol	r . cursor . ptr		8465699						
ANR	8465781	Symbol	r . cursor . limit		8465699						
ANR	8465782	Symbol	pmi -> implementation		8465699						
ANR	8465783	Symbol	pl_auto_sense		8465699						
ANR	8465784	Symbol	pmi		8465699						
ANR	8465785	Function	pl_pjl_select	1347:0:49591:50048							
ANR	8465786	FunctionDef	"pl_pjl_select (pl_main_instance_t * pmi , pl_interp_implementation_t * pjli)"		8465785	0					
ANR	8465787	CompoundStatement		1349:0:49702:50048	8465785	0					
ANR	8465788	IdentifierDeclStatement	pjl_envvar_t * language ;	1350:4:49708:49730	8465785	0	True				
ANR	8465789	IdentifierDecl	* language		8465785	0					
ANR	8465790	IdentifierDeclType	pjl_envvar_t *		8465785	0					
ANR	8465791	Identifier	language		8465785	1					
ANR	8465792	IdentifierDeclStatement	pl_interp_implementation_t * * impls = pmi -> implementations ;	1351:4:49736:49793	8465785	1	True				
ANR	8465793	IdentifierDecl	* * impls = pmi -> implementations		8465785	0					
ANR	8465794	IdentifierDeclType	pl_interp_implementation_t * *		8465785	0					
ANR	8465795	Identifier	impls		8465785	1					
ANR	8465796	AssignmentExpression	* * impls = pmi -> implementations		8465785	2		=			
ANR	8465797	Identifier	impls		8465785	0					
ANR	8465798	PtrMemberAccess	pmi -> implementations		8465785	1					
ANR	8465799	Identifier	pmi		8465785	0					
ANR	8465800	Identifier	implementations		8465785	1					
ANR	8465801	IdentifierDeclStatement	pl_interp_implementation_t * * impl ;	1352:4:49799:49832	8465785	2	True				
ANR	8465802	IdentifierDecl	* * impl		8465785	0					
ANR	8465803	IdentifierDeclType	pl_interp_implementation_t * *		8465785	0					
ANR	8465804	Identifier	impl		8465785	1					
ANR	8465805	ExpressionStatement	"language = pjl_proc_get_envvar ( pjli , ""language"" )"	1354:4:49839:49887	8465785	3	True				
ANR	8465806	AssignmentExpression	"language = pjl_proc_get_envvar ( pjli , ""language"" )"		8465785	0		=			
ANR	8465807	Identifier	language		8465785	0					
ANR	8465808	CallExpression	"pjl_proc_get_envvar ( pjli , ""language"" )"		8465785	1					
ANR	8465809	Callee	pjl_proc_get_envvar		8465785	0					
ANR	8465810	Identifier	pjl_proc_get_envvar		8465785	0					
ANR	8465811	ArgumentList	pjli		8465785	1					
ANR	8465812	Argument	pjli		8465785	0					
ANR	8465813	Identifier	pjli		8465785	0					
ANR	8465814	Argument	"""language"""		8465785	1					
ANR	8465815	PrimaryExpression	"""language"""		8465785	0					
ANR	8465816	ForStatement	for ( impl = impls ; * impl != 0 ; ++ impl )		8465785	4					
ANR	8465817	ForInit	impl = impls ;	1355:9:49898:49910	8465785	0	True				
ANR	8465818	AssignmentExpression	impl = impls		8465785	0		=			
ANR	8465819	Identifier	impl		8465785	0					
ANR	8465820	Identifier	impls		8465785	1					
ANR	8465821	Condition	* impl != 0	1355:23:49912:49921	8465785	1	True				
ANR	8465822	EqualityExpression	* impl != 0		8465785	0		!=			
ANR	8465823	UnaryOperationExpression	* impl		8465785	0					
ANR	8465824	UnaryOperator	*		8465785	0					
ANR	8465825	Identifier	impl		8465785	1					
ANR	8465826	PrimaryExpression	0		8465785	1					
ANR	8465827	UnaryExpression	++ impl	1355:35:49924:49929	8465785	2	True				
ANR	8465828	IncDec	++		8465785	0					
ANR	8465829	Identifier	impl		8465785	1					
ANR	8465830	CompoundStatement		7:43:229:229	8465785	3					
ANR	8465831	IfStatement	"if ( ! strcmp ( pl_characteristics ( * impl ) -> language , language ) )"		8465785	0					
ANR	8465832	Condition	"! strcmp ( pl_characteristics ( * impl ) -> language , language )"	1356:12:49946:49999	8465785	0	True				
ANR	8465833	UnaryOperationExpression	"! strcmp ( pl_characteristics ( * impl ) -> language , language )"		8465785	0					
ANR	8465834	UnaryOperator	!		8465785	0					
ANR	8465835	CallExpression	"strcmp ( pl_characteristics ( * impl ) -> language , language )"		8465785	1					
ANR	8465836	Callee	strcmp		8465785	0					
ANR	8465837	Identifier	strcmp		8465785	0					
ANR	8465838	ArgumentList	pl_characteristics ( * impl ) -> language		8465785	1					
ANR	8465839	Argument	pl_characteristics ( * impl ) -> language		8465785	0					
ANR	8465840	PtrMemberAccess	pl_characteristics ( * impl ) -> language		8465785	0					
ANR	8465841	CallExpression	pl_characteristics ( * impl )		8465785	0					
ANR	8465842	Callee	pl_characteristics		8465785	0					
ANR	8465843	Identifier	pl_characteristics		8465785	0					
ANR	8465844	ArgumentList	* impl		8465785	1					
ANR	8465845	Argument	* impl		8465785	0					
ANR	8465846	UnaryOperationExpression	* impl		8465785	0					
ANR	8465847	UnaryOperator	*		8465785	0					
ANR	8465848	Identifier	impl		8465785	1					
ANR	8465849	Identifier	language		8465785	1					
ANR	8465850	Argument	language		8465785	1					
ANR	8465851	Identifier	language		8465785	0					
ANR	8465852	ReturnStatement	return * impl ;	1357:12:50014:50026	8465785	1	True				
ANR	8465853	UnaryOperationExpression	* impl		8465785	0					
ANR	8465854	UnaryOperator	*		8465785	0					
ANR	8465855	Identifier	impl		8465785	1					
ANR	8465856	ReturnStatement	return 0 ;	1359:4:50038:50046	8465785	5	True				
ANR	8465857	PrimaryExpression	0		8465785	0					
ANR	8465858	ReturnType	static pl_interp_implementation_t *		8465785	1					
ANR	8465859	Identifier	pl_pjl_select		8465785	2					
ANR	8465860	ParameterList	"pl_main_instance_t * pmi , pl_interp_implementation_t * pjli"		8465785	3					
ANR	8465861	Parameter	pl_main_instance_t * pmi	1348:14:49641:49664	8465785	0	True				
ANR	8465862	ParameterType	pl_main_instance_t *		8465785	0					
ANR	8465863	Identifier	pmi		8465785	1					
ANR	8465864	Parameter	pl_interp_implementation_t * pjli	1348:40:49667:49699	8465785	1	True				
ANR	8465865	ParameterType	pl_interp_implementation_t *		8465785	0					
ANR	8465866	Identifier	pjli		8465785	1					
ANR	8465867	CFGEntryNode	ENTRY		8465785		True				
ANR	8465868	CFGExitNode	EXIT		8465785		True				
ANR	8465869	Symbol	strcmp		8465785						
ANR	8465870	Symbol	pjli		8465785						
ANR	8465871	Symbol	impls		8465785						
ANR	8465872	Symbol	* impl		8465785						
ANR	8465873	Symbol	language		8465785						
ANR	8465874	Symbol	pmi		8465785						
ANR	8465875	Symbol	pl_characteristics		8465785						
ANR	8465876	Symbol	pl_characteristics ( * impl ) -> language		8465785						
ANR	8465877	Symbol	impl		8465785						
ANR	8465878	Symbol	pmi -> implementations		8465785						
ANR	8465879	Symbol	* pmi		8465785						
ANR	8465880	Symbol	* pl_characteristics		8465785						
ANR	8465881	Symbol	pjl_proc_get_envvar		8465785						
ANR	8465882	Function	pl_print_usage	1363:0:50086:50434							
ANR	8465883	FunctionDef	"pl_print_usage (const pl_main_instance_t * pti , const char * msg)"		8465882	0					
ANR	8465884	CompoundStatement		1365:0:50155:50434	8465882	0					
ANR	8465885	IdentifierDeclStatement	long utime [ 2 ] ;	1366:4:50161:50174	8465882	0	True				
ANR	8465886	IdentifierDecl	utime [ 2 ]		8465882	0					
ANR	8465887	IdentifierDeclType	long [ 2 ]		8465882	0					
ANR	8465888	Identifier	utime		8465882	1					
ANR	8465889	PrimaryExpression	2		8465882	2					
ANR	8465890	IdentifierDeclStatement	gx_device * pdev = pti -> device ;	1367:4:50180:50209	8465882	1	True				
ANR	8465891	IdentifierDecl	* pdev = pti -> device		8465882	0					
ANR	8465892	IdentifierDeclType	gx_device *		8465882	0					
ANR	8465893	Identifier	pdev		8465882	1					
ANR	8465894	AssignmentExpression	* pdev = pti -> device		8465882	2		=			
ANR	8465895	Identifier	pdev		8465882	0					
ANR	8465896	PtrMemberAccess	pti -> device		8465882	1					
ANR	8465897	Identifier	pti		8465882	0					
ANR	8465898	Identifier	device		8465882	1					
ANR	8465899	ExpressionStatement	gp_get_realtime ( utime )	1369:4:50220:50242	8465882	2	True				
ANR	8465900	CallExpression	gp_get_realtime ( utime )		8465882	0					
ANR	8465901	Callee	gp_get_realtime		8465882	0					
ANR	8465902	Identifier	gp_get_realtime		8465882	0					
ANR	8465903	ArgumentList	utime		8465882	1					
ANR	8465904	Argument	utime		8465882	0					
ANR	8465905	Identifier	utime		8465882	0					
ANR	8465906	ExpressionStatement	"dmprintf3 ( pti -> memory , ""%% %s time = %g, pages = %ld\\n"" , msg , utime [ 0 ] - pti -> base_time [ 0 ] + ( utime [ 1 ] - pti -> base_time [ 1 ] ) / 1000000000.0 , pdev -> PageCount )"	1370:4:50248:50432	8465882	3	True				
ANR	8465907	CallExpression	"dmprintf3 ( pti -> memory , ""%% %s time = %g, pages = %ld\\n"" , msg , utime [ 0 ] - pti -> base_time [ 0 ] + ( utime [ 1 ] - pti -> base_time [ 1 ] ) / 1000000000.0 , pdev -> PageCount )"		8465882	0					
ANR	8465908	Callee	dmprintf3		8465882	0					
ANR	8465909	Identifier	dmprintf3		8465882	0					
ANR	8465910	ArgumentList	pti -> memory		8465882	1					
ANR	8465911	Argument	pti -> memory		8465882	0					
ANR	8465912	PtrMemberAccess	pti -> memory		8465882	0					
ANR	8465913	Identifier	pti		8465882	0					
ANR	8465914	Identifier	memory		8465882	1					
ANR	8465915	Argument	"""%% %s time = %g, pages = %ld\\n"""		8465882	1					
ANR	8465916	PrimaryExpression	"""%% %s time = %g, pages = %ld\\n"""		8465882	0					
ANR	8465917	Argument	msg		8465882	2					
ANR	8465918	Identifier	msg		8465882	0					
ANR	8465919	Argument	utime [ 0 ] - pti -> base_time [ 0 ] + ( utime [ 1 ] - pti -> base_time [ 1 ] ) / 1000000000.0		8465882	3					
ANR	8465920	AdditiveExpression	utime [ 0 ] - pti -> base_time [ 0 ] + ( utime [ 1 ] - pti -> base_time [ 1 ] ) / 1000000000.0		8465882	0		-			
ANR	8465921	ArrayIndexing	utime [ 0 ]		8465882	0					
ANR	8465922	Identifier	utime		8465882	0					
ANR	8465923	PrimaryExpression	0		8465882	1					
ANR	8465924	AdditiveExpression	pti -> base_time [ 0 ] + ( utime [ 1 ] - pti -> base_time [ 1 ] ) / 1000000000.0		8465882	1		+			
ANR	8465925	ArrayIndexing	pti -> base_time [ 0 ]		8465882	0					
ANR	8465926	PtrMemberAccess	pti -> base_time		8465882	0					
ANR	8465927	Identifier	pti		8465882	0					
ANR	8465928	Identifier	base_time		8465882	1					
ANR	8465929	PrimaryExpression	0		8465882	1					
ANR	8465930	MultiplicativeExpression	( utime [ 1 ] - pti -> base_time [ 1 ] ) / 1000000000.0		8465882	1		/			
ANR	8465931	AdditiveExpression	utime [ 1 ] - pti -> base_time [ 1 ]		8465882	0		-			
ANR	8465932	ArrayIndexing	utime [ 1 ]		8465882	0					
ANR	8465933	Identifier	utime		8465882	0					
ANR	8465934	PrimaryExpression	1		8465882	1					
ANR	8465935	ArrayIndexing	pti -> base_time [ 1 ]		8465882	1					
ANR	8465936	PtrMemberAccess	pti -> base_time		8465882	0					
ANR	8465937	Identifier	pti		8465882	0					
ANR	8465938	Identifier	base_time		8465882	1					
ANR	8465939	PrimaryExpression	1		8465882	1					
ANR	8465940	PrimaryExpression	1000000000.0		8465882	1					
ANR	8465941	Argument	pdev -> PageCount		8465882	4					
ANR	8465942	PtrMemberAccess	pdev -> PageCount		8465882	0					
ANR	8465943	Identifier	pdev		8465882	0					
ANR	8465944	Identifier	PageCount		8465882	1					
ANR	8465945	ReturnType	void		8465882	1					
ANR	8465946	Identifier	pl_print_usage		8465882	2					
ANR	8465947	ParameterList	"const pl_main_instance_t * pti , const char * msg"		8465882	3					
ANR	8465948	Parameter	const pl_main_instance_t * pti	1364:15:50106:50135	8465882	0	True				
ANR	8465949	ParameterType	const pl_main_instance_t *		8465882	0					
ANR	8465950	Identifier	pti		8465882	1					
ANR	8465951	Parameter	const char * msg	1364:47:50138:50152	8465882	1	True				
ANR	8465952	ParameterType	const char *		8465882	0					
ANR	8465953	Identifier	msg		8465882	1					
ANR	8465954	CFGEntryNode	ENTRY		8465882		True				
ANR	8465955	CFGExitNode	EXIT		8465882		True				
ANR	8465956	Symbol	msg		8465882						
ANR	8465957	Symbol	pti		8465882						
ANR	8465958	Symbol	utime		8465882						
ANR	8465959	Symbol	* utime		8465882						
ANR	8465960	Symbol	* pti		8465882						
ANR	8465961	Symbol	pdev		8465882						
ANR	8465962	Symbol	pti -> memory		8465882						
ANR	8465963	Symbol	pdev -> PageCount		8465882						
ANR	8465964	Symbol	* pdev		8465882						
ANR	8465965	Symbol	* * pti		8465882						
ANR	8465966	Symbol	pti -> device		8465882						
ANR	8465967	Symbol	* pti -> base_time		8465882						
ANR	8465968	Symbol	pti -> base_time		8465882						
ANR	8465969	Function	pl_log_string	1376:0:50494:50687							
ANR	8465970	FunctionDef	"pl_log_string (const gs_memory_t * mem , const char * str , int wait_for_key)"		8465969	0					
ANR	8465971	CompoundStatement		1378:0:50580:50687	8465969	0					
ANR	8465972	ExpressionStatement	"errwrite ( mem , str , strlen ( str ) )"	1379:4:50586:50617	8465969	0	True				
ANR	8465973	CallExpression	"errwrite ( mem , str , strlen ( str ) )"		8465969	0					
ANR	8465974	Callee	errwrite		8465969	0					
ANR	8465975	Identifier	errwrite		8465969	0					
ANR	8465976	ArgumentList	mem		8465969	1					
ANR	8465977	Argument	mem		8465969	0					
ANR	8465978	Identifier	mem		8465969	0					
ANR	8465979	Argument	str		8465969	1					
ANR	8465980	Identifier	str		8465969	0					
ANR	8465981	Argument	strlen ( str )		8465969	2					
ANR	8465982	CallExpression	strlen ( str )		8465969	0					
ANR	8465983	Callee	strlen		8465969	0					
ANR	8465984	Identifier	strlen		8465969	0					
ANR	8465985	ArgumentList	str		8465969	1					
ANR	8465986	Argument	str		8465969	0					
ANR	8465987	Identifier	str		8465969	0					
ANR	8465988	IfStatement	if ( wait_for_key )		8465969	1					
ANR	8465989	Condition	wait_for_key	1380:8:50627:50638	8465969	0	True				
ANR	8465990	Identifier	wait_for_key		8465969	0					
ANR	8465991	ExpressionStatement	( void ) fgetc ( mem -> gs_lib_ctx -> fstdin )	1381:8:50649:50685	8465969	1	True				
ANR	8465992	CastExpression	( void ) fgetc ( mem -> gs_lib_ctx -> fstdin )		8465969	0					
ANR	8465993	CastTarget	void		8465969	0					
ANR	8465994	CallExpression	fgetc ( mem -> gs_lib_ctx -> fstdin )		8465969	1					
ANR	8465995	Callee	fgetc		8465969	0					
ANR	8465996	Identifier	fgetc		8465969	0					
ANR	8465997	ArgumentList	mem -> gs_lib_ctx -> fstdin		8465969	1					
ANR	8465998	Argument	mem -> gs_lib_ctx -> fstdin		8465969	0					
ANR	8465999	PtrMemberAccess	mem -> gs_lib_ctx -> fstdin		8465969	0					
ANR	8466000	PtrMemberAccess	mem -> gs_lib_ctx		8465969	0					
ANR	8466001	Identifier	mem		8465969	0					
ANR	8466002	Identifier	gs_lib_ctx		8465969	1					
ANR	8466003	Identifier	fstdin		8465969	1					
ANR	8466004	ReturnType	static void		8465969	1					
ANR	8466005	Identifier	pl_log_string		8465969	2					
ANR	8466006	ParameterList	"const gs_memory_t * mem , const char * str , int wait_for_key"		8465969	3					
ANR	8466007	Parameter	const gs_memory_t * mem	1377:14:50520:50542	8465969	0	True				
ANR	8466008	ParameterType	const gs_memory_t *		8465969	0					
ANR	8466009	Identifier	mem		8465969	1					
ANR	8466010	Parameter	const char * str	1377:39:50545:50559	8465969	1	True				
ANR	8466011	ParameterType	const char *		8465969	0					
ANR	8466012	Identifier	str		8465969	1					
ANR	8466013	Parameter	int wait_for_key	1377:56:50562:50577	8465969	2	True				
ANR	8466014	ParameterType	int		8465969	0					
ANR	8466015	Identifier	wait_for_key		8465969	1					
ANR	8466016	CFGEntryNode	ENTRY		8465969		True				
ANR	8466017	CFGExitNode	EXIT		8465969		True				
ANR	8466018	Symbol	str		8465969						
ANR	8466019	Symbol	mem -> gs_lib_ctx -> fstdin		8465969						
ANR	8466020	Symbol	strlen		8465969						
ANR	8466021	Symbol	mem		8465969						
ANR	8466022	Symbol	* * mem		8465969						
ANR	8466023	Symbol	wait_for_key		8465969						
ANR	8466024	Symbol	* mem -> gs_lib_ctx		8465969						
ANR	8466025	Symbol	mem -> gs_lib_ctx		8465969						
ANR	8466026	Symbol	* mem		8465969						
ANR	8466027	Function	pl_main_get_pcl_instance	1384:0:50690:50828							
ANR	8466028	FunctionDef	pl_main_get_pcl_instance (const gs_memory_t * mem)		8466027	0					
ANR	8466029	CompoundStatement		1386:0:50768:50828	8466027	0					
ANR	8466030	ReturnStatement	return pl_main_get_instance ( mem ) -> implementations [ 1 ] ;	1387:4:50774:50826	8466027	0	True				
ANR	8466031	ArrayIndexing	pl_main_get_instance ( mem ) -> implementations [ 1 ]		8466027	0					
ANR	8466032	PtrMemberAccess	pl_main_get_instance ( mem ) -> implementations		8466027	0					
ANR	8466033	CallExpression	pl_main_get_instance ( mem )		8466027	0					
ANR	8466034	Callee	pl_main_get_instance		8466027	0					
ANR	8466035	Identifier	pl_main_get_instance		8466027	0					
ANR	8466036	ArgumentList	mem		8466027	1					
ANR	8466037	Argument	mem		8466027	0					
ANR	8466038	Identifier	mem		8466027	0					
ANR	8466039	Identifier	implementations		8466027	1					
ANR	8466040	PrimaryExpression	1		8466027	1					
ANR	8466041	ReturnType	pl_interp_implementation_t *		8466027	1					
ANR	8466042	Identifier	pl_main_get_pcl_instance		8466027	2					
ANR	8466043	ParameterList	const gs_memory_t * mem		8466027	3					
ANR	8466044	Parameter	const gs_memory_t * mem	1385:25:50744:50765	8466027	0	True				
ANR	8466045	ParameterType	const gs_memory_t *		8466027	0					
ANR	8466046	Identifier	mem		8466027	1					
ANR	8466047	CFGEntryNode	ENTRY		8466027		True				
ANR	8466048	CFGExitNode	EXIT		8466027		True				
ANR	8466049	Symbol	pl_main_get_instance ( mem ) -> implementations		8466027						
ANR	8466050	Symbol	mem		8466027						
ANR	8466051	Symbol	* pl_main_get_instance ( mem ) -> implementations		8466027						
ANR	8466052	Symbol	* pl_main_get_instance		8466027						
ANR	8466053	Symbol	* * pl_main_get_instance		8466027						
ANR	8466054	Symbol	pl_main_get_instance		8466027						
ANR	8466055	Function	pl_main_get_pjl_instance	1390:0:50831:50969							
ANR	8466056	FunctionDef	pl_main_get_pjl_instance (const gs_memory_t * mem)		8466055	0					
ANR	8466057	CompoundStatement		1392:0:50909:50969	8466055	0					
ANR	8466058	ReturnStatement	return pl_main_get_instance ( mem ) -> implementations [ 0 ] ;	1393:4:50915:50967	8466055	0	True				
ANR	8466059	ArrayIndexing	pl_main_get_instance ( mem ) -> implementations [ 0 ]		8466055	0					
ANR	8466060	PtrMemberAccess	pl_main_get_instance ( mem ) -> implementations		8466055	0					
ANR	8466061	CallExpression	pl_main_get_instance ( mem )		8466055	0					
ANR	8466062	Callee	pl_main_get_instance		8466055	0					
ANR	8466063	Identifier	pl_main_get_instance		8466055	0					
ANR	8466064	ArgumentList	mem		8466055	1					
ANR	8466065	Argument	mem		8466055	0					
ANR	8466066	Identifier	mem		8466055	0					
ANR	8466067	Identifier	implementations		8466055	1					
ANR	8466068	PrimaryExpression	0		8466055	1					
ANR	8466069	ReturnType	pl_interp_implementation_t *		8466055	1					
ANR	8466070	Identifier	pl_main_get_pjl_instance		8466055	2					
ANR	8466071	ParameterList	const gs_memory_t * mem		8466055	3					
ANR	8466072	Parameter	const gs_memory_t * mem	1391:25:50885:50906	8466055	0	True				
ANR	8466073	ParameterType	const gs_memory_t *		8466055	0					
ANR	8466074	Identifier	mem		8466055	1					
ANR	8466075	CFGEntryNode	ENTRY		8466055		True				
ANR	8466076	CFGExitNode	EXIT		8466055		True				
ANR	8466077	Symbol	pl_main_get_instance ( mem ) -> implementations		8466055						
ANR	8466078	Symbol	mem		8466055						
ANR	8466079	Symbol	* pl_main_get_instance ( mem ) -> implementations		8466055						
ANR	8466080	Symbol	* pl_main_get_instance		8466055						
ANR	8466081	Symbol	* * pl_main_get_instance		8466055						
ANR	8466082	Symbol	pl_main_get_instance		8466055						
ANR	8466083	Function	pl_main_get_interpolate	1396:0:50972:51078							
ANR	8466084	FunctionDef	pl_main_get_interpolate (const gs_memory_t * mem)		8466083	0					
ANR	8466085	CompoundStatement		1397:0:51025:51078	8466083	0					
ANR	8466086	ReturnStatement	return pl_main_get_instance ( mem ) -> interpolate ;	1398:4:51031:51076	8466083	0	True				
ANR	8466087	PtrMemberAccess	pl_main_get_instance ( mem ) -> interpolate		8466083	0					
ANR	8466088	CallExpression	pl_main_get_instance ( mem )		8466083	0					
ANR	8466089	Callee	pl_main_get_instance		8466083	0					
ANR	8466090	Identifier	pl_main_get_instance		8466083	0					
ANR	8466091	ArgumentList	mem		8466083	1					
ANR	8466092	Argument	mem		8466083	0					
ANR	8466093	Identifier	mem		8466083	0					
ANR	8466094	Identifier	interpolate		8466083	1					
ANR	8466095	ReturnType	bool		8466083	1					
ANR	8466096	Identifier	pl_main_get_interpolate		8466083	2					
ANR	8466097	ParameterList	const gs_memory_t * mem		8466083	3					
ANR	8466098	Parameter	const gs_memory_t * mem	1396:29:51001:51022	8466083	0	True				
ANR	8466099	ParameterType	const gs_memory_t *		8466083	0					
ANR	8466100	Identifier	mem		8466083	1					
ANR	8466101	CFGEntryNode	ENTRY		8466083		True				
ANR	8466102	CFGExitNode	EXIT		8466083		True				
ANR	8466103	Symbol	mem		8466083						
ANR	8466104	Symbol	* pl_main_get_instance		8466083						
ANR	8466105	Symbol	pl_main_get_instance ( mem ) -> interpolate		8466083						
ANR	8466106	Symbol	pl_main_get_instance		8466083						
ANR	8466107	Function	pl_main_get_nocache	1401:0:51081:51179							
ANR	8466108	FunctionDef	pl_main_get_nocache (const gs_memory_t * mem)		8466107	0					
ANR	8466109	CompoundStatement		1402:0:51130:51179	8466107	0					
ANR	8466110	ReturnStatement	return pl_main_get_instance ( mem ) -> nocache ;	1403:4:51136:51177	8466107	0	True				
ANR	8466111	PtrMemberAccess	pl_main_get_instance ( mem ) -> nocache		8466107	0					
ANR	8466112	CallExpression	pl_main_get_instance ( mem )		8466107	0					
ANR	8466113	Callee	pl_main_get_instance		8466107	0					
ANR	8466114	Identifier	pl_main_get_instance		8466107	0					
ANR	8466115	ArgumentList	mem		8466107	1					
ANR	8466116	Argument	mem		8466107	0					
ANR	8466117	Identifier	mem		8466107	0					
ANR	8466118	Identifier	nocache		8466107	1					
ANR	8466119	ReturnType	bool		8466107	1					
ANR	8466120	Identifier	pl_main_get_nocache		8466107	2					
ANR	8466121	ParameterList	const gs_memory_t * mem		8466107	3					
ANR	8466122	Parameter	const gs_memory_t * mem	1401:25:51106:51127	8466107	0	True				
ANR	8466123	ParameterType	const gs_memory_t *		8466107	0					
ANR	8466124	Identifier	mem		8466107	1					
ANR	8466125	CFGEntryNode	ENTRY		8466107		True				
ANR	8466126	CFGExitNode	EXIT		8466107		True				
ANR	8466127	Symbol	mem		8466107						
ANR	8466128	Symbol	* pl_main_get_instance		8466107						
ANR	8466129	Symbol	pl_main_get_instance		8466107						
ANR	8466130	Symbol	pl_main_get_instance ( mem ) -> nocache		8466107						
ANR	8466131	Function	pl_main_get_page_set_on_command_line	1406:0:51182:51314							
ANR	8466132	FunctionDef	pl_main_get_page_set_on_command_line (const gs_memory_t * mem)		8466131	0					
ANR	8466133	CompoundStatement		1407:0:51248:51314	8466131	0					
ANR	8466134	ReturnStatement	return pl_main_get_instance ( mem ) -> page_set_on_command_line ;	1408:4:51254:51312	8466131	0	True				
ANR	8466135	PtrMemberAccess	pl_main_get_instance ( mem ) -> page_set_on_command_line		8466131	0					
ANR	8466136	CallExpression	pl_main_get_instance ( mem )		8466131	0					
ANR	8466137	Callee	pl_main_get_instance		8466131	0					
ANR	8466138	Identifier	pl_main_get_instance		8466131	0					
ANR	8466139	ArgumentList	mem		8466131	1					
ANR	8466140	Argument	mem		8466131	0					
ANR	8466141	Identifier	mem		8466131	0					
ANR	8466142	Identifier	page_set_on_command_line		8466131	1					
ANR	8466143	ReturnType	bool		8466131	1					
ANR	8466144	Identifier	pl_main_get_page_set_on_command_line		8466131	2					
ANR	8466145	ParameterList	const gs_memory_t * mem		8466131	3					
ANR	8466146	Parameter	const gs_memory_t * mem	1406:42:51224:51245	8466131	0	True				
ANR	8466147	ParameterType	const gs_memory_t *		8466131	0					
ANR	8466148	Identifier	mem		8466131	1					
ANR	8466149	CFGEntryNode	ENTRY		8466131		True				
ANR	8466150	CFGExitNode	EXIT		8466131		True				
ANR	8466151	Symbol	mem		8466131						
ANR	8466152	Symbol	pl_main_get_instance ( mem ) -> page_set_on_command_line		8466131						
ANR	8466153	Symbol	* pl_main_get_instance		8466131						
ANR	8466154	Symbol	pl_main_get_instance		8466131						
ANR	8466155	Function	pl_main_get_res_set_on_command_line	1411:0:51317:51447							
ANR	8466156	FunctionDef	pl_main_get_res_set_on_command_line (const gs_memory_t * mem)		8466155	0					
ANR	8466157	CompoundStatement		1412:0:51382:51447	8466155	0					
ANR	8466158	ReturnStatement	return pl_main_get_instance ( mem ) -> res_set_on_command_line ;	1413:4:51388:51445	8466155	0	True				
ANR	8466159	PtrMemberAccess	pl_main_get_instance ( mem ) -> res_set_on_command_line		8466155	0					
ANR	8466160	CallExpression	pl_main_get_instance ( mem )		8466155	0					
ANR	8466161	Callee	pl_main_get_instance		8466155	0					
ANR	8466162	Identifier	pl_main_get_instance		8466155	0					
ANR	8466163	ArgumentList	mem		8466155	1					
ANR	8466164	Argument	mem		8466155	0					
ANR	8466165	Identifier	mem		8466155	0					
ANR	8466166	Identifier	res_set_on_command_line		8466155	1					
ANR	8466167	ReturnType	bool		8466155	1					
ANR	8466168	Identifier	pl_main_get_res_set_on_command_line		8466155	2					
ANR	8466169	ParameterList	const gs_memory_t * mem		8466155	3					
ANR	8466170	Parameter	const gs_memory_t * mem	1411:41:51358:51379	8466155	0	True				
ANR	8466171	ParameterType	const gs_memory_t *		8466155	0					
ANR	8466172	Identifier	mem		8466155	1					
ANR	8466173	CFGEntryNode	ENTRY		8466155		True				
ANR	8466174	CFGExitNode	EXIT		8466155		True				
ANR	8466175	Symbol	mem		8466155						
ANR	8466176	Symbol	pl_main_get_instance ( mem ) -> res_set_on_command_line		8466155						
ANR	8466177	Symbol	* pl_main_get_instance		8466155						
ANR	8466178	Symbol	pl_main_get_instance		8466155						
ANR	8466179	Function	pl_main_get_high_level_device	1416:0:51450:51568							
ANR	8466180	FunctionDef	pl_main_get_high_level_device (const gs_memory_t * mem)		8466179	0					
ANR	8466181	CompoundStatement		1417:0:51509:51568	8466179	0					
ANR	8466182	ReturnStatement	return pl_main_get_instance ( mem ) -> high_level_device ;	1418:4:51515:51566	8466179	0	True				
ANR	8466183	PtrMemberAccess	pl_main_get_instance ( mem ) -> high_level_device		8466179	0					
ANR	8466184	CallExpression	pl_main_get_instance ( mem )		8466179	0					
ANR	8466185	Callee	pl_main_get_instance		8466179	0					
ANR	8466186	Identifier	pl_main_get_instance		8466179	0					
ANR	8466187	ArgumentList	mem		8466179	1					
ANR	8466188	Argument	mem		8466179	0					
ANR	8466189	Identifier	mem		8466179	0					
ANR	8466190	Identifier	high_level_device		8466179	1					
ANR	8466191	ReturnType	bool		8466179	1					
ANR	8466192	Identifier	pl_main_get_high_level_device		8466179	2					
ANR	8466193	ParameterList	const gs_memory_t * mem		8466179	3					
ANR	8466194	Parameter	const gs_memory_t * mem	1416:35:51485:51506	8466179	0	True				
ANR	8466195	ParameterType	const gs_memory_t *		8466179	0					
ANR	8466196	Identifier	mem		8466179	1					
ANR	8466197	CFGEntryNode	ENTRY		8466179		True				
ANR	8466198	CFGExitNode	EXIT		8466179		True				
ANR	8466199	Symbol	mem		8466179						
ANR	8466200	Symbol	pl_main_get_instance ( mem ) -> high_level_device		8466179						
ANR	8466201	Symbol	* pl_main_get_instance		8466179						
ANR	8466202	Symbol	pl_main_get_instance		8466179						
ANR	8466203	Function	pl_main_get_scanconverter	1421:0:51571:51681							
ANR	8466204	FunctionDef	pl_main_get_scanconverter (const gs_memory_t * mem)		8466203	0					
ANR	8466205	CompoundStatement		1422:0:51626:51681	8466203	0					
ANR	8466206	ReturnStatement	return pl_main_get_instance ( mem ) -> scanconverter ;	1423:4:51632:51679	8466203	0	True				
ANR	8466207	PtrMemberAccess	pl_main_get_instance ( mem ) -> scanconverter		8466203	0					
ANR	8466208	CallExpression	pl_main_get_instance ( mem )		8466203	0					
ANR	8466209	Callee	pl_main_get_instance		8466203	0					
ANR	8466210	Identifier	pl_main_get_instance		8466203	0					
ANR	8466211	ArgumentList	mem		8466203	1					
ANR	8466212	Argument	mem		8466203	0					
ANR	8466213	Identifier	mem		8466203	0					
ANR	8466214	Identifier	scanconverter		8466203	1					
ANR	8466215	ReturnType	bool		8466203	1					
ANR	8466216	Identifier	pl_main_get_scanconverter		8466203	2					
ANR	8466217	ParameterList	const gs_memory_t * mem		8466203	3					
ANR	8466218	Parameter	const gs_memory_t * mem	1421:31:51602:51623	8466203	0	True				
ANR	8466219	ParameterType	const gs_memory_t *		8466203	0					
ANR	8466220	Identifier	mem		8466203	1					
ANR	8466221	CFGEntryNode	ENTRY		8466203		True				
ANR	8466222	CFGExitNode	EXIT		8466203		True				
ANR	8466223	Symbol	mem		8466203						
ANR	8466224	Symbol	pl_main_get_instance ( mem ) -> scanconverter		8466203						
ANR	8466225	Symbol	* pl_main_get_instance		8466203						
ANR	8466226	Symbol	pl_main_get_instance		8466203						
ANR	8466227	Function	pl_set_icc_params	1426:0:51684:52546							
ANR	8466228	FunctionDef	"pl_set_icc_params (const gs_memory_t * mem , gs_gstate * pgs)"		8466227	0					
ANR	8466229	CompoundStatement		1428:0:51746:52546	8466227	0					
ANR	8466230	IdentifierDeclStatement	pl_main_instance_t * minst = pl_main_get_instance ( mem ) ;	1429:4:51752:51805	8466227	0	True				
ANR	8466231	IdentifierDecl	* minst = pl_main_get_instance ( mem )		8466227	0					
ANR	8466232	IdentifierDeclType	pl_main_instance_t *		8466227	0					
ANR	8466233	Identifier	minst		8466227	1					
ANR	8466234	AssignmentExpression	* minst = pl_main_get_instance ( mem )		8466227	2		=			
ANR	8466235	Identifier	minst		8466227	0					
ANR	8466236	CallExpression	pl_main_get_instance ( mem )		8466227	1					
ANR	8466237	Callee	pl_main_get_instance		8466227	0					
ANR	8466238	Identifier	pl_main_get_instance		8466227	0					
ANR	8466239	ArgumentList	mem		8466227	1					
ANR	8466240	Argument	mem		8466227	0					
ANR	8466241	Identifier	mem		8466227	0					
ANR	8466242	IdentifierDeclStatement	gs_param_string p ;	1430:4:51811:51828	8466227	1	True				
ANR	8466243	IdentifierDecl	p		8466227	0					
ANR	8466244	IdentifierDeclType	gs_param_string		8466227	0					
ANR	8466245	Identifier	p		8466227	1					
ANR	8466246	IdentifierDeclStatement	int code = 0 ;	1431:4:51834:51846	8466227	2	True				
ANR	8466247	IdentifierDecl	code = 0		8466227	0					
ANR	8466248	IdentifierDeclType	int		8466227	0					
ANR	8466249	Identifier	code		8466227	1					
ANR	8466250	AssignmentExpression	code = 0		8466227	2		=			
ANR	8466251	Identifier	code		8466227	0					
ANR	8466252	PrimaryExpression	0		8466227	1					
ANR	8466253	IfStatement	if ( minst -> pdefault_gray_icc )		8466227	3					
ANR	8466254	Condition	minst -> pdefault_gray_icc	1433:8:51861:51884	8466227	0	True				
ANR	8466255	PtrMemberAccess	minst -> pdefault_gray_icc		8466227	0					
ANR	8466256	Identifier	minst		8466227	0					
ANR	8466257	Identifier	pdefault_gray_icc		8466227	1					
ANR	8466258	CompoundStatement		6:34:140:140	8466227	1					
ANR	8466259	ExpressionStatement	"param_string_from_transient_string ( p , minst -> pdefault_gray_icc )"	1434:8:51897:51960	8466227	0	True				
ANR	8466260	CallExpression	"param_string_from_transient_string ( p , minst -> pdefault_gray_icc )"		8466227	0					
ANR	8466261	Callee	param_string_from_transient_string		8466227	0					
ANR	8466262	Identifier	param_string_from_transient_string		8466227	0					
ANR	8466263	ArgumentList	p		8466227	1					
ANR	8466264	Argument	p		8466227	0					
ANR	8466265	Identifier	p		8466227	0					
ANR	8466266	Argument	minst -> pdefault_gray_icc		8466227	1					
ANR	8466267	PtrMemberAccess	minst -> pdefault_gray_icc		8466227	0					
ANR	8466268	Identifier	minst		8466227	0					
ANR	8466269	Identifier	pdefault_gray_icc		8466227	1					
ANR	8466270	ExpressionStatement	"code = gs_setdefaultgrayicc ( pgs , & p )"	1435:8:51970:52006	8466227	1	True				
ANR	8466271	AssignmentExpression	"code = gs_setdefaultgrayicc ( pgs , & p )"		8466227	0		=			
ANR	8466272	Identifier	code		8466227	0					
ANR	8466273	CallExpression	"gs_setdefaultgrayicc ( pgs , & p )"		8466227	1					
ANR	8466274	Callee	gs_setdefaultgrayicc		8466227	0					
ANR	8466275	Identifier	gs_setdefaultgrayicc		8466227	0					
ANR	8466276	ArgumentList	pgs		8466227	1					
ANR	8466277	Argument	pgs		8466227	0					
ANR	8466278	Identifier	pgs		8466227	0					
ANR	8466279	Argument	& p		8466227	1					
ANR	8466280	UnaryOperationExpression	& p		8466227	0					
ANR	8466281	UnaryOperator	&		8466227	0					
ANR	8466282	Identifier	p		8466227	1					
ANR	8466283	IfStatement	if ( code < 0 )		8466227	2					
ANR	8466284	Condition	code < 0	1436:12:52020:52027	8466227	0	True				
ANR	8466285	RelationalExpression	code < 0		8466227	0		<			
ANR	8466286	Identifier	code		8466227	0					
ANR	8466287	PrimaryExpression	0		8466227	1					
ANR	8466288	ReturnStatement	return gs_throw_code ( gs_error_Fatal ) ;	1437:12:52042:52078	8466227	1	True				
ANR	8466289	CallExpression	gs_throw_code ( gs_error_Fatal )		8466227	0					
ANR	8466290	Callee	gs_throw_code		8466227	0					
ANR	8466291	Identifier	gs_throw_code		8466227	0					
ANR	8466292	ArgumentList	gs_error_Fatal		8466227	1					
ANR	8466293	Argument	gs_error_Fatal		8466227	0					
ANR	8466294	Identifier	gs_error_Fatal		8466227	0					
ANR	8466295	IfStatement	if ( minst -> pdefault_rgb_icc )		8466227	4					
ANR	8466296	Condition	minst -> pdefault_rgb_icc	1440:8:52095:52117	8466227	0	True				
ANR	8466297	PtrMemberAccess	minst -> pdefault_rgb_icc		8466227	0					
ANR	8466298	Identifier	minst		8466227	0					
ANR	8466299	Identifier	pdefault_rgb_icc		8466227	1					
ANR	8466300	CompoundStatement		13:33:373:373	8466227	1					
ANR	8466301	ExpressionStatement	"param_string_from_transient_string ( p , minst -> pdefault_rgb_icc )"	1441:8:52130:52192	8466227	0	True				
ANR	8466302	CallExpression	"param_string_from_transient_string ( p , minst -> pdefault_rgb_icc )"		8466227	0					
ANR	8466303	Callee	param_string_from_transient_string		8466227	0					
ANR	8466304	Identifier	param_string_from_transient_string		8466227	0					
ANR	8466305	ArgumentList	p		8466227	1					
ANR	8466306	Argument	p		8466227	0					
ANR	8466307	Identifier	p		8466227	0					
ANR	8466308	Argument	minst -> pdefault_rgb_icc		8466227	1					
ANR	8466309	PtrMemberAccess	minst -> pdefault_rgb_icc		8466227	0					
ANR	8466310	Identifier	minst		8466227	0					
ANR	8466311	Identifier	pdefault_rgb_icc		8466227	1					
ANR	8466312	ExpressionStatement	"code = gs_setdefaultrgbicc ( pgs , & p )"	1442:8:52202:52237	8466227	1	True				
ANR	8466313	AssignmentExpression	"code = gs_setdefaultrgbicc ( pgs , & p )"		8466227	0		=			
ANR	8466314	Identifier	code		8466227	0					
ANR	8466315	CallExpression	"gs_setdefaultrgbicc ( pgs , & p )"		8466227	1					
ANR	8466316	Callee	gs_setdefaultrgbicc		8466227	0					
ANR	8466317	Identifier	gs_setdefaultrgbicc		8466227	0					
ANR	8466318	ArgumentList	pgs		8466227	1					
ANR	8466319	Argument	pgs		8466227	0					
ANR	8466320	Identifier	pgs		8466227	0					
ANR	8466321	Argument	& p		8466227	1					
ANR	8466322	UnaryOperationExpression	& p		8466227	0					
ANR	8466323	UnaryOperator	&		8466227	0					
ANR	8466324	Identifier	p		8466227	1					
ANR	8466325	IfStatement	if ( code < 0 )		8466227	2					
ANR	8466326	Condition	code < 0	1443:12:52251:52258	8466227	0	True				
ANR	8466327	RelationalExpression	code < 0		8466227	0		<			
ANR	8466328	Identifier	code		8466227	0					
ANR	8466329	PrimaryExpression	0		8466227	1					
ANR	8466330	ReturnStatement	return gs_throw_code ( gs_error_Fatal ) ;	1444:12:52273:52309	8466227	1	True				
ANR	8466331	CallExpression	gs_throw_code ( gs_error_Fatal )		8466227	0					
ANR	8466332	Callee	gs_throw_code		8466227	0					
ANR	8466333	Identifier	gs_throw_code		8466227	0					
ANR	8466334	ArgumentList	gs_error_Fatal		8466227	1					
ANR	8466335	Argument	gs_error_Fatal		8466227	0					
ANR	8466336	Identifier	gs_error_Fatal		8466227	0					
ANR	8466337	IfStatement	if ( minst -> piccdir )		8466227	5					
ANR	8466338	Condition	minst -> piccdir	1447:8:52326:52339	8466227	0	True				
ANR	8466339	PtrMemberAccess	minst -> piccdir		8466227	0					
ANR	8466340	Identifier	minst		8466227	0					
ANR	8466341	Identifier	piccdir		8466227	1					
ANR	8466342	CompoundStatement		20:24:595:595	8466227	1					
ANR	8466343	ExpressionStatement	"param_string_from_transient_string ( p , minst -> piccdir )"	1448:8:52352:52405	8466227	0	True				
ANR	8466344	CallExpression	"param_string_from_transient_string ( p , minst -> piccdir )"		8466227	0					
ANR	8466345	Callee	param_string_from_transient_string		8466227	0					
ANR	8466346	Identifier	param_string_from_transient_string		8466227	0					
ANR	8466347	ArgumentList	p		8466227	1					
ANR	8466348	Argument	p		8466227	0					
ANR	8466349	Identifier	p		8466227	0					
ANR	8466350	Argument	minst -> piccdir		8466227	1					
ANR	8466351	PtrMemberAccess	minst -> piccdir		8466227	0					
ANR	8466352	Identifier	minst		8466227	0					
ANR	8466353	Identifier	piccdir		8466227	1					
ANR	8466354	ExpressionStatement	"code = gs_seticcdirectory ( pgs , & p )"	1449:8:52415:52449	8466227	1	True				
ANR	8466355	AssignmentExpression	"code = gs_seticcdirectory ( pgs , & p )"		8466227	0		=			
ANR	8466356	Identifier	code		8466227	0					
ANR	8466357	CallExpression	"gs_seticcdirectory ( pgs , & p )"		8466227	1					
ANR	8466358	Callee	gs_seticcdirectory		8466227	0					
ANR	8466359	Identifier	gs_seticcdirectory		8466227	0					
ANR	8466360	ArgumentList	pgs		8466227	1					
ANR	8466361	Argument	pgs		8466227	0					
ANR	8466362	Identifier	pgs		8466227	0					
ANR	8466363	Argument	& p		8466227	1					
ANR	8466364	UnaryOperationExpression	& p		8466227	0					
ANR	8466365	UnaryOperator	&		8466227	0					
ANR	8466366	Identifier	p		8466227	1					
ANR	8466367	IfStatement	if ( code < 0 )		8466227	2					
ANR	8466368	Condition	code < 0	1450:12:52463:52470	8466227	0	True				
ANR	8466369	RelationalExpression	code < 0		8466227	0		<			
ANR	8466370	Identifier	code		8466227	0					
ANR	8466371	PrimaryExpression	0		8466227	1					
ANR	8466372	ReturnStatement	return gs_throw_code ( gs_error_Fatal ) ;	1451:12:52485:52521	8466227	1	True				
ANR	8466373	CallExpression	gs_throw_code ( gs_error_Fatal )		8466227	0					
ANR	8466374	Callee	gs_throw_code		8466227	0					
ANR	8466375	Identifier	gs_throw_code		8466227	0					
ANR	8466376	ArgumentList	gs_error_Fatal		8466227	1					
ANR	8466377	Argument	gs_error_Fatal		8466227	0					
ANR	8466378	Identifier	gs_error_Fatal		8466227	0					
ANR	8466379	ReturnStatement	return code ;	1453:4:52533:52544	8466227	6	True				
ANR	8466380	Identifier	code		8466227	0					
ANR	8466381	ReturnType	int		8466227	1					
ANR	8466382	Identifier	pl_set_icc_params		8466227	2					
ANR	8466383	ParameterList	"const gs_memory_t * mem , gs_gstate * pgs"		8466227	3					
ANR	8466384	Parameter	const gs_memory_t * mem	1427:18:51706:51727	8466227	0	True				
ANR	8466385	ParameterType	const gs_memory_t *		8466227	0					
ANR	8466386	Identifier	mem		8466227	1					
ANR	8466387	Parameter	gs_gstate * pgs	1427:42:51730:51743	8466227	1	True				
ANR	8466388	ParameterType	gs_gstate *		8466227	0					
ANR	8466389	Identifier	pgs		8466227	1					
ANR	8466390	CFGEntryNode	ENTRY		8466227		True				
ANR	8466391	CFGExitNode	EXIT		8466227		True				
ANR	8466392	Symbol	gs_error_Fatal		8466227						
ANR	8466393	Symbol	minst		8466227						
ANR	8466394	Symbol	code		8466227						
ANR	8466395	Symbol	gs_setdefaultrgbicc		8466227						
ANR	8466396	Symbol	pl_main_get_instance		8466227						
ANR	8466397	Symbol	* minst		8466227						
ANR	8466398	Symbol	p		8466227						
ANR	8466399	Symbol	minst -> pdefault_gray_icc		8466227						
ANR	8466400	Symbol	gs_throw_code		8466227						
ANR	8466401	Symbol	gs_setdefaultgrayicc		8466227						
ANR	8466402	Symbol	minst -> piccdir		8466227						
ANR	8466403	Symbol	mem		8466227						
ANR	8466404	Symbol	gs_seticcdirectory		8466227						
ANR	8466405	Symbol	minst -> pdefault_rgb_icc		8466227						
ANR	8466406	Symbol	& p		8466227						
ANR	8466407	Symbol	pgs		8466227						
ANR	8466408	Function	pl_finish_page	1456:0:52549:53185							
ANR	8466409	FunctionDef	"pl_finish_page (pl_main_instance_t * pmi , gs_gstate * pgs , int num_copies , int flush)"		8466408	0					
ANR	8466410	CompoundStatement		1458:0:52638:53185	8466408	0					
ANR	8466411	IdentifierDeclStatement	int code = 0 ;	1459:4:52644:52663	8466408	0	True				
ANR	8466412	IdentifierDecl	code = 0		8466408	0					
ANR	8466413	IdentifierDeclType	int		8466408	0					
ANR	8466414	Identifier	code		8466408	1					
ANR	8466415	AssignmentExpression	code = 0		8466408	2		=			
ANR	8466416	Identifier	code		8466408	0					
ANR	8466417	PrimaryExpression	0		8466408	1					
ANR	8466418	IdentifierDeclStatement	gx_device * pdev = pmi -> device ;	1460:4:52669:52698	8466408	1	True				
ANR	8466419	IdentifierDecl	* pdev = pmi -> device		8466408	0					
ANR	8466420	IdentifierDeclType	gx_device *		8466408	0					
ANR	8466421	Identifier	pdev		8466408	1					
ANR	8466422	AssignmentExpression	* pdev = pmi -> device		8466408	2		=			
ANR	8466423	Identifier	pdev		8466408	0					
ANR	8466424	PtrMemberAccess	pmi -> device		8466408	1					
ANR	8466425	Identifier	pmi		8466408	0					
ANR	8466426	Identifier	device		8466408	1					
ANR	8466427	IfStatement	if ( gs_debug_c ( ':' ) )		8466408	2					
ANR	8466428	Condition	gs_debug_c ( ':' )	1463:8:52735:52749	8466408	0	True				
ANR	8466429	CallExpression	gs_debug_c ( ':' )		8466408	0					
ANR	8466430	Callee	gs_debug_c		8466408	0					
ANR	8466431	Identifier	gs_debug_c		8466408	0					
ANR	8466432	ArgumentList	':'		8466408	1					
ANR	8466433	Argument	':'		8466408	0					
ANR	8466434	PrimaryExpression	':'		8466408	0					
ANR	8466435	ExpressionStatement	"pl_print_usage ( pmi , ""parse done :"" )"	1464:8:52760:52795	8466408	1	True				
ANR	8466436	CallExpression	"pl_print_usage ( pmi , ""parse done :"" )"		8466408	0					
ANR	8466437	Callee	pl_print_usage		8466408	0					
ANR	8466438	Identifier	pl_print_usage		8466408	0					
ANR	8466439	ArgumentList	pmi		8466408	1					
ANR	8466440	Argument	pmi		8466408	0					
ANR	8466441	Identifier	pmi		8466408	0					
ANR	8466442	Argument	"""parse done :"""		8466408	1					
ANR	8466443	PrimaryExpression	"""parse done :"""		8466408	0					
ANR	8466444	ExpressionStatement	"code = gs_output_page ( pgs , num_copies , flush )"	1465:4:52801:52846	8466408	3	True				
ANR	8466445	AssignmentExpression	"code = gs_output_page ( pgs , num_copies , flush )"		8466408	0		=			
ANR	8466446	Identifier	code		8466408	0					
ANR	8466447	CallExpression	"gs_output_page ( pgs , num_copies , flush )"		8466408	1					
ANR	8466448	Callee	gs_output_page		8466408	0					
ANR	8466449	Identifier	gs_output_page		8466408	0					
ANR	8466450	ArgumentList	pgs		8466408	1					
ANR	8466451	Argument	pgs		8466408	0					
ANR	8466452	Identifier	pgs		8466408	0					
ANR	8466453	Argument	num_copies		8466408	1					
ANR	8466454	Identifier	num_copies		8466408	0					
ANR	8466455	Argument	flush		8466408	2					
ANR	8466456	Identifier	flush		8466408	0					
ANR	8466457	IfStatement	if ( code < 0 )		8466408	4					
ANR	8466458	Condition	code < 0	1466:8:52856:52863	8466408	0	True				
ANR	8466459	RelationalExpression	code < 0		8466408	0		<			
ANR	8466460	Identifier	code		8466408	0					
ANR	8466461	PrimaryExpression	0		8466408	1					
ANR	8466462	ReturnStatement	return code ;	1467:8:52874:52885	8466408	1	True				
ANR	8466463	Identifier	code		8466408	0					
ANR	8466464	IfStatement	if ( pmi -> pause )		8466408	5					
ANR	8466465	Condition	pmi -> pause	1469:8:52896:52905	8466408	0	True				
ANR	8466466	PtrMemberAccess	pmi -> pause		8466408	0					
ANR	8466467	Identifier	pmi		8466408	0					
ANR	8466468	Identifier	pause		8466408	1					
ANR	8466469	CompoundStatement		13:8:279:295	8466408	1					
ANR	8466470	IdentifierDeclStatement	char strbuf [ 256 ] ;	1470:8:52918:52934	8466408	0	True				
ANR	8466471	IdentifierDecl	strbuf [ 256 ]		8466408	0					
ANR	8466472	IdentifierDeclType	char [ 256 ]		8466408	0					
ANR	8466473	Identifier	strbuf		8466408	1					
ANR	8466474	PrimaryExpression	256		8466408	2					
ANR	8466475	ExpressionStatement	"gs_sprintf ( strbuf , ""End of page %d, press <enter> to continue.\\n"" , pdev -> PageCount )"	1472:8:52945:53044	8466408	1	True				
ANR	8466476	CallExpression	"gs_sprintf ( strbuf , ""End of page %d, press <enter> to continue.\\n"" , pdev -> PageCount )"		8466408	0					
ANR	8466477	Callee	gs_sprintf		8466408	0					
ANR	8466478	Identifier	gs_sprintf		8466408	0					
ANR	8466479	ArgumentList	strbuf		8466408	1					
ANR	8466480	Argument	strbuf		8466408	0					
ANR	8466481	Identifier	strbuf		8466408	0					
ANR	8466482	Argument	"""End of page %d, press <enter> to continue.\\n"""		8466408	1					
ANR	8466483	PrimaryExpression	"""End of page %d, press <enter> to continue.\\n"""		8466408	0					
ANR	8466484	Argument	pdev -> PageCount		8466408	2					
ANR	8466485	PtrMemberAccess	pdev -> PageCount		8466408	0					
ANR	8466486	Identifier	pdev		8466408	0					
ANR	8466487	Identifier	PageCount		8466408	1					
ANR	8466488	ExpressionStatement	"pl_log_string ( pmi -> memory , strbuf , 1 )"	1474:8:53054:53091	8466408	2	True				
ANR	8466489	CallExpression	"pl_log_string ( pmi -> memory , strbuf , 1 )"		8466408	0					
ANR	8466490	Callee	pl_log_string		8466408	0					
ANR	8466491	Identifier	pl_log_string		8466408	0					
ANR	8466492	ArgumentList	pmi -> memory		8466408	1					
ANR	8466493	Argument	pmi -> memory		8466408	0					
ANR	8466494	PtrMemberAccess	pmi -> memory		8466408	0					
ANR	8466495	Identifier	pmi		8466408	0					
ANR	8466496	Identifier	memory		8466408	1					
ANR	8466497	Argument	strbuf		8466408	1					
ANR	8466498	Identifier	strbuf		8466408	0					
ANR	8466499	Argument	1		8466408	2					
ANR	8466500	PrimaryExpression	1		8466408	0					
ANR	8466501	ElseStatement	else		8466408	0					
ANR	8466502	IfStatement	if ( gs_debug_c ( ':' ) )		8466408	0					
ANR	8466503	Condition	gs_debug_c ( ':' )	1475:15:53108:53122	8466408	0	True				
ANR	8466504	CallExpression	gs_debug_c ( ':' )		8466408	0					
ANR	8466505	Callee	gs_debug_c		8466408	0					
ANR	8466506	Identifier	gs_debug_c		8466408	0					
ANR	8466507	ArgumentList	':'		8466408	1					
ANR	8466508	Argument	':'		8466408	0					
ANR	8466509	PrimaryExpression	':'		8466408	0					
ANR	8466510	ExpressionStatement	"pl_print_usage ( pmi , ""render done :"" )"	1476:8:53133:53169	8466408	1	True				
ANR	8466511	CallExpression	"pl_print_usage ( pmi , ""render done :"" )"		8466408	0					
ANR	8466512	Callee	pl_print_usage		8466408	0					
ANR	8466513	Identifier	pl_print_usage		8466408	0					
ANR	8466514	ArgumentList	pmi		8466408	1					
ANR	8466515	Argument	pmi		8466408	0					
ANR	8466516	Identifier	pmi		8466408	0					
ANR	8466517	Argument	"""render done :"""		8466408	1					
ANR	8466518	PrimaryExpression	"""render done :"""		8466408	0					
ANR	8466519	ReturnStatement	return 0 ;	1477:4:53175:53183	8466408	6	True				
ANR	8466520	PrimaryExpression	0		8466408	0					
ANR	8466521	ReturnType	int		8466408	1					
ANR	8466522	Identifier	pl_finish_page		8466408	2					
ANR	8466523	ParameterList	"pl_main_instance_t * pmi , gs_gstate * pgs , int num_copies , int flush"		8466408	3					
ANR	8466524	Parameter	pl_main_instance_t * pmi	1457:15:52568:52591	8466408	0	True				
ANR	8466525	ParameterType	pl_main_instance_t *		8466408	0					
ANR	8466526	Identifier	pmi		8466408	1					
ANR	8466527	Parameter	gs_gstate * pgs	1457:41:52594:52608	8466408	1	True				
ANR	8466528	ParameterType	gs_gstate *		8466408	0					
ANR	8466529	Identifier	pgs		8466408	1					
ANR	8466530	Parameter	int num_copies	1457:58:52611:52624	8466408	2	True				
ANR	8466531	ParameterType	int		8466408	0					
ANR	8466532	Identifier	num_copies		8466408	1					
ANR	8466533	Parameter	int flush	1457:74:52627:52635	8466408	3	True				
ANR	8466534	ParameterType	int		8466408	0					
ANR	8466535	Identifier	flush		8466408	1					
ANR	8466536	CFGEntryNode	ENTRY		8466408		True				
ANR	8466537	CFGExitNode	EXIT		8466408		True				
ANR	8466538	Symbol	code		8466408						
ANR	8466539	Symbol	gs_output_page		8466408						
ANR	8466540	Symbol	pmi -> device		8466408						
ANR	8466541	Symbol	num_copies		8466408						
ANR	8466542	Symbol	pmi -> pause		8466408						
ANR	8466543	Symbol	pmi		8466408						
ANR	8466544	Symbol	pmi -> memory		8466408						
ANR	8466545	Symbol	pdev		8466408						
ANR	8466546	Symbol	flush		8466408						
ANR	8466547	Symbol	pdev -> PageCount		8466408						
ANR	8466548	Symbol	* pmi		8466408						
ANR	8466549	Symbol	strbuf		8466408						
ANR	8466550	Symbol	* pdev		8466408						
ANR	8466551	Symbol	gs_debug_c		8466408						
ANR	8466552	Symbol	pgs		8466408						
