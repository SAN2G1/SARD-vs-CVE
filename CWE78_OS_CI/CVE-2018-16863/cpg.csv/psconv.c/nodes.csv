command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8737003	File	data/converged/CVE-2018-16863_ghostpdl/psconv.c								
ANR	8737004	DeclStmt									
ANR	8737005	Decl							const FT_Char	const FT_Char [ 128 ]	ft_char_table
ANR	8737006	DeclStmt									
ANR	8737007	Decl							const FT_Char	const FT_Char [ 128 ]	ft_char_table
ANR	8737008	Function	PS_Conv_Strtol	84:2:3575:4909							
ANR	8737009	FunctionDef	"PS_Conv_Strtol (FT_Byte * * cursor , FT_Byte * limit , FT_Long base)"		8737008	0					
ANR	8737010	CompoundStatement		87:2:3684:4909	8737008	0					
ANR	8737011	IdentifierDeclStatement	FT_Byte * p = * cursor ;	88:4:3690:3711	8737008	0	True				
ANR	8737012	IdentifierDecl	* p = * cursor		8737008	0					
ANR	8737013	IdentifierDeclType	FT_Byte *		8737008	0					
ANR	8737014	Identifier	p		8737008	1					
ANR	8737015	AssignmentExpression	* p = * cursor		8737008	2		=			
ANR	8737016	Identifier	p		8737008	0					
ANR	8737017	UnaryOperationExpression	* cursor		8737008	1					
ANR	8737018	UnaryOperator	*		8737008	0					
ANR	8737019	Identifier	cursor		8737008	1					
ANR	8737020	IdentifierDeclStatement	FT_Long num = 0 ;	90:4:3718:3745	8737008	1	True				
ANR	8737021	IdentifierDecl	num = 0		8737008	0					
ANR	8737022	IdentifierDeclType	FT_Long		8737008	0					
ANR	8737023	Identifier	num		8737008	1					
ANR	8737024	AssignmentExpression	num = 0		8737008	2		=			
ANR	8737025	Identifier	num		8737008	0					
ANR	8737026	PrimaryExpression	0		8737008	1					
ANR	8737027	IdentifierDeclStatement	FT_Bool sign = 0 ;	91:4:3751:3778	8737008	2	True				
ANR	8737028	IdentifierDecl	sign = 0		8737008	0					
ANR	8737029	IdentifierDeclType	FT_Bool		8737008	0					
ANR	8737030	Identifier	sign		8737008	1					
ANR	8737031	AssignmentExpression	sign = 0		8737008	2		=			
ANR	8737032	Identifier	sign		8737008	0					
ANR	8737033	PrimaryExpression	0		8737008	1					
ANR	8737034	IdentifierDeclStatement	FT_Bool have_overflow = 0 ;	92:4:3784:3811	8737008	3	True				
ANR	8737035	IdentifierDecl	have_overflow = 0		8737008	0					
ANR	8737036	IdentifierDeclType	FT_Bool		8737008	0					
ANR	8737037	Identifier	have_overflow		8737008	1					
ANR	8737038	AssignmentExpression	have_overflow = 0		8737008	2		=			
ANR	8737039	Identifier	have_overflow		8737008	0					
ANR	8737040	PrimaryExpression	0		8737008	1					
ANR	8737041	IdentifierDeclStatement	FT_Long num_limit ;	94:4:3818:3837	8737008	4	True				
ANR	8737042	IdentifierDecl	num_limit		8737008	0					
ANR	8737043	IdentifierDeclType	FT_Long		8737008	0					
ANR	8737044	Identifier	num_limit		8737008	1					
ANR	8737045	IdentifierDeclStatement	FT_Char c_limit ;	95:4:3843:3860	8737008	5	True				
ANR	8737046	IdentifierDecl	c_limit		8737008	0					
ANR	8737047	IdentifierDeclType	FT_Char		8737008	0					
ANR	8737048	Identifier	c_limit		8737008	1					
ANR	8737049	IfStatement	if ( p >= limit )		8737008	6					
ANR	8737050	Condition	p >= limit	98:9:3873:3882	8737008	0	True				
ANR	8737051	RelationalExpression	p >= limit		8737008	0		>=			
ANR	8737052	Identifier	p		8737008	0					
ANR	8737053	Identifier	limit		8737008	1					
ANR	8737054	GotoStatement	goto Bad ;	99:6:3892:3900	8737008	1	True				
ANR	8737055	Identifier	Bad		8737008	0					
ANR	8737056	IfStatement	if ( base < 2 || base > 36 )		8737008	7					
ANR	8737057	Condition	base < 2 || base > 36	101:9:3912:3932	8737008	0	True				
ANR	8737058	OrExpression	base < 2 || base > 36		8737008	0		||			
ANR	8737059	RelationalExpression	base < 2		8737008	0		<			
ANR	8737060	Identifier	base		8737008	0					
ANR	8737061	PrimaryExpression	2		8737008	1					
ANR	8737062	RelationalExpression	base > 36		8737008	1		>			
ANR	8737063	Identifier	base		8737008	0					
ANR	8737064	PrimaryExpression	36		8737008	1					
ANR	8737065	CompoundStatement		16:4:255:255	8737008	1					
ANR	8737066	ExpressionStatement	"FT_TRACE4 ( ( ""!!!INVALID BASE:!!!"" ) )"	103:6:3948:3984	8737008	0	True				
ANR	8737067	CallExpression	"FT_TRACE4 ( ( ""!!!INVALID BASE:!!!"" ) )"		8737008	0					
ANR	8737068	Callee	FT_TRACE4		8737008	0					
ANR	8737069	Identifier	FT_TRACE4		8737008	0					
ANR	8737070	ArgumentList	"""!!!INVALID BASE:!!!"""		8737008	1					
ANR	8737071	Argument	"""!!!INVALID BASE:!!!"""		8737008	0					
ANR	8737072	PrimaryExpression	"""!!!INVALID BASE:!!!"""		8737008	0					
ANR	8737073	ReturnStatement	return 0 ;	104:6:3992:4000	8737008	1	True				
ANR	8737074	PrimaryExpression	0		8737008	0					
ANR	8737075	IfStatement	if ( * p == '-' || * p == '+' )		8737008	8					
ANR	8737076	Condition	* p == '-' || * p == '+'	107:9:4018:4039	8737008	0	True				
ANR	8737077	OrExpression	* p == '-' || * p == '+'		8737008	0		||			
ANR	8737078	EqualityExpression	* p == '-'		8737008	0		==			
ANR	8737079	UnaryOperationExpression	* p		8737008	0					
ANR	8737080	UnaryOperator	*		8737008	0					
ANR	8737081	Identifier	p		8737008	1					
ANR	8737082	PrimaryExpression	'-'		8737008	1					
ANR	8737083	EqualityExpression	* p == '+'		8737008	1		==			
ANR	8737084	UnaryOperationExpression	* p		8737008	0					
ANR	8737085	UnaryOperator	*		8737008	0					
ANR	8737086	Identifier	p		8737008	1					
ANR	8737087	PrimaryExpression	'+'		8737008	1					
ANR	8737088	CompoundStatement		22:4:362:362	8737008	1					
ANR	8737089	ExpressionStatement	sign = FT_BOOL ( * p == '-' )	109:6:4055:4082	8737008	0	True				
ANR	8737090	AssignmentExpression	sign = FT_BOOL ( * p == '-' )		8737008	0		=			
ANR	8737091	Identifier	sign		8737008	0					
ANR	8737092	CallExpression	FT_BOOL ( * p == '-' )		8737008	1					
ANR	8737093	Callee	FT_BOOL		8737008	0					
ANR	8737094	Identifier	FT_BOOL		8737008	0					
ANR	8737095	ArgumentList	* p == '-'		8737008	1					
ANR	8737096	Argument	* p == '-'		8737008	0					
ANR	8737097	EqualityExpression	* p == '-'		8737008	0		==			
ANR	8737098	UnaryOperationExpression	* p		8737008	0					
ANR	8737099	UnaryOperator	*		8737008	0					
ANR	8737100	Identifier	p		8737008	1					
ANR	8737101	PrimaryExpression	'-'		8737008	1					
ANR	8737102	ExpressionStatement	p ++	111:6:4091:4094	8737008	1	True				
ANR	8737103	PostIncDecOperationExpression	p ++		8737008	0					
ANR	8737104	Identifier	p		8737008	0					
ANR	8737105	IncDec	++		8737008	1					
ANR	8737106	IfStatement	if ( p == limit )		8737008	2					
ANR	8737107	Condition	p == limit	112:11:4107:4116	8737008	0	True				
ANR	8737108	EqualityExpression	p == limit		8737008	0		==			
ANR	8737109	Identifier	p		8737008	0					
ANR	8737110	Identifier	limit		8737008	1					
ANR	8737111	GotoStatement	goto Bad ;	113:8:4128:4136	8737008	1	True				
ANR	8737112	Identifier	Bad		8737008	0					
ANR	8737113	IfStatement	if ( * p == '-' || * p == '+' )		8737008	3					
ANR	8737114	Condition	* p == '-' || * p == '+'	116:11:4192:4213	8737008	0	True				
ANR	8737115	OrExpression	* p == '-' || * p == '+'		8737008	0		||			
ANR	8737116	EqualityExpression	* p == '-'		8737008	0		==			
ANR	8737117	UnaryOperationExpression	* p		8737008	0					
ANR	8737118	UnaryOperator	*		8737008	0					
ANR	8737119	Identifier	p		8737008	1					
ANR	8737120	PrimaryExpression	'-'		8737008	1					
ANR	8737121	EqualityExpression	* p == '+'		8737008	1		==			
ANR	8737122	UnaryOperationExpression	* p		8737008	0					
ANR	8737123	UnaryOperator	*		8737008	0					
ANR	8737124	Identifier	p		8737008	1					
ANR	8737125	PrimaryExpression	'+'		8737008	1					
ANR	8737126	ReturnStatement	return 0 ;	117:8:4225:4233	8737008	1	True				
ANR	8737127	PrimaryExpression	0		8737008	0					
ANR	8737128	ExpressionStatement	num_limit = 0x7FFFFFFFL / base	120:4:4246:4276	8737008	9	True				
ANR	8737129	AssignmentExpression	num_limit = 0x7FFFFFFFL / base		8737008	0		=			
ANR	8737130	Identifier	num_limit		8737008	0					
ANR	8737131	MultiplicativeExpression	0x7FFFFFFFL / base		8737008	1		/			
ANR	8737132	PrimaryExpression	0x7FFFFFFFL		8737008	0					
ANR	8737133	Identifier	base		8737008	1					
ANR	8737134	ExpressionStatement	c_limit = ( FT_Char ) ( 0x7FFFFFFFL % base )	121:4:4282:4325	8737008	10	True				
ANR	8737135	AssignmentExpression	c_limit = ( FT_Char ) ( 0x7FFFFFFFL % base )		8737008	0		=			
ANR	8737136	Identifier	c_limit		8737008	0					
ANR	8737137	CastExpression	( FT_Char ) ( 0x7FFFFFFFL % base )		8737008	1					
ANR	8737138	CastTarget	FT_Char		8737008	0					
ANR	8737139	MultiplicativeExpression	0x7FFFFFFFL % base		8737008	1		%			
ANR	8737140	PrimaryExpression	0x7FFFFFFFL		8737008	0					
ANR	8737141	Identifier	base		8737008	1					
ANR	8737142	ForStatement	for ( ; p < limit ; p ++ )		8737008	11					
ANR	8737143	Condition	p < limit	123:12:4340:4348	8737008	0	True				
ANR	8737144	RelationalExpression	p < limit		8737008	0		<			
ANR	8737145	Identifier	p		8737008	0					
ANR	8737146	Identifier	limit		8737008	1					
ANR	8737147	PostIncDecOperationExpression	p ++	123:23:4351:4353	8737008	1	True				
ANR	8737148	Identifier	p		8737008	0					
ANR	8737149	IncDec	++		8737008	1					
ANR	8737150	CompoundStatement		39:6:684:694	8737008	2					
ANR	8737151	IdentifierDeclStatement	FT_Char c ;	125:6:4369:4379	8737008	0	True				
ANR	8737152	IdentifierDecl	c		8737008	0					
ANR	8737153	IdentifierDeclType	FT_Char		8737008	0					
ANR	8737154	Identifier	c		8737008	1					
ANR	8737155	Statement	if	128:6:4389:4390	8737008	1	True				
ANR	8737156	Statement	(	128:9:4392:4392	8737008	2	True				
ANR	8737157	Statement	IS_PS_SPACE	128:11:4394:4404	8737008	3	True				
ANR	8737158	Statement	(	128:22:4405:4405	8737008	4	True				
ANR	8737159	Statement	*	128:24:4407:4407	8737008	5	True				
ANR	8737160	Statement	p	128:25:4408:4408	8737008	6	True				
ANR	8737161	Statement	)	128:27:4410:4410	8737008	7	True				
ANR	8737162	Statement	||	128:29:4412:4413	8737008	8	True				
ANR	8737163	Statement	*	128:32:4415:4415	8737008	9	True				
ANR	8737164	Statement	p	128:33:4416:4416	8737008	10	True				
ANR	8737165	Statement	OP	128:35:4418:4419	8737008	11	True				
ANR	8737166	Statement	0x80	128:38:4421:4424	8737008	12	True				
ANR	8737167	Statement	)	128:43:4426:4426	8737008	13	True				
ANR	8737168	BreakStatement	break ;	129:8:4436:4441	8737008	14	True				
ANR	8737169	ExpressionStatement	c = ft_char_table [ * p & 0x7F ]	131:6:4450:4478	8737008	15	True				
ANR	8737170	AssignmentExpression	c = ft_char_table [ * p & 0x7F ]		8737008	0		=			
ANR	8737171	Identifier	c		8737008	0					
ANR	8737172	ArrayIndexing	ft_char_table [ * p & 0x7F ]		8737008	1					
ANR	8737173	Identifier	ft_char_table		8737008	0					
ANR	8737174	BitAndExpression	* p & 0x7F		8737008	1		&			
ANR	8737175	UnaryOperationExpression	* p		8737008	0					
ANR	8737176	UnaryOperator	*		8737008	0					
ANR	8737177	Identifier	p		8737008	1					
ANR	8737178	PrimaryExpression	0x7F		8737008	1					
ANR	8737179	IfStatement	if ( c < 0 || c >= base )		8737008	16					
ANR	8737180	Condition	c < 0 || c >= base	133:11:4492:4509	8737008	0	True				
ANR	8737181	OrExpression	c < 0 || c >= base		8737008	0		||			
ANR	8737182	RelationalExpression	c < 0		8737008	0		<			
ANR	8737183	Identifier	c		8737008	0					
ANR	8737184	PrimaryExpression	0		8737008	1					
ANR	8737185	RelationalExpression	c >= base		8737008	1		>=			
ANR	8737186	Identifier	c		8737008	0					
ANR	8737187	Identifier	base		8737008	1					
ANR	8737188	BreakStatement	break ;	134:8:4521:4526	8737008	1	True				
ANR	8737189	IfStatement	if ( num > num_limit || ( num == num_limit && c > c_limit ) )		8737008	17					
ANR	8737190	Condition	num > num_limit || ( num == num_limit && c > c_limit )	136:11:4540:4593	8737008	0	True				
ANR	8737191	OrExpression	num > num_limit || ( num == num_limit && c > c_limit )		8737008	0		||			
ANR	8737192	RelationalExpression	num > num_limit		8737008	0		>			
ANR	8737193	Identifier	num		8737008	0					
ANR	8737194	Identifier	num_limit		8737008	1					
ANR	8737195	AndExpression	num == num_limit && c > c_limit		8737008	1		&&			
ANR	8737196	EqualityExpression	num == num_limit		8737008	0		==			
ANR	8737197	Identifier	num		8737008	0					
ANR	8737198	Identifier	num_limit		8737008	1					
ANR	8737199	RelationalExpression	c > c_limit		8737008	1		>			
ANR	8737200	Identifier	c		8737008	0					
ANR	8737201	Identifier	c_limit		8737008	1					
ANR	8737202	ExpressionStatement	have_overflow = 1	137:8:4605:4622	8737008	1	True				
ANR	8737203	AssignmentExpression	have_overflow = 1		8737008	0		=			
ANR	8737204	Identifier	have_overflow		8737008	0					
ANR	8737205	PrimaryExpression	1		8737008	1					
ANR	8737206	ElseStatement	else		8737008	0					
ANR	8737207	ExpressionStatement	num = num * base + c	139:8:4643:4663	8737008	0	True				
ANR	8737208	AssignmentExpression	num = num * base + c		8737008	0		=			
ANR	8737209	Identifier	num		8737008	0					
ANR	8737210	AdditiveExpression	num * base + c		8737008	1		+			
ANR	8737211	MultiplicativeExpression	num * base		8737008	0		*			
ANR	8737212	Identifier	num		8737008	0					
ANR	8737213	Identifier	base		8737008	1					
ANR	8737214	Identifier	c		8737008	1					
ANR	8737215	ExpressionStatement	* cursor = p	142:4:4676:4687	8737008	12	True				
ANR	8737216	AssignmentExpression	* cursor = p		8737008	0		=			
ANR	8737217	UnaryOperationExpression	* cursor		8737008	0					
ANR	8737218	UnaryOperator	*		8737008	0					
ANR	8737219	Identifier	cursor		8737008	1					
ANR	8737220	Identifier	p		8737008	1					
ANR	8737221	IfStatement	if ( have_overflow )		8737008	13					
ANR	8737222	Condition	have_overflow	144:9:4699:4711	8737008	0	True				
ANR	8737223	Identifier	have_overflow		8737008	0					
ANR	8737224	CompoundStatement		59:4:1034:1034	8737008	1					
ANR	8737225	ExpressionStatement	num = 0x7FFFFFFFL	146:6:4727:4744	8737008	0	True				
ANR	8737226	AssignmentExpression	num = 0x7FFFFFFFL		8737008	0		=			
ANR	8737227	Identifier	num		8737008	0					
ANR	8737228	PrimaryExpression	0x7FFFFFFFL		8737008	1					
ANR	8737229	ExpressionStatement	"FT_TRACE4 ( ( ""!!!OVERFLOW:!!!"" ) )"	147:6:4752:4784	8737008	1	True				
ANR	8737230	CallExpression	"FT_TRACE4 ( ( ""!!!OVERFLOW:!!!"" ) )"		8737008	0					
ANR	8737231	Callee	FT_TRACE4		8737008	0					
ANR	8737232	Identifier	FT_TRACE4		8737008	0					
ANR	8737233	ArgumentList	"""!!!OVERFLOW:!!!"""		8737008	1					
ANR	8737234	Argument	"""!!!OVERFLOW:!!!"""		8737008	0					
ANR	8737235	PrimaryExpression	"""!!!OVERFLOW:!!!"""		8737008	0					
ANR	8737236	IfStatement	if ( sign )		8737008	14					
ANR	8737237	Condition	sign	150:9:4802:4805	8737008	0	True				
ANR	8737238	Identifier	sign		8737008	0					
ANR	8737239	ExpressionStatement	num = - num	151:6:4815:4825	8737008	1	True				
ANR	8737240	AssignmentExpression	num = - num		8737008	0		=			
ANR	8737241	Identifier	num		8737008	0					
ANR	8737242	UnaryOperationExpression	- num		8737008	1					
ANR	8737243	UnaryOperator	-		8737008	0					
ANR	8737244	Identifier	num		8737008	1					
ANR	8737245	ReturnStatement	return num ;	153:4:4832:4842	8737008	15	True				
ANR	8737246	Identifier	num		8737008	0					
ANR	8737247	Label	Bad :	155:2:4847:4850	8737008	16	True				
ANR	8737248	Identifier	Bad		8737008	0					
ANR	8737249	ExpressionStatement	"FT_TRACE4 ( ( ""!!!END OF DATA:!!!"" ) )"	156:4:4856:4891	8737008	17	True				
ANR	8737250	CallExpression	"FT_TRACE4 ( ( ""!!!END OF DATA:!!!"" ) )"		8737008	0					
ANR	8737251	Callee	FT_TRACE4		8737008	0					
ANR	8737252	Identifier	FT_TRACE4		8737008	0					
ANR	8737253	ArgumentList	"""!!!END OF DATA:!!!"""		8737008	1					
ANR	8737254	Argument	"""!!!END OF DATA:!!!"""		8737008	0					
ANR	8737255	PrimaryExpression	"""!!!END OF DATA:!!!"""		8737008	0					
ANR	8737256	ReturnStatement	return 0 ;	157:4:4897:4905	8737008	18	True				
ANR	8737257	PrimaryExpression	0		8737008	0					
ANR	8737258	Identifier	PS_Conv_Strtol		8737008	1					
ANR	8737259	ParameterList	"FT_Byte * * cursor , FT_Byte * limit , FT_Long base"		8737008	2					
ANR	8737260	Parameter	FT_Byte * * cursor	84:18:3591:3607	8737008	0	True				
ANR	8737261	ParameterType	FT_Byte * *		8737008	0					
ANR	8737262	Identifier	cursor		8737008	1					
ANR	8737263	Parameter	FT_Byte * limit	85:18:3628:3643	8737008	1	True				
ANR	8737264	ParameterType	FT_Byte *		8737008	0					
ANR	8737265	Identifier	limit		8737008	1					
ANR	8737266	Parameter	FT_Long base	86:18:3664:3678	8737008	2	True				
ANR	8737267	ParameterType	FT_Long		8737008	0					
ANR	8737268	Identifier	base		8737008	1					
ANR	8737269	CFGEntryNode	ENTRY		8737008		True				
ANR	8737270	CFGExitNode	EXIT		8737008		True				
ANR	8737271	Symbol	cursor		8737008						
ANR	8737272	Symbol	* cursor		8737008						
ANR	8737273	Symbol	c		8737008						
ANR	8737274	Symbol	* ft_char_table		8737008						
ANR	8737275	Symbol	num		8737008						
ANR	8737276	Symbol	sign		8737008						
ANR	8737277	Symbol	p		8737008						
ANR	8737278	Symbol	c_limit		8737008						
ANR	8737279	Symbol	limit		8737008						
ANR	8737280	Symbol	num_limit		8737008						
ANR	8737281	Symbol	* p		8737008						
ANR	8737282	Symbol	* * p		8737008						
ANR	8737283	Symbol	have_overflow		8737008						
ANR	8737284	Symbol	ft_char_table		8737008						
ANR	8737285	Symbol	FT_BOOL		8737008						
ANR	8737286	Symbol	base		8737008						
ANR	8737287	Function	PS_Conv_ToInt	162:2:4941:5382							
ANR	8737288	FunctionDef	"PS_Conv_ToInt (FT_Byte * * cursor , FT_Byte * limit)"		8737287	0					
ANR	8737289	CompoundStatement		165:2:5014:5382	8737287	0					
ANR	8737290	IdentifierDeclStatement	FT_Byte * p = * cursor ;	166:4:5020:5041	8737287	0	True				
ANR	8737291	IdentifierDecl	* p = * cursor		8737287	0					
ANR	8737292	IdentifierDeclType	FT_Byte *		8737287	0					
ANR	8737293	Identifier	p		8737287	1					
ANR	8737294	AssignmentExpression	* p = * cursor		8737287	2		=			
ANR	8737295	Identifier	p		8737287	0					
ANR	8737296	UnaryOperationExpression	* cursor		8737287	1					
ANR	8737297	UnaryOperator	*		8737287	0					
ANR	8737298	Identifier	cursor		8737287	1					
ANR	8737299	IdentifierDeclStatement	FT_Byte * curp ;	167:4:5047:5061	8737287	1	True				
ANR	8737300	IdentifierDecl	* curp		8737287	0					
ANR	8737301	IdentifierDeclType	FT_Byte *		8737287	0					
ANR	8737302	Identifier	curp		8737287	1					
ANR	8737303	IdentifierDeclStatement	FT_Long num ;	169:4:5068:5081	8737287	2	True				
ANR	8737304	IdentifierDecl	num		8737287	0					
ANR	8737305	IdentifierDeclType	FT_Long		8737287	0					
ANR	8737306	Identifier	num		8737287	1					
ANR	8737307	ExpressionStatement	curp = p	172:4:5089:5097	8737287	3	True				
ANR	8737308	AssignmentExpression	curp = p		8737287	0		=			
ANR	8737309	Identifier	curp		8737287	0					
ANR	8737310	Identifier	p		8737287	1					
ANR	8737311	ExpressionStatement	"num = PS_Conv_Strtol ( & p , limit , 10 )"	173:4:5103:5141	8737287	4	True				
ANR	8737312	AssignmentExpression	"num = PS_Conv_Strtol ( & p , limit , 10 )"		8737287	0		=			
ANR	8737313	Identifier	num		8737287	0					
ANR	8737314	CallExpression	"PS_Conv_Strtol ( & p , limit , 10 )"		8737287	1					
ANR	8737315	Callee	PS_Conv_Strtol		8737287	0					
ANR	8737316	Identifier	PS_Conv_Strtol		8737287	0					
ANR	8737317	ArgumentList	& p		8737287	1					
ANR	8737318	Argument	& p		8737287	0					
ANR	8737319	UnaryOperationExpression	& p		8737287	0					
ANR	8737320	UnaryOperator	&		8737287	0					
ANR	8737321	Identifier	p		8737287	1					
ANR	8737322	Argument	limit		8737287	1					
ANR	8737323	Identifier	limit		8737287	0					
ANR	8737324	Argument	10		8737287	2					
ANR	8737325	PrimaryExpression	10		8737287	0					
ANR	8737326	IfStatement	if ( p == curp )		8737287	5					
ANR	8737327	Condition	p == curp	175:9:5153:5161	8737287	0	True				
ANR	8737328	EqualityExpression	p == curp		8737287	0		==			
ANR	8737329	Identifier	p		8737287	0					
ANR	8737330	Identifier	curp		8737287	1					
ANR	8737331	ReturnStatement	return 0 ;	176:6:5171:5179	8737287	1	True				
ANR	8737332	PrimaryExpression	0		8737287	0					
ANR	8737333	IfStatement	if ( p < limit && * p == '#' )		8737287	6					
ANR	8737334	Condition	p < limit && * p == '#'	178:9:5191:5212	8737287	0	True				
ANR	8737335	AndExpression	p < limit && * p == '#'		8737287	0		&&			
ANR	8737336	RelationalExpression	p < limit		8737287	0		<			
ANR	8737337	Identifier	p		8737287	0					
ANR	8737338	Identifier	limit		8737287	1					
ANR	8737339	EqualityExpression	* p == '#'		8737287	1		==			
ANR	8737340	UnaryOperationExpression	* p		8737287	0					
ANR	8737341	UnaryOperator	*		8737287	0					
ANR	8737342	Identifier	p		8737287	1					
ANR	8737343	PrimaryExpression	'#'		8737287	1					
ANR	8737344	CompoundStatement		15:4:205:205	8737287	1					
ANR	8737345	ExpressionStatement	p ++	180:6:5228:5231	8737287	0	True				
ANR	8737346	PostIncDecOperationExpression	p ++		8737287	0					
ANR	8737347	Identifier	p		8737287	0					
ANR	8737348	IncDec	++		8737287	1					
ANR	8737349	ExpressionStatement	curp = p	182:6:5240:5248	8737287	1	True				
ANR	8737350	AssignmentExpression	curp = p		8737287	0		=			
ANR	8737351	Identifier	curp		8737287	0					
ANR	8737352	Identifier	p		8737287	1					
ANR	8737353	ExpressionStatement	"num = PS_Conv_Strtol ( & p , limit , num )"	183:6:5256:5295	8737287	2	True				
ANR	8737354	AssignmentExpression	"num = PS_Conv_Strtol ( & p , limit , num )"		8737287	0		=			
ANR	8737355	Identifier	num		8737287	0					
ANR	8737356	CallExpression	"PS_Conv_Strtol ( & p , limit , num )"		8737287	1					
ANR	8737357	Callee	PS_Conv_Strtol		8737287	0					
ANR	8737358	Identifier	PS_Conv_Strtol		8737287	0					
ANR	8737359	ArgumentList	& p		8737287	1					
ANR	8737360	Argument	& p		8737287	0					
ANR	8737361	UnaryOperationExpression	& p		8737287	0					
ANR	8737362	UnaryOperator	&		8737287	0					
ANR	8737363	Identifier	p		8737287	1					
ANR	8737364	Argument	limit		8737287	1					
ANR	8737365	Identifier	limit		8737287	0					
ANR	8737366	Argument	num		8737287	2					
ANR	8737367	Identifier	num		8737287	0					
ANR	8737368	IfStatement	if ( p == curp )		8737287	3					
ANR	8737369	Condition	p == curp	185:11:5309:5317	8737287	0	True				
ANR	8737370	EqualityExpression	p == curp		8737287	0		==			
ANR	8737371	Identifier	p		8737287	0					
ANR	8737372	Identifier	curp		8737287	1					
ANR	8737373	ReturnStatement	return 0 ;	186:8:5329:5337	8737287	1	True				
ANR	8737374	PrimaryExpression	0		8737287	0					
ANR	8737375	ExpressionStatement	* cursor = p	189:4:5350:5361	8737287	7	True				
ANR	8737376	AssignmentExpression	* cursor = p		8737287	0		=			
ANR	8737377	UnaryOperationExpression	* cursor		8737287	0					
ANR	8737378	UnaryOperator	*		8737287	0					
ANR	8737379	Identifier	cursor		8737287	1					
ANR	8737380	Identifier	p		8737287	1					
ANR	8737381	ReturnStatement	return num ;	191:4:5368:5378	8737287	8	True				
ANR	8737382	Identifier	num		8737287	0					
ANR	8737383	Identifier	PS_Conv_ToInt		8737287	1					
ANR	8737384	ParameterList	"FT_Byte * * cursor , FT_Byte * limit"		8737287	2					
ANR	8737385	Parameter	FT_Byte * * cursor	162:17:4956:4972	8737287	0	True				
ANR	8737386	ParameterType	FT_Byte * *		8737287	0					
ANR	8737387	Identifier	cursor		8737287	1					
ANR	8737388	Parameter	FT_Byte * limit	163:17:4992:5007	8737287	1	True				
ANR	8737389	ParameterType	FT_Byte *		8737287	0					
ANR	8737390	Identifier	limit		8737287	1					
ANR	8737391	CFGEntryNode	ENTRY		8737287		True				
ANR	8737392	CFGExitNode	EXIT		8737287		True				
ANR	8737393	Symbol	cursor		8737287						
ANR	8737394	Symbol	p		8737287						
ANR	8737395	Symbol	* cursor		8737287						
ANR	8737396	Symbol	& p		8737287						
ANR	8737397	Symbol	num		8737287						
ANR	8737398	Symbol	limit		8737287						
ANR	8737399	Symbol	PS_Conv_Strtol		8737287						
ANR	8737400	Symbol	* p		8737287						
ANR	8737401	Symbol	curp		8737287						
ANR	8737402	Function	PS_Conv_ToFixed	196:2:5415:8628							
ANR	8737403	FunctionDef	"PS_Conv_ToFixed (FT_Byte * * cursor , FT_Byte * limit , FT_Long power_ten)"		8737402	0					
ANR	8737404	CompoundStatement		199:2:5532:8628	8737402	0					
ANR	8737405	IdentifierDeclStatement	FT_Byte * p = * cursor ;	200:4:5538:5559	8737402	0	True				
ANR	8737406	IdentifierDecl	* p = * cursor		8737402	0					
ANR	8737407	IdentifierDeclType	FT_Byte *		8737402	0					
ANR	8737408	Identifier	p		8737402	1					
ANR	8737409	AssignmentExpression	* p = * cursor		8737402	2		=			
ANR	8737410	Identifier	p		8737402	0					
ANR	8737411	UnaryOperationExpression	* cursor		8737402	1					
ANR	8737412	UnaryOperator	*		8737402	0					
ANR	8737413	Identifier	cursor		8737402	1					
ANR	8737414	IdentifierDeclStatement	FT_Byte * curp ;	201:4:5565:5579	8737402	1	True				
ANR	8737415	IdentifierDecl	* curp		8737402	0					
ANR	8737416	IdentifierDeclType	FT_Byte *		8737402	0					
ANR	8737417	Identifier	curp		8737402	1					
ANR	8737418	IdentifierDeclStatement	FT_Fixed integral = 0 ;	203:4:5586:5608	8737402	2	True				
ANR	8737419	IdentifierDecl	integral = 0		8737402	0					
ANR	8737420	IdentifierDeclType	FT_Fixed		8737402	0					
ANR	8737421	Identifier	integral		8737402	1					
ANR	8737422	AssignmentExpression	integral = 0		8737402	2		=			
ANR	8737423	Identifier	integral		8737402	0					
ANR	8737424	PrimaryExpression	0		8737402	1					
ANR	8737425	IdentifierDeclStatement	FT_Long decimal = 0 ;	204:4:5614:5636	8737402	3	True				
ANR	8737426	IdentifierDecl	decimal = 0		8737402	0					
ANR	8737427	IdentifierDeclType	FT_Long		8737402	0					
ANR	8737428	Identifier	decimal		8737402	1					
ANR	8737429	AssignmentExpression	decimal = 0		8737402	2		=			
ANR	8737430	Identifier	decimal		8737402	0					
ANR	8737431	PrimaryExpression	0		8737402	1					
ANR	8737432	IdentifierDeclStatement	FT_Long divider = 1 ;	205:4:5642:5664	8737402	4	True				
ANR	8737433	IdentifierDecl	divider = 1		8737402	0					
ANR	8737434	IdentifierDeclType	FT_Long		8737402	0					
ANR	8737435	Identifier	divider		8737402	1					
ANR	8737436	AssignmentExpression	divider = 1		8737402	2		=			
ANR	8737437	Identifier	divider		8737402	0					
ANR	8737438	PrimaryExpression	1		8737402	1					
ANR	8737439	IdentifierDeclStatement	FT_Bool sign = 0 ;	207:4:5671:5699	8737402	5	True				
ANR	8737440	IdentifierDecl	sign = 0		8737402	0					
ANR	8737441	IdentifierDeclType	FT_Bool		8737402	0					
ANR	8737442	Identifier	sign		8737402	1					
ANR	8737443	AssignmentExpression	sign = 0		8737402	2		=			
ANR	8737444	Identifier	sign		8737402	0					
ANR	8737445	PrimaryExpression	0		8737402	1					
ANR	8737446	IdentifierDeclStatement	FT_Bool have_overflow = 0 ;	208:4:5705:5733	8737402	6	True				
ANR	8737447	IdentifierDecl	have_overflow = 0		8737402	0					
ANR	8737448	IdentifierDeclType	FT_Bool		8737402	0					
ANR	8737449	Identifier	have_overflow		8737402	1					
ANR	8737450	AssignmentExpression	have_overflow = 0		8737402	2		=			
ANR	8737451	Identifier	have_overflow		8737402	0					
ANR	8737452	PrimaryExpression	0		8737402	1					
ANR	8737453	IdentifierDeclStatement	FT_Bool have_underflow = 0 ;	209:4:5739:5767	8737402	7	True				
ANR	8737454	IdentifierDecl	have_underflow = 0		8737402	0					
ANR	8737455	IdentifierDeclType	FT_Bool		8737402	0					
ANR	8737456	Identifier	have_underflow		8737402	1					
ANR	8737457	AssignmentExpression	have_underflow = 0		8737402	2		=			
ANR	8737458	Identifier	have_underflow		8737402	0					
ANR	8737459	PrimaryExpression	0		8737402	1					
ANR	8737460	IfStatement	if ( p >= limit )		8737402	8					
ANR	8737461	Condition	p >= limit	212:9:5780:5789	8737402	0	True				
ANR	8737462	RelationalExpression	p >= limit		8737402	0		>=			
ANR	8737463	Identifier	p		8737402	0					
ANR	8737464	Identifier	limit		8737402	1					
ANR	8737465	GotoStatement	goto Bad ;	213:6:5799:5807	8737402	1	True				
ANR	8737466	Identifier	Bad		8737402	0					
ANR	8737467	IfStatement	if ( * p == '-' || * p == '+' )		8737402	9					
ANR	8737468	Condition	* p == '-' || * p == '+'	215:9:5819:5840	8737402	0	True				
ANR	8737469	OrExpression	* p == '-' || * p == '+'		8737402	0		||			
ANR	8737470	EqualityExpression	* p == '-'		8737402	0		==			
ANR	8737471	UnaryOperationExpression	* p		8737402	0					
ANR	8737472	UnaryOperator	*		8737402	0					
ANR	8737473	Identifier	p		8737402	1					
ANR	8737474	PrimaryExpression	'-'		8737402	1					
ANR	8737475	EqualityExpression	* p == '+'		8737402	1		==			
ANR	8737476	UnaryOperationExpression	* p		8737402	0					
ANR	8737477	UnaryOperator	*		8737402	0					
ANR	8737478	Identifier	p		8737402	1					
ANR	8737479	PrimaryExpression	'+'		8737402	1					
ANR	8737480	CompoundStatement		18:4:315:315	8737402	1					
ANR	8737481	ExpressionStatement	sign = FT_BOOL ( * p == '-' )	217:6:5856:5883	8737402	0	True				
ANR	8737482	AssignmentExpression	sign = FT_BOOL ( * p == '-' )		8737402	0		=			
ANR	8737483	Identifier	sign		8737402	0					
ANR	8737484	CallExpression	FT_BOOL ( * p == '-' )		8737402	1					
ANR	8737485	Callee	FT_BOOL		8737402	0					
ANR	8737486	Identifier	FT_BOOL		8737402	0					
ANR	8737487	ArgumentList	* p == '-'		8737402	1					
ANR	8737488	Argument	* p == '-'		8737402	0					
ANR	8737489	EqualityExpression	* p == '-'		8737402	0		==			
ANR	8737490	UnaryOperationExpression	* p		8737402	0					
ANR	8737491	UnaryOperator	*		8737402	0					
ANR	8737492	Identifier	p		8737402	1					
ANR	8737493	PrimaryExpression	'-'		8737402	1					
ANR	8737494	ExpressionStatement	p ++	219:6:5892:5895	8737402	1	True				
ANR	8737495	PostIncDecOperationExpression	p ++		8737402	0					
ANR	8737496	Identifier	p		8737402	0					
ANR	8737497	IncDec	++		8737402	1					
ANR	8737498	IfStatement	if ( p == limit )		8737402	2					
ANR	8737499	Condition	p == limit	220:11:5908:5917	8737402	0	True				
ANR	8737500	EqualityExpression	p == limit		8737402	0		==			
ANR	8737501	Identifier	p		8737402	0					
ANR	8737502	Identifier	limit		8737402	1					
ANR	8737503	GotoStatement	goto Bad ;	221:8:5929:5937	8737402	1	True				
ANR	8737504	Identifier	Bad		8737402	0					
ANR	8737505	IfStatement	if ( * p == '-' || * p == '+' )		8737402	3					
ANR	8737506	Condition	* p == '-' || * p == '+'	224:11:5993:6014	8737402	0	True				
ANR	8737507	OrExpression	* p == '-' || * p == '+'		8737402	0		||			
ANR	8737508	EqualityExpression	* p == '-'		8737402	0		==			
ANR	8737509	UnaryOperationExpression	* p		8737402	0					
ANR	8737510	UnaryOperator	*		8737402	0					
ANR	8737511	Identifier	p		8737402	1					
ANR	8737512	PrimaryExpression	'-'		8737402	1					
ANR	8737513	EqualityExpression	* p == '+'		8737402	1		==			
ANR	8737514	UnaryOperationExpression	* p		8737402	0					
ANR	8737515	UnaryOperator	*		8737402	0					
ANR	8737516	Identifier	p		8737402	1					
ANR	8737517	PrimaryExpression	'+'		8737402	1					
ANR	8737518	ReturnStatement	return 0 ;	225:8:6026:6034	8737402	1	True				
ANR	8737519	PrimaryExpression	0		8737402	0					
ANR	8737520	IfStatement	if ( * p != '.' )		8737402	10					
ANR	8737521	Condition	* p != '.'	229:9:6084:6092	8737402	0	True				
ANR	8737522	EqualityExpression	* p != '.'		8737402	0		!=			
ANR	8737523	UnaryOperationExpression	* p		8737402	0					
ANR	8737524	UnaryOperator	*		8737402	0					
ANR	8737525	Identifier	p		8737402	1					
ANR	8737526	PrimaryExpression	'.'		8737402	1					
ANR	8737527	CompoundStatement		32:4:567:567	8737402	1					
ANR	8737528	ExpressionStatement	curp = p	231:6:6108:6120	8737402	0	True				
ANR	8737529	AssignmentExpression	curp = p		8737402	0		=			
ANR	8737530	Identifier	curp		8737402	0					
ANR	8737531	Identifier	p		8737402	1					
ANR	8737532	ExpressionStatement	"integral = PS_Conv_ToInt ( & p , limit )"	232:6:6128:6165	8737402	1	True				
ANR	8737533	AssignmentExpression	"integral = PS_Conv_ToInt ( & p , limit )"		8737402	0		=			
ANR	8737534	Identifier	integral		8737402	0					
ANR	8737535	CallExpression	"PS_Conv_ToInt ( & p , limit )"		8737402	1					
ANR	8737536	Callee	PS_Conv_ToInt		8737402	0					
ANR	8737537	Identifier	PS_Conv_ToInt		8737402	0					
ANR	8737538	ArgumentList	& p		8737402	1					
ANR	8737539	Argument	& p		8737402	0					
ANR	8737540	UnaryOperationExpression	& p		8737402	0					
ANR	8737541	UnaryOperator	&		8737402	0					
ANR	8737542	Identifier	p		8737402	1					
ANR	8737543	Argument	limit		8737402	1					
ANR	8737544	Identifier	limit		8737402	0					
ANR	8737545	IfStatement	if ( p == curp )		8737402	2					
ANR	8737546	Condition	p == curp	234:11:6179:6187	8737402	0	True				
ANR	8737547	EqualityExpression	p == curp		8737402	0		==			
ANR	8737548	Identifier	p		8737402	0					
ANR	8737549	Identifier	curp		8737402	1					
ANR	8737550	ReturnStatement	return 0 ;	235:8:6199:6207	8737402	1	True				
ANR	8737551	PrimaryExpression	0		8737402	0					
ANR	8737552	IfStatement	if ( integral > 0x7FFF )		8737402	3					
ANR	8737553	Condition	integral > 0x7FFF	237:11:6221:6237	8737402	0	True				
ANR	8737554	RelationalExpression	integral > 0x7FFF		8737402	0		>			
ANR	8737555	Identifier	integral		8737402	0					
ANR	8737556	PrimaryExpression	0x7FFF		8737402	1					
ANR	8737557	ExpressionStatement	have_overflow = 1	238:8:6249:6266	8737402	1	True				
ANR	8737558	AssignmentExpression	have_overflow = 1		8737402	0		=			
ANR	8737559	Identifier	have_overflow		8737402	0					
ANR	8737560	PrimaryExpression	1		8737402	1					
ANR	8737561	ElseStatement	else		8737402	0					
ANR	8737562	ExpressionStatement	integral = ( FT_Fixed ) ( ( FT_UInt32 ) integral << 16 )	240:8:6287:6337	8737402	0	True				
ANR	8737563	AssignmentExpression	integral = ( FT_Fixed ) ( ( FT_UInt32 ) integral << 16 )		8737402	0		=			
ANR	8737564	Identifier	integral		8737402	0					
ANR	8737565	CastExpression	( FT_Fixed ) ( ( FT_UInt32 ) integral << 16 )		8737402	1					
ANR	8737566	CastTarget	FT_Fixed		8737402	0					
ANR	8737567	ShiftExpression	( FT_UInt32 ) integral << 16		8737402	1		<<			
ANR	8737568	CastExpression	( FT_UInt32 ) integral		8737402	0					
ANR	8737569	CastTarget	FT_UInt32		8737402	0					
ANR	8737570	Identifier	integral		8737402	1					
ANR	8737571	PrimaryExpression	16		8737402	1					
ANR	8737572	IfStatement	if ( p < limit && * p == '.' )		8737402	11					
ANR	8737573	Condition	p < limit && * p == '.'	244:9:6387:6408	8737402	0	True				
ANR	8737574	AndExpression	p < limit && * p == '.'		8737402	0		&&			
ANR	8737575	RelationalExpression	p < limit		8737402	0		<			
ANR	8737576	Identifier	p		8737402	0					
ANR	8737577	Identifier	limit		8737402	1					
ANR	8737578	EqualityExpression	* p == '.'		8737402	1		==			
ANR	8737579	UnaryOperationExpression	* p		8737402	0					
ANR	8737580	UnaryOperator	*		8737402	0					
ANR	8737581	Identifier	p		8737402	1					
ANR	8737582	PrimaryExpression	'.'		8737402	1					
ANR	8737583	CompoundStatement		47:4:883:883	8737402	1					
ANR	8737584	ExpressionStatement	p ++	246:6:6424:6427	8737402	0	True				
ANR	8737585	PostIncDecOperationExpression	p ++		8737402	0					
ANR	8737586	Identifier	p		8737402	0					
ANR	8737587	IncDec	++		8737402	1					
ANR	8737588	ForStatement	for ( ; p < limit ; p ++ )		8737402	1					
ANR	8737589	Condition	p < limit	248:14:6444:6452	8737402	0	True				
ANR	8737590	RelationalExpression	p < limit		8737402	0		<			
ANR	8737591	Identifier	p		8737402	0					
ANR	8737592	Identifier	limit		8737402	1					
ANR	8737593	PostIncDecOperationExpression	p ++	248:25:6455:6457	8737402	1	True				
ANR	8737594	Identifier	p		8737402	0					
ANR	8737595	IncDec	++		8737402	1					
ANR	8737596	CompoundStatement		52:8:944:954	8737402	2					
ANR	8737597	IdentifierDeclStatement	FT_Char c ;	250:8:6477:6487	8737402	0	True				
ANR	8737598	IdentifierDecl	c		8737402	0					
ANR	8737599	IdentifierDeclType	FT_Char		8737402	0					
ANR	8737600	Identifier	c		8737402	1					
ANR	8737601	Statement	if	253:8:6499:6500	8737402	1	True				
ANR	8737602	Statement	(	253:11:6502:6502	8737402	2	True				
ANR	8737603	Statement	IS_PS_SPACE	253:13:6504:6514	8737402	3	True				
ANR	8737604	Statement	(	253:24:6515:6515	8737402	4	True				
ANR	8737605	Statement	*	253:26:6517:6517	8737402	5	True				
ANR	8737606	Statement	p	253:27:6518:6518	8737402	6	True				
ANR	8737607	Statement	)	253:29:6520:6520	8737402	7	True				
ANR	8737608	Statement	||	253:31:6522:6523	8737402	8	True				
ANR	8737609	Statement	*	253:34:6525:6525	8737402	9	True				
ANR	8737610	Statement	p	253:35:6526:6526	8737402	10	True				
ANR	8737611	Statement	OP	253:37:6528:6529	8737402	11	True				
ANR	8737612	Statement	0x80	253:40:6531:6534	8737402	12	True				
ANR	8737613	Statement	)	253:45:6536:6536	8737402	13	True				
ANR	8737614	BreakStatement	break ;	254:10:6548:6553	8737402	14	True				
ANR	8737615	ExpressionStatement	c = ft_char_table [ * p & 0x7F ]	256:8:6564:6592	8737402	15	True				
ANR	8737616	AssignmentExpression	c = ft_char_table [ * p & 0x7F ]		8737402	0		=			
ANR	8737617	Identifier	c		8737402	0					
ANR	8737618	ArrayIndexing	ft_char_table [ * p & 0x7F ]		8737402	1					
ANR	8737619	Identifier	ft_char_table		8737402	0					
ANR	8737620	BitAndExpression	* p & 0x7F		8737402	1		&			
ANR	8737621	UnaryOperationExpression	* p		8737402	0					
ANR	8737622	UnaryOperator	*		8737402	0					
ANR	8737623	Identifier	p		8737402	1					
ANR	8737624	PrimaryExpression	0x7F		8737402	1					
ANR	8737625	IfStatement	if ( c < 0 || c >= 10 )		8737402	16					
ANR	8737626	Condition	c < 0 || c >= 10	258:13:6608:6623	8737402	0	True				
ANR	8737627	OrExpression	c < 0 || c >= 10		8737402	0		||			
ANR	8737628	RelationalExpression	c < 0		8737402	0		<			
ANR	8737629	Identifier	c		8737402	0					
ANR	8737630	PrimaryExpression	0		8737402	1					
ANR	8737631	RelationalExpression	c >= 10		8737402	1		>=			
ANR	8737632	Identifier	c		8737402	0					
ANR	8737633	PrimaryExpression	10		8737402	1					
ANR	8737634	BreakStatement	break ;	259:10:6637:6642	8737402	1	True				
ANR	8737635	IfStatement	if ( divider < 0xCCCCCCCL && decimal < 0xCCCCCCCL )		8737402	17					
ANR	8737636	Condition	divider < 0xCCCCCCCL && decimal < 0xCCCCCCCL	262:13:6708:6751	8737402	0	True				
ANR	8737637	AndExpression	divider < 0xCCCCCCCL && decimal < 0xCCCCCCCL		8737402	0		&&			
ANR	8737638	RelationalExpression	divider < 0xCCCCCCCL		8737402	0		<			
ANR	8737639	Identifier	divider		8737402	0					
ANR	8737640	PrimaryExpression	0xCCCCCCCL		8737402	1					
ANR	8737641	RelationalExpression	decimal < 0xCCCCCCCL		8737402	1		<			
ANR	8737642	Identifier	decimal		8737402	0					
ANR	8737643	PrimaryExpression	0xCCCCCCCL		8737402	1					
ANR	8737644	CompoundStatement		65:8:1230:1230	8737402	1					
ANR	8737645	ExpressionStatement	decimal = decimal * 10 + c	264:10:6775:6801	8737402	0	True				
ANR	8737646	AssignmentExpression	decimal = decimal * 10 + c		8737402	0		=			
ANR	8737647	Identifier	decimal		8737402	0					
ANR	8737648	AdditiveExpression	decimal * 10 + c		8737402	1		+			
ANR	8737649	MultiplicativeExpression	decimal * 10		8737402	0		*			
ANR	8737650	Identifier	decimal		8737402	0					
ANR	8737651	PrimaryExpression	10		8737402	1					
ANR	8737652	Identifier	c		8737402	1					
ANR	8737653	IfStatement	if ( ! integral && power_ten > 0 )		8737402	1					
ANR	8737654	Condition	! integral && power_ten > 0	266:15:6819:6844	8737402	0	True				
ANR	8737655	AndExpression	! integral && power_ten > 0		8737402	0		&&			
ANR	8737656	UnaryOperationExpression	! integral		8737402	0					
ANR	8737657	UnaryOperator	!		8737402	0					
ANR	8737658	Identifier	integral		8737402	1					
ANR	8737659	RelationalExpression	power_ten > 0		8737402	1		>			
ANR	8737660	Identifier	power_ten		8737402	0					
ANR	8737661	PrimaryExpression	0		8737402	1					
ANR	8737662	ExpressionStatement	power_ten --	267:12:6860:6871	8737402	1	True				
ANR	8737663	PostIncDecOperationExpression	power_ten --		8737402	0					
ANR	8737664	Identifier	power_ten		8737402	0					
ANR	8737665	IncDec	--		8737402	1					
ANR	8737666	ElseStatement	else		8737402	0					
ANR	8737667	ExpressionStatement	divider *= 10	269:12:6900:6913	8737402	0	True				
ANR	8737668	AssignmentExpression	divider *= 10		8737402	0		*=			
ANR	8737669	Identifier	divider		8737402	0					
ANR	8737670	PrimaryExpression	10		8737402	1					
ANR	8737671	IfStatement	if ( p + 1 < limit && ( * p == 'e' || * p == 'E' ) )		8737402	12					
ANR	8737672	Condition	p + 1 < limit && ( * p == 'e' || * p == 'E' )	275:9:6981:7023	8737402	0	True				
ANR	8737673	AndExpression	p + 1 < limit && ( * p == 'e' || * p == 'E' )		8737402	0		&&			
ANR	8737674	RelationalExpression	p + 1 < limit		8737402	0		<			
ANR	8737675	AdditiveExpression	p + 1		8737402	0		+			
ANR	8737676	Identifier	p		8737402	0					
ANR	8737677	PrimaryExpression	1		8737402	1					
ANR	8737678	Identifier	limit		8737402	1					
ANR	8737679	OrExpression	* p == 'e' || * p == 'E'		8737402	1		||			
ANR	8737680	EqualityExpression	* p == 'e'		8737402	0		==			
ANR	8737681	UnaryOperationExpression	* p		8737402	0					
ANR	8737682	UnaryOperator	*		8737402	0					
ANR	8737683	Identifier	p		8737402	1					
ANR	8737684	PrimaryExpression	'e'		8737402	1					
ANR	8737685	EqualityExpression	* p == 'E'		8737402	1		==			
ANR	8737686	UnaryOperationExpression	* p		8737402	0					
ANR	8737687	UnaryOperator	*		8737402	0					
ANR	8737688	Identifier	p		8737402	1					
ANR	8737689	PrimaryExpression	'E'		8737402	1					
ANR	8737690	CompoundStatement		79:6:1506:1523	8737402	1					
ANR	8737691	IdentifierDeclStatement	FT_Long exponent ;	277:6:7039:7056	8737402	0	True				
ANR	8737692	IdentifierDecl	exponent		8737402	0					
ANR	8737693	IdentifierDeclType	FT_Long		8737402	0					
ANR	8737694	Identifier	exponent		8737402	1					
ANR	8737695	ExpressionStatement	p ++	280:6:7066:7069	8737402	1	True				
ANR	8737696	PostIncDecOperationExpression	p ++		8737402	0					
ANR	8737697	Identifier	p		8737402	0					
ANR	8737698	IncDec	++		8737402	1					
ANR	8737699	ExpressionStatement	curp = p	282:6:7078:7090	8737402	2	True				
ANR	8737700	AssignmentExpression	curp = p		8737402	0		=			
ANR	8737701	Identifier	curp		8737402	0					
ANR	8737702	Identifier	p		8737402	1					
ANR	8737703	ExpressionStatement	"exponent = PS_Conv_ToInt ( & p , limit )"	283:6:7098:7135	8737402	3	True				
ANR	8737704	AssignmentExpression	"exponent = PS_Conv_ToInt ( & p , limit )"		8737402	0		=			
ANR	8737705	Identifier	exponent		8737402	0					
ANR	8737706	CallExpression	"PS_Conv_ToInt ( & p , limit )"		8737402	1					
ANR	8737707	Callee	PS_Conv_ToInt		8737402	0					
ANR	8737708	Identifier	PS_Conv_ToInt		8737402	0					
ANR	8737709	ArgumentList	& p		8737402	1					
ANR	8737710	Argument	& p		8737402	0					
ANR	8737711	UnaryOperationExpression	& p		8737402	0					
ANR	8737712	UnaryOperator	&		8737402	0					
ANR	8737713	Identifier	p		8737402	1					
ANR	8737714	Argument	limit		8737402	1					
ANR	8737715	Identifier	limit		8737402	0					
ANR	8737716	IfStatement	if ( curp == p )		8737402	4					
ANR	8737717	Condition	curp == p	285:11:7149:7157	8737402	0	True				
ANR	8737718	EqualityExpression	curp == p		8737402	0		==			
ANR	8737719	Identifier	curp		8737402	0					
ANR	8737720	Identifier	p		8737402	1					
ANR	8737721	ReturnStatement	return 0 ;	286:8:7169:7177	8737402	1	True				
ANR	8737722	PrimaryExpression	0		8737402	0					
ANR	8737723	IfStatement	if ( exponent > 1000 )		8737402	5					
ANR	8737724	Condition	exponent > 1000	289:11:7230:7244	8737402	0	True				
ANR	8737725	RelationalExpression	exponent > 1000		8737402	0		>			
ANR	8737726	Identifier	exponent		8737402	0					
ANR	8737727	PrimaryExpression	1000		8737402	1					
ANR	8737728	ExpressionStatement	have_overflow = 1	290:8:7256:7273	8737402	1	True				
ANR	8737729	AssignmentExpression	have_overflow = 1		8737402	0		=			
ANR	8737730	Identifier	have_overflow		8737402	0					
ANR	8737731	PrimaryExpression	1		8737402	1					
ANR	8737732	ElseStatement	else		8737402	0					
ANR	8737733	IfStatement	if ( exponent < - 1000 )		8737402	0					
ANR	8737734	Condition	exponent < - 1000	291:16:7291:7306	8737402	0	True				
ANR	8737735	RelationalExpression	exponent < - 1000		8737402	0		<			
ANR	8737736	Identifier	exponent		8737402	0					
ANR	8737737	UnaryOperationExpression	- 1000		8737402	1					
ANR	8737738	UnaryOperator	-		8737402	0					
ANR	8737739	PrimaryExpression	1000		8737402	1					
ANR	8737740	ExpressionStatement	have_underflow = 1	292:8:7318:7336	8737402	1	True				
ANR	8737741	AssignmentExpression	have_underflow = 1		8737402	0		=			
ANR	8737742	Identifier	have_underflow		8737402	0					
ANR	8737743	PrimaryExpression	1		8737402	1					
ANR	8737744	ElseStatement	else		8737402	0					
ANR	8737745	ExpressionStatement	power_ten += exponent	294:8:7357:7378	8737402	0	True				
ANR	8737746	AssignmentExpression	power_ten += exponent		8737402	0		+=			
ANR	8737747	Identifier	power_ten		8737402	0					
ANR	8737748	Identifier	exponent		8737402	1					
ANR	8737749	ExpressionStatement	* cursor = p	297:4:7391:7402	8737402	13	True				
ANR	8737750	AssignmentExpression	* cursor = p		8737402	0		=			
ANR	8737751	UnaryOperationExpression	* cursor		8737402	0					
ANR	8737752	UnaryOperator	*		8737402	0					
ANR	8737753	Identifier	cursor		8737402	1					
ANR	8737754	Identifier	p		8737402	1					
ANR	8737755	IfStatement	if ( ! integral && ! decimal )		8737402	14					
ANR	8737756	Condition	! integral && ! decimal	299:9:7414:7434	8737402	0	True				
ANR	8737757	AndExpression	! integral && ! decimal		8737402	0		&&			
ANR	8737758	UnaryOperationExpression	! integral		8737402	0					
ANR	8737759	UnaryOperator	!		8737402	0					
ANR	8737760	Identifier	integral		8737402	1					
ANR	8737761	UnaryOperationExpression	! decimal		8737402	1					
ANR	8737762	UnaryOperator	!		8737402	0					
ANR	8737763	Identifier	decimal		8737402	1					
ANR	8737764	ReturnStatement	return 0 ;	300:6:7444:7452	8737402	1	True				
ANR	8737765	PrimaryExpression	0		8737402	0					
ANR	8737766	IfStatement	if ( have_overflow )		8737402	15					
ANR	8737767	Condition	have_overflow	302:9:7464:7476	8737402	0	True				
ANR	8737768	Identifier	have_overflow		8737402	0					
ANR	8737769	GotoStatement	goto Overflow ;	303:6:7486:7499	8737402	1	True				
ANR	8737770	Identifier	Overflow		8737402	0					
ANR	8737771	IfStatement	if ( have_underflow )		8737402	16					
ANR	8737772	Condition	have_underflow	304:9:7510:7523	8737402	0	True				
ANR	8737773	Identifier	have_underflow		8737402	0					
ANR	8737774	GotoStatement	goto Underflow ;	305:6:7533:7547	8737402	1	True				
ANR	8737775	Identifier	Underflow		8737402	0					
ANR	8737776	WhileStatement	while ( power_ten > 0 )		8737402	17					
ANR	8737777	Condition	power_ten > 0	307:12:7562:7574	8737402	0	True				
ANR	8737778	RelationalExpression	power_ten > 0		8737402	0		>			
ANR	8737779	Identifier	power_ten		8737402	0					
ANR	8737780	PrimaryExpression	0		8737402	1					
ANR	8737781	CompoundStatement		110:4:2049:2049	8737402	1					
ANR	8737782	IfStatement	if ( integral >= 0xCCCCCCCL )		8737402	0					
ANR	8737783	Condition	integral >= 0xCCCCCCCL	309:11:7595:7616	8737402	0	True				
ANR	8737784	RelationalExpression	integral >= 0xCCCCCCCL		8737402	0		>=			
ANR	8737785	Identifier	integral		8737402	0					
ANR	8737786	PrimaryExpression	0xCCCCCCCL		8737402	1					
ANR	8737787	GotoStatement	goto Overflow ;	310:8:7628:7641	8737402	1	True				
ANR	8737788	Identifier	Overflow		8737402	0					
ANR	8737789	ExpressionStatement	integral *= 10	311:6:7649:7663	8737402	1	True				
ANR	8737790	AssignmentExpression	integral *= 10		8737402	0		*=			
ANR	8737791	Identifier	integral		8737402	0					
ANR	8737792	PrimaryExpression	10		8737402	1					
ANR	8737793	IfStatement	if ( decimal >= 0xCCCCCCCL )		8737402	2					
ANR	8737794	Condition	decimal >= 0xCCCCCCCL	313:11:7677:7697	8737402	0	True				
ANR	8737795	RelationalExpression	decimal >= 0xCCCCCCCL		8737402	0		>=			
ANR	8737796	Identifier	decimal		8737402	0					
ANR	8737797	PrimaryExpression	0xCCCCCCCL		8737402	1					
ANR	8737798	CompoundStatement		116:6:2174:2174	8737402	1					
ANR	8737799	IfStatement	if ( divider == 1 )		8737402	0					
ANR	8737800	Condition	divider == 1	315:13:7722:7733	8737402	0	True				
ANR	8737801	EqualityExpression	divider == 1		8737402	0		==			
ANR	8737802	Identifier	divider		8737402	0					
ANR	8737803	PrimaryExpression	1		8737402	1					
ANR	8737804	GotoStatement	goto Overflow ;	316:10:7747:7760	8737402	1	True				
ANR	8737805	Identifier	Overflow		8737402	0					
ANR	8737806	ExpressionStatement	divider /= 10	317:8:7770:7783	8737402	1	True				
ANR	8737807	AssignmentExpression	divider /= 10		8737402	0		/=			
ANR	8737808	Identifier	divider		8737402	0					
ANR	8737809	PrimaryExpression	10		8737402	1					
ANR	8737810	ElseStatement	else		8737402	0					
ANR	8737811	ExpressionStatement	decimal *= 10	320:8:7812:7825	8737402	0	True				
ANR	8737812	AssignmentExpression	decimal *= 10		8737402	0		*=			
ANR	8737813	Identifier	decimal		8737402	0					
ANR	8737814	PrimaryExpression	10		8737402	1					
ANR	8737815	ExpressionStatement	power_ten --	322:6:7834:7845	8737402	3	True				
ANR	8737816	PostIncDecOperationExpression	power_ten --		8737402	0					
ANR	8737817	Identifier	power_ten		8737402	0					
ANR	8737818	IncDec	--		8737402	1					
ANR	8737819	WhileStatement	while ( power_ten < 0 )		8737402	18					
ANR	8737820	Condition	power_ten < 0	325:12:7866:7878	8737402	0	True				
ANR	8737821	RelationalExpression	power_ten < 0		8737402	0		<			
ANR	8737822	Identifier	power_ten		8737402	0					
ANR	8737823	PrimaryExpression	0		8737402	1					
ANR	8737824	CompoundStatement		128:4:2353:2353	8737402	1					
ANR	8737825	ExpressionStatement	integral /= 10	327:6:7894:7908	8737402	0	True				
ANR	8737826	AssignmentExpression	integral /= 10		8737402	0		/=			
ANR	8737827	Identifier	integral		8737402	0					
ANR	8737828	PrimaryExpression	10		8737402	1					
ANR	8737829	IfStatement	if ( divider < 0xCCCCCCCL )		8737402	1					
ANR	8737830	Condition	divider < 0xCCCCCCCL	328:11:7921:7940	8737402	0	True				
ANR	8737831	RelationalExpression	divider < 0xCCCCCCCL		8737402	0		<			
ANR	8737832	Identifier	divider		8737402	0					
ANR	8737833	PrimaryExpression	0xCCCCCCCL		8737402	1					
ANR	8737834	ExpressionStatement	divider *= 10	329:8:7952:7965	8737402	1	True				
ANR	8737835	AssignmentExpression	divider *= 10		8737402	0		*=			
ANR	8737836	Identifier	divider		8737402	0					
ANR	8737837	PrimaryExpression	10		8737402	1					
ANR	8737838	ElseStatement	else		8737402	0					
ANR	8737839	ExpressionStatement	decimal /= 10	331:8:7986:7999	8737402	0	True				
ANR	8737840	AssignmentExpression	decimal /= 10		8737402	0		/=			
ANR	8737841	Identifier	decimal		8737402	0					
ANR	8737842	PrimaryExpression	10		8737402	1					
ANR	8737843	IfStatement	if ( ! integral && ! decimal )		8737402	2					
ANR	8737844	Condition	! integral && ! decimal	333:11:8013:8033	8737402	0	True				
ANR	8737845	AndExpression	! integral && ! decimal		8737402	0		&&			
ANR	8737846	UnaryOperationExpression	! integral		8737402	0					
ANR	8737847	UnaryOperator	!		8737402	0					
ANR	8737848	Identifier	integral		8737402	1					
ANR	8737849	UnaryOperationExpression	! decimal		8737402	1					
ANR	8737850	UnaryOperator	!		8737402	0					
ANR	8737851	Identifier	decimal		8737402	1					
ANR	8737852	GotoStatement	goto Underflow ;	334:8:8045:8059	8737402	1	True				
ANR	8737853	Identifier	Underflow		8737402	0					
ANR	8737854	ExpressionStatement	power_ten ++	336:6:8068:8079	8737402	3	True				
ANR	8737855	PostIncDecOperationExpression	power_ten ++		8737402	0					
ANR	8737856	Identifier	power_ten		8737402	0					
ANR	8737857	IncDec	++		8737402	1					
ANR	8737858	IfStatement	if ( decimal )		8737402	19					
ANR	8737859	Condition	decimal	339:9:8097:8103	8737402	0	True				
ANR	8737860	Identifier	decimal		8737402	0					
ANR	8737861	CompoundStatement		142:4:2578:2578	8737402	1					
ANR	8737862	ExpressionStatement	"decimal = FT_DivFix ( decimal , divider )"	341:6:8119:8158	8737402	0	True				
ANR	8737863	AssignmentExpression	"decimal = FT_DivFix ( decimal , divider )"		8737402	0		=			
ANR	8737864	Identifier	decimal		8737402	0					
ANR	8737865	CallExpression	"FT_DivFix ( decimal , divider )"		8737402	1					
ANR	8737866	Callee	FT_DivFix		8737402	0					
ANR	8737867	Identifier	FT_DivFix		8737402	0					
ANR	8737868	ArgumentList	decimal		8737402	1					
ANR	8737869	Argument	decimal		8737402	0					
ANR	8737870	Identifier	decimal		8737402	0					
ANR	8737871	Argument	divider		8737402	1					
ANR	8737872	Identifier	divider		8737402	0					
ANR	8737873	ExpressionStatement	integral += decimal	344:6:8300:8319	8737402	1	True				
ANR	8737874	AssignmentExpression	integral += decimal		8737402	0		+=			
ANR	8737875	Identifier	integral		8737402	0					
ANR	8737876	Identifier	decimal		8737402	1					
ANR	8737877	Label	Exit :	347:2:8330:8334	8737402	20	True				
ANR	8737878	Identifier	Exit		8737402	0					
ANR	8737879	IfStatement	if ( sign )		8737402	21					
ANR	8737880	Condition	sign	348:9:8345:8348	8737402	0	True				
ANR	8737881	Identifier	sign		8737402	0					
ANR	8737882	ExpressionStatement	integral = - integral	349:6:8358:8378	8737402	1	True				
ANR	8737883	AssignmentExpression	integral = - integral		8737402	0		=			
ANR	8737884	Identifier	integral		8737402	0					
ANR	8737885	UnaryOperationExpression	- integral		8737402	1					
ANR	8737886	UnaryOperator	-		8737402	0					
ANR	8737887	Identifier	integral		8737402	1					
ANR	8737888	ReturnStatement	return integral ;	351:4:8385:8400	8737402	22	True				
ANR	8737889	Identifier	integral		8737402	0					
ANR	8737890	Label	Bad :	353:2:8405:8408	8737402	23	True				
ANR	8737891	Identifier	Bad		8737402	0					
ANR	8737892	ExpressionStatement	"FT_TRACE4 ( ( ""!!!END OF DATA:!!!"" ) )"	354:4:8414:8449	8737402	24	True				
ANR	8737893	CallExpression	"FT_TRACE4 ( ( ""!!!END OF DATA:!!!"" ) )"		8737402	0					
ANR	8737894	Callee	FT_TRACE4		8737402	0					
ANR	8737895	Identifier	FT_TRACE4		8737402	0					
ANR	8737896	ArgumentList	"""!!!END OF DATA:!!!"""		8737402	1					
ANR	8737897	Argument	"""!!!END OF DATA:!!!"""		8737402	0					
ANR	8737898	PrimaryExpression	"""!!!END OF DATA:!!!"""		8737402	0					
ANR	8737899	ReturnStatement	return 0 ;	355:4:8455:8463	8737402	25	True				
ANR	8737900	PrimaryExpression	0		8737402	0					
ANR	8737901	Label	Overflow :	357:2:8468:8476	8737402	26	True				
ANR	8737902	Identifier	Overflow		8737402	0					
ANR	8737903	ExpressionStatement	integral = 0x7FFFFFFFL	358:4:8482:8504	8737402	27	True				
ANR	8737904	AssignmentExpression	integral = 0x7FFFFFFFL		8737402	0		=			
ANR	8737905	Identifier	integral		8737402	0					
ANR	8737906	PrimaryExpression	0x7FFFFFFFL		8737402	1					
ANR	8737907	ExpressionStatement	"FT_TRACE4 ( ( ""!!!OVERFLOW:!!!"" ) )"	359:4:8510:8542	8737402	28	True				
ANR	8737908	CallExpression	"FT_TRACE4 ( ( ""!!!OVERFLOW:!!!"" ) )"		8737402	0					
ANR	8737909	Callee	FT_TRACE4		8737402	0					
ANR	8737910	Identifier	FT_TRACE4		8737402	0					
ANR	8737911	ArgumentList	"""!!!OVERFLOW:!!!"""		8737402	1					
ANR	8737912	Argument	"""!!!OVERFLOW:!!!"""		8737402	0					
ANR	8737913	PrimaryExpression	"""!!!OVERFLOW:!!!"""		8737402	0					
ANR	8737914	GotoStatement	goto Exit ;	360:4:8548:8557	8737402	29	True				
ANR	8737915	Identifier	Exit		8737402	0					
ANR	8737916	Label	Underflow :	362:2:8562:8571	8737402	30	True				
ANR	8737917	Identifier	Underflow		8737402	0					
ANR	8737918	ExpressionStatement	"FT_TRACE4 ( ( ""!!!UNDERFLOW:!!!"" ) )"	363:4:8577:8610	8737402	31	True				
ANR	8737919	CallExpression	"FT_TRACE4 ( ( ""!!!UNDERFLOW:!!!"" ) )"		8737402	0					
ANR	8737920	Callee	FT_TRACE4		8737402	0					
ANR	8737921	Identifier	FT_TRACE4		8737402	0					
ANR	8737922	ArgumentList	"""!!!UNDERFLOW:!!!"""		8737402	1					
ANR	8737923	Argument	"""!!!UNDERFLOW:!!!"""		8737402	0					
ANR	8737924	PrimaryExpression	"""!!!UNDERFLOW:!!!"""		8737402	0					
ANR	8737925	ReturnStatement	return 0 ;	364:4:8616:8624	8737402	32	True				
ANR	8737926	PrimaryExpression	0		8737402	0					
ANR	8737927	Identifier	PS_Conv_ToFixed		8737402	1					
ANR	8737928	ParameterList	"FT_Byte * * cursor , FT_Byte * limit , FT_Long power_ten"		8737402	2					
ANR	8737929	Parameter	FT_Byte * * cursor	196:19:5432:5448	8737402	0	True				
ANR	8737930	ParameterType	FT_Byte * *		8737402	0					
ANR	8737931	Identifier	cursor		8737402	1					
ANR	8737932	Parameter	FT_Byte * limit	197:19:5470:5485	8737402	1	True				
ANR	8737933	ParameterType	FT_Byte *		8737402	0					
ANR	8737934	Identifier	limit		8737402	1					
ANR	8737935	Parameter	FT_Long power_ten	198:19:5507:5526	8737402	2	True				
ANR	8737936	ParameterType	FT_Long		8737402	0					
ANR	8737937	Identifier	power_ten		8737402	1					
ANR	8737938	CFGEntryNode	ENTRY		8737402		True				
ANR	8737939	CFGExitNode	EXIT		8737402		True				
ANR	8737940	Symbol	cursor		8737402						
ANR	8737941	Symbol	* cursor		8737402						
ANR	8737942	Symbol	c		8737402						
ANR	8737943	Symbol	* ft_char_table		8737402						
ANR	8737944	Symbol	FT_DivFix		8737402						
ANR	8737945	Symbol	power_ten		8737402						
ANR	8737946	Symbol	sign		8737402						
ANR	8737947	Symbol	have_underflow		8737402						
ANR	8737948	Symbol	p		8737402						
ANR	8737949	Symbol	divider		8737402						
ANR	8737950	Symbol	integral		8737402						
ANR	8737951	Symbol	& p		8737402						
ANR	8737952	Symbol	limit		8737402						
ANR	8737953	Symbol	PS_Conv_ToInt		8737402						
ANR	8737954	Symbol	* p		8737402						
ANR	8737955	Symbol	* * p		8737402						
ANR	8737956	Symbol	decimal		8737402						
ANR	8737957	Symbol	have_overflow		8737402						
ANR	8737958	Symbol	ft_char_table		8737402						
ANR	8737959	Symbol	curp		8737402						
ANR	8737960	Symbol	FT_BOOL		8737402						
ANR	8737961	Symbol	exponent		8737402						
ANR	8737962	Function	PS_Conv_StringDecode	370:2:8666:10105							
ANR	8737963	FunctionDef	"PS_Conv_StringDecode (FT_Byte * * cursor , FT_Byte * limit , FT_Byte * buffer , FT_Offset n)"		8737962	0					
ANR	8737964	CompoundStatement		374:2:8833:10105	8737962	0					
ANR	8737965	IdentifierDeclStatement	FT_Byte * p ;	375:4:8839:8850	8737962	0	True				
ANR	8737966	IdentifierDecl	* p		8737962	0					
ANR	8737967	IdentifierDeclType	FT_Byte *		8737962	0					
ANR	8737968	Identifier	p		8737962	1					
ANR	8737969	IdentifierDeclStatement	FT_UInt r = 0 ;	376:4:8856:8871	8737962	1	True				
ANR	8737970	IdentifierDecl	r = 0		8737962	0					
ANR	8737971	IdentifierDeclType	FT_UInt		8737962	0					
ANR	8737972	Identifier	r		8737962	1					
ANR	8737973	AssignmentExpression	r = 0		8737962	2		=			
ANR	8737974	Identifier	r		8737962	0					
ANR	8737975	PrimaryExpression	0		8737962	1					
ANR	8737976	ForStatement	for ( p = * cursor ; r < n && p < limit ; p ++ )		8737962	2					
ANR	8737977	ForInit	p = * cursor ;	379:10:8885:8896	8737962	0	True				
ANR	8737978	AssignmentExpression	p = * cursor		8737962	0		=			
ANR	8737979	Identifier	p		8737962	0					
ANR	8737980	UnaryOperationExpression	* cursor		8737962	1					
ANR	8737981	UnaryOperator	*		8737962	0					
ANR	8737982	Identifier	cursor		8737962	1					
ANR	8737983	Condition	r < n && p < limit	379:23:8898:8915	8737962	1	True				
ANR	8737984	AndExpression	r < n && p < limit		8737962	0		&&			
ANR	8737985	RelationalExpression	r < n		8737962	0		<			
ANR	8737986	Identifier	r		8737962	0					
ANR	8737987	Identifier	n		8737962	1					
ANR	8737988	RelationalExpression	p < limit		8737962	1		<			
ANR	8737989	Identifier	p		8737962	0					
ANR	8737990	Identifier	limit		8737962	1					
ANR	8737991	PostIncDecOperationExpression	p ++	379:43:8918:8920	8737962	2	True				
ANR	8737992	Identifier	p		8737962	0					
ANR	8737993	IncDec	++		8737962	1					
ANR	8737994	CompoundStatement		8:6:102:112	8737962	3					
ANR	8737995	IdentifierDeclStatement	FT_Byte b ;	381:6:8936:8946	8737962	0	True				
ANR	8737996	IdentifierDecl	b		8737962	0					
ANR	8737997	IdentifierDeclType	FT_Byte		8737962	0					
ANR	8737998	Identifier	b		8737962	1					
ANR	8737999	IfStatement	if ( * p != '\\\\' )		8737962	1					
ANR	8738000	Condition	* p != '\\\\'	384:11:8961:8970	8737962	0	True				
ANR	8738001	EqualityExpression	* p != '\\\\'		8737962	0		!=			
ANR	8738002	UnaryOperationExpression	* p		8737962	0					
ANR	8738003	UnaryOperator	*		8737962	0					
ANR	8738004	Identifier	p		8737962	1					
ANR	8738005	PrimaryExpression	'\\\\'		8737962	1					
ANR	8738006	CompoundStatement		12:6:146:146	8737962	1					
ANR	8738007	ExpressionStatement	buffer [ r ++ ] = * p	386:8:8990:9006	8737962	0	True				
ANR	8738008	AssignmentExpression	buffer [ r ++ ] = * p		8737962	0		=			
ANR	8738009	ArrayIndexing	buffer [ r ++ ]		8737962	0					
ANR	8738010	Identifier	buffer		8737962	0					
ANR	8738011	PostIncDecOperationExpression	r ++		8737962	1					
ANR	8738012	Identifier	r		8737962	0					
ANR	8738013	IncDec	++		8737962	1					
ANR	8738014	UnaryOperationExpression	* p		8737962	1					
ANR	8738015	UnaryOperator	*		8737962	0					
ANR	8738016	Identifier	p		8737962	1					
ANR	8738017	ContinueStatement	continue ;	388:8:9017:9025	8737962	1	True				
ANR	8738018	ExpressionStatement	p ++	391:6:9042:9045	8737962	2	True				
ANR	8738019	PostIncDecOperationExpression	p ++		8737962	0					
ANR	8738020	Identifier	p		8737962	0					
ANR	8738021	IncDec	++		8737962	1					
ANR	8738022	SwitchStatement	switch ( * p )		8737962	3					
ANR	8738023	Condition	* p	393:15:9063:9064	8737962	0	True				
ANR	8738024	UnaryOperationExpression	* p		8737962	0					
ANR	8738025	UnaryOperator	*		8737962	0					
ANR	8738026	Identifier	p		8737962	1					
ANR	8738027	CompoundStatement		21:6:240:240	8737962	1					
ANR	8738028	Label	case 'n' :	395:6:9082:9090	8737962	0	True				
ANR	8738029	ExpressionStatement	b = '\\n'	396:8:9100:9108	8737962	1	True				
ANR	8738030	AssignmentExpression	b = '\\n'		8737962	0		=			
ANR	8738031	Identifier	b		8737962	0					
ANR	8738032	PrimaryExpression	'\\n'		8737962	1					
ANR	8738033	BreakStatement	break ;	397:8:9118:9123	8737962	2	True				
ANR	8738034	Label	case 'r' :	398:6:9131:9139	8737962	3	True				
ANR	8738035	ExpressionStatement	b = '\\r'	399:8:9149:9157	8737962	4	True				
ANR	8738036	AssignmentExpression	b = '\\r'		8737962	0		=			
ANR	8738037	Identifier	b		8737962	0					
ANR	8738038	PrimaryExpression	'\\r'		8737962	1					
ANR	8738039	BreakStatement	break ;	400:8:9167:9172	8737962	5	True				
ANR	8738040	Label	case 't' :	401:6:9180:9188	8737962	6	True				
ANR	8738041	ExpressionStatement	b = '\\t'	402:8:9198:9206	8737962	7	True				
ANR	8738042	AssignmentExpression	b = '\\t'		8737962	0		=			
ANR	8738043	Identifier	b		8737962	0					
ANR	8738044	PrimaryExpression	'\\t'		8737962	1					
ANR	8738045	BreakStatement	break ;	403:8:9216:9221	8737962	8	True				
ANR	8738046	Label	case 'b' :	404:6:9229:9237	8737962	9	True				
ANR	8738047	ExpressionStatement	b = '\\b'	405:8:9247:9255	8737962	10	True				
ANR	8738048	AssignmentExpression	b = '\\b'		8737962	0		=			
ANR	8738049	Identifier	b		8737962	0					
ANR	8738050	PrimaryExpression	'\\b'		8737962	1					
ANR	8738051	BreakStatement	break ;	406:8:9265:9270	8737962	11	True				
ANR	8738052	Label	case 'f' :	407:6:9278:9286	8737962	12	True				
ANR	8738053	ExpressionStatement	b = '\\f'	408:8:9296:9304	8737962	13	True				
ANR	8738054	AssignmentExpression	b = '\\f'		8737962	0		=			
ANR	8738055	Identifier	b		8737962	0					
ANR	8738056	PrimaryExpression	'\\f'		8737962	1					
ANR	8738057	BreakStatement	break ;	409:8:9314:9319	8737962	14	True				
ANR	8738058	Label	case '\\r' :	410:6:9327:9336	8737962	15	True				
ANR	8738059	ExpressionStatement	p ++	411:8:9346:9349	8737962	16	True				
ANR	8738060	PostIncDecOperationExpression	p ++		8737962	0					
ANR	8738061	Identifier	p		8737962	0					
ANR	8738062	IncDec	++		8737962	1					
ANR	8738063	IfStatement	if ( * p != '\\n' )		8737962	17					
ANR	8738064	Condition	* p != '\\n'	412:13:9364:9373	8737962	0	True				
ANR	8738065	EqualityExpression	* p != '\\n'		8737962	0		!=			
ANR	8738066	UnaryOperationExpression	* p		8737962	0					
ANR	8738067	UnaryOperator	*		8737962	0					
ANR	8738068	Identifier	p		8737962	1					
ANR	8738069	PrimaryExpression	'\\n'		8737962	1					
ANR	8738070	CompoundStatement		40:8:551:551	8737962	1					
ANR	8738071	ExpressionStatement	b = * p	414:10:9397:9403	8737962	0	True				
ANR	8738072	AssignmentExpression	b = * p		8737962	0		=			
ANR	8738073	Identifier	b		8737962	0					
ANR	8738074	UnaryOperationExpression	* p		8737962	1					
ANR	8738075	UnaryOperator	*		8737962	0					
ANR	8738076	Identifier	p		8737962	1					
ANR	8738077	BreakStatement	break ;	416:10:9416:9421	8737962	1	True				
ANR	8738078	Label	case '\\n' :	419:6:9462:9471	8737962	18	True				
ANR	8738079	ContinueStatement	continue ;	420:8:9481:9489	8737962	19	True				
ANR	8738080	BreakStatement	break ;	421:8:9499:9504	8737962	20	True				
ANR	8738081	Label	default :	422:6:9512:9519	8737962	21	True				
ANR	8738082	Identifier	default		8737962	0					
ANR	8738083	IfStatement	if ( IS_PS_DIGIT ( * p ) )		8737962	22					
ANR	8738084	Condition	IS_PS_DIGIT ( * p )	423:13:9534:9550	8737962	0	True				
ANR	8738085	CallExpression	IS_PS_DIGIT ( * p )		8737962	0					
ANR	8738086	Callee	IS_PS_DIGIT		8737962	0					
ANR	8738087	Identifier	IS_PS_DIGIT		8737962	0					
ANR	8738088	ArgumentList	* p		8737962	1					
ANR	8738089	Argument	* p		8737962	0					
ANR	8738090	UnaryOperationExpression	* p		8737962	0					
ANR	8738091	UnaryOperator	*		8737962	0					
ANR	8738092	Identifier	p		8737962	1					
ANR	8738093	CompoundStatement		51:8:728:728	8737962	1					
ANR	8738094	ExpressionStatement	b = * p - '0'	425:10:9574:9586	8737962	0	True				
ANR	8738095	AssignmentExpression	b = * p - '0'		8737962	0		=			
ANR	8738096	Identifier	b		8737962	0					
ANR	8738097	AdditiveExpression	* p - '0'		8737962	1		-			
ANR	8738098	UnaryOperationExpression	* p		8737962	0					
ANR	8738099	UnaryOperator	*		8737962	0					
ANR	8738100	Identifier	p		8737962	1					
ANR	8738101	PrimaryExpression	'0'		8737962	1					
ANR	8738102	ExpressionStatement	p ++	427:10:9599:9602	8737962	1	True				
ANR	8738103	PostIncDecOperationExpression	p ++		8737962	0					
ANR	8738104	Identifier	p		8737962	0					
ANR	8738105	IncDec	++		8737962	1					
ANR	8738106	IfStatement	if ( IS_PS_DIGIT ( * p ) )		8737962	2					
ANR	8738107	Condition	IS_PS_DIGIT ( * p )	429:15:9620:9636	8737962	0	True				
ANR	8738108	CallExpression	IS_PS_DIGIT ( * p )		8737962	0					
ANR	8738109	Callee	IS_PS_DIGIT		8737962	0					
ANR	8738110	Identifier	IS_PS_DIGIT		8737962	0					
ANR	8738111	ArgumentList	* p		8737962	1					
ANR	8738112	Argument	* p		8737962	0					
ANR	8738113	UnaryOperationExpression	* p		8737962	0					
ANR	8738114	UnaryOperator	*		8737962	0					
ANR	8738115	Identifier	p		8737962	1					
ANR	8738116	CompoundStatement		57:10:816:816	8737962	1					
ANR	8738117	ExpressionStatement	b = b * 8 + * p - '0'	431:12:9664:9684	8737962	0	True				
ANR	8738118	AssignmentExpression	b = b * 8 + * p - '0'		8737962	0		=			
ANR	8738119	Identifier	b		8737962	0					
ANR	8738120	AdditiveExpression	b * 8 + * p - '0'		8737962	1		+			
ANR	8738121	MultiplicativeExpression	b * 8		8737962	0		*			
ANR	8738122	Identifier	b		8737962	0					
ANR	8738123	PrimaryExpression	8		8737962	1					
ANR	8738124	AdditiveExpression	* p - '0'		8737962	1		-			
ANR	8738125	UnaryOperationExpression	* p		8737962	0					
ANR	8738126	UnaryOperator	*		8737962	0					
ANR	8738127	Identifier	p		8737962	1					
ANR	8738128	PrimaryExpression	'0'		8737962	1					
ANR	8738129	ExpressionStatement	p ++	433:12:9699:9702	8737962	1	True				
ANR	8738130	PostIncDecOperationExpression	p ++		8737962	0					
ANR	8738131	Identifier	p		8737962	0					
ANR	8738132	IncDec	++		8737962	1					
ANR	8738133	IfStatement	if ( IS_PS_DIGIT ( * p ) )		8737962	2					
ANR	8738134	Condition	IS_PS_DIGIT ( * p )	435:17:9722:9738	8737962	0	True				
ANR	8738135	CallExpression	IS_PS_DIGIT ( * p )		8737962	0					
ANR	8738136	Callee	IS_PS_DIGIT		8737962	0					
ANR	8738137	Identifier	IS_PS_DIGIT		8737962	0					
ANR	8738138	ArgumentList	* p		8737962	1					
ANR	8738139	Argument	* p		8737962	0					
ANR	8738140	UnaryOperationExpression	* p		8737962	0					
ANR	8738141	UnaryOperator	*		8737962	0					
ANR	8738142	Identifier	p		8737962	1					
ANR	8738143	ExpressionStatement	b = b * 8 + * p - '0'	436:14:9756:9776	8737962	1	True				
ANR	8738144	AssignmentExpression	b = b * 8 + * p - '0'		8737962	0		=			
ANR	8738145	Identifier	b		8737962	0					
ANR	8738146	AdditiveExpression	b * 8 + * p - '0'		8737962	1		+			
ANR	8738147	MultiplicativeExpression	b * 8		8737962	0		*			
ANR	8738148	Identifier	b		8737962	0					
ANR	8738149	PrimaryExpression	8		8737962	1					
ANR	8738150	AdditiveExpression	* p - '0'		8737962	1		-			
ANR	8738151	UnaryOperationExpression	* p		8737962	0					
ANR	8738152	UnaryOperator	*		8737962	0					
ANR	8738153	Identifier	p		8737962	1					
ANR	8738154	PrimaryExpression	'0'		8737962	1					
ANR	8738155	ElseStatement	else		8737962	0					
ANR	8738156	CompoundStatement		65:12:973:973	8737962	0					
ANR	8738157	ExpressionStatement	buffer [ r ++ ] = b	439:14:9823:9838	8737962	0	True				
ANR	8738158	AssignmentExpression	buffer [ r ++ ] = b		8737962	0		=			
ANR	8738159	ArrayIndexing	buffer [ r ++ ]		8737962	0					
ANR	8738160	Identifier	buffer		8737962	0					
ANR	8738161	PostIncDecOperationExpression	r ++		8737962	1					
ANR	8738162	Identifier	r		8737962	0					
ANR	8738163	IncDec	++		8737962	1					
ANR	8738164	Identifier	b		8737962	1					
ANR	8738165	ExpressionStatement	b = * p	440:14:9854:9860	8737962	1	True				
ANR	8738166	AssignmentExpression	b = * p		8737962	0		=			
ANR	8738167	Identifier	b		8737962	0					
ANR	8738168	UnaryOperationExpression	* p		8737962	1					
ANR	8738169	UnaryOperator	*		8737962	0					
ANR	8738170	Identifier	p		8737962	1					
ANR	8738171	ElseStatement	else		8737962	0					
ANR	8738172	CompoundStatement		71:10:1079:1079	8737962	0					
ANR	8738173	ExpressionStatement	buffer [ r ++ ] = b	445:12:9927:9942	8737962	0	True				
ANR	8738174	AssignmentExpression	buffer [ r ++ ] = b		8737962	0		=			
ANR	8738175	ArrayIndexing	buffer [ r ++ ]		8737962	0					
ANR	8738176	Identifier	buffer		8737962	0					
ANR	8738177	PostIncDecOperationExpression	r ++		8737962	1					
ANR	8738178	Identifier	r		8737962	0					
ANR	8738179	IncDec	++		8737962	1					
ANR	8738180	Identifier	b		8737962	1					
ANR	8738181	ExpressionStatement	b = * p	446:12:9956:9962	8737962	1	True				
ANR	8738182	AssignmentExpression	b = * p		8737962	0		=			
ANR	8738183	Identifier	b		8737962	0					
ANR	8738184	UnaryOperationExpression	* p		8737962	1					
ANR	8738185	UnaryOperator	*		8737962	0					
ANR	8738186	Identifier	p		8737962	1					
ANR	8738187	ElseStatement	else		8737962	0					
ANR	8738188	ExpressionStatement	b = * p	450:10:10009:10015	8737962	0	True				
ANR	8738189	AssignmentExpression	b = * p		8737962	0		=			
ANR	8738190	Identifier	b		8737962	0					
ANR	8738191	UnaryOperationExpression	* p		8737962	1					
ANR	8738192	UnaryOperator	*		8737962	0					
ANR	8738193	Identifier	p		8737962	1					
ANR	8738194	BreakStatement	break ;	451:8:10025:10030	8737962	23	True				
ANR	8738195	ExpressionStatement	buffer [ r ++ ] = b	454:6:10047:10062	8737962	4	True				
ANR	8738196	AssignmentExpression	buffer [ r ++ ] = b		8737962	0		=			
ANR	8738197	ArrayIndexing	buffer [ r ++ ]		8737962	0					
ANR	8738198	Identifier	buffer		8737962	0					
ANR	8738199	PostIncDecOperationExpression	r ++		8737962	1					
ANR	8738200	Identifier	r		8737962	0					
ANR	8738201	IncDec	++		8737962	1					
ANR	8738202	Identifier	b		8737962	1					
ANR	8738203	ExpressionStatement	* cursor = p	457:4:10075:10086	8737962	3	True				
ANR	8738204	AssignmentExpression	* cursor = p		8737962	0		=			
ANR	8738205	UnaryOperationExpression	* cursor		8737962	0					
ANR	8738206	UnaryOperator	*		8737962	0					
ANR	8738207	Identifier	cursor		8737962	1					
ANR	8738208	Identifier	p		8737962	1					
ANR	8738209	ReturnStatement	return r ;	459:4:10093:10101	8737962	4	True				
ANR	8738210	Identifier	r		8737962	0					
ANR	8738211	Identifier	PS_Conv_StringDecode		8737962	1					
ANR	8738212	ParameterList	"FT_Byte * * cursor , FT_Byte * limit , FT_Byte * buffer , FT_Offset n"		8737962	2					
ANR	8738213	Parameter	FT_Byte * * cursor	370:24:8688:8704	8737962	0	True				
ANR	8738214	ParameterType	FT_Byte * *		8737962	0					
ANR	8738215	Identifier	cursor		8737962	1					
ANR	8738216	Parameter	FT_Byte * limit	371:24:8731:8746	8737962	1	True				
ANR	8738217	ParameterType	FT_Byte *		8737962	0					
ANR	8738218	Identifier	limit		8737962	1					
ANR	8738219	Parameter	FT_Byte * buffer	372:24:8773:8789	8737962	2	True				
ANR	8738220	ParameterType	FT_Byte *		8737962	0					
ANR	8738221	Identifier	buffer		8737962	1					
ANR	8738222	Parameter	FT_Offset n	373:24:8816:8827	8737962	3	True				
ANR	8738223	ParameterType	FT_Offset		8737962	0					
ANR	8738224	Identifier	n		8737962	1					
ANR	8738225	CFGEntryNode	ENTRY		8737962		True				
ANR	8738226	CFGExitNode	EXIT		8737962		True				
ANR	8738227	Symbol	cursor		8737962						
ANR	8738228	Symbol	p		8737962						
ANR	8738229	Symbol	r		8737962						
ANR	8738230	Symbol	* cursor		8737962						
ANR	8738231	Symbol	b		8737962						
ANR	8738232	Symbol	* buffer		8737962						
ANR	8738233	Symbol	limit		8737962						
ANR	8738234	Symbol	* p		8737962						
ANR	8738235	Symbol	buffer		8737962						
ANR	8738236	Symbol	IS_PS_DIGIT		8737962						
ANR	8738237	Symbol	n		8737962						
ANR	8738238	Function	PS_Conv_ASCIIHexDecode	465:2:10152:11589							
ANR	8738239	FunctionDef	"PS_Conv_ASCIIHexDecode (FT_Byte * * cursor , FT_Byte * limit , FT_Byte * buffer , FT_Offset n)"		8738238	0					
ANR	8738240	CompoundStatement		469:2:10327:11589	8738238	0					
ANR	8738241	IdentifierDeclStatement	FT_Byte * p ;	470:4:10333:10344	8738238	0	True				
ANR	8738242	IdentifierDecl	* p		8738238	0					
ANR	8738243	IdentifierDeclType	FT_Byte *		8738238	0					
ANR	8738244	Identifier	p		8738238	1					
ANR	8738245	IdentifierDeclStatement	FT_UInt r = 0 ;	471:4:10350:10367	8738238	1	True				
ANR	8738246	IdentifierDecl	r = 0		8738238	0					
ANR	8738247	IdentifierDeclType	FT_UInt		8738238	0					
ANR	8738248	Identifier	r		8738238	1					
ANR	8738249	AssignmentExpression	r = 0		8738238	2		=			
ANR	8738250	Identifier	r		8738238	0					
ANR	8738251	PrimaryExpression	0		8738238	1					
ANR	8738252	IdentifierDeclStatement	FT_UInt w = 0 ;	472:4:10373:10390	8738238	2	True				
ANR	8738253	IdentifierDecl	w = 0		8738238	0					
ANR	8738254	IdentifierDeclType	FT_UInt		8738238	0					
ANR	8738255	Identifier	w		8738238	1					
ANR	8738256	AssignmentExpression	w = 0		8738238	2		=			
ANR	8738257	Identifier	w		8738238	0					
ANR	8738258	PrimaryExpression	0		8738238	1					
ANR	8738259	IdentifierDeclStatement	FT_UInt pad = 0x01 ;	473:4:10396:10416	8738238	3	True				
ANR	8738260	IdentifierDecl	pad = 0x01		8738238	0					
ANR	8738261	IdentifierDeclType	FT_UInt		8738238	0					
ANR	8738262	Identifier	pad		8738238	1					
ANR	8738263	AssignmentExpression	pad = 0x01		8738238	2		=			
ANR	8738264	Identifier	pad		8738238	0					
ANR	8738265	PrimaryExpression	0x01		8738238	1					
ANR	8738266	ExpressionStatement	n *= 2	476:4:10424:10430	8738238	4	True				
ANR	8738267	AssignmentExpression	n *= 2		8738238	0		*=			
ANR	8738268	Identifier	n		8738238	0					
ANR	8738269	PrimaryExpression	2		8738238	1					
ANR	8738270	ExpressionStatement	p = * cursor	480:4:10444:10455	8738238	5	True				
ANR	8738271	AssignmentExpression	p = * cursor		8738238	0		=			
ANR	8738272	Identifier	p		8738238	0					
ANR	8738273	UnaryOperationExpression	* cursor		8738238	1					
ANR	8738274	UnaryOperator	*		8738238	0					
ANR	8738275	Identifier	cursor		8738238	1					
ANR	8738276	IfStatement	if ( p >= limit )		8738238	6					
ANR	8738277	Condition	p >= limit	482:9:10467:10476	8738238	0	True				
ANR	8738278	RelationalExpression	p >= limit		8738238	0		>=			
ANR	8738279	Identifier	p		8738238	0					
ANR	8738280	Identifier	limit		8738238	1					
ANR	8738281	ReturnStatement	return 0 ;	483:6:10486:10494	8738238	1	True				
ANR	8738282	PrimaryExpression	0		8738238	0					
ANR	8738283	IfStatement	if ( n > ( FT_UInt ) ( limit - p ) )		8738238	7					
ANR	8738284	Condition	n > ( FT_UInt ) ( limit - p )	485:9:10506:10531	8738238	0	True				
ANR	8738285	RelationalExpression	n > ( FT_UInt ) ( limit - p )		8738238	0		>			
ANR	8738286	Identifier	n		8738238	0					
ANR	8738287	CastExpression	( FT_UInt ) ( limit - p )		8738238	1					
ANR	8738288	CastTarget	FT_UInt		8738238	0					
ANR	8738289	AdditiveExpression	limit - p		8738238	1		-			
ANR	8738290	Identifier	limit		8738238	0					
ANR	8738291	Identifier	p		8738238	1					
ANR	8738292	ExpressionStatement	n = ( FT_UInt ) ( limit - p )	486:6:10541:10567	8738238	1	True				
ANR	8738293	AssignmentExpression	n = ( FT_UInt ) ( limit - p )		8738238	0		=			
ANR	8738294	Identifier	n		8738238	0					
ANR	8738295	CastExpression	( FT_UInt ) ( limit - p )		8738238	1					
ANR	8738296	CastTarget	FT_UInt		8738238	0					
ANR	8738297	AdditiveExpression	limit - p		8738238	1		-			
ANR	8738298	Identifier	limit		8738238	0					
ANR	8738299	Identifier	p		8738238	1					
ANR	8738300	ForStatement	for ( ; r < n ; r ++ )		8738238	8					
ANR	8738301	Condition	r < n	489:12:10658:10662	8738238	0	True				
ANR	8738302	RelationalExpression	r < n		8738238	0		<			
ANR	8738303	Identifier	r		8738238	0					
ANR	8738304	Identifier	n		8738238	1					
ANR	8738305	PostIncDecOperationExpression	r ++	489:19:10665:10667	8738238	1	True				
ANR	8738306	Identifier	r		8738238	0					
ANR	8738307	IncDec	++		8738238	1					
ANR	8738308	CompoundStatement		23:6:355:372	8738238	2					
ANR	8738309	IdentifierDeclStatement	FT_UInt c = p [ r ] ;	491:6:10683:10700	8738238	0	True				
ANR	8738310	IdentifierDecl	c = p [ r ]		8738238	0					
ANR	8738311	IdentifierDeclType	FT_UInt		8738238	0					
ANR	8738312	Identifier	c		8738238	1					
ANR	8738313	AssignmentExpression	c = p [ r ]		8738238	2		=			
ANR	8738314	Identifier	c		8738238	0					
ANR	8738315	ArrayIndexing	p [ r ]		8738238	1					
ANR	8738316	Identifier	p		8738238	0					
ANR	8738317	Identifier	r		8738238	1					
ANR	8738318	IfStatement	if ( IS_PS_SPACE ( c ) )		8738238	1					
ANR	8738319	Condition	IS_PS_SPACE ( c )	494:11:10715:10730	8738238	0	True				
ANR	8738320	CallExpression	IS_PS_SPACE ( c )		8738238	0					
ANR	8738321	Callee	IS_PS_SPACE		8738238	0					
ANR	8738322	Identifier	IS_PS_SPACE		8738238	0					
ANR	8738323	ArgumentList	c		8738238	1					
ANR	8738324	Argument	c		8738238	0					
ANR	8738325	Identifier	c		8738238	0					
ANR	8738326	ContinueStatement	continue ;	495:8:10742:10750	8738238	1	True				
ANR	8738327	Statement	if	497:6:10759:10760	8738238	2	True				
ANR	8738328	Statement	(	497:9:10762:10762	8738238	3	True				
ANR	8738329	Statement	c	497:11:10764:10764	8738238	4	True				
ANR	8738330	Statement	OP	497:13:10766:10767	8738238	5	True				
ANR	8738331	Statement	0x80	497:16:10769:10772	8738238	6	True				
ANR	8738332	Statement	)	497:21:10774:10774	8738238	7	True				
ANR	8738333	BreakStatement	break ;	498:8:10784:10789	8738238	8	True				
ANR	8738334	ExpressionStatement	c = ( FT_UInt ) ft_char_table [ c & 0x7F ]	500:6:10798:10834	8738238	9	True				
ANR	8738335	AssignmentExpression	c = ( FT_UInt ) ft_char_table [ c & 0x7F ]		8738238	0		=			
ANR	8738336	Identifier	c		8738238	0					
ANR	8738337	CastExpression	( FT_UInt ) ft_char_table [ c & 0x7F ]		8738238	1					
ANR	8738338	CastTarget	FT_UInt		8738238	0					
ANR	8738339	ArrayIndexing	ft_char_table [ c & 0x7F ]		8738238	1					
ANR	8738340	Identifier	ft_char_table		8738238	0					
ANR	8738341	BitAndExpression	c & 0x7F		8738238	1		&			
ANR	8738342	Identifier	c		8738238	0					
ANR	8738343	PrimaryExpression	0x7F		8738238	1					
ANR	8738344	IfStatement	if ( c >= 16 )		8738238	10					
ANR	8738345	Condition	c >= 16	501:11:10847:10853	8738238	0	True				
ANR	8738346	RelationalExpression	c >= 16		8738238	0		>=			
ANR	8738347	Identifier	c		8738238	0					
ANR	8738348	PrimaryExpression	16		8738238	1					
ANR	8738349	BreakStatement	break ;	502:8:10865:10870	8738238	1	True				
ANR	8738350	ExpressionStatement	pad = ( pad << 4 ) | c	504:6:10879:10901	8738238	11	True				
ANR	8738351	AssignmentExpression	pad = ( pad << 4 ) | c		8738238	0		=			
ANR	8738352	Identifier	pad		8738238	0					
ANR	8738353	InclusiveOrExpression	( pad << 4 ) | c		8738238	1		|			
ANR	8738354	ShiftExpression	pad << 4		8738238	0		<<			
ANR	8738355	Identifier	pad		8738238	0					
ANR	8738356	PrimaryExpression	4		8738238	1					
ANR	8738357	Identifier	c		8738238	1					
ANR	8738358	IfStatement	if ( pad & 0x100 )		8738238	12					
ANR	8738359	Condition	pad & 0x100	505:11:10914:10924	8738238	0	True				
ANR	8738360	BitAndExpression	pad & 0x100		8738238	0		&			
ANR	8738361	Identifier	pad		8738238	0					
ANR	8738362	PrimaryExpression	0x100		8738238	1					
ANR	8738363	CompoundStatement		38:6:606:606	8738238	1					
ANR	8738364	ExpressionStatement	buffer [ w ++ ] = ( FT_Byte ) pad	507:8:10944:10970	8738238	0	True				
ANR	8738365	AssignmentExpression	buffer [ w ++ ] = ( FT_Byte ) pad		8738238	0		=			
ANR	8738366	ArrayIndexing	buffer [ w ++ ]		8738238	0					
ANR	8738367	Identifier	buffer		8738238	0					
ANR	8738368	PostIncDecOperationExpression	w ++		8738238	1					
ANR	8738369	Identifier	w		8738238	0					
ANR	8738370	IncDec	++		8738238	1					
ANR	8738371	CastExpression	( FT_Byte ) pad		8738238	1					
ANR	8738372	CastTarget	FT_Byte		8738238	0					
ANR	8738373	Identifier	pad		8738238	1					
ANR	8738374	ExpressionStatement	pad = 0x01	508:8:10980:10998	8738238	1	True				
ANR	8738375	AssignmentExpression	pad = 0x01		8738238	0		=			
ANR	8738376	Identifier	pad		8738238	0					
ANR	8738377	PrimaryExpression	0x01		8738238	1					
ANR	8738378	IfStatement	if ( pad != 0x01 )		8738238	9					
ANR	8738379	Condition	pad != 0x01	512:9:11024:11034	8738238	0	True				
ANR	8738380	EqualityExpression	pad != 0x01		8738238	0		!=			
ANR	8738381	Identifier	pad		8738238	0					
ANR	8738382	PrimaryExpression	0x01		8738238	1					
ANR	8738383	ExpressionStatement	buffer [ w ++ ] = ( FT_Byte ) ( pad << 4 )	513:6:11044:11079	8738238	1	True				
ANR	8738384	AssignmentExpression	buffer [ w ++ ] = ( FT_Byte ) ( pad << 4 )		8738238	0		=			
ANR	8738385	ArrayIndexing	buffer [ w ++ ]		8738238	0					
ANR	8738386	Identifier	buffer		8738238	0					
ANR	8738387	PostIncDecOperationExpression	w ++		8738238	1					
ANR	8738388	Identifier	w		8738238	0					
ANR	8738389	IncDec	++		8738238	1					
ANR	8738390	CastExpression	( FT_Byte ) ( pad << 4 )		8738238	1					
ANR	8738391	CastTarget	FT_Byte		8738238	0					
ANR	8738392	ShiftExpression	pad << 4		8738238	1		<<			
ANR	8738393	Identifier	pad		8738238	0					
ANR	8738394	PrimaryExpression	4		8738238	1					
ANR	8738395	ExpressionStatement	* cursor = p + r	515:4:11086:11101	8738238	10	True				
ANR	8738396	AssignmentExpression	* cursor = p + r		8738238	0		=			
ANR	8738397	UnaryOperationExpression	* cursor		8738238	0					
ANR	8738398	UnaryOperator	*		8738238	0					
ANR	8738399	Identifier	cursor		8738238	1					
ANR	8738400	AdditiveExpression	p + r		8738238	1		+			
ANR	8738401	Identifier	p		8738238	0					
ANR	8738402	Identifier	r		8738238	1					
ANR	8738403	ReturnStatement	return w ;	517:4:11108:11116	8738238	11	True				
ANR	8738404	Identifier	w		8738238	0					
ANR	8738405	Identifier	PS_Conv_ASCIIHexDecode		8738238	1					
ANR	8738406	ParameterList	"FT_Byte * * cursor , FT_Byte * limit , FT_Byte * buffer , FT_Offset n"		8738238	2					
ANR	8738407	Parameter	FT_Byte * * cursor	465:26:10176:10192	8738238	0	True				
ANR	8738408	ParameterType	FT_Byte * *		8738238	0					
ANR	8738409	Identifier	cursor		8738238	1					
ANR	8738410	Parameter	FT_Byte * limit	466:26:10221:10236	8738238	1	True				
ANR	8738411	ParameterType	FT_Byte *		8738238	0					
ANR	8738412	Identifier	limit		8738238	1					
ANR	8738413	Parameter	FT_Byte * buffer	467:26:10265:10281	8738238	2	True				
ANR	8738414	ParameterType	FT_Byte *		8738238	0					
ANR	8738415	Identifier	buffer		8738238	1					
ANR	8738416	Parameter	FT_Offset n	468:26:10310:10321	8738238	3	True				
ANR	8738417	ParameterType	FT_Offset		8738238	0					
ANR	8738418	Identifier	n		8738238	1					
ANR	8738419	CFGEntryNode	ENTRY		8738238		True				
ANR	8738420	CFGExitNode	EXIT		8738238		True				
ANR	8738421	Symbol	cursor		8738238						
ANR	8738422	Symbol	* cursor		8738238						
ANR	8738423	Symbol	* buffer		8738238						
ANR	8738424	Symbol	c		8738238						
ANR	8738425	Symbol	* ft_char_table		8738238						
ANR	8738426	Symbol	* c		8738238						
ANR	8738427	Symbol	n		8738238						
ANR	8738428	Symbol	p		8738238						
ANR	8738429	Symbol	r		8738238						
ANR	8738430	Symbol	pad		8738238						
ANR	8738431	Symbol	w		8738238						
ANR	8738432	Symbol	limit		8738238						
ANR	8738433	Symbol	* p		8738238						
ANR	8738434	Symbol	buffer		8738238						
ANR	8738435	Symbol	* r		8738238						
ANR	8738436	Symbol	ft_char_table		8738238						
ANR	8738437	Symbol	IS_PS_SPACE		8738238						
ANR	8738438	Function	PS_Conv_EexecDecode	558:2:11621:12560							
ANR	8738439	FunctionDef	"PS_Conv_EexecDecode (FT_Byte * * cursor , FT_Byte * limit , FT_Byte * buffer , FT_Offset n , FT_UShort * seed)"		8738438	0					
ANR	8738440	CompoundStatement		563:2:11829:12560	8738438	0					
ANR	8738441	IdentifierDeclStatement	FT_Byte * p ;	564:4:11835:11846	8738438	0	True				
ANR	8738442	IdentifierDecl	* p		8738438	0					
ANR	8738443	IdentifierDeclType	FT_Byte *		8738438	0					
ANR	8738444	Identifier	p		8738438	1					
ANR	8738445	IdentifierDeclStatement	FT_UInt r ;	565:4:11852:11863	8738438	1	True				
ANR	8738446	IdentifierDecl	r		8738438	0					
ANR	8738447	IdentifierDeclType	FT_UInt		8738438	0					
ANR	8738448	Identifier	r		8738438	1					
ANR	8738449	IdentifierDeclStatement	FT_UInt s = * seed ;	566:4:11869:11888	8738438	2	True				
ANR	8738450	IdentifierDecl	s = * seed		8738438	0					
ANR	8738451	IdentifierDeclType	FT_UInt		8738438	0					
ANR	8738452	Identifier	s		8738438	1					
ANR	8738453	AssignmentExpression	s = * seed		8738438	2		=			
ANR	8738454	Identifier	s		8738438	0					
ANR	8738455	UnaryOperationExpression	* seed		8738438	1					
ANR	8738456	UnaryOperator	*		8738438	0					
ANR	8738457	Identifier	seed		8738438	1					
ANR	8738458	ExpressionStatement	p = * cursor	571:4:11903:11914	8738438	3	True				
ANR	8738459	AssignmentExpression	p = * cursor		8738438	0		=			
ANR	8738460	Identifier	p		8738438	0					
ANR	8738461	UnaryOperationExpression	* cursor		8738438	1					
ANR	8738462	UnaryOperator	*		8738438	0					
ANR	8738463	Identifier	cursor		8738438	1					
ANR	8738464	IfStatement	if ( p >= limit )		8738438	4					
ANR	8738465	Condition	p >= limit	573:9:11926:11935	8738438	0	True				
ANR	8738466	RelationalExpression	p >= limit		8738438	0		>=			
ANR	8738467	Identifier	p		8738438	0					
ANR	8738468	Identifier	limit		8738438	1					
ANR	8738469	ReturnStatement	return 0 ;	574:6:11945:11953	8738438	1	True				
ANR	8738470	PrimaryExpression	0		8738438	0					
ANR	8738471	IfStatement	if ( n > ( FT_UInt ) ( limit - p ) )		8738438	5					
ANR	8738472	Condition	n > ( FT_UInt ) ( limit - p )	576:9:11965:11988	8738438	0	True				
ANR	8738473	RelationalExpression	n > ( FT_UInt ) ( limit - p )		8738438	0		>			
ANR	8738474	Identifier	n		8738438	0					
ANR	8738475	CastExpression	( FT_UInt ) ( limit - p )		8738438	1					
ANR	8738476	CastTarget	FT_UInt		8738438	0					
ANR	8738477	AdditiveExpression	limit - p		8738438	1		-			
ANR	8738478	Identifier	limit		8738438	0					
ANR	8738479	Identifier	p		8738438	1					
ANR	8738480	ExpressionStatement	n = ( FT_UInt ) ( limit - p )	577:6:11998:12022	8738438	1	True				
ANR	8738481	AssignmentExpression	n = ( FT_UInt ) ( limit - p )		8738438	0		=			
ANR	8738482	Identifier	n		8738438	0					
ANR	8738483	CastExpression	( FT_UInt ) ( limit - p )		8738438	1					
ANR	8738484	CastTarget	FT_UInt		8738438	0					
ANR	8738485	AdditiveExpression	limit - p		8738438	1		-			
ANR	8738486	Identifier	limit		8738438	0					
ANR	8738487	Identifier	p		8738438	1					
ANR	8738488	ForStatement	for ( r = 0 ; r < n ; r ++ )		8738438	6					
ANR	8738489	ForInit	r = 0 ;	579:10:12035:12040	8738438	0	True				
ANR	8738490	AssignmentExpression	r = 0		8738438	0		=			
ANR	8738491	Identifier	r		8738438	0					
ANR	8738492	PrimaryExpression	0		8738438	1					
ANR	8738493	Condition	r < n	579:17:12042:12046	8738438	1	True				
ANR	8738494	RelationalExpression	r < n		8738438	0		<			
ANR	8738495	Identifier	r		8738438	0					
ANR	8738496	Identifier	n		8738438	1					
ANR	8738497	PostIncDecOperationExpression	r ++	579:24:12049:12051	8738438	2	True				
ANR	8738498	Identifier	r		8738438	0					
ANR	8738499	IncDec	++		8738438	1					
ANR	8738500	CompoundStatement		20:6:264:299	8738438	3					
ANR	8738501	IdentifierDeclStatement	FT_UInt val = p [ r ] ;	581:6:12067:12086	8738438	0	True				
ANR	8738502	IdentifierDecl	val = p [ r ]		8738438	0					
ANR	8738503	IdentifierDeclType	FT_UInt		8738438	0					
ANR	8738504	Identifier	val		8738438	1					
ANR	8738505	AssignmentExpression	val = p [ r ]		8738438	2		=			
ANR	8738506	Identifier	val		8738438	0					
ANR	8738507	ArrayIndexing	p [ r ]		8738438	1					
ANR	8738508	Identifier	p		8738438	0					
ANR	8738509	Identifier	r		8738438	1					
ANR	8738510	IdentifierDeclStatement	FT_UInt b = ( val ^ ( s >> 8 ) ) ;	582:6:12094:12129	8738438	1	True				
ANR	8738511	IdentifierDecl	b = ( val ^ ( s >> 8 ) )		8738438	0					
ANR	8738512	IdentifierDeclType	FT_UInt		8738438	0					
ANR	8738513	Identifier	b		8738438	1					
ANR	8738514	AssignmentExpression	b = ( val ^ ( s >> 8 ) )		8738438	2		=			
ANR	8738515	Identifier	b		8738438	0					
ANR	8738516	ExclusiveOrExpression	val ^ ( s >> 8 )		8738438	1		^			
ANR	8738517	Identifier	val		8738438	0					
ANR	8738518	ShiftExpression	s >> 8		8738438	1		>>			
ANR	8738519	Identifier	s		8738438	0					
ANR	8738520	PrimaryExpression	8		8738438	1					
ANR	8738521	ExpressionStatement	s = ( ( val + s ) * 52845U + 22719 ) & 0xFFFFU	585:6:12139:12189	8738438	2	True				
ANR	8738522	AssignmentExpression	s = ( ( val + s ) * 52845U + 22719 ) & 0xFFFFU		8738438	0		=			
ANR	8738523	Identifier	s		8738438	0					
ANR	8738524	BitAndExpression	( ( val + s ) * 52845U + 22719 ) & 0xFFFFU		8738438	1		&			
ANR	8738525	AdditiveExpression	( val + s ) * 52845U + 22719		8738438	0		+			
ANR	8738526	MultiplicativeExpression	( val + s ) * 52845U		8738438	0		*			
ANR	8738527	AdditiveExpression	val + s		8738438	0		+			
ANR	8738528	Identifier	val		8738438	0					
ANR	8738529	Identifier	s		8738438	1					
ANR	8738530	PrimaryExpression	52845U		8738438	1					
ANR	8738531	PrimaryExpression	22719		8738438	1					
ANR	8738532	PrimaryExpression	0xFFFFU		8738438	1					
ANR	8738533	ExpressionStatement	buffer [ r ] = ( FT_Byte ) b	586:6:12197:12220	8738438	3	True				
ANR	8738534	AssignmentExpression	buffer [ r ] = ( FT_Byte ) b		8738438	0		=			
ANR	8738535	ArrayIndexing	buffer [ r ]		8738438	0					
ANR	8738536	Identifier	buffer		8738438	0					
ANR	8738537	Identifier	r		8738438	1					
ANR	8738538	CastExpression	( FT_Byte ) b		8738438	1					
ANR	8738539	CastTarget	FT_Byte		8738438	0					
ANR	8738540	Identifier	b		8738438	1					
ANR	8738541	ExpressionStatement	* cursor = p + n	589:4:12233:12248	8738438	7	True				
ANR	8738542	AssignmentExpression	* cursor = p + n		8738438	0		=			
ANR	8738543	UnaryOperationExpression	* cursor		8738438	0					
ANR	8738544	UnaryOperator	*		8738438	0					
ANR	8738545	Identifier	cursor		8738438	1					
ANR	8738546	AdditiveExpression	p + n		8738438	1		+			
ANR	8738547	Identifier	p		8738438	0					
ANR	8738548	Identifier	n		8738438	1					
ANR	8738549	ExpressionStatement	* seed = ( FT_UShort ) s	590:4:12254:12276	8738438	8	True				
ANR	8738550	AssignmentExpression	* seed = ( FT_UShort ) s		8738438	0		=			
ANR	8738551	UnaryOperationExpression	* seed		8738438	0					
ANR	8738552	UnaryOperator	*		8738438	0					
ANR	8738553	Identifier	seed		8738438	1					
ANR	8738554	CastExpression	( FT_UShort ) s		8738438	1					
ANR	8738555	CastTarget	FT_UShort		8738438	0					
ANR	8738556	Identifier	s		8738438	1					
ANR	8738557	ReturnStatement	return r ;	607:4:12548:12556	8738438	9	True				
ANR	8738558	Identifier	r		8738438	0					
ANR	8738559	Identifier	PS_Conv_EexecDecode		8738438	1					
ANR	8738560	ParameterList	"FT_Byte * * cursor , FT_Byte * limit , FT_Byte * buffer , FT_Offset n , FT_UShort * seed"		8738438	2					
ANR	8738561	Parameter	FT_Byte * * cursor	558:23:11642:11659	8738438	0	True				
ANR	8738562	ParameterType	FT_Byte * *		8738438	0					
ANR	8738563	Identifier	cursor		8738438	1					
ANR	8738564	Parameter	FT_Byte * limit	559:23:11685:11701	8738438	1	True				
ANR	8738565	ParameterType	FT_Byte *		8738438	0					
ANR	8738566	Identifier	limit		8738438	1					
ANR	8738567	Parameter	FT_Byte * buffer	560:23:11727:11744	8738438	2	True				
ANR	8738568	ParameterType	FT_Byte *		8738438	0					
ANR	8738569	Identifier	buffer		8738438	1					
ANR	8738570	Parameter	FT_Offset n	561:23:11770:11782	8738438	3	True				
ANR	8738571	ParameterType	FT_Offset		8738438	0					
ANR	8738572	Identifier	n		8738438	1					
ANR	8738573	Parameter	FT_UShort * seed	562:23:11808:11823	8738438	4	True				
ANR	8738574	ParameterType	FT_UShort *		8738438	0					
ANR	8738575	Identifier	seed		8738438	1					
ANR	8738576	CFGEntryNode	ENTRY		8738438		True				
ANR	8738577	CFGExitNode	EXIT		8738438		True				
ANR	8738578	Symbol	cursor		8738438						
ANR	8738579	Symbol	val		8738438						
ANR	8738580	Symbol	* cursor		8738438						
ANR	8738581	Symbol	b		8738438						
ANR	8738582	Symbol	* buffer		8738438						
ANR	8738583	Symbol	* seed		8738438						
ANR	8738584	Symbol	seed		8738438						
ANR	8738585	Symbol	n		8738438						
ANR	8738586	Symbol	p		8738438						
ANR	8738587	Symbol	r		8738438						
ANR	8738588	Symbol	s		8738438						
ANR	8738589	Symbol	limit		8738438						
ANR	8738590	Symbol	* p		8738438						
ANR	8738591	Symbol	buffer		8738438						
ANR	8738592	Symbol	* r		8738438						
