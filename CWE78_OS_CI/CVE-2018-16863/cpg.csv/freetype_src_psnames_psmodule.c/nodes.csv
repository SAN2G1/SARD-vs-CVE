command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3610634	File	data/converged/CVE-2018-16863_ghostpdl/freetype_src_psnames_psmodule.c								
ANR	3610635	Function	ps_unicode_value	62:2:2734:5758							
ANR	3610636	FunctionDef	ps_unicode_value (const char * glyph_name)		3610635	0					
ANR	3610637	CompoundStatement		64:2:2799:5758	3610635	0					
ANR	3610638	IfStatement	if ( glyph_name [ 0 ] == 'u' && glyph_name [ 1 ] == 'n' && glyph_name [ 2 ] == 'i' )		3610635	0					
ANR	3610639	Condition	glyph_name [ 0 ] == 'u' && glyph_name [ 1 ] == 'n' && glyph_name [ 2 ] == 'i'	67:9:2950:3035	3610635	0	True				
ANR	3610640	AndExpression	glyph_name [ 0 ] == 'u' && glyph_name [ 1 ] == 'n' && glyph_name [ 2 ] == 'i'		3610635	0		&&			
ANR	3610641	EqualityExpression	glyph_name [ 0 ] == 'u'		3610635	0		==			
ANR	3610642	ArrayIndexing	glyph_name [ 0 ]		3610635	0					
ANR	3610643	Identifier	glyph_name		3610635	0					
ANR	3610644	PrimaryExpression	0		3610635	1					
ANR	3610645	PrimaryExpression	'u'		3610635	1					
ANR	3610646	AndExpression	glyph_name [ 1 ] == 'n' && glyph_name [ 2 ] == 'i'		3610635	1		&&			
ANR	3610647	EqualityExpression	glyph_name [ 1 ] == 'n'		3610635	0		==			
ANR	3610648	ArrayIndexing	glyph_name [ 1 ]		3610635	0					
ANR	3610649	Identifier	glyph_name		3610635	0					
ANR	3610650	PrimaryExpression	1		3610635	1					
ANR	3610651	PrimaryExpression	'n'		3610635	1					
ANR	3610652	EqualityExpression	glyph_name [ 2 ] == 'i'		3610635	1		==			
ANR	3610653	ArrayIndexing	glyph_name [ 2 ]		3610635	0					
ANR	3610654	Identifier	glyph_name		3610635	0					
ANR	3610655	PrimaryExpression	2		3610635	1					
ANR	3610656	PrimaryExpression	'i'		3610635	1					
ANR	3610657	CompoundStatement		16:6:591:626	3610635	1					
ANR	3610658	IdentifierDeclStatement	FT_Int count ;	77:6:3335:3353	3610635	0	True				
ANR	3610659	IdentifierDecl	count		3610635	0					
ANR	3610660	IdentifierDeclType	FT_Int		3610635	0					
ANR	3610661	Identifier	count		3610635	1					
ANR	3610662	IdentifierDeclStatement	FT_UInt32 value = 0 ;	78:6:3361:3383	3610635	1	True				
ANR	3610663	IdentifierDecl	value = 0		3610635	0					
ANR	3610664	IdentifierDeclType	FT_UInt32		3610635	0					
ANR	3610665	Identifier	value		3610635	1					
ANR	3610666	AssignmentExpression	value = 0		3610635	2		=			
ANR	3610667	Identifier	value		3610635	0					
ANR	3610668	PrimaryExpression	0		3610635	1					
ANR	3610669	IdentifierDeclStatement	const char * p = glyph_name + 3 ;	79:6:3391:3426	3610635	2	True				
ANR	3610670	IdentifierDecl	* p = glyph_name + 3		3610635	0					
ANR	3610671	IdentifierDeclType	const char *		3610635	0					
ANR	3610672	Identifier	p		3610635	1					
ANR	3610673	AssignmentExpression	* p = glyph_name + 3		3610635	2		=			
ANR	3610674	Identifier	p		3610635	0					
ANR	3610675	AdditiveExpression	glyph_name + 3		3610635	1		+			
ANR	3610676	Identifier	glyph_name		3610635	0					
ANR	3610677	PrimaryExpression	3		3610635	1					
ANR	3610678	ForStatement	"for ( count = 4 ; count > 0 ; count -- , p ++ )"		3610635	3					
ANR	3610679	ForInit	count = 4 ;	82:12:3442:3451	3610635	0	True				
ANR	3610680	AssignmentExpression	count = 4		3610635	0		=			
ANR	3610681	Identifier	count		3610635	0					
ANR	3610682	PrimaryExpression	4		3610635	1					
ANR	3610683	Condition	count > 0	82:23:3453:3461	3610635	1	True				
ANR	3610684	RelationalExpression	count > 0		3610635	0		>			
ANR	3610685	Identifier	count		3610635	0					
ANR	3610686	PrimaryExpression	0		3610635	1					
ANR	3610687	Expression	"count -- , p ++"	82:34:3464:3475	3610635	2	True				
ANR	3610688	PostIncDecOperationExpression	count --		3610635	0					
ANR	3610689	Identifier	count		3610635	0					
ANR	3610690	IncDec	--		3610635	1					
ANR	3610691	PostIncDecOperationExpression	p ++		3610635	1					
ANR	3610692	Identifier	p		3610635	0					
ANR	3610693	IncDec	++		3610635	1					
ANR	3610694	CompoundStatement		22:8:725:740	3610635	3					
ANR	3610695	IdentifierDeclStatement	char c = * p ;	84:8:3495:3515	3610635	0	True				
ANR	3610696	IdentifierDecl	c = * p		3610635	0					
ANR	3610697	IdentifierDeclType	char		3610635	0					
ANR	3610698	Identifier	c		3610635	1					
ANR	3610699	AssignmentExpression	c = * p		3610635	2		=			
ANR	3610700	Identifier	c		3610635	0					
ANR	3610701	UnaryOperationExpression	* p		3610635	1					
ANR	3610702	UnaryOperator	*		3610635	0					
ANR	3610703	Identifier	p		3610635	1					
ANR	3610704	IdentifierDeclStatement	unsigned int d ;	85:8:3525:3540	3610635	1	True				
ANR	3610705	IdentifierDecl	d		3610635	0					
ANR	3610706	IdentifierDeclType	unsigned int		3610635	0					
ANR	3610707	Identifier	d		3610635	1					
ANR	3610708	ExpressionStatement	d = ( unsigned char ) c - '0'	88:8:3552:3578	3610635	2	True				
ANR	3610709	AssignmentExpression	d = ( unsigned char ) c - '0'		3610635	0		=			
ANR	3610710	Identifier	d		3610635	0					
ANR	3610711	AdditiveExpression	( unsigned char ) c - '0'		3610635	1		-			
ANR	3610712	CastExpression	( unsigned char ) c		3610635	0					
ANR	3610713	CastTarget	unsigned char		3610635	0					
ANR	3610714	Identifier	c		3610635	1					
ANR	3610715	PrimaryExpression	'0'		3610635	1					
ANR	3610716	IfStatement	if ( d >= 10 )		3610635	3					
ANR	3610717	Condition	d >= 10	89:13:3593:3599	3610635	0	True				
ANR	3610718	RelationalExpression	d >= 10		3610635	0		>=			
ANR	3610719	Identifier	d		3610635	0					
ANR	3610720	PrimaryExpression	10		3610635	1					
ANR	3610721	CompoundStatement		27:8:811:811	3610635	1					
ANR	3610722	ExpressionStatement	d = ( unsigned char ) c - 'A'	91:10:3623:3649	3610635	0	True				
ANR	3610723	AssignmentExpression	d = ( unsigned char ) c - 'A'		3610635	0		=			
ANR	3610724	Identifier	d		3610635	0					
ANR	3610725	AdditiveExpression	( unsigned char ) c - 'A'		3610635	1		-			
ANR	3610726	CastExpression	( unsigned char ) c		3610635	0					
ANR	3610727	CastTarget	unsigned char		3610635	0					
ANR	3610728	Identifier	c		3610635	1					
ANR	3610729	PrimaryExpression	'A'		3610635	1					
ANR	3610730	IfStatement	if ( d >= 6 )		3610635	1					
ANR	3610731	Condition	d >= 6	92:15:3666:3671	3610635	0	True				
ANR	3610732	RelationalExpression	d >= 6		3610635	0		>=			
ANR	3610733	Identifier	d		3610635	0					
ANR	3610734	PrimaryExpression	6		3610635	1					
ANR	3610735	ExpressionStatement	d = 16	93:12:3687:3693	3610635	1	True				
ANR	3610736	AssignmentExpression	d = 16		3610635	0		=			
ANR	3610737	Identifier	d		3610635	0					
ANR	3610738	PrimaryExpression	16		3610635	1					
ANR	3610739	ElseStatement	else		3610635	0					
ANR	3610740	ExpressionStatement	d += 10	95:12:3722:3729	3610635	0	True				
ANR	3610741	AssignmentExpression	d += 10		3610635	0		+=			
ANR	3610742	Identifier	d		3610635	0					
ANR	3610743	PrimaryExpression	10		3610635	1					
ANR	3610744	IfStatement	if ( d >= 16 )		3610635	4					
ANR	3610745	Condition	d >= 16	101:13:3971:3977	3610635	0	True				
ANR	3610746	RelationalExpression	d >= 16		3610635	0		>=			
ANR	3610747	Identifier	d		3610635	0					
ANR	3610748	PrimaryExpression	16		3610635	1					
ANR	3610749	BreakStatement	break ;	102:10:3991:3996	3610635	1	True				
ANR	3610750	ExpressionStatement	value = ( value << 4 ) + d	104:8:4007:4033	3610635	5	True				
ANR	3610751	AssignmentExpression	value = ( value << 4 ) + d		3610635	0		=			
ANR	3610752	Identifier	value		3610635	0					
ANR	3610753	AdditiveExpression	( value << 4 ) + d		3610635	1		+			
ANR	3610754	ShiftExpression	value << 4		3610635	0		<<			
ANR	3610755	Identifier	value		3610635	0					
ANR	3610756	PrimaryExpression	4		3610635	1					
ANR	3610757	Identifier	d		3610635	1					
ANR	3610758	IfStatement	if ( count == 0 )		3610635	4					
ANR	3610759	Condition	count == 0	108:11:4105:4114	3610635	0	True				
ANR	3610760	EqualityExpression	count == 0		3610635	0		==			
ANR	3610761	Identifier	count		3610635	0					
ANR	3610762	PrimaryExpression	0		3610635	1					
ANR	3610763	CompoundStatement		46:6:1324:1324	3610635	1					
ANR	3610764	IfStatement	if ( * p == '\\0' )		3610635	0					
ANR	3610765	Condition	* p == '\\0'	110:13:4139:4148	3610635	0	True				
ANR	3610766	EqualityExpression	* p == '\\0'		3610635	0		==			
ANR	3610767	UnaryOperationExpression	* p		3610635	0					
ANR	3610768	UnaryOperator	*		3610635	0					
ANR	3610769	Identifier	p		3610635	1					
ANR	3610770	PrimaryExpression	'\\0'		3610635	1					
ANR	3610771	ReturnStatement	return value ;	111:10:4162:4174	3610635	1	True				
ANR	3610772	Identifier	value		3610635	0					
ANR	3610773	IfStatement	if ( * p == '.' )		3610635	1					
ANR	3610774	Condition	* p == '.'	112:13:4189:4197	3610635	0	True				
ANR	3610775	EqualityExpression	* p == '.'		3610635	0		==			
ANR	3610776	UnaryOperationExpression	* p		3610635	0					
ANR	3610777	UnaryOperator	*		3610635	0					
ANR	3610778	Identifier	p		3610635	1					
ANR	3610779	PrimaryExpression	'.'		3610635	1					
ANR	3610780	ReturnStatement	return ( FT_UInt32 ) ( value | VARIANT_BIT ) ;	113:10:4211:4252	3610635	1	True				
ANR	3610781	CastExpression	( FT_UInt32 ) ( value | VARIANT_BIT )		3610635	0					
ANR	3610782	CastTarget	FT_UInt32		3610635	0					
ANR	3610783	InclusiveOrExpression	value | VARIANT_BIT		3610635	1		|			
ANR	3610784	Identifier	value		3610635	0					
ANR	3610785	Identifier	VARIANT_BIT		3610635	1					
ANR	3610786	IfStatement	if ( glyph_name [ 0 ] == 'u' )		3610635	1					
ANR	3610787	Condition	glyph_name [ 0 ] == 'u'	119:9:4424:4443	3610635	0	True				
ANR	3610788	EqualityExpression	glyph_name [ 0 ] == 'u'		3610635	0		==			
ANR	3610789	ArrayIndexing	glyph_name [ 0 ]		3610635	0					
ANR	3610790	Identifier	glyph_name		3610635	0					
ANR	3610791	PrimaryExpression	0		3610635	1					
ANR	3610792	PrimaryExpression	'u'		3610635	1					
ANR	3610793	CompoundStatement		60:6:1715:1750	3610635	1					
ANR	3610794	IdentifierDeclStatement	FT_Int count ;	121:6:4459:4477	3610635	0	True				
ANR	3610795	IdentifierDecl	count		3610635	0					
ANR	3610796	IdentifierDeclType	FT_Int		3610635	0					
ANR	3610797	Identifier	count		3610635	1					
ANR	3610798	IdentifierDeclStatement	FT_UInt32 value = 0 ;	122:6:4485:4507	3610635	1	True				
ANR	3610799	IdentifierDecl	value = 0		3610635	0					
ANR	3610800	IdentifierDeclType	FT_UInt32		3610635	0					
ANR	3610801	Identifier	value		3610635	1					
ANR	3610802	AssignmentExpression	value = 0		3610635	2		=			
ANR	3610803	Identifier	value		3610635	0					
ANR	3610804	PrimaryExpression	0		3610635	1					
ANR	3610805	IdentifierDeclStatement	const char * p = glyph_name + 1 ;	123:6:4515:4550	3610635	2	True				
ANR	3610806	IdentifierDecl	* p = glyph_name + 1		3610635	0					
ANR	3610807	IdentifierDeclType	const char *		3610635	0					
ANR	3610808	Identifier	p		3610635	1					
ANR	3610809	AssignmentExpression	* p = glyph_name + 1		3610635	2		=			
ANR	3610810	Identifier	p		3610635	0					
ANR	3610811	AdditiveExpression	glyph_name + 1		3610635	1		+			
ANR	3610812	Identifier	glyph_name		3610635	0					
ANR	3610813	PrimaryExpression	1		3610635	1					
ANR	3610814	ForStatement	"for ( count = 6 ; count > 0 ; count -- , p ++ )"		3610635	3					
ANR	3610815	ForInit	count = 6 ;	126:12:4566:4575	3610635	0	True				
ANR	3610816	AssignmentExpression	count = 6		3610635	0		=			
ANR	3610817	Identifier	count		3610635	0					
ANR	3610818	PrimaryExpression	6		3610635	1					
ANR	3610819	Condition	count > 0	126:23:4577:4585	3610635	1	True				
ANR	3610820	RelationalExpression	count > 0		3610635	0		>			
ANR	3610821	Identifier	count		3610635	0					
ANR	3610822	PrimaryExpression	0		3610635	1					
ANR	3610823	Expression	"count -- , p ++"	126:34:4588:4599	3610635	2	True				
ANR	3610824	PostIncDecOperationExpression	count --		3610635	0					
ANR	3610825	Identifier	count		3610635	0					
ANR	3610826	IncDec	--		3610635	1					
ANR	3610827	PostIncDecOperationExpression	p ++		3610635	1					
ANR	3610828	Identifier	p		3610635	0					
ANR	3610829	IncDec	++		3610635	1					
ANR	3610830	CompoundStatement		66:8:1849:1864	3610635	3					
ANR	3610831	IdentifierDeclStatement	char c = * p ;	128:8:4619:4639	3610635	0	True				
ANR	3610832	IdentifierDecl	c = * p		3610635	0					
ANR	3610833	IdentifierDeclType	char		3610635	0					
ANR	3610834	Identifier	c		3610635	1					
ANR	3610835	AssignmentExpression	c = * p		3610635	2		=			
ANR	3610836	Identifier	c		3610635	0					
ANR	3610837	UnaryOperationExpression	* p		3610635	1					
ANR	3610838	UnaryOperator	*		3610635	0					
ANR	3610839	Identifier	p		3610635	1					
ANR	3610840	IdentifierDeclStatement	unsigned int d ;	129:8:4649:4664	3610635	1	True				
ANR	3610841	IdentifierDecl	d		3610635	0					
ANR	3610842	IdentifierDeclType	unsigned int		3610635	0					
ANR	3610843	Identifier	d		3610635	1					
ANR	3610844	ExpressionStatement	d = ( unsigned char ) c - '0'	132:8:4676:4702	3610635	2	True				
ANR	3610845	AssignmentExpression	d = ( unsigned char ) c - '0'		3610635	0		=			
ANR	3610846	Identifier	d		3610635	0					
ANR	3610847	AdditiveExpression	( unsigned char ) c - '0'		3610635	1		-			
ANR	3610848	CastExpression	( unsigned char ) c		3610635	0					
ANR	3610849	CastTarget	unsigned char		3610635	0					
ANR	3610850	Identifier	c		3610635	1					
ANR	3610851	PrimaryExpression	'0'		3610635	1					
ANR	3610852	IfStatement	if ( d >= 10 )		3610635	3					
ANR	3610853	Condition	d >= 10	133:13:4717:4723	3610635	0	True				
ANR	3610854	RelationalExpression	d >= 10		3610635	0		>=			
ANR	3610855	Identifier	d		3610635	0					
ANR	3610856	PrimaryExpression	10		3610635	1					
ANR	3610857	CompoundStatement		71:8:1935:1935	3610635	1					
ANR	3610858	ExpressionStatement	d = ( unsigned char ) c - 'A'	135:10:4747:4773	3610635	0	True				
ANR	3610859	AssignmentExpression	d = ( unsigned char ) c - 'A'		3610635	0		=			
ANR	3610860	Identifier	d		3610635	0					
ANR	3610861	AdditiveExpression	( unsigned char ) c - 'A'		3610635	1		-			
ANR	3610862	CastExpression	( unsigned char ) c		3610635	0					
ANR	3610863	CastTarget	unsigned char		3610635	0					
ANR	3610864	Identifier	c		3610635	1					
ANR	3610865	PrimaryExpression	'A'		3610635	1					
ANR	3610866	IfStatement	if ( d >= 6 )		3610635	1					
ANR	3610867	Condition	d >= 6	136:15:4790:4795	3610635	0	True				
ANR	3610868	RelationalExpression	d >= 6		3610635	0		>=			
ANR	3610869	Identifier	d		3610635	0					
ANR	3610870	PrimaryExpression	6		3610635	1					
ANR	3610871	ExpressionStatement	d = 16	137:12:4811:4817	3610635	1	True				
ANR	3610872	AssignmentExpression	d = 16		3610635	0		=			
ANR	3610873	Identifier	d		3610635	0					
ANR	3610874	PrimaryExpression	16		3610635	1					
ANR	3610875	ElseStatement	else		3610635	0					
ANR	3610876	ExpressionStatement	d += 10	139:12:4846:4853	3610635	0	True				
ANR	3610877	AssignmentExpression	d += 10		3610635	0		+=			
ANR	3610878	Identifier	d		3610635	0					
ANR	3610879	PrimaryExpression	10		3610635	1					
ANR	3610880	IfStatement	if ( d >= 16 )		3610635	4					
ANR	3610881	Condition	d >= 16	142:13:4879:4885	3610635	0	True				
ANR	3610882	RelationalExpression	d >= 16		3610635	0		>=			
ANR	3610883	Identifier	d		3610635	0					
ANR	3610884	PrimaryExpression	16		3610635	1					
ANR	3610885	BreakStatement	break ;	143:10:4899:4904	3610635	1	True				
ANR	3610886	ExpressionStatement	value = ( value << 4 ) + d	145:8:4915:4941	3610635	5	True				
ANR	3610887	AssignmentExpression	value = ( value << 4 ) + d		3610635	0		=			
ANR	3610888	Identifier	value		3610635	0					
ANR	3610889	AdditiveExpression	( value << 4 ) + d		3610635	1		+			
ANR	3610890	ShiftExpression	value << 4		3610635	0		<<			
ANR	3610891	Identifier	value		3610635	0					
ANR	3610892	PrimaryExpression	4		3610635	1					
ANR	3610893	Identifier	d		3610635	1					
ANR	3610894	IfStatement	if ( count <= 2 )		3610635	4					
ANR	3610895	Condition	count <= 2	148:11:4963:4972	3610635	0	True				
ANR	3610896	RelationalExpression	count <= 2		3610635	0		<=			
ANR	3610897	Identifier	count		3610635	0					
ANR	3610898	PrimaryExpression	2		3610635	1					
ANR	3610899	CompoundStatement		86:6:2182:2182	3610635	1					
ANR	3610900	IfStatement	if ( * p == '\\0' )		3610635	0					
ANR	3610901	Condition	* p == '\\0'	150:13:4997:5006	3610635	0	True				
ANR	3610902	EqualityExpression	* p == '\\0'		3610635	0		==			
ANR	3610903	UnaryOperationExpression	* p		3610635	0					
ANR	3610904	UnaryOperator	*		3610635	0					
ANR	3610905	Identifier	p		3610635	1					
ANR	3610906	PrimaryExpression	'\\0'		3610635	1					
ANR	3610907	ReturnStatement	return value ;	151:10:5020:5032	3610635	1	True				
ANR	3610908	Identifier	value		3610635	0					
ANR	3610909	IfStatement	if ( * p == '.' )		3610635	1					
ANR	3610910	Condition	* p == '.'	152:13:5047:5055	3610635	0	True				
ANR	3610911	EqualityExpression	* p == '.'		3610635	0		==			
ANR	3610912	UnaryOperationExpression	* p		3610635	0					
ANR	3610913	UnaryOperator	*		3610635	0					
ANR	3610914	Identifier	p		3610635	1					
ANR	3610915	PrimaryExpression	'.'		3610635	1					
ANR	3610916	ReturnStatement	return ( FT_UInt32 ) ( value | VARIANT_BIT ) ;	153:10:5069:5110	3610635	1	True				
ANR	3610917	CastExpression	( FT_UInt32 ) ( value | VARIANT_BIT )		3610635	0					
ANR	3610918	CastTarget	FT_UInt32		3610635	0					
ANR	3610919	InclusiveOrExpression	value | VARIANT_BIT		3610635	1		|			
ANR	3610920	Identifier	value		3610635	0					
ANR	3610921	Identifier	VARIANT_BIT		3610635	1					
ANR	3610922	CompoundStatement		98:6:2510:2533	3610635	2					
ANR	3610923	IdentifierDeclStatement	const char * p = glyph_name ;	160:6:5273:5302	3610635	0	True				
ANR	3610924	IdentifierDecl	* p = glyph_name		3610635	0					
ANR	3610925	IdentifierDeclType	const char *		3610635	0					
ANR	3610926	Identifier	p		3610635	1					
ANR	3610927	AssignmentExpression	* p = glyph_name		3610635	2		=			
ANR	3610928	Identifier	glyph_name		3610635	0					
ANR	3610929	Identifier	glyph_name		3610635	1					
ANR	3610930	IdentifierDeclStatement	const char * dot = NULL ;	161:6:5310:5333	3610635	1	True				
ANR	3610931	IdentifierDecl	* dot = NULL		3610635	0					
ANR	3610932	IdentifierDeclType	const char *		3610635	0					
ANR	3610933	Identifier	dot		3610635	1					
ANR	3610934	AssignmentExpression	* dot = NULL		3610635	2		=			
ANR	3610935	Identifier	NULL		3610635	0					
ANR	3610936	Identifier	NULL		3610635	1					
ANR	3610937	ForStatement	for ( ; * p ; p ++ )		3610635	2					
ANR	3610938	Condition	* p	164:14:5351:5352	3610635	0	True				
ANR	3610939	UnaryOperationExpression	* p		3610635	0					
ANR	3610940	UnaryOperator	*		3610635	0					
ANR	3610941	Identifier	p		3610635	1					
ANR	3610942	PostIncDecOperationExpression	p ++	164:18:5355:5357	3610635	1	True				
ANR	3610943	Identifier	p		3610635	0					
ANR	3610944	IncDec	++		3610635	1					
ANR	3610945	CompoundStatement		102:6:2567:2567	3610635	2					
ANR	3610946	IfStatement	if ( * p == '.' && p > glyph_name )		3610635	0					
ANR	3610947	Condition	* p == '.' && p > glyph_name	166:13:5382:5408	3610635	0	True				
ANR	3610948	AndExpression	* p == '.' && p > glyph_name		3610635	0		&&			
ANR	3610949	EqualityExpression	* p == '.'		3610635	0		==			
ANR	3610950	UnaryOperationExpression	* p		3610635	0					
ANR	3610951	UnaryOperator	*		3610635	0					
ANR	3610952	Identifier	p		3610635	1					
ANR	3610953	PrimaryExpression	'.'		3610635	1					
ANR	3610954	RelationalExpression	p > glyph_name		3610635	1		>			
ANR	3610955	Identifier	p		3610635	0					
ANR	3610956	Identifier	glyph_name		3610635	1					
ANR	3610957	CompoundStatement		104:8:2620:2620	3610635	1					
ANR	3610958	ExpressionStatement	dot = p	168:10:5432:5439	3610635	0	True				
ANR	3610959	AssignmentExpression	dot = p		3610635	0		=			
ANR	3610960	Identifier	dot		3610635	0					
ANR	3610961	Identifier	p		3610635	1					
ANR	3610962	BreakStatement	break ;	169:10:5451:5456	3610635	1	True				
ANR	3610963	IfStatement	if ( ! dot )		3610635	3					
ANR	3610964	Condition	! dot	174:11:5546:5549	3610635	0	True				
ANR	3610965	UnaryOperationExpression	! dot		3610635	0					
ANR	3610966	UnaryOperator	!		3610635	0					
ANR	3610967	Identifier	dot		3610635	1					
ANR	3610968	ReturnStatement	"return ( FT_UInt32 ) ft_get_adobe_glyph_index ( glyph_name , p ) ;"	175:8:5561:5620	3610635	1	True				
ANR	3610969	CastExpression	"( FT_UInt32 ) ft_get_adobe_glyph_index ( glyph_name , p )"		3610635	0					
ANR	3610970	CastTarget	FT_UInt32		3610635	0					
ANR	3610971	CallExpression	"ft_get_adobe_glyph_index ( glyph_name , p )"		3610635	1					
ANR	3610972	Callee	ft_get_adobe_glyph_index		3610635	0					
ANR	3610973	Identifier	ft_get_adobe_glyph_index		3610635	0					
ANR	3610974	ArgumentList	glyph_name		3610635	1					
ANR	3610975	Argument	glyph_name		3610635	0					
ANR	3610976	Identifier	glyph_name		3610635	0					
ANR	3610977	Argument	p		3610635	1					
ANR	3610978	Identifier	p		3610635	0					
ANR	3610979	ElseStatement	else		3610635	0					
ANR	3610980	ReturnStatement	"return ( FT_UInt32 ) ( ft_get_adobe_glyph_index ( glyph_name , dot ) | VARIANT_BIT ) ;"	177:8:5641:5748	3610635	0	True				
ANR	3610981	CastExpression	"( FT_UInt32 ) ( ft_get_adobe_glyph_index ( glyph_name , dot ) | VARIANT_BIT )"		3610635	0					
ANR	3610982	CastTarget	FT_UInt32		3610635	0					
ANR	3610983	InclusiveOrExpression	"ft_get_adobe_glyph_index ( glyph_name , dot ) | VARIANT_BIT"		3610635	1		|			
ANR	3610984	CallExpression	"ft_get_adobe_glyph_index ( glyph_name , dot )"		3610635	0					
ANR	3610985	Callee	ft_get_adobe_glyph_index		3610635	0					
ANR	3610986	Identifier	ft_get_adobe_glyph_index		3610635	0					
ANR	3610987	ArgumentList	glyph_name		3610635	1					
ANR	3610988	Argument	glyph_name		3610635	0					
ANR	3610989	Identifier	glyph_name		3610635	0					
ANR	3610990	Argument	dot		3610635	1					
ANR	3610991	Identifier	dot		3610635	0					
ANR	3610992	Identifier	VARIANT_BIT		3610635	1					
ANR	3610993	ReturnType	static FT_UInt32		3610635	1					
ANR	3610994	Identifier	ps_unicode_value		3610635	2					
ANR	3610995	ParameterList	const char * glyph_name		3610635	3					
ANR	3610996	Parameter	const char * glyph_name	63:20:2771:2793	3610635	0	True				
ANR	3610997	ParameterType	const char *		3610635	0					
ANR	3610998	Identifier	glyph_name		3610635	1					
ANR	3610999	CFGEntryNode	ENTRY		3610635		True				
ANR	3611000	CFGExitNode	EXIT		3610635		True				
ANR	3611001	Symbol	p		3610635						
ANR	3611002	Symbol	* glyph_name		3610635						
ANR	3611003	Symbol	c		3610635						
ANR	3611004	Symbol	NULL		3610635						
ANR	3611005	Symbol	d		3610635						
ANR	3611006	Symbol	VARIANT_BIT		3610635						
ANR	3611007	Symbol	glyph_name		3610635						
ANR	3611008	Symbol	count		3610635						
ANR	3611009	Symbol	dot		3610635						
ANR	3611010	Symbol	* p		3610635						
ANR	3611011	Symbol	ft_get_adobe_glyph_index		3610635						
ANR	3611012	Symbol	value		3610635						
ANR	3611013	Function	compare_uni_maps	185:2:5839:6514							
ANR	3611014	FunctionDef	"compare_uni_maps (const void * a , const void * b)"		3611013	0					
ANR	3611015	CompoundStatement		187:2:5912:6514	3611013	0					
ANR	3611016	IdentifierDeclStatement	PS_UniMap * map1 = ( PS_UniMap * ) a ;	188:4:5918:5950	3611013	0	True				
ANR	3611017	IdentifierDecl	* map1 = ( PS_UniMap * ) a		3611013	0					
ANR	3611018	IdentifierDeclType	PS_UniMap *		3611013	0					
ANR	3611019	Identifier	map1		3611013	1					
ANR	3611020	AssignmentExpression	* map1 = ( PS_UniMap * ) a		3611013	2		=			
ANR	3611021	Identifier	map1		3611013	0					
ANR	3611022	CastExpression	( PS_UniMap * ) a		3611013	1					
ANR	3611023	CastTarget	PS_UniMap *		3611013	0					
ANR	3611024	Identifier	a		3611013	1					
ANR	3611025	IdentifierDeclStatement	PS_UniMap * map2 = ( PS_UniMap * ) b ;	189:4:5956:5988	3611013	1	True				
ANR	3611026	IdentifierDecl	* map2 = ( PS_UniMap * ) b		3611013	0					
ANR	3611027	IdentifierDeclType	PS_UniMap *		3611013	0					
ANR	3611028	Identifier	map2		3611013	1					
ANR	3611029	AssignmentExpression	* map2 = ( PS_UniMap * ) b		3611013	2		=			
ANR	3611030	Identifier	map2		3611013	0					
ANR	3611031	CastExpression	( PS_UniMap * ) b		3611013	1					
ANR	3611032	CastTarget	PS_UniMap *		3611013	0					
ANR	3611033	Identifier	b		3611013	1					
ANR	3611034	IdentifierDeclStatement	FT_UInt32 unicode1 = BASE_GLYPH ( map1 -> unicode ) ;	190:4:5994:6044	3611013	2	True				
ANR	3611035	IdentifierDecl	unicode1 = BASE_GLYPH ( map1 -> unicode )		3611013	0					
ANR	3611036	IdentifierDeclType	FT_UInt32		3611013	0					
ANR	3611037	Identifier	unicode1		3611013	1					
ANR	3611038	AssignmentExpression	unicode1 = BASE_GLYPH ( map1 -> unicode )		3611013	2		=			
ANR	3611039	Identifier	unicode1		3611013	0					
ANR	3611040	CallExpression	BASE_GLYPH ( map1 -> unicode )		3611013	1					
ANR	3611041	Callee	BASE_GLYPH		3611013	0					
ANR	3611042	Identifier	BASE_GLYPH		3611013	0					
ANR	3611043	ArgumentList	map1 -> unicode		3611013	1					
ANR	3611044	Argument	map1 -> unicode		3611013	0					
ANR	3611045	PtrMemberAccess	map1 -> unicode		3611013	0					
ANR	3611046	Identifier	map1		3611013	0					
ANR	3611047	Identifier	unicode		3611013	1					
ANR	3611048	IdentifierDeclStatement	FT_UInt32 unicode2 = BASE_GLYPH ( map2 -> unicode ) ;	191:4:6050:6100	3611013	3	True				
ANR	3611049	IdentifierDecl	unicode2 = BASE_GLYPH ( map2 -> unicode )		3611013	0					
ANR	3611050	IdentifierDeclType	FT_UInt32		3611013	0					
ANR	3611051	Identifier	unicode2		3611013	1					
ANR	3611052	AssignmentExpression	unicode2 = BASE_GLYPH ( map2 -> unicode )		3611013	2		=			
ANR	3611053	Identifier	unicode2		3611013	0					
ANR	3611054	CallExpression	BASE_GLYPH ( map2 -> unicode )		3611013	1					
ANR	3611055	Callee	BASE_GLYPH		3611013	0					
ANR	3611056	Identifier	BASE_GLYPH		3611013	0					
ANR	3611057	ArgumentList	map2 -> unicode		3611013	1					
ANR	3611058	Argument	map2 -> unicode		3611013	0					
ANR	3611059	PtrMemberAccess	map2 -> unicode		3611013	0					
ANR	3611060	Identifier	map2		3611013	0					
ANR	3611061	Identifier	unicode		3611013	1					
ANR	3611062	IfStatement	if ( unicode1 == unicode2 )		3611013	4					
ANR	3611063	Condition	unicode1 == unicode2	195:9:6162:6181	3611013	0	True				
ANR	3611064	EqualityExpression	unicode1 == unicode2		3611013	0		==			
ANR	3611065	Identifier	unicode1		3611013	0					
ANR	3611066	Identifier	unicode2		3611013	1					
ANR	3611067	CompoundStatement		10:4:276:276	3611013	1					
ANR	3611068	IfStatement	if ( map1 -> unicode > map2 -> unicode )		3611013	0					
ANR	3611069	Condition	map1 -> unicode > map2 -> unicode	197:11:6202:6230	3611013	0	True				
ANR	3611070	RelationalExpression	map1 -> unicode > map2 -> unicode		3611013	0		>			
ANR	3611071	PtrMemberAccess	map1 -> unicode		3611013	0					
ANR	3611072	Identifier	map1		3611013	0					
ANR	3611073	Identifier	unicode		3611013	1					
ANR	3611074	PtrMemberAccess	map2 -> unicode		3611013	1					
ANR	3611075	Identifier	map2		3611013	0					
ANR	3611076	Identifier	unicode		3611013	1					
ANR	3611077	ReturnStatement	return 1 ;	198:8:6242:6250	3611013	1	True				
ANR	3611078	PrimaryExpression	1		3611013	0					
ANR	3611079	ElseStatement	else		3611013	0					
ANR	3611080	IfStatement	if ( map1 -> unicode < map2 -> unicode )		3611013	0					
ANR	3611081	Condition	map1 -> unicode < map2 -> unicode	199:16:6268:6296	3611013	0	True				
ANR	3611082	RelationalExpression	map1 -> unicode < map2 -> unicode		3611013	0		<			
ANR	3611083	PtrMemberAccess	map1 -> unicode		3611013	0					
ANR	3611084	Identifier	map1		3611013	0					
ANR	3611085	Identifier	unicode		3611013	1					
ANR	3611086	PtrMemberAccess	map2 -> unicode		3611013	1					
ANR	3611087	Identifier	map2		3611013	0					
ANR	3611088	Identifier	unicode		3611013	1					
ANR	3611089	ReturnStatement	return - 1 ;	200:8:6308:6317	3611013	1	True				
ANR	3611090	UnaryOperationExpression	- 1		3611013	0					
ANR	3611091	UnaryOperator	-		3611013	0					
ANR	3611092	PrimaryExpression	1		3611013	1					
ANR	3611093	ElseStatement	else		3611013	0					
ANR	3611094	ReturnStatement	return 0 ;	202:8:6338:6346	3611013	0	True				
ANR	3611095	PrimaryExpression	0		3611013	0					
ANR	3611096	ElseStatement	else		3611013	0					
ANR	3611097	CompoundStatement		19:4:454:454	3611013	0					
ANR	3611098	IfStatement	if ( unicode1 > unicode2 )		3611013	0					
ANR	3611099	Condition	unicode1 > unicode2	206:11:6380:6398	3611013	0	True				
ANR	3611100	RelationalExpression	unicode1 > unicode2		3611013	0		>			
ANR	3611101	Identifier	unicode1		3611013	0					
ANR	3611102	Identifier	unicode2		3611013	1					
ANR	3611103	ReturnStatement	return 1 ;	207:8:6410:6418	3611013	1	True				
ANR	3611104	PrimaryExpression	1		3611013	0					
ANR	3611105	ElseStatement	else		3611013	0					
ANR	3611106	IfStatement	if ( unicode1 < unicode2 )		3611013	0					
ANR	3611107	Condition	unicode1 < unicode2	208:16:6436:6454	3611013	0	True				
ANR	3611108	RelationalExpression	unicode1 < unicode2		3611013	0		<			
ANR	3611109	Identifier	unicode1		3611013	0					
ANR	3611110	Identifier	unicode2		3611013	1					
ANR	3611111	ReturnStatement	return - 1 ;	209:8:6466:6475	3611013	1	True				
ANR	3611112	UnaryOperationExpression	- 1		3611013	0					
ANR	3611113	UnaryOperator	-		3611013	0					
ANR	3611114	PrimaryExpression	1		3611013	1					
ANR	3611115	ElseStatement	else		3611013	0					
ANR	3611116	ReturnStatement	return 0 ;	211:8:6496:6504	3611013	0	True				
ANR	3611117	PrimaryExpression	0		3611013	0					
ANR	3611118	Identifier	compare_uni_maps		3611013	1					
ANR	3611119	ParameterList	"const void * a , const void * b"		3611013	2					
ANR	3611120	Parameter	const void * a	185:20:5857:5870	3611013	0	True				
ANR	3611121	ParameterType	const void *		3611013	0					
ANR	3611122	Identifier	a		3611013	1					
ANR	3611123	Parameter	const void * b	186:20:5893:5906	3611013	1	True				
ANR	3611124	ParameterType	const void *		3611013	0					
ANR	3611125	Identifier	b		3611013	1					
ANR	3611126	CFGEntryNode	ENTRY		3611013		True				
ANR	3611127	CFGExitNode	EXIT		3611013		True				
ANR	3611128	Symbol	a		3611013						
ANR	3611129	Symbol	b		3611013						
ANR	3611130	Symbol	map2		3611013						
ANR	3611131	Symbol	map1		3611013						
ANR	3611132	Symbol	BASE_GLYPH		3611013						
ANR	3611133	Symbol	* map1		3611013						
ANR	3611134	Symbol	map1 -> unicode		3611013						
ANR	3611135	Symbol	* map2		3611013						
ANR	3611136	Symbol	unicode1		3611013						
ANR	3611137	Symbol	map2 -> unicode		3611013						
ANR	3611138	Symbol	unicode2		3611013						
ANR	3611139	DeclStmt									
ANR	3611140	Decl							const FT_UInt32	const FT_UInt32 [ EXTRA_GLYPH_LIST_SIZE ]	ft_extra_glyph_unicodes
ANR	3611141	DeclStmt									
ANR	3611142	Decl							const char	const char [ ]	ft_extra_glyph_names
ANR	3611143	DeclStmt									
ANR	3611144	Decl							const FT_Int	const FT_Int [ EXTRA_GLYPH_LIST_SIZE ]	ft_extra_glyph_name_offsets
ANR	3611145	Function	ps_check_extra_glyph_name	267:2:7507:8139							
ANR	3611146	FunctionDef	"ps_check_extra_glyph_name (const char * gname , FT_UInt glyph , FT_UInt * extra_glyphs , FT_UInt * states)"		3611145	0					
ANR	3611147	CompoundStatement		272:2:7726:8139	3611145	0					
ANR	3611148	IdentifierDeclStatement	FT_UInt n ;	273:4:7732:7742	3611145	0	True				
ANR	3611149	IdentifierDecl	n		3611145	0					
ANR	3611150	IdentifierDeclType	FT_UInt		3611145	0					
ANR	3611151	Identifier	n		3611145	1					
ANR	3611152	ForStatement	for ( n = 0 ; n < EXTRA_GLYPH_LIST_SIZE ; n ++ )		3611145	1					
ANR	3611153	ForInit	n = 0 ;	276:10:7756:7761	3611145	0	True				
ANR	3611154	AssignmentExpression	n = 0		3611145	0		=			
ANR	3611155	Identifier	n		3611145	0					
ANR	3611156	PrimaryExpression	0		3611145	1					
ANR	3611157	Condition	n < EXTRA_GLYPH_LIST_SIZE	276:17:7763:7787	3611145	1	True				
ANR	3611158	RelationalExpression	n < EXTRA_GLYPH_LIST_SIZE		3611145	0		<			
ANR	3611159	Identifier	n		3611145	0					
ANR	3611160	Identifier	EXTRA_GLYPH_LIST_SIZE		3611145	1					
ANR	3611161	PostIncDecOperationExpression	n ++	276:44:7790:7792	3611145	2	True				
ANR	3611162	Identifier	n		3611145	0					
ANR	3611163	IncDec	++		3611145	1					
ANR	3611164	CompoundStatement		6:4:73:73	3611145	3					
ANR	3611165	IfStatement	"if ( ft_strcmp ( ft_extra_glyph_names + ft_extra_glyph_name_offsets [ n ] , gname ) == 0 )"		3611145	0					
ANR	3611166	Condition	"ft_strcmp ( ft_extra_glyph_names + ft_extra_glyph_name_offsets [ n ] , gname ) == 0"	278:11:7813:7914	3611145	0	True				
ANR	3611167	EqualityExpression	"ft_strcmp ( ft_extra_glyph_names + ft_extra_glyph_name_offsets [ n ] , gname ) == 0"		3611145	0		==			
ANR	3611168	CallExpression	"ft_strcmp ( ft_extra_glyph_names + ft_extra_glyph_name_offsets [ n ] , gname )"		3611145	0					
ANR	3611169	Callee	ft_strcmp		3611145	0					
ANR	3611170	Identifier	ft_strcmp		3611145	0					
ANR	3611171	ArgumentList	ft_extra_glyph_names + ft_extra_glyph_name_offsets [ n ]		3611145	1					
ANR	3611172	Argument	ft_extra_glyph_names + ft_extra_glyph_name_offsets [ n ]		3611145	0					
ANR	3611173	AdditiveExpression	ft_extra_glyph_names + ft_extra_glyph_name_offsets [ n ]		3611145	0		+			
ANR	3611174	Identifier	ft_extra_glyph_names		3611145	0					
ANR	3611175	ArrayIndexing	ft_extra_glyph_name_offsets [ n ]		3611145	1					
ANR	3611176	Identifier	ft_extra_glyph_name_offsets		3611145	0					
ANR	3611177	Identifier	n		3611145	1					
ANR	3611178	Argument	gname		3611145	1					
ANR	3611179	Identifier	gname		3611145	0					
ANR	3611180	PrimaryExpression	0		3611145	1					
ANR	3611181	CompoundStatement		9:6:197:197	3611145	1					
ANR	3611182	IfStatement	if ( states [ n ] == 0 )		3611145	0					
ANR	3611183	Condition	states [ n ] == 0	281:13:7939:7952	3611145	0	True				
ANR	3611184	EqualityExpression	states [ n ] == 0		3611145	0		==			
ANR	3611185	ArrayIndexing	states [ n ]		3611145	0					
ANR	3611186	Identifier	states		3611145	0					
ANR	3611187	Identifier	n		3611145	1					
ANR	3611188	PrimaryExpression	0		3611145	1					
ANR	3611189	CompoundStatement		11:8:237:237	3611145	1					
ANR	3611190	ExpressionStatement	states [ n ] = 1	284:10:8042:8059	3611145	0	True				
ANR	3611191	AssignmentExpression	states [ n ] = 1		3611145	0		=			
ANR	3611192	ArrayIndexing	states [ n ]		3611145	0					
ANR	3611193	Identifier	states		3611145	0					
ANR	3611194	Identifier	n		3611145	1					
ANR	3611195	PrimaryExpression	1		3611145	1					
ANR	3611196	ExpressionStatement	extra_glyphs [ n ] = glyph	285:10:8071:8094	3611145	1	True				
ANR	3611197	AssignmentExpression	extra_glyphs [ n ] = glyph		3611145	0		=			
ANR	3611198	ArrayIndexing	extra_glyphs [ n ]		3611145	0					
ANR	3611199	Identifier	extra_glyphs		3611145	0					
ANR	3611200	Identifier	n		3611145	1					
ANR	3611201	Identifier	glyph		3611145	1					
ANR	3611202	ReturnStatement	return ;	288:8:8115:8121	3611145	1	True				
ANR	3611203	ReturnType	static void		3611145	1					
ANR	3611204	Identifier	ps_check_extra_glyph_name		3611145	2					
ANR	3611205	ParameterList	"const char * gname , FT_UInt glyph , FT_UInt * extra_glyphs , FT_UInt * states"		3611145	3					
ANR	3611206	Parameter	const char * gname	268:29:7548:7565	3611145	0	True				
ANR	3611207	ParameterType	const char *		3611145	0					
ANR	3611208	Identifier	gname		3611145	1					
ANR	3611209	Parameter	FT_UInt glyph	269:29:7597:7614	3611145	1	True				
ANR	3611210	ParameterType	FT_UInt		3611145	0					
ANR	3611211	Identifier	glyph		3611145	1					
ANR	3611212	Parameter	FT_UInt * extra_glyphs	270:29:7646:7670	3611145	2	True				
ANR	3611213	ParameterType	FT_UInt *		3611145	0					
ANR	3611214	Identifier	extra_glyphs		3611145	1					
ANR	3611215	Parameter	FT_UInt * states	271:29:7702:7720	3611145	3	True				
ANR	3611216	ParameterType	FT_UInt *		3611145	0					
ANR	3611217	Identifier	states		3611145	1					
ANR	3611218	CFGEntryNode	ENTRY		3611145		True				
ANR	3611219	CFGExitNode	EXIT		3611145		True				
ANR	3611220	Symbol	ft_extra_glyph_names		3611145						
ANR	3611221	Symbol	ft_extra_glyph_name_offsets		3611145						
ANR	3611222	Symbol	gname		3611145						
ANR	3611223	Symbol	extra_glyphs		3611145						
ANR	3611224	Symbol	n		3611145						
ANR	3611225	Symbol	states		3611145						
ANR	3611226	Symbol	glyph		3611145						
ANR	3611227	Symbol	* extra_glyphs		3611145						
ANR	3611228	Symbol	* ft_extra_glyph_name_offsets		3611145						
ANR	3611229	Symbol	ft_strcmp		3611145						
ANR	3611230	Symbol	* n		3611145						
ANR	3611231	Symbol	EXTRA_GLYPH_LIST_SIZE		3611145						
ANR	3611232	Symbol	* states		3611145						
ANR	3611233	Function	ps_check_extra_glyph_unicode	294:2:8145:8524							
ANR	3611234	FunctionDef	"ps_check_extra_glyph_unicode (FT_UInt32 uni_char , FT_UInt * states)"		3611233	0					
ANR	3611235	CompoundStatement		297:2:8264:8524	3611233	0					
ANR	3611236	IdentifierDeclStatement	FT_UInt n ;	298:4:8270:8280	3611233	0	True				
ANR	3611237	IdentifierDecl	n		3611233	0					
ANR	3611238	IdentifierDeclType	FT_UInt		3611233	0					
ANR	3611239	Identifier	n		3611233	1					
ANR	3611240	ForStatement	for ( n = 0 ; n < EXTRA_GLYPH_LIST_SIZE ; n ++ )		3611233	1					
ANR	3611241	ForInit	n = 0 ;	301:10:8294:8299	3611233	0	True				
ANR	3611242	AssignmentExpression	n = 0		3611233	0		=			
ANR	3611243	Identifier	n		3611233	0					
ANR	3611244	PrimaryExpression	0		3611233	1					
ANR	3611245	Condition	n < EXTRA_GLYPH_LIST_SIZE	301:17:8301:8325	3611233	1	True				
ANR	3611246	RelationalExpression	n < EXTRA_GLYPH_LIST_SIZE		3611233	0		<			
ANR	3611247	Identifier	n		3611233	0					
ANR	3611248	Identifier	EXTRA_GLYPH_LIST_SIZE		3611233	1					
ANR	3611249	PostIncDecOperationExpression	n ++	301:44:8328:8330	3611233	2	True				
ANR	3611250	Identifier	n		3611233	0					
ANR	3611251	IncDec	++		3611233	1					
ANR	3611252	CompoundStatement		6:4:73:73	3611233	3					
ANR	3611253	IfStatement	if ( uni_char == ft_extra_glyph_unicodes [ n ] )		3611233	0					
ANR	3611254	Condition	uni_char == ft_extra_glyph_unicodes [ n ]	303:11:8351:8388	3611233	0	True				
ANR	3611255	EqualityExpression	uni_char == ft_extra_glyph_unicodes [ n ]		3611233	0		==			
ANR	3611256	Identifier	uni_char		3611233	0					
ANR	3611257	ArrayIndexing	ft_extra_glyph_unicodes [ n ]		3611233	1					
ANR	3611258	Identifier	ft_extra_glyph_unicodes		3611233	0					
ANR	3611259	Identifier	n		3611233	1					
ANR	3611260	CompoundStatement		8:6:133:133	3611233	1					
ANR	3611261	ExpressionStatement	states [ n ] = 2	306:8:8476:8489	3611233	0	True				
ANR	3611262	AssignmentExpression	states [ n ] = 2		3611233	0		=			
ANR	3611263	ArrayIndexing	states [ n ]		3611233	0					
ANR	3611264	Identifier	states		3611233	0					
ANR	3611265	Identifier	n		3611233	1					
ANR	3611266	PrimaryExpression	2		3611233	1					
ANR	3611267	ReturnStatement	return ;	308:8:8500:8506	3611233	1	True				
ANR	3611268	ReturnType	static void		3611233	1					
ANR	3611269	Identifier	ps_check_extra_glyph_unicode		3611233	2					
ANR	3611270	ParameterList	"FT_UInt32 uni_char , FT_UInt * states"		3611233	3					
ANR	3611271	Parameter	FT_UInt32 uni_char	295:32:8189:8207	3611233	0	True				
ANR	3611272	ParameterType	FT_UInt32		3611233	0					
ANR	3611273	Identifier	uni_char		3611233	1					
ANR	3611274	Parameter	FT_UInt * states	296:32:8242:8258	3611233	1	True				
ANR	3611275	ParameterType	FT_UInt *		3611233	0					
ANR	3611276	Identifier	states		3611233	1					
ANR	3611277	CFGEntryNode	ENTRY		3611233		True				
ANR	3611278	CFGExitNode	EXIT		3611233		True				
ANR	3611279	Symbol	* ft_extra_glyph_unicodes		3611233						
ANR	3611280	Symbol	uni_char		3611233						
ANR	3611281	Symbol	* n		3611233						
ANR	3611282	Symbol	EXTRA_GLYPH_LIST_SIZE		3611233						
ANR	3611283	Symbol	ft_extra_glyph_unicodes		3611233						
ANR	3611284	Symbol	n		3611233						
ANR	3611285	Symbol	* states		3611233						
ANR	3611286	Symbol	states		3611233						
ANR	3611287	Function	ps_unicodes_init	315:2:8595:11300							
ANR	3611288	FunctionDef	"ps_unicodes_init (FT_Memory memory , PS_Unicodes table , FT_UInt num_glyphs , PS_GetGlyphNameFunc get_glyph_name , PS_FreeGlyphNameFunc free_glyph_name , FT_Pointer glyph_data)"		3611287	0					
ANR	3611289	CompoundStatement		322:2:8938:11300	3611287	0					
ANR	3611290	IdentifierDeclStatement	FT_Error error ;	323:4:8944:8959	3611287	0	True				
ANR	3611291	IdentifierDecl	error		3611287	0					
ANR	3611292	IdentifierDeclType	FT_Error		3611287	0					
ANR	3611293	Identifier	error		3611287	1					
ANR	3611294	IdentifierDeclStatement	"FT_UInt extra_glyph_list_states [ ] = { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 } ;"	325:4:8966:9035	3611287	1	True				
ANR	3611295	IdentifierDecl	"extra_glyph_list_states [ ] = { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 }"		3611287	0					
ANR	3611296	IdentifierDeclType	FT_UInt [ ]		3611287	0					
ANR	3611297	Identifier	extra_glyph_list_states		3611287	1					
ANR	3611298	AssignmentExpression	"extra_glyph_list_states [ ] = { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 }"		3611287	2		=			
ANR	3611299	Identifier	extra_glyph_list_states		3611287	0					
ANR	3611300	InitializerList	0		3611287	1					
ANR	3611301	PrimaryExpression	0		3611287	0					
ANR	3611302	PrimaryExpression	0		3611287	1					
ANR	3611303	PrimaryExpression	0		3611287	2					
ANR	3611304	PrimaryExpression	0		3611287	3					
ANR	3611305	PrimaryExpression	0		3611287	4					
ANR	3611306	PrimaryExpression	0		3611287	5					
ANR	3611307	PrimaryExpression	0		3611287	6					
ANR	3611308	PrimaryExpression	0		3611287	7					
ANR	3611309	PrimaryExpression	0		3611287	8					
ANR	3611310	PrimaryExpression	0		3611287	9					
ANR	3611311	IdentifierDeclStatement	FT_UInt extra_glyphs [ EXTRA_GLYPH_LIST_SIZE ] ;	326:4:9041:9085	3611287	2	True				
ANR	3611312	IdentifierDecl	extra_glyphs [ EXTRA_GLYPH_LIST_SIZE ]		3611287	0					
ANR	3611313	IdentifierDeclType	FT_UInt [ EXTRA_GLYPH_LIST_SIZE ]		3611287	0					
ANR	3611314	Identifier	extra_glyphs		3611287	1					
ANR	3611315	Identifier	EXTRA_GLYPH_LIST_SIZE		3611287	2					
ANR	3611316	ExpressionStatement	table -> num_maps = 0	330:4:9131:9150	3611287	3	True				
ANR	3611317	AssignmentExpression	table -> num_maps = 0		3611287	0		=			
ANR	3611318	PtrMemberAccess	table -> num_maps		3611287	0					
ANR	3611319	Identifier	table		3611287	0					
ANR	3611320	Identifier	num_maps		3611287	1					
ANR	3611321	PrimaryExpression	0		3611287	1					
ANR	3611322	ExpressionStatement	table -> maps = NULL	331:4:9156:9178	3611287	4	True				
ANR	3611323	AssignmentExpression	table -> maps = NULL		3611287	0		=			
ANR	3611324	PtrMemberAccess	table -> maps		3611287	0					
ANR	3611325	Identifier	table		3611287	0					
ANR	3611326	Identifier	maps		3611287	1					
ANR	3611327	Identifier	NULL		3611287	1					
ANR	3611328	IfStatement	"if ( ! FT_NEW_ARRAY ( table -> maps , num_glyphs + EXTRA_GLYPH_LIST_SIZE ) )"		3611287	5					
ANR	3611329	Condition	"! FT_NEW_ARRAY ( table -> maps , num_glyphs + EXTRA_GLYPH_LIST_SIZE )"	333:9:9190:9253	3611287	0	True				
ANR	3611330	UnaryOperationExpression	"! FT_NEW_ARRAY ( table -> maps , num_glyphs + EXTRA_GLYPH_LIST_SIZE )"		3611287	0					
ANR	3611331	UnaryOperator	!		3611287	0					
ANR	3611332	CallExpression	"FT_NEW_ARRAY ( table -> maps , num_glyphs + EXTRA_GLYPH_LIST_SIZE )"		3611287	1					
ANR	3611333	Callee	FT_NEW_ARRAY		3611287	0					
ANR	3611334	Identifier	FT_NEW_ARRAY		3611287	0					
ANR	3611335	ArgumentList	table -> maps		3611287	1					
ANR	3611336	Argument	table -> maps		3611287	0					
ANR	3611337	PtrMemberAccess	table -> maps		3611287	0					
ANR	3611338	Identifier	table		3611287	0					
ANR	3611339	Identifier	maps		3611287	1					
ANR	3611340	Argument	num_glyphs + EXTRA_GLYPH_LIST_SIZE		3611287	1					
ANR	3611341	AdditiveExpression	num_glyphs + EXTRA_GLYPH_LIST_SIZE		3611287	0		+			
ANR	3611342	Identifier	num_glyphs		3611287	0					
ANR	3611343	Identifier	EXTRA_GLYPH_LIST_SIZE		3611287	1					
ANR	3611344	CompoundStatement		17:6:399:419	3611287	1					
ANR	3611345	IdentifierDeclStatement	FT_UInt n ;	335:6:9269:9282	3611287	0	True				
ANR	3611346	IdentifierDecl	n		3611287	0					
ANR	3611347	IdentifierDeclType	FT_UInt		3611287	0					
ANR	3611348	Identifier	n		3611287	1					
ANR	3611349	IdentifierDeclStatement	FT_UInt count ;	336:6:9290:9307	3611287	1	True				
ANR	3611350	IdentifierDecl	count		3611287	0					
ANR	3611351	IdentifierDeclType	FT_UInt		3611287	0					
ANR	3611352	Identifier	count		3611287	1					
ANR	3611353	IdentifierDeclStatement	PS_UniMap * map ;	337:6:9315:9330	3611287	2	True				
ANR	3611354	IdentifierDecl	* map		3611287	0					
ANR	3611355	IdentifierDeclType	PS_UniMap *		3611287	0					
ANR	3611356	Identifier	map		3611287	1					
ANR	3611357	IdentifierDeclStatement	FT_UInt32 uni_char ;	338:6:9338:9358	3611287	3	True				
ANR	3611358	IdentifierDecl	uni_char		3611287	0					
ANR	3611359	IdentifierDeclType	FT_UInt32		3611287	0					
ANR	3611360	Identifier	uni_char		3611287	1					
ANR	3611361	ExpressionStatement	map = table -> maps	341:6:9368:9385	3611287	4	True				
ANR	3611362	AssignmentExpression	map = table -> maps		3611287	0		=			
ANR	3611363	Identifier	map		3611287	0					
ANR	3611364	PtrMemberAccess	table -> maps		3611287	1					
ANR	3611365	Identifier	table		3611287	0					
ANR	3611366	Identifier	maps		3611287	1					
ANR	3611367	ForStatement	for ( n = 0 ; n < num_glyphs ; n ++ )		3611287	5					
ANR	3611368	ForInit	n = 0 ;	343:12:9400:9405	3611287	0	True				
ANR	3611369	AssignmentExpression	n = 0		3611287	0		=			
ANR	3611370	Identifier	n		3611287	0					
ANR	3611371	PrimaryExpression	0		3611287	1					
ANR	3611372	Condition	n < num_glyphs	343:19:9407:9420	3611287	1	True				
ANR	3611373	RelationalExpression	n < num_glyphs		3611287	0		<			
ANR	3611374	Identifier	n		3611287	0					
ANR	3611375	Identifier	num_glyphs		3611287	1					
ANR	3611376	PostIncDecOperationExpression	n ++	343:35:9423:9425	3611287	2	True				
ANR	3611377	Identifier	n		3611287	0					
ANR	3611378	IncDec	++		3611287	1					
ANR	3611379	CompoundStatement		24:8:506:558	3611287	3					
ANR	3611380	IdentifierDeclStatement	"const char * gname = get_glyph_name ( glyph_data , n ) ;"	345:8:9445:9497	3611287	0	True				
ANR	3611381	IdentifierDecl	"* gname = get_glyph_name ( glyph_data , n )"		3611287	0					
ANR	3611382	IdentifierDeclType	const char *		3611287	0					
ANR	3611383	Identifier	gname		3611287	1					
ANR	3611384	AssignmentExpression	"* gname = get_glyph_name ( glyph_data , n )"		3611287	2		=			
ANR	3611385	Identifier	gname		3611287	0					
ANR	3611386	CallExpression	"get_glyph_name ( glyph_data , n )"		3611287	1					
ANR	3611387	Callee	get_glyph_name		3611287	0					
ANR	3611388	Identifier	get_glyph_name		3611287	0					
ANR	3611389	ArgumentList	glyph_data		3611287	1					
ANR	3611390	Argument	glyph_data		3611287	0					
ANR	3611391	Identifier	glyph_data		3611287	0					
ANR	3611392	Argument	n		3611287	1					
ANR	3611393	Identifier	n		3611287	0					
ANR	3611394	IfStatement	if ( gname )		3611287	1					
ANR	3611395	Condition	gname	348:13:9514:9518	3611287	0	True				
ANR	3611396	Identifier	gname		3611287	0					
ANR	3611397	CompoundStatement		28:8:591:591	3611287	1					
ANR	3611398	ExpressionStatement	"ps_check_extra_glyph_name ( gname , n , extra_glyphs , extra_glyph_list_states )"	350:10:9542:9655	3611287	0	True				
ANR	3611399	CallExpression	"ps_check_extra_glyph_name ( gname , n , extra_glyphs , extra_glyph_list_states )"		3611287	0					
ANR	3611400	Callee	ps_check_extra_glyph_name		3611287	0					
ANR	3611401	Identifier	ps_check_extra_glyph_name		3611287	0					
ANR	3611402	ArgumentList	gname		3611287	1					
ANR	3611403	Argument	gname		3611287	0					
ANR	3611404	Identifier	gname		3611287	0					
ANR	3611405	Argument	n		3611287	1					
ANR	3611406	Identifier	n		3611287	0					
ANR	3611407	Argument	extra_glyphs		3611287	2					
ANR	3611408	Identifier	extra_glyphs		3611287	0					
ANR	3611409	Argument	extra_glyph_list_states		3611287	3					
ANR	3611410	Identifier	extra_glyph_list_states		3611287	0					
ANR	3611411	ExpressionStatement	uni_char = ps_unicode_value ( gname )	352:10:9667:9703	3611287	1	True				
ANR	3611412	AssignmentExpression	uni_char = ps_unicode_value ( gname )		3611287	0		=			
ANR	3611413	Identifier	uni_char		3611287	0					
ANR	3611414	CallExpression	ps_unicode_value ( gname )		3611287	1					
ANR	3611415	Callee	ps_unicode_value		3611287	0					
ANR	3611416	Identifier	ps_unicode_value		3611287	0					
ANR	3611417	ArgumentList	gname		3611287	1					
ANR	3611418	Argument	gname		3611287	0					
ANR	3611419	Identifier	gname		3611287	0					
ANR	3611420	IfStatement	if ( BASE_GLYPH ( uni_char ) != 0 )		3611287	2					
ANR	3611421	Condition	BASE_GLYPH ( uni_char ) != 0	354:15:9721:9747	3611287	0	True				
ANR	3611422	EqualityExpression	BASE_GLYPH ( uni_char ) != 0		3611287	0		!=			
ANR	3611423	CallExpression	BASE_GLYPH ( uni_char )		3611287	0					
ANR	3611424	Callee	BASE_GLYPH		3611287	0					
ANR	3611425	Identifier	BASE_GLYPH		3611287	0					
ANR	3611426	ArgumentList	uni_char		3611287	1					
ANR	3611427	Argument	uni_char		3611287	0					
ANR	3611428	Identifier	uni_char		3611287	0					
ANR	3611429	PrimaryExpression	0		3611287	1					
ANR	3611430	CompoundStatement		34:10:822:822	3611287	1					
ANR	3611431	ExpressionStatement	"ps_check_extra_glyph_unicode ( uni_char , extra_glyph_list_states )"	356:12:9775:9882	3611287	0	True				
ANR	3611432	CallExpression	"ps_check_extra_glyph_unicode ( uni_char , extra_glyph_list_states )"		3611287	0					
ANR	3611433	Callee	ps_check_extra_glyph_unicode		3611287	0					
ANR	3611434	Identifier	ps_check_extra_glyph_unicode		3611287	0					
ANR	3611435	ArgumentList	uni_char		3611287	1					
ANR	3611436	Argument	uni_char		3611287	0					
ANR	3611437	Identifier	uni_char		3611287	0					
ANR	3611438	Argument	extra_glyph_list_states		3611287	1					
ANR	3611439	Identifier	extra_glyph_list_states		3611287	0					
ANR	3611440	ExpressionStatement	map -> unicode = uni_char	358:12:9896:9923	3611287	1	True				
ANR	3611441	AssignmentExpression	map -> unicode = uni_char		3611287	0		=			
ANR	3611442	PtrMemberAccess	map -> unicode		3611287	0					
ANR	3611443	Identifier	map		3611287	0					
ANR	3611444	Identifier	unicode		3611287	1					
ANR	3611445	Identifier	uni_char		3611287	1					
ANR	3611446	ExpressionStatement	map -> glyph_index = n	359:12:9937:9957	3611287	2	True				
ANR	3611447	AssignmentExpression	map -> glyph_index = n		3611287	0		=			
ANR	3611448	PtrMemberAccess	map -> glyph_index		3611287	0					
ANR	3611449	Identifier	map		3611287	0					
ANR	3611450	Identifier	glyph_index		3611287	1					
ANR	3611451	Identifier	n		3611287	1					
ANR	3611452	ExpressionStatement	map ++	360:12:9971:9976	3611287	3	True				
ANR	3611453	PostIncDecOperationExpression	map ++		3611287	0					
ANR	3611454	Identifier	map		3611287	0					
ANR	3611455	IncDec	++		3611287	1					
ANR	3611456	IfStatement	if ( free_glyph_name )		3611287	3					
ANR	3611457	Condition	free_glyph_name	363:15:10006:10020	3611287	0	True				
ANR	3611458	Identifier	free_glyph_name		3611287	0					
ANR	3611459	ExpressionStatement	"free_glyph_name ( glyph_data , gname )"	364:12:10036:10072	3611287	1	True				
ANR	3611460	CallExpression	"free_glyph_name ( glyph_data , gname )"		3611287	0					
ANR	3611461	Callee	free_glyph_name		3611287	0					
ANR	3611462	Identifier	free_glyph_name		3611287	0					
ANR	3611463	ArgumentList	glyph_data		3611287	1					
ANR	3611464	Argument	glyph_data		3611287	0					
ANR	3611465	Identifier	glyph_data		3611287	0					
ANR	3611466	Argument	gname		3611287	1					
ANR	3611467	Identifier	gname		3611287	0					
ANR	3611468	ForStatement	for ( n = 0 ; n < EXTRA_GLYPH_LIST_SIZE ; n ++ )		3611287	6					
ANR	3611469	ForInit	n = 0 ;	368:12:10105:10110	3611287	0	True				
ANR	3611470	AssignmentExpression	n = 0		3611287	0		=			
ANR	3611471	Identifier	n		3611287	0					
ANR	3611472	PrimaryExpression	0		3611287	1					
ANR	3611473	Condition	n < EXTRA_GLYPH_LIST_SIZE	368:19:10112:10136	3611287	1	True				
ANR	3611474	RelationalExpression	n < EXTRA_GLYPH_LIST_SIZE		3611287	0		<			
ANR	3611475	Identifier	n		3611287	0					
ANR	3611476	Identifier	EXTRA_GLYPH_LIST_SIZE		3611287	1					
ANR	3611477	PostIncDecOperationExpression	n ++	368:46:10139:10141	3611287	2	True				
ANR	3611478	Identifier	n		3611287	0					
ANR	3611479	IncDec	++		3611287	1					
ANR	3611480	CompoundStatement		48:6:1212:1212	3611287	3					
ANR	3611481	IfStatement	if ( extra_glyph_list_states [ n ] == 1 )		3611287	0					
ANR	3611482	Condition	extra_glyph_list_states [ n ] == 1	370:13:10166:10196	3611287	0	True				
ANR	3611483	EqualityExpression	extra_glyph_list_states [ n ] == 1		3611287	0		==			
ANR	3611484	ArrayIndexing	extra_glyph_list_states [ n ]		3611287	0					
ANR	3611485	Identifier	extra_glyph_list_states		3611287	0					
ANR	3611486	Identifier	n		3611287	1					
ANR	3611487	PrimaryExpression	1		3611287	1					
ANR	3611488	CompoundStatement		50:8:1269:1269	3611287	1					
ANR	3611489	ExpressionStatement	map -> unicode = ft_extra_glyph_unicodes [ n ]	375:10:10353:10398	3611287	0	True				
ANR	3611490	AssignmentExpression	map -> unicode = ft_extra_glyph_unicodes [ n ]		3611287	0		=			
ANR	3611491	PtrMemberAccess	map -> unicode		3611287	0					
ANR	3611492	Identifier	map		3611287	0					
ANR	3611493	Identifier	unicode		3611287	1					
ANR	3611494	ArrayIndexing	ft_extra_glyph_unicodes [ n ]		3611287	1					
ANR	3611495	Identifier	ft_extra_glyph_unicodes		3611287	0					
ANR	3611496	Identifier	n		3611287	1					
ANR	3611497	ExpressionStatement	map -> glyph_index = extra_glyphs [ n ]	376:10:10410:10444	3611287	1	True				
ANR	3611498	AssignmentExpression	map -> glyph_index = extra_glyphs [ n ]		3611287	0		=			
ANR	3611499	PtrMemberAccess	map -> glyph_index		3611287	0					
ANR	3611500	Identifier	map		3611287	0					
ANR	3611501	Identifier	glyph_index		3611287	1					
ANR	3611502	ArrayIndexing	extra_glyphs [ n ]		3611287	1					
ANR	3611503	Identifier	extra_glyphs		3611287	0					
ANR	3611504	Identifier	n		3611287	1					
ANR	3611505	ExpressionStatement	map ++	377:10:10456:10461	3611287	2	True				
ANR	3611506	PostIncDecOperationExpression	map ++		3611287	0					
ANR	3611507	Identifier	map		3611287	0					
ANR	3611508	IncDec	++		3611287	1					
ANR	3611509	ExpressionStatement	count = ( FT_UInt ) ( map - table -> maps )	382:6:10529:10567	3611287	7	True				
ANR	3611510	AssignmentExpression	count = ( FT_UInt ) ( map - table -> maps )		3611287	0		=			
ANR	3611511	Identifier	count		3611287	0					
ANR	3611512	CastExpression	( FT_UInt ) ( map - table -> maps )		3611287	1					
ANR	3611513	CastTarget	FT_UInt		3611287	0					
ANR	3611514	AdditiveExpression	map - table -> maps		3611287	1		-			
ANR	3611515	Identifier	map		3611287	0					
ANR	3611516	PtrMemberAccess	table -> maps		3611287	1					
ANR	3611517	Identifier	table		3611287	0					
ANR	3611518	Identifier	maps		3611287	1					
ANR	3611519	IfStatement	if ( count == 0 )		3611287	8					
ANR	3611520	Condition	count == 0	384:11:10581:10590	3611287	0	True				
ANR	3611521	EqualityExpression	count == 0		3611287	0		==			
ANR	3611522	Identifier	count		3611287	0					
ANR	3611523	PrimaryExpression	0		3611287	1					
ANR	3611524	CompoundStatement		64:6:1661:1661	3611287	1					
ANR	3611525	ExpressionStatement	FT_FREE ( table -> maps )	387:8:10647:10669	3611287	0	True				
ANR	3611526	CallExpression	FT_FREE ( table -> maps )		3611287	0					
ANR	3611527	Callee	FT_FREE		3611287	0					
ANR	3611528	Identifier	FT_FREE		3611287	0					
ANR	3611529	ArgumentList	table -> maps		3611287	1					
ANR	3611530	Argument	table -> maps		3611287	0					
ANR	3611531	PtrMemberAccess	table -> maps		3611287	0					
ANR	3611532	Identifier	table		3611287	0					
ANR	3611533	Identifier	maps		3611287	1					
ANR	3611534	IfStatement	if ( ! error )		3611287	1					
ANR	3611535	Condition	! error	388:13:10684:10689	3611287	0	True				
ANR	3611536	UnaryOperationExpression	! error		3611287	0					
ANR	3611537	UnaryOperator	!		3611287	0					
ANR	3611538	Identifier	error		3611287	1					
ANR	3611539	ExpressionStatement	error = FT_THROW ( No_Unicode_Glyph_Name )	389:10:10703:10744	3611287	1	True				
ANR	3611540	AssignmentExpression	error = FT_THROW ( No_Unicode_Glyph_Name )		3611287	0		=			
ANR	3611541	Identifier	error		3611287	0					
ANR	3611542	CallExpression	FT_THROW ( No_Unicode_Glyph_Name )		3611287	1					
ANR	3611543	Callee	FT_THROW		3611287	0					
ANR	3611544	Identifier	FT_THROW		3611287	0					
ANR	3611545	ArgumentList	No_Unicode_Glyph_Name		3611287	1					
ANR	3611546	Argument	No_Unicode_Glyph_Name		3611287	0					
ANR	3611547	Identifier	No_Unicode_Glyph_Name		3611287	0					
ANR	3611548	ElseStatement	else		3611287	0					
ANR	3611549	CompoundStatement		71:6:1832:1832	3611287	0					
ANR	3611550	IfStatement	if ( count < num_glyphs / 2 )		3611287	0					
ANR	3611551	Condition	count < num_glyphs / 2	394:13:10858:10879	3611287	0	True				
ANR	3611552	RelationalExpression	count < num_glyphs / 2		3611287	0		<			
ANR	3611553	Identifier	count		3611287	0					
ANR	3611554	MultiplicativeExpression	num_glyphs / 2		3611287	1		/			
ANR	3611555	Identifier	num_glyphs		3611287	0					
ANR	3611556	PrimaryExpression	2		3611287	1					
ANR	3611557	CompoundStatement		74:8:1952:1952	3611287	1					
ANR	3611558	ExpressionStatement	"( void ) FT_RENEW_ARRAY ( table -> maps , num_glyphs , count )"	396:10:10903:10957	3611287	0	True				
ANR	3611559	CastExpression	"( void ) FT_RENEW_ARRAY ( table -> maps , num_glyphs , count )"		3611287	0					
ANR	3611560	CastTarget	void		3611287	0					
ANR	3611561	CallExpression	"FT_RENEW_ARRAY ( table -> maps , num_glyphs , count )"		3611287	1					
ANR	3611562	Callee	FT_RENEW_ARRAY		3611287	0					
ANR	3611563	Identifier	FT_RENEW_ARRAY		3611287	0					
ANR	3611564	ArgumentList	table -> maps		3611287	1					
ANR	3611565	Argument	table -> maps		3611287	0					
ANR	3611566	PtrMemberAccess	table -> maps		3611287	0					
ANR	3611567	Identifier	table		3611287	0					
ANR	3611568	Identifier	maps		3611287	1					
ANR	3611569	Argument	num_glyphs		3611287	1					
ANR	3611570	Identifier	num_glyphs		3611287	0					
ANR	3611571	Argument	count		3611287	2					
ANR	3611572	Identifier	count		3611287	0					
ANR	3611573	ExpressionStatement	error = FT_Err_Ok	397:10:10969:10986	3611287	1	True				
ANR	3611574	AssignmentExpression	error = FT_Err_Ok		3611287	0		=			
ANR	3611575	Identifier	error		3611287	0					
ANR	3611576	Identifier	FT_Err_Ok		3611287	1					
ANR	3611577	ExpressionStatement	"ft_qsort ( table -> maps , count , sizeof ( PS_UniMap ) , compare_uni_maps )"	402:8:11143:11231	3611287	1	True				
ANR	3611578	CallExpression	"ft_qsort ( table -> maps , count , sizeof ( PS_UniMap ) , compare_uni_maps )"		3611287	0					
ANR	3611579	Callee	ft_qsort		3611287	0					
ANR	3611580	Identifier	ft_qsort		3611287	0					
ANR	3611581	ArgumentList	table -> maps		3611287	1					
ANR	3611582	Argument	table -> maps		3611287	0					
ANR	3611583	PtrMemberAccess	table -> maps		3611287	0					
ANR	3611584	Identifier	table		3611287	0					
ANR	3611585	Identifier	maps		3611287	1					
ANR	3611586	Argument	count		3611287	1					
ANR	3611587	Identifier	count		3611287	0					
ANR	3611588	Argument	sizeof ( PS_UniMap )		3611287	2					
ANR	3611589	SizeofExpression	sizeof ( PS_UniMap )		3611287	0					
ANR	3611590	Sizeof	sizeof		3611287	0					
ANR	3611591	SizeofOperand	PS_UniMap		3611287	1					
ANR	3611592	Argument	compare_uni_maps		3611287	3					
ANR	3611593	Identifier	compare_uni_maps		3611287	0					
ANR	3611594	ExpressionStatement	table -> num_maps = count	406:6:11248:11271	3611287	9	True				
ANR	3611595	AssignmentExpression	table -> num_maps = count		3611287	0		=			
ANR	3611596	PtrMemberAccess	table -> num_maps		3611287	0					
ANR	3611597	Identifier	table		3611287	0					
ANR	3611598	Identifier	num_maps		3611287	1					
ANR	3611599	Identifier	count		3611287	1					
ANR	3611600	ReturnStatement	return error ;	409:4:11284:11296	3611287	6	True				
ANR	3611601	Identifier	error		3611287	0					
ANR	3611602	ReturnType	static FT_Error		3611287	1					
ANR	3611603	Identifier	ps_unicodes_init		3611287	2					
ANR	3611604	ParameterList	"FT_Memory memory , PS_Unicodes table , FT_UInt num_glyphs , PS_GetGlyphNameFunc get_glyph_name , PS_FreeGlyphNameFunc free_glyph_name , FT_Pointer glyph_data"		3611287	3					
ANR	3611605	Parameter	FT_Memory memory	316:20:8631:8658	3611287	0	True				
ANR	3611606	ParameterType	FT_Memory		3611287	0					
ANR	3611607	Identifier	memory		3611287	1					
ANR	3611608	Parameter	PS_Unicodes table	317:20:8681:8707	3611287	1	True				
ANR	3611609	ParameterType	PS_Unicodes		3611287	0					
ANR	3611610	Identifier	table		3611287	1					
ANR	3611611	Parameter	FT_UInt num_glyphs	318:20:8730:8761	3611287	2	True				
ANR	3611612	ParameterType	FT_UInt		3611287	0					
ANR	3611613	Identifier	num_glyphs		3611287	1					
ANR	3611614	Parameter	PS_GetGlyphNameFunc get_glyph_name	319:20:8784:8819	3611287	3	True				
ANR	3611615	ParameterType	PS_GetGlyphNameFunc		3611287	0					
ANR	3611616	Identifier	get_glyph_name		3611287	1					
ANR	3611617	Parameter	PS_FreeGlyphNameFunc free_glyph_name	320:20:8842:8878	3611287	4	True				
ANR	3611618	ParameterType	PS_FreeGlyphNameFunc		3611287	0					
ANR	3611619	Identifier	free_glyph_name		3611287	1					
ANR	3611620	Parameter	FT_Pointer glyph_data	321:20:8901:8932	3611287	5	True				
ANR	3611621	ParameterType	FT_Pointer		3611287	0					
ANR	3611622	Identifier	glyph_data		3611287	1					
ANR	3611623	CFGEntryNode	ENTRY		3611287		True				
ANR	3611624	CFGExitNode	EXIT		3611287		True				
ANR	3611625	Symbol	* ft_extra_glyph_unicodes		3611287						
ANR	3611626	Symbol	memory		3611287						
ANR	3611627	Symbol	get_glyph_name		3611287						
ANR	3611628	Symbol	table -> maps		3611287						
ANR	3611629	Symbol	FT_Err_Ok		3611287						
ANR	3611630	Symbol	* map		3611287						
ANR	3611631	Symbol	ps_unicode_value		3611287						
ANR	3611632	Symbol	table -> num_maps		3611287						
ANR	3611633	Symbol	error		3611287						
ANR	3611634	Symbol	BASE_GLYPH		3611287						
ANR	3611635	Symbol	map -> unicode		3611287						
ANR	3611636	Symbol	* extra_glyph_list_states		3611287						
ANR	3611637	Symbol	map		3611287						
ANR	3611638	Symbol	table		3611287						
ANR	3611639	Symbol	NULL		3611287						
ANR	3611640	Symbol	compare_uni_maps		3611287						
ANR	3611641	Symbol	glyph_data		3611287						
ANR	3611642	Symbol	count		3611287						
ANR	3611643	Symbol	uni_char		3611287						
ANR	3611644	Symbol	* table		3611287						
ANR	3611645	Symbol	extra_glyphs		3611287						
ANR	3611646	Symbol	gname		3611287						
ANR	3611647	Symbol	n		3611287						
ANR	3611648	Symbol	FT_THROW		3611287						
ANR	3611649	Symbol	* extra_glyphs		3611287						
ANR	3611650	Symbol	num_glyphs		3611287						
ANR	3611651	Symbol	map -> glyph_index		3611287						
ANR	3611652	Symbol	FT_NEW_ARRAY		3611287						
ANR	3611653	Symbol	* n		3611287						
ANR	3611654	Symbol	extra_glyph_list_states		3611287						
ANR	3611655	Symbol	No_Unicode_Glyph_Name		3611287						
ANR	3611656	Symbol	EXTRA_GLYPH_LIST_SIZE		3611287						
ANR	3611657	Symbol	ft_extra_glyph_unicodes		3611287						
ANR	3611658	Symbol	free_glyph_name		3611287						
ANR	3611659	Function	ps_unicodes_char_index	413:2:11306:12156							
ANR	3611660	FunctionDef	"ps_unicodes_char_index (PS_Unicodes table , FT_UInt32 unicode)"		3611659	0					
ANR	3611661	CompoundStatement		416:2:11418:12156	3611659	0					
ANR	3611662	IdentifierDeclStatement	"PS_UniMap * min , * max , * mid , * result = NULL ;"	417:4:11424:11467	3611659	0	True				
ANR	3611663	IdentifierDecl	* min		3611659	0					
ANR	3611664	IdentifierDeclType	PS_UniMap *		3611659	0					
ANR	3611665	Identifier	min		3611659	1					
ANR	3611666	IdentifierDecl	* max		3611659	1					
ANR	3611667	IdentifierDeclType	PS_UniMap *		3611659	0					
ANR	3611668	Identifier	max		3611659	1					
ANR	3611669	IdentifierDecl	* mid		3611659	2					
ANR	3611670	IdentifierDeclType	PS_UniMap *		3611659	0					
ANR	3611671	Identifier	mid		3611659	1					
ANR	3611672	IdentifierDecl	* result = NULL		3611659	3					
ANR	3611673	IdentifierDeclType	PS_UniMap *		3611659	0					
ANR	3611674	Identifier	result		3611659	1					
ANR	3611675	AssignmentExpression	* result = NULL		3611659	2		=			
ANR	3611676	Identifier	NULL		3611659	0					
ANR	3611677	Identifier	NULL		3611659	1					
ANR	3611678	ExpressionStatement	min = table -> maps	422:4:11524:11541	3611659	1	True				
ANR	3611679	AssignmentExpression	min = table -> maps		3611659	0		=			
ANR	3611680	Identifier	min		3611659	0					
ANR	3611681	PtrMemberAccess	table -> maps		3611659	1					
ANR	3611682	Identifier	table		3611659	0					
ANR	3611683	Identifier	maps		3611659	1					
ANR	3611684	ExpressionStatement	max = min + table -> num_maps - 1	423:4:11547:11578	3611659	2	True				
ANR	3611685	AssignmentExpression	max = min + table -> num_maps - 1		3611659	0		=			
ANR	3611686	Identifier	max		3611659	0					
ANR	3611687	AdditiveExpression	min + table -> num_maps - 1		3611659	1		+			
ANR	3611688	Identifier	min		3611659	0					
ANR	3611689	AdditiveExpression	table -> num_maps - 1		3611659	1		-			
ANR	3611690	PtrMemberAccess	table -> num_maps		3611659	0					
ANR	3611691	Identifier	table		3611659	0					
ANR	3611692	Identifier	num_maps		3611659	1					
ANR	3611693	PrimaryExpression	1		3611659	1					
ANR	3611694	WhileStatement	while ( min <= max )		3611659	3					
ANR	3611695	Condition	min <= max	425:12:11593:11602	3611659	0	True				
ANR	3611696	RelationalExpression	min <= max		3611659	0		<=			
ANR	3611697	Identifier	min		3611659	0					
ANR	3611698	Identifier	max		3611659	1					
ANR	3611699	CompoundStatement		12:6:199:220	3611659	1					
ANR	3611700	IdentifierDeclStatement	FT_UInt32 base_glyph ;	427:6:11618:11639	3611659	0	True				
ANR	3611701	IdentifierDecl	base_glyph		3611659	0					
ANR	3611702	IdentifierDeclType	FT_UInt32		3611659	0					
ANR	3611703	Identifier	base_glyph		3611659	1					
ANR	3611704	ExpressionStatement	mid = min + ( ( max - min ) >> 1 )	430:6:11649:11683	3611659	1	True				
ANR	3611705	AssignmentExpression	mid = min + ( ( max - min ) >> 1 )		3611659	0		=			
ANR	3611706	Identifier	mid		3611659	0					
ANR	3611707	AdditiveExpression	min + ( ( max - min ) >> 1 )		3611659	1		+			
ANR	3611708	Identifier	min		3611659	0					
ANR	3611709	ShiftExpression	( max - min ) >> 1		3611659	1		>>			
ANR	3611710	AdditiveExpression	max - min		3611659	0		-			
ANR	3611711	Identifier	max		3611659	0					
ANR	3611712	Identifier	min		3611659	1					
ANR	3611713	PrimaryExpression	1		3611659	1					
ANR	3611714	IfStatement	if ( mid -> unicode == unicode )		3611659	2					
ANR	3611715	Condition	mid -> unicode == unicode	432:11:11697:11719	3611659	0	True				
ANR	3611716	EqualityExpression	mid -> unicode == unicode		3611659	0		==			
ANR	3611717	PtrMemberAccess	mid -> unicode		3611659	0					
ANR	3611718	Identifier	mid		3611659	0					
ANR	3611719	Identifier	unicode		3611659	1					
ANR	3611720	Identifier	unicode		3611659	1					
ANR	3611721	CompoundStatement		18:6:310:310	3611659	1					
ANR	3611722	ExpressionStatement	result = mid	434:8:11739:11751	3611659	0	True				
ANR	3611723	AssignmentExpression	result = mid		3611659	0		=			
ANR	3611724	Identifier	result		3611659	0					
ANR	3611725	Identifier	mid		3611659	1					
ANR	3611726	BreakStatement	break ;	435:8:11761:11766	3611659	1	True				
ANR	3611727	ExpressionStatement	base_glyph = BASE_GLYPH ( mid -> unicode )	438:6:11783:11822	3611659	3	True				
ANR	3611728	AssignmentExpression	base_glyph = BASE_GLYPH ( mid -> unicode )		3611659	0		=			
ANR	3611729	Identifier	base_glyph		3611659	0					
ANR	3611730	CallExpression	BASE_GLYPH ( mid -> unicode )		3611659	1					
ANR	3611731	Callee	BASE_GLYPH		3611659	0					
ANR	3611732	Identifier	BASE_GLYPH		3611659	0					
ANR	3611733	ArgumentList	mid -> unicode		3611659	1					
ANR	3611734	Argument	mid -> unicode		3611659	0					
ANR	3611735	PtrMemberAccess	mid -> unicode		3611659	0					
ANR	3611736	Identifier	mid		3611659	0					
ANR	3611737	Identifier	unicode		3611659	1					
ANR	3611738	IfStatement	if ( base_glyph == unicode )		3611659	4					
ANR	3611739	Condition	base_glyph == unicode	440:11:11836:11856	3611659	0	True				
ANR	3611740	EqualityExpression	base_glyph == unicode		3611659	0		==			
ANR	3611741	Identifier	base_glyph		3611659	0					
ANR	3611742	Identifier	unicode		3611659	1					
ANR	3611743	ExpressionStatement	result = mid	441:8:11868:11880	3611659	1	True				
ANR	3611744	AssignmentExpression	result = mid		3611659	0		=			
ANR	3611745	Identifier	result		3611659	0					
ANR	3611746	Identifier	mid		3611659	1					
ANR	3611747	IfStatement	if ( min == max )		3611659	5					
ANR	3611748	Condition	min == max	443:11:11950:11959	3611659	0	True				
ANR	3611749	EqualityExpression	min == max		3611659	0		==			
ANR	3611750	Identifier	min		3611659	0					
ANR	3611751	Identifier	max		3611659	1					
ANR	3611752	BreakStatement	break ;	444:8:11971:11976	3611659	1	True				
ANR	3611753	IfStatement	if ( base_glyph < unicode )		3611659	6					
ANR	3611754	Condition	base_glyph < unicode	446:11:11990:12009	3611659	0	True				
ANR	3611755	RelationalExpression	base_glyph < unicode		3611659	0		<			
ANR	3611756	Identifier	base_glyph		3611659	0					
ANR	3611757	Identifier	unicode		3611659	1					
ANR	3611758	ExpressionStatement	min = mid + 1	447:8:12021:12034	3611659	1	True				
ANR	3611759	AssignmentExpression	min = mid + 1		3611659	0		=			
ANR	3611760	Identifier	min		3611659	0					
ANR	3611761	AdditiveExpression	mid + 1		3611659	1		+			
ANR	3611762	Identifier	mid		3611659	0					
ANR	3611763	PrimaryExpression	1		3611659	1					
ANR	3611764	ElseStatement	else		3611659	0					
ANR	3611765	ExpressionStatement	max = mid - 1	449:8:12055:12068	3611659	0	True				
ANR	3611766	AssignmentExpression	max = mid - 1		3611659	0		=			
ANR	3611767	Identifier	max		3611659	0					
ANR	3611768	AdditiveExpression	mid - 1		3611659	1		-			
ANR	3611769	Identifier	mid		3611659	0					
ANR	3611770	PrimaryExpression	1		3611659	1					
ANR	3611771	IfStatement	if ( result )		3611659	4					
ANR	3611772	Condition	result	452:9:12086:12091	3611659	0	True				
ANR	3611773	Identifier	result		3611659	0					
ANR	3611774	ReturnStatement	return result -> glyph_index ;	453:6:12101:12127	3611659	1	True				
ANR	3611775	PtrMemberAccess	result -> glyph_index		3611659	0					
ANR	3611776	Identifier	result		3611659	0					
ANR	3611777	Identifier	glyph_index		3611659	1					
ANR	3611778	ElseStatement	else		3611659	0					
ANR	3611779	ReturnStatement	return 0 ;	455:6:12144:12152	3611659	0	True				
ANR	3611780	PrimaryExpression	0		3611659	0					
ANR	3611781	ReturnType	static FT_UInt		3611659	1					
ANR	3611782	Identifier	ps_unicodes_char_index		3611659	2					
ANR	3611783	ParameterList	"PS_Unicodes table , FT_UInt32 unicode"		3611659	3					
ANR	3611784	Parameter	PS_Unicodes table	414:26:11347:11364	3611659	0	True				
ANR	3611785	ParameterType	PS_Unicodes		3611659	0					
ANR	3611786	Identifier	table		3611659	1					
ANR	3611787	Parameter	FT_UInt32 unicode	415:26:11393:11412	3611659	1	True				
ANR	3611788	ParameterType	FT_UInt32		3611659	0					
ANR	3611789	Identifier	unicode		3611659	1					
ANR	3611790	CFGEntryNode	ENTRY		3611659		True				
ANR	3611791	CFGExitNode	EXIT		3611659		True				
ANR	3611792	Symbol	NULL		3611659						
ANR	3611793	Symbol	table -> maps		3611659						
ANR	3611794	Symbol	max		3611659						
ANR	3611795	Symbol	mid		3611659						
ANR	3611796	Symbol	* table		3611659						
ANR	3611797	Symbol	table -> num_maps		3611659						
ANR	3611798	Symbol	mid -> unicode		3611659						
ANR	3611799	Symbol	result		3611659						
ANR	3611800	Symbol	* mid		3611659						
ANR	3611801	Symbol	min		3611659						
ANR	3611802	Symbol	* result		3611659						
ANR	3611803	Symbol	result -> glyph_index		3611659						
ANR	3611804	Symbol	unicode		3611659						
ANR	3611805	Symbol	BASE_GLYPH		3611659						
ANR	3611806	Symbol	base_glyph		3611659						
ANR	3611807	Symbol	table		3611659						
ANR	3611808	Function	ps_unicodes_char_next	459:2:12162:13383							
ANR	3611809	FunctionDef	"ps_unicodes_char_next (PS_Unicodes table , FT_UInt32 * unicode)"		3611808	0					
ANR	3611810	CompoundStatement		462:2:12274:13383	3611808	0					
ANR	3611811	IdentifierDeclStatement	FT_UInt result = 0 ;	463:4:12280:12304	3611808	0	True				
ANR	3611812	IdentifierDecl	result = 0		3611808	0					
ANR	3611813	IdentifierDeclType	FT_UInt		3611808	0					
ANR	3611814	Identifier	result		3611808	1					
ANR	3611815	AssignmentExpression	result = 0		3611808	2		=			
ANR	3611816	Identifier	result		3611808	0					
ANR	3611817	PrimaryExpression	0		3611808	1					
ANR	3611818	IdentifierDeclStatement	FT_UInt32 char_code = * unicode + 1 ;	464:4:12310:12345	3611808	1	True				
ANR	3611819	IdentifierDecl	char_code = * unicode + 1		3611808	0					
ANR	3611820	IdentifierDeclType	FT_UInt32		3611808	0					
ANR	3611821	Identifier	char_code		3611808	1					
ANR	3611822	AssignmentExpression	char_code = * unicode + 1		3611808	2		=			
ANR	3611823	Identifier	char_code		3611808	0					
ANR	3611824	AdditiveExpression	* unicode + 1		3611808	1		+			
ANR	3611825	UnaryOperationExpression	* unicode		3611808	0					
ANR	3611826	UnaryOperator	*		3611808	0					
ANR	3611827	Identifier	unicode		3611808	1					
ANR	3611828	PrimaryExpression	1		3611808	1					
ANR	3611829	CompoundStatement		11:6:200:222	3611808	2					
ANR	3611830	IdentifierDeclStatement	FT_UInt min = 0 ;	468:6:12361:12380	3611808	0	True				
ANR	3611831	IdentifierDecl	min = 0		3611808	0					
ANR	3611832	IdentifierDeclType	FT_UInt		3611808	0					
ANR	3611833	Identifier	min		3611808	1					
ANR	3611834	AssignmentExpression	min = 0		3611808	2		=			
ANR	3611835	Identifier	min		3611808	0					
ANR	3611836	PrimaryExpression	0		3611808	1					
ANR	3611837	IdentifierDeclStatement	FT_UInt max = table -> num_maps ;	469:6:12388:12421	3611808	1	True				
ANR	3611838	IdentifierDecl	max = table -> num_maps		3611808	0					
ANR	3611839	IdentifierDeclType	FT_UInt		3611808	0					
ANR	3611840	Identifier	max		3611808	1					
ANR	3611841	AssignmentExpression	max = table -> num_maps		3611808	2		=			
ANR	3611842	Identifier	max		3611808	0					
ANR	3611843	PtrMemberAccess	table -> num_maps		3611808	1					
ANR	3611844	Identifier	table		3611808	0					
ANR	3611845	Identifier	num_maps		3611808	1					
ANR	3611846	IdentifierDeclStatement	FT_UInt mid ;	470:6:12429:12444	3611808	2	True				
ANR	3611847	IdentifierDecl	mid		3611808	0					
ANR	3611848	IdentifierDeclType	FT_UInt		3611808	0					
ANR	3611849	Identifier	mid		3611808	1					
ANR	3611850	IdentifierDeclStatement	PS_UniMap * map ;	471:6:12452:12467	3611808	3	True				
ANR	3611851	IdentifierDecl	* map		3611808	0					
ANR	3611852	IdentifierDeclType	PS_UniMap *		3611808	0					
ANR	3611853	Identifier	map		3611808	1					
ANR	3611854	IdentifierDeclStatement	FT_UInt32 base_glyph ;	472:6:12475:12497	3611808	4	True				
ANR	3611855	IdentifierDecl	base_glyph		3611808	0					
ANR	3611856	IdentifierDeclType	FT_UInt32		3611808	0					
ANR	3611857	Identifier	base_glyph		3611808	1					
ANR	3611858	WhileStatement	while ( min < max )		3611808	5					
ANR	3611859	Condition	min < max	475:14:12515:12523	3611808	0	True				
ANR	3611860	RelationalExpression	min < max		3611808	0		<			
ANR	3611861	Identifier	min		3611808	0					
ANR	3611862	Identifier	max		3611808	1					
ANR	3611863	CompoundStatement		15:6:258:258	3611808	1					
ANR	3611864	ExpressionStatement	mid = min + ( ( max - min ) >> 1 )	477:8:12543:12577	3611808	0	True				
ANR	3611865	AssignmentExpression	mid = min + ( ( max - min ) >> 1 )		3611808	0		=			
ANR	3611866	Identifier	mid		3611808	0					
ANR	3611867	AdditiveExpression	min + ( ( max - min ) >> 1 )		3611808	1		+			
ANR	3611868	Identifier	min		3611808	0					
ANR	3611869	ShiftExpression	( max - min ) >> 1		3611808	1		>>			
ANR	3611870	AdditiveExpression	max - min		3611808	0		-			
ANR	3611871	Identifier	max		3611808	0					
ANR	3611872	Identifier	min		3611808	1					
ANR	3611873	PrimaryExpression	1		3611808	1					
ANR	3611874	ExpressionStatement	map = table -> maps + mid	478:8:12587:12610	3611808	1	True				
ANR	3611875	AssignmentExpression	map = table -> maps + mid		3611808	0		=			
ANR	3611876	Identifier	map		3611808	0					
ANR	3611877	AdditiveExpression	table -> maps + mid		3611808	1		+			
ANR	3611878	PtrMemberAccess	table -> maps		3611808	0					
ANR	3611879	Identifier	table		3611808	0					
ANR	3611880	Identifier	maps		3611808	1					
ANR	3611881	Identifier	mid		3611808	1					
ANR	3611882	IfStatement	if ( map -> unicode == char_code )		3611808	2					
ANR	3611883	Condition	map -> unicode == char_code	480:13:12626:12650	3611808	0	True				
ANR	3611884	EqualityExpression	map -> unicode == char_code		3611808	0		==			
ANR	3611885	PtrMemberAccess	map -> unicode		3611808	0					
ANR	3611886	Identifier	map		3611808	0					
ANR	3611887	Identifier	unicode		3611808	1					
ANR	3611888	Identifier	char_code		3611808	1					
ANR	3611889	CompoundStatement		20:8:387:387	3611808	1					
ANR	3611890	ExpressionStatement	result = map -> glyph_index	482:10:12674:12699	3611808	0	True				
ANR	3611891	AssignmentExpression	result = map -> glyph_index		3611808	0		=			
ANR	3611892	Identifier	result		3611808	0					
ANR	3611893	PtrMemberAccess	map -> glyph_index		3611808	1					
ANR	3611894	Identifier	map		3611808	0					
ANR	3611895	Identifier	glyph_index		3611808	1					
ANR	3611896	GotoStatement	goto Exit ;	483:10:12711:12720	3611808	1	True				
ANR	3611897	Identifier	Exit		3611808	0					
ANR	3611898	ExpressionStatement	base_glyph = BASE_GLYPH ( map -> unicode )	486:8:12741:12780	3611808	3	True				
ANR	3611899	AssignmentExpression	base_glyph = BASE_GLYPH ( map -> unicode )		3611808	0		=			
ANR	3611900	Identifier	base_glyph		3611808	0					
ANR	3611901	CallExpression	BASE_GLYPH ( map -> unicode )		3611808	1					
ANR	3611902	Callee	BASE_GLYPH		3611808	0					
ANR	3611903	Identifier	BASE_GLYPH		3611808	0					
ANR	3611904	ArgumentList	map -> unicode		3611808	1					
ANR	3611905	Argument	map -> unicode		3611808	0					
ANR	3611906	PtrMemberAccess	map -> unicode		3611808	0					
ANR	3611907	Identifier	map		3611808	0					
ANR	3611908	Identifier	unicode		3611808	1					
ANR	3611909	IfStatement	if ( base_glyph == char_code )		3611808	4					
ANR	3611910	Condition	base_glyph == char_code	488:13:12796:12818	3611808	0	True				
ANR	3611911	EqualityExpression	base_glyph == char_code		3611808	0		==			
ANR	3611912	Identifier	base_glyph		3611808	0					
ANR	3611913	Identifier	char_code		3611808	1					
ANR	3611914	ExpressionStatement	result = map -> glyph_index	489:10:12832:12857	3611808	1	True				
ANR	3611915	AssignmentExpression	result = map -> glyph_index		3611808	0		=			
ANR	3611916	Identifier	result		3611808	0					
ANR	3611917	PtrMemberAccess	map -> glyph_index		3611808	1					
ANR	3611918	Identifier	map		3611808	0					
ANR	3611919	Identifier	glyph_index		3611808	1					
ANR	3611920	IfStatement	if ( base_glyph < char_code )		3611808	5					
ANR	3611921	Condition	base_glyph < char_code	491:13:12873:12894	3611808	0	True				
ANR	3611922	RelationalExpression	base_glyph < char_code		3611808	0		<			
ANR	3611923	Identifier	base_glyph		3611808	0					
ANR	3611924	Identifier	char_code		3611808	1					
ANR	3611925	ExpressionStatement	min = mid + 1	492:10:12908:12921	3611808	1	True				
ANR	3611926	AssignmentExpression	min = mid + 1		3611808	0		=			
ANR	3611927	Identifier	min		3611808	0					
ANR	3611928	AdditiveExpression	mid + 1		3611808	1		+			
ANR	3611929	Identifier	mid		3611808	0					
ANR	3611930	PrimaryExpression	1		3611808	1					
ANR	3611931	ElseStatement	else		3611808	0					
ANR	3611932	ExpressionStatement	max = mid	494:10:12946:12955	3611808	0	True				
ANR	3611933	AssignmentExpression	max = mid		3611808	0		=			
ANR	3611934	Identifier	max		3611808	0					
ANR	3611935	Identifier	mid		3611808	1					
ANR	3611936	IfStatement	if ( result )		3611808	6					
ANR	3611937	Condition	result	497:11:12977:12982	3611808	0	True				
ANR	3611938	Identifier	result		3611808	0					
ANR	3611939	GotoStatement	goto Exit ;	498:8:12994:13003	3611808	1	True				
ANR	3611940	Identifier	Exit		3611808	0					
ANR	3611941	ExpressionStatement	char_code = 0	501:6:13129:13142	3611808	7	True				
ANR	3611942	AssignmentExpression	char_code = 0		3611808	0		=			
ANR	3611943	Identifier	char_code		3611808	0					
ANR	3611944	PrimaryExpression	0		3611808	1					
ANR	3611945	IfStatement	if ( min < table -> num_maps )		3611808	8					
ANR	3611946	Condition	min < table -> num_maps	503:11:13156:13176	3611808	0	True				
ANR	3611947	RelationalExpression	min < table -> num_maps		3611808	0		<			
ANR	3611948	Identifier	min		3611808	0					
ANR	3611949	PtrMemberAccess	table -> num_maps		3611808	1					
ANR	3611950	Identifier	table		3611808	0					
ANR	3611951	Identifier	num_maps		3611808	1					
ANR	3611952	CompoundStatement		43:6:911:911	3611808	1					
ANR	3611953	ExpressionStatement	map = table -> maps + min	505:8:13196:13225	3611808	0	True				
ANR	3611954	AssignmentExpression	map = table -> maps + min		3611808	0		=			
ANR	3611955	Identifier	map		3611808	0					
ANR	3611956	AdditiveExpression	table -> maps + min		3611808	1		+			
ANR	3611957	PtrMemberAccess	table -> maps		3611808	0					
ANR	3611958	Identifier	table		3611808	0					
ANR	3611959	Identifier	maps		3611808	1					
ANR	3611960	Identifier	min		3611808	1					
ANR	3611961	ExpressionStatement	result = map -> glyph_index	506:8:13235:13263	3611808	1	True				
ANR	3611962	AssignmentExpression	result = map -> glyph_index		3611808	0		=			
ANR	3611963	Identifier	result		3611808	0					
ANR	3611964	PtrMemberAccess	map -> glyph_index		3611808	1					
ANR	3611965	Identifier	map		3611808	0					
ANR	3611966	Identifier	glyph_index		3611808	1					
ANR	3611967	ExpressionStatement	char_code = BASE_GLYPH ( map -> unicode )	507:8:13273:13311	3611808	2	True				
ANR	3611968	AssignmentExpression	char_code = BASE_GLYPH ( map -> unicode )		3611808	0		=			
ANR	3611969	Identifier	char_code		3611808	0					
ANR	3611970	CallExpression	BASE_GLYPH ( map -> unicode )		3611808	1					
ANR	3611971	Callee	BASE_GLYPH		3611808	0					
ANR	3611972	Identifier	BASE_GLYPH		3611808	0					
ANR	3611973	ArgumentList	map -> unicode		3611808	1					
ANR	3611974	Argument	map -> unicode		3611808	0					
ANR	3611975	PtrMemberAccess	map -> unicode		3611808	0					
ANR	3611976	Identifier	map		3611808	0					
ANR	3611977	Identifier	unicode		3611808	1					
ANR	3611978	Label	Exit :	511:2:13330:13334	3611808	3	True				
ANR	3611979	Identifier	Exit		3611808	0					
ANR	3611980	ExpressionStatement	* unicode = char_code	512:4:13340:13360	3611808	4	True				
ANR	3611981	AssignmentExpression	* unicode = char_code		3611808	0		=			
ANR	3611982	UnaryOperationExpression	* unicode		3611808	0					
ANR	3611983	UnaryOperator	*		3611808	0					
ANR	3611984	Identifier	unicode		3611808	1					
ANR	3611985	Identifier	char_code		3611808	1					
ANR	3611986	ReturnStatement	return result ;	513:4:13366:13379	3611808	5	True				
ANR	3611987	Identifier	result		3611808	0					
ANR	3611988	ReturnType	static FT_UInt32		3611808	1					
ANR	3611989	Identifier	ps_unicodes_char_next		3611808	2					
ANR	3611990	ParameterList	"PS_Unicodes table , FT_UInt32 * unicode"		3611808	3					
ANR	3611991	Parameter	PS_Unicodes table	460:25:12204:12221	3611808	0	True				
ANR	3611992	ParameterType	PS_Unicodes		3611808	0					
ANR	3611993	Identifier	table		3611808	1					
ANR	3611994	Parameter	FT_UInt32 * unicode	461:25:12249:12268	3611808	1	True				
ANR	3611995	ParameterType	FT_UInt32 *		3611808	0					
ANR	3611996	Identifier	unicode		3611808	1					
ANR	3611997	CFGEntryNode	ENTRY		3611808		True				
ANR	3611998	CFGExitNode	EXIT		3611808		True				
ANR	3611999	Symbol	* unicode		3611808						
ANR	3612000	Symbol	table -> maps		3611808						
ANR	3612001	Symbol	max		3611808						
ANR	3612002	Symbol	* map		3611808						
ANR	3612003	Symbol	char_code		3611808						
ANR	3612004	Symbol	* table		3611808						
ANR	3612005	Symbol	mid		3611808						
ANR	3612006	Symbol	table -> num_maps		3611808						
ANR	3612007	Symbol	result		3611808						
ANR	3612008	Symbol	min		3611808						
ANR	3612009	Symbol	map -> glyph_index		3611808						
ANR	3612010	Symbol	unicode		3611808						
ANR	3612011	Symbol	BASE_GLYPH		3611808						
ANR	3612012	Symbol	map -> unicode		3611808						
ANR	3612013	Symbol	base_glyph		3611808						
ANR	3612014	Symbol	map		3611808						
ANR	3612015	Symbol	table		3611808						
ANR	3612016	Function	ps_get_macintosh_name	520:2:13438:13638							
ANR	3612017	FunctionDef	ps_get_macintosh_name (FT_UInt name_index)		3612016	0					
ANR	3612018	CompoundStatement		522:2:13506:13638	3612016	0					
ANR	3612019	IfStatement	if ( name_index >= FT_NUM_MAC_NAMES )		3612016	0					
ANR	3612020	Condition	name_index >= FT_NUM_MAC_NAMES	523:9:13517:13546	3612016	0	True				
ANR	3612021	RelationalExpression	name_index >= FT_NUM_MAC_NAMES		3612016	0		>=			
ANR	3612022	Identifier	name_index		3612016	0					
ANR	3612023	Identifier	FT_NUM_MAC_NAMES		3612016	1					
ANR	3612024	ExpressionStatement	name_index = 0	524:6:13556:13570	3612016	1	True				
ANR	3612025	AssignmentExpression	name_index = 0		3612016	0		=			
ANR	3612026	Identifier	name_index		3612016	0					
ANR	3612027	PrimaryExpression	0		3612016	1					
ANR	3612028	ReturnStatement	return ft_standard_glyph_names + ft_mac_names [ name_index ] ;	526:4:13577:13634	3612016	1	True				
ANR	3612029	AdditiveExpression	ft_standard_glyph_names + ft_mac_names [ name_index ]		3612016	0		+			
ANR	3612030	Identifier	ft_standard_glyph_names		3612016	0					
ANR	3612031	ArrayIndexing	ft_mac_names [ name_index ]		3612016	1					
ANR	3612032	Identifier	ft_mac_names		3612016	0					
ANR	3612033	Identifier	name_index		3612016	1					
ANR	3612034	ReturnType	static const char *		3612016	1					
ANR	3612035	Identifier	ps_get_macintosh_name		3612016	2					
ANR	3612036	ParameterList	FT_UInt name_index		3612016	3					
ANR	3612037	Parameter	FT_UInt name_index	521:25:13482:13500	3612016	0	True				
ANR	3612038	ParameterType	FT_UInt		3612016	0					
ANR	3612039	Identifier	name_index		3612016	1					
ANR	3612040	CFGEntryNode	ENTRY		3612016		True				
ANR	3612041	CFGExitNode	EXIT		3612016		True				
ANR	3612042	Symbol	* name_index		3612016						
ANR	3612043	Symbol	FT_NUM_MAC_NAMES		3612016						
ANR	3612044	Symbol	name_index		3612016						
ANR	3612045	Symbol	ft_standard_glyph_names		3612016						
ANR	3612046	Symbol	ft_mac_names		3612016						
ANR	3612047	Symbol	* ft_mac_names		3612016						
ANR	3612048	Function	ps_get_standard_strings	530:2:13644:13819							
ANR	3612049	FunctionDef	ps_get_standard_strings (FT_UInt sid)		3612048	0					
ANR	3612050	CompoundStatement		532:2:13707:13819	3612048	0					
ANR	3612051	IfStatement	if ( sid >= FT_NUM_SID_NAMES )		3612048	0					
ANR	3612052	Condition	sid >= FT_NUM_SID_NAMES	533:9:13718:13740	3612048	0	True				
ANR	3612053	RelationalExpression	sid >= FT_NUM_SID_NAMES		3612048	0		>=			
ANR	3612054	Identifier	sid		3612048	0					
ANR	3612055	Identifier	FT_NUM_SID_NAMES		3612048	1					
ANR	3612056	ReturnStatement	return 0 ;	534:6:13750:13758	3612048	1	True				
ANR	3612057	PrimaryExpression	0		3612048	0					
ANR	3612058	ReturnStatement	return ft_standard_glyph_names + ft_sid_names [ sid ] ;	536:4:13765:13815	3612048	1	True				
ANR	3612059	AdditiveExpression	ft_standard_glyph_names + ft_sid_names [ sid ]		3612048	0		+			
ANR	3612060	Identifier	ft_standard_glyph_names		3612048	0					
ANR	3612061	ArrayIndexing	ft_sid_names [ sid ]		3612048	1					
ANR	3612062	Identifier	ft_sid_names		3612048	0					
ANR	3612063	Identifier	sid		3612048	1					
ANR	3612064	ReturnType	static const char *		3612048	1					
ANR	3612065	Identifier	ps_get_standard_strings		3612048	2					
ANR	3612066	ParameterList	FT_UInt sid		3612048	3					
ANR	3612067	Parameter	FT_UInt sid	531:27:13690:13701	3612048	0	True				
ANR	3612068	ParameterType	FT_UInt		3612048	0					
ANR	3612069	Identifier	sid		3612048	1					
ANR	3612070	CFGEntryNode	ENTRY		3612048		True				
ANR	3612071	CFGExitNode	EXIT		3612048		True				
ANR	3612072	Symbol	* ft_sid_names		3612048						
ANR	3612073	Symbol	ft_standard_glyph_names		3612048						
ANR	3612074	Symbol	FT_NUM_SID_NAMES		3612048						
ANR	3612075	Symbol	* sid		3612048						
ANR	3612076	Symbol	ft_sid_names		3612048						
ANR	3612077	Symbol	sid		3612048						
ANR	3612078	Function	psnames_get_service	583:2:15508:15964							
ANR	3612079	FunctionDef	"psnames_get_service (FT_Module module , const char * service_id)"		3612078	0					
ANR	3612080	CompoundStatement		586:2:15621:15964	3612078	0					
ANR	3612081	IdentifierDeclStatement	FT_Library library ;	589:4:15721:15740	3612078	0	True				
ANR	3612082	IdentifierDecl	library		3612078	0					
ANR	3612083	IdentifierDeclType	FT_Library		3612078	0					
ANR	3612084	Identifier	library		3612078	1					
ANR	3612085	IfStatement	if ( ! module )		3612078	1					
ANR	3612086	Condition	! module	592:9:15753:15759	3612078	0	True				
ANR	3612087	UnaryOperationExpression	! module		3612078	0					
ANR	3612088	UnaryOperator	!		3612078	0					
ANR	3612089	Identifier	module		3612078	1					
ANR	3612090	ReturnStatement	return NULL ;	593:6:15769:15780	3612078	1	True				
ANR	3612091	Identifier	NULL		3612078	0					
ANR	3612092	ExpressionStatement	library = module -> library	594:4:15786:15811	3612078	2	True				
ANR	3612093	AssignmentExpression	library = module -> library		3612078	0		=			
ANR	3612094	Identifier	library		3612078	0					
ANR	3612095	PtrMemberAccess	module -> library		3612078	1					
ANR	3612096	Identifier	module		3612078	0					
ANR	3612097	Identifier	library		3612078	1					
ANR	3612098	IfStatement	if ( ! library )		3612078	3					
ANR	3612099	Condition	! library	595:9:15822:15829	3612078	0	True				
ANR	3612100	UnaryOperationExpression	! library		3612078	0					
ANR	3612101	UnaryOperator	!		3612078	0					
ANR	3612102	Identifier	library		3612078	1					
ANR	3612103	ReturnStatement	return NULL ;	596:6:15839:15850	3612078	1	True				
ANR	3612104	Identifier	NULL		3612078	0					
ANR	3612105	ReturnStatement	"return ft_service_list_lookup ( PSCMAPS_SERVICES_GET , service_id ) ;"	601:4:15895:15960	3612078	4	True				
ANR	3612106	CallExpression	"ft_service_list_lookup ( PSCMAPS_SERVICES_GET , service_id )"		3612078	0					
ANR	3612107	Callee	ft_service_list_lookup		3612078	0					
ANR	3612108	Identifier	ft_service_list_lookup		3612078	0					
ANR	3612109	ArgumentList	PSCMAPS_SERVICES_GET		3612078	1					
ANR	3612110	Argument	PSCMAPS_SERVICES_GET		3612078	0					
ANR	3612111	Identifier	PSCMAPS_SERVICES_GET		3612078	0					
ANR	3612112	Argument	service_id		3612078	1					
ANR	3612113	Identifier	service_id		3612078	0					
ANR	3612114	ReturnType	static FT_Pointer		3612078	1					
ANR	3612115	Identifier	psnames_get_service		3612078	2					
ANR	3612116	ParameterList	"FT_Module module , const char * service_id"		3612078	3					
ANR	3612117	Parameter	FT_Module module	584:23:15549:15567	3612078	0	True				
ANR	3612118	ParameterType	FT_Module		3612078	0					
ANR	3612119	Identifier	module		3612078	1					
ANR	3612120	Parameter	const char * service_id	585:23:15593:15615	3612078	1	True				
ANR	3612121	ParameterType	const char *		3612078	0					
ANR	3612122	Identifier	service_id		3612078	1					
ANR	3612123	CFGEntryNode	ENTRY		3612078		True				
ANR	3612124	CFGExitNode	EXIT		3612078		True				
ANR	3612125	Symbol	PSCMAPS_SERVICES_GET		3612078						
ANR	3612126	Symbol	module -> library		3612078						
ANR	3612127	Symbol	library		3612078						
ANR	3612128	Symbol	NULL		3612078						
ANR	3612129	Symbol	* module		3612078						
ANR	3612130	Symbol	module		3612078						
ANR	3612131	Symbol	service_id		3612078						
ANR	3612132	Symbol	ft_service_list_lookup		3612078						
