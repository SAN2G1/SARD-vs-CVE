command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5011034	File	data/converged/CVE-2018-16863_ghostpdl/gsclipsr.c								
ANR	5011035	Function	rc_free_clip_stack	33:0:919:1265							
ANR	5011036	FunctionDef	"rc_free_clip_stack (gs_memory_t * mem , void * vstack , client_name_t cname)"		5011035	0					
ANR	5011037	CompoundStatement		35:0:1004:1265	5011035	0					
ANR	5011038	IdentifierDeclStatement	gx_clip_stack_t * stack = ( gx_clip_stack_t * ) vstack ;	36:4:1010:1060	5011035	0	True				
ANR	5011039	IdentifierDecl	* stack = ( gx_clip_stack_t * ) vstack		5011035	0					
ANR	5011040	IdentifierDeclType	gx_clip_stack_t *		5011035	0					
ANR	5011041	Identifier	stack		5011035	1					
ANR	5011042	AssignmentExpression	* stack = ( gx_clip_stack_t * ) vstack		5011035	2		=			
ANR	5011043	Identifier	stack		5011035	0					
ANR	5011044	CastExpression	( gx_clip_stack_t * ) vstack		5011035	1					
ANR	5011045	CastTarget	gx_clip_stack_t *		5011035	0					
ANR	5011046	Identifier	vstack		5011035	1					
ANR	5011047	IfStatement	if ( stack -> rc . ref_count <= 1 )		5011035	1					
ANR	5011048	Condition	stack -> rc . ref_count <= 1	38:8:1071:1094	5011035	0	True				
ANR	5011049	RelationalExpression	stack -> rc . ref_count <= 1		5011035	0		<=			
ANR	5011050	MemberAccess	stack -> rc . ref_count		5011035	0					
ANR	5011051	PtrMemberAccess	stack -> rc		5011035	0					
ANR	5011052	Identifier	stack		5011035	0					
ANR	5011053	Identifier	rc		5011035	1					
ANR	5011054	Identifier	ref_count		5011035	1					
ANR	5011055	PrimaryExpression	1		5011035	1					
ANR	5011056	CompoundStatement		5:8:103:142	5011035	1					
ANR	5011057	IdentifierDeclStatement	gx_clip_path * pcpath = stack -> clip_path ;	39:8:1108:1147	5011035	0	True				
ANR	5011058	IdentifierDecl	* pcpath = stack -> clip_path		5011035	0					
ANR	5011059	IdentifierDeclType	gx_clip_path *		5011035	0					
ANR	5011060	Identifier	pcpath		5011035	1					
ANR	5011061	AssignmentExpression	* pcpath = stack -> clip_path		5011035	2		=			
ANR	5011062	Identifier	pcpath		5011035	0					
ANR	5011063	PtrMemberAccess	stack -> clip_path		5011035	1					
ANR	5011064	Identifier	stack		5011035	0					
ANR	5011065	Identifier	clip_path		5011035	1					
ANR	5011066	ExpressionStatement	"gs_free_object ( stack -> rc . memory , stack , cname )"	41:8:1158:1204	5011035	1	True				
ANR	5011067	CallExpression	"gs_free_object ( stack -> rc . memory , stack , cname )"		5011035	0					
ANR	5011068	Callee	gs_free_object		5011035	0					
ANR	5011069	Identifier	gs_free_object		5011035	0					
ANR	5011070	ArgumentList	stack -> rc . memory		5011035	1					
ANR	5011071	Argument	stack -> rc . memory		5011035	0					
ANR	5011072	MemberAccess	stack -> rc . memory		5011035	0					
ANR	5011073	PtrMemberAccess	stack -> rc		5011035	0					
ANR	5011074	Identifier	stack		5011035	0					
ANR	5011075	Identifier	rc		5011035	1					
ANR	5011076	Identifier	memory		5011035	1					
ANR	5011077	Argument	stack		5011035	1					
ANR	5011078	Identifier	stack		5011035	0					
ANR	5011079	Argument	cname		5011035	2					
ANR	5011080	Identifier	cname		5011035	0					
ANR	5011081	ExpressionStatement	"gx_cpath_free ( pcpath , ""rc_free_clip_stack"" )"	42:8:1214:1257	5011035	2	True				
ANR	5011082	CallExpression	"gx_cpath_free ( pcpath , ""rc_free_clip_stack"" )"		5011035	0					
ANR	5011083	Callee	gx_cpath_free		5011035	0					
ANR	5011084	Identifier	gx_cpath_free		5011035	0					
ANR	5011085	ArgumentList	pcpath		5011035	1					
ANR	5011086	Argument	pcpath		5011035	0					
ANR	5011087	Identifier	pcpath		5011035	0					
ANR	5011088	Argument	"""rc_free_clip_stack"""		5011035	1					
ANR	5011089	PrimaryExpression	"""rc_free_clip_stack"""		5011035	0					
ANR	5011090	ReturnType	static void		5011035	1					
ANR	5011091	Identifier	rc_free_clip_stack		5011035	2					
ANR	5011092	ParameterList	"gs_memory_t * mem , void * vstack , client_name_t cname"		5011035	3					
ANR	5011093	Parameter	gs_memory_t * mem	34:19:950:966	5011035	0	True				
ANR	5011094	ParameterType	gs_memory_t *		5011035	0					
ANR	5011095	Identifier	mem		5011035	1					
ANR	5011096	Parameter	void * vstack	34:38:969:980	5011035	1	True				
ANR	5011097	ParameterType	void *		5011035	0					
ANR	5011098	Identifier	vstack		5011035	1					
ANR	5011099	Parameter	client_name_t cname	34:52:983:1001	5011035	2	True				
ANR	5011100	ParameterType	client_name_t		5011035	0					
ANR	5011101	Identifier	cname		5011035	1					
ANR	5011102	CFGEntryNode	ENTRY		5011035		True				
ANR	5011103	CFGExitNode	EXIT		5011035		True				
ANR	5011104	Symbol	stack		5011035						
ANR	5011105	Symbol	mem		5011035						
ANR	5011106	Symbol	vstack		5011035						
ANR	5011107	Symbol	stack -> rc . memory		5011035						
ANR	5011108	Symbol	cname		5011035						
ANR	5011109	Symbol	* stack		5011035						
ANR	5011110	Symbol	stack -> rc		5011035						
ANR	5011111	Symbol	stack -> rc . ref_count		5011035						
ANR	5011112	Symbol	stack -> clip_path		5011035						
ANR	5011113	Symbol	pcpath		5011035						
ANR	5011114	Function	gs_clipsave	47:0:1283:1955							
ANR	5011115	FunctionDef	gs_clipsave (gs_gstate * pgs)		5011114	0					
ANR	5011116	CompoundStatement		49:0:1315:1955	5011114	0					
ANR	5011117	IdentifierDeclStatement	gs_memory_t * mem = pgs -> memory ;	50:4:1321:1351	5011114	0	True				
ANR	5011118	IdentifierDecl	* mem = pgs -> memory		5011114	0					
ANR	5011119	IdentifierDeclType	gs_memory_t *		5011114	0					
ANR	5011120	Identifier	mem		5011114	1					
ANR	5011121	AssignmentExpression	* mem = pgs -> memory		5011114	2		=			
ANR	5011122	Identifier	mem		5011114	0					
ANR	5011123	PtrMemberAccess	pgs -> memory		5011114	1					
ANR	5011124	Identifier	pgs		5011114	0					
ANR	5011125	Identifier	memory		5011114	1					
ANR	5011126	IdentifierDeclStatement	"gx_clip_path * copy = gx_cpath_alloc_shared ( pgs -> clip_path , mem , ""gs_clipsave(clip_path)"" ) ;"	51:4:1357:1454	5011114	1	True				
ANR	5011127	IdentifierDecl	"* copy = gx_cpath_alloc_shared ( pgs -> clip_path , mem , ""gs_clipsave(clip_path)"" )"		5011114	0					
ANR	5011128	IdentifierDeclType	gx_clip_path *		5011114	0					
ANR	5011129	Identifier	copy		5011114	1					
ANR	5011130	AssignmentExpression	"* copy = gx_cpath_alloc_shared ( pgs -> clip_path , mem , ""gs_clipsave(clip_path)"" )"		5011114	2		=			
ANR	5011131	Identifier	copy		5011114	0					
ANR	5011132	CallExpression	"gx_cpath_alloc_shared ( pgs -> clip_path , mem , ""gs_clipsave(clip_path)"" )"		5011114	1					
ANR	5011133	Callee	gx_cpath_alloc_shared		5011114	0					
ANR	5011134	Identifier	gx_cpath_alloc_shared		5011114	0					
ANR	5011135	ArgumentList	pgs -> clip_path		5011114	1					
ANR	5011136	Argument	pgs -> clip_path		5011114	0					
ANR	5011137	PtrMemberAccess	pgs -> clip_path		5011114	0					
ANR	5011138	Identifier	pgs		5011114	0					
ANR	5011139	Identifier	clip_path		5011114	1					
ANR	5011140	Argument	mem		5011114	1					
ANR	5011141	Identifier	mem		5011114	0					
ANR	5011142	Argument	"""gs_clipsave(clip_path)"""		5011114	2					
ANR	5011143	PrimaryExpression	"""gs_clipsave(clip_path)"""		5011114	0					
ANR	5011144	IdentifierDeclStatement	"gx_clip_stack_t * stack = gs_alloc_struct ( mem , gx_clip_stack_t , & st_clip_stack , ""gs_clipsave(stack)"" ) ;"	53:4:1460:1592	5011114	2	True				
ANR	5011145	IdentifierDecl	"* stack = gs_alloc_struct ( mem , gx_clip_stack_t , & st_clip_stack , ""gs_clipsave(stack)"" )"		5011114	0					
ANR	5011146	IdentifierDeclType	gx_clip_stack_t *		5011114	0					
ANR	5011147	Identifier	stack		5011114	1					
ANR	5011148	AssignmentExpression	"* stack = gs_alloc_struct ( mem , gx_clip_stack_t , & st_clip_stack , ""gs_clipsave(stack)"" )"		5011114	2		=			
ANR	5011149	Identifier	stack		5011114	0					
ANR	5011150	CallExpression	"gs_alloc_struct ( mem , gx_clip_stack_t , & st_clip_stack , ""gs_clipsave(stack)"" )"		5011114	1					
ANR	5011151	Callee	gs_alloc_struct		5011114	0					
ANR	5011152	Identifier	gs_alloc_struct		5011114	0					
ANR	5011153	ArgumentList	mem		5011114	1					
ANR	5011154	Argument	mem		5011114	0					
ANR	5011155	Identifier	mem		5011114	0					
ANR	5011156	Argument	gx_clip_stack_t		5011114	1					
ANR	5011157	Identifier	gx_clip_stack_t		5011114	0					
ANR	5011158	Argument	& st_clip_stack		5011114	2					
ANR	5011159	UnaryOperationExpression	& st_clip_stack		5011114	0					
ANR	5011160	UnaryOperator	&		5011114	0					
ANR	5011161	Identifier	st_clip_stack		5011114	1					
ANR	5011162	Argument	"""gs_clipsave(stack)"""		5011114	3					
ANR	5011163	PrimaryExpression	"""gs_clipsave(stack)"""		5011114	0					
ANR	5011164	IfStatement	if ( copy == 0 || stack == 0 )		5011114	3					
ANR	5011165	Condition	copy == 0 || stack == 0	57:8:1603:1625	5011114	0	True				
ANR	5011166	OrExpression	copy == 0 || stack == 0		5011114	0		||			
ANR	5011167	EqualityExpression	copy == 0		5011114	0		==			
ANR	5011168	Identifier	copy		5011114	0					
ANR	5011169	PrimaryExpression	0		5011114	1					
ANR	5011170	EqualityExpression	stack == 0		5011114	1		==			
ANR	5011171	Identifier	stack		5011114	0					
ANR	5011172	PrimaryExpression	0		5011114	1					
ANR	5011173	CompoundStatement		9:33:312:312	5011114	1					
ANR	5011174	ExpressionStatement	"gs_free_object ( mem , stack , ""gs_clipsave(stack)"" )"	58:8:1638:1686	5011114	0	True				
ANR	5011175	CallExpression	"gs_free_object ( mem , stack , ""gs_clipsave(stack)"" )"		5011114	0					
ANR	5011176	Callee	gs_free_object		5011114	0					
ANR	5011177	Identifier	gs_free_object		5011114	0					
ANR	5011178	ArgumentList	mem		5011114	1					
ANR	5011179	Argument	mem		5011114	0					
ANR	5011180	Identifier	mem		5011114	0					
ANR	5011181	Argument	stack		5011114	1					
ANR	5011182	Identifier	stack		5011114	0					
ANR	5011183	Argument	"""gs_clipsave(stack)"""		5011114	2					
ANR	5011184	PrimaryExpression	"""gs_clipsave(stack)"""		5011114	0					
ANR	5011185	ExpressionStatement	"gs_free_object ( mem , copy , ""gs_clipsave(clip_path)"" )"	59:8:1696:1747	5011114	1	True				
ANR	5011186	CallExpression	"gs_free_object ( mem , copy , ""gs_clipsave(clip_path)"" )"		5011114	0					
ANR	5011187	Callee	gs_free_object		5011114	0					
ANR	5011188	Identifier	gs_free_object		5011114	0					
ANR	5011189	ArgumentList	mem		5011114	1					
ANR	5011190	Argument	mem		5011114	0					
ANR	5011191	Identifier	mem		5011114	0					
ANR	5011192	Argument	copy		5011114	1					
ANR	5011193	Identifier	copy		5011114	0					
ANR	5011194	Argument	"""gs_clipsave(clip_path)"""		5011114	2					
ANR	5011195	PrimaryExpression	"""gs_clipsave(clip_path)"""		5011114	0					
ANR	5011196	ExpressionStatement	return_error ( gs_error_VMerror )	60:8:1757:1787	5011114	2	True				
ANR	5011197	CallExpression	return_error ( gs_error_VMerror )		5011114	0					
ANR	5011198	Callee	return_error		5011114	0					
ANR	5011199	Identifier	return_error		5011114	0					
ANR	5011200	ArgumentList	gs_error_VMerror		5011114	1					
ANR	5011201	Argument	gs_error_VMerror		5011114	0					
ANR	5011202	Identifier	gs_error_VMerror		5011114	0					
ANR	5011203	ExpressionStatement	"rc_init_free ( stack , mem , 1 , rc_free_clip_stack )"	62:4:1799:1846	5011114	4	True				
ANR	5011204	CallExpression	"rc_init_free ( stack , mem , 1 , rc_free_clip_stack )"		5011114	0					
ANR	5011205	Callee	rc_init_free		5011114	0					
ANR	5011206	Identifier	rc_init_free		5011114	0					
ANR	5011207	ArgumentList	stack		5011114	1					
ANR	5011208	Argument	stack		5011114	0					
ANR	5011209	Identifier	stack		5011114	0					
ANR	5011210	Argument	mem		5011114	1					
ANR	5011211	Identifier	mem		5011114	0					
ANR	5011212	Argument	1		5011114	2					
ANR	5011213	PrimaryExpression	1		5011114	0					
ANR	5011214	Argument	rc_free_clip_stack		5011114	3					
ANR	5011215	Identifier	rc_free_clip_stack		5011114	0					
ANR	5011216	ExpressionStatement	stack -> clip_path = copy	63:4:1852:1875	5011114	5	True				
ANR	5011217	AssignmentExpression	stack -> clip_path = copy		5011114	0		=			
ANR	5011218	PtrMemberAccess	stack -> clip_path		5011114	0					
ANR	5011219	Identifier	stack		5011114	0					
ANR	5011220	Identifier	clip_path		5011114	1					
ANR	5011221	Identifier	copy		5011114	1					
ANR	5011222	ExpressionStatement	stack -> next = pgs -> clip_stack	64:4:1881:1910	5011114	6	True				
ANR	5011223	AssignmentExpression	stack -> next = pgs -> clip_stack		5011114	0		=			
ANR	5011224	PtrMemberAccess	stack -> next		5011114	0					
ANR	5011225	Identifier	stack		5011114	0					
ANR	5011226	Identifier	next		5011114	1					
ANR	5011227	PtrMemberAccess	pgs -> clip_stack		5011114	1					
ANR	5011228	Identifier	pgs		5011114	0					
ANR	5011229	Identifier	clip_stack		5011114	1					
ANR	5011230	ExpressionStatement	pgs -> clip_stack = stack	65:4:1916:1939	5011114	7	True				
ANR	5011231	AssignmentExpression	pgs -> clip_stack = stack		5011114	0		=			
ANR	5011232	PtrMemberAccess	pgs -> clip_stack		5011114	0					
ANR	5011233	Identifier	pgs		5011114	0					
ANR	5011234	Identifier	clip_stack		5011114	1					
ANR	5011235	Identifier	stack		5011114	1					
ANR	5011236	ReturnStatement	return 0 ;	66:4:1945:1953	5011114	8	True				
ANR	5011237	PrimaryExpression	0		5011114	0					
ANR	5011238	ReturnType	int		5011114	1					
ANR	5011239	Identifier	gs_clipsave		5011114	2					
ANR	5011240	ParameterList	gs_gstate * pgs		5011114	3					
ANR	5011241	Parameter	gs_gstate * pgs	48:12:1299:1312	5011114	0	True				
ANR	5011242	ParameterType	gs_gstate *		5011114	0					
ANR	5011243	Identifier	pgs		5011114	1					
ANR	5011244	CFGEntryNode	ENTRY		5011114		True				
ANR	5011245	CFGExitNode	EXIT		5011114		True				
ANR	5011246	Symbol	stack		5011114						
ANR	5011247	Symbol	* pgs		5011114						
ANR	5011248	Symbol	gs_alloc_struct		5011114						
ANR	5011249	Symbol	stack -> clip_path		5011114						
ANR	5011250	Symbol	stack -> next		5011114						
ANR	5011251	Symbol	pgs -> clip_path		5011114						
ANR	5011252	Symbol	gs_error_VMerror		5011114						
ANR	5011253	Symbol	gx_clip_stack_t		5011114						
ANR	5011254	Symbol	mem		5011114						
ANR	5011255	Symbol	pgs -> clip_stack		5011114						
ANR	5011256	Symbol	gx_cpath_alloc_shared		5011114						
ANR	5011257	Symbol	* stack		5011114						
ANR	5011258	Symbol	copy		5011114						
ANR	5011259	Symbol	& st_clip_stack		5011114						
ANR	5011260	Symbol	pgs		5011114						
ANR	5011261	Symbol	pgs -> memory		5011114						
ANR	5011262	Symbol	rc_free_clip_stack		5011114						
ANR	5011263	Function	gs_cliprestore	70:0:1976:2766							
ANR	5011264	FunctionDef	gs_cliprestore (gs_gstate * pgs)		5011263	0					
ANR	5011265	CompoundStatement		72:0:2011:2766	5011263	0					
ANR	5011266	IdentifierDeclStatement	gx_clip_stack_t * stack = pgs -> clip_stack ;	73:4:2017:2057	5011263	0	True				
ANR	5011267	IdentifierDecl	* stack = pgs -> clip_stack		5011263	0					
ANR	5011268	IdentifierDeclType	gx_clip_stack_t *		5011263	0					
ANR	5011269	Identifier	stack		5011263	1					
ANR	5011270	AssignmentExpression	* stack = pgs -> clip_stack		5011263	2		=			
ANR	5011271	Identifier	stack		5011263	0					
ANR	5011272	PtrMemberAccess	pgs -> clip_stack		5011263	1					
ANR	5011273	Identifier	pgs		5011263	0					
ANR	5011274	Identifier	clip_stack		5011263	1					
ANR	5011275	IfStatement	if ( stack )		5011263	1					
ANR	5011276	Condition	stack	75:8:2068:2072	5011263	0	True				
ANR	5011277	Identifier	stack		5011263	0					
ANR	5011278	CompoundStatement		7:8:167:175	5011263	1					
ANR	5011279	IdentifierDeclStatement	gx_clip_stack_t * next = stack -> next ;	76:8:2085:2120	5011263	0	True				
ANR	5011280	IdentifierDecl	* next = stack -> next		5011263	0					
ANR	5011281	IdentifierDeclType	gx_clip_stack_t *		5011263	0					
ANR	5011282	Identifier	next		5011263	1					
ANR	5011283	AssignmentExpression	* next = stack -> next		5011263	2		=			
ANR	5011284	Identifier	next		5011263	0					
ANR	5011285	PtrMemberAccess	stack -> next		5011263	1					
ANR	5011286	Identifier	stack		5011263	0					
ANR	5011287	Identifier	next		5011263	1					
ANR	5011288	IdentifierDeclStatement	gx_clip_path * pcpath = stack -> clip_path ;	77:8:2130:2169	5011263	1	True				
ANR	5011289	IdentifierDecl	* pcpath = stack -> clip_path		5011263	0					
ANR	5011290	IdentifierDeclType	gx_clip_path *		5011263	0					
ANR	5011291	Identifier	pcpath		5011263	1					
ANR	5011292	AssignmentExpression	* pcpath = stack -> clip_path		5011263	2		=			
ANR	5011293	Identifier	pcpath		5011263	0					
ANR	5011294	PtrMemberAccess	stack -> clip_path		5011263	1					
ANR	5011295	Identifier	stack		5011263	0					
ANR	5011296	Identifier	clip_path		5011263	1					
ANR	5011297	IdentifierDeclStatement	int code ;	78:8:2179:2187	5011263	2	True				
ANR	5011298	IdentifierDecl	code		5011263	0					
ANR	5011299	IdentifierDeclType	int		5011263	0					
ANR	5011300	Identifier	code		5011263	1					
ANR	5011301	IfStatement	if ( stack -> rc . ref_count == 1 )		5011263	3					
ANR	5011302	Condition	stack -> rc . ref_count == 1	80:12:2202:2225	5011263	0	True				
ANR	5011303	EqualityExpression	stack -> rc . ref_count == 1		5011263	0		==			
ANR	5011304	MemberAccess	stack -> rc . ref_count		5011263	0					
ANR	5011305	PtrMemberAccess	stack -> rc		5011263	0					
ANR	5011306	Identifier	stack		5011263	0					
ANR	5011307	Identifier	rc		5011263	1					
ANR	5011308	Identifier	ref_count		5011263	1					
ANR	5011309	PrimaryExpression	1		5011263	1					
ANR	5011310	CompoundStatement		9:38:216:216	5011263	1					
ANR	5011311	ExpressionStatement	"gs_free_object ( stack -> rc . memory , stack , ""cliprestore"" )"	82:12:2305:2359	5011263	0	True				
ANR	5011312	CallExpression	"gs_free_object ( stack -> rc . memory , stack , ""cliprestore"" )"		5011263	0					
ANR	5011313	Callee	gs_free_object		5011263	0					
ANR	5011314	Identifier	gs_free_object		5011263	0					
ANR	5011315	ArgumentList	stack -> rc . memory		5011263	1					
ANR	5011316	Argument	stack -> rc . memory		5011263	0					
ANR	5011317	MemberAccess	stack -> rc . memory		5011263	0					
ANR	5011318	PtrMemberAccess	stack -> rc		5011263	0					
ANR	5011319	Identifier	stack		5011263	0					
ANR	5011320	Identifier	rc		5011263	1					
ANR	5011321	Identifier	memory		5011263	1					
ANR	5011322	Argument	stack		5011263	1					
ANR	5011323	Identifier	stack		5011263	0					
ANR	5011324	Argument	"""cliprestore"""		5011263	2					
ANR	5011325	PrimaryExpression	"""cliprestore"""		5011263	0					
ANR	5011326	ExpressionStatement	"code = gx_cpath_assign_free ( pgs -> clip_path , pcpath )"	83:12:2373:2424	5011263	1	True				
ANR	5011327	AssignmentExpression	"code = gx_cpath_assign_free ( pgs -> clip_path , pcpath )"		5011263	0		=			
ANR	5011328	Identifier	code		5011263	0					
ANR	5011329	CallExpression	"gx_cpath_assign_free ( pgs -> clip_path , pcpath )"		5011263	1					
ANR	5011330	Callee	gx_cpath_assign_free		5011263	0					
ANR	5011331	Identifier	gx_cpath_assign_free		5011263	0					
ANR	5011332	ArgumentList	pgs -> clip_path		5011263	1					
ANR	5011333	Argument	pgs -> clip_path		5011263	0					
ANR	5011334	PtrMemberAccess	pgs -> clip_path		5011263	0					
ANR	5011335	Identifier	pgs		5011263	0					
ANR	5011336	Identifier	clip_path		5011263	1					
ANR	5011337	Argument	pcpath		5011263	1					
ANR	5011338	Identifier	pcpath		5011263	0					
ANR	5011339	ElseStatement	else		5011263	0					
ANR	5011340	CompoundStatement		13:15:429:429	5011263	0					
ANR	5011341	ExpressionStatement	"code = gx_cpath_assign_preserve ( pgs -> clip_path , pcpath )"	85:12:2455:2510	5011263	0	True				
ANR	5011342	AssignmentExpression	"code = gx_cpath_assign_preserve ( pgs -> clip_path , pcpath )"		5011263	0		=			
ANR	5011343	Identifier	code		5011263	0					
ANR	5011344	CallExpression	"gx_cpath_assign_preserve ( pgs -> clip_path , pcpath )"		5011263	1					
ANR	5011345	Callee	gx_cpath_assign_preserve		5011263	0					
ANR	5011346	Identifier	gx_cpath_assign_preserve		5011263	0					
ANR	5011347	ArgumentList	pgs -> clip_path		5011263	1					
ANR	5011348	Argument	pgs -> clip_path		5011263	0					
ANR	5011349	PtrMemberAccess	pgs -> clip_path		5011263	0					
ANR	5011350	Identifier	pgs		5011263	0					
ANR	5011351	Identifier	clip_path		5011263	1					
ANR	5011352	Argument	pcpath		5011263	1					
ANR	5011353	Identifier	pcpath		5011263	0					
ANR	5011354	IfStatement	if ( code < 0 )		5011263	1					
ANR	5011355	Condition	code < 0	86:16:2528:2535	5011263	0	True				
ANR	5011356	RelationalExpression	code < 0		5011263	0		<			
ANR	5011357	Identifier	code		5011263	0					
ANR	5011358	PrimaryExpression	0		5011263	1					
ANR	5011359	ReturnStatement	return code ;	87:16:2554:2565	5011263	1	True				
ANR	5011360	Identifier	code		5011263	0					
ANR	5011361	ExpressionStatement	-- ( stack -> rc . ref_count )	88:12:2579:2602	5011263	2	True				
ANR	5011362	UnaryExpression	-- ( stack -> rc . ref_count )		5011263	0					
ANR	5011363	IncDec	--		5011263	0					
ANR	5011364	MemberAccess	stack -> rc . ref_count		5011263	1					
ANR	5011365	PtrMemberAccess	stack -> rc		5011263	0					
ANR	5011366	Identifier	stack		5011263	0					
ANR	5011367	Identifier	rc		5011263	1					
ANR	5011368	Identifier	ref_count		5011263	1					
ANR	5011369	ExpressionStatement	pgs -> clip_stack = next	90:8:2622:2644	5011263	4	True				
ANR	5011370	AssignmentExpression	pgs -> clip_stack = next		5011263	0		=			
ANR	5011371	PtrMemberAccess	pgs -> clip_stack		5011263	0					
ANR	5011372	Identifier	pgs		5011263	0					
ANR	5011373	Identifier	clip_stack		5011263	1					
ANR	5011374	Identifier	next		5011263	1					
ANR	5011375	ReturnStatement	return code ;	91:8:2654:2665	5011263	5	True				
ANR	5011376	Identifier	code		5011263	0					
ANR	5011377	ElseStatement	else		5011263	0					
ANR	5011378	CompoundStatement		21:11:666:666	5011263	0					
ANR	5011379	ReturnStatement	"return gx_cpath_assign_preserve ( pgs -> clip_path , pgs -> saved -> clip_path ) ;"	93:8:2688:2758	5011263	0	True				
ANR	5011380	CallExpression	"gx_cpath_assign_preserve ( pgs -> clip_path , pgs -> saved -> clip_path )"		5011263	0					
ANR	5011381	Callee	gx_cpath_assign_preserve		5011263	0					
ANR	5011382	Identifier	gx_cpath_assign_preserve		5011263	0					
ANR	5011383	ArgumentList	pgs -> clip_path		5011263	1					
ANR	5011384	Argument	pgs -> clip_path		5011263	0					
ANR	5011385	PtrMemberAccess	pgs -> clip_path		5011263	0					
ANR	5011386	Identifier	pgs		5011263	0					
ANR	5011387	Identifier	clip_path		5011263	1					
ANR	5011388	Argument	pgs -> saved -> clip_path		5011263	1					
ANR	5011389	PtrMemberAccess	pgs -> saved -> clip_path		5011263	0					
ANR	5011390	PtrMemberAccess	pgs -> saved		5011263	0					
ANR	5011391	Identifier	pgs		5011263	0					
ANR	5011392	Identifier	saved		5011263	1					
ANR	5011393	Identifier	clip_path		5011263	1					
ANR	5011394	ReturnType	int		5011263	1					
ANR	5011395	Identifier	gs_cliprestore		5011263	2					
ANR	5011396	ParameterList	gs_gstate * pgs		5011263	3					
ANR	5011397	Parameter	gs_gstate * pgs	71:15:1995:2008	5011263	0	True				
ANR	5011398	ParameterType	gs_gstate *		5011263	0					
ANR	5011399	Identifier	pgs		5011263	1					
ANR	5011400	CFGEntryNode	ENTRY		5011263		True				
ANR	5011401	CFGExitNode	EXIT		5011263		True				
ANR	5011402	Symbol	next		5011263						
ANR	5011403	Symbol	pgs -> saved		5011263						
ANR	5011404	Symbol	stack		5011263						
ANR	5011405	Symbol	code		5011263						
ANR	5011406	Symbol	* pgs		5011263						
ANR	5011407	Symbol	gx_cpath_assign_preserve		5011263						
ANR	5011408	Symbol	stack -> clip_path		5011263						
ANR	5011409	Symbol	stack -> rc . ref_count		5011263						
ANR	5011410	Symbol	stack -> next		5011263						
ANR	5011411	Symbol	* * pgs		5011263						
ANR	5011412	Symbol	pgs -> clip_path		5011263						
ANR	5011413	Symbol	* pgs -> saved		5011263						
ANR	5011414	Symbol	pgs -> clip_stack		5011263						
ANR	5011415	Symbol	stack -> rc . memory		5011263						
ANR	5011416	Symbol	* stack		5011263						
ANR	5011417	Symbol	stack -> rc		5011263						
ANR	5011418	Symbol	pgs		5011263						
ANR	5011419	Symbol	gx_cpath_assign_free		5011263						
ANR	5011420	Symbol	pcpath		5011263						
ANR	5011421	Symbol	pgs -> saved -> clip_path		5011263						
