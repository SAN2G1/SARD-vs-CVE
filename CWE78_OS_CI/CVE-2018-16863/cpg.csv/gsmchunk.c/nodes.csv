command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5227176	File	data/converged/CVE-2018-16863_ghostpdl/gsmchunk.c								
ANR	5227177	Function	gs_chunk_assert	65:0:1824:2020							
ANR	5227178	FunctionDef	"gs_chunk_assert (gs_memory_t * m , int v , const char * s)"		5227177	0					
ANR	5227179	CompoundStatement		66:0:1890:2020	5227177	0					
ANR	5227180	IdentifierDeclStatement	void ( * crash ) ( void ) ;	67:4:1896:1915	5227177	0	True				
ANR	5227181	IdentifierDecl	( * crash ) ( void )		5227177	0					
ANR	5227182	IdentifierDeclType	void ( * ) ( void )		5227177	0					
ANR	5227183	Identifier	crash		5227177	1					
ANR	5227184	IfStatement	if ( v )		5227177	1					
ANR	5227185	Condition	v	68:8:1925:1925	5227177	0	True				
ANR	5227186	Identifier	v		5227177	0					
ANR	5227187	ReturnStatement	return ;	69:8:1936:1942	5227177	1	True				
ANR	5227188	ExpressionStatement	"dmlprintf1 ( m , ""Assert failed: %s\\n"" , s )"	70:4:1948:1987	5227177	2	True				
ANR	5227189	CallExpression	"dmlprintf1 ( m , ""Assert failed: %s\\n"" , s )"		5227177	0					
ANR	5227190	Callee	dmlprintf1		5227177	0					
ANR	5227191	Identifier	dmlprintf1		5227177	0					
ANR	5227192	ArgumentList	m		5227177	1					
ANR	5227193	Argument	m		5227177	0					
ANR	5227194	Identifier	m		5227177	0					
ANR	5227195	Argument	"""Assert failed: %s\\n"""		5227177	1					
ANR	5227196	PrimaryExpression	"""Assert failed: %s\\n"""		5227177	0					
ANR	5227197	Argument	s		5227177	2					
ANR	5227198	Identifier	s		5227177	0					
ANR	5227199	ExpressionStatement	crash = NULL	71:4:1993:2005	5227177	3	True				
ANR	5227200	AssignmentExpression	crash = NULL		5227177	0		=			
ANR	5227201	Identifier	crash		5227177	0					
ANR	5227202	Identifier	NULL		5227177	1					
ANR	5227203	ExpressionStatement	crash ( )	72:4:2011:2018	5227177	4	True				
ANR	5227204	CallExpression	crash ( )		5227177	0					
ANR	5227205	Callee	crash		5227177	0					
ANR	5227206	Identifier	crash		5227177	0					
ANR	5227207	ArgumentList			5227177	1					
ANR	5227208	ReturnType	static void		5227177	1					
ANR	5227209	Identifier	gs_chunk_assert		5227177	2					
ANR	5227210	ParameterList	"gs_memory_t * m , int v , const char * s"		5227177	3					
ANR	5227211	Parameter	gs_memory_t * m	65:28:1852:1865	5227177	0	True				
ANR	5227212	ParameterType	gs_memory_t *		5227177	0					
ANR	5227213	Identifier	m		5227177	1					
ANR	5227214	Parameter	int v	65:44:1868:1872	5227177	1	True				
ANR	5227215	ParameterType	int		5227177	0					
ANR	5227216	Identifier	v		5227177	1					
ANR	5227217	Parameter	const char * s	65:51:1875:1887	5227177	2	True				
ANR	5227218	ParameterType	const char *		5227177	0					
ANR	5227219	Identifier	s		5227177	1					
ANR	5227220	CFGEntryNode	ENTRY		5227177		True				
ANR	5227221	CFGExitNode	EXIT		5227177		True				
ANR	5227222	Symbol	s		5227177						
ANR	5227223	Symbol	NULL		5227177						
ANR	5227224	Symbol	v		5227177						
ANR	5227225	Symbol	m		5227177						
ANR	5227226	Symbol	crash		5227177						
ANR	5227227	DeclStmt									
ANR	5227228	Decl							const gs_memory_procs_t	const gs_memory_procs_t	chunk_procs
ANR	5227229	ClassDef	chunk_obj_node_s	138:8:4391:4653							
ANR	5227230	DeclStmt									
ANR	5227231	Decl							gs_memory_type_ptr_t	gs_memory_type_ptr_t	type
ANR	5227232	DeclStmt									
ANR	5227233	Decl							unsigned int	unsigned int	sequence
ANR	5227234	DeclStmt									
ANR	5227235	Decl							struct chunk_obj_node_s	struct chunk_obj_node_s *	defer_next
ANR	5227236	DeclStmt									
ANR	5227237	Decl							uint	uint	size
ANR	5227238	DeclStmt									
ANR	5227239	Decl							uint	uint	padding
ANR	5227240	DeclStmt									
ANR	5227241	Decl							chunk_obj_node_s	chunk_obj_node_s	chunk_obj_node_t
ANR	5227242	ClassDef	chunk_free_node_s	148:8:4664:4942							
ANR	5227243	DeclStmt									
ANR	5227244	Decl							struct chunk_free_node_s	struct chunk_free_node_s *	left_loc
ANR	5227245	DeclStmt									
ANR	5227246	Decl							struct chunk_free_node_s	struct chunk_free_node_s *	right_loc
ANR	5227247	DeclStmt									
ANR	5227248	Decl							struct chunk_free_node_s	struct chunk_free_node_s *	left_size
ANR	5227249	DeclStmt									
ANR	5227250	Decl							struct chunk_free_node_s	struct chunk_free_node_s *	right_size
ANR	5227251	DeclStmt									
ANR	5227252	Decl							uint	uint	size
ANR	5227253	DeclStmt									
ANR	5227254	Decl							chunk_free_node_s	chunk_free_node_s	chunk_free_node_t
ANR	5227255	ClassDef	chunk_slab_s	160:8:5097:5164							
ANR	5227256	DeclStmt									
ANR	5227257	Decl							struct chunk_slab_s	struct chunk_slab_s *	next
ANR	5227258	DeclStmt									
ANR	5227259	Decl							chunk_slab_s	chunk_slab_s	chunk_slab_t
ANR	5227260	ClassDef	gs_memory_chunk_s	164:8:5175:5738							
ANR	5227261	DeclStmt									
ANR	5227262	Decl							gs_memory_t	gs_memory_t *	target
ANR	5227263	DeclStmt									
ANR	5227264	Decl							chunk_slab_t	chunk_slab_t *	slabs
ANR	5227265	DeclStmt									
ANR	5227266	Decl							chunk_free_node_t	chunk_free_node_t *	free_size
ANR	5227267	DeclStmt									
ANR	5227268	Decl							chunk_free_node_t	chunk_free_node_t *	free_loc
ANR	5227269	DeclStmt									
ANR	5227270	Decl							chunk_obj_node_t	chunk_obj_node_t *	defer_finalize_list
ANR	5227271	DeclStmt									
ANR	5227272	Decl							chunk_obj_node_t	chunk_obj_node_t *	defer_free_list
ANR	5227273	DeclStmt									
ANR	5227274	Decl							unsigned long	unsigned long	used
ANR	5227275	DeclStmt									
ANR	5227276	Decl							unsigned long	unsigned long	max_used
ANR	5227277	DeclStmt									
ANR	5227278	Decl							unsigned long	unsigned long	total_free
ANR	5227279	DeclStmt									
ANR	5227280	Decl							unsigned int	unsigned int	sequence
ANR	5227281	DeclStmt									
ANR	5227282	Decl							int	int	deferring
ANR	5227283	DeclStmt									
ANR	5227284	Decl							gs_memory_chunk_s	gs_memory_chunk_s	gs_memory_chunk_t
ANR	5227285	Function	gs_memory_chunk_wrap	186:0:5905:7374							
ANR	5227286	FunctionDef	"gs_memory_chunk_wrap (gs_memory_t * * wrapped , gs_memory_t * target)"		5227285	0					
ANR	5227287	CompoundStatement		189:0:6054:7374	5227285	0					
ANR	5227288	IdentifierDeclStatement	gs_memory_t * non_gc_target = target -> non_gc_memory ;	191:4:6110:6166	5227285	0	True				
ANR	5227289	IdentifierDecl	* non_gc_target = target -> non_gc_memory		5227285	0					
ANR	5227290	IdentifierDeclType	gs_memory_t *		5227285	0					
ANR	5227291	Identifier	non_gc_target		5227285	1					
ANR	5227292	AssignmentExpression	* non_gc_target = target -> non_gc_memory		5227285	2		=			
ANR	5227293	Identifier	non_gc_target		5227285	0					
ANR	5227294	PtrMemberAccess	target -> non_gc_memory		5227285	1					
ANR	5227295	Identifier	target		5227285	0					
ANR	5227296	Identifier	non_gc_memory		5227285	1					
ANR	5227297	IdentifierDeclStatement	gs_memory_chunk_t * cmem = NULL ;	192:4:6172:6202	5227285	1	True				
ANR	5227298	IdentifierDecl	* cmem = NULL		5227285	0					
ANR	5227299	IdentifierDeclType	gs_memory_chunk_t *		5227285	0					
ANR	5227300	Identifier	cmem		5227285	1					
ANR	5227301	AssignmentExpression	* cmem = NULL		5227285	2		=			
ANR	5227302	Identifier	NULL		5227285	0					
ANR	5227303	Identifier	NULL		5227285	1					
ANR	5227304	IfStatement	if ( non_gc_target )		5227285	2					
ANR	5227305	Condition	non_gc_target	194:8:6213:6225	5227285	0	True				
ANR	5227306	Identifier	non_gc_target		5227285	0					
ANR	5227307	ExpressionStatement	"cmem = ( gs_memory_chunk_t * ) gs_alloc_bytes_immovable ( non_gc_target , sizeof ( gs_memory_chunk_t ) , ""gs_memory_chunk_wrap"" )"	195:8:6236:6474	5227285	1	True				
ANR	5227308	AssignmentExpression	"cmem = ( gs_memory_chunk_t * ) gs_alloc_bytes_immovable ( non_gc_target , sizeof ( gs_memory_chunk_t ) , ""gs_memory_chunk_wrap"" )"		5227285	0		=			
ANR	5227309	Identifier	cmem		5227285	0					
ANR	5227310	CastExpression	"( gs_memory_chunk_t * ) gs_alloc_bytes_immovable ( non_gc_target , sizeof ( gs_memory_chunk_t ) , ""gs_memory_chunk_wrap"" )"		5227285	1					
ANR	5227311	CastTarget	gs_memory_chunk_t *		5227285	0					
ANR	5227312	CallExpression	"gs_alloc_bytes_immovable ( non_gc_target , sizeof ( gs_memory_chunk_t ) , ""gs_memory_chunk_wrap"" )"		5227285	1					
ANR	5227313	Callee	gs_alloc_bytes_immovable		5227285	0					
ANR	5227314	Identifier	gs_alloc_bytes_immovable		5227285	0					
ANR	5227315	ArgumentList	non_gc_target		5227285	1					
ANR	5227316	Argument	non_gc_target		5227285	0					
ANR	5227317	Identifier	non_gc_target		5227285	0					
ANR	5227318	Argument	sizeof ( gs_memory_chunk_t )		5227285	1					
ANR	5227319	SizeofExpression	sizeof ( gs_memory_chunk_t )		5227285	0					
ANR	5227320	Sizeof	sizeof		5227285	0					
ANR	5227321	SizeofOperand	gs_memory_chunk_t		5227285	1					
ANR	5227322	Argument	"""gs_memory_chunk_wrap"""		5227285	2					
ANR	5227323	PrimaryExpression	"""gs_memory_chunk_wrap"""		5227285	0					
ANR	5227324	IfStatement	if ( cmem == NULL )		5227285	3					
ANR	5227325	Condition	cmem == NULL	198:8:6484:6495	5227285	0	True				
ANR	5227326	EqualityExpression	cmem == NULL		5227285	0		==			
ANR	5227327	Identifier	cmem		5227285	0					
ANR	5227328	Identifier	NULL		5227285	1					
ANR	5227329	CompoundStatement		10:22:443:443	5227285	1					
ANR	5227330	ExpressionStatement	* wrapped = NULL	199:8:6508:6523	5227285	0	True				
ANR	5227331	AssignmentExpression	* wrapped = NULL		5227285	0		=			
ANR	5227332	UnaryOperationExpression	* wrapped		5227285	0					
ANR	5227333	UnaryOperator	*		5227285	0					
ANR	5227334	Identifier	wrapped		5227285	1					
ANR	5227335	Identifier	NULL		5227285	1					
ANR	5227336	ExpressionStatement	return_error ( gs_error_VMerror )	200:8:6533:6563	5227285	1	True				
ANR	5227337	CallExpression	return_error ( gs_error_VMerror )		5227285	0					
ANR	5227338	Callee	return_error		5227285	0					
ANR	5227339	Identifier	return_error		5227285	0					
ANR	5227340	ArgumentList	gs_error_VMerror		5227285	1					
ANR	5227341	Argument	gs_error_VMerror		5227285	0					
ANR	5227342	Identifier	gs_error_VMerror		5227285	0					
ANR	5227343	ExpressionStatement	cmem -> stable_memory = ( gs_memory_t * ) cmem	202:4:6575:6616	5227285	4	True				
ANR	5227344	AssignmentExpression	cmem -> stable_memory = ( gs_memory_t * ) cmem		5227285	0		=			
ANR	5227345	PtrMemberAccess	cmem -> stable_memory		5227285	0					
ANR	5227346	Identifier	cmem		5227285	0					
ANR	5227347	Identifier	stable_memory		5227285	1					
ANR	5227348	CastExpression	( gs_memory_t * ) cmem		5227285	1					
ANR	5227349	CastTarget	gs_memory_t *		5227285	0					
ANR	5227350	Identifier	cmem		5227285	1					
ANR	5227351	ExpressionStatement	cmem -> procs = chunk_procs	203:4:6642:6667	5227285	5	True				
ANR	5227352	AssignmentExpression	cmem -> procs = chunk_procs		5227285	0		=			
ANR	5227353	PtrMemberAccess	cmem -> procs		5227285	0					
ANR	5227354	Identifier	cmem		5227285	0					
ANR	5227355	Identifier	procs		5227285	1					
ANR	5227356	Identifier	chunk_procs		5227285	1					
ANR	5227357	ExpressionStatement	cmem -> gs_lib_ctx = non_gc_target -> gs_lib_ctx	204:4:6673:6717	5227285	6	True				
ANR	5227358	AssignmentExpression	cmem -> gs_lib_ctx = non_gc_target -> gs_lib_ctx		5227285	0		=			
ANR	5227359	PtrMemberAccess	cmem -> gs_lib_ctx		5227285	0					
ANR	5227360	Identifier	cmem		5227285	0					
ANR	5227361	Identifier	gs_lib_ctx		5227285	1					
ANR	5227362	PtrMemberAccess	non_gc_target -> gs_lib_ctx		5227285	1					
ANR	5227363	Identifier	non_gc_target		5227285	0					
ANR	5227364	Identifier	gs_lib_ctx		5227285	1					
ANR	5227365	ExpressionStatement	cmem -> non_gc_memory = ( gs_memory_t * ) cmem	205:4:6723:6764	5227285	7	True				
ANR	5227366	AssignmentExpression	cmem -> non_gc_memory = ( gs_memory_t * ) cmem		5227285	0		=			
ANR	5227367	PtrMemberAccess	cmem -> non_gc_memory		5227285	0					
ANR	5227368	Identifier	cmem		5227285	0					
ANR	5227369	Identifier	non_gc_memory		5227285	1					
ANR	5227370	CastExpression	( gs_memory_t * ) cmem		5227285	1					
ANR	5227371	CastTarget	gs_memory_t *		5227285	0					
ANR	5227372	Identifier	cmem		5227285	1					
ANR	5227373	ExpressionStatement	cmem -> thread_safe_memory = non_gc_target -> thread_safe_memory	206:4:6802:6862	5227285	8	True				
ANR	5227374	AssignmentExpression	cmem -> thread_safe_memory = non_gc_target -> thread_safe_memory		5227285	0		=			
ANR	5227375	PtrMemberAccess	cmem -> thread_safe_memory		5227285	0					
ANR	5227376	Identifier	cmem		5227285	0					
ANR	5227377	Identifier	thread_safe_memory		5227285	1					
ANR	5227378	PtrMemberAccess	non_gc_target -> thread_safe_memory		5227285	1					
ANR	5227379	Identifier	non_gc_target		5227285	0					
ANR	5227380	Identifier	thread_safe_memory		5227285	1					
ANR	5227381	ExpressionStatement	cmem -> target = non_gc_target	207:4:6868:6896	5227285	9	True				
ANR	5227382	AssignmentExpression	cmem -> target = non_gc_target		5227285	0		=			
ANR	5227383	PtrMemberAccess	cmem -> target		5227285	0					
ANR	5227384	Identifier	cmem		5227285	0					
ANR	5227385	Identifier	target		5227285	1					
ANR	5227386	Identifier	non_gc_target		5227285	1					
ANR	5227387	ExpressionStatement	cmem -> slabs = NULL	208:4:6902:6920	5227285	10	True				
ANR	5227388	AssignmentExpression	cmem -> slabs = NULL		5227285	0		=			
ANR	5227389	PtrMemberAccess	cmem -> slabs		5227285	0					
ANR	5227390	Identifier	cmem		5227285	0					
ANR	5227391	Identifier	slabs		5227285	1					
ANR	5227392	Identifier	NULL		5227285	1					
ANR	5227393	ExpressionStatement	cmem -> free_size = NULL	209:4:6926:6948	5227285	11	True				
ANR	5227394	AssignmentExpression	cmem -> free_size = NULL		5227285	0		=			
ANR	5227395	PtrMemberAccess	cmem -> free_size		5227285	0					
ANR	5227396	Identifier	cmem		5227285	0					
ANR	5227397	Identifier	free_size		5227285	1					
ANR	5227398	Identifier	NULL		5227285	1					
ANR	5227399	ExpressionStatement	cmem -> free_loc = NULL	210:4:6954:6975	5227285	12	True				
ANR	5227400	AssignmentExpression	cmem -> free_loc = NULL		5227285	0		=			
ANR	5227401	PtrMemberAccess	cmem -> free_loc		5227285	0					
ANR	5227402	Identifier	cmem		5227285	0					
ANR	5227403	Identifier	free_loc		5227285	1					
ANR	5227404	Identifier	NULL		5227285	1					
ANR	5227405	ExpressionStatement	cmem -> used = 0	211:4:6981:6995	5227285	13	True				
ANR	5227406	AssignmentExpression	cmem -> used = 0		5227285	0		=			
ANR	5227407	PtrMemberAccess	cmem -> used		5227285	0					
ANR	5227408	Identifier	cmem		5227285	0					
ANR	5227409	Identifier	used		5227285	1					
ANR	5227410	PrimaryExpression	0		5227285	1					
ANR	5227411	ExpressionStatement	cmem -> max_used = 0	212:4:7001:7019	5227285	14	True				
ANR	5227412	AssignmentExpression	cmem -> max_used = 0		5227285	0		=			
ANR	5227413	PtrMemberAccess	cmem -> max_used		5227285	0					
ANR	5227414	Identifier	cmem		5227285	0					
ANR	5227415	Identifier	max_used		5227285	1					
ANR	5227416	PrimaryExpression	0		5227285	1					
ANR	5227417	ExpressionStatement	cmem -> total_free = 0	213:4:7025:7045	5227285	15	True				
ANR	5227418	AssignmentExpression	cmem -> total_free = 0		5227285	0		=			
ANR	5227419	PtrMemberAccess	cmem -> total_free		5227285	0					
ANR	5227420	Identifier	cmem		5227285	0					
ANR	5227421	Identifier	total_free		5227285	1					
ANR	5227422	PrimaryExpression	0		5227285	1					
ANR	5227423	ExpressionStatement	cmem -> sequence = 0	215:4:7068:7086	5227285	16	True				
ANR	5227424	AssignmentExpression	cmem -> sequence = 0		5227285	0		=			
ANR	5227425	PtrMemberAccess	cmem -> sequence		5227285	0					
ANR	5227426	Identifier	cmem		5227285	0					
ANR	5227427	Identifier	sequence		5227285	1					
ANR	5227428	PrimaryExpression	0		5227285	1					
ANR	5227429	ExpressionStatement	cmem -> deferring = 0	217:4:7099:7118	5227285	17	True				
ANR	5227430	AssignmentExpression	cmem -> deferring = 0		5227285	0		=			
ANR	5227431	PtrMemberAccess	cmem -> deferring		5227285	0					
ANR	5227432	Identifier	cmem		5227285	0					
ANR	5227433	Identifier	deferring		5227285	1					
ANR	5227434	PrimaryExpression	0		5227285	1					
ANR	5227435	ExpressionStatement	cmem -> defer_finalize_list = NULL	218:4:7124:7156	5227285	18	True				
ANR	5227436	AssignmentExpression	cmem -> defer_finalize_list = NULL		5227285	0		=			
ANR	5227437	PtrMemberAccess	cmem -> defer_finalize_list		5227285	0					
ANR	5227438	Identifier	cmem		5227285	0					
ANR	5227439	Identifier	defer_finalize_list		5227285	1					
ANR	5227440	Identifier	NULL		5227285	1					
ANR	5227441	ExpressionStatement	cmem -> defer_free_list = NULL	219:4:7162:7190	5227285	19	True				
ANR	5227442	AssignmentExpression	cmem -> defer_free_list = NULL		5227285	0		=			
ANR	5227443	PtrMemberAccess	cmem -> defer_free_list		5227285	0					
ANR	5227444	Identifier	cmem		5227285	0					
ANR	5227445	Identifier	defer_free_list		5227285	1					
ANR	5227446	Identifier	NULL		5227285	1					
ANR	5227447	ExpressionStatement	"dmlprintf1 ( non_gc_target , ""New chunk %p\\n"" , cmem )"	222:4:7222:7271	5227285	20	True				
ANR	5227448	CallExpression	"dmlprintf1 ( non_gc_target , ""New chunk %p\\n"" , cmem )"		5227285	0					
ANR	5227449	Callee	dmlprintf1		5227285	0					
ANR	5227450	Identifier	dmlprintf1		5227285	0					
ANR	5227451	ArgumentList	non_gc_target		5227285	1					
ANR	5227452	Argument	non_gc_target		5227285	0					
ANR	5227453	Identifier	non_gc_target		5227285	0					
ANR	5227454	Argument	"""New chunk %p\\n"""		5227285	1					
ANR	5227455	PrimaryExpression	"""New chunk %p\\n"""		5227285	0					
ANR	5227456	Argument	cmem		5227285	2					
ANR	5227457	Identifier	cmem		5227285	0					
ANR	5227458	ExpressionStatement	* wrapped = ( gs_memory_t * ) cmem	226:4:7328:7358	5227285	21	True				
ANR	5227459	AssignmentExpression	* wrapped = ( gs_memory_t * ) cmem		5227285	0		=			
ANR	5227460	UnaryOperationExpression	* wrapped		5227285	0					
ANR	5227461	UnaryOperator	*		5227285	0					
ANR	5227462	Identifier	wrapped		5227285	1					
ANR	5227463	CastExpression	( gs_memory_t * ) cmem		5227285	1					
ANR	5227464	CastTarget	gs_memory_t *		5227285	0					
ANR	5227465	Identifier	cmem		5227285	1					
ANR	5227466	ReturnStatement	return 0 ;	227:4:7364:7372	5227285	22	True				
ANR	5227467	PrimaryExpression	0		5227285	0					
ANR	5227468	ReturnType	int		5227285	1					
ANR	5227469	Identifier	gs_memory_chunk_wrap		5227285	2					
ANR	5227470	ParameterList	"gs_memory_t * * wrapped , gs_memory_t * target"		5227285	3					
ANR	5227471	Parameter	gs_memory_t * * wrapped	187:21:5930:5950	5227285	0	True				
ANR	5227472	ParameterType	gs_memory_t * *		5227285	0					
ANR	5227473	Identifier	wrapped		5227285	1					
ANR	5227474	Parameter	gs_memory_t * target	188:20:6005:6024	5227285	1	True				
ANR	5227475	ParameterType	gs_memory_t *		5227285	0					
ANR	5227476	Identifier	target		5227285	1					
ANR	5227477	CFGEntryNode	ENTRY		5227285		True				
ANR	5227478	CFGExitNode	EXIT		5227285		True				
ANR	5227479	Symbol	non_gc_target		5227285						
ANR	5227480	Symbol	target -> non_gc_memory		5227285						
ANR	5227481	Symbol	cmem -> total_free		5227285						
ANR	5227482	Symbol	cmem -> max_used		5227285						
ANR	5227483	Symbol	cmem -> stable_memory		5227285						
ANR	5227484	Symbol	chunk_procs		5227285						
ANR	5227485	Symbol	cmem -> slabs		5227285						
ANR	5227486	Symbol	cmem -> sequence		5227285						
ANR	5227487	Symbol	cmem -> procs		5227285						
ANR	5227488	Symbol	cmem -> defer_free_list		5227285						
ANR	5227489	Symbol	gs_alloc_bytes_immovable		5227285						
ANR	5227490	Symbol	* cmem		5227285						
ANR	5227491	Symbol	cmem -> gs_lib_ctx		5227285						
ANR	5227492	Symbol	cmem -> deferring		5227285						
ANR	5227493	Symbol	cmem -> target		5227285						
ANR	5227494	Symbol	wrapped		5227285						
ANR	5227495	Symbol	cmem -> free_loc		5227285						
ANR	5227496	Symbol	non_gc_target -> thread_safe_memory		5227285						
ANR	5227497	Symbol	cmem -> defer_finalize_list		5227285						
ANR	5227498	Symbol	NULL		5227285						
ANR	5227499	Symbol	cmem -> used		5227285						
ANR	5227500	Symbol	cmem -> thread_safe_memory		5227285						
ANR	5227501	Symbol	target		5227285						
ANR	5227502	Symbol	* target		5227285						
ANR	5227503	Symbol	gs_error_VMerror		5227285						
ANR	5227504	Symbol	* non_gc_target		5227285						
ANR	5227505	Symbol	cmem -> free_size		5227285						
ANR	5227506	Symbol	* wrapped		5227285						
ANR	5227507	Symbol	cmem -> non_gc_memory		5227285						
ANR	5227508	Symbol	cmem		5227285						
ANR	5227509	Symbol	non_gc_target -> gs_lib_ctx		5227285						
ANR	5227510	Function	gs_memory_chunk_release	232:0:7465:7629							
ANR	5227511	FunctionDef	gs_memory_chunk_release (gs_memory_t * mem)		5227510	0					
ANR	5227512	CompoundStatement		234:0:7512:7629	5227510	0					
ANR	5227513	ExpressionStatement	"gs_memory_free_all ( ( gs_memory_t * ) mem , FREE_ALL_EVERYTHING , ""gs_memory_chunk_release"" )"	235:4:7518:7627	5227510	0	True				
ANR	5227514	CallExpression	"gs_memory_free_all ( ( gs_memory_t * ) mem , FREE_ALL_EVERYTHING , ""gs_memory_chunk_release"" )"		5227510	0					
ANR	5227515	Callee	gs_memory_free_all		5227510	0					
ANR	5227516	Identifier	gs_memory_free_all		5227510	0					
ANR	5227517	ArgumentList	( gs_memory_t * ) mem		5227510	1					
ANR	5227518	Argument	( gs_memory_t * ) mem		5227510	0					
ANR	5227519	CastExpression	( gs_memory_t * ) mem		5227510	0					
ANR	5227520	CastTarget	gs_memory_t *		5227510	0					
ANR	5227521	Identifier	mem		5227510	1					
ANR	5227522	Argument	FREE_ALL_EVERYTHING		5227510	1					
ANR	5227523	Identifier	FREE_ALL_EVERYTHING		5227510	0					
ANR	5227524	Argument	"""gs_memory_chunk_release"""		5227510	2					
ANR	5227525	PrimaryExpression	"""gs_memory_chunk_release"""		5227510	0					
ANR	5227526	ReturnType	void		5227510	1					
ANR	5227527	Identifier	gs_memory_chunk_release		5227510	2					
ANR	5227528	ParameterList	gs_memory_t * mem		5227510	3					
ANR	5227529	Parameter	gs_memory_t * mem	233:24:7494:7509	5227510	0	True				
ANR	5227530	ParameterType	gs_memory_t *		5227510	0					
ANR	5227531	Identifier	mem		5227510	1					
ANR	5227532	CFGEntryNode	ENTRY		5227510		True				
ANR	5227533	CFGExitNode	EXIT		5227510		True				
ANR	5227534	Symbol	mem		5227510						
ANR	5227535	Symbol	FREE_ALL_EVERYTHING		5227510						
ANR	5227536	Function	gs_memory_chunk_unwrap	240:0:7690:8007							
ANR	5227537	FunctionDef	gs_memory_chunk_unwrap (gs_memory_t * mem)		5227536	0					
ANR	5227538	CompoundStatement		242:0:7767:8007	5227536	0					
ANR	5227539	IdentifierDeclStatement	gs_memory_t * tmem ;	243:4:7773:7790	5227536	0	True				
ANR	5227540	IdentifierDecl	* tmem		5227536	0					
ANR	5227541	IdentifierDeclType	gs_memory_t *		5227536	0					
ANR	5227542	Identifier	tmem		5227536	1					
ANR	5227543	IfStatement	if ( mem -> procs . status != chunk_status )		5227536	1					
ANR	5227544	Condition	mem -> procs . status != chunk_status	246:8:7852:7884	5227536	0	True				
ANR	5227545	EqualityExpression	mem -> procs . status != chunk_status		5227536	0		!=			
ANR	5227546	MemberAccess	mem -> procs . status		5227536	0					
ANR	5227547	PtrMemberAccess	mem -> procs		5227536	0					
ANR	5227548	Identifier	mem		5227536	0					
ANR	5227549	Identifier	procs		5227536	1					
ANR	5227550	Identifier	status		5227536	1					
ANR	5227551	Identifier	chunk_status		5227536	1					
ANR	5227552	ReturnStatement	return mem ;	247:8:7895:7905	5227536	1	True				
ANR	5227553	Identifier	mem		5227536	0					
ANR	5227554	ExpressionStatement	tmem = ( ( gs_memory_chunk_t * ) mem ) -> target	249:4:7912:7953	5227536	2	True				
ANR	5227555	AssignmentExpression	tmem = ( ( gs_memory_chunk_t * ) mem ) -> target		5227536	0		=			
ANR	5227556	Identifier	tmem		5227536	0					
ANR	5227557	PtrMemberAccess	( ( gs_memory_chunk_t * ) mem ) -> target		5227536	1					
ANR	5227558	CastExpression	( gs_memory_chunk_t * ) mem		5227536	0					
ANR	5227559	CastTarget	gs_memory_chunk_t *		5227536	0					
ANR	5227560	Identifier	mem		5227536	1					
ANR	5227561	Identifier	target		5227536	1					
ANR	5227562	ExpressionStatement	gs_memory_chunk_release ( mem )	250:4:7959:7987	5227536	3	True				
ANR	5227563	CallExpression	gs_memory_chunk_release ( mem )		5227536	0					
ANR	5227564	Callee	gs_memory_chunk_release		5227536	0					
ANR	5227565	Identifier	gs_memory_chunk_release		5227536	0					
ANR	5227566	ArgumentList	mem		5227536	1					
ANR	5227567	Argument	mem		5227536	0					
ANR	5227568	Identifier	mem		5227536	0					
ANR	5227569	ReturnStatement	return tmem ;	252:4:7994:8005	5227536	4	True				
ANR	5227570	Identifier	tmem		5227536	0					
ANR	5227571	ReturnType	gs_memory_t *		5227536	1					
ANR	5227572	Identifier	gs_memory_chunk_unwrap		5227536	2					
ANR	5227573	ParameterList	gs_memory_t * mem		5227536	3					
ANR	5227574	Parameter	gs_memory_t * mem	241:23:7749:7764	5227536	0	True				
ANR	5227575	ParameterType	gs_memory_t *		5227536	0					
ANR	5227576	Identifier	mem		5227536	1					
ANR	5227577	CFGEntryNode	ENTRY		5227536		True				
ANR	5227578	CFGExitNode	EXIT		5227536		True				
ANR	5227579	Symbol	( ( gs_memory_chunk_t * ) mem ) -> target		5227536						
ANR	5227580	Symbol	mem		5227536						
ANR	5227581	Symbol	mem -> procs . status		5227536						
ANR	5227582	Symbol	tmem		5227536						
ANR	5227583	Symbol	mem -> procs		5227536						
ANR	5227584	Symbol	chunk_status		5227536						
ANR	5227585	Symbol	* mem		5227536						
ANR	5227586	Function	gs_memory_chunk_target	258:0:8091:8235							
ANR	5227587	FunctionDef	gs_memory_chunk_target (const gs_memory_t * mem)		5227586	0					
ANR	5227588	CompoundStatement		260:0:8152:8235	5227586	0					
ANR	5227589	IdentifierDeclStatement	gs_memory_chunk_t * cmem = ( gs_memory_chunk_t * ) mem ;	261:4:8158:8208	5227586	0	True				
ANR	5227590	IdentifierDecl	* cmem = ( gs_memory_chunk_t * ) mem		5227586	0					
ANR	5227591	IdentifierDeclType	gs_memory_chunk_t *		5227586	0					
ANR	5227592	Identifier	cmem		5227586	1					
ANR	5227593	AssignmentExpression	* cmem = ( gs_memory_chunk_t * ) mem		5227586	2		=			
ANR	5227594	Identifier	cmem		5227586	0					
ANR	5227595	CastExpression	( gs_memory_chunk_t * ) mem		5227586	1					
ANR	5227596	CastTarget	gs_memory_chunk_t *		5227586	0					
ANR	5227597	Identifier	mem		5227586	1					
ANR	5227598	ReturnStatement	return cmem -> target ;	262:4:8214:8233	5227586	1	True				
ANR	5227599	PtrMemberAccess	cmem -> target		5227586	0					
ANR	5227600	Identifier	cmem		5227586	0					
ANR	5227601	Identifier	target		5227586	1					
ANR	5227602	ReturnType	gs_memory_t *		5227586	1					
ANR	5227603	Identifier	gs_memory_chunk_target		5227586	2					
ANR	5227604	ParameterList	const gs_memory_t * mem		5227586	3					
ANR	5227605	Parameter	const gs_memory_t * mem	259:23:8128:8149	5227586	0	True				
ANR	5227606	ParameterType	const gs_memory_t *		5227586	0					
ANR	5227607	Identifier	mem		5227586	1					
ANR	5227608	CFGEntryNode	ENTRY		5227586		True				
ANR	5227609	CFGExitNode	EXIT		5227586		True				
ANR	5227610	Symbol	mem		5227586						
ANR	5227611	Symbol	* cmem		5227586						
ANR	5227612	Symbol	cmem -> target		5227586						
ANR	5227613	Symbol	cmem		5227586						
ANR	5227614	Function	chunk_mem_node_free_all_slabs	273:0:8510:8945							
ANR	5227615	FunctionDef	chunk_mem_node_free_all_slabs (gs_memory_chunk_t * cmem)		5227614	0					
ANR	5227616	CompoundStatement		275:0:8577:8945	5227614	0					
ANR	5227617	IdentifierDeclStatement	"chunk_slab_t * slab , * next ;"	276:4:8583:8608	5227614	0	True				
ANR	5227618	IdentifierDecl	* slab		5227614	0					
ANR	5227619	IdentifierDeclType	chunk_slab_t *		5227614	0					
ANR	5227620	Identifier	slab		5227614	1					
ANR	5227621	IdentifierDecl	* next		5227614	1					
ANR	5227622	IdentifierDeclType	chunk_slab_t *		5227614	0					
ANR	5227623	Identifier	next		5227614	1					
ANR	5227624	Statement	gs_memory_t	277:4:8614:8624	5227614	1	True				
ANR	5227625	Statement	*	277:16:8626:8626	5227614	2	True				
ANR	5227626	Statement	const	277:17:8627:8631	5227614	3	True				
ANR	5227627	ExpressionStatement	target = cmem -> target	277:23:8633:8654	5227614	4	True				
ANR	5227628	AssignmentExpression	target = cmem -> target		5227614	0		=			
ANR	5227629	Identifier	target		5227614	0					
ANR	5227630	PtrMemberAccess	cmem -> target		5227614	1					
ANR	5227631	Identifier	cmem		5227614	0					
ANR	5227632	Identifier	target		5227614	1					
ANR	5227633	ForStatement	for ( slab = cmem -> slabs ; slab != NULL ; slab = next )		5227614	5					
ANR	5227634	ForInit	slab = cmem -> slabs ;	279:9:8666:8684	5227614	0	True				
ANR	5227635	AssignmentExpression	slab = cmem -> slabs		5227614	0		=			
ANR	5227636	Identifier	slab		5227614	0					
ANR	5227637	PtrMemberAccess	cmem -> slabs		5227614	1					
ANR	5227638	Identifier	cmem		5227614	0					
ANR	5227639	Identifier	slabs		5227614	1					
ANR	5227640	Condition	slab != NULL	279:29:8686:8697	5227614	1	True				
ANR	5227641	EqualityExpression	slab != NULL		5227614	0		!=			
ANR	5227642	Identifier	slab		5227614	0					
ANR	5227643	Identifier	NULL		5227614	1					
ANR	5227644	AssignmentExpression	slab = next	279:43:8700:8710	5227614	2	True	=			
ANR	5227645	Identifier	slab		5227614	0					
ANR	5227646	Identifier	next		5227614	1					
ANR	5227647	CompoundStatement		5:56:135:135	5227614	3					
ANR	5227648	ExpressionStatement	next = slab -> next	280:8:8723:8740	5227614	0	True				
ANR	5227649	AssignmentExpression	next = slab -> next		5227614	0		=			
ANR	5227650	Identifier	next		5227614	0					
ANR	5227651	PtrMemberAccess	slab -> next		5227614	1					
ANR	5227652	Identifier	slab		5227614	0					
ANR	5227653	Identifier	next		5227614	1					
ANR	5227654	ExpressionStatement	"gs_free_object ( target , slab , ""chunk_mem_node_free_all_slabs"" )"	281:8:8750:8811	5227614	1	True				
ANR	5227655	CallExpression	"gs_free_object ( target , slab , ""chunk_mem_node_free_all_slabs"" )"		5227614	0					
ANR	5227656	Callee	gs_free_object		5227614	0					
ANR	5227657	Identifier	gs_free_object		5227614	0					
ANR	5227658	ArgumentList	target		5227614	1					
ANR	5227659	Argument	target		5227614	0					
ANR	5227660	Identifier	target		5227614	0					
ANR	5227661	Argument	slab		5227614	1					
ANR	5227662	Identifier	slab		5227614	0					
ANR	5227663	Argument	"""chunk_mem_node_free_all_slabs"""		5227614	2					
ANR	5227664	PrimaryExpression	"""chunk_mem_node_free_all_slabs"""		5227614	0					
ANR	5227665	ExpressionStatement	cmem -> slabs = NULL	284:4:8824:8842	5227614	6	True				
ANR	5227666	AssignmentExpression	cmem -> slabs = NULL		5227614	0		=			
ANR	5227667	PtrMemberAccess	cmem -> slabs		5227614	0					
ANR	5227668	Identifier	cmem		5227614	0					
ANR	5227669	Identifier	slabs		5227614	1					
ANR	5227670	Identifier	NULL		5227614	1					
ANR	5227671	ExpressionStatement	cmem -> free_size = NULL	285:4:8848:8870	5227614	7	True				
ANR	5227672	AssignmentExpression	cmem -> free_size = NULL		5227614	0		=			
ANR	5227673	PtrMemberAccess	cmem -> free_size		5227614	0					
ANR	5227674	Identifier	cmem		5227614	0					
ANR	5227675	Identifier	free_size		5227614	1					
ANR	5227676	Identifier	NULL		5227614	1					
ANR	5227677	ExpressionStatement	cmem -> free_loc = NULL	286:4:8876:8897	5227614	8	True				
ANR	5227678	AssignmentExpression	cmem -> free_loc = NULL		5227614	0		=			
ANR	5227679	PtrMemberAccess	cmem -> free_loc		5227614	0					
ANR	5227680	Identifier	cmem		5227614	0					
ANR	5227681	Identifier	free_loc		5227614	1					
ANR	5227682	Identifier	NULL		5227614	1					
ANR	5227683	ExpressionStatement	cmem -> total_free = 0	287:4:8903:8923	5227614	9	True				
ANR	5227684	AssignmentExpression	cmem -> total_free = 0		5227614	0		=			
ANR	5227685	PtrMemberAccess	cmem -> total_free		5227614	0					
ANR	5227686	Identifier	cmem		5227614	0					
ANR	5227687	Identifier	total_free		5227614	1					
ANR	5227688	PrimaryExpression	0		5227614	1					
ANR	5227689	ExpressionStatement	cmem -> used = 0	288:4:8929:8943	5227614	10	True				
ANR	5227690	AssignmentExpression	cmem -> used = 0		5227614	0		=			
ANR	5227691	PtrMemberAccess	cmem -> used		5227614	0					
ANR	5227692	Identifier	cmem		5227614	0					
ANR	5227693	Identifier	used		5227614	1					
ANR	5227694	PrimaryExpression	0		5227614	1					
ANR	5227695	ReturnType	static void		5227614	1					
ANR	5227696	Identifier	chunk_mem_node_free_all_slabs		5227614	2					
ANR	5227697	ParameterList	gs_memory_chunk_t * cmem		5227614	3					
ANR	5227698	Parameter	gs_memory_chunk_t * cmem	274:30:8552:8574	5227614	0	True				
ANR	5227699	ParameterType	gs_memory_chunk_t *		5227614	0					
ANR	5227700	Identifier	cmem		5227614	1					
ANR	5227701	CFGEntryNode	ENTRY		5227614		True				
ANR	5227702	CFGExitNode	EXIT		5227614		True				
ANR	5227703	Symbol	next		5227614						
ANR	5227704	Symbol	NULL		5227614						
ANR	5227705	Symbol	cmem -> total_free		5227614						
ANR	5227706	Symbol	cmem -> used		5227614						
ANR	5227707	Symbol	slab -> next		5227614						
ANR	5227708	Symbol	cmem -> slabs		5227614						
ANR	5227709	Symbol	slab		5227614						
ANR	5227710	Symbol	target		5227614						
ANR	5227711	Symbol	cmem -> free_size		5227614						
ANR	5227712	Symbol	* slab		5227614						
ANR	5227713	Symbol	* cmem		5227614						
ANR	5227714	Symbol	cmem -> target		5227614						
ANR	5227715	Symbol	cmem		5227614						
ANR	5227716	Symbol	cmem -> free_loc		5227614						
ANR	5227717	Function	chunk_free_all	291:0:8948:9670							
ANR	5227718	FunctionDef	"chunk_free_all (gs_memory_t * mem , uint free_mask , client_name_t cname)"		5227717	0					
ANR	5227719	CompoundStatement		293:0:9031:9670	5227717	0					
ANR	5227720	Statement	gs_memory_chunk_t	294:4:9037:9053	5227717	0	True				
ANR	5227721	Statement	*	294:22:9055:9055	5227717	1	True				
ANR	5227722	Statement	const	294:24:9057:9061	5227717	2	True				
ANR	5227723	ExpressionStatement	cmem = ( gs_memory_chunk_t * ) mem	294:30:9063:9094	5227717	3	True				
ANR	5227724	AssignmentExpression	cmem = ( gs_memory_chunk_t * ) mem		5227717	0		=			
ANR	5227725	Identifier	cmem		5227717	0					
ANR	5227726	CastExpression	( gs_memory_chunk_t * ) mem		5227717	1					
ANR	5227727	CastTarget	gs_memory_chunk_t *		5227717	0					
ANR	5227728	Identifier	mem		5227717	1					
ANR	5227729	Statement	gs_memory_t	295:4:9100:9110	5227717	4	True				
ANR	5227730	Statement	*	295:16:9112:9112	5227717	5	True				
ANR	5227731	Statement	const	295:18:9114:9118	5227717	6	True				
ANR	5227732	ExpressionStatement	target = cmem -> target	295:24:9120:9141	5227717	7	True				
ANR	5227733	AssignmentExpression	target = cmem -> target		5227717	0		=			
ANR	5227734	Identifier	target		5227717	0					
ANR	5227735	PtrMemberAccess	cmem -> target		5227717	1					
ANR	5227736	Identifier	cmem		5227717	0					
ANR	5227737	Identifier	target		5227717	1					
ANR	5227738	IfStatement	if ( free_mask & FREE_ALL_DATA )		5227717	8					
ANR	5227739	Condition	free_mask & FREE_ALL_DATA	297:8:9152:9176	5227717	0	True				
ANR	5227740	BitAndExpression	free_mask & FREE_ALL_DATA		5227717	0		&			
ANR	5227741	Identifier	free_mask		5227717	0					
ANR	5227742	Identifier	FREE_ALL_DATA		5227717	1					
ANR	5227743	ExpressionStatement	chunk_mem_node_free_all_slabs ( cmem )	298:8:9187:9222	5227717	1	True				
ANR	5227744	CallExpression	chunk_mem_node_free_all_slabs ( cmem )		5227717	0					
ANR	5227745	Callee	chunk_mem_node_free_all_slabs		5227717	0					
ANR	5227746	Identifier	chunk_mem_node_free_all_slabs		5227717	0					
ANR	5227747	ArgumentList	cmem		5227717	1					
ANR	5227748	Argument	cmem		5227717	0					
ANR	5227749	Identifier	cmem		5227717	0					
ANR	5227750	IfStatement	if ( mem -> stable_memory )		5227717	9					
ANR	5227751	Condition	mem -> stable_memory	300:8:9293:9310	5227717	0	True				
ANR	5227752	PtrMemberAccess	mem -> stable_memory		5227717	0					
ANR	5227753	Identifier	mem		5227717	0					
ANR	5227754	Identifier	stable_memory		5227717	1					
ANR	5227755	CompoundStatement		8:28:281:281	5227717	1					
ANR	5227756	IfStatement	if ( mem -> stable_memory != mem )		5227717	0					
ANR	5227757	Condition	mem -> stable_memory != mem	301:12:9327:9351	5227717	0	True				
ANR	5227758	EqualityExpression	mem -> stable_memory != mem		5227717	0		!=			
ANR	5227759	PtrMemberAccess	mem -> stable_memory		5227717	0					
ANR	5227760	Identifier	mem		5227717	0					
ANR	5227761	Identifier	stable_memory		5227717	1					
ANR	5227762	Identifier	mem		5227717	1					
ANR	5227763	ExpressionStatement	"gs_memory_free_all ( mem -> stable_memory , free_mask , cname )"	302:12:9366:9422	5227717	1	True				
ANR	5227764	CallExpression	"gs_memory_free_all ( mem -> stable_memory , free_mask , cname )"		5227717	0					
ANR	5227765	Callee	gs_memory_free_all		5227717	0					
ANR	5227766	Identifier	gs_memory_free_all		5227717	0					
ANR	5227767	ArgumentList	mem -> stable_memory		5227717	1					
ANR	5227768	Argument	mem -> stable_memory		5227717	0					
ANR	5227769	PtrMemberAccess	mem -> stable_memory		5227717	0					
ANR	5227770	Identifier	mem		5227717	0					
ANR	5227771	Identifier	stable_memory		5227717	1					
ANR	5227772	Argument	free_mask		5227717	1					
ANR	5227773	Identifier	free_mask		5227717	0					
ANR	5227774	Argument	cname		5227717	2					
ANR	5227775	Identifier	cname		5227717	0					
ANR	5227776	IfStatement	if ( free_mask & FREE_ALL_ALLOCATOR )		5227717	1					
ANR	5227777	Condition	free_mask & FREE_ALL_ALLOCATOR	303:12:9436:9465	5227717	0	True				
ANR	5227778	BitAndExpression	free_mask & FREE_ALL_ALLOCATOR		5227717	0		&			
ANR	5227779	Identifier	free_mask		5227717	0					
ANR	5227780	Identifier	FREE_ALL_ALLOCATOR		5227717	1					
ANR	5227781	ExpressionStatement	mem -> stable_memory = 0	304:12:9480:9502	5227717	1	True				
ANR	5227782	AssignmentExpression	mem -> stable_memory = 0		5227717	0		=			
ANR	5227783	PtrMemberAccess	mem -> stable_memory		5227717	0					
ANR	5227784	Identifier	mem		5227717	0					
ANR	5227785	Identifier	stable_memory		5227717	1					
ANR	5227786	PrimaryExpression	0		5227717	1					
ANR	5227787	IfStatement	if ( free_mask & FREE_ALL_STRUCTURES )		5227717	10					
ANR	5227788	Condition	free_mask & FREE_ALL_STRUCTURES	306:8:9518:9548	5227717	0	True				
ANR	5227789	BitAndExpression	free_mask & FREE_ALL_STRUCTURES		5227717	0		&			
ANR	5227790	Identifier	free_mask		5227717	0					
ANR	5227791	Identifier	FREE_ALL_STRUCTURES		5227717	1					
ANR	5227792	CompoundStatement		14:41:519:519	5227717	1					
ANR	5227793	ExpressionStatement	cmem -> target = 0	307:8:9561:9577	5227717	0	True				
ANR	5227794	AssignmentExpression	cmem -> target = 0		5227717	0		=			
ANR	5227795	PtrMemberAccess	cmem -> target		5227717	0					
ANR	5227796	Identifier	cmem		5227717	0					
ANR	5227797	Identifier	target		5227717	1					
ANR	5227798	PrimaryExpression	0		5227717	1					
ANR	5227799	IfStatement	if ( free_mask & FREE_ALL_ALLOCATOR )		5227717	11					
ANR	5227800	Condition	free_mask & FREE_ALL_ALLOCATOR	309:8:9593:9622	5227717	0	True				
ANR	5227801	BitAndExpression	free_mask & FREE_ALL_ALLOCATOR		5227717	0		&			
ANR	5227802	Identifier	free_mask		5227717	0					
ANR	5227803	Identifier	FREE_ALL_ALLOCATOR		5227717	1					
ANR	5227804	ExpressionStatement	"gs_free_object ( target , cmem , cname )"	310:8:9633:9668	5227717	1	True				
ANR	5227805	CallExpression	"gs_free_object ( target , cmem , cname )"		5227717	0					
ANR	5227806	Callee	gs_free_object		5227717	0					
ANR	5227807	Identifier	gs_free_object		5227717	0					
ANR	5227808	ArgumentList	target		5227717	1					
ANR	5227809	Argument	target		5227717	0					
ANR	5227810	Identifier	target		5227717	0					
ANR	5227811	Argument	cmem		5227717	1					
ANR	5227812	Identifier	cmem		5227717	0					
ANR	5227813	Argument	cname		5227717	2					
ANR	5227814	Identifier	cname		5227717	0					
ANR	5227815	ReturnType	static void		5227717	1					
ANR	5227816	Identifier	chunk_free_all		5227717	2					
ANR	5227817	ParameterList	"gs_memory_t * mem , uint free_mask , client_name_t cname"		5227717	3					
ANR	5227818	Parameter	gs_memory_t * mem	292:15:8975:8991	5227717	0	True				
ANR	5227819	ParameterType	gs_memory_t *		5227717	0					
ANR	5227820	Identifier	mem		5227717	1					
ANR	5227821	Parameter	uint free_mask	292:34:8994:9007	5227717	1	True				
ANR	5227822	ParameterType	uint		5227717	0					
ANR	5227823	Identifier	free_mask		5227717	1					
ANR	5227824	Parameter	client_name_t cname	292:50:9010:9028	5227717	2	True				
ANR	5227825	ParameterType	client_name_t		5227717	0					
ANR	5227826	Identifier	cname		5227717	1					
ANR	5227827	CFGEntryNode	ENTRY		5227717		True				
ANR	5227828	CFGExitNode	EXIT		5227717		True				
ANR	5227829	Symbol	mem -> stable_memory		5227717						
ANR	5227830	Symbol	mem		5227717						
ANR	5227831	Symbol	* cmem		5227717						
ANR	5227832	Symbol	cname		5227717						
ANR	5227833	Symbol	free_mask		5227717						
ANR	5227834	Symbol	FREE_ALL_STRUCTURES		5227717						
ANR	5227835	Symbol	cmem -> target		5227717						
ANR	5227836	Symbol	FREE_ALL_DATA		5227717						
ANR	5227837	Symbol	cmem		5227717						
ANR	5227838	Symbol	FREE_ALL_ALLOCATOR		5227717						
ANR	5227839	Symbol	target		5227717						
ANR	5227840	Symbol	* mem		5227717						
ANR	5227841	DeclStmt									
ANR	5227842	Decl							const gs_memory_struct_type_t	const gs_memory_struct_type_t	st_bytes
ANR	5227843	Function	dump_free_loc	316:0:9734:10557							
ANR	5227844	FunctionDef	"dump_free_loc (gs_memory_t * mem , chunk_free_node_t * node , int depth , void * * limit , uint * total)"		5227843	0					
ANR	5227845	CompoundStatement		317:0:9840:10557	5227843	0					
ANR	5227846	IdentifierDeclStatement	int i ;	319:4:9871:9876	5227843	0	True				
ANR	5227847	IdentifierDecl	i		5227843	0					
ANR	5227848	IdentifierDeclType	int		5227843	0					
ANR	5227849	Identifier	i		5227843	1					
ANR	5227850	IdentifierDeclStatement	int count ;	321:4:9889:9898	5227843	1	True				
ANR	5227851	IdentifierDecl	count		5227843	0					
ANR	5227852	IdentifierDeclType	int		5227843	0					
ANR	5227853	Identifier	count		5227843	1					
ANR	5227854	IfStatement	if ( node == NULL )		5227843	2					
ANR	5227855	Condition	node == NULL	323:8:9909:9920	5227843	0	True				
ANR	5227856	EqualityExpression	node == NULL		5227843	0		==			
ANR	5227857	Identifier	node		5227843	0					
ANR	5227858	Identifier	NULL		5227843	1					
ANR	5227859	ReturnStatement	return 0 ;	324:8:9931:9939	5227843	1	True				
ANR	5227860	PrimaryExpression	0		5227843	0					
ANR	5227861	ExpressionStatement	"count = dump_free_loc ( mem , node -> left_loc , depth + 1 + ( depth & 1 ) , limit , total )"	326:4:9946:10025	5227843	3	True				
ANR	5227862	AssignmentExpression	"count = dump_free_loc ( mem , node -> left_loc , depth + 1 + ( depth & 1 ) , limit , total )"		5227843	0		=			
ANR	5227863	Identifier	count		5227843	0					
ANR	5227864	CallExpression	"dump_free_loc ( mem , node -> left_loc , depth + 1 + ( depth & 1 ) , limit , total )"		5227843	1					
ANR	5227865	Callee	dump_free_loc		5227843	0					
ANR	5227866	Identifier	dump_free_loc		5227843	0					
ANR	5227867	ArgumentList	mem		5227843	1					
ANR	5227868	Argument	mem		5227843	0					
ANR	5227869	Identifier	mem		5227843	0					
ANR	5227870	Argument	node -> left_loc		5227843	1					
ANR	5227871	PtrMemberAccess	node -> left_loc		5227843	0					
ANR	5227872	Identifier	node		5227843	0					
ANR	5227873	Identifier	left_loc		5227843	1					
ANR	5227874	Argument	depth + 1 + ( depth & 1 )		5227843	2					
ANR	5227875	AdditiveExpression	depth + 1 + ( depth & 1 )		5227843	0		+			
ANR	5227876	Identifier	depth		5227843	0					
ANR	5227877	AdditiveExpression	1 + ( depth & 1 )		5227843	1		+			
ANR	5227878	PrimaryExpression	1		5227843	0					
ANR	5227879	BitAndExpression	depth & 1		5227843	1		&			
ANR	5227880	Identifier	depth		5227843	0					
ANR	5227881	PrimaryExpression	1		5227843	1					
ANR	5227882	Argument	limit		5227843	3					
ANR	5227883	Identifier	limit		5227843	0					
ANR	5227884	Argument	total		5227843	4					
ANR	5227885	Identifier	total		5227843	0					
ANR	5227886	ExpressionStatement	* total += node -> size	327:4:10031:10051	5227843	4	True				
ANR	5227887	AssignmentExpression	* total += node -> size		5227843	0		+=			
ANR	5227888	UnaryOperationExpression	* total		5227843	0					
ANR	5227889	UnaryOperator	*		5227843	0					
ANR	5227890	Identifier	total		5227843	1					
ANR	5227891	PtrMemberAccess	node -> size		5227843	1					
ANR	5227892	Identifier	node		5227843	0					
ANR	5227893	Identifier	size		5227843	1					
ANR	5227894	IfStatement	if ( depth != 0 )		5227843	5					
ANR	5227895	Condition	depth != 0	329:8:10086:10095	5227843	0	True				
ANR	5227896	EqualityExpression	depth != 0		5227843	0		!=			
ANR	5227897	Identifier	depth		5227843	0					
ANR	5227898	PrimaryExpression	0		5227843	1					
ANR	5227899	CompoundStatement		13:20:257:257	5227843	1					
ANR	5227900	ForStatement	for ( i = ( depth - 1 ) >> 1 ; i != 0 ; i -- )		5227843	0					
ANR	5227901	ForInit	i = ( depth - 1 ) >> 1 ;	330:13:10113:10129	5227843	0	True				
ANR	5227902	AssignmentExpression	i = ( depth - 1 ) >> 1		5227843	0		=			
ANR	5227903	Identifier	i		5227843	0					
ANR	5227904	ShiftExpression	( depth - 1 ) >> 1		5227843	1		>>			
ANR	5227905	AdditiveExpression	depth - 1		5227843	0		-			
ANR	5227906	Identifier	depth		5227843	0					
ANR	5227907	PrimaryExpression	1		5227843	1					
ANR	5227908	PrimaryExpression	1		5227843	1					
ANR	5227909	Condition	i != 0	330:31:10131:10136	5227843	1	True				
ANR	5227910	EqualityExpression	i != 0		5227843	0		!=			
ANR	5227911	Identifier	i		5227843	0					
ANR	5227912	PrimaryExpression	0		5227843	1					
ANR	5227913	PostIncDecOperationExpression	i --	330:39:10139:10141	5227843	2	True				
ANR	5227914	Identifier	i		5227843	0					
ANR	5227915	IncDec	--		5227843	1					
ANR	5227916	ExpressionStatement	"dmlprintf ( mem , "" "" )"	331:12:10156:10175	5227843	3	True				
ANR	5227917	CallExpression	"dmlprintf ( mem , "" "" )"		5227843	0					
ANR	5227918	Callee	dmlprintf		5227843	0					
ANR	5227919	Identifier	dmlprintf		5227843	0					
ANR	5227920	ArgumentList	mem		5227843	1					
ANR	5227921	Argument	mem		5227843	0					
ANR	5227922	Identifier	mem		5227843	0					
ANR	5227923	Argument	""" """		5227843	1					
ANR	5227924	PrimaryExpression	""" """		5227843	0					
ANR	5227925	IfStatement	if ( depth & 1 )		5227843	1					
ANR	5227926	Condition	depth & 1	332:12:10189:10197	5227843	0	True				
ANR	5227927	BitAndExpression	depth & 1		5227843	0		&			
ANR	5227928	Identifier	depth		5227843	0					
ANR	5227929	PrimaryExpression	1		5227843	1					
ANR	5227930	ExpressionStatement	"dmlprintf ( mem , ""/"" )"	333:12:10212:10231	5227843	1	True				
ANR	5227931	CallExpression	"dmlprintf ( mem , ""/"" )"		5227843	0					
ANR	5227932	Callee	dmlprintf		5227843	0					
ANR	5227933	Identifier	dmlprintf		5227843	0					
ANR	5227934	ArgumentList	mem		5227843	1					
ANR	5227935	Argument	mem		5227843	0					
ANR	5227936	Identifier	mem		5227843	0					
ANR	5227937	Argument	"""/"""		5227843	1					
ANR	5227938	PrimaryExpression	"""/"""		5227843	0					
ANR	5227939	ElseStatement	else		5227843	0					
ANR	5227940	ExpressionStatement	"dmlprintf ( mem , ""\\\\"" )"	335:12:10258:10278	5227843	0	True				
ANR	5227941	CallExpression	"dmlprintf ( mem , ""\\\\"" )"		5227843	0					
ANR	5227942	Callee	dmlprintf		5227843	0					
ANR	5227943	Identifier	dmlprintf		5227843	0					
ANR	5227944	ArgumentList	mem		5227843	1					
ANR	5227945	Argument	mem		5227843	0					
ANR	5227946	Identifier	mem		5227843	0					
ANR	5227947	Argument	"""\\\\"""		5227843	1					
ANR	5227948	PrimaryExpression	"""\\\\"""		5227843	0					
ANR	5227949	ExpressionStatement	"dmlprintf3 ( mem , ""%p+%x->%p\\n"" , node , node -> size , ( ( byte * ) node ) + node -> size )"	337:4:10290:10365	5227843	6	True				
ANR	5227950	CallExpression	"dmlprintf3 ( mem , ""%p+%x->%p\\n"" , node , node -> size , ( ( byte * ) node ) + node -> size )"		5227843	0					
ANR	5227951	Callee	dmlprintf3		5227843	0					
ANR	5227952	Identifier	dmlprintf3		5227843	0					
ANR	5227953	ArgumentList	mem		5227843	1					
ANR	5227954	Argument	mem		5227843	0					
ANR	5227955	Identifier	mem		5227843	0					
ANR	5227956	Argument	"""%p+%x->%p\\n"""		5227843	1					
ANR	5227957	PrimaryExpression	"""%p+%x->%p\\n"""		5227843	0					
ANR	5227958	Argument	node		5227843	2					
ANR	5227959	Identifier	node		5227843	0					
ANR	5227960	Argument	node -> size		5227843	3					
ANR	5227961	PtrMemberAccess	node -> size		5227843	0					
ANR	5227962	Identifier	node		5227843	0					
ANR	5227963	Identifier	size		5227843	1					
ANR	5227964	Argument	( ( byte * ) node ) + node -> size		5227843	4					
ANR	5227965	AdditiveExpression	( ( byte * ) node ) + node -> size		5227843	0		+			
ANR	5227966	CastExpression	( byte * ) node		5227843	0					
ANR	5227967	CastTarget	byte *		5227843	0					
ANR	5227968	Identifier	node		5227843	1					
ANR	5227969	PtrMemberAccess	node -> size		5227843	1					
ANR	5227970	Identifier	node		5227843	0					
ANR	5227971	Identifier	size		5227843	1					
ANR	5227972	ExpressionStatement	"CHUNK_ASSERT ( mem , * limit < ( void * ) node )"	339:4:10378:10418	5227843	7	True				
ANR	5227973	CallExpression	"CHUNK_ASSERT ( mem , * limit < ( void * ) node )"		5227843	0					
ANR	5227974	Callee	CHUNK_ASSERT		5227843	0					
ANR	5227975	Identifier	CHUNK_ASSERT		5227843	0					
ANR	5227976	ArgumentList	mem		5227843	1					
ANR	5227977	Argument	mem		5227843	0					
ANR	5227978	Identifier	mem		5227843	0					
ANR	5227979	Argument	* limit < ( void * ) node		5227843	1					
ANR	5227980	RelationalExpression	* limit < ( void * ) node		5227843	0		<			
ANR	5227981	UnaryOperationExpression	* limit		5227843	0					
ANR	5227982	UnaryOperator	*		5227843	0					
ANR	5227983	Identifier	limit		5227843	1					
ANR	5227984	CastExpression	( void * ) node		5227843	1					
ANR	5227985	CastTarget	void *		5227843	0					
ANR	5227986	Identifier	node		5227843	1					
ANR	5227987	ExpressionStatement	* limit = ( ( byte * ) node ) + node -> size	340:4:10424:10458	5227843	8	True				
ANR	5227988	AssignmentExpression	* limit = ( ( byte * ) node ) + node -> size		5227843	0		=			
ANR	5227989	UnaryOperationExpression	* limit		5227843	0					
ANR	5227990	UnaryOperator	*		5227843	0					
ANR	5227991	Identifier	limit		5227843	1					
ANR	5227992	AdditiveExpression	( ( byte * ) node ) + node -> size		5227843	1		+			
ANR	5227993	CastExpression	( byte * ) node		5227843	0					
ANR	5227994	CastTarget	byte *		5227843	0					
ANR	5227995	Identifier	node		5227843	1					
ANR	5227996	PtrMemberAccess	node -> size		5227843	1					
ANR	5227997	Identifier	node		5227843	0					
ANR	5227998	Identifier	size		5227843	1					
ANR	5227999	ReturnStatement	"return 1 + count + dump_free_loc ( mem , node -> right_loc , depth + 2 + ( depth & 1 ) , limit , total ) ;"	341:4:10464:10555	5227843	9	True				
ANR	5228000	AdditiveExpression	"1 + count + dump_free_loc ( mem , node -> right_loc , depth + 2 + ( depth & 1 ) , limit , total )"		5227843	0		+			
ANR	5228001	PrimaryExpression	1		5227843	0					
ANR	5228002	AdditiveExpression	"count + dump_free_loc ( mem , node -> right_loc , depth + 2 + ( depth & 1 ) , limit , total )"		5227843	1		+			
ANR	5228003	Identifier	count		5227843	0					
ANR	5228004	CallExpression	"dump_free_loc ( mem , node -> right_loc , depth + 2 + ( depth & 1 ) , limit , total )"		5227843	1					
ANR	5228005	Callee	dump_free_loc		5227843	0					
ANR	5228006	Identifier	dump_free_loc		5227843	0					
ANR	5228007	ArgumentList	mem		5227843	1					
ANR	5228008	Argument	mem		5227843	0					
ANR	5228009	Identifier	mem		5227843	0					
ANR	5228010	Argument	node -> right_loc		5227843	1					
ANR	5228011	PtrMemberAccess	node -> right_loc		5227843	0					
ANR	5228012	Identifier	node		5227843	0					
ANR	5228013	Identifier	right_loc		5227843	1					
ANR	5228014	Argument	depth + 2 + ( depth & 1 )		5227843	2					
ANR	5228015	AdditiveExpression	depth + 2 + ( depth & 1 )		5227843	0		+			
ANR	5228016	Identifier	depth		5227843	0					
ANR	5228017	AdditiveExpression	2 + ( depth & 1 )		5227843	1		+			
ANR	5228018	PrimaryExpression	2		5227843	0					
ANR	5228019	BitAndExpression	depth & 1		5227843	1		&			
ANR	5228020	Identifier	depth		5227843	0					
ANR	5228021	PrimaryExpression	1		5227843	1					
ANR	5228022	Argument	limit		5227843	3					
ANR	5228023	Identifier	limit		5227843	0					
ANR	5228024	Argument	total		5227843	4					
ANR	5228025	Identifier	total		5227843	0					
ANR	5228026	ReturnType	static int		5227843	1					
ANR	5228027	Identifier	dump_free_loc		5227843	2					
ANR	5228028	ParameterList	"gs_memory_t * mem , chunk_free_node_t * node , int depth , void * * limit , uint * total"		5227843	3					
ANR	5228029	Parameter	gs_memory_t * mem	316:25:9759:9774	5227843	0	True				
ANR	5228030	ParameterType	gs_memory_t *		5227843	0					
ANR	5228031	Identifier	mem		5227843	1					
ANR	5228032	Parameter	chunk_free_node_t * node	316:43:9777:9799	5227843	1	True				
ANR	5228033	ParameterType	chunk_free_node_t *		5227843	0					
ANR	5228034	Identifier	node		5227843	1					
ANR	5228035	Parameter	int depth	316:68:9802:9810	5227843	2	True				
ANR	5228036	ParameterType	int		5227843	0					
ANR	5228037	Identifier	depth		5227843	1					
ANR	5228038	Parameter	void * * limit	316:79:9813:9824	5227843	3	True				
ANR	5228039	ParameterType	void * *		5227843	0					
ANR	5228040	Identifier	limit		5227843	1					
ANR	5228041	Parameter	uint * total	316:93:9827:9837	5227843	4	True				
ANR	5228042	ParameterType	uint *		5227843	0					
ANR	5228043	Identifier	total		5227843	1					
ANR	5228044	CFGEntryNode	ENTRY		5227843		True				
ANR	5228045	CFGExitNode	EXIT		5227843		True				
ANR	5228046	Symbol	dump_free_loc		5227843						
ANR	5228047	Symbol	* limit		5227843						
ANR	5228048	Symbol	NULL		5227843						
ANR	5228049	Symbol	node -> size		5227843						
ANR	5228050	Symbol	count		5227843						
ANR	5228051	Symbol	i		5227843						
ANR	5228052	Symbol	node -> left_loc		5227843						
ANR	5228053	Symbol	node		5227843						
ANR	5228054	Symbol	node -> right_loc		5227843						
ANR	5228055	Symbol	total		5227843						
ANR	5228056	Symbol	depth		5227843						
ANR	5228057	Symbol	mem		5227843						
ANR	5228058	Symbol	limit		5227843						
ANR	5228059	Symbol	* total		5227843						
ANR	5228060	Symbol	* node		5227843						
ANR	5228061	Function	dump_free_size	344:0:10560:11404							
ANR	5228062	FunctionDef	"dump_free_size (gs_memory_t * mem , chunk_free_node_t * node , int depth , uint * size , void * * addr)"		5228061	0					
ANR	5228063	CompoundStatement		345:0:10665:11404	5228061	0					
ANR	5228064	IdentifierDeclStatement	int i ;	347:4:10696:10701	5228061	0	True				
ANR	5228065	IdentifierDecl	i		5228061	0					
ANR	5228066	IdentifierDeclType	int		5228061	0					
ANR	5228067	Identifier	i		5228061	1					
ANR	5228068	IdentifierDeclStatement	int count ;	349:4:10714:10723	5228061	1	True				
ANR	5228069	IdentifierDecl	count		5228061	0					
ANR	5228070	IdentifierDeclType	int		5228061	0					
ANR	5228071	Identifier	count		5228061	1					
ANR	5228072	IfStatement	if ( node == NULL )		5228061	2					
ANR	5228073	Condition	node == NULL	351:8:10734:10745	5228061	0	True				
ANR	5228074	EqualityExpression	node == NULL		5228061	0		==			
ANR	5228075	Identifier	node		5228061	0					
ANR	5228076	Identifier	NULL		5228061	1					
ANR	5228077	ReturnStatement	return 0 ;	352:8:10756:10764	5228061	1	True				
ANR	5228078	PrimaryExpression	0		5228061	0					
ANR	5228079	ExpressionStatement	"count = dump_free_size ( mem , node -> left_size , depth + 1 + ( depth & 1 ) , size , addr )"	354:4:10771:10850	5228061	3	True				
ANR	5228080	AssignmentExpression	"count = dump_free_size ( mem , node -> left_size , depth + 1 + ( depth & 1 ) , size , addr )"		5228061	0		=			
ANR	5228081	Identifier	count		5228061	0					
ANR	5228082	CallExpression	"dump_free_size ( mem , node -> left_size , depth + 1 + ( depth & 1 ) , size , addr )"		5228061	1					
ANR	5228083	Callee	dump_free_size		5228061	0					
ANR	5228084	Identifier	dump_free_size		5228061	0					
ANR	5228085	ArgumentList	mem		5228061	1					
ANR	5228086	Argument	mem		5228061	0					
ANR	5228087	Identifier	mem		5228061	0					
ANR	5228088	Argument	node -> left_size		5228061	1					
ANR	5228089	PtrMemberAccess	node -> left_size		5228061	0					
ANR	5228090	Identifier	node		5228061	0					
ANR	5228091	Identifier	left_size		5228061	1					
ANR	5228092	Argument	depth + 1 + ( depth & 1 )		5228061	2					
ANR	5228093	AdditiveExpression	depth + 1 + ( depth & 1 )		5228061	0		+			
ANR	5228094	Identifier	depth		5228061	0					
ANR	5228095	AdditiveExpression	1 + ( depth & 1 )		5228061	1		+			
ANR	5228096	PrimaryExpression	1		5228061	0					
ANR	5228097	BitAndExpression	depth & 1		5228061	1		&			
ANR	5228098	Identifier	depth		5228061	0					
ANR	5228099	PrimaryExpression	1		5228061	1					
ANR	5228100	Argument	size		5228061	3					
ANR	5228101	Identifier	size		5228061	0					
ANR	5228102	Argument	addr		5228061	4					
ANR	5228103	Identifier	addr		5228061	0					
ANR	5228104	IfStatement	if ( depth != 0 )		5228061	4					
ANR	5228105	Condition	depth != 0	356:8:10885:10894	5228061	0	True				
ANR	5228106	EqualityExpression	depth != 0		5228061	0		!=			
ANR	5228107	Identifier	depth		5228061	0					
ANR	5228108	PrimaryExpression	0		5228061	1					
ANR	5228109	CompoundStatement		12:20:231:231	5228061	1					
ANR	5228110	ForStatement	for ( i = ( depth - 1 ) >> 1 ; i != 0 ; i -- )		5228061	0					
ANR	5228111	ForInit	i = ( depth - 1 ) >> 1 ;	357:13:10912:10928	5228061	0	True				
ANR	5228112	AssignmentExpression	i = ( depth - 1 ) >> 1		5228061	0		=			
ANR	5228113	Identifier	i		5228061	0					
ANR	5228114	ShiftExpression	( depth - 1 ) >> 1		5228061	1		>>			
ANR	5228115	AdditiveExpression	depth - 1		5228061	0		-			
ANR	5228116	Identifier	depth		5228061	0					
ANR	5228117	PrimaryExpression	1		5228061	1					
ANR	5228118	PrimaryExpression	1		5228061	1					
ANR	5228119	Condition	i != 0	357:31:10930:10935	5228061	1	True				
ANR	5228120	EqualityExpression	i != 0		5228061	0		!=			
ANR	5228121	Identifier	i		5228061	0					
ANR	5228122	PrimaryExpression	0		5228061	1					
ANR	5228123	PostIncDecOperationExpression	i --	357:39:10938:10940	5228061	2	True				
ANR	5228124	Identifier	i		5228061	0					
ANR	5228125	IncDec	--		5228061	1					
ANR	5228126	ExpressionStatement	"dmlprintf ( mem , "" "" )"	358:12:10955:10974	5228061	3	True				
ANR	5228127	CallExpression	"dmlprintf ( mem , "" "" )"		5228061	0					
ANR	5228128	Callee	dmlprintf		5228061	0					
ANR	5228129	Identifier	dmlprintf		5228061	0					
ANR	5228130	ArgumentList	mem		5228061	1					
ANR	5228131	Argument	mem		5228061	0					
ANR	5228132	Identifier	mem		5228061	0					
ANR	5228133	Argument	""" """		5228061	1					
ANR	5228134	PrimaryExpression	""" """		5228061	0					
ANR	5228135	IfStatement	if ( depth & 1 )		5228061	1					
ANR	5228136	Condition	depth & 1	359:12:10988:10996	5228061	0	True				
ANR	5228137	BitAndExpression	depth & 1		5228061	0		&			
ANR	5228138	Identifier	depth		5228061	0					
ANR	5228139	PrimaryExpression	1		5228061	1					
ANR	5228140	ExpressionStatement	"dmlprintf ( mem , ""/"" )"	360:12:11011:11030	5228061	1	True				
ANR	5228141	CallExpression	"dmlprintf ( mem , ""/"" )"		5228061	0					
ANR	5228142	Callee	dmlprintf		5228061	0					
ANR	5228143	Identifier	dmlprintf		5228061	0					
ANR	5228144	ArgumentList	mem		5228061	1					
ANR	5228145	Argument	mem		5228061	0					
ANR	5228146	Identifier	mem		5228061	0					
ANR	5228147	Argument	"""/"""		5228061	1					
ANR	5228148	PrimaryExpression	"""/"""		5228061	0					
ANR	5228149	ElseStatement	else		5228061	0					
ANR	5228150	ExpressionStatement	"dmlprintf ( mem , ""\\\\"" )"	362:12:11057:11077	5228061	0	True				
ANR	5228151	CallExpression	"dmlprintf ( mem , ""\\\\"" )"		5228061	0					
ANR	5228152	Callee	dmlprintf		5228061	0					
ANR	5228153	Identifier	dmlprintf		5228061	0					
ANR	5228154	ArgumentList	mem		5228061	1					
ANR	5228155	Argument	mem		5228061	0					
ANR	5228156	Identifier	mem		5228061	0					
ANR	5228157	Argument	"""\\\\"""		5228061	1					
ANR	5228158	PrimaryExpression	"""\\\\"""		5228061	0					
ANR	5228159	ExpressionStatement	"dmlprintf3 ( mem , ""%p+%x->%p\\n"" , node , node -> size , ( ( byte * ) node ) + node -> size )"	364:4:11089:11164	5228061	5	True				
ANR	5228160	CallExpression	"dmlprintf3 ( mem , ""%p+%x->%p\\n"" , node , node -> size , ( ( byte * ) node ) + node -> size )"		5228061	0					
ANR	5228161	Callee	dmlprintf3		5228061	0					
ANR	5228162	Identifier	dmlprintf3		5228061	0					
ANR	5228163	ArgumentList	mem		5228061	1					
ANR	5228164	Argument	mem		5228061	0					
ANR	5228165	Identifier	mem		5228061	0					
ANR	5228166	Argument	"""%p+%x->%p\\n"""		5228061	1					
ANR	5228167	PrimaryExpression	"""%p+%x->%p\\n"""		5228061	0					
ANR	5228168	Argument	node		5228061	2					
ANR	5228169	Identifier	node		5228061	0					
ANR	5228170	Argument	node -> size		5228061	3					
ANR	5228171	PtrMemberAccess	node -> size		5228061	0					
ANR	5228172	Identifier	node		5228061	0					
ANR	5228173	Identifier	size		5228061	1					
ANR	5228174	Argument	( ( byte * ) node ) + node -> size		5228061	4					
ANR	5228175	AdditiveExpression	( ( byte * ) node ) + node -> size		5228061	0		+			
ANR	5228176	CastExpression	( byte * ) node		5228061	0					
ANR	5228177	CastTarget	byte *		5228061	0					
ANR	5228178	Identifier	node		5228061	1					
ANR	5228179	PtrMemberAccess	node -> size		5228061	1					
ANR	5228180	Identifier	node		5228061	0					
ANR	5228181	Identifier	size		5228061	1					
ANR	5228182	ExpressionStatement	"CHUNK_ASSERT ( mem , * size < node -> size || ( * size == node -> size && * addr < ( void * ) node ) )"	366:4:11177:11263	5228061	6	True				
ANR	5228183	CallExpression	"CHUNK_ASSERT ( mem , * size < node -> size || ( * size == node -> size && * addr < ( void * ) node ) )"		5228061	0					
ANR	5228184	Callee	CHUNK_ASSERT		5228061	0					
ANR	5228185	Identifier	CHUNK_ASSERT		5228061	0					
ANR	5228186	ArgumentList	mem		5228061	1					
ANR	5228187	Argument	mem		5228061	0					
ANR	5228188	Identifier	mem		5228061	0					
ANR	5228189	Argument	* size < node -> size || ( * size == node -> size && * addr < ( void * ) node )		5228061	1					
ANR	5228190	OrExpression	* size < node -> size || ( * size == node -> size && * addr < ( void * ) node )		5228061	0		||			
ANR	5228191	RelationalExpression	* size < node -> size		5228061	0		<			
ANR	5228192	UnaryOperationExpression	* size		5228061	0					
ANR	5228193	UnaryOperator	*		5228061	0					
ANR	5228194	Identifier	size		5228061	1					
ANR	5228195	PtrMemberAccess	node -> size		5228061	1					
ANR	5228196	Identifier	node		5228061	0					
ANR	5228197	Identifier	size		5228061	1					
ANR	5228198	AndExpression	* size == node -> size && * addr < ( void * ) node		5228061	1		&&			
ANR	5228199	EqualityExpression	* size == node -> size		5228061	0		==			
ANR	5228200	UnaryOperationExpression	* size		5228061	0					
ANR	5228201	UnaryOperator	*		5228061	0					
ANR	5228202	Identifier	size		5228061	1					
ANR	5228203	PtrMemberAccess	node -> size		5228061	1					
ANR	5228204	Identifier	node		5228061	0					
ANR	5228205	Identifier	size		5228061	1					
ANR	5228206	RelationalExpression	* addr < ( void * ) node		5228061	1		<			
ANR	5228207	UnaryOperationExpression	* addr		5228061	0					
ANR	5228208	UnaryOperator	*		5228061	0					
ANR	5228209	Identifier	addr		5228061	1					
ANR	5228210	CastExpression	( void * ) node		5228061	1					
ANR	5228211	CastTarget	void *		5228061	0					
ANR	5228212	Identifier	node		5228061	1					
ANR	5228213	ExpressionStatement	* size = node -> size	367:4:11269:11287	5228061	7	True				
ANR	5228214	AssignmentExpression	* size = node -> size		5228061	0		=			
ANR	5228215	UnaryOperationExpression	* size		5228061	0					
ANR	5228216	UnaryOperator	*		5228061	0					
ANR	5228217	Identifier	size		5228061	1					
ANR	5228218	PtrMemberAccess	node -> size		5228061	1					
ANR	5228219	Identifier	node		5228061	0					
ANR	5228220	Identifier	size		5228061	1					
ANR	5228221	ExpressionStatement	* addr = node	368:4:11293:11305	5228061	8	True				
ANR	5228222	AssignmentExpression	* addr = node		5228061	0		=			
ANR	5228223	UnaryOperationExpression	* addr		5228061	0					
ANR	5228224	UnaryOperator	*		5228061	0					
ANR	5228225	Identifier	addr		5228061	1					
ANR	5228226	Identifier	node		5228061	1					
ANR	5228227	ReturnStatement	"return 1 + count + dump_free_size ( mem , node -> right_size , depth + 2 + ( depth & 1 ) , size , addr ) ;"	369:4:11311:11402	5228061	9	True				
ANR	5228228	AdditiveExpression	"1 + count + dump_free_size ( mem , node -> right_size , depth + 2 + ( depth & 1 ) , size , addr )"		5228061	0		+			
ANR	5228229	PrimaryExpression	1		5228061	0					
ANR	5228230	AdditiveExpression	"count + dump_free_size ( mem , node -> right_size , depth + 2 + ( depth & 1 ) , size , addr )"		5228061	1		+			
ANR	5228231	Identifier	count		5228061	0					
ANR	5228232	CallExpression	"dump_free_size ( mem , node -> right_size , depth + 2 + ( depth & 1 ) , size , addr )"		5228061	1					
ANR	5228233	Callee	dump_free_size		5228061	0					
ANR	5228234	Identifier	dump_free_size		5228061	0					
ANR	5228235	ArgumentList	mem		5228061	1					
ANR	5228236	Argument	mem		5228061	0					
ANR	5228237	Identifier	mem		5228061	0					
ANR	5228238	Argument	node -> right_size		5228061	1					
ANR	5228239	PtrMemberAccess	node -> right_size		5228061	0					
ANR	5228240	Identifier	node		5228061	0					
ANR	5228241	Identifier	right_size		5228061	1					
ANR	5228242	Argument	depth + 2 + ( depth & 1 )		5228061	2					
ANR	5228243	AdditiveExpression	depth + 2 + ( depth & 1 )		5228061	0		+			
ANR	5228244	Identifier	depth		5228061	0					
ANR	5228245	AdditiveExpression	2 + ( depth & 1 )		5228061	1		+			
ANR	5228246	PrimaryExpression	2		5228061	0					
ANR	5228247	BitAndExpression	depth & 1		5228061	1		&			
ANR	5228248	Identifier	depth		5228061	0					
ANR	5228249	PrimaryExpression	1		5228061	1					
ANR	5228250	Argument	size		5228061	3					
ANR	5228251	Identifier	size		5228061	0					
ANR	5228252	Argument	addr		5228061	4					
ANR	5228253	Identifier	addr		5228061	0					
ANR	5228254	ReturnType	static int		5228061	1					
ANR	5228255	Identifier	dump_free_size		5228061	2					
ANR	5228256	ParameterList	"gs_memory_t * mem , chunk_free_node_t * node , int depth , uint * size , void * * addr"		5228061	3					
ANR	5228257	Parameter	gs_memory_t * mem	344:26:10586:10601	5228061	0	True				
ANR	5228258	ParameterType	gs_memory_t *		5228061	0					
ANR	5228259	Identifier	mem		5228061	1					
ANR	5228260	Parameter	chunk_free_node_t * node	344:44:10604:10626	5228061	1	True				
ANR	5228261	ParameterType	chunk_free_node_t *		5228061	0					
ANR	5228262	Identifier	node		5228061	1					
ANR	5228263	Parameter	int depth	344:69:10629:10637	5228061	2	True				
ANR	5228264	ParameterType	int		5228061	0					
ANR	5228265	Identifier	depth		5228061	1					
ANR	5228266	Parameter	uint * size	344:80:10640:10649	5228061	3	True				
ANR	5228267	ParameterType	uint *		5228061	0					
ANR	5228268	Identifier	size		5228061	1					
ANR	5228269	Parameter	void * * addr	344:92:10652:10662	5228061	4	True				
ANR	5228270	ParameterType	void * *		5228061	0					
ANR	5228271	Identifier	addr		5228061	1					
ANR	5228272	CFGEntryNode	ENTRY		5228061		True				
ANR	5228273	CFGExitNode	EXIT		5228061		True				
ANR	5228274	Symbol	NULL		5228061						
ANR	5228275	Symbol	node -> size		5228061						
ANR	5228276	Symbol	count		5228061						
ANR	5228277	Symbol	i		5228061						
ANR	5228278	Symbol	dump_free_size		5228061						
ANR	5228279	Symbol	node		5228061						
ANR	5228280	Symbol	depth		5228061						
ANR	5228281	Symbol	* size		5228061						
ANR	5228282	Symbol	mem		5228061						
ANR	5228283	Symbol	size		5228061						
ANR	5228284	Symbol	* node		5228061						
ANR	5228285	Symbol	node -> left_size		5228061						
ANR	5228286	Symbol	* addr		5228061						
ANR	5228287	Symbol	addr		5228061						
ANR	5228288	Symbol	node -> right_size		5228061						
ANR	5228289	Function	gs_memory_chunk_dump_memory	372:0:11407:12592							
ANR	5228290	FunctionDef	gs_memory_chunk_dump_memory (const gs_memory_t * mem)		5228289	0					
ANR	5228291	CompoundStatement		374:0:11464:12592	5228289	0					
ANR	5228292	IdentifierDeclStatement	const gs_memory_chunk_t * cmem = ( const gs_memory_chunk_t * ) mem ;	375:4:11470:11532	5228289	0	True				
ANR	5228293	IdentifierDecl	* cmem = ( const gs_memory_chunk_t * ) mem		5228289	0					
ANR	5228294	IdentifierDeclType	const gs_memory_chunk_t *		5228289	0					
ANR	5228295	Identifier	cmem		5228289	1					
ANR	5228296	AssignmentExpression	* cmem = ( const gs_memory_chunk_t * ) mem		5228289	2		=			
ANR	5228297	Identifier	cmem		5228289	0					
ANR	5228298	CastExpression	( const gs_memory_chunk_t * ) mem		5228289	1					
ANR	5228299	CastTarget	const gs_memory_chunk_t *		5228289	0					
ANR	5228300	Identifier	mem		5228289	1					
ANR	5228301	IdentifierDeclStatement	"int count1 , count2 ;"	376:4:11538:11556	5228289	1	True				
ANR	5228302	IdentifierDecl	count1		5228289	0					
ANR	5228303	IdentifierDeclType	int		5228289	0					
ANR	5228304	Identifier	count1		5228289	1					
ANR	5228305	IdentifierDecl	count2		5228289	1					
ANR	5228306	IdentifierDeclType	int		5228289	0					
ANR	5228307	Identifier	count2		5228289	1					
ANR	5228308	IdentifierDeclStatement	void * limit = NULL ;	377:4:11562:11580	5228289	2	True				
ANR	5228309	IdentifierDecl	* limit = NULL		5228289	0					
ANR	5228310	IdentifierDeclType	void *		5228289	0					
ANR	5228311	Identifier	limit		5228289	1					
ANR	5228312	AssignmentExpression	* limit = NULL		5228289	2		=			
ANR	5228313	Identifier	NULL		5228289	0					
ANR	5228314	Identifier	NULL		5228289	1					
ANR	5228315	IdentifierDeclStatement	void * addr = NULL ;	378:4:11586:11603	5228289	3	True				
ANR	5228316	IdentifierDecl	* addr = NULL		5228289	0					
ANR	5228317	IdentifierDeclType	void *		5228289	0					
ANR	5228318	Identifier	addr		5228289	1					
ANR	5228319	AssignmentExpression	* addr = NULL		5228289	2		=			
ANR	5228320	Identifier	NULL		5228289	0					
ANR	5228321	Identifier	NULL		5228289	1					
ANR	5228322	IdentifierDeclStatement	uint size = 1 ;	379:4:11609:11622	5228289	4	True				
ANR	5228323	IdentifierDecl	size = 1		5228289	0					
ANR	5228324	IdentifierDeclType	uint		5228289	0					
ANR	5228325	Identifier	size		5228289	1					
ANR	5228326	AssignmentExpression	size = 1		5228289	2		=			
ANR	5228327	Identifier	size		5228289	0					
ANR	5228328	PrimaryExpression	1		5228289	1					
ANR	5228329	IdentifierDeclStatement	uint total = 0 ;	380:4:11628:11642	5228289	5	True				
ANR	5228330	IdentifierDecl	total = 0		5228289	0					
ANR	5228331	IdentifierDeclType	uint		5228289	0					
ANR	5228332	Identifier	total		5228289	1					
ANR	5228333	AssignmentExpression	total = 0		5228289	2		=			
ANR	5228334	Identifier	total		5228289	0					
ANR	5228335	PrimaryExpression	0		5228289	1					
ANR	5228336	ExpressionStatement	"dmlprintf1 ( cmem -> target , ""Chunk %p:\\n"" , cmem )"	383:4:11674:11719	5228289	6	True				
ANR	5228337	CallExpression	"dmlprintf1 ( cmem -> target , ""Chunk %p:\\n"" , cmem )"		5228289	0					
ANR	5228338	Callee	dmlprintf1		5228289	0					
ANR	5228339	Identifier	dmlprintf1		5228289	0					
ANR	5228340	ArgumentList	cmem -> target		5228289	1					
ANR	5228341	Argument	cmem -> target		5228289	0					
ANR	5228342	PtrMemberAccess	cmem -> target		5228289	0					
ANR	5228343	Identifier	cmem		5228289	0					
ANR	5228344	Identifier	target		5228289	1					
ANR	5228345	Argument	"""Chunk %p:\\n"""		5228289	1					
ANR	5228346	PrimaryExpression	"""Chunk %p:\\n"""		5228289	0					
ANR	5228347	Argument	cmem		5228289	2					
ANR	5228348	Identifier	cmem		5228289	0					
ANR	5228349	CompoundStatement		13:8:301:319	5228289	7					
ANR	5228350	IdentifierDeclStatement	chunk_slab_t * slab ;	386:8:11766:11784	5228289	0	True				
ANR	5228351	IdentifierDecl	* slab		5228289	0					
ANR	5228352	IdentifierDeclType	chunk_slab_t *		5228289	0					
ANR	5228353	Identifier	slab		5228289	1					
ANR	5228354	ExpressionStatement	"dmlprintf ( cmem -> target , ""Slabs\\n"" )"	387:8:11794:11828	5228289	1	True				
ANR	5228355	CallExpression	"dmlprintf ( cmem -> target , ""Slabs\\n"" )"		5228289	0					
ANR	5228356	Callee	dmlprintf		5228289	0					
ANR	5228357	Identifier	dmlprintf		5228289	0					
ANR	5228358	ArgumentList	cmem -> target		5228289	1					
ANR	5228359	Argument	cmem -> target		5228289	0					
ANR	5228360	PtrMemberAccess	cmem -> target		5228289	0					
ANR	5228361	Identifier	cmem		5228289	0					
ANR	5228362	Identifier	target		5228289	1					
ANR	5228363	Argument	"""Slabs\\n"""		5228289	1					
ANR	5228364	PrimaryExpression	"""Slabs\\n"""		5228289	0					
ANR	5228365	ForStatement	for ( slab = cmem -> slabs ; slab != NULL ; slab = slab -> next )		5228289	2					
ANR	5228366	ForInit	slab = cmem -> slabs ;	388:13:11843:11861	5228289	0	True				
ANR	5228367	AssignmentExpression	slab = cmem -> slabs		5228289	0		=			
ANR	5228368	Identifier	slab		5228289	0					
ANR	5228369	PtrMemberAccess	cmem -> slabs		5228289	1					
ANR	5228370	Identifier	cmem		5228289	0					
ANR	5228371	Identifier	slabs		5228289	1					
ANR	5228372	Condition	slab != NULL	388:33:11863:11874	5228289	1	True				
ANR	5228373	EqualityExpression	slab != NULL		5228289	0		!=			
ANR	5228374	Identifier	slab		5228289	0					
ANR	5228375	Identifier	NULL		5228289	1					
ANR	5228376	AssignmentExpression	slab = slab -> next	388:47:11877:11893	5228289	2	True	=			
ANR	5228377	Identifier	slab		5228289	0					
ANR	5228378	PtrMemberAccess	slab -> next		5228289	1					
ANR	5228379	Identifier	slab		5228289	0					
ANR	5228380	Identifier	next		5228289	1					
ANR	5228381	ExpressionStatement	"dmlprintf1 ( cmem -> target , "" %p\\n"" , slab )"	389:12:11908:11947	5228289	3	True				
ANR	5228382	CallExpression	"dmlprintf1 ( cmem -> target , "" %p\\n"" , slab )"		5228289	0					
ANR	5228383	Callee	dmlprintf1		5228289	0					
ANR	5228384	Identifier	dmlprintf1		5228289	0					
ANR	5228385	ArgumentList	cmem -> target		5228289	1					
ANR	5228386	Argument	cmem -> target		5228289	0					
ANR	5228387	PtrMemberAccess	cmem -> target		5228289	0					
ANR	5228388	Identifier	cmem		5228289	0					
ANR	5228389	Identifier	target		5228289	1					
ANR	5228390	Argument	""" %p\\n"""		5228289	1					
ANR	5228391	PrimaryExpression	""" %p\\n"""		5228289	0					
ANR	5228392	Argument	slab		5228289	2					
ANR	5228393	Identifier	slab		5228289	0					
ANR	5228394	ExpressionStatement	"dmlprintf ( cmem -> target , ""Locs:\\n"" )"	392:4:11966:12000	5228289	8	True				
ANR	5228395	CallExpression	"dmlprintf ( cmem -> target , ""Locs:\\n"" )"		5228289	0					
ANR	5228396	Callee	dmlprintf		5228289	0					
ANR	5228397	Identifier	dmlprintf		5228289	0					
ANR	5228398	ArgumentList	cmem -> target		5228289	1					
ANR	5228399	Argument	cmem -> target		5228289	0					
ANR	5228400	PtrMemberAccess	cmem -> target		5228289	0					
ANR	5228401	Identifier	cmem		5228289	0					
ANR	5228402	Identifier	target		5228289	1					
ANR	5228403	Argument	"""Locs:\\n"""		5228289	1					
ANR	5228404	PrimaryExpression	"""Locs:\\n"""		5228289	0					
ANR	5228405	ExpressionStatement	"count1 = dump_free_loc ( cmem -> target , cmem -> free_loc , 0 , & limit , & total )"	394:4:12013:12084	5228289	9	True				
ANR	5228406	AssignmentExpression	"count1 = dump_free_loc ( cmem -> target , cmem -> free_loc , 0 , & limit , & total )"		5228289	0		=			
ANR	5228407	Identifier	count1		5228289	0					
ANR	5228408	CallExpression	"dump_free_loc ( cmem -> target , cmem -> free_loc , 0 , & limit , & total )"		5228289	1					
ANR	5228409	Callee	dump_free_loc		5228289	0					
ANR	5228410	Identifier	dump_free_loc		5228289	0					
ANR	5228411	ArgumentList	cmem -> target		5228289	1					
ANR	5228412	Argument	cmem -> target		5228289	0					
ANR	5228413	PtrMemberAccess	cmem -> target		5228289	0					
ANR	5228414	Identifier	cmem		5228289	0					
ANR	5228415	Identifier	target		5228289	1					
ANR	5228416	Argument	cmem -> free_loc		5228289	1					
ANR	5228417	PtrMemberAccess	cmem -> free_loc		5228289	0					
ANR	5228418	Identifier	cmem		5228289	0					
ANR	5228419	Identifier	free_loc		5228289	1					
ANR	5228420	Argument	0		5228289	2					
ANR	5228421	PrimaryExpression	0		5228289	0					
ANR	5228422	Argument	& limit		5228289	3					
ANR	5228423	UnaryOperationExpression	& limit		5228289	0					
ANR	5228424	UnaryOperator	&		5228289	0					
ANR	5228425	Identifier	limit		5228289	1					
ANR	5228426	Argument	& total		5228289	4					
ANR	5228427	UnaryOperationExpression	& total		5228289	0					
ANR	5228428	UnaryOperator	&		5228289	0					
ANR	5228429	Identifier	total		5228289	1					
ANR	5228430	ExpressionStatement	"dmlprintf ( cmem -> target , ""Sizes:\\n"" )"	396:4:12115:12150	5228289	10	True				
ANR	5228431	CallExpression	"dmlprintf ( cmem -> target , ""Sizes:\\n"" )"		5228289	0					
ANR	5228432	Callee	dmlprintf		5228289	0					
ANR	5228433	Identifier	dmlprintf		5228289	0					
ANR	5228434	ArgumentList	cmem -> target		5228289	1					
ANR	5228435	Argument	cmem -> target		5228289	0					
ANR	5228436	PtrMemberAccess	cmem -> target		5228289	0					
ANR	5228437	Identifier	cmem		5228289	0					
ANR	5228438	Identifier	target		5228289	1					
ANR	5228439	Argument	"""Sizes:\\n"""		5228289	1					
ANR	5228440	PrimaryExpression	"""Sizes:\\n"""		5228289	0					
ANR	5228441	ExpressionStatement	"count2 = dump_free_size ( cmem -> target , cmem -> free_size , 0 , & size , & addr )"	398:4:12163:12234	5228289	11	True				
ANR	5228442	AssignmentExpression	"count2 = dump_free_size ( cmem -> target , cmem -> free_size , 0 , & size , & addr )"		5228289	0		=			
ANR	5228443	Identifier	count2		5228289	0					
ANR	5228444	CallExpression	"dump_free_size ( cmem -> target , cmem -> free_size , 0 , & size , & addr )"		5228289	1					
ANR	5228445	Callee	dump_free_size		5228289	0					
ANR	5228446	Identifier	dump_free_size		5228289	0					
ANR	5228447	ArgumentList	cmem -> target		5228289	1					
ANR	5228448	Argument	cmem -> target		5228289	0					
ANR	5228449	PtrMemberAccess	cmem -> target		5228289	0					
ANR	5228450	Identifier	cmem		5228289	0					
ANR	5228451	Identifier	target		5228289	1					
ANR	5228452	Argument	cmem -> free_size		5228289	1					
ANR	5228453	PtrMemberAccess	cmem -> free_size		5228289	0					
ANR	5228454	Identifier	cmem		5228289	0					
ANR	5228455	Identifier	free_size		5228289	1					
ANR	5228456	Argument	0		5228289	2					
ANR	5228457	PrimaryExpression	0		5228289	0					
ANR	5228458	Argument	& size		5228289	3					
ANR	5228459	UnaryOperationExpression	& size		5228289	0					
ANR	5228460	UnaryOperator	&		5228289	0					
ANR	5228461	Identifier	size		5228289	1					
ANR	5228462	Argument	& addr		5228289	4					
ANR	5228463	UnaryOperationExpression	& addr		5228289	0					
ANR	5228464	UnaryOperator	&		5228289	0					
ANR	5228465	Identifier	addr		5228289	1					
ANR	5228466	IfStatement	if ( count1 != count2 )		5228289	12					
ANR	5228467	Condition	count1 != count2	399:8:12244:12259	5228289	0	True				
ANR	5228468	EqualityExpression	count1 != count2		5228289	0		!=			
ANR	5228469	Identifier	count1		5228289	0					
ANR	5228470	Identifier	count2		5228289	1					
ANR	5228471	CompoundStatement		27:8:807:833	5228289	1					
ANR	5228472	IdentifierDeclStatement	void ( * crash ) ( void ) = NULL ;	400:8:12272:12298	5228289	0	True				
ANR	5228473	IdentifierDecl	( * crash ) ( void ) = NULL		5228289	0					
ANR	5228474	IdentifierDeclType	void ( * ) ( void )		5228289	0					
ANR	5228475	Identifier	crash		5228289	1					
ANR	5228476	AssignmentExpression	( * crash ) ( void ) = NULL		5228289	2		=			
ANR	5228477	Identifier	NULL		5228289	0					
ANR	5228478	Identifier	NULL		5228289	1					
ANR	5228479	ExpressionStatement	"dmlprintf2 ( cmem -> target , ""Tree mismatch! %d vs %d\\n"" , count1 , count2 )"	401:8:12308:12377	5228289	1	True				
ANR	5228480	CallExpression	"dmlprintf2 ( cmem -> target , ""Tree mismatch! %d vs %d\\n"" , count1 , count2 )"		5228289	0					
ANR	5228481	Callee	dmlprintf2		5228289	0					
ANR	5228482	Identifier	dmlprintf2		5228289	0					
ANR	5228483	ArgumentList	cmem -> target		5228289	1					
ANR	5228484	Argument	cmem -> target		5228289	0					
ANR	5228485	PtrMemberAccess	cmem -> target		5228289	0					
ANR	5228486	Identifier	cmem		5228289	0					
ANR	5228487	Identifier	target		5228289	1					
ANR	5228488	Argument	"""Tree mismatch! %d vs %d\\n"""		5228289	1					
ANR	5228489	PrimaryExpression	"""Tree mismatch! %d vs %d\\n"""		5228289	0					
ANR	5228490	Argument	count1		5228289	2					
ANR	5228491	Identifier	count1		5228289	0					
ANR	5228492	Argument	count2		5228289	3					
ANR	5228493	Identifier	count2		5228289	0					
ANR	5228494	ExpressionStatement	crash ( )	402:8:12387:12394	5228289	2	True				
ANR	5228495	CallExpression	crash ( )		5228289	0					
ANR	5228496	Callee	crash		5228289	0					
ANR	5228497	Identifier	crash		5228289	0					
ANR	5228498	ArgumentList			5228289	1					
ANR	5228499	IfStatement	if ( total != cmem -> total_free )		5228289	13					
ANR	5228500	Condition	total != cmem -> total_free	404:8:12410:12434	5228289	0	True				
ANR	5228501	EqualityExpression	total != cmem -> total_free		5228289	0		!=			
ANR	5228502	Identifier	total		5228289	0					
ANR	5228503	PtrMemberAccess	cmem -> total_free		5228289	1					
ANR	5228504	Identifier	cmem		5228289	0					
ANR	5228505	Identifier	total_free		5228289	1					
ANR	5228506	CompoundStatement		32:8:982:1008	5228289	1					
ANR	5228507	IdentifierDeclStatement	void ( * crash ) ( void ) = NULL ;	405:8:12447:12473	5228289	0	True				
ANR	5228508	IdentifierDecl	( * crash ) ( void ) = NULL		5228289	0					
ANR	5228509	IdentifierDeclType	void ( * ) ( void )		5228289	0					
ANR	5228510	Identifier	crash		5228289	1					
ANR	5228511	AssignmentExpression	( * crash ) ( void ) = NULL		5228289	2		=			
ANR	5228512	Identifier	NULL		5228289	0					
ANR	5228513	Identifier	NULL		5228289	1					
ANR	5228514	ExpressionStatement	"dmlprintf2 ( cmem -> target , ""Free size mismatch! %u vs %lu\\n"" , total , cmem -> total_free )"	406:8:12483:12567	5228289	1	True				
ANR	5228515	CallExpression	"dmlprintf2 ( cmem -> target , ""Free size mismatch! %u vs %lu\\n"" , total , cmem -> total_free )"		5228289	0					
ANR	5228516	Callee	dmlprintf2		5228289	0					
ANR	5228517	Identifier	dmlprintf2		5228289	0					
ANR	5228518	ArgumentList	cmem -> target		5228289	1					
ANR	5228519	Argument	cmem -> target		5228289	0					
ANR	5228520	PtrMemberAccess	cmem -> target		5228289	0					
ANR	5228521	Identifier	cmem		5228289	0					
ANR	5228522	Identifier	target		5228289	1					
ANR	5228523	Argument	"""Free size mismatch! %u vs %lu\\n"""		5228289	1					
ANR	5228524	PrimaryExpression	"""Free size mismatch! %u vs %lu\\n"""		5228289	0					
ANR	5228525	Argument	total		5228289	2					
ANR	5228526	Identifier	total		5228289	0					
ANR	5228527	Argument	cmem -> total_free		5228289	3					
ANR	5228528	PtrMemberAccess	cmem -> total_free		5228289	0					
ANR	5228529	Identifier	cmem		5228289	0					
ANR	5228530	Identifier	total_free		5228289	1					
ANR	5228531	ExpressionStatement	crash ( )	407:8:12577:12584	5228289	2	True				
ANR	5228532	CallExpression	crash ( )		5228289	0					
ANR	5228533	Callee	crash		5228289	0					
ANR	5228534	Identifier	crash		5228289	0					
ANR	5228535	ArgumentList			5228289	1					
ANR	5228536	ReturnType	void		5228289	1					
ANR	5228537	Identifier	gs_memory_chunk_dump_memory		5228289	2					
ANR	5228538	ParameterList	const gs_memory_t * mem		5228289	3					
ANR	5228539	Parameter	const gs_memory_t * mem	373:28:11440:11461	5228289	0	True				
ANR	5228540	ParameterType	const gs_memory_t *		5228289	0					
ANR	5228541	Identifier	mem		5228289	1					
ANR	5228542	CFGEntryNode	ENTRY		5228289		True				
ANR	5228543	CFGExitNode	EXIT		5228289		True				
ANR	5228544	Symbol	count1		5228289						
ANR	5228545	Symbol	count2		5228289						
ANR	5228546	Symbol	dump_free_loc		5228289						
ANR	5228547	Symbol	dump_free_size		5228289						
ANR	5228548	Symbol	cmem -> total_free		5228289						
ANR	5228549	Symbol	cmem -> slabs		5228289						
ANR	5228550	Symbol	slab		5228289						
ANR	5228551	Symbol	crash		5228289						
ANR	5228552	Symbol	total		5228289						
ANR	5228553	Symbol	mem		5228289						
ANR	5228554	Symbol	* slab		5228289						
ANR	5228555	Symbol	& total		5228289						
ANR	5228556	Symbol	* cmem		5228289						
ANR	5228557	Symbol	limit		5228289						
ANR	5228558	Symbol	cmem -> target		5228289						
ANR	5228559	Symbol	addr		5228289						
ANR	5228560	Symbol	cmem -> free_loc		5228289						
ANR	5228561	Symbol	NULL		5228289						
ANR	5228562	Symbol	& addr		5228289						
ANR	5228563	Symbol	& limit		5228289						
ANR	5228564	Symbol	& size		5228289						
ANR	5228565	Symbol	slab -> next		5228289						
ANR	5228566	Symbol	cmem -> free_size		5228289						
ANR	5228567	Symbol	size		5228289						
ANR	5228568	Symbol	cmem		5228289						
ANR	5228569	Function	round_up_to_align	413:0:12669:12906							
ANR	5228570	FunctionDef	round_up_to_align (uint size)		5228569	0					
ANR	5228571	CompoundStatement		415:0:12717:12906	5228569	0					
ANR	5228572	IdentifierDeclStatement	uint num_node_headers = ( size + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) - 1 ) / SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) ;	416:4:12723:12835	5228569	0	True				
ANR	5228573	IdentifierDecl	num_node_headers = ( size + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) - 1 ) / SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5228569	0					
ANR	5228574	IdentifierDeclType	uint		5228569	0					
ANR	5228575	Identifier	num_node_headers		5228569	1					
ANR	5228576	AssignmentExpression	num_node_headers = ( size + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) - 1 ) / SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5228569	2		=			
ANR	5228577	Identifier	num_node_headers		5228569	0					
ANR	5228578	MultiplicativeExpression	( size + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) - 1 ) / SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5228569	1		/			
ANR	5228579	AdditiveExpression	size + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) - 1		5228569	0		+			
ANR	5228580	Identifier	size		5228569	0					
ANR	5228581	AdditiveExpression	SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) - 1		5228569	1		-			
ANR	5228582	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5228569	0					
ANR	5228583	Callee	SIZEOF_ROUND_ALIGN		5228569	0					
ANR	5228584	Identifier	SIZEOF_ROUND_ALIGN		5228569	0					
ANR	5228585	ArgumentList	chunk_obj_node_t		5228569	1					
ANR	5228586	Argument	chunk_obj_node_t		5228569	0					
ANR	5228587	Identifier	chunk_obj_node_t		5228569	0					
ANR	5228588	PrimaryExpression	1		5228569	1					
ANR	5228589	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5228569	1					
ANR	5228590	Callee	SIZEOF_ROUND_ALIGN		5228569	0					
ANR	5228591	Identifier	SIZEOF_ROUND_ALIGN		5228569	0					
ANR	5228592	ArgumentList	chunk_obj_node_t		5228569	1					
ANR	5228593	Argument	chunk_obj_node_t		5228569	0					
ANR	5228594	Identifier	chunk_obj_node_t		5228569	0					
ANR	5228595	ReturnStatement	return num_node_headers * SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) ;	418:4:12842:12904	5228569	1	True				
ANR	5228596	MultiplicativeExpression	num_node_headers * SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5228569	0		*			
ANR	5228597	Identifier	num_node_headers		5228569	0					
ANR	5228598	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5228569	1					
ANR	5228599	Callee	SIZEOF_ROUND_ALIGN		5228569	0					
ANR	5228600	Identifier	SIZEOF_ROUND_ALIGN		5228569	0					
ANR	5228601	ArgumentList	chunk_obj_node_t		5228569	1					
ANR	5228602	Argument	chunk_obj_node_t		5228569	0					
ANR	5228603	Identifier	chunk_obj_node_t		5228569	0					
ANR	5228604	ReturnType	inline static uint		5228569	1					
ANR	5228605	Identifier	round_up_to_align		5228569	2					
ANR	5228606	ParameterList	uint size		5228569	3					
ANR	5228607	Parameter	uint size	414:18:12706:12714	5228569	0	True				
ANR	5228608	ParameterType	uint		5228569	0					
ANR	5228609	Identifier	size		5228569	1					
ANR	5228610	CFGEntryNode	ENTRY		5228569		True				
ANR	5228611	CFGExitNode	EXIT		5228569		True				
ANR	5228612	Symbol	size		5228569						
ANR	5228613	Symbol	SIZEOF_ROUND_ALIGN		5228569						
ANR	5228614	Symbol	num_node_headers		5228569						
ANR	5228615	Symbol	chunk_obj_node_t		5228569						
ANR	5228616	Function	CMP_SIZE	421:0:12909:13106							
ANR	5228617	FunctionDef	"CMP_SIZE (const chunk_free_node_t * a , const chunk_free_node_t * b)"		5228616	0					
ANR	5228618	CompoundStatement		422:0:12994:13106	5228616	0					
ANR	5228619	IfStatement	if ( a -> size > b -> size )		5228616	0					
ANR	5228620	Condition	a -> size > b -> size	423:8:13004:13020	5228616	0	True				
ANR	5228621	RelationalExpression	a -> size > b -> size		5228616	0		>			
ANR	5228622	PtrMemberAccess	a -> size		5228616	0					
ANR	5228623	Identifier	a		5228616	0					
ANR	5228624	Identifier	size		5228616	1					
ANR	5228625	PtrMemberAccess	b -> size		5228616	1					
ANR	5228626	Identifier	b		5228616	0					
ANR	5228627	Identifier	size		5228616	1					
ANR	5228628	ReturnStatement	return 1 ;	424:8:13031:13039	5228616	1	True				
ANR	5228629	PrimaryExpression	1		5228616	0					
ANR	5228630	IfStatement	if ( a -> size < b -> size )		5228616	1					
ANR	5228631	Condition	a -> size < b -> size	425:8:13049:13065	5228616	0	True				
ANR	5228632	RelationalExpression	a -> size < b -> size		5228616	0		<			
ANR	5228633	PtrMemberAccess	a -> size		5228616	0					
ANR	5228634	Identifier	a		5228616	0					
ANR	5228635	Identifier	size		5228616	1					
ANR	5228636	PtrMemberAccess	b -> size		5228616	1					
ANR	5228637	Identifier	b		5228616	0					
ANR	5228638	Identifier	size		5228616	1					
ANR	5228639	ReturnStatement	return 0 ;	426:8:13076:13084	5228616	1	True				
ANR	5228640	PrimaryExpression	0		5228616	0					
ANR	5228641	ReturnStatement	return ( a > b ) ;	427:4:13090:13104	5228616	2	True				
ANR	5228642	RelationalExpression	a > b		5228616	0		>			
ANR	5228643	Identifier	a		5228616	0					
ANR	5228644	Identifier	b		5228616	1					
ANR	5228645	ReturnType	static inline int		5228616	1					
ANR	5228646	Identifier	CMP_SIZE		5228616	2					
ANR	5228647	ParameterList	"const chunk_free_node_t * a , const chunk_free_node_t * b"		5228616	3					
ANR	5228648	Parameter	const chunk_free_node_t * a	421:27:12936:12962	5228616	0	True				
ANR	5228649	ParameterType	const chunk_free_node_t *		5228616	0					
ANR	5228650	Identifier	a		5228616	1					
ANR	5228651	Parameter	const chunk_free_node_t * b	421:56:12965:12991	5228616	1	True				
ANR	5228652	ParameterType	const chunk_free_node_t *		5228616	0					
ANR	5228653	Identifier	b		5228616	1					
ANR	5228654	CFGEntryNode	ENTRY		5228616		True				
ANR	5228655	CFGExitNode	EXIT		5228616		True				
ANR	5228656	Symbol	a -> size		5228616						
ANR	5228657	Symbol	a		5228616						
ANR	5228658	Symbol	b		5228616						
ANR	5228659	Symbol	b -> size		5228616						
ANR	5228660	Symbol	* a		5228616						
ANR	5228661	Symbol	* b		5228616						
ANR	5228662	Function	insert_free_size	430:0:13109:16724							
ANR	5228663	FunctionDef	"insert_free_size (gs_memory_chunk_t * cmem , chunk_free_node_t * node)"		5228662	0					
ANR	5228664	CompoundStatement		431:0:13188:16724	5228662	0					
ANR	5228665	IdentifierDeclStatement	chunk_free_node_t * * ap ;	432:4:13194:13216	5228662	0	True				
ANR	5228666	IdentifierDecl	* * ap		5228662	0					
ANR	5228667	IdentifierDeclType	chunk_free_node_t * *		5228662	0					
ANR	5228668	Identifier	ap		5228662	1					
ANR	5228669	IdentifierDeclStatement	"chunk_free_node_t * a , * b , * c ;"	433:4:13222:13250	5228662	1	True				
ANR	5228670	IdentifierDecl	* a		5228662	0					
ANR	5228671	IdentifierDeclType	chunk_free_node_t *		5228662	0					
ANR	5228672	Identifier	a		5228662	1					
ANR	5228673	IdentifierDecl	* b		5228662	1					
ANR	5228674	IdentifierDeclType	chunk_free_node_t *		5228662	0					
ANR	5228675	Identifier	b		5228662	1					
ANR	5228676	IdentifierDecl	* c		5228662	2					
ANR	5228677	IdentifierDeclType	chunk_free_node_t *		5228662	0					
ANR	5228678	Identifier	c		5228662	1					
ANR	5228679	ExpressionStatement	node -> left_size = NULL	435:4:13257:13280	5228662	2	True				
ANR	5228680	AssignmentExpression	node -> left_size = NULL		5228662	0		=			
ANR	5228681	PtrMemberAccess	node -> left_size		5228662	0					
ANR	5228682	Identifier	node		5228662	0					
ANR	5228683	Identifier	left_size		5228662	1					
ANR	5228684	Identifier	NULL		5228662	1					
ANR	5228685	ExpressionStatement	node -> right_size = NULL	436:4:13286:13309	5228662	3	True				
ANR	5228686	AssignmentExpression	node -> right_size = NULL		5228662	0		=			
ANR	5228687	PtrMemberAccess	node -> right_size		5228662	0					
ANR	5228688	Identifier	node		5228662	0					
ANR	5228689	Identifier	right_size		5228662	1					
ANR	5228690	Identifier	NULL		5228662	1					
ANR	5228691	ExpressionStatement	ap = & cmem -> free_size	439:4:13343:13364	5228662	4	True				
ANR	5228692	AssignmentExpression	ap = & cmem -> free_size		5228662	0		=			
ANR	5228693	Identifier	ap		5228662	0					
ANR	5228694	UnaryOperationExpression	& cmem -> free_size		5228662	1					
ANR	5228695	UnaryOperator	&		5228662	0					
ANR	5228696	PtrMemberAccess	cmem -> free_size		5228662	1					
ANR	5228697	Identifier	cmem		5228662	0					
ANR	5228698	Identifier	free_size		5228662	1					
ANR	5228699	WhileStatement	while ( ( a = * ap ) != NULL )		5228662	5					
ANR	5228700	Condition	( a = * ap ) != NULL	440:11:13377:13393	5228662	0	True				
ANR	5228701	EqualityExpression	( a = * ap ) != NULL		5228662	0		!=			
ANR	5228702	AssignmentExpression	a = * ap		5228662	0		=			
ANR	5228703	Identifier	a		5228662	0					
ANR	5228704	UnaryOperationExpression	* ap		5228662	1					
ANR	5228705	UnaryOperator	*		5228662	0					
ANR	5228706	Identifier	ap		5228662	1					
ANR	5228707	Identifier	NULL		5228662	1					
ANR	5228708	CompoundStatement		10:30:207:207	5228662	1					
ANR	5228709	IfStatement	"if ( CMP_SIZE ( a , node ) )"		5228662	0					
ANR	5228710	Condition	"CMP_SIZE ( a , node )"	441:12:13410:13426	5228662	0	True				
ANR	5228711	CallExpression	"CMP_SIZE ( a , node )"		5228662	0					
ANR	5228712	Callee	CMP_SIZE		5228662	0					
ANR	5228713	Identifier	CMP_SIZE		5228662	0					
ANR	5228714	ArgumentList	a		5228662	1					
ANR	5228715	Argument	a		5228662	0					
ANR	5228716	Identifier	a		5228662	0					
ANR	5228717	Argument	node		5228662	1					
ANR	5228718	Identifier	node		5228662	0					
ANR	5228719	CompoundStatement		11:31:240:240	5228662	1					
ANR	5228720	ExpressionStatement	b = a -> left_size	442:12:13443:13459	5228662	0	True				
ANR	5228721	AssignmentExpression	b = a -> left_size		5228662	0		=			
ANR	5228722	Identifier	b		5228662	0					
ANR	5228723	PtrMemberAccess	a -> left_size		5228662	1					
ANR	5228724	Identifier	a		5228662	0					
ANR	5228725	Identifier	left_size		5228662	1					
ANR	5228726	IfStatement	if ( b == NULL )		5228662	1					
ANR	5228727	Condition	b == NULL	443:16:13477:13485	5228662	0	True				
ANR	5228728	EqualityExpression	b == NULL		5228662	0		==			
ANR	5228729	Identifier	b		5228662	0					
ANR	5228730	Identifier	NULL		5228662	1					
ANR	5228731	CompoundStatement		13:27:299:299	5228662	1					
ANR	5228732	ExpressionStatement	ap = & a -> left_size	444:16:13506:13524	5228662	0	True				
ANR	5228733	AssignmentExpression	ap = & a -> left_size		5228662	0		=			
ANR	5228734	Identifier	ap		5228662	0					
ANR	5228735	UnaryOperationExpression	& a -> left_size		5228662	1					
ANR	5228736	UnaryOperator	&		5228662	0					
ANR	5228737	PtrMemberAccess	a -> left_size		5228662	1					
ANR	5228738	Identifier	a		5228662	0					
ANR	5228739	Identifier	left_size		5228662	1					
ANR	5228740	BreakStatement	break ;	445:16:13542:13547	5228662	1	True				
ANR	5228741	IfStatement	"if ( CMP_SIZE ( b , node ) )"		5228662	2					
ANR	5228742	Condition	"CMP_SIZE ( b , node )"	447:16:13600:13616	5228662	0	True				
ANR	5228743	CallExpression	"CMP_SIZE ( b , node )"		5228662	0					
ANR	5228744	Callee	CMP_SIZE		5228662	0					
ANR	5228745	Identifier	CMP_SIZE		5228662	0					
ANR	5228746	ArgumentList	b		5228662	1					
ANR	5228747	Argument	b		5228662	0					
ANR	5228748	Identifier	b		5228662	0					
ANR	5228749	Argument	node		5228662	1					
ANR	5228750	Identifier	node		5228662	0					
ANR	5228751	CompoundStatement		17:35:430:430	5228662	1					
ANR	5228752	ExpressionStatement	c = b -> left_size	448:16:13637:13653	5228662	0	True				
ANR	5228753	AssignmentExpression	c = b -> left_size		5228662	0		=			
ANR	5228754	Identifier	c		5228662	0					
ANR	5228755	PtrMemberAccess	b -> left_size		5228662	1					
ANR	5228756	Identifier	b		5228662	0					
ANR	5228757	Identifier	left_size		5228662	1					
ANR	5228758	IfStatement	if ( c == NULL )		5228662	1					
ANR	5228759	Condition	c == NULL	449:20:13675:13683	5228662	0	True				
ANR	5228760	EqualityExpression	c == NULL		5228662	0		==			
ANR	5228761	Identifier	c		5228662	0					
ANR	5228762	Identifier	NULL		5228662	1					
ANR	5228763	CompoundStatement		19:31:497:497	5228662	1					
ANR	5228764	ExpressionStatement	ap = & b -> left_size	450:20:13708:13726	5228662	0	True				
ANR	5228765	AssignmentExpression	ap = & b -> left_size		5228662	0		=			
ANR	5228766	Identifier	ap		5228662	0					
ANR	5228767	UnaryOperationExpression	& b -> left_size		5228662	1					
ANR	5228768	UnaryOperator	&		5228662	0					
ANR	5228769	PtrMemberAccess	b -> left_size		5228662	1					
ANR	5228770	Identifier	b		5228662	0					
ANR	5228771	Identifier	left_size		5228662	1					
ANR	5228772	BreakStatement	break ;	451:20:13748:13753	5228662	1	True				
ANR	5228773	ExpressionStatement	* ap = c	458:16:14019:14026	5228662	2	True				
ANR	5228774	AssignmentExpression	* ap = c		5228662	0		=			
ANR	5228775	UnaryOperationExpression	* ap		5228662	0					
ANR	5228776	UnaryOperator	*		5228662	0					
ANR	5228777	Identifier	ap		5228662	1					
ANR	5228778	Identifier	c		5228662	1					
ANR	5228779	ExpressionStatement	a -> left_size = b -> right_size	459:16:14044:14073	5228662	3	True				
ANR	5228780	AssignmentExpression	a -> left_size = b -> right_size		5228662	0		=			
ANR	5228781	PtrMemberAccess	a -> left_size		5228662	0					
ANR	5228782	Identifier	a		5228662	0					
ANR	5228783	Identifier	left_size		5228662	1					
ANR	5228784	PtrMemberAccess	b -> right_size		5228662	1					
ANR	5228785	Identifier	b		5228662	0					
ANR	5228786	Identifier	right_size		5228662	1					
ANR	5228787	ExpressionStatement	b -> left_size = c -> right_size	460:16:14091:14120	5228662	4	True				
ANR	5228788	AssignmentExpression	b -> left_size = c -> right_size		5228662	0		=			
ANR	5228789	PtrMemberAccess	b -> left_size		5228662	0					
ANR	5228790	Identifier	b		5228662	0					
ANR	5228791	Identifier	left_size		5228662	1					
ANR	5228792	PtrMemberAccess	c -> right_size		5228662	1					
ANR	5228793	Identifier	c		5228662	0					
ANR	5228794	Identifier	right_size		5228662	1					
ANR	5228795	ExpressionStatement	b -> right_size = a	461:16:14138:14155	5228662	5	True				
ANR	5228796	AssignmentExpression	b -> right_size = a		5228662	0		=			
ANR	5228797	PtrMemberAccess	b -> right_size		5228662	0					
ANR	5228798	Identifier	b		5228662	0					
ANR	5228799	Identifier	right_size		5228662	1					
ANR	5228800	Identifier	a		5228662	1					
ANR	5228801	ExpressionStatement	c -> right_size = b	462:16:14173:14190	5228662	6	True				
ANR	5228802	AssignmentExpression	c -> right_size = b		5228662	0		=			
ANR	5228803	PtrMemberAccess	c -> right_size		5228662	0					
ANR	5228804	Identifier	c		5228662	0					
ANR	5228805	Identifier	right_size		5228662	1					
ANR	5228806	Identifier	b		5228662	1					
ANR	5228807	IfStatement	"if ( CMP_SIZE ( c , node ) )"		5228662	7					
ANR	5228808	Condition	"CMP_SIZE ( c , node )"	463:20:14212:14228	5228662	0	True				
ANR	5228809	CallExpression	"CMP_SIZE ( c , node )"		5228662	0					
ANR	5228810	Callee	CMP_SIZE		5228662	0					
ANR	5228811	Identifier	CMP_SIZE		5228662	0					
ANR	5228812	ArgumentList	c		5228662	1					
ANR	5228813	Argument	c		5228662	0					
ANR	5228814	Identifier	c		5228662	0					
ANR	5228815	Argument	node		5228662	1					
ANR	5228816	Identifier	node		5228662	0					
ANR	5228817	ExpressionStatement	ap = & c -> left_size	464:20:14251:14269	5228662	1	True				
ANR	5228818	AssignmentExpression	ap = & c -> left_size		5228662	0		=			
ANR	5228819	Identifier	ap		5228662	0					
ANR	5228820	UnaryOperationExpression	& c -> left_size		5228662	1					
ANR	5228821	UnaryOperator	&		5228662	0					
ANR	5228822	PtrMemberAccess	c -> left_size		5228662	1					
ANR	5228823	Identifier	c		5228662	0					
ANR	5228824	Identifier	left_size		5228662	1					
ANR	5228825	ElseStatement	else		5228662	0					
ANR	5228826	ExpressionStatement	ap = & b -> left_size	466:20:14312:14330	5228662	0	True				
ANR	5228827	AssignmentExpression	ap = & b -> left_size		5228662	0		=			
ANR	5228828	Identifier	ap		5228662	0					
ANR	5228829	UnaryOperationExpression	& b -> left_size		5228662	1					
ANR	5228830	UnaryOperator	&		5228662	0					
ANR	5228831	PtrMemberAccess	b -> left_size		5228662	1					
ANR	5228832	Identifier	b		5228662	0					
ANR	5228833	Identifier	left_size		5228662	1					
ANR	5228834	ElseStatement	else		5228662	0					
ANR	5228835	CompoundStatement		37:19:1162:1162	5228662	0					
ANR	5228836	ExpressionStatement	c = b -> right_size	468:16:14369:14386	5228662	0	True				
ANR	5228837	AssignmentExpression	c = b -> right_size		5228662	0		=			
ANR	5228838	Identifier	c		5228662	0					
ANR	5228839	PtrMemberAccess	b -> right_size		5228662	1					
ANR	5228840	Identifier	b		5228662	0					
ANR	5228841	Identifier	right_size		5228662	1					
ANR	5228842	IfStatement	if ( c == NULL )		5228662	1					
ANR	5228843	Condition	c == NULL	469:20:14408:14416	5228662	0	True				
ANR	5228844	EqualityExpression	c == NULL		5228662	0		==			
ANR	5228845	Identifier	c		5228662	0					
ANR	5228846	Identifier	NULL		5228662	1					
ANR	5228847	CompoundStatement		39:31:1230:1230	5228662	1					
ANR	5228848	ExpressionStatement	ap = & b -> right_size	470:20:14441:14460	5228662	0	True				
ANR	5228849	AssignmentExpression	ap = & b -> right_size		5228662	0		=			
ANR	5228850	Identifier	ap		5228662	0					
ANR	5228851	UnaryOperationExpression	& b -> right_size		5228662	1					
ANR	5228852	UnaryOperator	&		5228662	0					
ANR	5228853	PtrMemberAccess	b -> right_size		5228662	1					
ANR	5228854	Identifier	b		5228662	0					
ANR	5228855	Identifier	right_size		5228662	1					
ANR	5228856	BreakStatement	break ;	471:20:14482:14487	5228662	1	True				
ANR	5228857	ExpressionStatement	* ap = c	478:16:14733:14740	5228662	2	True				
ANR	5228858	AssignmentExpression	* ap = c		5228662	0		=			
ANR	5228859	UnaryOperationExpression	* ap		5228662	0					
ANR	5228860	UnaryOperator	*		5228662	0					
ANR	5228861	Identifier	ap		5228662	1					
ANR	5228862	Identifier	c		5228662	1					
ANR	5228863	ExpressionStatement	a -> left_size = c -> right_size	479:16:14758:14787	5228662	3	True				
ANR	5228864	AssignmentExpression	a -> left_size = c -> right_size		5228662	0		=			
ANR	5228865	PtrMemberAccess	a -> left_size		5228662	0					
ANR	5228866	Identifier	a		5228662	0					
ANR	5228867	Identifier	left_size		5228662	1					
ANR	5228868	PtrMemberAccess	c -> right_size		5228662	1					
ANR	5228869	Identifier	c		5228662	0					
ANR	5228870	Identifier	right_size		5228662	1					
ANR	5228871	ExpressionStatement	b -> right_size = c -> left_size	480:16:14805:14833	5228662	4	True				
ANR	5228872	AssignmentExpression	b -> right_size = c -> left_size		5228662	0		=			
ANR	5228873	PtrMemberAccess	b -> right_size		5228662	0					
ANR	5228874	Identifier	b		5228662	0					
ANR	5228875	Identifier	right_size		5228662	1					
ANR	5228876	PtrMemberAccess	c -> left_size		5228662	1					
ANR	5228877	Identifier	c		5228662	0					
ANR	5228878	Identifier	left_size		5228662	1					
ANR	5228879	ExpressionStatement	c -> left_size = b	481:16:14851:14868	5228662	5	True				
ANR	5228880	AssignmentExpression	c -> left_size = b		5228662	0		=			
ANR	5228881	PtrMemberAccess	c -> left_size		5228662	0					
ANR	5228882	Identifier	c		5228662	0					
ANR	5228883	Identifier	left_size		5228662	1					
ANR	5228884	Identifier	b		5228662	1					
ANR	5228885	ExpressionStatement	c -> right_size = a	482:16:14886:14903	5228662	6	True				
ANR	5228886	AssignmentExpression	c -> right_size = a		5228662	0		=			
ANR	5228887	PtrMemberAccess	c -> right_size		5228662	0					
ANR	5228888	Identifier	c		5228662	0					
ANR	5228889	Identifier	right_size		5228662	1					
ANR	5228890	Identifier	a		5228662	1					
ANR	5228891	IfStatement	"if ( CMP_SIZE ( c , node ) )"		5228662	7					
ANR	5228892	Condition	"CMP_SIZE ( c , node )"	483:20:14925:14941	5228662	0	True				
ANR	5228893	CallExpression	"CMP_SIZE ( c , node )"		5228662	0					
ANR	5228894	Callee	CMP_SIZE		5228662	0					
ANR	5228895	Identifier	CMP_SIZE		5228662	0					
ANR	5228896	ArgumentList	c		5228662	1					
ANR	5228897	Argument	c		5228662	0					
ANR	5228898	Identifier	c		5228662	0					
ANR	5228899	Argument	node		5228662	1					
ANR	5228900	Identifier	node		5228662	0					
ANR	5228901	ExpressionStatement	ap = & b -> right_size	484:20:14964:14983	5228662	1	True				
ANR	5228902	AssignmentExpression	ap = & b -> right_size		5228662	0		=			
ANR	5228903	Identifier	ap		5228662	0					
ANR	5228904	UnaryOperationExpression	& b -> right_size		5228662	1					
ANR	5228905	UnaryOperator	&		5228662	0					
ANR	5228906	PtrMemberAccess	b -> right_size		5228662	1					
ANR	5228907	Identifier	b		5228662	0					
ANR	5228908	Identifier	right_size		5228662	1					
ANR	5228909	ElseStatement	else		5228662	0					
ANR	5228910	ExpressionStatement	ap = & a -> left_size	486:20:15026:15044	5228662	0	True				
ANR	5228911	AssignmentExpression	ap = & a -> left_size		5228662	0		=			
ANR	5228912	Identifier	ap		5228662	0					
ANR	5228913	UnaryOperationExpression	& a -> left_size		5228662	1					
ANR	5228914	UnaryOperator	&		5228662	0					
ANR	5228915	PtrMemberAccess	a -> left_size		5228662	1					
ANR	5228916	Identifier	a		5228662	0					
ANR	5228917	Identifier	left_size		5228662	1					
ANR	5228918	ElseStatement	else		5228662	0					
ANR	5228919	CompoundStatement		58:15:1886:1886	5228662	0					
ANR	5228920	ExpressionStatement	b = a -> right_size	489:12:15089:15106	5228662	0	True				
ANR	5228921	AssignmentExpression	b = a -> right_size		5228662	0		=			
ANR	5228922	Identifier	b		5228662	0					
ANR	5228923	PtrMemberAccess	a -> right_size		5228662	1					
ANR	5228924	Identifier	a		5228662	0					
ANR	5228925	Identifier	right_size		5228662	1					
ANR	5228926	IfStatement	if ( b == NULL )		5228662	1					
ANR	5228927	Condition	b == NULL	490:16:15124:15132	5228662	0	True				
ANR	5228928	EqualityExpression	b == NULL		5228662	0		==			
ANR	5228929	Identifier	b		5228662	0					
ANR	5228930	Identifier	NULL		5228662	1					
ANR	5228931	CompoundStatement		61:12:1958:1958	5228662	1					
ANR	5228932	ExpressionStatement	ap = & a -> right_size	492:16:15165:15184	5228662	0	True				
ANR	5228933	AssignmentExpression	ap = & a -> right_size		5228662	0		=			
ANR	5228934	Identifier	ap		5228662	0					
ANR	5228935	UnaryOperationExpression	& a -> right_size		5228662	1					
ANR	5228936	UnaryOperator	&		5228662	0					
ANR	5228937	PtrMemberAccess	a -> right_size		5228662	1					
ANR	5228938	Identifier	a		5228662	0					
ANR	5228939	Identifier	right_size		5228662	1					
ANR	5228940	BreakStatement	break ;	493:16:15202:15207	5228662	1	True				
ANR	5228941	IfStatement	"if ( CMP_SIZE ( b , node ) )"		5228662	2					
ANR	5228942	Condition	"CMP_SIZE ( b , node )"	495:16:15239:15255	5228662	0	True				
ANR	5228943	CallExpression	"CMP_SIZE ( b , node )"		5228662	0					
ANR	5228944	Callee	CMP_SIZE		5228662	0					
ANR	5228945	Identifier	CMP_SIZE		5228662	0					
ANR	5228946	ArgumentList	b		5228662	1					
ANR	5228947	Argument	b		5228662	0					
ANR	5228948	Identifier	b		5228662	0					
ANR	5228949	Argument	node		5228662	1					
ANR	5228950	Identifier	node		5228662	0					
ANR	5228951	CompoundStatement		65:35:2069:2069	5228662	1					
ANR	5228952	ExpressionStatement	c = b -> left_size	496:16:15276:15292	5228662	0	True				
ANR	5228953	AssignmentExpression	c = b -> left_size		5228662	0		=			
ANR	5228954	Identifier	c		5228662	0					
ANR	5228955	PtrMemberAccess	b -> left_size		5228662	1					
ANR	5228956	Identifier	b		5228662	0					
ANR	5228957	Identifier	left_size		5228662	1					
ANR	5228958	IfStatement	if ( c == NULL )		5228662	1					
ANR	5228959	Condition	c == NULL	497:20:15314:15322	5228662	0	True				
ANR	5228960	EqualityExpression	c == NULL		5228662	0		==			
ANR	5228961	Identifier	c		5228662	0					
ANR	5228962	Identifier	NULL		5228662	1					
ANR	5228963	CompoundStatement		67:31:2136:2136	5228662	1					
ANR	5228964	ExpressionStatement	ap = & b -> left_size	498:20:15347:15365	5228662	0	True				
ANR	5228965	AssignmentExpression	ap = & b -> left_size		5228662	0		=			
ANR	5228966	Identifier	ap		5228662	0					
ANR	5228967	UnaryOperationExpression	& b -> left_size		5228662	1					
ANR	5228968	UnaryOperator	&		5228662	0					
ANR	5228969	PtrMemberAccess	b -> left_size		5228662	1					
ANR	5228970	Identifier	b		5228662	0					
ANR	5228971	Identifier	left_size		5228662	1					
ANR	5228972	BreakStatement	break ;	499:20:15387:15392	5228662	1	True				
ANR	5228973	ExpressionStatement	* ap = c	506:16:15639:15646	5228662	2	True				
ANR	5228974	AssignmentExpression	* ap = c		5228662	0		=			
ANR	5228975	UnaryOperationExpression	* ap		5228662	0					
ANR	5228976	UnaryOperator	*		5228662	0					
ANR	5228977	Identifier	ap		5228662	1					
ANR	5228978	Identifier	c		5228662	1					
ANR	5228979	ExpressionStatement	a -> right_size = c -> left_size	507:16:15664:15692	5228662	3	True				
ANR	5228980	AssignmentExpression	a -> right_size = c -> left_size		5228662	0		=			
ANR	5228981	PtrMemberAccess	a -> right_size		5228662	0					
ANR	5228982	Identifier	a		5228662	0					
ANR	5228983	Identifier	right_size		5228662	1					
ANR	5228984	PtrMemberAccess	c -> left_size		5228662	1					
ANR	5228985	Identifier	c		5228662	0					
ANR	5228986	Identifier	left_size		5228662	1					
ANR	5228987	ExpressionStatement	b -> left_size = c -> right_size	508:16:15710:15739	5228662	4	True				
ANR	5228988	AssignmentExpression	b -> left_size = c -> right_size		5228662	0		=			
ANR	5228989	PtrMemberAccess	b -> left_size		5228662	0					
ANR	5228990	Identifier	b		5228662	0					
ANR	5228991	Identifier	left_size		5228662	1					
ANR	5228992	PtrMemberAccess	c -> right_size		5228662	1					
ANR	5228993	Identifier	c		5228662	0					
ANR	5228994	Identifier	right_size		5228662	1					
ANR	5228995	ExpressionStatement	c -> left_size = a	509:16:15757:15774	5228662	5	True				
ANR	5228996	AssignmentExpression	c -> left_size = a		5228662	0		=			
ANR	5228997	PtrMemberAccess	c -> left_size		5228662	0					
ANR	5228998	Identifier	c		5228662	0					
ANR	5228999	Identifier	left_size		5228662	1					
ANR	5229000	Identifier	a		5228662	1					
ANR	5229001	ExpressionStatement	c -> right_size = b	510:16:15792:15809	5228662	6	True				
ANR	5229002	AssignmentExpression	c -> right_size = b		5228662	0		=			
ANR	5229003	PtrMemberAccess	c -> right_size		5228662	0					
ANR	5229004	Identifier	c		5228662	0					
ANR	5229005	Identifier	right_size		5228662	1					
ANR	5229006	Identifier	b		5228662	1					
ANR	5229007	IfStatement	"if ( CMP_SIZE ( c , node ) )"		5228662	7					
ANR	5229008	Condition	"CMP_SIZE ( c , node )"	511:20:15831:15847	5228662	0	True				
ANR	5229009	CallExpression	"CMP_SIZE ( c , node )"		5228662	0					
ANR	5229010	Callee	CMP_SIZE		5228662	0					
ANR	5229011	Identifier	CMP_SIZE		5228662	0					
ANR	5229012	ArgumentList	c		5228662	1					
ANR	5229013	Argument	c		5228662	0					
ANR	5229014	Identifier	c		5228662	0					
ANR	5229015	Argument	node		5228662	1					
ANR	5229016	Identifier	node		5228662	0					
ANR	5229017	ExpressionStatement	ap = & a -> right_size	512:20:15870:15889	5228662	1	True				
ANR	5229018	AssignmentExpression	ap = & a -> right_size		5228662	0		=			
ANR	5229019	Identifier	ap		5228662	0					
ANR	5229020	UnaryOperationExpression	& a -> right_size		5228662	1					
ANR	5229021	UnaryOperator	&		5228662	0					
ANR	5229022	PtrMemberAccess	a -> right_size		5228662	1					
ANR	5229023	Identifier	a		5228662	0					
ANR	5229024	Identifier	right_size		5228662	1					
ANR	5229025	ElseStatement	else		5228662	0					
ANR	5229026	ExpressionStatement	ap = & b -> left_size	514:20:15932:15950	5228662	0	True				
ANR	5229027	AssignmentExpression	ap = & b -> left_size		5228662	0		=			
ANR	5229028	Identifier	ap		5228662	0					
ANR	5229029	UnaryOperationExpression	& b -> left_size		5228662	1					
ANR	5229030	UnaryOperator	&		5228662	0					
ANR	5229031	PtrMemberAccess	b -> left_size		5228662	1					
ANR	5229032	Identifier	b		5228662	0					
ANR	5229033	Identifier	left_size		5228662	1					
ANR	5229034	ElseStatement	else		5228662	0					
ANR	5229035	CompoundStatement		85:19:2782:2782	5228662	0					
ANR	5229036	ExpressionStatement	c = b -> right_size	516:16:15989:16006	5228662	0	True				
ANR	5229037	AssignmentExpression	c = b -> right_size		5228662	0		=			
ANR	5229038	Identifier	c		5228662	0					
ANR	5229039	PtrMemberAccess	b -> right_size		5228662	1					
ANR	5229040	Identifier	b		5228662	0					
ANR	5229041	Identifier	right_size		5228662	1					
ANR	5229042	IfStatement	if ( c == NULL )		5228662	1					
ANR	5229043	Condition	c == NULL	517:20:16028:16036	5228662	0	True				
ANR	5229044	EqualityExpression	c == NULL		5228662	0		==			
ANR	5229045	Identifier	c		5228662	0					
ANR	5229046	Identifier	NULL		5228662	1					
ANR	5229047	CompoundStatement		87:31:2850:2850	5228662	1					
ANR	5229048	ExpressionStatement	ap = & b -> right_size	518:20:16061:16080	5228662	0	True				
ANR	5229049	AssignmentExpression	ap = & b -> right_size		5228662	0		=			
ANR	5229050	Identifier	ap		5228662	0					
ANR	5229051	UnaryOperationExpression	& b -> right_size		5228662	1					
ANR	5229052	UnaryOperator	&		5228662	0					
ANR	5229053	PtrMemberAccess	b -> right_size		5228662	1					
ANR	5229054	Identifier	b		5228662	0					
ANR	5229055	Identifier	right_size		5228662	1					
ANR	5229056	BreakStatement	break ;	519:20:16102:16107	5228662	1	True				
ANR	5229057	ExpressionStatement	* ap = c	526:16:16365:16372	5228662	2	True				
ANR	5229058	AssignmentExpression	* ap = c		5228662	0		=			
ANR	5229059	UnaryOperationExpression	* ap		5228662	0					
ANR	5229060	UnaryOperator	*		5228662	0					
ANR	5229061	Identifier	ap		5228662	1					
ANR	5229062	Identifier	c		5228662	1					
ANR	5229063	ExpressionStatement	a -> right_size = b -> left_size	527:16:16390:16418	5228662	3	True				
ANR	5229064	AssignmentExpression	a -> right_size = b -> left_size		5228662	0		=			
ANR	5229065	PtrMemberAccess	a -> right_size		5228662	0					
ANR	5229066	Identifier	a		5228662	0					
ANR	5229067	Identifier	right_size		5228662	1					
ANR	5229068	PtrMemberAccess	b -> left_size		5228662	1					
ANR	5229069	Identifier	b		5228662	0					
ANR	5229070	Identifier	left_size		5228662	1					
ANR	5229071	ExpressionStatement	b -> right_size = c -> left_size	528:16:16436:16464	5228662	4	True				
ANR	5229072	AssignmentExpression	b -> right_size = c -> left_size		5228662	0		=			
ANR	5229073	PtrMemberAccess	b -> right_size		5228662	0					
ANR	5229074	Identifier	b		5228662	0					
ANR	5229075	Identifier	right_size		5228662	1					
ANR	5229076	PtrMemberAccess	c -> left_size		5228662	1					
ANR	5229077	Identifier	c		5228662	0					
ANR	5229078	Identifier	left_size		5228662	1					
ANR	5229079	ExpressionStatement	b -> left_size = a	529:16:16482:16499	5228662	5	True				
ANR	5229080	AssignmentExpression	b -> left_size = a		5228662	0		=			
ANR	5229081	PtrMemberAccess	b -> left_size		5228662	0					
ANR	5229082	Identifier	b		5228662	0					
ANR	5229083	Identifier	left_size		5228662	1					
ANR	5229084	Identifier	a		5228662	1					
ANR	5229085	ExpressionStatement	c -> left_size = b	530:16:16517:16534	5228662	6	True				
ANR	5229086	AssignmentExpression	c -> left_size = b		5228662	0		=			
ANR	5229087	PtrMemberAccess	c -> left_size		5228662	0					
ANR	5229088	Identifier	c		5228662	0					
ANR	5229089	Identifier	left_size		5228662	1					
ANR	5229090	Identifier	b		5228662	1					
ANR	5229091	IfStatement	"if ( CMP_SIZE ( c , node ) )"		5228662	7					
ANR	5229092	Condition	"CMP_SIZE ( c , node )"	531:20:16556:16572	5228662	0	True				
ANR	5229093	CallExpression	"CMP_SIZE ( c , node )"		5228662	0					
ANR	5229094	Callee	CMP_SIZE		5228662	0					
ANR	5229095	Identifier	CMP_SIZE		5228662	0					
ANR	5229096	ArgumentList	c		5228662	1					
ANR	5229097	Argument	c		5228662	0					
ANR	5229098	Identifier	c		5228662	0					
ANR	5229099	Argument	node		5228662	1					
ANR	5229100	Identifier	node		5228662	0					
ANR	5229101	ExpressionStatement	ap = & b -> right_size	532:20:16595:16614	5228662	1	True				
ANR	5229102	AssignmentExpression	ap = & b -> right_size		5228662	0		=			
ANR	5229103	Identifier	ap		5228662	0					
ANR	5229104	UnaryOperationExpression	& b -> right_size		5228662	1					
ANR	5229105	UnaryOperator	&		5228662	0					
ANR	5229106	PtrMemberAccess	b -> right_size		5228662	1					
ANR	5229107	Identifier	b		5228662	0					
ANR	5229108	Identifier	right_size		5228662	1					
ANR	5229109	ElseStatement	else		5228662	0					
ANR	5229110	ExpressionStatement	ap = & c -> right_size	534:20:16657:16676	5228662	0	True				
ANR	5229111	AssignmentExpression	ap = & c -> right_size		5228662	0		=			
ANR	5229112	Identifier	ap		5228662	0					
ANR	5229113	UnaryOperationExpression	& c -> right_size		5228662	1					
ANR	5229114	UnaryOperator	&		5228662	0					
ANR	5229115	PtrMemberAccess	c -> right_size		5228662	1					
ANR	5229116	Identifier	c		5228662	0					
ANR	5229117	Identifier	right_size		5228662	1					
ANR	5229118	ExpressionStatement	* ap = node	538:4:16712:16722	5228662	6	True				
ANR	5229119	AssignmentExpression	* ap = node		5228662	0		=			
ANR	5229120	UnaryOperationExpression	* ap		5228662	0					
ANR	5229121	UnaryOperator	*		5228662	0					
ANR	5229122	Identifier	ap		5228662	1					
ANR	5229123	Identifier	node		5228662	1					
ANR	5229124	ReturnType	static void		5228662	1					
ANR	5229125	Identifier	insert_free_size		5228662	2					
ANR	5229126	ParameterList	"gs_memory_chunk_t * cmem , chunk_free_node_t * node"		5228662	3					
ANR	5229127	Parameter	gs_memory_chunk_t * cmem	430:29:13138:13160	5228662	0	True				
ANR	5229128	ParameterType	gs_memory_chunk_t *		5228662	0					
ANR	5229129	Identifier	cmem		5228662	1					
ANR	5229130	Parameter	chunk_free_node_t * node	430:54:13163:13185	5228662	1	True				
ANR	5229131	ParameterType	chunk_free_node_t *		5228662	0					
ANR	5229132	Identifier	node		5228662	1					
ANR	5229133	CFGEntryNode	ENTRY		5228662		True				
ANR	5229134	CFGExitNode	EXIT		5228662		True				
ANR	5229135	Symbol	& b -> right_size		5228662						
ANR	5229136	Symbol	c -> right_size		5228662						
ANR	5229137	Symbol	node -> left_size		5228662						
ANR	5229138	Symbol	* node		5228662						
ANR	5229139	Symbol	a -> right_size		5228662						
ANR	5229140	Symbol	a -> left_size		5228662						
ANR	5229141	Symbol	a		5228662						
ANR	5229142	Symbol	b		5228662						
ANR	5229143	Symbol	c -> left_size		5228662						
ANR	5229144	Symbol	c		5228662						
ANR	5229145	Symbol	NULL		5228662						
ANR	5229146	Symbol	& a -> right_size		5228662						
ANR	5229147	Symbol	& c -> right_size		5228662						
ANR	5229148	Symbol	CMP_SIZE		5228662						
ANR	5229149	Symbol	* a		5228662						
ANR	5229150	Symbol	* b		5228662						
ANR	5229151	Symbol	* c		5228662						
ANR	5229152	Symbol	ap		5228662						
ANR	5229153	Symbol	b -> left_size		5228662						
ANR	5229154	Symbol	node		5228662						
ANR	5229155	Symbol	& cmem -> free_size		5228662						
ANR	5229156	Symbol	b -> right_size		5228662						
ANR	5229157	Symbol	* ap		5228662						
ANR	5229158	Symbol	& c -> left_size		5228662						
ANR	5229159	Symbol	& b -> left_size		5228662						
ANR	5229160	Symbol	cmem		5228662						
ANR	5229161	Symbol	node -> right_size		5228662						
ANR	5229162	Symbol	& a -> left_size		5228662						
ANR	5229163	Function	insert_free_loc	541:0:16727:20232							
ANR	5229164	FunctionDef	"insert_free_loc (gs_memory_chunk_t * cmem , chunk_free_node_t * node)"		5229163	0					
ANR	5229165	CompoundStatement		542:0:16805:20232	5229163	0					
ANR	5229166	IdentifierDeclStatement	chunk_free_node_t * * ap ;	543:4:16811:16833	5229163	0	True				
ANR	5229167	IdentifierDecl	* * ap		5229163	0					
ANR	5229168	IdentifierDeclType	chunk_free_node_t * *		5229163	0					
ANR	5229169	Identifier	ap		5229163	1					
ANR	5229170	IdentifierDeclStatement	"chunk_free_node_t * a , * b , * c ;"	544:4:16839:16867	5229163	1	True				
ANR	5229171	IdentifierDecl	* a		5229163	0					
ANR	5229172	IdentifierDeclType	chunk_free_node_t *		5229163	0					
ANR	5229173	Identifier	a		5229163	1					
ANR	5229174	IdentifierDecl	* b		5229163	1					
ANR	5229175	IdentifierDeclType	chunk_free_node_t *		5229163	0					
ANR	5229176	Identifier	b		5229163	1					
ANR	5229177	IdentifierDecl	* c		5229163	2					
ANR	5229178	IdentifierDeclType	chunk_free_node_t *		5229163	0					
ANR	5229179	Identifier	c		5229163	1					
ANR	5229180	ExpressionStatement	node -> left_loc = NULL	546:4:16874:16897	5229163	2	True				
ANR	5229181	AssignmentExpression	node -> left_loc = NULL		5229163	0		=			
ANR	5229182	PtrMemberAccess	node -> left_loc		5229163	0					
ANR	5229183	Identifier	node		5229163	0					
ANR	5229184	Identifier	left_loc		5229163	1					
ANR	5229185	Identifier	NULL		5229163	1					
ANR	5229186	ExpressionStatement	node -> right_loc = NULL	547:4:16903:16926	5229163	3	True				
ANR	5229187	AssignmentExpression	node -> right_loc = NULL		5229163	0		=			
ANR	5229188	PtrMemberAccess	node -> right_loc		5229163	0					
ANR	5229189	Identifier	node		5229163	0					
ANR	5229190	Identifier	right_loc		5229163	1					
ANR	5229191	Identifier	NULL		5229163	1					
ANR	5229192	ExpressionStatement	ap = & cmem -> free_loc	550:4:16959:16979	5229163	4	True				
ANR	5229193	AssignmentExpression	ap = & cmem -> free_loc		5229163	0		=			
ANR	5229194	Identifier	ap		5229163	0					
ANR	5229195	UnaryOperationExpression	& cmem -> free_loc		5229163	1					
ANR	5229196	UnaryOperator	&		5229163	0					
ANR	5229197	PtrMemberAccess	cmem -> free_loc		5229163	1					
ANR	5229198	Identifier	cmem		5229163	0					
ANR	5229199	Identifier	free_loc		5229163	1					
ANR	5229200	WhileStatement	while ( ( a = * ap ) != NULL )		5229163	5					
ANR	5229201	Condition	( a = * ap ) != NULL	551:11:16992:17008	5229163	0	True				
ANR	5229202	EqualityExpression	( a = * ap ) != NULL		5229163	0		!=			
ANR	5229203	AssignmentExpression	a = * ap		5229163	0		=			
ANR	5229204	Identifier	a		5229163	0					
ANR	5229205	UnaryOperationExpression	* ap		5229163	1					
ANR	5229206	UnaryOperator	*		5229163	0					
ANR	5229207	Identifier	ap		5229163	1					
ANR	5229208	Identifier	NULL		5229163	1					
ANR	5229209	CompoundStatement		10:30:205:205	5229163	1					
ANR	5229210	IfStatement	if ( a > node )		5229163	0					
ANR	5229211	Condition	a > node	552:12:17025:17032	5229163	0	True				
ANR	5229212	RelationalExpression	a > node		5229163	0		>			
ANR	5229213	Identifier	a		5229163	0					
ANR	5229214	Identifier	node		5229163	1					
ANR	5229215	CompoundStatement		11:22:229:229	5229163	1					
ANR	5229216	ExpressionStatement	b = a -> left_loc	553:12:17049:17064	5229163	0	True				
ANR	5229217	AssignmentExpression	b = a -> left_loc		5229163	0		=			
ANR	5229218	Identifier	b		5229163	0					
ANR	5229219	PtrMemberAccess	a -> left_loc		5229163	1					
ANR	5229220	Identifier	a		5229163	0					
ANR	5229221	Identifier	left_loc		5229163	1					
ANR	5229222	IfStatement	if ( b == NULL )		5229163	1					
ANR	5229223	Condition	b == NULL	554:16:17082:17090	5229163	0	True				
ANR	5229224	EqualityExpression	b == NULL		5229163	0		==			
ANR	5229225	Identifier	b		5229163	0					
ANR	5229226	Identifier	NULL		5229163	1					
ANR	5229227	CompoundStatement		13:27:287:287	5229163	1					
ANR	5229228	ExpressionStatement	ap = & a -> left_loc	555:16:17111:17128	5229163	0	True				
ANR	5229229	AssignmentExpression	ap = & a -> left_loc		5229163	0		=			
ANR	5229230	Identifier	ap		5229163	0					
ANR	5229231	UnaryOperationExpression	& a -> left_loc		5229163	1					
ANR	5229232	UnaryOperator	&		5229163	0					
ANR	5229233	PtrMemberAccess	a -> left_loc		5229163	1					
ANR	5229234	Identifier	a		5229163	0					
ANR	5229235	Identifier	left_loc		5229163	1					
ANR	5229236	BreakStatement	break ;	556:16:17146:17151	5229163	1	True				
ANR	5229237	IfStatement	if ( b > node )		5229163	2					
ANR	5229238	Condition	b > node	558:16:17204:17211	5229163	0	True				
ANR	5229239	RelationalExpression	b > node		5229163	0		>			
ANR	5229240	Identifier	b		5229163	0					
ANR	5229241	Identifier	node		5229163	1					
ANR	5229242	CompoundStatement		17:26:408:408	5229163	1					
ANR	5229243	ExpressionStatement	c = b -> left_loc	559:16:17232:17247	5229163	0	True				
ANR	5229244	AssignmentExpression	c = b -> left_loc		5229163	0		=			
ANR	5229245	Identifier	c		5229163	0					
ANR	5229246	PtrMemberAccess	b -> left_loc		5229163	1					
ANR	5229247	Identifier	b		5229163	0					
ANR	5229248	Identifier	left_loc		5229163	1					
ANR	5229249	IfStatement	if ( c == NULL )		5229163	1					
ANR	5229250	Condition	c == NULL	560:20:17269:17277	5229163	0	True				
ANR	5229251	EqualityExpression	c == NULL		5229163	0		==			
ANR	5229252	Identifier	c		5229163	0					
ANR	5229253	Identifier	NULL		5229163	1					
ANR	5229254	CompoundStatement		19:31:474:474	5229163	1					
ANR	5229255	ExpressionStatement	ap = & b -> left_loc	561:20:17302:17319	5229163	0	True				
ANR	5229256	AssignmentExpression	ap = & b -> left_loc		5229163	0		=			
ANR	5229257	Identifier	ap		5229163	0					
ANR	5229258	UnaryOperationExpression	& b -> left_loc		5229163	1					
ANR	5229259	UnaryOperator	&		5229163	0					
ANR	5229260	PtrMemberAccess	b -> left_loc		5229163	1					
ANR	5229261	Identifier	b		5229163	0					
ANR	5229262	Identifier	left_loc		5229163	1					
ANR	5229263	BreakStatement	break ;	562:20:17341:17346	5229163	1	True				
ANR	5229264	ExpressionStatement	* ap = c	569:16:17612:17619	5229163	2	True				
ANR	5229265	AssignmentExpression	* ap = c		5229163	0		=			
ANR	5229266	UnaryOperationExpression	* ap		5229163	0					
ANR	5229267	UnaryOperator	*		5229163	0					
ANR	5229268	Identifier	ap		5229163	1					
ANR	5229269	Identifier	c		5229163	1					
ANR	5229270	ExpressionStatement	a -> left_loc = b -> right_loc	570:16:17637:17664	5229163	3	True				
ANR	5229271	AssignmentExpression	a -> left_loc = b -> right_loc		5229163	0		=			
ANR	5229272	PtrMemberAccess	a -> left_loc		5229163	0					
ANR	5229273	Identifier	a		5229163	0					
ANR	5229274	Identifier	left_loc		5229163	1					
ANR	5229275	PtrMemberAccess	b -> right_loc		5229163	1					
ANR	5229276	Identifier	b		5229163	0					
ANR	5229277	Identifier	right_loc		5229163	1					
ANR	5229278	ExpressionStatement	b -> left_loc = c -> right_loc	571:16:17682:17709	5229163	4	True				
ANR	5229279	AssignmentExpression	b -> left_loc = c -> right_loc		5229163	0		=			
ANR	5229280	PtrMemberAccess	b -> left_loc		5229163	0					
ANR	5229281	Identifier	b		5229163	0					
ANR	5229282	Identifier	left_loc		5229163	1					
ANR	5229283	PtrMemberAccess	c -> right_loc		5229163	1					
ANR	5229284	Identifier	c		5229163	0					
ANR	5229285	Identifier	right_loc		5229163	1					
ANR	5229286	ExpressionStatement	b -> right_loc = a	572:16:17727:17743	5229163	5	True				
ANR	5229287	AssignmentExpression	b -> right_loc = a		5229163	0		=			
ANR	5229288	PtrMemberAccess	b -> right_loc		5229163	0					
ANR	5229289	Identifier	b		5229163	0					
ANR	5229290	Identifier	right_loc		5229163	1					
ANR	5229291	Identifier	a		5229163	1					
ANR	5229292	ExpressionStatement	c -> right_loc = b	573:16:17761:17777	5229163	6	True				
ANR	5229293	AssignmentExpression	c -> right_loc = b		5229163	0		=			
ANR	5229294	PtrMemberAccess	c -> right_loc		5229163	0					
ANR	5229295	Identifier	c		5229163	0					
ANR	5229296	Identifier	right_loc		5229163	1					
ANR	5229297	Identifier	b		5229163	1					
ANR	5229298	IfStatement	if ( c > node )		5229163	7					
ANR	5229299	Condition	c > node	574:20:17799:17806	5229163	0	True				
ANR	5229300	RelationalExpression	c > node		5229163	0		>			
ANR	5229301	Identifier	c		5229163	0					
ANR	5229302	Identifier	node		5229163	1					
ANR	5229303	ExpressionStatement	ap = & c -> left_loc	575:20:17829:17846	5229163	1	True				
ANR	5229304	AssignmentExpression	ap = & c -> left_loc		5229163	0		=			
ANR	5229305	Identifier	ap		5229163	0					
ANR	5229306	UnaryOperationExpression	& c -> left_loc		5229163	1					
ANR	5229307	UnaryOperator	&		5229163	0					
ANR	5229308	PtrMemberAccess	c -> left_loc		5229163	1					
ANR	5229309	Identifier	c		5229163	0					
ANR	5229310	Identifier	left_loc		5229163	1					
ANR	5229311	ElseStatement	else		5229163	0					
ANR	5229312	ExpressionStatement	ap = & b -> left_loc	577:20:17889:17906	5229163	0	True				
ANR	5229313	AssignmentExpression	ap = & b -> left_loc		5229163	0		=			
ANR	5229314	Identifier	ap		5229163	0					
ANR	5229315	UnaryOperationExpression	& b -> left_loc		5229163	1					
ANR	5229316	UnaryOperator	&		5229163	0					
ANR	5229317	PtrMemberAccess	b -> left_loc		5229163	1					
ANR	5229318	Identifier	b		5229163	0					
ANR	5229319	Identifier	left_loc		5229163	1					
ANR	5229320	ElseStatement	else		5229163	0					
ANR	5229321	CompoundStatement		37:19:1121:1121	5229163	0					
ANR	5229322	ExpressionStatement	c = b -> right_loc	579:16:17945:17961	5229163	0	True				
ANR	5229323	AssignmentExpression	c = b -> right_loc		5229163	0		=			
ANR	5229324	Identifier	c		5229163	0					
ANR	5229325	PtrMemberAccess	b -> right_loc		5229163	1					
ANR	5229326	Identifier	b		5229163	0					
ANR	5229327	Identifier	right_loc		5229163	1					
ANR	5229328	IfStatement	if ( c == NULL )		5229163	1					
ANR	5229329	Condition	c == NULL	580:20:17983:17991	5229163	0	True				
ANR	5229330	EqualityExpression	c == NULL		5229163	0		==			
ANR	5229331	Identifier	c		5229163	0					
ANR	5229332	Identifier	NULL		5229163	1					
ANR	5229333	CompoundStatement		39:31:1188:1188	5229163	1					
ANR	5229334	ExpressionStatement	ap = & b -> right_loc	581:20:18016:18034	5229163	0	True				
ANR	5229335	AssignmentExpression	ap = & b -> right_loc		5229163	0		=			
ANR	5229336	Identifier	ap		5229163	0					
ANR	5229337	UnaryOperationExpression	& b -> right_loc		5229163	1					
ANR	5229338	UnaryOperator	&		5229163	0					
ANR	5229339	PtrMemberAccess	b -> right_loc		5229163	1					
ANR	5229340	Identifier	b		5229163	0					
ANR	5229341	Identifier	right_loc		5229163	1					
ANR	5229342	BreakStatement	break ;	582:20:18056:18061	5229163	1	True				
ANR	5229343	ExpressionStatement	* ap = c	589:16:18307:18314	5229163	2	True				
ANR	5229344	AssignmentExpression	* ap = c		5229163	0		=			
ANR	5229345	UnaryOperationExpression	* ap		5229163	0					
ANR	5229346	UnaryOperator	*		5229163	0					
ANR	5229347	Identifier	ap		5229163	1					
ANR	5229348	Identifier	c		5229163	1					
ANR	5229349	ExpressionStatement	a -> left_loc = c -> right_loc	590:16:18332:18359	5229163	3	True				
ANR	5229350	AssignmentExpression	a -> left_loc = c -> right_loc		5229163	0		=			
ANR	5229351	PtrMemberAccess	a -> left_loc		5229163	0					
ANR	5229352	Identifier	a		5229163	0					
ANR	5229353	Identifier	left_loc		5229163	1					
ANR	5229354	PtrMemberAccess	c -> right_loc		5229163	1					
ANR	5229355	Identifier	c		5229163	0					
ANR	5229356	Identifier	right_loc		5229163	1					
ANR	5229357	ExpressionStatement	b -> right_loc = c -> left_loc	591:16:18377:18403	5229163	4	True				
ANR	5229358	AssignmentExpression	b -> right_loc = c -> left_loc		5229163	0		=			
ANR	5229359	PtrMemberAccess	b -> right_loc		5229163	0					
ANR	5229360	Identifier	b		5229163	0					
ANR	5229361	Identifier	right_loc		5229163	1					
ANR	5229362	PtrMemberAccess	c -> left_loc		5229163	1					
ANR	5229363	Identifier	c		5229163	0					
ANR	5229364	Identifier	left_loc		5229163	1					
ANR	5229365	ExpressionStatement	c -> left_loc = b	592:16:18421:18437	5229163	5	True				
ANR	5229366	AssignmentExpression	c -> left_loc = b		5229163	0		=			
ANR	5229367	PtrMemberAccess	c -> left_loc		5229163	0					
ANR	5229368	Identifier	c		5229163	0					
ANR	5229369	Identifier	left_loc		5229163	1					
ANR	5229370	Identifier	b		5229163	1					
ANR	5229371	ExpressionStatement	c -> right_loc = a	593:16:18455:18471	5229163	6	True				
ANR	5229372	AssignmentExpression	c -> right_loc = a		5229163	0		=			
ANR	5229373	PtrMemberAccess	c -> right_loc		5229163	0					
ANR	5229374	Identifier	c		5229163	0					
ANR	5229375	Identifier	right_loc		5229163	1					
ANR	5229376	Identifier	a		5229163	1					
ANR	5229377	IfStatement	if ( c > node )		5229163	7					
ANR	5229378	Condition	c > node	594:20:18493:18500	5229163	0	True				
ANR	5229379	RelationalExpression	c > node		5229163	0		>			
ANR	5229380	Identifier	c		5229163	0					
ANR	5229381	Identifier	node		5229163	1					
ANR	5229382	ExpressionStatement	ap = & b -> right_loc	595:20:18523:18541	5229163	1	True				
ANR	5229383	AssignmentExpression	ap = & b -> right_loc		5229163	0		=			
ANR	5229384	Identifier	ap		5229163	0					
ANR	5229385	UnaryOperationExpression	& b -> right_loc		5229163	1					
ANR	5229386	UnaryOperator	&		5229163	0					
ANR	5229387	PtrMemberAccess	b -> right_loc		5229163	1					
ANR	5229388	Identifier	b		5229163	0					
ANR	5229389	Identifier	right_loc		5229163	1					
ANR	5229390	ElseStatement	else		5229163	0					
ANR	5229391	ExpressionStatement	ap = & a -> left_loc	597:20:18584:18601	5229163	0	True				
ANR	5229392	AssignmentExpression	ap = & a -> left_loc		5229163	0		=			
ANR	5229393	Identifier	ap		5229163	0					
ANR	5229394	UnaryOperationExpression	& a -> left_loc		5229163	1					
ANR	5229395	UnaryOperator	&		5229163	0					
ANR	5229396	PtrMemberAccess	a -> left_loc		5229163	1					
ANR	5229397	Identifier	a		5229163	0					
ANR	5229398	Identifier	left_loc		5229163	1					
ANR	5229399	ElseStatement	else		5229163	0					
ANR	5229400	CompoundStatement		58:15:1826:1826	5229163	0					
ANR	5229401	ExpressionStatement	b = a -> right_loc	600:12:18646:18662	5229163	0	True				
ANR	5229402	AssignmentExpression	b = a -> right_loc		5229163	0		=			
ANR	5229403	Identifier	b		5229163	0					
ANR	5229404	PtrMemberAccess	a -> right_loc		5229163	1					
ANR	5229405	Identifier	a		5229163	0					
ANR	5229406	Identifier	right_loc		5229163	1					
ANR	5229407	IfStatement	if ( b == NULL )		5229163	1					
ANR	5229408	Condition	b == NULL	601:16:18680:18688	5229163	0	True				
ANR	5229409	EqualityExpression	b == NULL		5229163	0		==			
ANR	5229410	Identifier	b		5229163	0					
ANR	5229411	Identifier	NULL		5229163	1					
ANR	5229412	CompoundStatement		61:12:1897:1897	5229163	1					
ANR	5229413	ExpressionStatement	ap = & a -> right_loc	603:16:18721:18739	5229163	0	True				
ANR	5229414	AssignmentExpression	ap = & a -> right_loc		5229163	0		=			
ANR	5229415	Identifier	ap		5229163	0					
ANR	5229416	UnaryOperationExpression	& a -> right_loc		5229163	1					
ANR	5229417	UnaryOperator	&		5229163	0					
ANR	5229418	PtrMemberAccess	a -> right_loc		5229163	1					
ANR	5229419	Identifier	a		5229163	0					
ANR	5229420	Identifier	right_loc		5229163	1					
ANR	5229421	BreakStatement	break ;	604:16:18757:18762	5229163	1	True				
ANR	5229422	IfStatement	if ( b > node )		5229163	2					
ANR	5229423	Condition	b > node	606:16:18794:18801	5229163	0	True				
ANR	5229424	RelationalExpression	b > node		5229163	0		>			
ANR	5229425	Identifier	b		5229163	0					
ANR	5229426	Identifier	node		5229163	1					
ANR	5229427	CompoundStatement		65:26:1998:1998	5229163	1					
ANR	5229428	ExpressionStatement	c = b -> left_loc	607:16:18822:18837	5229163	0	True				
ANR	5229429	AssignmentExpression	c = b -> left_loc		5229163	0		=			
ANR	5229430	Identifier	c		5229163	0					
ANR	5229431	PtrMemberAccess	b -> left_loc		5229163	1					
ANR	5229432	Identifier	b		5229163	0					
ANR	5229433	Identifier	left_loc		5229163	1					
ANR	5229434	IfStatement	if ( c == NULL )		5229163	1					
ANR	5229435	Condition	c == NULL	608:20:18859:18867	5229163	0	True				
ANR	5229436	EqualityExpression	c == NULL		5229163	0		==			
ANR	5229437	Identifier	c		5229163	0					
ANR	5229438	Identifier	NULL		5229163	1					
ANR	5229439	CompoundStatement		67:31:2064:2064	5229163	1					
ANR	5229440	ExpressionStatement	ap = & b -> left_loc	609:20:18892:18909	5229163	0	True				
ANR	5229441	AssignmentExpression	ap = & b -> left_loc		5229163	0		=			
ANR	5229442	Identifier	ap		5229163	0					
ANR	5229443	UnaryOperationExpression	& b -> left_loc		5229163	1					
ANR	5229444	UnaryOperator	&		5229163	0					
ANR	5229445	PtrMemberAccess	b -> left_loc		5229163	1					
ANR	5229446	Identifier	b		5229163	0					
ANR	5229447	Identifier	left_loc		5229163	1					
ANR	5229448	BreakStatement	break ;	610:20:18931:18936	5229163	1	True				
ANR	5229449	ExpressionStatement	* ap = c	617:16:19183:19190	5229163	2	True				
ANR	5229450	AssignmentExpression	* ap = c		5229163	0		=			
ANR	5229451	UnaryOperationExpression	* ap		5229163	0					
ANR	5229452	UnaryOperator	*		5229163	0					
ANR	5229453	Identifier	ap		5229163	1					
ANR	5229454	Identifier	c		5229163	1					
ANR	5229455	ExpressionStatement	a -> right_loc = c -> left_loc	618:16:19208:19234	5229163	3	True				
ANR	5229456	AssignmentExpression	a -> right_loc = c -> left_loc		5229163	0		=			
ANR	5229457	PtrMemberAccess	a -> right_loc		5229163	0					
ANR	5229458	Identifier	a		5229163	0					
ANR	5229459	Identifier	right_loc		5229163	1					
ANR	5229460	PtrMemberAccess	c -> left_loc		5229163	1					
ANR	5229461	Identifier	c		5229163	0					
ANR	5229462	Identifier	left_loc		5229163	1					
ANR	5229463	ExpressionStatement	b -> left_loc = c -> right_loc	619:16:19252:19279	5229163	4	True				
ANR	5229464	AssignmentExpression	b -> left_loc = c -> right_loc		5229163	0		=			
ANR	5229465	PtrMemberAccess	b -> left_loc		5229163	0					
ANR	5229466	Identifier	b		5229163	0					
ANR	5229467	Identifier	left_loc		5229163	1					
ANR	5229468	PtrMemberAccess	c -> right_loc		5229163	1					
ANR	5229469	Identifier	c		5229163	0					
ANR	5229470	Identifier	right_loc		5229163	1					
ANR	5229471	ExpressionStatement	c -> left_loc = a	620:16:19297:19313	5229163	5	True				
ANR	5229472	AssignmentExpression	c -> left_loc = a		5229163	0		=			
ANR	5229473	PtrMemberAccess	c -> left_loc		5229163	0					
ANR	5229474	Identifier	c		5229163	0					
ANR	5229475	Identifier	left_loc		5229163	1					
ANR	5229476	Identifier	a		5229163	1					
ANR	5229477	ExpressionStatement	c -> right_loc = b	621:16:19331:19347	5229163	6	True				
ANR	5229478	AssignmentExpression	c -> right_loc = b		5229163	0		=			
ANR	5229479	PtrMemberAccess	c -> right_loc		5229163	0					
ANR	5229480	Identifier	c		5229163	0					
ANR	5229481	Identifier	right_loc		5229163	1					
ANR	5229482	Identifier	b		5229163	1					
ANR	5229483	IfStatement	if ( c > node )		5229163	7					
ANR	5229484	Condition	c > node	622:20:19369:19376	5229163	0	True				
ANR	5229485	RelationalExpression	c > node		5229163	0		>			
ANR	5229486	Identifier	c		5229163	0					
ANR	5229487	Identifier	node		5229163	1					
ANR	5229488	ExpressionStatement	ap = & a -> right_loc	623:20:19399:19417	5229163	1	True				
ANR	5229489	AssignmentExpression	ap = & a -> right_loc		5229163	0		=			
ANR	5229490	Identifier	ap		5229163	0					
ANR	5229491	UnaryOperationExpression	& a -> right_loc		5229163	1					
ANR	5229492	UnaryOperator	&		5229163	0					
ANR	5229493	PtrMemberAccess	a -> right_loc		5229163	1					
ANR	5229494	Identifier	a		5229163	0					
ANR	5229495	Identifier	right_loc		5229163	1					
ANR	5229496	ElseStatement	else		5229163	0					
ANR	5229497	ExpressionStatement	ap = & b -> left_loc	625:20:19460:19477	5229163	0	True				
ANR	5229498	AssignmentExpression	ap = & b -> left_loc		5229163	0		=			
ANR	5229499	Identifier	ap		5229163	0					
ANR	5229500	UnaryOperationExpression	& b -> left_loc		5229163	1					
ANR	5229501	UnaryOperator	&		5229163	0					
ANR	5229502	PtrMemberAccess	b -> left_loc		5229163	1					
ANR	5229503	Identifier	b		5229163	0					
ANR	5229504	Identifier	left_loc		5229163	1					
ANR	5229505	ElseStatement	else		5229163	0					
ANR	5229506	CompoundStatement		85:19:2692:2692	5229163	0					
ANR	5229507	ExpressionStatement	c = b -> right_loc	627:16:19516:19532	5229163	0	True				
ANR	5229508	AssignmentExpression	c = b -> right_loc		5229163	0		=			
ANR	5229509	Identifier	c		5229163	0					
ANR	5229510	PtrMemberAccess	b -> right_loc		5229163	1					
ANR	5229511	Identifier	b		5229163	0					
ANR	5229512	Identifier	right_loc		5229163	1					
ANR	5229513	IfStatement	if ( c == NULL )		5229163	1					
ANR	5229514	Condition	c == NULL	628:20:19554:19562	5229163	0	True				
ANR	5229515	EqualityExpression	c == NULL		5229163	0		==			
ANR	5229516	Identifier	c		5229163	0					
ANR	5229517	Identifier	NULL		5229163	1					
ANR	5229518	CompoundStatement		87:31:2759:2759	5229163	1					
ANR	5229519	ExpressionStatement	ap = & b -> right_loc	629:20:19587:19605	5229163	0	True				
ANR	5229520	AssignmentExpression	ap = & b -> right_loc		5229163	0		=			
ANR	5229521	Identifier	ap		5229163	0					
ANR	5229522	UnaryOperationExpression	& b -> right_loc		5229163	1					
ANR	5229523	UnaryOperator	&		5229163	0					
ANR	5229524	PtrMemberAccess	b -> right_loc		5229163	1					
ANR	5229525	Identifier	b		5229163	0					
ANR	5229526	Identifier	right_loc		5229163	1					
ANR	5229527	BreakStatement	break ;	630:20:19627:19632	5229163	1	True				
ANR	5229528	ExpressionStatement	* ap = c	637:16:19890:19897	5229163	2	True				
ANR	5229529	AssignmentExpression	* ap = c		5229163	0		=			
ANR	5229530	UnaryOperationExpression	* ap		5229163	0					
ANR	5229531	UnaryOperator	*		5229163	0					
ANR	5229532	Identifier	ap		5229163	1					
ANR	5229533	Identifier	c		5229163	1					
ANR	5229534	ExpressionStatement	a -> right_loc = b -> left_loc	638:16:19915:19941	5229163	3	True				
ANR	5229535	AssignmentExpression	a -> right_loc = b -> left_loc		5229163	0		=			
ANR	5229536	PtrMemberAccess	a -> right_loc		5229163	0					
ANR	5229537	Identifier	a		5229163	0					
ANR	5229538	Identifier	right_loc		5229163	1					
ANR	5229539	PtrMemberAccess	b -> left_loc		5229163	1					
ANR	5229540	Identifier	b		5229163	0					
ANR	5229541	Identifier	left_loc		5229163	1					
ANR	5229542	ExpressionStatement	b -> right_loc = c -> left_loc	639:16:19959:19985	5229163	4	True				
ANR	5229543	AssignmentExpression	b -> right_loc = c -> left_loc		5229163	0		=			
ANR	5229544	PtrMemberAccess	b -> right_loc		5229163	0					
ANR	5229545	Identifier	b		5229163	0					
ANR	5229546	Identifier	right_loc		5229163	1					
ANR	5229547	PtrMemberAccess	c -> left_loc		5229163	1					
ANR	5229548	Identifier	c		5229163	0					
ANR	5229549	Identifier	left_loc		5229163	1					
ANR	5229550	ExpressionStatement	b -> left_loc = a	640:16:20003:20019	5229163	5	True				
ANR	5229551	AssignmentExpression	b -> left_loc = a		5229163	0		=			
ANR	5229552	PtrMemberAccess	b -> left_loc		5229163	0					
ANR	5229553	Identifier	b		5229163	0					
ANR	5229554	Identifier	left_loc		5229163	1					
ANR	5229555	Identifier	a		5229163	1					
ANR	5229556	ExpressionStatement	c -> left_loc = b	641:16:20037:20053	5229163	6	True				
ANR	5229557	AssignmentExpression	c -> left_loc = b		5229163	0		=			
ANR	5229558	PtrMemberAccess	c -> left_loc		5229163	0					
ANR	5229559	Identifier	c		5229163	0					
ANR	5229560	Identifier	left_loc		5229163	1					
ANR	5229561	Identifier	b		5229163	1					
ANR	5229562	IfStatement	if ( c > node )		5229163	7					
ANR	5229563	Condition	c > node	642:20:20075:20082	5229163	0	True				
ANR	5229564	RelationalExpression	c > node		5229163	0		>			
ANR	5229565	Identifier	c		5229163	0					
ANR	5229566	Identifier	node		5229163	1					
ANR	5229567	ExpressionStatement	ap = & b -> right_loc	643:20:20105:20123	5229163	1	True				
ANR	5229568	AssignmentExpression	ap = & b -> right_loc		5229163	0		=			
ANR	5229569	Identifier	ap		5229163	0					
ANR	5229570	UnaryOperationExpression	& b -> right_loc		5229163	1					
ANR	5229571	UnaryOperator	&		5229163	0					
ANR	5229572	PtrMemberAccess	b -> right_loc		5229163	1					
ANR	5229573	Identifier	b		5229163	0					
ANR	5229574	Identifier	right_loc		5229163	1					
ANR	5229575	ElseStatement	else		5229163	0					
ANR	5229576	ExpressionStatement	ap = & c -> right_loc	645:20:20166:20184	5229163	0	True				
ANR	5229577	AssignmentExpression	ap = & c -> right_loc		5229163	0		=			
ANR	5229578	Identifier	ap		5229163	0					
ANR	5229579	UnaryOperationExpression	& c -> right_loc		5229163	1					
ANR	5229580	UnaryOperator	&		5229163	0					
ANR	5229581	PtrMemberAccess	c -> right_loc		5229163	1					
ANR	5229582	Identifier	c		5229163	0					
ANR	5229583	Identifier	right_loc		5229163	1					
ANR	5229584	ExpressionStatement	* ap = node	649:4:20220:20230	5229163	6	True				
ANR	5229585	AssignmentExpression	* ap = node		5229163	0		=			
ANR	5229586	UnaryOperationExpression	* ap		5229163	0					
ANR	5229587	UnaryOperator	*		5229163	0					
ANR	5229588	Identifier	ap		5229163	1					
ANR	5229589	Identifier	node		5229163	1					
ANR	5229590	ReturnType	static void		5229163	1					
ANR	5229591	Identifier	insert_free_loc		5229163	2					
ANR	5229592	ParameterList	"gs_memory_chunk_t * cmem , chunk_free_node_t * node"		5229163	3					
ANR	5229593	Parameter	gs_memory_chunk_t * cmem	541:28:16755:16777	5229163	0	True				
ANR	5229594	ParameterType	gs_memory_chunk_t *		5229163	0					
ANR	5229595	Identifier	cmem		5229163	1					
ANR	5229596	Parameter	chunk_free_node_t * node	541:53:16780:16802	5229163	1	True				
ANR	5229597	ParameterType	chunk_free_node_t *		5229163	0					
ANR	5229598	Identifier	node		5229163	1					
ANR	5229599	CFGEntryNode	ENTRY		5229163		True				
ANR	5229600	CFGExitNode	EXIT		5229163		True				
ANR	5229601	Symbol	b -> left_loc		5229163						
ANR	5229602	Symbol	& b -> right_loc		5229163						
ANR	5229603	Symbol	c -> left_loc		5229163						
ANR	5229604	Symbol	& c -> right_loc		5229163						
ANR	5229605	Symbol	& c -> left_loc		5229163						
ANR	5229606	Symbol	a -> left_loc		5229163						
ANR	5229607	Symbol	& a -> right_loc		5229163						
ANR	5229608	Symbol	node -> right_loc		5229163						
ANR	5229609	Symbol	* node		5229163						
ANR	5229610	Symbol	a		5229163						
ANR	5229611	Symbol	b		5229163						
ANR	5229612	Symbol	c		5229163						
ANR	5229613	Symbol	NULL		5229163						
ANR	5229614	Symbol	c -> right_loc		5229163						
ANR	5229615	Symbol	* a		5229163						
ANR	5229616	Symbol	* b		5229163						
ANR	5229617	Symbol	* c		5229163						
ANR	5229618	Symbol	ap		5229163						
ANR	5229619	Symbol	node -> left_loc		5229163						
ANR	5229620	Symbol	node		5229163						
ANR	5229621	Symbol	* ap		5229163						
ANR	5229622	Symbol	& b -> left_loc		5229163						
ANR	5229623	Symbol	cmem		5229163						
ANR	5229624	Symbol	& cmem -> free_loc		5229163						
ANR	5229625	Symbol	b -> right_loc		5229163						
ANR	5229626	Symbol	a -> right_loc		5229163						
ANR	5229627	Symbol	& a -> left_loc		5229163						
ANR	5229628	Function	insert_free	652:0:20235:20412							
ANR	5229629	FunctionDef	"insert_free (gs_memory_chunk_t * cmem , chunk_free_node_t * node , uint size)"		5229628	0					
ANR	5229630	CompoundStatement		653:0:20320:20412	5229628	0					
ANR	5229631	ExpressionStatement	node -> size = size	654:4:20326:20343	5229628	0	True				
ANR	5229632	AssignmentExpression	node -> size = size		5229628	0		=			
ANR	5229633	PtrMemberAccess	node -> size		5229628	0					
ANR	5229634	Identifier	node		5229628	0					
ANR	5229635	Identifier	size		5229628	1					
ANR	5229636	Identifier	size		5229628	1					
ANR	5229637	ExpressionStatement	"insert_free_size ( cmem , node )"	655:4:20349:20377	5229628	1	True				
ANR	5229638	CallExpression	"insert_free_size ( cmem , node )"		5229628	0					
ANR	5229639	Callee	insert_free_size		5229628	0					
ANR	5229640	Identifier	insert_free_size		5229628	0					
ANR	5229641	ArgumentList	cmem		5229628	1					
ANR	5229642	Argument	cmem		5229628	0					
ANR	5229643	Identifier	cmem		5229628	0					
ANR	5229644	Argument	node		5229628	1					
ANR	5229645	Identifier	node		5229628	0					
ANR	5229646	ExpressionStatement	"insert_free_loc ( cmem , node )"	656:4:20383:20410	5229628	2	True				
ANR	5229647	CallExpression	"insert_free_loc ( cmem , node )"		5229628	0					
ANR	5229648	Callee	insert_free_loc		5229628	0					
ANR	5229649	Identifier	insert_free_loc		5229628	0					
ANR	5229650	ArgumentList	cmem		5229628	1					
ANR	5229651	Argument	cmem		5229628	0					
ANR	5229652	Identifier	cmem		5229628	0					
ANR	5229653	Argument	node		5229628	1					
ANR	5229654	Identifier	node		5229628	0					
ANR	5229655	ReturnType	static void		5229628	1					
ANR	5229656	Identifier	insert_free		5229628	2					
ANR	5229657	ParameterList	"gs_memory_chunk_t * cmem , chunk_free_node_t * node , uint size"		5229628	3					
ANR	5229658	Parameter	gs_memory_chunk_t * cmem	652:24:20259:20281	5229628	0	True				
ANR	5229659	ParameterType	gs_memory_chunk_t *		5229628	0					
ANR	5229660	Identifier	cmem		5229628	1					
ANR	5229661	Parameter	chunk_free_node_t * node	652:49:20284:20306	5229628	1	True				
ANR	5229662	ParameterType	chunk_free_node_t *		5229628	0					
ANR	5229663	Identifier	node		5229628	1					
ANR	5229664	Parameter	uint size	652:74:20309:20317	5229628	2	True				
ANR	5229665	ParameterType	uint		5229628	0					
ANR	5229666	Identifier	size		5229628	1					
ANR	5229667	CFGEntryNode	ENTRY		5229628		True				
ANR	5229668	CFGExitNode	EXIT		5229628		True				
ANR	5229669	Symbol	node		5229628						
ANR	5229670	Symbol	node -> size		5229628						
ANR	5229671	Symbol	size		5229628						
ANR	5229672	Symbol	* node		5229628						
ANR	5229673	Symbol	cmem		5229628						
ANR	5229674	Function	remove_free_loc	659:0:20415:21219							
ANR	5229675	FunctionDef	"remove_free_loc (gs_memory_chunk_t * cmem , chunk_free_node_t * node)"		5229674	0					
ANR	5229676	CompoundStatement		660:0:20493:21219	5229674	0					
ANR	5229677	IdentifierDeclStatement	chunk_free_node_t * * ap = & cmem -> free_loc ;	661:4:20499:20539	5229674	0	True				
ANR	5229678	IdentifierDecl	* * ap = & cmem -> free_loc		5229674	0					
ANR	5229679	IdentifierDeclType	chunk_free_node_t * *		5229674	0					
ANR	5229680	Identifier	ap		5229674	1					
ANR	5229681	AssignmentExpression	* * ap = & cmem -> free_loc		5229674	2		=			
ANR	5229682	Identifier	ap		5229674	0					
ANR	5229683	UnaryOperationExpression	& cmem -> free_loc		5229674	1					
ANR	5229684	UnaryOperator	&		5229674	0					
ANR	5229685	PtrMemberAccess	cmem -> free_loc		5229674	1					
ANR	5229686	Identifier	cmem		5229674	0					
ANR	5229687	Identifier	free_loc		5229674	1					
ANR	5229688	WhileStatement	while ( * ap != node )		5229674	1					
ANR	5229689	Condition	* ap != node	663:11:20553:20563	5229674	0	True				
ANR	5229690	EqualityExpression	* ap != node		5229674	0		!=			
ANR	5229691	UnaryOperationExpression	* ap		5229674	0					
ANR	5229692	UnaryOperator	*		5229674	0					
ANR	5229693	Identifier	ap		5229674	1					
ANR	5229694	Identifier	node		5229674	1					
ANR	5229695	CompoundStatement		5:4:76:76	5229674	1					
ANR	5229696	IfStatement	if ( * ap > node )		5229674	0					
ANR	5229697	Condition	* ap > node	665:12:20584:20593	5229674	0	True				
ANR	5229698	RelationalExpression	* ap > node		5229674	0		>			
ANR	5229699	UnaryOperationExpression	* ap		5229674	0					
ANR	5229700	UnaryOperator	*		5229674	0					
ANR	5229701	Identifier	ap		5229674	1					
ANR	5229702	Identifier	node		5229674	1					
ANR	5229703	ExpressionStatement	ap = & ( * ap ) -> left_loc	666:12:20608:20629	5229674	1	True				
ANR	5229704	AssignmentExpression	ap = & ( * ap ) -> left_loc		5229674	0		=			
ANR	5229705	Identifier	ap		5229674	0					
ANR	5229706	UnaryOperationExpression	& ( * ap ) -> left_loc		5229674	1					
ANR	5229707	UnaryOperator	&		5229674	0					
ANR	5229708	PtrMemberAccess	( * ap ) -> left_loc		5229674	1					
ANR	5229709	UnaryOperationExpression	* ap		5229674	0					
ANR	5229710	UnaryOperator	*		5229674	0					
ANR	5229711	Identifier	ap		5229674	1					
ANR	5229712	Identifier	left_loc		5229674	1					
ANR	5229713	ElseStatement	else		5229674	0					
ANR	5229714	ExpressionStatement	ap = & ( * ap ) -> right_loc	668:12:20656:20678	5229674	0	True				
ANR	5229715	AssignmentExpression	ap = & ( * ap ) -> right_loc		5229674	0		=			
ANR	5229716	Identifier	ap		5229674	0					
ANR	5229717	UnaryOperationExpression	& ( * ap ) -> right_loc		5229674	1					
ANR	5229718	UnaryOperator	&		5229674	0					
ANR	5229719	PtrMemberAccess	( * ap ) -> right_loc		5229674	1					
ANR	5229720	UnaryOperationExpression	* ap		5229674	0					
ANR	5229721	UnaryOperator	*		5229674	0					
ANR	5229722	Identifier	ap		5229674	1					
ANR	5229723	Identifier	right_loc		5229674	1					
ANR	5229724	IfStatement	if ( node -> left_loc == NULL )		5229674	2					
ANR	5229725	Condition	node -> left_loc == NULL	671:8:20695:20716	5229674	0	True				
ANR	5229726	EqualityExpression	node -> left_loc == NULL		5229674	0		==			
ANR	5229727	PtrMemberAccess	node -> left_loc		5229674	0					
ANR	5229728	Identifier	node		5229674	0					
ANR	5229729	Identifier	left_loc		5229674	1					
ANR	5229730	Identifier	NULL		5229674	1					
ANR	5229731	ExpressionStatement	* ap = node -> right_loc	672:8:20727:20748	5229674	1	True				
ANR	5229732	AssignmentExpression	* ap = node -> right_loc		5229674	0		=			
ANR	5229733	UnaryOperationExpression	* ap		5229674	0					
ANR	5229734	UnaryOperator	*		5229674	0					
ANR	5229735	Identifier	ap		5229674	1					
ANR	5229736	PtrMemberAccess	node -> right_loc		5229674	1					
ANR	5229737	Identifier	node		5229674	0					
ANR	5229738	Identifier	right_loc		5229674	1					
ANR	5229739	ElseStatement	else		5229674	0					
ANR	5229740	IfStatement	if ( node -> right_loc == NULL )		5229674	0					
ANR	5229741	Condition	node -> right_loc == NULL	673:13:20763:20785	5229674	0	True				
ANR	5229742	EqualityExpression	node -> right_loc == NULL		5229674	0		==			
ANR	5229743	PtrMemberAccess	node -> right_loc		5229674	0					
ANR	5229744	Identifier	node		5229674	0					
ANR	5229745	Identifier	right_loc		5229674	1					
ANR	5229746	Identifier	NULL		5229674	1					
ANR	5229747	ExpressionStatement	* ap = node -> left_loc	674:8:20796:20816	5229674	1	True				
ANR	5229748	AssignmentExpression	* ap = node -> left_loc		5229674	0		=			
ANR	5229749	UnaryOperationExpression	* ap		5229674	0					
ANR	5229750	UnaryOperator	*		5229674	0					
ANR	5229751	Identifier	ap		5229674	1					
ANR	5229752	PtrMemberAccess	node -> left_loc		5229674	1					
ANR	5229753	Identifier	node		5229674	0					
ANR	5229754	Identifier	left_loc		5229674	1					
ANR	5229755	ElseStatement	else		5229674	0					
ANR	5229756	CompoundStatement		19:8:456:477	5229674	0					
ANR	5229757	IdentifierDeclStatement	chunk_free_node_t * * bp ;	677:8:20918:20940	5229674	0	True				
ANR	5229758	IdentifierDecl	* * bp		5229674	0					
ANR	5229759	IdentifierDeclType	chunk_free_node_t * *		5229674	0					
ANR	5229760	Identifier	bp		5229674	1					
ANR	5229761	IdentifierDeclStatement	chunk_free_node_t * b ;	678:8:20950:20971	5229674	1	True				
ANR	5229762	IdentifierDecl	* b		5229674	0					
ANR	5229763	IdentifierDeclType	chunk_free_node_t *		5229674	0					
ANR	5229764	Identifier	b		5229674	1					
ANR	5229765	ExpressionStatement	bp = & node -> left_loc	679:8:20981:21001	5229674	2	True				
ANR	5229766	AssignmentExpression	bp = & node -> left_loc		5229674	0		=			
ANR	5229767	Identifier	bp		5229674	0					
ANR	5229768	UnaryOperationExpression	& node -> left_loc		5229674	1					
ANR	5229769	UnaryOperator	&		5229674	0					
ANR	5229770	PtrMemberAccess	node -> left_loc		5229674	1					
ANR	5229771	Identifier	node		5229674	0					
ANR	5229772	Identifier	left_loc		5229674	1					
ANR	5229773	WhileStatement	while ( ( * bp ) -> right_loc )		5229674	3					
ANR	5229774	Condition	( * bp ) -> right_loc	680:15:21018:21033	5229674	0	True				
ANR	5229775	PtrMemberAccess	( * bp ) -> right_loc		5229674	0					
ANR	5229776	UnaryOperationExpression	* bp		5229674	0					
ANR	5229777	UnaryOperator	*		5229674	0					
ANR	5229778	Identifier	bp		5229674	1					
ANR	5229779	Identifier	right_loc		5229674	1					
ANR	5229780	ExpressionStatement	bp = & ( * bp ) -> right_loc	681:12:21048:21070	5229674	1	True				
ANR	5229781	AssignmentExpression	bp = & ( * bp ) -> right_loc		5229674	0		=			
ANR	5229782	Identifier	bp		5229674	0					
ANR	5229783	UnaryOperationExpression	& ( * bp ) -> right_loc		5229674	1					
ANR	5229784	UnaryOperator	&		5229674	0					
ANR	5229785	PtrMemberAccess	( * bp ) -> right_loc		5229674	1					
ANR	5229786	UnaryOperationExpression	* bp		5229674	0					
ANR	5229787	UnaryOperator	*		5229674	0					
ANR	5229788	Identifier	bp		5229674	1					
ANR	5229789	Identifier	right_loc		5229674	1					
ANR	5229790	ExpressionStatement	b = ( * bp )	682:8:21080:21089	5229674	4	True				
ANR	5229791	AssignmentExpression	b = ( * bp )		5229674	0		=			
ANR	5229792	Identifier	b		5229674	0					
ANR	5229793	UnaryOperationExpression	* bp		5229674	1					
ANR	5229794	UnaryOperator	*		5229674	0					
ANR	5229795	Identifier	bp		5229674	1					
ANR	5229796	ExpressionStatement	* bp = b -> left_loc	683:8:21099:21116	5229674	5	True				
ANR	5229797	AssignmentExpression	* bp = b -> left_loc		5229674	0		=			
ANR	5229798	UnaryOperationExpression	* bp		5229674	0					
ANR	5229799	UnaryOperator	*		5229674	0					
ANR	5229800	Identifier	bp		5229674	1					
ANR	5229801	PtrMemberAccess	b -> left_loc		5229674	1					
ANR	5229802	Identifier	b		5229674	0					
ANR	5229803	Identifier	left_loc		5229674	1					
ANR	5229804	ExpressionStatement	b -> left_loc = node -> left_loc	684:8:21126:21154	5229674	6	True				
ANR	5229805	AssignmentExpression	b -> left_loc = node -> left_loc		5229674	0		=			
ANR	5229806	PtrMemberAccess	b -> left_loc		5229674	0					
ANR	5229807	Identifier	b		5229674	0					
ANR	5229808	Identifier	left_loc		5229674	1					
ANR	5229809	PtrMemberAccess	node -> left_loc		5229674	1					
ANR	5229810	Identifier	node		5229674	0					
ANR	5229811	Identifier	left_loc		5229674	1					
ANR	5229812	ExpressionStatement	b -> right_loc = node -> right_loc	685:8:21164:21194	5229674	7	True				
ANR	5229813	AssignmentExpression	b -> right_loc = node -> right_loc		5229674	0		=			
ANR	5229814	PtrMemberAccess	b -> right_loc		5229674	0					
ANR	5229815	Identifier	b		5229674	0					
ANR	5229816	Identifier	right_loc		5229674	1					
ANR	5229817	PtrMemberAccess	node -> right_loc		5229674	1					
ANR	5229818	Identifier	node		5229674	0					
ANR	5229819	Identifier	right_loc		5229674	1					
ANR	5229820	ExpressionStatement	* ap = b	686:8:21204:21211	5229674	8	True				
ANR	5229821	AssignmentExpression	* ap = b		5229674	0		=			
ANR	5229822	UnaryOperationExpression	* ap		5229674	0					
ANR	5229823	UnaryOperator	*		5229674	0					
ANR	5229824	Identifier	ap		5229674	1					
ANR	5229825	Identifier	b		5229674	1					
ANR	5229826	ReturnType	static void		5229674	1					
ANR	5229827	Identifier	remove_free_loc		5229674	2					
ANR	5229828	ParameterList	"gs_memory_chunk_t * cmem , chunk_free_node_t * node"		5229674	3					
ANR	5229829	Parameter	gs_memory_chunk_t * cmem	659:28:20443:20465	5229674	0	True				
ANR	5229830	ParameterType	gs_memory_chunk_t *		5229674	0					
ANR	5229831	Identifier	cmem		5229674	1					
ANR	5229832	Parameter	chunk_free_node_t * node	659:53:20468:20490	5229674	1	True				
ANR	5229833	ParameterType	chunk_free_node_t *		5229674	0					
ANR	5229834	Identifier	node		5229674	1					
ANR	5229835	CFGEntryNode	ENTRY		5229674		True				
ANR	5229836	CFGExitNode	EXIT		5229674		True				
ANR	5229837	Symbol	b -> left_loc		5229674						
ANR	5229838	Symbol	b		5229674						
ANR	5229839	Symbol	NULL		5229674						
ANR	5229840	Symbol	& node -> left_loc		5229674						
ANR	5229841	Symbol	* b		5229674						
ANR	5229842	Symbol	bp		5229674						
ANR	5229843	Symbol	ap		5229674						
ANR	5229844	Symbol	node -> left_loc		5229674						
ANR	5229845	Symbol	( * bp ) -> right_loc		5229674						
ANR	5229846	Symbol	node		5229674						
ANR	5229847	Symbol	node -> right_loc		5229674						
ANR	5229848	Symbol	& ( * ap ) -> left_loc		5229674						
ANR	5229849	Symbol	& ( * bp ) -> right_loc		5229674						
ANR	5229850	Symbol	* ap		5229674						
ANR	5229851	Symbol	* bp		5229674						
ANR	5229852	Symbol	* * bp		5229674						
ANR	5229853	Symbol	* node		5229674						
ANR	5229854	Symbol	cmem		5229674						
ANR	5229855	Symbol	& cmem -> free_loc		5229674						
ANR	5229856	Symbol	b -> right_loc		5229674						
ANR	5229857	Symbol	& ( * ap ) -> right_loc		5229674						
ANR	5229858	Function	remove_free_size	690:0:21222:22051							
ANR	5229859	FunctionDef	"remove_free_size (gs_memory_chunk_t * cmem , chunk_free_node_t * node)"		5229858	0					
ANR	5229860	CompoundStatement		691:0:21301:22051	5229858	0					
ANR	5229861	IdentifierDeclStatement	chunk_free_node_t * * ap = & cmem -> free_size ;	692:4:21307:21348	5229858	0	True				
ANR	5229862	IdentifierDecl	* * ap = & cmem -> free_size		5229858	0					
ANR	5229863	IdentifierDeclType	chunk_free_node_t * *		5229858	0					
ANR	5229864	Identifier	ap		5229858	1					
ANR	5229865	AssignmentExpression	* * ap = & cmem -> free_size		5229858	2		=			
ANR	5229866	Identifier	ap		5229858	0					
ANR	5229867	UnaryOperationExpression	& cmem -> free_size		5229858	1					
ANR	5229868	UnaryOperator	&		5229858	0					
ANR	5229869	PtrMemberAccess	cmem -> free_size		5229858	1					
ANR	5229870	Identifier	cmem		5229858	0					
ANR	5229871	Identifier	free_size		5229858	1					
ANR	5229872	WhileStatement	while ( * ap != node )		5229858	1					
ANR	5229873	Condition	* ap != node	694:11:21362:21372	5229858	0	True				
ANR	5229874	EqualityExpression	* ap != node		5229858	0		!=			
ANR	5229875	UnaryOperationExpression	* ap		5229858	0					
ANR	5229876	UnaryOperator	*		5229858	0					
ANR	5229877	Identifier	ap		5229858	1					
ANR	5229878	Identifier	node		5229858	1					
ANR	5229879	CompoundStatement		5:4:77:77	5229858	1					
ANR	5229880	IfStatement	"if ( CMP_SIZE ( * ap , node ) )"		5229858	0					
ANR	5229881	Condition	"CMP_SIZE ( * ap , node )"	696:12:21393:21411	5229858	0	True				
ANR	5229882	CallExpression	"CMP_SIZE ( * ap , node )"		5229858	0					
ANR	5229883	Callee	CMP_SIZE		5229858	0					
ANR	5229884	Identifier	CMP_SIZE		5229858	0					
ANR	5229885	ArgumentList	* ap		5229858	1					
ANR	5229886	Argument	* ap		5229858	0					
ANR	5229887	UnaryOperationExpression	* ap		5229858	0					
ANR	5229888	UnaryOperator	*		5229858	0					
ANR	5229889	Identifier	ap		5229858	1					
ANR	5229890	Argument	node		5229858	1					
ANR	5229891	Identifier	node		5229858	0					
ANR	5229892	ExpressionStatement	ap = & ( * ap ) -> left_size	697:12:21426:21448	5229858	1	True				
ANR	5229893	AssignmentExpression	ap = & ( * ap ) -> left_size		5229858	0		=			
ANR	5229894	Identifier	ap		5229858	0					
ANR	5229895	UnaryOperationExpression	& ( * ap ) -> left_size		5229858	1					
ANR	5229896	UnaryOperator	&		5229858	0					
ANR	5229897	PtrMemberAccess	( * ap ) -> left_size		5229858	1					
ANR	5229898	UnaryOperationExpression	* ap		5229858	0					
ANR	5229899	UnaryOperator	*		5229858	0					
ANR	5229900	Identifier	ap		5229858	1					
ANR	5229901	Identifier	left_size		5229858	1					
ANR	5229902	ElseStatement	else		5229858	0					
ANR	5229903	ExpressionStatement	ap = & ( * ap ) -> right_size	699:12:21475:21498	5229858	0	True				
ANR	5229904	AssignmentExpression	ap = & ( * ap ) -> right_size		5229858	0		=			
ANR	5229905	Identifier	ap		5229858	0					
ANR	5229906	UnaryOperationExpression	& ( * ap ) -> right_size		5229858	1					
ANR	5229907	UnaryOperator	&		5229858	0					
ANR	5229908	PtrMemberAccess	( * ap ) -> right_size		5229858	1					
ANR	5229909	UnaryOperationExpression	* ap		5229858	0					
ANR	5229910	UnaryOperator	*		5229858	0					
ANR	5229911	Identifier	ap		5229858	1					
ANR	5229912	Identifier	right_size		5229858	1					
ANR	5229913	IfStatement	if ( node -> left_size == NULL )		5229858	2					
ANR	5229914	Condition	node -> left_size == NULL	702:8:21515:21537	5229858	0	True				
ANR	5229915	EqualityExpression	node -> left_size == NULL		5229858	0		==			
ANR	5229916	PtrMemberAccess	node -> left_size		5229858	0					
ANR	5229917	Identifier	node		5229858	0					
ANR	5229918	Identifier	left_size		5229858	1					
ANR	5229919	Identifier	NULL		5229858	1					
ANR	5229920	ExpressionStatement	* ap = node -> right_size	703:8:21548:21570	5229858	1	True				
ANR	5229921	AssignmentExpression	* ap = node -> right_size		5229858	0		=			
ANR	5229922	UnaryOperationExpression	* ap		5229858	0					
ANR	5229923	UnaryOperator	*		5229858	0					
ANR	5229924	Identifier	ap		5229858	1					
ANR	5229925	PtrMemberAccess	node -> right_size		5229858	1					
ANR	5229926	Identifier	node		5229858	0					
ANR	5229927	Identifier	right_size		5229858	1					
ANR	5229928	ElseStatement	else		5229858	0					
ANR	5229929	IfStatement	if ( node -> right_size == NULL )		5229858	0					
ANR	5229930	Condition	node -> right_size == NULL	704:13:21585:21608	5229858	0	True				
ANR	5229931	EqualityExpression	node -> right_size == NULL		5229858	0		==			
ANR	5229932	PtrMemberAccess	node -> right_size		5229858	0					
ANR	5229933	Identifier	node		5229858	0					
ANR	5229934	Identifier	right_size		5229858	1					
ANR	5229935	Identifier	NULL		5229858	1					
ANR	5229936	ExpressionStatement	* ap = node -> left_size	705:8:21619:21640	5229858	1	True				
ANR	5229937	AssignmentExpression	* ap = node -> left_size		5229858	0		=			
ANR	5229938	UnaryOperationExpression	* ap		5229858	0					
ANR	5229939	UnaryOperator	*		5229858	0					
ANR	5229940	Identifier	ap		5229858	1					
ANR	5229941	PtrMemberAccess	node -> left_size		5229858	1					
ANR	5229942	Identifier	node		5229858	0					
ANR	5229943	Identifier	left_size		5229858	1					
ANR	5229944	ElseStatement	else		5229858	0					
ANR	5229945	CompoundStatement		19:8:472:493	5229858	0					
ANR	5229946	IdentifierDeclStatement	chunk_free_node_t * * bp ;	708:8:21742:21764	5229858	0	True				
ANR	5229947	IdentifierDecl	* * bp		5229858	0					
ANR	5229948	IdentifierDeclType	chunk_free_node_t * *		5229858	0					
ANR	5229949	Identifier	bp		5229858	1					
ANR	5229950	IdentifierDeclStatement	chunk_free_node_t * b ;	709:8:21774:21795	5229858	1	True				
ANR	5229951	IdentifierDecl	* b		5229858	0					
ANR	5229952	IdentifierDeclType	chunk_free_node_t *		5229858	0					
ANR	5229953	Identifier	b		5229858	1					
ANR	5229954	ExpressionStatement	bp = & node -> left_size	710:8:21805:21826	5229858	2	True				
ANR	5229955	AssignmentExpression	bp = & node -> left_size		5229858	0		=			
ANR	5229956	Identifier	bp		5229858	0					
ANR	5229957	UnaryOperationExpression	& node -> left_size		5229858	1					
ANR	5229958	UnaryOperator	&		5229858	0					
ANR	5229959	PtrMemberAccess	node -> left_size		5229858	1					
ANR	5229960	Identifier	node		5229858	0					
ANR	5229961	Identifier	left_size		5229858	1					
ANR	5229962	WhileStatement	while ( ( * bp ) -> right_size )		5229858	3					
ANR	5229963	Condition	( * bp ) -> right_size	711:15:21843:21859	5229858	0	True				
ANR	5229964	PtrMemberAccess	( * bp ) -> right_size		5229858	0					
ANR	5229965	UnaryOperationExpression	* bp		5229858	0					
ANR	5229966	UnaryOperator	*		5229858	0					
ANR	5229967	Identifier	bp		5229858	1					
ANR	5229968	Identifier	right_size		5229858	1					
ANR	5229969	ExpressionStatement	bp = & ( * bp ) -> right_size	712:12:21874:21897	5229858	1	True				
ANR	5229970	AssignmentExpression	bp = & ( * bp ) -> right_size		5229858	0		=			
ANR	5229971	Identifier	bp		5229858	0					
ANR	5229972	UnaryOperationExpression	& ( * bp ) -> right_size		5229858	1					
ANR	5229973	UnaryOperator	&		5229858	0					
ANR	5229974	PtrMemberAccess	( * bp ) -> right_size		5229858	1					
ANR	5229975	UnaryOperationExpression	* bp		5229858	0					
ANR	5229976	UnaryOperator	*		5229858	0					
ANR	5229977	Identifier	bp		5229858	1					
ANR	5229978	Identifier	right_size		5229858	1					
ANR	5229979	ExpressionStatement	b = ( * bp )	713:8:21907:21916	5229858	4	True				
ANR	5229980	AssignmentExpression	b = ( * bp )		5229858	0		=			
ANR	5229981	Identifier	b		5229858	0					
ANR	5229982	UnaryOperationExpression	* bp		5229858	1					
ANR	5229983	UnaryOperator	*		5229858	0					
ANR	5229984	Identifier	bp		5229858	1					
ANR	5229985	ExpressionStatement	* bp = b -> left_size	714:8:21926:21944	5229858	5	True				
ANR	5229986	AssignmentExpression	* bp = b -> left_size		5229858	0		=			
ANR	5229987	UnaryOperationExpression	* bp		5229858	0					
ANR	5229988	UnaryOperator	*		5229858	0					
ANR	5229989	Identifier	bp		5229858	1					
ANR	5229990	PtrMemberAccess	b -> left_size		5229858	1					
ANR	5229991	Identifier	b		5229858	0					
ANR	5229992	Identifier	left_size		5229858	1					
ANR	5229993	ExpressionStatement	b -> left_size = node -> left_size	715:8:21954:21984	5229858	6	True				
ANR	5229994	AssignmentExpression	b -> left_size = node -> left_size		5229858	0		=			
ANR	5229995	PtrMemberAccess	b -> left_size		5229858	0					
ANR	5229996	Identifier	b		5229858	0					
ANR	5229997	Identifier	left_size		5229858	1					
ANR	5229998	PtrMemberAccess	node -> left_size		5229858	1					
ANR	5229999	Identifier	node		5229858	0					
ANR	5230000	Identifier	left_size		5229858	1					
ANR	5230001	ExpressionStatement	b -> right_size = node -> right_size	716:8:21994:22026	5229858	7	True				
ANR	5230002	AssignmentExpression	b -> right_size = node -> right_size		5229858	0		=			
ANR	5230003	PtrMemberAccess	b -> right_size		5229858	0					
ANR	5230004	Identifier	b		5229858	0					
ANR	5230005	Identifier	right_size		5229858	1					
ANR	5230006	PtrMemberAccess	node -> right_size		5229858	1					
ANR	5230007	Identifier	node		5229858	0					
ANR	5230008	Identifier	right_size		5229858	1					
ANR	5230009	ExpressionStatement	* ap = b	717:8:22036:22043	5229858	8	True				
ANR	5230010	AssignmentExpression	* ap = b		5229858	0		=			
ANR	5230011	UnaryOperationExpression	* ap		5229858	0					
ANR	5230012	UnaryOperator	*		5229858	0					
ANR	5230013	Identifier	ap		5229858	1					
ANR	5230014	Identifier	b		5229858	1					
ANR	5230015	ReturnType	static void		5229858	1					
ANR	5230016	Identifier	remove_free_size		5229858	2					
ANR	5230017	ParameterList	"gs_memory_chunk_t * cmem , chunk_free_node_t * node"		5229858	3					
ANR	5230018	Parameter	gs_memory_chunk_t * cmem	690:29:21251:21273	5229858	0	True				
ANR	5230019	ParameterType	gs_memory_chunk_t *		5229858	0					
ANR	5230020	Identifier	cmem		5229858	1					
ANR	5230021	Parameter	chunk_free_node_t * node	690:54:21276:21298	5229858	1	True				
ANR	5230022	ParameterType	chunk_free_node_t *		5229858	0					
ANR	5230023	Identifier	node		5229858	1					
ANR	5230024	CFGEntryNode	ENTRY		5229858		True				
ANR	5230025	CFGExitNode	EXIT		5229858		True				
ANR	5230026	Symbol	b		5229858						
ANR	5230027	Symbol	NULL		5229858						
ANR	5230028	Symbol	CMP_SIZE		5229858						
ANR	5230029	Symbol	& ( * ap ) -> left_size		5229858						
ANR	5230030	Symbol	* b		5229858						
ANR	5230031	Symbol	bp		5229858						
ANR	5230032	Symbol	& ( * bp ) -> right_size		5229858						
ANR	5230033	Symbol	ap		5229858						
ANR	5230034	Symbol	b -> left_size		5229858						
ANR	5230035	Symbol	node		5229858						
ANR	5230036	Symbol	& cmem -> free_size		5229858						
ANR	5230037	Symbol	b -> right_size		5229858						
ANR	5230038	Symbol	* ap		5229858						
ANR	5230039	Symbol	( * bp ) -> right_size		5229858						
ANR	5230040	Symbol	& node -> left_size		5229858						
ANR	5230041	Symbol	* bp		5229858						
ANR	5230042	Symbol	* * bp		5229858						
ANR	5230043	Symbol	& ( * ap ) -> right_size		5229858						
ANR	5230044	Symbol	node -> left_size		5229858						
ANR	5230045	Symbol	* node		5229858						
ANR	5230046	Symbol	cmem		5229858						
ANR	5230047	Symbol	node -> right_size		5229858						
ANR	5230048	Function	remove_free_size_fast	721:0:22054:22719							
ANR	5230049	FunctionDef	"remove_free_size_fast (gs_memory_chunk_t * cmem , chunk_free_node_t * * ap)"		5230048	0					
ANR	5230050	CompoundStatement		722:0:22137:22719	5230048	0					
ANR	5230051	IdentifierDeclStatement	chunk_free_node_t * node = * ap ;	723:4:22143:22172	5230048	0	True				
ANR	5230052	IdentifierDecl	* node = * ap		5230048	0					
ANR	5230053	IdentifierDeclType	chunk_free_node_t *		5230048	0					
ANR	5230054	Identifier	node		5230048	1					
ANR	5230055	AssignmentExpression	* node = * ap		5230048	2		=			
ANR	5230056	Identifier	node		5230048	0					
ANR	5230057	UnaryOperationExpression	* ap		5230048	1					
ANR	5230058	UnaryOperator	*		5230048	0					
ANR	5230059	Identifier	ap		5230048	1					
ANR	5230060	IfStatement	if ( node -> left_size == NULL )		5230048	1					
ANR	5230061	Condition	node -> left_size == NULL	725:8:22183:22205	5230048	0	True				
ANR	5230062	EqualityExpression	node -> left_size == NULL		5230048	0		==			
ANR	5230063	PtrMemberAccess	node -> left_size		5230048	0					
ANR	5230064	Identifier	node		5230048	0					
ANR	5230065	Identifier	left_size		5230048	1					
ANR	5230066	Identifier	NULL		5230048	1					
ANR	5230067	ExpressionStatement	* ap = node -> right_size	726:8:22216:22238	5230048	1	True				
ANR	5230068	AssignmentExpression	* ap = node -> right_size		5230048	0		=			
ANR	5230069	UnaryOperationExpression	* ap		5230048	0					
ANR	5230070	UnaryOperator	*		5230048	0					
ANR	5230071	Identifier	ap		5230048	1					
ANR	5230072	PtrMemberAccess	node -> right_size		5230048	1					
ANR	5230073	Identifier	node		5230048	0					
ANR	5230074	Identifier	right_size		5230048	1					
ANR	5230075	ElseStatement	else		5230048	0					
ANR	5230076	IfStatement	if ( node -> right_size == NULL )		5230048	0					
ANR	5230077	Condition	node -> right_size == NULL	727:13:22253:22276	5230048	0	True				
ANR	5230078	EqualityExpression	node -> right_size == NULL		5230048	0		==			
ANR	5230079	PtrMemberAccess	node -> right_size		5230048	0					
ANR	5230080	Identifier	node		5230048	0					
ANR	5230081	Identifier	right_size		5230048	1					
ANR	5230082	Identifier	NULL		5230048	1					
ANR	5230083	ExpressionStatement	* ap = node -> left_size	728:8:22287:22308	5230048	1	True				
ANR	5230084	AssignmentExpression	* ap = node -> left_size		5230048	0		=			
ANR	5230085	UnaryOperationExpression	* ap		5230048	0					
ANR	5230086	UnaryOperator	*		5230048	0					
ANR	5230087	Identifier	ap		5230048	1					
ANR	5230088	PtrMemberAccess	node -> left_size		5230048	1					
ANR	5230089	Identifier	node		5230048	0					
ANR	5230090	Identifier	left_size		5230048	1					
ANR	5230091	ElseStatement	else		5230048	0					
ANR	5230092	CompoundStatement		11:8:304:325	5230048	0					
ANR	5230093	IdentifierDeclStatement	chunk_free_node_t * * bp ;	731:8:22410:22432	5230048	0	True				
ANR	5230094	IdentifierDecl	* * bp		5230048	0					
ANR	5230095	IdentifierDeclType	chunk_free_node_t * *		5230048	0					
ANR	5230096	Identifier	bp		5230048	1					
ANR	5230097	IdentifierDeclStatement	chunk_free_node_t * b ;	732:8:22442:22463	5230048	1	True				
ANR	5230098	IdentifierDecl	* b		5230048	0					
ANR	5230099	IdentifierDeclType	chunk_free_node_t *		5230048	0					
ANR	5230100	Identifier	b		5230048	1					
ANR	5230101	ExpressionStatement	bp = & node -> left_size	733:8:22473:22494	5230048	2	True				
ANR	5230102	AssignmentExpression	bp = & node -> left_size		5230048	0		=			
ANR	5230103	Identifier	bp		5230048	0					
ANR	5230104	UnaryOperationExpression	& node -> left_size		5230048	1					
ANR	5230105	UnaryOperator	&		5230048	0					
ANR	5230106	PtrMemberAccess	node -> left_size		5230048	1					
ANR	5230107	Identifier	node		5230048	0					
ANR	5230108	Identifier	left_size		5230048	1					
ANR	5230109	WhileStatement	while ( ( * bp ) -> right_size )		5230048	3					
ANR	5230110	Condition	( * bp ) -> right_size	734:15:22511:22527	5230048	0	True				
ANR	5230111	PtrMemberAccess	( * bp ) -> right_size		5230048	0					
ANR	5230112	UnaryOperationExpression	* bp		5230048	0					
ANR	5230113	UnaryOperator	*		5230048	0					
ANR	5230114	Identifier	bp		5230048	1					
ANR	5230115	Identifier	right_size		5230048	1					
ANR	5230116	ExpressionStatement	bp = & ( * bp ) -> right_size	735:12:22542:22565	5230048	1	True				
ANR	5230117	AssignmentExpression	bp = & ( * bp ) -> right_size		5230048	0		=			
ANR	5230118	Identifier	bp		5230048	0					
ANR	5230119	UnaryOperationExpression	& ( * bp ) -> right_size		5230048	1					
ANR	5230120	UnaryOperator	&		5230048	0					
ANR	5230121	PtrMemberAccess	( * bp ) -> right_size		5230048	1					
ANR	5230122	UnaryOperationExpression	* bp		5230048	0					
ANR	5230123	UnaryOperator	*		5230048	0					
ANR	5230124	Identifier	bp		5230048	1					
ANR	5230125	Identifier	right_size		5230048	1					
ANR	5230126	ExpressionStatement	b = ( * bp )	736:8:22575:22584	5230048	4	True				
ANR	5230127	AssignmentExpression	b = ( * bp )		5230048	0		=			
ANR	5230128	Identifier	b		5230048	0					
ANR	5230129	UnaryOperationExpression	* bp		5230048	1					
ANR	5230130	UnaryOperator	*		5230048	0					
ANR	5230131	Identifier	bp		5230048	1					
ANR	5230132	ExpressionStatement	* bp = b -> left_size	737:8:22594:22612	5230048	5	True				
ANR	5230133	AssignmentExpression	* bp = b -> left_size		5230048	0		=			
ANR	5230134	UnaryOperationExpression	* bp		5230048	0					
ANR	5230135	UnaryOperator	*		5230048	0					
ANR	5230136	Identifier	bp		5230048	1					
ANR	5230137	PtrMemberAccess	b -> left_size		5230048	1					
ANR	5230138	Identifier	b		5230048	0					
ANR	5230139	Identifier	left_size		5230048	1					
ANR	5230140	ExpressionStatement	b -> left_size = node -> left_size	738:8:22622:22652	5230048	6	True				
ANR	5230141	AssignmentExpression	b -> left_size = node -> left_size		5230048	0		=			
ANR	5230142	PtrMemberAccess	b -> left_size		5230048	0					
ANR	5230143	Identifier	b		5230048	0					
ANR	5230144	Identifier	left_size		5230048	1					
ANR	5230145	PtrMemberAccess	node -> left_size		5230048	1					
ANR	5230146	Identifier	node		5230048	0					
ANR	5230147	Identifier	left_size		5230048	1					
ANR	5230148	ExpressionStatement	b -> right_size = node -> right_size	739:8:22662:22694	5230048	7	True				
ANR	5230149	AssignmentExpression	b -> right_size = node -> right_size		5230048	0		=			
ANR	5230150	PtrMemberAccess	b -> right_size		5230048	0					
ANR	5230151	Identifier	b		5230048	0					
ANR	5230152	Identifier	right_size		5230048	1					
ANR	5230153	PtrMemberAccess	node -> right_size		5230048	1					
ANR	5230154	Identifier	node		5230048	0					
ANR	5230155	Identifier	right_size		5230048	1					
ANR	5230156	ExpressionStatement	* ap = b	740:8:22704:22711	5230048	8	True				
ANR	5230157	AssignmentExpression	* ap = b		5230048	0		=			
ANR	5230158	UnaryOperationExpression	* ap		5230048	0					
ANR	5230159	UnaryOperator	*		5230048	0					
ANR	5230160	Identifier	ap		5230048	1					
ANR	5230161	Identifier	b		5230048	1					
ANR	5230162	ReturnType	static void		5230048	1					
ANR	5230163	Identifier	remove_free_size_fast		5230048	2					
ANR	5230164	ParameterList	"gs_memory_chunk_t * cmem , chunk_free_node_t * * ap"		5230048	3					
ANR	5230165	Parameter	gs_memory_chunk_t * cmem	721:34:22088:22110	5230048	0	True				
ANR	5230166	ParameterType	gs_memory_chunk_t *		5230048	0					
ANR	5230167	Identifier	cmem		5230048	1					
ANR	5230168	Parameter	chunk_free_node_t * * ap	721:59:22113:22134	5230048	1	True				
ANR	5230169	ParameterType	chunk_free_node_t * *		5230048	0					
ANR	5230170	Identifier	ap		5230048	1					
ANR	5230171	CFGEntryNode	ENTRY		5230048		True				
ANR	5230172	CFGExitNode	EXIT		5230048		True				
ANR	5230173	Symbol	b		5230048						
ANR	5230174	Symbol	NULL		5230048						
ANR	5230175	Symbol	* b		5230048						
ANR	5230176	Symbol	bp		5230048						
ANR	5230177	Symbol	& ( * bp ) -> right_size		5230048						
ANR	5230178	Symbol	ap		5230048						
ANR	5230179	Symbol	b -> left_size		5230048						
ANR	5230180	Symbol	node		5230048						
ANR	5230181	Symbol	b -> right_size		5230048						
ANR	5230182	Symbol	* ap		5230048						
ANR	5230183	Symbol	( * bp ) -> right_size		5230048						
ANR	5230184	Symbol	& node -> left_size		5230048						
ANR	5230185	Symbol	* bp		5230048						
ANR	5230186	Symbol	* * bp		5230048						
ANR	5230187	Symbol	* node		5230048						
ANR	5230188	Symbol	node -> left_size		5230048						
ANR	5230189	Symbol	cmem		5230048						
ANR	5230190	Symbol	node -> right_size		5230048						
ANR	5230191	Function	remove_free	744:0:22722:22865							
ANR	5230192	FunctionDef	"remove_free (gs_memory_chunk_t * cmem , chunk_free_node_t * node)"		5230191	0					
ANR	5230193	CompoundStatement		745:0:22796:22865	5230191	0					
ANR	5230194	ExpressionStatement	"remove_free_loc ( cmem , node )"	746:4:22802:22829	5230191	0	True				
ANR	5230195	CallExpression	"remove_free_loc ( cmem , node )"		5230191	0					
ANR	5230196	Callee	remove_free_loc		5230191	0					
ANR	5230197	Identifier	remove_free_loc		5230191	0					
ANR	5230198	ArgumentList	cmem		5230191	1					
ANR	5230199	Argument	cmem		5230191	0					
ANR	5230200	Identifier	cmem		5230191	0					
ANR	5230201	Argument	node		5230191	1					
ANR	5230202	Identifier	node		5230191	0					
ANR	5230203	ExpressionStatement	"remove_free_size ( cmem , node )"	747:4:22835:22863	5230191	1	True				
ANR	5230204	CallExpression	"remove_free_size ( cmem , node )"		5230191	0					
ANR	5230205	Callee	remove_free_size		5230191	0					
ANR	5230206	Identifier	remove_free_size		5230191	0					
ANR	5230207	ArgumentList	cmem		5230191	1					
ANR	5230208	Argument	cmem		5230191	0					
ANR	5230209	Identifier	cmem		5230191	0					
ANR	5230210	Argument	node		5230191	1					
ANR	5230211	Identifier	node		5230191	0					
ANR	5230212	ReturnType	static void		5230191	1					
ANR	5230213	Identifier	remove_free		5230191	2					
ANR	5230214	ParameterList	"gs_memory_chunk_t * cmem , chunk_free_node_t * node"		5230191	3					
ANR	5230215	Parameter	gs_memory_chunk_t * cmem	744:24:22746:22768	5230191	0	True				
ANR	5230216	ParameterType	gs_memory_chunk_t *		5230191	0					
ANR	5230217	Identifier	cmem		5230191	1					
ANR	5230218	Parameter	chunk_free_node_t * node	744:49:22771:22793	5230191	1	True				
ANR	5230219	ParameterType	chunk_free_node_t *		5230191	0					
ANR	5230220	Identifier	node		5230191	1					
ANR	5230221	CFGEntryNode	ENTRY		5230191		True				
ANR	5230222	CFGExitNode	EXIT		5230191		True				
ANR	5230223	Symbol	node		5230191						
ANR	5230224	Symbol	cmem		5230191						
ANR	5230225	Function	chunk_obj_alloc	757:0:23108:31721							
ANR	5230226	FunctionDef	"chunk_obj_alloc (gs_memory_t * mem , uint size , gs_memory_type_ptr_t type , client_name_t cname)"		5230225	0					
ANR	5230227	CompoundStatement		759:0:23215:31721	5230225	0					
ANR	5230228	IdentifierDeclStatement	gs_memory_chunk_t * cmem = ( gs_memory_chunk_t * ) mem ;	760:4:23221:23272	5230225	0	True				
ANR	5230229	IdentifierDecl	* cmem = ( gs_memory_chunk_t * ) mem		5230225	0					
ANR	5230230	IdentifierDeclType	gs_memory_chunk_t *		5230225	0					
ANR	5230231	Identifier	cmem		5230225	1					
ANR	5230232	AssignmentExpression	* cmem = ( gs_memory_chunk_t * ) mem		5230225	2		=			
ANR	5230233	Identifier	cmem		5230225	0					
ANR	5230234	CastExpression	( gs_memory_chunk_t * ) mem		5230225	1					
ANR	5230235	CastTarget	gs_memory_chunk_t *		5230225	0					
ANR	5230236	Identifier	mem		5230225	1					
ANR	5230237	IdentifierDeclStatement	"chunk_free_node_t * * ap , * * okp ;"	761:4:23278:23307	5230225	1	True				
ANR	5230238	IdentifierDecl	* * ap		5230225	0					
ANR	5230239	IdentifierDeclType	chunk_free_node_t * *		5230225	0					
ANR	5230240	Identifier	ap		5230225	1					
ANR	5230241	IdentifierDecl	* * okp		5230225	1					
ANR	5230242	IdentifierDeclType	chunk_free_node_t * *		5230225	0					
ANR	5230243	Identifier	okp		5230225	1					
ANR	5230244	IdentifierDeclStatement	"chunk_free_node_t * a , * b , * c ;"	762:4:23313:23342	5230225	2	True				
ANR	5230245	IdentifierDecl	* a		5230225	0					
ANR	5230246	IdentifierDeclType	chunk_free_node_t *		5230225	0					
ANR	5230247	Identifier	a		5230225	1					
ANR	5230248	IdentifierDecl	* b		5230225	1					
ANR	5230249	IdentifierDeclType	chunk_free_node_t *		5230225	0					
ANR	5230250	Identifier	b		5230225	1					
ANR	5230251	IdentifierDecl	* c		5230225	2					
ANR	5230252	IdentifierDeclType	chunk_free_node_t *		5230225	0					
ANR	5230253	Identifier	c		5230225	1					
ANR	5230254	IdentifierDeclStatement	uint newsize ;	763:4:23348:23360	5230225	3	True				
ANR	5230255	IdentifierDecl	newsize		5230225	0					
ANR	5230256	IdentifierDeclType	uint		5230225	0					
ANR	5230257	Identifier	newsize		5230225	1					
ANR	5230258	IdentifierDeclStatement	chunk_obj_node_t * obj = NULL ;	764:4:23366:23394	5230225	4	True				
ANR	5230259	IdentifierDecl	* obj = NULL		5230225	0					
ANR	5230260	IdentifierDeclType	chunk_obj_node_t *		5230225	0					
ANR	5230261	Identifier	obj		5230225	1					
ANR	5230262	AssignmentExpression	* obj = NULL		5230225	2		=			
ANR	5230263	Identifier	NULL		5230225	0					
ANR	5230264	Identifier	NULL		5230225	1					
ANR	5230265	ExpressionStatement	newsize = round_up_to_align ( size + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) )	766:4:23401:23473	5230225	5	True				
ANR	5230266	AssignmentExpression	newsize = round_up_to_align ( size + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) )		5230225	0		=			
ANR	5230267	Identifier	newsize		5230225	0					
ANR	5230268	CallExpression	round_up_to_align ( size + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) )		5230225	1					
ANR	5230269	Callee	round_up_to_align		5230225	0					
ANR	5230270	Identifier	round_up_to_align		5230225	0					
ANR	5230271	ArgumentList	size + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5230225	1					
ANR	5230272	Argument	size + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5230225	0					
ANR	5230273	AdditiveExpression	size + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5230225	0		+			
ANR	5230274	Identifier	size		5230225	0					
ANR	5230275	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5230225	1					
ANR	5230276	Callee	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5230277	Identifier	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5230278	ArgumentList	chunk_obj_node_t		5230225	1					
ANR	5230279	Argument	chunk_obj_node_t		5230225	0					
ANR	5230280	Identifier	chunk_obj_node_t		5230225	0					
ANR	5230281	IfStatement	if ( newsize < SIZEOF_ROUND_ALIGN ( chunk_free_node_t ) )		5230225	6					
ANR	5230282	Condition	newsize < SIZEOF_ROUND_ALIGN ( chunk_free_node_t )	769:8:23649:23695	5230225	0	True				
ANR	5230283	RelationalExpression	newsize < SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5230225	0		<			
ANR	5230284	Identifier	newsize		5230225	0					
ANR	5230285	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5230225	1					
ANR	5230286	Callee	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5230287	Identifier	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5230288	ArgumentList	chunk_free_node_t		5230225	1					
ANR	5230289	Argument	chunk_free_node_t		5230225	0					
ANR	5230290	Identifier	chunk_free_node_t		5230225	0					
ANR	5230291	ExpressionStatement	newsize = SIZEOF_ROUND_ALIGN ( chunk_free_node_t )	770:8:23706:23753	5230225	1	True				
ANR	5230292	AssignmentExpression	newsize = SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5230225	0		=			
ANR	5230293	Identifier	newsize		5230225	0					
ANR	5230294	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5230225	1					
ANR	5230295	Callee	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5230296	Identifier	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5230297	ArgumentList	chunk_free_node_t		5230225	1					
ANR	5230298	Argument	chunk_free_node_t		5230225	0					
ANR	5230299	Identifier	chunk_free_node_t		5230225	0					
ANR	5230300	IfStatement	if ( newsize < size )		5230225	7					
ANR	5230301	Condition	newsize < size	772:8:23798:23811	5230225	0	True				
ANR	5230302	RelationalExpression	newsize < size		5230225	0		<			
ANR	5230303	Identifier	newsize		5230225	0					
ANR	5230304	Identifier	size		5230225	1					
ANR	5230305	ReturnStatement	return NULL ;	773:8:23822:23833	5230225	1	True				
ANR	5230306	Identifier	NULL		5230225	0					
ANR	5230307	ExpressionStatement	cmem -> sequence ++	776:4:23857:23873	5230225	8	True				
ANR	5230308	PostIncDecOperationExpression	cmem -> sequence ++		5230225	0					
ANR	5230309	PtrMemberAccess	cmem -> sequence		5230225	0					
ANR	5230310	Identifier	cmem		5230225	0					
ANR	5230311	Identifier	sequence		5230225	1					
ANR	5230312	IncDec	++		5230225	1					
ANR	5230313	ExpressionStatement	"dmlprintf4 ( cmem -> target , ""Event %x: malloc(chunk=%p, size=%x, cname=%s)\\n"" , cmem -> sequence , cmem , newsize , cname )"	781:4:23929:24042	5230225	9	True				
ANR	5230314	CallExpression	"dmlprintf4 ( cmem -> target , ""Event %x: malloc(chunk=%p, size=%x, cname=%s)\\n"" , cmem -> sequence , cmem , newsize , cname )"		5230225	0					
ANR	5230315	Callee	dmlprintf4		5230225	0					
ANR	5230316	Identifier	dmlprintf4		5230225	0					
ANR	5230317	ArgumentList	cmem -> target		5230225	1					
ANR	5230318	Argument	cmem -> target		5230225	0					
ANR	5230319	PtrMemberAccess	cmem -> target		5230225	0					
ANR	5230320	Identifier	cmem		5230225	0					
ANR	5230321	Identifier	target		5230225	1					
ANR	5230322	Argument	"""Event %x: malloc(chunk=%p, size=%x, cname=%s)\\n"""		5230225	1					
ANR	5230323	PrimaryExpression	"""Event %x: malloc(chunk=%p, size=%x, cname=%s)\\n"""		5230225	0					
ANR	5230324	Argument	cmem -> sequence		5230225	2					
ANR	5230325	PtrMemberAccess	cmem -> sequence		5230225	0					
ANR	5230326	Identifier	cmem		5230225	0					
ANR	5230327	Identifier	sequence		5230225	1					
ANR	5230328	Argument	cmem		5230225	3					
ANR	5230329	Identifier	cmem		5230225	0					
ANR	5230330	Argument	newsize		5230225	4					
ANR	5230331	Identifier	newsize		5230225	0					
ANR	5230332	Argument	cname		5230225	5					
ANR	5230333	Identifier	cname		5230225	0					
ANR	5230334	IfStatement	if ( SINGLE_OBJECT_CHUNK ( newsize ) )		5230225	10					
ANR	5230335	Condition	SINGLE_OBJECT_CHUNK ( newsize )	788:8:24212:24239	5230225	0	True				
ANR	5230336	CallExpression	SINGLE_OBJECT_CHUNK ( newsize )		5230225	0					
ANR	5230337	Callee	SINGLE_OBJECT_CHUNK		5230225	0					
ANR	5230338	Identifier	SINGLE_OBJECT_CHUNK		5230225	0					
ANR	5230339	ArgumentList	newsize		5230225	1					
ANR	5230340	Argument	newsize		5230225	0					
ANR	5230341	Identifier	newsize		5230225	0					
ANR	5230342	CompoundStatement		30:38:1026:1026	5230225	1					
ANR	5230343	ExpressionStatement	"obj = ( chunk_obj_node_t * ) gs_alloc_bytes_immovable ( cmem -> target , newsize , cname )"	789:8:24252:24332	5230225	0	True				
ANR	5230344	AssignmentExpression	"obj = ( chunk_obj_node_t * ) gs_alloc_bytes_immovable ( cmem -> target , newsize , cname )"		5230225	0		=			
ANR	5230345	Identifier	obj		5230225	0					
ANR	5230346	CastExpression	"( chunk_obj_node_t * ) gs_alloc_bytes_immovable ( cmem -> target , newsize , cname )"		5230225	1					
ANR	5230347	CastTarget	chunk_obj_node_t *		5230225	0					
ANR	5230348	CallExpression	"gs_alloc_bytes_immovable ( cmem -> target , newsize , cname )"		5230225	1					
ANR	5230349	Callee	gs_alloc_bytes_immovable		5230225	0					
ANR	5230350	Identifier	gs_alloc_bytes_immovable		5230225	0					
ANR	5230351	ArgumentList	cmem -> target		5230225	1					
ANR	5230352	Argument	cmem -> target		5230225	0					
ANR	5230353	PtrMemberAccess	cmem -> target		5230225	0					
ANR	5230354	Identifier	cmem		5230225	0					
ANR	5230355	Identifier	target		5230225	1					
ANR	5230356	Argument	newsize		5230225	1					
ANR	5230357	Identifier	newsize		5230225	0					
ANR	5230358	Argument	cname		5230225	2					
ANR	5230359	Identifier	cname		5230225	0					
ANR	5230360	IfStatement	if ( obj == NULL )		5230225	1					
ANR	5230361	Condition	obj == NULL	790:12:24346:24356	5230225	0	True				
ANR	5230362	EqualityExpression	obj == NULL		5230225	0		==			
ANR	5230363	Identifier	obj		5230225	0					
ANR	5230364	Identifier	NULL		5230225	1					
ANR	5230365	ReturnStatement	return NULL ;	791:12:24371:24382	5230225	1	True				
ANR	5230366	Identifier	NULL		5230225	0					
ANR	5230367	ElseStatement	else		5230225	0					
ANR	5230368	CompoundStatement		34:11:1179:1179	5230225	0					
ANR	5230369	ExpressionStatement	ap = & cmem -> free_size	795:8:24536:24557	5230225	0	True				
ANR	5230370	AssignmentExpression	ap = & cmem -> free_size		5230225	0		=			
ANR	5230371	Identifier	ap		5230225	0					
ANR	5230372	UnaryOperationExpression	& cmem -> free_size		5230225	1					
ANR	5230373	UnaryOperator	&		5230225	0					
ANR	5230374	PtrMemberAccess	cmem -> free_size		5230225	1					
ANR	5230375	Identifier	cmem		5230225	0					
ANR	5230376	Identifier	free_size		5230225	1					
ANR	5230377	ExpressionStatement	okp = NULL	796:8:24567:24577	5230225	1	True				
ANR	5230378	AssignmentExpression	okp = NULL		5230225	0		=			
ANR	5230379	Identifier	okp		5230225	0					
ANR	5230380	Identifier	NULL		5230225	1					
ANR	5230381	WhileStatement	while ( ( a = * ap ) != NULL )		5230225	2					
ANR	5230382	Condition	( a = * ap ) != NULL	797:15:24594:24610	5230225	0	True				
ANR	5230383	EqualityExpression	( a = * ap ) != NULL		5230225	0		!=			
ANR	5230384	AssignmentExpression	a = * ap		5230225	0		=			
ANR	5230385	Identifier	a		5230225	0					
ANR	5230386	UnaryOperationExpression	* ap		5230225	1					
ANR	5230387	UnaryOperator	*		5230225	0					
ANR	5230388	Identifier	ap		5230225	1					
ANR	5230389	Identifier	NULL		5230225	1					
ANR	5230390	CompoundStatement		39:34:1397:1397	5230225	1					
ANR	5230391	IfStatement	if ( a -> size >= newsize )		5230225	0					
ANR	5230392	Condition	a -> size >= newsize	798:16:24631:24648	5230225	0	True				
ANR	5230393	RelationalExpression	a -> size >= newsize		5230225	0		>=			
ANR	5230394	PtrMemberAccess	a -> size		5230225	0					
ANR	5230395	Identifier	a		5230225	0					
ANR	5230396	Identifier	size		5230225	1					
ANR	5230397	Identifier	newsize		5230225	1					
ANR	5230398	CompoundStatement		40:36:1435:1435	5230225	1					
ANR	5230399	ExpressionStatement	b = a -> left_size	799:16:24669:24685	5230225	0	True				
ANR	5230400	AssignmentExpression	b = a -> left_size		5230225	0		=			
ANR	5230401	Identifier	b		5230225	0					
ANR	5230402	PtrMemberAccess	a -> left_size		5230225	1					
ANR	5230403	Identifier	a		5230225	0					
ANR	5230404	Identifier	left_size		5230225	1					
ANR	5230405	IfStatement	if ( b == NULL )		5230225	1					
ANR	5230406	Condition	b == NULL	800:20:24707:24715	5230225	0	True				
ANR	5230407	EqualityExpression	b == NULL		5230225	0		==			
ANR	5230408	Identifier	b		5230225	0					
ANR	5230409	Identifier	NULL		5230225	1					
ANR	5230410	CompoundStatement		42:31:1502:1502	5230225	1					
ANR	5230411	ExpressionStatement	okp = ap	801:20:24740:24748	5230225	0	True				
ANR	5230412	AssignmentExpression	okp = ap		5230225	0		=			
ANR	5230413	Identifier	okp		5230225	0					
ANR	5230414	Identifier	ap		5230225	1					
ANR	5230415	BreakStatement	break ;	802:20:24786:24791	5230225	1	True				
ANR	5230416	IfStatement	if ( b -> size >= newsize )		5230225	2					
ANR	5230417	Condition	b -> size >= newsize	804:20:24852:24869	5230225	0	True				
ANR	5230418	RelationalExpression	b -> size >= newsize		5230225	0		>=			
ANR	5230419	PtrMemberAccess	b -> size		5230225	0					
ANR	5230420	Identifier	b		5230225	0					
ANR	5230421	Identifier	size		5230225	1					
ANR	5230422	Identifier	newsize		5230225	1					
ANR	5230423	CompoundStatement		46:40:1656:1656	5230225	1					
ANR	5230424	ExpressionStatement	c = b -> left_size	805:20:24894:24910	5230225	0	True				
ANR	5230425	AssignmentExpression	c = b -> left_size		5230225	0		=			
ANR	5230426	Identifier	c		5230225	0					
ANR	5230427	PtrMemberAccess	b -> left_size		5230225	1					
ANR	5230428	Identifier	b		5230225	0					
ANR	5230429	Identifier	left_size		5230225	1					
ANR	5230430	IfStatement	if ( c == NULL )		5230225	1					
ANR	5230431	Condition	c == NULL	806:24:24936:24944	5230225	0	True				
ANR	5230432	EqualityExpression	c == NULL		5230225	0		==			
ANR	5230433	Identifier	c		5230225	0					
ANR	5230434	Identifier	NULL		5230225	1					
ANR	5230435	CompoundStatement		48:35:1731:1731	5230225	1					
ANR	5230436	ExpressionStatement	okp = & a -> left_size	807:24:24973:24992	5230225	0	True				
ANR	5230437	AssignmentExpression	okp = & a -> left_size		5230225	0		=			
ANR	5230438	Identifier	okp		5230225	0					
ANR	5230439	UnaryOperationExpression	& a -> left_size		5230225	1					
ANR	5230440	UnaryOperator	&		5230225	0					
ANR	5230441	PtrMemberAccess	a -> left_size		5230225	1					
ANR	5230442	Identifier	a		5230225	0					
ANR	5230443	Identifier	left_size		5230225	1					
ANR	5230444	BreakStatement	break ;	808:24:25059:25064	5230225	1	True				
ANR	5230445	ExpressionStatement	* ap = c	815:20:25358:25365	5230225	2	True				
ANR	5230446	AssignmentExpression	* ap = c		5230225	0		=			
ANR	5230447	UnaryOperationExpression	* ap		5230225	0					
ANR	5230448	UnaryOperator	*		5230225	0					
ANR	5230449	Identifier	ap		5230225	1					
ANR	5230450	Identifier	c		5230225	1					
ANR	5230451	ExpressionStatement	a -> left_size = b -> right_size	816:20:25387:25416	5230225	3	True				
ANR	5230452	AssignmentExpression	a -> left_size = b -> right_size		5230225	0		=			
ANR	5230453	PtrMemberAccess	a -> left_size		5230225	0					
ANR	5230454	Identifier	a		5230225	0					
ANR	5230455	Identifier	left_size		5230225	1					
ANR	5230456	PtrMemberAccess	b -> right_size		5230225	1					
ANR	5230457	Identifier	b		5230225	0					
ANR	5230458	Identifier	right_size		5230225	1					
ANR	5230459	ExpressionStatement	b -> left_size = c -> right_size	817:20:25438:25467	5230225	4	True				
ANR	5230460	AssignmentExpression	b -> left_size = c -> right_size		5230225	0		=			
ANR	5230461	PtrMemberAccess	b -> left_size		5230225	0					
ANR	5230462	Identifier	b		5230225	0					
ANR	5230463	Identifier	left_size		5230225	1					
ANR	5230464	PtrMemberAccess	c -> right_size		5230225	1					
ANR	5230465	Identifier	c		5230225	0					
ANR	5230466	Identifier	right_size		5230225	1					
ANR	5230467	ExpressionStatement	b -> right_size = a	818:20:25489:25506	5230225	5	True				
ANR	5230468	AssignmentExpression	b -> right_size = a		5230225	0		=			
ANR	5230469	PtrMemberAccess	b -> right_size		5230225	0					
ANR	5230470	Identifier	b		5230225	0					
ANR	5230471	Identifier	right_size		5230225	1					
ANR	5230472	Identifier	a		5230225	1					
ANR	5230473	ExpressionStatement	c -> right_size = b	819:20:25528:25545	5230225	6	True				
ANR	5230474	AssignmentExpression	c -> right_size = b		5230225	0		=			
ANR	5230475	PtrMemberAccess	c -> right_size		5230225	0					
ANR	5230476	Identifier	c		5230225	0					
ANR	5230477	Identifier	right_size		5230225	1					
ANR	5230478	Identifier	b		5230225	1					
ANR	5230479	IfStatement	if ( c -> size >= newsize )		5230225	7					
ANR	5230480	Condition	c -> size >= newsize	820:24:25571:25588	5230225	0	True				
ANR	5230481	RelationalExpression	c -> size >= newsize		5230225	0		>=			
ANR	5230482	PtrMemberAccess	c -> size		5230225	0					
ANR	5230483	Identifier	c		5230225	0					
ANR	5230484	Identifier	size		5230225	1					
ANR	5230485	Identifier	newsize		5230225	1					
ANR	5230486	CompoundStatement		62:44:2375:2375	5230225	1					
ANR	5230487	ExpressionStatement	okp = ap	821:24:25617:25625	5230225	0	True				
ANR	5230488	AssignmentExpression	okp = ap		5230225	0		=			
ANR	5230489	Identifier	okp		5230225	0					
ANR	5230490	Identifier	ap		5230225	1					
ANR	5230491	ExpressionStatement	ap = & c -> left_size	822:24:25678:25696	5230225	1	True				
ANR	5230492	AssignmentExpression	ap = & c -> left_size		5230225	0		=			
ANR	5230493	Identifier	ap		5230225	0					
ANR	5230494	UnaryOperationExpression	& c -> left_size		5230225	1					
ANR	5230495	UnaryOperator	&		5230225	0					
ANR	5230496	PtrMemberAccess	c -> left_size		5230225	1					
ANR	5230497	Identifier	c		5230225	0					
ANR	5230498	Identifier	left_size		5230225	1					
ANR	5230499	ElseStatement	else		5230225	0					
ANR	5230500	CompoundStatement		65:27:2509:2509	5230225	0					
ANR	5230501	ExpressionStatement	okp = & c -> right_size	824:24:25751:25771	5230225	0	True				
ANR	5230502	AssignmentExpression	okp = & c -> right_size		5230225	0		=			
ANR	5230503	Identifier	okp		5230225	0					
ANR	5230504	UnaryOperationExpression	& c -> right_size		5230225	1					
ANR	5230505	UnaryOperator	&		5230225	0					
ANR	5230506	PtrMemberAccess	c -> right_size		5230225	1					
ANR	5230507	Identifier	c		5230225	0					
ANR	5230508	Identifier	right_size		5230225	1					
ANR	5230509	ExpressionStatement	ap = & b -> left_size	825:24:25824:25842	5230225	1	True				
ANR	5230510	AssignmentExpression	ap = & b -> left_size		5230225	0		=			
ANR	5230511	Identifier	ap		5230225	0					
ANR	5230512	UnaryOperationExpression	& b -> left_size		5230225	1					
ANR	5230513	UnaryOperator	&		5230225	0					
ANR	5230514	PtrMemberAccess	b -> left_size		5230225	1					
ANR	5230515	Identifier	b		5230225	0					
ANR	5230516	Identifier	left_size		5230225	1					
ANR	5230517	ElseStatement	else		5230225	0					
ANR	5230518	CompoundStatement		69:23:2673:2673	5230225	0					
ANR	5230519	ExpressionStatement	c = b -> right_size	828:20:25911:25928	5230225	0	True				
ANR	5230520	AssignmentExpression	c = b -> right_size		5230225	0		=			
ANR	5230521	Identifier	c		5230225	0					
ANR	5230522	PtrMemberAccess	b -> right_size		5230225	1					
ANR	5230523	Identifier	b		5230225	0					
ANR	5230524	Identifier	right_size		5230225	1					
ANR	5230525	IfStatement	if ( c == NULL )		5230225	1					
ANR	5230526	Condition	c == NULL	829:24:25954:25962	5230225	0	True				
ANR	5230527	EqualityExpression	c == NULL		5230225	0		==			
ANR	5230528	Identifier	c		5230225	0					
ANR	5230529	Identifier	NULL		5230225	1					
ANR	5230530	CompoundStatement		71:35:2749:2749	5230225	1					
ANR	5230531	ExpressionStatement	okp = ap	830:24:25991:25999	5230225	0	True				
ANR	5230532	AssignmentExpression	okp = ap		5230225	0		=			
ANR	5230533	Identifier	okp		5230225	0					
ANR	5230534	Identifier	ap		5230225	1					
ANR	5230535	BreakStatement	break ;	831:24:26067:26072	5230225	1	True				
ANR	5230536	ExpressionStatement	* ap = c	838:20:26346:26353	5230225	2	True				
ANR	5230537	AssignmentExpression	* ap = c		5230225	0		=			
ANR	5230538	UnaryOperationExpression	* ap		5230225	0					
ANR	5230539	UnaryOperator	*		5230225	0					
ANR	5230540	Identifier	ap		5230225	1					
ANR	5230541	Identifier	c		5230225	1					
ANR	5230542	ExpressionStatement	a -> left_size = c -> right_size	839:20:26375:26404	5230225	3	True				
ANR	5230543	AssignmentExpression	a -> left_size = c -> right_size		5230225	0		=			
ANR	5230544	PtrMemberAccess	a -> left_size		5230225	0					
ANR	5230545	Identifier	a		5230225	0					
ANR	5230546	Identifier	left_size		5230225	1					
ANR	5230547	PtrMemberAccess	c -> right_size		5230225	1					
ANR	5230548	Identifier	c		5230225	0					
ANR	5230549	Identifier	right_size		5230225	1					
ANR	5230550	ExpressionStatement	b -> right_size = c -> left_size	840:20:26426:26454	5230225	4	True				
ANR	5230551	AssignmentExpression	b -> right_size = c -> left_size		5230225	0		=			
ANR	5230552	PtrMemberAccess	b -> right_size		5230225	0					
ANR	5230553	Identifier	b		5230225	0					
ANR	5230554	Identifier	right_size		5230225	1					
ANR	5230555	PtrMemberAccess	c -> left_size		5230225	1					
ANR	5230556	Identifier	c		5230225	0					
ANR	5230557	Identifier	left_size		5230225	1					
ANR	5230558	ExpressionStatement	c -> left_size = b	841:20:26476:26493	5230225	5	True				
ANR	5230559	AssignmentExpression	c -> left_size = b		5230225	0		=			
ANR	5230560	PtrMemberAccess	c -> left_size		5230225	0					
ANR	5230561	Identifier	c		5230225	0					
ANR	5230562	Identifier	left_size		5230225	1					
ANR	5230563	Identifier	b		5230225	1					
ANR	5230564	ExpressionStatement	c -> right_size = a	842:20:26515:26532	5230225	6	True				
ANR	5230565	AssignmentExpression	c -> right_size = a		5230225	0		=			
ANR	5230566	PtrMemberAccess	c -> right_size		5230225	0					
ANR	5230567	Identifier	c		5230225	0					
ANR	5230568	Identifier	right_size		5230225	1					
ANR	5230569	Identifier	a		5230225	1					
ANR	5230570	IfStatement	if ( c -> size >= newsize )		5230225	7					
ANR	5230571	Condition	c -> size >= newsize	843:24:26558:26575	5230225	0	True				
ANR	5230572	RelationalExpression	c -> size >= newsize		5230225	0		>=			
ANR	5230573	PtrMemberAccess	c -> size		5230225	0					
ANR	5230574	Identifier	c		5230225	0					
ANR	5230575	Identifier	size		5230225	1					
ANR	5230576	Identifier	newsize		5230225	1					
ANR	5230577	CompoundStatement		85:44:3362:3362	5230225	1					
ANR	5230578	ExpressionStatement	okp = ap	844:24:26604:26612	5230225	0	True				
ANR	5230579	AssignmentExpression	okp = ap		5230225	0		=			
ANR	5230580	Identifier	okp		5230225	0					
ANR	5230581	Identifier	ap		5230225	1					
ANR	5230582	ExpressionStatement	ap = & b -> right_size	845:24:26665:26684	5230225	1	True				
ANR	5230583	AssignmentExpression	ap = & b -> right_size		5230225	0		=			
ANR	5230584	Identifier	ap		5230225	0					
ANR	5230585	UnaryOperationExpression	& b -> right_size		5230225	1					
ANR	5230586	UnaryOperator	&		5230225	0					
ANR	5230587	PtrMemberAccess	b -> right_size		5230225	1					
ANR	5230588	Identifier	b		5230225	0					
ANR	5230589	Identifier	right_size		5230225	1					
ANR	5230590	ElseStatement	else		5230225	0					
ANR	5230591	CompoundStatement		88:27:3497:3497	5230225	0					
ANR	5230592	ExpressionStatement	okp = & c -> right_size	847:24:26739:26759	5230225	0	True				
ANR	5230593	AssignmentExpression	okp = & c -> right_size		5230225	0		=			
ANR	5230594	Identifier	okp		5230225	0					
ANR	5230595	UnaryOperationExpression	& c -> right_size		5230225	1					
ANR	5230596	UnaryOperator	&		5230225	0					
ANR	5230597	PtrMemberAccess	c -> right_size		5230225	1					
ANR	5230598	Identifier	c		5230225	0					
ANR	5230599	Identifier	right_size		5230225	1					
ANR	5230600	ExpressionStatement	ap = & a -> left_size	848:24:26812:26830	5230225	1	True				
ANR	5230601	AssignmentExpression	ap = & a -> left_size		5230225	0		=			
ANR	5230602	Identifier	ap		5230225	0					
ANR	5230603	UnaryOperationExpression	& a -> left_size		5230225	1					
ANR	5230604	UnaryOperator	&		5230225	0					
ANR	5230605	PtrMemberAccess	a -> left_size		5230225	1					
ANR	5230606	Identifier	a		5230225	0					
ANR	5230607	Identifier	left_size		5230225	1					
ANR	5230608	ElseStatement	else		5230225	0					
ANR	5230609	CompoundStatement		93:19:3675:3675	5230225	0					
ANR	5230610	ExpressionStatement	b = a -> right_size	852:16:26909:26926	5230225	0	True				
ANR	5230611	AssignmentExpression	b = a -> right_size		5230225	0		=			
ANR	5230612	Identifier	b		5230225	0					
ANR	5230613	PtrMemberAccess	a -> right_size		5230225	1					
ANR	5230614	Identifier	a		5230225	0					
ANR	5230615	Identifier	right_size		5230225	1					
ANR	5230616	IfStatement	if ( b == NULL )		5230225	1					
ANR	5230617	Condition	b == NULL	853:20:26948:26956	5230225	0	True				
ANR	5230618	EqualityExpression	b == NULL		5230225	0		==			
ANR	5230619	Identifier	b		5230225	0					
ANR	5230620	Identifier	NULL		5230225	1					
ANR	5230621	BreakStatement	break ;	854:20:26979:26984	5230225	1	True				
ANR	5230622	IfStatement	if ( b -> size >= newsize )		5230225	2					
ANR	5230623	Condition	b -> size >= newsize	855:20:27040:27057	5230225	0	True				
ANR	5230624	RelationalExpression	b -> size >= newsize		5230225	0		>=			
ANR	5230625	PtrMemberAccess	b -> size		5230225	0					
ANR	5230626	Identifier	b		5230225	0					
ANR	5230627	Identifier	size		5230225	1					
ANR	5230628	Identifier	newsize		5230225	1					
ANR	5230629	CompoundStatement		97:40:3844:3844	5230225	1					
ANR	5230630	ExpressionStatement	c = b -> left_size	856:20:27082:27098	5230225	0	True				
ANR	5230631	AssignmentExpression	c = b -> left_size		5230225	0		=			
ANR	5230632	Identifier	c		5230225	0					
ANR	5230633	PtrMemberAccess	b -> left_size		5230225	1					
ANR	5230634	Identifier	b		5230225	0					
ANR	5230635	Identifier	left_size		5230225	1					
ANR	5230636	IfStatement	if ( c == NULL )		5230225	1					
ANR	5230637	Condition	c == NULL	857:24:27124:27132	5230225	0	True				
ANR	5230638	EqualityExpression	c == NULL		5230225	0		==			
ANR	5230639	Identifier	c		5230225	0					
ANR	5230640	Identifier	NULL		5230225	1					
ANR	5230641	CompoundStatement		99:35:3919:3919	5230225	1					
ANR	5230642	ExpressionStatement	okp = & a -> right_size	858:24:27161:27181	5230225	0	True				
ANR	5230643	AssignmentExpression	okp = & a -> right_size		5230225	0		=			
ANR	5230644	Identifier	okp		5230225	0					
ANR	5230645	UnaryOperationExpression	& a -> right_size		5230225	1					
ANR	5230646	UnaryOperator	&		5230225	0					
ANR	5230647	PtrMemberAccess	a -> right_size		5230225	1					
ANR	5230648	Identifier	a		5230225	0					
ANR	5230649	Identifier	right_size		5230225	1					
ANR	5230650	BreakStatement	break ;	859:24:27248:27253	5230225	1	True				
ANR	5230651	ExpressionStatement	* ap = c	866:20:27528:27535	5230225	2	True				
ANR	5230652	AssignmentExpression	* ap = c		5230225	0		=			
ANR	5230653	UnaryOperationExpression	* ap		5230225	0					
ANR	5230654	UnaryOperator	*		5230225	0					
ANR	5230655	Identifier	ap		5230225	1					
ANR	5230656	Identifier	c		5230225	1					
ANR	5230657	ExpressionStatement	a -> right_size = c -> left_size	867:20:27557:27585	5230225	3	True				
ANR	5230658	AssignmentExpression	a -> right_size = c -> left_size		5230225	0		=			
ANR	5230659	PtrMemberAccess	a -> right_size		5230225	0					
ANR	5230660	Identifier	a		5230225	0					
ANR	5230661	Identifier	right_size		5230225	1					
ANR	5230662	PtrMemberAccess	c -> left_size		5230225	1					
ANR	5230663	Identifier	c		5230225	0					
ANR	5230664	Identifier	left_size		5230225	1					
ANR	5230665	ExpressionStatement	b -> left_size = c -> right_size	868:20:27607:27636	5230225	4	True				
ANR	5230666	AssignmentExpression	b -> left_size = c -> right_size		5230225	0		=			
ANR	5230667	PtrMemberAccess	b -> left_size		5230225	0					
ANR	5230668	Identifier	b		5230225	0					
ANR	5230669	Identifier	left_size		5230225	1					
ANR	5230670	PtrMemberAccess	c -> right_size		5230225	1					
ANR	5230671	Identifier	c		5230225	0					
ANR	5230672	Identifier	right_size		5230225	1					
ANR	5230673	ExpressionStatement	c -> left_size = a	869:20:27658:27675	5230225	5	True				
ANR	5230674	AssignmentExpression	c -> left_size = a		5230225	0		=			
ANR	5230675	PtrMemberAccess	c -> left_size		5230225	0					
ANR	5230676	Identifier	c		5230225	0					
ANR	5230677	Identifier	left_size		5230225	1					
ANR	5230678	Identifier	a		5230225	1					
ANR	5230679	ExpressionStatement	c -> right_size = b	870:20:27697:27714	5230225	6	True				
ANR	5230680	AssignmentExpression	c -> right_size = b		5230225	0		=			
ANR	5230681	PtrMemberAccess	c -> right_size		5230225	0					
ANR	5230682	Identifier	c		5230225	0					
ANR	5230683	Identifier	right_size		5230225	1					
ANR	5230684	Identifier	b		5230225	1					
ANR	5230685	IfStatement	if ( c -> size >= newsize )		5230225	7					
ANR	5230686	Condition	c -> size >= newsize	871:24:27740:27757	5230225	0	True				
ANR	5230687	RelationalExpression	c -> size >= newsize		5230225	0		>=			
ANR	5230688	PtrMemberAccess	c -> size		5230225	0					
ANR	5230689	Identifier	c		5230225	0					
ANR	5230690	Identifier	size		5230225	1					
ANR	5230691	Identifier	newsize		5230225	1					
ANR	5230692	CompoundStatement		113:44:4544:4544	5230225	1					
ANR	5230693	ExpressionStatement	okp = ap	872:24:27786:27794	5230225	0	True				
ANR	5230694	AssignmentExpression	okp = ap		5230225	0		=			
ANR	5230695	Identifier	okp		5230225	0					
ANR	5230696	Identifier	ap		5230225	1					
ANR	5230697	ExpressionStatement	ap = & a -> right_size	873:24:27847:27866	5230225	1	True				
ANR	5230698	AssignmentExpression	ap = & a -> right_size		5230225	0		=			
ANR	5230699	Identifier	ap		5230225	0					
ANR	5230700	UnaryOperationExpression	& a -> right_size		5230225	1					
ANR	5230701	UnaryOperator	&		5230225	0					
ANR	5230702	PtrMemberAccess	a -> right_size		5230225	1					
ANR	5230703	Identifier	a		5230225	0					
ANR	5230704	Identifier	right_size		5230225	1					
ANR	5230705	ElseStatement	else		5230225	0					
ANR	5230706	CompoundStatement		116:27:4679:4679	5230225	0					
ANR	5230707	ExpressionStatement	okp = & c -> right_size	875:24:27921:27941	5230225	0	True				
ANR	5230708	AssignmentExpression	okp = & c -> right_size		5230225	0		=			
ANR	5230709	Identifier	okp		5230225	0					
ANR	5230710	UnaryOperationExpression	& c -> right_size		5230225	1					
ANR	5230711	UnaryOperator	&		5230225	0					
ANR	5230712	PtrMemberAccess	c -> right_size		5230225	1					
ANR	5230713	Identifier	c		5230225	0					
ANR	5230714	Identifier	right_size		5230225	1					
ANR	5230715	ExpressionStatement	ap = & b -> left_size	876:24:27994:28012	5230225	1	True				
ANR	5230716	AssignmentExpression	ap = & b -> left_size		5230225	0		=			
ANR	5230717	Identifier	ap		5230225	0					
ANR	5230718	UnaryOperationExpression	& b -> left_size		5230225	1					
ANR	5230719	UnaryOperator	&		5230225	0					
ANR	5230720	PtrMemberAccess	b -> left_size		5230225	1					
ANR	5230721	Identifier	b		5230225	0					
ANR	5230722	Identifier	left_size		5230225	1					
ANR	5230723	ElseStatement	else		5230225	0					
ANR	5230724	CompoundStatement		120:23:4843:4843	5230225	0					
ANR	5230725	ExpressionStatement	c = b -> right_size	879:20:28081:28098	5230225	0	True				
ANR	5230726	AssignmentExpression	c = b -> right_size		5230225	0		=			
ANR	5230727	Identifier	c		5230225	0					
ANR	5230728	PtrMemberAccess	b -> right_size		5230225	1					
ANR	5230729	Identifier	b		5230225	0					
ANR	5230730	Identifier	right_size		5230225	1					
ANR	5230731	IfStatement	if ( c == NULL )		5230225	1					
ANR	5230732	Condition	c == NULL	880:24:28124:28132	5230225	0	True				
ANR	5230733	EqualityExpression	c == NULL		5230225	0		==			
ANR	5230734	Identifier	c		5230225	0					
ANR	5230735	Identifier	NULL		5230225	1					
ANR	5230736	BreakStatement	break ;	881:24:28159:28164	5230225	1	True				
ANR	5230737	ExpressionStatement	* ap = c	887:20:28462:28469	5230225	2	True				
ANR	5230738	AssignmentExpression	* ap = c		5230225	0		=			
ANR	5230739	UnaryOperationExpression	* ap		5230225	0					
ANR	5230740	UnaryOperator	*		5230225	0					
ANR	5230741	Identifier	ap		5230225	1					
ANR	5230742	Identifier	c		5230225	1					
ANR	5230743	ExpressionStatement	a -> right_size = b -> left_size	888:20:28491:28519	5230225	3	True				
ANR	5230744	AssignmentExpression	a -> right_size = b -> left_size		5230225	0		=			
ANR	5230745	PtrMemberAccess	a -> right_size		5230225	0					
ANR	5230746	Identifier	a		5230225	0					
ANR	5230747	Identifier	right_size		5230225	1					
ANR	5230748	PtrMemberAccess	b -> left_size		5230225	1					
ANR	5230749	Identifier	b		5230225	0					
ANR	5230750	Identifier	left_size		5230225	1					
ANR	5230751	ExpressionStatement	b -> right_size = c -> left_size	889:20:28541:28569	5230225	4	True				
ANR	5230752	AssignmentExpression	b -> right_size = c -> left_size		5230225	0		=			
ANR	5230753	PtrMemberAccess	b -> right_size		5230225	0					
ANR	5230754	Identifier	b		5230225	0					
ANR	5230755	Identifier	right_size		5230225	1					
ANR	5230756	PtrMemberAccess	c -> left_size		5230225	1					
ANR	5230757	Identifier	c		5230225	0					
ANR	5230758	Identifier	left_size		5230225	1					
ANR	5230759	ExpressionStatement	b -> left_size = a	890:20:28591:28608	5230225	5	True				
ANR	5230760	AssignmentExpression	b -> left_size = a		5230225	0		=			
ANR	5230761	PtrMemberAccess	b -> left_size		5230225	0					
ANR	5230762	Identifier	b		5230225	0					
ANR	5230763	Identifier	left_size		5230225	1					
ANR	5230764	Identifier	a		5230225	1					
ANR	5230765	ExpressionStatement	c -> left_size = b	891:20:28630:28647	5230225	6	True				
ANR	5230766	AssignmentExpression	c -> left_size = b		5230225	0		=			
ANR	5230767	PtrMemberAccess	c -> left_size		5230225	0					
ANR	5230768	Identifier	c		5230225	0					
ANR	5230769	Identifier	left_size		5230225	1					
ANR	5230770	Identifier	b		5230225	1					
ANR	5230771	IfStatement	if ( c -> size >= newsize )		5230225	7					
ANR	5230772	Condition	c -> size >= newsize	892:24:28673:28690	5230225	0	True				
ANR	5230773	RelationalExpression	c -> size >= newsize		5230225	0		>=			
ANR	5230774	PtrMemberAccess	c -> size		5230225	0					
ANR	5230775	Identifier	c		5230225	0					
ANR	5230776	Identifier	size		5230225	1					
ANR	5230777	Identifier	newsize		5230225	1					
ANR	5230778	CompoundStatement		134:44:5477:5477	5230225	1					
ANR	5230779	ExpressionStatement	okp = ap	893:24:28719:28727	5230225	0	True				
ANR	5230780	AssignmentExpression	okp = ap		5230225	0		=			
ANR	5230781	Identifier	okp		5230225	0					
ANR	5230782	Identifier	ap		5230225	1					
ANR	5230783	ExpressionStatement	ap = & b -> right_size	894:24:28780:28799	5230225	1	True				
ANR	5230784	AssignmentExpression	ap = & b -> right_size		5230225	0		=			
ANR	5230785	Identifier	ap		5230225	0					
ANR	5230786	UnaryOperationExpression	& b -> right_size		5230225	1					
ANR	5230787	UnaryOperator	&		5230225	0					
ANR	5230788	PtrMemberAccess	b -> right_size		5230225	1					
ANR	5230789	Identifier	b		5230225	0					
ANR	5230790	Identifier	right_size		5230225	1					
ANR	5230791	ElseStatement	else		5230225	0					
ANR	5230792	ExpressionStatement	ap = & c -> right_size	896:24:28852:28871	5230225	0	True				
ANR	5230793	AssignmentExpression	ap = & c -> right_size		5230225	0		=			
ANR	5230794	Identifier	ap		5230225	0					
ANR	5230795	UnaryOperationExpression	& c -> right_size		5230225	1					
ANR	5230796	UnaryOperator	&		5230225	0					
ANR	5230797	PtrMemberAccess	c -> right_size		5230225	1					
ANR	5230798	Identifier	c		5230225	0					
ANR	5230799	Identifier	right_size		5230225	1					
ANR	5230800	IfStatement	if ( okp == NULL )		5230225	3					
ANR	5230801	Condition	okp == NULL	903:12:28999:29009	5230225	0	True				
ANR	5230802	EqualityExpression	okp == NULL		5230225	0		==			
ANR	5230803	Identifier	okp		5230225	0					
ANR	5230804	Identifier	NULL		5230225	1					
ANR	5230805	CompoundStatement		148:12:5924:5983	5230225	1					
ANR	5230806	IdentifierDeclStatement	chunk_slab_t * slab ;	905:12:29108:29126	5230225	0	True				
ANR	5230807	IdentifierDecl	* slab		5230225	0					
ANR	5230808	IdentifierDeclType	chunk_slab_t *		5230225	0					
ANR	5230809	Identifier	slab		5230225	1					
ANR	5230810	IdentifierDeclStatement	uint slab_size = newsize + SIZEOF_ROUND_ALIGN ( chunk_slab_t ) ;	906:12:29140:29199	5230225	1	True				
ANR	5230811	IdentifierDecl	slab_size = newsize + SIZEOF_ROUND_ALIGN ( chunk_slab_t )		5230225	0					
ANR	5230812	IdentifierDeclType	uint		5230225	0					
ANR	5230813	Identifier	slab_size		5230225	1					
ANR	5230814	AssignmentExpression	slab_size = newsize + SIZEOF_ROUND_ALIGN ( chunk_slab_t )		5230225	2		=			
ANR	5230815	Identifier	slab_size		5230225	0					
ANR	5230816	AdditiveExpression	newsize + SIZEOF_ROUND_ALIGN ( chunk_slab_t )		5230225	1		+			
ANR	5230817	Identifier	newsize		5230225	0					
ANR	5230818	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_slab_t )		5230225	1					
ANR	5230819	Callee	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5230820	Identifier	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5230821	ArgumentList	chunk_slab_t		5230225	1					
ANR	5230822	Argument	chunk_slab_t		5230225	0					
ANR	5230823	Identifier	chunk_slab_t		5230225	0					
ANR	5230824	IfStatement	if ( slab_size <= ( CHUNK_SIZE >> 1 ) )		5230225	2					
ANR	5230825	Condition	slab_size <= ( CHUNK_SIZE >> 1 )	907:16:29217:29244	5230225	0	True				
ANR	5230826	RelationalExpression	slab_size <= ( CHUNK_SIZE >> 1 )		5230225	0		<=			
ANR	5230827	Identifier	slab_size		5230225	0					
ANR	5230828	ShiftExpression	CHUNK_SIZE >> 1		5230225	1		>>			
ANR	5230829	Identifier	CHUNK_SIZE		5230225	0					
ANR	5230830	PrimaryExpression	1		5230225	1					
ANR	5230831	ExpressionStatement	slab_size = CHUNK_SIZE	908:16:29263:29285	5230225	1	True				
ANR	5230832	AssignmentExpression	slab_size = CHUNK_SIZE		5230225	0		=			
ANR	5230833	Identifier	slab_size		5230225	0					
ANR	5230834	Identifier	CHUNK_SIZE		5230225	1					
ANR	5230835	ExpressionStatement	"slab = ( chunk_slab_t * ) gs_alloc_bytes_immovable ( cmem -> target , slab_size , cname )"	909:12:29299:29378	5230225	3	True				
ANR	5230836	AssignmentExpression	"slab = ( chunk_slab_t * ) gs_alloc_bytes_immovable ( cmem -> target , slab_size , cname )"		5230225	0		=			
ANR	5230837	Identifier	slab		5230225	0					
ANR	5230838	CastExpression	"( chunk_slab_t * ) gs_alloc_bytes_immovable ( cmem -> target , slab_size , cname )"		5230225	1					
ANR	5230839	CastTarget	chunk_slab_t *		5230225	0					
ANR	5230840	CallExpression	"gs_alloc_bytes_immovable ( cmem -> target , slab_size , cname )"		5230225	1					
ANR	5230841	Callee	gs_alloc_bytes_immovable		5230225	0					
ANR	5230842	Identifier	gs_alloc_bytes_immovable		5230225	0					
ANR	5230843	ArgumentList	cmem -> target		5230225	1					
ANR	5230844	Argument	cmem -> target		5230225	0					
ANR	5230845	PtrMemberAccess	cmem -> target		5230225	0					
ANR	5230846	Identifier	cmem		5230225	0					
ANR	5230847	Identifier	target		5230225	1					
ANR	5230848	Argument	slab_size		5230225	1					
ANR	5230849	Identifier	slab_size		5230225	0					
ANR	5230850	Argument	cname		5230225	2					
ANR	5230851	Identifier	cname		5230225	0					
ANR	5230852	IfStatement	if ( slab == NULL )		5230225	4					
ANR	5230853	Condition	slab == NULL	910:16:29396:29407	5230225	0	True				
ANR	5230854	EqualityExpression	slab == NULL		5230225	0		==			
ANR	5230855	Identifier	slab		5230225	0					
ANR	5230856	Identifier	NULL		5230225	1					
ANR	5230857	ReturnStatement	return NULL ;	911:16:29426:29437	5230225	1	True				
ANR	5230858	Identifier	NULL		5230225	0					
ANR	5230859	ExpressionStatement	slab -> next = cmem -> slabs	912:12:29451:29475	5230225	5	True				
ANR	5230860	AssignmentExpression	slab -> next = cmem -> slabs		5230225	0		=			
ANR	5230861	PtrMemberAccess	slab -> next		5230225	0					
ANR	5230862	Identifier	slab		5230225	0					
ANR	5230863	Identifier	next		5230225	1					
ANR	5230864	PtrMemberAccess	cmem -> slabs		5230225	1					
ANR	5230865	Identifier	cmem		5230225	0					
ANR	5230866	Identifier	slabs		5230225	1					
ANR	5230867	ExpressionStatement	cmem -> slabs = slab	913:12:29489:29507	5230225	6	True				
ANR	5230868	AssignmentExpression	cmem -> slabs = slab		5230225	0		=			
ANR	5230869	PtrMemberAccess	cmem -> slabs		5230225	0					
ANR	5230870	Identifier	cmem		5230225	0					
ANR	5230871	Identifier	slabs		5230225	1					
ANR	5230872	Identifier	slab		5230225	1					
ANR	5230873	ExpressionStatement	obj = ( chunk_obj_node_t * ) ( ( ( byte * ) slab ) + SIZEOF_ROUND_ALIGN ( chunk_slab_t ) )	915:12:29522:29599	5230225	7	True				
ANR	5230874	AssignmentExpression	obj = ( chunk_obj_node_t * ) ( ( ( byte * ) slab ) + SIZEOF_ROUND_ALIGN ( chunk_slab_t ) )		5230225	0		=			
ANR	5230875	Identifier	obj		5230225	0					
ANR	5230876	CastExpression	( chunk_obj_node_t * ) ( ( ( byte * ) slab ) + SIZEOF_ROUND_ALIGN ( chunk_slab_t ) )		5230225	1					
ANR	5230877	CastTarget	chunk_obj_node_t *		5230225	0					
ANR	5230878	AdditiveExpression	( ( byte * ) slab ) + SIZEOF_ROUND_ALIGN ( chunk_slab_t )		5230225	1		+			
ANR	5230879	CastExpression	( byte * ) slab		5230225	0					
ANR	5230880	CastTarget	byte *		5230225	0					
ANR	5230881	Identifier	slab		5230225	1					
ANR	5230882	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_slab_t )		5230225	1					
ANR	5230883	Callee	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5230884	Identifier	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5230885	ArgumentList	chunk_slab_t		5230225	1					
ANR	5230886	Argument	chunk_slab_t		5230225	0					
ANR	5230887	Identifier	chunk_slab_t		5230225	0					
ANR	5230888	IfStatement	if ( slab_size != newsize + SIZEOF_ROUND_ALIGN ( chunk_slab_t ) )		5230225	8					
ANR	5230889	Condition	slab_size != newsize + SIZEOF_ROUND_ALIGN ( chunk_slab_t )	916:16:29617:29671	5230225	0	True				
ANR	5230890	EqualityExpression	slab_size != newsize + SIZEOF_ROUND_ALIGN ( chunk_slab_t )		5230225	0		!=			
ANR	5230891	Identifier	slab_size		5230225	0					
ANR	5230892	AdditiveExpression	newsize + SIZEOF_ROUND_ALIGN ( chunk_slab_t )		5230225	1		+			
ANR	5230893	Identifier	newsize		5230225	0					
ANR	5230894	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_slab_t )		5230225	1					
ANR	5230895	Callee	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5230896	Identifier	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5230897	ArgumentList	chunk_slab_t		5230225	1					
ANR	5230898	Argument	chunk_slab_t		5230225	0					
ANR	5230899	Identifier	chunk_slab_t		5230225	0					
ANR	5230900	CompoundStatement		158:73:6458:6458	5230225	1					
ANR	5230901	ExpressionStatement	"insert_free ( cmem , ( chunk_free_node_t * ) ( ( ( byte * ) obj ) + newsize ) , slab_size - newsize - SIZEOF_ROUND_ALIGN ( chunk_slab_t ) )"	917:16:29692:29811	5230225	0	True				
ANR	5230902	CallExpression	"insert_free ( cmem , ( chunk_free_node_t * ) ( ( ( byte * ) obj ) + newsize ) , slab_size - newsize - SIZEOF_ROUND_ALIGN ( chunk_slab_t ) )"		5230225	0					
ANR	5230903	Callee	insert_free		5230225	0					
ANR	5230904	Identifier	insert_free		5230225	0					
ANR	5230905	ArgumentList	cmem		5230225	1					
ANR	5230906	Argument	cmem		5230225	0					
ANR	5230907	Identifier	cmem		5230225	0					
ANR	5230908	Argument	( chunk_free_node_t * ) ( ( ( byte * ) obj ) + newsize )		5230225	1					
ANR	5230909	CastExpression	( chunk_free_node_t * ) ( ( ( byte * ) obj ) + newsize )		5230225	0					
ANR	5230910	CastTarget	chunk_free_node_t *		5230225	0					
ANR	5230911	AdditiveExpression	( ( byte * ) obj ) + newsize		5230225	1		+			
ANR	5230912	CastExpression	( byte * ) obj		5230225	0					
ANR	5230913	CastTarget	byte *		5230225	0					
ANR	5230914	Identifier	obj		5230225	1					
ANR	5230915	Identifier	newsize		5230225	1					
ANR	5230916	Argument	slab_size - newsize - SIZEOF_ROUND_ALIGN ( chunk_slab_t )		5230225	2					
ANR	5230917	AdditiveExpression	slab_size - newsize - SIZEOF_ROUND_ALIGN ( chunk_slab_t )		5230225	0		-			
ANR	5230918	Identifier	slab_size		5230225	0					
ANR	5230919	AdditiveExpression	newsize - SIZEOF_ROUND_ALIGN ( chunk_slab_t )		5230225	1		-			
ANR	5230920	Identifier	newsize		5230225	0					
ANR	5230921	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_slab_t )		5230225	1					
ANR	5230922	Callee	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5230923	Identifier	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5230924	ArgumentList	chunk_slab_t		5230225	1					
ANR	5230925	Argument	chunk_slab_t		5230225	0					
ANR	5230926	Identifier	chunk_slab_t		5230225	0					
ANR	5230927	ExpressionStatement	cmem -> total_free += slab_size - newsize - SIZEOF_ROUND_ALIGN ( chunk_slab_t )	918:16:29829:29903	5230225	1	True				
ANR	5230928	AssignmentExpression	cmem -> total_free += slab_size - newsize - SIZEOF_ROUND_ALIGN ( chunk_slab_t )		5230225	0		+=			
ANR	5230929	PtrMemberAccess	cmem -> total_free		5230225	0					
ANR	5230930	Identifier	cmem		5230225	0					
ANR	5230931	Identifier	total_free		5230225	1					
ANR	5230932	AdditiveExpression	slab_size - newsize - SIZEOF_ROUND_ALIGN ( chunk_slab_t )		5230225	1		-			
ANR	5230933	Identifier	slab_size		5230225	0					
ANR	5230934	AdditiveExpression	newsize - SIZEOF_ROUND_ALIGN ( chunk_slab_t )		5230225	1		-			
ANR	5230935	Identifier	newsize		5230225	0					
ANR	5230936	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_slab_t )		5230225	1					
ANR	5230937	Callee	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5230938	Identifier	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5230939	ArgumentList	chunk_slab_t		5230225	1					
ANR	5230940	Argument	chunk_slab_t		5230225	0					
ANR	5230941	Identifier	chunk_slab_t		5230225	0					
ANR	5230942	ElseStatement	else		5230225	0					
ANR	5230943	CompoundStatement		163:12:6732:6760	5230225	0					
ANR	5230944	IdentifierDeclStatement	chunk_free_node_t * ok = * okp ;	921:12:29948:29976	5230225	0	True				
ANR	5230945	IdentifierDecl	* ok = * okp		5230225	0					
ANR	5230946	IdentifierDeclType	chunk_free_node_t *		5230225	0					
ANR	5230947	Identifier	ok		5230225	1					
ANR	5230948	AssignmentExpression	* ok = * okp		5230225	2		=			
ANR	5230949	Identifier	ok		5230225	0					
ANR	5230950	UnaryOperationExpression	* okp		5230225	1					
ANR	5230951	UnaryOperator	*		5230225	0					
ANR	5230952	Identifier	okp		5230225	1					
ANR	5230953	ExpressionStatement	obj = ( chunk_obj_node_t * ) ( void * ) ok	922:12:29990:30026	5230225	1	True				
ANR	5230954	AssignmentExpression	obj = ( chunk_obj_node_t * ) ( void * ) ok		5230225	0		=			
ANR	5230955	Identifier	obj		5230225	0					
ANR	5230956	CastExpression	( chunk_obj_node_t * ) ( void * ) ok		5230225	1					
ANR	5230957	CastTarget	chunk_obj_node_t *		5230225	0					
ANR	5230958	CastExpression	( void * ) ok		5230225	1					
ANR	5230959	CastTarget	void *		5230225	0					
ANR	5230960	Identifier	ok		5230225	1					
ANR	5230961	IfStatement	if ( ok -> size >= newsize + SIZEOF_ROUND_ALIGN ( chunk_free_node_t ) )		5230225	2					
ANR	5230962	Condition	ok -> size >= newsize + SIZEOF_ROUND_ALIGN ( chunk_free_node_t )	923:16:30044:30102	5230225	0	True				
ANR	5230963	RelationalExpression	ok -> size >= newsize + SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5230225	0		>=			
ANR	5230964	PtrMemberAccess	ok -> size		5230225	0					
ANR	5230965	Identifier	ok		5230225	0					
ANR	5230966	Identifier	size		5230225	1					
ANR	5230967	AdditiveExpression	newsize + SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5230225	1		+			
ANR	5230968	Identifier	newsize		5230225	0					
ANR	5230969	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5230225	1					
ANR	5230970	Callee	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5230971	Identifier	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5230972	ArgumentList	chunk_free_node_t		5230225	1					
ANR	5230973	Argument	chunk_free_node_t		5230225	0					
ANR	5230974	Identifier	chunk_free_node_t		5230225	0					
ANR	5230975	CompoundStatement		167:16:6996:7031	5230225	1					
ANR	5230976	IdentifierDeclStatement	chunk_free_node_t * tail = ( chunk_free_node_t * ) ( ( ( byte * ) ok ) + newsize ) ;	924:16:30123:30194	5230225	0	True				
ANR	5230977	IdentifierDecl	* tail = ( chunk_free_node_t * ) ( ( ( byte * ) ok ) + newsize )		5230225	0					
ANR	5230978	IdentifierDeclType	chunk_free_node_t *		5230225	0					
ANR	5230979	Identifier	tail		5230225	1					
ANR	5230980	AssignmentExpression	* tail = ( chunk_free_node_t * ) ( ( ( byte * ) ok ) + newsize )		5230225	2		=			
ANR	5230981	Identifier	tail		5230225	0					
ANR	5230982	CastExpression	( chunk_free_node_t * ) ( ( ( byte * ) ok ) + newsize )		5230225	1					
ANR	5230983	CastTarget	chunk_free_node_t *		5230225	0					
ANR	5230984	AdditiveExpression	( ( byte * ) ok ) + newsize		5230225	1		+			
ANR	5230985	CastExpression	( byte * ) ok		5230225	0					
ANR	5230986	CastTarget	byte *		5230225	0					
ANR	5230987	Identifier	ok		5230225	1					
ANR	5230988	Identifier	newsize		5230225	1					
ANR	5230989	IdentifierDeclStatement	uint tail_size = ok -> size - newsize ;	925:16:30212:30247	5230225	1	True				
ANR	5230990	IdentifierDecl	tail_size = ok -> size - newsize		5230225	0					
ANR	5230991	IdentifierDeclType	uint		5230225	0					
ANR	5230992	Identifier	tail_size		5230225	1					
ANR	5230993	AssignmentExpression	tail_size = ok -> size - newsize		5230225	2		=			
ANR	5230994	Identifier	tail_size		5230225	0					
ANR	5230995	AdditiveExpression	ok -> size - newsize		5230225	1		-			
ANR	5230996	PtrMemberAccess	ok -> size		5230225	0					
ANR	5230997	Identifier	ok		5230225	0					
ANR	5230998	Identifier	size		5230225	1					
ANR	5230999	Identifier	newsize		5230225	1					
ANR	5231000	ExpressionStatement	"remove_free_size_fast ( cmem , okp )"	926:16:30265:30297	5230225	2	True				
ANR	5231001	CallExpression	"remove_free_size_fast ( cmem , okp )"		5230225	0					
ANR	5231002	Callee	remove_free_size_fast		5230225	0					
ANR	5231003	Identifier	remove_free_size_fast		5230225	0					
ANR	5231004	ArgumentList	cmem		5230225	1					
ANR	5231005	Argument	cmem		5230225	0					
ANR	5231006	Identifier	cmem		5230225	0					
ANR	5231007	Argument	okp		5230225	1					
ANR	5231008	Identifier	okp		5230225	0					
ANR	5231009	ExpressionStatement	"remove_free_loc ( cmem , ok )"	927:16:30315:30340	5230225	3	True				
ANR	5231010	CallExpression	"remove_free_loc ( cmem , ok )"		5230225	0					
ANR	5231011	Callee	remove_free_loc		5230225	0					
ANR	5231012	Identifier	remove_free_loc		5230225	0					
ANR	5231013	ArgumentList	cmem		5230225	1					
ANR	5231014	Argument	cmem		5230225	0					
ANR	5231015	Identifier	cmem		5230225	0					
ANR	5231016	Argument	ok		5230225	1					
ANR	5231017	Identifier	ok		5230225	0					
ANR	5231018	ExpressionStatement	"insert_free ( cmem , tail , tail_size )"	928:16:30358:30392	5230225	4	True				
ANR	5231019	CallExpression	"insert_free ( cmem , tail , tail_size )"		5230225	0					
ANR	5231020	Callee	insert_free		5230225	0					
ANR	5231021	Identifier	insert_free		5230225	0					
ANR	5231022	ArgumentList	cmem		5230225	1					
ANR	5231023	Argument	cmem		5230225	0					
ANR	5231024	Identifier	cmem		5230225	0					
ANR	5231025	Argument	tail		5230225	1					
ANR	5231026	Identifier	tail		5230225	0					
ANR	5231027	Argument	tail_size		5230225	2					
ANR	5231028	Identifier	tail_size		5230225	0					
ANR	5231029	ElseStatement	else		5230225	0					
ANR	5231030	CompoundStatement		171:19:7197:7197	5230225	0					
ANR	5231031	ExpressionStatement	newsize = ok -> size	930:16:30431:30449	5230225	0	True				
ANR	5231032	AssignmentExpression	newsize = ok -> size		5230225	0		=			
ANR	5231033	Identifier	newsize		5230225	0					
ANR	5231034	PtrMemberAccess	ok -> size		5230225	1					
ANR	5231035	Identifier	ok		5230225	0					
ANR	5231036	Identifier	size		5230225	1					
ANR	5231037	ExpressionStatement	"remove_free_size_fast ( cmem , okp )"	931:16:30467:30499	5230225	1	True				
ANR	5231038	CallExpression	"remove_free_size_fast ( cmem , okp )"		5230225	0					
ANR	5231039	Callee	remove_free_size_fast		5230225	0					
ANR	5231040	Identifier	remove_free_size_fast		5230225	0					
ANR	5231041	ArgumentList	cmem		5230225	1					
ANR	5231042	Argument	cmem		5230225	0					
ANR	5231043	Identifier	cmem		5230225	0					
ANR	5231044	Argument	okp		5230225	1					
ANR	5231045	Identifier	okp		5230225	0					
ANR	5231046	ExpressionStatement	"remove_free_loc ( cmem , ok )"	932:16:30517:30542	5230225	2	True				
ANR	5231047	CallExpression	"remove_free_loc ( cmem , ok )"		5230225	0					
ANR	5231048	Callee	remove_free_loc		5230225	0					
ANR	5231049	Identifier	remove_free_loc		5230225	0					
ANR	5231050	ArgumentList	cmem		5230225	1					
ANR	5231051	Argument	cmem		5230225	0					
ANR	5231052	Identifier	cmem		5230225	0					
ANR	5231053	Argument	ok		5230225	1					
ANR	5231054	Identifier	ok		5230225	0					
ANR	5231055	ExpressionStatement	cmem -> total_free -= newsize	934:12:30570:30597	5230225	3	True				
ANR	5231056	AssignmentExpression	cmem -> total_free -= newsize		5230225	0		-=			
ANR	5231057	PtrMemberAccess	cmem -> total_free		5230225	0					
ANR	5231058	Identifier	cmem		5230225	0					
ANR	5231059	Identifier	total_free		5230225	1					
ANR	5231060	Identifier	newsize		5230225	1					
ANR	5231061	IfStatement	if ( gs_alloc_debug )		5230225	11					
ANR	5231062	Condition	gs_alloc_debug	938:8:30624:30637	5230225	0	True				
ANR	5231063	Identifier	gs_alloc_debug		5230225	0					
ANR	5231064	CompoundStatement		180:24:7424:7424	5230225	1					
ANR	5231065	ExpressionStatement	"memset ( ( byte * ) ( obj ) + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) , 0xa1 , newsize - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) )"	939:8:30650:30764	5230225	0	True				
ANR	5231066	CallExpression	"memset ( ( byte * ) ( obj ) + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) , 0xa1 , newsize - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) )"		5230225	0					
ANR	5231067	Callee	memset		5230225	0					
ANR	5231068	Identifier	memset		5230225	0					
ANR	5231069	ArgumentList	( byte * ) ( obj ) + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5230225	1					
ANR	5231070	Argument	( byte * ) ( obj ) + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5230225	0					
ANR	5231071	CastExpression	( byte * ) ( obj ) + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5230225	0					
ANR	5231072	CastTarget	byte *		5230225	0					
ANR	5231073	CastExpression	( obj ) + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5230225	1					
ANR	5231074	CastTarget	obj		5230225	0					
ANR	5231075	UnaryOperationExpression	+ SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5230225	1					
ANR	5231076	UnaryOperator	+		5230225	0					
ANR	5231077	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5230225	1					
ANR	5231078	Callee	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5231079	Identifier	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5231080	ArgumentList	chunk_obj_node_t		5230225	1					
ANR	5231081	Argument	chunk_obj_node_t		5230225	0					
ANR	5231082	Identifier	chunk_obj_node_t		5230225	0					
ANR	5231083	Argument	0xa1		5230225	1					
ANR	5231084	PrimaryExpression	0xa1		5230225	0					
ANR	5231085	Argument	newsize - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5230225	2					
ANR	5231086	AdditiveExpression	newsize - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5230225	0		-			
ANR	5231087	Identifier	newsize		5230225	0					
ANR	5231088	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5230225	1					
ANR	5231089	Callee	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5231090	Identifier	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5231091	ArgumentList	chunk_obj_node_t		5230225	1					
ANR	5231092	Argument	chunk_obj_node_t		5230225	0					
ANR	5231093	Identifier	chunk_obj_node_t		5230225	0					
ANR	5231094	ExpressionStatement	"memset ( ( byte * ) ( obj ) + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) , 0xac , size )"	940:8:30774:30846	5230225	1	True				
ANR	5231095	CallExpression	"memset ( ( byte * ) ( obj ) + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) , 0xac , size )"		5230225	0					
ANR	5231096	Callee	memset		5230225	0					
ANR	5231097	Identifier	memset		5230225	0					
ANR	5231098	ArgumentList	( byte * ) ( obj ) + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5230225	1					
ANR	5231099	Argument	( byte * ) ( obj ) + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5230225	0					
ANR	5231100	CastExpression	( byte * ) ( obj ) + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5230225	0					
ANR	5231101	CastTarget	byte *		5230225	0					
ANR	5231102	CastExpression	( obj ) + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5230225	1					
ANR	5231103	CastTarget	obj		5230225	0					
ANR	5231104	UnaryOperationExpression	+ SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5230225	1					
ANR	5231105	UnaryOperator	+		5230225	0					
ANR	5231106	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5230225	1					
ANR	5231107	Callee	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5231108	Identifier	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5231109	ArgumentList	chunk_obj_node_t		5230225	1					
ANR	5231110	Argument	chunk_obj_node_t		5230225	0					
ANR	5231111	Identifier	chunk_obj_node_t		5230225	0					
ANR	5231112	Argument	0xac		5230225	1					
ANR	5231113	PrimaryExpression	0xac		5230225	0					
ANR	5231114	Argument	size		5230225	2					
ANR	5231115	Identifier	size		5230225	0					
ANR	5231116	ExpressionStatement	obj -> size = newsize	943:4:30859:30878	5230225	12	True				
ANR	5231117	AssignmentExpression	obj -> size = newsize		5230225	0		=			
ANR	5231118	PtrMemberAccess	obj -> size		5230225	0					
ANR	5231119	Identifier	obj		5230225	0					
ANR	5231120	Identifier	size		5230225	1					
ANR	5231121	Identifier	newsize		5230225	1					
ANR	5231122	ExpressionStatement	obj -> padding = newsize - size	944:4:30902:30931	5230225	13	True				
ANR	5231123	AssignmentExpression	obj -> padding = newsize - size		5230225	0		=			
ANR	5231124	PtrMemberAccess	obj -> padding		5230225	0					
ANR	5231125	Identifier	obj		5230225	0					
ANR	5231126	Identifier	padding		5230225	1					
ANR	5231127	AdditiveExpression	newsize - size		5230225	1		-			
ANR	5231128	Identifier	newsize		5230225	0					
ANR	5231129	Identifier	size		5230225	1					
ANR	5231130	ExpressionStatement	obj -> type = type	945:4:30979:30995	5230225	14	True				
ANR	5231131	AssignmentExpression	obj -> type = type		5230225	0		=			
ANR	5231132	PtrMemberAccess	obj -> type		5230225	0					
ANR	5231133	Identifier	obj		5230225	0					
ANR	5231134	Identifier	type		5230225	1					
ANR	5231135	Identifier	type		5230225	1					
ANR	5231136	ExpressionStatement	obj -> defer_next = NULL	946:4:31034:31056	5230225	15	True				
ANR	5231137	AssignmentExpression	obj -> defer_next = NULL		5230225	0		=			
ANR	5231138	PtrMemberAccess	obj -> defer_next		5230225	0					
ANR	5231139	Identifier	obj		5230225	0					
ANR	5231140	Identifier	defer_next		5230225	1					
ANR	5231141	Identifier	NULL		5230225	1					
ANR	5231142	ExpressionStatement	obj -> sequence = cmem -> sequence	949:4:31080:31110	5230225	16	True				
ANR	5231143	AssignmentExpression	obj -> sequence = cmem -> sequence		5230225	0		=			
ANR	5231144	PtrMemberAccess	obj -> sequence		5230225	0					
ANR	5231145	Identifier	obj		5230225	0					
ANR	5231146	Identifier	sequence		5230225	1					
ANR	5231147	PtrMemberAccess	cmem -> sequence		5230225	1					
ANR	5231148	Identifier	cmem		5230225	0					
ANR	5231149	Identifier	sequence		5230225	1					
ANR	5231150	IfStatement	if ( gs_debug_c ( 'A' ) )		5230225	17					
ANR	5231151	Condition	gs_debug_c ( 'A' )	951:8:31127:31141	5230225	0	True				
ANR	5231152	CallExpression	gs_debug_c ( 'A' )		5230225	0					
ANR	5231153	Callee	gs_debug_c		5230225	0					
ANR	5231154	Identifier	gs_debug_c		5230225	0					
ANR	5231155	ArgumentList	'A'		5230225	1					
ANR	5231156	Argument	'A'		5230225	0					
ANR	5231157	PrimaryExpression	'A'		5230225	0					
ANR	5231158	ExpressionStatement	"dmlprintf3 ( mem , ""[a+]chunk_obj_alloc (%s)(%u) = 0x%lx: OK.\\n"" , client_name_string ( cname ) , size , ( ulong ) obj )"	952:8:31152:31279	5230225	1	True				
ANR	5231159	CallExpression	"dmlprintf3 ( mem , ""[a+]chunk_obj_alloc (%s)(%u) = 0x%lx: OK.\\n"" , client_name_string ( cname ) , size , ( ulong ) obj )"		5230225	0					
ANR	5231160	Callee	dmlprintf3		5230225	0					
ANR	5231161	Identifier	dmlprintf3		5230225	0					
ANR	5231162	ArgumentList	mem		5230225	1					
ANR	5231163	Argument	mem		5230225	0					
ANR	5231164	Identifier	mem		5230225	0					
ANR	5231165	Argument	"""[a+]chunk_obj_alloc (%s)(%u) = 0x%lx: OK.\\n"""		5230225	1					
ANR	5231166	PrimaryExpression	"""[a+]chunk_obj_alloc (%s)(%u) = 0x%lx: OK.\\n"""		5230225	0					
ANR	5231167	Argument	client_name_string ( cname )		5230225	2					
ANR	5231168	CallExpression	client_name_string ( cname )		5230225	0					
ANR	5231169	Callee	client_name_string		5230225	0					
ANR	5231170	Identifier	client_name_string		5230225	0					
ANR	5231171	ArgumentList	cname		5230225	1					
ANR	5231172	Argument	cname		5230225	0					
ANR	5231173	Identifier	cname		5230225	0					
ANR	5231174	Argument	size		5230225	3					
ANR	5231175	Identifier	size		5230225	0					
ANR	5231176	Argument	( ulong ) obj		5230225	4					
ANR	5231177	CastExpression	( ulong ) obj		5230225	0					
ANR	5231178	CastTarget	ulong		5230225	0					
ANR	5231179	Identifier	obj		5230225	1					
ANR	5231180	ExpressionStatement	"dmlprintf5 ( cmem -> target , ""Event %x: malloced(chunk=%p, addr=%p, size=%x, cname=%s)\\n"" , obj -> sequence , cmem , obj , obj -> size , cname )"	956:4:31327:31457	5230225	18	True				
ANR	5231181	CallExpression	"dmlprintf5 ( cmem -> target , ""Event %x: malloced(chunk=%p, addr=%p, size=%x, cname=%s)\\n"" , obj -> sequence , cmem , obj , obj -> size , cname )"		5230225	0					
ANR	5231182	Callee	dmlprintf5		5230225	0					
ANR	5231183	Identifier	dmlprintf5		5230225	0					
ANR	5231184	ArgumentList	cmem -> target		5230225	1					
ANR	5231185	Argument	cmem -> target		5230225	0					
ANR	5231186	PtrMemberAccess	cmem -> target		5230225	0					
ANR	5231187	Identifier	cmem		5230225	0					
ANR	5231188	Identifier	target		5230225	1					
ANR	5231189	Argument	"""Event %x: malloced(chunk=%p, addr=%p, size=%x, cname=%s)\\n"""		5230225	1					
ANR	5231190	PrimaryExpression	"""Event %x: malloced(chunk=%p, addr=%p, size=%x, cname=%s)\\n"""		5230225	0					
ANR	5231191	Argument	obj -> sequence		5230225	2					
ANR	5231192	PtrMemberAccess	obj -> sequence		5230225	0					
ANR	5231193	Identifier	obj		5230225	0					
ANR	5231194	Identifier	sequence		5230225	1					
ANR	5231195	Argument	cmem		5230225	3					
ANR	5231196	Identifier	cmem		5230225	0					
ANR	5231197	Argument	obj		5230225	4					
ANR	5231198	Identifier	obj		5230225	0					
ANR	5231199	Argument	obj -> size		5230225	5					
ANR	5231200	PtrMemberAccess	obj -> size		5230225	0					
ANR	5231201	Identifier	obj		5230225	0					
ANR	5231202	Identifier	size		5230225	1					
ANR	5231203	Argument	cname		5230225	6					
ANR	5231204	Identifier	cname		5230225	0					
ANR	5231205	ExpressionStatement	gs_memory_chunk_dump_memory ( cmem )	962:4:31613:31646	5230225	19	True				
ANR	5231206	CallExpression	gs_memory_chunk_dump_memory ( cmem )		5230225	0					
ANR	5231207	Callee	gs_memory_chunk_dump_memory		5230225	0					
ANR	5231208	Identifier	gs_memory_chunk_dump_memory		5230225	0					
ANR	5231209	ArgumentList	cmem		5230225	1					
ANR	5231210	Argument	cmem		5230225	0					
ANR	5231211	Identifier	cmem		5230225	0					
ANR	5231212	ReturnStatement	return ( byte * ) ( obj ) + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) ;	965:4:31660:31719	5230225	20	True				
ANR	5231213	CastExpression	( byte * ) ( obj ) + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5230225	0					
ANR	5231214	CastTarget	byte *		5230225	0					
ANR	5231215	CastExpression	( obj ) + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5230225	1					
ANR	5231216	CastTarget	obj		5230225	0					
ANR	5231217	UnaryOperationExpression	+ SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5230225	1					
ANR	5231218	UnaryOperator	+		5230225	0					
ANR	5231219	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5230225	1					
ANR	5231220	Callee	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5231221	Identifier	SIZEOF_ROUND_ALIGN		5230225	0					
ANR	5231222	ArgumentList	chunk_obj_node_t		5230225	1					
ANR	5231223	Argument	chunk_obj_node_t		5230225	0					
ANR	5231224	Identifier	chunk_obj_node_t		5230225	0					
ANR	5231225	ReturnType	static byte *		5230225	1					
ANR	5231226	Identifier	chunk_obj_alloc		5230225	2					
ANR	5231227	ParameterList	"gs_memory_t * mem , uint size , gs_memory_type_ptr_t type , client_name_t cname"		5230225	3					
ANR	5231228	Parameter	gs_memory_t * mem	758:16:23138:23153	5230225	0	True				
ANR	5231229	ParameterType	gs_memory_t *		5230225	0					
ANR	5231230	Identifier	mem		5230225	1					
ANR	5231231	Parameter	uint size	758:34:23156:23164	5230225	1	True				
ANR	5231232	ParameterType	uint		5230225	0					
ANR	5231233	Identifier	size		5230225	1					
ANR	5231234	Parameter	gs_memory_type_ptr_t type	758:45:23167:23191	5230225	2	True				
ANR	5231235	ParameterType	gs_memory_type_ptr_t		5230225	0					
ANR	5231236	Identifier	type		5230225	1					
ANR	5231237	Parameter	client_name_t cname	758:72:23194:23212	5230225	3	True				
ANR	5231238	ParameterType	client_name_t		5230225	0					
ANR	5231239	Identifier	cname		5230225	1					
ANR	5231240	CFGEntryNode	ENTRY		5230225		True				
ANR	5231241	CFGExitNode	EXIT		5230225		True				
ANR	5231242	Symbol	a -> size		5230225						
ANR	5231243	Symbol	* ok		5230225						
ANR	5231244	Symbol	chunk_free_node_t		5230225						
ANR	5231245	Symbol	c -> size		5230225						
ANR	5231246	Symbol	gs_alloc_debug		5230225						
ANR	5231247	Symbol	type		5230225						
ANR	5231248	Symbol	cmem -> sequence		5230225						
ANR	5231249	Symbol	CHUNK_SIZE		5230225						
ANR	5231250	Symbol	slab		5230225						
ANR	5231251	Symbol	SINGLE_OBJECT_CHUNK		5230225						
ANR	5231252	Symbol	okp		5230225						
ANR	5231253	Symbol	round_up_to_align		5230225						
ANR	5231254	Symbol	c -> right_size		5230225						
ANR	5231255	Symbol	ok -> size		5230225						
ANR	5231256	Symbol	gs_debug_c		5230225						
ANR	5231257	Symbol	obj -> type		5230225						
ANR	5231258	Symbol	NULL		5230225						
ANR	5231259	Symbol	& a -> right_size		5230225						
ANR	5231260	Symbol	newsize		5230225						
ANR	5231261	Symbol	slab -> next		5230225						
ANR	5231262	Symbol	ap		5230225						
ANR	5231263	Symbol	& cmem -> free_size		5230225						
ANR	5231264	Symbol	size		5230225						
ANR	5231265	Symbol	SIZEOF_ROUND_ALIGN		5230225						
ANR	5231266	Symbol	& c -> left_size		5230225						
ANR	5231267	Symbol	& b -> left_size		5230225						
ANR	5231268	Symbol	client_name_string		5230225						
ANR	5231269	Symbol	cmem		5230225						
ANR	5231270	Symbol	& a -> left_size		5230225						
ANR	5231271	Symbol	chunk_slab_t		5230225						
ANR	5231272	Symbol	slab_size		5230225						
ANR	5231273	Symbol	& b -> right_size		5230225						
ANR	5231274	Symbol	b -> size		5230225						
ANR	5231275	Symbol	cname		5230225						
ANR	5231276	Symbol	cmem -> total_free		5230225						
ANR	5231277	Symbol	cmem -> slabs		5230225						
ANR	5231278	Symbol	mem		5230225						
ANR	5231279	Symbol	gs_alloc_bytes_immovable		5230225						
ANR	5231280	Symbol	* slab		5230225						
ANR	5231281	Symbol	* cmem		5230225						
ANR	5231282	Symbol	chunk_obj_node_t		5230225						
ANR	5231283	Symbol	cmem -> target		5230225						
ANR	5231284	Symbol	ok		5230225						
ANR	5231285	Symbol	obj -> sequence		5230225						
ANR	5231286	Symbol	a -> right_size		5230225						
ANR	5231287	Symbol	a -> left_size		5230225						
ANR	5231288	Symbol	a		5230225						
ANR	5231289	Symbol	* obj		5230225						
ANR	5231290	Symbol	b		5230225						
ANR	5231291	Symbol	c -> left_size		5230225						
ANR	5231292	Symbol	obj -> padding		5230225						
ANR	5231293	Symbol	c		5230225						
ANR	5231294	Symbol	tail		5230225						
ANR	5231295	Symbol	obj -> size		5230225						
ANR	5231296	Symbol	& c -> right_size		5230225						
ANR	5231297	Symbol	* a		5230225						
ANR	5231298	Symbol	* b		5230225						
ANR	5231299	Symbol	* c		5230225						
ANR	5231300	Symbol	tail_size		5230225						
ANR	5231301	Symbol	b -> left_size		5230225						
ANR	5231302	Symbol	obj -> defer_next		5230225						
ANR	5231303	Symbol	b -> right_size		5230225						
ANR	5231304	Symbol	obj		5230225						
ANR	5231305	Symbol	* ap		5230225						
ANR	5231306	Symbol	* okp		5230225						
ANR	5231307	Function	chunk_alloc_bytes_immovable	968:0:31724:31876							
ANR	5231308	FunctionDef	"chunk_alloc_bytes_immovable (gs_memory_t * mem , uint size , client_name_t cname)"		5231307	0					
ANR	5231309	CompoundStatement		970:0:31817:31876	5231307	0					
ANR	5231310	ReturnStatement	"return chunk_obj_alloc ( mem , size , & st_bytes , cname ) ;"	971:4:31823:31874	5231307	0	True				
ANR	5231311	CallExpression	"chunk_obj_alloc ( mem , size , & st_bytes , cname )"		5231307	0					
ANR	5231312	Callee	chunk_obj_alloc		5231307	0					
ANR	5231313	Identifier	chunk_obj_alloc		5231307	0					
ANR	5231314	ArgumentList	mem		5231307	1					
ANR	5231315	Argument	mem		5231307	0					
ANR	5231316	Identifier	mem		5231307	0					
ANR	5231317	Argument	size		5231307	1					
ANR	5231318	Identifier	size		5231307	0					
ANR	5231319	Argument	& st_bytes		5231307	2					
ANR	5231320	UnaryOperationExpression	& st_bytes		5231307	0					
ANR	5231321	UnaryOperator	&		5231307	0					
ANR	5231322	Identifier	st_bytes		5231307	1					
ANR	5231323	Argument	cname		5231307	3					
ANR	5231324	Identifier	cname		5231307	0					
ANR	5231325	ReturnType	static byte *		5231307	1					
ANR	5231326	Identifier	chunk_alloc_bytes_immovable		5231307	2					
ANR	5231327	ParameterList	"gs_memory_t * mem , uint size , client_name_t cname"		5231307	3					
ANR	5231328	Parameter	gs_memory_t * mem	969:28:31766:31782	5231307	0	True				
ANR	5231329	ParameterType	gs_memory_t *		5231307	0					
ANR	5231330	Identifier	mem		5231307	1					
ANR	5231331	Parameter	uint size	969:47:31785:31793	5231307	1	True				
ANR	5231332	ParameterType	uint		5231307	0					
ANR	5231333	Identifier	size		5231307	1					
ANR	5231334	Parameter	client_name_t cname	969:58:31796:31814	5231307	2	True				
ANR	5231335	ParameterType	client_name_t		5231307	0					
ANR	5231336	Identifier	cname		5231307	1					
ANR	5231337	CFGEntryNode	ENTRY		5231307		True				
ANR	5231338	CFGExitNode	EXIT		5231307		True				
ANR	5231339	Symbol	mem		5231307						
ANR	5231340	Symbol	size		5231307						
ANR	5231341	Symbol	chunk_obj_alloc		5231307						
ANR	5231342	Symbol	cname		5231307						
ANR	5231343	Symbol	& st_bytes		5231307						
ANR	5231344	Function	chunk_alloc_bytes	974:0:31879:32021							
ANR	5231345	FunctionDef	"chunk_alloc_bytes (gs_memory_t * mem , uint size , client_name_t cname)"		5231344	0					
ANR	5231346	CompoundStatement		976:0:31962:32021	5231344	0					
ANR	5231347	ReturnStatement	"return chunk_obj_alloc ( mem , size , & st_bytes , cname ) ;"	977:4:31968:32019	5231344	0	True				
ANR	5231348	CallExpression	"chunk_obj_alloc ( mem , size , & st_bytes , cname )"		5231344	0					
ANR	5231349	Callee	chunk_obj_alloc		5231344	0					
ANR	5231350	Identifier	chunk_obj_alloc		5231344	0					
ANR	5231351	ArgumentList	mem		5231344	1					
ANR	5231352	Argument	mem		5231344	0					
ANR	5231353	Identifier	mem		5231344	0					
ANR	5231354	Argument	size		5231344	1					
ANR	5231355	Identifier	size		5231344	0					
ANR	5231356	Argument	& st_bytes		5231344	2					
ANR	5231357	UnaryOperationExpression	& st_bytes		5231344	0					
ANR	5231358	UnaryOperator	&		5231344	0					
ANR	5231359	Identifier	st_bytes		5231344	1					
ANR	5231360	Argument	cname		5231344	3					
ANR	5231361	Identifier	cname		5231344	0					
ANR	5231362	ReturnType	static byte *		5231344	1					
ANR	5231363	Identifier	chunk_alloc_bytes		5231344	2					
ANR	5231364	ParameterList	"gs_memory_t * mem , uint size , client_name_t cname"		5231344	3					
ANR	5231365	Parameter	gs_memory_t * mem	975:18:31911:31927	5231344	0	True				
ANR	5231366	ParameterType	gs_memory_t *		5231344	0					
ANR	5231367	Identifier	mem		5231344	1					
ANR	5231368	Parameter	uint size	975:37:31930:31938	5231344	1	True				
ANR	5231369	ParameterType	uint		5231344	0					
ANR	5231370	Identifier	size		5231344	1					
ANR	5231371	Parameter	client_name_t cname	975:48:31941:31959	5231344	2	True				
ANR	5231372	ParameterType	client_name_t		5231344	0					
ANR	5231373	Identifier	cname		5231344	1					
ANR	5231374	CFGEntryNode	ENTRY		5231344		True				
ANR	5231375	CFGExitNode	EXIT		5231344		True				
ANR	5231376	Symbol	mem		5231344						
ANR	5231377	Symbol	size		5231344						
ANR	5231378	Symbol	chunk_obj_alloc		5231344						
ANR	5231379	Symbol	cname		5231344						
ANR	5231380	Symbol	& st_bytes		5231344						
ANR	5231381	Function	chunk_alloc_struct_immovable	980:0:32024:32226							
ANR	5231382	FunctionDef	"chunk_alloc_struct_immovable (gs_memory_t * mem , gs_memory_type_ptr_t pstype , client_name_t cname)"		5231381	0					
ANR	5231383	CompoundStatement		983:0:32161:32226	5231381	0					
ANR	5231384	ReturnStatement	"return chunk_obj_alloc ( mem , pstype -> ssize , pstype , cname ) ;"	984:4:32167:32224	5231381	0	True				
ANR	5231385	CallExpression	"chunk_obj_alloc ( mem , pstype -> ssize , pstype , cname )"		5231381	0					
ANR	5231386	Callee	chunk_obj_alloc		5231381	0					
ANR	5231387	Identifier	chunk_obj_alloc		5231381	0					
ANR	5231388	ArgumentList	mem		5231381	1					
ANR	5231389	Argument	mem		5231381	0					
ANR	5231390	Identifier	mem		5231381	0					
ANR	5231391	Argument	pstype -> ssize		5231381	1					
ANR	5231392	PtrMemberAccess	pstype -> ssize		5231381	0					
ANR	5231393	Identifier	pstype		5231381	0					
ANR	5231394	Identifier	ssize		5231381	1					
ANR	5231395	Argument	pstype		5231381	2					
ANR	5231396	Identifier	pstype		5231381	0					
ANR	5231397	Argument	cname		5231381	3					
ANR	5231398	Identifier	cname		5231381	0					
ANR	5231399	ReturnType	static void *		5231381	1					
ANR	5231400	Identifier	chunk_alloc_struct_immovable		5231381	2					
ANR	5231401	ParameterList	"gs_memory_t * mem , gs_memory_type_ptr_t pstype , client_name_t cname"		5231381	3					
ANR	5231402	Parameter	gs_memory_t * mem	981:29:32067:32083	5231381	0	True				
ANR	5231403	ParameterType	gs_memory_t *		5231381	0					
ANR	5231404	Identifier	mem		5231381	1					
ANR	5231405	Parameter	gs_memory_type_ptr_t pstype	981:48:32086:32112	5231381	1	True				
ANR	5231406	ParameterType	gs_memory_type_ptr_t		5231381	0					
ANR	5231407	Identifier	pstype		5231381	1					
ANR	5231408	Parameter	client_name_t cname	982:25:32140:32158	5231381	2	True				
ANR	5231409	ParameterType	client_name_t		5231381	0					
ANR	5231410	Identifier	cname		5231381	1					
ANR	5231411	CFGEntryNode	ENTRY		5231381		True				
ANR	5231412	CFGExitNode	EXIT		5231381		True				
ANR	5231413	Symbol	pstype -> ssize		5231381						
ANR	5231414	Symbol	* pstype		5231381						
ANR	5231415	Symbol	mem		5231381						
ANR	5231416	Symbol	pstype		5231381						
ANR	5231417	Symbol	chunk_obj_alloc		5231381						
ANR	5231418	Symbol	cname		5231381						
ANR	5231419	Function	chunk_alloc_struct	987:0:32229:32411							
ANR	5231420	FunctionDef	"chunk_alloc_struct (gs_memory_t * mem , gs_memory_type_ptr_t pstype , client_name_t cname)"		5231419	0					
ANR	5231421	CompoundStatement		990:0:32346:32411	5231419	0					
ANR	5231422	ReturnStatement	"return chunk_obj_alloc ( mem , pstype -> ssize , pstype , cname ) ;"	991:4:32352:32409	5231419	0	True				
ANR	5231423	CallExpression	"chunk_obj_alloc ( mem , pstype -> ssize , pstype , cname )"		5231419	0					
ANR	5231424	Callee	chunk_obj_alloc		5231419	0					
ANR	5231425	Identifier	chunk_obj_alloc		5231419	0					
ANR	5231426	ArgumentList	mem		5231419	1					
ANR	5231427	Argument	mem		5231419	0					
ANR	5231428	Identifier	mem		5231419	0					
ANR	5231429	Argument	pstype -> ssize		5231419	1					
ANR	5231430	PtrMemberAccess	pstype -> ssize		5231419	0					
ANR	5231431	Identifier	pstype		5231419	0					
ANR	5231432	Identifier	ssize		5231419	1					
ANR	5231433	Argument	pstype		5231419	2					
ANR	5231434	Identifier	pstype		5231419	0					
ANR	5231435	Argument	cname		5231419	3					
ANR	5231436	Identifier	cname		5231419	0					
ANR	5231437	ReturnType	static void *		5231419	1					
ANR	5231438	Identifier	chunk_alloc_struct		5231419	2					
ANR	5231439	ParameterList	"gs_memory_t * mem , gs_memory_type_ptr_t pstype , client_name_t cname"		5231419	3					
ANR	5231440	Parameter	gs_memory_t * mem	988:19:32262:32278	5231419	0	True				
ANR	5231441	ParameterType	gs_memory_t *		5231419	0					
ANR	5231442	Identifier	mem		5231419	1					
ANR	5231443	Parameter	gs_memory_type_ptr_t pstype	988:38:32281:32307	5231419	1	True				
ANR	5231444	ParameterType	gs_memory_type_ptr_t		5231419	0					
ANR	5231445	Identifier	pstype		5231419	1					
ANR	5231446	Parameter	client_name_t cname	989:15:32325:32343	5231419	2	True				
ANR	5231447	ParameterType	client_name_t		5231419	0					
ANR	5231448	Identifier	cname		5231419	1					
ANR	5231449	CFGEntryNode	ENTRY		5231419		True				
ANR	5231450	CFGExitNode	EXIT		5231419		True				
ANR	5231451	Symbol	pstype -> ssize		5231419						
ANR	5231452	Symbol	* pstype		5231419						
ANR	5231453	Symbol	mem		5231419						
ANR	5231454	Symbol	pstype		5231419						
ANR	5231455	Symbol	chunk_obj_alloc		5231419						
ANR	5231456	Symbol	cname		5231419						
ANR	5231457	Function	chunk_alloc_byte_array_immovable	994:0:32414:32633							
ANR	5231458	FunctionDef	"chunk_alloc_byte_array_immovable (gs_memory_t * mem , uint num_elements , uint elt_size , client_name_t cname)"		5231457	0					
ANR	5231459	CompoundStatement		997:0:32564:32633	5231457	0					
ANR	5231460	ReturnStatement	"return chunk_alloc_bytes ( mem , num_elements * elt_size , cname ) ;"	998:4:32570:32631	5231457	0	True				
ANR	5231461	CallExpression	"chunk_alloc_bytes ( mem , num_elements * elt_size , cname )"		5231457	0					
ANR	5231462	Callee	chunk_alloc_bytes		5231457	0					
ANR	5231463	Identifier	chunk_alloc_bytes		5231457	0					
ANR	5231464	ArgumentList	mem		5231457	1					
ANR	5231465	Argument	mem		5231457	0					
ANR	5231466	Identifier	mem		5231457	0					
ANR	5231467	Argument	num_elements * elt_size		5231457	1					
ANR	5231468	MultiplicativeExpression	num_elements * elt_size		5231457	0		*			
ANR	5231469	Identifier	num_elements		5231457	0					
ANR	5231470	Identifier	elt_size		5231457	1					
ANR	5231471	Argument	cname		5231457	2					
ANR	5231472	Identifier	cname		5231457	0					
ANR	5231473	ReturnType	static byte *		5231457	1					
ANR	5231474	Identifier	chunk_alloc_byte_array_immovable		5231457	2					
ANR	5231475	ParameterList	"gs_memory_t * mem , uint num_elements , uint elt_size , client_name_t cname"		5231457	3					
ANR	5231476	Parameter	gs_memory_t * mem	995:33:32461:32477	5231457	0	True				
ANR	5231477	ParameterType	gs_memory_t *		5231457	0					
ANR	5231478	Identifier	mem		5231457	1					
ANR	5231479	Parameter	uint num_elements	995:52:32480:32496	5231457	1	True				
ANR	5231480	ParameterType	uint		5231457	0					
ANR	5231481	Identifier	num_elements		5231457	1					
ANR	5231482	Parameter	uint elt_size	996:29:32528:32540	5231457	2	True				
ANR	5231483	ParameterType	uint		5231457	0					
ANR	5231484	Identifier	elt_size		5231457	1					
ANR	5231485	Parameter	client_name_t cname	996:44:32543:32561	5231457	3	True				
ANR	5231486	ParameterType	client_name_t		5231457	0					
ANR	5231487	Identifier	cname		5231457	1					
ANR	5231488	CFGEntryNode	ENTRY		5231457		True				
ANR	5231489	CFGExitNode	EXIT		5231457		True				
ANR	5231490	Symbol	chunk_alloc_bytes		5231457						
ANR	5231491	Symbol	mem		5231457						
ANR	5231492	Symbol	num_elements		5231457						
ANR	5231493	Symbol	cname		5231457						
ANR	5231494	Symbol	elt_size		5231457						
ANR	5231495	Function	chunk_alloc_byte_array	1001:0:32636:32835							
ANR	5231496	FunctionDef	"chunk_alloc_byte_array (gs_memory_t * mem , uint num_elements , uint elt_size , client_name_t cname)"		5231495	0					
ANR	5231497	CompoundStatement		1004:0:32766:32835	5231495	0					
ANR	5231498	ReturnStatement	"return chunk_alloc_bytes ( mem , num_elements * elt_size , cname ) ;"	1005:4:32772:32833	5231495	0	True				
ANR	5231499	CallExpression	"chunk_alloc_bytes ( mem , num_elements * elt_size , cname )"		5231495	0					
ANR	5231500	Callee	chunk_alloc_bytes		5231495	0					
ANR	5231501	Identifier	chunk_alloc_bytes		5231495	0					
ANR	5231502	ArgumentList	mem		5231495	1					
ANR	5231503	Argument	mem		5231495	0					
ANR	5231504	Identifier	mem		5231495	0					
ANR	5231505	Argument	num_elements * elt_size		5231495	1					
ANR	5231506	MultiplicativeExpression	num_elements * elt_size		5231495	0		*			
ANR	5231507	Identifier	num_elements		5231495	0					
ANR	5231508	Identifier	elt_size		5231495	1					
ANR	5231509	Argument	cname		5231495	2					
ANR	5231510	Identifier	cname		5231495	0					
ANR	5231511	ReturnType	static byte *		5231495	1					
ANR	5231512	Identifier	chunk_alloc_byte_array		5231495	2					
ANR	5231513	ParameterList	"gs_memory_t * mem , uint num_elements , uint elt_size , client_name_t cname"		5231495	3					
ANR	5231514	Parameter	gs_memory_t * mem	1002:23:32673:32689	5231495	0	True				
ANR	5231515	ParameterType	gs_memory_t *		5231495	0					
ANR	5231516	Identifier	mem		5231495	1					
ANR	5231517	Parameter	uint num_elements	1002:42:32692:32708	5231495	1	True				
ANR	5231518	ParameterType	uint		5231495	0					
ANR	5231519	Identifier	num_elements		5231495	1					
ANR	5231520	Parameter	uint elt_size	1002:61:32711:32723	5231495	2	True				
ANR	5231521	ParameterType	uint		5231495	0					
ANR	5231522	Identifier	elt_size		5231495	1					
ANR	5231523	Parameter	client_name_t cname	1003:19:32745:32763	5231495	3	True				
ANR	5231524	ParameterType	client_name_t		5231495	0					
ANR	5231525	Identifier	cname		5231495	1					
ANR	5231526	CFGEntryNode	ENTRY		5231495		True				
ANR	5231527	CFGExitNode	EXIT		5231495		True				
ANR	5231528	Symbol	chunk_alloc_bytes		5231495						
ANR	5231529	Symbol	mem		5231495						
ANR	5231530	Symbol	num_elements		5231495						
ANR	5231531	Symbol	cname		5231495						
ANR	5231532	Symbol	elt_size		5231495						
ANR	5231533	Function	chunk_alloc_struct_array_immovable	1008:0:32838:33082							
ANR	5231534	FunctionDef	"chunk_alloc_struct_array_immovable (gs_memory_t * mem , uint num_elements , gs_memory_type_ptr_t pstype , client_name_t cname)"		5231533	0					
ANR	5231535	CompoundStatement		1011:0:33002:33082	5231533	0					
ANR	5231536	ReturnStatement	"return chunk_obj_alloc ( mem , num_elements * pstype -> ssize , pstype , cname ) ;"	1012:4:33008:33080	5231533	0	True				
ANR	5231537	CallExpression	"chunk_obj_alloc ( mem , num_elements * pstype -> ssize , pstype , cname )"		5231533	0					
ANR	5231538	Callee	chunk_obj_alloc		5231533	0					
ANR	5231539	Identifier	chunk_obj_alloc		5231533	0					
ANR	5231540	ArgumentList	mem		5231533	1					
ANR	5231541	Argument	mem		5231533	0					
ANR	5231542	Identifier	mem		5231533	0					
ANR	5231543	Argument	num_elements * pstype -> ssize		5231533	1					
ANR	5231544	MultiplicativeExpression	num_elements * pstype -> ssize		5231533	0		*			
ANR	5231545	Identifier	num_elements		5231533	0					
ANR	5231546	PtrMemberAccess	pstype -> ssize		5231533	1					
ANR	5231547	Identifier	pstype		5231533	0					
ANR	5231548	Identifier	ssize		5231533	1					
ANR	5231549	Argument	pstype		5231533	2					
ANR	5231550	Identifier	pstype		5231533	0					
ANR	5231551	Argument	cname		5231533	3					
ANR	5231552	Identifier	cname		5231533	0					
ANR	5231553	ReturnType	static void *		5231533	1					
ANR	5231554	Identifier	chunk_alloc_struct_array_immovable		5231533	2					
ANR	5231555	ParameterList	"gs_memory_t * mem , uint num_elements , gs_memory_type_ptr_t pstype , client_name_t cname"		5231533	3					
ANR	5231556	Parameter	gs_memory_t * mem	1009:35:32887:32903	5231533	0	True				
ANR	5231557	ParameterType	gs_memory_t *		5231533	0					
ANR	5231558	Identifier	mem		5231533	1					
ANR	5231559	Parameter	uint num_elements	1009:54:32906:32922	5231533	1	True				
ANR	5231560	ParameterType	uint		5231533	0					
ANR	5231561	Identifier	num_elements		5231533	1					
ANR	5231562	Parameter	gs_memory_type_ptr_t pstype	1010:27:32952:32978	5231533	2	True				
ANR	5231563	ParameterType	gs_memory_type_ptr_t		5231533	0					
ANR	5231564	Identifier	pstype		5231533	1					
ANR	5231565	Parameter	client_name_t cname	1010:56:32981:32999	5231533	3	True				
ANR	5231566	ParameterType	client_name_t		5231533	0					
ANR	5231567	Identifier	cname		5231533	1					
ANR	5231568	CFGEntryNode	ENTRY		5231533		True				
ANR	5231569	CFGExitNode	EXIT		5231533		True				
ANR	5231570	Symbol	pstype -> ssize		5231533						
ANR	5231571	Symbol	* pstype		5231533						
ANR	5231572	Symbol	mem		5231533						
ANR	5231573	Symbol	pstype		5231533						
ANR	5231574	Symbol	num_elements		5231533						
ANR	5231575	Symbol	chunk_obj_alloc		5231533						
ANR	5231576	Symbol	cname		5231533						
ANR	5231577	Function	chunk_alloc_struct_array	1015:0:33085:33313							
ANR	5231578	FunctionDef	"chunk_alloc_struct_array (gs_memory_t * mem , uint num_elements , gs_memory_type_ptr_t pstype , client_name_t cname)"		5231577	0					
ANR	5231579	CompoundStatement		1018:0:33233:33313	5231577	0					
ANR	5231580	ReturnStatement	"return chunk_obj_alloc ( mem , num_elements * pstype -> ssize , pstype , cname ) ;"	1019:4:33239:33311	5231577	0	True				
ANR	5231581	CallExpression	"chunk_obj_alloc ( mem , num_elements * pstype -> ssize , pstype , cname )"		5231577	0					
ANR	5231582	Callee	chunk_obj_alloc		5231577	0					
ANR	5231583	Identifier	chunk_obj_alloc		5231577	0					
ANR	5231584	ArgumentList	mem		5231577	1					
ANR	5231585	Argument	mem		5231577	0					
ANR	5231586	Identifier	mem		5231577	0					
ANR	5231587	Argument	num_elements * pstype -> ssize		5231577	1					
ANR	5231588	MultiplicativeExpression	num_elements * pstype -> ssize		5231577	0		*			
ANR	5231589	Identifier	num_elements		5231577	0					
ANR	5231590	PtrMemberAccess	pstype -> ssize		5231577	1					
ANR	5231591	Identifier	pstype		5231577	0					
ANR	5231592	Identifier	ssize		5231577	1					
ANR	5231593	Argument	pstype		5231577	2					
ANR	5231594	Identifier	pstype		5231577	0					
ANR	5231595	Argument	cname		5231577	3					
ANR	5231596	Identifier	cname		5231577	0					
ANR	5231597	ReturnType	static void *		5231577	1					
ANR	5231598	Identifier	chunk_alloc_struct_array		5231577	2					
ANR	5231599	ParameterList	"gs_memory_t * mem , uint num_elements , gs_memory_type_ptr_t pstype , client_name_t cname"		5231577	3					
ANR	5231600	Parameter	gs_memory_t * mem	1016:25:33124:33140	5231577	0	True				
ANR	5231601	ParameterType	gs_memory_t *		5231577	0					
ANR	5231602	Identifier	mem		5231577	1					
ANR	5231603	Parameter	uint num_elements	1016:44:33143:33159	5231577	1	True				
ANR	5231604	ParameterType	uint		5231577	0					
ANR	5231605	Identifier	num_elements		5231577	1					
ANR	5231606	Parameter	gs_memory_type_ptr_t pstype	1017:21:33183:33209	5231577	2	True				
ANR	5231607	ParameterType	gs_memory_type_ptr_t		5231577	0					
ANR	5231608	Identifier	pstype		5231577	1					
ANR	5231609	Parameter	client_name_t cname	1017:50:33212:33230	5231577	3	True				
ANR	5231610	ParameterType	client_name_t		5231577	0					
ANR	5231611	Identifier	cname		5231577	1					
ANR	5231612	CFGEntryNode	ENTRY		5231577		True				
ANR	5231613	CFGExitNode	EXIT		5231577		True				
ANR	5231614	Symbol	pstype -> ssize		5231577						
ANR	5231615	Symbol	* pstype		5231577						
ANR	5231616	Symbol	mem		5231577						
ANR	5231617	Symbol	pstype		5231577						
ANR	5231618	Symbol	num_elements		5231577						
ANR	5231619	Symbol	chunk_obj_alloc		5231577						
ANR	5231620	Symbol	cname		5231577						
ANR	5231621	Function	chunk_resize_object	1022:0:33316:34267							
ANR	5231622	FunctionDef	"chunk_resize_object (gs_memory_t * mem , void * ptr , uint new_num_elements , client_name_t cname)"		5231621	0					
ANR	5231623	CompoundStatement		1024:0:33424:34267	5231621	0					
ANR	5231624	IdentifierDeclStatement	chunk_obj_node_t * obj = ( chunk_obj_node_t * ) ( ( ( byte * ) ptr ) - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) ) ;	1026:4:33497:33595	5231621	0	True				
ANR	5231625	IdentifierDecl	* obj = ( chunk_obj_node_t * ) ( ( ( byte * ) ptr ) - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) )		5231621	0					
ANR	5231626	IdentifierDeclType	chunk_obj_node_t *		5231621	0					
ANR	5231627	Identifier	obj		5231621	1					
ANR	5231628	AssignmentExpression	* obj = ( chunk_obj_node_t * ) ( ( ( byte * ) ptr ) - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) )		5231621	2		=			
ANR	5231629	Identifier	obj		5231621	0					
ANR	5231630	CastExpression	( chunk_obj_node_t * ) ( ( ( byte * ) ptr ) - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) )		5231621	1					
ANR	5231631	CastTarget	chunk_obj_node_t *		5231621	0					
ANR	5231632	AdditiveExpression	( ( byte * ) ptr ) - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5231621	1		-			
ANR	5231633	CastExpression	( byte * ) ptr		5231621	0					
ANR	5231634	CastTarget	byte *		5231621	0					
ANR	5231635	Identifier	ptr		5231621	1					
ANR	5231636	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5231621	1					
ANR	5231637	Callee	SIZEOF_ROUND_ALIGN		5231621	0					
ANR	5231638	Identifier	SIZEOF_ROUND_ALIGN		5231621	0					
ANR	5231639	ArgumentList	chunk_obj_node_t		5231621	1					
ANR	5231640	Argument	chunk_obj_node_t		5231621	0					
ANR	5231641	Identifier	chunk_obj_node_t		5231621	0					
ANR	5231642	IdentifierDeclStatement	ulong new_size = ( obj -> type -> ssize * new_num_elements ) ;	1027:4:33601:33655	5231621	1	True				
ANR	5231643	IdentifierDecl	new_size = ( obj -> type -> ssize * new_num_elements )		5231621	0					
ANR	5231644	IdentifierDeclType	ulong		5231621	0					
ANR	5231645	Identifier	new_size		5231621	1					
ANR	5231646	AssignmentExpression	new_size = ( obj -> type -> ssize * new_num_elements )		5231621	2		=			
ANR	5231647	Identifier	new_size		5231621	0					
ANR	5231648	MultiplicativeExpression	obj -> type -> ssize * new_num_elements		5231621	1		*			
ANR	5231649	PtrMemberAccess	obj -> type -> ssize		5231621	0					
ANR	5231650	PtrMemberAccess	obj -> type		5231621	0					
ANR	5231651	Identifier	obj		5231621	0					
ANR	5231652	Identifier	type		5231621	1					
ANR	5231653	Identifier	ssize		5231621	1					
ANR	5231654	Identifier	new_num_elements		5231621	1					
ANR	5231655	IdentifierDeclStatement	ulong old_size = obj -> size - obj -> padding ;	1028:4:33661:33702	5231621	2	True				
ANR	5231656	IdentifierDecl	old_size = obj -> size - obj -> padding		5231621	0					
ANR	5231657	IdentifierDeclType	ulong		5231621	0					
ANR	5231658	Identifier	old_size		5231621	1					
ANR	5231659	AssignmentExpression	old_size = obj -> size - obj -> padding		5231621	2		=			
ANR	5231660	Identifier	old_size		5231621	0					
ANR	5231661	AdditiveExpression	obj -> size - obj -> padding		5231621	1		-			
ANR	5231662	PtrMemberAccess	obj -> size		5231621	0					
ANR	5231663	Identifier	obj		5231621	0					
ANR	5231664	Identifier	size		5231621	1					
ANR	5231665	PtrMemberAccess	obj -> padding		5231621	1					
ANR	5231666	Identifier	obj		5231621	0					
ANR	5231667	Identifier	padding		5231621	1					
ANR	5231668	IdentifierDeclStatement	gs_memory_type_ptr_t type = obj -> type ;	1030:4:33751:33788	5231621	3	True				
ANR	5231669	IdentifierDecl	type = obj -> type		5231621	0					
ANR	5231670	IdentifierDeclType	gs_memory_type_ptr_t		5231621	0					
ANR	5231671	Identifier	type		5231621	1					
ANR	5231672	AssignmentExpression	type = obj -> type		5231621	2		=			
ANR	5231673	Identifier	type		5231621	0					
ANR	5231674	PtrMemberAccess	obj -> type		5231621	1					
ANR	5231675	Identifier	obj		5231621	0					
ANR	5231676	Identifier	type		5231621	1					
ANR	5231677	IdentifierDeclStatement	void * new_ptr ;	1031:4:33794:33807	5231621	4	True				
ANR	5231678	IdentifierDecl	* new_ptr		5231621	0					
ANR	5231679	IdentifierDeclType	void *		5231621	0					
ANR	5231680	Identifier	new_ptr		5231621	1					
ANR	5231681	IdentifierDeclStatement	gs_memory_chunk_t * cmem = ( gs_memory_chunk_t * ) mem ;	1032:4:33813:33863	5231621	5	True				
ANR	5231682	IdentifierDecl	* cmem = ( gs_memory_chunk_t * ) mem		5231621	0					
ANR	5231683	IdentifierDeclType	gs_memory_chunk_t *		5231621	0					
ANR	5231684	Identifier	cmem		5231621	1					
ANR	5231685	AssignmentExpression	* cmem = ( gs_memory_chunk_t * ) mem		5231621	2		=			
ANR	5231686	Identifier	cmem		5231621	0					
ANR	5231687	CastExpression	( gs_memory_chunk_t * ) mem		5231621	1					
ANR	5231688	CastTarget	gs_memory_chunk_t *		5231621	0					
ANR	5231689	Identifier	mem		5231621	1					
ANR	5231690	IdentifierDeclStatement	ulong save_max_used = cmem -> max_used ;	1033:4:33869:33905	5231621	6	True				
ANR	5231691	IdentifierDecl	save_max_used = cmem -> max_used		5231621	0					
ANR	5231692	IdentifierDeclType	ulong		5231621	0					
ANR	5231693	Identifier	save_max_used		5231621	1					
ANR	5231694	AssignmentExpression	save_max_used = cmem -> max_used		5231621	2		=			
ANR	5231695	Identifier	save_max_used		5231621	0					
ANR	5231696	PtrMemberAccess	cmem -> max_used		5231621	1					
ANR	5231697	Identifier	cmem		5231621	0					
ANR	5231698	Identifier	max_used		5231621	1					
ANR	5231699	IfStatement	if ( new_size == old_size )		5231621	7					
ANR	5231700	Condition	new_size == old_size	1035:8:33916:33935	5231621	0	True				
ANR	5231701	EqualityExpression	new_size == old_size		5231621	0		==			
ANR	5231702	Identifier	new_size		5231621	0					
ANR	5231703	Identifier	old_size		5231621	1					
ANR	5231704	ReturnStatement	return ptr ;	1036:8:33946:33956	5231621	1	True				
ANR	5231705	Identifier	ptr		5231621	0					
ANR	5231706	IfStatement	"if ( ( new_ptr = chunk_obj_alloc ( mem , new_size , type , cname ) ) == 0 )"		5231621	8					
ANR	5231707	Condition	"( new_ptr = chunk_obj_alloc ( mem , new_size , type , cname ) ) == 0"	1037:8:33966:34025	5231621	0	True				
ANR	5231708	EqualityExpression	"( new_ptr = chunk_obj_alloc ( mem , new_size , type , cname ) ) == 0"		5231621	0		==			
ANR	5231709	AssignmentExpression	"new_ptr = chunk_obj_alloc ( mem , new_size , type , cname )"		5231621	0		=			
ANR	5231710	Identifier	new_ptr		5231621	0					
ANR	5231711	CallExpression	"chunk_obj_alloc ( mem , new_size , type , cname )"		5231621	1					
ANR	5231712	Callee	chunk_obj_alloc		5231621	0					
ANR	5231713	Identifier	chunk_obj_alloc		5231621	0					
ANR	5231714	ArgumentList	mem		5231621	1					
ANR	5231715	Argument	mem		5231621	0					
ANR	5231716	Identifier	mem		5231621	0					
ANR	5231717	Argument	new_size		5231621	1					
ANR	5231718	Identifier	new_size		5231621	0					
ANR	5231719	Argument	type		5231621	2					
ANR	5231720	Identifier	type		5231621	0					
ANR	5231721	Argument	cname		5231621	3					
ANR	5231722	Identifier	cname		5231621	0					
ANR	5231723	PrimaryExpression	0		5231621	1					
ANR	5231724	ReturnStatement	return 0 ;	1038:8:34036:34044	5231621	1	True				
ANR	5231725	PrimaryExpression	0		5231621	0					
ANR	5231726	ExpressionStatement	"memcpy ( new_ptr , ptr , min ( old_size , new_size ) )"	1039:4:34050:34095	5231621	9	True				
ANR	5231727	CallExpression	"memcpy ( new_ptr , ptr , min ( old_size , new_size ) )"		5231621	0					
ANR	5231728	Callee	memcpy		5231621	0					
ANR	5231729	Identifier	memcpy		5231621	0					
ANR	5231730	ArgumentList	new_ptr		5231621	1					
ANR	5231731	Argument	new_ptr		5231621	0					
ANR	5231732	Identifier	new_ptr		5231621	0					
ANR	5231733	Argument	ptr		5231621	1					
ANR	5231734	Identifier	ptr		5231621	0					
ANR	5231735	Argument	"min ( old_size , new_size )"		5231621	2					
ANR	5231736	CallExpression	"min ( old_size , new_size )"		5231621	0					
ANR	5231737	Callee	min		5231621	0					
ANR	5231738	Identifier	min		5231621	0					
ANR	5231739	ArgumentList	old_size		5231621	1					
ANR	5231740	Argument	old_size		5231621	0					
ANR	5231741	Identifier	old_size		5231621	0					
ANR	5231742	Argument	new_size		5231621	1					
ANR	5231743	Identifier	new_size		5231621	0					
ANR	5231744	ExpressionStatement	"chunk_free_object ( mem , ptr , cname )"	1040:4:34101:34135	5231621	10	True				
ANR	5231745	CallExpression	"chunk_free_object ( mem , ptr , cname )"		5231621	0					
ANR	5231746	Callee	chunk_free_object		5231621	0					
ANR	5231747	Identifier	chunk_free_object		5231621	0					
ANR	5231748	ArgumentList	mem		5231621	1					
ANR	5231749	Argument	mem		5231621	0					
ANR	5231750	Identifier	mem		5231621	0					
ANR	5231751	Argument	ptr		5231621	1					
ANR	5231752	Identifier	ptr		5231621	0					
ANR	5231753	Argument	cname		5231621	2					
ANR	5231754	Identifier	cname		5231621	0					
ANR	5231755	ExpressionStatement	cmem -> max_used = save_max_used	1041:4:34141:34171	5231621	11	True				
ANR	5231756	AssignmentExpression	cmem -> max_used = save_max_used		5231621	0		=			
ANR	5231757	PtrMemberAccess	cmem -> max_used		5231621	0					
ANR	5231758	Identifier	cmem		5231621	0					
ANR	5231759	Identifier	max_used		5231621	1					
ANR	5231760	Identifier	save_max_used		5231621	1					
ANR	5231761	IfStatement	if ( cmem -> used > cmem -> max_used )		5231621	12					
ANR	5231762	Condition	cmem -> used > cmem -> max_used	1042:8:34181:34207	5231621	0	True				
ANR	5231763	RelationalExpression	cmem -> used > cmem -> max_used		5231621	0		>			
ANR	5231764	PtrMemberAccess	cmem -> used		5231621	0					
ANR	5231765	Identifier	cmem		5231621	0					
ANR	5231766	Identifier	used		5231621	1					
ANR	5231767	PtrMemberAccess	cmem -> max_used		5231621	1					
ANR	5231768	Identifier	cmem		5231621	0					
ANR	5231769	Identifier	max_used		5231621	1					
ANR	5231770	ExpressionStatement	cmem -> max_used = cmem -> used	1043:8:34218:34245	5231621	1	True				
ANR	5231771	AssignmentExpression	cmem -> max_used = cmem -> used		5231621	0		=			
ANR	5231772	PtrMemberAccess	cmem -> max_used		5231621	0					
ANR	5231773	Identifier	cmem		5231621	0					
ANR	5231774	Identifier	max_used		5231621	1					
ANR	5231775	PtrMemberAccess	cmem -> used		5231621	1					
ANR	5231776	Identifier	cmem		5231621	0					
ANR	5231777	Identifier	used		5231621	1					
ANR	5231778	ReturnStatement	return new_ptr ;	1044:4:34251:34265	5231621	13	True				
ANR	5231779	Identifier	new_ptr		5231621	0					
ANR	5231780	ReturnType	static void *		5231621	1					
ANR	5231781	Identifier	chunk_resize_object		5231621	2					
ANR	5231782	ParameterList	"gs_memory_t * mem , void * ptr , uint new_num_elements , client_name_t cname"		5231621	3					
ANR	5231783	Parameter	gs_memory_t * mem	1023:20:33350:33366	5231621	0	True				
ANR	5231784	ParameterType	gs_memory_t *		5231621	0					
ANR	5231785	Identifier	mem		5231621	1					
ANR	5231786	Parameter	void * ptr	1023:39:33369:33377	5231621	1	True				
ANR	5231787	ParameterType	void *		5231621	0					
ANR	5231788	Identifier	ptr		5231621	1					
ANR	5231789	Parameter	uint new_num_elements	1023:50:33380:33400	5231621	2	True				
ANR	5231790	ParameterType	uint		5231621	0					
ANR	5231791	Identifier	new_num_elements		5231621	1					
ANR	5231792	Parameter	client_name_t cname	1023:73:33403:33421	5231621	3	True				
ANR	5231793	ParameterType	client_name_t		5231621	0					
ANR	5231794	Identifier	cname		5231621	1					
ANR	5231795	CFGEntryNode	ENTRY		5231621		True				
ANR	5231796	CFGExitNode	EXIT		5231621		True				
ANR	5231797	Symbol	old_size		5231621						
ANR	5231798	Symbol	chunk_obj_alloc		5231621						
ANR	5231799	Symbol	cname		5231621						
ANR	5231800	Symbol	* * obj		5231621						
ANR	5231801	Symbol	cmem -> max_used		5231621						
ANR	5231802	Symbol	type		5231621						
ANR	5231803	Symbol	new_ptr		5231621						
ANR	5231804	Symbol	min		5231621						
ANR	5231805	Symbol	mem		5231621						
ANR	5231806	Symbol	* cmem		5231621						
ANR	5231807	Symbol	new_size		5231621						
ANR	5231808	Symbol	chunk_obj_node_t		5231621						
ANR	5231809	Symbol	* obj -> type		5231621						
ANR	5231810	Symbol	obj -> type		5231621						
ANR	5231811	Symbol	* obj		5231621						
ANR	5231812	Symbol	obj -> padding		5231621						
ANR	5231813	Symbol	obj -> size		5231621						
ANR	5231814	Symbol	cmem -> used		5231621						
ANR	5231815	Symbol	ptr		5231621						
ANR	5231816	Symbol	save_max_used		5231621						
ANR	5231817	Symbol	new_num_elements		5231621						
ANR	5231818	Symbol	obj		5231621						
ANR	5231819	Symbol	obj -> type -> ssize		5231621						
ANR	5231820	Symbol	SIZEOF_ROUND_ALIGN		5231621						
ANR	5231821	Symbol	cmem		5231621						
ANR	5231822	Function	chunk_free_object	1047:0:34270:43984							
ANR	5231823	FunctionDef	"chunk_free_object (gs_memory_t * mem , void * ptr , client_name_t cname)"		5231822	0					
ANR	5231824	CompoundStatement		1049:0:34350:43984	5231822	0					
ANR	5231825	Statement	gs_memory_chunk_t	1050:4:34356:34372	5231822	0	True				
ANR	5231826	Statement	*	1050:22:34374:34374	5231822	1	True				
ANR	5231827	Statement	const	1050:24:34376:34380	5231822	2	True				
ANR	5231828	ExpressionStatement	cmem = ( gs_memory_chunk_t * ) mem	1050:30:34382:34413	5231822	3	True				
ANR	5231829	AssignmentExpression	cmem = ( gs_memory_chunk_t * ) mem		5231822	0		=			
ANR	5231830	Identifier	cmem		5231822	0					
ANR	5231831	CastExpression	( gs_memory_chunk_t * ) mem		5231822	1					
ANR	5231832	CastTarget	gs_memory_chunk_t *		5231822	0					
ANR	5231833	Identifier	mem		5231822	1					
ANR	5231834	IdentifierDeclStatement	int obj_node_size ;	1051:4:34419:34436	5231822	4	True				
ANR	5231835	IdentifierDecl	obj_node_size		5231822	0					
ANR	5231836	IdentifierDeclType	int		5231822	0					
ANR	5231837	Identifier	obj_node_size		5231822	1					
ANR	5231838	IdentifierDeclStatement	chunk_obj_node_t * obj ;	1052:4:34442:34463	5231822	5	True				
ANR	5231839	IdentifierDecl	* obj		5231822	0					
ANR	5231840	IdentifierDeclType	chunk_obj_node_t *		5231822	0					
ANR	5231841	Identifier	obj		5231822	1					
ANR	5231842	ExpressionStatement	struct_proc_finalize ( ( * finalize ) )	1053:4:34469:34502	5231822	6	True				
ANR	5231843	CallExpression	struct_proc_finalize ( ( * finalize ) )		5231822	0					
ANR	5231844	Callee	struct_proc_finalize		5231822	0					
ANR	5231845	Identifier	struct_proc_finalize		5231822	0					
ANR	5231846	ArgumentList	* finalize		5231822	1					
ANR	5231847	Argument	* finalize		5231822	0					
ANR	5231848	UnaryOperationExpression	* finalize		5231822	0					
ANR	5231849	UnaryOperator	*		5231822	0					
ANR	5231850	Identifier	finalize		5231822	1					
ANR	5231851	IdentifierDeclStatement	"chunk_free_node_t * * ap , * * gtp , * * ltp ;"	1054:4:34508:34544	5231822	7	True				
ANR	5231852	IdentifierDecl	* * ap		5231822	0					
ANR	5231853	IdentifierDeclType	chunk_free_node_t * *		5231822	0					
ANR	5231854	Identifier	ap		5231822	1					
ANR	5231855	IdentifierDecl	* * gtp		5231822	1					
ANR	5231856	IdentifierDeclType	chunk_free_node_t * *		5231822	0					
ANR	5231857	Identifier	gtp		5231822	1					
ANR	5231858	IdentifierDecl	* * ltp		5231822	2					
ANR	5231859	IdentifierDeclType	chunk_free_node_t * *		5231822	0					
ANR	5231860	Identifier	ltp		5231822	1					
ANR	5231861	IdentifierDeclStatement	"chunk_free_node_t * a , * b , * c ;"	1055:4:34550:34578	5231822	8	True				
ANR	5231862	IdentifierDecl	* a		5231822	0					
ANR	5231863	IdentifierDeclType	chunk_free_node_t *		5231822	0					
ANR	5231864	Identifier	a		5231822	1					
ANR	5231865	IdentifierDecl	* b		5231822	1					
ANR	5231866	IdentifierDeclType	chunk_free_node_t *		5231822	0					
ANR	5231867	Identifier	b		5231822	1					
ANR	5231868	IdentifierDecl	* c		5231822	2					
ANR	5231869	IdentifierDeclType	chunk_free_node_t *		5231822	0					
ANR	5231870	Identifier	c		5231822	1					
ANR	5231871	IfStatement	if ( ptr == NULL )		5231822	9					
ANR	5231872	Condition	ptr == NULL	1057:8:34589:34599	5231822	0	True				
ANR	5231873	EqualityExpression	ptr == NULL		5231822	0		==			
ANR	5231874	Identifier	ptr		5231822	0					
ANR	5231875	Identifier	NULL		5231822	1					
ANR	5231876	ReturnStatement	return ;	1058:8:34610:34616	5231822	1	True				
ANR	5231877	ExpressionStatement	obj_node_size = SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )	1061:4:34655:34707	5231822	10	True				
ANR	5231878	AssignmentExpression	obj_node_size = SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5231822	0		=			
ANR	5231879	Identifier	obj_node_size		5231822	0					
ANR	5231880	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5231822	1					
ANR	5231881	Callee	SIZEOF_ROUND_ALIGN		5231822	0					
ANR	5231882	Identifier	SIZEOF_ROUND_ALIGN		5231822	0					
ANR	5231883	ArgumentList	chunk_obj_node_t		5231822	1					
ANR	5231884	Argument	chunk_obj_node_t		5231822	0					
ANR	5231885	Identifier	chunk_obj_node_t		5231822	0					
ANR	5231886	ExpressionStatement	obj = ( chunk_obj_node_t * ) ( ( ( byte * ) ptr ) - obj_node_size )	1062:4:34713:34770	5231822	11	True				
ANR	5231887	AssignmentExpression	obj = ( chunk_obj_node_t * ) ( ( ( byte * ) ptr ) - obj_node_size )		5231822	0		=			
ANR	5231888	Identifier	obj		5231822	0					
ANR	5231889	CastExpression	( chunk_obj_node_t * ) ( ( ( byte * ) ptr ) - obj_node_size )		5231822	1					
ANR	5231890	CastTarget	chunk_obj_node_t *		5231822	0					
ANR	5231891	AdditiveExpression	( ( byte * ) ptr ) - obj_node_size		5231822	1		-			
ANR	5231892	CastExpression	( byte * ) ptr		5231822	0					
ANR	5231893	CastTarget	byte *		5231822	0					
ANR	5231894	Identifier	ptr		5231822	1					
ANR	5231895	Identifier	obj_node_size		5231822	1					
ANR	5231896	IfStatement	if ( cmem -> deferring )		5231822	12					
ANR	5231897	Condition	cmem -> deferring	1064:8:34781:34795	5231822	0	True				
ANR	5231898	PtrMemberAccess	cmem -> deferring		5231822	0					
ANR	5231899	Identifier	cmem		5231822	0					
ANR	5231900	Identifier	deferring		5231822	1					
ANR	5231901	CompoundStatement		16:25:447:447	5231822	1					
ANR	5231902	IfStatement	if ( obj -> defer_next == NULL )		5231822	0					
ANR	5231903	Condition	obj -> defer_next == NULL	1065:12:34812:34834	5231822	0	True				
ANR	5231904	EqualityExpression	obj -> defer_next == NULL		5231822	0		==			
ANR	5231905	PtrMemberAccess	obj -> defer_next		5231822	0					
ANR	5231906	Identifier	obj		5231822	0					
ANR	5231907	Identifier	defer_next		5231822	1					
ANR	5231908	Identifier	NULL		5231822	1					
ANR	5231909	CompoundStatement		17:37:486:486	5231822	1					
ANR	5231910	ExpressionStatement	obj -> defer_next = cmem -> defer_finalize_list	1066:12:34851:34894	5231822	0	True				
ANR	5231911	AssignmentExpression	obj -> defer_next = cmem -> defer_finalize_list		5231822	0		=			
ANR	5231912	PtrMemberAccess	obj -> defer_next		5231822	0					
ANR	5231913	Identifier	obj		5231822	0					
ANR	5231914	Identifier	defer_next		5231822	1					
ANR	5231915	PtrMemberAccess	cmem -> defer_finalize_list		5231822	1					
ANR	5231916	Identifier	cmem		5231822	0					
ANR	5231917	Identifier	defer_finalize_list		5231822	1					
ANR	5231918	ExpressionStatement	cmem -> defer_finalize_list = obj	1067:12:34908:34939	5231822	1	True				
ANR	5231919	AssignmentExpression	cmem -> defer_finalize_list = obj		5231822	0		=			
ANR	5231920	PtrMemberAccess	cmem -> defer_finalize_list		5231822	0					
ANR	5231921	Identifier	cmem		5231822	0					
ANR	5231922	Identifier	defer_finalize_list		5231822	1					
ANR	5231923	Identifier	obj		5231822	1					
ANR	5231924	ReturnStatement	return ;	1069:8:34959:34965	5231822	1	True				
ANR	5231925	ExpressionStatement	cmem -> sequence ++	1074:4:35020:35036	5231822	13	True				
ANR	5231926	PostIncDecOperationExpression	cmem -> sequence ++		5231822	0					
ANR	5231927	PtrMemberAccess	cmem -> sequence		5231822	0					
ANR	5231928	Identifier	cmem		5231822	0					
ANR	5231929	Identifier	sequence		5231822	1					
ANR	5231930	IncDec	++		5231822	1					
ANR	5231931	ExpressionStatement	"dmlprintf6 ( cmem -> target , ""Event %x: free(chunk=%p, addr=%p, size=%x, num=%x, cname=%s)\\n"" , cmem -> sequence , cmem , obj , obj -> size , obj -> sequence , cname )"	1075:4:35042:35192	5231822	14	True				
ANR	5231932	CallExpression	"dmlprintf6 ( cmem -> target , ""Event %x: free(chunk=%p, addr=%p, size=%x, num=%x, cname=%s)\\n"" , cmem -> sequence , cmem , obj , obj -> size , obj -> sequence , cname )"		5231822	0					
ANR	5231933	Callee	dmlprintf6		5231822	0					
ANR	5231934	Identifier	dmlprintf6		5231822	0					
ANR	5231935	ArgumentList	cmem -> target		5231822	1					
ANR	5231936	Argument	cmem -> target		5231822	0					
ANR	5231937	PtrMemberAccess	cmem -> target		5231822	0					
ANR	5231938	Identifier	cmem		5231822	0					
ANR	5231939	Identifier	target		5231822	1					
ANR	5231940	Argument	"""Event %x: free(chunk=%p, addr=%p, size=%x, num=%x, cname=%s)\\n"""		5231822	1					
ANR	5231941	PrimaryExpression	"""Event %x: free(chunk=%p, addr=%p, size=%x, num=%x, cname=%s)\\n"""		5231822	0					
ANR	5231942	Argument	cmem -> sequence		5231822	2					
ANR	5231943	PtrMemberAccess	cmem -> sequence		5231822	0					
ANR	5231944	Identifier	cmem		5231822	0					
ANR	5231945	Identifier	sequence		5231822	1					
ANR	5231946	Argument	cmem		5231822	3					
ANR	5231947	Identifier	cmem		5231822	0					
ANR	5231948	Argument	obj		5231822	4					
ANR	5231949	Identifier	obj		5231822	0					
ANR	5231950	Argument	obj -> size		5231822	5					
ANR	5231951	PtrMemberAccess	obj -> size		5231822	0					
ANR	5231952	Identifier	obj		5231822	0					
ANR	5231953	Identifier	size		5231822	1					
ANR	5231954	Argument	obj -> sequence		5231822	6					
ANR	5231955	PtrMemberAccess	obj -> sequence		5231822	0					
ANR	5231956	Identifier	obj		5231822	0					
ANR	5231957	Identifier	sequence		5231822	1					
ANR	5231958	Argument	cname		5231822	7					
ANR	5231959	Identifier	cname		5231822	0					
ANR	5231960	IfStatement	if ( obj -> type )		5231822	15					
ANR	5231961	Condition	obj -> type	1081:8:35330:35338	5231822	0	True				
ANR	5231962	PtrMemberAccess	obj -> type		5231822	0					
ANR	5231963	Identifier	obj		5231822	0					
ANR	5231964	Identifier	type		5231822	1					
ANR	5231965	CompoundStatement		33:19:990:990	5231822	1					
ANR	5231966	ExpressionStatement	finalize = obj -> type -> finalize	1082:8:35351:35381	5231822	0	True				
ANR	5231967	AssignmentExpression	finalize = obj -> type -> finalize		5231822	0		=			
ANR	5231968	Identifier	finalize		5231822	0					
ANR	5231969	PtrMemberAccess	obj -> type -> finalize		5231822	1					
ANR	5231970	PtrMemberAccess	obj -> type		5231822	0					
ANR	5231971	Identifier	obj		5231822	0					
ANR	5231972	Identifier	type		5231822	1					
ANR	5231973	Identifier	finalize		5231822	1					
ANR	5231974	IfStatement	if ( finalize != NULL )		5231822	1					
ANR	5231975	Condition	finalize != NULL	1083:12:35395:35410	5231822	0	True				
ANR	5231976	EqualityExpression	finalize != NULL		5231822	0		!=			
ANR	5231977	Identifier	finalize		5231822	0					
ANR	5231978	Identifier	NULL		5231822	1					
ANR	5231979	ExpressionStatement	"finalize ( mem , ptr )"	1084:12:35425:35443	5231822	1	True				
ANR	5231980	CallExpression	"finalize ( mem , ptr )"		5231822	0					
ANR	5231981	Callee	finalize		5231822	0					
ANR	5231982	Identifier	finalize		5231822	0					
ANR	5231983	ArgumentList	mem		5231822	1					
ANR	5231984	Argument	mem		5231822	0					
ANR	5231985	Identifier	mem		5231822	0					
ANR	5231986	Argument	ptr		5231822	1					
ANR	5231987	Identifier	ptr		5231822	0					
ANR	5231988	ExpressionStatement	"if_debug3m ( 'A' , cmem -> target , ""[a-]chunk_free_object(%s) 0x%lx(%u)\\n"" , client_name_string ( cname ) , ( ulong ) ptr , obj -> size )"	1088:4:35524:35660	5231822	16	True				
ANR	5231989	CallExpression	"if_debug3m ( 'A' , cmem -> target , ""[a-]chunk_free_object(%s) 0x%lx(%u)\\n"" , client_name_string ( cname ) , ( ulong ) ptr , obj -> size )"		5231822	0					
ANR	5231990	Callee	if_debug3m		5231822	0					
ANR	5231991	Identifier	if_debug3m		5231822	0					
ANR	5231992	ArgumentList	'A'		5231822	1					
ANR	5231993	Argument	'A'		5231822	0					
ANR	5231994	PrimaryExpression	'A'		5231822	0					
ANR	5231995	Argument	cmem -> target		5231822	1					
ANR	5231996	PtrMemberAccess	cmem -> target		5231822	0					
ANR	5231997	Identifier	cmem		5231822	0					
ANR	5231998	Identifier	target		5231822	1					
ANR	5231999	Argument	"""[a-]chunk_free_object(%s) 0x%lx(%u)\\n"""		5231822	2					
ANR	5232000	PrimaryExpression	"""[a-]chunk_free_object(%s) 0x%lx(%u)\\n"""		5231822	0					
ANR	5232001	Argument	client_name_string ( cname )		5231822	3					
ANR	5232002	CallExpression	client_name_string ( cname )		5231822	0					
ANR	5232003	Callee	client_name_string		5231822	0					
ANR	5232004	Identifier	client_name_string		5231822	0					
ANR	5232005	ArgumentList	cname		5231822	1					
ANR	5232006	Argument	cname		5231822	0					
ANR	5232007	Identifier	cname		5231822	0					
ANR	5232008	Argument	( ulong ) ptr		5231822	4					
ANR	5232009	CastExpression	( ulong ) ptr		5231822	0					
ANR	5232010	CastTarget	ulong		5231822	0					
ANR	5232011	Identifier	ptr		5231822	1					
ANR	5232012	Argument	obj -> size		5231822	5					
ANR	5232013	PtrMemberAccess	obj -> size		5231822	0					
ANR	5232014	Identifier	obj		5231822	0					
ANR	5232015	Identifier	size		5231822	1					
ANR	5232016	IfStatement	if ( SINGLE_OBJECT_CHUNK ( obj -> size - obj -> padding ) )		5231822	17					
ANR	5232017	Condition	SINGLE_OBJECT_CHUNK ( obj -> size - obj -> padding )	1091:8:35671:35715	5231822	0	True				
ANR	5232018	CallExpression	SINGLE_OBJECT_CHUNK ( obj -> size - obj -> padding )		5231822	0					
ANR	5232019	Callee	SINGLE_OBJECT_CHUNK		5231822	0					
ANR	5232020	Identifier	SINGLE_OBJECT_CHUNK		5231822	0					
ANR	5232021	ArgumentList	obj -> size - obj -> padding		5231822	1					
ANR	5232022	Argument	obj -> size - obj -> padding		5231822	0					
ANR	5232023	AdditiveExpression	obj -> size - obj -> padding		5231822	0		-			
ANR	5232024	PtrMemberAccess	obj -> size		5231822	0					
ANR	5232025	Identifier	obj		5231822	0					
ANR	5232026	Identifier	size		5231822	1					
ANR	5232027	PtrMemberAccess	obj -> padding		5231822	1					
ANR	5232028	Identifier	obj		5231822	0					
ANR	5232029	Identifier	padding		5231822	1					
ANR	5232030	CompoundStatement		43:55:1367:1367	5231822	1					
ANR	5232031	ExpressionStatement	"gs_free_object ( cmem -> target , obj , ""chunk_free_object(single object)"" )"	1092:8:35728:35797	5231822	0	True				
ANR	5232032	CallExpression	"gs_free_object ( cmem -> target , obj , ""chunk_free_object(single object)"" )"		5231822	0					
ANR	5232033	Callee	gs_free_object		5231822	0					
ANR	5232034	Identifier	gs_free_object		5231822	0					
ANR	5232035	ArgumentList	cmem -> target		5231822	1					
ANR	5232036	Argument	cmem -> target		5231822	0					
ANR	5232037	PtrMemberAccess	cmem -> target		5231822	0					
ANR	5232038	Identifier	cmem		5231822	0					
ANR	5232039	Identifier	target		5231822	1					
ANR	5232040	Argument	obj		5231822	1					
ANR	5232041	Identifier	obj		5231822	0					
ANR	5232042	Argument	"""chunk_free_object(single object)"""		5231822	2					
ANR	5232043	PrimaryExpression	"""chunk_free_object(single object)"""		5231822	0					
ANR	5232044	ExpressionStatement	gs_memory_chunk_dump_memory ( cmem )	1094:8:35826:35859	5231822	1	True				
ANR	5232045	CallExpression	gs_memory_chunk_dump_memory ( cmem )		5231822	0					
ANR	5232046	Callee	gs_memory_chunk_dump_memory		5231822	0					
ANR	5232047	Identifier	gs_memory_chunk_dump_memory		5231822	0					
ANR	5232048	ArgumentList	cmem		5231822	1					
ANR	5232049	Argument	cmem		5231822	0					
ANR	5232050	Identifier	cmem		5231822	0					
ANR	5232051	ReturnStatement	return ;	1096:8:35876:35882	5231822	2	True				
ANR	5232052	ExpressionStatement	gtp = NULL	1104:4:36271:36281	5231822	18	True				
ANR	5232053	AssignmentExpression	gtp = NULL		5231822	0		=			
ANR	5232054	Identifier	gtp		5231822	0					
ANR	5232055	Identifier	NULL		5231822	1					
ANR	5232056	ExpressionStatement	ltp = NULL	1105:4:36373:36383	5231822	19	True				
ANR	5232057	AssignmentExpression	ltp = NULL		5231822	0		=			
ANR	5232058	Identifier	ltp		5231822	0					
ANR	5232059	Identifier	NULL		5231822	1					
ANR	5232060	ExpressionStatement	ap = & cmem -> free_loc	1106:4:36476:36496	5231822	20	True				
ANR	5232061	AssignmentExpression	ap = & cmem -> free_loc		5231822	0		=			
ANR	5232062	Identifier	ap		5231822	0					
ANR	5232063	UnaryOperationExpression	& cmem -> free_loc		5231822	1					
ANR	5232064	UnaryOperator	&		5231822	0					
ANR	5232065	PtrMemberAccess	cmem -> free_loc		5231822	1					
ANR	5232066	Identifier	cmem		5231822	0					
ANR	5232067	Identifier	free_loc		5231822	1					
ANR	5232068	WhileStatement	while ( ( a = * ap ) != NULL )		5231822	21					
ANR	5232069	Condition	( a = * ap ) != NULL	1107:11:36509:36525	5231822	0	True				
ANR	5232070	EqualityExpression	( a = * ap ) != NULL		5231822	0		!=			
ANR	5232071	AssignmentExpression	a = * ap		5231822	0		=			
ANR	5232072	Identifier	a		5231822	0					
ANR	5232073	UnaryOperationExpression	* ap		5231822	1					
ANR	5232074	UnaryOperator	*		5231822	0					
ANR	5232075	Identifier	ap		5231822	1					
ANR	5232076	Identifier	NULL		5231822	1					
ANR	5232077	CompoundStatement		59:30:2177:2177	5231822	1					
ANR	5232078	IfStatement	if ( ( void * ) a > ( void * ) obj )		5231822	0					
ANR	5232079	Condition	( void * ) a > ( void * ) obj	1108:12:36542:36564	5231822	0	True				
ANR	5232080	RelationalExpression	( void * ) a > ( void * ) obj		5231822	0		>			
ANR	5232081	CastExpression	( void * ) a		5231822	0					
ANR	5232082	CastTarget	void *		5231822	0					
ANR	5232083	Identifier	a		5231822	1					
ANR	5232084	CastExpression	( void * ) obj		5231822	1					
ANR	5232085	CastTarget	void *		5231822	0					
ANR	5232086	Identifier	obj		5231822	1					
ANR	5232087	CompoundStatement		60:37:2216:2216	5231822	1					
ANR	5232088	ExpressionStatement	b = a -> left_loc	1109:12:36581:36596	5231822	0	True				
ANR	5232089	AssignmentExpression	b = a -> left_loc		5231822	0		=			
ANR	5232090	Identifier	b		5231822	0					
ANR	5232091	PtrMemberAccess	a -> left_loc		5231822	1					
ANR	5232092	Identifier	a		5231822	0					
ANR	5232093	Identifier	left_loc		5231822	1					
ANR	5232094	IfStatement	if ( b == NULL )		5231822	1					
ANR	5232095	Condition	b == NULL	1110:16:36644:36652	5231822	0	True				
ANR	5232096	EqualityExpression	b == NULL		5231822	0		==			
ANR	5232097	Identifier	b		5231822	0					
ANR	5232098	Identifier	NULL		5231822	1					
ANR	5232099	CompoundStatement		62:27:2304:2304	5231822	1					
ANR	5232100	ExpressionStatement	gtp = ap	1111:16:36673:36681	5231822	0	True				
ANR	5232101	AssignmentExpression	gtp = ap		5231822	0		=			
ANR	5232102	Identifier	gtp		5231822	0					
ANR	5232103	Identifier	ap		5231822	1					
ANR	5232104	BreakStatement	break ;	1112:16:36726:36731	5231822	1	True				
ANR	5232105	IfStatement	if ( ( void * ) b > ( void * ) obj )		5231822	2					
ANR	5232106	Condition	( void * ) b > ( void * ) obj	1114:16:36763:36785	5231822	0	True				
ANR	5232107	RelationalExpression	( void * ) b > ( void * ) obj		5231822	0		>			
ANR	5232108	CastExpression	( void * ) b		5231822	0					
ANR	5232109	CastTarget	void *		5231822	0					
ANR	5232110	Identifier	b		5231822	1					
ANR	5232111	CastExpression	( void * ) obj		5231822	1					
ANR	5232112	CastTarget	void *		5231822	0					
ANR	5232113	Identifier	obj		5231822	1					
ANR	5232114	CompoundStatement		66:41:2437:2437	5231822	1					
ANR	5232115	ExpressionStatement	c = b -> left_loc	1115:16:36806:36821	5231822	0	True				
ANR	5232116	AssignmentExpression	c = b -> left_loc		5231822	0		=			
ANR	5232117	Identifier	c		5231822	0					
ANR	5232118	PtrMemberAccess	b -> left_loc		5231822	1					
ANR	5232119	Identifier	b		5231822	0					
ANR	5232120	Identifier	left_loc		5231822	1					
ANR	5232121	IfStatement	if ( c == NULL )		5231822	1					
ANR	5232122	Condition	c == NULL	1116:20:36873:36881	5231822	0	True				
ANR	5232123	EqualityExpression	c == NULL		5231822	0		==			
ANR	5232124	Identifier	c		5231822	0					
ANR	5232125	Identifier	NULL		5231822	1					
ANR	5232126	CompoundStatement		68:31:2533:2533	5231822	1					
ANR	5232127	ExpressionStatement	gtp = & a -> left_loc	1117:20:36906:36924	5231822	0	True				
ANR	5232128	AssignmentExpression	gtp = & a -> left_loc		5231822	0		=			
ANR	5232129	Identifier	gtp		5231822	0					
ANR	5232130	UnaryOperationExpression	& a -> left_loc		5231822	1					
ANR	5232131	UnaryOperator	&		5231822	0					
ANR	5232132	PtrMemberAccess	a -> left_loc		5231822	1					
ANR	5232133	Identifier	a		5231822	0					
ANR	5232134	Identifier	left_loc		5231822	1					
ANR	5232135	BreakStatement	break ;	1118:20:36973:36978	5231822	1	True				
ANR	5232136	ExpressionStatement	* ap = c	1125:16:37244:37251	5231822	2	True				
ANR	5232137	AssignmentExpression	* ap = c		5231822	0		=			
ANR	5232138	UnaryOperationExpression	* ap		5231822	0					
ANR	5232139	UnaryOperator	*		5231822	0					
ANR	5232140	Identifier	ap		5231822	1					
ANR	5232141	Identifier	c		5231822	1					
ANR	5232142	ExpressionStatement	a -> left_loc = b -> right_loc	1126:16:37269:37296	5231822	3	True				
ANR	5232143	AssignmentExpression	a -> left_loc = b -> right_loc		5231822	0		=			
ANR	5232144	PtrMemberAccess	a -> left_loc		5231822	0					
ANR	5232145	Identifier	a		5231822	0					
ANR	5232146	Identifier	left_loc		5231822	1					
ANR	5232147	PtrMemberAccess	b -> right_loc		5231822	1					
ANR	5232148	Identifier	b		5231822	0					
ANR	5232149	Identifier	right_loc		5231822	1					
ANR	5232150	ExpressionStatement	b -> left_loc = c -> right_loc	1127:16:37314:37341	5231822	4	True				
ANR	5232151	AssignmentExpression	b -> left_loc = c -> right_loc		5231822	0		=			
ANR	5232152	PtrMemberAccess	b -> left_loc		5231822	0					
ANR	5232153	Identifier	b		5231822	0					
ANR	5232154	Identifier	left_loc		5231822	1					
ANR	5232155	PtrMemberAccess	c -> right_loc		5231822	1					
ANR	5232156	Identifier	c		5231822	0					
ANR	5232157	Identifier	right_loc		5231822	1					
ANR	5232158	ExpressionStatement	b -> right_loc = a	1128:16:37359:37375	5231822	5	True				
ANR	5232159	AssignmentExpression	b -> right_loc = a		5231822	0		=			
ANR	5232160	PtrMemberAccess	b -> right_loc		5231822	0					
ANR	5232161	Identifier	b		5231822	0					
ANR	5232162	Identifier	right_loc		5231822	1					
ANR	5232163	Identifier	a		5231822	1					
ANR	5232164	ExpressionStatement	c -> right_loc = b	1129:16:37393:37409	5231822	6	True				
ANR	5232165	AssignmentExpression	c -> right_loc = b		5231822	0		=			
ANR	5232166	PtrMemberAccess	c -> right_loc		5231822	0					
ANR	5232167	Identifier	c		5231822	0					
ANR	5232168	Identifier	right_loc		5231822	1					
ANR	5232169	Identifier	b		5231822	1					
ANR	5232170	IfStatement	if ( ( void * ) c > ( void * ) obj )		5231822	7					
ANR	5232171	Condition	( void * ) c > ( void * ) obj	1130:20:37431:37453	5231822	0	True				
ANR	5232172	RelationalExpression	( void * ) c > ( void * ) obj		5231822	0		>			
ANR	5232173	CastExpression	( void * ) c		5231822	0					
ANR	5232174	CastTarget	void *		5231822	0					
ANR	5232175	Identifier	c		5231822	1					
ANR	5232176	CastExpression	( void * ) obj		5231822	1					
ANR	5232177	CastTarget	void *		5231822	0					
ANR	5232178	Identifier	obj		5231822	1					
ANR	5232179	CompoundStatement		82:45:3105:3105	5231822	1					
ANR	5232180	ExpressionStatement	gtp = ap	1131:20:37486:37494	5231822	0	True				
ANR	5232181	AssignmentExpression	gtp = ap		5231822	0		=			
ANR	5232182	Identifier	gtp		5231822	0					
ANR	5232183	Identifier	ap		5231822	1					
ANR	5232184	ExpressionStatement	ap = & c -> left_loc	1132:20:37543:37560	5231822	1	True				
ANR	5232185	AssignmentExpression	ap = & c -> left_loc		5231822	0		=			
ANR	5232186	Identifier	ap		5231822	0					
ANR	5232187	UnaryOperationExpression	& c -> left_loc		5231822	1					
ANR	5232188	UnaryOperator	&		5231822	0					
ANR	5232189	PtrMemberAccess	c -> left_loc		5231822	1					
ANR	5232190	Identifier	c		5231822	0					
ANR	5232191	Identifier	left_loc		5231822	1					
ANR	5232192	ElseStatement	else		5231822	0					
ANR	5232193	CompoundStatement		85:23:3234:3234	5231822	0					
ANR	5232194	ExpressionStatement	gtp = & c -> right_loc	1134:20:37615:37634	5231822	0	True				
ANR	5232195	AssignmentExpression	gtp = & c -> right_loc		5231822	0		=			
ANR	5232196	Identifier	gtp		5231822	0					
ANR	5232197	UnaryOperationExpression	& c -> right_loc		5231822	1					
ANR	5232198	UnaryOperator	&		5231822	0					
ANR	5232199	PtrMemberAccess	c -> right_loc		5231822	1					
ANR	5232200	Identifier	c		5231822	0					
ANR	5232201	Identifier	right_loc		5231822	1					
ANR	5232202	ExpressionStatement	ltp = ap	1135:20:37683:37691	5231822	1	True				
ANR	5232203	AssignmentExpression	ltp = ap		5231822	0		=			
ANR	5232204	Identifier	ltp		5231822	0					
ANR	5232205	Identifier	ap		5231822	1					
ANR	5232206	ExpressionStatement	ap = & b -> left_loc	1136:20:37737:37754	5231822	2	True				
ANR	5232207	AssignmentExpression	ap = & b -> left_loc		5231822	0		=			
ANR	5232208	Identifier	ap		5231822	0					
ANR	5232209	UnaryOperationExpression	& b -> left_loc		5231822	1					
ANR	5232210	UnaryOperator	&		5231822	0					
ANR	5232211	PtrMemberAccess	b -> left_loc		5231822	1					
ANR	5232212	Identifier	b		5231822	0					
ANR	5232213	Identifier	left_loc		5231822	1					
ANR	5232214	ElseStatement	else		5231822	0					
ANR	5232215	CompoundStatement		90:19:3442:3442	5231822	0					
ANR	5232216	ExpressionStatement	c = b -> right_loc	1139:16:37811:37827	5231822	0	True				
ANR	5232217	AssignmentExpression	c = b -> right_loc		5231822	0		=			
ANR	5232218	Identifier	c		5231822	0					
ANR	5232219	PtrMemberAccess	b -> right_loc		5231822	1					
ANR	5232220	Identifier	b		5231822	0					
ANR	5232221	Identifier	right_loc		5231822	1					
ANR	5232222	IfStatement	if ( c == NULL )		5231822	1					
ANR	5232223	Condition	c == NULL	1140:20:37880:37888	5231822	0	True				
ANR	5232224	EqualityExpression	c == NULL		5231822	0		==			
ANR	5232225	Identifier	c		5231822	0					
ANR	5232226	Identifier	NULL		5231822	1					
ANR	5232227	CompoundStatement		92:31:3540:3540	5231822	1					
ANR	5232228	ExpressionStatement	gtp = ap	1141:20:37913:37921	5231822	0	True				
ANR	5232229	AssignmentExpression	gtp = ap		5231822	0		=			
ANR	5232230	Identifier	gtp		5231822	0					
ANR	5232231	Identifier	ap		5231822	1					
ANR	5232232	ExpressionStatement	ltp = & a -> left_loc	1142:20:37970:37988	5231822	1	True				
ANR	5232233	AssignmentExpression	ltp = & a -> left_loc		5231822	0		=			
ANR	5232234	Identifier	ltp		5231822	0					
ANR	5232235	UnaryOperationExpression	& a -> left_loc		5231822	1					
ANR	5232236	UnaryOperator	&		5231822	0					
ANR	5232237	PtrMemberAccess	a -> left_loc		5231822	1					
ANR	5232238	Identifier	a		5231822	0					
ANR	5232239	Identifier	left_loc		5231822	1					
ANR	5232240	BreakStatement	break ;	1143:20:38034:38039	5231822	2	True				
ANR	5232241	ExpressionStatement	* ap = c	1150:16:38285:38292	5231822	2	True				
ANR	5232242	AssignmentExpression	* ap = c		5231822	0		=			
ANR	5232243	UnaryOperationExpression	* ap		5231822	0					
ANR	5232244	UnaryOperator	*		5231822	0					
ANR	5232245	Identifier	ap		5231822	1					
ANR	5232246	Identifier	c		5231822	1					
ANR	5232247	ExpressionStatement	a -> left_loc = c -> right_loc	1151:16:38310:38337	5231822	3	True				
ANR	5232248	AssignmentExpression	a -> left_loc = c -> right_loc		5231822	0		=			
ANR	5232249	PtrMemberAccess	a -> left_loc		5231822	0					
ANR	5232250	Identifier	a		5231822	0					
ANR	5232251	Identifier	left_loc		5231822	1					
ANR	5232252	PtrMemberAccess	c -> right_loc		5231822	1					
ANR	5232253	Identifier	c		5231822	0					
ANR	5232254	Identifier	right_loc		5231822	1					
ANR	5232255	ExpressionStatement	b -> right_loc = c -> left_loc	1152:16:38355:38381	5231822	4	True				
ANR	5232256	AssignmentExpression	b -> right_loc = c -> left_loc		5231822	0		=			
ANR	5232257	PtrMemberAccess	b -> right_loc		5231822	0					
ANR	5232258	Identifier	b		5231822	0					
ANR	5232259	Identifier	right_loc		5231822	1					
ANR	5232260	PtrMemberAccess	c -> left_loc		5231822	1					
ANR	5232261	Identifier	c		5231822	0					
ANR	5232262	Identifier	left_loc		5231822	1					
ANR	5232263	ExpressionStatement	c -> left_loc = b	1153:16:38399:38415	5231822	5	True				
ANR	5232264	AssignmentExpression	c -> left_loc = b		5231822	0		=			
ANR	5232265	PtrMemberAccess	c -> left_loc		5231822	0					
ANR	5232266	Identifier	c		5231822	0					
ANR	5232267	Identifier	left_loc		5231822	1					
ANR	5232268	Identifier	b		5231822	1					
ANR	5232269	ExpressionStatement	c -> right_loc = a	1154:16:38433:38449	5231822	6	True				
ANR	5232270	AssignmentExpression	c -> right_loc = a		5231822	0		=			
ANR	5232271	PtrMemberAccess	c -> right_loc		5231822	0					
ANR	5232272	Identifier	c		5231822	0					
ANR	5232273	Identifier	right_loc		5231822	1					
ANR	5232274	Identifier	a		5231822	1					
ANR	5232275	IfStatement	if ( ( void * ) c > ( void * ) obj )		5231822	7					
ANR	5232276	Condition	( void * ) c > ( void * ) obj	1155:20:38471:38493	5231822	0	True				
ANR	5232277	RelationalExpression	( void * ) c > ( void * ) obj		5231822	0		>			
ANR	5232278	CastExpression	( void * ) c		5231822	0					
ANR	5232279	CastTarget	void *		5231822	0					
ANR	5232280	Identifier	c		5231822	1					
ANR	5232281	CastExpression	( void * ) obj		5231822	1					
ANR	5232282	CastTarget	void *		5231822	0					
ANR	5232283	Identifier	obj		5231822	1					
ANR	5232284	CompoundStatement		107:45:4145:4145	5231822	1					
ANR	5232285	ExpressionStatement	gtp = ap	1156:20:38526:38534	5231822	0	True				
ANR	5232286	AssignmentExpression	gtp = ap		5231822	0		=			
ANR	5232287	Identifier	gtp		5231822	0					
ANR	5232288	Identifier	ap		5231822	1					
ANR	5232289	ExpressionStatement	ltp = & c -> left_loc	1157:20:38583:38601	5231822	1	True				
ANR	5232290	AssignmentExpression	ltp = & c -> left_loc		5231822	0		=			
ANR	5232291	Identifier	ltp		5231822	0					
ANR	5232292	UnaryOperationExpression	& c -> left_loc		5231822	1					
ANR	5232293	UnaryOperator	&		5231822	0					
ANR	5232294	PtrMemberAccess	c -> left_loc		5231822	1					
ANR	5232295	Identifier	c		5231822	0					
ANR	5232296	Identifier	left_loc		5231822	1					
ANR	5232297	ExpressionStatement	ap = & b -> right_loc	1158:20:38647:38665	5231822	2	True				
ANR	5232298	AssignmentExpression	ap = & b -> right_loc		5231822	0		=			
ANR	5232299	Identifier	ap		5231822	0					
ANR	5232300	UnaryOperationExpression	& b -> right_loc		5231822	1					
ANR	5232301	UnaryOperator	&		5231822	0					
ANR	5232302	PtrMemberAccess	b -> right_loc		5231822	1					
ANR	5232303	Identifier	b		5231822	0					
ANR	5232304	Identifier	right_loc		5231822	1					
ANR	5232305	ElseStatement	else		5231822	0					
ANR	5232306	CompoundStatement		111:23:4339:4339	5231822	0					
ANR	5232307	ExpressionStatement	gtp = & c -> right_loc	1160:20:38720:38739	5231822	0	True				
ANR	5232308	AssignmentExpression	gtp = & c -> right_loc		5231822	0		=			
ANR	5232309	Identifier	gtp		5231822	0					
ANR	5232310	UnaryOperationExpression	& c -> right_loc		5231822	1					
ANR	5232311	UnaryOperator	&		5231822	0					
ANR	5232312	PtrMemberAccess	c -> right_loc		5231822	1					
ANR	5232313	Identifier	c		5231822	0					
ANR	5232314	Identifier	right_loc		5231822	1					
ANR	5232315	ExpressionStatement	ltp = ap	1161:20:38788:38796	5231822	1	True				
ANR	5232316	AssignmentExpression	ltp = ap		5231822	0		=			
ANR	5232317	Identifier	ltp		5231822	0					
ANR	5232318	Identifier	ap		5231822	1					
ANR	5232319	ExpressionStatement	ap = & a -> left_loc	1162:20:38842:38859	5231822	2	True				
ANR	5232320	AssignmentExpression	ap = & a -> left_loc		5231822	0		=			
ANR	5232321	Identifier	ap		5231822	0					
ANR	5232322	UnaryOperationExpression	& a -> left_loc		5231822	1					
ANR	5232323	UnaryOperator	&		5231822	0					
ANR	5232324	PtrMemberAccess	a -> left_loc		5231822	1					
ANR	5232325	Identifier	a		5231822	0					
ANR	5232326	Identifier	left_loc		5231822	1					
ANR	5232327	ElseStatement	else		5231822	0					
ANR	5232328	CompoundStatement		117:15:4557:4557	5231822	0					
ANR	5232329	ExpressionStatement	b = a -> right_loc	1166:12:38922:38938	5231822	0	True				
ANR	5232330	AssignmentExpression	b = a -> right_loc		5231822	0		=			
ANR	5232331	Identifier	b		5231822	0					
ANR	5232332	PtrMemberAccess	a -> right_loc		5231822	1					
ANR	5232333	Identifier	a		5231822	0					
ANR	5232334	Identifier	right_loc		5231822	1					
ANR	5232335	IfStatement	if ( b == NULL )		5231822	1					
ANR	5232336	Condition	b == NULL	1167:16:38987:38995	5231822	0	True				
ANR	5232337	EqualityExpression	b == NULL		5231822	0		==			
ANR	5232338	Identifier	b		5231822	0					
ANR	5232339	Identifier	NULL		5231822	1					
ANR	5232340	CompoundStatement		119:27:4647:4647	5231822	1					
ANR	5232341	ExpressionStatement	ltp = ap	1168:16:39016:39024	5231822	0	True				
ANR	5232342	AssignmentExpression	ltp = ap		5231822	0		=			
ANR	5232343	Identifier	ltp		5231822	0					
ANR	5232344	Identifier	ap		5231822	1					
ANR	5232345	BreakStatement	break ;	1169:16:39066:39071	5231822	1	True				
ANR	5232346	IfStatement	if ( ( void * ) b > ( void * ) obj )		5231822	2					
ANR	5232347	Condition	( void * ) b > ( void * ) obj	1171:16:39103:39125	5231822	0	True				
ANR	5232348	RelationalExpression	( void * ) b > ( void * ) obj		5231822	0		>			
ANR	5232349	CastExpression	( void * ) b		5231822	0					
ANR	5232350	CastTarget	void *		5231822	0					
ANR	5232351	Identifier	b		5231822	1					
ANR	5232352	CastExpression	( void * ) obj		5231822	1					
ANR	5232353	CastTarget	void *		5231822	0					
ANR	5232354	Identifier	obj		5231822	1					
ANR	5232355	CompoundStatement		123:41:4777:4777	5231822	1					
ANR	5232356	ExpressionStatement	c = b -> left_loc	1172:16:39146:39161	5231822	0	True				
ANR	5232357	AssignmentExpression	c = b -> left_loc		5231822	0		=			
ANR	5232358	Identifier	c		5231822	0					
ANR	5232359	PtrMemberAccess	b -> left_loc		5231822	1					
ANR	5232360	Identifier	b		5231822	0					
ANR	5232361	Identifier	left_loc		5231822	1					
ANR	5232362	IfStatement	if ( c == NULL )		5231822	1					
ANR	5232363	Condition	c == NULL	1173:20:39183:39191	5231822	0	True				
ANR	5232364	EqualityExpression	c == NULL		5231822	0		==			
ANR	5232365	Identifier	c		5231822	0					
ANR	5232366	Identifier	NULL		5231822	1					
ANR	5232367	CompoundStatement		125:31:4843:4843	5231822	1					
ANR	5232368	ExpressionStatement	gtp = & a -> right_loc	1174:20:39216:39235	5231822	0	True				
ANR	5232369	AssignmentExpression	gtp = & a -> right_loc		5231822	0		=			
ANR	5232370	Identifier	gtp		5231822	0					
ANR	5232371	UnaryOperationExpression	& a -> right_loc		5231822	1					
ANR	5232372	UnaryOperator	&		5231822	0					
ANR	5232373	PtrMemberAccess	a -> right_loc		5231822	1					
ANR	5232374	Identifier	a		5231822	0					
ANR	5232375	Identifier	right_loc		5231822	1					
ANR	5232376	ExpressionStatement	ltp = ap	1175:20:39284:39292	5231822	1	True				
ANR	5232377	AssignmentExpression	ltp = ap		5231822	0		=			
ANR	5232378	Identifier	ltp		5231822	0					
ANR	5232379	Identifier	ap		5231822	1					
ANR	5232380	BreakStatement	break ;	1176:20:39338:39343	5231822	2	True				
ANR	5232381	ExpressionStatement	* ap = c	1183:16:39590:39597	5231822	2	True				
ANR	5232382	AssignmentExpression	* ap = c		5231822	0		=			
ANR	5232383	UnaryOperationExpression	* ap		5231822	0					
ANR	5232384	UnaryOperator	*		5231822	0					
ANR	5232385	Identifier	ap		5231822	1					
ANR	5232386	Identifier	c		5231822	1					
ANR	5232387	ExpressionStatement	a -> right_loc = c -> left_loc	1184:16:39615:39641	5231822	3	True				
ANR	5232388	AssignmentExpression	a -> right_loc = c -> left_loc		5231822	0		=			
ANR	5232389	PtrMemberAccess	a -> right_loc		5231822	0					
ANR	5232390	Identifier	a		5231822	0					
ANR	5232391	Identifier	right_loc		5231822	1					
ANR	5232392	PtrMemberAccess	c -> left_loc		5231822	1					
ANR	5232393	Identifier	c		5231822	0					
ANR	5232394	Identifier	left_loc		5231822	1					
ANR	5232395	ExpressionStatement	b -> left_loc = c -> right_loc	1185:16:39659:39686	5231822	4	True				
ANR	5232396	AssignmentExpression	b -> left_loc = c -> right_loc		5231822	0		=			
ANR	5232397	PtrMemberAccess	b -> left_loc		5231822	0					
ANR	5232398	Identifier	b		5231822	0					
ANR	5232399	Identifier	left_loc		5231822	1					
ANR	5232400	PtrMemberAccess	c -> right_loc		5231822	1					
ANR	5232401	Identifier	c		5231822	0					
ANR	5232402	Identifier	right_loc		5231822	1					
ANR	5232403	ExpressionStatement	c -> left_loc = a	1186:16:39704:39720	5231822	5	True				
ANR	5232404	AssignmentExpression	c -> left_loc = a		5231822	0		=			
ANR	5232405	PtrMemberAccess	c -> left_loc		5231822	0					
ANR	5232406	Identifier	c		5231822	0					
ANR	5232407	Identifier	left_loc		5231822	1					
ANR	5232408	Identifier	a		5231822	1					
ANR	5232409	ExpressionStatement	c -> right_loc = b	1187:16:39738:39754	5231822	6	True				
ANR	5232410	AssignmentExpression	c -> right_loc = b		5231822	0		=			
ANR	5232411	PtrMemberAccess	c -> right_loc		5231822	0					
ANR	5232412	Identifier	c		5231822	0					
ANR	5232413	Identifier	right_loc		5231822	1					
ANR	5232414	Identifier	b		5231822	1					
ANR	5232415	IfStatement	if ( ( void * ) c > ( void * ) obj )		5231822	7					
ANR	5232416	Condition	( void * ) c > ( void * ) obj	1188:20:39776:39798	5231822	0	True				
ANR	5232417	RelationalExpression	( void * ) c > ( void * ) obj		5231822	0		>			
ANR	5232418	CastExpression	( void * ) c		5231822	0					
ANR	5232419	CastTarget	void *		5231822	0					
ANR	5232420	Identifier	c		5231822	1					
ANR	5232421	CastExpression	( void * ) obj		5231822	1					
ANR	5232422	CastTarget	void *		5231822	0					
ANR	5232423	Identifier	obj		5231822	1					
ANR	5232424	CompoundStatement		140:45:5450:5450	5231822	1					
ANR	5232425	ExpressionStatement	gtp = ap	1189:20:39831:39839	5231822	0	True				
ANR	5232426	AssignmentExpression	gtp = ap		5231822	0		=			
ANR	5232427	Identifier	gtp		5231822	0					
ANR	5232428	Identifier	ap		5231822	1					
ANR	5232429	ExpressionStatement	ltp = & c -> left_loc	1190:20:39888:39906	5231822	1	True				
ANR	5232430	AssignmentExpression	ltp = & c -> left_loc		5231822	0		=			
ANR	5232431	Identifier	ltp		5231822	0					
ANR	5232432	UnaryOperationExpression	& c -> left_loc		5231822	1					
ANR	5232433	UnaryOperator	&		5231822	0					
ANR	5232434	PtrMemberAccess	c -> left_loc		5231822	1					
ANR	5232435	Identifier	c		5231822	0					
ANR	5232436	Identifier	left_loc		5231822	1					
ANR	5232437	ExpressionStatement	ap = & a -> right_loc	1191:20:39952:39970	5231822	2	True				
ANR	5232438	AssignmentExpression	ap = & a -> right_loc		5231822	0		=			
ANR	5232439	Identifier	ap		5231822	0					
ANR	5232440	UnaryOperationExpression	& a -> right_loc		5231822	1					
ANR	5232441	UnaryOperator	&		5231822	0					
ANR	5232442	PtrMemberAccess	a -> right_loc		5231822	1					
ANR	5232443	Identifier	a		5231822	0					
ANR	5232444	Identifier	right_loc		5231822	1					
ANR	5232445	ElseStatement	else		5231822	0					
ANR	5232446	CompoundStatement		144:23:5644:5644	5231822	0					
ANR	5232447	ExpressionStatement	gtp = & c -> right_loc	1193:20:40025:40044	5231822	0	True				
ANR	5232448	AssignmentExpression	gtp = & c -> right_loc		5231822	0		=			
ANR	5232449	Identifier	gtp		5231822	0					
ANR	5232450	UnaryOperationExpression	& c -> right_loc		5231822	1					
ANR	5232451	UnaryOperator	&		5231822	0					
ANR	5232452	PtrMemberAccess	c -> right_loc		5231822	1					
ANR	5232453	Identifier	c		5231822	0					
ANR	5232454	Identifier	right_loc		5231822	1					
ANR	5232455	ExpressionStatement	ltp = ap	1194:20:40093:40101	5231822	1	True				
ANR	5232456	AssignmentExpression	ltp = ap		5231822	0		=			
ANR	5232457	Identifier	ltp		5231822	0					
ANR	5232458	Identifier	ap		5231822	1					
ANR	5232459	ExpressionStatement	ap = & b -> left_loc	1195:20:40152:40169	5231822	2	True				
ANR	5232460	AssignmentExpression	ap = & b -> left_loc		5231822	0		=			
ANR	5232461	Identifier	ap		5231822	0					
ANR	5232462	UnaryOperationExpression	& b -> left_loc		5231822	1					
ANR	5232463	UnaryOperator	&		5231822	0					
ANR	5232464	PtrMemberAccess	b -> left_loc		5231822	1					
ANR	5232465	Identifier	b		5231822	0					
ANR	5232466	Identifier	left_loc		5231822	1					
ANR	5232467	ElseStatement	else		5231822	0					
ANR	5232468	CompoundStatement		149:19:5857:5857	5231822	0					
ANR	5232469	ExpressionStatement	c = b -> right_loc	1198:16:40226:40242	5231822	0	True				
ANR	5232470	AssignmentExpression	c = b -> right_loc		5231822	0		=			
ANR	5232471	Identifier	c		5231822	0					
ANR	5232472	PtrMemberAccess	b -> right_loc		5231822	1					
ANR	5232473	Identifier	b		5231822	0					
ANR	5232474	Identifier	right_loc		5231822	1					
ANR	5232475	IfStatement	if ( c == NULL )		5231822	1					
ANR	5232476	Condition	c == NULL	1199:20:40264:40272	5231822	0	True				
ANR	5232477	EqualityExpression	c == NULL		5231822	0		==			
ANR	5232478	Identifier	c		5231822	0					
ANR	5232479	Identifier	NULL		5231822	1					
ANR	5232480	CompoundStatement		151:31:5924:5924	5231822	1					
ANR	5232481	ExpressionStatement	ltp = & a -> right_loc	1200:20:40297:40316	5231822	0	True				
ANR	5232482	AssignmentExpression	ltp = & a -> right_loc		5231822	0		=			
ANR	5232483	Identifier	ltp		5231822	0					
ANR	5232484	UnaryOperationExpression	& a -> right_loc		5231822	1					
ANR	5232485	UnaryOperator	&		5231822	0					
ANR	5232486	PtrMemberAccess	a -> right_loc		5231822	1					
ANR	5232487	Identifier	a		5231822	0					
ANR	5232488	Identifier	right_loc		5231822	1					
ANR	5232489	BreakStatement	break ;	1201:20:40365:40370	5231822	1	True				
ANR	5232490	ExpressionStatement	* ap = c	1208:16:40628:40635	5231822	2	True				
ANR	5232491	AssignmentExpression	* ap = c		5231822	0		=			
ANR	5232492	UnaryOperationExpression	* ap		5231822	0					
ANR	5232493	UnaryOperator	*		5231822	0					
ANR	5232494	Identifier	ap		5231822	1					
ANR	5232495	Identifier	c		5231822	1					
ANR	5232496	ExpressionStatement	a -> right_loc = b -> left_loc	1209:16:40653:40679	5231822	3	True				
ANR	5232497	AssignmentExpression	a -> right_loc = b -> left_loc		5231822	0		=			
ANR	5232498	PtrMemberAccess	a -> right_loc		5231822	0					
ANR	5232499	Identifier	a		5231822	0					
ANR	5232500	Identifier	right_loc		5231822	1					
ANR	5232501	PtrMemberAccess	b -> left_loc		5231822	1					
ANR	5232502	Identifier	b		5231822	0					
ANR	5232503	Identifier	left_loc		5231822	1					
ANR	5232504	ExpressionStatement	b -> right_loc = c -> left_loc	1210:16:40697:40723	5231822	4	True				
ANR	5232505	AssignmentExpression	b -> right_loc = c -> left_loc		5231822	0		=			
ANR	5232506	PtrMemberAccess	b -> right_loc		5231822	0					
ANR	5232507	Identifier	b		5231822	0					
ANR	5232508	Identifier	right_loc		5231822	1					
ANR	5232509	PtrMemberAccess	c -> left_loc		5231822	1					
ANR	5232510	Identifier	c		5231822	0					
ANR	5232511	Identifier	left_loc		5231822	1					
ANR	5232512	ExpressionStatement	b -> left_loc = a	1211:16:40741:40757	5231822	5	True				
ANR	5232513	AssignmentExpression	b -> left_loc = a		5231822	0		=			
ANR	5232514	PtrMemberAccess	b -> left_loc		5231822	0					
ANR	5232515	Identifier	b		5231822	0					
ANR	5232516	Identifier	left_loc		5231822	1					
ANR	5232517	Identifier	a		5231822	1					
ANR	5232518	ExpressionStatement	c -> left_loc = b	1212:16:40775:40791	5231822	6	True				
ANR	5232519	AssignmentExpression	c -> left_loc = b		5231822	0		=			
ANR	5232520	PtrMemberAccess	c -> left_loc		5231822	0					
ANR	5232521	Identifier	c		5231822	0					
ANR	5232522	Identifier	left_loc		5231822	1					
ANR	5232523	Identifier	b		5231822	1					
ANR	5232524	IfStatement	if ( ( void * ) c > ( void * ) obj )		5231822	7					
ANR	5232525	Condition	( void * ) c > ( void * ) obj	1213:20:40813:40835	5231822	0	True				
ANR	5232526	RelationalExpression	( void * ) c > ( void * ) obj		5231822	0		>			
ANR	5232527	CastExpression	( void * ) c		5231822	0					
ANR	5232528	CastTarget	void *		5231822	0					
ANR	5232529	Identifier	c		5231822	1					
ANR	5232530	CastExpression	( void * ) obj		5231822	1					
ANR	5232531	CastTarget	void *		5231822	0					
ANR	5232532	Identifier	obj		5231822	1					
ANR	5232533	CompoundStatement		165:45:6487:6487	5231822	1					
ANR	5232534	ExpressionStatement	gtp = ap	1214:20:40868:40876	5231822	0	True				
ANR	5232535	AssignmentExpression	gtp = ap		5231822	0		=			
ANR	5232536	Identifier	gtp		5231822	0					
ANR	5232537	Identifier	ap		5231822	1					
ANR	5232538	ExpressionStatement	ltp = & c -> left_loc	1215:20:40925:40943	5231822	1	True				
ANR	5232539	AssignmentExpression	ltp = & c -> left_loc		5231822	0		=			
ANR	5232540	Identifier	ltp		5231822	0					
ANR	5232541	UnaryOperationExpression	& c -> left_loc		5231822	1					
ANR	5232542	UnaryOperator	&		5231822	0					
ANR	5232543	PtrMemberAccess	c -> left_loc		5231822	1					
ANR	5232544	Identifier	c		5231822	0					
ANR	5232545	Identifier	left_loc		5231822	1					
ANR	5232546	ExpressionStatement	ap = & b -> right_loc	1216:20:40989:41007	5231822	2	True				
ANR	5232547	AssignmentExpression	ap = & b -> right_loc		5231822	0		=			
ANR	5232548	Identifier	ap		5231822	0					
ANR	5232549	UnaryOperationExpression	& b -> right_loc		5231822	1					
ANR	5232550	UnaryOperator	&		5231822	0					
ANR	5232551	PtrMemberAccess	b -> right_loc		5231822	1					
ANR	5232552	Identifier	b		5231822	0					
ANR	5232553	Identifier	right_loc		5231822	1					
ANR	5232554	ElseStatement	else		5231822	0					
ANR	5232555	CompoundStatement		169:23:6681:6681	5231822	0					
ANR	5232556	ExpressionStatement	ltp = ap	1218:20:41062:41070	5231822	0	True				
ANR	5232557	AssignmentExpression	ltp = ap		5231822	0		=			
ANR	5232558	Identifier	ltp		5231822	0					
ANR	5232559	Identifier	ap		5231822	1					
ANR	5232560	ExpressionStatement	ap = & c -> right_loc	1219:20:41121:41139	5231822	1	True				
ANR	5232561	AssignmentExpression	ap = & c -> right_loc		5231822	0		=			
ANR	5232562	Identifier	ap		5231822	0					
ANR	5232563	UnaryOperationExpression	& c -> right_loc		5231822	1					
ANR	5232564	UnaryOperator	&		5231822	0					
ANR	5232565	PtrMemberAccess	c -> right_loc		5231822	1					
ANR	5232566	Identifier	c		5231822	0					
ANR	5232567	Identifier	right_loc		5231822	1					
ANR	5232568	IfStatement	if ( ltp )		5231822	22					
ANR	5232569	Condition	ltp	1225:8:41198:41200	5231822	0	True				
ANR	5232570	Identifier	ltp		5231822	0					
ANR	5232571	CompoundStatement		179:8:6937:6992	5231822	1					
ANR	5232572	IdentifierDeclStatement	chunk_free_node_t * ltfree = ( chunk_free_node_t * ) ( * ltp ) ;	1227:8:41288:41343	5231822	0	True				
ANR	5232573	IdentifierDecl	* ltfree = ( chunk_free_node_t * ) ( * ltp )		5231822	0					
ANR	5232574	IdentifierDeclType	chunk_free_node_t *		5231822	0					
ANR	5232575	Identifier	ltfree		5231822	1					
ANR	5232576	AssignmentExpression	* ltfree = ( chunk_free_node_t * ) ( * ltp )		5231822	2		=			
ANR	5232577	Identifier	ltfree		5231822	0					
ANR	5232578	CastExpression	( chunk_free_node_t * ) ( * ltp )		5231822	1					
ANR	5232579	CastTarget	chunk_free_node_t *		5231822	0					
ANR	5232580	UnaryOperationExpression	* ltp		5231822	1					
ANR	5232581	UnaryOperator	*		5231822	0					
ANR	5232582	Identifier	ltp		5231822	1					
ANR	5232583	IfStatement	if ( ( ( ( byte * ) ltfree ) + ltfree -> size ) == ( byte * ) ( void * ) obj )		5231822	1					
ANR	5232584	Condition	( ( ( byte * ) ltfree ) + ltfree -> size ) == ( byte * ) ( void * ) obj	1228:12:41357:41412	5231822	0	True				
ANR	5232585	EqualityExpression	( ( ( byte * ) ltfree ) + ltfree -> size ) == ( byte * ) ( void * ) obj		5231822	0		==			
ANR	5232586	AdditiveExpression	( ( byte * ) ltfree ) + ltfree -> size		5231822	0		+			
ANR	5232587	CastExpression	( byte * ) ltfree		5231822	0					
ANR	5232588	CastTarget	byte *		5231822	0					
ANR	5232589	Identifier	ltfree		5231822	1					
ANR	5232590	PtrMemberAccess	ltfree -> size		5231822	1					
ANR	5232591	Identifier	ltfree		5231822	0					
ANR	5232592	Identifier	size		5231822	1					
ANR	5232593	CastExpression	( byte * ) ( void * ) obj		5231822	1					
ANR	5232594	CastTarget	byte *		5231822	0					
ANR	5232595	CastExpression	( void * ) obj		5231822	1					
ANR	5232596	CastTarget	void *		5231822	0					
ANR	5232597	Identifier	obj		5231822	1					
ANR	5232598	CompoundStatement		180:70:7064:7064	5231822	1					
ANR	5232599	ExpressionStatement	cmem -> total_free += obj -> size	1230:12:41454:41483	5231822	0	True				
ANR	5232600	AssignmentExpression	cmem -> total_free += obj -> size		5231822	0		+=			
ANR	5232601	PtrMemberAccess	cmem -> total_free		5231822	0					
ANR	5232602	Identifier	cmem		5231822	0					
ANR	5232603	Identifier	total_free		5231822	1					
ANR	5232604	PtrMemberAccess	obj -> size		5231822	1					
ANR	5232605	Identifier	obj		5231822	0					
ANR	5232606	Identifier	size		5231822	1					
ANR	5232607	ExpressionStatement	"remove_free_size ( cmem , ltfree )"	1231:12:41497:41527	5231822	1	True				
ANR	5232608	CallExpression	"remove_free_size ( cmem , ltfree )"		5231822	0					
ANR	5232609	Callee	remove_free_size		5231822	0					
ANR	5232610	Identifier	remove_free_size		5231822	0					
ANR	5232611	ArgumentList	cmem		5231822	1					
ANR	5232612	Argument	cmem		5231822	0					
ANR	5232613	Identifier	cmem		5231822	0					
ANR	5232614	Argument	ltfree		5231822	1					
ANR	5232615	Identifier	ltfree		5231822	0					
ANR	5232616	ExpressionStatement	ltfree -> size += obj -> size	1232:12:41541:41566	5231822	2	True				
ANR	5232617	AssignmentExpression	ltfree -> size += obj -> size		5231822	0		+=			
ANR	5232618	PtrMemberAccess	ltfree -> size		5231822	0					
ANR	5232619	Identifier	ltfree		5231822	0					
ANR	5232620	Identifier	size		5231822	1					
ANR	5232621	PtrMemberAccess	obj -> size		5231822	1					
ANR	5232622	Identifier	obj		5231822	0					
ANR	5232623	Identifier	size		5231822	1					
ANR	5232624	IfStatement	if ( gtp )		5231822	3					
ANR	5232625	Condition	gtp	1233:16:41584:41586	5231822	0	True				
ANR	5232626	Identifier	gtp		5231822	0					
ANR	5232627	CompoundStatement		187:16:7339:7394	5231822	1					
ANR	5232628	IdentifierDeclStatement	chunk_free_node_t * gtfree = ( chunk_free_node_t * ) ( * gtp ) ;	1235:16:41690:41745	5231822	0	True				
ANR	5232629	IdentifierDecl	* gtfree = ( chunk_free_node_t * ) ( * gtp )		5231822	0					
ANR	5232630	IdentifierDeclType	chunk_free_node_t *		5231822	0					
ANR	5232631	Identifier	gtfree		5231822	1					
ANR	5232632	AssignmentExpression	* gtfree = ( chunk_free_node_t * ) ( * gtp )		5231822	2		=			
ANR	5232633	Identifier	gtfree		5231822	0					
ANR	5232634	CastExpression	( chunk_free_node_t * ) ( * gtp )		5231822	1					
ANR	5232635	CastTarget	chunk_free_node_t *		5231822	0					
ANR	5232636	UnaryOperationExpression	* gtp		5231822	1					
ANR	5232637	UnaryOperator	*		5231822	0					
ANR	5232638	Identifier	gtp		5231822	1					
ANR	5232639	IfStatement	if ( ( ( ( byte * ) obj ) + obj -> size ) == ( byte * ) ( void * ) gtfree )		5231822	1					
ANR	5232640	Condition	( ( ( byte * ) obj ) + obj -> size ) == ( byte * ) ( void * ) gtfree	1236:20:41767:41819	5231822	0	True				
ANR	5232641	EqualityExpression	( ( ( byte * ) obj ) + obj -> size ) == ( byte * ) ( void * ) gtfree		5231822	0		==			
ANR	5232642	AdditiveExpression	( ( byte * ) obj ) + obj -> size		5231822	0		+			
ANR	5232643	CastExpression	( byte * ) obj		5231822	0					
ANR	5232644	CastTarget	byte *		5231822	0					
ANR	5232645	Identifier	obj		5231822	1					
ANR	5232646	PtrMemberAccess	obj -> size		5231822	1					
ANR	5232647	Identifier	obj		5231822	0					
ANR	5232648	Identifier	size		5231822	1					
ANR	5232649	CastExpression	( byte * ) ( void * ) gtfree		5231822	1					
ANR	5232650	CastTarget	byte *		5231822	0					
ANR	5232651	CastExpression	( void * ) gtfree		5231822	1					
ANR	5232652	CastTarget	void *		5231822	0					
ANR	5232653	Identifier	gtfree		5231822	1					
ANR	5232654	CompoundStatement		188:75:7471:7471	5231822	1					
ANR	5232655	ExpressionStatement	ltfree -> size += gtfree -> size	1238:20:41884:41912	5231822	0	True				
ANR	5232656	AssignmentExpression	ltfree -> size += gtfree -> size		5231822	0		+=			
ANR	5232657	PtrMemberAccess	ltfree -> size		5231822	0					
ANR	5232658	Identifier	ltfree		5231822	0					
ANR	5232659	Identifier	size		5231822	1					
ANR	5232660	PtrMemberAccess	gtfree -> size		5231822	1					
ANR	5232661	Identifier	gtfree		5231822	0					
ANR	5232662	Identifier	size		5231822	1					
ANR	5232663	ExpressionStatement	"remove_free ( cmem , gtfree )"	1239:20:41934:41959	5231822	1	True				
ANR	5232664	CallExpression	"remove_free ( cmem , gtfree )"		5231822	0					
ANR	5232665	Callee	remove_free		5231822	0					
ANR	5232666	Identifier	remove_free		5231822	0					
ANR	5232667	ArgumentList	cmem		5231822	1					
ANR	5232668	Argument	cmem		5231822	0					
ANR	5232669	Identifier	cmem		5231822	0					
ANR	5232670	Argument	gtfree		5231822	1					
ANR	5232671	Identifier	gtfree		5231822	0					
ANR	5232672	ExpressionStatement	gtp = NULL	1241:16:41995:42005	5231822	2	True				
ANR	5232673	AssignmentExpression	gtp = NULL		5231822	0		=			
ANR	5232674	Identifier	gtp		5231822	0					
ANR	5232675	Identifier	NULL		5231822	1					
ANR	5232676	ExpressionStatement	"insert_free_size ( cmem , ltfree )"	1243:12:42033:42063	5231822	4	True				
ANR	5232677	CallExpression	"insert_free_size ( cmem , ltfree )"		5231822	0					
ANR	5232678	Callee	insert_free_size		5231822	0					
ANR	5232679	Identifier	insert_free_size		5231822	0					
ANR	5232680	ArgumentList	cmem		5231822	1					
ANR	5232681	Argument	cmem		5231822	0					
ANR	5232682	Identifier	cmem		5231822	0					
ANR	5232683	Argument	ltfree		5231822	1					
ANR	5232684	Identifier	ltfree		5231822	0					
ANR	5232685	IfStatement	if ( gs_alloc_debug )		5231822	5					
ANR	5232686	Condition	gs_alloc_debug	1244:16:42081:42094	5231822	0	True				
ANR	5232687	Identifier	gs_alloc_debug		5231822	0					
ANR	5232688	ExpressionStatement	"memset ( ( ( byte * ) ltfree ) + SIZEOF_ROUND_ALIGN ( chunk_free_node_t ) , 0x69 , ltfree -> size - SIZEOF_ROUND_ALIGN ( chunk_free_node_t ) )"	1245:16:42113:42237	5231822	1	True				
ANR	5232689	CallExpression	"memset ( ( ( byte * ) ltfree ) + SIZEOF_ROUND_ALIGN ( chunk_free_node_t ) , 0x69 , ltfree -> size - SIZEOF_ROUND_ALIGN ( chunk_free_node_t ) )"		5231822	0					
ANR	5232690	Callee	memset		5231822	0					
ANR	5232691	Identifier	memset		5231822	0					
ANR	5232692	ArgumentList	( ( byte * ) ltfree ) + SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5231822	1					
ANR	5232693	Argument	( ( byte * ) ltfree ) + SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5231822	0					
ANR	5232694	AdditiveExpression	( ( byte * ) ltfree ) + SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5231822	0		+			
ANR	5232695	CastExpression	( byte * ) ltfree		5231822	0					
ANR	5232696	CastTarget	byte *		5231822	0					
ANR	5232697	Identifier	ltfree		5231822	1					
ANR	5232698	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5231822	1					
ANR	5232699	Callee	SIZEOF_ROUND_ALIGN		5231822	0					
ANR	5232700	Identifier	SIZEOF_ROUND_ALIGN		5231822	0					
ANR	5232701	ArgumentList	chunk_free_node_t		5231822	1					
ANR	5232702	Argument	chunk_free_node_t		5231822	0					
ANR	5232703	Identifier	chunk_free_node_t		5231822	0					
ANR	5232704	Argument	0x69		5231822	1					
ANR	5232705	PrimaryExpression	0x69		5231822	0					
ANR	5232706	Argument	ltfree -> size - SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5231822	2					
ANR	5232707	AdditiveExpression	ltfree -> size - SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5231822	0		-			
ANR	5232708	PtrMemberAccess	ltfree -> size		5231822	0					
ANR	5232709	Identifier	ltfree		5231822	0					
ANR	5232710	Identifier	size		5231822	1					
ANR	5232711	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5231822	1					
ANR	5232712	Callee	SIZEOF_ROUND_ALIGN		5231822	0					
ANR	5232713	Identifier	SIZEOF_ROUND_ALIGN		5231822	0					
ANR	5232714	ArgumentList	chunk_free_node_t		5231822	1					
ANR	5232715	Argument	chunk_free_node_t		5231822	0					
ANR	5232716	Identifier	chunk_free_node_t		5231822	0					
ANR	5232717	ExpressionStatement	obj = NULL	1246:12:42251:42261	5231822	6	True				
ANR	5232718	AssignmentExpression	obj = NULL		5231822	0		=			
ANR	5232719	Identifier	obj		5231822	0					
ANR	5232720	Identifier	NULL		5231822	1					
ANR	5232721	IfStatement	if ( gtp && obj )		5231822	23					
ANR	5232722	Condition	gtp && obj	1249:8:42287:42296	5231822	0	True				
ANR	5232723	AndExpression	gtp && obj		5231822	0		&&			
ANR	5232724	Identifier	gtp		5231822	0					
ANR	5232725	Identifier	obj		5231822	1					
ANR	5232726	CompoundStatement		203:8:8033:8088	5231822	1					
ANR	5232727	IdentifierDeclStatement	chunk_free_node_t * gtfree = ( chunk_free_node_t * ) ( * gtp ) ;	1251:8:42384:42439	5231822	0	True				
ANR	5232728	IdentifierDecl	* gtfree = ( chunk_free_node_t * ) ( * gtp )		5231822	0					
ANR	5232729	IdentifierDeclType	chunk_free_node_t *		5231822	0					
ANR	5232730	Identifier	gtfree		5231822	1					
ANR	5232731	AssignmentExpression	* gtfree = ( chunk_free_node_t * ) ( * gtp )		5231822	2		=			
ANR	5232732	Identifier	gtfree		5231822	0					
ANR	5232733	CastExpression	( chunk_free_node_t * ) ( * gtp )		5231822	1					
ANR	5232734	CastTarget	chunk_free_node_t *		5231822	0					
ANR	5232735	UnaryOperationExpression	* gtp		5231822	1					
ANR	5232736	UnaryOperator	*		5231822	0					
ANR	5232737	Identifier	gtp		5231822	1					
ANR	5232738	IfStatement	if ( ( ( ( byte * ) obj ) + obj -> size ) == ( byte * ) ( void * ) gtfree )		5231822	1					
ANR	5232739	Condition	( ( ( byte * ) obj ) + obj -> size ) == ( byte * ) ( void * ) gtfree	1252:12:42453:42505	5231822	0	True				
ANR	5232740	EqualityExpression	( ( ( byte * ) obj ) + obj -> size ) == ( byte * ) ( void * ) gtfree		5231822	0		==			
ANR	5232741	AdditiveExpression	( ( byte * ) obj ) + obj -> size		5231822	0		+			
ANR	5232742	CastExpression	( byte * ) obj		5231822	0					
ANR	5232743	CastTarget	byte *		5231822	0					
ANR	5232744	Identifier	obj		5231822	1					
ANR	5232745	PtrMemberAccess	obj -> size		5231822	1					
ANR	5232746	Identifier	obj		5231822	0					
ANR	5232747	Identifier	size		5231822	1					
ANR	5232748	CastExpression	( byte * ) ( void * ) gtfree		5231822	1					
ANR	5232749	CastTarget	byte *		5231822	0					
ANR	5232750	CastExpression	( void * ) gtfree		5231822	1					
ANR	5232751	CastTarget	void *		5231822	0					
ANR	5232752	Identifier	gtfree		5231822	1					
ANR	5232753	CompoundStatement		207:12:8271:8296	5231822	1					
ANR	5232754	IdentifierDeclStatement	chunk_free_node_t * objfree = ( chunk_free_node_t * ) ( void * ) obj ;	1254:12:42547:42608	5231822	0	True				
ANR	5232755	IdentifierDecl	* objfree = ( chunk_free_node_t * ) ( void * ) obj		5231822	0					
ANR	5232756	IdentifierDeclType	chunk_free_node_t *		5231822	0					
ANR	5232757	Identifier	objfree		5231822	1					
ANR	5232758	AssignmentExpression	* objfree = ( chunk_free_node_t * ) ( void * ) obj		5231822	2		=			
ANR	5232759	Identifier	objfree		5231822	0					
ANR	5232760	CastExpression	( chunk_free_node_t * ) ( void * ) obj		5231822	1					
ANR	5232761	CastTarget	chunk_free_node_t *		5231822	0					
ANR	5232762	CastExpression	( void * ) obj		5231822	1					
ANR	5232763	CastTarget	void *		5231822	0					
ANR	5232764	Identifier	obj		5231822	1					
ANR	5232765	IdentifierDeclStatement	uint obj_size = obj -> size ;	1255:12:42622:42647	5231822	1	True				
ANR	5232766	IdentifierDecl	obj_size = obj -> size		5231822	0					
ANR	5232767	IdentifierDeclType	uint		5231822	0					
ANR	5232768	Identifier	obj_size		5231822	1					
ANR	5232769	AssignmentExpression	obj_size = obj -> size		5231822	2		=			
ANR	5232770	Identifier	obj_size		5231822	0					
ANR	5232771	PtrMemberAccess	obj -> size		5231822	1					
ANR	5232772	Identifier	obj		5231822	0					
ANR	5232773	Identifier	size		5231822	1					
ANR	5232774	ExpressionStatement	cmem -> total_free += obj_size	1256:12:42661:42689	5231822	2	True				
ANR	5232775	AssignmentExpression	cmem -> total_free += obj_size		5231822	0		+=			
ANR	5232776	PtrMemberAccess	cmem -> total_free		5231822	0					
ANR	5232777	Identifier	cmem		5231822	0					
ANR	5232778	Identifier	total_free		5231822	1					
ANR	5232779	Identifier	obj_size		5231822	1					
ANR	5232780	ExpressionStatement	"remove_free_size ( cmem , gtfree )"	1257:12:42703:42733	5231822	3	True				
ANR	5232781	CallExpression	"remove_free_size ( cmem , gtfree )"		5231822	0					
ANR	5232782	Callee	remove_free_size		5231822	0					
ANR	5232783	Identifier	remove_free_size		5231822	0					
ANR	5232784	ArgumentList	cmem		5231822	1					
ANR	5232785	Argument	cmem		5231822	0					
ANR	5232786	Identifier	cmem		5231822	0					
ANR	5232787	Argument	gtfree		5231822	1					
ANR	5232788	Identifier	gtfree		5231822	0					
ANR	5232789	ExpressionStatement	* objfree = * gtfree	1258:12:42747:42765	5231822	4	True				
ANR	5232790	AssignmentExpression	* objfree = * gtfree		5231822	0		=			
ANR	5232791	UnaryOperationExpression	* objfree		5231822	0					
ANR	5232792	UnaryOperator	*		5231822	0					
ANR	5232793	Identifier	objfree		5231822	1					
ANR	5232794	UnaryOperationExpression	* gtfree		5231822	1					
ANR	5232795	UnaryOperator	*		5231822	0					
ANR	5232796	Identifier	gtfree		5231822	1					
ANR	5232797	ExpressionStatement	objfree -> size += obj_size	1259:12:42779:42804	5231822	5	True				
ANR	5232798	AssignmentExpression	objfree -> size += obj_size		5231822	0		+=			
ANR	5232799	PtrMemberAccess	objfree -> size		5231822	0					
ANR	5232800	Identifier	objfree		5231822	0					
ANR	5232801	Identifier	size		5231822	1					
ANR	5232802	Identifier	obj_size		5231822	1					
ANR	5232803	ExpressionStatement	* gtp = objfree	1260:12:42818:42832	5231822	6	True				
ANR	5232804	AssignmentExpression	* gtp = objfree		5231822	0		=			
ANR	5232805	UnaryOperationExpression	* gtp		5231822	0					
ANR	5232806	UnaryOperator	*		5231822	0					
ANR	5232807	Identifier	gtp		5231822	1					
ANR	5232808	Identifier	objfree		5231822	1					
ANR	5232809	ExpressionStatement	"insert_free_size ( cmem , objfree )"	1261:12:42846:42877	5231822	7	True				
ANR	5232810	CallExpression	"insert_free_size ( cmem , objfree )"		5231822	0					
ANR	5232811	Callee	insert_free_size		5231822	0					
ANR	5232812	Identifier	insert_free_size		5231822	0					
ANR	5232813	ArgumentList	cmem		5231822	1					
ANR	5232814	Argument	cmem		5231822	0					
ANR	5232815	Identifier	cmem		5231822	0					
ANR	5232816	Argument	objfree		5231822	1					
ANR	5232817	Identifier	objfree		5231822	0					
ANR	5232818	IfStatement	if ( gs_alloc_debug )		5231822	8					
ANR	5232819	Condition	gs_alloc_debug	1262:16:42895:42908	5231822	0	True				
ANR	5232820	Identifier	gs_alloc_debug		5231822	0					
ANR	5232821	ExpressionStatement	"memset ( ( ( byte * ) objfree ) + SIZEOF_ROUND_ALIGN ( chunk_free_node_t ) , 0x96 , objfree -> size - SIZEOF_ROUND_ALIGN ( chunk_free_node_t ) )"	1263:16:42927:43053	5231822	1	True				
ANR	5232822	CallExpression	"memset ( ( ( byte * ) objfree ) + SIZEOF_ROUND_ALIGN ( chunk_free_node_t ) , 0x96 , objfree -> size - SIZEOF_ROUND_ALIGN ( chunk_free_node_t ) )"		5231822	0					
ANR	5232823	Callee	memset		5231822	0					
ANR	5232824	Identifier	memset		5231822	0					
ANR	5232825	ArgumentList	( ( byte * ) objfree ) + SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5231822	1					
ANR	5232826	Argument	( ( byte * ) objfree ) + SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5231822	0					
ANR	5232827	AdditiveExpression	( ( byte * ) objfree ) + SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5231822	0		+			
ANR	5232828	CastExpression	( byte * ) objfree		5231822	0					
ANR	5232829	CastTarget	byte *		5231822	0					
ANR	5232830	Identifier	objfree		5231822	1					
ANR	5232831	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5231822	1					
ANR	5232832	Callee	SIZEOF_ROUND_ALIGN		5231822	0					
ANR	5232833	Identifier	SIZEOF_ROUND_ALIGN		5231822	0					
ANR	5232834	ArgumentList	chunk_free_node_t		5231822	1					
ANR	5232835	Argument	chunk_free_node_t		5231822	0					
ANR	5232836	Identifier	chunk_free_node_t		5231822	0					
ANR	5232837	Argument	0x96		5231822	1					
ANR	5232838	PrimaryExpression	0x96		5231822	0					
ANR	5232839	Argument	objfree -> size - SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5231822	2					
ANR	5232840	AdditiveExpression	objfree -> size - SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5231822	0		-			
ANR	5232841	PtrMemberAccess	objfree -> size		5231822	0					
ANR	5232842	Identifier	objfree		5231822	0					
ANR	5232843	Identifier	size		5231822	1					
ANR	5232844	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5231822	1					
ANR	5232845	Callee	SIZEOF_ROUND_ALIGN		5231822	0					
ANR	5232846	Identifier	SIZEOF_ROUND_ALIGN		5231822	0					
ANR	5232847	ArgumentList	chunk_free_node_t		5231822	1					
ANR	5232848	Argument	chunk_free_node_t		5231822	0					
ANR	5232849	Identifier	chunk_free_node_t		5231822	0					
ANR	5232850	ExpressionStatement	obj = NULL	1264:12:43067:43077	5231822	9	True				
ANR	5232851	AssignmentExpression	obj = NULL		5231822	0		=			
ANR	5232852	Identifier	obj		5231822	0					
ANR	5232853	Identifier	NULL		5231822	1					
ANR	5232854	IfStatement	if ( obj )		5231822	24					
ANR	5232855	Condition	obj	1268:8:43104:43106	5231822	0	True				
ANR	5232856	Identifier	obj		5231822	0					
ANR	5232857	CompoundStatement		222:8:8797:8858	5231822	1					
ANR	5232858	IdentifierDeclStatement	chunk_free_node_t * objfree = ( chunk_free_node_t * ) ( void * ) obj ;	1270:8:43148:43209	5231822	0	True				
ANR	5232859	IdentifierDecl	* objfree = ( chunk_free_node_t * ) ( void * ) obj		5231822	0					
ANR	5232860	IdentifierDeclType	chunk_free_node_t *		5231822	0					
ANR	5232861	Identifier	objfree		5231822	1					
ANR	5232862	AssignmentExpression	* objfree = ( chunk_free_node_t * ) ( void * ) obj		5231822	2		=			
ANR	5232863	Identifier	objfree		5231822	0					
ANR	5232864	CastExpression	( chunk_free_node_t * ) ( void * ) obj		5231822	1					
ANR	5232865	CastTarget	chunk_free_node_t *		5231822	0					
ANR	5232866	CastExpression	( void * ) obj		5231822	1					
ANR	5232867	CastTarget	void *		5231822	0					
ANR	5232868	Identifier	obj		5231822	1					
ANR	5232869	ExpressionStatement	cmem -> total_free += obj -> size	1271:8:43219:43248	5231822	1	True				
ANR	5232870	AssignmentExpression	cmem -> total_free += obj -> size		5231822	0		+=			
ANR	5232871	PtrMemberAccess	cmem -> total_free		5231822	0					
ANR	5232872	Identifier	cmem		5231822	0					
ANR	5232873	Identifier	total_free		5231822	1					
ANR	5232874	PtrMemberAccess	obj -> size		5231822	1					
ANR	5232875	Identifier	obj		5231822	0					
ANR	5232876	Identifier	size		5231822	1					
ANR	5232877	ExpressionStatement	objfree -> size = obj -> size	1272:8:43258:43283	5231822	2	True				
ANR	5232878	AssignmentExpression	objfree -> size = obj -> size		5231822	0		=			
ANR	5232879	PtrMemberAccess	objfree -> size		5231822	0					
ANR	5232880	Identifier	objfree		5231822	0					
ANR	5232881	Identifier	size		5231822	1					
ANR	5232882	PtrMemberAccess	obj -> size		5231822	1					
ANR	5232883	Identifier	obj		5231822	0					
ANR	5232884	Identifier	size		5231822	1					
ANR	5232885	ExpressionStatement	objfree -> left_loc = NULL	1273:8:43293:43317	5231822	3	True				
ANR	5232886	AssignmentExpression	objfree -> left_loc = NULL		5231822	0		=			
ANR	5232887	PtrMemberAccess	objfree -> left_loc		5231822	0					
ANR	5232888	Identifier	objfree		5231822	0					
ANR	5232889	Identifier	left_loc		5231822	1					
ANR	5232890	Identifier	NULL		5231822	1					
ANR	5232891	ExpressionStatement	objfree -> right_loc = NULL	1274:8:43327:43352	5231822	4	True				
ANR	5232892	AssignmentExpression	objfree -> right_loc = NULL		5231822	0		=			
ANR	5232893	PtrMemberAccess	objfree -> right_loc		5231822	0					
ANR	5232894	Identifier	objfree		5231822	0					
ANR	5232895	Identifier	right_loc		5231822	1					
ANR	5232896	Identifier	NULL		5231822	1					
ANR	5232897	IfStatement	if ( gtp )		5231822	5					
ANR	5232898	Condition	gtp	1275:12:43366:43368	5231822	0	True				
ANR	5232899	Identifier	gtp		5231822	0					
ANR	5232900	CompoundStatement		227:17:9020:9020	5231822	1					
ANR	5232901	ExpressionStatement	ap = & ( * gtp ) -> left_loc	1276:12:43385:43407	5231822	0	True				
ANR	5232902	AssignmentExpression	ap = & ( * gtp ) -> left_loc		5231822	0		=			
ANR	5232903	Identifier	ap		5231822	0					
ANR	5232904	UnaryOperationExpression	& ( * gtp ) -> left_loc		5231822	1					
ANR	5232905	UnaryOperator	&		5231822	0					
ANR	5232906	PtrMemberAccess	( * gtp ) -> left_loc		5231822	1					
ANR	5232907	UnaryOperationExpression	* gtp		5231822	0					
ANR	5232908	UnaryOperator	*		5231822	0					
ANR	5232909	Identifier	gtp		5231822	1					
ANR	5232910	Identifier	left_loc		5231822	1					
ANR	5232911	WhileStatement	while ( * ap )		5231822	1					
ANR	5232912	Condition	* ap	1277:19:43428:43430	5231822	0	True				
ANR	5232913	UnaryOperationExpression	* ap		5231822	0					
ANR	5232914	UnaryOperator	*		5231822	0					
ANR	5232915	Identifier	ap		5231822	1					
ANR	5232916	CompoundStatement		229:24:9082:9082	5231822	1					
ANR	5232917	ExpressionStatement	ap = & ( * ap ) -> right_loc	1278:16:43451:43473	5231822	0	True				
ANR	5232918	AssignmentExpression	ap = & ( * ap ) -> right_loc		5231822	0		=			
ANR	5232919	Identifier	ap		5231822	0					
ANR	5232920	UnaryOperationExpression	& ( * ap ) -> right_loc		5231822	1					
ANR	5232921	UnaryOperator	&		5231822	0					
ANR	5232922	PtrMemberAccess	( * ap ) -> right_loc		5231822	1					
ANR	5232923	UnaryOperationExpression	* ap		5231822	0					
ANR	5232924	UnaryOperator	*		5231822	0					
ANR	5232925	Identifier	ap		5231822	1					
ANR	5232926	Identifier	right_loc		5231822	1					
ANR	5232927	ElseStatement	else		5231822	0					
ANR	5232928	IfStatement	if ( ltp )		5231822	0					
ANR	5232929	Condition	ltp	1280:19:43508:43510	5231822	0	True				
ANR	5232930	Identifier	ltp		5231822	0					
ANR	5232931	CompoundStatement		232:24:9162:9162	5231822	1					
ANR	5232932	ExpressionStatement	ap = & ( * ltp ) -> right_loc	1281:12:43527:43550	5231822	0	True				
ANR	5232933	AssignmentExpression	ap = & ( * ltp ) -> right_loc		5231822	0		=			
ANR	5232934	Identifier	ap		5231822	0					
ANR	5232935	UnaryOperationExpression	& ( * ltp ) -> right_loc		5231822	1					
ANR	5232936	UnaryOperator	&		5231822	0					
ANR	5232937	PtrMemberAccess	( * ltp ) -> right_loc		5231822	1					
ANR	5232938	UnaryOperationExpression	* ltp		5231822	0					
ANR	5232939	UnaryOperator	*		5231822	0					
ANR	5232940	Identifier	ltp		5231822	1					
ANR	5232941	Identifier	right_loc		5231822	1					
ANR	5232942	WhileStatement	while ( * ap )		5231822	1					
ANR	5232943	Condition	* ap	1282:19:43571:43573	5231822	0	True				
ANR	5232944	UnaryOperationExpression	* ap		5231822	0					
ANR	5232945	UnaryOperator	*		5231822	0					
ANR	5232946	Identifier	ap		5231822	1					
ANR	5232947	CompoundStatement		234:24:9225:9225	5231822	1					
ANR	5232948	ExpressionStatement	ap = & ( * ap ) -> left_loc	1283:16:43594:43615	5231822	0	True				
ANR	5232949	AssignmentExpression	ap = & ( * ap ) -> left_loc		5231822	0		=			
ANR	5232950	Identifier	ap		5231822	0					
ANR	5232951	UnaryOperationExpression	& ( * ap ) -> left_loc		5231822	1					
ANR	5232952	UnaryOperator	&		5231822	0					
ANR	5232953	PtrMemberAccess	( * ap ) -> left_loc		5231822	1					
ANR	5232954	UnaryOperationExpression	* ap		5231822	0					
ANR	5232955	UnaryOperator	*		5231822	0					
ANR	5232956	Identifier	ap		5231822	1					
ANR	5232957	Identifier	left_loc		5231822	1					
ANR	5232958	ElseStatement	else		5231822	0					
ANR	5232959	ExpressionStatement	ap = & cmem -> free_loc	1286:12:43658:43678	5231822	0	True				
ANR	5232960	AssignmentExpression	ap = & cmem -> free_loc		5231822	0		=			
ANR	5232961	Identifier	ap		5231822	0					
ANR	5232962	UnaryOperationExpression	& cmem -> free_loc		5231822	1					
ANR	5232963	UnaryOperator	&		5231822	0					
ANR	5232964	PtrMemberAccess	cmem -> free_loc		5231822	1					
ANR	5232965	Identifier	cmem		5231822	0					
ANR	5232966	Identifier	free_loc		5231822	1					
ANR	5232967	ExpressionStatement	* ap = objfree	1287:8:43688:43701	5231822	6	True				
ANR	5232968	AssignmentExpression	* ap = objfree		5231822	0		=			
ANR	5232969	UnaryOperationExpression	* ap		5231822	0					
ANR	5232970	UnaryOperator	*		5231822	0					
ANR	5232971	Identifier	ap		5231822	1					
ANR	5232972	Identifier	objfree		5231822	1					
ANR	5232973	ExpressionStatement	"insert_free_size ( cmem , objfree )"	1288:8:43711:43742	5231822	7	True				
ANR	5232974	CallExpression	"insert_free_size ( cmem , objfree )"		5231822	0					
ANR	5232975	Callee	insert_free_size		5231822	0					
ANR	5232976	Identifier	insert_free_size		5231822	0					
ANR	5232977	ArgumentList	cmem		5231822	1					
ANR	5232978	Argument	cmem		5231822	0					
ANR	5232979	Identifier	cmem		5231822	0					
ANR	5232980	Argument	objfree		5231822	1					
ANR	5232981	Identifier	objfree		5231822	0					
ANR	5232982	IfStatement	if ( gs_alloc_debug )		5231822	8					
ANR	5232983	Condition	gs_alloc_debug	1289:12:43756:43769	5231822	0	True				
ANR	5232984	Identifier	gs_alloc_debug		5231822	0					
ANR	5232985	ExpressionStatement	"memset ( ( ( byte * ) objfree ) + SIZEOF_ROUND_ALIGN ( chunk_free_node_t ) , 0x9b , objfree -> size - SIZEOF_ROUND_ALIGN ( chunk_free_node_t ) )"	1290:12:43784:43910	5231822	1	True				
ANR	5232986	CallExpression	"memset ( ( ( byte * ) objfree ) + SIZEOF_ROUND_ALIGN ( chunk_free_node_t ) , 0x9b , objfree -> size - SIZEOF_ROUND_ALIGN ( chunk_free_node_t ) )"		5231822	0					
ANR	5232987	Callee	memset		5231822	0					
ANR	5232988	Identifier	memset		5231822	0					
ANR	5232989	ArgumentList	( ( byte * ) objfree ) + SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5231822	1					
ANR	5232990	Argument	( ( byte * ) objfree ) + SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5231822	0					
ANR	5232991	AdditiveExpression	( ( byte * ) objfree ) + SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5231822	0		+			
ANR	5232992	CastExpression	( byte * ) objfree		5231822	0					
ANR	5232993	CastTarget	byte *		5231822	0					
ANR	5232994	Identifier	objfree		5231822	1					
ANR	5232995	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5231822	1					
ANR	5232996	Callee	SIZEOF_ROUND_ALIGN		5231822	0					
ANR	5232997	Identifier	SIZEOF_ROUND_ALIGN		5231822	0					
ANR	5232998	ArgumentList	chunk_free_node_t		5231822	1					
ANR	5232999	Argument	chunk_free_node_t		5231822	0					
ANR	5233000	Identifier	chunk_free_node_t		5231822	0					
ANR	5233001	Argument	0x9b		5231822	1					
ANR	5233002	PrimaryExpression	0x9b		5231822	0					
ANR	5233003	Argument	objfree -> size - SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5231822	2					
ANR	5233004	AdditiveExpression	objfree -> size - SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5231822	0		-			
ANR	5233005	PtrMemberAccess	objfree -> size		5231822	0					
ANR	5233006	Identifier	objfree		5231822	0					
ANR	5233007	Identifier	size		5231822	1					
ANR	5233008	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_free_node_t )		5231822	1					
ANR	5233009	Callee	SIZEOF_ROUND_ALIGN		5231822	0					
ANR	5233010	Identifier	SIZEOF_ROUND_ALIGN		5231822	0					
ANR	5233011	ArgumentList	chunk_free_node_t		5231822	1					
ANR	5233012	Argument	chunk_free_node_t		5231822	0					
ANR	5233013	Identifier	chunk_free_node_t		5231822	0					
ANR	5233014	ExpressionStatement	gs_memory_chunk_dump_memory ( cmem )	1294:4:43942:43975	5231822	25	True				
ANR	5233015	CallExpression	gs_memory_chunk_dump_memory ( cmem )		5231822	0					
ANR	5233016	Callee	gs_memory_chunk_dump_memory		5231822	0					
ANR	5233017	Identifier	gs_memory_chunk_dump_memory		5231822	0					
ANR	5233018	ArgumentList	cmem		5231822	1					
ANR	5233019	Argument	cmem		5231822	0					
ANR	5233020	Identifier	cmem		5231822	0					
ANR	5233021	ReturnType	static void		5231822	1					
ANR	5233022	Identifier	chunk_free_object		5231822	2					
ANR	5233023	ParameterList	"gs_memory_t * mem , void * ptr , client_name_t cname"		5231822	3					
ANR	5233024	Parameter	gs_memory_t * mem	1048:18:34300:34315	5231822	0	True				
ANR	5233025	ParameterType	gs_memory_t *		5231822	0					
ANR	5233026	Identifier	mem		5231822	1					
ANR	5233027	Parameter	void * ptr	1048:36:34318:34326	5231822	1	True				
ANR	5233028	ParameterType	void *		5231822	0					
ANR	5233029	Identifier	ptr		5231822	1					
ANR	5233030	Parameter	client_name_t cname	1048:47:34329:34347	5231822	2	True				
ANR	5233031	ParameterType	client_name_t		5231822	0					
ANR	5233032	Identifier	cname		5231822	1					
ANR	5233033	CFGEntryNode	ENTRY		5231822		True				
ANR	5233034	CFGExitNode	EXIT		5231822		True				
ANR	5233035	Symbol	b -> left_loc		5231822						
ANR	5233036	Symbol	* gtfree		5231822						
ANR	5233037	Symbol	& b -> right_loc		5231822						
ANR	5233038	Symbol	c -> left_loc		5231822						
ANR	5233039	Symbol	ltfree -> size		5231822						
ANR	5233040	Symbol	gs_alloc_debug		5231822						
ANR	5233041	Symbol	chunk_free_node_t		5231822						
ANR	5233042	Symbol	gtfree		5231822						
ANR	5233043	Symbol	cmem -> sequence		5231822						
ANR	5233044	Symbol	a -> left_loc		5231822						
ANR	5233045	Symbol	SINGLE_OBJECT_CHUNK		5231822						
ANR	5233046	Symbol	* ltp		5231822						
ANR	5233047	Symbol	objfree -> size		5231822						
ANR	5233048	Symbol	& ( * ltp ) -> right_loc		5231822						
ANR	5233049	Symbol	* objfree		5231822						
ANR	5233050	Symbol	objfree -> left_loc		5231822						
ANR	5233051	Symbol	* obj -> type		5231822						
ANR	5233052	Symbol	& ( * ap ) -> right_loc		5231822						
ANR	5233053	Symbol	obj -> type		5231822						
ANR	5233054	Symbol	gtp		5231822						
ANR	5233055	Symbol	cmem -> defer_finalize_list		5231822						
ANR	5233056	Symbol	NULL		5231822						
ANR	5233057	Symbol	objfree -> right_loc		5231822						
ANR	5233058	Symbol	ltfree		5231822						
ANR	5233059	Symbol	* finalize		5231822						
ANR	5233060	Symbol	ap		5231822						
ANR	5233061	Symbol	& ( * ap ) -> left_loc		5231822						
ANR	5233062	Symbol	SIZEOF_ROUND_ALIGN		5231822						
ANR	5233063	Symbol	client_name_string		5231822						
ANR	5233064	Symbol	cmem		5231822						
ANR	5233065	Symbol	* ltfree		5231822						
ANR	5233066	Symbol	& cmem -> free_loc		5231822						
ANR	5233067	Symbol	& ( * gtp ) -> left_loc		5231822						
ANR	5233068	Symbol	& c -> right_loc		5231822						
ANR	5233069	Symbol	& c -> left_loc		5231822						
ANR	5233070	Symbol	cname		5231822						
ANR	5233071	Symbol	cmem -> total_free		5231822						
ANR	5233072	Symbol	* * obj		5231822						
ANR	5233073	Symbol	& a -> right_loc		5231822						
ANR	5233074	Symbol	obj_node_size		5231822						
ANR	5233075	Symbol	mem		5231822						
ANR	5233076	Symbol	* cmem		5231822						
ANR	5233077	Symbol	chunk_obj_node_t		5231822						
ANR	5233078	Symbol	cmem -> deferring		5231822						
ANR	5233079	Symbol	cmem -> target		5231822						
ANR	5233080	Symbol	obj -> sequence		5231822						
ANR	5233081	Symbol	gtfree -> size		5231822						
ANR	5233082	Symbol	obj_size		5231822						
ANR	5233083	Symbol	obj -> type -> finalize		5231822						
ANR	5233084	Symbol	a		5231822						
ANR	5233085	Symbol	* obj		5231822						
ANR	5233086	Symbol	b		5231822						
ANR	5233087	Symbol	obj -> padding		5231822						
ANR	5233088	Symbol	c		5231822						
ANR	5233089	Symbol	c -> right_loc		5231822						
ANR	5233090	Symbol	obj -> size		5231822						
ANR	5233091	Symbol	ltp		5231822						
ANR	5233092	Symbol	* a		5231822						
ANR	5233093	Symbol	* b		5231822						
ANR	5233094	Symbol	* c		5231822						
ANR	5233095	Symbol	ptr		5231822						
ANR	5233096	Symbol	obj -> defer_next		5231822						
ANR	5233097	Symbol	* gtp		5231822						
ANR	5233098	Symbol	obj		5231822						
ANR	5233099	Symbol	* ap		5231822						
ANR	5233100	Symbol	objfree		5231822						
ANR	5233101	Symbol	finalize		5231822						
ANR	5233102	Symbol	& b -> left_loc		5231822						
ANR	5233103	Symbol	b -> right_loc		5231822						
ANR	5233104	Symbol	a -> right_loc		5231822						
ANR	5233105	Symbol	& a -> left_loc		5231822						
ANR	5233106	Function	chunk_alloc_string_immovable	1298:0:43987:44170							
ANR	5233107	FunctionDef	"chunk_alloc_string_immovable (gs_memory_t * mem , uint nbytes , client_name_t cname)"		5233106	0					
ANR	5233108	CompoundStatement		1300:0:44083:44170	5233106	0					
ANR	5233109	ReturnStatement	"return chunk_alloc_bytes ( mem , nbytes , cname ) ;"	1302:4:44124:44168	5233106	0	True				
ANR	5233110	CallExpression	"chunk_alloc_bytes ( mem , nbytes , cname )"		5233106	0					
ANR	5233111	Callee	chunk_alloc_bytes		5233106	0					
ANR	5233112	Identifier	chunk_alloc_bytes		5233106	0					
ANR	5233113	ArgumentList	mem		5233106	1					
ANR	5233114	Argument	mem		5233106	0					
ANR	5233115	Identifier	mem		5233106	0					
ANR	5233116	Argument	nbytes		5233106	1					
ANR	5233117	Identifier	nbytes		5233106	0					
ANR	5233118	Argument	cname		5233106	2					
ANR	5233119	Identifier	cname		5233106	0					
ANR	5233120	ReturnType	static byte *		5233106	1					
ANR	5233121	Identifier	chunk_alloc_string_immovable		5233106	2					
ANR	5233122	ParameterList	"gs_memory_t * mem , uint nbytes , client_name_t cname"		5233106	3					
ANR	5233123	Parameter	gs_memory_t * mem	1299:29:44030:44046	5233106	0	True				
ANR	5233124	ParameterType	gs_memory_t *		5233106	0					
ANR	5233125	Identifier	mem		5233106	1					
ANR	5233126	Parameter	uint nbytes	1299:48:44049:44059	5233106	1	True				
ANR	5233127	ParameterType	uint		5233106	0					
ANR	5233128	Identifier	nbytes		5233106	1					
ANR	5233129	Parameter	client_name_t cname	1299:61:44062:44080	5233106	2	True				
ANR	5233130	ParameterType	client_name_t		5233106	0					
ANR	5233131	Identifier	cname		5233106	1					
ANR	5233132	CFGEntryNode	ENTRY		5233106		True				
ANR	5233133	CFGExitNode	EXIT		5233106		True				
ANR	5233134	Symbol	chunk_alloc_bytes		5233106						
ANR	5233135	Symbol	mem		5233106						
ANR	5233136	Symbol	cname		5233106						
ANR	5233137	Symbol	nbytes		5233106						
ANR	5233138	Function	chunk_alloc_string	1305:0:44173:44346							
ANR	5233139	FunctionDef	"chunk_alloc_string (gs_memory_t * mem , uint nbytes , client_name_t cname)"		5233138	0					
ANR	5233140	CompoundStatement		1307:0:44259:44346	5233138	0					
ANR	5233141	ReturnStatement	"return chunk_alloc_bytes ( mem , nbytes , cname ) ;"	1309:4:44300:44344	5233138	0	True				
ANR	5233142	CallExpression	"chunk_alloc_bytes ( mem , nbytes , cname )"		5233138	0					
ANR	5233143	Callee	chunk_alloc_bytes		5233138	0					
ANR	5233144	Identifier	chunk_alloc_bytes		5233138	0					
ANR	5233145	ArgumentList	mem		5233138	1					
ANR	5233146	Argument	mem		5233138	0					
ANR	5233147	Identifier	mem		5233138	0					
ANR	5233148	Argument	nbytes		5233138	1					
ANR	5233149	Identifier	nbytes		5233138	0					
ANR	5233150	Argument	cname		5233138	2					
ANR	5233151	Identifier	cname		5233138	0					
ANR	5233152	ReturnType	static byte *		5233138	1					
ANR	5233153	Identifier	chunk_alloc_string		5233138	2					
ANR	5233154	ParameterList	"gs_memory_t * mem , uint nbytes , client_name_t cname"		5233138	3					
ANR	5233155	Parameter	gs_memory_t * mem	1306:19:44206:44222	5233138	0	True				
ANR	5233156	ParameterType	gs_memory_t *		5233138	0					
ANR	5233157	Identifier	mem		5233138	1					
ANR	5233158	Parameter	uint nbytes	1306:38:44225:44235	5233138	1	True				
ANR	5233159	ParameterType	uint		5233138	0					
ANR	5233160	Identifier	nbytes		5233138	1					
ANR	5233161	Parameter	client_name_t cname	1306:51:44238:44256	5233138	2	True				
ANR	5233162	ParameterType	client_name_t		5233138	0					
ANR	5233163	Identifier	cname		5233138	1					
ANR	5233164	CFGEntryNode	ENTRY		5233138		True				
ANR	5233165	CFGExitNode	EXIT		5233138		True				
ANR	5233166	Symbol	chunk_alloc_bytes		5233138						
ANR	5233167	Symbol	mem		5233138						
ANR	5233168	Symbol	cname		5233138						
ANR	5233169	Symbol	nbytes		5233138						
ANR	5233170	Function	chunk_resize_string	1312:0:44349:44588							
ANR	5233171	FunctionDef	"chunk_resize_string (gs_memory_t * mem , byte * data , uint old_num , uint new_num , client_name_t cname)"		5233170	0					
ANR	5233172	CompoundStatement		1315:0:44480:44588	5233170	0					
ANR	5233173	ReturnStatement	"return chunk_resize_object ( mem , data , new_num , cname ) ;"	1317:4:44533:44586	5233170	0	True				
ANR	5233174	CallExpression	"chunk_resize_object ( mem , data , new_num , cname )"		5233170	0					
ANR	5233175	Callee	chunk_resize_object		5233170	0					
ANR	5233176	Identifier	chunk_resize_object		5233170	0					
ANR	5233177	ArgumentList	mem		5233170	1					
ANR	5233178	Argument	mem		5233170	0					
ANR	5233179	Identifier	mem		5233170	0					
ANR	5233180	Argument	data		5233170	1					
ANR	5233181	Identifier	data		5233170	0					
ANR	5233182	Argument	new_num		5233170	2					
ANR	5233183	Identifier	new_num		5233170	0					
ANR	5233184	Argument	cname		5233170	3					
ANR	5233185	Identifier	cname		5233170	0					
ANR	5233186	ReturnType	static byte *		5233170	1					
ANR	5233187	Identifier	chunk_resize_string		5233170	2					
ANR	5233188	ParameterList	"gs_memory_t * mem , byte * data , uint old_num , uint new_num , client_name_t cname"		5233170	3					
ANR	5233189	Parameter	gs_memory_t * mem	1313:20:44383:44399	5233170	0	True				
ANR	5233190	ParameterType	gs_memory_t *		5233170	0					
ANR	5233191	Identifier	mem		5233170	1					
ANR	5233192	Parameter	byte * data	1313:39:44402:44412	5233170	1	True				
ANR	5233193	ParameterType	byte *		5233170	0					
ANR	5233194	Identifier	data		5233170	1					
ANR	5233195	Parameter	uint old_num	1313:52:44415:44426	5233170	2	True				
ANR	5233196	ParameterType	uint		5233170	0					
ANR	5233197	Identifier	old_num		5233170	1					
ANR	5233198	Parameter	uint new_num	1313:66:44429:44440	5233170	3	True				
ANR	5233199	ParameterType	uint		5233170	0					
ANR	5233200	Identifier	new_num		5233170	1					
ANR	5233201	Parameter	client_name_t cname	1314:16:44459:44477	5233170	4	True				
ANR	5233202	ParameterType	client_name_t		5233170	0					
ANR	5233203	Identifier	cname		5233170	1					
ANR	5233204	CFGEntryNode	ENTRY		5233170		True				
ANR	5233205	CFGExitNode	EXIT		5233170		True				
ANR	5233206	Symbol	chunk_resize_object		5233170						
ANR	5233207	Symbol	old_num		5233170						
ANR	5233208	Symbol	mem		5233170						
ANR	5233209	Symbol	data		5233170						
ANR	5233210	Symbol	new_num		5233170						
ANR	5233211	Symbol	cname		5233170						
ANR	5233212	Function	chunk_free_string	1320:0:44591:44744							
ANR	5233213	FunctionDef	"chunk_free_string (gs_memory_t * mem , byte * data , uint nbytes , client_name_t cname)"		5233212	0					
ANR	5233214	CompoundStatement		1323:0:44701:44744	5233212	0					
ANR	5233215	ExpressionStatement	"chunk_free_object ( mem , data , cname )"	1324:4:44707:44742	5233212	0	True				
ANR	5233216	CallExpression	"chunk_free_object ( mem , data , cname )"		5233212	0					
ANR	5233217	Callee	chunk_free_object		5233212	0					
ANR	5233218	Identifier	chunk_free_object		5233212	0					
ANR	5233219	ArgumentList	mem		5233212	1					
ANR	5233220	Argument	mem		5233212	0					
ANR	5233221	Identifier	mem		5233212	0					
ANR	5233222	Argument	data		5233212	1					
ANR	5233223	Identifier	data		5233212	0					
ANR	5233224	Argument	cname		5233212	2					
ANR	5233225	Identifier	cname		5233212	0					
ANR	5233226	ReturnType	static void		5233212	1					
ANR	5233227	Identifier	chunk_free_string		5233212	2					
ANR	5233228	ParameterList	"gs_memory_t * mem , byte * data , uint nbytes , client_name_t cname"		5233212	3					
ANR	5233229	Parameter	gs_memory_t * mem	1321:18:44621:44637	5233212	0	True				
ANR	5233230	ParameterType	gs_memory_t *		5233212	0					
ANR	5233231	Identifier	mem		5233212	1					
ANR	5233232	Parameter	byte * data	1321:37:44640:44650	5233212	1	True				
ANR	5233233	ParameterType	byte *		5233212	0					
ANR	5233234	Identifier	data		5233212	1					
ANR	5233235	Parameter	uint nbytes	1321:50:44653:44663	5233212	2	True				
ANR	5233236	ParameterType	uint		5233212	0					
ANR	5233237	Identifier	nbytes		5233212	1					
ANR	5233238	Parameter	client_name_t cname	1322:14:44680:44698	5233212	3	True				
ANR	5233239	ParameterType	client_name_t		5233212	0					
ANR	5233240	Identifier	cname		5233212	1					
ANR	5233241	CFGEntryNode	ENTRY		5233212		True				
ANR	5233242	CFGExitNode	EXIT		5233212		True				
ANR	5233243	Symbol	mem		5233212						
ANR	5233244	Symbol	data		5233212						
ANR	5233245	Symbol	cname		5233212						
ANR	5233246	Symbol	nbytes		5233212						
ANR	5233247	Function	chunk_status	1327:0:44747:45088							
ANR	5233248	FunctionDef	"chunk_status (gs_memory_t * mem , gs_memory_status_t * pstat)"		5233247	0					
ANR	5233249	CompoundStatement		1329:0:44819:45088	5233247	0					
ANR	5233250	IdentifierDeclStatement	gs_memory_chunk_t * cmem = ( gs_memory_chunk_t * ) mem ;	1330:4:44825:44875	5233247	0	True				
ANR	5233251	IdentifierDecl	* cmem = ( gs_memory_chunk_t * ) mem		5233247	0					
ANR	5233252	IdentifierDeclType	gs_memory_chunk_t *		5233247	0					
ANR	5233253	Identifier	cmem		5233247	1					
ANR	5233254	AssignmentExpression	* cmem = ( gs_memory_chunk_t * ) mem		5233247	2		=			
ANR	5233255	Identifier	cmem		5233247	0					
ANR	5233256	CastExpression	( gs_memory_chunk_t * ) mem		5233247	1					
ANR	5233257	CastTarget	gs_memory_chunk_t *		5233247	0					
ANR	5233258	Identifier	mem		5233247	1					
ANR	5233259	ExpressionStatement	pstat -> allocated = cmem -> used	1332:4:44882:44911	5233247	1	True				
ANR	5233260	AssignmentExpression	pstat -> allocated = cmem -> used		5233247	0		=			
ANR	5233261	PtrMemberAccess	pstat -> allocated		5233247	0					
ANR	5233262	Identifier	pstat		5233247	0					
ANR	5233263	Identifier	allocated		5233247	1					
ANR	5233264	PtrMemberAccess	cmem -> used		5233247	1					
ANR	5233265	Identifier	cmem		5233247	0					
ANR	5233266	Identifier	used		5233247	1					
ANR	5233267	ExpressionStatement	pstat -> used = cmem -> used - cmem -> total_free	1333:4:44917:44960	5233247	2	True				
ANR	5233268	AssignmentExpression	pstat -> used = cmem -> used - cmem -> total_free		5233247	0		=			
ANR	5233269	PtrMemberAccess	pstat -> used		5233247	0					
ANR	5233270	Identifier	pstat		5233247	0					
ANR	5233271	Identifier	used		5233247	1					
ANR	5233272	AdditiveExpression	cmem -> used - cmem -> total_free		5233247	1		-			
ANR	5233273	PtrMemberAccess	cmem -> used		5233247	0					
ANR	5233274	Identifier	cmem		5233247	0					
ANR	5233275	Identifier	used		5233247	1					
ANR	5233276	PtrMemberAccess	cmem -> total_free		5233247	1					
ANR	5233277	Identifier	cmem		5233247	0					
ANR	5233278	Identifier	total_free		5233247	1					
ANR	5233279	ExpressionStatement	pstat -> max_used = cmem -> max_used	1334:4:44966:44998	5233247	3	True				
ANR	5233280	AssignmentExpression	pstat -> max_used = cmem -> max_used		5233247	0		=			
ANR	5233281	PtrMemberAccess	pstat -> max_used		5233247	0					
ANR	5233282	Identifier	pstat		5233247	0					
ANR	5233283	Identifier	max_used		5233247	1					
ANR	5233284	PtrMemberAccess	cmem -> max_used		5233247	1					
ANR	5233285	Identifier	cmem		5233247	0					
ANR	5233286	Identifier	max_used		5233247	1					
ANR	5233287	ExpressionStatement	pstat -> is_thread_safe = false	1335:4:45004:45033	5233247	4	True				
ANR	5233288	AssignmentExpression	pstat -> is_thread_safe = false		5233247	0		=			
ANR	5233289	PtrMemberAccess	pstat -> is_thread_safe		5233247	0					
ANR	5233290	Identifier	pstat		5233247	0					
ANR	5233291	Identifier	is_thread_safe		5233247	1					
ANR	5233292	Identifier	false		5233247	1					
ANR	5233293	ReturnType	static void		5233247	1					
ANR	5233294	Identifier	chunk_status		5233247	2					
ANR	5233295	ParameterList	"gs_memory_t * mem , gs_memory_status_t * pstat"		5233247	3					
ANR	5233296	Parameter	gs_memory_t * mem	1328:13:44772:44788	5233247	0	True				
ANR	5233297	ParameterType	gs_memory_t *		5233247	0					
ANR	5233298	Identifier	mem		5233247	1					
ANR	5233299	Parameter	gs_memory_status_t * pstat	1328:32:44791:44816	5233247	1	True				
ANR	5233300	ParameterType	gs_memory_status_t *		5233247	0					
ANR	5233301	Identifier	pstat		5233247	1					
ANR	5233302	CFGEntryNode	ENTRY		5233247		True				
ANR	5233303	CFGExitNode	EXIT		5233247		True				
ANR	5233304	Symbol	pstat		5233247						
ANR	5233305	Symbol	false		5233247						
ANR	5233306	Symbol	cmem -> used		5233247						
ANR	5233307	Symbol	cmem -> total_free		5233247						
ANR	5233308	Symbol	pstat -> used		5233247						
ANR	5233309	Symbol	cmem -> max_used		5233247						
ANR	5233310	Symbol	pstat -> is_thread_safe		5233247						
ANR	5233311	Symbol	* pstat		5233247						
ANR	5233312	Symbol	mem		5233247						
ANR	5233313	Symbol	pstat -> max_used		5233247						
ANR	5233314	Symbol	pstat -> allocated		5233247						
ANR	5233315	Symbol	* cmem		5233247						
ANR	5233316	Symbol	cmem		5233247						
ANR	5233317	Function	chunk_stable	1338:0:45091:45162							
ANR	5233318	FunctionDef	chunk_stable (gs_memory_t * mem)		5233317	0					
ANR	5233319	CompoundStatement		1340:0:45144:45162	5233317	0					
ANR	5233320	ReturnStatement	return mem ;	1341:4:45150:45160	5233317	0	True				
ANR	5233321	Identifier	mem		5233317	0					
ANR	5233322	ReturnType	static gs_memory_t *		5233317	1					
ANR	5233323	Identifier	chunk_stable		5233317	2					
ANR	5233324	ParameterList	gs_memory_t * mem		5233317	3					
ANR	5233325	Parameter	gs_memory_t * mem	1339:13:45125:45141	5233317	0	True				
ANR	5233326	ParameterType	gs_memory_t *		5233317	0					
ANR	5233327	Identifier	mem		5233317	1					
ANR	5233328	CFGEntryNode	ENTRY		5233317		True				
ANR	5233329	CFGExitNode	EXIT		5233317		True				
ANR	5233330	Symbol	mem		5233317						
ANR	5233331	Function	chunk_enable_free	1344:0:45165:45229							
ANR	5233332	FunctionDef	"chunk_enable_free (gs_memory_t * mem , bool enable)"		5233331	0					
ANR	5233333	CompoundStatement		1346:0:45227:45229	5233331	0					
ANR	5233334	ReturnType	static void		5233331	1					
ANR	5233335	Identifier	chunk_enable_free		5233331	2					
ANR	5233336	ParameterList	"gs_memory_t * mem , bool enable"		5233331	3					
ANR	5233337	Parameter	gs_memory_t * mem	1345:18:45195:45211	5233331	0	True				
ANR	5233338	ParameterType	gs_memory_t *		5233331	0					
ANR	5233339	Identifier	mem		5233331	1					
ANR	5233340	Parameter	bool enable	1345:37:45214:45224	5233331	1	True				
ANR	5233341	ParameterType	bool		5233331	0					
ANR	5233342	Identifier	enable		5233331	1					
ANR	5233343	CFGEntryNode	ENTRY		5233331		True				
ANR	5233344	CFGExitNode	EXIT		5233331		True				
ANR	5233345	Symbol	mem		5233331						
ANR	5233346	Symbol	enable		5233331						
ANR	5233347	Function	chunk_set_object_type	1349:0:45232:45485							
ANR	5233348	FunctionDef	"chunk_set_object_type (gs_memory_t * mem , void * ptr , gs_memory_type_ptr_t type)"		5233347	0					
ANR	5233349	CompoundStatement		1350:0:45322:45485	5233347	0					
ANR	5233350	IdentifierDeclStatement	chunk_obj_node_t * obj = ( chunk_obj_node_t * ) ( ( ( byte * ) ptr ) - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) ) ;	1351:4:45328:45426	5233347	0	True				
ANR	5233351	IdentifierDecl	* obj = ( chunk_obj_node_t * ) ( ( ( byte * ) ptr ) - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) )		5233347	0					
ANR	5233352	IdentifierDeclType	chunk_obj_node_t *		5233347	0					
ANR	5233353	Identifier	obj		5233347	1					
ANR	5233354	AssignmentExpression	* obj = ( chunk_obj_node_t * ) ( ( ( byte * ) ptr ) - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) )		5233347	2		=			
ANR	5233355	Identifier	obj		5233347	0					
ANR	5233356	CastExpression	( chunk_obj_node_t * ) ( ( ( byte * ) ptr ) - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) )		5233347	1					
ANR	5233357	CastTarget	chunk_obj_node_t *		5233347	0					
ANR	5233358	AdditiveExpression	( ( byte * ) ptr ) - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5233347	1		-			
ANR	5233359	CastExpression	( byte * ) ptr		5233347	0					
ANR	5233360	CastTarget	byte *		5233347	0					
ANR	5233361	Identifier	ptr		5233347	1					
ANR	5233362	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5233347	1					
ANR	5233363	Callee	SIZEOF_ROUND_ALIGN		5233347	0					
ANR	5233364	Identifier	SIZEOF_ROUND_ALIGN		5233347	0					
ANR	5233365	ArgumentList	chunk_obj_node_t		5233347	1					
ANR	5233366	Argument	chunk_obj_node_t		5233347	0					
ANR	5233367	Identifier	chunk_obj_node_t		5233347	0					
ANR	5233368	IfStatement	if ( ptr == 0 )		5233347	1					
ANR	5233369	Condition	ptr == 0	1353:8:45437:45444	5233347	0	True				
ANR	5233370	EqualityExpression	ptr == 0		5233347	0		==			
ANR	5233371	Identifier	ptr		5233347	0					
ANR	5233372	PrimaryExpression	0		5233347	1					
ANR	5233373	ReturnStatement	return ;	1354:8:45455:45461	5233347	1	True				
ANR	5233374	ExpressionStatement	obj -> type = type	1355:4:45467:45483	5233347	2	True				
ANR	5233375	AssignmentExpression	obj -> type = type		5233347	0		=			
ANR	5233376	PtrMemberAccess	obj -> type		5233347	0					
ANR	5233377	Identifier	obj		5233347	0					
ANR	5233378	Identifier	type		5233347	1					
ANR	5233379	Identifier	type		5233347	1					
ANR	5233380	ReturnType	static void		5233347	1					
ANR	5233381	Identifier	chunk_set_object_type		5233347	2					
ANR	5233382	ParameterList	"gs_memory_t * mem , void * ptr , gs_memory_type_ptr_t type"		5233347	3					
ANR	5233383	Parameter	gs_memory_t * mem	1349:34:45266:45281	5233347	0	True				
ANR	5233384	ParameterType	gs_memory_t *		5233347	0					
ANR	5233385	Identifier	mem		5233347	1					
ANR	5233386	Parameter	void * ptr	1349:52:45284:45292	5233347	1	True				
ANR	5233387	ParameterType	void *		5233347	0					
ANR	5233388	Identifier	ptr		5233347	1					
ANR	5233389	Parameter	gs_memory_type_ptr_t type	1349:63:45295:45319	5233347	2	True				
ANR	5233390	ParameterType	gs_memory_type_ptr_t		5233347	0					
ANR	5233391	Identifier	type		5233347	1					
ANR	5233392	CFGEntryNode	ENTRY		5233347		True				
ANR	5233393	CFGExitNode	EXIT		5233347		True				
ANR	5233394	Symbol	obj -> type		5233347						
ANR	5233395	Symbol	* obj		5233347						
ANR	5233396	Symbol	mem		5233347						
ANR	5233397	Symbol	obj		5233347						
ANR	5233398	Symbol	SIZEOF_ROUND_ALIGN		5233347						
ANR	5233399	Symbol	chunk_obj_node_t		5233347						
ANR	5233400	Symbol	type		5233347						
ANR	5233401	Symbol	ptr		5233347						
ANR	5233402	Function	chunk_defer_frees	1358:0:45488:46685							
ANR	5233403	FunctionDef	"chunk_defer_frees (gs_memory_t * mem , int defer)"		5233402	0					
ANR	5233404	CompoundStatement		1359:0:45547:46685	5233402	0					
ANR	5233405	IdentifierDeclStatement	gs_memory_chunk_t * cmem = ( gs_memory_chunk_t * ) mem ;	1360:4:45553:45603	5233402	0	True				
ANR	5233406	IdentifierDecl	* cmem = ( gs_memory_chunk_t * ) mem		5233402	0					
ANR	5233407	IdentifierDeclType	gs_memory_chunk_t *		5233402	0					
ANR	5233408	Identifier	cmem		5233402	1					
ANR	5233409	AssignmentExpression	* cmem = ( gs_memory_chunk_t * ) mem		5233402	2		=			
ANR	5233410	Identifier	cmem		5233402	0					
ANR	5233411	CastExpression	( gs_memory_chunk_t * ) mem		5233402	1					
ANR	5233412	CastTarget	gs_memory_chunk_t *		5233402	0					
ANR	5233413	Identifier	mem		5233402	1					
ANR	5233414	IdentifierDeclStatement	chunk_obj_node_t * n ;	1361:4:45609:45628	5233402	1	True				
ANR	5233415	IdentifierDecl	* n		5233402	0					
ANR	5233416	IdentifierDeclType	chunk_obj_node_t *		5233402	0					
ANR	5233417	Identifier	n		5233402	1					
ANR	5233418	IfStatement	if ( defer == 0 )		5233402	2					
ANR	5233419	Condition	defer == 0	1363:8:45639:45648	5233402	0	True				
ANR	5233420	EqualityExpression	defer == 0		5233402	0		==			
ANR	5233421	Identifier	defer		5233402	0					
ANR	5233422	PrimaryExpression	0		5233402	1					
ANR	5233423	CompoundStatement		5:20:103:103	5233402	1					
ANR	5233424	WhileStatement	while ( cmem -> defer_finalize_list )		5233402	0					
ANR	5233425	Condition	cmem -> defer_finalize_list	1367:15:45875:45899	5233402	0	True				
ANR	5233426	PtrMemberAccess	cmem -> defer_finalize_list		5233402	0					
ANR	5233427	Identifier	cmem		5233402	0					
ANR	5233428	Identifier	defer_finalize_list		5233402	1					
ANR	5233429	CompoundStatement		9:42:354:354	5233402	1					
ANR	5233430	ExpressionStatement	n = cmem -> defer_finalize_list	1368:12:45916:45945	5233402	0	True				
ANR	5233431	AssignmentExpression	n = cmem -> defer_finalize_list		5233402	0		=			
ANR	5233432	Identifier	n		5233402	0					
ANR	5233433	PtrMemberAccess	cmem -> defer_finalize_list		5233402	1					
ANR	5233434	Identifier	cmem		5233402	0					
ANR	5233435	Identifier	defer_finalize_list		5233402	1					
ANR	5233436	ExpressionStatement	cmem -> defer_finalize_list = n -> defer_next	1369:12:45959:46000	5233402	1	True				
ANR	5233437	AssignmentExpression	cmem -> defer_finalize_list = n -> defer_next		5233402	0		=			
ANR	5233438	PtrMemberAccess	cmem -> defer_finalize_list		5233402	0					
ANR	5233439	Identifier	cmem		5233402	0					
ANR	5233440	Identifier	defer_finalize_list		5233402	1					
ANR	5233441	PtrMemberAccess	n -> defer_next		5233402	1					
ANR	5233442	Identifier	n		5233402	0					
ANR	5233443	Identifier	defer_next		5233402	1					
ANR	5233444	IfStatement	if ( n -> type )		5233402	2					
ANR	5233445	Condition	n -> type	1370:16:46018:46024	5233402	0	True				
ANR	5233446	PtrMemberAccess	n -> type		5233402	0					
ANR	5233447	Identifier	n		5233402	0					
ANR	5233448	Identifier	type		5233402	1					
ANR	5233449	CompoundStatement		12:25:479:479	5233402	1					
ANR	5233450	IfStatement	if ( n -> type -> finalize )		5233402	0					
ANR	5233451	Condition	n -> type -> finalize	1371:20:46049:46065	5233402	0	True				
ANR	5233452	PtrMemberAccess	n -> type -> finalize		5233402	0					
ANR	5233453	PtrMemberAccess	n -> type		5233402	0					
ANR	5233454	Identifier	n		5233402	0					
ANR	5233455	Identifier	type		5233402	1					
ANR	5233456	Identifier	finalize		5233402	1					
ANR	5233457	ExpressionStatement	"n -> type -> finalize ( mem , ( ( byte * ) n ) + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) )"	1372:20:46088:46162	5233402	1	True				
ANR	5233458	CallExpression	"n -> type -> finalize ( mem , ( ( byte * ) n ) + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) )"		5233402	0					
ANR	5233459	Callee	n -> type -> finalize		5233402	0					
ANR	5233460	PtrMemberAccess	n -> type -> finalize		5233402	0					
ANR	5233461	PtrMemberAccess	n -> type		5233402	0					
ANR	5233462	Identifier	n		5233402	0					
ANR	5233463	Identifier	type		5233402	1					
ANR	5233464	Identifier	finalize		5233402	1					
ANR	5233465	ArgumentList	mem		5233402	1					
ANR	5233466	Argument	mem		5233402	0					
ANR	5233467	Identifier	mem		5233402	0					
ANR	5233468	Argument	( ( byte * ) n ) + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5233402	1					
ANR	5233469	AdditiveExpression	( ( byte * ) n ) + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5233402	0		+			
ANR	5233470	CastExpression	( byte * ) n		5233402	0					
ANR	5233471	CastTarget	byte *		5233402	0					
ANR	5233472	Identifier	n		5233402	1					
ANR	5233473	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5233402	1					
ANR	5233474	Callee	SIZEOF_ROUND_ALIGN		5233402	0					
ANR	5233475	Identifier	SIZEOF_ROUND_ALIGN		5233402	0					
ANR	5233476	ArgumentList	chunk_obj_node_t		5233402	1					
ANR	5233477	Argument	chunk_obj_node_t		5233402	0					
ANR	5233478	Identifier	chunk_obj_node_t		5233402	0					
ANR	5233479	ExpressionStatement	n -> type = NULL	1373:16:46180:46194	5233402	1	True				
ANR	5233480	AssignmentExpression	n -> type = NULL		5233402	0		=			
ANR	5233481	PtrMemberAccess	n -> type		5233402	0					
ANR	5233482	Identifier	n		5233402	0					
ANR	5233483	Identifier	type		5233402	1					
ANR	5233484	Identifier	NULL		5233402	1					
ANR	5233485	ExpressionStatement	n -> defer_next = cmem -> defer_free_list	1375:12:46222:46259	5233402	3	True				
ANR	5233486	AssignmentExpression	n -> defer_next = cmem -> defer_free_list		5233402	0		=			
ANR	5233487	PtrMemberAccess	n -> defer_next		5233402	0					
ANR	5233488	Identifier	n		5233402	0					
ANR	5233489	Identifier	defer_next		5233402	1					
ANR	5233490	PtrMemberAccess	cmem -> defer_free_list		5233402	1					
ANR	5233491	Identifier	cmem		5233402	0					
ANR	5233492	Identifier	defer_free_list		5233402	1					
ANR	5233493	ExpressionStatement	cmem -> defer_free_list = n	1376:12:46273:46298	5233402	4	True				
ANR	5233494	AssignmentExpression	cmem -> defer_free_list = n		5233402	0		=			
ANR	5233495	PtrMemberAccess	cmem -> defer_free_list		5233402	0					
ANR	5233496	Identifier	cmem		5233402	0					
ANR	5233497	Identifier	defer_free_list		5233402	1					
ANR	5233498	Identifier	n		5233402	1					
ANR	5233499	ExpressionStatement	cmem -> deferring = defer	1379:4:46320:46343	5233402	3	True				
ANR	5233500	AssignmentExpression	cmem -> deferring = defer		5233402	0		=			
ANR	5233501	PtrMemberAccess	cmem -> deferring		5233402	0					
ANR	5233502	Identifier	cmem		5233402	0					
ANR	5233503	Identifier	deferring		5233402	1					
ANR	5233504	Identifier	defer		5233402	1					
ANR	5233505	IfStatement	if ( defer == 0 )		5233402	4					
ANR	5233506	Condition	defer == 0	1380:8:46353:46362	5233402	0	True				
ANR	5233507	EqualityExpression	defer == 0		5233402	0		==			
ANR	5233508	Identifier	defer		5233402	0					
ANR	5233509	PrimaryExpression	0		5233402	1					
ANR	5233510	CompoundStatement		22:20:817:817	5233402	1					
ANR	5233511	WhileStatement	while ( cmem -> defer_free_list )		5233402	0					
ANR	5233512	Condition	cmem -> defer_free_list	1382:15:46449:46469	5233402	0	True				
ANR	5233513	PtrMemberAccess	cmem -> defer_free_list		5233402	0					
ANR	5233514	Identifier	cmem		5233402	0					
ANR	5233515	Identifier	defer_free_list		5233402	1					
ANR	5233516	CompoundStatement		24:38:924:924	5233402	1					
ANR	5233517	ExpressionStatement	n = cmem -> defer_free_list	1383:12:46486:46511	5233402	0	True				
ANR	5233518	AssignmentExpression	n = cmem -> defer_free_list		5233402	0		=			
ANR	5233519	Identifier	n		5233402	0					
ANR	5233520	PtrMemberAccess	cmem -> defer_free_list		5233402	1					
ANR	5233521	Identifier	cmem		5233402	0					
ANR	5233522	Identifier	defer_free_list		5233402	1					
ANR	5233523	ExpressionStatement	cmem -> defer_free_list = n -> defer_next	1384:12:46525:46562	5233402	1	True				
ANR	5233524	AssignmentExpression	cmem -> defer_free_list = n -> defer_next		5233402	0		=			
ANR	5233525	PtrMemberAccess	cmem -> defer_free_list		5233402	0					
ANR	5233526	Identifier	cmem		5233402	0					
ANR	5233527	Identifier	defer_free_list		5233402	1					
ANR	5233528	PtrMemberAccess	n -> defer_next		5233402	1					
ANR	5233529	Identifier	n		5233402	0					
ANR	5233530	Identifier	defer_next		5233402	1					
ANR	5233531	ExpressionStatement	"chunk_free_object ( mem , ( ( byte * ) n ) + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) , ""deferred free"" )"	1385:12:46576:46667	5233402	2	True				
ANR	5233532	CallExpression	"chunk_free_object ( mem , ( ( byte * ) n ) + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) , ""deferred free"" )"		5233402	0					
ANR	5233533	Callee	chunk_free_object		5233402	0					
ANR	5233534	Identifier	chunk_free_object		5233402	0					
ANR	5233535	ArgumentList	mem		5233402	1					
ANR	5233536	Argument	mem		5233402	0					
ANR	5233537	Identifier	mem		5233402	0					
ANR	5233538	Argument	( ( byte * ) n ) + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5233402	1					
ANR	5233539	AdditiveExpression	( ( byte * ) n ) + SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5233402	0		+			
ANR	5233540	CastExpression	( byte * ) n		5233402	0					
ANR	5233541	CastTarget	byte *		5233402	0					
ANR	5233542	Identifier	n		5233402	1					
ANR	5233543	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5233402	1					
ANR	5233544	Callee	SIZEOF_ROUND_ALIGN		5233402	0					
ANR	5233545	Identifier	SIZEOF_ROUND_ALIGN		5233402	0					
ANR	5233546	ArgumentList	chunk_obj_node_t		5233402	1					
ANR	5233547	Argument	chunk_obj_node_t		5233402	0					
ANR	5233548	Identifier	chunk_obj_node_t		5233402	0					
ANR	5233549	Argument	"""deferred free"""		5233402	2					
ANR	5233550	PrimaryExpression	"""deferred free"""		5233402	0					
ANR	5233551	ReturnType	static void		5233402	1					
ANR	5233552	Identifier	chunk_defer_frees		5233402	2					
ANR	5233553	ParameterList	"gs_memory_t * mem , int defer"		5233402	3					
ANR	5233554	Parameter	gs_memory_t * mem	1358:30:45518:45533	5233402	0	True				
ANR	5233555	ParameterType	gs_memory_t *		5233402	0					
ANR	5233556	Identifier	mem		5233402	1					
ANR	5233557	Parameter	int defer	1358:48:45536:45544	5233402	1	True				
ANR	5233558	ParameterType	int		5233402	0					
ANR	5233559	Identifier	defer		5233402	1					
ANR	5233560	CFGEntryNode	ENTRY		5233402		True				
ANR	5233561	CFGExitNode	EXIT		5233402		True				
ANR	5233562	Symbol	defer		5233402						
ANR	5233563	Symbol	cmem -> defer_finalize_list		5233402						
ANR	5233564	Symbol	NULL		5233402						
ANR	5233565	Symbol	n -> defer_next		5233402						
ANR	5233566	Symbol	n -> type -> finalize		5233402						
ANR	5233567	Symbol	n		5233402						
ANR	5233568	Symbol	cmem -> defer_free_list		5233402						
ANR	5233569	Symbol	mem		5233402						
ANR	5233570	Symbol	* cmem		5233402						
ANR	5233571	Symbol	* n		5233402						
ANR	5233572	Symbol	SIZEOF_ROUND_ALIGN		5233402						
ANR	5233573	Symbol	chunk_obj_node_t		5233402						
ANR	5233574	Symbol	cmem -> deferring		5233402						
ANR	5233575	Symbol	cmem		5233402						
ANR	5233576	Symbol	n -> type		5233402						
ANR	5233577	Symbol	* * n		5233402						
ANR	5233578	Symbol	* n -> type		5233402						
ANR	5233579	Function	chunk_consolidate_free	1390:0:46688:46743							
ANR	5233580	FunctionDef	chunk_consolidate_free (gs_memory_t * mem)		5233579	0					
ANR	5233581	CompoundStatement		1392:0:46741:46743	5233579	0					
ANR	5233582	ReturnType	static void		5233579	1					
ANR	5233583	Identifier	chunk_consolidate_free		5233579	2					
ANR	5233584	ParameterList	gs_memory_t * mem		5233579	3					
ANR	5233585	Parameter	gs_memory_t * mem	1391:23:46723:46738	5233579	0	True				
ANR	5233586	ParameterType	gs_memory_t *		5233579	0					
ANR	5233587	Identifier	mem		5233579	1					
ANR	5233588	CFGEntryNode	ENTRY		5233579		True				
ANR	5233589	CFGExitNode	EXIT		5233579		True				
ANR	5233590	Symbol	mem		5233579						
ANR	5233591	Function	chunk_object_size	1396:0:46824:47034							
ANR	5233592	FunctionDef	"chunk_object_size (gs_memory_t * mem , const void * ptr)"		5233591	0					
ANR	5233593	CompoundStatement		1398:0:46890:47034	5233591	0					
ANR	5233594	IdentifierDeclStatement	chunk_obj_node_t * obj = ( chunk_obj_node_t * ) ( ( ( byte * ) ptr ) - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) ) ;	1399:4:46896:46994	5233591	0	True				
ANR	5233595	IdentifierDecl	* obj = ( chunk_obj_node_t * ) ( ( ( byte * ) ptr ) - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) )		5233591	0					
ANR	5233596	IdentifierDeclType	chunk_obj_node_t *		5233591	0					
ANR	5233597	Identifier	obj		5233591	1					
ANR	5233598	AssignmentExpression	* obj = ( chunk_obj_node_t * ) ( ( ( byte * ) ptr ) - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) )		5233591	2		=			
ANR	5233599	Identifier	obj		5233591	0					
ANR	5233600	CastExpression	( chunk_obj_node_t * ) ( ( ( byte * ) ptr ) - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) )		5233591	1					
ANR	5233601	CastTarget	chunk_obj_node_t *		5233591	0					
ANR	5233602	AdditiveExpression	( ( byte * ) ptr ) - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5233591	1		-			
ANR	5233603	CastExpression	( byte * ) ptr		5233591	0					
ANR	5233604	CastTarget	byte *		5233591	0					
ANR	5233605	Identifier	ptr		5233591	1					
ANR	5233606	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5233591	1					
ANR	5233607	Callee	SIZEOF_ROUND_ALIGN		5233591	0					
ANR	5233608	Identifier	SIZEOF_ROUND_ALIGN		5233591	0					
ANR	5233609	ArgumentList	chunk_obj_node_t		5233591	1					
ANR	5233610	Argument	chunk_obj_node_t		5233591	0					
ANR	5233611	Identifier	chunk_obj_node_t		5233591	0					
ANR	5233612	ReturnStatement	return obj -> size - obj -> padding ;	1401:4:47001:47032	5233591	1	True				
ANR	5233613	AdditiveExpression	obj -> size - obj -> padding		5233591	0		-			
ANR	5233614	PtrMemberAccess	obj -> size		5233591	0					
ANR	5233615	Identifier	obj		5233591	0					
ANR	5233616	Identifier	size		5233591	1					
ANR	5233617	PtrMemberAccess	obj -> padding		5233591	1					
ANR	5233618	Identifier	obj		5233591	0					
ANR	5233619	Identifier	padding		5233591	1					
ANR	5233620	ReturnType	static uint		5233591	1					
ANR	5233621	Identifier	chunk_object_size		5233591	2					
ANR	5233622	ParameterList	"gs_memory_t * mem , const void * ptr"		5233591	3					
ANR	5233623	Parameter	gs_memory_t * mem	1397:18:46854:46870	5233591	0	True				
ANR	5233624	ParameterType	gs_memory_t *		5233591	0					
ANR	5233625	Identifier	mem		5233591	1					
ANR	5233626	Parameter	const void * ptr	1397:37:46873:46887	5233591	1	True				
ANR	5233627	ParameterType	const void *		5233591	0					
ANR	5233628	Identifier	ptr		5233591	1					
ANR	5233629	CFGEntryNode	ENTRY		5233591		True				
ANR	5233630	CFGExitNode	EXIT		5233591		True				
ANR	5233631	Symbol	* obj		5233591						
ANR	5233632	Symbol	obj -> padding		5233591						
ANR	5233633	Symbol	mem		5233591						
ANR	5233634	Symbol	obj		5233591						
ANR	5233635	Symbol	obj -> size		5233591						
ANR	5233636	Symbol	SIZEOF_ROUND_ALIGN		5233591						
ANR	5233637	Symbol	chunk_obj_node_t		5233591						
ANR	5233638	Symbol	ptr		5233591						
ANR	5233639	Function	chunk_object_type	1404:0:47037:47253							
ANR	5233640	FunctionDef	"chunk_object_type (const gs_memory_t * mem , const void * ptr)"		5233639	0					
ANR	5233641	CompoundStatement		1406:0:47125:47253	5233639	0					
ANR	5233642	IdentifierDeclStatement	chunk_obj_node_t * obj = ( chunk_obj_node_t * ) ( ( ( byte * ) ptr ) - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) ) ;	1407:4:47131:47229	5233639	0	True				
ANR	5233643	IdentifierDecl	* obj = ( chunk_obj_node_t * ) ( ( ( byte * ) ptr ) - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) )		5233639	0					
ANR	5233644	IdentifierDeclType	chunk_obj_node_t *		5233639	0					
ANR	5233645	Identifier	obj		5233639	1					
ANR	5233646	AssignmentExpression	* obj = ( chunk_obj_node_t * ) ( ( ( byte * ) ptr ) - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) )		5233639	2		=			
ANR	5233647	Identifier	obj		5233639	0					
ANR	5233648	CastExpression	( chunk_obj_node_t * ) ( ( ( byte * ) ptr ) - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t ) )		5233639	1					
ANR	5233649	CastTarget	chunk_obj_node_t *		5233639	0					
ANR	5233650	AdditiveExpression	( ( byte * ) ptr ) - SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5233639	1		-			
ANR	5233651	CastExpression	( byte * ) ptr		5233639	0					
ANR	5233652	CastTarget	byte *		5233639	0					
ANR	5233653	Identifier	ptr		5233639	1					
ANR	5233654	CallExpression	SIZEOF_ROUND_ALIGN ( chunk_obj_node_t )		5233639	1					
ANR	5233655	Callee	SIZEOF_ROUND_ALIGN		5233639	0					
ANR	5233656	Identifier	SIZEOF_ROUND_ALIGN		5233639	0					
ANR	5233657	ArgumentList	chunk_obj_node_t		5233639	1					
ANR	5233658	Argument	chunk_obj_node_t		5233639	0					
ANR	5233659	Identifier	chunk_obj_node_t		5233639	0					
ANR	5233660	ReturnStatement	return obj -> type ;	1408:4:47235:47251	5233639	1	True				
ANR	5233661	PtrMemberAccess	obj -> type		5233639	0					
ANR	5233662	Identifier	obj		5233639	0					
ANR	5233663	Identifier	type		5233639	1					
ANR	5233664	ReturnType	static gs_memory_type_ptr_t		5233639	1					
ANR	5233665	Identifier	chunk_object_type		5233639	2					
ANR	5233666	ParameterList	"const gs_memory_t * mem , const void * ptr"		5233639	3					
ANR	5233667	Parameter	const gs_memory_t * mem	1405:18:47083:47105	5233639	0	True				
ANR	5233668	ParameterType	const gs_memory_t *		5233639	0					
ANR	5233669	Identifier	mem		5233639	1					
ANR	5233670	Parameter	const void * ptr	1405:43:47108:47122	5233639	1	True				
ANR	5233671	ParameterType	const void *		5233639	0					
ANR	5233672	Identifier	ptr		5233639	1					
ANR	5233673	CFGEntryNode	ENTRY		5233639		True				
ANR	5233674	CFGExitNode	EXIT		5233639		True				
ANR	5233675	Symbol	obj -> type		5233639						
ANR	5233676	Symbol	* obj		5233639						
ANR	5233677	Symbol	mem		5233639						
ANR	5233678	Symbol	obj		5233639						
ANR	5233679	Symbol	SIZEOF_ROUND_ALIGN		5233639						
ANR	5233680	Symbol	chunk_obj_node_t		5233639						
ANR	5233681	Symbol	ptr		5233639						
ANR	5233682	Function	chunk_register_root	1411:0:47256:47411							
ANR	5233683	FunctionDef	"chunk_register_root (gs_memory_t * mem , gs_gc_root_t * rp , gs_ptr_type_t ptype , void * * up , client_name_t cname)"		5233682	0					
ANR	5233684	CompoundStatement		1414:0:47395:47411	5233682	0					
ANR	5233685	ReturnStatement	return 0 ;	1415:4:47401:47409	5233682	0	True				
ANR	5233686	PrimaryExpression	0		5233682	0					
ANR	5233687	ReturnType	static int		5233682	1					
ANR	5233688	Identifier	chunk_register_root		5233682	2					
ANR	5233689	ParameterList	"gs_memory_t * mem , gs_gc_root_t * rp , gs_ptr_type_t ptype , void * * up , client_name_t cname"		5233682	3					
ANR	5233690	Parameter	gs_memory_t * mem	1412:20:47287:47303	5233682	0	True				
ANR	5233691	ParameterType	gs_memory_t *		5233682	0					
ANR	5233692	Identifier	mem		5233682	1					
ANR	5233693	Parameter	gs_gc_root_t * rp	1412:39:47306:47322	5233682	1	True				
ANR	5233694	ParameterType	gs_gc_root_t *		5233682	0					
ANR	5233695	Identifier	rp		5233682	1					
ANR	5233696	Parameter	gs_ptr_type_t ptype	1412:58:47325:47343	5233682	2	True				
ANR	5233697	ParameterType	gs_ptr_type_t		5233682	0					
ANR	5233698	Identifier	ptype		5233682	1					
ANR	5233699	Parameter	void * * up	1413:17:47363:47371	5233682	3	True				
ANR	5233700	ParameterType	void * *		5233682	0					
ANR	5233701	Identifier	up		5233682	1					
ANR	5233702	Parameter	client_name_t cname	1413:28:47374:47392	5233682	4	True				
ANR	5233703	ParameterType	client_name_t		5233682	0					
ANR	5233704	Identifier	cname		5233682	1					
ANR	5233705	CFGEntryNode	ENTRY		5233682		True				
ANR	5233706	CFGExitNode	EXIT		5233682		True				
ANR	5233707	Symbol	mem		5233682						
ANR	5233708	Symbol	cname		5233682						
ANR	5233709	Symbol	ptype		5233682						
ANR	5233710	Symbol	up		5233682						
ANR	5233711	Symbol	rp		5233682						
ANR	5233712	Function	chunk_unregister_root	1418:0:47414:47509							
ANR	5233713	FunctionDef	"chunk_unregister_root (gs_memory_t * mem , gs_gc_root_t * rp , client_name_t cname)"		5233712	0					
ANR	5233714	CompoundStatement		1420:0:47507:47509	5233712	0					
ANR	5233715	ReturnType	static void		5233712	1					
ANR	5233716	Identifier	chunk_unregister_root		5233712	2					
ANR	5233717	ParameterList	"gs_memory_t * mem , gs_gc_root_t * rp , client_name_t cname"		5233712	3					
ANR	5233718	Parameter	gs_memory_t * mem	1419:22:47448:47464	5233712	0	True				
ANR	5233719	ParameterType	gs_memory_t *		5233712	0					
ANR	5233720	Identifier	mem		5233712	1					
ANR	5233721	Parameter	gs_gc_root_t * rp	1419:41:47467:47483	5233712	1	True				
ANR	5233722	ParameterType	gs_gc_root_t *		5233712	0					
ANR	5233723	Identifier	rp		5233712	1					
ANR	5233724	Parameter	client_name_t cname	1419:60:47486:47504	5233712	2	True				
ANR	5233725	ParameterType	client_name_t		5233712	0					
ANR	5233726	Identifier	cname		5233712	1					
ANR	5233727	CFGEntryNode	ENTRY		5233712		True				
ANR	5233728	CFGExitNode	EXIT		5233712		True				
ANR	5233729	Symbol	mem		5233712						
ANR	5233730	Symbol	cname		5233712						
ANR	5233731	Symbol	rp		5233712						
