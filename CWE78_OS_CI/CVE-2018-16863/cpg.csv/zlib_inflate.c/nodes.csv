command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11233977	File	data/converged/CVE-2018-16863_ghostpdl/zlib_inflate.c								
ANR	11233978	DeclStmt									
ANR	11233979	Decl							z_streamp	z_streamp	strm
ANR	11233980	DeclStmt									
ANR	11233981	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
ANR	11233982	DeclStmt									
ANR	11233983	Decl							z_streamp	z_streamp	strm
ANR	11233984	DeclStmt									
ANR	11233985	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
ANR	11233986	DeclStmt									
ANR	11233987	Decl							z_streamp	z_streamp	strm
ANR	11233988	DeclStmt									
ANR	11233989	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
ANR	11233990	DeclStmt									
ANR	11233991	Decl							z_streamp	z_streamp	strm
ANR	11233992	DeclStmt									
ANR	11233993	Decl							int	int	windowBits
ANR	11233994	DeclStmt									
ANR	11233995	Decl							int	int	wrap
ANR	11233996	DeclStmt									
ANR	11233997	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
ANR	11233998	DeclStmt									
ANR	11233999	Decl							z_streamp	z_streamp	strm
ANR	11234000	DeclStmt									
ANR	11234001	Decl							int	int	windowBits
ANR	11234002	DeclStmt									
ANR	11234003	Decl							const char	const char *	version
ANR	11234004	DeclStmt									
ANR	11234005	Decl							int	int	stream_size
ANR	11234006	DeclStmt									
ANR	11234007	Decl							int	int	ret
ANR	11234008	DeclStmt									
ANR	11234009	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
ANR	11234010	DeclStmt									
ANR	11234011	Decl							z_streamp	z_streamp	strm
ANR	11234012	DeclStmt									
ANR	11234013	Decl							const char	const char *	version
ANR	11234014	DeclStmt									
ANR	11234015	Decl							int	int	stream_size
ANR	11234016	DeclStmt									
ANR	11234017	Decl							z_streamp	z_streamp	strm
ANR	11234018	DeclStmt									
ANR	11234019	Decl							int	int	bits
ANR	11234020	DeclStmt									
ANR	11234021	Decl							int	int	value
ANR	11234022	DeclStmt									
ANR	11234023	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
ANR	11234024	DeclStmt									
ANR	11234025	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
ANR	11234026	DeclStmt									
ANR	11234027	Decl							int	int	virgin
ANR	11234028	DeclStmt									
ANR	11234029	Decl							code	code *	lenfix
ANR	11234030	Decl							code	code *	distfix
ANR	11234031	DeclStmt									
ANR	11234032	Decl							code	code [ 544 ]	fixed
ANR	11234033	DeclStmt									
ANR	11234034	Decl							unsigned	unsigned	sym
ANR	11234035	Decl							unsigned	unsigned	bits
ANR	11234036	DeclStmt									
ANR	11234037	Decl							code	code *	next
ANR	11234038	Function	makefixed	342:0:11199:12469							
ANR	11234039	FunctionDef	makefixed ()		11234038	0					
ANR	11234040	CompoundStatement		343:0:11216:12469	11234038	0					
ANR	11234041	IdentifierDeclStatement	"unsigned low , size ;"	344:4:11222:11240	11234038	0	True				
ANR	11234042	IdentifierDecl	low		11234038	0					
ANR	11234043	IdentifierDeclType	unsigned		11234038	0					
ANR	11234044	Identifier	low		11234038	1					
ANR	11234045	IdentifierDecl	size		11234038	1					
ANR	11234046	IdentifierDeclType	unsigned		11234038	0					
ANR	11234047	Identifier	size		11234038	1					
ANR	11234048	IdentifierDeclStatement	struct inflate_state state ;	345:4:11246:11272	11234038	1	True				
ANR	11234049	IdentifierDecl	state		11234038	0					
ANR	11234050	IdentifierDeclType	struct inflate_state		11234038	0					
ANR	11234051	Identifier	state		11234038	1					
ANR	11234052	ExpressionStatement	fixedtables ( & state )	347:4:11279:11298	11234038	2	True				
ANR	11234053	CallExpression	fixedtables ( & state )		11234038	0					
ANR	11234054	Callee	fixedtables		11234038	0					
ANR	11234055	Identifier	fixedtables		11234038	0					
ANR	11234056	ArgumentList	& state		11234038	1					
ANR	11234057	Argument	& state		11234038	0					
ANR	11234058	UnaryOperationExpression	& state		11234038	0					
ANR	11234059	UnaryOperator	&		11234038	0					
ANR	11234060	Identifier	state		11234038	1					
ANR	11234061	ExpressionStatement	"puts ( ""    /* inffixed.h -- table for decoding fixed codes"" )"	348:4:11304:11363	11234038	3	True				
ANR	11234062	CallExpression	"puts ( ""    /* inffixed.h -- table for decoding fixed codes"" )"		11234038	0					
ANR	11234063	Callee	puts		11234038	0					
ANR	11234064	Identifier	puts		11234038	0					
ANR	11234065	ArgumentList	"""    /* inffixed.h -- table for decoding fixed codes"""		11234038	1					
ANR	11234066	Argument	"""    /* inffixed.h -- table for decoding fixed codes"""		11234038	0					
ANR	11234067	PrimaryExpression	"""    /* inffixed.h -- table for decoding fixed codes"""		11234038	0					
ANR	11234068	ExpressionStatement	"puts ( ""     * Generated automatically by makefixed()."" )"	349:4:11369:11423	11234038	4	True				
ANR	11234069	CallExpression	"puts ( ""     * Generated automatically by makefixed()."" )"		11234038	0					
ANR	11234070	Callee	puts		11234038	0					
ANR	11234071	Identifier	puts		11234038	0					
ANR	11234072	ArgumentList	"""     * Generated automatically by makefixed()."""		11234038	1					
ANR	11234073	Argument	"""     * Generated automatically by makefixed()."""		11234038	0					
ANR	11234074	PrimaryExpression	"""     * Generated automatically by makefixed()."""		11234038	0					
ANR	11234075	ExpressionStatement	"puts ( ""     */"" )"	350:4:11429:11444	11234038	5	True				
ANR	11234076	CallExpression	"puts ( ""     */"" )"		11234038	0					
ANR	11234077	Callee	puts		11234038	0					
ANR	11234078	Identifier	puts		11234038	0					
ANR	11234079	ArgumentList	"""     */"""		11234038	1					
ANR	11234080	Argument	"""     */"""		11234038	0					
ANR	11234081	PrimaryExpression	"""     */"""		11234038	0					
ANR	11234082	ExpressionStatement	"puts ( """" )"	351:4:11450:11458	11234038	6	True				
ANR	11234083	CallExpression	"puts ( """" )"		11234038	0					
ANR	11234084	Callee	puts		11234038	0					
ANR	11234085	Identifier	puts		11234038	0					
ANR	11234086	ArgumentList	""""""		11234038	1					
ANR	11234087	Argument	""""""		11234038	0					
ANR	11234088	PrimaryExpression	""""""		11234038	0					
ANR	11234089	ExpressionStatement	"puts ( ""    /* WARNING: this file should *not* be used by applications."" )"	352:4:11464:11535	11234038	7	True				
ANR	11234090	CallExpression	"puts ( ""    /* WARNING: this file should *not* be used by applications."" )"		11234038	0					
ANR	11234091	Callee	puts		11234038	0					
ANR	11234092	Identifier	puts		11234038	0					
ANR	11234093	ArgumentList	"""    /* WARNING: this file should *not* be used by applications."""		11234038	1					
ANR	11234094	Argument	"""    /* WARNING: this file should *not* be used by applications."""		11234038	0					
ANR	11234095	PrimaryExpression	"""    /* WARNING: this file should *not* be used by applications."""		11234038	0					
ANR	11234096	ExpressionStatement	"puts ( ""       It is part of the implementation of this library and is"" )"	353:4:11541:11611	11234038	8	True				
ANR	11234097	CallExpression	"puts ( ""       It is part of the implementation of this library and is"" )"		11234038	0					
ANR	11234098	Callee	puts		11234038	0					
ANR	11234099	Identifier	puts		11234038	0					
ANR	11234100	ArgumentList	"""       It is part of the implementation of this library and is"""		11234038	1					
ANR	11234101	Argument	"""       It is part of the implementation of this library and is"""		11234038	0					
ANR	11234102	PrimaryExpression	"""       It is part of the implementation of this library and is"""		11234038	0					
ANR	11234103	ExpressionStatement	"puts ( ""       subject to change. Applications should only use zlib.h."" )"	354:4:11617:11687	11234038	9	True				
ANR	11234104	CallExpression	"puts ( ""       subject to change. Applications should only use zlib.h."" )"		11234038	0					
ANR	11234105	Callee	puts		11234038	0					
ANR	11234106	Identifier	puts		11234038	0					
ANR	11234107	ArgumentList	"""       subject to change. Applications should only use zlib.h."""		11234038	1					
ANR	11234108	Argument	"""       subject to change. Applications should only use zlib.h."""		11234038	0					
ANR	11234109	PrimaryExpression	"""       subject to change. Applications should only use zlib.h."""		11234038	0					
ANR	11234110	ExpressionStatement	"puts ( ""     */"" )"	355:4:11693:11708	11234038	10	True				
ANR	11234111	CallExpression	"puts ( ""     */"" )"		11234038	0					
ANR	11234112	Callee	puts		11234038	0					
ANR	11234113	Identifier	puts		11234038	0					
ANR	11234114	ArgumentList	"""     */"""		11234038	1					
ANR	11234115	Argument	"""     */"""		11234038	0					
ANR	11234116	PrimaryExpression	"""     */"""		11234038	0					
ANR	11234117	ExpressionStatement	"puts ( """" )"	356:4:11714:11722	11234038	11	True				
ANR	11234118	CallExpression	"puts ( """" )"		11234038	0					
ANR	11234119	Callee	puts		11234038	0					
ANR	11234120	Identifier	puts		11234038	0					
ANR	11234121	ArgumentList	""""""		11234038	1					
ANR	11234122	Argument	""""""		11234038	0					
ANR	11234123	PrimaryExpression	""""""		11234038	0					
ANR	11234124	ExpressionStatement	size = 1U << 9	357:4:11728:11742	11234038	12	True				
ANR	11234125	AssignmentExpression	size = 1U << 9		11234038	0		=			
ANR	11234126	Identifier	size		11234038	0					
ANR	11234127	ShiftExpression	1U << 9		11234038	1		<<			
ANR	11234128	PrimaryExpression	1U		11234038	0					
ANR	11234129	PrimaryExpression	9		11234038	1					
ANR	11234130	ExpressionStatement	"printf ( ""    static const code lenfix[%u] = {"" , size )"	358:4:11748:11800	11234038	13	True				
ANR	11234131	CallExpression	"printf ( ""    static const code lenfix[%u] = {"" , size )"		11234038	0					
ANR	11234132	Callee	printf		11234038	0					
ANR	11234133	Identifier	printf		11234038	0					
ANR	11234134	ArgumentList	"""    static const code lenfix[%u] = {"""		11234038	1					
ANR	11234135	Argument	"""    static const code lenfix[%u] = {"""		11234038	0					
ANR	11234136	PrimaryExpression	"""    static const code lenfix[%u] = {"""		11234038	0					
ANR	11234137	Argument	size		11234038	1					
ANR	11234138	Identifier	size		11234038	0					
ANR	11234139	ExpressionStatement	low = 0	359:4:11806:11813	11234038	14	True				
ANR	11234140	AssignmentExpression	low = 0		11234038	0		=			
ANR	11234141	Identifier	low		11234038	0					
ANR	11234142	PrimaryExpression	0		11234038	1					
ANR	11234143	ForStatement	for ( ; ; )		11234038	15					
ANR	11234144	CompoundStatement		18:13:611:611	11234038	0					
ANR	11234145	IfStatement	if ( ( low % 7 ) == 0 )		11234038	0					
ANR	11234146	Condition	( low % 7 ) == 0	361:12:11842:11855	11234038	0	True				
ANR	11234147	EqualityExpression	( low % 7 ) == 0		11234038	0		==			
ANR	11234148	MultiplicativeExpression	low % 7		11234038	0		%			
ANR	11234149	Identifier	low		11234038	0					
ANR	11234150	PrimaryExpression	7		11234038	1					
ANR	11234151	PrimaryExpression	0		11234038	1					
ANR	11234152	ExpressionStatement	"printf ( ""\\n        "" )"	361:28:11858:11878	11234038	1	True				
ANR	11234153	CallExpression	"printf ( ""\\n        "" )"		11234038	0					
ANR	11234154	Callee	printf		11234038	0					
ANR	11234155	Identifier	printf		11234038	0					
ANR	11234156	ArgumentList	"""\\n        """		11234038	1					
ANR	11234157	Argument	"""\\n        """		11234038	0					
ANR	11234158	PrimaryExpression	"""\\n        """		11234038	0					
ANR	11234159	ExpressionStatement	"printf ( ""{%u,%u,%d}"" , ( low & 127 ) == 99 ? 64 : state . lencode [ low ] . op , state . lencode [ low ] . bits , state . lencode [ low ] . val )"	362:8:11888:12020	11234038	1	True				
ANR	11234160	CallExpression	"printf ( ""{%u,%u,%d}"" , ( low & 127 ) == 99 ? 64 : state . lencode [ low ] . op , state . lencode [ low ] . bits , state . lencode [ low ] . val )"		11234038	0					
ANR	11234161	Callee	printf		11234038	0					
ANR	11234162	Identifier	printf		11234038	0					
ANR	11234163	ArgumentList	"""{%u,%u,%d}"""		11234038	1					
ANR	11234164	Argument	"""{%u,%u,%d}"""		11234038	0					
ANR	11234165	PrimaryExpression	"""{%u,%u,%d}"""		11234038	0					
ANR	11234166	Argument	( low & 127 ) == 99 ? 64 : state . lencode [ low ] . op		11234038	1					
ANR	11234167	ConditionalExpression	( low & 127 ) == 99 ? 64 : state . lencode [ low ] . op		11234038	0					
ANR	11234168	Condition	( low & 127 ) == 99		11234038	0					
ANR	11234169	EqualityExpression	( low & 127 ) == 99		11234038	0		==			
ANR	11234170	BitAndExpression	low & 127		11234038	0		&			
ANR	11234171	Identifier	low		11234038	0					
ANR	11234172	PrimaryExpression	127		11234038	1					
ANR	11234173	PrimaryExpression	99		11234038	1					
ANR	11234174	PrimaryExpression	64		11234038	1					
ANR	11234175	MemberAccess	state . lencode [ low ] . op		11234038	2					
ANR	11234176	ArrayIndexing	state . lencode [ low ]		11234038	0					
ANR	11234177	MemberAccess	state . lencode		11234038	0					
ANR	11234178	Identifier	state		11234038	0					
ANR	11234179	Identifier	lencode		11234038	1					
ANR	11234180	Identifier	low		11234038	1					
ANR	11234181	Identifier	op		11234038	1					
ANR	11234182	Argument	state . lencode [ low ] . bits		11234038	2					
ANR	11234183	MemberAccess	state . lencode [ low ] . bits		11234038	0					
ANR	11234184	ArrayIndexing	state . lencode [ low ]		11234038	0					
ANR	11234185	MemberAccess	state . lencode		11234038	0					
ANR	11234186	Identifier	state		11234038	0					
ANR	11234187	Identifier	lencode		11234038	1					
ANR	11234188	Identifier	low		11234038	1					
ANR	11234189	Identifier	bits		11234038	1					
ANR	11234190	Argument	state . lencode [ low ] . val		11234038	3					
ANR	11234191	MemberAccess	state . lencode [ low ] . val		11234038	0					
ANR	11234192	ArrayIndexing	state . lencode [ low ]		11234038	0					
ANR	11234193	MemberAccess	state . lencode		11234038	0					
ANR	11234194	Identifier	state		11234038	0					
ANR	11234195	Identifier	lencode		11234038	1					
ANR	11234196	Identifier	low		11234038	1					
ANR	11234197	Identifier	val		11234038	1					
ANR	11234198	IfStatement	if ( ++ low == size )		11234038	2					
ANR	11234199	Condition	++ low == size	364:12:12034:12046	11234038	0	True				
ANR	11234200	EqualityExpression	++ low == size		11234038	0		==			
ANR	11234201	UnaryExpression	++ low		11234038	0					
ANR	11234202	IncDec	++		11234038	0					
ANR	11234203	Identifier	low		11234038	1					
ANR	11234204	Identifier	size		11234038	1					
ANR	11234205	BreakStatement	break ;	364:27:12049:12054	11234038	1	True				
ANR	11234206	ExpressionStatement	"putchar ( ',' )"	365:8:12064:12076	11234038	3	True				
ANR	11234207	CallExpression	"putchar ( ',' )"		11234038	0					
ANR	11234208	Callee	putchar		11234038	0					
ANR	11234209	Identifier	putchar		11234038	0					
ANR	11234210	ArgumentList	"','"		11234038	1					
ANR	11234211	Argument	"','"		11234038	0					
ANR	11234212	PrimaryExpression	"','"		11234038	0					
ANR	11234213	ExpressionStatement	"puts ( ""\\n    };"" )"	367:4:12088:12104	11234038	16	True				
ANR	11234214	CallExpression	"puts ( ""\\n    };"" )"		11234038	0					
ANR	11234215	Callee	puts		11234038	0					
ANR	11234216	Identifier	puts		11234038	0					
ANR	11234217	ArgumentList	"""\\n    };"""		11234038	1					
ANR	11234218	Argument	"""\\n    };"""		11234038	0					
ANR	11234219	PrimaryExpression	"""\\n    };"""		11234038	0					
ANR	11234220	ExpressionStatement	size = 1U << 5	368:4:12110:12124	11234038	17	True				
ANR	11234221	AssignmentExpression	size = 1U << 5		11234038	0		=			
ANR	11234222	Identifier	size		11234038	0					
ANR	11234223	ShiftExpression	1U << 5		11234038	1		<<			
ANR	11234224	PrimaryExpression	1U		11234038	0					
ANR	11234225	PrimaryExpression	5		11234038	1					
ANR	11234226	ExpressionStatement	"printf ( ""\\n    static const code distfix[%u] = {"" , size )"	369:4:12130:12185	11234038	18	True				
ANR	11234227	CallExpression	"printf ( ""\\n    static const code distfix[%u] = {"" , size )"		11234038	0					
ANR	11234228	Callee	printf		11234038	0					
ANR	11234229	Identifier	printf		11234038	0					
ANR	11234230	ArgumentList	"""\\n    static const code distfix[%u] = {"""		11234038	1					
ANR	11234231	Argument	"""\\n    static const code distfix[%u] = {"""		11234038	0					
ANR	11234232	PrimaryExpression	"""\\n    static const code distfix[%u] = {"""		11234038	0					
ANR	11234233	Argument	size		11234038	1					
ANR	11234234	Identifier	size		11234038	0					
ANR	11234235	ExpressionStatement	low = 0	370:4:12191:12198	11234038	19	True				
ANR	11234236	AssignmentExpression	low = 0		11234038	0		=			
ANR	11234237	Identifier	low		11234038	0					
ANR	11234238	PrimaryExpression	0		11234038	1					
ANR	11234239	ForStatement	for ( ; ; )		11234038	20					
ANR	11234240	CompoundStatement		29:13:996:996	11234038	0					
ANR	11234241	IfStatement	if ( ( low % 6 ) == 0 )		11234038	0					
ANR	11234242	Condition	( low % 6 ) == 0	372:12:12227:12240	11234038	0	True				
ANR	11234243	EqualityExpression	( low % 6 ) == 0		11234038	0		==			
ANR	11234244	MultiplicativeExpression	low % 6		11234038	0		%			
ANR	11234245	Identifier	low		11234038	0					
ANR	11234246	PrimaryExpression	6		11234038	1					
ANR	11234247	PrimaryExpression	0		11234038	1					
ANR	11234248	ExpressionStatement	"printf ( ""\\n        "" )"	372:28:12243:12263	11234038	1	True				
ANR	11234249	CallExpression	"printf ( ""\\n        "" )"		11234038	0					
ANR	11234250	Callee	printf		11234038	0					
ANR	11234251	Identifier	printf		11234038	0					
ANR	11234252	ArgumentList	"""\\n        """		11234038	1					
ANR	11234253	Argument	"""\\n        """		11234038	0					
ANR	11234254	PrimaryExpression	"""\\n        """		11234038	0					
ANR	11234255	ExpressionStatement	"printf ( ""{%u,%u,%d}"" , state . distcode [ low ] . op , state . distcode [ low ] . bits , state . distcode [ low ] . val )"	373:8:12273:12383	11234038	1	True				
ANR	11234256	CallExpression	"printf ( ""{%u,%u,%d}"" , state . distcode [ low ] . op , state . distcode [ low ] . bits , state . distcode [ low ] . val )"		11234038	0					
ANR	11234257	Callee	printf		11234038	0					
ANR	11234258	Identifier	printf		11234038	0					
ANR	11234259	ArgumentList	"""{%u,%u,%d}"""		11234038	1					
ANR	11234260	Argument	"""{%u,%u,%d}"""		11234038	0					
ANR	11234261	PrimaryExpression	"""{%u,%u,%d}"""		11234038	0					
ANR	11234262	Argument	state . distcode [ low ] . op		11234038	1					
ANR	11234263	MemberAccess	state . distcode [ low ] . op		11234038	0					
ANR	11234264	ArrayIndexing	state . distcode [ low ]		11234038	0					
ANR	11234265	MemberAccess	state . distcode		11234038	0					
ANR	11234266	Identifier	state		11234038	0					
ANR	11234267	Identifier	distcode		11234038	1					
ANR	11234268	Identifier	low		11234038	1					
ANR	11234269	Identifier	op		11234038	1					
ANR	11234270	Argument	state . distcode [ low ] . bits		11234038	2					
ANR	11234271	MemberAccess	state . distcode [ low ] . bits		11234038	0					
ANR	11234272	ArrayIndexing	state . distcode [ low ]		11234038	0					
ANR	11234273	MemberAccess	state . distcode		11234038	0					
ANR	11234274	Identifier	state		11234038	0					
ANR	11234275	Identifier	distcode		11234038	1					
ANR	11234276	Identifier	low		11234038	1					
ANR	11234277	Identifier	bits		11234038	1					
ANR	11234278	Argument	state . distcode [ low ] . val		11234038	3					
ANR	11234279	MemberAccess	state . distcode [ low ] . val		11234038	0					
ANR	11234280	ArrayIndexing	state . distcode [ low ]		11234038	0					
ANR	11234281	MemberAccess	state . distcode		11234038	0					
ANR	11234282	Identifier	state		11234038	0					
ANR	11234283	Identifier	distcode		11234038	1					
ANR	11234284	Identifier	low		11234038	1					
ANR	11234285	Identifier	val		11234038	1					
ANR	11234286	IfStatement	if ( ++ low == size )		11234038	2					
ANR	11234287	Condition	++ low == size	375:12:12397:12409	11234038	0	True				
ANR	11234288	EqualityExpression	++ low == size		11234038	0		==			
ANR	11234289	UnaryExpression	++ low		11234038	0					
ANR	11234290	IncDec	++		11234038	0					
ANR	11234291	Identifier	low		11234038	1					
ANR	11234292	Identifier	size		11234038	1					
ANR	11234293	BreakStatement	break ;	375:27:12412:12417	11234038	1	True				
ANR	11234294	ExpressionStatement	"putchar ( ',' )"	376:8:12427:12439	11234038	3	True				
ANR	11234295	CallExpression	"putchar ( ',' )"		11234038	0					
ANR	11234296	Callee	putchar		11234038	0					
ANR	11234297	Identifier	putchar		11234038	0					
ANR	11234298	ArgumentList	"','"		11234038	1					
ANR	11234299	Argument	"','"		11234038	0					
ANR	11234300	PrimaryExpression	"','"		11234038	0					
ANR	11234301	ExpressionStatement	"puts ( ""\\n    };"" )"	378:4:12451:12467	11234038	21	True				
ANR	11234302	CallExpression	"puts ( ""\\n    };"" )"		11234038	0					
ANR	11234303	Callee	puts		11234038	0					
ANR	11234304	Identifier	puts		11234038	0					
ANR	11234305	ArgumentList	"""\\n    };"""		11234038	1					
ANR	11234306	Argument	"""\\n    };"""		11234038	0					
ANR	11234307	PrimaryExpression	"""\\n    };"""		11234038	0					
ANR	11234308	ReturnType	void		11234038	1					
ANR	11234309	Identifier	makefixed		11234038	2					
ANR	11234310	ParameterList			11234038	3					
ANR	11234311	CFGEntryNode	ENTRY		11234038		True				
ANR	11234312	CFGExitNode	EXIT		11234038		True				
ANR	11234313	InfiniteForNode	true		11234038		True				
ANR	11234314	InfiniteForNode	true		11234038		True				
ANR	11234315	Symbol	state . distcode [ low ] . bits		11234038						
ANR	11234316	Symbol	state . lencode		11234038						
ANR	11234317	Symbol	& state		11234038						
ANR	11234318	Symbol	state . distcode [ low ] . op		11234038						
ANR	11234319	Symbol	* state . lencode		11234038						
ANR	11234320	Symbol	state . lencode [ low ] . bits		11234038						
ANR	11234321	Symbol	state . lencode [ low ] . op		11234038						
ANR	11234322	Symbol	state . distcode		11234038						
ANR	11234323	Symbol	* state . distcode		11234038						
ANR	11234324	Symbol	* state		11234038						
ANR	11234325	Symbol	size		11234038						
ANR	11234326	Symbol	low		11234038						
ANR	11234327	Symbol	state . distcode [ low ] . val		11234038						
ANR	11234328	Symbol	state		11234038						
ANR	11234329	Symbol	state . lencode [ low ] . val		11234038						
ANR	11234330	Symbol	* low		11234038						
ANR	11234331	DeclStmt									
ANR	11234332	Decl							z_streamp	z_streamp	strm
ANR	11234333	DeclStmt									
ANR	11234334	Decl							const Bytef	const Bytef *	end
ANR	11234335	DeclStmt									
ANR	11234336	Decl							unsigned	unsigned	copy
ANR	11234337	DeclStmt									
ANR	11234338	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
ANR	11234339	DeclStmt									
ANR	11234340	Decl							unsigned	unsigned	dist
ANR	11234341	DeclStmt									
ANR	11234342	Decl							z_streamp	z_streamp	strm
ANR	11234343	DeclStmt									
ANR	11234344	Decl							int	int	flush
ANR	11234345	DeclStmt									
ANR	11234346	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
ANR	11234347	DeclStmt									
ANR	11234348	Decl							unsigned char FAR	unsigned char FAR *	next
ANR	11234349	DeclStmt									
ANR	11234350	Decl							unsigned char FAR	unsigned char FAR *	put
ANR	11234351	DeclStmt									
ANR	11234352	Decl							unsigned	unsigned	have
ANR	11234353	Decl							unsigned	unsigned	left
ANR	11234354	DeclStmt									
ANR	11234355	Decl							unsigned long	unsigned long	hold
ANR	11234356	DeclStmt									
ANR	11234357	Decl							unsigned	unsigned	bits
ANR	11234358	DeclStmt									
ANR	11234359	Decl							unsigned	unsigned	in
ANR	11234360	Decl							unsigned	unsigned	out
ANR	11234361	DeclStmt									
ANR	11234362	Decl							unsigned	unsigned	copy
ANR	11234363	DeclStmt									
ANR	11234364	Decl							unsigned char FAR	unsigned char FAR *	from
ANR	11234365	DeclStmt									
ANR	11234366	Decl							code	code	here
ANR	11234367	DeclStmt									
ANR	11234368	Decl							code	code	last
ANR	11234369	DeclStmt									
ANR	11234370	Decl							unsigned	unsigned	len
ANR	11234371	DeclStmt									
ANR	11234372	Decl							int	int	ret
ANR	11234373	DeclStmt									
ANR	11234374	Decl							unsigned char	unsigned char [ 4 ]	hbuf
ANR	11234375	DeclStmt									
ANR	11234376	Decl							const unsigned short	const unsigned short [ 19 ]	order
ANR	11234377	DeclStmt									
ANR	11234378	Decl							z_streamp	z_streamp	strm
ANR	11234379	DeclStmt									
ANR	11234380	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
ANR	11234381	DeclStmt									
ANR	11234382	Decl							z_streamp	z_streamp	strm
ANR	11234383	DeclStmt									
ANR	11234384	Decl							Bytef	Bytef *	dictionary
ANR	11234385	DeclStmt									
ANR	11234386	Decl							uInt	uInt *	dictLength
ANR	11234387	DeclStmt									
ANR	11234388	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
ANR	11234389	DeclStmt									
ANR	11234390	Decl							z_streamp	z_streamp	strm
ANR	11234391	DeclStmt									
ANR	11234392	Decl							const Bytef	const Bytef *	dictionary
ANR	11234393	DeclStmt									
ANR	11234394	Decl							uInt	uInt	dictLength
ANR	11234395	DeclStmt									
ANR	11234396	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
ANR	11234397	DeclStmt									
ANR	11234398	Decl							unsigned long	unsigned long	dictid
ANR	11234399	DeclStmt									
ANR	11234400	Decl							int	int	ret
ANR	11234401	DeclStmt									
ANR	11234402	Decl							z_streamp	z_streamp	strm
ANR	11234403	DeclStmt									
ANR	11234404	Decl							gz_headerp	gz_headerp	head
ANR	11234405	DeclStmt									
ANR	11234406	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
ANR	11234407	DeclStmt									
ANR	11234408	Decl							unsigned FAR	unsigned FAR *	have
ANR	11234409	DeclStmt									
ANR	11234410	Decl							const unsigned char FAR	const unsigned char FAR *	buf
ANR	11234411	DeclStmt									
ANR	11234412	Decl							unsigned	unsigned	len
ANR	11234413	DeclStmt									
ANR	11234414	Decl							unsigned	unsigned	got
ANR	11234415	DeclStmt									
ANR	11234416	Decl							unsigned	unsigned	next
ANR	11234417	DeclStmt									
ANR	11234418	Decl							z_streamp	z_streamp	strm
ANR	11234419	DeclStmt									
ANR	11234420	Decl							unsigned	unsigned	len
ANR	11234421	DeclStmt									
ANR	11234422	Decl							unsigned long	unsigned long	in
ANR	11234423	Decl							unsigned long	unsigned long	out
ANR	11234424	DeclStmt									
ANR	11234425	Decl							unsigned char	unsigned char [ 4 ]	buf
ANR	11234426	DeclStmt									
ANR	11234427	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
ANR	11234428	DeclStmt									
ANR	11234429	Decl							z_streamp	z_streamp	strm
ANR	11234430	DeclStmt									
ANR	11234431	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
ANR	11234432	DeclStmt									
ANR	11234433	Decl							z_streamp	z_streamp	dest
ANR	11234434	DeclStmt									
ANR	11234435	Decl							z_streamp	z_streamp	source
ANR	11234436	DeclStmt									
ANR	11234437	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
ANR	11234438	DeclStmt									
ANR	11234439	Decl							struct inflate_state FAR	struct inflate_state FAR *	copy
ANR	11234440	DeclStmt									
ANR	11234441	Decl							unsigned char FAR	unsigned char FAR *	window
ANR	11234442	DeclStmt									
ANR	11234443	Decl							unsigned	unsigned	wsize
ANR	11234444	DeclStmt									
ANR	11234445	Decl							z_streamp	z_streamp	strm
ANR	11234446	DeclStmt									
ANR	11234447	Decl							int	int	subvert
ANR	11234448	DeclStmt									
ANR	11234449	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
ANR	11234450	DeclStmt									
ANR	11234451	Decl							z_streamp	z_streamp	strm
ANR	11234452	DeclStmt									
ANR	11234453	Decl							int	int	check
ANR	11234454	DeclStmt									
ANR	11234455	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
ANR	11234456	DeclStmt									
ANR	11234457	Decl							z_streamp	z_streamp	strm
ANR	11234458	DeclStmt									
ANR	11234459	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
ANR	11234460	DeclStmt									
ANR	11234461	Decl							z_streamp	z_streamp	strm
ANR	11234462	DeclStmt									
ANR	11234463	Decl							struct inflate_state FAR	struct inflate_state FAR *	state
