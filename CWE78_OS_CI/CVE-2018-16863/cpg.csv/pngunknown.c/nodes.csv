command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8633598	File	data/converged/CVE-2018-16863_ghostpdl/pngunknown.c								
ANR	8633599	DeclStmt									
ANR	8633600	Decl							png_byte	png_byte *	png_const_bytep
ANR	8633601	ClassDef	<unnamed>	182:7:6387:9773							
ANR	8633602	DeclStmt									
ANR	8633603	Decl							char	char [ 5 ]	name
ANR	8633604	DeclStmt									
ANR	8633605	Decl							png_uint_32	png_uint_32	flag
ANR	8633606	DeclStmt									
ANR	8633607	Decl							png_uint_32	png_uint_32	tag
ANR	8633608	DeclStmt									
ANR	8633609	Decl							int	int	unknown
ANR	8633610	DeclStmt									
ANR	8633611	Decl							int	int	all
ANR	8633612	DeclStmt									
ANR	8633613	Decl							int	int	position
ANR	8633614	DeclStmt									
ANR	8633615	Decl							int	int	keep
ANR	8633616	DeclStmt									
ANR	8633617	Decl								 [ ]	chunk_info
ANR	8633618	Function	clear_keep	334:0:9843:9942							
ANR	8633619	FunctionDef	clear_keep ()		8633618	0					
ANR	8633620	CompoundStatement		336:0:9872:9942	8633618	0					
ANR	8633621	IdentifierDeclStatement	int i = NINFO ;	337:3:9877:9890	8633618	0	True				
ANR	8633622	IdentifierDecl	i = NINFO		8633618	0					
ANR	8633623	IdentifierDeclType	int		8633618	0					
ANR	8633624	Identifier	i		8633618	1					
ANR	8633625	AssignmentExpression	i = NINFO		8633618	2		=			
ANR	8633626	Identifier	NINFO		8633618	0					
ANR	8633627	Identifier	NINFO		8633618	1					
ANR	8633628	WhileStatement	while ( -- i >= 0 )		8633618	1					
ANR	8633629	Condition	-- i >= 0	338:10:9902:9909	8633618	0	True				
ANR	8633630	RelationalExpression	-- i >= 0		8633618	0		>=			
ANR	8633631	UnaryExpression	-- i		8633618	0					
ANR	8633632	IncDec	--		8633618	0					
ANR	8633633	Identifier	i		8633618	1					
ANR	8633634	PrimaryExpression	0		8633618	1					
ANR	8633635	ExpressionStatement	chunk_info [ i ] . keep = 0	339:6:9918:9940	8633618	1	True				
ANR	8633636	AssignmentExpression	chunk_info [ i ] . keep = 0		8633618	0		=			
ANR	8633637	MemberAccess	chunk_info [ i ] . keep		8633618	0					
ANR	8633638	ArrayIndexing	chunk_info [ i ]		8633618	0					
ANR	8633639	Identifier	chunk_info		8633618	0					
ANR	8633640	Identifier	i		8633618	1					
ANR	8633641	Identifier	keep		8633618	1					
ANR	8633642	PrimaryExpression	0		8633618	1					
ANR	8633643	ReturnType	static void		8633618	1					
ANR	8633644	Identifier	clear_keep		8633618	2					
ANR	8633645	ParameterList			8633618	3					
ANR	8633646	CFGEntryNode	ENTRY		8633618		True				
ANR	8633647	CFGExitNode	EXIT		8633618		True				
ANR	8633648	Symbol	NINFO		8633618						
ANR	8633649	Symbol	* i		8633618						
ANR	8633650	Symbol	chunk_info [ i ] . keep		8633618						
ANR	8633651	Symbol	i		8633618						
ANR	8633652	Symbol	chunk_info		8633618						
ANR	8633653	Symbol	* chunk_info		8633618						
ANR	8633654	Function	find	342:0:9945:10111							
ANR	8633655	FunctionDef	find (const char * name)		8633654	0					
ANR	8633656	CompoundStatement		344:0:9979:10111	8633654	0					
ANR	8633657	IdentifierDeclStatement	int i = NINFO ;	345:3:9984:9997	8633654	0	True				
ANR	8633658	IdentifierDecl	i = NINFO		8633654	0					
ANR	8633659	IdentifierDeclType	int		8633654	0					
ANR	8633660	Identifier	i		8633654	1					
ANR	8633661	AssignmentExpression	i = NINFO		8633654	2		=			
ANR	8633662	Identifier	NINFO		8633654	0					
ANR	8633663	Identifier	NINFO		8633654	1					
ANR	8633664	WhileStatement	while ( -- i >= 0 )		8633654	1					
ANR	8633665	Condition	-- i >= 0	346:10:10009:10016	8633654	0	True				
ANR	8633666	RelationalExpression	-- i >= 0		8633654	0		>=			
ANR	8633667	UnaryExpression	-- i		8633654	0					
ANR	8633668	IncDec	--		8633654	0					
ANR	8633669	Identifier	i		8633654	1					
ANR	8633670	PrimaryExpression	0		8633654	1					
ANR	8633671	CompoundStatement		4:3:42:42	8633654	1					
ANR	8633672	IfStatement	"if ( memcmp ( chunk_info [ i ] . name , name , 4 ) == 0 )"		8633654	0					
ANR	8633673	Condition	"memcmp ( chunk_info [ i ] . name , name , 4 ) == 0"	348:10:10034:10073	8633654	0	True				
ANR	8633674	EqualityExpression	"memcmp ( chunk_info [ i ] . name , name , 4 ) == 0"		8633654	0		==			
ANR	8633675	CallExpression	"memcmp ( chunk_info [ i ] . name , name , 4 )"		8633654	0					
ANR	8633676	Callee	memcmp		8633654	0					
ANR	8633677	Identifier	memcmp		8633654	0					
ANR	8633678	ArgumentList	chunk_info [ i ] . name		8633654	1					
ANR	8633679	Argument	chunk_info [ i ] . name		8633654	0					
ANR	8633680	MemberAccess	chunk_info [ i ] . name		8633654	0					
ANR	8633681	ArrayIndexing	chunk_info [ i ]		8633654	0					
ANR	8633682	Identifier	chunk_info		8633654	0					
ANR	8633683	Identifier	i		8633654	1					
ANR	8633684	Identifier	name		8633654	1					
ANR	8633685	Argument	name		8633654	1					
ANR	8633686	Identifier	name		8633654	0					
ANR	8633687	Argument	4		8633654	2					
ANR	8633688	PrimaryExpression	4		8633654	0					
ANR	8633689	PrimaryExpression	0		8633654	1					
ANR	8633690	BreakStatement	break ;	349:9:10085:10090	8633654	1	True				
ANR	8633691	ReturnStatement	return i ;	352:3:10101:10109	8633654	2	True				
ANR	8633692	Identifier	i		8633654	0					
ANR	8633693	ReturnType	static int		8633654	1					
ANR	8633694	Identifier	find		8633654	2					
ANR	8633695	ParameterList	const char * name		8633654	3					
ANR	8633696	Parameter	const char * name	343:5:9961:9976	8633654	0	True				
ANR	8633697	ParameterType	const char *		8633654	0					
ANR	8633698	Identifier	name		8633654	1					
ANR	8633699	CFGEntryNode	ENTRY		8633654		True				
ANR	8633700	CFGExitNode	EXIT		8633654		True				
ANR	8633701	Symbol	NINFO		8633654						
ANR	8633702	Symbol	* i		8633654						
ANR	8633703	Symbol	memcmp		8633654						
ANR	8633704	Symbol	name		8633654						
ANR	8633705	Symbol	i		8633654						
ANR	8633706	Symbol	chunk_info		8633654						
ANR	8633707	Symbol	* chunk_info		8633654						
ANR	8633708	Symbol	chunk_info [ i ] . name		8633654						
ANR	8633709	Function	findb	355:0:10114:10285							
ANR	8633710	FunctionDef	findb (const png_byte * name)		8633709	0					
ANR	8633711	CompoundStatement		357:0:10153:10285	8633709	0					
ANR	8633712	IdentifierDeclStatement	int i = NINFO ;	358:3:10158:10171	8633709	0	True				
ANR	8633713	IdentifierDecl	i = NINFO		8633709	0					
ANR	8633714	IdentifierDeclType	int		8633709	0					
ANR	8633715	Identifier	i		8633709	1					
ANR	8633716	AssignmentExpression	i = NINFO		8633709	2		=			
ANR	8633717	Identifier	NINFO		8633709	0					
ANR	8633718	Identifier	NINFO		8633709	1					
ANR	8633719	WhileStatement	while ( -- i >= 0 )		8633709	1					
ANR	8633720	Condition	-- i >= 0	359:10:10183:10190	8633709	0	True				
ANR	8633721	RelationalExpression	-- i >= 0		8633709	0		>=			
ANR	8633722	UnaryExpression	-- i		8633709	0					
ANR	8633723	IncDec	--		8633709	0					
ANR	8633724	Identifier	i		8633709	1					
ANR	8633725	PrimaryExpression	0		8633709	1					
ANR	8633726	CompoundStatement		4:3:42:42	8633709	1					
ANR	8633727	IfStatement	"if ( memcmp ( chunk_info [ i ] . name , name , 4 ) == 0 )"		8633709	0					
ANR	8633728	Condition	"memcmp ( chunk_info [ i ] . name , name , 4 ) == 0"	361:10:10208:10247	8633709	0	True				
ANR	8633729	EqualityExpression	"memcmp ( chunk_info [ i ] . name , name , 4 ) == 0"		8633709	0		==			
ANR	8633730	CallExpression	"memcmp ( chunk_info [ i ] . name , name , 4 )"		8633709	0					
ANR	8633731	Callee	memcmp		8633709	0					
ANR	8633732	Identifier	memcmp		8633709	0					
ANR	8633733	ArgumentList	chunk_info [ i ] . name		8633709	1					
ANR	8633734	Argument	chunk_info [ i ] . name		8633709	0					
ANR	8633735	MemberAccess	chunk_info [ i ] . name		8633709	0					
ANR	8633736	ArrayIndexing	chunk_info [ i ]		8633709	0					
ANR	8633737	Identifier	chunk_info		8633709	0					
ANR	8633738	Identifier	i		8633709	1					
ANR	8633739	Identifier	name		8633709	1					
ANR	8633740	Argument	name		8633709	1					
ANR	8633741	Identifier	name		8633709	0					
ANR	8633742	Argument	4		8633709	2					
ANR	8633743	PrimaryExpression	4		8633709	0					
ANR	8633744	PrimaryExpression	0		8633709	1					
ANR	8633745	BreakStatement	break ;	362:9:10259:10264	8633709	1	True				
ANR	8633746	ReturnStatement	return i ;	365:3:10275:10283	8633709	2	True				
ANR	8633747	Identifier	i		8633709	0					
ANR	8633748	ReturnType	static int		8633709	1					
ANR	8633749	Identifier	findb		8633709	2					
ANR	8633750	ParameterList	const png_byte * name		8633709	3					
ANR	8633751	Parameter	const png_byte * name	356:6:10131:10150	8633709	0	True				
ANR	8633752	ParameterType	const png_byte *		8633709	0					
ANR	8633753	Identifier	name		8633709	1					
ANR	8633754	CFGEntryNode	ENTRY		8633709		True				
ANR	8633755	CFGExitNode	EXIT		8633709		True				
ANR	8633756	Symbol	NINFO		8633709						
ANR	8633757	Symbol	* i		8633709						
ANR	8633758	Symbol	memcmp		8633709						
ANR	8633759	Symbol	name		8633709						
ANR	8633760	Symbol	i		8633709						
ANR	8633761	Symbol	chunk_info		8633709						
ANR	8633762	Symbol	* chunk_info		8633709						
ANR	8633763	Symbol	chunk_info [ i ] . name		8633709						
ANR	8633764	Function	find_by_flag	368:0:10288:10478							
ANR	8633765	FunctionDef	find_by_flag (png_uint_32 flag)		8633764	0					
ANR	8633766	CompoundStatement		370:0:10330:10478	8633764	0					
ANR	8633767	IdentifierDeclStatement	int i = NINFO ;	371:3:10335:10348	8633764	0	True				
ANR	8633768	IdentifierDecl	i = NINFO		8633764	0					
ANR	8633769	IdentifierDeclType	int		8633764	0					
ANR	8633770	Identifier	i		8633764	1					
ANR	8633771	AssignmentExpression	i = NINFO		8633764	2		=			
ANR	8633772	Identifier	NINFO		8633764	0					
ANR	8633773	Identifier	NINFO		8633764	1					
ANR	8633774	WhileStatement	while ( -- i >= 0 )		8633764	1					
ANR	8633775	Condition	-- i >= 0	373:10:10361:10368	8633764	0	True				
ANR	8633776	RelationalExpression	-- i >= 0		8633764	0		>=			
ANR	8633777	UnaryExpression	-- i		8633764	0					
ANR	8633778	IncDec	--		8633764	0					
ANR	8633779	Identifier	i		8633764	1					
ANR	8633780	PrimaryExpression	0		8633764	1					
ANR	8633781	IfStatement	if ( chunk_info [ i ] . flag == flag )		8633764	1					
ANR	8633782	Condition	chunk_info [ i ] . flag == flag	373:24:10375:10400	8633764	0	True				
ANR	8633783	EqualityExpression	chunk_info [ i ] . flag == flag		8633764	0		==			
ANR	8633784	MemberAccess	chunk_info [ i ] . flag		8633764	0					
ANR	8633785	ArrayIndexing	chunk_info [ i ]		8633764	0					
ANR	8633786	Identifier	chunk_info		8633764	0					
ANR	8633787	Identifier	i		8633764	1					
ANR	8633788	Identifier	flag		8633764	1					
ANR	8633789	Identifier	flag		8633764	1					
ANR	8633790	ReturnStatement	return i ;	373:52:10403:10411	8633764	1	True				
ANR	8633791	Identifier	i		8633764	0					
ANR	8633792	ExpressionStatement	"fprintf ( stderr , ""pngunknown: internal error\\n"" )"	375:3:10417:10464	8633764	2	True				
ANR	8633793	CallExpression	"fprintf ( stderr , ""pngunknown: internal error\\n"" )"		8633764	0					
ANR	8633794	Callee	fprintf		8633764	0					
ANR	8633795	Identifier	fprintf		8633764	0					
ANR	8633796	ArgumentList	stderr		8633764	1					
ANR	8633797	Argument	stderr		8633764	0					
ANR	8633798	Identifier	stderr		8633764	0					
ANR	8633799	Argument	"""pngunknown: internal error\\n"""		8633764	1					
ANR	8633800	PrimaryExpression	"""pngunknown: internal error\\n"""		8633764	0					
ANR	8633801	ExpressionStatement	exit ( 4 )	376:3:10469:10476	8633764	3	True				
ANR	8633802	CallExpression	exit ( 4 )		8633764	0					
ANR	8633803	Callee	exit		8633764	0					
ANR	8633804	Identifier	exit		8633764	0					
ANR	8633805	ArgumentList	4		8633764	1					
ANR	8633806	Argument	4		8633764	0					
ANR	8633807	PrimaryExpression	4		8633764	0					
ANR	8633808	ReturnType	static int		8633764	1					
ANR	8633809	Identifier	find_by_flag		8633764	2					
ANR	8633810	ParameterList	png_uint_32 flag		8633764	3					
ANR	8633811	Parameter	png_uint_32 flag	369:13:10312:10327	8633764	0	True				
ANR	8633812	ParameterType	png_uint_32		8633764	0					
ANR	8633813	Identifier	flag		8633764	1					
ANR	8633814	CFGEntryNode	ENTRY		8633764		True				
ANR	8633815	CFGExitNode	EXIT		8633764		True				
ANR	8633816	Symbol	NINFO		8633764						
ANR	8633817	Symbol	chunk_info [ i ] . flag		8633764						
ANR	8633818	Symbol	flag		8633764						
ANR	8633819	Symbol	* i		8633764						
ANR	8633820	Symbol	i		8633764						
ANR	8633821	Symbol	stderr		8633764						
ANR	8633822	Symbol	chunk_info		8633764						
ANR	8633823	Symbol	* chunk_info		8633764						
ANR	8633824	Function	ancillary	379:0:10481:10598							
ANR	8633825	FunctionDef	ancillary (const char * name)		8633824	0					
ANR	8633826	CompoundStatement		381:0:10520:10598	8633824	0					
ANR	8633827	ReturnStatement	"return PNG_CHUNK_ANCILLARY ( PNG_U32 ( name [ 0 ] , name [ 1 ] , name [ 2 ] , name [ 3 ] ) ) ;"	382:3:10525:10596	8633824	0	True				
ANR	8633828	CallExpression	"PNG_CHUNK_ANCILLARY ( PNG_U32 ( name [ 0 ] , name [ 1 ] , name [ 2 ] , name [ 3 ] ) )"		8633824	0					
ANR	8633829	Callee	PNG_CHUNK_ANCILLARY		8633824	0					
ANR	8633830	Identifier	PNG_CHUNK_ANCILLARY		8633824	0					
ANR	8633831	ArgumentList	"PNG_U32 ( name [ 0 ] , name [ 1 ] , name [ 2 ] , name [ 3 ] )"		8633824	1					
ANR	8633832	Argument	"PNG_U32 ( name [ 0 ] , name [ 1 ] , name [ 2 ] , name [ 3 ] )"		8633824	0					
ANR	8633833	CallExpression	"PNG_U32 ( name [ 0 ] , name [ 1 ] , name [ 2 ] , name [ 3 ] )"		8633824	0					
ANR	8633834	Callee	PNG_U32		8633824	0					
ANR	8633835	Identifier	PNG_U32		8633824	0					
ANR	8633836	ArgumentList	name [ 0 ]		8633824	1					
ANR	8633837	Argument	name [ 0 ]		8633824	0					
ANR	8633838	ArrayIndexing	name [ 0 ]		8633824	0					
ANR	8633839	Identifier	name		8633824	0					
ANR	8633840	PrimaryExpression	0		8633824	1					
ANR	8633841	Argument	name [ 1 ]		8633824	1					
ANR	8633842	ArrayIndexing	name [ 1 ]		8633824	0					
ANR	8633843	Identifier	name		8633824	0					
ANR	8633844	PrimaryExpression	1		8633824	1					
ANR	8633845	Argument	name [ 2 ]		8633824	2					
ANR	8633846	ArrayIndexing	name [ 2 ]		8633824	0					
ANR	8633847	Identifier	name		8633824	0					
ANR	8633848	PrimaryExpression	2		8633824	1					
ANR	8633849	Argument	name [ 3 ]		8633824	3					
ANR	8633850	ArrayIndexing	name [ 3 ]		8633824	0					
ANR	8633851	Identifier	name		8633824	0					
ANR	8633852	PrimaryExpression	3		8633824	1					
ANR	8633853	ReturnType	static int		8633824	1					
ANR	8633854	Identifier	ancillary		8633824	2					
ANR	8633855	ParameterList	const char * name		8633824	3					
ANR	8633856	Parameter	const char * name	380:10:10502:10517	8633824	0	True				
ANR	8633857	ParameterType	const char *		8633824	0					
ANR	8633858	Identifier	name		8633824	1					
ANR	8633859	CFGEntryNode	ENTRY		8633824		True				
ANR	8633860	CFGExitNode	EXIT		8633824		True				
ANR	8633861	Symbol	* name		8633824						
ANR	8633862	Symbol	name		8633824						
ANR	8633863	Symbol	PNG_CHUNK_ANCILLARY		8633824						
ANR	8633864	Symbol	PNG_U32		8633824						
ANR	8633865	Function	ancillaryb	386:0:10642:10764							
ANR	8633866	FunctionDef	ancillaryb (const png_byte * name)		8633865	0					
ANR	8633867	CompoundStatement		388:0:10686:10764	8633865	0					
ANR	8633868	ReturnStatement	"return PNG_CHUNK_ANCILLARY ( PNG_U32 ( name [ 0 ] , name [ 1 ] , name [ 2 ] , name [ 3 ] ) ) ;"	389:3:10691:10762	8633865	0	True				
ANR	8633869	CallExpression	"PNG_CHUNK_ANCILLARY ( PNG_U32 ( name [ 0 ] , name [ 1 ] , name [ 2 ] , name [ 3 ] ) )"		8633865	0					
ANR	8633870	Callee	PNG_CHUNK_ANCILLARY		8633865	0					
ANR	8633871	Identifier	PNG_CHUNK_ANCILLARY		8633865	0					
ANR	8633872	ArgumentList	"PNG_U32 ( name [ 0 ] , name [ 1 ] , name [ 2 ] , name [ 3 ] )"		8633865	1					
ANR	8633873	Argument	"PNG_U32 ( name [ 0 ] , name [ 1 ] , name [ 2 ] , name [ 3 ] )"		8633865	0					
ANR	8633874	CallExpression	"PNG_U32 ( name [ 0 ] , name [ 1 ] , name [ 2 ] , name [ 3 ] )"		8633865	0					
ANR	8633875	Callee	PNG_U32		8633865	0					
ANR	8633876	Identifier	PNG_U32		8633865	0					
ANR	8633877	ArgumentList	name [ 0 ]		8633865	1					
ANR	8633878	Argument	name [ 0 ]		8633865	0					
ANR	8633879	ArrayIndexing	name [ 0 ]		8633865	0					
ANR	8633880	Identifier	name		8633865	0					
ANR	8633881	PrimaryExpression	0		8633865	1					
ANR	8633882	Argument	name [ 1 ]		8633865	1					
ANR	8633883	ArrayIndexing	name [ 1 ]		8633865	0					
ANR	8633884	Identifier	name		8633865	0					
ANR	8633885	PrimaryExpression	1		8633865	1					
ANR	8633886	Argument	name [ 2 ]		8633865	2					
ANR	8633887	ArrayIndexing	name [ 2 ]		8633865	0					
ANR	8633888	Identifier	name		8633865	0					
ANR	8633889	PrimaryExpression	2		8633865	1					
ANR	8633890	Argument	name [ 3 ]		8633865	3					
ANR	8633891	ArrayIndexing	name [ 3 ]		8633865	0					
ANR	8633892	Identifier	name		8633865	0					
ANR	8633893	PrimaryExpression	3		8633865	1					
ANR	8633894	ReturnType	static int		8633865	1					
ANR	8633895	Identifier	ancillaryb		8633865	2					
ANR	8633896	ParameterList	const png_byte * name		8633865	3					
ANR	8633897	Parameter	const png_byte * name	387:11:10664:10683	8633865	0	True				
ANR	8633898	ParameterType	const png_byte *		8633865	0					
ANR	8633899	Identifier	name		8633865	1					
ANR	8633900	CFGEntryNode	ENTRY		8633865		True				
ANR	8633901	CFGExitNode	EXIT		8633865		True				
ANR	8633902	Symbol	* name		8633865						
ANR	8633903	Symbol	name		8633865						
ANR	8633904	Symbol	PNG_CHUNK_ANCILLARY		8633865						
ANR	8633905	Symbol	PNG_U32		8633865						
ANR	8633906	ClassDef	<unnamed>	394:8:10809:11138							
ANR	8633907	DeclStmt									
ANR	8633908	Decl							jmp_buf	jmp_buf	error_return
ANR	8633909	DeclStmt									
ANR	8633910	Decl							png_structp	png_structp	png_ptr
ANR	8633911	DeclStmt									
ANR	8633912	Decl							png_infop	png_infop	info_ptr
ANR	8633913	Decl							png_infop	png_infop	end_ptr
ANR	8633914	DeclStmt									
ANR	8633915	Decl							png_uint_32	png_uint_32	before_IDAT
ANR	8633916	DeclStmt									
ANR	8633917	Decl							png_uint_32	png_uint_32	after_IDAT
ANR	8633918	DeclStmt									
ANR	8633919	Decl							int	int	error_count
ANR	8633920	DeclStmt									
ANR	8633921	Decl							int	int	warning_count
ANR	8633922	DeclStmt									
ANR	8633923	Decl							int	int	keep
ANR	8633924	DeclStmt									
ANR	8633925	Decl							const char	const char *	program
ANR	8633926	DeclStmt									
ANR	8633927	Decl							const char	const char *	file
ANR	8633928	DeclStmt									
ANR	8633929	Decl							const char	const char *	test
ANR	8633930	DeclStmt									
ANR	8633931	Decl									display
ANR	8633932	DeclStmt									
ANR	8633933	Decl							const char	const char [ ]	init
ANR	8633934	DeclStmt									
ANR	8633935	Decl							const char	const char [ ]	cmd
ANR	8633936	Function	init_display	412:0:11229:11483							
ANR	8633937	FunctionDef	"init_display (display * d , const char * program)"		8633936	0					
ANR	8633938	CompoundStatement		414:0:11287:11483	8633936	0					
ANR	8633939	ExpressionStatement	"memset ( d , 0 , sizeof * d )"	415:3:11292:11315	8633936	0	True				
ANR	8633940	CallExpression	"memset ( d , 0 , sizeof * d )"		8633936	0					
ANR	8633941	Callee	memset		8633936	0					
ANR	8633942	Identifier	memset		8633936	0					
ANR	8633943	ArgumentList	d		8633936	1					
ANR	8633944	Argument	d		8633936	0					
ANR	8633945	Identifier	d		8633936	0					
ANR	8633946	Argument	0		8633936	1					
ANR	8633947	PrimaryExpression	0		8633936	0					
ANR	8633948	Argument	sizeof * d		8633936	2					
ANR	8633949	SizeofExpression	sizeof * d		8633936	0					
ANR	8633950	Sizeof	sizeof		8633936	0					
ANR	8633951	UnaryOperationExpression	* d		8633936	1					
ANR	8633952	UnaryOperator	*		8633936	0					
ANR	8633953	Identifier	d		8633936	1					
ANR	8633954	ExpressionStatement	d -> png_ptr = NULL	416:3:11320:11337	8633936	1	True				
ANR	8633955	AssignmentExpression	d -> png_ptr = NULL		8633936	0		=			
ANR	8633956	PtrMemberAccess	d -> png_ptr		8633936	0					
ANR	8633957	Identifier	d		8633936	0					
ANR	8633958	Identifier	png_ptr		8633936	1					
ANR	8633959	Identifier	NULL		8633936	1					
ANR	8633960	ExpressionStatement	d -> info_ptr = d -> end_ptr = NULL	417:3:11342:11373	8633936	2	True				
ANR	8633961	AssignmentExpression	d -> info_ptr = d -> end_ptr = NULL		8633936	0		=			
ANR	8633962	PtrMemberAccess	d -> info_ptr		8633936	0					
ANR	8633963	Identifier	d		8633936	0					
ANR	8633964	Identifier	info_ptr		8633936	1					
ANR	8633965	AssignmentExpression	d -> end_ptr = NULL		8633936	1		=			
ANR	8633966	PtrMemberAccess	d -> end_ptr		8633936	0					
ANR	8633967	Identifier	d		8633936	0					
ANR	8633968	Identifier	end_ptr		8633936	1					
ANR	8633969	Identifier	NULL		8633936	1					
ANR	8633970	ExpressionStatement	d -> error_count = d -> warning_count = 0	418:3:11378:11415	8633936	3	True				
ANR	8633971	AssignmentExpression	d -> error_count = d -> warning_count = 0		8633936	0		=			
ANR	8633972	PtrMemberAccess	d -> error_count		8633936	0					
ANR	8633973	Identifier	d		8633936	0					
ANR	8633974	Identifier	error_count		8633936	1					
ANR	8633975	AssignmentExpression	d -> warning_count = 0		8633936	1		=			
ANR	8633976	PtrMemberAccess	d -> warning_count		8633936	0					
ANR	8633977	Identifier	d		8633936	0					
ANR	8633978	Identifier	warning_count		8633936	1					
ANR	8633979	PrimaryExpression	0		8633936	1					
ANR	8633980	ExpressionStatement	d -> program = program	419:3:11420:11440	8633936	4	True				
ANR	8633981	AssignmentExpression	d -> program = program		8633936	0		=			
ANR	8633982	PtrMemberAccess	d -> program		8633936	0					
ANR	8633983	Identifier	d		8633936	0					
ANR	8633984	Identifier	program		8633936	1					
ANR	8633985	Identifier	program		8633936	1					
ANR	8633986	ExpressionStatement	d -> file = program	420:3:11445:11462	8633936	5	True				
ANR	8633987	AssignmentExpression	d -> file = program		8633936	0		=			
ANR	8633988	PtrMemberAccess	d -> file		8633936	0					
ANR	8633989	Identifier	d		8633936	0					
ANR	8633990	Identifier	file		8633936	1					
ANR	8633991	Identifier	program		8633936	1					
ANR	8633992	ExpressionStatement	d -> test = init	421:3:11467:11481	8633936	6	True				
ANR	8633993	AssignmentExpression	d -> test = init		8633936	0		=			
ANR	8633994	PtrMemberAccess	d -> test		8633936	0					
ANR	8633995	Identifier	d		8633936	0					
ANR	8633996	Identifier	test		8633936	1					
ANR	8633997	Identifier	init		8633936	1					
ANR	8633998	ReturnType	static void		8633936	1					
ANR	8633999	Identifier	init_display		8633936	2					
ANR	8634000	ParameterList	"display * d , const char * program"		8633936	3					
ANR	8634001	Parameter	display * d	413:13:11254:11263	8633936	0	True				
ANR	8634002	ParameterType	display *		8633936	0					
ANR	8634003	Identifier	d		8633936	1					
ANR	8634004	Parameter	const char * program	413:25:11266:11284	8633936	1	True				
ANR	8634005	ParameterType	const char *		8633936	0					
ANR	8634006	Identifier	program		8633936	1					
ANR	8634007	CFGEntryNode	ENTRY		8633936		True				
ANR	8634008	CFGExitNode	EXIT		8633936		True				
ANR	8634009	Symbol	init		8633936						
ANR	8634010	Symbol	NULL		8633936						
ANR	8634011	Symbol	d -> end_ptr		8633936						
ANR	8634012	Symbol	d		8633936						
ANR	8634013	Symbol	d -> png_ptr		8633936						
ANR	8634014	Symbol	program		8633936						
ANR	8634015	Symbol	d -> error_count		8633936						
ANR	8634016	Symbol	* d		8633936						
ANR	8634017	Symbol	d -> warning_count		8633936						
ANR	8634018	Symbol	d -> file		8633936						
ANR	8634019	Symbol	d -> program		8633936						
ANR	8634020	Symbol	d -> test		8633936						
ANR	8634021	Symbol	d -> info_ptr		8633936						
ANR	8634022	Function	clean_display	424:0:11486:11845							
ANR	8634023	FunctionDef	clean_display (display * d)		8634022	0					
ANR	8634024	CompoundStatement		426:0:11524:11845	8634022	0					
ANR	8634025	ExpressionStatement	"png_destroy_read_struct ( & d -> png_ptr , & d -> info_ptr , & d -> end_ptr )"	427:3:11529:11592	8634022	0	True				
ANR	8634026	CallExpression	"png_destroy_read_struct ( & d -> png_ptr , & d -> info_ptr , & d -> end_ptr )"		8634022	0					
ANR	8634027	Callee	png_destroy_read_struct		8634022	0					
ANR	8634028	Identifier	png_destroy_read_struct		8634022	0					
ANR	8634029	ArgumentList	& d -> png_ptr		8634022	1					
ANR	8634030	Argument	& d -> png_ptr		8634022	0					
ANR	8634031	UnaryOperationExpression	& d -> png_ptr		8634022	0					
ANR	8634032	UnaryOperator	&		8634022	0					
ANR	8634033	PtrMemberAccess	d -> png_ptr		8634022	1					
ANR	8634034	Identifier	d		8634022	0					
ANR	8634035	Identifier	png_ptr		8634022	1					
ANR	8634036	Argument	& d -> info_ptr		8634022	1					
ANR	8634037	UnaryOperationExpression	& d -> info_ptr		8634022	0					
ANR	8634038	UnaryOperator	&		8634022	0					
ANR	8634039	PtrMemberAccess	d -> info_ptr		8634022	1					
ANR	8634040	Identifier	d		8634022	0					
ANR	8634041	Identifier	info_ptr		8634022	1					
ANR	8634042	Argument	& d -> end_ptr		8634022	2					
ANR	8634043	UnaryOperationExpression	& d -> end_ptr		8634022	0					
ANR	8634044	UnaryOperator	&		8634022	0					
ANR	8634045	PtrMemberAccess	d -> end_ptr		8634022	1					
ANR	8634046	Identifier	d		8634022	0					
ANR	8634047	Identifier	end_ptr		8634022	1					
ANR	8634048	IfStatement	if ( d -> png_ptr != NULL || d -> info_ptr != NULL || d -> end_ptr != NULL )		8634022	1					
ANR	8634049	Condition	d -> png_ptr != NULL || d -> info_ptr != NULL || d -> end_ptr != NULL	430:7:11662:11724	8634022	0	True				
ANR	8634050	OrExpression	d -> png_ptr != NULL || d -> info_ptr != NULL || d -> end_ptr != NULL		8634022	0		||			
ANR	8634051	EqualityExpression	d -> png_ptr != NULL		8634022	0		!=			
ANR	8634052	PtrMemberAccess	d -> png_ptr		8634022	0					
ANR	8634053	Identifier	d		8634022	0					
ANR	8634054	Identifier	png_ptr		8634022	1					
ANR	8634055	Identifier	NULL		8634022	1					
ANR	8634056	OrExpression	d -> info_ptr != NULL || d -> end_ptr != NULL		8634022	1		||			
ANR	8634057	EqualityExpression	d -> info_ptr != NULL		8634022	0		!=			
ANR	8634058	PtrMemberAccess	d -> info_ptr		8634022	0					
ANR	8634059	Identifier	d		8634022	0					
ANR	8634060	Identifier	info_ptr		8634022	1					
ANR	8634061	Identifier	NULL		8634022	1					
ANR	8634062	EqualityExpression	d -> end_ptr != NULL		8634022	1		!=			
ANR	8634063	PtrMemberAccess	d -> end_ptr		8634022	0					
ANR	8634064	Identifier	d		8634022	0					
ANR	8634065	Identifier	end_ptr		8634022	1					
ANR	8634066	Identifier	NULL		8634022	1					
ANR	8634067	CompoundStatement		6:3:205:205	8634022	1					
ANR	8634068	ExpressionStatement	"fprintf ( stderr , ""%s(%s): png_destroy_read_struct error\\n"" , d -> file , d -> test )"	432:6:11738:11823	8634022	0	True				
ANR	8634069	CallExpression	"fprintf ( stderr , ""%s(%s): png_destroy_read_struct error\\n"" , d -> file , d -> test )"		8634022	0					
ANR	8634070	Callee	fprintf		8634022	0					
ANR	8634071	Identifier	fprintf		8634022	0					
ANR	8634072	ArgumentList	stderr		8634022	1					
ANR	8634073	Argument	stderr		8634022	0					
ANR	8634074	Identifier	stderr		8634022	0					
ANR	8634075	Argument	"""%s(%s): png_destroy_read_struct error\\n"""		8634022	1					
ANR	8634076	PrimaryExpression	"""%s(%s): png_destroy_read_struct error\\n"""		8634022	0					
ANR	8634077	Argument	d -> file		8634022	2					
ANR	8634078	PtrMemberAccess	d -> file		8634022	0					
ANR	8634079	Identifier	d		8634022	0					
ANR	8634080	Identifier	file		8634022	1					
ANR	8634081	Argument	d -> test		8634022	3					
ANR	8634082	PtrMemberAccess	d -> test		8634022	0					
ANR	8634083	Identifier	d		8634022	0					
ANR	8634084	Identifier	test		8634022	1					
ANR	8634085	ExpressionStatement	exit ( 1 )	434:6:11831:11838	8634022	1	True				
ANR	8634086	CallExpression	exit ( 1 )		8634022	0					
ANR	8634087	Callee	exit		8634022	0					
ANR	8634088	Identifier	exit		8634022	0					
ANR	8634089	ArgumentList	1		8634022	1					
ANR	8634090	Argument	1		8634022	0					
ANR	8634091	PrimaryExpression	1		8634022	0					
ANR	8634092	ReturnType	static void		8634022	1					
ANR	8634093	Identifier	clean_display		8634022	2					
ANR	8634094	ParameterList	display * d		8634022	3					
ANR	8634095	Parameter	display * d	425:14:11512:11521	8634022	0	True				
ANR	8634096	ParameterType	display *		8634022	0					
ANR	8634097	Identifier	d		8634022	1					
ANR	8634098	CFGEntryNode	ENTRY		8634022		True				
ANR	8634099	CFGExitNode	EXIT		8634022		True				
ANR	8634100	Symbol	& d -> end_ptr		8634022						
ANR	8634101	Symbol	NULL		8634022						
ANR	8634102	Symbol	d -> end_ptr		8634022						
ANR	8634103	Symbol	d		8634022						
ANR	8634104	Symbol	d -> png_ptr		8634022						
ANR	8634105	Symbol	d -> file		8634022						
ANR	8634106	Symbol	d -> test		8634022						
ANR	8634107	Symbol	stderr		8634022						
ANR	8634108	Symbol	* d		8634022						
ANR	8634109	Symbol	d -> info_ptr		8634022						
ANR	8634110	Symbol	& d -> info_ptr		8634022						
ANR	8634111	Symbol	& d -> png_ptr		8634022						
ANR	8634112	Function	display_rc	454:0:12252:12366							
ANR	8634113	FunctionDef	"display_rc (const display * d , int strict)"		8634112	0					
ANR	8634114	CompoundStatement		456:0:12304:12366	8634112	0					
ANR	8634115	ReturnStatement	return d -> error_count + ( strict ? d -> warning_count : 0 ) ;	457:3:12309:12364	8634112	0	True				
ANR	8634116	AdditiveExpression	d -> error_count + ( strict ? d -> warning_count : 0 )		8634112	0		+			
ANR	8634117	PtrMemberAccess	d -> error_count		8634112	0					
ANR	8634118	Identifier	d		8634112	0					
ANR	8634119	Identifier	error_count		8634112	1					
ANR	8634120	ConditionalExpression	strict ? d -> warning_count : 0		8634112	1					
ANR	8634121	Condition	strict		8634112	0					
ANR	8634122	Identifier	strict		8634112	0					
ANR	8634123	PtrMemberAccess	d -> warning_count		8634112	1					
ANR	8634124	Identifier	d		8634112	0					
ANR	8634125	Identifier	warning_count		8634112	1					
ANR	8634126	PrimaryExpression	0		8634112	2					
ANR	8634127	ReturnType	static int		8634112	1					
ANR	8634128	Identifier	display_rc		8634112	2					
ANR	8634129	ParameterList	"const display * d , int strict"		8634112	3					
ANR	8634130	Parameter	const display * d	455:11:12274:12289	8634112	0	True				
ANR	8634131	ParameterType	const display *		8634112	0					
ANR	8634132	Identifier	d		8634112	1					
ANR	8634133	Parameter	int strict	455:29:12292:12301	8634112	1	True				
ANR	8634134	ParameterType	int		8634112	0					
ANR	8634135	Identifier	strict		8634112	1					
ANR	8634136	CFGEntryNode	ENTRY		8634112		True				
ANR	8634137	CFGExitNode	EXIT		8634112		True				
ANR	8634138	Symbol	d		8634112						
ANR	8634139	Symbol	d -> warning_count		8634112						
ANR	8634140	Symbol	strict		8634112						
ANR	8634141	Symbol	d -> error_count		8634112						
ANR	8634142	Symbol	* d		8634112						
ANR	8634143	DeclStmt									
ANR	8634144	Decl							display	display *	d
ANR	8634145	Function	warning	470:0:12672:12904							
ANR	8634146	FunctionDef	"warning (png_structp png_ptr , const char * message)"		8634145	0					
ANR	8634147	CompoundStatement		472:0:12743:12904	8634145	0					
ANR	8634148	IdentifierDeclStatement	display * d = ( display * ) png_get_error_ptr ( png_ptr ) ;	473:3:12748:12797	8634145	0	True				
ANR	8634149	IdentifierDecl	* d = ( display * ) png_get_error_ptr ( png_ptr )		8634145	0					
ANR	8634150	IdentifierDeclType	display *		8634145	0					
ANR	8634151	Identifier	d		8634145	1					
ANR	8634152	AssignmentExpression	* d = ( display * ) png_get_error_ptr ( png_ptr )		8634145	2		=			
ANR	8634153	Identifier	d		8634145	0					
ANR	8634154	CastExpression	( display * ) png_get_error_ptr ( png_ptr )		8634145	1					
ANR	8634155	CastTarget	display *		8634145	0					
ANR	8634156	CallExpression	png_get_error_ptr ( png_ptr )		8634145	1					
ANR	8634157	Callee	png_get_error_ptr		8634145	0					
ANR	8634158	Identifier	png_get_error_ptr		8634145	0					
ANR	8634159	ArgumentList	png_ptr		8634145	1					
ANR	8634160	Argument	png_ptr		8634145	0					
ANR	8634161	Identifier	png_ptr		8634145	0					
ANR	8634162	ExpressionStatement	"fprintf ( stderr , ""%s(%s): libpng warning: %s\\n"" , d -> file , d -> test , message )"	475:3:12803:12877	8634145	1	True				
ANR	8634163	CallExpression	"fprintf ( stderr , ""%s(%s): libpng warning: %s\\n"" , d -> file , d -> test , message )"		8634145	0					
ANR	8634164	Callee	fprintf		8634145	0					
ANR	8634165	Identifier	fprintf		8634145	0					
ANR	8634166	ArgumentList	stderr		8634145	1					
ANR	8634167	Argument	stderr		8634145	0					
ANR	8634168	Identifier	stderr		8634145	0					
ANR	8634169	Argument	"""%s(%s): libpng warning: %s\\n"""		8634145	1					
ANR	8634170	PrimaryExpression	"""%s(%s): libpng warning: %s\\n"""		8634145	0					
ANR	8634171	Argument	d -> file		8634145	2					
ANR	8634172	PtrMemberAccess	d -> file		8634145	0					
ANR	8634173	Identifier	d		8634145	0					
ANR	8634174	Identifier	file		8634145	1					
ANR	8634175	Argument	d -> test		8634145	3					
ANR	8634176	PtrMemberAccess	d -> test		8634145	0					
ANR	8634177	Identifier	d		8634145	0					
ANR	8634178	Identifier	test		8634145	1					
ANR	8634179	Argument	message		8634145	4					
ANR	8634180	Identifier	message		8634145	0					
ANR	8634181	ExpressionStatement	++ ( d -> warning_count )	476:3:12882:12902	8634145	2	True				
ANR	8634182	UnaryExpression	++ ( d -> warning_count )		8634145	0					
ANR	8634183	IncDec	++		8634145	0					
ANR	8634184	PtrMemberAccess	d -> warning_count		8634145	1					
ANR	8634185	Identifier	d		8634145	0					
ANR	8634186	Identifier	warning_count		8634145	1					
ANR	8634187	ReturnType	static void PNGCBAPI		8634145	1					
ANR	8634188	Identifier	warning		8634145	2					
ANR	8634189	ParameterList	"png_structp png_ptr , const char * message"		8634145	3					
ANR	8634190	Parameter	png_structp png_ptr	471:8:12701:12719	8634145	0	True				
ANR	8634191	ParameterType	png_structp		8634145	0					
ANR	8634192	Identifier	png_ptr		8634145	1					
ANR	8634193	Parameter	const char * message	471:29:12722:12740	8634145	1	True				
ANR	8634194	ParameterType	const char *		8634145	0					
ANR	8634195	Identifier	message		8634145	1					
ANR	8634196	CFGEntryNode	ENTRY		8634145		True				
ANR	8634197	CFGExitNode	EXIT		8634145		True				
ANR	8634198	Symbol	d		8634145						
ANR	8634199	Symbol	png_get_error_ptr		8634145						
ANR	8634200	Symbol	d -> file		8634145						
ANR	8634201	Symbol	d -> test		8634145						
ANR	8634202	Symbol	message		8634145						
ANR	8634203	Symbol	stderr		8634145						
ANR	8634204	Symbol	* d		8634145						
ANR	8634205	Symbol	png_ptr		8634145						
ANR	8634206	Function	get_valid	479:0:12907:13707							
ANR	8634207	FunctionDef	"get_valid (display * d , png_infop info_ptr)"		8634206	0					
ANR	8634208	CompoundStatement		481:0:12968:13707	8634206	0					
ANR	8634209	IdentifierDeclStatement	"png_uint_32 flags = png_get_valid ( d -> png_ptr , info_ptr , ( png_uint_32 ) ~0 ) ;"	482:3:12973:13045	8634206	0	True				
ANR	8634210	IdentifierDecl	"flags = png_get_valid ( d -> png_ptr , info_ptr , ( png_uint_32 ) ~0 )"		8634206	0					
ANR	8634211	IdentifierDeclType	png_uint_32		8634206	0					
ANR	8634212	Identifier	flags		8634206	1					
ANR	8634213	AssignmentExpression	"flags = png_get_valid ( d -> png_ptr , info_ptr , ( png_uint_32 ) ~0 )"		8634206	2		=			
ANR	8634214	Identifier	flags		8634206	0					
ANR	8634215	CallExpression	"png_get_valid ( d -> png_ptr , info_ptr , ( png_uint_32 ) ~0 )"		8634206	1					
ANR	8634216	Callee	png_get_valid		8634206	0					
ANR	8634217	Identifier	png_get_valid		8634206	0					
ANR	8634218	ArgumentList	d -> png_ptr		8634206	1					
ANR	8634219	Argument	d -> png_ptr		8634206	0					
ANR	8634220	PtrMemberAccess	d -> png_ptr		8634206	0					
ANR	8634221	Identifier	d		8634206	0					
ANR	8634222	Identifier	png_ptr		8634206	1					
ANR	8634223	Argument	info_ptr		8634206	1					
ANR	8634224	Identifier	info_ptr		8634206	0					
ANR	8634225	Argument	( png_uint_32 ) ~0		8634206	2					
ANR	8634226	CastExpression	( png_uint_32 ) ~0		8634206	0					
ANR	8634227	CastTarget	png_uint_32		8634206	0					
ANR	8634228	Identifier	~0		8634206	1					
ANR	8634229	CompoundStatement		7:6:161:228	8634206	1					
ANR	8634230	IdentifierDeclStatement	png_textp text ;	486:6:13108:13122	8634206	0	True				
ANR	8634231	IdentifierDecl	text		8634206	0					
ANR	8634232	IdentifierDeclType	png_textp		8634206	0					
ANR	8634233	Identifier	text		8634206	1					
ANR	8634234	IdentifierDeclStatement	"png_uint_32 ntext = png_get_text ( d -> png_ptr , info_ptr , & text , NULL ) ;"	487:6:13130:13197	8634206	1	True				
ANR	8634235	IdentifierDecl	"ntext = png_get_text ( d -> png_ptr , info_ptr , & text , NULL )"		8634206	0					
ANR	8634236	IdentifierDeclType	png_uint_32		8634206	0					
ANR	8634237	Identifier	ntext		8634206	1					
ANR	8634238	AssignmentExpression	"ntext = png_get_text ( d -> png_ptr , info_ptr , & text , NULL )"		8634206	2		=			
ANR	8634239	Identifier	ntext		8634206	0					
ANR	8634240	CallExpression	"png_get_text ( d -> png_ptr , info_ptr , & text , NULL )"		8634206	1					
ANR	8634241	Callee	png_get_text		8634206	0					
ANR	8634242	Identifier	png_get_text		8634206	0					
ANR	8634243	ArgumentList	d -> png_ptr		8634206	1					
ANR	8634244	Argument	d -> png_ptr		8634206	0					
ANR	8634245	PtrMemberAccess	d -> png_ptr		8634206	0					
ANR	8634246	Identifier	d		8634206	0					
ANR	8634247	Identifier	png_ptr		8634206	1					
ANR	8634248	Argument	info_ptr		8634206	1					
ANR	8634249	Identifier	info_ptr		8634206	0					
ANR	8634250	Argument	& text		8634206	2					
ANR	8634251	UnaryOperationExpression	& text		8634206	0					
ANR	8634252	UnaryOperator	&		8634206	0					
ANR	8634253	Identifier	text		8634206	1					
ANR	8634254	Argument	NULL		8634206	3					
ANR	8634255	Identifier	NULL		8634206	0					
ANR	8634256	WhileStatement	while ( ntext > 0 )		8634206	2					
ANR	8634257	Condition	ntext > 0	489:13:13213:13221	8634206	0	True				
ANR	8634258	RelationalExpression	ntext > 0		8634206	0		>			
ANR	8634259	Identifier	ntext		8634206	0					
ANR	8634260	PrimaryExpression	0		8634206	1					
ANR	8634261	SwitchStatement	switch ( text [ -- ntext ] . compression )		8634206	1					
ANR	8634262	Condition	text [ -- ntext ] . compression	489:32:13232:13256	8634206	0	True				
ANR	8634263	MemberAccess	text [ -- ntext ] . compression		8634206	0					
ANR	8634264	ArrayIndexing	text [ -- ntext ]		8634206	0					
ANR	8634265	Identifier	text		8634206	0					
ANR	8634266	UnaryExpression	-- ntext		8634206	1					
ANR	8634267	IncDec	--		8634206	0					
ANR	8634268	Identifier	ntext		8634206	1					
ANR	8634269	Identifier	compression		8634206	1					
ANR	8634270	CompoundStatement		10:6:296:296	8634206	1					
ANR	8634271	Statement	case	491:9:13276:13279	8634206	0	True				
ANR	8634272	Statement	-	491:14:13281:13281	8634206	1	True				
ANR	8634273	Label	1 :	491:15:13282:13283	8634206	2	True				
ANR	8634274	ExpressionStatement	flags |= PNG_INFO_tEXt	492:12:13297:13319	8634206	3	True				
ANR	8634275	AssignmentExpression	flags |= PNG_INFO_tEXt		8634206	0		|=			
ANR	8634276	Identifier	flags		8634206	0					
ANR	8634277	Identifier	PNG_INFO_tEXt		8634206	1					
ANR	8634278	BreakStatement	break ;	493:12:13333:13338	8634206	4	True				
ANR	8634279	Label	case 0 :	494:9:13349:13355	8634206	5	True				
ANR	8634280	ExpressionStatement	flags |= PNG_INFO_zTXt	495:12:13369:13391	8634206	6	True				
ANR	8634281	AssignmentExpression	flags |= PNG_INFO_zTXt		8634206	0		|=			
ANR	8634282	Identifier	flags		8634206	0					
ANR	8634283	Identifier	PNG_INFO_zTXt		8634206	1					
ANR	8634284	BreakStatement	break ;	496:12:13405:13410	8634206	7	True				
ANR	8634285	Label	case 1 :	497:9:13421:13427	8634206	8	True				
ANR	8634286	Label	case 2 :	498:9:13438:13444	8634206	9	True				
ANR	8634287	ExpressionStatement	flags |= PNG_INFO_iTXt	499:12:13458:13480	8634206	10	True				
ANR	8634288	AssignmentExpression	flags |= PNG_INFO_iTXt		8634206	0		|=			
ANR	8634289	Identifier	flags		8634206	0					
ANR	8634290	Identifier	PNG_INFO_iTXt		8634206	1					
ANR	8634291	BreakStatement	break ;	500:12:13494:13499	8634206	11	True				
ANR	8634292	Label	default :	501:9:13510:13517	8634206	12	True				
ANR	8634293	Identifier	default		8634206	0					
ANR	8634294	ExpressionStatement	"fprintf ( stderr , ""%s(%s): unknown text compression %d\\n"" , d -> file , d -> test , text [ ntext ] . compression )"	502:12:13531:13645	8634206	13	True				
ANR	8634295	CallExpression	"fprintf ( stderr , ""%s(%s): unknown text compression %d\\n"" , d -> file , d -> test , text [ ntext ] . compression )"		8634206	0					
ANR	8634296	Callee	fprintf		8634206	0					
ANR	8634297	Identifier	fprintf		8634206	0					
ANR	8634298	ArgumentList	stderr		8634206	1					
ANR	8634299	Argument	stderr		8634206	0					
ANR	8634300	Identifier	stderr		8634206	0					
ANR	8634301	Argument	"""%s(%s): unknown text compression %d\\n"""		8634206	1					
ANR	8634302	PrimaryExpression	"""%s(%s): unknown text compression %d\\n"""		8634206	0					
ANR	8634303	Argument	d -> file		8634206	2					
ANR	8634304	PtrMemberAccess	d -> file		8634206	0					
ANR	8634305	Identifier	d		8634206	0					
ANR	8634306	Identifier	file		8634206	1					
ANR	8634307	Argument	d -> test		8634206	3					
ANR	8634308	PtrMemberAccess	d -> test		8634206	0					
ANR	8634309	Identifier	d		8634206	0					
ANR	8634310	Identifier	test		8634206	1					
ANR	8634311	Argument	text [ ntext ] . compression		8634206	4					
ANR	8634312	MemberAccess	text [ ntext ] . compression		8634206	0					
ANR	8634313	ArrayIndexing	text [ ntext ]		8634206	0					
ANR	8634314	Identifier	text		8634206	0					
ANR	8634315	Identifier	ntext		8634206	1					
ANR	8634316	Identifier	compression		8634206	1					
ANR	8634317	ExpressionStatement	display_exit ( d )	504:12:13659:13674	8634206	14	True				
ANR	8634318	CallExpression	display_exit ( d )		8634206	0					
ANR	8634319	Callee	display_exit		8634206	0					
ANR	8634320	Identifier	display_exit		8634206	0					
ANR	8634321	ArgumentList	d		8634206	1					
ANR	8634322	Argument	d		8634206	0					
ANR	8634323	Identifier	d		8634206	0					
ANR	8634324	ReturnStatement	return flags ;	508:3:13693:13705	8634206	2	True				
ANR	8634325	Identifier	flags		8634206	0					
ANR	8634326	ReturnType	static png_uint_32		8634206	1					
ANR	8634327	Identifier	get_valid		8634206	2					
ANR	8634328	ParameterList	"display * d , png_infop info_ptr"		8634206	3					
ANR	8634329	Parameter	display * d	480:10:12936:12945	8634206	0	True				
ANR	8634330	ParameterType	display *		8634206	0					
ANR	8634331	Identifier	d		8634206	1					
ANR	8634332	Parameter	png_infop info_ptr	480:22:12948:12965	8634206	1	True				
ANR	8634333	ParameterType	png_infop		8634206	0					
ANR	8634334	Identifier	info_ptr		8634206	1					
ANR	8634335	CFGEntryNode	ENTRY		8634206		True				
ANR	8634336	CFGExitNode	EXIT		8634206		True				
ANR	8634337	Symbol	* ntext		8634206						
ANR	8634338	Symbol	NULL		8634206						
ANR	8634339	Symbol	d		8634206						
ANR	8634340	Symbol	d -> png_ptr		8634206						
ANR	8634341	Symbol	* text		8634206						
ANR	8634342	Symbol	PNG_INFO_zTXt		8634206						
ANR	8634343	Symbol	flags		8634206						
ANR	8634344	Symbol	text [ -- ntext ] . compression		8634206						
ANR	8634345	Symbol	png_get_text		8634206						
ANR	8634346	Symbol	stderr		8634206						
ANR	8634347	Symbol	PNG_INFO_iTXt		8634206						
ANR	8634348	Symbol	* d		8634206						
ANR	8634349	Symbol	text [ ntext ] . compression		8634206						
ANR	8634350	Symbol	~0		8634206						
ANR	8634351	Symbol	& text		8634206						
ANR	8634352	Symbol	d -> file		8634206						
ANR	8634353	Symbol	png_get_valid		8634206						
ANR	8634354	Symbol	d -> test		8634206						
ANR	8634355	Symbol	text		8634206						
ANR	8634356	Symbol	PNG_INFO_tEXt		8634206						
ANR	8634357	Symbol	info_ptr		8634206						
ANR	8634358	Symbol	ntext		8634206						
ANR	8634359	Function	read_callback	512:0:13748:15646							
ANR	8634360	FunctionDef	"read_callback (png_structp pp , png_unknown_chunkp pc)"		8634359	0					
ANR	8634361	CompoundStatement		514:0:13821:15646	8634359	0					
ANR	8634362	Statement	display	518:3:13968:13974	8634359	0	True				
ANR	8634363	Statement	*	518:11:13976:13976	8634359	1	True				
ANR	8634364	Statement	d	518:12:13977:13977	8634359	2	True				
ANR	8634365	Statement	=	518:14:13979:13979	8634359	3	True				
ANR	8634366	Statement	voidcast	518:16:13981:13988	8634359	4	True				
ANR	8634367	Statement	(	518:24:13989:13989	8634359	5	True				
ANR	8634368	Statement	display	518:25:13990:13996	8634359	6	True				
ANR	8634369	Statement	*	518:32:13997:13997	8634359	7	True				
ANR	8634370	Statement	","	518:33:13998:13998	8634359	8	True				
ANR	8634371	Statement	png_get_user_chunk_ptr	518:35:14000:14021	8634359	9	True				
ANR	8634372	Statement	(	518:57:14022:14022	8634359	10	True				
ANR	8634373	Statement	pp	518:58:14023:14024	8634359	11	True				
ANR	8634374	Statement	)	518:60:14025:14025	8634359	12	True				
ANR	8634375	Statement	)	518:61:14026:14026	8634359	13	True				
ANR	8634376	ExpressionStatement		518:62:14027:14027	8634359	14	True				
ANR	8634377	IdentifierDeclStatement	int chunk = findb ( pc -> name ) ;	519:3:14032:14059	8634359	15	True				
ANR	8634378	IdentifierDecl	chunk = findb ( pc -> name )		8634359	0					
ANR	8634379	IdentifierDeclType	int		8634359	0					
ANR	8634380	Identifier	chunk		8634359	1					
ANR	8634381	AssignmentExpression	chunk = findb ( pc -> name )		8634359	2		=			
ANR	8634382	Identifier	chunk		8634359	0					
ANR	8634383	CallExpression	findb ( pc -> name )		8634359	1					
ANR	8634384	Callee	findb		8634359	0					
ANR	8634385	Identifier	findb		8634359	0					
ANR	8634386	ArgumentList	pc -> name		8634359	1					
ANR	8634387	Argument	pc -> name		8634359	0					
ANR	8634388	PtrMemberAccess	pc -> name		8634359	0					
ANR	8634389	Identifier	pc		8634359	0					
ANR	8634390	Identifier	name		8634359	1					
ANR	8634391	IdentifierDeclStatement	"int keep , discard ;"	520:3:14064:14081	8634359	16	True				
ANR	8634392	IdentifierDecl	keep		8634359	0					
ANR	8634393	IdentifierDeclType	int		8634359	0					
ANR	8634394	Identifier	keep		8634359	1					
ANR	8634395	IdentifierDecl	discard		8634359	1					
ANR	8634396	IdentifierDeclType	int		8634359	0					
ANR	8634397	Identifier	discard		8634359	1					
ANR	8634398	IfStatement	if ( chunk < 0 )		8634359	17					
ANR	8634399	Condition	chunk < 0	522:7:14091:14099	8634359	0	True				
ANR	8634400	RelationalExpression	chunk < 0		8634359	0		<			
ANR	8634401	Identifier	chunk		8634359	0					
ANR	8634402	PrimaryExpression	0		8634359	1					
ANR	8634403	ExpressionStatement	keep = d -> keep	523:6:14156:14170	8634359	1	True				
ANR	8634404	AssignmentExpression	keep = d -> keep		8634359	0		=			
ANR	8634405	Identifier	keep		8634359	0					
ANR	8634406	PtrMemberAccess	d -> keep		8634359	1					
ANR	8634407	Identifier	d		8634359	0					
ANR	8634408	Identifier	keep		8634359	1					
ANR	8634409	ElseStatement	else		8634359	0					
ANR	8634410	CompoundStatement		13:3:362:362	8634359	0					
ANR	8634411	ExpressionStatement	keep = chunk_info [ chunk ] . keep	527:6:14192:14221	8634359	0	True				
ANR	8634412	AssignmentExpression	keep = chunk_info [ chunk ] . keep		8634359	0		=			
ANR	8634413	Identifier	keep		8634359	0					
ANR	8634414	MemberAccess	chunk_info [ chunk ] . keep		8634359	1					
ANR	8634415	ArrayIndexing	chunk_info [ chunk ]		8634359	0					
ANR	8634416	Identifier	chunk_info		8634359	0					
ANR	8634417	Identifier	chunk		8634359	1					
ANR	8634418	Identifier	keep		8634359	1					
ANR	8634419	IfStatement	if ( keep == PNG_HANDLE_CHUNK_AS_DEFAULT )		8634359	1					
ANR	8634420	Condition	keep == PNG_HANDLE_CHUNK_AS_DEFAULT	528:10:14233:14267	8634359	0	True				
ANR	8634421	EqualityExpression	keep == PNG_HANDLE_CHUNK_AS_DEFAULT		8634359	0		==			
ANR	8634422	Identifier	keep		8634359	0					
ANR	8634423	Identifier	PNG_HANDLE_CHUNK_AS_DEFAULT		8634359	1					
ANR	8634424	CompoundStatement		16:6:454:454	8634359	1					
ANR	8634425	IfStatement	if ( chunk_info [ chunk ] . unknown )		8634359	0					
ANR	8634426	Condition	chunk_info [ chunk ] . unknown	533:13:14418:14442	8634359	0	True				
ANR	8634427	MemberAccess	chunk_info [ chunk ] . unknown		8634359	0					
ANR	8634428	ArrayIndexing	chunk_info [ chunk ]		8634359	0					
ANR	8634429	Identifier	chunk_info		8634359	0					
ANR	8634430	Identifier	chunk		8634359	1					
ANR	8634431	Identifier	unknown		8634359	1					
ANR	8634432	ExpressionStatement	keep = d -> keep	534:12:14457:14471	8634359	1	True				
ANR	8634433	AssignmentExpression	keep = d -> keep		8634359	0		=			
ANR	8634434	Identifier	keep		8634359	0					
ANR	8634435	PtrMemberAccess	d -> keep		8634359	1					
ANR	8634436	Identifier	d		8634359	0					
ANR	8634437	Identifier	keep		8634359	1					
ANR	8634438	ElseStatement	else		8634359	0					
ANR	8634439	ExpressionStatement	keep = PNG_HANDLE_CHUNK_NEVER	537:12:14500:14529	8634359	0	True				
ANR	8634440	AssignmentExpression	keep = PNG_HANDLE_CHUNK_NEVER		8634359	0		=			
ANR	8634441	Identifier	keep		8634359	0					
ANR	8634442	Identifier	PNG_HANDLE_CHUNK_NEVER		8634359	1					
ANR	8634443	SwitchStatement	switch ( keep )		8634359	18					
ANR	8634444	Condition	keep	541:11:14556:14559	8634359	0	True				
ANR	8634445	Identifier	keep		8634359	0					
ANR	8634446	CompoundStatement		29:3:743:743	8634359	1					
ANR	8634447	Label	default :	543:6:14573:14580	8634359	0	True				
ANR	8634448	Identifier	default		8634359	0					
ANR	8634449	ExpressionStatement	"fprintf ( stderr , ""%s(%s): %d: unrecognized chunk option\\n"" , d -> file , d -> test , chunk_info [ chunk ] . keep )"	544:9:14591:14703	8634359	1	True				
ANR	8634450	CallExpression	"fprintf ( stderr , ""%s(%s): %d: unrecognized chunk option\\n"" , d -> file , d -> test , chunk_info [ chunk ] . keep )"		8634359	0					
ANR	8634451	Callee	fprintf		8634359	0					
ANR	8634452	Identifier	fprintf		8634359	0					
ANR	8634453	ArgumentList	stderr		8634359	1					
ANR	8634454	Argument	stderr		8634359	0					
ANR	8634455	Identifier	stderr		8634359	0					
ANR	8634456	Argument	"""%s(%s): %d: unrecognized chunk option\\n"""		8634359	1					
ANR	8634457	PrimaryExpression	"""%s(%s): %d: unrecognized chunk option\\n"""		8634359	0					
ANR	8634458	Argument	d -> file		8634359	2					
ANR	8634459	PtrMemberAccess	d -> file		8634359	0					
ANR	8634460	Identifier	d		8634359	0					
ANR	8634461	Identifier	file		8634359	1					
ANR	8634462	Argument	d -> test		8634359	3					
ANR	8634463	PtrMemberAccess	d -> test		8634359	0					
ANR	8634464	Identifier	d		8634359	0					
ANR	8634465	Identifier	test		8634359	1					
ANR	8634466	Argument	chunk_info [ chunk ] . keep		8634359	4					
ANR	8634467	MemberAccess	chunk_info [ chunk ] . keep		8634359	0					
ANR	8634468	ArrayIndexing	chunk_info [ chunk ]		8634359	0					
ANR	8634469	Identifier	chunk_info		8634359	0					
ANR	8634470	Identifier	chunk		8634359	1					
ANR	8634471	Identifier	keep		8634359	1					
ANR	8634472	ExpressionStatement	display_exit ( d )	546:9:14714:14729	8634359	2	True				
ANR	8634473	CallExpression	display_exit ( d )		8634359	0					
ANR	8634474	Callee	display_exit		8634359	0					
ANR	8634475	Identifier	display_exit		8634359	0					
ANR	8634476	ArgumentList	d		8634359	1					
ANR	8634477	Argument	d		8634359	0					
ANR	8634478	Identifier	d		8634359	0					
ANR	8634479	Label	case PNG_HANDLE_CHUNK_AS_DEFAULT :	548:6:14738:14770	8634359	3	True				
ANR	8634480	Identifier	PNG_HANDLE_CHUNK_AS_DEFAULT		8634359	0					
ANR	8634481	Label	case PNG_HANDLE_CHUNK_NEVER :	549:6:14778:14805	8634359	4	True				
ANR	8634482	Identifier	PNG_HANDLE_CHUNK_NEVER		8634359	0					
ANR	8634483	ExpressionStatement	discard = 1	550:9:14816:14847	8634359	5	True				
ANR	8634484	AssignmentExpression	discard = 1		8634359	0		=			
ANR	8634485	Identifier	discard		8634359	0					
ANR	8634486	PrimaryExpression	1		8634359	1					
ANR	8634487	BreakStatement	break ;	551:9:14858:14863	8634359	6	True				
ANR	8634488	Label	case PNG_HANDLE_CHUNK_IF_SAFE :	553:6:14872:14901	8634359	7	True				
ANR	8634489	Identifier	PNG_HANDLE_CHUNK_IF_SAFE		8634359	0					
ANR	8634490	Label	case PNG_HANDLE_CHUNK_ALWAYS :	554:6:14909:14937	8634359	8	True				
ANR	8634491	Identifier	PNG_HANDLE_CHUNK_ALWAYS		8634359	0					
ANR	8634492	ExpressionStatement	discard = 0	555:9:14948:14980	8634359	9	True				
ANR	8634493	AssignmentExpression	discard = 0		8634359	0		=			
ANR	8634494	Identifier	discard		8634359	0					
ANR	8634495	PrimaryExpression	0		8634359	1					
ANR	8634496	BreakStatement	break ;	556:9:14991:14996	8634359	10	True				
ANR	8634497	IfStatement	if ( chunk >= 0 )		8634359	19					
ANR	8634498	Condition	chunk >= 0	562:7:15155:15164	8634359	0	True				
ANR	8634499	RelationalExpression	chunk >= 0		8634359	0		>=			
ANR	8634500	Identifier	chunk		8634359	0					
ANR	8634501	PrimaryExpression	0		8634359	1					
ANR	8634502	IfStatement	if ( ! discard )		8634359	1					
ANR	8634503	Condition	! discard	562:23:15171:15178	8634359	0	True				
ANR	8634504	UnaryOperationExpression	! discard		8634359	0					
ANR	8634505	UnaryOperator	!		8634359	0					
ANR	8634506	Identifier	discard		8634359	1					
ANR	8634507	CompoundStatement		51:6:1408:1449	8634359	1					
ANR	8634508	IdentifierDeclStatement	png_uint_32 flag = chunk_info [ chunk ] . flag ;	564:6:15230:15271	8634359	0	True				
ANR	8634509	IdentifierDecl	flag = chunk_info [ chunk ] . flag		8634359	0					
ANR	8634510	IdentifierDeclType	png_uint_32		8634359	0					
ANR	8634511	Identifier	flag		8634359	1					
ANR	8634512	AssignmentExpression	flag = chunk_info [ chunk ] . flag		8634359	2		=			
ANR	8634513	Identifier	flag		8634359	0					
ANR	8634514	MemberAccess	chunk_info [ chunk ] . flag		8634359	1					
ANR	8634515	ArrayIndexing	chunk_info [ chunk ]		8634359	0					
ANR	8634516	Identifier	chunk_info		8634359	0					
ANR	8634517	Identifier	chunk		8634359	1					
ANR	8634518	Identifier	flag		8634359	1					
ANR	8634519	IfStatement	if ( pc -> location & PNG_AFTER_IDAT )		8634359	1					
ANR	8634520	Condition	pc -> location & PNG_AFTER_IDAT	566:10:15284:15312	8634359	0	True				
ANR	8634521	BitAndExpression	pc -> location & PNG_AFTER_IDAT		8634359	0		&			
ANR	8634522	PtrMemberAccess	pc -> location		8634359	0					
ANR	8634523	Identifier	pc		8634359	0					
ANR	8634524	Identifier	location		8634359	1					
ANR	8634525	Identifier	PNG_AFTER_IDAT		8634359	1					
ANR	8634526	ExpressionStatement	d -> after_IDAT |= flag	567:9:15324:15345	8634359	1	True				
ANR	8634527	AssignmentExpression	d -> after_IDAT |= flag		8634359	0		|=			
ANR	8634528	PtrMemberAccess	d -> after_IDAT		8634359	0					
ANR	8634529	Identifier	d		8634359	0					
ANR	8634530	Identifier	after_IDAT		8634359	1					
ANR	8634531	Identifier	flag		8634359	1					
ANR	8634532	ElseStatement	else		8634359	0					
ANR	8634533	ExpressionStatement	d -> before_IDAT |= flag	570:9:15368:15390	8634359	0	True				
ANR	8634534	AssignmentExpression	d -> before_IDAT |= flag		8634359	0		|=			
ANR	8634535	PtrMemberAccess	d -> before_IDAT		8634359	0					
ANR	8634536	Identifier	d		8634359	0					
ANR	8634537	Identifier	before_IDAT		8634359	1					
ANR	8634538	Identifier	flag		8634359	1					
ANR	8634539	ElseStatement	else		8634359	0					
ANR	8634540	ReturnStatement	return 1 ;	579:6:15606:15614	8634359	0	True				
ANR	8634541	PrimaryExpression	1		8634359	0					
ANR	8634542	Statement	ifdef	576:3:15530:15534	8634359	20	True				
ANR	8634543	Statement	PNG_SAVE_UNKNOWN_CHUNKS_SUPPORTED	576:9:15536:15568	8634359	21	True				
ANR	8634544	ReturnStatement	return discard ;	577:6:15576:15590	8634359	22	True				
ANR	8634545	Identifier	discard		8634359	0					
ANR	8634546	Statement	endif	580:3:15640:15644	8634359	23	True				
ANR	8634547	ReturnType	static int PNGCBAPI		8634359	1					
ANR	8634548	Identifier	read_callback		8634359	2					
ANR	8634549	ParameterList	"png_structp pp , png_unknown_chunkp pc"		8634359	3					
ANR	8634550	Parameter	png_structp pp	513:14:13782:13795	8634359	0	True				
ANR	8634551	ParameterType	png_structp		8634359	0					
ANR	8634552	Identifier	pp		8634359	1					
ANR	8634553	Parameter	png_unknown_chunkp pc	513:30:13798:13818	8634359	1	True				
ANR	8634554	ParameterType	png_unknown_chunkp		8634359	0					
ANR	8634555	Identifier	pc		8634359	1					
ANR	8634556	CFGEntryNode	ENTRY		8634359		True				
ANR	8634557	CFGExitNode	EXIT		8634359		True				
ANR	8634558	Symbol	pp		8634359						
ANR	8634559	Symbol	discard		8634359						
ANR	8634560	Symbol	d -> keep		8634359						
ANR	8634561	Symbol	flag		8634359						
ANR	8634562	Symbol	findb		8634359						
ANR	8634563	Symbol	chunk		8634359						
ANR	8634564	Symbol	d -> after_IDAT		8634359						
ANR	8634565	Symbol	chunk_info		8634359						
ANR	8634566	Symbol	PNG_HANDLE_CHUNK_AS_DEFAULT		8634359						
ANR	8634567	Symbol	PNG_AFTER_IDAT		8634359						
ANR	8634568	Symbol	pc -> name		8634359						
ANR	8634569	Symbol	PNG_HANDLE_CHUNK_NEVER		8634359						
ANR	8634570	Symbol	pc -> location		8634359						
ANR	8634571	Symbol	chunk_info [ chunk ] . unknown		8634359						
ANR	8634572	Symbol	d -> file		8634359						
ANR	8634573	Symbol	chunk_info [ chunk ] . keep		8634359						
ANR	8634574	Symbol	d		8634359						
ANR	8634575	Symbol	d -> before_IDAT		8634359						
ANR	8634576	Symbol	stderr		8634359						
ANR	8634577	Symbol	* d		8634359						
ANR	8634578	Symbol	pc		8634359						
ANR	8634579	Symbol	* chunk		8634359						
ANR	8634580	Symbol	keep		8634359						
ANR	8634581	Symbol	* pc		8634359						
ANR	8634582	Symbol	d -> test		8634359						
ANR	8634583	Symbol	* chunk_info		8634359						
ANR	8634584	Symbol	chunk_info [ chunk ] . flag		8634359						
ANR	8634585	Function	get_unknown	585:0:15730:17332							
ANR	8634586	FunctionDef	"get_unknown (display * d , png_infop info_ptr , int after_IDAT)"		8634585	0					
ANR	8634587	CompoundStatement		587:0:15809:17332	8634585	0					
ANR	8634588	IdentifierDeclStatement	png_uint_32 flags = 0 ;	589:3:15860:15881	8634585	0	True				
ANR	8634589	IdentifierDecl	flags = 0		8634585	0					
ANR	8634590	IdentifierDeclType	png_uint_32		8634585	0					
ANR	8634591	Identifier	flags		8634585	1					
ANR	8634592	AssignmentExpression	flags = 0		8634585	2		=			
ANR	8634593	Identifier	flags		8634585	0					
ANR	8634594	PrimaryExpression	0		8634585	1					
ANR	8634595	Statement	UNUSED	591:3:15887:15892	8634585	1	True				
ANR	8634596	Statement	(	591:9:15893:15893	8634585	2	True				
ANR	8634597	Statement	after_IDAT	591:10:15894:15903	8634585	3	True				
ANR	8634598	Statement	)	591:20:15904:15904	8634585	4	True				
ANR	8634599	CompoundStatement		9:6:142:214	8634585	5					
ANR	8634600	IdentifierDeclStatement	png_unknown_chunkp unknown ;	594:6:15918:15944	8634585	0	True				
ANR	8634601	IdentifierDecl	unknown		8634585	0					
ANR	8634602	IdentifierDeclType	png_unknown_chunkp		8634585	0					
ANR	8634603	Identifier	unknown		8634585	1					
ANR	8634604	IdentifierDeclStatement	"int num_unknown = png_get_unknown_chunks ( d -> png_ptr , info_ptr , & unknown ) ;"	595:6:15952:16024	8634585	1	True				
ANR	8634605	IdentifierDecl	"num_unknown = png_get_unknown_chunks ( d -> png_ptr , info_ptr , & unknown )"		8634585	0					
ANR	8634606	IdentifierDeclType	int		8634585	0					
ANR	8634607	Identifier	num_unknown		8634585	1					
ANR	8634608	AssignmentExpression	"num_unknown = png_get_unknown_chunks ( d -> png_ptr , info_ptr , & unknown )"		8634585	2		=			
ANR	8634609	Identifier	num_unknown		8634585	0					
ANR	8634610	CallExpression	"png_get_unknown_chunks ( d -> png_ptr , info_ptr , & unknown )"		8634585	1					
ANR	8634611	Callee	png_get_unknown_chunks		8634585	0					
ANR	8634612	Identifier	png_get_unknown_chunks		8634585	0					
ANR	8634613	ArgumentList	d -> png_ptr		8634585	1					
ANR	8634614	Argument	d -> png_ptr		8634585	0					
ANR	8634615	PtrMemberAccess	d -> png_ptr		8634585	0					
ANR	8634616	Identifier	d		8634585	0					
ANR	8634617	Identifier	png_ptr		8634585	1					
ANR	8634618	Argument	info_ptr		8634585	1					
ANR	8634619	Identifier	info_ptr		8634585	0					
ANR	8634620	Argument	& unknown		8634585	2					
ANR	8634621	UnaryOperationExpression	& unknown		8634585	0					
ANR	8634622	UnaryOperator	&		8634585	0					
ANR	8634623	Identifier	unknown		8634585	1					
ANR	8634624	WhileStatement	while ( -- num_unknown >= 0 )		8634585	2					
ANR	8634625	Condition	-- num_unknown >= 0	597:13:16040:16057	8634585	0	True				
ANR	8634626	RelationalExpression	-- num_unknown >= 0		8634585	0		>=			
ANR	8634627	UnaryExpression	-- num_unknown		8634585	0					
ANR	8634628	IncDec	--		8634585	0					
ANR	8634629	Identifier	num_unknown		8634585	1					
ANR	8634630	PrimaryExpression	0		8634585	1					
ANR	8634631	CompoundStatement		13:9:267:311	8634585	1					
ANR	8634632	IdentifierDeclStatement	int chunk = findb ( unknown [ num_unknown ] . name ) ;	599:9:16077:16121	8634585	0	True				
ANR	8634633	IdentifierDecl	chunk = findb ( unknown [ num_unknown ] . name )		8634585	0					
ANR	8634634	IdentifierDeclType	int		8634585	0					
ANR	8634635	Identifier	chunk		8634585	1					
ANR	8634636	AssignmentExpression	chunk = findb ( unknown [ num_unknown ] . name )		8634585	2		=			
ANR	8634637	Identifier	chunk		8634585	0					
ANR	8634638	CallExpression	findb ( unknown [ num_unknown ] . name )		8634585	1					
ANR	8634639	Callee	findb		8634585	0					
ANR	8634640	Identifier	findb		8634585	0					
ANR	8634641	ArgumentList	unknown [ num_unknown ] . name		8634585	1					
ANR	8634642	Argument	unknown [ num_unknown ] . name		8634585	0					
ANR	8634643	MemberAccess	unknown [ num_unknown ] . name		8634585	0					
ANR	8634644	ArrayIndexing	unknown [ num_unknown ]		8634585	0					
ANR	8634645	Identifier	unknown		8634585	0					
ANR	8634646	Identifier	num_unknown		8634585	1					
ANR	8634647	Identifier	name		8634585	1					
ANR	8634648	IfStatement	if ( chunk < 0 )		8634585	1					
ANR	8634649	Condition	chunk < 0	605:13:16335:16343	8634585	0	True				
ANR	8634650	RelationalExpression	chunk < 0		8634585	0		<			
ANR	8634651	Identifier	chunk		8634585	0					
ANR	8634652	PrimaryExpression	0		8634585	1					
ANR	8634653	SwitchStatement	switch ( d -> keep )		8634585	1					
ANR	8634654	Condition	d -> keep	605:32:16354:16360	8634585	0	True				
ANR	8634655	PtrMemberAccess	d -> keep		8634585	0					
ANR	8634656	Identifier	d		8634585	0					
ANR	8634657	Identifier	keep		8634585	1					
ANR	8634658	CompoundStatement		20:9:562:562	8634585	1					
ANR	8634659	Label	default :	607:12:16386:16393	8634585	0	True				
ANR	8634660	Identifier	default		8634585	0					
ANR	8634661	Label	case PNG_HANDLE_CHUNK_AS_DEFAULT :	608:12:16424:16456	8634585	1	True				
ANR	8634662	Identifier	PNG_HANDLE_CHUNK_AS_DEFAULT		8634585	0					
ANR	8634663	Label	case PNG_HANDLE_CHUNK_NEVER :	609:12:16470:16497	8634585	2	True				
ANR	8634664	Identifier	PNG_HANDLE_CHUNK_NEVER		8634585	0					
ANR	8634665	ExpressionStatement	"fprintf ( stderr , ""%s(%s): %s: %s: unknown chunk saved\\n"" , d -> file , d -> test , d -> keep ? ""discard"" : ""default"" , unknown [ num_unknown ] . name )"	610:15:16514:16684	8634585	3	True				
ANR	8634666	CallExpression	"fprintf ( stderr , ""%s(%s): %s: %s: unknown chunk saved\\n"" , d -> file , d -> test , d -> keep ? ""discard"" : ""default"" , unknown [ num_unknown ] . name )"		8634585	0					
ANR	8634667	Callee	fprintf		8634585	0					
ANR	8634668	Identifier	fprintf		8634585	0					
ANR	8634669	ArgumentList	stderr		8634585	1					
ANR	8634670	Argument	stderr		8634585	0					
ANR	8634671	Identifier	stderr		8634585	0					
ANR	8634672	Argument	"""%s(%s): %s: %s: unknown chunk saved\\n"""		8634585	1					
ANR	8634673	PrimaryExpression	"""%s(%s): %s: %s: unknown chunk saved\\n"""		8634585	0					
ANR	8634674	Argument	d -> file		8634585	2					
ANR	8634675	PtrMemberAccess	d -> file		8634585	0					
ANR	8634676	Identifier	d		8634585	0					
ANR	8634677	Identifier	file		8634585	1					
ANR	8634678	Argument	d -> test		8634585	3					
ANR	8634679	PtrMemberAccess	d -> test		8634585	0					
ANR	8634680	Identifier	d		8634585	0					
ANR	8634681	Identifier	test		8634585	1					
ANR	8634682	Argument	"d -> keep ? ""discard"" : ""default"""		8634585	4					
ANR	8634683	ConditionalExpression	"d -> keep ? ""discard"" : ""default"""		8634585	0					
ANR	8634684	Condition	d -> keep		8634585	0					
ANR	8634685	PtrMemberAccess	d -> keep		8634585	0					
ANR	8634686	Identifier	d		8634585	0					
ANR	8634687	Identifier	keep		8634585	1					
ANR	8634688	PrimaryExpression	"""discard"""		8634585	1					
ANR	8634689	PrimaryExpression	"""default"""		8634585	2					
ANR	8634690	Argument	unknown [ num_unknown ] . name		8634585	5					
ANR	8634691	MemberAccess	unknown [ num_unknown ] . name		8634585	0					
ANR	8634692	ArrayIndexing	unknown [ num_unknown ]		8634585	0					
ANR	8634693	Identifier	unknown		8634585	0					
ANR	8634694	Identifier	num_unknown		8634585	1					
ANR	8634695	Identifier	name		8634585	1					
ANR	8634696	ExpressionStatement	++ ( d -> error_count )	613:15:16701:16719	8634585	4	True				
ANR	8634697	UnaryExpression	++ ( d -> error_count )		8634585	0					
ANR	8634698	IncDec	++		8634585	0					
ANR	8634699	PtrMemberAccess	d -> error_count		8634585	1					
ANR	8634700	Identifier	d		8634585	0					
ANR	8634701	Identifier	error_count		8634585	1					
ANR	8634702	BreakStatement	break ;	614:15:16736:16741	8634585	5	True				
ANR	8634703	Label	case PNG_HANDLE_CHUNK_IF_SAFE :	616:12:16756:16785	8634585	6	True				
ANR	8634704	Identifier	PNG_HANDLE_CHUNK_IF_SAFE		8634585	0					
ANR	8634705	IfStatement	if ( ! ancillaryb ( unknown [ num_unknown ] . name ) )		8634585	7					
ANR	8634706	Condition	! ancillaryb ( unknown [ num_unknown ] . name )	617:19:16806:16843	8634585	0	True				
ANR	8634707	UnaryOperationExpression	! ancillaryb ( unknown [ num_unknown ] . name )		8634585	0					
ANR	8634708	UnaryOperator	!		8634585	0					
ANR	8634709	CallExpression	ancillaryb ( unknown [ num_unknown ] . name )		8634585	1					
ANR	8634710	Callee	ancillaryb		8634585	0					
ANR	8634711	Identifier	ancillaryb		8634585	0					
ANR	8634712	ArgumentList	unknown [ num_unknown ] . name		8634585	1					
ANR	8634713	Argument	unknown [ num_unknown ] . name		8634585	0					
ANR	8634714	MemberAccess	unknown [ num_unknown ] . name		8634585	0					
ANR	8634715	ArrayIndexing	unknown [ num_unknown ]		8634585	0					
ANR	8634716	Identifier	unknown		8634585	0					
ANR	8634717	Identifier	num_unknown		8634585	1					
ANR	8634718	Identifier	name		8634585	1					
ANR	8634719	CompoundStatement		32:15:1051:1051	8634585	1					
ANR	8634720	ExpressionStatement	"fprintf ( stderr , ""%s(%s): if-safe: %s: unknown critical chunk saved\\n"" , d -> file , d -> test , unknown [ num_unknown ] . name )"	619:18:16881:17038	8634585	0	True				
ANR	8634721	CallExpression	"fprintf ( stderr , ""%s(%s): if-safe: %s: unknown critical chunk saved\\n"" , d -> file , d -> test , unknown [ num_unknown ] . name )"		8634585	0					
ANR	8634722	Callee	fprintf		8634585	0					
ANR	8634723	Identifier	fprintf		8634585	0					
ANR	8634724	ArgumentList	stderr		8634585	1					
ANR	8634725	Argument	stderr		8634585	0					
ANR	8634726	Identifier	stderr		8634585	0					
ANR	8634727	Argument	"""%s(%s): if-safe: %s: unknown critical chunk saved\\n"""		8634585	1					
ANR	8634728	PrimaryExpression	"""%s(%s): if-safe: %s: unknown critical chunk saved\\n"""		8634585	0					
ANR	8634729	Argument	d -> file		8634585	2					
ANR	8634730	PtrMemberAccess	d -> file		8634585	0					
ANR	8634731	Identifier	d		8634585	0					
ANR	8634732	Identifier	file		8634585	1					
ANR	8634733	Argument	d -> test		8634585	3					
ANR	8634734	PtrMemberAccess	d -> test		8634585	0					
ANR	8634735	Identifier	d		8634585	0					
ANR	8634736	Identifier	test		8634585	1					
ANR	8634737	Argument	unknown [ num_unknown ] . name		8634585	4					
ANR	8634738	MemberAccess	unknown [ num_unknown ] . name		8634585	0					
ANR	8634739	ArrayIndexing	unknown [ num_unknown ]		8634585	0					
ANR	8634740	Identifier	unknown		8634585	0					
ANR	8634741	Identifier	num_unknown		8634585	1					
ANR	8634742	Identifier	name		8634585	1					
ANR	8634743	ExpressionStatement	++ ( d -> error_count )	622:18:17058:17076	8634585	1	True				
ANR	8634744	UnaryExpression	++ ( d -> error_count )		8634585	0					
ANR	8634745	IncDec	++		8634585	0					
ANR	8634746	PtrMemberAccess	d -> error_count		8634585	1					
ANR	8634747	Identifier	d		8634585	0					
ANR	8634748	Identifier	error_count		8634585	1					
ANR	8634749	BreakStatement	break ;	623:18:17096:17101	8634585	2	True				
ANR	8634750	Label	case PNG_HANDLE_CHUNK_ALWAYS :	626:12:17178:17206	8634585	8	True				
ANR	8634751	Identifier	PNG_HANDLE_CHUNK_ALWAYS		8634585	0					
ANR	8634752	BreakStatement	break ;	627:15:17223:17228	8634585	9	True				
ANR	8634753	ElseStatement	else		8634585	0					
ANR	8634754	ExpressionStatement	flags |= chunk_info [ chunk ] . flag	631:12:17268:17299	8634585	0	True				
ANR	8634755	AssignmentExpression	flags |= chunk_info [ chunk ] . flag		8634585	0		|=			
ANR	8634756	Identifier	flags		8634585	0					
ANR	8634757	MemberAccess	chunk_info [ chunk ] . flag		8634585	1					
ANR	8634758	ArrayIndexing	chunk_info [ chunk ]		8634585	0					
ANR	8634759	Identifier	chunk_info		8634585	0					
ANR	8634760	Identifier	chunk		8634585	1					
ANR	8634761	Identifier	flag		8634585	1					
ANR	8634762	ReturnStatement	return flags ;	635:3:17318:17330	8634585	6	True				
ANR	8634763	Identifier	flags		8634585	0					
ANR	8634764	ReturnType	static png_uint_32		8634585	1					
ANR	8634765	Identifier	get_unknown		8634585	2					
ANR	8634766	ParameterList	"display * d , png_infop info_ptr , int after_IDAT"		8634585	3					
ANR	8634767	Parameter	display * d	586:12:15761:15770	8634585	0	True				
ANR	8634768	ParameterType	display *		8634585	0					
ANR	8634769	Identifier	d		8634585	1					
ANR	8634770	Parameter	png_infop info_ptr	586:24:15773:15790	8634585	1	True				
ANR	8634771	ParameterType	png_infop		8634585	0					
ANR	8634772	Identifier	info_ptr		8634585	1					
ANR	8634773	Parameter	int after_IDAT	586:44:15793:15806	8634585	2	True				
ANR	8634774	ParameterType	int		8634585	0					
ANR	8634775	Identifier	after_IDAT		8634585	1					
ANR	8634776	CFGEntryNode	ENTRY		8634585		True				
ANR	8634777	CFGExitNode	EXIT		8634585		True				
ANR	8634778	Symbol	d -> keep		8634585						
ANR	8634779	Symbol	& unknown		8634585						
ANR	8634780	Symbol	d		8634585						
ANR	8634781	Symbol	ancillaryb		8634585						
ANR	8634782	Symbol	d -> png_ptr		8634585						
ANR	8634783	Symbol	findb		8634585						
ANR	8634784	Symbol	flags		8634585						
ANR	8634785	Symbol	chunk		8634585						
ANR	8634786	Symbol	after_IDAT		8634585						
ANR	8634787	Symbol	png_get_unknown_chunks		8634585						
ANR	8634788	Symbol	stderr		8634585						
ANR	8634789	Symbol	chunk_info		8634585						
ANR	8634790	Symbol	* d		8634585						
ANR	8634791	Symbol	unknown		8634585						
ANR	8634792	Symbol	unknown [ num_unknown ] . name		8634585						
ANR	8634793	Symbol	* unknown		8634585						
ANR	8634794	Symbol	* chunk		8634585						
ANR	8634795	Symbol	d -> file		8634585						
ANR	8634796	Symbol	* num_unknown		8634585						
ANR	8634797	Symbol	d -> test		8634585						
ANR	8634798	Symbol	info_ptr		8634585						
ANR	8634799	Symbol	* chunk_info		8634585						
ANR	8634800	Symbol	num_unknown		8634585						
ANR	8634801	Symbol	chunk_info [ chunk ] . flag		8634585						
ANR	8634802	Function	get_unknown	638:0:17366:17633							
ANR	8634803	FunctionDef	"get_unknown (display * d , png_infop info_ptr , int after_IDAT)"		8634802	0					
ANR	8634804	CompoundStatement		641:0:17524:17633	8634802	0					
ANR	8634805	ExpressionStatement	UNUSED ( info_ptr )	642:3:17529:17545	8634802	0	True				
ANR	8634806	CallExpression	UNUSED ( info_ptr )		8634802	0					
ANR	8634807	Callee	UNUSED		8634802	0					
ANR	8634808	Identifier	UNUSED		8634802	0					
ANR	8634809	ArgumentList	info_ptr		8634802	1					
ANR	8634810	Argument	info_ptr		8634802	0					
ANR	8634811	Identifier	info_ptr		8634802	0					
ANR	8634812	IfStatement	if ( after_IDAT )		8634802	1					
ANR	8634813	Condition	after_IDAT	644:7:17555:17564	8634802	0	True				
ANR	8634814	Identifier	after_IDAT		8634802	0					
ANR	8634815	ReturnStatement	return d -> after_IDAT ;	645:6:17573:17593	8634802	1	True				
ANR	8634816	PtrMemberAccess	d -> after_IDAT		8634802	0					
ANR	8634817	Identifier	d		8634802	0					
ANR	8634818	Identifier	after_IDAT		8634802	1					
ANR	8634819	ElseStatement	else		8634802	0					
ANR	8634820	ReturnStatement	return d -> before_IDAT ;	648:6:17610:17631	8634802	0	True				
ANR	8634821	PtrMemberAccess	d -> before_IDAT		8634802	0					
ANR	8634822	Identifier	d		8634802	0					
ANR	8634823	Identifier	before_IDAT		8634802	1					
ANR	8634824	ReturnType	static png_uint_32		8634802	1					
ANR	8634825	Identifier	get_unknown		8634802	2					
ANR	8634826	ParameterList	"display * d , png_infop info_ptr , int after_IDAT"		8634802	3					
ANR	8634827	Parameter	display * d	639:12:17397:17406	8634802	0	True				
ANR	8634828	ParameterType	display *		8634802	0					
ANR	8634829	Identifier	d		8634802	1					
ANR	8634830	Parameter	png_infop info_ptr	639:24:17409:17426	8634802	1	True				
ANR	8634831	ParameterType	png_infop		8634802	0					
ANR	8634832	Identifier	info_ptr		8634802	1					
ANR	8634833	Parameter	int after_IDAT	639:44:17429:17442	8634802	2	True				
ANR	8634834	ParameterType	int		8634802	0					
ANR	8634835	Identifier	after_IDAT		8634802	1					
ANR	8634836	CFGEntryNode	ENTRY		8634802		True				
ANR	8634837	CFGExitNode	EXIT		8634802		True				
ANR	8634838	Symbol	d		8634802						
ANR	8634839	Symbol	d -> before_IDAT		8634802						
ANR	8634840	Symbol	after_IDAT		8634802						
ANR	8634841	Symbol	d -> after_IDAT		8634802						
ANR	8634842	Symbol	info_ptr		8634802						
ANR	8634843	Symbol	* d		8634802						
ANR	8634844	Function	check	659:0:17958:24520							
ANR	8634845	FunctionDef	"check (FILE * fp , int argc , const char * * argv , png_uint_32p flags , display * d , int set_callback)"		8634844	0					
ANR	8634846	CompoundStatement		662:0:18074:24520	8634844	0					
ANR	8634847	IdentifierDeclStatement	"int i , npasses , ipass ;"	663:3:18079:18100	8634844	0	True				
ANR	8634848	IdentifierDecl	i		8634844	0					
ANR	8634849	IdentifierDeclType	int		8634844	0					
ANR	8634850	Identifier	i		8634844	1					
ANR	8634851	IdentifierDecl	npasses		8634844	1					
ANR	8634852	IdentifierDeclType	int		8634844	0					
ANR	8634853	Identifier	npasses		8634844	1					
ANR	8634854	IdentifierDecl	ipass		8634844	2					
ANR	8634855	IdentifierDeclType	int		8634844	0					
ANR	8634856	Identifier	ipass		8634844	1					
ANR	8634857	IdentifierDeclStatement	png_uint_32 height ;	664:3:18105:18123	8634844	1	True				
ANR	8634858	IdentifierDecl	height		8634844	0					
ANR	8634859	IdentifierDeclType	png_uint_32		8634844	0					
ANR	8634860	Identifier	height		8634844	1					
ANR	8634861	ExpressionStatement	d -> keep = PNG_HANDLE_CHUNK_AS_DEFAULT	666:3:18129:18166	8634844	2	True				
ANR	8634862	AssignmentExpression	d -> keep = PNG_HANDLE_CHUNK_AS_DEFAULT		8634844	0		=			
ANR	8634863	PtrMemberAccess	d -> keep		8634844	0					
ANR	8634864	Identifier	d		8634844	0					
ANR	8634865	Identifier	keep		8634844	1					
ANR	8634866	Identifier	PNG_HANDLE_CHUNK_AS_DEFAULT		8634844	1					
ANR	8634867	ExpressionStatement	d -> before_IDAT = 0	667:3:18171:18189	8634844	3	True				
ANR	8634868	AssignmentExpression	d -> before_IDAT = 0		8634844	0		=			
ANR	8634869	PtrMemberAccess	d -> before_IDAT		8634844	0					
ANR	8634870	Identifier	d		8634844	0					
ANR	8634871	Identifier	before_IDAT		8634844	1					
ANR	8634872	PrimaryExpression	0		8634844	1					
ANR	8634873	ExpressionStatement	d -> after_IDAT = 0	668:3:18194:18211	8634844	4	True				
ANR	8634874	AssignmentExpression	d -> after_IDAT = 0		8634844	0		=			
ANR	8634875	PtrMemberAccess	d -> after_IDAT		8634844	0					
ANR	8634876	Identifier	d		8634844	0					
ANR	8634877	Identifier	after_IDAT		8634844	1					
ANR	8634878	PrimaryExpression	0		8634844	1					
ANR	8634879	ExpressionStatement	"d -> png_ptr = png_create_read_struct ( PNG_LIBPNG_VER_STRING , d , error , warning )"	673:3:18350:18433	8634844	5	True				
ANR	8634880	AssignmentExpression	"d -> png_ptr = png_create_read_struct ( PNG_LIBPNG_VER_STRING , d , error , warning )"		8634844	0		=			
ANR	8634881	PtrMemberAccess	d -> png_ptr		8634844	0					
ANR	8634882	Identifier	d		8634844	0					
ANR	8634883	Identifier	png_ptr		8634844	1					
ANR	8634884	CallExpression	"png_create_read_struct ( PNG_LIBPNG_VER_STRING , d , error , warning )"		8634844	1					
ANR	8634885	Callee	png_create_read_struct		8634844	0					
ANR	8634886	Identifier	png_create_read_struct		8634844	0					
ANR	8634887	ArgumentList	PNG_LIBPNG_VER_STRING		8634844	1					
ANR	8634888	Argument	PNG_LIBPNG_VER_STRING		8634844	0					
ANR	8634889	Identifier	PNG_LIBPNG_VER_STRING		8634844	0					
ANR	8634890	Argument	d		8634844	1					
ANR	8634891	Identifier	d		8634844	0					
ANR	8634892	Argument	error		8634844	2					
ANR	8634893	Identifier	error		8634844	0					
ANR	8634894	Argument	warning		8634844	3					
ANR	8634895	Identifier	warning		8634844	0					
ANR	8634896	IfStatement	if ( d -> png_ptr == NULL )		8634844	6					
ANR	8634897	Condition	d -> png_ptr == NULL	675:7:18442:18459	8634844	0	True				
ANR	8634898	EqualityExpression	d -> png_ptr == NULL		8634844	0		==			
ANR	8634899	PtrMemberAccess	d -> png_ptr		8634844	0					
ANR	8634900	Identifier	d		8634844	0					
ANR	8634901	Identifier	png_ptr		8634844	1					
ANR	8634902	Identifier	NULL		8634844	1					
ANR	8634903	CompoundStatement		15:3:390:390	8634844	1					
ANR	8634904	ExpressionStatement	"fprintf ( stderr , ""%s(%s): could not allocate png struct\\n"" , d -> file , d -> test )"	677:6:18473:18558	8634844	0	True				
ANR	8634905	CallExpression	"fprintf ( stderr , ""%s(%s): could not allocate png struct\\n"" , d -> file , d -> test )"		8634844	0					
ANR	8634906	Callee	fprintf		8634844	0					
ANR	8634907	Identifier	fprintf		8634844	0					
ANR	8634908	ArgumentList	stderr		8634844	1					
ANR	8634909	Argument	stderr		8634844	0					
ANR	8634910	Identifier	stderr		8634844	0					
ANR	8634911	Argument	"""%s(%s): could not allocate png struct\\n"""		8634844	1					
ANR	8634912	PrimaryExpression	"""%s(%s): could not allocate png struct\\n"""		8634844	0					
ANR	8634913	Argument	d -> file		8634844	2					
ANR	8634914	PtrMemberAccess	d -> file		8634844	0					
ANR	8634915	Identifier	d		8634844	0					
ANR	8634916	Identifier	file		8634844	1					
ANR	8634917	Argument	d -> test		8634844	3					
ANR	8634918	PtrMemberAccess	d -> test		8634844	0					
ANR	8634919	Identifier	d		8634844	0					
ANR	8634920	Identifier	test		8634844	1					
ANR	8634921	ExpressionStatement	exit ( 1 )	680:6:18627:18634	8634844	1	True				
ANR	8634922	CallExpression	exit ( 1 )		8634844	0					
ANR	8634923	Callee	exit		8634844	0					
ANR	8634924	Identifier	exit		8634844	0					
ANR	8634925	ArgumentList	1		8634844	1					
ANR	8634926	Argument	1		8634844	0					
ANR	8634927	PrimaryExpression	1		8634844	0					
ANR	8634928	ExpressionStatement	d -> info_ptr = png_create_info_struct ( d -> png_ptr )	683:3:18645:18693	8634844	7	True				
ANR	8634929	AssignmentExpression	d -> info_ptr = png_create_info_struct ( d -> png_ptr )		8634844	0		=			
ANR	8634930	PtrMemberAccess	d -> info_ptr		8634844	0					
ANR	8634931	Identifier	d		8634844	0					
ANR	8634932	Identifier	info_ptr		8634844	1					
ANR	8634933	CallExpression	png_create_info_struct ( d -> png_ptr )		8634844	1					
ANR	8634934	Callee	png_create_info_struct		8634844	0					
ANR	8634935	Identifier	png_create_info_struct		8634844	0					
ANR	8634936	ArgumentList	d -> png_ptr		8634844	1					
ANR	8634937	Argument	d -> png_ptr		8634844	0					
ANR	8634938	PtrMemberAccess	d -> png_ptr		8634844	0					
ANR	8634939	Identifier	d		8634844	0					
ANR	8634940	Identifier	png_ptr		8634844	1					
ANR	8634941	ExpressionStatement	d -> end_ptr = png_create_info_struct ( d -> png_ptr )	684:3:18698:18745	8634844	8	True				
ANR	8634942	AssignmentExpression	d -> end_ptr = png_create_info_struct ( d -> png_ptr )		8634844	0		=			
ANR	8634943	PtrMemberAccess	d -> end_ptr		8634844	0					
ANR	8634944	Identifier	d		8634844	0					
ANR	8634945	Identifier	end_ptr		8634844	1					
ANR	8634946	CallExpression	png_create_info_struct ( d -> png_ptr )		8634844	1					
ANR	8634947	Callee	png_create_info_struct		8634844	0					
ANR	8634948	Identifier	png_create_info_struct		8634844	0					
ANR	8634949	ArgumentList	d -> png_ptr		8634844	1					
ANR	8634950	Argument	d -> png_ptr		8634844	0					
ANR	8634951	PtrMemberAccess	d -> png_ptr		8634844	0					
ANR	8634952	Identifier	d		8634844	0					
ANR	8634953	Identifier	png_ptr		8634844	1					
ANR	8634954	IfStatement	if ( d -> info_ptr == NULL || d -> end_ptr == NULL )		8634844	9					
ANR	8634955	Condition	d -> info_ptr == NULL || d -> end_ptr == NULL	685:7:18754:18794	8634844	0	True				
ANR	8634956	OrExpression	d -> info_ptr == NULL || d -> end_ptr == NULL		8634844	0		||			
ANR	8634957	EqualityExpression	d -> info_ptr == NULL		8634844	0		==			
ANR	8634958	PtrMemberAccess	d -> info_ptr		8634844	0					
ANR	8634959	Identifier	d		8634844	0					
ANR	8634960	Identifier	info_ptr		8634844	1					
ANR	8634961	Identifier	NULL		8634844	1					
ANR	8634962	EqualityExpression	d -> end_ptr == NULL		8634844	1		==			
ANR	8634963	PtrMemberAccess	d -> end_ptr		8634844	0					
ANR	8634964	Identifier	d		8634844	0					
ANR	8634965	Identifier	end_ptr		8634844	1					
ANR	8634966	Identifier	NULL		8634844	1					
ANR	8634967	CompoundStatement		25:3:725:725	8634844	1					
ANR	8634968	ExpressionStatement	"fprintf ( stderr , ""%s(%s): could not allocate png info\\n"" , d -> file , d -> test )"	687:6:18808:18891	8634844	0	True				
ANR	8634969	CallExpression	"fprintf ( stderr , ""%s(%s): could not allocate png info\\n"" , d -> file , d -> test )"		8634844	0					
ANR	8634970	Callee	fprintf		8634844	0					
ANR	8634971	Identifier	fprintf		8634844	0					
ANR	8634972	ArgumentList	stderr		8634844	1					
ANR	8634973	Argument	stderr		8634844	0					
ANR	8634974	Identifier	stderr		8634844	0					
ANR	8634975	Argument	"""%s(%s): could not allocate png info\\n"""		8634844	1					
ANR	8634976	PrimaryExpression	"""%s(%s): could not allocate png info\\n"""		8634844	0					
ANR	8634977	Argument	d -> file		8634844	2					
ANR	8634978	PtrMemberAccess	d -> file		8634844	0					
ANR	8634979	Identifier	d		8634844	0					
ANR	8634980	Identifier	file		8634844	1					
ANR	8634981	Argument	d -> test		8634844	3					
ANR	8634982	PtrMemberAccess	d -> test		8634844	0					
ANR	8634983	Identifier	d		8634844	0					
ANR	8634984	Identifier	test		8634844	1					
ANR	8634985	ExpressionStatement	clean_display ( d )	689:6:18899:18915	8634844	1	True				
ANR	8634986	CallExpression	clean_display ( d )		8634844	0					
ANR	8634987	Callee	clean_display		8634844	0					
ANR	8634988	Identifier	clean_display		8634844	0					
ANR	8634989	ArgumentList	d		8634844	1					
ANR	8634990	Argument	d		8634844	0					
ANR	8634991	Identifier	d		8634844	0					
ANR	8634992	ExpressionStatement	exit ( 1 )	690:6:18923:18930	8634844	2	True				
ANR	8634993	CallExpression	exit ( 1 )		8634844	0					
ANR	8634994	Callee	exit		8634844	0					
ANR	8634995	Identifier	exit		8634844	0					
ANR	8634996	ArgumentList	1		8634844	1					
ANR	8634997	Argument	1		8634844	0					
ANR	8634998	PrimaryExpression	1		8634844	0					
ANR	8634999	ExpressionStatement	"png_init_io ( d -> png_ptr , fp )"	693:3:18941:18968	8634844	10	True				
ANR	8635000	CallExpression	"png_init_io ( d -> png_ptr , fp )"		8634844	0					
ANR	8635001	Callee	png_init_io		8634844	0					
ANR	8635002	Identifier	png_init_io		8634844	0					
ANR	8635003	ArgumentList	d -> png_ptr		8634844	1					
ANR	8635004	Argument	d -> png_ptr		8634844	0					
ANR	8635005	PtrMemberAccess	d -> png_ptr		8634844	0					
ANR	8635006	Identifier	d		8634844	0					
ANR	8635007	Identifier	png_ptr		8634844	1					
ANR	8635008	Argument	fp		8634844	1					
ANR	8635009	Identifier	fp		8634844	0					
ANR	8635010	Statement	ifdef	695:3:18974:18978	8634844	11	True				
ANR	8635011	Statement	PNG_READ_USER_CHUNKS_SUPPORTED	695:9:18980:19009	8634844	12	True				
ANR	8635012	IfStatement	if ( set_callback )		8634844	13					
ANR	8635013	Condition	set_callback	699:10:19149:19160	8634844	0	True				
ANR	8635014	Identifier	set_callback		8634844	0					
ANR	8635015	ExpressionStatement	"png_set_read_user_chunk_fn ( d -> png_ptr , d , read_callback )"	700:9:19172:19228	8634844	1	True				
ANR	8635016	CallExpression	"png_set_read_user_chunk_fn ( d -> png_ptr , d , read_callback )"		8634844	0					
ANR	8635017	Callee	png_set_read_user_chunk_fn		8634844	0					
ANR	8635018	Identifier	png_set_read_user_chunk_fn		8634844	0					
ANR	8635019	ArgumentList	d -> png_ptr		8634844	1					
ANR	8635020	Argument	d -> png_ptr		8634844	0					
ANR	8635021	PtrMemberAccess	d -> png_ptr		8634844	0					
ANR	8635022	Identifier	d		8634844	0					
ANR	8635023	Identifier	png_ptr		8634844	1					
ANR	8635024	Argument	d		8634844	1					
ANR	8635025	Identifier	d		8634844	0					
ANR	8635026	Argument	read_callback		8634844	2					
ANR	8635027	Identifier	read_callback		8634844	0					
ANR	8635028	ElseStatement	else		8634844	0					
ANR	8635029	Statement	UNUSED	702:6:19244:19249	8634844	0	True				
ANR	8635030	Statement	(	702:12:19250:19250	8634844	14	True				
ANR	8635031	Statement	set_callback	702:13:19251:19262	8634844	15	True				
ANR	8635032	Statement	)	702:25:19263:19263	8634844	16	True				
ANR	8635033	Statement	endif	703:3:19268:19272	8634844	17	True				
ANR	8635034	ForStatement	for ( i = 0 ; i < argc ; ++ i )		8634844	18					
ANR	8635035	ForInit	i = 0 ;	709:8:19469:19472	8634844	0	True				
ANR	8635036	AssignmentExpression	i = 0		8634844	0		=			
ANR	8635037	Identifier	i		8634844	0					
ANR	8635038	PrimaryExpression	0		8634844	1					
ANR	8635039	Condition	i < argc	709:13:19474:19479	8634844	1	True				
ANR	8635040	RelationalExpression	i < argc		8634844	0		<			
ANR	8635041	Identifier	i		8634844	0					
ANR	8635042	Identifier	argc		8634844	1					
ANR	8635043	UnaryExpression	++ i	709:21:19482:19484	8634844	2	True				
ANR	8635044	IncDec	++		8634844	0					
ANR	8635045	Identifier	i		8634844	1					
ANR	8635046	CompoundStatement		50:6:1423:1464	8634844	3					
ANR	8635047	IdentifierDeclStatement	"const char * equals = strchr ( argv [ i ] , '=' ) ;"	711:6:19498:19539	8634844	0	True				
ANR	8635048	IdentifierDecl	"* equals = strchr ( argv [ i ] , '=' )"		8634844	0					
ANR	8635049	IdentifierDeclType	const char *		8634844	0					
ANR	8635050	Identifier	equals		8634844	1					
ANR	8635051	AssignmentExpression	"* equals = strchr ( argv [ i ] , '=' )"		8634844	2		=			
ANR	8635052	Identifier	equals		8634844	0					
ANR	8635053	CallExpression	"strchr ( argv [ i ] , '=' )"		8634844	1					
ANR	8635054	Callee	strchr		8634844	0					
ANR	8635055	Identifier	strchr		8634844	0					
ANR	8635056	ArgumentList	argv [ i ]		8634844	1					
ANR	8635057	Argument	argv [ i ]		8634844	0					
ANR	8635058	ArrayIndexing	argv [ i ]		8634844	0					
ANR	8635059	Identifier	argv		8634844	0					
ANR	8635060	Identifier	i		8634844	1					
ANR	8635061	Argument	'='		8634844	1					
ANR	8635062	PrimaryExpression	'='		8634844	0					
ANR	8635063	IfStatement	if ( equals != NULL )		8634844	1					
ANR	8635064	Condition	equals != NULL	713:10:19552:19565	8634844	0	True				
ANR	8635065	EqualityExpression	equals != NULL		8634844	0		!=			
ANR	8635066	Identifier	equals		8634844	0					
ANR	8635067	Identifier	NULL		8634844	1					
ANR	8635068	CompoundStatement		54:9:1510:1527	8634844	1					
ANR	8635069	IdentifierDeclStatement	"int chunk , option ;"	715:9:19585:19602	8634844	0	True				
ANR	8635070	IdentifierDecl	chunk		8634844	0					
ANR	8635071	IdentifierDeclType	int		8634844	0					
ANR	8635072	Identifier	chunk		8634844	1					
ANR	8635073	IdentifierDecl	option		8634844	1					
ANR	8635074	IdentifierDeclType	int		8634844	0					
ANR	8635075	Identifier	option		8634844	1					
ANR	8635076	IfStatement	"if ( strcmp ( equals + 1 , ""default"" ) == 0 )"		8634844	1					
ANR	8635077	Condition	"strcmp ( equals + 1 , ""default"" ) == 0"	717:13:19618:19649	8634844	0	True				
ANR	8635078	EqualityExpression	"strcmp ( equals + 1 , ""default"" ) == 0"		8634844	0		==			
ANR	8635079	CallExpression	"strcmp ( equals + 1 , ""default"" )"		8634844	0					
ANR	8635080	Callee	strcmp		8634844	0					
ANR	8635081	Identifier	strcmp		8634844	0					
ANR	8635082	ArgumentList	equals + 1		8634844	1					
ANR	8635083	Argument	equals + 1		8634844	0					
ANR	8635084	AdditiveExpression	equals + 1		8634844	0		+			
ANR	8635085	Identifier	equals		8634844	0					
ANR	8635086	PrimaryExpression	1		8634844	1					
ANR	8635087	Argument	"""default"""		8634844	1					
ANR	8635088	PrimaryExpression	"""default"""		8634844	0					
ANR	8635089	PrimaryExpression	0		8634844	1					
ANR	8635090	ExpressionStatement	option = PNG_HANDLE_CHUNK_AS_DEFAULT	718:12:19664:19700	8634844	1	True				
ANR	8635091	AssignmentExpression	option = PNG_HANDLE_CHUNK_AS_DEFAULT		8634844	0		=			
ANR	8635092	Identifier	option		8634844	0					
ANR	8635093	Identifier	PNG_HANDLE_CHUNK_AS_DEFAULT		8634844	1					
ANR	8635094	ElseStatement	else		8634844	0					
ANR	8635095	IfStatement	"if ( strcmp ( equals + 1 , ""discard"" ) == 0 )"		8634844	0					
ANR	8635096	Condition	"strcmp ( equals + 1 , ""discard"" ) == 0"	719:18:19720:19751	8634844	0	True				
ANR	8635097	EqualityExpression	"strcmp ( equals + 1 , ""discard"" ) == 0"		8634844	0		==			
ANR	8635098	CallExpression	"strcmp ( equals + 1 , ""discard"" )"		8634844	0					
ANR	8635099	Callee	strcmp		8634844	0					
ANR	8635100	Identifier	strcmp		8634844	0					
ANR	8635101	ArgumentList	equals + 1		8634844	1					
ANR	8635102	Argument	equals + 1		8634844	0					
ANR	8635103	AdditiveExpression	equals + 1		8634844	0		+			
ANR	8635104	Identifier	equals		8634844	0					
ANR	8635105	PrimaryExpression	1		8634844	1					
ANR	8635106	Argument	"""discard"""		8634844	1					
ANR	8635107	PrimaryExpression	"""discard"""		8634844	0					
ANR	8635108	PrimaryExpression	0		8634844	1					
ANR	8635109	ExpressionStatement	option = PNG_HANDLE_CHUNK_NEVER	720:12:19766:19797	8634844	1	True				
ANR	8635110	AssignmentExpression	option = PNG_HANDLE_CHUNK_NEVER		8634844	0		=			
ANR	8635111	Identifier	option		8634844	0					
ANR	8635112	Identifier	PNG_HANDLE_CHUNK_NEVER		8634844	1					
ANR	8635113	ElseStatement	else		8634844	0					
ANR	8635114	IfStatement	"if ( strcmp ( equals + 1 , ""if-safe"" ) == 0 )"		8634844	0					
ANR	8635115	Condition	"strcmp ( equals + 1 , ""if-safe"" ) == 0"	721:18:19817:19848	8634844	0	True				
ANR	8635116	EqualityExpression	"strcmp ( equals + 1 , ""if-safe"" ) == 0"		8634844	0		==			
ANR	8635117	CallExpression	"strcmp ( equals + 1 , ""if-safe"" )"		8634844	0					
ANR	8635118	Callee	strcmp		8634844	0					
ANR	8635119	Identifier	strcmp		8634844	0					
ANR	8635120	ArgumentList	equals + 1		8634844	1					
ANR	8635121	Argument	equals + 1		8634844	0					
ANR	8635122	AdditiveExpression	equals + 1		8634844	0		+			
ANR	8635123	Identifier	equals		8634844	0					
ANR	8635124	PrimaryExpression	1		8634844	1					
ANR	8635125	Argument	"""if-safe"""		8634844	1					
ANR	8635126	PrimaryExpression	"""if-safe"""		8634844	0					
ANR	8635127	PrimaryExpression	0		8634844	1					
ANR	8635128	ExpressionStatement	option = PNG_HANDLE_CHUNK_IF_SAFE	722:12:19863:19896	8634844	1	True				
ANR	8635129	AssignmentExpression	option = PNG_HANDLE_CHUNK_IF_SAFE		8634844	0		=			
ANR	8635130	Identifier	option		8634844	0					
ANR	8635131	Identifier	PNG_HANDLE_CHUNK_IF_SAFE		8634844	1					
ANR	8635132	ElseStatement	else		8634844	0					
ANR	8635133	IfStatement	"if ( strcmp ( equals + 1 , ""save"" ) == 0 )"		8634844	0					
ANR	8635134	Condition	"strcmp ( equals + 1 , ""save"" ) == 0"	723:18:19916:19944	8634844	0	True				
ANR	8635135	EqualityExpression	"strcmp ( equals + 1 , ""save"" ) == 0"		8634844	0		==			
ANR	8635136	CallExpression	"strcmp ( equals + 1 , ""save"" )"		8634844	0					
ANR	8635137	Callee	strcmp		8634844	0					
ANR	8635138	Identifier	strcmp		8634844	0					
ANR	8635139	ArgumentList	equals + 1		8634844	1					
ANR	8635140	Argument	equals + 1		8634844	0					
ANR	8635141	AdditiveExpression	equals + 1		8634844	0		+			
ANR	8635142	Identifier	equals		8634844	0					
ANR	8635143	PrimaryExpression	1		8634844	1					
ANR	8635144	Argument	"""save"""		8634844	1					
ANR	8635145	PrimaryExpression	"""save"""		8634844	0					
ANR	8635146	PrimaryExpression	0		8634844	1					
ANR	8635147	ExpressionStatement	option = PNG_HANDLE_CHUNK_ALWAYS	724:12:19959:19991	8634844	1	True				
ANR	8635148	AssignmentExpression	option = PNG_HANDLE_CHUNK_ALWAYS		8634844	0		=			
ANR	8635149	Identifier	option		8634844	0					
ANR	8635150	Identifier	PNG_HANDLE_CHUNK_ALWAYS		8634844	1					
ANR	8635151	ElseStatement	else		8634844	0					
ANR	8635152	CompoundStatement		65:9:1941:1941	8634844	0					
ANR	8635153	ExpressionStatement	"fprintf ( stderr , ""%s(%s): %s: unrecognized chunk option\\n"" , d -> file , d -> test , argv [ i ] )"	727:12:20030:20130	8634844	0	True				
ANR	8635154	CallExpression	"fprintf ( stderr , ""%s(%s): %s: unrecognized chunk option\\n"" , d -> file , d -> test , argv [ i ] )"		8634844	0					
ANR	8635155	Callee	fprintf		8634844	0					
ANR	8635156	Identifier	fprintf		8634844	0					
ANR	8635157	ArgumentList	stderr		8634844	1					
ANR	8635158	Argument	stderr		8634844	0					
ANR	8635159	Identifier	stderr		8634844	0					
ANR	8635160	Argument	"""%s(%s): %s: unrecognized chunk option\\n"""		8634844	1					
ANR	8635161	PrimaryExpression	"""%s(%s): %s: unrecognized chunk option\\n"""		8634844	0					
ANR	8635162	Argument	d -> file		8634844	2					
ANR	8635163	PtrMemberAccess	d -> file		8634844	0					
ANR	8635164	Identifier	d		8634844	0					
ANR	8635165	Identifier	file		8634844	1					
ANR	8635166	Argument	d -> test		8634844	3					
ANR	8635167	PtrMemberAccess	d -> test		8634844	0					
ANR	8635168	Identifier	d		8634844	0					
ANR	8635169	Identifier	test		8634844	1					
ANR	8635170	Argument	argv [ i ]		8634844	4					
ANR	8635171	ArrayIndexing	argv [ i ]		8634844	0					
ANR	8635172	Identifier	argv		8634844	0					
ANR	8635173	Identifier	i		8634844	1					
ANR	8635174	ExpressionStatement	display_exit ( d )	729:12:20144:20159	8634844	1	True				
ANR	8635175	CallExpression	display_exit ( d )		8634844	0					
ANR	8635176	Callee	display_exit		8634844	0					
ANR	8635177	Identifier	display_exit		8634844	0					
ANR	8635178	ArgumentList	d		8634844	1					
ANR	8635179	Argument	d		8634844	0					
ANR	8635180	Identifier	d		8634844	0					
ANR	8635181	SwitchStatement	switch ( equals - argv [ i ] )		8634844	2					
ANR	8635182	Condition	equals - argv [ i ]	732:17:20190:20205	8634844	0	True				
ANR	8635183	AdditiveExpression	equals - argv [ i ]		8634844	0		-			
ANR	8635184	Identifier	equals		8634844	0					
ANR	8635185	ArrayIndexing	argv [ i ]		8634844	1					
ANR	8635186	Identifier	argv		8634844	0					
ANR	8635187	Identifier	i		8634844	1					
ANR	8635188	CompoundStatement		72:9:2142:2142	8634844	1					
ANR	8635189	Label	case 4 :	734:12:20231:20237	8634844	0	True				
ANR	8635190	ExpressionStatement	chunk = find ( argv [ i ] )	735:15:20271:20292	8634844	1	True				
ANR	8635191	AssignmentExpression	chunk = find ( argv [ i ] )		8634844	0		=			
ANR	8635192	Identifier	chunk		8634844	0					
ANR	8635193	CallExpression	find ( argv [ i ] )		8634844	1					
ANR	8635194	Callee	find		8634844	0					
ANR	8635195	Identifier	find		8634844	0					
ANR	8635196	ArgumentList	argv [ i ]		8634844	1					
ANR	8635197	Argument	argv [ i ]		8634844	0					
ANR	8635198	ArrayIndexing	argv [ i ]		8634844	0					
ANR	8635199	Identifier	argv		8634844	0					
ANR	8635200	Identifier	i		8634844	1					
ANR	8635201	IfStatement	if ( chunk >= 0 )		8634844	2					
ANR	8635202	Condition	chunk >= 0	737:19:20314:20323	8634844	0	True				
ANR	8635203	RelationalExpression	chunk >= 0		8634844	0		>=			
ANR	8635204	Identifier	chunk		8634844	0					
ANR	8635205	PrimaryExpression	0		8634844	1					
ANR	8635206	CompoundStatement		77:15:2266:2266	8634844	1					
ANR	8635207	Statement	if	744:18:20696:20697	8634844	0	True				
ANR	8635208	Statement	PNG_LIBPNG_VER	744:21:20699:20712	8634844	1	True				
ANR	8635209	Statement	>=	744:36:20714:20715	8634844	2	True				
ANR	8635210	Statement	10700	744:39:20717:20721	8634844	3	True				
ANR	8635211	Statement	&&	744:45:20723:20724	8634844	4	True				
ANR	8635212	Statement	!	745:21:20748:20748	8634844	5	True				
ANR	8635213	Statement	defined	745:22:20749:20755	8634844	6	True				
ANR	8635214	Statement	(	745:29:20756:20756	8634844	7	True				
ANR	8635215	Statement	PNG_SAVE_UNKNOWN_CHUNKS_SUPPORTED	745:30:20757:20789	8634844	8	True				
ANR	8635216	Statement	)	745:63:20790:20790	8634844	9	True				
ANR	8635217	IfStatement	if ( option < PNG_HANDLE_CHUNK_IF_SAFE )		8634844	10					
ANR	8635218	Condition	option < PNG_HANDLE_CHUNK_IF_SAFE	746:25:20817:20849	8634844	0	True				
ANR	8635219	RelationalExpression	option < PNG_HANDLE_CHUNK_IF_SAFE		8634844	0		<			
ANR	8635220	Identifier	option		8634844	0					
ANR	8635221	Identifier	PNG_HANDLE_CHUNK_IF_SAFE		8634844	1					
ANR	8635222	Statement	endif	747:18:20870:20874	8634844	1	True				
ANR	8635223	CompoundStatement		88:21:2873:2889	8634844	11					
ANR	8635224	IdentifierDeclStatement	png_byte name [ 5 ] ;	749:21:20948:20964	8634844	0	True				
ANR	8635225	IdentifierDecl	name [ 5 ]		8634844	0					
ANR	8635226	IdentifierDeclType	png_byte [ 5 ]		8634844	0					
ANR	8635227	Identifier	name		8634844	1					
ANR	8635228	PrimaryExpression	5		8634844	2					
ANR	8635229	ExpressionStatement	"memcpy ( name , chunk_info [ chunk ] . name , 5 )"	751:21:20988:21027	8634844	1	True				
ANR	8635230	CallExpression	"memcpy ( name , chunk_info [ chunk ] . name , 5 )"		8634844	0					
ANR	8635231	Callee	memcpy		8634844	0					
ANR	8635232	Identifier	memcpy		8634844	0					
ANR	8635233	ArgumentList	name		8634844	1					
ANR	8635234	Argument	name		8634844	0					
ANR	8635235	Identifier	name		8634844	0					
ANR	8635236	Argument	chunk_info [ chunk ] . name		8634844	1					
ANR	8635237	MemberAccess	chunk_info [ chunk ] . name		8634844	0					
ANR	8635238	ArrayIndexing	chunk_info [ chunk ]		8634844	0					
ANR	8635239	Identifier	chunk_info		8634844	0					
ANR	8635240	Identifier	chunk		8634844	1					
ANR	8635241	Identifier	name		8634844	1					
ANR	8635242	Argument	5		8634844	2					
ANR	8635243	PrimaryExpression	5		8634844	0					
ANR	8635244	ExpressionStatement	"png_set_keep_unknown_chunks ( d -> png_ptr , option , name , 1 )"	752:21:21050:21106	8634844	2	True				
ANR	8635245	CallExpression	"png_set_keep_unknown_chunks ( d -> png_ptr , option , name , 1 )"		8634844	0					
ANR	8635246	Callee	png_set_keep_unknown_chunks		8634844	0					
ANR	8635247	Identifier	png_set_keep_unknown_chunks		8634844	0					
ANR	8635248	ArgumentList	d -> png_ptr		8634844	1					
ANR	8635249	Argument	d -> png_ptr		8634844	0					
ANR	8635250	PtrMemberAccess	d -> png_ptr		8634844	0					
ANR	8635251	Identifier	d		8634844	0					
ANR	8635252	Identifier	png_ptr		8634844	1					
ANR	8635253	Argument	option		8634844	1					
ANR	8635254	Identifier	option		8634844	0					
ANR	8635255	Argument	name		8634844	2					
ANR	8635256	Identifier	name		8634844	0					
ANR	8635257	Argument	1		8634844	3					
ANR	8635258	PrimaryExpression	1		8634844	0					
ANR	8635259	ExpressionStatement	chunk_info [ chunk ] . keep = option	753:21:21129:21160	8634844	3	True				
ANR	8635260	AssignmentExpression	chunk_info [ chunk ] . keep = option		8634844	0		=			
ANR	8635261	MemberAccess	chunk_info [ chunk ] . keep		8634844	0					
ANR	8635262	ArrayIndexing	chunk_info [ chunk ]		8634844	0					
ANR	8635263	Identifier	chunk_info		8634844	0					
ANR	8635264	Identifier	chunk		8634844	1					
ANR	8635265	Identifier	keep		8634844	1					
ANR	8635266	Identifier	option		8634844	1					
ANR	8635267	ContinueStatement	continue ;	755:18:21200:21208	8634844	12	True				
ANR	8635268	BreakStatement	break ;	758:15:21243:21248	8634844	3	True				
ANR	8635269	Label	case 7 :	760:12:21263:21269	8634844	4	True				
ANR	8635270	IfStatement	"if ( memcmp ( argv [ i ] , ""default"" , 7 ) == 0 )"		8634844	5					
ANR	8635271	Condition	"memcmp ( argv [ i ] , ""default"" , 7 ) == 0"	761:19:21304:21337	8634844	0	True				
ANR	8635272	EqualityExpression	"memcmp ( argv [ i ] , ""default"" , 7 ) == 0"		8634844	0		==			
ANR	8635273	CallExpression	"memcmp ( argv [ i ] , ""default"" , 7 )"		8634844	0					
ANR	8635274	Callee	memcmp		8634844	0					
ANR	8635275	Identifier	memcmp		8634844	0					
ANR	8635276	ArgumentList	argv [ i ]		8634844	1					
ANR	8635277	Argument	argv [ i ]		8634844	0					
ANR	8635278	ArrayIndexing	argv [ i ]		8634844	0					
ANR	8635279	Identifier	argv		8634844	0					
ANR	8635280	Identifier	i		8634844	1					
ANR	8635281	Argument	"""default"""		8634844	1					
ANR	8635282	PrimaryExpression	"""default"""		8634844	0					
ANR	8635283	Argument	7		8634844	2					
ANR	8635284	PrimaryExpression	7		8634844	0					
ANR	8635285	PrimaryExpression	0		8634844	1					
ANR	8635286	CompoundStatement		105:18:3474:3588	8634844	1					
ANR	8635287	Statement	if	763:18:21375:21376	8634844	0	True				
ANR	8635288	Statement	PNG_LIBPNG_VER	763:21:21378:21391	8634844	1	True				
ANR	8635289	Statement	>=	763:36:21393:21394	8634844	2	True				
ANR	8635290	Statement	10700	763:39:21396:21400	8634844	3	True				
ANR	8635291	Statement	&&	763:45:21402:21403	8634844	4	True				
ANR	8635292	Statement	!	764:21:21427:21427	8634844	5	True				
ANR	8635293	Statement	defined	764:22:21428:21434	8634844	6	True				
ANR	8635294	Statement	(	764:29:21435:21435	8634844	7	True				
ANR	8635295	Statement	PNG_SAVE_UNKNOWN_CHUNKS_SUPPORTED	764:30:21436:21468	8634844	8	True				
ANR	8635296	Statement	)	764:63:21469:21469	8634844	9	True				
ANR	8635297	IfStatement	if ( option < PNG_HANDLE_CHUNK_IF_SAFE )		8634844	10					
ANR	8635298	Condition	option < PNG_HANDLE_CHUNK_IF_SAFE	765:25:21496:21528	8634844	0	True				
ANR	8635299	RelationalExpression	option < PNG_HANDLE_CHUNK_IF_SAFE		8634844	0		<			
ANR	8635300	Identifier	option		8634844	0					
ANR	8635301	Identifier	PNG_HANDLE_CHUNK_IF_SAFE		8634844	1					
ANR	8635302	IdentifierDeclStatement	"endif png_set_keep_unknown_chunks ( d -> png_ptr , option , NULL , 0 ) ;"	766:18:21549:21663	8634844	1	True				
ANR	8635303	IdentifierDecl	"png_set_keep_unknown_chunks ( d -> png_ptr , option , NULL , 0 )"		8634844	0					
ANR	8635304	IdentifierDeclType	endif		8634844	0					
ANR	8635305	Identifier	png_set_keep_unknown_chunks		8634844	1					
ANR	8635306	Expression	"d -> png_ptr , option , NULL , 0"		8634844	2					
ANR	8635307	PtrMemberAccess	d -> png_ptr		8634844	0					
ANR	8635308	Identifier	d		8634844	0					
ANR	8635309	Identifier	png_ptr		8634844	1					
ANR	8635310	Expression	"option , NULL , 0"		8634844	1					
ANR	8635311	Identifier	option		8634844	0					
ANR	8635312	Expression	"NULL , 0"		8634844	1					
ANR	8635313	Identifier	NULL		8634844	0					
ANR	8635314	PrimaryExpression	0		8634844	1					
ANR	8635315	ExpressionStatement	d -> keep = option	769:18:21684:21700	8634844	11	True				
ANR	8635316	AssignmentExpression	d -> keep = option		8634844	0		=			
ANR	8635317	PtrMemberAccess	d -> keep		8634844	0					
ANR	8635318	Identifier	d		8634844	0					
ANR	8635319	Identifier	keep		8634844	1					
ANR	8635320	Identifier	option		8634844	1					
ANR	8635321	ContinueStatement	continue ;	770:18:21720:21728	8634844	12	True				
ANR	8635322	BreakStatement	break ;	773:15:21763:21768	8634844	6	True				
ANR	8635323	Label	case 3 :	775:12:21783:21789	8634844	7	True				
ANR	8635324	IfStatement	"if ( memcmp ( argv [ i ] , ""all"" , 3 ) == 0 )"		8634844	8					
ANR	8635325	Condition	"memcmp ( argv [ i ] , ""all"" , 3 ) == 0"	776:19:21820:21849	8634844	0	True				
ANR	8635326	EqualityExpression	"memcmp ( argv [ i ] , ""all"" , 3 ) == 0"		8634844	0		==			
ANR	8635327	CallExpression	"memcmp ( argv [ i ] , ""all"" , 3 )"		8634844	0					
ANR	8635328	Callee	memcmp		8634844	0					
ANR	8635329	Identifier	memcmp		8634844	0					
ANR	8635330	ArgumentList	argv [ i ]		8634844	1					
ANR	8635331	Argument	argv [ i ]		8634844	0					
ANR	8635332	ArrayIndexing	argv [ i ]		8634844	0					
ANR	8635333	Identifier	argv		8634844	0					
ANR	8635334	Identifier	i		8634844	1					
ANR	8635335	Argument	"""all"""		8634844	1					
ANR	8635336	PrimaryExpression	"""all"""		8634844	0					
ANR	8635337	Argument	3		8634844	2					
ANR	8635338	PrimaryExpression	3		8634844	0					
ANR	8635339	PrimaryExpression	0		8634844	1					
ANR	8635340	CompoundStatement		120:18:3986:4101	8634844	1					
ANR	8635341	Statement	if	778:18:21887:21888	8634844	0	True				
ANR	8635342	Statement	PNG_LIBPNG_VER	778:21:21890:21903	8634844	1	True				
ANR	8635343	Statement	>=	778:36:21905:21906	8634844	2	True				
ANR	8635344	Statement	10700	778:39:21908:21912	8634844	3	True				
ANR	8635345	Statement	&&	778:45:21914:21915	8634844	4	True				
ANR	8635346	Statement	!	779:21:21939:21939	8634844	5	True				
ANR	8635347	Statement	defined	779:22:21940:21946	8634844	6	True				
ANR	8635348	Statement	(	779:29:21947:21947	8634844	7	True				
ANR	8635349	Statement	PNG_SAVE_UNKNOWN_CHUNKS_SUPPORTED	779:30:21948:21980	8634844	8	True				
ANR	8635350	Statement	)	779:63:21981:21981	8634844	9	True				
ANR	8635351	IfStatement	if ( option < PNG_HANDLE_CHUNK_IF_SAFE )		8634844	10					
ANR	8635352	Condition	option < PNG_HANDLE_CHUNK_IF_SAFE	780:25:22008:22040	8634844	0	True				
ANR	8635353	RelationalExpression	option < PNG_HANDLE_CHUNK_IF_SAFE		8634844	0		<			
ANR	8635354	Identifier	option		8634844	0					
ANR	8635355	Identifier	PNG_HANDLE_CHUNK_IF_SAFE		8634844	1					
ANR	8635356	IdentifierDeclStatement	"endif png_set_keep_unknown_chunks ( d -> png_ptr , option , NULL , - 1 ) ;"	781:18:22061:22176	8634844	1	True				
ANR	8635357	IdentifierDecl	"png_set_keep_unknown_chunks ( d -> png_ptr , option , NULL , - 1 )"		8634844	0					
ANR	8635358	IdentifierDeclType	endif		8634844	0					
ANR	8635359	Identifier	png_set_keep_unknown_chunks		8634844	1					
ANR	8635360	Expression	"d -> png_ptr , option , NULL , - 1"		8634844	2					
ANR	8635361	PtrMemberAccess	d -> png_ptr		8634844	0					
ANR	8635362	Identifier	d		8634844	0					
ANR	8635363	Identifier	png_ptr		8634844	1					
ANR	8635364	Expression	"option , NULL , - 1"		8634844	1					
ANR	8635365	Identifier	option		8634844	0					
ANR	8635366	Expression	"NULL , - 1"		8634844	1					
ANR	8635367	Identifier	NULL		8634844	0					
ANR	8635368	UnaryOperationExpression	- 1		8634844	1					
ANR	8635369	UnaryOperator	-		8634844	0					
ANR	8635370	PrimaryExpression	1		8634844	1					
ANR	8635371	ExpressionStatement	d -> keep = option	784:18:22197:22213	8634844	11	True				
ANR	8635372	AssignmentExpression	d -> keep = option		8634844	0		=			
ANR	8635373	PtrMemberAccess	d -> keep		8634844	0					
ANR	8635374	Identifier	d		8634844	0					
ANR	8635375	Identifier	keep		8634844	1					
ANR	8635376	Identifier	option		8634844	1					
ANR	8635377	ForStatement	for ( chunk = 0 ; chunk < NINFO ; ++ chunk )		8634844	12					
ANR	8635378	ForInit	chunk = 0 ;	786:23:22239:22248	8634844	0	True				
ANR	8635379	AssignmentExpression	chunk = 0		8634844	0		=			
ANR	8635380	Identifier	chunk		8634844	0					
ANR	8635381	PrimaryExpression	0		8634844	1					
ANR	8635382	Condition	chunk < NINFO	786:34:22250:22262	8634844	1	True				
ANR	8635383	RelationalExpression	chunk < NINFO		8634844	0		<			
ANR	8635384	Identifier	chunk		8634844	0					
ANR	8635385	Identifier	NINFO		8634844	1					
ANR	8635386	UnaryExpression	++ chunk	786:49:22265:22271	8634844	2	True				
ANR	8635387	IncDec	++		8634844	0					
ANR	8635388	Identifier	chunk		8634844	1					
ANR	8635389	IfStatement	if ( chunk_info [ chunk ] . all )		8634844	3					
ANR	8635390	Condition	chunk_info [ chunk ] . all	787:25:22299:22319	8634844	0	True				
ANR	8635391	MemberAccess	chunk_info [ chunk ] . all		8634844	0					
ANR	8635392	ArrayIndexing	chunk_info [ chunk ]		8634844	0					
ANR	8635393	Identifier	chunk_info		8634844	0					
ANR	8635394	Identifier	chunk		8634844	1					
ANR	8635395	Identifier	all		8634844	1					
ANR	8635396	ExpressionStatement	chunk_info [ chunk ] . keep = option	788:24:22346:22377	8634844	1	True				
ANR	8635397	AssignmentExpression	chunk_info [ chunk ] . keep = option		8634844	0		=			
ANR	8635398	MemberAccess	chunk_info [ chunk ] . keep		8634844	0					
ANR	8635399	ArrayIndexing	chunk_info [ chunk ]		8634844	0					
ANR	8635400	Identifier	chunk_info		8634844	0					
ANR	8635401	Identifier	chunk		8634844	1					
ANR	8635402	Identifier	keep		8634844	1					
ANR	8635403	Identifier	option		8634844	1					
ANR	8635404	ContinueStatement	continue ;	789:18:22397:22405	8634844	13	True				
ANR	8635405	BreakStatement	break ;	792:15:22440:22445	8634844	9	True				
ANR	8635406	Label	default :	794:12:22460:22467	8634844	10	True				
ANR	8635407	Identifier	default		8634844	0					
ANR	8635408	BreakStatement	break ;	796:15:22508:22513	8634844	11	True				
ANR	8635409	ExpressionStatement	"fprintf ( stderr , ""%s(%s): %s: unrecognized chunk argument\\n"" , d -> file , d -> test , argv [ i ] )"	800:6:22541:22637	8634844	2	True				
ANR	8635410	CallExpression	"fprintf ( stderr , ""%s(%s): %s: unrecognized chunk argument\\n"" , d -> file , d -> test , argv [ i ] )"		8634844	0					
ANR	8635411	Callee	fprintf		8634844	0					
ANR	8635412	Identifier	fprintf		8634844	0					
ANR	8635413	ArgumentList	stderr		8634844	1					
ANR	8635414	Argument	stderr		8634844	0					
ANR	8635415	Identifier	stderr		8634844	0					
ANR	8635416	Argument	"""%s(%s): %s: unrecognized chunk argument\\n"""		8634844	1					
ANR	8635417	PrimaryExpression	"""%s(%s): %s: unrecognized chunk argument\\n"""		8634844	0					
ANR	8635418	Argument	d -> file		8634844	2					
ANR	8635419	PtrMemberAccess	d -> file		8634844	0					
ANR	8635420	Identifier	d		8634844	0					
ANR	8635421	Identifier	file		8634844	1					
ANR	8635422	Argument	d -> test		8634844	3					
ANR	8635423	PtrMemberAccess	d -> test		8634844	0					
ANR	8635424	Identifier	d		8634844	0					
ANR	8635425	Identifier	test		8634844	1					
ANR	8635426	Argument	argv [ i ]		8634844	4					
ANR	8635427	ArrayIndexing	argv [ i ]		8634844	0					
ANR	8635428	Identifier	argv		8634844	0					
ANR	8635429	Identifier	i		8634844	1					
ANR	8635430	ExpressionStatement	display_exit ( d )	802:6:22645:22660	8634844	3	True				
ANR	8635431	CallExpression	display_exit ( d )		8634844	0					
ANR	8635432	Callee	display_exit		8634844	0					
ANR	8635433	Identifier	display_exit		8634844	0					
ANR	8635434	ArgumentList	d		8634844	1					
ANR	8635435	Argument	d		8634844	0					
ANR	8635436	Identifier	d		8634844	0					
ANR	8635437	ExpressionStatement	"png_read_info ( d -> png_ptr , d -> info_ptr )"	805:3:22671:22709	8634844	19	True				
ANR	8635438	CallExpression	"png_read_info ( d -> png_ptr , d -> info_ptr )"		8634844	0					
ANR	8635439	Callee	png_read_info		8634844	0					
ANR	8635440	Identifier	png_read_info		8634844	0					
ANR	8635441	ArgumentList	d -> png_ptr		8634844	1					
ANR	8635442	Argument	d -> png_ptr		8634844	0					
ANR	8635443	PtrMemberAccess	d -> png_ptr		8634844	0					
ANR	8635444	Identifier	d		8634844	0					
ANR	8635445	Identifier	png_ptr		8634844	1					
ANR	8635446	Argument	d -> info_ptr		8634844	1					
ANR	8635447	PtrMemberAccess	d -> info_ptr		8634844	0					
ANR	8635448	Identifier	d		8634844	0					
ANR	8635449	Identifier	info_ptr		8634844	1					
ANR	8635450	SwitchStatement	"switch ( png_get_interlace_type ( d -> png_ptr , d -> info_ptr ) )"		8634844	20					
ANR	8635451	Condition	"png_get_interlace_type ( d -> png_ptr , d -> info_ptr )"	807:11:22723:22769	8634844	0	True				
ANR	8635452	CallExpression	"png_get_interlace_type ( d -> png_ptr , d -> info_ptr )"		8634844	0					
ANR	8635453	Callee	png_get_interlace_type		8634844	0					
ANR	8635454	Identifier	png_get_interlace_type		8634844	0					
ANR	8635455	ArgumentList	d -> png_ptr		8634844	1					
ANR	8635456	Argument	d -> png_ptr		8634844	0					
ANR	8635457	PtrMemberAccess	d -> png_ptr		8634844	0					
ANR	8635458	Identifier	d		8634844	0					
ANR	8635459	Identifier	png_ptr		8634844	1					
ANR	8635460	Argument	d -> info_ptr		8634844	1					
ANR	8635461	PtrMemberAccess	d -> info_ptr		8634844	0					
ANR	8635462	Identifier	d		8634844	0					
ANR	8635463	Identifier	info_ptr		8634844	1					
ANR	8635464	CompoundStatement		147:3:4700:4700	8634844	1					
ANR	8635465	Label	case PNG_INTERLACE_NONE :	809:6:22783:22806	8634844	0	True				
ANR	8635466	Identifier	PNG_INTERLACE_NONE		8634844	0					
ANR	8635467	ExpressionStatement	npasses = 1	810:9:22817:22828	8634844	1	True				
ANR	8635468	AssignmentExpression	npasses = 1		8634844	0		=			
ANR	8635469	Identifier	npasses		8634844	0					
ANR	8635470	PrimaryExpression	1		8634844	1					
ANR	8635471	BreakStatement	break ;	811:9:22839:22844	8634844	2	True				
ANR	8635472	Label	case PNG_INTERLACE_ADAM7 :	813:6:22853:22877	8634844	3	True				
ANR	8635473	Identifier	PNG_INTERLACE_ADAM7		8634844	0					
ANR	8635474	ExpressionStatement	npasses = PNG_INTERLACE_ADAM7_PASSES	814:9:22888:22924	8634844	4	True				
ANR	8635475	AssignmentExpression	npasses = PNG_INTERLACE_ADAM7_PASSES		8634844	0		=			
ANR	8635476	Identifier	npasses		8634844	0					
ANR	8635477	Identifier	PNG_INTERLACE_ADAM7_PASSES		8634844	1					
ANR	8635478	BreakStatement	break ;	815:9:22935:22940	8634844	5	True				
ANR	8635479	Label	default :	817:6:22949:22956	8634844	6	True				
ANR	8635480	Identifier	default		8634844	0					
ANR	8635481	ExpressionStatement	"fprintf ( stderr , ""%s(%s): invalid interlace type\\n"" , d -> file , d -> test )"	819:9:23025:23094	8634844	7	True				
ANR	8635482	CallExpression	"fprintf ( stderr , ""%s(%s): invalid interlace type\\n"" , d -> file , d -> test )"		8634844	0					
ANR	8635483	Callee	fprintf		8634844	0					
ANR	8635484	Identifier	fprintf		8634844	0					
ANR	8635485	ArgumentList	stderr		8634844	1					
ANR	8635486	Argument	stderr		8634844	0					
ANR	8635487	Identifier	stderr		8634844	0					
ANR	8635488	Argument	"""%s(%s): invalid interlace type\\n"""		8634844	1					
ANR	8635489	PrimaryExpression	"""%s(%s): invalid interlace type\\n"""		8634844	0					
ANR	8635490	Argument	d -> file		8634844	2					
ANR	8635491	PtrMemberAccess	d -> file		8634844	0					
ANR	8635492	Identifier	d		8634844	0					
ANR	8635493	Identifier	file		8634844	1					
ANR	8635494	Argument	d -> test		8634844	3					
ANR	8635495	PtrMemberAccess	d -> test		8634844	0					
ANR	8635496	Identifier	d		8634844	0					
ANR	8635497	Identifier	test		8634844	1					
ANR	8635498	ExpressionStatement	clean_display ( d )	820:9:23105:23121	8634844	8	True				
ANR	8635499	CallExpression	clean_display ( d )		8634844	0					
ANR	8635500	Callee	clean_display		8634844	0					
ANR	8635501	Identifier	clean_display		8634844	0					
ANR	8635502	ArgumentList	d		8634844	1					
ANR	8635503	Argument	d		8634844	0					
ANR	8635504	Identifier	d		8634844	0					
ANR	8635505	ExpressionStatement	exit ( 1 )	821:9:23132:23139	8634844	9	True				
ANR	8635506	CallExpression	exit ( 1 )		8634844	0					
ANR	8635507	Callee	exit		8634844	0					
ANR	8635508	Identifier	exit		8634844	0					
ANR	8635509	ArgumentList	1		8634844	1					
ANR	8635510	Argument	1		8634844	0					
ANR	8635511	PrimaryExpression	1		8634844	0					
ANR	8635512	IfStatement	if ( chunk_info [ 0 ] . keep == PNG_HANDLE_CHUNK_AS_DEFAULT )		8634844	21					
ANR	8635513	Condition	chunk_info [ 0 ] . keep == PNG_HANDLE_CHUNK_AS_DEFAULT	827:7:23277:23333	8634844	0	True				
ANR	8635514	EqualityExpression	chunk_info [ 0 ] . keep == PNG_HANDLE_CHUNK_AS_DEFAULT		8634844	0		==			
ANR	8635515	MemberAccess	chunk_info [ 0 ] . keep		8634844	0					
ANR	8635516	ArrayIndexing	chunk_info [ 0 ]		8634844	0					
ANR	8635517	Identifier	chunk_info		8634844	0					
ANR	8635518	PrimaryExpression	0		8634844	1					
ANR	8635519	Identifier	keep		8634844	1					
ANR	8635520	Identifier	PNG_HANDLE_CHUNK_AS_DEFAULT		8634844	1					
ANR	8635521	CompoundStatement		167:3:5264:5264	8634844	1					
ANR	8635522	ExpressionStatement	png_start_read_image ( d -> png_ptr )	829:6:23347:23379	8634844	0	True				
ANR	8635523	CallExpression	png_start_read_image ( d -> png_ptr )		8634844	0					
ANR	8635524	Callee	png_start_read_image		8634844	0					
ANR	8635525	Identifier	png_start_read_image		8634844	0					
ANR	8635526	ArgumentList	d -> png_ptr		8634844	1					
ANR	8635527	Argument	d -> png_ptr		8634844	0					
ANR	8635528	PtrMemberAccess	d -> png_ptr		8634844	0					
ANR	8635529	Identifier	d		8634844	0					
ANR	8635530	Identifier	png_ptr		8634844	1					
ANR	8635531	ExpressionStatement	"height = png_get_image_height ( d -> png_ptr , d -> info_ptr )"	830:6:23387:23441	8634844	1	True				
ANR	8635532	AssignmentExpression	"height = png_get_image_height ( d -> png_ptr , d -> info_ptr )"		8634844	0		=			
ANR	8635533	Identifier	height		8634844	0					
ANR	8635534	CallExpression	"png_get_image_height ( d -> png_ptr , d -> info_ptr )"		8634844	1					
ANR	8635535	Callee	png_get_image_height		8634844	0					
ANR	8635536	Identifier	png_get_image_height		8634844	0					
ANR	8635537	ArgumentList	d -> png_ptr		8634844	1					
ANR	8635538	Argument	d -> png_ptr		8634844	0					
ANR	8635539	PtrMemberAccess	d -> png_ptr		8634844	0					
ANR	8635540	Identifier	d		8634844	0					
ANR	8635541	Identifier	png_ptr		8634844	1					
ANR	8635542	Argument	d -> info_ptr		8634844	1					
ANR	8635543	PtrMemberAccess	d -> info_ptr		8634844	0					
ANR	8635544	Identifier	d		8634844	0					
ANR	8635545	Identifier	info_ptr		8634844	1					
ANR	8635546	IfStatement	if ( npasses > 1 )		8634844	2					
ANR	8635547	Condition	npasses > 1	832:10:23454:23464	8634844	0	True				
ANR	8635548	RelationalExpression	npasses > 1		8634844	0		>			
ANR	8635549	Identifier	npasses		8634844	0					
ANR	8635550	PrimaryExpression	1		8634844	1					
ANR	8635551	CompoundStatement		173:9:5409:5473	8634844	1					
ANR	8635552	IdentifierDeclStatement	"png_uint_32 width = png_get_image_width ( d -> png_ptr , d -> info_ptr ) ;"	834:9:23484:23548	8634844	0	True				
ANR	8635553	IdentifierDecl	"width = png_get_image_width ( d -> png_ptr , d -> info_ptr )"		8634844	0					
ANR	8635554	IdentifierDeclType	png_uint_32		8634844	0					
ANR	8635555	Identifier	width		8634844	1					
ANR	8635556	AssignmentExpression	"width = png_get_image_width ( d -> png_ptr , d -> info_ptr )"		8634844	2		=			
ANR	8635557	Identifier	width		8634844	0					
ANR	8635558	CallExpression	"png_get_image_width ( d -> png_ptr , d -> info_ptr )"		8634844	1					
ANR	8635559	Callee	png_get_image_width		8634844	0					
ANR	8635560	Identifier	png_get_image_width		8634844	0					
ANR	8635561	ArgumentList	d -> png_ptr		8634844	1					
ANR	8635562	Argument	d -> png_ptr		8634844	0					
ANR	8635563	PtrMemberAccess	d -> png_ptr		8634844	0					
ANR	8635564	Identifier	d		8634844	0					
ANR	8635565	Identifier	png_ptr		8634844	1					
ANR	8635566	Argument	d -> info_ptr		8634844	1					
ANR	8635567	PtrMemberAccess	d -> info_ptr		8634844	0					
ANR	8635568	Identifier	d		8634844	0					
ANR	8635569	Identifier	info_ptr		8634844	1					
ANR	8635570	ForStatement	for ( ipass = 0 ; ipass < npasses ; ++ ipass )		8634844	1					
ANR	8635571	ForInit	ipass = 0 ;	836:14:23565:23572	8634844	0	True				
ANR	8635572	AssignmentExpression	ipass = 0		8634844	0		=			
ANR	8635573	Identifier	ipass		8634844	0					
ANR	8635574	PrimaryExpression	0		8634844	1					
ANR	8635575	Condition	ipass < npasses	836:23:23574:23586	8634844	1	True				
ANR	8635576	RelationalExpression	ipass < npasses		8634844	0		<			
ANR	8635577	Identifier	ipass		8634844	0					
ANR	8635578	Identifier	npasses		8634844	1					
ANR	8635579	UnaryExpression	++ ipass	836:38:23589:23595	8634844	2	True				
ANR	8635580	IncDec	++		8634844	0					
ANR	8635581	Identifier	ipass		8634844	1					
ANR	8635582	CompoundStatement		177:12:5546:5593	8634844	3					
ANR	8635583	IdentifierDeclStatement	"png_uint_32 wPass = PNG_PASS_COLS ( width , ipass ) ;"	838:12:23621:23668	8634844	0	True				
ANR	8635584	IdentifierDecl	"wPass = PNG_PASS_COLS ( width , ipass )"		8634844	0					
ANR	8635585	IdentifierDeclType	png_uint_32		8634844	0					
ANR	8635586	Identifier	wPass		8634844	1					
ANR	8635587	AssignmentExpression	"wPass = PNG_PASS_COLS ( width , ipass )"		8634844	2		=			
ANR	8635588	Identifier	wPass		8634844	0					
ANR	8635589	CallExpression	"PNG_PASS_COLS ( width , ipass )"		8634844	1					
ANR	8635590	Callee	PNG_PASS_COLS		8634844	0					
ANR	8635591	Identifier	PNG_PASS_COLS		8634844	0					
ANR	8635592	ArgumentList	width		8634844	1					
ANR	8635593	Argument	width		8634844	0					
ANR	8635594	Identifier	width		8634844	0					
ANR	8635595	Argument	ipass		8634844	1					
ANR	8635596	Identifier	ipass		8634844	0					
ANR	8635597	IfStatement	if ( wPass > 0 )		8634844	1					
ANR	8635598	Condition	wPass > 0	840:16:23687:23695	8634844	0	True				
ANR	8635599	RelationalExpression	wPass > 0		8634844	0		>			
ANR	8635600	Identifier	wPass		8634844	0					
ANR	8635601	PrimaryExpression	0		8634844	1					
ANR	8635602	CompoundStatement		181:15:5652:5665	8634844	1					
ANR	8635603	IdentifierDeclStatement	png_uint_32 y ;	842:15:23727:23740	8634844	0	True				
ANR	8635604	IdentifierDecl	y		8634844	0					
ANR	8635605	IdentifierDeclType	png_uint_32		8634844	0					
ANR	8635606	Identifier	y		8634844	1					
ANR	8635607	ForStatement	for ( y = 0 ; y < height ; ++ y )		8634844	1					
ANR	8635608	ForInit	y = 0 ;	844:20:23763:23766	8634844	0	True				
ANR	8635609	AssignmentExpression	y = 0		8634844	0		=			
ANR	8635610	Identifier	y		8634844	0					
ANR	8635611	PrimaryExpression	0		8634844	1					
ANR	8635612	Condition	y < height	844:25:23768:23775	8634844	1	True				
ANR	8635613	RelationalExpression	y < height		8634844	0		<			
ANR	8635614	Identifier	y		8634844	0					
ANR	8635615	Identifier	height		8634844	1					
ANR	8635616	UnaryExpression	++ y	844:35:23778:23780	8634844	2	True				
ANR	8635617	IncDec	++		8634844	0					
ANR	8635618	Identifier	y		8634844	1					
ANR	8635619	IfStatement	"if ( PNG_ROW_IN_INTERLACE_PASS ( y , ipass ) )"		8634844	3					
ANR	8635620	Condition	"PNG_ROW_IN_INTERLACE_PASS ( y , ipass )"	844:44:23787:23821	8634844	0	True				
ANR	8635621	CallExpression	"PNG_ROW_IN_INTERLACE_PASS ( y , ipass )"		8634844	0					
ANR	8635622	Callee	PNG_ROW_IN_INTERLACE_PASS		8634844	0					
ANR	8635623	Identifier	PNG_ROW_IN_INTERLACE_PASS		8634844	0					
ANR	8635624	ArgumentList	y		8634844	1					
ANR	8635625	Argument	y		8634844	0					
ANR	8635626	Identifier	y		8634844	0					
ANR	8635627	Argument	ipass		8634844	1					
ANR	8635628	Identifier	ipass		8634844	0					
ANR	8635629	ExpressionStatement	"png_read_row ( d -> png_ptr , NULL , NULL )"	845:18:23842:23878	8634844	1	True				
ANR	8635630	CallExpression	"png_read_row ( d -> png_ptr , NULL , NULL )"		8634844	0					
ANR	8635631	Callee	png_read_row		8634844	0					
ANR	8635632	Identifier	png_read_row		8634844	0					
ANR	8635633	ArgumentList	d -> png_ptr		8634844	1					
ANR	8635634	Argument	d -> png_ptr		8634844	0					
ANR	8635635	PtrMemberAccess	d -> png_ptr		8634844	0					
ANR	8635636	Identifier	d		8634844	0					
ANR	8635637	Identifier	png_ptr		8634844	1					
ANR	8635638	Argument	NULL		8634844	1					
ANR	8635639	Identifier	NULL		8634844	0					
ANR	8635640	Argument	NULL		8634844	2					
ANR	8635641	Identifier	NULL		8634844	0					
ANR	8635642	ElseStatement	else		8634844	0					
ANR	8635643	CompoundStatement		191:9:5905:5918	8634844	0					
ANR	8635644	IdentifierDeclStatement	png_uint_32 y ;	852:9:23980:23993	8634844	0	True				
ANR	8635645	IdentifierDecl	y		8634844	0					
ANR	8635646	IdentifierDeclType	png_uint_32		8634844	0					
ANR	8635647	Identifier	y		8634844	1					
ANR	8635648	ForStatement	for ( y = 0 ; y < height ; ++ y )		8634844	1					
ANR	8635649	ForInit	y = 0 ;	854:14:24010:24013	8634844	0	True				
ANR	8635650	AssignmentExpression	y = 0		8634844	0		=			
ANR	8635651	Identifier	y		8634844	0					
ANR	8635652	PrimaryExpression	0		8634844	1					
ANR	8635653	Condition	y < height	854:19:24015:24022	8634844	1	True				
ANR	8635654	RelationalExpression	y < height		8634844	0		<			
ANR	8635655	Identifier	y		8634844	0					
ANR	8635656	Identifier	height		8634844	1					
ANR	8635657	UnaryExpression	++ y	854:29:24025:24027	8634844	2	True				
ANR	8635658	IncDec	++		8634844	0					
ANR	8635659	Identifier	y		8634844	1					
ANR	8635660	ExpressionStatement	"png_read_row ( d -> png_ptr , NULL , NULL )"	855:12:24042:24078	8634844	3	True				
ANR	8635661	CallExpression	"png_read_row ( d -> png_ptr , NULL , NULL )"		8634844	0					
ANR	8635662	Callee	png_read_row		8634844	0					
ANR	8635663	Identifier	png_read_row		8634844	0					
ANR	8635664	ArgumentList	d -> png_ptr		8634844	1					
ANR	8635665	Argument	d -> png_ptr		8634844	0					
ANR	8635666	PtrMemberAccess	d -> png_ptr		8634844	0					
ANR	8635667	Identifier	d		8634844	0					
ANR	8635668	Identifier	png_ptr		8634844	1					
ANR	8635669	Argument	NULL		8634844	1					
ANR	8635670	Identifier	NULL		8634844	0					
ANR	8635671	Argument	NULL		8634844	2					
ANR	8635672	Identifier	NULL		8634844	0					
ANR	8635673	ExpressionStatement	"png_read_end ( d -> png_ptr , d -> end_ptr )"	859:3:24097:24133	8634844	22	True				
ANR	8635674	CallExpression	"png_read_end ( d -> png_ptr , d -> end_ptr )"		8634844	0					
ANR	8635675	Callee	png_read_end		8634844	0					
ANR	8635676	Identifier	png_read_end		8634844	0					
ANR	8635677	ArgumentList	d -> png_ptr		8634844	1					
ANR	8635678	Argument	d -> png_ptr		8634844	0					
ANR	8635679	PtrMemberAccess	d -> png_ptr		8634844	0					
ANR	8635680	Identifier	d		8634844	0					
ANR	8635681	Identifier	png_ptr		8634844	1					
ANR	8635682	Argument	d -> end_ptr		8634844	1					
ANR	8635683	PtrMemberAccess	d -> end_ptr		8634844	0					
ANR	8635684	Identifier	d		8634844	0					
ANR	8635685	Identifier	end_ptr		8634844	1					
ANR	8635686	ExpressionStatement	"flags [ 0 ] = get_valid ( d , d -> info_ptr )"	861:3:24139:24175	8634844	23	True				
ANR	8635687	AssignmentExpression	"flags [ 0 ] = get_valid ( d , d -> info_ptr )"		8634844	0		=			
ANR	8635688	ArrayIndexing	flags [ 0 ]		8634844	0					
ANR	8635689	Identifier	flags		8634844	0					
ANR	8635690	PrimaryExpression	0		8634844	1					
ANR	8635691	CallExpression	"get_valid ( d , d -> info_ptr )"		8634844	1					
ANR	8635692	Callee	get_valid		8634844	0					
ANR	8635693	Identifier	get_valid		8634844	0					
ANR	8635694	ArgumentList	d		8634844	1					
ANR	8635695	Argument	d		8634844	0					
ANR	8635696	Identifier	d		8634844	0					
ANR	8635697	Argument	d -> info_ptr		8634844	1					
ANR	8635698	PtrMemberAccess	d -> info_ptr		8634844	0					
ANR	8635699	Identifier	d		8634844	0					
ANR	8635700	Identifier	info_ptr		8634844	1					
ANR	8635701	ExpressionStatement	"flags [ 1 ] = get_unknown ( d , d -> info_ptr , 0 )"	862:3:24180:24236	8634844	24	True				
ANR	8635702	AssignmentExpression	"flags [ 1 ] = get_unknown ( d , d -> info_ptr , 0 )"		8634844	0		=			
ANR	8635703	ArrayIndexing	flags [ 1 ]		8634844	0					
ANR	8635704	Identifier	flags		8634844	0					
ANR	8635705	PrimaryExpression	1		8634844	1					
ANR	8635706	CallExpression	"get_unknown ( d , d -> info_ptr , 0 )"		8634844	1					
ANR	8635707	Callee	get_unknown		8634844	0					
ANR	8635708	Identifier	get_unknown		8634844	0					
ANR	8635709	ArgumentList	d		8634844	1					
ANR	8635710	Argument	d		8634844	0					
ANR	8635711	Identifier	d		8634844	0					
ANR	8635712	Argument	d -> info_ptr		8634844	1					
ANR	8635713	PtrMemberAccess	d -> info_ptr		8634844	0					
ANR	8635714	Identifier	d		8634844	0					
ANR	8635715	Identifier	info_ptr		8634844	1					
ANR	8635716	Argument	0		8634844	2					
ANR	8635717	PrimaryExpression	0		8634844	0					
ANR	8635718	ExpressionStatement	flags [ chunk_info [ 0 ] . keep != PNG_HANDLE_CHUNK_AS_DEFAULT ] |= PNG_INFO_IDAT	865:3:24289:24376	8634844	25	True				
ANR	8635719	AssignmentExpression	flags [ chunk_info [ 0 ] . keep != PNG_HANDLE_CHUNK_AS_DEFAULT ] |= PNG_INFO_IDAT		8634844	0		|=			
ANR	8635720	ArrayIndexing	flags [ chunk_info [ 0 ] . keep != PNG_HANDLE_CHUNK_AS_DEFAULT ]		8634844	0					
ANR	8635721	Identifier	flags		8634844	0					
ANR	8635722	EqualityExpression	chunk_info [ 0 ] . keep != PNG_HANDLE_CHUNK_AS_DEFAULT		8634844	1		!=			
ANR	8635723	MemberAccess	chunk_info [ 0 ] . keep		8634844	0					
ANR	8635724	ArrayIndexing	chunk_info [ 0 ]		8634844	0					
ANR	8635725	Identifier	chunk_info		8634844	0					
ANR	8635726	PrimaryExpression	0		8634844	1					
ANR	8635727	Identifier	keep		8634844	1					
ANR	8635728	Identifier	PNG_HANDLE_CHUNK_AS_DEFAULT		8634844	1					
ANR	8635729	Identifier	PNG_INFO_IDAT		8634844	1					
ANR	8635730	ExpressionStatement	"flags [ 2 ] = get_valid ( d , d -> end_ptr )"	868:3:24382:24417	8634844	26	True				
ANR	8635731	AssignmentExpression	"flags [ 2 ] = get_valid ( d , d -> end_ptr )"		8634844	0		=			
ANR	8635732	ArrayIndexing	flags [ 2 ]		8634844	0					
ANR	8635733	Identifier	flags		8634844	0					
ANR	8635734	PrimaryExpression	2		8634844	1					
ANR	8635735	CallExpression	"get_valid ( d , d -> end_ptr )"		8634844	1					
ANR	8635736	Callee	get_valid		8634844	0					
ANR	8635737	Identifier	get_valid		8634844	0					
ANR	8635738	ArgumentList	d		8634844	1					
ANR	8635739	Argument	d		8634844	0					
ANR	8635740	Identifier	d		8634844	0					
ANR	8635741	Argument	d -> end_ptr		8634844	1					
ANR	8635742	PtrMemberAccess	d -> end_ptr		8634844	0					
ANR	8635743	Identifier	d		8634844	0					
ANR	8635744	Identifier	end_ptr		8634844	1					
ANR	8635745	ExpressionStatement	"flags [ 3 ] = get_unknown ( d , d -> end_ptr , 1 )"	869:3:24422:24476	8634844	27	True				
ANR	8635746	AssignmentExpression	"flags [ 3 ] = get_unknown ( d , d -> end_ptr , 1 )"		8634844	0		=			
ANR	8635747	ArrayIndexing	flags [ 3 ]		8634844	0					
ANR	8635748	Identifier	flags		8634844	0					
ANR	8635749	PrimaryExpression	3		8634844	1					
ANR	8635750	CallExpression	"get_unknown ( d , d -> end_ptr , 1 )"		8634844	1					
ANR	8635751	Callee	get_unknown		8634844	0					
ANR	8635752	Identifier	get_unknown		8634844	0					
ANR	8635753	ArgumentList	d		8634844	1					
ANR	8635754	Argument	d		8634844	0					
ANR	8635755	Identifier	d		8634844	0					
ANR	8635756	Argument	d -> end_ptr		8634844	1					
ANR	8635757	PtrMemberAccess	d -> end_ptr		8634844	0					
ANR	8635758	Identifier	d		8634844	0					
ANR	8635759	Identifier	end_ptr		8634844	1					
ANR	8635760	Argument	1		8634844	2					
ANR	8635761	PrimaryExpression	1		8634844	0					
ANR	8635762	ExpressionStatement	clean_display ( d )	871:3:24482:24498	8634844	28	True				
ANR	8635763	CallExpression	clean_display ( d )		8634844	0					
ANR	8635764	Callee	clean_display		8634844	0					
ANR	8635765	Identifier	clean_display		8634844	0					
ANR	8635766	ArgumentList	d		8634844	1					
ANR	8635767	Argument	d		8634844	0					
ANR	8635768	Identifier	d		8634844	0					
ANR	8635769	ReturnStatement	return d -> keep ;	873:3:24504:24518	8634844	29	True				
ANR	8635770	PtrMemberAccess	d -> keep		8634844	0					
ANR	8635771	Identifier	d		8634844	0					
ANR	8635772	Identifier	keep		8634844	1					
ANR	8635773	ReturnType	static int		8634844	1					
ANR	8635774	Identifier	check		8634844	2					
ANR	8635775	ParameterList	"FILE * fp , int argc , const char * * argv , png_uint_32p flags , display * d , int set_callback"		8634844	3					
ANR	8635776	Parameter	FILE * fp	660:6:17975:17982	8634844	0	True				
ANR	8635777	ParameterType	FILE *		8634844	0					
ANR	8635778	Identifier	fp		8634844	1					
ANR	8635779	Parameter	int argc	660:16:17985:17992	8634844	1	True				
ANR	8635780	ParameterType	int		8634844	0					
ANR	8635781	Identifier	argc		8634844	1					
ANR	8635782	Parameter	const char * * argv	660:26:17995:18011	8634844	2	True				
ANR	8635783	ParameterType	const char * *		8634844	0					
ANR	8635784	Identifier	argv		8634844	1					
ANR	8635785	Parameter	png_uint_32p flags	660:45:18014:18031	8634844	3	True				
ANR	8635786	ParameterType	png_uint_32p		8634844	0					
ANR	8635787	Identifier	flags		8634844	1					
ANR	8635788	Parameter	display * d	661:3:18044:18053	8634844	4	True				
ANR	8635789	ParameterType	display *		8634844	0					
ANR	8635790	Identifier	d		8634844	1					
ANR	8635791	Parameter	int set_callback	661:15:18056:18071	8634844	5	True				
ANR	8635792	ParameterType	int		8634844	0					
ANR	8635793	Identifier	set_callback		8634844	1					
ANR	8635794	CFGEntryNode	ENTRY		8634844		True				
ANR	8635795	CFGExitNode	EXIT		8634844		True				
ANR	8635796	Symbol	* PNG_HANDLE_CHUNK_AS_DEFAULT		8634844						
ANR	8635797	Symbol	d -> end_ptr		8634844						
ANR	8635798	Symbol	ipass		8634844						
ANR	8635799	Symbol	strchr		8634844						
ANR	8635800	Symbol	* argv		8634844						
ANR	8635801	Symbol	NINFO		8634844						
ANR	8635802	Symbol	chunk_info [ chunk ] . name		8634844						
ANR	8635803	Symbol	memcmp		8634844						
ANR	8635804	Symbol	PNG_HANDLE_CHUNK_NEVER		8634844						
ANR	8635805	Symbol	find		8634844						
ANR	8635806	Symbol	warning		8634844						
ANR	8635807	Symbol	chunk_info [ chunk ] . keep		8634844						
ANR	8635808	Symbol	wPass		8634844						
ANR	8635809	Symbol	PNG_INTERLACE_ADAM7_PASSES		8634844						
ANR	8635810	Symbol	png_get_image_height		8634844						
ANR	8635811	Symbol	height		8634844						
ANR	8635812	Symbol	strcmp		8634844						
ANR	8635813	Symbol	* * chunk_info		8634844						
ANR	8635814	Symbol	* flags		8634844						
ANR	8635815	Symbol	NULL		8634844						
ANR	8635816	Symbol	read_callback		8634844						
ANR	8635817	Symbol	PNG_HANDLE_CHUNK_IF_SAFE		8634844						
ANR	8635818	Symbol	get_valid		8634844						
ANR	8635819	Symbol	stderr		8634844						
ANR	8635820	Symbol	PNG_HANDLE_CHUNK_ALWAYS		8634844						
ANR	8635821	Symbol	name		8634844						
ANR	8635822	Symbol	chunk_info [ chunk ] . all		8634844						
ANR	8635823	Symbol	chunk_info [ 0 ] . keep		8634844						
ANR	8635824	Symbol	PNG_LIBPNG_VER_STRING		8634844						
ANR	8635825	Symbol	d -> info_ptr		8634844						
ANR	8635826	Symbol	* chunk_info		8634844						
ANR	8635827	Symbol	option		8634844						
ANR	8635828	Symbol	d -> keep		8634844						
ANR	8635829	Symbol	d -> png_ptr		8634844						
ANR	8635830	Symbol	flags		8634844						
ANR	8635831	Symbol	chunk		8634844						
ANR	8635832	Symbol	PNG_INFO_IDAT		8634844						
ANR	8635833	Symbol	fp		8634844						
ANR	8635834	Symbol	d -> after_IDAT		8634844						
ANR	8635835	Symbol	error		8634844						
ANR	8635836	Symbol	* chunk_info [ 0 ] . keep		8634844						
ANR	8635837	Symbol	argv		8634844						
ANR	8635838	Symbol	chunk_info		8634844						
ANR	8635839	Symbol	PNG_HANDLE_CHUNK_AS_DEFAULT		8634844						
ANR	8635840	Symbol	d -> file		8634844						
ANR	8635841	Symbol	png_create_read_struct		8634844						
ANR	8635842	Symbol	PNG_PASS_COLS		8634844						
ANR	8635843	Symbol	argc		8634844						
ANR	8635844	Symbol	png_get_interlace_type		8634844						
ANR	8635845	Symbol	d		8634844						
ANR	8635846	Symbol	PNG_ROW_IN_INTERLACE_PASS		8634844						
ANR	8635847	Symbol	d -> before_IDAT		8634844						
ANR	8635848	Symbol	i		8634844						
ANR	8635849	Symbol	* d		8634844						
ANR	8635850	Symbol	png_create_info_struct		8634844						
ANR	8635851	Symbol	png_set_keep_unknown_chunks		8634844						
ANR	8635852	Symbol	set_callback		8634844						
ANR	8635853	Symbol	* i		8634844						
ANR	8635854	Symbol	* chunk		8634844						
ANR	8635855	Symbol	png_get_image_width		8634844						
ANR	8635856	Symbol	npasses		8634844						
ANR	8635857	Symbol	get_unknown		8634844						
ANR	8635858	Symbol	equals		8634844						
ANR	8635859	Symbol	width		8634844						
ANR	8635860	Symbol	y		8634844						
ANR	8635861	Symbol	d -> test		8634844						
ANR	8635862	Function	check_error	876:0:24523:24870							
ANR	8635863	FunctionDef	"check_error (display * d , png_uint_32 flags , const char * message)"		8635862	0					
ANR	8635864	CompoundStatement		878:0:24599:24870	8635862	0					
ANR	8635865	WhileStatement	while ( flags )		8635862	0					
ANR	8635866	Condition	flags	879:10:24611:24615	8635862	0	True				
ANR	8635867	Identifier	flags		8635862	0					
ANR	8635868	CompoundStatement		5:6:82:108	8635862	1					
ANR	8635869	IdentifierDeclStatement	png_uint_32 flag = flags & - ( png_int_32 ) flags ;	881:6:24629:24674	8635862	0	True				
ANR	8635870	IdentifierDecl	flag = flags & - ( png_int_32 ) flags		8635862	0					
ANR	8635871	IdentifierDeclType	png_uint_32		8635862	0					
ANR	8635872	Identifier	flag		8635862	1					
ANR	8635873	AssignmentExpression	flag = flags & - ( png_int_32 ) flags		8635862	2		=			
ANR	8635874	Identifier	flag		8635862	0					
ANR	8635875	BitAndExpression	flags & - ( png_int_32 ) flags		8635862	1		&			
ANR	8635876	Identifier	flags		8635862	0					
ANR	8635877	UnaryOperationExpression	- ( png_int_32 ) flags		8635862	1					
ANR	8635878	UnaryOperator	-		8635862	0					
ANR	8635879	CastExpression	( png_int_32 ) flags		8635862	1					
ANR	8635880	CastTarget	png_int_32		8635862	0					
ANR	8635881	Identifier	flags		8635862	1					
ANR	8635882	IdentifierDeclStatement	int i = find_by_flag ( flag ) ;	882:6:24682:24708	8635862	1	True				
ANR	8635883	IdentifierDecl	i = find_by_flag ( flag )		8635862	0					
ANR	8635884	IdentifierDeclType	int		8635862	0					
ANR	8635885	Identifier	i		8635862	1					
ANR	8635886	AssignmentExpression	i = find_by_flag ( flag )		8635862	2		=			
ANR	8635887	Identifier	i		8635862	0					
ANR	8635888	CallExpression	find_by_flag ( flag )		8635862	1					
ANR	8635889	Callee	find_by_flag		8635862	0					
ANR	8635890	Identifier	find_by_flag		8635862	0					
ANR	8635891	ArgumentList	flag		8635862	1					
ANR	8635892	Argument	flag		8635862	0					
ANR	8635893	Identifier	flag		8635862	0					
ANR	8635894	ExpressionStatement	"fprintf ( stderr , ""%s(%s): chunk %s: %s\\n"" , d -> file , d -> test , chunk_info [ i ] . name , message )"	884:6:24717:24814	8635862	2	True				
ANR	8635895	CallExpression	"fprintf ( stderr , ""%s(%s): chunk %s: %s\\n"" , d -> file , d -> test , chunk_info [ i ] . name , message )"		8635862	0					
ANR	8635896	Callee	fprintf		8635862	0					
ANR	8635897	Identifier	fprintf		8635862	0					
ANR	8635898	ArgumentList	stderr		8635862	1					
ANR	8635899	Argument	stderr		8635862	0					
ANR	8635900	Identifier	stderr		8635862	0					
ANR	8635901	Argument	"""%s(%s): chunk %s: %s\\n"""		8635862	1					
ANR	8635902	PrimaryExpression	"""%s(%s): chunk %s: %s\\n"""		8635862	0					
ANR	8635903	Argument	d -> file		8635862	2					
ANR	8635904	PtrMemberAccess	d -> file		8635862	0					
ANR	8635905	Identifier	d		8635862	0					
ANR	8635906	Identifier	file		8635862	1					
ANR	8635907	Argument	d -> test		8635862	3					
ANR	8635908	PtrMemberAccess	d -> test		8635862	0					
ANR	8635909	Identifier	d		8635862	0					
ANR	8635910	Identifier	test		8635862	1					
ANR	8635911	Argument	chunk_info [ i ] . name		8635862	4					
ANR	8635912	MemberAccess	chunk_info [ i ] . name		8635862	0					
ANR	8635913	ArrayIndexing	chunk_info [ i ]		8635862	0					
ANR	8635914	Identifier	chunk_info		8635862	0					
ANR	8635915	Identifier	i		8635862	1					
ANR	8635916	Identifier	name		8635862	1					
ANR	8635917	Argument	message		8635862	5					
ANR	8635918	Identifier	message		8635862	0					
ANR	8635919	ExpressionStatement	++ ( d -> error_count )	886:6:24822:24840	8635862	3	True				
ANR	8635920	UnaryExpression	++ ( d -> error_count )		8635862	0					
ANR	8635921	IncDec	++		8635862	0					
ANR	8635922	PtrMemberAccess	d -> error_count		8635862	1					
ANR	8635923	Identifier	d		8635862	0					
ANR	8635924	Identifier	error_count		8635862	1					
ANR	8635925	ExpressionStatement	flags &= ~flag	888:6:24849:24863	8635862	4	True				
ANR	8635926	AssignmentExpression	flags &= ~flag		8635862	0		&=			
ANR	8635927	Identifier	flags		8635862	0					
ANR	8635928	Identifier	~flag		8635862	1					
ANR	8635929	ReturnType	static void		8635862	1					
ANR	8635930	Identifier	check_error		8635862	2					
ANR	8635931	ParameterList	"display * d , png_uint_32 flags , const char * message"		8635862	3					
ANR	8635932	Parameter	display * d	877:12:24547:24556	8635862	0	True				
ANR	8635933	ParameterType	display *		8635862	0					
ANR	8635934	Identifier	d		8635862	1					
ANR	8635935	Parameter	png_uint_32 flags	877:24:24559:24575	8635862	1	True				
ANR	8635936	ParameterType	png_uint_32		8635862	0					
ANR	8635937	Identifier	flags		8635862	1					
ANR	8635938	Parameter	const char * message	877:43:24578:24596	8635862	2	True				
ANR	8635939	ParameterType	const char *		8635862	0					
ANR	8635940	Identifier	message		8635862	1					
ANR	8635941	CFGEntryNode	ENTRY		8635862		True				
ANR	8635942	CFGExitNode	EXIT		8635862		True				
ANR	8635943	Symbol	flag		8635862						
ANR	8635944	Symbol	d		8635862						
ANR	8635945	Symbol	flags		8635862						
ANR	8635946	Symbol	i		8635862						
ANR	8635947	Symbol	message		8635862						
ANR	8635948	Symbol	stderr		8635862						
ANR	8635949	Symbol	chunk_info		8635862						
ANR	8635950	Symbol	* d		8635862						
ANR	8635951	Symbol	chunk_info [ i ] . name		8635862						
ANR	8635952	Symbol	* i		8635862						
ANR	8635953	Symbol	~flag		8635862						
ANR	8635954	Symbol	d -> file		8635862						
ANR	8635955	Symbol	find_by_flag		8635862						
ANR	8635956	Symbol	d -> test		8635862						
ANR	8635957	Symbol	* chunk_info		8635862						
ANR	8635958	Function	check_handling	892:0:24873:28210							
ANR	8635959	FunctionDef	"check_handling (display * d , int def , png_uint_32 chunks , png_uint_32 known , png_uint_32 unknown , const char * position , int set_callback)"		8635958	0					
ANR	8635960	CompoundStatement		895:0:25024:28210	8635958	0					
ANR	8635961	WhileStatement	while ( chunks )		8635958	0					
ANR	8635962	Condition	chunks	896:10:25036:25041	8635958	0	True				
ANR	8635963	Identifier	chunks		8635958	0					
ANR	8635964	CompoundStatement		8:6:180:205	8635958	1					
ANR	8635965	IdentifierDeclStatement	png_uint_32 flag = chunks & - ( png_int_32 ) chunks ;	898:6:25055:25102	8635958	0	True				
ANR	8635966	IdentifierDecl	flag = chunks & - ( png_int_32 ) chunks		8635958	0					
ANR	8635967	IdentifierDeclType	png_uint_32		8635958	0					
ANR	8635968	Identifier	flag		8635958	1					
ANR	8635969	AssignmentExpression	flag = chunks & - ( png_int_32 ) chunks		8635958	2		=			
ANR	8635970	Identifier	flag		8635958	0					
ANR	8635971	BitAndExpression	chunks & - ( png_int_32 ) chunks		8635958	1		&			
ANR	8635972	Identifier	chunks		8635958	0					
ANR	8635973	UnaryOperationExpression	- ( png_int_32 ) chunks		8635958	1					
ANR	8635974	UnaryOperator	-		8635958	0					
ANR	8635975	CastExpression	( png_int_32 ) chunks		8635958	1					
ANR	8635976	CastTarget	png_int_32		8635958	0					
ANR	8635977	Identifier	chunks		8635958	1					
ANR	8635978	IdentifierDeclStatement	int i = find_by_flag ( flag ) ;	899:6:25110:25136	8635958	1	True				
ANR	8635979	IdentifierDecl	i = find_by_flag ( flag )		8635958	0					
ANR	8635980	IdentifierDeclType	int		8635958	0					
ANR	8635981	Identifier	i		8635958	1					
ANR	8635982	AssignmentExpression	i = find_by_flag ( flag )		8635958	2		=			
ANR	8635983	Identifier	i		8635958	0					
ANR	8635984	CallExpression	find_by_flag ( flag )		8635958	1					
ANR	8635985	Callee	find_by_flag		8635958	0					
ANR	8635986	Identifier	find_by_flag		8635958	0					
ANR	8635987	ArgumentList	flag		8635958	1					
ANR	8635988	Argument	flag		8635958	0					
ANR	8635989	Identifier	flag		8635958	0					
ANR	8635990	IdentifierDeclStatement	int keep = chunk_info [ i ] . keep ;	900:6:25144:25173	8635958	2	True				
ANR	8635991	IdentifierDecl	keep = chunk_info [ i ] . keep		8635958	0					
ANR	8635992	IdentifierDeclType	int		8635958	0					
ANR	8635993	Identifier	keep		8635958	1					
ANR	8635994	AssignmentExpression	keep = chunk_info [ i ] . keep		8635958	2		=			
ANR	8635995	Identifier	keep		8635958	0					
ANR	8635996	MemberAccess	chunk_info [ i ] . keep		8635958	1					
ANR	8635997	ArrayIndexing	chunk_info [ i ]		8635958	0					
ANR	8635998	Identifier	chunk_info		8635958	0					
ANR	8635999	Identifier	i		8635958	1					
ANR	8636000	Identifier	keep		8635958	1					
ANR	8636001	IdentifierDeclStatement	const char * type ;	901:6:25181:25197	8635958	3	True				
ANR	8636002	IdentifierDecl	* type		8635958	0					
ANR	8636003	IdentifierDeclType	const char *		8635958	0					
ANR	8636004	Identifier	type		8635958	1					
ANR	8636005	IdentifierDeclStatement	const char * errorx = NULL ;	902:6:25205:25230	8635958	4	True				
ANR	8636006	IdentifierDecl	* errorx = NULL		8635958	0					
ANR	8636007	IdentifierDeclType	const char *		8635958	0					
ANR	8636008	Identifier	errorx		8635958	1					
ANR	8636009	AssignmentExpression	* errorx = NULL		8635958	2		=			
ANR	8636010	Identifier	NULL		8635958	0					
ANR	8636011	Identifier	NULL		8635958	1					
ANR	8636012	IfStatement	if ( chunk_info [ i ] . unknown )		8635958	5					
ANR	8636013	Condition	chunk_info [ i ] . unknown	904:10:25243:25263	8635958	0	True				
ANR	8636014	MemberAccess	chunk_info [ i ] . unknown		8635958	0					
ANR	8636015	ArrayIndexing	chunk_info [ i ]		8635958	0					
ANR	8636016	Identifier	chunk_info		8635958	0					
ANR	8636017	Identifier	i		8635958	1					
ANR	8636018	Identifier	unknown		8635958	1					
ANR	8636019	CompoundStatement		11:6:247:247	8635958	1					
ANR	8636020	IfStatement	if ( keep == PNG_HANDLE_CHUNK_AS_DEFAULT )		8635958	0					
ANR	8636021	Condition	keep == PNG_HANDLE_CHUNK_AS_DEFAULT	906:13:25287:25321	8635958	0	True				
ANR	8636022	EqualityExpression	keep == PNG_HANDLE_CHUNK_AS_DEFAULT		8635958	0		==			
ANR	8636023	Identifier	keep		8635958	0					
ANR	8636024	Identifier	PNG_HANDLE_CHUNK_AS_DEFAULT		8635958	1					
ANR	8636025	CompoundStatement		13:9:308:308	8635958	1					
ANR	8636026	ExpressionStatement	"type = ""UNKNOWN (default)"""	908:12:25347:25373	8635958	0	True				
ANR	8636027	AssignmentExpression	"type = ""UNKNOWN (default)"""		8635958	0		=			
ANR	8636028	Identifier	type		8635958	0					
ANR	8636029	PrimaryExpression	"""UNKNOWN (default)"""		8635958	1					
ANR	8636030	ExpressionStatement	keep = def	909:12:25387:25397	8635958	1	True				
ANR	8636031	AssignmentExpression	keep = def		8635958	0		=			
ANR	8636032	Identifier	keep		8635958	0					
ANR	8636033	Identifier	def		8635958	1					
ANR	8636034	ElseStatement	else		8635958	0					
ANR	8636035	ExpressionStatement	"type = ""UNKNOWN (specified)"""	913:12:25437:25465	8635958	0	True				
ANR	8636036	AssignmentExpression	"type = ""UNKNOWN (specified)"""		8635958	0		=			
ANR	8636037	Identifier	type		8635958	0					
ANR	8636038	PrimaryExpression	"""UNKNOWN (specified)"""		8635958	1					
ANR	8636039	IfStatement	if ( flag & known )		8635958	1					
ANR	8636040	Condition	flag & known	915:13:25481:25492	8635958	0	True				
ANR	8636041	BitAndExpression	flag & known		8635958	0		&			
ANR	8636042	Identifier	flag		8635958	0					
ANR	8636043	Identifier	known		8635958	1					
ANR	8636044	ExpressionStatement	"errorx = ""chunk processed"""	916:12:25507:25533	8635958	1	True				
ANR	8636045	AssignmentExpression	"errorx = ""chunk processed"""		8635958	0		=			
ANR	8636046	Identifier	errorx		8635958	0					
ANR	8636047	PrimaryExpression	"""chunk processed"""		8635958	1					
ANR	8636048	ElseStatement	else		8635958	0					
ANR	8636049	SwitchStatement	switch ( keep )		8635958	0					
ANR	8636050	Condition	keep	918:22:25558:25561	8635958	0	True				
ANR	8636051	Identifier	keep		8635958	0					
ANR	8636052	CompoundStatement		25:9:548:548	8635958	1					
ANR	8636053	Label	case PNG_HANDLE_CHUNK_AS_DEFAULT :	920:12:25587:25619	8635958	0	True				
ANR	8636054	Identifier	PNG_HANDLE_CHUNK_AS_DEFAULT		8635958	0					
ANR	8636055	IfStatement	if ( flag & unknown )		8635958	1					
ANR	8636056	Condition	flag & unknown	921:19:25640:25653	8635958	0	True				
ANR	8636057	BitAndExpression	flag & unknown		8635958	0		&			
ANR	8636058	Identifier	flag		8635958	0					
ANR	8636059	Identifier	unknown		8635958	1					
ANR	8636060	ExpressionStatement	"errorx = ""DEFAULT: unknown chunk saved"""	922:18:25674:25713	8635958	1	True				
ANR	8636061	AssignmentExpression	"errorx = ""DEFAULT: unknown chunk saved"""		8635958	0		=			
ANR	8636062	Identifier	errorx		8635958	0					
ANR	8636063	PrimaryExpression	"""DEFAULT: unknown chunk saved"""		8635958	1					
ANR	8636064	BreakStatement	break ;	923:15:25730:25735	8635958	2	True				
ANR	8636065	Label	case PNG_HANDLE_CHUNK_NEVER :	925:12:25750:25777	8635958	3	True				
ANR	8636066	Identifier	PNG_HANDLE_CHUNK_NEVER		8635958	0					
ANR	8636067	IfStatement	if ( flag & unknown )		8635958	4					
ANR	8636068	Condition	flag & unknown	926:19:25798:25811	8635958	0	True				
ANR	8636069	BitAndExpression	flag & unknown		8635958	0		&			
ANR	8636070	Identifier	flag		8635958	0					
ANR	8636071	Identifier	unknown		8635958	1					
ANR	8636072	ExpressionStatement	"errorx = ""DISCARD: unknown chunk saved"""	927:18:25832:25871	8635958	1	True				
ANR	8636073	AssignmentExpression	"errorx = ""DISCARD: unknown chunk saved"""		8635958	0		=			
ANR	8636074	Identifier	errorx		8635958	0					
ANR	8636075	PrimaryExpression	"""DISCARD: unknown chunk saved"""		8635958	1					
ANR	8636076	BreakStatement	break ;	928:15:25888:25893	8635958	5	True				
ANR	8636077	Label	case PNG_HANDLE_CHUNK_IF_SAFE :	930:12:25908:25937	8635958	6	True				
ANR	8636078	Identifier	PNG_HANDLE_CHUNK_IF_SAFE		8635958	0					
ANR	8636079	IfStatement	if ( ancillary ( chunk_info [ i ] . name ) )		8635958	7					
ANR	8636080	Condition	ancillary ( chunk_info [ i ] . name )	931:19:25958:25986	8635958	0	True				
ANR	8636081	CallExpression	ancillary ( chunk_info [ i ] . name )		8635958	0					
ANR	8636082	Callee	ancillary		8635958	0					
ANR	8636083	Identifier	ancillary		8635958	0					
ANR	8636084	ArgumentList	chunk_info [ i ] . name		8635958	1					
ANR	8636085	Argument	chunk_info [ i ] . name		8635958	0					
ANR	8636086	MemberAccess	chunk_info [ i ] . name		8635958	0					
ANR	8636087	ArrayIndexing	chunk_info [ i ]		8635958	0					
ANR	8636088	Identifier	chunk_info		8635958	0					
ANR	8636089	Identifier	i		8635958	1					
ANR	8636090	Identifier	name		8635958	1					
ANR	8636091	CompoundStatement		38:15:979:979	8635958	1					
ANR	8636092	IfStatement	if ( ! ( flag & unknown ) )		8635958	0					
ANR	8636093	Condition	! ( flag & unknown )	933:22:26028:26044	8635958	0	True				
ANR	8636094	UnaryOperationExpression	! ( flag & unknown )		8635958	0					
ANR	8636095	UnaryOperator	!		8635958	0					
ANR	8636096	BitAndExpression	flag & unknown		8635958	1		&			
ANR	8636097	Identifier	flag		8635958	0					
ANR	8636098	Identifier	unknown		8635958	1					
ANR	8636099	ExpressionStatement	"errorx = ""IF-SAFE: unknown ancillary chunk lost"""	934:21:26068:26116	8635958	1	True				
ANR	8636100	AssignmentExpression	"errorx = ""IF-SAFE: unknown ancillary chunk lost"""		8635958	0		=			
ANR	8636101	Identifier	errorx		8635958	0					
ANR	8636102	PrimaryExpression	"""IF-SAFE: unknown ancillary chunk lost"""		8635958	1					
ANR	8636103	ElseStatement	else		8635958	0					
ANR	8636104	IfStatement	if ( flag & unknown )		8635958	0					
ANR	8636105	Condition	flag & unknown	937:24:26160:26173	8635958	0	True				
ANR	8636106	BitAndExpression	flag & unknown		8635958	0		&			
ANR	8636107	Identifier	flag		8635958	0					
ANR	8636108	Identifier	unknown		8635958	1					
ANR	8636109	ExpressionStatement	"errorx = ""IF-SAFE: unknown critical chunk saved"""	938:18:26194:26242	8635958	1	True				
ANR	8636110	AssignmentExpression	"errorx = ""IF-SAFE: unknown critical chunk saved"""		8635958	0		=			
ANR	8636111	Identifier	errorx		8635958	0					
ANR	8636112	PrimaryExpression	"""IF-SAFE: unknown critical chunk saved"""		8635958	1					
ANR	8636113	BreakStatement	break ;	939:15:26259:26264	8635958	8	True				
ANR	8636114	Label	case PNG_HANDLE_CHUNK_ALWAYS :	941:12:26279:26307	8635958	9	True				
ANR	8636115	Identifier	PNG_HANDLE_CHUNK_ALWAYS		8635958	0					
ANR	8636116	IfStatement	if ( ! ( flag & unknown ) )		8635958	10					
ANR	8636117	Condition	! ( flag & unknown )	942:19:26328:26344	8635958	0	True				
ANR	8636118	UnaryOperationExpression	! ( flag & unknown )		8635958	0					
ANR	8636119	UnaryOperator	!		8635958	0					
ANR	8636120	BitAndExpression	flag & unknown		8635958	1		&			
ANR	8636121	Identifier	flag		8635958	0					
ANR	8636122	Identifier	unknown		8635958	1					
ANR	8636123	ExpressionStatement	"errorx = ""SAVE: unknown chunk lost"""	943:18:26365:26400	8635958	1	True				
ANR	8636124	AssignmentExpression	"errorx = ""SAVE: unknown chunk lost"""		8635958	0		=			
ANR	8636125	Identifier	errorx		8635958	0					
ANR	8636126	PrimaryExpression	"""SAVE: unknown chunk lost"""		8635958	1					
ANR	8636127	BreakStatement	break ;	944:15:26417:26422	8635958	11	True				
ANR	8636128	Label	default :	946:12:26437:26444	8635958	12	True				
ANR	8636129	Identifier	default		8635958	0					
ANR	8636130	ExpressionStatement	"errorx = ""internal error: bad keep"""	947:15:26461:26496	8635958	13	True				
ANR	8636131	AssignmentExpression	"errorx = ""internal error: bad keep"""		8635958	0		=			
ANR	8636132	Identifier	errorx		8635958	0					
ANR	8636133	PrimaryExpression	"""internal error: bad keep"""		8635958	1					
ANR	8636134	BreakStatement	break ;	948:15:26513:26518	8635958	14	True				
ANR	8636135	ElseStatement	else		8635958	0					
ANR	8636136	CompoundStatement		59:6:1570:1570	8635958	0					
ANR	8636137	ExpressionStatement	"type = ""KNOWN"""	954:9:26606:26620	8635958	0	True				
ANR	8636138	AssignmentExpression	"type = ""KNOWN"""		8635958	0		=			
ANR	8636139	Identifier	type		8635958	0					
ANR	8636140	PrimaryExpression	"""KNOWN"""		8635958	1					
ANR	8636141	IfStatement	if ( flag & known )		8635958	1					
ANR	8636142	Condition	flag & known	956:13:26636:26647	8635958	0	True				
ANR	8636143	BitAndExpression	flag & known		8635958	0		&			
ANR	8636144	Identifier	flag		8635958	0					
ANR	8636145	Identifier	known		8635958	1					
ANR	8636146	CompoundStatement		63:9:1634:1634	8635958	1					
ANR	8636147	IfStatement	if ( keep != PNG_HANDLE_CHUNK_AS_DEFAULT )		8635958	0					
ANR	8636148	Condition	keep != PNG_HANDLE_CHUNK_AS_DEFAULT	961:16:26841:26875	8635958	0	True				
ANR	8636149	EqualityExpression	keep != PNG_HANDLE_CHUNK_AS_DEFAULT		8635958	0		!=			
ANR	8636150	Identifier	keep		8635958	0					
ANR	8636151	Identifier	PNG_HANDLE_CHUNK_AS_DEFAULT		8635958	1					
ANR	8636152	ExpressionStatement	"errorx = ""!DEFAULT: known chunk processed"""	962:15:26893:26935	8635958	1	True				
ANR	8636153	AssignmentExpression	"errorx = ""!DEFAULT: known chunk processed"""		8635958	0		=			
ANR	8636154	Identifier	errorx		8635958	0					
ANR	8636155	PrimaryExpression	"""!DEFAULT: known chunk processed"""		8635958	1					
ANR	8636156	ElseStatement	else		8635958	0					
ANR	8636157	SwitchStatement	switch ( keep )		8635958	0					
ANR	8636158	Condition	keep	965:42:26991:26994	8635958	0	True				
ANR	8636159	Identifier	keep		8635958	0					
ANR	8636160	CompoundStatement		72:9:1981:1981	8635958	1					
ANR	8636161	Label	case PNG_HANDLE_CHUNK_AS_DEFAULT :	967:12:27020:27052	8635958	0	True				
ANR	8636162	Identifier	PNG_HANDLE_CHUNK_AS_DEFAULT		8635958	0					
ANR	8636163	ExpressionStatement	"errorx = ""DEFAULT: known chunk not processed"""	968:15:27069:27114	8635958	1	True				
ANR	8636164	AssignmentExpression	"errorx = ""DEFAULT: known chunk not processed"""		8635958	0		=			
ANR	8636165	Identifier	errorx		8635958	0					
ANR	8636166	PrimaryExpression	"""DEFAULT: known chunk not processed"""		8635958	1					
ANR	8636167	BreakStatement	break ;	969:15:27131:27136	8635958	2	True				
ANR	8636168	Label	case PNG_HANDLE_CHUNK_NEVER :	971:12:27151:27178	8635958	3	True				
ANR	8636169	Identifier	PNG_HANDLE_CHUNK_NEVER		8635958	0					
ANR	8636170	IfStatement	if ( flag & unknown )		8635958	4					
ANR	8636171	Condition	flag & unknown	972:19:27199:27212	8635958	0	True				
ANR	8636172	BitAndExpression	flag & unknown		8635958	0		&			
ANR	8636173	Identifier	flag		8635958	0					
ANR	8636174	Identifier	unknown		8635958	1					
ANR	8636175	ExpressionStatement	"errorx = ""DISCARD: known chunk saved"""	973:18:27233:27270	8635958	1	True				
ANR	8636176	AssignmentExpression	"errorx = ""DISCARD: known chunk saved"""		8635958	0		=			
ANR	8636177	Identifier	errorx		8635958	0					
ANR	8636178	PrimaryExpression	"""DISCARD: known chunk saved"""		8635958	1					
ANR	8636179	BreakStatement	break ;	974:15:27287:27292	8635958	5	True				
ANR	8636180	Label	case PNG_HANDLE_CHUNK_IF_SAFE :	976:12:27307:27336	8635958	6	True				
ANR	8636181	Identifier	PNG_HANDLE_CHUNK_IF_SAFE		8635958	0					
ANR	8636182	IfStatement	if ( ancillary ( chunk_info [ i ] . name ) )		8635958	7					
ANR	8636183	Condition	ancillary ( chunk_info [ i ] . name )	977:19:27357:27385	8635958	0	True				
ANR	8636184	CallExpression	ancillary ( chunk_info [ i ] . name )		8635958	0					
ANR	8636185	Callee	ancillary		8635958	0					
ANR	8636186	Identifier	ancillary		8635958	0					
ANR	8636187	ArgumentList	chunk_info [ i ] . name		8635958	1					
ANR	8636188	Argument	chunk_info [ i ] . name		8635958	0					
ANR	8636189	MemberAccess	chunk_info [ i ] . name		8635958	0					
ANR	8636190	ArrayIndexing	chunk_info [ i ]		8635958	0					
ANR	8636191	Identifier	chunk_info		8635958	0					
ANR	8636192	Identifier	i		8635958	1					
ANR	8636193	Identifier	name		8635958	1					
ANR	8636194	CompoundStatement		84:15:2378:2378	8635958	1					
ANR	8636195	IfStatement	if ( ! ( flag & unknown ) )		8635958	0					
ANR	8636196	Condition	! ( flag & unknown )	979:22:27427:27443	8635958	0	True				
ANR	8636197	UnaryOperationExpression	! ( flag & unknown )		8635958	0					
ANR	8636198	UnaryOperator	!		8635958	0					
ANR	8636199	BitAndExpression	flag & unknown		8635958	1		&			
ANR	8636200	Identifier	flag		8635958	0					
ANR	8636201	Identifier	unknown		8635958	1					
ANR	8636202	ExpressionStatement	"errorx = ""IF-SAFE: known ancillary chunk lost"""	980:21:27467:27513	8635958	1	True				
ANR	8636203	AssignmentExpression	"errorx = ""IF-SAFE: known ancillary chunk lost"""		8635958	0		=			
ANR	8636204	Identifier	errorx		8635958	0					
ANR	8636205	PrimaryExpression	"""IF-SAFE: known ancillary chunk lost"""		8635958	1					
ANR	8636206	ElseStatement	else		8635958	0					
ANR	8636207	IfStatement	if ( flag & unknown )		8635958	0					
ANR	8636208	Condition	flag & unknown	983:24:27557:27570	8635958	0	True				
ANR	8636209	BitAndExpression	flag & unknown		8635958	0		&			
ANR	8636210	Identifier	flag		8635958	0					
ANR	8636211	Identifier	unknown		8635958	1					
ANR	8636212	ExpressionStatement	"errorx = ""IF-SAFE: known critical chunk saved"""	984:18:27591:27637	8635958	1	True				
ANR	8636213	AssignmentExpression	"errorx = ""IF-SAFE: known critical chunk saved"""		8635958	0		=			
ANR	8636214	Identifier	errorx		8635958	0					
ANR	8636215	PrimaryExpression	"""IF-SAFE: known critical chunk saved"""		8635958	1					
ANR	8636216	BreakStatement	break ;	985:15:27654:27659	8635958	8	True				
ANR	8636217	Label	case PNG_HANDLE_CHUNK_ALWAYS :	987:12:27674:27702	8635958	9	True				
ANR	8636218	Identifier	PNG_HANDLE_CHUNK_ALWAYS		8635958	0					
ANR	8636219	IfStatement	if ( ! ( flag & unknown ) )		8635958	10					
ANR	8636220	Condition	! ( flag & unknown )	988:19:27723:27739	8635958	0	True				
ANR	8636221	UnaryOperationExpression	! ( flag & unknown )		8635958	0					
ANR	8636222	UnaryOperator	!		8635958	0					
ANR	8636223	BitAndExpression	flag & unknown		8635958	1		&			
ANR	8636224	Identifier	flag		8635958	0					
ANR	8636225	Identifier	unknown		8635958	1					
ANR	8636226	ExpressionStatement	"errorx = ""SAVE: known chunk lost"""	989:18:27760:27793	8635958	1	True				
ANR	8636227	AssignmentExpression	"errorx = ""SAVE: known chunk lost"""		8635958	0		=			
ANR	8636228	Identifier	errorx		8635958	0					
ANR	8636229	PrimaryExpression	"""SAVE: known chunk lost"""		8635958	1					
ANR	8636230	BreakStatement	break ;	990:15:27810:27815	8635958	11	True				
ANR	8636231	Label	default :	992:12:27830:27837	8635958	12	True				
ANR	8636232	Identifier	default		8635958	0					
ANR	8636233	ExpressionStatement	"errorx = ""internal error: bad keep (2)"""	993:15:27854:27893	8635958	13	True				
ANR	8636234	AssignmentExpression	"errorx = ""internal error: bad keep (2)"""		8635958	0		=			
ANR	8636235	Identifier	errorx		8635958	0					
ANR	8636236	PrimaryExpression	"""internal error: bad keep (2)"""		8635958	1					
ANR	8636237	BreakStatement	break ;	994:15:27910:27915	8635958	14	True				
ANR	8636238	IfStatement	if ( errorx != NULL )		8635958	6					
ANR	8636239	Condition	errorx != NULL	998:10:27947:27960	8635958	0	True				
ANR	8636240	EqualityExpression	errorx != NULL		8635958	0		!=			
ANR	8636241	Identifier	errorx		8635958	0					
ANR	8636242	Identifier	NULL		8635958	1					
ANR	8636243	CompoundStatement		105:6:2944:2944	8635958	1					
ANR	8636244	ExpressionStatement	++ ( d -> error_count )	1000:9:27980:27998	8635958	0	True				
ANR	8636245	UnaryExpression	++ ( d -> error_count )		8635958	0					
ANR	8636246	IncDec	++		8635958	0					
ANR	8636247	PtrMemberAccess	d -> error_count		8635958	1					
ANR	8636248	Identifier	d		8635958	0					
ANR	8636249	Identifier	error_count		8635958	1					
ANR	8636250	ExpressionStatement	"fprintf ( stderr , ""%s(%s%s): %s %s %s: %s\\n"" , d -> file , d -> test , set_callback ? "",callback"" : """" , type , chunk_info [ i ] . name , position , errorx )"	1001:9:28009:28171	8635958	1	True				
ANR	8636251	CallExpression	"fprintf ( stderr , ""%s(%s%s): %s %s %s: %s\\n"" , d -> file , d -> test , set_callback ? "",callback"" : """" , type , chunk_info [ i ] . name , position , errorx )"		8635958	0					
ANR	8636252	Callee	fprintf		8635958	0					
ANR	8636253	Identifier	fprintf		8635958	0					
ANR	8636254	ArgumentList	stderr		8635958	1					
ANR	8636255	Argument	stderr		8635958	0					
ANR	8636256	Identifier	stderr		8635958	0					
ANR	8636257	Argument	"""%s(%s%s): %s %s %s: %s\\n"""		8635958	1					
ANR	8636258	PrimaryExpression	"""%s(%s%s): %s %s %s: %s\\n"""		8635958	0					
ANR	8636259	Argument	d -> file		8635958	2					
ANR	8636260	PtrMemberAccess	d -> file		8635958	0					
ANR	8636261	Identifier	d		8635958	0					
ANR	8636262	Identifier	file		8635958	1					
ANR	8636263	Argument	d -> test		8635958	3					
ANR	8636264	PtrMemberAccess	d -> test		8635958	0					
ANR	8636265	Identifier	d		8635958	0					
ANR	8636266	Identifier	test		8635958	1					
ANR	8636267	Argument	"set_callback ? "",callback"" : """""		8635958	4					
ANR	8636268	ConditionalExpression	"set_callback ? "",callback"" : """""		8635958	0					
ANR	8636269	Condition	set_callback		8635958	0					
ANR	8636270	Identifier	set_callback		8635958	0					
ANR	8636271	PrimaryExpression	""",callback"""		8635958	1					
ANR	8636272	PrimaryExpression	""""""		8635958	2					
ANR	8636273	Argument	type		8635958	5					
ANR	8636274	Identifier	type		8635958	0					
ANR	8636275	Argument	chunk_info [ i ] . name		8635958	6					
ANR	8636276	MemberAccess	chunk_info [ i ] . name		8635958	0					
ANR	8636277	ArrayIndexing	chunk_info [ i ]		8635958	0					
ANR	8636278	Identifier	chunk_info		8635958	0					
ANR	8636279	Identifier	i		8635958	1					
ANR	8636280	Identifier	name		8635958	1					
ANR	8636281	Argument	position		8635958	7					
ANR	8636282	Identifier	position		8635958	0					
ANR	8636283	Argument	errorx		8635958	8					
ANR	8636284	Identifier	errorx		8635958	0					
ANR	8636285	ExpressionStatement	chunks &= ~flag	1006:6:28188:28203	8635958	7	True				
ANR	8636286	AssignmentExpression	chunks &= ~flag		8635958	0		&=			
ANR	8636287	Identifier	chunks		8635958	0					
ANR	8636288	Identifier	~flag		8635958	1					
ANR	8636289	ReturnType	static void		8635958	1					
ANR	8636290	Identifier	check_handling		8635958	2					
ANR	8636291	ParameterList	"display * d , int def , png_uint_32 chunks , png_uint_32 known , png_uint_32 unknown , const char * position , int set_callback"		8635958	3					
ANR	8636292	Parameter	display * d	893:15:24900:24909	8635958	0	True				
ANR	8636293	ParameterType	display *		8635958	0					
ANR	8636294	Identifier	d		8635958	1					
ANR	8636295	Parameter	int def	893:27:24912:24918	8635958	1	True				
ANR	8636296	ParameterType	int		8635958	0					
ANR	8636297	Identifier	def		8635958	1					
ANR	8636298	Parameter	png_uint_32 chunks	893:36:24921:24938	8635958	2	True				
ANR	8636299	ParameterType	png_uint_32		8635958	0					
ANR	8636300	Identifier	chunks		8635958	1					
ANR	8636301	Parameter	png_uint_32 known	893:56:24941:24957	8635958	3	True				
ANR	8636302	ParameterType	png_uint_32		8635958	0					
ANR	8636303	Identifier	known		8635958	1					
ANR	8636304	Parameter	png_uint_32 unknown	894:3:24963:24981	8635958	4	True				
ANR	8636305	ParameterType	png_uint_32		8635958	0					
ANR	8636306	Identifier	unknown		8635958	1					
ANR	8636307	Parameter	const char * position	894:24:24984:25003	8635958	5	True				
ANR	8636308	ParameterType	const char *		8635958	0					
ANR	8636309	Identifier	position		8635958	1					
ANR	8636310	Parameter	int set_callback	894:46:25006:25021	8635958	6	True				
ANR	8636311	ParameterType	int		8635958	0					
ANR	8636312	Identifier	set_callback		8635958	1					
ANR	8636313	CFGEntryNode	ENTRY		8635958		True				
ANR	8636314	CFGExitNode	EXIT		8635958		True				
ANR	8636315	Symbol	flag		8635958						
ANR	8636316	Symbol	def		8635958						
ANR	8636317	Symbol	chunks		8635958						
ANR	8636318	Symbol	type		8635958						
ANR	8636319	Symbol	chunk_info		8635958						
ANR	8636320	Symbol	unknown		8635958						
ANR	8636321	Symbol	PNG_HANDLE_CHUNK_AS_DEFAULT		8635958						
ANR	8636322	Symbol	known		8635958						
ANR	8636323	Symbol	d -> file		8635958						
ANR	8636324	Symbol	NULL		8635958						
ANR	8636325	Symbol	d		8635958						
ANR	8636326	Symbol	errorx		8635958						
ANR	8636327	Symbol	chunk_info [ i ] . keep		8635958						
ANR	8636328	Symbol	i		8635958						
ANR	8636329	Symbol	stderr		8635958						
ANR	8636330	Symbol	chunk_info [ i ] . unknown		8635958						
ANR	8636331	Symbol	chunk_info [ i ] . name		8635958						
ANR	8636332	Symbol	* d		8635958						
ANR	8636333	Symbol	set_callback		8635958						
ANR	8636334	Symbol	* i		8635958						
ANR	8636335	Symbol	~flag		8635958						
ANR	8636336	Symbol	keep		8635958						
ANR	8636337	Symbol	find_by_flag		8635958						
ANR	8636338	Symbol	d -> test		8635958						
ANR	8636339	Symbol	position		8635958						
ANR	8636340	Symbol	ancillary		8635958						
ANR	8636341	Symbol	* chunk_info		8635958						
ANR	8636342	Function	perform_one_test	1010:0:28213:30914							
ANR	8636343	FunctionDef	"perform_one_test (FILE * fp , int argc , const char * * argv , png_uint_32 * default_flags , display * d , int set_callback)"		8636342	0					
ANR	8636344	CompoundStatement		1013:0:28342:30914	8636342	0					
ANR	8636345	IdentifierDeclStatement	int def ;	1014:3:28347:28354	8636342	0	True				
ANR	8636346	IdentifierDecl	def		8636342	0					
ANR	8636347	IdentifierDeclType	int		8636342	0					
ANR	8636348	Identifier	def		8636342	1					
ANR	8636349	Statement	png_uint_32	1015:3:28359:28369	8636342	1	True				
ANR	8636350	ExpressionStatement	flags [ 2 ] [ 4 ]	1015:15:28371:28382	8636342	2	True				
ANR	8636351	ArrayIndexing	flags [ 2 ] [ 4 ]		8636342	0					
ANR	8636352	ArrayIndexing	flags [ 2 ]		8636342	0					
ANR	8636353	Identifier	flags		8636342	0					
ANR	8636354	PrimaryExpression	2		8636342	1					
ANR	8636355	PrimaryExpression	4		8636342	1					
ANR	8636356	ExpressionStatement	rewind ( fp )	1017:3:28388:28398	8636342	3	True				
ANR	8636357	CallExpression	rewind ( fp )		8636342	0					
ANR	8636358	Callee	rewind		8636342	0					
ANR	8636359	Identifier	rewind		8636342	0					
ANR	8636360	ArgumentList	fp		8636342	1					
ANR	8636361	Argument	fp		8636342	0					
ANR	8636362	Identifier	fp		8636342	0					
ANR	8636363	ExpressionStatement	clear_keep ( )	1018:3:28403:28415	8636342	4	True				
ANR	8636364	CallExpression	clear_keep ( )		8636342	0					
ANR	8636365	Callee	clear_keep		8636342	0					
ANR	8636366	Identifier	clear_keep		8636342	0					
ANR	8636367	ArgumentList			8636342	1					
ANR	8636368	ExpressionStatement	"memcpy ( flags [ 0 ] , default_flags , sizeof flags [ 0 ] )"	1019:3:28420:28468	8636342	5	True				
ANR	8636369	CallExpression	"memcpy ( flags [ 0 ] , default_flags , sizeof flags [ 0 ] )"		8636342	0					
ANR	8636370	Callee	memcpy		8636342	0					
ANR	8636371	Identifier	memcpy		8636342	0					
ANR	8636372	ArgumentList	flags [ 0 ]		8636342	1					
ANR	8636373	Argument	flags [ 0 ]		8636342	0					
ANR	8636374	ArrayIndexing	flags [ 0 ]		8636342	0					
ANR	8636375	Identifier	flags		8636342	0					
ANR	8636376	PrimaryExpression	0		8636342	1					
ANR	8636377	Argument	default_flags		8636342	1					
ANR	8636378	Identifier	default_flags		8636342	0					
ANR	8636379	Argument	sizeof flags [ 0 ]		8636342	2					
ANR	8636380	SizeofExpression	sizeof flags [ 0 ]		8636342	0					
ANR	8636381	Sizeof	sizeof		8636342	0					
ANR	8636382	ArrayIndexing	flags [ 0 ]		8636342	1					
ANR	8636383	Identifier	flags		8636342	0					
ANR	8636384	PrimaryExpression	0		8636342	1					
ANR	8636385	ExpressionStatement	"def = check ( fp , argc , argv , flags [ 1 ] , d , set_callback )"	1021:3:28474:28528	8636342	6	True				
ANR	8636386	AssignmentExpression	"def = check ( fp , argc , argv , flags [ 1 ] , d , set_callback )"		8636342	0		=			
ANR	8636387	Identifier	def		8636342	0					
ANR	8636388	CallExpression	"check ( fp , argc , argv , flags [ 1 ] , d , set_callback )"		8636342	1					
ANR	8636389	Callee	check		8636342	0					
ANR	8636390	Identifier	check		8636342	0					
ANR	8636391	ArgumentList	fp		8636342	1					
ANR	8636392	Argument	fp		8636342	0					
ANR	8636393	Identifier	fp		8636342	0					
ANR	8636394	Argument	argc		8636342	1					
ANR	8636395	Identifier	argc		8636342	0					
ANR	8636396	Argument	argv		8636342	2					
ANR	8636397	Identifier	argv		8636342	0					
ANR	8636398	Argument	flags [ 1 ]		8636342	3					
ANR	8636399	ArrayIndexing	flags [ 1 ]		8636342	0					
ANR	8636400	Identifier	flags		8636342	0					
ANR	8636401	PrimaryExpression	1		8636342	1					
ANR	8636402	Argument	d		8636342	4					
ANR	8636403	Identifier	d		8636342	0					
ANR	8636404	Argument	set_callback		8636342	5					
ANR	8636405	Identifier	set_callback		8636342	0					
ANR	8636406	IfStatement	if ( chunk_info [ 0 ] . keep != PNG_HANDLE_CHUNK_AS_DEFAULT && ( flags [ 1 ] [ 3 ] & PNG_INFO_IDAT ) != 0 )		8636342	7					
ANR	8636407	Condition	chunk_info [ 0 ] . keep != PNG_HANDLE_CHUNK_AS_DEFAULT && ( flags [ 1 ] [ 3 ] & PNG_INFO_IDAT ) != 0	1033:7:29066:29167	8636342	0	True				
ANR	8636408	AndExpression	chunk_info [ 0 ] . keep != PNG_HANDLE_CHUNK_AS_DEFAULT && ( flags [ 1 ] [ 3 ] & PNG_INFO_IDAT ) != 0		8636342	0		&&			
ANR	8636409	EqualityExpression	chunk_info [ 0 ] . keep != PNG_HANDLE_CHUNK_AS_DEFAULT		8636342	0		!=			
ANR	8636410	MemberAccess	chunk_info [ 0 ] . keep		8636342	0					
ANR	8636411	ArrayIndexing	chunk_info [ 0 ]		8636342	0					
ANR	8636412	Identifier	chunk_info		8636342	0					
ANR	8636413	PrimaryExpression	0		8636342	1					
ANR	8636414	Identifier	keep		8636342	1					
ANR	8636415	Identifier	PNG_HANDLE_CHUNK_AS_DEFAULT		8636342	1					
ANR	8636416	EqualityExpression	( flags [ 1 ] [ 3 ] & PNG_INFO_IDAT ) != 0		8636342	1		!=			
ANR	8636417	BitAndExpression	flags [ 1 ] [ 3 ] & PNG_INFO_IDAT		8636342	0		&			
ANR	8636418	ArrayIndexing	flags [ 1 ] [ 3 ]		8636342	0					
ANR	8636419	ArrayIndexing	flags [ 1 ]		8636342	0					
ANR	8636420	Identifier	flags		8636342	0					
ANR	8636421	PrimaryExpression	1		8636342	1					
ANR	8636422	PrimaryExpression	3		8636342	1					
ANR	8636423	Identifier	PNG_INFO_IDAT		8636342	1					
ANR	8636424	PrimaryExpression	0		8636342	1					
ANR	8636425	ExpressionStatement	flags [ 0 ] [ 2 ] |= PNG_INFO_IDAT	1035:6:29176:29204	8636342	1	True				
ANR	8636426	AssignmentExpression	flags [ 0 ] [ 2 ] |= PNG_INFO_IDAT		8636342	0		|=			
ANR	8636427	ArrayIndexing	flags [ 0 ] [ 2 ]		8636342	0					
ANR	8636428	ArrayIndexing	flags [ 0 ]		8636342	0					
ANR	8636429	Identifier	flags		8636342	0					
ANR	8636430	PrimaryExpression	0		8636342	1					
ANR	8636431	PrimaryExpression	2		8636342	1					
ANR	8636432	Identifier	PNG_INFO_IDAT		8636342	1					
ANR	8636433	ExpressionStatement	"check_error ( d , ( flags [ 0 ] [ 0 ] | flags [ 0 ] [ 2 ] ) & ( flags [ 0 ] [ 1 ] | flags [ 0 ] [ 3 ] ) , ""chunk handled inconsistently in count tests"" )"	1042:3:29481:29603	8636342	8	True				
ANR	8636434	CallExpression	"check_error ( d , ( flags [ 0 ] [ 0 ] | flags [ 0 ] [ 2 ] ) & ( flags [ 0 ] [ 1 ] | flags [ 0 ] [ 3 ] ) , ""chunk handled inconsistently in count tests"" )"		8636342	0					
ANR	8636435	Callee	check_error		8636342	0					
ANR	8636436	Identifier	check_error		8636342	0					
ANR	8636437	ArgumentList	d		8636342	1					
ANR	8636438	Argument	d		8636342	0					
ANR	8636439	Identifier	d		8636342	0					
ANR	8636440	Argument	( flags [ 0 ] [ 0 ] | flags [ 0 ] [ 2 ] ) & ( flags [ 0 ] [ 1 ] | flags [ 0 ] [ 3 ] )		8636342	1					
ANR	8636441	BitAndExpression	( flags [ 0 ] [ 0 ] | flags [ 0 ] [ 2 ] ) & ( flags [ 0 ] [ 1 ] | flags [ 0 ] [ 3 ] )		8636342	0		&			
ANR	8636442	InclusiveOrExpression	flags [ 0 ] [ 0 ] | flags [ 0 ] [ 2 ]		8636342	0		|			
ANR	8636443	ArrayIndexing	flags [ 0 ] [ 0 ]		8636342	0					
ANR	8636444	ArrayIndexing	flags [ 0 ]		8636342	0					
ANR	8636445	Identifier	flags		8636342	0					
ANR	8636446	PrimaryExpression	0		8636342	1					
ANR	8636447	PrimaryExpression	0		8636342	1					
ANR	8636448	ArrayIndexing	flags [ 0 ] [ 2 ]		8636342	1					
ANR	8636449	ArrayIndexing	flags [ 0 ]		8636342	0					
ANR	8636450	Identifier	flags		8636342	0					
ANR	8636451	PrimaryExpression	0		8636342	1					
ANR	8636452	PrimaryExpression	2		8636342	1					
ANR	8636453	InclusiveOrExpression	flags [ 0 ] [ 1 ] | flags [ 0 ] [ 3 ]		8636342	1		|			
ANR	8636454	ArrayIndexing	flags [ 0 ] [ 1 ]		8636342	0					
ANR	8636455	ArrayIndexing	flags [ 0 ]		8636342	0					
ANR	8636456	Identifier	flags		8636342	0					
ANR	8636457	PrimaryExpression	0		8636342	1					
ANR	8636458	PrimaryExpression	1		8636342	1					
ANR	8636459	ArrayIndexing	flags [ 0 ] [ 3 ]		8636342	1					
ANR	8636460	ArrayIndexing	flags [ 0 ]		8636342	0					
ANR	8636461	Identifier	flags		8636342	0					
ANR	8636462	PrimaryExpression	0		8636342	1					
ANR	8636463	PrimaryExpression	3		8636342	1					
ANR	8636464	Argument	"""chunk handled inconsistently in count tests"""		8636342	2					
ANR	8636465	PrimaryExpression	"""chunk handled inconsistently in count tests"""		8636342	0					
ANR	8636466	ExpressionStatement	"check_error ( d , ( flags [ 1 ] [ 0 ] | flags [ 1 ] [ 2 ] ) & ( flags [ 1 ] [ 1 ] | flags [ 1 ] [ 3 ] ) , ""chunk handled inconsistently in option tests"" )"	1044:3:29608:29731	8636342	9	True				
ANR	8636467	CallExpression	"check_error ( d , ( flags [ 1 ] [ 0 ] | flags [ 1 ] [ 2 ] ) & ( flags [ 1 ] [ 1 ] | flags [ 1 ] [ 3 ] ) , ""chunk handled inconsistently in option tests"" )"		8636342	0					
ANR	8636468	Callee	check_error		8636342	0					
ANR	8636469	Identifier	check_error		8636342	0					
ANR	8636470	ArgumentList	d		8636342	1					
ANR	8636471	Argument	d		8636342	0					
ANR	8636472	Identifier	d		8636342	0					
ANR	8636473	Argument	( flags [ 1 ] [ 0 ] | flags [ 1 ] [ 2 ] ) & ( flags [ 1 ] [ 1 ] | flags [ 1 ] [ 3 ] )		8636342	1					
ANR	8636474	BitAndExpression	( flags [ 1 ] [ 0 ] | flags [ 1 ] [ 2 ] ) & ( flags [ 1 ] [ 1 ] | flags [ 1 ] [ 3 ] )		8636342	0		&			
ANR	8636475	InclusiveOrExpression	flags [ 1 ] [ 0 ] | flags [ 1 ] [ 2 ]		8636342	0		|			
ANR	8636476	ArrayIndexing	flags [ 1 ] [ 0 ]		8636342	0					
ANR	8636477	ArrayIndexing	flags [ 1 ]		8636342	0					
ANR	8636478	Identifier	flags		8636342	0					
ANR	8636479	PrimaryExpression	1		8636342	1					
ANR	8636480	PrimaryExpression	0		8636342	1					
ANR	8636481	ArrayIndexing	flags [ 1 ] [ 2 ]		8636342	1					
ANR	8636482	ArrayIndexing	flags [ 1 ]		8636342	0					
ANR	8636483	Identifier	flags		8636342	0					
ANR	8636484	PrimaryExpression	1		8636342	1					
ANR	8636485	PrimaryExpression	2		8636342	1					
ANR	8636486	InclusiveOrExpression	flags [ 1 ] [ 1 ] | flags [ 1 ] [ 3 ]		8636342	1		|			
ANR	8636487	ArrayIndexing	flags [ 1 ] [ 1 ]		8636342	0					
ANR	8636488	ArrayIndexing	flags [ 1 ]		8636342	0					
ANR	8636489	Identifier	flags		8636342	0					
ANR	8636490	PrimaryExpression	1		8636342	1					
ANR	8636491	PrimaryExpression	1		8636342	1					
ANR	8636492	ArrayIndexing	flags [ 1 ] [ 3 ]		8636342	1					
ANR	8636493	ArrayIndexing	flags [ 1 ]		8636342	0					
ANR	8636494	Identifier	flags		8636342	0					
ANR	8636495	PrimaryExpression	1		8636342	1					
ANR	8636496	PrimaryExpression	3		8636342	1					
ANR	8636497	Argument	"""chunk handled inconsistently in option tests"""		8636342	2					
ANR	8636498	PrimaryExpression	"""chunk handled inconsistently in option tests"""		8636342	0					
ANR	8636499	CompoundStatement		41:6:1700:1716	8636342	10					
ANR	8636500	IdentifierDeclStatement	png_uint_32 test ;	1053:6:30043:30059	8636342	0	True				
ANR	8636501	IdentifierDecl	test		8636342	0					
ANR	8636502	IdentifierDeclType	png_uint_32		8636342	0					
ANR	8636503	Identifier	test		8636342	1					
ANR	8636504	ExpressionStatement	test = flags [ 1 ] [ 0 ] & ~flags [ 0 ] [ 0 ]	1055:6:30068:30101	8636342	1	True				
ANR	8636505	AssignmentExpression	test = flags [ 1 ] [ 0 ] & ~flags [ 0 ] [ 0 ]		8636342	0		=			
ANR	8636506	Identifier	test		8636342	0					
ANR	8636507	BitAndExpression	flags [ 1 ] [ 0 ] & ~flags [ 0 ] [ 0 ]		8636342	1		&			
ANR	8636508	ArrayIndexing	flags [ 1 ] [ 0 ]		8636342	0					
ANR	8636509	ArrayIndexing	flags [ 1 ]		8636342	0					
ANR	8636510	Identifier	flags		8636342	0					
ANR	8636511	PrimaryExpression	1		8636342	1					
ANR	8636512	PrimaryExpression	0		8636342	1					
ANR	8636513	ArrayIndexing	~flags [ 0 ] [ 0 ]		8636342	1					
ANR	8636514	ArrayIndexing	~flags [ 0 ]		8636342	0					
ANR	8636515	Identifier	~flags		8636342	0					
ANR	8636516	PrimaryExpression	0		8636342	1					
ANR	8636517	PrimaryExpression	0		8636342	1					
ANR	8636518	ExpressionStatement	"check_error ( d , test , ""new known chunk before IDAT"" )"	1056:6:30109:30160	8636342	2	True				
ANR	8636519	CallExpression	"check_error ( d , test , ""new known chunk before IDAT"" )"		8636342	0					
ANR	8636520	Callee	check_error		8636342	0					
ANR	8636521	Identifier	check_error		8636342	0					
ANR	8636522	ArgumentList	d		8636342	1					
ANR	8636523	Argument	d		8636342	0					
ANR	8636524	Identifier	d		8636342	0					
ANR	8636525	Argument	test		8636342	1					
ANR	8636526	Identifier	test		8636342	0					
ANR	8636527	Argument	"""new known chunk before IDAT"""		8636342	2					
ANR	8636528	PrimaryExpression	"""new known chunk before IDAT"""		8636342	0					
ANR	8636529	ExpressionStatement	test = flags [ 1 ] [ 1 ] & ~ ( flags [ 0 ] [ 0 ] | flags [ 0 ] [ 1 ] )	1057:6:30168:30217	8636342	3	True				
ANR	8636530	AssignmentExpression	test = flags [ 1 ] [ 1 ] & ~ ( flags [ 0 ] [ 0 ] | flags [ 0 ] [ 1 ] )		8636342	0		=			
ANR	8636531	Identifier	test		8636342	0					
ANR	8636532	BitAndExpression	flags [ 1 ] [ 1 ] & ~ ( flags [ 0 ] [ 0 ] | flags [ 0 ] [ 1 ] )		8636342	1		&			
ANR	8636533	ArrayIndexing	flags [ 1 ] [ 1 ]		8636342	0					
ANR	8636534	ArrayIndexing	flags [ 1 ]		8636342	0					
ANR	8636535	Identifier	flags		8636342	0					
ANR	8636536	PrimaryExpression	1		8636342	1					
ANR	8636537	PrimaryExpression	1		8636342	1					
ANR	8636538	UnaryOperationExpression	~ ( flags [ 0 ] [ 0 ] | flags [ 0 ] [ 1 ] )		8636342	1					
ANR	8636539	UnaryOperator	~		8636342	0					
ANR	8636540	InclusiveOrExpression	flags [ 0 ] [ 0 ] | flags [ 0 ] [ 1 ]		8636342	1		|			
ANR	8636541	ArrayIndexing	flags [ 0 ] [ 0 ]		8636342	0					
ANR	8636542	ArrayIndexing	flags [ 0 ]		8636342	0					
ANR	8636543	Identifier	flags		8636342	0					
ANR	8636544	PrimaryExpression	0		8636342	1					
ANR	8636545	PrimaryExpression	0		8636342	1					
ANR	8636546	ArrayIndexing	flags [ 0 ] [ 1 ]		8636342	1					
ANR	8636547	ArrayIndexing	flags [ 0 ]		8636342	0					
ANR	8636548	Identifier	flags		8636342	0					
ANR	8636549	PrimaryExpression	0		8636342	1					
ANR	8636550	PrimaryExpression	1		8636342	1					
ANR	8636551	ExpressionStatement	"check_error ( d , test , ""new unknown chunk before IDAT"" )"	1058:6:30225:30278	8636342	4	True				
ANR	8636552	CallExpression	"check_error ( d , test , ""new unknown chunk before IDAT"" )"		8636342	0					
ANR	8636553	Callee	check_error		8636342	0					
ANR	8636554	Identifier	check_error		8636342	0					
ANR	8636555	ArgumentList	d		8636342	1					
ANR	8636556	Argument	d		8636342	0					
ANR	8636557	Identifier	d		8636342	0					
ANR	8636558	Argument	test		8636342	1					
ANR	8636559	Identifier	test		8636342	0					
ANR	8636560	Argument	"""new unknown chunk before IDAT"""		8636342	2					
ANR	8636561	PrimaryExpression	"""new unknown chunk before IDAT"""		8636342	0					
ANR	8636562	ExpressionStatement	test = flags [ 1 ] [ 2 ] & ~flags [ 0 ] [ 2 ]	1059:6:30286:30319	8636342	5	True				
ANR	8636563	AssignmentExpression	test = flags [ 1 ] [ 2 ] & ~flags [ 0 ] [ 2 ]		8636342	0		=			
ANR	8636564	Identifier	test		8636342	0					
ANR	8636565	BitAndExpression	flags [ 1 ] [ 2 ] & ~flags [ 0 ] [ 2 ]		8636342	1		&			
ANR	8636566	ArrayIndexing	flags [ 1 ] [ 2 ]		8636342	0					
ANR	8636567	ArrayIndexing	flags [ 1 ]		8636342	0					
ANR	8636568	Identifier	flags		8636342	0					
ANR	8636569	PrimaryExpression	1		8636342	1					
ANR	8636570	PrimaryExpression	2		8636342	1					
ANR	8636571	ArrayIndexing	~flags [ 0 ] [ 2 ]		8636342	1					
ANR	8636572	ArrayIndexing	~flags [ 0 ]		8636342	0					
ANR	8636573	Identifier	~flags		8636342	0					
ANR	8636574	PrimaryExpression	0		8636342	1					
ANR	8636575	PrimaryExpression	2		8636342	1					
ANR	8636576	ExpressionStatement	"check_error ( d , test , ""new known chunk after IDAT"" )"	1060:6:30327:30377	8636342	6	True				
ANR	8636577	CallExpression	"check_error ( d , test , ""new known chunk after IDAT"" )"		8636342	0					
ANR	8636578	Callee	check_error		8636342	0					
ANR	8636579	Identifier	check_error		8636342	0					
ANR	8636580	ArgumentList	d		8636342	1					
ANR	8636581	Argument	d		8636342	0					
ANR	8636582	Identifier	d		8636342	0					
ANR	8636583	Argument	test		8636342	1					
ANR	8636584	Identifier	test		8636342	0					
ANR	8636585	Argument	"""new known chunk after IDAT"""		8636342	2					
ANR	8636586	PrimaryExpression	"""new known chunk after IDAT"""		8636342	0					
ANR	8636587	ExpressionStatement	test = flags [ 1 ] [ 3 ] & ~ ( flags [ 0 ] [ 2 ] | flags [ 0 ] [ 3 ] )	1061:6:30385:30434	8636342	7	True				
ANR	8636588	AssignmentExpression	test = flags [ 1 ] [ 3 ] & ~ ( flags [ 0 ] [ 2 ] | flags [ 0 ] [ 3 ] )		8636342	0		=			
ANR	8636589	Identifier	test		8636342	0					
ANR	8636590	BitAndExpression	flags [ 1 ] [ 3 ] & ~ ( flags [ 0 ] [ 2 ] | flags [ 0 ] [ 3 ] )		8636342	1		&			
ANR	8636591	ArrayIndexing	flags [ 1 ] [ 3 ]		8636342	0					
ANR	8636592	ArrayIndexing	flags [ 1 ]		8636342	0					
ANR	8636593	Identifier	flags		8636342	0					
ANR	8636594	PrimaryExpression	1		8636342	1					
ANR	8636595	PrimaryExpression	3		8636342	1					
ANR	8636596	UnaryOperationExpression	~ ( flags [ 0 ] [ 2 ] | flags [ 0 ] [ 3 ] )		8636342	1					
ANR	8636597	UnaryOperator	~		8636342	0					
ANR	8636598	InclusiveOrExpression	flags [ 0 ] [ 2 ] | flags [ 0 ] [ 3 ]		8636342	1		|			
ANR	8636599	ArrayIndexing	flags [ 0 ] [ 2 ]		8636342	0					
ANR	8636600	ArrayIndexing	flags [ 0 ]		8636342	0					
ANR	8636601	Identifier	flags		8636342	0					
ANR	8636602	PrimaryExpression	0		8636342	1					
ANR	8636603	PrimaryExpression	2		8636342	1					
ANR	8636604	ArrayIndexing	flags [ 0 ] [ 3 ]		8636342	1					
ANR	8636605	ArrayIndexing	flags [ 0 ]		8636342	0					
ANR	8636606	Identifier	flags		8636342	0					
ANR	8636607	PrimaryExpression	0		8636342	1					
ANR	8636608	PrimaryExpression	3		8636342	1					
ANR	8636609	ExpressionStatement	"check_error ( d , test , ""new unknown chunk after IDAT"" )"	1062:6:30442:30494	8636342	8	True				
ANR	8636610	CallExpression	"check_error ( d , test , ""new unknown chunk after IDAT"" )"		8636342	0					
ANR	8636611	Callee	check_error		8636342	0					
ANR	8636612	Identifier	check_error		8636342	0					
ANR	8636613	ArgumentList	d		8636342	1					
ANR	8636614	Argument	d		8636342	0					
ANR	8636615	Identifier	d		8636342	0					
ANR	8636616	Argument	test		8636342	1					
ANR	8636617	Identifier	test		8636342	0					
ANR	8636618	Argument	"""new unknown chunk after IDAT"""		8636342	2					
ANR	8636619	PrimaryExpression	"""new unknown chunk after IDAT"""		8636342	0					
ANR	8636620	ExpressionStatement	"check_handling ( d , def , flags [ 0 ] [ 0 ] | flags [ 0 ] [ 1 ] , flags [ 1 ] [ 0 ] , flags [ 1 ] [ 1 ] , ""before IDAT"" , set_callback )"	1069:3:30688:30798	8636342	11	True				
ANR	8636621	CallExpression	"check_handling ( d , def , flags [ 0 ] [ 0 ] | flags [ 0 ] [ 1 ] , flags [ 1 ] [ 0 ] , flags [ 1 ] [ 1 ] , ""before IDAT"" , set_callback )"		8636342	0					
ANR	8636622	Callee	check_handling		8636342	0					
ANR	8636623	Identifier	check_handling		8636342	0					
ANR	8636624	ArgumentList	d		8636342	1					
ANR	8636625	Argument	d		8636342	0					
ANR	8636626	Identifier	d		8636342	0					
ANR	8636627	Argument	def		8636342	1					
ANR	8636628	Identifier	def		8636342	0					
ANR	8636629	Argument	flags [ 0 ] [ 0 ] | flags [ 0 ] [ 1 ]		8636342	2					
ANR	8636630	InclusiveOrExpression	flags [ 0 ] [ 0 ] | flags [ 0 ] [ 1 ]		8636342	0		|			
ANR	8636631	ArrayIndexing	flags [ 0 ] [ 0 ]		8636342	0					
ANR	8636632	ArrayIndexing	flags [ 0 ]		8636342	0					
ANR	8636633	Identifier	flags		8636342	0					
ANR	8636634	PrimaryExpression	0		8636342	1					
ANR	8636635	PrimaryExpression	0		8636342	1					
ANR	8636636	ArrayIndexing	flags [ 0 ] [ 1 ]		8636342	1					
ANR	8636637	ArrayIndexing	flags [ 0 ]		8636342	0					
ANR	8636638	Identifier	flags		8636342	0					
ANR	8636639	PrimaryExpression	0		8636342	1					
ANR	8636640	PrimaryExpression	1		8636342	1					
ANR	8636641	Argument	flags [ 1 ] [ 0 ]		8636342	3					
ANR	8636642	ArrayIndexing	flags [ 1 ] [ 0 ]		8636342	0					
ANR	8636643	ArrayIndexing	flags [ 1 ]		8636342	0					
ANR	8636644	Identifier	flags		8636342	0					
ANR	8636645	PrimaryExpression	1		8636342	1					
ANR	8636646	PrimaryExpression	0		8636342	1					
ANR	8636647	Argument	flags [ 1 ] [ 1 ]		8636342	4					
ANR	8636648	ArrayIndexing	flags [ 1 ] [ 1 ]		8636342	0					
ANR	8636649	ArrayIndexing	flags [ 1 ]		8636342	0					
ANR	8636650	Identifier	flags		8636342	0					
ANR	8636651	PrimaryExpression	1		8636342	1					
ANR	8636652	PrimaryExpression	1		8636342	1					
ANR	8636653	Argument	"""before IDAT"""		8636342	5					
ANR	8636654	PrimaryExpression	"""before IDAT"""		8636342	0					
ANR	8636655	Argument	set_callback		8636342	6					
ANR	8636656	Identifier	set_callback		8636342	0					
ANR	8636657	ExpressionStatement	"check_handling ( d , def , flags [ 0 ] [ 2 ] | flags [ 0 ] [ 3 ] , flags [ 1 ] [ 2 ] , flags [ 1 ] [ 3 ] , ""after IDAT"" , set_callback )"	1071:3:30803:30912	8636342	12	True				
ANR	8636658	CallExpression	"check_handling ( d , def , flags [ 0 ] [ 2 ] | flags [ 0 ] [ 3 ] , flags [ 1 ] [ 2 ] , flags [ 1 ] [ 3 ] , ""after IDAT"" , set_callback )"		8636342	0					
ANR	8636659	Callee	check_handling		8636342	0					
ANR	8636660	Identifier	check_handling		8636342	0					
ANR	8636661	ArgumentList	d		8636342	1					
ANR	8636662	Argument	d		8636342	0					
ANR	8636663	Identifier	d		8636342	0					
ANR	8636664	Argument	def		8636342	1					
ANR	8636665	Identifier	def		8636342	0					
ANR	8636666	Argument	flags [ 0 ] [ 2 ] | flags [ 0 ] [ 3 ]		8636342	2					
ANR	8636667	InclusiveOrExpression	flags [ 0 ] [ 2 ] | flags [ 0 ] [ 3 ]		8636342	0		|			
ANR	8636668	ArrayIndexing	flags [ 0 ] [ 2 ]		8636342	0					
ANR	8636669	ArrayIndexing	flags [ 0 ]		8636342	0					
ANR	8636670	Identifier	flags		8636342	0					
ANR	8636671	PrimaryExpression	0		8636342	1					
ANR	8636672	PrimaryExpression	2		8636342	1					
ANR	8636673	ArrayIndexing	flags [ 0 ] [ 3 ]		8636342	1					
ANR	8636674	ArrayIndexing	flags [ 0 ]		8636342	0					
ANR	8636675	Identifier	flags		8636342	0					
ANR	8636676	PrimaryExpression	0		8636342	1					
ANR	8636677	PrimaryExpression	3		8636342	1					
ANR	8636678	Argument	flags [ 1 ] [ 2 ]		8636342	3					
ANR	8636679	ArrayIndexing	flags [ 1 ] [ 2 ]		8636342	0					
ANR	8636680	ArrayIndexing	flags [ 1 ]		8636342	0					
ANR	8636681	Identifier	flags		8636342	0					
ANR	8636682	PrimaryExpression	1		8636342	1					
ANR	8636683	PrimaryExpression	2		8636342	1					
ANR	8636684	Argument	flags [ 1 ] [ 3 ]		8636342	4					
ANR	8636685	ArrayIndexing	flags [ 1 ] [ 3 ]		8636342	0					
ANR	8636686	ArrayIndexing	flags [ 1 ]		8636342	0					
ANR	8636687	Identifier	flags		8636342	0					
ANR	8636688	PrimaryExpression	1		8636342	1					
ANR	8636689	PrimaryExpression	3		8636342	1					
ANR	8636690	Argument	"""after IDAT"""		8636342	5					
ANR	8636691	PrimaryExpression	"""after IDAT"""		8636342	0					
ANR	8636692	Argument	set_callback		8636342	6					
ANR	8636693	Identifier	set_callback		8636342	0					
ANR	8636694	ReturnType	static void		8636342	1					
ANR	8636695	Identifier	perform_one_test		8636342	2					
ANR	8636696	ParameterList	"FILE * fp , int argc , const char * * argv , png_uint_32 * default_flags , display * d , int set_callback"		8636342	3					
ANR	8636697	Parameter	FILE * fp	1011:17:28242:28249	8636342	0	True				
ANR	8636698	ParameterType	FILE *		8636342	0					
ANR	8636699	Identifier	fp		8636342	1					
ANR	8636700	Parameter	int argc	1011:27:28252:28259	8636342	1	True				
ANR	8636701	ParameterType	int		8636342	0					
ANR	8636702	Identifier	argc		8636342	1					
ANR	8636703	Parameter	const char * * argv	1011:37:28262:28278	8636342	2	True				
ANR	8636704	ParameterType	const char * *		8636342	0					
ANR	8636705	Identifier	argv		8636342	1					
ANR	8636706	Parameter	png_uint_32 * default_flags	1012:3:28284:28309	8636342	3	True				
ANR	8636707	ParameterType	png_uint_32 *		8636342	0					
ANR	8636708	Identifier	default_flags		8636342	1					
ANR	8636709	Parameter	display * d	1012:31:28312:28321	8636342	4	True				
ANR	8636710	ParameterType	display *		8636342	0					
ANR	8636711	Identifier	d		8636342	1					
ANR	8636712	Parameter	int set_callback	1012:43:28324:28339	8636342	5	True				
ANR	8636713	ParameterType	int		8636342	0					
ANR	8636714	Identifier	set_callback		8636342	1					
ANR	8636715	CFGEntryNode	ENTRY		8636342		True				
ANR	8636716	CFGExitNode	EXIT		8636342		True				
ANR	8636717	Symbol	argc		8636342						
ANR	8636718	Symbol	* flags		8636342						
ANR	8636719	Symbol	d		8636342						
ANR	8636720	Symbol	def		8636342						
ANR	8636721	Symbol	test		8636342						
ANR	8636722	Symbol	flags		8636342						
ANR	8636723	Symbol	PNG_INFO_IDAT		8636342						
ANR	8636724	Symbol	fp		8636342						
ANR	8636725	Symbol	check		8636342						
ANR	8636726	Symbol	* * flags		8636342						
ANR	8636727	Symbol	argv		8636342						
ANR	8636728	Symbol	chunk_info		8636342						
ANR	8636729	Symbol	* * ~flags		8636342						
ANR	8636730	Symbol	PNG_HANDLE_CHUNK_AS_DEFAULT		8636342						
ANR	8636731	Symbol	set_callback		8636342						
ANR	8636732	Symbol	* ~flags		8636342						
ANR	8636733	Symbol	default_flags		8636342						
ANR	8636734	Symbol	chunk_info [ 0 ] . keep		8636342						
ANR	8636735	Symbol	~flags		8636342						
ANR	8636736	Symbol	* chunk_info		8636342						
ANR	8636737	Function	perform_one_test_safe	1075:0:30917:31457							
ANR	8636738	FunctionDef	"perform_one_test_safe (FILE * fp , int argc , const char * * argv , png_uint_32 * default_flags , display * d , const char * test)"		8636737	0					
ANR	8636739	CompoundStatement		1078:0:31051:31457	8636737	0					
ANR	8636740	IfStatement	if ( setjmp ( d -> error_return ) == 0 )		8636737	0					
ANR	8636741	Condition	setjmp ( d -> error_return ) == 0	1079:7:31060:31087	8636737	0	True				
ANR	8636742	EqualityExpression	setjmp ( d -> error_return ) == 0		8636737	0		==			
ANR	8636743	CallExpression	setjmp ( d -> error_return )		8636737	0					
ANR	8636744	Callee	setjmp		8636737	0					
ANR	8636745	Identifier	setjmp		8636737	0					
ANR	8636746	ArgumentList	d -> error_return		8636737	1					
ANR	8636747	Argument	d -> error_return		8636737	0					
ANR	8636748	PtrMemberAccess	d -> error_return		8636737	0					
ANR	8636749	Identifier	d		8636737	0					
ANR	8636750	Identifier	error_return		8636737	1					
ANR	8636751	PrimaryExpression	0		8636737	1					
ANR	8636752	CompoundStatement		7:6:216:327	8636737	1					
ANR	8636753	ExpressionStatement	d -> test = test	1081:6:31101:31115	8636737	0	True				
ANR	8636754	AssignmentExpression	d -> test = test		8636737	0		=			
ANR	8636755	PtrMemberAccess	d -> test		8636737	0					
ANR	8636756	Identifier	d		8636737	0					
ANR	8636757	Identifier	test		8636737	1					
ANR	8636758	Identifier	test		8636737	1					
ANR	8636759	IdentifierDeclStatement	"ifdef PNG_SAVE_UNKNOWN_CHUNKS_SUPPORTED perform_one_test ( fp , argc , argv , default_flags , d , 0 ) ;"	1082:6:31158:31260	8636737	1	True				
ANR	8636760	IdentifierDecl	"perform_one_test ( fp , argc , argv , default_flags , d , 0 )"		8636737	0					
ANR	8636761	IdentifierDeclType	ifdef PNG_SAVE_UNKNOWN_CHUNKS_SUPPORTED		8636737	0					
ANR	8636762	Identifier	perform_one_test		8636737	1					
ANR	8636763	Expression	"fp , argc , argv , default_flags , d , 0"		8636737	2					
ANR	8636764	Identifier	fp		8636737	0					
ANR	8636765	Expression	"argc , argv , default_flags , d , 0"		8636737	1					
ANR	8636766	Identifier	argc		8636737	0					
ANR	8636767	Expression	"argv , default_flags , d , 0"		8636737	1					
ANR	8636768	Identifier	argv		8636737	0					
ANR	8636769	Expression	"default_flags , d , 0"		8636737	1					
ANR	8636770	Identifier	default_flags		8636737	0					
ANR	8636771	Expression	"d , 0"		8636737	1					
ANR	8636772	Identifier	d		8636737	0					
ANR	8636773	PrimaryExpression	0		8636737	1					
ANR	8636774	IdentifierDeclStatement	"endif ifdef PNG_READ_USER_CHUNKS_SUPPORTED perform_one_test ( fp , argc , argv , default_flags , d , 1 ) ;"	1084:6:31268:31379	8636737	2	True				
ANR	8636775	IdentifierDecl	"perform_one_test ( fp , argc , argv , default_flags , d , 1 )"		8636737	0					
ANR	8636776	IdentifierDeclType	endif ifdef PNG_READ_USER_CHUNKS_SUPPORTED		8636737	0					
ANR	8636777	Identifier	perform_one_test		8636737	1					
ANR	8636778	Expression	"fp , argc , argv , default_flags , d , 1"		8636737	2					
ANR	8636779	Identifier	fp		8636737	0					
ANR	8636780	Expression	"argc , argv , default_flags , d , 1"		8636737	1					
ANR	8636781	Identifier	argc		8636737	0					
ANR	8636782	Expression	"argv , default_flags , d , 1"		8636737	1					
ANR	8636783	Identifier	argv		8636737	0					
ANR	8636784	Expression	"default_flags , d , 1"		8636737	1					
ANR	8636785	Identifier	default_flags		8636737	0					
ANR	8636786	Expression	"d , 1"		8636737	1					
ANR	8636787	Identifier	d		8636737	0					
ANR	8636788	PrimaryExpression	1		8636737	1					
ANR	8636789	Statement	endif	1087:6:31387:31391	8636737	3	True				
ANR	8636790	ExpressionStatement	d -> test = init	1088:6:31399:31413	8636737	4	True				
ANR	8636791	AssignmentExpression	d -> test = init		8636737	0		=			
ANR	8636792	PtrMemberAccess	d -> test		8636737	0					
ANR	8636793	Identifier	d		8636737	0					
ANR	8636794	Identifier	test		8636737	1					
ANR	8636795	Identifier	init		8636737	1					
ANR	8636796	ReturnType	static void		8636737	1					
ANR	8636797	Identifier	perform_one_test_safe		8636737	2					
ANR	8636798	ParameterList	"FILE * fp , int argc , const char * * argv , png_uint_32 * default_flags , display * d , const char * test"		8636737	3					
ANR	8636799	Parameter	FILE * fp	1076:22:30951:30958	8636737	0	True				
ANR	8636800	ParameterType	FILE *		8636737	0					
ANR	8636801	Identifier	fp		8636737	1					
ANR	8636802	Parameter	int argc	1076:32:30961:30968	8636737	1	True				
ANR	8636803	ParameterType	int		8636737	0					
ANR	8636804	Identifier	argc		8636737	1					
ANR	8636805	Parameter	const char * * argv	1076:42:30971:30987	8636737	2	True				
ANR	8636806	ParameterType	const char * *		8636737	0					
ANR	8636807	Identifier	argv		8636737	1					
ANR	8636808	Parameter	png_uint_32 * default_flags	1077:3:30993:31018	8636737	3	True				
ANR	8636809	ParameterType	png_uint_32 *		8636737	0					
ANR	8636810	Identifier	default_flags		8636737	1					
ANR	8636811	Parameter	display * d	1077:31:31021:31030	8636737	4	True				
ANR	8636812	ParameterType	display *		8636737	0					
ANR	8636813	Identifier	d		8636737	1					
ANR	8636814	Parameter	const char * test	1077:43:31033:31048	8636737	5	True				
ANR	8636815	ParameterType	const char *		8636737	0					
ANR	8636816	Identifier	test		8636737	1					
ANR	8636817	CFGEntryNode	ENTRY		8636737		True				
ANR	8636818	CFGExitNode	EXIT		8636737		True				
ANR	8636819	Symbol	argc		8636737						
ANR	8636820	Symbol	init		8636737						
ANR	8636821	Symbol	d		8636737						
ANR	8636822	Symbol	test		8636737						
ANR	8636823	Symbol	perform_one_test		8636737						
ANR	8636824	Symbol	default_flags		8636737						
ANR	8636825	Symbol	d -> error_return		8636737						
ANR	8636826	Symbol	setjmp		8636737						
ANR	8636827	Symbol	fp		8636737						
ANR	8636828	Symbol	d -> test		8636737						
ANR	8636829	Symbol	argv		8636737						
ANR	8636830	Symbol	* d		8636737						
ANR	8636831	DeclStmt									
ANR	8636832	Decl							const char	const char * [ ]	standard_tests
ANR	8636833	Function	usage	1105:0:31831:32092							
ANR	8636834	FunctionDef	"usage (const char * program , const char * reason)"		8636833	0					
ANR	8636835	CompoundStatement		1107:0:31903:32092	8636833	0					
ANR	8636836	Statement	fprintf	1108:3:31908:31914	8636833	0	True				
ANR	8636837	Statement	(	1108:10:31915:31915	8636833	1	True				
ANR	8636838	Statement	stderr	1108:11:31916:31921	8636833	2	True				
ANR	8636839	Statement	","	1108:17:31922:31922	8636833	3	True				
ANR	8636840	Statement	"""pngunknown: %s: usage:\\n %s [--strict] """	1108:19:31924:31964	8636833	4	True				
ANR	8636841	Statement	"""--default|{(CHNK|default|all)=(default|discard|if-safe|save)} """	1109:6:31972:32035	8636833	5	True				
ANR	8636842	Statement	"""testfile.png\\n"""	1110:6:32043:32058	8636833	6	True				
ANR	8636843	Statement	","	1110:22:32059:32059	8636833	7	True				
ANR	8636844	Statement	reason	1110:24:32061:32066	8636833	8	True				
ANR	8636845	Statement	","	1110:30:32067:32067	8636833	9	True				
ANR	8636846	Statement	program	1110:32:32069:32075	8636833	10	True				
ANR	8636847	Statement	)	1110:39:32076:32076	8636833	11	True				
ANR	8636848	ExpressionStatement		1110:40:32077:32077	8636833	12	True				
ANR	8636849	ExpressionStatement	exit ( 99 )	1111:3:32082:32090	8636833	13	True				
ANR	8636850	CallExpression	exit ( 99 )		8636833	0					
ANR	8636851	Callee	exit		8636833	0					
ANR	8636852	Identifier	exit		8636833	0					
ANR	8636853	ArgumentList	99		8636833	1					
ANR	8636854	Argument	99		8636833	0					
ANR	8636855	PrimaryExpression	99		8636833	0					
ANR	8636856	ReturnType	static PNG_NORETURN void		8636833	1					
ANR	8636857	Identifier	usage		8636833	2					
ANR	8636858	ParameterList	"const char * program , const char * reason"		8636833	3					
ANR	8636859	Parameter	const char * program	1106:6:31862:31880	8636833	0	True				
ANR	8636860	ParameterType	const char *		8636833	0					
ANR	8636861	Identifier	program		8636833	1					
ANR	8636862	Parameter	const char * reason	1106:27:31883:31900	8636833	1	True				
ANR	8636863	ParameterType	const char *		8636833	0					
ANR	8636864	Identifier	reason		8636833	1					
ANR	8636865	CFGEntryNode	ENTRY		8636833		True				
ANR	8636866	CFGExitNode	EXIT		8636833		True				
ANR	8636867	Symbol	reason		8636833						
ANR	8636868	Symbol	program		8636833						
ANR	8636869	Function	main	1114:0:32095:36201							
ANR	8636870	FunctionDef	"main (int argc , const char * * argv)"		8636869	0					
ANR	8636871	CompoundStatement		1116:0:32133:36201	8636869	0					
ANR	8636872	IdentifierDeclStatement	FILE * fp ;	1117:3:32138:32146	8636869	0	True				
ANR	8636873	IdentifierDecl	* fp		8636869	0					
ANR	8636874	IdentifierDeclType	FILE *		8636869	0					
ANR	8636875	Identifier	fp		8636869	1					
ANR	8636876	IdentifierDeclStatement	png_uint_32 default_flags [ 4 ] ;	1118:3:32151:32210	8636869	1	True				
ANR	8636877	IdentifierDecl	default_flags [ 4 ]		8636869	0					
ANR	8636878	IdentifierDeclType	png_uint_32 [ 4 ]		8636869	0					
ANR	8636879	Identifier	default_flags		8636869	1					
ANR	8636880	PrimaryExpression	4		8636869	2					
ANR	8636881	IdentifierDeclStatement	"int strict = 0 , default_tests = 0 ;"	1119:3:32215:32248	8636869	2	True				
ANR	8636882	IdentifierDecl	strict = 0		8636869	0					
ANR	8636883	IdentifierDeclType	int		8636869	0					
ANR	8636884	Identifier	strict		8636869	1					
ANR	8636885	AssignmentExpression	strict = 0		8636869	2		=			
ANR	8636886	Identifier	strict		8636869	0					
ANR	8636887	PrimaryExpression	0		8636869	1					
ANR	8636888	IdentifierDecl	default_tests = 0		8636869	1					
ANR	8636889	IdentifierDeclType	int		8636869	0					
ANR	8636890	Identifier	default_tests		8636869	1					
ANR	8636891	AssignmentExpression	default_tests = 0		8636869	2		=			
ANR	8636892	Identifier	default_tests		8636869	0					
ANR	8636893	PrimaryExpression	0		8636869	1					
ANR	8636894	IdentifierDeclStatement	"const char * count_argv = ""default=save"" ;"	1120:3:32253:32292	8636869	3	True				
ANR	8636895	IdentifierDecl	"* count_argv = ""default=save"""		8636869	0					
ANR	8636896	IdentifierDeclType	const char *		8636869	0					
ANR	8636897	Identifier	count_argv		8636869	1					
ANR	8636898	AssignmentExpression	"* count_argv = ""default=save"""		8636869	2		=			
ANR	8636899	Identifier	count_argv		8636869	0					
ANR	8636900	PrimaryExpression	"""default=save"""		8636869	1					
ANR	8636901	IdentifierDeclStatement	const char * touch_file = NULL ;	1121:3:32297:32326	8636869	4	True				
ANR	8636902	IdentifierDecl	* touch_file = NULL		8636869	0					
ANR	8636903	IdentifierDeclType	const char *		8636869	0					
ANR	8636904	Identifier	touch_file		8636869	1					
ANR	8636905	AssignmentExpression	* touch_file = NULL		8636869	2		=			
ANR	8636906	Identifier	NULL		8636869	0					
ANR	8636907	Identifier	NULL		8636869	1					
ANR	8636908	IdentifierDeclStatement	display d ;	1122:3:32331:32340	8636869	5	True				
ANR	8636909	IdentifierDecl	d		8636869	0					
ANR	8636910	IdentifierDeclType	display		8636869	0					
ANR	8636911	Identifier	d		8636869	1					
ANR	8636912	ExpressionStatement	"init_display ( & d , argv [ 0 ] )"	1124:3:32346:32371	8636869	6	True				
ANR	8636913	CallExpression	"init_display ( & d , argv [ 0 ] )"		8636869	0					
ANR	8636914	Callee	init_display		8636869	0					
ANR	8636915	Identifier	init_display		8636869	0					
ANR	8636916	ArgumentList	& d		8636869	1					
ANR	8636917	Argument	& d		8636869	0					
ANR	8636918	UnaryOperationExpression	& d		8636869	0					
ANR	8636919	UnaryOperator	&		8636869	0					
ANR	8636920	Identifier	d		8636869	1					
ANR	8636921	Argument	argv [ 0 ]		8636869	1					
ANR	8636922	ArrayIndexing	argv [ 0 ]		8636869	0					
ANR	8636923	Identifier	argv		8636869	0					
ANR	8636924	PrimaryExpression	0		8636869	1					
ANR	8636925	WhileStatement	"while ( ++ argv , -- argc > 0 )"		8636869	7					
ANR	8636926	Condition	"++ argv , -- argc > 0"	1126:10:32384:32401	8636869	0	True				
ANR	8636927	Expression	"++ argv , -- argc > 0"		8636869	0					
ANR	8636928	UnaryExpression	++ argv		8636869	0					
ANR	8636929	IncDec	++		8636869	0					
ANR	8636930	Identifier	argv		8636869	1					
ANR	8636931	RelationalExpression	-- argc > 0		8636869	1		>			
ANR	8636932	UnaryExpression	-- argc		8636869	0					
ANR	8636933	IncDec	--		8636869	0					
ANR	8636934	Identifier	argc		8636869	1					
ANR	8636935	PrimaryExpression	0		8636869	1					
ANR	8636936	CompoundStatement		12:3:273:273	8636869	1					
ANR	8636937	IfStatement	"if ( strcmp ( * argv , ""--strict"" ) == 0 )"		8636869	0					
ANR	8636938	Condition	"strcmp ( * argv , ""--strict"" ) == 0"	1128:10:32419:32448	8636869	0	True				
ANR	8636939	EqualityExpression	"strcmp ( * argv , ""--strict"" ) == 0"		8636869	0		==			
ANR	8636940	CallExpression	"strcmp ( * argv , ""--strict"" )"		8636869	0					
ANR	8636941	Callee	strcmp		8636869	0					
ANR	8636942	Identifier	strcmp		8636869	0					
ANR	8636943	ArgumentList	* argv		8636869	1					
ANR	8636944	Argument	* argv		8636869	0					
ANR	8636945	UnaryOperationExpression	* argv		8636869	0					
ANR	8636946	UnaryOperator	*		8636869	0					
ANR	8636947	Identifier	argv		8636869	1					
ANR	8636948	Argument	"""--strict"""		8636869	1					
ANR	8636949	PrimaryExpression	"""--strict"""		8636869	0					
ANR	8636950	PrimaryExpression	0		8636869	1					
ANR	8636951	ExpressionStatement	strict = 1	1129:9:32460:32470	8636869	1	True				
ANR	8636952	AssignmentExpression	strict = 1		8636869	0		=			
ANR	8636953	Identifier	strict		8636869	0					
ANR	8636954	PrimaryExpression	1		8636869	1					
ANR	8636955	ElseStatement	else		8636869	0					
ANR	8636956	IfStatement	"if ( strcmp ( * argv , ""--default"" ) == 0 )"		8636869	0					
ANR	8636957	Condition	"strcmp ( * argv , ""--default"" ) == 0"	1131:15:32488:32518	8636869	0	True				
ANR	8636958	EqualityExpression	"strcmp ( * argv , ""--default"" ) == 0"		8636869	0		==			
ANR	8636959	CallExpression	"strcmp ( * argv , ""--default"" )"		8636869	0					
ANR	8636960	Callee	strcmp		8636869	0					
ANR	8636961	Identifier	strcmp		8636869	0					
ANR	8636962	ArgumentList	* argv		8636869	1					
ANR	8636963	Argument	* argv		8636869	0					
ANR	8636964	UnaryOperationExpression	* argv		8636869	0					
ANR	8636965	UnaryOperator	*		8636869	0					
ANR	8636966	Identifier	argv		8636869	1					
ANR	8636967	Argument	"""--default"""		8636869	1					
ANR	8636968	PrimaryExpression	"""--default"""		8636869	0					
ANR	8636969	PrimaryExpression	0		8636869	1					
ANR	8636970	ExpressionStatement	default_tests = 1	1132:9:32530:32547	8636869	1	True				
ANR	8636971	AssignmentExpression	default_tests = 1		8636869	0		=			
ANR	8636972	Identifier	default_tests		8636869	0					
ANR	8636973	PrimaryExpression	1		8636869	1					
ANR	8636974	ElseStatement	else		8636869	0					
ANR	8636975	IfStatement	"if ( strcmp ( * argv , ""--touch"" ) == 0 )"		8636869	0					
ANR	8636976	Condition	"strcmp ( * argv , ""--touch"" ) == 0"	1134:15:32565:32593	8636869	0	True				
ANR	8636977	EqualityExpression	"strcmp ( * argv , ""--touch"" ) == 0"		8636869	0		==			
ANR	8636978	CallExpression	"strcmp ( * argv , ""--touch"" )"		8636869	0					
ANR	8636979	Callee	strcmp		8636869	0					
ANR	8636980	Identifier	strcmp		8636869	0					
ANR	8636981	ArgumentList	* argv		8636869	1					
ANR	8636982	Argument	* argv		8636869	0					
ANR	8636983	UnaryOperationExpression	* argv		8636869	0					
ANR	8636984	UnaryOperator	*		8636869	0					
ANR	8636985	Identifier	argv		8636869	1					
ANR	8636986	Argument	"""--touch"""		8636869	1					
ANR	8636987	PrimaryExpression	"""--touch"""		8636869	0					
ANR	8636988	PrimaryExpression	0		8636869	1					
ANR	8636989	CompoundStatement		20:6:468:468	8636869	1					
ANR	8636990	IfStatement	if ( argc > 1 )		8636869	0					
ANR	8636991	Condition	argc > 1	1136:13:32617:32624	8636869	0	True				
ANR	8636992	RelationalExpression	argc > 1		8636869	0		>			
ANR	8636993	Identifier	argc		8636869	0					
ANR	8636994	PrimaryExpression	1		8636869	1					
ANR	8636995	ExpressionStatement	"touch_file = * ++ argv , -- argc"	1137:12:32639:32667	8636869	1	True				
ANR	8636996	Expression	"touch_file = * ++ argv , -- argc"		8636869	0					
ANR	8636997	AssignmentExpression	touch_file = * ++ argv		8636869	0		=			
ANR	8636998	Identifier	touch_file		8636869	0					
ANR	8636999	UnaryOperationExpression	* ++ argv		8636869	1					
ANR	8637000	UnaryOperator	*		8636869	0					
ANR	8637001	UnaryExpression	++ argv		8636869	1					
ANR	8637002	IncDec	++		8636869	0					
ANR	8637003	Identifier	argv		8636869	1					
ANR	8637004	UnaryExpression	-- argc		8636869	1					
ANR	8637005	IncDec	--		8636869	0					
ANR	8637006	Identifier	argc		8636869	1					
ANR	8637007	ElseStatement	else		8636869	0					
ANR	8637008	ExpressionStatement	"usage ( d . program , ""--touch: missing file name"" )"	1140:12:32696:32742	8636869	0	True				
ANR	8637009	CallExpression	"usage ( d . program , ""--touch: missing file name"" )"		8636869	0					
ANR	8637010	Callee	usage		8636869	0					
ANR	8637011	Identifier	usage		8636869	0					
ANR	8637012	ArgumentList	d . program		8636869	1					
ANR	8637013	Argument	d . program		8636869	0					
ANR	8637014	MemberAccess	d . program		8636869	0					
ANR	8637015	Identifier	d		8636869	0					
ANR	8637016	Identifier	program		8636869	1					
ANR	8637017	Argument	"""--touch: missing file name"""		8636869	1					
ANR	8637018	PrimaryExpression	"""--touch: missing file name"""		8636869	0					
ANR	8637019	ElseStatement	else		8636869	0					
ANR	8637020	BreakStatement	break ;	1144:9:32773:32778	8636869	0	True				
ANR	8637021	IfStatement	if ( argc <= 0 )		8636869	8					
ANR	8637022	Condition	argc <= 0	1150:7:32904:32912	8636869	0	True				
ANR	8637023	RelationalExpression	argc <= 0		8636869	0		<=			
ANR	8637024	Identifier	argc		8636869	0					
ANR	8637025	PrimaryExpression	0		8636869	1					
ANR	8637026	ExpressionStatement	"usage ( d . program , ""missing test file"" )"	1151:6:32921:32958	8636869	1	True				
ANR	8637027	CallExpression	"usage ( d . program , ""missing test file"" )"		8636869	0					
ANR	8637028	Callee	usage		8636869	0					
ANR	8637029	Identifier	usage		8636869	0					
ANR	8637030	ArgumentList	d . program		8636869	1					
ANR	8637031	Argument	d . program		8636869	0					
ANR	8637032	MemberAccess	d . program		8636869	0					
ANR	8637033	Identifier	d		8636869	0					
ANR	8637034	Identifier	program		8636869	1					
ANR	8637035	Argument	"""missing test file"""		8636869	1					
ANR	8637036	PrimaryExpression	"""missing test file"""		8636869	0					
ANR	8637037	ExpressionStatement	d . file = argv [ -- argc ]	1160:3:33266:33287	8636869	9	True				
ANR	8637038	AssignmentExpression	d . file = argv [ -- argc ]		8636869	0		=			
ANR	8637039	MemberAccess	d . file		8636869	0					
ANR	8637040	Identifier	d		8636869	0					
ANR	8637041	Identifier	file		8636869	1					
ANR	8637042	ArrayIndexing	argv [ -- argc ]		8636869	1					
ANR	8637043	Identifier	argv		8636869	0					
ANR	8637044	UnaryExpression	-- argc		8636869	1					
ANR	8637045	IncDec	--		8636869	0					
ANR	8637046	Identifier	argc		8636869	1					
ANR	8637047	ExpressionStatement	"fp = fopen ( d . file , ""rb"" )"	1162:3:33293:33317	8636869	10	True				
ANR	8637048	AssignmentExpression	"fp = fopen ( d . file , ""rb"" )"		8636869	0		=			
ANR	8637049	Identifier	fp		8636869	0					
ANR	8637050	CallExpression	"fopen ( d . file , ""rb"" )"		8636869	1					
ANR	8637051	Callee	fopen		8636869	0					
ANR	8637052	Identifier	fopen		8636869	0					
ANR	8637053	ArgumentList	d . file		8636869	1					
ANR	8637054	Argument	d . file		8636869	0					
ANR	8637055	MemberAccess	d . file		8636869	0					
ANR	8637056	Identifier	d		8636869	0					
ANR	8637057	Identifier	file		8636869	1					
ANR	8637058	Argument	"""rb"""		8636869	1					
ANR	8637059	PrimaryExpression	"""rb"""		8636869	0					
ANR	8637060	IfStatement	if ( fp == NULL )		8636869	11					
ANR	8637061	Condition	fp == NULL	1163:7:33326:33335	8636869	0	True				
ANR	8637062	EqualityExpression	fp == NULL		8636869	0		==			
ANR	8637063	Identifier	fp		8636869	0					
ANR	8637064	Identifier	NULL		8636869	1					
ANR	8637065	CompoundStatement		49:3:1207:1207	8636869	1					
ANR	8637066	ExpressionStatement	perror ( d . file )	1165:6:33349:33363	8636869	0	True				
ANR	8637067	CallExpression	perror ( d . file )		8636869	0					
ANR	8637068	Callee	perror		8636869	0					
ANR	8637069	Identifier	perror		8636869	0					
ANR	8637070	ArgumentList	d . file		8636869	1					
ANR	8637071	Argument	d . file		8636869	0					
ANR	8637072	MemberAccess	d . file		8636869	0					
ANR	8637073	Identifier	d		8636869	0					
ANR	8637074	Identifier	file		8636869	1					
ANR	8637075	ExpressionStatement	exit ( 99 )	1166:6:33371:33379	8636869	1	True				
ANR	8637076	CallExpression	exit ( 99 )		8636869	0					
ANR	8637077	Callee	exit		8636869	0					
ANR	8637078	Identifier	exit		8636869	0					
ANR	8637079	ArgumentList	99		8636869	1					
ANR	8637080	Argument	99		8636869	0					
ANR	8637081	PrimaryExpression	99		8636869	0					
ANR	8637082	ElseStatement	else		8636869	0					
ANR	8637083	Statement	1	1182:9:34009:34009	8636869	0	True				
ANR	8637084	Statement	if	1178:3:33883:33884	8636869	12	True				
ANR	8637085	Statement	(	1178:6:33886:33886	8636869	13	True				
ANR	8637086	Statement	check	1178:7:33887:33891	8636869	14	True				
ANR	8637087	Statement	(	1178:12:33892:33892	8636869	15	True				
ANR	8637088	Statement	fp	1178:13:33893:33894	8636869	16	True				
ANR	8637089	Statement	","	1178:15:33895:33895	8636869	17	True				
ANR	8637090	Statement	1	1178:17:33897:33897	8636869	18	True				
ANR	8637091	Statement	","	1178:18:33898:33898	8636869	19	True				
ANR	8637092	Statement	&	1178:20:33900:33900	8636869	20	True				
ANR	8637093	Statement	count_argv	1178:21:33901:33910	8636869	21	True				
ANR	8637094	Statement	","	1178:31:33911:33911	8636869	22	True				
ANR	8637095	Statement	default_flags	1178:33:33913:33925	8636869	23	True				
ANR	8637096	Statement	","	1178:46:33926:33926	8636869	24	True				
ANR	8637097	Statement	&	1178:48:33928:33928	8636869	25	True				
ANR	8637098	Statement	d	1178:49:33929:33929	8636869	26	True				
ANR	8637099	Statement	","	1178:50:33930:33930	8636869	27	True				
ANR	8637100	Statement	ifdef	1179:6:33938:33942	8636869	28	True				
ANR	8637101	Statement	PNG_SAVE_UNKNOWN_CHUNKS_SUPPORTED	1179:12:33944:33976	8636869	29	True				
ANR	8637102	Statement	0	1180:9:33987:33987	8636869	30	True				
ANR	8637103	Statement	endif	1183:6:34017:34021	8636869	31	True				
ANR	8637104	Statement	)	1184:6:34029:34029	8636869	32	True				
ANR	8637105	Statement	!=	1184:8:34031:34032	8636869	33	True				
ANR	8637106	Statement	PNG_HANDLE_CHUNK_ALWAYS	1184:11:34034:34056	8636869	34	True				
ANR	8637107	Statement	)	1184:34:34057:34057	8636869	35	True				
ANR	8637108	CompoundStatement		70:3:1928:1928	8636869	36					
ANR	8637109	ExpressionStatement	"fprintf ( stderr , ""%s: %s: internal error\\n"" , d . program , d . file )"	1186:6:34070:34132	8636869	0	True				
ANR	8637110	CallExpression	"fprintf ( stderr , ""%s: %s: internal error\\n"" , d . program , d . file )"		8636869	0					
ANR	8637111	Callee	fprintf		8636869	0					
ANR	8637112	Identifier	fprintf		8636869	0					
ANR	8637113	ArgumentList	stderr		8636869	1					
ANR	8637114	Argument	stderr		8636869	0					
ANR	8637115	Identifier	stderr		8636869	0					
ANR	8637116	Argument	"""%s: %s: internal error\\n"""		8636869	1					
ANR	8637117	PrimaryExpression	"""%s: %s: internal error\\n"""		8636869	0					
ANR	8637118	Argument	d . program		8636869	2					
ANR	8637119	MemberAccess	d . program		8636869	0					
ANR	8637120	Identifier	d		8636869	0					
ANR	8637121	Identifier	program		8636869	1					
ANR	8637122	Argument	d . file		8636869	3					
ANR	8637123	MemberAccess	d . file		8636869	0					
ANR	8637124	Identifier	d		8636869	0					
ANR	8637125	Identifier	file		8636869	1					
ANR	8637126	ExpressionStatement	exit ( 99 )	1187:6:34140:34148	8636869	1	True				
ANR	8637127	CallExpression	exit ( 99 )		8636869	0					
ANR	8637128	Callee	exit		8636869	0					
ANR	8637129	Identifier	exit		8636869	0					
ANR	8637130	ArgumentList	99		8636869	1					
ANR	8637131	Argument	99		8636869	0					
ANR	8637132	PrimaryExpression	99		8636869	0					
ANR	8637133	IfStatement	if ( ! default_tests )		8636869	37					
ANR	8637134	Condition	! default_tests	1191:7:34232:34245	8636869	0	True				
ANR	8637135	UnaryOperationExpression	! default_tests		8636869	0					
ANR	8637136	UnaryOperator	!		8636869	0					
ANR	8637137	Identifier	default_tests		8636869	1					
ANR	8637138	CompoundStatement		81:6:2305:2417	8636869	1					
ANR	8637139	ExpressionStatement	d . test = cmd	1193:6:34259:34271	8636869	0	True				
ANR	8637140	AssignmentExpression	d . test = cmd		8636869	0		=			
ANR	8637141	MemberAccess	d . test		8636869	0					
ANR	8637142	Identifier	d		8636869	0					
ANR	8637143	Identifier	test		8636869	1					
ANR	8637144	Identifier	cmd		8636869	1					
ANR	8637145	IdentifierDeclStatement	"ifdef PNG_SAVE_UNKNOWN_CHUNKS_SUPPORTED perform_one_test ( fp , argc , argv , default_flags , & d , 0 ) ;"	1194:6:34328:34431	8636869	1	True				
ANR	8637146	IdentifierDecl	"perform_one_test ( fp , argc , argv , default_flags , & d , 0 )"		8636869	0					
ANR	8637147	IdentifierDeclType	ifdef PNG_SAVE_UNKNOWN_CHUNKS_SUPPORTED		8636869	0					
ANR	8637148	Identifier	perform_one_test		8636869	1					
ANR	8637149	Expression	"fp , argc , argv , default_flags , & d , 0"		8636869	2					
ANR	8637150	Identifier	fp		8636869	0					
ANR	8637151	Expression	"argc , argv , default_flags , & d , 0"		8636869	1					
ANR	8637152	Identifier	argc		8636869	0					
ANR	8637153	Expression	"argv , default_flags , & d , 0"		8636869	1					
ANR	8637154	Identifier	argv		8636869	0					
ANR	8637155	Expression	"default_flags , & d , 0"		8636869	1					
ANR	8637156	Identifier	default_flags		8636869	0					
ANR	8637157	Expression	"& d , 0"		8636869	1					
ANR	8637158	UnaryOperationExpression	& d		8636869	0					
ANR	8637159	UnaryOperator	&		8636869	0					
ANR	8637160	Identifier	d		8636869	1					
ANR	8637161	PrimaryExpression	0		8636869	1					
ANR	8637162	IdentifierDeclStatement	"endif ifdef PNG_READ_USER_CHUNKS_SUPPORTED perform_one_test ( fp , argc , argv , default_flags , & d , 1 ) ;"	1196:6:34439:34551	8636869	2	True				
ANR	8637163	IdentifierDecl	"perform_one_test ( fp , argc , argv , default_flags , & d , 1 )"		8636869	0					
ANR	8637164	IdentifierDeclType	endif ifdef PNG_READ_USER_CHUNKS_SUPPORTED		8636869	0					
ANR	8637165	Identifier	perform_one_test		8636869	1					
ANR	8637166	Expression	"fp , argc , argv , default_flags , & d , 1"		8636869	2					
ANR	8637167	Identifier	fp		8636869	0					
ANR	8637168	Expression	"argc , argv , default_flags , & d , 1"		8636869	1					
ANR	8637169	Identifier	argc		8636869	0					
ANR	8637170	Expression	"argv , default_flags , & d , 1"		8636869	1					
ANR	8637171	Identifier	argv		8636869	0					
ANR	8637172	Expression	"default_flags , & d , 1"		8636869	1					
ANR	8637173	Identifier	default_flags		8636869	0					
ANR	8637174	Expression	"& d , 1"		8636869	1					
ANR	8637175	UnaryOperationExpression	& d		8636869	0					
ANR	8637176	UnaryOperator	&		8636869	0					
ANR	8637177	Identifier	d		8636869	1					
ANR	8637178	PrimaryExpression	1		8636869	1					
ANR	8637179	Statement	endif	1199:6:34559:34563	8636869	3	True				
ANR	8637180	ExpressionStatement	d . test = init	1200:6:34571:34584	8636869	4	True				
ANR	8637181	AssignmentExpression	d . test = init		8636869	0		=			
ANR	8637182	MemberAccess	d . test		8636869	0					
ANR	8637183	Identifier	d		8636869	0					
ANR	8637184	Identifier	test		8636869	1					
ANR	8637185	Identifier	init		8636869	1					
ANR	8637186	ElseStatement	else		8636869	0					
ANR	8637187	CompoundStatement		90:6:2477:2511	8636869	0					
ANR	8637188	IdentifierDeclStatement	const char * * test = standard_tests ;	1205:6:34611:34645	8636869	0	True				
ANR	8637189	IdentifierDecl	* * test = standard_tests		8636869	0					
ANR	8637190	IdentifierDeclType	const char * *		8636869	0					
ANR	8637191	Identifier	test		8636869	1					
ANR	8637192	AssignmentExpression	* * test = standard_tests		8636869	2		=			
ANR	8637193	Identifier	standard_tests		8636869	0					
ANR	8637194	Identifier	standard_tests		8636869	1					
ANR	8637195	WhileStatement	while ( * test )		8636869	1					
ANR	8637196	Condition	* test	1211:13:34860:34864	8636869	0	True				
ANR	8637197	UnaryOperationExpression	* test		8636869	0					
ANR	8637198	UnaryOperator	*		8636869	0					
ANR	8637199	Identifier	test		8636869	1					
ANR	8637200	CompoundStatement		102:9:2912:2929	8636869	1					
ANR	8637201	IdentifierDeclStatement	const char * this_test = * test ++ ;	1213:9:34884:34915	8636869	0	True				
ANR	8637202	IdentifierDecl	* this_test = * test ++		8636869	0					
ANR	8637203	IdentifierDeclType	const char *		8636869	0					
ANR	8637204	Identifier	this_test		8636869	1					
ANR	8637205	AssignmentExpression	* this_test = * test ++		8636869	2		=			
ANR	8637206	Identifier	this_test		8636869	0					
ANR	8637207	UnaryOperationExpression	* test ++		8636869	1					
ANR	8637208	UnaryOperator	*		8636869	0					
ANR	8637209	PostIncDecOperationExpression	test ++		8636869	1					
ANR	8637210	Identifier	test		8636869	0					
ANR	8637211	IncDec	++		8636869	1					
ANR	8637212	IdentifierDeclStatement	const char * * next = test ;	1214:9:34926:34950	8636869	1	True				
ANR	8637213	IdentifierDecl	* * next = test		8636869	0					
ANR	8637214	IdentifierDeclType	const char * *		8636869	0					
ANR	8637215	Identifier	next		8636869	1					
ANR	8637216	AssignmentExpression	* * next = test		8636869	2		=			
ANR	8637217	Identifier	test		8636869	0					
ANR	8637218	Identifier	test		8636869	1					
ANR	8637219	IdentifierDeclStatement	"int count = display_rc ( & d , strict ) , new_count ;"	1215:9:34961:35006	8636869	2	True				
ANR	8637220	IdentifierDecl	"count = display_rc ( & d , strict )"		8636869	0					
ANR	8637221	IdentifierDeclType	int		8636869	0					
ANR	8637222	Identifier	count		8636869	1					
ANR	8637223	AssignmentExpression	"count = display_rc ( & d , strict )"		8636869	2		=			
ANR	8637224	Identifier	count		8636869	0					
ANR	8637225	CallExpression	"display_rc ( & d , strict )"		8636869	1					
ANR	8637226	Callee	display_rc		8636869	0					
ANR	8637227	Identifier	display_rc		8636869	0					
ANR	8637228	ArgumentList	& d		8636869	1					
ANR	8637229	Argument	& d		8636869	0					
ANR	8637230	UnaryOperationExpression	& d		8636869	0					
ANR	8637231	UnaryOperator	&		8636869	0					
ANR	8637232	Identifier	d		8636869	1					
ANR	8637233	Argument	strict		8636869	1					
ANR	8637234	Identifier	strict		8636869	0					
ANR	8637235	IdentifierDecl	new_count		8636869	1					
ANR	8637236	IdentifierDeclType	int		8636869	0					
ANR	8637237	Identifier	new_count		8636869	1					
ANR	8637238	IdentifierDeclStatement	const char * result ;	1216:9:35017:35035	8636869	3	True				
ANR	8637239	IdentifierDecl	* result		8636869	0					
ANR	8637240	IdentifierDeclType	const char *		8636869	0					
ANR	8637241	Identifier	result		8636869	1					
ANR	8637242	IdentifierDeclStatement	int arg_count = 0 ;	1217:9:35046:35063	8636869	4	True				
ANR	8637243	IdentifierDecl	arg_count = 0		8636869	0					
ANR	8637244	IdentifierDeclType	int		8636869	0					
ANR	8637245	Identifier	arg_count		8636869	1					
ANR	8637246	AssignmentExpression	arg_count = 0		8636869	2		=			
ANR	8637247	Identifier	arg_count		8636869	0					
ANR	8637248	PrimaryExpression	0		8636869	1					
ANR	8637249	WhileStatement	while ( * next )		8636869	5					
ANR	8637250	Condition	* next	1219:16:35082:35086	8636869	0	True				
ANR	8637251	UnaryOperationExpression	* next		8636869	0					
ANR	8637252	UnaryOperator	*		8636869	0					
ANR	8637253	Identifier	next		8636869	1					
ANR	8637254	ExpressionStatement	"++ next , ++ arg_count"	1219:23:35089:35108	8636869	1	True				
ANR	8637255	Expression	"++ next , ++ arg_count"		8636869	0					
ANR	8637256	UnaryExpression	++ next		8636869	0					
ANR	8637257	IncDec	++		8636869	0					
ANR	8637258	Identifier	next		8636869	1					
ANR	8637259	UnaryExpression	++ arg_count		8636869	1					
ANR	8637260	IncDec	++		8636869	0					
ANR	8637261	Identifier	arg_count		8636869	1					
ANR	8637262	ExpressionStatement	"perform_one_test_safe ( fp , arg_count , test , default_flags , & d , this_test )"	1221:9:35120:35204	8636869	6	True				
ANR	8637263	CallExpression	"perform_one_test_safe ( fp , arg_count , test , default_flags , & d , this_test )"		8636869	0					
ANR	8637264	Callee	perform_one_test_safe		8636869	0					
ANR	8637265	Identifier	perform_one_test_safe		8636869	0					
ANR	8637266	ArgumentList	fp		8636869	1					
ANR	8637267	Argument	fp		8636869	0					
ANR	8637268	Identifier	fp		8636869	0					
ANR	8637269	Argument	arg_count		8636869	1					
ANR	8637270	Identifier	arg_count		8636869	0					
ANR	8637271	Argument	test		8636869	2					
ANR	8637272	Identifier	test		8636869	0					
ANR	8637273	Argument	default_flags		8636869	3					
ANR	8637274	Identifier	default_flags		8636869	0					
ANR	8637275	Argument	& d		8636869	4					
ANR	8637276	UnaryOperationExpression	& d		8636869	0					
ANR	8637277	UnaryOperator	&		8636869	0					
ANR	8637278	Identifier	d		8636869	1					
ANR	8637279	Argument	this_test		8636869	5					
ANR	8637280	Identifier	this_test		8636869	0					
ANR	8637281	ExpressionStatement	"new_count = display_rc ( & d , strict )"	1224:9:35216:35250	8636869	7	True				
ANR	8637282	AssignmentExpression	"new_count = display_rc ( & d , strict )"		8636869	0		=			
ANR	8637283	Identifier	new_count		8636869	0					
ANR	8637284	CallExpression	"display_rc ( & d , strict )"		8636869	1					
ANR	8637285	Callee	display_rc		8636869	0					
ANR	8637286	Identifier	display_rc		8636869	0					
ANR	8637287	ArgumentList	& d		8636869	1					
ANR	8637288	Argument	& d		8636869	0					
ANR	8637289	UnaryOperationExpression	& d		8636869	0					
ANR	8637290	UnaryOperator	&		8636869	0					
ANR	8637291	Identifier	d		8636869	1					
ANR	8637292	Argument	strict		8636869	1					
ANR	8637293	Identifier	strict		8636869	0					
ANR	8637294	IfStatement	if ( new_count == count )		8636869	8					
ANR	8637295	Condition	new_count == count	1226:13:35266:35283	8636869	0	True				
ANR	8637296	EqualityExpression	new_count == count		8636869	0		==			
ANR	8637297	Identifier	new_count		8636869	0					
ANR	8637298	Identifier	count		8636869	1					
ANR	8637299	ExpressionStatement	"result = ""PASS"""	1227:12:35298:35313	8636869	1	True				
ANR	8637300	AssignmentExpression	"result = ""PASS"""		8636869	0		=			
ANR	8637301	Identifier	result		8636869	0					
ANR	8637302	PrimaryExpression	"""PASS"""		8636869	1					
ANR	8637303	ElseStatement	else		8636869	0					
ANR	8637304	ExpressionStatement	"result = ""FAIL"""	1230:12:35342:35357	8636869	0	True				
ANR	8637305	AssignmentExpression	"result = ""FAIL"""		8636869	0		=			
ANR	8637306	Identifier	result		8636869	0					
ANR	8637307	PrimaryExpression	"""FAIL"""		8636869	1					
ANR	8637308	ExpressionStatement	"printf ( ""%s: %s %s\\n"" , result , d . program , this_test )"	1232:9:35369:35420	8636869	9	True				
ANR	8637309	CallExpression	"printf ( ""%s: %s %s\\n"" , result , d . program , this_test )"		8636869	0					
ANR	8637310	Callee	printf		8636869	0					
ANR	8637311	Identifier	printf		8636869	0					
ANR	8637312	ArgumentList	"""%s: %s %s\\n"""		8636869	1					
ANR	8637313	Argument	"""%s: %s %s\\n"""		8636869	0					
ANR	8637314	PrimaryExpression	"""%s: %s %s\\n"""		8636869	0					
ANR	8637315	Argument	result		8636869	1					
ANR	8637316	Identifier	result		8636869	0					
ANR	8637317	Argument	d . program		8636869	2					
ANR	8637318	MemberAccess	d . program		8636869	0					
ANR	8637319	Identifier	d		8636869	0					
ANR	8637320	Identifier	program		8636869	1					
ANR	8637321	Argument	this_test		8636869	3					
ANR	8637322	Identifier	this_test		8636869	0					
ANR	8637323	ExpressionStatement	test = next + 1	1234:9:35432:35445	8636869	10	True				
ANR	8637324	AssignmentExpression	test = next + 1		8636869	0		=			
ANR	8637325	Identifier	test		8636869	0					
ANR	8637326	AdditiveExpression	next + 1		8636869	1		+			
ANR	8637327	Identifier	next		8636869	0					
ANR	8637328	PrimaryExpression	1		8636869	1					
ANR	8637329	ExpressionStatement	fclose ( fp )	1238:3:35464:35474	8636869	38	True				
ANR	8637330	CallExpression	fclose ( fp )		8636869	0					
ANR	8637331	Callee	fclose		8636869	0					
ANR	8637332	Identifier	fclose		8636869	0					
ANR	8637333	ArgumentList	fp		8636869	1					
ANR	8637334	Argument	fp		8636869	0					
ANR	8637335	Identifier	fp		8636869	0					
ANR	8637336	IfStatement	"if ( display_rc ( & d , strict ) == 0 )"		8636869	39					
ANR	8637337	Condition	"display_rc ( & d , strict ) == 0"	1240:7:35484:35510	8636869	0	True				
ANR	8637338	EqualityExpression	"display_rc ( & d , strict ) == 0"		8636869	0		==			
ANR	8637339	CallExpression	"display_rc ( & d , strict )"		8636869	0					
ANR	8637340	Callee	display_rc		8636869	0					
ANR	8637341	Identifier	display_rc		8636869	0					
ANR	8637342	ArgumentList	& d		8636869	1					
ANR	8637343	Argument	& d		8636869	0					
ANR	8637344	UnaryOperationExpression	& d		8636869	0					
ANR	8637345	UnaryOperator	&		8636869	0					
ANR	8637346	Identifier	d		8636869	1					
ANR	8637347	Argument	strict		8636869	1					
ANR	8637348	Identifier	strict		8636869	0					
ANR	8637349	PrimaryExpression	0		8636869	1					
ANR	8637350	CompoundStatement		126:3:3382:3382	8636869	1					
ANR	8637351	IfStatement	if ( touch_file != NULL )		8636869	0					
ANR	8637352	Condition	touch_file != NULL	1243:10:35587:35604	8636869	0	True				
ANR	8637353	EqualityExpression	touch_file != NULL		8636869	0		!=			
ANR	8637354	Identifier	touch_file		8636869	0					
ANR	8637355	Identifier	NULL		8636869	1					
ANR	8637356	CompoundStatement		130:9:3490:3530	8636869	1					
ANR	8637357	IdentifierDeclStatement	"FILE * fsuccess = fopen ( touch_file , ""wt"" ) ;"	1245:9:35624:35664	8636869	0	True				
ANR	8637358	IdentifierDecl	"* fsuccess = fopen ( touch_file , ""wt"" )"		8636869	0					
ANR	8637359	IdentifierDeclType	FILE *		8636869	0					
ANR	8637360	Identifier	fsuccess		8636869	1					
ANR	8637361	AssignmentExpression	"* fsuccess = fopen ( touch_file , ""wt"" )"		8636869	2		=			
ANR	8637362	Identifier	fsuccess		8636869	0					
ANR	8637363	CallExpression	"fopen ( touch_file , ""wt"" )"		8636869	1					
ANR	8637364	Callee	fopen		8636869	0					
ANR	8637365	Identifier	fopen		8636869	0					
ANR	8637366	ArgumentList	touch_file		8636869	1					
ANR	8637367	Argument	touch_file		8636869	0					
ANR	8637368	Identifier	touch_file		8636869	0					
ANR	8637369	Argument	"""wt"""		8636869	1					
ANR	8637370	PrimaryExpression	"""wt"""		8636869	0					
ANR	8637371	IfStatement	if ( fsuccess != NULL )		8636869	1					
ANR	8637372	Condition	fsuccess != NULL	1247:13:35680:35695	8636869	0	True				
ANR	8637373	EqualityExpression	fsuccess != NULL		8636869	0		!=			
ANR	8637374	Identifier	fsuccess		8636869	0					
ANR	8637375	Identifier	NULL		8636869	1					
ANR	8637376	CompoundStatement		134:12:3587:3598	8636869	1					
ANR	8637377	IdentifierDeclStatement	int err = 0 ;	1249:12:35721:35732	8636869	0	True				
ANR	8637378	IdentifierDecl	err = 0		8636869	0					
ANR	8637379	IdentifierDeclType	int		8636869	0					
ANR	8637380	Identifier	err		8636869	1					
ANR	8637381	AssignmentExpression	err = 0		8636869	2		=			
ANR	8637382	Identifier	err		8636869	0					
ANR	8637383	PrimaryExpression	0		8636869	1					
ANR	8637384	ExpressionStatement	"fprintf ( fsuccess , ""PNG unknown tests succeeded\\n"" )"	1250:12:35746:35796	8636869	1	True				
ANR	8637385	CallExpression	"fprintf ( fsuccess , ""PNG unknown tests succeeded\\n"" )"		8636869	0					
ANR	8637386	Callee	fprintf		8636869	0					
ANR	8637387	Identifier	fprintf		8636869	0					
ANR	8637388	ArgumentList	fsuccess		8636869	1					
ANR	8637389	Argument	fsuccess		8636869	0					
ANR	8637390	Identifier	fsuccess		8636869	0					
ANR	8637391	Argument	"""PNG unknown tests succeeded\\n"""		8636869	1					
ANR	8637392	PrimaryExpression	"""PNG unknown tests succeeded\\n"""		8636869	0					
ANR	8637393	ExpressionStatement	fflush ( fsuccess )	1251:12:35810:35826	8636869	2	True				
ANR	8637394	CallExpression	fflush ( fsuccess )		8636869	0					
ANR	8637395	Callee	fflush		8636869	0					
ANR	8637396	Identifier	fflush		8636869	0					
ANR	8637397	ArgumentList	fsuccess		8636869	1					
ANR	8637398	Argument	fsuccess		8636869	0					
ANR	8637399	Identifier	fsuccess		8636869	0					
ANR	8637400	ExpressionStatement	err = ferror ( fsuccess )	1252:12:35840:35862	8636869	3	True				
ANR	8637401	AssignmentExpression	err = ferror ( fsuccess )		8636869	0		=			
ANR	8637402	Identifier	err		8636869	0					
ANR	8637403	CallExpression	ferror ( fsuccess )		8636869	1					
ANR	8637404	Callee	ferror		8636869	0					
ANR	8637405	Identifier	ferror		8636869	0					
ANR	8637406	ArgumentList	fsuccess		8636869	1					
ANR	8637407	Argument	fsuccess		8636869	0					
ANR	8637408	Identifier	fsuccess		8636869	0					
ANR	8637409	IfStatement	if ( fclose ( fsuccess ) || err )		8636869	4					
ANR	8637410	Condition	fclose ( fsuccess ) || err	1254:16:35881:35903	8636869	0	True				
ANR	8637411	OrExpression	fclose ( fsuccess ) || err		8636869	0		||			
ANR	8637412	CallExpression	fclose ( fsuccess )		8636869	0					
ANR	8637413	Callee	fclose		8636869	0					
ANR	8637414	Identifier	fclose		8636869	0					
ANR	8637415	ArgumentList	fsuccess		8636869	1					
ANR	8637416	Argument	fsuccess		8636869	0					
ANR	8637417	Identifier	fsuccess		8636869	0					
ANR	8637418	Identifier	err		8636869	1					
ANR	8637419	CompoundStatement		140:12:3784:3784	8636869	1					
ANR	8637420	ExpressionStatement	"fprintf ( stderr , ""%s: write failed\\n"" , touch_file )"	1256:15:35935:35984	8636869	0	True				
ANR	8637421	CallExpression	"fprintf ( stderr , ""%s: write failed\\n"" , touch_file )"		8636869	0					
ANR	8637422	Callee	fprintf		8636869	0					
ANR	8637423	Identifier	fprintf		8636869	0					
ANR	8637424	ArgumentList	stderr		8636869	1					
ANR	8637425	Argument	stderr		8636869	0					
ANR	8637426	Identifier	stderr		8636869	0					
ANR	8637427	Argument	"""%s: write failed\\n"""		8636869	1					
ANR	8637428	PrimaryExpression	"""%s: write failed\\n"""		8636869	0					
ANR	8637429	Argument	touch_file		8636869	2					
ANR	8637430	Identifier	touch_file		8636869	0					
ANR	8637431	ExpressionStatement	exit ( 99 )	1257:15:36001:36009	8636869	1	True				
ANR	8637432	CallExpression	exit ( 99 )		8636869	0					
ANR	8637433	Callee	exit		8636869	0					
ANR	8637434	Identifier	exit		8636869	0					
ANR	8637435	ArgumentList	99		8636869	1					
ANR	8637436	Argument	99		8636869	0					
ANR	8637437	PrimaryExpression	99		8636869	0					
ANR	8637438	ElseStatement	else		8636869	0					
ANR	8637439	CompoundStatement		147:9:3926:3926	8636869	0					
ANR	8637440	ExpressionStatement	"fprintf ( stderr , ""%s: open failed\\n"" , touch_file )"	1263:12:36074:36122	8636869	0	True				
ANR	8637441	CallExpression	"fprintf ( stderr , ""%s: open failed\\n"" , touch_file )"		8636869	0					
ANR	8637442	Callee	fprintf		8636869	0					
ANR	8637443	Identifier	fprintf		8636869	0					
ANR	8637444	ArgumentList	stderr		8636869	1					
ANR	8637445	Argument	stderr		8636869	0					
ANR	8637446	Identifier	stderr		8636869	0					
ANR	8637447	Argument	"""%s: open failed\\n"""		8636869	1					
ANR	8637448	PrimaryExpression	"""%s: open failed\\n"""		8636869	0					
ANR	8637449	Argument	touch_file		8636869	2					
ANR	8637450	Identifier	touch_file		8636869	0					
ANR	8637451	ExpressionStatement	exit ( 99 )	1264:12:36136:36144	8636869	1	True				
ANR	8637452	CallExpression	exit ( 99 )		8636869	0					
ANR	8637453	Callee	exit		8636869	0					
ANR	8637454	Identifier	exit		8636869	0					
ANR	8637455	ArgumentList	99		8636869	1					
ANR	8637456	Argument	99		8636869	0					
ANR	8637457	PrimaryExpression	99		8636869	0					
ANR	8637458	ReturnStatement	return 0 ;	1268:6:36172:36180	8636869	1	True				
ANR	8637459	PrimaryExpression	0		8636869	0					
ANR	8637460	ReturnStatement	return 1 ;	1271:3:36191:36199	8636869	40	True				
ANR	8637461	PrimaryExpression	1		8636869	0					
ANR	8637462	ReturnType	int		8636869	1					
ANR	8637463	Identifier	main		8636869	2					
ANR	8637464	ParameterList	"int argc , const char * * argv"		8636869	3					
ANR	8637465	Parameter	int argc	1115:5:32104:32111	8636869	0	True				
ANR	8637466	ParameterType	int		8636869	0					
ANR	8637467	Identifier	argc		8636869	1					
ANR	8637468	Parameter	const char * * argv	1115:15:32114:32130	8636869	1	True				
ANR	8637469	ParameterType	const char * *		8636869	0					
ANR	8637470	Identifier	argv		8636869	1					
ANR	8637471	CFGEntryNode	ENTRY		8636869		True				
ANR	8637472	CFGExitNode	EXIT		8636869		True				
ANR	8637473	Symbol	next		8636869						
ANR	8637474	Symbol	d . file		8636869						
ANR	8637475	Symbol	standard_tests		8636869						
ANR	8637476	Symbol	fp		8636869						
ANR	8637477	Symbol	* argv		8636869						
ANR	8637478	Symbol	this_test		8636869						
ANR	8637479	Symbol	* next		8636869						
ANR	8637480	Symbol	argv		8636869						
ANR	8637481	Symbol	result		8636869						
ANR	8637482	Symbol	d . program		8636869						
ANR	8637483	Symbol	count_argv		8636869						
ANR	8637484	Symbol	perform_one_test		8636869						
ANR	8637485	Symbol	strict		8636869						
ANR	8637486	Symbol	default_tests		8636869						
ANR	8637487	Symbol	* argc		8636869						
ANR	8637488	Symbol	argc		8636869						
ANR	8637489	Symbol	strcmp		8636869						
ANR	8637490	Symbol	fopen		8636869						
ANR	8637491	Symbol	init		8636869						
ANR	8637492	Symbol	NULL		8636869						
ANR	8637493	Symbol	d		8636869						
ANR	8637494	Symbol	test		8636869						
ANR	8637495	Symbol	err		8636869						
ANR	8637496	Symbol	fclose		8636869						
ANR	8637497	Symbol	count		8636869						
ANR	8637498	Symbol	& d		8636869						
ANR	8637499	Symbol	stderr		8636869						
ANR	8637500	Symbol	* test		8636869						
ANR	8637501	Symbol	* test ++		8636869						
ANR	8637502	Symbol	fsuccess		8636869						
ANR	8637503	Symbol	ferror		8636869						
ANR	8637504	Symbol	display_rc		8636869						
ANR	8637505	Symbol	touch_file		8636869						
ANR	8637506	Symbol	default_flags		8636869						
ANR	8637507	Symbol	d . test		8636869						
ANR	8637508	Symbol	* ++ argv		8636869						
ANR	8637509	Symbol	new_count		8636869						
ANR	8637510	Symbol	cmd		8636869						
ANR	8637511	Symbol	arg_count		8636869						
ANR	8637512	Function	main	1275:0:36259:36415							
ANR	8637513	FunctionDef	main ()		8637512	0					
ANR	8637514	CompoundStatement		1277:0:36274:36415	8637512	0					
ANR	8637515	ExpressionStatement	"fprintf ( stderr , "" test ignored: no support to find out about unknown chunks\\n"" )"	1278:3:36279:36364	8637512	0	True				
ANR	8637516	CallExpression	"fprintf ( stderr , "" test ignored: no support to find out about unknown chunks\\n"" )"		8637512	0					
ANR	8637517	Callee	fprintf		8637512	0					
ANR	8637518	Identifier	fprintf		8637512	0					
ANR	8637519	ArgumentList	stderr		8637512	1					
ANR	8637520	Argument	stderr		8637512	0					
ANR	8637521	Identifier	stderr		8637512	0					
ANR	8637522	Argument	""" test ignored: no support to find out about unknown chunks\\n"""		8637512	1					
ANR	8637523	PrimaryExpression	""" test ignored: no support to find out about unknown chunks\\n"""		8637512	0					
ANR	8637524	ReturnStatement	return SKIP ;	1281:3:36402:36413	8637512	1	True				
ANR	8637525	Identifier	SKIP		8637512	0					
ANR	8637526	ReturnType	int		8637512	1					
ANR	8637527	Identifier	main		8637512	2					
ANR	8637528	ParameterList			8637512	3					
ANR	8637529	CFGEntryNode	ENTRY		8637512		True				
ANR	8637530	CFGExitNode	EXIT		8637512		True				
ANR	8637531	Symbol	SKIP		8637512						
ANR	8637532	Symbol	stderr		8637512						
ANR	8637533	Function	main	1286:0:36513:36669							
ANR	8637534	FunctionDef	main ()		8637533	0					
ANR	8637535	CompoundStatement		1288:0:36528:36669	8637533	0					
ANR	8637536	ExpressionStatement	"fprintf ( stderr , "" test ignored: no support to modify unknown chunk handling\\n"" )"	1289:3:36533:36618	8637533	0	True				
ANR	8637537	CallExpression	"fprintf ( stderr , "" test ignored: no support to modify unknown chunk handling\\n"" )"		8637533	0					
ANR	8637538	Callee	fprintf		8637533	0					
ANR	8637539	Identifier	fprintf		8637533	0					
ANR	8637540	ArgumentList	stderr		8637533	1					
ANR	8637541	Argument	stderr		8637533	0					
ANR	8637542	Identifier	stderr		8637533	0					
ANR	8637543	Argument	""" test ignored: no support to modify unknown chunk handling\\n"""		8637533	1					
ANR	8637544	PrimaryExpression	""" test ignored: no support to modify unknown chunk handling\\n"""		8637533	0					
ANR	8637545	ReturnStatement	return SKIP ;	1292:3:36656:36667	8637533	1	True				
ANR	8637546	Identifier	SKIP		8637533	0					
ANR	8637547	ReturnType	int		8637533	1					
ANR	8637548	Identifier	main		8637533	2					
ANR	8637549	ParameterList			8637533	3					
ANR	8637550	CFGEntryNode	ENTRY		8637533		True				
ANR	8637551	CFGExitNode	EXIT		8637533		True				
ANR	8637552	Symbol	SKIP		8637533						
ANR	8637553	Symbol	stderr		8637533						
